0000000000000000
::::::::::::::::
----------------,
////////////////
MbP?
.Amarker
mips32
mips64
01234567
0123456789abcdefABCDEF
0123456789
/=-+*%<>!&|^~.?
 n;^
Qkkbal
i]Wb
9a&g
MGiI
wn>Jj
#.zf
+o*7
()^$|*+?.[]\{}
()^$|+?[]\{}
                                                                                
[0;30m
[0;31m
[0;32m
[0;33m
[0;34m
[0;35m
[0;36m
[0;37m
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;40m
[0;41m
[0;42m
[0;43m
[0;44m
[0;45m
[0;46m
[0;47m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
swiftdoc
swiftdoc
SwiftOnoneSupport
Swift
Swift
Swift
Swift
SwiftOnoneSupport
SwiftOnoneSupport
Swift
swiftmodule
KCRef
MenuRef
CFBagRef
CFSetRef
CFURLRef
CTRunRef
CFDataRef
CFDateRef
CFHostRef
CFNullRef
CFTreeRef
CFTypeRef
CFUUIDRef
CGFontRef
CGPathRef
CTFontRef
CTLineRef
DADiskRef
DRBurnRef
DRFileRef
DRTypeRef
HIViewRef
KCItemRef
LSMMapRef
MDItemRef
ODNodeRef
SecACLRef
SecKeyRef
ABGroupRef
AXValueRef
CFArrayRef
CFErrorRef
CGColorRef
CGEventRef
CGImageRef
CGLayerRef
CMClockRef
CTFrameRef
ControlRef
DREraseRef
DRTrackRef
HIShapeRef
InkTextRef
LSMTextRef
MDLabelRef
MDQueryRef
ODQueryRef
SKIndexRef
SecCodeRef
SecTaskRef
ABPersonRef
ABPickerRef
ABRecordRef
CFBundleRef
CFLocaleRef
CFNumberRef
CFPlugInRef
CFSocketRef
CFStringRef
CGRegionRef
CMBufferRef
CVBufferRef
DRDeviceRef
DRFolderRef
HIObjectRef
KCSearchRef
ODRecordRef
SKSearchRef
SecTrustRef
CFBooleanRef
CFRunLoopRef
CFXMLNodeRef
CFXMLTreeRef
CGContextRef
CGPDFPageRef
CGPatternRef
CGShadingRef
CTTextTabRef
DASessionRef
HIArchiveRef
HIToolbarRef
IOSurfaceRef
InkStrokeRef
LSMResultRef
NavDialogRef
ODContextRef
ODSessionRef
SKSummaryRef
SecAccessRef
SecPolicyRef
VTSessionRef
AXObserverRef
CFCalendarRef
CFMachPortRef
CFTimeZoneRef
CGFunctionRef
CGGradientRef
CMSDecoderRef
CMSEncoderRef
CMTimebaseRef
CSIdentityRef
DRFSObjectRef
IOHIDQueueRef
IOHIDValueRef
PasteboardRef
SKDocumentRef
SSLContextRef
AXUIElementRef
CFAllocatorRef
CFBitVectorRef
CFXMLParserRef
CTGlyphInfoRef
DADissenterRef
IOHIDDeviceRef
QLThumbnailRef
SecIdentityRef
SecKeychainRef
SecPasswordRef
TranslationRef
VTFrameSiloRef
ABMultiValueRef
CFBinaryHeapRef
CFDictionaryRef
CFMutableBagRef
CFMutableSetRef
CFNetServiceRef
CFReadStreamRef
CGColorSpaceRef
CMMemoryPoolRef
CTTypesetterRef
ColorSyncCMMRef
DRAudioTrackRef
IOHIDElementRef
IOHIDManagerRef
JRSUIControlRef
SCBondStatusRef
SCNetworkSetRef
SecTransformRef
ABAddressBookRef
CFHTTPMessageRef
CFMessagePortRef
CFMutableDataRef
CFWriteStreamRef
CGDisplayModeRef
CGEventSourceRef
CGImageSourceRef
CGMutablePathRef
CGPDFDocumentRef
CGPSConverterRef
CMBlockBufferRef
CMBufferQueueRef
CMSimpleQueueRef
CTFramesetterRef
CTRunDelegateRef
CVDisplayLinkRef
CVImageBufferRef
CVPixelBufferRef
DCSDictionaryRef
DRBurnSessionRef
DRCDTextBlockRef
HIObjectClassRef
HIToolbarItemRef
JRSUIRendererRef
MouseTrackingRef
SCPreferencesRef
SKSearchGroupRef
SecStaticCodeRef
CFCharacterSetRef
CFFileSecurityRef
CFMutableArrayRef
CFPropertyListRef
CFRunLoopTimerRef
CGDataConsumerRef
CGDataProviderRef
CMSampleBufferRef
CVMetalTextureRef
CVOpenGLBufferRef
DREraseSessionRef
EventLoopTimerRef
FSFileSecurityRef
GLKMatrixStackRef
HIMutableShapeRef
SCDynamicStoreRef
SecCertificateRef
SecRequirementRef
TISInputSourceRef
ABSearchElementRef
CFDateFormatterRef
CFMutableStringRef
CFNetDiagnosticRef
CFRunLoopSourceRef
CFURLEnumeratorRef
CGDisplayStreamRef
CGImageMetadataRef
CSIdentityQueryRef
CVOpenGLTextureRef
FSFileOperationRef
QLPreviewBubbleRef
SCBondInterfaceRef
SCVLANInterfaceRef
SKSearchResultsRef
SecKeychainItemRef
SecPolicySearchRef
vImageConverterRef
CFFileDescriptorRef
CFPlugInInstanceRef
CTFontCollectionRef
CTFontDescriptorRef
CTParagraphStyleRef
CTRubyAnnotationRef
ColorSyncProfileRef
FCFontDescriptorRef
IOHIDTransactionRef
LSSharedFileListRef
QLPreviewRequestRef
SCNetworkServiceRef
SecAccessControlRef
CFNumberFormatterRef
CFRunLoopObserverRef
CFStringTokenizerRef
CGSWindowBackdropRef
CMClockOrTimebaseRef
CVOpenGLESTextureRef
CVPixelBufferPoolRef
DAApprovalSessionRef
DRFilesystemTrackRef
IOBluetoothDeviceRef
IOBluetoothObjectRef
SCNetworkProtocolRef
SecGroupTransformRef
SecIdentitySearchRef
SecKeychainSearchRef
WSProtocolHandlerRef
CFAttributedStringRef
CFMutableBitVectorRef
CFUserNotificationRef
CGImageDestinationRef
CGImageMetadataTagRef
CGRegionEnumeratorRef
CMAttachmentBearerRef
CVOpenGLBufferPoolRef
ColorSyncTransformRef
IOBluetoothSDPUUIDRef
QLThumbnailRequestRef
SCNetworkInterfaceRef
VTMultiPassStorageRef
WSMethodInvocationRef
ABMutableMultiValueRef
CFMutableDictionaryRef
CFNetServiceBrowserRef
CFNetServiceMonitorRef
CMFormatDescriptionRef
CSIdentityAuthorityRef
CVMetalTextureCacheRef
SCNetworkConnectionRef
vImageCVImageFormatRef
CFHTTPAuthenticationRef
CFNotificationCenterRef
CVOpenGLTextureCacheRef
DRNotificationCenterRef
LSSharedFileListItemRef
MTAudioProcessingTapRef
VTCompressionSessionRef
CFMutableCharacterSetRef
CGDisplayStreamUpdateRef
SCNetworkReachabilityRef
SecTransformAttributeRef
SecTrustedApplicationRef
CGMutableImageMetadataRef
CVOpenGLESTextureCacheRef
VTDecompressionSessionRef
VTPixelTransferSessionRef
CMTextFormatDescriptionRef
CTMutableFontCollectionRef
ColorSyncMutableProfileRef
IOBluetoothL2CAPChannelRef
SKIndexDocumentIteratorRef
CMAudioFormatDescriptionRef
CMMuxedFormatDescriptionRef
CMVideoFormatDescriptionRef
IOBluetoothRFCOMMChannelRef
vImageConstCVImageFormatRef
CFMutableAttributedStringRef
IOBluetoothSDPDataElementRef
CMMetadataFormatDescriptionRef
CMTimeCodeFormatDescriptionRef
IOBluetoothSDPServiceRecordRef
IOBluetoothUserNotificationRef
IOBluetoothPairingControllerRef
QTComponentPropertyListenersRef
 SecTransformStringOrAttributeRef
#CMClosedCaptionFormatDescriptionRef
&IOBluetoothDeviceSelectorControllerRef
&IOBluetoothServiceBrowserControllerRef
__ObjC
WithError
Swift
SwiftShims
__lldb_expr_
AndReturnError
Swift
local-exec
mips1
mips2
mips32r2
mips32r3
mips32r5
mips32r6
mips3
mips4
mips5
mips64r2
mips64r3
mips64r5
mips64r6
hexagonv4
hexagonv55
hexagonv5
hexagonv60
hexagonv62
no-invalid-source-encoding
invalid-source-encoding
no-macro-redefined
no-unused-parameter
no-dllexport-explicit-instantiation-decl
no-deprecated-declarations
no-error
error
error=c++11-compat-deprecated-writable-strings
-fmodules-cache-path=
-fxray-instrument
-fxray-instruction-threshold=
0123456789abcdef
,/\:. 
apinotesc
apinotes
#pragma-messages
#warnings
CFString-literal
IndependentClass-attribute
NSObject-attribute
absolute-value
abstract-final-class
abstract-vbase-init
address
address-of-array-temporary
address-of-packed-member
address-of-temporary
aggregate-return
aligned-allocation-unavailable
alloca-with-align-alignof
ambiguous-delete
ambiguous-ellipsis
ambiguous-macro
ambiguous-member-template
analyzer-incompatible-plugin
anonymous-pack-parens
apinotes
arc%arc-bridge-casts-disallowed-in-nonarc
arc-maybe-repeated-use-of-weak
arc-non-pod-memaccess
arc-performSelector-leaks
arc-repeated-use-of-weak
arc-retain-cycles
arc-unsafe-retained-assignarray-bounds
array-bounds-pointer-arithmetic
asm-ignored-qualifier
asm-operand-widths
assign-enum
assume
at-protocol
atomic-memory-ordering
atomic-properties*atomic-property-with-user-defined-accessor
attribute-packed-for-bitfield
attributes
auto-disable-vptr-sanitizer
auto-import
auto-storage-class
auto-var-idavailability
backend-plugin
backslash-newline-escape
bad-function-cast
bind-to-temporary-copy
bitfield-constant-conversion
bitfield-enum-conversion
bitfield-width
bitwise-op-parentheses
block-capture-autoreleasing
bool-conversion
bool-conversions
braced-scalar-init
bridge-cast
builtin-macro-redefined
builtin-memcpy-chk-size
builtin-requires-header
c++-compatc++0x-compat
c++0x-extensions
c++0x-narrowingc++11-compat(c++11-compat-deprecated-writable-strings
c++11-compat-pedantic*c++11-compat-reserved-user-defined-literal
c++11-extensions
c++11-extra-semi
c++11-inline-namespace
c++11-long-long
c++11-narrowing
c++14-binary-literalc++14-compat
c++14-compat-pedantic
c++14-extensionsc++17-compat
c++17-compat-mangling
c++17-extensions
c++1y-extensionsc++1z-compat
c++1z-compat-mangling
c++1z-extensions
c++98-c++11-c++14-compat!c++98-c++11-c++14-compat-pedantic
c++98-c++11-compat
c++98-c++11-compat-pedanticc++98-compat#c++98-compat-bind-to-temporary-copy%c++98-compat-local-type-template-args
c++98-compat-pedantic'c++98-compat-unnamed-type-template-args
c11-extensions
c99-compat
c99-extensions
cast-align
cast-calling-convention
cast-of-sel-type
cast-qual
char-align
char-subscriptsclang-cl-pch
class-varargs
comma
comment
comments
compare-distinct-pointer-types
complex-component-init
conditional-type-mismatch
conditional-uninitialized
config-macros
constant-conversion
constant-logical-operand
constexpr-not-const
consumed
conversion
conversion-null
coroutine%coroutine-missing-unhandled-exception
covered-switch-default
cstring-format-directive
ctor-dtor-privacy
cuda-compat
custom-atomic-properties
dangling-else
dangling-field
dangling-initializer-list
date-time
dealloc-in-category
debug-compression-unavailable
declaration-after-statement
delegating-ctor-cycles
delete-incomplete
delete-non-virtual-dtor
deprecated
deprecated-attributes
deprecated-declarations!deprecated-dynamic-exception-spec
deprecated-implementations
deprecated-increment-bool
deprecated-objc-isa-usage%deprecated-objc-pointer-introspection5deprecated-objc-pointer-introspection-performSelector
deprecated-register
deprecated-writable-strings
direct-ivar-access
disabled-macro-expansion
disabled-optimizationdiscard-qual
distributed-object-modifiers
div-by-zero
division-by-zero
dll-attribute-on-redeclaration%dllexport-explicit-instantiation-decl
dllimport-static-field-def
documentation
documentation-deprecated-sync
documentation-html
documentation-pedantic
documentation-unknown-command
dollar-in-identifier-extension
double-promotion
duplicate-decl-specifier
duplicate-enum
duplicate-method-arg
duplicate-method-match
duplicate-protocol
dynamic-class-memaccess
dynamic-exception-spec
effc++
embedded-directive
empty-body
empty-decomposition
empty-translation-unit
encode-typeendif-labelsenum-compare
enum-conversion
enum-too-large
exceptions
exit-time-destructors
expansion-to-defined
explicit-initialize-call
explicit-ownership-type
extended-offsetof
extern-c-compat
extern-initializer
extra
extra-qualification
extra-semiextra-tokens
fallback
flag-enum
flexible-array-extensions
float-conversion
float-equal
float-overflow-conversion
float-zero-conversion
for-loop-analysis
format
format-extra-args
format-invalid-specifier
format-non-iso
format-nonliteral
format-pedantic
format-security
format-y2k
format-zero-length
format=2
four-char-constants
frame-larger-than=
function-def-in-objc-container
future-compat
gcc-compat
global-constructors
gnu-alignof-expression
gnu-anonymous-struct
gnu-array-member-paren-init
gnu-auto-type
gnu-binary-literal
gnu-case-range
gnu-complex-integer gnu-compound-literal-initializer
gnu-conditional-omitted-operand
gnu-designator
gnu-empty-initializer
gnu-empty-struct
gnu-flexible-array-initializer
gnu-flexible-array-union-member
gnu-folding-constant
gnu-imaginary-constant
gnu-include-next
gnu-label-as-value
gnu-redeclared-enum
gnu-statement-expression
gnu-static-float-init$gnu-string-literal-operator-template
gnu-union-cast"gnu-variable-sized-type-not-at-end
gnu-zero-line-directive!gnu-zero-variadic-macro-argumentsheader-guard
header-hygiene
idiomatic-parentheses
ignored-attributes
ignored-optimization-argument
ignored-pragma-intrinsic
ignored-pragmas
ignored-qualifiers
implicit
implicit-atomic-properties*implicit-conversion-floating-point-to-bool implicit-exception-spec-mismatch
implicit-fallthrough!implicit-fallthrough-per-function
implicit-function-declarationimplicit-int
implicit-retain-self
implicitly-unsigned-literal
import&import-preprocessor-directive-pedantic
inaccessible-base
include-next-absolute-path
include-next-outside-header
incompatible-exception-spec#incompatible-function-pointer-types"incompatible-library-redeclaration
incompatible-ms-struct
incompatible-pointer-types.incompatible-pointer-types-discards-qualifiers
incompatible-property-type
incompatible-sysroot
incomplete-implementation
incomplete-module
incomplete-umbrella
inconsistent-dllimport(inconsistent-missing-destructor-override
inconsistent-missing-override
increment-bool
index-store
infinite-recursion
init-self
initializer-overrides
injected-class-name
inline
inline-asm
inline-new-delete"instantiation-after-specialization
int-conversion
int-conversions
int-to-pointer-cast
int-to-void-pointer-cast
integer-overflow
invalid-command-line-argument
invalid-constexpr
invalid-iboutlet&invalid-initializer-from-system-header
invalid-ios-deployment-target
invalid-noreturn
invalid-offsetof invalid-or-nonexistent-directory
invalid-partial-specialization
invalid-pch
invalid-pp-token
invalid-source-encoding
invalid-token-paste
jump-seh-finally
keyword-compat
keyword-macro
knr-promoted-parameter
language-extension-token
large-by-value-copy
liblto
literal-conversion
literal-range
local-type-template-args
logical-not-parentheses
logical-op-parentheses
long-long
loop-analysis
macro-redefined
main
main-return-type
malformed-warning-check
many-braces-around-scalar-init
max-unsigned-zero
memsize-comparison
method-signatures
microsoft
microsoft-anon-tag
microsoft-cast
microsoft-charize
microsoft-comment-paste
microsoft-const-init
microsoft-cpp-macro"microsoft-default-arg-redefinition
microsoft-end-of-file microsoft-enum-forward-reference
microsoft-enum-value
microsoft-exception-spec
microsoft-exists#microsoft-explicit-constructor-call
microsoft-extra-qualification
microsoft-fixed-enum
microsoft-flexible-array
microsoft-goto
microsoft-include
microsoft-mutable-reference
microsoft-pure-definition
microsoft-redeclare-static
microsoft-sealed
microsoft-template microsoft-union-member-reference
microsoft-unqualified-friend
microsoft-using-decl
microsoft-void-pseudo-dtor
mismatched-new-delete
mismatched-parameter-types
mismatched-return-types
mismatched-tags
missing-braces
missing-declarations
missing-exception-spec
missing-field-initializers
missing-format-attribute
missing-include-dirs
missing-method-return-type
missing-noreturn
missing-prototype-for-cc
missing-prototypes
missing-selector-name
missing-sysroot
missing-variable-declarationsmodule-build
module-conflict
module-file-config-mismatch
module-file-extension
module-import-in-extern-c"modules-ambiguous-internal-linkage
modules-import-nested-redundant
most
movemsvc-include
msvc-not-found
multichar
multiple-move-vbase
narrowing
nested-anon-types
nested-externs
new-returns-null
newline-eof
noexcept-type
non-gcc
non-literal-null-conversion'non-modular-include-in-framework-module
non-modular-include-in-module
non-pod-varargs
non-virtual-dtor
nonnull
nonportable-cfstrings
nonportable-include-path
nonportable-system-include-path!nonportable-vector-initialization
null-arithmetic
null-character
null-conversion
null-dereference
nullability
nullability-completeness"nullability-completeness-on-arrays
nullability-declspec
nullability-extension#nullability-inferred-on-nested-type
nullable-to-nonnull-conversion+objc-autosynthesis-property-ivar-name-match
objc-circular-container
objc-cocoa-api
objc-designated-initializers
objc-forward-class-redefinition
objc-interface-ivars
objc-literal-compare
objc-literal-conversion
objc-macro-redefinition
objc-method-access
objc-missing-property-synthesis
objc-missing-super-calls
objc-multiple-method-names"objc-noncopy-retain-block-property
objc-nonunified-exceptions
objc-property-implementation
objc-property-implicit-mismatch*objc-property-matches-cocoa-ownership-rule
objc-property-no-attribute
objc-property-synthesis#objc-protocol-method-implementation objc-protocol-property-synthesis
objc-protocol-qualifiers"objc-readonly-with-setter-property
objc-redundant-api-use
objc-redundant-literal-use
objc-root-class
objc-string-compare
objc-string-concatenation
objc-unsafe-perform-selector
objc-weak-compat
old-style-cast
old-style-definition
opencl-unsupported-rgba
openmp-clauses
openmp-loop-form
openmp-target
option-ignored
out-of-line-declarationover-aligned
overflow
overlength-strings
overloaded-shift-op-parentheses
overloaded-virtual
override-module
overriding-method-mismatch
overriding-t-option
packed
padded
parentheses
parentheses-equality
partial-availability
pass
pass-analysis
pass-failed
pass-missed
pch-date-time
pedantic
pedantic-core-features
pessimizing-move
pointer-arith
pointer-bool-conversionpointer-sign
pointer-to-int-cast
pointer-type-mismatch potentially-evaluated-expression
pragma-clang-attribute
pragma-once-outside-header#pragma-system-header-outside-header
pragmas&predefined-identifier-outside-function
private-extern
private-header
private-module
profile-instr-missing
profile-instr-out-of-date
profile-instr-unprofiled
property-access-dot-syntax
property-attribute-mismatch
protocol%protocol-property-synthesis-ambiguity
qualified-void-return-type
range-loop-analysis
readonly-iboutlet-property
receiver-expr
receiver-forward-class
redeclared-class-member
redundant-decls
redundant-move
register
reinterpret-base-class
remark-backend-plugin
reorder
requires-super-attribute
reserved-id-macro
reserved-user-defined-literal
retained-language-linkage
return-stack-address
return-type
return-type-c-linkage
rtti-for-exceptions
sanitize-address
section
selector
selector-type-mismatch
self-assign
self-assign-field
self-move
semicolon-before-method-body
sentinel
sequence-point
serialized-diagnostics
shadow
shadow-allshadow-field
shadow-field-in-constructor$shadow-field-in-constructor-modified
shadow-ivar
shadow-uncaptured-local
shift-count-negative
shift-count-overflow
shift-negative-value
shift-op-parentheses
shift-overflow
shift-sign-overflow
shorten-64-to-32sign-compare
sign-conversion
sign-promo
signed-enum-bitfield
sizeof-array-argument
sizeof-array-decay
sizeof-pointer-memaccess
slash-u-filename
sometimes-uninitialized
source-uses-openmp
spir-compat
stack-protector
static-float-init
static-in-inline$static-inline-explicit-instantiation
static-local-in-inline
static-self-init
strict-aliasing
strict-aliasing=0
strict-aliasing=1
strict-aliasing=2
strict-overflow
strict-overflow=0
strict-overflow=1
strict-overflow=2
strict-overflow=3
strict-overflow=4
strict-overflow=5
strict-prototypes
strict-selector-match
string-compare
string-conversion
string-plus-char
string-plus-int
strlcpy-strlcat-sizestrncat-size
super-class-method-mismatch
swift-name-attribute
swift-newtype-attribute
switch
switch-bool
switch-default
switch-enum%sync-fetch-and-nand-semantics-changed
synth
tautological-compare*tautological-constant-out-of-range-compare
tautological-overlap-compare
tautological-pointer-compare
tautological-undefined-compare$tentative-definition-incomplete-type
thread-safety
thread-safety-analysis
thread-safety-attributes
thread-safety-beta
thread-safety-negative
thread-safety-precise
thread-safety-reference
thread-safety-verbose
trigraphs
type-limits
type-safety
typedef-redefinition
typename-missing
unable-to-open-stats-file
unavailable-declarations
undeclared-selector
undef
undefined-bool-conversion
undefined-func-template
undefined-inline
undefined-internal
undefined-reinterpret-cast
undefined-var-template
unevaluated-expression
unguarded-availability
unguarded-availability-new
unicode
unicode-whitespace
uninitialized
unknown-argument
unknown-attributes
unknown-escape-sequence
unknown-pragmas
unknown-sanitizers
unknown-warning-option
unnamed-type-template-args
unneeded-internal-declaration
unneeded-member-function
unreachable-code
unreachable-code-aggressive
unreachable-code-break
unreachable-code-loop-increment
unreachable-code-return
unsequenced
unsupported-availability-guard
unsupported-cb#unsupported-dll-base-class-template
unsupported-friend
unsupported-nan
unsupported-visibility
unusable-partial-specialization
unused
unused-argument
unused-command-line-argument
unused-comparison
unused-const-variable
unused-exception-parameter
unused-function
unused-getter-return-valueunused-label
unused-lambda-capture
unused-local-typedef
unused-local-typedefs
unused-macros
unused-member-function
unused-parameter
unused-private-field
unused-property-ivar
unused-result
unused-templateunused-value
unused-variable
unused-volatile-lvalue
used-but-marked-unused
user-defined-literals
user-defined-warnings
varargs
variadic-macros
vec-elem-size
vector-conversion
vector-conversionsvexing-parse
visibility
vla-extension
void-ptr-dereference
volatile-register-var
weak-template-vtablesweak-vtables
writable-strings
write-strings
zero-as-null-pointer-constant
zero-length-array
Register Allocation
regalloc
llvm.metadata
"""""""""""""""""""
"""""""""""
       
$$$$$$
%%%%%
%%%%%%%%%%
%%%%%%
&'''
((((
((((((((((((((((((()((
////////.
JJJJJJJ
JJJJJJJJJJJ
JJJJ@
?,,?
??,?
////a
////w
JJJJJJJ
JJJJJJJJJJJ
JJJJ???
??????
???????
++++q
++++q
MMLL
MMLL
MMLL
LLLLMMMMMM
LLLEMMMEMME
MMME
MMLL
MMLL
MMLL
MMLL
LLLLMMMMLLL
LLLLMMMMLLL
LLLLMMMMLL
MMLL
LLLLMMMMLLLLMMMMML
MMLL
MMLL
MMMD
LLLLMMMMLLL
LLLLMMMMLL
MMMD
LLLLMMMMLL
MMMD
...D...D...D...D...D...D..D
,,,,YYYY;;;;JJJJ,,,
,,,,YYYY;;;;JJJJ,,,
,,,,,,,
,,,,,,,
,,,,,,,
YYJJ;;,,JJ;;YYJJ;;,,JJ;;U99
YYJJ;;,,JJ;;YYJJ;;,,JJ;;U99
zzzz
zzzz
;;;;JJJJ;;;;JJJJUD
,,,,YYYY;;;;JJJJU99
;;;;JJJJ;;;;JJJJUD
,,,,YYYY;;;;JJJJU
,,,,YYYY;;;;JJJJ@
PD33PD33PD33PDDDPDDDPDDDPD33PD33PD33P4
PD33PD33PD33PDDDPDDDPDDDPD33PD33PD33PD4
PD33PDDDPD33P4
PD33PDDDPD33PD4
,,,,,,,
zzzzzzz
;;;;;;;;zzz
;;;;J,,JJ;;JJ;;JJ,,JJ;;JJ;;J;,,
zzzzJJJ,;JJ
YYYYYYY
JJJJJJJ
JJJJJJJ
,,,,JJJ
,,,,,,,
;,,;YJJY,YY,J;;J;,,
;,,;YJJYJ;;J,,,,JJJJ;;;;;,,;YJJYJ;;J,,,,JJJJ;;;;;,,;YJJYJ;;J;,,;YJJYJ;;J;,,
,,,,;JJ
,,,,,,,,,,,
{{{{
----KKK
B|||Cn
 K.D0L.D [.D [.D3
GBJJJ
|L|CJ
[BJzJ
L|LC
BYzY
[{[BJzJ
L|LCYzY
[{[B
BzYz
{[{B
[BJzJ
L|LCYzY
[{[BJzJ
L|LCYzY
[{[BzJz
|L|C
BzYz
{[{B
Bzzz
|||C6
Bzzz
|||C6
|<|C;z
B|||C6
B|||C6
 K.D0L.D [.D [.D
zzzz{{{{6
zzzz6
zzzz{{{{6
zzzz{{{{6
zzzz6
zzzz{{{{6
zzzz{{{{6
zzzz6
zzzz{{{{6
zzzz
JJJJ.
zzzz
,,,,;;
YYY"
JJJJYJJYYJJYJJJJYJJYYJJYJ;;J;;;;J;;J;;;;J;;JJ;;J,,,,,,,
__builtin_adjust_trampoline
__builtin_debugtrap
__builtin_unwind_init
__builtin_flt_rounds
__builtin_init_trampoline
__builtin_object_size
__builtin_stack_restore
__builtin_stack_save
__builtin_thread_pointer
__builtin_trap
__builtin_arm_dmb
__builtin_arm_dsb
__builtin_arm_isb
__builtin_amdgcn_buffer_wbinvl1
__builtin_amdgcn_buffer_wbinvl1_sc
__builtin_amdgcn_buffer_wbinvl1_vol
__builtin_amdgcn_cubeid
__builtin_amdgcn_cubema
__builtin_amdgcn_cubesc
__builtin_amdgcn_cubetc
__builtin_amdgcn_cvt_pk_u8_f32
__builtin_amdgcn_dispatch_id
__builtin_amdgcn_dispatch_ptr
__builtin_amdgcn_ds_bpermute
__builtin_amdgcn_ds_permute
__builtin_amdgcn_ds_swizzle
__builtin_amdgcn_fmed3
__builtin_amdgcn_fmul_legacy
__builtin_amdgcn_groupstaticsize
__builtin_amdgcn_implicit_buffer_ptr
__builtin_amdgcn_implicitarg_ptr
__builtin_amdgcn_interp_mov
__builtin_amdgcn_interp_p1
__builtin_amdgcn_interp_p2
__builtin_amdgcn_kernarg_segment_ptr
__builtin_amdgcn_lerp
__builtin_amdgcn_mbcnt_hi
__builtin_amdgcn_mbcnt_lo
__builtin_amdgcn_mqsad_pk_u16_u8
__builtin_amdgcn_mqsad_u32_u8
__builtin_amdgcn_msad_u8
__builtin_amdgcn_qsad_pk_u16_u8
__builtin_amdgcn_queue_ptr
__builtin_amdgcn_rcp_legacy
__builtin_amdgcn_readfirstlane
__builtin_amdgcn_readlane
__builtin_amdgcn_rsq_legacy
__builtin_amdgcn_s_barrier
__builtin_amdgcn_s_dcache_inv
__builtin_amdgcn_s_dcache_inv_vol
__builtin_amdgcn_s_dcache_wb
__builtin_amdgcn_s_dcache_wb_vol
__builtin_amdgcn_s_decperflevel
__builtin_amdgcn_s_getpc
__builtin_amdgcn_s_getreg
__builtin_amdgcn_s_incperflevel
__builtin_amdgcn_s_memrealtime
__builtin_amdgcn_s_memtime
__builtin_amdgcn_s_sendmsg
__builtin_amdgcn_s_sendmsghalt
__builtin_amdgcn_s_sleep
__builtin_amdgcn_s_waitcnt
__builtin_amdgcn_sad_hi_u8
__builtin_amdgcn_sad_u16
__builtin_amdgcn_sad_u8
__builtin_amdgcn_wave_barrier
__builtin_amdgcn_workgroup_id_x
__builtin_amdgcn_workgroup_id_y
__builtin_amdgcn_workgroup_id_z
__builtin_arm_cdp
__builtin_arm_cdp2
__builtin_arm_get_fpscr
__builtin_arm_ldc
__builtin_arm_ldc2
__builtin_arm_ldc2l
__builtin_arm_ldcl
__builtin_arm_mcr
__builtin_arm_mcr2
__builtin_arm_mrc
__builtin_arm_mrc2
__builtin_arm_qadd
__builtin_arm_qadd16
__builtin_arm_qadd8
__builtin_arm_qasx
__builtin_arm_qsax
__builtin_arm_qsub
__builtin_arm_qsub16
__builtin_arm_qsub8
__builtin_arm_sadd16
__builtin_arm_sadd8
__builtin_arm_sasx
__builtin_arm_sel
__builtin_arm_set_fpscr
__builtin_arm_shadd16
__builtin_arm_shadd8
__builtin_arm_shasx
__builtin_arm_shsax
__builtin_arm_shsub16
__builtin_arm_shsub8
__builtin_arm_smlabb
__builtin_arm_smlabt
__builtin_arm_smlad
__builtin_arm_smladx
__builtin_arm_smlald
__builtin_arm_smlaldx
__builtin_arm_smlatb
__builtin_arm_smlatt
__builtin_arm_smlawb
__builtin_arm_smlawt
__builtin_arm_smlsd
__builtin_arm_smlsdx
__builtin_arm_smlsld
__builtin_arm_smlsldx
__builtin_arm_smuad
__builtin_arm_smuadx
__builtin_arm_smulbb
__builtin_arm_smulbt
__builtin_arm_smultb
__builtin_arm_smultt
__builtin_arm_smulwb
__builtin_arm_smulwt
__builtin_arm_smusd
__builtin_arm_smusdx
__builtin_arm_ssat
__builtin_arm_ssat16
__builtin_arm_ssax
__builtin_arm_ssub16
__builtin_arm_ssub8
__builtin_arm_stc
__builtin_arm_stc2
__builtin_arm_stc2l
__builtin_arm_stcl
__builtin_arm_sxtab16
__builtin_arm_sxtb16
__builtin_arm_uadd16
__builtin_arm_uadd8
__builtin_arm_uasx
__builtin_arm_uhadd16
__builtin_arm_uhadd8
__builtin_arm_uhasx
__builtin_arm_uhsax
__builtin_arm_uhsub16
__builtin_arm_uhsub8
__builtin_arm_uqadd16
__builtin_arm_uqadd8
__builtin_arm_uqasx
__builtin_arm_uqsax
__builtin_arm_uqsub16
__builtin_arm_uqsub8
__builtin_arm_usad8
__builtin_arm_usada8
__builtin_arm_usat
__builtin_arm_usat16
__builtin_arm_usax
__builtin_arm_usub16
__builtin_arm_usub8
__builtin_arm_uxtab16
__builtin_arm_uxtb16
__builtin_bpf_load_byte
__builtin_bpf_load_half
__builtin_bpf_load_word
__builtin_bpf_pseudo
__builtin_HEXAGON_A2_abs
__builtin_HEXAGON_A2_absp
__builtin_HEXAGON_A2_abssat
__builtin_HEXAGON_A2_add
__builtin_HEXAGON_A2_addh_h16_hh
__builtin_HEXAGON_A2_addh_h16_hl
__builtin_HEXAGON_A2_addh_h16_lh
__builtin_HEXAGON_A2_addh_h16_ll
__builtin_HEXAGON_A2_addh_h16_sat_hh
__builtin_HEXAGON_A2_addh_h16_sat_hl
__builtin_HEXAGON_A2_addh_h16_sat_lh
__builtin_HEXAGON_A2_addh_h16_sat_ll
__builtin_HEXAGON_A2_addh_l16_hl
__builtin_HEXAGON_A2_addh_l16_ll
__builtin_HEXAGON_A2_addh_l16_sat_hl
__builtin_HEXAGON_A2_addh_l16_sat_ll
__builtin_HEXAGON_A2_addi
__builtin_HEXAGON_A2_addp
__builtin_HEXAGON_A2_addpsat
__builtin_HEXAGON_A2_addsat
__builtin_HEXAGON_A2_addsp
__builtin_HEXAGON_A2_and
__builtin_HEXAGON_A2_andir
__builtin_HEXAGON_A2_andp
__builtin_HEXAGON_A2_aslh
__builtin_HEXAGON_A2_asrh
__builtin_HEXAGON_A2_combine_hh
__builtin_HEXAGON_A2_combine_hl
__builtin_HEXAGON_A2_combine_lh
__builtin_HEXAGON_A2_combine_ll
__builtin_HEXAGON_A2_combineii
__builtin_HEXAGON_A2_combinew
__builtin_HEXAGON_A2_max
__builtin_HEXAGON_A2_maxp
__builtin_HEXAGON_A2_maxu
__builtin_HEXAGON_A2_maxup
__builtin_HEXAGON_A2_min
__builtin_HEXAGON_A2_minp
__builtin_HEXAGON_A2_minu
__builtin_HEXAGON_A2_minup
__builtin_HEXAGON_A2_neg
__builtin_HEXAGON_A2_negp
__builtin_HEXAGON_A2_negsat
__builtin_HEXAGON_A2_not
__builtin_HEXAGON_A2_notp
__builtin_HEXAGON_A2_or
__builtin_HEXAGON_A2_orir
__builtin_HEXAGON_A2_orp
__builtin_HEXAGON_A2_roundsat
__builtin_HEXAGON_A2_sat
__builtin_HEXAGON_A2_satb
__builtin_HEXAGON_A2_sath
__builtin_HEXAGON_A2_satub
__builtin_HEXAGON_A2_satuh
__builtin_HEXAGON_A2_sub
__builtin_HEXAGON_A2_subh_h16_hh
__builtin_HEXAGON_A2_subh_h16_hl
__builtin_HEXAGON_A2_subh_h16_lh
__builtin_HEXAGON_A2_subh_h16_ll
__builtin_HEXAGON_A2_subh_h16_sat_hh
__builtin_HEXAGON_A2_subh_h16_sat_hl
__builtin_HEXAGON_A2_subh_h16_sat_lh
__builtin_HEXAGON_A2_subh_h16_sat_ll
__builtin_HEXAGON_A2_subh_l16_hl
__builtin_HEXAGON_A2_subh_l16_ll
__builtin_HEXAGON_A2_subh_l16_sat_hl
__builtin_HEXAGON_A2_subh_l16_sat_ll
__builtin_HEXAGON_A2_subp
__builtin_HEXAGON_A2_subri
__builtin_HEXAGON_A2_subsat
__builtin_HEXAGON_A2_svaddh
__builtin_HEXAGON_A2_svaddhs
__builtin_HEXAGON_A2_svadduhs
__builtin_HEXAGON_A2_svavgh
__builtin_HEXAGON_A2_svavghs
__builtin_HEXAGON_A2_svnavgh
__builtin_HEXAGON_A2_svsubh
__builtin_HEXAGON_A2_svsubhs
__builtin_HEXAGON_A2_svsubuhs
__builtin_HEXAGON_A2_swiz
__builtin_HEXAGON_A2_sxtb
__builtin_HEXAGON_A2_sxth
__builtin_HEXAGON_A2_sxtw
__builtin_HEXAGON_A2_tfr
__builtin_HEXAGON_A2_tfrih
__builtin_HEXAGON_A2_tfril
__builtin_HEXAGON_A2_tfrp
__builtin_HEXAGON_A2_tfrpi
__builtin_HEXAGON_A2_tfrsi
__builtin_HEXAGON_A2_vabsh
__builtin_HEXAGON_A2_vabshsat
__builtin_HEXAGON_A2_vabsw
__builtin_HEXAGON_A2_vabswsat
__builtin_HEXAGON_A2_vaddb_map
__builtin_HEXAGON_A2_vaddh
__builtin_HEXAGON_A2_vaddhs
__builtin_HEXAGON_A2_vaddub
__builtin_HEXAGON_A2_vaddubs
__builtin_HEXAGON_A2_vadduhs
__builtin_HEXAGON_A2_vaddw
__builtin_HEXAGON_A2_vaddws
__builtin_HEXAGON_A2_vavgh
__builtin_HEXAGON_A2_vavghcr
__builtin_HEXAGON_A2_vavghr
__builtin_HEXAGON_A2_vavgub
__builtin_HEXAGON_A2_vavgubr
__builtin_HEXAGON_A2_vavguh
__builtin_HEXAGON_A2_vavguhr
__builtin_HEXAGON_A2_vavguw
__builtin_HEXAGON_A2_vavguwr
__builtin_HEXAGON_A2_vavgw
__builtin_HEXAGON_A2_vavgwcr
__builtin_HEXAGON_A2_vavgwr
__builtin_HEXAGON_A2_vcmpbeq
__builtin_HEXAGON_A2_vcmpbgtu
__builtin_HEXAGON_A2_vcmpheq
__builtin_HEXAGON_A2_vcmphgt
__builtin_HEXAGON_A2_vcmphgtu
__builtin_HEXAGON_A2_vcmpweq
__builtin_HEXAGON_A2_vcmpwgt
__builtin_HEXAGON_A2_vcmpwgtu
__builtin_HEXAGON_A2_vconj
__builtin_HEXAGON_A2_vmaxb
__builtin_HEXAGON_A2_vmaxh
__builtin_HEXAGON_A2_vmaxub
__builtin_HEXAGON_A2_vmaxuh
__builtin_HEXAGON_A2_vmaxuw
__builtin_HEXAGON_A2_vmaxw
__builtin_HEXAGON_A2_vminb
__builtin_HEXAGON_A2_vminh
__builtin_HEXAGON_A2_vminub
__builtin_HEXAGON_A2_vminuh
__builtin_HEXAGON_A2_vminuw
__builtin_HEXAGON_A2_vminw
__builtin_HEXAGON_A2_vnavgh
__builtin_HEXAGON_A2_vnavghcr
__builtin_HEXAGON_A2_vnavghr
__builtin_HEXAGON_A2_vnavgw
__builtin_HEXAGON_A2_vnavgwcr
__builtin_HEXAGON_A2_vnavgwr
__builtin_HEXAGON_A2_vraddub
__builtin_HEXAGON_A2_vraddub_acc
__builtin_HEXAGON_A2_vrsadub
__builtin_HEXAGON_A2_vrsadub_acc
__builtin_HEXAGON_A2_vsubb_map
__builtin_HEXAGON_A2_vsubh
__builtin_HEXAGON_A2_vsubhs
__builtin_HEXAGON_A2_vsubub
__builtin_HEXAGON_A2_vsububs
__builtin_HEXAGON_A2_vsubuhs
__builtin_HEXAGON_A2_vsubw
__builtin_HEXAGON_A2_vsubws
__builtin_HEXAGON_A2_xor
__builtin_HEXAGON_A2_xorp
__builtin_HEXAGON_A2_zxtb
__builtin_HEXAGON_A2_zxth
__builtin_HEXAGON_A4_andn
__builtin_HEXAGON_A4_andnp
__builtin_HEXAGON_A4_bitsplit
__builtin_HEXAGON_A4_bitspliti
__builtin_HEXAGON_A4_boundscheck
__builtin_HEXAGON_A4_cmpbeq
__builtin_HEXAGON_A4_cmpbeqi
__builtin_HEXAGON_A4_cmpbgt
__builtin_HEXAGON_A4_cmpbgti
__builtin_HEXAGON_A4_cmpbgtu
__builtin_HEXAGON_A4_cmpbgtui
__builtin_HEXAGON_A4_cmpheq
__builtin_HEXAGON_A4_cmpheqi
__builtin_HEXAGON_A4_cmphgt
__builtin_HEXAGON_A4_cmphgti
__builtin_HEXAGON_A4_cmphgtu
__builtin_HEXAGON_A4_cmphgtui
__builtin_HEXAGON_A4_combineir
__builtin_HEXAGON_A4_combineri
__builtin_HEXAGON_A4_cround_ri
__builtin_HEXAGON_A4_cround_rr
__builtin_HEXAGON_A4_modwrapu
__builtin_HEXAGON_A4_orn
__builtin_HEXAGON_A4_ornp
__builtin_HEXAGON_A4_rcmpeq
__builtin_HEXAGON_A4_rcmpeqi
__builtin_HEXAGON_A4_rcmpneq
__builtin_HEXAGON_A4_rcmpneqi
__builtin_HEXAGON_A4_round_ri
__builtin_HEXAGON_A4_round_ri_sat
__builtin_HEXAGON_A4_round_rr
__builtin_HEXAGON_A4_round_rr_sat
__builtin_HEXAGON_A4_tlbmatch
__builtin_HEXAGON_A4_vcmpbeq_any
__builtin_HEXAGON_A4_vcmpbeqi
__builtin_HEXAGON_A4_vcmpbgt
__builtin_HEXAGON_A4_vcmpbgti
__builtin_HEXAGON_A4_vcmpbgtui
__builtin_HEXAGON_A4_vcmpheqi
__builtin_HEXAGON_A4_vcmphgti
__builtin_HEXAGON_A4_vcmphgtui
__builtin_HEXAGON_A4_vcmpweqi
__builtin_HEXAGON_A4_vcmpwgti
__builtin_HEXAGON_A4_vcmpwgtui
__builtin_HEXAGON_A4_vrmaxh
__builtin_HEXAGON_A4_vrmaxuh
__builtin_HEXAGON_A4_vrmaxuw
__builtin_HEXAGON_A4_vrmaxw
__builtin_HEXAGON_A4_vrminh
__builtin_HEXAGON_A4_vrminuh
__builtin_HEXAGON_A4_vrminuw
__builtin_HEXAGON_A4_vrminw
__builtin_HEXAGON_A5_vaddhubs
__builtin_HEXAGON_C2_all8
__builtin_HEXAGON_C2_and
__builtin_HEXAGON_C2_andn
__builtin_HEXAGON_C2_any8
__builtin_HEXAGON_C2_bitsclr
__builtin_HEXAGON_C2_bitsclri
__builtin_HEXAGON_C2_bitsset
__builtin_HEXAGON_C2_cmpeq
__builtin_HEXAGON_C2_cmpeqi
__builtin_HEXAGON_C2_cmpeqp
__builtin_HEXAGON_C2_cmpgei
__builtin_HEXAGON_C2_cmpgeui
__builtin_HEXAGON_C2_cmpgt
__builtin_HEXAGON_C2_cmpgti
__builtin_HEXAGON_C2_cmpgtp
__builtin_HEXAGON_C2_cmpgtu
__builtin_HEXAGON_C2_cmpgtui
__builtin_HEXAGON_C2_cmpgtup
__builtin_HEXAGON_C2_cmplt
__builtin_HEXAGON_C2_cmpltu
__builtin_HEXAGON_C2_mask
__builtin_HEXAGON_C2_mux
__builtin_HEXAGON_C2_muxii
__builtin_HEXAGON_C2_muxir
__builtin_HEXAGON_C2_muxri
__builtin_HEXAGON_C2_not
__builtin_HEXAGON_C2_or
__builtin_HEXAGON_C2_orn
__builtin_HEXAGON_C2_pxfer_map
__builtin_HEXAGON_C2_tfrpr
__builtin_HEXAGON_C2_tfrrp
__builtin_HEXAGON_C2_vitpack
__builtin_HEXAGON_C2_vmux
__builtin_HEXAGON_C2_xor
__builtin_HEXAGON_C4_and_and
__builtin_HEXAGON_C4_and_andn
__builtin_HEXAGON_C4_and_or
__builtin_HEXAGON_C4_and_orn
__builtin_HEXAGON_C4_cmplte
__builtin_HEXAGON_C4_cmpltei
__builtin_HEXAGON_C4_cmplteu
__builtin_HEXAGON_C4_cmplteui
__builtin_HEXAGON_C4_cmpneq
__builtin_HEXAGON_C4_cmpneqi
__builtin_HEXAGON_C4_fastcorner9
__builtin_HEXAGON_C4_fastcorner9_not
__builtin_HEXAGON_C4_nbitsclr
__builtin_HEXAGON_C4_nbitsclri
__builtin_HEXAGON_C4_nbitsset
__builtin_HEXAGON_C4_or_and
__builtin_HEXAGON_C4_or_andn
__builtin_HEXAGON_C4_or_or
__builtin_HEXAGON_C4_or_orn
__builtin_HEXAGON_F2_conv_d2df
__builtin_HEXAGON_F2_conv_d2sf
__builtin_HEXAGON_F2_conv_df2d
__builtin_HEXAGON_F2_conv_df2d_chop
__builtin_HEXAGON_F2_conv_df2sf
__builtin_HEXAGON_F2_conv_df2ud
__builtin_HEXAGON_F2_conv_df2ud_chop
__builtin_HEXAGON_F2_conv_df2uw
__builtin_HEXAGON_F2_conv_df2uw_chop
__builtin_HEXAGON_F2_conv_df2w
__builtin_HEXAGON_F2_conv_df2w_chop
__builtin_HEXAGON_F2_conv_sf2d
__builtin_HEXAGON_F2_conv_sf2d_chop
__builtin_HEXAGON_F2_conv_sf2df
__builtin_HEXAGON_F2_conv_sf2ud
__builtin_HEXAGON_F2_conv_sf2ud_chop
__builtin_HEXAGON_F2_conv_sf2uw
__builtin_HEXAGON_F2_conv_sf2uw_chop
__builtin_HEXAGON_F2_conv_sf2w
__builtin_HEXAGON_F2_conv_sf2w_chop
__builtin_HEXAGON_F2_conv_ud2df
__builtin_HEXAGON_F2_conv_ud2sf
__builtin_HEXAGON_F2_conv_uw2df
__builtin_HEXAGON_F2_conv_uw2sf
__builtin_HEXAGON_F2_conv_w2df
__builtin_HEXAGON_F2_conv_w2sf
__builtin_HEXAGON_F2_dfclass
__builtin_HEXAGON_F2_dfcmpeq
__builtin_HEXAGON_F2_dfcmpge
__builtin_HEXAGON_F2_dfcmpgt
__builtin_HEXAGON_F2_dfcmpuo
__builtin_HEXAGON_F2_dfimm_n
__builtin_HEXAGON_F2_dfimm_p
__builtin_HEXAGON_F2_sfadd
__builtin_HEXAGON_F2_sfclass
__builtin_HEXAGON_F2_sfcmpeq
__builtin_HEXAGON_F2_sfcmpge
__builtin_HEXAGON_F2_sfcmpgt
__builtin_HEXAGON_F2_sfcmpuo
__builtin_HEXAGON_F2_sffixupd
__builtin_HEXAGON_F2_sffixupn
__builtin_HEXAGON_F2_sffixupr
__builtin_HEXAGON_F2_sffma
__builtin_HEXAGON_F2_sffma_lib
__builtin_HEXAGON_F2_sffma_sc
__builtin_HEXAGON_F2_sffms
__builtin_HEXAGON_F2_sffms_lib
__builtin_HEXAGON_F2_sfimm_n
__builtin_HEXAGON_F2_sfimm_p
__builtin_HEXAGON_F2_sfmax
__builtin_HEXAGON_F2_sfmin
__builtin_HEXAGON_F2_sfmpy
__builtin_HEXAGON_F2_sfsub
__builtin_HEXAGON_L2_loadw_locked
__builtin_HEXAGON_L4_loadd_locked
__builtin_HEXAGON_M2_acci
__builtin_HEXAGON_M2_accii
__builtin_HEXAGON_M2_cmaci_s0
__builtin_HEXAGON_M2_cmacr_s0
__builtin_HEXAGON_M2_cmacs_s0
__builtin_HEXAGON_M2_cmacs_s1
__builtin_HEXAGON_M2_cmacsc_s0
__builtin_HEXAGON_M2_cmacsc_s1
__builtin_HEXAGON_M2_cmpyi_s0
__builtin_HEXAGON_M2_cmpyr_s0
__builtin_HEXAGON_M2_cmpyrs_s0
__builtin_HEXAGON_M2_cmpyrs_s1
__builtin_HEXAGON_M2_cmpyrsc_s0
__builtin_HEXAGON_M2_cmpyrsc_s1
__builtin_HEXAGON_M2_cmpys_s0
__builtin_HEXAGON_M2_cmpys_s1
__builtin_HEXAGON_M2_cmpysc_s0
__builtin_HEXAGON_M2_cmpysc_s1
__builtin_HEXAGON_M2_cnacs_s0
__builtin_HEXAGON_M2_cnacs_s1
__builtin_HEXAGON_M2_cnacsc_s0
__builtin_HEXAGON_M2_cnacsc_s1
__builtin_HEXAGON_M2_dpmpyss_acc_s0
__builtin_HEXAGON_M2_dpmpyss_nac_s0
__builtin_HEXAGON_M2_dpmpyss_rnd_s0
__builtin_HEXAGON_M2_dpmpyss_s0
__builtin_HEXAGON_M2_dpmpyuu_acc_s0
__builtin_HEXAGON_M2_dpmpyuu_nac_s0
__builtin_HEXAGON_M2_dpmpyuu_s0
__builtin_HEXAGON_M2_hmmpyh_rs1
__builtin_HEXAGON_M2_hmmpyh_s1
__builtin_HEXAGON_M2_hmmpyl_rs1
__builtin_HEXAGON_M2_hmmpyl_s1
__builtin_HEXAGON_M2_maci
__builtin_HEXAGON_M2_macsin
__builtin_HEXAGON_M2_macsip
__builtin_HEXAGON_M2_mmachs_rs0
__builtin_HEXAGON_M2_mmachs_rs1
__builtin_HEXAGON_M2_mmachs_s0
__builtin_HEXAGON_M2_mmachs_s1
__builtin_HEXAGON_M2_mmacls_rs0
__builtin_HEXAGON_M2_mmacls_rs1
__builtin_HEXAGON_M2_mmacls_s0
__builtin_HEXAGON_M2_mmacls_s1
__builtin_HEXAGON_M2_mmacuhs_rs0
__builtin_HEXAGON_M2_mmacuhs_rs1
__builtin_HEXAGON_M2_mmacuhs_s0
__builtin_HEXAGON_M2_mmacuhs_s1
__builtin_HEXAGON_M2_mmaculs_rs0
__builtin_HEXAGON_M2_mmaculs_rs1
__builtin_HEXAGON_M2_mmaculs_s0
__builtin_HEXAGON_M2_mmaculs_s1
__builtin_HEXAGON_M2_mmpyh_rs0
__builtin_HEXAGON_M2_mmpyh_rs1
__builtin_HEXAGON_M2_mmpyh_s0
__builtin_HEXAGON_M2_mmpyh_s1
__builtin_HEXAGON_M2_mmpyl_rs0
__builtin_HEXAGON_M2_mmpyl_rs1
__builtin_HEXAGON_M2_mmpyl_s0
__builtin_HEXAGON_M2_mmpyl_s1
__builtin_HEXAGON_M2_mmpyuh_rs0
__builtin_HEXAGON_M2_mmpyuh_rs1
__builtin_HEXAGON_M2_mmpyuh_s0
__builtin_HEXAGON_M2_mmpyuh_s1
__builtin_HEXAGON_M2_mmpyul_rs0
__builtin_HEXAGON_M2_mmpyul_rs1
__builtin_HEXAGON_M2_mmpyul_s0
__builtin_HEXAGON_M2_mmpyul_s1
__builtin_HEXAGON_M2_mpy_acc_hh_s0
__builtin_HEXAGON_M2_mpy_acc_hh_s1
__builtin_HEXAGON_M2_mpy_acc_hl_s0
__builtin_HEXAGON_M2_mpy_acc_hl_s1
__builtin_HEXAGON_M2_mpy_acc_lh_s0
__builtin_HEXAGON_M2_mpy_acc_lh_s1
__builtin_HEXAGON_M2_mpy_acc_ll_s0
__builtin_HEXAGON_M2_mpy_acc_ll_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s0
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s0
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s1
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s0
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s0
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s1
__builtin_HEXAGON_M2_mpy_hh_s0
__builtin_HEXAGON_M2_mpy_hh_s1
__builtin_HEXAGON_M2_mpy_hl_s0
__builtin_HEXAGON_M2_mpy_hl_s1
__builtin_HEXAGON_M2_mpy_lh_s0
__builtin_HEXAGON_M2_mpy_lh_s1
__builtin_HEXAGON_M2_mpy_ll_s0
__builtin_HEXAGON_M2_mpy_ll_s1
__builtin_HEXAGON_M2_mpy_nac_hh_s0
__builtin_HEXAGON_M2_mpy_nac_hh_s1
__builtin_HEXAGON_M2_mpy_nac_hl_s0
__builtin_HEXAGON_M2_mpy_nac_hl_s1
__builtin_HEXAGON_M2_mpy_nac_lh_s0
__builtin_HEXAGON_M2_mpy_nac_lh_s1
__builtin_HEXAGON_M2_mpy_nac_ll_s0
__builtin_HEXAGON_M2_mpy_nac_ll_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s0
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s1
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s0
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s1
__builtin_HEXAGON_M2_mpy_rnd_hh_s0
__builtin_HEXAGON_M2_mpy_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_rnd_hl_s0
__builtin_HEXAGON_M2_mpy_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_rnd_lh_s0
__builtin_HEXAGON_M2_mpy_rnd_lh_s1
__builtin_HEXAGON_M2_mpy_rnd_ll_s0
__builtin_HEXAGON_M2_mpy_rnd_ll_s1
__builtin_HEXAGON_M2_mpy_sat_hh_s0
__builtin_HEXAGON_M2_mpy_sat_hh_s1
__builtin_HEXAGON_M2_mpy_sat_hl_s0
__builtin_HEXAGON_M2_mpy_sat_hl_s1
__builtin_HEXAGON_M2_mpy_sat_lh_s0
__builtin_HEXAGON_M2_mpy_sat_lh_s1
__builtin_HEXAGON_M2_mpy_sat_ll_s0
__builtin_HEXAGON_M2_mpy_sat_ll_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s1
__builtin_HEXAGON_M2_mpy_up
__builtin_HEXAGON_M2_mpy_up_s1
__builtin_HEXAGON_M2_mpy_up_s1_sat
__builtin_HEXAGON_M2_mpyd_acc_hh_s0
__builtin_HEXAGON_M2_mpyd_acc_hh_s1
__builtin_HEXAGON_M2_mpyd_acc_hl_s0
__builtin_HEXAGON_M2_mpyd_acc_hl_s1
__builtin_HEXAGON_M2_mpyd_acc_lh_s0
__builtin_HEXAGON_M2_mpyd_acc_lh_s1
__builtin_HEXAGON_M2_mpyd_acc_ll_s0
__builtin_HEXAGON_M2_mpyd_acc_ll_s1
__builtin_HEXAGON_M2_mpyd_hh_s0
__builtin_HEXAGON_M2_mpyd_hh_s1
__builtin_HEXAGON_M2_mpyd_hl_s0
__builtin_HEXAGON_M2_mpyd_hl_s1
__builtin_HEXAGON_M2_mpyd_lh_s0
__builtin_HEXAGON_M2_mpyd_lh_s1
__builtin_HEXAGON_M2_mpyd_ll_s0
__builtin_HEXAGON_M2_mpyd_ll_s1
__builtin_HEXAGON_M2_mpyd_nac_hh_s0
__builtin_HEXAGON_M2_mpyd_nac_hh_s1
__builtin_HEXAGON_M2_mpyd_nac_hl_s0
__builtin_HEXAGON_M2_mpyd_nac_hl_s1
__builtin_HEXAGON_M2_mpyd_nac_lh_s0
__builtin_HEXAGON_M2_mpyd_nac_lh_s1
__builtin_HEXAGON_M2_mpyd_nac_ll_s0
__builtin_HEXAGON_M2_mpyd_nac_ll_s1
__builtin_HEXAGON_M2_mpyd_rnd_hh_s0
__builtin_HEXAGON_M2_mpyd_rnd_hh_s1
__builtin_HEXAGON_M2_mpyd_rnd_hl_s0
__builtin_HEXAGON_M2_mpyd_rnd_hl_s1
__builtin_HEXAGON_M2_mpyd_rnd_lh_s0
__builtin_HEXAGON_M2_mpyd_rnd_lh_s1
__builtin_HEXAGON_M2_mpyd_rnd_ll_s0
__builtin_HEXAGON_M2_mpyd_rnd_ll_s1
__builtin_HEXAGON_M2_mpyi
__builtin_HEXAGON_M2_mpysmi
__builtin_HEXAGON_M2_mpysu_up
__builtin_HEXAGON_M2_mpyu_acc_hh_s0
__builtin_HEXAGON_M2_mpyu_acc_hh_s1
__builtin_HEXAGON_M2_mpyu_acc_hl_s0
__builtin_HEXAGON_M2_mpyu_acc_hl_s1
__builtin_HEXAGON_M2_mpyu_acc_lh_s0
__builtin_HEXAGON_M2_mpyu_acc_lh_s1
__builtin_HEXAGON_M2_mpyu_acc_ll_s0
__builtin_HEXAGON_M2_mpyu_acc_ll_s1
__builtin_HEXAGON_M2_mpyu_hh_s0
__builtin_HEXAGON_M2_mpyu_hh_s1
__builtin_HEXAGON_M2_mpyu_hl_s0
__builtin_HEXAGON_M2_mpyu_hl_s1
__builtin_HEXAGON_M2_mpyu_lh_s0
__builtin_HEXAGON_M2_mpyu_lh_s1
__builtin_HEXAGON_M2_mpyu_ll_s0
__builtin_HEXAGON_M2_mpyu_ll_s1
__builtin_HEXAGON_M2_mpyu_nac_hh_s0
__builtin_HEXAGON_M2_mpyu_nac_hh_s1
__builtin_HEXAGON_M2_mpyu_nac_hl_s0
__builtin_HEXAGON_M2_mpyu_nac_hl_s1
__builtin_HEXAGON_M2_mpyu_nac_lh_s0
__builtin_HEXAGON_M2_mpyu_nac_lh_s1
__builtin_HEXAGON_M2_mpyu_nac_ll_s0
__builtin_HEXAGON_M2_mpyu_nac_ll_s1
__builtin_HEXAGON_M2_mpyu_up
__builtin_HEXAGON_M2_mpyud_acc_hh_s0
__builtin_HEXAGON_M2_mpyud_acc_hh_s1
__builtin_HEXAGON_M2_mpyud_acc_hl_s0
__builtin_HEXAGON_M2_mpyud_acc_hl_s1
__builtin_HEXAGON_M2_mpyud_acc_lh_s0
__builtin_HEXAGON_M2_mpyud_acc_lh_s1
__builtin_HEXAGON_M2_mpyud_acc_ll_s0
__builtin_HEXAGON_M2_mpyud_acc_ll_s1
__builtin_HEXAGON_M2_mpyud_hh_s0
__builtin_HEXAGON_M2_mpyud_hh_s1
__builtin_HEXAGON_M2_mpyud_hl_s0
__builtin_HEXAGON_M2_mpyud_hl_s1
__builtin_HEXAGON_M2_mpyud_lh_s0
__builtin_HEXAGON_M2_mpyud_lh_s1
__builtin_HEXAGON_M2_mpyud_ll_s0
__builtin_HEXAGON_M2_mpyud_ll_s1
__builtin_HEXAGON_M2_mpyud_nac_hh_s0
__builtin_HEXAGON_M2_mpyud_nac_hh_s1
__builtin_HEXAGON_M2_mpyud_nac_hl_s0
__builtin_HEXAGON_M2_mpyud_nac_hl_s1
__builtin_HEXAGON_M2_mpyud_nac_lh_s0
__builtin_HEXAGON_M2_mpyud_nac_lh_s1
__builtin_HEXAGON_M2_mpyud_nac_ll_s0
__builtin_HEXAGON_M2_mpyud_nac_ll_s1
__builtin_HEXAGON_M2_mpyui
__builtin_HEXAGON_M2_nacci
__builtin_HEXAGON_M2_naccii
__builtin_HEXAGON_M2_subacc
__builtin_HEXAGON_M2_vabsdiffh
__builtin_HEXAGON_M2_vabsdiffw
__builtin_HEXAGON_M2_vcmac_s0_sat_i
__builtin_HEXAGON_M2_vcmac_s0_sat_r
__builtin_HEXAGON_M2_vcmpy_s0_sat_i
__builtin_HEXAGON_M2_vcmpy_s0_sat_r
__builtin_HEXAGON_M2_vcmpy_s1_sat_i
__builtin_HEXAGON_M2_vcmpy_s1_sat_r
__builtin_HEXAGON_M2_vdmacs_s0
__builtin_HEXAGON_M2_vdmacs_s1
__builtin_HEXAGON_M2_vdmpyrs_s0
__builtin_HEXAGON_M2_vdmpyrs_s1
__builtin_HEXAGON_M2_vdmpys_s0
__builtin_HEXAGON_M2_vdmpys_s1
__builtin_HEXAGON_M2_vmac2
__builtin_HEXAGON_M2_vmac2es
__builtin_HEXAGON_M2_vmac2es_s0
__builtin_HEXAGON_M2_vmac2es_s1
__builtin_HEXAGON_M2_vmac2s_s0
__builtin_HEXAGON_M2_vmac2s_s1
__builtin_HEXAGON_M2_vmac2su_s0
__builtin_HEXAGON_M2_vmac2su_s1
__builtin_HEXAGON_M2_vmpy2es_s0
__builtin_HEXAGON_M2_vmpy2es_s1
__builtin_HEXAGON_M2_vmpy2s_s0
__builtin_HEXAGON_M2_vmpy2s_s0pack
__builtin_HEXAGON_M2_vmpy2s_s1
__builtin_HEXAGON_M2_vmpy2s_s1pack
__builtin_HEXAGON_M2_vmpy2su_s0
__builtin_HEXAGON_M2_vmpy2su_s1
__builtin_HEXAGON_M2_vraddh
__builtin_HEXAGON_M2_vradduh
__builtin_HEXAGON_M2_vrcmaci_s0
__builtin_HEXAGON_M2_vrcmaci_s0c
__builtin_HEXAGON_M2_vrcmacr_s0
__builtin_HEXAGON_M2_vrcmacr_s0c
__builtin_HEXAGON_M2_vrcmpyi_s0
__builtin_HEXAGON_M2_vrcmpyi_s0c
__builtin_HEXAGON_M2_vrcmpyr_s0
__builtin_HEXAGON_M2_vrcmpyr_s0c
__builtin_HEXAGON_M2_vrcmpys_acc_s1
__builtin_HEXAGON_M2_vrcmpys_s1
__builtin_HEXAGON_M2_vrcmpys_s1rp
__builtin_HEXAGON_M2_vrmac_s0
__builtin_HEXAGON_M2_vrmpy_s0
__builtin_HEXAGON_M2_xor_xacc
__builtin_HEXAGON_M4_and_and
__builtin_HEXAGON_M4_and_andn
__builtin_HEXAGON_M4_and_or
__builtin_HEXAGON_M4_and_xor
__builtin_HEXAGON_M4_cmpyi_wh
__builtin_HEXAGON_M4_cmpyi_whc
__builtin_HEXAGON_M4_cmpyr_wh
__builtin_HEXAGON_M4_cmpyr_whc
__builtin_HEXAGON_M4_mac_up_s1_sat
__builtin_HEXAGON_M4_mpyri_addi
__builtin_HEXAGON_M4_mpyri_addr
__builtin_HEXAGON_M4_mpyri_addr_u2
__builtin_HEXAGON_M4_mpyrr_addi
__builtin_HEXAGON_M4_mpyrr_addr
__builtin_HEXAGON_M4_nac_up_s1_sat
__builtin_HEXAGON_M4_or_and
__builtin_HEXAGON_M4_or_andn
__builtin_HEXAGON_M4_or_or
__builtin_HEXAGON_M4_or_xor
__builtin_HEXAGON_M4_pmpyw
__builtin_HEXAGON_M4_pmpyw_acc
__builtin_HEXAGON_M4_vpmpyh
__builtin_HEXAGON_M4_vpmpyh_acc
__builtin_HEXAGON_M4_vrmpyeh_acc_s0
__builtin_HEXAGON_M4_vrmpyeh_acc_s1
__builtin_HEXAGON_M4_vrmpyeh_s0
__builtin_HEXAGON_M4_vrmpyeh_s1
__builtin_HEXAGON_M4_vrmpyoh_acc_s0
__builtin_HEXAGON_M4_vrmpyoh_acc_s1
__builtin_HEXAGON_M4_vrmpyoh_s0
__builtin_HEXAGON_M4_vrmpyoh_s1
__builtin_HEXAGON_M4_xor_and
__builtin_HEXAGON_M4_xor_andn
__builtin_HEXAGON_M4_xor_or
__builtin_HEXAGON_M4_xor_xacc
__builtin_HEXAGON_M5_vdmacbsu
__builtin_HEXAGON_M5_vdmpybsu
__builtin_HEXAGON_M5_vmacbsu
__builtin_HEXAGON_M5_vmacbuu
__builtin_HEXAGON_M5_vmpybsu
__builtin_HEXAGON_M5_vmpybuu
__builtin_HEXAGON_M5_vrmacbsu
__builtin_HEXAGON_M5_vrmacbuu
__builtin_HEXAGON_M5_vrmpybsu
__builtin_HEXAGON_M5_vrmpybuu
__builtin_HEXAGON_M6_vabsdiffb
__builtin_HEXAGON_M6_vabsdiffub
__builtin_HEXAGON_S2_addasl_rrri
__builtin_HEXAGON_S2_asl_i_p
__builtin_HEXAGON_S2_asl_i_p_acc
__builtin_HEXAGON_S2_asl_i_p_and
__builtin_HEXAGON_S2_asl_i_p_nac
__builtin_HEXAGON_S2_asl_i_p_or
__builtin_HEXAGON_S2_asl_i_p_xacc
__builtin_HEXAGON_S2_asl_i_r
__builtin_HEXAGON_S2_asl_i_r_acc
__builtin_HEXAGON_S2_asl_i_r_and
__builtin_HEXAGON_S2_asl_i_r_nac
__builtin_HEXAGON_S2_asl_i_r_or
__builtin_HEXAGON_S2_asl_i_r_sat
__builtin_HEXAGON_S2_asl_i_r_xacc
__builtin_HEXAGON_S2_asl_i_vh
__builtin_HEXAGON_S2_asl_i_vw
__builtin_HEXAGON_S2_asl_r_p
__builtin_HEXAGON_S2_asl_r_p_acc
__builtin_HEXAGON_S2_asl_r_p_and
__builtin_HEXAGON_S2_asl_r_p_nac
__builtin_HEXAGON_S2_asl_r_p_or
__builtin_HEXAGON_S2_asl_r_p_xor
__builtin_HEXAGON_S2_asl_r_r
__builtin_HEXAGON_S2_asl_r_r_acc
__builtin_HEXAGON_S2_asl_r_r_and
__builtin_HEXAGON_S2_asl_r_r_nac
__builtin_HEXAGON_S2_asl_r_r_or
__builtin_HEXAGON_S2_asl_r_r_sat
__builtin_HEXAGON_S2_asl_r_vh
__builtin_HEXAGON_S2_asl_r_vw
__builtin_HEXAGON_S2_asr_i_p
__builtin_HEXAGON_S2_asr_i_p_acc
__builtin_HEXAGON_S2_asr_i_p_and
__builtin_HEXAGON_S2_asr_i_p_nac
__builtin_HEXAGON_S2_asr_i_p_or
__builtin_HEXAGON_S2_asr_i_p_rnd
__builtin_HEXAGON_S2_asr_i_p_rnd_goodsyntax
__builtin_HEXAGON_S2_asr_i_r
__builtin_HEXAGON_S2_asr_i_r_acc
__builtin_HEXAGON_S2_asr_i_r_and
__builtin_HEXAGON_S2_asr_i_r_nac
__builtin_HEXAGON_S2_asr_i_r_or
__builtin_HEXAGON_S2_asr_i_r_rnd
__builtin_HEXAGON_S2_asr_i_r_rnd_goodsyntax
__builtin_HEXAGON_S2_asr_i_svw_trun
__builtin_HEXAGON_S2_asr_i_vh
__builtin_HEXAGON_S2_asr_i_vw
__builtin_HEXAGON_S2_asr_r_p
__builtin_HEXAGON_S2_asr_r_p_acc
__builtin_HEXAGON_S2_asr_r_p_and
__builtin_HEXAGON_S2_asr_r_p_nac
__builtin_HEXAGON_S2_asr_r_p_or
__builtin_HEXAGON_S2_asr_r_p_xor
__builtin_HEXAGON_S2_asr_r_r
__builtin_HEXAGON_S2_asr_r_r_acc
__builtin_HEXAGON_S2_asr_r_r_and
__builtin_HEXAGON_S2_asr_r_r_nac
__builtin_HEXAGON_S2_asr_r_r_or
__builtin_HEXAGON_S2_asr_r_r_sat
__builtin_HEXAGON_S2_asr_r_svw_trun
__builtin_HEXAGON_S2_asr_r_vh
__builtin_HEXAGON_S2_asr_r_vw
__builtin_HEXAGON_S2_brev
__builtin_HEXAGON_S2_brevp
__builtin_HEXAGON_S2_cabacencbin
__builtin_HEXAGON_S2_cl0
__builtin_HEXAGON_S2_cl0p
__builtin_HEXAGON_S2_cl1
__builtin_HEXAGON_S2_cl1p
__builtin_HEXAGON_S2_clb
__builtin_HEXAGON_S2_clbnorm
__builtin_HEXAGON_S2_clbp
__builtin_HEXAGON_S2_clrbit_i
__builtin_HEXAGON_S2_clrbit_r
__builtin_HEXAGON_S2_ct0
__builtin_HEXAGON_S2_ct0p
__builtin_HEXAGON_S2_ct1
__builtin_HEXAGON_S2_ct1p
__builtin_HEXAGON_S2_deinterleave
__builtin_HEXAGON_S2_extractu
__builtin_HEXAGON_S2_extractu_rp
__builtin_HEXAGON_S2_extractup
__builtin_HEXAGON_S2_extractup_rp
__builtin_HEXAGON_S2_insert
__builtin_HEXAGON_S2_insert_rp
__builtin_HEXAGON_S2_insertp
__builtin_HEXAGON_S2_insertp_rp
__builtin_HEXAGON_S2_interleave
__builtin_HEXAGON_S2_lfsp
__builtin_HEXAGON_S2_lsl_r_p
__builtin_HEXAGON_S2_lsl_r_p_acc
__builtin_HEXAGON_S2_lsl_r_p_and
__builtin_HEXAGON_S2_lsl_r_p_nac
__builtin_HEXAGON_S2_lsl_r_p_or
__builtin_HEXAGON_S2_lsl_r_p_xor
__builtin_HEXAGON_S2_lsl_r_r
__builtin_HEXAGON_S2_lsl_r_r_acc
__builtin_HEXAGON_S2_lsl_r_r_and
__builtin_HEXAGON_S2_lsl_r_r_nac
__builtin_HEXAGON_S2_lsl_r_r_or
__builtin_HEXAGON_S2_lsl_r_vh
__builtin_HEXAGON_S2_lsl_r_vw
__builtin_HEXAGON_S2_lsr_i_p
__builtin_HEXAGON_S2_lsr_i_p_acc
__builtin_HEXAGON_S2_lsr_i_p_and
__builtin_HEXAGON_S2_lsr_i_p_nac
__builtin_HEXAGON_S2_lsr_i_p_or
__builtin_HEXAGON_S2_lsr_i_p_xacc
__builtin_HEXAGON_S2_lsr_i_r
__builtin_HEXAGON_S2_lsr_i_r_acc
__builtin_HEXAGON_S2_lsr_i_r_and
__builtin_HEXAGON_S2_lsr_i_r_nac
__builtin_HEXAGON_S2_lsr_i_r_or
__builtin_HEXAGON_S2_lsr_i_r_xacc
__builtin_HEXAGON_S2_lsr_i_vh
__builtin_HEXAGON_S2_lsr_i_vw
__builtin_HEXAGON_S2_lsr_r_p
__builtin_HEXAGON_S2_lsr_r_p_acc
__builtin_HEXAGON_S2_lsr_r_p_and
__builtin_HEXAGON_S2_lsr_r_p_nac
__builtin_HEXAGON_S2_lsr_r_p_or
__builtin_HEXAGON_S2_lsr_r_p_xor
__builtin_HEXAGON_S2_lsr_r_r
__builtin_HEXAGON_S2_lsr_r_r_acc
__builtin_HEXAGON_S2_lsr_r_r_and
__builtin_HEXAGON_S2_lsr_r_r_nac
__builtin_HEXAGON_S2_lsr_r_r_or
__builtin_HEXAGON_S2_lsr_r_vh
__builtin_HEXAGON_S2_lsr_r_vw
__builtin_HEXAGON_S2_packhl
__builtin_HEXAGON_S2_parityp
__builtin_HEXAGON_S2_setbit_i
__builtin_HEXAGON_S2_setbit_r
__builtin_HEXAGON_S2_shuffeb
__builtin_HEXAGON_S2_shuffeh
__builtin_HEXAGON_S2_shuffob
__builtin_HEXAGON_S2_shuffoh
__builtin_HEXAGON_S2_storew_locked
__builtin_HEXAGON_S2_svsathb
__builtin_HEXAGON_S2_svsathub
__builtin_HEXAGON_S2_tableidxb_goodsyntax
__builtin_HEXAGON_S2_tableidxd_goodsyntax
__builtin_HEXAGON_S2_tableidxh_goodsyntax
__builtin_HEXAGON_S2_tableidxw_goodsyntax
__builtin_HEXAGON_S2_togglebit_i
__builtin_HEXAGON_S2_togglebit_r
__builtin_HEXAGON_S2_tstbit_i
__builtin_HEXAGON_S2_tstbit_r
__builtin_HEXAGON_S2_valignib
__builtin_HEXAGON_S2_valignrb
__builtin_HEXAGON_S2_vcnegh
__builtin_HEXAGON_S2_vcrotate
__builtin_HEXAGON_S2_vrcnegh
__builtin_HEXAGON_S2_vrndpackwh
__builtin_HEXAGON_S2_vrndpackwhs
__builtin_HEXAGON_S2_vsathb
__builtin_HEXAGON_S2_vsathb_nopack
__builtin_HEXAGON_S2_vsathub
__builtin_HEXAGON_S2_vsathub_nopack
__builtin_HEXAGON_S2_vsatwh
__builtin_HEXAGON_S2_vsatwh_nopack
__builtin_HEXAGON_S2_vsatwuh
__builtin_HEXAGON_S2_vsatwuh_nopack
__builtin_HEXAGON_S2_vsplatrb
__builtin_HEXAGON_S2_vsplatrh
__builtin_HEXAGON_S2_vspliceib
__builtin_HEXAGON_S2_vsplicerb
__builtin_HEXAGON_S2_vsxtbh
__builtin_HEXAGON_S2_vsxthw
__builtin_HEXAGON_S2_vtrunehb
__builtin_HEXAGON_S2_vtrunewh
__builtin_HEXAGON_S2_vtrunohb
__builtin_HEXAGON_S2_vtrunowh
__builtin_HEXAGON_S2_vzxtbh
__builtin_HEXAGON_S2_vzxthw
__builtin_HEXAGON_S4_addaddi
__builtin_HEXAGON_S4_addi_asl_ri
__builtin_HEXAGON_S4_addi_lsr_ri
__builtin_HEXAGON_S4_andi_asl_ri
__builtin_HEXAGON_S4_andi_lsr_ri
__builtin_HEXAGON_S4_clbaddi
__builtin_HEXAGON_S4_clbpaddi
__builtin_HEXAGON_S4_clbpnorm
__builtin_HEXAGON_S4_extract
__builtin_HEXAGON_S4_extract_rp
__builtin_HEXAGON_S4_extractp
__builtin_HEXAGON_S4_extractp_rp
__builtin_HEXAGON_S4_lsli
__builtin_HEXAGON_S4_ntstbit_i
__builtin_HEXAGON_S4_ntstbit_r
__builtin_HEXAGON_S4_or_andi
__builtin_HEXAGON_S4_or_andix
__builtin_HEXAGON_S4_or_ori
__builtin_HEXAGON_S4_ori_asl_ri
__builtin_HEXAGON_S4_ori_lsr_ri
__builtin_HEXAGON_S4_parity
__builtin_HEXAGON_S4_stored_locked
__builtin_HEXAGON_S4_subaddi
__builtin_HEXAGON_S4_subi_asl_ri
__builtin_HEXAGON_S4_subi_lsr_ri
__builtin_HEXAGON_S4_vrcrotate
__builtin_HEXAGON_S4_vrcrotate_acc
__builtin_HEXAGON_S4_vxaddsubh
__builtin_HEXAGON_S4_vxaddsubhr
__builtin_HEXAGON_S4_vxaddsubw
__builtin_HEXAGON_S4_vxsubaddh
__builtin_HEXAGON_S4_vxsubaddhr
__builtin_HEXAGON_S4_vxsubaddw
__builtin_HEXAGON_S5_asrhub_rnd_sat_goodsyntax
__builtin_HEXAGON_S5_asrhub_sat
__builtin_HEXAGON_S5_popcountp
__builtin_HEXAGON_S5_vasrhrnd_goodsyntax
__builtin_HEXAGON_S6_rol_i_p
__builtin_HEXAGON_S6_rol_i_p_acc
__builtin_HEXAGON_S6_rol_i_p_and
__builtin_HEXAGON_S6_rol_i_p_nac
__builtin_HEXAGON_S6_rol_i_p_or
__builtin_HEXAGON_S6_rol_i_p_xacc
__builtin_HEXAGON_S6_rol_i_r
__builtin_HEXAGON_S6_rol_i_r_acc
__builtin_HEXAGON_S6_rol_i_r_and
__builtin_HEXAGON_S6_rol_i_r_nac
__builtin_HEXAGON_S6_rol_i_r_or
__builtin_HEXAGON_S6_rol_i_r_xacc
__builtin_HEXAGON_S6_vsplatrbp
__builtin_HEXAGON_S6_vtrunehb_ppp
__builtin_HEXAGON_S6_vtrunohb_ppp
__builtin_SI_to_SXTHI_asrh
__builtin_HEXAGON_V6_extractw
__builtin_HEXAGON_V6_extractw_128B
__builtin_HEXAGON_V6_hi
__builtin_HEXAGON_V6_hi_128B
__builtin_HEXAGON_V6_lo
__builtin_HEXAGON_V6_lo_128B
__builtin_HEXAGON_V6_lvsplatb
__builtin_HEXAGON_V6_lvsplatb_128B
__builtin_HEXAGON_V6_lvsplath
__builtin_HEXAGON_V6_lvsplath_128B
__builtin_HEXAGON_V6_lvsplatw
__builtin_HEXAGON_V6_lvsplatw_128B
__builtin_HEXAGON_V6_pred_and
__builtin_HEXAGON_V6_pred_and_128B
__builtin_HEXAGON_V6_pred_and_n
__builtin_HEXAGON_V6_pred_and_n_128B
__builtin_HEXAGON_V6_pred_not
__builtin_HEXAGON_V6_pred_not_128B
__builtin_HEXAGON_V6_pred_or
__builtin_HEXAGON_V6_pred_or_128B
__builtin_HEXAGON_V6_pred_or_n
__builtin_HEXAGON_V6_pred_or_n_128B
__builtin_HEXAGON_V6_pred_scalar2
__builtin_HEXAGON_V6_pred_scalar2_128B
__builtin_HEXAGON_V6_pred_scalar2v2
__builtin_HEXAGON_V6_pred_scalar2v2_128B
__builtin_HEXAGON_V6_pred_xor
__builtin_HEXAGON_V6_pred_xor_128B
__builtin_HEXAGON_V6_shuffeqh
__builtin_HEXAGON_V6_shuffeqh_128B
__builtin_HEXAGON_V6_shuffeqw
__builtin_HEXAGON_V6_shuffeqw_128B
__builtin_HEXAGON_V6_vabsdiffh
__builtin_HEXAGON_V6_vabsdiffh_128B
__builtin_HEXAGON_V6_vabsdiffub
__builtin_HEXAGON_V6_vabsdiffub_128B
__builtin_HEXAGON_V6_vabsdiffuh
__builtin_HEXAGON_V6_vabsdiffuh_128B
__builtin_HEXAGON_V6_vabsdiffw
__builtin_HEXAGON_V6_vabsdiffw_128B
__builtin_HEXAGON_V6_vabsh
__builtin_HEXAGON_V6_vabsh_128B
__builtin_HEXAGON_V6_vabsh_sat
__builtin_HEXAGON_V6_vabsh_sat_128B
__builtin_HEXAGON_V6_vabsw
__builtin_HEXAGON_V6_vabsw_128B
__builtin_HEXAGON_V6_vabsw_sat
__builtin_HEXAGON_V6_vabsw_sat_128B
__builtin_HEXAGON_V6_vaddb
__builtin_HEXAGON_V6_vaddb_128B
__builtin_HEXAGON_V6_vaddb_dv
__builtin_HEXAGON_V6_vaddb_dv_128B
__builtin_HEXAGON_V6_vaddbnq
__builtin_HEXAGON_V6_vaddbnq_128B
__builtin_HEXAGON_V6_vaddbq
__builtin_HEXAGON_V6_vaddbq_128B
__builtin_HEXAGON_V6_vaddbsat
__builtin_HEXAGON_V6_vaddbsat_128B
__builtin_HEXAGON_V6_vaddbsat_dv
__builtin_HEXAGON_V6_vaddbsat_dv_128B
__builtin_HEXAGON_V6_vaddclbh
__builtin_HEXAGON_V6_vaddclbh_128B
__builtin_HEXAGON_V6_vaddclbw
__builtin_HEXAGON_V6_vaddclbw_128B
__builtin_HEXAGON_V6_vaddh
__builtin_HEXAGON_V6_vaddh_128B
__builtin_HEXAGON_V6_vaddh_dv
__builtin_HEXAGON_V6_vaddh_dv_128B
__builtin_HEXAGON_V6_vaddhnq
__builtin_HEXAGON_V6_vaddhnq_128B
__builtin_HEXAGON_V6_vaddhq
__builtin_HEXAGON_V6_vaddhq_128B
__builtin_HEXAGON_V6_vaddhsat
__builtin_HEXAGON_V6_vaddhsat_128B
__builtin_HEXAGON_V6_vaddhsat_dv
__builtin_HEXAGON_V6_vaddhsat_dv_128B
__builtin_HEXAGON_V6_vaddhw
__builtin_HEXAGON_V6_vaddhw_128B
__builtin_HEXAGON_V6_vaddhw_acc
__builtin_HEXAGON_V6_vaddhw_acc_128B
__builtin_HEXAGON_V6_vaddubh
__builtin_HEXAGON_V6_vaddubh_128B
__builtin_HEXAGON_V6_vaddubh_acc
__builtin_HEXAGON_V6_vaddubh_acc_128B
__builtin_HEXAGON_V6_vaddubsat
__builtin_HEXAGON_V6_vaddubsat_128B
__builtin_HEXAGON_V6_vaddubsat_dv
__builtin_HEXAGON_V6_vaddubsat_dv_128B
__builtin_HEXAGON_V6_vaddububb_sat
__builtin_HEXAGON_V6_vaddububb_sat_128B
__builtin_HEXAGON_V6_vadduhsat
__builtin_HEXAGON_V6_vadduhsat_128B
__builtin_HEXAGON_V6_vadduhsat_dv
__builtin_HEXAGON_V6_vadduhsat_dv_128B
__builtin_HEXAGON_V6_vadduhw
__builtin_HEXAGON_V6_vadduhw_128B
__builtin_HEXAGON_V6_vadduhw_acc
__builtin_HEXAGON_V6_vadduhw_acc_128B
__builtin_HEXAGON_V6_vadduwsat
__builtin_HEXAGON_V6_vadduwsat_128B
__builtin_HEXAGON_V6_vadduwsat_dv
__builtin_HEXAGON_V6_vadduwsat_dv_128B
__builtin_HEXAGON_V6_vaddw
__builtin_HEXAGON_V6_vaddw_128B
__builtin_HEXAGON_V6_vaddw_dv
__builtin_HEXAGON_V6_vaddw_dv_128B
__builtin_HEXAGON_V6_vaddwnq
__builtin_HEXAGON_V6_vaddwnq_128B
__builtin_HEXAGON_V6_vaddwq
__builtin_HEXAGON_V6_vaddwq_128B
__builtin_HEXAGON_V6_vaddwsat
__builtin_HEXAGON_V6_vaddwsat_128B
__builtin_HEXAGON_V6_vaddwsat_dv
__builtin_HEXAGON_V6_vaddwsat_dv_128B
__builtin_HEXAGON_V6_valignb
__builtin_HEXAGON_V6_valignb_128B
__builtin_HEXAGON_V6_valignbi
__builtin_HEXAGON_V6_valignbi_128B
__builtin_HEXAGON_V6_vand
__builtin_HEXAGON_V6_vand_128B
__builtin_HEXAGON_V6_vandnqrt
__builtin_HEXAGON_V6_vandnqrt_128B
__builtin_HEXAGON_V6_vandnqrt_acc
__builtin_HEXAGON_V6_vandnqrt_acc_128B
__builtin_HEXAGON_V6_vandqrt
__builtin_HEXAGON_V6_vandqrt_128B
__builtin_HEXAGON_V6_vandqrt_acc
__builtin_HEXAGON_V6_vandqrt_acc_128B
__builtin_HEXAGON_V6_vandvnqv
__builtin_HEXAGON_V6_vandvnqv_128B
__builtin_HEXAGON_V6_vandvqv
__builtin_HEXAGON_V6_vandvqv_128B
__builtin_HEXAGON_V6_vandvrt
__builtin_HEXAGON_V6_vandvrt_128B
__builtin_HEXAGON_V6_vandvrt_acc
__builtin_HEXAGON_V6_vandvrt_acc_128B
__builtin_HEXAGON_V6_vaslh
__builtin_HEXAGON_V6_vaslh_128B
__builtin_HEXAGON_V6_vaslhv
__builtin_HEXAGON_V6_vaslhv_128B
__builtin_HEXAGON_V6_vaslw
__builtin_HEXAGON_V6_vaslw_128B
__builtin_HEXAGON_V6_vaslw_acc
__builtin_HEXAGON_V6_vaslw_acc_128B
__builtin_HEXAGON_V6_vaslwv
__builtin_HEXAGON_V6_vaslwv_128B
__builtin_HEXAGON_V6_vasrh
__builtin_HEXAGON_V6_vasrh_128B
__builtin_HEXAGON_V6_vasrhbrndsat
__builtin_HEXAGON_V6_vasrhbrndsat_128B
__builtin_HEXAGON_V6_vasrhbsat
__builtin_HEXAGON_V6_vasrhbsat_128B
__builtin_HEXAGON_V6_vasrhubrndsat
__builtin_HEXAGON_V6_vasrhubrndsat_128B
__builtin_HEXAGON_V6_vasrhubsat
__builtin_HEXAGON_V6_vasrhubsat_128B
__builtin_HEXAGON_V6_vasrhv
__builtin_HEXAGON_V6_vasrhv_128B
__builtin_HEXAGON_V6_vasruwuhrndsat
__builtin_HEXAGON_V6_vasruwuhrndsat_128B
__builtin_HEXAGON_V6_vasrw
__builtin_HEXAGON_V6_vasrw_128B
__builtin_HEXAGON_V6_vasrw_acc
__builtin_HEXAGON_V6_vasrw_acc_128B
__builtin_HEXAGON_V6_vasrwh
__builtin_HEXAGON_V6_vasrwh_128B
__builtin_HEXAGON_V6_vasrwhrndsat
__builtin_HEXAGON_V6_vasrwhrndsat_128B
__builtin_HEXAGON_V6_vasrwhsat
__builtin_HEXAGON_V6_vasrwhsat_128B
__builtin_HEXAGON_V6_vasrwuhrndsat
__builtin_HEXAGON_V6_vasrwuhrndsat_128B
__builtin_HEXAGON_V6_vasrwuhsat
__builtin_HEXAGON_V6_vasrwuhsat_128B
__builtin_HEXAGON_V6_vasrwv
__builtin_HEXAGON_V6_vasrwv_128B
__builtin_HEXAGON_V6_vassign
__builtin_HEXAGON_V6_vassign_128B
__builtin_HEXAGON_V6_vassignp
__builtin_HEXAGON_V6_vassignp_128B
__builtin_HEXAGON_V6_vavgh
__builtin_HEXAGON_V6_vavgh_128B
__builtin_HEXAGON_V6_vavghrnd
__builtin_HEXAGON_V6_vavghrnd_128B
__builtin_HEXAGON_V6_vavgub
__builtin_HEXAGON_V6_vavgub_128B
__builtin_HEXAGON_V6_vavgubrnd
__builtin_HEXAGON_V6_vavgubrnd_128B
__builtin_HEXAGON_V6_vavguh
__builtin_HEXAGON_V6_vavguh_128B
__builtin_HEXAGON_V6_vavguhrnd
__builtin_HEXAGON_V6_vavguhrnd_128B
__builtin_HEXAGON_V6_vavgw
__builtin_HEXAGON_V6_vavgw_128B
__builtin_HEXAGON_V6_vavgwrnd
__builtin_HEXAGON_V6_vavgwrnd_128B
__builtin_HEXAGON_V6_vcl0h
__builtin_HEXAGON_V6_vcl0h_128B
__builtin_HEXAGON_V6_vcl0w
__builtin_HEXAGON_V6_vcl0w_128B
__builtin_HEXAGON_V6_vcombine
__builtin_HEXAGON_V6_vcombine_128B
__builtin_HEXAGON_V6_vd0
__builtin_HEXAGON_V6_vd0_128B
__builtin_HEXAGON_V6_vdealb
__builtin_HEXAGON_V6_vdealb_128B
__builtin_HEXAGON_V6_vdealb4w
__builtin_HEXAGON_V6_vdealb4w_128B
__builtin_HEXAGON_V6_vdealh
__builtin_HEXAGON_V6_vdealh_128B
__builtin_HEXAGON_V6_vdealvdd
__builtin_HEXAGON_V6_vdealvdd_128B
__builtin_HEXAGON_V6_vdelta
__builtin_HEXAGON_V6_vdelta_128B
__builtin_HEXAGON_V6_vdmpybus
__builtin_HEXAGON_V6_vdmpybus_128B
__builtin_HEXAGON_V6_vdmpybus_acc
__builtin_HEXAGON_V6_vdmpybus_acc_128B
__builtin_HEXAGON_V6_vdmpybus_dv
__builtin_HEXAGON_V6_vdmpybus_dv_128B
__builtin_HEXAGON_V6_vdmpybus_dv_acc
__builtin_HEXAGON_V6_vdmpybus_dv_acc_128B
__builtin_HEXAGON_V6_vdmpyhb
__builtin_HEXAGON_V6_vdmpyhb_128B
__builtin_HEXAGON_V6_vdmpyhb_acc
__builtin_HEXAGON_V6_vdmpyhb_acc_128B
__builtin_HEXAGON_V6_vdmpyhb_dv
__builtin_HEXAGON_V6_vdmpyhb_dv_128B
__builtin_HEXAGON_V6_vdmpyhb_dv_acc
__builtin_HEXAGON_V6_vdmpyhb_dv_acc_128B
__builtin_HEXAGON_V6_vdmpyhisat
__builtin_HEXAGON_V6_vdmpyhisat_128B
__builtin_HEXAGON_V6_vdmpyhisat_acc
__builtin_HEXAGON_V6_vdmpyhisat_acc_128B
__builtin_HEXAGON_V6_vdmpyhsat
__builtin_HEXAGON_V6_vdmpyhsat_128B
__builtin_HEXAGON_V6_vdmpyhsat_acc
__builtin_HEXAGON_V6_vdmpyhsat_acc_128B
__builtin_HEXAGON_V6_vdmpyhsuisat
__builtin_HEXAGON_V6_vdmpyhsuisat_128B
__builtin_HEXAGON_V6_vdmpyhsuisat_acc
__builtin_HEXAGON_V6_vdmpyhsuisat_acc_128B
__builtin_HEXAGON_V6_vdmpyhsusat
__builtin_HEXAGON_V6_vdmpyhsusat_128B
__builtin_HEXAGON_V6_vdmpyhsusat_acc
__builtin_HEXAGON_V6_vdmpyhsusat_acc_128B
__builtin_HEXAGON_V6_vdmpyhvsat
__builtin_HEXAGON_V6_vdmpyhvsat_128B
__builtin_HEXAGON_V6_vdmpyhvsat_acc
__builtin_HEXAGON_V6_vdmpyhvsat_acc_128B
__builtin_HEXAGON_V6_vdsaduh
__builtin_HEXAGON_V6_vdsaduh_128B
__builtin_HEXAGON_V6_vdsaduh_acc
__builtin_HEXAGON_V6_vdsaduh_acc_128B
__builtin_HEXAGON_V6_veqb
__builtin_HEXAGON_V6_veqb_128B
__builtin_HEXAGON_V6_veqb_and
__builtin_HEXAGON_V6_veqb_and_128B
__builtin_HEXAGON_V6_veqb_or
__builtin_HEXAGON_V6_veqb_or_128B
__builtin_HEXAGON_V6_veqb_xor
__builtin_HEXAGON_V6_veqb_xor_128B
__builtin_HEXAGON_V6_veqh
__builtin_HEXAGON_V6_veqh_128B
__builtin_HEXAGON_V6_veqh_and
__builtin_HEXAGON_V6_veqh_and_128B
__builtin_HEXAGON_V6_veqh_or
__builtin_HEXAGON_V6_veqh_or_128B
__builtin_HEXAGON_V6_veqh_xor
__builtin_HEXAGON_V6_veqh_xor_128B
__builtin_HEXAGON_V6_veqw
__builtin_HEXAGON_V6_veqw_128B
__builtin_HEXAGON_V6_veqw_and
__builtin_HEXAGON_V6_veqw_and_128B
__builtin_HEXAGON_V6_veqw_or
__builtin_HEXAGON_V6_veqw_or_128B
__builtin_HEXAGON_V6_veqw_xor
__builtin_HEXAGON_V6_veqw_xor_128B
__builtin_HEXAGON_V6_vgtb
__builtin_HEXAGON_V6_vgtb_128B
__builtin_HEXAGON_V6_vgtb_and
__builtin_HEXAGON_V6_vgtb_and_128B
__builtin_HEXAGON_V6_vgtb_or
__builtin_HEXAGON_V6_vgtb_or_128B
__builtin_HEXAGON_V6_vgtb_xor
__builtin_HEXAGON_V6_vgtb_xor_128B
__builtin_HEXAGON_V6_vgth
__builtin_HEXAGON_V6_vgth_128B
__builtin_HEXAGON_V6_vgth_and
__builtin_HEXAGON_V6_vgth_and_128B
__builtin_HEXAGON_V6_vgth_or
__builtin_HEXAGON_V6_vgth_or_128B
__builtin_HEXAGON_V6_vgth_xor
__builtin_HEXAGON_V6_vgth_xor_128B
__builtin_HEXAGON_V6_vgtub
__builtin_HEXAGON_V6_vgtub_128B
__builtin_HEXAGON_V6_vgtub_and
__builtin_HEXAGON_V6_vgtub_and_128B
__builtin_HEXAGON_V6_vgtub_or
__builtin_HEXAGON_V6_vgtub_or_128B
__builtin_HEXAGON_V6_vgtub_xor
__builtin_HEXAGON_V6_vgtub_xor_128B
__builtin_HEXAGON_V6_vgtuh
__builtin_HEXAGON_V6_vgtuh_128B
__builtin_HEXAGON_V6_vgtuh_and
__builtin_HEXAGON_V6_vgtuh_and_128B
__builtin_HEXAGON_V6_vgtuh_or
__builtin_HEXAGON_V6_vgtuh_or_128B
__builtin_HEXAGON_V6_vgtuh_xor
__builtin_HEXAGON_V6_vgtuh_xor_128B
__builtin_HEXAGON_V6_vgtuw
__builtin_HEXAGON_V6_vgtuw_128B
__builtin_HEXAGON_V6_vgtuw_and
__builtin_HEXAGON_V6_vgtuw_and_128B
__builtin_HEXAGON_V6_vgtuw_or
__builtin_HEXAGON_V6_vgtuw_or_128B
__builtin_HEXAGON_V6_vgtuw_xor
__builtin_HEXAGON_V6_vgtuw_xor_128B
__builtin_HEXAGON_V6_vgtw
__builtin_HEXAGON_V6_vgtw_128B
__builtin_HEXAGON_V6_vgtw_and
__builtin_HEXAGON_V6_vgtw_and_128B
__builtin_HEXAGON_V6_vgtw_or
__builtin_HEXAGON_V6_vgtw_or_128B
__builtin_HEXAGON_V6_vgtw_xor
__builtin_HEXAGON_V6_vgtw_xor_128B
__builtin_HEXAGON_V6_vinsertwr
__builtin_HEXAGON_V6_vinsertwr_128B
__builtin_HEXAGON_V6_vlalignb
__builtin_HEXAGON_V6_vlalignb_128B
__builtin_HEXAGON_V6_vlalignbi
__builtin_HEXAGON_V6_vlalignbi_128B
__builtin_HEXAGON_V6_vlsrb
__builtin_HEXAGON_V6_vlsrb_128B
__builtin_HEXAGON_V6_vlsrh
__builtin_HEXAGON_V6_vlsrh_128B
__builtin_HEXAGON_V6_vlsrhv
__builtin_HEXAGON_V6_vlsrhv_128B
__builtin_HEXAGON_V6_vlsrw
__builtin_HEXAGON_V6_vlsrw_128B
__builtin_HEXAGON_V6_vlsrwv
__builtin_HEXAGON_V6_vlsrwv_128B
__builtin_HEXAGON_V6_vlutb
__builtin_HEXAGON_V6_vlutb_128B
__builtin_HEXAGON_V6_vlutb_acc
__builtin_HEXAGON_V6_vlutb_acc_128B
__builtin_HEXAGON_V6_vlutb_dv
__builtin_HEXAGON_V6_vlutb_dv_128B
__builtin_HEXAGON_V6_vlutb_dv_acc
__builtin_HEXAGON_V6_vlutb_dv_acc_128B
__builtin_HEXAGON_V6_vlutvvb
__builtin_HEXAGON_V6_vlutvvb_128B
__builtin_HEXAGON_V6_vlutvvb_nm
__builtin_HEXAGON_V6_vlutvvb_nm_128B
__builtin_HEXAGON_V6_vlutvvb_oracc
__builtin_HEXAGON_V6_vlutvvb_oracc_128B
__builtin_HEXAGON_V6_vlutvvb_oracci
__builtin_HEXAGON_V6_vlutvvb_oracci_128B
__builtin_HEXAGON_V6_vlutvvbi
__builtin_HEXAGON_V6_vlutvvbi_128B
__builtin_HEXAGON_V6_vlutvwh
__builtin_HEXAGON_V6_vlutvwh_128B
__builtin_HEXAGON_V6_vlutvwh_nm
__builtin_HEXAGON_V6_vlutvwh_nm_128B
__builtin_HEXAGON_V6_vlutvwh_oracc
__builtin_HEXAGON_V6_vlutvwh_oracc_128B
__builtin_HEXAGON_V6_vlutvwh_oracci
__builtin_HEXAGON_V6_vlutvwh_oracci_128B
__builtin_HEXAGON_V6_vlutvwhi
__builtin_HEXAGON_V6_vlutvwhi_128B
__builtin_HEXAGON_V6_vmaskedstorenq
__builtin_HEXAGON_V6_vmaskedstorenq_128B
__builtin_HEXAGON_V6_vmaskedstorentnq
__builtin_HEXAGON_V6_vmaskedstorentnq_128B
__builtin_HEXAGON_V6_vmaskedstorentq
__builtin_HEXAGON_V6_vmaskedstorentq_128B
__builtin_HEXAGON_V6_vmaskedstoreq
__builtin_HEXAGON_V6_vmaskedstoreq_128B
__builtin_HEXAGON_V6_vmaxb
__builtin_HEXAGON_V6_vmaxb_128B
__builtin_HEXAGON_V6_vmaxh
__builtin_HEXAGON_V6_vmaxh_128B
__builtin_HEXAGON_V6_vmaxub
__builtin_HEXAGON_V6_vmaxub_128B
__builtin_HEXAGON_V6_vmaxuh
__builtin_HEXAGON_V6_vmaxuh_128B
__builtin_HEXAGON_V6_vmaxw
__builtin_HEXAGON_V6_vmaxw_128B
__builtin_HEXAGON_V6_vminb
__builtin_HEXAGON_V6_vminb_128B
__builtin_HEXAGON_V6_vminh
__builtin_HEXAGON_V6_vminh_128B
__builtin_HEXAGON_V6_vminub
__builtin_HEXAGON_V6_vminub_128B
__builtin_HEXAGON_V6_vminuh
__builtin_HEXAGON_V6_vminuh_128B
__builtin_HEXAGON_V6_vminw
__builtin_HEXAGON_V6_vminw_128B
__builtin_HEXAGON_V6_vmpabus
__builtin_HEXAGON_V6_vmpabus_128B
__builtin_HEXAGON_V6_vmpabus_acc
__builtin_HEXAGON_V6_vmpabus_acc_128B
__builtin_HEXAGON_V6_vmpabusv
__builtin_HEXAGON_V6_vmpabusv_128B
__builtin_HEXAGON_V6_vmpabuuv
__builtin_HEXAGON_V6_vmpabuuv_128B
__builtin_HEXAGON_V6_vmpahb
__builtin_HEXAGON_V6_vmpahb_128B
__builtin_HEXAGON_V6_vmpahb_acc
__builtin_HEXAGON_V6_vmpahb_acc_128B
__builtin_HEXAGON_V6_vmpauhb
__builtin_HEXAGON_V6_vmpauhb_128B
__builtin_HEXAGON_V6_vmpauhb_acc
__builtin_HEXAGON_V6_vmpauhb_acc_128B
__builtin_HEXAGON_V6_vmpybus
__builtin_HEXAGON_V6_vmpybus_128B
__builtin_HEXAGON_V6_vmpybus_acc
__builtin_HEXAGON_V6_vmpybus_acc_128B
__builtin_HEXAGON_V6_vmpybusv
__builtin_HEXAGON_V6_vmpybusv_128B
__builtin_HEXAGON_V6_vmpybusv_acc
__builtin_HEXAGON_V6_vmpybusv_acc_128B
__builtin_HEXAGON_V6_vmpybv
__builtin_HEXAGON_V6_vmpybv_128B
__builtin_HEXAGON_V6_vmpybv_acc
__builtin_HEXAGON_V6_vmpybv_acc_128B
__builtin_HEXAGON_V6_vmpyewuh
__builtin_HEXAGON_V6_vmpyewuh_128B
__builtin_HEXAGON_V6_vmpyewuh_64
__builtin_HEXAGON_V6_vmpyewuh_64_128B
__builtin_HEXAGON_V6_vmpyh
__builtin_HEXAGON_V6_vmpyh_128B
__builtin_HEXAGON_V6_vmpyhsat_acc
__builtin_HEXAGON_V6_vmpyhsat_acc_128B
__builtin_HEXAGON_V6_vmpyhsrs
__builtin_HEXAGON_V6_vmpyhsrs_128B
__builtin_HEXAGON_V6_vmpyhss
__builtin_HEXAGON_V6_vmpyhss_128B
__builtin_HEXAGON_V6_vmpyhus
__builtin_HEXAGON_V6_vmpyhus_128B
__builtin_HEXAGON_V6_vmpyhus_acc
__builtin_HEXAGON_V6_vmpyhus_acc_128B
__builtin_HEXAGON_V6_vmpyhv
__builtin_HEXAGON_V6_vmpyhv_128B
__builtin_HEXAGON_V6_vmpyhv_acc
__builtin_HEXAGON_V6_vmpyhv_acc_128B
__builtin_HEXAGON_V6_vmpyhvsrs
__builtin_HEXAGON_V6_vmpyhvsrs_128B
__builtin_HEXAGON_V6_vmpyieoh
__builtin_HEXAGON_V6_vmpyieoh_128B
__builtin_HEXAGON_V6_vmpyiewh_acc
__builtin_HEXAGON_V6_vmpyiewh_acc_128B
__builtin_HEXAGON_V6_vmpyiewuh
__builtin_HEXAGON_V6_vmpyiewuh_128B
__builtin_HEXAGON_V6_vmpyiewuh_acc
__builtin_HEXAGON_V6_vmpyiewuh_acc_128B
__builtin_HEXAGON_V6_vmpyih
__builtin_HEXAGON_V6_vmpyih_128B
__builtin_HEXAGON_V6_vmpyih_acc
__builtin_HEXAGON_V6_vmpyih_acc_128B
__builtin_HEXAGON_V6_vmpyihb
__builtin_HEXAGON_V6_vmpyihb_128B
__builtin_HEXAGON_V6_vmpyihb_acc
__builtin_HEXAGON_V6_vmpyihb_acc_128B
__builtin_HEXAGON_V6_vmpyiowh
__builtin_HEXAGON_V6_vmpyiowh_128B
__builtin_HEXAGON_V6_vmpyiwb
__builtin_HEXAGON_V6_vmpyiwb_128B
__builtin_HEXAGON_V6_vmpyiwb_acc
__builtin_HEXAGON_V6_vmpyiwb_acc_128B
__builtin_HEXAGON_V6_vmpyiwh
__builtin_HEXAGON_V6_vmpyiwh_128B
__builtin_HEXAGON_V6_vmpyiwh_acc
__builtin_HEXAGON_V6_vmpyiwh_acc_128B
__builtin_HEXAGON_V6_vmpyiwub
__builtin_HEXAGON_V6_vmpyiwub_128B
__builtin_HEXAGON_V6_vmpyiwub_acc
__builtin_HEXAGON_V6_vmpyiwub_acc_128B
__builtin_HEXAGON_V6_vmpyowh
__builtin_HEXAGON_V6_vmpyowh_128B
__builtin_HEXAGON_V6_vmpyowh_64_acc
__builtin_HEXAGON_V6_vmpyowh_64_acc_128B
__builtin_HEXAGON_V6_vmpyowh_rnd
__builtin_HEXAGON_V6_vmpyowh_rnd_128B
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc_128B
__builtin_HEXAGON_V6_vmpyowh_sacc
__builtin_HEXAGON_V6_vmpyowh_sacc_128B
__builtin_HEXAGON_V6_vmpyub
__builtin_HEXAGON_V6_vmpyub_128B
__builtin_HEXAGON_V6_vmpyub_acc
__builtin_HEXAGON_V6_vmpyub_acc_128B
__builtin_HEXAGON_V6_vmpyubv
__builtin_HEXAGON_V6_vmpyubv_128B
__builtin_HEXAGON_V6_vmpyubv_acc
__builtin_HEXAGON_V6_vmpyubv_acc_128B
__builtin_HEXAGON_V6_vmpyuh
__builtin_HEXAGON_V6_vmpyuh_128B
__builtin_HEXAGON_V6_vmpyuh_acc
__builtin_HEXAGON_V6_vmpyuh_acc_128B
__builtin_HEXAGON_V6_vmpyuhv
__builtin_HEXAGON_V6_vmpyuhv_128B
__builtin_HEXAGON_V6_vmpyuhv_acc
__builtin_HEXAGON_V6_vmpyuhv_acc_128B
__builtin_HEXAGON_V6_vmux
__builtin_HEXAGON_V6_vmux_128B
__builtin_HEXAGON_V6_vnavgh
__builtin_HEXAGON_V6_vnavgh_128B
__builtin_HEXAGON_V6_vnavgub
__builtin_HEXAGON_V6_vnavgub_128B
__builtin_HEXAGON_V6_vnavgw
__builtin_HEXAGON_V6_vnavgw_128B
__builtin_HEXAGON_V6_vnormamth
__builtin_HEXAGON_V6_vnormamth_128B
__builtin_HEXAGON_V6_vnormamtw
__builtin_HEXAGON_V6_vnormamtw_128B
__builtin_HEXAGON_V6_vnot
__builtin_HEXAGON_V6_vnot_128B
__builtin_HEXAGON_V6_vor
__builtin_HEXAGON_V6_vor_128B
__builtin_HEXAGON_V6_vpackeb
__builtin_HEXAGON_V6_vpackeb_128B
__builtin_HEXAGON_V6_vpackeh
__builtin_HEXAGON_V6_vpackeh_128B
__builtin_HEXAGON_V6_vpackhb_sat
__builtin_HEXAGON_V6_vpackhb_sat_128B
__builtin_HEXAGON_V6_vpackhub_sat
__builtin_HEXAGON_V6_vpackhub_sat_128B
__builtin_HEXAGON_V6_vpackob
__builtin_HEXAGON_V6_vpackob_128B
__builtin_HEXAGON_V6_vpackoh
__builtin_HEXAGON_V6_vpackoh_128B
__builtin_HEXAGON_V6_vpackwh_sat
__builtin_HEXAGON_V6_vpackwh_sat_128B
__builtin_HEXAGON_V6_vpackwuh_sat
__builtin_HEXAGON_V6_vpackwuh_sat_128B
__builtin_HEXAGON_V6_vpopcounth
__builtin_HEXAGON_V6_vpopcounth_128B
__builtin_HEXAGON_V6_vrdelta
__builtin_HEXAGON_V6_vrdelta_128B
__builtin_HEXAGON_V6_vrmpybus
__builtin_HEXAGON_V6_vrmpybus_128B
__builtin_HEXAGON_V6_vrmpybus_acc
__builtin_HEXAGON_V6_vrmpybus_acc_128B
__builtin_HEXAGON_V6_vrmpybusi
__builtin_HEXAGON_V6_vrmpybusi_128B
__builtin_HEXAGON_V6_vrmpybusi_acc
__builtin_HEXAGON_V6_vrmpybusi_acc_128B
__builtin_HEXAGON_V6_vrmpybusv
__builtin_HEXAGON_V6_vrmpybusv_128B
__builtin_HEXAGON_V6_vrmpybusv_acc
__builtin_HEXAGON_V6_vrmpybusv_acc_128B
__builtin_HEXAGON_V6_vrmpybv
__builtin_HEXAGON_V6_vrmpybv_128B
__builtin_HEXAGON_V6_vrmpybv_acc
__builtin_HEXAGON_V6_vrmpybv_acc_128B
__builtin_HEXAGON_V6_vrmpyub
__builtin_HEXAGON_V6_vrmpyub_128B
__builtin_HEXAGON_V6_vrmpyub_acc
__builtin_HEXAGON_V6_vrmpyub_acc_128B
__builtin_HEXAGON_V6_vrmpyubi
__builtin_HEXAGON_V6_vrmpyubi_128B
__builtin_HEXAGON_V6_vrmpyubi_acc
__builtin_HEXAGON_V6_vrmpyubi_acc_128B
__builtin_HEXAGON_V6_vrmpyubv
__builtin_HEXAGON_V6_vrmpyubv_128B
__builtin_HEXAGON_V6_vrmpyubv_acc
__builtin_HEXAGON_V6_vrmpyubv_acc_128B
__builtin_HEXAGON_V6_vror
__builtin_HEXAGON_V6_vror_128B
__builtin_HEXAGON_V6_vroundhb
__builtin_HEXAGON_V6_vroundhb_128B
__builtin_HEXAGON_V6_vroundhub
__builtin_HEXAGON_V6_vroundhub_128B
__builtin_HEXAGON_V6_vrounduhub
__builtin_HEXAGON_V6_vrounduhub_128B
__builtin_HEXAGON_V6_vrounduwuh
__builtin_HEXAGON_V6_vrounduwuh_128B
__builtin_HEXAGON_V6_vroundwh
__builtin_HEXAGON_V6_vroundwh_128B
__builtin_HEXAGON_V6_vroundwuh
__builtin_HEXAGON_V6_vroundwuh_128B
__builtin_HEXAGON_V6_vrsadubi
__builtin_HEXAGON_V6_vrsadubi_128B
__builtin_HEXAGON_V6_vrsadubi_acc
__builtin_HEXAGON_V6_vrsadubi_acc_128B
__builtin_HEXAGON_V6_vsathub
__builtin_HEXAGON_V6_vsathub_128B
__builtin_HEXAGON_V6_vsatuwuh
__builtin_HEXAGON_V6_vsatuwuh_128B
__builtin_HEXAGON_V6_vsatwh
__builtin_HEXAGON_V6_vsatwh_128B
__builtin_HEXAGON_V6_vsb
__builtin_HEXAGON_V6_vsb_128B
__builtin_HEXAGON_V6_vsh
__builtin_HEXAGON_V6_vsh_128B
__builtin_HEXAGON_V6_vshufeh
__builtin_HEXAGON_V6_vshufeh_128B
__builtin_HEXAGON_V6_vshuffb
__builtin_HEXAGON_V6_vshuffb_128B
__builtin_HEXAGON_V6_vshuffeb
__builtin_HEXAGON_V6_vshuffeb_128B
__builtin_HEXAGON_V6_vshuffh
__builtin_HEXAGON_V6_vshuffh_128B
__builtin_HEXAGON_V6_vshuffob
__builtin_HEXAGON_V6_vshuffob_128B
__builtin_HEXAGON_V6_vshuffvdd
__builtin_HEXAGON_V6_vshuffvdd_128B
__builtin_HEXAGON_V6_vshufoeb
__builtin_HEXAGON_V6_vshufoeb_128B
__builtin_HEXAGON_V6_vshufoeh
__builtin_HEXAGON_V6_vshufoeh_128B
__builtin_HEXAGON_V6_vshufoh
__builtin_HEXAGON_V6_vshufoh_128B
__builtin_HEXAGON_V6_vsubb
__builtin_HEXAGON_V6_vsubb_128B
__builtin_HEXAGON_V6_vsubb_dv
__builtin_HEXAGON_V6_vsubb_dv_128B
__builtin_HEXAGON_V6_vsubbnq
__builtin_HEXAGON_V6_vsubbnq_128B
__builtin_HEXAGON_V6_vsubbq
__builtin_HEXAGON_V6_vsubbq_128B
__builtin_HEXAGON_V6_vsubbsat
__builtin_HEXAGON_V6_vsubbsat_128B
__builtin_HEXAGON_V6_vsubbsat_dv
__builtin_HEXAGON_V6_vsubbsat_dv_128B
__builtin_HEXAGON_V6_vsubh
__builtin_HEXAGON_V6_vsubh_128B
__builtin_HEXAGON_V6_vsubh_dv
__builtin_HEXAGON_V6_vsubh_dv_128B
__builtin_HEXAGON_V6_vsubhnq
__builtin_HEXAGON_V6_vsubhnq_128B
__builtin_HEXAGON_V6_vsubhq
__builtin_HEXAGON_V6_vsubhq_128B
__builtin_HEXAGON_V6_vsubhsat
__builtin_HEXAGON_V6_vsubhsat_128B
__builtin_HEXAGON_V6_vsubhsat_dv
__builtin_HEXAGON_V6_vsubhsat_dv_128B
__builtin_HEXAGON_V6_vsubhw
__builtin_HEXAGON_V6_vsubhw_128B
__builtin_HEXAGON_V6_vsububh
__builtin_HEXAGON_V6_vsububh_128B
__builtin_HEXAGON_V6_vsububsat
__builtin_HEXAGON_V6_vsububsat_128B
__builtin_HEXAGON_V6_vsububsat_dv
__builtin_HEXAGON_V6_vsububsat_dv_128B
__builtin_HEXAGON_V6_vsubububb_sat
__builtin_HEXAGON_V6_vsubububb_sat_128B
__builtin_HEXAGON_V6_vsubuhsat
__builtin_HEXAGON_V6_vsubuhsat_128B
__builtin_HEXAGON_V6_vsubuhsat_dv
__builtin_HEXAGON_V6_vsubuhsat_dv_128B
__builtin_HEXAGON_V6_vsubuhw
__builtin_HEXAGON_V6_vsubuhw_128B
__builtin_HEXAGON_V6_vsubuwsat
__builtin_HEXAGON_V6_vsubuwsat_128B
__builtin_HEXAGON_V6_vsubuwsat_dv
__builtin_HEXAGON_V6_vsubuwsat_dv_128B
__builtin_HEXAGON_V6_vsubw
__builtin_HEXAGON_V6_vsubw_128B
__builtin_HEXAGON_V6_vsubw_dv
__builtin_HEXAGON_V6_vsubw_dv_128B
__builtin_HEXAGON_V6_vsubwnq
__builtin_HEXAGON_V6_vsubwnq_128B
__builtin_HEXAGON_V6_vsubwq
__builtin_HEXAGON_V6_vsubwq_128B
__builtin_HEXAGON_V6_vsubwsat
__builtin_HEXAGON_V6_vsubwsat_128B
__builtin_HEXAGON_V6_vsubwsat_dv
__builtin_HEXAGON_V6_vsubwsat_dv_128B
__builtin_HEXAGON_V6_vswap
__builtin_HEXAGON_V6_vswap_128B
__builtin_HEXAGON_V6_vtmpyb
__builtin_HEXAGON_V6_vtmpyb_128B
__builtin_HEXAGON_V6_vtmpyb_acc
__builtin_HEXAGON_V6_vtmpyb_acc_128B
__builtin_HEXAGON_V6_vtmpybus
__builtin_HEXAGON_V6_vtmpybus_128B
__builtin_HEXAGON_V6_vtmpybus_acc
__builtin_HEXAGON_V6_vtmpybus_acc_128B
__builtin_HEXAGON_V6_vtmpyhb
__builtin_HEXAGON_V6_vtmpyhb_128B
__builtin_HEXAGON_V6_vtmpyhb_acc
__builtin_HEXAGON_V6_vtmpyhb_acc_128B
__builtin_HEXAGON_V6_vunpackb
__builtin_HEXAGON_V6_vunpackb_128B
__builtin_HEXAGON_V6_vunpackh
__builtin_HEXAGON_V6_vunpackh_128B
__builtin_HEXAGON_V6_vunpackob
__builtin_HEXAGON_V6_vunpackob_128B
__builtin_HEXAGON_V6_vunpackoh
__builtin_HEXAGON_V6_vunpackoh_128B
__builtin_HEXAGON_V6_vunpackub
__builtin_HEXAGON_V6_vunpackub_128B
__builtin_HEXAGON_V6_vunpackuh
__builtin_HEXAGON_V6_vunpackuh_128B
__builtin_HEXAGON_V6_vxor
__builtin_HEXAGON_V6_vxor_128B
__builtin_HEXAGON_V6_vzb
__builtin_HEXAGON_V6_vzb_128B
__builtin_HEXAGON_V6_vzh
__builtin_HEXAGON_V6_vzh_128B
__builtin_HEXAGON_Y2_dccleana
__builtin_HEXAGON_Y2_dccleaninva
__builtin_HEXAGON_Y2_dcinva
__builtin_HEXAGON_Y2_dczeroa
__builtin_HEXAGON_Y4_l2fetch
__builtin_HEXAGON_Y5_l2fetch
__builtin_brev_ldb
__builtin_brev_ldd
__builtin_brev_ldh
__builtin_brev_ldub
__builtin_brev_lduh
__builtin_brev_ldw
__builtin_brev_stb
__builtin_brev_std
__builtin_brev_sth
__builtin_brev_sthhi
__builtin_brev_stw
__builtin_circ_ldb
__builtin_circ_ldd
__builtin_circ_ldh
__builtin_circ_ldub
__builtin_circ_lduh
__builtin_circ_ldw
__builtin_circ_stb
__builtin_circ_std
__builtin_circ_sth
__builtin_circ_sthhi
__builtin_circ_stw
__builtin__mm256i_vaddw
__builtin_HEXAGON_prefetch
__builtin_mips_absq_s_ph
__builtin_mips_absq_s_qb
__builtin_mips_absq_s_w
__builtin_msa_add_a_b
__builtin_msa_add_a_d
__builtin_msa_add_a_h
__builtin_msa_add_a_w
__builtin_mips_addq_ph
__builtin_mips_addq_s_ph
__builtin_mips_addq_s_w
__builtin_mips_addqh_ph
__builtin_mips_addqh_r_ph
__builtin_mips_addqh_r_w
__builtin_mips_addqh_w
__builtin_msa_adds_a_b
__builtin_msa_adds_a_d
__builtin_msa_adds_a_h
__builtin_msa_adds_a_w
__builtin_msa_adds_s_b
__builtin_msa_adds_s_d
__builtin_msa_adds_s_h
__builtin_msa_adds_s_w
__builtin_msa_adds_u_b
__builtin_msa_adds_u_d
__builtin_msa_adds_u_h
__builtin_msa_adds_u_w
__builtin_mips_addsc
__builtin_mips_addu_ph
__builtin_mips_addu_qb
__builtin_mips_addu_s_ph
__builtin_mips_addu_s_qb
__builtin_mips_adduh_qb
__builtin_mips_adduh_r_qb
__builtin_msa_addv_b
__builtin_msa_addv_d
__builtin_msa_addv_h
__builtin_msa_addv_w
__builtin_msa_addvi_b
__builtin_msa_addvi_d
__builtin_msa_addvi_h
__builtin_msa_addvi_w
__builtin_mips_addwc
__builtin_msa_and_v
__builtin_msa_andi_b
__builtin_mips_append
__builtin_msa_asub_s_b
__builtin_msa_asub_s_d
__builtin_msa_asub_s_h
__builtin_msa_asub_s_w
__builtin_msa_asub_u_b
__builtin_msa_asub_u_d
__builtin_msa_asub_u_h
__builtin_msa_asub_u_w
__builtin_msa_ave_s_b
__builtin_msa_ave_s_d
__builtin_msa_ave_s_h
__builtin_msa_ave_s_w
__builtin_msa_ave_u_b
__builtin_msa_ave_u_d
__builtin_msa_ave_u_h
__builtin_msa_ave_u_w
__builtin_msa_aver_s_b
__builtin_msa_aver_s_d
__builtin_msa_aver_s_h
__builtin_msa_aver_s_w
__builtin_msa_aver_u_b
__builtin_msa_aver_u_d
__builtin_msa_aver_u_h
__builtin_msa_aver_u_w
__builtin_mips_balign
__builtin_msa_bclr_b
__builtin_msa_bclr_d
__builtin_msa_bclr_h
__builtin_msa_bclr_w
__builtin_msa_bclri_b
__builtin_msa_bclri_d
__builtin_msa_bclri_h
__builtin_msa_bclri_w
__builtin_msa_binsl_b
__builtin_msa_binsl_d
__builtin_msa_binsl_h
__builtin_msa_binsl_w
__builtin_msa_binsli_b
__builtin_msa_binsli_d
__builtin_msa_binsli_h
__builtin_msa_binsli_w
__builtin_msa_binsr_b
__builtin_msa_binsr_d
__builtin_msa_binsr_h
__builtin_msa_binsr_w
__builtin_msa_binsri_b
__builtin_msa_binsri_d
__builtin_msa_binsri_h
__builtin_msa_binsri_w
__builtin_mips_bitrev
__builtin_msa_bmnz_v
__builtin_msa_bmnzi_b
__builtin_msa_bmz_v
__builtin_msa_bmzi_b
__builtin_msa_bneg_b
__builtin_msa_bneg_d
__builtin_msa_bneg_h
__builtin_msa_bneg_w
__builtin_msa_bnegi_b
__builtin_msa_bnegi_d
__builtin_msa_bnegi_h
__builtin_msa_bnegi_w
__builtin_msa_bnz_b
__builtin_msa_bnz_d
__builtin_msa_bnz_h
__builtin_msa_bnz_v
__builtin_msa_bnz_w
__builtin_mips_bposge32
__builtin_msa_bsel_v
__builtin_msa_bseli_b
__builtin_msa_bset_b
__builtin_msa_bset_d
__builtin_msa_bset_h
__builtin_msa_bset_w
__builtin_msa_bseti_b
__builtin_msa_bseti_d
__builtin_msa_bseti_h
__builtin_msa_bseti_w
__builtin_msa_bz_b
__builtin_msa_bz_d
__builtin_msa_bz_h
__builtin_msa_bz_v
__builtin_msa_bz_w
__builtin_msa_ceq_b
__builtin_msa_ceq_d
__builtin_msa_ceq_h
__builtin_msa_ceq_w
__builtin_msa_ceqi_b
__builtin_msa_ceqi_d
__builtin_msa_ceqi_h
__builtin_msa_ceqi_w
__builtin_msa_cfcmsa
__builtin_msa_cle_s_b
__builtin_msa_cle_s_d
__builtin_msa_cle_s_h
__builtin_msa_cle_s_w
__builtin_msa_cle_u_b
__builtin_msa_cle_u_d
__builtin_msa_cle_u_h
__builtin_msa_cle_u_w
__builtin_msa_clei_s_b
__builtin_msa_clei_s_d
__builtin_msa_clei_s_h
__builtin_msa_clei_s_w
__builtin_msa_clei_u_b
__builtin_msa_clei_u_d
__builtin_msa_clei_u_h
__builtin_msa_clei_u_w
__builtin_msa_clt_s_b
__builtin_msa_clt_s_d
__builtin_msa_clt_s_h
__builtin_msa_clt_s_w
__builtin_msa_clt_u_b
__builtin_msa_clt_u_d
__builtin_msa_clt_u_h
__builtin_msa_clt_u_w
__builtin_msa_clti_s_b
__builtin_msa_clti_s_d
__builtin_msa_clti_s_h
__builtin_msa_clti_s_w
__builtin_msa_clti_u_b
__builtin_msa_clti_u_d
__builtin_msa_clti_u_h
__builtin_msa_clti_u_w
__builtin_mips_cmp_eq_ph
__builtin_mips_cmp_le_ph
__builtin_mips_cmp_lt_ph
__builtin_mips_cmpgdu_eq_qb
__builtin_mips_cmpgdu_le_qb
__builtin_mips_cmpgdu_lt_qb
__builtin_mips_cmpgu_eq_qb
__builtin_mips_cmpgu_le_qb
__builtin_mips_cmpgu_lt_qb
__builtin_mips_cmpu_eq_qb
__builtin_mips_cmpu_le_qb
__builtin_mips_cmpu_lt_qb
__builtin_msa_copy_s_b
__builtin_msa_copy_s_d
__builtin_msa_copy_s_h
__builtin_msa_copy_s_w
__builtin_msa_copy_u_b
__builtin_msa_copy_u_d
__builtin_msa_copy_u_h
__builtin_msa_copy_u_w
__builtin_msa_ctcmsa
__builtin_msa_div_s_b
__builtin_msa_div_s_d
__builtin_msa_div_s_h
__builtin_msa_div_s_w
__builtin_msa_div_u_b
__builtin_msa_div_u_d
__builtin_msa_div_u_h
__builtin_msa_div_u_w
__builtin_mips_dlsa
__builtin_msa_dotp_s_d
__builtin_msa_dotp_s_h
__builtin_msa_dotp_s_w
__builtin_msa_dotp_u_d
__builtin_msa_dotp_u_h
__builtin_msa_dotp_u_w
__builtin_mips_dpa_w_ph
__builtin_msa_dpadd_s_d
__builtin_msa_dpadd_s_h
__builtin_msa_dpadd_s_w
__builtin_msa_dpadd_u_d
__builtin_msa_dpadd_u_h
__builtin_msa_dpadd_u_w
__builtin_mips_dpaq_s_w_ph
__builtin_mips_dpaq_sa_l_w
__builtin_mips_dpaqx_s_w_ph
__builtin_mips_dpaqx_sa_w_ph
__builtin_mips_dpau_h_qbl
__builtin_mips_dpau_h_qbr
__builtin_mips_dpax_w_ph
__builtin_mips_dps_w_ph
__builtin_mips_dpsq_s_w_ph
__builtin_mips_dpsq_sa_l_w
__builtin_mips_dpsqx_s_w_ph
__builtin_mips_dpsqx_sa_w_ph
__builtin_mips_dpsu_h_qbl
__builtin_mips_dpsu_h_qbr
__builtin_msa_dpsub_s_d
__builtin_msa_dpsub_s_h
__builtin_msa_dpsub_s_w
__builtin_msa_dpsub_u_d
__builtin_msa_dpsub_u_h
__builtin_msa_dpsub_u_w
__builtin_mips_dpsx_w_ph
__builtin_mips_extp
__builtin_mips_extpdp
__builtin_mips_extr_r_w
__builtin_mips_extr_rs_w
__builtin_mips_extr_s_h
__builtin_mips_extr_w
__builtin_msa_fadd_d
__builtin_msa_fadd_w
__builtin_msa_fcaf_d
__builtin_msa_fcaf_w
__builtin_msa_fceq_d
__builtin_msa_fceq_w
__builtin_msa_fclass_d
__builtin_msa_fclass_w
__builtin_msa_fcle_d
__builtin_msa_fcle_w
__builtin_msa_fclt_d
__builtin_msa_fclt_w
__builtin_msa_fcne_d
__builtin_msa_fcne_w
__builtin_msa_fcor_d
__builtin_msa_fcor_w
__builtin_msa_fcueq_d
__builtin_msa_fcueq_w
__builtin_msa_fcule_d
__builtin_msa_fcule_w
__builtin_msa_fcult_d
__builtin_msa_fcult_w
__builtin_msa_fcun_d
__builtin_msa_fcun_w
__builtin_msa_fcune_d
__builtin_msa_fcune_w
__builtin_msa_fdiv_d
__builtin_msa_fdiv_w
__builtin_msa_fexdo_h
__builtin_msa_fexdo_w
__builtin_msa_fexp2_d
__builtin_msa_fexp2_w
__builtin_msa_fexupl_d
__builtin_msa_fexupl_w
__builtin_msa_fexupr_d
__builtin_msa_fexupr_w
__builtin_msa_ffint_s_d
__builtin_msa_ffint_s_w
__builtin_msa_ffint_u_d
__builtin_msa_ffint_u_w
__builtin_msa_ffql_d
__builtin_msa_ffql_w
__builtin_msa_ffqr_d
__builtin_msa_ffqr_w
__builtin_msa_fill_b
__builtin_msa_fill_d
__builtin_msa_fill_h
__builtin_msa_fill_w
__builtin_msa_flog2_d
__builtin_msa_flog2_w
__builtin_msa_fmadd_d
__builtin_msa_fmadd_w
__builtin_msa_fmax_a_d
__builtin_msa_fmax_a_w
__builtin_msa_fmax_d
__builtin_msa_fmax_w
__builtin_msa_fmin_a_d
__builtin_msa_fmin_a_w
__builtin_msa_fmin_d
__builtin_msa_fmin_w
__builtin_msa_fmsub_d
__builtin_msa_fmsub_w
__builtin_msa_fmul_d
__builtin_msa_fmul_w
__builtin_msa_frcp_d
__builtin_msa_frcp_w
__builtin_msa_frint_d
__builtin_msa_frint_w
__builtin_msa_frsqrt_d
__builtin_msa_frsqrt_w
__builtin_msa_fsaf_d
__builtin_msa_fsaf_w
__builtin_msa_fseq_d
__builtin_msa_fseq_w
__builtin_msa_fsle_d
__builtin_msa_fsle_w
__builtin_msa_fslt_d
__builtin_msa_fslt_w
__builtin_msa_fsne_d
__builtin_msa_fsne_w
__builtin_msa_fsor_d
__builtin_msa_fsor_w
__builtin_msa_fsqrt_d
__builtin_msa_fsqrt_w
__builtin_msa_fsub_d
__builtin_msa_fsub_w
__builtin_msa_fsueq_d
__builtin_msa_fsueq_w
__builtin_msa_fsule_d
__builtin_msa_fsule_w
__builtin_msa_fsult_d
__builtin_msa_fsult_w
__builtin_msa_fsun_d
__builtin_msa_fsun_w
__builtin_msa_fsune_d
__builtin_msa_fsune_w
__builtin_msa_ftint_s_d
__builtin_msa_ftint_s_w
__builtin_msa_ftint_u_d
__builtin_msa_ftint_u_w
__builtin_msa_ftq_h
__builtin_msa_ftq_w
__builtin_msa_ftrunc_s_d
__builtin_msa_ftrunc_s_w
__builtin_msa_ftrunc_u_d
__builtin_msa_ftrunc_u_w
__builtin_msa_hadd_s_d
__builtin_msa_hadd_s_h
__builtin_msa_hadd_s_w
__builtin_msa_hadd_u_d
__builtin_msa_hadd_u_h
__builtin_msa_hadd_u_w
__builtin_msa_hsub_s_d
__builtin_msa_hsub_s_h
__builtin_msa_hsub_s_w
__builtin_msa_hsub_u_d
__builtin_msa_hsub_u_h
__builtin_msa_hsub_u_w
__builtin_msa_ilvev_b
__builtin_msa_ilvev_d
__builtin_msa_ilvev_h
__builtin_msa_ilvev_w
__builtin_msa_ilvl_b
__builtin_msa_ilvl_d
__builtin_msa_ilvl_h
__builtin_msa_ilvl_w
__builtin_msa_ilvod_b
__builtin_msa_ilvod_d
__builtin_msa_ilvod_h
__builtin_msa_ilvod_w
__builtin_msa_ilvr_b
__builtin_msa_ilvr_d
__builtin_msa_ilvr_h
__builtin_msa_ilvr_w
__builtin_msa_insert_b
__builtin_msa_insert_d
__builtin_msa_insert_h
__builtin_msa_insert_w
__builtin_mips_insv
__builtin_msa_insve_b
__builtin_msa_insve_d
__builtin_msa_insve_h
__builtin_msa_insve_w
__builtin_mips_lbux
__builtin_msa_ld_b
__builtin_msa_ld_d
__builtin_msa_ld_h
__builtin_msa_ld_w
__builtin_msa_ldi_b
__builtin_msa_ldi_d
__builtin_msa_ldi_h
__builtin_msa_ldi_w
__builtin_mips_lhx
__builtin_mips_lsa
__builtin_mips_lwx
__builtin_mips_madd
__builtin_msa_madd_q_h
__builtin_msa_madd_q_w
__builtin_msa_maddr_q_h
__builtin_msa_maddr_q_w
__builtin_mips_maddu
__builtin_msa_maddv_b
__builtin_msa_maddv_d
__builtin_msa_maddv_h
__builtin_msa_maddv_w
__builtin_mips_maq_s_w_phl
__builtin_mips_maq_s_w_phr
__builtin_mips_maq_sa_w_phl
__builtin_mips_maq_sa_w_phr
__builtin_msa_max_a_b
__builtin_msa_max_a_d
__builtin_msa_max_a_h
__builtin_msa_max_a_w
__builtin_msa_max_s_b
__builtin_msa_max_s_d
__builtin_msa_max_s_h
__builtin_msa_max_s_w
__builtin_msa_max_u_b
__builtin_msa_max_u_d
__builtin_msa_max_u_h
__builtin_msa_max_u_w
__builtin_msa_maxi_s_b
__builtin_msa_maxi_s_d
__builtin_msa_maxi_s_h
__builtin_msa_maxi_s_w
__builtin_msa_maxi_u_b
__builtin_msa_maxi_u_d
__builtin_msa_maxi_u_h
__builtin_msa_maxi_u_w
__builtin_msa_min_a_b
__builtin_msa_min_a_d
__builtin_msa_min_a_h
__builtin_msa_min_a_w
__builtin_msa_min_s_b
__builtin_msa_min_s_d
__builtin_msa_min_s_h
__builtin_msa_min_s_w
__builtin_msa_min_u_b
__builtin_msa_min_u_d
__builtin_msa_min_u_h
__builtin_msa_min_u_w
__builtin_msa_mini_s_b
__builtin_msa_mini_s_d
__builtin_msa_mini_s_h
__builtin_msa_mini_s_w
__builtin_msa_mini_u_b
__builtin_msa_mini_u_d
__builtin_msa_mini_u_h
__builtin_msa_mini_u_w
__builtin_msa_mod_s_b
__builtin_msa_mod_s_d
__builtin_msa_mod_s_h
__builtin_msa_mod_s_w
__builtin_msa_mod_u_b
__builtin_msa_mod_u_d
__builtin_msa_mod_u_h
__builtin_msa_mod_u_w
__builtin_mips_modsub
__builtin_msa_move_v
__builtin_mips_msub
__builtin_msa_msub_q_h
__builtin_msa_msub_q_w
__builtin_msa_msubr_q_h
__builtin_msa_msubr_q_w
__builtin_mips_msubu
__builtin_msa_msubv_b
__builtin_msa_msubv_d
__builtin_msa_msubv_h
__builtin_msa_msubv_w
__builtin_mips_mthlip
__builtin_mips_mul_ph
__builtin_msa_mul_q_h
__builtin_msa_mul_q_w
__builtin_mips_mul_s_ph
__builtin_mips_muleq_s_w_phl
__builtin_mips_muleq_s_w_phr
__builtin_mips_muleu_s_ph_qbl
__builtin_mips_muleu_s_ph_qbr
__builtin_mips_mulq_rs_ph
__builtin_mips_mulq_rs_w
__builtin_mips_mulq_s_ph
__builtin_mips_mulq_s_w
__builtin_msa_mulr_q_h
__builtin_msa_mulr_q_w
__builtin_mips_mulsa_w_ph
__builtin_mips_mulsaq_s_w_ph
__builtin_mips_mult
__builtin_mips_multu
__builtin_msa_mulv_b
__builtin_msa_mulv_d
__builtin_msa_mulv_h
__builtin_msa_mulv_w
__builtin_msa_nloc_b
__builtin_msa_nloc_d
__builtin_msa_nloc_h
__builtin_msa_nloc_w
__builtin_msa_nlzc_b
__builtin_msa_nlzc_d
__builtin_msa_nlzc_h
__builtin_msa_nlzc_w
__builtin_msa_nor_v
__builtin_msa_nori_b
__builtin_msa_or_v
__builtin_msa_ori_b
__builtin_mips_packrl_ph
__builtin_msa_pckev_b
__builtin_msa_pckev_d
__builtin_msa_pckev_h
__builtin_msa_pckev_w
__builtin_msa_pckod_b
__builtin_msa_pckod_d
__builtin_msa_pckod_h
__builtin_msa_pckod_w
__builtin_msa_pcnt_b
__builtin_msa_pcnt_d
__builtin_msa_pcnt_h
__builtin_msa_pcnt_w
__builtin_mips_pick_ph
__builtin_mips_pick_qb
__builtin_mips_preceq_w_phl
__builtin_mips_preceq_w_phr
__builtin_mips_precequ_ph_qbl
__builtin_mips_precequ_ph_qbla
__builtin_mips_precequ_ph_qbr
__builtin_mips_precequ_ph_qbra
__builtin_mips_preceu_ph_qbl
__builtin_mips_preceu_ph_qbla
__builtin_mips_preceu_ph_qbr
__builtin_mips_preceu_ph_qbra
__builtin_mips_precr_qb_ph
__builtin_mips_precr_sra_ph_w
__builtin_mips_precr_sra_r_ph_w
__builtin_mips_precrq_ph_w
__builtin_mips_precrq_qb_ph
__builtin_mips_precrq_rs_ph_w
__builtin_mips_precrqu_s_qb_ph
__builtin_mips_prepend
__builtin_mips_raddu_w_qb
__builtin_mips_rddsp
__builtin_mips_repl_ph
__builtin_mips_repl_qb
__builtin_msa_sat_s_b
__builtin_msa_sat_s_d
__builtin_msa_sat_s_h
__builtin_msa_sat_s_w
__builtin_msa_sat_u_b
__builtin_msa_sat_u_d
__builtin_msa_sat_u_h
__builtin_msa_sat_u_w
__builtin_msa_shf_b
__builtin_msa_shf_h
__builtin_msa_shf_w
__builtin_mips_shilo
__builtin_mips_shll_ph
__builtin_mips_shll_qb
__builtin_mips_shll_s_ph
__builtin_mips_shll_s_w
__builtin_mips_shra_ph
__builtin_mips_shra_qb
__builtin_mips_shra_r_ph
__builtin_mips_shra_r_qb
__builtin_mips_shra_r_w
__builtin_mips_shrl_ph
__builtin_mips_shrl_qb
__builtin_msa_sld_b
__builtin_msa_sld_d
__builtin_msa_sld_h
__builtin_msa_sld_w
__builtin_msa_sldi_b
__builtin_msa_sldi_d
__builtin_msa_sldi_h
__builtin_msa_sldi_w
__builtin_msa_sll_b
__builtin_msa_sll_d
__builtin_msa_sll_h
__builtin_msa_sll_w
__builtin_msa_slli_b
__builtin_msa_slli_d
__builtin_msa_slli_h
__builtin_msa_slli_w
__builtin_msa_splat_b
__builtin_msa_splat_d
__builtin_msa_splat_h
__builtin_msa_splat_w
__builtin_msa_splati_b
__builtin_msa_splati_d
__builtin_msa_splati_h
__builtin_msa_splati_w
__builtin_msa_sra_b
__builtin_msa_sra_d
__builtin_msa_sra_h
__builtin_msa_sra_w
__builtin_msa_srai_b
__builtin_msa_srai_d
__builtin_msa_srai_h
__builtin_msa_srai_w
__builtin_msa_srar_b
__builtin_msa_srar_d
__builtin_msa_srar_h
__builtin_msa_srar_w
__builtin_msa_srari_b
__builtin_msa_srari_d
__builtin_msa_srari_h
__builtin_msa_srari_w
__builtin_msa_srl_b
__builtin_msa_srl_d
__builtin_msa_srl_h
__builtin_msa_srl_w
__builtin_msa_srli_b
__builtin_msa_srli_d
__builtin_msa_srli_h
__builtin_msa_srli_w
__builtin_msa_srlr_b
__builtin_msa_srlr_d
__builtin_msa_srlr_h
__builtin_msa_srlr_w
__builtin_msa_srlri_b
__builtin_msa_srlri_d
__builtin_msa_srlri_h
__builtin_msa_srlri_w
__builtin_msa_st_b
__builtin_msa_st_d
__builtin_msa_st_h
__builtin_msa_st_w
__builtin_mips_subq_ph
__builtin_mips_subq_s_ph
__builtin_mips_subq_s_w
__builtin_mips_subqh_ph
__builtin_mips_subqh_r_ph
__builtin_mips_subqh_r_w
__builtin_mips_subqh_w
__builtin_msa_subs_s_b
__builtin_msa_subs_s_d
__builtin_msa_subs_s_h
__builtin_msa_subs_s_w
__builtin_msa_subs_u_b
__builtin_msa_subs_u_d
__builtin_msa_subs_u_h
__builtin_msa_subs_u_w
__builtin_msa_subsus_u_b
__builtin_msa_subsus_u_d
__builtin_msa_subsus_u_h
__builtin_msa_subsus_u_w
__builtin_msa_subsuu_s_b
__builtin_msa_subsuu_s_d
__builtin_msa_subsuu_s_h
__builtin_msa_subsuu_s_w
__builtin_mips_subu_ph
__builtin_mips_subu_qb
__builtin_mips_subu_s_ph
__builtin_mips_subu_s_qb
__builtin_mips_subuh_qb
__builtin_mips_subuh_r_qb
__builtin_msa_subv_b
__builtin_msa_subv_d
__builtin_msa_subv_h
__builtin_msa_subv_w
__builtin_msa_subvi_b
__builtin_msa_subvi_d
__builtin_msa_subvi_h
__builtin_msa_subvi_w
__builtin_msa_vshf_b
__builtin_msa_vshf_d
__builtin_msa_vshf_h
__builtin_msa_vshf_w
__builtin_mips_wrdsp
__builtin_msa_xor_v
__builtin_msa_xori_b
__nvvm_add_rm_d
__nvvm_add_rm_f
__nvvm_add_rm_ftz_f
__nvvm_add_rn_d
__nvvm_add_rn_f
__nvvm_add_rn_ftz_f
__nvvm_add_rp_d
__nvvm_add_rp_f
__nvvm_add_rp_ftz_f
__nvvm_add_rz_d
__nvvm_add_rz_f
__nvvm_add_rz_ftz_f
__nvvm_bar_sync
__nvvm_bar
__nvvm_bar_n
__syncthreads
__nvvm_bar0_and
__nvvm_bar0_or
__nvvm_bar0_popc
__nvvm_bitcast_d2ll
__nvvm_bitcast_f2i
__nvvm_bitcast_i2f
__nvvm_bitcast_ll2d
__nvvm_ceil_d
__nvvm_ceil_f
__nvvm_ceil_ftz_f
__nvvm_cos_approx_f
__nvvm_cos_approx_ftz_f
__nvvm_d2f_rm
__nvvm_d2f_rm_ftz
__nvvm_d2f_rn
__nvvm_d2f_rn_ftz
__nvvm_d2f_rp
__nvvm_d2f_rp_ftz
__nvvm_d2f_rz
__nvvm_d2f_rz_ftz
__nvvm_d2i_hi
__nvvm_d2i_lo
__nvvm_d2i_rm
__nvvm_d2i_rn
__nvvm_d2i_rp
__nvvm_d2i_rz
__nvvm_d2ll_rm
__nvvm_d2ll_rn
__nvvm_d2ll_rp
__nvvm_d2ll_rz
__nvvm_d2ui_rm
__nvvm_d2ui_rn
__nvvm_d2ui_rp
__nvvm_d2ui_rz
__nvvm_d2ull_rm
__nvvm_d2ull_rn
__nvvm_d2ull_rp
__nvvm_d2ull_rz
__nvvm_div_approx_f
__nvvm_div_approx_ftz_f
__nvvm_div_rm_d
__nvvm_div_rm_f
__nvvm_div_rm_ftz_f
__nvvm_div_rn_d
__nvvm_div_rn_f
__nvvm_div_rn_ftz_f
__nvvm_div_rp_d
__nvvm_div_rp_f
__nvvm_div_rp_ftz_f
__nvvm_div_rz_d
__nvvm_div_rz_f
__nvvm_div_rz_ftz_f
__nvvm_ex2_approx_d
__nvvm_ex2_approx_f
__nvvm_ex2_approx_ftz_f
__nvvm_f2h_rn
__nvvm_f2h_rn_ftz
__nvvm_f2i_rm
__nvvm_f2i_rm_ftz
__nvvm_f2i_rn
__nvvm_f2i_rn_ftz
__nvvm_f2i_rp
__nvvm_f2i_rp_ftz
__nvvm_f2i_rz
__nvvm_f2i_rz_ftz
__nvvm_f2ll_rm
__nvvm_f2ll_rm_ftz
__nvvm_f2ll_rn
__nvvm_f2ll_rn_ftz
__nvvm_f2ll_rp
__nvvm_f2ll_rp_ftz
__nvvm_f2ll_rz
__nvvm_f2ll_rz_ftz
__nvvm_f2ui_rm
__nvvm_f2ui_rm_ftz
__nvvm_f2ui_rn
__nvvm_f2ui_rn_ftz
__nvvm_f2ui_rp
__nvvm_f2ui_rp_ftz
__nvvm_f2ui_rz
__nvvm_f2ui_rz_ftz
__nvvm_f2ull_rm
__nvvm_f2ull_rm_ftz
__nvvm_f2ull_rn
__nvvm_f2ull_rn_ftz
__nvvm_f2ull_rp
__nvvm_f2ull_rp_ftz
__nvvm_f2ull_rz
__nvvm_f2ull_rz_ftz
__nvvm_fabs_d
__nvvm_fabs_f
__nvvm_fabs_ftz_f
__nvvm_floor_d
__nvvm_floor_f
__nvvm_floor_ftz_f
__nvvm_fma_rm_d
__nvvm_fma_rm_f
__nvvm_fma_rm_ftz_f
__nvvm_fma_rn_d
__nvvm_fma_rn_f
__nvvm_fma_rn_ftz_f
__nvvm_fma_rp_d
__nvvm_fma_rp_f
__nvvm_fma_rp_ftz_f
__nvvm_fma_rz_d
__nvvm_fma_rz_f
__nvvm_fma_rz_ftz_f
__nvvm_fmax_d
__nvvm_fmax_f
__nvvm_fmax_ftz_f
__nvvm_fmin_d
__nvvm_fmin_f
__nvvm_fmin_ftz_f
__nvvm_i2d_rm
__nvvm_i2d_rn
__nvvm_i2d_rp
__nvvm_i2d_rz
__nvvm_i2f_rm
__nvvm_i2f_rn
__nvvm_i2f_rp
__nvvm_i2f_rz
__nvvm_isspacep_const
__nvvm_isspacep_global
__nvvm_isspacep_local
__nvvm_isspacep_shared
__nvvm_istypep_sampler
__nvvm_istypep_surface
__nvvm_istypep_texture
__nvvm_lg2_approx_d
__nvvm_lg2_approx_f
__nvvm_lg2_approx_ftz_f
__nvvm_ll2d_rm
__nvvm_ll2d_rn
__nvvm_ll2d_rp
__nvvm_ll2d_rz
__nvvm_ll2f_rm
__nvvm_ll2f_rn
__nvvm_ll2f_rp
__nvvm_ll2f_rz
__nvvm_lohi_i2d
__nvvm_membar_cta
__nvvm_membar_gl
__nvvm_membar_sys
__nvvm_mul_rm_d
__nvvm_mul_rm_f
__nvvm_mul_rm_ftz_f
__nvvm_mul_rn_d
__nvvm_mul_rn_f
__nvvm_mul_rn_ftz_f
__nvvm_mul_rp_d
__nvvm_mul_rp_f
__nvvm_mul_rp_ftz_f
__nvvm_mul_rz_d
__nvvm_mul_rz_f
__nvvm_mul_rz_ftz_f
__nvvm_mul24_i
__nvvm_mul24_ui
__nvvm_mulhi_i
__nvvm_mulhi_ll
__nvvm_mulhi_ui
__nvvm_mulhi_ull
__nvvm_prmt
__nvvm_rcp_approx_ftz_d
__nvvm_rcp_rm_d
__nvvm_rcp_rm_f
__nvvm_rcp_rm_ftz_f
__nvvm_rcp_rn_d
__nvvm_rcp_rn_f
__nvvm_rcp_rn_ftz_f
__nvvm_rcp_rp_d
__nvvm_rcp_rp_f
__nvvm_rcp_rp_ftz_f
__nvvm_rcp_rz_d
__nvvm_rcp_rz_f
__nvvm_rcp_rz_ftz_f
__nvvm_read_ptx_sreg_clock
__nvvm_read_ptx_sreg_clock64
__nvvm_read_ptx_sreg_ctaid_w
__nvvm_read_ptx_sreg_ctaid_x
__nvvm_read_ptx_sreg_ctaid_y
__nvvm_read_ptx_sreg_ctaid_z
__nvvm_read_ptx_sreg_envreg0
__nvvm_read_ptx_sreg_envreg1
__nvvm_read_ptx_sreg_envreg10
__nvvm_read_ptx_sreg_envreg11
__nvvm_read_ptx_sreg_envreg12
__nvvm_read_ptx_sreg_envreg13
__nvvm_read_ptx_sreg_envreg14
__nvvm_read_ptx_sreg_envreg15
__nvvm_read_ptx_sreg_envreg16
__nvvm_read_ptx_sreg_envreg17
__nvvm_read_ptx_sreg_envreg18
__nvvm_read_ptx_sreg_envreg19
__nvvm_read_ptx_sreg_envreg2
__nvvm_read_ptx_sreg_envreg20
__nvvm_read_ptx_sreg_envreg21
__nvvm_read_ptx_sreg_envreg22
__nvvm_read_ptx_sreg_envreg23
__nvvm_read_ptx_sreg_envreg24
__nvvm_read_ptx_sreg_envreg25
__nvvm_read_ptx_sreg_envreg26
__nvvm_read_ptx_sreg_envreg27
__nvvm_read_ptx_sreg_envreg28
__nvvm_read_ptx_sreg_envreg29
__nvvm_read_ptx_sreg_envreg3
__nvvm_read_ptx_sreg_envreg30
__nvvm_read_ptx_sreg_envreg31
__nvvm_read_ptx_sreg_envreg4
__nvvm_read_ptx_sreg_envreg5
__nvvm_read_ptx_sreg_envreg6
__nvvm_read_ptx_sreg_envreg7
__nvvm_read_ptx_sreg_envreg8
__nvvm_read_ptx_sreg_envreg9
__nvvm_read_ptx_sreg_gridid
__nvvm_read_ptx_sreg_laneid
__nvvm_read_ptx_sreg_lanemask_eq
__nvvm_read_ptx_sreg_lanemask_ge
__nvvm_read_ptx_sreg_lanemask_gt
__nvvm_read_ptx_sreg_lanemask_le
__nvvm_read_ptx_sreg_lanemask_lt
__nvvm_read_ptx_sreg_nctaid_w
__nvvm_read_ptx_sreg_nctaid_x
__nvvm_read_ptx_sreg_nctaid_y
__nvvm_read_ptx_sreg_nctaid_z
__nvvm_read_ptx_sreg_nsmid
__nvvm_read_ptx_sreg_ntid_w
__nvvm_read_ptx_sreg_ntid_x
__nvvm_read_ptx_sreg_ntid_y
__nvvm_read_ptx_sreg_ntid_z
__nvvm_read_ptx_sreg_nwarpid
__nvvm_read_ptx_sreg_pm0
__nvvm_read_ptx_sreg_pm1
__nvvm_read_ptx_sreg_pm2
__nvvm_read_ptx_sreg_pm3
__nvvm_read_ptx_sreg_smid
__nvvm_read_ptx_sreg_tid_w
__nvvm_read_ptx_sreg_tid_x
__nvvm_read_ptx_sreg_tid_y
__nvvm_read_ptx_sreg_tid_z
__nvvm_read_ptx_sreg_warpid
__nvvm_read_ptx_sreg_warpsize
__nvvm_rotate_b32
__nvvm_rotate_b64
__nvvm_rotate_right_b64
__nvvm_round_d
__nvvm_round_f
__nvvm_round_ftz_f
__nvvm_rsqrt_approx_d
__nvvm_rsqrt_approx_f
__nvvm_rsqrt_approx_ftz_f
__nvvm_sad_i
__nvvm_sad_ui
__nvvm_saturate_d
__nvvm_saturate_f
__nvvm_saturate_ftz_f
__nvvm_shfl_bfly_f32
__nvvm_shfl_bfly_i32
__nvvm_shfl_down_f32
__nvvm_shfl_down_i32
__nvvm_shfl_idx_f32
__nvvm_shfl_idx_i32
__nvvm_shfl_up_f32
__nvvm_shfl_up_i32
__nvvm_sin_approx_f
__nvvm_sin_approx_ftz_f
__nvvm_sqrt_approx_f
__nvvm_sqrt_approx_ftz_f
__nvvm_sqrt_f
__nvvm_sqrt_rm_d
__nvvm_sqrt_rm_f
__nvvm_sqrt_rm_ftz_f
__nvvm_sqrt_rn_d
__nvvm_sqrt_rn_f
__nvvm_sqrt_rn_ftz_f
__nvvm_sqrt_rp_d
__nvvm_sqrt_rp_f
__nvvm_sqrt_rp_ftz_f
__nvvm_sqrt_rz_d
__nvvm_sqrt_rz_f
__nvvm_sqrt_rz_ftz_f
__nvvm_suq_array_size
__nvvm_suq_channel_data_type
__nvvm_suq_channel_order
__nvvm_suq_depth
__nvvm_suq_height
__nvvm_suq_width
__nvvm_sust_b_1d_array_i16_clamp
__nvvm_sust_b_1d_array_i16_trap
__nvvm_sust_b_1d_array_i16_zero
__nvvm_sust_b_1d_array_i32_clamp
__nvvm_sust_b_1d_array_i32_trap
__nvvm_sust_b_1d_array_i32_zero
__nvvm_sust_b_1d_array_i64_clamp
__nvvm_sust_b_1d_array_i64_trap
__nvvm_sust_b_1d_array_i64_zero
__nvvm_sust_b_1d_array_i8_clamp
__nvvm_sust_b_1d_array_i8_trap
__nvvm_sust_b_1d_array_i8_zero
__nvvm_sust_b_1d_array_v2i16_clamp
__nvvm_sust_b_1d_array_v2i16_trap
__nvvm_sust_b_1d_array_v2i16_zero
__nvvm_sust_b_1d_array_v2i32_clamp
__nvvm_sust_b_1d_array_v2i32_trap
__nvvm_sust_b_1d_array_v2i32_zero
__nvvm_sust_b_1d_array_v2i64_clamp
__nvvm_sust_b_1d_array_v2i64_trap
__nvvm_sust_b_1d_array_v2i64_zero
__nvvm_sust_b_1d_array_v2i8_clamp
__nvvm_sust_b_1d_array_v2i8_trap
__nvvm_sust_b_1d_array_v2i8_zero
__nvvm_sust_b_1d_array_v4i16_clamp
__nvvm_sust_b_1d_array_v4i16_trap
__nvvm_sust_b_1d_array_v4i16_zero
__nvvm_sust_b_1d_array_v4i32_clamp
__nvvm_sust_b_1d_array_v4i32_trap
__nvvm_sust_b_1d_array_v4i32_zero
__nvvm_sust_b_1d_array_v4i8_clamp
__nvvm_sust_b_1d_array_v4i8_trap
__nvvm_sust_b_1d_array_v4i8_zero
__nvvm_sust_b_1d_i16_clamp
__nvvm_sust_b_1d_i16_trap
__nvvm_sust_b_1d_i16_zero
__nvvm_sust_b_1d_i32_clamp
__nvvm_sust_b_1d_i32_trap
__nvvm_sust_b_1d_i32_zero
__nvvm_sust_b_1d_i64_clamp
__nvvm_sust_b_1d_i64_trap
__nvvm_sust_b_1d_i64_zero
__nvvm_sust_b_1d_i8_clamp
__nvvm_sust_b_1d_i8_trap
__nvvm_sust_b_1d_i8_zero
__nvvm_sust_b_1d_v2i16_clamp
__nvvm_sust_b_1d_v2i16_trap
__nvvm_sust_b_1d_v2i16_zero
__nvvm_sust_b_1d_v2i32_clamp
__nvvm_sust_b_1d_v2i32_trap
__nvvm_sust_b_1d_v2i32_zero
__nvvm_sust_b_1d_v2i64_clamp
__nvvm_sust_b_1d_v2i64_trap
__nvvm_sust_b_1d_v2i64_zero
__nvvm_sust_b_1d_v2i8_clamp
__nvvm_sust_b_1d_v2i8_trap
__nvvm_sust_b_1d_v2i8_zero
__nvvm_sust_b_1d_v4i16_clamp
__nvvm_sust_b_1d_v4i16_trap
__nvvm_sust_b_1d_v4i16_zero
__nvvm_sust_b_1d_v4i32_clamp
__nvvm_sust_b_1d_v4i32_trap
__nvvm_sust_b_1d_v4i32_zero
__nvvm_sust_b_1d_v4i8_clamp
__nvvm_sust_b_1d_v4i8_trap
__nvvm_sust_b_1d_v4i8_zero
__nvvm_sust_b_2d_array_i16_clamp
__nvvm_sust_b_2d_array_i16_trap
__nvvm_sust_b_2d_array_i16_zero
__nvvm_sust_b_2d_array_i32_clamp
__nvvm_sust_b_2d_array_i32_trap
__nvvm_sust_b_2d_array_i32_zero
__nvvm_sust_b_2d_array_i64_clamp
__nvvm_sust_b_2d_array_i64_trap
__nvvm_sust_b_2d_array_i64_zero
__nvvm_sust_b_2d_array_i8_clamp
__nvvm_sust_b_2d_array_i8_trap
__nvvm_sust_b_2d_array_i8_zero
__nvvm_sust_b_2d_array_v2i16_clamp
__nvvm_sust_b_2d_array_v2i16_trap
__nvvm_sust_b_2d_array_v2i16_zero
__nvvm_sust_b_2d_array_v2i32_clamp
__nvvm_sust_b_2d_array_v2i32_trap
__nvvm_sust_b_2d_array_v2i32_zero
__nvvm_sust_b_2d_array_v2i64_clamp
__nvvm_sust_b_2d_array_v2i64_trap
__nvvm_sust_b_2d_array_v2i64_zero
__nvvm_sust_b_2d_array_v2i8_clamp
__nvvm_sust_b_2d_array_v2i8_trap
__nvvm_sust_b_2d_array_v2i8_zero
__nvvm_sust_b_2d_array_v4i16_clamp
__nvvm_sust_b_2d_array_v4i16_trap
__nvvm_sust_b_2d_array_v4i16_zero
__nvvm_sust_b_2d_array_v4i32_clamp
__nvvm_sust_b_2d_array_v4i32_trap
__nvvm_sust_b_2d_array_v4i32_zero
__nvvm_sust_b_2d_array_v4i8_clamp
__nvvm_sust_b_2d_array_v4i8_trap
__nvvm_sust_b_2d_array_v4i8_zero
__nvvm_sust_b_2d_i16_clamp
__nvvm_sust_b_2d_i16_trap
__nvvm_sust_b_2d_i16_zero
__nvvm_sust_b_2d_i32_clamp
__nvvm_sust_b_2d_i32_trap
__nvvm_sust_b_2d_i32_zero
__nvvm_sust_b_2d_i64_clamp
__nvvm_sust_b_2d_i64_trap
__nvvm_sust_b_2d_i64_zero
__nvvm_sust_b_2d_i8_clamp
__nvvm_sust_b_2d_i8_trap
__nvvm_sust_b_2d_i8_zero
__nvvm_sust_b_2d_v2i16_clamp
__nvvm_sust_b_2d_v2i16_trap
__nvvm_sust_b_2d_v2i16_zero
__nvvm_sust_b_2d_v2i32_clamp
__nvvm_sust_b_2d_v2i32_trap
__nvvm_sust_b_2d_v2i32_zero
__nvvm_sust_b_2d_v2i64_clamp
__nvvm_sust_b_2d_v2i64_trap
__nvvm_sust_b_2d_v2i64_zero
__nvvm_sust_b_2d_v2i8_clamp
__nvvm_sust_b_2d_v2i8_trap
__nvvm_sust_b_2d_v2i8_zero
__nvvm_sust_b_2d_v4i16_clamp
__nvvm_sust_b_2d_v4i16_trap
__nvvm_sust_b_2d_v4i16_zero
__nvvm_sust_b_2d_v4i32_clamp
__nvvm_sust_b_2d_v4i32_trap
__nvvm_sust_b_2d_v4i32_zero
__nvvm_sust_b_2d_v4i8_clamp
__nvvm_sust_b_2d_v4i8_trap
__nvvm_sust_b_2d_v4i8_zero
__nvvm_sust_b_3d_i16_clamp
__nvvm_sust_b_3d_i16_trap
__nvvm_sust_b_3d_i16_zero
__nvvm_sust_b_3d_i32_clamp
__nvvm_sust_b_3d_i32_trap
__nvvm_sust_b_3d_i32_zero
__nvvm_sust_b_3d_i64_clamp
__nvvm_sust_b_3d_i64_trap
__nvvm_sust_b_3d_i64_zero
__nvvm_sust_b_3d_i8_clamp
__nvvm_sust_b_3d_i8_trap
__nvvm_sust_b_3d_i8_zero
__nvvm_sust_b_3d_v2i16_clamp
__nvvm_sust_b_3d_v2i16_trap
__nvvm_sust_b_3d_v2i16_zero
__nvvm_sust_b_3d_v2i32_clamp
__nvvm_sust_b_3d_v2i32_trap
__nvvm_sust_b_3d_v2i32_zero
__nvvm_sust_b_3d_v2i64_clamp
__nvvm_sust_b_3d_v2i64_trap
__nvvm_sust_b_3d_v2i64_zero
__nvvm_sust_b_3d_v2i8_clamp
__nvvm_sust_b_3d_v2i8_trap
__nvvm_sust_b_3d_v2i8_zero
__nvvm_sust_b_3d_v4i16_clamp
__nvvm_sust_b_3d_v4i16_trap
__nvvm_sust_b_3d_v4i16_zero
__nvvm_sust_b_3d_v4i32_clamp
__nvvm_sust_b_3d_v4i32_trap
__nvvm_sust_b_3d_v4i32_zero
__nvvm_sust_b_3d_v4i8_clamp
__nvvm_sust_b_3d_v4i8_trap
__nvvm_sust_b_3d_v4i8_zero
__nvvm_sust_p_1d_array_i16_trap
__nvvm_sust_p_1d_array_i32_trap
__nvvm_sust_p_1d_array_i8_trap
__nvvm_sust_p_1d_array_v2i16_trap
__nvvm_sust_p_1d_array_v2i32_trap
__nvvm_sust_p_1d_array_v2i8_trap
__nvvm_sust_p_1d_array_v4i16_trap
__nvvm_sust_p_1d_array_v4i32_trap
__nvvm_sust_p_1d_array_v4i8_trap
__nvvm_sust_p_1d_i16_trap
__nvvm_sust_p_1d_i32_trap
__nvvm_sust_p_1d_i8_trap
__nvvm_sust_p_1d_v2i16_trap
__nvvm_sust_p_1d_v2i32_trap
__nvvm_sust_p_1d_v2i8_trap
__nvvm_sust_p_1d_v4i16_trap
__nvvm_sust_p_1d_v4i32_trap
__nvvm_sust_p_1d_v4i8_trap
__nvvm_sust_p_2d_array_i16_trap
__nvvm_sust_p_2d_array_i32_trap
__nvvm_sust_p_2d_array_i8_trap
__nvvm_sust_p_2d_array_v2i16_trap
__nvvm_sust_p_2d_array_v2i32_trap
__nvvm_sust_p_2d_array_v2i8_trap
__nvvm_sust_p_2d_array_v4i16_trap
__nvvm_sust_p_2d_array_v4i32_trap
__nvvm_sust_p_2d_array_v4i8_trap
__nvvm_sust_p_2d_i16_trap
__nvvm_sust_p_2d_i32_trap
__nvvm_sust_p_2d_i8_trap
__nvvm_sust_p_2d_v2i16_trap
__nvvm_sust_p_2d_v2i32_trap
__nvvm_sust_p_2d_v2i8_trap
__nvvm_sust_p_2d_v4i16_trap
__nvvm_sust_p_2d_v4i32_trap
__nvvm_sust_p_2d_v4i8_trap
__nvvm_sust_p_3d_i16_trap
__nvvm_sust_p_3d_i32_trap
__nvvm_sust_p_3d_i8_trap
__nvvm_sust_p_3d_v2i16_trap
__nvvm_sust_p_3d_v2i32_trap
__nvvm_sust_p_3d_v2i8_trap
__nvvm_sust_p_3d_v4i16_trap
__nvvm_sust_p_3d_v4i32_trap
__nvvm_sust_p_3d_v4i8_trap
__nvvm_swap_lo_hi_b64
__nvvm_trunc_d
__nvvm_trunc_f
__nvvm_trunc_ftz_f
__nvvm_txq_array_size
__nvvm_txq_channel_data_type
__nvvm_txq_channel_order
__nvvm_txq_depth
__nvvm_txq_height
__nvvm_txq_num_mipmap_levels
__nvvm_txq_num_samples
__nvvm_txq_width
__nvvm_ui2d_rm
__nvvm_ui2d_rn
__nvvm_ui2d_rp
__nvvm_ui2d_rz
__nvvm_ui2f_rm
__nvvm_ui2f_rn
__nvvm_ui2f_rp
__nvvm_ui2f_rz
__nvvm_ull2d_rm
__nvvm_ull2d_rn
__nvvm_ull2d_rp
__nvvm_ull2d_rz
__nvvm_ull2f_rm
__nvvm_ull2f_rn
__nvvm_ull2f_rp
__nvvm_ull2f_rz
__builtin_altivec_crypto_vcipher
__builtin_altivec_crypto_vcipherlast
__builtin_altivec_crypto_vncipher
__builtin_altivec_crypto_vncipherlast
__builtin_altivec_crypto_vpermxor
__builtin_altivec_crypto_vpmsumb
__builtin_altivec_crypto_vpmsumd
__builtin_altivec_crypto_vpmsumh
__builtin_altivec_crypto_vpmsumw
__builtin_altivec_crypto_vsbox
__builtin_altivec_crypto_vshasigmad
__builtin_altivec_crypto_vshasigmaw
__builtin_altivec_dss
__builtin_altivec_dssall
__builtin_altivec_dst
__builtin_altivec_dstst
__builtin_altivec_dststt
__builtin_altivec_dstt
__builtin_altivec_mfvscr
__builtin_altivec_mtvscr
__builtin_altivec_vabsdub
__builtin_altivec_vabsduh
__builtin_altivec_vabsduw
__builtin_altivec_vaddcuq
__builtin_altivec_vaddcuw
__builtin_altivec_vaddecuq
__builtin_altivec_vaddeuqm
__builtin_altivec_vaddsbs
__builtin_altivec_vaddshs
__builtin_altivec_vaddsws
__builtin_altivec_vaddubs
__builtin_altivec_vadduhs
__builtin_altivec_vadduws
__builtin_altivec_vavgsb
__builtin_altivec_vavgsh
__builtin_altivec_vavgsw
__builtin_altivec_vavgub
__builtin_altivec_vavguh
__builtin_altivec_vavguw
__builtin_altivec_vbpermq
__builtin_altivec_vcfsx
__builtin_altivec_vcfux
__builtin_altivec_vclzlsbb
__builtin_altivec_vcmpbfp
__builtin_altivec_vcmpbfp_p
__builtin_altivec_vcmpeqfp
__builtin_altivec_vcmpeqfp_p
__builtin_altivec_vcmpequb
__builtin_altivec_vcmpequb_p
__builtin_altivec_vcmpequd
__builtin_altivec_vcmpequd_p
__builtin_altivec_vcmpequh
__builtin_altivec_vcmpequh_p
__builtin_altivec_vcmpequw
__builtin_altivec_vcmpequw_p
__builtin_altivec_vcmpgefp
__builtin_altivec_vcmpgefp_p
__builtin_altivec_vcmpgtfp
__builtin_altivec_vcmpgtfp_p
__builtin_altivec_vcmpgtsb
__builtin_altivec_vcmpgtsb_p
__builtin_altivec_vcmpgtsd
__builtin_altivec_vcmpgtsd_p
__builtin_altivec_vcmpgtsh
__builtin_altivec_vcmpgtsh_p
__builtin_altivec_vcmpgtsw
__builtin_altivec_vcmpgtsw_p
__builtin_altivec_vcmpgtub
__builtin_altivec_vcmpgtub_p
__builtin_altivec_vcmpgtud
__builtin_altivec_vcmpgtud_p
__builtin_altivec_vcmpgtuh
__builtin_altivec_vcmpgtuh_p
__builtin_altivec_vcmpgtuw
__builtin_altivec_vcmpgtuw_p
__builtin_altivec_vcmpneb
__builtin_altivec_vcmpneb_p
__builtin_altivec_vcmpneh
__builtin_altivec_vcmpneh_p
__builtin_altivec_vcmpnew
__builtin_altivec_vcmpnew_p
__builtin_altivec_vcmpnezb
__builtin_altivec_vcmpnezb_p
__builtin_altivec_vcmpnezh
__builtin_altivec_vcmpnezh_p
__builtin_altivec_vcmpnezw
__builtin_altivec_vcmpnezw_p
__builtin_altivec_vctsxs
__builtin_altivec_vctuxs
__builtin_altivec_vctzlsbb
__builtin_altivec_vexptefp
__builtin_altivec_vgbbd
__builtin_altivec_vlogefp
__builtin_altivec_vmaddfp
__builtin_altivec_vmaxfp
__builtin_altivec_vmaxsb
__builtin_altivec_vmaxsd
__builtin_altivec_vmaxsh
__builtin_altivec_vmaxsw
__builtin_altivec_vmaxub
__builtin_altivec_vmaxud
__builtin_altivec_vmaxuh
__builtin_altivec_vmaxuw
__builtin_altivec_vmhaddshs
__builtin_altivec_vmhraddshs
__builtin_altivec_vminfp
__builtin_altivec_vminsb
__builtin_altivec_vminsd
__builtin_altivec_vminsh
__builtin_altivec_vminsw
__builtin_altivec_vminub
__builtin_altivec_vminud
__builtin_altivec_vminuh
__builtin_altivec_vminuw
__builtin_altivec_vmladduhm
__builtin_altivec_vmsummbm
__builtin_altivec_vmsumshm
__builtin_altivec_vmsumshs
__builtin_altivec_vmsumubm
__builtin_altivec_vmsumuhm
__builtin_altivec_vmsumuhs
__builtin_altivec_vmulesb
__builtin_altivec_vmulesh
__builtin_altivec_vmulesw
__builtin_altivec_vmuleub
__builtin_altivec_vmuleuh
__builtin_altivec_vmuleuw
__builtin_altivec_vmulosb
__builtin_altivec_vmulosh
__builtin_altivec_vmulosw
__builtin_altivec_vmuloub
__builtin_altivec_vmulouh
__builtin_altivec_vmulouw
__builtin_altivec_vnmsubfp
__builtin_altivec_vperm_4si
__builtin_altivec_vpkpx
__builtin_altivec_vpksdss
__builtin_altivec_vpksdus
__builtin_altivec_vpkshss
__builtin_altivec_vpkshus
__builtin_altivec_vpkswss
__builtin_altivec_vpkswus
__builtin_altivec_vpkudus
__builtin_altivec_vpkuhus
__builtin_altivec_vpkuwus
__builtin_altivec_vprtybd
__builtin_altivec_vprtybq
__builtin_altivec_vprtybw
__builtin_altivec_vrefp
__builtin_altivec_vrfim
__builtin_altivec_vrfin
__builtin_altivec_vrfip
__builtin_altivec_vrfiz
__builtin_altivec_vrlb
__builtin_altivec_vrld
__builtin_altivec_vrldmi
__builtin_altivec_vrldnm
__builtin_altivec_vrlh
__builtin_altivec_vrlw
__builtin_altivec_vrlwmi
__builtin_altivec_vrlwnm
__builtin_altivec_vrsqrtefp
__builtin_altivec_vsel_4si
__builtin_altivec_vsl
__builtin_altivec_vslb
__builtin_altivec_vslh
__builtin_altivec_vslo
__builtin_altivec_vslv
__builtin_altivec_vslw
__builtin_altivec_vsr
__builtin_altivec_vsrab
__builtin_altivec_vsrah
__builtin_altivec_vsraw
__builtin_altivec_vsrb
__builtin_altivec_vsrh
__builtin_altivec_vsro
__builtin_altivec_vsrv
__builtin_altivec_vsrw
__builtin_altivec_vsubcuq
__builtin_altivec_vsubcuw
__builtin_altivec_vsubecuq
__builtin_altivec_vsubeuqm
__builtin_altivec_vsubsbs
__builtin_altivec_vsubshs
__builtin_altivec_vsubsws
__builtin_altivec_vsububs
__builtin_altivec_vsubuhs
__builtin_altivec_vsubuws
__builtin_altivec_vsum2sws
__builtin_altivec_vsum4sbs
__builtin_altivec_vsum4shs
__builtin_altivec_vsum4ubs
__builtin_altivec_vsumsws
__builtin_altivec_vupkhpx
__builtin_altivec_vupkhsb
__builtin_altivec_vupkhsh
__builtin_altivec_vupkhsw
__builtin_altivec_vupklpx
__builtin_altivec_vupklsb
__builtin_altivec_vupklsh
__builtin_altivec_vupklsw
__builtin_bpermd
__builtin_divde
__builtin_divdeu
__builtin_divwe
__builtin_divweu
__builtin_get_texasr
__builtin_get_texasru
__builtin_get_tfhar
__builtin_get_tfiar
__builtin_qpx_qvfabs
__builtin_qpx_qvfadd
__builtin_qpx_qvfadds
__builtin_qpx_qvfcfid
__builtin_qpx_qvfcfids
__builtin_qpx_qvfcfidu
__builtin_qpx_qvfcfidus
__builtin_qpx_qvfcmpeq
__builtin_qpx_qvfcmpgt
__builtin_qpx_qvfcmplt
__builtin_qpx_qvfcpsgn
__builtin_qpx_qvfctid
__builtin_qpx_qvfctidu
__builtin_qpx_qvfctiduz
__builtin_qpx_qvfctidz
__builtin_qpx_qvfctiw
__builtin_qpx_qvfctiwu
__builtin_qpx_qvfctiwuz
__builtin_qpx_qvfctiwz
__builtin_qpx_qvflogical
__builtin_qpx_qvfmadd
__builtin_qpx_qvfmadds
__builtin_qpx_qvfmsub
__builtin_qpx_qvfmsubs
__builtin_qpx_qvfmul
__builtin_qpx_qvfmuls
__builtin_qpx_qvfnabs
__builtin_qpx_qvfneg
__builtin_qpx_qvfnmadd
__builtin_qpx_qvfnmadds
__builtin_qpx_qvfnmsub
__builtin_qpx_qvfnmsubs
__builtin_qpx_qvfperm
__builtin_qpx_qvfre
__builtin_qpx_qvfres
__builtin_qpx_qvfrim
__builtin_qpx_qvfrin
__builtin_qpx_qvfrip
__builtin_qpx_qvfriz
__builtin_qpx_qvfrsp
__builtin_qpx_qvfrsqrte
__builtin_qpx_qvfrsqrtes
__builtin_qpx_qvfsel
__builtin_qpx_qvfsub
__builtin_qpx_qvfsubs
__builtin_qpx_qvftstnan
__builtin_qpx_qvfxmadd
__builtin_qpx_qvfxmadds
__builtin_qpx_qvfxmul
__builtin_qpx_qvfxmuls
__builtin_qpx_qvfxxcpnmadd
__builtin_qpx_qvfxxcpnmadds
__builtin_qpx_qvfxxmadd
__builtin_qpx_qvfxxmadds
__builtin_qpx_qvfxxnpmadd
__builtin_qpx_qvfxxnpmadds
__builtin_qpx_qvgpci
__builtin_qpx_qvlfcd
__builtin_qpx_qvlfcda
__builtin_qpx_qvlfcs
__builtin_qpx_qvlfcsa
__builtin_qpx_qvlfd
__builtin_qpx_qvlfda
__builtin_qpx_qvlfiwa
__builtin_qpx_qvlfiwaa
__builtin_qpx_qvlfiwz
__builtin_qpx_qvlfiwza
__builtin_qpx_qvlfs
__builtin_qpx_qvlfsa
__builtin_qpx_qvlpcld
__builtin_qpx_qvlpcls
__builtin_qpx_qvlpcrd
__builtin_qpx_qvlpcrs
__builtin_qpx_qvstfcd
__builtin_qpx_qvstfcda
__builtin_qpx_qvstfcs
__builtin_qpx_qvstfcsa
__builtin_qpx_qvstfd
__builtin_qpx_qvstfda
__builtin_qpx_qvstfiw
__builtin_qpx_qvstfiwa
__builtin_qpx_qvstfs
__builtin_qpx_qvstfsa
__builtin_set_texasr
__builtin_set_texasru
__builtin_set_tfhar
__builtin_set_tfiar
__builtin_tabort
__builtin_tabortdc
__builtin_tabortdci
__builtin_tabortwc
__builtin_tabortwci
__builtin_tbegin
__builtin_tcheck
__builtin_tend
__builtin_tendall
__builtin_trechkpt
__builtin_treclaim
__builtin_tresume
__builtin_tsr
__builtin_tsuspend
__builtin_ttest
__builtin_vsx_xsmaxdp
__builtin_vsx_xsmindp
__builtin_vsx_xvcmpeqdp
__builtin_vsx_xvcmpeqdp_p
__builtin_vsx_xvcmpeqsp
__builtin_vsx_xvcmpeqsp_p
__builtin_vsx_xvcmpgedp
__builtin_vsx_xvcmpgedp_p
__builtin_vsx_xvcmpgesp
__builtin_vsx_xvcmpgesp_p
__builtin_vsx_xvcmpgtdp
__builtin_vsx_xvcmpgtdp_p
__builtin_vsx_xvcmpgtsp
__builtin_vsx_xvcmpgtsp_p
__builtin_vsx_xvcvdpsp
__builtin_vsx_xvcvdpsxws
__builtin_vsx_xvcvdpuxws
__builtin_vsx_xvcvhpsp
__builtin_vsx_xvcvspdp
__builtin_vsx_xvcvsphp
__builtin_vsx_xvcvsxdsp
__builtin_vsx_xvcvsxwdp
__builtin_vsx_xvcvuxdsp
__builtin_vsx_xvcvuxwdp
__builtin_vsx_xvdivdp
__builtin_vsx_xvdivsp
__builtin_vsx_xviexpdp
__builtin_vsx_xviexpsp
__builtin_vsx_xvmaxdp
__builtin_vsx_xvmaxsp
__builtin_vsx_xvmindp
__builtin_vsx_xvminsp
__builtin_vsx_xvredp
__builtin_vsx_xvresp
__builtin_vsx_xvrsqrtedp
__builtin_vsx_xvrsqrtesp
__builtin_vsx_xvtstdcdp
__builtin_vsx_xvtstdcsp
__builtin_vsx_xvxexpdp
__builtin_vsx_xvxexpsp
__builtin_vsx_xvxsigdp
__builtin_vsx_xvxsigsp
__builtin_vsx_xxextractuw
__builtin_vsx_xxinsertw
__builtin_vsx_xxleqv
__builtin_r600_group_barrier
__builtin_r600_implicitarg_ptr
__builtin_r600_rat_store_typed
__builtin_r600_read_global_size_x
__builtin_r600_read_global_size_y
__builtin_r600_read_global_size_z
__builtin_r600_read_ngroups_x
__builtin_r600_read_ngroups_y
__builtin_r600_read_ngroups_z
__builtin_r600_read_tgid_x
__builtin_r600_read_tgid_y
__builtin_r600_read_tgid_z
__builtin_s390_efpc
__builtin_tx_nesting_depth
__builtin_s390_lcbb
__builtin_tx_assist
__builtin_s390_sfpc
__builtin_s390_vaccb
__builtin_s390_vacccq
__builtin_s390_vaccf
__builtin_s390_vaccg
__builtin_s390_vacch
__builtin_s390_vaccq
__builtin_s390_vacq
__builtin_s390_vaq
__builtin_s390_vavgb
__builtin_s390_vavgf
__builtin_s390_vavgg
__builtin_s390_vavgh
__builtin_s390_vavglb
__builtin_s390_vavglf
__builtin_s390_vavglg
__builtin_s390_vavglh
__builtin_s390_vbperm
__builtin_s390_vcksm
__builtin_s390_verimb
__builtin_s390_verimf
__builtin_s390_verimg
__builtin_s390_verimh
__builtin_s390_verllb
__builtin_s390_verllf
__builtin_s390_verllg
__builtin_s390_verllh
__builtin_s390_verllvb
__builtin_s390_verllvf
__builtin_s390_verllvg
__builtin_s390_verllvh
__builtin_s390_vfaeb
__builtin_s390_vfaef
__builtin_s390_vfaeh
__builtin_s390_vfaezb
__builtin_s390_vfaezf
__builtin_s390_vfaezh
__builtin_s390_vfeeb
__builtin_s390_vfeef
__builtin_s390_vfeeh
__builtin_s390_vfeezb
__builtin_s390_vfeezf
__builtin_s390_vfeezh
__builtin_s390_vfeneb
__builtin_s390_vfenef
__builtin_s390_vfeneh
__builtin_s390_vfenezb
__builtin_s390_vfenezf
__builtin_s390_vfenezh
__builtin_s390_vgfmab
__builtin_s390_vgfmaf
__builtin_s390_vgfmag
__builtin_s390_vgfmah
__builtin_s390_vgfmb
__builtin_s390_vgfmf
__builtin_s390_vgfmg
__builtin_s390_vgfmh
__builtin_s390_vistrb
__builtin_s390_vistrf
__builtin_s390_vistrh
__builtin_s390_vlbb
__builtin_s390_vll
__builtin_s390_vlrl
__builtin_s390_vmaeb
__builtin_s390_vmaef
__builtin_s390_vmaeh
__builtin_s390_vmahb
__builtin_s390_vmahf
__builtin_s390_vmahh
__builtin_s390_vmaleb
__builtin_s390_vmalef
__builtin_s390_vmaleh
__builtin_s390_vmalhb
__builtin_s390_vmalhf
__builtin_s390_vmalhh
__builtin_s390_vmalob
__builtin_s390_vmalof
__builtin_s390_vmaloh
__builtin_s390_vmaob
__builtin_s390_vmaof
__builtin_s390_vmaoh
__builtin_s390_vmeb
__builtin_s390_vmef
__builtin_s390_vmeh
__builtin_s390_vmhb
__builtin_s390_vmhf
__builtin_s390_vmhh
__builtin_s390_vmleb
__builtin_s390_vmlef
__builtin_s390_vmleh
__builtin_s390_vmlhb
__builtin_s390_vmlhf
__builtin_s390_vmlhh
__builtin_s390_vmlob
__builtin_s390_vmlof
__builtin_s390_vmloh
__builtin_s390_vmob
__builtin_s390_vmof
__builtin_s390_vmoh
__builtin_s390_vmslg
__builtin_s390_vpdi
__builtin_s390_vperm
__builtin_s390_vpklsf
__builtin_s390_vpklsg
__builtin_s390_vpklsh
__builtin_s390_vpksf
__builtin_s390_vpksg
__builtin_s390_vpksh
__builtin_s390_vsbcbiq
__builtin_s390_vsbiq
__builtin_s390_vscbib
__builtin_s390_vscbif
__builtin_s390_vscbig
__builtin_s390_vscbih
__builtin_s390_vscbiq
__builtin_s390_vsl
__builtin_s390_vslb
__builtin_s390_vsldb
__builtin_s390_vsq
__builtin_s390_vsra
__builtin_s390_vsrab
__builtin_s390_vsrl
__builtin_s390_vsrlb
__builtin_s390_vstl
__builtin_s390_vstrcb
__builtin_s390_vstrcf
__builtin_s390_vstrch
__builtin_s390_vstrczb
__builtin_s390_vstrczf
__builtin_s390_vstrczh
__builtin_s390_vstrl
__builtin_s390_vsumb
__builtin_s390_vsumgf
__builtin_s390_vsumgh
__builtin_s390_vsumh
__builtin_s390_vsumqf
__builtin_s390_vsumqg
__builtin_s390_vtm
__builtin_s390_vuphb
__builtin_s390_vuphf
__builtin_s390_vuphh
__builtin_s390_vuplb
__builtin_s390_vuplf
__builtin_s390_vuplhb
__builtin_s390_vuplhf
__builtin_s390_vuplhh
__builtin_s390_vuplhw
__builtin_s390_vupllb
__builtin_s390_vupllf
__builtin_s390_vupllh
__builtin_ia32_pavgusb
__builtin_ia32_pf2id
__builtin_ia32_pfacc
__builtin_ia32_pfadd
__builtin_ia32_pfcmpeq
__builtin_ia32_pfcmpge
__builtin_ia32_pfcmpgt
__builtin_ia32_pfmax
__builtin_ia32_pfmin
__builtin_ia32_pfmul
__builtin_ia32_pfrcp
__builtin_ia32_pfrcpit1
__builtin_ia32_pfrcpit2
__builtin_ia32_pfrsqit1
__builtin_ia32_pfrsqrt
__builtin_ia32_pfsub
__builtin_ia32_pfsubr
__builtin_ia32_pi2fd
__builtin_ia32_pmulhrw
__builtin_ia32_pf2iw
__builtin_ia32_pfnacc
__builtin_ia32_pfpnacc
__builtin_ia32_pi2fw
__builtin_ia32_addcarry_u32
__builtin_ia32_addcarry_u64
__builtin_ia32_addcarryx_u32
__builtin_ia32_addcarryx_u64
__builtin_ia32_aesdec128
__builtin_ia32_aesdeclast128
__builtin_ia32_aesenc128
__builtin_ia32_aesenclast128
__builtin_ia32_aesimc128
__builtin_ia32_aeskeygenassist128
__builtin_ia32_addsubpd256
__builtin_ia32_addsubps256
__builtin_ia32_blendvpd256
__builtin_ia32_blendvps256
__builtin_ia32_cvtpd2ps256
__builtin_ia32_cvtpd2dq256
__builtin_ia32_cvtps2dq256
__builtin_ia32_cvtdq2ps256
__builtin_ia32_cvttpd2dq256
__builtin_ia32_cvttps2dq256
__builtin_ia32_dpps256
__builtin_ia32_haddpd256
__builtin_ia32_haddps256
__builtin_ia32_hsubpd256
__builtin_ia32_hsubps256
__builtin_ia32_lddqu256
__builtin_ia32_maskloadpd
__builtin_ia32_maskloadpd256
__builtin_ia32_maskloadps
__builtin_ia32_maskloadps256
__builtin_ia32_maskstorepd
__builtin_ia32_maskstorepd256
__builtin_ia32_maskstoreps
__builtin_ia32_maskstoreps256
__builtin_ia32_maxpd256
__builtin_ia32_maxps256
__builtin_ia32_minpd256
__builtin_ia32_minps256
__builtin_ia32_movmskpd256
__builtin_ia32_movmskps256
__builtin_ia32_ptestc256
__builtin_ia32_ptestnzc256
__builtin_ia32_ptestz256
__builtin_ia32_rcpps256
__builtin_ia32_roundpd256
__builtin_ia32_roundps256
__builtin_ia32_rsqrtps256
__builtin_ia32_sqrtpd256
__builtin_ia32_sqrtps256
__builtin_ia32_vperm2f128_pd256
__builtin_ia32_vperm2f128_ps256
__builtin_ia32_vperm2f128_si256
__builtin_ia32_vpermilvarpd
__builtin_ia32_vpermilvarpd256
__builtin_ia32_vpermilvarps
__builtin_ia32_vpermilvarps256
__builtin_ia32_vtestcpd
__builtin_ia32_vtestcpd256
__builtin_ia32_vtestcps
__builtin_ia32_vtestcps256
__builtin_ia32_vtestnzcpd
__builtin_ia32_vtestnzcpd256
__builtin_ia32_vtestnzcps
__builtin_ia32_vtestnzcps256
__builtin_ia32_vtestzpd
__builtin_ia32_vtestzpd256
__builtin_ia32_vtestzps
__builtin_ia32_vtestzps256
__builtin_ia32_vzeroall
__builtin_ia32_vzeroupper
__builtin_ia32_gatherd_d
__builtin_ia32_gatherd_d256
__builtin_ia32_gatherd_pd
__builtin_ia32_gatherd_pd256
__builtin_ia32_gatherd_ps
__builtin_ia32_gatherd_ps256
__builtin_ia32_gatherd_q
__builtin_ia32_gatherd_q256
__builtin_ia32_gatherq_d
__builtin_ia32_gatherq_d256
__builtin_ia32_gatherq_pd
__builtin_ia32_gatherq_pd256
__builtin_ia32_gatherq_ps
__builtin_ia32_gatherq_ps256
__builtin_ia32_gatherq_q
__builtin_ia32_gatherq_q256
__builtin_ia32_maskloadd
__builtin_ia32_maskloadd256
__builtin_ia32_maskloadq
__builtin_ia32_maskloadq256
__builtin_ia32_maskstored
__builtin_ia32_maskstored256
__builtin_ia32_maskstoreq
__builtin_ia32_maskstoreq256
__builtin_ia32_mpsadbw256
__builtin_ia32_pabsb256
__builtin_ia32_pabsd256
__builtin_ia32_pabsw256
__builtin_ia32_packssdw256
__builtin_ia32_packsswb256
__builtin_ia32_packusdw256
__builtin_ia32_packuswb256
__builtin_ia32_paddsb256
__builtin_ia32_paddsw256
__builtin_ia32_paddusb256
__builtin_ia32_paddusw256
__builtin_ia32_pavgb256
__builtin_ia32_pavgw256
__builtin_ia32_pblendvb256
__builtin_ia32_permvarsi256
__builtin_ia32_permvarsf256
__builtin_ia32_phaddd256
__builtin_ia32_phaddsw256
__builtin_ia32_phaddw256
__builtin_ia32_phsubd256
__builtin_ia32_phsubsw256
__builtin_ia32_phsubw256
__builtin_ia32_pmaddubsw256
__builtin_ia32_pmaddwd256
__builtin_ia32_pmovmskb256
__builtin_ia32_pmuldq256
__builtin_ia32_pmulhrsw256
__builtin_ia32_pmulhw256
__builtin_ia32_pmulhuw256
__builtin_ia32_pmuludq256
__builtin_ia32_psadbw256
__builtin_ia32_pshufb256
__builtin_ia32_psignb256
__builtin_ia32_psignd256
__builtin_ia32_psignw256
__builtin_ia32_pslld256
__builtin_ia32_psllq256
__builtin_ia32_psllw256
__builtin_ia32_pslldi256
__builtin_ia32_psllqi256
__builtin_ia32_psllwi256
__builtin_ia32_psllv4si
__builtin_ia32_psllv8si
__builtin_ia32_psllv2di
__builtin_ia32_psllv4di
__builtin_ia32_psrad256
__builtin_ia32_psraw256
__builtin_ia32_psradi256
__builtin_ia32_psrawi256
__builtin_ia32_psrav4si
__builtin_ia32_psrav8si
__builtin_ia32_psrld256
__builtin_ia32_psrlq256
__builtin_ia32_psrlw256
__builtin_ia32_psrldi256
__builtin_ia32_psrlqi256
__builtin_ia32_psrlwi256
__builtin_ia32_psrlv4si
__builtin_ia32_psrlv8si
__builtin_ia32_psrlv2di
__builtin_ia32_psrlv4di
__builtin_ia32_psubsb256
__builtin_ia32_psubsw256
__builtin_ia32_psubusb256
__builtin_ia32_psubusw256
__builtin_ia32_permti256
__builtin_ia32_broadcastmb128
__builtin_ia32_broadcastmb256
__builtin_ia32_broadcastmb512
__builtin_ia32_broadcastmw128
__builtin_ia32_broadcastmw256
__builtin_ia32_broadcastmw512
__builtin_ia32_cvtb2mask128
__builtin_ia32_cvtb2mask256
__builtin_ia32_cvtb2mask512
__builtin_ia32_cvtd2mask128
__builtin_ia32_cvtd2mask256
__builtin_ia32_cvtd2mask512
__builtin_ia32_cvtq2mask128
__builtin_ia32_cvtq2mask256
__builtin_ia32_cvtq2mask512
__builtin_ia32_cvtsi2sd64
__builtin_ia32_cvtsi2ss32
__builtin_ia32_cvtsi2ss64
__builtin_ia32_vcvttsd2si32
__builtin_ia32_vcvttsd2si64
__builtin_ia32_vcvttsd2usi32
__builtin_ia32_vcvttsd2usi64
__builtin_ia32_vcvttss2si32
__builtin_ia32_vcvttss2si64
__builtin_ia32_vcvttss2usi32
__builtin_ia32_vcvttss2usi64
__builtin_ia32_cvtusi2sd32
__builtin_ia32_cvtusi2ss32
__builtin_ia32_cvtusi2sd64
__builtin_ia32_cvtusi2ss64
__builtin_ia32_cvtw2mask128
__builtin_ia32_cvtw2mask256
__builtin_ia32_cvtw2mask512
__builtin_ia32_exp2pd_mask
__builtin_ia32_exp2ps_mask
__builtin_ia32_gathersiv8df
__builtin_ia32_gathersiv16si
__builtin_ia32_gathersiv8di
__builtin_ia32_gathersiv16sf
__builtin_ia32_gatherdiv8df
__builtin_ia32_gatherdiv16si
__builtin_ia32_gatherdiv8di
__builtin_ia32_gatherdiv16sf
__builtin_ia32_gather3div2df
__builtin_ia32_gather3div2di
__builtin_ia32_gather3div4df
__builtin_ia32_gather3div4di
__builtin_ia32_gather3div4sf
__builtin_ia32_gather3div4si
__builtin_ia32_gather3div8sf
__builtin_ia32_gather3div8si
__builtin_ia32_gather3siv2df
__builtin_ia32_gather3siv2di
__builtin_ia32_gather3siv4df
__builtin_ia32_gather3siv4di
__builtin_ia32_gather3siv4sf
__builtin_ia32_gather3siv4si
__builtin_ia32_gather3siv8sf
__builtin_ia32_gather3siv8si
__builtin_ia32_gatherpfdpd
__builtin_ia32_gatherpfdps
__builtin_ia32_gatherpfqpd
__builtin_ia32_gatherpfqps
__builtin_ia32_kandhi
__builtin_ia32_kandnhi
__builtin_ia32_knothi
__builtin_ia32_korhi
__builtin_ia32_kortestchi
__builtin_ia32_kortestzhi
__builtin_ia32_kunpckhi
__builtin_ia32_kunpckdi
__builtin_ia32_kunpcksi
__builtin_ia32_kxnorhi
__builtin_ia32_kxorhi
__builtin_ia32_addpd512_mask
__builtin_ia32_addps512_mask
__builtin_ia32_addsd_round_mask
__builtin_ia32_addss_round_mask
__builtin_ia32_broadcastf32x2_256_mask
__builtin_ia32_broadcastf32x2_512_mask
__builtin_ia32_broadcastf32x4_256_mask
__builtin_ia32_broadcastf32x4_512
__builtin_ia32_broadcastf32x8_512_mask
__builtin_ia32_broadcastf64x2_256_mask
__builtin_ia32_broadcastf64x2_512_mask
__builtin_ia32_broadcastf64x4_512
__builtin_ia32_broadcasti32x2_128_mask
__builtin_ia32_broadcasti32x2_256_mask
__builtin_ia32_broadcasti32x2_512_mask
__builtin_ia32_broadcasti32x4_256_mask
__builtin_ia32_broadcasti32x4_512
__builtin_ia32_broadcasti32x8_512_mask
__builtin_ia32_broadcasti64x2_256_mask
__builtin_ia32_broadcasti64x2_512_mask
__builtin_ia32_broadcasti64x4_512
__builtin_ia32_cmppd128_mask
__builtin_ia32_cmppd256_mask
__builtin_ia32_cmppd512_mask
__builtin_ia32_cmpps128_mask
__builtin_ia32_cmpps256_mask
__builtin_ia32_cmpps512_mask
__builtin_ia32_cmpsd_mask
__builtin_ia32_cmpss_mask
__builtin_ia32_compresssi128_mask
__builtin_ia32_compresssi256_mask
__builtin_ia32_compresssi512_mask
__builtin_ia32_compressdf128_mask
__builtin_ia32_compressdf256_mask
__builtin_ia32_compressdf512_mask
__builtin_ia32_compresssf128_mask
__builtin_ia32_compresssf256_mask
__builtin_ia32_compresssf512_mask
__builtin_ia32_compressdi128_mask
__builtin_ia32_compressdi256_mask
__builtin_ia32_compressdi512_mask
__builtin_ia32_compressstoresi128_mask
__builtin_ia32_compressstoresi256_mask
__builtin_ia32_compressstoresi512_mask
__builtin_ia32_compressstoredf128_mask
__builtin_ia32_compressstoredf256_mask
__builtin_ia32_compressstoredf512_mask
__builtin_ia32_compressstoresf128_mask
__builtin_ia32_compressstoresf256_mask
__builtin_ia32_compressstoresf512_mask
__builtin_ia32_compressstoredi128_mask
__builtin_ia32_compressstoredi256_mask
__builtin_ia32_compressstoredi512_mask
__builtin_ia32_vpconflictsi_128_mask
__builtin_ia32_vpconflictsi_256_mask
__builtin_ia32_vpconflictsi_512_mask
__builtin_ia32_vpconflictdi_128_mask
__builtin_ia32_vpconflictdi_256_mask
__builtin_ia32_vpconflictdi_512_mask
__builtin_ia32_cvtdq2ps128_mask
__builtin_ia32_cvtdq2ps256_mask
__builtin_ia32_cvtdq2ps512_mask
__builtin_ia32_cvtpd2dq128_mask
__builtin_ia32_cvtpd2dq256_mask
__builtin_ia32_cvtpd2dq512_mask
__builtin_ia32_cvtpd2ps_mask
__builtin_ia32_cvtpd2ps256_mask
__builtin_ia32_cvtpd2ps512_mask
__builtin_ia32_cvtpd2qq128_mask
__builtin_ia32_cvtpd2qq256_mask
__builtin_ia32_cvtpd2qq512_mask
__builtin_ia32_cvtpd2udq128_mask
__builtin_ia32_cvtpd2udq256_mask
__builtin_ia32_cvtpd2udq512_mask
__builtin_ia32_cvtpd2uqq128_mask
__builtin_ia32_cvtpd2uqq256_mask
__builtin_ia32_cvtpd2uqq512_mask
__builtin_ia32_cvtps2dq128_mask
__builtin_ia32_cvtps2dq256_mask
__builtin_ia32_cvtps2dq512_mask
__builtin_ia32_cvtps2pd128_mask
__builtin_ia32_cvtps2pd256_mask
__builtin_ia32_cvtps2pd512_mask
__builtin_ia32_cvtps2qq128_mask
__builtin_ia32_cvtps2qq256_mask
__builtin_ia32_cvtps2qq512_mask
__builtin_ia32_cvtps2udq128_mask
__builtin_ia32_cvtps2udq256_mask
__builtin_ia32_cvtps2udq512_mask
__builtin_ia32_cvtps2uqq128_mask
__builtin_ia32_cvtps2uqq256_mask
__builtin_ia32_cvtps2uqq512_mask
__builtin_ia32_cvtqq2pd128_mask
__builtin_ia32_cvtqq2pd256_mask
__builtin_ia32_cvtqq2pd512_mask
__builtin_ia32_cvtqq2ps128_mask
__builtin_ia32_cvtqq2ps256_mask
__builtin_ia32_cvtqq2ps512_mask
__builtin_ia32_cvtsd2ss_round_mask
__builtin_ia32_cvtss2sd_round_mask
__builtin_ia32_cvttpd2dq128_mask
__builtin_ia32_cvttpd2dq256_mask
__builtin_ia32_cvttpd2dq512_mask
__builtin_ia32_cvttpd2qq128_mask
__builtin_ia32_cvttpd2qq256_mask
__builtin_ia32_cvttpd2qq512_mask
__builtin_ia32_cvttpd2udq128_mask
__builtin_ia32_cvttpd2udq256_mask
__builtin_ia32_cvttpd2udq512_mask
__builtin_ia32_cvttpd2uqq128_mask
__builtin_ia32_cvttpd2uqq256_mask
__builtin_ia32_cvttpd2uqq512_mask
__builtin_ia32_cvttps2dq128_mask
__builtin_ia32_cvttps2dq256_mask
__builtin_ia32_cvttps2dq512_mask
__builtin_ia32_cvttps2qq128_mask
__builtin_ia32_cvttps2qq256_mask
__builtin_ia32_cvttps2qq512_mask
__builtin_ia32_cvttps2udq128_mask
__builtin_ia32_cvttps2udq256_mask
__builtin_ia32_cvttps2udq512_mask
__builtin_ia32_cvttps2uqq128_mask
__builtin_ia32_cvttps2uqq256_mask
__builtin_ia32_cvttps2uqq512_mask
__builtin_ia32_cvtudq2ps128_mask
__builtin_ia32_cvtudq2ps256_mask
__builtin_ia32_cvtudq2ps512_mask
__builtin_ia32_cvtuqq2pd128_mask
__builtin_ia32_cvtuqq2pd256_mask
__builtin_ia32_cvtuqq2pd512_mask
__builtin_ia32_cvtuqq2ps128_mask
__builtin_ia32_cvtuqq2ps256_mask
__builtin_ia32_cvtuqq2ps512_mask
__builtin_ia32_dbpsadbw128_mask
__builtin_ia32_dbpsadbw256_mask
__builtin_ia32_dbpsadbw512_mask
__builtin_ia32_divpd512_mask
__builtin_ia32_divps512_mask
__builtin_ia32_divsd_round_mask
__builtin_ia32_divss_round_mask
__builtin_ia32_expandsi128_mask
__builtin_ia32_expandsi256_mask
__builtin_ia32_expandsi512_mask
__builtin_ia32_expandloadsi128_mask
__builtin_ia32_expandloadsi256_mask
__builtin_ia32_expandloadsi512_mask
__builtin_ia32_expandloaddf128_mask
__builtin_ia32_expandloaddf256_mask
__builtin_ia32_expandloaddf512_mask
__builtin_ia32_expandloadsf128_mask
__builtin_ia32_expandloadsf256_mask
__builtin_ia32_expandloadsf512_mask
__builtin_ia32_expandloaddi128_mask
__builtin_ia32_expandloaddi256_mask
__builtin_ia32_expandloaddi512_mask
__builtin_ia32_expanddf128_mask
__builtin_ia32_expanddf256_mask
__builtin_ia32_expanddf512_mask
__builtin_ia32_expandsf128_mask
__builtin_ia32_expandsf256_mask
__builtin_ia32_expandsf512_mask
__builtin_ia32_expanddi128_mask
__builtin_ia32_expanddi256_mask
__builtin_ia32_expanddi512_mask
__builtin_ia32_fixupimmpd128_mask
__builtin_ia32_fixupimmpd256_mask
__builtin_ia32_fixupimmpd512_mask
__builtin_ia32_fixupimmps128_mask
__builtin_ia32_fixupimmps256_mask
__builtin_ia32_fixupimmps512_mask
__builtin_ia32_fixupimmsd_mask
__builtin_ia32_fixupimmss_mask
__builtin_ia32_fpclasspd128_mask
__builtin_ia32_fpclasspd256_mask
__builtin_ia32_fpclasspd512_mask
__builtin_ia32_fpclassps128_mask
__builtin_ia32_fpclassps256_mask
__builtin_ia32_fpclassps512_mask
__builtin_ia32_fpclasssd_mask
__builtin_ia32_fpclassss_mask
__builtin_ia32_getexppd128_mask
__builtin_ia32_getexppd256_mask
__builtin_ia32_getexppd512_mask
__builtin_ia32_getexpps128_mask
__builtin_ia32_getexpps256_mask
__builtin_ia32_getexpps512_mask
__builtin_ia32_getexpsd128_round_mask
__builtin_ia32_getexpss128_round_mask
__builtin_ia32_getmantpd128_mask
__builtin_ia32_getmantpd256_mask
__builtin_ia32_getmantpd512_mask
__builtin_ia32_getmantps128_mask
__builtin_ia32_getmantps256_mask
__builtin_ia32_getmantps512_mask
__builtin_ia32_getmantsd_round_mask
__builtin_ia32_getmantss_round_mask
__builtin_ia32_maxpd512_mask
__builtin_ia32_maxps512_mask
__builtin_ia32_maxsd_round_mask
__builtin_ia32_maxss_round_mask
__builtin_ia32_minpd512_mask
__builtin_ia32_minps512_mask
__builtin_ia32_minsd_round_mask
__builtin_ia32_minss_round_mask
__builtin_ia32_mulpd512_mask
__builtin_ia32_mulps512_mask
__builtin_ia32_mulsd_round_mask
__builtin_ia32_mulss_round_mask
__builtin_ia32_pabsb128_mask
__builtin_ia32_pabsb256_mask
__builtin_ia32_pabsb512_mask
__builtin_ia32_pabsd128_mask
__builtin_ia32_pabsd256_mask
__builtin_ia32_pabsd512_mask
__builtin_ia32_pabsq128_mask
__builtin_ia32_pabsq256_mask
__builtin_ia32_pabsq512_mask
__builtin_ia32_pabsw128_mask
__builtin_ia32_pabsw256_mask
__builtin_ia32_pabsw512_mask
__builtin_ia32_paddsb128_mask
__builtin_ia32_paddsb256_mask
__builtin_ia32_paddsb512_mask
__builtin_ia32_paddsw128_mask
__builtin_ia32_paddsw256_mask
__builtin_ia32_paddsw512_mask
__builtin_ia32_paddusb128_mask
__builtin_ia32_paddusb256_mask
__builtin_ia32_paddusb512_mask
__builtin_ia32_paddusw128_mask
__builtin_ia32_paddusw256_mask
__builtin_ia32_paddusw512_mask
__builtin_ia32_pavgb128_mask
__builtin_ia32_pavgb256_mask
__builtin_ia32_pavgb512_mask
__builtin_ia32_pavgw128_mask
__builtin_ia32_pavgw256_mask
__builtin_ia32_pavgw512_mask
__builtin_ia32_pbroadcastb128_gpr_mask
__builtin_ia32_pbroadcastb256_gpr_mask
__builtin_ia32_pbroadcastb512_gpr_mask
__builtin_ia32_pbroadcastd128_gpr_mask
__builtin_ia32_pbroadcastd256_gpr_mask
__builtin_ia32_pbroadcastd512_gpr_mask
__builtin_ia32_pbroadcastq128_gpr_mask
__builtin_ia32_pbroadcastq256_gpr_mask
__builtin_ia32_pbroadcastq512_gpr_mask
__builtin_ia32_pbroadcastq512_mem_mask
__builtin_ia32_pbroadcastw128_gpr_mask
__builtin_ia32_pbroadcastw256_gpr_mask
__builtin_ia32_pbroadcastw512_gpr_mask
__builtin_ia32_permvardf256_mask
__builtin_ia32_permvardf512_mask
__builtin_ia32_permvardi256_mask
__builtin_ia32_permvardi512_mask
__builtin_ia32_permvarhi128_mask
__builtin_ia32_permvarhi256_mask
__builtin_ia32_permvarhi512_mask
__builtin_ia32_permvarqi128_mask
__builtin_ia32_permvarqi256_mask
__builtin_ia32_permvarqi512_mask
__builtin_ia32_permvarsf256_mask
__builtin_ia32_permvarsf512_mask
__builtin_ia32_permvarsi256_mask
__builtin_ia32_permvarsi512_mask
__builtin_ia32_pmaddubsw128_mask
__builtin_ia32_pmaddubsw256_mask
__builtin_ia32_pmaddubsw512_mask
__builtin_ia32_pmaddwd128_mask
__builtin_ia32_pmaddwd256_mask
__builtin_ia32_pmaddwd512_mask
__builtin_ia32_pmovdb128_mask
__builtin_ia32_pmovdb256_mask
__builtin_ia32_pmovdb512_mask
__builtin_ia32_pmovdb128mem_mask
__builtin_ia32_pmovdb256mem_mask
__builtin_ia32_pmovdb512mem_mask
__builtin_ia32_pmovdw128_mask
__builtin_ia32_pmovdw256_mask
__builtin_ia32_pmovdw512_mask
__builtin_ia32_pmovdw128mem_mask
__builtin_ia32_pmovdw256mem_mask
__builtin_ia32_pmovdw512mem_mask
__builtin_ia32_pmovqb128_mask
__builtin_ia32_pmovqb256_mask
__builtin_ia32_pmovqb512_mask
__builtin_ia32_pmovqb128mem_mask
__builtin_ia32_pmovqb256mem_mask
__builtin_ia32_pmovqb512mem_mask
__builtin_ia32_pmovqd128_mask
__builtin_ia32_pmovqd256_mask
__builtin_ia32_pmovqd512_mask
__builtin_ia32_pmovqd128mem_mask
__builtin_ia32_pmovqd256mem_mask
__builtin_ia32_pmovqd512mem_mask
__builtin_ia32_pmovqw128_mask
__builtin_ia32_pmovqw256_mask
__builtin_ia32_pmovqw512_mask
__builtin_ia32_pmovqw128mem_mask
__builtin_ia32_pmovqw256mem_mask
__builtin_ia32_pmovqw512mem_mask
__builtin_ia32_pmovwb128_mask
__builtin_ia32_pmovwb256_mask
__builtin_ia32_pmovwb512_mask
__builtin_ia32_pmovwb128mem_mask
__builtin_ia32_pmovwb256mem_mask
__builtin_ia32_pmovwb512mem_mask
__builtin_ia32_pmovsdb128_mask
__builtin_ia32_pmovsdb256_mask
__builtin_ia32_pmovsdb512_mask
__builtin_ia32_pmovsdb128mem_mask
__builtin_ia32_pmovsdb256mem_mask
__builtin_ia32_pmovsdb512mem_mask
__builtin_ia32_pmovsdw128_mask
__builtin_ia32_pmovsdw256_mask
__builtin_ia32_pmovsdw512_mask
__builtin_ia32_pmovsdw128mem_mask
__builtin_ia32_pmovsdw256mem_mask
__builtin_ia32_pmovsdw512mem_mask
__builtin_ia32_pmovsqb128_mask
__builtin_ia32_pmovsqb256_mask
__builtin_ia32_pmovsqb512_mask
__builtin_ia32_pmovsqb128mem_mask
__builtin_ia32_pmovsqb256mem_mask
__builtin_ia32_pmovsqb512mem_mask
__builtin_ia32_pmovsqd128_mask
__builtin_ia32_pmovsqd256_mask
__builtin_ia32_pmovsqd512_mask
__builtin_ia32_pmovsqd128mem_mask
__builtin_ia32_pmovsqd256mem_mask
__builtin_ia32_pmovsqd512mem_mask
__builtin_ia32_pmovsqw128_mask
__builtin_ia32_pmovsqw256_mask
__builtin_ia32_pmovsqw512_mask
__builtin_ia32_pmovsqw128mem_mask
__builtin_ia32_pmovsqw256mem_mask
__builtin_ia32_pmovsqw512mem_mask
__builtin_ia32_pmovswb128_mask
__builtin_ia32_pmovswb256_mask
__builtin_ia32_pmovswb512_mask
__builtin_ia32_pmovswb128mem_mask
__builtin_ia32_pmovswb256mem_mask
__builtin_ia32_pmovswb512mem_mask
__builtin_ia32_pmovusdb128_mask
__builtin_ia32_pmovusdb256_mask
__builtin_ia32_pmovusdb512_mask
__builtin_ia32_pmovusdb128mem_mask
__builtin_ia32_pmovusdb256mem_mask
__builtin_ia32_pmovusdb512mem_mask
__builtin_ia32_pmovusdw128_mask
__builtin_ia32_pmovusdw256_mask
__builtin_ia32_pmovusdw512_mask
__builtin_ia32_pmovusdw128mem_mask
__builtin_ia32_pmovusdw256mem_mask
__builtin_ia32_pmovusdw512mem_mask
__builtin_ia32_pmovusqb128_mask
__builtin_ia32_pmovusqb256_mask
__builtin_ia32_pmovusqb512_mask
__builtin_ia32_pmovusqb128mem_mask
__builtin_ia32_pmovusqb256mem_mask
__builtin_ia32_pmovusqb512mem_mask
__builtin_ia32_pmovusqd128_mask
__builtin_ia32_pmovusqd256_mask
__builtin_ia32_pmovusqd512_mask
__builtin_ia32_pmovusqd128mem_mask
__builtin_ia32_pmovusqd256mem_mask
__builtin_ia32_pmovusqd512mem_mask
__builtin_ia32_pmovusqw128_mask
__builtin_ia32_pmovusqw256_mask
__builtin_ia32_pmovusqw512_mask
__builtin_ia32_pmovusqw128mem_mask
__builtin_ia32_pmovusqw256mem_mask
__builtin_ia32_pmovusqw512mem_mask
__builtin_ia32_pmovuswb128_mask
__builtin_ia32_pmovuswb256_mask
__builtin_ia32_pmovuswb512_mask
__builtin_ia32_pmovuswb128mem_mask
__builtin_ia32_pmovuswb256mem_mask
__builtin_ia32_pmovuswb512mem_mask
__builtin_ia32_pmulhrsw128_mask
__builtin_ia32_pmulhrsw256_mask
__builtin_ia32_pmulhrsw512_mask
__builtin_ia32_pmulhw128_mask
__builtin_ia32_pmulhw256_mask
__builtin_ia32_pmulhw512_mask
__builtin_ia32_pmulhuw128_mask
__builtin_ia32_pmulhuw256_mask
__builtin_ia32_pmulhuw512_mask
__builtin_ia32_vpmultishiftqb128_mask
__builtin_ia32_vpmultishiftqb256_mask
__builtin_ia32_vpmultishiftqb512_mask
__builtin_ia32_prold128_mask
__builtin_ia32_prold256_mask
__builtin_ia32_prold512_mask
__builtin_ia32_prolq128_mask
__builtin_ia32_prolq256_mask
__builtin_ia32_prolq512_mask
__builtin_ia32_prolvd128_mask
__builtin_ia32_prolvd256_mask
__builtin_ia32_prolvd512_mask
__builtin_ia32_prolvq128_mask
__builtin_ia32_prolvq256_mask
__builtin_ia32_prolvq512_mask
__builtin_ia32_prord128_mask
__builtin_ia32_prord256_mask
__builtin_ia32_prord512_mask
__builtin_ia32_prorq128_mask
__builtin_ia32_prorq256_mask
__builtin_ia32_prorq512_mask
__builtin_ia32_prorvd128_mask
__builtin_ia32_prorvd256_mask
__builtin_ia32_prorvd512_mask
__builtin_ia32_prorvq128_mask
__builtin_ia32_prorvq256_mask
__builtin_ia32_prorvq512_mask
__builtin_ia32_psubsb128_mask
__builtin_ia32_psubsb256_mask
__builtin_ia32_psubsb512_mask
__builtin_ia32_psubsw128_mask
__builtin_ia32_psubsw256_mask
__builtin_ia32_psubsw512_mask
__builtin_ia32_psubusb128_mask
__builtin_ia32_psubusb256_mask
__builtin_ia32_psubusb512_mask
__builtin_ia32_psubusw128_mask
__builtin_ia32_psubusw256_mask
__builtin_ia32_psubusw512_mask
__builtin_ia32_pternlogd128_mask
__builtin_ia32_pternlogd256_mask
__builtin_ia32_pternlogd512_mask
__builtin_ia32_pternlogq128_mask
__builtin_ia32_pternlogq256_mask
__builtin_ia32_pternlogq512_mask
__builtin_ia32_rangepd128_mask
__builtin_ia32_rangepd256_mask
__builtin_ia32_rangepd512_mask
__builtin_ia32_rangeps128_mask
__builtin_ia32_rangeps256_mask
__builtin_ia32_rangeps512_mask
__builtin_ia32_rangesd128_round_mask
__builtin_ia32_rangess128_round_mask
__builtin_ia32_reducepd128_mask
__builtin_ia32_reducepd256_mask
__builtin_ia32_reducepd512_mask
__builtin_ia32_reduceps128_mask
__builtin_ia32_reduceps256_mask
__builtin_ia32_reduceps512_mask
__builtin_ia32_reducesd_mask
__builtin_ia32_reducess_mask
__builtin_ia32_rndscalepd_128_mask
__builtin_ia32_rndscalepd_256_mask
__builtin_ia32_rndscalepd_mask
__builtin_ia32_rndscaleps_128_mask
__builtin_ia32_rndscaleps_256_mask
__builtin_ia32_rndscaleps_mask
__builtin_ia32_rndscalesd_round_mask
__builtin_ia32_rndscaless_round_mask
__builtin_ia32_scalefpd128_mask
__builtin_ia32_scalefpd256_mask
__builtin_ia32_scalefpd512_mask
__builtin_ia32_scalefps128_mask
__builtin_ia32_scalefps256_mask
__builtin_ia32_scalefps512_mask
__builtin_ia32_scalefsd_round_mask
__builtin_ia32_scalefss_round_mask
__builtin_ia32_shuf_f32x4_mask
__builtin_ia32_shuf_f32x4_256_mask
__builtin_ia32_shuf_f64x2_mask
__builtin_ia32_shuf_f64x2_256_mask
__builtin_ia32_shuf_i32x4_mask
__builtin_ia32_shuf_i32x4_256_mask
__builtin_ia32_shuf_i64x2_mask
__builtin_ia32_shuf_i64x2_256_mask
__builtin_ia32_sqrtpd128_mask
__builtin_ia32_sqrtpd256_mask
__builtin_ia32_sqrtpd512_mask
__builtin_ia32_sqrtps128_mask
__builtin_ia32_sqrtps256_mask
__builtin_ia32_sqrtps512_mask
__builtin_ia32_sqrtsd_round_mask
__builtin_ia32_sqrtss_round_mask
__builtin_ia32_storess_mask
__builtin_ia32_subpd512_mask
__builtin_ia32_subps512_mask
__builtin_ia32_subsd_round_mask
__builtin_ia32_subss_round_mask
__builtin_ia32_vcvtph2ps_mask
__builtin_ia32_vcvtph2ps256_mask
__builtin_ia32_vcvtph2ps512_mask
__builtin_ia32_vcvtps2ph_mask
__builtin_ia32_vcvtps2ph256_mask
__builtin_ia32_vcvtps2ph512_mask
__builtin_ia32_vfmaddpd128_mask
__builtin_ia32_vfmaddpd256_mask
__builtin_ia32_vfmaddpd512_mask
__builtin_ia32_vfmaddps128_mask
__builtin_ia32_vfmaddps256_mask
__builtin_ia32_vfmaddps512_mask
__builtin_ia32_vfmaddsd3_mask
__builtin_ia32_vfmaddss3_mask
__builtin_ia32_vfmaddsubpd128_mask
__builtin_ia32_vfmaddsubpd256_mask
__builtin_ia32_vfmaddsubpd512_mask
__builtin_ia32_vfmaddsubps128_mask
__builtin_ia32_vfmaddsubps256_mask
__builtin_ia32_vfmaddsubps512_mask
__builtin_ia32_vfnmaddpd128_mask
__builtin_ia32_vfnmaddpd256_mask
__builtin_ia32_vfnmaddpd512_mask
__builtin_ia32_vfnmaddps128_mask
__builtin_ia32_vfnmaddps256_mask
__builtin_ia32_vfnmaddps512_mask
__builtin_ia32_vfnmsubpd128_mask
__builtin_ia32_vfnmsubpd256_mask
__builtin_ia32_vfnmsubpd512_mask
__builtin_ia32_vfnmsubps128_mask
__builtin_ia32_vfnmsubps256_mask
__builtin_ia32_vfnmsubps512_mask
__builtin_ia32_vpermi2vard128_mask
__builtin_ia32_vpermi2vard256_mask
__builtin_ia32_vpermi2vard512_mask
__builtin_ia32_vpermi2varhi128_mask
__builtin_ia32_vpermi2varhi256_mask
__builtin_ia32_vpermi2varhi512_mask
__builtin_ia32_vpermi2varpd128_mask
__builtin_ia32_vpermi2varpd256_mask
__builtin_ia32_vpermi2varpd512_mask
__builtin_ia32_vpermi2varps128_mask
__builtin_ia32_vpermi2varps256_mask
__builtin_ia32_vpermi2varps512_mask
__builtin_ia32_vpermi2varq128_mask
__builtin_ia32_vpermi2varq256_mask
__builtin_ia32_vpermi2varq512_mask
__builtin_ia32_vpermi2varqi128_mask
__builtin_ia32_vpermi2varqi256_mask
__builtin_ia32_vpermi2varqi512_mask
__builtin_ia32_vpermt2vard128_mask
__builtin_ia32_vpermt2vard256_mask
__builtin_ia32_vpermt2vard512_mask
__builtin_ia32_vpermt2varhi128_mask
__builtin_ia32_vpermt2varhi256_mask
__builtin_ia32_vpermt2varhi512_mask
__builtin_ia32_vpermt2varpd128_mask
__builtin_ia32_vpermt2varpd256_mask
__builtin_ia32_vpermt2varpd512_mask
__builtin_ia32_vpermt2varps128_mask
__builtin_ia32_vpermt2varps256_mask
__builtin_ia32_vpermt2varps512_mask
__builtin_ia32_vpermt2varq128_mask
__builtin_ia32_vpermt2varq256_mask
__builtin_ia32_vpermt2varq512_mask
__builtin_ia32_vpermt2varqi128_mask
__builtin_ia32_vpermt2varqi256_mask
__builtin_ia32_vpermt2varqi512_mask
__builtin_ia32_vpmadd52huq128_mask
__builtin_ia32_vpmadd52huq256_mask
__builtin_ia32_vpmadd52huq512_mask
__builtin_ia32_vpmadd52luq128_mask
__builtin_ia32_vpmadd52luq256_mask
__builtin_ia32_vpmadd52luq512_mask
__builtin_ia32_vfmaddpd128_mask3
__builtin_ia32_vfmaddpd256_mask3
__builtin_ia32_vfmaddpd512_mask3
__builtin_ia32_vfmaddps128_mask3
__builtin_ia32_vfmaddps256_mask3
__builtin_ia32_vfmaddps512_mask3
__builtin_ia32_vfmaddsd3_mask3
__builtin_ia32_vfmaddss3_mask3
__builtin_ia32_vfmaddsubpd128_mask3
__builtin_ia32_vfmaddsubpd256_mask3
__builtin_ia32_vfmaddsubpd512_mask3
__builtin_ia32_vfmaddsubps128_mask3
__builtin_ia32_vfmaddsubps256_mask3
__builtin_ia32_vfmaddsubps512_mask3
__builtin_ia32_vfmsubpd128_mask3
__builtin_ia32_vfmsubpd256_mask3
__builtin_ia32_vfmsubpd512_mask3
__builtin_ia32_vfmsubps128_mask3
__builtin_ia32_vfmsubps256_mask3
__builtin_ia32_vfmsubps512_mask3
__builtin_ia32_vfmsubsd3_mask3
__builtin_ia32_vfmsubss3_mask3
__builtin_ia32_vfmsubaddpd128_mask3
__builtin_ia32_vfmsubaddpd256_mask3
__builtin_ia32_vfmsubaddpd512_mask3
__builtin_ia32_vfmsubaddps128_mask3
__builtin_ia32_vfmsubaddps256_mask3
__builtin_ia32_vfmsubaddps512_mask3
__builtin_ia32_vfnmsubpd128_mask3
__builtin_ia32_vfnmsubpd256_mask3
__builtin_ia32_vfnmsubpd512_mask3
__builtin_ia32_vfnmsubps128_mask3
__builtin_ia32_vfnmsubps256_mask3
__builtin_ia32_vfnmsubps512_mask3
__builtin_ia32_vfnmsubsd3_mask3
__builtin_ia32_vfnmsubss3_mask3
__builtin_ia32_fixupimmpd128_maskz
__builtin_ia32_fixupimmpd256_maskz
__builtin_ia32_fixupimmpd512_maskz
__builtin_ia32_fixupimmps128_maskz
__builtin_ia32_fixupimmps256_maskz
__builtin_ia32_fixupimmps512_maskz
__builtin_ia32_fixupimmsd_maskz
__builtin_ia32_fixupimmss_maskz
__builtin_ia32_pternlogd128_maskz
__builtin_ia32_pternlogd256_maskz
__builtin_ia32_pternlogd512_maskz
__builtin_ia32_pternlogq128_maskz
__builtin_ia32_pternlogq256_maskz
__builtin_ia32_pternlogq512_maskz
__builtin_ia32_vfmaddpd128_maskz
__builtin_ia32_vfmaddpd256_maskz
__builtin_ia32_vfmaddpd512_maskz
__builtin_ia32_vfmaddps128_maskz
__builtin_ia32_vfmaddps256_maskz
__builtin_ia32_vfmaddps512_maskz
__builtin_ia32_vfmaddsd3_maskz
__builtin_ia32_vfmaddss3_maskz
__builtin_ia32_vfmaddsubpd128_maskz
__builtin_ia32_vfmaddsubpd256_maskz
__builtin_ia32_vfmaddsubpd512_maskz
__builtin_ia32_vfmaddsubps128_maskz
__builtin_ia32_vfmaddsubps256_maskz
__builtin_ia32_vfmaddsubps512_maskz
__builtin_ia32_vpermt2vard128_maskz
__builtin_ia32_vpermt2vard256_maskz
__builtin_ia32_vpermt2vard512_maskz
__builtin_ia32_vpermt2varhi128_maskz
__builtin_ia32_vpermt2varhi256_maskz
__builtin_ia32_vpermt2varhi512_maskz
__builtin_ia32_vpermt2varpd128_maskz
__builtin_ia32_vpermt2varpd256_maskz
__builtin_ia32_vpermt2varpd512_maskz
__builtin_ia32_vpermt2varps128_maskz
__builtin_ia32_vpermt2varps256_maskz
__builtin_ia32_vpermt2varps512_maskz
__builtin_ia32_vpermt2varq128_maskz
__builtin_ia32_vpermt2varq256_maskz
__builtin_ia32_vpermt2varq512_maskz
__builtin_ia32_vpermt2varqi128_maskz
__builtin_ia32_vpermt2varqi256_maskz
__builtin_ia32_vpermt2varqi512_maskz
__builtin_ia32_vpmadd52huq128_maskz
__builtin_ia32_vpmadd52huq256_maskz
__builtin_ia32_vpmadd52huq512_maskz
__builtin_ia32_vpmadd52luq128_maskz
__builtin_ia32_vpmadd52luq256_maskz
__builtin_ia32_vpmadd52luq512_maskz
__builtin_ia32_packssdw512
__builtin_ia32_packsswb512
__builtin_ia32_packusdw512
__builtin_ia32_packuswb512
__builtin_ia32_pmuldq512
__builtin_ia32_pmuludq512
__builtin_ia32_psadbw512
__builtin_ia32_pshufb512
__builtin_ia32_pslld512
__builtin_ia32_psllq512
__builtin_ia32_psllw512
__builtin_ia32_pslldi512
__builtin_ia32_psllqi512
__builtin_ia32_psllwi512
__builtin_ia32_psllv16si
__builtin_ia32_psllv8di
__builtin_ia32_psllv8hi
__builtin_ia32_psllv16hi
__builtin_ia32_psllv32hi
__builtin_ia32_psrad512
__builtin_ia32_psraq128
__builtin_ia32_psraq256
__builtin_ia32_psraq512
__builtin_ia32_psraw512
__builtin_ia32_psradi512
__builtin_ia32_psraqi128
__builtin_ia32_psraqi256
__builtin_ia32_psraqi512
__builtin_ia32_psrawi512
__builtin_ia32_psrav16si
__builtin_ia32_psravq128
__builtin_ia32_psravq256
__builtin_ia32_psrav8di
__builtin_ia32_psrav8hi
__builtin_ia32_psrav16hi
__builtin_ia32_psrav32hi
__builtin_ia32_psrld512
__builtin_ia32_psrlq512
__builtin_ia32_psrlw512
__builtin_ia32_psrldi512
__builtin_ia32_psrlqi512
__builtin_ia32_psrlwi512
__builtin_ia32_psrlv16si
__builtin_ia32_psrlv8di
__builtin_ia32_psrlv8hi
__builtin_ia32_psrlv16hi
__builtin_ia32_psrlv32hi
__builtin_ia32_ptestmb128
__builtin_ia32_ptestmb256
__builtin_ia32_ptestmb512
__builtin_ia32_ptestmd128
__builtin_ia32_ptestmd256
__builtin_ia32_ptestmd512
__builtin_ia32_ptestmq128
__builtin_ia32_ptestmq256
__builtin_ia32_ptestmq512
__builtin_ia32_ptestmw128
__builtin_ia32_ptestmw256
__builtin_ia32_ptestmw512
__builtin_ia32_ptestnmb128
__builtin_ia32_ptestnmb256
__builtin_ia32_ptestnmb512
__builtin_ia32_ptestnmd128
__builtin_ia32_ptestnmd256
__builtin_ia32_ptestnmd512
__builtin_ia32_ptestnmq128
__builtin_ia32_ptestnmq256
__builtin_ia32_ptestnmq512
__builtin_ia32_ptestnmw128
__builtin_ia32_ptestnmw256
__builtin_ia32_ptestnmw512
__builtin_ia32_rcp14pd128_mask
__builtin_ia32_rcp14pd256_mask
__builtin_ia32_rcp14pd512_mask
__builtin_ia32_rcp14ps128_mask
__builtin_ia32_rcp14ps256_mask
__builtin_ia32_rcp14ps512_mask
__builtin_ia32_rcp14sd_mask
__builtin_ia32_rcp14ss_mask
__builtin_ia32_rcp28pd_mask
__builtin_ia32_rcp28ps_mask
__builtin_ia32_rcp28sd_round_mask
__builtin_ia32_rcp28ss_round_mask
__builtin_ia32_rsqrt14pd128_mask
__builtin_ia32_rsqrt14pd256_mask
__builtin_ia32_rsqrt14pd512_mask
__builtin_ia32_rsqrt14ps128_mask
__builtin_ia32_rsqrt14ps256_mask
__builtin_ia32_rsqrt14ps512_mask
__builtin_ia32_rsqrt14sd_mask
__builtin_ia32_rsqrt14ss_mask
__builtin_ia32_rsqrt28pd_mask
__builtin_ia32_rsqrt28ps_mask
__builtin_ia32_rsqrt28sd_round_mask
__builtin_ia32_rsqrt28ss_round_mask
__builtin_ia32_scattersiv8df
__builtin_ia32_scattersiv16si
__builtin_ia32_scattersiv8di
__builtin_ia32_scattersiv16sf
__builtin_ia32_scatterdiv8df
__builtin_ia32_scatterdiv16si
__builtin_ia32_scatterdiv8di
__builtin_ia32_scatterdiv16sf
__builtin_ia32_scatterdiv2df
__builtin_ia32_scatterdiv2di
__builtin_ia32_scatterdiv4df
__builtin_ia32_scatterdiv4di
__builtin_ia32_scatterdiv4sf
__builtin_ia32_scatterdiv4si
__builtin_ia32_scatterdiv8sf
__builtin_ia32_scatterdiv8si
__builtin_ia32_scatterpfdpd
__builtin_ia32_scatterpfdps
__builtin_ia32_scatterpfqpd
__builtin_ia32_scatterpfqps
__builtin_ia32_scattersiv2df
__builtin_ia32_scattersiv2di
__builtin_ia32_scattersiv4df
__builtin_ia32_scattersiv4di
__builtin_ia32_scattersiv4sf
__builtin_ia32_scattersiv4si
__builtin_ia32_scattersiv8sf
__builtin_ia32_scattersiv8si
__builtin_ia32_vbroadcastsd512
__builtin_ia32_vbroadcastss512
__builtin_ia32_vcomisd
__builtin_ia32_vcomiss
__builtin_ia32_vcvtsd2si32
__builtin_ia32_vcvtsd2si64
__builtin_ia32_vcvtsd2usi32
__builtin_ia32_vcvtsd2usi64
__builtin_ia32_vcvtss2si32
__builtin_ia32_vcvtss2si64
__builtin_ia32_vcvtss2usi32
__builtin_ia32_vcvtss2usi64
__builtin_ia32_vpermilvarpd512
__builtin_ia32_vpermilvarps512
__builtin_ia32_bextr_u32
__builtin_ia32_bextr_u64
__builtin_ia32_bzhi_si
__builtin_ia32_bzhi_di
__builtin_ia32_pdep_si
__builtin_ia32_pdep_di
__builtin_ia32_pext_si
__builtin_ia32_pext_di
__builtin_ia32_clflushopt
__builtin_ia32_clzero
__builtin_ia32_readeflags_u32
__builtin_ia32_readeflags_u64
__builtin_ia32_writeeflags_u32
__builtin_ia32_writeeflags_u64
__builtin_ia32_vfmaddpd
__builtin_ia32_vfmaddpd256
__builtin_ia32_vfmaddps
__builtin_ia32_vfmaddps256
__builtin_ia32_vfmaddsd
__builtin_ia32_vfmaddss
__builtin_ia32_vfmaddsubpd
__builtin_ia32_vfmaddsubpd256
__builtin_ia32_vfmaddsubps
__builtin_ia32_vfmaddsubps256
__builtin_ia32_vfmsubpd
__builtin_ia32_vfmsubpd256
__builtin_ia32_vfmsubps
__builtin_ia32_vfmsubps256
__builtin_ia32_vfmsubsd
__builtin_ia32_vfmsubss
__builtin_ia32_vfmsubaddpd
__builtin_ia32_vfmsubaddpd256
__builtin_ia32_vfmsubaddps
__builtin_ia32_vfmsubaddps256
__builtin_ia32_vfnmaddpd
__builtin_ia32_vfnmaddpd256
__builtin_ia32_vfnmaddps
__builtin_ia32_vfnmaddps256
__builtin_ia32_vfnmaddsd
__builtin_ia32_vfnmaddss
__builtin_ia32_vfnmsubpd
__builtin_ia32_vfnmsubpd256
__builtin_ia32_vfnmsubps
__builtin_ia32_vfnmsubps256
__builtin_ia32_vfnmsubsd
__builtin_ia32_vfnmsubss
__builtin_ia32_fxrstor
__builtin_ia32_fxrstor64
__builtin_ia32_fxsave
__builtin_ia32_fxsave64
__builtin_ia32_llwpcb
__builtin_ia32_lwpins32
__builtin_ia32_lwpins64
__builtin_ia32_lwpval32
__builtin_ia32_lwpval64
__builtin_ia32_emms
__builtin_ia32_femms
__builtin_ia32_maskmovq
__builtin_ia32_movntq
__builtin_ia32_packssdw
__builtin_ia32_packsswb
__builtin_ia32_packuswb
__builtin_ia32_paddb
__builtin_ia32_paddd
__builtin_ia32_paddq
__builtin_ia32_paddw
__builtin_ia32_paddsb
__builtin_ia32_paddsw
__builtin_ia32_paddusb
__builtin_ia32_paddusw
__builtin_ia32_palignr
__builtin_ia32_pand
__builtin_ia32_pandn
__builtin_ia32_pavgb
__builtin_ia32_pavgw
__builtin_ia32_pcmpeqb
__builtin_ia32_pcmpeqd
__builtin_ia32_pcmpeqw
__builtin_ia32_pcmpgtb
__builtin_ia32_pcmpgtd
__builtin_ia32_pcmpgtw
__builtin_ia32_vec_ext_v4hi
__builtin_ia32_vec_set_v4hi
__builtin_ia32_pmaddwd
__builtin_ia32_pmaxsw
__builtin_ia32_pmaxub
__builtin_ia32_pminsw
__builtin_ia32_pminub
__builtin_ia32_pmovmskb
__builtin_ia32_pmulhw
__builtin_ia32_pmulhuw
__builtin_ia32_pmullw
__builtin_ia32_pmuludq
__builtin_ia32_por
__builtin_ia32_psadbw
__builtin_ia32_pslld
__builtin_ia32_psllq
__builtin_ia32_psllw
__builtin_ia32_pslldi
__builtin_ia32_psllqi
__builtin_ia32_psllwi
__builtin_ia32_psrad
__builtin_ia32_psraw
__builtin_ia32_psradi
__builtin_ia32_psrawi
__builtin_ia32_psrld
__builtin_ia32_psrlq
__builtin_ia32_psrlw
__builtin_ia32_psrldi
__builtin_ia32_psrlqi
__builtin_ia32_psrlwi
__builtin_ia32_psubb
__builtin_ia32_psubd
__builtin_ia32_psubq
__builtin_ia32_psubw
__builtin_ia32_psubsb
__builtin_ia32_psubsw
__builtin_ia32_psubusb
__builtin_ia32_psubusw
__builtin_ia32_punpckhbw
__builtin_ia32_punpckhdq
__builtin_ia32_punpckhwd
__builtin_ia32_punpcklbw
__builtin_ia32_punpckldq
__builtin_ia32_punpcklwd
__builtin_ia32_pxor
__builtin_ia32_monitorx
__builtin_ia32_mwaitx
__builtin_ia32_pclmulqdq128
__builtin_ia32_rdfsbase32
__builtin_ia32_rdfsbase64
__builtin_ia32_rdgsbase32
__builtin_ia32_rdgsbase64
__builtin_ia32_rdpkru
__builtin_ia32_rdpmc
__builtin_ia32_rdtsc
__builtin_ia32_rdtscp
__builtin_ia32_sha1msg1
__builtin_ia32_sha1msg2
__builtin_ia32_sha1nexte
__builtin_ia32_sha1rnds4
__builtin_ia32_sha256msg1
__builtin_ia32_sha256msg2
__builtin_ia32_sha256rnds2
__builtin_ia32_slwpcb
__builtin_ia32_cmpss
__builtin_ia32_comieq
__builtin_ia32_comige
__builtin_ia32_comigt
__builtin_ia32_comile
__builtin_ia32_comilt
__builtin_ia32_comineq
__builtin_ia32_cvtpd2pi
__builtin_ia32_cvtpi2pd
__builtin_ia32_cvtpi2ps
__builtin_ia32_cvtps2pi
__builtin_ia32_cvtss2si
__builtin_ia32_cvtss2si64
__builtin_ia32_cvttpd2pi
__builtin_ia32_cvttps2pi
__builtin_ia32_cvttss2si
__builtin_ia32_cvttss2si64
__builtin_ia32_maxps
__builtin_ia32_maxss
__builtin_ia32_minps
__builtin_ia32_minss
__builtin_ia32_movmskps
__builtin_ia32_pshufw
__builtin_ia32_rcpps
__builtin_ia32_rcpss
__builtin_ia32_rsqrtps
__builtin_ia32_rsqrtss
__builtin_ia32_sfence
__builtin_ia32_sqrtps
__builtin_ia32_sqrtss
__builtin_ia32_ucomieq
__builtin_ia32_ucomige
__builtin_ia32_ucomigt
__builtin_ia32_ucomile
__builtin_ia32_ucomilt
__builtin_ia32_ucomineq
__builtin_ia32_clflush
__builtin_ia32_cmpsd
__builtin_ia32_comisdeq
__builtin_ia32_comisdge
__builtin_ia32_comisdgt
__builtin_ia32_comisdle
__builtin_ia32_comisdlt
__builtin_ia32_comisdneq
__builtin_ia32_cvtdq2ps
__builtin_ia32_cvtpd2dq
__builtin_ia32_cvtpd2ps
__builtin_ia32_cvtps2dq
__builtin_ia32_cvtsd2si
__builtin_ia32_cvtsd2si64
__builtin_ia32_cvtsd2ss
__builtin_ia32_cvttpd2dq
__builtin_ia32_cvttps2dq
__builtin_ia32_cvttsd2si
__builtin_ia32_cvttsd2si64
__builtin_ia32_lfence
__builtin_ia32_maskmovdqu
__builtin_ia32_maxpd
__builtin_ia32_maxsd
__builtin_ia32_mfence
__builtin_ia32_minpd
__builtin_ia32_minsd
__builtin_ia32_movmskpd
__builtin_ia32_packssdw128
__builtin_ia32_packsswb128
__builtin_ia32_packuswb128
__builtin_ia32_paddsb128
__builtin_ia32_paddsw128
__builtin_ia32_paddusb128
__builtin_ia32_paddusw128
__builtin_ia32_pause
__builtin_ia32_pavgb128
__builtin_ia32_pavgw128
__builtin_ia32_pmaddwd128
__builtin_ia32_pmovmskb128
__builtin_ia32_pmulhw128
__builtin_ia32_pmulhuw128
__builtin_ia32_pmuludq128
__builtin_ia32_psadbw128
__builtin_ia32_pslld128
__builtin_ia32_psllq128
__builtin_ia32_psllw128
__builtin_ia32_pslldi128
__builtin_ia32_psllqi128
__builtin_ia32_psllwi128
__builtin_ia32_psrad128
__builtin_ia32_psraw128
__builtin_ia32_psradi128
__builtin_ia32_psrawi128
__builtin_ia32_psrld128
__builtin_ia32_psrlq128
__builtin_ia32_psrlw128
__builtin_ia32_psrldi128
__builtin_ia32_psrlqi128
__builtin_ia32_psrlwi128
__builtin_ia32_psubsb128
__builtin_ia32_psubsw128
__builtin_ia32_psubusb128
__builtin_ia32_psubusw128
__builtin_ia32_sqrtpd
__builtin_ia32_sqrtsd
__builtin_ia32_ucomisdeq
__builtin_ia32_ucomisdge
__builtin_ia32_ucomisdgt
__builtin_ia32_ucomisdle
__builtin_ia32_ucomisdlt
__builtin_ia32_ucomisdneq
__builtin_ia32_addsubpd
__builtin_ia32_addsubps
__builtin_ia32_haddpd
__builtin_ia32_haddps
__builtin_ia32_hsubpd
__builtin_ia32_hsubps
__builtin_ia32_lddqu
__builtin_ia32_monitor
__builtin_ia32_mwait
__builtin_ia32_blendvpd
__builtin_ia32_blendvps
__builtin_ia32_dppd
__builtin_ia32_dpps
__builtin_ia32_insertps128
__builtin_ia32_mpsadbw128
__builtin_ia32_packusdw128
__builtin_ia32_pblendvb128
__builtin_ia32_phminposuw128
__builtin_ia32_pmuldq128
__builtin_ia32_ptestc128
__builtin_ia32_ptestnzc128
__builtin_ia32_ptestz128
__builtin_ia32_roundpd
__builtin_ia32_roundps
__builtin_ia32_roundsd
__builtin_ia32_roundss
__builtin_ia32_crc32hi
__builtin_ia32_crc32si
__builtin_ia32_crc32qi
__builtin_ia32_crc32di
__builtin_ia32_pcmpestri128
__builtin_ia32_pcmpestria128
__builtin_ia32_pcmpestric128
__builtin_ia32_pcmpestrio128
__builtin_ia32_pcmpestris128
__builtin_ia32_pcmpestriz128
__builtin_ia32_pcmpestrm128
__builtin_ia32_pcmpistri128
__builtin_ia32_pcmpistria128
__builtin_ia32_pcmpistric128
__builtin_ia32_pcmpistrio128
__builtin_ia32_pcmpistris128
__builtin_ia32_pcmpistriz128
__builtin_ia32_pcmpistrm128
__builtin_ia32_extrq
__builtin_ia32_extrqi
__builtin_ia32_insertq
__builtin_ia32_insertqi
__builtin_ia32_pabsb
__builtin_ia32_pabsb128
__builtin_ia32_pabsd
__builtin_ia32_pabsd128
__builtin_ia32_pabsw
__builtin_ia32_pabsw128
__builtin_ia32_phaddd
__builtin_ia32_phaddd128
__builtin_ia32_phaddsw
__builtin_ia32_phaddsw128
__builtin_ia32_phaddw
__builtin_ia32_phaddw128
__builtin_ia32_phsubd
__builtin_ia32_phsubd128
__builtin_ia32_phsubsw
__builtin_ia32_phsubsw128
__builtin_ia32_phsubw
__builtin_ia32_phsubw128
__builtin_ia32_pmaddubsw
__builtin_ia32_pmaddubsw128
__builtin_ia32_pmulhrsw
__builtin_ia32_pmulhrsw128
__builtin_ia32_pshufb
__builtin_ia32_pshufb128
__builtin_ia32_psignb
__builtin_ia32_psignb128
__builtin_ia32_psignd
__builtin_ia32_psignd128
__builtin_ia32_psignw
__builtin_ia32_psignw128
__builtin_ia32_subborrow_u32
__builtin_ia32_subborrow_u64
__builtin_ia32_bextri_u32
__builtin_ia32_bextri_u64
__builtin_ia32_vcvtph2ps
__builtin_ia32_vcvtph2ps256
__builtin_ia32_vcvtps2ph
__builtin_ia32_vcvtps2ph256
__builtin_ia32_wrfsbase32
__builtin_ia32_wrfsbase64
__builtin_ia32_wrgsbase32
__builtin_ia32_wrgsbase64
__builtin_ia32_wrpkru
__builtin_ia32_xabort
__builtin_ia32_xbegin
__builtin_ia32_xend
__builtin_ia32_vfrczpd
__builtin_ia32_vfrczpd256
__builtin_ia32_vfrczps
__builtin_ia32_vfrczps256
__builtin_ia32_vfrczsd
__builtin_ia32_vfrczss
__builtin_ia32_vpcomb
__builtin_ia32_vpcomd
__builtin_ia32_vpcomq
__builtin_ia32_vpcomub
__builtin_ia32_vpcomud
__builtin_ia32_vpcomuq
__builtin_ia32_vpcomuw
__builtin_ia32_vpcomw
__builtin_ia32_vpermil2pd
__builtin_ia32_vpermil2pd256
__builtin_ia32_vpermil2ps
__builtin_ia32_vpermil2ps256
__builtin_ia32_vphaddbd
__builtin_ia32_vphaddbq
__builtin_ia32_vphaddbw
__builtin_ia32_vphadddq
__builtin_ia32_vphaddubd
__builtin_ia32_vphaddubq
__builtin_ia32_vphaddubw
__builtin_ia32_vphaddudq
__builtin_ia32_vphadduwd
__builtin_ia32_vphadduwq
__builtin_ia32_vphaddwd
__builtin_ia32_vphaddwq
__builtin_ia32_vphsubbw
__builtin_ia32_vphsubdq
__builtin_ia32_vphsubwd
__builtin_ia32_vpmacsdd
__builtin_ia32_vpmacsdqh
__builtin_ia32_vpmacsdql
__builtin_ia32_vpmacssdd
__builtin_ia32_vpmacssdqh
__builtin_ia32_vpmacssdql
__builtin_ia32_vpmacsswd
__builtin_ia32_vpmacssww
__builtin_ia32_vpmacswd
__builtin_ia32_vpmacsww
__builtin_ia32_vpmadcsswd
__builtin_ia32_vpmadcswd
__builtin_ia32_vpperm
__builtin_ia32_vprotb
__builtin_ia32_vprotbi
__builtin_ia32_vprotd
__builtin_ia32_vprotdi
__builtin_ia32_vprotq
__builtin_ia32_vprotqi
__builtin_ia32_vprotw
__builtin_ia32_vprotwi
__builtin_ia32_vpshab
__builtin_ia32_vpshad
__builtin_ia32_vpshaq
__builtin_ia32_vpshaw
__builtin_ia32_vpshlb
__builtin_ia32_vpshld
__builtin_ia32_vpshlq
__builtin_ia32_vpshlw
__builtin_ia32_xtest
__builtin_bitrev
__builtin_getid
__builtin_getps
__builtin_setps
__dmb
__dsb
__isb
_MoveFromCoprocessor
_MoveFromCoprocessor2
)*1111101
ccccccccc
Swift
__ObjC
0123456789ABCDEFSwift
__lldb_expr_
__ObjC
Swift
Swift
__ObjC
Swift
__ObjC
NONE
none
document
block_quote
item
code_block
hrule
softbreak
linebreak
inline_html
emph
strong
link
image
<unknown>
prev
parent
last_child
Invalid '%s' in node type %s at %d:%d
Error (%s:%d): Unknown HTML block type %d
/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-902.0.34/src/cmark/src/blocks.c
mailto:
String buffer overflow
realloc in cmark_strbuf_grow
AElig
Aacute
Abreve
Acirc
Agrave
Alpha
Amacr
Aogon
Aopf
ApplyFunction
Aring
Ascr
Atilde
Auml
Backslash
Barv
Barwed
Because
Bernoullis
Beta
Bopf
Breve
Bscr
Bumpeq
CHcy
COPY
Cacute
CapitalDifferentialD
Cayleys
Ccaron
Ccedil
Ccirc
Cconint
Cdot
Cedilla
CenterDot
CircleDot
CircleMinus
CirclePlus
CircleTimes
ClockwiseContourIntegral
CloseCurlyDoubleQuote
CloseCurlyQuote
Colon
Colone
Congruent
Conint
ContourIntegral
Copf
Coproduct
CounterClockwiseContourIntegral
Cross
Cscr
CupCap
DDotrahd
DJcy
DScy
DZcy
Dagger
Darr
Dashv
Dcaron
Delta
DiacriticalAcute
DiacriticalDot
DiacriticalDoubleAcute
DiacriticalGrave
DiacriticalTilde
Diamond
DifferentialD
Dopf
DotDot
DotEqual
DoubleContourIntegral
DoubleDot
DoubleDownArrow
DoubleLeftArrow
DoubleLeftRightArrow
DoubleLeftTee
DoubleLongLeftArrow
DoubleLongLeftRightArrow
DoubleLongRightArrow
DoubleRightArrow
DoubleRightTee
DoubleUpArrow
DoubleUpDownArrow
DoubleVerticalBar
DownArrow
DownArrowBar
DownArrowUpArrow
DownBreve
DownLeftRightVector
DownLeftTeeVector
DownLeftVector
DownLeftVectorBar
DownRightTeeVector
DownRightVector
DownRightVectorBar
DownTee
DownTeeArrow
Downarrow
Dscr
Dstrok
Eacute
Ecaron
Ecirc
Edot
Egrave
Emacr
EmptySmallSquare
EmptyVerySmallSquare
Eogon
Eopf
Epsilon
Equal
EqualTilde
Equilibrium
Escr
Esim
Euml
Exists
ExponentialE
FilledSmallSquare
FilledVerySmallSquare
Fopf
ForAll
Fouriertrf
Fscr
GJcy
Gamma
Gammad
Gbreve
Gcedil
Gcirc
Gdot
Gopf
GreaterEqual
GreaterEqualLess
GreaterFullEqual
GreaterGreater
GreaterLess
GreaterSlantEqual
GreaterTilde
Gscr
HARDcy
Hacek
Hcirc
HilbertSpace
Hopf
HorizontalLine
Hscr
Hstrok
HumpDownHump
HumpEqual
IEcy
IJlig
IOcy
Iacute
Icirc
Idot
Igrave
Imacr
ImaginaryI
Implies
Integral
Intersection
InvisibleComma
InvisibleTimes
Iogon
Iopf
Iota
Iscr
Itilde
Iukcy
Iuml
Jcirc
Jopf
Jscr
Jsercy
Jukcy
KHcy
KJcy
Kappa
Kcedil
Kopf
Kscr
LJcy
Lacute
Lambda
Lang
Laplacetrf
Larr
Lcaron
Lcedil
LeftAngleBracket
LeftArrow
LeftArrowBar
LeftArrowRightArrow
LeftCeiling
LeftDoubleBracket
LeftDownTeeVector
LeftDownVector
LeftDownVectorBar
LeftFloor
LeftRightArrow
LeftRightVector
LeftTee
LeftTeeArrow
LeftTeeVector
LeftTriangle
LeftTriangleBar
LeftTriangleEqual
LeftUpDownVector
LeftUpTeeVector
LeftUpVector
LeftUpVectorBar
LeftVector
LeftVectorBar
Leftarrow
Leftrightarrow
LessEqualGreater
LessFullEqual
LessGreater
LessLess
LessSlantEqual
LessTilde
Lleftarrow
Lmidot
LongLeftArrow
LongLeftRightArrow
LongRightArrow
Longleftarrow
Longleftrightarrow
Longrightarrow
Lopf
LowerLeftArrow
LowerRightArrow
Lscr
Lstrok
MediumSpace
Mellintrf
MinusPlus
Mopf
Mscr
NJcy
Nacute
Ncaron
Ncedil
NegativeMediumSpace
NegativeThickSpace
NegativeThinSpace
NegativeVeryThinSpace
NestedGreaterGreater
NestedLessLess
NewLine
NoBreak
NonBreakingSpace
Nopf
NotCongruent
NotCupCap
NotDoubleVerticalBar
NotElement
NotEqual
NotEqualTilde
NotExists
NotGreater
NotGreaterEqual
NotGreaterFullEqual
NotGreaterGreater
NotGreaterLess
NotGreaterSlantEqual
NotGreaterTilde
NotHumpDownHump
NotHumpEqual
NotLeftTriangle
NotLeftTriangleBar
NotLeftTriangleEqual
NotLess
NotLessEqual
NotLessGreater
NotLessLess
NotLessSlantEqual
NotLessTilde
NotNestedGreaterGreater
NotNestedLessLess
NotPrecedes
NotPrecedesEqual
NotPrecedesSlantEqual
NotReverseElement
NotRightTriangle
NotRightTriangleBar
NotRightTriangleEqual
NotSquareSubset
NotSquareSubsetEqual
NotSquareSuperset
NotSquareSupersetEqual
NotSubset
NotSubsetEqual
NotSucceeds
NotSucceedsEqual
NotSucceedsSlantEqual
NotSucceedsTilde
NotSuperset
NotSupersetEqual
NotTilde
NotTildeEqual
NotTildeFullEqual
NotTildeTilde
NotVerticalBar
Nscr
Ntilde
OElig
Oacute
Ocirc
Odblac
Ograve
Omacr
Omega
Omicron
Oopf
OpenCurlyDoubleQuote
OpenCurlyQuote
Oscr
Oslash
Otilde
Otimes
Ouml
OverBar
OverBrace
OverBracket
OverParenthesis
PartialD
PlusMinus
Poincareplane
Popf
Precedes
PrecedesEqual
PrecedesSlantEqual
PrecedesTilde
Prime
Product
Proportion
Proportional
Pscr
QUOT
Qopf
Qscr
RBarr
Racute
Rang
Rarr
Rarrtl
Rcaron
Rcedil
ReverseElement
ReverseEquilibrium
ReverseUpEquilibrium
RightAngleBracket
RightArrow
RightArrowBar
RightArrowLeftArrow
RightCeiling
RightDoubleBracket
RightDownTeeVector
RightDownVector
RightDownVectorBar
RightFloor
RightTee
RightTeeArrow
RightTeeVector
RightTriangle
RightTriangleBar
RightTriangleEqual
RightUpDownVector
RightUpTeeVector
RightUpVector
RightUpVectorBar
RightVector
RightVectorBar
Rightarrow
Ropf
RoundImplies
Rrightarrow
Rscr
RuleDelayed
SHCHcy
SHcy
SOFTcy
Sacute
Scaron
Scedil
Scirc
ShortDownArrow
ShortLeftArrow
ShortRightArrow
ShortUpArrow
Sigma
SmallCircle
Sopf
Sqrt
Square
SquareIntersection
SquareSubset
SquareSubsetEqual
SquareSuperset
SquareSupersetEqual
SquareUnion
Sscr
Star
Subset
SubsetEqual
Succeeds
SucceedsEqual
SucceedsSlantEqual
SucceedsTilde
SuchThat
Superset
SupersetEqual
Supset
THORN
TRADE
TSHcy
TScy
Tcaron
Tcedil
Therefore
Theta
ThickSpace
ThinSpace
Tilde
TildeEqual
TildeFullEqual
TildeTilde
Topf
TripleDot
Tscr
Tstrok
Uacute
Uarr
Uarrocir
Ubrcy
Ubreve
Ucirc
Udblac
Ugrave
Umacr
UnderBar
UnderBrace
UnderBracket
UnderParenthesis
Union
UnionPlus
Uogon
Uopf
UpArrow
UpArrowBar
UpArrowDownArrow
UpDownArrow
UpEquilibrium
UpTee
UpTeeArrow
Uparrow
Updownarrow
UpperLeftArrow
UpperRightArrow
Upsi
Upsilon
Uring
Uscr
Utilde
Uuml
VDash
Vbar
Vdash
Vdashl
Verbar
Vert
VerticalBar
VerticalLine
VerticalSeparator
VerticalTilde
VeryThinSpace
Vopf
Vscr
Vvdash
Wcirc
Wedge
Wopf
Wscr
Xopf
Xscr
YAcy
YIcy
YUcy
Yacute
Ycirc
Yopf
Yscr
Yuml
ZHcy
Zacute
Zcaron
Zdot
ZeroWidthSpace
Zeta
Zopf
Zscr
aacute
abreve
acirc
acute
aelig
agrave
alefsym
aleph
alpha
amacr
amalg
andand
andd
andslope
andv
ange
angle
angmsd
angmsdaa
angmsdab
angmsdac
angmsdad
angmsdae
angmsdaf
angmsdag
angmsdah
angrt
angrtvb
angrtvbd
angsph
angst
angzarr
aogon
aopf
apacir
apid
apos
approx
approxeq
aring
ascr
asymp
asympeq
atilde
auml
awconint
awint
bNot
backcong
backepsilon
backprime
backsim
backsimeq
barvee
barwed
barwedge
bbrk
bbrktbrk
bcong
bdquo
becaus
because
bemptyv
bepsi
bernou
beta
beth
between
bigcap
bigcirc
bigcup
bigodot
bigoplus
bigotimes
bigsqcup
bigstar
bigtriangledown
bigtriangleup
biguplus
bigvee
bigwedge
bkarow
blacklozenge
blacksquare
blacktriangle
blacktriangledown
blacktriangleleft
blacktriangleright
blank
blk12
blk14
blk34
block
bnequiv
bnot
bopf
bottom
bowtie
boxDL
boxDR
boxDl
boxDr
boxH
boxHD
boxHU
boxHd
boxHu
boxUL
boxUR
boxUl
boxUr
boxV
boxVH
boxVL
boxVR
boxVh
boxVl
boxVr
boxbox
boxdL
boxdR
boxdl
boxdr
boxh
boxhD
boxhU
boxhd
boxhu
boxminus
boxplus
boxtimes
boxuL
boxuR
boxul
boxur
boxv
boxvH
boxvL
boxvR
boxvh
boxvl
boxvr
bprime
breve
brvbar
bscr
bsemi
bsim
bsime
bsol
bsolb
bsolhsub
bull
bullet
bump
bumpE
bumpe
bumpeq
cacute
capand
capbrcup
capcap
capcup
capdot
caps
caron
ccaps
ccaron
ccedil
ccirc
ccups
ccupssm
cdot
cedil
cemptyv
cent
centerdot
chcy
check
checkmark
cirE
circ
circeq
circlearrowleft
circlearrowright
circledR
circledS
circledast
circledcirc
circleddash
cire
cirfnint
cirmid
cirscir
clubs
clubsuit
colon
colone
coloneq
comma
commat
comp
compfn
complement
complexes
cong
congdot
conint
copf
coprod
copy
copysr
crarr
cross
cscr
csub
csube
csup
csupe
ctdot
cudarrl
cudarrr
cuepr
cuesc
cularr
cularrp
cupbrcap
cupcap
cupcup
cupdot
cupor
cups
curarr
curarrm
curlyeqprec
curlyeqsucc
curlyvee
curlywedge
curren
curvearrowleft
curvearrowright
cuvee
cuwed
cwconint
cwint
cylcty
dArr
dHar
dagger
daleth
darr
dash
dashv
dbkarow
dblac
dcaron
ddagger
ddarr
ddotseq
delta
demptyv
dfisht
dharl
dharr
diam
diamond
diamondsuit
diams
digamma
disin
divide
divideontimes
divonx
djcy
dlcorn
dlcrop
dollar
dopf
doteq
doteqdot
dotminus
dotplus
dotsquare
doublebarwedge
downarrow
downdownarrows
downharpoonleft
downharpoonright
drbkarow
drcorn
drcrop
dscr
dscy
dsol
dstrok
dtdot
dtri
dtrif
duarr
duhar
dwangle
dzcy
dzigrarr
eDDot
eDot
eacute
easter
ecaron
ecir
ecirc
ecolon
edot
efDot
egrave
egsdot
elinters
elsdot
emacr
empty
emptyset
emptyv
emsp
emsp13
emsp14
ensp
eogon
eopf
epar
eparsl
eplus
epsi
epsilon
epsiv
eqcirc
eqcolon
eqsim
eqslantgtr
eqslantless
equals
equest
equiv
equivDD
eqvparsl
erDot
erarr
escr
esdot
esim
euml
euro
excl
exist
expectation
exponentiale
fallingdotseq
female
ffilig
fflig
ffllig
filig
fjlig
flat
fllig
fltns
fnof
fopf
forall
fork
forkv
fpartint
frac12
frac13
frac14
frac15
frac16
frac18
frac23
frac25
frac34
frac35
frac38
frac45
frac56
frac58
frac78
frasl
frown
fscr
gacute
gamma
gammad
gbreve
gcirc
gdot
geqq
geqslant
gescc
gesdot
gesdoto
gesdotol
gesl
gesles
gimel
gjcy
gnap
gnapprox
gneq
gneqq
gnsim
gopf
grave
gscr
gsim
gsime
gsiml
gtcc
gtcir
gtdot
gtlPar
gtquest
gtrapprox
gtrarr
gtrdot
gtreqless
gtreqqless
gtrless
gtrsim
gvertneqq
gvnE
hArr
hairsp
half
hamilt
hardcy
harr
harrcir
harrw
hbar
hcirc
hearts
heartsuit
hellip
hercon
hksearow
hkswarow
hoarr
homtht
hookleftarrow
hookrightarrow
hopf
horbar
hscr
hslash
hstrok
hybull
hyphen
iacute
icirc
iecy
iexcl
igrave
iiiint
iiint
iinfin
iiota
ijlig
imacr
imagline
imagpart
imath
imof
imped
incare
infin
infintie
inodot
intcal
integers
intercal
intlarhk
intprod
iocy
iogon
iopf
iota
iprod
iquest
iscr
isin
isinE
isindot
isins
isinsv
isinv
itilde
iukcy
iuml
jcirc
jmath
jopf
jscr
jsercy
jukcy
kappa
kappav
kcedil
kgreen
khcy
kjcy
kopf
kscr
lAarr
lArr
lAtail
lBarr
lHar
lacute
laemptyv
lagran
lambda
lang
langd
langle
laquo
larr
larrb
larrbfs
larrfs
larrhk
larrlp
larrpl
larrsim
larrtl
latail
late
lates
lbarr
lbbrk
lbrace
lbrack
lbrke
lbrksld
lbrkslu
lcaron
lcedil
lceil
lcub
ldca
ldquo
ldquor
ldrdhar
ldrushar
ldsh
leftarrow
leftarrowtail
leftharpoondown
leftharpoonup
leftleftarrows
leftrightarrow
leftrightarrows
leftrightharpoons
leftrightsquigarrow
leftthreetimes
leqq
leqslant
lescc
lesdot
lesdoto
lesdotor
lesg
lesges
lessapprox
lessdot
lesseqgtr
lesseqqgtr
lessgtr
lesssim
lfisht
lfloor
lhard
lharu
lharul
lhblk
ljcy
llarr
llcorner
llhard
lltri
lmidot
lmoust
lmoustache
lnap
lnapprox
lneq
lneqq
lnsim
loang
loarr
lobrk
longleftarrow
longleftrightarrow
longmapsto
longrightarrow
looparrowleft
looparrowright
lopar
lopf
loplus
lotimes
lowast
lowbar
lozenge
lozf
lpar
lparlt
lrarr
lrcorner
lrhar
lrhard
lrtri
lsaquo
lscr
lsim
lsime
lsimg
lsqb
lsquo
lsquor
lstrok
ltcc
ltcir
ltdot
lthree
ltimes
ltlarr
ltquest
ltrPar
ltri
ltrie
ltrif
lurdshar
luruhar
lvertneqq
lvnE
mDDot
macr
male
malt
maltese
mapsto
mapstodown
mapstoleft
mapstoup
marker
mcomma
mdash
measuredangle
micro
midast
midcir
middot
minus
minusb
minusd
minusdu
mlcp
mldr
mnplus
models
mopf
mscr
mstpos
multimap
mumap
nGtv
nLeftarrow
nLeftrightarrow
nLtv
nRightarrow
nVDash
nVdash
nabla
nacute
nang
napE
napid
napos
napprox
natur
natural
naturals
nbsp
nbump
nbumpe
ncap
ncaron
ncedil
ncong
ncongdot
ncup
ndash
neArr
nearhk
nearr
nearrow
nedot
nequiv
nesear
nesim
nexist
nexists
ngeq
ngeqq
ngeqslant
nges
ngsim
ngtr
nhArr
nharr
nhpar
nisd
njcy
nlArr
nlarr
nldr
nleftarrow
nleftrightarrow
nleq
nleqq
nleqslant
nles
nless
nlsim
nltri
nltrie
nmid
nopf
notin
notinE
notindot
notinva
notinvb
notinvc
notni
notniva
notnivb
notnivc
npar
nparallel
nparsl
npart
npolint
nprcue
npre
nprec
npreceq
nrArr
nrarr
nrarrc
nrarrw
nrightarrow
nrtri
nrtrie
nsccue
nsce
nscr
nshortmid
nshortparallel
nsim
nsime
nsimeq
nsmid
nspar
nsqsube
nsqsupe
nsub
nsubE
nsube
nsubset
nsubseteq
nsubseteqq
nsucc
nsucceq
nsup
nsupE
nsupe
nsupset
nsupseteq
nsupseteqq
ntgl
ntilde
ntlg
ntriangleleft
ntrianglelefteq
ntriangleright
ntrianglerighteq
numero
numsp
nvDash
nvHarr
nvap
nvdash
nvge
nvgt
nvinfin
nvlArr
nvle
nvlt
nvltrie
nvrArr
nvrtrie
nvsim
nwArr
nwarhk
nwarr
nwarrow
nwnear
oacute
oast
ocir
ocirc
odash
odblac
odiv
odot
odsold
oelig
ofcir
ogon
ograve
ohbar
oint
olarr
olcir
olcross
oline
omacr
omega
omicron
omid
ominus
oopf
opar
operp
oplus
orarr
order
orderof
ordf
ordm
origof
oror
orslope
oscr
oslash
osol
otilde
otimes
otimesas
ouml
ovbar
para
parsim
parsl
part
percnt
permil
perp
pertenk
phiv
phmmat
phone
pitchfork
planck
planckh
plankv
plus
plusacir
plusb
pluscir
plusdo
plusdu
pluse
plusmn
plussim
plustwo
pointint
popf
pound
prap
prcue
prec
precapprox
preccurlyeq
preceq
precnapprox
precneqq
precnsim
precsim
prime
primes
prnE
prnap
prnsim
prod
profalar
profline
profsurf
prop
propto
prsim
prurel
pscr
puncsp
qint
qopf
qprime
qscr
quaternions
quatint
quest
questeq
rAarr
rArr
rAtail
rBarr
rHar
race
racute
radic
raemptyv
rang
rangd
rangle
raquo
rarr
rarrap
rarrb
rarrbfs
rarrc
rarrfs
rarrhk
rarrlp
rarrpl
rarrsim
rarrtl
rarrw
ratail
ratio
rationals
rbarr
rbbrk
rbrace
rbrack
rbrke
rbrksld
rbrkslu
rcaron
rcedil
rceil
rcub
rdca
rdldhar
rdquo
rdquor
rdsh
real
realine
realpart
reals
rect
rfisht
rfloor
rhard
rharu
rharul
rhov
rightarrow
rightarrowtail
rightharpoondown
rightharpoonup
rightleftarrows
rightleftharpoons
rightrightarrows
rightsquigarrow
rightthreetimes
ring
risingdotseq
rlarr
rlhar
rmoust
rmoustache
rnmid
roang
roarr
robrk
ropar
ropf
roplus
rotimes
rpar
rpargt
rppolint
rrarr
rsaquo
rscr
rsqb
rsquo
rsquor
rthree
rtimes
rtri
rtrie
rtrif
rtriltri
ruluhar
sacute
sbquo
scap
scaron
sccue
scedil
scirc
scnE
scnap
scnsim
scpolint
scsim
sdot
sdotb
sdote
seArr
searhk
searr
searrow
sect
semi
seswar
setminus
setmn
sext
sfrown
sharp
shchcy
shcy
shortmid
shortparallel
sigma
sigmaf
sigmav
simdot
sime
simeq
simg
simgE
siml
simlE
simne
simplus
simrarr
slarr
smallsetminus
smashp
smeparsl
smid
smile
smte
smtes
softcy
solb
solbar
sopf
spades
spadesuit
spar
sqcap
sqcaps
sqcup
sqcups
sqsub
sqsube
sqsubset
sqsubseteq
sqsup
sqsupe
sqsupset
sqsupseteq
square
squarf
squf
srarr
sscr
ssetmn
ssmile
sstarf
starf
straightepsilon
straightphi
strns
subE
subdot
sube
subedot
submult
subnE
subne
subplus
subrarr
subset
subseteq
subseteqq
subsetneq
subsetneqq
subsim
subsub
subsup
succ
succapprox
succcurlyeq
succeq
succnapprox
succneqq
succnsim
succsim
sung
sup1
sup2
sup3
supE
supdot
supdsub
supe
supedot
suphsol
suphsub
suplarr
supmult
supnE
supne
supplus
supset
supseteq
supseteqq
supsetneq
supsetneqq
supsim
supsub
supsup
swArr
swarhk
swarr
swarrow
swnwar
szlig
target
tbrk
tcaron
tcedil
tdot
telrec
there4
therefore
theta
thetasym
thetav
thickapprox
thicksim
thinsp
thkap
thksim
thorn
tilde
times
timesb
timesbar
timesd
tint
toea
topbot
topcir
topf
topfork
tosa
tprime
trade
triangle
triangledown
triangleleft
trianglelefteq
triangleq
triangleright
trianglerighteq
tridot
trie
triminus
triplus
trisb
tritime
trpezium
tscr
tscy
tshcy
tstrok
twixt
twoheadleftarrow
twoheadrightarrow
uArr
uHar
uacute
uarr
ubrcy
ubreve
ucirc
udarr
udblac
udhar
ufisht
ugrave
uharl
uharr
uhblk
ulcorn
ulcorner
ulcrop
ultri
umacr
uogon
uopf
uparrow
updownarrow
upharpoonleft
upharpoonright
uplus
upsi
upsih
upsilon
upuparrows
urcorn
urcorner
urcrop
uring
urtri
uscr
utdot
utilde
utri
utrif
uuarr
uuml
uwangle
vArr
vBar
vBarv
vDash
vangrt
varepsilon
varkappa
varnothing
varphi
varpi
varpropto
varr
varrho
varsigma
varsubsetneq
varsubsetneqq
varsupsetneq
varsupsetneqq
vartheta
vartriangleleft
vartriangleright
vdash
veebar
veeeq
vellip
verbar
vert
vltri
vnsub
vnsup
vopf
vprop
vrtri
vsubnE
vsubne
vsupnE
vsupne
vzigzag
wcirc
wedbar
wedge
wedgeq
weierp
wopf
wreath
wscr
xcap
xcirc
xcup
xdtri
xhArr
xharr
xlArr
xlarr
xmap
xnis
xodot
xopf
xoplus
xotime
xrArr
xrarr
xscr
xsqcup
xuplus
xutri
xvee
xwedge
yacute
yacy
ycirc
yicy
yopf
yscr
yucy
yuml
zacute
zcaron
zdot
zeetrf
zeta
zhcy
zigrarr
zopf
zscr
zwnj
UIDMap
internal_msg
response
sourcekit-serv
bumped file descriptor limit to 
setrlimit failed: 
getrlimit failed: 
semantic_editor_delay
tracing_enabled
v16@?0^v8
ping
sendReply
tried to respond to an already handled request
~XPCResponder
failed to respond to request
Internal error: no response was provided for the request
SOURCEKITD SERVER FATAL ERROR: %s
PrimaryFile
CompilerArgs
.nan
.NaN
.NAN
.inf
.Inf
.INF
^(\.[0-9]+|[0-9]+(\.[0-9]*)?)([eE][-+]?[0-9]+)?$
did not find primary SourceFile
sourcekit.swift.ConsumeAST
sourcekit.swift.ASTCache
sourcekit.swift.ASTBuilding
-Xfrontend
-embed-bitcode
-enable-bridging-pch
-disable-bridging-pch
error when parsing the compiler arguments
' is not part of the input files
getASTUnitImpl
AST build (
rebuild
first
createASTUnit
failed getting file contents for 
Compilation setup failed!!!
compilation setup failed
getBufferStamp
source.lang.swift.literal.array
source.lang.swift.literal.boolean
source.lang.swift.literal.color
source.lang.swift.literal.image
source.lang.swift.literal.dictionary
source.lang.swift.literal.integer
source.lang.swift.literal.nil
source.lang.swift.literal.string
source.lang.swift.literal.tuple
source.lang.swift.keyword
source.lang.swift.keyword.let
source.lang.swift.keyword.var
source.lang.swift.keyword.if
source.lang.swift.keyword.for
source.lang.swift.keyword.while
source.lang.swift.keyword.func
InputBufferSize
OriginalOffset
source.lang.swift.pattern
handleResult
Code completion result with empty description was ignored: 
source.codecompletion.context.none
source.codecompletion.context.exprspecific
source.codecompletion.context.local
source.codecompletion.context.thisclass
source.codecompletion.context.superclass
source.codecompletion.context.otherclass
source.codecompletion.context.thismodule
source.codecompletion.context.othermodule
<#T##
source.lang.swift.keyword.associatedtype
source.lang.swift.keyword.class
source.lang.swift.keyword.deinit
source.lang.swift.keyword.enum
source.lang.swift.keyword.extension
source.lang.swift.keyword.import
source.lang.swift.keyword.init
source.lang.swift.keyword.inout
source.lang.swift.keyword.operator
source.lang.swift.keyword.precedencegroup
source.lang.swift.keyword.protocol
source.lang.swift.keyword.struct
source.lang.swift.keyword.subscript
source.lang.swift.keyword.typealias
source.lang.swift.keyword.fileprivate
source.lang.swift.keyword.internal
source.lang.swift.keyword.private
source.lang.swift.keyword.public
source.lang.swift.keyword.static
source.lang.swift.keyword.defer
source.lang.swift.keyword.guard
source.lang.swift.keyword.do
source.lang.swift.keyword.repeat
source.lang.swift.keyword.else
source.lang.swift.keyword.in
source.lang.swift.keyword.return
source.lang.swift.keyword.break
source.lang.swift.keyword.continue
source.lang.swift.keyword.fallthrough
source.lang.swift.keyword.switch
source.lang.swift.keyword.case
source.lang.swift.keyword.default
source.lang.swift.keyword.where
source.lang.swift.keyword.catch
source.lang.swift.keyword.as
source.lang.swift.keyword.Any
source.lang.swift.keyword.false
source.lang.swift.keyword.is
source.lang.swift.keyword.nil
source.lang.swift.keyword.rethrows
source.lang.swift.keyword.super
source.lang.swift.keyword.self
source.lang.swift.keyword.Self
source.lang.swift.keyword.throw
source.lang.swift.keyword.true
source.lang.swift.keyword.try
source.lang.swift.keyword.throws
source.lang.swift.keyword._
-code-complete-inits-in-postfix-expr
-code-complete-call-pattern-heuristics
codecomplete.open: code completion session for '
 already exists
source.lang.swift.codecomplete.group
key.codecomplete.sort.byname
key.codecomplete.sort.useimportdepth
key.codecomplete.group.overloads
key.codecomplete.group.stems
key.codecomplete.filtertext
key.codecomplete.requestlimit
key.codecomplete.requeststart
key.codecomplete.hideunderscores
key.codecomplete.hidelowpriority
key.codecomplete.hidebyname
key.codecomplete.includeexactmatch
key.codecomplete.addinnerresults
key.codecomplete.addinneroperators
key.codecomplete.addinitstotoplevel
key.codecomplete.callpatternheuristics
key.codecomplete.fuzzymatching
key.codecomplete.showtopnonliteralresults
key.codecomplete.sort.contextweight
key.codecomplete.sort.fuzzyweight
key.codecomplete.sort.popularitybonus
codecomplete.close: no code completion session for '
codecomplete.update: no code completion session for '
Compiler invocation init failed
Compiler invocation set up failed
Failed to determine SourceFile for input buffer
findLocalRenameRanges
Error occurred
<Declaration>extension 
source.lang.swift.syntaxtype.argument
source.lang.swift.syntaxtype.parameter
source.lang.swift.attribute.availability
source.availability.platform.ios
source.availability.platform.osx
source.availability.platform.tvos
source.availability.platform.watchos
source.availability.platform.ios_app_extension
source.availability.platform.osx_app_extension
source.availability.platform.tvos_app_extension
source.availability.platform.watchos_app_extension
Compiler invocation set up fails.
Cannot load stdlib.
Cannot find the module.
handleDiagnostic
unhandled optimization remark
got swift diagnostic not pointing at input file, buffer name: 
did not find document snapshot when handling the AST
Primary SourceFile is expected to have a BufferID
updateSemanticInfo
posted document update notification for: 
sema annotations failed: 
source.lang.swift.accessibility.open
source.lang.swift.accessibility.public
source.lang.swift.accessibility.internal
source.lang.swift.accessibility.fileprivate
source.lang.swift.accessibility.private
source.diagnostic.stage.swift.sema
source.diagnostic.stage.swift.parse
key.editor.format.usetabs
key.editor.format.indentwidth
key.editor.format.tabwidth
Length
IndentWidth
UseTabs
Invalid Length parameter
editorOpen
Document already exists in editorOpen(..): 
No associated Editor Document
Conversion failed.
Error during syntactic parsing
<module-interface>
sourcekit.swift.InterfaceGenContext
Error during invocation setup
Could not load the stdlib module
Module name is empty
Could not load module: 
Implicit ObjC header path is empty
Header name is empty
Could not load the main module
SourceName
HeaderName
-Fsystem
-module-cache-path
-Xcc
-import-underlying-module
-import-objc-header
source.lang.swift.import.module.clang
source.lang.swift.import.module.swift
.swiftmodule
-disable-typo-correction
Clang module files are not supported
ModuleName
failed to load module
no input filenames specified
no primary source file found
source.lang.swift.decl.function.free
source.lang.swift.ref.function.free
source.lang.swift.decl.function.method.instance
source.lang.swift.ref.function.method.instance
source.lang.swift.decl.function.method.static
source.lang.swift.ref.function.method.static
source.lang.swift.decl.function.method.class
source.lang.swift.ref.function.method.class
source.lang.swift.decl.function.accessor.getter
source.lang.swift.ref.function.accessor.getter
source.lang.swift.decl.function.accessor.setter
source.lang.swift.ref.function.accessor.setter
source.lang.swift.decl.function.accessor.willset
source.lang.swift.ref.function.accessor.willset
source.lang.swift.decl.function.accessor.didset
source.lang.swift.ref.function.accessor.didset
source.lang.swift.decl.function.accessor.address
source.lang.swift.ref.function.accessor.address
source.lang.swift.decl.function.accessor.mutableaddress
source.lang.swift.ref.function.accessor.mutableaddress
source.lang.swift.decl.function.constructor
source.lang.swift.ref.function.constructor
source.lang.swift.decl.function.destructor
source.lang.swift.ref.function.destructor
source.lang.swift.decl.function.operator.prefix
source.lang.swift.decl.function.operator.postfix
source.lang.swift.decl.function.operator.infix
source.lang.swift.ref.function.operator.prefix
source.lang.swift.ref.function.operator.postfix
source.lang.swift.ref.function.operator.infix
source.lang.swift.decl.precedencegroup
source.lang.swift.ref.precedencegroup
source.lang.swift.decl.function.subscript
source.lang.swift.ref.function.subscript
source.lang.swift.decl.var.global
source.lang.swift.ref.var.global
source.lang.swift.decl.var.instance
source.lang.swift.ref.var.instance
source.lang.swift.decl.var.static
source.lang.swift.ref.var.static
source.lang.swift.decl.var.class
source.lang.swift.ref.var.class
source.lang.swift.decl.var.local
source.lang.swift.ref.var.local
source.lang.swift.decl.var.parameter
source.lang.swift.decl.module
source.lang.swift.decl.class
source.lang.swift.ref.class
source.lang.swift.decl.struct
source.lang.swift.ref.struct
source.lang.swift.decl.enum
source.lang.swift.ref.enum
source.lang.swift.decl.enumcase
source.lang.swift.decl.enumelement
source.lang.swift.ref.enumelement
source.lang.swift.decl.protocol
source.lang.swift.ref.protocol
source.lang.swift.decl.extension
source.lang.swift.decl.extension.struct
source.lang.swift.decl.extension.class
source.lang.swift.decl.extension.enum
source.lang.swift.decl.extension.protocol
source.lang.swift.decl.associatedtype
source.lang.swift.ref.associatedtype
source.lang.swift.decl.typealias
source.lang.swift.ref.typealias
source.lang.swift.decl.generic_type_param
source.lang.swift.ref.generic_type_param
source.lang.swift.ref.module
source.lang.swift.stmt.foreach
source.lang.swift.stmt.for
source.lang.swift.stmt.while
source.lang.swift.stmt.repeatwhile
source.lang.swift.stmt.if
source.lang.swift.stmt.guard
source.lang.swift.stmt.switch
source.lang.swift.stmt.case
source.lang.swift.stmt.brace
source.lang.swift.expr.call
source.lang.swift.expr.argument
source.lang.swift.expr.array
source.lang.swift.expr.dictionary
source.lang.swift.expr.object_literal
source.lang.swift.expr.tuple
source.lang.swift.structure.elem.id
source.lang.swift.structure.elem.expr
source.lang.swift.structure.elem.init_expr
source.lang.swift.structure.elem.condition_expr
source.lang.swift.structure.elem.pattern
source.lang.swift.structure.elem.typeref
source.lang.swift.range.singlestatement
source.lang.swift.range.singleexpression
source.lang.swift.range.singledeclaration
source.lang.swift.range.multistatement
source.lang.swift.range.multitypememberdeclaration
source.lang.swift.range.invalid
source.lang.swift.syntaxtype.keyword
source.lang.swift.syntaxtype.identifier
source.lang.swift.syntaxtype.typeidentifier
source.lang.swift.syntaxtype.buildconfig.keyword
source.lang.swift.syntaxtype.buildconfig.id
source.lang.swift.syntaxtype.attribute.id
source.lang.swift.syntaxtype.attribute.builtin
source.lang.swift.syntaxtype.number
source.lang.swift.syntaxtype.string
source.lang.swift.syntaxtype.string_interpolation_anchor
source.lang.swift.syntaxtype.comment
source.lang.swift.syntaxtype.doccomment
source.lang.swift.syntaxtype.doccomment.field
source.lang.swift.syntaxtype.comment.mark
source.lang.swift.syntaxtype.comment.url
source.lang.swift.syntaxtype.placeholder
source.lang.swift.syntaxtype.objectliteral
source.edit.kind.active
source.edit.kind.inactive
source.edit.kind.selector
source.edit.kind.string
source.edit.kind.comment
source.edit.kind.mismatch
source.edit.kind.unknown
source.refactoring.range.kind.basename
source.refactoring.range.kind.keyword-basename
source.refactoring.range.kind.parameter-and-whitespace
source.refactoring.range.kind.noncollapsible-parameter
source.refactoring.range.kind.decl-argument-label
source.refactoring.range.kind.call-argument-label
source.refactoring.range.kind.call-argument-colon
source.refactoring.range.kind.call-argument-combined
source.refactoring.range.kind.selector-argument-label
source.refactoring.kind.rename.global
source.refactoring.kind.rename.global.find-ranges
source.refactoring.kind.rename.local.find-ranges
::SYNTHESIZED::
sourcekit.swift.EditorDocFileMap
source.statistic.num-ast-builds
# of ASTs built or rebuilt
source.statistic.num-asts-in-memory
# of ASTs currently in memory
source.statistic.max-asts-in-memory
maximum # of ASTs ever in memory at once
source.statistic.num-ast-cache-hits
# of ASTs found in the cache without rebuilding
source.statistic.num-ast-snaphost-uses
# of ASTs used with snaphots without rebuilding
source.statistic.num-open-documents
# of editor documents currently open
source.statistic.max-open-documents
maximum # of editor documents ever open at once
source.decl.attribute.ibaction
source.decl.attribute.iboutlet
source.decl.attribute.ibdesignable
source.decl.attribute.ibinspectable
source.decl.attribute.gkinspectable
source.decl.attribute.objc
source.decl.attribute.objc.name
source.decl.attribute.private
source.decl.attribute.fileprivate
source.decl.attribute.internal
source.decl.attribute.public
source.decl.attribute.open
source.decl.attribute.setter_access.private
source.decl.attribute.setter_access.fileprivate
source.decl.attribute.setter_access.internal
source.decl.attribute.setter_access.public
source.decl.attribute.setter_access.open
source.decl.attribute._silgen_name
source.decl.attribute.available
source.decl.attribute.final
source.decl.attribute.required
source.decl.attribute.optional
source.decl.attribute.noreturn
source.decl.attribute._exported
source.decl.attribute.NSCopying
source.decl.attribute.NSManaged
source.decl.attribute.lazy
source.decl.attribute.LLDBDebuggerFunction
source.decl.attribute.UIApplicationMain
source.decl.attribute.unsafe_no_objc_tagged_pointer
source.decl.attribute.inline
source.decl.attribute._semantics
source.decl.attribute.dynamic
source.decl.attribute.infix
source.decl.attribute.prefix
source.decl.attribute.postfix
source.decl.attribute._transparent
source.decl.attribute.requires_stored_property_inits
source.decl.attribute.nonobjc
source.decl.attribute._fixed_layout
source.decl.attribute._inlineable
source.decl.attribute._specialize
source.decl.attribute.objcMembers
source.decl.attribute.__consuming
source.decl.attribute.mutating
source.decl.attribute.nonmutating
source.decl.attribute.convenience
source.decl.attribute.override
source.decl.attribute.sil_stored
source.decl.attribute.weak
source.decl.attribute.effects
source.decl.attribute.__objc_bridged
source.decl.attribute.NSApplicationMain
source.decl.attribute.objc_non_lazy_realization
source.decl.attribute.__synthesized_protocol
source.decl.attribute.testable
source.decl.attribute._alignment
source.decl.attribute.rethrows
source.decl.attribute._swift_native_objc_runtime_base
source.decl.attribute.indirect
source.decl.attribute.warn_unqualified_access
source.decl.attribute._cdecl
source.decl.attribute._versioned
source.decl.attribute.discardableResult
source.decl.attribute._implements
source.decl.attribute._objcRuntimeName
source.decl.attribute._staticInitializeObjCMetadata
source.decl.attribute._restatedObjCConformance
source.decl.attribute._implicitly_unwrapped_optional
source.decl.attribute._optimize
decl.var.parameter.argument_label
decl.var.parameter.name
decl.generic_type_param.name
syntaxtype.keyword
syntaxtype.attribute.name
tuple.element.argument_label
decl.generic_type_param
decl.generic_type_requirement
decl.var.parameter
decl.function.returntype
syntaxtype.attribute.builtin
tuple.element
syntaxtype.number
syntaxtype.string
 usr="
decl.var.parameter.type
decl.generic_type_param.constraint
tuple.element.type
decl.var.type
decl.name
DocumentName
ModuleOrHeaderName
getCursorInfo
failed to create an ASTInvocation: 
<RelatedName usr="
</RelatedName>
<Type usr="
</Type>
failed
cursor info failed: 
canUseASTWithSnapshots
will resolve using up-to-date AST
will try existing AST
getRangeInfo
range info failed: 
getNameInfo
name info failed: 
getCursorInfoFromUSR
info from usr for generated interface not implemented yet
handlePrimaryAST
lookup for C/C++/ObjC USRs not implemented
findRelatedIdentifiersInFile
related idents failed: 
semanticRefactoring
The refactoring is canceled.
source.notification.editor.documentupdate
handleRequest-before
# of requests (total)
# of semantic requests
missing 'key.request' with UID value
'key.names' not an array of strings
missing 'key.names'
'key.compilerargs' not an array of strings
missing 'key.name'
missing 'key.modulename'
missing 'key.filepath'
missing 'key.sourcefile'
missing 'key.usr'
missing 'key.sourcetext'
invalid key.renamelocations
missing 'key.offset'
missing 'key.results'
missing 'key.sourcefile' or 'key.sourcetext'
sourcekit.request.semantic
semantic editor is disabled
either 'key.offset' or 'key.usr' is required
'key.offset' or 'key.length' is required
'key.actionuid' is required
'key.actionuid' isn't recognized
'key.line' or 'key.column' are required
'key.line' is required
'key.column' is required
'key.offset' is required
'key.namekind' is required
'key.namekind' is unrecognizable
cannot specify 'key.selectorpieces' and 'key.argnames' at the same time
unknown request: 
source.request.relatedidents
source.lang.name.kind.objc
source.lang.name.kind.swift
source.request.name.translation
source.request.find-local-rename-ranges
source.refactoring.kind.convert.string-concatenation.interpolation
source.refactoring.kind.move.members.to.extension
source.refactoring.kind.extract.expr.repeated
source.refactoring.kind.extract.function
source.refactoring.kind.extract.expr
source.refactoring.kind.trailingclosure
source.refactoring.kind.convert.do.catch
source.refactoring.kind.collapse.nested.if.expr
source.refactoring.kind.simplify.long.number.literal
source.refactoring.kind.localize.string
source.refactoring.kind.expand.switch.cases
source.refactoring.kind.expand.default
source.refactoring.kind.fillstub
source.refactoring.kind.rename.local
source.request.semantic.refactoring
source.request.rangeinfo
source.request.cursorinfo
source.request.indexsource
filter rule missing required key 'key.hide'
filter rule missing required key 'key.names'
source.codecompletion.description
source.codecompletion.identifier
source.codecompletion.custom
source.codecompletion.literal
source.codecompletion.keyword
source.codecompletion.module
source.codecompletion.everything
source.request.codecomplete.open
source.request.codecomplete
SOURCEKIT_DELAY_SEMA_EDITOR
delaying semantic editor for 
 seconds
source.request.codecomplete.update
source.request.statistics
missing 'key.kind'
missing 'key.context'
invalid value for 'key.context'
source.lang.swift.foreach.sequence
source.lang.swift.type
source.lang.swift.stmt
source.lang.swift.expr
source.request.codecomplete.setcustom
source.request.codecomplete.setpopularapi
source.request.codecomplete.cache.ondisk
source.request.codecomplete.close
source.request.find-syntactic-rename-ranges
missing key.is_function_like
missing key.is_non_protocol_type
missing key.name
missing key.newname
invalid key.locations
missing key.line
missing key.column
missing key.nametype
invalid value for 'key.nametype'
source.syntacticrename.unknown
source.syntacticrename.call
source.syntacticrename.reference
source.syntacticrename.definition
source.request.syntacticrename
source.request.module.groups
source.request.editor.find_interface_doc
source.request.editor.find_usr
source.request.convert.markup.xml
source.request.editor.extract.comment
source.request.editor.open.interface.swifttype
source.request.editor.open.interface.swiftsource
source.request.editor.open.interface.header
source.request.editor.open.interface
source.request.editor.expand_placeholder
source.request.editor.formattext
source.request.editor.replacetext
source.request.editor.close
source.diagnostic.severity.note
source.diagnostic.severity.error
source.diagnostic.severity.warning
source.request.editor.open
error opening input file '
source.request.docinfo
source.request.buildsettings.register
source.request.mangle_simple_class
source.request.demangle
source.request.crash_exit
source.request.protocol_version
source.statistic.num-semantic-requests
source.statistic.num-requests
handleRequest-after
key.version_major
key.version_minor
key.results
key.request
key.notification
key.kind
key.accessibility
key.setter_accessibility
key.keyword
key.name
key.usr
key.original_usr
key.default_implementation_of
key.interested_usr
key.generic_params
key.generic_requirements
key.doc.full_as_xml
key.line
key.column
key.receiver_usr
key.is_dynamic
key.filepath
key.module_interface_name
key.hash
key.compilerargs
key.severity
key.offset
key.length
key.sourcefile
key.sourcetext
key.enablesyntaxmap
key.enablesubstructure
key.description
key.typename
key.runtime_name
key.selector_name
key.annotated_decl
key.fully_annotated_decl
key.doc.brief
key.context
key.moduleimportdepth
key.num_bytes_to_erase
key.not_recommended
key.annotations
key.diagnostic_stage
key.syntaxmap
key.is_system
key.related
key.inherits
key.conforms
key.extends
key.dependencies
key.entities
key.nameoffset
key.namelength
key.bodyoffset
key.bodylength
key.throwoffset
key.throwlength
key.docoffset
key.doclength
key.is_local
key.inheritedtypes
key.attributes
key.attribute
key.elements
key.substructure
key.ranges
key.fixits
key.diagnostics
key.editor.format.options
key.codecomplete.options
key.codecomplete.filterrules
key.nextrequeststart
key.popular
key.unpopular
key.hide
key.platform
key.is_deprecated
key.is_unavailable
key.is_optional
key.message
key.introduced
key.deprecated
key.obsoleted
key.removecache
key.typeinterface
key.typeusr
key.containertypeusr
key.modulegroups
key.basename
key.argnames
key.selectorpieces
key.namekind
key.localization_key
key.is_zero_arg_selector
key.swift_version
key.value
key.enablediagnostics
key.groupname
key.actionname
key.synthesizedextensions
key.usingswiftargs
key.names
key.uids
key.syntactic_only
key.actionable
key.parent_loc
key.is_test_candidate
key.overrides
key.associated_usrs
key.modulename
key.related_decls
key.simplified
key.rangecontent
key.cancel_on_subsequent_request
key.renamelocations
key.locations
key.nametype
key.newname
key.categorizededits
key.categorizedranges
key.rangesworthnote
key.edits
key.endline
key.endcolumn
key.argindex
key.text
key.category
key.is_function_like
key.is_non_protocol_type
key.refactor_actions
key.retrieve_refactor_actions
key.actionuid
key.actionunavailablereason
error response (
Connection Interrupted
Request Invalid
Request Failed
Request Cancelled
Trying to index an empty array.
SOURCEKIT_LOGGING
B24@?0r*8^v16
sourcekitd error did not resolve to a known kind
invalid sourcekitd error object
B24@?0Q8^v16
sourcekitd object did not resolve to a known type
INFINITY
-inf
-INFINITY
-nan
-NaN
0.0E+0
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
Tag_CPU_raw_name
Tag_CPU_name
Tag_CPU_arch
Tag_CPU_arch_profile
Tag_ARM_ISA_use
Tag_THUMB_ISA_use
Tag_WMMX_arch
Tag_Advanced_SIMD_arch
Tag_PCS_config
Tag_ABI_PCS_R9_use
Tag_ABI_PCS_RW_data
Tag_ABI_PCS_RO_data
Tag_ABI_PCS_GOT_use
Tag_ABI_PCS_wchar_t
Tag_ABI_FP_rounding
Tag_ABI_FP_denormal
Tag_ABI_FP_exceptions
Tag_ABI_FP_user_exceptions
Tag_ABI_FP_number_model
Tag_ABI_align_needed
Tag_ABI_align_preserved
Tag_ABI_enum_size
Tag_ABI_HardFP_use
Tag_ABI_VFP_args
Tag_ABI_WMMX_args
Tag_ABI_optimization_goals
Tag_ABI_FP_optimization_goals
Tag_compatibility
Tag_CPU_unaligned_access
Tag_FP_HP_extension
Tag_ABI_FP_16bit_format
Tag_MPextension_use
Tag_DIV_use
Tag_DSP_extension
Tag_nodefaults
Tag_also_compatible_with
Tag_T2EE_use
Tag_conformance
Tag_Virtualization_use
Tag_VFP_arch
Tag_VFP_HP_extension
Tag_ABI_align8_needed
Tag_ABI_align8_preserved
Unspecified Tags UNDEFINED
Attribute
TagName
Description
Not Permitted
TrustZone
Virtualization Extensions
TrustZone + Virtualization Extensions
Permitted
If Available
IEEE-754
VFPv3
v6-style
No Specific Requirements
AEABI Conformant
AEABI Non-Conformant
Speed
Aggressive Speed
Aggressive Size
Accuracy
Best Accuracy
Debugging
Best Debugging
AAPCS
iWMMX
Custom
AAPCS VFP
Tag_FP_arch
Single-Precision
Reserved
Tag_FP_arch (deprecated)
External Int32
8-byte stack alignment, 
-byte data alignment
Not Required
8-byte data alignment
8-byte data and code alignment
8-byte alignment, 
-byte extended alignment
8-byte alignment
4-byte alignment
Finite Only
RTABI
Unsupported
Sign Only
Runtime
2-byte
4-byte
Direct
GOT-Indirect
Absolute
PC-relative
SB-relative
Static Base
Bare Platform
Linux Application
Linux DSO
Palm OS 2004
Reserved (Palm OS)
Symbian OS 2004
Reserved (Symbian OS)
NEONv1
NEONv2+FMA
ARMv8-a NEON
ARMv8.1-a NEON
WMMXv1
WMMXv2
VFPv1
VFPv2
VFPv3-D16
VFPv4
VFPv4-D16
ARMv8-a FP
ARMv8-a FP-D16
Thumb-1
Thumb-2
Classic
Microcontroller
Real-time
Application
Pre-v4
ARM v4
ARM v4T
ARM v5T
ARM v5TE
ARM v5TEJ
ARM v6
ARM v6KZ
ARM v6T2
ARM v6K
ARM v7
ARM v6-M
ARM v6S-M
ARM v7E-M
ARM v8
Tag_File
Tag_Section
Tag_Symbol
unhandled AEABI Tag 
SectionLength
Vendor
aeabi
subsection length greater than section length
unrecognised tag: 0x
Sections
Symbols
SectionAttributes
SymbolAttributes
FileAttributes
Section 
Number of memory regions: 
Bytes used: 
Bytes allocated: 
Bytes wasted: 
 (includes alignment, etc)
Stream Error: 
The stream is too short to perform the requested operation.
The specified offset is invalid for the current stream.
0x%08x / 0x%08x = %.2f%%
%Y-%m-%d %H:%M:%S
%.9lu
may only occur zero or one times!
must occur exactly one time!
: for the -
 option: 
: CommandLine Error: Option '
' registered more than once!
inconsistency in registered CommandLine options
Cannot specify more than one option with cl::ConsumeAfter!
    -
 (default: 
*no default*
' value invalid for uint argument!
' value invalid for integer argument!
True
False
' is invalid value for boolean argument! Try 0 or 1
General options
Generic Options
Display list of available options (-help-list-hidden for more)
help-list
Display list of all available options
help-list-hidden
Display available options (-help-hidden for more)
Display all available options
print-options
Print non-default options after command line parsing
print-all-options
Print all option values after command line parsing
Display the version of this program
= *cannot print option value*
LLVM (http://llvm.org/):
 version 
Optimized build
(unknown)
  Default target: 
  Host CPU: 
 [subcommand]
 [options]
SUBCOMMAND '
SUBCOMMANDS:
  Type "
 <subcommand> -help" to get more help on a specific subcommand
OPTIONS:
  This option category has no options.
error - this positional option will never be matched, because it does not Require a value, and a cl::ConsumeAfter option is active!
error - option can never match, because another positional argument will match an unbounded number of values, and this option does not require a value!
' is all messed up!
: Unknown command line argument '
'.  Try: '
 -help'
: Did you mean '-
: Not enough positional command line arguments specified!
Must specify at least 
 positional argument
: See: 
 -help
: Too many positional arguments specified!
Can specify at most 
 positional arguments: See: 
must be specified at least once!
requires a value!
multi-valued option specified with ValueDisallowed modifier!
does not allow a value! '
' specified.
not enough values!
' value invalid for floating point argument!
= *unknown option value*
zlib error: Z_DATA_ERROR
zlib error: Z_STREAM_ERROR
zlib error: Z_MEM_ERROR
zlib error: Z_BUF_ERROR
Comma separated list of debug counter skip and count
debug-counter
DebugCounter Error: 
 does not have an = in it
 is not a number
-skip
 is not a registered counter
-count
 does not end with -skip or -count
    =
 -   
Multiple errors
Inconvertible error value. An error has occurred that could not be converted to a known std::error_code. Please file a bug.
Multiple errors:
LLVM ERROR: 
LLVM ERROR: out of memory
view-background
Execute graph viewer in the background. Creates tmp file litter.
failed to obtain absolute path for 
.lock
failed to create unique file 
failed to get host id
failed to write to 
failed to create link 
failed to remove lockfile 
LLT_invalid
%.2x
rng-seed
Seed for the random number generator
Included from 
error: 
warning: 
note: 
remark: 
can't open file '
error parsing file '
malformed section header on line 
malformed regex for section 
malformed line 
malformed section 
malformed regex in line 
Enable statistics output from program (available with Asserts)
stats-json
Display statistics as json data
Statistics are disabled.  
Build with asserts or with -DLLVM_ENABLE_STATS
                          ... Statistics Collected ...
%*u %-*s - %s
vfpv2
vfpv3
vfpv3-fp16
vfpv3-d16
vfpv3-d16-fp16
vfpv3xd
vfpv3xd-fp16
vfpv4
vfpv4-d16
fpv4-sp-d16
fpv5-d16
fpv5-sp-d16
fp-armv8
neon-fp16
neon-vfpv4
neon-fp-armv8
crypto-neon-fp-armv8
softvfp
arm2
arm3
arm6
arm7m
arm8
arm810
strongarm110
strongarm1100
strongarm1110
arm7tdmi-s
arm710t
arm720t
arm9
arm9tdmi
arm920
arm920t
arm922t
arm9312
arm940t
ep9312
arm10tdmi
arm1020t
arm9e
arm946e-s
arm966e-s
arm968e-s
arm10e
arm1020e
arm1022e
arm1136j-s
arm1136jf-s
arm1136jz-s
arm1176j-s
arm1176jz-s
mpcore
mpcorenovfp
arm1156t2-s
arm1156t2f-s
cortex-m0
cortex-m0plus
cortex-m1
sc000
cortex-a5
cortex-a12
cortex-a15
cortex-a17
cortex-r4
cortex-r4f
cortex-r5
cortex-r7
cortex-r8
cortex-r52
sc300
cortex-m3
cortex-m4
cortex-m7
cortex-m23
cortex-m33
cortex-a32
cortex-a35
cortex-a57
cortex-a72
cortex-a73
exynos-m1
exynos-m2
exynos-m3
kryo
iwmmxt
armv2
armv2a
armv3
armv3m
armv4
armv5t
armv5te
5TEJ
armv6kz
armv6-m
armv7ve
v7ve
7E-M
armv8-a
armv8.1-a
8.1-A
v8.1a
armv8.2-a
8.2-A
v8.2a
armv8-r
armv8-m.base
8-M.Baseline
armv8-m.main
8-M.Mainline
v8m.main
iwmmxt2
-hwdiv-arm
-hwdiv
-dsp
+d16
-fp-only-sp
-d16
-vfp4
-fp16
-vfp3
-vfp2
idiv
virt
-fullfp16
+ras
-ras
arm,thumb
v6hl
v6-m
v6s-m
v6zk
v7-a
v7hl
v7-r
v7-m
v7e-m
v8-a
v8.1-a
v8.2-a
v8-r
v8-m.base
v8-m.main
falkor
thunderx2t99
thunderx
thunderxt88
thunderxt81
thunderxt83
+spe
+lse
-lse
-spe
-sve
thumb,arm
fpe2
fpe3
vfp3-d16
vfp4-d16
fp4-sp-d16
vfpv4-sp-d16
fp4-dp-d16
fpv4-dp-d16
fp5-sp-d16
fp5-dp-d16
fpv5-dp-d16
neon-vfpv3
track-memory
Enable -time-passes memory tracking (this may be slow)
info-output-file
File to append -stats and -timer output to
Error opening info-output-file '
 for appending!
  Total Execution Time: %5.4f seconds (%5.4f wall clock)
   ---User Time---
   --System Time--
   --User+System--
   ---Wall Time---
  ---Mem---
  --- Name ---
Total
        -----     
  %7.4f (%5.1f%%)
%9lld  
misc
Miscellaneous Ungrouped Timers
"time.
.wall
.user
.sys
aarch64_be
bpfel
bpfeb
mipsel
mips64el
riscv32
riscv64
sparcv9
sparcel
air64
le32
amdil64
hsail
hsail64
spir64
kalimba
renderscript32
renderscript64
riscv
igil
scei
nvidia
mesa
suse
ananas
cloudabi
dragonfly
fuchsia
kfreebsd
netbsd
openbsd
solaris
minix
rtems
nacl
bitrig
nvcl
amdhsa
elfiamcu
mesa3d
contiki
gnuabi64
gnueabi
gnueabihf
gnux32
code16
eabihf
musl
musleabi
musleabihf
itanium
cygnus
amdopencl
coreclr
ppc32
bpf_be
bpf_le
coff
macho
kalimba3
kalimba4
kalimba5
i786
i886
i986
xscaleeb
mipseb
mipsallegrex
mipsallegrexel
mips64eb
sparc64
androideabi
arm7tdmi
arm1176jzf-s
cortex-a9
cortex-a7
strongarm
arm926ej-s
Unexpected token in Key Value.
Already encountered an anchor for this node!
Already encountered a tag for this node!
Unexpected token. Expected Key or Block End
Unexpected token. Expected Key, Flow Entry, or Flow Mapping End.
Unexpected token. Expected Block Entry or Block End.
Could not find closing ]!
Expected , between entries!
Could not find expected : for simple key
Unrecognized character while tokenizing.
Found unexpected ':' while scanning a plain scalar
Found invalid tab character in indentation
Got empty plain scalar
Expected quote at end of scalar
A text line is less indented than the block scalar
Leading all-spaces line must be smaller than the block indent
Expected a line break after block scalar header
Not dealing with this yet
Got empty alias or anchor
YAML
Can only iterate over the stream once
tag:yaml.org,2002:
Unexpected token
Unknown tag handle 
tag:yaml.org,2002:null
tag:yaml.org,2002:str
tag:yaml.org,2002:map
tag:yaml.org,2002:seq
Unrecognized escape code!
unexpected scalar
unknown bit value
unexpected scalar in sequence of bit values
expected sequence of bit values
unknown enumerated scalar
not a mapping
missing required key '
unknown key '
Null
not a sequence
invalid call
                
Map key must be a scalar
unknown node kind
invalid boolean
invalid number
out of range number
IO failure on output stream: 
[:<:]]
[:>:]]
alnum
cntrl
digit
graph
lower
punct
space
upper
xdigit
backspace
newline
vertical-tab
form-feed
carriage-return
exclamation-mark
quotation-mark
number-sign
dollar-sign
percent-sign
ampersand
apostrophe
left-parenthesis
right-parenthesis
asterisk
plus-sign
hyphen-minus
full-stop
solidus
three
four
five
seven
eight
nine
semicolon
less-than-sign
equals-sign
greater-than-sign
question-mark
commercial-at
left-square-bracket
backslash
reverse-solidus
right-square-bracket
circumflex
circumflex-accent
underscore
low-line
grave-accent
left-brace
left-curly-bracket
vertical-line
right-brace
right-curly-bracket
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
abcdefghijklmnopqrstuvwxyz
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~ 
!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
ABCDEFGHIJKLMNOPQRSTUVWXYZ
0123456789ABCDEFabcdef
REG_NOMATCH
REG_BADPAT
REG_ECOLLATE
REG_ECTYPE
REG_EESCAPE
REG_ESUBREG
REG_EBRACK
REG_EPAREN
REG_EBRACE
REG_BADBR
REG_ERANGE
REG_ESPACE
REG_BADRPT
REG_EMPTY
REG_ASSERT
REG_INVARG
REG_0x%x
llvm_regexec() failed to match
invalid regular expression
invalid collating element
invalid character class
trailing backslash (\)
invalid backreference number
brackets ([ ]) not balanced
parentheses not balanced
braces not balanced
invalid repetition count(s)
invalid character range
out of memory
repetition-operator operand invalid
empty (sub)expression
"can't happen" -- you found a bug
invalid argument to regex routine
*** unknown regexp error code ***
-darwin
-macos
0123456789abcdef
TMPDIR
TEMP
TEMPDIR
/var/tmp/
-%%%%%%.
COLUMNS
colors
Error waiting for child process
Program could not be executed
 (core dumped)
Executable "
" doesn't exist!
/dev/null
Cannot dup2
Can't redirect stderr to stdout
posix_spawn failed
disable-symbolication
Disable symbolizing crash backtraces.
llvm-symbolizer
Unable to find target for this triple (no targets are registered)
No coverage data found
Unsupported coverage format version
Truncated coverage data
Malformed coverage data
llvm.coveragemap
unchecked
checked
dynamic-only
-sdk
 -sdk 
 -resource-dir 
"\$ 
macos.json
ios.json
watchos.json
overlay.json
missing
expanded
importedmodules
swiftdeps
trace.json
', '
DisableReplacement
Debug
Unchecked
swift (LLVM option parsing)
main.swift
__bad__
REPL
 { code }
 rethrows
[Class]
[Enum]
[EnumElement]
[Protocol]
[TypeAlias]
[AssociatedType]
[GenericTypeParam]
[Constructor]
[Destructor]
[Subscript]
[StaticMethod]
[InstanceMethod]
[PrefixOperatorFunction]
[PostfixOperatorFunction]
[InfixOperatorFunction]
[FreeFunction]
[StaticVar]
[InstanceVar]
[LocalVar]
[GlobalVar]
[PrecedenceGroup]
Keyword
[associatedtype]
[class]
[enum]
[extension]
[func]
[init]
[inout]
[let]
[operator]
[precedencegroup]
[protocol]
[subscript]
[typealias]
[var]
[fileprivate]
[internal]
[private]
[undef]
[sil]
[sil_stage]
[sil_vtable]
[sil_global]
[sil_witness_table]
[sil_default_witness_table]
[sil_coverage_map]
[sil_scope]
[defer]
[guard]
[else]
[for]
[while]
[break]
[continue]
[fallthrough]
[case]
[default]
[where]
[catch]
[Any]
[false]
[nil]
[rethrows]
[super]
[self]
[Self]
[throw]
[true]
[try]
[__FILE__]
[__LINE__]
[__COLUMN__]
[__FUNCTION__]
[__DSO_HANDLE__]
[#if]
[#else]
[#elseif]
[#keyPath]
[#line]
[#sourceLocation]
[#selector]
[#available]
[#fileLiteral]
[#imageLiteral]
[#colorLiteral]
[#FileReference]
[#file]
[#column]
[#function]
[#dsohandle]
Pattern
Literal
[Array]
[Boolean]
[Dictionary]
[Integer]
[Nil]
[Tuple]
BuiltinOperator
ExprSpecific
Local
CurrNominal
OutNominal
CurrModule
OtherModule
/NotRecommended
/Erase[
/TypeRelation[Invalid]
/TypeRelation[Identical]
/TypeRelation[Convertible]
 {|}
Platform
@objc property sequence
@objc method
Specify message
Specify replacing name
Specify version number
Declaration
 Attribute
Argument name
@objc property
-%%%%%%
-dot
-testable
-inits
.completions
swift.libIDE.CodeCompletionCache
<CommentParts>
</CommentParts>
<ThrowsDiscussion>
</ThrowsDiscussion>
<Tags>
</Tags>
<Tag>
</Tag>
<Parameter>
<Direction isExplicit="0">in</Direction>
<ClosureParameter>
</ClosureParameter>
</Parameter>
<List-Bullet>
<List-Number>
</List-Bullet>
</List-Number>
<Item>
</Item>
<CodeListing language="
</CodeListing>
<zCodeLineNumbered>
</zCodeLineNumbered>
<rawHTML>
<hr/>
<br/>
<codeVoice>
</codeVoice>
<emphasis>
</emphasis>
<Link href="
</Link>
<img src="
 title="
 alt="
<Attention
</Attention
<Author
</Author
<Authors
</Authors
<Bug
</Bug
<Complexity
</Complexity
<Copyright
</Copyright
<Date
</Date
<Experiment
</Experiment
<Important
</Important
<Invariant
</Invariant
<LocalizationKey
</LocalizationKey
<Mutatingvariant
</Mutatingvariant
<Nonmutatingvariant
</Nonmutatingvariant
<Note
</Note
<Postcondition
</Postcondition
<Precondition
</Precondition
<Remark
</Remark
<Remarks
</Remarks
<Returns
</Returns
<Requires
</Requires
<See
</See
<Since
</Since
<Tag
</Tag
<TODO
</TODO
<Throws
</Throws
<Version
</Version
<Warning
</Warning
<Keyword
</Keyword
<Recommended
</Recommended
<Recommendedover
</Recommendedover
Global Rename
Find Global Rename Ranges
Find Local Rename Ranges
Local Rename
Add Missing Protocol Requirements
Expand Default
Expand Switch Cases
Localize String
Simplify Long Number Literal
Collapse Nested If Expression
Convert To Do/Catch
Convert To Trailing Closure
Extract Expression
Extract Method
Extract Repeated Expression
Move To Extension
Convert to String Interpolation
symbol from system module cannot be renamed
symbol without a declaration location cannot be renamed
cannot find the name of the symbol
cannot decide the accessibility of the symbol
cannot rename a Clang symbol from its Swift reference
extractedFunc
newName
extractedExpr
<extract>
do {
} catch {
NSLocalizedString(
, comment: "")
type cannot be null.
cannot find declaration of type.
not a Swift USR
decl for symbol name '
' was not found
unable to find associated type %s in context
Couldn't find %s in the builtin module
BuiltinTypeName %s doesn't start with Builtin.
DeclContext had %llu children, giving up
empty DeclContext unusable
could not find a matching function for the DeclContext
error type encountered while demangling name
%s encountered in extension children
unable to find nominal type for extension
unable to find unique type for extension
unable to find module name for extension
%s encountered in ExplicitClosure children
multiple potential candidates to be this closure's type
%s encountered in function children
unable to retrieve content for Node::Kind::LocalDeclName
demangled identifier 
 could not be found by name lookup
demangled identifier %s could not be found by name lookup
%s encountered in generic type children
Could not find a subscript decl
could not find a matching subscript signature
multiple variables with the same name %s
no variables with the name %s
could not retrieve %s for variable %s
no decl object for %s
couldn't resolve referent type
instance type for metatype cannot be uniquely resolved
error: empty module name.
unable to load module '%s' (%s)
invalid subclass existential
Generic Error
too many argument types for a function type
too many return types for a function type
unable to retrieve content for Node::Kind::PrivateDeclName
unable to find Node::Kind::PrivateDeclName '%s' in '%s'
unable to lookup local type %s
unable to find Node::Kind::Identifier '%s'
no decl found in '%s' (DeclKind=%u)
no decl found in function
decl is not a nominal_decl (DeclKind=%u), lookup for '%s' failed
no decl named '%s' found in module '%s'
Generic error.
Invalid
Crawler
type for symbolname '%s' was not found
gopher
https
mailserver
modem
opaquelocktoken
servicesip
soap.beep
soap.beeps
telnet
tn3270
vemmi
xcdoc
z39.50r
z39.50s
mailto
radar
FIXME:
TODO:
MARK:
(acap|afp|afs|cid|data|fax|feed|file|ftp|go|gopher|http|https|imap|ldap|mailserver|mid|modem|news|nntp|opaquelocktoken|pop|prospero|rdar|rtsp|service|sip|soap\.beep|soap\.beeps|tel|telnet|tip|tn3270|urn|vemmi|wais|xcdoc|z39\.50r|z39\.50s)://([a-zA-Z0-9\-_.]+/)?[a-zA-Z0-9;/?:@\&=+$,\-_.!~*'()%#]+
(mailto|im):[a-zA-Z0-9\-_]+@[a-zA-Z0-9\-_\.!%]+
radar:[a-zA-Z0-9;/?:@\&=+$,\-_.!~*'()%#]+
armv6t2
-index-header-map
-fmodules-ignore-macro=
-fmodule-name=
didSet:
willSet:
- Tag:
swift::ModuleDecl with empty file name!! 
Details: 
  name: 
  file unit: 
derived
source, file="
serialized ast, file="
clang module, file="
swift::ModuleDecl with empty file name! 
failed to stat file: 
method, no_default
no_default
enumelt
destroyer
deallocator
globalaccessor
globalgetter
ivardestroyer
ivarinitializer
defaultarg
propertyinit
public_external
hidden_external
shared_external
private_external
method, associated_type, associated_type_protocol, base_protocol
base_protocol
associated_type_protocol
conditional_conformance
associated_type
specialize
inherit
transparent
serialized
serializable
reabstraction_thunk
global_init
Ospeed
be a function
to have the same number of arg names as arg types
to not be a coroutine
to be a yield_once coroutine
builtin name
(' or ',
opened existential access kind
mutable_access
immutable_access
unchecked_ownership_conversion value ownership kind conversion specification
stored_property
gettable_property
settable_property
# or @
indices
indices_equals
indices_hash
optional_wrap
optional_chain
optional_force
cast consumption kind
rootself
crossmodulerootself
derivedself
derivedselfonly
delegatingself
var, rootself, crossmodulerootself, derivedself, derivedselfonly, or delegatingself
destination
operand
initialization
tail_elems
case or default
reference to a value
argno
With parser at source location: 
InContext
[lvalue] 
[cleanup] 
<null>
emitting SIL for
silgen emitFunction
silgen emitDefaultArgGenerator 
silgen emitConstructor
silgen constructor initializer
silgen enum constructor
silgen closureexpr
silgen emitDestructor -dealloc
silgen emitDestructor ivar initializer
silgen emitDestructor ivar destroyer
silgen objc destructor thunk
silgen emitDestroyingDestructor
silgen emitDeallocatingDestructor
silgen emitStoredPropertyInitialization
silgen emitGlobalAccessor
silgen emitObjCMethodThunk
silgen objc property getter thunk
silgen objc property setter thunk
silgen objc constructor thunk
castReferenceFromBridgeObject dest must be an object type
castToBridgeObject source must be a class
castFromNativeObject dest must be an object type
castToNativeObject source must be a class
argument to builtin should be a literal tuple
type of pin handle must be Optional<Builtin.NativeObject>
$implicit_value
$metatype
SubstToOrig
OrigToSubst
AnyErasure
ForceAndBridgeToObjC
BridgeResultFromObjC
(from: 
, to: 
, explicit: 
(orig: 
, subst: 
nontrivial thin function reference
_Pointer
AutoreleasingWritebackComponent()
_Word
_RawPointer
int_instrprof_increment
EndAccessPseudoComponent
ValueComponent(
rvalue, 
unenforced
UnpinPseudoComponent
AddressorComponent
 isSuper
 isDirectAccessorUse
 subscript_index:
GetterSetterComponent
OwnershipComponent(...)
StructElementComponent(
RefElementComponent(
OrigToSubstComponent(
SubstToOrigComponent(
ForceOptionalObjectComponent()
OpenNonOpaqueExistentialComponent(
, ...)
OpenOpaqueExistentialComponent(
TupleElementComponent(
KeyPathApplicationComponent
silgen materializeForSet callback
<expr>
.some
emitting reabstraction thunk in
reabstraction of returns_inner_pointer function
inout writeback in abstraction difference thunk not yet implemented
input value 
output type 
$error
silgen emitForeignToNativeThunk
delayed application of builtin
silgen emitNativeToForeignThunk
silgen emitCurryThunk
generating protocol witness thunk
enable-loop-arc
array.props.isNativeTypeChecked
array.check_subscript
array.check_index
array.get_count
array.get_capacity
array.get_element
array.owner
array.get_element_address
array.mutate_unknown
array.withUnsafeMutableBufferPointer
array.append_contentsOf
_T0s18_fatalErrorMessageys12StaticStringV_AcCSutF
branchhint
slowpath
fastpath
swift_bufferAllocate
(region id:
 kind:
bb  
 ucfh:
true 
 ucft:
 parent:
    (preds
    (succs
    (subregs
    (non-local-succs
    (exiting-subregs
        (parentindex:
    (backedge-regs
enable-rc-identity-arg-strip
Should RC identity try to strip off arguments
arc.programtermination_point
convertFromObjectiveC
convertToObjectiveC
sil-combine-disable-alloc-stack-opts
<unknown>
Function call site:
Incomplete callee list? : 
Known callees:
Inst #: 
    Mem Behavior: 
    Release Behavior: 
bug-reducer-tester-target-func
Function that when called by an apply should cause BugReducerTester to blow up or miscompile if the pass visits the apply
opt-crasher
Crash the optimizer when we see the specified apply
miscompile
Delete the target function call to cause a runtime miscompile that is not a crasher
runtime-crasher
bug-reducer-tester-failure-kind
The type of failure to perform
bug_reducer_runtime_crasher_func
Runtime Crasher Func!
int_trap
Function 
 has caller: 
, partial applied args = 
START: 
FINISH: 
START: sil @
END: sil @
Bottom up function order:
Non-trivial SCC:
Induction variables for function: 
IV Header: 
IV: 
with header: 
only-expansion
only-reduction
only-type-expansion
LSLocation Kinds:
lslocation-dump-use-new-projection
No loops in 
Loops in 
PAIR #
  r=
,se=
ValueMap:
ValueMap[
RESULT #
.gsil_
.sil
Visiting: 
sil-fso-enable-generics
Support function signature optimization of generic functions
sil-partial-specialization
Enable partial specialization of generics
sil-partial-specialization-with-generic-substitutions
Enable partial specialization with generic substitutions
sil-print-generic-specialization-loops
Print detected infinite generic specialization loops that were prevented
Cannot specialize with dynamic self
TypeTooDeep
Cannot specialize because the generic type is too deep
SpecializationLoop
Generic specialization is not supported if it would result in a generic specialization of infinite depth. Callee 
 occurs multiple times on the call chain
Detected and prevented an infinite generic specialization loop for callee: 
optimize.sil.specialize.generic.never
optimize.sil.specialize.generic.partial.never
SpecializedFnTy:
SpecializedSubstFnTy:
CalleeFnTy:
SpecializedCalleeSubstFnTy:
Sub:
Strange requirement for 
Looking for a function: 
Expected type: 
Found    type: 
generic 
of (extension in 
_ArrayBuffer
_ContiguousArrayBuffer
Range
RangeIterator
CountableRange
CountableRangeIterator
ClosedRange
ClosedRangeIterator
CountableClosedRange
CountableClosedRangeIterator
IndexingIterator
Collection
ReversedCollection
BidirectionalCollection
RandomAccessCollection
ReversedRandomAccessCollection
UTF8
UTF16
_StringBuffer
_toStringReadOnlyPrintable
Specialized
Specialized function 
 with type 
Covering Value
enable-expand-all
Source type: 
Destination type: 
string.makeUTF16
string.makeUTF8
sil-stats-only-instructions
Comma separated list of SIL insruction names, whose stats should be collected
instruction name
sil-stats-dump-all
Dump all SIL module and SIL function stats
sil-stats-modules
Enable computation of statistics for SIL modules
sil-stats-functions
Enable computation of statistics for SIL functions
sil-stats-output-file
The name of the output file for optimizer counters
sil-stats-block-count-delta-threshold
Threshold for reporting changed basic block count numbers
sil-stats-inst-count-delta-threshold
Threshold for reporting changed instruction count numbers
sil-stats-function-count-delta-threshold
Threshold for reporting changed function count numbers
sil-stats-used-memory-delta-threshold
Threshold for reporting changed memory usage numbers
sil-stats-used-memory-min-threshold
Min hreshold for reporting changed memory usage numbers
sil-stats-func-block-count-delta-threshold
Threshold for reporting changed basic block count numbers for a function
sil-stats-func-block-count-min-threshold
Min threshold for reporting changed basic block count numbers for a function
sil-stats-func-inst-count-delta-threshold
Threshold for reporting changed instruction count numbers for a function
sil-stats-func-inst-count-min-threshold
Min threshold for reporting changed instruction count numbers for a function
sil-stats-only-function
Function name, whose stats should be tracked
sil-stats-only-functions
Pattern of a function name, whose stats should be tracked
inst
functions
created_inst
deleted_inst
inst_
function_history
self_no_escaping_closure
pair_no_escaping_closure
inline_late
Can't demangle: 
sil-print-all
Print SIL after each pass
sil-print-pass-name
Print the name of each SIL pass before it runs
sil-print-pass-time
Print the execution time of each SIL pass
sil-opt-pass-count
Stop optimizing after <N> optimization passes
sil-break-on-function
sil-break-on-pass
Break before running a particular function pass
sil-print-only-function
Only print out the sil for this function
sil-print-only-functions
Only print out the sil for the functions whose name contains this substring
sil-print-before
Print out the sil before passes which contain a string from this list.
sil-print-after
Print out the sil after passes which contain a string from this list.
sil-print-around
Print out the sil before and after passes which contain a string from this list
sil-disable-pass
Disable passes which contain a string from this list
sil-verify-without-invalidation
Verify after passes even if the pass has not invalidated
sil-disable-skipping-passes
Do not skip passes even if nothing was changed
debug-only-pass-number
Enable a specific type of debug output (comma separated list pass numbers)
pass number
  (Skip) Stage: 
 Pass: 
, Function: 
  (Disabled) Stage: 
 Stage: 
*** SIL function before 
) ***
*** SIL function after 
) (#
Start function passes at stage: 
 (module pass)
*** SIL module before 
,Module)
*** SIL module after 
 transformation (
AADumper
ABCOpt
AccessEnforcementSelection
AccessSummaryDumper
AccessMarkerElimination
AddressLowering
AllocBoxToStack
AllocStackHoisting
ArrayCountPropagation
ArrayElementPropagation
AssumeSingleThreaded
BasicInstructionPropertyDumper
BasicCalleePrinter
CFGPrinter
COWArrayOpts
CallerAnalysisPrinter
CapturePromotion
CapturePropagation
ClosureSpecializer
CodeSinking
ComputeDominanceInfo
ComputeLoopInfo
ConditionForwarding
CopyForwarding
EpilogueARCMatcherDumper
EpilogueRetainReleaseMatcherDumper
RedundantOverflowCheckRemoval
DeadArgSignatureOpt
DeadFunctionElimination
DeadObjectElimination
DefiniteInitialization
Devirtualizer
DiagnoseStaticExclusivity
DiagnoseUnreachable
DiagnosticConstantPropagation
EagerSpecializer
EarlyCodeMotion
EarlyInliner
EmitDFDiagnostics
EscapeAnalysisDumper
FunctionOrderPrinter
FunctionSignatureOpts
ARCSequenceOpts
ARCLoopOpts
RedundantLoadElimination
DeadStoreElimination
GenericSpecializer
GlobalOpt
GlobalPropertyOpt
GuaranteedARCOpts
HighLevelCSE
HighLevelLICM
IVInfoPrinter
InstCount
JumpThreadSimplifyCFG
LetPropertiesOpt
LICM
LateCodeMotion
LateInliner
LoopCanonicalizer
LoopInfoPrinter
LoopRegionViewText
LoopRegionViewCFG
LoopRotate
LoopUnroll
LowerAggregateInstrs
MandatoryInlining
Mem2Reg
MemBehaviorDumper
LSLocationPrinter
MergeCondFails
MoveCondFailToPreds
NoReturnFolding
Outliner
OwnershipModelEliminator
RCIdentityDumper
PerfInliner
PerformanceConstantPropagation
PredictableMemoryOptimizations
ReleaseDevirtualizer
RetainSinking
ReleaseHoisting
LateReleaseHoisting
LoadableByAddress
RemovePins
TempRValueOpt
SideEffectsDumper
SILCleanup
SILCombine
SILDebugInfoGenerator
SILLinker
SROABBArgs
SimplifyBBArgs
SimplifyCFG
SpeculativeDevirtualization
SplitAllCriticalEdges
SplitNonCondBrCriticalEdges
StackPromotion
StripDebugInfo
SwiftArrayOpts
UnsafeGuaranteedPeephole
UsePrespecialized
ValueOwnershipKindDumper
SemanticARCOpts
MarkUninitializedFixup
SimplifyUnreachableContainingBlocks
SerializeSILPass
BugReducerTester
aa-dump
abcopts
access-enforcement-selection
access-summary-dump
access-marker-elim
address-lowering
allocbox-to-stack
alloc-stack-hoisting
array-count-propagation
array-element-propagation
sil-assume-single-threaded
basic-instruction-property-dump
basic-callee-printer
view-cfg
cowarray-opt
caller-analysis-printer
capture-promotion
capture-prop
closure-specialize
code-sinking
compute-dominance-info
compute-loop-info
condition-forwarding
copy-forwarding
sil-epilogue-arc-dumper
sil-epilogue-retain-release-dumper
remove-redundant-overflow-checks
dead-arg-signature-opt
sil-deadfuncelim
deadobject-elim
definite-init
devirtualizer
diagnose-static-exclusivity
diagnose-unreachable
diagnostic-constant-propagation
eager-specializer
early-codemotion
early-inline
dataflow-diagnostics
escapes-dump
function-order-printer
function-signature-opts
arc-sequence-opts
arc-loop-opts
redundant-load-elim
dead-store-elim
generic-specializer
global-opt
global-property-opt
guaranteed-arc-opts
high-level-cse
high-level-licm
iv-info-printer
inst-count
simplify-cfg
let-properties-opt
late-codemotion
late-inline
loop-canonicalizer
loop-info-printer
loop-region-view-text
loop-region-view-cfg
lower-aggregate-instrs
mandatory-inlining
mem-behavior-dump
lslocation-dump
merge-cond_fails
move-cond-fail-to-preds
noreturn-folding
outliner
ownership-model-eliminator
rc-id-dumper
performance-constant-propagation
predictable-memopt
release-devirtualizer
retain-sinking
release-hoisting
late-release-hoisting
loadable-address
remove-pins
temp-rvalue-opt
side-effects-dump
sil-combine
sil-debuginfo-gen
sroa-bb-args
simplify-bb-args
normal-simplify-cfg
specdevirt
split-critical-edges
split-non-cond_br-critical-edges
stack-promotion
strip-debug-info
array-specialize
unsafe-guaranteed-peephole
use-prespecialized
value-ownership-kind-dumper
semantic-arc-opts
mark-uninitialized-fixup
simplify-unreachable-containing-blocks
serialize-sil
bug-reducer-tester
Dump Alias Analysis over all Pairs
Array Bounds Check Optimization
Access Enforcement Selection
Dump Address Parameter Access Summary
Access Marker Elimination.
SIL Address Lowering
Stack Promotion of Box Objects
SIL alloc_stack Hoisting
Array Count Propagation
Array Element Propagation
Assume Single-Threaded Environment
Print SIL Instruction MemBehavior and ReleaseBehavior Information
Print Basic Callee Analysis for Testing
View Function CFGs
COW Array Optimization
Common Subexpression Elimination
Print Caller Analysis for Testing
Capture Promotion to Eliminate Escaping Boxes
Captured Constant Propagation
Closure Specialization on Constant Function Arguments
Code Sinking
Compute Dominance Information for Testing
Compute Loop Information for Testing
Conditional Branch Forwarding to Fold SIL switch_enum
Copy Forwarding to Remove Redundant Copies
Print Epilogue retains of Returned Values and Argument releases
Redundant Overflow Check Removal
Dead Code Elimination
Dead Argument Elimination via Function Specialization
Dead Function Elimination
Dead Object Elimination for Classes with Trivial Destruction
Definite Initialization for Diagnostics
Indirect Call Devirtualization
Static Enforcement of Law of Exclusivity
Diagnose Unreachable Code
Constants Propagation for Diagnostics
Eager Specialization via @_specialize
Early Code Motion without Release Hoisting
Early Inlining Preserving Semantic Functions
Emit SIL Diagnostics
Dump Escape Analysis Results
Print Function Order for Testing
Function Signature Optimization
ARC Sequence Optimization
ARC Loop Optimization
Redundant Load Elimination
Generic Function Specialization on Static Types
SIL Global Optimization
Global Property Optimization
Guaranteed ARC Optimization
Common Subexpression Elimination on High-Level SIL
Loop Invariant Code Motion in High-Level SIL
Print Induction Variable Information for Testing
Record SIL Instruction, Block, and Function Counts as LLVM Statistics
Simplify CFG via Jump Threading
Let Property Optimization
Late Code Motion with Release Hoisting
Late Function Inlining
Loop Canonicalization
Print Loop Information for Testing
Print Loop Region Information for Testing
View Loop Region CFG
Loop Rotation
Loop Unrolling
Lower Aggregate SIL Instructions to Multiple Scalar Operations
Mandatory Inlining of Transparent Functions
Memory to SSA Value Conversion to Remove Stack Allocation
Print SIL Instruction MemBehavior from Alias Analysis over all Pairs
Print Load-Store Location Results Covering all Accesses
Merge SIL cond_fail to Eliminate Redundant Overflow Checks
Move SIL cond_fail by Hoisting Checks
Prune Control Flow at No-Return Calls Using SIL unreachable
Function Outlining Optimization
Eliminate Ownership Annotation of SIL
Print Reference Count Identities
Performance Function Inlining
Constant Propagation for Performance without Diagnostics
Predictable Memory Optimization for Diagnostics
SIL release Devirtualization
SIL retain Sinking
SIL release Hoisting
Late SIL release Hoisting Preserving Epilogues
SIL Large Loadable type by-address lowering.
Remove SIL pin/unpin pairs
Remove short-lived immutable temporary copies
Print Side-Effect Information for all Functions
SIL Cleanup Preparation for IRGen
Combine SIL Instructions via Peephole Optimization
Generate Debug Information with Source Locations into Textual SIL
Link all SIL Referenced within the Module via Deserialization
Scalar Replacement of Aggregate Stack Objects
Scalar Replacement of Aggregate SIL Block Arguments
SIL Block Argument Simplification
SIL CFG Simplification
Speculative Devirtualization via Guarded Calls
Split all Critical Edges in the SIL CFG
Split all Critical Edges not from SIL cond_br
Stack Promotion of Class Objects
Strip Debug Information
Loop Specialization for Array Properties
SIL retain/release Peephole Removal for Builtin.unsafeGuaranteed
Use Pre-Specialized Functions
Print Value Ownership Kind for Testing
Semantic ARC Optimization
Temporary pass for staging in mark_uninitialized changes.
Utility pass. Removes all non-term insts from blocks with unreachable terms
Utility pass. Serializes the current SILModule
sil-bug-reducer Tool Testing by Asserting on a Sentinel Function
sil-view-cfg
Enable the sil cfg viewer pass
sil-view-guaranteed-cfg
Enable the sil cfg viewer pass after diagnostics
sil-view-silgen-cfg
Enable the sil cfg viewer pass before diagnostics
SIL View SILGen CFG
Mandatory Debug Serialization
Guaranteed Passes
SIL View Guaranteed CFG
While running pass #
 SILFunctionTransform "
" on SILFunction 
 SILModuleTransform "
Running SIL Function Transform
sil-abcopts-report
enable-abcopts
enable-abc-hoisting
sil-array-props
array.make_mutable
array.props
sil-looprotate
sil-optimized-access-markers
Enable memory access markers during optimization passes.
optimize-opaque-address-lowering
$return_value
Simultaneous use of multiple call results.
sil-di-assert-on-failure
After emitting a DI error, assert instead of continuing. Meant for debugging ONLY!
trunc_Int
_Int1
_Int
self.init()
  the instruction: 
invalid element number
superinit
selfinit
.swapAt(
caller: 
callee: 
Available Value List, N = 
. Elts:
Available Value Dump. Value: 
NoValue;
SubElementNumber: 
Insertion Points:
string.concat
disable-arc-cm
disable-with-critical-edge
array.init
enable-copyforwarding
enable-destroyhoisting
max-partial-store-count
sil-generic-specializer
NoDef
Unable to specialize generic function 
 since definition is not visible
sil-dump-functions-before-outliner
Break before running each function pass on a particular function
_unconditionallyBridgeFromObjectiveC
print-shortest-path-info
Print shortest-path information for inlining
sil-inline-generics
Enable inlining of generics
Early
 Performance Inliner
sil-inliner
array.uninitialized
NoInlinedCost
Not profitable to inline function 
 (cost = 
, benefit = 
Benefit
Middle
disable-sil-cm-rr-cm
sroa-args-remove-dead-args-after
closure-specialize-eliminate-dead-closures
Do not eliminate dead closures after closure specialization. This is meant ot be used when testing.
enable-eager-specializer
Run the eager-specializer pass.
_swift_isClassOrObjCExistentialType
cmp_le
_findStringSwitchCaseWithCache
findStringSwitchCase
array.
AP::Invalid
AP::Opaque
AP::Discard
<<UNHANDLED CASE>>
AP::Type
AP::Tuple(
AP::PartialCurriedCFunctionAsMethodType(
AP::ClangType(
AP::ClangFunctionParamTupleType(
AP::CurriedCFunctionAsMethodType(
AP::CFunctionAsMethodType(
AP::CFunctionAsMethodParamTupleType(
, member=
instance, self=
AP::ObjCMethodParamTupleType(
AP::ObjCMethodFormalParamTupleType(
AP::ObjCMethodType(
AP::CurriedObjCMethodType(
AP::PartialCurriedObjCMethodType(
, errorParameter=
, replacedWithVoid
, stripsResultOptionality
unable to set up the ObjC bridge!
PostDominatorTree is not up to date!
Computed:
<<invalid location>>
 SIL function 
 <<null>>
sil-print-on-error
Printing SIL function bodies in crash diagnostics.
Projection Path [
Field: 
 of: 
Index: 
 into: 
BitwiseCast to: 
UpCast to: 
RefCast to: 
 Box over: 
 TailElems of: 
<unexpected projection> into: 
Different function representations
Different number of results
Different return value conventions
ABI incompatible return values
Different error result conventions
ABI incompatible error results
Different number of parameters
Differing parameter convention
ABI incompatible parameter type.
alloc_stack
alloc_ref
alloc_ref_dynamic
alloc_value_buffer
alloc_box
alloc_existential_box
index_addr
tail_addr
index_raw_pointer
function_ref
global_value
integer_literal
float_literal
const_string_literal
class_method
super_method
objc_super_method
upcast
address_to_pointer
pointer_to_address
unchecked_ref_cast
unchecked_addr_cast
unchecked_trivial_bit_cast
unchecked_bitwise_cast
ref_to_raw_pointer
raw_pointer_to_ref
ref_to_unowned
unowned_to_ref
ref_to_unmanaged
unmanaged_to_ref
convert_function
thin_function_to_pointer
pointer_to_thin_function
ref_to_bridge_object
bridge_object_to_ref
bridge_object_to_word
thin_to_thick_function
thick_to_objc_metatype
objc_to_thick_metatype
objc_metatype_to_object
objc_existential_metatype_to_object
unconditional_checked_cast_value
unconditional_checked_cast
mark_dependence
copy_block
copy_value
copy_unowned_value
unchecked_ownership_conversion
strong_pin
is_unique
is_unique_or_pinned
load_borrow
begin_borrow
store_borrow
begin_access
load_unowned
load_weak
mark_uninitialized
mark_uninitialized_behavior
project_value_buffer
project_box
project_existential_box
partial_apply
metatype
value_metatype
existential_metatype
tuple_extract
tuple_element_addr
struct_extract
struct_element_addr
ref_element_addr
ref_tail_addr
unchecked_enum_data
init_enum_data_addr
unchecked_take_enum_data_addr
select_enum
select_enum_addr
select_value
init_existential_addr
init_existential_value
open_existential_addr
init_existential_ref
open_existential_ref
init_existential_metatype
open_existential_metatype
open_existential_box
open_existential_value
open_existential_box_value
project_block_storage
init_block_storage_header
keypath
try_apply
cond_br
switch_value
switch_enum
switch_enum_addr
dynamic_method_br
checked_cast_br
checked_cast_addr_br
checked_cast_value_br
dealloc_stack
dealloc_ref
dealloc_partial_ref
dealloc_value_buffer
dealloc_box
dealloc_existential_box
strong_retain
strong_release
strong_retain_unowned
strong_unpin
unowned_retain
unowned_release
unmanaged_retain_value
unmanaged_release_value
unmanaged_autorelease_value
retain_value
retain_value_addr
release_value
release_value_addr
set_deallocating
autorelease_value
bind_memory
fix_lifetime
destroy_value
end_borrow
end_borrow_argument
end_access
begin_unpaired_access
end_unpaired_access
mark_function_escape
debug_value
debug_value_addr
store_unowned
store_weak
copy_addr
destroy_addr
end_lifetime
inject_enum_addr
deinit_existential_addr
deinit_existential_value
unconditional_checked_cast_addr
unchecked_ref_cast_addr
alloc_global
end_apply
abort_apply
cond_fail
begin_apply
destructure_struct
destructure_tuple
Unknown SIL instruction name
MayRead
MayWrite
MayReadWrite
MayHaveSideEffects
DoesNotRelease
MayRelease
modify
sil-print-no-color
Don't use color when printing SIL
sil-full-demangle
Fully demangle symbol names in SIL output
sil-print-debuginfo
Include debug info in SIL output
sil-print-generic-specialization-info
Include generic specializationinformation info in SIL output
sil_global 
[serialized] 
[let] 
 = {
  // function_ref 
%initval = 
scope 
// type-defs: 
:return
:imp_return
:inlined
:minlined
:cleanup
:art_unreach
:sil
:auto_gen
:in_prologue
 top_level
 auto_gen
 no_loc
 perf_inlined_at 
id: 
loc 
<<placeholder>>
, 0x
 // 
utf8 
utf16 
[strict] 
[invariant] 
[nonatomic] 
[take] 
[copy] 
[trivial] 
[var] 
[rootself] 
[crossmodulerootself] 
[derivedself] 
[derivedselfonly] 
[delegatingself] 
) : 
[nothrow] 
[callee_guaranteed] 
, [tail_elems] 
, case 
, default 
immutable_access 
mutable_access 
 : $
, invoke 
, type 
objc "
root $
stored_property #
gettable_property $
settable_property $
 id 
, getter 
, setter 
, indices [
], indices_equals 
, indices_hash 
optional_wrap : $
optional_chain : $
optional_force : $
, resume 
, unwind 
, normal 
, error 
 !true_count(
 !false_count(
[exact] 
[stack] 
[abort] 
[init] 
[assign] 
[initialization] 
take_always
take_on_success
copy_on_success
 !case_count(
 !default_count(
<initializer>
<anonymous function>
<serialized local context>
<top level code>
<abstract function>
<subscript>
!willSet
!didSet
!getter
!setter
!materializeForSet
!addressor
!mutableAddressor
!allocator
!initializer
!enumelt
!destroyer
!deallocator
!ivarinitializer
!ivardestroyer
!globalaccessor
!globalgetter
!defaultarg
!propertyinit
foreign
objc_selector 
[objc] 
[tail_elems 
, let
, var
, name "
, argno 
public_external 
hidden_external 
shared_external 
private_external 
shared 
 = argument of 
undef<
** = 
// user
// Preds:
call-site
// Generic specialization information for 
// Caller: 
// Parent: 
// Substitutions: 
sil 
[transparent] 
[serializable] 
[thunk] 
[reabstraction_thunk] 
[global_init] 
[noinline] 
[always_inline] 
[Onone] 
[Ospeed] 
[Osize] 
[readonly] 
[readnone] 
[readwrite] 
[_semantics "
[_specialize 
[clang 
 !function_entry_count(
} // end sil function '
sil_scope 
 inlined_at 
sil_stage 
canonical
lowered
import Builtin
import 
import SwiftShims
sil_coverage_map 
sil_default_witness_table 
  no_default
  method 
sil_witness_table 
associated_type 
associated_type_protocol (
dependent
base_protocol 
optional requirement '
': <<not present>>
  conditional_conformance (
sil_vtable 
 [inherited]
 [override]
__tlcd_
trivial
verify-skip-unreachable-must-be-last
verify-abort-on-failure
verifying
Functions with a calling convention with self parameter must have at least one argument for self.: !FTy->hasSelfParam() || !FTy->getParameters().empty()
non-generic function definitions cannot have a generic environment: FTy->isPolymorphic()
generic function definition must have a generic environment: !FTy->isPolymorphic()
entry block cannot have predecessors: entry->pred_empty()
entry point has wrong number of arguments: entry->args_size() == (fnConv.getNumIndirectSILResults() + fnConv.getNumParameters())
entry point argument types do not match function type: matched
entry point address argument must have an indirect calling convention: std::equal(entry->args_begin() + fnConv.getNumIndirectSILResults(), entry->args_end(), fnConv.funcTy->getParameters().begin(), [&](SILArgument *bbarg, SILParameterInfo paramInfo) { if (!bbarg->getType().isAddress()) return true; switch (paramInfo.getConvention()) { default: return false; case ParameterConvention::Indirect_In: case ParameterConvention::Indirect_In_Constant: case ParameterConvention::Indirect_Inout: case ParameterConvention::Indirect_InoutAliasable: case ParameterConvention::Indirect_In_Guaranteed: return true; } })
more than one return block in function: !FoundReturnBlock
more than one throw block in function: !FoundThrowBlock
stack dealloc with empty stack: !state.Stack.empty()
stack dealloc does not match most recent stack alloc: op == state.Stack.back()
operation was not ended before re-beginning it: notAlreadyPresent
operation has already been ended: present
return with stack allocs that haven't been deallocated: state.Stack.empty()
return with operations still active: state.ActiveOps.empty()
encountered 'unwind' when not on unwind path: state.CFG == YieldUnwind
encountered 'return' or 'throw' when on unwind path: state.CFG != YieldUnwind
encountered 'return' before yielding a value in yield_once coroutine: state.CFG == YieldOnceResume
encountered multiple 'yield's along single path: state.CFG != YieldOnceResume
encountered 'yield' on abnormal CFG path: state.CFG == Normal
successor of 'yield' should not be encountered twice: !isa<YieldInst>(term)
inconsistent stack heights entering basic block: state.Stack == foundState.Stack || isUnreachable()
inconsistent active-operations sets entering basic block: state.ActiveOps == foundState.ActiveOps || isUnreachable()
inconsistent coroutine states entering basic block: state.CFG == foundState.CFG
non cond_br critical edges not allowed: !isCriticalEdgePred(TI, Idx)
cond_br with critical edges must not have a non-trivial value: llvm::all_of(CBI->getTrueArgs(), [](SILValue V) -> bool { return V.getOwnershipKind() == ValueOwnershipKind::Trivial; })
cond_br with critical edges must not have a non-trivial value: llvm::all_of(CBI->getFalseArgs(), [](SILValue V) -> bool { return V.getOwnershipKind() == ValueOwnershipKind::Trivial; })
Wrong SILFunction provided to verifyOpenedArchetypes: OpenedArchetypes.getFunction() == F
Only opened archetypes should be registered in SILFunction: getOpenedArchetypeOf(CanType(KV.first))
Definition of every registered opened archetype should be an existing instruction in a current SILFunction: Def->getFunction() == F
Must be a predecessor of each successor.: FoundSelfInSuccessor
Must be a successor of each predecessor.: FoundSelfInPredecessor
SIL tokens can only be produced as the results of specific instructions: isLegalSILTokenProducer(value)
result of alloc_stack must be an address type: AI->getType().isAddress()
alloc_ref must allocate class: AI->isObjC() || AI->getType().getClassOrBoundGenericClass()
operand of alloc_ref_dynamic must be of metatype type: Metadata->getType().is<AnyMetatypeType>()
operand of alloc_ref_dynamic must have a metatype representation: metaTy->hasRepresentation()
alloc_ref_dynamic @objc requires operand of ObjC metatype: metaTy->getRepresentation() == MetatypeRepresentation::ObjC
alloc_ref_dynamic requires operand of thick metatype: metaTy->getRepresentation() == MetatypeRepresentation::Thick
Operand value should be an address: I->getOperand()->getType().isAddress()
Operand value should be a Builtin.UnsafeValueBuffer: I->getOperand()->getType().is<BuiltinUnsafeValueBufferType>()
alloc_box must have a @box type: boxTy
result of alloc_box must be an object: AI->getType().isObject()
An alloc_box with a mark_uninitialized user can not have any other users.: none_of(AI->getUses(), [](Operand *Op) -> bool { return isa<MarkUninitializedInst>(Op->getUser()); }) || AI->hasOneUse()
alloc_existential_box #0 result should be a value: exType.isObject()
alloc_existential_box must be used with a boxed existential type: exType.canUseExistentialRepresentation(F.getModule(), ExistentialRepresentation::Boxed, AEBI->getFormalConcreteType())
index_addr must produce an address: IAI->getType().isAddress()
index_addr must produce an address of the same type as its base: IAI->getType() == IAI->getBase()->getType()
index_addr index must be of a builtin integer type: IAI->getIndex()->getType().is<BuiltinIntegerType>()
tail_addr must produce an address: IAI->getType().isAddress()
tail_addr index must be of a builtin integer type: IAI->getIndex()->getType().is<BuiltinIntegerType>()
index_raw_pointer must produce a RawPointer: IAI->getType().is<BuiltinRawPointerType>()
index_raw_pointer base must be a RawPointer: IAI->getBase()->getType().is<BuiltinRawPointerType>()
index_raw_pointer index must be of a builtin integer type: IAI->getIndex()->getType().is<BuiltinIntegerType>()
result of function_ref
function_ref should have a context-free function result: !fnType->getExtInfo().hasContext()
external declarations of SILFunctions with shared visibility is not allowed: SingleFunction || !hasSharedVisibility(RefF->getLinkage()) || RefF->hasForeignBody()
function_ref inside fragile function cannot reference a private or hidden symbol: (SingleFunction && RefF->isExternalDeclaration()) || RefF->hasValidLinkageForFragileRef()
global_addr must have an address result type: GAI->getType().isAddress()
global_addr cannot refer to a statically initialized object: !GAI->getReferencedGlobal()->isInitializedObject()
global_value must have an address result type: GVI->getType().isObject()
invalid integer literal type: ILI->getType().is<BuiltinIntegerType>()
result type of class_method must match abstracted type of method
result of class_method
result method must be of a context-free function type: !methodType->getExtInfo().hasContext()
operand must be of a class type: operandType.isClassOrClassMetatype()
result must be a method of a class: getMethodSelfType(methodType).isClassOrClassMetatype()
foreign method cannot be dispatched natively: !member.isForeign
extension method cannot be dispatched natively: !isa<ExtensionDecl>(member.getDecl()->getDeclContext())
result type of super_method must match abstracted type of method
result of super_method
super_method must look up a class method: methodClass->getClassOrBoundGenericClass()
native method cannot be dispatched via objc: member.isForeign
result of objc_method
wrong function type representation: methodType->getRepresentation() == SILFunctionTypeRepresentation::ObjCMethod
result type of objc_method must match abstracted type of method
operand type must be an archetype or self-conforming existential: isa<ArchetypeType>(operandInstanceType) || operandInstanceType->isObjCExistentialType()
result of objc_super_method
objc_super_method must look up a class method: methodClass->getClassOrBoundGenericClass()
result of witness_method
witness_method method must be a protocol method: protocol
result of witness_method must have correct representation for protocol: methodType->getRepresentation() == F.getModule().Types.getProtocolWitnessRepresentation(protocol)
result of witness_method must be polymorphic: methodType->isPolymorphic()
method should be polymorphic on Self parameter at depth 0 index 0: selfGenericParam->getDepth() == 0 && selfGenericParam->getIndex() == 0
first non-same-typerequirement should be conformance requirement: selfRequirement && selfRequirement->getKind() == RequirementKind::Conformance
requirement Self parameter must conform to exactly one protocol: conformsTo.size() == 1
requirement Self parameter should be constrained by protocol: conformsTo[0] == protocol
Must have a type dependent operand for the opened archetype: AMI->getTypeDependentOperands().size() == 1
Should not have an operand for the opened existential: AMI->getTypeDependentOperands().empty()
archetype or existential lookup should have abstract conformance: AMI->getConformance().isAbstract()
concrete type lookup requires concrete conformance: AMI->getConformance().isConcrete()
concrete type lookup requires conformance that matches type: conformance->getType()->isEqual(AMI->getLookupType())
Could not find witness table for conformance: AMI->getModule().lookUpWitnessTable(conformance, false)
can't upcast to same type: UI->getType() != UI->getOperand()->getType()
upcast operand must be a class or class metatype instance: UI->getOperand()->getType().is<MetatypeType>()
upcast must convert a class metatype to a class metatype: instClass
upcast must cast to a superclass or an existential metatype: instClass->getDeclaredTypeInContext() ->isBindableToSuperclassOf(opInstTy)
upcast must cast to a superclass or an existential metatype: instTy->isExactSuperclassOf(opInstTy)
Upcast can only upcast in between types of the same SILValueCategory. This prevents address types from being cast to object types or vis-a-versa: UI->getType().getCategory() == UI->getOperand()->getType().getCategory()
upcast must convert a class instance to a class type: ToClass
upcast must cast to a superclass or an existential metatype: ToClass->getDeclaredTypeInContext() ->isBindableToSuperclassOf(FromTy.getSwiftRValueType())
upcast must cast to a superclass or an existential metatype: ToTy.isExactSuperclassOf(FromTy)
address-to-pointer operand must be an address: AI->getOperand()->getType().isAddress()
address-to-pointer result type must be RawPointer: AI->getType().getSwiftRValueType()->isEqual( AI->getType().getASTContext().TheRawPointerType)
unchecked_ref_cast operand must be a value: AI->getOperand()->getType().isObject()
unchecked_ref_cast result must be an object: AI->getType().isObject()
unchecked_ref_cast requires a heap object reference type: SILType::canRefCast(AI->getOperand()->getType(), AI->getType(), AI->getModule())
unchecked_addr_cast operand must be an address: AI->getOperand()->getType().isAddress()
unchecked_addr_cast result must be an address: AI->getType().isAddress()
unchecked_trivial_bit_cast must operate on a value: BI->getOperand()->getType().isObject()
unchecked_trivial_bit_cast must produce a value: BI->getType().isObject()
unchecked_trivial_bit_cast must produce a value of trivial type: BI->getType().isTrivial(F.getModule())
unchecked_bitwise_cast must operate on a value: BI->getOperand()->getType().isObject()
unchecked_bitwise_cast must produce a value: BI->getType().isObject()
ref-to-raw-pointer operand must be a class reference or NativeObject: AI->getOperand()->getType().getSwiftRValueType() ->isAnyClassReferenceType()
ref-to-raw-pointer result must be RawPointer: AI->getType().getSwiftRValueType()->isEqual( AI->getType().getASTContext().TheRawPointerType)
raw-pointer-to-ref result must be a class reference or NativeObject: AI->getType() .getSwiftRValueType()->isBridgeableObjectType() || AI->getType().getSwiftRValueType()->isEqual( AI->getType().getASTContext().TheNativeObjectType)
raw-pointer-to-ref operand must be NativeObject: AI->getOperand()->getType().getSwiftRValueType()->isEqual( AI->getType().getASTContext().TheRawPointerType)
Operand of ref_to_unowned
Result of ref_to_unowned
ref_to_unowned requires unowned type to be loadable: resultType->isLoadable(ResilienceExpansion::Maximal)
Result of ref_to_unowned does not have the operand's type as its referent type: resultType.getReferentType() == operandType
Operand of unowned_to_ref
unowned_to_ref requires unowned type to be loadable: operandType->isLoadable(ResilienceExpansion::Maximal)
Result of unowned_to_ref
Operand of unowned_to_ref does not have the operand's type as its referent type: operandType.getReferentType() == resultType
Operand of ref_to_unmanaged
Result of ref_to_unmanaged
Result of ref_to_unmanaged does not have the operand's type as its referent type: resultType.getReferentType() == operandType
Operand of unmanaged_to_ref
Result of unmanaged_to_ref
Operand of unmanaged_to_ref does not have the operand's type as its referent type: operandType.getReferentType() == resultType
convert_function operand
convert_function result
convert_function cannot change function ABI
thin_function_to_pointer operand
thin_function_to_pointer result
thin_function_to_pointer only works on thin, method or witness_method functions: rep == SILFunctionTypeRepresentation::Thin || rep == SILFunctionTypeRepresentation::Method || rep == SILFunctionTypeRepresentation::WitnessMethod
pointer_to_thin_function result
pointer_to_thin_function operand
pointer_to_thin_function only works on thin, method or witness_method functions: rep == SILFunctionTypeRepresentation::Thin || rep == SILFunctionTypeRepresentation::Method || rep == SILFunctionTypeRepresentation::WitnessMethod
ref_to_bridge_object must convert from a value: RI->getConverted()->getType().isObject()
ref_to_bridge_object must convert from a heap object ref: RI->getConverted()->getType().getSwiftRValueType() ->isBridgeableObjectType()
ref_to_bridge_object must take a Builtin.Word bits operand: RI->getBitsOperand()->getType() == SILType::getBuiltinWordType(F.getASTContext())
ref_to_bridge_object must produce a BridgeObject: RI->getType() == SILType::getBridgeObjectType(F.getASTContext())
bridge_object_to_ref must take a BridgeObject: RI->getConverted()->getType() == SILType::getBridgeObjectType(F.getASTContext())
bridge_object_to_ref must produce a value: RI->getType().isObject()
bridge_object_to_ref must produce a heap object reference: RI->getType().getSwiftRValueType()->isBridgeableObjectType()
bridge_object_to_word must take a BridgeObject: RI->getConverted()->getType() == SILType::getBridgeObjectType(F.getASTContext())
bridge_object_to_word must produce a value: RI->getType().isObject()
bridge_object_to_word must produce a Word: RI->getType() == SILType::getBuiltinWordType(F.getASTContext())
thin_to_thick_function operand
thin_to_thick_function result
thin_to_thick_function operand and result type must differ only  in thinness: opFTy->isPolymorphic() == resFTy->isPolymorphic()
thin_to_thick_function operand and result
results of 
 do not match in count: type1->getNumResults() == type2->getNumResults()
inputs of 
 do not match in count: type1->getParameters().size() == type2->getParameters().size()
result 
 do not match: type1->getResults()[i] == type2->getResults()[i]
input 
 do not match: type1->getParameters()[i] == type2->getParameters()[i]
operand of thin_to_thick_function must be thin: opFTy->getRepresentation() == SILFunctionType::Representation::Thin
result of thin_to_thick_function must be thick: resFTy->getRepresentation() == SILFunctionType::Representation::Thick
operand and result of thin_to_think_function must agree in particulars: adjustedOperandExtInfo == resFTy->getExtInfo()
thick_to_objc_metatype operand
thick_to_objc_metatype result
thick_to_objc_metatype cannot change metatype kinds: TTOCI->getOperand()->getType().is<MetatypeType>() == TTOCI->getType().is<MetatypeType>()
operand of thick_to_objc_metatype must be thick: opTy->getRepresentation() == MetatypeRepresentation::Thick
operand of thick_to_objc_metatype must be ObjC: resTy->getRepresentation() == MetatypeRepresentation::ObjC
thick_to_objc_metatype instance types do not match: opTy->getInstanceType()->isEqual(resTy->getInstanceType())
objc_to_thick_metatype operand
objc_to_thick_metatype result
objc_to_thick_metatype cannot change metatype kinds: OCTTI->getOperand()->getType().is<MetatypeType>() == OCTTI->getType().is<MetatypeType>()
operand of objc_to_thick_metatype must be ObjC: opTy->getRepresentation() == MetatypeRepresentation::ObjC
operand of objc_to_thick_metatype must be thick: resTy->getRepresentation() == MetatypeRepresentation::Thick
objc_to_thick_metatype instance types do not match: opTy->getInstanceType()->isEqual(resTy->getInstanceType())
objc_metatype_to_object must take a value: OMOI->getOperand()->getType().isObject()
objc_metatype_to_object must take an @objc metatype value: fromMetaTy
objc_metatype_to_object must take an @objc metatype value: fromMetaTy->getRepresentation() == MetatypeRepresentation::ObjC
objc_metatype_to_object must produce a value: OMOI->getType().isObject()
objc_metatype_to_object must produce an AnyObject value: OMOI->getType().getSwiftRValueType()->isAnyObject()
objc_metatype_to_object must take an @objc existential metatype value: fromMetaTy
objc_metatype_to_object must take an @objc existential metatype value: fromMetaTy->getRepresentation() == MetatypeRepresentation::ObjC
operand of copy_block should be a block: I->getOperand()->getType().isBlockPointerCompatible()
result of copy_block should be same type as operand: I->getOperand()->getType() == I->getType()
Source value should be an object value: I->getOperand()->getType().isObject()
copy_value is only valid in functions with qualified ownership: !fnConv.useLoweredAddresses() || F.hasQualifiedOwnership()
Operand of unowned_retain
unowned_retain requires unowned type to be loadable: unownedType->isLoadable(ResilienceExpansion::Maximal)
copy_unowned_value is only valid in functions with qualified ownership: F.hasQualifiedOwnership()
Result of load must be an object: LI->getType().isObject()
Load must have a loadable type: !fnConv.useLoweredAddresses() || LI->getType().isLoadable(LI->getModule())
Load operand must be an address: LI->getOperand()->getType().isAddress()
Load operand type and result type mismatch: LI->getOperand()->getType().getObjectType() == LI->getType()
Load with unqualified ownership in a qualified function: !F.hasQualifiedOwnership()
Load with qualified ownership in an unqualified function: F.hasQualifiedOwnership()
load [copy] or load [take] can only be applied to non-trivial types: !LI->getType().isTrivial(LI->getModule())
A load with trivial ownership must load a trivial type: LI->getType().isTrivial(LI->getModule())
Inst with qualified ownership in a function that is not qualified: F.hasQualifiedOwnership()
Result of load must be an object: LBI->getType().isObject()
Load must have a loadable type: !fnConv.useLoweredAddresses() || LBI->getType().isLoadable(LBI->getModule())
Load operand must be an address: LBI->getOperand()->getType().isAddress()
Load operand type and result type mismatch: LBI->getOperand()->getType().getObjectType() == LBI->getType()
result must be same type as operand
begin_access operand must have address type: BAI->getType().isAddress()
access must have known enforcement outside raw stage: BAI->getEnforcement() != SILAccessEnforcement::Unknown
init/deinit accesses cannot use non-static enforcement: BAI->getEnforcement() == SILAccessEnforcement::Static
Result of load must be an object: LUI->getType().isObject()
load_unowned operand must be an unowned address: PointerType.isAddress() && PointerRVType->is<UnownedStorageType>()
Load operand type and result type mismatch: PointerRVType->getReferenceStorageReferent()->getCanonicalType() == LUI->getType().getSwiftRValueType()
Result of load must be an object: LWI->getType().isObject()
Result of weak load must be an optional: LWI->getType().getAnyOptionalObjectType()
load_weak operand must be a weak address: PointerType.isAddress() && PointerRVType->is<WeakStorageType>()
Load operand type and result type mismatch: PointerRVType->getReferenceStorageReferent()->getCanonicalType() == LWI->getType().getSwiftRValueType()
mark_uninitialized instruction can only exist in raw SIL: MU->getModule().getStage() == SILStage::Raw
mark_uninitialized must be an address, class, or box type: Src->getType().isAddress() || Src->getType() .getSwiftRValueType() ->getClassOrBoundGenericClass() || Src->getType().getAs<SILBoxType>()
operand and result type mismatch: Src->getType() == MU->getType()
mark_uninitialized initializer must be a function: InitStorageTy
mark_uninitialized initializer must have one result: SubstInitStorageTy->getResults().size() == 1
storage must be address of initializer's result type
mark_uninitialized setter must be a function: SetterTy
mark_uninitialized setter must have a value and self param: SubstSetterTy->getParameters().size() == 2
self type must match setter's self parameter type
value parameter type must match between initializer and setter
result of mark_uninitialized_behavior should be address of value parameter to setter and initializer
project_box operand should be a value: I->getOperand()->getType().isObject()
project_box operand should be a @box type: boxTy
project_box result should be address of boxed type: I->getType() == boxTy->getFieldType(F.getModule(), I->getFieldIndex())
project_box with more than one user when a user is a mark_uninitialized: I->hasOneUse() || none_of(I->getUses(), [](Operand *Op) -> bool { return isa<MarkUninitializedInst>(Op->getUser()); })
project_existential_box operand must not be address: operandType.isObject()
project_existential_box operand must be boxed existential: operandType.canUseExistentialRepresentation(F.getModule(), ExistentialRepresentation::Boxed)
project_existential_box result must be an address: PEBI->getType().isAddress()
project_existential_box result should be the lowered concrete type of its alloc_existential_box
type of apply instruction doesn't match function result type: AI->getType() == calleeConv.getSILResultType()
nothrow flag used for callee without error result: calleeConv.funcTy->hasErrorResult()
apply instruction cannot call function with error result: !calleeConv.funcTy->hasErrorResult()
cannot call coroutine with normal apply: !calleeConv.funcTy->isCoroutine()
No return apply without an unreachable as a next instruction.: isa<UnreachableInst>(std::next(SILBasicBlock::iterator(AI)))
alignment argument of memory intrinsics must be an integer literal: !isa<SILArgument>(BI->getArguments()[3])
isvolatile argument of memory intrinsics must be an integer literal: !isa<SILArgument>(BI->getArguments()[4])
size argument of memory use markers must be an integer literal: !isa<SILArgument>(BI->getArguments()[0])
llvm.invariant.end parameter #2 must be an integer literal: !isa<SILArgument>(BI->getArguments()[1])
result of partial_apply
result of closure cannot have a thin function type: resultInfo->getExtInfo().hasContext()
substituted callee type should not be generic: !PAI->getSubstCalleeType()->isPolymorphic()
substituted callee type does not match substitutions
result of partial_apply should take as many inputs as were not applied by the instruction: PAI->getArguments().size() + resultInfo->getParameters().size() == substTy->getParameters().size()
applied argument types do not match suffix of function type's inputs: PAI->getArguments()[i]->getType() == substConv.getSILArgumentType(appliedArgStartIdx + i)
applied results do not agree in count with function type: resultInfo->getNumResults() == substTy->getNumResults()
inputs to result function type do not match unapplied inputs of original function: resultInfo->getParameters()[i] == substTy->getParameters()[i]
result type of result function type for partially applied @unowned_inner_pointer function should have @unownedconvention: originalResult == expectedResult
result type of result function type for partially applied @autoreleased function should have @owned convention: originalResult == expectedResult
result type of result function type does not match original function: originalResult == expectedResult
partial_apply should have a single context argument: PAI->getArguments().size() == 1
partial_apply result should have thick convention: resultInfo->getRepresentation() == SILFunctionTypeRepresentation::Thick
partial_apply callee should have thin convention: PAI->getCallee()->getType().castTo<SILFunctionType>() ->getRepresentation() == SILFunctionTypeRepresentation::Thin
partial_apply context must capture generic environment for callee: !PAI->getCalleeFunction()->getGenericEnvironment()
partial_apply context argument must have the same convention as the resulting function's callee convention: substTy->getParameters().back().getConvention() == resultInfo->getCalleeConvention()
partial_apply context argument must be swift-refcounted: isSwiftRefcounted(PAI->getArguments().front()->getType())
metatype instruction must be of metatype type: MI->getType().is<MetatypeType>()
metatype instruction must have a metatype representation: MetaTy->hasRepresentation()
value_metatype instruction must be of metatype type: MI->getType().is<MetatypeType>()
value_metatype instruction must have a metatype representation: MI->getType().castTo<MetatypeType>()->hasRepresentation()
value_metatype result must be formal metatype of lowered operand type: isLoweringOf(MI->getOperand()->getType(), formalInstanceTy)
existential_metatype instruction must be of metatype type: MI->getType().is<ExistentialMetatypeType>()
value_metatype instruction must have a metatype representation: MI->getType().castTo<ExistentialMetatypeType>()->hasRepresentation()
existential_metatype operand must be of protocol type: MI->getOperand()->getType().isAnyExistentialType()
existential_metatype result must be formal metatype of lowered operand type: isLoweringOf(MI->getOperand()->getType(), formalInstanceTy)
objc_protocol must be applied to an @objc protocol: OPI->getProtocol()->isObjC()
objc_protocol must produce a value: classTy.isObject()
objc_protocol must produce a class instance: classDecl
objc_protocol must produce an instance of ObjectiveC.Protocol class: classDecl->getName() == F.getASTContext().Id_Protocol
objc_protocol must produce an instance of ObjectiveC.Protocol class: classDecl->getModuleContext()->getName() == F.getASTContext().Id_ObjectiveC
object instruction is only allowed in a static initializer: false
Result of tuple
Tuple field count mismatch!: TI->getElements().size() == ResTy->getNumElements()
Tuple element arguments do not match tuple type!: TI->getElement(i)->getType().getSwiftRValueType() == ResTy.getElementType(i)
Operand of tuple_extract
result of tuple_extract must be object: EI->getType().isObject()
invalid field index for tuple_extract instruction: EI->getFieldNo() < operandTy->getNumElements()
type of tuple_extract does not match type of element: EI->getType().getSwiftRValueType() == operandTy.getElementType(EI->getFieldNo())
must derive element_addr from address: operandTy.isAddress()
result of tuple_element_addr must be address: EI->getType().isAddress()
must derive tuple_element_addr from tuple: operandTy.is<TupleType>()
invalid field index for element_addr instruction: EI->getFieldNo() < fields.size()
type of tuple_element_addr does not match type of element: EI->getType().getSwiftRValueType() == CanType(fields[EI->getFieldNo()].getType())
StructInst must return a struct: structDecl
Cannot build a struct with unreferenceable storage from elements using StructInst: !structDecl->hasUnreferenceableStorage()
StructInst must produce an object: SI->getType().isObject()
number of struct operands does not match number of stored member variables of struct: opi != opEnd
struct operand type does not match field type: (*opi)->getType() == loweredType
cannot struct_extract from address: operandTy.isObject()
result of struct_extract cannot be address: EI->getType().isObject()
must struct_extract from struct: sd
cannot get address of static property with struct_element_addr: !EI->getField()->isStatic()
cannot load computed property with struct_extract: EI->getField()->hasStorage()
struct_extract field is not a member of the struct: EI->getField()->getDeclContext() == sd
result of struct_extract does not match type of field: loweredFieldTy == EI->getType()
must derive struct_element_addr from address: operandTy.isAddress()
struct_element_addr operand must be struct address: sd
result of struct_element_addr must be address: EI->getType().isAddress()
cannot get address of computed property with struct_element_addr: EI->getField()->hasStorage()
struct_element_addr field is not a member of the struct: EI->getField()->getDeclContext() == sd
result of struct_element_addr does not match type of field: loweredFieldTy == EI->getType()
Operand of ref_element_addr
result of ref_element_addr must be lvalue: EI->getType().isAddress()
cannot get address of computed property with ref_element_addr: EI->getField()->hasStorage()
ref_element_addr operand must be a class instance: cd
ref_element_addr field must be a member of the class: EI->getField()->getDeclContext() == cd
result of ref_element_addr does not match type of field: loweredFieldTy == EI->getType()
Operand of ref_tail_addr
result of ref_tail_addr must be lvalue: RTAI->getType().isAddress()
ref_tail_addr operand must be a class instance: cd
EnumInst must return an enum: ud
EnumInst case must be a case of the result enum type: UI->getElement()->getParentEnum() == ud
EnumInst must produce an object: UI->getType().isObject()
EnumInst must take an argument iff the element does: UI->hasOperand() == UI->getElement()->hasAssociatedValues()
EnumInst operand must be an object: UI->getOperand()->getType().isObject()
EnumInst operand type does not match type of case: caseTy == UI->getOperand()->getType()
UncheckedEnumData must take an enum operand: ud
UncheckedEnumData case must be a case of the enum operand type: UI->getElement()->getParentEnum() == ud
UncheckedEnumData case must have a data type: UI->getElement()->getArgumentInterfaceType()
UncheckedEnumData must take an address operand: UI->getOperand()->getType().isObject()
UncheckedEnumData must produce an address: UI->getType().isObject()
UncheckedEnumData result does not match type of enum case: caseTy == UI->getType()
InitEnumDataAddrInst must take an enum operand: ud
InitEnumDataAddrInst case must be a case of the enum operand type: UI->getElement()->getParentEnum() == ud
InitEnumDataAddrInst case must have a data type: UI->getElement()->hasAssociatedValues()
InitEnumDataAddrInst must take an address operand: UI->getOperand()->getType().isAddress()
InitEnumDataAddrInst must produce an address: UI->getType().isAddress()
InitEnumDataAddrInst result does not match type of enum case
UncheckedTakeEnumDataAddrInst must take an enum operand: ud
UncheckedTakeEnumDataAddrInst case must be a case of the enum operand type: UI->getElement()->getParentEnum() == ud
UncheckedTakeEnumDataAddrInst case must have a data type: UI->getElement()->getArgumentInterfaceType()
UncheckedTakeEnumDataAddrInst must take an address operand: UI->getOperand()->getType().isAddress()
UncheckedTakeEnumDataAddrInst must produce an address: UI->getType().isAddress()
UncheckedTakeEnumDataAddrInst result does not match type of enum case: caseTy == UI->getType()
select_enum operand must be an object: SEI->getEnumOperand()->getType().isObject()
select_enum_addr operand must be an address: SEI->getEnumOperand()->getType().isAddress()
select_value operand must be an object: SVI->getOperand()->getType().isObject()
select_value should always have a default: I->hasDefault()
select_value default operand must match type of instruction
select_value case operands should refer to integer literals: il
select_value dispatches on same case value more than once: !seenCaseValues.count(elt)
select_value case value must match type of operand
select_value case result must match type of instruction
init_existential_addr must be applied to an address: exType.isAddress()
init_existential_addr must be used with an opaque existential type: exType.canUseExistentialRepresentation(F.getModule(), ExistentialRepresentation::Opaque, AEI->getFormalConcreteType())
init_existential_addr result type must be the lowered concrete type at the right abstraction level
init_existential_addr payload must be a lowering of the formal concrete type: isLoweringOf(AEI->getLoweredConcreteType(), AEI->getFormalConcreteType())
init_existential_value must not be used on addresses: !concreteType.isAddress()
init_existential_value result must not be an address: !IEI->getType().isAddress()
init_existential_value operand must be lowered to the right abstraction level for the existential
init_existential_value operand must be a lowering of the formal concrete type: isLoweringOf(IEI->getOperand()->getType(), IEI->getFormalConcreteType())
open_existential_addr must be applied to address: operandType.isAddress()
open_existential_addr must be applied to opaque existential: operandType.canUseExistentialRepresentation(F.getModule(), ExistentialRepresentation::Opaque)
open_existential_addr result must be an address: OEI->getType().isAddress()
open_existential_addr result must be an opened existential archetype: archetype
Archetype opened by open_existential_addr should be registered in SILFunction: OpenedArchetypes.getOpenedArchetypeDef(archetype) == OEI
open_existential_addr uses that consumes or mutates but is not opened for mutation: allowedAccessKind == OpenedExistentialAccess::Mutable || !isMutatingOrConsuming(OEI)
init_existential_ref operand must be a class instance: concreteType.getSwiftRValueType()->isBridgeableObjectType()
init_existential_ref must be used with a class existential type: IEI->getType().canUseExistentialRepresentation(F.getModule(), ExistentialRepresentation::Class, IEI->getFormalConcreteType())
init_existential_ref result must not be an address: IEI->getType().isObject()
init_existential_ref operand must be lowered to the right abstraction level for the existential
init_existential_ref operand must be a lowering of the formal concrete type: isLoweringOf(IEI->getOperand()->getType(), IEI->getFormalConcreteType())
open_existential_ref operand must not be address: operandType.isObject()
open_existential_ref operand must be class existential: operandType.canUseExistentialRepresentation(F.getModule(), ExistentialRepresentation::Class)
open_existential_ref result must be an address: OEI->getType().isObject()
open_existential_ref result must be an opened existential archetype: archetype
Archetype opened by open_existential_ref should be registered in SILFunction: OpenedArchetypes.getOpenedArchetypeDef(archetype) == OEI
init_existential_metatype operand must not be an address: operandType.isObject()
init_existential_metatype operand must be a metatype: operandType.is<MetatypeType>()
init_existential_metatype operand must have a representation: operandType.castTo<MetatypeType>()->hasRepresentation()
init_existential_metatype result must be an existential metatype: resultType.is<ExistentialMetatypeType>()
init_existential_metatype result must not be an address: resultType.isObject()
init_existential_metatype result must have a representation: MetaTy->hasRepresentation()
init_existential_metatype result must match representation of operand: MetaTy->getRepresentation() == operandType.castTo<MetatypeType>()->getRepresentation()
open_existential_metatype operand must not be address: operandType.isObject()
open_existential_metatype operand must be existential metatype: operandType.is<ExistentialMetatypeType>()
open_existential_metatype operand must have a representation: operandType.castTo<ExistentialMetatypeType>()->hasRepresentation()
open_existential_metatype result must not be address: resultType.isObject()
open_existential_metatype result must be metatype: resultType.is<MetatypeType>()
open_existential_metatype result must have a representation: resultType.castTo<MetatypeType>()->hasRepresentation()
open_existential_metatype result must match representation of operand: operandType.castTo<ExistentialMetatypeType>()->getRepresentation() == resultType.castTo<MetatypeType>()->getRepresentation()
metatype depth mismatch in open_existential_metatype result: isa<MetatypeType>(resultInstTy)
ill-formed existential metatype in open_existential_metatype operand: operandInstTy.isExistentialType()
open_existential_metatype result must be an opened existential metatype: archetype
Archetype opened by open_existential_metatype should be registered in SILFunction: OpenedArchetypes.getOpenedArchetypeDef(archetype) == I
open_existential_box operand must not be address: operandType.isObject()
open_existential_box operand must be boxed existential: operandType.canUseExistentialRepresentation(F.getModule(), ExistentialRepresentation::Boxed)
open_existential_box result must be an address: OEI->getType().isAddress()
open_existential_box result must be an opened existential archetype: archetype
Archetype opened by open_existential_box should be registered in SILFunction: OpenedArchetypes.getOpenedArchetypeDef(archetype) == OEI
open_existential_value must not be applied to address: !operandType.isAddress()
open_existential_value must be applied to opaque existential: operandType.canUseExistentialRepresentation( F.getModule(), ExistentialRepresentation::Opaque)
open_existential_value result must not be an address: !OEI->getType().isAddress()
open_existential_value result must be an opened existential archetype: archetype
Archetype opened by open_existential should be registered in SILFunction: OpenedArchetypes.getOpenedArchetypeDef(archetype) == OEI
open_existential_box_value result must not be an address: !OEI->getType().isAddress()
open_existential_box_value result not an opened existential archetype: archetype
Archetype opened by open_existential_box_value should be registered in SILFunction: OpenedArchetypes.getOpenedArchetypeDef(archetype) == OEI
operand must be an address: PBSI->getOperand()->getType().isAddress()
operand must be a @block_storage type: storageTy
result must be an address: PBSI->getType().isAddress()
result must be the capture type of the @block_storage type: storageTy->getCaptureType() == captureTy
block storage operand must be an address: IBSHI->getBlockStorage()->getType().isAddress()
block storage operand must be a @block_storage type: storageTy
invoke function operand must be a value: IBSHI->getInvokeFunction()->getType().isObject()
invoke function operand must be a function: invokeTy
invoke function operand must be a c function: invokeTy->getRepresentation() == SILFunctionType::Representation::CFunctionPointer
invoke function must take at least one parameter: invokeTy->getParameters().size() >= 1
invoke function must not take reified generic parameters: !invokeTy->getGenericSignature() || invokeTy->getExtInfo().isPseudogeneric()
invoke function must take block storage as @inout_aliasable parameter: storageParam.getConvention() == ParameterConvention::Indirect_InoutAliasable
invoke function must take block storage type as first parameter: storageParam.getType() == storageTy
result must be a value: IBSHI->getType().isObject()
result must be a function: blockTy
result must be a cdecl block function: blockTy->getRepresentation() == SILFunctionType::Representation::Block
result must have same results as invoke function: blockTy->getResults() == invokeTy->getResults()
result must match all parameters of invoke function but the first: blockTy->getParameters().size() + 1 == invokeTy->getParameters().size()
result must match all parameters of invoke function but the first: blockParams[i] == invokeBlockParams[i]
keypath result must be an object type: kpTy.isObject()
keypath result must be a generic type: kpBGT
keypath result must be a key path type: kpBGT->getDecl() == C.getKeyPathDecl() || kpBGT->getDecl() == C.getWritableKeyPathDecl() || kpBGT->getDecl() == C.getReferenceWritableKeyPathDecl()
keypath root type should match root type of keypath pattern: baseTy == pattern->getRootType().subst(patternSubs)->getCanonicalType()
keypath value type should match value type of keypath pattern: leafTy == pattern->getValueType().subst(patternSubs)->getCanonicalType()
property decl should be a member of the component base type: property->getDeclContext() == baseTy->getAnyNominal()
property must be stored: false
component type should match the maximal abstraction of the formal type: propertyTy.getObjectType() == loweredComponentTy.getObjectType()
getter should be a thin function: substGetterType->getRepresentation() == SILFunctionTypeRepresentation::Thin
getter should have one parameter: substGetterType->getNumParameters() == 1 + hasIndices
getter base parameter should be @in: baseParam.getConvention() == ParameterConvention::Indirect_In
getter base parameter should match base of component: baseParam.getType() == loweredBaseTy.getSwiftRValueType()
indices pointer should be trivial: indicesParam.getConvention() == ParameterConvention::Direct_Unowned
indices pointer should be an UnsafeRawPointer: indicesParam.getType()->getAnyNominal() == C.getUnsafeRawPointerDecl()
getter should have one result: substGetterType->getNumResults() == 1
getter result should be @out: result.getConvention() == ResultConvention::Indirect
getter result should match the maximal abstraction of the formal component type: result.getType() == loweredComponentTy.getSwiftRValueType()
setter should be a thin function: substSetterType->getRepresentation() == SILFunctionTypeRepresentation::Thin
setter should have two parameters: substSetterType->getNumParameters() == 2 + hasIndices
setter value parameter should be @in: newValueParam.getConvention() == ParameterConvention::Indirect_In
setter base parameter should be @in or @inout: baseParam.getConvention() == ParameterConvention::Indirect_In || baseParam.getConvention() == ParameterConvention::Indirect_Inout
setter value should match the maximal abstraction of the formal component type: newValueParam.getType() == loweredComponentTy.getSwiftRValueType()
setter should have no results: substSetterType->getNumResults() == 0
operand must match type required by pattern
pattern index formal type doesn't match lowered type: isLoweringOf(index.LoweredType, index.FormalType)
key path pattern with indexes must have equals operator: equals
must have two arguments: substEqualsType->getParameters().size() == 2
indices pointer should be trivial: param.getConvention() == ParameterConvention::Direct_Unowned
must have one result: substEqualsType->getResults().size() == 1
result should be unowned: substEqualsType->getResults()[0].getConvention() == ResultConvention::Unowned
result should be Bool: substEqualsType->getResults()[0].getType()->getAnyNominal() == C.getBoolDecl()
key path pattern with indexes must have hash operator: hash
must have two arguments: substHashType->getParameters().size() == 1
indices pointer should be an UnsafeRawPointer: param.getType()->getAnyNominal() == C.getUnsafeRawPointerDecl()
must have one result: substHashType->getResults().size() == 1
result should be unowned: substHashType->getResults()[0].getConvention() == ResultConvention::Unowned
result should be Int: substHashType->getResults()[0].getType()->getAnyNominal() == C.getIntDecl()
component without indexes must not have equals/hash: !component.getComputedPropertyIndexEquals() && !component.getComputedPropertyIndexHash()
chaining component should unwrap optional: baseTy->getAnyOptionalObjectType()->isEqual(componentTy)
key path with chaining component should have optional result: leafTy->getAnyOptionalObjectType()
forcing component should unwrap optional: baseTy->getAnyOptionalObjectType()->isEqual(componentTy)
wrapping component should wrap optional: componentTy->getAnyOptionalObjectType()->isEqual(baseTy)
final component should match leaf value type of key path type: CanType(baseTy) == CanType(leafTy)
return value type does not match return type of function: functionResultType == instResultType
throw in function that doesn't have an error result: fnType->hasErrorResult()
throw operand type does not match error result type of function: functionResultType == instResultType
yield in non-coroutine function: fnType->isCoroutine()
wrong number of yielded values for function: yieldedValues.size() == yieldInfos.size()
resume dest of 'yield' must be uniquely used: YI->getResumeBB()->getSinglePredecessorBlock()
yielded value does not match yield type of coroutine: yieldedValues[i]->getType() == yieldType
unwind dest of 'yield' must be uniquely used: YI->getUnwindBB()->getSinglePredecessorBlock()
unwind in non-coroutine function: F.getLoweredFunctionType()->isCoroutine()
normal destination of try_apply must take one argument: normalBB->args_size() == 1
normal destination of try_apply must take argument of normal result type
try_apply must call function with error result: calleeConv.funcTy->hasErrorResult()
error destination of try_apply must take one argument: errorBB->args_size() == 1
error destination of try_apply must take argument of error result type
branch has wrong number of arguments for dest bb: BI->getArgs().size() == BI->getDestBB()->args_size()
branch argument cannot be a witness_method or an objc method_inst: !(isa<MethodInst>(branchArg) && cast<MethodInst>(branchArg)->getMember().isForeign)
branch argument types do not match arguments for dest bb: std::equal(BI->getArgs().begin(), BI->getArgs().end(), BI->getDestBB()->args_begin(), [&](SILValue branchArg, SILArgument *bbArg) { return verifyBranchArgs(branchArg, bbArg); })
condition of conditional branch must have Int1 type: CBI->getCondition()->getType() == SILType::getBuiltinIntegerType(1, CBI->getCondition()->getType().getASTContext())
true branch has wrong number of arguments for dest bb: CBI->getTrueArgs().size() == CBI->getTrueBB()->args_size()
identical destinations: CBI->getTrueBB() != CBI->getFalseBB()
true branch argument types do not match arguments for dest bb: std::equal(CBI->getTrueArgs().begin(), CBI->getTrueArgs().end(), CBI->getTrueBB()->args_begin(), [&](SILValue branchArg, SILArgument *bbArg) { return verifyBranchArgs(branchArg, bbArg); })
false branch has wrong number of arguments for dest bb: CBI->getFalseArgs().size() == CBI->getFalseBB()->args_size()
false branch argument types do not match arguments for dest bb: std::equal(CBI->getFalseArgs().begin(), CBI->getFalseArgs().end(), CBI->getFalseBB()->args_begin(), [&](SILValue branchArg, SILArgument *bbArg) { return verifyBranchArgs(branchArg, bbArg); })
switch_value operand should be either of an integer or function type: Ty.is<BuiltinIntegerType>() || Ty.is<SILFunctionType>()
switch_value case value should have the same type as its operand: value->getType() == Ty
switch_value case destination cannot take arguments: dest->args_empty()
switch_value default destination cannot take arguments: SVI->getDefaultBB()->args_empty()
switch_enum operand must be an object: SOI->getOperand()->getType().isObject()
switch_enum operand is not an enum: uDecl
switch_enum dispatches on enum element that is not part of its type: elt->getDeclContext() == uDecl
switch_enum dispatches on same enum element more than once: unswitchedElts.count(elt)
switch_enum destination for case w/ args must take 1 argument: dest->getArguments().size() == 1
switch_enum destination for case w/ args must take 0 or 1 arguments: dest->getArguments().size() == 0 || dest->getArguments().size() == 1
switch_enum destination bbarg must match case arg type: eltArgTy == bbArgTy
switch_enum destination bbarg type must not be an address: !dest->getArguments()[0]->getType().isAddress()
switch_enum destination for no-argument case must take no arguments: dest->getArguments().size() == 0
nonexhaustive switch_enum must have a default destination: unswitchedElts.empty() || SOI->hasDefault()
Switch enum default block should have one argument: SOI->getDefaultBB()->getNumArguments() == 1
Switch enum default block should have one argument that is the same as the input type: SOI->getDefaultBB()->getArgument(0)->getType() == SOI->getOperand()->getType()
switch_enum default destination must take no arguments: SOI->getDefaultBB()->args_empty()
switch_enum_addr operand must be an address: SOI->getOperand()->getType().isAddress()
switch_enum_addr operand must be an enum: uDecl
switch_enum_addr dispatches on enum element that is not part of its type: elt->getDeclContext() == uDecl
switch_enum_addr dispatches on same enum element more than once: unswitchedElts.count(elt)
switch_enum_addr destination must take no BB args: dest->getArguments().size() == 0
nonexhaustive switch_enum_addr must have a default destination: unswitchedElts.empty() || SOI->hasDefault()
switch_enum_addr default destination must take no arguments: SOI->getDefaultBB()->args_empty()
method must be @objc: DMBI->getMember().getDecl()->isObjC()
operand must have metatype type: operandType.getSwiftRValueType()->is<MetatypeType>()
operand must have metatype of class or class-bound type: operandType.getSwiftRValueType()->castTo<MetatypeType>() ->getInstanceType()->mayHaveSuperclass()
true bb for dynamic_method_br must take an argument: DMBI->getHasMethodBB()->args_size() == 1
bb argument for dynamic_method_br must be of the method's type: getDynamicMethodType(operandType, DMBI->getMember()) .getSwiftRValueType() ->isBindableTo(bbArgTy.getSwiftRValueType())
success dest of checked_cast_br must take one argument: CBI->getSuccessBB()->args_size() == 1
success dest block argument of checked_cast_br must match type of cast: CBI->getSuccessBB()->args_begin()[0]->getType() == CBI->getCastType()
failure dest of checked_cast_br in unqualified ownership sil must take no arguments: F.hasQualifiedOwnership() || CBI->getFailureBB()->args_empty()
checked_cast_addr_br src must be an address: CCABI->getSrc()->getType().isAddress()
checked_cast_addr_br dest must be an address: CCABI->getDest()->getType().isAddress()
success dest block of checked_cast_addr_br must not take an argument: CCABI->getSuccessBB()->args_size() == 0
failure dest block of checked_cast_addr_br must not take an argument: CCABI->getFailureBB()->args_size() == 0
success dest of checked_cast_value_br must take one argument: CBI->getSuccessBB()->args_size() == 1
success dest block argument of checked_cast_value_br must match type of cast: CBI->getSuccessBB()->args_begin()[0]->getType() == CBI->getCastType()
failure dest of checked_cast_value_br in unqualified ownership sil must take no arguments: F.hasQualifiedOwnership() || CBI->getFailureBB()->args_empty()
Operand of dealloc_stack must be an alloc_stack: isa<SILUndef>(DI->getOperand()) || isa<AllocStackInst>(DI->getOperand())
Operand of dealloc_ref must be object: DI->getOperand()->getType().isObject()
Operand of dealloc_ref must be of class type: DI->getOperand()->getType().getClassOrBoundGenericClass()
First operand of dealloc_partial_ref must be object: DPRI->getInstance()->getType().isObject()
First operand of dealloc_partial_ref must be of class type: class1
Second operand of dealloc_partial_ref must be a metatype: DPRI->getMetatype()->getType().is<MetatypeType>()
Second operand of dealloc_partial_ref must be a class metatype: class2
First operand not superclass of second instance type: class1
operand must be a @box type: boxTy
operand must be an object: DI->getOperand()->getType().isObject()
dealloc_existential_box must be applied to a value: exType.isObject()
dealloc_existential_box must be applied to a boxed existential: exType.canUseExistentialRepresentation(F.getModule(), ExistentialRepresentation::Boxed)
Operand of strong_retain
strong_retain is only in functions with unqualified ownership: !F.hasQualifiedOwnership()
Operand of release
strong_release is only in functions with unqualified ownership: !F.hasQualifiedOwnership()
Operand of strong_retain_unowned
strong_retain_unowned requires unowned type to be loadable: unownedType->isLoadable(ResilienceExpansion::Maximal)
strong_retain_unowned is only in functions with unqualified ownership: !F.hasQualifiedOwnership()
unowned_retain is only in functions with unqualified ownership: !F.hasQualifiedOwnership()
Operand of unowned_release
unowned_release requires unowned type to be loadable: unownedType->isLoadable(ResilienceExpansion::Maximal)
unowned_release is only in functions with unqualified ownership: !F.hasQualifiedOwnership()
retain_value is only in functions with unqualified ownership: !F.hasQualifiedOwnership()
Source value should be an address value: I->getOperand()->getType().isAddress()
release_value is only in functions with unqualified ownership: !F.hasQualifiedOwnership()
Source value must be a reference type: I->getOperand()->getType().hasRetainablePointerRepresentation()
Source value must be a reference type or optional thereof: I->getOperand()->getType().hasRetainablePointerRepresentation()
BI must have a bound type: BI->getBoundType()
bind_memory base be a RawPointer: BI->getBase()->getType().is<BuiltinRawPointerType>()
bind_memory index must be a Word: BI->getIndex()->getType() == SILType::getBuiltinWordType(F.getASTContext())
destroy_value is only valid in functions with qualified ownership: !fnConv.useLoweredAddresses() || F.hasQualifiedOwnership()
end_borrow can only relate the same types ignoring value category: EBI->getBorrowedValue()->getType().getObjectType() == EBI->getOriginalValue()->getType().getObjectType()
operand of end_access must be a begin_access: BAI != nullptr
aborting access must apply to init or deinit: BAI->getAccessKind() == SILAccessKind::Init || BAI->getAccessKind() == SILAccessKind::Deinit
unpaired access can never use unknown enforcement: I->getEnforcement() != SILAccessEnforcement::Unknown
address operand must have address type: I->getSource()->getType().isAddress()
scratch buffer operand
Can't store from an address source: SI->getSrc()->getType().isObject()
Can't store a non loadable type: !fnConv.useLoweredAddresses() || SI->getSrc()->getType().isLoadable(SI->getModule())
Must store to an address dest: SI->getDest()->getType().isAddress()
Store operand type and dest type mismatch: SI->getDest()->getType().getObjectType() == SI->getSrc()->getType()
Qualified store in function with unqualified ownership?!: !F.hasQualifiedOwnership()
store [init] or store [assign] can only be applied to non-trivial types: !SI->getSrc()->getType().isTrivial(SI->getModule())
A store with trivial ownership must store a type with trivial ownership: Src->getType().isTrivial(SI->getModule()) || Src.getOwnershipKind() == ValueOwnershipKind::Trivial
assign instruction can only exist in raw SIL: AI->getModule().getStage() == SILStage::Raw
Can't assign from an address source: Src->getType().isObject()
Must store to an address dest: Dest->getType().isAddress()
Store operand type and dest type mismatch: Dest->getType().getObjectType() == Src->getType()
mark_function_escape instruction can only exist in raw SIL: MFE->getModule().getStage() == SILStage::Raw
MFE must refer to variable addrs: Elt->getType().isAddress()
Can't store from an address source: SUI->getSrc()->getType().isObject()
store_unowned address operand must be an unowned address: PointerType.isAddress() && PointerRVType->is<UnownedStorageType>()
Store operand type and dest type mismatch: PointerRVType->getReferenceStorageReferent()->getCanonicalType() == SUI->getSrc()->getType().getSwiftRValueType()
Can't store from an address source: SWI->getSrc()->getType().isObject()
store_weak must be of an optional value: SWI->getSrc()->getType().getAnyOptionalObjectType()
store_weak address operand must be a weak address: PointerType.isAddress() && PointerRVType->is<WeakStorageType>()
Store operand type and dest type mismatch: PointerRVType->getReferenceStorageReferent()->getCanonicalType() == SWI->getSrc()->getType().getSwiftRValueType()
Src value should be lvalue: SI->getSrc()->getType().isAddress()
Dest address should be lvalue: SI->getDest()->getType().isAddress()
Store operand type and dest type mismatch: SI->getDest()->getType() == SI->getSrc()->getType()
Operand of destroy_addr must be address: DI->getOperand()->getType().isAddress()
InjectEnumAddrInst must take an enum operand: IUAI->getOperand()->getType().is<EnumType>() || IUAI->getOperand()->getType().is<BoundGenericEnumType>()
InjectEnumAddrInst case must be a case of the enum operand type: IUAI->getElement()->getParentEnum() == IUAI->getOperand()->getType().getEnumOrBoundGenericEnum()
InjectEnumAddrInst must take an address operand: IUAI->getOperand()->getType().isAddress()
deinit_existential_addr must be applied to an address: exType.isAddress()
deinit_existential_addr must be applied to an opaque existential: exType.canUseExistentialRepresentation( F.getModule(), ExistentialRepresentation::Opaque)
deinit_existential_value must not be applied to an address: !exType.isAddress()
deinit_existential_value must be applied to an opaque existential: exType.canUseExistentialRepresentation( F.getModule(), ExistentialRepresentation::Opaque)
unchecked_ref_cast_addr operand must be an address: srcTy.isAddress()
unchecked_ref_cast_addr result must be an address: destTy.isAddress()
alloc_global inside fragile function cannot reference a private or hidden symbol: RefG->isSerialized() || hasPublicVisibility(RefG->getLinkage())
operand of end_apply must be a begin_apply: isa<BeginApplyResult>(AI->getOperand()) && cast<BeginApplyResult>(AI->getOperand())->isTokenResult()
operand of abort_apply must be a begin_apply: isa<BeginApplyResult>(AI->getOperand()) && cast<BeginApplyResult>(AI->getOperand())->isTokenResult()
cond_fail operand must be a Builtin.Int1: CFI->getOperand()->getType() == SILType::getBuiltinIntegerType(1, F.getASTContext())
length mismatch in callee yields vs. begin_apply results: yields.size() == yieldResults.size()
callee yield type does not match begin_apply result type: yieldResults[i]->getType() == calleeConv.getSILType(yields[i])
begin_apply instruction cannot call function with error result: !calleeConv.funcTy->hasErrorResult()
must call yield_once coroutine with begin_apply: calleeConv.funcTy->getCoroutineKind() == SILCoroutineKind::YieldOnce
 must be an address
BuiltinUnsafeValueBufferType
 must have type 
select_enum operand must be an enum: eDecl
select_enum dispatches on enum element that is not part of its type: elt->getDeclContext() == eDecl
select_enum dispatches on same enum element more than once: unswitchedElts.count(elt)
select_enum case operand must match type of instruction
nonexhaustive select_enum must have a default destination: unswitchedElts.empty() || I->hasDefault()
select_enum default operand must match type of instruction
 must be an object: value->getType().isObject()
 must have reference semantics: value->getType().isReferenceCounted(F.getModule())
 must be an object
UnownedStorageType
 must not have type 
TupleType
callee operand
callee of apply without substitutions must not be polymorphic: !fnTy->isPolymorphic()
callee of apply with substitutions must be polymorphic: fnTy->isPolymorphic()
Replacement type of a substitution contains an ArchetypeType that does not exist in the Caller's generic param list.: isArchetypeValidInFunction(A, &F)
Number of opened archetypes and dynamic self in the substitutions list should match the number of type dependent operands: FoundOpenedArchetypes.size() + hasDynamicSelf == AI->getTypeDependentOperands().size()
dynamic self operand without dynamic self type: hasDynamicSelf
self metadata operand in function without self metadata param: AI->getFunction()->hasSelfMetadataParam()
wrong self metadata operand: (ValueBase *)V == AI->getFunction()->getSelfMetadataArgument()
opened archetype operand should refer to a SIL instruction: isa<SingleValueInstruction>(V)
opened archetype operand should define an opened archetype: Archetype
opened archetype operand does not correspond to any opened archetype from the substitutions list: FoundOpenedArchetypes.count(Archetype)
Archetype to be substituted must be valid in function.: isArchetypeValidInFunction(A, AI->getFunction())
Opened archetype should be registered in SILFunction: Def
Use of an opened archetype should be dominated by a definition of this opened archetype: Def == AI || Dominance->properlyDominates(cast<SILInstruction>(Def), AI)
calling convention difference between types: site.getOrigCalleeType()->getRepresentation() == site.getSubstCalleeType()->getRepresentation()
substituted callee type should not be generic: !site.getSubstCalleeType()->isPolymorphic()
apply doesn't have right number of arguments for function: site.getNumArguments() == substConv.getNumSILArguments()
operand of 'apply' doesn't match function input type
value checked cast src and dest must be objects: fromTy.isObject() && toTy.isObject()
invalid value checked cast src or dest types: isOpaque || canUseScalarCheckedCastInstructions(F.getModule(), fromCanTy, toCanTy)
metatype checked cast cannot change metatype representation: fromMetaty->getRepresentation() == toMetaty->getRepresentation()
metatype checked cast cannot check thin metatypes: fromMetaty->getRepresentation() != MetatypeRepresentation::Thin
downcast operand must be a class type: fromCanTy.getClassOrBoundGenericClass()
downcast must convert to a class type: toCanTy.getClassOrBoundGenericClass()
downcast must convert to a subclass: SILType::getPrimitiveObjectType(fromCanTy). isBindableToSuperclassOf(SILType::getPrimitiveObjectType(toCanTy))
AnyMetatypeType
BuiltinRawPointerType
Parameter: 
UnmanagedStorageType
 must have reference semantics: objectTy.isReferenceCounted(F.getModule())
 cannot apply to a function type: !value->getType().is<SILFunctionType>()
global_addr/value must be the type of the variable it references: GAI->getType().getObjectType() == RefG->getLoweredType()
global_addr/value inside fragile function cannot reference a private or hidden symbol: RefG->isSerialized() || hasPublicVisibility(RefG->getLinkage())
SILFunctionType
init_existential instruction must have the right number of conformances: conformances.size() == protocols.size()
init_existential of class existential with non-class type: concreteType->mayHaveSuperclass() || (concreteType.isExistentialType() && concreteType.getExistentialLayout().requiresClass())
init_existential of subclass existential with wrong type: layout.superclass->isExactSuperclassOf(concreteType)
init_existential instruction must have conformances in proper order: conformances[i].getRequirement() == protocols[i]->getDecl()
Could not find witness table for conformance.: F.getModule().lookUpWitnessTable(conformance, false)
Result of alloc_ref
Can't tail allocate with ObjC class: NumTypes == 0 || !ARI->isObjC()
count needs integer type: Counts[Idx].get()->getType().is<BuiltinIntegerType>()
Function containing dynamic self type must have self parameter: I->getFunction()->hasSelfParam() || I->getFunction()->hasSelfMetadataParam()
Instruction should contain a type dependent operand for every used open archetype or dynamic self: false
Instruction with null parent: BB
Can't be in a parent block if it is empty: !BB->empty()
Non-terminators cannot be the last in a block: &*BB->rbegin() != I
Terminator must be the last in block: &*BB->rbegin() == I
instruction user is null?: user
instruction used by unparented instruction: userI->getParent()
instruction used by instruction not in same static initializer: userI->getParent() == BB
instruction used by instruction in different function: userI->getFunction() == &F
use doesn't actually belong to instruction it claims to: operands.begin() <= use && use <= operands.end()
instruction has null operand: operand.get()
instruction uses value of unparented instruction: valueI->getParent()
instruction uses value which is not in same static initializer: valueI->getParent() == BB
instruction uses value of instruction from another function: valueI->getFunction() == &F
instruction isn't dominated by its operand: Dominance->properlyDominates(valueI, I)
static initializer inst cannot refer to SILArgument: !I->isStaticInitializerInst()
instruction uses value of unparented instruction: valueBBA->getParent()
bb argument value from another function: valueBBA->getFunction() == &F
instruction isn't dominated by its bb argument operand: Dominance->dominates(valueBBA->getParent(), I->getParent())
instruction's operand's owner isn't the instruction: operand.getUser() == I
operand value isn't used by operand: isInValueUses(&operand)
debug scope of instruction belongs to a different function: !DS || DS->getParentFunction() == I->getFunction()
Scope contains conflicting debug variables for one function argument: DebugVars[ArgNo] == VarInfo.Name
return locations are only allowed on branch and return instructions: InstKind == SILInstructionKind::BranchInst || InstKind == SILInstructionKind::ReturnInst || InstKind == SILInstructionKind::UnreachableInst
artificial locations are only allowed on Unreachable instructions: InstKind == SILInstructionKind::UnreachableInst
l-value types are not legal in SIL: !isa<LValueType>(rvalueType)
AST function types are not legal in SIL: !isa<AnyFunctionType>(rvalueType)
ImplicitlyUnwrappedOptional is not legal in SIL values: optKind == OTK_Optional
metatypes in SIL must have a representation: metatype->hasRepresentation()
Operand is of an ArchetypeType that does not exist in the Caller's generic param list.: isArchetypeValidInFunction(A, F)
Use of an opened archetype should be dominated by a definition of this opened archetype: I == nullptr || Def == I || Dominance->properlyDominates(cast<SILInstruction>(Def), I)
 type mismatch!
  argument: 
  expected: 
 ownership kind mismatch!
SIL verification failed: 
Verifying instruction:
In function:
All SIL functions must have a debug scope: DebugScope
Scope of SIL function points to different function: DebugScope->Parent.get<SILFunction *>() == &F
Basic blocks cannot be empty: !BB.empty()
Basic blocks must end with a terminator instruction: isa<TermInst>(BB.back())
vtable entry for 
 must be ABI-compatible
Symbol redefined: 
Vtable redefined: 
Vtable entry for function: 
not in cache!
Witness table redefined: 
Default witness table redefined: 
sil-ownership-verifier-enable-testing
Put the sil ownership verifier in testing mode. See comment in SILOwnershipVerifier.cpp above option for more information.
Function: '
    Owned function parameter without life ending uses!
Value: 
Non trivial values, non address values, and non guaranteed function args must have at least one lifetime ending use?!
Found use after free due to unvisited non lifetime ending uses?!
    Remaining Users:
User:
Block: bb
Error! Found a leak due to a consuming post-dominance failure!
    Value: 
    Post Dominating Failure Blocks:
        bb
Found use after free?!
Consuming User: 
Non Consuming User: 
Found over consume?!
User: 
    Function: '
    Subobject projection with life ending uses!
    Lifetime Ending User: 
    Guaranteed function parameter with life ending uses!
Have operand with incompatible ownership?!
BaseValue: 
Conv: 
Error! Argument ownership kind does not match terminator!
Terminator: 
Argument: 
Expected convention: 
Actual convention:   
fully_bound 
subtype_of_existential 
literal=
involves_type_vars 
#defaultable_bindings=
bindings={
(subtypes of) 
(supertypes of) 
(default from 
try!
attempt to evaluate editor placeholder
utf16CodeUnitCount
utf8CodeUnitCount
isASCII
 is an immutable capture
 is immutable
 is a 'let' constant
 is a get-only property
 setter is inaccessible
subscript is immutable
subscript setter is inaccessible
subscript is get-only
 is a function
 is a method
 is not settable
literals are not mutable
unary operator
binary operator
function call
method call
 returns immutable value
implicit conversion from '
' requires a temporary
result of conditional operator '? :' is never mutable
boolValue
.boolValue
).boolValue
 () -> 
) != nil)
 as AnyObject)
String.CharacterView.Index
(rawValue: 
.rawValue
.map { 
UIColor
UIImage
NSColor
NSImage
 = arg
(arg: 
(arg)
<#Result#>
<#arg#>
 _ in 
 _,_ in 
 _,_,_ in 
---Attempting to salvage and emit diagnostics---
---Ambiguity error: 
 solutions found---
---Ambiguous solution #
type-checking unresolved member
--- Solution ---
--- Resolved target type ---
Testing constraints for consistency: 
versus: 
Consistent!
Not consistent!
Disabling bind constraint: 
---Propagating constraints---
(increasing score due to 
use of an unavailable declaration
attempting to fix the source
force of an implicitly unwrapped optional
user conversion
function conversion
non-default literal
collection upcast conversion
value to optional
empty-existential conversion
key path subscript
value-to-pointer conversion
(solution is worse than the best solution)
Comparing declarations
Found cached comparison: 
comparison result: 
not better
better
comparing solutions 
Comparing 
 viable solutions
(attempting fix 
(failed constraint 
Constraint solver largest system
LargestNumComponentsSplit
# of connected components split
LargestNumSimplifyIterations
# of simplification iterations
LargestNumUnsimplifiedConstraints
# of constraints not simplified
LargestNumSimplifiedConstraints
# of constraints simplified
LargestNumDisjunctionTerms
# of disjunction terms explored
LargestNumDisjunctions
# of disjunctions explored
LargestNumTypeVariableBindings
# of type variable bindings attempted
LargestNumTypeVariablesBound
# of type variables bound
LargestSolutionAttemptNumber
# of the largest solution attempt
Active bindings: 
(trying 
(found solution 
---Constraint graph---
---Connected components---
(solving component #
failed component #
finished component #
(composed solution 
(found solution)
(assuming 
--- Solving candidate for shrinking at 
<invalid range>
--- No Solutions ---
--- Solutions ---
---Constraint solving for the expression at 
CalleeCandidateInfo for '
': closeness=
 candidates:
<<EXPR>>
 - uncurry level 
 - type: 
 - type <<NONFUNCTION>>: 
callbackStorage
.parameter
%arg.
tempSelf
tmp1
tmp2
 as! 
fix: force optional
fix: optional chaining
fix: force downcast
fix: add address-of
fix: as to as!
disjunction
 (remembered)
[disabled] 
 bind 
 equal 
 bind param 
 bind to pointer 
 subtype 
 conv 
 bridging conv 
 arg conv 
 arg tuple conv 
 operator arg tuple conv 
 operator arg conv 
 conforms to 
 literal conforms to 
 checked cast to 
 Self type of 
 applicable fn 
 dynamicType type of 
 @escaping type of 
 opened archetype of 
 key path from 
 key path projecting 
 optional with object type 
 bound to 
decl 
decl-via-dynamic 
decl-via-bridge 
decl-via-unwrapped-optional 
base type
tuple index 
key path application
: value] == 
[(implicit) .
 can default to 
[tuple-to-tuple]
[scalar-to-tuple]
[deep equality]
[superclass]
[class-metatype-to-object]
[existential-metatype-to-object]
[protocol-metatype-to-object]
[inout-to-pointer]
[array-to-pointer]
[string-to-pointer]
[pointer-to-pointer]
[lvalue-to-rvalue]
[existential]
[metatype-to-existential-metatype]
[existential-metatype-to-metatype]
[value-to-optional]
[optional-to-optional]
[force-unchecked]
[array-upcast]
[dictionary-upcast]
[set-upcast]
[hashable-to-anyhashable]
[cf-toll-free-bridge-to-objc]
[objc-toll-free-bridge-to-cf]
Constraints:
Adjacencies:
fixed
Equivalence class:
Contracting constraint 
constraint vector and map have different sizes
adjacency vector and map have different sizes
constraint index out-of-range
constraint map provides wrong index into vector
adjacency index out-of-range
adjacency map provides wrong index into vector
adjacency information should have been removed
adjacency information has higher degree than # of constraints
missing adjacency information for type variable
wrong number of adjacencies for type variable
extraneous adjacency info for type variable
  type variable=
 vs. 
Constraint graph verification failed: 
type variable not present in its representative's equiv class
representative and an equivalent type variable's representative
wrong graph node index
null graph node
constraint graph doesn't know about constraint
type variable in constraint not known
type variable doesn't know about constraint
type variable = 
, constraint = 
constraint = 
locator@
array element
archetype '
associated type '
apply argument
apply function
optional payload
comparing call argument #
 to parameter #
closure result
constructor member
function argument
function result
generator element type
generic argument #
instance type
member reference base
named tuple element #
unresolved member
parent type
rvalue adjustment
scalar to tuple
sequence iterator type
subscript index
subscript member
subscript result
tuple element #
key path component #
requirement 
witness 
opened generic
conditional requirement #
type parameter requirement #
(overload set choice binding 
index_a
index_b
_findStringSwitchCase
cases
'%1$s' (aka '%2$s')
) != nil
#selector(
getter: 
setter: 
Selector(
 ?? <#default value#>
 as Any
String(describing: 
forKeyPath
context
addObserver
removeObserver
init(nilLiteral:)
unsafeDowncast
UnsafeMutableRawPointer(
UnsafeMutableRawPointer(mutating: 
UnsafeRawPointer(
UnsafePointer(
UnsafeMutablePointer(mutating: 
.assumingMemoryBound(to: 
.self)
.bindMemory(to: 
.self, capacity: <#capacity#>)
(bitPattern: 
UInt32(bitPattern: 
UInt64(bitPattern: 
(bitPattern: UInt
32(bitPattern: Int32(
64(bitPattern: Int64(
32(bitPattern: 
64(bitPattern: 
(bitPattern: UInt(
.bitPattern))
.bitPattern)
.bitPattern
UInt(bitPattern: 
Int(bitPattern: 
Int(
UInt(
.self
).self
fileprivate 
open 
pctmp%u
__builtin_pc_before
__builtin_pc_after
debugPrint
$builtin_postPrint
$builtin_log_scope_exit
$builtin_log_scope_entry
$builtin_send_data
$builtin_log_with_id
tmp%u
.swift
 -> Never
UIApplicationDelegate
UIKit
NSApplicationDelegate
AppKit
NSStringFromClass
if #available(
, *) {
, *)
String(
 += 1
 -= 1
.successor()
.predecessor()
it has been removed in Swift 3
stride
MemoryLayout<
 -> ... 
 -> (
 -> ...
indirect 
Fixed score: 
Type variables:
Overload choices:
 as 
Constraint restrictions:
base type 
key path application root 
tuple 
Disjunction choices:
 is #
Opened types:
 opens 
Opened existential types:
 opens to 
Defaulted constraints: 
Fixes:
Score: 
Contextual Type: 
Type Variables:
Active Constraints:
 [lvalue allowed]
 [inout allowed]
 equivalent to 
Inactive Constraints:
Retired Constraints:
Resolved overloads:
  selected overload set choice 
Failed constraint:
---Solution---
--- Solution #
 ---
---Type-checked expression---
---Initial constraints for the given expression---
shallow type-checking
$match
!= nil
validating
final 
prefix 
postfix 
structs
Protocol requirement signature:
Requirement signature: 
Canonical requirement signature: 
 -> '
    fatalError("
 has not been implemented")
defining default constructor for
parameter requirement
_convertBoolToObjCBool
_convertObjCBoolToBool
_convertBoolToDarwinBoolean
_convertDarwinBooleanToBool
_convertErrorToNSError
_convertNSErrorToError
an enum case raw value
a global variable initializer
a property initializer
a default argument
a catch pattern
a catch guard expression
try? 
try! 
_FileReferenceLiteralType
_ImageLiteralType
_ColorLiteralType
ExtendedGraphemeClusterType
UnicodeScalarType
Generic signature: 
Canonical generic signature: 
member
None
Some
public 
typealias 
 = <#type#>
required 
Conformance access path for 
 is 
NSCoding
@objc(
@objc(<#prefixed Objective-C class name#>)
 [failed constraint 
Cannot infer associated types for imported conformance:
_Default_
_replPrintLiteralString
_replDebugPrintln
boolean
floating-point
$generator
convenience 
%0.2f
(closure)
[EMPTY]
DISJOIN(
_colorLiteralRed
green
blue
imageLiteralResourceName
fileReferenceLiteralResourceName
type-checking
forbidden typecheck occurred: 
typechecker.type(of:)
typechecker.withoutActuallyEscaping(_:do:)
typechecker._openExistential(_:do:)
could not find '
' in parent class
could not deserialize type for '
could not deserialize extension
Cross-reference to module '
... 
with type 
in an extension in module '
in an extension in any module
(infix)
(prefix)
(postfix)
(unknown operator filter)
(getter)
(setter)
(materializeForSet)
(addressor)
(mutableAddressor)
(willSet)
(didSet)
(unknown accessor kind)
generic param #
unknown xref kind 
*** DESERIALIZATION FAILURE (please include this section in any bug report) ***
top-level value not found
If you're seeing a crash here, try passing -Xfrontend -disable-serialization-nested-type-lookup-table
base is not a nominal type
cross-reference to generic param for non-generic type
generic argument index out of bounds
If you're seeing a crash here, check that your SDK and dependencies match the versions used to build
result not found
result is ambiguous
multiple matching base values
couldn't decode type
declaration is not a nominal type
reading specialized conformance for
reading inherited conformance for
cross-referencing conformance for
If you're seeing a crash here, check that your SDK and dependencies are at least as new as the versions used to build
reading conformance for
While deserializing decl #
XREF
MEMBERS
PROTOCOL_CONFORMANCE_XREF
NORMAL_PROTOCOL_CONFORMANCE_ID
SIL_LAYOUT
INHERITED_PROTOCOL_CONFORMANCE
SPECIALIZED_PROTOCOL_CONFORMANCE
NORMAL_PROTOCOL_CONFORMANCE
ABSTRACT_PROTOCOL_CONFORMANCE
PRIVATE_DISCRIMINATOR
LOCAL_DISCRIMINATOR
SIL_GENERIC_ENVIRONMENT
GENERIC_SIGNATURE
LAYOUT_REQUIREMENT
GENERIC_REQUIREMENT
GENERIC_PARAM
GENERIC_PARAM_LIST
TOP_LEVEL_CODE_DECL_CONTEXT
DEFAULT_ARGUMENT_INITIALIZER_CONTEXT
PATTERN_BINDING_INITIALIZER_CONTEXT
ABSTRACT_CLOSURE_EXPR_CONTEXT
XREF_INITIALIZER_PATH_PIECE
XREF_GENERIC_PARAM_PATH_PIECE
XREF_OPERATOR_OR_ACCESSOR_PATH_PIECE
XREF_EXTENSION_PATH_PIECE
XREF_VALUE_PATH_PIECE
XREF_TYPE_PATH_PIECE
DECL_CONTEXT
FOREIGN_ERROR_CONVENTION
PARAMETERLIST_ELT
PARAMETERLIST
VAR_PATTERN
TYPED_PATTERN
ANY_PATTERN
NAMED_PATTERN
TUPLE_PATTERN_ELT
TUPLE_PATTERN
PAREN_PATTERN
Optimize_DECL_ATTR
ImplicitlyUnwrappedOptional_DECL_ATTR
DowngradeExhaustivityCheck_DECL_ATTR
RestatedObjCConformance_DECL_ATTR
StaticInitializeObjCMetadata_DECL_ATTR
ObjCRuntimeName_DECL_ATTR
Implements_DECL_ATTR
GKInspectable_DECL_ATTR
DiscardableResult_DECL_ATTR
Versioned_DECL_ATTR
CDecl_DECL_ATTR
ShowInInterface_DECL_ATTR
WarnUnqualifiedAccess_DECL_ATTR
Indirect_DECL_ATTR
SwiftNativeObjCRuntimeBase_DECL_ATTR
Rethrows_DECL_ATTR
Alignment_DECL_ATTR
Testable_DECL_ATTR
SynthesizedProtocol_DECL_ATTR
ObjCNonLazyRealization_DECL_ATTR
NSApplicationMain_DECL_ATTR
ObjCBridged_DECL_ATTR
Effects_DECL_ATTR
Ownership_DECL_ATTR
RawDocComment_DECL_ATTR
SetterAccess_DECL_ATTR
AccessControl_DECL_ATTR
SILStored_DECL_ATTR
Override_DECL_ATTR
Convenience_DECL_ATTR
NonMutating_DECL_ATTR
Mutating_DECL_ATTR
Consuming_DECL_ATTR
ObjCMembers_DECL_ATTR
Specialize_DECL_ATTR
Inlineable_DECL_ATTR
FixedLayout_DECL_ATTR
NonObjC_DECL_ATTR
RequiresStoredPropertyInits_DECL_ATTR
Transparent_DECL_ATTR
Postfix_DECL_ATTR
Prefix_DECL_ATTR
Infix_DECL_ATTR
Dynamic_DECL_ATTR
Semantics_DECL_ATTR
Inline_DECL_ATTR
UnsafeNoObjCTaggedPointer_DECL_ATTR
UIApplicationMain_DECL_ATTR
LLDBDebuggerFunction_DECL_ATTR
Lazy_DECL_ATTR
NSManaged_DECL_ATTR
IBOutlet_DECL_ATTR
IBInspectable_DECL_ATTR
IBDesignable_DECL_ATTR
IBAction_DECL_ATTR
NSCopying_DECL_ATTR
Exported_DECL_ATTR
NoReturn_DECL_ATTR
Optional_DECL_ATTR
Required_DECL_ATTR
ObjC_DECL_ATTR
Final_DECL_ATTR
Available_DECL_ATTR
SILGenName_DECL_ATTR
PRECEDENCE_GROUP_DECL
DESTRUCTOR_DECL
EXTENSION_DECL
SUBSCRIPT_DECL
ENUM_ELEMENT_DECL
ENUM_DECL
CLASS_DECL
INFIX_OPERATOR_DECL
POSTFIX_OPERATOR_DECL
PREFIX_OPERATOR_DECL
DEFAULT_WITNESS_TABLE
PROTOCOL_DECL
PATTERN_BINDING_DECL
FUNC_DECL
PARAM_DECL
VAR_DECL
CONSTRUCTOR_DECL
STRUCT_DECL
ASSOCIATED_TYPE_DECL
GENERIC_TYPE_PARAM_DECL
TYPE_ALIAS_DECL
SIL_BOX_TYPE
SIL_BLOCK_STORAGE_TYPE
EXISTENTIAL_METATYPE_TYPE
OPENED_EXISTENTIAL_TYPE
DYNAMIC_SELF_TYPE
UNCHECKED_OPTIONAL_TYPE
SIL_FUNCTION_TYPE
OPTIONAL_TYPE
UNBOUND_GENERIC_TYPE
REFERENCE_STORAGE_TYPE
DICTIONARY_TYPE
ARRAY_SLICE_TYPE
GENERIC_FUNCTION_TYPE
BOUND_GENERIC_SUBSTITUTION
BOUND_GENERIC_TYPE
PROTOCOL_COMPOSITION_TYPE
ARCHETYPE_TYPE
INOUT_TYPE
LVALUE_unused_TYPE
METATYPE_TYPE
FUNCTION_TYPE
TUPLE_TYPE_ELT
TUPLE_TYPE
PAREN_TYPE
NOMINAL_TYPE
DEPENDENT_MEMBER_TYPE
GENERIC_TYPE_PARAM_TYPE
NAME_ALIAS_TYPE
While deserializing 
extension of '
Decl #
Unexpected end of file
reading default witness table for
loading conformances for
finishing conformance for
serialized conformances do not match requirement signature
(see "While..." info below)
While reading from
System
Library
UInt128
CFErrorDomain
NSNotificationName
__swift native
SWIFT_EXTENSION
accessibility
NSAccessibility
<imports>
CoreServices
MacTypes
OSErr
OSStatus
OptionBits
FourCharCode
OSType
kUnknownType
UTF32Char
UniChar
UTF16Char
UTF8Char
ProcessSerialNumber
CarbonCore
BackupCore
DiskSpaceRecovery
MacErrors
UnicodeUtilities
OSServices
IconStorage
SystemSound
KeychainCore
SecurityCore
Power
WSMethodInvocation
WSProtocolHandler
WSTypes
<swift-imported-modules>
<bridging-header-import>
APIs deprecated as of iOS 7 and earlier are unavailable in Swift
APIs deprecated as of OS X 10.9 and earlier are unavailable in Swift
<main>
-swift_
-clang_
__swift__
-Werror=non-modular-include-in-framework-module
-std=gnu11
-fobjc-runtime=ios-7.0
-DSWIFT_CLASS_EXTRA=__attribute__((annotate("__swift native")))
-DSWIFT_PROTOCOL_EXTRA=__attribute__((annotate("__swift native")))
-DSWIFT_EXTENSION_EXTRA=__attribute__((annotate("__swift native")))
-DSWIFT_ENUM_EXTRA=__attribute__((annotate("__swift native")))
-D_ISO646_H_
-D__ISO646_H
-DSWIFT_SDK_OVERLAY_APPKIT_EPOCH=2
-DSWIFT_SDK_OVERLAY_FOUNDATION_EPOCH=8
-DSWIFT_SDK_OVERLAY2_SCENEKIT_EPOCH=3
-DSWIFT_SDK_OVERLAY_GAMEPLAYKIT_EPOCH=1
-DSWIFT_SDK_OVERLAY_SPRITEKIT_EPOCH=1
-DSWIFT_SDK_OVERLAY_COREIMAGE_EPOCH=2
-DSWIFT_SDK_OVERLAY_DISPATCH_EPOCH=2
-DSWIFT_SDK_OVERLAY_PTHREAD_EPOCH=1
-DSWIFT_SDK_OVERLAY_COREGRAPHICS_EPOCH=0
-DSWIFT_SDK_OVERLAY_UIKIT_EPOCH=2
__SWIFT_COMPILER_VERSION
glibc.modulemap
-Xclang
--sysroot
-fmodules-validate-system-headers
-detailed-preprocessing-record
-fmodule-format=raw
-iapinotes-modules
-fapinotes-swift-version=
-fmodule-feature
-fembed-bitcode
-mcpu=cyclone
-march=z196
extern int __swift __attribute__((unavailable));
-mmacosx-version-min=
-mios-version-min=
-mios-simulator-version-min=
-mtvos-version-min=
-mtvos-simulator-version-min=
-mwatchos-version-min=
-mwatchos-simulator-version-min=
Create
Make
GetTypeID
typeID
NSInvocation
Release
Retain
Autorelease
Core Foundation objects are automatically memory managed
This Objective-C class has only been forward-declared; import its owning module to use it
cannot find Swift declaration for this class
cannot find Swift declaration for this protocol
OS_object
OS_os_log
NSManagedObject
CoreData
__Anonymous_field
Variadic function is unavailable
Functions that may return more than one time (annotated with the 'returns_twice' attribute) are unavailable in Swift
SInt8
SInt16
SInt64
Float80
Byte
SignedByte
ItemCount
ByteCount
UniCharCount
intptr_t
uintptr_t
__swift_uint8_t
__swift_uint16_t
__swift_uint32_t
__swift_uint64_t
__swift_int8_t
__swift_int16_t
__swift_int32_t
__swift_int64_t
__swift_intptr_t
__swift_uintptr_t
rsize_t
__swift_ptrdiff_t
__swift_size_t
__swift_ssize_t
u_int8_t
u_int16_t
u_int32_t
u_int64_t
__gnuc_va_list
SInt
dispatch_block_t
__swift_shims_dispatch_block_t
__swift_shims_dispatch_data_t
NSStringEncoding
_DispatchBlock
dispatch_data_t
AnyClass
Dispatch
'id' is not available in Swift; use 'Any'
_rawValue
Mutable
__Unnamed_
use [] to construct an empty option set
superseded by import of 
use subscripting
NSOrderedSet
NSMeasurement
importing
completing conformance for
... to
Cannot look up associated type for imported conformance:
importing (mirrored)
(bridging header)
loading import-as-members from
...for
loading members for
importing (inherited)
classifying
__CF_NAMED_ENUM
OBJC_ENUM
SWIFT_ENUM
SWIFT_ENUM_NAMED
OBJC_OPTIONS
SWIFT_OPTIONS
DYLD_BOOL
swift1_unavailable
importing macro
use 'nil' instead of this imported macro
CFSTR
self:
initWithTitle
delegate
cancelButtonTitle
destructiveButtonTitle
otherButtonTitles
Notification
init(
NSXMLDTDKind
CF_USE_OSBYTEORDER_H
CGVECTOR_DEFINED
FALSE
NSEDGEINSETS_DEFINED
NSGEOMETRY_TYPES_SAME_AS_CGGEOMETRY_TYPES
NSINTEGER_DEFINED
NS_BLOCKS_AVAILABLE
NS_UNICHAR_IS_EIGHT_BIT
TRUE
DISPATCH_SWIFT_OVERLAY
CVaListPointer
_NSZone
Boolean
uint
nsigned
varargs
info
swift.lookup
<<<<<<< 
>>>>>>> 
elseif
sourceLocation
FileReference
Image
Color
dsohandle
exported
kind
__always
NSKeyedArchiverClassName
NSKeyedArchiverEncodeNonGenericSubclassesOnly
 @escaping 
 { get set }
oldValue
mutable addressor
file:
class, 
enum 'case'
__behavior
: <# Type #>
dynamicType
type(of: 
safe
unsafe
resourceName
fileReferenceLiteral
colorLiteralRed
targetEnvironment(simulator)
_endian
_runtime
canImport
targetEnvironment
_compiler_version
string literal
a unary comparison, such as '>=2.2'
target environment
import conditional
endianness
operating system
architecture
'__shared'
'shared'
throws 
rethrows 
 break
self.
renamed
, introduced:
else 
__owned
 <#type#>
'inout'
IteratorProtocol
RawRepresentable
Equatable
Hashable
Comparable
_ErrorCodeProtocol
OptionSet
_BridgedNSError
_BridgedStoredNSError
_CFObject
_SwiftNewtypeWrapper
CodingKey
Encodable
Decodable
_ObjectiveCBridgeable
_DestructorSafeContainer
ExpressibleByArrayLiteral
ExpressibleByBooleanLiteral
ExpressibleByDictionaryLiteral
ExpressibleByExtendedGraphemeClusterLiteral
ExpressibleByFloatLiteral
ExpressibleByIntegerLiteral
_ExpressibleByStringInterpolation
ExpressibleByStringLiteral
ExpressibleByNilLiteral
ExpressibleByUnicodeScalarLiteral
_ExpressibleByColorLiteral
_ExpressibleByImageLiteral
_ExpressibleByFileReferenceLiteral
_ExpressibleByBuiltinBooleanLiteral
_ExpressibleByBuiltinUTF16ExtendedGraphemeClusterLiteral
_ExpressibleByBuiltinExtendedGraphemeClusterLiteral
_ExpressibleByBuiltinFloatLiteral
_ExpressibleByBuiltinIntegerLiteral
_ExpressibleByBuiltinStringLiteral
_ExpressibleByBuiltinUTF16StringLiteral
_ExpressibleByBuiltinUnicodeScalarLiteral
_ExpressibleByBuiltinConstStringLiteral
_ExpressibleByBuiltinConstUTF16StringLiteral
allZeros
ArrayLiteralElement
_bridgeToObjectiveC
_code
CodingKeys
container
CoreGraphics
CoreMedia
CGFloat
CVarArg
decodeIfPresent
Decoder
decoder
Element
encodeIfPresent
Encoder
encoder
fromRaw
hashValue
initStorage
initialValue
intValue
KeyedDecodingContainer
KeyedEncodingContainer
keyedBy
keyPath
makeIterator
Iterator
_nsErrorDomain
ObjectiveC
_ObjectiveCType
_OptionalNilComparisonType
rawValue
RawValue
some
storage
stringValue
superDecoder
superEncoder
SwiftObject
toRaw
_value
_Class
__derived_enum_equals
__derived_struct_equals
AssignmentPrecedence
CastingPrecedence
DefaultPrecedence
FunctionArrowPrecedence
TernaryPrecedence
_MaxBuiltinIntegerType
IntegerLiteralType
nilLiteral
integerLiteral
_builtinIntegerLiteral
_MaxBuiltinFloatType
FloatLiteralType
floatLiteral
_builtinFloatLiteral
BooleanLiteralType
_builtinBooleanLiteral
booleanLiteral
ExtendedGraphemeClusterLiteralType
_builtinExtendedGraphemeClusterLiteral
extendedGraphemeClusterLiteral
UnicodeScalarLiteralType
_builtinUnicodeScalarLiteral
unicodeScalarLiteral
stringLiteral
_builtinUTF16StringLiteral
_builtinStringLiteral
_builtinConstUTF16StringLiteral
_builtinConstStringLiteral
StringLiteralType
stringInterpolation
stringInterpolationSegment
arrayLiteral
dictionaryLiteral
_getBuiltinLogicValue
className
_ErrorType
Code
_nsError
RangeReplaceableCollection
UInt64
UInt16
UInt8
Substring
AnyHashable
MutableCollection
AnyKeyPath
PartialKeyPath
WritableKeyPath
ReferenceWritableKeyPath
OpaquePointer
AutoreleasingUnsafeMutablePointer
Never
pointee
Void
ObjCBool
_getBool
_mixForSynthesizedHashValue
_mixInt
array.append_element
reserveCapacityForAppend
array.reserve_capacity_for_append
_unimplementedInitializer
_undefined
_stdlib_isOSVersionAtLeast
_arrayForceCast
_arrayConditionalCast
_dictionaryUpCast
_dictionaryDownCast
_dictionaryDownCastConditional
_setUpCast
_setDownCast
_setDownCastConditional
_convertPointerToPointerArgument
_convertInOutToPointerArgument
_convertMutableArrayToPointerArgument
_convertConstArrayToPointerArgument
_convertConstStringToUTF8PointerArgument
_allocateUninitializedArray
_deallocateUninitializedArray
_forceBridgeFromObjectiveC
_conditionallyBridgeFromObjectiveC
_forceBridgeFromObjectiveC_bridgeable
_conditionallyBridgeFromObjectiveC_bridgeable
_bridgeAnythingToObjectiveC
_bridgeAnyObjectToAny
_convertToAnyHashable
_diagnoseUnexpectedNilOptional
_getErrorEmbeddedNSError
unsafeBitCast
_projectKeyPathAny
_projectKeyPathPartial
_projectKeyPathReadOnly
_projectKeyPathWritable
_projectKeyPathReferenceWritable
NSErrorPointer
NSZone
CBool
CChar
CUnsignedChar
CUnsignedShort
CUnsignedInt
CUnsignedLong
CUnsignedLongLong
CUnsignedInt128
CWideChar
CChar16
CChar32
CSignedChar
CShort
CInt
CLong
CLongLong
CInt128
CFloat
CDouble
DarwinBoolean
float0
int0
uint0
(file)
local context
explicit closure discriminator=
autoclosure discriminator=
 extension
pattern binding initializer
default argument initializer
error_type
original_type
unresolved_type
builtin_integer_type
bit_width
word_sized
builtin_float_type
builtin_raw_pointer_type
builtin_native_object_type
builtin_bridge_object_type
builtin_unknown_object_type
builtin_unsafe_value_buffer_type
builtin_vector_type
num_elements
<<null>>
name_alias_type
paren_type
tuple_type
tuple_type_elt
unowned_storage_type
unmanaged_storage_type
weak_storage_type
enum_type
struct_type
class_type
protocol_type
metatype_type
existential_metatype_type
module_type
dynamic_self_type
archetype_type
opened_existential_id
conforms_to
assoc_type
opened_existential
nested_type
<<unresolved>>
generic_type_param_type
depth
dependent_member_type
base
function_type
generic_function_type
generic_sig
sil_function_type
sil_block_storage_type
sil_box_type
sil_token_type
array_slice_type
optional_type
implicitly_unwrapped_optional_type
dictionary_type
protocol_composition_type
 any_object
lvalue_type
inout_type
unbound_generic_type
bound_generic_class_type
bound_generic_enum_type
bound_generic_struct_type
type_variable_type
representation
brace_stmt
return_stmt
defer_stmt
if_stmt
(**NULL STATEMENT**)
guard_stmt
while_stmt
do_stmt
do_catch_stmt
repeat_while_stmt
for_each_stmt
(where
switch_stmt
case_stmt
case_label_item
break_stmt
continue_stmt
fallthrough_stmt
fail_stmt
throw_stmt
pattern_paren
pattern_tuple
 names=
pattern_named
pattern_any
pattern_typed
pattern_var
pattern_let
pattern_is
pattern_enum_element
optional_some_element
pattern_bool
 false)
 true)
pattern_expr
type_error
type_attributed
 attrs=
type_function
type_array
type_dictionary
type_tuple
type_composite
type_metatype
type_protocol
type_inout
type_shared
type_ident
component
 id='
 bind=
 type='
pattern
#available
import_decl
 exported
 kind=
extension_decl
pattern_binding_decl
enum_case_decl
top_level_code_decl
if_config_decl
#else:
#if:
precedence_group_decl 
associativity 
assignment 
missing_member_decl 
infix_operator_decl 
precedence 
 <null>
prefix_operator_decl 
postfix_operator_decl 
generic_type_param
 depth=
 index=
associated_type_decl
 default=
 where requirements: 
 overridden=
<<<unresolved>>>
enum_decl
 @_fixed_layout
 @_resilient_layout
struct_decl
class_decl
 @_staticInitializeObjCMetadata
 requirement signature=
var_decl
 let
 non_pattern_init
 storage_kind=
 lazy
subscript_decl
constructor_decl
 failable=
destructor_decl
func_decl
_for=
enum_element_decl
notAccessor
result
parameter_list
convenience_factory
factory
designated
 foreign_error=
,unowned
,owned
,param=
,paramtype=
,resulttype=
ZeroResult
NonZeroResult
ZeroPreservedResult
NilResult
NonNilError
 apiName=
 interface type='
 inout
 shared
 variadic
normal
inherited
default_arg
 expression=
'anonname=
computed_with_mutable_address
stored
stored_with_trivial_accessors
stored_with_observers
addressed
addressed_with_trivial_accessors
addressed_with_observers
inherited_with_observers
computed
<null type>
 access=
 override=
 @objc
 superclass='
 inherits: 
 trailing_semi
error_expr
nil_literal_expr
integer_literal_expr
 negative
 value=
float_literal_expr
boolean_literal_expr
string_literal_expr
 encoding=
 builtin_initializer=
 initializer=
interpolated_string_literal_expr
(**NULL EXPRESSION**)
object_literal
 kind='
magic_identifier_literal_expr
utf8
utf16
discard_assignment_expr
declref_expr
 function_ref=
super_ref_expr
type_expr
 typerepr='
<<NULL>>
other_constructor_ref_expr
dot_syntax_base_ignored
overloaded_decl_ref_expr
 #decls=
unresolved_decl_ref_expr
member_ref_expr
dynamic_member_ref_expr
dynamic_subscript_expr
unresolved_specialize_expr
unresolved_member_expr
 name='
unresolved_dot_expr
 field '
sequence_expr
paren_expr
 trailing-closure
dot_self_expr
try_expr
force_try_expr
optional_try_expr
tuple_expr
<<tuple element default value>>
array_expr
dictionary_expr
subscript_expr
  decl=
keypath_application_expr
tuple_element_expr
 field #
capture_list
closure_expr
 single-expression
autoclosure_expr
inout_expr
metatype_expr
rebind_self_in_constructor_expr
opaque_value_expr
bind_optional_expr
optional_evaluation_expr
force_value_expr
open_existential_expr
make_temporarily_escapable_expr
call_expr
prefix_unary_expr
postfix_unary_expr
binary_expr
dot_syntax_call_expr
constructor_ref_call_expr
load_expr
tuple_shuffle_expr
 scalar_to_tuple
 tuple_to_tuple
 tuple_to_scalar
 elements=[
 variadic_sources=[
 default_args_owner=
unresolvedtype_conversion_expr
function_conversion_expr
covariant_function_conversion_expr
covariant_return_conversion_expr
metatype_conversion_expr
collection_upcast_expr
erasure_expr
any_hashable_erasure_expr
bridge_to_objc_expr
bridge_from_objc_expr
conditional_bridge_from_objc_expr
 conversion=
derived_to_base_expr
archetype_to_super_expr
inject_into_optional
class_metatype_to_object
existential_metatype_to_object
protocol_metatype_to_object
inout_to_pointer
 nonaccessing
array_to_pointer
string_to_pointer
pointer_to_pointer
foreign_object_conversion
unevaluated_instance
forced_checked_cast_expr
conditional_checked_cast_expr
is_subtype_expr
coerce_expr
if_expr
enum_is_case_expr
(assign_expr
code_completion_expr
unresolved_pattern_expr
editor_placeholder_expr
objc_selector_expr
<unresolved>
keypath_expr
 objc
(component=
invalid 
optional_chain 
optional_force 
optional_wrap 
property 
subscript 
unresolved_property 
unresolved_subscript
type=
key_path_dot_expr
writtenType='
(abstract_conformance protocol=
assoc_type req=
 type=
value req=
 witness=
(none)
(dynamic)
specialized
_conformance type=
 nothrow
 discriminator=
behavior_init
ordinary
direct_to_storage
direct_to_accessor
 arg_labels=
unicodeScalar
utf8_const_string
utf16_const_string
 accessKind=
 location=
 range=
Bf16_
Bf32_
Bf64_
Bf80_
Bf128_
globalinit_
_func
_token
associatedtype
precedencegroup
typealias
sil_stage
sil_vtable
sil_global
sil_witness_table
sil_default_witness_table
sil_coverage_map
sil_scope
where
__COLUMN__
__DSO_HANDLE__
<<unresolvedtype>>
Builtin.FPIEEE16
Builtin.FPIEEE32
Builtin.FPIEEE64
Builtin.FPIEEE80
Builtin.FPIEEE128
Builtin.FPPPC128
@sil_unowned 
@sil_unmanaged 
@sil_weak 
module<
@dynamic_self 
@opened("
<anonymous>
@yield_once 
@yield_many 
witness_method: 
closure
@pseudogeneric
@noescape
@callee_owned 
@callee_guaranteed 
) -> 
@yields 
@block_storage 
 let 
 var 
 & AnyObject
@lvalue 
@autoreleased 
@out 
@owned 
@unowned_inner_pointer 
@in 
@in_constant 
@in_guaranteed 
@inout 
@inout_aliasable 
@guaranteed 
#else
#elseif
#endif
#keyPath
#sourceLocation
#selector
#available
#fileLiteral
#imageLiteral
#colorLiteral
#FileReference
#Image
#Color
witness_method
@thin 
@thick 
@objc_metatype 
@escaping 
<#code#>
extension 
 /* condition */
associativity
left
right
assignment
higherThan
lowerThan
/* placeholder for 
/*not inherited*/ 
didSet
willSet
mutableAddressWithPinnedNativeOwner
unsafeMutableAddress
mutableAddressWithOwner
mutableAddressWithNativeOwner
addressWithPinnedNativeOwner
unsafeAddress
addressWithOwner
addressWithNativeOwner
@sil_stored 
conforms_to: 
layout: 
superclass: 
same_type: 
unresolved
coercion
value_cast
array_downcast
dictionary_downcast
set_downcast
bridging_coercion
bridging_downcast
 module 
specialize <
inherit (
Preexpanded
SourceFile
TypeDecl
ExtensionGenericParams
 extension of '
TypeOrExtensionBody
GenericParams
 param 
AbstractFunctionParams
DefaultArgument
AbstractFunctionBody
 entry 
PatternInitializer
AfterPatternBinding
BraceStmt
ConditionalClause
 guard-continuation
GuardStmt
RepeatWhileStmt
ForEachStmt
ForEachPattern
DoCatchStmt
CatchStmt
Accessors
 expanded
 unexpanded
 [invalid source range]
autoclosure
convention
escaping
block_storage
dynamic_self
sil_unowned
sil_unmanaged
sil_weak
inout_aliasable
in_guaranteed
in_constant
owned
unowned_inner_pointer
guaranteed
autoreleased
callee_owned
callee_guaranteed
objc_metatype
opened
pseudogeneric
yields
yield_once
yield_many
thick
_silgen_name
_exported
IBDesignable
NSManaged
lazy
LLDBDebuggerFunction
UIApplicationMain
unsafe_no_objc_tagged_pointer
_semantics
infix
_transparent
requires_stored_property_inits
nonobjc
_fixed_layout
_inlineable
_specialize
objcMembers
__consuming
mutating
nonmutating
convenience
sil_stored
fileprivate
__setter_access
__raw_doc_comment
unowned
effects
__objc_bridged
NSApplicationMain
objc_non_lazy_realization
__synthesized_protocol
testable
_alignment
rethrows
_swift_native_objc_runtime_base
warn_unqualified_access
_show_in_interface
_versioned
discardableResult
GKInspectable
_implements
_objcRuntimeName
_staticInitializeObjCMetadata
_restatedObjCConformance
_downgrade_exhaustivity_check
_implicitly_unwrapped_optional
_optimize
@available(
swift 
(set)
@_semantics
@_alignment
@_silgen_name
, deprecated
, introduced: 
, deprecated: 
, obsoleted: 
, renamed: "
, message: "
, message: "Not available in Swift"
@_cdecl("
@objc
@_swift_native_objc_runtime_base
partial
exported: 
kind: 
where 
@_implements
@_staticInitializeObjCMetadata
@_downgrade_exhaustivity_check
inline(never)
inline(__always)
<<synthesized protocol>>
<<ObjC bridged>>
<<raw doc comment>>
effects(readnone)
effects(readonly)
effects(readwrite)
effects(unspecified)
unowned(unsafe)
_optimize(none)
_optimize(speed)
_optimize(size)
platform_version_constraint_availability_spec
 platform='
 version='
language_version_constraint_availability_spec
other_constraint_availability_spec
NativeObject
UnknownObject
BridgeObject
SILToken
UnsafeValueBuffer
FPIEEE32
FPIEEE64
Word
FPIEEE16
FPIEEE80
FPIEEE128
FPPPC128
int_
acqrel
seqcst
fence_
_singlethread
cmpxchg_
atomicrmw_
_volatile
atomicload_
atomicstore_
allocWithTailElems_
truncOrBitCast
zextOrBitCast
sextOrBitCast
sdiv_exact
udiv_exact
sadd_with_overflow
uadd_with_overflow
ssub_with_overflow
usub_with_overflow
smul_with_overflow
umul_with_overflow
fneg
assumeNonNegative
cmp_eq
cmp_ne
cmp_sle
cmp_slt
cmp_sge
cmp_sgt
cmp_ule
cmp_ult
cmp_uge
cmp_ugt
fcmp_oeq
fcmp_ogt
fcmp_oge
fcmp_olt
fcmp_ole
fcmp_one
fcmp_ord
fcmp_ueq
fcmp_ugt
fcmp_uge
fcmp_ult
fcmp_ule
fcmp_une
fcmp_uno
tryPin
unpin
loadRaw
loadInvariant
castToNativeObject
unsafeCastToNativeObject
castFromNativeObject
castToBridgeObject
castReferenceFromBridgeObject
castBitPatternFromBridgeObject
bridgeToRawPointer
bridgeFromRawPointer
castReference
reinterpretCast
addressof
gepRaw
getTailAddr
condfail
fixLifetime
isUnique
isUniqueOrPinned
isUnique_native
isUniqueOrPinned_native
bindMemory
allocWithTailElems
projectTailElems
willThrow
unexpectedError
errorInMain
isOptional
strideof
ispod
is_same_metatype
allocRaw
deallocRaw
onFastPath
atomicload
atomicstore
staticReport
assert_configuration
u_to_s_checked_trunc
s_to_s_checked_trunc
s_to_u_checked_trunc
u_to_u_checked_trunc
s_to_u_checked_conversion
u_to_s_checked_conversion
itofp_with_overflow
zeroInitializer
onceWithContext
conditionallyUnreachable
copyArray
takeArrayNoAlias
takeArrayFrontToBack
takeArrayBackToFront
assignCopyArrayNoAlias
assignCopyArrayFrontToBack
assignCopyArrayBackToFront
assignTakeArray
unsafeGuaranteed
unsafeGuaranteedEnd
getObjCTypeEncoding
swift3ImplicitObjCEntrypoint
tsanInoutAccess
type_join
type_join_inout
type_join_meta
canBeClass
captures=(
<generic> 
<dynamic_self> 
<direct>
<noescape>
**NULL**
 [with 
abstract:
Conformances in context:
(conformance @
 protocol=
 loc=
 implied_by=@
 explicit
 inherited
 synthesized
 fixed_conformance=@
 superseded_by=@
PatternBinding
EnumCase
TopLevelCode
IfConfig
PrecedenceGroup
MissingMember
GenericTypeParam
Struct
Param
Func
EnumElement
extension
top-level code
conditional block
pattern binding
static var
static let
class var
class let
infix operator
prefix operator
postfix operator
precedence group
type alias
generic parameter
associated type
generic enum
generic struct
generic class
deinitializer
local function
global function
operator function
instance method
static method
class method
materializeForSet accessor
address accessor
mutableAddress accessor
willSet observer
didSet observer
enum element
missing member placeholder
<none>
'class'
_Builtin
_ExpressibleBy
With
mutating 
$defer
SubscriptDecl
AbstractFunctionDecl
TopLevelCodeDecl
ExtensionDecl
AbstractClosureExpr
Serialized Local
FileUnit
ImportDecl
 name=
 Builtin
 derived
 line=
 base=
 : (no type set)
 PatternBinding 0x
 DefaultArgument index=
 closure : 
DefaultArgument index=
 TopLevelCode
PatternBindingDecl
EnumCaseDecl
IfConfigDecl
PrecedenceGroupDecl
MissingMemberDecl
InfixOperatorDecl
PrefixOperatorDecl
PostfixOperatorDecl
AssociatedTypeDecl
TypeAliasDecl
EnumDecl
StructDecl
ClassDecl
ProtocolDecl
ModuleDecl
VarDecl
ParamDecl
ConstructorDecl
DestructorDecl
FuncDecl
EnumElementDecl
#file
#line
#column
#function
#dsohandle
INTERNAL ERROR: this diagnostic should not be produced
INTERNAL ERROR: feature not implemented: %0
error opening '%0' for output: %1
no group info found for file: '%0'
previous %select{declaration|definition}0 of %1 is here
did you mean to use a 'do' statement?
while parsing this '<' as a type parameter bracket
'super' cannot be used outside of class members
class methods are only allowed within classes; use 'static' to declare a static method
class properties are only allowed within classes; use 'static' to declare a static property
expected '{' in body of function declaration
change 'let' to 'var' to make it mutable
failed to load profile data '%0': '%1'
to match this opening '{'
to match this opening '['
to match this opening '('
to match this opening '<'
extraneous '}' at top level
structure nesting level exceeded maximum of %0
expected #else or #endif at end of conditional compilation block
further conditions after #else are unreachable
unexpected conditional compilation block terminator
incomplete condition in conditional compilation directive
extra tokens following conditional compilation directive
unexpected '}' in conditional compilation block
expected '%0' in #sourceLocation directive
parameterless closing #sourceLocation() directive without prior opening #sourceLocation(file:,line:) directive
expected starting line number for #sourceLocation directive
expected filename string literal for #sourceLocation directive
extra tokens at the end of #sourceLocation directive
the line number needs to be greater than zero
keyword '%0' does not need to be escaped in argument list
nul character embedded in middle of file
input files must be encoded as UTF-8 instead of UTF-16
hashbang line is allowed only in the main file
unprintable ASCII character found in source file
invalid UTF-8 found in source file
single-quoted string literal found, use '"'
unicode curly quote found, replace with '"'
unicode character '%0' looks similar to '%1'; did you mean to use '%1'?
unterminated '/*' comment
comment started here
unterminated string literal
invalid escape sequence in literal
\u{...} escape sequence expects between 1 and 8 hex digits
expected '}' in \u{...} escape sequence
invalid unicode scalar
expected hexadecimal code in braces after unicode escape
multi-line string literal content must begin on a new line
multi-line string literal closing delimiter must begin on a new line
%select{unexpected space in|unexpected tab in|insufficient}2 indentation of %select{line|next %1 lines}0 in multi-line string literal
should match %select{space|tab}0 here
change indentation of %select{this line|these lines}0 to match closing delimiter
escaped newline at the last line is not allowed
invalid character in source file
an identifier cannot begin with this character
expected a digit in floating point exponent
'%0' is not a valid %select{digit|first character}1 in floating point exponent
'%0' is not a valid %select{binary digit (0 or 1)|octal digit (0-7)|digit|hexadecimal digit (0-9, A-F)}1 in integer literal
hexadecimal floating point literal must end with an exponent
unexpected end of block comment
'=' must have consistent whitespace on both sides
extraneous whitespace after '.' is not permitted
source control conflict marker in source file
in %select{declaration|extension}0 of %1
#line directive was renamed to #sourceLocation
consecutive declarations on a line must be separated by ';'
expected declaration
expected identifier in %0 declaration
%0 name can only start with a letter or underscore, not a number
expected identifier after comma in enum 'case' declaration
%select{declaration|definition}0 conflicts with previous value
'let' declarations cannot be computed properties
'let' declarations cannot be observing properties
'let' declarations cannot have addressors
'var' declarations with multiple variables cannot have explicit getters/setters
initial value is not allowed here
variable used within its own initial value
variable used within its own initial value; use 'self.' to refer to the %0
enum 'case' is not allowed outside of an enum
declaration is only valid at file scope
declaration cannot be marked %0
'%0' is a declaration modifier, not an attribute
%0 specified twice
extraneous '.' in enum 'case' declaration
%select{%error|static properties|class properties}0 may only be declared on a type
computed property must have accessors specified
expected get or set in a protocol property
computed property must have an explicit type
getter/setter can only be defined for a single variable
expected '}' at end of variable get/set clause
duplicate definition of %0
previous definition of %0 is here
%select{variable|subscript}0 already has a %select{addressor|mutable addressor}1
expected %select{%error|setter|willSet|didSet}0 parameter name
expected ')' after setter parameter name
expected ')' after willSet parameter name
expected ')' after didSet parameter name
expected '{' to start %0 definition
expected 'get', 'set', 'willSet', or 'didSet' keyword to start an accessor definition
variable with a setter must also have a getter
%select{willSet|didSet}0 variable must not also have a %select{get|set}1 specifier
%select{willSet|didSet}0 variable with addressor must provide a 'mutableAddress' accessor
%select{willSet|didSet}0 is not allowed in subscripts
variable with getter/setter cannot have an initial value
variable with implied type cannot have implied getter/setter
%select{variable|subscript}0 must provide either a getter or 'address' if it provides 'mutableAddress'
%select{variable|subscript}0 cannot provide both 'mutableAddress'  and a setter
%select{variable|subscript}0 cannot provide both 'address' and a getter
%select{variable|subscript}0 cannot provide both 'address' and a setter; use an ordinary getter instead
applying property behavior with parameter to multiple variables is not supported
expected module name in import declaration
expected '{' in extension
expected '}' at end of extension
expected type name in extension declaration
expected '=' in type alias declaration
expected type in type alias declaration
expected type in associated type declaration
associated types must not have a generic parameter list
expected '(' in argument list of function declaration
%select{%error|static methods|class methods}0 may only be declared on a type
expected '->' after function parameter tuple
operator '%0' declared in protocol must be 'static'
expected '{' in enum
expected '}' at end of enum
expected '{' in struct
expected '}' in struct
expected '{' in class
expected '}' in class
protocols do not allow generic parameters; use associated types instead
expected '{' in protocol type
expected '}' in protocol
setter in a protocol cannot have a name
protocol methods must not have bodies
protocol initializers must not have bodies
'subscript' functions may only be declared within a type
expected '(' for subscript parameters
subscripts cannot have a name
expected '->' for subscript element type
expected subscripting element type
expected '{' in subscript to specify getter and setter implementation
subscript in protocol must have explicit { get } or { get set } specifier
subscript declarations must have a getter
subscript cannot be marked %0
missing '%select{super.|self.}0' at initializer invocation
initializers may only be declared within a type
expected '(' for initializer parameters
initializers cannot have a name
deinitializers may only be declared within a class
expected '{' for deinitializer
deinitializers cannot have a name
expected ')' to close parameter list
no parameter clause allowed on deinitializer
'operator' may only be declared at file scope
expected operator name in operator declaration
%0 is considered to be an identifier, not an operator
operator should no longer be declared with body
operator should no longer be declared with body; use a precedence group instead
operator must be declared as 'prefix', 'postfix', or 'infix'
only infix operators may declare a precedence
expected identifier after 'precedencegroup'
expected '{' after name of precedence group
expected operator attribute identifier in precedence group body
'%0' is not a valid precedence group attribute
expected colon after attribute name in precedence group
'%0' attribute for precedence group declared multiple times
expected 'none', 'left', or 'right' after 'associativity'
expected 'true' or 'false' after 'assignment'
expected name of related precedence group after '%0'
@inout is no longer an attribute
'%0' only allowed in SIL modules
expected type in SIL code
expected ':' before type in SIL value reference
expected SIL value name
expected SIL type to %0
expected constant in SIL code
referenced declaration has no %select{getter|setter}0
expected value ownership kind in SIL code
expected ':' before %0
redefinition of value '%0'
value '%0' defined with mismatching type %1 (expected %2)
value '%0' used with mismatching type %1 (expected %2)
use of undefined value '%0'
prior reference was here
expected ':' in SIL location
line number must be a positive integer
column number must be a positive integer
scope number must be a positive integer 
scope number %0 needs to be declared before first use
scope number %0 is already defined
SIL instructions must be at the start of a line
expected '=' in SIL instruction
wrong number of results for SIL instruction, expected %0
expected SIL instruction opcode
expected '%0' in SIL instruction
string_literal instruction requires an encoding
unknown string literal encoding '%0'
tuple instruction requires a tuple type
tuple instruction requires %0 values
tuple instruction requires a field number
struct instruction requires a field name
ref_element_addr instruction requires a field name
invalid instruction operands
%0 operand of '%1' must have address type
%0 operand of '%1' must have address of [unowned] type
%0 operand of '%1' must have address of [weak] type
integer_literal instruction requires a 'Builtin.Int<n>' type
float_literal instruction requires a 'Builtin.FP<n>' type
apply of non-polymorphic function cannot have substitutions
witness_method is not a protocol method
witness_method type does not conform to protocol
member not found
member %0 not found in type %1
cannot lookup member %0 in non-nominal, non-module type %1
member defined with mismatching type %0 (expected %1)
substitution replacement type %0 does not conform to protocol %1
substitution replacement type %0 is not a class type
missing substitutions
too many substitutions
unknown key '%0' in debug variable declaration
alloc_ref [objc] cannot have tail allocated elements
found unqualified instruction in qualified function '%0'
%0 instruction must have explicit access kind
%0 instruction must have explicit access enforcement
expected keypath component kind
unknown keypath component kind %0
keypath %select{gettable|settable}0_property component needs an %select{id and getter|id, getter, and setter}0
keypath must have at least one component
keypath must have a root component declared
key path index type %0 does not conform to Hashable
conflicting types for key path operand %0: %1 vs. %2
operand %0 is not referenced by any component in the pattern
expected basic block name or '}'
expected ':' after basic block name
use of undefined basic block %0
redefinition of basic block %0
expected ')' in basic block argument list
expected SIL function name
expected '}' at the end of a sil body
sil function expected to have SIL function type
expected 'raw' or 'canonical' after 'sil_stage'
sil_stage declared multiple times
expected ':' in a vtable entry
sil function not found %0
sil class not found %0
expected 'inherited' or 'override'
expected ']' after vtable entry kind
sil global not found %0
expected ':' in a witness table
expected '(' in a witness table
expected ')' in a witness table
sil protocol not found %0
sil associated type decl not found %0
sil associated type path for conformance not found %0
sil protocol conformance not found
expected coverage hash
expected '{' in coverage map
expected line:column pair
expected '->' after start location
expected ':' after source range
expected counter expression, id, or 'zero'
expected ')' to end counter expression
expected quotes surrounding PGO function name
expected '+' or '-'
expected initial value after '='
expected identifier in dotted type
expected identifier for type name
expected '>' to complete generic argument list
expected type for function result
only syntactic function types can be generic
only function declarations may be marked 'rethrows'; did you mean 'throws'?
'throws' may only occur before '->'
'rethrows' may only occur before '->'
expected throwing specifier; did you mean 'throws'?
expected type before '->'
expected type after '->'
function types cannot have argument labels; use '_' before %0
expected expression after '=' in 'case'
raw value for enum case must be a literal
array types are now written with the brackets around the element type
expected ']' in array type
expected element type
expected dictionary value type
expected ']' in dictionary type
expected ')' at end of tuple list
only a single element can be variadic
default argument not permitted in a tuple type
default argument not permitted in a protocol method
default argument not permitted in a protocol initializer
tuple element cannot have two labels
expected '>' to complete protocol-constrained type
'protocol<...>' composition syntax is deprecated; join the protocols using '&'
'protocol<...>' composition syntax has been removed; join the protocols using '&'
'protocol<...>' composition syntax is deprecated and not needed here
'protocol<...>' composition syntax has been removed and is not needed here
'protocol<>' syntax is deprecated; use 'Any' instead
'protocol<>' syntax has been removed; use 'Any' instead
expected 'var' or 'let' to introduce SIL box field type
expected '}' to complete SIL box field type list
expected '>' to complete SIL box generic argument list
expected non-negative size to be specified in layout constraint
expected non-negative alignment to be specified in layout constraint
expected ')' to complete layout constraint
layout constraints are only allowed inside '_specialize' attributes
expected pattern
keyword '%0' cannot be used as an identifier here
found an unexpected second identifier in %0 declaration; is there an accidental break?
join the identifiers together
join the identifiers together with camel-case
if this name is unavoidable, use backticks to escape it
expected ')' at end of tuple pattern
'...' cannot be applied to a subpattern which is not explicitly typed
default arguments are not allowed in closures
default arguments are not allowed in subscripts
default arguments are not allowed in curried parameter lists
'%select{var|let}0' cannot appear nested inside another 'var' or 'let' pattern
%0 must be bound in every pattern
'let' pattern cannot appear nested in an already immutable context
%0 arguments must have a type specified
expected ')' in parameter
expected parameter type following ':'
expected parameter name followed by ':'
expected ':' following argument label and parameter name
parameter requires an explicit type
only a single variadic parameter '...' is permitted
variadic parameter cannot have a default value
%0 before a parameter name is not allowed, place it before the parameter type instead
parameter must not have multiple '__owned', 'inout', '__shared', 'var', or 'let' specifiers
'%0' as a parameter attribute is not allowed
expected behavior name after '[' in property declaration
extraneous duplicate parameter name; %0 already has an argument label
%select{operator|closure}0 cannot have keyword arguments
unnamed parameters must be written with the empty name '_'
curried function declaration syntax has been removed; use a single parameter list
unexpected initializer in pattern; did you mean to use '='?
a parameter following a variadic parameter requires a label
statements are not allowed at the top level
expressions are not allowed at the top level
';' statements are not allowed
top-level statement cannot begin with a closure expression
consecutive statements on a line must be separated by ';'
labels are only valid on loops, if, and switch statements
%0 has been replaced with %1 in Swift 3
expected expression in assignment
expected '}' at end of brace statement
type alias is missing an assigned type; use 'associatedtype' to define an associated type requirement
associated types can only be defined in a protocol; define a type or introduce a 'typealias' to satisfy an associated type requirement
expected expression in 'return' statement
expression following 'return' is treated as an argument of the 'return'
indent the expression to silence this warning
expected expression in 'throw' statement
expected '{' after 'defer'
expected ',' joining parts of a multi-clause condition
expected expression in conditional
expected '%0' in conditional
expected expression after '=' in conditional binding
variable binding in a condition requires an initializer
pattern matching binding is spelled with 'case %0', not '%0 case'
expected expression, var, or let in 'if' condition
missing condition in an 'if' statement
expected '{' after 'if' condition
expected '{' after 'else'
unexpected 'else' immediately following 'if' condition
remove 'else' to execute the braced block of statements when the condition is true
expected expression, var, let or case in 'guard' condition
missing condition in an 'guard' statement
expected 'else' after 'guard' condition
expected '{' after 'guard' else
variable declared in 'guard' condition is not usable in its body
expected expression, var, or let in 'while' condition
missing condition in a 'while' statement
expected '{' after 'while' condition
expected '{' after 'repeat'
expected 'while' after body of 'repeat' statement
expected expression in 'repeat-while' condition
'do-while' statement is not allowed; use 'repeat-while' instead
expected '{' after 'do'
expected '{' after 'catch' pattern
expected expression for 'where' guard of 'catch'
the 'do' keyword is used to specify a 'catch' region
C-style for statement has been removed in Swift 3
expected 'in' after for-each pattern
expected Sequence expression for for-each loop
expected '{' to start the body of for-each loop
expected expression in 'where' guard of 'for/in'
expected expression in 'switch' statement
expected '{' after 'switch' subject expression
expected '}' at end of 'switch' statement
'%0' label can only appear inside a 'switch' statement
all statements inside a switch must be covered by a 'case' or 'default'
additional 'case' blocks cannot appear after the 'default' block of a 'switch'
expected expression for 'where' guard of 'case'
expected ':' after '%0'
'default' cannot be used with a 'where' guard expression
%select{'case'|'default'}0 label in a 'switch' should have at least one executable statement
'try' cannot be used with '%0'
'try' must be placed on the %select{returned|thrown}0 expression
'try' must be placed on the initial value expression
expected '%0' separator
unexpected '%0' separator
expected expression after operator
expected expression after unary operator
unary operator cannot be separated from its operand
expected operator name in operator reference
operator with postfix spacing cannot start a subexpression
expected member name following '.'
expected numeric value following '$'
numeric value following '$' is too large
expected named member of numeric literal
'$' is not an identifier; use backticks to escape it
anonymous closure argument not contained in a closure
anonymous closure arguments cannot be used inside a closure that has explicit arguments
anonymous closure arguments cannot be used inside a closure that has explicit arguments; did you mean '%0'?
closure tuple parameter does not support destructuring
expected the name of a closure parameter
expected 'weak', 'unowned', or no specifier in capture list
expected name of in closure capture list
expected initializer for closure capture specifier
expected ']' at end of capture list
fields may only be captured by assigning to a specific name
expected closure result type after '->'
expected 'in' after the closure signature
unexpected tokens prior to 'in'
expected '}' at end of closure
braces here form a trailing closure separated from its callee by multiple newlines
callee is here
string literals in Swift are not preceded by an '@' sign
'.%0' is not a valid floating point literal; it must be written '0.%0'
#available may only be used as condition of an 'if', 'guard' or 'while' statement
an empty argument label is spelled with '_'
expected identifier after '.' expression
expected identifier or 'init' after super '.' expression
expected '.' or '[' after 'super'
using 'super' in a closure where 'self' is explicitly captured is not yet supported
'self' explicitly captured here
expected expression in list of expressions
expected expression in container literal
expected key expression in dictionary literal
expected value in dictionary literal
expected ':' in dictionary literal
expected ')' in expression list
expected ']' in expression list
expected ']' in container literal expression
expected identifier after '#' in object literal expression
expected argument list in object literal
'%0' has been renamed to '%1
object literal syntax no longer uses '[# ... #]'
expected expression after '?' in ternary expression
expected ':' after '? ...' in ternary expression
expected expression after '? ... :' in ternary expression
expected type after 'is'
expected type after 'as'
extra tokens after interpolated string expression
expected '(' following '#keyPath'
expected property or type name within '#keyPath(...)'
expected ')' to complete '#keyPath' expression
expected expression path in Swift key path
expected '(' following '#selector'
expected expression naming a method within '#selector(...)'
expected expression naming a property within '#selector(...)'
expected ')' to complete '#selector' expression
expected argument label 'of:' within 'type(...)'
expected an expression within 'type(of: ...)'
expected ')' to complete 'type(of: ...)' expression
'.dynamicType' is deprecated. Use 'type(of: ...)' instead
'=' has been replaced with ':' in attribute arguments
duplicate %select{attribute|modifier}0
%select{attribute|modifier}0 already specified here
'%0' contradicts previous %select{attribute|modifier}2 '%1'
'infix' modifier is not required or allowed on func declarations
expected ']' or ',' in attribute list
attribute can only be applied to types, not declarations
attribute can only be applied to declarations, not types
expected '(' in '%0' %select{attribute|modifier}1
expected ')' in '%0' %select{attribute|modifier}1
expected ',' in '%0' %select{attribute|modifier}1
expected string literal in '%0' attribute
alignment value must be a positive integer literal
@_swift_native_objc_runtime_base class name must be an identifier
%0 cannot be an interpolated string literal
attribute '%0' can only be used in a non-local scope
'%0' may only be used on parameters
expected 'set' as subject of '%0' modifier
expected platform name or '*' for '%0' attribute
'%0' attribute cannot be both unconditionally 'unavailable' and 'deprecated'
unknown platform '%0' for attribute '%1'
'renamed' argument of '%0' attribute must be an operator, identifier, or full function name, optionally prefixed by a type name
expected '%0' option such as 'unavailable', 'introduced', 'deprecated', 'obsoleted', 'message', or 'renamed'
expected ':' after '%1' in '%0' attribute
expected version number in '%0' attribute
@availability has been renamed to @available
expected ')' in @autoclosure
@noescape conflicts with @autoclosure(escaping)
@noescape is implied by @autoclosure and should not be redundantly specified
@autoclosure(escaping) is deprecated; use @autoclosure @escaping instead
@autoclosure(escaping) has been removed; use @autoclosure @escaping instead
@noescape is the default and is deprecated
@noescape is the default and has been removed
expected '(' after 'convention' attribute
expected convention name identifier in 'convention' attribute
expected ')' after convention name for 'convention' attribute
expected ':' after 'witness_method' for 'convention' attribute
expected protocol name in 'witness_method' 'convention' attribute
missing ':' after selector piece in @objc attribute
expected ')' after name for @objc
expected name within parentheses of @objc attribute
@NSKeyedArchiverClassName has been removed; use @objc instead
@NSKeyedArchiverEncodeNonGenericSubclassesOnly is no longer necessary
expected '(' after 'opened' attribute
known id for 'opened' attribute must be a UUID string
expected ')' after id value for 'opened' attribute
expected '%0' option such as '%1'
unknown option '%0' for attribute '%1'
expected '%0' option (readnone, readonly, readwrite)
expected 'safe' or 'unsafe'
expected ')' after specifier for 'unowned'
'warn_unused_result' attribute behavior is now the default
expected ')' after 'warn_unused_result' attribute
@escaping conflicts with @noescape
missing ':' after %0 in '_specialize' attribute
missing ',' in '_specialize' attribute
unknown parameter %0 in '_specialize attribute'
expected a boolean true or false value in '_specialize' attribute
expected a parameter label or a where clause in '_specialize' attribute
parameter '%0' was already defined in '_specialize' attribute
expected 'partial' or 'full' as values of the 'kind' parameter in '_specialize' attribute
expected a member name as second parameter in '_implements' attribute
expected '>' to complete generic parameter list
expected an identifier to name generic parameter
'class' constraint can only appear on protocol declarations
did you mean to write an 'AnyObject' constraint?
expected a class type or protocol-constrained type restricting %0
use '==' for same-type requirements rather than '='
expected ':' or '==' to indicate a conformance or same-type requirement
redundant 'class' requirement
'class' must come first in the requirement list
'where' clause cannot be attached to %select{a non-generic|a protocol|an associated type}0 declaration
'where' clause next to generic parameters is deprecated and will be removed in the future version of Swift
'where' clause next to generic parameters is obsolete, must be written following the declaration's type
expected '&&' or '||' expression
expected unary '!' expression
unexpected platform condition (expected 'os', 'arch', or 'swift')
expected only one argument to platform condition
unexpected argument for the '_runtime' condition; expected '_Native' or '_ObjC'
unexpected platform condition argument: expected %0
invalid conditional compilation expression
ignoring invalid conditional compilation expression, which will be rejected in future version of Swift
ignoring parentheses in compound name, which will be rejected in future version of Swift
future version of Swift have different rule for evaluating condition; add parentheses to make the condition compatible with Swift4
'%0' is not a valid conditional compilation expression, use '%1'
version component contains non-numeric characters
compiler version must not have more than five components
the second version component is not used for comparison
found empty version component
compiler version component out of range: must be in [0, %0]
version requirement is empty
unknown %0 for build configuration '%1'
plaform condition appears to be testing for simulator environment; use 'targetEnvironment(simulator)' instead
expected availability condition
expected platform name
expected version number
expected ')' in availability query
'%0' cannot be used in an availability condition
'%0' can't be combined with shorthand specification '%1'
did you mean to specify an introduction version?
version comparison not needed
'swift' version-availability must be specified alone
Swift language version checks not allowed in #available(...)
type declared here
extended type declared here
ambiguous reference to member %0
ambiguous subscript with base type %0 and index type %1
type %0 has no subscript members
value of tuple type %0 has no member %1
value of type %0 has no member %1
type %0 has no member %1
enum type %0 has no case %1; did you mean %2
did you mean to specify a raw type on the enum declaration?
cast 'Any' to 'AnyObject' or use 'as!' to force downcast to a more specific type to access members
member %0 expects argument of type %1
member %0 is a function; did you mean to call it?
member %0 in %2 produces result of type %1, but context expects %2
member %0 takes no arguments
member %0 is not a function
member %1 cannot be used on value of type %0
member %1 cannot be used on type %0
static member %1 cannot be used on instance of type %0
enum element %0 cannot be referenced as an instance member
static member %1 cannot be used on protocol metatype %0
instance member %1%select{| of type %2}3 cannot be used on%select{| instance of nested}3 type %0
member %1 cannot be used on value of protocol type %0; use a generic constraint instead
%0 is inaccessible due to '%select{private|fileprivate|internal|%error|%error}1' protection level
%0 initializer is inaccessible due to '%select{private|fileprivate|internal|%error|%error}1' protection level
cannot use mutating member on immutable value: %0
cannot use mutating member on immutable value of type %0
cannot use mutating getter on immutable value: %0
cannot use mutating getter on immutable value of type %0
expression was too complex to be solved in reasonable time; consider breaking up the expression into distinct sub-expressions
value of type %0 cannot be compared by reference; did you mean to compare by value?
type %0 is not optional, value can never be nil
expression pattern of type %0 cannot match values of type %1
pattern cannot match values of type %0
cannot check reference equality of functions; operands here have types %1 and %2
binary operator '%0' cannot be applied to operands of type %1 and %2
binary operator '%0' cannot be applied to two %1 operands
unary operator '%0' cannot be applied to an operand of type %1
cannot pass immutable value to mutating operator: %0
cannot pass immutable value of type %0 to mutating operator
left side of mutating operator isn't mutable: %0
left side of mutating operator has immutable type %0
cannot subscript a value of type %0 with an index of type %1
cannot subscript a value of type %0
cannot subscript a value of incorrect or ambiguous type
cannot subscript a nil literal value
cannot pass immutable value as inout argument: %0
cannot pass immutable value of type %0 as inout argument
cannot assign to a literal value
cannot invoke %select{|initializer for type }1'%0' with no arguments
cannot invoke %select{|initializer for type }2'%0' with an argument list of type '%1'
Pointer conversion restricted: use '.assumingMemoryBound(to:)' or '.bindMemory(to:capacity:)' to view memory as a type.
cannot call value of non-function type %0
argument labels '%0' do not match any available overloads
no '%0' candidates produce the expected contextual result type %1
'%0' produces %1, not the expected contextual result type %2
cannot convert call result type %0 to expected type %1
cannot invoke closure expression with an argument list of type '%0'
cannot invoke closure of type %0 with an argument list of type '%1'
unable to infer closure type in the current context
unable to infer complex closure return type; add explicit type to disambiguate
declared closure result %0 is incompatible with contextual type %1
passing a %select{|closure which captures a }1non-escaping function parameter %0 to a call to a non-escaping function parameter can allow re-entrant modification of a variable
passing a %select{|closure which captures a }1non-escaping function parameter %0 to a call to a non-escaping function parameter can allow re-entrant modification of a variable and will be illegal in Swift 4
cannot invoke value of function type with argument list '%0'
cannot invoke value of type %0 with argument list '%1'
%select{expected an argument list|produces result}0 of type '%1'
overloads for '%1' exist with these %select{partially matching parameter lists|result types}0: %2
binary operator '%0' cannot be synthesized for enums with associated values
cannot convert value of type %0 to specified type %1
value of type %0 does not conform to specified type %1
nil cannot initialize specified type %0
cannot convert return expression of type %0 to return type %1
return expression of type %0 does not conform to %1
nil is incompatible with return type %0
thrown expression type %0 does not conform to 'Error'
thrown error code type %0 does not conform to 'Error'; construct an %1 instance
cannot infer concrete Error for thrown 'nil' value
cannot convert value of type %0 to raw type %1
cannot convert nil to raw type %0
default argument value of type %0 cannot be converted to type %1
default argument value of type %0 does not conform to %1
nil default argument value cannot be converted to type %0
cannot convert value of type %0 to expected argument type %1
cannot convert value of type %0 (%1) to expected argument type %2 (%3)
argument type %0 does not conform to expected type %1
in argument type %0, %1 does not conform to expected type %2
nil is not compatible with expected argument type %0
cannot convert value of type %0 to closure result type %1
result value of type %0 does not conform to closure result type %1
nil is not compatible with closure result type %0
deinitializers cannot be accessed
cannot convert value of type %0 to expected element type %1
value of type %0 does not conform to expected element type %1
nil is not compatible with expected element type %0
cannot convert value of type %0 to expected dictionary key type %1
value of type %0 does not conform to expected dictionary key type %1
nil is not compatible with expected dictionary key type %0
cannot convert value of type %0 to expected dictionary value type %1
value of type %0 does not conform to expected dictionary value type %1
nil is not compatible with expected dictionary value type %0
cannot convert value of type %0 to type %1 in coercion
value of type %0 does not conform to %1 in coercion
nil is not compatible with type %0 in coercion
cannot assign value of type %0 to type %1
value of type %0 does not conform to %1 in assignment
nil cannot be assigned to type %0
invalid conversion from throwing function of type %0 to non-throwing function type %1
invalid conversion from non-escaping function of type %0 to potentially escaping function type %1
'#keyPath' can only be used with the Objective-C runtime
result of key path is unused
argument of '#keyPath' refers to non-'@objc' property %0
argument of '#keyPath' refers to property %0 in %1 that depends on '@objc' inference deprecated in Swift 4
cannot refer to type member %0 within instance of type %1
key path cannot refer to generic type %0
key path cannot refer to %0 %1
key path cannot refer to %0, which has a mutating getter
key path cannot refer to static member %0
empty key path does not refer to a property
an Objective-C key path cannot contain %select{BAD|subscript|BAD|BAD|optional-forcing|optional-chaining|BAD} components
an Objective-C key path cannot reference a declaration with a compound name
broken standard library: no 'KeyPath' type found
invalid component of Swift key path
a Swift key path must begin with a type
key path support for %0 components is not implemented
key path value type %0 cannot be converted to contextual type %1
key path must have at least one component
string interpolation can only appear inside a string literal
key path cannot reference tuple elements
subscript index of type %0 in a key path must be Hashable
key path of type %0 cannot be applied to a base of type %1
'#selector' can only be used with the Objective-C runtime
import the 'ObjectiveC' module to use '#selector'
argument of '#selector' does not refer to an '@objc' method, property, or initializer
argument of '#selector' cannot refer to %select{local|global}0 function %1
cannot reference %1 %2 as a property; remove '%select{getter|setter}0:'
argument of '#selector' cannot refer to %select{variable|parameter}0 %1
use 'getter:'%select{| or 'setter:'}0 to refer to the Objective-C getter%select{| or setter}0 of property %1%select{|, respectively}0
add '%select{getter|setter}0:' to reference the Objective-C %select{getter|setter}0 for %1
argument of '#selector(setter:)' refers to non-settable %0 %1
setter of %0 %1 is inaccessible
argument of '#selector' refers to %0 %1 that is not exposed to Objective-C
add '@objc' to expose this %0 to Objective-C
argument of '#selector' refers to %0 %1 in %2 that depends on '@objc' inference deprecated in Swift 4
string literal is not a valid Objective-C selector
no method declared with Objective-C selector %0
use of string literal for Objective-C selectors is deprecated; use '#selector' or explicitly construct a 'Selector'
use of string literal for Objective-C selectors is deprecated; use '#selector' instead
use '#selector' instead of explicitly constructing a 'Selector'
wrap the selector name in parentheses to suppress this warning
unexpected non-void return value in void function
no such module '%0'
did you forget to set an SDK using -sdk or SDKROOT?
use "xcrun swiftc" to select the default macOS SDK installed with Xcode
this file is part of module %0; ignoring import
file '%0' is part of module %1; ignoring import
opening import file for module %0: %1
failed to load module %0
malformed module file: %0
module file was created by a newer version of the compiler: %0
module compiled with Swift %0 cannot be imported in Swift %1: %2
module file was created by an older version of the compiler; rebuild %0 and try again: %1
missing required module '%0'
missing required modules: %0
cannot load underlying module for %0
cannot load module '%0' as %1
module file was created for incompatible target %0: %1
module file's minimum deployment target is %0 v%1.%2%select{|.%3}3: %4
fatal error encountered while reading from module '%0'; please file a bug report with your project and the crash log
compiling as Swift %0, with '%1' built as Swift %2 (this is supported but may expose additional compiler issues)
type member must not be named %0, since it would conflict with the 'foo.%1' expression
invalid redeclaration of %0
%0 previously declared here
invalid redeclaration of %0 which differs only by the kind of optional passed as an inout argument (%1 vs. %2)
overloading by kind of optional is deprecated and will be removed in a future release
%0 is ambiguous for type lookup in this context
%0 is not a member type of %1
%0 does not have a member type named %1; did you mean %2?
%0 %1 is not a member type of %2
ambiguous type name %0 in %1
no type named %0 in module %1
ambiguous type name %0 in module %1
%0 is not a %select{binary|prefix unary|postfix unary}1 operator
reference to invalid associated type %0 of type %1
missing whitespace between %0 and %1 operators
ambiguous missing whitespace between unary and binary operators
could be %select{binary|postfix}2 %0 and %select{prefix|binary}2 %1
unary operators must not be juxtaposed; parenthesize inner expression
use of unresolved %select{identifier|operator}1 %0
%select{identifier|operator}0 '%1' contains possibly confused characters; did you mean to use '%2'?
use of undeclared type %0
use of undeclared type %0; did you mean to use '%1'?
did you mean the implicitly-synthesized %1 '%0'?
could not infer type for %0
%0 used within its own type
cannot use module %0 as a type
cannot deduce protocol for %0 literal
could not infer type of %0 literal
import %0 to use '%1' as the default %2 literal type
use of local variable %0 before its declaration
protocol %0 can only be used as a generic constraint because it has Self or associated type requirements
%select{%error|type|struct|class|enum|protocol|variable|function}0 %1 does not exist in module %2
%0 was imported as '%1', but is a %select{%error|type|struct|class|enum|protocol|variable|function}2
ambiguous name %0 in module %1
module %0 was not compiled for testing
ambiguous operator declarations found for operator
found this matching operator declaration
operator redeclared
previous operator declaration here
operator implementation without matching operator declaration
unary operator implementation must have a 'prefix' or 'postfix' modifier
%select{prefix|postfix}0 unary operator missing '%select{prefix|postfix}0' modifier
%select{prefix|postfix}0 operator found here
operators must have one or two arguments
operator functions can only be declared at global or in type scope
operator %0 declared in type %1 must be 'static'
operator %0 declared in non-final class %1 must be 'final'
member operator %2%select{| of protocol %0}1 must have at least one argument of type %select{%0|'Self'}1
multiple precedence groups found
found this matching precedence group
unknown precedence group %0
cycle in higherThan relation: %0
precedence group cannot be given lower precedence than group in same module; make the other precedence group higher than this one instead
precedence group declared here
precedence group redeclared
previous precedence group declaration here
cannot express tuple conversion %0 to %1
%1 is not %select{convertible to|a subtype of}0 %2
in cast from type %0 to %1
%0 is not convertible to %1; did you mean %0.boolValue
%0 is not convertible to %1, tuples have a different number of elements
tuple type %0 is not convertible to tuple %1
cannot force unwrap value of non-optional type %0
cannot use optional chaining on non-optional value of type %0
result values in '? :' expression have mismatching types %0 and %1
function value was used as a property; add () to call it
function %0 was used as a property; add () to call it
method %0 was used as a property; add () to call it
'init' is a member of the type; use 'type(of: ...)' to initialize a new object of the same dynamic type
'super.init' cannot be called outside of an initializer
'%0' test is always true
'is' test is always true because %0 is a Core Foundation type
conditional cast from %0 to %1 always succeeds
forced cast of %0 to same type has no effect
forced cast from %0 to %1 always succeeds; did you mean to use 'as'?
forced cast from %0 to %1 %select{only unwraps optionals|only unwraps and bridges}3; did you mean to use '%2'%select{| with 'as'}3?
conditional downcast from %0 to %1 %select{does nothing|is equivalent to an implicit conversion to an optional %1|is a bridging conversion; did you mean to use 'as'?}2
checking a value with optional type %0 against dynamic type %1 succeeds whenever the value is non-'nil'; did you mean to use '!= nil'?
cast from %0 to unrelated type %1 always fails
cannot downcast from %0 to a more optional type %1
optional chain has no effect, expression already produces %0
'?' must be followed by a call, member lookup, or subscript
%0 cannot appear in an expression
in call to operator %0
in call to function %0
in call to initializer
in initialization of parameter %0
function produces expected type %0; did you mean to call it with '()'?
value of optional type %0 not unwrapped; did you mean to use '!' or '?'?
value of optional type %0 not unwrapped; did you mean to use 'try!' or chain with '?'?
%0 is not convertible to %1; did you mean to use 'as!' to force downcast?
bridging %0 to %1 may fail at runtime and will become a checked cast in Swift 4; did you mean to use 'as!' to force downcast?
%0 is not implicitly convertible to %1; did you mean to use 'as' to explicitly convert?
passing value of type %0 to an inout parameter requires explicit '&'
'&' used with non-inout argument of type %0
'&' is not allowed passing array value as %0 argument
initializing from a metatype value must reference 'init' explicitly
extraneous argument label%select{|s}0 '%1' in %select{call|subscript}2
missing argument label%select{|s}0 '%1' in %select{call|subscript}2
incorrect argument label%select{|s}0 in %select{call|subscript}3 (have '%1', expected '%2')
cannot treat single-element named tuple as a scalar; use '.%0' to access its element
argument %0 must precede argument %1
argument %0 must precede unnamed argument #%1
unnamed argument #%0 must precede argument %1
unnamed argument #%0 must precede unnamed argument #%1
use of %0 refers to %1 %2 rather than %3 %4 in %5 %6
use of %0 nearly matches %3 %4 in %5 %6 rather than %1 %2
instance member %1 cannot be used on type %0; did you mean to use a value of this type instead?
cannot use instance member %0 within property initializer; property initializers run before 'self' is available
cannot use instance member %0 as a default parameter
invalid initializer call with same type %0 as parameter
missing argument for parameter %0 in call
missing argument for parameter #%0 in call
extra argument %0 in call
extra argument in call
argument passed to call that takes no arguments
extra trailing closure passed in call
%0 cannot be constructed because it has no accessible initializers
non-nominal type %0 does not support explicit initialization
generic parameter %0 could not be inferred
generic parameter %0 could not be inferred in cast to %1
%0 declared as parameter to type %1
explicitly specify the generic arguments to fix this issue
String must not be indexed with %0, it has variable size elements
consider using an existing high level algorithm, str.startIndex.advanced(by: n), or a projection like str.utf8
a C function pointer can only be formed from a reference to a 'func' or a literal closure
a C function pointer cannot be formed from a method
a C function pointer cannot be formed from a reference to a generic function
a C function pointer cannot be formed from a %select{local function|closure}0 that captures %select{context|generic parameters|dynamic Self type}1
variable has type %0 which includes nested inout parameters
named parameter has type %0 which includes nested inout parameters
enum case has type %0 which includes nested inout parameters
initializer requires a body
operators must be declared with 'func'
cannot declare a custom %0 '%1' operator
'%0' requires a function with an operator identifier
'%0' requires a function with one argument
'%select{nonmutating|mutating|__consuming}0' is only valid on methods
'%select{nonmutating|mutating|__consuming}0' isn't valid on methods in classes or class-bound protocols
method must not be declared both %select{nonmutating|mutating|__consuming}0 and %select{nonmutating|mutating|__consuming}1
static functions must not be declared mutating
'@_transparent' attribute is not supported on declarations within protocols
'@_transparent' attribute is not supported on declarations within classes
only instance properties can be declared @IBOutlet
@IBOutlet property cannot %select{have|be an array of}0 non-'@objc' class type %1
@IBOutlet property cannot %select{have|be an array of}0 non-'@objc' protocol type %1
@IBOutlet property cannot %select{have|be an array of}0 non-object type %1
@IBOutlet attribute requires property to be mutable
@IBOutlet property has non-optional type %0
add '?' to form the optional type %0
add '!' to form the implicitly unwrapped optional type %0
@IBDesignable can only be applied to classes and extensions of classes
only instance properties can be declared @%0
only instance methods can be declared @IBAction
methods declared @IBAction must return 'Void' (not %0)
@IBAction methods %select{must have a single argument|can only have up to 2 arguments}0
argument to @IBAction method cannot have non-'@objc' class type %0
argument to @IBAction method cannot have non-object type %0
@unsafe_no_objc_tagged_pointer can only be applied to class protocols
@_swift_native_objc_runtime_base_not_on_root_class can only be applied to root classes
@_cdecl can only be applied to global functions
@_cdecl symbol name cannot be empty
raising errors from @_cdecl functions is not supported
only methods can be declared %0
%0 modifier cannot be used in protocols
'%select{private|fileprivate|internal|public|open}0(set)' modifier can only be applied to variables and subscripts
'%select{private|fileprivate|internal|public|%error}0(set)' modifier cannot be applied to %select{constants|read-only variables|read-only properties|read-only subscripts}1
%select{private|fileprivate|internal|public|%error}0 %select{variable|property|subscript}1 cannot have %select{%error|a fileprivate|an internal|a public|an open}2 setter
declaring %select{%error|a fileprivate|an internal|a public|open}0 %1 in %select{a private|a fileprivate|an internal|public|%error}2 extension
cannot declare %select{%error|a fileprivate|an internal|a public|an open}0 %1 in an extension with %select{private|fileprivate|internal|public|%error}2 requirements
extension of %select{private|fileprivate|internal|%error|%error}0 %1 cannot be declared %select{%error|fileprivate|internal|public|%error}2
extensions cannot use 'open' as their default access; use 'public'
only classes and overridable class members can be declared 'open'; use 'public'
attribute cannot be applied to declaration
'%0' attribute cannot be applied to this declaration
%0 modifier cannot be applied to this declaration
attribute does not apply to type
'optional' can only be applied to protocol members
'optional' can only be applied to members of an @objc protocol
'optional' requirements are an Objective-C compatibility feature; add '@objc'
'@objcMembers' attribute can only be applied to a class
'optional' cannot be applied to an initializer
protocol members can only be marked unavailable in an @objc protocol
stored property %0 requires an initial value%select{| or should be @NSManaged}1
stored properties %0 and %1 require initial values%select{| or should be @NSManaged}2
stored properties %0, %1, %select{and %2|%2, and others}3 require initial values%select{| or should be @NSManaged}4
%select{superclass|class}1 %0 requires all stored properties to have initial values%select{| or use @NSManaged}2
class %0 has no initializers
stored property %0 without initial value prevents synthesized initializers
stored properties %0 and %1 without initial values prevent synthesized initializers
stored properties %0, %1, %select{and %2|%2, and others}3 without initial values prevent synthesized initializers
standard library error: missing _unimplementedInitializer
standard library error: missing _undefined
synthesizing a variadic inherited initializer for subclass %0 is unsupported
variadic superclass initializer defined here
reference to %0 %1 of %2 depends on '@objc' inference deprecated in Swift 4
alignment value must be a power of two
enum case %0 without associated value cannot be 'indirect'
enum case in 'indirect' enum cannot also be 'indirect'
%select{ERROR|static|class}1 stored properties not supported%select{ in this context| in generic types| in classes| in protocol extensions}0%select{|; did you mean 'static'?}2
non-member observing properties require an initializer
global '%select{var|let}0' declaration requires an initializer expression%select{ or getter/setter specifier|}0
%select{ERROR|'static var'|'class var'|}0 declaration requires an initializer expression or getter/setter specifier
%select{%select{variable|constant}0|property}1 %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}3|private or fileprivate}4|cannot be declared %select{in this context|fileprivate|internal|public|open}3}2 because its type uses %select{a private|a fileprivate|an internal|%error|%error}5 type
%select{%select{variable|constant}0|property}1 %select{should be declared %select{private|fileprivate|internal|%error|%error}5|should not be declared %select{in this context|fileprivate|internal|public|open}3}2 because its type uses %select{a private|a fileprivate|an internal|%error|%error}5 type
%select{%select{variable|constant}0|property}1 %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}3|private or fileprivate}4|cannot be declared %select{in this context|fileprivate|internal|public|open}3}2 because its type %6 uses %select{a private|a fileprivate|an internal|%error|%error}5 type
%select{%select{variable|constant}0|property}1 %select{should be declared %select{private|fileprivate|internal|%error|%error}5|should not be declared %select{in this context|fileprivate|internal|public|open}3}2 because its type %6 uses %select{a private|a fileprivate|an internal|%error|%error}5 type
%select{property|global variable}0 declaration does not bind any variables
%select{private|fileprivate|nested|local}0 class %1 has an unstable name when archiving via 'NSCoding'
for new classes, use '@objc' to specify a unique, prefixed Objective-C runtime name
for compatibility with existing archives, use '@objc' to record the Swift 3 runtime name
type %0 cannot be nested in generic function %1
type %0 cannot be nested in closure in generic context
type %0 cannot be nested in protocol %1
type %0 cannot be nested in protocol extension of %1
protocol %0 cannot be nested inside another declaration
type alias %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}2|private or fileprivate}3|cannot be declared %select{in this context|fileprivate|internal|public|open}1}0 because its underlying type uses %select{a private|a fileprivate|an internal|%error|%error}2 type
type alias %select{should be declared %select{private|fileprivate|internal|%error|%error}2|should not be declared %select{in this context|fileprivate|internal|public|open}1}0 because its underlying type uses %select{a private|a fileprivate|an internal|%error|%error}2 type
subscript %select{must be declared %select{private|fileprivate|internal|%error|%error}1|cannot be declared %select{in this context|fileprivate|internal|public|open}1}0 because its %select{index|element type}3 uses %select{a private|a fileprivate|an internal|%error|%error}2 type
subscript %select{should be declared %select{private|fileprivate|internal|%error|%error}2|should not be declared %select{in this context|fileprivate|internal|public|open}1}0 because its %select{index|element type}3 uses %select{a private|a fileprivate|an internal|%error|%error}2 type
%select{function|method|initializer}4 %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}1|private or fileprivate}2|cannot be declared %select{in this context|fileprivate|internal|public|open}1}0 because its %select{parameter|result}5 uses %select{a private|a fileprivate|an internal|%error|%error}3 type
%select{function|method|initializer}4 %select{should be declared %select{private|fileprivate|internal|%error|%error}3|should not be declared %select{in this context|fileprivate|internal|public|open}1}0 because its %select{parameter|result}5 uses %select{a private|a fileprivate|an internal|%error|%error}3 type
'@noreturn' has been removed; functions that never return should have a return type of 'Never' instead
non-nominal type %0 cannot be extended
%0 modifier cannot be used with extensions that declare protocol conformances
cannot extend a metatype %0
constrained extension must be declared on the unspecialized generic type %0 with constraints specified by a 'where' clause
extensions must not contain stored properties
trailing 'where' clause for extension of non-generic type %0
extension of protocol %0 cannot have an inheritance clause
extension of a generic Objective-C class cannot access the class's generic parameters at runtime
generic parameter used here
type %0 does not conform to protocol %1
nil cannot be used in context expecting type %0
use of '=' in a boolean context, did you mean '=='?
using %0 as a concrete type conforming to protocol %1 is not supported
%0 cannot be used as a type conforming to protocol %1 because %1 has static requirements
protocol %0 is broken; cannot derive conformance for type %1
%0 requires that %1 inherit from %2
requirement specified as %0 : %1%2
%0 requires the types %1 and %2 be equivalent
%0 requires that %1 conform to %2
requirement from conditional conformance of %0 to %1
candidate requires that the types %0 and %1 be equivalent (requirement specified as %2 == %3%4)
candidate requires that %1 inherit from %2 (requirement specified as %2 : %3%4)
requirement specified as %0 == %1%2
non-class type %0 cannot conform to class protocol %1
Core Foundation class %0 cannot conform to @objc protocol %1 because Core Foundation types are not classes in Objective-C
class %0 cannot conform to @objc protocol %1 because the class is only visible via the Objective-C runtime
type %0 cannot conform to protocol %1 because it has requirements that cannot be satisfied
type %0 cannot conform to protocol %1 (compiled with Swift %2) because it has requirements that could not be loaded in Swift %3
%0 requirement %1 cannot add constraint '%2%select{:|:| ==|:}3 %4' on 'Self'
adding constraint '%2%select{:|:| ==|:}3 %4' on 'Self' via %0 requirement %1 is deprecated in Swift 3
%select{method|initializer}0 %1 has different argument labels from those required by protocol %2 (%3)
initializer requirement %0 can only be satisfied by a `required` initializer in%select{| the definition of}1 non-final class %2
non-failable initializer requirement %0%select{| in Objective-C protocol}1 cannot be satisfied by a failable initializer ('init%select{?|!}1')
protocol %0 requirement %1 cannot be satisfied by a non-final class (%2) because it uses 'Self' in a non-parameter, non-result type position
%0 %1 in non-final class %2 cannot be used to satisfy requirement %3 %4 (in protocol %5) due to same-type requirement involving 'Self'
consider weakening the same-type requirement %0 == %1 to a superclass requirement
method %0 in non-final class %1 must return `Self` to conform to protocol %2
method %0 in non-final class %1 cannot be implemented in a protocol extension because it returns `Self` and has associated type requirements
%select{initializer %1|method %1|%select{|setter for }2property %1|subscript%select{| setter}2}0 must be declared %select{%error|fileprivate|internal|public|%error}3 because it matches a requirement in %select{private|fileprivate|internal|public|%error}4 protocol %5
%select{initializer %1|method %1|%select{|setter for }2property %1|subscript%select{| setter}2}0 must be as accessible as its enclosing type because it matches a requirement in protocol %5
%0 %1 must be declared %select{%error|fileprivate|internal|public|%error}2 because it matches a requirement in %select{%error|fileprivate|internal|public|%error}2 protocol %3
%0 %1 must be as accessible as its enclosing type because it matches a requirement in protocol %3
%select{protocol must be declared %select{%select{private|fileprivate|internal|%error|%error}2|private or fileprivate}3 because it refines|%select{in this context|fileprivate|internal|public|%error}1 protocol cannot refine}0 %select{a private|a fileprivate|an internal|%error|%error}2 protocol
%select{protocol should be declared %select{private|fileprivate|internal|%error|%error}2 because it refines|%select{in this context|fileprivate|internal|public|%error}1 protocol should not refine}0 %select{a private|a fileprivate|an internal|%error|%error}2 protocol
immutable property requirement must be declared as 'var' with a '{ get }' specifier
property in protocol must have explicit { get } or { get set } specifier
type %0 does not conform to inherited protocol %1
protocol requires %select{initializer %1|function %1|property %1|subscript}0 with type %2%select{|; do you want to add a stub?}3
do you want to add protocol stubs?
multiple matching %select{initializers named %1|functions named %1|properties named %1|subscript operators}0 with type %2
protocol requires nested type %0; do you want to add it?
default type %0 for associated type %1 (from protocol %2) does not %select{inherit from|conform to}4 %3
associated type in %select{a private|a fileprivate|an internal|a public|%error}0 protocol uses %select{a private|a fileprivate|an internal|%error|%error}1 type in its %select{default definition|requirement}2 
unable to infer associated type %0 for protocol %1
inferred type %1 (by matching requirement %0) is invalid: does not %select{inherit from|conform to}3 %2
ambiguous inference of associated type %0: %1 vs. %2
matching requirement %0 to this declaration inferred associated type to %1
using associated type default %0
multiple matching types named %0
candidate exactly matches%0
rename to %0 to satisfy this requirement%1
candidate is not %select{an initializer|a function|a variable|a subscript}0
candidate has non-matching type %0%1
candidate %select{type has|result type has|parameter type has|parameter types have|result and parameter types have}0 incorrect optionality%1
%select{type|result|parameter|parameters|result and parameters}0 of %1 %select{has|has|has|have|have|}0 different optionality than required by protocol %2
%select{type|result|parameter|parameters|result and parameters}0 of %1 %select{has|has|has|have|have|}0 different optionality than expected by protocol %2
candidate operates on %select{a type|an instance}0, not %select{an instance|a type}0 as required
candidate is %select{|prefix, |postfix, }1not %select{prefix|postfix}0 as required
candidate is marked '%select{nonmutating|mutating|__consuming}0' but protocol does not allow it
candidate is not settable, but protocol requires it
candidate is not 'rethrows', but protocol requires it
candidate throws, but protocol does not allow it
candidate is explicitly '@nonobjc'
possibly intended match
possibly intended match %0 does not %select{inherit from|conform to}2 %1
requirement %0 declared here
%select{|class }0%1 declares conformance to protocol %2 here
%select{%0 inherits conformance to protocol %2 from superclass|%0 declares conformance to protocol %2|%0 implicitly conforms to protocol %2 (via conformance to %3)|%0 implicitly conforms to protocol %2}1 here
unavailable %0 %1 was used to satisfy a requirement of protocol %2
redundant conformance of %0 to protocol %1
conformance of %0 to protocol %1 was already stated in %select{the protocol's|the type's}2 module %3
%0 %1 will not be used to satisfy the conformance to %2
%0 %1 nearly matches %select{defaulted|optional}2 requirement %3 of protocol %4
add '@objc' to provide an Objective-C entrypoint
move %0 to %select{an|another}1 extension to silence this warning
add '@nonobjc' to silence this %select{warning|error}0
make %0 %select{ERROR|private|private|non-public|non-public}1 to silence this warning
associated type %0 can only be used with a concrete type or generic parameter base
type alias %0 can only be used with a concrete type or generic parameter base
circular protocol inheritance %0
protocol %0 declared here
@objc protocol %0 cannot refine non-@objc protocol %1
protocol-constrained type with postfix '%0' is ambiguous and will be rejected in future version of Swift
non-protocol, non-class type %0 cannot be used within a protocol-constrained type
protocol-constrained type cannot contain class %0 because it already contains class %1
type %0 constrained to non-protocol, non-class type %1
type %0 in conformance requirement does not refer to a generic parameter or associated type
neither type in same-type constraint (%0 or %1) refers to a generic parameter or associated type
same-type requirement makes generic parameters %0 and %1 equivalent
same-type requirement makes generic parameter %0 non-generic
%0 %1 references itself
same-type constraint %0 == %1 is recursive
superclass constraint %0 : %1 is recursive
%select{associated type|generic parameter}0 %1 cannot be equal to both %2 and %3
same-type constraint type %0 does not conform to required protocol %1
generic signature requires types %0 and %1 to be the same
redundant conformance constraint %0: %1
conformance constraint %1: %2 %select{written here|implied here|inferred from type here}0
%select{generic parameter |protocol |}0%1 cannot be equal to both %2 and %3
redundant same-type constraint %0 == %1
same-type constraint %1 == %2 %select{written here|implied here|inferred from type here}0
%select{generic parameter |protocol |}0%1 cannot be a subclass of both %2 and %3
redundant superclass constraint %0 : %1
superclass constraint %1 : %2 %select{written here|implied here|inferred from type here}0
%select{generic parameter |protocol |}0%1 has conflicting constraints %2 and %3
redundant constraint %0 : %1
constraint %1 : %2 %select{written here|implied here|inferred from type here}0
previous same-type constraint %1 == %2 %select{written here|implied here|inferred from type here}0
redeclaration of associated type %0 from protocol %1 is better expressed as a 'where' clause on the protocol
typealias overriding associated type %0 from protocol %1 is better expressed as same-type constraint on the protocol
associated type %0 is redundant with type %0 declared in inherited %1 %2
associated type %0 cannot be declared inside '@objc' protocol %1
%0 %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}3|private or fileprivate}4|cannot be declared %select{in this context|fileprivate|internal|public|open}2}1 because its generic %select{parameter|requirement}5 uses %select{a private|a fileprivate|an internal|%error|%error}3 type
%0 %select{should be declared %select{private|fileprivate|internal|%error|%error}3|should not be declared %select{in this context|fileprivate|internal|public|open}2}1 because its generic %select{parameter|requirement}5 uses %select{a private|a fileprivate|an internal|%error|%error}3 type
declaration %0 cannot override more than one superclass declaration
declaration %0 has different argument labels from any potential overrides
potential overridden %0 %1 here
overriding %select{|non-@objc }0declarations %select{in extensions|from extensions}0 is not supported
overridden declaration is here
add '@objc' to make this declaration overridable
overriding method with selector %0 has incompatible type %1
overriding %select{|indexed |keyed }0subscript with incompatible type %1
overridden declaration here has type %0
overriding declaration requires an 'override' keyword
%0 has already been overridden
%0 previously overridden here
cannot override %0 which has been marked unavailable
cannot override %0 which has been marked unavailable: %1
overriding %0 must be as available as declaration it overrides
overriding %0 for %1 must be as available as declaration it overrides
cannot override immutable 'let' property %0 with the getter of a 'var'
%select{|setter of }0overriding %1 must be as accessible as %select{its enclosing type|the declaration it overrides}2
overriding non-open %0 outside of its defining module
method does not override any method from its superclass
property does not override any property from its superclass
subscript does not override any subscript from its superclass
initializer does not override a designated initializer from its superclass
failable initializer %0 cannot override a non-failable initializer
non-failable initializer %0 overridden here
attempt to override property here
attempt to override subscript here
attempt to override convenience initializer here
type does not match superclass %0 with type %1
type does not match superclass initializer with %select{no arguments|argument %1|arguments %1}0
'override' can only be specified on class members
property %0 with type %1 cannot override a property with type %2
cannot override with a stored property %0
cannot observe read-only property %0; it can't change
cannot override mutable property with read-only property %0
argument labels for %select{method|initializer}0 %1 do not match those of overridden %select{method|initializer}0 %2
cannot override %select{strong|weak|unowned|unowned(unsafe)}0 property with %select{strong|weak|unowned|unowned(unsafe)}1 property
cannot override a Self return type with a non-Self return type
cannot override a non-dynamic class declaration from an extension
cannot override non-throwing %select{method|initializer}0 with throwing %select{method|initializer}0
overriding a throwing @objc %select{method|initializer}0 with a non-throwing %select{method|initializer}0 is not supported
cannot override %0 %select{parameter|index}1 of type %2 with non-optional type %3
cannot override %0 %select{result|element}1 type %2 with optional type %3
overriding %0 parameter of type %1 with implicitly unwrapped optional type %2
overriding %0 optional result type %1 with implicitly unwrapped optional type %2
remove '!' to make the parameter required
use '?' to make the result optional
add parentheses to silence this warning
cannot override mutable property %0 of type %1 with covariant type %2
cannot override mutable subscript of type %0 with covariant type %1
static declarations are already final
%0 cannot be declared both 'final' and 'open'
override of %0 %1 from extension of %2 depends on deprecated inference of '@objc'
duplicate inheritance from %0
redundant inheritance from 'AnyObject' and Swift 3 'class' keyword
multiple inheritance from classes %0 and %1
non-class type %0 cannot inherit from class %1
extension of type %0 cannot inherit from class %1
inheritance from non-protocol, non-class type %0
inheritance from non-protocol type %0
superclass %0 must appear first in the inheritance clause
cannot inherit from non-open class %0 outside of its defining module
superclass is declared here
superclass %0 of open class must be open
circular class inheritance %0
class %0 declared here
inheritance from a final class %0
inheritance from a generic Objective-C class %0 must bind type parameters of %0 to specific concrete types
cannot inherit from class %0 because it has overridable members that could not be loaded
cannot inherit from class %0 (compiled with Swift %1) because it has overridable members that could not be loaded in Swift %2
cannot inherit from Core Foundation type %0
cannot inherit from class %0 because it is only visible via the Objective-C runtime
conformance of class %0 to 'AnyObject' is redundant
enum case in %select{a private|a fileprivate|an internal|a public|%error}0 enum uses %select{a private|a fileprivate|an internal|%error|%error}1 type
enums must not contain stored properties
multiple enum raw types %0 and %1
circular enum raw types %0
raw type %0 must appear first in the enum inheritance clause
raw type %0 is not expressible by any literal
RawRepresentable conformance cannot be synthesized because raw type %0 is not Equatable
%0 declares raw type %1, but does not conform to RawRepresentable and conformance could not be synthesized
%0 declares raw type %1, which implies RawRepresentable
enum %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}2|private or fileprivate}3|cannot be declared %select{in this context|fileprivate|internal|public|open}1}0 because its raw type uses %select{a private|a fileprivate|an internal|%error|%error}2 type
enum %select{should be declared %select{private|fileprivate|internal|%error|%error}2|should not be declared %select{in this context|fileprivate|internal|public|open}1}0 because its raw type uses %select{a private|a fileprivate|an internal|%error|%error}2 type
enum %0 declared here
an enum with no cases cannot declare a raw type
enum case cannot have a raw value if the enum does not have a raw type
enum with raw type cannot have cases with arguments
declared raw type %0 here
'@objc' enum must declare an integer raw type
'@objc' enum raw type %0 is not an integer type
enum case must declare a raw value when the preceding raw value is not an integer
enum cases require explicit raw values when the raw type is not expressible by integer or string literal
raw value for enum case is not unique
raw value previously used here
raw value auto-incremented from here
raw value implicitly auto-incremented from zero
construct %0 from unwrapped %1 value
implementation of %0 cannot be automatically synthesized in an extension
RawRepresentable protocol is broken: unexpected requirement
Equatable protocol is broken: unexpected requirement
Hashable protocol is broken: unexpected requirement
Error protocol is broken: unexpected requirement
Int type is broken: does not conform to Hashable
Int type is broken: does not conform to ExpressibleByIntegerLiteral
no overload of '==' for Int
CodingKey protocol is broken: unexpected requirement
Encodable protocol is broken: unexpected requirement
Decodable protocol is broken: unexpected requirement
CodingKey case %0 does not match any stored properties
cannot automatically synthesize %0 because %1 does not conform to %0
cannot automatically synthesize %0 because %1 does not have a matching CodingKey and does not have a default value
cannot automatically synthesize %0 because 'CodingKeys' is not an enum
cannot automatically synthesize %0 because 'CodingKeys' does not conform to CodingKey
cannot automatically synthesize %0 because superclass does not have a callable %1
cannot automatically synthesize %0 because implementation would need to call %1, which is not designated
cannot automatically synthesize %0 because implementation would need to call %1, which is inaccessible due to '%select{private|fileprivate|internal|%error|%error}2' protection level
cannot automatically synthesize %0 because implementation would need to call %1, which is failable
did you mean to override 'init(from:)'?
did you mean to override 'init(from:)' and 'encode(to:)'?
%select{global|local}0 function cannot return 'Self'
'Self' is only available in a protocol or as the result of a method in a class; did you mean '%0'?
duplicate definition of enum element
property behavior name must refer to a protocol
property behavior protocol has ambiguous %0 member
property behavior protocol does not have a 'value' property
property behavior protocol has a 'storage' requirement but does not have a static 'initStorage' method with the expected type %0 or %1
property behavior protocol %0 has non-behavior requirement %1
conformance to %0 required to contain an instance property with behavior %1
behavior %1 requires property type to conform to protocol %0
property behavior %0 can only be used on instance properties because it has 'Self' requirements
property behavior %0 with %1 is not supported outside of type contexts
property behavior %0 provides 'value' property implementation with type %1 that doesn't match type %2 of declared property %3
'value' property declared here
property behavior %0 has a 'parameter' requirement that is static or generic
property behavior %0 requires a parameter in the declaration of %1
initializer expression provided, but property behavior %0 does not use it
property behaviors do not support destructuring initialization of multiple properties
parameter expression provided, but property behavior %0 does not use it
property behavior for %0 in type %1 is broken
%0 may only be used on '%1' declarations
%0 may only be used on parameters
%0 must not be used on variadic parameters
%0 must not be used on subscript parameters
%0 overrides a 'final' %1
cannot override %0
only classes and class members may be marked with 'final'
functions in a protocol extension do not need to be marked with 'final'
'final' may only be applied to classes, properties, methods, and subscripts
'final' cannot be applied to accessors, it must be put on the %select{var|let|subscript}0
override of 'rethrows' %select{method|initializer}0 should also be 'rethrows'
'rethrows' function must take a throwing function argument
@autoclosure attribute only applies to function types
argument type of @autoclosure parameter must be '()'
@escaping attribute may only be used in function parameter position
closure is already escaping in optional type argument
@NSManaged only allowed on an instance property or method
@NSManaged not allowed on %select{computed|observing|addressed}0 properties
@NSManaged not allowed on a 'let' property
@NSManaged property cannot have an initial value
@NSManaged property cannot also be marked @NSCopying
@NSManaged method cannot have a body; it must be provided at runtime
@NSCopying may only be used on properties in classes
@NSCopying requires property to be mutable
@NSCopying is only valid on stored properties
@NSCopying is only valid with types that conform to the NSCopying protocol
%select{'UIApplicationMain'|'NSApplicationMain'}0 class must conform to the %select{'UIApplicationDelegate'|'NSApplicationDelegate'}0 protocol
generic %select{'UIApplicationMain'|'NSApplicationMain'}0 classes are not supported
%select{'UIApplicationMain'|'NSApplicationMain'}0 attribute can only apply to one class in a module
%select{'UIApplicationMain'|'NSApplicationMain'}0 attribute cannot be used in a module that contains top-level code
top-level code defined in this source file
'lazy' cannot be used on a let
'lazy' must not be used on a computed property
'lazy' must not be used on an already-lazy global
'lazy' isn't allowed on a protocol requirement
lazy properties must have an initializer
'lazy' cannot destructure an initializer
lazy is only valid for members of a struct or class
lazy properties must not have observers
@LLDBDebuggerSupport may only be used when debugger support is on
protocol %0 has no member %1
non-protocol type in @_implements attribute
containing type %0 does not conform to protocol %1
found this candidate
found candidate with type %0
standard library error: _MaxBuiltinIntegerType is not properly defined
standard library error: _MaxBuiltinFloatType is not properly defined
module %0 has no member named %1
'super' members cannot be referenced in a root class
'init' can only refer to the initializers of 'self'%select{| or 'super'}0
initializer delegation can only occur within an initializer
initializer cannot both delegate ('self.init') and chain to a superclass initializer ('super.init')
previous %select{delegation|chaining}0 call is here
convenience initializer for %0 must delegate (with 'self.init') rather than chaining to a superclass initializer (with 'super.init')
designated initializer for %0 cannot delegate (with 'self.init'); did you mean this to be a convenience initializer?
delegation occurs here
must call a designated initializer of the superclass %0
a non-failable initializer cannot %select{delegate|chain}0 to failable initializer %1 written with 'init?'
force potentially-failing result with '!'
propagate the failure with 'init?'
a non-failable initializer cannot use 'try?' to %select{delegate|chain}0 to another initializer
force potentially-failing result with 'try!'
%select{initializer delegation ('self.init')|initializer chaining ('super.init')}0 cannot be nested in another %select{expression|statement}1
convenience initializer is declared here
designated initializer cannot be declared in an extension of %0; did you mean this to be a convenience initializer?
delegating initializers in %0 are not marked with 'convenience'
convenience initializer not allowed in non-class type %0
convenience initializers are not supported in extensions of CF types
constructing an object of class type %0 with a metatype value must use a 'required' initializer
selected %select{non-required|implicit}0 initializer %1
value of type %0 is a protocol; it cannot be instantiated
protocol type %0 cannot be instantiated
operator is not a known binary operator
adjacent operators are in non-associative precedence group %0
adjacent operators are in unordered precedence groups %0 and %1
broken standard library: missing builtin precedence group %0
'%select{try|try!|try?}0' cannot appear to the right of a non-assignment operator
'%select{try|try!|try?}0' following conditional operator does not cover everything to its right
'%select{try|try!|try?}0' following assignment operator does not cover everything to its right
type 'Bool' is broken
treating a forced downcast to %0 as optional will never produce 'nil'
use 'as?' to perform a conditional downcast to %0
add parentheses around the cast to silence this warning
conditional downcast to CoreFoundation type %0 will always succeed
optional type %0 cannot be used as a boolean; test for '!= nil' instead
string interpolation requires the protocol '_ExpressibleByStringInterpolation' to be defined
protocol '_ExpressibleByStringInterpolation' is broken
object literal protocol is broken
'_' can only appear in a pattern or on the left side of an assignment
'&' can only appear immediately in a call argument list
heterogeneous collection literal could only be inferred to %0; add explicit type annotation if this is intentional
empty collection literal requires an explicit type
reference to member %0 cannot be resolved without a contextual type
cannot infer type for empty collection literal without a contextual type
'nil' requires a contextual type
type of expression is ambiguous without more context
expression type %0 is ambiguous without more context
missing protocol %0
protocol 'ExpressibleByNilLiteral' is broken
protocol '_ExpressibleByBuiltinIntegerLiteral' is broken
protocol 'ExpressibleByIntegerLiteral' is broken
protocol '_ExpressibleByBuiltinFloatLiteral' is broken
protocol 'ExpressibleByFloatLiteral' is broken
protocol '_ExpressibleByBuiltinBooleanLiteral' is broken
protocol 'ExpressibleByBooleanLiteral' is broken
protocol '_ExpressibleByBuiltinUnicodeScalarLiteral' is broken
protocol 'ExpressibleByUnicodeScalarLiteral' is broken
protocol '_ExpressibleByBuiltinUTF16ExtendedGraphemeClusterLiteral' is broken
protocol '_ExpressibleByBuiltinExtendedGraphemeClusterLiteral' is broken
protocol 'ExpressibleByExtendedGraphemeClusterLiteral' is broken
protocol '_ExpressibleByBuiltinStringLiteral' is broken
protocol 'ExpressibleByStringLiteral' is broken
ExpressibleByArrayLiteral protocol definition is broken
contextual type %0 cannot be used with array literal
did you mean to use a dictionary literal instead?
use [:] to get an empty dictionary literal
ExpressibleByDictionaryLiteral protocol definition is broken
contextual type %0 cannot be used with dictionary literal
cannot explicitly specialize a generic function
cannot specialize a non-generic definition
cannot specialize non-generic type %0
generic type %0 specialized with %select{too many|too few}3 type parameters (got %2, but expected %1)
reference to generic type %0 requires arguments in <...>
generic type %0 declared here
Unsafe%0Pointer<Void> has been replaced by Unsafe%0RawPointer
ambiguous use of %0
ambiguous use of operator %0
%select{use an explicit argument label instead of a trailing closure|avoid using a trailing closure}0 to call %1
partial application of %select{function with 'inout' parameters|'mutating' method|'super.init' initializer chain|'self.init' initializer delegation}0 is not allowed
assigning a variable to itself
assigning a property to itself
reference to property %0 in closure requires explicit 'self.' to make capture semantics explicit
call to method %0 in closure requires explicit 'self.' to make capture semantics explicit
implicit use of 'self' in closure; use 'self.' to make capture semantics explicit
cannot capture %0 before it is declared
cannot capture %0, which would use %1 before it is declared
%0, declared here, captures %1
escaping closures can only capture inout parameters explicitly by value
closure cannot implicitly capture a mutating self parameter
nested function with %select{an |}0implicitly captured inout parameter%select{|s}0 can only be used as a non-escaping argument
nested function cannot capture inout parameter and escape
attempting to %select{access|modify}1 %0 within its own %select{getter|setter}1
access 'self' explicitly to silence this warning
attempting to store to property %0 within its own willSet, which is about to be overwritten by the new value
passing %0 arguments to a callee as a single tuple value has been removed in Swift 3
expected module member name after module name
expected member name or constructor call after type name
missing '.self' for reference to metatype of type %0
add arguments after the type to construct a value of the type
use '.self' to reference the type object
use of %0 treated as a reference to %1 in %2 %3
use 'self.' to silence this warning
use '%0' to reference the %1
use '%0' to reference the %1 in module %2
referencing %0 as a function value is not implemented
'unsafeBitCast' from non-escaping function type %0 to escaping function type %1 is undefined; use 'withoutActuallyEscaping' to temporarily escape a function
'unsafeBitCast' from function type %0 to %1 changes @convention and is undefined; use an implicit conversion to change conventions
'unsafeBitCast' from %0 to %1 can be replaced with 'unsafeDowncast'
'unsafeBitCast' from %0 to %1 is unnecessary and can be removed
'unsafeBitCast' from %0 to %1 can be replaced with %2 initializer
'unsafeBitCast' from %0 to %1 changes pointee type and may lead to undefined behavior; use the 'withMemoryRebound' method on %0 to rebind the type of memory
'unsafeBitCast' from %0 to %1 gives a type to a raw pointer and may lead to undefined behavior
use the 'assumingMemoryBound' method if the pointer is known to point to an existing value or array of type %0 in memory
use the 'bindMemory' method to assign type %0 to uninitialized raw memory
'unsafeBitCast' from %0 to %1 can be replaced with 'bitPattern:' initializer on %1
'unsafeBitCast' from %0 to %1 can be replaced with 'bitPattern' property on %0
'unsafeBitCast' from %0 to %1 can be replaced with %1 initializer
left side of nil coalescing operator '??' has non-optional type %0, so the right side is never used
comparing non-optional value of type %0 to nil always returns %select{false|true}1
non-optional expression of type %0 used in a check for optionals
explicitly specified type %0 adds an additional level of optional to the initializer, making the optional check always succeed
pattern match introduces an implicit promotion from %0 to %1
expression implicitly coerced from %0 to Any
provide a default value to avoid this warning
force-unwrap the value to avoid this warning
explicitly cast to Any with 'as Any' to silence this warning
string interpolation produces a debug description for an optional value; did you mean to make this explicit?
use 'String(describing:)' to silence this warning
non-escaping %select{value|parameter}1 %0 may only be called
parameter %0 is implicitly non-escaping
closure use of non-escaping parameter %0 may allow it to escape
declaration closing over non-escaping parameter %0 may allow it to escape
passing non-escaping parameter %0 to function expecting an @escaping closure
assigning non-escaping parameter %0 to an @escaping closure
using non-escaping parameter %0 in a context expecting an @escaping closure
%0 declaration cannot close over value %1 defined in outer scope
'%0' cannot transfer control out of a defer statement
return invalid outside of a func
non-void function should return a value
only a failable initializer can return 'nil'
use 'init?' to make the initializer %0 failable
'nil' is the only return value permitted in an initializer
'if' condition is always true
'while' condition is always true
'guard' condition is always true, body is unreachable
closure expression is unused
expression resolves to an unused function
expression resolves to an unused l-value
result of call to %0 is unused
result of operator %0 is unused
result of call is unused, but produces %0
expression of type %0 is unused
result of %0 initializer is unused
result of 'try?' is unused
result of '#selector' is unused
%0 literal is unused
cannot assign to immutable expression of type %0
cannot assign to value: %0
cannot assign to property: %0
cannot assign through subscript: %0
cannot assign through '!': %0
mark %select{method|accessor}0 'mutating' to make 'self' mutable
'let' property %0 may not be initialized directly; use "self.init(...)" or "self = ..." instead
SequenceType protocol definition is broken
IteratorProtocol protocol definition is broken
label %0 cannot be reused on an inner statement
'break' is only allowed inside a loop, if, do, or switch
unlabeled 'break' is only allowed inside a loop or switch, a labeled break is required to exit an if or do
'continue' is only allowed inside a loop
'continue' cannot be used with %0 statements
no binary '~=' operator available for 'switch' statement
'fallthrough' is only allowed inside a switch
'fallthrough' without a following 'case' or 'default' block
'fallthrough' cannot transfer control to a case label that declares variables
unnecessary cast over raw value of %0
pattern variable bound to type %0, expected type %1
'where' only applies to the second pattern match in this case
disambiguate by adding a line break between them if this is desired
duplicate the 'where' on both patterns to check both patterns
trailing closure requires parentheses for disambiguation in this context
type annotation missing in pattern
pattern matching requires an initializer value to match against
'%0' pattern has no effect; sub-pattern didn't bind any variables
pattern matching in a condition requires the 'case' keyword
pattern matching in a condition implicitly unwraps optionals
'is' keyword required to pattern match against type name
type annotation does not match contextual type %0
tuple pattern cannot match values of the non-tuple type %0
contextual closure type %0 expects %1 argument%s1, but %2 %select{were|was}3 used in closure body
contextual type for closure argument list expects %0 argument%s0, which cannot be implicitly ignored
closure tuple parameter %0 does not support destructuring
closure tuple parameter %0 does not support destructuring with implicit parameters
nested tuple parameter %0 of function %1 does not support destructuring
%0 %select{|%1 }3expects a single parameter of type %2
single parameter of type %0 is expected in call
pattern with associated values does not match enum case %0
remove associated values to make the pattern match
tuple pattern has the wrong length for tuple type %0
tuple pattern element label %0 must be %1
enum case '%0' not found in type %1
'?' pattern cannot match values of type %0
initializer for conditional binding must have Optional type, not %0
enum case '%0' is not a member of type %1
generic enum type %0 is ambiguous without explicit generic parameters when matching value of type %1
%select{variable|constant}2 %0 inferred to have type %1, which may be unexpected
add an explicit type annotation to silence this warning
collection downcast in cast pattern is not implemented; use an explicit downcast to %0 instead
cannot specialize enum case; ignoring generic argument, which will be rejected in future version of Swift
errors thrown from here are not handled
call can throw, but the error is not handled
call can throw, but it is not marked with 'try' and the error is not handled
error is not handled because the enclosing function is not declared 'throws'
call can throw, but the error is not handled; a function declared 'rethrows' may only throw if its parameter does
call can throw, but it is not marked with 'try' and the error is not handled; a function declared 'rethrows' may only throw if its parameter does
a function declared 'rethrows' may only throw if its parameter does
call is to 'rethrows' function, but argument function can throw
call is to 'rethrows' function, but a defaulted argument function can throw
call can throw, but it is executed in a non-throwing autoclosure
call can throw, but it is not marked with 'try' and it is executed in a non-throwing autoclosure
error is not handled because it is thrown in a non-throwing autoclosure
errors thrown from here are not handled because the enclosing catch is not exhaustive
call can throw, but the enclosing catch is not exhaustive
call can throw, but it is not marked with 'try' and the enclosing catch is not exhaustive
error is not handled because the enclosing catch is not exhaustive
call can throw, but errors cannot be thrown out of %0
errors cannot be thrown out of %0
operator can throw but expression is not marked with 'try'
call can throw but is not marked with 'try'
did you mean to use 'try'?
did you mean to handle error as optional value?
did you mean to disable error propagation?
no calls to throwing functions occur within 'try' expression
'catch' block is unreachable because no errors are thrown in 'do' block
value type %0 cannot have a stored property that recursively contains it
recursive enum %0 is not marked 'indirect'
value type %0 has infinite size
cycle beginning here: %0
recursive case here
broken standard library: cannot find %select{Array|Optional|ImplicitlyUnwrappedOptional|Dictionary|Error}0 type
broken standard library: cannot find %select{UnsafePointer|UnsafeMutablePointer}0 type
broken standard library: cannot find intrinsic operations on Optional<T>
broken standard library: cannot find intrinsic operations on UnsafeMutablePointer<T>
broken standard library: cannot find intrinsic operations on Array<T>
broken standard library: cannot find intrinsic operations on Bool
class %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}2|private or fileprivate}3|cannot be declared %select{in this context|fileprivate|internal|public|open}1}0 because its superclass is %select{private|fileprivate|internal|%error|%error}2
class %select{should be declared %select{private|fileprivate|internal|%error|%error}2|should not be declared %select{in this context|fileprivate|internal|public|open}1}0 because its superclass is %select{private|fileprivate|internal|%error|%error}2
cannot use 'Protocol' with non-protocol type %0
cannot create a single-element tuple with an element label
cannot create a variadic tuple
the spelling 'ImplicitlyUnwrappedOptional' is deprecated; use an explicit type followed by '!'
the spelling 'ImplicitlyUnwrappedOptional' is deprecated; use '!' after the type name
using 'ImplicitlyUnwrappedOptional' in this location is deprecated and will be removed in a future release; consider changing this to 'Optional' instead
using '!' in this location is deprecated and will be removed in a future release; consider changing this to '?' instead
the spelling 'ImplicitlyUnwrappedOptional' is unsupported; use an explicit type followed by '!'
the spelling 'ImplicitlyUnwrappedOptional' is unsupported; use '!' after the type name
the spelling 'ImplicitlyUnwrappedOptional' is unsupported; use 'Optional' instead
'ImplicitlyUnwrappedOptional' is not allowed here; perhaps 'Optional' was intended?
'!' is not allowed here; perhaps '?' was intended?
'%select{strong|weak|unowned|unowned}0' may only be applied to class and class-bound protocol types, not %1
'%select{strong|weak|unowned|unowned}0' must not be applied to non-class-bound %1; consider adding a protocol conformance that has a class bound
'weak' variable should have optional type %0
'weak' must be a mutable variable, because it may change at runtime
'%select{strong|weak|unowned|unowned}0' cannot be applied to a property declaration in a protocol
'%select{strong|weak|unowned|unowned}0' should not be applied to a property declaration in a protocol and will be disallowed in future versions
'required' initializer in non-class type %0
'required' initializer must be declared directly in class %0 (not in an extension)
'required' initializer %0 must be provided by subclass of %1
'required' initializer is declared in superclass here
'required' initializer must be as accessible as its enclosing type
'required' modifier must be present on all overrides of a required initializer
use the 'required' modifier to override a required initializer
'override' is implied when overriding a required initializer
overridden required initializer is here
@%0 attribute only applies to function types
this attribute is not supported
convention '%0' not supported
generic parameter '%0' is not used in function signature
@opened cannot be applied to non-protocol type %0
SIL function types cannot be variadic
SIL function types cannot have labeled inputs
SIL function types cannot have labeled results
non-coroutine SIL function types cannot have @yield results
repeated %select{parameter|result|callee}0 convention attribute
SIL function types cannot have multiple @error results
convention '%0' not supported in SIL
type %0 is not a legal SIL value type
SIL box type has wrong number of generic arguments for layout
metatypes in SIL must have @thin, @thick, or @objc_metatype attribute
metatypes in SIL can only be one of @thin, @thick, or @objc_metatype
%0 attribute used without importing module %1
@objc can only be used with members of classes, @objc protocols, and concrete extensions of classes
only classes (and their extensions), protocols, methods, initializers, properties, and subscript declarations can be declared @objc
only classes that inherit from NSObject can be declared @objc
only class members and extensions of classes can be declared @nonobjc
only extensions of classes can be declared @nonobjc
members of constrained extensions cannot be declared @objc
@objc is not supported within extensions of generic classes or classes that inherit from generic classes
operator methods cannot be declared @objc
@objc protocols must not have operator requirements
inference of '@objc' for 'dynamic' members is deprecated
inference of '@objc' for members of Objective-C-derived classes is deprecated
add `@objc` to continue exposing an Objective-C entry point (Swift 3 behavior)
add `@nonobjc` to suppress the Objective-C entry point (Swift 4 behavior)
generic subclasses of '@objc' classes cannot have an explicit '@objc' because they are not directly visible from Objective-C
'@objc' getter for non-'@objc' property
'@objc' getter for non-'@objc' subscript
'@objc' setter for non-'@objc' property
'@objc' setter for non-'@objc' subscript
%select{%0 %1|%1}2 with '@objc' %select{getter|setter}3 depends on deprecated inference of '@objc'
'@objc' enum cannot be generic
'@objc' %0 must have a simple name
'@objc' subscript cannot have a name; did you mean to put the name on the getter or setter?
'@objc' deinitializer cannot have a name
'@objc' %select{initializer|method}0 name provides %select{one argument name|names for %1 arguments}2, but %select{initializer|method}0 has %select{one parameter|%3 parameters}4%select{| (%select{|including }4the error parameter)}5
attribute has no effect; cases within an '@objc' enum are already exposed to Objective-C
'@objc' enum case is not allowed outside of an '@objc' enum
'@objc' enum case declaration defines multiple enum cases with the same Objective-C name
'@objc' can only be applied to an extension of a class
'@%0' attribute is meaningless on a property that cannot be represented in Objective-C
property cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because its type cannot be represented in Objective-C
subscript cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because its key type %1 is neither an integer nor an object
subscript cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because its type cannot be represented in Objective-C
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because it has generic parameters
%0 is not representable in Objective-C, so it cannot be used with '@convention(%1)'
single argument function types require parentheses
when calling this function in Swift 4 or later, you must pass a '()' tuple; did you mean for the input type to be '()'?
'Any' is not considered '@objc'; use 'AnyObject' instead
protocol-constrained type containing protocol %0 cannot be represented in Objective-C
protocol-constrained type containing class %0 cannot be represented in Objective-C
protocol-constrained type containing 'Error' cannot be represented in Objective-C
empty tuple type cannot be represented in Objective-C
tuples cannot be represented in Objective-C
classes not annotated with @objc cannot be represented in Objective-C
Swift structs cannot be represented in Objective-C
non-'@objc' enums cannot be represented in Objective-C
generic type parameters cannot be represented in Objective-C
function types cannot be represented in Objective-C unless their parameters and returns can be
throwing function types cannot be represented in Objective-C
inferring '@objc' because the declaration is a member of an '@objc' protocol
overriding '@objc' %select{property|subscript|initializer|method}0 %1 here
satisfying requirement for %0 %1 in protocol %2
use of %0 %1 to satisfy a requirement of protocol %2 depends on '@objc' inference deprecated in Swift 4
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because curried functions cannot be represented in Objective-C
observing accessors are not allowed to be marked @objc
addressors are not allowed to be marked @objc
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because it has a variadic parameter
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}1 because the type of the parameter %0 cannot be represented in Objective-C
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because the type of the parameter cannot be represented in Objective-C
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because its result type cannot be represented in Objective-C
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because Core Foundation types are not classes in Objective-C
throwing method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because it returns a value of optional type %1; 'nil' indicates failure to Objective-C
throwing method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because it returns a value of type %1; return 'Void' or a type that bridges to an Objective-C class
a failable and throwing initializer cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because 'nil' indicates failure to Objective-C
%0 cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}1 because class %2 is only visible via the Objective-C runtime
Objective-C method has a different selector from the method it overrides (%0 vs. %1)
Objective-C property has a different name from the property it overrides (%0 vs. %1)
ambiguous inference of Objective-C name for %0 %1 (%2 vs %3)
%0 (in protocol %1) provides Objective-C name %2
conformance of %0 to %1 can only be written in module %2
_BridgedToObjectiveC protocol is broken
missing '%select{_forceBridgeFromObjectiveC|_conditionallyBridgeFromObjectiveC}0'
missing _bridgeNSError
%select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 with Objective-C selector %4 conflicts with %select{initializer %3|implicit initializer %3|deinitializer|implicit deinitializer|method %3|getter for %3|subscript getter|setter for %3|subscript setter}2 with the same Objective-C selector
%select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 declared here
%select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 with Objective-C selector %2 conflicts with previous declaration with the same Objective-C selector
%select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 with Objective-C selector %4 conflicts with %select{initializer %3|implicit initializer %3|deinitializer|implicit deinitializer|method %3|getter for %3|subscript getter|setter for %3|subscript setter}2 from superclass %5 with the same Objective-C selector
%select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 defines Objective-C class method %2, which is not permitted by Swift
%select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 defines Objective-C class method %2, which is not guaranteed to be invoked by Swift and will be disallowed in future versions
Objective-C method %2 provided by %select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 does not match the requirement's selector (%3)
Objective-C method %4 provided by %select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 conflicts with optional requirement %select{initializer %3|implicit initializer %3|deinitializer|implicit deinitializer|method %3|getter for %3|subscript getter|setter for %3|subscript setter}2 in protocol %5
rename %select{method|initializer|property|subscript}0 to match requirement %1
non-'@objc' %select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 does not satisfy requirement of '@objc' protocol %2
non-'@objc' %select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 does not satisfy optional requirement of '@objc' protocol %2
non-'@objc' %select{property %1|subscript}0 does not satisfy requirement of '@objc' protocol %2
non-'@objc' %select{property %1|subscript}0 does not satisfy optional requirement of '@objc' protocol %2
declaration is %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0, and cannot be marked @nonobjc
only members of classes may be dynamic
a declaration cannot be both 'final' and 'dynamic'
a declaration cannot be both '@nonobjc' and 'dynamic'
'dynamic' %0 %1 must also be '@objc'
%0 has been %select{renamed to|replaced by}1%select{| instance method| property}2 '%3'
%0 has been %select{renamed to|replaced by}1%select{| instance method| property}2 '%3': %4
%0 is unavailable in Swift
%0 is unavailable in Swift: %1
%0 has been explicitly marked unavailable here
%0 was introduced in Swift %1
%0 was obsoleted in %1 %2
%0 %select{is|%select{is|was}3}1 deprecated%select{| %select{on|in}3 %2%select{| %4}3}1
%0 %select{is|%select{is|was}3}1 deprecated%select{| %select{on|in}3 %2%select{| %4}3}1: %5
%0 %select{is|%select{is|was}3}1 deprecated%select{| %select{on|in}3 %2%select{| %4}3}1: %select{renamed to|replaced by}5%select{| instance method| property}6 '%7'
declaration cannot be more available than enclosing scope
enclosing scope here
add 'if #available' version check
add @available attribute to enclosing %0
%select{getter|setter}0 for %1 is only available on %2 %3 or newer
cannot pass as inout because %select{getter|setter}0 for %1 is only available on %2 %3 or newer
condition required for target platform '%0'
unnecessary check for '%0'; enclosing scope ensures guard will always be true
global variable cannot be marked potentially unavailable with '@available' in script mode
stored properties cannot be marked potentially unavailable with '@available'
protocol %0 requires %1 to be available on %2 %3 and newer
protocol requirement here
conformance introduced here
subscripts returning String were obsoleted in Swift 4; explicitly construct a String from subscripted result
@discardableResult declared on a function returning %select{Never|Void}0 is unnecessary
'@_fixed_layout' attribute can only be applied to '@_versioned' or public declarations, but %0 is %select{private|fileprivate|internal|%error|%error}1
'@_versioned' attribute can only be applied to internal declarations, but %0 is %select{private|fileprivate|%error|public|open}1
'@_versioned' attribute cannot be used in protocols
'@_versioned' attribute cannot be applied to 'dynamic' declarations
type %0 cannot be nested inside %select{a '@_transparent' function|an '@inline(__always)' function|an '@_inlineable' function|a default argument value}1
%0 %1 is %select{private|fileprivate|internal|%error|%error}2 and cannot be referenced from %select{a '@_transparent' function|an '@inline(__always)' function|an '@_inlineable' function|a default argument value}3
%0 %1 is not public
%0 %1 is not '@_versioned' or public
initializer declared in an extension of non-'@_fixed_layout' type %0 must delegate to another initializer
initializer for non-'@_fixed_layout' type %0 is '%select{@_transparent|@inline(__always)|@_inlineable|%error}1' and must delegate to another initializer
initializer for class %0 is '%select{@_transparent|@inline(__always)|@_inlineable|%error}1' and must delegate to another initializer
'@%0' attribute cannot be applied to stored properties
'@_inlineable' attribute cannot be applied to 'dynamic' declarations
'@_inlineable' attribute can only be applied to public declarations, but %0 is %select{private|fileprivate|internal|%error|%error}1
trailing 'where' clause in '_specialize' attribute of non-generic function %0
missing 'where' clause in '_specialize' attribute
empty 'where' clause in '_specialize' attribute
Only concrete type same-type requirements are supported by '_specialize' attribute
Only requirements on generic parameters are supported by '_specialize' attribute
Only one concrete type should be used in the same-type requirement in '_specialize' attribute
Only conformances to nominal types are supported by '_specialize' attribute
Only conformances to protocol types are supported by '_specialize' attribute
%select{too many|too few}2 type parameters are specified in '_specialize' attribute (got %1, but expected %0)
Missing constraint for %0 in '_specialize' attribute
Only same-type and layout requirements are supported by '_specialize' attribute
value %0 was defined but never used; consider replacing with boolean test
setter argument %0 was never used, but the property was accessed
did you mean to use %0 instead of accessing the property's current value?
initialization of %select{variable|immutable value}1 %0 was never used; consider replacing with assignment to '_' or removing it
capture %0 was never used
%select{variable|immutable value}1 %0 was never used; consider replacing with '_' or removing it
immutable value %0 was never used; consider removing it
%select{variable|parameter}1 %0 was never mutated; consider changing to 'let' constant
%select{variable|parameter}1 %0 was written to, but never read
circular reference
redundant type alias declaration
through reference here
%0 %1 took %2ms to type-check (limit: %3ms)
closure took %0ms to type-check (limit: %1ms)
expression took %0ms to type-check (limit: %1ms)
'switch' statement body must have at least one 'case' or 'default' block; do you want to add a default case?
switch must be exhaustive
do you want to add %select{missing cases|a default clause}0?
add missing case: '%0'
case is already handled by previous patterns; consider removing it
literal value is already handled by previous pattern; consider removing it
first occurrence of identical literal pattern is here
could not build %select{C|Objective-C}0 module '%1'
bridging header '%0' does not exist
failed to import bridging header '%0'
failed to serialize bridging header; target may not be debuggable outside of its original project
failed to emit precompiled header '%0' for bridging header '%1'
too %select{few|many}0 parameters in swift_name attribute (expected %1; got %2)
while importing '%0'
swift_name cannot be used to define %select{static member|init}0 on protocol
swift_name cannot be used on a non-prototyped function declaration
inconsistent Swift name for Objective-C %select{method|property}0 '%1' in '%2' (%3 in '%4' vs. %5 in '%6')
imported declaration '%0' could not be mapped to '%1'
implicit import of bridging header '%0' via module %1 is deprecated and will be removed in a later version of Swift
unable to find module '%0' for implicit conversion function '%0.%1'
unable to find implicit conversion function '%0.%1'
multiple definitions of implicit conversion function '%0.%1'
definition of implicit conversion function '%0.%1' is not a function
definition of implicit conversion function '%0.%1' is not of the correct type
cannot find definition of '_ObjectiveCBridgeable' protocol
broken definition of '_ObjectiveCBridgeable' protocol: missing %0
INTERNAL ERROR: invalid use of builtin: %0
could not find Objective-C bridge type for type %0; did you forget to import Foundation?
could not find 'pointee' property of pointer type %0
inout writeback to computed property %0 occurs in multiple arguments to call, introducing invalid aliasing
inout writeback through subscript occurs in multiple arguments to call, introducing invalid aliasing
concurrent writeback occurred here
matching %select{type '%1'|a protocol value|a generic value}0 in multiple patterns is not yet supported; use separate cases instead
inout arguments are not allowed to alias each other
previous aliasing argument
overlapping accesses to %0, but %select{initialization|read|modification|deinitialization}1 requires exclusive access; %select{consider copying to a local variable|consider calling MutableCollection.swapAt(_:_:)}2
overlapping accesses, but %select{initialization|read|modification|deinitialization}0 requires exclusive access; consider copying to a local variable
conflicting access is here
C function pointer signature %0 is not compatible with expected type %1
the type ObjectiveC.Selector is malformed
%select{variable|constant}0 defined here
%select{variable|constant}1 '%0' used before being initialized
%select{variable|constant}1 '%0' passed by reference before being initialized
%select{variable|constant}1 '%0' captured by a closure before being initialized
'self' captured by a closure before all members were initialized
address of %select{variable|constant}1 '%0' taken before it is initialized
property '%0' not initialized at super.init call
property '%0' not initialized at implicitly generated super.init call
'self' used in %select{method call|property access}1 %0 before %select{all stored properties are initialized|'super.init' call|'self.init' call}2
'self' used before all stored properties are initialized
'%0' not initialized
'%select{super|self}0.init' called multiple times in initializer
'%select{super|self}0.init' isn't called on all paths before returning from initializer
'self' used before 'super.init' call
'self' used before 'self.init' call
'self' used before 'self.init' call or assignment to 'self'
'self' used inside 'catch' block reachable from %select{super|self}0.init call
return from initializer before 'self.init' call or assignment to 'self'
return from initializer without initializing all stored properties
%select{variable|constant}1 '%0' used by function definition before being initialized
struct '%0' must be completely initialized before a member is stored to
immutable value '%0' may only be initialized once
initial value already provided in 'let' declaration
mutating %select{method|property access|subscript|operator}1 %0 may not be used on immutable value '%2'
immutable value '%0' must not be passed inout
immutable value '%0' must not be assigned to
cannot perform mutating operation: '%0' is a 'let' constant
initializer for struct %0 must use "self.init(...)" or "self = ..."%select{| on all paths}1 because %select{it is not in module %2|the struct was imported from C}3
use "self.init()" to initialize the struct with zero values
missing return in a %select{function|closure}1 expected to return %0
%select{function|closure}1 with uninhabited return type %0 is missing call to another never-returning function on all paths
'guard' body must not fall through, consider using a 'return' or 'throw' to exit the scope
will never be executed
condition always evaluates to %select{false|true}0
a call to a never-returning function
code after '%select{return|break|continue|throw}0' will never be executed
%select{case|default}0 will never be executed
switch condition evaluates to a constant
inlining 'transparent' functions forms circular loop
while inlining here
integer overflows when converted from %0 to %1
integer overflows when converted from %select{unsigned|signed}0 %1 to %select{unsigned|signed}2 %3
negative integer cannot be converted to unsigned type %0
negative integer '%1' overflows when stored into unsigned type %0
integer literal '%1' overflows when stored into %0
integer literal '%2' overflows when stored into %select{unsigned|signed}0 %1
integer literal overflows when stored into %0
arithmetic operation '%0 %1 %2' (on type %3) results in an overflow
arithmetic operation '%0 %1 %2' (on %select{unsigned|signed}3 %4-bit integer type) results in an overflow
division '%0 %1 %2' results in an overflow
assumed non-negative value '%0' is negative
shift amount is greater than or equal to type size in bits
static report error
error loading LLVM target for triple '%0': %1
cannot initialize code generation passes for target
unimplemented IR generation feature %0
IR generation failure: %0
unable to find type '%0' to verify
type to verify '%0' is ambiguous
type to verify '%0' has unbound generic parameters
too few output file names specified
no swift input files for multi-threaded compilation
@_alignment is not supported on types with dynamic layout
@_alignment cannot decrease alignment below natural alignment of %0
no such SDK: '%0'
no arguments provided to '-frontend'
unsupported target OS: '%0'
unsupported target architecture: '%0'
argument '%0' is not allowed with '%1'
argument '%0' is not supported with optimization
option '%0' requires a sanitizer to be enabled. Use -sanitize= to enable a sanitizer
option '%0' is missing a required argument (%1)
cannot open file '%0' (%1)
cannot open file '%0' for diagnostics emission (%1)
error opening input file '%0' (%1)
clang importer creation failed
missing argument value for '%0', expected %1 argument(s)
could not load the swift standard library
could not load %select{shared library|framework}0 '%1'
immediate mode is incompatible with -primary-file
no frontend action was selected
invalid source location string '%0'
-dump-scope-maps argument must be 'expanded' or a list of source locations
use major version, as in '-swift-version %0'
valid arguments to '-swift-version' are %0
this mode does not support emitting dependency files
this mode does not support emitting Objective-C headers
this mode does not support emitting the loaded module trace
this mode does not support emitting modules
this mode does not support emitting module documentation files
ignoring -emit-reference-dependencies (requires -primary-file)
module name "%0" is not a valid identifier%select{|; use -module-name flag to specify an alternate name}1
module name "%0" is reserved for the standard library%select{|; use -module-name flag to specify an alternate name}1
unable to load standard library for target '%0'
underlying Objective-C module %0 not found
REPL mode requires no input files
this mode requires a single input file
this mode requires at least one input file
this mode requires .sil for primary-file and only .sib for other inputs
an output filename was not specified for a mode which requires an output filename
the implicit output file '%0' is a directory; explicitly specify a filename using -o
primary file '%0' was not found in file list '%1'
cannot have input files with file list
variables currently must have an initial value when entered at the top level of the REPL
compiler is in code completion mode (benign diagnostic)
fatal error encountered while in -verify mode
error parsing input file '%0' (%1)
writing index unit file: %0
creating index directory: %0
writing index record file: %0
index output filenames do not match input source files
file ranges don't support multiple input files
file range is invalid
compiler was not built with support for collecting statistics
symbol '%0' (%1) is in TBD file, but not in generated IR
symbol '%0' (%1) is in generated IR file, but not in TBD file
conditional compilation flags must be valid Swift identifiers (rather than '%0')
conditional compilation flags do not have values in Swift; they are either present or absent (rather than '%0')
parallel execution not supported; falling back to serial execution
%0 command failed due to signal %1 (use -v to see invocation)
unable to handle compilation, expected exactly one frontend job
expected a swift frontend command
unable to load output file map
no output file map specified
unexpected input file: %0
unknown target '%0'
using bridging headers with framework targets is unsupported
the flag '-i' is no longer required and has been removed; use '%0 input-filename'
unnecessary option '%0'; this is the default for '%1' with no input files
option '%0' is not supported by '%1'; did you mean to use '%2'?
ignoring -incremental (currently requires an output file map)
ignoring -incremental; output file map has no master dependencies entry ("%0" under "")
Swift requires a minimum deployment target of %0
Swift does not support the SDK '%0'
iOS %0 does not support 32-bit programs
filename "%0" used twice: '%1' and '%2'
filenames are used to distinguish private declarations with the same name
unable to determine when '%0' was last modified: %1
unable to load dependencies file "%0", disabling incremental mode
input file '%0' was modified during the build
conflicting options '%0' and '%1'
ignoring -embed-bitcode since no object file is being generated
ignoring '-verify-debug-info'; no debug info is being generated
no profdata file exists at '%0'
Emission of optimization records has been disabled, because it requires a single compiler invocation: consider enabling the -whole-module-optimization flag
'%0' is not a valid name
given location is not valid
the given new name '%0' does not match the arity of the old name '%1'
the 'call' name usage cannot be used with a non-function-like name '%0'
cannot resolve location as name
given location does not belong to module '%0'
value decl '%0' has no declaration location
value decl '%0' is referenced out of range
selected range has more than one entry point
selected range contains %0 but not its target loop
given location is not on a default statement
cannot find enclosing switch statement
cannot find subject enum in the enclosing switch statement
no remaining cases to expand
the name at the given location cannot be renamed to '%0'
cannot find inserting position
<not a diagnostic>
<<ERROR>>
parameter 
parsing comment for
This documentation comment was inherited from 
unapplied
compound
NilLiteral
FloatLiteral
BooleanLiteral
InterpolatedStringLiteral
ObjectLiteral
MagicIdentifierLiteral
DiscardAssignment
DeclRef
SuperRef
OtherConstructorDeclRef
DotSyntaxBaseIgnored
OverloadedDeclRef
UnresolvedDeclRef
MemberRef
DynamicMemberRef
DynamicSubscript
UnresolvedSpecialize
UnresolvedMember
UnresolvedDot
Sequence
DotSelf
ForceTry
OptionalTry
KeyPathApplication
CaptureList
Closure
AutoClosure
DynamicType
RebindSelfInConstructor
OpaqueValue
BindOptional
OptionalEvaluation
ForceValue
OpenExistential
MakeTemporarilyEscapable
Call
PrefixUnary
PostfixUnary
Binary
DotSyntaxCall
ConstructorRefCall
Load
TupleShuffle
UnresolvedTypeConversion
FunctionConversion
CovariantFunctionConversion
CovariantReturnConversion
MetatypeConversion
CollectionUpcastConversion
Erasure
AnyHashableErasure
BridgeToObjC
BridgeFromObjC
ConditionalBridgeFromObjC
ArchetypeToSuper
InjectIntoOptional
ClassMetatypeToObject
ExistentialMetatypeToObject
ProtocolMetatypeToObject
InOutToPointer
ArrayToPointer
StringToPointer
PointerToPointer
ForeignObjectConversion
UnevaluatedInstance
ForcedCheckedCast
ConditionalCheckedCast
Coerce
Arrow
EnumIsCase
Assign
CodeCompletion
UnresolvedPattern
EditorPlaceholder
ObjCSelector
KeyPath
KeyPathDot
fileLiteral
imageLiteral
colorLiteral
file reference
color
JSExport
argument
parenthesized pattern
tuple pattern
pattern variable binding
'_' pattern
pattern type annotation
'var' binding pattern
prefix 'is' pattern
enum case matching pattern
optional .Some matching pattern
bool matching pattern
expression pattern
OSXApplicationExtension
OS X
iOS application extension
tvOS application extension
watchOS application extension
OS X application extension
NULL declaration!
addressor
mutableAddressor
extension of 
declaration 
 in module '
NULL expression!
expression at 
statement at 
NULL pattern!
pattern at 
NULL type!
type '
 (declared at 
 type 
resolving
 requirement 
// ###
extracting brief comment for
Unknown FP semantics
 versions=
 decl=
extension.
 src_range=
,+Inf)
root
if_then
if_else
condition_following_availability
guard_fallthrough
guard_else
while_body
<<error type>>
sil_box
@autoclosure
@convention
complexity
experiment
important
localizationkey
mutatingvariant
nonmutatingvariant
postcondition
precondition
keyword
recommended
recommendedover
PrintModulePass
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::NameAnonGlobalPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AlwaysInlinerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AAManager]
.atomictmp
cmpxchg.bool
atomic-temp
atomic_bitfield_base
atomic-load
struct.__block_descriptor
_NSConcreteStackBlock
block.isa
block.flags
block.reserved
block.invoke
block.descriptor
block.captured-this.addr
block.captured
block.capture.addr
byref.capture
block.captured_block
__block_descriptor_tmp
__copy_helper_block_
block.source
block.dest
blockcopy.src
.block_descriptor
_NSConcreteGlobalBlock
__block_literal_global
block.addr
block.captured-this
block.captured-const
struct.__block_literal_generic
block.literal
byref.addr
forwarding
struct.__block_byref_
__Block_byref_object_dispose_
__Block_byref_object_copy_
dest-object
src-object
byref.isa
byref.forwarding
 Inline flag for BYREF variable layout (%d):
 BLOCK_BYREF_HAS_COPY_DISPOSE
 BLOCK_BYREF_LAYOUT_EXTENDED
 BLOCK_BYREF_LAYOUT_STRONG
 BLOCK_BYREF_LAYOUT_WEAK
 BLOCK_BYREF_LAYOUT_UNRETAINED
 BLOCK_BYREF_LAYOUT_NON_OBJECT
byref.flags
byref.size
byref.copyHelper
byref.disposeHelper
byref.layout
bitscan_result
__fastfail call for this architecture
{r0}
{cx}
udf #251
int $$0x29
__os_log_helper
summary
numArgs
argDescriptor
argSize
argData
argDataCast
cond-cleanup.save
abscond
expval
cmpinf
isinf
iseq
isnormal
fpclassify_result
extend.cast
extend.sext
extend.zext
was_set
_setjmp3
__read_pipe_2
__write_pipe_2
__read_pipe_4
__write_pipe_4
__sub_group_reserve_write_pipe
__sub_group_commit_write_pipe
__get_pipe_num_packets
__get_pipe_max_packets
__enqueue_kernel_basic
__enqueue_kernel_vaargs
__enqueue_kernel_basic_events
__enqueue_kernel_events_vaargs
__get_kernel_work_group_size_impl
__get_kernel_preferred_work_group_multiple_impl
ap.val
builtin function
tabort
__cpu_model
stmxcsr
subvecbcst
pswapd
int $$0x2c
rbit
ldxp
ldxr
stxp
stxr
lane0
lane1
vpaddd
vceqz
vcgez
vclez
vcgtz
vcltz
vceqzd
vcmpd
vceqd
vtstd
vset_lane
vget_lane
vgetq_lane
vdups_lane
vdupd_lane
vaddd
vsubd
vqdmlXl
vqshlu_n
vqshl_n
vrshr_n
shld_n
shrd_n
vtbl1
vtbl2
vtbx
vtbx1
vtbx2
vtbl3
vtbl4
vtbx3
vtbx4
vbsl
fmla
vmull
vmax
vmin
vabd
vpadal
vpmin
vpmax
vminnm
vmaxnm
vrecps
vqshrun_n
vqrshrun_n
vqshrn_n
vrshrn_n
vqrshrn_n
vrnda
vrndi
vrndm
vrndn
vrndp
vrndx
vrndz
vcvt
vcvta
vcvtm
vcvtn
vcvtp
vmulx
vnegd
vpmaxnm
vpminnm
vsqrt
vrbit
vaddv
vmaxv
vminv
vaddlv
vsri_n
vsli_n
vsra_n
vld1xN
vld1_lane
vld2
vld3
vld4
vld2_lane
vld3_lane
vld4_lane
vtrn
vuzp
vzip
vsqadd
vuqadd
vabs
vaddhn
vcvt_n
vld1
vmovl
vmovn
vpaddl
vqdmlal
vshl_n
vshll_n
vshrn_n
vshr_n
vsubhn
vtst
vabs_v
vabsq_v
vaddhn_v
vaesdq_v
vaeseq_v
vaesimcq_v
vaesmcq_v
vcage_v
vcageq_v
vcagt_v
vcagtq_v
vcale_v
vcaleq_v
vcalt_v
vcaltq_v
vcls_v
vclsq_v
vclz_v
vclzq_v
vcnt_v
vcntq_v
vcvt_f16_f32
vcvt_f32_f16
vcvt_f32_v
vcvt_n_f32_v
vcvt_n_f64_v
vcvt_n_s32_v
vcvt_n_s64_v
vcvt_n_u32_v
vcvt_n_u64_v
vcvtq_f32_v
vcvtq_n_f32_v
vcvtq_n_f64_v
vcvtq_n_s32_v
vcvtq_n_s64_v
vcvtq_n_u32_v
vcvtq_n_u64_v
vcvtx_f32_v
vext_v
vextq_v
vfma_v
vfmaq_v
vhadd_v
vhaddq_v
vhsub_v
vhsubq_v
vmovl_v
vmovn_v
vmul_v
vmulq_v
vpadd_v
vpaddl_v
vpaddlq_v
vpaddq_v
vqabs_v
vqabsq_v
vqadd_v
vqaddq_v
vqdmlal_v
vqdmlsl_v
vqdmulh_v
vqdmulhq_v
vqdmull_v
vqmovn_v
vqmovun_v
vqneg_v
vqnegq_v
vqrdmulh_v
vqrdmulhq_v
vqrshl_v
vqrshlq_v
vqshl_n_v
vqshl_v
vqshlq_n_v
vqshlq_v
vqshlu_n_v
vqshluq_n_v
vqsub_v
vqsubq_v
vraddhn_v
vrecpe_v
vrecpeq_v
vrecps_v
vrecpsq_v
vrhadd_v
vrhaddq_v
vrshl_v
vrshlq_v
vrshr_n_v
vrshrq_n_v
vrsqrte_v
vrsqrteq_v
vrsqrts_v
vrsqrtsq_v
vrsubhn_v
vsha1su0q_v
vsha1su1q_v
vsha256h2q_v
vsha256hq_v
vsha256su0q_v
vsha256su1q_v
vshl_n_v
vshl_v
vshll_n_v
vshlq_n_v
vshlq_v
vshr_n_v
vshrn_n_v
vshrq_n_v
vsubhn_v
vtst_v
vtstq_v
vabdd_f64
vabds_f32
vabsd_s64
vaddlv_s32
vaddlv_u32
vaddlvq_s32
vaddlvq_u32
vaddv_f32
vaddv_s32
vaddv_u32
vaddvq_f32
vaddvq_f64
vaddvq_s32
vaddvq_s64
vaddvq_u32
vaddvq_u64
vcaged_f64
vcages_f32
vcagtd_f64
vcagts_f32
vcaled_f64
vcales_f32
vcaltd_f64
vcalts_f32
vcvtad_s64_f64
vcvtad_u64_f64
vcvtas_s32_f32
vcvtas_u32_f32
vcvtd_n_f64_s64
vcvtd_n_f64_u64
vcvtd_n_s64_f64
vcvtd_n_u64_f64
vcvtmd_s64_f64
vcvtmd_u64_f64
vcvtms_s32_f32
vcvtms_u32_f32
vcvtnd_s64_f64
vcvtnd_u64_f64
vcvtns_s32_f32
vcvtns_u32_f32
vcvtpd_s64_f64
vcvtpd_u64_f64
vcvtps_s32_f32
vcvtps_u32_f32
vcvts_n_f32_s32
vcvts_n_f32_u32
vcvts_n_s32_f32
vcvts_n_u32_f32
vcvtxd_f32_f64
vmaxnmv_f32
vmaxnmvq_f32
vmaxnmvq_f64
vmaxv_f32
vmaxv_s32
vmaxv_u32
vmaxvq_f32
vmaxvq_f64
vmaxvq_s32
vmaxvq_u32
vminnmv_f32
vminnmvq_f32
vminnmvq_f64
vminv_f32
vminv_s32
vminv_u32
vminvq_f32
vminvq_f64
vminvq_s32
vminvq_u32
vmull_p64
vmulxd_f64
vmulxs_f32
vpaddd_s64
vpaddd_u64
vpmaxnmqd_f64
vpmaxnms_f32
vpmaxqd_f64
vpmaxs_f32
vpminnmqd_f64
vpminnms_f32
vpminqd_f64
vpmins_f32
vqabsb_s8
vqabsd_s64
vqabsh_s16
vqabss_s32
vqaddb_s8
vqaddb_u8
vqaddd_s64
vqaddd_u64
vqaddh_s16
vqaddh_u16
vqadds_s32
vqadds_u32
vqdmulhh_s16
vqdmulhs_s32
vqdmullh_s16
vqdmulls_s32
vqmovnd_s64
vqmovnd_u64
vqmovnh_s16
vqmovnh_u16
vqmovns_s32
vqmovns_u32
vqmovund_s64
vqmovunh_s16
vqmovuns_s32
vqnegb_s8
vqnegd_s64
vqnegh_s16
vqnegs_s32
vqrdmulhh_s16
vqrdmulhs_s32
vqrshlb_s8
vqrshlb_u8
vqrshld_s64
vqrshld_u64
vqrshlh_s16
vqrshlh_u16
vqrshls_s32
vqrshls_u32
vqrshrnd_n_s64
vqrshrnd_n_u64
vqrshrnh_n_s16
vqrshrnh_n_u16
vqrshrns_n_s32
vqrshrns_n_u32
vqrshrund_n_s64
vqrshrunh_n_s16
vqrshruns_n_s32
vqshlb_n_s8
vqshlb_n_u8
vqshlb_s8
vqshlb_u8
vqshld_s64
vqshld_u64
vqshlh_n_s16
vqshlh_n_u16
vqshlh_s16
vqshlh_u16
vqshls_n_s32
vqshls_n_u32
vqshls_s32
vqshls_u32
vqshlub_n_s8
vqshluh_n_s16
vqshlus_n_s32
vqshrnd_n_s64
vqshrnd_n_u64
vqshrnh_n_s16
vqshrnh_n_u16
vqshrns_n_s32
vqshrns_n_u32
vqshrund_n_s64
vqshrunh_n_s16
vqshruns_n_s32
vqsubb_s8
vqsubb_u8
vqsubd_s64
vqsubd_u64
vqsubh_s16
vqsubh_u16
vqsubs_s32
vqsubs_u32
vrecped_f64
vrecpes_f32
vrecpxd_f64
vrecpxs_f32
vrshld_s64
vrshld_u64
vrsqrted_f64
vrsqrtes_f32
vrsqrtsd_f64
vrsqrtss_f32
vsha1cq_u32
vsha1h_u32
vsha1mq_u32
vsha1pq_u32
vshld_s64
vshld_u64
vslid_n_s64
vslid_n_u64
vsqaddb_u8
vsqaddd_u64
vsqaddh_u16
vsqadds_u32
vsrid_n_s64
vsrid_n_u64
vuqaddb_s8
vuqaddd_s64
vuqaddh_s16
vuqadds_s32
.inst.n 0x
.inst 0x
ldrexd
ldrex
strexd
strex
vsha1h
vcvtr
vld1q_lane
vld_dup
vrecpe
vrsra_n
vabd_v
vabdq_v
vbsl_v
vbslq_v
vcvt_s32_v
vcvt_s64_v
vcvt_u32_v
vcvt_u64_v
vcvta_s32_v
vcvta_s64_v
vcvta_u32_v
vcvta_u64_v
vcvtaq_s32_v
vcvtaq_s64_v
vcvtaq_u32_v
vcvtaq_u64_v
vcvtm_s32_v
vcvtm_s64_v
vcvtm_u32_v
vcvtm_u64_v
vcvtmq_s32_v
vcvtmq_s64_v
vcvtmq_u32_v
vcvtmq_u64_v
vcvtn_s32_v
vcvtn_s64_v
vcvtn_u32_v
vcvtn_u64_v
vcvtnq_s32_v
vcvtnq_s64_v
vcvtnq_u32_v
vcvtnq_u64_v
vcvtp_s32_v
vcvtp_s64_v
vcvtp_u32_v
vcvtp_u64_v
vcvtpq_s32_v
vcvtpq_s64_v
vcvtpq_u32_v
vcvtpq_u64_v
vcvtq_s32_v
vcvtq_s64_v
vcvtq_u32_v
vcvtq_u64_v
vld1_dup_v
vld1_v
vld1q_dup_v
vld1q_v
vld2_lane_v
vld2_v
vld2q_lane_v
vld2q_v
vld3_lane_v
vld3_v
vld3q_lane_v
vld3q_v
vld4_lane_v
vld4_v
vld4q_lane_v
vld4q_v
vmax_v
vmaxnm_v
vmaxnmq_v
vmaxq_v
vmin_v
vminnm_v
vminnmq_v
vminq_v
vmull_v
vpadal_v
vpadalq_v
vpmax_v
vpmin_v
vrnd_v
vrnda_v
vrndaq_v
vrndm_v
vrndmq_v
vrndn_v
vrndnq_v
vrndp_v
vrndpq_v
vrndq_v
vrndx_v
vrndxq_v
vst1_v
vst1q_v
vst2_lane_v
vst2_v
vst2q_lane_v
vst2q_v
vst3_lane_v
vst3_v
vst3q_lane_v
vst3q_v
vst4_lane_v
vst4_v
vst4q_lane_v
vst4q_v
vtrn_v
vtrnq_v
vuzp_v
vuzpq_v
vzip_v
vzipq_v
__commit_write_pipe
__commit_read_pipe
__sub_group_commit_read_pipe
__work_group_commit_read_pipe
__work_group_commit_write_pipe
__reserve_read_pipe
__reserve_write_pipe
__sub_group_reserve_read_pipe
__work_group_reserve_read_pipe
__work_group_reserve_write_pipe
offsetcast
offsetptr
__cudaUnregisterFatBinary
__cuda_module_dtor
__cuda_register_globals
__cudaRegisterFunction
__cudaRegisterVar
__cudaRegisterFatBinary
__cuda_module_ctor
__NV_CUDA,__nv_fatbin
.nv_fatbin
__NV_CUDA,__fatbin
.nvFatBinSegment
__cuda_fatbin_wrapper
__cuda_gpubin_handle
cudaSetupArgument
cudaLaunch
vfnkxt
reading a new[] cookie
cannot yet compile %0 in this ABI
array cookie initialization
complete object detection in ctor
member function pointer null testing
member function pointer comparison
member function pointer conversions
loads of member pointers
calls through member pointers
no-frame-pointer-elim
no-frame-pointer-elim-non-leaf
denormal-fp-math
no-trapping-math
no-signed-zeros-fp-math
correctly-rounded-divide-sqrt-fp-math
reciprocal-estimates
stackrealign
backchain
arch=
coerce
arg.unpromote
swifterror.temp
.coerce
coerce.val
coerce.val.pi
coerce.highbits
coerce.val.ii
coerce.val.ip
coerce.dive
return.sloc.load
inalloca.save
icr.temp
icr.isnull
icr.argument
icr.cast
icr.to-use
argmem
indirect-arg-temp
byval-temp
icr.writeback-cast
alignmentcast
ispositive
positivemask
cast.result
sub.ptr
__asan_poison_intra_object_redzone
__asan_unpoison_intra_object_redzone
cmp.vtables
vtable
retval.inhctor
__sanitizer_dtor_callback
isempty
arrayctor.end
arrayctor.cur
arrayctor.next
arrayctor.done
cast.nonnull
lambda conversion to variadic function
saved-rvalue
saved-complex
cleanup.cond
cleanup.dest.slot
cleanup.dest
tmp.exprcleanup
cleanup.is_active
cleanup.isactive
only one __builtin_coro_id can be used in a function
__builtin_coro_id shall not be used in a C++ coroutine
gro.active
Deallocation expressoin does not refer to coro.free
this builtin expect that __builtin_coro_begin has been used earlier in this function
this builtin expect that __builtin_coro_id has been used earlier in this function
__vtbl_ptr_type
_vptr$
__isa
__flags
__reserved
__FuncPtr
__descriptor
opencl_image1d_ro_t
opencl_image1d_array_ro_t
opencl_image1d_buffer_ro_t
opencl_image2d_ro_t
opencl_image2d_array_ro_t
opencl_image2d_depth_ro_t
opencl_image2d_array_depth_ro_t
opencl_image2d_msaa_ro_t
opencl_image2d_array_msaa_ro_t
opencl_image2d_msaa_depth_ro_t
opencl_image2d_array_msaa_depth_ro_t
opencl_image3d_ro_t
opencl_image1d_wo_t
opencl_image1d_array_wo_t
opencl_image1d_buffer_wo_t
opencl_image2d_wo_t
opencl_image2d_array_wo_t
opencl_image2d_depth_wo_t
opencl_image2d_array_depth_wo_t
opencl_image2d_msaa_wo_t
opencl_image2d_array_msaa_wo_t
opencl_image2d_msaa_depth_wo_t
opencl_image2d_array_msaa_depth_wo_t
opencl_image3d_wo_t
opencl_image1d_rw_t
opencl_image1d_array_rw_t
opencl_image1d_buffer_rw_t
opencl_image2d_rw_t
opencl_image2d_array_rw_t
opencl_image2d_depth_rw_t
opencl_image2d_array_depth_rw_t
opencl_image2d_msaa_rw_t
opencl_image2d_array_msaa_rw_t
opencl_image2d_msaa_depth_rw_t
opencl_image2d_array_msaa_depth_rw_t
opencl_image3d_rw_t
opencl_sampler_t
opencl_event_t
opencl_clk_event_t
opencl_queue_t
opencl_reserve_id_t
__forwarding
__size
__copy_helper
__destroy_helper
__byref_variable_layout
__block_literal_
arraydestroy.isempty
arraydestroy.elementPast
arraydestroy.element
arraydestroy.done
pad.arraybegin
pad.arrayend
nrvo.val
nrvo
saved_stack
constant l-value expression
.addr
__cxx_global_array_dtor
atexit
this initialization requires a guard variable, which the kernel does not support
__cxx_init_fn_ptr
_GLOBAL__I_
<null>
_GLOBAL__sub_I_
_GLOBAL__D_a
__gnu_objc_personality_v0
__gnu_objc_personality_sj0
__gnu_objc_personality_seh0
__gnustep_objcxx_personality_v0
__gnustep_objc_personality_v0
__std_terminate
objc_terminate
OBJC_EHTYPE
__cxa_free_exception
exn.slot
ehselector.slot
ehspec.fails
__cxa_call_unexpected
lpad.val
matches
catch.dispatch
ehcleanup
finally.exn
finally.for-eh
cleanup.dest.saved
finally.shouldthrow
finally.endcatch
exception_pointers
abnormal_termination
frame_pointer
'this' captured by SEH
VLA captured by SEH
l-value expression
vecins
ivar.offset
extractVec
storetmp
frombool
arraydecay
bf.load
bf.value
bf.shl
bf.clear
bf.set
bf.result.shl
bf.result.ashr
bf.result.cast
.ref.tmp
ref.tmp
unexpected cast lvalue
__ubsan_vptr_type_cache
__ubsan_handle_
_minimal
_abort
add_overflow
builtin_unreachable
cfi_check_fail
divrem_overflow
dynamic_type_cache_miss
float_cast_overflow
function_type_mismatch
invalid_builtin
load_invalid_value
missing_return
mul_overflow
negate_overflow
nullability_arg
nullability_return
nonnull_arg
nonnull_return
out_of_bounds
pointer_overflow
shift_out_of_bounds
sub_overflow
type_mismatch
vla_bound_not_positive
trap-func-name
.src
conditional operator
cond-lvalue
lb_add_len
idx_sub_1
len_sub_1
arrayidx
conv.ptr.element
vector.elt
idxprom
castToVec4
loadVec4
agg.tmp
agg-temp
temp.lvalue
llvm.named.register.
callee.knr.cast
__cfi_slowpath_diag
__cfi_slowpath
undef.agg.tmp
bf.ashr
bf.lshr
bf.cast
agg.tmp.ensured
aggregate expression
weird std::initializer_list
arraystart
arrayend
aggregate va_arg expression
arrayinit.begin
arrayinit.endOfInit
arrayinit.element
arrayinit.start
arrayinit.end
arrayinit.cur
arrayinit.next
arrayinit.done
non-simple lvalue dynamic_cast
lvalue dynamic_cast with a destination
atomic-to-nonatomic.temp
arrayinit.index
aggregate binary expression
string.init.end
array.init.end
array.exp.next
array.end
array.isempty
array.cur
array.next
array.atend
new.isnull
del.first
delete.end
.realp
.imagp
complex expression
neg.r
neg.i
conj.i
complex va_arg expression
cond.r
cond.i
.real
.imag
sub.r
sub.i
add.r
add.i
__divtc3
__divxc3
__divdc3
__divhc3
__divsc3
mul_ac
mul_bd
mul_ad
mul_bc
mul_r
mul_i
isnan_cmp
real_mul_phi
imag_mul_phi
mul.rl
mul.ir
mul.il
mul.rr
mul.r
mul.i
__mulhc3
__mulsc3
__muldc3
__mulxc3
__multc3
.tmp
.compoundliteral
internal error: could not emit constant value "abstractly"
land.ext
lor.ext
lnot
lnot.ext
scalar expression
vecext
astype
conv
GNU array range designator extension
vecinit
vext
virtual base in offsetof
mask
shuf_idx
shuf_elt
shuf_ins
shuffle
va_arg expression
splat
vla.negsize
vla.inc
incdec.funcptr
incdec.ptr
incdec.conv
incdec.objptr
cmp.r
cmp.i
and.ri
or.ri
sh_prom
shr.mask
shl.mask
shl.zeros
shl.check
sub.ptr.lhs.cast
sub.ptr.rhs.cast
sub.ptr.sub
sub.ptr.div
idx.ext
idx.neg
vla.index
non-scalar arg to printf
printf_args
llvm.loop.vectorize.width
llvm.loop.vectorize.enable
__NSArray0__
__NSDictionary0__
clang.arc.copy_on_escape
Obj-C fast enumeration for this runtime
state.ptr
items.ptr
iszero
mutationsptr.ptr
mutationsptr
forcoll.initial-mutations
forcoll.index
forcoll.count
statemutations
stateitems.ptr
stateitems
currentitem.ptr
currentitem
__isOSVersionAtLeast
CoreFoundation
CFBundleGetVersionNumber
__clang_at_available_requires_core_foundation_framework
objc_msg_lookup_sender
objc_slot_lookup_super
_Unwind_Resume_or_Rethrow
objc_setCppObjectAtomic
objc_getCppObjectAtomic
objc_msg_lookup
objc_msg_lookup_super
objc_msg_lookup_stret
objc_msg_lookup_super_stret
_OBJC_CLASS_
__objc_class_ref_
__objc_class_name_
objc_lookup_class
__objc_ivar_offset_
.guess
__objc_ivar_offset_value_
.objc_property_list
.objc_protocol_name
.objc_method_list
.objc_protocol_list
objc_get_meta_class
objc_get_class
.objc_metaclass_ref
.objc_class_ref
.ivar.offsets
.super_class_name
.class_name
_OBJC_METACLASS_
.objc_ivar_list
NXConstantString
.objc_str
.objc_selector_
__ObjC_Protocol_Holder_Ugly_Hack
AnotherHack
.objc_static_class_name
.objc_statics
.objc_statics_ptr
.objc_selector_list
.objc_sel_name
.objc_sel_types
.objc_source_file_name
.objc_load_function
__objc_exec_class
class_registerAlias_np
no_alias
__objc_id_type_info
__objc_eh_typeinfo_
_ZTVN7gnustep7libobjc22__objc_class_type_infoE
__objc_eh_typename_
GNUObjCMessageSend
objc_getPropertyStruct
objc_setPropertyStruct
struct._objc_method_description
struct._objc_method_description_list
struct._objc_protocol_extension
struct._objc_protocol
struct._objc_protocol_list
struct._objc_ivar
struct._objc_ivar_list
struct._objc_method_list
struct._objc_class_extension
struct._objc_class
struct._objc_category
struct._objc_symtab
struct._objc_module
struct._objc_exception_data
struct.__method_list_t
struct._protocol_t
struct._ivar_t
struct._ivar_list_t
struct._class_ro_t
struct._class_t
struct._category_t
_message_ref_t
struct._super_message_ref_t
struct._objc_typeinfo
OBJC_CLASS_$_NSConstantString
l_OBJC_PROTOCOL_$_
l_OBJC_$_PROTOCOL_REFS_
l_OBJC_$_PROP_LIST_
l_OBJC_$_PROTOCOL_METHOD_TYPES_
l_OBJC_$_CLASS_PROP_LIST_
l_OBJC_LABEL_PROTOCOL_$_
__objc_protolist
coalesced,no_dead_strip
__DATA, __objc_const
__OBJC,__property,regular,no_dead_strip
l_OBJC_$_PROTOCOL_CLASS_METHODS_OPT_
l_OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_
l_OBJC_$_PROTOCOL_CLASS_METHODS_
l_OBJC_$_PROTOCOL_INSTANCE_METHODS_
l_OBJC_$_CLASS_METHODS_
l_OBJC_$_INSTANCE_METHODS_
l_OBJC_$_CATEGORY_INSTANCE_METHODS_
l_OBJC_$_CATEGORY_CLASS_METHODS_
__TEXT,__objc_classname,cstring_literals
__TEXT,__objc_methname,cstring_literals
__TEXT,__objc_methtype,cstring_literals
OBJC_CLASS_NAME_
OBJC_METH_VAR_NAME_
OBJC_METH_VAR_TYPE_
OBJC_PROP_NAME_ATTR_
 Inline BYREF variable layout: 
 Inline block variable layout: 
0x0%llx
, BL_STRONG:%d
, BL_BYREF:%d
, BL_WEAK:%d
, BL_OPERATOR:0
 Byref variable layout: 
 Block variable layout: 
BL_OPERATOR:
BL_NON_OBJECT_BYTES:
BL_NON_OBJECT_WORD:
BL_STRONG:
BL_BYREF:
BL_WEAK:
BL_UNRETAINED:
 block variable layout for block: 
0x0%x%s
0x%x%s
objc_memmove_collectable
ivar
ivar.conv
OBJC_IVAR_$_
weakassign
globalassign
objc_assign_threadlocal
threadlocalassign
weakread
objc_exception_rethrow
objc_begin_catch
objc_end_catch
NSAutoreleasePool
OBJC_CLASSLIST_REFERENCES_$_
regular,no_dead_strip
OBJC_METACLASS_$_
objc_lookUpClass
objc_copyCppObjectAtomic
objc_copyStruct
objc_setProperty_nonatomic
objc_setProperty_nonatomic_copy
objc_setProperty_atomic_copy
objc_setProperty_atomic
objc_setProperty
objc_getProperty
l_OBJC_PROTOCOL_REFERENCE_$_
__objc_protorefs
OBJC_CLASSLIST_SUP_REFS_$_
objc_msgSendSuper2_stret
objc_msgSendSuper2
OBJC_SELECTOR_REFERENCES_
__objc_selrefs
literal_pointers,no_dead_strip
objc_msgSendSuper2_stret_fixup
objc_msgSend_stret_fixup
objc_msgSend_fpret_fixup
objc_msgSendSuper2_fixup
objc_msgSend_fixup
__objc_msgrefs
msgSend_fn
isFlipped
isKindOfClass
isEqualToString
_objc_empty_cache
_objc_empty_vtable
OBJC_EHTYPE_$_
objc_ehtype_vtable
__DATA,__objc_const
__DATA, __objc_data
l_OBJC_CLASS_PROTOCOLS_$_
__DATA, __objc_ivar
l_OBJC_$_INSTANCE_VARIABLES_
l_OBJC_METACLASS_RO_$_
l_OBJC_CLASS_RO_$_
%s ivar layout for class '%s': 
l_OBJC_$_CATEGORY_
l_OBJC_CATEGORY_PROTOCOLS_$_
struct.__builtin_NSString
_unnamed_nsstring_
__DATA,__objc_stringobj,regular,no_dead_strip
__OBJC,__cstring_object,regular,no_dead_strip
OBJC_EHTYPE_id
__objc_classlist
OBJC_LABEL_CLASS_$
__objc_nlclslist
OBJC_LABEL_NONLAZY_CLASS_$
__objc_catlist
OBJC_LABEL_CATEGORY_$
__objc_nlcatlist
OBJC_LABEL_NONLAZY_CATEGORY_$
__OBJC,__image_info,regular
__objc_imageinfo
Objective-C Version
Objective-C Garbage Collection
Objective-C GC Only
Objective-C Is Simulated
_objc_super
struct._prop_t
struct._prop_list_t
struct._objc_method
struct._objc_cache
_NSConstantStringClassReference
ClassReference
OBJC_PROTOCOL_
__OBJC,__protocol,regular,no_dead_strip
OBJC_PROTOCOL_METHOD_TYPES_
OBJC_$_PROP_PROTO_LIST_
OBJC_$_CLASS_PROP_PROTO_LIST_
l_OBJC_PROTOCOLEXT_
OBJC_PROTOCOL_REFS_
__OBJC,__cat_cls_meth,regular,no_dead_strip
OBJC_PROTOCOL_CLASS_METHODS_OPT_
OBJC_PROTOCOL_INSTANCE_METHODS_OPT_
OBJC_PROTOCOL_CLASS_METHODS_
OBJC_PROTOCOL_INSTANCE_METHODS_
OBJC_CLASS_METHODS_
OBJC_INSTANCE_METHODS_
OBJC_CATEGORY_INSTANCE_METHODS_
OBJC_CATEGORY_CLASS_METHODS_
__OBJC,__cat_inst_meth,regular,no_dead_strip
__OBJC,__cls_meth,regular,no_dead_strip
__OBJC,__inst_meth,regular,no_dead_strip
strongassign
sync.arg
exceptiondata.ptr
_call_try_exit
setjmp_buffer
setjmp_result
did_catch_exception
caught
propagating_exception
setjmp.result
matched
OBJC_CLASS_REFERENCES_
__OBJC,__cls_refs,literal_pointers,no_dead_strip
OBJC_METACLASS_
OBJC_CLASS_
__OBJC,__message_refs,literal_pointers,no_dead_strip
OBJC_CLASS_PROTOCOLS_
__OBJC,__meta_class,regular,no_dead_strip
OBJC_INSTANCE_VARIABLES_
__OBJC,__instance_vars,regular,no_dead_strip
__OBJC,__class,regular,no_dead_strip
OBJC_CLASSEXT_
__OBJC,__class_ext,regular,no_dead_strip
OBJC_CATEGORY_PROTOCOLS_
OBJC_CATEGORY_
__OBJC,__category,regular,no_dead_strip
OBJC_SYMBOLS
__OBJC,__symbols,regular,no_dead_strip
OBJC_MODULES
__OBJC,__module_info,regular,no_dead_strip
.objc_class_name_
.globl .objc_class_name_
.lazy_reference .objc_class_name_
.objc_category_name_
.globl .objc_category_name_
add.ptr
exn.adjusted
opencl.pipe_t
opencl.image1d_ro_t
opencl.image1d_array_ro_t
opencl.image1d_buffer_ro_t
opencl.image2d_ro_t
opencl.image2d_array_ro_t
opencl.image2d_depth_ro_t
opencl.image2d_array_depth_ro_t
opencl.image2d_msaa_ro_t
opencl.image2d_array_msaa_ro_t
opencl.image2d_msaa_depth_ro_t
opencl.image2d_array_msaa_depth_ro_t
opencl.image3d_ro_t
opencl.image1d_wo_t
opencl.image1d_array_wo_t
opencl.image1d_buffer_wo_t
opencl.image2d_wo_t
opencl.image2d_array_wo_t
opencl.image2d_depth_wo_t
opencl.image2d_array_depth_wo_t
opencl.image2d_msaa_wo_t
opencl.image2d_array_msaa_wo_t
opencl.image2d_msaa_depth_wo_t
opencl.image2d_array_msaa_depth_wo_t
opencl.image3d_wo_t
opencl.image1d_rw_t
opencl.image1d_array_rw_t
opencl.image1d_buffer_rw_t
opencl.image2d_rw_t
opencl.image2d_array_rw_t
opencl.image2d_depth_rw_t
opencl.image2d_array_depth_rw_t
opencl.image2d_msaa_rw_t
opencl.image2d_array_msaa_rw_t
opencl.image2d_msaa_depth_rw_t
opencl.image2d_array_msaa_depth_rw_t
opencl.image3d_rw_t
opencl.sampler_t
opencl.event_t
opencl.clk_event_t
opencl.queue_t
opencl.reserve_id_t
.cnt.addr
__kmpc_fork_call
__kmpc_global_thread_num
__kmpc_threadprivate_cached
__kmpc_critical
__kmpc_critical_with_hint
__kmpc_threadprivate_register
__kmpc_end_critical
__kmpc_cancel_barrier
__kmpc_barrier
__kmpc_for_static_fini
__kmpc_push_num_threads
__kmpc_flush
__kmpc_master
__kmpc_end_master
__kmpc_omp_taskyield
__kmpc_single
__kmpc_end_single
__kmpc_omp_task_alloc
__kmpc_omp_task
__kmpc_copyprivate
__kmpc_reduce
__kmpc_reduce_nowait
__kmpc_end_reduce
__kmpc_end_reduce_nowait
__kmpc_omp_task_begin_if0
__kmpc_omp_task_complete_if0
__kmpc_ordered
__kmpc_end_ordered
__kmpc_omp_taskwait
__kmpc_taskgroup
__kmpc_end_taskgroup
__kmpc_push_proc_bind
__kmpc_omp_task_with_deps
__kmpc_omp_wait_deps
__kmpc_cancellationpoint
__kmpc_cancel
__kmpc_push_num_teams
__kmpc_fork_teams
__kmpc_taskloop
__kmpc_doacross_init
__kmpc_doacross_fini
__kmpc_doacross_post
__kmpc_doacross_wait
__kmpc_task_reduction_init
__kmpc_task_reduction_get_th_data
__tgt_target
__tgt_target_teams
__tgt_register_lib
__tgt_unregister_lib
__tgt_target_data_begin
__tgt_target_data_end
__tgt_target_data_update
__tgt_bin_desc
__tgt_offload_entry
__tgt_device_image
.kmpc_loc.addr
;unknown;unknown;0;0;;
kmp_dim
dims
.offload_baseptrs
.offload_ptrs
.offload_sizes
.offload_maptypes
.omp_offloading.entries_begin
.omp_offloading.entries_end
.omp_offloading.device_images
.omp_offloading.descriptor
.omp_offloading.reg_unreg_var
.omp_offloading.descriptor_unreg
.omp_offloading.descriptor_reg
.omp_offloading.img_start.
.omp_offloading.img_end.
omp_offload.info
.run_host_version
reduction_size
kmp_task_red_input_t
.rd_input.
.rd_input.gep.
.red_init.
.red_fini.
.red_comb.
omp.arrayinit.isempty
.reduction
.gomp_critical_user_
.var
.atomic_reduction
.omp.reduction.reduction_func
kmp_task_t_with_privates
.kmp_privates.t
.omp_task_privates_map.
.omp_task_entry.
.omp_task_dup.
.omp_task_destructor.
kmp_cmplrdata_t
kmp_task_t
kmp_depend_info
.dep.arr.addr
.artificial.
.cache.
.__kmpc_global_ctor_.
.__kmpc_global_dtor_.
.__omp_threadprivate_init_.
__kmpc_dispatch_next_4
__kmpc_dispatch_next_4u
__kmpc_dispatch_next_8
__kmpc_dispatch_next_8u
__kmpc_dispatch_fini_4
__kmpc_dispatch_fini_4u
__kmpc_dispatch_fini_8
__kmpc_dispatch_fini_8u
__kmpc_for_static_init_4
__kmpc_for_static_init_4u
__kmpc_for_static_init_8
__kmpc_for_static_init_8u
__kmpc_dispatch_init_4
__kmpc_dispatch_init_4u
__kmpc_dispatch_init_8
__kmpc_dispatch_init_8u
.omp.copyprivate.did_it
.omp.copyprivate.cpr_list
.omp.copyprivate.copy_func
.omp_outlined.
.omp_combiner.
.omp_initializer.
.threadid_temp.
__omp_offloading
_%x_
.omp_offload.region_id
.omp_offloading.entry_name
.omp_offloading.entry
.omp_offloading.entries
ident_t
.zero.addr
_exec_mode
__kmpc_spmd_kernel_deinit
nvptx_num_threads
__kmpc_spmd_kernel_init
_worker
work_fn
exec_status
__kmpc_kernel_parallel
should_terminate
is_active
__kmpc_kernel_end_parallel
work_match
__kmpc_kernel_deinit
nvptx_tid
nvptx_warp_size
master_tid
__kmpc_kernel_init
.omp.reduction.red_list
_omp_reduction_shuffle_and_reduce_func
.omp.reduction.remote_reduce_list
_omp_reduction_inter_warp_copy_func
__openmp_nvptx_data_transfer_temporary_storage
nvptx_lane_id
nvptx_warp_id
warp_master
num_active_threads
is_active_thread
_omp_reduction_copy_to_scratchpad
_omp_reduction_load_and_reduce
.omp.reduction.remote_red_list
__kmpc_nvptx_end_reduce_nowait
__kmpc_kernel_prepare_parallel
__kmpc_serialized_parallel
__kmpc_end_serialized_parallel
__kmpc_shuffle_int32
__kmpc_shuffle_int64
__kmpc_nvptx_parallel_reduce_nowait
__kmpc_nvptx_teams_reduce_nowait
.omp.reduction.element
__omp_outlined__
.base
*** Dumping IRgen Record Layout
Record: 
<CGRecordLayout
  LLVMType:
  NonVirtualBaseLLVMType:
  IsZeroInitializable:
  BitFields:[
<CGBitFieldInfo
 Offset:
 IsSigned:
 StorageSize:
 StorageOffset:
agg.captured
srcloc
asmresult
LLVM IR generation of compound statement ('{}')
.casted
_debug__
.materialized_ref
.ref
omp.arraycpy.isempty
omp.arraycpy.srcElementPast
omp.arraycpy.destElementPast
omp.arraycpy.dest.element
omp.arraycpy.src.element
omp.arraycpy.done
lhs.begin
rhs.begin
.omp.sections.lb.
.omp.sections.ub.
.omp.sections.st.
.omp.sections.il.
.omp.sections.iv.
.priv.ptr.addr
.firstpriv.ptr.addr
.lastpriv.ptr.addr
non-trivial argument copy for return-adjusting thunk
stdext
__captured_stmt
__cyg_profile_func_exit
callsite
func_addr.int
global_addr.int
decoded_addr
kernel_arg_addr_space
kernel_arg_access_qual
kernel_arg_type
kernel_arg_base_type
kernel_arg_type_qual
kernel_arg_name
.cxx_destruct
sanitize_thread_no_checking_at_run_time
__destroy_helper_block_
xray-instruction-threshold
allocapt
return.sloc.ptr
__cyg_profile_func_enter
fentry-call
counting-function
agg.result
vla.begin
vla.end
vla.cur
vla.next
vla-init.isdone
indirect.goto.dest
array.begin
Could not read profile %0: %1
NumRegisterParameters
Dwarf Version
CodeView
StrictVTablePointers
StrictVTablePointersRequirement
min_enum_size
nvvm-reflect-ftz
opencl.spir.version
clang.global.decl.ptrs
opencl.ocl.version
Generating code for declaration
static initializer
bss-section
data-section
rodata-section
implicit-section-name
.str
.cp.rodata
cannot compile this %0 yet
function-instrument
xray-always
xray-log-args
xray-never
_ZSt9terminatev
?terminate@@YAXXZ
terminate
__CFConstantStringClassReference
__TEXT,__cstring,cstring_literals
__TEXT,__ustring
_unnamed_cfstring_
cfstring
__DATA,__cfstring
__objcFastEnumerationState
<string literal>
clang.decl.ptr
all-vtables
__translate_sampler_initializer
enable-value-profiling
Enable value profiling
Simple C/C++ TBAA
Simple C++ TBAA
omnipotent char
any pointer
vtable pointer
anon
enable-deferred-regions
Enable deferred region emission for Code Coverage
Expansion,
Skipped,
Gap,
File 
 (Expanded file = 
__llvm_coverage_mapping
File exit not handled before popRegions
__tls_guard
_tlv_atexit
__cxa_thread_atexit
__dso_handle
non-trivial TLS destruction
guard.uninitialized
tobool
__asan_load_cxx_array_cookie
__asan_poison_cxx_array_cookie
__cxa_deleted_virtual
__fundamental_type_info
__cxxabiv1
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv129__pointer_to_member_type_infoE
_ZTVN10__cxxabiv119__pointer_type_infoE
_ZTVN10__cxxabiv116__enum_type_infoE
_ZTVN10__cxxabiv120__function_type_infoE
_ZTVN10__cxxabiv117__array_type_infoE
_ZTVN10__cxxabiv123__fundamental_type_infoE
vbase.offset.ptr
vbase.offset
__cxa_bad_cast
offset.to.top
__dynamic_cast
__cxa_bad_typeid
__clang_call_terminate
__cxa_begin_catch
exn.byref.tmp
exn.byref
exn.casted
__cxa_get_exception_ptr
__cxa_end_catch
__cxa_allocate_exception
__cxa_throw
__cxa_rethrow
complete-offset.ptr
memptr.ptr
memptr.adj
memptr.virtualbit
memptr.isvirtual
lhs.memptr.ptr
rhs.memptr.ptr
cmp.ptr
cmp.ptr.null
lhs.memptr.adj
rhs.memptr.adj
cmp.adj
or.adj
cmp.or.adj
memptr.ne
memptr.eq
memptr.isnull
src.adj
memptr.adj.shifted
memptr.virtualfn
memptr.nonvirtualfn
thread wrappers
/include:___dyn_tls_init@12
/include:__dyn_tls_init
$initializer$
.CRT$XDU
__tls_init
__tlregdtor
more than 32 guarded initializations
_Init_thread_epoch
_Init_thread_header
_Init_thread_footer
_Init_thread_abort
_purecall
vbptr
vbtable
vbtindex
vbase_offs
rtti.CompleteObjectLocator
rtti.BaseClassDescriptor
__ImageBase
rtti.ClassHierarchyDescriptor
is_complete_object
is_most_derived
should_call_delete
vtordisp.value
vtordisp.ptr
this.int8
vbptr.
__RTCastToVoid
__RTDynamicCast
__RTtypeid
??_7type_info@@6B@
rtti.TypeDescriptor
eh.CatchableType
eh.CatchableTypeArray.
eh.ThrowInfo
_CxxThrowException
memptr.cmp0
memptr.cmp
memptr.tobool
lhs.0
rhs.0
memptr.cmp.first
memptr.cmp.rest
memptr.cmp.iszero
memptr.converted
memptr.offset
memptr.is_vbase
member pointer representation requires a complete class type for %0 to perform this expression
memptr.base
this.adjusted
clangast
__clangast
varet
xcore.typestrings
crv:
ap.cur
indirect.arg
ap.next
arg.addr
amdgpu-flat-work-group-size
amdgpu-waves-per-eu
amdgpu-num-sgpr
amdgpu-num-vgpr
argp.cur
argp.next
.aligned
gp_offset_p
fits_in_gp
fp_offset_p
fits_in_fp
vaarg.addr
overflow_arg_area_p
overflow_arg_area.next
/FAILIFMISMATCH:"
/DEFAULTLIB:
movl
%ebp, %ebp
## marker for objc_retainAutoreleaseReturnValue
={eax}
opencl.kernel_wg_size_info
overflow_arg_area_ptr
mem_addr
reg_count_ptr
reg_count
fits_in_regs
scaled_reg_count
reg_offset
reg_save_area_ptr
raw_reg_addr
reg_addr
raw_mem_addr
va_arg.addr
indirect_arg
__isr_
nvvm.annotations
maxntidx
minctasm
.vareal
.vaimag
vacplx
numUsedRegs
aggr
r7, r7
@ marker for objc_retainAutoreleaseReturnValue
fp, fp
# marker for objc_retainAutoreleaseReturnValue
gr_offs_p
gr_offs
vr_offs_p
vr_offs
align_regoffs
aligned_regoffs
new_reg_offs
reg_top_p
reg_top
stack_p
align_stack
new_stack
vaargs.addr
vaarg.promotion-temp
OBJC_CLASS_$_
<Parameter><Name>
</Name>
<IsVarArg />
<Index>
</Index>
<Direction isExplicit="
in,out
</Direction><Discussion>
</Discussion></Parameter>
<Discussion>
<Verbatim xml:space="preserve" kind="code">
<Verbatim xml:space="preserve" kind="verbatim">
</Verbatim>
<rawHTML
 isMalformed="1"
>&lt;/
&gt;</rawHTML>
<![CDATA[
]]]]><![CDATA[>
</rawHTML>
<bold>
</bold>
<monospaced>
</monospaced>
<emphasized>
</emphasized>
<Other
<Function
 templateKind="template"
 templateKind="specialization"
 isInstanceMethod="1"
 isClassMethod="1"
<Class
 templateKind="partialSpecialization"
<Variable
<Namespace
<Typedef
<Enum
</Class>
</Function>
</Other>
</Variable>
</Namespace>
</Typedef>
</Enum>
 file="
 line="
" column="
<Name>
<Name>&lt;anonymous&gt;</Name>
<USR>
</USR>
<Other><Name>unknown</Name>
<Headerfile>
</Headerfile>
<Declaration>
xmldecl.xd
</Declaration>
<Abstract>
</Abstract>
<TemplateParameters>
</TemplateParameters>
<Parameters>
</Parameters>
<Exceptions>
</Exceptions>
<ResultDiscussion>
</ResultDiscussion>
<Deprecated/>
<Deprecated>
</Deprecated>
<Unavailable/>
<Unavailable>
</Unavailable>
<Availability
 distribution="
<IntroducedInVersion>
</IntroducedInVersion>
<DeprecatedInVersion>
</DeprecatedInVersion>
<RemovedAfterVersion>
</RemovedAfterVersion>
<DeprecationSummary>
</DeprecationSummary>
</Availability>
</Discussion>
bridgeOS
iOS (App Extension)
macOS (App Extension)
tvOS (App Extension)
watchOS (App Extension)
<Para>
<Para kind="
</Para>
units
records
failed creating index directory %0
failed writing record '%0': %1
failed writing unit data: %0
failed file status check: %0
could not access record '
REC_VERSION_BLOCK
REC_VERSION
REC_DECLS_BLOCK
REC_DECLINFO
REC_DECLOFFSETS_BLOCK
REC_DECLOFFSETS
REC_DECLOCCURRENCES_BLOCK
REC_DECLOCCURRENCE
-temp-%%%%%%%%
XCTestCase
gk_inspectable
could not access path '
failed to determine current working directory: 
UNIT_VERSION_BLOCK
UNIT_VERSION
UNIT_INFO_BLOCK
UNIT_INFO
UNIT_DEPENDENCIES_BLOCK
UNIT_DEPENDENCY
UNIT_INCLUDES_BLOCK
UNIT_INCLUDE
UNIT_PATHS_BLOCK
UNIT_PATH
UNIT_PATH_BUFFER
UNIT_MODULES_BLOCK
UNIT_MODULE
UNIT_MODULE_BUFFER
failed to create temporary file: 
failed to rename '
failed to create directory '
objc(cs)
@CM@
objc(cy)
(im)
(cm)
(cpy)
(py)
objc(pl)
@NA@
@UUT@
@UUV@
@FI@
@FT@
objc(ext)
@macro@
^[1-9][0-9]?\.
clang-format on
clang-format off
TODO
FIXME
^[1-9][0-9]?\. 
/// 
//! 
///<
///< 
//!<
//!< 
_T("
endl
^ IWYU pragma:
foreach
Q_FOREACH
BOOST_FOREACH
^"(llvm|llvm-c|clang|clang-c)/
^(<|"(gtest|gmock|isl|json)/)
(Test)?$
CF_ENUM
CF_OPTIONS
NS_ENUM
NS_OPTIONS
async
await
yield
extends
implements
instanceof
option
repeated
signals
Q_SIGNALS
slots
Q_SLOTS
>>>>
|||||||
=======
====
<<<<
// clang-format on
/* clang-format on */
// clang-format off
/* clang-format off */
// namespace
Error while adding namespace end comment: 
Error while updating namespace end comment: 
^/[/*] *(end (of )?)? *(anonymous|unnamed)? *namespace( +([a-zA-Z0-9:_]+))?\.? *(\*/)?$
setTestOnly
forwardDeclare
goog
SWIG
Error while sorting using declarations: 
Failed to apply a replacement.
The new replacement's file path is different from the file path of existing replacements
The new replacement overlaps with an existing replacement.
The new insertion has the same insert location as an existing replacement.
New replacement: 
Existing replacement: 
LIBCLANG_TIMING
LIBCLANG_OBJTRACKING
+++ %u translation units
--- %u translation units
LIBCLANG_DISABLE_PCH_VALIDATION
.pch-final
modules.timestamp
reading_modules
Reading modules
.map
LLBUILD_TASK_ID
clang -cc1 version 9.1.0
 default target 
 warning
 error
 generated.
frontend
Clang front-end time report
Clang front-end timer
loading.
Loading 
__inferred_module.map
preloading.
Preloading 
-verify-ignore-unexpected=
opencl-c.h
html
html-single-file
plist-multi-file
plist-html
statement
noredundancy
spir-compat
iso9899:1990
gnu90
iso9899:1999
iso9899:199x
gnu9x
iso9899:2011
iso9899:201x
gnu1x
c++03
gnu++03
c++0x
gnu++0x
c++1y
gnu++1y
c++1z
gnu++1z
CL1.1
CL1.2
CL2.0
-faddress-space-map-mangling=
multiple
-fms-memptr-rep=
-fdefault-calling-conv=
-fdefault-calling-conv
LLVM IR
Objective-C
Objective-C++
line-tables-only
limited
lldb
llvm
small
medium
large
non-legacy
mixed
ieee
preserve-sign
positive-zero
ARC migration
ObjC migration
-cpp-output
-module-map
-header
objc++
digraph "dependencies" {
header_
 [ shape="box", label="
while building module '
in module '
in file included from 
(skipping 
 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
expanded from here
expanded from macro '
<module-includes>
%0 was deserialized
PCH DECL: 
extern "C" {
#import "
STATISTICS FOR '
unknown module format
Note: including file:
<command line>
/usr/include/c++/4.2.1
powerpc-apple-darwin10
/usr/include/c++/4.0.0
i686-apple-darwin10
i686-apple-darwin8
arm-apple-darwin10
arm64-apple-darwin10
4.7.3
i686-pc-cygwin
4.5.3
4.3.4
4.3.2
/usr/include/c++/5.0
/usr/gnu/include/c++/4.4.3
/boot/system/non-packaged/develop/headers
/boot/system/develop/headers/os
/boot/system/develop/headers/os/app
/boot/system/develop/headers/os/arch
/boot/system/develop/headers/os/device
/boot/system/develop/headers/os/drivers
/boot/system/develop/headers/os/game
/boot/system/develop/headers/os/interface
/boot/system/develop/headers/os/kernel
/boot/system/develop/headers/os/locale
/boot/system/develop/headers/os/mail
/boot/system/develop/headers/os/media
/boot/system/develop/headers/os/midi
/boot/system/develop/headers/os/midi2
/boot/system/develop/headers/os/net
/boot/system/develop/headers/os/opengl
/boot/system/develop/headers/os/storage
/boot/system/develop/headers/os/support
/boot/system/develop/headers/os/translation
/boot/system/develop/headers/os/add-ons/graphics
/boot/system/develop/headers/os/add-ons/input_server
/boot/system/develop/headers/os/add-ons/mail_daemon
/boot/system/develop/headers/os/add-ons/registrar
/boot/system/develop/headers/os/add-ons/screen_saver
/boot/system/develop/headers/os/add-ons/tracker
/boot/system/develop/headers/os/be_apps/Deskbar
/boot/system/develop/headers/os/be_apps/NetPositive
/boot/system/develop/headers/os/be_apps/Tracker
/boot/system/develop/headers/3rdparty
/boot/system/develop/headers/bsd
/boot/system/develop/headers/glibc
/boot/system/develop/headers/posix
/boot/system/develop/headers
/usr/include/w32api
/target/include
/target/include_common
.xctoolchain/usr
/CommandLineTools/usr
/XcodeDefault.xctoolchain/usr
/XcodeDefault.xctoolchain/usr/include
/System/Library/Frameworks
/Library/Frameworks
#include "..." search starts here:
End of search list.
#include <...> search starts here:
 (framework directory)
 (headermap)
ignoring duplicate directory "
  as it is a non-system directory that duplicates 
a system directory
/include/c++
/include/c++/backward
ignoring nonexistent directory "
# 1 "<built-in>" 3
_GLIBCXX_PREDEFINED_OBJC_ARC_IS_SCALAR
namespace std {
struct __true_type;
struct __false_type;
template<typename _Tp> struct __is_scalar;
template<typename _Tp>
struct __is_scalar<__attribute__((objc_ownership(strong))) _Tp> {
  enum { __value = 0 };
  typedef __false_type __type;
struct __is_scalar<__attribute__((objc_ownership(weak))) _Tp> {
struct __is_scalar<__attribute__((objc_ownership(autoreleasing)))
 _Tp> {
__STDC__
__STDC_HOSTED__
__STDC_VERSION__
201112L
199901L
199409L
__cplusplus
201707L
201703L
201103L
199711L
__STDCPP_DEFAULT_NEW_ALIGNMENT__
__OBJC__
__OPENCL_C_VERSION__
CL_VERSION_1_0
CL_VERSION_1_1
CL_VERSION_1_2
CL_VERSION_2_0
__ENDIAN_LITTLE__
__FAST_RELAXED_MATH__
__ASSEMBLER__
__CUDA__
# 1 "<command line>" 1
# 1 "<built-in>" 2
__llvm__
__clang__
__clang_major__
__clang_minor__
__clang_patchlevel__
__clang_version__
"9.1.0 
__GNUC_MINOR__
__GNUC_PATCHLEVEL__
__GNUC__
__GXX_ABI_VERSION
1002
__ATOMIC_RELAXED
__ATOMIC_CONSUME
__ATOMIC_ACQUIRE
__ATOMIC_RELEASE
__ATOMIC_ACQ_REL
__ATOMIC_SEQ_CST
__PRAGMA_REDEFINE_EXTNAME
__VERSION__
"4.2.1 Compatible 
__STRICT_ANSI__
__GXX_EXPERIMENTAL_CXX0X__
__OBJC2__
OBJC_ZEROCOST_EXCEPTIONS
__OBJC_GC__
__NEXT_RUNTIME__
__OBJFW_RUNTIME_ABI__
__attribute__((iboutlet))
IBOutletCollection(ClassName)
__attribute__((iboutletcollection(ClassName)))
void)__attribute__((ibaction)
IBInspectable
IB_DESIGNABLE
__OBJC_BOOL_IS_BOOL
__cpp_rtti
199711
__cpp_exceptions
__cpp_unicode_characters
200704
__cpp_raw_strings
200710
__cpp_unicode_literals
__cpp_user_defined_literals
200809
__cpp_lambdas
200907
__cpp_constexpr
201304
201603
__cpp_range_based_for
__cpp_static_assert
200410
201411
__cpp_decltype
200707
__cpp_attributes
__cpp_rvalue_references
200610
__cpp_variadic_templates
__cpp_initializer_lists
200806
__cpp_delegating_constructors
200604
__cpp_nsdmi
__cpp_inheriting_constructors
201511
__cpp_ref_qualifiers
__cpp_alias_templates
__cpp_threadsafe_static_init
__cpp_binary_literals
__cpp_digit_separators
201309
__cpp_init_captures
__cpp_generic_lambdas
__cpp_decltype_auto
__cpp_return_type_deduction
__cpp_aggregate_nsdmi
__cpp_variable_templates
__cpp_sized_deallocation
__cpp_hex_float
__cpp_inline_variables
201606
__cpp_noexcept_function_type
201510
__cpp_capture_star_this
__cpp_if_constexpr
__cpp_deduction_guides
201611
__cpp_template_auto
__cpp_namespace_attributes
__cpp_enumerator_attributes
__cpp_nested_namespace_definitions
__cpp_variadic_using
__cpp_aggregate_bases
__cpp_structured_bindings
__cpp_nontype_template_args
__cpp_fold_expressions
__cpp_aligned_new
__cpp_experimental_concepts
__cpp_coroutines
__CONSTANT_CFSTRINGS__
__PASCAL_STRINGS__
__block
__attribute__((__blocks__(byref)))
__BLOCKS__
__EXCEPTIONS
__GXX_RTTI
__USING_SJLJ_EXCEPTIONS__
__DEPRECATED
__GNUG__
__GXX_WEAK__
_WCHAR_T_DEFINED
_NATIVE_WCHAR_T_DEFINED
__OPTIMIZE__
__OPTIMIZE_SIZE__
__FAST_MATH__
__ORDER_LITTLE_ENDIAN__
1234
__ORDER_BIG_ENDIAN__
4321
__ORDER_PDP_ENDIAN__
3412
__BYTE_ORDER__
__BIG_ENDIAN__
_ILP32
__ILP32__
__CHAR_BIT__
__SCHAR_MAX__
__SHRT_MAX__
__INT_MAX__
__LONG_MAX__
__LONG_LONG_MAX__
__WCHAR_MAX__
__INTMAX_MAX__
__SIZE_MAX__
__UINTMAX_MAX__
__PTRDIFF_MAX__
__INTPTR_MAX__
__UINTPTR_MAX__
__SIZEOF_DOUBLE__
__SIZEOF_FLOAT__
__SIZEOF_INT__
__SIZEOF_LONG__
__SIZEOF_LONG_DOUBLE__
__SIZEOF_LONG_LONG__
__SIZEOF_POINTER__
__SIZEOF_SHORT__
__SIZEOF_PTRDIFF_T__
__SIZEOF_SIZE_T__
__SIZEOF_WCHAR_T__
__SIZEOF_WINT_T__
__SIZEOF_INT128__
__INTMAX_TYPE__
__INTMAX
__INTMAX_C_SUFFIX__
__UINTMAX_TYPE__
__UINTMAX
__UINTMAX_C_SUFFIX__
__INTMAX_WIDTH__
__PTRDIFF_TYPE__
__PTRDIFF
__PTRDIFF_WIDTH__
__INTPTR_TYPE__
__INTPTR
__INTPTR_WIDTH__
__SIZE_TYPE__
__SIZE
__SIZE_WIDTH__
__WCHAR_TYPE__
__WCHAR_WIDTH__
__WINT_TYPE__
__WINT_WIDTH__
__SIG_ATOMIC_WIDTH__
__SIG_ATOMIC_MAX__
__CHAR16_TYPE__
__CHAR32_TYPE__
__UINTMAX_WIDTH__
__UINTPTR_TYPE__
__UINTPTR
__UINTPTR_WIDTH__
LDBL
__POINTER_WIDTH__
__BIGGEST_ALIGNMENT__
__CHAR_UNSIGNED__
__WCHAR_UNSIGNED__
__WINT_UNSIGNED__
__USER_LABEL_PREFIX__
__FINITE_MATH_ONLY__
__GNUC_GNU_INLINE__
__GNUC_STDC_INLINE__
__GCC_ATOMIC_TEST_AND_SET_TRUEVAL
__CLANG_ATOMIC_
__GCC_ATOMIC_
__NO_INLINE__
__PIC__
__pic__
__PIE__
__pie__
__FLT_EVAL_METHOD__
__FLT_RADIX__
__DECIMAL_DIG__
__LDBL_DECIMAL_DIG__
__SSP__
__SSP_STRONG__
__SSP_ALL__
__clang_analyzer__
__attribute__((objc_gc(strong)))
__attribute__((objc_ownership(weak)))
__attribute__((objc_ownership(strong)))
__attribute__((objc_ownership(autoreleasing)))
__attribute__((objc_ownership(none)))
__nonnull
__null_unspecified
__nullable
__APPLE_EMBEDDED_SIMULATOR__
_OPENMP
201307
201107
__CLANG_CUDA_APPROX_TRANSCENDENTALS__
cl_khr_select_fprounding_mode
cl_khr_gl_event
cl_khr_d3d10_sharing
cl_khr_context_abort
cl_khr_d3d11_sharing
cl_khr_depth_images
cl_khr_dx9_media_sharing
cl_khr_image2d_from_buffer
cl_khr_initialize_memory
cl_khr_gl_depth_images
cl_khr_spir
cl_khr_egl_event
cl_khr_egl_image
cl_khr_srgb_image_writes
cl_khr_terminate_context
__GLIBCXX_TYPE_INT_N_0
__GLIBCXX_BITSIZE_INT_N_0
BOOL_LOCK_FREE
CHAR_LOCK_FREE
CHAR16_T_LOCK_FREE
CHAR32_T_LOCK_FREE
WCHAR_T_LOCK_FREE
SHORT_LOCK_FREE
INT_LOCK_FREE
LONG_LOCK_FREE
LLONG_LOCK_FREE
POINTER_LOCK_FREE
__INT_FAST
__UINT_FAST
_TYPE__
_MAX__
__INT_LEAST
__UINT_LEAST
__INT
__UINT
_C_SUFFIX__
4.94065645841246544176568792868221e-324
6.47517511943802511092443895822764655e-4966
3.64519953188247460253e-4951
1.92592994438723585305597794258492732e-34
1.08420217248550443401e-19
2.00416836000897277799610805135016e-292
3.36210314311209350626267781732175260e-4932
3.36210314311209350626e-4932
1.79769313486231580793728971405301e+308
1.18973149535723176508575932662800702e+4932
1.17549435e-38
2.2250738585072014e-308
1.19209290e-7
2.2204460492503131e-16
1.40129846e-45
4.9406564584124654e-324
1.18973149535723176502e+4932
3.40282347e+38
1.7976931348623157e+308
DENORM_MIN__
HAS_DENORM__
DIG__
DECIMAL_DIG__
EPSILON__
HAS_INFINITY__
HAS_QUIET_NAN__
MANT_DIG__
MAX_10_EXP__
MAX_EXP__
MAX__
MIN_10_EXP__
MIN_EXP__
MIN__
ouxX
_FMT
getLangStandardForKind() on unspecified kind
ISO C 1990
iso9899:199409
ISO C 1990 with amendment 1
gnu89
ISO C 1990 with GNU extensions
ISO C 1999
gnu99
ISO C 1999 with GNU extensions
ISO C 2011
gnu11
ISO C 2011 with GNU extensions
c++98
ISO C++ 1998 with amendments
gnu++98
ISO C++ 1998 with amendments and GNU extensions
c++11
ISO C++ 2011 with amendments
gnu++11
ISO C++ 2011 with amendments and GNU extensions
ISO C++ 2014 with amendments
gnu++14
ISO C++ 2014 with amendments and GNU extensions
c++17
ISO C++ 2017 with amendments
gnu++17
ISO C++ 2017 with amendments and GNU extensions
c++2a
Working draft for ISO C++ 2020
gnu++2a
Working draft for ISO C++ 2020 with GNU extensions
cl1.0
OpenCL 1.0
cl1.1
OpenCL 1.1
cl1.2
OpenCL 1.2
cl2.0
OpenCL 2.0
NVIDIA CUDA(tm)
*** Dumping AST Record Layout
 Size:
Alignment:
sizeof=
align=
FieldOffsets: [
<dict>
  <key>main-file</key>
  <key>dwarf-debug-flags</key>
  <key>diagnostics</key>
  <array>
  </array>
</dict>
    <dict>
      <key>level</key>
      
      <key>filename</key>
      <key>line</key>
<integer>
</integer>
      <key>column</key>
      <key>message</key>
      <key>ID</key>
      <key>WarningOption</key>
    </dict>
<string>
</string>
&amp;
&lt;
&gt;
&apos;
&quot;
vfs.yaml
Meta
Diag
Failed to open diagnostics file
Invalid diagnostics signature
Parse error reading diagnostics
Malformed block at top-level of diagnostics
Malformed sub-block in a diagnostic
Malformed BlockInfo block
Malformed Metadata block
Malformed Diagnostic block
Malformed Diagnostic record
No version provided in diagnostics
Unsupported diagnostics version
Bitcode constructs that are not supported in diagnostics appear
Generic error occurred while handling a record
clang.serialized_diags
Read extension block message: %s
Hello from 
While building module '
' imported from 
In module '
In file included from 
In included file:
  ...
     
fix-it:"
 (in PCH)
fatal error
(clang)
 [-ferror-limit=]
 [-Werror
  (frontend)
 File 
 Line 
  File 
 Line *
 (directive at 
no-diagnostics
bind-arch
offload
analyzer
migrator
clang-offload-unbundler
device-cuda
device-openmp
-cuda
-openmp
/etc/lsb-release
DISTRIB_CODENAME=
hardy
intrepid
jaunty
karmic
lucid
maverick
natty
oneiric
precise
quantal
raring
saucy
trusty
utopic
vivid
wily
xenial
yakkety
zesty
artful
/etc/redhat-release
Fedora release
Red Hat Enterprise Linux
CentOS
Scientific Linux
release 7
release 6
release 5
/etc/debian_version
squeeze/sid
wheezy/sid
jessie/sid
stretch/sid
/etc/SuSE-release
VERSION
/etc/exherbo-release
/etc/arch-release
clang LLVM compiler
9.1.0
Command line argument parsing
stdc++
cc_kext
351.8
thin
libomp
libgomp
-fopenmp
nvptx64-nvidia-cuda
nvptx-nvidia-cuda
apple
Compilation construction
COMPILER_PATH
FORCE_CLANG_DIAGNOSTICS_CRASH
bitcode
Building compilation jobs
 - "
", inputs: [
(input arg)
(nothing)
], output: 
], outputs: [
Computing output path
.pch
LLVM_DIAGNOSTIC_DIR
a.exe
a.out
Building compilation actions
Constructing phase actions
Building universal build actions
4.2.1
programs: =
libraries: =
libgcc.a
Target: 
Thread model: 
InstalledDir: 
-miamcu
<action group>
<CompileOnly group>
<g group>
<W/R group>
<I group>
<I/i group>
<T/e/s/t/u group>
<M group>
<O group>
<Preprocessor group>
<R group>
<R (with value) group>
<Static analyzer group>
<T group>
<W group>
<W (with value) group>
</M group>
</volatile group>
<clang-cl options>
CL.EXE COMPATIBILITY OPTIONS
<clang-cl compile-only options>
<clang-cl ignored options>
<clang i group>
<clang ignored f group>
<clang_ignored_gcc_optimization_f_Group>
<clang legacy flags>
<clang ignored m group>
<d group>
<f group>
<f (clang-only) group>
<gN group>
<gTune group>
<g flags group>
<gfortran group>
<ggdbN group>
<i group>
<clang internal options>
<clang debug/development internal options>
<clang driver internal options>
DRIVER OPTIONS
<m group>
<aarch64 features group>
<amdgpu features group>
<arm features group>
<hexagon features group>
<m libc group>
<ppc features group>
<wasm features group>
<x86 features group>
<opencl group>
<pedantic group>
<reserved libs group>
<u group>
Print (but do not run) the commands to run for this compilation
add-plugin
Use the named plugin action in addition to the default action
<name>
all-warnings
all_load
allowable_client
analyze-auto
analyze-function=
analyze-function
Run analysis on specific function (for C++ include parameters in name)
analyze-
analyzer-checker-help
Display the list of analyzer checkers that are available
analyzer-checker=
analyzer-checker
Choose analyzer checkers to enable
analyzer-config
Choose analyzer options to enable
analyzer-constraints=
analyzer-constraints
Source Code Analysis - Symbolic Constraint Engines
analyzer-disable-all-checks
Disable all static analyzer checks
analyzer-disable-checker=
analyzer-disable-checker
Choose analyzer checkers to disable
analyzer-disable-retry-exhausted
Do not re-analyze paths leading to exhausted nodes with a different strategy (may decrease code coverage)
analyzer-display-progress
Emit verbose output about the analyzer's progress
analyzer-eagerly-assume
Eagerly assume the truth/falseness of some symbolic constraints
analyzer-inline-max-stack-depth=
analyzer-inline-max-stack-depth
Bound on stack depth while inlining (4 by default)
analyzer-inlining-mode=
analyzer-inlining-mode
Specify the function selection heuristic used during inlining
analyzer-list-enabled-checkers
Display the list of enabled analyzer checkers
analyzer-max-loop
The maximum number of times the analyzer will go through a loop
analyzer-no-default-checks
analyzer-opt-analyze-headers
Force the static analyzer to analyze functions defined in header files
analyzer-opt-analyze-nested-blocks
Analyze the definitions of blocks in addition to functions
analyzer-output=
analyzer-output
Static analyzer report output format (html|plist|plist-multi-file|plist-html|text).
Source Code Analysis - Output Options
analyzer-purge=
analyzer-purge
Source Code Analysis - Dead Symbol Removal Frequency
analyzer-stats
Print internal analyzer statistics.
analyzer-store=
analyzer-store
Source Code Analysis - Abstract Memory Store Models
analyzer-viz-egraph-graphviz
Display exploded graph using GraphViz
analyzer-viz-egraph-ubigraph
Display exploded graph using Ubigraph
Run the static analyzer
Run static analysis engine
ansi
arange_sections
Emit DWARF .debug_arange sections
arch:
Set architecture for code generation
arch_errors_fatal
arch_only
arch
arcmt-check
Check for ARC migration issues that need manual handling
arcmt-migrate-emit-errors
Emit ARC errors even if the migrator can fix them
arcmt-migrate-report-output
Output path for the plist report
arcmt-migrate
Apply modifications and produces temporary files that conform to ARC
arcmt-modify
Apply modifications to files to conform to ARC
assemble
assert=
ast-dump-all
Build ASTs and then debug dump them, forcing deserialization
ast-dump-filter
Use with -ast-dump or -ast-print to dump/print only AST declaration nodes having a certain substring in a qualified name. Use -ast-list to list all filterable declaration node names.
<dump_filter>
ast-dump-lookups
Build ASTs and then debug dump their name lookup tables
ast-dump
Build ASTs and then debug dump them
ast-list
Build ASTs and print the list of declaration node qualified names
ast-merge
Merge the given AST file into the translation unit being compiled.
<ast file>
ast-print
Build ASTs and then pretty-print them
ast-view
Build ASTs and view them with GraphViz
autocomplete=
aux-triple
Auxiliary target triple.
backend-option
Additional arguments to forward to LLVM backend (during code gen)
bigobj
bind_at_load
bootclasspath=
bootclasspath
Brepro-
Emit an object file which cannot be reproduced over time
Brepro
Emit an object file which can be reproduced over time
bundle_loader
bundle
Add <dir> to search path for binaries and object files used implicitly
<dir>
c-isystem
Add directory to the C SYSTEM include search path
cc1as
ccc-arcmt-check
ccc-arcmt-migrate
ccc-arcmt-modify
ccc-gcc-name
Name for native GCC compiler
<gcc-path>
ccc-install-dir
Simulate installation in the given directory
ccc-objcmt-migrate
Apply modifications and produces temporary files to migrate to modern ObjC syntax
ccc-pch-is-pch
Use lazy PCH for precompiled headers
ccc-pch-is-pth
Use pretokenized headers for precompiled headers
ccc-print-bindings
Show bindings of tools to actions
ccc-print-phases
ccc-
Include comments from within macros in preprocessed output
cfg-add-implicit-dtors
Add C++ implicit destructors to CFGs for all analyses
cgthreads
chain-include
Include and chain a header file after turning it into PCH
cl-denorms-are-zero
OpenCL only. Allow denormals to be flushed to zero.
cl-ext=
OpenCL only. Enable or disable OpenCL extensions. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
cl-fast-relaxed-math
OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
cl-finite-math-only
OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
cl-fp32-correctly-rounded-divide-sqrt
OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
cl-kernel-arg-info
OpenCL only. Generate kernel argument metadata.
cl-mad-enable
OpenCL only. Allow use of less precise MAD computations in the generated binary.
cl-no-signed-zeros
OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
cl-opt-disable
OpenCL only. This option disables all optimizations. By default optimizations are enabled.
cl-single-precision-constant
OpenCL only. Treat double precision floating-point constant as single precision constant.
cl-std=
OpenCL language standard to compile for.
cl,CL,cl1.1,CL1.1,cl1.2,CL1.2,cl2.0,CL2.0
cl-strict-aliasing
OpenCL only. This option is added for compatibility with OpenCL 1.0.
cl-unsafe-math-optimizations
OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable.
CLASSPATH=
classpath=
CLASSPATH
classpath
client_name
code-completion-at=
code-completion-at
Dump code-completion information at a location
<file>:<line>:<column>
code-completion-brief-comments
Include brief documentation comments in code-completion results.
code-completion-macros
Include macros in code-completion results
code-completion-patterns
Include code patterns in code-completion results
combine
comments-in-macros
comments
compatibility_version
compile
compress-debug-sections=
DWARF debug sections compression type
compress-debug-sections
DWARF debug sections compression
constant-cfstrings
coverage-cfg-checksum
Emit CFG checksum for functions in .gcno files.
coverage-data-file=
coverage-data-file
Emit coverage data to this filename.
coverage-exit-block-before-body
Emit the exit block before the body blocks in .gcno files.
coverage-no-function-names-in-data
Emit function names in .gcda files.
coverage-notes-file=
coverage-notes-file
Emit coverage notes to this filename.
coverage-version=
Four-byte version string for gcov files.
coverage
cpp-precomp
cuda-compile-host-device
Compile CUDA code for both host and device (default).  Has no effect on non-CUDA compilations.
cuda-device-only
Compile CUDA code for device only
cuda-gpu-arch=
CUDA GPU architecture (e.g. sm_35).  May be specified more than once.
cuda-host-only
Compile CUDA code for host only.  Has no effect on non-CUDA compilations.
cuda-noopt-device-debug
Enable device-side debug info generation. Disables ptxas optimizations.
cuda-path=
CUDA installation path
current_version
cxx-isystem
Add directory to the C++ SYSTEM include search path
Include comments in preprocessed output
Don't discard comments when preprocessing
Only run preprocess, compile, and assemble steps
Compile only
d1reportAllClassLayout
Dump record layout information
d2FastFail
d2Zi+
Print macro definitions in -E mode in addition to normal output
dead_strip
debug-info-kind=
debug-info-macro
Emit macro debug information
debug=
debugger-tuning=
define-macro=
define-macro
defsym
Define a value for a symbol
dependency-dot
Filename to write DOT-formatted header dependencies to
dependency-file
Filename (or -) to write dependency output to
dependent-lib=
detailed-preprocessing-record
include a detailed record of preprocessing actions
diagnostic-log-file
Filename (or -) to log diagnostics to
diagnostics:caret
Enable caret and column diagnostics (on by default)
diagnostics:classic
Disable column and caret diagnostics
diagnostics:column
Disable caret diagnostics but keep column info
disable-free
Disable freeing of memory on exit
disable-lifetime-markers
Disable lifetime-markers emission even when optimizations are enabled
disable-llvm-passes
Use together with -emit-llvm to get pristine LLVM IR from the frontend by not running any LLVM passes at all
disable-llvm-verifier
Don't run the LLVM IR verifier pass
disable-O0-optnone
Disable adding the optnone attribute to functions at O0
disable-objc-default-synthesize-properties
disable the default synthesis of Objective-C properties
disable-red-zone
Do not emit code that uses the red zone.
discard-value-names
Discard value names in LLVM IR
Print include directives in -E mode in addition to normal output
Print macro definitions in -E mode instead of normal output
Set the driver mode to either 'gcc', 'g++', 'cpp', or 'cl'
dump-coverage-mapping
Dump the coverage mapping records, for testing
dump-deserialized-decls
Dump declarations that are deserialized from PCH, for testing
dump-raw-tokens
Lex file in raw mode and dump raw tokens
dump-tokens
Run preprocessor, dump internal rep of tokens
dumpmachine
dumpspecs
dumpversion
dwarf-column-info
Turn on column location information.
dwarf-debug-flags
The string to embed in the Dwarf debug flags record.
dwarf-debug-producer
The string to embed in the Dwarf debug AT_producer record.
dwarf-ext-refs
Generate debug info with external references to clang modules or precompiled headers
dwarf-version=
dyld-prefix=
dyld-prefix
dylib_file
dylinker_install_name
dylinker
dynamiclib
Define <macro> to <value> (or 1 if <value> omitted)
<macro>=<value>
Define macro
<macro[=value]>
Exception handling model
emit-ast
Emit Clang AST files for source inputs
emit-codegen-only
Generate machine code, but discard output
emit-html
Output input source as HTML
emit-llvm-bc
Build ASTs then convert to LLVM, emit .bc file
emit-llvm-only
Build ASTs and convert to LLVM, discarding output
emit-llvm-uselists
Preserve order of LLVM use-lists when serializing
emit-llvm
Use the LLVM representation for assembler and object files
emit-module-interface
Generate pre-compiled module file from a C++ module interface
Generate pre-compiled module file from a module map
emit-obj
Emit native object files
Generate pre-compiled header file
emit-pth
Generate pre-tokenized header file
enable-split-dwarf
Use split dwarf/Fission
encoding=
Eonly
Just run preprocessor, no output (for timings)
Disable linemarker output and preprocess to stdout
error-on-deserialized-decl=
error-on-deserialized-decl
Emit error if a specific declaration is deserialized from PCH, for testing
errorReport
execution-charset:
Runtime encoding, supports only UTF-8
exported_symbols_list
extdirs=
extdirs
extra-warnings
Only run the preprocessor
Preprocess to stdout
faccess-control
faddress-space-map-mangling=
Set the mode for address space map based mangling; OpenCL testing purposes only
<yes|no|target>
faggressive-function-elimination
falign-commons
falign-functions=
falign-functions
falign-jumps=
falign-jumps
falign-labels=
falign-labels
falign-loops=
falign-loops
faligned-alloc-unavailable
Aligned allocation/deallocation functions are unavailable
faligned-allocation
Enable C++17 aligned allocation functions
faligned-new=
faligned-new
fall-intrinsics
fallback
Fall back to cl.exe if clang-cl fails to compile
fallow-editor-placeholders
Treat editor placeholders as valid source code
fallow-half-arguments-and-returns
Allow function arguments and returns of type half
fallow-pch-with-compiler-errors
Accept a PCH file that was created with compiler errors
fallow-unsupported
faltivec
fansi-escape-codes
Use ANSI escape codes for diagnostics
fapinotes-cache-path=
Does nothing; API notes are no longer cached separately from modules
fapinotes-modules
Enable module-based external API notes support
fapinotes-swift-version=
Specify the Swift version to use when filtering API notes
<version>
fapinotes
Enable external API notes support
fapple-kext-vtable-mitigation
Enable mitigation for kernel v-table exploits through null pointers
fapple-kext
Use Apple's kernel extensions ABI
fapple-pragma-pack
Enable Apple gcc-compatible #pragma pack handling
fapplication-extension
fasm-blocks
fasm
fassociative-math
fassume-sane-operator-new
fastcp
fastf
fasynchronous-unwind-tables
fauto-profile=
fauto-profile
fautolink
fautomatic
favor
Output assembly code file during compilation
Output assembly code to this file during compilation (with /FA)
<file or directory>
fbackslash
fbacktrace
fblas-matmul-limit=
fblocks-runtime-optional
Weakly link in the blocks runtime
fblocks
Enable the 'blocks' language feature
fbootclasspath=
fborland-extensions
Accept non-standard constructs supported by the Borland compiler
fbounds-check
fbracket-depth=
fbracket-depth
Maximum nesting level for parentheses, brackets, and braces
fbranch-count-reg
fbuild-session-file=
Use the last modification time of <file> as the build session timestamp
fbuild-session-timestamp=
Time when the current build session started
<time since Epoch in seconds>
fbuiltin-module-map
Load the clang builtins module map file.
fbuiltin
fcaller-saves
fcaret-diagnostics-max-lines
Set the maximum number of source lines to show in a caret diagnostic
fcaret-diagnostics
fcheck-array-temporaries
fcheck-new
fcheck=
fclasspath=
fcoarray=
fcolor-diagnostics
Use colors in diagnostics
fcomment-block-commands=
Treat each comma separated argument in <arg> as a documentation comment block command
fcommon
fcompile-resource=
fconcepts-ts
Enable C++ Extensions for Concepts.
fconst-strings
Use a const qualified type for string literals in C and ObjC
fconstant-cfstrings
fconstant-string-class=
fconstant-string-class
Specify the class to use for constant Objective-C string objects.
<class name>
fconstexpr-backtrace-limit=
fconstexpr-backtrace-limit
Set the maximum number of entries to print in a constexpr evaluation backtrace (0 = no limit).
fconstexpr-depth=
fconstexpr-depth
Maximum depth of recursive constexpr function calls
fconstexpr-steps=
fconstexpr-steps
Maximum number of steps in constexpr function evaluation
fconvert=
fcoroutines-ts
Enable support for the C++ Coroutines TS
fcoverage-mapping
Generate coverage mapping to enable code coverage analysis
fcray-pointer
fcreate-profile
fcuda-allow-variadic-functions
Allow variadic functions in CUDA device code.
fcuda-approx-transcendentals
Use approximate transcendental functions
fcuda-flush-denormals-to-zero
Flush denormal floating point values to zero in CUDA device mode.
fcuda-include-gpubinary
Incorporate CUDA device-side binary into host object file.
fcuda-is-device
Generate code for CUDA device
fcxx-exceptions
Enable C++ exceptions
fcxx-modules
fd-lines-as-code
fd-lines-as-comments
fdata-sections
Place each data in its own section (ELF Only)
fdebug-compilation-dir
The compilation directory to embed in the debug info.
fdebug-info-for-profiling
Emit extra debug info to make sample profile more accurate.
fdebug-macro
fdebug-pass-arguments
fdebug-pass-manager
Prints debug information for the new pass manager
fdebug-pass-structure
fdebug-prefix-map=
remap file source paths in debug info
fdebug-types-section
Place debug types in their own section (ELF Only)
fdebugger-cast-result-to-id
Enable casting unknown expression results to id
fdebugger-objc-literal
Enable special debugger support for Objective-C subscripting and literals
fdebugger-support
Enable special debugger support behavior
fdeclspec
Allow __declspec as a keyword
fdefault-calling-conv=
Set default MS calling convention
cdecl,fastcall,stdcall,vectorcall
fdefault-double-8
fdefault-inline
fdefault-integer-8
fdefault-real-8
fdefer-pop
fdelayed-template-parsing
Parse templated function definitions at the end of the translation unit
fdelete-null-pointer-checks
fdenormal-fp-math=
fdepfile-entry=
fdeprecated-macro
Defines the __DEPRECATED macro
fdevirtualize-speculatively
fdevirtualize
fdiagnostics-absolute-paths
Print absolute paths in diagnostics
fdiagnostics-color=
fdiagnostics-color
fdiagnostics-fixit-info
fdiagnostics-format=
fdiagnostics-format
Change diagnostic formatting to match IDE and command line tools
clang,msvc,msvc-fallback,vi
fdiagnostics-hotness-threshold=
Prevent optimization remarks from being output if they do not have at least this profile count
<number>
fdiagnostics-parseable-fixits
Print fix-its in machine parseable form
fdiagnostics-print-source-range-info
Print source range spans in numeric form
fdiagnostics-show-category=
fdiagnostics-show-category
Print diagnostic category
none,id,name
fdiagnostics-show-hotness
Enable profile hotness information in diagnostic line
fdiagnostics-show-location=
fdiagnostics-show-note-include-stack
Display include stacks for diagnostic notes
fdiagnostics-show-option
Print option name with mappable diagnostics
fdiagnostics-show-template-tree
Print a template comparison tree for differing templates
fdisable-module-hash
Disable the module hash
fdollar-ok
fdollars-in-identifiers
Allow '$' in identifiers
fdump-fortran-optimized
fdump-fortran-original
fdump-parse-tree
fdump-record-layouts-simple
Dump record layout information in a simple form used for testing
fdump-record-layouts
fdump-vtable-layouts
Dump the layouts of all vtables that will be emitted in a translation unit
fdwarf-directory-asm
fdwarf2-cfi-asm
felide-constructors
feliminate-unused-debug-symbols
feliminate-unused-debug-types
fembed-bitcode-marker
fembed-bitcode=
Embed LLVM bitcode (option: off, all, bitcode, marker)
<option>
fembed-bitcode
femit-all-decls
Emit all declarations, even if unused
femit-coverage-data
Instrument the program to emit gcov coverage data when run.
femit-coverage-notes
Emit a gcov coverage notes file when compiling.
femulated-tls
Use emutls functions to access thread_local variables
fencode-extended-block-signature
enable extended encoding of block type signature
fencoding=
ferror-limit=
ferror-limit
Set the maximum number of errors to emit before stopping (0 = no limit).
fexceptions
Enable support for exception handling
fexcess-precision=
fexec-charset=
fexpensive-optimizations
fexperimental-new-pass-manager
Enables an experimental new pass manager in LLVM.
fextdirs=
fextended-identifiers
fexternal-blas
fexternc-nounwind
Assume all functions with C linkage do not unwind
Set output executable file or directory (ends in / or \)
ff2c
ffake-address-space-map
Use a fake address space map; OpenCL testing purposes only
ffast-math
Allow aggressive, lossy floating-point optimizations
ffat-lto-objects
ffinite-math-only
ffixed-form
ffixed-line-length-
ffixed-r9
Reserve the r9 register (ARM only)
ffixed-x18
Reserve the x18 register (AArch64 only)
ffloat-store
ffor-scope
fforbid-guard-variables
Emit an error if a C++ static local initializer would need a guard variable
fforce-addr
ffp-contract=
Form fused FP ops (e.g. FMAs): fast (everywhere) | on (according to FP_CONTRACT pragma, default) | off (never fuse)
fast,on,off
ffpe-trap=
ffree-form
ffree-line-length-
ffreestanding
Assert that the compilation takes place in a freestanding environment
ffriend-injection
ffrontend-optimize
ffunction-attribute-list
ffunction-sections
Place each function in its own section (ELF Only)
fgcse-after-reload
fgcse-las
fgcse-sm
fgcse
fgnu-inline-asm
fgnu-keywords
Allow GNU-extension keywords regardless of language standard
fgnu-runtime
Generate output compatible with the standard GNU Objective-C runtime
fgnu89-inline
Use the gnu89 inline semantics
fgnu
fheinous-gnu-extensions
fhonor-infinites
fhonor-infinities
fhonor-nans
fhosted
fident
fignore-objc-weak
ignore __weak qualifiers in manual reference counting
filetype
Specify the output file type ('asm', 'null', or 'obj')
fimplement-inlines
fimplicit-module-maps
Implicitly search the file system for module map files.
fimplicit-modules
fimplicit-none
fimplicit-templates
finclude-default-header
Include the default header file for OpenCL
find-pch-source=
When building a pch, try to find the input file in include directories, as if it had been included by the argument passed to this flag.
findirect-virtual-calls
finit-character=
finit-integer=
finit-local-zero
finit-logical=
finit-real=
finline-functions-called-once
finline-functions
Inline suitable functions
finline-hint-functions
Inline functions which are (explicitly or implicitly) marked inline
finline-limit=
finline-limit
finline-small-functions
finline
finput-charset=
finstrument-functions
Generate calls to instrument function entry and exit
finteger-4-integer-8
fintegrated-as
Enable the integrated assembler
fintrinsic-modules-path
fipa-cp
fivopts
fix-only-warnings
Apply fix-it advice only for warnings, not errors
fix-what-you-can
Apply fix-it advice even in the presence of unfixable errors
fixit-recompile
Apply fix-it changes and recompile
fixit-to-temporary
Apply fix-it changes to temporary files
fixit=
Apply fix-it advice creating a file with the given suffix
fixit
Apply fix-it advice to the input source
Include file before parsing
Set preprocess output file name (with /P)
fjump-tables
fkeep-inline-functions
flat_namespace
flax-vector-conversions
flimit-debug-info
flimited-precision=
flto-jobs=
Controls the backend parallelism of -flto=thin (default of 0 means the number of threads will be derived from the number of CPUs detected)
flto-unit
Emit IR to support LTO unit features (CFI, whole program vtable opt)
flto-visibility-public-std
Use public LTO visibility for classes in std and stdext namespaces
flto=
Set LTO mode to either 'full' or 'thin'
thin,full
flto
Enable LTO in 'full' mode
fmacro-backtrace-limit=
fmacro-backtrace-limit
Set the maximum number of entries to print in a macro expansion backtrace (0 = no limit).
fmath-errno
Require math functions to indicate errors by setting errno
fmax-array-constructor=
fmax-errors=
fmax-identifier-length
fmax-stack-var-size=
fmax-subrecord-length=
fmax-type-align=
Specify the maximum alignment to enforce on pointers lacking an explicit alignment
fmerge-all-constants
fmerge-constants
fmerge-functions
Permit merging of identical functions when optimizing.
fmessage-length=
fmessage-length
Format message diagnostics so that they fit within N columns or fewer, when possible.
fmodule-feature
Enable <feature> in module map requires declarations
<feature>
fmodule-file-deps
fmodule-file=
Load this precompiled module file
fmodule-format=
Select the container format for clang modules and PCH. Supported options are 'raw' and 'obj'.
fmodule-implementation-of
fmodule-map-file-home-is-cwd
Use the current working directory as the home directory of module maps specified by -fmodule-map-file=<FILE>
fmodule-map-file=
Load this module map file
fmodule-maps
fmodule-name=
Specify the name of the module to build
fmodule-name
fmodule-private
fmodules-cache-path=
Specify the module cache path
fmodules-codegen
Generate code for uses of this module that assumes an explicit object file will be built for the module
fmodules-debuginfo
Generate debug info for types in an object file built from this module and do not generate them elsewhere
fmodules-decluse
Require declaration of modules used within a module
fmodules-disable-diagnostic-validation
Disable validation of the diagnostic options when loading the module
fmodules-embed-all-files
Embed the contents of all files read by this compilation into the produced module file.
fmodules-embed-file=
Embed the contents of the specified file into the module file being compiled.
fmodules-hash-content
Enable hashing the content of a module file
fmodules-hash-error-diagnostics
Use a separate module cache for modules compiled with conflicting -Werror options
fmodules-ignore-macro=
Ignore the definition of the given macro when building and loading modules
fmodules-local-submodule-visibility
Enforce name visibility rules across submodules of the same top-level module.
fmodules-prune-after=
Specify the interval (in seconds) after which a module file will be considered unused
<seconds>
fmodules-prune-interval=
Specify the interval (in seconds) between attempts to prune the module cache
fmodules-search-all
Search even non-imported modules to resolve references
fmodules-strict-decluse
Like -fmodules-decluse but requires all headers to be in modules
fmodules-ts
Enable support for the C++ Modules TS
fmodules-user-build-path
Specify the module user build path
fmodules-validate-once-per-build-session
Don't verify input files for the modules if the module has been successfully validated or loaded during this build session
fmodules-validate-system-headers
Validate the system headers that a module depends on when loading the module
fmodules
Enable the 'modules' language feature
fmodulo-sched-allow-regmoves
fmodulo-sched
fms-compatibility-version=
Dot-separated value representing the Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
fms-compatibility
Enable full Microsoft Visual C++ compatibility
fms-extensions
Accept some non-standard constructs supported by the Microsoft compiler
fms-memptr-rep=
fms-volatile
fmsc-version=
Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
fmudflapth
fmudflap
fnative-half-arguments-and-returns
Use the native __fp16 type for arguments and returns (and skip ABI-specific lowering)
fnative-half-type
Use the native half type for __fp16 instead of promoting to float
fnested-functions
fnew-alignment=
Specifies the largest alignment guaranteed by '::operator new(size_t)'
<align>
fnew-alignment
fnext-runtime
fno-access-control
Disable C++ access control
fno-aggressive-function-elimination
fno-align-commons
fno-align-functions
fno-align-jumps
fno-align-labels
fno-align-loops
fno-aligned-allocation
fno-aligned-new
fno-all-intrinsics
fno-allow-editor-placeholders
fno-altivec
fno-apinotes-modules
Disable module-based external API notes support
fno-apinotes
Disable external API notes support
fno-apple-pragma-pack
fno-application-extension
fno-asm-blocks
fno-asm
fno-associative-math
fno-assume-sane-operator-new
Don't assume that C++'s global operator new can't alias any pointer
fno-asynchronous-unwind-tables
fno-auto-profile
fno-autolink
Disable generation of linker directives for automatic library linking
fno-automatic
fno-backslash
fno-backtrace
fno-bitfield-type-align
Ignore bit-field types when aligning structures
fno-blocks
fno-borland-extensions
fno-bounds-check
fno-branch-count-reg
fno-builtin-
Disable implicit builtin knowledge of a specific function
fno-builtin
Disable implicit builtin knowledge of functions
fno-caller-saves
fno-caret-diagnostics
fno-check-array-temporaries
fno-check-new
fno-color-diagnostics
fno-common
Compile common globals like normal definitions
fno-const-strings
Don't use a const qualified type for string literals in C and ObjC
fno-constant-cfstrings
Disable creation of CodeFoundation-type constant strings
fno-coroutines-ts
fno-coverage-mapping
Disable code coverage analysis
fno-crash-diagnostics
Disable auto-generation of preprocessed source files and a script for reproduction during a clang crash
fno-cray-pointer
fno-cuda-approx-transcendentals
fno-cuda-flush-denormals-to-zero
fno-cuda-host-device-constexpr
Don't treat unattributed constexpr functions as __host__ __device__.
fno-cxx-exceptions
fno-cxx-modules
fno-d-lines-as-code
fno-d-lines-as-comments
fno-data-sections
fno-debug-info-for-profiling
Do not emit extra debug info for sample profiler.
fno-debug-macro
Do not emit macro debug information
fno-debug-pass-manager
Disables debug printing for the new pass manager
fno-debug-types-section
fno-declspec
Disallow __declspec as a keyword
fno-default-double-8
fno-default-inline
fno-default-integer-8
fno-default-real-8
fno-defer-pop
fno-delayed-template-parsing
Disable delayed template parsing
fno-delete-null-pointer-checks
fno-deprecated-macro
Undefines the __DEPRECATED macro
fno-devirtualize-speculatively
fno-devirtualize
fno-diagnostics-color
fno-diagnostics-fixit-info
Do not include fixit information in diagnostics
fno-diagnostics-show-hotness
fno-diagnostics-show-note-include-stack
fno-diagnostics-show-option
fno-diagnostics-use-presumed-location
Ignore #line directives when displaying diagnostic locations
fno-dollar-ok
fno-dollars-in-identifiers
Disallow '$' in identifiers
fno-dump-fortran-optimized
fno-dump-fortran-original
fno-dump-parse-tree
fno-dwarf-directory-asm
fno-dwarf2-cfi-asm
fno-elide-constructors
Disable C++ copy constructor elision
fno-elide-type
Do not elide types when printing diagnostics
fno-eliminate-unused-debug-symbols
fno-eliminate-unused-debug-types
fno-emulated-tls
fno-exceptions
fno-expensive-optimizations
fno-experimental-new-pass-manager
Disables an experimental new pass manager in LLVM.
fno-extended-identifiers
fno-external-blas
fno-f2c
fno-fast-math
fno-fat-lto-objects
fno-finite-math-only
fno-fixed-form
fno-float-store
fno-for-scope
fno-free-form
fno-friend-injection
fno-frontend-optimize
fno-function-attribute-list
fno-function-sections
fno-gcse-after-reload
fno-gcse-las
fno-gcse-sm
fno-gcse
fno-gnu-inline-asm
Disable GNU style inline asm
fno-gnu-keywords
fno-gnu89-inline
fno-gnu
fno-honor-infinites
fno-honor-infinities
fno-honor-nans
fno-ident
fno-implement-inlines
fno-implicit-module-maps
fno-implicit-modules
fno-implicit-none
fno-implicit-templates
fno-init-local-zero
fno-inline-functions-called-once
fno-inline-functions
fno-inline-limit
fno-inline-small-functions
fno-inline
fno-integer-4-integer-8
fno-integrated-as
Disable the integrated assembler
fno-intrinsic-modules-path
fno-ipa-cp
fno-ivopts
fno-jump-tables
Do not use jump tables for lowering switches
fno-keep-inline-functions
fno-lax-vector-conversions
Disallow implicit conversions between vectors with a different number of elements or different element types
fno-limit-debug-info
fno-lto-unit
fno-lto
Disable LTO mode (default)
fno-math-builtin
Disable implicit builtin knowledge of math functions
fno-math-errno
fno-max-identifier-length
fno-max-type-align
fno-merge-all-constants
Disallow merging of constants
fno-merge-constants
fno-module-file-deps
fno-module-maps
fno-module-private
fno-modules-decluse
fno-modules-error-recovery
Do not automatically import modules for error recovery
fno-modules-global-index
Do not automatically generate or update the global module index
fno-modules-search-all
fno-modules
fno-modulo-sched-allow-regmoves
fno-modulo-sched
fno-ms-compatibility
fno-ms-extensions
fno-non-call-exceptions
fno-objc-arc-exceptions
fno-objc-arc
fno-objc-exceptions
fno-objc-infer-related-result-type
do not infer Objective-C related result type based on method family
fno-objc-legacy-dispatch
fno-objc-nonfragile-abi
fno-objc-weak
fno-omit-frame-pointer
fno-openmp
fno-operator-names
Do not treat C++ operator name keywords as synonyms for operators
fno-optimize-sibling-calls
fno-pack-derived
fno-pack-struct
fno-pascal-strings
fno-pch-timestamp
Disable inclusion of timestamp in precompiled headers
fno-peel-loops
fno-permissive
fno-PIC
fno-pic
fno-PIE
fno-pie
fno-prefetch-loop-arrays
fno-preserve-as-comments
Do not preserve comments in inline assembly
fno-printf
fno-profile-arcs
fno-profile-correction
fno-profile-generate-sampling
fno-profile-generate
Disable generation of profile instrumentation.
fno-profile-instr-generate
fno-profile-instr-use
Disable using instrumentation data for profile-guided optimization
fno-profile-reusedist
fno-profile-sample-use
fno-profile-use
fno-profile-values
fno-profile
fno-protect-parens
fno-range-check
fno-real-4-real-10
fno-real-4-real-16
fno-real-4-real-8
fno-real-8-real-10
fno-real-8-real-16
fno-real-8-real-4
fno-realloc-lhs
fno-reciprocal-math
fno-recursive
fno-regs-graph
fno-relaxed-template-template-args
fno-rename-registers
fno-reorder-blocks
fno-repack-arrays
fno-reroll-loops
Turn off loop reroller
fno-rewrite-imports
fno-rewrite-includes
fno-ripa
fno-ropi
fno-rounding-math
fno-rtlib-add-rpath
Do not add -rpath with architecture-specific resource directory to the linker flags
fno-rtti-data
Control emission of RTTI data
fno-rtti
Disable generation of rtti information
fno-rwpi
fno-sanitize-address-use-after-scope
Disable use-after-scope detection in AddressSanitizer
fno-sanitize-blacklist
Don't use blacklist file for sanitizers
fno-sanitize-cfi-cross-dso
Disable control flow integrity (CFI) checks for cross-DSO calls.
fno-sanitize-coverage=
Disable specified features of coverage instrumentation for Sanitizers
func,bb,edge,indirect-calls,trace-bb,trace-cmp,trace-div,trace-gep,8bit-counters,trace-pc,trace-pc-guard,no-prune,inline-8bit-counters
fno-sanitize-memory-track-origins
Disable origins tracking in MemorySanitizer
fno-sanitize-minimal-runtime
fno-sanitize-recover=
Disable recovery for specified sanitizers
fno-sanitize-recover
fno-sanitize-stats
Disable sanitizer statistics gathering.
fno-sanitize-thread-atomics
Disable atomic operations instrumentation in ThreadSanitizer
fno-sanitize-thread-func-entry-exit
Disable function entry/exit instrumentation in ThreadSanitizer
fno-sanitize-thread-memory-access
Disable memory access instrumentation in ThreadSanitizer
fno-sanitize-trap=
Disable trapping for specified sanitizers
fno-sanitize-undefined-trap-on-error
fno-sanitize=
fno-save-optimization-record
fno-schedule-insns2
fno-schedule-insns
fno-second-underscore
fno-see
fno-short-enums
fno-short-wchar
Force wchar_t to be an unsigned int
fno-show-column
Do not include column number on diagnostics
fno-show-source-location
Do not include source location information with diagnostics
fno-sign-zero
fno-signaling-math
fno-signaling-nans
fno-signed-char
Char is unsigned
fno-signed-zeros
Allow optimizations that ignore the sign of floating point zeros
fno-single-precision-constant
fno-sized-deallocation
fno-slp-vectorize-aggressive
fno-slp-vectorize
fno-spec-constr-count
fno-spell-checking
Disable spell-checking
fno-split-dwarf-inlining
fno-stack-arrays
fno-stack-check
fno-stack-protector
Disable the use of stack protectors
fno-standalone-debug
Limit debug information produced to reduce size of debug binary
fno-strength-reduce
fno-strict-aliasing
fno-strict-enums
fno-strict-modules-decluse
fno-strict-overflow
fno-strict-return
fno-strict-vtable-pointers
fno-struct-path-tbaa
fno-threadsafe-statics
Do not emit code to make initialization of local statics thread safe
fno-tls-model
fno-tracer
fno-trapping-math
fno-tree-dce
fno-tree-salias
fno-tree-slp-vectorize
fno-tree-ter
fno-tree-vectorizer-verbose
fno-tree-vectorize
fno-tree-vrp
fno-tree_loop_im
fno-tree_loop_ivcanon
fno-tree_loop_linear
fno-trigraphs
Do not process trigraph sequences
fno-underscoring
fno-unique-section-names
fno-unit-at-a-time
fno-unroll-all-loops
fno-unroll-loops
Turn off loop unroller
fno-unsafe-loop-optimizations
fno-unsafe-math-optimizations
fno-unsigned-char
fno-unswitch-loops
fno-unwind-tables
fno-use-cxa-atexit
Don't use __cxa_atexit for calling destructors
fno-use-init-array
Don't use .init_array instead of .ctors
fno-use-line-directives
fno-use-linker-plugin
fno-validate-pch
Disable validation of precompiled headers
fno-var-tracking
fno-variable-expansion-in-unroller
fno-vect-cost-model
fno-vectorize
fno-verbose-asm
fno-wchar
Disable C++ builtin type wchar_t
fno-web
fno-whole-file
fno-whole-program-vtables
fno-whole-program
fno-working-directory
fno-wrapv
fno-xray-instrument
fno-zero-initialized-in-bss
fno-zvector
fnon-call-exceptions
fnoopenmp-use-tls
fobjc-abi-version=
fobjc-arc-cxxlib=
Objective-C++ Automatic Reference Counting standard library kind
libc++,libstdc++,none
fobjc-arc-exceptions
Use EH-safe code when synthesizing retains and releases in -fobjc-arc
fobjc-arc-unsafeclaim
Enable an optimization to dynamically avoid retain/releases of call results in __unsafe_unretained contexts
fobjc-arc
Synthesize retain and release calls for Objective-C pointers
fobjc-atdefs
fobjc-call-cxx-cdtors
fobjc-dispatch-method=
Objective-C dispatch method to use
legacy,non-legacy,mixed
fobjc-exceptions
Enable Objective-C exceptions
fobjc-gc-only
Use GC exclusively for Objective-C related memory management
fobjc-gc
Enable Objective-C garbage collection
fobjc-infer-related-result-type
fobjc-legacy-dispatch
fobjc-link-runtime
fobjc-new-property
fobjc-nonfragile-abi-version=
fobjc-nonfragile-abi
fobjc-runtime-has-weak
The target Objective-C runtime supports ARC weak operations
fobjc-runtime=
Specify the target Objective-C runtime kind and version
fobjc-sender-dependent-dispatch
fobjc-subscripting-legacy-runtime
Allow Objective-C array and dictionary subscripting in legacy runtime
fobjc-weak
Enable ARC-style weak references in Objective-C
fomit-frame-pointer
fopenmp-dump-offload-linker-script
fopenmp-host-ir-file-path
Path to the IR file produced by the frontend for the host.
fopenmp-is-device
Generate code only for an OpenMP target device.
fopenmp-targets=
Specify comma-separated list of triples OpenMP offloading targets to be supported
fopenmp-use-tls
fopenmp-version=
fopenmp=
fopenmp
foperator-arrow-depth=
foperator-arrow-depth
Maximum number of 'operator->'s to call for a member access
foptimization-record-file=
foptimize-sibling-calls
for-linker=
for-linker
force-link=
force-link
force_cpusubtype_ALL
force_flat_namespace
force_load
foutput-class-dir=
foverride-record-layout=
Override record layouts with those in the given file
Set output object file, or directory (ends in / or \) (with /c)
fp:except-
fp:except
fp:fast
fp:precise
fp:strict
fpack-derived
fpack-struct=
Specify the default maximum struct packing alignment
fpack-struct
fparse-all-comments
fpascal-strings
Recognize and construct Pascal-style string literals
fpcc-struct-return
Override the default ABI to return all structs on the stack
fpch-preprocess
fpeel-loops
fpermissive
fPIC
fpic
fPIE
fpie
fplugin=
Load the named plugin (dynamic shared object)
<dsopath>
fprebuilt-module-path=
Specify the prebuilt module path
fprefetch-loop-arrays
fpreserve-as-comments
fpreserve-vec3-type
Preserve 3-component vector type
fprofile-arcs
fprofile-correction
fprofile-dir=
fprofile-generate-sampling
fprofile-generate=
Generate instrumented code to collect execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
fprofile-generate
Generate instrumented code to collect execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
fprofile-instr-generate=
Generate instrumented code to collect execution counts into <file> (overridden by LLVM_PROFILE_FILE env var)
fprofile-instr-generate
Generate instrumented code to collect execution counts into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
fprofile-instr-use=
Use instrumentation data for profile-guided optimization
fprofile-instr-use
fprofile-instrument-path=
fprofile-instrument-use-path=
Specify the profile path in PGO use compilation
fprofile-instrument=
Enable PGO instrumentation. The accepted value is clang, llvm, or none
none,clang,llvm
fprofile-reusedist
fprofile-sample-use=
Enable sample-based profile guided optimizations
fprofile-sample-use
fprofile-use=
Use instrumentation data for profile-guided optimization. If pathname is a directory, it reads from <pathname>/default.profdata. Otherwise, it reads from file <pathname>.
<pathname>
fprofile-use
fprofile-values
fprofile
fprotect-parens
Set pch filename (with /Yc and /Yu)
<filename>
frandom-seed=
frange-check
freal-4-real-10
freal-4-real-16
freal-4-real-8
freal-8-real-10
freal-8-real-16
freal-8-real-4
frealloc-lhs
freciprocal-math
Allow division operations to be reassociated
frecord-marker=
frecursive
freg-struct-return
Override the default ABI to return small structs in registers
fregs-graph
frelaxed-template-template-args
Enable C++17 relaxed template template argument matching
frename-registers
freorder-blocks
frepack-arrays
freroll-loops
Turn on loop reroller
fretain-comments-from-system-headers
frewrite-imports
frewrite-includes
frewrite-map-file=
frewrite-map-file
fripa
fropi
frounding-math
frtlib-add-rpath
Add -rpath with architecture-specific resource directory to the linker flags
frtti
frwpi
fsanitize-address-field-padding=
Level of field padding for AddressSanitizer
fsanitize-address-globals-dead-stripping
Enable linker dead stripping of globals in AddressSanitizer
fsanitize-address-use-after-scope
Enable use-after-scope detection in AddressSanitizer
fsanitize-blacklist=
Path to blacklist file for sanitizers
fsanitize-cfi-cross-dso
Enable control flow integrity (CFI) checks for cross-DSO calls.
fsanitize-coverage-8bit-counters
Enable frequency counters in sanitizer coverage
fsanitize-coverage-indirect-calls
Enable sanitizer coverage for indirect calls
fsanitize-coverage-inline-8bit-counters
Enable inline 8-bit counters in sanitizer coverage
fsanitize-coverage-no-prune
Disable coverage pruning (i.e. instrument all blocks/edges)
fsanitize-coverage-trace-bb
Enable basic block tracing in sanitizer coverage
fsanitize-coverage-trace-cmp
Enable cmp instruction tracing in sanitizer coverage
fsanitize-coverage-trace-div
Enable div instruction tracing in sanitizer coverage
fsanitize-coverage-trace-gep
Enable gep instruction tracing in sanitizer coverage
fsanitize-coverage-trace-pc-guard
Enable PC tracing with guard in sanitizer coverage
fsanitize-coverage-trace-pc
Enable PC tracing in sanitizer coverage
fsanitize-coverage-type=
Sanitizer coverage type
fsanitize-coverage=
Specify the type of coverage instrumentation for Sanitizers
fsanitize-link-c++-runtime
fsanitize-memory-track-origins=
Enable origins tracking in MemorySanitizer
fsanitize-memory-track-origins
fsanitize-memory-use-after-dtor
Enable use-after-destroy detection in MemorySanitizer
fsanitize-recover=
Enable recovery for specified sanitizers
fsanitize-recover
fsanitize-stats
Enable sanitizer statistics gathering.
fsanitize-thread-atomics
Enable atomic operations instrumentation in ThreadSanitizer (default)
fsanitize-thread-func-entry-exit
Enable function entry/exit instrumentation in ThreadSanitizer (default)
fsanitize-thread-memory-access
Enable memory access instrumentation in ThreadSanitizer (default)
fsanitize-trap=
Enable trapping for specified sanitizers
fsanitize-undefined-strip-path-components=
Strip (or keep only, if negative) a given number of path components when emitting check metadata.
fsanitize-undefined-trap-on-error
fsanitize=
Turn on runtime checks for various forms of undefined or suspicious behavior. See user manual for available checks
fsave-optimization-record
fsched-interblock
fschedule-insns2
fschedule-insns
fsecond-underscore
fsee
fshort-enums
Allocate to an enum type only as many bytes as it needs for the declared range of possible values
fshort-wchar
Force wchar_t to be a short unsigned int
fshow-column
fshow-overloads=
Which overload candidates to show when overload resolution fails: best|all; defaults to all
best,all
fshow-source-location
fsign-zero
fsignaling-math
fsignaling-nans
fsigned-bitfields
fsigned-char
fsigned-zeros
fsingle-precision-constant
fsized-deallocation
Enable C++14 sized global deallocation functions
fsjlj-exceptions
Use SjLj style exceptions
fslp-vectorize-aggressive
fslp-vectorize
Enable the superword-level parallelism vectorization passes
fspec-constr-count
fspell-checking-limit=
fspell-checking-limit
Set the maximum number of times to perform spell checking on unrecognized identifiers (0 = no limit).
fspell-checking
fsplit-dwarf-inlining
fsplit-stack
fstack-arrays
fstack-check
fstack-protector-all
Force the usage of stack protectors for all functions
fstack-protector-strong
Use a strong heuristic to apply stack protectors to functions
fstack-protector
Enable stack protectors for functions potentially vulnerable to stack smashing
fstandalone-debug
Emit full debug info for all types used by the program
fstrength-reduce
fstrict-aliasing
fstrict-enums
Enable optimizations based on the strict definition of an enum's value range
fstrict-overflow
fstrict-return
Always treat control flow paths that fall off the end of a non-void function as unreachable
fstrict-vtable-pointers
Enable optimizations based on the strict rules for overwriting polymorphic C++ objects
fstruct-path-tbaa
fsyntax-only
ftabstop=
ftabstop
Set the tab stop distance.
ftemplate-backtrace-limit=
ftemplate-backtrace-limit
Set the maximum number of entries to print in a template instantiation backtrace (0 = no limit).
ftemplate-depth-
ftemplate-depth=
ftemplate-depth
Maximum depth of recursive template instantiation
fterminated-vtables
ftest-coverage
ftest-module-file-extension=
introduce a module file extension for testing purposes. The argument is parsed as blockname:major:minor:hashed:user info
fthin-link-bitcode=
Write minimized bitcode to <file> for the ThinLTO thin link only
fthinlto-index=
Perform ThinLTO importing using provided function summary index
fthreadsafe-statics
ftime-report
ftls-model=
ftls-model
ftracer
ftrap-function=
Issue call to specified function rather than a trap instruction
ftrapping-math
ftrapv-handler=
Specify the function to be called on overflow
<function name>
ftrapv-handler
ftrapv
Trap on integer overflow
ftree-dce
ftree-salias
ftree-slp-vectorize
ftree-ter
ftree-vectorizer-verbose
ftree-vectorize
ftree-vrp
ftree_loop_im
ftree_loop_ivcanon
ftree_loop_linear
ftrigraphs
Process trigraph sequences
ftype-visibility
Default type visibility
funderscoring
funique-section-names
Use unique names for text and data sections (ELF Only)
funit-at-a-time
funknown-anytype
Enable parser support for the __unknown_anytype type; for testing purposes only
funroll-all-loops
funroll-loops
Turn on loop unroller
funsafe-loop-optimizations
funsafe-math-optimizations
funsigned-bitfields
funsigned-char
funswitch-loops
funwind-tables
fuse-cxa-atexit
fuse-init-array
Use .init_array instead of .ctors
fuse-ld=
fuse-line-directives
fuse-linker-plugin
fuse-register-sized-bitfield-access
Use register sized accesses to bit-fields, when possible.
fvariable-expansion-in-unroller
fveclib=
Use the given vector functions library
Accelerate,SVML,none
fvect-cost-model
fvectorize
Enable the loop vectorization passes
fverbose-asm
fvisibility-inlines-hidden
Give inline C++ member functions default visibility by default
fvisibility-ms-compat
Give global types 'default' visibility and global functions and variables 'hidden' visibility by default
fvisibility=
Set the default symbol visibility for all global declarations
hidden,default
fvisibility
Default type and symbol visibility
fweb
fwhole-file
fwhole-program-vtables
Enables whole-program vtable optimization. Requires -flto
fwhole-program
fwrapv
Treat signed integer overflow as two's complement
fwritable-strings
Store string literals as writable data
fxray-always-instrument=
Filename defining the whitelist for imbuing the 'always instrument' XRay attribute.
fxray-instruction-threshold=
Sets the minimum function size to instrument with XRay
fxray-instruction-threshold
fxray-instrument
Generate XRay instrumentation sleds on function entry and exit
fxray-never-instrument=
Filename defining the whitelist for imbuing the 'never instrument' XRay attribute.
fzero-initialized-in-bss
fzvector
Enable System z vector language extension
Add directory to framework include search path
Assume thread-local variables are defined in the executable
gcc-toolchain=
Use the gcc toolchain at the given directory
gcc-toolchain
gcodeview
Generate CodeView debug information
gcoff
gcolumn-info
gdwarf-2
Generate source-level debug information with dwarf version 2
gdwarf-3
Generate source-level debug information with dwarf version 3
gdwarf-4
Generate source-level debug information with dwarf version 4
gdwarf-5
Generate source-level debug information with dwarf version 5
gdwarf-aranges
gdwarf
Set __cdecl as a default calling convention
gen-reproducer
Auto-generates preprocessed source files and a reproduction script
Disable string pooling
gfull
ggdb0
ggdb1
ggdb2
ggdb3
ggdb
ggnu-pubnames
Emit debug line number tables only
glldb
gmlt
gmodules
gno-column-info
gno-record-gcc-switches
gno-strict-dwarf
gnu-pubnames
Emit newer GNU style pubnames
Disable emission of RTTI data
grecord-gcc-switches
Enable emission of RTTI data
Set __fastcall as a default calling convention
Disable buffer security check
gsce
gsplit-dwarf
gstabs
gstrict-dwarf
Enable buffer security check
Set stack probe size
gtoggle
guard:
gused
gvms
Set __vectorcall as a default calling convention
Don't put each data item in its own section
Put each data item in its own section
Enable exception handling
gxcoff
Don't put each function in its own section
Put each function in its own section
Set __stdcall as a default calling convention
Put objects of at most <size> bytes into small data section (MIPS / Hexagon)
<size>
Generate source-level debug information
header-include-file
Filename (or -) to write header include output to
headerpad_max_install_names
HELP
homeparams
hotpatch
Show header includes and nesting depth
Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path
iapinotes-modules
Add directory to the API notes search path referenced by module name
idirafter
Add directory to AFTER include search path
iframeworkwithsysroot
Add directory to SYSTEM framework search path, absolute paths are relative to -isysroot
iframework
Add directory to SYSTEM framework search path
imacros=
imacros
Include macros from file before parsing
image_base
imsvc
Add directory to system include search path, as if part of %INCLUDE%
include-barrier
include-directory-after=
include-directory-after
include-directory=
include-directory
include-pch
Include precompiled header file
include-prefix=
include-prefix
include-pth
include-with-prefix-after=
include-with-prefix-after
include-with-prefix-before=
include-with-prefix-before
include-with-prefix=
include-with-prefix
include=
index-header-map
Make the next included directory (-I or -F) an indexer header map
index-ignore-system-symbols
Ignore symbols from system headers
index-record-codegen-name
Record the codegen name for symbols
Enable indexing with the specified data store path
init-only
Only execute frontend initialization
install_name
integrated-as
internal-externc-isystem
Add directory to the internal system include search path with implicit extern "C" semantics; these are assumed to not be user-provided and are used to model system and standard headers' paths.
internal-isystem
Add directory to the internal system include search path; these are assumed to not be user-provided and are used to model system and standard headers' paths.
iprefix
Set the -iwithprefix/-iwithprefixbefore prefix
iquote
Add directory to QUOTE include search path
Set the system root directory (usually /)
isystem-after
Add directory to end of the SYSTEM include search path
isystem
Add directory to SYSTEM include search path
ivfsoverlay
Overlay the virtual filesystem described by file over the real file system
iwithprefixbefore
Set directory to include search path with prefix
iwithprefix
Set directory to SYSTEM include search path with prefix
iwithsysroot
Add directory to SYSTEM include search path, absolute paths are relative to -isysroot
Add directory to include search path
Make char type unsigned
keep_private_externs
kernel-
language=
lazy_framework
lazy_library
Create debug DLL
Create DLL
library-directory=
library-directory
linker-option=
Add linker option
Forward options to the linker
<options>
Add directory to library search path
m3dnowa
m3dnow
m80387
mabi=
mabicalls
Enable SVR4-style position-independent code (Mips only)
Mach
madx
maes
main-file-name
Main file name to use for debug info
malign-double
Align doubles to two words in structs (x86 only)
malign-functions=
malign-jumps=
malign-loops=
maltivec
mamdgpu-debugger-abi=
Generate additional code for specified <version> of debugger ABI (AMDGPU only)
mappletvos-version-min=
mappletvsimulator-version-min=
march=
marm
masm-verbose
Generate verbose assembly output
masm=
massembler-fatal-warnings
Make assembler warnings fatal
mavx2
mavx512bw
mavx512cd
mavx512dq
mavx512er
mavx512f
mavx512ifma
mavx512pf
mavx512vbmi
mavx512vl
mavx512vpopcntdq
mavx
mbackchain
Link stack frames through backchain on System Z
mbig-endian
mbmi2
mbmi
mbridgeos-version-min=
mcheck-zero-division
mclflushopt
mclwb
mclzero
mcmodel=
mcmpb
mcode-model
The code model to use
small,kernel,medium,large
mcompact-branches=
mconsole
mconstant-cfstrings
mconstructor-aliases
Emit complete constructors and destructors as aliases when possible
mcpu=
mcrbits
mcrc
Allow use of CRC instructions (ARM only)
mcrypto
mcx16
Use DLL debug run-time
mdebug-pass
Enable additional debug output
mdefault-build-attributes
mdirect-move
mdisable-fp-elim
Disable frame pointer elimination optimization
mdisable-tail-calls
Disable tail call optimization, keeping the call stack accurate
mdll
mdouble-float
mdspr2
mdsp
mdynamic-no-pic
Write a depfile containing user and system headers
Use DLL run-time
meabi
Set EABI type, e.g. 4, 5 or gnu (default depends on triple)
default,4,5,gnu
menable-no-infs
Allow optimization to assume there are no infinities.
menable-no-nans
Allow optimization to assume there are no NaNs.
menable-unsafe-fp-math
Allow unsafe floating-point math optimizations which may decrease precision
mexecute-only
Disallow generation of data access to code sections (ARM only)
mf16c
mfancy-math-387
mfentry
Insert calls to fentry at function entry (x86 only)
mfix-and-continue
mfix-cortex-a53-835769
Workaround Cortex-A53 erratum 835769 (AArch64 only)
mfloat-abi=
soft,softfp,hard
mfloat-abi
The float ABI to use
mfloat128
mfma4
mfma
mfp32
Use 32-bit floating point registers (MIPS only)
mfp64
Use 64-bit floating point registers (MIPS only)
mfpmath=
mfpmath
Which unit to use for fp math
mfprnd
mfpu=
mfpxx
Avoid FPU mode dependent operations when used with the O32 ABI
mfsgsbase
mfxsr
Write depfile output from -MMD, -MD, -MM, or -M to <file>
mgeneral-regs-only
Generate code which only uses the general purpose registers (AArch64 only)
mglibc
mglobal-merge
Enable merging of globals
Add missing headers to depfile
mhtm
mhvx-double
Enable Hexagon Double Vector eXtensions
mhvx
Enable Hexagon Vector eXtensions
mhwdiv=
mhwdiv
miamcu
Use Intel MCU ABI
mieee-fp
mieee-rnd-near
migrate
Run the migrator
Migrate source code
mimplicit-float
mimplicit-it=
mincremental-linker-compatible
(integrated-as) Emit an object file which can be used with an incremental linker
minline-all-stringops
minvariant-function-descriptors
mios-simulator-version-min=
mios-version-min=
Set iOS deployment target
miphoneos-version-min=
miphonesimulator-version-min=
Equivalent to -march=mips1
Equivalent to -march=mips2
Equivalent to -march=mips32r2
Equivalent to -march=mips32r3
Equivalent to -march=mips32r5
Equivalent to -march=mips32r6
Equivalent to -march=mips32
Equivalent to -march=mips3
Equivalent to -march=mips4
Equivalent to -march=mips5
Equivalent to -march=mips64r2
Equivalent to -march=mips64r3
Equivalent to -march=mips64r5
Equivalent to -march=mips64r6
Equivalent to -march=mips64
misel
Write a compilation database entry per input
mkernel
mldc1-sdc1
mlimit-float-precision
Limit float precision to the given value
mlink-bitcode-file
Link the given bitcode file before performing optimizations.
mlink-cuda-bitcode
Link and internalize needed symbols from the given bitcode file before performing optimizations.
mlinker-version=
mlittle-endian
mllvm
Additional arguments to forward to LLVM's option processing
mlong-calls
Generate branches with extended addressability, usually via indirect jumps.
mlongcall
mlwp
mlzcnt
mmacos-version-min=
mmacosx-version-min=
Set Mac OS X deployment target
mmadd4
Enable the generation of 4-operand madd.s, madd.d and related instructions.
mmcu=
Write a depfile containing user headers
mmfcrf
mmfocrf
mmmx
mmovbe
mmpx
mms-bitfields
Set the default structure layout to be compatible with the Microsoft compiler standard
mmsa
Enable MSA ASE (MIPS only)
Enable MT ASE (MIPS only)
mmwaitx
Like -MMD, but also implies -E and writes to stdout by default
mnan=
mno-3dnowa
mno-3dnow
mno-80387
mno-abicalls
Disable SVR4-style position-independent code (Mips only)
mno-adx
mno-aes
mno-altivec
mno-avx2
mno-avx512bw
mno-avx512cd
mno-avx512dq
mno-avx512er
mno-avx512f
mno-avx512ifma
mno-avx512pf
mno-avx512vbmi
mno-avx512vl
mno-avx512vpopcntdq
mno-avx
mno-backchain
mno-bmi2
mno-bmi
mno-check-zero-division
mno-clflushopt
mno-clwb
mno-clzero
mno-cmpb
mno-constant-cfstrings
mno-crbits
mno-crypto
mno-cx16
mno-default-build-attributes
mno-direct-move
mno-dspr2
mno-dsp
mno-execute-only
Allow generation of data access to code sections (ARM only)
mno-f16c
mno-fix-cortex-a53-835769
Don't workaround Cortex-A53 erratum 835769 (AArch64 only)
mno-float128
mno-fma4
mno-fma
mno-fprnd
mno-fsgsbase
mno-fxsr
mno-global-merge
Disable merging of globals
mno-htm
mno-hvx-double
Disable Hexagon Double Vector eXtensions
mno-hvx
Disable Hexagon Vector eXtensions
mno-iamcu
mno-implicit-float
Don't generate implicit floating point instructions
mno-incremental-linker-compatible
(integrated-as) Emit an object file which cannot be used with an incremental linker
mno-inline-all-stringops
mno-invariant-function-descriptors
mno-isel
mno-ldc1-sdc1
mno-long-calls
Restore the default behaviour of not generating long calls
mno-longcall
mno-lwp
mno-lzcnt
mno-madd4
Disable the generation of 4-operand madd.s, madd.d and related instructions.
mno-mfcrf
mno-mfocrf
mno-micromips
mno-mips16
mno-mmx
mno-movbe
mno-movt
Disallow use of movt/movw pairs (ARM only)
mno-mpx
mno-ms-bitfields
Do not set the default structure layout to be compatible with the Microsoft compiler standard
mno-msa
Disable MSA ASE (MIPS only)
mno-mt
Disable MT ASE (MIPS only)
mno-mwaitx
mno-neg-immediates
Disallow converting instructions with negative immediates to their negation or inversion.
mno-odd-spreg
Disable odd single-precision floating point registers
mno-omit-leaf-frame-pointer
mno-pascal-strings
mno-pclmul
mno-pie-copy-relocations
mno-pku
mno-popcntd
mno-popcnt
mno-power8-vector
mno-power9-vector
mno-prefetchwt1
mno-prfchw
mno-pure-code
mno-qpx
mno-rdrnd
mno-rdseed
mno-red-zone
mno-relax-all
mno-restrict-it
Allow generation of deprecated IT blocks for ARMv8. It is off by default for ARMv8 Thumb mode
mno-rtd
mno-rtm
mno-sgx
mno-sha
mno-simd128
mno-soft-float
mno-sse2
mno-sse3
mno-sse4.1
mno-sse4.2
mno-sse4a
mno-sse4
mno-sse
mno-ssse3
mno-stackrealign
mno-tbm
mno-thumb
mno-unaligned-access
Force all memory accesses to be aligned (AArch32/AArch64 only)
mno-vsx
mno-vx
mno-warn-nonportable-cfstrings
mno-x87
mno-xgot
mno-xop
mno-xsavec
mno-xsaveopt
mno-xsaves
mno-xsave
mno-zero-initialized-in-bss
Do not put zero initialized data in the BSS
mno-zvector
mnocrc
Disallow use of CRC instructions (ARM only)
mnoexecstack
Mark the file as not needing an executable stack
modd-spreg
Enable odd single-precision floating point registers
module-dependency-dir
Directory to dump module dependencies to
module-file-deps
Include module files in dependency output
module-file-info
Provide information about a particular module file
momit-leaf-frame-pointer
Omit frame pointer setup for leaf functions
moslib=
mpascal-strings
mpclmul
mpie-copy-relocations
Use copy relocations support for PIE builds
mpku
mpopcntd
mpopcnt
mpower8-vector
mpower9-vector
mprefetchwt1
mprfchw
mpure-code
Create phony target for each dependency (other than main file)
mqdsp6-compat
Enable hexagon-qdsp6 backward compatibility
mqpx
Specify name of main file output to quote in depfile
mrdrnd
mrdseed
mrecip=
mrecip
mred-zone
mregparm=
mregparm
Limit the number of registers available for integer arguments
mrelax-all
(integrated-as) Relax all machine instructions
mrelax-relocations
Use relaxable elf relocations
mrelocation-model
The relocation model to use
static,pic,ropi,rwpi,ropi-rwpi,dynamic-no-pic
mrestrict-it
Disallow generation of deprecated IT blocks for ARMv8. It is on by default for ARMv8 Thumb mode.
mrtd
Make StdCall calling convention the default
mrtm
msave-temp-labels
Save temporary labels in the symbol table. Note this may change .s semantics and shouldn't generally be used on compiler-generated code.
msgx
msha
msimd128
msingle-float
msmall-data-threshold=
Use software floating point
msse2
msse3
msse4.1
msse4.2
msse4a
msse4
msse
mssse3
mstack-alignment=
Set the stack alignment
mstack-probe-size=
Set the stack probe size
mstackrealign
Force realign the stack at entry to every function
mstrict-align
Force all memory accesses to be aligned (same as mno-unaligned-access)
mt-migrate-directory
Directory for temporary files produced during ARC or ObjC migration
mtbm
Use static debug run-time
mthread-model
The thread model to use, e.g. posix, single (posix by default)
posix,single
mthreads
mtune=
mtvos-simulator-version-min=
mtvos-version-min=
Specify name of main file output in depfile
Use static run-time
multi_module
multiply_defined_unused
multiply_defined
munaligned-access
Allow memory accesses to be unaligned (AArch32/AArch64 only)
municode
munwind-tables
Generate unwinding tables for all functions
mv55
mv60
mv62
mvsx
Use NMake/Jom format for the depfile
mwarn-nonportable-cfstrings
mwatchos-simulator-version-min=
mwatchos-version-min=
mwatchsimulator-version-min=
mwindows
mx87
mxgot
mxop
mxsavec
mxsaveopt
mxsaves
mxsave
mzvector
Like -MD, but also implies -E and writes to stdout by default
no-canonical-prefixes
Use relative instead of canonical paths
no-code-completion-globals
Do not include global declarations in code-completion results.
no-cpp-precomp
no-cuda-gpu-arch=
Remove GPU architecture (e.g. sm_35) from the list of GPUs to compile for. 'all' resets the list to its default value.
no-cuda-noopt-device-debug
no-cuda-version-check
Don't error out if the detected version of the CUDA install is too low for the requested CUDA gpu architecture.
no-emit-llvm-uselists
Don't preserve order of LLVM use-lists when serializing
no-finalize-removal
Do not remove finalize method in gc mode
no-implicit-float
no-integrated-as
no-integrated-cpp
no-line-commands
no-ns-alloc-error
Do not error on use of NSAllocateCollectable/NSReallocateCollectable
no-pedantic
no-pie
no-pthread
no-standard-includes
no-standard-libraries
no-struct-path-tbaa
Turn off struct-path aware Type Based Alias Analysis
no-system-header-prefix=
Treat all #include paths starting with <prefix> as not including a system header.
<prefix>
no-system-header-prefix
no-undefined
no-warnings
no_dead_strip_inits_and_terms
nobuiltininc
Disable builtin #include directories
nocpp
nocudainc
nocudalib
nodefaultlibs
nofixprebinding
nolibc
nologo
nomultidefs
nopie
noprebind
noseglinkedit
nostartfiles
nostdinc++
Disable standard #include directories for the C++ standard library
nostdinc
nostdlib++
nostdlibinc
nostdlib
nostdsysteminc
Disable standard system #include directories
Don't automatically start assembly file with a text section
ObjC++
Treat source input files as Objective-C++ inputs
objc-isystem
Add directory to the ObjC SYSTEM include search path
objcmt-atomic-property
Make migration to 'atomic' properties
objcmt-migrate-all
Enable migration to modern ObjC
objcmt-migrate-annotation
Enable migration to property and method annotations
objcmt-migrate-designated-init
Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods
objcmt-migrate-instancetype
Enable migration to infer instancetype for method result type
objcmt-migrate-literals
Enable migration to modern ObjC literals
objcmt-migrate-ns-macros
Enable migration to NS_ENUM/NS_OPTIONS macros
objcmt-migrate-property-dot-syntax
Enable migration of setter/getter messages to property-dot syntax
objcmt-migrate-property
Enable migration to modern ObjC property
objcmt-migrate-protocol-conformance
Enable migration to add protocol conformance on classes
objcmt-migrate-readonly-property
Enable migration to modern ObjC readonly property
objcmt-migrate-readwrite-property
Enable migration to modern ObjC readwrite property
objcmt-migrate-subscripting
Enable migration to modern ObjC subscripting
objcmt-ns-nonatomic-iosonly
Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property's 'atomic' attribute
objcmt-returns-innerpointer-property
Enable migration to annotate property with NS_RETURNS_INNER_POINTER
objcmt-white-list-dir-path=
objcmt-whitelist-dir-path=
Only modify files with a filename contained in the provided directory path
objcxx-isystem
Add directory to the ObjC++ SYSTEM include search path
ObjC
Treat source input files as Objective-C inputs
Disable optimization
Ofast
Disable use of builtin functions
Enable use of builtin functions
openmp-
openmp
opt-record-file
File name to use for YAML optimization record output
optimize=
optimize
output-asm-variant
Select the asm variant index to use for output
output-class-directory=
output-class-directory
output=
Optimization level
Set output file or directory (ends in / or \)
pagezero_size
param=
pass-exit-codes
pedantic-errors
pedantic
Enable mcount instrumentation
pic-is-pie
File is for a position independent executable
pic-level
Value for __PIC__
Use pipes between commands, when possible
plugin-arg-
Pass <arg> to plugin <name>
<name> <arg>
plugin
Use the named plugin action instead of the default action (use "help" to list available options)
preamble-bytes=
Assume that the precompiled header is a precompiled preamble covering the first N bytes of the main file
prebind_all_twolevel_modules
prebind
precompile
Only precompile the input
prefix=
preprocess
print-decl-contexts
Print DeclContexts and their Decls
print-diagnostic-categories
print-file-name=
Print the full library path of <file>
print-file-name
print-ivar-layout
Enable Objective-C Ivar layout bitmap print trace
print-libgcc-file-name
Print the library path for the currently used compiler runtime library ("libgcc.a" or "libclang_rt.builtins.*.a")
print-missing-file-dependencies
print-multi-directory
print-multi-lib
print-multi-os-directory
print-preamble
Print the "preamble" of a file, which is a candidate for implicit precompiled headers.
print-prog-name=
Print the full program path of <name>
print-prog-name
print-resource-dir
Print the resource directory pathname
print-search-dirs
Print the paths used for finding libraries and programs
Print performance metrics and statistics
private_bundle
profile-blocks
pthreads
pthread
Support POSIX threads in generated code
ptxas-path=
Path to ptxas (used for compiling CUDA code)
Disable linemarker output in -E mode
Preprocess to file
Qfast_transcendentals
QIfist
Qimprecise_fwaits
Qpar
Qunused-arguments
Don't emit warning for unused driver arguments
Qvec-report
Qvec-
Disable the loop vectorization passes
Qvec
rdynamic
read_only_relocs
relaxed-aliasing
Turn off Type Based Alias Analysis
relocatable-pch
Whether to build a relocatable precompiled header
remap-file
Replace the contents of the <from> file with the contents of the <to> file
<from>;<to>
resource-dir=
The directory which holds the compiler resource files
resource=
resource
rewrite-legacy-objc
Rewrite Legacy Objective-C source to C++
rewrite-macros
Expand macros without full preprocessing
rewrite-objc
Rewrite Objective-C source to C++
rewrite-test
Rewriter playground
Rpass-analysis=
Report transformation analysis from optimization passes whose name matches the given POSIX regular expression
Report transformations performed by optimization passes whose name matches the given POSIX regular expression
rpath
rsp-quoting=
Set the rsp quoting to either 'posix', or 'windows'
rtlib=
Compiler runtime library to use
rtlib
Enable the specified remark
<remark>
save-stats=
Save llvm statistics.
save-stats
save-temps=
Save intermediate compilation results.
sdl-
sectalign
sectcreate
sectobjectsymbols
sectorder
seg1addr
seg_addr_table_filename
seg_addr_table
segaddr
segcreate
seglinkedit
segprot
segs_read_only_addr
segs_read_write_addr
segs_read_
serialize-diagnostic-file
File for serializing diagnostics in a binary format
Serialize compiler diagnostics to a file
shared-libasan
shared-libgcc
shared-libsan
show-encoding
Show instruction encoding information in transliterate mode
show-includes
Print cl.exe style /showIncludes to stdout
show-inst
Show internal instruction representation in transliterate mode
showIncludes
Print info about included files to stderr
signed-char
single_module
source-charset:
Source encoding, supports only UTF-8
specs=
specs
split-dwarf-file
File name to use for split dwarf debug info output
split-dwarf
Split out the dwarf .dwo sections
split-stacks
Try to use a split stack if possible.
stack-protector-buffer-size
Lower bound for a buffer to be considered for stack protection
stack-protector
Enable stack protectors
static-define
Should __STATIC__ be defined
static-libgcc
static-libgfortran
static-libsan
static-libstdc++
stats-file=
Filename to write statistics to
std-default=
std:
Language standard to compile for
std=
stdlib=
C++ standard library to use
libc++,libstdc++,platform
stdlib
sys-header-deps
Include system headers in dependency output
sysroot=
sysroot
system-header-prefix=
Treat all #include paths starting with <prefix> as including a system header.
system-header-prefix
Only run preprocess and compilation steps
target-abi
Target a particular ABI type
Target a specific cpu type
target-feature
Target specific attributes
target-help
target-linker-version
Target linker version
Tbss
Set starting address of BSS to <addr>
<addr>
Treat all source files as C
Specify a C source file
Tdata
test-coverage
Do not generate coverage files or remove coverage changes from IR
Time individual commands
token-cache
Use specified token cache file
Treat all source files as C++
Specify a C++ source file
trace-includes
traditional-cpp
Enable some traditional CPP emulation
traditional
trim-egraph
Only show error-related paths in the analysis graph
triple=
Specify target triple (e.g. i686-apple-darwin9)
Ttext
twolevel_namespace_hints
twolevel_namespace
Specify <script> as linker script
<script>
undefine-macro=
undefine-macro
undef all system defines
unexported_symbols_list
unoptimized-cfg
Generate unoptimized CFGs for all analyses
unsigned-char
user-dependencies
Set source and runtime encoding to UTF-8 (default)
Undefine macro <macro>
<macro>
Undefine macro
validate-charset-
validate-charset
Control vtordisp placement
Verify the binary representation of debug output
verify-ignore-unexpected=
Ignore unexpected diagnostic messages
verify-ignore-unexpected
verify-pch
Load and verify that a pre-compiled header file is not stale
Verify diagnostic output using comment directives
Print the compiler version
via-file-asm
Write assembly to file for input to assemble jobs
Use a best-case representation method for member pointers
Use a most-general representation for member pointers
Set the default most-general representation to multiple inheritance
Set the default most-general representation to single inheritance
Set the default most-general representation to virtual inheritance
volatile:iso
Volatile loads and stores have standard semantics
volatile:ms
Volatile loads and stores have acquire and release semantics
vtordisp-mode=
Control vtordisp placement on win32 targets
Disable all warnings
Enable -Wall
Enable -Wall and -Wextra
Pass the comma separated arguments in <arg> to the assembler
Wall
warn-=
warn-
WCL4
wd4005
wd4100
wd4910
wd4996
Wdeprecated
Enable warnings for deprecated constructs and define __DEPRECATED
weak-l
weak_framework
weak_library
weak_reference_mismatches
Wframe-larger-than=
whatsloaded
whyload
Pass the comma separated arguments in <arg> to the linker
Wlarge-by-value-copy=
Wlarge-by-value-copy
Warn if a function definition returns or accepts an object larger in bytes than a given value
Wlarger-than-
Wlarger-than=
Wno-deprecated
Wno-nonportable-cfstrings
Wno-rewrite-macros
Silence ObjC rewriting warnings
Wno-write-strings
Wnonportable-cfstrings
working-directory=
working-directory
Resolve file paths relative to the specified directory
Pass the comma separated arguments in <arg> to the preprocessor
Wp64
write-dependencies
write-user-dependencies
Wwrite-strings
Do not treat warnings as errors
Enable the specified warning
<warning>
Xanalyzer
Pass <arg> to the static analyzer
Xarch_
Xassembler
Pass <arg> to the assembler
Xclang
Pass <arg> to the clang compiler
Xcuda-fatbinary
Pass <arg> to fatbinary invocation
Xcuda-ptxas
Pass <arg> to the ptxas assembler
Pass <arg> to the linker
Xpreprocessor
Pass <arg> to the preprocessor
Treat subsequent input files as having type <language>
<language>
Disable precompiled headers, overrides /Yc and /Yu
Generate a pch file for all code up to and including <filename>
Load a pch file and use it instead of all code up to and including <filename>
Z-reserved-lib-cckext
Z-reserved-lib-stdc++
Z-Xlinker-no-demangle
Enable CodeView debug information in object files
Zc:auto
Zc:forScope
Zc:inline
Zc:rvalueCast
Zc:sizedDealloc-
Disable C++14 sized global deallocation functions
Zc:sizedDealloc
Zc:strictStrings
Treat string literals as const
Zc:ternary
Zc:threadSafeInit-
Disable thread-safe initialization of static variables
Zc:threadSafeInit
Enable thread-safe initialization of static variables
Zc:trigraphs-
Disable trigraphs (default)
Zc:trigraphs
Enable trigraphs
Zc:twoPhase-
Disable two-phase name lookup in templates
Zc:twoPhase
Enable two-phase name lookup in templates
Zc:wchar_t
Alias for /Z7. Does not produce PDBs.
Zlinker-input
Don't mention any default libraries in the object file
Set the default maximum struct packing alignment to 1
Syntax-check only
Pass -z <arg> to the linker
-ivfsoverlay
-idirafter
-iwithprefix
-iprefix
-iwithprefixbefore
-iquote
-iframework
-MMD
-fapinotes-cache-path=
repro-modules
index-store
 Arguments passed via response file:
 (end of response file)
 || (exit 0)
preprocessor
precompiler
backend
-fsanitize-trap
-fsanitize-trap=undefined
-fsanitize-minimal-runtime
-fsanitize=vptr
-fno-sanitize-trap=
ubsan_blacklist.txt
cfi_blacklist.txt
dfsan_abilist.txt
tsan_blacklist.txt
msan_blacklist.txt
asan_blacklist.txt
-fsanitize-recover=undefined,integer' or '-fsanitize-recover=all
-fno-sanitize-recover=undefined,integer' or '-fno-sanitize-recover=all
fsanitize-minimal-runtime
fsanitize-trap=cfi
-fsanitize-coverage=trace-pc-guard
-fsanitize-coverage=func
-fsanitize-coverage=bb
-fsanitize-coverage=edge
-fsanitize-coverage=trace-bb
-fsanitize-coverage=8bit-counters
-fsanitize-coverage=[func|bb|edge]
-fsanitize-coverage=[func|bb|edge],[trace-pc-guard|trace-pc]
trace-div
trace-gep
no-prune
inline-8bit-counters
-fsanitize-coverage-type=1
-fsanitize-coverage-type=2
-fsanitize-coverage-type=3
-fsanitize-coverage-indirect-calls
-fsanitize-coverage-trace-bb
-fsanitize-coverage-trace-cmp
-fsanitize-coverage-trace-div
-fsanitize-coverage-trace-gep
-fsanitize-coverage-8bit-counters
-fsanitize-coverage-trace-pc
-fsanitize-coverage-trace-pc-guard
-fsanitize-coverage-inline-8bit-counters
-fsanitize-coverage-no-prune
--dependent-lib=
--linker-option=/include:
-fsanitize-recover=
-fsanitize-trap=
-fsanitize-blacklist=
-fsanitize-memory-track-origins=
-fsanitize-memory-use-after-dtor
-tsan-instrument-memory-accesses=0
-tsan-instrument-memintrinsics=0
-tsan-instrument-func-entry-exit=0
-tsan-instrument-atomics=0
-fsanitize-cfi-cross-dso
-fsanitize-stats
-fsanitize-address-field-padding=
-fsanitize-address-use-after-scope
-fsanitize-address-globals-dead-stripping
-fvisibility=
profile
crtfastmath.o
-lcc_kext
platform
libgcc
thumbeb
posix
-android
armhf
.dll
clang_rt.
x86_64-apple-macosx10.9
clang::as
clang integrated assembler
offload bundler
clang-offload-bundler
0123456789.
clang++
--driver-mode=g++
clang-c++
clang-cc
clang-cpp
--driver-mode=cpp
clang-g++
clang-gcc
clang-cl
--driver-mode=cl
-internal-externc-isystem
cyclone
-fp-armv8
+reserve-x18
monsoon
+zcm
+zcz
noneon
softfp
-mfpu=
-mhwdiv=
-neon
-crypto
-crc
+execute-only
v8m.base
+reserve-r9
+no-movt
+no-neg-immediates
thumbv7k
--be8
noabicalls
legacy
single-float
dspr2
+fpxx
+nooddspreg
nooddspreg
nomadd4
440fp
-hard-float
-Av9b
-Av9d
-Av9
-Av8
-Asparclite
-Asparclet
-Av8plus
-Av8plusb
-Av8plusd
-transactional-execution
-vector
IA32
SSE2
AVX2
-rdrnd
-aes
-pclmul
-rtm
-fsgsbase
ananas::Linker
ananas::Assembler
amdgpu::Linker
AVR::Linker
avr-ld
/usr/include/c++/stdc++
bitrig::Linker
-lclang_rt.
bitrig::Assembler
-lsupc++
baremetal::Linker
-lclang_rt.builtins-
baremetal
C++ for IAMCU
-cc1
-triple
-aux-triple
-analyze
-migrate
-Eonly
-emit-obj
-emit-module-interface
-emit-pch
-emit-pth
-verify-pch
-emit-llvm
-emit-llvm-bc
-module-file-info
-rewrite-objc
-emit-llvm-uselists
-flto-unit
-x ir
-disable-llvm-passes
-mdisable-tail-calls
-mlimit-float-precision
-menable-no-infs
-menable-no-nans
-fmath-errno
-menable-unsafe-fp-math
-fno-signed-zeros
-freciprocal-math
-ffp-contract=
-target-abi
-fembed-bitcode=marker
-disable-free
-disable-llvm-verifier
-discard-value-names
-main-file-name
-static-define
-analyzer-store=region
-analyzer-opt-analyze-nested-blocks
-analyzer-eagerly-assume
-analyzer-checker=core
-analyzer-checker=apiModeling
-analyzer-checker=unix
-analyzer-checker=unix.API
-analyzer-checker=unix.Malloc
-analyzer-checker=unix.MallocSizeof
-analyzer-checker=unix.MismatchedDeallocator
-analyzer-checker=unix.cstring.BadSizeArg
-analyzer-checker=unix.cstring.NullArg
-analyzer-disable-checker=unix.API
-analyzer-disable-checker=unix.Vfork
-analyzer-checker=osx
-analyzer-checker=deadcode
-analyzer-checker=cplusplus
-analyzer-checker=security.insecureAPI.UncheckedReturn
-analyzer-checker=security.insecureAPI.getpw
-analyzer-checker=security.insecureAPI.gets
-analyzer-checker=security.insecureAPI.mktemp
-analyzer-checker=security.insecureAPI.mkstemp
-analyzer-checker=security.insecureAPI.vfork
-analyzer-checker=nullability.NullPassedToNonnull
-analyzer-checker=nullability.NullReturnedFromNonnull
-analyzer-output
dynamic-no-pic
rwpi
ropi-rwpi
ropi
-mrelocation-model
-pic-level
-pic-is-pie
-meabi
-mthread-model
-fno-merge-all-constants
-frewrite-map-file
-warn-stack-size=
-fno-jump-tables
-fno-preserve-as-comments
-mregparm
-fpcc-struct-return
-freg-struct-return
-fdefault-calling-conv=stdcall
-mdisable-fp-elim
-mno-zero-initialized-in-bss
-relaxed-aliasing
-no-struct-path-tbaa
-fstrict-enums
-fno-strict-return
-fallow-editor-placeholders
-fstrict-vtable-pointers
-split-stacks
-fno-trapping-math
-fdenormal-fp-math=
-mrecip=
divd
divf
vec-divd
vec-divf
sqrtd
vec-sqrtd
vec-sqrtf
-ffast-math
-ffinite-math-only
-masm-verbose
-no-integrated-as
-mdebug-pass
-mconstructor-aliases
-fforbid-guard-variables
-mms-bitfields
-mpie-copy-relocations
-ffreestanding
-munwind-tables
-mcode-model
-target-cpu
-mfpmath
-mbackchain
-fvisibility
-target-linker-version
-momit-leaf-frame-pointer
please use -maltivec and include altivec.h explicitly
please use -mno-altivec
-header-include-file
-diagnostic-log-file
-gcodeview
-dwarf-column-info
-dwarf-ext-refs
-fmodule-format=obj
-fno-split-dwarf-inlining
-enable-split-dwarf
-debug-info-macro
-backend-option
-generate-gnu-dwarf-pub-sections
-generate-arange-section
-generate-type-units
-ffunction-sections
-fdata-sections
-fno-unique-section-names
-fprofile-instrument-path=
-fprofile-instrument=clang
-fprofile-instrument=llvm
default_%m.profraw
-fprofile-instrument-use-path=
default.profdata
-femit-coverage-notes
-femit-coverage-data
-fcoverage-mapping
-fprofile-instr-generate
-coverage-notes-file
-coverage-data-file
-nobuiltininc
-resource-dir
-arcmt-check
-arcmt-modify
-arcmt-migrate
-mt-migrate-directory
-ccc-arcmt-migrate
-objcmt-migrate-literals
-objcmt-migrate-subscripting
-objcmt-migrate-property
CLANG_PROJECT_INDEX_PATH
-index-store-path
-index-ignore-system-symbols
-index-record-codegen-name
-pedantic
GCC_TREAT_WARNINGS_AS_ERRORS
-Wno-error
-std=c++98
-std=c89
-std=
-fconst-strings
-fdeprecated-macro
-fgnu-keywords
-fno-gnu-keywords
-fno-dwarf-directory-asm
-fno-autolink
-fdebug-prefix-map=
-ftemplate-depth
-foperator-arrow-depth
-fconstexpr-depth
-fconstexpr-steps
-fbracket-depth
-Wlarge-by-value-copy=
-Wlarge-by-value-copy=64
-relocatable-pch
-fconstant-string-class
-ftabstop
-ferror-limit
-fmacro-backtrace-limit
-ftemplate-backtrace-limit
-fconstexpr-backtrace-limit
-fspell-checking-limit
-fmessage-length
-ftype-visibility
-femulated-tls
-fno-lax-vector-conversions
-fapple-kext
-ftrapv-handler
-fwrapv
-freroll-loops
-stack-protector
ssp-buffer-size=
-stack-protector-buffer-size
-mstackrealign
-mstack-alignment=
-mstack-probe-size=
-mstack-probe-size=0
-fallow-half-arguments-and-returns
-arm-restrict-it
-arm-no-restrict-it
-cl-opt-disable
-cl-strict-aliasing
-cl-single-precision-constant
-cl-finite-math-only
-cl-kernel-arg-info
-cl-unsafe-math-optimizations
-cl-fast-relaxed-math
-cl-mad-enable
-cl-no-signed-zeros
-cl-denorms-are-zero
-cl-fp32-correctly-rounded-divide-sqrt
-fdebug-info-for-profiling
-fno-builtin
-fno-builtin-
-fno-assume-sane-operator-new
-fapinotes
-fapinotes-modules
-fblocks
-fblocks-runtime-optional
-fcoroutines-ts
-fmodules
-fmodules-ts
-fimplicit-module-maps
-fmodules-decluse
-fmodules-strict-decluse
-fno-implicit-modules
.cache
org.llvm.clang.
LOGNAME
ModuleCache
-fprebuilt-module-path=
-fmodule-map-file=
-module-dependency-dir
-fbuild-session-timestamp
-fbuild-session-timestamp=
-fno-access-control
-fno-elide-constructors
-fno-rtti
-fshort-enums
-fno-signed-char
-fno-use-cxa-atexit
-fms-extensions
-fuse-line-directives
-fms-compatibility
-fms-compatibility-version=
-std=c++14
c++14
-std=c++1z
c++latest
-std=c++11
-fborland-extensions
-fdeclspec
-fno-declspec
-fno-threadsafe-statics
-fdelayed-template-parsing
-fgnu89-inline
-fno-inline
-fobjc-dispatch-method=mixed
-fobjc-dispatch-method=non-legacy
-fobjc-subscripting-legacy-runtime
-fencode-extended-block-signature
-fobjc-arc
-fobjc-arc-cxxlib=libc++
-fobjc-arc-cxxlib=libstdc++
-fobjc-arc-exceptions
-fno-objc-infer-related-result-type
ignore_mrc_weak
-fignore-objc-weak
-fapplication-extension
-fobjc-exceptions
-fcxx-exceptions
-fsjlj-exceptions
-frelaxed-template-template-args
-fsized-deallocation
-fno-aligned-allocation
-faligned-allocation
-fnew-alignment=
-fno-constant-cfstrings
-fpascal-strings
-fpack-struct=
-fpack-struct=1
-fmax-type-align=
-fmax-type-align=16
-fno-common
utf-8
-fno-caret-diagnostics
-fno-diagnostics-fixit-info
-fdiagnostics-show-option
-fdiagnostics-show-category
-fdiagnostics-show-hotness
-fdiagnostics-hotness-threshold=
-fdiagnostics-format
-fdiagnostics-show-note-include-stack
-fno-diagnostics-show-note-include-stack
-fdiagnostics-color=
-fcolor-diagnostics
-fansi-escape-codes
-fno-show-source-location
-fdiagnostics-absolute-paths
-fno-show-column
-fno-spell-checking
-fasm-blocks
-fno-gnu-inline-asm
-vectorize-loops
-vectorize-slp
-fdollars-in-identifiers
-fno-dollars-in-identifiers
-fapple-pragma-pack
-fno-math-builtin
-opt-record-file
opt.yaml
-frewrite-imports
-frewrite-includes
-traditional-cpp
-serialize-diagnostic-file
-fretain-comments-from-system-headers
-load
-stats-file=
-finclude-default-header
-disable-llvm-optzns
-dwarf-debug-flags
RC_HIDE
RC_SHOW
-split-dwarf-file
-fcuda-include-gpubinary
-fopenmp-is-device
-fopenmp-host-ir-file-path
-fopenmp-targets=
-fwhole-program-vtables
-flto
visualstudio::Compiler
-fobjc-runtime=
-fdebug-compilation-dir
/E, /P or /EP
-dependency-file
-sys-header-deps
-module-file-deps
-find-pch-source=
-include-pch
.dummy
-include-pth
-isysroot
CPATH
-c-isystem
C_INCLUDE_PATH
-cxx-isystem
CPLUS_INCLUDE_PATH
-objc-isystem
OBJC_INCLUDE_PATH
-objcxx-isystem
OBJCPLUS_INCLUDE_PATH
-debug-info-kind=line-tables-only
-debug-info-kind=limited
-debug-info-kind=standalone
-dwarf-version=
-debugger-tuning=gdb
-debugger-tuning=lldb
-debugger-tuning=sce
-gdwarf-2
-gdwarf-3
-gdwarf-4
-gdwarf-5
-D_DEBUG
-D_MT
-D_DLL
-flto-visibility-public-std
--dependent-lib=libcmtd
--dependent-lib=libcmt
--dependent-lib=msvcrtd
--dependent-lib=msvcrt
-D_VC_NODEFAULTLIB
--dependent-lib=oldnames
-fno-rtti-data
-fexternc-nounwind
-fms-volatile
-fms-memptr-rep=single
-fms-memptr-rep=multiple
-fms-memptr-rep=virtual
-fdefault-calling-conv=vectorcall
-fdefault-calling-conv=fastcall
-fdefault-calling-conv=cdecl
msvc-fallback
-mqdsp6-compat
-Wreturn-type
-hexagon-small-data-threshold=
-enable-hexagon-ieee-rnd-near
-machine-sink-split=0
-disable-red-zone
-no-implicit-float
intel
-x86-asm-syntax=
-mfloat-abi
-mstack-alignment=4
hard
-mxgot
-mno-ldc1-sdc1
-mno-check-zero-division
-mips-ssection-threshold=
optimal
-mips-compact-branches=
-aarch64-fix-cortex-a53-835769=1
-aarch64-fix-cortex-a53-835769=0
-aarch64-enable-global-merge=false
-aarch64-enable-global-merge=true
-arm-global-merge=false
-arm-global-merge=true
+amdgpu-debugger-insert-nops
+amdgpu-debugger-reserve-regs
+amdgpu-debugger-emit-prologue
-mrelax-all
-mincremental-linker-compatible
-arm-implicit-it=
-mbig-obj
--trap
+mips1
+use-tcc-in-div
--break
-use-tcc-in-div
-mhard-float
-soft-float
-mips1
+mips2
-mips2
+mips3
-mips3
+mips4
-mips4
+mips5
-mips5
+mips32
-mips32
+mips32r2
-mips32r2
+mips32r3
-mips32r3
+mips32r5
-mips32r5
+mips32r6
-mips32r6
+mips64
-mips64
+mips64r2
+mips64r3
+mips64r5
+mips64r6
-mips64r2
-mips64r3
-mips64r5
-mips64r6
-msave-temp-labels
--fatal-warnings
-massembler-fatal-warnings
--noexecstack
-mnoexecstack
--compress-debug-sections
-nocompress-debug-sections
--nocompress-debug-sections
-mrelax-relocations=yes
--mrelax-relocations=yes
-mrelax-relocations=no
--mrelax-relocations=no
-gdwarf-
-mcpu
-mfpu
-mhwdiv
-defsym
--mrelax-relocations
{ "directory": "
, "file": "
, "output": "
, "arguments": ["
--target=
"]},
-cc1as
-filetype
-dwarf-debug-producer
-arm-add-build-attributes
-type=
-targets=
-inputs=
-outputs=
-unbundle
clang frontend
include/c++/v1
cloudabi::Linker
--no-dynamic-linker
-zrelro
LIBRARY_PATH
-plugin
/../lib/LLVMgold.so
-plugin-opt=mcpu=
-plugin-opt=O
-plugin-opt=thinlto
-plugin-opt=jobs=
-plugin-opt=-debugger-tune=lldb
-plugin-opt=-debugger-tune=sce
-plugin-opt=-debugger-tune=gdb
-plugin-opt=-function-sections
-plugin-opt=-data-sections
-plugin-opt=sample-profile=
asan-preinit
ubsan_standalone
stats_client
dfsan
msan
msan_cxx
tsan_cxx
ubsan_standalone_cxx
__safestack_init
cfi_diag
__sanitizer_stats_register
-export-dynamic-symbol=__cfi_check
.syms
--dynamic-list=
--extract-dwo
--strip-dwo
objcopy
-KPIC
builtins
/usr/include/c++/backwards
CrossWindows::Linker
_DllMainCRTStartup
--entry
mainCRTStartup
--allow-multiple-definition
--out-implib
___asan_seh_interceptor
__asan_seh_interceptor
--undefined
CrossWindows::Assembler
/usr/lib/gcc
cuda_wrappers
-internal-isystem
-include
__clang_cuda_runtime_wrapper.h
-fcuda-is-device
-fcuda-flush-denormals-to-zero
-fcuda-approx-transcendentals
-mlink-cuda-bitcode
+ptx42
NVPTX::Linker
fatbinary
--options-file
--cuda
--create
--image=profile=
,file=
NVPTX::Assembler
ptxas
--dont-merge-basicblocks
--return-at-end
--gpu-name
--output-file
/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v
/usr/local/cuda
/usr/local/cuda-
/nvvm/libdevice
/version.txt
CUDA Version 
libdevice.
Found CUDA installation: 
, version 
_static.a
_pic.a
darwin
macho_embedded
@executable_path
RC_DEBUG_OPTIONS
ppc601
ppc603
ppc604
ppc604e
ppc750
ppc7400
ppc7450
ppc970
pentpro
pentIIm3
armv4t
armv5
armv5tej
xscale
armv6k
armv6m
armv7a
armv7em
armv7k
armv7m
armv7s
i486SX
pentIIm5
nvptx64
igil32
igil64
gpu_32
gpu_64
amdil
darwin::Lipo
lipo
darwin::Dsymutil
dsymutil
darwin::VerifyDebug
dwarfdump
--verify
--debug-info
--eh-frame
--quiet
-create
-output
darwin::Linker
-filelist
-mllvm
-lto-pass-remarks-output
.opt.yaml
-lto-pass-remarks-with-hotness
-ObjC
libclang_rt.safestack_osx.a
-framework
Foundation
-lobjc
-arch_multiple
-final_output
-allow_stack_execute
-threads=
-demangle
-export_dynamic
-application_extension
-object_path_lto
libLTO.dylib
-lto_library
-no_deduplicate
-dynamic
-dynamiclib
-dylib
-dylib_compatibility_version
-dylib_current_version
-dylib_install_name
-no_pie
-bitcode_bundle
-bitcode_process_mode
-syslibroot
-force_cpusubtype_ALL
armv7r
armv7-a
armv7-r
armv7-k
armv7e-m
armv7-m
armv7-s
--gstabs
-watchos_version_min
-watchos_simulator_version_min
-tvos_version_min
-tvos_simulator_version_min
-bridgeos_version_min
-ios_simulator_version_min
-iphoneos_version_min
-macosx_version_min
-ldylib1.o
-ldylib1.10.5.o
-lbundle1.o
-lgcrt0.o
-lgcrt1.o
-no_new_main
-lcrt0.o
-lcrt1.o
-lcrt1.3.1.o
-lcrt1.10.5.o
-lcrt1.10.6.o
crt3.o
iossim
tvossim
watchossim
_dynamic.dylib
libclang_rt.profile_
-exported_symbols_list
-exported_symbol
_VPMergeHook
___llvm_profile_filename
___llvm_profile_raw_version
_lprofCurFilename
-faligned-alloc-unavailable
OS X 10.7
iOS 5.0
-fomit-frame-pointer
SDKROOT
MACOSX_DEPLOYMENT_TARGET
IPHONEOS_DEPLOYMENT_TARGET
TVOS_DEPLOYMENT_TARGET
WATCHOS_DEPLOYMENT_TARGET
BRIDGEOS_DEPLOYMENT_TARGET
iPhoneOS
iPhoneSimulator
MacOSX
WatchSimulator
AppleTVOS
AppleTVSimulator
iPhone
AppleTV
Watch
Bridge
.sdk
lsan
ubsan
ubsan_minimal
libclang_rt.stats_client_
stats
esan
-lSystem
libclang_rt.watchos.a
libclang_rt.tvos.a
libclang_rt.bridgeos.a
-lgcc_s.1
libclang_rt.ios.a
-lgcc_s.10.4
-lgcc_s.10.5
libclang_rt.10.4.a
libclang_rt.osx.a
RC_XBS
/usr/local/lib/sanitizers
-force_load
libarclite_
libclang_rt.cc_kext_watchos.a
libclang_rt.cc_kext_tvos.a
libclang_rt.cc_kext_bridgeos.a
libclang_rt.cc_kext_ios.a
libclang_rt.cc_kext.a
iOS 7
OS X 10.9
libstdc++.dylib
libstdc++.6.dylib
/usr/lib/libstdc++.dylib
/usr/lib/libstdc++.6.dylib
-Wdeprecated-objc-isa-usage
-Werror=deprecated-objc-isa-usage
-Werror=implicit-function-declaration
dragonfly::Linker
/usr/libexec/ld-elf.so.2
-L/usr/lib/gcc50
-rpath
/usr/lib/gcc50
-lgcc_pic
dragonfly::Assembler
/usr/include/c++/4.2
-lc++_p
-lstdc++_p
freebsd::Linker
elf_i386_fbsd
elf32ppc_fbsd
freebsd::Assembler
-mfpu=vfp
-mfpu=softvfp
-meabi=5
-matpcs
/usr/lib32/crt1.o
/usr/lib32
compiler-rt
fuchsia::Linker
ld.lld
rodynamic
asan/
/usr/include/c++/v1
Found candidate GCC installation: 
Selected GCC installation: 
Candidate multilib: 
Selected multilib: 
-arch
-m32
-m64
gcc::Linker
linker (via gcc)
-compress-debug-sections
-compress-debug-sections=none
zlib
zlib-gnu
-compress-debug-sections=
--x32
-a32
-a64
-mppc64
-mlittle-endian
-mfpu=neon
-mfpu=crypto-neon-fp-armv8
-mfloat-abi=soft
-mfloat-abi=softfp
-mfloat-abi=hard
krait
-mcpu=cortex-a15
-mno-shared
-call_nonpic
2008
-mnan=2008
-mfpxx
-no-mips16
-mmsa
-march=
old-gnu
-target
cortex-a53
--fix-cortex-a53-843419
elf_iamcu
elf32btsmipn32
elf32ltsmipn32
elf32_x86_64
elf_x86_64
aarch64linux
aarch64_be_linux
armelf_linux_eabi
armelfb_linux_eabi
elf32ppclinux
elf64lppc
elf64_s390
crtbegin_static.o
crtbegin_so.o
crtbegin_dynamic.o
-whole-archive
xray
-no-whole-archive
-lrt
-ldl
--wrap=pthread_create
-lgloss
-lsoftfp
crtend_so.o
crtend_android.o
       OpenMP Offload Linker Script
 *** Automatically generated by Clang ***
TARGET(binary)
SECTIONS
INPUT(
  .omp_offloading.entries :
  ALIGN(0x10)
  SUBALIGN(0x01)
    PROVIDE_HIDDEN(.omp_offloading.entries_begin = .);
    *(.omp_offloading.entries)
    PROVIDE_HIDDEN(.omp_offloading.entries_end = .);
INSERT BEFORE .data
  .omp_offloading.
    PROVIDE_HIDDEN(.omp_offloading.img_start.
 = .);
    PROVIDE_HIDDEN(.omp_offloading.img_end.
/crtbegin.o
march=mips32
march=mips32r2
march=mips32r6
march=mips64
march=mips64r2
march=mips64r6
mmicromips
muclibc
mnan=2008
mabi=n32
mabi=n64
msoft-float
mhard-float
/mips-r2
+march=mips32r2
/mips-r6
+march=mips32r6
+march=mips32
+march=mips64r6
/mips-r1
/32/mips-r1
/32/mips-r2
/32/mips-r6
/mips-r2-hard-musl
/mipsel-r2-hard-musl
/mips16
/micromips
+mmicromips
-mips16
-mmicromips
/uclibc
/soft-float
+msoft-float
/nan2008
+mnan=2008
-msoft-float
+mabi=n64
-mabi=n32
/micromips/nan2008
/mips16/nan2008
/mips16.*/64
/micromips.*/64
+mabi=n32
/../../../../mips-linux-gnu/libc/uclibc/usr/include
/../../../../mips-linux-gnu/libc/usr/include
/mips64r6
/mips-r6-hard
/mips-r6-soft
/mipsel-r6-hard
/mipsel-r6-soft
/micromips-r6-hard
/micromips-r6-soft
/micromipsel-r6-hard
/micromipsel-r6-soft
-mabi=n64
/lib32
/lib64
/../../../../mips-img-linux-gnu/lib
/../usr/include
/../../../../sysroot/usr/include
/mips32
/mips64r2
+march=mips64r2
/mips64
-march=mips64r2
/sof
/mips64/mips16
/mips64r2/mips16
/micromips/mips16
/micromips/64
/mips32/64
^/64
/mips16/64
.*sof/nan2008
/mips-r2-hard
/mips-r2-soft
/mipsel-r2-hard
/mipsel-r2-soft
/mips-r2-hard-nan2008
/mipsel-r2-hard-nan2008
/mips-r2-hard-nan2008-uclibc
/mipsel-r2-hard-nan2008-uclibc
/mips-r2-hard-uclibc
/mipsel-r2-hard-uclibc
/micromipsel-r2-hard-nan2008
/micromipsel-r2-soft
/../../../../mips-mti-linux-gnu/lib
/../../../../sysroot/uclibc/usr/include
soft
0123456789
/usr
/opt/rh/devtoolset-6/root/usr
/opt/rh/devtoolset-4/root/usr
/opt/rh/devtoolset-3/root/usr
/opt/rh/devtoolset-2/root/usr
gcc/
../..
gcc-cross/
/gcc/
../../..
i386-linux-gnu/gcc/
/armv7-a
+march=armv7-a
-mthumb
/thumb
-march=armv7-a
+mthumb
/armv7-a/thumb
march=armv7-a
mthumb
-mx32
+mx32
/libgcc.a
mx32
/lib/gcc/
/etc/env.d/gcc/config-
CURRENT=
/usr/lib/gcc/
/../../..
/gcc
/libx32
mipsel-linux-android
mips64el-linux-android
sparc-sun-solaris2.11
i386-pc-solaris2.11
aarch64-none-linux-gnu
aarch64-linux-android
aarch64-redhat-linux
aarch64-suse-linux
aarch64_be-none-linux-gnu
armv7hl-redhat-linux-gnueabi
armv6hl-suse-linux-gnueabi
armv7hl-suse-linux-gnueabi
arm-linux-androideabi
armebv7hl-redhat-linux-gnueabi
armeb-linux-androideabi
x86_64-unknown-linux-gnu
x86_64-pc-linux-gnu
x86_64-redhat-linux6E
x86_64-redhat-linux
x86_64-suse-linux
x86_64-manbo-linux-gnu
x86_64-slackware-linux
x86_64-linux-android
x86_64-unknown-linux
i686-linux-gnu
i686-pc-linux-gnu
i486-linux-gnu
i386-redhat-linux6E
i686-redhat-linux
i586-redhat-linux
i386-redhat-linux
i586-suse-linux
i486-slackware-linux
i686-montavista-linux
i686-linux-android
i586-linux-gnu
mips-mti-linux-gnu
mips-img-linux-gnu
mips-mti-linux
/libr2
/libr6
powerpc64-unknown-linux-gnu
powerpc64-suse-linux
ppc64-redhat-linux
powerpc-unknown-linux-gnu
powerpc-suse-linux
powerpc-montavista-linuxspe
powerpc64le-unknown-linux-gnu
powerpc64le-suse-linux
ppc64le-redhat-linux
sparcv9-linux-gnu
sparcv8-linux-gnu
s390x-unknown-linux-gnu
s390x-ibm-linux-gnu
s390x-suse-linux
s390x-redhat-linux
/backward
/system/develop/headers/c++
/system/develop/headers/c++/v1
/hexagon/include/c++
/../target
libstdc++
-ffp-contract=fast
/hexagon/include
hexagon::Linker
hexagon-ld
-march=hexagon
-mcpu=hexagon
-call_shared
standalone
hexagon/lib
/crt0_standalone.o
/crt0.o
/pic
/initS.o
/init.o
/finiS.o
/fini.o
hexagon-link
hexagon::Assembler
hexagon-as
hexagon-llvm-mc
-filetype=obj
-fsyntax-only
/hexagon/lib
/G0/pic
/system/bin/linker64
/system/bin/linker
armeb
/lib/ld-musl-
.so.1
ld-linux-aarch64.so.1
ld-linux-aarch64_be.so.1
ld-linux-armhf.so.3
ld-linux.so.3
ld-musl-mipsel.so.1
ld-musl-mips.so.1
ld-uClibc-mipsn8.so.0
ld-uClibc.so.0
ld-linux-mipsn8.so.1
ld64.so.2
ld64.so.1
ld-linux.so.2
libx32
ld-linux-x32.so.2
ld-linux-x86-64.so.2
/usr/
/../../../../
/libc
/../../../../sysroot
/../include
/c++/
/include/g++-v
/../include/c++
/lib/arm-linux-gnueabihf
arm-linux-gnueabihf
/lib/arm-linux-gnueabi
arm-linux-gnueabi
/lib/armeb-linux-gnueabihf
armeb-linux-gnueabihf
/lib/armeb-linux-gnueabi
armeb-linux-gnueabi
/lib/i386-linux-gnu
i386-linux-gnu
/lib/x86_64-linux-gnu
x86_64-linux-gnu
/lib/aarch64-linux-gnu
aarch64-linux-gnu
/lib/aarch64_be-linux-gnu
aarch64_be-linux-gnu
/lib/mips-linux-gnu
mips-linux-gnu
/lib/mipsel-linux-gnu
mipsel-linux-gnu
/lib/mips64-linux-gnu
mips64-linux-gnu
/lib/mips64-linux-gnuabi64
mips64-linux-gnuabi64
/lib/mips64el-linux-gnu
mips64el-linux-gnu
/lib/mips64el-linux-gnuabi64
mips64el-linux-gnuabi64
/lib/powerpc-linux-gnuspe
powerpc-linux-gnuspe
/lib/powerpc-linux-gnu
powerpc-linux-gnu
/lib/powerpc64-linux-gnu
powerpc64-linux-gnu
/lib/powerpc64le-linux-gnu
powerpc64le-linux-gnu
/lib/sparc-linux-gnu
sparc-linux-gnu
/lib/sparc64-linux-gnu
sparc64-linux-gnu
/lib/s390x-linux-gnu
s390x-linux-gnu
/usr/local/include/c++
/usr/include/c++
-isystem
/usr/local/include
/usr/include/x86_64-linux-gnu
/usr/include/i686-linux-gnu/64
/usr/include/i486-linux-gnu/64
/usr/include/i386-linux-gnu
/usr/include/x86_64-linux-gnu/32
/usr/include/i686-linux-gnu
/usr/include/i486-linux-gnu
/usr/include/aarch64-linux-gnu
/usr/include/arm-linux-gnueabi
/usr/include/arm-linux-gnueabihf
/usr/include/armeb-linux-gnueabi
/usr/include/armeb-linux-gnueabihf
/usr/include/mips-linux-gnu
/usr/include/mipsel-linux-gnu
/usr/include/mips64-linux-gnu
/usr/include/mips64-linux-gnuabi64
/usr/include/mips64el-linux-gnu
/usr/include/mips64el-linux-gnuabi64
/usr/include/powerpc-linux-gnu
/usr/include/powerpc64-linux-gnu
/usr/include/powerpc64le-linux-gnu
/usr/include/sparc-linux-gnu
/usr/include/sparc64-linux-gnu
/usr/include/s390x-linux-gnu
/usr/include
/bin
relro
--hash-style=gnu
--hash-style=both
--no-add-needed
libr6
libr2
lib32
/lib/../
/../lib/
/usr/lib/../
/../sysroot
/c++/v1
-lunwind
libclang_rt.
GNU::Linker
/usr/lib
backward
/sys-root/mingw/include
gcc::Preprocessor
gcc preprocessor
gcc::Compiler
gcc frontend
MinGW::Linker
i386pe
i386pep
thumb2pe
--subsystem
console
--dll
--shared
_DllMainCRTStartup@12
DllMainCRTStartup
--enable-auto-image-base
dllcrt2.o
crt2u.o
crt2.o
gcrt2.o
-lssp_nonshared
-lssp
-lgomp
-lgmon
-lgdi32
-lcomdlg32
-ladvapi32
-lshell32
-luser32
-lkernel32
-lmingwthrd
-lmingw32
-lmoldname
-lmingwex
-lmsvcrt
MinGW::Assemble
--64
-w64-mingw32
mingw32
0.0.0
lib64
-w64-mingw32-gcc
mingw32-gcc
/sys-root/mingw/lib
minix::Linker
-lCompilerRT-Generic
-L/usr/pkg/compiler-rt/lib
minix::Assembler
HostX64
HostX86
INCLUDE
msvc
visualstudio::Linker
-out:
-defaultlib:libcmt
-libpath:
-nologo
-debug
-dll
-incremental:no
-wholearchive:
asan_dynamic_runtime_thunk
asan_dynamic
asan_dll_thunk
-nodefaultlib:vcomp.lib
-nodefaultlib:vcompd.lib
.lib
lld-link
link.exe
-include:___asan_seh_interceptor
-include:__asan_seh_interceptor
asan_cxx
darwin::Assembler
/nologo
/Oi-
/Ob2
/Oy-
/GR-
/GS-
/Gy-
/Gw-
/Zc:threadSafeInit
/Zc:threadSafeInit-
cl.exe
VCToolsInstallDir
VCINSTALLDIR
PATH
x86ret
x86chk
amd64ret
amd64chk
Host
MSVC
Tools
/../include/c++/v1
moviCompile
movicompile
moviAsm
-no6thSlotCompression
-cv:
-noSPrefixing
-elf
-fno-exceptions
-DMYRIAD2
shave::Linker
-lc++abi
-lrtemscpu
-lrtemsbsp
sparc-myriad-elf-ld
myriad
sparc-myriad-elf
/../sparc-myriad-elf/lib
/../
arm-nacl/include/c++/v1
x86_64-nacl/include/c++/v1
mipsel-nacl/include/c++/v1
-lc++
libc++
i686-nacl/usr/include
x86_64-nacl/include
arm-nacl/usr/include
x86_64-nacl/usr/include
mipsel-nacl/usr/include
NaCl::Linker
--build-id
elf_i386_nacl
armelf_nacl
elf_x86_64_nacl
mipselelf_nacl
Native Client
-lnacl
-lpnacl_legacy
GNU::Assembler
nacl-arm-macros.s
/lib/
x86_64-nacl/lib32
i686-nacl/usr/lib
x86_64-nacl/bin
i686-nacl
x86_64-nacl/lib
x86_64-nacl/usr/lib
x86_64-nacl
arm-nacl/lib
arm-nacl/usr/lib
arm-nacl/bin
arm-nacl
mipsel-nacl/lib
mipsel-nacl/usr/lib
mipsel-nacl
/usr/include/g++
/usr/include/c++/
netbsd::Linker
/libexec/ld.elf_so
elf_i386
armelf_nbsd_eabi
armelf_nbsd_eabihf
armelf_nbsd
armelfb_nbsd_eabi
armelfb_nbsd_eabihf
armelfb_nbsd
elf32btsmip
elf32ltsmip
elf64btsmip
elf64ltsmip
elf32ppc_nbsd
elf64ppc
elf32_sparc
elf64_sparc
-lgcc_eh
netbsd::Assembler
-mcpu=
-march
=/usr/lib/i386
=/usr/lib/eabi
=/usr/lib/eabihf
=/usr/lib/oabi
=/usr/lib/o32
=/usr/lib/64
=/usr/lib/powerpc
=/usr/lib/sparc
=/usr/lib
openbsd::Linker
__start
/usr/libexec/ld.so
-nopie
gcrt0.o
rcrt0.o
crt0.o
amd64
-L/usr/lib/gcc-lib/
/4.2.1
openbsd::Assembler
--32
-mppc
-many
-mabi
PS4cpu::Link
gold
--sysroot=
-pie
--oformat=so
-lSceDbgUBSanitizer_stub_weak
-lSceDbgAddressSanitizer_stub_weak
--no-demangle
orbis-ld
--eh-frame-hdr
-Bshareable
-dynamic-linker
/libexec/ld-elf.so.1
--enable-new-dtags
gcrt1.o
crtbeginS.o
crtbeginT.o
-lkernel
-lm_p
-lgcc_p
-lstdc++
-lgcc_eh_p
--as-needed
--no-as-needed
-lpthread_p
--start-group
-lc_p
--end-group
crtendS.o
PS4cpu::Assemble
orbis-as
--dependent-lib=libclang_rt.profile-x86_64.a
-static
SCE_ORBIS_SDK_DIR
/../../
target/include
PS4 system headers
target/lib
PS4 system libraries
/usr/include/c++/v1/support/solaris
/usr/gcc/
/include/c++/
solaris::Linker
_start
-Bdynamic
--dynamic-linker
ld.so.1
values-Xa.o
crtbegin.o
-lgcc_s
-lgcc
crtend.o
solaris::Assembler
/../lib
/usr/lib/
amd64/
sparcv9/
/../libexec
-flavor
--gc-sections
-export-dynamic
--strip-all
-shared
-Bstatic
rcrt1.o
Scrt1.o
crt1.o
crti.o
-lpthread
-allow-undefined-file
wasm.syms
-lcompiler_rt
crtn.o
/include/c++/v1
-fuse-init-array
/include
wasm::Linker
/lib
XCC_CPLUS_INCLUDE_PATH
-nostdsysteminc
XCC_C_INCLUDE_PATH
XCore::Linker
XCore-ld
-fexceptions
XCore::Assembler
XCore-as
-fverbose-asm
cpp-output
cuda-cpp-output
cuda
objective-c-cpp-output
objc-cpp-output
objective-c
c++-cpp-output
objective-c++-cpp-output
objc++-cpp-output
objective-c++
renderscript
c-header-cpp-output
c-header
cl-header
objective-c-header-cpp-output
objective-c-header
c++-header-cpp-output
c++-header
objective-c++-header-cpp-output
objective-c++-header
c++-module
cppm
c++-module-cpp-output
assembler
assembler-with-cpp
f95-cpp-input
java
lto-ir
lto-bc
plist
rewritten-objc
rewritten-legacy-objc
remap
precompiled-header
treelang
dSYM
dependencies
cuda-fatbin
fatbin
c++m
cxxm
 on non-Linux target OS
-fxray-always-instrument=
-fxray-never-instrument=
-fdepfile-entry=
STATISTICS:
<eof> parser at end of file
<unknown> parser at unknown location
: at annotation token
: unknown current parser token
: current parser token '
layout_compatible
must_be_null
defined_in
generated_declaration
macosx_app_extension
introduced
obsoleted
strict
replacement
_Noreturn 
parsing struct/union body
 { namespace 
parsing namespace
using declaration
attributes list
alias declaration
parsing struct/union/class body
access declaration
noexcept(false)
block literal parsing
lambda expression parsing
@end
@end
@catch clause
parsing Objective-C method
initializer
'initializer'
reduction identifier
dependency type
'#pragma omp declare target'
cancellation
point
schedule modifier
defaultmap modifier
options
redefine_extname
FP_CONTRACT
EXTENSION
OPENCL
detect_mismatch
pointers_to_members
runtime_checks
intrinsic
force_cuda_host_device
attribute
clang attribute
clang fp
clang loop
clang optimize
'on' or 'off'
__INTRIN_H
best_case
full_generality
single_inheritance
multiple_inheritance
virtual_inheritance
pragma detect_mismatch
pragma comment
OPENCL EXTENSION
clang section
data
rodata
text
pragma clang section
reset
native
power
code_seg
".CRT$XCC"
".CRT$XCL"
".CRT$XCU"
nopage
nocache
clang loop 
unless
unless(
'is_member'
'functionType'
'unless(is_union)'
'is_thread_local', 'is_global', 'is_parameter', 'unless(is_parameter)'
'is_instance'
is_parameter
is_thread_local
is_global
functionType
is_instance
is_member
apply_to
any(
do/while
auto &&
'do'
in compound statement ('{}')
'default'
'case'
parsing function body
InternalPragmaState
parsing function try block
asm operand
__except
pixel
top-level asm block
'asm'
partition
no identifier table in AST file
selector ID out of range in AST file
SourceLocation remap refers to unknown module, cannot find 
submodule ID out of range in AST file
declaration ID out-of-range for AST file
malformed AST file: missing C++ ctor initializers
Corrupted AST file
Incorrect encoding of extended qualifier type
Incorrect encoding of complex type
Incorrect encoding of pointer type
Incorrect encoding of decayed type
Decayed type does not decay
Incorrect encoding of adjusted type
Incorrect encoding of block pointer type
Incorrect encoding of lvalue reference type
Incorrect encoding of rvalue reference type
Incorrect encoding of member pointer type
incorrect encoding of vector type in AST file
incorrect encoding of extended vector type in AST file
incorrect encoding of no-proto function type
incorrect encoding of typedef type
incorrect encoding of typeof(type) in AST file
incorrect encoding of record type
incorrect encoding of enum type
incorrect encoding of attributed type
incorrect encoding of paren type
incorrect encoding of pack expansion type
Incorrect encoding of atomic type
Incorrect encoding of pipe type
source location entry ID out-of-range for AST file
incorrectly-formatted source location entry in AST file
could not decompress embedded file contents: 
AST record has invalid code
could not find file '
' referenced by AST file '
*** AST File Statistics:
  %u/%u source location entries read (%f%%)
  %u/%u types read (%f%%)
  %u/%u declarations read (%f%%)
  %u/%u identifiers read (%f%%)
  %u/%u macros read (%f%%)
  %u/%u selectors read (%f%%)
  %u/%u statements read (%f%%)
  %u/%u lexical declcontexts read (%f%%)
  %u/%u visible declcontexts read (%f%%)
  %u/%u method pool entries read (%f%%)
  %u/%u method pool lookups succeeded (%f%%)
  %u/%u method pool table lookups succeeded (%f%%)
  %u / %u identifier table lookups succeeded (%f%%)
*** PCH/ModuleFile Remappings:
Global bit offset map
Global source location entry map
Global type map
Global declaration map
Global identifier map
Global macro map
Global submodule map
Global selector map
Global preprocessed entity map
*** PCH/Modules Loaded:
no macro table in AST file
malformed AST file: missing C++ base specifiers
no preprocessing record
#undef 
#include "
#__include_macros "
-Wsystem-headers
-Weverything -Werror
-pedantic-errors
target ABI
target CPU
Microsoft Visual C++ full compatibility mode
Microsoft C++ extensions
Microsoft inline asm blocks
Borland extensions
C++11
C++14
C++1z
C++2a
Objective-C 1
Objective-C 2
Objective-C App Extension
trigraphs
'//' comments
bool, true, and false keywords
half keyword
wchar_t keyword
__declspec keyword
GNU extensions
GNU keywords
digraphs
C++ operator name keywords
Apple kext support
writable string support
const-qualified string support
lax vector conversions
AltiVec-style vector initializers
System z vector extensions
exception handling
Objective-C exceptions
C++ exceptions
setjmp-longjump exception handling
Assume extern C functions don't unwind
traditional CPP emulation
run-time type information
emit run-time type information data
Microsoft-compatible structure layout
freestanding implementation
disable builtin functions
disable math builtin functions
GNU-style inline assembly
C++ coroutines TS
C++17 relaxed matching of template template arguments
POSIX thread support
blocks extension to C
errno in math functions
modules extension to C
C++ Modules TS
require declaration of module uses
requiring declaration of module uses and all headers to be in modules
local submodule visibility
hash out diagnostic errors as part of the module hash
__OPTIMIZE__ predefined macro
__OPTIMIZE_SIZE__ predefined macro
__STATIC__ predefined macro (as opposed to __DYNAMIC__)
default struct packing maximum alignment
default maximum alignment for types
Controls if doubles should be aligned to 8 bytes (x86 only)
__PIC__ level
is pie
GNU inline semantics
__NO_INLINE__ predefined macro
__DEPRECATED predefined macro
fast FP math optimizations, and __FAST_MATH__ predefined macro
__FINITE_MATH_ONLY__ predefined macro
Unsafe Floating Point Math
unsigned short wchar_t
member-pointer representation method
default calling convention
short enum types
OpenCL
OpenCL version
Native half type support
Native half args and returns
half args and returns
CUDA
OpenMP support and version of OpenMP (31, 40 or 45)
Use TLS for threadprivates or runtime calls
Generate code only for OpenMP target device
RenderScript
compiling for CUDA device
allowing variadic functions in CUDA device code
treating unattributed constexpr functions as __host__ __device__
flushing denormals to zero
using approximate transcendental functions
sized deallocation
aligned allocation
aligned allocation functions are unavailable
maximum alignment guaranteed by '::operator new(size_t)'
enable C++ Extensions for Concepts
no constant CoreFoundation strings
treating double-precision floating point constants as single precision constants
OpenCL fast relaxed math
FP contraction type
bit-field type alignment
hexagon-qdsp6 backward compatibility
Objective-C automated reference counting
__weak support in the ARC runtime
Objective-C __weak in ARC and MRC files
Ignore ARC-style __weak instead of erroring
Subscripting support in legacy ObjectiveC runtime
OpenCL fake address space map
OpenCL address space map mangling mode
Include default header file for OpenCL
optional blocks runtime
Objective-C Garbage Collection mode
value symbol visibility
type symbol visibility
stack protector mode
signed integer overflow handling
Microsoft Visual C/C++ Version
How many vtordisps to insert
Apple gcc-compatible #pragma pack handling
retain documentation comments from system headers in the AST
use external API notes
controls how aggressive is ASan field padding (0: none, 1:least aggressive, 2: more aggressive)
controls whether to do XRay instrumentation
module features
target Objective-C runtime
block command names
-fsanitize=
Expected lexical block
Expected visible lookup table block
malformed source manager block record in AST file
' referenced by AST file
invalid record at top-level of AST file
error at end of module block in AST file
malformed preprocessor detail record in AST file
malformed comments block in AST file
duplicate TYPE_OFFSET record in AST file
duplicate DECL_OFFSET record in AST file
duplicate IDENTIFIER_OFFSET record in AST file
invalid special-types record
invalid weak identifiers record
ran out of source locations
Multiple SOURCE_LOCATION_PRELOADS records in AST file
Invalid VTABLE_USES record
Invalid existing PendingInstantiations
Invalid PENDING_IMPLICIT_INSTANTIATIONS block
Invalid SEMA_DECL_REFS block
invalid DECL_UPDATE_OFFSETS block in AST file
duplicate OBJC_CATEGORIES_MAP record in AST file
Invalid existing UndefinedButUsed
invalid undefined-but-used record
duplicate MACRO_OFFSET record in AST file
invalid pragma optimize record
invalid pragma ms_struct record
invalid cuda pragma options record
invalid pragma pack record
malformed submodule block record in AST file
submodule metadata record should be at beginning of block
malformed module definition
too many submodules
mismatched umbrella headers in submodule
mismatched umbrella directories in submodule
Timestamp file
FILE type is NULL
Invalid FILE type in AST file
jmp_buf type is NULL
Invalid jmp_buf type in AST file
sigjmp_buf type is NULL
ucontext_t type is NULL
attempt to read a C++ base-specifier record as a declaration
attempt to read a C++ ctor initializer record as a declaration
malformed block record in AST file
MODULE_DIRECTORY
MODULE_MAP_FILE
ORIGINAL_FILE
ORIGINAL_PCH_DIR
ORIGINAL_FILE_ID
INPUT_FILE_OFFSETS
OPTIONS_BLOCK
LANGUAGE_OPTIONS
TARGET_OPTIONS
FILE_SYSTEM_OPTIONS
HEADER_SEARCH_OPTIONS
PREPROCESSOR_OPTIONS
INPUT_FILES_BLOCK
INPUT_FILE
TYPE_OFFSET
DECL_OFFSET
IDENTIFIER_OFFSET
IDENTIFIER_TABLE
EAGERLY_DESERIALIZED_DECLS
MODULAR_CODEGEN_DECLS
SPECIAL_TYPES
STATISTICS
TENTATIVE_DEFINITIONS
SELECTOR_OFFSETS
METHOD_POOL
PP_COUNTER_VALUE
SOURCE_LOCATION_OFFSETS
SOURCE_LOCATION_PRELOADS
EXT_VECTOR_DECLS
UNUSED_FILESCOPED_DECLS
PPD_ENTITIES_OFFSETS
VTABLE_USES
REFERENCED_SELECTOR_POOL
TU_UPDATE_LEXICAL
SEMA_DECL_REFS
WEAK_UNDECLARED_IDENTIFIERS
PENDING_IMPLICIT_INSTANTIATIONS
UPDATE_VISIBLE
DECL_UPDATE_OFFSETS
DECL_UPDATES
CUDA_SPECIAL_DECL_REFS
HEADER_SEARCH_TABLE
FP_PRAGMA_OPTIONS
OPENCL_EXTENSIONS
OPENCL_EXTENSION_TYPES
OPENCL_EXTENSION_DECLS
DELEGATING_CTORS
KNOWN_NAMESPACES
MODULE_OFFSET_MAP
SOURCE_MANAGER_LINE_TABLE
OBJC_CATEGORIES_MAP
FILE_SORTED_DECLS
IMPORTED_MODULES
OBJC_CATEGORIES
MACRO_OFFSET
INTERESTING_IDENTIFIERS
UNDEFINED_BUT_USED
LATE_PARSED_TEMPLATE
OPTIMIZE_PRAGMA_OPTIONS
MSSTRUCT_PRAGMA_OPTIONS
POINTERS_TO_MEMBERS_PRAGMA_OPTIONS
UNUSED_LOCAL_TYPEDEF_NAME_CANDIDATES
DELETE_EXPRS_TO_ANALYZE
CUDA_PRAGMA_FORCE_HOST_DEVICE_DEPTH
PP_CONDITIONAL_STACK
SOURCE_MANAGER_BLOCK
SM_SLOC_FILE_ENTRY
SM_SLOC_BUFFER_ENTRY
SM_SLOC_BUFFER_BLOB
SM_SLOC_BUFFER_BLOB_COMPRESSED
SM_SLOC_EXPANSION_ENTRY
PREPROCESSOR_BLOCK
PP_MACRO_DIRECTIVE_HISTORY
PP_MACRO_FUNCTION_LIKE
PP_MACRO_OBJECT_LIKE
PP_MODULE_MACRO
SUBMODULE_BLOCK
SUBMODULE_METADATA
SUBMODULE_DEFINITION
SUBMODULE_UMBRELLA_HEADER
SUBMODULE_HEADER
SUBMODULE_TOPHEADER
SUBMODULE_UMBRELLA_DIR
SUBMODULE_IMPORTS
SUBMODULE_EXPORTS
SUBMODULE_REQUIRES
SUBMODULE_EXCLUDED_HEADER
SUBMODULE_LINK_LIBRARY
SUBMODULE_CONFIG_MACRO
SUBMODULE_CONFLICT
SUBMODULE_PRIVATE_HEADER
SUBMODULE_TEXTUAL_HEADER
SUBMODULE_PRIVATE_TEXTUAL_HEADER
SUBMODULE_INITIALIZERS
SUBMODULE_EXPORT_AS
COMMENTS_BLOCK
COMMENTS_RAW_COMMENT
DECLTYPES_BLOCK
TYPE_EXT_QUAL
TYPE_COMPLEX
TYPE_POINTER
TYPE_BLOCK_POINTER
TYPE_LVALUE_REFERENCE
TYPE_RVALUE_REFERENCE
TYPE_MEMBER_POINTER
TYPE_CONSTANT_ARRAY
TYPE_INCOMPLETE_ARRAY
TYPE_VARIABLE_ARRAY
TYPE_VECTOR
TYPE_EXT_VECTOR
TYPE_FUNCTION_NO_PROTO
TYPE_FUNCTION_PROTO
TYPE_TYPEDEF
TYPE_TYPEOF_EXPR
TYPE_TYPEOF
TYPE_RECORD
TYPE_OBJC_INTERFACE
TYPE_OBJC_OBJECT_POINTER
TYPE_DECLTYPE
TYPE_ELABORATED
TYPE_SUBST_TEMPLATE_TYPE_PARM
TYPE_UNRESOLVED_USING
TYPE_INJECTED_CLASS_NAME
TYPE_OBJC_OBJECT
TYPE_TEMPLATE_TYPE_PARM
TYPE_TEMPLATE_SPECIALIZATION
TYPE_DEPENDENT_NAME
TYPE_DEPENDENT_TEMPLATE_SPECIALIZATION
TYPE_DEPENDENT_SIZED_ARRAY
TYPE_PAREN
TYPE_PACK_EXPANSION
TYPE_ATTRIBUTED
TYPE_SUBST_TEMPLATE_TYPE_PARM_PACK
TYPE_UNARY_TRANSFORM
TYPE_ATOMIC
TYPE_DECAYED
TYPE_ADJUSTED
TYPE_OBJC_TYPE_PARAM
LOCAL_REDECLARATIONS
DECL_TYPEDEF
DECL_TYPEALIAS
DECL_RECORD
DECL_ENUM_CONSTANT
DECL_FUNCTION
DECL_OBJC_METHOD
DECL_OBJC_INTERFACE
DECL_OBJC_PROTOCOL
DECL_OBJC_IVAR
DECL_OBJC_AT_DEFS_FIELD
DECL_OBJC_CATEGORY
DECL_OBJC_CATEGORY_IMPL
DECL_OBJC_IMPLEMENTATION
DECL_OBJC_COMPATIBLE_ALIAS
DECL_OBJC_PROPERTY
DECL_OBJC_PROPERTY_IMPL
DECL_FIELD
DECL_MS_PROPERTY
DECL_IMPLICIT_PARAM
DECL_PARM_VAR
DECL_FILE_SCOPE_ASM
DECL_BLOCK
DECL_CONTEXT_LEXICAL
DECL_CONTEXT_VISIBLE
DECL_NAMESPACE
DECL_NAMESPACE_ALIAS
DECL_USING
DECL_USING_SHADOW
DECL_USING_DIRECTIVE
DECL_UNRESOLVED_USING_VALUE
DECL_UNRESOLVED_USING_TYPENAME
DECL_LINKAGE_SPEC
DECL_CXX_RECORD
DECL_CXX_METHOD
DECL_CXX_CONSTRUCTOR
DECL_CXX_INHERITED_CONSTRUCTOR
DECL_CXX_DESTRUCTOR
DECL_CXX_CONVERSION
DECL_ACCESS_SPEC
DECL_FRIEND
DECL_FRIEND_TEMPLATE
DECL_CLASS_TEMPLATE
DECL_CLASS_TEMPLATE_SPECIALIZATION
DECL_CLASS_TEMPLATE_PARTIAL_SPECIALIZATION
DECL_VAR_TEMPLATE
DECL_VAR_TEMPLATE_SPECIALIZATION
DECL_VAR_TEMPLATE_PARTIAL_SPECIALIZATION
DECL_FUNCTION_TEMPLATE
DECL_TEMPLATE_TYPE_PARM
DECL_NON_TYPE_TEMPLATE_PARM
DECL_TEMPLATE_TEMPLATE_PARM
DECL_TYPE_ALIAS_TEMPLATE
DECL_STATIC_ASSERT
DECL_CXX_BASE_SPECIFIERS
DECL_CXX_CTOR_INITIALIZERS
DECL_INDIRECTFIELD
DECL_EXPANDED_NON_TYPE_TEMPLATE_PARM_PACK
DECL_EXPANDED_TEMPLATE_TEMPLATE_PARM_PACK
DECL_CLASS_SCOPE_FUNCTION_SPECIALIZATION
DECL_IMPORT
DECL_OMP_THREADPRIVATE
DECL_EMPTY
DECL_OBJC_TYPE_PARAM
DECL_OMP_CAPTUREDEXPR
DECL_PRAGMA_COMMENT
DECL_PRAGMA_DETECT_MISMATCH
DECL_OMP_DECLARE_REDUCTION
PREPROCESSOR_DETAIL_BLOCK
PPD_MACRO_EXPANSION
PPD_MACRO_DEFINITION
PPD_INCLUSION_DIRECTIVE
EXTENSION_BLOCK
EXTENSION_METADATA
UNHASHED_CONTROL_BLOCK
DIAGNOSTIC_OPTIONS
DIAG_PRAGMA_MAPPINGS
STMT_NULL_PTR
STMT_REF_PTR
STMT_COMPOUND
STMT_DEFAULT
STMT_LABEL
STMT_ATTRIBUTED
STMT_SWITCH
STMT_WHILE
STMT_INDIRECT_GOTO
STMT_CONTINUE
STMT_BREAK
STMT_RETURN
STMT_GCCASM
STMT_MSASM
EXPR_PREDEFINED
EXPR_DECL_REF
EXPR_INTEGER_LITERAL
EXPR_FLOATING_LITERAL
EXPR_IMAGINARY_LITERAL
EXPR_STRING_LITERAL
EXPR_CHARACTER_LITERAL
EXPR_PAREN
EXPR_PAREN_LIST
EXPR_UNARY_OPERATOR
EXPR_SIZEOF_ALIGN_OF
EXPR_ARRAY_SUBSCRIPT
EXPR_MEMBER
EXPR_BINARY_OPERATOR
EXPR_COMPOUND_ASSIGN_OPERATOR
EXPR_CONDITIONAL_OPERATOR
EXPR_IMPLICIT_CAST
EXPR_CSTYLE_CAST
EXPR_COMPOUND_LITERAL
EXPR_EXT_VECTOR_ELEMENT
EXPR_INIT_LIST
EXPR_DESIGNATED_INIT
EXPR_DESIGNATED_INIT_UPDATE
EXPR_IMPLICIT_VALUE_INIT
EXPR_NO_INIT
EXPR_VA_ARG
EXPR_ADDR_LABEL
EXPR_CHOOSE
EXPR_GNU_NULL
EXPR_SHUFFLE_VECTOR
EXPR_BLOCK
EXPR_GENERIC_SELECTION
EXPR_OBJC_STRING_LITERAL
EXPR_OBJC_BOXED_EXPRESSION
EXPR_OBJC_ARRAY_LITERAL
EXPR_OBJC_DICTIONARY_LITERAL
EXPR_OBJC_ENCODE
EXPR_OBJC_SELECTOR_EXPR
EXPR_OBJC_PROTOCOL_EXPR
EXPR_OBJC_IVAR_REF_EXPR
EXPR_OBJC_PROPERTY_REF_EXPR
EXPR_OBJC_KVC_REF_EXPR
EXPR_OBJC_MESSAGE_EXPR
STMT_OBJC_FOR_COLLECTION
STMT_OBJC_CATCH
STMT_OBJC_FINALLY
STMT_OBJC_AT_TRY
STMT_OBJC_AT_SYNCHRONIZED
STMT_OBJC_AT_THROW
EXPR_OBJC_BOOL_LITERAL
STMT_CXX_CATCH
STMT_CXX_TRY
STMT_CXX_FOR_RANGE
EXPR_CXX_OPERATOR_CALL
EXPR_CXX_MEMBER_CALL
EXPR_CXX_CONSTRUCT
EXPR_CXX_TEMPORARY_OBJECT
EXPR_CXX_STATIC_CAST
EXPR_CXX_DYNAMIC_CAST
EXPR_CXX_REINTERPRET_CAST
EXPR_CXX_CONST_CAST
EXPR_CXX_FUNCTIONAL_CAST
EXPR_USER_DEFINED_LITERAL
EXPR_CXX_STD_INITIALIZER_LIST
EXPR_CXX_BOOL_LITERAL
EXPR_CXX_NULL_PTR_LITERAL
EXPR_CXX_TYPEID_EXPR
EXPR_CXX_TYPEID_TYPE
EXPR_CXX_THIS
EXPR_CXX_THROW
EXPR_CXX_DEFAULT_ARG
EXPR_CXX_DEFAULT_INIT
EXPR_CXX_BIND_TEMPORARY
EXPR_CXX_SCALAR_VALUE_INIT
EXPR_CXX_NEW
EXPR_CXX_DELETE
EXPR_CXX_PSEUDO_DESTRUCTOR
EXPR_EXPR_WITH_CLEANUPS
EXPR_CXX_DEPENDENT_SCOPE_MEMBER
EXPR_CXX_DEPENDENT_SCOPE_DECL_REF
EXPR_CXX_UNRESOLVED_CONSTRUCT
EXPR_CXX_UNRESOLVED_MEMBER
EXPR_CXX_UNRESOLVED_LOOKUP
EXPR_CXX_EXPRESSION_TRAIT
EXPR_CXX_NOEXCEPT
EXPR_OPAQUE_VALUE
EXPR_BINARY_CONDITIONAL_OPERATOR
EXPR_TYPE_TRAIT
EXPR_ARRAY_TYPE_TRAIT
EXPR_PACK_EXPANSION
EXPR_SIZEOF_PACK
EXPR_SUBST_NON_TYPE_TEMPLATE_PARM
EXPR_SUBST_NON_TYPE_TEMPLATE_PARM_PACK
EXPR_FUNCTION_PARM_PACK
EXPR_MATERIALIZE_TEMPORARY
EXPR_CUDA_KERNEL_CALL
EXPR_CXX_UUIDOF_EXPR
EXPR_CXX_UUIDOF_TYPE
EXPR_LAMBDA
unexpected declaration kind '
modules.idx
*** Global Module Index Statistics:
  %u / %u identifier lookups succeeded (%f%%)
.pcm.lock
GLOBAL_INDEX_BLOCK
INDEX_METADATA
IDENTIFIER_INDEX
-%%%%%%%%
Module: 
  Imports: 
  Base source location offset: 
Source location offset local -> global map
  Base identifier ID: 
  Number of identifiers: 
Identifier ID local -> global map
  Base macro ID: 
  Number of macros: 
Macro ID local -> global map
  Base submodule ID: 
  Number of submodules: 
Submodule ID local -> global map
  Base selector ID: 
  Number of selectors: 
Selector ID local -> global map
  Base preprocessed entity ID: 
  Number of preprocessed entities: 
Preprocessed entity ID local -> global map
  Base type index: 
  Number of types: 
Type index local -> global map
  Base decl ID: 
  Number of decls: 
Decl ID local -> global map
module file out of date
module file not found
could not read module signature
signature mismatch
.timestamp
[[clang::fallthrough]]
[[fallthrough]]
break; 
/* DISABLES CODE */ (
*** Analysis Based Warnings Stats:
 functions analyzed (
 w/o CFGs).
 CFG blocks built.
 average CFG blocks per function.
 max CFG blocks per function.
 functions analyzed for uninitialiazed variables
 variables analyzed.
 average variables per function.
 max variables per function.
 block visits.
 average block visits per function.
 max block visits per function.
lias
locks
ommon
evice
ormat
lobal
ernel
lloc
ps16
_abi
ared
gnal
arget
nused
_const
i_tag
igned
ounded
leanup
latten
insize
ebug
_weak
jc_gc
tnone
ction
dcall
eakref
SObject
nnotate
onstant
astcall
utlet
ockable
scape
nline
ips16
eturn
ntinel
sv_abi
hiscall
xport
mport
nable_if
lag_enum
nterrupt
y_alias
cromips
_struct
lectany
iftcall
ls_model
ecreturn
lloc_size
pability
umable
ergent
recated
tructor
ormat_arg
u_inline
arded_by
wift_name
ctorcall
sibility
gn_value
oc_align
_consumed
nstructor
iagnose_if
uarded_var
sanitize
uplicate
icromips
bjc_bridge
wift_error
navailable
ector_size
rn_unused
ak_import
vailability
jc_boxable
erloadable
reserve_all
wift_bridge
dress_space
ways_inline
allable_when
nit_priority
unch_bounds
ck_returned
eserve_most
_guarded_by
eturns_twice
t_typestate
ift_
ontext
ewtype
rivate
rapper
ec_type_hint
ray_log_args
quired_after
sume_aligned
udart_builtin
evice_builtin
ntel_ocl_bicc
ocks_excluded
o_split_stack
bjc_
t_guarded_var
est_typestate
quired_before
dgpu_num_
xt_vector_type
t_tail_called
_error_domain
jc_root_class
nership_
olds
akes
aram_typestate
eturns_nonnull
coped_lockable
ype_visibility
nlock_function
nternal_linkage
on_vector_type
_consumes_self
ass_object_size
eturn_typestate
alyzer_noreturn
sert_capability
jc_runtime_name
nership_returns
hared_capability
ransparent_union
quire_capability
sert_shared_lock
arries_dependency
isable_tail_calls
num_extensibility
boutletcollection
o_sanitize_
emory
hread
jc_method_family
encl_unroll_hint
elease_capability
wift_
rror_result
bjc_members
arn_unused_result
mdgpu_waves_per_eu
udited_transfer
eturns_retained
nknown_transfer
_sanitize_address
_returns_retained
ridge_
utable
elated
equires_super
equires_capability
eon_polyvector_type
bjc_runtime_visible
eqd_work_group_size
hared_lock_function
ork_group_size_hint
ssert_exclusive_lock
bjc_precise_lifetime
ointer_with_type_tag
ared_locks_required
ift_indirect_result
ype_tag_for_datatype
ray_never_instrument
rgument_with_type_tag
xternal_source_symbol
o_instrument_function
bjc_independent_class
ry_acquire_capability
ray_always_instrument
f_returns_not_retained
xclusive_lock_function
orce_align_arg_pointer
s_returns_
utoreleased
ot_retained
hared_trylock_function
ssert_shared_capability
xclusive_locks_required
bjc_complete_definition
cquire_shared_capability
ntel_reqd_sub_group_size
aller_saved_registers
hread_safety_analysis
elease_shared_capability
onsumable_auto_cast_state
xclusive_trylock_function
o_address_safety_analysis
bjc_returns_inner_pointer
ease_generic_capability
uires_shared_capability
mdgpu_flat_work_group_size
evice_builtin_
urface_type
exture_type
esignated_initializer
ubclassing_restricted
lign
aked
_host__
llocate
table
roperty
estrict
electany
evice__
lobal__
hared__
eprecated
udart_builtin__
evice_builtin__
__device_builtin_
urface_type__
exture_type__
gnu::
:noreturn
nu::
:nodiscard
acked
:deprecated
:fallthrough
l::suppress
:maybe_unused
lang::optnone
nu_inline
isibility
lloc_align
onstructor
omicromips
clang::c
nvergent
lang::
allthrough
lways_inline
ssume_aligned
:carries_dependency
lang::xray_log_args
nu::returns_nonnull
ot_tail_called
nu::transparent_union
lang::internal_linkage
o_sanitize_thread
wift_error_result
ssert_capability
nu::no_sanitize_address
clang::
cquire_capability
lang::requires_capability
nu::swift_indirect_result
gnu::no_instrument_function
to_visibility_public
gnu::no_caller_saved_registers
lang::assert_shared_capability
nu::no_address_safety_analysis
clang::re
clang::try_acquire_shared_capability
clang::require_constant_initialization
_w64
ocal
decl
ascal
lignas
eneric
onnull
rnel
ndof
tdcall
ullable
egcall
ead_only
ead_write
rite_only
ectorcall
OVERLOAD: 
COMPLETION: 
 (Hidden)
Pattern : 
unspecified
imaginary
(error)
(decltype)
 double
__final
atomic_int
atomic_uint
atomic_long
atomic_ulong
atomic_float
atomic_double
atomic_flag
atomic_intptr_t
atomic_uintptr_t
atomic_size_t
atomic_ptrdiff_t
cl_khr_int64_base_atomics cl_khr_int64_extended_atomics
cl_khr_gl_msaa_sharing
*** Semantic Analysis Stats:
 SFINAE diagnostics trapped.
'weak'
stack empty
mac68k
vtordisp
a prior #pragma section
data_seg
bss_seg
const_seg
.CRT$XCU
, and 
SwiftName API Note
<API Notes>
container subscripting expression
property expression
vector element
'kernel_enqueue_flags_t' (i.e. uint)
ndrange_t
'ndrange_t'
spsel
daifset
daifclr
"%s", 
@"%@", 
c_str
c_str()
CFIndex
SInt32
UInt32
(void*)
(size_t)(
) - 
strlen(
) - 1
std::abs
>= 0
0 <=
addOperationWithBlock
_Block_copy
, nil
, NULL
, (void*)0
nonnull 
nullable 
null_unspecified 
(...)
template<...> class
operator new
operator delete
operator new[]
operator delete[]
operator+
operator-
operator*
operator/
operator%
operator^
operator&
operator|
operator~
operator!
operator=
operator<
operator>
operator+=
operator-=
operator*=
operator/=
operator%=
operator^=
operator&=
operator|=
operator<<
operator>>
operator<<=
operator>>=
operator==
operator!=
operator<=
operator>=
operator&&
operator||
operator++
operator--
operator,
operator->*
operator()
operator[]
operatorco_await
enum <anonymous>
struct <anonymous>
__interface <anonymous>
union <anonymous>
class <anonymous>
declarations
string-literal
qualifier
parameters
statements
condition
expression
init-statement
init-expression
inc-expression
Objective-C type
CF type
std::type_info
expression-or-type
expressions
std::nullptr_t
sizeof...
parameter-pack
char[]
const char[]
@encode
type-name
Protocol *
@protocol
protocol-name
@selector
NSString *
NSArray *
objects, ...
NSDictionary *
object, ...
@catch
@synchronized
@private
@protected
@public
@package
@dynamic
@synthesize
@required
@optional
@class
@interface
@implementation
@compatibility_alias
@import
copyWithZone
mutableCopyWithZone
awakeFromCoder
replacementObjectFromCoder
classForCoder
allocWithZone
args
bycopy
oneway
NSSet
countOf
objectIn
AtIndex
AtIndexes
NSIndexSet *
indexes
object-type
buffer
range:
NSRange
inRange
insertObject:
atIndexes
atIndexes:
removeObjectFrom
replaceObjectIn
withObject:
NSEnumerator
enumeratorOf
NSEnumerator *
memberOf
NSSet *
keyPathsForValuesAffecting
NSSet<NSString *> *
automaticallyNotifiesObserversOf
NS_DESIGNATED_INITIALIZER
ApplicationExtension
std::experimental::coroutine_traits
coroutine_traits
promise_type
__promise
initial_suspend
final_suspend
coroutine_handle
std::experimental::coroutine_handle
from_address
await_ready
await_suspend
await_resume
await_transform
yield_value
return_void
return_value
get_return_object_on_allocation_failure
__coro_gro
unhandled_exception
get_return_object
__interface 
union 
__builtin_
asprintf
vasprintf
__CFStringMakeConstantString
global or constant
cudaConfigureCall
FILE
jmp_buf
sigjmp_buf
ucontext_t
ucontext.h
  int 
tune=
fpmath=
word
pointer
unwind_word
'minsize'
'ns_returns_retained'
getter:
setter:
newValue
'dllimport'
'interrupt'
'signal'
global-dynamic
local-dynamic
initial-exec
local-exec
swift
ios_app_extension
watchos_app_extension
tvos_app_extension
CFString
strftime
vcmn_err
printf0
strfmon
cmn_err
zcmn_err
kprintf
freebsd_kprintf
os_trace
os_log
gcc_diag
gcc_cdiag
gcc_cxxdiag
gcc_tdiag
__CFString
a CFString
an NSString
a string type
string type
__declspec(thread)
NSMutableString
<no message provided>
API_AVAILABLE
API_AVAILABLE(
iOSApplicationExtension
macOSApplicationExtension
macos_app_extension
tvOSApplicationExtension
watchOSApplicationExtension
@available
, *)) {
} else {
// Fallback on earlier versions
tuple_size
tuple_element
 const &
const &
__atomic
experimental
auto &
constexpr auto 
'const char *'
parameter
(void)
forwardInvocation
NSProxy
 : NSObject 
macOS 10.11
iOS 9
swap
__profile
pair
throw()
throw(
(void*) 0
object_getClass
object_getClass(
object_setClass
object_setClass(
.c_str()
(void)(
static_cast<void>(
less_equal
greater_equal
isEqual
 isEqual:
 __autoreleasing 
 __autoreleasing
this->
self->
nextObject
(vector of 
' values)
type_info
00000000-0000-0000-0000-000000000000
_GUID
'size_t'
bad_alloc
NSConstantString
valueWithBytes
objCType
bytes
integral
keys
respondsToSelector
CFBridgingRelease
__bridge 
__bridge_transfer 
CFBridgingRetain
__bridge_retained 
CFBridgingRelease 
CFBridgingRetain 
 = {}
NULL
L'\0'
u'\0'
U'\0'
multiset
priority_queue
Filter Mode
Addressing Mode
'this'
lookup results for 
        
retain (or strong)
unsafe_unretained
nonatomic, 
(nonatomic) 
__attribute__((objc_method_family(none)))
.global_tid.
.bound_tid.
.part_id.
.privates.
.copy_fn.
.task_t.
.lb.
.ub.
.st.
.liter.
.reductions.
.previous.lb.
.previous.ub.
 or 
.omp.lb
.omp.ub
.omp.is_last
.omp.stride
.omp.comb.lb
.omp.comb.ub
.omp.iv
.capture_expr.
'map'
'map' or 'use_device_ptr'
.firstprivate.temp
.devptr.temp
'source' or 'sink'
threadprivate or private in the enclosing context
.copyprivate.src
.copyprivate.dst
.copyin.src
.copyin.dst
.linear.start
.linear.step
.reduction.lhs
.lastprivate.src
.lastprivate.dst
'enable_if'
operator->
objectForKeyedSubscript
objectAtIndexedSubscript
UNREFERENCED_PARAMETER
countByEnumeratingWithState
objects
__range
__begin
__end
default captured statement
OpenMP region
literal
'__try'
'try'
__context
#pragma unroll
#pragma nounroll
#pragma clang loop
assume_safety
full
static_cast<
enable_if_t
CONCEPT_REQUIRES
CONCEPT_REQUIRES_
[with 
instantiating class definition
instantiating enum definition
instantiating default member init
common_type
_Map_base
__detail
instantiating variable definition
instantiating variable initializer
instantiating function definition
omp_in
omp_orig
omp_priv
omp_out
cannot instantiate %0 yet
type name
NSError
va_list
'static'
type qualifier
'__ptr32'
'__ptr64'
'__sptr'
'__uptr'
OSAtomicCompareAndSwap
objc_atomicCompareAndSwap
call_once
dispatch_sync
dispatch_once
libcxx03 std::call_once implementation, skipping.
unknown std::call_once implementation, skipping.
__state_
_M_once
reate
NSException
arguments
wint_t
unsigned __int32
const unichar *
unichar
intmax_t
ssize_t
ptrdiff_t
unsigned __int64
uintmax_t
size_t
wchar_t *
#null
#undefined
 := 
return 
) then 
 else 
branch (
BB_null
phi(
 BB_
let _x
CFG {
cast[
#ptr
#vref
#lit
  <#code#>
<#code#>
break;
<uninitialized>
(char*)
 + 1
*** AST Context Stats:
 types total.
 types
 implicit default constructors created
 implicit copy constructors created
 implicit move constructors created
 implicit copy assignment operators created
 implicit move assignment operators created
 implicit destructors created
__int128_t
__uint128_t
__NSConstantString
__NSConstantString_tag
length
objc_super
__block_descriptor
reserved
Size
__block_descriptor_withcopydispose
CopyFuncPtr
DestroyFuncPtr
instancetype
{objc_object=}
{objc_class=}
"_vptr$
__builtin_va_list
__va_list
__stack
__gr_top
__vr_top
__gr_offs
__vr_offs
__va_list_tag
overflow_arg_area
reg_save_area
gp_offset
fp_offset
__ap
__gpr
__fpr
__overflow_arg_area
__reg_save_area
__builtin_ms_va_list
objcclass
objcinstance
the global namespace
the global scope
block literal
lambda expression
method 
function 
' (aka '
values
' (vector of 
(no argument)
(default) 
 != 
[(default) 
(default) template 
[(default) template 
[template 
[...]
 * ...]
 aka 
(no qualifiers) 
(no qualifiers)
QualType
<<<NULL>>>
LocInfo Type
 sugar
 dependent
 instantiation_dependent
 variably_modified
 contains_unexpanded_pack
 imported
 written as lvalue reference
 trailing_return
 underlying_type
 depth 
 index 
 pack
 alias
 decltype(auto)
 undeduced
 expansions 
TemplateArgument
 null
 type
 decl
 nullptr
 integral 
 template 
 template expansion
 expr
 noreturn
 produces_result
 regparm 
 altivec
 altivec pixel
 altivec bool
 neon
 neon poly
<invalid sloc>
postfix
(CXXTemporary
 global
 array
 this
 functional cast to 
 field 
 extended by 
 selector=
Decl
 isFreeIvar
 class=
 super (instance)
 super (class)
 Kind=MethodRef Getter="
" Setter="
 Kind=PropertyRef Property="
 super
 Messaging=
Getter&Setter
 Kind=ArraySubscript GetterForArray="
 Kind=DictionarySubscript GetterForDictionary="
" SetterForArray="
" SetterForDictionary="
ADL) = '
 empty
 sizeof
 alignof
 vec_step
 __builtin_omp_required_simd_align
 catch all
<<<NULL>>> OMPClause
Clause
 <implicit>
array filler
 elidable
 zeroing
FallThrough
Suppress
SwiftContext
SwiftErrorResult
SwiftIndirectResult
Annotate
CFConsumed
CarriesDependency
NSConsumed
NonNull
PassObjectSize
AMDGPUFlatWorkGroupSize
AMDGPUNumSGPR
AMDGPUNumVGPR
AMDGPUWavesPerEU
ARMInterrupt
AVRInterrupt
AVRSignal
AcquireCapability
AcquiredAfter
AcquiredBefore
AlignMac68k
Aligned
AllocAlign
AllocSize
AnalyzerNoReturn
AnyX86Interrupt
AnyX86NoCallerSavedRegisters
ArcWeakrefUnavailable
ArgumentWithTypeTag
AsmLabel
AssertCapability
AssertExclusiveLock
AssertSharedLock
AssumeAligned
Blocks
C11NoReturn
CDecl
CFAuditedTransfer
CFUnknownTransfer
CUDAConstant
CUDADevice
CUDAGlobal
CUDAHost
CUDAInvalidTarget
CUDALaunchBounds
CUDAShared
CXX11NoReturn
CallableWhen
Capability
CapturedRecord
Cleanup
Cold
Common
Const
Consumable
ConsumableAutoCast
ConsumableSetOnRead
Convergent
DLLExport
DLLImport
Deprecated
DiagnoseIf
DisableTailCalls
EmptyBases
EnableIf
ExclusiveTrylockFunction
ExternalSourceSymbol
FastCall
Final
Flatten
Format
FormatArg
GNUInline
GuardedBy
GuardedVar
IBAction
IBOutlet
IBOutletCollection
InitPriority
IntelOclBicc
InternalLinkage
LTOVisibilityPublic
LayoutVersion
LockReturned
LocksExcluded
MSABI
MSInheritance
MSNoVTable
MSP430Interrupt
MSStruct
MSVtorDisp
MaxFieldAlignment
MicroMips
MinSize
Mips16
MipsInterrupt
NSConsumesSelf
NSReturnsAutoreleased
Naked
NoCommon
NoDuplicate
NoInline
NoInstrumentFunction
NoMicroMips
NoMips16
NoReturn
NoSanitize
NoSplitStack
NoThreadSafetyAnalysis
NoThrow
NotTailCalled
OMPCaptureNoInit
OMPThreadPrivateDecl
ObjCBridge
ObjCBridgeMutable
ObjCBridgeRelated
ObjCCompleteDefinition
ObjCException
ObjCExplicitProtocolImpl
ObjCIndependentClass
ObjCMethodFamily
ObjCNSObject
ObjCPreciseLifetime
ObjCRequiresPropertyDefs
ObjCRequiresSuper
ObjCReturnsInnerPointer
ObjCRootClass
ObjCSubclassingRestricted
OpenCLIntelReqdSubGroupSize
OpenCLKernel
OpenCLUnrollHint
OptimizeNone
Override
Ownership
Packed
ParamTypestate
Pascal
PragmaClangBSSSection
PragmaClangDataSection
PragmaClangRodataSection
PragmaClangTextSection
PreserveAll
PreserveMost
PtGuardedBy
PtGuardedVar
Pure
RegCall
ReleaseCapability
ReqdWorkGroupSize
RequireConstantInit
RequiresCapability
Restrict
ReturnTypestate
ReturnsNonNull
ReturnsTwice
ScopedLockable
Section
SelectAny
Sentinel
SetTypestate
SharedTrylockFunction
StdCall
SwiftCall
SwiftError
SwiftImportPropertyAsAccessors
SwiftNewtype
SysVABI
TLSModel
Target
TestTypestate
ThisCall
TransparentUnion
TryAcquireCapability
TypeTagForDatatype
TypeVisibility
Unavailable
Unused
Uuid
VecReturn
VecTypeHint
VectorCall
Visibility
WarnUnused
WarnUnusedResult
WeakImport
WeakRef
WorkGroupSizeHint
X86ForceAlignArgPointer
XRayInstrument
XRayLogArgs
AbiTag
Alias
AlignValue
IFunc
InitSeg
LoopHint
Mode
OMPCaptureKind
OMPDeclareSimdDecl
OMPDeclareTargetDecl
ObjCBoxable
ObjCDesignatedInitializer
ObjCRuntimeName
ObjCRuntimeVisible
OpenCLAccess
Overloadable
RenderScriptKernel
SwiftVersioned
SwiftVersionedRemoval
Thread
Attr
 Inherited
 Implicit
 IRQ
 FIQ
 SWI
 ABORT
 UNDEF
 Generic
 IsPointer
 Unavailable
 Strict
 ByRef
 Unknown
 Consumed
 Unconsumed
 DT_Error
 DT_Warning
 ArgDependent
 Closed
 Open
 GeneratedDeclaration
 Vectorize
 VectorizeWidth
 Interleave
 InterleaveCount
 Unroll
 UnrollCount
 Distribute
 Enable
 Disable
 Numeric
 AssumeSafety
 Full
 BestCase
 sw0
 sw1
 hw0
 hw1
 hw2
 hw3
 hw4
 hw5
 eic
 BS_Undefined
 BS_Inbranch
 BS_Notinbranch
 MT_To
 MT_Link
 OMF_None
 OMF_alloc
 OMF_copy
 OMF_init
 OMF_mutableCopy
 OMF_new
 AAPCS
 AAPCS_VFP
 None
 NonNullError
 NullResult
 ZeroResult
 NonZeroResult
 NK_Struct
 NK_Enum
 IsReplacedByActive
 LayoutCompatible
 MustBeNull
 Default
 Hidden
 Protected
 IR_None
 IR_ARCForbiddenType
 IR_ForbiddenWeak
 IR_IgnoredWeak
 IR_ARCForbiddenConversion
 IR_ARCInitReturnsUnrelated
 IR_ARCFieldWithOwnership
 lvalue
 xvalue
 bitfield
 objcproperty
 objcsubscript
 vectorcomponent
' ComputeLHSTy=
 ComputeResultTy=
 parent 
 first 
also in 
 implicit
 referenced
 invalid
 constexpr
<undeserialized declarations>
 Name="
<not a builtin command>
 Arg[
 explicitly
 implicitly
 Param="
 ParamIndex=
 Position=<
" CloseName="
 Text="
 Attrs: 
 SelfClosing
 RenderNormal
 RenderBold
 RenderMonospaced
 RenderEmphasized
capture this
 C++
 inline
original
super
 required
 optional
 readonly
 assign
 readwrite
 retain
 copy
 nonatomic
 strong
 unsafe_unretained
 class
 ...
 struct
 __module_private__
 typename
 covariant
 contravariant
 bounded
 virtual
target 
nominated 
constructed 
 synthesize
 none
 protected
 package
 combiner
 initializer
 dynamic
compiler
exestr
linker
user
 tls
 tls_dynamic
 nrvo
 cinit
 callinit
 listinit
 pure
 default
_delete
 delete
 trivial
 noexcept-unevaluated 
 noexcept-uninstantiated 
<<NULL params x 
Overrides: [ 
 definition
CXXCtorInitializer
 byref
 nested
 static
 __attribute__((amdgpu_flat_work_group_size(
 __attribute__((amdgpu_num_sgpr(
 __attribute__((amdgpu_num_vgpr(
 __attribute__((amdgpu_waves_per_eu(
 __attribute__((interrupt("
")))
ABORT
UNDEF
 __attribute__((interrupt))
 __attribute__((signal))
 __attribute__((abi_tag(
 [[gnu::abi_tag(
 __attribute__((acquire_capability(
 [[clang::acquire_capability(
 __attribute__((acquire_shared_capability(
 [[clang::acquire_shared_capability(
 __attribute__((exclusive_lock_function(
 __attribute__((shared_lock_function(
 __attribute__((acquired_after(
 __attribute__((acquired_before(
 __attribute__((alias("
 [[gnu::alias("
")]]
(No spelling)
 __attribute__((align_value(
 __attribute__((aligned(
 [[gnu::aligned(
 __declspec(align(
 alignas(
 _Alignas(
 __attribute__((alloc_align(
 [[gnu::alloc_align(
 __attribute__((alloc_size(
 [[gnu::alloc_size(
 __attribute__((always_inline))
 [[gnu::always_inline]]
 __forceinline
 __attribute__((analyzer_noreturn))
 __attribute__((annotate("
 [[gnu::no_caller_saved_registers]]
 __attribute__((objc_arc_weak_reference_unavailable))
 __attribute__((argument_with_type_tag(
 __attribute__((pointer_with_type_tag(
 asm("
 __asm__("
 __attribute__((assert_capability(
 [[clang::assert_capability(
 __attribute__((assert_shared_capability(
 [[clang::assert_shared_capability(
 __attribute__((assert_exclusive_lock(
 __attribute__((assert_shared_lock(
 __attribute__((assume_aligned(
 [[gnu::assume_aligned(
 __attribute__((availability(
, strict
, introduced=
, deprecated=
, obsoleted=
, unavailable
 __attribute__((blocks("
byref
 _Noreturn
 __attribute__((cdecl))
 [[gnu::cdecl]]
 __cdecl
 _cdecl
 __attribute__((cf_audited_transfer))
 __attribute__((cf_consumed))
 __attribute__((cf_returns_not_retained))
 __attribute__((cf_returns_retained))
 __attribute__((cf_unknown_transfer))
 __attribute__((constant))
 __declspec(__constant__)
 __attribute__((device))
 __declspec(__device__)
 __attribute__((global))
 __declspec(__global__)
 __attribute__((host))
 __declspec(__host__)
 __attribute__((launch_bounds(
 __declspec(__launch_bounds__(
 __attribute__((shared))
 __declspec(__shared__)
 [[noreturn]]
 __attribute__((callable_when(
consumed
unconsumed
 __attribute__((capability("
 [[clang::capability("
 __attribute__((shared_capability("
 [[clang::shared_capability("
 __attribute__((carries_dependency))
 [[carries_dependency]]
 __attribute__((cleanup(
 [[gnu::cleanup(
 __attribute__((cold))
 [[gnu::cold]]
 __attribute__((common))
 [[gnu::common]]
 __attribute__((const))
 [[gnu::const]]
 __attribute__((__const))
 [[gnu::__const]]
 __attribute__((constructor(
 [[gnu::constructor(
 __attribute__((consumable("
 __attribute__((consumable_auto_cast_state))
 __attribute__((consumable_set_state_on_read))
 __attribute__((convergent))
 [[clang::convergent]]
 __declspec(dllexport)
 __attribute__((dllexport))
 [[gnu::dllexport]]
 __declspec(dllimport)
 __attribute__((dllimport))
 [[gnu::dllimport]]
 __attribute__((deprecated("
 [[gnu::deprecated("
 __declspec(deprecated("
 [[deprecated("
 __attribute__((destructor(
 [[gnu::destructor(
 __attribute__((diagnose_if(
 __attribute__((disable_tail_calls))
 [[clang::disable_tail_calls]]
 __declspec(empty_bases)
 __attribute__((enable_if(
 __attribute__((enum_extensibility("
 [[clang::enum_extensibility("
 __attribute__((exclusive_trylock_function(
 __attribute__((external_source_symbol("
 [[clang::external_source_symbol("
 [[fallthrough]]
 [[clang::fallthrough]]
 [[gnu::fastcall]]
 __fastcall
 _fastcall
 final
 sealed
sealed
 __attribute__((flag_enum))
 __attribute__((flatten))
 [[gnu::flatten]]
 __attribute__((format(
 [[gnu::format(
 __attribute__((format_arg(
 [[gnu::format_arg(
 __attribute__((gnu_inline))
 [[gnu::gnu_inline]]
 __attribute__((guarded_by(
 __attribute__((guarded_var))
 __attribute__((hot))
 [[gnu::hot]]
 __attribute__((ibaction))
 __attribute__((iboutlet))
 __attribute__((iboutletcollection(
 __attribute__((ifunc("
 [[gnu::ifunc("
 __attribute__((init_priority(
#pragma init_seg 
 __attribute__((internal_linkage))
 [[clang::internal_linkage]]
 [[clang::lto_visibility_public]]
 __declspec(layout_version(
 __attribute__((lock_returned(
 __attribute__((locks_excluded(
#pragma clang loop 
#pragma unroll 
#pragma nounroll 
vectorize
vectorize_width
interleave
interleave_count
unroll_count
 [[gnu::ms_abi]]
 __single_inheritance(
 __multiple_inheritance(
 __virtual_inheritance(
 __unspecified_inheritance(
__unspecified_inheritance
 __declspec(novtable)
 __attribute__((interrupt(
 __attribute__((ms_struct))
 [[gnu::ms_struct]]
 __attribute__((may_alias))
 [[gnu::may_alias]]
 __attribute__((micromips))
 [[gnu::micromips]]
 __attribute__((minsize))
 __attribute__((mips16))
 [[gnu::mips16]]
vector=sw0
vector=sw1
vector=hw0
vector=hw1
vector=hw2
vector=hw3
vector=hw4
vector=hw5
 __attribute__((mode(
 [[gnu::mode(
 __attribute__((ns_consumed))
 __attribute__((ns_consumes_self))
 __attribute__((ns_error_domain(
 __attribute__((ns_returns_autoreleased))
 __attribute__((ns_returns_not_retained))
 __attribute__((naked))
 [[gnu::naked]]
 __declspec(naked)
 __declspec(noalias)
 __attribute__((nocommon))
 [[gnu::nocommon]]
 __attribute__((nodebug))
 [[gnu::nodebug]]
 __attribute__((noduplicate))
 [[clang::noduplicate]]
 __attribute__((noescape))
 [[gnu::noescape]]
 __attribute__((noinline))
 [[gnu::noinline]]
 __declspec(noinline)
 __attribute__((no_instrument_function))
 [[gnu::no_instrument_function]]
 __attribute__((nomicromips))
 [[gnu::nomicromips]]
 __attribute__((nomips16))
 [[gnu::nomips16]]
 [[gnu::noreturn]]
 __declspec(noreturn)
 __attribute__((no_sanitize(
 [[clang::no_sanitize(
 __attribute__((no_split_stack))
 [[gnu::no_split_stack]]
 __attribute__((no_thread_safety_analysis))
 __attribute__((nothrow))
 [[gnu::nothrow]]
 __declspec(nothrow)
 __attribute__((nonnull(
 [[gnu::nonnull(
 __attribute__((not_tail_called))
 [[clang::not_tail_called]]
#pragma omp declare simd 
notinbranch
inbranch
aligned(
linear(
#pragma omp declare target 
 __attribute__((objc_boxable))
 __attribute__((objc_bridge(
 __attribute__((objc_bridge_mutable(
 __attribute__((objc_bridge_related(
 __attribute__((objc_complete_definition))
 __attribute__((objc_designated_initializer))
 __attribute__((objc_exception))
 __attribute__((objc_protocol_requires_explicit_implementation))
 __attribute__((objc_independent_class))
 __attribute__((objc_method_family("
 __attribute__((NSObject))
 __attribute__((objc_precise_lifetime))
 __attribute__((objc_requires_property_definitions))
 __attribute__((objc_requires_super))
 __attribute__((objc_returns_inner_pointer))
 __attribute__((objc_root_class))
 __attribute__((objc_runtime_name("
 __attribute__((objc_runtime_visible))
 __attribute__((objc_subclassing_restricted))
 __read_only
 read_only
 __write_only
 write_only
 __read_write
 read_write
 __attribute__((intel_reqd_sub_group_size(
 __kernel
 kernel
 __attribute__((opencl_unroll_hint(
 __attribute__((optnone))
 [[clang::optnone]]
 __attribute__((overloadable))
 override
 __attribute__((ownership_holds(
 __attribute__((ownership_returns(
 __attribute__((ownership_takes(
 __attribute__((packed))
 [[gnu::packed]]
 __attribute__((param_typestate("
 __pascal
 _pascal
 __attribute__((pass_object_size(
 __attribute__((pcs("
 [[gnu::pcs("
 __attribute__((pt_guarded_by(
 __attribute__((pt_guarded_var))
 __attribute__((pure))
 [[gnu::pure]]
 [[gnu::regcall]]
 __regcall
 __attribute__((release_capability(
 [[clang::release_capability(
 __attribute__((release_shared_capability(
 [[clang::release_shared_capability(
 __attribute__((release_generic_capability(
 [[clang::release_generic_capability(
 __attribute__((unlock_function(
 __attribute__((kernel))
 __attribute__((reqd_work_group_size(
 __attribute__((require_constant_initialization))
 [[clang::require_constant_initialization]]
 __attribute__((requires_capability(
 [[clang::requires_capability(
 __attribute__((exclusive_locks_required(
 __attribute__((requires_shared_capability(
 [[clang::requires_shared_capability(
 __attribute__((shared_locks_required(
 __declspec(restrict)
 __attribute__((malloc))
 [[gnu::malloc]]
 __attribute__((return_typestate("
 __attribute__((returns_nonnull))
 [[gnu::returns_nonnull]]
 __attribute__((returns_twice))
 [[gnu::returns_twice]]
 __attribute__((scoped_lockable))
 __attribute__((section("
 [[gnu::section("
 __declspec(allocate("
 __declspec(selectany)
 __attribute__((selectany))
 [[gnu::selectany]]
 __attribute__((sentinel(
 [[gnu::sentinel(
 __attribute__((set_typestate("
 __attribute__((shared_trylock_function(
 [[gnu::stdcall]]
 __stdcall
 _stdcall
 [[gsl::suppress(
 __attribute__((swift_bridge("
 [[gnu::swiftcall]]
 __attribute__((swift_context))
 [[gnu::swift_context]]
 __attribute__((swift_error("
 [[gnu::swift_error("
nonnull_error
null_result
zero_result
nonzero_result
 __attribute__((swift_error_result))
 [[gnu::swift_error_result]]
 __attribute__((swift_indirect_result))
 [[gnu::swift_indirect_result]]
 __attribute__((swift_name("
 [[gnu::swift_name("
 __attribute__((swift_newtype("
 __attribute__((swift_wrapper("
 __attribute__((swift_objc_members))
 __attribute__((swift_private))
 [[gnu::swift_private]]
 [[gnu::sysv_abi]]
 __attribute__((tls_model("
 [[gnu::tls_model("
 __attribute__((target("
 [[gnu::target("
 __attribute__((test_typestate("
 [[gnu::thiscall]]
 __thiscall
 _thiscall
 __declspec(thread)
 __attribute__((transparent_union))
 [[gnu::transparent_union]]
 __attribute__((try_acquire_capability(
 [[clang::try_acquire_capability(
 __attribute__((try_acquire_shared_capability(
 [[clang::try_acquire_shared_capability(
 __attribute__((type_tag_for_datatype(
 __attribute__((type_visibility("
 [[clang::type_visibility("
 __attribute__((unavailable("
 [[maybe_unused]]
 __attribute__((unused))
 [[gnu::unused]]
 __attribute__((used))
 [[gnu::used]]
 __declspec(uuid("
[uuid("
 __attribute__((vecreturn))
 __attribute__((vec_type_hint(
 __vectorcall
 _vectorcall
 __attribute__((visibility("
 [[gnu::visibility("
 __attribute__((warn_unused))
 [[nodiscard]]
 [[clang::warn_unused_result]]
 __attribute__((warn_unused_result))
 [[gnu::warn_unused_result]]
 __attribute__((weak))
 [[gnu::weak]]
 __attribute__((weak_import))
 __attribute__((weakref("
 [[gnu::weakref("
 __attribute__((work_group_size_hint(
 __attribute__((force_align_arg_pointer))
 __attribute__((xray_always_instrument))
 [[clang::xray_always_instrument]]
 __attribute__((xray_never_instrument))
 [[clang::xray_never_instrument]]
 __attribute__((xray_log_args(
 [[clang::xray_log_args(
NoCommentKind
BlockCommandComment
ParamCommandComment
TParamCommandComment
VerbatimBlockComment
VerbatimLineComment
ParagraphComment
FullComment
HTMLEndTagComment
HTMLStartTagComment
InlineCommandComment
TextComment
VerbatimBlockLineComment
Returns 
rief
elps
aram
hrow
nion
uthor
elper
ethod
truct
rows
uthors
oclass
etails
ndcode
ngroup
anonly
arks
urns
fonly
tion
also
bpage
ypedef
ersion
arning
mlonly
bstract
lback
egory
nstant
efgroup
unction
tmlonly
ainpage
verload
erty
ocol
ecurity
emplate
erbatim
ttention
opyright
xception
erface
ariant
atexonly
amespace
wnership
aragraph
extblock
eakgroup
textblock
ddtogroup
ndency
ecated
scussion
tfonly
eaderfile
erclass
lassdesign
elperclass
ethodgroup
erformance
elate
ndlatexonly
nstancesize
unctiongroup
ubsubsection
emplatefield
abstract
addtogroup
attention
author
authors
brief
callback
category
classdesign
coclass
endcode
copyright
date
defgroup
details
discussion
enddot
functiongroup
headerfile
helper
helperclass
helps
htmlonly
endhtmlonly
ingroup
instancesize
invariant
latexonly
endlatexonly
/link
mainpage
manonly
endmanonly
method
methodgroup
endmsc
overload
ownership
paragraph
param
performance
related
relatedalso
relates
relatesalso
remarks
result
returns
rtfonly
endrtfonly
security
seealso
subpage
subsection
subsubsection
superclass
templatefield
/textblock
tparam
verbatim
endverbatim
weakgroup
xmlonly
endxmlonly
quot
elta
amma
rime
igma
appa
cute
rave
ilde
ambda
mbda
loor
lusmn
igmaf
psilon
mall
caption
blockquote
__attribute__((deprecated))
[in]
[out]
[in,out]
[out,in]
colgroup
(anonymous namespace)
`anonymous namespace'
(anonymous 
CFStringCreateWithFormat
CFStringCreateWithFormatAndArguments
CFStringAppendFormat
CFStringAppendFormatAndArguments
main
wmain
WinMain
wWinMain
DllMain
nothrow_t
field-padding
<deduction guide for 
<using-directive>
TranslationUnit
StaticAssert
PragmaDetectMismatch
PragmaComment
ObjCPropertyImpl
OMPThreadPrivate
UnresolvedUsingValue
OMPDeclareReduction
IndirectField
EnumConstant
VarTemplatePartialSpecialization
VarTemplateSpecialization
ParmVar
OMPCapturedExpr
ImplicitParam
Decomposition
NonTypeTemplateParm
MSProperty
CXXDestructor
CXXConversion
CXXConstructor
CXXMethod
CXXDeductionGuide
ObjCIvar
ObjCAtDefsField
Field
Binding
ConstructorUsingShadow
UsingShadow
UsingPack
UsingDirective
Using
UnresolvedUsingTypename
ClassTemplatePartialSpecialization
ClassTemplateSpecialization
CXXRecord
TemplateTemplateParm
VarTemplate
TypeAliasTemplate
FunctionTemplate
ClassTemplate
BuiltinTemplate
ObjCProperty
ObjCMethod
ObjCProtocol
ObjCImplementation
ObjCCategoryImpl
ObjCCategory
ObjCCompatibleAlias
NamespaceAlias
Namespace
Label
LinkageSpec
Import
FriendTemplate
Friend
FileScopeAsm
ExternCContext
Export
Empty
ClassScopeFunctionSpecialization
Captured
Block
AccessSpec
*** Decl Stats:
 decls total.
 AccessSpec decls, 
 Block decls, 
 Captured decls, 
 ClassScopeFunctionSpecialization decls, 
 Empty decls, 
 Export decls, 
 ExternCContext decls, 
 FileScopeAsm decls, 
 Friend decls, 
 FriendTemplate decls, 
 Import decls, 
 LinkageSpec decls, 
 Label decls, 
 Namespace decls, 
 NamespaceAlias decls, 
 ObjCCompatibleAlias decls, 
 ObjCCategory decls, 
 ObjCCategoryImpl decls, 
 ObjCImplementation decls, 
 ObjCInterface decls, 
 ObjCProtocol decls, 
 ObjCMethod decls, 
 ObjCProperty decls, 
 BuiltinTemplate decls, 
 ClassTemplate decls, 
 FunctionTemplate decls, 
 TypeAliasTemplate decls, 
 VarTemplate decls, 
 TemplateTemplateParm decls, 
 Enum decls, 
 Record decls, 
 CXXRecord decls, 
 ClassTemplateSpecialization decls, 
 ClassTemplatePartialSpecialization decls, 
 TemplateTypeParm decls, 
 ObjCTypeParam decls, 
 TypeAlias decls, 
 Typedef decls, 
 UnresolvedUsingTypename decls, 
 Using decls, 
 UsingDirective decls, 
 UsingPack decls, 
 UsingShadow decls, 
 ConstructorUsingShadow decls, 
 Binding decls, 
 Field decls, 
 ObjCAtDefsField decls, 
 ObjCIvar decls, 
 Function decls, 
 CXXDeductionGuide decls, 
 CXXMethod decls, 
 CXXConstructor decls, 
 CXXConversion decls, 
 CXXDestructor decls, 
 MSProperty decls, 
 NonTypeTemplateParm decls, 
 Var decls, 
 Decomposition decls, 
 ImplicitParam decls, 
 OMPCapturedExpr decls, 
 ParmVar decls, 
 VarTemplateSpecialization decls, 
 VarTemplatePartialSpecialization decls, 
 EnumConstant decls, 
 IndirectField decls, 
 OMPDeclareReduction decls, 
 UnresolvedUsingValue decls, 
 OMPThreadPrivate decls, 
 ObjCPropertyImpl decls, 
 PragmaComment decls, 
 PragmaDetectMismatch decls, 
 StaticAssert decls, 
 TranslationUnit decls, 
_app_extension
not available on 
introduced in 
obsoleted in 
first deprecated in 
__invoke
_cmd
__asm (
friend 
extern "
inline 
namespace 
@compatibility_alias 
@interface 
@end
@implementation 
@class 
@protocol 
@required
@optional
@property
getter = 
setter = 
readwrite
nonatomic
null_resettable
__module_private__ 
enum 
class 
struct 
template<> 
using 
typedef 
using typename 
typename 
using namespace 
#pragma omp declare reduction (
 initializer(
#pragma omp threadprivate
@synthesize 
@dynamic 
static_assert(
__thread 
_Thread_local 
constexpr 
mutable 
out 
bycopy 
byref 
oneway 
__covariant 
__contravariant 
#pragma omp end declare target
extern 
__private_extern__ 
 restrict
 = 0
 = delete
 = default
template <
virtual 
__cdecl 
__stdcall 
__fastcall 
__thiscall 
__vectorcall 
__regcall 
 const
top level
0123456789ABCDEF
\U00
CPointerToObjCPointerCast
BlockPointerToObjCPointerCast
AnyPointerToBlockPointerCast
ObjCObjectLValueCast
FloatingRealToComplex
FloatingComplexToReal
FloatingComplexToBoolean
FloatingComplexCast
FloatingComplexToIntegralComplex
IntegralRealToComplex
IntegralComplexToReal
IntegralComplexToBoolean
IntegralComplexCast
IntegralComplexToFloatingComplex
ARCProduceObject
ARCConsumeObject
ARCReclaimReturnedObject
ARCExtendBlockObject
AtomicToNonAtomic
NonAtomicToAtomic
CopyAndAutoreleaseBlockObject
BuiltinFnToFnPtr
ZeroToOCLEvent
ZeroToOCLQueue
AddressSpaceConversion
IntToOCLSampler
Dependent
BitCast
LValueBitCast
LValueToRValue
NoOp
BaseToDerived
DerivedToBase
UncheckedDerivedToBase
Dynamic
ToUnion
ArrayToPointerDecay
FunctionToPointerDecay
NullToPointer
NullToMemberPointer
BaseToDerivedMemberPointer
DerivedToBaseMemberPointer
MemberPointerToBoolean
ReinterpretMemberPointer
UserDefinedConversion
ConstructorConversion
IntegralToPointer
PointerToIntegral
PointerToBoolean
ToVoid
VectorSplat
IntegralCast
IntegralToBoolean
IntegralToFloating
FloatingToIntegral
FloatingToBoolean
BooleanToSignedIntegral
FloatingCast
captures not currently allowed
<invalid cast>
generation counter overflowed
allocator
basic_string
char_traits
basic_istream
basic_ostream
basic_iostream
CLlocal
CLconstant
CLgeneric
CUconstant
12_GLOBAL__N_1
U17pass_object_size
u8__uuidoft
u8__uuidofz
?: operator with omitted middle operand cannot be mangled
cannot yet mangle vec_step expression
cannot yet mangle __builtin_omp_required_simd_align expression
_SUBSTPACK_
v110_SUBSTPACK
LDnE
v18co_await
v18co_yield
dtdefpT
U10__float128
11objc_object
10objc_class
13objc_selector
ocl_image1d_ro
ocl_image1d_array_ro
ocl_image1d_buffer_ro
ocl_image2d_ro
ocl_image2d_array_ro
ocl_image2d_depth_ro
ocl_image2d_array_depth_ro
ocl_image2d_msaa_ro
ocl_image2d_array_msaa_ro
ocl_image2d_msaa_depth_ro
ocl_image2d_array_msaa_depth_ro
ocl_image3d_ro
ocl_image1d_wo
ocl_image1d_array_wo
ocl_image1d_buffer_wo
ocl_image2d_wo
ocl_image2d_array_wo
ocl_image2d_depth_wo
ocl_image2d_array_depth_wo
ocl_image2d_msaa_wo
ocl_image2d_array_msaa_wo
ocl_image2d_msaa_depth_wo
ocl_image2d_array_msaa_depth_wo
ocl_image3d_wo
ocl_image1d_rw
ocl_image1d_array_rw
ocl_image1d_buffer_rw
ocl_image2d_rw
ocl_image2d_array_rw
ocl_image2d_depth_rw
ocl_image2d_array_depth_rw
ocl_image2d_msaa_rw
ocl_image2d_array_msaa_rw
ocl_image2d_msaa_depth_rw
ocl_image2d_array_msaa_depth_rw
ocl_image3d_rw
11ocl_sampler
9ocl_event
12ocl_clkevent
9ocl_queue
13ocl_reserveid
U13block_pointer
u6typeof
3eut
U8__kindof
objcproto
8ocl_pipe
U7_Atomic
poly64_t
poly16_t
poly8_t
__simd64_
__simd128_
uint8_t
int8_t
uint16_t
uint32_t
uint64_t
int16_t
int32_t
int64_t
float16_t
float32_t
float64_t
Uint8
Int8
Uint16
Uint32
Uint64
Int16
Int32
Int64
Float16
Float32
Float64
Poly8
Poly16
Poly64
Ua9enable_ifI
_ZTW
_ZTH
_ZTC
_ZTT
_ZTV
__fin_
__filt_
__dtor_
__cxx_global_var_init
_ZGV
_ZTS
_ZTI
_ZGR
__regcall3__
_block_invoke_
??_R4@
??_R4
??_R3
_block_invoke
__block_literal
cannot mangle this dependent-length array yet
objc_object
objc_class
objc_selector
PAUocl_image1d_ro@@
PAUocl_image1d_array_ro@@
PAUocl_image1d_buffer_ro@@
PAUocl_image2d_ro@@
PAUocl_image2d_array_ro@@
PAUocl_image2d_depth_ro@@
PAUocl_image2d_array_depth_ro@@
PAUocl_image2d_msaa_ro@@
PAUocl_image2d_array_msaa_ro@@
PAUocl_image2d_msaa_depth_ro@@
PAUocl_image2d_array_msaa_depth_ro@@
PAUocl_image3d_ro@@
PAUocl_image1d_wo@@
PAUocl_image1d_array_wo@@
PAUocl_image1d_buffer_wo@@
PAUocl_image2d_wo@@
PAUocl_image2d_array_wo@@
PAUocl_image2d_depth_wo@@
PAUocl_image2d_array_depth_wo@@
PAUocl_image2d_msaa_wo@@
PAUocl_image2d_array_msaa_wo@@
PAUocl_image2d_msaa_depth_wo@@
PAUocl_image2d_array_msaa_depth_wo@@
PAUocl_image3d_wo@@
PAUocl_image1d_rw@@
PAUocl_image1d_array_rw@@
PAUocl_image1d_buffer_rw@@
PAUocl_image2d_rw@@
PAUocl_image2d_array_rw@@
PAUocl_image2d_depth_rw@@
PAUocl_image2d_array_depth_rw@@
PAUocl_image2d_msaa_rw@@
PAUocl_image2d_array_msaa_rw@@
PAUocl_image2d_msaa_depth_rw@@
PAUocl_image2d_array_msaa_depth_rw@@
PAUocl_image3d_rw@@
ocl_sampler
ocl_event
ocl_clkevent
ocl_queue
ocl_reserveid
cannot mangle this built-in %0 type yet
__clang
cannot mangle this dependent-sized extended vector type yet
$$A8@@
$$A6
cannot mangle this unresolved dependent type yet
cannot mangle this typeof(expression) yet
cannot mangle this typeof(type) yet
cannot mangle this decltype() yet
cannot mangle this unary transform type yet
cannot mangle this template type parameter type yet
cannot mangle this substituted parameter pack yet
cannot mangle this template specialization type yet
cannot mangle this 'auto' type yet
cannot mangle this deduced class template specialization type yet
cannot mangle this dependent name type yet
cannot mangle this dependent template specialization type yet
cannot mangle this pack expansion yet
cannot mangle this OpenCL pipe type yet
__m64
PAXI@Z
PEAXI@Z
<decltype-auto>
<auto>
__pass_object_size
$$J0
<unnamed-type-
<unnamed-enum-
<unnamed-type-$S
?__L
cannot mangle this conditional operator yet
?__K
_GUID_
__s_GUID
cannot yet mangle expression type %0
$$$V
$0A@
??_R2
??_R1
_CTA
??_K
?$TSS
@4HA
??_8
??_S
??_7
?fin$
?filt$
??__
YAXXZ
??_B
??__J
?$S1@
@4IA
??_C@_
??_R0
?$RT
??_E
Mangling declaration
NSString
NSArray
NSMutableArray
NSDictionary
NSMutableDictionary
NSNumber
NSMutableSet
NSMutableOrderedSet
NSValue
stringWithString
stringWithUTF8String
initWithString
arrayWithArray
arrayWithObject
arrayWithObjects
initWithArray
initWithObjects
objectAtIndex
replaceObjectAtIndex
withObject
addObject
insertObject
atIndex
setObject
atIndexedSubscript
dictionary
dictionaryWithDictionary
dictionaryWithObject
forKey
dictionaryWithObjects
forKeys
dictionaryWithObjectsAndKeys
initWithDictionary
initWithObjectsAndKeys
objectForKey
forKeyedSubscript
setValue
numberWithChar
numberWithUnsignedChar
numberWithShort
numberWithUnsignedShort
numberWithInt
numberWithUnsignedInt
numberWithLong
numberWithUnsignedLong
numberWithLongLong
numberWithUnsignedLongLong
numberWithFloat
numberWithDouble
numberWithBool
numberWithInteger
numberWithUnsignedInteger
BOOL
NSInteger
NSUInteger
*** Dumping AST Record Layout
Type: 
Layout: 
<ASTRecordLayout
  Size:
  DataSize:
  Alignment:
  FieldOffsets: [
%10lld | 
 (empty)
 vtable pointer)
 vftable pointer)
(primary base)
(base)
 vbtable pointer)
(vtordisp for vbase 
(primary virtual base)
(virtual base)
           | 
[sizeof=
, dsize=
 nvsize=
, nvalign=
GCCAsmStmt
MSAsmStmt
AttributedStmt
BreakStmt
CXXCatchStmt
CXXForRangeStmt
CXXTryStmt
CapturedStmt
CompoundStmt
ContinueStmt
CoreturnStmt
CoroutineBodyStmt
DeclStmt
DoStmt
BinaryConditionalOperator
ConditionalOperator
AddrLabelExpr
ArrayInitIndexExpr
ArrayInitLoopExpr
ArraySubscriptExpr
ArrayTypeTraitExpr
AsTypeExpr
AtomicExpr
BinaryOperator
CompoundAssignOperator
BlockExpr
CXXBindTemporaryExpr
CXXBoolLiteralExpr
CXXConstructExpr
CXXTemporaryObjectExpr
CXXDefaultArgExpr
CXXDefaultInitExpr
CXXDeleteExpr
CXXDependentScopeMemberExpr
CXXFoldExpr
CXXInheritedCtorInitExpr
CXXNewExpr
CXXNoexceptExpr
CXXNullPtrLiteralExpr
CXXPseudoDestructorExpr
CXXScalarValueInitExpr
CXXStdInitializerListExpr
CXXThisExpr
CXXThrowExpr
CXXTypeidExpr
CXXUnresolvedConstructExpr
CXXUuidofExpr
CallExpr
CUDAKernelCallExpr
CXXMemberCallExpr
CXXOperatorCallExpr
UserDefinedLiteral
CStyleCastExpr
CXXFunctionalCastExpr
CXXConstCastExpr
CXXDynamicCastExpr
CXXReinterpretCastExpr
CXXStaticCastExpr
ObjCBridgedCastExpr
ImplicitCastExpr
CharacterLiteral
ChooseExpr
CompoundLiteralExpr
ConvertVectorExpr
CoawaitExpr
CoyieldExpr
DeclRefExpr
DependentCoawaitExpr
DependentScopeDeclRefExpr
DesignatedInitExpr
DesignatedInitUpdateExpr
ExprWithCleanups
ExpressionTraitExpr
ExtVectorElementExpr
FloatingLiteral
FunctionParmPackExpr
GNUNullExpr
GenericSelectionExpr
ImaginaryLiteral
ImplicitValueInitExpr
InitListExpr
IntegerLiteral
LambdaExpr
MSPropertyRefExpr
MSPropertySubscriptExpr
MaterializeTemporaryExpr
MemberExpr
NoInitExpr
OMPArraySectionExpr
ObjCArrayLiteral
ObjCAvailabilityCheckExpr
ObjCBoolLiteralExpr
ObjCBoxedExpr
ObjCDictionaryLiteral
ObjCEncodeExpr
ObjCIndirectCopyRestoreExpr
ObjCIsaExpr
ObjCIvarRefExpr
ObjCMessageExpr
ObjCPropertyRefExpr
ObjCProtocolExpr
ObjCSelectorExpr
ObjCStringLiteral
ObjCSubscriptRefExpr
OffsetOfExpr
OpaqueValueExpr
UnresolvedLookupExpr
UnresolvedMemberExpr
PackExpansionExpr
ParenExpr
ParenListExpr
PredefinedExpr
PseudoObjectExpr
ShuffleVectorExpr
SizeOfPackExpr
StmtExpr
StringLiteral
SubstNonTypeTemplateParmExpr
SubstNonTypeTemplateParmPackExpr
TypeTraitExpr
TypoExpr
UnaryExprOrTypeTraitExpr
UnaryOperator
VAArgExpr
ForStmt
GotoStmt
IfStmt
IndirectGotoStmt
LabelStmt
MSDependentExistsStmt
NullStmt
OMPAtomicDirective
OMPBarrierDirective
OMPCancelDirective
OMPCancellationPointDirective
OMPCriticalDirective
OMPFlushDirective
OMPDistributeDirective
OMPDistributeParallelForDirective
OMPDistributeParallelForSimdDirective
OMPDistributeSimdDirective
OMPForDirective
OMPForSimdDirective
OMPParallelForDirective
OMPParallelForSimdDirective
OMPSimdDirective
OMPTargetParallelForSimdDirective
OMPTargetSimdDirective
OMPTargetTeamsDistributeDirective
OMPTargetTeamsDistributeParallelForDirective
OMPTargetTeamsDistributeParallelForSimdDirective
OMPTargetTeamsDistributeSimdDirective
OMPTaskLoopDirective
OMPTaskLoopSimdDirective
OMPTeamsDistributeDirective
OMPTeamsDistributeParallelForDirective
OMPTeamsDistributeParallelForSimdDirective
OMPTeamsDistributeSimdDirective
OMPMasterDirective
OMPOrderedDirective
OMPParallelDirective
OMPParallelSectionsDirective
OMPSectionDirective
OMPSectionsDirective
OMPSingleDirective
OMPTargetDataDirective
OMPTargetDirective
OMPTargetEnterDataDirective
OMPTargetExitDataDirective
OMPTargetParallelDirective
OMPTargetParallelForDirective
OMPTargetTeamsDirective
OMPTargetUpdateDirective
OMPTaskDirective
OMPTaskgroupDirective
OMPTaskwaitDirective
OMPTaskyieldDirective
OMPTeamsDirective
ObjCAtCatchStmt
ObjCAtFinallyStmt
ObjCAtSynchronizedStmt
ObjCAtThrowStmt
ObjCAtTryStmt
ObjCAutoreleasePoolStmt
ObjCForCollectionStmt
ReturnStmt
SEHExceptStmt
SEHFinallyStmt
SEHLeaveStmt
SEHTryStmt
CaseStmt
DefaultStmt
SwitchStmt
WhileStmt
*** Stmt/Expr Stats:
 stmts/exprs total.
Total bytes = 
 each (
 bytes)
${:uid}
<null expr>
volatile 
__asm 
break;
for (
try 
continue;
while (
 ?: 
__builtin_astype(
delete 
<forwarded>
new 
noexcept(
throw 
typeid(
__uuidof(
>>>(
operator""
'\\'
'\''
'\a'
'\b'
'\f'
'\n'
'\r'
'\t'
'\v'
%02x
%04x
%08x
__builtin_choose_expr(
__builtin_convertvector(
co_await 
co_yield 
 ... 
/*base*/
/*updater*/
_Generic(
/*implicit*/
/*implicit*/(
Ui16
*this
 mutable
/*no init*/
@available(...)
@encode(
.isa
->isa
Super
super.
@protocol(
@selector(
__builtin_offsetof(
__builtin_shufflevector(
sizeof...(
__builtin_va_arg(
goto 
goto *
__if_exists (
__if_not_exists (
#pragma omp atomic 
#pragma omp barrier
#pragma omp cancel 
#pragma omp cancellation point 
#pragma omp critical
#pragma omp flush 
#pragma omp distribute 
#pragma omp distribute parallel for 
#pragma omp distribute parallel for simd 
#pragma omp distribute simd 
#pragma omp for 
#pragma omp for simd 
#pragma omp parallel for 
#pragma omp parallel for simd 
#pragma omp simd 
#pragma omp target parallel for simd 
#pragma omp target simd 
#pragma omp target teams distribute 
#pragma omp target teams distribute parallel for 
#pragma omp target teams distribute parallel for simd 
#pragma omp target teams distribute simd 
#pragma omp taskloop 
#pragma omp taskloop simd 
#pragma omp teams distribute 
#pragma omp teams distribute parallel for 
#pragma omp teams distribute parallel for simd 
#pragma omp teams distribute simd 
#pragma omp master
#pragma omp ordered 
#pragma omp parallel 
#pragma omp parallel sections 
#pragma omp section
#pragma omp sections 
#pragma omp single 
#pragma omp target data 
#pragma omp target 
#pragma omp target enter data 
#pragma omp target exit data 
#pragma omp target parallel 
#pragma omp target parallel for 
#pragma omp target teams 
#pragma omp target update 
#pragma omp task 
#pragma omp taskgroup 
#pragma omp taskwait
#pragma omp taskyield
#pragma omp teams 
@catch (...) { /* todo */ } 
@synchronized (
@throw
@try
@catch(
@finally
@autoreleasepool
__finally 
__leave;
__try 
case 
default:
switch (
__except (
<<unknown expr type>>
default(
proc_bind(
defaultmap(
task_reduction(
dist_schedule(
hint(
num_tasks(
grainsize(
priority(
thread_limit(
num_teams(
map(
device(
depend(
schedule(
reduction(
collapse(
simdlen(
safelen(
num_threads(
final(
if (
-0123456789
__c11_atomic_init(
__c11_atomic_load(
__c11_atomic_store(
__c11_atomic_exchange(
__c11_atomic_compare_exchange_strong(
__c11_atomic_compare_exchange_weak(
__c11_atomic_fetch_add(
__c11_atomic_fetch_sub(
__c11_atomic_fetch_and(
__c11_atomic_fetch_or(
__c11_atomic_fetch_xor(
__atomic_load(
__atomic_load_n(
__atomic_store(
__atomic_store_n(
__atomic_exchange(
__atomic_exchange_n(
__atomic_compare_exchange(
__atomic_compare_exchange_n(
__atomic_fetch_add(
__atomic_fetch_sub(
__atomic_fetch_and(
__atomic_fetch_or(
__atomic_fetch_xor(
__atomic_fetch_nand(
__atomic_add_fetch(
__atomic_sub_fetch(
__atomic_and_fetch(
__atomic_or_fetch(
__atomic_xor_fetch(
__atomic_nand_fetch(
catch (
<<<NULL STATEMENT>>>
(no value)
(anonymous)
(null template argument)
template 
operator 
align_val_t
Builtin
Complex
Pointer
BlockPointer
LValueReference
RValueReference
MemberPointer
ConstantArray
IncompleteArray
VariableArray
DependentSizedArray
DependentSizedExtVector
Vector
ExtVector
FunctionProto
FunctionNoProto
UnresolvedUsing
Paren
Typedef
Adjusted
Decayed
TypeOfExpr
TypeOf
Decltype
UnaryTransform
Record
Elaborated
Attributed
TemplateTypeParm
SubstTemplateTypeParm
SubstTemplateTypeParmPack
TemplateSpecialization
Auto
DeducedTemplateSpecialization
InjectedClassName
DependentName
DependentTemplateSpecialization
PackExpansion
ObjCTypeParam
ObjCObject
ObjCInterface
ObjCObjectPointer
Pipe
Atomic
<OpenMP array section type>
reserve_id_t
queue_t
clk_event_t
event_t
sampler_t
__read_write image3d_t
__read_write image2d_array_msaa_depth_t
__read_write image2d_msaa_depth_t
__read_write image2d_array_msaa_t
__read_write image2d_msaa_t
__read_write image2d_array_depth_t
__read_write image2d_depth_t
__read_write image2d_array_t
__read_write image2d_t
__read_write image1d_buffer_t
__read_write image1d_array_t
__read_write image1d_t
__write_only image3d_t
__write_only image2d_array_msaa_depth_t
__write_only image2d_msaa_depth_t
__write_only image2d_array_msaa_t
__write_only image2d_msaa_t
__write_only image2d_array_depth_t
__write_only image2d_depth_t
__write_only image2d_array_t
__write_only image2d_t
__write_only image1d_buffer_t
__write_only image1d_array_t
__write_only image1d_t
__read_only image3d_t
__read_only image2d_array_msaa_depth_t
__read_only image2d_msaa_depth_t
__read_only image2d_array_msaa_t
__read_only image2d_msaa_t
__read_only image2d_array_depth_t
__read_only image2d_depth_t
__read_only image2d_array_t
__read_only image2d_t
__read_only image1d_buffer_t
__read_only image1d_array_t
__read_only image1d_t
<builtin fn type>
<ARC unbridged cast type>
<dependent type>
<pseudo-object type>
<bound member function type>
<overloaded function type>
nullptr_t
long double
unsigned __int128
unsigned long long
unsigned long
long long
spir_function
opencl_kernel
NSCopying
 throw(
 noexcept
NULL TYPE
 __attribute__((ext_vector_type(
__attribute__((ns_consumed)) 
__attribute__((
 _Nonnull
 _Nullable
 _Null_unspecified
 __attribute__((
address_space(
__vector_size__(
 * sizeof(
neon_vector_type(
neon_polyvector_type(
regparm(
objc_gc(
objc_ownership(
autoreleasing
pcs(
"aapcs"
"aapcs-vfp"
inteloclbicc
 __attribute__((stdcall))
 __attribute__((fastcall))
 __attribute__((thiscall))
 __attribute__((vectorcall))
 __attribute__((pascal))
 __attribute__((pcs("aapcs")))
 __attribute__((pcs("aapcs-vfp")))
 __attribute__((intel_ocl_bicc))
 __attribute__((ms_abi))
 __attribute__((sysv_abi))
 __attribute__((regcall))
 __attribute__((swiftcall))
 __attribute__((preserve_most))
 __attribute__((preserve_all))
 __attribute__((noreturn))
 __attribute__((ns_returns_retained))
 __attribute__((regparm (
 __attribute__((no_caller_saved_registers))
_Complex 
__vector __pixel 
__vector __bool 
__vector 
__attribute__((neon_vector_type(
))) 
__attribute__((neon_polyvector_type(
__attribute__((__vector_size__(
)))) 
auto 
typeof 
typeof(
decltype(
__underlying_type(
__kindof 
 __ptr32
 __ptr64
 __sptr
 __uptr
decltype(auto)
read_only 
write_only 
pipe 
_Atomic(
type-parameter-
std::function<
anonymous
 at 
(anonymous namespace)::
__device
__shared
__attribute__((address_space(
Construction vtable for ('
) in '
Vtable for '
 entries).
%4d | 
vcall_offset (
vbase_offset (
offset_to_top (
 RTTI
 [pure]
 [deleted]
       [return adjustment: 
 non-virtual
 vbase offset offset
       [this adjustment: 
 vcall offset offset
() [complete]
() [deleting]
[unused] 
       -- (
) vtable address --
Virtual base offset offsets for '
 entry
 entries
Thunks for '
return adjustment: 
       
this adjustment: 
 [complete]
 [deleting]
VTable indices for '
%4llu | 
VFTable for 
' in 
() [scalar deleting]
Unexpected vftable component type %0 for component number %1
 [scalar deleting]
VFTable indices for 
 -- accessible via 
vbtable index 
vfptr at offset 
[return adjustment (to type '
'): 
vbptr at offset 
vbase #
 non-virtual]
[this adjustment: 
vtordisp at 
vbptr at 
 to the left,
 vboffset at 
 in the vbtable, 
*** HeaderSearch Stats:
%d files tracked.
  %d #import/#pragma once files.
  %d included exactly once.
  %d max times a file is included.
  %d #include/#include_next/#import.
    %d #includes skipped due to the multi-include optimization.
%d framework lookups.
%d subframework lookups.
.pcm
_Private
module.map
module.modulemap
Modules
.framework/
.system_framework
Frameworks/
PrivateHeaders/
<<<<
>>>>>>>
<<<<<<<
>>>> 
MacroInfo 
 builtin
 disabled
 used
 allow_redefinitions_without_warning
 warn_if_unused
 header_guard
    #define <macro>
DefMacroDirective
UndefMacroDirective
VisibilityMacroDirective
 prev 
 from_pch
 private
 public
Frameworks
Private
unwind.h
.tbd
.api
.spi
Darwin
module.private.modulemap
module_private.map
textual
exclude
mtime
excluded
IOKit
exhaustive
extern_c
no_undeclared_includes
swift_infer_import_as_member
config_macros
conflict
override
ndef
ndif
__autoreleasing
@import 
assert.h
iso646.h
errno.h
float.h
fenv.h
inttypes.h
stdalign.h
limits.h
locale.h
signal.h
stdarg.h
stddef.h
stdatomic.h
stdbool.h
stdint.h
stdnoreturn.h
tgmath.h
threads.h
time.h
cctype
uchar.h
cassert
wctype.h
ccomplex
ciso646
cerrno
cfloat
cfenv
cinttypes
cstdalign
climits
clocale
cmath
csetjmp
csignal
cstdarg
cstddef
cstdbool
cstdint
cstdio
cstdlib
cstring
ctgmath
ctime
regex
cuchar
cwchar
cwctype
fstream
algorithm
array
locale
scoped_allocator
tuple
future
type_traits
bitset
initializer_list
shared_mutex
typeindex
chrono
iomanip
mutex
sstream
typeinfo
codecvt
stack
unordered_map
complex
iosfwd
numeric
ostream
stdexcept
streambuf
unordered_set
condition_variable
iostream
utility
deque
istream
string
random
valarray
iterator
strstream
forward_list
limits
system_error
aio.h
ftw.h
arpa/inet.h
cpio.h
glob.h
dirent.h
fmtmsg.h
dlfcn.h
fcntl.h
iconv.h
libgen.h
fnmatch.h
grp.h
langinfo.h
monetary.h
mqueue.h
ndbm.h
net/if.h
netdb.h
netinet/in.h
netinet/tcp.h
nl_types.h
poll.h
pthread.h
pwd.h
regex.h
sched.h
search.h
semaphore.h
spawn.h
stropts.h
sys/ipc.h
sys/mman.h
sys/msg.h
sys/resource.h
sys/select.h
sys/sem.h
sys/shm.h
sys/socket.h
sys/stat.h
sys/statvfs.h
sys/time.h
sys/times.h
sys/types.h
sys/uio.h
termios.h
sys/un.h
sys/utsname.h
sys/wait.h
syslog.h
ulimit.h
tar.h
wordexp.h
trace.h
utime.h
utmpx.h
'defined'
.hpp
MacroState 
 ambiguous
 overrides
 ModuleMacro 
 undef
 active
 hidden
 overridden
__LINE__
__FILE__
__DATE__
__TIME__
__COUNTER__
_Pragma
__has_cpp_attribute
__BASE_FILE__
__INCLUDE_LEVEL__
__TIMESTAMP__
__identifier
__pragma
__has_feature
__has_extension
__has_builtin
__has_attribute
__has_declspec_attribute
__has_include
__has_include_next
__has_warning
__is_identifier
__is_target_arch
__is_target_vendor
__is_target_os
__is_target_environment
__building_module
__MODULE__
??? ??? ?? ??:??:?? ????
unknown-unknown-
'__has_warning'
__make_integer_seq
__type_pack_element
c_alignas
c_alignof
c_atomic
c_generic_selections
c_static_assert
c_thread_local
cxx_atomic
cxx_deleted_functions
cxx_explicit_conversions
cxx_inline_namespaces
cxx_local_type_template_args
cxx_nonstatic_member_init
cxx_override_control
cxx_range_for
cxx_reference_qualified_functions
cxx_rvalue_references
cxx_variadic_templates
cxx_binary_literals
cxx_init_captures
cxx_variable_templates
overloadable_unmarked
address_sanitizer
attribute_analyzer_noreturn
attribute_availability
attribute_availability_with_message
attribute_availability_app_extension
attribute_availability_with_version_underscores
attribute_availability_tvos
attribute_availability_watchos
attribute_availability_bridgeos
attribute_availability_swift
attribute_availability_with_strict
attribute_availability_with_replacement
attribute_availability_in_templates
attribute_cf_returns_not_retained
attribute_cf_returns_retained
attribute_cf_returns_on_parameters
attribute_deprecated_with_message
attribute_deprecated_with_replacement
attribute_ext_vector_type
attribute_ns_returns_not_retained
attribute_ns_returns_retained
attribute_ns_consumes_self
attribute_ns_consumed
attribute_cf_consumed
attribute_objc_ivar_unused
attribute_objc_method_family
attribute_overloadable
attribute_unavailable_with_message
attribute_unused_on_fields
attribute_diagnose_if_objc
c_thread_safety_attributes
cxx_exceptions
cxx_rtti
enumerator_attributes
generalized_swift_name
nullability_on_arrays
memory_sanitizer
thread_sanitizer
dataflow_sanitizer
efficiency_sanitizer
objc_arr
objc_arc_weak
objc_default_synthesize_properties
objc_fixed_enum
objc_instancetype
objc_kindof
objc_modules
objc_nonfragile_abi
objc_property_explicit_atomic
objc_protocol_qualifier_mangling
objc_weak_class
objc_bool
objc_subscripting
objc_array_literals
objc_dictionary_literals
objc_boxed_expressions
objc_boxed_nsvalue_expressions
objc_bridge_id
objc_bridge_id_on_typedefs
objc_generics
objc_generics_variance
objc_class_property
cxx_access_control_sfinae
cxx_alias_templates
cxx_alignas
cxx_alignof
cxx_attributes
cxx_auto_type
cxx_constexpr
cxx_constexpr_string_builtins
cxx_decltype
cxx_decltype_incomplete_return_types
cxx_default_function_template_args
cxx_defaulted_functions
cxx_delegating_constructors
cxx_generalized_initializers
cxx_implicit_moves
cxx_inheriting_constructors
cxx_lambdas
cxx_noexcept
cxx_nullptr
cxx_raw_string_literals
cxx_strong_enums
cxx_static_assert
cxx_thread_local
cxx_trailing_return
cxx_unicode_literals
cxx_unrestricted_unions
cxx_user_literals
cxx_aggregate_nsdmi
cxx_contextual_conversions
cxx_decltype_auto
cxx_generic_lambdas
cxx_relaxed_constexpr
cxx_return_type_deduction
has_nothrow_assign
has_nothrow_copy
has_nothrow_constructor
has_trivial_assign
has_trivial_copy
has_trivial_constructor
has_trivial_destructor
has_virtual_destructor
is_abstract
is_base_of
is_class
is_constructible
is_convertible_to
is_empty
is_enum
is_final
is_literal
is_standard_layout
is_pod
is_polymorphic
is_sealed
is_trivial
is_trivially_assignable
is_trivially_constructible
is_trivially_copyable
is_union
modules
safe_stack
underlying_type
"%s %2d %4d"
"%02d:%02d:%02d"
cfe-pth
PTH file uses an older PTH format that is no longer supported
PTH file contains no cached source data
Could not allocate memory for processing PTH file
endbuild
DEFAULT
push_macro
pop_macro
message
poison
system_header
dependency
diagnostic
__debug
arc_cf_code_audited
assume_nonnull
FENV_ACCESS
STDC
CX_LIMITED_RANGE
include_alias
region
endregion
disable
once
pragma warning
parser_crash
dump
llvm_fatal_error
#pragma clang __debug llvm_fatal_error
macro
overflow_stack
handle_crash
captured
pragma clang __debug captured
ignored
fatal
pragma diagnostic
pragma message
pragma error
pragma once
__VA_ARGS__
GetExceptionInformation
GetExceptionCode
AbnormalTermination
*** Preprocessor Stats:
 directives found:
 #define.
 #undef.
  #include/#include_next/#import:
    
 source files entered.
 max include stack depth
 #if/#ifndef/#ifdef.
 #else/#elif.
 #endif.
 #pragma.
 #if/#ifndef#ifdef regions skipped
 obj/fn/builtin macros expanded, 
 on the fast path.
 token paste (##) operations performed, 
Preprocessor Memory: 
B total
  BumpPtr: 
  Macro Expanded Tokens: 
  Predefines Buffer: 
  Macros: 
  #pragma push_macro Info: 
  Poison Reasons: 
  Comment Handlers: 
Loading API notes from 
_private
APINotes
_private.
Headers
PrivateHeaders
.framework
APINotes.
CONTROL_BLOCK
MODULE_NAME
IDENTIFIER_BLOCK
IDENTIFIER_DATA
OBJC_CONTEXT_BLOCK
OBJC_CONTEXT_ID_DATA
OBJC_PROPERTY_BLOCK
OBJC_PROPERTY_DATA
OBJC_METHOD_BLOCK
OBJC_METHOD_DATA
OBJC_SELECTOR_BLOCK
OBJC_SELECTOR_DATA
GLOBAL_VARIABLE_BLOCK
GLOBAL_VARIABLE_DATA
GLOBAL_FUNCTION_BLOCK
GLOBAL_FUNCTION_DATA
AvailabilityMsg
SwiftInferImportAsMember
SwiftVersions
Version
not a version number in the form XX.YY
Classes
Protocols
Functions
Nullability
NullabilityOfRet
RetainCountConvention
SwiftPrivate
SwiftName
ResultType
Globals
Enumerators
Tags
SwiftBridge
NSErrorDomain
EnumExtensibility
FlagEnum
EnumKind
CFEnum
NSEnum
CFOptions
NSOptions
CFClosedEnum
NSClosedEnum
Typedefs
SwiftWrapper
closed
CFReturnsRetained
CFReturnsNotRetained
NSReturnsRetained
NSReturnsNotRetained
Parameters
Position
NoEscape
AuditedForNullability
SwiftImportAsNonGeneric
SwiftObjCMembers
Methods
Selector
MethodKind
Instance
FactoryAsInit
DesignatedInit
Properties
PropertyKind
SwiftImportAsAccessors
Availability
TVOS
WatchOS
BridgeOS
nonswift
multiple definitions of class '
multiple definitions of protocol '
multiple definitions of global variable '
multiple definitions of global function '
multiple definitions of enumerator '
multiple definitions Of tag '
cannot mix EnumKind and EnumExtensibility (for 
cannot mix EnumKind and FlagEnum (for 
multiple definitions of typedef '
nullability info for 
 does not fit
availability message for available API '
' will not be used
duplicate definition of method '
selector 
is missing a ':' at the end
'FactoryAsInit' is no longer valid; use 'SwiftName' instead
duplicate definition of instance property '
duplicate definition of class property '
amdgpu_flat_work_group_size
amdgpu_num_sgpr
amdgpu_num_vgpr
amdgpu_waves_per_eu
abi_tag
acquire_capability
acquire_shared_capability
exclusive_lock_function
shared_lock_function
acquired_after
acquired_before
address_space
align_value
alloc_align
alloc_size
always_inline
analyzer_noreturn
annotate
no_caller_saved_registers
objc_arc_weak_reference_unavailable
argument_with_type_tag
pointer_with_type_tag
assert_capability
assert_shared_capability
assert_exclusive_lock
assert_shared_lock
assume_aligned
availability
bounded
cf_audited_transfer
cf_consumed
cf_returns_not_retained
cf_returns_retained
cf_unknown_transfer
cudart_builtin
device_builtin
device_builtin_surface_type
device_builtin_texture_type
host
launch_bounds
callable_when
capability
shared_capability
carries_dependency
constructor
consumable
consumable_auto_cast_state
consumable_set_state_on_read
deprecated
destructor
diagnose_if
disable_tail_calls
enable_if
enum_extensibility
exclusive_trylock_function
ext_vector_type
external_source_symbol
flag_enum
format
format_arg
gnu_inline
guarded_by
guarded_var
ibaction
iboutlet
iboutletcollection
init_priority
internal_linkage
lock_returned
lockable
locks_excluded
ms_abi
ms_struct
may_alias
mode
ns_consumed
ns_consumes_self
ns_error_domain
ns_returns_autoreleased
ns_returns_not_retained
ns_returns_retained
neon_polyvector_type
neon_vector_type
nocommon
nodebug
noescape
no_instrument_function
nomicromips
nomips16
no_sanitize
no_address_safety_analysis
no_sanitize_address
no_sanitize_thread
no_sanitize_memory
no_split_stack
no_thread_safety_analysis
nothrow
not_tail_called
nv_weak
objc_boxable
objc_bridge
objc_bridge_mutable
objc_bridge_related
objc_complete_definition
objc_designated_initializer
objc_exception
objc_protocol_requires_explicit_implementation
objc_gc
objc_independent_class
objc_method_family
NSObject
objc_ownership
objc_precise_lifetime
objc_requires_property_definitions
objc_requires_super
objc_returns_inner_pointer
objc_root_class
objc_runtime_name
objc_runtime_visible
objc_subclassing_restricted
intel_reqd_sub_group_size
nosvm
opencl_unroll_hint
overloadable
ownership_holds
ownership_returns
ownership_takes
packed
param_typestate
pass_object_size
preserve_all
preserve_most
pt_guarded_by
pt_guarded_var
pure
regcall
regparm
release_capability
release_shared_capability
release_generic_capability
unlock_function
reqd_work_group_size
require_constant_initialization
requires_capability
exclusive_locks_required
requires_shared_capability
shared_locks_required
return_typestate
returns_nonnull
scoped_lockable
selectany
sentinel
set_typestate
shared_trylock_function
swift_bridge
swiftcall
swift_context
swift_error
swift_error_result
swift_indirect_result
swift_name
swift_newtype
swift_wrapper
swift_objc_members
swift_private
sysv_abi
tls_model
test_typestate
transparent_union
try_acquire_capability
try_acquire_shared_capability
type_tag_for_datatype
type_visibility
unavailable
unused
used
vecreturn
vec_type_hint
vectorcall
vector_size
visibility
warn_unused
warn_unused_result
weak_import
weakref
work_group_size_hint
force_align_arg_pointer
xray_log_args
__constant__
__cudart_builtin__
__device__
__device_builtin__
__device_builtin_surface_type__
__device_builtin_texture_type__
__global__
__host__
__launch_bounds__
__shared__
empty_bases
layout_version
novtable
allocate
uuid
init_seg
loop
unroll
nounroll
fallthrough
maybe_unused
nodiscard
lto_visibility_public
enum_constant
field
function(is_member)
objc_category
objc_interface
objc_method
objc_method(is_instance)
objc_property
objc_protocol
record(unless(is_union))
hasType
hasType(functionType)
type_alias
variable
variable(is_thread_local)
variable(is_global)
variable(is_parameter)
variable(unless(is_parameter))
not a builtin function
__builtin_atan2
__builtin_atan2f
__builtin_atan2l
LdLdLd
__builtin_abs
__builtin_copysign
__builtin_copysignf
__builtin_copysignl
__builtin_fabs
__builtin_fabsf
__builtin_fabsl
LdLd
__builtin_fmod
__builtin_fmodf
__builtin_fmodl
__builtin_frexp
ddi*
__builtin_frexpf
ffi*
__builtin_frexpl
LdLdi*
__builtin_huge_val
__builtin_huge_valf
__builtin_huge_vall
__builtin_inf
__builtin_inff
__builtin_infl
__builtin_labs
LiLi
__builtin_llabs
__builtin_ldexp
__builtin_ldexpf
__builtin_ldexpl
LdLdi
__builtin_modf
ddd*
__builtin_modff
fff*
__builtin_modfl
LdLdLd*
__builtin_nan
dcC*
__builtin_nanf
fcC*
__builtin_nanl
LdcC*
__builtin_nans
__builtin_nansf
__builtin_nansl
__builtin_powi
__builtin_powif
__builtin_powil
__builtin_pow
__builtin_powf
__builtin_powl
__builtin_acos
__builtin_acosf
__builtin_acosl
__builtin_acosh
__builtin_acoshf
__builtin_acoshl
__builtin_asin
__builtin_asinf
__builtin_asinl
__builtin_asinh
__builtin_asinhf
__builtin_asinhl
__builtin_atan
__builtin_atanf
__builtin_atanl
__builtin_atanh
__builtin_atanhf
__builtin_atanhl
__builtin_cbrt
__builtin_cbrtf
__builtin_cbrtl
__builtin_ceil
__builtin_ceilf
__builtin_ceill
__builtin_cos
__builtin_cosf
__builtin_cosh
__builtin_coshf
__builtin_coshl
__builtin_cosl
__builtin_erf
__builtin_erff
__builtin_erfl
__builtin_erfc
__builtin_erfcf
__builtin_erfcl
__builtin_exp
__builtin_expf
__builtin_expl
__builtin_exp2
__builtin_exp2f
__builtin_exp2l
__builtin_expm1
__builtin_expm1f
__builtin_expm1l
__builtin_fdim
__builtin_fdimf
__builtin_fdiml
__builtin_floor
__builtin_floorf
__builtin_floorl
__builtin_fma
__builtin_fmaf
__builtin_fmal
LdLdLdLd
__builtin_fmax
__builtin_fmaxf
__builtin_fmaxl
__builtin_fmin
__builtin_fminf
__builtin_fminl
__builtin_hypot
__builtin_hypotf
__builtin_hypotl
__builtin_ilogb
__builtin_ilogbf
__builtin_ilogbl
__builtin_lgamma
__builtin_lgammaf
__builtin_lgammal
__builtin_llrint
__builtin_llrintf
__builtin_llrintl
LLiLd
__builtin_llround
__builtin_llroundf
__builtin_llroundl
__builtin_log
__builtin_log10
__builtin_log10f
__builtin_log10l
__builtin_log1p
__builtin_log1pf
__builtin_log1pl
__builtin_log2
__builtin_log2f
__builtin_log2l
__builtin_logb
__builtin_logbf
__builtin_logbl
__builtin_logf
__builtin_logl
__builtin_lrint
__builtin_lrintf
__builtin_lrintl
LiLd
__builtin_lround
__builtin_lroundf
__builtin_lroundl
__builtin_nearbyint
__builtin_nearbyintf
__builtin_nearbyintl
__builtin_nextafter
__builtin_nextafterf
__builtin_nextafterl
__builtin_nexttoward
ddLd
__builtin_nexttowardf
ffLd
__builtin_nexttowardl
__builtin_remainder
__builtin_remainderf
__builtin_remainderl
__builtin_remquo
dddi*
__builtin_remquof
fffi*
__builtin_remquol
LdLdLdi*
__builtin_rint
__builtin_rintf
__builtin_rintl
__builtin_round
__builtin_roundf
__builtin_roundl
__builtin_scalbln
ddLi
__builtin_scalblnf
ffLi
__builtin_scalblnl
LdLdLi
__builtin_scalbn
__builtin_scalbnf
__builtin_scalbnl
__builtin_sin
__builtin_sinf
__builtin_sinh
__builtin_sinhf
__builtin_sinhl
__builtin_sinl
__builtin_sqrt
__builtin_sqrtf
__builtin_sqrtl
__builtin_tan
__builtin_tanf
__builtin_tanh
__builtin_tanhf
__builtin_tanhl
__builtin_tanl
__builtin_tgamma
__builtin_tgammaf
__builtin_tgammal
__builtin_trunc
__builtin_truncf
__builtin_truncl
__builtin_cabs
__builtin_cabsf
__builtin_cabsl
LdXLd
__builtin_cacos
XdXd
__builtin_cacosf
XfXf
__builtin_cacosh
__builtin_cacoshf
__builtin_cacoshl
XLdXLd
__builtin_cacosl
__builtin_carg
__builtin_cargf
__builtin_cargl
__builtin_casin
__builtin_casinf
__builtin_casinh
__builtin_casinhf
__builtin_casinhl
__builtin_casinl
__builtin_catan
__builtin_catanf
__builtin_catanh
__builtin_catanhf
__builtin_catanhl
__builtin_catanl
__builtin_ccos
__builtin_ccosf
__builtin_ccosl
__builtin_ccosh
__builtin_ccoshf
__builtin_ccoshl
__builtin_cexp
__builtin_cexpf
__builtin_cexpl
__builtin_cimag
__builtin_cimagf
__builtin_cimagl
__builtin_conj
__builtin_conjf
__builtin_conjl
__builtin_clog
__builtin_clogf
__builtin_clogl
__builtin_cproj
__builtin_cprojf
__builtin_cprojl
__builtin_cpow
XdXdXd
__builtin_cpowf
XfXfXf
__builtin_cpowl
XLdXLdXLd
__builtin_creal
__builtin_crealf
__builtin_creall
__builtin_csin
__builtin_csinf
__builtin_csinl
__builtin_csinh
__builtin_csinhf
__builtin_csinhl
__builtin_csqrt
__builtin_csqrtf
__builtin_csqrtl
__builtin_ctan
__builtin_ctanf
__builtin_ctanl
__builtin_ctanh
__builtin_ctanhf
__builtin_ctanhl
__builtin_isgreater
__builtin_isgreaterequal
__builtin_isless
__builtin_islessequal
__builtin_islessgreater
__builtin_isunordered
__builtin_fpclassify
iiiiii.
__builtin_isfinite
__builtin_isinf
__builtin_isinf_sign
__builtin_isnan
__builtin_isnormal
__builtin_signbit
__builtin_signbitf
__builtin_signbitl
__builtin_canonicalize
__builtin_canonicalizef
__builtin_canonicalizel
__builtin_clzs
__builtin_clz
__builtin_clzl
iULi
__builtin_clzll
iULLi
__builtin_ctzs
__builtin_ctz
__builtin_ctzl
__builtin_ctzll
__builtin_ffs
__builtin_ffsl
__builtin_ffsll
__builtin_parity
__builtin_parityl
__builtin_parityll
__builtin_popcount
__builtin_popcountl
__builtin_popcountll
__builtin_bswap16
__builtin_bswap32
__builtin_bswap64
ULLiULLi
__builtin_bitreverse8
UcUc
__builtin_bitreverse16
__builtin_bitreverse32
__builtin_bitreverse64
__builtin_constant_p
nctu
__builtin_classify_type
__builtin___CFStringMakeConstantString
FC*cC*
__builtin___NSStringMakeConstantString
__builtin_va_start
__builtin_va_end
__builtin_va_copy
__builtin_stdarg_start
__builtin_assume_aligned
v*vC*z.
__builtin_bcmp
iv*v*z
__builtin_bcopy
vv*v*z
__builtin_bzero
vv*z
__builtin_fprintf
iP*cC*.
Fp:1:
__builtin_memchr
v*vC*iz
__builtin_memcmp
ivC*vC*z
__builtin_memcpy
v*v*vC*z
__builtin_memmove
__builtin_mempcpy
__builtin_memset
v*v*iz
__builtin_printf
icC*.
Fp:0:
__builtin_stpcpy
c*c*cC*
__builtin_stpncpy
c*c*cC*z
__builtin_strcasecmp
icC*cC*
__builtin_strcat
__builtin_strchr
c*cC*i
__builtin_strcmp
__builtin_strcpy
__builtin_strcspn
zcC*cC*
__builtin_strdup
c*cC*
__builtin_strlen
zcC*
__builtin_strncasecmp
icC*cC*z
__builtin_strncat
__builtin_strncmp
__builtin_strncpy
__builtin_strndup
c*cC*z
__builtin_strpbrk
c*cC*cC*
__builtin_strrchr
__builtin_strspn
__builtin_strstr
__builtin_wcschr
w*wC*w
__builtin_wcscmp
iwC*wC*
__builtin_wcslen
zwC*
__builtin_wcsncmp
iwC*wC*z
__builtin_wmemchr
w*wC*wz
__builtin_wmemcmp
__builtin_return_address
v*IUi
__builtin_extract_return_addr
v*v*
__builtin_frame_address
__builtin___clear_cache
vc*c*
__builtin_flt_rounds
__builtin_setjmp
iv**
__builtin_longjmp
vv**i
__builtin_unwind_init
__builtin_eh_return_data_regno
__builtin_snprintf
ic*zcC*.
nFp:2:
__builtin_vsprintf
ic*cC*a
nFP:1:
__builtin_vsnprintf
ic*zcC*a
nFP:2:
__builtin_thread_pointer
__builtin_eh_return
vzv*
__builtin_frob_return_addr
__builtin_dwarf_cfa
__builtin_init_dwarf_reg_size_table
__builtin_dwarf_sp_column
__builtin_extend_pointer
ULLiv*
__builtin_object_size
zvC*i
__builtin___memcpy_chk
v*v*vC*zz
__builtin___memccpy_chk
v*v*vC*izz
__builtin___memmove_chk
__builtin___mempcpy_chk
__builtin___memset_chk
v*v*izz
__builtin___stpcpy_chk
__builtin___strcat_chk
__builtin___strcpy_chk
__builtin___strlcat_chk
zc*cC*zz
__builtin___strlcpy_chk
__builtin___strncat_chk
c*c*cC*zz
__builtin___strncpy_chk
__builtin___stpncpy_chk
__builtin___snprintf_chk
ic*zizcC*.
Fp:4:
__builtin___sprintf_chk
ic*izcC*.
Fp:3:
__builtin___vsnprintf_chk
ic*zizcC*a
FP:4:
__builtin___vsprintf_chk
ic*izcC*a
FP:3:
__builtin___fprintf_chk
iP*icC*.
Fp:2:
__builtin___printf_chk
iicC*.
__builtin___vfprintf_chk
iP*icC*a
FP:2:
__builtin___vprintf_chk
iicC*a
FP:1:
__builtin_unpredictable
__builtin_expect
LiLiLi
__builtin_prefetch
vvC*.
__builtin_readcyclecounter
__builtin_trap
__builtin_debugtrap
__builtin_unreachable
__builtin_shufflevector
__builtin_alloca
__builtin_alloca_with_align
v*zIz
__builtin_call_with_static_chain
__sync_fetch_and_add
__sync_fetch_and_add_1
ccD*c.
__sync_fetch_and_add_2
ssD*s.
__sync_fetch_and_add_4
iiD*i.
__sync_fetch_and_add_8
LLiLLiD*LLi.
__sync_fetch_and_add_16
LLLiLLLiD*LLLi.
__sync_fetch_and_sub
__sync_fetch_and_sub_1
__sync_fetch_and_sub_2
__sync_fetch_and_sub_4
__sync_fetch_and_sub_8
__sync_fetch_and_sub_16
__sync_fetch_and_or
__sync_fetch_and_or_1
__sync_fetch_and_or_2
__sync_fetch_and_or_4
__sync_fetch_and_or_8
__sync_fetch_and_or_16
__sync_fetch_and_and
__sync_fetch_and_and_1
__sync_fetch_and_and_2
__sync_fetch_and_and_4
__sync_fetch_and_and_8
__sync_fetch_and_and_16
__sync_fetch_and_xor
__sync_fetch_and_xor_1
__sync_fetch_and_xor_2
__sync_fetch_and_xor_4
__sync_fetch_and_xor_8
__sync_fetch_and_xor_16
__sync_fetch_and_nand
__sync_fetch_and_nand_1
__sync_fetch_and_nand_2
__sync_fetch_and_nand_4
__sync_fetch_and_nand_8
__sync_fetch_and_nand_16
__sync_add_and_fetch
__sync_add_and_fetch_1
__sync_add_and_fetch_2
__sync_add_and_fetch_4
__sync_add_and_fetch_8
__sync_add_and_fetch_16
__sync_sub_and_fetch
__sync_sub_and_fetch_1
__sync_sub_and_fetch_2
__sync_sub_and_fetch_4
__sync_sub_and_fetch_8
__sync_sub_and_fetch_16
__sync_or_and_fetch
__sync_or_and_fetch_1
__sync_or_and_fetch_2
__sync_or_and_fetch_4
__sync_or_and_fetch_8
__sync_or_and_fetch_16
__sync_and_and_fetch
__sync_and_and_fetch_1
__sync_and_and_fetch_2
__sync_and_and_fetch_4
__sync_and_and_fetch_8
__sync_and_and_fetch_16
__sync_xor_and_fetch
__sync_xor_and_fetch_1
__sync_xor_and_fetch_2
__sync_xor_and_fetch_4
__sync_xor_and_fetch_8
__sync_xor_and_fetch_16
__sync_nand_and_fetch
__sync_nand_and_fetch_1
__sync_nand_and_fetch_2
__sync_nand_and_fetch_4
__sync_nand_and_fetch_8
__sync_nand_and_fetch_16
__sync_bool_compare_and_swap
__sync_bool_compare_and_swap_1
bcD*cc.
__sync_bool_compare_and_swap_2
bsD*ss.
__sync_bool_compare_and_swap_4
biD*ii.
__sync_bool_compare_and_swap_8
bLLiD*LLiLLi.
__sync_bool_compare_and_swap_16
bLLLiD*LLLiLLLi.
__sync_val_compare_and_swap
__sync_val_compare_and_swap_1
ccD*cc.
__sync_val_compare_and_swap_2
ssD*ss.
__sync_val_compare_and_swap_4
iiD*ii.
__sync_val_compare_and_swap_8
LLiLLiD*LLiLLi.
__sync_val_compare_and_swap_16
LLLiLLLiD*LLLiLLLi.
__sync_lock_test_and_set
__sync_lock_test_and_set_1
__sync_lock_test_and_set_2
__sync_lock_test_and_set_4
__sync_lock_test_and_set_8
__sync_lock_test_and_set_16
__sync_lock_release
__sync_lock_release_1
vcD*.
__sync_lock_release_2
vsD*.
__sync_lock_release_4
viD*.
__sync_lock_release_8
vLLiD*.
__sync_lock_release_16
vLLLiD*.
__sync_swap
__sync_swap_1
__sync_swap_2
__sync_swap_4
__sync_swap_8
__sync_swap_16
__c11_atomic_init
__c11_atomic_load
__c11_atomic_store
__c11_atomic_exchange
__c11_atomic_compare_exchange_strong
__c11_atomic_compare_exchange_weak
__c11_atomic_fetch_add
__c11_atomic_fetch_sub
__c11_atomic_fetch_and
__c11_atomic_fetch_or
__c11_atomic_fetch_xor
__c11_atomic_thread_fence
__c11_atomic_signal_fence
__c11_atomic_is_lock_free
__atomic_load
__atomic_load_n
__atomic_store
__atomic_store_n
__atomic_exchange
__atomic_exchange_n
__atomic_compare_exchange
__atomic_compare_exchange_n
__atomic_fetch_add
__atomic_fetch_sub
__atomic_fetch_and
__atomic_fetch_or
__atomic_fetch_xor
__atomic_fetch_nand
__atomic_add_fetch
__atomic_sub_fetch
__atomic_and_fetch
__atomic_or_fetch
__atomic_xor_fetch
__atomic_nand_fetch
__atomic_test_and_set
bvD*i
__atomic_clear
__atomic_thread_fence
__atomic_signal_fence
__atomic_always_lock_free
izvCD*
__atomic_is_lock_free
__sync_synchronize
__sync_fetch_and_min
__sync_fetch_and_max
__sync_fetch_and_umin
__sync_fetch_and_umax
__builtin_abort
__builtin_index
__builtin_rindex
_alloca
__assume
_byteswap_ushort
stdlib.h
_byteswap_ulong
_byteswap_uint64
__debugbreak
__exception_code
_exception_code
__exception_info
_exception_info
__abnormal_termination
_abnormal_termination
__GetExceptionInfo
_InterlockedAnd8
ccD*c
_InterlockedAnd16
ssD*s
_InterlockedAnd
NiNiD*Ni
_InterlockedCompareExchange8
ccD*cc
_InterlockedCompareExchange16
ssD*ss
_InterlockedCompareExchange
NiNiD*NiNi
_InterlockedCompareExchange64
_InterlockedCompareExchangePointer
v*v*D*v*v*
_InterlockedDecrement16
ssD*
_InterlockedDecrement
NiNiD*
_InterlockedExchange
_InterlockedExchange8
_InterlockedExchange16
_InterlockedExchangeAdd8
_InterlockedExchangeAdd16
_InterlockedExchangeAdd
_InterlockedExchangePointer
v*v*D*v*
_InterlockedExchangeSub8
_InterlockedExchangeSub16
_InterlockedExchangeSub
_InterlockedIncrement16
_InterlockedIncrement
_InterlockedOr8
_InterlockedOr16
_InterlockedOr
_InterlockedXor8
_InterlockedXor16
_InterlockedXor
_interlockedbittestandset
UcNiD*Ni
__noop
__popcnt16
__popcnt
__popcnt64
_ReturnAddress
_rotl8
UcUcUc
_rotl16
UsUsUc
_rotl
UiUii
_lrotl
UNiUNii
_rotl64
ULLiULLii
_rotr8
_rotr16
_rotr
_lrotr
_rotr64
__va_start
vc**.
__fastfail
_setjmpex
setjmpex.h
abort
v*zz
_Exit
v*v*z
string.h
zc*cC*z
strerror
fp:0:
stdio.h
fp:1:
fp:2:
ic*cC*.
icC*a
fP:0:
iP*cC*a
fP:1:
fP:2:
icC*R.
fs:0:
iP*RcC*R.
fs:1:
icC*RcC*R.
icC*Ra
fS:0:
iP*RcC*Ra
fS:1:
icC*RcC*Ra
isalnum
ctype.h
isalpha
isblank
iscntrl
isgraph
islower
isprint
ispunct
isspace
isupper
isxdigit
tolower
toupper
wcschr
wchar.h
wcscmp
wcsncmp
wmemchr
wmemcmp
setjmp
setjmp.h
longjmp
strings.h
rindex
_exit
unistd.h
vfork
_setjmp
__sigsetjmp
iSJi
sigsetjmp
setjmp_syscall
savectx
qsetjmp
getcontext
_longjmp
siglongjmp
vSJi
strlcpy
strlcat
objc_msgSend
GGH.
objc/message.h
objc_msgSend_fpret
LdGH.
objc_msgSend_fp2ret
XLdGH.
objc_msgSend_stret
vGH.
objc_msgSendSuper
GM*H.
objc_msgSendSuper_stret
vM*H.
objc_getClass
GcC*
objc/runtime.h
objc_getMetaClass
objc_enumerationMutation
objc_read_weak
objc/objc-auto.h
objc_assign_weak
GGG*
objc_assign_ivar
GGGY
objc_assign_global
objc_assign_strongCast
objc_exception_extract
objc/objc-exception.h
objc_exception_try_enter
objc_exception_try_exit
objc_exception_match
objc_exception_throw
objc/objc-sync.h
__builtin_objc_memmove_collectable
NSLog
Foundation/NSObjCRuntime.h
NSLogv
math.h
finite
finitef
finitel
__finite
__finitef
__finitel
nanf
nanl
erff
erfl
erfc
erfcf
erfcl
fdim
fdimf
fdiml
fmaf
fmal
hypot
hypotf
hypotl
ilogb
ilogbf
ilogbl
lgamma
lgammaf
lgammal
llrint
llrintf
llrintl
llround
llroundf
llroundl
lrint
lrintf
lrintl
lround
lroundf
lroundl
nextafter
nextafterf
nextafterl
nexttoward
nexttowardf
nexttowardl
remainder
remainderf
remainderl
scalbln
scalblnf
scalblnl
scalbn
scalbnf
scalbnl
tgamma
tgammaf
tgammal
cabs
complex.h
cabsf
cabsl
cacos
cacosf
cacosl
cacosh
cacoshf
cacoshl
carg
cargf
cargl
casin
casinf
casinl
casinh
casinhf
casinhl
catan
catanf
catanl
catanh
catanhf
catanhl
ccos
ccosf
ccosl
ccosh
ccoshf
ccoshl
cexp
cexpf
cexpl
cimag
cimagf
cimagl
conj
conjf
conjl
clog
clogf
clogl
cproj
cprojf
cprojl
cpow
cpowf
cpowl
creal
crealf
creall
csin
csinf
csinl
csinh
csinhf
csinhl
csqrt
csqrtf
csqrtl
ctan
ctanf
ctanl
ctanh
ctanhf
ctanhl
__tanpi
__tanpif
_Block_object_assign
vv*vC*iC
Blocks.h
_Block_object_dispose
vvC*iC
__builtin_annotation
__builtin_assume
__builtin_addcb
UcUcCUcCUcCUc*
__builtin_addcs
UsUsCUsCUsCUs*
__builtin_addc
UiUiCUiCUiCUi*
__builtin_addcl
ULiULiCULiCULiCULi*
__builtin_addcll
ULLiULLiCULLiCULLiCULLi*
__builtin_subcb
__builtin_subcs
__builtin_subc
__builtin_subcl
__builtin_subcll
__builtin_add_overflow
__builtin_sub_overflow
__builtin_mul_overflow
__builtin_uadd_overflow
bUiCUiCUi*
__builtin_uaddl_overflow
bULiCULiCULi*
__builtin_uaddll_overflow
bULLiCULLiCULLi*
__builtin_usub_overflow
__builtin_usubl_overflow
__builtin_usubll_overflow
__builtin_umul_overflow
__builtin_umull_overflow
__builtin_umulll_overflow
__builtin_sadd_overflow
bSiCSiCSi*
__builtin_saddl_overflow
bSLiCSLiCSLi*
__builtin_saddll_overflow
bSLLiCSLLiCSLLi*
__builtin_ssub_overflow
__builtin_ssubl_overflow
__builtin_ssubll_overflow
__builtin_smul_overflow
__builtin_smull_overflow
__builtin_smulll_overflow
__builtin_addressof
v*v&
__builtin_operator_new
__builtin_operator_delete
__builtin_char_memchr
c*cC*iz
__builtin___get_unsafe_stack_start
__builtin___get_unsafe_stack_ptr
__builtin_nontemporal_store
__builtin_nontemporal_load
__builtin_coro_resume
__builtin_coro_destroy
__builtin_coro_done
__builtin_coro_promise
v*v*IiIb
__builtin_coro_size
__builtin_coro_frame
__builtin_coro_free
__builtin_coro_id
v*Iiv*v*v*
__builtin_coro_alloc
__builtin_coro_begin
__builtin_coro_end
bv*Ib
__builtin_coro_suspend
__builtin_coro_param
bv*v*
read_pipe
write_pipe
reserve_read_pipe
reserve_write_pipe
commit_write_pipe
commit_read_pipe
sub_group_reserve_read_pipe
sub_group_reserve_write_pipe
sub_group_commit_read_pipe
sub_group_commit_write_pipe
work_group_reserve_read_pipe
work_group_reserve_write_pipe
work_group_commit_read_pipe
work_group_commit_write_pipe
get_pipe_num_packets
get_pipe_max_packets
enqueue_kernel
get_kernel_work_group_size
get_kernel_preferred_work_group_size_multiple
to_global
to_local
to_private
__builtin_os_log_format_buffer_size
zcC*.
p:0:nut
__builtin_os_log_format
v*v*cC*.
p:0:nt
__xray_customevent
vcC*z
__builtin_ms_va_start
vc*&.
__builtin_ms_va_end
vc*&
__builtin_ms_va_copy
vc*&c*&
sm_20
sm_21
sm_30
sm_32
sm_35
sm_37
sm_50
sm_52
sm_53
sm_60
sm_61
sm_62
compute_20
compute_30
compute_32
compute_35
compute_37
compute_50
compute_52
compute_53
compute_60
compute_61
compute_62
'_Nonnull'
'nonnull'
'_Nullable'
'nullable'
'_Null_unspecified'
'null_unspecified'
<can't format argument>
diff
(null)
plural
ordinal
NSInvocation's %0 is not safe to be used with an object with ownership other than __unsafe_unretained
%0 attribute cannot be applied to types
cannot open file '%0': %1
only special member functions may be defaulted
only functions can have deleted definitions
enumeration cannot be a template
expected %0
expected %1 after %0
method name referenced in property setter attribute must end with ':'
expected %0 or %1
expected namespace name
expected string literal %select{in %1|for diagnostic message in static_assert|for optional message in 'availability' attribute|for %select{language|source container}1 name in 'external_source_symbol' attribute}0
file '%0' modified since it was first processed
integer literal is too large to be represented in any %select{signed |}0integer type
character literal with user-defined suffix cannot be used here
numeric literal with user-defined suffix cannot be used here
invalid storage class specifier in function declarator
string literal with user-defined suffix cannot be used here
module '%0' is needed but has not been provided, and implicit use of module files is disabled
build a shadowed submodule '%0'
cyclic dependency in module '%0': %1
no handler registered for module format '%0'
%select{|umbrella }0header '%1' not found
could not acquire lock file for module '%0': %1
timed out waiting to acquire lock file for module '%0'
could not build module '%0'
module '%0' not found
error in loading module '%0' from prebuilt module path
import of shadowed module '%0'
module '%0' %select{is incompatible with|requires}1 feature '%2'
[rewriter] %0
nullability specifier %0 conflicts with existing specifier %1
directive '#pragma omp %0' cannot contain more than one '%1' clause%select{| with '%3' name modifier| with 'source' dependence}2
option '%0' cannot be specified with '%1'
redefinition of parameter %0
%0 only allowed in __except block or filter expression
%0 only allowed in __except filter expression
%0 only allowed in __finally block
expected '__except' or '__finally' block
unknown target ABI '%0'
unknown target CPU '%0'
unknown FP unit '%0'
unknown target triple '%0', please use -triple or -arch
ABI '%0' is not supported on CPU '%1'
ABI '%0' is not supported for '%1'
execute only is not supported for the %0 sub-architecture
the '%0' unit is not supported with this instruction set
the %0 sub-architecture does not support unaligned accesses
unable to make temporary file: %0
unable to rename temporary '%0' to output file '%1': '%2'
%0 byte order mark detected in '%1', but encoding is not supported
'long long' is an extension when C99 mode is not enabled
'diagnose_if' is a clang extension
'enable_if' is a clang extension
'long long' is a C++11 extension
integer literal is too large to be represented in a signed integer type, interpreting as unsigned
integer literal is too large to be represented in type 'long' and is subject to undefined behavior under C++98, interpreting as 'unsigned long'; this literal will %select{have type 'long long'|be ill-formed}0 in C++11 onwards
variadic templates are a C++11 extension
too many errors emitted, stopping now
also found
%1 %0 is hidden by a non-type declaration of %0 here
declared here
previous case defined here
forward declaration of %0
subexpression not valid in a constant expression
to match this %0
one possibility
#pragma entered here
previous declaration is here
previous implicit declaration is here
previous use is here
definition of %0 is not complete until the closing '}'
[rewriter] call returns pointer to GC managed memory; it will become unmanaged in ARC
conflicting nullability specifier on parameter types, %0 conflicts with existing specifier %1
conflicting nullability specifier on return types, %0 conflicts with existing specifier %1
'long long' is incompatible with C++98
variadic templates are incompatible with C++98
redeclaration of method parameter %0
redefinition of method parameter %0
duplicate nullability specifier %0
integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C89; this literal will %select{have type 'long long'|be ill-formed}0 in C99 onwards
integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C++98; this literal will %select{have type 'long long'|be ill-formed}0 in C++11 onwards
analyzer-config option '%0' should contain only one '='
analyzer-config option '%0' has a key but no value
-fobjc-arc is not supported on platforms using the legacy runtime
-fobjc-arc is not supported on versions of OS X prior to 10.6
'%0' not supported, please use -iquote instead
invalid argument '%0' not allowed with '%1'
invalid argument '%0' only allowed with '%1'
-fembed-bitcode is not supported on versions of iOS prior to 6.0
unable to open CC_PRINT_OPTIONS file: %0
the clang compiler does not support '%0'
the clang compiler does not support '%0' for C++ on Darwin/i386
the clang compiler does not support '%0', %1
%0 command failed with exit code %1 (use -v to see invocation)
unable to execute command: %0
%0 command failed due to signal (use -v to see invocation)
compilation database '%0' could not be opened: %1
conflicting deployment targets, both '%0' and '%1' are present in environment
Unsupported CUDA gpu architecture: %0
unsupported use of NVPTX for host compilation.
GPU arch %1 requires CUDA version at least %3, but installation at %0 is %2. Use --cuda-path to specify a different CUDA install, or pass --no-cuda-version-check.
defsym must be of the form: sym=value: %0
Value is not an integer: %0
-emit-llvm cannot be used when linking
The option -fopenmp-targets must be used in conjunction with a -fopenmp option compatible with offloading, please use -fopenmp=libomp or -fopenmp=libiomp5.
failing because %select{environment variable 'FORCE_CLANG_DIAGNOSTICS_CRASH' is set|'-gen-reproducer' is used}0
invalid Xarch argument: '%0', cannot change driver behavior inside Xarch argument
invalid Xarch argument: '%0', options requiring arguments are unsupported
invalid arch name '%0'
invalid argument '%0' to -fdebug-prefix-map
invalid Darwin version number: %0
invalid output type '%0' for use with gcc tool
invalid integral value '%1' in '%0'
invalid deployment target for -stdlib=libc++ (requires %0 or later)
invalid linker name in argument '%0'
invalid float ABI '%0'
OpenMP target is invalid: '%0'
cannot use '%0' output with multiple -arch options
invalid PGO instrumentor in argument '%0'
invalid option '%0' not of the form <from-file>;<to-file>
invalid runtime library name in argument '%0'
invalid library name in argument '%0'
invalid thread model '%0' in '%1' for this target
invalid value '%1' in '%0'
invalid version number in '%0'
LTO requires -fuse-ld=lld
malformed sanitizer blacklist: '%0'
option '-MG' requires '-M' or '-MM'
argument to '%0' is missing (expected %1 value%s1)
option '-fmodules-validate-once-per-build-session' requires '-fbuild-session-timestamp=<seconds since Epoch>' or '-fbuild-session-file=<file>'
'%0': unable to use AST files with this tool
cannot find CUDA installation.  Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.
cannot find libdevice for %0. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.
no input files
'%0': unable to pass LLVM bit-code files to linker
'%0': unable to use module files with this tool
[no]neon is not accepted as modifier, please use [no]simd instead
no such file or directory: '%0'
The provided host compiler IR file '%0' is required to generate code for OpenMP target regions but cannot be found.
The target '%0' is not a supported OpenMP host target.
%0 in '%1'
cannot specify '%0%1' when compiling multiple source files
cannot specify -o when generating multiple output files
incorrect format for -preamble-bytes=N,END
ROPI is not compatible with c++
embedded and GOT-based position independence are incompatible
unable to remove file: %0
unknown argument: '%0'
language not recognized: '%0'
unknown or ill-formed Objective-C runtime '%0'
-E or -x required when input is from standard input
use /Tc or /Tp to set input type for standard input
%0 is not supported with -fembed-bitcode
unsupported value '%0' for -linker option
unsupported option '%0'
unsupported option '%0' for target '%1'
unsupported argument '%1' to option '%0'
unsupported runtime library '%0' for platform '%1'
unsupported use of internal gcc -Z option '%0'
there is no external assembler that can be used on this platform
-fobjc-weak is not supported on the current deployment target
-fobjc-weak is not supported in Objective-C garbage collection
the target architecture '%0' is not supported by the target '%1'
-ftest-module-file-extension argument '%0' is not of the required form 'blockname:major:minor:hashed:user info'
AddressSanitizer doesn't support linking with debug runtime libraries yet
diagnostic msg: %0
The last /TC or /TP option takes precedence over earlier instances
use '%0'%select{| or '%3'|, '%3', or '%4'|, '%3', '%4', or '%5'}2 for '%1' standard
Use '--' to treat subsequent arguments as filenames
-O4 is equivalent to -O3
ignoring -fapple-kext which is valid for C++ and Objective-C++ only
cannot compress debug sections (zlib not installed)
unknown platform, assuming -mfloat-abi=%0
argument '%0' is deprecated, use '%1' instead
libstdc++ is deprecated; move to libc++%select{ with a minimum deployment target of %1|}0
argument '%0' requires profile-guided optimization information
implicitly disabling vptr sanitizer because rtti wasn't enabled
joined argument expects additional value: '%0'
implicitly enabling rtti for exception handling
%0: '%1' input unused%select{ when '%3' is present|}2
%0: '%1' input unused in cpp mode
falling back to %0
unable to find a Visual Studio installation; try running Clang from a developer command prompt
the object size sanitizer has no effect at -O0, but is explicitly enabled: %0
The OpenMP offloading target '%0' is similar to target '%1' already specified - will be ignored.
optimization level '%0' is not supported; using '%1%2' instead
overriding '%0' option with '%1'
precompiled header '%0' was ignored because '%1' is not first '-include'
%0: previously preprocessed input%select{ unused when '%2' is present|}1
option '%0' was ignored by the PS4 toolchain, using '-fPIC'
environment variable SCE_ORBIS_SDK_DIR is set, but points to invalid or nonexistent directory '%0'
treating '%0' input as '%1' when in C++ mode, this behavior is deprecated
unable to find %0 directory, expected to be in '%1'
unknown argument ignored in clang-cl: '%0'
optimization flag '%0' is not supported for target '%1'
argument unused during compilation: '%0'
support for '/Yc' with more than one source file not implemented yet; flag ignored
support for '/Yc' and '/Yu' with different filenames not implemented yet; flags ignored
support for '%0' without a filename not implemented yet; flag ignored
support for '%0' without a corresponding /FI flag not implemented yet; flag ignored
the flag '%0' has been deprecated and will be ignored
optimization flag '%0' is not supported
ignoring invalid -ftabstop value '%0', using default value %1
using sysroot for '%0' but targeting '%1'
invalid iOS deployment version '%0', iOS 10 is the maximum deployment target for 32-bit targets
no such sysroot directory: '%0'
'/U%0' treated as the '/U' option
ignoring '-mcompact-branches=' option because the '%0' architecture does not support it
ignoring '-mnan=2008' option because the '%0' architecture does not support it
ignoring '-mnan=legacy' option because the '%0' architecture does not support it
action %0 not compiled in
cannot link module '%0': %1
-dependency-file requires at least one -MT or -MQ option
error in backend: %0
error opening '%0': %1
error reading '%0'
error reading stdin: %0
expected a clang compiler command
unable to handle compilation, expected exactly one compiler job in '%0'
invalid value '%1' in '%0'; alignment must be a power of 2
cannot locate code-completion file %0
unable to find plugin '%0'
no suitable precompiled header file found in directory '%0'
PTH file '%0' does not designate an original source header file for -include-pth
could not remap from missing file '%0'
could not remap file '%0' to the contents of file '%1'
unable to change standard output to binary
unable to create target: '%0'
unable to interface with target machine
unable to load PCH file
unable to load plugin '%0': '%1'
unable to open output file '%0': '%1'
inline asm is used in the module with -fno-gnu-inline-asm
invalid virtual filesystem overlay file '%0'
no module named '%0' declared in module map file '%1'
no module name provided; specify one with -fmodule-name=
virtual filesystem overlay file '%0' not found
module compilation requires '-fmodules'
cannot create includes file for module %0: %1
module interface compilation requires '-fmodules-ts'
module map file '%0' not found
file '%0' specified by '-fmodules-embed-file=' not found
-fapinotes was provided without -fapinotes-cache-path=<directory>
no submodule named %0 in module '%1'
no submodule named %0 in module '%1'; did you mean '%2'?
must specify system root with -isysroot when building a relocatable PCH file
test module file extension '%0' has different version (%1.%2) than expected (%3.%4)
no analyzer checkers are associated with '%0'
'%0' diagnostics %select{expected|seen}1 but not %select{seen|expected}1: %2
invalid expected %0: %1
%select{expected|'expected-no-diagnostics'}0 directive cannot follow %select{'expected-no-diagnostics' directive|other expected directives}0
invalid range following '-' in expected %0
cannot find end ('}}') of expected %0
file '%0' could not be located in expected %1
missing or invalid line number following '@' in expected %0
cannot find start of regex ('{{') in %0
cannot find start ('{{') of expected %0
no expected directives found: consider use of 'expected-no-diagnostics'
could not determine the original source location for %0:%1:%2
instantiated into assembly here
FIX-IT applied suggested code changes
FIX-IT unable to apply suggested code changes
FIX-IT unable to apply suggested code changes in a macro
FIX-IT detected an error it cannot fix
current API version is '%0', but plugin was compiled with version '%1'
macro was %select{defined|#undef'd}0 here
module imported here
module defined here
use -analyzer-disable-all-checks to disable all static analyzer checkers
%0; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop. If the arrays will always be independent specify '#pragma clang loop vectorize(assume_safety)' before the loop or provide the '__restrict__' qualifier with the independent array arguments. Erroneous results will occur if these options are incorrectly applied!
%0; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'.
producing index data for module file '%0'
building module '%0' as '%1'
finished building module '%0'
-fsanitize-address-field-padding applied to %0
-fsanitize-address-field-padding ignored for %0 because it %select{is not C++|is packed|is a union|is trivially copyable|has trivial destructor|is standard layout|is in a blacklisted file|is blacklisted}1
unable to open CC_LOG_DIAGNOSTICS file: %0 (using stderr)
unable to open CC_PRINT_HEADERS file: %0 (using stderr)
stack frame size of %0 bytes in %q1
macro '%0' contains embedded newline; text after the newline is ignored
overriding the module target triple with %0
unable to open file %0 for serializing diagnostics (%1)
unable to merge a subprocess's serialized diagnostics
unable to open statistics output file '%0': '%1'
FIX-IT detected errors it could not fix; no output will be generated
checker plugin '%0' is not compatible with this version of the analyzer
missing submodule '%0'
%select{definition|#undef}0 of configuration macro '%1' has no effect on the import of '%2'; pass '%select{-D%1=...|-U%1}0' on the command line to configure the module
module file %0 cannot be loaded due to a configuration mismatch with the current compilation
no submodule named %0 in module '%1'; using top level '%2'
OpenCL version %0 does not support the option '%1'
unknown %select{warning|remark}0 option '%1'%select{|; did you mean '%3'?}2
unknown %0 warning specifier: '%1'
file '%0' has been modified since the AST file '%1' was built
file '%0' has been modified since the module file '%1' was built
input is not a PCH file: '%0'
file '%0' has been modified since the precompiled header '%1' was built
file '%0' from the precompiled header has been overridden
malformed or corrupted AST file: '%0'
malformed block record in PCH file: '%0'
unable to read PCH file %0: '%1'
module '%0' imported by AST file '%1' found in a different module map file (%2) than when the importing AST file was built (%3)
module '%0' in AST file '%1' (imported by AST file '%2') is not defined in any loaded module map file; maybe you need to load '%3'?
module '%0' was built in directory '%1' but now resides in directory '%2'
module '%0' %select{uses|does not use}1 additional module map '%2'%select{| not}1 used when the module was built
module '%0' is defined in both '%1' and '%2'
file '%1' is not a valid precompiled %select{PCH|module|AST}0 file
%select{PCH|module|AST}0 file '%1' not found%select{|: %3}2
AST file '%0' was not built as a module
%select{PCH|module|AST}0 file '%1' is out of date and needs to be rebuilt%select{|: %3}2
cannot emit module %0: %select{size|mtime}1 must be explicitly specified for missing header file "%2"
%q0 has different definitions in different modules; %select{definition in module '%2' is here|defined here}1
instantiation of %q0 is different in different modules
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{end of class|public access specifier|private access specifier|protected access specifier|static assert|field|method|type alias|typedef|data member|friend declaration}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{static assert with condition|static assert with message|static assert with %select{|no }4message|field %4|field %4 with type %5|%select{non-|}5bitfield %4|bitfield %4 with one width expression|%select{non-|}5mutable field %4|field %4 with %select{no|an}5 initalizer|field %4 with an initializer|%select{method %5|constructor|destructor}4|%select{method %5|constructor|destructor}4 is %select{not deleted|deleted}6|%select{method %5|constructor|destructor}4 is %select{|pure }6%select{not virtual|virtual}7|%select{method %5|constructor|destructor}4 is %select{not static|static}6|%select{method %5|constructor|destructor}4 is %select{not volatile|volatile}6|%select{method %5|constructor|destructor}4 is %select{not const|const}6|%select{method %5|constructor|destructor}4 is %select{not inline|inline}6|%select{method %5|constructor|destructor}4 that has %6 parameter%s6|%select{method %5|constructor|destructor}4 with %ordinal6 parameter of type %7%select{| decayed from %9}8|%select{method %5|constructor|destructor}4 with %ordinal6 parameter named %7|%select{method %5|constructor|destructor}4 with %ordinal6 parameter with%select{out|}7 a default argument|%select{method %5|constructor|destructor}4 with %ordinal6 parameter with a default argument|%select{typedef|type alias}4 name %5|%select{typedef|type alias}4 %5 with underlying type %6|data member with name %4|data member %4 with type %5|data member %4 with%select{out|}5 an initializer|data member %4 with an initializer|data member %4 %select{is constexpr|is not constexpr}5|friend %select{class|function}4|friend %4|friend function %4|}3
%q0 %select{with definition in module '%2'|defined here}1 has different definitions in different modules; first difference is this %select{||||static assert|field|method|type alias|typedef|data member|friend declaration|unexpected decl}3
%q0 from module '%1' is not present in definition of %q2%select{ in module '%4'| provided earlier}3
%0 is currently enabled, but was not in the PCH file
PCH file built from a different branch (%0) than the compiler (%1)
%0 was %select{disabled|enabled}1 in PCH file but is currently %select{disabled|enabled}2
%0 differs in PCH file vs. current file
definition of macro '%0' differs between the precompiled header ('%1') and the command line ('%2')
macro '%0' was %select{defined|undef'd}1 in the precompiled header but %select{undef'd|defined}1 on the command line
PCH was compiled with module cache path '%0', but the path is currently '%1'
%select{command line contains|precompiled header was built with}0 '-detailed-preprocessing-record' but %select{precompiled header was not built with it|it is not present on the command line}0
%select{AST file|current translation unit}0 was compiled with the target feature'%1' but the %select{current translation unit is|AST file was}0 not
PCH file was compiled for the %0 '%1' but the current translation unit is being compiled for target '%2'
%select{command line contains|precompiled header was built with}0 '-undef' but %select{precompiled header was not built with it|it is not present on the command line}0
PCH file uses a newer PCH format that cannot be read
PCH file uses an older PCH format that is no longer supported
PCH file contains compiler errors
in first definition, possible difference is here
consider adding '%0' to the header search path
after modifying system headers, please delete the module cache at '%0'
imported by %select{|module '%2' in }1'%0'
definition in module '%0' is here
but in '%0' found %select{end of class|public access specifier|private access specifier|protected access specifier|static assert|field|method|type alias|typedef|data member|friend declaration}1
but in '%0' found %select{static assert with different condition|static assert with different message|static assert with %select{|no }2message|field %2|field %2 with type %3|%select{non-|}3bitfield %2|bitfield %2 with different width expression|%select{non-|}3mutable field %2|field %2 with %select{no|an}3 initializer|field %2 with a different initializer|%select{method %3|constructor|destructor}2|%select{method %3|constructor|destructor}2 is %select{not deleted|deleted}4|%select{method %3|constructor|destructor}2 is %select{|pure }4%select{not virtual|virtual}5|%select{method %3|constructor|destructor}2 is %select{not static|static}4|%select{method %3|constructor|destructor}2 is %select{not volatile|volatile}4|%select{method %3|constructor|destructor}2 is %select{not const|const}4|%select{method %3|constructor|destructor}2 is %select{not inline|inline}4|%select{method %3|constructor|destructor}2 that has %4 parameter%s4|%select{method %3|constructor|destructor}2 with %ordinal4 parameter of type %5%select{| decayed from %7}6|%select{method %3|constructor|destructor}2 with %ordinal4 parameter named %5|%select{method %3|constructor|destructor}2 with %ordinal4 parameter with%select{out|}5 a default argument|%select{method %3|constructor|destructor}2 with %ordinal4 parameter with a different default argument|%select{typedef|type alias}2 name %3|%select{typedef|type alias}2 %3 with different underlying type %4|data member with name %2|data member %2 with different type %3|data member %2 with%select{out|}3 an initializer|data member %2 with a different initializer|data member %2 %select{is constexpr|is not constexpr}3|friend %select{class|function}2|friend %2|friend function %2|}1
but in '%0' found %select{||||different static assert|different field|different method|different type alias|different typedef|different data member|different friend declaration|another unexpected decl}1
definition has no member %0
declaration of %0 does not match
please rebuild precompiled header '%0'
'%0' required by '%1'
in second definition, possible difference is here
duplicate module file extension block name '%0'
module file '%0' was validated as a system module and is now being imported as a non-system module; any difference in diagnostic options will be ignored
%select{precompiled header|module}0 uses __DATE__ or __TIME__
backslash and newline separated by space
_Pragma takes a parenthesized string literal
illegal character encoding in character literal
illegal character encoding in string literal
character too large for enclosing character literal type
version control conflict marker in file
'defined' cannot be used as a macro name
digit separator cannot appear at %select{start|end}0 of digit sequence
embedding a #%0 directive within macro arguments is not supported
%select{hex|octal}0 escape sequence out of range
expected a module name in '__building_module' expression
exponent has no digits
builtin feature check macro requires a parenthesized identifier
hexadecimal floating %select{constant|literal}0 requires %select{an exponent|a significand}1
\%0 used with no following hex digits
invalid character '%0' character in raw string delimiter; use PREFIX( )PREFIX to delimit raw string
invalid argument to convert to character
invalid digit '%0' in %select{decimal|octal|binary}1 constant
invalid or corrupt PTH file '%0'
invalid suffix '%0' on %select{integer|floating}1 constant
source file is not valid UTF-8
failure when lexing a string
configuration macros are only allowed in top-level modules
conflicting re-export of module '%0' as '%1' or '%2'
header attribute '%0' specified multiple times
expected an attribute name
expected configuration macro name after ','
expected ',' after conflicting module name
expected a message describing the conflict with '%0'
only '*' can be exported from an inferred submodule
expected a feature name
expected a header name after '%0'
expected a header attribute name ('size' or 'mtime')
expected %select{module exclusion with 'exclude'|'export *'}0
expected '{' to start module '%0'
expected '{' to start inferred submodule
expected %select{library|framework}0 name as a string
expected umbrella, header, submodule, or module export
expected a module map file name
expected module declaration
expected module name
expected '}'
expected ']' to close attribute
inferred framework modules cannot be 'explicit'
'explicit' is not permitted on top-level modules
inferred submodule cannot be a framework submodule
inferred submodules require a module with an umbrella
redefinition of inferred submodule
expected integer literal as value for header attribute '%0'
expected excluded module name
no module named '%0' in '%1'
no module named '%0' visible from '%1'
expected a module name or '*'
redefinition of module '%0'
qualified module name can only be used to define modules at the top level
only top-level modules can be re-exported as public
only submodules and framework modules may be inferred with wildcard syntax
umbrella for module '%0' already covers this directory
skipping stray token
use declarations are only allowed in top-level modules
Unicode character literals may not contain multiple characters
non-ASCII characters are not allowed outside of literals and identifiers
Pascal string is too long
'##' cannot appear at end of macro expansion
'##' cannot appear at start of macro expansion
editor placeholder in source file
expected 'begin' or 'end'
pasting formed '%0', an invalid preprocessing token
':' without preceding '?'
%0 must be used within a preprocessing directive
division by zero in preprocessor expression
already inside '#pragma clang arc_cf_code_audited'
already inside '#pragma clang assume_nonnull'
duplicate macro parameter name %0
empty filename
#endif without #if
'#pragma clang arc_cf_code_audited' was not ended within this file
'#pragma clang assume_nonnull' was not ended within this file
error opening file '%0': %1
missing %1 after %0
expected comma in macro parameter list
expected end of line in preprocessor expression
expected identifier in macro parameter list
expected %select{identifier after '.' in |}0module name
expected ')' in preprocessor expression
expected value in expression
expected "FILENAME" or <FILENAME>
token is not a valid binary operator in a preprocessor subexpression
function-like macro %0 is not defined
invalid token at start of a preprocessor expression
'%0' file not found
'%0' file not found with <angled> include; use "quotes" instead
cannot convert %0 token to an identifier
floating point literal in preprocessor expression
#import of type library is an unsupported Microsoft feature
cannot #include files inside '#pragma clang arc_cf_code_audited'
cannot #include files inside '#pragma clang assume_nonnull'
#include nested too deeply
invalid preprocessing directive
can only poison identifier tokens
invalid token in macro parameter list
%select{character|integer}0 literal with user-defined suffix cannot be used in preprocessor constant expression
%select{#line|GNU line marker}0 directive requires a simple digit sequence
invalid filename for #line directive
#line directive requires a positive integer argument
invalid filename for line marker directive
invalid flag line marker directive
invalid line marker flag '2': cannot pop empty include stack
line marker directive requires a positive integer argument
macro name must be an identifier
invalid #ident directive
macro name missing
missing ')' in macro parameter list
no module map available for module %0
submodule %0.%1 not declared in module map
no matching '#pragma clang module end' for this '#pragma clang module begin'
must specify '-fmodule-name=%0' to enter %select{|submodule of }1this module%select{ (current module is %3)|}2
no matching '#pragma clang module endbuild' for this '#pragma clang module build'
'#pragma clang module build' not supported in pretokenized header
no matching '#pragma clang module begin' for this '#pragma clang module end'
nested parentheses not permitted in %0
variadic macros not supported in OpenCL
C++ operator %0 (aka %1) used as a macro name
remainder by zero in preprocessor expression
'%select{#|#@}0' is not followed by a macro parameter
not currently inside '#pragma clang arc_cf_code_audited'
not currently inside '#pragma clang assume_nonnull'
unterminated conditional directive
attempt to use a poisoned identifier
no macro named %0
pragma %select{message|warning|error}0 requires parenthesized string
pragma %0 requires a parenthesized string
raw string delimiter longer than 16 characters; use PREFIX( )PREFIX to delimit raw string
differing user-defined suffixes ('%0' and '%1') in string literal concatenation
too few arguments provided to function-like macro invocation
too many arguments provided to function-like macro invocation
universal character name refers to a control character
character '%0' cannot be specified by a universal character name
incomplete universal character name
invalid universal character
module %0 does not depend on a module exporting '%1'
unsupported non-standard concatenation of string literals
unterminated function-like macro invocation
missing terminating ')' character
unterminated /* comment
raw string missing terminating delimiter )%0"
escaped newline between */ characters at block comment end
binary integer literals are a GNU extension
binary integer literals are a C++14 extension
ISO C99 requires whitespace after the macro name
charizing operator #@ is a Microsoft extension
pasting two '/' tokens into a '//' comment is a Microsoft extension
treating Ctrl-Z as end-of-file is a Microsoft extension
'$' in identifier
embedding a directive within macro arguments has undefined behavior
empty character constant
empty macro arguments are a C99 feature
multi-character character constant
hexadecimal floating constants are a C99 feature
hexadecimal floating literals are a C++17 feature
imaginary constants are a GNU extension
// comments are not allowed in this language
must specify at least one argument for '...' parameter of variadic macro
whitespace required after macro name
invalid suffix on literal; C++11 requires a space between literal and identifier
multi-line // comment
named variadic macros are a GNU extension
no newline at end of file
use of non-standard escape character '\%0'
expected 'ON' or 'OFF' or 'DEFAULT' in pragma
token pasting of ',' and __VA_ARGS__ is a GNU extension
__VA_ARGS__ can only appear in the expansion of a C99 variadic macro
comma operator in operand of #if
extra tokens at end of #%0 directive
#ident is a language extension
#import is a language extension
#include_next is a language extension
#include resolved using non-portable Microsoft search rules as: %0
C requires #line number to be less than %0, allowed as extension
#line directive with zero argument is a GNU extension
%0 macro redefined
redefining builtin macro
undefining builtin macro
#warning is a language extension
expected end of directive in pragma
unknown pragma in STDC namespace
string literal of length %0 exceeds maximum length %1 that %select{C90|ISO C99|C++}2 compilers are required to support
extension used
treating Unicode character as whitespace
unknown escape sequence '\%0'
missing terminating %select{'|'"'}0 character
variadic macros are a C99 feature
%0 is defined here; did you mean %1?
submodule of top-level module '%0' implicitly imported here
cannot use initializer list at the beginning of a macro argument
macro %0 defined here
to match this '{'
to match this ']'
previously defined here
rename '%0' to ensure it can be found by name
expanding this definition of %0
other definition of %0
entering module '%0' due to this pragma
parentheses are required around macro argument containing braced initializer list
did you mean to use '\u'?
null character(s) preserved in %select{char|string}0 literal
null character ignored
disabled expansion of recursive macro
#elif after #else
#elif without #if
#else after #else
#else without #if
the #__include_macros directive is only for internal use by -imacros
#include_next with absolute path
#include_next in primary source file
invalid string literal, ignoring final '\'
macro is not used
non-portable path to file '%0'; specified path differs in case from file name on disk
current file is older than dependency %0
poisoning existing macro
#pragma once in main file
#pragma system_header ignored in main file
trigraph converted to '%0' character
trigraph ends block comment
trigraph ignored
ignored trigraph would end block comment
treating #%select{include|import|include_next|__include_macros}0 as an import of module '%1'
%select{using this character in an identifier|starting an identifier with this character}0 is incompatible with C99
unicode literals are incompatible with C99
character constant too long for its type
binary integer literals are incompatible with C++ standards before C++14
digit separators are incompatible with C++ standards before C++14
identifier after literal will be treated as a reserved user-defined literal suffix in C++11
identifier after literal will be treated as a user-defined literal suffix in C++11
'%0' is a keyword in C++11
unicode literals are incompatible with C++ standards before C++17
hexadecimal floating literals are incompatible with C++ standards before C++17
empty macro arguments are incompatible with C++98
'<::' is treated as digraph '<:' (aka '[') followed by ':' in C++98
universal character name referring to a control character is incompatible with C++98
specifying character '%0' with a universal character name is incompatible with C++98
C++98 requires newline at end of file
#line number greater than 32767 is incompatible with C++98
raw string literals are incompatible with C++98
using this character in an identifier is incompatible with C++98
unicode literals are incompatible with C++98
variadic macros are incompatible with C++98
macro expansion producing 'defined' has undefined behavior
extraneous characters in character constant ignored
__has_warning expected option name (e.g. "-Wundef")
%0 is used as a header guard here, followed by #define of a different macro
whitespace recommended after macro name
expected canonical name for private module '%0'
private submodule '%0' in private module map, expected top-level module
module '%0' already re-exported as '%1'
umbrella directory '%0' not found
unknown attribute '%0'
module '%0' conflicts with already-imported module '%1': %2
'/*' within block comment
include of non-modular header inside framework module '%0': '%1'
include of non-modular header inside module '%0': '%1'
ambiguous expansion of macro %0
%select{left|right}0 side of operator converted from negative value to unsigned: %1
expansion of date or time macro is not reproducible
integer overflow in preprocessor expression
%select{#line|GNU line marker}0 directive interprets number as decimal, not octal
keyword is hidden by macro definition
macro name is a reserved identifier
ignoring redefinition of Objective-C qualifier macro
%0 is not defined, evaluates to 0
missing argument to debug command '%0'
unexpected debug command '%0'
pragma diagnostic pop could not pop, no matching push
pragma diagnostic expected 'error', 'warning', 'ignored', 'fatal', 'push', or 'pop'
pragma diagnostic expected option name (e.g. "-Wundef")
unexpected token in pragma diagnostic
unknown warning group '%0', ignored
unknown pragma ignored
pragma include_alias expected '%0'
pragma include_alias expected include filename
angle-bracketed include <%0> cannot be aliased to double-quoted include "%1"
double-quoted include "%0" cannot be aliased to angle-bracketed include <%1>
pragma pop_macro could not pop '%0', no matching push_macro
#pragma warning expected '%0'
#pragma warning expected a warning number
#pragma warning(push, level) requires a level between 0 and 4
#pragma warning expected 'push', 'pop', 'default', 'disable', 'error', 'once', 'suppress', 1, 2, 3, or 4
pragma STDC FENV_ACCESS ON is not supported, ignoring pragma
incomplete universal character name; treating as '\' followed by identifier
\%0 used with no following hex digits; treating as '\' followed by identifier
universal character name refers to a surrogate character
universal character names are only valid in C99 or C++; treating as '\' followed by identifier
universal character names are only valid in C99 or C++
umbrella header for module '%0' does not include header '%1'
use of private header from outside its module: '%0'
interface types cannot specify '%select{private|protected}0' access
use of address-of-label extension outside of a function body
name defined in alias declaration must be an identifier
alias declaration cannot be a pack expansion
%select{partial specialization|explicit specialization|explicit instantiation}0 of alias templates is not permitted
declaration of anonymous %0 must be a definition
unknown cast annotation __bridge_retain; did you mean __bridge_retained?
argument required after attribute
__asm used with no assembly instructions
'asm goto' constructs are not supported yet
cannot use %select{unicode|wide}0 string literal in 'asm'
@defs is not supported in Objective-C++
unexpected '@' in member specification
use of '@import' when modules are disabled
use of '@import' when C++ modules are disabled, consider using -fmodules and -fcxx-modules
%0 attribute cannot be applied to a module import
%0 attribute cannot be applied to a module
parentheses must be omitted if %0 attribute's argument list is empty
an attribute list cannot appear here
expected a platform name here
unrecognized platform name %0
expected 'introduced', 'deprecated', or 'obsoleted'
expected a platform name, e.g., 'macos'
version for '%0' already specified
'*' query has already been specified
must handle potential future platforms with '*'
redundant %0 availability change; only the last specified change will be used
%0 is not an availability stage; use 'introduced', 'deprecated', or 'obsoleted'
bit-field member cannot have an in-class initializer
redeclaration of C++ built-in type 'bool'
bracket nesting level exceeded maximum of %0
brackets are not allowed here; to declare an array, place the brackets after the %select{identifier|name}0
'_Noreturn' keyword must precede function declarator
template template parameter requires 'class' after the parameter list
missing return type for function %0; did you mean the constructor name %1?
missing ',' between base or member initializers
attribute %0 cannot have an argument list
attribute '%0' cannot be used as an attribute pack
attribute %0 cannot appear multiple times in an attribute specifier
declaration does not declare a parameter
'%0' qualifier may not appear after the virtual specifier '%1'
unexpected end of default argument expression
'= %select{default|delete}0' is a function definition and must occur in a standalone declaration
default template argument for a template template parameter must be a class template
destructor name %0 does not refer to a template
expected a class name after '~' to name a destructor
'~' in destructor name should be after nested name specifier
duplicate 'virtual' in base specifier
duplicate default generic association
class member already marked '%0'
cannot have both throw() and noexcept() clause on the same function
use of empty enum
missing ',' between enumerators
unnamed enumeration must be a definition
unexpected end of exception specification
expected variable name or 'this' in lambda capture list
expected 'case' keyword before expression
expected catch
expected class name
'typename' is redundant; base classes are implicitly types
expected '::' after '__super'
expected ',' or '>' in template-parameter-list
expected ',' or ']' in lambda capture list
expected '#pragma omp end declare target'
expected '= constant-expression' or end of enumerator definition
expected '=' or another designator
expected expression
expected external declaration
expected a field designator, such as '.field = 4'
expected function body after function declarator
expected a foldable binary operator in fold expression
variable declaration in condition must have an initializer
variable declaration in condition cannot have a parenthesized initializer
expected body of lambda expression
expected '{' after base class list
expected '{' in compound literal
expected '<' after '%0'
expected '(' after '%0'
expected '(' for function-style cast or type construction
expected member name or ';' after declaration specifiers
expected member name or ';' after declaration specifiers; %0 is a keyword in Objective-C++
expected class member or base class name
expected method body
method type specifier must start with '-' or '+'
'@end' must appear in an Objective-C context
expected the name of a parameter pack
expected parentheses around type name in %0 expression
expected property name
expected ')' or ',' after '%0'
expected a qualified name after 'typename'
expected ')' after '%0'
expected selector for Objective-C method
expected ';' after attribute list
expected ';' after expression
expected ';' after method prototype
expected ';' after namespace name
expected ';' after static_assert
expected ';' after %0 statement
expected ';' at end of declaration list
expected ';' at end of declaration
expected ';' in 'for' statement specifier
expected 'this' following '*' in lambda capture list
expected statement
expected template
expected template parameter
expected %0; %1 is a keyword in Objective-C++
expected a type
expected an identifier or template-id after '::'
expected %select{identifier|unqualified-id}0
expected a version of the form 'major[.minor[.subminor]]'
expected 'while' in do/while loop
enumerations cannot be explicitly instantiated
explicit template instantiation cannot have a definition; if this definition is meant to be an explicit specialization, add '<>' after the 'template' keyword
explicit %select{specialization|instantiation}0 of non-template %1 %2
export declaration cannot be empty
duplicate %0 clause in an 'external_source_symbol' attribute
expected 'language', 'defined_in', or 'generated_declaration'
extraneous closing brace ('}')
extraneous ')' after condition, expected a statement
extraneous '%0' before ';'
operators in fold expression must be the same
'co_await' modifier can only be applied to range-based for loop
for range declaration must declare a variable
range-based for loop requires type for loop variable
cannot define a type in a friend declaration
friend cannot be declared in an explicit instantiation; if this declaration is meant to be a friend declaration, remove the 'template' keyword
'friend' used outside of class
function definition does not declare parameters
function definition declared 'typedef'
function definition is not allowed here
unexpected %0 in function call; perhaps remove the %0?
GNU-style inline assembly is disabled
expected template name after 'template' keyword in nested name specifier
%0 declared as a reference to a reference
cannot cast 'super' (it isn't an expression)
array bound cannot be deduced from an in-class initializer
initializer list cannot be used on the %select{left|right}0 hand side of operator '%1'
namespace alias cannot be inline
nested namespace definition cannot be 'inline'
cannot use %select{dot|arrow}0 operator on a type
'%0' qualifier may not be applied to a reference
invalid %0 at end of declaration; did you mean '='?
expected ';' after top level declarator
C++11 only allows consecutive left square brackets when introducing an attribute
label at end of compound statement: expected statement
%select{'mutable'|'constexpr'}0 cannot appear multiple times in a lambda declarator
lambda requires '()' before %select{'mutable'|return type|attribute specifier|'constexpr'}0
string literal after 'operator' must be '""'
string literal after 'operator' cannot have an encoding prefix
'...' must %select{immediately precede declared identifier|be innermost component of anonymous pack declaration}0
expected %0 at end of module
@try statement without a @catch and @finally clause
C requires a comma prior to the ellipsis in a variadic function type
use 'template' keyword to treat '%0' as a dependent template name
missing '}' at end of definition of %q0
expected parameter declarator
found '<::' after a %select{template name|const_cast|dynamic_cast|reinterpret_cast|static_cast}0 which forms the digraph '<:' (aka '[') and a ':', did you mean '< ::'?
expected a module name after '%select{module|import}0'
expected ';' after module name
module partition must be declared 'export'
'__declspec' attributes are not enabled; use '-fdeclspec' or '-fms-extensions' to enable support for __declspec attributes
__declspec attributes must be an identifier or string literal
property declaration specifies '%0' accessor twice
expected name of accessor method
expected ',' or ')' at end of property accessor list
expected '=' after '%0'
putter for property must be specified as 'put', not 'set'
property declaration cannot have an in-class initializer
missing 'get=' or 'put='
property does not specify a getter or a putter
expected 'get' or 'put' in property declaration
MS-style inline assembly is not available: %0
Unsupported architecture '%0' for MS-style inline assembly
%select{|a template declaration|an explicit template specialization|an explicit template instantiation}0 can only %select{|declare|declare|instantiate}0 a single entity
namespaces can only be defined in global or namespace scope
parameter named %0 is missing
@%0 must be followed by a number to form an NSNumber object
unexpected token after Objective-C string
directive may only be specified in protocols only
expected '=' for Objective-C getter
expected '=' for Objective-C setter
unknown property attribute %0
expected selector for Objective-C %select{setter|getter}0
expected type parameter name
illegal interface qualifier
illegal visibility specification
missing '@end'
@implementation cannot have type parameters
postfix attributes are not allowed on Objective-C directives
postfix attributes are not allowed on Objective-C directives, place them in front of '%select{@interface|@protocol}0'
properties are an Objective-C 2 feature
property name cannot be a bit-field
property requires fields to be named
protocol qualifiers must precede type arguments
'@end' appears where closing brace '}' is expected
prefix attribute must be followed by an interface or protocol
expected an Objective-C directive after '@'
expected a related ObjectiveC class name, e.g., 'NSColor'
expected a class method selector with single argument, e.g., 'colorWithCGColor:'
function declaration is expected after 'declare simd' directive
unexpected '%0' clause, '%1' is specified already
unexpected '%0' clause, only 'to' or 'link' clauses expected
expected identifier specifying the name of the 'omp critical' directive
expected ',' or ')' in '%0' %select{clause|directive}1
expected identifier or one of the following operators: '+', '-', '*', '&', '|', '^', '&&', or '||'
'#pragma omp %0' %select{|with '%2' clause }1cannot be an immediate substatement
missing map type
unexpected OpenMP clause '%0' in directive '#pragma omp %1'
unexpected OpenMP directive '#pragma omp %0'
expected an OpenMP directive
incorrect map type, expected one of 'to', 'from', 'tofrom', 'alloc', 'release', or 'delete'
incorrect map type modifier, expected 'always'
^^ is a reserved operator in OpenCL
taking address of function is not allowed
OpenCL only supports 'opencl_unroll_hint' attribute on for, while, and do statements
out-of-line constructor for %0 cannot have template arguments
'%0' keyword not permitted with interface types
missing parentheses around the size of parameter pack %0
duplicate attribute subject matcher '%0'
expected an attribute after '('
expected identifier that represents an attribute name
expected an attribute that is specified using the GNU, C++11 or '__declspec' syntax
expected 'push' or 'pop' after '#pragma clang attribute'
expected an identifier that corresponds to an attribute subject rule
expected an identifier that corresponds to an attribute subject matcher sub-rule; '%0' matcher %select{does not support sub-rules|supports the following sub-rules: %2|}1
extra tokens after attribute in a '#pragma clang attribute push'
unexpected argument '%0' to '#pragma clang attribute'; expected 'push' or 'pop'
expected attribute subject set specifier 'apply_to'
more than one attribute specified in '#pragma clang attribute push'
unknown attribute subject rule '%0'
%select{invalid use of|unknown}2 attribute subject matcher sub-rule '%0'; '%1' matcher %select{does not support sub-rules|supports the following sub-rules: %3}2
attribute %0 is not supported by '#pragma clang attribute'
force_cuda_host_device end pragma without matching force_cuda_host_device begin
expected '=' following '#pragma clang section %select{invalid|bss|data|rodata|text}0'
expected section name or '""' following '#pragma clang section %select{invalid|bss|data|rodata|text}0'
pragma comment requires parenthesized identifier and optional string
unknown kind of pragma comment
pragma detect_mismatch is malformed; it requires two comma-separated string literals
expected one of [bss|data|rodata|text] section kind in '#pragma %0'
'#pragma fp_contract' can only appear at file scope or at the start of a compound statement
unexpected argument '%0' to '#pragma clang fp %1'; expected 'on', 'fast' or 'off'
%select{invalid|missing}0 option%select{ %1|}0; expected contract
'#pragma clang fp' can only appear at file scope or at the start of a compound statement
invalid argument; expected 'enable'%select{|, 'full'}0%select{|, 'assume_safety'}1 or 'disable'
%select{invalid|missing}0 option%select{ %1|}0; expected vectorize, vectorize_width, interleave, interleave_count, unroll, unroll_count, or distribute
missing argument; expected %select{an integer value|'enable'%select{|, 'full'}1%select{|, 'assume_safety'}2 or 'disable'}0
missing argument to '#pragma %0'%select{|; expected %2}1
unexpected extra argument '%0' to '#pragma clang optimize'
unexpected argument '%0' to '#pragma clang optimize'; expected 'on' or 'off'
unexpected %0, expected to see one of %select{|'best_case', 'full_generality', }1'single_inheritance', 'multiple_inheritance', or 'virtual_inheritance'
a space is required between a right angle bracket and an equals sign (use '> =')
scoped enumeration requires a name
range-based 'for' statement uses ':', not '='
expected parenthesized parameter pack name in 'sizeof...' expression
statement expression not allowed at file scope
'__super' cannot be used with a using declaration
expected a property name in @synthesize
%select{function|class|variable}0 cannot be defined in an explicit instantiation; if this declaration is meant to be a %select{function|class|variable}0 definition, remove the 'template' keyword
identifier followed by '<' indicates a class template specialization but %0 %select{does not refer to a template|refers to a function template|<unused>|refers to a variable template|<unused>}1
a static_assert declaration cannot be a template
cannot template a using %select{directive|declaration}0
'this' cannot be captured by reference
a space is required between consecutive right angle brackets (use '> >')
invalid comparison flag %0; use 'layout_compatible' or 'must_be_null'
type trait requires %0%select{| or more}1 argument%select{|s}2; have %3 argument%s3
unparsed tokens following type
typename is allowed for identifiers only
type name does not allow constexpr specifier to be specified
type name does not allow function specifier to be specified
type name does not allow storage class to be specified
typename specifier refers to a non-type template
type name requires a specifier or qualifier
unexpected '@' in program
unexpected ':' in nested name specifier; did you mean '::'?
module declaration can only appear at the top level
attributes cannot be specified on namespace alias
attributes cannot be specified on a nested namespace definition
@implementation declaration cannot be protocol qualified
unexpected namespace scope prior to decltype
unexpected ';' before %0
'%0' cannot be a part of nested name specifier; did you mean ':'?
unexpected type name %0: expected identifier
type-id cannot have a name
unknown template name %0
'static' may not be used without an array size
'static' may not be used with an unspecified variable length array size
attribute with scope specifier cannot follow default scope specifier
'using namespace' is not allowed in classes
version number must have non-zero major, minor, or sub-minor version
ISO C++11 requires a parenthesized pack declaration to have a name
alias declarations are a C++11 extension
%0 applied to an expression is a GNU extension
'auto' storage class specifier is not permitted in C++11, and will not be supported in future releases
'__auto_type' is a GNU extension
%0 is a C11-specific feature
generic selections are a C11-specific feature
_Noreturn functions are a C11-specific feature
_Static_assert is a C11-specific feature
compound literals are a C99-specific feature
variable declaration in for loop is a C99-specific feature
enumeration types with a fixed underlying type are a Microsoft extension
constexpr if is a C++17 extension
'constexpr' on lambda expressions is a C++17 extension
enumeration types with a fixed underlying type are a C++11 extension
'decltype(auto)' type specifier is a C++14 extension
ISO C++17 does not allow a decomposition group to be empty
%select{defaulted|deleted}0 function definitions are a C++11 extension
exception specification of '...' is a Microsoft extension
ISO C requires a translation unit to contain at least one declaration
commas at the end of enumerator lists are a C99-specific feature
commas at the end of enumerator lists are a C++11 extension
extern templates are a C++11 extension
extra ';' %select{outside of a function|inside a %1|inside instance variable list|after member function definition}0
extra ';' outside of a function is a C++11 extension
pack fold expression is a C++17 extension
range-based for loop is a C++11 extension
generalized initializer lists are a C++11 extension
use of GNU address-of-label extension
use of GNU array range extension
use of GNU case range extension
use of GNU ?: conditional expression extension, omitting middle operand
use of GNU empty initializer extension
use of GNU indirect-goto extension
use of GNU 'missing =' extension in designator
use of GNU old-style field designator extension
use of GNU statement expression extension
type-less parameter names in function declaration
'%select{if|switch}0' initialization statements are a C++17 extension
inline namespaces are a C++11 feature
keyword '%0' will be made available as an identifier %select{here|for the remainder of the translation unit}1
'sealed' keyword is a Microsoft extension
use of multiple declarators in a single using declaration is a C++17 extension
nested namespace definition is a C++17 extension; define each namespace separately
in-class initialization of non-static data member is a C++11 extension
type nullability specifier %0 is a Clang extension
'%0' keyword is a C++11 extension
reference qualifiers on functions are a C++11 extension
rvalue references are a C++11 extension
scoped enumerations are a C++11 extension
template template parameter using 'typename' is a C++17 extension
'__thread' before '%0'
default scope specifier for attributes is a C++17 extension
pack expansion of using declaration is a C++17 extension
use -fbracket-depth=N to increase maximum nesting level
comma separating Objective-C messaging arguments
or insert whitespace before ':' to use %0 as parameter name and have an empty entry in the selector
insert ',' before '...' to silence this warning
place '...' %select{immediately before declared identifier|here}0 to declare a function parameter pack
preceding '...' declares a function parameter pack
still within definition of %q0 here
introduce a parameter name to make %0 part of the selector
%select{class|protocol|category|class extension|implementation|category implementation}0 started here
use the GNU '__attribute__' syntax
previous default generic association is here
'%0' casts have no effect when not using ARC
ignored %0 qualifier on asm
attribute %0 ignored, because it is not attached to a declaration
GCC does not allow %0 attribute in this position on a function definition
'unavailable' availability overrides all other availability information
use of C-style parameters in Objective-C method declarations is deprecated
nvcc does not allow '__%0__' to appear after '()' in lambdas
'decltype(auto)' type specifier is incompatible with C++ standards before C++14
use of right-shift operator ('>>') in template argument will require parentheses in C++11
attributes on %select{a namespace|an enumerator}0 declaration are incompatible with C++ standards before C++17
constexpr if is incompatible with C++ standards before C++17
constexpr on lambda expressions is incompatible with C++ standards before C++17
pack fold expression is incompatible with C++ standards before C++17
%select{if|switch}0 initialization statements are incompatible with C++ standards before C++17
nested namespace definition is incompatible with C++ standards before C++17
template template parameter using 'typename' is incompatible with C++ standards before C++17
default scope specifier for attributes is incompatible with C++ standards before C++17
use of multiple declarators in a single using declaration is incompatible with C++ standards before C++17
pack expansion using declaration is incompatible with C++ standards before C++17
alias declarations are incompatible with C++98
'alignas' is incompatible with C++98
alignof expressions are incompatible with C++98
C++11 attribute syntax is incompatible with C++98
'decltype' type specifier is incompatible with C++98
%select{defaulted|deleted}0 function definitions are incompatible with C++98
enumeration types with a fixed underlying type are incompatible with C++98
commas at the end of enumerator lists are incompatible with C++98
extern templates are incompatible with C++98
range-based for loop is incompatible with C++98
generalized initializer lists are incompatible with C++98
inline namespaces are incompatible with C++98
lambda expressions are incompatible with C++98
literal operators are incompatible with C++98
noexcept specifications are incompatible with C++98
noexcept expressions are incompatible with C++98
in-class initialization of non-static data members is incompatible with C++98
'nullptr' is incompatible with C++98
'%0' keyword is incompatible with C++98
reference qualifiers on functions are incompatible with C++98
rvalue references are incompatible with C++98
scoped enumerations are incompatible with C++98
static_assert declarations are incompatible with C++98
extra ';' outside of a function is incompatible with C++98
trailing return types are incompatible with C++98
consecutive right angle brackets are incompatible with C++98 (use '> >')
add explicit braces to avoid dangling else
use same version number separators '_' or '.'; as in 'major[.minor[.subminor]]'
extra ';' after member function definition
meaningless 'volatile' on asm outside function
GCC does not allow an attribute in this position on a function declaration
dependent %select{__if_not_exists|__if_exists}0 declarations are ignored
qualifiers after comma in declarator list are ignored
'...' in this location creates a C-style varargs function%select{, not a function parameter pack|}0
%0 used as the name of the previous parameter rather than as part of the selector
protocol has no object type specified; defaults to qualified 'id'
extra tokens at the end of '#pragma omp %0' are ignored
expected '=' following '#pragma %select{align|options align}0' - ignored
invalid alignment option in '#pragma %select{align|options align}0' - ignored
OpenCL extension end directive mismatches begin directive - ignoring
'#pragma comment %0' ignored
expected action or ')' in '#pragma %0' - ignored
missing ':' after %0 - ignoring
missing ':' or ')' after %0 - ignoring
expected identifier in '#pragma %0' - ignored
expected 'compiler', 'lib', 'user', or a string literal for the section name in '#pragma %0' - ignored
expected integer between %0 and %1 inclusive in '#pragma %2' - ignored
missing '(' after '#pragma %0' - ignoring
expected non-wide string literal in '#pragma %0'
expected %select{'enable', 'disable', 'begin' or 'end'|'disable'}0 - ignoring
expected ')' or ',' in '#pragma %0'
missing ')' after '#pragma %0' - ignoring
expected a stack label or a string literal for the section name in '#pragma %0' - ignored
expected a string literal for the section name in '#pragma %0' - ignored
expected push, pop or a string literal for the section name in '#pragma %0' - ignored
OpenCL extension %0 is core feature or supported optional core feature - ignoring
extra tokens at end of '#pragma %0' - ignored
incorrect use of #pragma clang force_cuda_host_device begin|end
'#pragma init_seg' is only supported when targeting a Microsoft environment
%0 is not a recognized builtin%select{|; consider including <intrin.h> to access non-builtin intrinsics}1
unknown action for '#pragma %0' - ignored
unknown action '%1' for '#pragma %0' - ignored
incorrect use of '#pragma ms_struct on|off' - ignored
unexpected '#pragma omp ...' in program
expected 'align' following '#pragma options' - ignored
expected integer or identifier in '#pragma pack' - ignored
unknown OpenCL extension %0 - ignoring
argument to '#pragma unroll' should not be in parentheses in CUDA C/C++
known but unsupported action '%1' for '#pragma %0' - ignored
unsupported OpenCL extension %0 - ignoring
expected '#pragma unused' argument to be a variable name
semicolon before method body is ignored
ignoring '%select{static|inline}0' keyword on explicit template instantiation
empty symbolic operand name in inline assembly string
invalid %% escape in inline assembly string
invalid operand number in inline asm string
unknown symbolic operand name in inline assembly string
unterminated symbolic operand name in inline assembly string
template parameter lists have a different number of parameters (%0 vs %1)
template parameter has different kinds in different translation units
field %0 declared with incompatible types in different translation units (%1 vs. %2)
external function %0 declared with incompatible types in different translation units (%1 vs. %2)
instance variable %0 declared with incompatible types in different translation units (%1 vs. %2)
non-type template parameter declared with incompatible types in different translation units (%0 vs. %1)
%select{class|instance}0 method %1 has a different number of parameters in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has a parameter with a different types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has incompatible result types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 is variadic in one translation unit and not variadic in another
property %0 is implemented with %select{@synthesize|@dynamic}1 in one translation but %select{@dynamic|@synthesize}1 in another translation unit
property %0 declared with incompatible types in different translation units (%1 vs. %2)
class %0 has incompatible superclasses
property %0 is synthesized to different ivars in different translation units (%1 vs. %2)
parameter kind mismatch; parameter is %select{not a|a}0 parameter pack
type %0 has incompatible definitions in different translation units
external variable %0 defined in multiple translation units
external variable %0 declared with incompatible types in different translation units (%1 vs. %2)
cannot import unsupported AST node %0
ambiguous vftable component for %0 introduced via covariant thunks; this is an inherent limitation of the ABI
%select{read of|assignment to|increment of|decrement of}0 member %1 of union with %select{active member %3|no active member}2 is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 dereferenced null pointer is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 dereferenced one-past-the-end pointer is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 temporary is not allowed in a constant expression outside the expression that created the temporary
%select{read of|assignment to|increment of|decrement of}0 object outside its lifetime is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 volatile %select{temporary|object %2|member %2}1 is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 volatile-qualified type %1 is not allowed in a constant expression
cannot refer to element %0 of %select{array of %2 element%plural{1:|:s}2|non-array object}1 in a constant expression
%select{alignment of|offset of the aligned pointer from}0 the base pointee object (%1 %plural{1:byte|:bytes}1) is %select{less than|not a multiple of}0 the asserted %2 %plural{1:byte|:bytes}2
value of the aligned pointer (%0) is not a multiple of the asserted %1 %plural{1:byte|:bytes}1
in call to '%0'
constexpr evaluation hit maximum call limit
(skipping %0 call%s0 in backtrace; use -fconstexpr-backtrace-limit=0 to see all)
comparison of pointer to virtual member function %0 has unspecified value
both arms of conditional operator are unable to produce a constant expression
constexpr evaluation exceeded maximum depth of %0 calls
floating point arithmetic produces %select{an infinity|a NaN}0
in implicit initialization for inherited constructor of %0
%select{reinterpret_cast|dynamic_cast|cast that performs the conversions of a reinterpret_cast|cast from %1}0 is not allowed in a constant expression
cannot cast object of dynamic type %0 to type %1
%select{non-constexpr|undefined}0 %select{function|constructor}1 %2 cannot be used in a constant expression
constructor inherited from base class %0 cannot be used in a constant expression; derived class cannot be implicitly initialized
shift count %0 >= width of type %1 (%2 bit%s2)
%select{read of|assignment to|increment of|decrement of}0 %select{temporary|variable}1 whose lifetime has ended
signed left shift discards bits
left shift of negative value %0
read of mutable member %0 is not allowed in a constant expression
read of non-const variable %0 is not allowed in a constant expression
read of non-constexpr variable %0 is not allowed in a constant expression
modification of object of const-qualified type %0 is not allowed in a constant expression
a constant expression cannot modify an object that is visible outside that expression
negative shift count %0
control reached end of constexpr function
%select{pointer|reference}0 to %select{|subobject of }1%select{temporary|%3}2 is not a constant expression
non-literal type %0 cannot be used in a constant expression
cannot %select{access base class of|access derived class of|access field of|access array element of|perform pointer arithmetic on|call member function on|access real component of|access imaginary component of}0 null pointer
value %0 is outside the range of representable values of type %1
dereferenced pointer past the end of %select{|subobject of }0%select{temporary|%2}1 is not a constant expression
cannot %select{access base class of|access derived class of|access field of|access array element of|ERROR|call member function on|access real component of|access imaginary component of}0 pointer past the end of object
comparison of addresses of subobjects of different base classes has unspecified value
comparison of address of base class subobject %0 of class %1 to field %2 has unspecified value
comparison of address of fields %0 and %2 of %4 with differing access specifiers (%1 vs %3) has unspecified value
subtracted pointers are not elements of the same array
subtraction of pointers to type %0 of zero size
constexpr evaluation hit maximum step limit; possible infinite loop?
this use of statement expressions is not supported in a constant expression
temporary created here
%select{|implicit }0use of 'this' pointer is only allowed within the evaluation of a call to a 'constexpr' member function
typeid applied to expression of polymorphic type %0 is not allowed in a constant expression
%select{|sub}0object of type %1 is not initialized
use of reference outside its lifetime is not allowed in a constant expression
initializer of %0 is not a constant expression
cannot construct object of type %0 with virtual base class in a constant expression
cannot evaluate virtual function call in a constant expression
comparison between unequal pointers to void has unspecified result
covariant thunk required by %0
division by zero
class has base type %0
bit-field %0 with type %1 and length %2 here
also defined here
enumerator %0 with value %1 here
field %0 has type %1 here
field has name %0 here
no corresponding base class here
no corresponding enumerator here
no corresponding field here
field %0 is not a bit-field
class has %0 base %plural{1:class|:classes}0
%select{class|instance}0 method %1 also declared here
no corresponding superclass here
property %0 is implemented with %select{@synthesize|@dynamic}1 here
inherits from superclass %0 here
property is synthesized to ivar %0 here
%select{parameter|parameter pack}0 declared here
%0 is a %select{struct|interface|union|class|enum}1 here
template parameter declared here
template parameter list also declared here
declared here with type %0
%select{non-virtual|virtual}0 derivation here
unimplemented constexpr lambda feature: %0 (coming soon!)
overflow in expression; result is %0 with type %1
add a deprecation attribute to the declaration to silence this warning
previous command '%select{\|@}0%1' here
previous command '%select{\|@}0%1' (an alias of '\%2') here
end tag
HTML tag started here
did you mean '%0'?
previous documentation
unknown command tag name '%0'; did you mean '%1'?
'%select{\|@}0%select{class|interface|protocol|struct|union}1' command should not be used in a comment attached to a non-%select{class|interface|protocol|struct|union}2 declaration
duplicated command '%select{\|@}0%1'
empty paragraph passed to '%select{\|@}0%1' command
'%select{\|@}0%select{classdesign|coclass|dependency|helper|helperclass|helps|instancesize|ownership|performance|security|superclass}1' command should not be used in a comment attached to a non-container declaration
declaration is marked with '\deprecated' command but does not have a deprecation attribute
'%select{\|@}0%select{function|functiongroup|method|methodgroup|callback}1' command should be used in a comment attached to %select{a function|a function|an Objective-C method|an Objective-C method|a pointer to function}2 declaration
HTML end tag '%0' is forbidden
HTML end tag does not match any start tag
HTML tag '%0' requires an end tag
HTML start tag '%0' closed by '%1'
HTML start tag prematurely ended, expected attribute name or '>'
expected quoted string after equals sign
parameter '%0' is already documented
unrecognized parameter passing direction, valid directions are '[in]', '[out]' and '[in,out]'
'%select{\|@}0param' command used in a comment that is not attached to a function declaration
parameter '%0' not found in the function declaration
whitespace is not allowed in parameter passing direction
'%select{\|@}0%1' command used in a comment that is attached to a %select{function returning void|constructor|destructor|method returning void}2
'%select{\|@}0%1' command used in a comment that is not attached to a function or method declaration
template parameter '%0' is already documented
'%select{\|@}0tparam' command used in a comment that is not attached to a template declaration
template parameter '%0' not found in the template declaration
unknown command tag name
'%select{\|@}0%1' command does not terminate a verbatim text block
this builtin is only available on 64-bit targets
cannot add 'abi_tag' attribute in a redeclaration
%select{return|parameter|variable|field|instance variable|synthesized instance variable}0 type %1 is an abstract class
%1 is a %select{private|protected}0 member of %3
%select{base class|inherited virtual base class}0 %1 has %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR*|}2constructor
calling a %select{private|protected}0 constructor of class %2
ISO C++11 does not allow access declarations; use using declarations instead
calling a %select{private|protected}1 destructor of class %0
base class %0 has %select{private|protected}1 destructor
exception object of type %0 has %select{private|protected}1 destructor
field of type %1 has %select{private|protected}2 destructor
instance variable of type %0 has %select{private|protected}1 destructor
temporary of type %0 has %select{private|protected}1 destructor
variable of type %1 has %select{private|protected}2 destructor
inherited virtual base class %1 has %select{private|protected}2 destructor
field of type %0 has %select{private|protected}2 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}1constructor
friend function %1 is a %select{private|protected}0 member of %3
capture of variable '%0' as type %1 calls %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}2constructor
address of overloaded function %0 is ambiguous
cannot form member pointer of type %0 without '&' and class name
address of overloaded function %0 does not match required type %1
address of overloaded function %0 cannot be converted to type %1
cannot take address of function %0 because parameter %1 has pass_object_size attribute
'delete' cannot delete objects of type %0 in address space '%1'
'new' cannot allocate objects of type %0 in address space '%1'
cannot take address of function %0 because it has one or more non-tautological enable_if conditions
alias definition of %0 after tentative definition
definition %0 cannot also be an %select{alias|ifunc}1
aliases are not supported on darwin
CUDA does not support aliases
pack expansion used as argument for non-pack parameter of alias template
extraneous template parameter list in alias template declaration
%select{alias|ifunc}0 must point to a defined %select{variable or |}1function
'align_value' attribute requires integer constant
%0 attribute cannot be applied to a %select{function parameter|variable with 'register' storage class|'catch' variable|bit-field}1
redeclaration has different alignment requirement (%1 vs %0)
%0 must be specified on definition if it is specified on any declaration
requested alignment is less than minimum alignment of %1 for type %0
'aligned' attribute requires integer constant
requested alignment is dependent but declaration is not dependent
requested alignment is not a power of 2
requested alignment must be %0 or smaller
requested alignment must be %0 or greater
invalid application of 'alignof' to a field of a class still being defined
allocating an object of abstract class type %0
expected initializer
ambiguous cast from base %0 to derived %1:%2
ambiguous conversion of delete expression of type %0 to a pointer
ambiguous conversion from derived class %0 to base class %1:%2
constructor of %0 inherited from multiple base class subobjects
member %0 found in multiple base classes of different types
non-static member %0 found in multiple base-class subobjects of type %1:%2
ambiguous conversion from pointer to member of %select{base|derived}0 class %1 to pointer to member of %select{derived|base}0 class %2:%3
reference to %0 is ambiguous
multiple suitable %0 functions in %1
a type named %0 is hidden by a declaration in a different namespace
anonymous bit-field has negative width (%0)
width of anonymous bit-field (%0 bits) exceeds %select{width|size}1 of its type (%2 bit%s2)
anonymous property is not supported
anonymous %select{struct|union}0 can only contain non-static data members
member of anonymous %select{struct|union}0 redeclares %1
anonymous %select{struct|union}0 cannot contain a %select{private|protected}1 data member
functions cannot be declared in an anonymous %select{struct|union}0
static members cannot be declared in an anonymous %select{struct|union}0
types cannot be declared in an anonymous %select{struct|union}0
anonymous %select{structs|structs and classes}0 must be %select{struct or union|class}0 members
anonymous unions at namespace or global scope must be declared 'static'
anonymous union at class scope must not have a storage specifier
%select{x86|x86-64}0 'interrupt' attribute only applies to functions that have %select{a 'void' return type|only a pointer parameter optionally followed by an integer parameter|a pointer as the first parameter|a %2 type as the second parameter}1
interrupt service routine cannot be called directly
must explicitly describe intended ownership of an object array parameter
existing instance variable %1 for property %0 with %select{unsafe_unretained|assign}2 attribute must be __unsafe_unretained
cannot perform atomic operation on a pointer to type %0: type has non-trivial ownership
cannot capture __autoreleasing variable in a %select{block|lambda by copy}0
%select{__block variables|global variables|fields|instance variables}0 cannot have __autoreleasing ownership
incompatible types casting %0 to %1 with a %select{__bridge|__bridge_transfer|__bridge_retained}2 cast
cast of %select{Objective-C|block|C}0 pointer type %1 to %select{Objective-C|block|C}2 pointer type %3 cannot use %select{__bridge|__bridge_transfer|__bridge_retained}4
%select{cast|implicit conversion}0 of %select{Objective-C|block|C}1 pointer type %2 to %select{Objective-C|block|C}3 pointer type %4 requires a bridged cast
collection expression type %0 is a forward declaration
%select{implicit conversion|cast}0 of weak-unavailable object of type %1 to a __weak object of type %2
method implementation does not match its declaration
ARC forbids explicit message send of %0
ARC forbids %select{implementation|synthesis}0 of %1
ARC forbids use of %0 in a @selector
%select{|unsafe_unretained|strong|weak}1 property %0 may not also be declared %select{|__unsafe_unretained|__strong|__weak|__autoreleasing}2
%select{pointer|reference}1 to non-const type %0 with no explicit ownership
init methods must return a type related to the receiver type
method was declared as %select{an 'alloc'|a 'copy'|an 'init'|a 'new'}0 method, but its implementation doesn't match because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
no visible @interface for %0 declares the selector %1
no known %select{instance|class}1 method for selector %0
%select{implicit conversion|cast}0 of %select{%2|a non-Objective-C pointer type %2|a block pointer|an Objective-C pointer|an indirect pointer to an Objective-C pointer}1 to %3 is disallowed with ARC
multiple methods named %0 found with mismatched result, parameter type or attributes
'new' cannot allocate an array of %0 with no explicit ownership
explicit ownership qualifier on cast result has no effect
passing address of %select{non-local|non-scalar}0 object to __autoreleasing parameter for write-back
ARC forbids %select{Objective-C objects|blocks}0 in %select{struct|interface|union|<<ERROR>>|enum}1
ARC forbids synthesizing a property of an Objective-C object with unspecified ownership or storage attribute
performSelector names a selector which retains the object
pseudo-destructor destroys object of type %0 with inconsistently-qualified type %1
receiver %0 for class message is a forward declaration
receiver type %0 for instance message is a forward declaration
existing instance variable %1 for strong property %0 may not be %select{|__unsafe_unretained||__weak}2
thread-local variable has non-trivial ownership: type is %0
incompatible pointer types passing retainable parameter of type %0to a CF function expecting %1 type
class is incompatible with __weak references
the result of a delegate init call must be immediately returned or assigned to 'self'
cannot create __weak reference in file using manual reference counting
dereferencing a __weak pointer is not allowed due to possible null value caused by race condition, assign it to strong variable first
cannot create __weak reference because the current deployment target does not support weak references
assignment of a weak-unavailable object to a __weak object
synthesizing __weak instance variable of type %0, which does not support weak references
parameter may not be qualified with an address space
argument should be a value from %0 to %1
argument should be a multiple of %0
arithmetic on pointer to interface %0, which is not a constant size for this architecture and platform
invalid special register for builtin
array designator range [%0, %1] is empty
array designator value '%0' is negative
array designator cannot initialize non-array type %0
array designator index (%0) exceeds array bounds (%1)
cannot initialize array %diff{of type $ with array of type $|with different type of array}0,1
initializing wide char array with incompatible wide string literal
initializing wide char array with non-wide string literal
cannot initialize array %diff{of type $ with non-constant array of type $|with different type of array}0,1
array initializer must be an initializer list%select{| or string literal| or wide string literal}0
initializing char array with wide string literal
array size must be specified in new expressions
array of abstract class type %0
array section does not specify contiguous storage
ambiguous conversion of array size expression of type %0 to an integral or enumeration type
array size expression of type %0 requires explicit conversion to type %1
array size expression has incomplete class type %0
size of array has non-integer type %0
array size expression must have integral or %select{|unscoped }0enumeration type, not %1
variable length array must be bound in function definition
star modifier used outside of function prototype
%0 used in non-outermost array type derivation
%0 used in array declarator outside of function prototype
array is too large (%0 elements)
automatic variable qualified with an%select{| invalid}0 address space
bad type for named register variable
constraint '%0' expects an integer constant expression
asm operand has incomplete type %0
more than one input constraint matches the same output '%0'
register '%0' unsuitable for global register variables on this target
invalid input constraint '%0' in asm
invalid input size for constraint '%0'
invalid lvalue in asm input for constraint '%0'
invalid lvalue in asm output
invalid output constraint '%0' in asm
invalid output size for constraint '%0'
invalid type %0 in asm input for constraint '%1'
parameter references not allowed in naked functions
'this' pointer references not allowed in naked functions
reference to a %select{bit-field|vector element|global register variable}0 in asm %select{input|output}1 with a memory constraint '%2'
size of register '%0' does not match variable size
unsupported inline asm: input with type %diff{$ matching output with type $|}0,1
asm constraint has an unexpected number of alternatives: %0 vs %1
unknown register name '%0' in asm
type %0 in generic association compatible with previously specified type %1
type %0 in generic association incomplete
type %0 in generic association not an object type
type %0 in generic association is a variably modified type
use of @defs is not supported on this architecture and platform
address argument to atomic builtin must be a pointer (%0 invalid)
address argument to atomic builtin must be a pointer to integer, floating-point or pointer (%0 invalid)
address argument to atomic builtin must be a pointer to integer or pointer (%0 invalid)
address argument to atomic builtin must be a pointer to 1,2,4,8 or 16 byte type (%0 invalid)
address argument to load or store exclusive builtin must be a pointer to 1,2,4 or 8 byte type (%0 invalid)
atomic %select{load|store}0 requires runtime support that is not available for this target
address argument to bitwise atomic operation must be a pointer to %select{|atomic }0integer (%1 invalid)
address argument to atomic operation must be a pointer to _Atomic type (%0 invalid)
address argument to atomic operation must be a pointer to %select{|atomic }0integer or pointer (%1 invalid)
address argument to atomic operation must be a pointer to non-const _Atomic type (%0 invalid)
address argument to atomic operation must be a pointer to non-const type (%0 invalid)
address argument to atomic operation must be a pointer to a trivially-copyable type (%0 invalid)
atomic property of reference type %0 cannot have non-trivial assignment operator
_Atomic cannot be applied to %select{incomplete |array |function |reference |atomic |qualified |}0type %1 %select{||||||which is not trivially copyable}0
%0 attribute expression never produces a constant expression
the type %0 is already explicitly ownership-qualified
%0 attribute can only be applied to a %select{function|method}1 with an error parameter
%0 attribute with '%1' convention can only be applied to a %select{function|method}2 returning %select{an integral type|a pointer}3
tls_model must be "global-dynamic", "local-dynamic", "initial-exec" or "local-exec"
function type may not be qualified with an address space
multiple address spaces specified for type
address space is negative
address space is larger than the maximum supported (%0)
requested alignment must be %0 bytes or smaller
%0 attribute argument is invalid: %select{max must be 0 since min is 0|min must not be greater than max}1
%0 attribute must be greater than 0
%0 attribute requires parameter %1 to be %select{int or bool|an integer constant|a string|an identifier}2
%0 attribute parameter %1 is out of bounds
%0 attribute parameter %1 is out of bounds: %plural{0:no parameters to index into|1:can only be 1, since there is one parameter|:must be between 1 and %2}2
%0 attribute requires integer constant between %1 and %2 inclusive
%0 attribute requires %select{int or bool|an integer constant|a string|an identifier}1
invalid attribute argument %0 - expecting a vector or vectorizable scalar type
Neon vector size must be 64 or 128 bits
'cleanup' argument %select{|%1 |%1 }0is not a %select{||single }0function
'cleanup' function %0 parameter has %diff{type $ which is incompatible with type $|incompatible type}1,2
'cleanup' function %0 must take 1 parameter
'__declspec(dllexport)' cannot be applied to more than one default constructor in %0
attribute %q0 cannot be applied to a deleted function
lambda cannot be declared %0
attribute %q0 cannot be applied to member of %q1 class
%q0 must have external linkage when declared %q1
redeclaration of %q0 cannot add %q1 attribute
%q0 cannot be thread local when declared %q1
definition of dllimport data
dllimport cannot be applied to non-inline function definition
definition of dllimport static field not allowed
%0 attribute argument may only refer to a function parameter of integer type
%0 attribute is invalid for the implicit this argument
vector size not an integral multiple of component size
invalid vector element type %0
multiple garbage collection attributes specified for type
%0 attribute cannot be used with pointers to members
%0 attribute is not supported in %select{C|C++|Objective-C}1
%0 attribute is not supported on '%1'
%0 attribute can only be applied once per parameter
redeclaration of %0 must %select{not |}1have the 'overloadable' attribute
at most one overload for a given name may lack the 'overloadable' attribute
'overloadable' function %0 must have a prototype
%0 attribute only applies to%select{| constant}1 pointer arguments
'regparm' parameter must be between 0 and %0 inclusive
'regparm' is not valid on this platform
%0 attribute requires OpenCL version %1%select{| or above}2
%0 attribute requires a positive integral compile time constant expression
argument to 'section' attribute is not valid for this target: %0
'selectany' can only be applied to data items with external linkage
'sentinel' parameter 1 less than zero
'sentinel' parameter 2 not 0 or 1
vector size too large
%0 attribute takes at least %1 argument%s1
%0 attribute takes no more than %1 argument%s1
%0 attribute is not supported for this target
uuid attribute contains a malformed GUID
the vecreturn attribute can only be used on a POD (plain old data) class or structure (i.e. no virtual functions)
the vecreturn attribute can only be used on a class or structure with one member, which must be a vector
weak declaration cannot have internal linkage
weakref declaration of %0 must be in a global context
weakref declaration must have internal linkage
weakref declaration of %0 must also have an alias attribute
%0 attribute only applies to %select{functions|unions|variables and functions|functions and global variables|functions, variables, and Objective-C interfaces|functions and methods|parameters|functions, methods and blocks|functions, methods, and classes|functions, methods, and parameters|functions, methods, and global variables|classes|enums|variables|methods|fields and global variables|structs|parameters and typedefs|variables and typedefs|thread-local variables|variables and fields|variables, data members and tag types|types and namespaces|Objective-C interfaces|methods and properties|functions, methods, and properties|struct or union|struct, union or class|types|Objective-C instance methods|init methods of interface or class extension declarations|variables, functions and classes|functions, variables, classes, and Objective-C interfaces|Objective-C protocols|variables with static or thread storage duration|functions, methods, properties, and global variables|structs, unions, and typedefs|structs and typedefs|interface or protocol declarations|kernel functions|non-K&R-style functions|variables, enums, fields and typedefs|functions, methods, enums, and classes|structs, classes, variables, functions, and inline namespaces|variables, functions, methods, types, enumerations, enumerators, labels, and non-static data members|classes and enumerations|named declarations}1
%0 attribute %plural{0:takes no arguments|1:takes one argument|:requires exactly %1 arguments}1
zero vector size
%0 and %1 attributes are not compatible
cannot pass bit-field as __auto_type initializer in C
%select{'auto'|'decltype(auto)'|'__auto_type'|template arguments}0 deduced as %1 in declaration of %2 and deduced as %3 in declaration of %4
cannot deduce return type %0 from returned value of type %1
'%select{auto|decltype(auto)}0' in return type deduced as %1 here but deduced as %2 in earlier return statement
cannot deduce return type %0 for function with no return statements
cannot deduce return type from initializer list
cannot deduce return type %0 from omitted return expression
function %0 with deduced return type cannot be used before it is defined
function with deduced return type cannot be virtual
cannot use __auto_type with initializer list in C
'auto' return without trailing return type; deduced return types are a C++14 extension
new expression for type %0 contains multiple constructor arguments
new expression for type %0 has incompatible constructor argument of type %1
new expression for type %0 cannot use list-initialization
new expression for type %0 requires a constructor argument
%select{function with deduced return type|declaration with trailing return type}0 must be the only declaration in its group
%select{'auto'|'decltype(auto)'|'__auto_type'|use of %select{class template|function template|variable template|alias template|template template parameter|template}2 %3 requires template arguments; argument deduction}0 not allowed %select{in function prototype|in non-static struct member|in struct member|in non-static union member|in union member|in non-static class member|in interface member|in exception declaration|in template parameter until C++17|in block literal|in template argument|in typedef|in type alias|in function return type|in conversion function type|here|in lambda parameter|in type allocated by 'new'|in K&R-style function parameter|in template parameter|in friend declaration}1
'auto' variable template instantiation is not allowed
variable %0 with type %1 has incompatible initializer of type %2
cannot deduce actual type for variable %0 with type %1 from initializer list
initializer for variable %0 with type %1 contains multiple expressions
initializer for variable %0 with type %1 is empty
cannot deduce type for variable %1 with type %2 from %select{parenthesized|nested}0 initializer list
declaration of variable %0 with deduced type %1 requires an initializer
variable %0 declared with deduced type %1 cannot appear in its own initializer
return type of 'await_suspend' is required to be 'void' or 'bool' (have %0)
property implementation must have its declaration in the category %0
%select{const_cast||||C-style cast|functional-style cast}0 to %2, which is not a reference, pointer-to-object, or pointer-to-data-member
address of overloaded function %0 cannot be cast to type %1
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from bit-field lvalue to reference type %2
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2 is not allowed
cannot %select{||reinterpret_cast||C-style cast|}0 from member pointer type %1 to member pointer type %2 of different size
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2 casts away qualifiers
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from rvalue to reference type %2
%select{||reinterpret_cast||C-style cast|}0 from scalar %1 to vector %2 of different size
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2, which are not related by inheritance, is not allowed
%select{||reinterpret_cast||C-style cast|}0 from vector %1 to scalar %2 of different size
%select{||reinterpret_cast||C-style cast|}0 from vector %1 to vector %2 of different size
%0 is an incomplete type
%0 is not a class
%0 is not polymorphic
%0 is not a pointer
%0 is not a reference or pointer
%0 cannot be used as the type of a kernel parameter
cannot cast from lvalue of type %1 to rvalue reference type %2; types are not compatible
left hand operand to %0 must be a %select{|pointer to }1class compatible with the right hand operand, but is %2
right hand operand to %0 has non-pointer-to-member type %1
cannot allocate %select{function|reference}1 type %0 with new
%0 cannot be the name of a parameter
property implementation must be in a class or category implementation
property implementation must have its declaration in interface %0 or one of its extensions
bad receiver type %0
reinterpret_cast cannot resolve overloaded function %0 to type %1
reinterpret_cast of a %0 to %1 needs its address, which is not allowed
cast from pointer to smaller type %2 loses information
cannot cast from rvalue of type %1 to rvalue reference type %2; types are not compatible
cannot cast from type %1 to member pointer type %2
address of overloaded function %0 cannot be static_cast to type %1
cannot cast from type %1 to pointer type %2
%0 cannot be the name of a variable or data member
base class %0 has a flexible array member
unions cannot have base classes
base class initializer %0 names both a direct base class and an inherited virtual base class
constructor initializer %0 does not name a class
base specifier must name a class
%0 attribute cannot be applied to a base specifier
binding %0 cannot appear in the initializer of its own decomposition declaration
bit-field %0 has negative width (%1)
named bit-field %0 has zero width
width of bit-field %0 (%1 bits) exceeds %select{width|size}2 of its type (%3 bit%s3)
variable is not assignable (missing __block type specifier)
'extern' variable cannot have an initializer
__block attribute not allowed, only allowed on local variables
__block attribute not allowed on declaration with a variably modified type
non-void block should return a value
block cannot return %select{array|function}0 type %1
blocks support disabled - compile with -fblocks or %select{pick a deployment target that supports them|for OpenCL 2.0 or above}0
reference to non-static member function must be called%select{|; did you mean to call it with no arguments?}0
%select{string|character|boolean|numeric}0 literal must be prefixed by '@' in a collection
'break' statement not in loop or switch statement
first argument to __builtin_annotation must be an integer
second argument to __builtin_annotation must be a non-wide string constant
definition of builtin function %0
builtin functions must be directly called
function-style cast to a builtin type can only take one argument
argument to __builtin_longjmp must be a constant 1
__builtin_longjmp is not supported for the current target
%0 needs target feature %1
'%0' is only available in %1
__builtin_setjmp is not supported for the current target
this builtin is only available on x86-64 and aarch64 targets
%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature, not permitted in C++
calling %0 with incomplete return type %1
argument type %0 is incomplete
calling function with incomplete return type %0
cannot find suitable %select{getter|setter}0 for property %1
cannot form a pointer-to-member to member %0 of reference type %1
cannot pass object with interface type %0 by value through variadic %select{function|block|method|constructor}1
cannot pass object with interface type %1 by value to variadic %select{function|block|method|constructor}2; expected type from format string was %3
cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2
cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
__block variable %0 cannot be captured in a %select{lambda expression|captured statement}1
non-local lambda expression cannot have a capture-default
%0 in capture list does not name a variable
%0 can appear only once in a capture list
%0 cannot be captured because it does not have automatic storage duration
by-copy capture of value of abstract type %0
by-copy capture of variable %0 with incomplete type %1
%select{function|parameter}0 declared '[[carries_dependency]]' after its first declaration
'[[carries_dependency]]' attribute only allowed on parameter in a function declaration or lambda
'case' statement not in switch statement
operand of type %0 cannot be cast to a pointer type
pointer cannot be cast to type %0
cannot type cast @selector expression
cannot catch incomplete type %0
cannot catch pointer to incomplete type %0
cannot catch reference to incomplete type %0
@catch parameter is not a pointer to an interface type
cannot catch exceptions by rvalue reference
cannot catch variably modified type %0
cannot define %select{category|class extension}0 for undefined class %1
property declared in category %0 cannot be implemented in class implementation
function declared '%0' here was previously declared %select{'%2'|without calling convention}1
function with no prototype cannot use the %0 calling convention
variadic function cannot use %0 calling convention
CFString literal is not a string constant
circular inheritance between %0 and %1
cannot declare class extension for %0 after class implementation
base %0 is marked '%select{final|sealed}1'
property %0 is a class property; did you mean to access it with class '%1'?
%0 redeclared with '%1' access
property follows Cocoa naming convention for returning 'owned' objects
the type %0 is not a pointer to a fast-enumerable object
type of machine mode does not support base vector types
%select{block pointer|pointer|reference}0 to function type %select{%2 |}1cannot have '%3' qualifier
%select{variable|function}0 concept cannot be declared '%select{thread_local|inline|friend|constexpr}1'
concept declarations may only appear in namespace scope
%select{function|variable}0 concept cannot be %select{explicitly instantiated|explicitly specialized|partially specialized}1
'concept' cannot be applied on an %select{explicit instantiation|explicit specialization|partial specialization}0
'concept' can only appear on the definition of a function template or variable template
operands to conditional of types%diff{ $ and $|}0,1 are incompatible in ARC mode
conditional expression is ambiguous; %diff{$ can be converted to $ and vice versa|types can be convert to each other}0,1
conditional expression is ambiguous; %diff{$ and $|types}0,1 can be converted to several common types
vector condition type %0 and result type %1 do not have elements of the same size
vector condition type %0 and result type %1 do not have the same number of elements
%select{left|right}1 operand to ? is void, but %select{right|left}1 operand is of type %0
CUDA special function 'cudaConfigureCall' must have scalar return type
conflicting types for alias %0
instance variable %0 has conflicting bit-field width
conflicting instance variable names: %0 vs %1
instance variable %0 has conflicting type%diff{: $ vs $|}1,2
virtual function %0 has different calling convention attributes %diff{($) than the function it overrides (which has calling convention $)|than the function it overrides}1,2
conflicting super class name %0
conflicting types for %0
argument to %0 must be a constant integer
statement not allowed in constexpr %select{function|constructor}0
no return statement in constexpr function
constexpr constructor must initialize all members
destructor cannot be marked constexpr
function try block not allowed in constexpr %select{function|constructor}0
variables defined in a constexpr %select{function|constructor}0 must be initialized
variable of non-literal type %1 cannot be defined in a constexpr %select{function|constructor}0
%select{static|thread_local}1 variable not permitted in a constexpr %select{function|constructor}0
'main' is not allowed to be declared constexpr
constexpr can only be used in variable and function declarations
constexpr %select{function|constructor}1's %ordinal0 parameter type %2 is not a literal type
constexpr function's return type %0 is not a literal type
%select{non-constexpr declaration of %0 follows constexpr declaration|constexpr declaration of %0 follows non-constexpr declaration}1
non-void constexpr function %0 should return a value
declaration of constexpr static data member %0 requires an initializer
%select{class|struct|interface|union|enum}0 cannot be marked constexpr
constexpr union constructor does not initialize any member
constexpr variable cannot have non-literal type %0
constexpr variable %0 must be initialized by a constant expression
virtual function cannot be constexpr
constexpr %select{member function|constructor}0 not allowed in %select{struct|interface|class}1 with virtual base %plural{1:class|:classes}2
variably-modified type %0 cannot be used in a constexpr %select{function|constructor}1
copy constructor must pass its first argument by reference
constructor cannot be declared '%0'
constructor cannot be redeclared
constructor cannot have a return type
class extension has no primary class
'continue' statement not in loop statement
conversion function must be a non-static member function
conversion function cannot be redeclared
conversion function cannot have a return type
conversion function cannot convert to an array type
conversion function cannot convert to a function type
conversion function cannot be variadic
cannot specify any part of a return type in the declaration of a conversion function%select{; put the complete type after 'operator'|; use a typedef to declare a conversion to %1|; use an alias template to declare a conversion to %1|}0
conversion function cannot have any parameters
first two arguments to __builtin_convertvector must have the same number of elements
first argument to __builtin_convertvector must be a vector
second argument to __builtin_convertvector must be a vector type
'&' must precede a capture when the capture default is '='
std::experimental::coroutine_handle missing a member named '%0'
'%1' cannot be used in %select{a constructor|a destructor|a copy assignment operator|a move assignment operator|the 'main' function|a constexpr function|a function with a deduced return type|a varargs function}0
Objective-C methods as coroutines are not yet supported
'%0' cannot be used outside a function
%0: 'get_return_object_on_allocation_failure()' must be a static member function
the coroutine promise type %0 declares both 'return_value' and 'return_void'
%0 is required to have a non-throwing noexcept specification when the promise type declares 'get_return_object_on_allocation_failure()'
the coroutine promise type %0 must declare either 'return_value' or 'return_void'
this function cannot be a coroutine: %0 is an incomplete type
%0 is required to declare the member 'unhandled_exception()'
this function cannot be a coroutine: missing definition of specialization %q0
'%0' cannot be used in an unevaluated context
return type of virtual function %3 is not covariant with the return type of the function it overrides (ambiguous conversion from derived class %0 to base class %1:%2)
invalid covariant return for virtual function: %1 is a %select{private|protected}2 base class of %0
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is incomplete)
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is not derived from %2)
return type of virtual function %0 is not covariant with the return type of the function it overrides (class type %1 is more qualified than class type %2
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 has different qualifiers than %2)
%select{constructor|destructor}1 %0 must not return void expression
cannot use '%0' in %select{__device__|__global__|__host__|__host__ __device__}1 function
__shared__ variable %0 cannot be 'extern'
__shared__ local variables not allowed in %select{__device__|__global__|__host__|__host__ __device__}0 functions
__constant__ variables must be global
%select{__device__|__global__|__host__|__host__ __device__}0 function %1 cannot overload %select{__device__|__global__|__host__|__host__ __device__}2 function %3
constexpr function '%0' without __host__ or __device__ attributes cannot overload __device__ function with same signature.  Add a __host__ attribute, or build with -fno-cuda-host-device-constexpr.
cannot use variable-length arrays in %select{__device__|__global__|__host__|__host__ __device__}0 functions
module name '%0' specified on command line does not match name of module
%select{alias|ifunc}0 definition is part of a cycle
dealloc return type must be correctly specified as 'void' under ARC, instead of %0
GNU decimal type extension not supported
%0 attribute cannot be applied to a statement
'%0' declared as an array with a negative size
declarator requires an identifier
'__declspec(thread)' applied to variable that already has a thread-local storage specifier
'decltype(auto)' cannot be combined with other type specifiers
cannot form %select{pointer to|reference to|array of}0 'decltype(auto)'
'decltype(auto)' can only be used as a return type in a function declaration
cannot deduce 'decltype(auto)' from initializer list
'decltype(auto)' not allowed here
'decltype' cannot be used to name a declaration
cannot decompose members of ambiguous base class %1 of %0:%2
cannot decompose class type %0 because it has an anonymous %select{struct|union}1 member
decomposition declaration not permitted in this context
cannot decompose class type %1: %select{its base classes %2 and|both it and its base class}0 %3 have non-static data members
cannot decompose members of non-public base class %1 of %0
cannot decompose non-public member %0 of %1
decomposition declaration must be the only declaration in its group
decomposition declaration cannot be declared with parentheses
decomposition declaration %0 requires an initializer
decomposition declaration cannot be declared %plural{1:'%1'|:with '%1' specifiers}0
cannot decompose this type; 'std::tuple_element<%0>::type' does not name a type
cannot decompose this type; 'std::tuple_size<%0>::value' is not a valid integral constant expression
decomposition declaration template not supported
decomposition declaration cannot be declared with type %0; declared type must be 'auto' or reference to 'auto'
cannot decompose %select{union|non-class, non-array}1 type %2
type %0 decomposes into %2 elements, but %select{only |}3%1 names were provided
cannot decrement expression of type bool
cannot %select{form pointer to|form reference to|form array of|form function returning|use parentheses when declaring variable with}0 deduced class template specialization type
ambiguous deduction for template arguments of %0
no viable constructor or deduction guide for deduction of template arguments of %0
class template argument deduction for %0 selected a deleted constructor
class template argument deduction for %0 selected an explicit %select{constructor|deduction guide}1 for copy-list-initialization
template %0 has no definition and no %select{|viable }1deduction guides for deduction of template arguments
%select{<error>|function template|variable template|alias template|template template parameter|template}0 %1 requires template arguments; argument deduction only allowed for class templates
deduced non-type template argument does not have the same type as the corresponding template parameter%diff{ ($ vs $)|}0,1
deduced return types are a C++14 extension
deduced type %1 of deduction guide is not %select{|written as }2a specialization of template %0
deduction guide cannot have a function definition
deduction guide is %select{not |}0declared 'explicit' but previous declaration was%select{ not|}0
deduction guide cannot be declared '%0'
cannot specify deduction guide for %select{<error>|function template|variable template|alias template|template template parameter|dependent template name}0 %1
deduction guide declaration without trailing return type
deduction guide cannot be %select{explicitly instantiated|explicitly specialized}0
deduction guide template contains %select{a template parameter|template parameters}0 that cannot be deduced
cannot specify any part of a return type in the declaration of a deduction guide
deduction guide must be declared in the same scope as template %q0
exception specifications of %select{return|argument}0 types differ
default template argument in a class template partial specialization
addition of default argument on redeclaration makes this constructor a %select{default|copy|move}0 constructor
default initialization of an object of const type %0%select{| without a user-provided default constructor}1
'default' statement not in switch statement
the parameter for an explicitly-defaulted copy assignment operator must be an lvalue reference type
the parameter for this explicitly-defaulted copy %select{constructor|assignment operator}0 is const, but a member or base requires it to be non-const
the parameter for an explicitly-defaulted move %select{constructor|assignment operator}0 may not be const
an explicitly-defaulted %select{|copy |move }0constructor cannot have default arguments
an explicitly-defaulted %select{copy|move}0 assignment operator may not have 'const'%select{, 'constexpr'|}1 or 'volatile' qualifiers
explicitly-defaulted %select{copy|move}0 assignment operator must return %1
an explicitly-defaulted %select{|copy |move }0constructor cannot be variadic
the parameter for an explicitly-defaulted %select{<<ERROR>>|copy constructor|move constructor|copy assignment operator|move assignment operator|<<ERROR>>}0 may not be volatile
definition of explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}0
definition of implicitly declared %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}1
delegating constructors are permitted only in C++11
an initializer for a delegating constructor must appear alone
converting delete expression from type %0 to type %1 invokes an explicit conversion function
deleting incomplete class type %0; no conversions to pointer type
cannot delete expression of type %0
deleted definition must be first declaration
attempt to use a deleted function
constructor inherited by %0 from base class %1 is implicitly deleted
'main' is not allowed to be deleted
deleted function %0 cannot override a non-deleted function
typename specifier refers to %select{class template|function template|variable template|alias template|template template parameter|template}0 member in %1; argument deduction not allowed here
nested name specifier for a declaration cannot depend on a template parameter
type of specialized non-type template argument depends on a template parameter of the partial specialization
%select{declaration|definition}0 of %select{struct|interface|union|class|enum}1 in a dependent scope
non-type template argument specializes a template parameter with dependent type %0
dereference of pointer to incomplete type %0
designator in initializer for scalar type %0
designator into flexible array member subobject
destructor cannot be declared '%0'
expected the class name after '~' to name a destructor
destructor type %0 in object destruction expression does not match the type %1 of the object being destroyed
expected the class name after '~' to name the enclosing class
destructor must be a non-static member function
destructor cannot be redeclared
destructor cannot have a return type
destructor cannot be declared as a template
destructor cannot be declared using a %select{typedef|type alias}1 %0 of the class name
destructor cannot be variadic
destructor cannot have any parameters
within a %select{__device__|__global__|__host__|__host__ __device__}0 function, only __shared__ variables may be marked 'static'
invalid diagnostic type for 'diagnose_if'; use "error" or "warning" instead
conflicting asm label
declaration of %0 has a different language linkage
conflicting pass_object_size attributes on parameters
virtual function %0 has a different return type %diff{($) than the function it overrides (which has return type $)|than the function it overrides}1,2
dimension expression does not evaluate to a constant unsigned int
exception specifications are not allowed beyond a single level of indirection
cannot cast %select{private|protected}2 base class %1 to %0
reference to %select{destructor|pseudo-destructor}0 must be called%select{|; did you mean to call it with no arguments?}1
reimplementation of category %1 for class %0
reimplementation of class %0
base class %0 specified more than once as a direct base class
duplicate case value '%0'
duplicate case value: '%0' and '%1' both equal '%2'
duplicate interface definition for class %0
instance variable is already declared
synthesized properties %0 and %1 both claim instance variable %2
definition with same mangled name as another definition
duplicate member %0
duplicate declaration of method %0
property has a previous declaration
dynamic property cannot have instance variable specification
dynamic initialization is not supported for __device__, __constant__, and __shared__ variables.
catch-all handler must come last
ISO C requires a named parameter before '...'
only function and template parameters can be parameter packs
scalar initializer cannot be empty
reference to %select{|scoped }0enumeration must use 'enum' not 'enum class'
non-integral type %0 is an invalid underlying type
mode %0 is not supported for enumeration types
enumeration previously declared with %select{non|}0fixed underlying type
enumeration previously declared as %select{un|}0scoped
enumeration redeclared with different underlying type %0 (was %1)
enumerator %0 does not exist in instantiation of %1
enumerator value is not representable in the underlying type %0
enumerator value %0 is not representable in the underlying type %1
the event_t type can only be used with __private address space qualifier
exception specification of %0 uses itself
exception specifications are not allowed in %select{typedefs|type aliases}0
exception specification is not available until end of class definition
cannot use '%0' with exceptions disabled
excess elements in %select{array|vector|scalar|union|struct}0 initializer
excess elements in char array initializer
%0 is not a class%select{ or namespace|, namespace, or enumeration}1
kernel must have void return type
partial ordering for explicit instantiation of %0 is ambiguous
explicit instantiation cannot be 'constexpr'
explicit instantiation refers to static data member %q0 that is not an instantiation
explicit instantiation declaration (with 'extern') follows explicit instantiation definition (without 'extern')
duplicate explicit instantiation of %0
explicit instantiation of %0 in class scope
explicit instantiation cannot be 'inline'
explicit instantiation refers to member function %q0 that is not an instantiation
explicit instantiation of %0 must occur at global scope
explicit instantiation of non-templated type %0
explicit instantiation of %0 does not refer to a function template, variable template, member function, member class, or static data member
explicit instantiation of typedef %0
explicit instantiation of %0 not in a namespace enclosing %1
explicit instantiation declaration requires a name
explicit instantiation cannot have a storage class
explicit instantiation of undefined function template %0
explicit instantiation of undefined %select{member class|member function|static data member}0 %1 of class template %2
explicit instantiation of undefined variable template %q0
explicit instantiation of %q0 must occur in namespace %1
explicit instantiation of %q0 must specify a template argument list
'explicit' can only be applied to a constructor or conversion function
'explicit' can only appear on non-static member functions
'explicit' can only be specified inside the class definition
explicit specialization has extraneous, inconsistent storage class '%select{none|extern|static|__private_extern__|auto|register}0'
export declaration can only be used within a module interface unit after the module declaration
export declaration appears within another export declaration
%select{case value|enumerator value|non-type template argument|array size|constexpr if condition}0 is not a constant expression
expression is not an %select{integer|integral}0 constant expression
expression is not a string literal
vector component access exceeds type %0
illegal vector component name '%0'
declaration of %1 %select{with C language linkage|in global scope}0 conflicts with declaration %select{in global scope|with C language linkage}0
extern declaration of %0 follows non-extern declaration
control reaches end of non-void block
fallthrough annotation does not directly precede switch label
fallthrough annotation is outside switch statement
%0 attribute is only allowed on empty statements
field %0 declared as a function
field designator cannot initialize a %select{non-struct, non-union|non-class}0 type %1
field designator %0 does not refer to a non-static data member
field designator %0 does not refer to any field in type %1
field designator %0 does not refer to any field in type %1; did you mean %2?
field has incomplete type %0
data member instantiated with function type %0
field may not be qualified with an address space
filter expression type should be an integral value not %0
declaration of %0 overrides a '%select{final|sealed}1' function
first argument to __builtin_call_with_static_chain must not be a block call
first argument to __builtin_call_with_static_chain must not be a builtin call
first argument to __builtin_call_with_static_chain must be a non-member call expression
first argument to __builtin_call_with_static_chain must not be a pseudo-destructor call
first argument to 'va_arg' is of type %0 and not 'va_list'
flexible array member %0 not allowed in otherwise empty %select{struct|interface|union|class|enum}1
flexible array member %0 of type %1 with non-trivial destruction
initialization of flexible array member is not allowed
flexible array requires brace-enclosed initializer
flexible array member %0 in a union is not allowed
flexible array member %0 not allowed in %select{struct|interface|union|class|enum}1 which has a virtual base class
expression not permitted as operand of fold expression
unary fold expression has empty expansion for operator '%0' with no fallback value
binary fold expression has unexpanded parameter packs in both operands
cannot use type %0 as a range
invalid range expression of type %0; did you mean to dereference it with '*'?
cannot use incomplete type %0 as a range
invalid range expression of type %0; no viable '%select{begin|end}1' function available
cannot use type %0 as an iterator
range type %0 has '%select{begin|end}1' member but no '%select{end|begin}1' member
loop variable %0 may not be declared %select{'extern'|'static'|'__private_extern__'|'auto'|'register'|'constexpr'}1
format attribute cannot specify the implicit this argument as the format string
format argument not %0
format attribute requires variadic function
function does not return %0
strftime format attribute requires 3rd parameter to be 0
ISO C++ forbids forward references to 'enum' types
attempting to use the forward class %0 as superclass of %1
friend declaration of %0 does not match any declaration in %1
'%0' is invalid in friend declarations
friend declaration specifying a default argument must be a definition
friend declaration specifying a default argument must be the only declaration
friend function cannot be defined in a local class
friends cannot be members of the declaring class
'friend' must appear first in a non-function declaration
incomplete result type %0 in function definition
function cannot return %select{array|function}0 type %1
function cannot return qualified void type %0
function declared with %0 attribute was previously declared without the %0 attribute
declared return type of function concept must be 'bool'
function concept cannot have exception specification
function concept declaration must be a definition
function concept cannot have any parameters
%0 marked 'override' but does not override any member functions
always_inline function %1 requires target feature '%2', but would be inlined into function %0 that is compiled without support for '%2'
type %0 of function parameter pack does not contain any unexpanded parameter packs
cannot specialize a function %0 within class scope
function template partial specialization is not allowed
function template specialization %0 ambiguously refers to more than one function template; explicitly specify%select{| additional}1 template arguments to identify a particular function template
no function template matches function template specialization %0
weak attribute declared on a __strong type property in GC mode
controlling expression type %0 compatible with %1 generic association types
controlling expression type %0 not compatible with any generic association type
no getter method for read from property
call to global function %0 not configured
cannot jump from this goto statement to its label
cannot jump from this goto statement to label %0 inside an inline assembly block
half precision constant requires cl_khr_fp16
type argument of iboutletcollection attribute cannot be a builtin type
invalid type %0 as argument of iboutletcollection attribute
ambiguous conversion from type %0 to an integral or unscoped enumeration type
integral constant expression requires explicit conversion from %0 to %1
integral constant expression has incomplete class type %0
integral constant expression must have integral or unscoped enumeration type, not %0
integer constant expression evaluates to value %0 that cannot be represented in a %1-bit %select{signed|unsigned}2 integer type
identifier %0 in object destruction expression does not name a type
a parameter list without types is only allowed in a function definition
ifunc resolver function must have no parameters
ifunc resolver function must return a pointer
illegal operation on Objective-C container subscripting
array has incomplete element type %0
'%0' declared as array of %1
'%0' declared as array of functions of type %1
'%0' declared as array of references of type %1
'%0' does not point into a class
'%0' declared as a member pointer to a reference of type %1
'%0' declared as a member pointer to void
'%0' declared as a pointer to a reference of type %1
illegal initializer (only variables can be initialized)
illegal initializer type %0
Objective-C message has incomplete result type %0
illegal qualifiers on @catch parameter
%select{anonymous struct|union}0 member %1 has a non-trivial %select{constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2
imaginary types are not supported
std::nothrow was not found; include <new> before defining a coroutine which uses get_return_object_on_allocation_failure()
initializer for aggregate with no elements requires explicit braces
implicit instantiation of undefined member %0
cannot initialize object parameter of type %0 with an expression of type %1
%0 type was not found; include <experimental/coroutine> before defining a coroutine
this function cannot be a coroutine: %0 is not a class
this function cannot be a coroutine: %q0 has no member named 'promise_type'
cannot deduce type of initializer list because std::initializer_list was not found; include <initializer_list>
static data member of type %0 must be initialized out of line
default member initializer for %0 uses itself
in-class initializer for static data member of type %0 requires 'constexpr' specifier
non-const static data member must be initialized out of line
in-class initializer for static data member is not a constant expression
default member initializer for %1 needed within definition of enclosing class %0 outside of member functions
static const volatile data member must be initialized out of line
target exception specification is not superset of source
API notes replacement type %0 has a different size from original type %1
base class has incomplete type
%select{|pointer to |reference to }0incomplete type %1 is not allowed in exception specification
member access into incomplete type %0
incomplete type %0 named in nested name specifier
incomplete type in call to object of type %0
incomplete receiver type %0
cannot synthesize property %0 with incomplete type %1
incomplete type %0 where a complete type is required
'@encode' of incomplete type %0
incomplete type %0 used in type trait expression
'typeid' of incomplete type %0
inconsistent number of instance variables specified
defaulted definition of %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator}0 is not constexpr
exception specification of explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 does not match the calculated one
number of elements must be either one or match the size of the vector
cannot %select{decrement|increment}0 expression of enum type %1
cannot jump from this indirect goto statement to one of its possible targets
indirect goto in function with no address-of-label expressions
cannot deduce type for lambda capture %0 from initializer of type %2
cannot deduce type for lambda capture %0 from initializer list
initializer for lambda capture %0 contains multiple expressions
initializer missing for lambda capture %0
cannot deduce type for lambda capture %1 from %select{parenthesized|nested}0 initializer list
cannot initialize %select{a variable|a parameter|return object|an exception object|a member subobject|an array element|a new value|a value|a base class|a constructor delegation|a vector element|a block element|a block element|a complex element|a lambda capture|a compound literal initializer|a related result|a parameter of CF audited function}0 %diff{of type $ with an %select{rvalue|lvalue}2 of type $|with an %select{rvalue|lvalue}2 of incompatible type}1,3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}5 vs %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}6)|: different exception specifications}4
initializer element is not a compile-time constant
cannot create object of function type %0
initialization of incomplete type %0
%select{|non-aggregate }0type %1 cannot be initialized with an initializer list
init methods must return an object pointer type, not %0
initialization of non-aggregate type %0 with an initializer list
cannot initialize Objective-C class type %0
can only use 'init_priority' attribute on file-scope definitions of objects of class type
reference member of type %0 uninitialized
initializer-string for char array is too long
inline declaration of %0 follows non-inline definition
inline declaration of %0 not allowed in block scope
'main' is not allowed to be declared inline
non-inline namespace cannot be reopened as inline
'inline' can only appear on functions%select{| and non-local variables}0
invalid block pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
integer sequences must have integral element type
integer sequences must have non-negative sequence length
'internal_linkage' attribute does not appear on the first declaration of %0
%plural{[0,2]:must use a qualified name when declaring|3:cannot declare}0 a %select{constructor|destructor|conversion operator|deduction guide}0 as a friend
invalid use of a cast in a inline asm context requiring an l-value: remove the cast or build with -fheinous-gnu-extensions
value '%0' out of range for constraint '%1'
invalid reinterpretation: sizes of %0 and %1 must match
%0 attribute cannot be applied to virtual functions
interface type cannot inherit from %select{'struct|non-public 'interface|'class}0 %1'
collection element of type %0 is not an Objective-C object
'_Complex %0' is invalid
%select{function parameter|typedef|non-static data member}0 cannot be constexpr
non-static data member cannot be constexpr%select{; did you intend to make it %select{const|static}0?|}1
constexpr variable declaration must be a definition
invalid conversion between ext-vector type %0 and %1
invalid conversion between vector type %0 and integer type %1 of different size
invalid conversion between vector type %0 and scalar type %1
invalid conversion between vector type%diff{ $ and $|}0,1 of different size
invalid cpu feature string for builtin
cannot combine with previous '%0' declaration specifier
definition or redeclaration of %0 cannot name the global scope
definition or redeclaration of %0 not allowed inside a block
definition or redeclaration of %0 not allowed inside a function
cannot define or redeclare %0 here because namespace %1 does not enclose namespace %2
cannot create a non-constant pointer to member function
invalid use of incomplete type %0
%select{data member |non-public member function |static member function |user-declared constructor|user-declared destructor|operator |nested class }0%1 is not permitted within an interface type
invalid use of member %0 in static member function
incompatible constant for this __builtin_neon function
invalid use of non-static data member %0
%0 is not a valid literal type for NSNumber
invalid PCS type
'__pixel' must be preceded by '__vector'.  '%0' declaration specifier not allowed here
%0 is not a valid property name (accessing an object of type %1)
invalid protocol qualifiers on non-ObjC type
'%0' qualifier is not allowed on a constructor
'%0' qualifier is not allowed on a destructor
%select{non-member function|static member function|deduction guide}0 %select{of type %2 |}1cannot have '%3' qualifier
receiver type %0 is not an Objective-C class
'super' is only valid in a method body
'%0' cannot be signed or unsigned
invalid use of '__super', this keyword can only be used inside class or member function scope
invalid use of 'this' outside of a non-static member function
'%0' is only allowed on variable declarations
the %0 type cannot be used to declare a program scope variable
an array type is not allowed here
a function type is not allowed here
type %2 of %select{explicit instantiation|explicit specialization|partial specialization|redeclaration}0 of %1 does not match expected type %3
cannot use '%0' with '__vector bool'
cannot combine with previous '%0' declaration specifier. '__vector' must be first
use of 'double' with '__vector' requires VSX support to be enabled (available on POWER7 or later)
cannot use 'float' with '__vector'
cannot use 'long' with '__vector'
cannot use 'long double' with '__vector'
use of 'long long' with '__vector bool' requires VSX support (available on POWER7 or later) or extended Altivec support (available on POWER8 or later) to be enabled
'%select{|short|long|long long}0 %1' is invalid
property %0 not found on object of type %1; did you mean to access instance variable %2?
property %0 attempting to use instance variable %1 declared in super class %2
instance variables cannot be of reference type
instance variable %0 accessed in class method
kernel call to non-global function %0
kernel function %0 must be a free function or static member function
kernel function type %0 must have void return type
pointer arguments to kernel functions must reside in '__global', '__constant' or '__local' address space
unnamed variable cannot be implicitly captured in a lambda expression
lambda expression in default argument cannot capture any entity
variable %0 with flexible array member cannot be captured in a lambda expression
cannot assign to a variable captured by copy in a non-mutable lambda
variable %0 cannot be implicitly captured in a lambda with no capture-default specified
a lambda expression may not appear inside of a constant expression
incomplete result type %0 in lambda expression
cannot deduce lambda return type from initializer list
lambda expression in an unevaluated operand
string literal in language linkage specifier cannot have an encoding-prefix
unknown linkage language
cannot apply asm label to %select{variable|function}0 after its first use
cannot initialize %select{non-class|reference}0 type %1 with a parenthesized initializer list
non-template literal operator must have one or two parameters
literal operator cannot have a default argument
literal operator must have C++ linkage
non-namespace scope '%0' cannot have a literal operator member
parameter of literal operator must have type 'unsigned long long', 'long double', 'char', 'wchar_t', 'char16_t', 'char32_t', or 'const char *'
literal operator %0 must be in a namespace or global scope
invalid literal operator parameter type %0, did you mean %1?
template parameter list for literal operator must be either 'char...' or 'typename T, T...'
literal operator template cannot have any parameters
'__local' variable cannot have an initializer
%select{non-const|volatile}0 lvalue reference to type %1 cannot bind to an initializer list temporary
%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a temporary of type $|cannot bind to incompatible temporary}1,2
%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a value of unrelated type $|cannot bind to a value of unrelated type}1,2
rvalue reference %diff{to type $ cannot bind to lvalue of type $|cannot bind to incompatible lvalue}0,1
%select{unknown|unsupported}0 machine mode %1
%select{first|second|third|fourth}0 parameter of 'main' (%select{argument count|argument array|environment|platform-specific data}0) must be of type %1
main cannot be declared as global variable
'main' must return 'int'
too many parameters (%0) for 'main': must be 0, 2, or 3
%0 cannot be a template
std::experimental::coroutine_handle must be a class template
'std::experimental::coroutine_traits' must be a class template
std::initializer_list must be a class template with a single type parameter
std::nothrow must be a valid variable declaration
control may reach end of non-void block
member initializer %0 does not name a non-static data member or base class
initializer %0 does not name a non-static data member or base class; did you mean the %select{base class|member}1 %2?
call to non-static member function without an object argument
out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1
out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1; did you mean %3?
return type of out-of-line definition of %q0 differs from that in the declaration
out-of-line definition of %0 from class %1 without definition
extra qualification on member %0
member function %0 not viable: 'this' argument has type %1, but function is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}2
initializer on function does not look like a pure-specifier
member %0 has the same name as its class
no member %0 in %1; it has not yet been instantiated
non-friend class member %0 cannot have a qualified name
class member cannot be redeclared
multiple overloads of %0 instantiate to the same signature %1
base of member reference is a function; perhaps you meant to call it%select{| with no arguments}0?
member pointer refers into non-class type %0
conversion from pointer to member of class %0 to pointer to member of class %1 via virtual base %2 is not allowed
%select{instance|class}1 method %0 not found ; did you mean %2?
exception specification in declaration does not match previous declaration
exception specification in explicit instantiation does not match instantiated one
inheritance model does not match %select{definition|previous declaration}0
uuid does not match previous declaration
visibility does not match previous declaration
instance variables may not be placed in %select{categories|class extension}0
missing actual type specifier for pipe
string literal must be prefixed by '@' 
%select{constructor for %1 must explicitly initialize the|implicit default constructor for %1 must explicitly initialize the|cannot use constructor inherited from base class %4;}0 %select{base class|member}2 %3 %select{which|which|of %1}0 does not have a default constructor
%0 is missing exception specification '%1'
missing context for method declaration
missing '[' at start of message send expression
missing context for property implementation declaration
property implementation in a category with no category declaration
synthesized property %0 must either be named the same as a compatible instance variable or must explicitly name an instance variable
C++ requires a type specifier for all declarations
cannot use C++ 'try' in the same function as SEH '__try'
mode attribute only supported for integer and floating-point types
type of machine mode does not match type of base type
'module' declaration found while building module from module map
@import of module '%0' in implementation of '%1'; use #import
import of module '%0' appears within %1
missing 'export' specifier in module declaration while building module interface
%select{local variable|parameter|typedef}0 %1 cannot be declared __module_private__
local %select{struct|interface|union|class|enum}0 cannot be declared __module_private__
%select{template|partial|member}0 specialization cannot be declared __module_private__
import of module '%0' appears within same top-level module '%1'
%select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from module '%2' before it is required
missing '#include %3'; %select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from module '%2' before it is required
%select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from one of the following modules before it is required:%2
'__leave' statement not in __try block
'__builtin_ms_va_start' used in System V ABI function
multiple initializations given for base %0
multiple default labels in one switch
virtual function %q0 has more than one final overrider in %1
multiple initializations given for non-static member %0
initializing multiple members of union
'mutable' and 'const' cannot be mixed
'mutable' cannot be applied to functions
'mutable' can only be applied to member variables
'mutable' cannot be applied to references
you need to include <guiddef.h> before using the '__uuidof' operator
you need to include <typeinfo> before using the 'typeid' operator
lookup of %0 in member access expression is ambiguous
%0 cannot appear before '::' because it is not a class%select{ or namespace|, namespace, or enumeration}1; did you mean ':'?
type %0 cannot be used prior to '::' because it has no members
%select{call to non-static member function|use of non-static data member}0 %2 of %1 from nested type %3
nested redefinition of %0
'abi_tag' %0 missing in original declaration
array 'new' cannot have initialization arguments
only the first dimension of an allocated array may have dynamic size
cannot allocate array of 'auto'
allocation of incomplete type %0
no %select{getter|setter}0 defined for property %1
invalid use of '__super', %0 has no base classes
cannot use dynamic_cast with -fno-rtti
no matching function found in local scope
no matching function %0 found in local scope; did you mean %3?
no member named %0 in %1
no member named %0 in %1; did you mean to use '->' instead of '.'?
no member named %0 in %1; did you mean %select{|simply }2%3?
no template named %0 in %1
no template named %0 in %1; did you mean %select{|simply }2%3?
cannot find interface declaration for %0
expression is not assignable
no suitable member %0 in %1
no @interface declaration found in class messaging of %0
no template named %0
no template named %0; did you mean %1?
cannot use typeid with -fno-rtti
argument to noexcept specifier must be a constant expression
a getter method is needed to perform a compound assignment on a property
no getter method %1 for %select{increment|decrement}0 of property
non-ASM statement in naked function is not supported
non-deleted function %0 cannot override a deleted function
non-extern declaration of %0 follows extern declaration
declaration of non-local variable in 'for' loop
non-static declaration of %0 follows static declaration
member %0 of %1 is not a template; did you mean %select{|simply }2%3?
%0 does not name a template but is followed by template arguments
%0 does not name a template but is followed by template arguments; did you mean %1?
non-thread-local declaration of %0 follows thread-local declaration
template argument / label address difference / what did you expect?
non-type template argument refers to subobject '%0'
qualified name refers into a specialization of %select{function|variable}0 template %1
non-type template parameter %0 with type %1 has incompatible initializer of type %2
non-variable declaration in 'for' loop
%0 is not virtual and cannot be declared pure
block pointer to non-function type is invalid
non-static data member defined out-of-line
address argument to nontemporal builtin must be a pointer (%0 invalid)
address argument to nontemporal builtin must be a pointer to integer, float, pointer, or a vector of such types (%0 invalid)
block declared 'noreturn' should not return
lambda declared 'noreturn' should not return
function declared '[[noreturn]]' after its first declaration
'_Noreturn' can only appear on functions
%select{assignment to readonly property|no setter method %1 for assignment to property}0
%select{%select{increment|decrement}1 of readonly property|no setter method %2 for %select{increment|decrement}1 of property}0
cannot specialize a %select{dependent template|template template parameter}0
type %0 is not a direct or virtual base of %1
call to function %0 that is neither visible in the template definition nor found by argument-dependent lookup
anonymous bit-field has non-integral type %0
bit-field %0 has non-integral type %1
no %select{struct|interface|union|class|enum}0 named %1 in %2
%0 attribute only applies to %select{Objective-C object|pointer|pointer-to-CF-pointer}1 parameters
overriding method has mismatched ns_consumed attribute on its parameter
domain argument %0 does not refer to global constant
ns_error_domain attribute only valid on %select{enums, structs, and unions|enums, structs, unions, and classes}0
domain argument must be an identifier
'NSObject' attribute is for pointer types only
overriding method has mismatched ns_returns_%select{not_retained|retained}0 attributes
nullability keyword %0 cannot be applied to multi-level pointer type %1
nullability specifier %0 cannot be applied to non-pointer type %1
array of interface %0 is invalid (probably should be an array of pointers)
parameter of %0 attribute must be a single name of an Objective-C %select{class|protocol}1
attribute %0 can only be applied to @protocol definitions, not forward declarations
parameter of %0 attribute must be 'id' when used on a typedef
'objc_bridge(id)' is only allowed on structs and typedefs of void pointers
could not find Objective-C class %0 to convert %1 to %2
%0 must be name of an Objective-C class to be able to convert %1 to %2
%0 must be explicitly converted to %1; use %select{%objcclass2|%objcinstance2}3 method for this conversion
CF object of type %0 is bridged to %1, which is not an Objective-C class
Objective-C declarations may only appear in global scope
cannot use '%0' with Objective-C exceptions disabled
illegal type %0 used in a boxed expression
incomplete type %0 used in a boxed expression
Objective-C index expression has incomplete class type %0
method for accessing %select{dictionary|array}1 element must have Objective-C object return type instead of %0
'__kindof' specifier cannot be applied to non-object type %0
'__kindof' type specifier must precede the declarator
literal construction method %0 has incompatible signature
%0 %select{parameter|return}1 type is unsupported; support for vector types for this target is introduced in %2
indexing expression is invalid because subscript type %0 has multiple type conversion functions
non-trivially copyable type %0 cannot be used in a boxed expression
ObjectiveC object of type %0 is bridged to %1, which is not valid CF object
cannot assign to class object (%0 invalid)
cannot catch an Objective-C object by value
%select{extension|category}0 of non-parameterized class %1 cannot have type parameters
forward declaration of non-parameterized class %0 cannot have type parameters
class %0 previously declared with type parameters
objc_precise_lifetime only applies to retainable types; type here is %0
property attributes '%0' and '%1' are mutually exclusive
property with '%0' attribute must be of object type
objc_root_class attribute may only be specified on a root class declaration
cannot implement a category for class %0 that is only visible via the Objective-C runtime
cannot implement subclass %0 of a superclass %1 that is only visible via the Objective-C runtime
%select{dictionary|array}1 subscript base type %0 is not an Objective-C object
method object parameter type %0 is not object type
method index parameter type %0 is not integral type
method key parameter type %0 is not object type
expected method to %select{read|write}1 %select{dictionary|array}2 element not found on object of type %0
cannot assign to this %select{dictionary|array}1 because assigning method's 2nd parameter of type %0 is not an Objective-C pointer type
indexing expression is invalid because subscript type %0 is not an Objective-C pointer
indexing expression is invalid because subscript type %0 is not an integral or Objective-C pointer type
@synchronized requires an Objective-C object type (%0 invalid)
@throw requires an Objective-C object type (%0 invalid)
type argument %0 does not satisfy the bound (%1) of type parameter %2
type argument %0 cannot explicitly specify nullability
no type or protocol named %0
type argument %0 must be a pointer (requires a '*')
type argument %0 is neither an Objective-C object nor a block type
type argument %0 cannot be qualified with '%1'
angle brackets contain both a %select{type|protocol}0 (%1) and a %select{protocol|type}0 (%2)
type arguments cannot be applied to non-class type %0
type arguments cannot be applied to non-parameterized class %0
type arguments cannot be applied to already-specialized class type %0
too %select{many|few}0 type arguments for class %1 (have %2, expected %3)
%select{forward class declaration|class definition|category|extension}0 has too %select{few|many}1 type parameters (expected %2, have %3)
type bound %0 for type parameter %1 conflicts with %select{implicit|previous}2 bound %3%select{for type parameter %5|}4
type parameter %0 bound %1 cannot explicitly specify nullability
missing type bound %0 for type parameter %1 in %select{@interface|@class}2
missing '*' in type bound %0 for type parameter %1
type bound %0 for type parameter %1 is not an Objective-C pointer type
type bound %1 for type parameter %0 cannot be qualified with '%2'
redeclaration of type parameter %0
%select{in|co|contra}0variant type parameter %1 conflicts with previous %select{in|co|contra}2variant type parameter %3
cannot declare variable inside @interface or @protocol
interface type %1 cannot be %select{returned|passed}0 by value; did you forget * in %1?
offsetof requires array type, %0 invalid
cannot compute offset of bit-field %0
invalid application of 'offsetof' to a field of a virtual base
offsetof of incomplete type %0
offsetof requires struct, union, or class type, %0 invalid
argument of aligned clause should be array%select{ or pointer|, pointer, reference to array or reference to pointer}1, not %0
%select{a variable|a parameter|'this'}0 cannot appear in more than one aligned clause
expected pointer, array, reference to pointer, or reference to array in 'is_device_ptr clause'
OpenMP array section is not allowed here
expected at least one 'to' clause or 'from' clause specified to '#pragma omp target update'
the statement for 'atomic capture' must be a compound statement of form '{v = x; x binop= expr;}', '{x binop= expr; v = x;}', '{v = x; x = x binop expr;}', '{v = x; x = expr binop x;}', '{x = x binop expr; v = x;}', '{x = expr binop x; v = x;}' or '{v = x; x = expr;}', '{v = x; x++;}', '{v = x; ++x;}', '{++x; v = x;}', '{x++; v = x;}', '{v = x; x--;}', '{v = x; --x;}', '{--x; v = x;}', '{x--; v = x;}' where x is an l-value expression with scalar type
the statement for 'atomic capture' must be an expression statement of form 'v = ++x;', 'v = --x;', 'v = x++;', 'v = x--;', 'v = x binop= expr;', 'v = x = x binop expr' or 'v = x = expr binop x', where x and v are both l-value expressions with scalar type
the statement for 'atomic' must be an expression statement of form '++x;', '--x;', 'x++;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an l-value expression with scalar type
the statement for 'atomic read' must be an expression statement of form 'v = x;', where v and x are both lvalue expressions with scalar type
directive '#pragma omp atomic' cannot contain more than one 'read', 'write', 'update' or 'capture' clause
the statement for 'atomic update' must be an expression statement of form '++x;', '--x;', 'x++;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an l-value expression with scalar type
the statement for 'atomic write' must be an expression statement of form 'x = expr;', where x is a lvalue expression with scalar type
bit fields cannot be used to specify storage in a '%0' clause
arguments of OpenMP clause '%0' with bitwise operators cannot be of floating type
arguments of OpenMP clause '%0' for 'min' or 'max' must be of %select{scalar|arithmetic}1 type
const-qualified list item cannot be reduction
const-qualified variable cannot be %0
constructs with the same name must have a 'hint' clause with the same value
redefinition of user-defined reduction for type %0
%0 appears multiple times in clauses on the same declare target directive
%0 must not appear in both clauses 'to' and 'link'
'depend' clauses cannot be mixed with '%0' clause
expected%select{| %1}0 loop iteration variable
expected '+' or '-' operation
'depend(%select{source|sink:vec}0)' clause%select{|s}0 cannot be mixed with 'depend(%select{sink:vec|source}0)' clause%select{s|}0
unexpected expression: number of expressions is larger than the number of associated loops
declare target region may not be enclosed within another declare target region
expected access to data field
expected variable name as a base of the array %select{subscript|section}0
expected a reference to an integer-typed parameter
expected expression containing only member accesses and/or array sections based on named variables
expected a reference to a parameter specified in a 'uniform' clause
%0 is not a global variable, static local variable or static data member
%0 is not a global variable, static local variable or static data member; did you mean %1
expected variable name%select{| or data member of current class}0
expected variable name%select{|, data member of current class}0, array element or array section
expression requires explicit conversion from %0 to %1
lastprivate variable cannot be firstprivate in '#pragma omp distribute'
reduction variable in '#pragma omp teams' cannot be firstprivate in '#pragma omp distribute'
private variable in '#pragma omp teams' cannot be firstprivate in '#pragma omp distribute'
a firstprivate variable with incomplete type %0
'#pragma omp declare simd' can only be applied to functions
arguments of '#pragma omp %0' must have %select{global storage|static storage duration}1
'%0' and '%1' clause are mutually exclusive and may not appear on the same directive
the name of the construct must be specified in presence of 'hint' clause
expression has incomplete class type %0
%select{map type '%1' is not allowed|map type must be specified}0 for '#pragma omp %2'
%0 used in declare target directive is not a variable or a function name
a lastprivate variable with incomplete type %0
argument of a linear clause should be of integral or pointer type, not %0
a linear variable with incomplete type %0
'linear' clause cannot be specified along with 'ordered' clause with a parameter
variable with local storage in initial value of threadprivate variable
'%0' statement cannot be used in OpenMP for loop
could not calculate number of iterations calling 'operator-' with upper and lower loop bounds
increment expression must cause %0 to %select{decrease|increase}1 on each iteration of OpenMP for loop
condition of OpenMP for loop must be a relational comparison ('<', '<=', '>', or '>=') of loop variable %0
increment clause of OpenMP for loop must perform simple addition or subtraction on loop variable %0
initialization clause of OpenMP for loop is not in canonical form ('var = init' or 'T var = init')
loop iteration variable in the associated loop of 'omp %1' directive may not be %0, predetermined as %2
variable must be of integer or %select{pointer|random access iterator}0 type
variable already marked as mapped in current construct
multiple array elements associated with the same variable are not allowed in map clauses of the same construct
argument to '%0' clause must be a %select{non-negative|strictly positive}1 integer value
expected at least one %0 clause for '#pragma omp %1'
variable %0 must have explicitly specified data sharing attributes
no more 'if' clause is allowed
%select{statement after '#pragma omp %1' must be a for loop|expected %2 for loops after '#pragma omp %1'%select{|, but found only %4}3}0
expression must have integral or unscoped enumeration type, not %0
type %0 is not mappable to target
unable to resolve declare reduction construct for type %0
variable can appear only once in OpenMP '%0' clause
variable can appear only once in OpenMP 'target update' construct
'ordered' directive %select{without any clauses|with 'threads' clause}0 cannot be closely nested inside ordered region with specified parameter
'ordered' directive with 'depend' clause cannot be closely nested inside ordered region without specified parameter
'ordered' clause with a parameter can not be specified in '#pragma omp %0' directive
original storage of expression in data environment is shared but data environment do not fully contain mapped expression storage
orphaned 'omp %0' directives are prohibited; perhaps you forget to enclose the directive into a %select{|||target |teams }1region?
%select{orphaned 'omp section' directives are prohibited, it|'omp section' directive}0 must be closely nested to a sections region%select{|, not a %1 region}0
argument of a reduction clause of a %0 construct must not appear in a firstprivate clause on a task construct
the statement for '#pragma omp parallel sections' must be a compound statement
statement in 'omp parallel sections' directive must be enclosed into a section region
expected reference to one of the parameters of function %0%select{| or 'this'}1
parent region for 'omp %select{cancellation point/cancel}0' construct cannot be nowait
parent region for 'omp %select{cancellation point/cancel}0' construct cannot be ordered
pointer cannot be mapped along with a section derived from itself
a private variable with incomplete type %0
region cannot be%select{| closely}0 nested inside '%1' region%select{|; perhaps you forget to enclose 'omp %3' directive into a parallel region?|; perhaps you forget to enclose 'omp %3' directive into a for or a parallel for region with 'ordered' clause?|; perhaps you forget to enclose 'omp %3' directive into a target region?|; perhaps you forget to enclose 'omp %3' directive into a teams region?}2
OpenMP constructs may not be nested inside an atomic region
cannot nest 'critical' regions having the same name %0
OpenMP constructs may not be nested inside a simd region
list item of type %0 is not valid for specified reduction operation: unable to provide default initialization value
reduction variables may not be accessed in an explicit task
a reduction list item with incomplete type %0
expected addressable reduction item for the task-based directives
argument of OpenMP clause '%0' must reference the same object in all threads
'reduction' clause cannot be used with 'nogroup' clause
reduction type cannot be %select{qualified with 'const', 'volatile' or 'restrict'|a function|a reference|an array}0 type
arguments of '#pragma omp %0' cannot be of reference type %1
directive must be at file or namespace scope
%0 variable must be %1
same pointer derreferenced in multiple different ways in map clause expressions
'schedule' clause with 'nonmonotonic' modifier cannot be specified if an 'ordered' clause is specified
'nonmonotonic' modifier can only be specified with 'dynamic' or 'guided' schedule kind
section of pointer to function type %0
section of pointer to incomplete type %0
section length is evaluated to a negative value %0
section length is unspecified and cannot be inferred because subscripted value is %select{not an array|an array of unknown bound}0
array section must be a subset of the original array
the statement for '#pragma omp sections' must be a compound statement
statement in 'omp sections' directive must be enclosed into a section region
'%0' statement cannot be used in OpenMP simd region
the 'copyprivate' clause must not be used with the 'nowait' clause
single declaration is expected after 'declare simd' directive
target construct with nested teams region contains statements outside of the teams construct
threadprivate variables are not allowed in '%0' clause
threadprivate variables cannot be used in target constructs
threadprivate variable with incomplete type %0
array section %select{lower bound|length}0 is not an integer
subscripted value is not an array or pointer
expected %0 in OpenMP clause '%1'
modifier '%0' cannot be used along with modifier '%1'
mapped storage cannot be derived from a union
incorrect reduction identifier, expected one of '+', '-', '*', '&', '|', '^', '&&', '||', 'min' or 'max' or declare reduction for type %0
expected %select{|one of}0 %1 directive name modifier%select{|s}0
expected pointer or reference to pointer in 'use_device_ptr' clause
'#pragma omp %0' must appear in the scope of the %q1 variable declaration
variable %0 cannot be threadprivate because it is %select{thread-local|a global named register variable}1
'#pragma omp %0' must precede all references to variable %q1
%0 variable cannot be in a %1 clause in '#pragma omp %2' directive
arguments of OpenMP clause '%0' in '#pragma omp %2' directive cannot be of variably-modified type %1
one of 'for', 'parallel', 'sections' or 'taskgroup' is expected
%0 variable cannot be %1
directive name modifier '%0' is not allowed for '#pragma omp %1'
expected %select{'val' modifier|one of 'ref', val' or 'uval' modifiers}0
variable of non-reference type %0 can be used only with 'val' modifier, but used with '%1'
the parameter of the 'ordered' clause must be greater than or equal to the parameter of the 'collapse' clause
the value of 'simdlen' parameter must be less than or equal to the value of the 'safelen' parameter
only %select{'omp_priv' or 'omp_orig'|'omp_in' or 'omp_out'}0 variables are allowed in %select{initializer|combiner}0 expression
access specifier can only have annotation attributes
only constructors take base initializers
only enumeration types have underlying types
variables in the %0 address space can only be declared in the outermost scope of a kernel function
atomic variable can be %select{assigned|initialized}0 to a variable only in global address space
bit-fields are not supported in OpenCL
cannot refer to a block inside block
the __block storage type is not permitted
illegal call to %0, expected %1 argument type
invalid number of arguments to function: %0
first argument to %0 must be a pipe type
invalid pipe access modifier (expecting %0)
invalid argument type to function %0 (expecting %1 having %2)
invalid argument %0 to function: %1, expecting a generic pointer argument
cannot cast non-zero value '%0' to 'event_t'
casting to type %0 is not allowed
variable in constant address space must be initialized
blocks with parameters are not accepted in this prototype of enqueue_kernel call
blocks used in enqueue_kernel call are expected to have parameters of type 'local void*'
illegal call to enqueue_kernel, incorrect argument types
illegal call to enqueue_kernel, parameter needs to be specified as integer type
mismatch in number of block parameters and local size arguments passed
invalid block variable declaration - using 'extern' storage class is disallowed
pointers to functions are not allowed
%select{non-kernel function|function scope}0 variable cannot be declared in %1 address space
%select{program scope|static local|extern}0 variable must reside in %1 address space
declaring variable of type %0 is not allowed
%select{loading directly from|assigning directly to}0 pointer to type %1 requires cl_khr_fp16. Use vector data %select{load|store}0 builtin functions instead
declaring function parameter of type %0 is not allowed; did you forget * ?
implicit declaration of function %0 is invalid in OpenCL
implicit conversions between vector types (%0 and %1) are not permitted
access qualifier can only be used for pipe and image type
invalid block variable declaration - must be %select{const qualified|initialized}0
access qualifier %0 can not be used for %1 %select{|prior to OpenCL version 2.0}2
declaring function return value of type %0 is not allowed %select{; did you forget * ?|}1
array of %0 type is invalid in OpenCL
attribute %0 can only be applied to a kernel function
multiple access qualifiers
%select{function|kernel}0 cannot be called 'main'
global sampler requires a const or constant address space qualifier
pointer to type %0 is invalid in OpenCL
kernel parameter cannot be declared as a pointer to a pointer
use of %select{type|declaration}0 %1 requires %2 extension to be enabled
return value cannot be qualified with address space
scalar operand type has greater rank than the type of the vector element. (%0 and %1)
invalid application of '%select{sizeof|alignof|vec_step|__builtin_omp_required_simd_align}0' to a void type
block type cannot be used as expression in ternary expression in OpenCL
type %0 can only be used as a function parameter in OpenCL
the %0 type cannot be used to declare a structure or union field
OpenCL version %0 does not support the '%1' %select{type qualifier|storage class specifier}2
invalid prototype, variadic arguments are not allowed in OpenCL
variable length arrays are not supported in OpenCL
invalid application of '__builtin_omp_required_simd_align' to an expression, only type is allowed
circular pointer delegation detected
use of 'operator->' on type %0 would invoke a sequence of more than %1 'operator->' calls
%0 cannot take a dependent type as first parameter; use %1 instead
first parameter of %0 must have type %1
parameter of %0 cannot have a default argument
%0 cannot be declared inside a namespace
%0 cannot be declared static in global scope
%0 cannot have a dependent return type; use %1 instead
%0 must return type %1
%0 template must have at least two parameters
%0 must have at least one parameter
%0 cannot take a dependent type as first parameter; use size_t (%1) instead
%0 takes type size_t (%1) as first parameter
parameter of overloaded %0 cannot have a default argument
overloaded %0 must be a %select{unary|binary|unary or binary}2 operator (has %1 parameter%s1)
overloaded %0 must be a non-static member function
overloaded %0 must have at least one parameter of class or enumeration type
parameter of overloaded post-%select{increment|decrement}1 operator must have type 'int' (not %0)
overloaded %0 cannot be a static member function
overloaded %0 cannot be variadic
os_log() argument %0 is too big (%1 bytes, max %2)
os_log() format argument is not a string constant
defaulting this %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 would delete it after its first declaration
qualified reference to %0 is a constructor name rather than a %select{template name|type}1 in this context
operand argument to overflow builtin must be an integer (%0 invalid)
result argument to overflow builtin must be a pointer to a non-const integer (%0 invalid)
exception specification of overriding function is more lax than base version
call to %0 is ambiguous
ambiguous conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2
call to constructor of %0 is ambiguous
call to member function %0 is ambiguous
call to object of type %0 is ambiguous
use of overloaded operator '%0' is ambiguous (with operand types %1 and %2)
use of overloaded operator '%0' is ambiguous (operand type %1)
call to %select{unavailable|deleted}0 function %1%2
%select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2 uses deleted function
call to %select{unavailable|deleted}0 constructor of %1
call to %select{unavailable|deleted}0 member function %1%2
call to %select{unavailable|deleted}0 function call operator in type %1%2
overload resolution selected %select{unavailable|deleted}0 operator '%1'%2
call to implicitly-deleted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}0 of %1
object of type %0 cannot be %select{constructed|copied|moved|assigned|assigned|destroyed}1 because its %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 is implicitly deleted
functions that differ only in their return type cannot be overloaded
cannot convert %1 to %2 without a conversion operator
type %0 does not provide a %select{subscript|call}1 operator
no matching conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2
no matching function for call to %0
no matching constructor for initialization of %0
no matching literal operator for call to %0%select{| with argument of type %2| with arguments of types %2 and %3}1%select{| or 'const char *'}4%select{|, and no matching literal operator template}5
no matching member function for call to %0
no matching function for call to object of type %0
no viable overloaded '%0'
no viable overloaded operator[] for type %0
static and non-static member functions with the same parameter types cannot be overloaded
reference to overloaded function could not be resolved; did you mean to call it%select{| with no arguments}0?
'ownership_returns' attribute index does not match; here it is %0
%0 attribute only applies to %select{pointer|integer}1 arguments
pack expansion contains parameter packs %0 and %1 that have different lengths (%2 vs. %3)
pack expansion contains parameter pack %0 that has a different length (%1 vs. %2) from outer parameter packs
pack expansion for initialization of member %0
pack expansion does not contain any unexpanded parameter packs
C does not support default arguments
default arguments cannot be added to an out-of-line definition of a member of a %select{class template|class template partial specialization|nested class in a template}0
missing default argument on parameter
missing default argument on parameter %0
default arguments can only be specified for parameters in a function declaration
parameter pack cannot have a default argument
redefinition of default argument
default argument references local variable %0 of enclosing function
default argument references parameter %0
default argument references 'this'
default arguments cannot be added to a function template that has already been declared
argument may not have 'void' type
parameter name omitted
%select{parameters|function return value}0 cannot have __fp16 type; did you forget * ?
cannot parenthesize the name of a method when forming a member pointer
%select{class|variable}0 template partial specialization does not specialize any template argument; to %select{declare|define}1 the primary template, remove the template argument list
partial specialization of %0 does not use any of its template parameters
ambiguous partial specializations of %0
class template partial specialization %0 cannot be redeclared
partial specialization cannot be declared as a friend
'new' expression with placement arguments refers to non-placement 'operator delete'
call to pointer to member function of type %0 drops '%1' qualifier%s2
pointer-to-member function type %0 can only be called on an %select{rvalue|lvalue}1
invalid use of pointer to member type after %select{.*|->*}0
this builtin is only valid on POWER7 or later CPUs
attribute %0 can't be applied to %1
negated attribute subject matcher sub-rule '%0' contradicts sub-rule '%1'
redundant attribute subject matcher sub-rule '%0'; '%1' already matches those declarations
unterminated '#pragma clang attribute push' at end of file
'#pragma clang attribute pop' with no matching '#pragma clang attribute push'
%select{incompatible|duplicate}0 directives '%1' and '%2'
invalid argument of type %0; expected an integer type
%select{invalid value '%0'; must be positive|value '%0' is too large}1
expected a for, while, or do-while loop to follow '%0'
mac68k alignment pragma is not supported on this target
#pragma visibility pop with no matching #pragma visibility push
#pragma visibility push with no matching #pragma visibility pop
instance variable %0 is private
type of property %0 (%1) does not match type of accessor %2 (%3)
property %0 found on object of type %1; did you mean to access it with the "." operator?
use of Objective-C property in function nested in Objective-C container not supported, move function outside its container
property %0 is already implemented
property %0 has a variably modified type
type of property %0 (%1) does not match type of instance variable %2 (%3)
property access is using %0 method which is unavailable
property %0 refers to an incomplete Objective-C class %1 (with no @interface available)
property %0 not found on object of type %1
property %0 cannot be found in forward class object %1
property %0 not found on object of type %1; did you mean %2?
synthesized properties %0 and %1 both claim setter %2 - use of this setter will cause unexpected behavior
property cannot have array or function type %0
instance variable %0 is protected
protocol has circular dependency
property %select{of type %1|with attribute '%1'|without attribute '%1'|with getter %1|with setter %1}0 was selected for synthesis
object expression of non-scalar type %0 cannot be used in a pseudo-destructor expression
call to pseudo-destructor cannot have any arguments
%0 does not refer to a type name in pseudo-destructor expression; expected the name of type %1
the type of object expression %diff{($) does not match the type being destroyed ($)|does not match the type being destroyed}0,1 in pseudo-destructor expression
friend declaration cannot have a pure-specifier
exception declarator cannot be qualified
friend function definition cannot be qualified with '%0'
no function named %0 with type %1 was found in the specified scope
qualified member access refers to a member in %0
%q0 is not a member of class %1
%select{property|instance variable}0 access cannot be qualified with '%1'
@catch parameter declarator cannot be qualified
parameter declarator cannot be qualified
typedef declarator cannot be qualified
cannot build range expression with array function parameter %0 since parameter with array type %1 is treated as pointer type %2
assigning to 'readonly' return result of an Objective-C message not allowed
invalid type %0 to %1 operator
%select{struct|union}0 kernel parameters may not contain pointers
recursive evaluation of default argument
trying to recursively use %0 as superclass of %1
redeclaration of %0 with a different type%diff{: $ vs $|}1,2
redefinition of %0
redefinition of %0 as different kind of symbol
redefinition of %0 as an alias for a different namespace
redefinition of %0 with a different type%diff{: $ vs $|}1,2
%select{typedef|type alias|type alias template}0 redefinition with different types%diff{ ($ vs $)|}1,2
redefinition of a 'extern inline' function %0 is not supported in %select{C99 mode|C++}1
redefinition of enumerator %0
redefinition of label %0
redefinition of %select{typedef|type alias}0 for variably-modified type %1
cannot refer to declaration with an array type inside block
reference to %select{__device__|__global__|__host__|__host__ __device__}0 function %1 in %select{__device__|__global__|__host__|__host__ __device__}2 function
reference to %select{__device__|__global__|__host__|__host__ __device__}0 function %1 in global initializer
cannot refer to declaration of structure variable with flexible array member inside block
reference initialization of type %0 with initializer of type %1 is ambiguous
%0 does not refer to a value
ref-qualifier '%select{&&|&}0' is not allowed on a constructor
ref-qualifier '%select{&&|&}0' is not allowed on a destructor
cannot overload a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}0 with a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}1
cannot refer to declaration with a variably modified type inside block
binding value %diff{of type $ to reference to type $|to reference}0,1 drops %select{<<ERROR>>|'const'|'restrict'|'const' and 'restrict'|'volatile'|'const' and 'volatile'|'restrict' and 'volatile'|'const', 'restrict', and 'volatile'}2 qualifier%plural{1:|2:|4:|:s}2
reference %diff{to type $ could not bind to an %select{rvalue|lvalue}1 of type $|could not bind to %select{rvalue|lvalue}1 of incompatible type}0,2
reference to type %0 cannot bind to an initializer list
%select{non-const|volatile}0 reference cannot bind to bit-field%select{| %1}2
%select{non-const|volatile}0 reference cannot bind to vector element
'&' cannot precede a capture when the capture default is '&'
reference cannot be initialized with multiple values
pipes packet types cannot be of reference type
reference to local %select{variable|binding}1 %0 declared in enclosing %select{%3|block literal|lambda expression|context}2
cannot form a reference to 'void'
declaration of reference variable %0 requires an initializer
reference to type %0 requires an initializer
function declared with regparm(%0) attribute was previously declared %plural{0:without the regparm|:with the regparm(%1)}1 attribute
%0 attribute cannot be repeated
variable does not have a constant initializer
cannot subclass a class that was declared with the 'objc_subclassing_restricted' attribute
returning block that lives on the local stack
@throw (rethrow) used outside of a @catch block
void block should not return a value
cannot return from %0
return in the catch of a function try block of a constructor is illegal
return statement not allowed in coroutine; did you mean 'co_return'?
%select{void function|void method|constructor|destructor}1 %0 must not return a value
%0 cannot use 'super' because it is a root class
rvalue reference type %0 is not allowed in exception specification
sampler_t variable required - got %0
sampler_t initialization requires 32-bit integer, not %0
second argument to __builtin_call_with_static_chain must be of pointer type
second argument to 'va_arg' is of abstract type %0
second argument to 'va_arg' is of incomplete type %0
%0 causes a section type conflict with %1
cannot use SEH '__try' in a coroutine when C++ exceptions are enabled
cannot use SEH '__try' in blocks, captured regions, or Obj-C method decls
SEH '__try' is not supported on this target
chosen constructor is explicit in copy-initialization
selector element of type %0 cannot be a constant l-value expression
selector element is not a valid lvalue
selector element type %0 is not a valid object
type of setter must be void
initialization is not supported for __shared__ variables.
requested shift is a vector of type %0 but the first operand is not a vector (%1)
index for __builtin_shufflevector must be less than the total number of vector elements
index for __builtin_shufflevector must be a constant integer
invalid application of '%select{sizeof|alignof|vec_step|__builtin_omp_required_simd_align}0' to a function type
invalid application of '%select{sizeof|alignof|vec_step|__builtin_omp_required_simd_align}0' to an incomplete type %1
invalid application of '%select{sizeof|alignof|typeof}0' to bit-field
application of '%select{alignof|sizeof}1' to interface %0 is not supported on this architecture and platform
%0 does not refer to the name of a parameter pack
%0 does not refer to the name of a parameter pack; did you mean %1?
specialization of member %q0 does not specialize an instantiated member
explicit specialization of %0 after instantiation
cannot reference member of primary template because deduced class template specialization %0 is %select{instantiated from a partial|an explicit}1 specialization
cannot specialize %select{|(with 'template<>') }0a member of an unspecialized template
forward declaration of %select{class|struct|interface|union|enum}0 cannot have a nested name specifier
static_assert expression is not an integral constant expression
static_assert failed%select{ %1|}0
function declared in block scope cannot have 'static' storage class
static data member %0 not allowed in anonymous struct
static data member %0 not allowed in local class %1
static data member %0 already has an initializer
cannot cast %0 to %1 via virtual base %2
variables in function scope cannot be declared static
the 'static' modifier for the array size is not legal in new expressions
kernel functions cannot be declared static
'main' is not allowed to be declared static
static declaration of %0 follows non-static declaration
static member %0 cannot be a bit-field
'static' can only be specified inside the class definition
'static' member function %0 overrides a virtual function in a base class
interface type cannot be statically allocated
unsupported standard library implementation: 'std::%0' is not a class template
%0 attribute cannot be applied to a declaration
static data member definition cannot specify a storage class
@catch parameter cannot have storage specifier '%0'
storage class specified for a member declaration
existing instance variable %1 for strong property %0 may not be __weak
subscript of pointer to function type %0
subscript of pointer to incomplete type %0
subscript requires size of interface %0, which is not constant for this architecture and platform
use of '__super' inside a lambda is unsupported
'%0' parameter must have pointer%select{| to unqualified pointer}1 type; type here is %2
'swift_error_result' parameter must follow 'swift_context' parameter
'swift_indirect_result' parameters must be first parameters of function
'%0' parameter can only be used with swiftcall calling convention
switch condition type %0 requires explicit conversion to %1
switch condition has incomplete class type %0
cannot jump from switch statement to this case label
multiple conversions from switch condition type %0 to an integral or enumeration type
@synthesize not allowed in a category's implementation
@synthesize not allowed on a class property %0
cannot synthesize weak property in file using manual reference counting
cannot synthesize weak property because the current deployment target does not support weak references
invalid transaction abort code
definition of type %0 conflicts with %select{typedef|type alias}1 of the same name
implicit declaration introduced by elaborated type conflicts with a %select{non-struct type|non-class type|non-union type|non-enum type|typedef|type alias|template|type alias template|template template argument}0 of the same name
%select{non-struct type|non-class type|non-union type|non-enum type|typedef|type alias|template|type alias template|template template argument}1 %0 cannot be referenced with a %select{struct|interface|union|class|enum}2 specifier
friend type templates must use an elaborated type
ambiguous constructor call when %select{copying variable|copying parameter|returning object|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1
%select{copying variable|copying parameter|returning object|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1 invokes deleted constructor
copying a temporary object of incomplete type %0
no viable constructor %select{copying variable|copying parameter|returning object|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1
address taken in non-type template argument for template parameter of reference type %0
deduced incomplete pack %0 for template parameter %1
non-type template argument refers to non-static data member %0
%select{too few|too many}0 template arguments for %select{class template|function template|variable template|alias template|template template parameter|template}1 %2
sorry, non-type template argument of pointer-to-member type %1 that refers to member %q0 of a different class is not supported yet
non-type template argument refers to non-static member function %0
template argument for non-type template parameter must be an expression
template argument for template template parameter must be a class template%select{| or type alias template}0
template argument for template type parameter must be a type
template argument for template type parameter must be a type; did you forget 'typename'?
non-type template parameter of reference type %diff{$ cannot bind to template argument of type $|cannot bind to template of incompatible argument type}0,1
template argument for non-type template parameter is treated as function type %0
non-type template argument of type %0 is not a constant expression
non-type template argument for template parameter of pointer type %0 must have its address taken
non-type template argument of type %0 cannot be converted to a value of type %1
non-type template argument does not refer to any declaration
non-type template argument of type %0 is not an integral constant expression
non-type template argument of type %0 must have an integral or enumeration type
non-type template argument does not refer to an object or function
non-type template argument is not a pointer to member constant
template argument does not refer to a class or alias template, or template template parameter
non-type template argument refers to %select{function|object}0 %1 that does not have linkage
template argument is the type of an unresolved overloaded function
reference binding of non-type template parameter %diff{of type $ to template argument of type $|to template argument}0,1 ignores qualifiers
non-type template argument of reference type %0 is not an object
template template argument has different template parameters than its corresponding template template parameter
non-type template argument refers to thread-local object
null non-type template argument must be cast to template parameter type %0
null non-type template argument of type %0 does not match template parameter of type %1
cannot refer to %select{class|variable}0 template %1 without a template argument list
associated constraints differ in template redeclaration
template name refers to non-type template %0
templates cannot be declared inside of a local class
%select{implicit|explicit}0 instantiation of undefined template %1
%select{implicit|explicit}0 instantiation of template %1 within its own definition
missing 'template' keyword prior to dependent template name '%0%1'
'%0%1' instantiated to a class template, not a function template
%0 following the 'template' keyword does not refer to a template
templates must have C++ linkage
member %0 declared as a template
extraneous 'template<>' in declaration of member %0
use of %select{class template|function template|variable template|alias template|template template parameter|template}0 %1 requires template arguments
a non-type template parameter cannot have type %0
template non-type parameter has a different type %0 in template %select{|template parameter }1redeclaration
templates can only be declared in namespace or class scope
template parameter missing a default argument
template parameter redefines default argument
template parameter has a different kind in template %select{|template parameter }0redeclaration
%select{too few|too many}0 template parameters in template %select{|template parameter }1redeclaration
template parameter list matching the non-templated nested type %0 should be empty ('template<>')
template parameter pack cannot have a default argument
template parameter pack must be the last template parameter
declaration of %0 shadows template parameter
default template argument not permitted on a friend template
cannot add a default template argument to the definition of a member of a class template
%select{template type|non-type template|template template}0 parameter%select{| pack}1 conflicts with previous %select{template type|non-type template|template template}0 parameter%select{ pack|}1
nested name specifier '%0' for declaration does not refer into a class, class template or class template partial specialization
recursive template instantiation exceeded maximum depth of %0
explicit specialization of %0 in class scope
cannot declare an explicit specialization in a friend
explicit specialization of %0 in function scope
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 must originally be declared in namespace %2
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 must originally be declared in the global scope
default argument not permitted on an explicit %select{instantiation|specialization}0 of function %1
extraneous template parameter list in template specialization or out-of-line template definition
template specialization declaration cannot be a friend
template specialization requires 'template<>'
template specialization or definition requires a template parameter list corresponding to the nested type %0
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 must occur at global scope
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 not in a namespace enclosing %2
can only provide an explicit specialization for a class template, function template, variable template, or a member function, static data member, %select{or member class|member class, or member enumeration}0 of a class template
extraneous 'template<>' in declaration of %0 %1
template template parameter must have its own template parameters
a typedef cannot be a template
cannot declare a class template with no name
extraneous 'template<>' in declaration of variable %0
tentative definition has type %0 that is never completed
'this' cannot be %select{implicitly |}0captured in this context
'this' cannot be explicitly captured when the capture default is '='
'this' cannot be%select{| implicitly}0 used in a static member function declaration
initializer for thread-local variable must be a constant expression
'%0' variables must have global storage
thread-local declaration of %0 follows non-thread-local declaration
type of thread-local variable has non-trivial destruction
thread-local declaration of %0 with %select{static|dynamic}1 initialization follows declaration with %select{dynamic|static}1 initialization
thread-local storage is not supported for the current target
cannot throw an object of abstract type %0
cannot throw object of incomplete type %0
cannot throw pointer to object of incomplete type %0
alignment (%0) of thread-local variable %1 is greater than the maximum supported alignment (%2) for a thread-local variable on this target
only one element declaration is allowed
trailing return type may not be nested within parentheses
function with trailing return type must specify return type 'auto', not %0
%0 cannot be defined in a type alias template
%0 cannot be defined in a condition
%0 cannot be defined in an enumeration
types may not be defined in a for range declaration
%0 cannot be defined in a parameter type
%0 cannot be defined in the result type of a function
%0 cannot be defined in a type specifier
type of property %0 in class extension does not match property type in primary class
a parameter pack may not be accessed at an out of bounds index
'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression
'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression that can be represented by a 64 bit integer
%0 is not supported on this target
address of %select{bit-field|vector element|property expression|register variable}0 requested
taking the address of a destructor
taking the address of a temporary object of type %0
conversion %diff{from $ to $|between types}0,1 is ambiguous
cannot assign to 'self' outside of a method in the init family
cannot assign to 'self' in a class method
arithmetic on a pointer to an incomplete type %0
fast enumeration variables cannot be modified in ARC by default; declare the variable __strong to allow this
array type %0 is not assignable
%select{cannot assign to return value because function %1 returns a const value|cannot assign to variable %1 with const-qualified type %2|cannot assign to %select{non-|}1static data member %2 with const-qualified type %3|cannot assign to non-static data member within const member function %1|read-only variable is not assignable}0
value of type %0 is not contextually convertible to 'bool'
ordered compare requires two args of floating point type%diff{ ($ and $)|}0,1
floating point classification requires argument of floating point type (passed in %0)
called object type %0 is not a function or function pointer
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, at least argument %1 must be specified
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2; did you mean %3?
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, single argument %1 was not specified
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most single argument %1, have %2 arguments
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2; did you mean %3?
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected single argument %1, have %2 arguments
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
cast to incomplete type %0
cast to union type from type %0 not present in union
'__builtin_choose_expr' requires a constant expression
comparison of distinct block types%diff{ ($ and $)|}0,1
comparison of distinct pointer types%diff{ ($ and $)|}0,1
equality comparison between function pointer and void pointer (%0 and %1)
comparison between pointer and integer (%0 and %1)
used type %0 where integer or floating point type is required
used type %0 where floating point type is not allowed
used type %0 where arithmetic or pointer type is required
incompatible operand types%diff{ ($ and $)|}0,1
non-pointer operand type %0 incompatible with %select{NULL|nullptr}1
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}5 vs %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}6)|: different exception specifications}4
incompatible block pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
value of type %0 is not implicitly convertible to %1
conversion from %0 to %1 is not allowed in a converted constant expression
conversion from %0 to %1 in converted constant expression would bind reference to a temporary
variable has incomplete type %0
conversion function %diff{from $ to $|between types}0,1 invokes a deleted function
vector is not assignable (contains duplicate components)
used type %0 where integer is required
operand of type %0 where arithmetic or pointer type is required
fields must have a constant size: 'variable length array in structure' extension will never be supported
cannot %select{decrement|increment}1 value of type %0
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes address space of pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes retain/release properties of pointer
definition of variable with array type needs an explicit size or an initializer
incomplete definition of type %0
incomplete type %0 is not assignable
indirection requires pointer operand (%0 invalid)
cannot take the address of an rvalue of type %0
extra '&' taking address of overloaded function
invalid operands to binary expression (%0 and %1)
pointer to function type %0 may not be 'restrict' qualified
restrict requires a pointer or reference (%0 is invalid)
restrict requires a pointer or reference
instance variables must have a constant size
logical expression with vector %select{type %1 and non-vector type %2|types %1 and %2}0 is only supported in C++
assignment to cast is illegal, lvalue casts are not supported
member reference type %0 is not a pointer
%0 does not have a member named %1
%0 does not have a member named %1; did you mean %2?
member reference base type %0 is not a structure or union
member reference type %0 is %select{a|not a}1 pointer; did you mean to use '%select{->|.}1'?
cannot refer to type member %0 in %1 with '%select{.|->}2'
cannot refer to member %0 in %1 with '%select{.|->}2'
%diff{return type $ must match previous return type $|return type must match previous return type}0,1 when %select{block literal|lambda expression}2 has unspecified explicit return type
array size is negative
non-object type %0 is not assignable
no viable conversion%select{%diff{ from $ to $|}1,2|%diff{ from returned value of type $ to function return type $|}1,2}0
no viable conversion%diff{ from $ to incomplete type $|}0,1
%select{comparison between %diff{ ($ and $)|}0,1|arithmetic operation with operands of type %diff{ ($ and $)|}0,1|conditional operator with the second and third operands of type %diff{ ($ and $)|}0,1}2 which are pointers to non-overlapping address spaces
ordered comparison between pointer and zero (%0 and %1)
arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2
arithmetic on%select{ a|}0 pointer%select{|s}0 to void
illegal storage class on file-scoped variable
illegal storage class on function
statement requires expression of integer type (%0 invalid)
statement requires expression of scalar type (%0 invalid)
%diff{$ and $ are not pointers to compatible types|pointers to incompatible types}0,1
array subscript is not an integer
subscripted value is not an array, pointer, or vector
invalid argument type %0 to unary expression
vector operands do not have the same number of elements (%0 and %1)
cannot convert between vector values of different size (%0 and %1)
cannot convert between %select{scalar|vector}0 type %1 and vector type %2 as implicit conversion would cause truncation
cannot convert between vector and non-scalar values (%0 and %1)
zero-length arrays are not permitted in C++
unsupported: typedef changes linkage of anonymous type, but linkage was already computed
typedef member %0 cannot be a bit-field
typedef name must be an identifier
missing 'typename' prior to dependent type name '%0%1'
missing 'typename' prior to dependent type template name '%0%1'
no type named %0 in %1
no type named 'type' in %0; 'enable_if' cannot be used to disable this declaration
failed requirement '%0'; 'enable_if' cannot be used to disable this declaration
typename specifier refers to non-type member %0 in %1
typename specifier refers to a dependent using declaration for a value %0 in %1
%0 is unavailable
%0 is unavailable in ARC
%0 is unavailable: %1
%0 has unknown return type; cast the call to its declared return type
no known method %select{%objcinstance1|%objcclass1}0; cast the message send to the method's return type
%0 has unknown type; cast it to its declared type to use it
declaration of %0 is missing in %1 class
use of undeclared label %0
definition of class %0 must be available to use Objective-C %select{array literals|dictionary literals|numeric literals|boxed expressions|string literals}1
cannot find protocol declaration for %0
cannot find protocol declaration for %0; did you mean %1?
use of undeclared %0
use of undeclared %0; did you mean %1?
use of undeclared identifier %0
use of undeclared identifier %0; did you mean %1?
cannot find interface declaration for %0; did you mean %1?
cannot find interface declaration for %0, superclass of %1
cannot find interface declaration for %0, superclass of %1; did you mean %2?
inline variable %q0 is not defined
cannot determine underlying type of incomplete enumeration type %0
%select{expression|base type|declaration type|data member type|bit-field size|static assertion|fixed underlying type|enumerator value|using declaration|friend declaration|qualifier|initializer|default argument|non-type template parameter type|exception type|partial specialization|__if_exists name|__if_not_exists name|lambda|block}0 contains%plural{0: an|:}1 unexpanded parameter pack%plural{0:|1: %2|2:s %2 and %3|:s %2, %3, ...}1
friends can only be classes or functions
unexpected interface name %0: expected expression
unexpected namespace name %0: expected expression
unexpected type name %0: expected expression
cannot define the implicit copy assignment operator for %0, because non-static %select{reference|const}1 member %2 cannot use copy assignment operator
%select{constructor for %1|implicit default constructor for %1|cannot use constructor inherited from %1:}0 must explicitly initialize the %select{reference|const}2 member %3
unions cannot be base classes
union member %0 has reference type %1
the address of a declaration with unknown type can only be cast to a pointer type
address-of operator cannot be applied to a call to a function with unknown return type
function %0 with unknown type must be given a function type
variable %0 with unknown type cannot be given a function type
no type named %0 in %1; did you mean %select{|simply }2%3?
unknown receiver %0; did you mean %1?
unknown %select{type|class}1 name %0; did you mean %2?
unknown type name %0
unknown type name %0; did you mean %1?
must explicitly qualify name of member function when taking its address
call to unsupported expression with unknown type
%0 has unknown type, which is not supported for this kind of declaration
unsupported expression with unknown type
cannot cast %0 to its %select{private|protected}2 base class %1
illegal redeclaration of property in class extension %0 (attribute must be 'readwrite', while its primary must be 'readonly')
illegal redeclaration of 'readwrite' property in class extension %0 (perhaps you intended this to be a 'readwrite' redeclaration of a 'readonly' public property?)
use of default argument to function %0 that is declared later in class %1
must use '%1' tag to refer to type %0%select{| in this scope}2
use of %0 with tag type that does not match previous declaration
using declaration cannot refer to class member
using declaration cannot refer to a namespace
using declaration cannot refer to a scoped enumerator
target of using declaration conflicts with declaration already in scope
declaration conflicts with target of using declaration already in scope
using declaration cannot refer to a constructor
%0 is not a direct base of %1, cannot inherit constructors
using declaration cannot refer to a destructor
cannot befriend target of using declaration
using declaration refers to its own class
using declaration refers into '%0', which is not a base class of %1
using declaration in class refers into '%0', which is not a class
redeclaration of using declaration
using declaration pack expansion at block scope produces multiple values
using declaration cannot refer to a template specialization
dependent using declaration resolved to type without 'typename'
no namespace named %0 in %1; did you mean %select{|simply }2%3?
no namespace named %0; did you mean %1?
%select{|member}0 using declaration %1 instantiates to an empty pack
using declaration requires a qualified name
'typename' keyword used on a non-type
cannot call operator __uuidof on a type with multiple GUIDs
cannot call operator __uuidof on a type with no GUID
CUDA device code does not support va_arg
'va_start' cannot be used in a captured statement
'va_start' used in function with fixed args
'va_start' cannot be used outside a function
'va_start' used in %select{System V|Win64}0 ABI function
array types cannot be value-initialized
variable concept declaration must be initialized
variable template partial specialization %0 cannot be redefined
no variable template matches%select{| partial}0 specialization
no variable template matches specialization; did you mean to use %0 as function template instead?
declared type of variable concept must be 'bool'
%select{variable|static data member}0 instantiated with function type %1
variable-sized object may not be initialized
'new' cannot allocate object of variably modified type %0
non-type template parameter of variably modified type %0
variably modified type %0 cannot be used as a template argument
'typeid' of variably modified type %0
CUDA device code does not support variadic functions
first two arguments to %0 must have the same type
first two arguments to %0 must be vectors
'vec_step' requires built-in scalar or vector type, %0 invalid
%select{too many|too few}0 elements in vector initialization (expected %1 elements, have %2)
unions cannot have virtual functions
'virtual' cannot be specified on member function templates
'virtual' can only appear on non-static member functions
'virtual' can only be specified inside the class definition
variable length array declaration cannot have 'extern' linkage
variable length array declaration cannot have 'static' storage duration
variable length array declaration not allowed at file scope
variable length array cannot be formed during template argument deduction
variably modified type declaration cannot have 'extern' linkage
variably modified type declaration not allowed at file scope
function declaration cannot have variably modified type
'void' must be the first and only parameter if specified
'void' as parameter must not have type qualifiers
argument %0 to %1 must be a 2-bit unsigned literal (i.e. 0, 1, 2 or 3)
existing instance variable %1 for __weak property %0 must be __weak
sampler type cannot be used with the __local and __global address space qualifiers
invalid rounding argument
scale argument must be 1, 2, 4, or 8
asm-specifier for input or output variable conflicts with asm clobber list
initializer for aggregate is not a compile-time constant
anonymous types declared in an anonymous %select{struct|union}0 are an extension
types declared in an anonymous %select{struct|union}0 are a Microsoft extension
anonymous %select{struct|union}0 cannot be '%1'
anonymous unions are a C11 extension
initialization of an array %diff{of type $ from a compound literal of type $|from a compound literal}0,1 is a GNU extension
parenthesized initialization of a member array is a GNU extension
implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is a C++11 extension
'auto' type specifier is a C++11 extension
anonymous structs are a C11 extension
%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature
flexible array members are a C99 feature
cast between pointer-to-function and pointer-to-object is an extension
%select{case value|enumerator value|non-type template argument|array size|constexpr if condition}0 %select{cannot be narrowed from type %2 to %3|evaluates to %2, which cannot be narrowed to type %3}1
complex initialization specifying real and imaginary components is an extension
use of this statement in a constexpr %select{function|constructor}0 is a C++14 extension
multiple return statements in constexpr function is a C++14 extension
constexpr %select{function|constructor}0 never produces a constant expression
variable declaration in a constexpr %select{function|constructor}0 is a C++14 extension
type definition in a constexpr %select{function|constructor}0 is a C++14 extension
use of the %0 attribute is a C++14 extension
use of the %0 attribute is a C++17 extension
decomposition declarations are a C++17 extension
default initialization of an object of const type %0%select{| without a user-provided default constructor}1 is a Microsoft extension
cannot delete expression with pointer-to-'void' type %0
ISO C++11 does not allow conversion from string literal to %0
designated initializers are a C99 feature
duplicate '%0' declaration specifier
ISO C++17 does not allow dynamic exception specifications
empty %select{struct|union}0 is a GNU extension
befriending enumeration type %0 is a C++11 extension
enumeration values exceed range of largest integer
ISO C restricts enumerator values to range of 'int' (%0 is too %select{small|large}1)
incremented enumerator value %0 is not representable in the largest integer type
ambiguous use of internal linkage declaration %0 defined in multiple modules
explicit conversion functions are a C++11 extension
duplicate explicit instantiation of %0 ignored as a Microsoft extension
qualifier in explicit instantiation of %q0 requires a template-id (a typedef is not permitted)
explicit specialization cannot have a storage class
expression is not an %select{integer|integral}0 constant expression; folding it to a constant is a GNU extension
flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a GNU extension
flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a Microsoft extension
%0 may not be used as an array element due to flexible array member
%0 may not be nested in a struct due to flexible array member
flexible array initialization is a GNU extension
flexible array member %0 in a union is a GNU extension
flexible array member %0 in a union is a Microsoft extension
'begin' and 'end' returning different types (%0 and %1) is a C++17 extension
ISO C forbids forward references to 'enum' types
redeclaration of already-defined enum %0 is a GNU extension
use of identifier %0 found via unqualified lookup into dependent bases of class templates is a Microsoft extension
complex numbers are an extension in a freestanding C99 implementation
unqualified friend declaration referring to type outside of the nearest enclosing namespace is a Microsoft extension; add a nested name specifier
explicit specialization of %0 within class scope is a Microsoft extension
anonymous structs are a GNU extension
arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2 is a GNU extension
subscript of a pointer to void is a GNU extension
arithmetic on%select{ a|}0 pointer%select{|s}0 to void is a GNU extension
jump from this goto statement to its label is a Microsoft extension
function previously declared with an %select{explicit|implicit}0 exception specification redeclared with an %select{implicit|explicit}0 exception specification
implicit declaration of function %0 is invalid in C99
implicitly declaring library function '%0' with type %1
in-class initializer for static data member of type %0 is a GNU extension
in-class initializer for static data member is not a constant expression; folding it to a constant is a GNU extension
ISO C++17 does not allow incrementing expression of type bool
initialized lambda captures are a C++14 extension
constant expression evaluates to %0 which cannot be narrowed to type %1
type %0 cannot be narrowed to %1 in initializer list
non-constant-expression cannot be narrowed from type %0 to %1 in initializer list
inline variables are a C++17 extension
ISO C does not support '~' for complex conjugation of %0
complex integer types are a GNU extension
ISO C does not support '++'/'--' on complex integer type %0
static %select{function|variable}0 %1 is used in an inline function with external linkage
return type of 'main' is not 'int'
ISO C++ does not allow 'main' to be used by a program
too many braces around scalar initializer
declaration specifier missing, defaulting to 'int'
type specifier missing, defaults to 'int'
ISO C90 forbids mixing declarations and code
import of C++ module '%0' appears within extern "C" language linkage specification
redundant #include of module '%0' appears within %1
anonymous %select{structs|unions}0 are a Microsoft extension
static_cast between pointer-to-function and pointer-to-object is a Microsoft extension
using the undeclared type %0 as a default template argument is a Microsoft extension
non-type template argument containing a dereference operation is a Microsoft extension
explicit constructor calls are a Microsoft extension
forward references to 'enum' types are a Microsoft extension
implicit conversion between pointer-to-function and pointer-to-object is a Microsoft extension
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 outside namespace enclosing %2 is a Microsoft extension
template argument for template type parameter must be a type; omitted 'typename' is a Microsoft extension
using declaration referring to inaccessible member '%0' (which refers to accessible member '%1') is a Microsoft compatibility extension
'mutable' on a reference type is a Microsoft extension
lookup of %0 in member access expression is ambiguous; using member of %1
use of enumeration in a nested name specifier is a C++11 extension
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers in nested pointer types
when type is in parentheses, array cannot have dynamic size
declaration does not declare anything
%select{struct|union}0 without named members is a GNU extension
non-class friend type %0 is a C++11 extension
'main' is not allowed to be declared _Noreturn
using extended field designator is an extension
offset of on non-POD type %0
offset of on non-standard-layout type %0
vector component name '%0' is an OpenCL version 2.2 feature
replacement function %0 cannot be declared 'inline'
out-of-line declaration of a member must be a definition
ISO C++ specifies that qualified reference to %0 is a constructor name rather than a %select{template name|type}1 in this context, despite preceding %select{'typename'|'template'}2 keyword
parameter %0 was not declared, defaulting to type 'int'
%diff{promoted type $ of K&R function parameter is not compatible with the parameter type $|promoted type of K&R function parameter is not compatible with parameter type}0,1 declared in a previous prototype
%select{class|variable}0 template partial specialization is not more specialized than the primary template
%select{class|variable}0 template partial specialization contains %select{a template parameter|template parameters}1 that cannot be deduced; this partial specialization will never be used
plain '_Complex' requires a type specifier; assuming '_Complex double'
predefined identifier is only valid inside function
pseudo-destructors on type void are a Microsoft extension
function definition with pure-specifier is a Microsoft extension
redefinition of typedef %0 is a C11 feature
ISO C++17 does not allow 'register' storage class specifier
friend function %0 retaining previous language linkage is an extension
%select{void function|void method|constructor|destructor}1 %0 should not return a value
void %select{function|method|block}1 %0 should not return void expression
non-void %select{function|method}1 %0 should return a value
C++98 requires an accessible copy constructor for class %2 when binding a reference to a temporary; was %select{private|protected}0
no viable constructor %select{copying variable|copying parameter|returning object|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1; C++98 requires a copy constructor when binding a reference to a temporary
invalid application of '%select{sizeof|alignof|vec_step}0' to a function type
invalid application of '%select{sizeof|alignof|vec_step}0' to a void type
'%0' is not permitted on a declaration of a type
capture of '*this' by copy is a C++17 extension
static_assert with no message is a C++17 extension
static data member %0 in union is a C++11 extension
redeclaring non-static %0 as static is a Microsoft extension
string literal operator templates are a GNU extension
ISO C90 does not allow subscripting non-lvalue array
address non-type template argument cannot be surrounded by parentheses
template argument uses local type %0
non-type template argument referring to %select{function|object}0 %1 with internal linkage is a C++11 extension
template argument uses unnamed type
'template' keyword outside of a template
default template arguments for a function template are a C++11 extension
first declaration of %select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 outside namespace %2 is a C++11 extension
ISO C forbids taking the address of an expression of type 'void'
method parameter type %diff{$ does not match super class method parameter type $|does not match super class method parameter type}0,1
C99 forbids casting nonscalar type %0 to the same type
cast to union type is a GNU extension
incompatible operand types (%0 and %1)
pointer type mismatch%diff{ ($ and $)|}0,1
C99 forbids conditional expressions with only one void side
pointer/integer type mismatch in conditional expression%diff{ ($ and $)|}0,1
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers
incompatible function pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between pointers to integer types with different sign
incompatible integer to pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer to integer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between void pointer and function pointer
tentative definition of variable with internal linkage has incomplete non-array type %0
ISO C++ does not allow indirection on operand of type %0
ordered comparison of function pointers (%0 and %1)
ordered comparison between pointer and zero (%0 and %1) is an extension
ordered comparison between pointer and integer (%0 and %1)
zero size arrays are an extension
typedef requires a name
'typename' occurs outside of a template
use of undeclared identifier %0; unqualified lookup into dependent bases of class template %1 is a Microsoft extension
unelaborated friend declaration is a C++11 extension; specify '%select{struct|interface|union|class|enum}0' to befriend %1
union member %0 has reference type %1, which is a Microsoft extension
using directive refers to implicitly-defined namespace 'std'
field %0 with variable sized type %1 not at the end of a struct or class is a GNU extension
variable templates are a C++14 extension
'main' is not allowed to be declared variadic
variable length arrays are a C99 feature
variable length array folded to constant array as an extension
__final is a GNU extension, consider using C++11 final
constrained by %select{|implicitly }1%select{private|protected}0 inheritance here
%select{|implicitly }1declared %select{private|protected}0 here
protected %select{constructor|destructor}0 can only be used to %select{construct|destroy}0 a base class subobject
must name member using the type of the current context %0
can only access this member on an object of type %0
add stubs for missing protocol requirements
add a '@synthesize' directive
add a pair of parentheses to declare a variable
candidate function made ineligible by enable_if
declared with %0 attribute here
allocated with 'new%select{[]|}0' here
lookup in the object type %0 refers here
lookup from the current scope refers here
candidate found by name lookup is %q0
inherited from base class %0 here
member found by ambiguous name lookup
because of ambiguity in conversion %diff{of $ to $|between types}0,1
use __bridge to convert directly (no change in ownership)
use %select{__bridge_retained|CFBridgingRetain call}1 to make an ARC object available as a +1 %0
use %select{__bridge_transfer|CFBridgingRelease call}1 to transfer ownership of a +1 %0 into ARC
use __bridge with C-style cast to convert directly (no change in ownership)
use __bridge_retained with C-style cast to make an ARC object available as a +1 %0
use __bridge_transfer with C-style cast to transfer ownership of a +1 %0 into ARC
field has non-trivial ownership qualification
declaration uses type that is ill-formed in ARC
declaration in interface is not in the '%select{alloc|copy|init|new}0' family because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
init method must return a type related to its receiver type
declaration in interface
block will be retained by %select{the captured object|an object strongly retained by the captured object}0
also accessed here
declaration uses __weak, but ARC is disabled
declaration uses __weak, which the current deployment target does not support
array %0 declared here
conversion to %select{integral|enumeration}0 type %1 declared here
constraint '%0' is already present here
use constraint modifier "%0"
type %0 is incomplete
setter and getter must both be synthesized, or both be user defined,or the property must be nonatomic
attribute is here
previous %select{unmarked |}0overload of function is here
property should be changed to be readwrite
%0 has been explicitly marked %select{unavailable|deleted|deprecated|partial}1 here
return type of 'await_ready' is required to be contextually convertible to 'bool'
explicitly cast the pointer to silence this warning
base class %0 specified here
bit-field is declared here
did you mean to use __block %0?
called by %0
%0 declared here
callee declares array parameter as static here
declaration missing '[[carries_dependency]]' attribute is here
cast expression to void to silence warning
consider making the bitfield type %select{unsigned|signed}0
consider defining %0 with the '%1' calling convention
class is declared here
explicitly declare getter %objcinstance0 with '%1' to return an 'unowned' object
parameter of the 'collapse' clause
compatible type %0 specified here
place parentheses around the assignment to silence this warning
use '==' to turn this assignment into an equality comparison
use '!=' to turn this compound assignment into an inequality comparison
conflicting attribute is here
conflicting %0 here
previous return statement is here
member not initialized by constructor
virtual base class declared here
type conversion function declared here
use 'static' to give inline function %0 internal linkage
call to %0 implicitly required by coroutine function here
call to 'await_transform' implicitly required by 'co_await' here
call to '%select{initial_suspend|final_suspend}0' implicitly required by the %select{initial suspend point|final suspend point}0
conflicting __device__ function declared here
candidate template ignored: target attributes do not match
annotate %select{%1|anonymous %1}0 with an availability attribute to silence this warning
this declaration is not a prototype; add 'void' to make it a prototype for a zero-parameter function
declare the parameter __autoreleasing explicitly to suppress this warning
declare the parameter __strong or capture a __block __strong variable to keep values alive across autorelease pools
function is a coroutine due to use of '%0' here
declared %select{'returns_nonnull'|'nonnull'}0 here
required by 'require_constant_initialization' attribute here
during template argument deduction for %select{class|variable}0 template %select{partial specialization |}1%2 %3
in instantiation of default argument for '%0' required here
default argument declared here
in instantiation of default function argument expression for '%0' required here
%0 defined here
conversion to pointer type %0
qualify call to silence this warning
%select{copy|move}0 assignment operator of %1 is implicitly deleted because field %2 is of %select{reference|const-qualified}4 type %3
copy constructor of %0 is implicitly deleted because field %1 is of rvalue reference type %2
copy %select{constructor|assignment operator}0 is implicitly deleted because %1 has a user-declared move %select{constructor|assignment operator}2
%select{default constructor of|constructor inherited by}0 %1 is implicitly deleted because all %select{data members|data members of an anonymous union member}2 are const-qualified
%select{default constructor of|constructor inherited by}0 %1 is implicitly deleted because field %2 of %select{reference|const-qualified}4 type %3 would not be initialized
virtual destructor requires an unambiguous, accessible 'operator delete'
%select{default constructor of|copy constructor of|move constructor of|copy assignment operator of|move assignment operator of|destructor of|constructor inherited by}0 %1 is implicitly deleted because %select{base class %3|%select{||||variant }4field %3}2 has %select{no|a deleted|multiple|an inaccessible|a non-trivial}4 %select{%select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|%select{default|corresponding|default|default|default}4 constructor}0|destructor}5%select{||s||}4
template parameter is used in default argument declared here
must qualify identifier to find this declaration in dependent base class
type %0 is declared here
due to '%0' being dllexported%select{|; try compiling in C++11 mode}1
element %0 also has value %1
put the semicolon on a separate line to silence this warning
remove parentheses to declare a variable
change this ',' to a ';' to call %0
replace parentheses with an initializer to declare a variable
jump enters lifetime of block which captures a destructible C++ object
jump enters lifetime of block which strongly captures a variable
jump enters lifetime of block which weakly captures a variable
enum %0 was explicitly specialized here
remove extraneous parentheses around the comparison to silence this warning
use '=' to turn this equality comparison into an assignment
declared here%select{ in module '%1'|}0
place parentheses around comparison expression to evaluate it first
use '%0' instead
jump exits scope of __block variable
jump exits lifetime of block which captures a destructible C++ object
jump exits lifetime of block which strongly captures a variable
jump exits lifetime of block which weakly captures a variable
jump exits scope of variable with __attribute__((cleanup))
jump exits catch block
jump exits try block
jump exits scope of variable with non-trivial destructor
jump exits autoreleasepool block
jump exits @catch block
jump exits @finally block
jump exits scope of __strong variable
jump exits @synchronized block
jump exits @try block
jump exits scope of __weak variable
jump exits __except block
jump exits __finally block
jump exits __try block
jump exits scope of lifetime-extended temporary with non-trivial destructor
explicit %select{constructor|deduction guide}0 declared here
explicit instantiation candidate function %q0 template here %1
explicit instantiation definition is here
explicit instantiation refers here
explicit specialization declared here
while substituting explicitly-specified template arguments into function template %0 %1
'template<>' header not required for explicitly-specialized class %0 declared here
extern "C" language linkage specification begins here
declared %select{in global scope|with C language linkage}0 here
did you forget ';'?
field designator refers here
add missing switch cases
final overrider of %q0 in %1
initialized flexible array member %0 is here
selected '%select{begin|end}0' %select{function|template }1%2 with iterator type %3
in implicit call to 'operator%select{!=|*|++}0' for iterator of type %1
did you mean to use '%0'?
treat the string as an argument to avoid this
format string is defined here
forward declaration of class here
forward declaration of template entity is here
found near match '%0'
from 'diagnose_if' attribute on %0:
did you mean %0?
while substituting deduced template arguments into function template %0 %1
in instantiation of function template specialization %q0 requested here
function template %q0 matches specialization %1
suffix with parentheses to turn this into a function call
prefix with the address-of operator to silence this warning
or because setter is declared here, but no getter method %0 is found
inline assembly label %0 declared here
Guarded_by declared here.
hidden overloaded virtual function %q0 declared here%select{|: different classes%diff{ ($ vs $)|}2,3|: different number of parameters (%2 vs %3)|: type mismatch at %ordinal2 parameter%diff{ ($ vs $)|}3,4|: different return type%diff{ ($ vs $)|}2,3|: different qualifiers (%select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}2 vs %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}3)|: different exception specifications}1
type declaration hidden
declaration hides type
field of illegal %select{type|pointer type}0 %1 declared here
class implementation is declared here
when implemented by class %0
implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 inferred target collision: call to both %select{__device__|__global__|__host__|__host__ __device__}1 and %select{__device__|__global__|__host__|__host__ __device__}2 members
%0 is an implicit parameter
explicitly defaulted function was implicitly deleted here
in implicit initialization of binding declaration %0
add 'constexpr'
default member initializer declared here
while declaring the implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 for %0
when looking up '%select{begin|end}0' function for range expression of type %1
in implicit initialization of %select{array element %1 with omitted initializer|field %1 with omitted initializer|trailing array elements in runtime-sized array new}0
in initialization of temporary of type %0 created to list-initialize this reference
include the header <%0> or explicitly provide a declaration for '%1'
conformance of forward class %0 to protocol %1 can not be confirmed
possible target of indirect goto statement
consider using __builtin_trap() or qualifying pointer with 'volatile'
use '|=' to turn this inequality comparison into an or-assignment
insert an explicit cast to silence this issue
insert 'break;' to avoid fall-through
insert '%0;' to silence this warning
add an explicit instantiation declaration to suppress this warning if %q0 is explicitly instantiated in another translation unit
(skipping %0 context%s0 in backtrace; use -ftemplate-backtrace-limit=0 to see all)
%select{implicit|explicit}0 instantiation first required here
it delegates to
instance variable is declared here
lambda expression begins here
implicit capture of lambda object due to conversion to block pointer here
local declaration nearly matches
type of %ordinal0 parameter of local declaration does not match definition%diff{ ($ vs $)|}1,2
the other acquisition of %0 '%1' is here
%0 acquired here
use '%0' for a bitwise operation
remove constant to silence this warning
add parentheses after the '!' to evaluate the %select{comparison|bitwise operator}0 first
add parentheses around left hand side expression to silence this warning
%select{decremented|incremented}0 here
change return type to 'int'
remove '_Noreturn'
member is declared here
member %0 declared here
member declaration does not match because it %select{is|is not}0 const qualified
member declaration nearly matches
type of %ordinal0 parameter of member declaration does not match definition%diff{ ($ vs $)|}1,2
member %0 first declared here
'->' applied to return value of the operator->() declared here
in implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 for %1 first required here
explicitly cast the argument to size_t to silence this warning
did you mean to compare the result of %0 instead?
method %0 declared here
compiler has implicitly changed method %0 return type
method %0 is used for the forward class
%0 begins here
namespace %0 defined here
consider using vld1_%0%1() to initialize a vector from memory, or vcreate_%0%1() to initialize from an integer constant
consider using vld1q_%0%1() to initialize a vector from memory, or vcombine_%0%1(vcreate_%0%1(), vcreate_%0%1()) to initialize from integer constants
non-deducible template parameter %0
not-yet-instantiated member is declared here
%0 is not literal because it has base class %1 of non-literal type
%0 is not literal because it has data member %1 of %select{non-literal|volatile}3 type %2
incomplete type %0 is not a literal type
%0 is not literal because it is not an aggregate and has no constexpr constructors other than copy or move constructors
%0 is not literal because it has a non-trivial destructor
%0 is not literal because it has a user-provided destructor
%select{struct|interface|class}0 with virtual base %plural{1:class|:classes}1 is not a literal type
non-template declaration found by name lookup
non-templated declaration is here
because it has a default argument
because type %0 has a virtual %select{member function|base class}1
because field %0 has an initializer
because no %select{<<ERROR>>|constructor|constructor|assignment operator|assignment operator|<<ERROR>>}2 can be used to %select{<<ERROR>>|copy|move|copy|move|<<ERROR>>}2 %select{base class|field|an object}0 of type %3
because %select{base class of |field of |}0type %1 has no default constructor
because type %0 has a member with %select{no|no|__strong|__weak|__autoreleasing}1 ownership
because its parameter is %diff{of type $, not $|of the wrong type}2,3
because the function selected to %select{construct|copy|move|copy|move|destroy}2 %select{base class|field}0 of type %1 is not trivial
because %select{base class of |field of |}0type %1 has a user-provided %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2
because it is a variadic function
destructor for %0 is not trivial because it is virtual
declaration missing '[[noreturn]]' attribute is here
%0 should be declared prior to the call site%select{| or in %2| or in an associated namespace of one of its arguments}1
insert '%select{_Nonnull|_Nullable|_Null_unspecified}0' if the %select{pointer|block pointer|member pointer|array parameter}1 %select{should never be null|may be null|should not declare nullability}0
%0 specified here
use nullability type specifier %0 to affect the innermost pointer type of %1
'%0' declared here
method marked as designated initializer of the class here
use 'isEqual:' instead
%select{first|second|third}0 parameter has unexpected type %1 (should be %2)
method returns unexpected type %0 (should be an object type)
add a super class to fix this problem
type parameter %0 declared here
method %0 that returns %1 declared here
%select{expected assignment expression|expected compound statement|expected exactly two expression statements|expected in right hand side of the first expression}0
'%0' clause used here
%select{expected an expression statement|expected built-in assignment operator|expected expression of scalar type|expected lvalue expression}0
%select{expected an expression statement|expected built-in binary or unary operator|expected unary decrement/increment operation|expected expression of scalar type|expected assignment expression|expected built-in binary operator|expected one of '+', '*', '-', '/', '&', '^', '%|', '<<', or '>>' built-in operations|expected in right hand side of expression}0
as specified in %select{'collapse'|'ordered'|'collapse' and 'ordered'}0 clause%select{||s}0
%select{|previous }0'hint' clause with value '%1'
%select{|previous }0directive with no 'hint' clause specified
defined as %0
implicitly determined as %0
loop step is expected to be %select{negative|positive}0 due to this condition
%select{statement|directive}0 outside teams construct here
nested teams construct here
'nowait' clause is here
'ordered' clause with specified parameter
mappable type cannot be polymorphic
%select{static data member is predetermined as shared|variable with static storage duration is predetermined as shared|loop iteration variable is predetermined as private|loop iteration variable is predetermined as linear|loop iteration variable is predetermined as lastprivate|constant variable is predetermined as shared|global variable is predetermined as shared|non-shared variable in a task construct is predetermined as firstprivate|variable with automatic storage duration is predetermined as private}0%select{|; perhaps you forget to enclose 'omp %2' directive into a parallel or another task region?}1
previous 'critical' region starts here
'%0' clause is specified here
previous clause with directive name modifier specified here
previously referenced here
mappable type cannot contain static members
predetermined as a firstprivate in a task construct here
previously declared '%0' here
use -foperator-arrow-depth=N to increase 'operator->' limit
'operator->' declared here produces an object of type %0
(skipping %0 'operator->'%s0 in backtrace)
overridden method is here
overridden virtual function is here
built-in candidate %0
candidate %select{function|function|constructor|function |function |constructor |is the implicit default constructor|is the implicit copy constructor|is the implicit move constructor|is the implicit copy assignment operator|is the implicit move assignment operator|inherited constructor|inherited constructor }0%2%select{| has different class%diff{ (expected $ but has $)|}4,5| has different number of parameters (expected %4 but has %5)| has type mismatch at %ordinal4 parameter%diff{ (expected $ but has $)|}5,6| has different return type%diff{ ($ expected but has $)|}4,5| has different qualifiers (expected %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}4 but found %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}5)| has different exception specification}3
candidate %select{function|function|constructor|function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor}0 %select{|template }1not viable: requires%select{ at least| at most|}2 %3 argument%s3, but %4 %plural{1:was|:were}4 provided
candidate %select{function|function|constructor|function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor}0 %select{|template }1not viable: %select{requires at least|allows at most single|requires single}2 argument %3, but %plural{0:no|:%4}4 arguments were provided
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: %select{%ordinal6|'this'}5 argument (%2) is in address space %3, but parameter must be in address space %4
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: cannot implicitly convert argument %diff{of type $ to $|type to parameter type}2,3 for %select{%ordinal5 argument|object argument}4 under ARC
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: cannot %select{convert from|convert from|bind}2 %select{base class pointer|superclass|base class object of type}2 %3 to %select{derived class pointer|subclass|derived class reference}2 %4 for %ordinal5 argument
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: no known conversion %diff{from $ to $|from argument type to parameter type}2,3 for %select{%ordinal5 argument|object argument}4%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}6
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: cannot convert argument of incomplete type %diff{$ to $|to parameter type}2,3 for %select{%ordinal5 argument|object argument}4%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}6
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: %ordinal4 argument (%2) would lose %select{const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}3 qualifier%select{||s||s|s|s}3
candidate %select{|function|||function|||||function (the implicit copy assignment operator)|function (the implicit move assignment operator)||}0 not viable: 'this' argument has type %2, but method is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}3
candidate template ignored: failed template argument deduction
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: %select{%ordinal6|'this'}5 argument (%2) has %select{no|__weak|__strong}3 ownership, but parameter has %select{no|__weak|__strong}4 ownership
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: cannot convert initializer list argument to %3
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: expects an l-value for %select{%ordinal3 argument|object argument}2
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: no overload of %3 matching %2 for %ordinal4 argument
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: %select{%ordinal6|'this'}5 argument (%2) has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}3 ownership, but parameter has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}4 ownership
candidate %select{function|function|constructor|function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor}0 not viable: call to %select{__device__|__global__|__host__|__host__ __device__|invalid}1 function from %select{__device__|__global__|__host__|__host__ __device__|invalid}2 function
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 not viable: %ordinal4 argument (%2) would lose __unaligned qualifier
candidate template ignored: deduced type %diff{$ of %select{|element of }4%ordinal0 parameter does not match adjusted type $ of %select{|element of }4argument|of %select{|element of }4%ordinal0 parameter does not match adjusted type of %select{|element of }4argument}1,2%3
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor|inherited constructor }0%1 has been %select{explicitly made unavailable|explicitly deleted|implicitly deleted}2
candidate template ignored: disabled by %0%1
candidate disabled due to OpenCL extension
candidate disabled: %0
candidate template ignored: requirement '%0' was not satisfied%1
candidate template ignored: invalid explicitly-specified argument for template parameter %0
candidate template ignored: invalid explicitly-specified argument for %ordinal0 template parameter
candidate address cannot be taken because parameter %0 has pass_object_size attribute
candidate %select{constructor|template}0 ignored: instantiation %select{takes|would take}0 its own class type by value
candidate template ignored: couldn't infer template argument %0
candidate template ignored: deduced conflicting %select{types|values|templates}0 for parameter %1%diff{ ($ vs. $)|}2,3
candidate template ignored: deduced values %diff{of conflicting types for parameter %0 (%1 of type $ vs. %3 of type $)|%1 and %3 of conflicting types for parameter %0}2,4
constructor from base class %0 inherited here
candidate %select{constructor|template}0 ignored: inherited constructor cannot be used to %select{copy|move}1 object
candidate template ignored: substitution exceeded maximum template instantiation depth
candidate template ignored: could not match %diff{$ against $|types}0,1
candidate template ignored: could not match %q0 against %q1
candidate template ignored: substitution failure%0%1
candidate template ignored: cannot deduce a type for %0 that would make %2 equal %1
conversion candidate of type %0
remaining %0 candidate%s0 omitted; pass -fshow-overloads=all to show them
declared with index %0 here
passing argument to parameter here
passing argument to parameter %0 here
parameter pack %0 declared here
parameter of type %0 is declared here
partial specialization matches %0
inline function performs a conversion which is forbidden in ARC
possible target for call
when applied to this declaration
'#pragma clang attribute push' regions ends here
place parentheses around the %0 expression to evaluate it first
place parentheses around the '?:' expression to evaluate it first
place parentheses around the '%0' expression to silence this warning
module loaded from '%0'
previous declaration of class template partial specialization %0 is here
previously declared '%1' here
previous attribute is here
%0 is a builtin with type %1
for type %0
previous explicit instantiation is here
previous initialization %select{|with side effects }0is here%select{| (side effects may not occur at run time)}0
previous inheritance model specified here
previously defined as an alias for %0
previous template specialization is here
previous uuid specified here
did you mean to call the %0 method?
while substituting prior template arguments into %select{non-type|template}0 template parameter%1 %2
use __attribute__((visibility("hidden"))) attribute instead
property %0 is declared %select{deprecated|unavailable|partial}1 here
property declared here
property synthesized here
jump bypasses setup of __block variable
jump bypasses initialization of variable with __attribute__((cleanup))
jump enters controlled statement of constexpr if
jump bypasses initialization of catch block
jump bypasses initialization of try block
jump enters controlled statement of if available
jump bypasses auto release push of @autoreleasepool block
jump bypasses initialization of @catch block
jump enters Objective-C fast enumeration loop
jump bypasses initialization of @finally block
jump bypasses initialization of __strong variable
jump bypasses initialization of @synchronized block
jump bypasses initialization of @try block
jump bypasses initialization of __weak variable
jump bypasses initialization of __except block
jump bypasses initialization of __finally block
jump bypasses initialization of __try block
jump bypasses variable initialization
jump bypasses initialization of non-POD variable
jump bypasses variable with a non-trivial destructor
jump bypasses initialization of variable length array
jump bypasses initialization of VLA type alias
jump bypasses initialization of VLA typedef
protocol is declared here
protocol %0 has no definition
protocol method is here
it could also be property %select{of type %1|without attribute '%1'|with attribute '%1'|with getter %1|with setter %1}0 declared here
qualified call to %0::%1 is treated as a virtual call to %1 due to -fapple-kext
unimplemented pure virtual method %0 in %1
receiver is instance of class declared here
receiver expression is here
receiver is treated with 'id' type for purpose of method lookup
'%0' included multiple times, additional include site here
'%0' included multiple times, additional include site in header from module '%1'
%select{reference|pointer}0 member declared here
member with reference subobject declared here
binding reference variable %0 here
%select{const|reference}0 member %1 will never be initialized
%0 returns a reference
class template declared here
use 'static_cast' to adjust the pointer correctly while %select{upcasting|downcasting}0
%select{overridden|current}0 method is explicitly declared 'instancetype'%select{| and is expected to return an instance of its class type}0
%select{overridden|current}0 method is part of the '%select{|alloc|copy|init|mutableCopy|new|autorelease|dealloc|finalize|release|retain|retainCount|self}1' method family%select{| and is expected to return an instance of its class type}0
%select{class|instance}0 method %1 is assumed to return an instance of its receiver type (%2)
overridden method returns an instance of its class type
remove the call to '%0' since unsigned values cannot be negative
remove call to max function and unsigned zero argument
remove std::move call here
use function '%0' instead
%select{function|method|block}0 has been explicitly marked sentinel here
if you supply your own aligned allocation functions, use -Wno-aligned-allocation-unavailable to silence this diagnostic
attempt to specialize declaration here
explicitly specialized declaration is here
use array indexing to silence this warning
change size argument to be the size of the destination
change the argument to be the free space in the destination buffer minus the terminating null byte
did you mean %select{struct|interface|class}0 here?
class with specified objc_requires_property_definitions attribute is declared here
surrounding namespace with visibility attribute ends here
surrounding namespace with visibility attribute starts here
conversion to %select{integral|enumeration}0 type %1
non-type template argument refers to %select{function|object}0 here
non-type template argument refers here
template argument refers to function template %0, here
class template %0 was explicitly specialized here
in instantiation of template class %q0 requested here
class template %0 was instantiated here
template is declared here
%select{function template|class template|variable template|type alias template|template template parameter}0 %1 declared here
while checking a default template argument used here
in instantiation of enumeration %q0 requested here
in instantiation of exception specification for %0 requested here
in instantiation of member class %q0 requested here
in instantiation of member function %q0 requested here
template non-type parameter has a different type %0 in template argument
previous non-type template parameter with type %0 is here
in instantiation of default member initializer %q0 requested here
template parameter has a different kind in template argument
template parameter is declared here
%select{too few|too many}0 template parameters in template template argument
previous default template argument defined here
previous %select{template type|non-type template|template template}0 parameter%select{| pack}1 declared here
%select{template type|non-type template|template template}0 parameter%select{| pack}1 does not match %select{template type|non-type template|template template}0 parameter%select{ pack|}1 in template argument
previous template %select{declaration|template parameter}0 is here
use -ftemplate-depth=N to increase recursive template instantiation depth
in instantiation of static data member %q0 requested here
in instantiation of template type alias %0 requested here
unnamed type used in template argument was declared here
in instantiation of variable template specialization %q0 requested here
Thread warning in function '%0'
%select{destructor|deallocator}0 has a %select{non-throwing|implicit non-throwing}1 exception specification
function declared non-throwing here
%select{alignment|size}0 of first field is %1 bits
%0 is incomplete
%select{function %1 which returns const-qualified type %2 declared here|variable %1 declared const here|%select{non-|}1static data member %2 declared const here|member function %q1 is declared const here}0
did you mean to use '.' instead?
use a tag name here to establish linkage prior to definition
referenced member %0 is declared here
enclose %0 in %select{an @available|a __builtin_available}1 check to silence this warning
remove the %select{'%1' if its condition|condition if it}0 is always %select{false|true}2
during field initialization in %select{this|the implicit default}0 constructor
uninitialized reference member is here
%select{uninitialized use occurs|variable is captured by block}0 here
silence by adding parentheses to mark code as explicitly dead
unguarded header; consider using #ifdef guards or #pragma once
use non-reference type %0
use reference type %0 to prevent copying
use 'thread_local' to allow this
use non-reference type %0 to keep the copy or type %1 to prevent copying
used here
used in initialization here
implicit default constructor suppressed by user-declared constructor
%select{|previous }0using declaration
use %select{an alias declaration|a typedef declaration|a reference|a const variable|a constexpr variable}0 instead
conflicting declaration
target of using declaration
add 'typename' to treat this using declaration as a type
in value-initialization of type %0 here
variable %0 is declared here
variable %0 is%select{| explicitly}1 captured here
initialize the variable %0 to silence this warning
previous declaration of variable template partial specialization is here
%select{%1 is a virtual base class of base class %2 declared here|virtual base class %1 declared here}0
which delegates to
detected while default synthesizing properties in class implementation
widen this field to %0 bits to store all values of %1
within field of type %0 declared here
non-virtual member function marked '%0' hides virtual member %select{function|functions}1
only virtual member functions can be marked '%0'
absolute value function %0 given an argument of type %1 but has parameter of type %2 which may cause truncation of value
abstract class is marked '%select{final|sealed}0'
initializer for virtual base class %0 of abstract class %1 will never be used
access declarations are deprecated; use using declarations instead
type of property %0 does not match type of accessor %1
acquiring %0 '%1' requires negative capability '%2'
%0 '%1' must be acquired before '%2'
Cycle in acquired_before/after dependencies, starting with '%0'
operator '%0' has lower precedence than '%1'; '%1' will be evaluated first
reference cannot be bound to dereferenced null pointer in well-defined C++ code; pointer may be assumed to always convert to true
reference cannot be bound to dereferenced null pointer in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0
%select{alias|ifunc}2 will always resolve to %0 even if weak definition of %1 is overridden
%select{alias|ifunc}1 will not be in section '%0' but in the same section as the %select{aliasee|resolver}2
aligned %select{allocation|deallocation}0 function of type '%1' is only available on %2 %3 or newer
second argument to __builtin_alloca_with_align is supposed to be in bits
multiple suitable %0 functions for %1; no 'operator delete' function will be invoked if initialization throws an exception
width of anonymous bit-field (%0 bits) exceeds width of its type; value will be truncated to %1 bit%s1
ARC %select{unused|__unsafe_unretained|__strong|__weak|__autoreleasing}0 lifetime qualifier on return type is ignored
assigning %select{array literal|dictionary literal|numeric literal|boxed expression|<should not happen>|block literal}0 to a weak %select{property|variable}1; object will be released after assignment
%select{destination for|source of}0 this %1 call is a pointer to ownership-qualified type %2
performSelector may cause a leak because its selector is unknown
weak %select{variable|property|implicit property|instance variable}0 %1 may be accessed multiple times in this %select{function|method|block|lambda}2 and may be unpredictably set to nil; assign to a strong variable to keep the object alive
weak %select{variable|property|implicit property|instance variable}0 %1 is accessed multiple times in this %select{function|method|block|lambda}2 but may be unpredictably set to nil; assign to a strong variable to keep the object alive
capturing %0 strongly in this block is likely to lead to a retain cycle
assigning retained object to %select{weak|unsafe_unretained}0 %select{property|variable}1; object will be released after assignment
assigning retained object to unsafe property; object will be released after assignment
method parameter of type %0 with no explicit ownership
call to function without interrupt attribute could clobber interruptee's VFP registers
array index %0 is past the end of the array (which contains %1 element%s2)
array index %0 is before the beginning of the array
ignored asm label '%0' on automatic variable
value size does not match register size specified by the constraint and modifier
the argument to %0 has side effects that will be discarded
%select{@available|__builtin_available}0 does not guard availability here; use if (%select{@available|__builtin_available}0) instead
specifying 'uuid' as an ATL attribute is deprecated; use __declspec instead
memory order argument to atomic operation is invalid
writable atomic property %0 cannot pair a synthesized %select{getter|setter}1 with a user defined %select{getter|setter}2
@protocol is using a forward protocol declaration of %0
'abi_tag' attribute on %select{non-inline|anonymous}0 namespace ignored
consumed analysis attribute is attached to member of class '%0' which isn't marked as consumable
%0 attribute has invalid identifier for base name
%0 attribute has invalid identifier for context name
%0 attribute cannot be applied to this declaration
parameter of %0 attribute must be a Swift function name string
%0 attribute can only be applied to function declarations with prototypes
%0 attribute for getter must not take any parameters besides 'self:'
%0 attribute is missing parameter label clause
%0 attribute cannot specify more than one 'self:' parameter
too %select{few|many}0 parameters in %1 attribute (expected %2; got %3)
%0 attribute has invalid identifier for parameter name
%0 attribute for setter must take one parameter for new value
%0 attribute for 'subscript' must take a 'self:' parameter
%0 attribute for 'subscript' getter cannot take a 'newValue:' parameter
%0 attribute for 'subscript' must take at least one parameter
%0 attribute for 'subscript' must be a getter or setter
%0 attribute for 'subscript' setter cannot take multiple 'newValue:' parameters
%0 attribute for 'subscript' setter must take a 'newValue:' parameter
attribute %0 after definition is ignored
%0 attribute parameter %1 is negative and will be ignored
propagating dll attribute to %select{already instantiated|explicitly specialized}0 base class template without dll attribute is not supported
redeclaration of %q0 should not add %q1 attribute
explicit instantiation declaration should not be 'dllexport'
definition of dllimport static field
%0 attribute can only be applied to instance variables or properties
%0 attribute ignored
%0 attribute ignored on inline function
'%0' attribute cannot be specified on a definition
'noescape' attribute ignored on parameter of non-pointer type %0
'nonnull' attribute applied to function with no pointer arguments
'nonnull' attribute when used on parameters takes no arguments
%0 attribute ignored when parsing type
'packed' attribute was ignored on bit-fields with single-byte alignment in older versions of GCC and Clang
%0 attribute only applies to a pointer or reference (%1 is invalid)
attribute declaration must precede definition
target does not support 'protected' visibility; using 'default'
%0 attribute only applies to return values that are pointers
%0 attribute only applies to return values that are pointers or references
'sentinel' attribute requires named arguments
'sentinel' attribute only supported for variadic %select{functions|blocks}0
%0 attribute argument not supported: %1
unknown visibility %0
attribute %0 cannot be applied to %select{functions|Objective-C method}1 without return value
__weak attribute cannot be specified on a field declaration
__weak attribute cannot be specified on an automatic variable when ARC is not enabled
property is assumed atomic when auto-synthesizing the property
readonly IBOutlet property %0 when auto-synthesized may not work correctly with 'nib' loader
'auto' storage class specifier is redundant and incompatible with C++11
auto property synthesis will not synthesize property %0 declared in protocol %1
'auto' deduced as 'id' in declaration of %0
auto property synthesis will not synthesize property %0; it will be implemented by its superclass, use @dynamic to acknowledge intention
autosynthesized property %0 will use %select{|synthesized}1 instance variable %2, not existing instance variable %3
only 'unavailable' and 'deprecated' are supported for Swift availability
unknown platform %0 in availability macro
feature cannot be %select{introduced|deprecated|obsoleted}0 in %1 version %2 before it was %select{introduced|deprecated|obsoleted}3 in version %4; attribute ignored
cast from function call of type %0 to non-matching type %1
receiver type %0 is not 'id' or interface pointer, consider casting it to 'id'
base class %0 is uninitialized when used here to access %q1
binding reference member %0 to stack allocated parameter %1
binding reference %select{|subobject of }1member %0 to a temporary value
binding dereferenced null pointer to reference has undefined behavior
bit-field %0 is not wide enough to store all enumerators of %1
width of bit-field %0 (%1 bits) exceeds the width of its type; value will be truncated to %2 bit%s2
'%0' within '%1'
block captures an autoreleasing out-parameter, which may result in use-after-free bugs
attribute %0 ignored, because it cannot be applied to omitted return type
'%0' qualifier on omitted return type %1 has no effect
switch condition has boolean value
braces around scalar initializer
'break' is bound to loop, GCC binds it to switch
use of unknown builtin %0
call to pure virtual member function %0 has undefined behavior; overrides of %0 in subclasses are not available in the %select{constructor|destructor}1 of %2
too %select{few|many}0 arguments in call to %1
cannot pass object of %select{non-POD|non-trivial}0 type %1 through variadic %select{function|block|method|constructor}2; call will abort at runtime
cannot resolve lock expression
empty case range specified
overflow converting case value to switch condition type (%0 to %1)
cast from %0 to %1 increases required alignment from %2 to %3
cast between incompatible calling conventions '%0' and '%1'; calls through this pointer may abort at runtime
nonnull %select{function call|parameter}0 '%1' will evaluate to 'true' on first encounter
cast of type %0 to %1 is deprecated; use sel_getName instead
cast from %0 to %1 drops %select{const and volatile qualifiers|const qualifier|volatile qualifier}2
cast from %0 to %1 must have all intermediate pointers const qualified to be safe
category is implementing a method which will also be implemented by its primary class
calling convention %0 ignored for this target
%0 calling convention ignored on constructor/destructor
%0 calling convention ignored on variadic function
cannot refer to a non-static member from the handler of a %select{constructor|destructor}0 function try block
input conversion stopped due to an input byte that does not belong to the input codeset UTF-8
%select{class|category}0 %1 does not conform to protocol%plural{1: %3|2:s %3 and %4|3:s %3, %4 and %5|:s %3, %4, %5, ...}2
class method %objcclass0 not found (return type defaults to 'id')
class method %objcclass0 not found (return type defaults to 'id'); did you mean %objcclass2?
GCC does not allow the 'cleanup' attribute argument to be anything other than a simple identifier
collection expression type %0 may not respond to %1
possible misuse of comma operator here
%select{self-|array }0comparison always evaluates to %select{false|true|a constant}1
bitwise comparison always evaluates to %select{false|true}0
comparison of two values with different enumeration types%diff{ ($ and $)|}0,1
concatenated NSString literal for an NSArray expression - possibly missing a comma
using the result of an assignment as a condition without parentheses
conflicting distributed object modifiers on parameter type in declaration of %0
conflicting parameter types in declaration of %0%diff{: $ vs $|}1,2
conflicting distributed object modifiers on return type in declaration of %0
conflicting return type in declaration of %0%diff{: $ vs $|}1,2
conflicting variadic declaration of method and its implementation
conflicting distributed object modifiers on parameter type in implementation of %0
conflicting parameter types in implementation of %0%diff{: $ vs $|}1,2
conflicting distributed object modifiers on return type in implementation of %0
conflicting return type in implementation of %0%diff{: $ vs $|}1,2
conversion function converting %0 to its base class %1 will never be used
conversion function converting %0 to itself will never be used
conversion function converting %0 to %1 will never be used
%0 is required to declare the member 'unhandled_exception()' when exceptions are enabled
constructor parameter %0 shadows the field %1 of %2
use of this statement in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
multiple return statements in constexpr function is incompatible with C++ standards before C++14
constexpr function with no return statements is incompatible with C++ standards before C++14
variable declaration in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
type definition in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
initialized lambda captures are incompatible with C++ standards before C++14
variable templates are incompatible with C++ standards before C++14
attribute %0 ignored, because it cannot be applied to a type
'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior
decomposition declarations are incompatible with C++ standards before C++17
inline variables are incompatible with C++ standards before C++17
by value capture of '*this' is incompatible with C++ standards before C++17
static_assert with no message is incompatible with C++ standards before C++17
non-type template parameters declared with %0 are incompatible with C++ standards before C++17
mangled name of %0 will change in C++17 due to non-throwing exception specification in function signature
implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is incompatible with C++98
'auto' type specifier is incompatible with C++98
cast between pointer-to-function and pointer-to-object is incompatible with C++98
'constexpr' specifier is incompatible with C++98
constructor call from initializer list is incompatible with C++98
delegating constructors are incompatible with C++98
scalar initialized from empty initializer list is incompatible with C++98
befriending enumeration type %0 is incompatible with C++98
enumeration type in nested name specifier is incompatible with C++98
explicit conversion functions are incompatible with C++98
friend declaration naming a member of the declaring class is incompatible with C++98
jump from this goto statement to its label is incompatible with C++98
jump from this indirect goto statement to one of its possible targets is incompatible with C++98
initialization of initializer_list object is incompatible with C++98
use of non-static data member %0 in an unevaluated context is incompatible with C++98
non-class friend type %0 is incompatible with C++98
%select{anonymous struct|union}0 member %1 with a non-trivial %select{constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2 is incompatible with C++98
passing object of trivial but non-POD type %0 through variadic %select{function|block|method|constructor}1 is incompatible with C++98
reference initialized from initializer list is incompatible with C++98
substitution failure due to access control is incompatible with C++98
static data member %0 in union is incompatible with C++98
jump from switch statement to this case label is incompatible with C++98
%select{copying variable|copying parameter|returning object|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element}1 of type %2 when binding a reference to a temporary would %select{invoke an inaccessible constructor|find no viable constructor|find ambiguous constructors|invoke a deleted constructor}0 in C++98
redundant parentheses surrounding address non-type template argument are incompatible with C++98
local type %0 as template argument is incompatible with C++98
use of null pointer as non-type template argument is incompatible with C++98
non-type template argument referring to %select{function|object}0 %1 with internal linkage is incompatible with C++98
unnamed type as template argument is incompatible with C++98
use of 'template' keyword outside of a template is incompatible with C++98
default template arguments for a function template are incompatible with C++98
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 outside namespace %2 is incompatible with C++98
use of 'typename' outside of a template is incompatible with C++98
befriending %1 without '%select{struct|interface|union|class|enum}0' keyword is incompatible with C++98
'%0' type specifier is incompatible with C++98
inheriting constructors are incompatible with C++98
ms_struct may not produce Microsoft-compatible layouts for classes with base classes or virtual functions
array backing the initializer list will be destroyed at the end of %select{the full-expression|the constructor}0
-dealloc is being overridden in a category
declaration of %0 will not be visible outside of this function
declaration shadows a %select{local variable|variable in %2|static data member of %2|field of %2|typedef in %2|type alias in %2}1
attribute %0 is ignored, place it after "%select{class|struct|interface|union|enum}1" to apply attribute to type declaration
%plural{1:enumeration value %1 not explicitly handled in switch|2:enumeration values %1 and %2 not explicitly handled in switch|3:enumeration values %1, %2, and %3 not explicitly handled in switch|:%0 enumeration values not explicitly handled in switch: %1, %2, %3...}0
atomic by default property %0 has a user defined %select{getter|setter}1 (property should be marked 'atomic' if this is intended)
constructor for %0 creates a delegation cycle
%select{delete|destructor}0 called on %1 that is abstract but has non-virtual destructor
'delete' applied to a pointer-to-array type %0 treated as 'delete[]'
deleting pointer to incomplete type %0 may cause undefined behavior
%select{delete|destructor}0 called on non-final %1 that has virtual functions but non-virtual destructor
%0 is deprecated
'deprecated' attribute on anonymous namespace ignored
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-declared %select{copy %select{assignment operator|constructor}1|destructor}2
implementing deprecated %select{method|class|category}0
%0 may be deprecated because the receiver type is unknown
%0 is deprecated: %1
out-of-line definition of constexpr static data member is redundant in C++17 and is deprecated
'register' storage class specifier is deprecated and incompatible with C++17
conversion from string literal to %0 is deprecated
%0 overrides a destructor but is not marked 'override'
explicit call to +initialize results in duplicate call to +initialize
instance variable %0 is being directly accessed
explicit call to [super initialize] should only be in implementation of +initialize
%q0 redeclared inline; %1 attribute ignored
double precision constant requires cl_khr_fp64, casting to single precision
acquiring %0 '%1' that is already held
duplicate definition of category %1 on interface %0
attribute %0 is already applied with different parameters
attribute %0 is already applied
element %0 has been implicitly assigned %1 which another element has been assigned
multiple declarations of method %0 found and ignored
duplicate protocol definition of %0 is ignored
%select{destination for|source of|first operand of|second operand of}0 this %1 call is a pointer to %select{|class containing a }2dynamic class %3; vtable pointer will be %select{overwritten|copied|moved|compared}4
for loop has empty body
format string is empty
if statement has empty body
empty parentheses interpreted as a function declaration
range-based for loop has empty body
switch statement has empty body
while loop has empty body
overflow in enumeration value
equality comparison with extraneous parentheses
exception of type %0 will be caught by earlier handler
dynamic exception specifications are deprecated
declaration requires an exit-time destructor
expecting %0 '%1' to be held at start of each loop
expecting %0 '%1' to be held at the end of function
explicit instantiation of %0 that occurs after an explicit specialization has no effect
'extern' variable has an initializer
control reaches end of coroutine; which is undefined behavior because the promise type %0 does not declare 'return_void()'
control reaches end of non-void function
control reaches end of non-void lambda
function declared 'noreturn' should not return
fallthrough annotation in unreachable code
field %0 is uninitialized when used here
enumeration value %0 is out of range of flags in enumeration type %1
magnitude of floating-point constant too large for type %0; maximum is %1
magnitude of floating-point constant too small for type %0; minimum is %1
comparing floating point with == or != is unsafe
'begin' and 'end' returning different types (%0 and %1) is incompatible with C++ standards before C++17
loop variable %0 %diff{has type $ but is initialized with type $| is initialized with a value of a different type}1,2 resulting in a copy
loop variable %0 of type %1 creates a copy from type %2
loop variable %0 is always a copy because the range of type %1 does not return a reference
using '%%P' format specifier without precision
%select{values of type|enum values with underlying type}2 '%0' should not be used as format arguments; add an explicit cast to %1 instead
format specifies type %0 but the argument has %select{type|underlying type}2 %1
using '%0' format specifier annotation outside of os_log()/os_trace()
invalid conversion specifier '%0'
invalid position specified for %select{field width|field precision}0
cannot mix positional and non-positional arguments in format string
'%0' %select{length modifier|conversion specifier}1 is not supported by ISO C
using length modifier '%0' with conversion specifier '%1' is not supported by ISO C
positional arguments are not supported by ISO C
format string is not a string literal
format string is not a string literal (potentially insecure)
length modifier '%0' results in undefined behavior or no effect with '%1' conversion specifier
format string should not be a wide string
position arguments in format strings start counting at 1 (not 0)
redefinition of forward class %0 of a typedef name of an object type is ignored
cannot call function '%1' while %0 '%2' is held
calling function '%1' requires holding %0 %select{'%2'|'%2' exclusively}3
instantiation of function %q0 required here, but no definition is available
function definition inside an Objective-C container is deprecated
%0 overrides a member function but is not marked 'override'
Objective-C GC does not allow weak variables on the stack
declaration requires a global constructor
declaration requires a global destructor
'gnu_inline' attribute requires function to be marked 'inline', attribute ignored
passing variable '%1' by reference requires holding %0 %select{'%2'|'%2' exclusively}3
%select{instance variable|property}2 with %0 attribute must be an object type (invalid %1)
IBOutletCollection properties should be copy/strong and not assign
assigning %select{field|instance variable}0 to itself
inheritance model ignored on %select{primary template|partial specialization}0
size of static array must be an integer constant expression
implicit truncation from %2 to bit-field changes value from %0 to %1
initialization of pointer of type %0 to null from a constant boolean expression
implicit conversion discards imaginary component: %0 to %1
implicit conversion from enumeration type %0 to different enumeration type %1
implicit conversion increases floating-point precision: %0 to %1
implicit conversion turns floating-point number into integer: %0 to %1
implicit conversion loses floating-point precision: %0 to %1
implicit conversion of out of range value from %0 to %1 changes value from %2 to %3
implicit conversion from %0 to %1 changes non-zero value from %2 to %3
implicit conversion turns floating-point number into bool: %0 to %1
implicit conversion loses integer precision: %0 to %1
implicit conversion from %2 to %3 changes value from %0 to %1
implicit conversion changes signedness: %0 to %1
operand of ? changes signedness: %0 to %1
implicit conversion from %0 to %1 changes value from %2 to %3
implicit conversion of %select{NULL|nullptr}0 constant to %1
implicit boolean conversion of Objective-C object literal always evaluates to true
address of%select{| function| array}0 '%1' will always evaluate to 'true'
implicit conversion turns string literal into bool: %0 to %1
implicit conversion turns vector to scalar: %0 to %1
class property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this class implementation
class property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category
default assign attribute on property %0 which implements NSCopying protocol is not appropriate with -fobjc-gc[-only]
property is assumed atomic by default
declaration of built-in function '%1' requires inclusion of the header <%0>
implicit declaration of function %0
block implicitly retains 'self'; explicitly mention 'self' to indicate this is intended behavior
direct base %0 is inaccessible due to ambiguity:%1
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2
incompatible vector types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
encoding of %0 type is incomplete because %1 component has unknown encoding
incrementing expression of type bool is deprecated and incompatible with C++17
'objc_independent_class' attribute may be put on a typedef only; attribute is ignored
indirection of non-volatile null pointer will be deleted, not trap
all paths through this function will call itself
constant expression evaluates to %0 which cannot be narrowed to type %1 in C++11
type %0 cannot be narrowed to %1 in initializer list in C++11
non-constant-expression cannot be narrowed from type %0 to %1 in initializer list in C++11
initializing pointer member %0 with the stack address of parameter %1
%select{field|base class}0 %1 will be initialized after %select{field|base}2 %3
initializer overrides prior initialization of this subobject
inline namespace reopened as a non-inline namespace
instance method %objcinstance0 not found (return type defaults to 'id')
instance method %objcinstance0 not found (return type defaults to 'id'); did you mean %objcinstance2?
instance method %0 found instead of class method %1
cast to %1 from smaller integer type %0
'internal_linkage' attribute on a non-static local variable is ignored
invalid use of a cast in an inline asm context requiring an l-value: accepted due to -fheinous-gnu-extensions, but clang may remove support for this in the future
invalid capability name '%0'; capability name must be 'mutex' or 'role'
invalid constructor form class in system header, should not be explicit
local declaration of %0 hides instance variable
declaration of instance variables in the interface is deprecated
jump out of __finally block has undefined behavior
ignored 'inline' attribute on kernel function %0
kernel function %0 is a member function; this may not be accepted by nvcc
%0 '%1' is acquired exclusively and shared in the same scope
%0 '%1' is not held on every path through here
'&&' within '||'
use of logical '%0' with constant operand
logical not is only applied to the left hand side of this %select{comparison|bitwise operator}0
'%0' is bound to current loop, GCC binds it to the enclosing loop
state of variable '%0' must match at the entry and exit of loop
comparison of unsigned%select{| enum}2 expression %0 is always %1
only one parameter on 'main' declaration
variable named 'main' with external linkage has undefined behavior
bool literal returned from 'main'
taking the max of %select{a value and unsigned zero|unsigned zero and a value}0 is always equal to the other value
control may reach end of coroutine; which is undefined behavior because the promise type %0 does not declare 'return_void()'
control may reach end of non-void function
control may reach end of non-void lambda
variable %0 may be uninitialized when %select{used here|captured by block}1
%0 may not respond to %1
%0 will always overflow destination buffer
size argument in %0 call is a comparison
MIPS 'interrupt' attribute only applies to functions that have %select{no parameters|a 'void' return type}0
availability does not match previous declaration
%select{|overriding }4method %select{introduced after|deprecated before|obsoleted before}0 %select{the protocol method it implements|overridden method}4 on %1 (%2 vs. %3)
%select{|overriding }1method cannot be unavailable on %0 when %select{the protocol method it implements|its overridden method}1 is available
'delete%select{|[]}0' applied to a pointer that was allocated with 'new%select{[]|}0'; did you mean 'delete%select{[]|}0'?
section does not match previous declaration
suggest braces around initialization of subobject
%plural{1:enumeration value %1 not handled in switch|2:enumeration values %1 and %2 not handled in switch|3:enumeration values %1, %2, and %3 not handled in switch|:%0 enumeration values not handled in switch: %1, %2, %3...}0
no case matching constant switch condition '%0'
auto property synthesis is synthesizing property not explicitly synthesized
missing field %0 initializer
format string missing
method has no return type specified; defaults to 'id'
no previous prototype for function %0
missing sentinel in %select{function call|method dispatch|block call}0
no previous extern declaration for non-static variable %0
comparison of integers of different signs: %0 and %1
modifying constructor parameter %0 that shadows a field of %1
multiple methods named %0 found
several methods with selector %0 of mismatched types are found for the @selector expression
vector initializers are not compatible with NEON intrinsics in big endian mode
auto property synthesis will not synthesize property %0 because it is 'readwrite' but it will be synthesized 'readonly' via another property
auto property synthesis will not synthesize property %0 because it cannot share an ivar with another synthesized property
%select{struct|interface|union|class|enum}0 %1 does not declare any constructor to initialize its non-modifiable members
enums in the Microsoft ABI are signed integers by default; consider giving the enum %0 an unsigned underlying type to make this code portable
%0 '%1' is still held at the end of function
conflicting parameter types in declaration of %0: %1 vs %2
conflicting parameter types in implementation of %0: %1 vs %2
conflicting return type in declaration of %0: %1 vs %2
conflicting return type in implementation of %0: %1 vs %2
expression which evaluates to zero treated as a null pointer constant of type %0
cannot pass %select{non-POD|non-trivial}0 object of type %1 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
%0 has virtual functions but non-virtual destructor
comparison of nonnull %select{function call|parameter}0 '%1' %select{not |}2equal to a null pointer is '%select{true|false}2' on first encounter
function %0 declared 'noreturn' should not return
not a Doxygen trailing comment
use of unary operator that may be intended as compound assignment (%0=)
not enough variable arguments in %0 declaration to fit a sentinel
case value not in enumerated type %0
integer constant not in range of enumerated type %0
%0 attribute only applies to %select{functions|methods|properties}1 that return %select{an Objective-C object|a pointer|a non-retainable pointer}2
'NSObject' attribute may be put on a typedef only; attribute is ignored
null passed to a callee that requires a non-null argument
use of NULL in arithmetic operation
comparison between NULL and non-pointer %select{(%1 and NULL)|(NULL and %1)}0
comparison of %select{address of|function|array}0 '%1' %select{not |}2equal to a null pointer is always %select{true|false}2
synthesized setter %0 for null_resettable property %1 does not handle nil
null returned from %select{function|method}0 that requires a non-null return value
nullability specifier %0 cannot be applied to non-pointer type %1; did you mean to apply the specifier to the %select{pointer|block pointer|member pointer|function pointer|member function pointer}2?
inferring '_Nonnull' for pointer type within %select{array|reference}0 is deprecated
implicit conversion from nullable pointer %0 to non-nullable pointer type %1
%select{pointer|block pointer|member pointer}0 is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified)
array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified)
using %0 directive in %select{NSString|CFString}1 which is being passed as a formatting argument to the formatting %select{method|CFfunction}2
adding '%0' to '%1' might cause circular dependency in container
object of type %0 is not compatible with %select{array element type|dictionary key type|dictionary value type}1 %2
designated initializer missing a 'super' call to a designated initializer of the super class
designated initializer invoked a non-designated initializer
designated initializer should only invoke a designated initializer on 'super'
method override for the designated initializer of the superclass %objcinstance0 not found
%0 bridges to %1, not %2
%0 cannot bridge to %1
assignment to Objective-C's isa is deprecated in favor of object_setClass()
direct access to Objective-C's isa is deprecated in favor of object_getClass()
direct comparison of %select{an array literal|a dictionary literal|a numeric literal|a boxed expression|}0 has undefined behavior
method possibly missing a [super %0] call
cannot catch an exception thrown with @throw in C++ in the non-unified exception model
bitmasking for introspection of Objective-C object pointers is strongly discouraged
objc_precise_lifetime is not meaningful for %select{__unsafe_unretained|__autoreleasing}0 objects
'copy' attribute must be specified for the block property when -fobjc-gc-only is specified
default property attribute 'assign' not appropriate for non-GC object
no 'assign', 'retain', or 'copy' attribute is specified - 'assign' is assumed
retain'ed block property does not copy the block - use copy attribute instead
setter cannot be specified for a readonly property
using %0 with a literal is redundant
parameterized class %0 already conforms to the protocols listed; did you forget a '*'?
%0 attribute cannot be applied to %select{methods in protocols|dealloc}1
class %0 defined without specifying a base class
convenience initializer missing a 'self' call to another initializer
convenience initializer should not invoke an initializer on 'super'
direct comparison of a string literal has undefined behavior
%0 is incompatible with selectors that return a %select{struct|union|vector}1 type
the meaning of __weak has changed in manual reference-counting
%0 was declared with __weak, but __weak is ignored in files using manual reference counting
ignoring __weak in file using manual reference counting
use of old-style cast
aligned clause will be ignored because the requested alignment is not a power of 2
zero linear step (%0 %select{|and other variables in clause }1should probably be const)
OpenMP loop iteration variable cannot have more than 64 bits size and will be narrowed
OpenMP only allows an ordered construct with the simd clause nested in a simd construct
declaration is not declared in any declare target region
array section %select{lower bound|length}0 is of type 'char'
class implementation may not have super class
%0 attribute is deprecated and ignored in OpenCL version %1
%0 should not return a null pointer unless it is declared 'throw()'%select{| or 'noexcept'}1
os_log() '%%n' format specifier is not allowed
comparison of %select{constant %0|true|false}1 with %select{expression of type %2|boolean expression}3 is always %select{false|true}4
type %0 requires %1 bytes of alignment and the default allocator only guarantees %2 bytes
overloaded operator %select{>>|<<}0 has higher precedence than comparison operator
%q0 hides overloaded virtual %select{function|functions}1
padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%s2 to align anonymous bit-field
padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%s2 to align %4
padding size of %0 with %1 %select{byte|bit}2%s1 to alignment boundary
parameter '%0' not in expected state when the function returns: expected '%1', observed '%2'
argument not in expected state; expected '%0', observed '%1'
%0 is a large (%1 bytes) pass-by-value argument; pass it by reference instead ?
parentheses were disambiguated as a function declaration
passing object of class type %0 through variadic %select{function|block|method|constructor}1%select{|; did you mean to call '%3'?}2
moving a temporary object prevents copy elision
moving a local object in a return statement prevents copy elision
taking the absolute value of %select{pointer|function|array}0 type %1 is suspicious
dereference of type %1 that was reinterpret_cast from type %0 has undefined behavior
unused attribute %0 in '#pragma clang attribute push' region
#pragma options align=reset failed: %0
expected #pragma pack parameter to be '1', '2', '4', '8', or '16'
specifying both a name and alignment to 'pop' is undefined
value of #pragma pack(show) == %0
#pragma %0(pop, ...) failed: %1
only variables can be arguments to '#pragma unused'
undeclared variable %0 used as an argument for '#pragma unused'
%0 has lower precedence than %1; %1 will be evaluated first
operator '?:' has lower precedence than '%0'; '%0' will be evaluated first
object format flags cannot be used with '%0' conversion specifier
'%select{*|.*}0' specified field %select{width|precision}0 is missing a matching 'int' argument
field %select{width|precision}0 should have type %1, but argument has type %2
data argument not used by format string
missing object format flag
format string contains '\0' within the string body
format string is not null-terminated
flag '%0' is ignored when flag '%1' is present
incomplete format specifier
more '%%' conversions than data arguments
'%0' is not a valid object format flag
flag '%0' results in undefined behavior with '%1' conversion specifier
%select{field width|precision}0 used with '%1' conversion specifier, resulting in undefined behavior
data argument position '%0' exceeds the number of data arguments (%1)
use of __private_extern__ on a declaration may not produce external symbol private to the linkage unit and is deprecated
profile data may be incomplete: of %0 function%s0, %1 %plural{1:has|:have}1 no data
profile data may be out of date: of %0 function%s0, %1 %plural{1:has|:have}1 mismatched data that will be ignored
no profile data available for file "%0"
property %0 not found on object of type %1; did you mean to access property %2?
property attribute in class extension does not match the primary class
'%1' attribute on property %0 does not match the property inherited from %2
property declared as returning non-retained objects; getter returning retained objects
primary property declaration is implicitly strong while redeclaration in class extension is weak
property access is using %0 method which is deprecated
getter name mismatch between property redeclaration (%1) and its original declaration (%0)
property type %0 is incompatible with type %1 inherited from %2
passing the value that '%1' points to by reference requires holding %0 %select{'%2'|'%2' exclusively}3
the pointer incremented by %0 refers past the end of the array (that contains %1 element%s2)
the pointer decremented by %0 refers before the beginning of the array
'objc_independent_class' attribute may be put on Objective-C object pointer type only; attribute is ignored
'%0' type qualifier%s1 on return type %plural{1:has|:have}1 no effect
attribute 'readonly' of property %0 restricts attribute 'readwrite' of property inherited from %1
receiver %0 is a forward class and corresponding @interface may not exist
incompatible redeclaration of library function %0
%q0 redeclared without %1 attribute: previous %1 ignored
%q0 redeclared without 'dllimport' attribute: 'dllexport' attribute added
#pragma redefine_extname is applicable to external C declarations only; not applied to %select{function|variable}0 %1
redefinition of %0 will not be visible outside of this function
variable %0 is %select{decremented|incremented}1 both in the loop header and in the loop body
redundant move in return statement
reference %0 is not yet bound to a value when used here
'register' storage specifier on @catch parameter will be ignored
'reinterpret_cast' %select{from|to}3 class %0 %select{to|from}3 its %select{virtual base|base at non-zero offset}2 %1 behaves differently from 'static_cast'
method is expected to return an instance of its class type %diff{$, but is declared to return $|, but is declared to return different type}0,1
protocol method is expected to return an instance of the implementing class, but is declared to return %0
%select{remainder|division}0 by zero is undefined
returning address of label, which is local
returning %select{address of|reference to}0 local temporary object
%select{address of|reference to}0 stack memory associated with local variable %1 returned
return state set for an unconsumable type '%0'
return value not in expected state; expected '%0', observed '%1'
return value of %0 is a large (%1 bytes) pass-by-value object; pass it by reference instead ?
%0 has C-linkage specified, but returns user-defined type %1 which is incompatible with C
%0 has C-linkage specified, but returns incomplete type %1 which could be incompatible with C
instance method %0 is being used on 'Class' which is not in the root class
comparison of %0 unsigned%select{| enum}2 expression is always %1
sampler initializer has invalid %0 bits
zero field width in scanf format string is unused
no closing ']' for '%%[' in scanf format string
second argument to 'va_start' is not the last named parameter
second argument to 'va_arg' is of promotable type %0; this va_arg has undefined behavior because arguments will be promoted to %1
second argument to 'va_arg' is of non-POD type %0
second argument to 'va_arg' is of ARC ownership-qualified type %0
explicitly assigning value of variable of type %0 to itself
explicitly moving variable of type %0 to itself
property %0 requires method %1 to be defined - use @synthesize, @dynamic or provide a method implementation in this class implementation
property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category
non-static data member '%0' of '%1' shadows member inherited from type '%2'
shift count >= width of type
shifting a negative signed value is undefined
shift count is negative
signed shift result (%0) requires %1 bits to represent, but %2 only has %3 bits
signed shift result (%0) sets the sign bit of the shift expression's type (%1) and becomes negative
expression with side effects will be evaluated despite being used as an operand to 'typeid'
expression with side effects has no effect in an unevaluated context
signed bit-field %0 needs an extra bit to represent the largest positive enumerators of %1
sizeof on pointer operation will return size of %0 instead of %1
sizeof on array function parameter will return size of %0 instead of %1
'%0' call operates on objects of type %1 while the size is based on a different type %2
did you mean to %select{dereference the argument to 'sizeof' (and multiply it by the number of elements)|remove the addressof in the argument to 'sizeof' (and multiply it by the number of elements)|provide an explicit length}0?
argument to 'sizeof' in %0 call is the same pointer type %1 as the %select{destination|source}2; expected %3 or an explicit length
variable %0 is %select{used|captured}1 uninitialized whenever %select{'%3' condition is %select{true|false}4|'%3' loop %select{is entered|exits because its condition is false}4|'%3' loop %select{condition is true|exits because its condition is false}4|switch %3 is taken|its declaration is reached|%3 is called}2
'%0' ignored on this declaration
array argument is too small; contains %0 elements, callee requires at least %1
non-constant static local variable in inline function may be different in different files
'main' should not be declared static
static variable %0 is suspiciously used within its own initialization
this %select{function declaration is not|block declaration is not|old-style function definition is not preceded by}0 a prototype
adding %0 to a string pointer does not append to the string
adding %0 to a string does not append to the string
result of comparison against %select{a string literal|@encode}0 is unspecified (use strncmp instead)
size argument in %0 call appears to be size of the source; expected the size of the destination
the value of the size argument in 'strncat' is too large, might lead to a buffer overflow
size argument in 'strncat' call appears to be size of the source
the value of the size argument to 'strncat' is wrong
%2 defined as %select{a struct|an interface|a class}0%select{| template}1 here but previously declared as %select{a struct|an interface|a class}3%select{| template}1
%select{struct|interface|class}0%select{| template}1 %2 was previously declared as a %select{struct|interface|class}3%select{| template}1
subtraction of pointers to type %0 of zero size has undefined behavior
subobject initialization overrides initialization of other fields within its enclosing subobject
array subscript is of type 'char'
block could be declared with attribute 'noreturn'
%select{function|method}0 %1 could be declared with attribute 'noreturn'
'swift_newtype' attribute may be put on a typedef only; attribute is ignored
the semantics of this intrinsic changed with GCC version 4.4 - the newer semantics are provided here
taking address of packed member %0 of class or structure %q1 may result in an unaligned pointer value
overlapping comparisons always evaluate to %select{false|true}0
non-type template argument with value '%0' converted to '%1' for unsigned template parameter of type %2
non-type template argument value '%0' truncated to '%1' for template parameter of type %2
exported templates are unsupported
dependent nested name specifier '%0' for friend template declaration is not supported; ignoring this friend declaration
dependent nested name specifier '%0' for friend class declaration is not supported; turning off access control for %1
extraneous template parameter list in template specialization
pointer is initialized by a temporary array, which will be destroyed at the end of the full-expression
tentative array definition assumed to have one element
'this' pointer cannot be null in well-defined C++ code; pointer may be assumed to always convert to true
'this' pointer cannot be null in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0
%0 attribute requires arguments whose type is annotated with 'capability' attribute; type here is %1
%0 attribute can only be applied in a context annotated with 'capability("mutex")' attribute
%0 only applies to pointer types; type here is %1
ignoring %0 attribute because its argument is invalid
Thread safety beta warning.
Thread safety verbose warning.
%0 has a non-throwing exception specification but can still throw
%select{alignment|size}0 of field %1 (%2 bits) does not match the %select{alignment|size}0 of the first field in transparent union; transparent_union attribute ignored
first field of a transparent union cannot have %select{floating point|vector}0 type %1; transparent_union attribute ignored
transparent_union attribute can only be applied to a union definition; attribute ignored
transparent union definition must contain at least one field; transparent_union attribute ignored
'%0' only applies to %select{function|pointer|Objective-C object or block pointer}1 types; type here is %2
specified %0 type tag requires a null pointer
argument type %0 doesn't match specified %1 type tag %select{that requires %3|}2
this type tag was not designed to be used with this function
'%0' qualifier on function type %1 has no effect
'%0' qualifier on function type %1 has unspecified behavior
'%0' qualifier on reference type %1 has no effect
vector operands do not have the same elements sizes (%0 and %1)
'static' has no effect on zero-length arrays
unannotated fall-through between switch labels
unannotated fall-through between switch labels in partly-annotated function
implementing unavailable method
%0 may be unavailable because the receiver type is unknown
undeclared selector %0
undeclared selector %0; did you mean %1?
method definition for %0 not found
cannot find protocol definition for %0
inline function %q0 is not defined
%select{function|variable}0 %q1 has internal linkage but is not defined
reinterpret_cast from %0 to %1 has undefined behavior
%0 is only available on %1 %2 or newer
__declspec attribute %0 is not supported
method %0 in protocol %1 not implemented
no method with selector %0 is implemented in this translation unit
block pointer variable %0 is uninitialized when captured by block
variable %0 is uninitialized when used within its own initialization
reference %0 is not yet bound to a value when used within its own initialization
variable %0 is uninitialized when %select{used here|captured by block}1
unknown attribute %0 ignored
unknown sanitizer '%0' ignored
releasing %0 '%1' that was not held
releasing %0 '%1' using %select{shared|exclusive}2 access, expected %select{shared|exclusive}3 access
packed attribute is unnecessary for %0
%select{function|variable}0 %1 is not needed and will not be emitted
member function %0 is not needed and will not be emitted
'static' function %0 declared in header file should be declared 'static inline'
code will never be executed
'break' will never be executed
default label in switch which covers all enumeration values
loop will run at most once (loop increment never executed)
'return' will never be executed
multiple unsequenced modifications to %0
unsequenced modification and access to %0
taking the absolute value of unsigned type %0 has no effect
assigning value of signed enum type %1 to unsigned bit-field %0; negative enumerators of enum %1 will be converted to positive values
Ignoring unsupported '%0' in the target attribute string
ignoring return value of function declared with %0 attribute
%select{%select{|in}1equality|relational}0 comparison result unused
unused variable %0
container access result unused - container access should not be used for side effects
unused exception parameter %0
expression result unused
unused function %0
unused label %0
lambda capture %0 is not %select{used|required to be captured for this use}1
unused %select{typedef|type alias}0 %1
unused member function %0
unused parameter %0
private field %0 is not used
ivar %0 which backs the property is not referenced in this property's accessor
property access result unused - getters should not be used for side effects
unused %select{function|variable}0 template %1
expression result unused; should this cast be to 'void'?
expression result unused; assign into a variable to force a volatile load
invalid invocation of method '%0' on object '%1' while it is in the '%2' state
invalid invocation of method '%0' on a temporary object while it is in the '%1' state
use of out-of-scope declaration of %0
%0 was marked unused but was used
user-defined literal suffixes not starting with '_' are reserved%select{; no literal will invoke this operator|}0
using namespace directive in global context in header
passing %select{an object that undergoes default argument promotion|an object of reference type|a parameter declared with the 'register' keyword}0 to 'va_start' has undefined behavior
%select{reading|writing}1 the value pointed to by '%0' requires holding %select{any mutex|any mutex exclusively}1
%select{reading|writing}3 the value pointed to by '%1' requires holding %0 %select{'%2'|'%2' exclusively}3
instantiation of variable %q0 required here, but no definition is available
%select{reading|writing}1 variable '%0' requires holding %select{any mutex|any mutex exclusively}1
%select{reading|writing}3 variable '%1' requires holding %0 %select{'%2'|'%2' exclusively}3
variable%select{s| %1|s %1 and %2|s %1, %2, and %3|s %1, %2, %3, and %4}0 used in loop condition not modified in loop body
defaulted move assignment operator of %0 will move assign virtual base class %1 multiple times
Use of 'long' with '__vector' is deprecated
specifying vector types with the 'mode' attribute is deprecated; use the 'vector_size' attribute instead
variable length array used
weak identifier %0 never declared
an already-declared variable is made a weak_import declaration %0
explicit template instantiation %0 will emit a vtable in every translation unit
%0 has no out-of-line virtual method definitions; its vtable will be emitted in every translation unit
using %select{integer|floating point|complex}1 absolute value function %0 when argument is of %select{integer|floating point|complex}2 type
zero as null pointer constant
%select{|empty }0%select{struct|union}1 has size 0 in C, %select{size 1|non-zero size}2 in C++
the selected methods are already implemented
method %0 cannot be renamed because it overrides a method declared in a system framework
no %select{implementation file|@implementation declaration}0 for the selected %select{declaration|@interface}0 %1; please add one and run the refactoring action again
%0 is a builtin function that cannot be renamed
%0 is declared in a %1 file; rename can be initiated in a %1 file only
%0 cannot be renamed because it is declared in a system header
Lexical or Preprocessor Issue
Semantic Issue
Lambda Issue
Parse Issue
ARC Semantic Issue
ARC and @properties
ARC Casting Rules
ARC Parse Issue
ARC Weak References
ARC Restrictions
OpenMP Issue
Inline Assembly Issue
Modules Issue
Coroutines Issue
AST Deserialization Issue
Backend Issue
Refactoring Continuation Issue
API Notes Issue
Related Result Type Issue
Rename Issue
AST Serialization Issue
Nullability Issue
Generics Issue
User-Defined Issue
VTable ABI Issue
Value Conversion Issue
Documentation Issue
ARC Retain Cycle
Deprecations
Format String Issue
Cocoa API Issue
#pragma message Directive
Instrumentation Issue
Unused Entity Issue
ARC 
*** File Manager Stats:
 real files found, 
 real dirs found.
 virtual files found, 
 virtual dirs found.
 dir lookups, 
 dir cache misses.
 file lookups, 
 file cache misses.
and_eq
bitand
bitor
compl
not_eq
or_eq
xor_eq
__is_literal_type
kernel
read_only
write_only
read_write
__fp16
__alignof__
__asm
__asm__
__attribute__
__complex
__complex__
__const__
__decltype
__imag__
__inline
__inline__
__nullptr
__real__
__restrict
__restrict__
__signed
__signed__
__typeof
__typeof__
__volatile
__volatile__
__int8
_int8
__int16
_int16
__int32
_int32
_int64
__wchar_t
_asm
_alignof
__builtin_alignof
_cdecl
_fastcall
_stdcall
_thiscall
_vectorcall
_uuidof
_inline
_declspec
_pascal
__char16_t
__char32_t
not_keyword
compatibility_alias
defs
implementation
interface
protocol
selector
finally
synchronized
autoreleasepool
property
package
required
optional
synthesize
available
elif
sccs
endif
ident
ifdef
assert
ifndef
pragma
defined
unassert
include_next
__public_macro
__private_macro
__include_macros
*** Identifier Table Stats:
# Identifiers:   %d
# Empty Buckets: %d
Hash density (#identifiers per bucket): %f
Ave identifier length: %f
Max identifier length: %d
<null selector>
autorelease
dealloc
finalize
retainCount
initialize
performSelector
performSelectorInBackground
performSelectorOnMainThread
mutableCopy
appendFormat
initWithFormat
localizedStringWithFormat
stringByAppendingFormat
stringWithFormat
new[]
delete[]
nullable
null_unspecified
blocks
coroutines
cplusplus
cplusplus11
freestanding
gnuinlineasm
objc_arc
opencl
zvector
_Builtin_stddef_max_align_t
framework 
explicit 
module 
 [system]
 [extern_c]
 [swift_infer_import_as_member]
requires 
umbrella header "
umbrella "
config_macros 
[exhaustive]
textual 
private textual 
exclude 
header "
" { size 
 mtime 
 size 
export_as
export 
use 
link 
conflict 
module * {
export *
macosx-fragile
bridgeos
gnustep
objfw
threadprivate
parallel
task
simd
sections
single
master
critical
taskyield
taskwait
taskgroup
flush
ordered
teams
target data
target enter data
target exit data
target parallel
target parallel for
target update
parallel for
parallel for simd
parallel sections
for simd
cancellation point
declare reduction
declare simd
taskloop
taskloop simd
distribute
declare target
end declare target
distribute parallel for
distribute parallel for simd
distribute simd
target parallel for simd
target simd
teams distribute
teams distribute simd
teams distribute parallel for simd
teams distribute parallel for
target teams
target teams distribute
target teams distribute parallel for
target teams distribute parallel for simd
target teams distribute simd
final
num_threads
safelen
simdlen
firstprivate
lastprivate
shared
reduction
linear
aligned
copyin
copyprivate
proc_bind
schedule
nowait
untied
mergeable
device
threads
num_teams
thread_limit
priority
grainsize
nogroup
num_tasks
hint
dist_schedule
defaultmap
use_device_ptr
is_device_ptr
task_reduction
uniform
threadprivate or thread local
spread
dynamic
guided
runtime
nonmonotonic
source
sink
uval
tofrom
scalar
kernel-address
fuzzer-no-link
leak
alignment
array-bounds
float-cast-overflow
float-divide-by-zero
integer-divide-by-zero
nonnull-attribute
nullability-arg
nullability-assign
nullability-return
nullability
object-size
pointer-overflow
returns-nonnull-attribute
shift-base
shift-exponent
shift
signed-integer-overflow
vla-bound
vptr
unsigned-integer-overflow
cfi-cast-strict
cfi-derived-cast
cfi-icall
cfi-unrelated-cast
cfi-nvcall
cfi-vcall
safe-stack
undefined-trap
local-bounds
bounds
efficiency-cache-frag
efficiency-working-set
efficiency-all
 <Spelling=
<invalid>
<<<MISSING SOURCE FILE>>>
UTF-16 (BE)
UTF-16 (LE)
UTF-32 (BE)
UTF-32 (LE)
UTF-7
UTF-1
UTF-EBCDIC
SDSU
BOCU-1
GB-18030
<<<INVALID BUFFER>>
<<<<<INVALID SOURCE LOCATION>>>>>
<<<<INVALID BUFFER>>>>
<built-in>
<inline asm>
<scratch space>
*** Source Manager Stats:
 files mapped, 
 mem buffers mapped.
 local SLocEntry's allocated (
 bytes of capacity), 
B of Sloc address space used.
 loaded SLocEntries allocated, 
 bytes of files mapped, 
 files with line #'s computed, 
 files with macro args computed.
FileID scans: 
 linear, 
 binary.
signed char
unsigned char
unsigned short
unsigned int
long int
long unsigned int
long long int
long long unsigned int
memory
e-m:e-p:32:32-i1:8:32-i8:8:32-i16:16:32-i64:32-f64:32-a:0:32-n32
e-m:e-p:32:32:32-a:0-n16:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f32:32:32-f64:64:64-v32:32:32-v64:64:64-v512:512:512-v1024:1024:1024-v2048:2048:2048
E-m:e-p:32:32-i64:64-a:0:32-n32-S64
mcount
__mcount
.mcount
_mcount
e-m:e-p:32:32-i64:64-n8:16:32-S128
e-m:e-p:32:32-i64:64-n8:16:32:64-S128
e-p:32:32-i64:64
e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64
e-p:16:8-i8:8-i16:8-i32:8-i64:8-f32:8-f64:8-n8-a:8
E-m:e-p:64:64-i64:64-n32:64-S128
e-m:e-p:64:64-i64:64-n32:64-S128
e-m:e-p:16:16-i32:16-i64:16-f32:16-f64:16-a:8-n8:16-S16
E-p:32:32:32-i8:8:32-i16:16:32-n32
e-p:32:32:32-i8:8:32-i16:16:32-n32
e-m:e-v128:32-v16:16-v32:32-v96:32-n8:16:32:64-S128
E-m:o-p:32:32-f64:32:64-n32
E-m:o-i64:64-n32:64
E-m:e-p:32:32-i64:64-n32:64
amdgiz
amdgizcl
e-p:64:64-p1:64:64-p2:64:64-p3:32:32-p4:32:32-p5:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-A5
e-p:32:32-p1:64:64-p2:64:64-p3:32:32-p4:64:64-p5:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64
e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64
E-m:e-p:32:32-i64:64-f128:64-n32-S64
e-m:e-p:32:32-i64:64-f128:64-n32-S64
E-m:e-i64:64-n32:64-S128
E-p:32:32:32-i1:8:8-i8:8:32-i16:16:32-i32:32:32-i64:32:32-f32:32:32-f64:32:32-v64:32:32-v128:32:32-v256:32:32-v512:32:32-v1024:32:32-a0:0:32-n32
e-p:32:32:32-i1:8:8-i8:8:32-i16:16:32-i32:32:32-i64:32:32-f32:32:32-f64:32:32-v64:32:32-v128:32:32-v256:32:32-v512:32:32-v1024:32:32-a0:0:32-n32
e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128
e-m:o-p:32:32-f64:32:64-f80:128-n8:16:32-S128
e-m:x-p:32:32-i64:64-f80:32-n8:16:32-a:0:32-S32
e-m:e-p:32:32-i64:32-f64:32-f128:32-n8:16:32-a:0:32-S32
e-m:o-i64:64-f80:128-n8:16:32:64-S128
e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024
e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024
e-m:e-p:32:32-i64:64-n32:64-S128
unix
__gnu_linux__
#define 
__ELF__
__ANDROID__
__ANDROID_API__
_REENTRANT
_GNU_SOURCE
__FLOAT128__
e-m:o-i64:64-i128:128-n32:64-S128
e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128
+neon
+sve
+crc
+crypto
+strict-align
+v8.1a
+v8.2a
+fullfp16
aapcs
darwinpcs
generic
__builtin_neon_vabd_v
V8ScV8ScV8Sci
__builtin_neon_vabdd_f64
__builtin_neon_vabdq_v
V16ScV16ScV16Sci
__builtin_neon_vabds_f32
__builtin_neon_vabs_v
V8ScV8Sci
__builtin_neon_vabsd_s64
WiWi
__builtin_neon_vabsq_v
V16ScV16Sci
__builtin_neon_vaddd_s64
WiWiWi
__builtin_neon_vaddd_u64
UWiUWiUWi
__builtin_neon_vaddhn_v
V8ScV16ScV16Sci
__builtin_neon_vaddlv_s16
iV4s
__builtin_neon_vaddlv_s32
WiV2i
__builtin_neon_vaddlv_s8
sV8Sc
__builtin_neon_vaddlv_u16
UiV4Us
__builtin_neon_vaddlv_u32
UWiV2Ui
__builtin_neon_vaddlv_u8
UsV8Sc
__builtin_neon_vaddlvq_s16
iV8s
__builtin_neon_vaddlvq_s32
WiV4i
__builtin_neon_vaddlvq_s8
sV16Sc
__builtin_neon_vaddlvq_u16
UiV8Us
__builtin_neon_vaddlvq_u32
UWiV4Ui
__builtin_neon_vaddlvq_u8
UsV16Sc
__builtin_neon_vaddv_f32
fV2f
__builtin_neon_vaddv_s16
sV4s
__builtin_neon_vaddv_s32
iV2i
__builtin_neon_vaddv_s8
ScV8Sc
__builtin_neon_vaddv_u16
UsV4Us
__builtin_neon_vaddv_u32
UiV2Ui
__builtin_neon_vaddv_u8
__builtin_neon_vaddvq_f32
fV4f
__builtin_neon_vaddvq_f64
dV2d
__builtin_neon_vaddvq_s16
sV8s
__builtin_neon_vaddvq_s32
iV4i
__builtin_neon_vaddvq_s64
WiV2Wi
__builtin_neon_vaddvq_s8
ScV16Sc
__builtin_neon_vaddvq_u16
UsV8Us
__builtin_neon_vaddvq_u32
UiV4Ui
__builtin_neon_vaddvq_u64
UWiV2UWi
__builtin_neon_vaddvq_u8
__builtin_neon_vaesdq_v
__builtin_neon_vaeseq_v
__builtin_neon_vaesimcq_v
__builtin_neon_vaesmcq_v
__builtin_neon_vbsl_v
V8ScV8ScV8ScV8Sci
__builtin_neon_vbslq_v
V16ScV16ScV16ScV16Sci
__builtin_neon_vcage_v
__builtin_neon_vcaged_f64
UWidd
__builtin_neon_vcageq_v
__builtin_neon_vcages_f32
Uiff
__builtin_neon_vcagt_v
__builtin_neon_vcagtd_f64
__builtin_neon_vcagtq_v
__builtin_neon_vcagts_f32
__builtin_neon_vcale_v
__builtin_neon_vcaled_f64
__builtin_neon_vcaleq_v
__builtin_neon_vcales_f32
__builtin_neon_vcalt_v
__builtin_neon_vcaltd_f64
__builtin_neon_vcaltq_v
__builtin_neon_vcalts_f32
__builtin_neon_vceqd_f64
__builtin_neon_vceqd_s64
__builtin_neon_vceqd_u64
__builtin_neon_vceqs_f32
__builtin_neon_vceqz_v
__builtin_neon_vceqzd_f64
UWid
__builtin_neon_vceqzd_s64
__builtin_neon_vceqzd_u64
UWiUWi
__builtin_neon_vceqzq_v
__builtin_neon_vceqzs_f32
__builtin_neon_vcged_f64
__builtin_neon_vcged_s64
__builtin_neon_vcged_u64
__builtin_neon_vcges_f32
__builtin_neon_vcgez_v
__builtin_neon_vcgezd_f64
__builtin_neon_vcgezd_s64
__builtin_neon_vcgezq_v
__builtin_neon_vcgezs_f32
__builtin_neon_vcgtd_f64
__builtin_neon_vcgtd_s64
__builtin_neon_vcgtd_u64
__builtin_neon_vcgts_f32
__builtin_neon_vcgtz_v
__builtin_neon_vcgtzd_f64
__builtin_neon_vcgtzd_s64
__builtin_neon_vcgtzq_v
__builtin_neon_vcgtzs_f32
__builtin_neon_vcled_f64
__builtin_neon_vcled_s64
__builtin_neon_vcled_u64
__builtin_neon_vcles_f32
__builtin_neon_vclez_v
__builtin_neon_vclezd_f64
__builtin_neon_vclezd_s64
__builtin_neon_vclezq_v
__builtin_neon_vclezs_f32
__builtin_neon_vcls_v
__builtin_neon_vclsq_v
__builtin_neon_vcltd_f64
__builtin_neon_vcltd_s64
__builtin_neon_vcltd_u64
__builtin_neon_vclts_f32
__builtin_neon_vcltz_v
__builtin_neon_vcltzd_f64
__builtin_neon_vcltzd_s64
__builtin_neon_vcltzq_v
__builtin_neon_vcltzs_f32
__builtin_neon_vclz_v
__builtin_neon_vclzq_v
__builtin_neon_vcnt_v
__builtin_neon_vcntq_v
__builtin_neon_vcvt_f16_f32
V8ScV16Sci
__builtin_neon_vcvt_f32_f16
V16ScV8Sci
__builtin_neon_vcvt_f32_f64
__builtin_neon_vcvt_f32_v
V2fV8Sci
__builtin_neon_vcvt_f64_f32
__builtin_neon_vcvt_f64_v
V1dV8Sci
__builtin_neon_vcvt_n_f32_v
V2fV8ScIii
__builtin_neon_vcvt_n_f64_v
V1dV8ScIii
__builtin_neon_vcvt_n_s32_v
V8ScV8ScIii
__builtin_neon_vcvt_n_s64_v
__builtin_neon_vcvt_n_u32_v
__builtin_neon_vcvt_n_u64_v
__builtin_neon_vcvt_s32_v
__builtin_neon_vcvt_s64_v
__builtin_neon_vcvt_u32_v
__builtin_neon_vcvt_u64_v
__builtin_neon_vcvta_s32_v
__builtin_neon_vcvta_s64_v
__builtin_neon_vcvta_u32_v
__builtin_neon_vcvta_u64_v
__builtin_neon_vcvtad_s64_f64
__builtin_neon_vcvtad_u64_f64
__builtin_neon_vcvtaq_s32_v
__builtin_neon_vcvtaq_s64_v
__builtin_neon_vcvtaq_u32_v
__builtin_neon_vcvtaq_u64_v
__builtin_neon_vcvtas_s32_f32
__builtin_neon_vcvtas_u32_f32
__builtin_neon_vcvtd_f64_s64
__builtin_neon_vcvtd_f64_u64
dUWi
__builtin_neon_vcvtd_n_f64_s64
dWiIi
__builtin_neon_vcvtd_n_f64_u64
dUWiIi
__builtin_neon_vcvtd_n_s64_f64
WidIi
__builtin_neon_vcvtd_n_u64_f64
UWidIi
__builtin_neon_vcvtd_s64_f64
__builtin_neon_vcvtd_u64_f64
__builtin_neon_vcvtm_s32_v
__builtin_neon_vcvtm_s64_v
__builtin_neon_vcvtm_u32_v
__builtin_neon_vcvtm_u64_v
__builtin_neon_vcvtmd_s64_f64
__builtin_neon_vcvtmd_u64_f64
__builtin_neon_vcvtmq_s32_v
__builtin_neon_vcvtmq_s64_v
__builtin_neon_vcvtmq_u32_v
__builtin_neon_vcvtmq_u64_v
__builtin_neon_vcvtms_s32_f32
__builtin_neon_vcvtms_u32_f32
__builtin_neon_vcvtn_s32_v
__builtin_neon_vcvtn_s64_v
__builtin_neon_vcvtn_u32_v
__builtin_neon_vcvtn_u64_v
__builtin_neon_vcvtnd_s64_f64
__builtin_neon_vcvtnd_u64_f64
__builtin_neon_vcvtnq_s32_v
__builtin_neon_vcvtnq_s64_v
__builtin_neon_vcvtnq_u32_v
__builtin_neon_vcvtnq_u64_v
__builtin_neon_vcvtns_s32_f32
__builtin_neon_vcvtns_u32_f32
__builtin_neon_vcvtp_s32_v
__builtin_neon_vcvtp_s64_v
__builtin_neon_vcvtp_u32_v
__builtin_neon_vcvtp_u64_v
__builtin_neon_vcvtpd_s64_f64
__builtin_neon_vcvtpd_u64_f64
__builtin_neon_vcvtpq_s32_v
__builtin_neon_vcvtpq_s64_v
__builtin_neon_vcvtpq_u32_v
__builtin_neon_vcvtpq_u64_v
__builtin_neon_vcvtps_s32_f32
__builtin_neon_vcvtps_u32_f32
__builtin_neon_vcvtq_f32_v
V4fV16Sci
__builtin_neon_vcvtq_f64_v
V2dV16Sci
__builtin_neon_vcvtq_n_f32_v
V4fV16ScIii
__builtin_neon_vcvtq_n_f64_v
V2dV16ScIii
__builtin_neon_vcvtq_n_s32_v
V16ScV16ScIii
__builtin_neon_vcvtq_n_s64_v
__builtin_neon_vcvtq_n_u32_v
__builtin_neon_vcvtq_n_u64_v
__builtin_neon_vcvtq_s32_v
__builtin_neon_vcvtq_s64_v
__builtin_neon_vcvtq_u32_v
__builtin_neon_vcvtq_u64_v
__builtin_neon_vcvts_f32_s32
__builtin_neon_vcvts_f32_u32
__builtin_neon_vcvts_n_f32_s32
fiIi
__builtin_neon_vcvts_n_f32_u32
fUiIi
__builtin_neon_vcvts_n_s32_f32
ifIi
__builtin_neon_vcvts_n_u32_f32
UifIi
__builtin_neon_vcvts_s32_f32
__builtin_neon_vcvts_u32_f32
__builtin_neon_vcvtx_f32_v
V2fV16Sci
__builtin_neon_vcvtxd_f32_f64
__builtin_neon_vdupb_lane_i8
ScV8ScIi
__builtin_neon_vdupb_laneq_i8
ScV16ScIi
__builtin_neon_vdupd_lane_f64
dV1dIi
__builtin_neon_vdupd_lane_i64
UWiV1WiIi
__builtin_neon_vdupd_laneq_f64
dV2dIi
__builtin_neon_vdupd_laneq_i64
UWiV2WiIi
__builtin_neon_vduph_lane_i16
UsV4sIi
__builtin_neon_vduph_laneq_i16
UsV8sIi
__builtin_neon_vdups_lane_f32
fV2fIi
__builtin_neon_vdups_lane_i32
UiV2iIi
__builtin_neon_vdups_laneq_f32
fV4fIi
__builtin_neon_vdups_laneq_i32
UiV4iIi
__builtin_neon_vext_v
V8ScV8ScV8ScIii
__builtin_neon_vextq_v
V16ScV16ScV16ScIii
__builtin_neon_vfma_lane_v
V8ScV8ScV8ScV8ScIii
__builtin_neon_vfma_laneq_v
V8ScV8ScV8ScV16ScIii
__builtin_neon_vfma_v
__builtin_neon_vfmad_lane_f64
dddV1dIi
__builtin_neon_vfmad_laneq_f64
dddV2dIi
__builtin_neon_vfmaq_lane_v
V16ScV16ScV16ScV8ScIii
__builtin_neon_vfmaq_laneq_v
V16ScV16ScV16ScV16ScIii
__builtin_neon_vfmaq_v
__builtin_neon_vfmas_lane_f32
fffV2fIi
__builtin_neon_vfmas_laneq_f32
fffV4fIi
__builtin_neon_vget_lane_f32
__builtin_neon_vget_lane_f64
__builtin_neon_vget_lane_i16
__builtin_neon_vget_lane_i32
__builtin_neon_vget_lane_i64
__builtin_neon_vget_lane_i8
__builtin_neon_vgetq_lane_f32
__builtin_neon_vgetq_lane_f64
__builtin_neon_vgetq_lane_i16
__builtin_neon_vgetq_lane_i32
__builtin_neon_vgetq_lane_i64
__builtin_neon_vgetq_lane_i8
__builtin_neon_vhadd_v
__builtin_neon_vhaddq_v
__builtin_neon_vhsub_v
__builtin_neon_vhsubq_v
__builtin_neon_vld1_dup_v
V8ScvC*i
__builtin_neon_vld1_lane_v
V8ScvC*V8ScIii
__builtin_neon_vld1_v
__builtin_neon_vld1_x2_v
vv*vC*i
__builtin_neon_vld1_x3_v
__builtin_neon_vld1_x4_v
__builtin_neon_vld1q_dup_v
V16ScvC*i
__builtin_neon_vld1q_lane_v
V16ScvC*V16ScIii
__builtin_neon_vld1q_v
__builtin_neon_vld1q_x2_v
__builtin_neon_vld1q_x3_v
__builtin_neon_vld1q_x4_v
__builtin_neon_vld2_dup_v
__builtin_neon_vld2_lane_v
vv*vC*V8ScV8ScIii
__builtin_neon_vld2_v
__builtin_neon_vld2q_dup_v
__builtin_neon_vld2q_lane_v
vv*vC*V16ScV16ScIii
__builtin_neon_vld2q_v
__builtin_neon_vld3_dup_v
__builtin_neon_vld3_lane_v
vv*vC*V8ScV8ScV8ScIii
__builtin_neon_vld3_v
__builtin_neon_vld3q_dup_v
__builtin_neon_vld3q_lane_v
vv*vC*V16ScV16ScV16ScIii
__builtin_neon_vld3q_v
__builtin_neon_vld4_dup_v
__builtin_neon_vld4_lane_v
vv*vC*V8ScV8ScV8ScV8ScIii
__builtin_neon_vld4_v
__builtin_neon_vld4q_dup_v
__builtin_neon_vld4q_lane_v
vv*vC*V16ScV16ScV16ScV16ScIii
__builtin_neon_vld4q_v
__builtin_neon_vldrq_p128
ULLLivC*
__builtin_neon_vmax_v
__builtin_neon_vmaxnm_v
__builtin_neon_vmaxnmq_v
__builtin_neon_vmaxnmv_f32
__builtin_neon_vmaxnmvq_f32
__builtin_neon_vmaxnmvq_f64
__builtin_neon_vmaxq_v
__builtin_neon_vmaxv_f32
__builtin_neon_vmaxv_s16
__builtin_neon_vmaxv_s32
__builtin_neon_vmaxv_s8
__builtin_neon_vmaxv_u16
__builtin_neon_vmaxv_u32
__builtin_neon_vmaxv_u8
__builtin_neon_vmaxvq_f32
__builtin_neon_vmaxvq_f64
__builtin_neon_vmaxvq_s16
__builtin_neon_vmaxvq_s32
__builtin_neon_vmaxvq_s8
__builtin_neon_vmaxvq_u16
__builtin_neon_vmaxvq_u32
__builtin_neon_vmaxvq_u8
__builtin_neon_vmin_v
__builtin_neon_vminnm_v
__builtin_neon_vminnmq_v
__builtin_neon_vminnmv_f32
__builtin_neon_vminnmvq_f32
__builtin_neon_vminnmvq_f64
__builtin_neon_vminq_v
__builtin_neon_vminv_f32
__builtin_neon_vminv_s16
__builtin_neon_vminv_s32
__builtin_neon_vminv_s8
__builtin_neon_vminv_u16
__builtin_neon_vminv_u32
__builtin_neon_vminv_u8
__builtin_neon_vminvq_f32
__builtin_neon_vminvq_f64
__builtin_neon_vminvq_s16
__builtin_neon_vminvq_s32
__builtin_neon_vminvq_s8
__builtin_neon_vminvq_u16
__builtin_neon_vminvq_u32
__builtin_neon_vminvq_u8
__builtin_neon_vmovl_v
__builtin_neon_vmovn_v
__builtin_neon_vmul_lane_v
__builtin_neon_vmul_laneq_v
V8ScV8ScV16ScIii
__builtin_neon_vmul_n_f64
V1dV1dd
__builtin_neon_vmul_v
__builtin_neon_vmull_p64
ULLLiUWiUWi
__builtin_neon_vmull_v
V16ScV8ScV8Sci
__builtin_neon_vmulq_v
__builtin_neon_vmulx_v
__builtin_neon_vmulxd_f64
__builtin_neon_vmulxq_v
__builtin_neon_vmulxs_f32
__builtin_neon_vnegd_s64
__builtin_neon_vpadal_v
__builtin_neon_vpadalq_v
__builtin_neon_vpadd_v
__builtin_neon_vpaddd_f64
__builtin_neon_vpaddd_s64
__builtin_neon_vpaddd_u64
__builtin_neon_vpaddl_v
__builtin_neon_vpaddlq_v
__builtin_neon_vpaddq_v
__builtin_neon_vpadds_f32
__builtin_neon_vpmax_v
__builtin_neon_vpmaxnm_v
__builtin_neon_vpmaxnmq_v
__builtin_neon_vpmaxnmqd_f64
__builtin_neon_vpmaxnms_f32
__builtin_neon_vpmaxq_v
__builtin_neon_vpmaxqd_f64
__builtin_neon_vpmaxs_f32
__builtin_neon_vpmin_v
__builtin_neon_vpminnm_v
__builtin_neon_vpminnmq_v
__builtin_neon_vpminnmqd_f64
__builtin_neon_vpminnms_f32
__builtin_neon_vpminq_v
__builtin_neon_vpminqd_f64
__builtin_neon_vpmins_f32
__builtin_neon_vqabs_v
__builtin_neon_vqabsb_s8
ScSc
__builtin_neon_vqabsd_s64
__builtin_neon_vqabsh_s16
__builtin_neon_vqabsq_v
__builtin_neon_vqabss_s32
__builtin_neon_vqadd_v
__builtin_neon_vqaddb_s8
ScScSc
__builtin_neon_vqaddb_u8
__builtin_neon_vqaddd_s64
__builtin_neon_vqaddd_u64
__builtin_neon_vqaddh_s16
__builtin_neon_vqaddh_u16
UsUsUs
__builtin_neon_vqaddq_v
__builtin_neon_vqadds_s32
__builtin_neon_vqadds_u32
UiUiUi
__builtin_neon_vqdmlal_v
V16ScV16ScV8ScV8Sci
__builtin_neon_vqdmlalh_lane_s16
iisV4sIi
__builtin_neon_vqdmlalh_laneq_s16
iisV8sIi
__builtin_neon_vqdmlalh_s16
iiss
__builtin_neon_vqdmlals_lane_s32
WiWiiV2iIi
__builtin_neon_vqdmlals_laneq_s32
WiWiiV4iIi
__builtin_neon_vqdmlals_s32
WiWiii
__builtin_neon_vqdmlsl_v
__builtin_neon_vqdmlslh_lane_s16
__builtin_neon_vqdmlslh_laneq_s16
__builtin_neon_vqdmlslh_s16
__builtin_neon_vqdmlsls_lane_s32
__builtin_neon_vqdmlsls_laneq_s32
__builtin_neon_vqdmlsls_s32
__builtin_neon_vqdmulh_v
__builtin_neon_vqdmulhh_s16
__builtin_neon_vqdmulhq_v
__builtin_neon_vqdmulhs_s32
__builtin_neon_vqdmull_v
__builtin_neon_vqdmullh_s16
__builtin_neon_vqdmulls_s32
Wiii
__builtin_neon_vqmovn_v
__builtin_neon_vqmovnd_s64
__builtin_neon_vqmovnd_u64
UiUWi
__builtin_neon_vqmovnh_s16
__builtin_neon_vqmovnh_u16
ScUs
__builtin_neon_vqmovns_s32
__builtin_neon_vqmovns_u32
UsUi
__builtin_neon_vqmovun_v
__builtin_neon_vqmovund_s64
__builtin_neon_vqmovunh_s16
__builtin_neon_vqmovuns_s32
__builtin_neon_vqneg_v
__builtin_neon_vqnegb_s8
__builtin_neon_vqnegd_s64
__builtin_neon_vqnegh_s16
__builtin_neon_vqnegq_v
__builtin_neon_vqnegs_s32
__builtin_neon_vqrdmulh_v
__builtin_neon_vqrdmulhh_s16
__builtin_neon_vqrdmulhq_v
__builtin_neon_vqrdmulhs_s32
__builtin_neon_vqrshl_v
__builtin_neon_vqrshlb_s8
__builtin_neon_vqrshlb_u8
__builtin_neon_vqrshld_s64
__builtin_neon_vqrshld_u64
__builtin_neon_vqrshlh_s16
__builtin_neon_vqrshlh_u16
__builtin_neon_vqrshlq_v
__builtin_neon_vqrshls_s32
__builtin_neon_vqrshls_u32
__builtin_neon_vqrshrn_n_v
V8ScV16ScIii
__builtin_neon_vqrshrnd_n_s64
iWiIi
__builtin_neon_vqrshrnd_n_u64
UiUWiIi
__builtin_neon_vqrshrnh_n_s16
ScsIi
__builtin_neon_vqrshrnh_n_u16
ScUsIi
__builtin_neon_vqrshrns_n_s32
siIi
__builtin_neon_vqrshrns_n_u32
UsUiIi
__builtin_neon_vqrshrun_n_v
__builtin_neon_vqrshrund_n_s64
__builtin_neon_vqrshrunh_n_s16
__builtin_neon_vqrshruns_n_s32
__builtin_neon_vqshl_n_v
__builtin_neon_vqshl_v
__builtin_neon_vqshlb_n_s8
ScScIi
__builtin_neon_vqshlb_n_u8
__builtin_neon_vqshlb_s8
__builtin_neon_vqshlb_u8
__builtin_neon_vqshld_n_s64
WiWiIi
__builtin_neon_vqshld_n_u64
UWiUWiIi
__builtin_neon_vqshld_s64
__builtin_neon_vqshld_u64
__builtin_neon_vqshlh_n_s16
ssIi
__builtin_neon_vqshlh_n_u16
UsUsIi
__builtin_neon_vqshlh_s16
__builtin_neon_vqshlh_u16
__builtin_neon_vqshlq_n_v
__builtin_neon_vqshlq_v
__builtin_neon_vqshls_n_s32
iiIi
__builtin_neon_vqshls_n_u32
UiUiIi
__builtin_neon_vqshls_s32
__builtin_neon_vqshls_u32
__builtin_neon_vqshlu_n_v
__builtin_neon_vqshlub_n_s8
__builtin_neon_vqshlud_n_s64
__builtin_neon_vqshluh_n_s16
__builtin_neon_vqshluq_n_v
__builtin_neon_vqshlus_n_s32
__builtin_neon_vqshrn_n_v
__builtin_neon_vqshrnd_n_s64
__builtin_neon_vqshrnd_n_u64
__builtin_neon_vqshrnh_n_s16
__builtin_neon_vqshrnh_n_u16
__builtin_neon_vqshrns_n_s32
__builtin_neon_vqshrns_n_u32
__builtin_neon_vqshrun_n_v
__builtin_neon_vqshrund_n_s64
__builtin_neon_vqshrunh_n_s16
__builtin_neon_vqshruns_n_s32
__builtin_neon_vqsub_v
__builtin_neon_vqsubb_s8
__builtin_neon_vqsubb_u8
__builtin_neon_vqsubd_s64
__builtin_neon_vqsubd_u64
__builtin_neon_vqsubh_s16
__builtin_neon_vqsubh_u16
__builtin_neon_vqsubq_v
__builtin_neon_vqsubs_s32
__builtin_neon_vqsubs_u32
__builtin_neon_vqtbl1_v
V8ScV16ScV8Sci
__builtin_neon_vqtbl1q_v
__builtin_neon_vqtbl2_v
V8ScV16ScV16ScV8Sci
__builtin_neon_vqtbl2q_v
__builtin_neon_vqtbl3_v
V8ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbl3q_v
V16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vqtbl4_v
V8ScV16ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbl4q_v
V16ScV16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vqtbx1_v
V8ScV8ScV16ScV8Sci
__builtin_neon_vqtbx1q_v
__builtin_neon_vqtbx2_v
V8ScV8ScV16ScV16ScV8Sci
__builtin_neon_vqtbx2q_v
__builtin_neon_vqtbx3_v
V8ScV8ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbx3q_v
__builtin_neon_vqtbx4_v
V8ScV8ScV16ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbx4q_v
V16ScV16ScV16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vraddhn_v
__builtin_neon_vrbit_v
__builtin_neon_vrbitq_v
__builtin_neon_vrecpe_v
__builtin_neon_vrecped_f64
__builtin_neon_vrecpeq_v
__builtin_neon_vrecpes_f32
__builtin_neon_vrecps_v
__builtin_neon_vrecpsd_f64
__builtin_neon_vrecpsq_v
__builtin_neon_vrecpss_f32
__builtin_neon_vrecpxd_f64
__builtin_neon_vrecpxs_f32
__builtin_neon_vrhadd_v
__builtin_neon_vrhaddq_v
__builtin_neon_vrnd_v
__builtin_neon_vrnda_v
__builtin_neon_vrndaq_v
__builtin_neon_vrndi_v
__builtin_neon_vrndiq_v
__builtin_neon_vrndm_v
__builtin_neon_vrndmq_v
__builtin_neon_vrndn_v
__builtin_neon_vrndnq_v
__builtin_neon_vrndp_v
__builtin_neon_vrndpq_v
__builtin_neon_vrndq_v
__builtin_neon_vrndx_v
__builtin_neon_vrndxq_v
__builtin_neon_vrshl_v
__builtin_neon_vrshld_s64
__builtin_neon_vrshld_u64
__builtin_neon_vrshlq_v
__builtin_neon_vrshr_n_v
__builtin_neon_vrshrd_n_s64
__builtin_neon_vrshrd_n_u64
__builtin_neon_vrshrn_n_v
__builtin_neon_vrshrq_n_v
__builtin_neon_vrsqrte_v
__builtin_neon_vrsqrted_f64
__builtin_neon_vrsqrteq_v
__builtin_neon_vrsqrtes_f32
__builtin_neon_vrsqrts_v
__builtin_neon_vrsqrtsd_f64
__builtin_neon_vrsqrtsq_v
__builtin_neon_vrsqrtss_f32
__builtin_neon_vrsra_n_v
__builtin_neon_vrsrad_n_s64
WiWiWiIi
__builtin_neon_vrsrad_n_u64
UWiUWiUWiIi
__builtin_neon_vrsraq_n_v
__builtin_neon_vrsubhn_v
__builtin_neon_vset_lane_f32
V2ffV2fIi
__builtin_neon_vset_lane_f64
V1ddV1dIi
__builtin_neon_vset_lane_i16
V4ssV4sIi
__builtin_neon_vset_lane_i32
V2iiV2iIi
__builtin_neon_vset_lane_i64
V1WiWiV1WiIi
__builtin_neon_vset_lane_i8
V8ScScV8ScIi
__builtin_neon_vsetq_lane_f32
V4ffV4fIi
__builtin_neon_vsetq_lane_f64
V2ddV2dIi
__builtin_neon_vsetq_lane_i16
V8ssV8sIi
__builtin_neon_vsetq_lane_i32
V4iiV4iIi
__builtin_neon_vsetq_lane_i64
V2WiWiV2WiIi
__builtin_neon_vsetq_lane_i8
V16ScScV16ScIi
__builtin_neon_vsha1cq_u32
V4iV4UiUiV4Ui
__builtin_neon_vsha1h_u32
UiUi
__builtin_neon_vsha1mq_u32
__builtin_neon_vsha1pq_u32
__builtin_neon_vsha1su0q_v
__builtin_neon_vsha1su1q_v
__builtin_neon_vsha256h2q_v
__builtin_neon_vsha256hq_v
__builtin_neon_vsha256su0q_v
__builtin_neon_vsha256su1q_v
__builtin_neon_vshl_n_v
__builtin_neon_vshl_v
__builtin_neon_vshld_n_s64
__builtin_neon_vshld_n_u64
__builtin_neon_vshld_s64
__builtin_neon_vshld_u64
__builtin_neon_vshll_n_v
V16ScV8ScIii
__builtin_neon_vshlq_n_v
__builtin_neon_vshlq_v
__builtin_neon_vshr_n_v
__builtin_neon_vshrd_n_s64
__builtin_neon_vshrd_n_u64
__builtin_neon_vshrn_n_v
__builtin_neon_vshrq_n_v
__builtin_neon_vsli_n_v
__builtin_neon_vslid_n_s64
__builtin_neon_vslid_n_u64
__builtin_neon_vsliq_n_v
__builtin_neon_vsqadd_v
__builtin_neon_vsqaddb_u8
__builtin_neon_vsqaddd_u64
__builtin_neon_vsqaddh_u16
__builtin_neon_vsqaddq_v
__builtin_neon_vsqadds_u32
__builtin_neon_vsqrt_v
__builtin_neon_vsqrtq_v
__builtin_neon_vsra_n_v
__builtin_neon_vsrad_n_s64
__builtin_neon_vsrad_n_u64
__builtin_neon_vsraq_n_v
__builtin_neon_vsri_n_v
__builtin_neon_vsrid_n_s64
__builtin_neon_vsrid_n_u64
__builtin_neon_vsriq_n_v
__builtin_neon_vst1_lane_v
vv*V8ScIii
__builtin_neon_vst1_v
vv*V8Sci
__builtin_neon_vst1_x2_v
vv*V8ScV8Sci
__builtin_neon_vst1_x3_v
vv*V8ScV8ScV8Sci
__builtin_neon_vst1_x4_v
vv*V8ScV8ScV8ScV8Sci
__builtin_neon_vst1q_lane_v
vv*V16ScIii
__builtin_neon_vst1q_v
vv*V16Sci
__builtin_neon_vst1q_x2_v
vv*V16ScV16Sci
__builtin_neon_vst1q_x3_v
vv*V16ScV16ScV16Sci
__builtin_neon_vst1q_x4_v
vv*V16ScV16ScV16ScV16Sci
__builtin_neon_vst2_lane_v
vv*V8ScV8ScIii
__builtin_neon_vst2_v
__builtin_neon_vst2q_lane_v
vv*V16ScV16ScIii
__builtin_neon_vst2q_v
__builtin_neon_vst3_lane_v
vv*V8ScV8ScV8ScIii
__builtin_neon_vst3_v
__builtin_neon_vst3q_lane_v
vv*V16ScV16ScV16ScIii
__builtin_neon_vst3q_v
__builtin_neon_vst4_lane_v
vv*V8ScV8ScV8ScV8ScIii
__builtin_neon_vst4_v
__builtin_neon_vst4q_lane_v
vv*V16ScV16ScV16ScV16ScIii
__builtin_neon_vst4q_v
__builtin_neon_vstrq_p128
vv*ULLLi
__builtin_neon_vsubd_s64
__builtin_neon_vsubd_u64
__builtin_neon_vsubhn_v
__builtin_neon_vtbl1_v
__builtin_neon_vtbl2_v
__builtin_neon_vtbl3_v
V8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtbl4_v
V8ScV8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtbx1_v
__builtin_neon_vtbx2_v
__builtin_neon_vtbx3_v
__builtin_neon_vtbx4_v
V8ScV8ScV8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtrn_v
__builtin_neon_vtrnq_v
__builtin_neon_vtst_v
__builtin_neon_vtstd_s64
__builtin_neon_vtstd_u64
__builtin_neon_vtstq_v
__builtin_neon_vuqadd_v
__builtin_neon_vuqaddb_s8
__builtin_neon_vuqaddd_s64
__builtin_neon_vuqaddh_s16
__builtin_neon_vuqaddq_v
__builtin_neon_vuqadds_s32
__builtin_neon_vuzp_v
__builtin_neon_vuzpq_v
__builtin_neon_vzip_v
__builtin_neon_vzipq_v
__clear_cache
vv*v*
__builtin_arm_ldrex
__builtin_arm_ldaex
__builtin_arm_strex
__builtin_arm_stlex
__builtin_arm_clrex
__builtin_arm_rbit
__builtin_arm_rbit64
LUiLUi
__builtin_arm_nop
__builtin_arm_yield
__builtin_arm_wfe
__builtin_arm_wfi
__builtin_arm_sev
__builtin_arm_sevl
__builtin_arm_crc32b
UiUiUc
__builtin_arm_crc32cb
__builtin_arm_crc32h
UiUiUs
__builtin_arm_crc32ch
__builtin_arm_crc32w
__builtin_arm_crc32cw
__builtin_arm_crc32d
UiUiLUi
__builtin_arm_crc32cd
__builtin_arm_dmb
__builtin_arm_dsb
__builtin_arm_isb
__builtin_arm_prefetch
vvC*UiUiUiUi
__builtin_arm_rsr
UicC*
__builtin_arm_rsr64
LUicC*
__builtin_arm_rsrp
v*cC*
__builtin_arm_wsr
vcC*Ui
__builtin_arm_wsr64
vcC*LUi
__builtin_arm_wsrp
vcC*vC*
__RENDERSCRIPT__
__AARCH64EL__
__aarch64__
_LP64
__LP64__
__ARM_ACLE
__ARM_ARCH
__ARM_ARCH_PROFILE
__ARM_64BIT_STATE
__ARM_PCS_AAPCS64
__ARM_ARCH_ISA_A64
__ARM_FEATURE_CLZ
__ARM_FEATURE_FMA
__ARM_FEATURE_LDREX
__ARM_FEATURE_IDIV
__ARM_FEATURE_DIV
__ARM_FEATURE_NUMERIC_MAXMIN
__ARM_FEATURE_DIRECTED_ROUNDING
__ARM_ALIGN_MAX_STACK_PWR
__ARM_FP
__ARM_FP16_FORMAT_IEEE
__ARM_FP16_ARGS
__ARM_FP_FAST
__ARM_SIZEOF_WCHAR_T
__ARM_SIZEOF_MINIMAL_ENUM
__ARM_NEON
__ARM_NEON_FP
__ARM_FEATURE_SVE
__ARM_FEATURE_CRC32
__ARM_FEATURE_CRYPTO
__ARM_FEATURE_UNALIGNED
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8
__ARM_FEATURE_QRDMX
aarch32
softfloat
+soft-float
+soft-float-abi
+vfp2
+vfp3
+vfp4
+fp-armv8
+hwdiv
+hwdiv-arm
+dsp
+fp-only-sp
+fp16
+neonfp
-neonfp
apcs-gnu
aapcs16
e-m:o-p:32:32-i64:64-a:0:32-n32-S128
E-m:o-p:32:32-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
e-m:o-p:32:32-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
E-m:e-p:32:32-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
e-m:e-p:32:32-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
aapcs-vfp
aapcs-linux
e-m:o-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64
E-m:o-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64
e-m:w-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64
e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S128
E-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64
8_1A
8_2A
8M_BASE
8M_MAIN
thumb-mode
+arm
-thumb-mode
+thumb
+thumb-mode
__builtin_arm_smulbb
__builtin_arm_smulbt
__builtin_arm_smultb
__builtin_arm_smultt
__builtin_arm_smulwb
__builtin_arm_smulwt
__builtin_arm_qadd
__builtin_arm_qsub
__builtin_arm_ssat
iiUi
__builtin_arm_usat
UiiUi
__builtin_arm_smlabb
iiii
__builtin_arm_smlabt
__builtin_arm_smlatb
__builtin_arm_smlatt
__builtin_arm_smlawb
__builtin_arm_smlawt
__builtin_arm_ssat16
__builtin_arm_usat16
__builtin_arm_sxtab16
__builtin_arm_sxtb16
__builtin_arm_uxtab16
__builtin_arm_uxtb16
__builtin_arm_sel
__builtin_arm_qadd8
__builtin_arm_qsub8
__builtin_arm_sadd8
__builtin_arm_shadd8
__builtin_arm_shsub8
__builtin_arm_ssub8
__builtin_arm_uadd8
__builtin_arm_uhadd8
__builtin_arm_uhsub8
__builtin_arm_uqadd8
__builtin_arm_uqsub8
__builtin_arm_usub8
__builtin_arm_usad8
__builtin_arm_usada8
UiUiUiUi
__builtin_arm_qadd16
__builtin_arm_qasx
__builtin_arm_qsax
__builtin_arm_qsub16
__builtin_arm_sadd16
__builtin_arm_sasx
__builtin_arm_shadd16
__builtin_arm_shasx
__builtin_arm_shsax
__builtin_arm_shsub16
__builtin_arm_ssax
__builtin_arm_ssub16
__builtin_arm_uadd16
__builtin_arm_uasx
__builtin_arm_uhadd16
__builtin_arm_uhasx
__builtin_arm_uhsax
__builtin_arm_uhsub16
__builtin_arm_uqadd16
__builtin_arm_uqasx
__builtin_arm_uqsax
__builtin_arm_uqsub16
__builtin_arm_usax
__builtin_arm_usub16
__builtin_arm_smlad
__builtin_arm_smladx
__builtin_arm_smlald
LLiiiLLi
__builtin_arm_smlaldx
__builtin_arm_smlsd
__builtin_arm_smlsdx
__builtin_arm_smlsld
__builtin_arm_smlsldx
__builtin_arm_smuad
__builtin_arm_smuadx
__builtin_arm_smusd
__builtin_arm_smusdx
__builtin_arm_ldrexd
LLUiv*
__builtin_arm_strexd
iLLUiv*
__builtin_arm_get_fpscr
__builtin_arm_set_fpscr
__builtin_arm_vcvtr_f
__builtin_arm_vcvtr_d
__builtin_arm_ldc
vUIiUIivC*
__builtin_arm_ldcl
__builtin_arm_ldc2
__builtin_arm_ldc2l
__builtin_arm_stc
vUIiUIiv*
__builtin_arm_stcl
__builtin_arm_stc2
__builtin_arm_stc2l
__builtin_arm_cdp
vUIiUIiUIiUIiUIiUIi
__builtin_arm_cdp2
__builtin_arm_mcr
vUIiUIiUiUIiUIiUIi
__builtin_arm_mcr2
__builtin_arm_mrc
UiUIiUIiUIiUIiUIi
__builtin_arm_mrc2
__builtin_arm_mcrr
vUIiUIiLLUiUIi
__builtin_arm_mcrr2
__builtin_arm_mrrc
LLUiUIiUIiUIi
__builtin_arm_mrrc2
UiUiLLUi
__builtin_arm_dbg
vvC*UiUi
LLUicC*
vcC*LLUi
vIUiC
__yield
__wfe
__wfi
__sev
__sevl
__dmb
__dsb
__isb
__iso_volatile_load8
ccCD*
__iso_volatile_load16
ssCD*
__iso_volatile_load32
iiCD*
__iso_volatile_load64
LLiLLiCD*
__iso_volatile_store8
vcD*c
__iso_volatile_store16
vsD*s
__iso_volatile_store32
viD*i
__iso_volatile_store64
vLLiD*LLi
__ldrexd
WiWiCD*
_MoveFromCoprocessor
UiIUiIUiIUiIUiIUi
_MoveFromCoprocessor2
_MoveToCoprocessor
vUiIUiIUiIUiIUiIUi
_MoveToCoprocessor2
_BitScanForward
UcUNi*UNi
intrin.h
_BitScanReverse
_BitScanForward64
UcUNi*ULLi
_BitScanReverse64
_InterlockedAnd64
LLiLLiD*LLi
_InterlockedDecrement64
LLiLLiD*
_InterlockedExchange64
_InterlockedExchangeAdd64
_InterlockedExchangeSub64
_InterlockedIncrement64
_InterlockedOr64
_InterlockedXor64
__ARMEL__
__arm
__arm__
__REGISTER_PREFIX__
__ARM_ARCH_7K__
__ARM_ARCH_7A__
__ARM_ARCH_
__ARM_ARCH_ISA_ARM
__ARM_ARCH_ISA_THUMB
__ARM_32BIT_STATE
__THUMB_INTERWORK__
__ARM_EABI__
__ARM_PCS
__ARM_PCS_VFP
__SOFTFP__
__XSCALE__
__THUMBEL__
__thumb__
__thumb2__
__ARM_FEATURE_SIMD32
__ARM_ARCH_EXT_IDIV__
__APCS_32__
__VFP_FP__
__ARM_VFPV2__
__ARM_VFPV3__
__ARM_VFPV4__
__ARM_FPV5__
__ARM_NEON__
__ARM_FEATURE_DSP
__ARM_FEATURE_SAT
__ARM_FEATURE_QBIT
.text.__startup
simd128
+simd128
-simd128
-target-feature
bleeding-edge
__builtin_wasm_current_memory
__builtin_wasm_grow_memory
__builtin_wasm_throw
vUiv*
__builtin_wasm_rethrow
wasm64
__tune_
__wasm_simd128__
wasm32
spir
SPIR64
SPIR32
__FreeBSD__
__FreeBSD_cc_version
900001
__KPRINTF_ATTRIBUTE__
__ORBIS__
r10d
r10w
r10b
r11d
r11w
r11b
r12d
r12w
r12b
r13d
r13w
r13b
r14d
r14w
r14b
r15d
r15w
r15b
st(1)
st(2)
st(3)
st(4)
st(5)
st(6)
st(7)
argp
fpcr
fpsr
dirflag
frame
xmm0
xmm1
xmm2
xmm3
xmm4
xmm5
xmm6
xmm7
xmm8
xmm9
xmm10
xmm11
xmm12
xmm13
xmm14
xmm15
ymm0
ymm1
ymm2
ymm3
ymm4
ymm5
ymm6
ymm7
ymm8
ymm9
ymm10
ymm11
ymm12
ymm13
ymm14
ymm15
xmm16
xmm17
xmm18
xmm19
xmm20
xmm21
xmm22
xmm23
xmm24
xmm25
xmm26
xmm27
xmm28
xmm29
xmm30
xmm31
ymm16
ymm17
ymm18
ymm19
ymm20
ymm21
ymm22
ymm23
ymm24
ymm25
ymm26
ymm27
ymm28
ymm29
ymm30
ymm31
zmm0
zmm1
zmm2
zmm3
zmm4
zmm5
zmm6
zmm7
zmm8
zmm9
zmm10
zmm11
zmm12
zmm13
zmm14
zmm15
zmm16
zmm17
zmm18
zmm19
zmm20
zmm21
zmm22
zmm23
zmm24
zmm25
zmm26
zmm27
zmm28
zmm29
zmm30
zmm31
cmov
popcnt
sse2
sse3
ssse3
sse4.1
sse4.2
avx2
sse4a
fma4
avx512f
bmi2
pclmul
avx512vl
avx512bw
avx512dq
avx512cd
avx512vpopcntdq
avx512er
avx512pf
avx512vbmi
avx512ifma
clflushopt
clwb
clzero
cx16
f16c
fsgsbase
fxsr
lzcnt
mm3dnow
mm3dnowa
movbe
prefetchwt1
prfchw
rdrnd
rdseed
x86_32
xsave
xsavec
xsaves
xsaveopt
+aes
+pclmul
+lzcnt
+rdrnd
+fsgsbase
+bmi
+bmi2
+popcnt
+rtm
+prfchw
+rdseed
+adx
+tbm
+lwp
+fma
+f16c
+avx512cd
+avx512vpopcntdq
+avx512er
+avx512pf
+avx512dq
+avx512bw
+avx512vl
+avx512vbmi
+avx512ifma
+sha
+mpx
+movbe
+sgx
+cx16
+fxsr
+xsave
+xsaveopt
+xsavec
+xsaves
+mwaitx
+pku
+clflushopt
+clwb
+prefetchwt1
+clzero
+avx512f
+avx2
+avx
+sse4.2
+sse4.1
+ssse3
+sse3
+sse2
+sse
+3dnowa
+3dnow
+mmx
+xop
+fma4
+sse4a
sse4
3dnow
3dnowa
i486
winchip-c6
winchip2
i586
pentium
pentium-mmx
i686
pentiumpro
pentium2
pentium3
pentium3m
pentium-m
c3-2
yonah
pentium4
pentium4m
prescott
nocona
core2
penryn
bonnell
atom
silvermont
goldmont
nehalem
corei7
westmere
sandybridge
corei7-avx
ivybridge
core-avx-i
haswell
core-avx2
broadwell
skylake
skylake-avx512
cannonlake
lakemont
k6-2
k6-3
athlon
athlon-tbird
athlon-4
athlon-xp
athlon-mp
athlon64
athlon64-sse3
athlon-fx
k8-sse3
opteron
opteron-sse3
barcelona
amdfam10
btver1
btver2
bdver1
bdver2
bdver3
bdver4
znver1
x86-64
geode
no-mmx
avx512
mwaitx
-popcnt
-prfchw
-mmx
~{dirflag},~{fpsr},~{flags}
{st(1)}
__builtin_cpu_supports
bcC*
__builtin_ia32_undef128
__builtin_ia32_undef256
__builtin_ia32_undef512
__builtin_ia32_readeflags_u32
__builtin_ia32_writeeflags_u32
__builtin_ia32_femms
__builtin_ia32_pavgusb
V8cV8cV8c
__builtin_ia32_pf2id
V2iV2f
__builtin_ia32_pfacc
V2fV2fV2f
__builtin_ia32_pfadd
__builtin_ia32_pfcmpeq
V2iV2fV2f
__builtin_ia32_pfcmpge
__builtin_ia32_pfcmpgt
__builtin_ia32_pfmax
__builtin_ia32_pfmin
__builtin_ia32_pfmul
__builtin_ia32_pfrcp
V2fV2f
__builtin_ia32_pfrcpit1
__builtin_ia32_pfrcpit2
__builtin_ia32_pfrsqrt
__builtin_ia32_pfrsqit1
__builtin_ia32_pfsub
__builtin_ia32_pfsubr
__builtin_ia32_pi2fd
V2fV2i
__builtin_ia32_pmulhrw
V4sV4sV4s
__builtin_ia32_pf2iw
__builtin_ia32_pfnacc
__builtin_ia32_pfpnacc
__builtin_ia32_pi2fw
__builtin_ia32_pswapdsf
__builtin_ia32_pswapdsi
V2iV2i
_mm_prefetch
vcC*i
__builtin_ia32_emms
__builtin_ia32_paddb
__builtin_ia32_paddw
__builtin_ia32_paddd
V2iV2iV2i
__builtin_ia32_paddsb
__builtin_ia32_paddsw
__builtin_ia32_paddusb
__builtin_ia32_paddusw
__builtin_ia32_psubb
__builtin_ia32_psubw
__builtin_ia32_psubd
__builtin_ia32_psubsb
__builtin_ia32_psubsw
__builtin_ia32_psubusb
__builtin_ia32_psubusw
__builtin_ia32_pmulhw
__builtin_ia32_pmullw
__builtin_ia32_pmaddwd
V2iV4sV4s
__builtin_ia32_pand
V1LLiV1LLiV1LLi
__builtin_ia32_pandn
__builtin_ia32_por
__builtin_ia32_pxor
__builtin_ia32_psllw
V4sV4sV1LLi
__builtin_ia32_pslld
V2iV2iV1LLi
__builtin_ia32_psllq
__builtin_ia32_psrlw
__builtin_ia32_psrld
__builtin_ia32_psrlq
__builtin_ia32_psraw
__builtin_ia32_psrad
__builtin_ia32_psllwi
V4sV4si
__builtin_ia32_pslldi
V2iV2ii
__builtin_ia32_psllqi
V1LLiV1LLii
__builtin_ia32_psrlwi
__builtin_ia32_psrldi
__builtin_ia32_psrlqi
__builtin_ia32_psrawi
__builtin_ia32_psradi
__builtin_ia32_packsswb
V8cV4sV4s
__builtin_ia32_packssdw
V4sV2iV2i
__builtin_ia32_packuswb
__builtin_ia32_punpckhbw
__builtin_ia32_punpckhwd
__builtin_ia32_punpckhdq
__builtin_ia32_punpcklbw
__builtin_ia32_punpcklwd
__builtin_ia32_punpckldq
__builtin_ia32_pcmpeqb
__builtin_ia32_pcmpeqw
__builtin_ia32_pcmpeqd
__builtin_ia32_pcmpgtb
__builtin_ia32_pcmpgtw
__builtin_ia32_pcmpgtd
__builtin_ia32_maskmovq
vV8cV8cc*
__builtin_ia32_movntq
vV1LLi*V1LLi
__builtin_ia32_vec_init_v2si
V2iii
__builtin_ia32_vec_init_v4hi
V4sssss
__builtin_ia32_vec_init_v8qi
V8ccccccccc
__builtin_ia32_vec_ext_v2si
iV2ii
__builtin_ia32_cvtpi2ps
V4fV4fV2i
__builtin_ia32_cvtps2pi
V2iV4f
__builtin_ia32_cvttps2pi
__builtin_ia32_pavgb
__builtin_ia32_pavgw
__builtin_ia32_pmaxsw
__builtin_ia32_pmaxub
__builtin_ia32_pminsw
__builtin_ia32_pminub
__builtin_ia32_pmovmskb
iV8c
__builtin_ia32_pmulhuw
__builtin_ia32_psadbw
V4sV8cV8c
__builtin_ia32_pshufw
V4sV4sIc
__builtin_ia32_vec_ext_v4hi
iV4sIi
__builtin_ia32_vec_set_v4hi
V4sV4siIi
__builtin_ia32_cvtpd2pi
V2iV2d
__builtin_ia32_cvtpi2pd
V2dV2i
__builtin_ia32_cvttpd2pi
__builtin_ia32_paddq
__builtin_ia32_pmuludq
V1LLiV2iV2i
__builtin_ia32_psubq
__builtin_ia32_pabsb
V8cV8c
__builtin_ia32_pabsd
__builtin_ia32_pabsw
V4sV4s
__builtin_ia32_palignr
V8cV8cV8cIc
__builtin_ia32_phaddd
__builtin_ia32_phaddsw
__builtin_ia32_phaddw
__builtin_ia32_phsubd
__builtin_ia32_phsubsw
__builtin_ia32_phsubw
__builtin_ia32_pmaddubsw
__builtin_ia32_pmulhrsw
__builtin_ia32_pshufb
__builtin_ia32_psignw
__builtin_ia32_psignb
__builtin_ia32_psignd
__builtin_ia32_comieq
iV4fV4f
__builtin_ia32_comilt
__builtin_ia32_comile
__builtin_ia32_comigt
__builtin_ia32_comige
__builtin_ia32_comineq
__builtin_ia32_ucomieq
__builtin_ia32_ucomilt
__builtin_ia32_ucomile
__builtin_ia32_ucomigt
__builtin_ia32_ucomige
__builtin_ia32_ucomineq
__builtin_ia32_comisdeq
iV2dV2d
__builtin_ia32_comisdlt
__builtin_ia32_comisdle
__builtin_ia32_comisdgt
__builtin_ia32_comisdge
__builtin_ia32_comisdneq
__builtin_ia32_ucomisdeq
__builtin_ia32_ucomisdlt
__builtin_ia32_ucomisdle
__builtin_ia32_ucomisdgt
__builtin_ia32_ucomisdge
__builtin_ia32_ucomisdneq
__builtin_ia32_cmpeqps
V4fV4fV4f
__builtin_ia32_cmpltps
__builtin_ia32_cmpleps
__builtin_ia32_cmpunordps
__builtin_ia32_cmpneqps
__builtin_ia32_cmpnltps
__builtin_ia32_cmpnleps
__builtin_ia32_cmpordps
__builtin_ia32_cmpeqss
__builtin_ia32_cmpltss
__builtin_ia32_cmpless
__builtin_ia32_cmpunordss
__builtin_ia32_cmpneqss
__builtin_ia32_cmpnltss
__builtin_ia32_cmpnless
__builtin_ia32_cmpordss
__builtin_ia32_minps
__builtin_ia32_maxps
__builtin_ia32_minss
__builtin_ia32_maxss
__builtin_ia32_cmpeqpd
V2dV2dV2d
__builtin_ia32_cmpltpd
__builtin_ia32_cmplepd
__builtin_ia32_cmpunordpd
__builtin_ia32_cmpneqpd
__builtin_ia32_cmpnltpd
__builtin_ia32_cmpnlepd
__builtin_ia32_cmpordpd
__builtin_ia32_cmpeqsd
__builtin_ia32_cmpltsd
__builtin_ia32_cmplesd
__builtin_ia32_cmpunordsd
__builtin_ia32_cmpneqsd
__builtin_ia32_cmpnltsd
__builtin_ia32_cmpnlesd
__builtin_ia32_cmpordsd
__builtin_ia32_minpd
__builtin_ia32_maxpd
__builtin_ia32_minsd
__builtin_ia32_maxsd
__builtin_ia32_paddsb128
V16cV16cV16c
__builtin_ia32_paddsw128
V8sV8sV8s
__builtin_ia32_psubsb128
__builtin_ia32_psubsw128
__builtin_ia32_paddusb128
__builtin_ia32_paddusw128
__builtin_ia32_psubusb128
__builtin_ia32_psubusw128
__builtin_ia32_pmulhw128
__builtin_ia32_pavgb128
__builtin_ia32_pavgw128
__builtin_ia32_pmaxub128
__builtin_ia32_pmaxsw128
__builtin_ia32_pminub128
__builtin_ia32_pminsw128
__builtin_ia32_packsswb128
V16cV8sV8s
__builtin_ia32_packssdw128
V8sV4iV4i
__builtin_ia32_packuswb128
__builtin_ia32_pmulhuw128
__builtin_ia32_addsubps
__builtin_ia32_addsubpd
__builtin_ia32_haddps
__builtin_ia32_haddpd
__builtin_ia32_hsubps
__builtin_ia32_hsubpd
__builtin_ia32_phaddw128
__builtin_ia32_phaddd128
V4iV4iV4i
__builtin_ia32_phaddsw128
__builtin_ia32_phsubw128
__builtin_ia32_phsubd128
__builtin_ia32_phsubsw128
__builtin_ia32_pmaddubsw128
V8sV16cV16c
__builtin_ia32_pmulhrsw128
__builtin_ia32_pshufb128
__builtin_ia32_psignb128
__builtin_ia32_psignw128
__builtin_ia32_psignd128
__builtin_ia32_pabsb128
V16cV16c
__builtin_ia32_pabsw128
V8sV8s
__builtin_ia32_pabsd128
V4iV4i
__builtin_ia32_ldmxcsr
_mm_setcsr
xmmintrin.h
__builtin_ia32_stmxcsr
_mm_getcsr
__builtin_ia32_cvtss2si
iV4f
__builtin_ia32_cvttss2si
__builtin_ia32_storehps
vV2i*V4f
__builtin_ia32_storelps
__builtin_ia32_movmskps
__builtin_ia32_sfence
_mm_sfence
__builtin_ia32_rcpps
V4fV4f
__builtin_ia32_rcpss
__builtin_ia32_rsqrtps
__builtin_ia32_rsqrtss
__builtin_ia32_sqrtps
__builtin_ia32_sqrtss
__builtin_ia32_maskmovdqu
vV16cV16cc*
__builtin_ia32_movmskpd
iV2d
__builtin_ia32_pmovmskb128
iV16c
__builtin_ia32_movnti
vi*i
__builtin_ia32_movnti64
vLLi*LLi
__builtin_ia32_psadbw128
V2LLiV16cV16c
__builtin_ia32_sqrtpd
V2dV2d
__builtin_ia32_sqrtsd
__builtin_ia32_cvtdq2ps
V4fV4i
__builtin_ia32_cvtpd2dq
V2LLiV2d
__builtin_ia32_cvtpd2ps
V4fV2d
__builtin_ia32_cvttpd2dq
V4iV2d
__builtin_ia32_cvtsd2si
__builtin_ia32_cvttsd2si
__builtin_ia32_cvtsd2ss
V4fV4fV2d
__builtin_ia32_cvtps2dq
V4iV4f
__builtin_ia32_cvttps2dq
__builtin_ia32_clflush
vvC*
_mm_clflush
emmintrin.h
__builtin_ia32_lfence
_mm_lfence
__builtin_ia32_mfence
_mm_mfence
__builtin_ia32_pause
_mm_pause
__builtin_ia32_pmuludq128
V2LLiV4iV4i
__builtin_ia32_psraw128
__builtin_ia32_psrad128
__builtin_ia32_psrlw128
__builtin_ia32_psrld128
__builtin_ia32_psrlq128
V2LLiV2LLiV2LLi
__builtin_ia32_psllw128
__builtin_ia32_pslld128
__builtin_ia32_psllq128
__builtin_ia32_psllwi128
V8sV8si
__builtin_ia32_pslldi128
V4iV4ii
__builtin_ia32_psllqi128
V2LLiV2LLii
__builtin_ia32_psrlwi128
__builtin_ia32_psrldi128
__builtin_ia32_psrlqi128
__builtin_ia32_psrawi128
__builtin_ia32_psradi128
__builtin_ia32_pmaddwd128
V4iV8sV8s
__builtin_ia32_monitor
vv*UiUi
__builtin_ia32_mwait
vUiUi
__builtin_ia32_lddqu
V16ccC*
__builtin_ia32_palignr128
V16cV16cV16cIi
__builtin_ia32_insertps128
V4fV4fV4fIc
__builtin_ia32_pblendvb128
V16cV16cV16cV16c
__builtin_ia32_blendvpd
V2dV2dV2dV2d
__builtin_ia32_blendvps
V4fV4fV4fV4f
__builtin_ia32_packusdw128
__builtin_ia32_pmaxsb128
__builtin_ia32_pmaxsd128
__builtin_ia32_pmaxud128
__builtin_ia32_pmaxuw128
__builtin_ia32_pminsb128
__builtin_ia32_pminsd128
__builtin_ia32_pminud128
__builtin_ia32_pminuw128
__builtin_ia32_pmuldq128
__builtin_ia32_roundps
V4fV4fIi
__builtin_ia32_roundss
V4fV4fV4fIi
__builtin_ia32_roundsd
V2dV2dV2dIi
__builtin_ia32_roundpd
V2dV2dIi
__builtin_ia32_dpps
__builtin_ia32_dppd
V2dV2dV2dIc
__builtin_ia32_ptestz128
iV2LLiV2LLi
__builtin_ia32_ptestc128
__builtin_ia32_ptestnzc128
__builtin_ia32_mpsadbw128
V16cV16cV16cIc
__builtin_ia32_phminposuw128
__builtin_ia32_pcmpistrm128
__builtin_ia32_pcmpistri128
iV16cV16cIc
__builtin_ia32_pcmpestrm128
V16cV16ciV16ciIc
__builtin_ia32_pcmpestri128
iV16ciV16ciIc
__builtin_ia32_pcmpistria128
__builtin_ia32_pcmpistric128
__builtin_ia32_pcmpistrio128
__builtin_ia32_pcmpistris128
__builtin_ia32_pcmpistriz128
__builtin_ia32_pcmpestria128
__builtin_ia32_pcmpestric128
__builtin_ia32_pcmpestrio128
__builtin_ia32_pcmpestris128
__builtin_ia32_pcmpestriz128
__builtin_ia32_crc32qi
__builtin_ia32_crc32hi
__builtin_ia32_crc32si
__builtin_ia32_extrqi
V2LLiV2LLiIcIc
__builtin_ia32_extrq
V2LLiV2LLiV16c
__builtin_ia32_insertqi
V2LLiV2LLiV2LLiIcIc
__builtin_ia32_insertq
__builtin_ia32_movntsd
vd*V2d
__builtin_ia32_movntss
vf*V4f
__builtin_ia32_aesenc128
__builtin_ia32_aesenclast128
__builtin_ia32_aesdec128
__builtin_ia32_aesdeclast128
__builtin_ia32_aesimc128
V2LLiV2LLi
__builtin_ia32_aeskeygenassist128
V2LLiV2LLiIc
__builtin_ia32_pclmulqdq128
V2LLiV2LLiV2LLiIc
__builtin_ia32_addsubpd256
V4dV4dV4d
__builtin_ia32_addsubps256
V8fV8fV8f
__builtin_ia32_haddpd256
__builtin_ia32_hsubps256
__builtin_ia32_hsubpd256
__builtin_ia32_haddps256
__builtin_ia32_maxpd256
__builtin_ia32_maxps256
__builtin_ia32_minpd256
__builtin_ia32_minps256
__builtin_ia32_vpermilvarpd
V2dV2dV2LLi
__builtin_ia32_vpermilvarps
V4fV4fV4i
__builtin_ia32_vpermilvarpd256
V4dV4dV4LLi
__builtin_ia32_vpermilvarps256
V8fV8fV8i
__builtin_ia32_blendvpd256
V4dV4dV4dV4d
__builtin_ia32_blendvps256
V8fV8fV8fV8f
__builtin_ia32_dpps256
V8fV8fV8fIc
__builtin_ia32_cmppd
__builtin_ia32_cmppd256
V4dV4dV4dIc
__builtin_ia32_cmpps
__builtin_ia32_cmpps256
__builtin_ia32_cmpsd
__builtin_ia32_cmpss
__builtin_ia32_cvtdq2ps256
V8fV8i
__builtin_ia32_cvtpd2ps256
V4fV4d
__builtin_ia32_cvtps2dq256
V8iV8f
__builtin_ia32_cvttpd2dq256
V4iV4d
__builtin_ia32_cvtpd2dq256
__builtin_ia32_cvttps2dq256
__builtin_ia32_vperm2f128_pd256
__builtin_ia32_vperm2f128_ps256
__builtin_ia32_vperm2f128_si256
V8iV8iV8iIc
__builtin_ia32_sqrtpd256
V4dV4d
__builtin_ia32_sqrtps256
V8fV8f
__builtin_ia32_rsqrtps256
__builtin_ia32_rcpps256
__builtin_ia32_roundpd256
V4dV4dIi
__builtin_ia32_roundps256
V8fV8fIi
__builtin_ia32_vtestzpd
__builtin_ia32_vtestcpd
__builtin_ia32_vtestnzcpd
__builtin_ia32_vtestzps
__builtin_ia32_vtestcps
__builtin_ia32_vtestnzcps
__builtin_ia32_vtestzpd256
iV4dV4d
__builtin_ia32_vtestcpd256
__builtin_ia32_vtestnzcpd256
__builtin_ia32_vtestzps256
iV8fV8f
__builtin_ia32_vtestcps256
__builtin_ia32_vtestnzcps256
__builtin_ia32_ptestz256
iV4LLiV4LLi
__builtin_ia32_ptestc256
__builtin_ia32_ptestnzc256
__builtin_ia32_movmskpd256
iV4d
__builtin_ia32_movmskps256
iV8f
__builtin_ia32_vzeroall
__builtin_ia32_vzeroupper
__builtin_ia32_vbroadcastf128_pd256
V4dV2dC*
__builtin_ia32_vbroadcastf128_ps256
V8fV4fC*
__builtin_ia32_lddqu256
V32ccC*
__builtin_ia32_maskloadpd
V2dV2dC*V2LLi
__builtin_ia32_maskloadps
V4fV4fC*V4i
__builtin_ia32_maskloadpd256
V4dV4dC*V4LLi
__builtin_ia32_maskloadps256
V8fV8fC*V8i
__builtin_ia32_maskstorepd
vV2d*V2LLiV2d
__builtin_ia32_maskstoreps
vV4f*V4iV4f
__builtin_ia32_maskstorepd256
vV4d*V4LLiV4d
__builtin_ia32_maskstoreps256
vV8f*V8iV8f
__builtin_ia32_mpsadbw256
V32cV32cV32cIc
__builtin_ia32_pabsb256
V32cV32c
__builtin_ia32_pabsw256
V16sV16s
__builtin_ia32_pabsd256
V8iV8i
__builtin_ia32_packsswb256
V32cV16sV16s
__builtin_ia32_packssdw256
V16sV8iV8i
__builtin_ia32_packuswb256
__builtin_ia32_packusdw256
__builtin_ia32_paddsb256
V32cV32cV32c
__builtin_ia32_paddsw256
V16sV16sV16s
__builtin_ia32_psubsb256
__builtin_ia32_psubsw256
__builtin_ia32_paddusb256
__builtin_ia32_paddusw256
__builtin_ia32_psubusb256
__builtin_ia32_psubusw256
__builtin_ia32_palignr256
V32cV32cV32cIi
__builtin_ia32_pavgb256
__builtin_ia32_pavgw256
__builtin_ia32_pblendvb256
V32cV32cV32cV32c
__builtin_ia32_phaddw256
__builtin_ia32_phaddd256
V8iV8iV8i
__builtin_ia32_phaddsw256
__builtin_ia32_phsubw256
__builtin_ia32_phsubd256
__builtin_ia32_phsubsw256
__builtin_ia32_pmaddubsw256
V16sV32cV32c
__builtin_ia32_pmaddwd256
V8iV16sV16s
__builtin_ia32_pmaxub256
__builtin_ia32_pmaxuw256
__builtin_ia32_pmaxud256
__builtin_ia32_pmaxsb256
__builtin_ia32_pmaxsw256
__builtin_ia32_pmaxsd256
__builtin_ia32_pminub256
__builtin_ia32_pminuw256
__builtin_ia32_pminud256
__builtin_ia32_pminsb256
__builtin_ia32_pminsw256
__builtin_ia32_pminsd256
__builtin_ia32_pmovmskb256
iV32c
__builtin_ia32_pmuldq256
V4LLiV8iV8i
__builtin_ia32_pmulhrsw256
__builtin_ia32_pmulhuw256
__builtin_ia32_pmulhw256
__builtin_ia32_pmuludq256
__builtin_ia32_psadbw256
V4LLiV32cV32c
__builtin_ia32_pshufb256
__builtin_ia32_psignb256
__builtin_ia32_psignw256
__builtin_ia32_psignd256
__builtin_ia32_psllwi256
V16sV16si
__builtin_ia32_psllw256
V16sV16sV8s
__builtin_ia32_pslldi256
V8iV8ii
__builtin_ia32_pslld256
V8iV8iV4i
__builtin_ia32_psllqi256
V4LLiV4LLii
__builtin_ia32_psllq256
V4LLiV4LLiV2LLi
__builtin_ia32_psrawi256
__builtin_ia32_psraw256
__builtin_ia32_psradi256
__builtin_ia32_psrad256
__builtin_ia32_psrlwi256
__builtin_ia32_psrlw256
__builtin_ia32_psrldi256
__builtin_ia32_psrld256
__builtin_ia32_psrlqi256
__builtin_ia32_psrlq256
__builtin_ia32_permvarsi256
__builtin_ia32_permvarsf256
__builtin_ia32_permti256
V4LLiV4LLiV4LLiIc
__builtin_ia32_maskloadd256
V8iV8iC*V8i
__builtin_ia32_maskloadq256
V4LLiV4LLiC*V4LLi
__builtin_ia32_maskloadd
V4iV4iC*V4i
__builtin_ia32_maskloadq
V2LLiV2LLiC*V2LLi
__builtin_ia32_maskstored256
vV8i*V8iV8i
__builtin_ia32_maskstoreq256
vV4LLi*V4LLiV4LLi
__builtin_ia32_maskstored
vV4i*V4iV4i
__builtin_ia32_maskstoreq
vV2LLi*V2LLiV2LLi
__builtin_ia32_psllv8si
__builtin_ia32_psllv4si
__builtin_ia32_psllv4di
V4LLiV4LLiV4LLi
__builtin_ia32_psllv2di
__builtin_ia32_psrav8si
__builtin_ia32_psrav4si
__builtin_ia32_psrlv8si
__builtin_ia32_psrlv4si
__builtin_ia32_psrlv4di
__builtin_ia32_psrlv2di
__builtin_ia32_gatherd_pd
V2dV2ddC*V4iV2dIc
__builtin_ia32_gatherd_pd256
V4dV4ddC*V4iV4dIc
__builtin_ia32_gatherq_pd
V2dV2ddC*V2LLiV2dIc
__builtin_ia32_gatherq_pd256
V4dV4ddC*V4LLiV4dIc
__builtin_ia32_gatherd_ps
V4fV4ffC*V4iV4fIc
__builtin_ia32_gatherd_ps256
V8fV8ffC*V8iV8fIc
__builtin_ia32_gatherq_ps
V4fV4ffC*V2LLiV4fIc
__builtin_ia32_gatherq_ps256
V4fV4ffC*V4LLiV4fIc
__builtin_ia32_gatherd_q
V2LLiV2LLiLLiC*V4iV2LLiIc
__builtin_ia32_gatherd_q256
V4LLiV4LLiLLiC*V4iV4LLiIc
__builtin_ia32_gatherq_q
V2LLiV2LLiLLiC*V2LLiV2LLiIc
__builtin_ia32_gatherq_q256
V4LLiV4LLiLLiC*V4LLiV4LLiIc
__builtin_ia32_gatherd_d
V4iV4iiC*V4iV4iIc
__builtin_ia32_gatherd_d256
V8iV8iiC*V8iV8iIc
__builtin_ia32_gatherq_d
V4iV4iiC*V2LLiV4iIc
__builtin_ia32_gatherq_d256
V4iV4iiC*V4LLiV4iIc
__builtin_ia32_vcvtps2ph
V8sV4fIi
__builtin_ia32_vcvtps2ph256
V8sV8fIi
__builtin_ia32_vcvtph2ps
V4fV8s
__builtin_ia32_vcvtph2ps256
V8fV8s
__builtin_ia32_rdrand16_step
UiUs*
__builtin_ia32_rdrand32_step
UiUi*
__builtin_ia32_rdrand64_step
UiULLi*
__builtin_ia32_rdfsbase32
__builtin_ia32_rdgsbase32
__builtin_ia32_wrfsbase32
__builtin_ia32_wrgsbase32
__builtin_ia32_fxrstor
__builtin_ia32_fxsave
__builtin_ia32_xsave
vv*ULLi
__builtin_ia32_xrstor
__builtin_ia32_xsaveopt
__builtin_ia32_xrstors
__builtin_ia32_xsavec
__builtin_ia32_xsaves
__builtin_ia32_clflushopt
__builtin_ia32_addcarryx_u32
UcUcUiUiUi*
__builtin_ia32_addcarry_u32
__builtin_ia32_subborrow_u32
__builtin_ia32_rdseed16_step
__builtin_ia32_rdseed32_step
__builtin_ia32_bextr_u32
__builtin_ia32_bzhi_si
__builtin_ia32_pdep_si
__builtin_ia32_pext_si
__builtin_ia32_bextri_u32
UiUiIUi
__builtin_ia32_llwpcb
__builtin_ia32_slwpcb
__builtin_ia32_lwpins32
UcUiUiUi
__builtin_ia32_lwpval32
vUiUiUi
__builtin_ia32_sha1rnds4
V4iV4iV4iIc
__builtin_ia32_sha1nexte
__builtin_ia32_sha1msg1
__builtin_ia32_sha1msg2
__builtin_ia32_sha256rnds2
V4iV4iV4iV4i
__builtin_ia32_sha256msg1
__builtin_ia32_sha256msg2
__builtin_ia32_vfmaddps
fma|fma4
__builtin_ia32_vfmaddpd
__builtin_ia32_vfmaddss
__builtin_ia32_vfmaddsd
__builtin_ia32_vfmsubps
__builtin_ia32_vfmsubpd
__builtin_ia32_vfmsubss
__builtin_ia32_vfmsubsd
__builtin_ia32_vfnmaddps
__builtin_ia32_vfnmaddpd
__builtin_ia32_vfnmaddss
__builtin_ia32_vfnmaddsd
__builtin_ia32_vfnmsubps
__builtin_ia32_vfnmsubpd
__builtin_ia32_vfnmsubss
__builtin_ia32_vfnmsubsd
__builtin_ia32_vfmaddsubps
__builtin_ia32_vfmaddsubpd
__builtin_ia32_vfmsubaddps
__builtin_ia32_vfmsubaddpd
__builtin_ia32_vfmaddps256
__builtin_ia32_vfmaddpd256
__builtin_ia32_vfmsubps256
__builtin_ia32_vfmsubpd256
__builtin_ia32_vfnmaddps256
__builtin_ia32_vfnmaddpd256
__builtin_ia32_vfnmsubps256
__builtin_ia32_vfnmsubpd256
__builtin_ia32_vfmaddsubps256
__builtin_ia32_vfmaddsubpd256
__builtin_ia32_vfmsubaddps256
__builtin_ia32_vfmsubaddpd256
__builtin_ia32_vfmaddpd128_mask
V2dV2dV2dV2dUc
__builtin_ia32_vfmaddpd128_mask3
__builtin_ia32_vfmaddpd128_maskz
__builtin_ia32_vfmaddpd256_mask
V4dV4dV4dV4dUc
__builtin_ia32_vfmaddpd256_mask3
__builtin_ia32_vfmaddpd256_maskz
__builtin_ia32_vfmaddpd512_mask
V8dV8dV8dV8dUcIi
__builtin_ia32_vfmaddpd512_mask3
__builtin_ia32_vfmaddpd512_maskz
__builtin_ia32_vfmaddps128_mask
V4fV4fV4fV4fUc
__builtin_ia32_vfmaddps128_mask3
__builtin_ia32_vfmaddps128_maskz
__builtin_ia32_vfmaddps256_mask
V8fV8fV8fV8fUc
__builtin_ia32_vfmaddps256_mask3
__builtin_ia32_vfmaddps256_maskz
__builtin_ia32_vfmaddps512_mask
V16fV16fV16fV16fUsIi
__builtin_ia32_vfmaddps512_mask3
__builtin_ia32_vfmaddps512_maskz
__builtin_ia32_vfmaddsubpd128_mask
__builtin_ia32_vfmaddsubpd128_mask3
__builtin_ia32_vfmaddsubpd128_maskz
__builtin_ia32_vfmaddsubpd256_mask
__builtin_ia32_vfmaddsubpd256_mask3
__builtin_ia32_vfmaddsubpd256_maskz
__builtin_ia32_vfmaddsubpd512_mask
__builtin_ia32_vfmaddsubpd512_mask3
__builtin_ia32_vfmaddsubpd512_maskz
__builtin_ia32_vfmaddsubps128_mask
__builtin_ia32_vfmaddsubps128_mask3
__builtin_ia32_vfmaddsubps128_maskz
__builtin_ia32_vfmaddsubps256_mask
__builtin_ia32_vfmaddsubps256_mask3
__builtin_ia32_vfmaddsubps256_maskz
__builtin_ia32_vfmaddsubps512_mask
__builtin_ia32_vfmaddsubps512_mask3
__builtin_ia32_vfmaddsubps512_maskz
__builtin_ia32_vfmsubpd128_mask3
__builtin_ia32_vfmsubpd256_mask3
__builtin_ia32_vfmsubpd512_mask3
__builtin_ia32_vfmsubps128_mask3
__builtin_ia32_vfmsubps256_mask3
__builtin_ia32_vfmsubps512_mask3
__builtin_ia32_vfmsubaddpd128_mask3
__builtin_ia32_vfmsubaddpd256_mask3
__builtin_ia32_vfmsubaddpd512_mask3
__builtin_ia32_vfmsubaddps128_mask3
__builtin_ia32_vfmsubaddps256_mask3
__builtin_ia32_vfmsubaddps512_mask3
__builtin_ia32_vfnmaddpd128_mask
__builtin_ia32_vfnmaddpd256_mask
__builtin_ia32_vfnmaddpd512_mask
__builtin_ia32_vfnmaddps128_mask
__builtin_ia32_vfnmaddps256_mask
__builtin_ia32_vfnmaddps512_mask
__builtin_ia32_vfnmsubpd128_mask
__builtin_ia32_vfnmsubpd128_mask3
__builtin_ia32_vfnmsubpd256_mask
__builtin_ia32_vfnmsubpd256_mask3
__builtin_ia32_vfnmsubpd512_mask
__builtin_ia32_vfnmsubpd512_mask3
__builtin_ia32_vfnmsubps128_mask
__builtin_ia32_vfnmsubps128_mask3
__builtin_ia32_vfnmsubps256_mask
__builtin_ia32_vfnmsubps256_mask3
__builtin_ia32_vfnmsubps512_mask
__builtin_ia32_vfnmsubps512_mask3
__builtin_ia32_vpmacssww
V8sV8sV8sV8s
__builtin_ia32_vpmacsww
__builtin_ia32_vpmacsswd
V4iV8sV8sV4i
__builtin_ia32_vpmacswd
__builtin_ia32_vpmacssdd
__builtin_ia32_vpmacsdd
__builtin_ia32_vpmacssdql
V2LLiV4iV4iV2LLi
__builtin_ia32_vpmacsdql
__builtin_ia32_vpmacssdqh
__builtin_ia32_vpmacsdqh
__builtin_ia32_vpmadcsswd
__builtin_ia32_vpmadcswd
__builtin_ia32_vphaddbw
V8sV16c
__builtin_ia32_vphaddbd
V4iV16c
__builtin_ia32_vphaddbq
V2LLiV16c
__builtin_ia32_vphaddwd
V4iV8s
__builtin_ia32_vphaddwq
V2LLiV8s
__builtin_ia32_vphadddq
V2LLiV4i
__builtin_ia32_vphaddubw
__builtin_ia32_vphaddubd
__builtin_ia32_vphaddubq
__builtin_ia32_vphadduwd
__builtin_ia32_vphadduwq
__builtin_ia32_vphaddudq
__builtin_ia32_vphsubbw
__builtin_ia32_vphsubwd
__builtin_ia32_vphsubdq
__builtin_ia32_vpperm
__builtin_ia32_vprotb
__builtin_ia32_vprotw
__builtin_ia32_vprotd
__builtin_ia32_vprotq
__builtin_ia32_vprotbi
V16cV16cIc
__builtin_ia32_vprotwi
V8sV8sIc
__builtin_ia32_vprotdi
V4iV4iIc
__builtin_ia32_vprotqi
__builtin_ia32_vpshlb
__builtin_ia32_vpshlw
__builtin_ia32_vpshld
__builtin_ia32_vpshlq
__builtin_ia32_vpshab
__builtin_ia32_vpshaw
__builtin_ia32_vpshad
__builtin_ia32_vpshaq
__builtin_ia32_vpcomub
__builtin_ia32_vpcomuw
V8sV8sV8sIc
__builtin_ia32_vpcomud
__builtin_ia32_vpcomuq
__builtin_ia32_vpcomb
__builtin_ia32_vpcomw
__builtin_ia32_vpcomd
__builtin_ia32_vpcomq
__builtin_ia32_vpermil2pd
V2dV2dV2dV2LLiIc
__builtin_ia32_vpermil2pd256
V4dV4dV4dV4LLiIc
__builtin_ia32_vpermil2ps
V4fV4fV4fV4iIc
__builtin_ia32_vpermil2ps256
V8fV8fV8fV8iIc
__builtin_ia32_vfrczss
__builtin_ia32_vfrczsd
__builtin_ia32_vfrczps
__builtin_ia32_vfrczpd
__builtin_ia32_vfrczps256
__builtin_ia32_vfrczpd256
__builtin_ia32_xbegin
__builtin_ia32_xend
__builtin_ia32_xabort
__builtin_ia32_xtest
__builtin_ia32_rdpmc
ULLii
__builtin_ia32_rdtsc
ULLi
__rdtsc
__builtin_ia32_rdtscp
ULLiUi*
__builtin_ia32_rdpkru
__builtin_ia32_wrpkru
__builtin_ia32_sqrtpd512_mask
V8dV8dV8dUcIi
__builtin_ia32_sqrtps512_mask
V16fV16fV16fUsIi
__builtin_ia32_rsqrt14sd_mask
__builtin_ia32_rsqrt14ss_mask
__builtin_ia32_rsqrt14pd512_mask
V8dV8dV8dUc
__builtin_ia32_rsqrt14ps512_mask
V16fV16fV16fUs
__builtin_ia32_rsqrt28sd_round_mask
V2dV2dV2dV2dUcIi
__builtin_ia32_rsqrt28ss_round_mask
V4fV4fV4fV4fUcIi
__builtin_ia32_rsqrt28pd_mask
__builtin_ia32_rsqrt28ps_mask
__builtin_ia32_rcp14sd_mask
__builtin_ia32_rcp14ss_mask
__builtin_ia32_rcp14pd512_mask
__builtin_ia32_rcp14ps512_mask
__builtin_ia32_rcp28sd_round_mask
__builtin_ia32_rcp28ss_round_mask
__builtin_ia32_rcp28pd_mask
__builtin_ia32_rcp28ps_mask
__builtin_ia32_exp2pd_mask
__builtin_ia32_exp2ps_mask
__builtin_ia32_cvttps2dq512_mask
V16iV16fV16iUsIi
__builtin_ia32_cvttps2udq512_mask
__builtin_ia32_cvttpd2dq512_mask
V8iV8dV8iUcIi
__builtin_ia32_cvttpd2udq512_mask
__builtin_ia32_cmpps512_mask
UsV16fV16fIiUsIi
__builtin_ia32_cmpps256_mask
UcV8fV8fIiUc
__builtin_ia32_cmpps128_mask
UcV4fV4fIiUc
__builtin_ia32_pcmpeqb512_mask
LLiV64cV64cLLi
__builtin_ia32_pcmpeqd512_mask
sV16iV16is
__builtin_ia32_pcmpeqq512_mask
cV8LLiV8LLic
__builtin_ia32_pcmpeqw512_mask
iV32sV32si
__builtin_ia32_pcmpeqb256_mask
iV32cV32ci
avx512vl,avx512bw
__builtin_ia32_pcmpeqd256_mask
cV8iV8ic
__builtin_ia32_pcmpeqq256_mask
cV4LLiV4LLic
__builtin_ia32_pcmpeqw256_mask
sV16sV16ss
__builtin_ia32_pcmpeqb128_mask
sV16cV16cs
__builtin_ia32_pcmpeqd128_mask
cV4iV4ic
__builtin_ia32_pcmpeqq128_mask
cV2LLiV2LLic
__builtin_ia32_pcmpeqw128_mask
cV8sV8sc
__builtin_ia32_pcmpgtb512_mask
__builtin_ia32_pcmpgtd512_mask
__builtin_ia32_pcmpgtq512_mask
__builtin_ia32_pcmpgtw512_mask
__builtin_ia32_pcmpgtb256_mask
__builtin_ia32_pcmpgtd256_mask
__builtin_ia32_pcmpgtq256_mask
__builtin_ia32_pcmpgtw256_mask
__builtin_ia32_pcmpgtb128_mask
__builtin_ia32_pcmpgtd128_mask
__builtin_ia32_pcmpgtq128_mask
__builtin_ia32_pcmpgtw128_mask
__builtin_ia32_cmppd512_mask
UcV8dV8dIiUcIi
__builtin_ia32_cmppd256_mask
UcV4dV4dIiUc
__builtin_ia32_cmppd128_mask
UcV2dV2dIiUc
__builtin_ia32_rndscaleps_mask
V16fV16fIiV16fUsIi
__builtin_ia32_rndscalepd_mask
V8dV8dIiV8dUcIi
__builtin_ia32_cvtps2dq512_mask
__builtin_ia32_cvtpd2dq512_mask
__builtin_ia32_cvtps2udq512_mask
__builtin_ia32_cvtpd2udq512_mask
__builtin_ia32_minps512_mask
__builtin_ia32_minpd512_mask
__builtin_ia32_maxps512_mask
__builtin_ia32_maxpd512_mask
__builtin_ia32_cvtdq2ps512_mask
V16fV16iV16fUsIi
__builtin_ia32_cvtudq2ps512_mask
__builtin_ia32_cvtpd2ps512_mask
V8fV8dV8fUcIi
__builtin_ia32_vcvtps2ph512_mask
V16sV16fIiV16sUs
__builtin_ia32_vcvtph2ps512_mask
V16fV16sV16fUsIi
__builtin_ia32_pabsd512_mask
V16iV16iV16iUs
__builtin_ia32_pabsq512_mask
V8LLiV8LLiV8LLiUc
__builtin_ia32_pmaxsd512_mask
V16iV16iV16iV16iUs
__builtin_ia32_pmaxsq512_mask
V8LLiV8LLiV8LLiV8LLiUc
__builtin_ia32_pmaxud512_mask
__builtin_ia32_pmaxuq512_mask
__builtin_ia32_pminsd512_mask
__builtin_ia32_pminsq512_mask
__builtin_ia32_pminud512_mask
__builtin_ia32_pminuq512_mask
__builtin_ia32_pmuldq512
V8LLiV16iV16i
__builtin_ia32_pmuludq512
__builtin_ia32_ptestmd512
UsV16iV16iUs
__builtin_ia32_ptestmq512
UcV8LLiV8LLiUc
__builtin_ia32_pbroadcastd512_gpr_mask
V16iiV16iUs
__builtin_ia32_loaddqusi512_mask
V16iiC*V16iUs
__builtin_ia32_loaddqudi512_mask
V8LLiLLiC*V8LLiUc
__builtin_ia32_loadups512_mask
V16ffC*V16fUs
__builtin_ia32_loadaps512_mask
V16fV16fC*V16fUs
__builtin_ia32_loadupd512_mask
V8ddC*V8dUc
__builtin_ia32_loadapd512_mask
V8dV8dC*V8dUc
__builtin_ia32_storedqudi512_mask
vLLi*V8LLiUc
__builtin_ia32_storedqusi512_mask
vi*V16iUs
__builtin_ia32_storeupd512_mask
vd*V8dUc
__builtin_ia32_storeapd512_mask
vV8d*V8dUc
__builtin_ia32_storeups512_mask
vf*V16fUs
__builtin_ia32_storeaps512_mask
vV16f*V16fUs
__builtin_ia32_vpermt2vard512_mask
__builtin_ia32_vpermt2varq512_mask
__builtin_ia32_vpermt2varps512_mask
V16fV16iV16fV16fUs
__builtin_ia32_vpermt2varpd512_mask
V8dV8LLiV8dV8dUc
__builtin_ia32_gather3div2df
V2dV2ddC*V2LLiUcIi
__builtin_ia32_gather3div2di
V2LLiV2LLiLLiC*V2LLiUcIi
__builtin_ia32_gather3div4df
V4dV4ddC*V4LLiUcIi
__builtin_ia32_gather3div4di
V4LLiV4LLiLLiC*V4LLiUcIi
__builtin_ia32_gather3div4sf
V4fV4ffC*V2LLiUcIi
__builtin_ia32_gather3div4si
V4iV4iiC*V2LLiUcIi
__builtin_ia32_gather3div8sf
V4fV4ffC*V4LLiUcIi
__builtin_ia32_gather3div8si
V4iV4iiC*V4LLiUcIi
__builtin_ia32_gather3siv2df
V2dV2ddC*V4iUcIi
__builtin_ia32_gather3siv2di
V2LLiV2LLiLLiC*V4iUcIi
__builtin_ia32_gather3siv4df
V4dV4ddC*V4iUcIi
__builtin_ia32_gather3siv4di
V4LLiV4LLiLLiC*V4iUcIi
__builtin_ia32_gather3siv4sf
V4fV4ffC*V4iUcIi
__builtin_ia32_gather3siv4si
V4iV4iiC*V4iUcIi
__builtin_ia32_gather3siv8sf
V8fV8ffC*V8iUcIi
__builtin_ia32_gather3siv8si
V8iV8iiC*V8iUcIi
__builtin_ia32_gathersiv8df
V8dV8ddC*V8iUcIi
__builtin_ia32_gathersiv16sf
V16fV16ffC*V16fUsIi
__builtin_ia32_gatherdiv8df
V8dV8ddC*V8LLiUcIi
__builtin_ia32_gatherdiv16sf
V8fV8ffC*V8LLiUcIi
__builtin_ia32_gathersiv8di
V8LLiV8LLiLLiC*V8iUcIi
__builtin_ia32_gathersiv16si
V16iV16iiC*V16iUsIi
__builtin_ia32_gatherdiv8di
V8LLiV8LLiLLiC*V8LLiUcIi
__builtin_ia32_gatherdiv16si
V8iV8iiC*V8LLiUcIi
__builtin_ia32_scattersiv8df
vd*UcV8iV8dIi
__builtin_ia32_scattersiv16sf
vf*UsV16iV16fIi
__builtin_ia32_scatterdiv8df
vd*UcV8LLiV8dIi
__builtin_ia32_scatterdiv16sf
vf*UcV8LLiV8fIi
__builtin_ia32_scattersiv8di
vLLi*UcV8iV8LLiIi
__builtin_ia32_scattersiv16si
vi*UsV16iV16iIi
__builtin_ia32_scatterdiv8di
vLLi*UcV8LLiV8LLiIi
__builtin_ia32_scatterdiv16si
vi*UcV8LLiV8iIi
__builtin_ia32_gatherpfdpd
vUcV8iLLiC*IiIi
__builtin_ia32_gatherpfdps
vUsV16iiC*IiIi
__builtin_ia32_gatherpfqpd
vUcV8LLiLLiC*IiIi
__builtin_ia32_gatherpfqps
vUcV8LLiiC*IiIi
__builtin_ia32_scatterpfdpd
vUcV8iLLi*IiIi
__builtin_ia32_scatterpfdps
vUsV16ii*IiIi
__builtin_ia32_scatterpfqpd
vUcV8LLiLLi*IiIi
__builtin_ia32_scatterpfqps
vUcV8LLii*IiIi
__builtin_ia32_knothi
UsUs
__builtin_ia32_cmpb128_mask
UsV16cV16cIiUs
__builtin_ia32_cmpd128_mask
UcV4iV4iIiUc
__builtin_ia32_cmpq128_mask
UcV2LLiV2LLiIiUc
__builtin_ia32_cmpw128_mask
UcV8sV8sIiUc
__builtin_ia32_cmpb256_mask
UiV32cV32cIiUi
__builtin_ia32_cmpd256_mask
UcV8iV8iIiUc
__builtin_ia32_cmpq256_mask
UcV4LLiV4LLiIiUc
__builtin_ia32_cmpw256_mask
UsV16sV16sIiUs
__builtin_ia32_cmpb512_mask
ULLiV64cV64cIiULLi
__builtin_ia32_cmpd512_mask
UsV16iV16iIiUs
__builtin_ia32_cmpq512_mask
UcV8LLiV8LLiIiUc
__builtin_ia32_cmpw512_mask
UiV32sV32sIiUi
__builtin_ia32_ucmpb128_mask
__builtin_ia32_ucmpd128_mask
__builtin_ia32_ucmpq128_mask
__builtin_ia32_ucmpw128_mask
__builtin_ia32_ucmpb256_mask
__builtin_ia32_ucmpd256_mask
__builtin_ia32_ucmpq256_mask
__builtin_ia32_ucmpw256_mask
__builtin_ia32_ucmpb512_mask
__builtin_ia32_ucmpd512_mask
__builtin_ia32_ucmpq512_mask
__builtin_ia32_ucmpw512_mask
__builtin_ia32_pabsb512_mask
V64cV64cV64cULLi
__builtin_ia32_pabsw512_mask
V32sV32sV32sUi
__builtin_ia32_packssdw512
V32sV16iV16i
__builtin_ia32_packsswb512
V64cV32sV32s
__builtin_ia32_packusdw512
__builtin_ia32_packuswb512
__builtin_ia32_paddsb512_mask
V64cV64cV64cV64cULLi
__builtin_ia32_paddsw512_mask
V32sV32sV32sV32sUi
__builtin_ia32_paddusb512_mask
__builtin_ia32_paddusw512_mask
__builtin_ia32_pavgb512_mask
__builtin_ia32_pavgw512_mask
__builtin_ia32_pmaxsb512_mask
__builtin_ia32_pmaxsw512_mask
__builtin_ia32_pmaxub512_mask
__builtin_ia32_pmaxuw512_mask
__builtin_ia32_pminsb512_mask
__builtin_ia32_pminsw512_mask
__builtin_ia32_pminub512_mask
__builtin_ia32_pminuw512_mask
__builtin_ia32_pshufb512
V64cV64cV64c
__builtin_ia32_psubsb512_mask
__builtin_ia32_psubsw512_mask
__builtin_ia32_psubusb512_mask
__builtin_ia32_psubusw512_mask
__builtin_ia32_vpermi2varhi512_mask
__builtin_ia32_vpermt2varhi512_mask
__builtin_ia32_vpermt2varhi512_maskz
__builtin_ia32_vpconflictdi_128_mask
V2LLiV2LLiV2LLiUc
avx512cd,avx512vl
__builtin_ia32_vpconflictdi_256_mask
V4LLiV4LLiV4LLiUc
__builtin_ia32_vpconflictsi_128_mask
V4iV4iV4iUc
__builtin_ia32_vpconflictsi_256_mask
V8iV8iV8iUc
__builtin_ia32_vpconflictdi_512_mask
__builtin_ia32_vpconflictsi_512_mask
__builtin_ia32_vplzcntd_512_mask
__builtin_ia32_vplzcntq_512_mask
__builtin_ia32_vpopcntd_512
V16iV16i
__builtin_ia32_vpopcntq_512
V8LLiV8LLi
__builtin_ia32_vpermi2varhi128_mask
V8sV8sV8sV8sUc
__builtin_ia32_vpermi2varhi256_mask
V16sV16sV16sV16sUs
__builtin_ia32_vpermt2varhi128_mask
__builtin_ia32_vpermt2varhi128_maskz
__builtin_ia32_vpermt2varhi256_mask
__builtin_ia32_vpermt2varhi256_maskz
__builtin_ia32_pmulhrsw512_mask
__builtin_ia32_pmulhuw512_mask
__builtin_ia32_pmulhw512_mask
__builtin_ia32_addpd512_mask
__builtin_ia32_addps512_mask
__builtin_ia32_divpd512_mask
__builtin_ia32_divps512_mask
__builtin_ia32_mulpd512_mask
__builtin_ia32_mulps512_mask
__builtin_ia32_subpd512_mask
__builtin_ia32_subps512_mask
__builtin_ia32_pmaddubsw512_mask
V32sV64cV64cV32sUi
__builtin_ia32_pmaddwd512_mask
V16iV32sV32sV16iUs
__builtin_ia32_addss_round_mask
__builtin_ia32_divss_round_mask
__builtin_ia32_mulss_round_mask
__builtin_ia32_subss_round_mask
__builtin_ia32_maxss_round_mask
__builtin_ia32_minss_round_mask
__builtin_ia32_addsd_round_mask
__builtin_ia32_divsd_round_mask
__builtin_ia32_mulsd_round_mask
__builtin_ia32_subsd_round_mask
__builtin_ia32_maxsd_round_mask
__builtin_ia32_minsd_round_mask
__builtin_ia32_compressdf128_mask
V2dV2dV2dUc
__builtin_ia32_compressdf256_mask
V4dV4dV4dUc
__builtin_ia32_compressdi128_mask
__builtin_ia32_compressdi256_mask
__builtin_ia32_compresssf128_mask
V4fV4fV4fUc
__builtin_ia32_compresssf256_mask
V8fV8fV8fUc
__builtin_ia32_compresssi128_mask
__builtin_ia32_compresssi256_mask
__builtin_ia32_compressstoredf128_mask
vV2d*V2dUc
__builtin_ia32_compressstoredf256_mask
vV4d*V4dUc
__builtin_ia32_compressstoredi128_mask
vV2LLi*V2LLiUc
__builtin_ia32_compressstoredi256_mask
vV4LLi*V4LLiUc
__builtin_ia32_compressstoresf128_mask
vV4f*V4fUc
__builtin_ia32_compressstoresf256_mask
vV8f*V8fUc
__builtin_ia32_compressstoresi128_mask
vV4i*V4iUc
__builtin_ia32_compressstoresi256_mask
vV8i*V8iUc
__builtin_ia32_cvtdq2ps128_mask
V4fV4iV4fUc
__builtin_ia32_cvtdq2ps256_mask
V8fV8iV8fUc
__builtin_ia32_cvtpd2dq128_mask
V4iV2dV4iUc
__builtin_ia32_cvtpd2dq256_mask
V4iV4dV4iUc
__builtin_ia32_cvtpd2ps_mask
V4fV2dV4fUc
__builtin_ia32_cvtpd2ps256_mask
V4fV4dV4fUc
__builtin_ia32_cvtpd2udq128_mask
__builtin_ia32_cvtpd2udq256_mask
__builtin_ia32_cvtps2dq128_mask
V4iV4fV4iUc
__builtin_ia32_cvtps2dq256_mask
V8iV8fV8iUc
__builtin_ia32_cvtps2pd128_mask
V2dV4fV2dUc
__builtin_ia32_cvtps2pd256_mask
V4dV4fV4dUc
__builtin_ia32_cvtps2udq128_mask
__builtin_ia32_cvtps2udq256_mask
__builtin_ia32_cvttpd2dq128_mask
__builtin_ia32_cvttpd2dq256_mask
__builtin_ia32_cvttpd2udq128_mask
__builtin_ia32_cvttpd2udq256_mask
__builtin_ia32_cvttps2dq128_mask
__builtin_ia32_cvttps2dq256_mask
__builtin_ia32_cvttps2udq128_mask
__builtin_ia32_cvttps2udq256_mask
__builtin_ia32_cvtudq2ps128_mask
__builtin_ia32_cvtudq2ps256_mask
__builtin_ia32_expanddf128_mask
__builtin_ia32_expanddf256_mask
__builtin_ia32_expanddi128_mask
__builtin_ia32_expanddi256_mask
__builtin_ia32_expandloaddf128_mask
V2dV2d*V2dUc
__builtin_ia32_expandloaddf256_mask
V4dV4d*V4dUc
__builtin_ia32_expandloaddi128_mask
V4iV2LLi*V2LLiUc
__builtin_ia32_expandloaddi256_mask
V4LLiV4LLi*V4LLiUc
__builtin_ia32_expandloadsf128_mask
V4fV4f*V4fUc
__builtin_ia32_expandloadsf256_mask
V8fV8f*V8fUc
__builtin_ia32_expandloadsi128_mask
V4iV4i*V4iUc
__builtin_ia32_expandloadsi256_mask
V8iV8i*V8iUc
__builtin_ia32_expandsf128_mask
__builtin_ia32_expandsf256_mask
__builtin_ia32_expandsi128_mask
__builtin_ia32_expandsi256_mask
__builtin_ia32_getexppd128_mask
__builtin_ia32_getexppd256_mask
__builtin_ia32_getexpps128_mask
__builtin_ia32_getexpps256_mask
__builtin_ia32_pabsq128_mask
__builtin_ia32_pabsq256_mask
__builtin_ia32_pmaxsq128_mask
V2LLiV2LLiV2LLiV2LLiUc
__builtin_ia32_pmaxsq256_mask
V4LLiV4LLiV4LLiV4LLiUc
__builtin_ia32_pmaxuq128_mask
__builtin_ia32_pmaxuq256_mask
__builtin_ia32_pminsq128_mask
__builtin_ia32_pminsq256_mask
__builtin_ia32_pminuq128_mask
__builtin_ia32_pminuq256_mask
__builtin_ia32_rndscalepd_128_mask
V2dV2dIiV2dUc
__builtin_ia32_rndscalepd_256_mask
V4dV4dIiV4dUc
__builtin_ia32_rndscaleps_128_mask
V4fV4fIiV4fUc
__builtin_ia32_rndscaleps_256_mask
V8fV8fIiV8fUc
__builtin_ia32_scalefpd128_mask
__builtin_ia32_scalefpd256_mask
__builtin_ia32_scalefps128_mask
__builtin_ia32_scalefps256_mask
__builtin_ia32_scatterdiv2df
vd*UcV2LLiV2dIi
__builtin_ia32_scatterdiv2di
vLLi*UcV2LLiV2LLiIi
__builtin_ia32_scatterdiv4df
vd*UcV4LLiV4dIi
__builtin_ia32_scatterdiv4di
vLLi*UcV4LLiV4LLiIi
__builtin_ia32_scatterdiv4sf
vf*UcV2LLiV4fIi
__builtin_ia32_scatterdiv4si
vi*UcV2LLiV4iIi
__builtin_ia32_scatterdiv8sf
vf*UcV4LLiV4fIi
__builtin_ia32_scatterdiv8si
vi*UcV4LLiV4iIi
__builtin_ia32_scattersiv2df
vd*UcV4iV2dIi
__builtin_ia32_scattersiv2di
vLLi*UcV4iV2LLiIi
__builtin_ia32_scattersiv4df
vd*UcV4iV4dIi
__builtin_ia32_scattersiv4di
vLLi*UcV4iV4LLiIi
__builtin_ia32_scattersiv4sf
vf*UcV4iV4fIi
__builtin_ia32_scattersiv4si
vi*UcV4iV4iIi
__builtin_ia32_scattersiv8sf
vf*UcV8iV8fIi
__builtin_ia32_scattersiv8si
vi*UcV8iV8iIi
__builtin_ia32_vpermi2vard128_mask
V4iV4iV4iV4iUc
__builtin_ia32_vpermi2vard256_mask
V8iV8iV8iV8iUc
__builtin_ia32_vpermi2varpd128_mask
V2dV2dV2LLiV2dUc
__builtin_ia32_vpermi2varpd256_mask
V4dV4dV4LLiV4dUc
__builtin_ia32_vpermi2varps128_mask
V4fV4fV4iV4fUc
__builtin_ia32_vpermi2varps256_mask
V8fV8fV8iV8fUc
__builtin_ia32_vpermi2varq128_mask
__builtin_ia32_vpermi2varq256_mask
__builtin_ia32_vpermt2vard128_mask
__builtin_ia32_vpermt2vard128_maskz
__builtin_ia32_vpermt2vard256_mask
__builtin_ia32_vpermt2vard256_maskz
__builtin_ia32_vpermt2varpd128_mask
V2dV2LLiV2dV2dUc
__builtin_ia32_vpermt2varpd128_maskz
__builtin_ia32_vpermt2varpd256_mask
V4dV4LLiV4dV4dUc
__builtin_ia32_vpermt2varpd256_maskz
__builtin_ia32_vpermt2varps128_mask
V4fV4iV4fV4fUc
__builtin_ia32_vpermt2varps128_maskz
__builtin_ia32_vpermt2varps256_mask
V8fV8iV8fV8fUc
__builtin_ia32_vpermt2varps256_maskz
__builtin_ia32_vpermt2varq128_mask
__builtin_ia32_vpermt2varq128_maskz
__builtin_ia32_vpermt2varq256_mask
__builtin_ia32_vpermt2varq256_maskz
__builtin_ia32_pmovswb512_mask
V32cV32sV32cUi
__builtin_ia32_pmovuswb512_mask
__builtin_ia32_pmovwb512_mask
__builtin_ia32_cvtpd2qq128_mask
V2LLiV2dV2LLiUc
avx512vl,avx512dq
__builtin_ia32_cvtpd2qq256_mask
V4LLiV4dV4LLiUc
__builtin_ia32_cvtpd2uqq128_mask
__builtin_ia32_cvtpd2uqq256_mask
__builtin_ia32_cvtps2qq128_mask
V2LLiV4fV2LLiUc
__builtin_ia32_cvtps2qq256_mask
V4LLiV4fV4LLiUc
__builtin_ia32_cvtps2uqq128_mask
__builtin_ia32_cvtps2uqq256_mask
__builtin_ia32_cvtqq2pd128_mask
V2dV2LLiV2dUc
__builtin_ia32_cvtqq2pd256_mask
V4dV4LLiV4dUc
__builtin_ia32_cvtqq2ps128_mask
V4fV2LLiV4fUc
__builtin_ia32_cvtqq2ps256_mask
V4fV4LLiV4fUc
__builtin_ia32_cvttpd2qq128_mask
__builtin_ia32_cvttpd2qq256_mask
__builtin_ia32_cvttpd2uqq128_mask
__builtin_ia32_cvttpd2uqq256_mask
__builtin_ia32_cvttps2qq128_mask
__builtin_ia32_cvttps2qq256_mask
__builtin_ia32_cvttps2uqq128_mask
__builtin_ia32_cvttps2uqq256_mask
__builtin_ia32_cvtuqq2pd128_mask
__builtin_ia32_cvtuqq2pd256_mask
__builtin_ia32_cvtuqq2ps128_mask
__builtin_ia32_cvtuqq2ps256_mask
__builtin_ia32_rangepd128_mask
V2dV2dV2dIiV2dUc
__builtin_ia32_rangepd256_mask
V4dV4dV4dIiV4dUc
__builtin_ia32_rangeps128_mask
V4fV4fV4fIiV4fUc
__builtin_ia32_rangeps256_mask
V8fV8fV8fIiV8fUc
__builtin_ia32_rangesd128_round_mask
V2dV2dV2dV2dUcIiIi
__builtin_ia32_rangess128_round_mask
V4fV4fV4fV4fUcIiIi
__builtin_ia32_reducepd128_mask
__builtin_ia32_reducepd256_mask
__builtin_ia32_reduceps128_mask
__builtin_ia32_reduceps256_mask
__builtin_ia32_reducesd_mask
__builtin_ia32_reducess_mask
__builtin_ia32_pmovswb128_mask
V16cV8sV16cUc
__builtin_ia32_pmovswb256_mask
V16cV16sV16cUs
__builtin_ia32_pmovuswb128_mask
__builtin_ia32_pmovuswb256_mask
__builtin_ia32_pmovwb128_mask
__builtin_ia32_pmovwb256_mask
__builtin_ia32_cvtpd2qq512_mask
V8LLiV8dV8LLiUcIi
__builtin_ia32_cvtpd2uqq512_mask
__builtin_ia32_cvtps2qq512_mask
V8LLiV8fV8LLiUcIi
__builtin_ia32_cvtps2uqq512_mask
__builtin_ia32_cvtqq2pd512_mask
V8dV8LLiV8dUcIi
__builtin_ia32_cvtqq2ps512_mask
V8fV8LLiV8fUcIi
__builtin_ia32_cvttpd2qq512_mask
__builtin_ia32_cvttpd2uqq512_mask
__builtin_ia32_cvttps2qq512_mask
__builtin_ia32_cvttps2uqq512_mask
__builtin_ia32_cvtuqq2pd512_mask
__builtin_ia32_cvtuqq2ps512_mask
__builtin_ia32_rangepd512_mask
V8dV8dV8dIiV8dUcIi
__builtin_ia32_rangeps512_mask
V16fV16fV16fIiV16fUsIi
__builtin_ia32_reducepd512_mask
__builtin_ia32_reduceps512_mask
__builtin_ia32_prold512_mask
V16iV16iIiV16iUs
__builtin_ia32_prolq512_mask
V8LLiV8LLiIiV8LLiUc
__builtin_ia32_prold128_mask
V4iV4iIiV4iUc
__builtin_ia32_prold256_mask
V8iV8iIiV8iUc
__builtin_ia32_prolq128_mask
V2LLiV2LLiIiV2LLiUc
__builtin_ia32_prolq256_mask
V4LLiV4LLiIiV4LLiUc
__builtin_ia32_prolvd512_mask
__builtin_ia32_prolvq512_mask
__builtin_ia32_prord512_mask
V16iV16iiV16iUs
__builtin_ia32_prorq512_mask
V8LLiV8LLiiV8LLiUc
__builtin_ia32_prolvd128_mask
__builtin_ia32_prolvd256_mask
__builtin_ia32_prolvq128_mask
__builtin_ia32_prolvq256_mask
__builtin_ia32_prord128_mask
__builtin_ia32_prord256_mask
__builtin_ia32_prorq128_mask
__builtin_ia32_prorq256_mask
__builtin_ia32_prorvd512_mask
__builtin_ia32_prorvq512_mask
__builtin_ia32_prorvd128_mask
__builtin_ia32_prorvd256_mask
__builtin_ia32_prorvq128_mask
__builtin_ia32_prorvq256_mask
__builtin_ia32_psllv32hi
V32sV32sV32s
__builtin_ia32_psllw512
V32sV32sV8s
__builtin_ia32_psllwi512
V32sV32si
__builtin_ia32_psllv16hi
avx512bw,avx512vl
__builtin_ia32_psllv8hi
__builtin_ia32_pslldi512
V16iV16ii
__builtin_ia32_psllqi512
V8LLiV8LLii
__builtin_ia32_psrlv32hi
__builtin_ia32_psrlv16hi
__builtin_ia32_psrlv8hi
__builtin_ia32_psrldi512
__builtin_ia32_psrlqi512
__builtin_ia32_psrav32hi
__builtin_ia32_psrav16hi
__builtin_ia32_psrav8hi
__builtin_ia32_psravq128
__builtin_ia32_psravq256
__builtin_ia32_psraw512
__builtin_ia32_psrawi512
__builtin_ia32_psrlw512
__builtin_ia32_psrlwi512
__builtin_ia32_movdqa32load128_mask
__builtin_ia32_movdqa32load256_mask
__builtin_ia32_movdqa32load512_mask
V16iV16iC*V16iUs
__builtin_ia32_movdqa32store512_mask
vV16i*V16iUs
__builtin_ia32_movdqa64load512_mask
V8LLiV8LLiC*V8LLiUc
__builtin_ia32_movdqa64store512_mask
vV8LLi*V8LLiUc
__builtin_ia32_movdqa32store128_mask
__builtin_ia32_movdqa32store256_mask
__builtin_ia32_movdqa64load128_mask
V2LLiV2LLiC*V2LLiUc
__builtin_ia32_movdqa64load256_mask
V4LLiV4LLiC*V4LLiUc
__builtin_ia32_movdqa64store128_mask
__builtin_ia32_movdqa64store256_mask
__builtin_ia32_pbroadcastb512_gpr_mask
V64ccV64cULLi
__builtin_ia32_pbroadcastb128_gpr_mask
V16ccV16cUs
__builtin_ia32_pbroadcastb256_gpr_mask
V32ccV32cUi
__builtin_ia32_pbroadcastd128_gpr_mask
V4iiV4iUc
__builtin_ia32_pbroadcastd256_gpr_mask
V8iiV8iUc
__builtin_ia32_vpmadd52huq512_mask
__builtin_ia32_vpmadd52huq512_maskz
__builtin_ia32_vpmadd52luq512_mask
__builtin_ia32_vpmadd52luq512_maskz
__builtin_ia32_vpmadd52huq128_mask
avx512ifma,avx512vl
__builtin_ia32_vpmadd52huq128_maskz
__builtin_ia32_vpmadd52huq256_mask
__builtin_ia32_vpmadd52huq256_maskz
__builtin_ia32_vpmadd52luq128_mask
__builtin_ia32_vpmadd52luq128_maskz
__builtin_ia32_vpmadd52luq256_mask
__builtin_ia32_vpmadd52luq256_maskz
__builtin_ia32_vpermi2varqi512_mask
__builtin_ia32_vpermt2varqi512_mask
__builtin_ia32_vpermt2varqi512_maskz
__builtin_ia32_vpermi2varqi128_mask
V16cV16cV16cV16cUs
avx512vbmi,avx512vl
__builtin_ia32_vpermi2varqi256_mask
V32cV32cV32cV32cUi
__builtin_ia32_vpermt2varqi128_mask
__builtin_ia32_vpermt2varqi128_maskz
__builtin_ia32_vpermt2varqi256_mask
__builtin_ia32_vpermt2varqi256_maskz
__builtin_ia32_vcomisd
iV2dV2dIiIi
__builtin_ia32_vcomiss
iV4fV4fIiIi
__builtin_ia32_kunpckdi
ULLiULLiULLi
__builtin_ia32_kunpcksi
__builtin_ia32_loaddquhi512_mask
V32sV32s*V32sUi
__builtin_ia32_loaddquqi512_mask
V64cV64c*V64cULLi
__builtin_ia32_fixupimmpd512_mask
V8dV8dV8dV8LLiIiUcIi
__builtin_ia32_fixupimmpd512_maskz
__builtin_ia32_fixupimmps512_mask
V16fV16fV16fV16iIiUsIi
__builtin_ia32_fixupimmps512_maskz
__builtin_ia32_fixupimmsd_mask
V2dV2dV2dV2LLiIiUcIi
__builtin_ia32_fixupimmsd_maskz
__builtin_ia32_fixupimmss_mask
V4fV4fV4fV4iIiUcIi
__builtin_ia32_fixupimmss_maskz
__builtin_ia32_getexpsd128_round_mask
__builtin_ia32_getexpss128_round_mask
__builtin_ia32_getmantsd_round_mask
V2dV2dV2dIiV2dUcIi
__builtin_ia32_getmantss_round_mask
V4fV4fV4fIiV4fUcIi
__builtin_ia32_loaddquhi128_mask
V8sV8s*V8sUc
__builtin_ia32_loaddquhi256_mask
V16sV16s*V16sUs
__builtin_ia32_loaddquqi128_mask
V16cV16c*V16cUs
__builtin_ia32_loaddquqi256_mask
V32cV32c*V32cUi
__builtin_ia32_fixupimmpd128_mask
V2dV2dV2dV2LLiIiUc
__builtin_ia32_fixupimmpd128_maskz
__builtin_ia32_fixupimmpd256_mask
V4dV4dV4dV4LLiIiUc
__builtin_ia32_fixupimmpd256_maskz
__builtin_ia32_fixupimmps128_mask
V4fV4fV4fV4iIiUc
__builtin_ia32_fixupimmps128_maskz
__builtin_ia32_fixupimmps256_mask
V8fV8fV8fV8iIiUc
__builtin_ia32_fixupimmps256_maskz
__builtin_ia32_loadapd128_mask
__builtin_ia32_loadsd128_mask
V8dV8d*V8dUc
__builtin_ia32_loadapd256_mask
__builtin_ia32_loadaps128_mask
__builtin_ia32_loadss128_mask
V16fV16f*V16fUs
__builtin_ia32_loadaps256_mask
__builtin_ia32_loaddqudi128_mask
V2LLiV2LLi*V2LLiUc
__builtin_ia32_loaddqudi256_mask
__builtin_ia32_loaddqusi128_mask
__builtin_ia32_loaddqusi256_mask
__builtin_ia32_loadupd128_mask
__builtin_ia32_loadupd256_mask
__builtin_ia32_loadups128_mask
__builtin_ia32_loadups256_mask
__builtin_ia32_storedquhi512_mask
vV32s*V32sUi
__builtin_ia32_storedquqi512_mask
vV64c*V64cULLi
__builtin_ia32_storedquhi128_mask
vV8s*V8sUc
__builtin_ia32_storedquhi256_mask
vV16s*V16sUs
__builtin_ia32_storedquqi128_mask
vV16c*V16cUs
__builtin_ia32_storedquqi256_mask
vV32c*V32cUi
__builtin_ia32_storeapd128_mask
__builtin_ia32_storesd128_mask
__builtin_ia32_storeapd256_mask
__builtin_ia32_storeaps128_mask
__builtin_ia32_storess128_mask
__builtin_ia32_storeaps256_mask
__builtin_ia32_storedqudi128_mask
__builtin_ia32_storedqudi256_mask
__builtin_ia32_storedqusi128_mask
__builtin_ia32_storedqusi256_mask
__builtin_ia32_storeupd128_mask
__builtin_ia32_storeupd256_mask
__builtin_ia32_storeups128_mask
__builtin_ia32_storeups256_mask
__builtin_ia32_rcp14pd128_mask
__builtin_ia32_rcp14pd256_mask
__builtin_ia32_rcp14ps128_mask
__builtin_ia32_rcp14ps256_mask
__builtin_ia32_vplzcntd_128_mask
__builtin_ia32_vplzcntd_256_mask
__builtin_ia32_vplzcntq_128_mask
__builtin_ia32_vplzcntq_256_mask
__builtin_ia32_vcvtsd2si32
iV2dIi
__builtin_ia32_vcvtsd2usi32
UiV2dIi
__builtin_ia32_vcvtss2si32
iV4fIi
__builtin_ia32_vcvtss2usi32
UiV4fIi
__builtin_ia32_vcvttsd2si32
__builtin_ia32_vcvttsd2usi32
__builtin_ia32_vcvttss2si32
__builtin_ia32_vcvttss2usi32
__builtin_ia32_vpermi2vard512_mask
__builtin_ia32_vpermi2varpd512_mask
V8dV8dV8LLiV8dUc
__builtin_ia32_vpermi2varps512_mask
V16fV16fV16iV16fUs
__builtin_ia32_vpermi2varq512_mask
__builtin_ia32_vpermilvarpd512
V8dV8dV8LLi
__builtin_ia32_vpermilvarps512
V16fV16fV16i
__builtin_ia32_vpermt2vard512_maskz
__builtin_ia32_vpermt2varpd512_maskz
__builtin_ia32_vpermt2varps512_maskz
__builtin_ia32_vpermt2varq512_maskz
__builtin_ia32_ptestmb512
ULLiV64cV64cULLi
__builtin_ia32_ptestmw512
UiV32sV32sUi
__builtin_ia32_ptestnmb512
__builtin_ia32_ptestnmw512
__builtin_ia32_ptestmb128
UsV16cV16cUs
__builtin_ia32_ptestmb256
UiV32cV32cUi
__builtin_ia32_ptestmw128
UcV8sV8sUc
__builtin_ia32_ptestmw256
UsV16sV16sUs
__builtin_ia32_ptestnmb128
__builtin_ia32_ptestnmb256
__builtin_ia32_ptestnmw128
__builtin_ia32_ptestnmw256
__builtin_ia32_ptestmd128
UcV4iV4iUc
__builtin_ia32_ptestmd256
UcV8iV8iUc
__builtin_ia32_ptestmq128
UcV2LLiV2LLiUc
__builtin_ia32_ptestmq256
UcV4LLiV4LLiUc
__builtin_ia32_ptestnmd128
__builtin_ia32_ptestnmd256
__builtin_ia32_ptestnmq128
__builtin_ia32_ptestnmq256
__builtin_ia32_ptestnmd512
__builtin_ia32_ptestnmq512
__builtin_ia32_rndscalesd_round_mask
__builtin_ia32_rndscaless_round_mask
__builtin_ia32_scalefpd512_mask
__builtin_ia32_scalefps512_mask
__builtin_ia32_scalefsd_round_mask
__builtin_ia32_scalefss_round_mask
__builtin_ia32_psradi512
__builtin_ia32_psraqi512
__builtin_ia32_psraq128
__builtin_ia32_psraq256
__builtin_ia32_psraqi128
__builtin_ia32_psraqi256
__builtin_ia32_pslld512
V16iV16iV4i
__builtin_ia32_psllq512
V8LLiV8LLiV2LLi
__builtin_ia32_psllv16si
V16iV16iV16i
__builtin_ia32_psllv8di
V8LLiV8LLiV8LLi
__builtin_ia32_psrad512
__builtin_ia32_psraq512
__builtin_ia32_psrav16si
__builtin_ia32_psrav8di
__builtin_ia32_psrld512
__builtin_ia32_psrlq512
__builtin_ia32_psrlv16si
__builtin_ia32_psrlv8di
__builtin_ia32_pternlogd512_mask
V16iV16iV16iV16iIiUs
__builtin_ia32_pternlogd512_maskz
__builtin_ia32_pternlogq512_mask
V8LLiV8LLiV8LLiV8LLiIiUc
__builtin_ia32_pternlogq512_maskz
__builtin_ia32_pternlogd128_mask
V4iV4iV4iV4iIiUc
__builtin_ia32_pternlogd128_maskz
__builtin_ia32_pternlogd256_mask
V8iV8iV8iV8iIiUc
__builtin_ia32_pternlogd256_maskz
__builtin_ia32_pternlogq128_mask
V2LLiV2LLiV2LLiV2LLiIiUc
__builtin_ia32_pternlogq128_maskz
__builtin_ia32_pternlogq256_mask
V4LLiV4LLiV4LLiV4LLiIiUc
__builtin_ia32_pternlogq256_maskz
__builtin_ia32_shuf_f32x4_mask
V16fV16fV16fIiV16fUs
__builtin_ia32_shuf_f64x2_mask
V8dV8dV8dIiV8dUc
__builtin_ia32_shuf_i32x4_mask
V16iV16iV16iIiV16iUs
__builtin_ia32_shuf_i64x2_mask
V8LLiV8LLiV8LLiIiV8LLiUc
__builtin_ia32_shuf_f32x4_256_mask
__builtin_ia32_shuf_f64x2_256_mask
__builtin_ia32_shuf_i32x4_256_mask
V8iV8iV8iIiV8iUc
__builtin_ia32_shuf_i64x2_256_mask
V4LLiV4LLiV4LLiIiV4LLiUc
__builtin_ia32_sqrtsd_round_mask
__builtin_ia32_sqrtss_round_mask
__builtin_ia32_rsqrt14pd128_mask
__builtin_ia32_rsqrt14pd256_mask
__builtin_ia32_rsqrt14ps128_mask
__builtin_ia32_rsqrt14ps256_mask
__builtin_ia32_cvtb2mask512
ULLiV64c
__builtin_ia32_cvtmask2b512
V64cULLi
__builtin_ia32_cvtmask2w512
V32sUi
__builtin_ia32_cvtd2mask512
UsV16i
__builtin_ia32_cvtmask2d512
V16iUs
__builtin_ia32_cvtmask2q512
V8LLiUc
__builtin_ia32_cvtq2mask512
UcV8LLi
__builtin_ia32_cvtb2mask128
UsV16c
__builtin_ia32_cvtb2mask256
UiV32c
__builtin_ia32_cvtmask2b128
V16cUs
__builtin_ia32_cvtmask2b256
V32cUi
__builtin_ia32_cvtmask2w128
V8sUc
__builtin_ia32_cvtmask2w256
V16sUs
__builtin_ia32_cvtd2mask128
UcV4i
avx512dq,avx512vl
__builtin_ia32_cvtd2mask256
UcV8i
__builtin_ia32_cvtmask2d128
V4iUc
__builtin_ia32_cvtmask2d256
V8iUc
__builtin_ia32_cvtmask2q128
V2LLiUc
__builtin_ia32_cvtmask2q256
V4LLiUc
__builtin_ia32_cvtq2mask128
UcV2LLi
__builtin_ia32_cvtq2mask256
UcV4LLi
__builtin_ia32_broadcastmb512
__builtin_ia32_broadcastmw512
__builtin_ia32_broadcastmb128
__builtin_ia32_broadcastmb256
__builtin_ia32_broadcastmw128
V4iUs
__builtin_ia32_broadcastmw256
V8iUs
__builtin_ia32_broadcastf32x2_512_mask
V16fV4fV16fUs
__builtin_ia32_broadcasti32x2_512_mask
V16iV4iV16iUs
__builtin_ia32_broadcastf32x2_256_mask
V8fV4fV8fUc
__builtin_ia32_broadcasti32x2_128_mask
__builtin_ia32_broadcasti32x2_256_mask
V8iV4iV8iUc
__builtin_ia32_pbroadcastw512_gpr_mask
V32shV32sUi
__builtin_ia32_pbroadcastw256_gpr_mask
V16shV16sUs
__builtin_ia32_pbroadcastw128_gpr_mask
V8ssV8sUc
__builtin_ia32_pmovsdb512_mask
V16cV16iV16cUs
__builtin_ia32_pmovsdb512mem_mask
vV16c*V16iUs
__builtin_ia32_pmovswb512mem_mask
vV32c*V32sUi
__builtin_ia32_pmovsdw512_mask
V16sV16iV16sUs
__builtin_ia32_pmovsdw512mem_mask
vV16s*V16iUs
__builtin_ia32_pmovsqb512_mask
V16cV8LLiV16cUc
__builtin_ia32_pmovsqb512mem_mask
vV16c*V8LLiUc
__builtin_ia32_pmovsqd512_mask
V8iV8LLiV8iUc
__builtin_ia32_pmovsqd512mem_mask
vV8i*V8LLiUc
__builtin_ia32_pmovsqw512_mask
V8sV8LLiV8sUc
__builtin_ia32_pmovsqw512mem_mask
vV8s*V8LLiUc
__builtin_ia32_pmovsdb128_mask
V16cV4iV16cUc
__builtin_ia32_pmovsdb128mem_mask
vV16c*V4iUc
__builtin_ia32_pmovswb128mem_mask
vV16c*V8sUc
__builtin_ia32_pmovsdb256_mask
V16cV8iV16cUc
__builtin_ia32_pmovsdb256mem_mask
vV16c*V8iUc
__builtin_ia32_pmovswb256mem_mask
vV16c*V16sUs
__builtin_ia32_pmovsdw128_mask
V8sV4iV8sUc
__builtin_ia32_pmovsdw128mem_mask
vV8s*V4iUc
__builtin_ia32_pmovsdw256_mask
V8sV8iV8sUc
__builtin_ia32_pmovsdw256mem_mask
vV8s*V8iUc
__builtin_ia32_pmovsqb128_mask
V16cV2LLiV16cUc
__builtin_ia32_pmovsqb128mem_mask
vV16c*V2LLiUc
__builtin_ia32_pmovsqb256_mask
V16cV4LLiV16cUc
__builtin_ia32_pmovsqb256mem_mask
vV16c*V4LLiUc
__builtin_ia32_pmovsqd128_mask
V4iV2LLiV4iUc
__builtin_ia32_pmovsqd128mem_mask
vV4i*V2LLiUc
__builtin_ia32_pmovsqd256_mask
V4iV4LLiV4iUc
__builtin_ia32_pmovsqd256mem_mask
vV4i*V4LLiUc
__builtin_ia32_pmovsqw128_mask
V8sV2LLiV8sUc
__builtin_ia32_pmovsqw128mem_mask
vV8s*V2LLiUc
__builtin_ia32_pmovsqw256_mask
V8sV4LLiV8sUc
__builtin_ia32_pmovsqw256mem_mask
vV8s*V4LLiUc
__builtin_ia32_pmovusdb512_mask
__builtin_ia32_pmovusdb512mem_mask
__builtin_ia32_pmovuswb512mem_mask
__builtin_ia32_pmovusdw512_mask
__builtin_ia32_pmovusdw512mem_mask
__builtin_ia32_pmovusqb512_mask
__builtin_ia32_pmovusqb512mem_mask
__builtin_ia32_pmovusqd512_mask
__builtin_ia32_pmovusqd512mem_mask
__builtin_ia32_pmovusqw512_mask
__builtin_ia32_pmovusqw512mem_mask
__builtin_ia32_pmovusdb128_mask
__builtin_ia32_pmovusdb128mem_mask
__builtin_ia32_pmovuswb128mem_mask
__builtin_ia32_pmovusdb256_mask
__builtin_ia32_pmovusdb256mem_mask
__builtin_ia32_pmovuswb256mem_mask
__builtin_ia32_pmovusdw128_mask
__builtin_ia32_pmovusdw128mem_mask
__builtin_ia32_pmovusdw256_mask
__builtin_ia32_pmovusdw256mem_mask
__builtin_ia32_pmovusqb128_mask
__builtin_ia32_pmovusqb128mem_mask
__builtin_ia32_pmovusqb256_mask
__builtin_ia32_pmovusqb256mem_mask
__builtin_ia32_pmovusqd128_mask
__builtin_ia32_pmovusqd128mem_mask
__builtin_ia32_pmovusqd256_mask
__builtin_ia32_pmovusqd256mem_mask
__builtin_ia32_pmovusqw128_mask
__builtin_ia32_pmovusqw128mem_mask
__builtin_ia32_pmovusqw256_mask
__builtin_ia32_pmovusqw256mem_mask
__builtin_ia32_pmovdb512_mask
__builtin_ia32_pmovdb512mem_mask
__builtin_ia32_pmovwb512mem_mask
__builtin_ia32_pmovdw512_mask
__builtin_ia32_pmovdw512mem_mask
__builtin_ia32_pmovqb512_mask
__builtin_ia32_pmovqb512mem_mask
__builtin_ia32_pmovqd512_mask
__builtin_ia32_pmovqd512mem_mask
__builtin_ia32_pmovqw512_mask
__builtin_ia32_pmovqw512mem_mask
__builtin_ia32_pmovdb128_mask
__builtin_ia32_pmovwb128mem_mask
__builtin_ia32_pmovdb128mem_mask
__builtin_ia32_pmovdb256_mask
__builtin_ia32_pmovdb256mem_mask
__builtin_ia32_pmovwb256mem_mask
__builtin_ia32_pmovdw128_mask
__builtin_ia32_pmovdw128mem_mask
__builtin_ia32_pmovdw256_mask
__builtin_ia32_pmovdw256mem_mask
__builtin_ia32_pmovqb128_mask
__builtin_ia32_pmovqb128mem_mask
__builtin_ia32_pmovqb256_mask
__builtin_ia32_pmovqb256mem_mask
__builtin_ia32_pmovqd128_mask
__builtin_ia32_pmovqd128mem_mask
__builtin_ia32_pmovqd256_mask
__builtin_ia32_pmovqd256mem_mask
__builtin_ia32_pmovqw128_mask
__builtin_ia32_pmovqw128mem_mask
__builtin_ia32_pmovqw256_mask
__builtin_ia32_pmovqw256mem_mask
__builtin_ia32_getmantpd128_mask
V2dV2diV2dUc
__builtin_ia32_getmantpd256_mask
V4dV4diV4dUc
__builtin_ia32_getmantps128_mask
V4fV4fiV4fUc
__builtin_ia32_getmantps256_mask
V8fV8fiV8fUc
__builtin_ia32_getmantpd512_mask
V8dV8diV8dUcIi
__builtin_ia32_getmantps512_mask
V16fV16fiV16fUsIi
__builtin_ia32_getexppd512_mask
__builtin_ia32_getexpps512_mask
__builtin_ia32_vfmaddss3_mask
__builtin_ia32_vfmaddss3_maskz
__builtin_ia32_vfmaddss3_mask3
__builtin_ia32_vfmaddsd3_mask
__builtin_ia32_vfmaddsd3_maskz
__builtin_ia32_vfmaddsd3_mask3
__builtin_ia32_vfmsubsd3_mask3
__builtin_ia32_vfmsubss3_mask3
__builtin_ia32_vfnmsubsd3_mask3
__builtin_ia32_vfnmsubss3_mask3
__builtin_ia32_permvarhi512_mask
__builtin_ia32_permvardf512_mask
__builtin_ia32_permvardi512_mask
__builtin_ia32_permvarsf512_mask
__builtin_ia32_permvarsi512_mask
__builtin_ia32_permvarqi512_mask
__builtin_ia32_permvarqi128_mask
__builtin_ia32_permvarqi256_mask
__builtin_ia32_permvarhi128_mask
__builtin_ia32_permvarhi256_mask
__builtin_ia32_permvardf256_mask
__builtin_ia32_permvardi256_mask
__builtin_ia32_permvarsf256_mask
__builtin_ia32_permvarsi256_mask
__builtin_ia32_fpclasspd128_mask
UcV2dIiUc
__builtin_ia32_fpclasspd256_mask
UcV4dIiUc
__builtin_ia32_fpclassps128_mask
UcV4fIiUc
__builtin_ia32_fpclassps256_mask
UcV8fIiUc
__builtin_ia32_fpclassps512_mask
UsV16fIiUs
__builtin_ia32_fpclasspd512_mask
UcV8dIiUc
__builtin_ia32_fpclasssd_mask
__builtin_ia32_fpclassss_mask
__builtin_ia32_kandhi
__builtin_ia32_kandnhi
__builtin_ia32_korhi
__builtin_ia32_kortestchi
iUsUs
__builtin_ia32_kortestzhi
__builtin_ia32_kunpckhi
__builtin_ia32_kxnorhi
__builtin_ia32_kxorhi
__builtin_ia32_palignr512_mask
V64cV64cV64cIiV64cULLi
__builtin_ia32_dbpsadbw128_mask
V8sV16cV16cIiV8sUc
__builtin_ia32_dbpsadbw256_mask
V16sV32cV32cIiV16sUs
__builtin_ia32_dbpsadbw512_mask
V32sV64cV64cIiV32sUi
__builtin_ia32_psadbw512
V8LLiV64cV64c
__builtin_ia32_compressdf512_mask
__builtin_ia32_compressdi512_mask
__builtin_ia32_compresssf512_mask
__builtin_ia32_compresssi512_mask
__builtin_ia32_cmpsd_mask
UcV2dV2dIiUcIi
__builtin_ia32_cmpss_mask
UcV4fV4fIiUcIi
__builtin_ia32_expanddf512_mask
__builtin_ia32_expanddi512_mask
__builtin_ia32_expandloaddf512_mask
__builtin_ia32_expandloaddi512_mask
__builtin_ia32_expandloadsf512_mask
__builtin_ia32_expandloadsi512_mask
__builtin_ia32_expandsf512_mask
__builtin_ia32_expandsi512_mask
__builtin_ia32_cvtps2pd512_mask
V8dV8fV8dUcIi
__builtin_ia32_compressstoredf512_mask
__builtin_ia32_compressstoredi512_mask
__builtin_ia32_compressstoresf512_mask
__builtin_ia32_compressstoresi512_mask
__builtin_ia32_vcvtph2ps_mask
V4fV8sV4fUc
__builtin_ia32_vcvtph2ps256_mask
V8fV8sV8fUc
__builtin_ia32_vcvtps2ph_mask
V8sV4fIiV8sUc
__builtin_ia32_vcvtps2ph256_mask
V8sV8fIiV8sUc
__builtin_ia32_cvtw2mask512
UiV32s
__builtin_ia32_cvtw2mask128
UcV8s
__builtin_ia32_cvtw2mask256
UsV16s
__builtin_ia32_cvtsd2ss_round_mask
V4fV4fV2dV4fUcIi
__builtin_ia32_cvtsi2ss32
V4fV4fiIi
__builtin_ia32_cvtss2sd_round_mask
V2dV2dV4fV2dUcIi
__builtin_ia32_cvtusi2sd32
V2dV2dUi
__builtin_ia32_cvtusi2ss32
V4fV4fUiIi
__builtin_ia32_vpmultishiftqb512_mask
__builtin_ia32_vpmultishiftqb128_mask
__builtin_ia32_vpmultishiftqb256_mask
__builtin_ia32_selectb_128
V16cUsV16cV16c
__builtin_ia32_selectb_256
V32cUiV32cV32c
__builtin_ia32_selectb_512
V64cULLiV64cV64c
__builtin_ia32_selectw_128
V8sUcV8sV8s
__builtin_ia32_selectw_256
V16sUsV16sV16s
__builtin_ia32_selectw_512
V32sUiV32sV32s
__builtin_ia32_selectd_128
V4iUcV4iV4i
__builtin_ia32_selectd_256
V8iUcV8iV8i
__builtin_ia32_selectd_512
V16iUsV16iV16i
__builtin_ia32_selectq_128
V2LLiUcV2LLiV2LLi
__builtin_ia32_selectq_256
V4LLiUcV4LLiV4LLi
__builtin_ia32_selectq_512
V8LLiUcV8LLiV8LLi
__builtin_ia32_selectps_128
V4fUcV4fV4f
__builtin_ia32_selectps_256
V8fUcV8fV8f
__builtin_ia32_selectps_512
V16fUsV16fV16f
__builtin_ia32_selectpd_128
V2dUcV2dV2d
__builtin_ia32_selectpd_256
V4dUcV4dV4d
__builtin_ia32_selectpd_512
V8dUcV8dV8d
__builtin_ia32_monitorx
__builtin_ia32_mwaitx
__builtin_ia32_clzero
_ReadWriteBarrier
_ReadBarrier
_WriteBarrier
__emul
LLiii
__emulu
ULLiUiUi
_AddressOfReturnAddress
__stosb
vUc*Ucz
__int2c
__ud2
__readfsbyte
UcUNi
__readfsword
UsUNi
__readfsdword
UNiUNi
__readfsqword
ULLiUNi
__readgsbyte
__readgsword
__readgsdword
__readgsqword
__mulh
LLiLLiLLi
__umulh
_mul128
LLiLLiLLiLLi*
_umul128
ULLiULLiULLiULLi*
__faststorefence
__builtin_ia32_readeflags_u64
__builtin_ia32_writeeflags_u64
vULLi
__builtin_ia32_cvtss2si64
LLiV4f
__builtin_ia32_cvttss2si64
__builtin_ia32_cvtsd2si64
LLiV2d
__builtin_ia32_cvttsd2si64
__builtin_ia32_crc32di
__builtin_ia32_rdfsbase64
__builtin_ia32_rdgsbase64
__builtin_ia32_wrfsbase64
__builtin_ia32_wrgsbase64
__builtin_ia32_fxrstor64
__builtin_ia32_fxsave64
__builtin_ia32_xsave64
__builtin_ia32_xrstor64
__builtin_ia32_xsaveopt64
__builtin_ia32_xrstors64
__builtin_ia32_xsavec64
__builtin_ia32_xsaves64
__builtin_ia32_addcarryx_u64
UcUcULLiULLiULLi*
__builtin_ia32_addcarry_u64
__builtin_ia32_subborrow_u64
__builtin_ia32_rdseed64_step
__builtin_ia32_bextr_u64
__builtin_ia32_bzhi_di
__builtin_ia32_pdep_di
__builtin_ia32_pext_di
__builtin_ia32_bextri_u64
ULLiULLiIULLi
__builtin_ia32_lwpins64
UcULLiUiUi
__builtin_ia32_lwpval64
vULLiUiUi
__builtin_ia32_pbroadcastq512_gpr_mask
V8LLiLLiV8LLiUc
__builtin_ia32_pbroadcastq128_gpr_mask
V2LLiULLiV2LLiUc
__builtin_ia32_pbroadcastq256_gpr_mask
V4LLiULLiV4LLiUc
__builtin_ia32_vcvtsd2si64
LLiV2dIi
__builtin_ia32_vcvtsd2usi64
ULLiV2dIi
__builtin_ia32_vcvtss2si64
LLiV4fIi
__builtin_ia32_vcvtss2usi64
ULLiV4fIi
__builtin_ia32_vcvttsd2si64
__builtin_ia32_vcvttsd2usi64
__builtin_ia32_vcvttss2si64
__builtin_ia32_vcvttss2usi64
__builtin_ia32_cvtsi2sd64
V2dV2dLLiIi
__builtin_ia32_cvtsi2ss64
V4fV4fLLiIi
__builtin_ia32_cvtusi2sd64
V2dV2dULLiIi
__builtin_ia32_cvtusi2ss64
V4fV4fULLiIi
__amd64__
__amd64
__x86_64
__x86_64__
x86_64h
__x86_64h
__x86_64h__
__tune_i386__
__pentium_mmx__
__tune_pentium_mmx__
__tune_pentium3__
__tune_pentium2__
__tune_i686__
__tune_pentiumpro__
__i686
__i686__
__pentiumpro
__pentiumpro__
__tune_lakemont__
__k6_2__
__tune_k6_2__
__k6_3__
__tune_k6_3__
__athlon_sse__
__tune_athlon_sse__
__NO_MATH_INLINES
__AES__
__PCLMUL__
__LZCNT__
__RDRND__
__FSGSBASE__
__BMI__
__BMI2__
__POPCNT__
__RTM__
__PRFCHW__
__RDSEED__
__ADX__
__TBM__
__LWP__
__MWAITX__
__XOP__
__FMA4__
__SSE4A__
__FMA__
__F16C__
__AVX512CD__
__AVX512VPOPCNTDQ__
__AVX512ER__
__AVX512PF__
__AVX512DQ__
__AVX512BW__
__AVX512VL__
__AVX512VBMI__
__AVX512IFMA__
__SHA__
__FXSR__
__XSAVE__
__XSAVEOPT__
__XSAVEC__
__XSAVES__
__PKU__
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16
__CLFLUSHOPT__
__CLWB__
__MPX__
__SGX__
__PREFETCHWT1__
__CLZERO__
__AVX512F__
__AVX2__
__AVX__
__SSE4_2__
__SSE4_1__
__SSSE3__
__SSE3__
__SSE2__
__SSE2_MATH__
__SSE__
__SSE_MATH__
_M_IX86_FP
__3dNOW_A__
__3dNOW__
__MMX__
__SIZEOF_FLOAT128__
__native_client__
__HAIKU__
_WIN32
_WIN64
_CPPRTTI
_CPPUNWIND
__BOOL_DEFINED
_CHAR_UNSIGNED
_MSC_VER
_MSC_FULL_VER
_MSC_BUILD
_HAS_CHAR16_T_LANGUAGE_SUPPORT
_MSVC_LANG
201403L
201402L
_MSC_EXTENSIONS
_RVALUE_REFERENCES_V2_SUPPORTED
_RVALUE_REFERENCES_SUPPORTED
_NATIVE_NULLPTR_SUPPORTED
_INTEGRAL_MAX_BITS
_M_X64
_M_AMD64
WIN64
__MINGW64__
__MSVCRT__
__MINGW32__
__SEH__
__declspec(a)
__attribute__((a))
cdecl
stdcall
fastcall
thiscall
pascal
__attribute__((__
__))
__CYGWIN__
__CYGWIN64__
__svr4__
__SVR4
_XOPEN_SOURCE
__C99FEATURES__
_LARGEFILE_SOURCE
_LARGEFILE64_SOURCE
__EXTENSIONS__
__FreeBSD_kernel__
__GLIBC__
__Fuchsia__
__STDC_MB_MIGHT_NEQ_WC__
__Bitrig__
__ARM_DWARF_EH__
__OpenBSD__
__NetBSD__
__unix__
__DragonFly__
__DragonFly_cc_version
100001
__CloudABI__
__STDC_ISO_10646__
201206L
__STDC_UTF_16__
__STDC_UTF_32__
__Ananas__
__APPLE_CC__
6000
__APPLE__
__STDC_NO_THREADS__
OBJC_NEW_PROPERTIES
_FORTIFY_SOURCE
clang
__apple_build_version__
__weak
__attribute__((objc_gc(weak)))
__strong
__unsafe_unretained
__STATIC__
__DYNAMIC__
win32
__ENVIRONMENT_TV_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_WATCH_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_BRIDGE_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
__MACH__
e-m:w-i64:64-f80:128-n8:16:32:64-S128
e-m:e-i64:64-f80:128-n8:16:32:64-S128
e-m:e-p:32:32-i64:64-f80:128-n8:16:32:64-S128
__iamcu
__iamcu__
__INTEL__
__rtems__
_M_IX86
WIN32
WINNT
_X86_
e-m:e-p:32:32-i64:64-f80:32-n8:16:32-a:0:32-S32
__CYGWIN32__
__minix
_EM_WSIZE
_EM_PSIZE
_EM_SSIZE
_EM_LSIZE
_EM_FSIZE
_EM_DSIZE
tcele
__TCE__
__TCE_V1__
__TCELE__
__TCELE_V1__
systemz
arch8
arch9
arch10
arch11
arch12
+transactional-execution
+vector
E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-v128:64-a:8:16-n32:64
zEC12
z196
vector
transactional-execution
vector-enhancements-1
__builtin_tbegin
__builtin_tbegin_nofloat
__builtin_tbeginc
__builtin_tabort
__builtin_tend
__builtin_tx_nesting_depth
__builtin_tx_assist
__builtin_non_tx_store
vULi*ULi
__builtin_s390_lcbb
UivC*Ii
__builtin_s390_vlbb
V16ScvC*Ii
__builtin_s390_vll
V16ScUivC*
__builtin_s390_vstl
vV16ScUiv*
__builtin_s390_vperm
V16UcV16UcV16UcV16Uc
__builtin_s390_vpdi
V2ULLiV2ULLiV2ULLiIi
__builtin_s390_vpksh
V16ScV8SsV8Ss
__builtin_s390_vpkshs
V16ScV8SsV8Ssi*
__builtin_s390_vpksf
V8SsV4SiV4Si
__builtin_s390_vpksfs
V8SsV4SiV4Sii*
__builtin_s390_vpksg
V4SiV2SLLiV2SLLi
__builtin_s390_vpksgs
V4SiV2SLLiV2SLLii*
__builtin_s390_vpklsh
V16UcV8UsV8Us
__builtin_s390_vpklshs
V16UcV8UsV8Usi*
__builtin_s390_vpklsf
V8UsV4UiV4Ui
__builtin_s390_vpklsfs
V8UsV4UiV4Uii*
__builtin_s390_vpklsg
V4UiV2ULLiV2ULLi
__builtin_s390_vpklsgs
V4UiV2ULLiV2ULLii*
__builtin_s390_vuphb
V8SsV16Sc
__builtin_s390_vuphh
V4SiV8Ss
__builtin_s390_vuphf
V2SLLiV4Si
__builtin_s390_vuplb
__builtin_s390_vuplhw
__builtin_s390_vuplf
__builtin_s390_vuplhb
V8UsV16Uc
__builtin_s390_vuplhh
V4UiV8Us
__builtin_s390_vuplhf
V2ULLiV4Ui
__builtin_s390_vupllb
__builtin_s390_vupllh
__builtin_s390_vupllf
__builtin_s390_vaq
V16UcV16UcV16Uc
__builtin_s390_vacq
__builtin_s390_vaccb
__builtin_s390_vacch
V8UsV8UsV8Us
__builtin_s390_vaccf
V4UiV4UiV4Ui
__builtin_s390_vaccg
V2ULLiV2ULLiV2ULLi
__builtin_s390_vaccq
__builtin_s390_vacccq
__builtin_s390_vavgb
V16ScV16ScV16Sc
__builtin_s390_vavgh
V8SsV8SsV8Ss
__builtin_s390_vavgf
V4SiV4SiV4Si
__builtin_s390_vavgg
V2SLLiV2SLLiV2SLLi
__builtin_s390_vavglb
__builtin_s390_vavglh
__builtin_s390_vavglf
__builtin_s390_vavglg
__builtin_s390_vceqbs
V16ScV16ScV16Sci*
__builtin_s390_vceqhs
V8SsV8SsV8Ssi*
__builtin_s390_vceqfs
V4SiV4SiV4Sii*
__builtin_s390_vceqgs
V2SLLiV2SLLiV2SLLii*
__builtin_s390_vchbs
__builtin_s390_vchhs
__builtin_s390_vchfs
__builtin_s390_vchgs
__builtin_s390_vchlbs
V16ScV16UcV16Uci*
__builtin_s390_vchlhs
V8SsV8UsV8Usi*
__builtin_s390_vchlfs
V4SiV4UiV4Uii*
__builtin_s390_vchlgs
V2SLLiV2ULLiV2ULLii*
__builtin_s390_vcksm
__builtin_s390_vclzb
V16UcV16Uc
__builtin_s390_vclzh
V8UsV8Us
__builtin_s390_vclzf
V4UiV4Ui
__builtin_s390_vclzg
V2ULLiV2ULLi
__builtin_s390_vctzb
__builtin_s390_vctzh
__builtin_s390_vctzf
__builtin_s390_vctzg
__builtin_s390_verimb
V16UcV16UcV16UcV16UcIi
__builtin_s390_verimh
V8UsV8UsV8UsV8UsIi
__builtin_s390_verimf
V4UiV4UiV4UiV4UiIi
__builtin_s390_verimg
V2ULLiV2ULLiV2ULLiV2ULLiIi
__builtin_s390_verllb
V16UcV16UcUi
__builtin_s390_verllh
V8UsV8UsUi
__builtin_s390_verllf
V4UiV4UiUi
__builtin_s390_verllg
V2ULLiV2ULLiUi
__builtin_s390_verllvb
__builtin_s390_verllvh
__builtin_s390_verllvf
__builtin_s390_verllvg
__builtin_s390_vgfmb
V8UsV16UcV16Uc
__builtin_s390_vgfmh
V4UiV8UsV8Us
__builtin_s390_vgfmf
V2ULLiV4UiV4Ui
__builtin_s390_vgfmg
V16UcV2ULLiV2ULLi
__builtin_s390_vgfmab
V8UsV16UcV16UcV8Us
__builtin_s390_vgfmah
V4UiV8UsV8UsV4Ui
__builtin_s390_vgfmaf
V2ULLiV4UiV4UiV2ULLi
__builtin_s390_vgfmag
V16UcV2ULLiV2ULLiV16Uc
__builtin_s390_vmahb
V16ScV16ScV16ScV16Sc
__builtin_s390_vmahh
V8SsV8SsV8SsV8Ss
__builtin_s390_vmahf
V4SiV4SiV4SiV4Si
__builtin_s390_vmalhb
__builtin_s390_vmalhh
V8UsV8UsV8UsV8Us
__builtin_s390_vmalhf
V4UiV4UiV4UiV4Ui
__builtin_s390_vmaeb
V8SsV16ScV16ScV8Ss
__builtin_s390_vmaeh
V4SiV8SsV8SsV4Si
__builtin_s390_vmaef
V2SLLiV4SiV4SiV2SLLi
__builtin_s390_vmaleb
__builtin_s390_vmaleh
__builtin_s390_vmalef
__builtin_s390_vmaob
__builtin_s390_vmaoh
__builtin_s390_vmaof
__builtin_s390_vmalob
__builtin_s390_vmaloh
__builtin_s390_vmalof
__builtin_s390_vmhb
__builtin_s390_vmhh
__builtin_s390_vmhf
__builtin_s390_vmlhb
__builtin_s390_vmlhh
__builtin_s390_vmlhf
__builtin_s390_vmeb
V8SsV16ScV16Sc
__builtin_s390_vmeh
V4SiV8SsV8Ss
__builtin_s390_vmef
V2SLLiV4SiV4Si
__builtin_s390_vmleb
__builtin_s390_vmleh
__builtin_s390_vmlef
__builtin_s390_vmob
__builtin_s390_vmoh
__builtin_s390_vmof
__builtin_s390_vmlob
__builtin_s390_vmloh
__builtin_s390_vmlof
__builtin_s390_vpopctb
__builtin_s390_vpopcth
__builtin_s390_vpopctf
__builtin_s390_vpopctg
__builtin_s390_vsq
__builtin_s390_vsbcbiq
__builtin_s390_vsbiq
__builtin_s390_vscbib
__builtin_s390_vscbih
__builtin_s390_vscbif
__builtin_s390_vscbig
__builtin_s390_vscbiq
__builtin_s390_vsl
__builtin_s390_vslb
__builtin_s390_vsldb
V16UcV16UcV16UcIi
__builtin_s390_vsra
__builtin_s390_vsrab
__builtin_s390_vsrl
__builtin_s390_vsrlb
__builtin_s390_vsumb
V4UiV16UcV16Uc
__builtin_s390_vsumh
__builtin_s390_vsumgh
V2ULLiV8UsV8Us
__builtin_s390_vsumgf
__builtin_s390_vsumqf
V16UcV4UiV4Ui
__builtin_s390_vsumqg
__builtin_s390_vtm
iV16UcV16Uc
__builtin_s390_vfaeb
__builtin_s390_vfaebs
V16UcV16UcV16UcIii*
__builtin_s390_vfaeh
V8UsV8UsV8UsIi
__builtin_s390_vfaehs
V8UsV8UsV8UsIii*
__builtin_s390_vfaef
V4UiV4UiV4UiIi
__builtin_s390_vfaefs
V4UiV4UiV4UiIii*
__builtin_s390_vfaezb
__builtin_s390_vfaezbs
__builtin_s390_vfaezh
__builtin_s390_vfaezhs
__builtin_s390_vfaezf
__builtin_s390_vfaezfs
__builtin_s390_vfeeb
__builtin_s390_vfeebs
V16UcV16UcV16Uci*
__builtin_s390_vfeeh
__builtin_s390_vfeehs
V8UsV8UsV8Usi*
__builtin_s390_vfeef
__builtin_s390_vfeefs
V4UiV4UiV4Uii*
__builtin_s390_vfeezb
__builtin_s390_vfeezbs
__builtin_s390_vfeezh
__builtin_s390_vfeezhs
__builtin_s390_vfeezf
__builtin_s390_vfeezfs
__builtin_s390_vfeneb
__builtin_s390_vfenebs
__builtin_s390_vfeneh
__builtin_s390_vfenehs
__builtin_s390_vfenef
__builtin_s390_vfenefs
__builtin_s390_vfenezb
__builtin_s390_vfenezbs
__builtin_s390_vfenezh
__builtin_s390_vfenezhs
__builtin_s390_vfenezf
__builtin_s390_vfenezfs
__builtin_s390_vistrb
__builtin_s390_vistrbs
V16UcV16Uci*
__builtin_s390_vistrh
__builtin_s390_vistrhs
V8UsV8Usi*
__builtin_s390_vistrf
__builtin_s390_vistrfs
V4UiV4Uii*
__builtin_s390_vstrcb
__builtin_s390_vstrcbs
V16UcV16UcV16UcV16UcIii*
__builtin_s390_vstrch
__builtin_s390_vstrchs
V8UsV8UsV8UsV8UsIii*
__builtin_s390_vstrcf
__builtin_s390_vstrcfs
V4UiV4UiV4UiV4UiIii*
__builtin_s390_vstrczb
__builtin_s390_vstrczbs
__builtin_s390_vstrczh
__builtin_s390_vstrczhs
__builtin_s390_vstrczf
__builtin_s390_vstrczfs
__builtin_s390_vfcedbs
V2SLLiV2dV2di*
__builtin_s390_vfchdbs
__builtin_s390_vfchedbs
__builtin_s390_vfidb
V2dV2dIiIi
__builtin_s390_vflndb
__builtin_s390_vflpdb
__builtin_s390_vfmadb
__builtin_s390_vfmsdb
__builtin_s390_vfsqdb
__builtin_s390_vftcidb
V2SLLiV2dIii*
__builtin_s390_vlrl
__builtin_s390_vstrl
__builtin_s390_vbperm
V2ULLiV16UcV16Uc
__builtin_s390_vmslg
V16UcV2ULLiV2ULLiV16UcIi
__builtin_s390_vfmaxdb
__builtin_s390_vfmindb
__builtin_s390_vfnmadb
__builtin_s390_vfnmsdb
__builtin_s390_vfcesbs
V4SiV4fV4fi*
__builtin_s390_vfchsbs
__builtin_s390_vfchesbs
__builtin_s390_vfisb
V4fV4fIiIi
__builtin_s390_vfmaxsb
__builtin_s390_vfminsb
__builtin_s390_vflnsb
__builtin_s390_vflpsb
__builtin_s390_vfmasb
__builtin_s390_vfmssb
__builtin_s390_vfnmasb
__builtin_s390_vfnmssb
__builtin_s390_vfsqsb
__builtin_s390_vftcisb
V4SiV4fIii*
__s390__
__s390x__
__zarch__
__LONG_DOUBLE_128__
__ARCH__
__HTM__
__VX__
__VEC__
10302
E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-a:8:16-n32:64
sparc
supersparc
sparclite
f934
hypersparc
sparclite86x
sparclet
tsc701
ultrasparc
ultrasparc3
niagara
niagara2
niagara3
niagara4
ma2100
ma2150
ma2450
myriad2
myriad2.1
myriad2.2
leon2
at697e
at697f
leon3
ut699
gr712rc
leon4
gr740
__sparcv9
__arch64__
__sparc64__
__sparc_v9__
__sparcv9__
SOFT_FLOAT
__sparcv8
__sparcv8__
__sparc_v8__
__leon__
__ma2150
__ma2450
__ma2100
__myriad2__
__myriad2
rv610
rv620
rv630
rv635
rs780
rs880
rv670
rv710
rv730
rv740
rv770
palm
cedar
sumo
sumo2
redwood
juniper
hemlock
cypress
barts
turks
caicos
cayman
aruba
v100
v101
v102
v103
v104
v105
v106
v107
v108
v109
v110
v111
v112
v113
v114
v115
v116
v117
v118
v119
v120
v121
v122
v123
v124
v125
v126
v127
v128
v129
v130
v131
v132
v133
v134
v135
v136
v137
v138
v139
v140
v141
v142
v143
v144
v145
v146
v147
v148
v149
v150
v151
v152
v153
v154
v155
v156
v157
v158
v159
v160
v161
v162
v163
v164
v165
v166
v167
v168
v169
v170
v171
v172
v173
v174
v175
v176
v177
v178
v179
v180
v181
v182
v183
v184
v185
v186
v187
v188
v189
v190
v191
v192
v193
v194
v195
v196
v197
v198
v199
v200
v201
v202
v203
v204
v205
v206
v207
v208
v209
v210
v211
v212
v213
v214
v215
v216
v217
v218
v219
v220
v221
v222
v223
v224
v225
v226
v227
v228
v229
v230
v231
v232
v233
v234
v235
v236
v237
v238
v239
v240
v241
v242
v243
v244
v245
v246
v247
v248
v249
v250
v251
v252
v253
v254
v255
s100
s101
s102
s103
s104
s105
s106
s107
s108
s109
s110
s111
s112
s113
s114
s115
s116
s117
s118
s119
s120
s121
s122
s123
s124
s125
s126
s127
flat_scratch
exec_lo
exec_hi
vcc_lo
vcc_hi
flat_scratch_lo
flat_scratch_hi
cl_clang_storage_class_specifiers
cl_khr_icd
cl_khr_fp64
cl_khr_byte_addressable_store
cl_khr_global_int32_base_atomics
cl_khr_global_int32_extended_atomics
cl_khr_local_int32_base_atomics
cl_khr_local_int32_extended_atomics
cl_khr_fp16
cl_khr_int64_base_atomics
cl_khr_int64_extended_atomics
cl_khr_mipmap_image
cl_khr_subgroups
cl_khr_3d_image_writes
cl_amd_media_ops
cl_amd_media_ops2
tahiti
pitcairn
verde
oland
hainan
bonaire
kabini
kaveri
hawaii
mullins
gfx700
gfx701
gfx702
tonga
iceland
carrizo
fiji
stoney
polaris10
polaris11
gfx800
gfx801
gfx802
gfx803
gfx804
gfx810
gfx900
gfx901
gfx9-insts
s-memrealtime
16-bit-insts
fp64
+fp32-denormals
-fp32-denormals
+fp64-fp16-denormals
-fp64-fp16-denormals
fp32-denormals
__builtin_amdgcn_kernarg_segment_ptr
Uc*2
__builtin_amdgcn_implicitarg_ptr
__builtin_amdgcn_workgroup_id_x
__builtin_amdgcn_workgroup_id_y
__builtin_amdgcn_workgroup_id_z
__builtin_amdgcn_workitem_id_x
__builtin_amdgcn_workitem_id_y
__builtin_amdgcn_workitem_id_z
__builtin_amdgcn_s_getreg
UiIi
__builtin_amdgcn_s_getpc
__builtin_amdgcn_s_waitcnt
__builtin_amdgcn_s_sendmsg
vIiUi
__builtin_amdgcn_s_sendmsghalt
__builtin_amdgcn_s_barrier
__builtin_amdgcn_wave_barrier
__builtin_amdgcn_s_dcache_inv
__builtin_amdgcn_buffer_wbinvl1
__builtin_amdgcn_div_scale
dddbb*
__builtin_amdgcn_div_scalef
fffbb*
__builtin_amdgcn_div_fmas
ddddb
__builtin_amdgcn_div_fmasf
ffffb
__builtin_amdgcn_div_fixup
dddd
__builtin_amdgcn_div_fixupf
ffff
__builtin_amdgcn_trig_preop
__builtin_amdgcn_trig_preopf
__builtin_amdgcn_rcp
__builtin_amdgcn_rcpf
__builtin_amdgcn_rsq
__builtin_amdgcn_rsqf
__builtin_amdgcn_rsq_clamp
__builtin_amdgcn_rsq_clampf
__builtin_amdgcn_sinf
__builtin_amdgcn_cosf
__builtin_amdgcn_log_clampf
__builtin_amdgcn_ldexp
__builtin_amdgcn_ldexpf
__builtin_amdgcn_frexp_mant
__builtin_amdgcn_frexp_mantf
__builtin_amdgcn_frexp_exp
__builtin_amdgcn_frexp_expf
__builtin_amdgcn_fract
__builtin_amdgcn_fractf
__builtin_amdgcn_lerp
__builtin_amdgcn_class
__builtin_amdgcn_classf
__builtin_amdgcn_cubeid
__builtin_amdgcn_cubesc
__builtin_amdgcn_cubetc
__builtin_amdgcn_cubema
__builtin_amdgcn_s_memtime
__builtin_amdgcn_s_sleep
__builtin_amdgcn_s_incperflevel
__builtin_amdgcn_s_decperflevel
__builtin_amdgcn_uicmp
LUiUiUiIi
__builtin_amdgcn_uicmpl
LUiLUiLUiIi
__builtin_amdgcn_sicmp
LUiiiIi
__builtin_amdgcn_sicmpl
LUiLiLiIi
__builtin_amdgcn_fcmp
LUiddIi
__builtin_amdgcn_fcmpf
LUiffIi
__builtin_amdgcn_ds_swizzle
__builtin_amdgcn_ds_permute
__builtin_amdgcn_ds_bpermute
__builtin_amdgcn_readfirstlane
__builtin_amdgcn_readlane
__builtin_amdgcn_fmed3f
__builtin_amdgcn_div_fixuph
hhhh
__builtin_amdgcn_rcph
__builtin_amdgcn_rsqh
__builtin_amdgcn_sinh
__builtin_amdgcn_cosh
__builtin_amdgcn_ldexph
__builtin_amdgcn_frexp_manth
__builtin_amdgcn_frexp_exph
__builtin_amdgcn_fracth
__builtin_amdgcn_classh
__builtin_amdgcn_s_memrealtime
__builtin_amdgcn_mov_dpp
iiIiIiIiIb
__builtin_amdgcn_fmed3h
__builtin_amdgcn_read_exec
__builtin_r600_implicitarg_ptr
Uc*7
__builtin_r600_read_tgid_x
__builtin_r600_read_tgid_y
__builtin_r600_read_tgid_z
__builtin_r600_read_tidig_x
__builtin_r600_read_tidig_y
__builtin_r600_read_tidig_z
__builtin_r600_recipsqrt_ieee
__builtin_r600_recipsqrt_ieeef
__AMDGCN__
__R600__
__HAS_FMAF__
__HAS_LDEXPF__
__HAS_FP64__
e-p:32:32-i64:64-v16:16-v32:32-n16:32:64
e-i64:64-v16:16-v32:32-n16:32:64
cl_khr_gl_sharing
nvptx
satom
__nvvm_read_ptx_sreg_tid_x
__nvvm_read_ptx_sreg_tid_y
__nvvm_read_ptx_sreg_tid_z
__nvvm_read_ptx_sreg_tid_w
__nvvm_read_ptx_sreg_ntid_x
__nvvm_read_ptx_sreg_ntid_y
__nvvm_read_ptx_sreg_ntid_z
__nvvm_read_ptx_sreg_ntid_w
__nvvm_read_ptx_sreg_ctaid_x
__nvvm_read_ptx_sreg_ctaid_y
__nvvm_read_ptx_sreg_ctaid_z
__nvvm_read_ptx_sreg_ctaid_w
__nvvm_read_ptx_sreg_nctaid_x
__nvvm_read_ptx_sreg_nctaid_y
__nvvm_read_ptx_sreg_nctaid_z
__nvvm_read_ptx_sreg_nctaid_w
__nvvm_read_ptx_sreg_laneid
__nvvm_read_ptx_sreg_warpid
__nvvm_read_ptx_sreg_nwarpid
__nvvm_read_ptx_sreg_smid
__nvvm_read_ptx_sreg_nsmid
__nvvm_read_ptx_sreg_gridid
__nvvm_read_ptx_sreg_lanemask_eq
__nvvm_read_ptx_sreg_lanemask_le
__nvvm_read_ptx_sreg_lanemask_lt
__nvvm_read_ptx_sreg_lanemask_ge
__nvvm_read_ptx_sreg_lanemask_gt
__nvvm_read_ptx_sreg_clock
__nvvm_read_ptx_sreg_clock64
__nvvm_read_ptx_sreg_pm0
__nvvm_read_ptx_sreg_pm1
__nvvm_read_ptx_sreg_pm2
__nvvm_read_ptx_sreg_pm3
__nvvm_prmt
__nvvm_fmax_ftz_f
__nvvm_fmax_f
__nvvm_fmin_ftz_f
__nvvm_fmin_f
__nvvm_fmax_d
__nvvm_fmin_d
__nvvm_mulhi_i
__nvvm_mulhi_ui
__nvvm_mulhi_ll
__nvvm_mulhi_ull
__nvvm_mul_rn_ftz_f
__nvvm_mul_rn_f
__nvvm_mul_rz_ftz_f
__nvvm_mul_rz_f
__nvvm_mul_rm_ftz_f
__nvvm_mul_rm_f
__nvvm_mul_rp_ftz_f
__nvvm_mul_rp_f
__nvvm_mul_rn_d
__nvvm_mul_rz_d
__nvvm_mul_rm_d
__nvvm_mul_rp_d
__nvvm_mul24_i
__nvvm_mul24_ui
__nvvm_div_approx_ftz_f
__nvvm_div_approx_f
__nvvm_div_rn_ftz_f
__nvvm_div_rn_f
__nvvm_div_rz_ftz_f
__nvvm_div_rz_f
__nvvm_div_rm_ftz_f
__nvvm_div_rm_f
__nvvm_div_rp_ftz_f
__nvvm_div_rp_f
__nvvm_div_rn_d
__nvvm_div_rz_d
__nvvm_div_rm_d
__nvvm_div_rp_d
__nvvm_sad_i
__nvvm_sad_ui
__nvvm_floor_ftz_f
__nvvm_floor_f
__nvvm_floor_d
__nvvm_ceil_ftz_f
__nvvm_ceil_f
__nvvm_ceil_d
__nvvm_fabs_ftz_f
__nvvm_fabs_f
__nvvm_fabs_d
__nvvm_round_ftz_f
__nvvm_round_f
__nvvm_round_d
__nvvm_trunc_ftz_f
__nvvm_trunc_f
__nvvm_trunc_d
__nvvm_saturate_ftz_f
__nvvm_saturate_f
__nvvm_saturate_d
__nvvm_ex2_approx_ftz_f
__nvvm_ex2_approx_f
__nvvm_ex2_approx_d
__nvvm_lg2_approx_ftz_f
__nvvm_lg2_approx_f
__nvvm_lg2_approx_d
__nvvm_sin_approx_ftz_f
__nvvm_sin_approx_f
__nvvm_cos_approx_ftz_f
__nvvm_cos_approx_f
__nvvm_fma_rn_ftz_f
__nvvm_fma_rn_f
__nvvm_fma_rz_ftz_f
__nvvm_fma_rz_f
__nvvm_fma_rm_ftz_f
__nvvm_fma_rm_f
__nvvm_fma_rp_ftz_f
__nvvm_fma_rp_f
__nvvm_fma_rn_d
__nvvm_fma_rz_d
__nvvm_fma_rm_d
__nvvm_fma_rp_d
__nvvm_rcp_rn_ftz_f
__nvvm_rcp_rn_f
__nvvm_rcp_rz_ftz_f
__nvvm_rcp_rz_f
__nvvm_rcp_rm_ftz_f
__nvvm_rcp_rm_f
__nvvm_rcp_rp_ftz_f
__nvvm_rcp_rp_f
__nvvm_rcp_rn_d
__nvvm_rcp_rz_d
__nvvm_rcp_rm_d
__nvvm_rcp_rp_d
__nvvm_rcp_approx_ftz_d
__nvvm_sqrt_rn_ftz_f
__nvvm_sqrt_rn_f
__nvvm_sqrt_rz_ftz_f
__nvvm_sqrt_rz_f
__nvvm_sqrt_rm_ftz_f
__nvvm_sqrt_rm_f
__nvvm_sqrt_rp_ftz_f
__nvvm_sqrt_rp_f
__nvvm_sqrt_approx_ftz_f
__nvvm_sqrt_approx_f
__nvvm_sqrt_rn_d
__nvvm_sqrt_rz_d
__nvvm_sqrt_rm_d
__nvvm_sqrt_rp_d
__nvvm_rsqrt_approx_ftz_f
__nvvm_rsqrt_approx_f
__nvvm_rsqrt_approx_d
__nvvm_add_rn_ftz_f
__nvvm_add_rn_f
__nvvm_add_rz_ftz_f
__nvvm_add_rz_f
__nvvm_add_rm_ftz_f
__nvvm_add_rm_f
__nvvm_add_rp_ftz_f
__nvvm_add_rp_f
__nvvm_add_rn_d
__nvvm_add_rz_d
__nvvm_add_rm_d
__nvvm_add_rp_d
__nvvm_d2f_rn_ftz
__nvvm_d2f_rn
__nvvm_d2f_rz_ftz
__nvvm_d2f_rz
__nvvm_d2f_rm_ftz
__nvvm_d2f_rm
__nvvm_d2f_rp_ftz
__nvvm_d2f_rp
__nvvm_d2i_rn
__nvvm_d2i_rz
__nvvm_d2i_rm
__nvvm_d2i_rp
__nvvm_d2ui_rn
__nvvm_d2ui_rz
__nvvm_d2ui_rm
__nvvm_d2ui_rp
__nvvm_i2d_rn
__nvvm_i2d_rz
__nvvm_i2d_rm
__nvvm_i2d_rp
__nvvm_ui2d_rn
__nvvm_ui2d_rz
__nvvm_ui2d_rm
__nvvm_ui2d_rp
__nvvm_f2i_rn_ftz
__nvvm_f2i_rn
__nvvm_f2i_rz_ftz
__nvvm_f2i_rz
__nvvm_f2i_rm_ftz
__nvvm_f2i_rm
__nvvm_f2i_rp_ftz
__nvvm_f2i_rp
__nvvm_f2ui_rn_ftz
__nvvm_f2ui_rn
__nvvm_f2ui_rz_ftz
__nvvm_f2ui_rz
__nvvm_f2ui_rm_ftz
__nvvm_f2ui_rm
__nvvm_f2ui_rp_ftz
__nvvm_f2ui_rp
__nvvm_i2f_rn
__nvvm_i2f_rz
__nvvm_i2f_rm
__nvvm_i2f_rp
__nvvm_ui2f_rn
__nvvm_ui2f_rz
__nvvm_ui2f_rm
__nvvm_ui2f_rp
__nvvm_lohi_i2d
__nvvm_d2i_lo
__nvvm_d2i_hi
__nvvm_f2ll_rn_ftz
LLif
__nvvm_f2ll_rn
__nvvm_f2ll_rz_ftz
__nvvm_f2ll_rz
__nvvm_f2ll_rm_ftz
__nvvm_f2ll_rm
__nvvm_f2ll_rp_ftz
__nvvm_f2ll_rp
__nvvm_f2ull_rn_ftz
ULLif
__nvvm_f2ull_rn
__nvvm_f2ull_rz_ftz
__nvvm_f2ull_rz
__nvvm_f2ull_rm_ftz
__nvvm_f2ull_rm
__nvvm_f2ull_rp_ftz
__nvvm_f2ull_rp
__nvvm_d2ll_rn
LLid
__nvvm_d2ll_rz
__nvvm_d2ll_rm
__nvvm_d2ll_rp
__nvvm_d2ull_rn
ULLid
__nvvm_d2ull_rz
__nvvm_d2ull_rm
__nvvm_d2ull_rp
__nvvm_ll2f_rn
fLLi
__nvvm_ll2f_rz
__nvvm_ll2f_rm
__nvvm_ll2f_rp
__nvvm_ull2f_rn
fULLi
__nvvm_ull2f_rz
__nvvm_ull2f_rm
__nvvm_ull2f_rp
__nvvm_ll2d_rn
dLLi
__nvvm_ll2d_rz
__nvvm_ll2d_rm
__nvvm_ll2d_rp
__nvvm_ull2d_rn
dULLi
__nvvm_ull2d_rz
__nvvm_ull2d_rm
__nvvm_ull2d_rp
__nvvm_f2h_rn_ftz
__nvvm_f2h_rn
__nvvm_bitcast_f2i
__nvvm_bitcast_i2f
__nvvm_bitcast_ll2d
__nvvm_bitcast_d2ll
__syncthreads
__nvvm_bar0_popc
__nvvm_bar0_and
__nvvm_bar0_or
__nvvm_bar_sync
__nvvm_shfl_down_i32
__nvvm_shfl_down_f32
ffii
__nvvm_shfl_up_i32
__nvvm_shfl_up_f32
__nvvm_shfl_bfly_i32
__nvvm_shfl_bfly_f32
__nvvm_shfl_idx_i32
__nvvm_shfl_idx_f32
__nvvm_membar_cta
__nvvm_membar_gl
__nvvm_membar_sys
__nvvm_memcpy
vUc*Uc*zi
__nvvm_memset
vUc*Uczi
__builtin_ptx_read_image2Dfi_
V4fiiii
__builtin_ptx_read_image2Dff_
V4fiiff
__builtin_ptx_read_image2Dii_
V4iiiii
__builtin_ptx_read_image2Dif_
V4iiiff
__builtin_ptx_read_image3Dfi_
V4fiiiiii
__builtin_ptx_read_image3Dff_
V4fiiffff
__builtin_ptx_read_image3Dii_
V4iiiiiii
__builtin_ptx_read_image3Dif_
V4iiiffff
__builtin_ptx_write_image2Df_
viiiffff
__builtin_ptx_write_image2Di_
viiiiiii
__builtin_ptx_write_image2Dui_
viiiUiUiUiUi
__builtin_ptx_get_image_depthi_
__builtin_ptx_get_image_heighti_
__builtin_ptx_get_image_widthi_
__builtin_ptx_get_image_channel_data_typei_
__builtin_ptx_get_image_channel_orderi_
__nvvm_atom_add_g_i
iiD*1i
__nvvm_atom_add_s_i
iiD*3i
__nvvm_atom_add_gen_i
iiD*i
__nvvm_atom_cta_add_gen_i
__nvvm_atom_sys_add_gen_i
__nvvm_atom_add_g_l
LiLiD*1Li
__nvvm_atom_add_s_l
LiLiD*3Li
__nvvm_atom_add_gen_l
LiLiD*Li
__nvvm_atom_cta_add_gen_l
__nvvm_atom_sys_add_gen_l
__nvvm_atom_add_g_ll
LLiLLiD*1LLi
__nvvm_atom_add_s_ll
LLiLLiD*3LLi
__nvvm_atom_add_gen_ll
__nvvm_atom_cta_add_gen_ll
__nvvm_atom_sys_add_gen_ll
__nvvm_atom_add_g_f
ffD*1f
__nvvm_atom_add_s_f
ffD*3f
__nvvm_atom_add_gen_f
ffD*f
__nvvm_atom_cta_add_gen_f
__nvvm_atom_sys_add_gen_f
__nvvm_atom_add_g_d
ddD*1d
__nvvm_atom_add_s_d
ddD*3d
__nvvm_atom_add_gen_d
ddD*d
__nvvm_atom_cta_add_gen_d
__nvvm_atom_sys_add_gen_d
__nvvm_atom_sub_g_i
__nvvm_atom_sub_s_i
__nvvm_atom_sub_gen_i
__nvvm_atom_sub_g_l
__nvvm_atom_sub_s_l
__nvvm_atom_sub_gen_l
__nvvm_atom_sub_g_ll
__nvvm_atom_sub_s_ll
__nvvm_atom_sub_gen_ll
__nvvm_atom_xchg_g_i
__nvvm_atom_xchg_s_i
__nvvm_atom_xchg_gen_i
__nvvm_atom_cta_xchg_gen_i
__nvvm_atom_sys_xchg_gen_i
__nvvm_atom_xchg_g_l
__nvvm_atom_xchg_s_l
__nvvm_atom_xchg_gen_l
__nvvm_atom_cta_xchg_gen_l
__nvvm_atom_sys_xchg_gen_l
__nvvm_atom_xchg_g_ll
__nvvm_atom_xchg_s_ll
__nvvm_atom_xchg_gen_ll
__nvvm_atom_cta_xchg_gen_ll
__nvvm_atom_sys_xchg_gen_ll
__nvvm_atom_max_g_i
__nvvm_atom_max_s_i
__nvvm_atom_max_gen_i
__nvvm_atom_cta_max_gen_i
__nvvm_atom_sys_max_gen_i
__nvvm_atom_max_g_ui
UiUiD*1Ui
__nvvm_atom_max_s_ui
UiUiD*3Ui
__nvvm_atom_max_gen_ui
UiUiD*Ui
__nvvm_atom_cta_max_gen_ui
__nvvm_atom_sys_max_gen_ui
__nvvm_atom_max_g_l
__nvvm_atom_max_s_l
__nvvm_atom_max_gen_l
__nvvm_atom_cta_max_gen_l
__nvvm_atom_sys_max_gen_l
__nvvm_atom_max_g_ul
ULiULiD*1ULi
__nvvm_atom_max_s_ul
ULiULiD*3ULi
__nvvm_atom_max_gen_ul
ULiULiD*ULi
__nvvm_atom_cta_max_gen_ul
__nvvm_atom_sys_max_gen_ul
__nvvm_atom_max_g_ll
__nvvm_atom_max_s_ll
__nvvm_atom_max_gen_ll
__nvvm_atom_cta_max_gen_ll
__nvvm_atom_sys_max_gen_ll
__nvvm_atom_max_g_ull
ULLiULLiD*1ULLi
__nvvm_atom_max_s_ull
ULLiULLiD*3ULLi
__nvvm_atom_max_gen_ull
ULLiULLiD*ULLi
__nvvm_atom_cta_max_gen_ull
__nvvm_atom_sys_max_gen_ull
__nvvm_atom_min_g_i
__nvvm_atom_min_s_i
__nvvm_atom_min_gen_i
__nvvm_atom_cta_min_gen_i
__nvvm_atom_sys_min_gen_i
__nvvm_atom_min_g_ui
__nvvm_atom_min_s_ui
__nvvm_atom_min_gen_ui
__nvvm_atom_cta_min_gen_ui
__nvvm_atom_sys_min_gen_ui
__nvvm_atom_min_g_l
__nvvm_atom_min_s_l
__nvvm_atom_min_gen_l
__nvvm_atom_cta_min_gen_l
__nvvm_atom_sys_min_gen_l
__nvvm_atom_min_g_ul
__nvvm_atom_min_s_ul
__nvvm_atom_min_gen_ul
__nvvm_atom_cta_min_gen_ul
__nvvm_atom_sys_min_gen_ul
__nvvm_atom_min_g_ll
__nvvm_atom_min_s_ll
__nvvm_atom_min_gen_ll
__nvvm_atom_cta_min_gen_ll
__nvvm_atom_sys_min_gen_ll
__nvvm_atom_min_g_ull
__nvvm_atom_min_s_ull
__nvvm_atom_min_gen_ull
__nvvm_atom_cta_min_gen_ull
__nvvm_atom_sys_min_gen_ull
__nvvm_atom_inc_g_ui
__nvvm_atom_inc_s_ui
__nvvm_atom_inc_gen_ui
__nvvm_atom_cta_inc_gen_ui
__nvvm_atom_sys_inc_gen_ui
__nvvm_atom_dec_g_ui
__nvvm_atom_dec_s_ui
__nvvm_atom_dec_gen_ui
__nvvm_atom_cta_dec_gen_ui
__nvvm_atom_sys_dec_gen_ui
__nvvm_atom_and_g_i
__nvvm_atom_and_s_i
__nvvm_atom_and_gen_i
__nvvm_atom_cta_and_gen_i
__nvvm_atom_sys_and_gen_i
__nvvm_atom_and_g_l
__nvvm_atom_and_s_l
__nvvm_atom_and_gen_l
__nvvm_atom_cta_and_gen_l
__nvvm_atom_sys_and_gen_l
__nvvm_atom_and_g_ll
__nvvm_atom_and_s_ll
__nvvm_atom_and_gen_ll
__nvvm_atom_cta_and_gen_ll
__nvvm_atom_sys_and_gen_ll
__nvvm_atom_or_g_i
__nvvm_atom_or_s_i
__nvvm_atom_or_gen_i
__nvvm_atom_cta_or_gen_i
__nvvm_atom_sys_or_gen_i
__nvvm_atom_or_g_l
__nvvm_atom_or_s_l
__nvvm_atom_or_gen_l
__nvvm_atom_cta_or_gen_l
__nvvm_atom_sys_or_gen_l
__nvvm_atom_or_g_ll
__nvvm_atom_or_s_ll
__nvvm_atom_or_gen_ll
__nvvm_atom_cta_or_gen_ll
__nvvm_atom_sys_or_gen_ll
__nvvm_atom_xor_g_i
__nvvm_atom_xor_s_i
__nvvm_atom_xor_gen_i
__nvvm_atom_cta_xor_gen_i
__nvvm_atom_sys_xor_gen_i
__nvvm_atom_xor_g_l
__nvvm_atom_xor_s_l
__nvvm_atom_xor_gen_l
__nvvm_atom_cta_xor_gen_l
__nvvm_atom_sys_xor_gen_l
__nvvm_atom_xor_g_ll
__nvvm_atom_xor_s_ll
__nvvm_atom_xor_gen_ll
__nvvm_atom_cta_xor_gen_ll
__nvvm_atom_sys_xor_gen_ll
__nvvm_atom_cas_g_i
iiD*1ii
__nvvm_atom_cas_s_i
iiD*3ii
__nvvm_atom_cas_gen_i
iiD*ii
__nvvm_atom_cta_cas_gen_i
__nvvm_atom_sys_cas_gen_i
__nvvm_atom_cas_g_l
LiLiD*1LiLi
__nvvm_atom_cas_s_l
LiLiD*3LiLi
__nvvm_atom_cas_gen_l
LiLiD*LiLi
__nvvm_atom_cta_cas_gen_l
__nvvm_atom_sys_cas_gen_l
__nvvm_atom_cas_g_ll
LLiLLiD*1LLiLLi
__nvvm_atom_cas_s_ll
LLiLLiD*3LLiLLi
__nvvm_atom_cas_gen_ll
LLiLLiD*LLiLLi
__nvvm_atom_cta_cas_gen_ll
__nvvm_atom_sys_cas_gen_ll
__nvvm_compiler_error
vcC*4
__nvvm_compiler_warn
__nvvm_ldg_c
ccC*
__nvvm_ldg_s
ssC*
__nvvm_ldg_i
iiC*
__nvvm_ldg_l
LiLiC*
__nvvm_ldg_ll
LLiLLiC*
__nvvm_ldg_uc
UcUcC*
__nvvm_ldg_us
UsUsC*
__nvvm_ldg_ui
UiUiC*
__nvvm_ldg_ul
ULiULiC*
__nvvm_ldg_ull
ULLiULLiC*
__nvvm_ldg_f
ffC*
__nvvm_ldg_d
ddC*
__nvvm_ldg_c2
E2cE2cC*
__nvvm_ldg_c4
E4cE4cC*
__nvvm_ldg_s2
E2sE2sC*
__nvvm_ldg_s4
E4sE4sC*
__nvvm_ldg_i2
E2iE2iC*
__nvvm_ldg_i4
E4iE4iC*
__nvvm_ldg_ll2
E2LLiE2LLiC*
__nvvm_ldg_uc2
E2UcE2UcC*
__nvvm_ldg_uc4
E4UcE4UcC*
__nvvm_ldg_us2
E2UsE2UsC*
__nvvm_ldg_us4
E4UsE4UsC*
__nvvm_ldg_ui2
E2UiE2UiC*
__nvvm_ldg_ui4
E4UiE4UiC*
__nvvm_ldg_ull2
E2ULLiE2ULLiC*
__nvvm_ldg_f2
E2fE2fC*
__nvvm_ldg_f4
E4fE4fC*
__nvvm_ldg_d2
E2dE2dC*
__PTX__
__NVPTX__
__CUDA_ARCH__
fr10
fr11
fr12
fr13
fr14
fr15
fr16
fr17
fr18
fr19
fr20
fr21
fr22
fr23
fr24
fr25
fr26
fr27
fr28
fr29
fr30
fr31
vrsave
vscr
spe_acc
spefscr
powerpc
altivec
power8-vector
crypto
direct-move
bpermd
extdiv
float128
power9-vector
+altivec
+vsx
+bpermd
+extdiv
+power8-vector
+direct-move
+qpx
+htm
+float128
+power9-vector
elfv1
elfv1-qpx
elfv2
603e
603ev
604e
7400
7450
e500mc
e5500
power3
pwr3
power4
pwr4
power5
pwr5
power5x
pwr5x
power6
pwr6
power6x
pwr6x
power7
pwr7
power8
pwr8
power9
pwr9
ppc64
ppc64le
-vsx
-mpower8-vector
-mno-vsx
-mdirect-move
-mfloat128
-mpower9-vector
__builtin_ppc_get_timebase
__builtin_altivec_vaddcuw
__builtin_altivec_vaddsbs
__builtin_altivec_vaddubs
__builtin_altivec_vaddshs
__builtin_altivec_vadduhs
__builtin_altivec_vaddsws
__builtin_altivec_vadduws
__builtin_altivec_vaddeuqm
V1ULLLiV1ULLLiV1ULLLiV1ULLLi
__builtin_altivec_vaddcuq
V1ULLLiV1ULLLiV1ULLLi
__builtin_altivec_vaddecuq
__builtin_altivec_vsubsbs
__builtin_altivec_vsububs
__builtin_altivec_vsubshs
__builtin_altivec_vsubuhs
__builtin_altivec_vsubsws
__builtin_altivec_vsubuws
__builtin_altivec_vsubeuqm
__builtin_altivec_vsubcuq
__builtin_altivec_vsubecuq
__builtin_altivec_vavgsb
__builtin_altivec_vavgub
__builtin_altivec_vavgsh
__builtin_altivec_vavguh
__builtin_altivec_vavgsw
__builtin_altivec_vavguw
__builtin_altivec_vrfip
__builtin_altivec_vcfsx
V4fV4iIi
__builtin_altivec_vcfux
__builtin_altivec_vctsxs
V4SiV4fIi
__builtin_altivec_vctuxs
V4UiV4fIi
__builtin_altivec_dss
__builtin_altivec_dssall
__builtin_altivec_dst
vvC*iUi
__builtin_altivec_dstt
__builtin_altivec_dstst
__builtin_altivec_dststt
__builtin_altivec_vexptefp
__builtin_altivec_vrfim
__builtin_altivec_lvx
V4iivC*
__builtin_altivec_lvxl
__builtin_altivec_lvebx
V16civC*
__builtin_altivec_lvehx
V8sivC*
__builtin_altivec_lvewx
__builtin_altivec_vlogefp
__builtin_altivec_lvsl
V16cUcvC*
__builtin_altivec_lvsr
__builtin_altivec_vmaddfp
__builtin_altivec_vmhaddshs
__builtin_altivec_vmhraddshs
__builtin_altivec_vmsumubm
V4UiV16UcV16UcV4Ui
__builtin_altivec_vmsummbm
V4SiV16ScV16UcV4Si
__builtin_altivec_vmsumuhm
__builtin_altivec_vmsumshm
__builtin_altivec_vmsumuhs
__builtin_altivec_vmsumshs
__builtin_altivec_vmuleub
__builtin_altivec_vmulesb
__builtin_altivec_vmuleuh
__builtin_altivec_vmulesh
__builtin_altivec_vmuleuw
__builtin_altivec_vmulesw
__builtin_altivec_vmuloub
__builtin_altivec_vmulosb
__builtin_altivec_vmulouh
__builtin_altivec_vmulosh
__builtin_altivec_vmulouw
__builtin_altivec_vmulosw
__builtin_altivec_vnmsubfp
__builtin_altivec_vpkpx
V8sV4UiV4Ui
__builtin_altivec_vpkuhus
__builtin_altivec_vpkshss
__builtin_altivec_vpkuwus
__builtin_altivec_vpkswss
__builtin_altivec_vpkshus
V16UcV8SsV8Ss
__builtin_altivec_vpkswus
V8UsV4SiV4Si
__builtin_altivec_vpksdss
__builtin_altivec_vpksdus
V4UiV2SLLiV2SLLi
__builtin_altivec_vpkudus
__builtin_altivec_vpkudum
__builtin_altivec_vperm_4si
V4iV4iV4iV16Uc
__builtin_altivec_stvx
vV4iiv*
__builtin_altivec_stvxl
__builtin_altivec_stvebx
vV16civ*
__builtin_altivec_stvehx
vV8siv*
__builtin_altivec_stvewx
__builtin_altivec_vcmpbfp
V4iV4fV4f
__builtin_altivec_vcmpgefp
__builtin_altivec_vcmpequb
__builtin_altivec_vcmpequh
__builtin_altivec_vcmpequw
__builtin_altivec_vcmpequd
__builtin_altivec_vcmpeqfp
__builtin_altivec_vcmpneb
__builtin_altivec_vcmpneh
__builtin_altivec_vcmpnew
__builtin_altivec_vcmpnezb
__builtin_altivec_vcmpnezh
__builtin_altivec_vcmpnezw
__builtin_altivec_vcmpgtsb
V16cV16ScV16Sc
__builtin_altivec_vcmpgtub
V16cV16UcV16Uc
__builtin_altivec_vcmpgtsh
V8sV8SsV8Ss
__builtin_altivec_vcmpgtuh
V8sV8UsV8Us
__builtin_altivec_vcmpgtsw
V4iV4SiV4Si
__builtin_altivec_vcmpgtuw
V4iV4UiV4Ui
__builtin_altivec_vcmpgtsd
__builtin_altivec_vcmpgtud
V2LLiV2ULLiV2ULLi
__builtin_altivec_vcmpgtfp
__builtin_altivec_vmaxsb
__builtin_altivec_vmaxub
__builtin_altivec_vmaxsh
__builtin_altivec_vmaxuh
__builtin_altivec_vmaxsw
__builtin_altivec_vmaxuw
__builtin_altivec_vmaxsd
__builtin_altivec_vmaxud
__builtin_altivec_vmaxfp
__builtin_altivec_mfvscr
V8Us
__builtin_altivec_vminsb
__builtin_altivec_vminub
__builtin_altivec_vminsh
__builtin_altivec_vminuh
__builtin_altivec_vminsw
__builtin_altivec_vminuw
__builtin_altivec_vminsd
__builtin_altivec_vminud
__builtin_altivec_vminfp
__builtin_altivec_mtvscr
vV4i
__builtin_altivec_vrefp
__builtin_altivec_vrlb
V16cV16cV16Uc
__builtin_altivec_vrlh
V8sV8sV8Us
__builtin_altivec_vrlw
V4iV4iV4Ui
__builtin_altivec_vrld
V2LLiV2LLiV2ULLi
__builtin_altivec_vsel_4si
V4iV4iV4iV4Ui
__builtin_altivec_vsl
__builtin_altivec_vslo
__builtin_altivec_vsrab
__builtin_altivec_vsrah
__builtin_altivec_vsraw
__builtin_altivec_vsr
__builtin_altivec_vsro
__builtin_altivec_vrfin
__builtin_altivec_vrsqrtefp
__builtin_altivec_vsubcuw
__builtin_altivec_vsum4sbs
V4SiV16ScV4Si
__builtin_altivec_vsum4ubs
V4UiV16UcV4Ui
__builtin_altivec_vsum4shs
V4SiV8SsV4Si
__builtin_altivec_vsum2sws
__builtin_altivec_vsumsws
__builtin_altivec_vrfiz
__builtin_altivec_vupkhsb
__builtin_altivec_vupkhpx
V4UiV8s
__builtin_altivec_vupkhsh
__builtin_altivec_vupkhsw
__builtin_altivec_vupklsb
__builtin_altivec_vupklpx
__builtin_altivec_vupklsh
__builtin_altivec_vupklsw
__builtin_altivec_vcmpbfp_p
iiV4fV4f
__builtin_altivec_vcmpgefp_p
__builtin_altivec_vcmpequb_p
iiV16cV16c
__builtin_altivec_vcmpequh_p
iiV8sV8s
__builtin_altivec_vcmpequw_p
iiV4iV4i
__builtin_altivec_vcmpequd_p
iiV2LLiV2LLi
__builtin_altivec_vcmpeqfp_p
__builtin_altivec_vcmpneb_p
__builtin_altivec_vcmpneh_p
__builtin_altivec_vcmpnew_p
__builtin_altivec_vcmpned_p
__builtin_altivec_vcmpgtsb_p
iiV16ScV16Sc
__builtin_altivec_vcmpgtub_p
iiV16UcV16Uc
__builtin_altivec_vcmpgtsh_p
iiV8SsV8Ss
__builtin_altivec_vcmpgtuh_p
iiV8UsV8Us
__builtin_altivec_vcmpgtsw_p
iiV4SiV4Si
__builtin_altivec_vcmpgtuw_p
iiV4UiV4Ui
__builtin_altivec_vcmpgtsd_p
__builtin_altivec_vcmpgtud_p
iiV2ULLiV2ULLi
__builtin_altivec_vcmpgtfp_p
__builtin_altivec_vgbbd
__builtin_altivec_vbpermq
__builtin_altivec_crypto_vsbox
__builtin_altivec_crypto_vpermxor
__builtin_altivec_crypto_vshasigmaw
V4UiV4UiIiIi
__builtin_altivec_crypto_vshasigmad
V2ULLiV2ULLiIiIi
__builtin_altivec_crypto_vcipher
__builtin_altivec_crypto_vcipherlast
__builtin_altivec_crypto_vncipher
__builtin_altivec_crypto_vncipherlast
__builtin_altivec_crypto_vpmsumb
__builtin_altivec_crypto_vpmsumh
__builtin_altivec_crypto_vpmsumw
__builtin_altivec_crypto_vpmsumd
__builtin_altivec_vclzb
__builtin_altivec_vclzh
__builtin_altivec_vclzw
__builtin_altivec_vclzd
__builtin_altivec_vctzb
__builtin_altivec_vctzh
__builtin_altivec_vctzw
__builtin_altivec_vctzd
__builtin_altivec_vclzlsbb
SiV16Uc
__builtin_altivec_vctzlsbb
__builtin_altivec_vprtybw
__builtin_altivec_vprtybd
__builtin_altivec_vprtybq
V1ULLLiV1ULLLi
__builtin_altivec_vpopcntb
__builtin_altivec_vpopcnth
__builtin_altivec_vpopcntw
__builtin_altivec_vpopcntd
__builtin_altivec_vabsdub
__builtin_altivec_vabsduh
__builtin_altivec_vabsduw
__builtin_altivec_vslv
__builtin_altivec_vsrv
__builtin_altivec_vrlwmi
__builtin_altivec_vrldmi
V2ULLiV2ULLiV2ULLiV2ULLi
__builtin_altivec_vrlwnm
__builtin_altivec_vrldnm
__builtin_vsx_lxvd2x
V2divC*
__builtin_vsx_lxvw4x
__builtin_vsx_lxvd2x_be
V2dSLLivC*
__builtin_vsx_lxvw4x_be
V4iSLLivC*
__builtin_vsx_stxvd2x
vV2div*
__builtin_vsx_stxvw4x
__builtin_vsx_stxvd2x_be
vV2dSLLivC*
__builtin_vsx_stxvw4x_be
vV4iSLLivC*
__builtin_vsx_lxvl
V4ivC*ULLi
__builtin_vsx_lxvll
__builtin_vsx_stxvl
vV4iv*ULLi
__builtin_vsx_stxvll
__builtin_vsx_xvmaxdp
__builtin_vsx_xvmaxsp
__builtin_vsx_xsmaxdp
__builtin_vsx_xvmindp
__builtin_vsx_xvminsp
__builtin_vsx_xsmindp
__builtin_vsx_xvdivdp
__builtin_vsx_xvdivsp
__builtin_vsx_xvrdpip
__builtin_vsx_xvrspip
__builtin_vsx_xvcmpeqdp
V2ULLiV2dV2d
__builtin_vsx_xvcmpeqsp
V4UiV4fV4f
__builtin_vsx_xvcmpeqdp_p
iiV2dV2d
__builtin_vsx_xvcmpeqsp_p
__builtin_vsx_xvcmpgedp
__builtin_vsx_xvcmpgesp
__builtin_vsx_xvcmpgedp_p
__builtin_vsx_xvcmpgesp_p
__builtin_vsx_xvcmpgtdp
__builtin_vsx_xvcmpgtsp
__builtin_vsx_xvcmpgtdp_p
__builtin_vsx_xvcmpgtsp_p
__builtin_vsx_xvrdpim
__builtin_vsx_xvrspim
__builtin_vsx_xvrdpi
__builtin_vsx_xvrspi
__builtin_vsx_xvrdpic
__builtin_vsx_xvrspic
__builtin_vsx_xvrdpiz
__builtin_vsx_xvrspiz
__builtin_vsx_xvmaddadp
__builtin_vsx_xvmaddasp
__builtin_vsx_xvmsubadp
__builtin_vsx_xvmsubasp
__builtin_vsx_xvmuldp
__builtin_vsx_xvmulsp
__builtin_vsx_xvnmaddadp
__builtin_vsx_xvnmaddasp
__builtin_vsx_xvnmsubadp
__builtin_vsx_xvnmsubasp
__builtin_vsx_xvredp
__builtin_vsx_xvresp
__builtin_vsx_xvrsqrtedp
__builtin_vsx_xvrsqrtesp
__builtin_vsx_xvsqrtdp
__builtin_vsx_xvsqrtsp
__builtin_vsx_xxleqv
__builtin_vsx_xvcpsgndp
__builtin_vsx_xvcpsgnsp
__builtin_vsx_xvabssp
__builtin_vsx_xvabsdp
__builtin_vsx_xviexpdp
V2dV2ULLiV2ULLi
__builtin_vsx_xviexpsp
V4fV4UiV4Ui
__builtin_vsx_xvxexpdp
V2ULLiV2d
__builtin_vsx_xvxexpsp
V4UiV4f
__builtin_vsx_xvxsigdp
__builtin_vsx_xvxsigsp
__builtin_vsx_xvcvdpsxws
V4SiV2d
__builtin_vsx_xvcvdpuxws
V4UiV2d
__builtin_vsx_xvcvsxwdp
V2dV4Si
__builtin_vsx_xvcvuxwdp
V2dV4Ui
__builtin_vsx_xvcvspdp
V2dV4f
__builtin_vsx_xvcvsxdsp
V4fV2SLLi
__builtin_vsx_xvcvuxdsp
V4fV2ULLi
__builtin_vsx_xvcvdpsp
__builtin_vsx_xvcvsphp
__builtin_vsx_xvcvhpsp
V4fV8Us
__builtin_vsx_xvtstdcdp
V2ULLiV2dIi
__builtin_vsx_xvtstdcsp
__builtin_vsx_insertword
V16UcV4UiV16UcIi
__builtin_vsx_extractuword
V2ULLiV16UcIi
__builtin_vsx_xxpermdi
__builtin_vsx_xxsldwi
UiUIi
__builtin_tabortdc
__builtin_tabortdci
UiUiUii
__builtin_tabortwc
__builtin_tabortwci
__builtin_tcheck
__builtin_treclaim
__builtin_trechkpt
__builtin_tsr
__builtin_tendall
__builtin_tresume
__builtin_tsuspend
__builtin_get_texasr
__builtin_get_texasru
__builtin_get_tfhar
__builtin_get_tfiar
__builtin_set_texasr
vLUi
__builtin_set_texasru
__builtin_set_tfhar
__builtin_set_tfiar
__builtin_ttest
__builtin_divwe
SiSiSi
__builtin_divweu
__builtin_divde
SLLiSLLiSLLi
__builtin_divdeu
__builtin_bpermd
__ppc__
__PPC__
_ARCH_PPC
__powerpc__
__POWERPC__
_ARCH_PPC64
__powerpc64__
__ppc64__
__PPC64__
_LITTLE_ENDIAN
_BIG_ENDIAN
_CALL_ELF
_CALL_LINUX
__NATURAL_ALIGNMENT__
__LONGDOUBLE128
__STRUCT_PARM_ALIGN__
_ARCH_
_ARCH_PPCGR
_ARCH_PPCSQ
_ARCH_440
_ARCH_603
_ARCH_604
_ARCH_PWR4
_ARCH_PWR5
_ARCH_PWR5X
_ARCH_PWR6
_ARCH_PWR6X
_ARCH_PWR7
_ARCH_PWR8
_ARCH_PWR9
_ARCH_A2
_ARCH_A2Q
_ARCH_QP
__bg__
__THW_BLUEGENE__
__bgq__
__TOS_BGQ__
10206
__ALTIVEC__
__VSX__
__POWER8_VECTOR__
__CRYPTO__
__POWER9_VECTOR__
__HAVE_BSWAP__
__PPU__
__CELLOS_LV2__
__LP32__
e-m:e-i64:64-n32:64
E-m:e-i64:64-n32:64
E-m:e-p:32:32-i64:64-n32
le64
pnacl
__le32__
__pnacl__
$f10
$f11
$f12
$f13
$f14
$f15
$f16
$f17
$f18
$f19
$f20
$f21
$f22
$f23
$f24
$f25
$f26
$f27
$f28
$f29
$f30
$f31
$fcc0
$fcc1
$fcc2
$fcc3
$fcc4
$fcc5
$fcc6
$fcc7
$ac1hi
$ac1lo
$ac2hi
$ac2lo
$ac3hi
$ac3lo
$w10
$w11
$w12
$w13
$w14
$w15
$w16
$w17
$w18
$w19
$w20
$w21
$w22
$w23
$w24
$w25
$w26
$w27
$w28
$w29
$w30
$w31
$msair
$msacsr
$msaaccess
$msasave
$msamodify
$msarequest
$msamap
$msaunmap
mips64r3
mips64r5
octeon
m:e-p:32:32-i8:8:32-i16:16:32-i64:64-n32:64-S128
m:e-i8:8:32-i16:16:32-i64:64-n32:64-S128
m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64
+single-float
+mips16
+micromips
+dspr2
+msa
+nomadd4
+fp64
-fp64
+nan2008
-nan2008
+noabicalls
mips1
mips32r3
mips32r5
p5600
~{$1}
__builtin_mips_addu_qb
V4ScV4ScV4Sc
__builtin_mips_addu_s_qb
__builtin_mips_subu_qb
__builtin_mips_subu_s_qb
__builtin_mips_addq_ph
V2sV2sV2s
__builtin_mips_addq_s_ph
__builtin_mips_subq_ph
__builtin_mips_subq_s_ph
__builtin_mips_madd
LLiLLiii
__builtin_mips_maddu
LLiLLiUiUi
__builtin_mips_msub
__builtin_mips_msubu
__builtin_mips_addq_s_w
__builtin_mips_subq_s_w
__builtin_mips_addsc
__builtin_mips_addwc
__builtin_mips_modsub
__builtin_mips_raddu_w_qb
iV4Sc
__builtin_mips_absq_s_ph
V2sV2s
__builtin_mips_absq_s_w
__builtin_mips_precrq_qb_ph
V4ScV2sV2s
__builtin_mips_precrqu_s_qb_ph
__builtin_mips_precrq_ph_w
V2sii
__builtin_mips_precrq_rs_ph_w
__builtin_mips_preceq_w_phl
iV2s
__builtin_mips_preceq_w_phr
__builtin_mips_precequ_ph_qbl
V2sV4Sc
__builtin_mips_precequ_ph_qbr
__builtin_mips_precequ_ph_qbla
__builtin_mips_precequ_ph_qbra
__builtin_mips_preceu_ph_qbl
__builtin_mips_preceu_ph_qbr
__builtin_mips_preceu_ph_qbla
__builtin_mips_preceu_ph_qbra
__builtin_mips_shll_qb
V4ScV4Sci
__builtin_mips_shrl_qb
__builtin_mips_shll_ph
V2sV2si
__builtin_mips_shll_s_ph
__builtin_mips_shra_ph
__builtin_mips_shra_r_ph
__builtin_mips_shll_s_w
__builtin_mips_shra_r_w
__builtin_mips_shilo
LLiLLii
__builtin_mips_muleu_s_ph_qbl
V2sV4ScV2s
__builtin_mips_muleu_s_ph_qbr
__builtin_mips_mulq_rs_ph
__builtin_mips_muleq_s_w_phl
iV2sV2s
__builtin_mips_muleq_s_w_phr
__builtin_mips_mulsaq_s_w_ph
LLiLLiV2sV2s
__builtin_mips_maq_s_w_phl
__builtin_mips_maq_s_w_phr
__builtin_mips_maq_sa_w_phl
__builtin_mips_maq_sa_w_phr
__builtin_mips_mult
__builtin_mips_multu
LLiUiUi
__builtin_mips_dpau_h_qbl
LLiLLiV4ScV4Sc
__builtin_mips_dpau_h_qbr
__builtin_mips_dpsu_h_qbl
__builtin_mips_dpsu_h_qbr
__builtin_mips_dpaq_s_w_ph
__builtin_mips_dpsq_s_w_ph
__builtin_mips_dpaq_sa_l_w
__builtin_mips_dpsq_sa_l_w
__builtin_mips_cmpu_eq_qb
vV4ScV4Sc
__builtin_mips_cmpu_lt_qb
__builtin_mips_cmpu_le_qb
__builtin_mips_cmpgu_eq_qb
iV4ScV4Sc
__builtin_mips_cmpgu_lt_qb
__builtin_mips_cmpgu_le_qb
__builtin_mips_cmp_eq_ph
vV2sV2s
__builtin_mips_cmp_lt_ph
__builtin_mips_cmp_le_ph
__builtin_mips_extr_s_h
iLLii
__builtin_mips_extr_w
__builtin_mips_extr_rs_w
__builtin_mips_extr_r_w
__builtin_mips_extp
__builtin_mips_extpdp
__builtin_mips_wrdsp
viIi
__builtin_mips_rddsp
__builtin_mips_insv
__builtin_mips_bitrev
__builtin_mips_packrl_ph
__builtin_mips_repl_qb
V4Sci
__builtin_mips_repl_ph
V2si
__builtin_mips_pick_qb
__builtin_mips_pick_ph
__builtin_mips_mthlip
__builtin_mips_bposge32
__builtin_mips_lbux
iv*i
__builtin_mips_lhx
__builtin_mips_lwx
__builtin_mips_absq_s_qb
V4ScV4Sc
__builtin_mips_addqh_ph
__builtin_mips_addqh_r_ph
__builtin_mips_addqh_w
__builtin_mips_addqh_r_w
__builtin_mips_addu_ph
__builtin_mips_addu_s_ph
__builtin_mips_adduh_qb
__builtin_mips_adduh_r_qb
__builtin_mips_append
iiiIi
__builtin_mips_balign
__builtin_mips_cmpgdu_eq_qb
__builtin_mips_cmpgdu_lt_qb
__builtin_mips_cmpgdu_le_qb
__builtin_mips_dpa_w_ph
__builtin_mips_dps_w_ph
__builtin_mips_dpaqx_s_w_ph
__builtin_mips_dpaqx_sa_w_ph
__builtin_mips_dpax_w_ph
__builtin_mips_dpsx_w_ph
__builtin_mips_dpsqx_s_w_ph
__builtin_mips_dpsqx_sa_w_ph
__builtin_mips_mul_ph
__builtin_mips_mul_s_ph
__builtin_mips_mulq_rs_w
__builtin_mips_mulq_s_ph
__builtin_mips_mulq_s_w
__builtin_mips_mulsa_w_ph
__builtin_mips_precr_qb_ph
__builtin_mips_precr_sra_ph_w
V2siiIi
__builtin_mips_precr_sra_r_ph_w
__builtin_mips_prepend
__builtin_mips_shra_qb
__builtin_mips_shra_r_qb
__builtin_mips_shrl_ph
__builtin_mips_subqh_ph
__builtin_mips_subqh_r_ph
__builtin_mips_subqh_w
__builtin_mips_subqh_r_w
__builtin_mips_subu_ph
__builtin_mips_subu_s_ph
__builtin_mips_subuh_qb
__builtin_mips_subuh_r_qb
__builtin_msa_add_a_b
__builtin_msa_add_a_h
__builtin_msa_add_a_w
__builtin_msa_add_a_d
__builtin_msa_adds_a_b
__builtin_msa_adds_a_h
__builtin_msa_adds_a_w
__builtin_msa_adds_a_d
__builtin_msa_adds_s_b
__builtin_msa_adds_s_h
__builtin_msa_adds_s_w
__builtin_msa_adds_s_d
__builtin_msa_adds_u_b
__builtin_msa_adds_u_h
__builtin_msa_adds_u_w
__builtin_msa_adds_u_d
__builtin_msa_addv_b
__builtin_msa_addv_h
__builtin_msa_addv_w
__builtin_msa_addv_d
__builtin_msa_addvi_b
V16cV16cIUi
__builtin_msa_addvi_h
V8sV8sIUi
__builtin_msa_addvi_w
V4iV4iIUi
__builtin_msa_addvi_d
V2LLiV2LLiIUi
__builtin_msa_and_v
__builtin_msa_andi_b
V16UcV16UcIUi
__builtin_msa_asub_s_b
__builtin_msa_asub_s_h
__builtin_msa_asub_s_w
__builtin_msa_asub_s_d
__builtin_msa_asub_u_b
__builtin_msa_asub_u_h
__builtin_msa_asub_u_w
__builtin_msa_asub_u_d
__builtin_msa_ave_s_b
__builtin_msa_ave_s_h
__builtin_msa_ave_s_w
__builtin_msa_ave_s_d
__builtin_msa_ave_u_b
__builtin_msa_ave_u_h
__builtin_msa_ave_u_w
__builtin_msa_ave_u_d
__builtin_msa_aver_s_b
__builtin_msa_aver_s_h
__builtin_msa_aver_s_w
__builtin_msa_aver_s_d
__builtin_msa_aver_u_b
__builtin_msa_aver_u_h
__builtin_msa_aver_u_w
__builtin_msa_aver_u_d
__builtin_msa_bclr_b
__builtin_msa_bclr_h
__builtin_msa_bclr_w
__builtin_msa_bclr_d
__builtin_msa_bclri_b
__builtin_msa_bclri_h
V8UsV8UsIUi
__builtin_msa_bclri_w
V4UiV4UiIUi
__builtin_msa_bclri_d
V2ULLiV2ULLiIUi
__builtin_msa_binsl_b
__builtin_msa_binsl_h
__builtin_msa_binsl_w
__builtin_msa_binsl_d
__builtin_msa_binsli_b
V16UcV16UcV16UcIUi
__builtin_msa_binsli_h
V8UsV8UsV8UsIUi
__builtin_msa_binsli_w
V4UiV4UiV4UiIUi
__builtin_msa_binsli_d
V2ULLiV2ULLiV2ULLiIUi
__builtin_msa_binsr_b
__builtin_msa_binsr_h
__builtin_msa_binsr_w
__builtin_msa_binsr_d
__builtin_msa_binsri_b
__builtin_msa_binsri_h
__builtin_msa_binsri_w
__builtin_msa_binsri_d
__builtin_msa_bmnz_v
__builtin_msa_bmnzi_b
__builtin_msa_bmz_v
__builtin_msa_bmzi_b
__builtin_msa_bneg_b
__builtin_msa_bneg_h
__builtin_msa_bneg_w
__builtin_msa_bneg_d
__builtin_msa_bnegi_b
__builtin_msa_bnegi_h
__builtin_msa_bnegi_w
__builtin_msa_bnegi_d
__builtin_msa_bnz_b
iV16Uc
__builtin_msa_bnz_h
iV8Us
__builtin_msa_bnz_w
iV4Ui
__builtin_msa_bnz_d
iV2ULLi
__builtin_msa_bnz_v
__builtin_msa_bsel_v
__builtin_msa_bseli_b
__builtin_msa_bset_b
__builtin_msa_bset_h
__builtin_msa_bset_w
__builtin_msa_bset_d
__builtin_msa_bseti_b
__builtin_msa_bseti_h
__builtin_msa_bseti_w
__builtin_msa_bseti_d
__builtin_msa_bz_b
__builtin_msa_bz_h
__builtin_msa_bz_w
__builtin_msa_bz_d
__builtin_msa_bz_v
__builtin_msa_ceq_b
__builtin_msa_ceq_h
__builtin_msa_ceq_w
__builtin_msa_ceq_d
__builtin_msa_ceqi_b
V16ScV16ScISi
__builtin_msa_ceqi_h
V8SsV8SsISi
__builtin_msa_ceqi_w
V4SiV4SiISi
__builtin_msa_ceqi_d
V2SLLiV2SLLiISi
__builtin_msa_cfcmsa
__builtin_msa_cle_s_b
__builtin_msa_cle_s_h
__builtin_msa_cle_s_w
__builtin_msa_cle_s_d
__builtin_msa_cle_u_b
V16ScV16UcV16Uc
__builtin_msa_cle_u_h
V8SsV8UsV8Us
__builtin_msa_cle_u_w
V4SiV4UiV4Ui
__builtin_msa_cle_u_d
V2SLLiV2ULLiV2ULLi
__builtin_msa_clei_s_b
__builtin_msa_clei_s_h
__builtin_msa_clei_s_w
__builtin_msa_clei_s_d
__builtin_msa_clei_u_b
V16ScV16UcIUi
__builtin_msa_clei_u_h
V8SsV8UsIUi
__builtin_msa_clei_u_w
V4SiV4UiIUi
__builtin_msa_clei_u_d
V2SLLiV2ULLiIUi
__builtin_msa_clt_s_b
__builtin_msa_clt_s_h
__builtin_msa_clt_s_w
__builtin_msa_clt_s_d
__builtin_msa_clt_u_b
__builtin_msa_clt_u_h
__builtin_msa_clt_u_w
__builtin_msa_clt_u_d
__builtin_msa_clti_s_b
__builtin_msa_clti_s_h
__builtin_msa_clti_s_w
__builtin_msa_clti_s_d
__builtin_msa_clti_u_b
__builtin_msa_clti_u_h
__builtin_msa_clti_u_w
__builtin_msa_clti_u_d
__builtin_msa_copy_s_b
iV16ScIUi
__builtin_msa_copy_s_h
iV8SsIUi
__builtin_msa_copy_s_w
iV4SiIUi
__builtin_msa_copy_s_d
LLiV2SLLiIUi
__builtin_msa_copy_u_b
iV16UcIUi
__builtin_msa_copy_u_h
iV8UsIUi
__builtin_msa_copy_u_w
iV4UiIUi
__builtin_msa_copy_u_d
LLiV2ULLiIUi
__builtin_msa_ctcmsa
vIii
__builtin_msa_div_s_b
__builtin_msa_div_s_h
__builtin_msa_div_s_w
__builtin_msa_div_s_d
__builtin_msa_div_u_b
__builtin_msa_div_u_h
__builtin_msa_div_u_w
__builtin_msa_div_u_d
__builtin_msa_dotp_s_h
__builtin_msa_dotp_s_w
__builtin_msa_dotp_s_d
__builtin_msa_dotp_u_h
__builtin_msa_dotp_u_w
__builtin_msa_dotp_u_d
__builtin_msa_dpadd_s_h
V8SsV8SsV16ScV16Sc
__builtin_msa_dpadd_s_w
V4SiV4SiV8SsV8Ss
__builtin_msa_dpadd_s_d
V2SLLiV2SLLiV4SiV4Si
__builtin_msa_dpadd_u_h
V8UsV8UsV16UcV16Uc
__builtin_msa_dpadd_u_w
V4UiV4UiV8UsV8Us
__builtin_msa_dpadd_u_d
V2ULLiV2ULLiV4UiV4Ui
__builtin_msa_dpsub_s_h
__builtin_msa_dpsub_s_w
__builtin_msa_dpsub_s_d
__builtin_msa_dpsub_u_h
__builtin_msa_dpsub_u_w
__builtin_msa_dpsub_u_d
__builtin_msa_fadd_w
__builtin_msa_fadd_d
__builtin_msa_fcaf_w
__builtin_msa_fcaf_d
V2LLiV2dV2d
__builtin_msa_fceq_w
__builtin_msa_fceq_d
__builtin_msa_fclass_w
__builtin_msa_fclass_d
__builtin_msa_fcle_w
__builtin_msa_fcle_d
__builtin_msa_fclt_w
__builtin_msa_fclt_d
__builtin_msa_fcne_w
__builtin_msa_fcne_d
__builtin_msa_fcor_w
__builtin_msa_fcor_d
__builtin_msa_fcueq_w
__builtin_msa_fcueq_d
__builtin_msa_fcule_w
__builtin_msa_fcule_d
__builtin_msa_fcult_w
__builtin_msa_fcult_d
__builtin_msa_fcun_w
__builtin_msa_fcun_d
__builtin_msa_fcune_w
__builtin_msa_fcune_d
__builtin_msa_fdiv_w
__builtin_msa_fdiv_d
__builtin_msa_fexdo_h
V8hV4fV4f
__builtin_msa_fexdo_w
V4fV2dV2d
__builtin_msa_fexp2_w
__builtin_msa_fexp2_d
__builtin_msa_fexupl_w
V4fV8h
__builtin_msa_fexupl_d
__builtin_msa_fexupr_w
__builtin_msa_fexupr_d
__builtin_msa_ffint_s_w
V4fV4Si
__builtin_msa_ffint_s_d
V2dV2SLLi
__builtin_msa_ffint_u_w
V4fV4Ui
__builtin_msa_ffint_u_d
V2dV2ULLi
__builtin_msa_ffql_w
V4fV8Ss
__builtin_msa_ffql_d
__builtin_msa_ffqr_w
__builtin_msa_ffqr_d
__builtin_msa_fill_b
V16Sci
__builtin_msa_fill_h
V8Ssi
__builtin_msa_fill_w
V4Sii
__builtin_msa_fill_d
V2SLLiLLi
__builtin_msa_flog2_w
__builtin_msa_flog2_d
__builtin_msa_fmadd_w
__builtin_msa_fmadd_d
__builtin_msa_fmax_w
__builtin_msa_fmax_d
__builtin_msa_fmax_a_w
__builtin_msa_fmax_a_d
__builtin_msa_fmin_w
__builtin_msa_fmin_d
__builtin_msa_fmin_a_w
__builtin_msa_fmin_a_d
__builtin_msa_fmsub_w
__builtin_msa_fmsub_d
__builtin_msa_fmul_w
__builtin_msa_fmul_d
__builtin_msa_frint_w
__builtin_msa_frint_d
__builtin_msa_frcp_w
__builtin_msa_frcp_d
__builtin_msa_frsqrt_w
__builtin_msa_frsqrt_d
__builtin_msa_fsaf_w
__builtin_msa_fsaf_d
__builtin_msa_fseq_w
__builtin_msa_fseq_d
__builtin_msa_fsle_w
__builtin_msa_fsle_d
__builtin_msa_fslt_w
__builtin_msa_fslt_d
__builtin_msa_fsne_w
__builtin_msa_fsne_d
__builtin_msa_fsor_w
__builtin_msa_fsor_d
__builtin_msa_fsqrt_w
__builtin_msa_fsqrt_d
__builtin_msa_fsub_w
__builtin_msa_fsub_d
__builtin_msa_fsueq_w
__builtin_msa_fsueq_d
__builtin_msa_fsule_w
__builtin_msa_fsule_d
__builtin_msa_fsult_w
__builtin_msa_fsult_d
__builtin_msa_fsun_w
__builtin_msa_fsun_d
__builtin_msa_fsune_w
__builtin_msa_fsune_d
__builtin_msa_ftint_s_w
V4SiV4f
__builtin_msa_ftint_s_d
V2SLLiV2d
__builtin_msa_ftint_u_w
__builtin_msa_ftint_u_d
__builtin_msa_ftq_h
__builtin_msa_ftq_w
__builtin_msa_ftrunc_s_w
__builtin_msa_ftrunc_s_d
__builtin_msa_ftrunc_u_w
__builtin_msa_ftrunc_u_d
__builtin_msa_hadd_s_h
__builtin_msa_hadd_s_w
__builtin_msa_hadd_s_d
__builtin_msa_hadd_u_h
__builtin_msa_hadd_u_w
__builtin_msa_hadd_u_d
__builtin_msa_hsub_s_h
__builtin_msa_hsub_s_w
__builtin_msa_hsub_s_d
__builtin_msa_hsub_u_h
__builtin_msa_hsub_u_w
__builtin_msa_hsub_u_d
__builtin_msa_ilvev_b
__builtin_msa_ilvev_h
__builtin_msa_ilvev_w
__builtin_msa_ilvev_d
__builtin_msa_ilvl_b
__builtin_msa_ilvl_h
__builtin_msa_ilvl_w
__builtin_msa_ilvl_d
__builtin_msa_ilvod_b
__builtin_msa_ilvod_h
__builtin_msa_ilvod_w
__builtin_msa_ilvod_d
__builtin_msa_ilvr_b
__builtin_msa_ilvr_h
__builtin_msa_ilvr_w
__builtin_msa_ilvr_d
__builtin_msa_insert_b
V16ScV16ScIUii
__builtin_msa_insert_h
V8SsV8SsIUii
__builtin_msa_insert_w
V4SiV4SiIUii
__builtin_msa_insert_d
V2SLLiV2SLLiIUiLLi
__builtin_msa_insve_b
V16ScV16ScIUiV16Sc
__builtin_msa_insve_h
V8SsV8SsIUiV8Ss
__builtin_msa_insve_w
V4SiV4SiIUiV4Si
__builtin_msa_insve_d
V2SLLiV2SLLiIUiV2SLLi
__builtin_msa_ld_b
V16Scv*Ii
__builtin_msa_ld_h
V8Ssv*Ii
__builtin_msa_ld_w
V4Siv*Ii
__builtin_msa_ld_d
V2SLLiv*Ii
__builtin_msa_ldi_b
V16cIi
__builtin_msa_ldi_h
V8sIi
__builtin_msa_ldi_w
V4iIi
__builtin_msa_ldi_d
V2LLiIi
__builtin_msa_madd_q_h
__builtin_msa_madd_q_w
__builtin_msa_maddr_q_h
__builtin_msa_maddr_q_w
__builtin_msa_maddv_b
__builtin_msa_maddv_h
__builtin_msa_maddv_w
__builtin_msa_maddv_d
V2SLLiV2SLLiV2SLLiV2SLLi
__builtin_msa_max_a_b
__builtin_msa_max_a_h
__builtin_msa_max_a_w
__builtin_msa_max_a_d
__builtin_msa_max_s_b
__builtin_msa_max_s_h
__builtin_msa_max_s_w
__builtin_msa_max_s_d
__builtin_msa_max_u_b
__builtin_msa_max_u_h
__builtin_msa_max_u_w
__builtin_msa_max_u_d
__builtin_msa_maxi_s_b
V16ScV16ScIi
__builtin_msa_maxi_s_h
V8SsV8SsIi
__builtin_msa_maxi_s_w
V4SiV4SiIi
__builtin_msa_maxi_s_d
V2SLLiV2SLLiIi
__builtin_msa_maxi_u_b
V16UcV16UcIi
__builtin_msa_maxi_u_h
V8UsV8UsIi
__builtin_msa_maxi_u_w
V4UiV4UiIi
__builtin_msa_maxi_u_d
V2ULLiV2ULLiIi
__builtin_msa_min_a_b
__builtin_msa_min_a_h
__builtin_msa_min_a_w
__builtin_msa_min_a_d
__builtin_msa_min_s_b
__builtin_msa_min_s_h
__builtin_msa_min_s_w
__builtin_msa_min_s_d
__builtin_msa_min_u_b
__builtin_msa_min_u_h
__builtin_msa_min_u_w
__builtin_msa_min_u_d
__builtin_msa_mini_s_b
__builtin_msa_mini_s_h
__builtin_msa_mini_s_w
__builtin_msa_mini_s_d
__builtin_msa_mini_u_b
__builtin_msa_mini_u_h
__builtin_msa_mini_u_w
__builtin_msa_mini_u_d
__builtin_msa_mod_s_b
__builtin_msa_mod_s_h
__builtin_msa_mod_s_w
__builtin_msa_mod_s_d
__builtin_msa_mod_u_b
__builtin_msa_mod_u_h
__builtin_msa_mod_u_w
__builtin_msa_mod_u_d
__builtin_msa_move_v
V16ScV16Sc
__builtin_msa_msub_q_h
__builtin_msa_msub_q_w
__builtin_msa_msubr_q_h
__builtin_msa_msubr_q_w
__builtin_msa_msubv_b
__builtin_msa_msubv_h
__builtin_msa_msubv_w
__builtin_msa_msubv_d
__builtin_msa_mul_q_h
__builtin_msa_mul_q_w
__builtin_msa_mulr_q_h
__builtin_msa_mulr_q_w
__builtin_msa_mulv_b
__builtin_msa_mulv_h
__builtin_msa_mulv_w
__builtin_msa_mulv_d
__builtin_msa_nloc_b
__builtin_msa_nloc_h
V8SsV8Ss
__builtin_msa_nloc_w
V4SiV4Si
__builtin_msa_nloc_d
V2SLLiV2SLLi
__builtin_msa_nlzc_b
__builtin_msa_nlzc_h
__builtin_msa_nlzc_w
__builtin_msa_nlzc_d
__builtin_msa_nor_v
__builtin_msa_nori_b
V16UcV16cIUi
__builtin_msa_or_v
__builtin_msa_ori_b
__builtin_msa_pckev_b
__builtin_msa_pckev_h
__builtin_msa_pckev_w
__builtin_msa_pckev_d
__builtin_msa_pckod_b
__builtin_msa_pckod_h
__builtin_msa_pckod_w
__builtin_msa_pckod_d
__builtin_msa_pcnt_b
__builtin_msa_pcnt_h
__builtin_msa_pcnt_w
__builtin_msa_pcnt_d
__builtin_msa_sat_s_b
V16ScV16ScIUi
__builtin_msa_sat_s_h
V8SsV8SsIUi
__builtin_msa_sat_s_w
V4SiV4SiIUi
__builtin_msa_sat_s_d
V2SLLiV2SLLiIUi
__builtin_msa_sat_u_b
__builtin_msa_sat_u_h
__builtin_msa_sat_u_w
__builtin_msa_sat_u_d
__builtin_msa_shf_b
__builtin_msa_shf_h
__builtin_msa_shf_w
__builtin_msa_sld_b
V16cV16cV16cUi
__builtin_msa_sld_h
V8sV8sV8sUi
__builtin_msa_sld_w
V4iV4iV4iUi
__builtin_msa_sld_d
V2LLiV2LLiV2LLiUi
__builtin_msa_sldi_b
V16cV16cV16cIUi
__builtin_msa_sldi_h
V8sV8sV8sIUi
__builtin_msa_sldi_w
V4iV4iV4iIUi
__builtin_msa_sldi_d
V2LLiV2LLiV2LLiIUi
__builtin_msa_sll_b
__builtin_msa_sll_h
__builtin_msa_sll_w
__builtin_msa_sll_d
__builtin_msa_slli_b
__builtin_msa_slli_h
__builtin_msa_slli_w
__builtin_msa_slli_d
__builtin_msa_splat_b
V16cV16cUi
__builtin_msa_splat_h
V8sV8sUi
__builtin_msa_splat_w
V4iV4iUi
__builtin_msa_splat_d
V2LLiV2LLiUi
__builtin_msa_splati_b
__builtin_msa_splati_h
__builtin_msa_splati_w
__builtin_msa_splati_d
__builtin_msa_sra_b
__builtin_msa_sra_h
__builtin_msa_sra_w
__builtin_msa_sra_d
__builtin_msa_srai_b
__builtin_msa_srai_h
__builtin_msa_srai_w
__builtin_msa_srai_d
__builtin_msa_srar_b
__builtin_msa_srar_h
__builtin_msa_srar_w
__builtin_msa_srar_d
__builtin_msa_srari_b
__builtin_msa_srari_h
__builtin_msa_srari_w
__builtin_msa_srari_d
__builtin_msa_srl_b
__builtin_msa_srl_h
__builtin_msa_srl_w
__builtin_msa_srl_d
__builtin_msa_srli_b
__builtin_msa_srli_h
__builtin_msa_srli_w
__builtin_msa_srli_d
__builtin_msa_srlr_b
__builtin_msa_srlr_h
__builtin_msa_srlr_w
__builtin_msa_srlr_d
__builtin_msa_srlri_b
__builtin_msa_srlri_h
__builtin_msa_srlri_w
__builtin_msa_srlri_d
__builtin_msa_st_b
vV16Scv*Ii
__builtin_msa_st_h
vV8Ssv*Ii
__builtin_msa_st_w
vV4Siv*Ii
__builtin_msa_st_d
vV2SLLiv*Ii
__builtin_msa_subs_s_b
__builtin_msa_subs_s_h
__builtin_msa_subs_s_w
__builtin_msa_subs_s_d
__builtin_msa_subs_u_b
__builtin_msa_subs_u_h
__builtin_msa_subs_u_w
__builtin_msa_subs_u_d
__builtin_msa_subsus_u_b
V16UcV16UcV16Sc
__builtin_msa_subsus_u_h
V8UsV8UsV8Ss
__builtin_msa_subsus_u_w
V4UiV4UiV4Si
__builtin_msa_subsus_u_d
V2ULLiV2ULLiV2SLLi
__builtin_msa_subsuu_s_b
__builtin_msa_subsuu_s_h
__builtin_msa_subsuu_s_w
__builtin_msa_subsuu_s_d
__builtin_msa_subv_b
__builtin_msa_subv_h
__builtin_msa_subv_w
__builtin_msa_subv_d
__builtin_msa_subvi_b
__builtin_msa_subvi_h
__builtin_msa_subvi_w
__builtin_msa_subvi_d
__builtin_msa_vshf_b
__builtin_msa_vshf_h
__builtin_msa_vshf_w
__builtin_msa_vshf_d
V2LLiV2LLiV2LLiV2LLi
__builtin_msa_xor_v
__builtin_msa_xori_b
MIPSEB
_MIPSEB
MIPSEL
_MIPSEL
__mips__
_mips
__mips
_MIPS_ISA
_MIPS_ISA_MIPS32
__mips64
__mips64__
_MIPS_ISA_MIPS64
__mips_isa_rev
__mips_o32
_ABIO32
_MIPS_SIM
__mips_n32
_ABIN32
__mips_n64
_ABI64
__mips_abicalls
__ABICALLS__
__mips_hard_float
__mips_soft_float
__mips_single_float
__mips_fpr
_MIPS_FPSET
__mips16
__mips_micromips
__mips_nan2008
__mips_dsp_rev
__mips_dsp
__mips_dspr2
__mips_msa
__mips_no_madd4
_MIPS_SZPTR
_MIPS_SZINT
_MIPS_SZLONG
_MIPS_ARCH
_MIPS_ARCH_
zero
status
ctl0
estatus
ctl1
bstatus
ctl2
ienable
ctl3
ipending
ctl4
cpuid
ctl5
exception
ctl7
pteaddr
ctl8
tlbacc
ctl9
tlbmisc
ctl10
badaddr
ctl12
config
ctl13
mpubase
ctl14
mpuacc
ctl15
ctl6
ctl11
nios2r2
nios2r2mandatory
nios2r2bmx
nios2r2mpx
nios2r2cdx
eabi
nios2r1
__builtin_ldbio
ivDC*
__builtin_ldbuio
__builtin_ldhio
__builtin_ldhuio
__builtin_ldwio
__builtin_ldwuio
__builtin_rdctl
__builtin_wrctl
__builtin_rdprs
__builtin_stbio
vvD*i
__builtin_sthio
__builtin_stwio
__builtin_sync
__builtin_flushd
vvD*
__builtin_flushda
__builtin_wrpie
__builtin_eni
__builtin_ldex
__builtin_stex
ivD*i
__builtin_ldsex
__builtin_stsex
ivDC*i
nios2
NIOS2
__nios2
__NIOS2
__nios2__
__NIOS2__
msp430
MSP430
__MSP430__
__BPF__
avr1
avr2
avr25
avr3
avr31
avr35
avr4
avr5
avr51
avr6
avrxmega1
avrxmega2
avrxmega3
avrxmega4
avrxmega5
avrxmega6
avrxmega7
avrtiny
at90s1200
__AVR_AT90S1200__
attiny11
__AVR_ATtiny11__
attiny12
__AVR_ATtiny12__
attiny15
__AVR_ATtiny15__
attiny28
__AVR_ATtiny28__
at90s2313
__AVR_AT90S2313__
at90s2323
__AVR_AT90S2323__
at90s2333
__AVR_AT90S2333__
at90s2343
__AVR_AT90S2343__
attiny22
__AVR_ATtiny22__
attiny26
__AVR_ATtiny26__
at86rf401
__AVR_AT86RF401__
at90s4414
__AVR_AT90S4414__
at90s4433
__AVR_AT90S4433__
at90s4434
__AVR_AT90S4434__
at90s8515
__AVR_AT90S8515__
at90c8534
__AVR_AT90c8534__
at90s8535
__AVR_AT90S8535__
ata5272
__AVR_ATA5272__
attiny13
__AVR_ATtiny13__
attiny13a
__AVR_ATtiny13A__
attiny2313
__AVR_ATtiny2313__
attiny2313a
__AVR_ATtiny2313A__
attiny24
__AVR_ATtiny24__
attiny24a
__AVR_ATtiny24A__
attiny4313
__AVR_ATtiny4313__
attiny44
__AVR_ATtiny44__
attiny44a
__AVR_ATtiny44A__
attiny84
__AVR_ATtiny84__
attiny84a
__AVR_ATtiny84A__
attiny25
__AVR_ATtiny25__
attiny45
__AVR_ATtiny45__
attiny85
__AVR_ATtiny85__
attiny261
__AVR_ATtiny261__
attiny261a
__AVR_ATtiny261A__
attiny461
__AVR_ATtiny461__
attiny461a
__AVR_ATtiny461A__
attiny861
__AVR_ATtiny861__
attiny861a
__AVR_ATtiny861A__
attiny87
__AVR_ATtiny87__
attiny43u
__AVR_ATtiny43U__
attiny48
__AVR_ATtiny48__
attiny88
__AVR_ATtiny88__
attiny828
__AVR_ATtiny828__
at43usb355
__AVR_AT43USB355__
at76c711
__AVR_AT76C711__
atmega103
__AVR_ATmega103__
at43usb320
__AVR_AT43USB320__
attiny167
__AVR_ATtiny167__
at90usb82
__AVR_AT90USB82__
at90usb162
__AVR_AT90USB162__
ata5505
__AVR_ATA5505__
atmega8u2
__AVR_ATmega8U2__
atmega16u2
__AVR_ATmega16U2__
atmega32u2
__AVR_ATmega32U2__
attiny1634
__AVR_ATtiny1634__
atmega8
__AVR_ATmega8__
ata6289
__AVR_ATA6289__
atmega8a
__AVR_ATmega8A__
ata6285
__AVR_ATA6285__
ata6286
__AVR_ATA6286__
atmega48
__AVR_ATmega48__
atmega48a
__AVR_ATmega48A__
atmega48pa
__AVR_ATmega48PA__
atmega48p
__AVR_ATmega48P__
atmega88
__AVR_ATmega88__
atmega88a
__AVR_ATmega88A__
atmega88p
__AVR_ATmega88P__
atmega88pa
__AVR_ATmega88PA__
atmega8515
__AVR_ATmega8515__
atmega8535
__AVR_ATmega8535__
atmega8hva
__AVR_ATmega8HVA__
at90pwm1
__AVR_AT90PWM1__
at90pwm2
__AVR_AT90PWM2__
at90pwm2b
__AVR_AT90PWM2B__
at90pwm3
__AVR_AT90PWM3__
at90pwm3b
__AVR_AT90PWM3B__
at90pwm81
__AVR_AT90PWM81__
ata5790
__AVR_ATA5790__
ata5795
__AVR_ATA5795__
atmega16
__AVR_ATmega16__
atmega16a
__AVR_ATmega16A__
atmega161
__AVR_ATmega161__
atmega162
__AVR_ATmega162__
atmega163
__AVR_ATmega163__
atmega164a
__AVR_ATmega164A__
atmega164p
__AVR_ATmega164P__
atmega164pa
__AVR_ATmega164PA__
atmega165
__AVR_ATmega165__
atmega165a
__AVR_ATmega165A__
atmega165p
__AVR_ATmega165P__
atmega165pa
__AVR_ATmega165PA__
atmega168
__AVR_ATmega168__
atmega168a
__AVR_ATmega168A__
atmega168p
__AVR_ATmega168P__
atmega168pa
__AVR_ATmega168PA__
atmega169
__AVR_ATmega169__
atmega169a
__AVR_ATmega169A__
atmega169p
__AVR_ATmega169P__
atmega169pa
__AVR_ATmega169PA__
atmega32
__AVR_ATmega32__
atmega32a
__AVR_ATmega32A__
atmega323
__AVR_ATmega323__
atmega324a
__AVR_ATmega324A__
atmega324p
__AVR_ATmega324P__
atmega324pa
__AVR_ATmega324PA__
atmega325
__AVR_ATmega325__
atmega325a
__AVR_ATmega325A__
atmega325p
__AVR_ATmega325P__
atmega325pa
__AVR_ATmega325PA__
atmega3250
__AVR_ATmega3250__
atmega3250a
__AVR_ATmega3250A__
atmega3250p
__AVR_ATmega3250P__
atmega3250pa
__AVR_ATmega3250PA__
atmega328
__AVR_ATmega328__
atmega328p
__AVR_ATmega328P__
atmega329
__AVR_ATmega329__
atmega329a
__AVR_ATmega329A__
atmega329p
__AVR_ATmega329P__
atmega329pa
__AVR_ATmega329PA__
atmega3290
__AVR_ATmega3290__
atmega3290a
__AVR_ATmega3290A__
atmega3290p
__AVR_ATmega3290P__
atmega3290pa
__AVR_ATmega3290PA__
atmega406
__AVR_ATmega406__
atmega64
__AVR_ATmega64__
atmega64a
__AVR_ATmega64A__
atmega640
__AVR_ATmega640__
atmega644
__AVR_ATmega644__
atmega644a
__AVR_ATmega644A__
atmega644p
__AVR_ATmega644P__
atmega644pa
__AVR_ATmega644PA__
atmega645
__AVR_ATmega645__
atmega645a
__AVR_ATmega645A__
atmega645p
__AVR_ATmega645P__
atmega649
__AVR_ATmega649__
atmega649a
__AVR_ATmega649A__
atmega649p
__AVR_ATmega649P__
atmega6450
__AVR_ATmega6450__
atmega6450a
__AVR_ATmega6450A__
atmega6450p
__AVR_ATmega6450P__
atmega6490
__AVR_ATmega6490__
atmega6490a
__AVR_ATmega6490A__
atmega6490p
__AVR_ATmega6490P__
atmega64rfr2
__AVR_ATmega64RFR2__
atmega644rfr2
__AVR_ATmega644RFR2__
atmega16hva
__AVR_ATmega16HVA__
atmega16hva2
__AVR_ATmega16HVA2__
atmega16hvb
__AVR_ATmega16HVB__
atmega16hvbrevb
__AVR_ATmega16HVBREVB__
atmega32hvb
__AVR_ATmega32HVB__
atmega32hvbrevb
__AVR_ATmega32HVBREVB__
atmega64hve
__AVR_ATmega64HVE__
at90can32
__AVR_AT90CAN32__
at90can64
__AVR_AT90CAN64__
at90pwm161
__AVR_AT90PWM161__
at90pwm216
__AVR_AT90PWM216__
at90pwm316
__AVR_AT90PWM316__
atmega32c1
__AVR_ATmega32C1__
atmega64c1
__AVR_ATmega64C1__
atmega16m1
__AVR_ATmega16M1__
atmega32m1
__AVR_ATmega32M1__
atmega64m1
__AVR_ATmega64M1__
atmega16u4
__AVR_ATmega16U4__
atmega32u4
__AVR_ATmega32U4__
atmega32u6
__AVR_ATmega32U6__
at90usb646
__AVR_AT90USB646__
at90usb647
__AVR_AT90USB647__
at90scr100
__AVR_AT90SCR100__
at94k
__AVR_AT94K__
m3000
__AVR_AT000__
atmega128
__AVR_ATmega128__
atmega128a
__AVR_ATmega128A__
atmega1280
__AVR_ATmega1280__
atmega1281
__AVR_ATmega1281__
atmega1284
__AVR_ATmega1284__
atmega1284p
__AVR_ATmega1284P__
atmega128rfa1
__AVR_ATmega128RFA1__
atmega128rfr2
__AVR_ATmega128RFR2__
atmega1284rfr2
__AVR_ATmega1284RFR2__
at90can128
__AVR_AT90CAN128__
at90usb1286
__AVR_AT90USB1286__
at90usb1287
__AVR_AT90USB1287__
atmega2560
__AVR_ATmega2560__
atmega2561
__AVR_ATmega2561__
atmega256rfr2
__AVR_ATmega256RFR2__
atmega2564rfr2
__AVR_ATmega2564RFR2__
atxmega16a4
__AVR_ATxmega16A4__
atxmega16a4u
__AVR_ATxmega16a4U__
atxmega16c4
__AVR_ATxmega16C4__
atxmega16d4
__AVR_ATxmega16D4__
atxmega32a4
__AVR_ATxmega32A4__
atxmega32a4u
__AVR_ATxmega32A4U__
atxmega32c4
__AVR_ATxmega32C4__
atxmega32d4
__AVR_ATxmega32D4__
atxmega32e5
__AVR_ATxmega32E5__
atxmega16e5
__AVR_ATxmega16E5__
atxmega8e5
__AVR_ATxmega8E5__
atxmega32x1
__AVR_ATxmega32X1__
atxmega64a3
__AVR_ATxmega64A3__
atxmega64a3u
__AVR_ATxmega64A3U__
atxmega64a4u
__AVR_ATxmega64A4U__
atxmega64b1
__AVR_ATxmega64B1__
atxmega64b3
__AVR_ATxmega64B3__
atxmega64c3
__AVR_ATxmega64C3__
atxmega64d3
__AVR_ATxmega64D3__
atxmega64d4
__AVR_ATxmega64D4__
atxmega64a1
__AVR_ATxmega64A1__
atxmega64a1u
__AVR_ATxmega64A1U__
atxmega128a3
__AVR_ATxmega128A3__
atxmega128a3u
__AVR_ATxmega128A3U__
atxmega128b1
__AVR_ATxmega128B1__
atxmega128b3
__AVR_ATxmega128B3__
atxmega128c3
__AVR_ATxmega128C3__
atxmega128d3
__AVR_ATxmega128D3__
atxmega128d4
__AVR_ATxmega128D4__
atxmega192a3
__AVR_ATxmega192A3__
atxmega192a3u
__AVR_ATxmega192A3U__
atxmega192c3
__AVR_ATxmega192C3__
atxmega192d3
__AVR_ATxmega192D3__
atxmega256a3
__AVR_ATxmega256A3__
atxmega256a3u
__AVR_ATxmega256A3U__
atxmega256a3b
__AVR_ATxmega256A3B__
atxmega256a3bu
__AVR_ATxmega256A3BU__
atxmega256c3
__AVR_ATxmega256C3__
atxmega256d3
__AVR_ATxmega256D3__
atxmega384c3
__AVR_ATxmega384C3__
atxmega384d3
__AVR_ATxmega384D3__
atxmega128a1
__AVR_ATxmega128A1__
atxmega128a1u
__AVR_ATxmega128A1U__
atxmega128a4u
__AVR_ATxmega128a4U__
attiny4
__AVR_ATtiny4__
attiny5
__AVR_ATtiny5__
attiny9
__AVR_ATtiny9__
attiny10
__AVR_ATtiny10__
attiny20
__AVR_ATtiny20__
attiny40
__AVR_ATtiny40__
attiny102
__AVR_ATtiny102__
attiny104
__AVR_ATtiny104__
__AVR
__AVR__
__ARMEB__
__ARM_BIG_ENDIAN
_M_ARM_NT
_M_ARMT
_M_ARM
_M_THUMB
_M_ARM_FP
_ARM_
__gnu_mcount_nc
E-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128
__AARCH64EB__
__AARCH_BIG_ENDIAN
e-m:w-p:64:64-i32:32-i64:64-i128:128-n32:64-S128
_M_ARM64
__AARCH64_SIMD__
__ARM64_ARCH_8__
__LITTLE_ENDIAN__
__arm64
__arm64__
_mcount
mcount
lanai
__lanai__
__LANAI_V11__
hvx-double
long-calls
+hvx
-hvx
+hvx-double
-hvx-double
+long-calls
-long-calls
hexagonv4
hexagonv5
hexagonv55
hexagonv60
hexagonv62
__builtin_SI_to_SXTHI_asrh
__builtin_brev_ldd
LLi*LLi*LLi*i
__builtin_brev_ldw
i*i*i*i
__builtin_brev_ldh
s*s*s*i
__builtin_brev_lduh
Us*Us*Us*i
__builtin_brev_ldb
c*c*c*i
__builtin_brev_ldub
Uc*Uc*Uc*i
__builtin_circ_ldd
LLi*LLi*LLi*iIi
__builtin_circ_ldw
i*i*i*iIi
__builtin_circ_ldh
s*s*s*iIi
__builtin_circ_lduh
Us*Us*Us*iIi
__builtin_circ_ldb
c*c*c*iIi
__builtin_circ_ldub
Uc*Uc*Uc*iIi
__builtin_brev_std
LLi*LLi*LLii
__builtin_brev_stw
i*i*ii
__builtin_brev_sth
s*s*ii
__builtin_brev_sthhi
__builtin_brev_stb
c*c*ii
__builtin_circ_std
LLi*LLi*LLiiIi
__builtin_circ_stw
i*i*iiIi
__builtin_circ_sth
s*s*iiIi
__builtin_circ_sthhi
__builtin_circ_stb
c*c*iiIi
__builtin_HEXAGON_C2_cmpeq
__builtin_HEXAGON_C2_cmpgt
__builtin_HEXAGON_C2_cmpgtu
__builtin_HEXAGON_C2_cmpeqp
iLLiLLi
__builtin_HEXAGON_C2_cmpgtp
__builtin_HEXAGON_C2_cmpgtup
__builtin_HEXAGON_A4_rcmpeqi
__builtin_HEXAGON_A4_rcmpneqi
__builtin_HEXAGON_A4_rcmpeq
__builtin_HEXAGON_A4_rcmpneq
__builtin_HEXAGON_C2_bitsset
__builtin_HEXAGON_C2_bitsclr
__builtin_HEXAGON_C4_nbitsset
__builtin_HEXAGON_C4_nbitsclr
__builtin_HEXAGON_C2_cmpeqi
__builtin_HEXAGON_C2_cmpgti
__builtin_HEXAGON_C2_cmpgtui
__builtin_HEXAGON_C2_cmpgei
__builtin_HEXAGON_C2_cmpgeui
__builtin_HEXAGON_C2_cmplt
__builtin_HEXAGON_C2_cmpltu
__builtin_HEXAGON_C2_bitsclri
__builtin_HEXAGON_C4_nbitsclri
__builtin_HEXAGON_C4_cmpneqi
__builtin_HEXAGON_C4_cmpltei
__builtin_HEXAGON_C4_cmplteui
__builtin_HEXAGON_C4_cmpneq
__builtin_HEXAGON_C4_cmplte
__builtin_HEXAGON_C4_cmplteu
__builtin_HEXAGON_C2_and
__builtin_HEXAGON_C2_or
__builtin_HEXAGON_C2_xor
__builtin_HEXAGON_C2_andn
__builtin_HEXAGON_C2_not
__builtin_HEXAGON_C2_orn
__builtin_HEXAGON_C4_and_and
__builtin_HEXAGON_C4_and_or
__builtin_HEXAGON_C4_or_and
__builtin_HEXAGON_C4_or_or
__builtin_HEXAGON_C4_and_andn
__builtin_HEXAGON_C4_and_orn
__builtin_HEXAGON_C4_or_andn
__builtin_HEXAGON_C4_or_orn
__builtin_HEXAGON_C2_pxfer_map
__builtin_HEXAGON_C2_any8
__builtin_HEXAGON_C2_all8
__builtin_HEXAGON_C2_vitpack
__builtin_HEXAGON_C2_mux
__builtin_HEXAGON_C2_muxii
__builtin_HEXAGON_C2_muxir
__builtin_HEXAGON_C2_muxri
__builtin_HEXAGON_C2_vmux
LLiiLLiLLi
__builtin_HEXAGON_C2_mask
LLii
__builtin_HEXAGON_A2_vcmpbeq
__builtin_HEXAGON_A4_vcmpbeqi
__builtin_HEXAGON_A4_vcmpbeq_any
__builtin_HEXAGON_A2_vcmpbgtu
__builtin_HEXAGON_A4_vcmpbgtui
__builtin_HEXAGON_A4_vcmpbgt
__builtin_HEXAGON_A4_vcmpbgti
__builtin_HEXAGON_A4_cmpbeq
__builtin_HEXAGON_A4_cmpbeqi
__builtin_HEXAGON_A4_cmpbgtu
__builtin_HEXAGON_A4_cmpbgtui
__builtin_HEXAGON_A4_cmpbgt
__builtin_HEXAGON_A4_cmpbgti
__builtin_HEXAGON_A2_vcmpheq
__builtin_HEXAGON_A2_vcmphgt
__builtin_HEXAGON_A2_vcmphgtu
__builtin_HEXAGON_A4_vcmpheqi
__builtin_HEXAGON_A4_vcmphgti
__builtin_HEXAGON_A4_vcmphgtui
__builtin_HEXAGON_A4_cmpheq
__builtin_HEXAGON_A4_cmphgt
__builtin_HEXAGON_A4_cmphgtu
__builtin_HEXAGON_A4_cmpheqi
__builtin_HEXAGON_A4_cmphgti
__builtin_HEXAGON_A4_cmphgtui
__builtin_HEXAGON_A2_vcmpweq
__builtin_HEXAGON_A2_vcmpwgt
__builtin_HEXAGON_A2_vcmpwgtu
__builtin_HEXAGON_A4_vcmpweqi
__builtin_HEXAGON_A4_vcmpwgti
__builtin_HEXAGON_A4_vcmpwgtui
__builtin_HEXAGON_A4_boundscheck
iiLLi
__builtin_HEXAGON_A4_tlbmatch
__builtin_HEXAGON_C2_tfrpr
__builtin_HEXAGON_C2_tfrrp
__builtin_HEXAGON_C4_fastcorner9
__builtin_HEXAGON_C4_fastcorner9_not
__builtin_HEXAGON_M2_mpy_acc_hh_s0
__builtin_HEXAGON_M2_mpy_acc_hh_s1
__builtin_HEXAGON_M2_mpy_acc_hl_s0
__builtin_HEXAGON_M2_mpy_acc_hl_s1
__builtin_HEXAGON_M2_mpy_acc_lh_s0
__builtin_HEXAGON_M2_mpy_acc_lh_s1
__builtin_HEXAGON_M2_mpy_acc_ll_s0
__builtin_HEXAGON_M2_mpy_acc_ll_s1
__builtin_HEXAGON_M2_mpy_nac_hh_s0
__builtin_HEXAGON_M2_mpy_nac_hh_s1
__builtin_HEXAGON_M2_mpy_nac_hl_s0
__builtin_HEXAGON_M2_mpy_nac_hl_s1
__builtin_HEXAGON_M2_mpy_nac_lh_s0
__builtin_HEXAGON_M2_mpy_nac_lh_s1
__builtin_HEXAGON_M2_mpy_nac_ll_s0
__builtin_HEXAGON_M2_mpy_nac_ll_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s0
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s0
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s1
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s0
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s0
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s0
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s1
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s0
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s1
__builtin_HEXAGON_M2_mpy_hh_s0
__builtin_HEXAGON_M2_mpy_hh_s1
__builtin_HEXAGON_M2_mpy_hl_s0
__builtin_HEXAGON_M2_mpy_hl_s1
__builtin_HEXAGON_M2_mpy_lh_s0
__builtin_HEXAGON_M2_mpy_lh_s1
__builtin_HEXAGON_M2_mpy_ll_s0
__builtin_HEXAGON_M2_mpy_ll_s1
__builtin_HEXAGON_M2_mpy_sat_hh_s0
__builtin_HEXAGON_M2_mpy_sat_hh_s1
__builtin_HEXAGON_M2_mpy_sat_hl_s0
__builtin_HEXAGON_M2_mpy_sat_hl_s1
__builtin_HEXAGON_M2_mpy_sat_lh_s0
__builtin_HEXAGON_M2_mpy_sat_lh_s1
__builtin_HEXAGON_M2_mpy_sat_ll_s0
__builtin_HEXAGON_M2_mpy_sat_ll_s1
__builtin_HEXAGON_M2_mpy_rnd_hh_s0
__builtin_HEXAGON_M2_mpy_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_rnd_hl_s0
__builtin_HEXAGON_M2_mpy_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_rnd_lh_s0
__builtin_HEXAGON_M2_mpy_rnd_lh_s1
__builtin_HEXAGON_M2_mpy_rnd_ll_s0
__builtin_HEXAGON_M2_mpy_rnd_ll_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s1
__builtin_HEXAGON_M2_mpyd_acc_hh_s0
__builtin_HEXAGON_M2_mpyd_acc_hh_s1
__builtin_HEXAGON_M2_mpyd_acc_hl_s0
__builtin_HEXAGON_M2_mpyd_acc_hl_s1
__builtin_HEXAGON_M2_mpyd_acc_lh_s0
__builtin_HEXAGON_M2_mpyd_acc_lh_s1
__builtin_HEXAGON_M2_mpyd_acc_ll_s0
__builtin_HEXAGON_M2_mpyd_acc_ll_s1
__builtin_HEXAGON_M2_mpyd_nac_hh_s0
__builtin_HEXAGON_M2_mpyd_nac_hh_s1
__builtin_HEXAGON_M2_mpyd_nac_hl_s0
__builtin_HEXAGON_M2_mpyd_nac_hl_s1
__builtin_HEXAGON_M2_mpyd_nac_lh_s0
__builtin_HEXAGON_M2_mpyd_nac_lh_s1
__builtin_HEXAGON_M2_mpyd_nac_ll_s0
__builtin_HEXAGON_M2_mpyd_nac_ll_s1
__builtin_HEXAGON_M2_mpyd_hh_s0
__builtin_HEXAGON_M2_mpyd_hh_s1
__builtin_HEXAGON_M2_mpyd_hl_s0
__builtin_HEXAGON_M2_mpyd_hl_s1
__builtin_HEXAGON_M2_mpyd_lh_s0
__builtin_HEXAGON_M2_mpyd_lh_s1
__builtin_HEXAGON_M2_mpyd_ll_s0
__builtin_HEXAGON_M2_mpyd_ll_s1
__builtin_HEXAGON_M2_mpyd_rnd_hh_s0
__builtin_HEXAGON_M2_mpyd_rnd_hh_s1
__builtin_HEXAGON_M2_mpyd_rnd_hl_s0
__builtin_HEXAGON_M2_mpyd_rnd_hl_s1
__builtin_HEXAGON_M2_mpyd_rnd_lh_s0
__builtin_HEXAGON_M2_mpyd_rnd_lh_s1
__builtin_HEXAGON_M2_mpyd_rnd_ll_s0
__builtin_HEXAGON_M2_mpyd_rnd_ll_s1
__builtin_HEXAGON_M2_mpyu_acc_hh_s0
__builtin_HEXAGON_M2_mpyu_acc_hh_s1
__builtin_HEXAGON_M2_mpyu_acc_hl_s0
__builtin_HEXAGON_M2_mpyu_acc_hl_s1
__builtin_HEXAGON_M2_mpyu_acc_lh_s0
__builtin_HEXAGON_M2_mpyu_acc_lh_s1
__builtin_HEXAGON_M2_mpyu_acc_ll_s0
__builtin_HEXAGON_M2_mpyu_acc_ll_s1
__builtin_HEXAGON_M2_mpyu_nac_hh_s0
__builtin_HEXAGON_M2_mpyu_nac_hh_s1
__builtin_HEXAGON_M2_mpyu_nac_hl_s0
__builtin_HEXAGON_M2_mpyu_nac_hl_s1
__builtin_HEXAGON_M2_mpyu_nac_lh_s0
__builtin_HEXAGON_M2_mpyu_nac_lh_s1
__builtin_HEXAGON_M2_mpyu_nac_ll_s0
__builtin_HEXAGON_M2_mpyu_nac_ll_s1
__builtin_HEXAGON_M2_mpyu_hh_s0
Uiii
__builtin_HEXAGON_M2_mpyu_hh_s1
__builtin_HEXAGON_M2_mpyu_hl_s0
__builtin_HEXAGON_M2_mpyu_hl_s1
__builtin_HEXAGON_M2_mpyu_lh_s0
__builtin_HEXAGON_M2_mpyu_lh_s1
__builtin_HEXAGON_M2_mpyu_ll_s0
__builtin_HEXAGON_M2_mpyu_ll_s1
__builtin_HEXAGON_M2_mpyud_acc_hh_s0
__builtin_HEXAGON_M2_mpyud_acc_hh_s1
__builtin_HEXAGON_M2_mpyud_acc_hl_s0
__builtin_HEXAGON_M2_mpyud_acc_hl_s1
__builtin_HEXAGON_M2_mpyud_acc_lh_s0
__builtin_HEXAGON_M2_mpyud_acc_lh_s1
__builtin_HEXAGON_M2_mpyud_acc_ll_s0
__builtin_HEXAGON_M2_mpyud_acc_ll_s1
__builtin_HEXAGON_M2_mpyud_nac_hh_s0
__builtin_HEXAGON_M2_mpyud_nac_hh_s1
__builtin_HEXAGON_M2_mpyud_nac_hl_s0
__builtin_HEXAGON_M2_mpyud_nac_hl_s1
__builtin_HEXAGON_M2_mpyud_nac_lh_s0
__builtin_HEXAGON_M2_mpyud_nac_lh_s1
__builtin_HEXAGON_M2_mpyud_nac_ll_s0
__builtin_HEXAGON_M2_mpyud_nac_ll_s1
__builtin_HEXAGON_M2_mpyud_hh_s0
ULLiii
__builtin_HEXAGON_M2_mpyud_hh_s1
__builtin_HEXAGON_M2_mpyud_hl_s0
__builtin_HEXAGON_M2_mpyud_hl_s1
__builtin_HEXAGON_M2_mpyud_lh_s0
__builtin_HEXAGON_M2_mpyud_lh_s1
__builtin_HEXAGON_M2_mpyud_ll_s0
__builtin_HEXAGON_M2_mpyud_ll_s1
__builtin_HEXAGON_M2_mpysmi
__builtin_HEXAGON_M2_macsip
__builtin_HEXAGON_M2_macsin
__builtin_HEXAGON_M2_dpmpyss_s0
__builtin_HEXAGON_M2_dpmpyss_acc_s0
__builtin_HEXAGON_M2_dpmpyss_nac_s0
__builtin_HEXAGON_M2_dpmpyuu_s0
__builtin_HEXAGON_M2_dpmpyuu_acc_s0
__builtin_HEXAGON_M2_dpmpyuu_nac_s0
__builtin_HEXAGON_M2_mpy_up
__builtin_HEXAGON_M2_mpy_up_s1
__builtin_HEXAGON_M2_mpy_up_s1_sat
__builtin_HEXAGON_M2_mpyu_up
__builtin_HEXAGON_M2_mpysu_up
__builtin_HEXAGON_M2_dpmpyss_rnd_s0
__builtin_HEXAGON_M4_mac_up_s1_sat
__builtin_HEXAGON_M4_nac_up_s1_sat
__builtin_HEXAGON_M2_mpyi
__builtin_HEXAGON_M2_mpyui
__builtin_HEXAGON_M2_maci
__builtin_HEXAGON_M2_acci
__builtin_HEXAGON_M2_accii
__builtin_HEXAGON_M2_nacci
__builtin_HEXAGON_M2_naccii
__builtin_HEXAGON_M2_subacc
__builtin_HEXAGON_M4_mpyrr_addr
__builtin_HEXAGON_M4_mpyri_addr_u2
__builtin_HEXAGON_M4_mpyri_addr
__builtin_HEXAGON_M4_mpyri_addi
__builtin_HEXAGON_M4_mpyrr_addi
__builtin_HEXAGON_M2_vmpy2s_s0
__builtin_HEXAGON_M2_vmpy2s_s1
__builtin_HEXAGON_M2_vmac2s_s0
__builtin_HEXAGON_M2_vmac2s_s1
__builtin_HEXAGON_M2_vmpy2su_s0
__builtin_HEXAGON_M2_vmpy2su_s1
__builtin_HEXAGON_M2_vmac2su_s0
__builtin_HEXAGON_M2_vmac2su_s1
__builtin_HEXAGON_M2_vmpy2s_s0pack
__builtin_HEXAGON_M2_vmpy2s_s1pack
__builtin_HEXAGON_M2_vmac2
__builtin_HEXAGON_M2_vmpy2es_s0
__builtin_HEXAGON_M2_vmpy2es_s1
__builtin_HEXAGON_M2_vmac2es_s0
LLiLLiLLiLLi
__builtin_HEXAGON_M2_vmac2es_s1
__builtin_HEXAGON_M2_vmac2es
__builtin_HEXAGON_M2_vrmac_s0
__builtin_HEXAGON_M2_vrmpy_s0
__builtin_HEXAGON_M2_vdmpyrs_s0
__builtin_HEXAGON_M2_vdmpyrs_s1
__builtin_HEXAGON_M5_vrmpybuu
__builtin_HEXAGON_M5_vrmacbuu
__builtin_HEXAGON_M5_vrmpybsu
__builtin_HEXAGON_M5_vrmacbsu
__builtin_HEXAGON_M5_vmpybuu
__builtin_HEXAGON_M5_vmpybsu
__builtin_HEXAGON_M5_vmacbuu
__builtin_HEXAGON_M5_vmacbsu
__builtin_HEXAGON_M5_vdmpybsu
__builtin_HEXAGON_M5_vdmacbsu
__builtin_HEXAGON_M2_vdmacs_s0
__builtin_HEXAGON_M2_vdmacs_s1
__builtin_HEXAGON_M2_vdmpys_s0
__builtin_HEXAGON_M2_vdmpys_s1
__builtin_HEXAGON_M2_cmpyrs_s0
__builtin_HEXAGON_M2_cmpyrs_s1
__builtin_HEXAGON_M2_cmpyrsc_s0
__builtin_HEXAGON_M2_cmpyrsc_s1
__builtin_HEXAGON_M2_cmacs_s0
__builtin_HEXAGON_M2_cmacs_s1
__builtin_HEXAGON_M2_cmacsc_s0
__builtin_HEXAGON_M2_cmacsc_s1
__builtin_HEXAGON_M2_cmpys_s0
__builtin_HEXAGON_M2_cmpys_s1
__builtin_HEXAGON_M2_cmpysc_s0
__builtin_HEXAGON_M2_cmpysc_s1
__builtin_HEXAGON_M2_cnacs_s0
__builtin_HEXAGON_M2_cnacs_s1
__builtin_HEXAGON_M2_cnacsc_s0
__builtin_HEXAGON_M2_cnacsc_s1
__builtin_HEXAGON_M2_vrcmpys_s1
__builtin_HEXAGON_M2_vrcmpys_acc_s1
LLiLLiLLii
__builtin_HEXAGON_M2_vrcmpys_s1rp
__builtin_HEXAGON_M2_mmacls_s0
__builtin_HEXAGON_M2_mmacls_s1
__builtin_HEXAGON_M2_mmachs_s0
__builtin_HEXAGON_M2_mmachs_s1
__builtin_HEXAGON_M2_mmpyl_s0
__builtin_HEXAGON_M2_mmpyl_s1
__builtin_HEXAGON_M2_mmpyh_s0
__builtin_HEXAGON_M2_mmpyh_s1
__builtin_HEXAGON_M2_mmacls_rs0
__builtin_HEXAGON_M2_mmacls_rs1
__builtin_HEXAGON_M2_mmachs_rs0
__builtin_HEXAGON_M2_mmachs_rs1
__builtin_HEXAGON_M2_mmpyl_rs0
__builtin_HEXAGON_M2_mmpyl_rs1
__builtin_HEXAGON_M2_mmpyh_rs0
__builtin_HEXAGON_M2_mmpyh_rs1
__builtin_HEXAGON_M4_vrmpyeh_s0
__builtin_HEXAGON_M4_vrmpyeh_s1
__builtin_HEXAGON_M4_vrmpyeh_acc_s0
__builtin_HEXAGON_M4_vrmpyeh_acc_s1
__builtin_HEXAGON_M4_vrmpyoh_s0
__builtin_HEXAGON_M4_vrmpyoh_s1
__builtin_HEXAGON_M4_vrmpyoh_acc_s0
__builtin_HEXAGON_M4_vrmpyoh_acc_s1
__builtin_HEXAGON_M2_hmmpyl_rs1
__builtin_HEXAGON_M2_hmmpyh_rs1
__builtin_HEXAGON_M2_hmmpyl_s1
__builtin_HEXAGON_M2_hmmpyh_s1
__builtin_HEXAGON_M2_mmaculs_s0
__builtin_HEXAGON_M2_mmaculs_s1
__builtin_HEXAGON_M2_mmacuhs_s0
__builtin_HEXAGON_M2_mmacuhs_s1
__builtin_HEXAGON_M2_mmpyul_s0
__builtin_HEXAGON_M2_mmpyul_s1
__builtin_HEXAGON_M2_mmpyuh_s0
__builtin_HEXAGON_M2_mmpyuh_s1
__builtin_HEXAGON_M2_mmaculs_rs0
__builtin_HEXAGON_M2_mmaculs_rs1
__builtin_HEXAGON_M2_mmacuhs_rs0
__builtin_HEXAGON_M2_mmacuhs_rs1
__builtin_HEXAGON_M2_mmpyul_rs0
__builtin_HEXAGON_M2_mmpyul_rs1
__builtin_HEXAGON_M2_mmpyuh_rs0
__builtin_HEXAGON_M2_mmpyuh_rs1
__builtin_HEXAGON_M2_vrcmaci_s0
__builtin_HEXAGON_M2_vrcmacr_s0
__builtin_HEXAGON_M2_vrcmaci_s0c
__builtin_HEXAGON_M2_vrcmacr_s0c
__builtin_HEXAGON_M2_cmaci_s0
__builtin_HEXAGON_M2_cmacr_s0
__builtin_HEXAGON_M2_vrcmpyi_s0
__builtin_HEXAGON_M2_vrcmpyr_s0
__builtin_HEXAGON_M2_vrcmpyi_s0c
__builtin_HEXAGON_M2_vrcmpyr_s0c
__builtin_HEXAGON_M2_cmpyi_s0
__builtin_HEXAGON_M2_cmpyr_s0
__builtin_HEXAGON_M4_cmpyi_wh
__builtin_HEXAGON_M4_cmpyr_wh
__builtin_HEXAGON_M4_cmpyi_whc
__builtin_HEXAGON_M4_cmpyr_whc
__builtin_HEXAGON_M2_vcmpy_s0_sat_i
__builtin_HEXAGON_M2_vcmpy_s0_sat_r
__builtin_HEXAGON_M2_vcmpy_s1_sat_i
__builtin_HEXAGON_M2_vcmpy_s1_sat_r
__builtin_HEXAGON_M2_vcmac_s0_sat_i
__builtin_HEXAGON_M2_vcmac_s0_sat_r
__builtin_HEXAGON_S2_vcrotate
__builtin_HEXAGON_S4_vrcrotate_acc
LLiLLiLLiii
__builtin_HEXAGON_S4_vrcrotate
__builtin_HEXAGON_S2_vcnegh
__builtin_HEXAGON_S2_vrcnegh
__builtin_HEXAGON_M4_pmpyw
__builtin_HEXAGON_M4_vpmpyh
__builtin_HEXAGON_M4_pmpyw_acc
__builtin_HEXAGON_M4_vpmpyh_acc
__builtin_HEXAGON_A2_add
__builtin_HEXAGON_A2_sub
__builtin_HEXAGON_A2_addsat
__builtin_HEXAGON_A2_subsat
__builtin_HEXAGON_A2_addi
__builtin_HEXAGON_A2_addh_l16_ll
__builtin_HEXAGON_A2_addh_l16_hl
__builtin_HEXAGON_A2_addh_l16_sat_ll
__builtin_HEXAGON_A2_addh_l16_sat_hl
__builtin_HEXAGON_A2_subh_l16_ll
__builtin_HEXAGON_A2_subh_l16_hl
__builtin_HEXAGON_A2_subh_l16_sat_ll
__builtin_HEXAGON_A2_subh_l16_sat_hl
__builtin_HEXAGON_A2_addh_h16_ll
__builtin_HEXAGON_A2_addh_h16_lh
__builtin_HEXAGON_A2_addh_h16_hl
__builtin_HEXAGON_A2_addh_h16_hh
__builtin_HEXAGON_A2_addh_h16_sat_ll
__builtin_HEXAGON_A2_addh_h16_sat_lh
__builtin_HEXAGON_A2_addh_h16_sat_hl
__builtin_HEXAGON_A2_addh_h16_sat_hh
__builtin_HEXAGON_A2_subh_h16_ll
__builtin_HEXAGON_A2_subh_h16_lh
__builtin_HEXAGON_A2_subh_h16_hl
__builtin_HEXAGON_A2_subh_h16_hh
__builtin_HEXAGON_A2_subh_h16_sat_ll
__builtin_HEXAGON_A2_subh_h16_sat_lh
__builtin_HEXAGON_A2_subh_h16_sat_hl
__builtin_HEXAGON_A2_subh_h16_sat_hh
__builtin_HEXAGON_A2_aslh
__builtin_HEXAGON_A2_asrh
__builtin_HEXAGON_A2_addp
__builtin_HEXAGON_A2_addpsat
__builtin_HEXAGON_A2_addsp
LLiiLLi
__builtin_HEXAGON_A2_subp
__builtin_HEXAGON_A2_neg
__builtin_HEXAGON_A2_negsat
__builtin_HEXAGON_A2_abs
__builtin_HEXAGON_A2_abssat
__builtin_HEXAGON_A2_vconj
LLiLLi
__builtin_HEXAGON_A2_negp
__builtin_HEXAGON_A2_absp
__builtin_HEXAGON_A2_max
__builtin_HEXAGON_A2_maxu
__builtin_HEXAGON_A2_min
__builtin_HEXAGON_A2_minu
__builtin_HEXAGON_A2_maxp
__builtin_HEXAGON_A2_maxup
ULLiLLiLLi
__builtin_HEXAGON_A2_minp
__builtin_HEXAGON_A2_minup
__builtin_HEXAGON_A2_tfr
__builtin_HEXAGON_A2_tfrsi
__builtin_HEXAGON_A2_tfrp
__builtin_HEXAGON_A2_tfrpi
__builtin_HEXAGON_A2_zxtb
__builtin_HEXAGON_A2_sxtb
__builtin_HEXAGON_A2_zxth
__builtin_HEXAGON_A2_sxth
__builtin_HEXAGON_A2_combinew
__builtin_HEXAGON_A4_combineri
__builtin_HEXAGON_A4_combineir
__builtin_HEXAGON_A2_combineii
__builtin_HEXAGON_A2_combine_hh
__builtin_HEXAGON_A2_combine_hl
__builtin_HEXAGON_A2_combine_lh
__builtin_HEXAGON_A2_combine_ll
__builtin_HEXAGON_A2_tfril
__builtin_HEXAGON_A2_tfrih
__builtin_HEXAGON_A2_and
__builtin_HEXAGON_A2_or
__builtin_HEXAGON_A2_xor
__builtin_HEXAGON_A2_not
__builtin_HEXAGON_M2_xor_xacc
__builtin_HEXAGON_M4_xor_xacc
__builtin_HEXAGON_A4_andn
__builtin_HEXAGON_A4_orn
__builtin_HEXAGON_A4_andnp
__builtin_HEXAGON_A4_ornp
__builtin_HEXAGON_S4_addaddi
__builtin_HEXAGON_S4_subaddi
__builtin_HEXAGON_M4_and_and
__builtin_HEXAGON_M4_and_andn
__builtin_HEXAGON_M4_and_or
__builtin_HEXAGON_M4_and_xor
__builtin_HEXAGON_M4_or_and
__builtin_HEXAGON_M4_or_andn
__builtin_HEXAGON_M4_or_or
__builtin_HEXAGON_M4_or_xor
__builtin_HEXAGON_S4_or_andix
__builtin_HEXAGON_S4_or_andi
__builtin_HEXAGON_S4_or_ori
__builtin_HEXAGON_M4_xor_and
__builtin_HEXAGON_M4_xor_or
__builtin_HEXAGON_M4_xor_andn
__builtin_HEXAGON_A2_subri
__builtin_HEXAGON_A2_andir
__builtin_HEXAGON_A2_orir
__builtin_HEXAGON_A2_andp
__builtin_HEXAGON_A2_orp
__builtin_HEXAGON_A2_xorp
__builtin_HEXAGON_A2_notp
__builtin_HEXAGON_A2_sxtw
__builtin_HEXAGON_A2_sat
iLLi
__builtin_HEXAGON_A2_roundsat
__builtin_HEXAGON_A2_sath
__builtin_HEXAGON_A2_satuh
__builtin_HEXAGON_A2_satub
__builtin_HEXAGON_A2_satb
__builtin_HEXAGON_A2_vaddub
__builtin_HEXAGON_A2_vaddb_map
__builtin_HEXAGON_A2_vaddubs
__builtin_HEXAGON_A2_vaddh
__builtin_HEXAGON_A2_vaddhs
__builtin_HEXAGON_A2_vadduhs
__builtin_HEXAGON_A5_vaddhubs
__builtin_HEXAGON_A2_vaddw
__builtin_HEXAGON_A2_vaddws
__builtin_HEXAGON_S4_vxaddsubw
__builtin_HEXAGON_S4_vxsubaddw
__builtin_HEXAGON_S4_vxaddsubh
__builtin_HEXAGON_S4_vxsubaddh
__builtin_HEXAGON_S4_vxaddsubhr
__builtin_HEXAGON_S4_vxsubaddhr
__builtin_HEXAGON_A2_svavgh
__builtin_HEXAGON_A2_svavghs
__builtin_HEXAGON_A2_svnavgh
__builtin_HEXAGON_A2_svaddh
__builtin_HEXAGON_A2_svaddhs
__builtin_HEXAGON_A2_svadduhs
__builtin_HEXAGON_A2_svsubh
__builtin_HEXAGON_A2_svsubhs
__builtin_HEXAGON_A2_svsubuhs
__builtin_HEXAGON_A2_vraddub
__builtin_HEXAGON_A2_vraddub_acc
__builtin_HEXAGON_M2_vraddh
__builtin_HEXAGON_M2_vradduh
__builtin_HEXAGON_A2_vsubub
__builtin_HEXAGON_A2_vsubb_map
__builtin_HEXAGON_A2_vsububs
__builtin_HEXAGON_A2_vsubh
__builtin_HEXAGON_A2_vsubhs
__builtin_HEXAGON_A2_vsubuhs
__builtin_HEXAGON_A2_vsubw
__builtin_HEXAGON_A2_vsubws
__builtin_HEXAGON_A2_vabsh
__builtin_HEXAGON_A2_vabshsat
__builtin_HEXAGON_A2_vabsw
__builtin_HEXAGON_A2_vabswsat
__builtin_HEXAGON_M2_vabsdiffw
__builtin_HEXAGON_M2_vabsdiffh
__builtin_HEXAGON_A2_vrsadub
__builtin_HEXAGON_A2_vrsadub_acc
__builtin_HEXAGON_A2_vavgub
__builtin_HEXAGON_A2_vavguh
__builtin_HEXAGON_A2_vavgh
__builtin_HEXAGON_A2_vnavgh
__builtin_HEXAGON_A2_vavgw
__builtin_HEXAGON_A2_vnavgw
__builtin_HEXAGON_A2_vavgwr
__builtin_HEXAGON_A2_vnavgwr
__builtin_HEXAGON_A2_vavgwcr
__builtin_HEXAGON_A2_vnavgwcr
__builtin_HEXAGON_A2_vavghcr
__builtin_HEXAGON_A2_vnavghcr
__builtin_HEXAGON_A2_vavguw
__builtin_HEXAGON_A2_vavguwr
__builtin_HEXAGON_A2_vavgubr
__builtin_HEXAGON_A2_vavguhr
__builtin_HEXAGON_A2_vavghr
__builtin_HEXAGON_A2_vnavghr
__builtin_HEXAGON_A4_round_ri
__builtin_HEXAGON_A4_round_rr
__builtin_HEXAGON_A4_round_ri_sat
__builtin_HEXAGON_A4_round_rr_sat
__builtin_HEXAGON_A4_cround_ri
__builtin_HEXAGON_A4_cround_rr
__builtin_HEXAGON_A4_vrminh
__builtin_HEXAGON_A4_vrmaxh
__builtin_HEXAGON_A4_vrminuh
__builtin_HEXAGON_A4_vrmaxuh
__builtin_HEXAGON_A4_vrminw
__builtin_HEXAGON_A4_vrmaxw
__builtin_HEXAGON_A4_vrminuw
__builtin_HEXAGON_A4_vrmaxuw
__builtin_HEXAGON_A2_vminb
__builtin_HEXAGON_A2_vmaxb
__builtin_HEXAGON_A2_vminub
__builtin_HEXAGON_A2_vmaxub
__builtin_HEXAGON_A2_vminh
__builtin_HEXAGON_A2_vmaxh
__builtin_HEXAGON_A2_vminuh
__builtin_HEXAGON_A2_vmaxuh
__builtin_HEXAGON_A2_vminw
__builtin_HEXAGON_A2_vmaxw
__builtin_HEXAGON_A2_vminuw
__builtin_HEXAGON_A2_vmaxuw
__builtin_HEXAGON_A4_modwrapu
__builtin_HEXAGON_F2_sfadd
__builtin_HEXAGON_F2_sfsub
__builtin_HEXAGON_F2_sfmpy
__builtin_HEXAGON_F2_sffma
__builtin_HEXAGON_F2_sffma_sc
ffffi
__builtin_HEXAGON_F2_sffms
__builtin_HEXAGON_F2_sffma_lib
__builtin_HEXAGON_F2_sffms_lib
__builtin_HEXAGON_F2_sfcmpeq
__builtin_HEXAGON_F2_sfcmpgt
__builtin_HEXAGON_F2_sfcmpge
__builtin_HEXAGON_F2_sfcmpuo
__builtin_HEXAGON_F2_sfmax
__builtin_HEXAGON_F2_sfmin
__builtin_HEXAGON_F2_sfclass
__builtin_HEXAGON_F2_sfimm_p
__builtin_HEXAGON_F2_sfimm_n
__builtin_HEXAGON_F2_sffixupn
__builtin_HEXAGON_F2_sffixupd
__builtin_HEXAGON_F2_sffixupr
__builtin_HEXAGON_F2_dfcmpeq
__builtin_HEXAGON_F2_dfcmpgt
__builtin_HEXAGON_F2_dfcmpge
__builtin_HEXAGON_F2_dfcmpuo
__builtin_HEXAGON_F2_dfclass
__builtin_HEXAGON_F2_dfimm_p
__builtin_HEXAGON_F2_dfimm_n
__builtin_HEXAGON_F2_conv_sf2df
__builtin_HEXAGON_F2_conv_df2sf
__builtin_HEXAGON_F2_conv_uw2sf
__builtin_HEXAGON_F2_conv_uw2df
__builtin_HEXAGON_F2_conv_w2sf
__builtin_HEXAGON_F2_conv_w2df
__builtin_HEXAGON_F2_conv_ud2sf
__builtin_HEXAGON_F2_conv_ud2df
__builtin_HEXAGON_F2_conv_d2sf
__builtin_HEXAGON_F2_conv_d2df
__builtin_HEXAGON_F2_conv_sf2uw
__builtin_HEXAGON_F2_conv_sf2w
__builtin_HEXAGON_F2_conv_sf2ud
__builtin_HEXAGON_F2_conv_sf2d
__builtin_HEXAGON_F2_conv_df2uw
__builtin_HEXAGON_F2_conv_df2w
__builtin_HEXAGON_F2_conv_df2ud
__builtin_HEXAGON_F2_conv_df2d
__builtin_HEXAGON_F2_conv_sf2uw_chop
__builtin_HEXAGON_F2_conv_sf2w_chop
__builtin_HEXAGON_F2_conv_sf2ud_chop
__builtin_HEXAGON_F2_conv_sf2d_chop
__builtin_HEXAGON_F2_conv_df2uw_chop
__builtin_HEXAGON_F2_conv_df2w_chop
__builtin_HEXAGON_F2_conv_df2ud_chop
__builtin_HEXAGON_F2_conv_df2d_chop
__builtin_HEXAGON_S2_asr_r_r
__builtin_HEXAGON_S2_asl_r_r
__builtin_HEXAGON_S2_lsr_r_r
__builtin_HEXAGON_S2_lsl_r_r
__builtin_HEXAGON_S2_asr_r_p
__builtin_HEXAGON_S2_asl_r_p
__builtin_HEXAGON_S2_lsr_r_p
__builtin_HEXAGON_S2_lsl_r_p
__builtin_HEXAGON_S2_asr_r_r_acc
__builtin_HEXAGON_S2_asl_r_r_acc
__builtin_HEXAGON_S2_lsr_r_r_acc
__builtin_HEXAGON_S2_lsl_r_r_acc
__builtin_HEXAGON_S2_asr_r_p_acc
__builtin_HEXAGON_S2_asl_r_p_acc
__builtin_HEXAGON_S2_lsr_r_p_acc
__builtin_HEXAGON_S2_lsl_r_p_acc
__builtin_HEXAGON_S2_asr_r_r_nac
__builtin_HEXAGON_S2_asl_r_r_nac
__builtin_HEXAGON_S2_lsr_r_r_nac
__builtin_HEXAGON_S2_lsl_r_r_nac
__builtin_HEXAGON_S2_asr_r_p_nac
__builtin_HEXAGON_S2_asl_r_p_nac
__builtin_HEXAGON_S2_lsr_r_p_nac
__builtin_HEXAGON_S2_lsl_r_p_nac
__builtin_HEXAGON_S2_asr_r_r_and
__builtin_HEXAGON_S2_asl_r_r_and
__builtin_HEXAGON_S2_lsr_r_r_and
__builtin_HEXAGON_S2_lsl_r_r_and
__builtin_HEXAGON_S2_asr_r_r_or
__builtin_HEXAGON_S2_asl_r_r_or
__builtin_HEXAGON_S2_lsr_r_r_or
__builtin_HEXAGON_S2_lsl_r_r_or
__builtin_HEXAGON_S2_asr_r_p_and
__builtin_HEXAGON_S2_asl_r_p_and
__builtin_HEXAGON_S2_lsr_r_p_and
__builtin_HEXAGON_S2_lsl_r_p_and
__builtin_HEXAGON_S2_asr_r_p_or
__builtin_HEXAGON_S2_asl_r_p_or
__builtin_HEXAGON_S2_lsr_r_p_or
__builtin_HEXAGON_S2_lsl_r_p_or
__builtin_HEXAGON_S2_asr_r_p_xor
__builtin_HEXAGON_S2_asl_r_p_xor
__builtin_HEXAGON_S2_lsr_r_p_xor
__builtin_HEXAGON_S2_lsl_r_p_xor
__builtin_HEXAGON_S2_asr_r_r_sat
__builtin_HEXAGON_S2_asl_r_r_sat
__builtin_HEXAGON_S2_asr_i_r
__builtin_HEXAGON_S2_lsr_i_r
__builtin_HEXAGON_S2_asl_i_r
__builtin_HEXAGON_S2_asr_i_p
__builtin_HEXAGON_S2_lsr_i_p
__builtin_HEXAGON_S2_asl_i_p
__builtin_HEXAGON_S2_asr_i_r_acc
__builtin_HEXAGON_S2_lsr_i_r_acc
__builtin_HEXAGON_S2_asl_i_r_acc
__builtin_HEXAGON_S2_asr_i_p_acc
__builtin_HEXAGON_S2_lsr_i_p_acc
__builtin_HEXAGON_S2_asl_i_p_acc
__builtin_HEXAGON_S2_asr_i_r_nac
__builtin_HEXAGON_S2_lsr_i_r_nac
__builtin_HEXAGON_S2_asl_i_r_nac
__builtin_HEXAGON_S2_asr_i_p_nac
__builtin_HEXAGON_S2_lsr_i_p_nac
__builtin_HEXAGON_S2_asl_i_p_nac
__builtin_HEXAGON_S2_lsr_i_r_xacc
__builtin_HEXAGON_S2_asl_i_r_xacc
__builtin_HEXAGON_S2_lsr_i_p_xacc
__builtin_HEXAGON_S2_asl_i_p_xacc
__builtin_HEXAGON_S2_asr_i_r_and
__builtin_HEXAGON_S2_lsr_i_r_and
__builtin_HEXAGON_S2_asl_i_r_and
__builtin_HEXAGON_S2_asr_i_r_or
__builtin_HEXAGON_S2_lsr_i_r_or
__builtin_HEXAGON_S2_asl_i_r_or
__builtin_HEXAGON_S2_asr_i_p_and
__builtin_HEXAGON_S2_lsr_i_p_and
__builtin_HEXAGON_S2_asl_i_p_and
__builtin_HEXAGON_S2_asr_i_p_or
__builtin_HEXAGON_S2_lsr_i_p_or
__builtin_HEXAGON_S2_asl_i_p_or
__builtin_HEXAGON_S2_asl_i_r_sat
__builtin_HEXAGON_S2_asr_i_r_rnd
__builtin_HEXAGON_S2_asr_i_r_rnd_goodsyntax
__builtin_HEXAGON_S2_asr_i_p_rnd
__builtin_HEXAGON_S2_asr_i_p_rnd_goodsyntax
__builtin_HEXAGON_S4_lsli
__builtin_HEXAGON_S2_addasl_rrri
__builtin_HEXAGON_S4_andi_asl_ri
__builtin_HEXAGON_S4_ori_asl_ri
__builtin_HEXAGON_S4_addi_asl_ri
__builtin_HEXAGON_S4_subi_asl_ri
__builtin_HEXAGON_S4_andi_lsr_ri
__builtin_HEXAGON_S4_ori_lsr_ri
__builtin_HEXAGON_S4_addi_lsr_ri
__builtin_HEXAGON_S4_subi_lsr_ri
__builtin_HEXAGON_S2_valignib
__builtin_HEXAGON_S2_valignrb
__builtin_HEXAGON_S2_vspliceib
__builtin_HEXAGON_S2_vsplicerb
__builtin_HEXAGON_S2_vsplatrh
__builtin_HEXAGON_S2_vsplatrb
__builtin_HEXAGON_S2_insert
iiiii
__builtin_HEXAGON_S2_tableidxb_goodsyntax
__builtin_HEXAGON_S2_tableidxh_goodsyntax
__builtin_HEXAGON_S2_tableidxw_goodsyntax
__builtin_HEXAGON_S2_tableidxd_goodsyntax
__builtin_HEXAGON_A4_bitspliti
__builtin_HEXAGON_A4_bitsplit
__builtin_HEXAGON_S4_extract
__builtin_HEXAGON_S2_extractu
__builtin_HEXAGON_S2_insertp
__builtin_HEXAGON_S4_extractp
__builtin_HEXAGON_S2_extractup
__builtin_HEXAGON_S2_insert_rp
iiiLLi
__builtin_HEXAGON_S4_extract_rp
__builtin_HEXAGON_S2_extractu_rp
__builtin_HEXAGON_S2_insertp_rp
__builtin_HEXAGON_S4_extractp_rp
__builtin_HEXAGON_S2_extractup_rp
__builtin_HEXAGON_S2_tstbit_i
__builtin_HEXAGON_S4_ntstbit_i
__builtin_HEXAGON_S2_setbit_i
__builtin_HEXAGON_S2_togglebit_i
__builtin_HEXAGON_S2_clrbit_i
__builtin_HEXAGON_S2_tstbit_r
__builtin_HEXAGON_S4_ntstbit_r
__builtin_HEXAGON_S2_setbit_r
__builtin_HEXAGON_S2_togglebit_r
__builtin_HEXAGON_S2_clrbit_r
__builtin_HEXAGON_S2_asr_i_vh
__builtin_HEXAGON_S2_lsr_i_vh
__builtin_HEXAGON_S2_asl_i_vh
__builtin_HEXAGON_S2_asr_r_vh
__builtin_HEXAGON_S5_asrhub_rnd_sat_goodsyntax
__builtin_HEXAGON_S5_asrhub_sat
__builtin_HEXAGON_S5_vasrhrnd_goodsyntax
__builtin_HEXAGON_S2_asl_r_vh
__builtin_HEXAGON_S2_lsr_r_vh
__builtin_HEXAGON_S2_lsl_r_vh
__builtin_HEXAGON_S2_asr_i_vw
__builtin_HEXAGON_S2_asr_i_svw_trun
__builtin_HEXAGON_S2_asr_r_svw_trun
__builtin_HEXAGON_S2_lsr_i_vw
__builtin_HEXAGON_S2_asl_i_vw
__builtin_HEXAGON_S2_asr_r_vw
__builtin_HEXAGON_S2_asl_r_vw
__builtin_HEXAGON_S2_lsr_r_vw
__builtin_HEXAGON_S2_lsl_r_vw
__builtin_HEXAGON_S2_vrndpackwh
__builtin_HEXAGON_S2_vrndpackwhs
__builtin_HEXAGON_S2_vsxtbh
__builtin_HEXAGON_S2_vzxtbh
__builtin_HEXAGON_S2_vsathub
__builtin_HEXAGON_S2_svsathub
__builtin_HEXAGON_S2_svsathb
__builtin_HEXAGON_S2_vsathb
__builtin_HEXAGON_S2_vtrunohb
__builtin_HEXAGON_S2_vtrunewh
__builtin_HEXAGON_S2_vtrunowh
__builtin_HEXAGON_S2_vtrunehb
__builtin_HEXAGON_S2_vsxthw
__builtin_HEXAGON_S2_vzxthw
__builtin_HEXAGON_S2_vsatwh
__builtin_HEXAGON_S2_vsatwuh
__builtin_HEXAGON_S2_packhl
__builtin_HEXAGON_A2_swiz
__builtin_HEXAGON_S2_vsathub_nopack
__builtin_HEXAGON_S2_vsathb_nopack
__builtin_HEXAGON_S2_vsatwh_nopack
__builtin_HEXAGON_S2_vsatwuh_nopack
__builtin_HEXAGON_S2_shuffob
__builtin_HEXAGON_S2_shuffeb
__builtin_HEXAGON_S2_shuffoh
__builtin_HEXAGON_S2_shuffeh
__builtin_HEXAGON_S5_popcountp
__builtin_HEXAGON_S4_parity
__builtin_HEXAGON_S2_parityp
__builtin_HEXAGON_S2_lfsp
__builtin_HEXAGON_S2_clbnorm
__builtin_HEXAGON_S4_clbaddi
__builtin_HEXAGON_S4_clbpnorm
__builtin_HEXAGON_S4_clbpaddi
__builtin_HEXAGON_S2_clb
__builtin_HEXAGON_S2_cl0
__builtin_HEXAGON_S2_cl1
__builtin_HEXAGON_S2_clbp
__builtin_HEXAGON_S2_cl0p
__builtin_HEXAGON_S2_cl1p
__builtin_HEXAGON_S2_brev
__builtin_HEXAGON_S2_brevp
__builtin_HEXAGON_S2_ct0
__builtin_HEXAGON_S2_ct1
__builtin_HEXAGON_S2_ct0p
__builtin_HEXAGON_S2_ct1p
__builtin_HEXAGON_S2_interleave
__builtin_HEXAGON_S2_deinterleave
__builtin_HEXAGON_Y2_dccleana
__builtin_HEXAGON_Y2_dccleaninva
__builtin_HEXAGON_Y2_dcinva
__builtin_HEXAGON_Y2_dczeroa
__builtin_HEXAGON_Y4_l2fetch
vv*Ui
__builtin_HEXAGON_Y5_l2fetch
vv*LLUi
__builtin_HEXAGON_S6_rol_i_r
v:60:
__builtin_HEXAGON_S6_rol_i_p
__builtin_HEXAGON_S6_rol_i_r_acc
__builtin_HEXAGON_S6_rol_i_p_acc
__builtin_HEXAGON_S6_rol_i_r_nac
__builtin_HEXAGON_S6_rol_i_p_nac
__builtin_HEXAGON_S6_rol_i_r_xacc
__builtin_HEXAGON_S6_rol_i_p_xacc
__builtin_HEXAGON_S6_rol_i_r_and
__builtin_HEXAGON_S6_rol_i_r_or
__builtin_HEXAGON_S6_rol_i_p_and
__builtin_HEXAGON_S6_rol_i_p_or
__builtin_HEXAGON_S2_cabacencbin
__builtin_HEXAGON_V6_valignb
V16iV16iV16ii
__builtin_HEXAGON_V6_valignb_128B
V32iV32iV32ii
__builtin_HEXAGON_V6_vlalignb
__builtin_HEXAGON_V6_vlalignb_128B
__builtin_HEXAGON_V6_valignbi
__builtin_HEXAGON_V6_valignbi_128B
__builtin_HEXAGON_V6_vlalignbi
__builtin_HEXAGON_V6_vlalignbi_128B
__builtin_HEXAGON_V6_vror
__builtin_HEXAGON_V6_vror_128B
V32iV32ii
__builtin_HEXAGON_V6_vunpackub
V32iV16i
__builtin_HEXAGON_V6_vunpackub_128B
V64iV32i
__builtin_HEXAGON_V6_vunpackb
__builtin_HEXAGON_V6_vunpackb_128B
__builtin_HEXAGON_V6_vunpackuh
__builtin_HEXAGON_V6_vunpackuh_128B
__builtin_HEXAGON_V6_vunpackh
__builtin_HEXAGON_V6_vunpackh_128B
__builtin_HEXAGON_V6_vunpackob
V32iV32iV16i
__builtin_HEXAGON_V6_vunpackob_128B
V64iV64iV32i
__builtin_HEXAGON_V6_vunpackoh
__builtin_HEXAGON_V6_vunpackoh_128B
__builtin_HEXAGON_V6_vpackeb
__builtin_HEXAGON_V6_vpackeb_128B
V32iV32iV32i
__builtin_HEXAGON_V6_vpackeh
__builtin_HEXAGON_V6_vpackeh_128B
__builtin_HEXAGON_V6_vpackob
__builtin_HEXAGON_V6_vpackob_128B
__builtin_HEXAGON_V6_vpackoh
__builtin_HEXAGON_V6_vpackoh_128B
__builtin_HEXAGON_V6_vpackhub_sat
__builtin_HEXAGON_V6_vpackhub_sat_128B
__builtin_HEXAGON_V6_vpackhb_sat
__builtin_HEXAGON_V6_vpackhb_sat_128B
__builtin_HEXAGON_V6_vpackwuh_sat
__builtin_HEXAGON_V6_vpackwuh_sat_128B
__builtin_HEXAGON_V6_vpackwh_sat
__builtin_HEXAGON_V6_vpackwh_sat_128B
__builtin_HEXAGON_V6_vzb
__builtin_HEXAGON_V6_vzb_128B
__builtin_HEXAGON_V6_vsb
__builtin_HEXAGON_V6_vsb_128B
__builtin_HEXAGON_V6_vzh
__builtin_HEXAGON_V6_vzh_128B
__builtin_HEXAGON_V6_vsh
__builtin_HEXAGON_V6_vsh_128B
__builtin_HEXAGON_V6_vdmpybus
__builtin_HEXAGON_V6_vdmpybus_128B
__builtin_HEXAGON_V6_vdmpybus_acc
__builtin_HEXAGON_V6_vdmpybus_acc_128B
__builtin_HEXAGON_V6_vdmpybus_dv
__builtin_HEXAGON_V6_vdmpybus_dv_128B
V64iV64ii
__builtin_HEXAGON_V6_vdmpybus_dv_acc
__builtin_HEXAGON_V6_vdmpybus_dv_acc_128B
V64iV64iV64ii
__builtin_HEXAGON_V6_vdmpyhb
__builtin_HEXAGON_V6_vdmpyhb_128B
__builtin_HEXAGON_V6_vdmpyhb_acc
__builtin_HEXAGON_V6_vdmpyhb_acc_128B
__builtin_HEXAGON_V6_vdmpyhb_dv
__builtin_HEXAGON_V6_vdmpyhb_dv_128B
__builtin_HEXAGON_V6_vdmpyhb_dv_acc
__builtin_HEXAGON_V6_vdmpyhb_dv_acc_128B
__builtin_HEXAGON_V6_vdmpyhvsat
__builtin_HEXAGON_V6_vdmpyhvsat_128B
__builtin_HEXAGON_V6_vdmpyhvsat_acc
V16iV16iV16iV16i
__builtin_HEXAGON_V6_vdmpyhvsat_acc_128B
V32iV32iV32iV32i
__builtin_HEXAGON_V6_vdmpyhsat
__builtin_HEXAGON_V6_vdmpyhsat_128B
__builtin_HEXAGON_V6_vdmpyhsat_acc
__builtin_HEXAGON_V6_vdmpyhsat_acc_128B
__builtin_HEXAGON_V6_vdmpyhisat
V16iV32ii
__builtin_HEXAGON_V6_vdmpyhisat_128B
V32iV64ii
__builtin_HEXAGON_V6_vdmpyhisat_acc
V16iV16iV32ii
__builtin_HEXAGON_V6_vdmpyhisat_acc_128B
V32iV32iV64ii
__builtin_HEXAGON_V6_vdmpyhsusat
__builtin_HEXAGON_V6_vdmpyhsusat_128B
__builtin_HEXAGON_V6_vdmpyhsusat_acc
__builtin_HEXAGON_V6_vdmpyhsusat_acc_128B
__builtin_HEXAGON_V6_vdmpyhsuisat
__builtin_HEXAGON_V6_vdmpyhsuisat_128B
__builtin_HEXAGON_V6_vdmpyhsuisat_acc
__builtin_HEXAGON_V6_vdmpyhsuisat_acc_128B
__builtin_HEXAGON_V6_vtmpyb
__builtin_HEXAGON_V6_vtmpyb_128B
__builtin_HEXAGON_V6_vtmpyb_acc
__builtin_HEXAGON_V6_vtmpyb_acc_128B
__builtin_HEXAGON_V6_vtmpybus
__builtin_HEXAGON_V6_vtmpybus_128B
__builtin_HEXAGON_V6_vtmpybus_acc
__builtin_HEXAGON_V6_vtmpybus_acc_128B
__builtin_HEXAGON_V6_vtmpyhb
__builtin_HEXAGON_V6_vtmpyhb_128B
__builtin_HEXAGON_V6_vtmpyhb_acc
__builtin_HEXAGON_V6_vtmpyhb_acc_128B
__builtin_HEXAGON_V6_vrmpyub
__builtin_HEXAGON_V6_vrmpyub_128B
__builtin_HEXAGON_V6_vrmpyub_acc
__builtin_HEXAGON_V6_vrmpyub_acc_128B
__builtin_HEXAGON_V6_vrmpyubv
__builtin_HEXAGON_V6_vrmpyubv_128B
__builtin_HEXAGON_V6_vrmpyubv_acc
__builtin_HEXAGON_V6_vrmpyubv_acc_128B
__builtin_HEXAGON_V6_vrmpybv
__builtin_HEXAGON_V6_vrmpybv_128B
__builtin_HEXAGON_V6_vrmpybv_acc
__builtin_HEXAGON_V6_vrmpybv_acc_128B
__builtin_HEXAGON_V6_vrmpyubi
V32iV32iii
__builtin_HEXAGON_V6_vrmpyubi_128B
V64iV64iii
__builtin_HEXAGON_V6_vrmpyubi_acc
V32iV32iV32iii
__builtin_HEXAGON_V6_vrmpyubi_acc_128B
V64iV64iV64iii
__builtin_HEXAGON_V6_vrmpybus
__builtin_HEXAGON_V6_vrmpybus_128B
__builtin_HEXAGON_V6_vrmpybus_acc
__builtin_HEXAGON_V6_vrmpybus_acc_128B
__builtin_HEXAGON_V6_vrmpybusi
__builtin_HEXAGON_V6_vrmpybusi_128B
__builtin_HEXAGON_V6_vrmpybusi_acc
__builtin_HEXAGON_V6_vrmpybusi_acc_128B
__builtin_HEXAGON_V6_vrmpybusv
__builtin_HEXAGON_V6_vrmpybusv_128B
__builtin_HEXAGON_V6_vrmpybusv_acc
__builtin_HEXAGON_V6_vrmpybusv_acc_128B
__builtin_HEXAGON_V6_vdsaduh
__builtin_HEXAGON_V6_vdsaduh_128B
__builtin_HEXAGON_V6_vdsaduh_acc
__builtin_HEXAGON_V6_vdsaduh_acc_128B
__builtin_HEXAGON_V6_vrsadubi
__builtin_HEXAGON_V6_vrsadubi_128B
__builtin_HEXAGON_V6_vrsadubi_acc
__builtin_HEXAGON_V6_vrsadubi_acc_128B
__builtin_HEXAGON_V6_vasrw
__builtin_HEXAGON_V6_vasrw_128B
__builtin_HEXAGON_V6_vaslw
__builtin_HEXAGON_V6_vaslw_128B
__builtin_HEXAGON_V6_vlsrw
__builtin_HEXAGON_V6_vlsrw_128B
__builtin_HEXAGON_V6_vasrwv
__builtin_HEXAGON_V6_vasrwv_128B
__builtin_HEXAGON_V6_vaslwv
__builtin_HEXAGON_V6_vaslwv_128B
__builtin_HEXAGON_V6_vlsrwv
__builtin_HEXAGON_V6_vlsrwv_128B
__builtin_HEXAGON_V6_vasrh
__builtin_HEXAGON_V6_vasrh_128B
__builtin_HEXAGON_V6_vaslh
__builtin_HEXAGON_V6_vaslh_128B
__builtin_HEXAGON_V6_vlsrh
__builtin_HEXAGON_V6_vlsrh_128B
__builtin_HEXAGON_V6_vasrhv
__builtin_HEXAGON_V6_vasrhv_128B
__builtin_HEXAGON_V6_vaslhv
__builtin_HEXAGON_V6_vaslhv_128B
__builtin_HEXAGON_V6_vlsrhv
__builtin_HEXAGON_V6_vlsrhv_128B
__builtin_HEXAGON_V6_vasrwh
__builtin_HEXAGON_V6_vasrwh_128B
__builtin_HEXAGON_V6_vasrwhsat
__builtin_HEXAGON_V6_vasrwhsat_128B
__builtin_HEXAGON_V6_vasrwhrndsat
__builtin_HEXAGON_V6_vasrwhrndsat_128B
__builtin_HEXAGON_V6_vasrwuhsat
__builtin_HEXAGON_V6_vasrwuhsat_128B
__builtin_HEXAGON_V6_vroundwh
__builtin_HEXAGON_V6_vroundwh_128B
__builtin_HEXAGON_V6_vroundwuh
__builtin_HEXAGON_V6_vroundwuh_128B
__builtin_HEXAGON_V6_vasrhubsat
__builtin_HEXAGON_V6_vasrhubsat_128B
__builtin_HEXAGON_V6_vasrhubrndsat
__builtin_HEXAGON_V6_vasrhubrndsat_128B
__builtin_HEXAGON_V6_vasrhbrndsat
__builtin_HEXAGON_V6_vasrhbrndsat_128B
__builtin_HEXAGON_V6_vroundhb
__builtin_HEXAGON_V6_vroundhb_128B
__builtin_HEXAGON_V6_vroundhub
__builtin_HEXAGON_V6_vroundhub_128B
__builtin_HEXAGON_V6_vaslw_acc
__builtin_HEXAGON_V6_vaslw_acc_128B
__builtin_HEXAGON_V6_vasrw_acc
__builtin_HEXAGON_V6_vasrw_acc_128B
__builtin_HEXAGON_V6_vaddb
__builtin_HEXAGON_V6_vaddb_128B
__builtin_HEXAGON_V6_vsubb
__builtin_HEXAGON_V6_vsubb_128B
__builtin_HEXAGON_V6_vaddb_dv
__builtin_HEXAGON_V6_vaddb_dv_128B
V64iV64iV64i
__builtin_HEXAGON_V6_vsubb_dv
__builtin_HEXAGON_V6_vsubb_dv_128B
__builtin_HEXAGON_V6_vaddh
__builtin_HEXAGON_V6_vaddh_128B
__builtin_HEXAGON_V6_vsubh
__builtin_HEXAGON_V6_vsubh_128B
__builtin_HEXAGON_V6_vaddh_dv
__builtin_HEXAGON_V6_vaddh_dv_128B
__builtin_HEXAGON_V6_vsubh_dv
__builtin_HEXAGON_V6_vsubh_dv_128B
__builtin_HEXAGON_V6_vaddw
__builtin_HEXAGON_V6_vaddw_128B
__builtin_HEXAGON_V6_vsubw
__builtin_HEXAGON_V6_vsubw_128B
__builtin_HEXAGON_V6_vaddw_dv
__builtin_HEXAGON_V6_vaddw_dv_128B
__builtin_HEXAGON_V6_vsubw_dv
__builtin_HEXAGON_V6_vsubw_dv_128B
__builtin_HEXAGON_V6_vaddubsat
__builtin_HEXAGON_V6_vaddubsat_128B
__builtin_HEXAGON_V6_vaddubsat_dv
__builtin_HEXAGON_V6_vaddubsat_dv_128B
__builtin_HEXAGON_V6_vsububsat
__builtin_HEXAGON_V6_vsububsat_128B
__builtin_HEXAGON_V6_vsububsat_dv
__builtin_HEXAGON_V6_vsububsat_dv_128B
__builtin_HEXAGON_V6_vadduhsat
__builtin_HEXAGON_V6_vadduhsat_128B
__builtin_HEXAGON_V6_vadduhsat_dv
__builtin_HEXAGON_V6_vadduhsat_dv_128B
__builtin_HEXAGON_V6_vsubuhsat
__builtin_HEXAGON_V6_vsubuhsat_128B
__builtin_HEXAGON_V6_vsubuhsat_dv
__builtin_HEXAGON_V6_vsubuhsat_dv_128B
__builtin_HEXAGON_V6_vaddhsat
__builtin_HEXAGON_V6_vaddhsat_128B
__builtin_HEXAGON_V6_vaddhsat_dv
__builtin_HEXAGON_V6_vaddhsat_dv_128B
__builtin_HEXAGON_V6_vsubhsat
__builtin_HEXAGON_V6_vsubhsat_128B
__builtin_HEXAGON_V6_vsubhsat_dv
__builtin_HEXAGON_V6_vsubhsat_dv_128B
__builtin_HEXAGON_V6_vaddwsat
__builtin_HEXAGON_V6_vaddwsat_128B
__builtin_HEXAGON_V6_vaddwsat_dv
__builtin_HEXAGON_V6_vaddwsat_dv_128B
__builtin_HEXAGON_V6_vsubwsat
__builtin_HEXAGON_V6_vsubwsat_128B
__builtin_HEXAGON_V6_vsubwsat_dv
__builtin_HEXAGON_V6_vsubwsat_dv_128B
__builtin_HEXAGON_V6_vavgub
__builtin_HEXAGON_V6_vavgub_128B
__builtin_HEXAGON_V6_vavgubrnd
__builtin_HEXAGON_V6_vavgubrnd_128B
__builtin_HEXAGON_V6_vavguh
__builtin_HEXAGON_V6_vavguh_128B
__builtin_HEXAGON_V6_vavguhrnd
__builtin_HEXAGON_V6_vavguhrnd_128B
__builtin_HEXAGON_V6_vavgh
__builtin_HEXAGON_V6_vavgh_128B
__builtin_HEXAGON_V6_vavghrnd
__builtin_HEXAGON_V6_vavghrnd_128B
__builtin_HEXAGON_V6_vnavgh
__builtin_HEXAGON_V6_vnavgh_128B
__builtin_HEXAGON_V6_vavgw
__builtin_HEXAGON_V6_vavgw_128B
__builtin_HEXAGON_V6_vavgwrnd
__builtin_HEXAGON_V6_vavgwrnd_128B
__builtin_HEXAGON_V6_vnavgw
__builtin_HEXAGON_V6_vnavgw_128B
__builtin_HEXAGON_V6_vabsdiffub
__builtin_HEXAGON_V6_vabsdiffub_128B
__builtin_HEXAGON_V6_vabsdiffuh
__builtin_HEXAGON_V6_vabsdiffuh_128B
__builtin_HEXAGON_V6_vabsdiffh
__builtin_HEXAGON_V6_vabsdiffh_128B
__builtin_HEXAGON_V6_vabsdiffw
__builtin_HEXAGON_V6_vabsdiffw_128B
__builtin_HEXAGON_V6_vnavgub
__builtin_HEXAGON_V6_vnavgub_128B
__builtin_HEXAGON_V6_vaddubh
V32iV16iV16i
__builtin_HEXAGON_V6_vaddubh_128B
V64iV32iV32i
__builtin_HEXAGON_V6_vsububh
__builtin_HEXAGON_V6_vsububh_128B
__builtin_HEXAGON_V6_vaddhw
__builtin_HEXAGON_V6_vaddhw_128B
__builtin_HEXAGON_V6_vsubhw
__builtin_HEXAGON_V6_vsubhw_128B
__builtin_HEXAGON_V6_vadduhw
__builtin_HEXAGON_V6_vadduhw_128B
__builtin_HEXAGON_V6_vsubuhw
__builtin_HEXAGON_V6_vsubuhw_128B
__builtin_HEXAGON_V6_vd0
V16i
__builtin_HEXAGON_V6_vd0_128B
V32i
__builtin_HEXAGON_V6_vaddbq
__builtin_HEXAGON_V6_vaddbq_128B
__builtin_HEXAGON_V6_vsubbq
__builtin_HEXAGON_V6_vsubbq_128B
__builtin_HEXAGON_V6_vaddbnq
__builtin_HEXAGON_V6_vaddbnq_128B
__builtin_HEXAGON_V6_vsubbnq
__builtin_HEXAGON_V6_vsubbnq_128B
__builtin_HEXAGON_V6_vaddhq
__builtin_HEXAGON_V6_vaddhq_128B
__builtin_HEXAGON_V6_vsubhq
__builtin_HEXAGON_V6_vsubhq_128B
__builtin_HEXAGON_V6_vaddhnq
__builtin_HEXAGON_V6_vaddhnq_128B
__builtin_HEXAGON_V6_vsubhnq
__builtin_HEXAGON_V6_vsubhnq_128B
__builtin_HEXAGON_V6_vaddwq
__builtin_HEXAGON_V6_vaddwq_128B
__builtin_HEXAGON_V6_vsubwq
__builtin_HEXAGON_V6_vsubwq_128B
__builtin_HEXAGON_V6_vaddwnq
__builtin_HEXAGON_V6_vaddwnq_128B
__builtin_HEXAGON_V6_vsubwnq
__builtin_HEXAGON_V6_vsubwnq_128B
__builtin_HEXAGON_V6_vabsh
__builtin_HEXAGON_V6_vabsh_128B
V32iV32i
__builtin_HEXAGON_V6_vabsh_sat
__builtin_HEXAGON_V6_vabsh_sat_128B
__builtin_HEXAGON_V6_vabsw
__builtin_HEXAGON_V6_vabsw_128B
__builtin_HEXAGON_V6_vabsw_sat
__builtin_HEXAGON_V6_vabsw_sat_128B
__builtin_HEXAGON_V6_vmpybv
__builtin_HEXAGON_V6_vmpybv_128B
__builtin_HEXAGON_V6_vmpybv_acc
V32iV32iV16iV16i
__builtin_HEXAGON_V6_vmpybv_acc_128B
V64iV64iV32iV32i
__builtin_HEXAGON_V6_vmpyubv
__builtin_HEXAGON_V6_vmpyubv_128B
__builtin_HEXAGON_V6_vmpyubv_acc
__builtin_HEXAGON_V6_vmpyubv_acc_128B
__builtin_HEXAGON_V6_vmpybusv
__builtin_HEXAGON_V6_vmpybusv_128B
__builtin_HEXAGON_V6_vmpybusv_acc
__builtin_HEXAGON_V6_vmpybusv_acc_128B
__builtin_HEXAGON_V6_vmpabusv
__builtin_HEXAGON_V6_vmpabusv_128B
__builtin_HEXAGON_V6_vmpabuuv
__builtin_HEXAGON_V6_vmpabuuv_128B
__builtin_HEXAGON_V6_vmpyhv
__builtin_HEXAGON_V6_vmpyhv_128B
__builtin_HEXAGON_V6_vmpyhv_acc
__builtin_HEXAGON_V6_vmpyhv_acc_128B
__builtin_HEXAGON_V6_vmpyuhv
__builtin_HEXAGON_V6_vmpyuhv_128B
__builtin_HEXAGON_V6_vmpyuhv_acc
__builtin_HEXAGON_V6_vmpyuhv_acc_128B
__builtin_HEXAGON_V6_vmpyhvsrs
__builtin_HEXAGON_V6_vmpyhvsrs_128B
__builtin_HEXAGON_V6_vmpyhus
__builtin_HEXAGON_V6_vmpyhus_128B
__builtin_HEXAGON_V6_vmpyhus_acc
__builtin_HEXAGON_V6_vmpyhus_acc_128B
__builtin_HEXAGON_V6_vmpyih
__builtin_HEXAGON_V6_vmpyih_128B
__builtin_HEXAGON_V6_vmpyih_acc
__builtin_HEXAGON_V6_vmpyih_acc_128B
__builtin_HEXAGON_V6_vmpyewuh
__builtin_HEXAGON_V6_vmpyewuh_128B
__builtin_HEXAGON_V6_vmpyowh
__builtin_HEXAGON_V6_vmpyowh_128B
__builtin_HEXAGON_V6_vmpyowh_rnd
__builtin_HEXAGON_V6_vmpyowh_rnd_128B
__builtin_HEXAGON_V6_vmpyowh_sacc
__builtin_HEXAGON_V6_vmpyowh_sacc_128B
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc_128B
__builtin_HEXAGON_V6_vmpyieoh
__builtin_HEXAGON_V6_vmpyieoh_128B
__builtin_HEXAGON_V6_vmpyiewuh
__builtin_HEXAGON_V6_vmpyiewuh_128B
__builtin_HEXAGON_V6_vmpyiowh
__builtin_HEXAGON_V6_vmpyiowh_128B
__builtin_HEXAGON_V6_vmpyiewh_acc
__builtin_HEXAGON_V6_vmpyiewh_acc_128B
__builtin_HEXAGON_V6_vmpyiewuh_acc
__builtin_HEXAGON_V6_vmpyiewuh_acc_128B
__builtin_HEXAGON_V6_vmpyub
V32iV16ii
__builtin_HEXAGON_V6_vmpyub_128B
V64iV32ii
__builtin_HEXAGON_V6_vmpyub_acc
V32iV32iV16ii
__builtin_HEXAGON_V6_vmpyub_acc_128B
V64iV64iV32ii
__builtin_HEXAGON_V6_vmpybus
__builtin_HEXAGON_V6_vmpybus_128B
__builtin_HEXAGON_V6_vmpybus_acc
__builtin_HEXAGON_V6_vmpybus_acc_128B
__builtin_HEXAGON_V6_vmpabus
__builtin_HEXAGON_V6_vmpabus_128B
__builtin_HEXAGON_V6_vmpabus_acc
__builtin_HEXAGON_V6_vmpabus_acc_128B
__builtin_HEXAGON_V6_vmpahb
__builtin_HEXAGON_V6_vmpahb_128B
__builtin_HEXAGON_V6_vmpahb_acc
__builtin_HEXAGON_V6_vmpahb_acc_128B
__builtin_HEXAGON_V6_vmpyh
__builtin_HEXAGON_V6_vmpyh_128B
__builtin_HEXAGON_V6_vmpyhsat_acc
__builtin_HEXAGON_V6_vmpyhsat_acc_128B
__builtin_HEXAGON_V6_vmpyhss
__builtin_HEXAGON_V6_vmpyhss_128B
__builtin_HEXAGON_V6_vmpyhsrs
__builtin_HEXAGON_V6_vmpyhsrs_128B
__builtin_HEXAGON_V6_vmpyuh
__builtin_HEXAGON_V6_vmpyuh_128B
__builtin_HEXAGON_V6_vmpyuh_acc
__builtin_HEXAGON_V6_vmpyuh_acc_128B
__builtin_HEXAGON_V6_vmpyihb
__builtin_HEXAGON_V6_vmpyihb_128B
__builtin_HEXAGON_V6_vmpyihb_acc
__builtin_HEXAGON_V6_vmpyihb_acc_128B
__builtin_HEXAGON_V6_vmpyiwb
__builtin_HEXAGON_V6_vmpyiwb_128B
__builtin_HEXAGON_V6_vmpyiwb_acc
__builtin_HEXAGON_V6_vmpyiwb_acc_128B
__builtin_HEXAGON_V6_vmpyiwh
__builtin_HEXAGON_V6_vmpyiwh_128B
__builtin_HEXAGON_V6_vmpyiwh_acc
__builtin_HEXAGON_V6_vmpyiwh_acc_128B
__builtin_HEXAGON_V6_vand
__builtin_HEXAGON_V6_vand_128B
__builtin_HEXAGON_V6_vor
__builtin_HEXAGON_V6_vor_128B
__builtin_HEXAGON_V6_vxor
__builtin_HEXAGON_V6_vxor_128B
__builtin_HEXAGON_V6_vnot
__builtin_HEXAGON_V6_vnot_128B
__builtin_HEXAGON_V6_vandqrt
__builtin_HEXAGON_V6_vandqrt_128B
__builtin_HEXAGON_V6_vandqrt_acc
__builtin_HEXAGON_V6_vandqrt_acc_128B
__builtin_HEXAGON_V6_vandvrt
__builtin_HEXAGON_V6_vandvrt_128B
__builtin_HEXAGON_V6_vandvrt_acc
__builtin_HEXAGON_V6_vandvrt_acc_128B
__builtin_HEXAGON_V6_vgtw
__builtin_HEXAGON_V6_vgtw_128B
__builtin_HEXAGON_V6_vgtw_and
__builtin_HEXAGON_V6_vgtw_and_128B
__builtin_HEXAGON_V6_vgtw_or
__builtin_HEXAGON_V6_vgtw_or_128B
__builtin_HEXAGON_V6_vgtw_xor
__builtin_HEXAGON_V6_vgtw_xor_128B
__builtin_HEXAGON_V6_veqw
__builtin_HEXAGON_V6_veqw_128B
__builtin_HEXAGON_V6_veqw_and
__builtin_HEXAGON_V6_veqw_and_128B
__builtin_HEXAGON_V6_veqw_or
__builtin_HEXAGON_V6_veqw_or_128B
__builtin_HEXAGON_V6_veqw_xor
__builtin_HEXAGON_V6_veqw_xor_128B
__builtin_HEXAGON_V6_vgth
__builtin_HEXAGON_V6_vgth_128B
__builtin_HEXAGON_V6_vgth_and
__builtin_HEXAGON_V6_vgth_and_128B
__builtin_HEXAGON_V6_vgth_or
__builtin_HEXAGON_V6_vgth_or_128B
__builtin_HEXAGON_V6_vgth_xor
__builtin_HEXAGON_V6_vgth_xor_128B
__builtin_HEXAGON_V6_veqh
__builtin_HEXAGON_V6_veqh_128B
__builtin_HEXAGON_V6_veqh_and
__builtin_HEXAGON_V6_veqh_and_128B
__builtin_HEXAGON_V6_veqh_or
__builtin_HEXAGON_V6_veqh_or_128B
__builtin_HEXAGON_V6_veqh_xor
__builtin_HEXAGON_V6_veqh_xor_128B
__builtin_HEXAGON_V6_vgtb
__builtin_HEXAGON_V6_vgtb_128B
__builtin_HEXAGON_V6_vgtb_and
__builtin_HEXAGON_V6_vgtb_and_128B
__builtin_HEXAGON_V6_vgtb_or
__builtin_HEXAGON_V6_vgtb_or_128B
__builtin_HEXAGON_V6_vgtb_xor
__builtin_HEXAGON_V6_vgtb_xor_128B
__builtin_HEXAGON_V6_veqb
__builtin_HEXAGON_V6_veqb_128B
__builtin_HEXAGON_V6_veqb_and
__builtin_HEXAGON_V6_veqb_and_128B
__builtin_HEXAGON_V6_veqb_or
__builtin_HEXAGON_V6_veqb_or_128B
__builtin_HEXAGON_V6_veqb_xor
__builtin_HEXAGON_V6_veqb_xor_128B
__builtin_HEXAGON_V6_vgtuw
__builtin_HEXAGON_V6_vgtuw_128B
__builtin_HEXAGON_V6_vgtuw_and
__builtin_HEXAGON_V6_vgtuw_and_128B
__builtin_HEXAGON_V6_vgtuw_or
__builtin_HEXAGON_V6_vgtuw_or_128B
__builtin_HEXAGON_V6_vgtuw_xor
__builtin_HEXAGON_V6_vgtuw_xor_128B
__builtin_HEXAGON_V6_vgtuh
__builtin_HEXAGON_V6_vgtuh_128B
__builtin_HEXAGON_V6_vgtuh_and
__builtin_HEXAGON_V6_vgtuh_and_128B
__builtin_HEXAGON_V6_vgtuh_or
__builtin_HEXAGON_V6_vgtuh_or_128B
__builtin_HEXAGON_V6_vgtuh_xor
__builtin_HEXAGON_V6_vgtuh_xor_128B
__builtin_HEXAGON_V6_vgtub
__builtin_HEXAGON_V6_vgtub_128B
__builtin_HEXAGON_V6_vgtub_and
__builtin_HEXAGON_V6_vgtub_and_128B
__builtin_HEXAGON_V6_vgtub_or
__builtin_HEXAGON_V6_vgtub_or_128B
__builtin_HEXAGON_V6_vgtub_xor
__builtin_HEXAGON_V6_vgtub_xor_128B
__builtin_HEXAGON_V6_pred_or
__builtin_HEXAGON_V6_pred_or_128B
__builtin_HEXAGON_V6_pred_and
__builtin_HEXAGON_V6_pred_and_128B
__builtin_HEXAGON_V6_pred_not
__builtin_HEXAGON_V6_pred_not_128B
__builtin_HEXAGON_V6_pred_xor
__builtin_HEXAGON_V6_pred_xor_128B
__builtin_HEXAGON_V6_pred_and_n
__builtin_HEXAGON_V6_pred_and_n_128B
__builtin_HEXAGON_V6_pred_or_n
__builtin_HEXAGON_V6_pred_or_n_128B
__builtin_HEXAGON_V6_pred_scalar2
V16ii
__builtin_HEXAGON_V6_pred_scalar2_128B
V32ii
__builtin_HEXAGON_V6_vmux
__builtin_HEXAGON_V6_vmux_128B
__builtin_HEXAGON_V6_vswap
V32iV16iV16iV16i
__builtin_HEXAGON_V6_vswap_128B
V64iV32iV32iV32i
__builtin_HEXAGON_V6_vmaxub
__builtin_HEXAGON_V6_vmaxub_128B
__builtin_HEXAGON_V6_vminub
__builtin_HEXAGON_V6_vminub_128B
__builtin_HEXAGON_V6_vmaxuh
__builtin_HEXAGON_V6_vmaxuh_128B
__builtin_HEXAGON_V6_vminuh
__builtin_HEXAGON_V6_vminuh_128B
__builtin_HEXAGON_V6_vmaxh
__builtin_HEXAGON_V6_vmaxh_128B
__builtin_HEXAGON_V6_vminh
__builtin_HEXAGON_V6_vminh_128B
__builtin_HEXAGON_V6_vmaxw
__builtin_HEXAGON_V6_vmaxw_128B
__builtin_HEXAGON_V6_vminw
__builtin_HEXAGON_V6_vminw_128B
__builtin_HEXAGON_V6_vsathub
__builtin_HEXAGON_V6_vsathub_128B
__builtin_HEXAGON_V6_vsatwh
__builtin_HEXAGON_V6_vsatwh_128B
__builtin_HEXAGON_V6_vshuffeb
__builtin_HEXAGON_V6_vshuffeb_128B
__builtin_HEXAGON_V6_vshuffob
__builtin_HEXAGON_V6_vshuffob_128B
__builtin_HEXAGON_V6_vshufeh
__builtin_HEXAGON_V6_vshufeh_128B
__builtin_HEXAGON_V6_vshufoh
__builtin_HEXAGON_V6_vshufoh_128B
__builtin_HEXAGON_V6_vshuffvdd
V32iV16iV16ii
__builtin_HEXAGON_V6_vshuffvdd_128B
V64iV32iV32ii
__builtin_HEXAGON_V6_vdealvdd
__builtin_HEXAGON_V6_vdealvdd_128B
__builtin_HEXAGON_V6_vshufoeh
__builtin_HEXAGON_V6_vshufoeh_128B
__builtin_HEXAGON_V6_vshufoeb
__builtin_HEXAGON_V6_vshufoeb_128B
__builtin_HEXAGON_V6_vdealh
__builtin_HEXAGON_V6_vdealh_128B
__builtin_HEXAGON_V6_vdealb
__builtin_HEXAGON_V6_vdealb_128B
__builtin_HEXAGON_V6_vdealb4w
__builtin_HEXAGON_V6_vdealb4w_128B
__builtin_HEXAGON_V6_vshuffh
__builtin_HEXAGON_V6_vshuffh_128B
__builtin_HEXAGON_V6_vshuffb
__builtin_HEXAGON_V6_vshuffb_128B
__builtin_HEXAGON_V6_extractw
iV16ii
__builtin_HEXAGON_V6_extractw_128B
iV32ii
__builtin_HEXAGON_V6_vinsertwr
__builtin_HEXAGON_V6_vinsertwr_128B
__builtin_HEXAGON_V6_lvsplatw
__builtin_HEXAGON_V6_lvsplatw_128B
__builtin_HEXAGON_V6_vassign
__builtin_HEXAGON_V6_vassign_128B
__builtin_HEXAGON_V6_vcombine
__builtin_HEXAGON_V6_vcombine_128B
__builtin_HEXAGON_V6_vlutb
V16iV16iLLii
__builtin_HEXAGON_V6_vlutb_128B
V32iV32iLLii
__builtin_HEXAGON_V6_vlutb_acc
V16iV16iV16iLLii
__builtin_HEXAGON_V6_vlutb_acc_128B
V32iV32iV32iLLii
__builtin_HEXAGON_V6_vlutb_dv
__builtin_HEXAGON_V6_vlutb_dv_128B
V64iV64iLLii
__builtin_HEXAGON_V6_vlutb_dv_acc
__builtin_HEXAGON_V6_vlutb_dv_acc_128B
V64iV64iV64iLLii
__builtin_HEXAGON_V6_vdelta
__builtin_HEXAGON_V6_vdelta_128B
__builtin_HEXAGON_V6_vrdelta
__builtin_HEXAGON_V6_vrdelta_128B
__builtin_HEXAGON_V6_vcl0w
__builtin_HEXAGON_V6_vcl0w_128B
__builtin_HEXAGON_V6_vcl0h
__builtin_HEXAGON_V6_vcl0h_128B
__builtin_HEXAGON_V6_vnormamtw
__builtin_HEXAGON_V6_vnormamtw_128B
__builtin_HEXAGON_V6_vnormamth
__builtin_HEXAGON_V6_vnormamth_128B
__builtin_HEXAGON_V6_vpopcounth
__builtin_HEXAGON_V6_vpopcounth_128B
__builtin_HEXAGON_V6_vlutvvb
__builtin_HEXAGON_V6_vlutvvb_128B
__builtin_HEXAGON_V6_vlutvvb_oracc
V16iV16iV16iV16ii
__builtin_HEXAGON_V6_vlutvvb_oracc_128B
V32iV32iV32iV32ii
__builtin_HEXAGON_V6_vlutvwh
__builtin_HEXAGON_V6_vlutvwh_128B
__builtin_HEXAGON_V6_vlutvwh_oracc
V32iV32iV16iV16ii
__builtin_HEXAGON_V6_vlutvwh_oracc_128B
V64iV64iV32iV32ii
__builtin_HEXAGON_V6_hi
V16iV32i
__builtin_HEXAGON_V6_lo
__builtin_HEXAGON_V6_hi_128B
V32iV64i
__builtin_HEXAGON_V6_lo_128B
__builtin_HEXAGON_V6_vassignp
__builtin_HEXAGON_V6_vassignp_128B
V64iV64i
__qdsp6__
__hexagon__
__HEXAGON_V4__
__HEXAGON_ARCH__
__QDSP6_V4__
__QDSP6_ARCH__
__HEXAGON_V5__
__QDSP6_V5__
__HEXAGON_V55__
__QDSP6_V55__
__HEXAGON_V60__
__QDSP6_V60__
__HEXAGON_V62__
__HVX__
__HVXDBL__
__builtin_bitrev
__builtin_getid
__builtin_getps
__builtin_setps
__XS1B__
code_completion
comment
raw_identifier
numeric_constant
char_constant
wide_char_constant
utf8_char_constant
utf16_char_constant
utf32_char_constant
string_literal
wide_string_literal
angle_string_literal
utf8_string_literal
utf16_string_literal
utf32_string_literal
l_square
r_square
l_paren
r_paren
l_brace
r_brace
period
ellipsis
ampamp
ampequal
star
starequal
plusplus
plusequal
arrow
minusminus
minusequal
exclaim
exclaimequal
slash
slashequal
percent
percentequal
less
lessless
lessequal
lesslessequal
greater
greatergreater
greaterequal
greatergreaterequal
caret
caretequal
pipe
pipepipe
pipeequal
equal
equalequal
hashhash
hashat
periodstar
arrowstar
coloncolon
lesslessless
greatergreatergreater
caretcaret
else
enum
extern
goto
restrict
short
signed
sizeof
static
struct
typedef
unsigned
while
_Alignas
_Alignof
_Atomic
_Bool
_Complex
_Generic
_Imaginary
_Noreturn
_Static_assert
_Thread_local
__func__
__objc_yes
__objc_no
bool
class
const_cast
dynamic_cast
explicit
friend
mutable
namespace
operator
public
reinterpret_cast
static_cast
template
this
typename
typeid
virtual
wchar_t
alignas
alignof
char16_t
char32_t
constexpr
decltype
noexcept
static_assert
concept
requires
co_await
co_return
co_yield
_Decimal32
_Decimal64
_Decimal128
__null
__alignof
__attribute
__builtin_choose_expr
__builtin_offsetof
__builtin_types_compatible_p
__builtin_va_arg
__extension__
__float128
__imag
__int128
__label__
__real
__thread
__FUNCTION__
__PRETTY_FUNCTION__
__auto_type
typeof
__FUNCDNAME__
__FUNCSIG__
L__FUNCTION__
__is_interface_class
__is_sealed
__is_destructible
__is_trivially_destructible
__is_nothrow_destructible
__is_nothrow_assignable
__is_constructible
__is_nothrow_constructible
__is_assignable
__has_nothrow_assign
__has_nothrow_move_assign
__has_nothrow_copy
__has_nothrow_constructor
__has_trivial_assign
__has_trivial_move_assign
__has_trivial_copy
__has_trivial_constructor
__has_trivial_move_constructor
__has_trivial_destructor
__has_virtual_destructor
__is_abstract
__is_aggregate
__is_base_of
__is_class
__is_convertible_to
__is_empty
__is_enum
__is_final
__is_literal
__is_pod
__is_polymorphic
__is_trivial
__is_union
__is_trivially_constructible
__is_trivially_copyable
__is_trivially_assignable
__underlying_type
__is_lvalue_expr
__is_rvalue_expr
__is_arithmetic
__is_floating_point
__is_integral
__is_complete_type
__is_void
__is_array
__is_function
__is_reference
__is_lvalue_reference
__is_rvalue_reference
__is_fundamental
__is_object
__is_scalar
__is_compound
__is_pointer
__is_member_object_pointer
__is_member_function_pointer
__is_member_pointer
__is_const
__is_volatile
__is_standard_layout
__is_signed
__is_unsigned
__is_same
__is_convertible
__array_rank
__array_extent
__private_extern__
__module_private__
__declspec
__cdecl
__stdcall
__fastcall
__thiscall
__regcall
__vectorcall
__forceinline
__unaligned
__super
__global
__local
__constant
__private
__generic
__kernel
__read_only
__write_only
__read_write
__builtin_astype
vec_step
image1d_t
image1d_array_t
image1d_buffer_t
image2d_t
image2d_array_t
image2d_depth_t
image2d_array_depth_t
image2d_msaa_t
image2d_array_msaa_t
image2d_msaa_depth_t
image2d_array_msaa_depth_t
image3d_t
__builtin_omp_required_simd_align
__pascal
__vector
__pixel
__bool
__bridge
__bridge_transfer
__bridge_retained
__bridge_retain
__covariant
__contravariant
__kindof
_Nonnull
_Nullable
_Null_unspecified
__ptr64
__ptr32
__sptr
__uptr
__w64
__uuidof
__try
__finally
__leave
__int64
__if_exists
__if_not_exists
__single_inheritance
__multiple_inheritance
__virtual_inheritance
__interface
__builtin_convertvector
__builtin_available
__unknown_anytype
annot_cxxscope
annot_typename
annot_template_id
annot_primary_expr
annot_decltype
annot_pragma_unused
annot_pragma_vis
annot_pragma_pack
annot_pragma_parser_crash
annot_pragma_captured
annot_pragma_dump
annot_pragma_msstruct
annot_pragma_align
annot_pragma_weak
annot_pragma_weakalias
annot_pragma_redefine_extname
annot_pragma_fp_contract
annot_pragma_ms_pointers_to_members
annot_pragma_ms_vtordisp
annot_pragma_ms_pragma
annot_pragma_opencl_extension
annot_pragma_openmp
annot_pragma_openmp_end
annot_pragma_loop_hint
annot_pragma_fp
annot_pragma_attribute
annot_module_include
annot_module_begin
annot_module_end
clang-902.0.30
LLVM
 version 9.1.0 
LLVM 9.1.0 
expected root node
expected mapping node
case-sensitive
use-external-names
overlay-relative
ignore-non-existent-contents
roots
expected array
invalid version number
version mismatch, expected 0
missing key '
expected boolean value
expected mapping node for file or directory entry
contents
external-contents
use-external-name
unknown value for 'type'
entry already has 'contents' or 'external-contents'
missing key 'contents' or 'external-contents'
'use-external-name' is not supported for directories
unknown key
duplicate key '
  'version': 0,
  'case-sensitive': '
  'use-external-names': '
  'overlay-relative': '
  'ignore-non-existent-contents': '
  'roots': [
'type': 'file',
'name': "
'external-contents': "
'type': 'directory',
'contents': [
format=0
no-format
system-headers
everything
-Werror
-Werror=
fatal-errors
-Wfatal-errors
-Wfatal-errors=
-Wno-
-Rno-
arg1
xray_always_instrument
xray_never_instrument
<optimization level options>
<code formatting options>
<automatic crashing options>
<debug info options>
<swift internal options>
<swift debug/development internal options>
DEBUG/DEVELOPMENT OPTIONS
<linker-specific options>
<mode options>
MODES
<input>
api-diff-data-file
API migration data is from <path>
<path>
application-extension
Restrict code to those available for App Extensions
assert-config
Specify the assert_configuration replacement. Possible values are Debug, Release, Unchecked, DisableReplacement.
assume-parsing-unqualified-ownership-sil
Assume unqualified SIL ownership when parsing SIL
assume-single-threaded
Assume that code will be executed in a single-threaded environment
autolink-force-load
Force ld to link against this module even if no symbols are used
autolink-library
Add dependent library
code-complete-call-pattern-heuristics
Use heuristics to guess whether we want call pattern completions
code-complete-inits-in-postfix-expr
Include initializers when completing a postfix expression
color-diagnostics
Print diagnostics in color
continue-building-after-errors
Continue building, even after errors are encountered
debug-assert-after-parse
Force an assertion failure after parsing
debug-assert-immediately
Force an assertion failure immediately
debug-constraints-attempt
Debug the constraint solver at a given attempt
debug-constraints
Debug the constraint-based type checker
debug-crash-after-parse
Force a crash after parsing
debug-crash-immediately
Force a crash immediately
debug-forbid-typecheck-prefix
Triggers llvm fatal_error if typechecker tries to typecheck a decl with the provided prefix name
debug-generic-signatures
Debug generic signatures
debug-time-compilation
Prints the time taken by each compilation phase
debug-time-expression-type-checking
Dumps the time it takes to type-check each expression
debug-time-function-bodies
Dumps the time it takes to type-check each function body
debugger-support
Process swift code as if running in the debugger
deprecated-integrated-repl
diagnostics-editor-mode
Diagnostics will be used in editor
disable-access-control
Don't respect access control restrictions
disable-arc-opts
Don't run SIL ARC optimization passes.
disable-autolink-framework
Disable autolinking against the provided framework
disable-availability-checking
Disable checking for potentially unavailable APIs
disable-bridging-pch
Disable automatic generation of bridging PCH files
disable-deserialization-recovery
Don't attempt to recover from missing xrefs (etc) in swiftmodules
disable-diagnostic-passes
Don't run diagnostic passes
disable-incremental-llvm-codegen
Disable incremental llvm code generation.
disable-llvm-arc-opts
Don't run LLVM ARC optimization passes.
disable-llvm-optzns
Don't run LLVM optimization passes
disable-llvm-slp-vectorizer
Don't run LLVM SLP vectorizer
disable-llvm-value-names
Don't add names to local values in LLVM IR
disable-llvm-verify
Don't run the LLVM IR verifier.
disable-mandatory-semantic-arc-opts
Disable the mandatory semantic arc optimizer
disable-migrator-fixits
Disable the Migrator phase which automatically applies fix-its
disable-modules-validate-system-headers
Disable validating system headers in the Clang importer
disable-named-lazy-member-loading
Disable per-name lazy member loading
disable-nskeyedarchiver-diagnostics
Allow classes with unstable mangled names to adopt NSCoding
disable-objc-attr-requires-foundation-module
Disable requiring uses of @objc to require importing the Foundation module
disable-objc-interop
Disable Objective-C interop code generation and config directives
disable-playground-transform
Disable playground transformation
disable-reflection-metadata
Disable emission of reflection metadata for nominal types
disable-reflection-names
Disable emission of names of stored properties and enum cases inreflection metadata
disable-serialization-nested-type-lookup-table
Force module merging to use regular lookups to find nested types
disable-sil-linking
Don't link SIL functions
disable-sil-partial-apply
Disable use of partial_apply in SIL generation
disable-sil-perf-optzns
Don't run SIL performance optimization passes
disable-swift-bridge-attr
Disable using the swift bridge attribute
disable-swift3-objc-inference
Disable Swift 3's @objc inference rules for NSObject-derived classes and 'dynamic' members (emulates Swift 4 behavior)
disable-target-os-checking
Disable checking the target OS of serialized modules
disable-testable-attr-requires-testable-module
Disable checking of @testable
disable-tsan-inout-instrumentation
Disable treatment of inout parameters as Thread Sanitizer accesses
disable-typo-correction
Disable typo correction
driver-always-rebuild-dependents
Always rebuild dependents of files that have been modified
driver-mode=
Set the driver mode to either 'swift' or 'swiftc'
driver-print-actions
Dump list of actions to perform
driver-print-bindings
Dump list of job inputs and outputs
driver-print-jobs
Dump list of jobs to execute
driver-print-output-file-map
Dump the contents of the output file map
driver-show-incremental
With -v, dump information about why files are being rebuilt
driver-show-job-lifecycle
Show every step in the lifecycle of driver jobs
driver-skip-execution
Skip execution of subtasks when performing compilation
driver-time-compilation
Prints the total time it took to execute all compilation tasks
driver-use-filelists
Pass input files as filelists whenever possible
driver-use-frontend-path
Use the given executable to perform compilations
dump-api-path
The path to output swift interface files for the compiled source files
dump-ast
Parse and type-check input file(s) and dump AST(s)
dump-clang-diagnostics
Dump Clang diagnostics to stderr
dump-interface-hash
Parse input file(s) and dump interface token hash(es)
dump-migration-states-dir
Dump the input text, output text, and states for migration to <path>
dump-parse
Parse input file(s) and dump AST(s)
dump-scope-maps
Parse and type-check input file(s) and dump the scope map(s)
<expanded-or-list-of-line:column>
dump-type-refinement-contexts
Type-check input file(s) and dump type refinement contexts(s)
dump-usr
Dump USR for each declaration reference
Marks a conditional compilation flag as true
embed-bitcode-marker
Embed placeholder LLVM IR data as a marker
embed-bitcode
Embed LLVM IR bitcode as data
emit-assembly
Emit assembly file(s) (-S)
emit-bc
Emit LLVM BC file(s)
emit-dependencies-path
Output basic Make-compatible dependencies file to <path>
emit-dependencies
Emit basic Make-compatible dependencies files
emit-executable
Emit a linked executable
emit-fixits-path
Output compiler fixits as source edits to <path>
emit-imported-modules
Emit a list of the imported modules
emit-ir
Emit LLVM IR file(s)
emit-library
Emit a linked library
emit-loaded-module-trace-path=
emit-loaded-module-trace-path
Emit the loaded module trace JSON to <path>
emit-loaded-module-trace
Emit a JSON file containing information about what modules were loaded
emit-migrated-file-path
Emit the migrated source file to <path>
emit-module-doc-path
Output module documentation file <path>
emit-module-doc
Emit a module documentation file based on documentation comments
emit-module-path=
emit-module-path
Emit an importable module to <path>
emit-module
Emit an importable module
emit-objc-header-path
Emit an Objective-C header file to <path>
emit-objc-header
Emit an Objective-C header file
emit-object
Emit object file(s) (-c)
emit-pch
Emit PCH for imported Objective-C header file
emit-reference-dependencies-path
Output Swift-style dependencies file to <path>
emit-reference-dependencies
Emit a Swift-style dependencies file
emit-remap-file-path
Emit the replacement map describing Swift Migrator changes to <path>
emit-sibgen
Emit serialized AST + raw SIL file(s)
emit-sib
Emit serialized AST + canonical SIL file(s)
emit-silgen
Emit raw SIL file(s)
emit-sil
Emit canonical SIL file(s)
emit-sorted-sil
When printing SIL, print out all sil entities sorted by name to ease diffing
emit-stack-promotion-checks
Emit runtime checks for correct stack promotion of objects.
emit-syntax
Parse input file(s) and emit the Syntax tree(s) as JSON
emit-tbd-path=
emit-tbd-path
Emit the TBD file to <path>
emit-tbd
Emit a TBD file
emit-verbose-sil
Emit locations during SIL emission
enable-access-control
Respect access control restrictions
enable-astscope-lookup
Enable ASTScope-based unqualified name lookup
enable-bridging-pch
Enable automatic generation of bridging PCH files
enable-class-resilience
Compile the module to export resilient interfaces for all public classes by default (doesn't work yet)
enable-deserialization-recovery
Attempt to recover from missing xrefs (etc) in swiftmodules
enable-experimental-property-behaviors
Enable experimental property behaviors
enable-guaranteed-closure-contexts
Use @guaranteed convention for closure context
enable-guaranteed-normal-arguments
If set to true, all normal parameters (except to inits/setters) will be passed at +0
enable-infer-import-as-member
Infer when a global could be imported as a member
enable-large-loadable-types
Enable Large Loadable types IRGen pass
enable-llvm-value-names
Add names to local values in LLVM IR
enable-nskeyedarchiver-diagnostics
Diagnose classes with unstable mangled names adopting NSCoding
enable-objc-attr-requires-foundation-module
Enable requiring uses of @objc to require importing the Foundation module
enable-objc-interop
Enable Objective-C interop code generation and config directives
enable-resilience
Compile the module to export resilient interfaces for all public declarations by default
enable-sil-opaque-values
Enable SIL Opaque Values
enable-sil-ownership
Enable the SIL Ownership Model
enable-source-import
Enable importing of Swift source files
enable-swift3-objc-inference
Enable Swift 3's @objc inference rules for NSObject-derived classes and 'dynamic' members (emulates Swift 3 behavior)
enable-swiftcall
Enable the use of LLVM swiftcall support
enable-target-os-checking
Enable checking the target OS of serialized modules
enable-testable-attr-requires-testable-module
Enable checking of @testable
enable-testing
Allows this module's internal API to be accessed for testing
enable-throw-without-try
Allow throwing function calls without 'try'
enforce-exclusivity=
Enforce law of exclusivity
<enforcement>
external-pass-pipeline-filename
Use the pass pipeline defined by <pass_pipeline_file>
<pass_pipeline_file>
filelist
Specify source inputs in a file rather than on the command line
fix-string-substring-conversion
Emit a fix-it to append '[]' to String expressions when converting to Substring.
fixit-all
Apply all fixits from diagnostics without any filtering
force-single-frontend-invocation
framework
Specifies a framework which should be linked against
Fsystem
Add directory to system framework search path
Add directory to framework search path
gdwarf-types
Emit full DWARF type info.
gline-tables-only
Emit minimal debug info for backtraces only
gnone
Don't emit debug info
group-info-path
The path to collect the group information of the compiled module
gsil
Write the SIL into a file and generate debug-info to debug on SIL  level.
Emit debug info. This is the preferred setting for debugging with LLDB.
help-hidden
Display available options, including hidden options
Display available options
import-cf-types
Recognize and import CF types as class types
import-module
Implicitly import the specified module
import-objc-header
Implicitly imports an Objective-C header file
import-underlying-module
Implicitly imports the Objective-C half of a module
in-place
Overwrite input file with formatted file.
incremental
Perform an incremental build if possible
indent-switch-case
Indent cases in switch statements.
indent-width
Number of characters to indent.
index-file-path
Produce index data for file <path>
index-file
Produce index data for a source file
index-store-path
Store indexing data to <path>
index-system-modules
Emit index data for imported serialized swift system modules
interpret
Immediate mode
iterative-type-checker
Enable the iterative type checker
Add directory to the import search path
Number of commands to execute in parallel
line-range
<start line>:<end line>. Formats a range of lines (1-based). Can only be used with one input file.
<n:n>
link-objc-runtime
lldb-repl
LLDB-enhanced REPL mode
Add directory to library link search path
Specifies a library which should be linked against
merge-modules
Merge the input modules without otherwise processing them
migrate-keep-objc-visibility
When migrating, add '@objc' to declarations that would've been implicitly visible in Swift 3
migrator-update-sdk
Does nothing. Temporary compatibility flag for Xcode.
migrator-update-swift
module-cache-path
Specifies the Clang module cache path
module-link-name=
module-link-name
Library to link against when using this module
module-name=
module-name
Name of the module to build
no-link-objc-runtime
Don't link in additions to the Objective-C runtime
no-static-executable
Don't statically link the executable
no-static-stdlib
Don't statically link the Swift standard library
nostdimport
Don't search the standard library import path for modules
num-threads
Enable multi-threading and specify number of threads
Onone
Compile without any optimization
Oplayground
Compile with optimizations appropriate for a playground
Osize
Compile with optimizations and target small code size
Ounchecked
Compile with optimizations and remove runtime safety checks
output-file-map=
output-file-map
A file which specifies the location of outputs
output-filelist
Specify outputs in a file rather than on the command line
Compile with optimizations
Write output to <file>
<file>
parse-as-library
Parse the input file(s) as libraries, not scripts
parse-sil
Parse the input file as SIL code, not Swift source
parse-stdlib
Parse the input file(s) as the Swift standard library
parseable-output
Emit textual output in a parseable format
parse
Parse input file(s)
pc-macro
Apply the 'program counter simulation' macro
pch-disable-validation
Disable validating the persistent PCH
pch-output-dir
Directory to persist automatically created precompiled bridging headers
playground-high-performance
Omit instrumentation that has a high runtime performance impact
playground
Apply the playground semantics and transformation
primary-file
Produce output for this file, not the whole module
print-ast
Parse and type-check input file(s) and pretty print AST(s)
print-clang-stats
Print Clang importer statistics
print-inst-counts
Before IRGen, count all the various SIL instructions. Must be used in conjunction with -print-stats.
print-llvm-inline-tree
Print the LLVM inline tree.
print-stats
Print various statistics
profile-coverage-mapping
Generate coverage data for use with profiled execution counts
Generate instrumented code to collect execution counts
profile-use=
Supply a profdata file to enable profile-guided optimization
<profdata>
propagate-constraints
Enable constraint propagation in the type checker
remove-runtime-asserts
Remove runtime safety checks.
repl
REPL mode (the default if there is no input file)
report-errors-to-debugger
Deprecated, will be removed in future versions.
resource-dir
The directory that holds the compiler resource files
</usr/lib/swift>
Rpass-missed=
Report missed transformations by optimization passes whose name matches the given POSIX regular expression
Rpass=
Report performed transformations by optimization passes whose name matches the given POSIX regular expression
sanitize-coverage=
Specify the type of coverage instrumentation for Sanitizers and additional options separated by commas
<type>
sanitize=
Turn on runtime checks for erroneous behavior.
<check>
save-optimization-record-path
Specify the file name of any generated YAML optimization record
save-optimization-record
Generate a YAML optimization record file
save-temps
Save intermediate compilation results
Compile against <sdk>
<sdk>
serialize-debugging-options
Always serialize options for debugging (default: only for apps)
serialize-diagnostics-path
Output serialized diagnostics to <path>
serialize-diagnostics
Serialize diagnostics in a binary format
show-diagnostics-after-fatal
Keep emitting subsequent diagnostics after a fatal error
sil-debug-serialization
Do not eliminate functions in Mandatory Inlining/SILCombine dead functions. (for debugging only)
sil-inline-caller-benefit-reduction-factor
Controls the aggressiveness of performance inlining in -Osize mode by reducing the base benefits of a caller (lower value permits more inlining!)
sil-inline-threshold
Controls the aggressiveness of performance inlining
<50>
sil-link-all
Link all SIL functions
sil-merge-partial-modules
Merge SIL from all partial swiftmodules into the final module
sil-unroll-threshold
Controls the aggressiveness of loop unrolling
<250>
sil-verify-all
Verify SIL after each transform
solver-expression-time-threshold=
solver-memory-threshold
Set the upper bound for memory consumption, in bytes, by the constraint solver
solver-shrink-unsolved-threshold
Set The upper bound to number of sub-expressions unsolved before termination of the shrink phrase
stack-promotion-limit
Limit the size of stack promoted objects to the provided number of bytes.
static-executable
Statically link the executable
static-stdlib
Statically link the Swift standard library
stats-output-dir
Directory to write unified compilation-statistics files to
suppress-static-exclusivity-swap
Suppress static violations of exclusive access with swap()
suppress-warnings
Suppress all warnings
swift-version
Interpret input according to a specific Swift language version number
<vers>
tab-width
Width of tab character.
Generate code for a particular CPU variant
target=
Generate code for the given target
tbd-install_name=
tbd-install_name
The install_name to use in an emitted TBD file
tools-directory
Look for external executables (ld, clang, binutils) in <directory>
<directory>
trace-stats-events
Trace changes to stats in -stats-output-dir
typecheck
Parse and type-check input file(s)
typo-correction-limit
Limit the number of times the compiler will attempt typo correction to <n>
update-code
Update Swift code
use-jit
Register Objective-C classes as if the JIT were in use
use-ld=
Specifies the linker to be used
use-malloc
Allocate internal data structures using malloc (for memory debugging)
use-tabs
Use tabs for indentation.
validate-tbd-against-ir=
Compare the symbols in the IR against the TBD file that would be generated.
<level>
value-recursion-threshold
Set the maximum depth for direct recursion in value types
verify-apply-fixes
Like -verify, but updates the original source file
Verify the binary representation of debug output.
verify-generic-signatures
Verify the generic signatures in the given module
<module-name>
verify-ignore-unknown
Allow diagnostics for '<unknown>' location in verify mode
verify-type-layout
Verify compile-time and runtime type layout information for type
Verify diagnostics against expected-{error|warning|note} annotations
version
Print version information and exit
Show commands to run and use verbose output
warn-long-expression-type-checking=
warn-long-expression-type-checking
Warns when type-checking a function takes longer than <n> ms
warn-long-function-bodies=
warn-long-function-bodies
warn-swift3-objc-inference-complete
Warn about deprecated @objc inference in Swift 3 for every declaration that will no longer be inferred as @objc in Swift 4
warn-swift3-objc-inference-minimal
Warn about deprecated @objc inference in Swift 3 based on direct uses of the Objective-C entrypoint
warn-swift3-objc-inference
warnings-as-errors
Treat warnings as errors
whole-module-optimization
Optimize input files together instead of individually
Pass <arg> to the C/C++/Objective-C compiler
<arg>
Xfrontend
Pass <arg> to the Swift frontend
Xlinker
Specifies an option which should be passed to the linker
Xllvm
Pass <arg> to LLVM.
func
edge
indirect-calls
trace-bb
trace-cmp
8bit-counters
trace-pc
trace-pc-guard
"func", "bb", "edge"
address
thread
fuzzer
tsan
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::VerifierPass]
pm-max-devirt-iterations
enable-npm-partial-inlining
enable-npm-newgvn
Run NewGVN instead of GVN
enable-npm-earlycse-memssa
Enable the EarlyCSE w/ MemorySSA pass for the new PM (default = on)
enable-npm-gvn-hoist
Enable the GVN hoisting pass for the new PM (default = off)
enable-npm-gvn-sink
^(default|thinlto-pre-link|thinlto|lto-pre-link|lto)<(O[0123sz])>$
llvm::
..., 
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InnerAnalysisManagerProxy<llvm::FunctionAnalysisManager, llvm::Module>]
barrier
Cross-DSO CFI
__cfi_check
__cfi_check_fail
force-attribute
Add an attribute to a function. This should be a pair of 'function-name:attribute-name', for example -force-attribute=foo:noinline. This option can be specified multiple times.
enable-nonnull-arg-prop
Try to propagate nonnull argument attributes from callsites to caller functions.
import-instr-limit
Only import functions with less than N instructions
import-instr-evolution-factor
As we import functions, multiply the `import-instr-limit` threshold by this factor before processing newly imported functions
import-hot-evolution-factor
As we import functions called from hot callsite, multiply the `import-instr-limit` threshold by this factor before processing newly imported functions
import-hot-multiplier
Multiply the `import-instr-limit` threshold for hot callsites
import-critical-multiplier
Multiply the `import-instr-limit` threshold for critical callsites
import-cold-multiplier
Multiply the `import-instr-limit` threshold for cold callsites
print-imports
Print imported functions
compute-dead
Compute dead symbols
enable-import-metadata
Enable import metadata like 'thinlto_src_module'
summary-file
The summary file to use for function importing.
isnull
next
inline
Inlined
 inlined into 
disable-inlined-alloca-merging
basic statistics
verbose
printing of statistics for each inlined function
inliner-function-import-stats
Enable inliner stats for imported functions
internalize-public-api-file
A file containing list of symbol names to preserve
internalize-public-api-list
list
A list of symbol names to preserve
__stack_chk_fail
__stack_chk_guard
lowertypetests-avoid-reuse
Try to avoid reuse of byte array addresses using aliases
lowertypetests-summary-action
lowertypetests-read-summary
lowertypetests-write-summary
global_addr
cortex-a8
__TEXT,__StaticInit,regular,pure_instructions
.text.startup
GlobalValueMap
TypeIdMap
WithGlobalValueDeadStripping
CfiFunctionDefs
CfiFunctionDecls
TTRes
WPDRes
key not an integer
Kind
SingleImplName
ResByArg
Info
Indir
UniformRetVal
UniqueRetVal
VirtualConstProp
SingleImpl
SizeM1BitWidth
Unsat
ByteArray
Inline
Single
AllOnes
Linkage
NotEligibleToImport
Live
TypeTests
TypeTestAssumeVCalls
TypeCheckedLoadVCalls
TypeTestAssumeConstVCalls
TypeCheckedLoadConstVCalls
VFunc
GUID
Offset
mergefunc-sanity
How many functions in module could be used for MergeFunctions pass sanity check. '0' disables this check. Works only with '-debug' key.
mergefunc-preserve-debug-info
Preserve debug info in thunk when mergefunc transformations are made.
disable-partial-inlining
Disable partial ininling
skip-partial-inlining-cost-analysis
Skip Cost Analysis
max-num-inline-blocks
Max Number of Blocks  To be Partially Inlined
max-partial-inlining
Max number of partial inlining. The default is unlimited
outline-region-freq-percent
Relative frequency of outline region to the entry block
partial-inlining-extra-penalty
A debug option to add additional penalty to the computed one.
AlwaysInline
Callee
Caller
enable-partial-inlining
Run Partial inlinining pass
vectorize-loops
Run the Loop vectorization passes
vectorize-slp
Run the SLP vectorization passes
use-gvn-after-vectorization
Run GVN instead of Early CSE after vectorization passes
extra-vectorizer-passes
Run cleanup optimization passes after vectorization.
reroll-loops
Run the loop rerolling pass
enable-newgvn
Run the NewGVN pass
run-slp-after-loop-vectorization
Run the SLP vectorizer (and BB vectorizer) after the Loop vectorizer instead of before
use-cfl-aa
Enable the new, experimental CFL alias analysis
enable-loopinterchange
Enable the new, experimental LoopInterchange Pass
enable-non-lto-gmr
Enable the GlobalsModRef AliasAnalysis outside of the LTO pipeline.
enable-loop-load-elim
Enable the LoopLoadElimination Pass
prepare-for-thinlto
Enable preparation for ThinLTO.
profile-generate
Enable PGO instrumentation.
profile-generate-file
Specify the path of profile data file.
profile-use
Enable use phase of PGO instrumentation and specify the path of profile data file
enable-loop-versioning-licm
Enable the experimental Loop Versioning LICM pass
disable-preinline
Disable pre-instrumentation inliner
preinline-threshold
Control the amount of inlining in pre-instrumentation inliner (default = 75)
enable-earlycse-memssa
Enable the EarlyCSE w/ MemorySSA pass (default = on)
enable-gvn-hoist
Enable the GVN hoisting pass (default = off)
disable-libcalls-shrinkwrap
Disable shrink-wrap library calls
enable-simple-loop-unswitch
Enable the simple loop unswitch pass.
enable-gvn-sink
Enable the GVN sinking pass (default = off)
sample-profile-file
Profile file loaded by -sample-profile
sample-profile-max-propagate-iterations
Maximum number of iterations to go through when propagating sample block/edge weights through the CFG.
sample-profile-check-record-coverage
Emit a warning if less than N% of records in the input profile are matched to the IR.
sample-profile-check-sample-coverage
Emit a warning if less than N% of samples in the input profile are matched to the IR.
sample-profile-inline-hot-threshold
Inlined functions that account for more than N% of all samples collected in the parent function, will be inlined again.
What to do with the summary when running this pass
Do nothing
Import typeid resolutions from summary and globals
Export typeid resolutions to summary and globals
wholeprogramdevirt-summary-action
wholeprogramdevirt-read-summary
Read summary from given YAML file before running pass
wholeprogramdevirt-write-summary
Write summary to given YAML file after running pass
byte
__cxa_pure_virtual
asan-kernel
Enable KernelAddressSanitizer instrumentation
asan-recover
Enable recovery mode (continue-after-error).
asan-instrument-reads
instrument read instructions
asan-instrument-writes
instrument write instructions
asan-instrument-atomics
instrument atomic instructions (rmw, cmpxchg)
asan-always-slow-path
use instrumentation with slow path for all accesses
asan-force-dynamic-shadow
Load shadow address into a local variable for each function
asan-max-ins-per-bb
maximal number of instructions to instrument in any given BB
asan-stack
Handle stack memory
asan-max-inline-poisoning-size
Inline shadow poisoning for blocks up to the given size in bytes.
asan-use-after-return
Check stack-use-after-return
asan-redzone-byval-args
Create redzones for byval arguments (extra copy required)
asan-use-after-scope
Check stack-use-after-scope
asan-globals
Handle global objects
asan-initialization-order
Handle C++ initializer order
asan-detect-invalid-pointer-pair
Instrument <, <=, >, >=, - with pointer operands
asan-realign-stack
Realign stack to the value of this flag (power of two)
asan-instrumentation-with-call-threshold
If the function being instrumented contains more than this number of memory accesses, use callbacks instead of inline checks (-1 means never use callbacks).
__asan_
asan-memory-access-callback-prefix
Prefix for memory access callbacks
asan-instrument-dynamic-allocas
instrument dynamic allocas
asan-skip-promotable-allocas
Do not instrument promotable allocas
asan-mapping-scale
scale of asan shadow mapping
asan-mapping-offset
offset of asan shadow mapping [EXPERIMENTAL]
asan-opt
Optimize instrumentation
asan-opt-same-temp
Instrument the same temp just once
asan-opt-globals
Don't instrument scalar globals
asan-opt-stack
Don't instrument scalar stack variables
asan-stack-dynamic-alloca
Use dynamic alloca to represent stack variables
asan-force-experiment
Force optimization experiment (for testing)
asan-use-private-alias
Use private aliases for global variables
asan-globals-live-support
Use linker features to support dead code stripping of globals
asan-with-comdat
Place ASan constructors in comdat sections
asan-debug
asan-debug-stack
debug stack
asan-debug-func
Debug func
asan-debug-min
Debug min inst
asan-debug-max
Debug max inst
asan
llvm.asan.globals
bounds-checking-single-trap
Use one trap block per function
dfsan-preserve-alignment
respect alignment requirements provided by input IR
dfsan-abilist
File listing native ABI functions and how the pass treats them
dfsan-args-abi
Use the argument ABI rather than the TLS ABI
dfsan-combine-pointer-labels-on-load
Combine the label of the pointer with the label of the data when loading from memory.
dfsan-combine-pointer-labels-on-store
Combine the label of the pointer with the label of the data when storing in memory.
dfsan-debug-nonzero-labels
Insert calls to __dfsan_nonzero_label on observing a parameter, load or return with a nonzero label
dataflow
<unknown type>
functional
split-stack
default-gcov-version
gcov-exit-block-before-body
entry
exit
gcno
gcda
msan-track-origins
Track origins (allocation sites) of poisoned memory
msan-keep-going
keep going after reporting a UMR
msan-poison-stack
poison uninitialized stack variables
msan-poison-stack-with-call
poison uninitialized stack variables with a call
msan-poison-stack-pattern
poison uninitialized stack variables with the given pattern
msan-poison-undef
poison undef temps
msan-handle-icmp
propagate shadow through ICmpEQ and ICmpNE
msan-handle-icmp-exact
exact handling of relational integer ICmp
msan-check-access-address
report accesses through a pointer which has poisoned shadow
msan-dump-strict-instructions
print out instructions with default strict semantics
msan-instrumentation-with-call-threshold
If the function being instrumented requires more than this number of checks and origin stores, use callbacks instead of inline checks (-1 means never use callbacks).
msan-check-constant-shadow
Insert checks for constant shadow values
msan-with-comdat
Place MSan constructors in comdat sections
disable-icp
Disable indirect call promotion
icp-cutoff
Max number of promotions for this compilation
icp-csskip
Skip Callsite up to this number for this compilation
icp-lto
Run indirect-call promotion in LTO mode
icp-samplepgo
Run indirect-call promotion in SamplePGO mode
icp-call-only
Run indirect-call promotion for call instructions only
icp-invoke-only
Run indirect-call promotion for invoke instruction only
icp-dumpafter
Dump IR after transformation happens
memop-size-range
Set the range of size in memory intrinsic calls to be profiled precisely, in a format of <start_val>:<end_val>
memop-size-large
Set large value thresthold in memory intrinsic size profiling. Value of 0 disables the large value profiling.
enable-name-compression
Enable name string compression
hash-based-counter-split
Rename counter variable of a comdat function based on cfg hash
vp-static-alloc
Do static counter allocation for value profiler
vp-counters-per-site
The average number of profile counters allocated per value profiling site.
atomic-counter-update-promoted
Do counter update using atomic fetch add  for promoted counters only
do-counter-promotion
Do counter register promotion
max-counter-promotions-per-loop
Max number counter promotions per loop to avoid increasing register pressure too much
max-counter-promotions
Max number of allowed counter promotions
speculative-counter-promotion-max-exiting
The max number of exiting blocks of a loop to allow  speculative counter promotion
speculative-counter-promotion-to-loop
When the option is false, if the target block is in a loop, the promotion will be disallowed unless the promoted counter  update can be further/iteratively promoted into an acyclic  region.
iterative-counter-promotion
Allow counter promotion across the whole loop nest.
__llvm_coverage_names
__llvm_profile_runtime
pgo-test-profile-file
Specify the path of profile data file. This ismainly for test purpose.
disable-vp
Disable Value Profiling
icp-max-annotations
Max number of annotations for a single indirect call callsite
memop-max-annotations
Max number of preicise value annotations for a single memopintrinsic
do-comdat-renaming
Append function hash to the name of COMDAT function to avoid function hash mismatch due to the preinliner
pgo-warn-missing-function
Use this option to turn on/off warnings about missing profile data for functions.
no-pgo-warn-mismatch
Use this option to turn off/on warnings about profile cfg mismatch.
no-pgo-warn-mismatch-comdat
The option is used to turn on/off warnings about hash mismatch for comdat functions.
pgo-instr-select
Use this option to turn on/off SELECT instruction instrumentation. 
pgo-view-raw-counts
A boolean option to show CFG dag with raw profile counts from profile data. See also option -pgo-view-counts. To limit graph display to only one function, use filtering option -view-bfi-func-name.
pgo-instr-memop
Use this option to turn on/off memory intrinsic size profiling.
pgo-emit-branch-prob
When this option is on, the annotated branch probability will be emitted as  optimization remarks: -Rpass-analysis=pgo-instr-use
pgo-memop-count-threshold
The minimum count to optimize memory intrinsic calls
disable-memop-opt
Disable optimize
pgo-memop-percent-threshold
The percentage threshold for the memory intrinsic calls optimization
pgo-memop-max-version
The max version for the optimized memory  intrinsic calls
pgo-memop-scale-count
Scale the memop size counts using the basic  block count value
sanitizer-coverage-level
Sanitizer Coverage. 0: none, 1: entry block, 2: all blocks, 3: all blocks and critical edges
sanitizer-coverage-trace-pc
Experimental pc tracing
sanitizer-coverage-trace-pc-guard
pc tracing with a guard
sanitizer-coverage-inline-8bit-counters
increments 8-bit counter for every edge
sanitizer-coverage-trace-compares
Tracing of CMP and similar instructions
sanitizer-coverage-trace-divs
Tracing of DIV instructions
sanitizer-coverage-trace-geps
Tracing of GEP instructions
sanitizer-coverage-prune-blocks
Reduce the number of instrumented blocks
nosanitize
tsan-instrument-memory-accesses
Instrument memory accesses
tsan-instrument-func-entry-exit
Instrument function entry and exit
tsan-handle-cxx-exceptions
Handle C++ exceptions (insert cleanup blocks for unwinding)
tsan-instrument-atomics
Instrument atomics
tsan-instrument-memintrinsics
esan-cache-frag
Detect data cache fragmentation
esan-working-set
Measure the working set size
esan-instrument-loads-and-stores
Instrument loads and stores
esan-instrument-memintrinsics
Instrument memintrinsics (memset/memcpy/memmove)
esan-instrument-fastpath
Instrument fastpath
esan-aux-field-info
Generate binary with auxiliary struct field information
esan-assume-intra-cache-line
Assume each memory access touches just one cache line, for better performance but with a potential loss of accuracy.
global
constant
private
weak
dllimport
dllexport
hidden
protected
thread_local
triple
volatile
atomic
contract
exact
inbounds
section
alias
ifunc
module
prefix
cold
noinline
noreturn
readnone
readonly
sret
xchg
nand
umin
cleanup
expected integer
expected type
agg-antidep-debugdiv
Debug control for aggressive anti-dep breaker
agg-antidep-debugmod
enable-branch-coalesce
enable coalescing of duplicate branches
enable-tail-merge
tail-merge-threshold
Max number of predecessors to consider tail merging
tail-merge-size
Min number of instructions to consider tail merging
disable-cgp-branch-opts
Disable branch optimizations in CodeGenPrepare
disable-cgp-gc-opts
Disable GC optimizations in CodeGenPrepare
disable-cgp-select2branch
Disable select to branch conversion.
addr-sink-using-gep
Address sinking in CGP using GEPs.
enable-andcmp-sinking
Enable sinkinig and/cmp into branches.
disable-cgp-store-extract
Disable store(extract) optimizations in CodeGenPrepare
stress-cgp-store-extract
Stress test store(extract) optimizations in CodeGenPrepare
disable-cgp-ext-ld-promotion
Disable ext(promotable(ld)) -> promoted(ext(ld)) optimization in CodeGenPrepare
stress-cgp-ext-ld-promotion
Stress test ext(promotable(ld)) -> promoted(ext(ld)) optimization in CodeGenPrepare
disable-preheader-prot
Disable protection against removing loop preheaders
profile-guided-section-prefix
Use profile info to add section prefix for hot/cold functions
cgp-freq-ratio-to-skip-merge
Skip merging empty blocks if (frequency of empty block) / (frequency of destination block) is greater than this ratio
force-split-store
Force store splitting no matter what the target query says.
cgp-type-promotion-merge
Enable merging of redundant sexts when one is dominating the other.
memcmp-num-loads-per-block
The number of loads per basic block for inline expansion of memcmp that is only being compared against zero.
dfa-instr-limit
If present, stops packetizing after N instructions
early-ifcvt-limit
Maximum number of instructions per speculated block.
stress-early-ifcvt
Turn all knobs to 11
view-edge-bundles
Pop up a window to show edge bundle graphs
ifcvt-fn-start
ifcvt-fn-stop
ifcvt-limit
disable-ifcvt-simple
disable-ifcvt-simple-false
disable-ifcvt-triangle
disable-ifcvt-triangle-rev
disable-ifcvt-triangle-false
disable-ifcvt-triangle-false-rev
disable-ifcvt-diamond
disable-ifcvt-forked-diamond
ifcvt-branch-fold
imp-null-check-page-size
The page size of the target in bytes
imp-null-max-insts-to-consider
The max number of instructions to consider hoisting loads over (the algorithm is quadratic over this number)
disable-spill-hoist
Disable inline spill hoisting
lower-interleaved-accesses
Enable lowering interleaved accesses to intrinsics
live-debug-variables
Enable the live debug variables pass
use-segment-set-for-physregs
Use segment set for the computation of the live ranges of physregs.
EMPTY
-phi
Can't print out MachineBasicBlock because parent MachineFunction
 is null
derived from LLVM BB 
EH LANDING PAD
ADDRESS TAKEN
Align 
 bytes)
    Live Ins:
    Predecessors according to CFG:
  * 
    Successors according to CFG:
Pop up a window to show a dag displaying how machine block frequencies propagate through the CFG.
view-machine-block-freq-propagation-dags
Pop up a window to show a dag displaying MBP layout and associated block frequencies of the CFG.
view-block-layout-with-bfi
align-all-blocks
Force the alignment of all blocks in the function.
align-all-nofallthru-blocks
Force the alignment of all blocks that have no fall-through predecessors (i.e. don't add nops that are executed).
block-placement-exit-block-bias
Block frequency percentage a loop exit block needs over the original exit to be considered the new exit.
loop-to-cold-block-ratio
Outline loop blocks from loop chain if (frequency of loop) / (frequency of block) is greater than this ratio
precise-rotation-cost
Model the cost of loop rotation more precisely by using profile data.
force-precise-rotation-cost
Force the use of precise cost loop rotation strategy.
misfetch-cost
Cost that models the probabilistic risk of an instruction misfetch due to a jump comparing to falling through, whose cost is zero.
jump-inst-cost
Cost of jump instructions.
tail-dup-placement
Perform tail duplication during placement. Creates more fallthrough opportunites in outline branches.
branch-fold-placement
Perform branch folding during placement. Reduces code size.
tail-dup-placement-threshold
Instruction cutoff for tail duplication during layout. Tail merging during layout is forced to have a threshold that won't conflict.
tail-dup-placement-aggressive-threshold
Instruction cutoff for aggressive tail duplication during layout. Used at -O3. Tail merging during layout is forced to have a threshold that won't conflict.
tail-dup-placement-penalty
Cost penalty for blocks that can avoid breaking CFG by copying. Copying can increase fallthrough, but it also increases icache pressure. This parameter controls the penalty to account for that. Percent as integer.
triangle-chain-count
Number of triangle-shaped-CFG's that need to be in a row for the triangle tail duplication heuristic to kick in. 0 to disable.
static-likely-prob
branch probability threshold in percentageto be considered very likely
profile-likely-prob
branch probability threshold in percentage to be considered very likely when profile is available
Verify machine dominator info (time consuming)
verify-machine-dom-info
Frame Objects:
  fi#
dead
variable sized
size=
, fixed
, at location [SP
align-all-functions
Force the alignment of all functions.
IsSSA
NoPHIs
TracksLiveness
NoVRegs
FailedISel
Legalized
RegBankSelected
Selected
no-realign-stack
# Machine code for function 
Function Live Ins: 
# End machine code for function 
Constant Pool:
  cp#
, align=
Jump Tables:
  jt#
 BB#
MachineFunction Printer
print-whole-regmask
Print the full contents of regmask operands in IR dumps
<MCSym= 
earlyclobber,
imp-
,read-undef
imp-use
dead
internal
tied
half 
quad 
x86_fp80 0xK
<BB#
<fi#
<cp#
<ti#
<jt#
<ga:
<es:
<regmask
 more...
<regliveout>
<call frame instruction>
<intrinsic:@
<intrinsic:
intpred
floatpred
[TF=
Volatile 
(addrspace=
(align=
(tbaa=
(alias.scope=
(noalias=
(nontemporal)
(dereferenceable)
(invariant)
(flag1)
(flag2)
(flag3)
UNKNOWN
 [sideeffect]
 [mayload]
 [maystore]
 [isconvergent]
 [alignstack]
 [attdialect]
 [inteldialect]
pred:
opt:
:[reguse
:[regdef
:[regdef-ec
:[clobber
:[imm
:[mem
:[??
 tiedto:$
 flags: 
FrameSetup
FrameDestroy
 mem:
 line no:
 inlined @[ 
 indirect
 dbg:
avoid-speculation
MachineLICM should avoid speculation
hoist-cheap-insts
MachineLICM should hoist even cheap instructions
sink-insts-to-avoid-spills
MachineLICM should sink instructions into loops to avoid register spills
enable-pipeliner
Enable Software Pipelining
enable-pipeliner-opt-size
Enable SWP at Os.
pipeliner-max-mii
Size limit for the the MII.
pipeliner-max-stages
Maximum stages allowed in the generated scheduled.
pipeliner-prune-deps
Prune dependences between unrelated Phi nodes.
pipeliner-prune-loop-carried
Prune loop carried order dependences.
pipeliner-ignore-recmii
Ignore RecMII
enable-subreg-liveness
Enable subregister liveness tracking.
ScheduleDAGMI::viewGraph is only available in debug builds on 
Critical Path(GS-RR ): 
misched-topdown
Force top-down list scheduling
misched-bottomup
Force bottom-up list scheduling
misched-dcpl
Print critical path length to stdout
misched-limit
Limit ready list to N instructions
misched-regpressure
Enable register pressure scheduling.
misched-cyclicpath
Enable cyclic critical path analysis.
misched-cluster
Enable memop clustering.
verify-misched
Verify machine instrs before and after machine scheduling
Machine instruction scheduler to use
misched
Use the target's default scheduler choice.
enable-misched
Enable the machine instruction scheduling pass.
enable-post-misched
Enable the post-ra machine instruction scheduling pass.
converge
Standard converging scheduler.
ilpmax
Schedule bottom-up for max ILP
ilpmin
Schedule bottom-up for min ILP
TopQ
BotQ
machine-sink-split
Split critical edges during machine sinking
machine-sink-bfi
Use block frequency info to find successors to sink
machine-sink-split-probability-threshold
Percentage threshold for splitting single-instruction critical edge. If the branch threshold is higher than this threshold, we allow speculative execution of up to 1 instruction to avoid branching to splitted critical edge
Found 
 machine code errors.
Function has NoVRegs property but there are VReg operands
MBB has duplicate entries in its predecessor list.
MBB has duplicate entries in its successor list.
FrameSetup is after another FrameSetup
FrameDestroy is not after a FrameSetup
FrameDestroy <n> is after FrameSetup <m>
FrameDestroy <
> is after FrameSetup <
The exit stack state of a predecessor is inconsistent.
Predecessor BB#
 has exit state (
), while BB#
 has entry state (
The entry stack state of a successor is inconsistent.
Successor BB#
A return block ends with a FrameSetup.
A return block ends with a nonzero stack adjustment.
PHI operand is not live-out from predecessor
Missing PHI operand
 is a predecessor according to the CFG.
Virtual register killed in block, but needed live out.
Virtual register 
 is used after the block.
Virtual register defs don't dominate all uses.
LiveVariables: Block missing from AliveBlocks
 must be live through the block.
LiveVariables: Block should not be in AliveBlocks
 is not needed live through the block.
Missing live interval for virtual register
 still has defs or uses
Lane masks of sub ranges overlap in live interval
- interval:    
Subrange lanemask is invalid
Subrange must not be empty
- liverange:   
A Subrange is not covered by the main range
Multiple connected components in live interval
: valnos
MBB has allocatable live-in, but isn't entry or landing-pad.
MBB has successor that isn't part of the function.
Inconsistent CFG
MBB is not in the predecessor list of the successor BB#
MBB has predecessor that isn't part of the function.
MBB is not in the successor list of the predecessor BB#
MBB has more than one landing pad successor
MBB exits via unconditional fall-through but doesn't have exactly one CFG successor!
MBB exits via unconditional fall-through but its successor differs from its CFG successor!
MBB exits via unconditional fall-through but ends with a barrier instruction!
MBB exits via unconditional fall-through but has a condition!
MBB exits via unconditional branch but doesn't have exactly one CFG successor!
MBB exits via unconditional branch but the CFG successor doesn't match the actual successor!
MBB exits via unconditional branch but doesn't contain any instructions!
MBB exits via unconditional branch but doesn't end with a barrier instruction!
MBB exits via unconditional branch but the branch isn't a terminator instruction!
MBB conditionally falls through out of function!
MBB exits via conditional branch/fall-through but only has one CFG successor!
MBB exits via conditional branch/fall-through but the CFG successor don't match the actual successor!
MBB exits via conditional branch/fall-through but doesn't have exactly two CFG successors!
MBB exits via conditional branch/fall-through but the CFG successors don't match the actual successors!
MBB exits via conditional branch/fall-through but doesn't contain any instructions!
MBB exits via conditional branch/fall-through but ends with a barrier instruction!
MBB exits via conditional branch/fall-through but the branch isn't a terminator instruction!
MBB exits via conditional branch/branch through but only has one CFG successor!
MBB exits via conditional branch/branch through but the CFG successor don't match the actual successor!
MBB exits via conditional branch/branch but doesn't have exactly two CFG successors!
MBB exits via conditional branch/branch but the CFG successors don't match the actual successors!
MBB exits via conditional branch/branch but doesn't contain any instructions!
MBB exits via conditional branch/branch but doesn't end with a barrier instruction!
MBB exits via conditional branch/branch but the branch isn't a terminator instruction!
MBB exits via conditinal branch/branch but there's no condition!
AnalyzeBranch returned invalid data!
MBB live-in list contains non-physical register
Bad instruction parent pointer
Instruction: 
Missing BundledPred flag, BundledSucc was set on predecessor
BundledPred flag is set, but BundledSucc not set on predecessor
Instruction index out of order
Last instruction was at 
Non-terminator instruction after the first terminator
First terminator was:
No bundle header
Too few operands
 operands expected, but 
 given.
Found PHI instruction with NoPHIs property set
Too few operands on inline asm
Asm string must be an external symbol
Asm flags must be an immediate
Unknown asm flags
Missing operands in last group
Expected implicit register after groups
Missing mayLoad flag
Missing mayStore flag
Debug instruction has a slot index
Instruction inside bundle has a slot index
Missing slot index
Unexpected generic instruction in a Selected function
type mismatch in generic instruction
Generic instruction cannot have physical register
Generic instruction accessing memory must have one mem operand
Generic Instruction G_PHI has operands with incompatible/missing types
meta operands to STATEPOINT not constant!
Instruction has operand with wrong parent set
Explicit definition must be a register
Explicit definition marked as use
Explicit definition marked as implicit
Explicit operand marked as def
Explicit operand marked as implicit
Tied use must be a register
Operand should be tied
Tied def doesn't match MCInstrDesc
Tied counterpart must be a register
Tied physical registers must match.
Explicit operand should not be tied
Extra explicit operand on non-variadic instruction
Kill missing from LiveVariables
No live subrange at use
- at:          
Virtual register has no live interval
Using an undefined physical register
Reading virtual register without a def
Using a killed virtual register
Multiple virtual register defs in SSA form
Virtual register has no Live interval
Must be tied to a register
Missing tie flags on tied operand
Inconsistent tie links
Explicit def tied to explicit use without tie constraint
Explicit def should be tied to implicit use
Two-address instruction operands must be identical
Illegal subregister index for physical register
Illegal physical register for instruction
 is not a 
 register.
Generic virtual register invalid in a Selected function
Generic virtual register must have a valid type
Generic virtual register must have a bank in a RegBankSelected function
Register bank is too small for virtual register
Register bank 
 too small(
) to fit 
-bits
Generic virtual register does not subregister index
Virtual register does not match instruction constraint
Expect register class 
 but got nothing
Invalid subregister index for virtual register
Register class 
 does not support subreg index 
Invalid register class for subregister index
 does not fully support subreg index 
No largest legal super class exists.
No matching super-reg register class.
Illegal virtual register for instruction
Expected a 
 register, but got a 
 register
PHI operand is not in the CFG
Missing fixed stack memoperand.
Instruction loads from dead spill slot
Live stack: 
Instruction stores to dead spill slot
BundledSucc flag set on last instruction in block
Block ends before last instruction index
Block ends at 
 last instruction was at 
Inconsistent valno->def
No live segment at def
Live range continues after dead def flag
- ValNo:       
 (def 
No live segment at use
Live range continues after kill flag
- lanemask:    
%08X
- regunit:     
Value not live at VNInfo def and not marked unused
Live segment at def has different VNInfo
Invalid VNInfo definition index
PHIDef VNInfo is not defined at MBB start
No instruction at VNInfo def index
Defining instruction does not modify register
Early clobber def must be at an early-clobber slot
Non-PHI, non-early clobber def must be at a register slot
Foreign valno in live segment
- segment:     
Live segment valno is marked unused
Bad start of live segment, no basic block
Live segment must begin at MBB entry or valno def
Bad end of live segment, no basic block
Live segment doesn't end at a valid instruction
Live segment ends at B slot of an instruction
Live segment ending at dead slot spans instructions
Live segment ending at early clobber slot must be redefined by an EC def in the same instruction
Instruction ending live segment on dead slot has no dead flag
Instruction ending live segment doesn't read the register
Register not marked live out of predecessor
 live into BB#
, not live before 
Different value live out of predecessor
Valno #
 live out of BB#
Valno #
- v. register: 
- operand 
:   
- instruction: 
- basic block: BB#
*** Bad machine code: 
 ***
- function:    
obfuscation-symbol-map
Specify the symbol_map output
filename.bcsymbolmap
obfuscate-preserve
<sym name>
aggressive-ext-opt
Aggressive extension optimization
disable-peephole
Disable the peephole optimizer
disable-adv-copy-opt
Disable advanced copy optimization
disable-non-allocatable-phys-copy-opt
Disable non-allocatable physical register copy optimization
rewrite-phi-limit
Limit the length of PHI chains to lookup
recurrence-chain-limit
Maximum length of recurrence chain when evaluating the benefit of commuting operands
disable-phi-elim-edge-splitting
Disable critical edge splitting during PHI elimination
phi-elim-split-all-critical-edges
Split all critical edges during PHI elimination
no-phi-elim-live-out-early-exit
Do not use an early exit if isLiveOutPastPHIs returns true.
post-RA-scheduler
Enable scheduling after register allocation
break-anti-dependencies
Break post-RA scheduling anti-dependencies: "critical", "all", or "none"
postra-sched-debugdiv
Debug control MBBs that are scheduled
postra-sched-debugmod
warn-stack-size
Warn for stack size bigger than the given number
TargetCustom
Stack
JumpTable
ConstantPool
FixedStack
GlobalValueCallEntry
ExternalSymbolCallEntry
Verify during register allocation
verify-regalloc
seed
Seed Live Regs
basic
basic register allocator
Basic Register Allocator
fast
fast register allocator
inline assembly requires more registers than available
ran out of registers during register allocation
Fast Register Allocator
Default
Optimize for size
speed
Optimize for speed
split-spill-mode
Spill mode for splitting live ranges
lcr-max-depth
Last chance recoloring max depth
lcr-max-interf
Last chance recoloring maximum number of considered interference at a time
exhaustive-register-search
Exhaustive Search for registers bypassing the depth and interference cutoffs of last chance recoloring
enable-local-reassign
Local reassignment can yield better allocation decisions, but may be compile time intensive
enable-deferred-spilling
Instead of spilling a variable right away, defer the actual code insertion to the end of the allocation. That way the allocator might still find a suitable coloring for this variable because of other evicted variables.
regalloc-csr-first-time-cost
Cost for first time use of callee-saved register.
greedy
greedy register allocator
register allocation failed: maximum depth for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
register allocation failed: maximum interference for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
register allocation failed: maximum interference and depth for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
local_split
Local Splitting
global_split
Global Splitting
After splitting live range around basic blocks
Spiller
After spilling
evict
Evict
After splitting live range around region
Before greedy register allocator
LoopSpillReload
NumSpills
NumFoldedSpills
 folded spills 
NumReloads
 reloads 
NumFoldedReloads
 folded reloads 
generated in loop
Greedy Register Allocator
stress-regalloc
Limit all regclasses to N registers
join-liveintervals
Coalesce copies (default=true)
terminal-rule
Apply the terminal rule
join-splitedges
Coalesce copies on split edges (default=subtarget)
join-globalcopies
Coalesce copies that span blocks (default=subtarget)
verify-coalescing
Verify machine instrs before and after register coalescing
print-regusage
print register usage details collected for analysis.
safe-stack-coloring
enable safe stack coloring
safe-stack-layout
enable safe stack layout
dag.
<entry>
<exit>
enable-aa-sched-mi
Enable use of AA during MI DAG construction
use-tbaa-in-sched-mi
Enable use of TBAA during MI DAG construction
dag-maps-huge-region
The limit to use while constructing the DAG prior to scheduling, at which point a trade-off is made to avoid excessive compile time.
dag-maps-reduction-size
A huge scheduling region will have maps reduced by this many nodes at a time. Defaults to HugeRegion / 2.
ScheduleDAG::viewGraph is only available in debug builds on 
systems with Graphviz or gv!
Scheduling-Units Graph for 
enable-shrink-wrap
enable the shrink-wrapping pass
Berd
Impossible to implement partial COPY
no-stack-coloring
Disable stack coloring
protect-from-escaped-allocas
Do not optimize lifetime zones that are broken
stackcoloring-lifetime-start-on-first-use
Treat stack lifetimes as starting on first use, not on START marker.
enable-patchpoint-liveness
Enable PatchPoint Liveness Analysis Pass
stackmap-version
Specify the stackmap encoding version (default = 3)
enable-selectiondag-sp
no-stack-slot-sharing
Suppress slot sharing during stack coloring
ssc-dce-limit
tail-dup-size
Maximum instructions to consider tail duplicating
tail-dup-indirect-size
Maximum instructions to consider tail duplicating blocks that end with indirect branches.
tail-dup-verify
Verify sanity of PHI instructions during taildup
tail-dup-limit
disable-sched-hazard
Disable hazard detection during preRA scheduling
cannot spill patchpoint subregister operand
jump-is-expensive
Do not create extra branches to split comparison logic.
min-jump-table-entries
Set minimum number of entries to use a jump table.
max-jump-table-size
Set maximum size of jump tables; zero for no limit.
jump-table-density
Minimum density for building a jump table in a normal function
optsize-jump-table-density
Minimum density for building a jump table in an optsize function
min-predictable-branch
Minimum percentage (0-100) that a condition must be either true or false to assume that the condition is predictable
start-after
start-before
stop-after
stop-before
option-unspecified
disable-post-ra
Disable Post Regalloc Scheduler
disable-branch-fold
Disable branch folding
disable-tail-duplicate
Disable tail duplication
disable-early-taildup
Disable pre-register allocation tail duplication
disable-block-placement
Disable probability-driven block placement
enable-block-placement-stats
Collect probability-driven block placement stats
disable-ssc
Disable Stack Slot Coloring
disable-machine-dce
Disable Machine Dead Code Elimination
disable-early-ifcvt
Disable Early If-conversion
disable-machine-licm
Disable Machine LICM
disable-machine-cse
Disable Machine Common Subexpression Elimination
optimize-regalloc
Enable optimized register allocation compilation path.
disable-postra-machine-licm
disable-machine-sink
Disable Machine Sinking
disable-lsr
Disable Loop Strength Reduction Pass
disable-constant-hoisting
Disable ConstantHoisting
disable-cgp
Disable Codegen Prepare
disable-copyprop
Disable Copy Propagation pass
disable-partial-libcall-inlining
Disable Partial Libcall Inlining
enable-implicit-null-checks
Fold null checks into faulting memory operations
print-lsr-output
Print LLVM IR produced by the loop-reduce pass
print-isel-input
Print LLVM IR input to isel pass
print-gc
Dump garbage collector data
verify-machineinstrs
Verify generated machine code
enable-machine-outliner
Enable machine outliner
fast-isel
Enable the "fast" instruction selector
global-isel
Enable the "global" instruction selector
print-machineinstrs
Print machine instrs
pass-name
global-isel-abort
Enable abort calls when "global" instruction selection fails to lower/select an instruction: 0 disable the abort, 1 enable the abort, and 2 disable the abort but emit a diagnostic on failure
misched-postra
Run MachineScheduler post regalloc (independent of preRA sched)
early-live-intervals
Run live interval analysis earlier in the pipeline
Disable CFL-AA
steens
Enable unification-based CFL-AA
anders
Enable inclusion-based CFL-AA
both
Enable both variants of CFL-AA
use-cfl-aa-in-codegen
Enable the new, experimental CFL alias analysis in CodeGen
Resume compilation after a specific pass
Resume compilation before a specific pass
Stop compilation after a specific pass
Stop compilation before a specific pass
Register allocator to use
default
pick register allocator based on -O option
%noreg
%vreg
%physreg
:sub(
Unit~
BadUnit~
schedmodel
Use TargetSchedModel for latency lookup
scheditins
Use InstrItineraryData for latency lookup
twoaddr-reschedule
Coalesce copies by rescheduling (default=true)
dataflow-edge-limit
Maximum number of dataflow edges to traverse when evaluating the benefit of commuting operands
disable-demotion
Clone multicolor basic blocks but do not demote cross funclet values
disable-cleanups
Do not remove implausible terminators or other similar cleanups
bitcode-mdindex-threshold
Number of metadatas above which we emit an index to enable lazy-loading
enable-ipra
Enable interprocedural register allocation to reduce load/store at procedure calls.
adce-remove-control-flow
adce-remove-loops
consthoist-with-block-frequency
Enable the use of the block frequency analysis to reduce the chance to execute const materialization more frequently than without hoisting.
const
cvp-dont-process-adds
enable-dse-partial-overwrite-tracking
Enable partial-overwrite tracking in DSE
Dead Store Elimination
float2int-max-integer-bw
Max integer bitwidth to consider in float2int(default=64)
enable-pre
enable-load-pre
max-recurse-depth
Max recurse depth (default = 1000)
gvn-max-hoisted
Max number of instructions to hoist (default unlimited = -1)
gvn-hoist-max-bbs
Max number of basic blocks on the path between hoisting locations (default = 4, unlimited = -1)
gvn-hoist-max-depth
Hoist instructions from the beginning of the BB up to the maximum specified depth (default = 100, unlimited = -1)
gvn-hoist-max-chain-length
Maximum length of dependent chains to hoist (default = 10, unlimited = -1)
ExpressionTypeBasic, 
operands = {
verify-indvars
Verify the ScalarEvolution result after running indvars
never
never replace exit value
cheap
only replace exit value when the cost is cheap
always
always replace exit value whenever possible
replexitval
Choose the strategy to replace exit value in IndVarSimplify
indvars-post-increment-ranges
Use post increment control-dependent ranges in IndVarSimplify
disable-lftr
Disable Linear Function Test Replace optimization
jump-threading-threshold
Max block size to duplicate for jump threading
jump-threading-implication-search-threshold
The number of predecessors to search for a stronger condition to use to thread over a weaker condition
print-lvi-after-jump-threading
Print the LazyValueInfo cache after JumpThreading
disable-licm-promotion
Disable memory promotion in LICM pass
licm-max-num-uses-traversed
Max num uses visited for identifying load invariance in loop using invariant start (default = 8)
licm
Loop Invariant Code Motion
sink-freq-percent-threshold
Do not sink instructions that require cloning unless they execute less than this percent of the time.
max-uses-for-sinking
Do not sink instructions that have too many uses.
loop-prefetch-writes
Prefetch write addresses
prefetch-distance
Number of instructions to prefetch ahead
min-prefetch-stride
Min stride to add prefetches
max-prefetch-iters-ahead
Max number of iterations to prefetch ahead
loop-distribute-verify
Turn on DominatorTree and LoopInfo verification after Loop Distribution
loop-distribute-non-if-convertible
Whether to distribute into a loop that may not be if-convertible by the loop vectorizer
loop-distribute-scev-check-threshold
The maximum number of SCEV checks allowed for Loop Distribution
loop-distribute-scev-check-threshold-with-pragma
The maximum number of SCEV checks allowed for Loop Distribution for loop marked with #pragma loop distribute(enable)
enable-loop-distribute
Enable the new, experimental LoopDistribution Pass
llvm.loop.distribute.enable
use-lir-code-size-heurs
Use loop idiom recognition code size heuristics when compilingwith -Os/-Oz
loop-interchange-threshold
Interchange if you gain more than this number
runtime-check-per-loop-load-elim
Max number of memchecks allowed per eliminated load on average
loop-load-elimination-scev-check-threshold
The maximum number of SCEV checks allowed for Loop Load Elimination
max-reroll-increment
The maximum increment for loop rerolling
reroll-num-tolerated-failed-matches
The maximum number of failures to tolerate during fuzzy matching. (default: 400)
rotation-max-header-size
The default maximum header size for automatic loop rotation
loop-rotate
enable-lsr-phielim
Enable LSR phi elimination
lsr-insns-cost
Add instruction count to a LSR cost model
lsr-exp-narrow
Narrow LSR complex solution using expectation of registers number
lsr-filter-same-scaled-reg
Narrow LSR search space by filtering non-optimal formulae with the same ScaledReg and Scale
unroll-threshold
The cost threshold for loop unrolling
unroll-partial-threshold
The cost threshold for partial loop unrolling
unroll-max-percent-threshold-boost
The maximum 'boost' (represented as a percentage >= 100) applied to the threshold when aggressively unrolling a loop due to the dynamic cost savings. If completely unrolling a loop will reduce the total runtime from X to Y, we boost the loop unroll threshold to DefaultThreshold*std::min(MaxPercentThresholdBoost, X/Y). This limit avoids excessive code bloat.
unroll-max-iteration-count-to-analyze
Don't allow loop unrolling to simulate more than this number ofiterations when checking full unroll profitability
unroll-count
Use this unroll count for all loops including those with unroll_count pragma values, for testing purposes
unroll-max-count
Set the max unroll count for partial and runtime unrolling, fortesting purposes
unroll-full-max-count
Set the max unroll count for full unrolling, for testing purposes
unroll-allow-partial
Allows loops to be partially unrolled until -unroll-threshold loop size is reached.
unroll-allow-remainder
Allow generation of a loop remainder (extra iterations) when unrolling a loop.
unroll-runtime
Unroll loops with run-time trip counts
unroll-max-upperbound
The max of trip count upper bound that is considered in unrolling
pragma-unroll-threshold
Unrolled size limit for loops with an unroll(full) or unroll_count pragma.
flat-loop-tripcount-threshold
If the runtime tripcount for the loop is lower than the threshold, the loop is considered as flat and will be less aggressively unrolled.
unroll-allow-peeling
Allows loops to be peeled when the dynamic trip count is known to be low.
unroll-revisit-child-loops
Enqueue and re-visit child loops in the loop PM after unrolling. This shouldn't typically be needed as child loops (or their clones) were already visited.
llvm.loop.unroll.count
llvm.loop.unroll.full
llvm.loop.unroll.enable
loop-unswitch-threshold
Max loop size to unswitch
licm-versioning-invariant-threshold
LoopVersioningLICM's minimum allowed percentageof possible invariant instructions per loop
licm-versioning-max-depth-threshold
LoopVersioningLICM's threshold for maximum allowed loop nest/depth
likely-branch-weight
Weight of the branch likely to be taken (default = 2000)
unlikely-branch-weight
Weight of the branch unlikely to be taken (default = 1)
guards-predicate-pass-branch-weight
The probability of a guard failing is assumed to be the reciprocal of this value (default = 1 << 20)
opcode = 
newgvn-vn
Controls which instructions are value numbered
newgvn-phi
Controls which instructions we create phi of ops for
enable-store-refinement
sroa-random-shuffle-slices
sroa-strict-inbounds
sroa
SROA
bonus-inst-threshold
Control the number of bonus instructions (default = 1)
spec-exec-max-speculation-cost
Speculative execution is not applied to basic blocks where the cost of the instructions to speculatively execute exceeds this limit.
spec-exec-max-not-hoisted
Speculative execution is not applied to basic blocks where the number of instructions that would not be speculatively executed exceeds this limit.
spec-exec-only-if-divergent-target
Speculative execution is applied only to targets with divergent branches, even if the pass was configured to apply only to all targets.
disable-tail-calls
expensive-combines
Enable expensive instruction combines
instcombine-maxarray-size
Maximum array size considered when doing a combine
instcombine-lower-dbg-declare
unfold-element-atomic-memcpy-max-elements
Maximum number of elements in atomic memcpy the optimizer is allowed to unfold
nvptx-f32ftz
exec
thunk
enable-if-conversion
Enable if-conversion during vectorization.
vectorizer-min-trip-count
Loops with a constant trip count that is smaller than this value are vectorized only if no scalar iteration overheads are incurred.
vectorizer-maximize-bandwidth
Maximize bandwidth when selecting vectorization factor which will be determined by the smallest type in loop.
enable-interleaved-mem-accesses
Enable vectorization on interleaved memory accesses in a loop
max-interleave-group-factor
Maximum factor for an interleaved access group (default = 8)
force-target-num-scalar-regs
A flag that overrides the target's number of scalar registers.
force-target-num-vector-regs
A flag that overrides the target's number of vector registers.
force-target-max-scalar-interleave
A flag that overrides the target's max interleave factor for scalar loops.
force-target-max-vector-interleave
A flag that overrides the target's max interleave factor for vectorized loops.
force-target-instruction-cost
A flag that overrides the target's expected cost for an instruction to a single constant value. Mostly useful for getting consistent testing.
small-loop-cost
The cost of a loop that is considered 'small' by the interleaver.
loop-vectorize-with-block-frequency
Enable the use of the block frequency analysis to access PGO heuristics minimizing code growth in cold regions and being more aggressive in hot regions.
enable-loadstore-runtime-interleave
Enable runtime interleaving until load/store ports are saturated
vectorize-num-stores-pred
Max number of stores to be predicated behind an if.
enable-ind-var-reg-heur
Count the induction variable only once when interleaving
enable-cond-stores-vec
Enable if predication of stores during vectorization.
max-nested-scalar-reduction-interleave
The maximum interleave count to use when interleaving a scalar reduction in a nested loop.
pragma-vectorize-memory-check-threshold
The maximum allowed number of runtime memory checks with a vectorize(enable) pragma.
vectorize-scev-check-threshold
The maximum number of SCEV checks allowed.
pragma-vectorize-scev-check-threshold
The maximum number of SCEV checks allowed with a vectorize(enable) pragma
index
.splatinsert
.splat
slp-threshold
Only vectorize if you gain more than this number 
slp-vectorize-hor
Attempt to vectorize horizontal reductions
slp-vectorize-hor-store
Attempt to vectorize horizontal reductions feeding into a store
slp-max-reg-size
Attempt to vectorize for this register size in bits
slp-schedule-budget
Limit the size of the SLP scheduling region per block
slp-min-reg-size
slp-recursion-max-depth
Limit the recursion depth when building a vectorizable tree
slp-min-tree-size
Only vectorize small trees if they are fully vectorizable
view-slp-tree
Display the SLP trees with Graphviz
Cost
OVERVIEW: 
USAGE: 
 [options] <inputs>
OPTIONS
 <value>
<value>
clang.arc.no_objc_arc_exceptions
l_objc_msgSend_fixup_
__objc_classrefs
__objc_superrefs
__objc_methname
clang.arc.retainAutoreleasedReturnValueMarker
clang.imprecise_release
no-discriminators
Disable generation of discriminator information.
aggregate-extracted-args
Aggregate arguments to code-extracted functions
enable-noalias-to-md-conversion
Convert noalias attributes to metadata during inlining.
preserve-alignment-assumptions-during-inlining
Convert align attributes to assumptions during inlining.
: argument 
savedstack
.body
eh.lpad-body
.lpad-body
.exit
ptrint
maskedptr
maskcond
Verify loop lcssa form (time consuming)
verify-loop-lcssa
cond
.noexc
unroll-runtime-epilog
Allow runtime unrolled loops to be unrolled with epilog instead of prolog.
unroll-verify-domtree
Verify domtree after unrolling
unroll-peel-max-count
Max average trip count which will cause loop peeling.
unroll-force-peel-count
Force a peel count regardless of profiling information.
unroll-runtime-multi-exit
Allow runtime unrolling for loops with multiple exits, when epilog is generated
loop-unroll
llvm.loop.unroll.disable
loop-version-annotate-no-alias
Add no-alias annotation for instructions that are disambiguated by memchecks
mem2reg
anon.
verify-predicateinfo
Verify PredicateInfo in legacy printer pass.
predicateinfo-rename
Controls which variables are renamed with predicateinfo
__sanitizer_stat_report
__sanitizer_stat_init
phi-node-folding-threshold
Control the amount of phi node folding to perform (default = 2)
simplifycfg-dup-ret
Duplicate return instructions into unconditional branches
simplifycfg-sink-common
Sink common instructions down to the end block
simplifycfg-hoist-cond-stores
Hoist conditional stores if an unconditional store precedes
simplifycfg-merge-cond-stores
Hoist conditional stores even if an unconditional store does not precede - hoist multiple conditional stores into a single predicated store
simplifycfg-merge-cond-stores-aggressively
When merging conditional stores, do so even if the resultant basic blocks are unlikely to be if-converted as a result
speculate-one-expensive-inst
Allow exactly one expensive instruction to be speculatively executed
max-speculation-depth
Limit maximum recursion depth when calculating costs of speculatively executed instructions
retval
enable-double-float-shrink
Enable unsafe double to float shrinking for math lib calls
char
rewrite-map-file
Symbol Rewrite Map
disable-basicaa
print-all-alias-modref-info
print-no-aliases
print-may-aliases
print-partial-aliases
print-must-aliases
print-no-modref
print-mod
print-ref
print-modref
evaluate-aa-metadata
NoAlias
MayAlias
PartialAlias
MustAlias
alias-set-saturation-threshold
The maximum number of pointers may-alias sets may contain before degradation
verify-assumption-cache
Enable verification of assumption cache
basicaa-recphi
Pop up a window to show a dag displaying how block frequencies propagation through the CFG.
do not display graphs.
fraction
display a graph using the fractional block frequency representation.
integer
display a graph using the raw integer fractional block frequency representation.
display a graph using the real profile count if available.
view-block-freq-propagation-dags
view-bfi-func-name
The option to specify the name of the function whose CFG will be displayed.
view-hot-freq-percent
An integer in percent used to specify the hot blocks/edges to be displayed in red: a block or edge whose frequency is no less than the max frequency of the function multiplied by this percent.
pgo-view-counts
A boolean option to show CFG dag with block profile counts and branch probabilities right after PGO profile annotation step. The profile counts are computed using branch probabilities from the runtime profile data and block frequency propagation algorithm. To view the raw counts from the profile, use option -pgo-view-raw-counts instead. To limit graph display to only one function, use filtering option -view-bfi-func-name.
' to '
Call Graph SCC Pass Manager
CallGraph Pass Manager
Printing <null> Function
Print CallGraph IR
max-cg-scc-iterations
output
input
da-delinearize
Try to delinearize array references.
__gnat_eh_personality
__gxx_personality_v0
__gxx_personality_seh0
__gxx_personality_sj0
__gcc_personality_v0
__gcc_personality_seh0
__gcc_personality_sj0
__objc_personality_v0
_except_handler3
_except_handler4
__C_specific_handler
__CxxFrameHandler3
ProcessCLRException
rust_eh_personality
enable-unsafe-globalsmodref-alias-results
icp-count-threshold
The minimum count to the direct call target for the promotion
icp-percent-threshold
The percentage threshold for the promotion
icp-max-prom
Max number of promotions for a single indirect call callsite
inline-threshold
Control the amount of inlining to perform (default = 225)
inlinehint-threshold
Threshold for inlining functions with inline hint
inline-cold-callsite-threshold
Threshold for inlining cold callsites
inlinecold-threshold
Threshold for inlining functions with cold attribute
hot-callsite-threshold
Threshold for hot callsites 
cold-callsite-rel-freq
Maxmimum block frequency, expressed as a percentage of caller's entry frequency, for a callsite to be cold in the absence of profile information.
use-soft-float
undefined
overdefined
notconstant<
constantrange<
constant<
available-load-scan-limit
Use this to specify the default maximum number of instructions to scan backward from a given instruction, when searching for available loaded value
Sets the SIMD width. Zero is autoselect.
force-vector-width
Sets the vectorization interleave count. Zero is autoselect.
force-vector-interleave
When performing memory disambiguation checks at runtime do not generate more than this number of comparisons (default = 8).
runtime-memory-check-threshold
memory-check-merge-threshold
Maximum number of comparisons done when trying to merge runtime memory checks. (default = 100)
max-dependences
Maximum number of dependences collected by loop-access analysis (default = 100)
enable-mem-access-versioning
Enable symbolic stride memory access versioning
store-to-load-forwarding-conflict-detection
Enable conflict detection in loop-access analysis
Verify loop info (time consuming)
verify-loop-info
memdep-block-scan-limit
The number of instructions to scan in a block in memory dependency analysis (default = 100)
memdep-block-number-limit
The number of blocks to scan during memory dependency analysis (default = 1000)
memssa-check-limit
The maximum number of stores/phis MemorySSAwill consider trying to walk past (default = 100)
verify-memoryssa
Verify MemorySSA in legacy printer pass.
llvm.global.annotations
enable/disable all ARC Optimizations
enable-objc-arc-opts
objc_autoreleasePoolPush
clang.arc.use
objc_retain
objc_retainAutoreleasedReturnValue
objc_unsafeClaimAutoreleasedReturnValue
objc_retainBlock
objc_release
objc_autorelease
objc_autoreleaseReturnValue
objc_autoreleasePoolPop
objc_retainedObject
objc_unretainedObject
objc_unretainedPointer
objc_retain_autorelease
objc_retainAutorelease
objc_retainAutoreleaseReturnValue
objc_sync_enter
objc_sync_exit
objc_loadWeakRetained
objc_loadWeak
objc_destroyWeak
objc_storeWeak
objc_initWeak
objc_storeStrong
objc_moveWeak
objc_copyWeak
llvm.arc.annotation.topdown.bbstart
llvm.arc.annotation.topdown.bbend
llvm.arc.annotation.bottomup.bbstart
llvm.arc.annotation.bottomup.bbend
!Passed
!Missed
!Analysis
!AnalysisFPCommute
!AnalysisAliasing
!Failure
Pass
Name
DebugLoc
Hotness
Args
File
Line
Column
 <<exit node>>
profile-summary-cutoff-hot
A count is hot if it exceeds the minimum count to reach this percentile of total counts.
profile-summary-cutoff-cold
A count is cold if it is below the minimum count to reach this percentile of total counts.
Verify region info (time consuming)
verify-region-info
style of printing regions
print no details
print regions in detail with block_iterator
print regions in detail with element_iterator
print-region-style
(trunc 
(zext 
(sext 
nuw><
nsw><
nw><
 smax 
 umax 
<nuw>
<nsw>
 /u 
sizeof(
alignof(
offsetof(
***COULDNOTCOMPUTE***
Equal predicate: 
 Added Flags: 
<nusw>
<nssw>
scalar-evolution-max-iterations
Maximum number of iterations SCEV will symbolically execute a constant derived loop
verify-scev
Verify ScalarEvolution's backedge taken counts (slow)
verify-scev-maps
Verify no dangling value in ScalarEvolution's ExprValueMap (slow)
scev-mulops-inline-threshold
Threshold for inlining multiplication operands into a SCEV
scev-addops-inline-threshold
Threshold for inlining addition operands into a SCEV
scalar-evolution-max-scev-compare-depth
Maximum depth of recursive SCEV complexity comparisons
scalar-evolution-max-scev-operations-implication-depth
Maximum depth of recursive SCEV operations implication analysis
scalar-evolution-max-value-compare-depth
Maximum depth of recursive value complexity comparisons
scalar-evolution-max-arith-depth
Maximum depth of recursive arithmetics
scalar-evolution-max-constant-evolving-depth
Maximum depth of recursive constant evolving
scalar-evolution-max-ext-depth
Maximum depth of recursive SExt/ZExt
scalar-evolution-max-add-rec-size
Max coefficients in AddRec during evolving
umax
No vector functions library
Accelerate
Accelerate framework
SVML
Intel SVML library
vector-library
Vector functions library
??2@YAPAXI@Z
??2@YAPAXIABUnothrow_t@std@@@Z
??2@YAPEAX_K@Z
??2@YAPEAX_KAEBUnothrow_t@std@@@Z
??3@YAXPAX@Z
??3@YAXPAXABUnothrow_t@std@@@Z
??3@YAXPAXI@Z
??3@YAXPEAX@Z
??3@YAXPEAXAEBUnothrow_t@std@@@Z
??3@YAXPEAX_K@Z
??_U@YAPAXI@Z
??_U@YAPAXIABUnothrow_t@std@@@Z
??_U@YAPEAX_K@Z
??_U@YAPEAX_KAEBUnothrow_t@std@@@Z
??_V@YAXPAX@Z
??_V@YAXPAXABUnothrow_t@std@@@Z
??_V@YAXPAXI@Z
??_V@YAXPEAX@Z
??_V@YAXPEAXAEBUnothrow_t@std@@@Z
??_V@YAXPEAX_K@Z
_IO_getc
_IO_putc
_ZdaPv
_ZdaPvRKSt9nothrow_t
_ZdaPvj
_ZdaPvm
_ZdlPv
_ZdlPvRKSt9nothrow_t
_ZdlPvj
_ZdlPvm
_Znaj
_ZnajRKSt9nothrow_t
_Znam
_ZnamRKSt9nothrow_t
_Znwj
_ZnwjRKSt9nothrow_t
_Znwm
_ZnwmRKSt9nothrow_t
__acos_finite
__acosf_finite
__acosh_finite
__acoshf_finite
__acoshl_finite
__acosl_finite
__asin_finite
__asinf_finite
__asinl_finite
__atan2_finite
__atan2f_finite
__atan2l_finite
__atanh_finite
__atanhf_finite
__atanhl_finite
__cosh_finite
__coshf_finite
__coshl_finite
__cospi
__cospif
__cxa_atexit
__cxa_guard_abort
__cxa_guard_acquire
__cxa_guard_release
__exp10_finite
__exp10f_finite
__exp10l_finite
__exp2_finite
__exp2f_finite
__exp2l_finite
__exp_finite
__expf_finite
__expl_finite
__isoc99_scanf
__isoc99_sscanf
__log10_finite
__log10f_finite
__log10l_finite
__log2_finite
__log2f_finite
__log2l_finite
__log_finite
__logf_finite
__logl_finite
__memcpy_chk
__memmove_chk
__memset_chk
__nvvm_reflect
__pow_finite
__powf_finite
__powl_finite
__sincospi_stret
__sincospif_stret
__sinh_finite
__sinhf_finite
__sinhl_finite
__sinpi
__sinpif
__sqrt_finite
__sqrtf_finite
__sqrtl_finite
__stpcpy_chk
__stpncpy_chk
__strcpy_chk
__strdup
__strncpy_chk
__strndup
__strtok_r
access
acos
acosf
acosh
acoshf
acoshl
acosl
asin
asinf
asinh
asinhf
asinhl
asinl
atan
atan2
atan2f
atan2l
atanf
atanh
atanhf
atanhl
atanl
atof
atoi
atol
atoll
bcmp
bcopy
bzero
calloc
cbrt
cbrtf
cbrtl
ceilf
ceill
chmod
chown
clearerr
closedir
cosh
coshf
coshl
ctermid
exp10
exp10f
exp10l
expf
expl
expm1
expm1f
expm1l
fclose
fdopen
feof
ferror
fflush
ffsll
fgetc
fgetpos
fgets
fileno
fiprintf
flockfile
floorl
flsl
flsll
fmod
fmodf
fmodl
fopen
fopen64
fprintf
fputc
fputs
fread
frexp
frexpf
frexpl
fscanf
fseek
fseeko
fseeko64
fsetpos
fstat
fstat64
fstatvfs
fstatvfs64
ftell
ftello
ftello64
ftrylockfile
funlockfile
fwrite
getc
getc_unlocked
getchar
getenv
getitimer
getlogin_r
getpwnam
gets
gettimeofday
htonl
htons
iprintf
isascii
isdigit
lchown
ldexp
ldexpf
ldexpl
log10
log10f
log10l
log1p
log1pf
log1pl
log2
log2f
log2l
logb
logbf
logbl
logf
logl
lstat
lstat64
memalign
memccpy
memchr
memcmp
memcpy
memmove
mempcpy
memrchr
memset
memset_pattern16
mkdir
mktime
modf
modff
modfl
nearbyint
nearbyintf
nearbyintl
ntohl
ntohs
open64
opendir
pclose
perror
popen
posix_memalign
pread
printf
putc
putchar
puts
pwrite
qsort
readlink
realloc
reallocf
realpath
rename
rewind
rint
rintf
rintl
rmdir
roundf
roundl
scanf
setbuf
setitimer
setvbuf
sinh
sinhf
sinhl
siprintf
snprintf
sprintf
sscanf
stat
stat64
statvfs
statvfs64
stpcpy
stpncpy
strcasecmp
strcat
strchr
strcmp
strcoll
strcpy
strcspn
strdup
strlen
strncasecmp
strncat
strncmp
strncpy
strndup
strnlen
strpbrk
strrchr
strspn
strstr
strtod
strtof
strtok
strtok_r
strtol
strtold
strtoll
strtoul
strtoull
strxfrm
system
tanf
tanh
tanhf
tanhl
tanl
tmpfile
tmpfile64
toascii
truncf
truncl
uname
ungetc
unlink
unsetenv
utime
utimes
valloc
vfprintf
vfscanf
vprintf
vscanf
vsnprintf
vsprintf
vsscanf
wcslen
__exp10
__exp10f
use-wide-memcpy-loop-lowering
Enables the new wide memcpy loop lowering in Transforms/Utils.
target-cpu
target-features
copysign
copysignf
copysignl
fabs
fabsf
fabsl
fmin
fminf
fminl
fmax
fmaxf
fmaxl
sinf
sinl
cosf
cosl
sqrt
sqrtf
sqrtl
powf
powl
exp2
exp2l
exp2f
floor
floorf
ceil
round
ffsl
labs
llabs
enable-tbaa
enable-scoped-noalias
dom-conditions-max-uses
dont-improve-non-negative-phi-bits
value-tracking
BadAssumption
Detected conflicting code assumptions. Program may have undefined behavior, or compiler may have internal error.
COFF-<unknown arch>
COFF-ARM64
COFF-ARM
COFF-i386
COFF-x86-64
IMAGE_REL_I386_ABSOLUTE
IMAGE_REL_I386_DIR16
IMAGE_REL_I386_REL16
IMAGE_REL_I386_DIR32
IMAGE_REL_I386_DIR32NB
IMAGE_REL_I386_SEG12
IMAGE_REL_I386_SECTION
IMAGE_REL_I386_SECREL
IMAGE_REL_I386_TOKEN
IMAGE_REL_I386_SECREL7
IMAGE_REL_I386_REL32
IMAGE_REL_ARM64_ABSOLUTE
IMAGE_REL_ARM64_ADDR32
IMAGE_REL_ARM64_ADDR32NB
IMAGE_REL_ARM64_BRANCH26
IMAGE_REL_ARM64_PAGEBASE_REL21
IMAGE_REL_ARM64_REL21
IMAGE_REL_ARM64_PAGEOFFSET_12A
IMAGE_REL_ARM64_PAGEOFFSET_12L
IMAGE_REL_ARM64_SECREL
IMAGE_REL_ARM64_SECREL_LOW12A
IMAGE_REL_ARM64_SECREL_HIGH12A
IMAGE_REL_ARM64_SECREL_LOW12L
IMAGE_REL_ARM64_TOKEN
IMAGE_REL_ARM64_SECTION
IMAGE_REL_ARM64_ADDR64
IMAGE_REL_ARM64_BRANCH19
IMAGE_REL_ARM64_BRANCH14
IMAGE_REL_ARM_ABSOLUTE
IMAGE_REL_ARM_ADDR32
IMAGE_REL_ARM_ADDR32NB
IMAGE_REL_ARM_BRANCH24
IMAGE_REL_ARM_BRANCH11
IMAGE_REL_ARM_TOKEN
IMAGE_REL_ARM_BLX24
IMAGE_REL_ARM_BLX11
IMAGE_REL_ARM_SECTION
IMAGE_REL_ARM_SECREL
IMAGE_REL_ARM_MOV32A
IMAGE_REL_ARM_MOV32T
IMAGE_REL_ARM_BRANCH20T
IMAGE_REL_ARM_BRANCH24T
IMAGE_REL_ARM_BLX23T
IMAGE_REL_AMD64_ABSOLUTE
IMAGE_REL_AMD64_ADDR64
IMAGE_REL_AMD64_ADDR32
IMAGE_REL_AMD64_ADDR32NB
IMAGE_REL_AMD64_REL32
IMAGE_REL_AMD64_REL32_1
IMAGE_REL_AMD64_REL32_2
IMAGE_REL_AMD64_REL32_3
IMAGE_REL_AMD64_REL32_4
IMAGE_REL_AMD64_REL32_5
IMAGE_REL_AMD64_SECTION
IMAGE_REL_AMD64_SECREL
IMAGE_REL_AMD64_SECREL7
IMAGE_REL_AMD64_TOKEN
IMAGE_REL_AMD64_SREL32
IMAGE_REL_AMD64_PAIR
IMAGE_REL_AMD64_SSPAN32
Sections with relocations should have an address of 0
R_BPF_64_32
R_BPF_64_64
R_PPC64_REL16_HA
R_PPC64_REL16_HI
R_PPC64_REL16_LO
R_PPC64_REL16
R_PPC64_TLSLD
R_PPC64_TLSGD
R_PPC64_DTPREL16_HIGHESTA
R_PPC64_DTPREL16_HIGHEST
R_PPC64_DTPREL16_HIGHERA
R_PPC64_DTPREL16_HIGHER
R_PPC64_DTPREL16_LO_DS
R_PPC64_DTPREL16_DS
R_PPC64_TPREL16_HIGHESTA
R_PPC64_TPREL16_HIGHEST
R_PPC64_TPREL16_HIGHERA
R_PPC64_TPREL16_HIGHER
R_PPC64_TPREL16_LO_DS
R_PPC64_TPREL16_DS
R_PPC64_GOT_DTPREL16_HA
R_PPC64_GOT_DTPREL16_HI
R_PPC64_GOT_DTPREL16_LO_DS
R_PPC64_GOT_DTPREL16_DS
R_PPC64_GOT_TPREL16_HA
R_PPC64_GOT_TPREL16_HI
R_PPC64_GOT_TPREL16_LO_DS
R_PPC64_GOT_TPREL16_DS
R_PPC64_GOT_TLSLD16_HA
R_PPC64_GOT_TLSLD16_HI
R_PPC64_GOT_TLSLD16_LO
R_PPC64_GOT_TLSLD16
R_PPC64_GOT_TLSGD16_HA
R_PPC64_GOT_TLSGD16_HI
R_PPC64_GOT_TLSGD16_LO
R_PPC64_GOT_TLSGD16
R_PPC64_DTPREL64
R_PPC64_DTPREL16_HA
R_PPC64_DTPREL16_HI
R_PPC64_DTPREL16_LO
R_PPC64_DTPREL16
R_PPC64_TPREL64
R_PPC64_TPREL16_HA
R_PPC64_TPREL16_HI
R_PPC64_TPREL16_LO
R_PPC64_TPREL16
R_PPC64_DTPMOD64
R_PPC64_TLS
R_PPC64_TOC16_LO_DS
R_PPC64_TOC16_DS
R_PPC64_GOT16_LO_DS
R_PPC64_GOT16_DS
R_PPC64_ADDR16_LO_DS
R_PPC64_ADDR16_DS
R_PPC64_TOC
R_PPC64_TOC16_HA
R_PPC64_TOC16_HI
R_PPC64_TOC16_LO
R_PPC64_TOC16
R_PPC64_REL64
R_PPC64_ADDR16_HIGHESTA
R_PPC64_ADDR16_HIGHEST
R_PPC64_ADDR16_HIGHERA
R_PPC64_ADDR16_HIGHER
R_PPC64_ADDR64
R_PPC64_REL32
R_PPC64_RELATIVE
R_PPC64_JMP_SLOT
R_PPC64_GLOB_DAT
R_PPC64_GOT16_HA
R_PPC64_GOT16_HI
R_PPC64_GOT16_LO
R_PPC64_GOT16
R_PPC64_REL14_BRNTAKEN
R_PPC64_REL14_BRTAKEN
R_PPC64_REL14
R_PPC64_REL24
R_PPC64_ADDR14_BRNTAKEN
R_PPC64_ADDR14_BRTAKEN
R_PPC64_ADDR14
R_PPC64_ADDR16_HA
R_PPC64_ADDR16_HI
R_PPC64_ADDR16_LO
R_PPC64_ADDR16
R_PPC64_ADDR24
R_PPC64_ADDR32
R_PPC_REL16_HA
R_PPC_REL16_HI
R_PPC_REL16_LO
R_PPC_REL16
R_PPC_TLSLD
R_PPC_TLSGD
R_PPC_GOT_DTPREL16_HA
R_PPC_GOT_DTPREL16_HI
R_PPC_GOT_DTPREL16_LO
R_PPC_GOT_DTPREL16
R_PPC_GOT_TPREL16_HA
R_PPC_GOT_TPREL16_HI
R_PPC_GOT_TPREL16_LO
R_PPC_GOT_TPREL16
R_PPC_GOT_TLSLD16_HA
R_PPC_GOT_TLSLD16_HI
R_PPC_GOT_TLSLD16_LO
R_PPC_GOT_TLSLD16
R_PPC_GOT_TLSGD16_HA
R_PPC_GOT_TLSGD16_HI
R_PPC_GOT_TLSGD16_LO
R_PPC_GOT_TLSGD16
R_PPC_DTPREL32
R_PPC_DTPREL16_HA
R_PPC_DTPREL16_HI
R_PPC_DTPREL16_LO
R_PPC_DTPREL16
R_PPC_TPREL32
R_PPC_TPREL16_HA
R_PPC_TPREL16_HI
R_PPC_TPREL16_LO
R_PPC_TPREL16
R_PPC_DTPMOD32
R_PPC_TLS
R_PPC_REL32
R_PPC_LOCAL24PC
R_PPC_JMP_SLOT
R_PPC_PLTREL24
R_PPC_GOT16_HA
R_PPC_GOT16_HI
R_PPC_GOT16_LO
R_PPC_GOT16
R_PPC_REL14_BRNTAKEN
R_PPC_REL14_BRTAKEN
R_PPC_REL14
R_PPC_REL24
R_PPC_ADDR14_BRNTAKEN
R_PPC_ADDR14_BRTAKEN
R_PPC_ADDR14
R_PPC_ADDR16_HA
R_PPC_ADDR16_HI
R_PPC_ADDR16_LO
R_PPC_ADDR16
R_PPC_ADDR24
R_PPC_ADDR32
R_AARCH64_P32_IRELATIVE
R_AARCH64_P32_TLSDESC
R_AARCH64_P32_TLS_TPREL
R_AARCH64_P32_TLS_DTPMOD
R_AARCH64_P32_TLS_DTPREL
R_AARCH64_P32_RELATIVE
R_AARCH64_P32_JUMP_SLOT
R_AARCH64_P32_GLOB_DAT
R_AARCH64_P32_COPY
R_AARCH64_P32_TLSDESC_CALL
R_AARCH64_P32_TLSDESC_ADD_LO12
R_AARCH64_P32_TLSDESC_LD32_LO12
R_AARCH64_P32_TLSDESC_ADR_PAGE21
R_AARCH64_P32_TLSDESC_ADR_PREL21
R_AARCH64_P32_TLSDESC_LD_PREL19
R_AARCH64_P32_TLSLE_LDST128_TPREL_LO12_NC
R_AARCH64_P32_TLSLE_LDST128_TPREL_LO12
R_AARCH64_P32_TLSLE_LDST64_TPREL_LO12_NC
R_AARCH64_P32_TLSLE_LDST64_TPREL_LO12
R_AARCH64_P32_TLSLE_LDST32_TPREL_LO12_NC
R_AARCH64_P32_TLSLE_LDST32_TPREL_LO12
R_AARCH64_P32_TLSLE_LDST16_TPREL_LO12_NC
R_AARCH64_P32_TLSLE_LDST16_TPREL_LO12
R_AARCH64_P32_TLSLE_LDST8_TPREL_LO12_NC
R_AARCH64_P32_TLSLE_LDST8_TPREL_LO12
R_AARCH64_P32_TLSLE_ADD_TPREL_LO12_NC
R_AARCH64_P32_TLSLE_ADD_TPREL_LO12
R_AARCH64_P32_TLSLE_ADD_TPREL_HI12
R_AARCH64_P32_TLSLE_MOVW_TPREL_G0_NC
R_AARCH64_P32_TLSLE_MOVW_TPREL_G0
R_AARCH64_P32_TLSLE_MOVW_TPREL_G1
R_AARCH64_P32_TLSIE_LD_GOTTPREL_PREL19
R_AARCH64_P32_TLSIE_LD32_GOTTPREL_LO12_NC
R_AARCH64_P32_TLSIE_ADR_GOTTPREL_PAGE21
R_AARCH64_P32_TLSLD_LDST128_DTPREL_LO12_NC
R_AARCH64_P32_TLSLD_LDST128_DTPREL_LO12
R_AARCH64_P32_TLSLD_LDST64_DTPREL_LO12_NC
R_AARCH64_P32_TLSLD_LDST64_DTPREL_LO12
R_AARCH64_P32_TLSLD_LDST32_DTPREL_LO12_NC
R_AARCH64_P32_TLSLD_LDST32_DTPREL_LO12
R_AARCH64_P32_TLSLD_LDST16_DTPREL_LO12_NC
R_AARCH64_P32_TLSLD_LDST16_DTPREL_LO12
R_AARCH64_P32_TLSLD_LDST8_DTPREL_LO12_NC
R_AARCH64_P32_TLSLD_LDST8_DTPREL_LO12
R_AARCH64_P32_TLSLD_ADD_DTPREL_LO12_NC
R_AARCH64_P32_TLSLD_ADD_DTPREL_LO12
R_AARCH64_P32_TLSLD_ADD_DTPREL_HI12
R_AARCH64_P32_TLSLD_MOVW_DTPREL_G0_NC
R_AARCH64_P32_TLSLD_MOVW_DTPREL_G0
R_AARCH64_P32_TLSLD_MOVW_DTPREL_G1
R_AARCH64_P32_TLSLD_LD_PREL19
R_AARCH64_P32_TLSLD_ADD_LO12_NC
R_AARCH64_P32_TLSLD_ADR_PAGE21
R_AARCH64_P32_TLSLD_ADR_PREL21
R_AARCH64_P32_TLSGD_ADD_LO12_NC
R_AARCH64_P32_TLSGD_ADR_PAGE21
R_AARCH64_P32_TLSGD_ADR_PREL21
R_AARCH64_P32_LD32_GOTPAGE_LO14
R_AARCH64_P32_LD32_GOT_LO12_NC
R_AARCH64_P32_ADR_GOT_PAGE
R_AARCH64_P32_GOT_LD_PREL19
R_AARCH64_P32_MOVW_PREL_G1
R_AARCH64_P32_MOVW_PREL_G0_NC
R_AARCH64_P32_MOVW_PREL_G0
R_AARCH64_P32_CALL26
R_AARCH64_P32_JUMP26
R_AARCH64_P32_CONDBR19
R_AARCH64_P32_TSTBR14
R_AARCH64_P32_LDST128_ABS_LO12_NC
R_AARCH64_P32_LDST64_ABS_LO12_NC
R_AARCH64_P32_LDST32_ABS_LO12_NC
R_AARCH64_P32_LDST16_ABS_LO12_NC
R_AARCH64_P32_LDST8_ABS_LO12_NC
R_AARCH64_P32_ADD_ABS_LO12_NC
R_AARCH64_P32_ADR_PREL_PG_HI21
R_AARCH64_P32_ADR_PREL_LO21
R_AARCH64_P32_LD_PREL_LO19
R_AARCH64_P32_MOVW_SABS_G0
R_AARCH64_P32_MOVW_UABS_G1
R_AARCH64_P32_MOVW_UABS_G0_NC
R_AARCH64_P32_MOVW_UABS_G0
R_AARCH64_P32_PREL16
R_AARCH64_P32_PREL32
R_AARCH64_P32_ABS16
R_AARCH64_P32_ABS32
R_AARCH64_IRELATIVE
R_AARCH64_TLSDESC
R_AARCH64_TLS_TPREL64
R_AARCH64_TLS_DTPMOD64
R_AARCH64_TLS_DTPREL64
R_AARCH64_RELATIVE
R_AARCH64_JUMP_SLOT
R_AARCH64_GLOB_DAT
R_AARCH64_COPY
R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST128_DTPREL_LO12
R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST128_TPREL_LO12
R_AARCH64_TLSDESC_CALL
R_AARCH64_TLSDESC_ADD
R_AARCH64_TLSDESC_LDR
R_AARCH64_TLSDESC_OFF_G0_NC
R_AARCH64_TLSDESC_OFF_G1
R_AARCH64_TLSDESC_ADD_LO12
R_AARCH64_TLSDESC_LD64_LO12
R_AARCH64_TLSDESC_ADR_PAGE21
R_AARCH64_TLSDESC_ADR_PREL21
R_AARCH64_TLSDESC_LD_PREL19
R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST64_TPREL_LO12
R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST32_TPREL_LO12
R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST16_TPREL_LO12
R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST8_TPREL_LO12
R_AARCH64_TLSLE_ADD_TPREL_LO12_NC
R_AARCH64_TLSLE_ADD_TPREL_LO12
R_AARCH64_TLSLE_ADD_TPREL_HI12
R_AARCH64_TLSLE_MOVW_TPREL_G0_NC
R_AARCH64_TLSLE_MOVW_TPREL_G0
R_AARCH64_TLSLE_MOVW_TPREL_G1_NC
R_AARCH64_TLSLE_MOVW_TPREL_G1
R_AARCH64_TLSLE_MOVW_TPREL_G2
R_AARCH64_TLSIE_LD_GOTTPREL_PREL19
R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC
R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21
R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC
R_AARCH64_TLSIE_MOVW_GOTTPREL_G1
R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST64_DTPREL_LO12
R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST32_DTPREL_LO12
R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST16_DTPREL_LO12
R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST8_DTPREL_LO12
R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC
R_AARCH64_TLSLD_ADD_DTPREL_LO12
R_AARCH64_TLSLD_ADD_DTPREL_HI12
R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC
R_AARCH64_TLSLD_MOVW_DTPREL_G0
R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC
R_AARCH64_TLSLD_MOVW_DTPREL_G1
R_AARCH64_TLSLD_MOVW_DTPREL_G2
R_AARCH64_TLSLD_LD_PREL19
R_AARCH64_TLSLD_MOVW_G0_NC
R_AARCH64_TLSLD_MOVW_G1
R_AARCH64_TLSLD_ADD_LO12_NC
R_AARCH64_TLSLD_ADR_PAGE21
R_AARCH64_TLSLD_ADR_PREL21
R_AARCH64_TLSGD_MOVW_G0_NC
R_AARCH64_TLSGD_MOVW_G1
R_AARCH64_TLSGD_ADD_LO12_NC
R_AARCH64_TLSGD_ADR_PAGE21
R_AARCH64_TLSGD_ADR_PREL21
R_AARCH64_LD64_GOTPAGE_LO15
R_AARCH64_LD64_GOT_LO12_NC
R_AARCH64_ADR_GOT_PAGE
R_AARCH64_LD64_GOTOFF_LO15
R_AARCH64_GOT_LD_PREL19
R_AARCH64_GOTREL32
R_AARCH64_GOTREL64
R_AARCH64_MOVW_GOTOFF_G3
R_AARCH64_MOVW_GOTOFF_G2_NC
R_AARCH64_MOVW_GOTOFF_G2
R_AARCH64_MOVW_GOTOFF_G1_NC
R_AARCH64_MOVW_GOTOFF_G1
R_AARCH64_MOVW_GOTOFF_G0_NC
R_AARCH64_MOVW_GOTOFF_G0
R_AARCH64_LDST128_ABS_LO12_NC
R_AARCH64_MOVW_PREL_G3
R_AARCH64_MOVW_PREL_G2_NC
R_AARCH64_MOVW_PREL_G2
R_AARCH64_MOVW_PREL_G1_NC
R_AARCH64_MOVW_PREL_G1
R_AARCH64_MOVW_PREL_G0_NC
R_AARCH64_MOVW_PREL_G0
R_AARCH64_LDST64_ABS_LO12_NC
R_AARCH64_LDST32_ABS_LO12_NC
R_AARCH64_LDST16_ABS_LO12_NC
R_AARCH64_CALL26
R_AARCH64_JUMP26
R_AARCH64_CONDBR19
R_AARCH64_TSTBR14
R_AARCH64_LDST8_ABS_LO12_NC
R_AARCH64_ADD_ABS_LO12_NC
R_AARCH64_ADR_PREL_PG_HI21_NC
R_AARCH64_ADR_PREL_PG_HI21
R_AARCH64_ADR_PREL_LO21
R_AARCH64_LD_PREL_LO19
R_AARCH64_MOVW_SABS_G2
R_AARCH64_MOVW_SABS_G1
R_AARCH64_MOVW_SABS_G0
R_AARCH64_MOVW_UABS_G3
R_AARCH64_MOVW_UABS_G2_NC
R_AARCH64_MOVW_UABS_G2
R_AARCH64_MOVW_UABS_G1_NC
R_AARCH64_MOVW_UABS_G1
R_AARCH64_MOVW_UABS_G0_NC
R_AARCH64_MOVW_UABS_G0
R_AARCH64_PREL16
R_AARCH64_PREL32
R_AARCH64_PREL64
R_AARCH64_ABS16
R_AARCH64_ABS32
R_AARCH64_ABS64
R_AARCH64_NONE
R_PPC_NONE
R_PPC64_NONE
R_BPF_NONE
R_AMDGPU_NONE
R_AMDGPU_ABS32_LO
R_AMDGPU_ABS32_HI
R_AMDGPU_ABS64
R_AMDGPU_REL32
R_AMDGPU_REL64
R_AMDGPU_ABS32
R_AMDGPU_GOTPCREL
R_AMDGPU_GOTPCREL32_LO
R_AMDGPU_GOTPCREL32_HI
R_AMDGPU_REL32_LO
R_AMDGPU_REL32_HI
R_WEBASSEMBLY_NONE
R_WEBASSEMBLY_DATA
R_WEBASSEMBLY_FUNCTION
R_SPARC_NONE
R_SPARC_8
R_SPARC_16
R_SPARC_32
R_SPARC_DISP8
R_SPARC_DISP16
R_SPARC_DISP32
R_SPARC_WDISP30
R_SPARC_WDISP22
R_SPARC_HI22
R_SPARC_22
R_SPARC_13
R_SPARC_LO10
R_SPARC_GOT10
R_SPARC_GOT13
R_SPARC_GOT22
R_SPARC_PC10
R_SPARC_PC22
R_SPARC_WPLT30
R_SPARC_COPY
R_SPARC_GLOB_DAT
R_SPARC_JMP_SLOT
R_SPARC_RELATIVE
R_SPARC_UA32
R_SPARC_PLT32
R_SPARC_HIPLT22
R_SPARC_LOPLT10
R_SPARC_PCPLT32
R_SPARC_PCPLT22
R_SPARC_PCPLT10
R_SPARC_10
R_SPARC_11
R_SPARC_64
R_SPARC_OLO10
R_SPARC_HH22
R_SPARC_HM10
R_SPARC_LM22
R_SPARC_PC_HH22
R_SPARC_PC_HM10
R_SPARC_PC_LM22
R_SPARC_WDISP16
R_SPARC_WDISP19
R_SPARC_7
R_SPARC_5
R_SPARC_6
R_SPARC_DISP64
R_SPARC_PLT64
R_SPARC_HIX22
R_SPARC_LOX10
R_SPARC_H44
R_SPARC_M44
R_SPARC_L44
R_SPARC_REGISTER
R_SPARC_UA64
R_SPARC_UA16
R_SPARC_TLS_GD_HI22
R_SPARC_TLS_GD_LO10
R_SPARC_TLS_GD_ADD
R_SPARC_TLS_GD_CALL
R_SPARC_TLS_LDM_HI22
R_SPARC_TLS_LDM_LO10
R_SPARC_TLS_LDM_ADD
R_SPARC_TLS_LDM_CALL
R_SPARC_TLS_LDO_HIX22
R_SPARC_TLS_LDO_LOX10
R_SPARC_TLS_LDO_ADD
R_SPARC_TLS_IE_HI22
R_SPARC_TLS_IE_LO10
R_SPARC_TLS_IE_LD
R_SPARC_TLS_IE_LDX
R_SPARC_TLS_IE_ADD
R_SPARC_TLS_LE_HIX22
R_SPARC_TLS_LE_LOX10
R_SPARC_TLS_DTPMOD32
R_SPARC_TLS_DTPMOD64
R_SPARC_TLS_DTPOFF32
R_SPARC_TLS_DTPOFF64
R_SPARC_TLS_TPOFF32
R_SPARC_TLS_TPOFF64
R_SPARC_GOTDATA_HIX22
R_SPARC_GOTDATA_LOX10
R_SPARC_GOTDATA_OP_HIX22
R_SPARC_GOTDATA_OP_LOX10
R_SPARC_GOTDATA_OP
R_390_NONE
R_390_8
R_390_12
R_390_16
R_390_32
R_390_PC32
R_390_GOT12
R_390_GOT32
R_390_PLT32
R_390_COPY
R_390_GLOB_DAT
R_390_JMP_SLOT
R_390_RELATIVE
R_390_GOTOFF
R_390_GOTPC
R_390_GOT16
R_390_PC16
R_390_PC16DBL
R_390_PLT16DBL
R_390_PC32DBL
R_390_PLT32DBL
R_390_GOTPCDBL
R_390_64
R_390_PC64
R_390_GOT64
R_390_PLT64
R_390_GOTENT
R_390_GOTOFF16
R_390_GOTOFF64
R_390_GOTPLT12
R_390_GOTPLT16
R_390_GOTPLT32
R_390_GOTPLT64
R_390_GOTPLTENT
R_390_PLTOFF16
R_390_PLTOFF32
R_390_PLTOFF64
R_390_TLS_LOAD
R_390_TLS_GDCALL
R_390_TLS_LDCALL
R_390_TLS_GD32
R_390_TLS_GD64
R_390_TLS_GOTIE12
R_390_TLS_GOTIE32
R_390_TLS_GOTIE64
R_390_TLS_LDM32
R_390_TLS_LDM64
R_390_TLS_IE32
R_390_TLS_IE64
R_390_TLS_IEENT
R_390_TLS_LE32
R_390_TLS_LE64
R_390_TLS_LDO32
R_390_TLS_LDO64
R_390_TLS_DTPMOD
R_390_TLS_DTPOFF
R_390_TLS_TPOFF
R_390_20
R_390_GOT20
R_390_GOTPLT20
R_390_TLS_GOTIE20
R_390_IRELATIVE
R_390_PC12DBL
R_390_PLT12DBL
R_390_PC24DBL
R_390_PLT24DBL
R_RISCV_NONE
R_RISCV_32
R_RISCV_64
R_RISCV_RELATIVE
R_RISCV_COPY
R_RISCV_JUMP_SLOT
R_RISCV_TLS_DTPMOD32
R_RISCV_TLS_DTPMOD64
R_RISCV_TLS_DTPREL32
R_RISCV_TLS_DTPREL64
R_RISCV_TLS_TPREL32
R_RISCV_TLS_TPREL64
R_RISCV_BRANCH
R_RISCV_JAL
R_RISCV_CALL
R_RISCV_CALL_PLT
R_RISCV_GOT_HI20
R_RISCV_TLS_GOT_HI20
R_RISCV_TLS_GD_HI20
R_RISCV_PCREL_HI20
R_RISCV_PCREL_LO12_I
R_RISCV_PCREL_LO12_S
R_RISCV_HI20
R_RISCV_LO12_I
R_RISCV_LO12_S
R_RISCV_TPREL_HI20
R_RISCV_TPREL_LO12_I
R_RISCV_TPREL_LO12_S
R_RISCV_TPREL_ADD
R_RISCV_ADD8
R_RISCV_ADD16
R_RISCV_ADD32
R_RISCV_ADD64
R_RISCV_SUB8
R_RISCV_SUB16
R_RISCV_SUB32
R_RISCV_SUB64
R_RISCV_GNU_VTINHERIT
R_RISCV_GNU_VTENTRY
R_RISCV_ALIGN
R_RISCV_RVC_BRANCH
R_RISCV_RVC_JUMP
R_RISCV_RVC_LUI
R_RISCV_GPREL_I
R_RISCV_GPREL_S
R_LANAI_NONE
R_LANAI_21
R_LANAI_21_F
R_LANAI_25
R_LANAI_32
R_LANAI_HI16
R_LANAI_LO16
R_HEX_NONE
R_HEX_B22_PCREL
R_HEX_B15_PCREL
R_HEX_B7_PCREL
R_HEX_LO16
R_HEX_HI16
R_HEX_32
R_HEX_16
R_HEX_8
R_HEX_GPREL16_0
R_HEX_GPREL16_1
R_HEX_GPREL16_2
R_HEX_GPREL16_3
R_HEX_HL16
R_HEX_B13_PCREL
R_HEX_B9_PCREL
R_HEX_B32_PCREL_X
R_HEX_32_6_X
R_HEX_B22_PCREL_X
R_HEX_B15_PCREL_X
R_HEX_B13_PCREL_X
R_HEX_B9_PCREL_X
R_HEX_B7_PCREL_X
R_HEX_16_X
R_HEX_12_X
R_HEX_11_X
R_HEX_10_X
R_HEX_9_X
R_HEX_8_X
R_HEX_7_X
R_HEX_6_X
R_HEX_32_PCREL
R_HEX_COPY
R_HEX_GLOB_DAT
R_HEX_JMP_SLOT
R_HEX_RELATIVE
R_HEX_PLT_B22_PCREL
R_HEX_GOTREL_LO16
R_HEX_GOTREL_HI16
R_HEX_GOTREL_32
R_HEX_GOT_LO16
R_HEX_GOT_HI16
R_HEX_GOT_32
R_HEX_GOT_16
R_HEX_DTPMOD_32
R_HEX_DTPREL_LO16
R_HEX_DTPREL_HI16
R_HEX_DTPREL_32
R_HEX_DTPREL_16
R_HEX_GD_PLT_B22_PCREL
R_HEX_GD_GOT_LO16
R_HEX_GD_GOT_HI16
R_HEX_GD_GOT_32
R_HEX_GD_GOT_16
R_HEX_IE_LO16
R_HEX_IE_HI16
R_HEX_IE_32
R_HEX_IE_GOT_LO16
R_HEX_IE_GOT_HI16
R_HEX_IE_GOT_32
R_HEX_IE_GOT_16
R_HEX_TPREL_LO16
R_HEX_TPREL_HI16
R_HEX_TPREL_32
R_HEX_TPREL_16
R_HEX_6_PCREL_X
R_HEX_GOTREL_32_6_X
R_HEX_GOTREL_16_X
R_HEX_GOTREL_11_X
R_HEX_GOT_32_6_X
R_HEX_GOT_16_X
R_HEX_GOT_11_X
R_HEX_DTPREL_32_6_X
R_HEX_DTPREL_16_X
R_HEX_DTPREL_11_X
R_HEX_GD_GOT_32_6_X
R_HEX_GD_GOT_16_X
R_HEX_GD_GOT_11_X
R_HEX_IE_32_6_X
R_HEX_IE_16_X
R_HEX_IE_GOT_32_6_X
R_HEX_IE_GOT_16_X
R_HEX_IE_GOT_11_X
R_HEX_TPREL_32_6_X
R_HEX_TPREL_16_X
R_HEX_TPREL_11_X
R_HEX_LD_PLT_B22_PCREL
R_HEX_LD_GOT_LO16
R_HEX_LD_GOT_HI16
R_HEX_LD_GOT_32
R_HEX_LD_GOT_16
R_HEX_LD_GOT_32_6_X
R_HEX_LD_GOT_16_X
R_HEX_LD_GOT_11_X
R_HEX_23_REG
R_HEX_GD_PLT_B22_PCREL_X
R_HEX_GD_PLT_B32_PCREL_X
R_HEX_LD_PLT_B22_PCREL_X
R_HEX_LD_PLT_B32_PCREL_X
R_HEX_27_REG
R_AVR_NONE
R_AVR_32
R_AVR_7_PCREL
R_AVR_13_PCREL
R_AVR_16
R_AVR_16_PM
R_AVR_LO8_LDI
R_AVR_HI8_LDI
R_AVR_HH8_LDI
R_AVR_LO8_LDI_NEG
R_AVR_HI8_LDI_NEG
R_AVR_HH8_LDI_NEG
R_AVR_LO8_LDI_PM
R_AVR_HI8_LDI_PM
R_AVR_HH8_LDI_PM
R_AVR_LO8_LDI_PM_NEG
R_AVR_HI8_LDI_PM_NEG
R_AVR_HH8_LDI_PM_NEG
R_AVR_CALL
R_AVR_LDI
R_AVR_6
R_AVR_6_ADIW
R_AVR_MS8_LDI
R_AVR_MS8_LDI_NEG
R_AVR_LO8_LDI_GS
R_AVR_HI8_LDI_GS
R_AVR_8
R_AVR_8_LO8
R_AVR_8_HI8
R_AVR_8_HLO8
R_AVR_SYM_DIFF
R_AVR_16_LDST
R_AVR_LDS_STS_16
R_AVR_PORT6
R_AVR_PORT5
R_ARM_NONE
R_ARM_PC24
R_ARM_ABS32
R_ARM_REL32
R_ARM_LDR_PC_G0
R_ARM_ABS16
R_ARM_ABS12
R_ARM_THM_ABS5
R_ARM_ABS8
R_ARM_SBREL32
R_ARM_THM_CALL
R_ARM_THM_PC8
R_ARM_BREL_ADJ
R_ARM_TLS_DESC
R_ARM_THM_SWI8
R_ARM_XPC25
R_ARM_THM_XPC22
R_ARM_TLS_DTPMOD32
R_ARM_TLS_DTPOFF32
R_ARM_TLS_TPOFF32
R_ARM_COPY
R_ARM_GLOB_DAT
R_ARM_JUMP_SLOT
R_ARM_RELATIVE
R_ARM_GOTOFF32
R_ARM_BASE_PREL
R_ARM_GOT_BREL
R_ARM_PLT32
R_ARM_CALL
R_ARM_JUMP24
R_ARM_THM_JUMP24
R_ARM_BASE_ABS
R_ARM_ALU_PCREL_7_0
R_ARM_ALU_PCREL_15_8
R_ARM_ALU_PCREL_23_15
R_ARM_LDR_SBREL_11_0_NC
R_ARM_ALU_SBREL_19_12_NC
R_ARM_ALU_SBREL_27_20_CK
R_ARM_TARGET1
R_ARM_SBREL31
R_ARM_V4BX
R_ARM_TARGET2
R_ARM_PREL31
R_ARM_MOVW_ABS_NC
R_ARM_MOVT_ABS
R_ARM_MOVW_PREL_NC
R_ARM_MOVT_PREL
R_ARM_THM_MOVW_ABS_NC
R_ARM_THM_MOVT_ABS
R_ARM_THM_MOVW_PREL_NC
R_ARM_THM_MOVT_PREL
R_ARM_THM_JUMP19
R_ARM_THM_JUMP6
R_ARM_THM_ALU_PREL_11_0
R_ARM_THM_PC12
R_ARM_ABS32_NOI
R_ARM_REL32_NOI
R_ARM_ALU_PC_G0_NC
R_ARM_ALU_PC_G0
R_ARM_ALU_PC_G1_NC
R_ARM_ALU_PC_G1
R_ARM_ALU_PC_G2
R_ARM_LDR_PC_G1
R_ARM_LDR_PC_G2
R_ARM_LDRS_PC_G0
R_ARM_LDRS_PC_G1
R_ARM_LDRS_PC_G2
R_ARM_LDC_PC_G0
R_ARM_LDC_PC_G1
R_ARM_LDC_PC_G2
R_ARM_ALU_SB_G0_NC
R_ARM_ALU_SB_G0
R_ARM_ALU_SB_G1_NC
R_ARM_ALU_SB_G1
R_ARM_ALU_SB_G2
R_ARM_LDR_SB_G0
R_ARM_LDR_SB_G1
R_ARM_LDR_SB_G2
R_ARM_LDRS_SB_G0
R_ARM_LDRS_SB_G1
R_ARM_LDRS_SB_G2
R_ARM_LDC_SB_G0
R_ARM_LDC_SB_G1
R_ARM_LDC_SB_G2
R_ARM_MOVW_BREL_NC
R_ARM_MOVT_BREL
R_ARM_MOVW_BREL
R_ARM_THM_MOVW_BREL_NC
R_ARM_THM_MOVT_BREL
R_ARM_THM_MOVW_BREL
R_ARM_TLS_GOTDESC
R_ARM_TLS_CALL
R_ARM_TLS_DESCSEQ
R_ARM_THM_TLS_CALL
R_ARM_PLT32_ABS
R_ARM_GOT_ABS
R_ARM_GOT_PREL
R_ARM_GOT_BREL12
R_ARM_GOTOFF12
R_ARM_GOTRELAX
R_ARM_GNU_VTENTRY
R_ARM_GNU_VTINHERIT
R_ARM_THM_JUMP11
R_ARM_THM_JUMP8
R_ARM_TLS_GD32
R_ARM_TLS_LDM32
R_ARM_TLS_LDO32
R_ARM_TLS_IE32
R_ARM_TLS_LE32
R_ARM_TLS_LDO12
R_ARM_TLS_LE12
R_ARM_TLS_IE12GP
R_ARM_PRIVATE_0
R_ARM_PRIVATE_1
R_ARM_PRIVATE_2
R_ARM_PRIVATE_3
R_ARM_PRIVATE_4
R_ARM_PRIVATE_5
R_ARM_PRIVATE_6
R_ARM_PRIVATE_7
R_ARM_PRIVATE_8
R_ARM_PRIVATE_9
R_ARM_PRIVATE_10
R_ARM_PRIVATE_11
R_ARM_PRIVATE_12
R_ARM_PRIVATE_13
R_ARM_PRIVATE_14
R_ARM_PRIVATE_15
R_ARM_ME_TOO
R_ARM_THM_TLS_DESCSEQ16
R_ARM_THM_TLS_DESCSEQ32
R_ARM_IRELATIVE
R_MIPS_NONE
R_MIPS_16
R_MIPS_32
R_MIPS_REL32
R_MIPS_26
R_MIPS_HI16
R_MIPS_LO16
R_MIPS_GPREL16
R_MIPS_LITERAL
R_MIPS_GOT16
R_MIPS_PC16
R_MIPS_CALL16
R_MIPS_GPREL32
R_MIPS_UNUSED1
R_MIPS_UNUSED2
R_MIPS_UNUSED3
R_MIPS_SHIFT5
R_MIPS_SHIFT6
R_MIPS_64
R_MIPS_GOT_DISP
R_MIPS_GOT_PAGE
R_MIPS_GOT_OFST
R_MIPS_GOT_HI16
R_MIPS_GOT_LO16
R_MIPS_SUB
R_MIPS_INSERT_A
R_MIPS_INSERT_B
R_MIPS_DELETE
R_MIPS_HIGHER
R_MIPS_HIGHEST
R_MIPS_CALL_HI16
R_MIPS_CALL_LO16
R_MIPS_SCN_DISP
R_MIPS_REL16
R_MIPS_ADD_IMMEDIATE
R_MIPS_PJUMP
R_MIPS_RELGOT
R_MIPS_JALR
R_MIPS_TLS_DTPMOD32
R_MIPS_TLS_DTPREL32
R_MIPS_TLS_DTPMOD64
R_MIPS_TLS_DTPREL64
R_MIPS_TLS_GD
R_MIPS_TLS_LDM
R_MIPS_TLS_DTPREL_HI16
R_MIPS_TLS_DTPREL_LO16
R_MIPS_TLS_GOTTPREL
R_MIPS_TLS_TPREL32
R_MIPS_TLS_TPREL64
R_MIPS_TLS_TPREL_HI16
R_MIPS_TLS_TPREL_LO16
R_MIPS_GLOB_DAT
R_MIPS_PC21_S2
R_MIPS_PC26_S2
R_MIPS_PC18_S3
R_MIPS_PC19_S2
R_MIPS_PCHI16
R_MIPS_PCLO16
R_MIPS16_26
R_MIPS16_GPREL
R_MIPS16_GOT16
R_MIPS16_CALL16
R_MIPS16_HI16
R_MIPS16_LO16
R_MIPS16_TLS_GD
R_MIPS16_TLS_LDM
R_MIPS16_TLS_DTPREL_HI16
R_MIPS16_TLS_DTPREL_LO16
R_MIPS16_TLS_GOTTPREL
R_MIPS16_TLS_TPREL_HI16
R_MIPS16_TLS_TPREL_LO16
R_MIPS_COPY
R_MIPS_JUMP_SLOT
R_MICROMIPS_26_S1
R_MICROMIPS_HI16
R_MICROMIPS_LO16
R_MICROMIPS_GPREL16
R_MICROMIPS_LITERAL
R_MICROMIPS_GOT16
R_MICROMIPS_PC7_S1
R_MICROMIPS_PC10_S1
R_MICROMIPS_PC16_S1
R_MICROMIPS_CALL16
R_MICROMIPS_GOT_DISP
R_MICROMIPS_GOT_PAGE
R_MICROMIPS_GOT_OFST
R_MICROMIPS_GOT_HI16
R_MICROMIPS_GOT_LO16
R_MICROMIPS_SUB
R_MICROMIPS_HIGHER
R_MICROMIPS_HIGHEST
R_MICROMIPS_CALL_HI16
R_MICROMIPS_CALL_LO16
R_MICROMIPS_SCN_DISP
R_MICROMIPS_JALR
R_MICROMIPS_HI0_LO16
R_MICROMIPS_TLS_GD
R_MICROMIPS_TLS_LDM
R_MICROMIPS_TLS_DTPREL_HI16
R_MICROMIPS_TLS_DTPREL_LO16
R_MICROMIPS_TLS_GOTTPREL
R_MICROMIPS_TLS_TPREL_HI16
R_MICROMIPS_TLS_TPREL_LO16
R_MICROMIPS_GPREL7_S2
R_MICROMIPS_PC23_S2
R_MICROMIPS_PC21_S1
R_MICROMIPS_PC26_S1
R_MICROMIPS_PC18_S3
R_MICROMIPS_PC19_S2
R_MIPS_NUM
R_MIPS_PC32
R_MIPS_EH
R_386_NONE
R_386_32
R_386_PC32
R_386_GOT32
R_386_PLT32
R_386_COPY
R_386_GLOB_DAT
R_386_JUMP_SLOT
R_386_RELATIVE
R_386_GOTOFF
R_386_GOTPC
R_386_32PLT
R_386_TLS_TPOFF
R_386_TLS_IE
R_386_TLS_GOTIE
R_386_TLS_LE
R_386_TLS_GD
R_386_TLS_LDM
R_386_16
R_386_PC16
R_386_8
R_386_PC8
R_386_TLS_GD_32
R_386_TLS_GD_PUSH
R_386_TLS_GD_CALL
R_386_TLS_GD_POP
R_386_TLS_LDM_32
R_386_TLS_LDM_PUSH
R_386_TLS_LDM_CALL
R_386_TLS_LDM_POP
R_386_TLS_LDO_32
R_386_TLS_IE_32
R_386_TLS_LE_32
R_386_TLS_DTPMOD32
R_386_TLS_DTPOFF32
R_386_TLS_TPOFF32
R_386_TLS_GOTDESC
R_386_TLS_DESC_CALL
R_386_TLS_DESC
R_386_IRELATIVE
R_386_GOT32X
R_X86_64_NONE
R_X86_64_64
R_X86_64_PC32
R_X86_64_GOT32
R_X86_64_PLT32
R_X86_64_COPY
R_X86_64_GLOB_DAT
R_X86_64_JUMP_SLOT
R_X86_64_RELATIVE
R_X86_64_GOTPCREL
R_X86_64_32
R_X86_64_32S
R_X86_64_16
R_X86_64_PC16
R_X86_64_8
R_X86_64_PC8
R_X86_64_DTPMOD64
R_X86_64_DTPOFF64
R_X86_64_TPOFF64
R_X86_64_TLSGD
R_X86_64_TLSLD
R_X86_64_DTPOFF32
R_X86_64_GOTTPOFF
R_X86_64_TPOFF32
R_X86_64_PC64
R_X86_64_GOTOFF64
R_X86_64_GOTPC32
R_X86_64_GOT64
R_X86_64_GOTPCREL64
R_X86_64_GOTPC64
R_X86_64_GOTPLT64
R_X86_64_PLTOFF64
R_X86_64_SIZE32
R_X86_64_SIZE64
R_X86_64_GOTPC32_TLSDESC
R_X86_64_TLSDESC_CALL
R_X86_64_TLSDESC
R_X86_64_IRELATIVE
R_X86_64_GOTPCRELX
R_X86_64_REX_GOTPCRELX
thumb
v5te
v5tej
v6kz
v6t2
v6sm
v7em
aclass
rclass
hwdiv
mclass
thumb2
vfp2
vfp3
vfp4
neon
fp16
hwdiv-arm
mips2
mips3
mips4
mips5
mips32
mips64
mips32r2
mips64r2
mips32r6
mips64r6
cnmips
mips16
micromips
invalid sh_type
invalid section contents size
invalid section index
invalid sh_entsize
size is not a multiple of sh_entsize
invalid section offset
invalid section header entry size (e_shentsize) in ELF header
section header table goes past the end of the file
invalid alignment of section headers
section table goes past the end of file
Invalid ELFCLASS!
ELF64-unknown
ELF64-BPF
ELF64-amdgpu
ELF64-wasm
ELF64-mips
ELF64-sparc
ELF64-s390
ELF64-riscv
ELF64-ppc64
ELF64-aarch64-big
ELF64-x86-64
ELF32-unknown
ELF32-amdgpu
ELF32-wasm
ELF32-sparc
ELF32-riscv
ELF32-ppc
ELF32-mips
ELF32-lanai
ELF32-hexagon
ELF32-avr
ELF32-arm-big
ELF32-x86-64
ELF32-i386
ELF32-iamcu
ELF64-i386
invalid string offset
invalid sh_type for string table, expected SHT_STRTAB
empty string table
string table non-null terminated
index past the end of the symbol table
ELF64-amdgpu-hsacobj
ELF64-aarch64-little
ELF32-arm-little
No object file for requested architecture
The file was not recognized as a valid object file
Invalid data was encountered while parsing the file
The end of the file was unexpectedly encountered
String table must end with a null terminator
Invalid section index
Bitcode section not found in object file
Invalid symbol index
llvm.object
LLVM_OVERRIDE_PRODUCER
debug_str_offsets
debug_str_offs
Mach-O 64-bit unknown
Mach-O 64-bit ppc64
Mach-O arm64
Mach-O 32-bit unknown
Mach-O 32-bit ppc
Mach-O 32-bit i386
Mach-O arm
Mach-O 64-bit x86-64
PPC_RELOC_VANILLA
PPC_RELOC_PAIR
PPC_RELOC_BR14
PPC_RELOC_BR24
PPC_RELOC_HI16
PPC_RELOC_LO16
PPC_RELOC_HA16
PPC_RELOC_LO14
PPC_RELOC_SECTDIFF
PPC_RELOC_PB_LA_PTR
PPC_RELOC_HI16_SECTDIFF
PPC_RELOC_LO16_SECTDIFF
PPC_RELOC_HA16_SECTDIFF
PPC_RELOC_JBSR
PPC_RELOC_LO14_SECTDIFF
PPC_RELOC_LOCAL_SECTDIFF
ARM64_RELOC_UNSIGNED
ARM64_RELOC_SUBTRACTOR
ARM64_RELOC_BRANCH26
ARM64_RELOC_PAGE21
ARM64_RELOC_PAGEOFF12
ARM64_RELOC_GOT_LOAD_PAGE21
ARM64_RELOC_GOT_LOAD_PAGEOFF12
ARM64_RELOC_POINTER_TO_GOT
ARM64_RELOC_TLVP_LOAD_PAGE21
ARM64_RELOC_TLVP_LOAD_PAGEOFF12
ARM64_RELOC_ADDEND
ARM_RELOC_VANILLA
ARM_RELOC_PAIR
ARM_RELOC_SECTDIFF
ARM_RELOC_LOCAL_SECTDIFF
ARM_RELOC_PB_LA_PTR
ARM_RELOC_BR24
ARM_THUMB_RELOC_BR22
ARM_THUMB_32BIT_BRANCH
ARM_RELOC_HALF
ARM_RELOC_HALF_SECTDIFF
X86_64_RELOC_UNSIGNED
X86_64_RELOC_SIGNED
X86_64_RELOC_BRANCH
X86_64_RELOC_GOT_LOAD
X86_64_RELOC_GOT
X86_64_RELOC_SUBTRACTOR
X86_64_RELOC_SIGNED_1
X86_64_RELOC_SIGNED_2
X86_64_RELOC_SIGNED_4
X86_64_RELOC_TLV
GENERIC_RELOC_VANILLA
GENERIC_RELOC_PAIR
GENERIC_RELOC_SECTDIFF
GENERIC_RELOC_PB_LA_PTR
GENERIC_RELOC_LOCAL_SECTDIFF
GENERIC_RELOC_TLV
Malformed MachO file.
__LLVM
__bitcode
bad section index: 
 for symbol at index 
truncated or malformed object (
getSymbolIndex() called with no symbol table symbol
bad string index: 
Requested symbol index is out of range.
the mach header extends past the end of the file
Structure read out-of-range
load commands extend past the end of the file
Mach-O headers
load command 0 extends past the end all load commands in the file
load command 
 cmdsize not a multiple of 8
 cmdsize not a multiple of 4
 LC_SYMTAB cmdsize too small
more than one LC_SYMTAB command
LC_SYMTAB command 
 has incorrect cmdsize
symoff field of LC_SYMTAB command 
 extends past the end of the file
struct nlist_64
struct nlist
symoff field plus nsyms field times sizeof(
) of LC_SYMTAB command 
symbol table
stroff field of LC_SYMTAB command 
stroff field plus strsize field of LC_SYMTAB command 
string table
 LC_DYSYMTAB cmdsize too small
more than one LC_DYSYMTAB command
LC_DYSYMTAB command 
tocoff field of LC_DYSYMTAB command 
tocoff field plus ntoc field times sizeof(struct dylib_table_of_contents) of LC_DYSYMTAB command 
table of contents
modtaboff field of LC_DYSYMTAB command 
struct dylib_module_64
struct dylib_module
modtaboff field plus nmodtab field times sizeof(
) of LC_DYSYMTAB command 
module table
extrefsymoff field of LC_DYSYMTAB command 
extrefsymoff field plus nextrefsyms field times sizeof(struct dylib_reference) of LC_DYSYMTAB command 
reference table
indirectsymoff field of LC_DYSYMTAB command 
indirectsymoff field plus nindirectsyms field times sizeof(uint32_t) of LC_DYSYMTAB command 
indirect table
extreloff field of LC_DYSYMTAB command 
extreloff field plus nextrel field times sizeof(struct relocation_info) of LC_DYSYMTAB command 
external relocation table
locreloff field of LC_DYSYMTAB command 
locreloff field plus nlocrel field times sizeof(struct relocation_info) of LC_DYSYMTAB command 
local relocation table
LC_DATA_IN_CODE
data in code info
LC_LINKER_OPTIMIZATION_HINT
linker optimization hints
LC_FUNCTION_STARTS
function starts data
LC_SEGMENT_SPLIT_INFO
split info data
LC_DYLIB_CODE_SIGN_DRS
code signing RDs data
LC_CODE_SIGNATURE
code signature data
LC_DYLD_INFO
LC_DYLD_INFO_ONLY
LC_UUID command 
more than one LC_UUID command
LC_SEGMENT_64
 cmdsize too small
 inconsistent cmdsize in 
 for the number of sections
offset field of section 
 command 
 not past the headers of the file
offset field plus size field of section 
size field of section 
 greater than the segment
addr field of section 
 less than the segment's vmaddr
addr field plus size of section 
 greater than than the segment's vmaddr plus vmsize
section contents
reloff field of section 
reloff field plus nreloc field times sizeof(struct relocation_info) of section 
section relocation entries
 fileoff field in 
 fileoff field plus filesize field in 
 filesize field in 
 greater than vmsize field
__PAGEZERO
LC_SEGMENT
LC_ID_DYLIB
more than one LC_ID_DYLIB command
LC_ID_DYLIB load command in non-dynamic library file type
LC_LOAD_DYLIB
LC_LOAD_WEAK_DYLIB
LC_LAZY_LOAD_DYLIB
LC_REEXPORT_DYLIB
LC_LOAD_UPWARD_DYLIB
LC_ID_DYLINKER
LC_LOAD_DYLINKER
LC_DYLD_ENVIRONMENT
LC_VERSION_MIN_MACOSX
LC_VERSION_MIN_IPHONEOS
LC_VERSION_MIN_TVOS
LC_VERSION_MIN_WATCHOS
 LC_NOTE has incorrect cmdsize
offset field of LC_NOTE command 
size field plus offset field of LC_NOTE command 
LC_NOTE data
 LC_BUILD_VERSION_COMMAND has incorrect cmdsize
 LC_RPATH cmdsize too small
 LC_RPATH path.offset field too small, not past the end of the rpath_command struct
 LC_RPATH path.offset field extends past the end of the load command
 LC_RPATH library name extends past the end of the load command
LC_SOURCE_VERSION command 
more than one LC_SOURCE_VERSION command
LC_MAIN command 
more than one LC_MAIN command
LC_ENCRYPTION_INFO command 
LC_ENCRYPTION_INFO
LC_ENCRYPTION_INFO_64 command 
LC_ENCRYPTION_INFO_64
 LC_LINKER_OPTION cmdsize too small
 LC_LINKER_OPTION string count 
 does not match number of strings
 LC_SUB_FRAMEWORK cmdsize too small
LC_SUB_FRAMEWORK
sub_framework_command
umbrella
 LC_SUB_UMBRELLA cmdsize too small
LC_SUB_UMBRELLA
sub_umbrella_command
sub_umbrella
 LC_SUB_LIBRARY cmdsize too small
LC_SUB_LIBRARY
sub_library_command
sub_library
 LC_SUB_CLIENT cmdsize too small
LC_SUB_CLIENT
sub_client_command
client
LC_ROUTINES command 
more than one LC_ROUTINES and or LC_ROUTINES_64 command
LC_ROUTINES_64 command 
more than one LC_ROUTINES_64 and or LC_ROUTINES command
LC_UNIXTHREAD
more than one LC_UNIXTHREAD command
LC_THREAD
 LC_TWOLEVEL_HINTS has incorrect cmdsize
more than one LC_TWOLEVEL_HINTS command
offset field of LC_TWOLEVEL_HINTS command 
offset field plus nhints times sizeof(struct twolevel_hint) field of LC_TWOLEVEL_HINTS command 
two level hints
 for cmd value of: 
 is obsolete and not supported
 extends past the end all load commands in the file
contains LC_DYSYMTAB load command without a LC_SYMTAB load command
ilocalsym in LC_DYSYMTAB load command extends past the end of the symbol table
ilocalsym plus nlocalsym in LC_DYSYMTAB load command extends past the end of the symbol table
nextdefsym in LC_DYSYMTAB load command extends past the end of the symbol table
iextdefsym plus nextdefsym in LC_DYSYMTAB load command extends past the end of the symbol table
nundefsym in LC_DYSYMTAB load command extends past the end of the symbol table
iundefsym plus nundefsym in LC_DYSYMTAB load  command extends past the end of the symbol table
no LC_ID_DYLIB load command in dynamic library filetype
flavor in 
 extends past end of command
 count in 
 count not x86_THREAD_STATE32_COUNT for flavor number 
 which is a x86_THREAD_STATE32 flavor in 
 command
 x86_THREAD_STATE32 extends past end of command in 
 unknown flavor (
) for flavor number 
 count not x86_THREAD_STATE64_COUNT for flavor number 
 which is a x86_THREAD_STATE64 flavor in 
 x86_THREAD_STATE64 extends past end of command in 
 count not ARM_THREAD_STATE_COUNT for flavor number 
 which is a ARM_THREAD_STATE flavor in 
 ARM_THREAD_STATE extends past end of command in 
 count not ARM_THREAD_STATE64_COUNT for flavor number 
 which is a ARM_THREAD_STATE64 flavor in 
 ARM_THREAD_STATE64 extends past end of command in 
 count not PPC_THREAD_STATE_COUNT for flavor number 
 which is a PPC_THREAD_STATE flavor in 
 PPC_THREAD_STATE extends past end of command in 
unknown cputype (
) load command 
 command can't be checked
.offset field too small, not past the end of the 
.offset field extends past the end of the load command
 name extends past the end of the load command
more than one LC_ENCRYPTION_INFO and or LC_ENCRYPTION_INFO_64 command
cryptoff field of 
cryptoff field plus cryptsize field of 
more than one LC_VERSION_MIN_MACOSX, LC_VERSION_MIN_IPHONEOS, LC_VERSION_MIN_TVOS or LC_VERSION_MIN_WATCHOS command
 name.offset field too small, not past the end of the dylinker_command struct
 name.offset field extends past the end of the load command
 dyld name extends past the end of the load command
 name.offset field too small, not past the end of the dylib_command struct
 library name extends past the end of the load command
more than one LC_DYLD_INFO and or LC_DYLD_INFO_ONLY command
rebase_off field of 
rebase_off field plus rebase_size field of 
dyld rebase info
bind_off field of 
bind_off field plus bind_size field of 
dyld bind info
weak_bind_off field of 
weak_bind_off field plus weak_bind_size field of 
dyld weak bind info
lazy_bind_off field of 
lazy_bind_off field plus lazy_bind_size field of 
dyld lazy bind info
export_off field of 
export_off field plus export_size field of 
dyld export info
more than one 
dataoff field of 
dataoff field plus datasize field of 
 at offset 
 with a size of 
, overlaps 
 extends past end of file
 with size less than 8 bytes
Unrecognized MachO magic number
.llvmbc
WASM
Unknown
R_WEBASSEMBLY_FUNCTION_INDEX_LEB
R_WEBASSEMBLY_TABLE_INDEX_SLEB
R_WEBASSEMBLY_TABLE_INDEX_I32
R_WEBASSEMBLY_GLOBAL_ADDR_LEB
R_WEBASSEMBLY_GLOBAL_ADDR_SLEB
R_WEBASSEMBLY_GLOBAL_ADDR_I32
R_WEBASSEMBLY_TYPE_INDEX_LEB
R_WEBASSEMBLY_GLOBAL_INDEX_LEB
TYPE
IMPORT
TABLE
MEMORY
GLOBAL
EXPORT
START
ELEM
CODE
DATA
Bad magic number
Missing version number
Bad version number
Zero length section
Invalid start function
Bad section type
Data section ended prematurely
Invalid opcode in init_expr
Invalid init_expr
Invalid function count
Code section ended prematurely
Invalid TableIndex
Elem section ended prematurely
Unexpected export kind
Export section ended prematurely
Global section ended prematurely
Memory section ended prematurely
Invalid table element type
Table section ended prematurely
Function section ended prematurely
Unexpected import kind
Import section ended prematurely
Invalid signature type
Multiple return types not supported
Type section ended prematurely
linking
reloc.
Invalid section code
Bad relocation type: 
Reloc section ended prematurely
Invalid symbol name in linking section: 
Linking sub-section ended prematurely
Linking section ended prematurely
Name sub-section ended prematurely
Name section ended prematurely
print-summary-global-ids
Print the global id for each value when reading the module summary
Corrupted bitcode
llvm.bitcode
Invalid bitcode signature
Invalid bitcode wrapper header
Never resolved function from blockaddress
 (Producer: '
' Reader: 'LLVM 
Invalid multiple blocks
Invalid value
Bitwidth for integer type out of range
Invalid type
Invalid function argument type
Invalid TYPE table
Invalid vector length
Invalid TYPE table: Only named structs can be forward referenced
Invalid multiple synchronization scope names blocks
Invalid empty synchronization scope names block
Invalid type for value
Invalid alignment value
Invalid global variable comdat ID
Invalid calling convention ID
Invalid function comdat ID
Insufficient function protos
Expected a constant
Alias and aliasee types don't match
Invalid constant reference
Invalid constant type
Explicit gep operator type does not match pointee type of pointer operand
Invalid gep with no operands
Invalid value name
Unknown attribute kind (
Malformed global initializer set
Could not find function in stream
Trying to materialize functions before seeing function blocks
Expect SubBlock
Expect function block
Invalid function metadata: incoming forward references
Invalid cast
Explicit gep type does not match pointee type of pointer operand
EXTRACTVAL: Invalid instruction with 0 indices
EXTRACTVAL: Invalid type
EXTRACTVAL: Invalid struct index
EXTRACTVAL: Invalid array index
INSERTVAL: Invalid instruction with 0 indices
INSERTVAL: Invalid type
INSERTVAL: Invalid struct index
INSERTVAL: Invalid array index
Inserted value type doesn't match aggregate type
Explicit invoke type is not a function type
Callee is not a pointer
Callee is not of pointer to function type
Explicit invoke type does not match pointee type of callee operand
Insufficient operands to call
Personality function mismatch
Old-style alloca with a non-pointer type
Fast math flags indicator set for call with no FMF
Explicit call type is not a function type
Callee is not a pointer type
Explicit call type does not match pointee type of callee operand
Fast-math-flags specified for call without floating-point scalar or vector return type
Invalid instruction with no BB
Operand bundles found with no consumer
Never resolved value found in function
Invalid function metadata: outgoing forward refs
Load/Store operand is not a pointer type
Explicit load/store type does not match pointee type of pointer operand
Cannot load/store from pointer
Incompatible epoch: Bitcode '
' vs current: '
Expected a single module
Invalid abbrev number
Abbreviation starts with an Array or a Blob
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789._
Array element type can't be an Array or a Blob
Array op not second to last
Array element type has to be an encoding of a type
Invalid encoding
Fixed or VBR abbrev record with size > MaxChunkData
Abbrev record with no operands
import-full-type-definitions
Import full type definitions for ThinLTO.
disable-ondemand-mds-loading
Force disable the lazy-loading on-demand of metadata when loading bitcode for importing.
Malformed block
Invalid record
Corrupted Metadata block
Invalid ID
Invalid metadata attachment
Invalid record: metadata strings layout
Invalid record: metadata strings with no strings
Invalid record: metadata strings corrupt offset
Invalid record: metadata strings bad length
Invalid record: metadata strings truncated chars
Invalid metadata: fwd refs into function blocks
METADATA_NAME not followed by METADATA_NAMED_NODE
Alignment value is too large
Conflicting METADATA_KIND records
Can't lazyload MD
Type mismatch in constant table!
asm-macro-max-nesting-depth
The maximum nesting depth allowed for assembly macros.
expected string
inlined_at
__emit
even
code
discard
.objc_protocol
macos
tvos
previous definition is here
 in '
__message_refs
object
common
.init
alloc
AS_SECURE_LOG_FILE
as-secure-log-file-name
As secure log file name (initialized from AS_SECURE_LOG_FILE env variable)
<stdin>
local
FUNCTION
__cstring
__const
.xdata
unwind
pure_instructions
S_ATTR_PURE_INSTRUCTIONS
no_toc
S_ATTR_NO_TOC
strip_static_syms
S_ATTR_STRIP_STATIC_SYMS
no_dead_strip
S_ATTR_NO_DEAD_STRIP
live_support
S_ATTR_LIVE_SUPPORT
self_modifying_code
S_ATTR_SELF_MODIFYING_CODE
debug
S_ATTR_DEBUG
S_ATTR_SOME_INSTRUCTIONS
S_ATTR_EXT_RELOC
S_ATTR_LOC_RELOC
regular
S_REGULAR
S_ZEROFILL
cstring_literals
S_CSTRING_LITERALS
4byte_literals
S_4BYTE_LITERALS
8byte_literals
S_8BYTE_LITERALS
literal_pointers
S_LITERAL_POINTERS
non_lazy_symbol_pointers
S_NON_LAZY_SYMBOL_POINTERS
lazy_symbol_pointers
S_LAZY_SYMBOL_POINTERS
symbol_stubs
S_SYMBOL_STUBS
mod_init_funcs
S_MOD_INIT_FUNC_POINTERS
mod_term_funcs
S_MOD_TERM_FUNC_POINTERS
coalesced
S_COALESCED
S_GB_ZEROFILL
interposing
S_INTERPOSING
16byte_literals
S_16BYTE_LITERALS
S_DTRACE_DOF
S_LAZY_DYLIB_SYMBOL_POINTERS
thread_local_regular
S_THREAD_LOCAL_REGULAR
thread_local_zerofill
S_THREAD_LOCAL_ZEROFILL
thread_local_variables
S_THREAD_LOCAL_VARIABLES
thread_local_variable_pointers
S_THREAD_LOCAL_VARIABLE_POINTERS
thread_local_init_function_pointers
S_THREAD_LOCAL_INIT_FUNCTION_POINTERS
mach-o section specifier requires a segment whose length is between 1 and 16 characters
mach-o section specifier requires a segment and section separated by a comma
mach-o section specifier requires a section whose length is between 1 and 16 characters
mach-o section specifier uses an unknown section type
mach-o section specifier of type 'symbol_stubs' requires a size specifier
mach-o section specifier has invalid attribute
mach-o section specifier cannot have a stub size specified because it does not have type 'symbol_stubs'
mach-o section specifier has a malformed stub size
End of File
Unrecognized instrumentation profile encoding format
Invalid instrumentation profile data (bad magic)
Invalid instrumentation profile data (file header is corrupt)
Unsupported instrumentation profile format version
Unsupported instrumentation profile hash type
Malformed instrumentation profile data
No profile data available for function
Function control flow change detected (hash mismatch)
Function basic block count change detected (counter mismatch)
Function value site count change detected (counter mismatch)
Failed to compress data (zlib)
Failed to uncompress data (zlib)
Empty raw profile file
Profile uses zlib compression but the profile reader was built without zlib support
llvm.instrprof
static-func-full-module-prefix
Use full module build paths in the profile counter names for static functions.
static-func-strip-dirname-prefix
Strip specified level of directory name from source path in the profile counter name for static functions.
__llvm_covmap
.lcovmap
__DATA,
__LLVM_COV,
PGOFuncName
Success
Too much profile data
Truncated profile data
Counter overflow
; Materializable
; Function Attrs: 
define 
hidden 
protected 
dllimport 
dllexport 
unnamed_addr
local_unnamed_addr
 section "
 align 
 gc "
 prefix 
<null operand!>
 prologue 
 personality 
; <label>:
<badref>
; Error: Block without parent!
 No predecessors!
 preds = 
<badref> = 
musttail 
tail 
notail 
 atomic
 weak
 volatile
 <unknown operation 
 xchg
 add
 sub
 and
 nand
 xor
 max
 min
 umax
 umin
    
          cleanup
          catch 
          filter 
 within 
] unwind 
to caller
 void
 from 
 unwind 
, ...
          to 
inalloca 
swifterror 
, align 
, addrspace(
 syncscope("
 ; (
not_atomic
unordered
monotonic
consume
acquire
acq_rel
seq_cst
 fast
 nnan
 ninf
 nsz
 arcp
 contract
 nuw
 nsw
 exact
 inbounds
; uselistorder directives
uselistorder
_bb 
, { 
 comdat
asm 
sideeffect 
alignstack 
inteldialect 
", "
!DIExpression(
zeroinitializer
blockaddress(
null
undef
inrange 
<placeholder or erroneous Constant>
void
x86_fp80
fp128
ppc_fp128
metadata
x86_mmx
token
%"type 
 addrspace(
opaque
fastcc
coldcc
webkit_jscc
anyregcc
preserve_mostcc
preserve_allcc
cxx_fast_tlscc
ghccc
x86_stdcallcc
x86_fastcallcc
x86_thiscallcc
x86_regcallcc
x86_vectorcallcc
intel_ocl_bicc
arm_apcscc
arm_aapcscc
arm_aapcs_vfpcc
msp430_intrcc
avr_intrcc 
avr_signalcc 
ptx_kernel
ptx_device
x86_64_sysvcc
win64cc
spir_func
spir_kernel
swiftcc
x86_intrcc
hhvmcc
hhvm_ccc
amdgpu_vs
amdgpu_hs
amdgpu_gs
amdgpu_ps
amdgpu_cs
amdgpu_kernel
private 
extern_weak 
common 
available_externally 
linkonce 
linkonce_odr 
weak_odr 
appending 
internal 
!<unknown kind #
<empty name> 
source_filename = "
target datalayout = "
target triple = "
module asm "
 = type 
attributes #
 = { 
distinct 
<temporary!> 
!DILocation(
column
scope
inlinedAt
!DIGlobalVariableExpression(
expr
!GenericDINode(
header
operands: {
!DISubrange(
lowerBound
!DIEnumerator(
name
!DIBasicType(
size
encoding
!DIDerivedType(
file
baseType
offset
flags
extraData
dwarfAddressSpace
!DICompositeType(
elements
runtimeLang
vtableHolder
templateParams
identifier
!DISubroutineType(
types
!DIFile(
filename
directory
checksumkind: 
checksum
!DICompileUnit(
language
producer
isOptimized
runtimeVersion
splitDebugFilename
emissionKind
enums
retainedTypes
globals
imports
macros
dwoId
splitDebugInlining
debugInfoForProfiling
gnuPubnames
!DISubprogram(
linkageName
isLocal
isDefinition
scopeLine
containingType
virtuality
virtualIndex
thisAdjustment
unit
declaration
variables
thrownTypes
!DILexicalBlock(
!DILexicalBlockFile(
discriminator
!DINamespace(
exportSymbols
!DIModule(
configMacros
includePath
isysroot
!DITemplateTypeParameter(
!DITemplateValueParameter(
!DIGlobalVariable(
!DILocalVariable(
!DIObjCProperty(
attributes
!DIImportedEntity(
entity
!DIMacro(
type: 
!DIMacroFile(
nodes
tag: 
 = !{
thread_local 
thread_local(localdynamic) 
thread_local(initialexec) 
thread_local(localexec) 
alias 
ifunc 
 <<NULL ALIASEE>>
external 
addrspace(
externally_initialized 
global 
constant 
, section "
 = comdat 
exactmatch
largest
noduplicates
samesize
sanitize_address
alwaysinline
argmemonly
builtin
byval
convergent
swifterror
swiftself
inaccessiblememonly
inaccessiblemem_or_argmemonly
inlinehint
inreg
jumptable
minsize
naked
nobuiltin
nocapture
noduplicate
noimplicitfloat
nonlazybind
noredzone
norecurse
optnone
optsize
writeonly
returns_twice
signext
speculatable
sspreq
sspstrong
safestack
sanitize_thread
sanitize_memory
uwtable
zeroext
alignstack
allocsize(
stack-probe-size
less-precise-fpmad
no-infs-fp-math
no-nans-fp-math
unsafe-fp-math
no-jump-tables
arm.rbit
aarch64.rbit
arm.neon.vclz
llvm.ctlz.
arm.neon.vcnt
^arm\.neon\.vld([1234]|[234]lane)\.v[a-z0-9]*$
.p0i8
^arm\.neon\.vst([1234]|[234]lane)\.v[a-z0-9]*$
lane
aarch64.thread.pointer
arm.thread.pointer
ctlz.
.old
cttz.
dbg.value
lifetime.start
invariant.start
lifetime.end
invariant.end
masked.load.
masked.store.
masked.gather.
masked.scatter.
nvvm.
brev32
brev64
clz.i
popc.i
abs.i
max.i
abs.ll
clz.ll
max.ll
popc.ll
max.ull
min.i
max.ui
min.ll
min.ull
min.ui
objectsize.
stackprotectorcheck
x86.
sse2.pcmpeq.
sse2.pcmpgt.
avx2.pcmpeq.
avx2.pcmpgt.
avx512.mask.pcmpeq.
avx512.mask.pcmpgt.
sse.add.ss
sse2.add.sd
sse.sub.ss
sse2.sub.sd
sse.mul.ss
sse2.mul.sd
sse.div.ss
sse2.div.sd
sse41.pmaxsb
sse2.pmaxs.w
sse41.pmaxsd
sse2.pmaxu.b
sse41.pmaxuw
sse41.pmaxud
sse41.pminsb
sse2.pmins.w
sse41.pminsd
sse2.pminu.b
sse41.pminuw
sse41.pminud
avx512.mask.pshuf.b.
avx2.pmax
avx2.pmin
avx512.mask.pmax
avx512.mask.pmin
avx2.vbroadcast
avx2.pbroadcast
avx.vpermil.
sse2.pshuf
avx512.pbroadcast
avx512.mask.broadcast.s
avx512.mask.movddup
avx512.mask.movshdup
avx512.mask.movsldup
avx512.mask.pshuf.d.
avx512.mask.pshufl.w.
avx512.mask.pshufh.w.
avx512.mask.shuf.p
avx512.mask.vpermil.p
avx512.mask.perm.df.
avx512.mask.perm.di.
avx512.mask.punpckl
avx512.mask.punpckh
avx512.mask.unpckl.
avx512.mask.unpckh.
avx512.mask.pand.
avx512.mask.pandn.
avx512.mask.por.
avx512.mask.pxor.
avx512.mask.and.
avx512.mask.andn.
avx512.mask.or.
avx512.mask.xor.
avx512.mask.padd.
avx512.mask.psub.
avx512.mask.pmull.
avx512.mask.cvtdq2pd.
avx512.mask.cvtudq2pd.
avx512.mask.pmul.dq.
avx512.mask.pmulu.dq.
avx512.mask.packsswb.
avx512.mask.packssdw.
avx512.mask.packuswb.
avx512.mask.packusdw.
avx512.mask.cmp.b
avx512.mask.cmp.d
avx512.mask.cmp.q
avx512.mask.cmp.w
avx512.mask.ucmp.
avx512.mask.add.pd.128
avx512.mask.add.pd.256
avx512.mask.add.ps.128
avx512.mask.add.ps.256
avx512.mask.div.pd.128
avx512.mask.div.pd.256
avx512.mask.div.ps.128
avx512.mask.div.ps.256
avx512.mask.mul.pd.128
avx512.mask.mul.pd.256
avx512.mask.mul.ps.128
avx512.mask.mul.ps.256
avx512.mask.sub.pd.128
avx512.mask.sub.pd.256
avx512.mask.sub.ps.128
avx512.mask.sub.ps.256
avx512.mask.max.pd.128
avx512.mask.max.pd.256
avx512.mask.max.ps.128
avx512.mask.max.ps.256
avx512.mask.min.pd.128
avx512.mask.min.pd.256
avx512.mask.min.ps.128
avx512.mask.min.ps.256
avx512.mask.vpermilvar.
avx512.mask.psll.d
avx512.mask.psll.q
avx512.mask.psll.w
avx512.mask.psra.d
avx512.mask.psra.q
avx512.mask.psra.w
avx512.mask.psrl.d
avx512.mask.psrl.q
avx512.mask.psrl.w
avx512.mask.pslli
avx512.mask.psrai
avx512.mask.psrli
avx512.mask.psllv
avx512.mask.psrav
avx512.mask.psrlv
sse41.pmovsx
sse41.pmovzx
avx2.pmovsx
avx2.pmovzx
avx512.mask.pmovsx
avx512.mask.pmovzx
avx512.mask.lzcnt.
sse2.cvtdq2pd
sse2.cvtps2pd
avx.cvtdq2.pd.256
avx.cvt.ps2.pd.256
avx.vinsertf128.
avx2.vinserti128
avx512.mask.insert
avx.vextractf128.
avx2.vextracti128
avx512.mask.vextract
sse4a.movnt.
avx.movnt.
avx512.storent.
sse41.movntdqa
avx2.movntdqa
avx512.movntdqa
sse2.storel.dq
sse.storeu.
sse2.storeu.
avx.storeu.
avx512.mask.storeu.
avx512.mask.store.p
avx512.mask.store.b.
avx512.mask.store.w.
avx512.mask.store.d.
avx512.mask.store.q.
avx512.mask.loadu.
avx512.mask.load.
sse42.crc32.64.8
avx.vbroadcast.s
avx512.mask.palignr.
avx512.mask.valign.
sse2.psll.dq
sse2.psrl.dq
avx2.psll.dq
avx2.psrl.dq
avx512.psll.dq
avx512.psrl.dq
sse41.pblendw
sse41.blendp
avx.blend.p
avx2.pblendw
avx2.pblendd.
avx.vbroadcastf128
avx2.vbroadcasti128
xop.vpcmov
xop.vpcmov.256
avx512.mask.move.s
avx512.cvtmask2
xop.vpcom
sse41.ptest
sse41.insertps
sse41.dppd
sse41.dpps
sse41.mpsadbw
avx.dp.ps.256
avx2.mpsadbw
xop.vfrcz.ss
xop.vfrcz.sd
xop.vpermil2
llvm.cmdline
llvm.embedded.module
avx512.mask.store
sse2.pcmp
avx2.pcmp
avx512.mask.pcmp
avx512.mask.cmp
avx512.mask.ucmp
avx2.pmaxs
avx512.mask.pmaxs
avx2.pmaxu
avx512.mask.pmaxu
avx2.pmins
avx512.mask.pmins
avx2.pminu
avx512.mask.pminu
cvtdq2
cvtudq2
cvtdq2pd
cvtudq2pd
cvtps2pd
pmovsx
sse2.psll.dq.bs
avx2.psll.dq.bs
avx512.psll.dq.512
sse2.psrl.dq.bs
avx2.psrl.dq.bs
avx512.psrl.dq.512
sse2.pshuf.d
sse2.pshufl.w
sse2.pshufh.w
avx512.mask.movshdup.
avx512.mask.add.p
avx512.mask.div.p
avx512.mask.mul.p
avx512.mask.sub.p
avx512.mask.max.p
avx512.mask.min.p
avx512.mask.pack
avx512.mask.psll
.128
.256
avx512.mask.psrl
avx512.mask.psra
vpmovm2
ps.128
pd.128
ps.256
pd.256
ps.512
.movntdqa
abs.cond
.ull
max.cond
min.cond
ctlz
ctlz.trunc
ctpop
ctpop.trunc
palignr
extract
Objective-C Image Info Version
Objective-C Class Properties
Objective-C Image Info Section
llvm.vectorizer.
llvm.vectorizer.unroll
llvm.loop.interleave.count
llvm.loop.vectorize.
use-dbg-addr
Use llvm.dbg.addr for all local variables
decltype(nullptr)
Invalid bit width, must be a 24bit integer
Invalid ABI alignment, must be a 16bit integer
Invalid preferred alignment, must be a 16bit integer
Invalid ABI alignment, must be a power of 2
Invalid preferred alignment, must be a power of 2
Preferred alignment cannot be less than the ABI alignment
Trailing separator in datalayout string
Expected token before separator in datalayout string
not a number, or does not fit in an unsigned int
Address space 0 can never be non-integral
Invalid address space, must be a 24bit integer
Missing size specification for pointer in datalayout string
number of bits must be a byte width multiple
Invalid pointer size of 0 bytes
Missing alignment specification for pointer in datalayout string
Pointer ABI alignment must be a power of 2
Pointer preferred alignment must be a power of 2
Sized aggregate specification in datalayout string
Missing alignment specification in datalayout string
ABI alignment specification must be >0 for non-aggregate types
Zero width native integer type in datalayout string
Unexpected trailing characters after mangling specifier in datalayout string
Expected mangling specifier in datalayout string
Unknown mangling specifier in datalayout string
Unknown mangling in datalayout string
Unknown specifier in datalayout string
llvm.gcov
Debug Info Version
DIFlagZero
DIFlagPrivate
DIFlagProtected
DIFlagPublic
DIFlagFwdDecl
DIFlagAppleBlock
DIFlagBlockByrefStruct
DIFlagVirtual
DIFlagArtificial
DIFlagExplicit
DIFlagPrototyped
DIFlagObjcClassComplete
DIFlagObjectPointer
DIFlagVector
DIFlagStaticMember
DIFlagLValueReference
DIFlagRValueReference
DIFlagReserved
DIFlagSingleInheritance
DIFlagMultipleInheritance
DIFlagVirtualInheritance
DIFlagIntroducedVirtual
DIFlagBitField
DIFlagNoReturn
DIFlagMainSubprogram
DIFlagIndirectVirtualBase
CSK_MD5
CSK_SHA1
CSK_None
NoDebug
FullDebug
LineTablesOnly
 @[ 
pass-remarks
pattern
Enable optimization remarks from passes whose name match the given regular expression
pass-remarks-missed
Enable missed optimization remarks from passes whose name match the given regular expression
pass-remarks-analysis
Enable optimization analysis remarks from passes whose name match the given regular expression
Invalid regular expression '
' in -pass-remarks: 
 at line 
 (hotness: 
) in 
ignoring debug info with an invalid version (
ignoring invalid debug info in 
DominatorTree is not up to date!
Computed:
Actual:
=============================--------------------------------
Inorder Dominator Tree: 
DFSNumbers invalid: 
 slow queries.
nullptr
) = 
Verify dominator info (time consuming)
verify-dom-info
Inorder PostDominator Tree: 
not_intrinsic
llvm.addressofreturnaddress
llvm.adjust.trampoline
llvm.annotation
llvm.assume
llvm.bitreverse
llvm.bswap
llvm.canonicalize
llvm.ceil
llvm.clear_cache
llvm.convert.from.fp16
llvm.convert.to.fp16
llvm.copysign
llvm.coro.alloc
llvm.coro.alloca.alloc
llvm.coro.alloca.free
llvm.coro.alloca.get
llvm.coro.begin
llvm.coro.destroy
llvm.coro.done
llvm.coro.end
llvm.coro.frame
llvm.coro.free
llvm.coro.id
llvm.coro.id.retcon
llvm.coro.id.retcon.once
llvm.coro.param
llvm.coro.prepare.retcon
llvm.coro.promise
llvm.coro.resume
llvm.coro.save
llvm.coro.size
llvm.coro.subfn.addr
llvm.coro.suspend
llvm.coro.suspend.retcon
llvm.cos
llvm.ctlz
llvm.ctpop
llvm.cttz
llvm.dbg.addr
llvm.dbg.declare
llvm.dbg.value
llvm.debugtrap
llvm.donothing
llvm.eh.dwarf.cfa
llvm.eh.exceptioncode
llvm.eh.exceptionpointer
llvm.eh.return.i32
llvm.eh.return.i64
llvm.eh.sjlj.callsite
llvm.eh.sjlj.functioncontext
llvm.eh.sjlj.longjmp
llvm.eh.sjlj.lsda
llvm.eh.sjlj.setjmp
llvm.eh.sjlj.setup.dispatch
llvm.eh.typeid.for
llvm.eh.unwind.init
llvm.exp
llvm.exp2
llvm.expect
llvm.experimental.constrained.cos
llvm.experimental.constrained.exp
llvm.experimental.constrained.exp2
llvm.experimental.constrained.fadd
llvm.experimental.constrained.fdiv
llvm.experimental.constrained.fmul
llvm.experimental.constrained.frem
llvm.experimental.constrained.fsub
llvm.experimental.constrained.log
llvm.experimental.constrained.log10
llvm.experimental.constrained.log2
llvm.experimental.constrained.nearbyint
llvm.experimental.constrained.pow
llvm.experimental.constrained.powi
llvm.experimental.constrained.rint
llvm.experimental.constrained.sin
llvm.experimental.constrained.sqrt
llvm.experimental.deoptimize
llvm.experimental.gc.relocate
llvm.experimental.gc.result
llvm.experimental.gc.statepoint
llvm.experimental.guard
llvm.experimental.patchpoint.i64
llvm.experimental.patchpoint.void
llvm.experimental.stackmap
llvm.experimental.vector.reduce.add
llvm.experimental.vector.reduce.and
llvm.experimental.vector.reduce.fadd
llvm.experimental.vector.reduce.fmax
llvm.experimental.vector.reduce.fmin
llvm.experimental.vector.reduce.fmul
llvm.experimental.vector.reduce.mul
llvm.experimental.vector.reduce.or
llvm.experimental.vector.reduce.smax
llvm.experimental.vector.reduce.smin
llvm.experimental.vector.reduce.umax
llvm.experimental.vector.reduce.umin
llvm.experimental.vector.reduce.xor
llvm.fabs
llvm.floor
llvm.flt.rounds
llvm.fma
llvm.fmuladd
llvm.frameaddress
llvm.gcread
llvm.gcroot
llvm.gcwrite
llvm.get.dynamic.area.offset
llvm.init.trampoline
llvm.instrprof.increment
llvm.instrprof.increment.step
llvm.instrprof.value.profile
llvm.invariant.end
llvm.invariant.group.barrier
llvm.invariant.start
llvm.lifetime.end
llvm.lifetime.start
llvm.load.relative
llvm.localaddress
llvm.localescape
llvm.localrecover
llvm.log
llvm.log10
llvm.log2
llvm.longjmp
llvm.masked.compressstore
llvm.masked.expandload
llvm.masked.gather
llvm.masked.load
llvm.masked.scatter
llvm.masked.store
llvm.maxnum
llvm.memcpy
llvm.memcpy.element.unordered.atomic
llvm.memmove
llvm.memmove.element.unordered.atomic
llvm.memset
llvm.memset.element.unordered.atomic
llvm.minnum
llvm.nearbyint
llvm.objectsize
llvm.pcmarker
llvm.pow
llvm.powi
llvm.prefetch
llvm.ptr.annotation
llvm.read_register
llvm.readcyclecounter
llvm.returnaddress
llvm.rint
llvm.round
llvm.sadd.with.overflow
llvm.setjmp
llvm.siglongjmp
llvm.sigsetjmp
llvm.sin
llvm.smul.with.overflow
llvm.sqrt
llvm.ssa.copy
llvm.ssub.with.overflow
llvm.stackguard
llvm.stackprotector
llvm.stackrestore
llvm.stacksave
llvm.thread.pointer
llvm.trap
llvm.trunc
llvm.type.checked.load
llvm.type.test
llvm.uadd.with.overflow
llvm.umul.with.overflow
llvm.usub.with.overflow
llvm.va_copy
llvm.va_end
llvm.va_start
llvm.var.annotation
llvm.write_register
llvm.xray.customevent
llvm.aarch64.clrex
llvm.aarch64.crc32b
llvm.aarch64.crc32cb
llvm.aarch64.crc32ch
llvm.aarch64.crc32cw
llvm.aarch64.crc32cx
llvm.aarch64.crc32h
llvm.aarch64.crc32w
llvm.aarch64.crc32x
llvm.aarch64.crypto.aesd
llvm.aarch64.crypto.aese
llvm.aarch64.crypto.aesimc
llvm.aarch64.crypto.aesmc
llvm.aarch64.crypto.sha1c
llvm.aarch64.crypto.sha1h
llvm.aarch64.crypto.sha1m
llvm.aarch64.crypto.sha1p
llvm.aarch64.crypto.sha1su0
llvm.aarch64.crypto.sha1su1
llvm.aarch64.crypto.sha256h
llvm.aarch64.crypto.sha256h2
llvm.aarch64.crypto.sha256su0
llvm.aarch64.crypto.sha256su1
llvm.aarch64.dmb
llvm.aarch64.dsb
llvm.aarch64.hint
llvm.aarch64.isb
llvm.aarch64.ldaxp
llvm.aarch64.ldaxr
llvm.aarch64.ldxp
llvm.aarch64.ldxr
llvm.aarch64.neon.abs
llvm.aarch64.neon.addhn
llvm.aarch64.neon.addp
llvm.aarch64.neon.cls
llvm.aarch64.neon.fabd
llvm.aarch64.neon.facge
llvm.aarch64.neon.facgt
llvm.aarch64.neon.faddv
llvm.aarch64.neon.fcvtas
llvm.aarch64.neon.fcvtau
llvm.aarch64.neon.fcvtms
llvm.aarch64.neon.fcvtmu
llvm.aarch64.neon.fcvtns
llvm.aarch64.neon.fcvtnu
llvm.aarch64.neon.fcvtps
llvm.aarch64.neon.fcvtpu
llvm.aarch64.neon.fcvtxn
llvm.aarch64.neon.fcvtzs
llvm.aarch64.neon.fcvtzu
llvm.aarch64.neon.fmax
llvm.aarch64.neon.fmaxnm
llvm.aarch64.neon.fmaxnmp
llvm.aarch64.neon.fmaxnmv
llvm.aarch64.neon.fmaxp
llvm.aarch64.neon.fmaxv
llvm.aarch64.neon.fmin
llvm.aarch64.neon.fminnm
llvm.aarch64.neon.fminnmp
llvm.aarch64.neon.fminnmv
llvm.aarch64.neon.fminp
llvm.aarch64.neon.fminv
llvm.aarch64.neon.fmulx
llvm.aarch64.neon.frecpe
llvm.aarch64.neon.frecps
llvm.aarch64.neon.frecpx
llvm.aarch64.neon.frintn
llvm.aarch64.neon.frsqrte
llvm.aarch64.neon.frsqrts
llvm.aarch64.neon.ld1x2
llvm.aarch64.neon.ld1x3
llvm.aarch64.neon.ld1x4
llvm.aarch64.neon.ld2
llvm.aarch64.neon.ld2lane
llvm.aarch64.neon.ld2r
llvm.aarch64.neon.ld3
llvm.aarch64.neon.ld3lane
llvm.aarch64.neon.ld3r
llvm.aarch64.neon.ld4
llvm.aarch64.neon.ld4lane
llvm.aarch64.neon.ld4r
llvm.aarch64.neon.pmul
llvm.aarch64.neon.pmull
llvm.aarch64.neon.pmull64
llvm.aarch64.neon.raddhn
llvm.aarch64.neon.rbit
llvm.aarch64.neon.rshrn
llvm.aarch64.neon.rsubhn
llvm.aarch64.neon.sabd
llvm.aarch64.neon.saddlp
llvm.aarch64.neon.saddlv
llvm.aarch64.neon.saddv
llvm.aarch64.neon.scalar.sqxtn
llvm.aarch64.neon.scalar.sqxtun
llvm.aarch64.neon.scalar.uqxtn
llvm.aarch64.neon.shadd
llvm.aarch64.neon.shll
llvm.aarch64.neon.shsub
llvm.aarch64.neon.smax
llvm.aarch64.neon.smaxp
llvm.aarch64.neon.smaxv
llvm.aarch64.neon.smin
llvm.aarch64.neon.sminp
llvm.aarch64.neon.sminv
llvm.aarch64.neon.smull
llvm.aarch64.neon.sqabs
llvm.aarch64.neon.sqadd
llvm.aarch64.neon.sqdmulh
llvm.aarch64.neon.sqdmull
llvm.aarch64.neon.sqdmulls.scalar
llvm.aarch64.neon.sqneg
llvm.aarch64.neon.sqrdmulh
llvm.aarch64.neon.sqrshl
llvm.aarch64.neon.sqrshrn
llvm.aarch64.neon.sqrshrun
llvm.aarch64.neon.sqshl
llvm.aarch64.neon.sqshlu
llvm.aarch64.neon.sqshrn
llvm.aarch64.neon.sqshrun
llvm.aarch64.neon.sqsub
llvm.aarch64.neon.sqxtn
llvm.aarch64.neon.sqxtun
llvm.aarch64.neon.srhadd
llvm.aarch64.neon.srshl
llvm.aarch64.neon.sshl
llvm.aarch64.neon.sshll
llvm.aarch64.neon.st1x2
llvm.aarch64.neon.st1x3
llvm.aarch64.neon.st1x4
llvm.aarch64.neon.st2
llvm.aarch64.neon.st2lane
llvm.aarch64.neon.st3
llvm.aarch64.neon.st3lane
llvm.aarch64.neon.st4
llvm.aarch64.neon.st4lane
llvm.aarch64.neon.subhn
llvm.aarch64.neon.suqadd
llvm.aarch64.neon.tbl1
llvm.aarch64.neon.tbl2
llvm.aarch64.neon.tbl3
llvm.aarch64.neon.tbl4
llvm.aarch64.neon.tbx1
llvm.aarch64.neon.tbx2
llvm.aarch64.neon.tbx3
llvm.aarch64.neon.tbx4
llvm.aarch64.neon.uabd
llvm.aarch64.neon.uaddlp
llvm.aarch64.neon.uaddlv
llvm.aarch64.neon.uaddv
llvm.aarch64.neon.uhadd
llvm.aarch64.neon.uhsub
llvm.aarch64.neon.umax
llvm.aarch64.neon.umaxp
llvm.aarch64.neon.umaxv
llvm.aarch64.neon.umin
llvm.aarch64.neon.uminp
llvm.aarch64.neon.uminv
llvm.aarch64.neon.umull
llvm.aarch64.neon.uqadd
llvm.aarch64.neon.uqrshl
llvm.aarch64.neon.uqrshrn
llvm.aarch64.neon.uqshl
llvm.aarch64.neon.uqshrn
llvm.aarch64.neon.uqsub
llvm.aarch64.neon.uqxtn
llvm.aarch64.neon.urecpe
llvm.aarch64.neon.urhadd
llvm.aarch64.neon.urshl
llvm.aarch64.neon.ursqrte
llvm.aarch64.neon.ushl
llvm.aarch64.neon.ushll
llvm.aarch64.neon.usqadd
llvm.aarch64.neon.vcopy.lane
llvm.aarch64.neon.vcvtfp2fxs
llvm.aarch64.neon.vcvtfp2fxu
llvm.aarch64.neon.vcvtfp2hf
llvm.aarch64.neon.vcvtfxs2fp
llvm.aarch64.neon.vcvtfxu2fp
llvm.aarch64.neon.vcvthf2fp
llvm.aarch64.neon.vsli
llvm.aarch64.neon.vsri
llvm.aarch64.sdiv
llvm.aarch64.sisd.fabd
llvm.aarch64.sisd.fcvtxn
llvm.aarch64.stlxp
llvm.aarch64.stlxr
llvm.aarch64.stxp
llvm.aarch64.stxr
llvm.aarch64.udiv
llvm.amdgcn.alignbit
llvm.amdgcn.alignbyte
llvm.amdgcn.atomic.dec
llvm.amdgcn.atomic.inc
llvm.amdgcn.break
llvm.amdgcn.buffer.atomic.add
llvm.amdgcn.buffer.atomic.and
llvm.amdgcn.buffer.atomic.cmpswap
llvm.amdgcn.buffer.atomic.or
llvm.amdgcn.buffer.atomic.smax
llvm.amdgcn.buffer.atomic.smin
llvm.amdgcn.buffer.atomic.sub
llvm.amdgcn.buffer.atomic.swap
llvm.amdgcn.buffer.atomic.umax
llvm.amdgcn.buffer.atomic.umin
llvm.amdgcn.buffer.atomic.xor
llvm.amdgcn.buffer.load
llvm.amdgcn.buffer.load.format
llvm.amdgcn.buffer.store
llvm.amdgcn.buffer.store.format
llvm.amdgcn.buffer.wbinvl1
llvm.amdgcn.buffer.wbinvl1.sc
llvm.amdgcn.buffer.wbinvl1.vol
llvm.amdgcn.class
llvm.amdgcn.cos
llvm.amdgcn.cubeid
llvm.amdgcn.cubema
llvm.amdgcn.cubesc
llvm.amdgcn.cubetc
llvm.amdgcn.cvt.pk.u8.f32
llvm.amdgcn.cvt.pkrtz
llvm.amdgcn.dispatch.id
llvm.amdgcn.dispatch.ptr
llvm.amdgcn.div.fixup
llvm.amdgcn.div.fmas
llvm.amdgcn.div.scale
llvm.amdgcn.ds.bpermute
llvm.amdgcn.ds.permute
llvm.amdgcn.ds.swizzle
llvm.amdgcn.else
llvm.amdgcn.else.break
llvm.amdgcn.end.cf
llvm.amdgcn.exp
llvm.amdgcn.exp.compr
llvm.amdgcn.fcmp
llvm.amdgcn.fdiv.fast
llvm.amdgcn.fmed3
llvm.amdgcn.fmul.legacy
llvm.amdgcn.fract
llvm.amdgcn.frexp.exp
llvm.amdgcn.frexp.mant
llvm.amdgcn.groupstaticsize
llvm.amdgcn.icmp
llvm.amdgcn.if
llvm.amdgcn.if.break
llvm.amdgcn.image.atomic.add
llvm.amdgcn.image.atomic.and
llvm.amdgcn.image.atomic.cmpswap
llvm.amdgcn.image.atomic.dec
llvm.amdgcn.image.atomic.inc
llvm.amdgcn.image.atomic.or
llvm.amdgcn.image.atomic.smax
llvm.amdgcn.image.atomic.smin
llvm.amdgcn.image.atomic.sub
llvm.amdgcn.image.atomic.swap
llvm.amdgcn.image.atomic.umax
llvm.amdgcn.image.atomic.umin
llvm.amdgcn.image.atomic.xor
llvm.amdgcn.image.gather4
llvm.amdgcn.image.gather4.b
llvm.amdgcn.image.gather4.b.cl
llvm.amdgcn.image.gather4.b.cl.o
llvm.amdgcn.image.gather4.b.o
llvm.amdgcn.image.gather4.c
llvm.amdgcn.image.gather4.c.b
llvm.amdgcn.image.gather4.c.b.cl
llvm.amdgcn.image.gather4.c.b.cl.o
llvm.amdgcn.image.gather4.c.b.o
llvm.amdgcn.image.gather4.c.cl
llvm.amdgcn.image.gather4.c.cl.o
llvm.amdgcn.image.gather4.c.l
llvm.amdgcn.image.gather4.c.l.o
llvm.amdgcn.image.gather4.c.lz
llvm.amdgcn.image.gather4.c.lz.o
llvm.amdgcn.image.gather4.c.o
llvm.amdgcn.image.gather4.cl
llvm.amdgcn.image.gather4.cl.o
llvm.amdgcn.image.gather4.l
llvm.amdgcn.image.gather4.l.o
llvm.amdgcn.image.gather4.lz
llvm.amdgcn.image.gather4.lz.o
llvm.amdgcn.image.gather4.o
llvm.amdgcn.image.getlod
llvm.amdgcn.image.getresinfo
llvm.amdgcn.image.load
llvm.amdgcn.image.load.mip
llvm.amdgcn.image.sample
llvm.amdgcn.image.sample.b
llvm.amdgcn.image.sample.b.cl
llvm.amdgcn.image.sample.b.cl.o
llvm.amdgcn.image.sample.b.o
llvm.amdgcn.image.sample.c
llvm.amdgcn.image.sample.c.b
llvm.amdgcn.image.sample.c.b.cl
llvm.amdgcn.image.sample.c.b.cl.o
llvm.amdgcn.image.sample.c.b.o
llvm.amdgcn.image.sample.c.cd
llvm.amdgcn.image.sample.c.cd.cl
llvm.amdgcn.image.sample.c.cd.cl.o
llvm.amdgcn.image.sample.c.cd.o
llvm.amdgcn.image.sample.c.cl
llvm.amdgcn.image.sample.c.cl.o
llvm.amdgcn.image.sample.c.d
llvm.amdgcn.image.sample.c.d.cl
llvm.amdgcn.image.sample.c.d.cl.o
llvm.amdgcn.image.sample.c.d.o
llvm.amdgcn.image.sample.c.l
llvm.amdgcn.image.sample.c.l.o
llvm.amdgcn.image.sample.c.lz
llvm.amdgcn.image.sample.c.lz.o
llvm.amdgcn.image.sample.c.o
llvm.amdgcn.image.sample.cd
llvm.amdgcn.image.sample.cd.cl
llvm.amdgcn.image.sample.cd.cl.o
llvm.amdgcn.image.sample.cd.o
llvm.amdgcn.image.sample.cl
llvm.amdgcn.image.sample.cl.o
llvm.amdgcn.image.sample.d
llvm.amdgcn.image.sample.d.cl
llvm.amdgcn.image.sample.d.cl.o
llvm.amdgcn.image.sample.d.o
llvm.amdgcn.image.sample.l
llvm.amdgcn.image.sample.l.o
llvm.amdgcn.image.sample.lz
llvm.amdgcn.image.sample.lz.o
llvm.amdgcn.image.sample.o
llvm.amdgcn.image.store
llvm.amdgcn.image.store.mip
llvm.amdgcn.implicit.buffer.ptr
llvm.amdgcn.implicitarg.ptr
llvm.amdgcn.init.exec
llvm.amdgcn.init.exec.from.input
llvm.amdgcn.interp.mov
llvm.amdgcn.interp.p1
llvm.amdgcn.interp.p2
llvm.amdgcn.kernarg.segment.ptr
llvm.amdgcn.ldexp
llvm.amdgcn.lerp
llvm.amdgcn.log.clamp
llvm.amdgcn.loop
llvm.amdgcn.mbcnt.hi
llvm.amdgcn.mbcnt.lo
llvm.amdgcn.mov.dpp
llvm.amdgcn.mqsad.pk.u16.u8
llvm.amdgcn.mqsad.u32.u8
llvm.amdgcn.msad.u8
llvm.amdgcn.ps.live
llvm.amdgcn.qsad.pk.u16.u8
llvm.amdgcn.queue.ptr
llvm.amdgcn.rcp
llvm.amdgcn.rcp.legacy
llvm.amdgcn.readfirstlane
llvm.amdgcn.readlane
llvm.amdgcn.rsq
llvm.amdgcn.rsq.clamp
llvm.amdgcn.rsq.legacy
llvm.amdgcn.s.barrier
llvm.amdgcn.s.dcache.inv
llvm.amdgcn.s.dcache.inv.vol
llvm.amdgcn.s.dcache.wb
llvm.amdgcn.s.dcache.wb.vol
llvm.amdgcn.s.decperflevel
llvm.amdgcn.s.getpc
llvm.amdgcn.s.getreg
llvm.amdgcn.s.incperflevel
llvm.amdgcn.s.memrealtime
llvm.amdgcn.s.memtime
llvm.amdgcn.s.sendmsg
llvm.amdgcn.s.sendmsghalt
llvm.amdgcn.s.sleep
llvm.amdgcn.s.waitcnt
llvm.amdgcn.sad.hi.u8
llvm.amdgcn.sad.u16
llvm.amdgcn.sad.u8
llvm.amdgcn.sbfe
llvm.amdgcn.sffbh
llvm.amdgcn.sin
llvm.amdgcn.tbuffer.load
llvm.amdgcn.tbuffer.store
llvm.amdgcn.trig.preop
llvm.amdgcn.ubfe
llvm.amdgcn.unreachable
llvm.amdgcn.wave.barrier
llvm.amdgcn.workgroup.id.x
llvm.amdgcn.workgroup.id.y
llvm.amdgcn.workgroup.id.z
llvm.amdgcn.workitem.id.x
llvm.amdgcn.workitem.id.y
llvm.amdgcn.workitem.id.z
llvm.arm.cdp
llvm.arm.cdp2
llvm.arm.clrex
llvm.arm.crc32b
llvm.arm.crc32cb
llvm.arm.crc32ch
llvm.arm.crc32cw
llvm.arm.crc32h
llvm.arm.crc32w
llvm.arm.dbg
llvm.arm.dmb
llvm.arm.dsb
llvm.arm.get.fpscr
llvm.arm.hint
llvm.arm.isb
llvm.arm.ldaex
llvm.arm.ldaexd
llvm.arm.ldc
llvm.arm.ldc2
llvm.arm.ldc2l
llvm.arm.ldcl
llvm.arm.ldrex
llvm.arm.ldrexd
llvm.arm.mcr
llvm.arm.mcr2
llvm.arm.mcrr
llvm.arm.mcrr2
llvm.arm.mrc
llvm.arm.mrc2
llvm.arm.mrrc
llvm.arm.mrrc2
llvm.arm.neon.aesd
llvm.arm.neon.aese
llvm.arm.neon.aesimc
llvm.arm.neon.aesmc
llvm.arm.neon.sha1c
llvm.arm.neon.sha1h
llvm.arm.neon.sha1m
llvm.arm.neon.sha1p
llvm.arm.neon.sha1su0
llvm.arm.neon.sha1su1
llvm.arm.neon.sha256h
llvm.arm.neon.sha256h2
llvm.arm.neon.sha256su0
llvm.arm.neon.sha256su1
llvm.arm.neon.vabds
llvm.arm.neon.vabdu
llvm.arm.neon.vabs
llvm.arm.neon.vacge
llvm.arm.neon.vacgt
llvm.arm.neon.vbsl
llvm.arm.neon.vcls
llvm.arm.neon.vcvtas
llvm.arm.neon.vcvtau
llvm.arm.neon.vcvtfp2fxs
llvm.arm.neon.vcvtfp2fxu
llvm.arm.neon.vcvtfp2hf
llvm.arm.neon.vcvtfxs2fp
llvm.arm.neon.vcvtfxu2fp
llvm.arm.neon.vcvthf2fp
llvm.arm.neon.vcvtms
llvm.arm.neon.vcvtmu
llvm.arm.neon.vcvtns
llvm.arm.neon.vcvtnu
llvm.arm.neon.vcvtps
llvm.arm.neon.vcvtpu
llvm.arm.neon.vhadds
llvm.arm.neon.vhaddu
llvm.arm.neon.vhsubs
llvm.arm.neon.vhsubu
llvm.arm.neon.vld1
llvm.arm.neon.vld2
llvm.arm.neon.vld2lane
llvm.arm.neon.vld3
llvm.arm.neon.vld3lane
llvm.arm.neon.vld4
llvm.arm.neon.vld4lane
llvm.arm.neon.vmaxnm
llvm.arm.neon.vmaxs
llvm.arm.neon.vmaxu
llvm.arm.neon.vminnm
llvm.arm.neon.vmins
llvm.arm.neon.vminu
llvm.arm.neon.vmullp
llvm.arm.neon.vmulls
llvm.arm.neon.vmullu
llvm.arm.neon.vmulp
llvm.arm.neon.vpadals
llvm.arm.neon.vpadalu
llvm.arm.neon.vpadd
llvm.arm.neon.vpaddls
llvm.arm.neon.vpaddlu
llvm.arm.neon.vpmaxs
llvm.arm.neon.vpmaxu
llvm.arm.neon.vpmins
llvm.arm.neon.vpminu
llvm.arm.neon.vqabs
llvm.arm.neon.vqadds
llvm.arm.neon.vqaddu
llvm.arm.neon.vqdmulh
llvm.arm.neon.vqdmull
llvm.arm.neon.vqmovns
llvm.arm.neon.vqmovnsu
llvm.arm.neon.vqmovnu
llvm.arm.neon.vqneg
llvm.arm.neon.vqrdmulh
llvm.arm.neon.vqrshiftns
llvm.arm.neon.vqrshiftnsu
llvm.arm.neon.vqrshiftnu
llvm.arm.neon.vqrshifts
llvm.arm.neon.vqrshiftu
llvm.arm.neon.vqshiftns
llvm.arm.neon.vqshiftnsu
llvm.arm.neon.vqshiftnu
llvm.arm.neon.vqshifts
llvm.arm.neon.vqshiftsu
llvm.arm.neon.vqshiftu
llvm.arm.neon.vqsubs
llvm.arm.neon.vqsubu
llvm.arm.neon.vraddhn
llvm.arm.neon.vrecpe
llvm.arm.neon.vrecps
llvm.arm.neon.vrhadds
llvm.arm.neon.vrhaddu
llvm.arm.neon.vrinta
llvm.arm.neon.vrintm
llvm.arm.neon.vrintn
llvm.arm.neon.vrintp
llvm.arm.neon.vrintx
llvm.arm.neon.vrintz
llvm.arm.neon.vrshiftn
llvm.arm.neon.vrshifts
llvm.arm.neon.vrshiftu
llvm.arm.neon.vrsqrte
llvm.arm.neon.vrsqrts
llvm.arm.neon.vrsubhn
llvm.arm.neon.vshiftins
llvm.arm.neon.vshifts
llvm.arm.neon.vshiftu
llvm.arm.neon.vst1
llvm.arm.neon.vst2
llvm.arm.neon.vst2lane
llvm.arm.neon.vst3
llvm.arm.neon.vst3lane
llvm.arm.neon.vst4
llvm.arm.neon.vst4lane
llvm.arm.neon.vtbl1
llvm.arm.neon.vtbl2
llvm.arm.neon.vtbl3
llvm.arm.neon.vtbl4
llvm.arm.neon.vtbx1
llvm.arm.neon.vtbx2
llvm.arm.neon.vtbx3
llvm.arm.neon.vtbx4
llvm.arm.qadd
llvm.arm.qadd16
llvm.arm.qadd8
llvm.arm.qasx
llvm.arm.qsax
llvm.arm.qsub
llvm.arm.qsub16
llvm.arm.qsub8
llvm.arm.sadd16
llvm.arm.sadd8
llvm.arm.sasx
llvm.arm.sel
llvm.arm.set.fpscr
llvm.arm.shadd16
llvm.arm.shadd8
llvm.arm.shasx
llvm.arm.shsax
llvm.arm.shsub16
llvm.arm.shsub8
llvm.arm.smlabb
llvm.arm.smlabt
llvm.arm.smlad
llvm.arm.smladx
llvm.arm.smlald
llvm.arm.smlaldx
llvm.arm.smlatb
llvm.arm.smlatt
llvm.arm.smlawb
llvm.arm.smlawt
llvm.arm.smlsd
llvm.arm.smlsdx
llvm.arm.smlsld
llvm.arm.smlsldx
llvm.arm.smuad
llvm.arm.smuadx
llvm.arm.smulbb
llvm.arm.smulbt
llvm.arm.smultb
llvm.arm.smultt
llvm.arm.smulwb
llvm.arm.smulwt
llvm.arm.smusd
llvm.arm.smusdx
llvm.arm.space
llvm.arm.ssat
llvm.arm.ssat16
llvm.arm.ssax
llvm.arm.ssub16
llvm.arm.ssub8
llvm.arm.stc
llvm.arm.stc2
llvm.arm.stc2l
llvm.arm.stcl
llvm.arm.stlex
llvm.arm.stlexd
llvm.arm.strex
llvm.arm.strexd
llvm.arm.sxtab16
llvm.arm.sxtb16
llvm.arm.uadd16
llvm.arm.uadd8
llvm.arm.uasx
llvm.arm.uhadd16
llvm.arm.uhadd8
llvm.arm.uhasx
llvm.arm.uhsax
llvm.arm.uhsub16
llvm.arm.uhsub8
llvm.arm.undefined
llvm.arm.uqadd16
llvm.arm.uqadd8
llvm.arm.uqasx
llvm.arm.uqsax
llvm.arm.uqsub16
llvm.arm.uqsub8
llvm.arm.usad8
llvm.arm.usada8
llvm.arm.usat
llvm.arm.usat16
llvm.arm.usax
llvm.arm.usub16
llvm.arm.usub8
llvm.arm.uxtab16
llvm.arm.uxtb16
llvm.arm.vcvtr
llvm.arm.vcvtru
llvm.bpf.load.byte
llvm.bpf.load.half
llvm.bpf.load.word
llvm.bpf.pseudo
llvm.hexagon.A2.abs
llvm.hexagon.A2.absp
llvm.hexagon.A2.abssat
llvm.hexagon.A2.add
llvm.hexagon.A2.addh.h16.hh
llvm.hexagon.A2.addh.h16.hl
llvm.hexagon.A2.addh.h16.lh
llvm.hexagon.A2.addh.h16.ll
llvm.hexagon.A2.addh.h16.sat.hh
llvm.hexagon.A2.addh.h16.sat.hl
llvm.hexagon.A2.addh.h16.sat.lh
llvm.hexagon.A2.addh.h16.sat.ll
llvm.hexagon.A2.addh.l16.hl
llvm.hexagon.A2.addh.l16.ll
llvm.hexagon.A2.addh.l16.sat.hl
llvm.hexagon.A2.addh.l16.sat.ll
llvm.hexagon.A2.addi
llvm.hexagon.A2.addp
llvm.hexagon.A2.addpsat
llvm.hexagon.A2.addsat
llvm.hexagon.A2.addsp
llvm.hexagon.A2.and
llvm.hexagon.A2.andir
llvm.hexagon.A2.andp
llvm.hexagon.A2.aslh
llvm.hexagon.A2.asrh
llvm.hexagon.A2.combine.hh
llvm.hexagon.A2.combine.hl
llvm.hexagon.A2.combine.lh
llvm.hexagon.A2.combine.ll
llvm.hexagon.A2.combineii
llvm.hexagon.A2.combinew
llvm.hexagon.A2.max
llvm.hexagon.A2.maxp
llvm.hexagon.A2.maxu
llvm.hexagon.A2.maxup
llvm.hexagon.A2.min
llvm.hexagon.A2.minp
llvm.hexagon.A2.minu
llvm.hexagon.A2.minup
llvm.hexagon.A2.neg
llvm.hexagon.A2.negp
llvm.hexagon.A2.negsat
llvm.hexagon.A2.not
llvm.hexagon.A2.notp
llvm.hexagon.A2.or
llvm.hexagon.A2.orir
llvm.hexagon.A2.orp
llvm.hexagon.A2.roundsat
llvm.hexagon.A2.sat
llvm.hexagon.A2.satb
llvm.hexagon.A2.sath
llvm.hexagon.A2.satub
llvm.hexagon.A2.satuh
llvm.hexagon.A2.sub
llvm.hexagon.A2.subh.h16.hh
llvm.hexagon.A2.subh.h16.hl
llvm.hexagon.A2.subh.h16.lh
llvm.hexagon.A2.subh.h16.ll
llvm.hexagon.A2.subh.h16.sat.hh
llvm.hexagon.A2.subh.h16.sat.hl
llvm.hexagon.A2.subh.h16.sat.lh
llvm.hexagon.A2.subh.h16.sat.ll
llvm.hexagon.A2.subh.l16.hl
llvm.hexagon.A2.subh.l16.ll
llvm.hexagon.A2.subh.l16.sat.hl
llvm.hexagon.A2.subh.l16.sat.ll
llvm.hexagon.A2.subp
llvm.hexagon.A2.subri
llvm.hexagon.A2.subsat
llvm.hexagon.A2.svaddh
llvm.hexagon.A2.svaddhs
llvm.hexagon.A2.svadduhs
llvm.hexagon.A2.svavgh
llvm.hexagon.A2.svavghs
llvm.hexagon.A2.svnavgh
llvm.hexagon.A2.svsubh
llvm.hexagon.A2.svsubhs
llvm.hexagon.A2.svsubuhs
llvm.hexagon.A2.swiz
llvm.hexagon.A2.sxtb
llvm.hexagon.A2.sxth
llvm.hexagon.A2.sxtw
llvm.hexagon.A2.tfr
llvm.hexagon.A2.tfrih
llvm.hexagon.A2.tfril
llvm.hexagon.A2.tfrp
llvm.hexagon.A2.tfrpi
llvm.hexagon.A2.tfrsi
llvm.hexagon.A2.vabsh
llvm.hexagon.A2.vabshsat
llvm.hexagon.A2.vabsw
llvm.hexagon.A2.vabswsat
llvm.hexagon.A2.vaddb.map
llvm.hexagon.A2.vaddh
llvm.hexagon.A2.vaddhs
llvm.hexagon.A2.vaddub
llvm.hexagon.A2.vaddubs
llvm.hexagon.A2.vadduhs
llvm.hexagon.A2.vaddw
llvm.hexagon.A2.vaddws
llvm.hexagon.A2.vavgh
llvm.hexagon.A2.vavghcr
llvm.hexagon.A2.vavghr
llvm.hexagon.A2.vavgub
llvm.hexagon.A2.vavgubr
llvm.hexagon.A2.vavguh
llvm.hexagon.A2.vavguhr
llvm.hexagon.A2.vavguw
llvm.hexagon.A2.vavguwr
llvm.hexagon.A2.vavgw
llvm.hexagon.A2.vavgwcr
llvm.hexagon.A2.vavgwr
llvm.hexagon.A2.vcmpbeq
llvm.hexagon.A2.vcmpbgtu
llvm.hexagon.A2.vcmpheq
llvm.hexagon.A2.vcmphgt
llvm.hexagon.A2.vcmphgtu
llvm.hexagon.A2.vcmpweq
llvm.hexagon.A2.vcmpwgt
llvm.hexagon.A2.vcmpwgtu
llvm.hexagon.A2.vconj
llvm.hexagon.A2.vmaxb
llvm.hexagon.A2.vmaxh
llvm.hexagon.A2.vmaxub
llvm.hexagon.A2.vmaxuh
llvm.hexagon.A2.vmaxuw
llvm.hexagon.A2.vmaxw
llvm.hexagon.A2.vminb
llvm.hexagon.A2.vminh
llvm.hexagon.A2.vminub
llvm.hexagon.A2.vminuh
llvm.hexagon.A2.vminuw
llvm.hexagon.A2.vminw
llvm.hexagon.A2.vnavgh
llvm.hexagon.A2.vnavghcr
llvm.hexagon.A2.vnavghr
llvm.hexagon.A2.vnavgw
llvm.hexagon.A2.vnavgwcr
llvm.hexagon.A2.vnavgwr
llvm.hexagon.A2.vraddub
llvm.hexagon.A2.vraddub.acc
llvm.hexagon.A2.vrsadub
llvm.hexagon.A2.vrsadub.acc
llvm.hexagon.A2.vsubb.map
llvm.hexagon.A2.vsubh
llvm.hexagon.A2.vsubhs
llvm.hexagon.A2.vsubub
llvm.hexagon.A2.vsububs
llvm.hexagon.A2.vsubuhs
llvm.hexagon.A2.vsubw
llvm.hexagon.A2.vsubws
llvm.hexagon.A2.xor
llvm.hexagon.A2.xorp
llvm.hexagon.A2.zxtb
llvm.hexagon.A2.zxth
llvm.hexagon.A4.andn
llvm.hexagon.A4.andnp
llvm.hexagon.A4.bitsplit
llvm.hexagon.A4.bitspliti
llvm.hexagon.A4.boundscheck
llvm.hexagon.A4.cmpbeq
llvm.hexagon.A4.cmpbeqi
llvm.hexagon.A4.cmpbgt
llvm.hexagon.A4.cmpbgti
llvm.hexagon.A4.cmpbgtu
llvm.hexagon.A4.cmpbgtui
llvm.hexagon.A4.cmpheq
llvm.hexagon.A4.cmpheqi
llvm.hexagon.A4.cmphgt
llvm.hexagon.A4.cmphgti
llvm.hexagon.A4.cmphgtu
llvm.hexagon.A4.cmphgtui
llvm.hexagon.A4.combineir
llvm.hexagon.A4.combineri
llvm.hexagon.A4.cround.ri
llvm.hexagon.A4.cround.rr
llvm.hexagon.A4.modwrapu
llvm.hexagon.A4.orn
llvm.hexagon.A4.ornp
llvm.hexagon.A4.rcmpeq
llvm.hexagon.A4.rcmpeqi
llvm.hexagon.A4.rcmpneq
llvm.hexagon.A4.rcmpneqi
llvm.hexagon.A4.round.ri
llvm.hexagon.A4.round.ri.sat
llvm.hexagon.A4.round.rr
llvm.hexagon.A4.round.rr.sat
llvm.hexagon.A4.tlbmatch
llvm.hexagon.A4.vcmpbeq.any
llvm.hexagon.A4.vcmpbeqi
llvm.hexagon.A4.vcmpbgt
llvm.hexagon.A4.vcmpbgti
llvm.hexagon.A4.vcmpbgtui
llvm.hexagon.A4.vcmpheqi
llvm.hexagon.A4.vcmphgti
llvm.hexagon.A4.vcmphgtui
llvm.hexagon.A4.vcmpweqi
llvm.hexagon.A4.vcmpwgti
llvm.hexagon.A4.vcmpwgtui
llvm.hexagon.A4.vrmaxh
llvm.hexagon.A4.vrmaxuh
llvm.hexagon.A4.vrmaxuw
llvm.hexagon.A4.vrmaxw
llvm.hexagon.A4.vrminh
llvm.hexagon.A4.vrminuh
llvm.hexagon.A4.vrminuw
llvm.hexagon.A4.vrminw
llvm.hexagon.A5.vaddhubs
llvm.hexagon.C2.all8
llvm.hexagon.C2.and
llvm.hexagon.C2.andn
llvm.hexagon.C2.any8
llvm.hexagon.C2.bitsclr
llvm.hexagon.C2.bitsclri
llvm.hexagon.C2.bitsset
llvm.hexagon.C2.cmpeq
llvm.hexagon.C2.cmpeqi
llvm.hexagon.C2.cmpeqp
llvm.hexagon.C2.cmpgei
llvm.hexagon.C2.cmpgeui
llvm.hexagon.C2.cmpgt
llvm.hexagon.C2.cmpgti
llvm.hexagon.C2.cmpgtp
llvm.hexagon.C2.cmpgtu
llvm.hexagon.C2.cmpgtui
llvm.hexagon.C2.cmpgtup
llvm.hexagon.C2.cmplt
llvm.hexagon.C2.cmpltu
llvm.hexagon.C2.mask
llvm.hexagon.C2.mux
llvm.hexagon.C2.muxii
llvm.hexagon.C2.muxir
llvm.hexagon.C2.muxri
llvm.hexagon.C2.not
llvm.hexagon.C2.or
llvm.hexagon.C2.orn
llvm.hexagon.C2.pxfer.map
llvm.hexagon.C2.tfrpr
llvm.hexagon.C2.tfrrp
llvm.hexagon.C2.vitpack
llvm.hexagon.C2.vmux
llvm.hexagon.C2.xor
llvm.hexagon.C4.and.and
llvm.hexagon.C4.and.andn
llvm.hexagon.C4.and.or
llvm.hexagon.C4.and.orn
llvm.hexagon.C4.cmplte
llvm.hexagon.C4.cmpltei
llvm.hexagon.C4.cmplteu
llvm.hexagon.C4.cmplteui
llvm.hexagon.C4.cmpneq
llvm.hexagon.C4.cmpneqi
llvm.hexagon.C4.fastcorner9
llvm.hexagon.C4.fastcorner9.not
llvm.hexagon.C4.nbitsclr
llvm.hexagon.C4.nbitsclri
llvm.hexagon.C4.nbitsset
llvm.hexagon.C4.or.and
llvm.hexagon.C4.or.andn
llvm.hexagon.C4.or.or
llvm.hexagon.C4.or.orn
llvm.hexagon.F2.conv.d2df
llvm.hexagon.F2.conv.d2sf
llvm.hexagon.F2.conv.df2d
llvm.hexagon.F2.conv.df2d.chop
llvm.hexagon.F2.conv.df2sf
llvm.hexagon.F2.conv.df2ud
llvm.hexagon.F2.conv.df2ud.chop
llvm.hexagon.F2.conv.df2uw
llvm.hexagon.F2.conv.df2uw.chop
llvm.hexagon.F2.conv.df2w
llvm.hexagon.F2.conv.df2w.chop
llvm.hexagon.F2.conv.sf2d
llvm.hexagon.F2.conv.sf2d.chop
llvm.hexagon.F2.conv.sf2df
llvm.hexagon.F2.conv.sf2ud
llvm.hexagon.F2.conv.sf2ud.chop
llvm.hexagon.F2.conv.sf2uw
llvm.hexagon.F2.conv.sf2uw.chop
llvm.hexagon.F2.conv.sf2w
llvm.hexagon.F2.conv.sf2w.chop
llvm.hexagon.F2.conv.ud2df
llvm.hexagon.F2.conv.ud2sf
llvm.hexagon.F2.conv.uw2df
llvm.hexagon.F2.conv.uw2sf
llvm.hexagon.F2.conv.w2df
llvm.hexagon.F2.conv.w2sf
llvm.hexagon.F2.dfclass
llvm.hexagon.F2.dfcmpeq
llvm.hexagon.F2.dfcmpge
llvm.hexagon.F2.dfcmpgt
llvm.hexagon.F2.dfcmpuo
llvm.hexagon.F2.dfimm.n
llvm.hexagon.F2.dfimm.p
llvm.hexagon.F2.sfadd
llvm.hexagon.F2.sfclass
llvm.hexagon.F2.sfcmpeq
llvm.hexagon.F2.sfcmpge
llvm.hexagon.F2.sfcmpgt
llvm.hexagon.F2.sfcmpuo
llvm.hexagon.F2.sffixupd
llvm.hexagon.F2.sffixupn
llvm.hexagon.F2.sffixupr
llvm.hexagon.F2.sffma
llvm.hexagon.F2.sffma.lib
llvm.hexagon.F2.sffma.sc
llvm.hexagon.F2.sffms
llvm.hexagon.F2.sffms.lib
llvm.hexagon.F2.sfimm.n
llvm.hexagon.F2.sfimm.p
llvm.hexagon.F2.sfmax
llvm.hexagon.F2.sfmin
llvm.hexagon.F2.sfmpy
llvm.hexagon.F2.sfsub
llvm.hexagon.L2.loadw.locked
llvm.hexagon.L4.loadd.locked
llvm.hexagon.M2.acci
llvm.hexagon.M2.accii
llvm.hexagon.M2.cmaci.s0
llvm.hexagon.M2.cmacr.s0
llvm.hexagon.M2.cmacs.s0
llvm.hexagon.M2.cmacs.s1
llvm.hexagon.M2.cmacsc.s0
llvm.hexagon.M2.cmacsc.s1
llvm.hexagon.M2.cmpyi.s0
llvm.hexagon.M2.cmpyr.s0
llvm.hexagon.M2.cmpyrs.s0
llvm.hexagon.M2.cmpyrs.s1
llvm.hexagon.M2.cmpyrsc.s0
llvm.hexagon.M2.cmpyrsc.s1
llvm.hexagon.M2.cmpys.s0
llvm.hexagon.M2.cmpys.s1
llvm.hexagon.M2.cmpysc.s0
llvm.hexagon.M2.cmpysc.s1
llvm.hexagon.M2.cnacs.s0
llvm.hexagon.M2.cnacs.s1
llvm.hexagon.M2.cnacsc.s0
llvm.hexagon.M2.cnacsc.s1
llvm.hexagon.M2.dpmpyss.acc.s0
llvm.hexagon.M2.dpmpyss.nac.s0
llvm.hexagon.M2.dpmpyss.rnd.s0
llvm.hexagon.M2.dpmpyss.s0
llvm.hexagon.M2.dpmpyuu.acc.s0
llvm.hexagon.M2.dpmpyuu.nac.s0
llvm.hexagon.M2.dpmpyuu.s0
llvm.hexagon.M2.hmmpyh.rs1
llvm.hexagon.M2.hmmpyh.s1
llvm.hexagon.M2.hmmpyl.rs1
llvm.hexagon.M2.hmmpyl.s1
llvm.hexagon.M2.maci
llvm.hexagon.M2.macsin
llvm.hexagon.M2.macsip
llvm.hexagon.M2.mmachs.rs0
llvm.hexagon.M2.mmachs.rs1
llvm.hexagon.M2.mmachs.s0
llvm.hexagon.M2.mmachs.s1
llvm.hexagon.M2.mmacls.rs0
llvm.hexagon.M2.mmacls.rs1
llvm.hexagon.M2.mmacls.s0
llvm.hexagon.M2.mmacls.s1
llvm.hexagon.M2.mmacuhs.rs0
llvm.hexagon.M2.mmacuhs.rs1
llvm.hexagon.M2.mmacuhs.s0
llvm.hexagon.M2.mmacuhs.s1
llvm.hexagon.M2.mmaculs.rs0
llvm.hexagon.M2.mmaculs.rs1
llvm.hexagon.M2.mmaculs.s0
llvm.hexagon.M2.mmaculs.s1
llvm.hexagon.M2.mmpyh.rs0
llvm.hexagon.M2.mmpyh.rs1
llvm.hexagon.M2.mmpyh.s0
llvm.hexagon.M2.mmpyh.s1
llvm.hexagon.M2.mmpyl.rs0
llvm.hexagon.M2.mmpyl.rs1
llvm.hexagon.M2.mmpyl.s0
llvm.hexagon.M2.mmpyl.s1
llvm.hexagon.M2.mmpyuh.rs0
llvm.hexagon.M2.mmpyuh.rs1
llvm.hexagon.M2.mmpyuh.s0
llvm.hexagon.M2.mmpyuh.s1
llvm.hexagon.M2.mmpyul.rs0
llvm.hexagon.M2.mmpyul.rs1
llvm.hexagon.M2.mmpyul.s0
llvm.hexagon.M2.mmpyul.s1
llvm.hexagon.M2.mpy.acc.hh.s0
llvm.hexagon.M2.mpy.acc.hh.s1
llvm.hexagon.M2.mpy.acc.hl.s0
llvm.hexagon.M2.mpy.acc.hl.s1
llvm.hexagon.M2.mpy.acc.lh.s0
llvm.hexagon.M2.mpy.acc.lh.s1
llvm.hexagon.M2.mpy.acc.ll.s0
llvm.hexagon.M2.mpy.acc.ll.s1
llvm.hexagon.M2.mpy.acc.sat.hh.s0
llvm.hexagon.M2.mpy.acc.sat.hh.s1
llvm.hexagon.M2.mpy.acc.sat.hl.s0
llvm.hexagon.M2.mpy.acc.sat.hl.s1
llvm.hexagon.M2.mpy.acc.sat.lh.s0
llvm.hexagon.M2.mpy.acc.sat.lh.s1
llvm.hexagon.M2.mpy.acc.sat.ll.s0
llvm.hexagon.M2.mpy.acc.sat.ll.s1
llvm.hexagon.M2.mpy.hh.s0
llvm.hexagon.M2.mpy.hh.s1
llvm.hexagon.M2.mpy.hl.s0
llvm.hexagon.M2.mpy.hl.s1
llvm.hexagon.M2.mpy.lh.s0
llvm.hexagon.M2.mpy.lh.s1
llvm.hexagon.M2.mpy.ll.s0
llvm.hexagon.M2.mpy.ll.s1
llvm.hexagon.M2.mpy.nac.hh.s0
llvm.hexagon.M2.mpy.nac.hh.s1
llvm.hexagon.M2.mpy.nac.hl.s0
llvm.hexagon.M2.mpy.nac.hl.s1
llvm.hexagon.M2.mpy.nac.lh.s0
llvm.hexagon.M2.mpy.nac.lh.s1
llvm.hexagon.M2.mpy.nac.ll.s0
llvm.hexagon.M2.mpy.nac.ll.s1
llvm.hexagon.M2.mpy.nac.sat.hh.s0
llvm.hexagon.M2.mpy.nac.sat.hh.s1
llvm.hexagon.M2.mpy.nac.sat.hl.s0
llvm.hexagon.M2.mpy.nac.sat.hl.s1
llvm.hexagon.M2.mpy.nac.sat.lh.s0
llvm.hexagon.M2.mpy.nac.sat.lh.s1
llvm.hexagon.M2.mpy.nac.sat.ll.s0
llvm.hexagon.M2.mpy.nac.sat.ll.s1
llvm.hexagon.M2.mpy.rnd.hh.s0
llvm.hexagon.M2.mpy.rnd.hh.s1
llvm.hexagon.M2.mpy.rnd.hl.s0
llvm.hexagon.M2.mpy.rnd.hl.s1
llvm.hexagon.M2.mpy.rnd.lh.s0
llvm.hexagon.M2.mpy.rnd.lh.s1
llvm.hexagon.M2.mpy.rnd.ll.s0
llvm.hexagon.M2.mpy.rnd.ll.s1
llvm.hexagon.M2.mpy.sat.hh.s0
llvm.hexagon.M2.mpy.sat.hh.s1
llvm.hexagon.M2.mpy.sat.hl.s0
llvm.hexagon.M2.mpy.sat.hl.s1
llvm.hexagon.M2.mpy.sat.lh.s0
llvm.hexagon.M2.mpy.sat.lh.s1
llvm.hexagon.M2.mpy.sat.ll.s0
llvm.hexagon.M2.mpy.sat.ll.s1
llvm.hexagon.M2.mpy.sat.rnd.hh.s0
llvm.hexagon.M2.mpy.sat.rnd.hh.s1
llvm.hexagon.M2.mpy.sat.rnd.hl.s0
llvm.hexagon.M2.mpy.sat.rnd.hl.s1
llvm.hexagon.M2.mpy.sat.rnd.lh.s0
llvm.hexagon.M2.mpy.sat.rnd.lh.s1
llvm.hexagon.M2.mpy.sat.rnd.ll.s0
llvm.hexagon.M2.mpy.sat.rnd.ll.s1
llvm.hexagon.M2.mpy.up
llvm.hexagon.M2.mpy.up.s1
llvm.hexagon.M2.mpy.up.s1.sat
llvm.hexagon.M2.mpyd.acc.hh.s0
llvm.hexagon.M2.mpyd.acc.hh.s1
llvm.hexagon.M2.mpyd.acc.hl.s0
llvm.hexagon.M2.mpyd.acc.hl.s1
llvm.hexagon.M2.mpyd.acc.lh.s0
llvm.hexagon.M2.mpyd.acc.lh.s1
llvm.hexagon.M2.mpyd.acc.ll.s0
llvm.hexagon.M2.mpyd.acc.ll.s1
llvm.hexagon.M2.mpyd.hh.s0
llvm.hexagon.M2.mpyd.hh.s1
llvm.hexagon.M2.mpyd.hl.s0
llvm.hexagon.M2.mpyd.hl.s1
llvm.hexagon.M2.mpyd.lh.s0
llvm.hexagon.M2.mpyd.lh.s1
llvm.hexagon.M2.mpyd.ll.s0
llvm.hexagon.M2.mpyd.ll.s1
llvm.hexagon.M2.mpyd.nac.hh.s0
llvm.hexagon.M2.mpyd.nac.hh.s1
llvm.hexagon.M2.mpyd.nac.hl.s0
llvm.hexagon.M2.mpyd.nac.hl.s1
llvm.hexagon.M2.mpyd.nac.lh.s0
llvm.hexagon.M2.mpyd.nac.lh.s1
llvm.hexagon.M2.mpyd.nac.ll.s0
llvm.hexagon.M2.mpyd.nac.ll.s1
llvm.hexagon.M2.mpyd.rnd.hh.s0
llvm.hexagon.M2.mpyd.rnd.hh.s1
llvm.hexagon.M2.mpyd.rnd.hl.s0
llvm.hexagon.M2.mpyd.rnd.hl.s1
llvm.hexagon.M2.mpyd.rnd.lh.s0
llvm.hexagon.M2.mpyd.rnd.lh.s1
llvm.hexagon.M2.mpyd.rnd.ll.s0
llvm.hexagon.M2.mpyd.rnd.ll.s1
llvm.hexagon.M2.mpyi
llvm.hexagon.M2.mpysmi
llvm.hexagon.M2.mpysu.up
llvm.hexagon.M2.mpyu.acc.hh.s0
llvm.hexagon.M2.mpyu.acc.hh.s1
llvm.hexagon.M2.mpyu.acc.hl.s0
llvm.hexagon.M2.mpyu.acc.hl.s1
llvm.hexagon.M2.mpyu.acc.lh.s0
llvm.hexagon.M2.mpyu.acc.lh.s1
llvm.hexagon.M2.mpyu.acc.ll.s0
llvm.hexagon.M2.mpyu.acc.ll.s1
llvm.hexagon.M2.mpyu.hh.s0
llvm.hexagon.M2.mpyu.hh.s1
llvm.hexagon.M2.mpyu.hl.s0
llvm.hexagon.M2.mpyu.hl.s1
llvm.hexagon.M2.mpyu.lh.s0
llvm.hexagon.M2.mpyu.lh.s1
llvm.hexagon.M2.mpyu.ll.s0
llvm.hexagon.M2.mpyu.ll.s1
llvm.hexagon.M2.mpyu.nac.hh.s0
llvm.hexagon.M2.mpyu.nac.hh.s1
llvm.hexagon.M2.mpyu.nac.hl.s0
llvm.hexagon.M2.mpyu.nac.hl.s1
llvm.hexagon.M2.mpyu.nac.lh.s0
llvm.hexagon.M2.mpyu.nac.lh.s1
llvm.hexagon.M2.mpyu.nac.ll.s0
llvm.hexagon.M2.mpyu.nac.ll.s1
llvm.hexagon.M2.mpyu.up
llvm.hexagon.M2.mpyud.acc.hh.s0
llvm.hexagon.M2.mpyud.acc.hh.s1
llvm.hexagon.M2.mpyud.acc.hl.s0
llvm.hexagon.M2.mpyud.acc.hl.s1
llvm.hexagon.M2.mpyud.acc.lh.s0
llvm.hexagon.M2.mpyud.acc.lh.s1
llvm.hexagon.M2.mpyud.acc.ll.s0
llvm.hexagon.M2.mpyud.acc.ll.s1
llvm.hexagon.M2.mpyud.hh.s0
llvm.hexagon.M2.mpyud.hh.s1
llvm.hexagon.M2.mpyud.hl.s0
llvm.hexagon.M2.mpyud.hl.s1
llvm.hexagon.M2.mpyud.lh.s0
llvm.hexagon.M2.mpyud.lh.s1
llvm.hexagon.M2.mpyud.ll.s0
llvm.hexagon.M2.mpyud.ll.s1
llvm.hexagon.M2.mpyud.nac.hh.s0
llvm.hexagon.M2.mpyud.nac.hh.s1
llvm.hexagon.M2.mpyud.nac.hl.s0
llvm.hexagon.M2.mpyud.nac.hl.s1
llvm.hexagon.M2.mpyud.nac.lh.s0
llvm.hexagon.M2.mpyud.nac.lh.s1
llvm.hexagon.M2.mpyud.nac.ll.s0
llvm.hexagon.M2.mpyud.nac.ll.s1
llvm.hexagon.M2.mpyui
llvm.hexagon.M2.nacci
llvm.hexagon.M2.naccii
llvm.hexagon.M2.subacc
llvm.hexagon.M2.vabsdiffh
llvm.hexagon.M2.vabsdiffw
llvm.hexagon.M2.vcmac.s0.sat.i
llvm.hexagon.M2.vcmac.s0.sat.r
llvm.hexagon.M2.vcmpy.s0.sat.i
llvm.hexagon.M2.vcmpy.s0.sat.r
llvm.hexagon.M2.vcmpy.s1.sat.i
llvm.hexagon.M2.vcmpy.s1.sat.r
llvm.hexagon.M2.vdmacs.s0
llvm.hexagon.M2.vdmacs.s1
llvm.hexagon.M2.vdmpyrs.s0
llvm.hexagon.M2.vdmpyrs.s1
llvm.hexagon.M2.vdmpys.s0
llvm.hexagon.M2.vdmpys.s1
llvm.hexagon.M2.vmac2
llvm.hexagon.M2.vmac2es
llvm.hexagon.M2.vmac2es.s0
llvm.hexagon.M2.vmac2es.s1
llvm.hexagon.M2.vmac2s.s0
llvm.hexagon.M2.vmac2s.s1
llvm.hexagon.M2.vmac2su.s0
llvm.hexagon.M2.vmac2su.s1
llvm.hexagon.M2.vmpy2es.s0
llvm.hexagon.M2.vmpy2es.s1
llvm.hexagon.M2.vmpy2s.s0
llvm.hexagon.M2.vmpy2s.s0pack
llvm.hexagon.M2.vmpy2s.s1
llvm.hexagon.M2.vmpy2s.s1pack
llvm.hexagon.M2.vmpy2su.s0
llvm.hexagon.M2.vmpy2su.s1
llvm.hexagon.M2.vraddh
llvm.hexagon.M2.vradduh
llvm.hexagon.M2.vrcmaci.s0
llvm.hexagon.M2.vrcmaci.s0c
llvm.hexagon.M2.vrcmacr.s0
llvm.hexagon.M2.vrcmacr.s0c
llvm.hexagon.M2.vrcmpyi.s0
llvm.hexagon.M2.vrcmpyi.s0c
llvm.hexagon.M2.vrcmpyr.s0
llvm.hexagon.M2.vrcmpyr.s0c
llvm.hexagon.M2.vrcmpys.acc.s1
llvm.hexagon.M2.vrcmpys.s1
llvm.hexagon.M2.vrcmpys.s1rp
llvm.hexagon.M2.vrmac.s0
llvm.hexagon.M2.vrmpy.s0
llvm.hexagon.M2.xor.xacc
llvm.hexagon.M4.and.and
llvm.hexagon.M4.and.andn
llvm.hexagon.M4.and.or
llvm.hexagon.M4.and.xor
llvm.hexagon.M4.cmpyi.wh
llvm.hexagon.M4.cmpyi.whc
llvm.hexagon.M4.cmpyr.wh
llvm.hexagon.M4.cmpyr.whc
llvm.hexagon.M4.mac.up.s1.sat
llvm.hexagon.M4.mpyri.addi
llvm.hexagon.M4.mpyri.addr
llvm.hexagon.M4.mpyri.addr.u2
llvm.hexagon.M4.mpyrr.addi
llvm.hexagon.M4.mpyrr.addr
llvm.hexagon.M4.nac.up.s1.sat
llvm.hexagon.M4.or.and
llvm.hexagon.M4.or.andn
llvm.hexagon.M4.or.or
llvm.hexagon.M4.or.xor
llvm.hexagon.M4.pmpyw
llvm.hexagon.M4.pmpyw.acc
llvm.hexagon.M4.vpmpyh
llvm.hexagon.M4.vpmpyh.acc
llvm.hexagon.M4.vrmpyeh.acc.s0
llvm.hexagon.M4.vrmpyeh.acc.s1
llvm.hexagon.M4.vrmpyeh.s0
llvm.hexagon.M4.vrmpyeh.s1
llvm.hexagon.M4.vrmpyoh.acc.s0
llvm.hexagon.M4.vrmpyoh.acc.s1
llvm.hexagon.M4.vrmpyoh.s0
llvm.hexagon.M4.vrmpyoh.s1
llvm.hexagon.M4.xor.and
llvm.hexagon.M4.xor.andn
llvm.hexagon.M4.xor.or
llvm.hexagon.M4.xor.xacc
llvm.hexagon.M5.vdmacbsu
llvm.hexagon.M5.vdmpybsu
llvm.hexagon.M5.vmacbsu
llvm.hexagon.M5.vmacbuu
llvm.hexagon.M5.vmpybsu
llvm.hexagon.M5.vmpybuu
llvm.hexagon.M5.vrmacbsu
llvm.hexagon.M5.vrmacbuu
llvm.hexagon.M5.vrmpybsu
llvm.hexagon.M5.vrmpybuu
llvm.hexagon.M6.vabsdiffb
llvm.hexagon.M6.vabsdiffub
llvm.hexagon.S2.addasl.rrri
llvm.hexagon.S2.asl.i.p
llvm.hexagon.S2.asl.i.p.acc
llvm.hexagon.S2.asl.i.p.and
llvm.hexagon.S2.asl.i.p.nac
llvm.hexagon.S2.asl.i.p.or
llvm.hexagon.S2.asl.i.p.xacc
llvm.hexagon.S2.asl.i.r
llvm.hexagon.S2.asl.i.r.acc
llvm.hexagon.S2.asl.i.r.and
llvm.hexagon.S2.asl.i.r.nac
llvm.hexagon.S2.asl.i.r.or
llvm.hexagon.S2.asl.i.r.sat
llvm.hexagon.S2.asl.i.r.xacc
llvm.hexagon.S2.asl.i.vh
llvm.hexagon.S2.asl.i.vw
llvm.hexagon.S2.asl.r.p
llvm.hexagon.S2.asl.r.p.acc
llvm.hexagon.S2.asl.r.p.and
llvm.hexagon.S2.asl.r.p.nac
llvm.hexagon.S2.asl.r.p.or
llvm.hexagon.S2.asl.r.p.xor
llvm.hexagon.S2.asl.r.r
llvm.hexagon.S2.asl.r.r.acc
llvm.hexagon.S2.asl.r.r.and
llvm.hexagon.S2.asl.r.r.nac
llvm.hexagon.S2.asl.r.r.or
llvm.hexagon.S2.asl.r.r.sat
llvm.hexagon.S2.asl.r.vh
llvm.hexagon.S2.asl.r.vw
llvm.hexagon.S2.asr.i.p
llvm.hexagon.S2.asr.i.p.acc
llvm.hexagon.S2.asr.i.p.and
llvm.hexagon.S2.asr.i.p.nac
llvm.hexagon.S2.asr.i.p.or
llvm.hexagon.S2.asr.i.p.rnd
llvm.hexagon.S2.asr.i.p.rnd.goodsyntax
llvm.hexagon.S2.asr.i.r
llvm.hexagon.S2.asr.i.r.acc
llvm.hexagon.S2.asr.i.r.and
llvm.hexagon.S2.asr.i.r.nac
llvm.hexagon.S2.asr.i.r.or
llvm.hexagon.S2.asr.i.r.rnd
llvm.hexagon.S2.asr.i.r.rnd.goodsyntax
llvm.hexagon.S2.asr.i.svw.trun
llvm.hexagon.S2.asr.i.vh
llvm.hexagon.S2.asr.i.vw
llvm.hexagon.S2.asr.r.p
llvm.hexagon.S2.asr.r.p.acc
llvm.hexagon.S2.asr.r.p.and
llvm.hexagon.S2.asr.r.p.nac
llvm.hexagon.S2.asr.r.p.or
llvm.hexagon.S2.asr.r.p.xor
llvm.hexagon.S2.asr.r.r
llvm.hexagon.S2.asr.r.r.acc
llvm.hexagon.S2.asr.r.r.and
llvm.hexagon.S2.asr.r.r.nac
llvm.hexagon.S2.asr.r.r.or
llvm.hexagon.S2.asr.r.r.sat
llvm.hexagon.S2.asr.r.svw.trun
llvm.hexagon.S2.asr.r.vh
llvm.hexagon.S2.asr.r.vw
llvm.hexagon.S2.brev
llvm.hexagon.S2.brevp
llvm.hexagon.S2.cabacencbin
llvm.hexagon.S2.cl0
llvm.hexagon.S2.cl0p
llvm.hexagon.S2.cl1
llvm.hexagon.S2.cl1p
llvm.hexagon.S2.clb
llvm.hexagon.S2.clbnorm
llvm.hexagon.S2.clbp
llvm.hexagon.S2.clrbit.i
llvm.hexagon.S2.clrbit.r
llvm.hexagon.S2.ct0
llvm.hexagon.S2.ct0p
llvm.hexagon.S2.ct1
llvm.hexagon.S2.ct1p
llvm.hexagon.S2.deinterleave
llvm.hexagon.S2.extractu
llvm.hexagon.S2.extractu.rp
llvm.hexagon.S2.extractup
llvm.hexagon.S2.extractup.rp
llvm.hexagon.S2.insert
llvm.hexagon.S2.insert.rp
llvm.hexagon.S2.insertp
llvm.hexagon.S2.insertp.rp
llvm.hexagon.S2.interleave
llvm.hexagon.S2.lfsp
llvm.hexagon.S2.lsl.r.p
llvm.hexagon.S2.lsl.r.p.acc
llvm.hexagon.S2.lsl.r.p.and
llvm.hexagon.S2.lsl.r.p.nac
llvm.hexagon.S2.lsl.r.p.or
llvm.hexagon.S2.lsl.r.p.xor
llvm.hexagon.S2.lsl.r.r
llvm.hexagon.S2.lsl.r.r.acc
llvm.hexagon.S2.lsl.r.r.and
llvm.hexagon.S2.lsl.r.r.nac
llvm.hexagon.S2.lsl.r.r.or
llvm.hexagon.S2.lsl.r.vh
llvm.hexagon.S2.lsl.r.vw
llvm.hexagon.S2.lsr.i.p
llvm.hexagon.S2.lsr.i.p.acc
llvm.hexagon.S2.lsr.i.p.and
llvm.hexagon.S2.lsr.i.p.nac
llvm.hexagon.S2.lsr.i.p.or
llvm.hexagon.S2.lsr.i.p.xacc
llvm.hexagon.S2.lsr.i.r
llvm.hexagon.S2.lsr.i.r.acc
llvm.hexagon.S2.lsr.i.r.and
llvm.hexagon.S2.lsr.i.r.nac
llvm.hexagon.S2.lsr.i.r.or
llvm.hexagon.S2.lsr.i.r.xacc
llvm.hexagon.S2.lsr.i.vh
llvm.hexagon.S2.lsr.i.vw
llvm.hexagon.S2.lsr.r.p
llvm.hexagon.S2.lsr.r.p.acc
llvm.hexagon.S2.lsr.r.p.and
llvm.hexagon.S2.lsr.r.p.nac
llvm.hexagon.S2.lsr.r.p.or
llvm.hexagon.S2.lsr.r.p.xor
llvm.hexagon.S2.lsr.r.r
llvm.hexagon.S2.lsr.r.r.acc
llvm.hexagon.S2.lsr.r.r.and
llvm.hexagon.S2.lsr.r.r.nac
llvm.hexagon.S2.lsr.r.r.or
llvm.hexagon.S2.lsr.r.vh
llvm.hexagon.S2.lsr.r.vw
llvm.hexagon.S2.packhl
llvm.hexagon.S2.parityp
llvm.hexagon.S2.setbit.i
llvm.hexagon.S2.setbit.r
llvm.hexagon.S2.shuffeb
llvm.hexagon.S2.shuffeh
llvm.hexagon.S2.shuffob
llvm.hexagon.S2.shuffoh
llvm.hexagon.S2.storew.locked
llvm.hexagon.S2.svsathb
llvm.hexagon.S2.svsathub
llvm.hexagon.S2.tableidxb.goodsyntax
llvm.hexagon.S2.tableidxd.goodsyntax
llvm.hexagon.S2.tableidxh.goodsyntax
llvm.hexagon.S2.tableidxw.goodsyntax
llvm.hexagon.S2.togglebit.i
llvm.hexagon.S2.togglebit.r
llvm.hexagon.S2.tstbit.i
llvm.hexagon.S2.tstbit.r
llvm.hexagon.S2.valignib
llvm.hexagon.S2.valignrb
llvm.hexagon.S2.vcnegh
llvm.hexagon.S2.vcrotate
llvm.hexagon.S2.vrcnegh
llvm.hexagon.S2.vrndpackwh
llvm.hexagon.S2.vrndpackwhs
llvm.hexagon.S2.vsathb
llvm.hexagon.S2.vsathb.nopack
llvm.hexagon.S2.vsathub
llvm.hexagon.S2.vsathub.nopack
llvm.hexagon.S2.vsatwh
llvm.hexagon.S2.vsatwh.nopack
llvm.hexagon.S2.vsatwuh
llvm.hexagon.S2.vsatwuh.nopack
llvm.hexagon.S2.vsplatrb
llvm.hexagon.S2.vsplatrh
llvm.hexagon.S2.vspliceib
llvm.hexagon.S2.vsplicerb
llvm.hexagon.S2.vsxtbh
llvm.hexagon.S2.vsxthw
llvm.hexagon.S2.vtrunehb
llvm.hexagon.S2.vtrunewh
llvm.hexagon.S2.vtrunohb
llvm.hexagon.S2.vtrunowh
llvm.hexagon.S2.vzxtbh
llvm.hexagon.S2.vzxthw
llvm.hexagon.S4.addaddi
llvm.hexagon.S4.addi.asl.ri
llvm.hexagon.S4.addi.lsr.ri
llvm.hexagon.S4.andi.asl.ri
llvm.hexagon.S4.andi.lsr.ri
llvm.hexagon.S4.clbaddi
llvm.hexagon.S4.clbpaddi
llvm.hexagon.S4.clbpnorm
llvm.hexagon.S4.extract
llvm.hexagon.S4.extract.rp
llvm.hexagon.S4.extractp
llvm.hexagon.S4.extractp.rp
llvm.hexagon.S4.lsli
llvm.hexagon.S4.ntstbit.i
llvm.hexagon.S4.ntstbit.r
llvm.hexagon.S4.or.andi
llvm.hexagon.S4.or.andix
llvm.hexagon.S4.or.ori
llvm.hexagon.S4.ori.asl.ri
llvm.hexagon.S4.ori.lsr.ri
llvm.hexagon.S4.parity
llvm.hexagon.S4.stored.locked
llvm.hexagon.S4.subaddi
llvm.hexagon.S4.subi.asl.ri
llvm.hexagon.S4.subi.lsr.ri
llvm.hexagon.S4.vrcrotate
llvm.hexagon.S4.vrcrotate.acc
llvm.hexagon.S4.vxaddsubh
llvm.hexagon.S4.vxaddsubhr
llvm.hexagon.S4.vxaddsubw
llvm.hexagon.S4.vxsubaddh
llvm.hexagon.S4.vxsubaddhr
llvm.hexagon.S4.vxsubaddw
llvm.hexagon.S5.asrhub.rnd.sat.goodsyntax
llvm.hexagon.S5.asrhub.sat
llvm.hexagon.S5.popcountp
llvm.hexagon.S5.vasrhrnd.goodsyntax
llvm.hexagon.S6.rol.i.p
llvm.hexagon.S6.rol.i.p.acc
llvm.hexagon.S6.rol.i.p.and
llvm.hexagon.S6.rol.i.p.nac
llvm.hexagon.S6.rol.i.p.or
llvm.hexagon.S6.rol.i.p.xacc
llvm.hexagon.S6.rol.i.r
llvm.hexagon.S6.rol.i.r.acc
llvm.hexagon.S6.rol.i.r.and
llvm.hexagon.S6.rol.i.r.nac
llvm.hexagon.S6.rol.i.r.or
llvm.hexagon.S6.rol.i.r.xacc
llvm.hexagon.S6.vsplatrbp
llvm.hexagon.S6.vtrunehb.ppp
llvm.hexagon.S6.vtrunohb.ppp
llvm.hexagon.SI.to.SXTHI.asrh
llvm.hexagon.V6.extractw
llvm.hexagon.V6.extractw.128B
llvm.hexagon.V6.hi
llvm.hexagon.V6.hi.128B
llvm.hexagon.V6.lo
llvm.hexagon.V6.lo.128B
llvm.hexagon.V6.lvsplatb
llvm.hexagon.V6.lvsplatb.128B
llvm.hexagon.V6.lvsplath
llvm.hexagon.V6.lvsplath.128B
llvm.hexagon.V6.lvsplatw
llvm.hexagon.V6.lvsplatw.128B
llvm.hexagon.V6.pred.and
llvm.hexagon.V6.pred.and.128B
llvm.hexagon.V6.pred.and.n
llvm.hexagon.V6.pred.and.n.128B
llvm.hexagon.V6.pred.not
llvm.hexagon.V6.pred.not.128B
llvm.hexagon.V6.pred.or
llvm.hexagon.V6.pred.or.128B
llvm.hexagon.V6.pred.or.n
llvm.hexagon.V6.pred.or.n.128B
llvm.hexagon.V6.pred.scalar2
llvm.hexagon.V6.pred.scalar2.128B
llvm.hexagon.V6.pred.scalar2v2
llvm.hexagon.V6.pred.scalar2v2.128B
llvm.hexagon.V6.pred.xor
llvm.hexagon.V6.pred.xor.128B
llvm.hexagon.V6.shuffeqh
llvm.hexagon.V6.shuffeqh.128B
llvm.hexagon.V6.shuffeqw
llvm.hexagon.V6.shuffeqw.128B
llvm.hexagon.V6.vabsdiffh
llvm.hexagon.V6.vabsdiffh.128B
llvm.hexagon.V6.vabsdiffub
llvm.hexagon.V6.vabsdiffub.128B
llvm.hexagon.V6.vabsdiffuh
llvm.hexagon.V6.vabsdiffuh.128B
llvm.hexagon.V6.vabsdiffw
llvm.hexagon.V6.vabsdiffw.128B
llvm.hexagon.V6.vabsh
llvm.hexagon.V6.vabsh.128B
llvm.hexagon.V6.vabsh.sat
llvm.hexagon.V6.vabsh.sat.128B
llvm.hexagon.V6.vabsw
llvm.hexagon.V6.vabsw.128B
llvm.hexagon.V6.vabsw.sat
llvm.hexagon.V6.vabsw.sat.128B
llvm.hexagon.V6.vaddb
llvm.hexagon.V6.vaddb.128B
llvm.hexagon.V6.vaddb.dv
llvm.hexagon.V6.vaddb.dv.128B
llvm.hexagon.V6.vaddbnq
llvm.hexagon.V6.vaddbnq.128B
llvm.hexagon.V6.vaddbq
llvm.hexagon.V6.vaddbq.128B
llvm.hexagon.V6.vaddbsat
llvm.hexagon.V6.vaddbsat.128B
llvm.hexagon.V6.vaddbsat.dv
llvm.hexagon.V6.vaddbsat.dv.128B
llvm.hexagon.V6.vaddclbh
llvm.hexagon.V6.vaddclbh.128B
llvm.hexagon.V6.vaddclbw
llvm.hexagon.V6.vaddclbw.128B
llvm.hexagon.V6.vaddh
llvm.hexagon.V6.vaddh.128B
llvm.hexagon.V6.vaddh.dv
llvm.hexagon.V6.vaddh.dv.128B
llvm.hexagon.V6.vaddhnq
llvm.hexagon.V6.vaddhnq.128B
llvm.hexagon.V6.vaddhq
llvm.hexagon.V6.vaddhq.128B
llvm.hexagon.V6.vaddhsat
llvm.hexagon.V6.vaddhsat.128B
llvm.hexagon.V6.vaddhsat.dv
llvm.hexagon.V6.vaddhsat.dv.128B
llvm.hexagon.V6.vaddhw
llvm.hexagon.V6.vaddhw.128B
llvm.hexagon.V6.vaddhw.acc
llvm.hexagon.V6.vaddhw.acc.128B
llvm.hexagon.V6.vaddubh
llvm.hexagon.V6.vaddubh.128B
llvm.hexagon.V6.vaddubh.acc
llvm.hexagon.V6.vaddubh.acc.128B
llvm.hexagon.V6.vaddubsat
llvm.hexagon.V6.vaddubsat.128B
llvm.hexagon.V6.vaddubsat.dv
llvm.hexagon.V6.vaddubsat.dv.128B
llvm.hexagon.V6.vaddububb.sat
llvm.hexagon.V6.vaddububb.sat.128B
llvm.hexagon.V6.vadduhsat
llvm.hexagon.V6.vadduhsat.128B
llvm.hexagon.V6.vadduhsat.dv
llvm.hexagon.V6.vadduhsat.dv.128B
llvm.hexagon.V6.vadduhw
llvm.hexagon.V6.vadduhw.128B
llvm.hexagon.V6.vadduhw.acc
llvm.hexagon.V6.vadduhw.acc.128B
llvm.hexagon.V6.vadduwsat
llvm.hexagon.V6.vadduwsat.128B
llvm.hexagon.V6.vadduwsat.dv
llvm.hexagon.V6.vadduwsat.dv.128B
llvm.hexagon.V6.vaddw
llvm.hexagon.V6.vaddw.128B
llvm.hexagon.V6.vaddw.dv
llvm.hexagon.V6.vaddw.dv.128B
llvm.hexagon.V6.vaddwnq
llvm.hexagon.V6.vaddwnq.128B
llvm.hexagon.V6.vaddwq
llvm.hexagon.V6.vaddwq.128B
llvm.hexagon.V6.vaddwsat
llvm.hexagon.V6.vaddwsat.128B
llvm.hexagon.V6.vaddwsat.dv
llvm.hexagon.V6.vaddwsat.dv.128B
llvm.hexagon.V6.valignb
llvm.hexagon.V6.valignb.128B
llvm.hexagon.V6.valignbi
llvm.hexagon.V6.valignbi.128B
llvm.hexagon.V6.vand
llvm.hexagon.V6.vand.128B
llvm.hexagon.V6.vandnqrt
llvm.hexagon.V6.vandnqrt.128B
llvm.hexagon.V6.vandnqrt.acc
llvm.hexagon.V6.vandnqrt.acc.128B
llvm.hexagon.V6.vandqrt
llvm.hexagon.V6.vandqrt.128B
llvm.hexagon.V6.vandqrt.acc
llvm.hexagon.V6.vandqrt.acc.128B
llvm.hexagon.V6.vandvnqv
llvm.hexagon.V6.vandvnqv.128B
llvm.hexagon.V6.vandvqv
llvm.hexagon.V6.vandvqv.128B
llvm.hexagon.V6.vandvrt
llvm.hexagon.V6.vandvrt.128B
llvm.hexagon.V6.vandvrt.acc
llvm.hexagon.V6.vandvrt.acc.128B
llvm.hexagon.V6.vaslh
llvm.hexagon.V6.vaslh.128B
llvm.hexagon.V6.vaslhv
llvm.hexagon.V6.vaslhv.128B
llvm.hexagon.V6.vaslw
llvm.hexagon.V6.vaslw.128B
llvm.hexagon.V6.vaslw.acc
llvm.hexagon.V6.vaslw.acc.128B
llvm.hexagon.V6.vaslwv
llvm.hexagon.V6.vaslwv.128B
llvm.hexagon.V6.vasrh
llvm.hexagon.V6.vasrh.128B
llvm.hexagon.V6.vasrhbrndsat
llvm.hexagon.V6.vasrhbrndsat.128B
llvm.hexagon.V6.vasrhbsat
llvm.hexagon.V6.vasrhbsat.128B
llvm.hexagon.V6.vasrhubrndsat
llvm.hexagon.V6.vasrhubrndsat.128B
llvm.hexagon.V6.vasrhubsat
llvm.hexagon.V6.vasrhubsat.128B
llvm.hexagon.V6.vasrhv
llvm.hexagon.V6.vasrhv.128B
llvm.hexagon.V6.vasruwuhrndsat
llvm.hexagon.V6.vasruwuhrndsat.128B
llvm.hexagon.V6.vasrw
llvm.hexagon.V6.vasrw.128B
llvm.hexagon.V6.vasrw.acc
llvm.hexagon.V6.vasrw.acc.128B
llvm.hexagon.V6.vasrwh
llvm.hexagon.V6.vasrwh.128B
llvm.hexagon.V6.vasrwhrndsat
llvm.hexagon.V6.vasrwhrndsat.128B
llvm.hexagon.V6.vasrwhsat
llvm.hexagon.V6.vasrwhsat.128B
llvm.hexagon.V6.vasrwuhrndsat
llvm.hexagon.V6.vasrwuhrndsat.128B
llvm.hexagon.V6.vasrwuhsat
llvm.hexagon.V6.vasrwuhsat.128B
llvm.hexagon.V6.vasrwv
llvm.hexagon.V6.vasrwv.128B
llvm.hexagon.V6.vassign
llvm.hexagon.V6.vassign.128B
llvm.hexagon.V6.vassignp
llvm.hexagon.V6.vassignp.128B
llvm.hexagon.V6.vavgh
llvm.hexagon.V6.vavgh.128B
llvm.hexagon.V6.vavghrnd
llvm.hexagon.V6.vavghrnd.128B
llvm.hexagon.V6.vavgub
llvm.hexagon.V6.vavgub.128B
llvm.hexagon.V6.vavgubrnd
llvm.hexagon.V6.vavgubrnd.128B
llvm.hexagon.V6.vavguh
llvm.hexagon.V6.vavguh.128B
llvm.hexagon.V6.vavguhrnd
llvm.hexagon.V6.vavguhrnd.128B
llvm.hexagon.V6.vavgw
llvm.hexagon.V6.vavgw.128B
llvm.hexagon.V6.vavgwrnd
llvm.hexagon.V6.vavgwrnd.128B
llvm.hexagon.V6.vcl0h
llvm.hexagon.V6.vcl0h.128B
llvm.hexagon.V6.vcl0w
llvm.hexagon.V6.vcl0w.128B
llvm.hexagon.V6.vcombine
llvm.hexagon.V6.vcombine.128B
llvm.hexagon.V6.vd0
llvm.hexagon.V6.vd0.128B
llvm.hexagon.V6.vdealb
llvm.hexagon.V6.vdealb.128B
llvm.hexagon.V6.vdealb4w
llvm.hexagon.V6.vdealb4w.128B
llvm.hexagon.V6.vdealh
llvm.hexagon.V6.vdealh.128B
llvm.hexagon.V6.vdealvdd
llvm.hexagon.V6.vdealvdd.128B
llvm.hexagon.V6.vdelta
llvm.hexagon.V6.vdelta.128B
llvm.hexagon.V6.vdmpybus
llvm.hexagon.V6.vdmpybus.128B
llvm.hexagon.V6.vdmpybus.acc
llvm.hexagon.V6.vdmpybus.acc.128B
llvm.hexagon.V6.vdmpybus.dv
llvm.hexagon.V6.vdmpybus.dv.128B
llvm.hexagon.V6.vdmpybus.dv.acc
llvm.hexagon.V6.vdmpybus.dv.acc.128B
llvm.hexagon.V6.vdmpyhb
llvm.hexagon.V6.vdmpyhb.128B
llvm.hexagon.V6.vdmpyhb.acc
llvm.hexagon.V6.vdmpyhb.acc.128B
llvm.hexagon.V6.vdmpyhb.dv
llvm.hexagon.V6.vdmpyhb.dv.128B
llvm.hexagon.V6.vdmpyhb.dv.acc
llvm.hexagon.V6.vdmpyhb.dv.acc.128B
llvm.hexagon.V6.vdmpyhisat
llvm.hexagon.V6.vdmpyhisat.128B
llvm.hexagon.V6.vdmpyhisat.acc
llvm.hexagon.V6.vdmpyhisat.acc.128B
llvm.hexagon.V6.vdmpyhsat
llvm.hexagon.V6.vdmpyhsat.128B
llvm.hexagon.V6.vdmpyhsat.acc
llvm.hexagon.V6.vdmpyhsat.acc.128B
llvm.hexagon.V6.vdmpyhsuisat
llvm.hexagon.V6.vdmpyhsuisat.128B
llvm.hexagon.V6.vdmpyhsuisat.acc
llvm.hexagon.V6.vdmpyhsuisat.acc.128B
llvm.hexagon.V6.vdmpyhsusat
llvm.hexagon.V6.vdmpyhsusat.128B
llvm.hexagon.V6.vdmpyhsusat.acc
llvm.hexagon.V6.vdmpyhsusat.acc.128B
llvm.hexagon.V6.vdmpyhvsat
llvm.hexagon.V6.vdmpyhvsat.128B
llvm.hexagon.V6.vdmpyhvsat.acc
llvm.hexagon.V6.vdmpyhvsat.acc.128B
llvm.hexagon.V6.vdsaduh
llvm.hexagon.V6.vdsaduh.128B
llvm.hexagon.V6.vdsaduh.acc
llvm.hexagon.V6.vdsaduh.acc.128B
llvm.hexagon.V6.veqb
llvm.hexagon.V6.veqb.128B
llvm.hexagon.V6.veqb.and
llvm.hexagon.V6.veqb.and.128B
llvm.hexagon.V6.veqb.or
llvm.hexagon.V6.veqb.or.128B
llvm.hexagon.V6.veqb.xor
llvm.hexagon.V6.veqb.xor.128B
llvm.hexagon.V6.veqh
llvm.hexagon.V6.veqh.128B
llvm.hexagon.V6.veqh.and
llvm.hexagon.V6.veqh.and.128B
llvm.hexagon.V6.veqh.or
llvm.hexagon.V6.veqh.or.128B
llvm.hexagon.V6.veqh.xor
llvm.hexagon.V6.veqh.xor.128B
llvm.hexagon.V6.veqw
llvm.hexagon.V6.veqw.128B
llvm.hexagon.V6.veqw.and
llvm.hexagon.V6.veqw.and.128B
llvm.hexagon.V6.veqw.or
llvm.hexagon.V6.veqw.or.128B
llvm.hexagon.V6.veqw.xor
llvm.hexagon.V6.veqw.xor.128B
llvm.hexagon.V6.vgtb
llvm.hexagon.V6.vgtb.128B
llvm.hexagon.V6.vgtb.and
llvm.hexagon.V6.vgtb.and.128B
llvm.hexagon.V6.vgtb.or
llvm.hexagon.V6.vgtb.or.128B
llvm.hexagon.V6.vgtb.xor
llvm.hexagon.V6.vgtb.xor.128B
llvm.hexagon.V6.vgth
llvm.hexagon.V6.vgth.128B
llvm.hexagon.V6.vgth.and
llvm.hexagon.V6.vgth.and.128B
llvm.hexagon.V6.vgth.or
llvm.hexagon.V6.vgth.or.128B
llvm.hexagon.V6.vgth.xor
llvm.hexagon.V6.vgth.xor.128B
llvm.hexagon.V6.vgtub
llvm.hexagon.V6.vgtub.128B
llvm.hexagon.V6.vgtub.and
llvm.hexagon.V6.vgtub.and.128B
llvm.hexagon.V6.vgtub.or
llvm.hexagon.V6.vgtub.or.128B
llvm.hexagon.V6.vgtub.xor
llvm.hexagon.V6.vgtub.xor.128B
llvm.hexagon.V6.vgtuh
llvm.hexagon.V6.vgtuh.128B
llvm.hexagon.V6.vgtuh.and
llvm.hexagon.V6.vgtuh.and.128B
llvm.hexagon.V6.vgtuh.or
llvm.hexagon.V6.vgtuh.or.128B
llvm.hexagon.V6.vgtuh.xor
llvm.hexagon.V6.vgtuh.xor.128B
llvm.hexagon.V6.vgtuw
llvm.hexagon.V6.vgtuw.128B
llvm.hexagon.V6.vgtuw.and
llvm.hexagon.V6.vgtuw.and.128B
llvm.hexagon.V6.vgtuw.or
llvm.hexagon.V6.vgtuw.or.128B
llvm.hexagon.V6.vgtuw.xor
llvm.hexagon.V6.vgtuw.xor.128B
llvm.hexagon.V6.vgtw
llvm.hexagon.V6.vgtw.128B
llvm.hexagon.V6.vgtw.and
llvm.hexagon.V6.vgtw.and.128B
llvm.hexagon.V6.vgtw.or
llvm.hexagon.V6.vgtw.or.128B
llvm.hexagon.V6.vgtw.xor
llvm.hexagon.V6.vgtw.xor.128B
llvm.hexagon.V6.vinsertwr
llvm.hexagon.V6.vinsertwr.128B
llvm.hexagon.V6.vlalignb
llvm.hexagon.V6.vlalignb.128B
llvm.hexagon.V6.vlalignbi
llvm.hexagon.V6.vlalignbi.128B
llvm.hexagon.V6.vlsrb
llvm.hexagon.V6.vlsrb.128B
llvm.hexagon.V6.vlsrh
llvm.hexagon.V6.vlsrh.128B
llvm.hexagon.V6.vlsrhv
llvm.hexagon.V6.vlsrhv.128B
llvm.hexagon.V6.vlsrw
llvm.hexagon.V6.vlsrw.128B
llvm.hexagon.V6.vlsrwv
llvm.hexagon.V6.vlsrwv.128B
llvm.hexagon.V6.vlutb
llvm.hexagon.V6.vlutb.128B
llvm.hexagon.V6.vlutb.acc
llvm.hexagon.V6.vlutb.acc.128B
llvm.hexagon.V6.vlutb.dv
llvm.hexagon.V6.vlutb.dv.128B
llvm.hexagon.V6.vlutb.dv.acc
llvm.hexagon.V6.vlutb.dv.acc.128B
llvm.hexagon.V6.vlutvvb
llvm.hexagon.V6.vlutvvb.128B
llvm.hexagon.V6.vlutvvb.nm
llvm.hexagon.V6.vlutvvb.nm.128B
llvm.hexagon.V6.vlutvvb.oracc
llvm.hexagon.V6.vlutvvb.oracc.128B
llvm.hexagon.V6.vlutvvb.oracci
llvm.hexagon.V6.vlutvvb.oracci.128B
llvm.hexagon.V6.vlutvvbi
llvm.hexagon.V6.vlutvvbi.128B
llvm.hexagon.V6.vlutvwh
llvm.hexagon.V6.vlutvwh.128B
llvm.hexagon.V6.vlutvwh.nm
llvm.hexagon.V6.vlutvwh.nm.128B
llvm.hexagon.V6.vlutvwh.oracc
llvm.hexagon.V6.vlutvwh.oracc.128B
llvm.hexagon.V6.vlutvwh.oracci
llvm.hexagon.V6.vlutvwh.oracci.128B
llvm.hexagon.V6.vlutvwhi
llvm.hexagon.V6.vlutvwhi.128B
llvm.hexagon.V6.vmaskedstorenq
llvm.hexagon.V6.vmaskedstorenq.128B
llvm.hexagon.V6.vmaskedstorentnq
llvm.hexagon.V6.vmaskedstorentnq.128B
llvm.hexagon.V6.vmaskedstorentq
llvm.hexagon.V6.vmaskedstorentq.128B
llvm.hexagon.V6.vmaskedstoreq
llvm.hexagon.V6.vmaskedstoreq.128B
llvm.hexagon.V6.vmaxb
llvm.hexagon.V6.vmaxb.128B
llvm.hexagon.V6.vmaxh
llvm.hexagon.V6.vmaxh.128B
llvm.hexagon.V6.vmaxub
llvm.hexagon.V6.vmaxub.128B
llvm.hexagon.V6.vmaxuh
llvm.hexagon.V6.vmaxuh.128B
llvm.hexagon.V6.vmaxw
llvm.hexagon.V6.vmaxw.128B
llvm.hexagon.V6.vminb
llvm.hexagon.V6.vminb.128B
llvm.hexagon.V6.vminh
llvm.hexagon.V6.vminh.128B
llvm.hexagon.V6.vminub
llvm.hexagon.V6.vminub.128B
llvm.hexagon.V6.vminuh
llvm.hexagon.V6.vminuh.128B
llvm.hexagon.V6.vminw
llvm.hexagon.V6.vminw.128B
llvm.hexagon.V6.vmpabus
llvm.hexagon.V6.vmpabus.128B
llvm.hexagon.V6.vmpabus.acc
llvm.hexagon.V6.vmpabus.acc.128B
llvm.hexagon.V6.vmpabusv
llvm.hexagon.V6.vmpabusv.128B
llvm.hexagon.V6.vmpabuuv
llvm.hexagon.V6.vmpabuuv.128B
llvm.hexagon.V6.vmpahb
llvm.hexagon.V6.vmpahb.128B
llvm.hexagon.V6.vmpahb.acc
llvm.hexagon.V6.vmpahb.acc.128B
llvm.hexagon.V6.vmpauhb
llvm.hexagon.V6.vmpauhb.128B
llvm.hexagon.V6.vmpauhb.acc
llvm.hexagon.V6.vmpauhb.acc.128B
llvm.hexagon.V6.vmpybus
llvm.hexagon.V6.vmpybus.128B
llvm.hexagon.V6.vmpybus.acc
llvm.hexagon.V6.vmpybus.acc.128B
llvm.hexagon.V6.vmpybusv
llvm.hexagon.V6.vmpybusv.128B
llvm.hexagon.V6.vmpybusv.acc
llvm.hexagon.V6.vmpybusv.acc.128B
llvm.hexagon.V6.vmpybv
llvm.hexagon.V6.vmpybv.128B
llvm.hexagon.V6.vmpybv.acc
llvm.hexagon.V6.vmpybv.acc.128B
llvm.hexagon.V6.vmpyewuh
llvm.hexagon.V6.vmpyewuh.128B
llvm.hexagon.V6.vmpyewuh.64
llvm.hexagon.V6.vmpyewuh.64.128B
llvm.hexagon.V6.vmpyh
llvm.hexagon.V6.vmpyh.128B
llvm.hexagon.V6.vmpyhsat.acc
llvm.hexagon.V6.vmpyhsat.acc.128B
llvm.hexagon.V6.vmpyhsrs
llvm.hexagon.V6.vmpyhsrs.128B
llvm.hexagon.V6.vmpyhss
llvm.hexagon.V6.vmpyhss.128B
llvm.hexagon.V6.vmpyhus
llvm.hexagon.V6.vmpyhus.128B
llvm.hexagon.V6.vmpyhus.acc
llvm.hexagon.V6.vmpyhus.acc.128B
llvm.hexagon.V6.vmpyhv
llvm.hexagon.V6.vmpyhv.128B
llvm.hexagon.V6.vmpyhv.acc
llvm.hexagon.V6.vmpyhv.acc.128B
llvm.hexagon.V6.vmpyhvsrs
llvm.hexagon.V6.vmpyhvsrs.128B
llvm.hexagon.V6.vmpyieoh
llvm.hexagon.V6.vmpyieoh.128B
llvm.hexagon.V6.vmpyiewh.acc
llvm.hexagon.V6.vmpyiewh.acc.128B
llvm.hexagon.V6.vmpyiewuh
llvm.hexagon.V6.vmpyiewuh.128B
llvm.hexagon.V6.vmpyiewuh.acc
llvm.hexagon.V6.vmpyiewuh.acc.128B
llvm.hexagon.V6.vmpyih
llvm.hexagon.V6.vmpyih.128B
llvm.hexagon.V6.vmpyih.acc
llvm.hexagon.V6.vmpyih.acc.128B
llvm.hexagon.V6.vmpyihb
llvm.hexagon.V6.vmpyihb.128B
llvm.hexagon.V6.vmpyihb.acc
llvm.hexagon.V6.vmpyihb.acc.128B
llvm.hexagon.V6.vmpyiowh
llvm.hexagon.V6.vmpyiowh.128B
llvm.hexagon.V6.vmpyiwb
llvm.hexagon.V6.vmpyiwb.128B
llvm.hexagon.V6.vmpyiwb.acc
llvm.hexagon.V6.vmpyiwb.acc.128B
llvm.hexagon.V6.vmpyiwh
llvm.hexagon.V6.vmpyiwh.128B
llvm.hexagon.V6.vmpyiwh.acc
llvm.hexagon.V6.vmpyiwh.acc.128B
llvm.hexagon.V6.vmpyiwub
llvm.hexagon.V6.vmpyiwub.128B
llvm.hexagon.V6.vmpyiwub.acc
llvm.hexagon.V6.vmpyiwub.acc.128B
llvm.hexagon.V6.vmpyowh
llvm.hexagon.V6.vmpyowh.128B
llvm.hexagon.V6.vmpyowh.64.acc
llvm.hexagon.V6.vmpyowh.64.acc.128B
llvm.hexagon.V6.vmpyowh.rnd
llvm.hexagon.V6.vmpyowh.rnd.128B
llvm.hexagon.V6.vmpyowh.rnd.sacc
llvm.hexagon.V6.vmpyowh.rnd.sacc.128B
llvm.hexagon.V6.vmpyowh.sacc
llvm.hexagon.V6.vmpyowh.sacc.128B
llvm.hexagon.V6.vmpyub
llvm.hexagon.V6.vmpyub.128B
llvm.hexagon.V6.vmpyub.acc
llvm.hexagon.V6.vmpyub.acc.128B
llvm.hexagon.V6.vmpyubv
llvm.hexagon.V6.vmpyubv.128B
llvm.hexagon.V6.vmpyubv.acc
llvm.hexagon.V6.vmpyubv.acc.128B
llvm.hexagon.V6.vmpyuh
llvm.hexagon.V6.vmpyuh.128B
llvm.hexagon.V6.vmpyuh.acc
llvm.hexagon.V6.vmpyuh.acc.128B
llvm.hexagon.V6.vmpyuhv
llvm.hexagon.V6.vmpyuhv.128B
llvm.hexagon.V6.vmpyuhv.acc
llvm.hexagon.V6.vmpyuhv.acc.128B
llvm.hexagon.V6.vmux
llvm.hexagon.V6.vmux.128B
llvm.hexagon.V6.vnavgh
llvm.hexagon.V6.vnavgh.128B
llvm.hexagon.V6.vnavgub
llvm.hexagon.V6.vnavgub.128B
llvm.hexagon.V6.vnavgw
llvm.hexagon.V6.vnavgw.128B
llvm.hexagon.V6.vnormamth
llvm.hexagon.V6.vnormamth.128B
llvm.hexagon.V6.vnormamtw
llvm.hexagon.V6.vnormamtw.128B
llvm.hexagon.V6.vnot
llvm.hexagon.V6.vnot.128B
llvm.hexagon.V6.vor
llvm.hexagon.V6.vor.128B
llvm.hexagon.V6.vpackeb
llvm.hexagon.V6.vpackeb.128B
llvm.hexagon.V6.vpackeh
llvm.hexagon.V6.vpackeh.128B
llvm.hexagon.V6.vpackhb.sat
llvm.hexagon.V6.vpackhb.sat.128B
llvm.hexagon.V6.vpackhub.sat
llvm.hexagon.V6.vpackhub.sat.128B
llvm.hexagon.V6.vpackob
llvm.hexagon.V6.vpackob.128B
llvm.hexagon.V6.vpackoh
llvm.hexagon.V6.vpackoh.128B
llvm.hexagon.V6.vpackwh.sat
llvm.hexagon.V6.vpackwh.sat.128B
llvm.hexagon.V6.vpackwuh.sat
llvm.hexagon.V6.vpackwuh.sat.128B
llvm.hexagon.V6.vpopcounth
llvm.hexagon.V6.vpopcounth.128B
llvm.hexagon.V6.vrdelta
llvm.hexagon.V6.vrdelta.128B
llvm.hexagon.V6.vrmpybus
llvm.hexagon.V6.vrmpybus.128B
llvm.hexagon.V6.vrmpybus.acc
llvm.hexagon.V6.vrmpybus.acc.128B
llvm.hexagon.V6.vrmpybusi
llvm.hexagon.V6.vrmpybusi.128B
llvm.hexagon.V6.vrmpybusi.acc
llvm.hexagon.V6.vrmpybusi.acc.128B
llvm.hexagon.V6.vrmpybusv
llvm.hexagon.V6.vrmpybusv.128B
llvm.hexagon.V6.vrmpybusv.acc
llvm.hexagon.V6.vrmpybusv.acc.128B
llvm.hexagon.V6.vrmpybv
llvm.hexagon.V6.vrmpybv.128B
llvm.hexagon.V6.vrmpybv.acc
llvm.hexagon.V6.vrmpybv.acc.128B
llvm.hexagon.V6.vrmpyub
llvm.hexagon.V6.vrmpyub.128B
llvm.hexagon.V6.vrmpyub.acc
llvm.hexagon.V6.vrmpyub.acc.128B
llvm.hexagon.V6.vrmpyubi
llvm.hexagon.V6.vrmpyubi.128B
llvm.hexagon.V6.vrmpyubi.acc
llvm.hexagon.V6.vrmpyubi.acc.128B
llvm.hexagon.V6.vrmpyubv
llvm.hexagon.V6.vrmpyubv.128B
llvm.hexagon.V6.vrmpyubv.acc
llvm.hexagon.V6.vrmpyubv.acc.128B
llvm.hexagon.V6.vror
llvm.hexagon.V6.vror.128B
llvm.hexagon.V6.vroundhb
llvm.hexagon.V6.vroundhb.128B
llvm.hexagon.V6.vroundhub
llvm.hexagon.V6.vroundhub.128B
llvm.hexagon.V6.vrounduhub
llvm.hexagon.V6.vrounduhub.128B
llvm.hexagon.V6.vrounduwuh
llvm.hexagon.V6.vrounduwuh.128B
llvm.hexagon.V6.vroundwh
llvm.hexagon.V6.vroundwh.128B
llvm.hexagon.V6.vroundwuh
llvm.hexagon.V6.vroundwuh.128B
llvm.hexagon.V6.vrsadubi
llvm.hexagon.V6.vrsadubi.128B
llvm.hexagon.V6.vrsadubi.acc
llvm.hexagon.V6.vrsadubi.acc.128B
llvm.hexagon.V6.vsathub
llvm.hexagon.V6.vsathub.128B
llvm.hexagon.V6.vsatuwuh
llvm.hexagon.V6.vsatuwuh.128B
llvm.hexagon.V6.vsatwh
llvm.hexagon.V6.vsatwh.128B
llvm.hexagon.V6.vsb
llvm.hexagon.V6.vsb.128B
llvm.hexagon.V6.vsh
llvm.hexagon.V6.vsh.128B
llvm.hexagon.V6.vshufeh
llvm.hexagon.V6.vshufeh.128B
llvm.hexagon.V6.vshuffb
llvm.hexagon.V6.vshuffb.128B
llvm.hexagon.V6.vshuffeb
llvm.hexagon.V6.vshuffeb.128B
llvm.hexagon.V6.vshuffh
llvm.hexagon.V6.vshuffh.128B
llvm.hexagon.V6.vshuffob
llvm.hexagon.V6.vshuffob.128B
llvm.hexagon.V6.vshuffvdd
llvm.hexagon.V6.vshuffvdd.128B
llvm.hexagon.V6.vshufoeb
llvm.hexagon.V6.vshufoeb.128B
llvm.hexagon.V6.vshufoeh
llvm.hexagon.V6.vshufoeh.128B
llvm.hexagon.V6.vshufoh
llvm.hexagon.V6.vshufoh.128B
llvm.hexagon.V6.vsubb
llvm.hexagon.V6.vsubb.128B
llvm.hexagon.V6.vsubb.dv
llvm.hexagon.V6.vsubb.dv.128B
llvm.hexagon.V6.vsubbnq
llvm.hexagon.V6.vsubbnq.128B
llvm.hexagon.V6.vsubbq
llvm.hexagon.V6.vsubbq.128B
llvm.hexagon.V6.vsubbsat
llvm.hexagon.V6.vsubbsat.128B
llvm.hexagon.V6.vsubbsat.dv
llvm.hexagon.V6.vsubbsat.dv.128B
llvm.hexagon.V6.vsubh
llvm.hexagon.V6.vsubh.128B
llvm.hexagon.V6.vsubh.dv
llvm.hexagon.V6.vsubh.dv.128B
llvm.hexagon.V6.vsubhnq
llvm.hexagon.V6.vsubhnq.128B
llvm.hexagon.V6.vsubhq
llvm.hexagon.V6.vsubhq.128B
llvm.hexagon.V6.vsubhsat
llvm.hexagon.V6.vsubhsat.128B
llvm.hexagon.V6.vsubhsat.dv
llvm.hexagon.V6.vsubhsat.dv.128B
llvm.hexagon.V6.vsubhw
llvm.hexagon.V6.vsubhw.128B
llvm.hexagon.V6.vsububh
llvm.hexagon.V6.vsububh.128B
llvm.hexagon.V6.vsububsat
llvm.hexagon.V6.vsububsat.128B
llvm.hexagon.V6.vsububsat.dv
llvm.hexagon.V6.vsububsat.dv.128B
llvm.hexagon.V6.vsubububb.sat
llvm.hexagon.V6.vsubububb.sat.128B
llvm.hexagon.V6.vsubuhsat
llvm.hexagon.V6.vsubuhsat.128B
llvm.hexagon.V6.vsubuhsat.dv
llvm.hexagon.V6.vsubuhsat.dv.128B
llvm.hexagon.V6.vsubuhw
llvm.hexagon.V6.vsubuhw.128B
llvm.hexagon.V6.vsubuwsat
llvm.hexagon.V6.vsubuwsat.128B
llvm.hexagon.V6.vsubuwsat.dv
llvm.hexagon.V6.vsubuwsat.dv.128B
llvm.hexagon.V6.vsubw
llvm.hexagon.V6.vsubw.128B
llvm.hexagon.V6.vsubw.dv
llvm.hexagon.V6.vsubw.dv.128B
llvm.hexagon.V6.vsubwnq
llvm.hexagon.V6.vsubwnq.128B
llvm.hexagon.V6.vsubwq
llvm.hexagon.V6.vsubwq.128B
llvm.hexagon.V6.vsubwsat
llvm.hexagon.V6.vsubwsat.128B
llvm.hexagon.V6.vsubwsat.dv
llvm.hexagon.V6.vsubwsat.dv.128B
llvm.hexagon.V6.vswap
llvm.hexagon.V6.vswap.128B
llvm.hexagon.V6.vtmpyb
llvm.hexagon.V6.vtmpyb.128B
llvm.hexagon.V6.vtmpyb.acc
llvm.hexagon.V6.vtmpyb.acc.128B
llvm.hexagon.V6.vtmpybus
llvm.hexagon.V6.vtmpybus.128B
llvm.hexagon.V6.vtmpybus.acc
llvm.hexagon.V6.vtmpybus.acc.128B
llvm.hexagon.V6.vtmpyhb
llvm.hexagon.V6.vtmpyhb.128B
llvm.hexagon.V6.vtmpyhb.acc
llvm.hexagon.V6.vtmpyhb.acc.128B
llvm.hexagon.V6.vunpackb
llvm.hexagon.V6.vunpackb.128B
llvm.hexagon.V6.vunpackh
llvm.hexagon.V6.vunpackh.128B
llvm.hexagon.V6.vunpackob
llvm.hexagon.V6.vunpackob.128B
llvm.hexagon.V6.vunpackoh
llvm.hexagon.V6.vunpackoh.128B
llvm.hexagon.V6.vunpackub
llvm.hexagon.V6.vunpackub.128B
llvm.hexagon.V6.vunpackuh
llvm.hexagon.V6.vunpackuh.128B
llvm.hexagon.V6.vxor
llvm.hexagon.V6.vxor.128B
llvm.hexagon.V6.vzb
llvm.hexagon.V6.vzb.128B
llvm.hexagon.V6.vzh
llvm.hexagon.V6.vzh.128B
llvm.hexagon.Y2.dccleana
llvm.hexagon.Y2.dccleaninva
llvm.hexagon.Y2.dcinva
llvm.hexagon.Y2.dczeroa
llvm.hexagon.Y4.l2fetch
llvm.hexagon.Y5.l2fetch
llvm.hexagon.brev.ldb
llvm.hexagon.brev.ldd
llvm.hexagon.brev.ldh
llvm.hexagon.brev.ldub
llvm.hexagon.brev.lduh
llvm.hexagon.brev.ldw
llvm.hexagon.brev.stb
llvm.hexagon.brev.std
llvm.hexagon.brev.sth
llvm.hexagon.brev.sthhi
llvm.hexagon.brev.stw
llvm.hexagon.circ.ldb
llvm.hexagon.circ.ldd
llvm.hexagon.circ.ldh
llvm.hexagon.circ.ldub
llvm.hexagon.circ.lduh
llvm.hexagon.circ.ldw
llvm.hexagon.circ.stb
llvm.hexagon.circ.std
llvm.hexagon.circ.sth
llvm.hexagon.circ.sthhi
llvm.hexagon.circ.stw
llvm.hexagon.mm256i.vaddw
llvm.hexagon.prefetch
llvm.mips.absq.s.ph
llvm.mips.absq.s.qb
llvm.mips.absq.s.w
llvm.mips.add.a.b
llvm.mips.add.a.d
llvm.mips.add.a.h
llvm.mips.add.a.w
llvm.mips.addq.ph
llvm.mips.addq.s.ph
llvm.mips.addq.s.w
llvm.mips.addqh.ph
llvm.mips.addqh.r.ph
llvm.mips.addqh.r.w
llvm.mips.addqh.w
llvm.mips.adds.a.b
llvm.mips.adds.a.d
llvm.mips.adds.a.h
llvm.mips.adds.a.w
llvm.mips.adds.s.b
llvm.mips.adds.s.d
llvm.mips.adds.s.h
llvm.mips.adds.s.w
llvm.mips.adds.u.b
llvm.mips.adds.u.d
llvm.mips.adds.u.h
llvm.mips.adds.u.w
llvm.mips.addsc
llvm.mips.addu.ph
llvm.mips.addu.qb
llvm.mips.addu.s.ph
llvm.mips.addu.s.qb
llvm.mips.adduh.qb
llvm.mips.adduh.r.qb
llvm.mips.addv.b
llvm.mips.addv.d
llvm.mips.addv.h
llvm.mips.addv.w
llvm.mips.addvi.b
llvm.mips.addvi.d
llvm.mips.addvi.h
llvm.mips.addvi.w
llvm.mips.addwc
llvm.mips.and.v
llvm.mips.andi.b
llvm.mips.append
llvm.mips.asub.s.b
llvm.mips.asub.s.d
llvm.mips.asub.s.h
llvm.mips.asub.s.w
llvm.mips.asub.u.b
llvm.mips.asub.u.d
llvm.mips.asub.u.h
llvm.mips.asub.u.w
llvm.mips.ave.s.b
llvm.mips.ave.s.d
llvm.mips.ave.s.h
llvm.mips.ave.s.w
llvm.mips.ave.u.b
llvm.mips.ave.u.d
llvm.mips.ave.u.h
llvm.mips.ave.u.w
llvm.mips.aver.s.b
llvm.mips.aver.s.d
llvm.mips.aver.s.h
llvm.mips.aver.s.w
llvm.mips.aver.u.b
llvm.mips.aver.u.d
llvm.mips.aver.u.h
llvm.mips.aver.u.w
llvm.mips.balign
llvm.mips.bclr.b
llvm.mips.bclr.d
llvm.mips.bclr.h
llvm.mips.bclr.w
llvm.mips.bclri.b
llvm.mips.bclri.d
llvm.mips.bclri.h
llvm.mips.bclri.w
llvm.mips.binsl.b
llvm.mips.binsl.d
llvm.mips.binsl.h
llvm.mips.binsl.w
llvm.mips.binsli.b
llvm.mips.binsli.d
llvm.mips.binsli.h
llvm.mips.binsli.w
llvm.mips.binsr.b
llvm.mips.binsr.d
llvm.mips.binsr.h
llvm.mips.binsr.w
llvm.mips.binsri.b
llvm.mips.binsri.d
llvm.mips.binsri.h
llvm.mips.binsri.w
llvm.mips.bitrev
llvm.mips.bmnz.v
llvm.mips.bmnzi.b
llvm.mips.bmz.v
llvm.mips.bmzi.b
llvm.mips.bneg.b
llvm.mips.bneg.d
llvm.mips.bneg.h
llvm.mips.bneg.w
llvm.mips.bnegi.b
llvm.mips.bnegi.d
llvm.mips.bnegi.h
llvm.mips.bnegi.w
llvm.mips.bnz.b
llvm.mips.bnz.d
llvm.mips.bnz.h
llvm.mips.bnz.v
llvm.mips.bnz.w
llvm.mips.bposge32
llvm.mips.bsel.v
llvm.mips.bseli.b
llvm.mips.bset.b
llvm.mips.bset.d
llvm.mips.bset.h
llvm.mips.bset.w
llvm.mips.bseti.b
llvm.mips.bseti.d
llvm.mips.bseti.h
llvm.mips.bseti.w
llvm.mips.bz.b
llvm.mips.bz.d
llvm.mips.bz.h
llvm.mips.bz.v
llvm.mips.bz.w
llvm.mips.ceq.b
llvm.mips.ceq.d
llvm.mips.ceq.h
llvm.mips.ceq.w
llvm.mips.ceqi.b
llvm.mips.ceqi.d
llvm.mips.ceqi.h
llvm.mips.ceqi.w
llvm.mips.cfcmsa
llvm.mips.cle.s.b
llvm.mips.cle.s.d
llvm.mips.cle.s.h
llvm.mips.cle.s.w
llvm.mips.cle.u.b
llvm.mips.cle.u.d
llvm.mips.cle.u.h
llvm.mips.cle.u.w
llvm.mips.clei.s.b
llvm.mips.clei.s.d
llvm.mips.clei.s.h
llvm.mips.clei.s.w
llvm.mips.clei.u.b
llvm.mips.clei.u.d
llvm.mips.clei.u.h
llvm.mips.clei.u.w
llvm.mips.clt.s.b
llvm.mips.clt.s.d
llvm.mips.clt.s.h
llvm.mips.clt.s.w
llvm.mips.clt.u.b
llvm.mips.clt.u.d
llvm.mips.clt.u.h
llvm.mips.clt.u.w
llvm.mips.clti.s.b
llvm.mips.clti.s.d
llvm.mips.clti.s.h
llvm.mips.clti.s.w
llvm.mips.clti.u.b
llvm.mips.clti.u.d
llvm.mips.clti.u.h
llvm.mips.clti.u.w
llvm.mips.cmp.eq.ph
llvm.mips.cmp.le.ph
llvm.mips.cmp.lt.ph
llvm.mips.cmpgdu.eq.qb
llvm.mips.cmpgdu.le.qb
llvm.mips.cmpgdu.lt.qb
llvm.mips.cmpgu.eq.qb
llvm.mips.cmpgu.le.qb
llvm.mips.cmpgu.lt.qb
llvm.mips.cmpu.eq.qb
llvm.mips.cmpu.le.qb
llvm.mips.cmpu.lt.qb
llvm.mips.copy.s.b
llvm.mips.copy.s.d
llvm.mips.copy.s.h
llvm.mips.copy.s.w
llvm.mips.copy.u.b
llvm.mips.copy.u.d
llvm.mips.copy.u.h
llvm.mips.copy.u.w
llvm.mips.ctcmsa
llvm.mips.div.s.b
llvm.mips.div.s.d
llvm.mips.div.s.h
llvm.mips.div.s.w
llvm.mips.div.u.b
llvm.mips.div.u.d
llvm.mips.div.u.h
llvm.mips.div.u.w
llvm.mips.dlsa
llvm.mips.dotp.s.d
llvm.mips.dotp.s.h
llvm.mips.dotp.s.w
llvm.mips.dotp.u.d
llvm.mips.dotp.u.h
llvm.mips.dotp.u.w
llvm.mips.dpa.w.ph
llvm.mips.dpadd.s.d
llvm.mips.dpadd.s.h
llvm.mips.dpadd.s.w
llvm.mips.dpadd.u.d
llvm.mips.dpadd.u.h
llvm.mips.dpadd.u.w
llvm.mips.dpaq.s.w.ph
llvm.mips.dpaq.sa.l.w
llvm.mips.dpaqx.s.w.ph
llvm.mips.dpaqx.sa.w.ph
llvm.mips.dpau.h.qbl
llvm.mips.dpau.h.qbr
llvm.mips.dpax.w.ph
llvm.mips.dps.w.ph
llvm.mips.dpsq.s.w.ph
llvm.mips.dpsq.sa.l.w
llvm.mips.dpsqx.s.w.ph
llvm.mips.dpsqx.sa.w.ph
llvm.mips.dpsu.h.qbl
llvm.mips.dpsu.h.qbr
llvm.mips.dpsub.s.d
llvm.mips.dpsub.s.h
llvm.mips.dpsub.s.w
llvm.mips.dpsub.u.d
llvm.mips.dpsub.u.h
llvm.mips.dpsub.u.w
llvm.mips.dpsx.w.ph
llvm.mips.extp
llvm.mips.extpdp
llvm.mips.extr.r.w
llvm.mips.extr.rs.w
llvm.mips.extr.s.h
llvm.mips.extr.w
llvm.mips.fadd.d
llvm.mips.fadd.w
llvm.mips.fcaf.d
llvm.mips.fcaf.w
llvm.mips.fceq.d
llvm.mips.fceq.w
llvm.mips.fclass.d
llvm.mips.fclass.w
llvm.mips.fcle.d
llvm.mips.fcle.w
llvm.mips.fclt.d
llvm.mips.fclt.w
llvm.mips.fcne.d
llvm.mips.fcne.w
llvm.mips.fcor.d
llvm.mips.fcor.w
llvm.mips.fcueq.d
llvm.mips.fcueq.w
llvm.mips.fcule.d
llvm.mips.fcule.w
llvm.mips.fcult.d
llvm.mips.fcult.w
llvm.mips.fcun.d
llvm.mips.fcun.w
llvm.mips.fcune.d
llvm.mips.fcune.w
llvm.mips.fdiv.d
llvm.mips.fdiv.w
llvm.mips.fexdo.h
llvm.mips.fexdo.w
llvm.mips.fexp2.d
llvm.mips.fexp2.w
llvm.mips.fexupl.d
llvm.mips.fexupl.w
llvm.mips.fexupr.d
llvm.mips.fexupr.w
llvm.mips.ffint.s.d
llvm.mips.ffint.s.w
llvm.mips.ffint.u.d
llvm.mips.ffint.u.w
llvm.mips.ffql.d
llvm.mips.ffql.w
llvm.mips.ffqr.d
llvm.mips.ffqr.w
llvm.mips.fill.b
llvm.mips.fill.d
llvm.mips.fill.h
llvm.mips.fill.w
llvm.mips.flog2.d
llvm.mips.flog2.w
llvm.mips.fmadd.d
llvm.mips.fmadd.w
llvm.mips.fmax.a.d
llvm.mips.fmax.a.w
llvm.mips.fmax.d
llvm.mips.fmax.w
llvm.mips.fmin.a.d
llvm.mips.fmin.a.w
llvm.mips.fmin.d
llvm.mips.fmin.w
llvm.mips.fmsub.d
llvm.mips.fmsub.w
llvm.mips.fmul.d
llvm.mips.fmul.w
llvm.mips.frcp.d
llvm.mips.frcp.w
llvm.mips.frint.d
llvm.mips.frint.w
llvm.mips.frsqrt.d
llvm.mips.frsqrt.w
llvm.mips.fsaf.d
llvm.mips.fsaf.w
llvm.mips.fseq.d
llvm.mips.fseq.w
llvm.mips.fsle.d
llvm.mips.fsle.w
llvm.mips.fslt.d
llvm.mips.fslt.w
llvm.mips.fsne.d
llvm.mips.fsne.w
llvm.mips.fsor.d
llvm.mips.fsor.w
llvm.mips.fsqrt.d
llvm.mips.fsqrt.w
llvm.mips.fsub.d
llvm.mips.fsub.w
llvm.mips.fsueq.d
llvm.mips.fsueq.w
llvm.mips.fsule.d
llvm.mips.fsule.w
llvm.mips.fsult.d
llvm.mips.fsult.w
llvm.mips.fsun.d
llvm.mips.fsun.w
llvm.mips.fsune.d
llvm.mips.fsune.w
llvm.mips.ftint.s.d
llvm.mips.ftint.s.w
llvm.mips.ftint.u.d
llvm.mips.ftint.u.w
llvm.mips.ftq.h
llvm.mips.ftq.w
llvm.mips.ftrunc.s.d
llvm.mips.ftrunc.s.w
llvm.mips.ftrunc.u.d
llvm.mips.ftrunc.u.w
llvm.mips.hadd.s.d
llvm.mips.hadd.s.h
llvm.mips.hadd.s.w
llvm.mips.hadd.u.d
llvm.mips.hadd.u.h
llvm.mips.hadd.u.w
llvm.mips.hsub.s.d
llvm.mips.hsub.s.h
llvm.mips.hsub.s.w
llvm.mips.hsub.u.d
llvm.mips.hsub.u.h
llvm.mips.hsub.u.w
llvm.mips.ilvev.b
llvm.mips.ilvev.d
llvm.mips.ilvev.h
llvm.mips.ilvev.w
llvm.mips.ilvl.b
llvm.mips.ilvl.d
llvm.mips.ilvl.h
llvm.mips.ilvl.w
llvm.mips.ilvod.b
llvm.mips.ilvod.d
llvm.mips.ilvod.h
llvm.mips.ilvod.w
llvm.mips.ilvr.b
llvm.mips.ilvr.d
llvm.mips.ilvr.h
llvm.mips.ilvr.w
llvm.mips.insert.b
llvm.mips.insert.d
llvm.mips.insert.h
llvm.mips.insert.w
llvm.mips.insv
llvm.mips.insve.b
llvm.mips.insve.d
llvm.mips.insve.h
llvm.mips.insve.w
llvm.mips.lbux
llvm.mips.ld.b
llvm.mips.ld.d
llvm.mips.ld.h
llvm.mips.ld.w
llvm.mips.ldi.b
llvm.mips.ldi.d
llvm.mips.ldi.h
llvm.mips.ldi.w
llvm.mips.lhx
llvm.mips.lsa
llvm.mips.lwx
llvm.mips.madd
llvm.mips.madd.q.h
llvm.mips.madd.q.w
llvm.mips.maddr.q.h
llvm.mips.maddr.q.w
llvm.mips.maddu
llvm.mips.maddv.b
llvm.mips.maddv.d
llvm.mips.maddv.h
llvm.mips.maddv.w
llvm.mips.maq.s.w.phl
llvm.mips.maq.s.w.phr
llvm.mips.maq.sa.w.phl
llvm.mips.maq.sa.w.phr
llvm.mips.max.a.b
llvm.mips.max.a.d
llvm.mips.max.a.h
llvm.mips.max.a.w
llvm.mips.max.s.b
llvm.mips.max.s.d
llvm.mips.max.s.h
llvm.mips.max.s.w
llvm.mips.max.u.b
llvm.mips.max.u.d
llvm.mips.max.u.h
llvm.mips.max.u.w
llvm.mips.maxi.s.b
llvm.mips.maxi.s.d
llvm.mips.maxi.s.h
llvm.mips.maxi.s.w
llvm.mips.maxi.u.b
llvm.mips.maxi.u.d
llvm.mips.maxi.u.h
llvm.mips.maxi.u.w
llvm.mips.min.a.b
llvm.mips.min.a.d
llvm.mips.min.a.h
llvm.mips.min.a.w
llvm.mips.min.s.b
llvm.mips.min.s.d
llvm.mips.min.s.h
llvm.mips.min.s.w
llvm.mips.min.u.b
llvm.mips.min.u.d
llvm.mips.min.u.h
llvm.mips.min.u.w
llvm.mips.mini.s.b
llvm.mips.mini.s.d
llvm.mips.mini.s.h
llvm.mips.mini.s.w
llvm.mips.mini.u.b
llvm.mips.mini.u.d
llvm.mips.mini.u.h
llvm.mips.mini.u.w
llvm.mips.mod.s.b
llvm.mips.mod.s.d
llvm.mips.mod.s.h
llvm.mips.mod.s.w
llvm.mips.mod.u.b
llvm.mips.mod.u.d
llvm.mips.mod.u.h
llvm.mips.mod.u.w
llvm.mips.modsub
llvm.mips.move.v
llvm.mips.msub
llvm.mips.msub.q.h
llvm.mips.msub.q.w
llvm.mips.msubr.q.h
llvm.mips.msubr.q.w
llvm.mips.msubu
llvm.mips.msubv.b
llvm.mips.msubv.d
llvm.mips.msubv.h
llvm.mips.msubv.w
llvm.mips.mthlip
llvm.mips.mul.ph
llvm.mips.mul.q.h
llvm.mips.mul.q.w
llvm.mips.mul.s.ph
llvm.mips.muleq.s.w.phl
llvm.mips.muleq.s.w.phr
llvm.mips.muleu.s.ph.qbl
llvm.mips.muleu.s.ph.qbr
llvm.mips.mulq.rs.ph
llvm.mips.mulq.rs.w
llvm.mips.mulq.s.ph
llvm.mips.mulq.s.w
llvm.mips.mulr.q.h
llvm.mips.mulr.q.w
llvm.mips.mulsa.w.ph
llvm.mips.mulsaq.s.w.ph
llvm.mips.mult
llvm.mips.multu
llvm.mips.mulv.b
llvm.mips.mulv.d
llvm.mips.mulv.h
llvm.mips.mulv.w
llvm.mips.nloc.b
llvm.mips.nloc.d
llvm.mips.nloc.h
llvm.mips.nloc.w
llvm.mips.nlzc.b
llvm.mips.nlzc.d
llvm.mips.nlzc.h
llvm.mips.nlzc.w
llvm.mips.nor.v
llvm.mips.nori.b
llvm.mips.or.v
llvm.mips.ori.b
llvm.mips.packrl.ph
llvm.mips.pckev.b
llvm.mips.pckev.d
llvm.mips.pckev.h
llvm.mips.pckev.w
llvm.mips.pckod.b
llvm.mips.pckod.d
llvm.mips.pckod.h
llvm.mips.pckod.w
llvm.mips.pcnt.b
llvm.mips.pcnt.d
llvm.mips.pcnt.h
llvm.mips.pcnt.w
llvm.mips.pick.ph
llvm.mips.pick.qb
llvm.mips.preceq.w.phl
llvm.mips.preceq.w.phr
llvm.mips.precequ.ph.qbl
llvm.mips.precequ.ph.qbla
llvm.mips.precequ.ph.qbr
llvm.mips.precequ.ph.qbra
llvm.mips.preceu.ph.qbl
llvm.mips.preceu.ph.qbla
llvm.mips.preceu.ph.qbr
llvm.mips.preceu.ph.qbra
llvm.mips.precr.qb.ph
llvm.mips.precr.sra.ph.w
llvm.mips.precr.sra.r.ph.w
llvm.mips.precrq.ph.w
llvm.mips.precrq.qb.ph
llvm.mips.precrq.rs.ph.w
llvm.mips.precrqu.s.qb.ph
llvm.mips.prepend
llvm.mips.raddu.w.qb
llvm.mips.rddsp
llvm.mips.repl.ph
llvm.mips.repl.qb
llvm.mips.sat.s.b
llvm.mips.sat.s.d
llvm.mips.sat.s.h
llvm.mips.sat.s.w
llvm.mips.sat.u.b
llvm.mips.sat.u.d
llvm.mips.sat.u.h
llvm.mips.sat.u.w
llvm.mips.shf.b
llvm.mips.shf.h
llvm.mips.shf.w
llvm.mips.shilo
llvm.mips.shll.ph
llvm.mips.shll.qb
llvm.mips.shll.s.ph
llvm.mips.shll.s.w
llvm.mips.shra.ph
llvm.mips.shra.qb
llvm.mips.shra.r.ph
llvm.mips.shra.r.qb
llvm.mips.shra.r.w
llvm.mips.shrl.ph
llvm.mips.shrl.qb
llvm.mips.sld.b
llvm.mips.sld.d
llvm.mips.sld.h
llvm.mips.sld.w
llvm.mips.sldi.b
llvm.mips.sldi.d
llvm.mips.sldi.h
llvm.mips.sldi.w
llvm.mips.sll.b
llvm.mips.sll.d
llvm.mips.sll.h
llvm.mips.sll.w
llvm.mips.slli.b
llvm.mips.slli.d
llvm.mips.slli.h
llvm.mips.slli.w
llvm.mips.splat.b
llvm.mips.splat.d
llvm.mips.splat.h
llvm.mips.splat.w
llvm.mips.splati.b
llvm.mips.splati.d
llvm.mips.splati.h
llvm.mips.splati.w
llvm.mips.sra.b
llvm.mips.sra.d
llvm.mips.sra.h
llvm.mips.sra.w
llvm.mips.srai.b
llvm.mips.srai.d
llvm.mips.srai.h
llvm.mips.srai.w
llvm.mips.srar.b
llvm.mips.srar.d
llvm.mips.srar.h
llvm.mips.srar.w
llvm.mips.srari.b
llvm.mips.srari.d
llvm.mips.srari.h
llvm.mips.srari.w
llvm.mips.srl.b
llvm.mips.srl.d
llvm.mips.srl.h
llvm.mips.srl.w
llvm.mips.srli.b
llvm.mips.srli.d
llvm.mips.srli.h
llvm.mips.srli.w
llvm.mips.srlr.b
llvm.mips.srlr.d
llvm.mips.srlr.h
llvm.mips.srlr.w
llvm.mips.srlri.b
llvm.mips.srlri.d
llvm.mips.srlri.h
llvm.mips.srlri.w
llvm.mips.st.b
llvm.mips.st.d
llvm.mips.st.h
llvm.mips.st.w
llvm.mips.subq.ph
llvm.mips.subq.s.ph
llvm.mips.subq.s.w
llvm.mips.subqh.ph
llvm.mips.subqh.r.ph
llvm.mips.subqh.r.w
llvm.mips.subqh.w
llvm.mips.subs.s.b
llvm.mips.subs.s.d
llvm.mips.subs.s.h
llvm.mips.subs.s.w
llvm.mips.subs.u.b
llvm.mips.subs.u.d
llvm.mips.subs.u.h
llvm.mips.subs.u.w
llvm.mips.subsus.u.b
llvm.mips.subsus.u.d
llvm.mips.subsus.u.h
llvm.mips.subsus.u.w
llvm.mips.subsuu.s.b
llvm.mips.subsuu.s.d
llvm.mips.subsuu.s.h
llvm.mips.subsuu.s.w
llvm.mips.subu.ph
llvm.mips.subu.qb
llvm.mips.subu.s.ph
llvm.mips.subu.s.qb
llvm.mips.subuh.qb
llvm.mips.subuh.r.qb
llvm.mips.subv.b
llvm.mips.subv.d
llvm.mips.subv.h
llvm.mips.subv.w
llvm.mips.subvi.b
llvm.mips.subvi.d
llvm.mips.subvi.h
llvm.mips.subvi.w
llvm.mips.vshf.b
llvm.mips.vshf.d
llvm.mips.vshf.h
llvm.mips.vshf.w
llvm.mips.wrdsp
llvm.mips.xor.v
llvm.mips.xori.b
llvm.nvvm.add.rm.d
llvm.nvvm.add.rm.f
llvm.nvvm.add.rm.ftz.f
llvm.nvvm.add.rn.d
llvm.nvvm.add.rn.f
llvm.nvvm.add.rn.ftz.f
llvm.nvvm.add.rp.d
llvm.nvvm.add.rp.f
llvm.nvvm.add.rp.ftz.f
llvm.nvvm.add.rz.d
llvm.nvvm.add.rz.f
llvm.nvvm.add.rz.ftz.f
llvm.nvvm.atomic.add.gen.f.cta
llvm.nvvm.atomic.add.gen.f.sys
llvm.nvvm.atomic.add.gen.i.cta
llvm.nvvm.atomic.add.gen.i.sys
llvm.nvvm.atomic.and.gen.i.cta
llvm.nvvm.atomic.and.gen.i.sys
llvm.nvvm.atomic.cas.gen.i.cta
llvm.nvvm.atomic.cas.gen.i.sys
llvm.nvvm.atomic.dec.gen.i.cta
llvm.nvvm.atomic.dec.gen.i.sys
llvm.nvvm.atomic.exch.gen.i.cta
llvm.nvvm.atomic.exch.gen.i.sys
llvm.nvvm.atomic.inc.gen.i.cta
llvm.nvvm.atomic.inc.gen.i.sys
llvm.nvvm.atomic.load.add.f32
llvm.nvvm.atomic.load.dec.32
llvm.nvvm.atomic.load.inc.32
llvm.nvvm.atomic.max.gen.i.cta
llvm.nvvm.atomic.max.gen.i.sys
llvm.nvvm.atomic.min.gen.i.cta
llvm.nvvm.atomic.min.gen.i.sys
llvm.nvvm.atomic.or.gen.i.cta
llvm.nvvm.atomic.or.gen.i.sys
llvm.nvvm.atomic.xor.gen.i.cta
llvm.nvvm.atomic.xor.gen.i.sys
llvm.nvvm.bar.sync
llvm.nvvm.barrier
llvm.nvvm.barrier.n
llvm.nvvm.barrier0
llvm.nvvm.barrier0.and
llvm.nvvm.barrier0.or
llvm.nvvm.barrier0.popc
llvm.nvvm.bitcast.d2ll
llvm.nvvm.bitcast.f2i
llvm.nvvm.bitcast.i2f
llvm.nvvm.bitcast.ll2d
llvm.nvvm.ceil.d
llvm.nvvm.ceil.f
llvm.nvvm.ceil.ftz.f
llvm.nvvm.compiler.error
llvm.nvvm.compiler.warn
llvm.nvvm.cos.approx.f
llvm.nvvm.cos.approx.ftz.f
llvm.nvvm.d2f.rm
llvm.nvvm.d2f.rm.ftz
llvm.nvvm.d2f.rn
llvm.nvvm.d2f.rn.ftz
llvm.nvvm.d2f.rp
llvm.nvvm.d2f.rp.ftz
llvm.nvvm.d2f.rz
llvm.nvvm.d2f.rz.ftz
llvm.nvvm.d2i.hi
llvm.nvvm.d2i.lo
llvm.nvvm.d2i.rm
llvm.nvvm.d2i.rn
llvm.nvvm.d2i.rp
llvm.nvvm.d2i.rz
llvm.nvvm.d2ll.rm
llvm.nvvm.d2ll.rn
llvm.nvvm.d2ll.rp
llvm.nvvm.d2ll.rz
llvm.nvvm.d2ui.rm
llvm.nvvm.d2ui.rn
llvm.nvvm.d2ui.rp
llvm.nvvm.d2ui.rz
llvm.nvvm.d2ull.rm
llvm.nvvm.d2ull.rn
llvm.nvvm.d2ull.rp
llvm.nvvm.d2ull.rz
llvm.nvvm.div.approx.f
llvm.nvvm.div.approx.ftz.f
llvm.nvvm.div.rm.d
llvm.nvvm.div.rm.f
llvm.nvvm.div.rm.ftz.f
llvm.nvvm.div.rn.d
llvm.nvvm.div.rn.f
llvm.nvvm.div.rn.ftz.f
llvm.nvvm.div.rp.d
llvm.nvvm.div.rp.f
llvm.nvvm.div.rp.ftz.f
llvm.nvvm.div.rz.d
llvm.nvvm.div.rz.f
llvm.nvvm.div.rz.ftz.f
llvm.nvvm.ex2.approx.d
llvm.nvvm.ex2.approx.f
llvm.nvvm.ex2.approx.ftz.f
llvm.nvvm.f2h.rn
llvm.nvvm.f2h.rn.ftz
llvm.nvvm.f2i.rm
llvm.nvvm.f2i.rm.ftz
llvm.nvvm.f2i.rn
llvm.nvvm.f2i.rn.ftz
llvm.nvvm.f2i.rp
llvm.nvvm.f2i.rp.ftz
llvm.nvvm.f2i.rz
llvm.nvvm.f2i.rz.ftz
llvm.nvvm.f2ll.rm
llvm.nvvm.f2ll.rm.ftz
llvm.nvvm.f2ll.rn
llvm.nvvm.f2ll.rn.ftz
llvm.nvvm.f2ll.rp
llvm.nvvm.f2ll.rp.ftz
llvm.nvvm.f2ll.rz
llvm.nvvm.f2ll.rz.ftz
llvm.nvvm.f2ui.rm
llvm.nvvm.f2ui.rm.ftz
llvm.nvvm.f2ui.rn
llvm.nvvm.f2ui.rn.ftz
llvm.nvvm.f2ui.rp
llvm.nvvm.f2ui.rp.ftz
llvm.nvvm.f2ui.rz
llvm.nvvm.f2ui.rz.ftz
llvm.nvvm.f2ull.rm
llvm.nvvm.f2ull.rm.ftz
llvm.nvvm.f2ull.rn
llvm.nvvm.f2ull.rn.ftz
llvm.nvvm.f2ull.rp
llvm.nvvm.f2ull.rp.ftz
llvm.nvvm.f2ull.rz
llvm.nvvm.f2ull.rz.ftz
llvm.nvvm.fabs.d
llvm.nvvm.fabs.f
llvm.nvvm.fabs.ftz.f
llvm.nvvm.floor.d
llvm.nvvm.floor.f
llvm.nvvm.floor.ftz.f
llvm.nvvm.fma.rm.d
llvm.nvvm.fma.rm.f
llvm.nvvm.fma.rm.ftz.f
llvm.nvvm.fma.rn.d
llvm.nvvm.fma.rn.f
llvm.nvvm.fma.rn.ftz.f
llvm.nvvm.fma.rp.d
llvm.nvvm.fma.rp.f
llvm.nvvm.fma.rp.ftz.f
llvm.nvvm.fma.rz.d
llvm.nvvm.fma.rz.f
llvm.nvvm.fma.rz.ftz.f
llvm.nvvm.fmax.d
llvm.nvvm.fmax.f
llvm.nvvm.fmax.ftz.f
llvm.nvvm.fmin.d
llvm.nvvm.fmin.f
llvm.nvvm.fmin.ftz.f
llvm.nvvm.i2d.rm
llvm.nvvm.i2d.rn
llvm.nvvm.i2d.rp
llvm.nvvm.i2d.rz
llvm.nvvm.i2f.rm
llvm.nvvm.i2f.rn
llvm.nvvm.i2f.rp
llvm.nvvm.i2f.rz
llvm.nvvm.isspacep.const
llvm.nvvm.isspacep.global
llvm.nvvm.isspacep.local
llvm.nvvm.isspacep.shared
llvm.nvvm.istypep.sampler
llvm.nvvm.istypep.surface
llvm.nvvm.istypep.texture
llvm.nvvm.ldg.global.f
llvm.nvvm.ldg.global.i
llvm.nvvm.ldg.global.p
llvm.nvvm.ldu.global.f
llvm.nvvm.ldu.global.i
llvm.nvvm.ldu.global.p
llvm.nvvm.lg2.approx.d
llvm.nvvm.lg2.approx.f
llvm.nvvm.lg2.approx.ftz.f
llvm.nvvm.ll2d.rm
llvm.nvvm.ll2d.rn
llvm.nvvm.ll2d.rp
llvm.nvvm.ll2d.rz
llvm.nvvm.ll2f.rm
llvm.nvvm.ll2f.rn
llvm.nvvm.ll2f.rp
llvm.nvvm.ll2f.rz
llvm.nvvm.lohi.i2d
llvm.nvvm.membar.cta
llvm.nvvm.membar.gl
llvm.nvvm.membar.sys
llvm.nvvm.move.double
llvm.nvvm.move.float
llvm.nvvm.move.i16
llvm.nvvm.move.i32
llvm.nvvm.move.i64
llvm.nvvm.move.ptr
llvm.nvvm.mul.rm.d
llvm.nvvm.mul.rm.f
llvm.nvvm.mul.rm.ftz.f
llvm.nvvm.mul.rn.d
llvm.nvvm.mul.rn.f
llvm.nvvm.mul.rn.ftz.f
llvm.nvvm.mul.rp.d
llvm.nvvm.mul.rp.f
llvm.nvvm.mul.rp.ftz.f
llvm.nvvm.mul.rz.d
llvm.nvvm.mul.rz.f
llvm.nvvm.mul.rz.ftz.f
llvm.nvvm.mul24.i
llvm.nvvm.mul24.ui
llvm.nvvm.mulhi.i
llvm.nvvm.mulhi.ll
llvm.nvvm.mulhi.ui
llvm.nvvm.mulhi.ull
llvm.nvvm.prmt
llvm.nvvm.ptr.constant.to.gen
llvm.nvvm.ptr.gen.to.constant
llvm.nvvm.ptr.gen.to.global
llvm.nvvm.ptr.gen.to.local
llvm.nvvm.ptr.gen.to.param
llvm.nvvm.ptr.gen.to.shared
llvm.nvvm.ptr.global.to.gen
llvm.nvvm.ptr.local.to.gen
llvm.nvvm.ptr.shared.to.gen
llvm.nvvm.rcp.approx.ftz.d
llvm.nvvm.rcp.rm.d
llvm.nvvm.rcp.rm.f
llvm.nvvm.rcp.rm.ftz.f
llvm.nvvm.rcp.rn.d
llvm.nvvm.rcp.rn.f
llvm.nvvm.rcp.rn.ftz.f
llvm.nvvm.rcp.rp.d
llvm.nvvm.rcp.rp.f
llvm.nvvm.rcp.rp.ftz.f
llvm.nvvm.rcp.rz.d
llvm.nvvm.rcp.rz.f
llvm.nvvm.rcp.rz.ftz.f
llvm.nvvm.read.ptx.sreg.clock
llvm.nvvm.read.ptx.sreg.clock64
llvm.nvvm.read.ptx.sreg.ctaid.w
llvm.nvvm.read.ptx.sreg.ctaid.x
llvm.nvvm.read.ptx.sreg.ctaid.y
llvm.nvvm.read.ptx.sreg.ctaid.z
llvm.nvvm.read.ptx.sreg.envreg0
llvm.nvvm.read.ptx.sreg.envreg1
llvm.nvvm.read.ptx.sreg.envreg10
llvm.nvvm.read.ptx.sreg.envreg11
llvm.nvvm.read.ptx.sreg.envreg12
llvm.nvvm.read.ptx.sreg.envreg13
llvm.nvvm.read.ptx.sreg.envreg14
llvm.nvvm.read.ptx.sreg.envreg15
llvm.nvvm.read.ptx.sreg.envreg16
llvm.nvvm.read.ptx.sreg.envreg17
llvm.nvvm.read.ptx.sreg.envreg18
llvm.nvvm.read.ptx.sreg.envreg19
llvm.nvvm.read.ptx.sreg.envreg2
llvm.nvvm.read.ptx.sreg.envreg20
llvm.nvvm.read.ptx.sreg.envreg21
llvm.nvvm.read.ptx.sreg.envreg22
llvm.nvvm.read.ptx.sreg.envreg23
llvm.nvvm.read.ptx.sreg.envreg24
llvm.nvvm.read.ptx.sreg.envreg25
llvm.nvvm.read.ptx.sreg.envreg26
llvm.nvvm.read.ptx.sreg.envreg27
llvm.nvvm.read.ptx.sreg.envreg28
llvm.nvvm.read.ptx.sreg.envreg29
llvm.nvvm.read.ptx.sreg.envreg3
llvm.nvvm.read.ptx.sreg.envreg30
llvm.nvvm.read.ptx.sreg.envreg31
llvm.nvvm.read.ptx.sreg.envreg4
llvm.nvvm.read.ptx.sreg.envreg5
llvm.nvvm.read.ptx.sreg.envreg6
llvm.nvvm.read.ptx.sreg.envreg7
llvm.nvvm.read.ptx.sreg.envreg8
llvm.nvvm.read.ptx.sreg.envreg9
llvm.nvvm.read.ptx.sreg.gridid
llvm.nvvm.read.ptx.sreg.laneid
llvm.nvvm.read.ptx.sreg.lanemask.eq
llvm.nvvm.read.ptx.sreg.lanemask.ge
llvm.nvvm.read.ptx.sreg.lanemask.gt
llvm.nvvm.read.ptx.sreg.lanemask.le
llvm.nvvm.read.ptx.sreg.lanemask.lt
llvm.nvvm.read.ptx.sreg.nctaid.w
llvm.nvvm.read.ptx.sreg.nctaid.x
llvm.nvvm.read.ptx.sreg.nctaid.y
llvm.nvvm.read.ptx.sreg.nctaid.z
llvm.nvvm.read.ptx.sreg.nsmid
llvm.nvvm.read.ptx.sreg.ntid.w
llvm.nvvm.read.ptx.sreg.ntid.x
llvm.nvvm.read.ptx.sreg.ntid.y
llvm.nvvm.read.ptx.sreg.ntid.z
llvm.nvvm.read.ptx.sreg.nwarpid
llvm.nvvm.read.ptx.sreg.pm0
llvm.nvvm.read.ptx.sreg.pm1
llvm.nvvm.read.ptx.sreg.pm2
llvm.nvvm.read.ptx.sreg.pm3
llvm.nvvm.read.ptx.sreg.smid
llvm.nvvm.read.ptx.sreg.tid.w
llvm.nvvm.read.ptx.sreg.tid.x
llvm.nvvm.read.ptx.sreg.tid.y
llvm.nvvm.read.ptx.sreg.tid.z
llvm.nvvm.read.ptx.sreg.warpid
llvm.nvvm.read.ptx.sreg.warpsize
llvm.nvvm.reflect
llvm.nvvm.rotate.b32
llvm.nvvm.rotate.b64
llvm.nvvm.rotate.right.b64
llvm.nvvm.round.d
llvm.nvvm.round.f
llvm.nvvm.round.ftz.f
llvm.nvvm.rsqrt.approx.d
llvm.nvvm.rsqrt.approx.f
llvm.nvvm.rsqrt.approx.ftz.f
llvm.nvvm.sad.i
llvm.nvvm.sad.ui
llvm.nvvm.saturate.d
llvm.nvvm.saturate.f
llvm.nvvm.saturate.ftz.f
llvm.nvvm.shfl.bfly.f32
llvm.nvvm.shfl.bfly.i32
llvm.nvvm.shfl.down.f32
llvm.nvvm.shfl.down.i32
llvm.nvvm.shfl.idx.f32
llvm.nvvm.shfl.idx.i32
llvm.nvvm.shfl.up.f32
llvm.nvvm.shfl.up.i32
llvm.nvvm.sin.approx.f
llvm.nvvm.sin.approx.ftz.f
llvm.nvvm.sqrt.approx.f
llvm.nvvm.sqrt.approx.ftz.f
llvm.nvvm.sqrt.f
llvm.nvvm.sqrt.rm.d
llvm.nvvm.sqrt.rm.f
llvm.nvvm.sqrt.rm.ftz.f
llvm.nvvm.sqrt.rn.d
llvm.nvvm.sqrt.rn.f
llvm.nvvm.sqrt.rn.ftz.f
llvm.nvvm.sqrt.rp.d
llvm.nvvm.sqrt.rp.f
llvm.nvvm.sqrt.rp.ftz.f
llvm.nvvm.sqrt.rz.d
llvm.nvvm.sqrt.rz.f
llvm.nvvm.sqrt.rz.ftz.f
llvm.nvvm.suld.1d.array.i16.clamp
llvm.nvvm.suld.1d.array.i16.trap
llvm.nvvm.suld.1d.array.i16.zero
llvm.nvvm.suld.1d.array.i32.clamp
llvm.nvvm.suld.1d.array.i32.trap
llvm.nvvm.suld.1d.array.i32.zero
llvm.nvvm.suld.1d.array.i64.clamp
llvm.nvvm.suld.1d.array.i64.trap
llvm.nvvm.suld.1d.array.i64.zero
llvm.nvvm.suld.1d.array.i8.clamp
llvm.nvvm.suld.1d.array.i8.trap
llvm.nvvm.suld.1d.array.i8.zero
llvm.nvvm.suld.1d.array.v2i16.clamp
llvm.nvvm.suld.1d.array.v2i16.trap
llvm.nvvm.suld.1d.array.v2i16.zero
llvm.nvvm.suld.1d.array.v2i32.clamp
llvm.nvvm.suld.1d.array.v2i32.trap
llvm.nvvm.suld.1d.array.v2i32.zero
llvm.nvvm.suld.1d.array.v2i64.clamp
llvm.nvvm.suld.1d.array.v2i64.trap
llvm.nvvm.suld.1d.array.v2i64.zero
llvm.nvvm.suld.1d.array.v2i8.clamp
llvm.nvvm.suld.1d.array.v2i8.trap
llvm.nvvm.suld.1d.array.v2i8.zero
llvm.nvvm.suld.1d.array.v4i16.clamp
llvm.nvvm.suld.1d.array.v4i16.trap
llvm.nvvm.suld.1d.array.v4i16.zero
llvm.nvvm.suld.1d.array.v4i32.clamp
llvm.nvvm.suld.1d.array.v4i32.trap
llvm.nvvm.suld.1d.array.v4i32.zero
llvm.nvvm.suld.1d.array.v4i8.clamp
llvm.nvvm.suld.1d.array.v4i8.trap
llvm.nvvm.suld.1d.array.v4i8.zero
llvm.nvvm.suld.1d.i16.clamp
llvm.nvvm.suld.1d.i16.trap
llvm.nvvm.suld.1d.i16.zero
llvm.nvvm.suld.1d.i32.clamp
llvm.nvvm.suld.1d.i32.trap
llvm.nvvm.suld.1d.i32.zero
llvm.nvvm.suld.1d.i64.clamp
llvm.nvvm.suld.1d.i64.trap
llvm.nvvm.suld.1d.i64.zero
llvm.nvvm.suld.1d.i8.clamp
llvm.nvvm.suld.1d.i8.trap
llvm.nvvm.suld.1d.i8.zero
llvm.nvvm.suld.1d.v2i16.clamp
llvm.nvvm.suld.1d.v2i16.trap
llvm.nvvm.suld.1d.v2i16.zero
llvm.nvvm.suld.1d.v2i32.clamp
llvm.nvvm.suld.1d.v2i32.trap
llvm.nvvm.suld.1d.v2i32.zero
llvm.nvvm.suld.1d.v2i64.clamp
llvm.nvvm.suld.1d.v2i64.trap
llvm.nvvm.suld.1d.v2i64.zero
llvm.nvvm.suld.1d.v2i8.clamp
llvm.nvvm.suld.1d.v2i8.trap
llvm.nvvm.suld.1d.v2i8.zero
llvm.nvvm.suld.1d.v4i16.clamp
llvm.nvvm.suld.1d.v4i16.trap
llvm.nvvm.suld.1d.v4i16.zero
llvm.nvvm.suld.1d.v4i32.clamp
llvm.nvvm.suld.1d.v4i32.trap
llvm.nvvm.suld.1d.v4i32.zero
llvm.nvvm.suld.1d.v4i8.clamp
llvm.nvvm.suld.1d.v4i8.trap
llvm.nvvm.suld.1d.v4i8.zero
llvm.nvvm.suld.2d.array.i16.clamp
llvm.nvvm.suld.2d.array.i16.trap
llvm.nvvm.suld.2d.array.i16.zero
llvm.nvvm.suld.2d.array.i32.clamp
llvm.nvvm.suld.2d.array.i32.trap
llvm.nvvm.suld.2d.array.i32.zero
llvm.nvvm.suld.2d.array.i64.clamp
llvm.nvvm.suld.2d.array.i64.trap
llvm.nvvm.suld.2d.array.i64.zero
llvm.nvvm.suld.2d.array.i8.clamp
llvm.nvvm.suld.2d.array.i8.trap
llvm.nvvm.suld.2d.array.i8.zero
llvm.nvvm.suld.2d.array.v2i16.clamp
llvm.nvvm.suld.2d.array.v2i16.trap
llvm.nvvm.suld.2d.array.v2i16.zero
llvm.nvvm.suld.2d.array.v2i32.clamp
llvm.nvvm.suld.2d.array.v2i32.trap
llvm.nvvm.suld.2d.array.v2i32.zero
llvm.nvvm.suld.2d.array.v2i64.clamp
llvm.nvvm.suld.2d.array.v2i64.trap
llvm.nvvm.suld.2d.array.v2i64.zero
llvm.nvvm.suld.2d.array.v2i8.clamp
llvm.nvvm.suld.2d.array.v2i8.trap
llvm.nvvm.suld.2d.array.v2i8.zero
llvm.nvvm.suld.2d.array.v4i16.clamp
llvm.nvvm.suld.2d.array.v4i16.trap
llvm.nvvm.suld.2d.array.v4i16.zero
llvm.nvvm.suld.2d.array.v4i32.clamp
llvm.nvvm.suld.2d.array.v4i32.trap
llvm.nvvm.suld.2d.array.v4i32.zero
llvm.nvvm.suld.2d.array.v4i8.clamp
llvm.nvvm.suld.2d.array.v4i8.trap
llvm.nvvm.suld.2d.array.v4i8.zero
llvm.nvvm.suld.2d.i16.clamp
llvm.nvvm.suld.2d.i16.trap
llvm.nvvm.suld.2d.i16.zero
llvm.nvvm.suld.2d.i32.clamp
llvm.nvvm.suld.2d.i32.trap
llvm.nvvm.suld.2d.i32.zero
llvm.nvvm.suld.2d.i64.clamp
llvm.nvvm.suld.2d.i64.trap
llvm.nvvm.suld.2d.i64.zero
llvm.nvvm.suld.2d.i8.clamp
llvm.nvvm.suld.2d.i8.trap
llvm.nvvm.suld.2d.i8.zero
llvm.nvvm.suld.2d.v2i16.clamp
llvm.nvvm.suld.2d.v2i16.trap
llvm.nvvm.suld.2d.v2i16.zero
llvm.nvvm.suld.2d.v2i32.clamp
llvm.nvvm.suld.2d.v2i32.trap
llvm.nvvm.suld.2d.v2i32.zero
llvm.nvvm.suld.2d.v2i64.clamp
llvm.nvvm.suld.2d.v2i64.trap
llvm.nvvm.suld.2d.v2i64.zero
llvm.nvvm.suld.2d.v2i8.clamp
llvm.nvvm.suld.2d.v2i8.trap
llvm.nvvm.suld.2d.v2i8.zero
llvm.nvvm.suld.2d.v4i16.clamp
llvm.nvvm.suld.2d.v4i16.trap
llvm.nvvm.suld.2d.v4i16.zero
llvm.nvvm.suld.2d.v4i32.clamp
llvm.nvvm.suld.2d.v4i32.trap
llvm.nvvm.suld.2d.v4i32.zero
llvm.nvvm.suld.2d.v4i8.clamp
llvm.nvvm.suld.2d.v4i8.trap
llvm.nvvm.suld.2d.v4i8.zero
llvm.nvvm.suld.3d.i16.clamp
llvm.nvvm.suld.3d.i16.trap
llvm.nvvm.suld.3d.i16.zero
llvm.nvvm.suld.3d.i32.clamp
llvm.nvvm.suld.3d.i32.trap
llvm.nvvm.suld.3d.i32.zero
llvm.nvvm.suld.3d.i64.clamp
llvm.nvvm.suld.3d.i64.trap
llvm.nvvm.suld.3d.i64.zero
llvm.nvvm.suld.3d.i8.clamp
llvm.nvvm.suld.3d.i8.trap
llvm.nvvm.suld.3d.i8.zero
llvm.nvvm.suld.3d.v2i16.clamp
llvm.nvvm.suld.3d.v2i16.trap
llvm.nvvm.suld.3d.v2i16.zero
llvm.nvvm.suld.3d.v2i32.clamp
llvm.nvvm.suld.3d.v2i32.trap
llvm.nvvm.suld.3d.v2i32.zero
llvm.nvvm.suld.3d.v2i64.clamp
llvm.nvvm.suld.3d.v2i64.trap
llvm.nvvm.suld.3d.v2i64.zero
llvm.nvvm.suld.3d.v2i8.clamp
llvm.nvvm.suld.3d.v2i8.trap
llvm.nvvm.suld.3d.v2i8.zero
llvm.nvvm.suld.3d.v4i16.clamp
llvm.nvvm.suld.3d.v4i16.trap
llvm.nvvm.suld.3d.v4i16.zero
llvm.nvvm.suld.3d.v4i32.clamp
llvm.nvvm.suld.3d.v4i32.trap
llvm.nvvm.suld.3d.v4i32.zero
llvm.nvvm.suld.3d.v4i8.clamp
llvm.nvvm.suld.3d.v4i8.trap
llvm.nvvm.suld.3d.v4i8.zero
llvm.nvvm.suq.array.size
llvm.nvvm.suq.channel.data.type
llvm.nvvm.suq.channel.order
llvm.nvvm.suq.depth
llvm.nvvm.suq.height
llvm.nvvm.suq.width
llvm.nvvm.sust.b.1d.array.i16.clamp
llvm.nvvm.sust.b.1d.array.i16.trap
llvm.nvvm.sust.b.1d.array.i16.zero
llvm.nvvm.sust.b.1d.array.i32.clamp
llvm.nvvm.sust.b.1d.array.i32.trap
llvm.nvvm.sust.b.1d.array.i32.zero
llvm.nvvm.sust.b.1d.array.i64.clamp
llvm.nvvm.sust.b.1d.array.i64.trap
llvm.nvvm.sust.b.1d.array.i64.zero
llvm.nvvm.sust.b.1d.array.i8.clamp
llvm.nvvm.sust.b.1d.array.i8.trap
llvm.nvvm.sust.b.1d.array.i8.zero
llvm.nvvm.sust.b.1d.array.v2i16.clamp
llvm.nvvm.sust.b.1d.array.v2i16.trap
llvm.nvvm.sust.b.1d.array.v2i16.zero
llvm.nvvm.sust.b.1d.array.v2i32.clamp
llvm.nvvm.sust.b.1d.array.v2i32.trap
llvm.nvvm.sust.b.1d.array.v2i32.zero
llvm.nvvm.sust.b.1d.array.v2i64.clamp
llvm.nvvm.sust.b.1d.array.v2i64.trap
llvm.nvvm.sust.b.1d.array.v2i64.zero
llvm.nvvm.sust.b.1d.array.v2i8.clamp
llvm.nvvm.sust.b.1d.array.v2i8.trap
llvm.nvvm.sust.b.1d.array.v2i8.zero
llvm.nvvm.sust.b.1d.array.v4i16.clamp
llvm.nvvm.sust.b.1d.array.v4i16.trap
llvm.nvvm.sust.b.1d.array.v4i16.zero
llvm.nvvm.sust.b.1d.array.v4i32.clamp
llvm.nvvm.sust.b.1d.array.v4i32.trap
llvm.nvvm.sust.b.1d.array.v4i32.zero
llvm.nvvm.sust.b.1d.array.v4i8.clamp
llvm.nvvm.sust.b.1d.array.v4i8.trap
llvm.nvvm.sust.b.1d.array.v4i8.zero
llvm.nvvm.sust.b.1d.i16.clamp
llvm.nvvm.sust.b.1d.i16.trap
llvm.nvvm.sust.b.1d.i16.zero
llvm.nvvm.sust.b.1d.i32.clamp
llvm.nvvm.sust.b.1d.i32.trap
llvm.nvvm.sust.b.1d.i32.zero
llvm.nvvm.sust.b.1d.i64.clamp
llvm.nvvm.sust.b.1d.i64.trap
llvm.nvvm.sust.b.1d.i64.zero
llvm.nvvm.sust.b.1d.i8.clamp
llvm.nvvm.sust.b.1d.i8.trap
llvm.nvvm.sust.b.1d.i8.zero
llvm.nvvm.sust.b.1d.v2i16.clamp
llvm.nvvm.sust.b.1d.v2i16.trap
llvm.nvvm.sust.b.1d.v2i16.zero
llvm.nvvm.sust.b.1d.v2i32.clamp
llvm.nvvm.sust.b.1d.v2i32.trap
llvm.nvvm.sust.b.1d.v2i32.zero
llvm.nvvm.sust.b.1d.v2i64.clamp
llvm.nvvm.sust.b.1d.v2i64.trap
llvm.nvvm.sust.b.1d.v2i64.zero
llvm.nvvm.sust.b.1d.v2i8.clamp
llvm.nvvm.sust.b.1d.v2i8.trap
llvm.nvvm.sust.b.1d.v2i8.zero
llvm.nvvm.sust.b.1d.v4i16.clamp
llvm.nvvm.sust.b.1d.v4i16.trap
llvm.nvvm.sust.b.1d.v4i16.zero
llvm.nvvm.sust.b.1d.v4i32.clamp
llvm.nvvm.sust.b.1d.v4i32.trap
llvm.nvvm.sust.b.1d.v4i32.zero
llvm.nvvm.sust.b.1d.v4i8.clamp
llvm.nvvm.sust.b.1d.v4i8.trap
llvm.nvvm.sust.b.1d.v4i8.zero
llvm.nvvm.sust.b.2d.array.i16.clamp
llvm.nvvm.sust.b.2d.array.i16.trap
llvm.nvvm.sust.b.2d.array.i16.zero
llvm.nvvm.sust.b.2d.array.i32.clamp
llvm.nvvm.sust.b.2d.array.i32.trap
llvm.nvvm.sust.b.2d.array.i32.zero
llvm.nvvm.sust.b.2d.array.i64.clamp
llvm.nvvm.sust.b.2d.array.i64.trap
llvm.nvvm.sust.b.2d.array.i64.zero
llvm.nvvm.sust.b.2d.array.i8.clamp
llvm.nvvm.sust.b.2d.array.i8.trap
llvm.nvvm.sust.b.2d.array.i8.zero
llvm.nvvm.sust.b.2d.array.v2i16.clamp
llvm.nvvm.sust.b.2d.array.v2i16.trap
llvm.nvvm.sust.b.2d.array.v2i16.zero
llvm.nvvm.sust.b.2d.array.v2i32.clamp
llvm.nvvm.sust.b.2d.array.v2i32.trap
llvm.nvvm.sust.b.2d.array.v2i32.zero
llvm.nvvm.sust.b.2d.array.v2i64.clamp
llvm.nvvm.sust.b.2d.array.v2i64.trap
llvm.nvvm.sust.b.2d.array.v2i64.zero
llvm.nvvm.sust.b.2d.array.v2i8.clamp
llvm.nvvm.sust.b.2d.array.v2i8.trap
llvm.nvvm.sust.b.2d.array.v2i8.zero
llvm.nvvm.sust.b.2d.array.v4i16.clamp
llvm.nvvm.sust.b.2d.array.v4i16.trap
llvm.nvvm.sust.b.2d.array.v4i16.zero
llvm.nvvm.sust.b.2d.array.v4i32.clamp
llvm.nvvm.sust.b.2d.array.v4i32.trap
llvm.nvvm.sust.b.2d.array.v4i32.zero
llvm.nvvm.sust.b.2d.array.v4i8.clamp
llvm.nvvm.sust.b.2d.array.v4i8.trap
llvm.nvvm.sust.b.2d.array.v4i8.zero
llvm.nvvm.sust.b.2d.i16.clamp
llvm.nvvm.sust.b.2d.i16.trap
llvm.nvvm.sust.b.2d.i16.zero
llvm.nvvm.sust.b.2d.i32.clamp
llvm.nvvm.sust.b.2d.i32.trap
llvm.nvvm.sust.b.2d.i32.zero
llvm.nvvm.sust.b.2d.i64.clamp
llvm.nvvm.sust.b.2d.i64.trap
llvm.nvvm.sust.b.2d.i64.zero
llvm.nvvm.sust.b.2d.i8.clamp
llvm.nvvm.sust.b.2d.i8.trap
llvm.nvvm.sust.b.2d.i8.zero
llvm.nvvm.sust.b.2d.v2i16.clamp
llvm.nvvm.sust.b.2d.v2i16.trap
llvm.nvvm.sust.b.2d.v2i16.zero
llvm.nvvm.sust.b.2d.v2i32.clamp
llvm.nvvm.sust.b.2d.v2i32.trap
llvm.nvvm.sust.b.2d.v2i32.zero
llvm.nvvm.sust.b.2d.v2i64.clamp
llvm.nvvm.sust.b.2d.v2i64.trap
llvm.nvvm.sust.b.2d.v2i64.zero
llvm.nvvm.sust.b.2d.v2i8.clamp
llvm.nvvm.sust.b.2d.v2i8.trap
llvm.nvvm.sust.b.2d.v2i8.zero
llvm.nvvm.sust.b.2d.v4i16.clamp
llvm.nvvm.sust.b.2d.v4i16.trap
llvm.nvvm.sust.b.2d.v4i16.zero
llvm.nvvm.sust.b.2d.v4i32.clamp
llvm.nvvm.sust.b.2d.v4i32.trap
llvm.nvvm.sust.b.2d.v4i32.zero
llvm.nvvm.sust.b.2d.v4i8.clamp
llvm.nvvm.sust.b.2d.v4i8.trap
llvm.nvvm.sust.b.2d.v4i8.zero
llvm.nvvm.sust.b.3d.i16.clamp
llvm.nvvm.sust.b.3d.i16.trap
llvm.nvvm.sust.b.3d.i16.zero
llvm.nvvm.sust.b.3d.i32.clamp
llvm.nvvm.sust.b.3d.i32.trap
llvm.nvvm.sust.b.3d.i32.zero
llvm.nvvm.sust.b.3d.i64.clamp
llvm.nvvm.sust.b.3d.i64.trap
llvm.nvvm.sust.b.3d.i64.zero
llvm.nvvm.sust.b.3d.i8.clamp
llvm.nvvm.sust.b.3d.i8.trap
llvm.nvvm.sust.b.3d.i8.zero
llvm.nvvm.sust.b.3d.v2i16.clamp
llvm.nvvm.sust.b.3d.v2i16.trap
llvm.nvvm.sust.b.3d.v2i16.zero
llvm.nvvm.sust.b.3d.v2i32.clamp
llvm.nvvm.sust.b.3d.v2i32.trap
llvm.nvvm.sust.b.3d.v2i32.zero
llvm.nvvm.sust.b.3d.v2i64.clamp
llvm.nvvm.sust.b.3d.v2i64.trap
llvm.nvvm.sust.b.3d.v2i64.zero
llvm.nvvm.sust.b.3d.v2i8.clamp
llvm.nvvm.sust.b.3d.v2i8.trap
llvm.nvvm.sust.b.3d.v2i8.zero
llvm.nvvm.sust.b.3d.v4i16.clamp
llvm.nvvm.sust.b.3d.v4i16.trap
llvm.nvvm.sust.b.3d.v4i16.zero
llvm.nvvm.sust.b.3d.v4i32.clamp
llvm.nvvm.sust.b.3d.v4i32.trap
llvm.nvvm.sust.b.3d.v4i32.zero
llvm.nvvm.sust.b.3d.v4i8.clamp
llvm.nvvm.sust.b.3d.v4i8.trap
llvm.nvvm.sust.b.3d.v4i8.zero
llvm.nvvm.sust.p.1d.array.i16.trap
llvm.nvvm.sust.p.1d.array.i32.trap
llvm.nvvm.sust.p.1d.array.i8.trap
llvm.nvvm.sust.p.1d.array.v2i16.trap
llvm.nvvm.sust.p.1d.array.v2i32.trap
llvm.nvvm.sust.p.1d.array.v2i8.trap
llvm.nvvm.sust.p.1d.array.v4i16.trap
llvm.nvvm.sust.p.1d.array.v4i32.trap
llvm.nvvm.sust.p.1d.array.v4i8.trap
llvm.nvvm.sust.p.1d.i16.trap
llvm.nvvm.sust.p.1d.i32.trap
llvm.nvvm.sust.p.1d.i8.trap
llvm.nvvm.sust.p.1d.v2i16.trap
llvm.nvvm.sust.p.1d.v2i32.trap
llvm.nvvm.sust.p.1d.v2i8.trap
llvm.nvvm.sust.p.1d.v4i16.trap
llvm.nvvm.sust.p.1d.v4i32.trap
llvm.nvvm.sust.p.1d.v4i8.trap
llvm.nvvm.sust.p.2d.array.i16.trap
llvm.nvvm.sust.p.2d.array.i32.trap
llvm.nvvm.sust.p.2d.array.i8.trap
llvm.nvvm.sust.p.2d.array.v2i16.trap
llvm.nvvm.sust.p.2d.array.v2i32.trap
llvm.nvvm.sust.p.2d.array.v2i8.trap
llvm.nvvm.sust.p.2d.array.v4i16.trap
llvm.nvvm.sust.p.2d.array.v4i32.trap
llvm.nvvm.sust.p.2d.array.v4i8.trap
llvm.nvvm.sust.p.2d.i16.trap
llvm.nvvm.sust.p.2d.i32.trap
llvm.nvvm.sust.p.2d.i8.trap
llvm.nvvm.sust.p.2d.v2i16.trap
llvm.nvvm.sust.p.2d.v2i32.trap
llvm.nvvm.sust.p.2d.v2i8.trap
llvm.nvvm.sust.p.2d.v4i16.trap
llvm.nvvm.sust.p.2d.v4i32.trap
llvm.nvvm.sust.p.2d.v4i8.trap
llvm.nvvm.sust.p.3d.i16.trap
llvm.nvvm.sust.p.3d.i32.trap
llvm.nvvm.sust.p.3d.i8.trap
llvm.nvvm.sust.p.3d.v2i16.trap
llvm.nvvm.sust.p.3d.v2i32.trap
llvm.nvvm.sust.p.3d.v2i8.trap
llvm.nvvm.sust.p.3d.v4i16.trap
llvm.nvvm.sust.p.3d.v4i32.trap
llvm.nvvm.sust.p.3d.v4i8.trap
llvm.nvvm.swap.lo.hi.b64
llvm.nvvm.tex.1d.array.grad.v4f32.f32
llvm.nvvm.tex.1d.array.grad.v4s32.f32
llvm.nvvm.tex.1d.array.grad.v4u32.f32
llvm.nvvm.tex.1d.array.level.v4f32.f32
llvm.nvvm.tex.1d.array.level.v4s32.f32
llvm.nvvm.tex.1d.array.level.v4u32.f32
llvm.nvvm.tex.1d.array.v4f32.f32
llvm.nvvm.tex.1d.array.v4f32.s32
llvm.nvvm.tex.1d.array.v4s32.f32
llvm.nvvm.tex.1d.array.v4s32.s32
llvm.nvvm.tex.1d.array.v4u32.f32
llvm.nvvm.tex.1d.array.v4u32.s32
llvm.nvvm.tex.1d.grad.v4f32.f32
llvm.nvvm.tex.1d.grad.v4s32.f32
llvm.nvvm.tex.1d.grad.v4u32.f32
llvm.nvvm.tex.1d.level.v4f32.f32
llvm.nvvm.tex.1d.level.v4s32.f32
llvm.nvvm.tex.1d.level.v4u32.f32
llvm.nvvm.tex.1d.v4f32.f32
llvm.nvvm.tex.1d.v4f32.s32
llvm.nvvm.tex.1d.v4s32.f32
llvm.nvvm.tex.1d.v4s32.s32
llvm.nvvm.tex.1d.v4u32.f32
llvm.nvvm.tex.1d.v4u32.s32
llvm.nvvm.tex.2d.array.grad.v4f32.f32
llvm.nvvm.tex.2d.array.grad.v4s32.f32
llvm.nvvm.tex.2d.array.grad.v4u32.f32
llvm.nvvm.tex.2d.array.level.v4f32.f32
llvm.nvvm.tex.2d.array.level.v4s32.f32
llvm.nvvm.tex.2d.array.level.v4u32.f32
llvm.nvvm.tex.2d.array.v4f32.f32
llvm.nvvm.tex.2d.array.v4f32.s32
llvm.nvvm.tex.2d.array.v4s32.f32
llvm.nvvm.tex.2d.array.v4s32.s32
llvm.nvvm.tex.2d.array.v4u32.f32
llvm.nvvm.tex.2d.array.v4u32.s32
llvm.nvvm.tex.2d.grad.v4f32.f32
llvm.nvvm.tex.2d.grad.v4s32.f32
llvm.nvvm.tex.2d.grad.v4u32.f32
llvm.nvvm.tex.2d.level.v4f32.f32
llvm.nvvm.tex.2d.level.v4s32.f32
llvm.nvvm.tex.2d.level.v4u32.f32
llvm.nvvm.tex.2d.v4f32.f32
llvm.nvvm.tex.2d.v4f32.s32
llvm.nvvm.tex.2d.v4s32.f32
llvm.nvvm.tex.2d.v4s32.s32
llvm.nvvm.tex.2d.v4u32.f32
llvm.nvvm.tex.2d.v4u32.s32
llvm.nvvm.tex.3d.grad.v4f32.f32
llvm.nvvm.tex.3d.grad.v4s32.f32
llvm.nvvm.tex.3d.grad.v4u32.f32
llvm.nvvm.tex.3d.level.v4f32.f32
llvm.nvvm.tex.3d.level.v4s32.f32
llvm.nvvm.tex.3d.level.v4u32.f32
llvm.nvvm.tex.3d.v4f32.f32
llvm.nvvm.tex.3d.v4f32.s32
llvm.nvvm.tex.3d.v4s32.f32
llvm.nvvm.tex.3d.v4s32.s32
llvm.nvvm.tex.3d.v4u32.f32
llvm.nvvm.tex.3d.v4u32.s32
llvm.nvvm.tex.cube.array.level.v4f32.f32
llvm.nvvm.tex.cube.array.level.v4s32.f32
llvm.nvvm.tex.cube.array.level.v4u32.f32
llvm.nvvm.tex.cube.array.v4f32.f32
llvm.nvvm.tex.cube.array.v4s32.f32
llvm.nvvm.tex.cube.array.v4u32.f32
llvm.nvvm.tex.cube.level.v4f32.f32
llvm.nvvm.tex.cube.level.v4s32.f32
llvm.nvvm.tex.cube.level.v4u32.f32
llvm.nvvm.tex.cube.v4f32.f32
llvm.nvvm.tex.cube.v4s32.f32
llvm.nvvm.tex.cube.v4u32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4f32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4s32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4u32.f32
llvm.nvvm.tex.unified.1d.array.level.v4f32.f32
llvm.nvvm.tex.unified.1d.array.level.v4s32.f32
llvm.nvvm.tex.unified.1d.array.level.v4u32.f32
llvm.nvvm.tex.unified.1d.array.v4f32.f32
llvm.nvvm.tex.unified.1d.array.v4f32.s32
llvm.nvvm.tex.unified.1d.array.v4s32.f32
llvm.nvvm.tex.unified.1d.array.v4s32.s32
llvm.nvvm.tex.unified.1d.array.v4u32.f32
llvm.nvvm.tex.unified.1d.array.v4u32.s32
llvm.nvvm.tex.unified.1d.grad.v4f32.f32
llvm.nvvm.tex.unified.1d.grad.v4s32.f32
llvm.nvvm.tex.unified.1d.grad.v4u32.f32
llvm.nvvm.tex.unified.1d.level.v4f32.f32
llvm.nvvm.tex.unified.1d.level.v4s32.f32
llvm.nvvm.tex.unified.1d.level.v4u32.f32
llvm.nvvm.tex.unified.1d.v4f32.f32
llvm.nvvm.tex.unified.1d.v4f32.s32
llvm.nvvm.tex.unified.1d.v4s32.f32
llvm.nvvm.tex.unified.1d.v4s32.s32
llvm.nvvm.tex.unified.1d.v4u32.f32
llvm.nvvm.tex.unified.1d.v4u32.s32
llvm.nvvm.tex.unified.2d.array.grad.v4f32.f32
llvm.nvvm.tex.unified.2d.array.grad.v4s32.f32
llvm.nvvm.tex.unified.2d.array.grad.v4u32.f32
llvm.nvvm.tex.unified.2d.array.level.v4f32.f32
llvm.nvvm.tex.unified.2d.array.level.v4s32.f32
llvm.nvvm.tex.unified.2d.array.level.v4u32.f32
llvm.nvvm.tex.unified.2d.array.v4f32.f32
llvm.nvvm.tex.unified.2d.array.v4f32.s32
llvm.nvvm.tex.unified.2d.array.v4s32.f32
llvm.nvvm.tex.unified.2d.array.v4s32.s32
llvm.nvvm.tex.unified.2d.array.v4u32.f32
llvm.nvvm.tex.unified.2d.array.v4u32.s32
llvm.nvvm.tex.unified.2d.grad.v4f32.f32
llvm.nvvm.tex.unified.2d.grad.v4s32.f32
llvm.nvvm.tex.unified.2d.grad.v4u32.f32
llvm.nvvm.tex.unified.2d.level.v4f32.f32
llvm.nvvm.tex.unified.2d.level.v4s32.f32
llvm.nvvm.tex.unified.2d.level.v4u32.f32
llvm.nvvm.tex.unified.2d.v4f32.f32
llvm.nvvm.tex.unified.2d.v4f32.s32
llvm.nvvm.tex.unified.2d.v4s32.f32
llvm.nvvm.tex.unified.2d.v4s32.s32
llvm.nvvm.tex.unified.2d.v4u32.f32
llvm.nvvm.tex.unified.2d.v4u32.s32
llvm.nvvm.tex.unified.3d.grad.v4f32.f32
llvm.nvvm.tex.unified.3d.grad.v4s32.f32
llvm.nvvm.tex.unified.3d.grad.v4u32.f32
llvm.nvvm.tex.unified.3d.level.v4f32.f32
llvm.nvvm.tex.unified.3d.level.v4s32.f32
llvm.nvvm.tex.unified.3d.level.v4u32.f32
llvm.nvvm.tex.unified.3d.v4f32.f32
llvm.nvvm.tex.unified.3d.v4f32.s32
llvm.nvvm.tex.unified.3d.v4s32.f32
llvm.nvvm.tex.unified.3d.v4s32.s32
llvm.nvvm.tex.unified.3d.v4u32.f32
llvm.nvvm.tex.unified.3d.v4u32.s32
llvm.nvvm.tex.unified.cube.array.level.v4f32.f32
llvm.nvvm.tex.unified.cube.array.level.v4s32.f32
llvm.nvvm.tex.unified.cube.array.level.v4u32.f32
llvm.nvvm.tex.unified.cube.array.v4f32.f32
llvm.nvvm.tex.unified.cube.array.v4s32.f32
llvm.nvvm.tex.unified.cube.array.v4u32.f32
llvm.nvvm.tex.unified.cube.level.v4f32.f32
llvm.nvvm.tex.unified.cube.level.v4s32.f32
llvm.nvvm.tex.unified.cube.level.v4u32.f32
llvm.nvvm.tex.unified.cube.v4f32.f32
llvm.nvvm.tex.unified.cube.v4s32.f32
llvm.nvvm.tex.unified.cube.v4u32.f32
llvm.nvvm.texsurf.handle
llvm.nvvm.texsurf.handle.internal
llvm.nvvm.tld4.a.2d.v4f32.f32
llvm.nvvm.tld4.a.2d.v4s32.f32
llvm.nvvm.tld4.a.2d.v4u32.f32
llvm.nvvm.tld4.b.2d.v4f32.f32
llvm.nvvm.tld4.b.2d.v4s32.f32
llvm.nvvm.tld4.b.2d.v4u32.f32
llvm.nvvm.tld4.g.2d.v4f32.f32
llvm.nvvm.tld4.g.2d.v4s32.f32
llvm.nvvm.tld4.g.2d.v4u32.f32
llvm.nvvm.tld4.r.2d.v4f32.f32
llvm.nvvm.tld4.r.2d.v4s32.f32
llvm.nvvm.tld4.r.2d.v4u32.f32
llvm.nvvm.tld4.unified.a.2d.v4f32.f32
llvm.nvvm.tld4.unified.a.2d.v4s32.f32
llvm.nvvm.tld4.unified.a.2d.v4u32.f32
llvm.nvvm.tld4.unified.b.2d.v4f32.f32
llvm.nvvm.tld4.unified.b.2d.v4s32.f32
llvm.nvvm.tld4.unified.b.2d.v4u32.f32
llvm.nvvm.tld4.unified.g.2d.v4f32.f32
llvm.nvvm.tld4.unified.g.2d.v4s32.f32
llvm.nvvm.tld4.unified.g.2d.v4u32.f32
llvm.nvvm.tld4.unified.r.2d.v4f32.f32
llvm.nvvm.tld4.unified.r.2d.v4s32.f32
llvm.nvvm.tld4.unified.r.2d.v4u32.f32
llvm.nvvm.trunc.d
llvm.nvvm.trunc.f
llvm.nvvm.trunc.ftz.f
llvm.nvvm.txq.array.size
llvm.nvvm.txq.channel.data.type
llvm.nvvm.txq.channel.order
llvm.nvvm.txq.depth
llvm.nvvm.txq.height
llvm.nvvm.txq.num.mipmap.levels
llvm.nvvm.txq.num.samples
llvm.nvvm.txq.width
llvm.nvvm.ui2d.rm
llvm.nvvm.ui2d.rn
llvm.nvvm.ui2d.rp
llvm.nvvm.ui2d.rz
llvm.nvvm.ui2f.rm
llvm.nvvm.ui2f.rn
llvm.nvvm.ui2f.rp
llvm.nvvm.ui2f.rz
llvm.nvvm.ull2d.rm
llvm.nvvm.ull2d.rn
llvm.nvvm.ull2d.rp
llvm.nvvm.ull2d.rz
llvm.nvvm.ull2f.rm
llvm.nvvm.ull2f.rn
llvm.nvvm.ull2f.rp
llvm.nvvm.ull2f.rz
llvm.ppc.altivec.crypto.vcipher
llvm.ppc.altivec.crypto.vcipherlast
llvm.ppc.altivec.crypto.vncipher
llvm.ppc.altivec.crypto.vncipherlast
llvm.ppc.altivec.crypto.vpermxor
llvm.ppc.altivec.crypto.vpmsumb
llvm.ppc.altivec.crypto.vpmsumd
llvm.ppc.altivec.crypto.vpmsumh
llvm.ppc.altivec.crypto.vpmsumw
llvm.ppc.altivec.crypto.vsbox
llvm.ppc.altivec.crypto.vshasigmad
llvm.ppc.altivec.crypto.vshasigmaw
llvm.ppc.altivec.dss
llvm.ppc.altivec.dssall
llvm.ppc.altivec.dst
llvm.ppc.altivec.dstst
llvm.ppc.altivec.dststt
llvm.ppc.altivec.dstt
llvm.ppc.altivec.lvebx
llvm.ppc.altivec.lvehx
llvm.ppc.altivec.lvewx
llvm.ppc.altivec.lvsl
llvm.ppc.altivec.lvsr
llvm.ppc.altivec.lvx
llvm.ppc.altivec.lvxl
llvm.ppc.altivec.mfvscr
llvm.ppc.altivec.mtvscr
llvm.ppc.altivec.stvebx
llvm.ppc.altivec.stvehx
llvm.ppc.altivec.stvewx
llvm.ppc.altivec.stvx
llvm.ppc.altivec.stvxl
llvm.ppc.altivec.vabsdub
llvm.ppc.altivec.vabsduh
llvm.ppc.altivec.vabsduw
llvm.ppc.altivec.vaddcuq
llvm.ppc.altivec.vaddcuw
llvm.ppc.altivec.vaddecuq
llvm.ppc.altivec.vaddeuqm
llvm.ppc.altivec.vaddsbs
llvm.ppc.altivec.vaddshs
llvm.ppc.altivec.vaddsws
llvm.ppc.altivec.vaddubs
llvm.ppc.altivec.vadduhs
llvm.ppc.altivec.vadduws
llvm.ppc.altivec.vavgsb
llvm.ppc.altivec.vavgsh
llvm.ppc.altivec.vavgsw
llvm.ppc.altivec.vavgub
llvm.ppc.altivec.vavguh
llvm.ppc.altivec.vavguw
llvm.ppc.altivec.vbpermq
llvm.ppc.altivec.vcfsx
llvm.ppc.altivec.vcfux
llvm.ppc.altivec.vclzlsbb
llvm.ppc.altivec.vcmpbfp
llvm.ppc.altivec.vcmpbfp.p
llvm.ppc.altivec.vcmpeqfp
llvm.ppc.altivec.vcmpeqfp.p
llvm.ppc.altivec.vcmpequb
llvm.ppc.altivec.vcmpequb.p
llvm.ppc.altivec.vcmpequd
llvm.ppc.altivec.vcmpequd.p
llvm.ppc.altivec.vcmpequh
llvm.ppc.altivec.vcmpequh.p
llvm.ppc.altivec.vcmpequw
llvm.ppc.altivec.vcmpequw.p
llvm.ppc.altivec.vcmpgefp
llvm.ppc.altivec.vcmpgefp.p
llvm.ppc.altivec.vcmpgtfp
llvm.ppc.altivec.vcmpgtfp.p
llvm.ppc.altivec.vcmpgtsb
llvm.ppc.altivec.vcmpgtsb.p
llvm.ppc.altivec.vcmpgtsd
llvm.ppc.altivec.vcmpgtsd.p
llvm.ppc.altivec.vcmpgtsh
llvm.ppc.altivec.vcmpgtsh.p
llvm.ppc.altivec.vcmpgtsw
llvm.ppc.altivec.vcmpgtsw.p
llvm.ppc.altivec.vcmpgtub
llvm.ppc.altivec.vcmpgtub.p
llvm.ppc.altivec.vcmpgtud
llvm.ppc.altivec.vcmpgtud.p
llvm.ppc.altivec.vcmpgtuh
llvm.ppc.altivec.vcmpgtuh.p
llvm.ppc.altivec.vcmpgtuw
llvm.ppc.altivec.vcmpgtuw.p
llvm.ppc.altivec.vcmpneb
llvm.ppc.altivec.vcmpneb.p
llvm.ppc.altivec.vcmpneh
llvm.ppc.altivec.vcmpneh.p
llvm.ppc.altivec.vcmpnew
llvm.ppc.altivec.vcmpnew.p
llvm.ppc.altivec.vcmpnezb
llvm.ppc.altivec.vcmpnezb.p
llvm.ppc.altivec.vcmpnezh
llvm.ppc.altivec.vcmpnezh.p
llvm.ppc.altivec.vcmpnezw
llvm.ppc.altivec.vcmpnezw.p
llvm.ppc.altivec.vctsxs
llvm.ppc.altivec.vctuxs
llvm.ppc.altivec.vctzlsbb
llvm.ppc.altivec.vexptefp
llvm.ppc.altivec.vgbbd
llvm.ppc.altivec.vlogefp
llvm.ppc.altivec.vmaddfp
llvm.ppc.altivec.vmaxfp
llvm.ppc.altivec.vmaxsb
llvm.ppc.altivec.vmaxsd
llvm.ppc.altivec.vmaxsh
llvm.ppc.altivec.vmaxsw
llvm.ppc.altivec.vmaxub
llvm.ppc.altivec.vmaxud
llvm.ppc.altivec.vmaxuh
llvm.ppc.altivec.vmaxuw
llvm.ppc.altivec.vmhaddshs
llvm.ppc.altivec.vmhraddshs
llvm.ppc.altivec.vminfp
llvm.ppc.altivec.vminsb
llvm.ppc.altivec.vminsd
llvm.ppc.altivec.vminsh
llvm.ppc.altivec.vminsw
llvm.ppc.altivec.vminub
llvm.ppc.altivec.vminud
llvm.ppc.altivec.vminuh
llvm.ppc.altivec.vminuw
llvm.ppc.altivec.vmladduhm
llvm.ppc.altivec.vmsummbm
llvm.ppc.altivec.vmsumshm
llvm.ppc.altivec.vmsumshs
llvm.ppc.altivec.vmsumubm
llvm.ppc.altivec.vmsumuhm
llvm.ppc.altivec.vmsumuhs
llvm.ppc.altivec.vmulesb
llvm.ppc.altivec.vmulesh
llvm.ppc.altivec.vmulesw
llvm.ppc.altivec.vmuleub
llvm.ppc.altivec.vmuleuh
llvm.ppc.altivec.vmuleuw
llvm.ppc.altivec.vmulosb
llvm.ppc.altivec.vmulosh
llvm.ppc.altivec.vmulosw
llvm.ppc.altivec.vmuloub
llvm.ppc.altivec.vmulouh
llvm.ppc.altivec.vmulouw
llvm.ppc.altivec.vnmsubfp
llvm.ppc.altivec.vperm
llvm.ppc.altivec.vpkpx
llvm.ppc.altivec.vpksdss
llvm.ppc.altivec.vpksdus
llvm.ppc.altivec.vpkshss
llvm.ppc.altivec.vpkshus
llvm.ppc.altivec.vpkswss
llvm.ppc.altivec.vpkswus
llvm.ppc.altivec.vpkudus
llvm.ppc.altivec.vpkuhus
llvm.ppc.altivec.vpkuwus
llvm.ppc.altivec.vprtybd
llvm.ppc.altivec.vprtybq
llvm.ppc.altivec.vprtybw
llvm.ppc.altivec.vrefp
llvm.ppc.altivec.vrfim
llvm.ppc.altivec.vrfin
llvm.ppc.altivec.vrfip
llvm.ppc.altivec.vrfiz
llvm.ppc.altivec.vrlb
llvm.ppc.altivec.vrld
llvm.ppc.altivec.vrldmi
llvm.ppc.altivec.vrldnm
llvm.ppc.altivec.vrlh
llvm.ppc.altivec.vrlw
llvm.ppc.altivec.vrlwmi
llvm.ppc.altivec.vrlwnm
llvm.ppc.altivec.vrsqrtefp
llvm.ppc.altivec.vsel
llvm.ppc.altivec.vsl
llvm.ppc.altivec.vslb
llvm.ppc.altivec.vslh
llvm.ppc.altivec.vslo
llvm.ppc.altivec.vslv
llvm.ppc.altivec.vslw
llvm.ppc.altivec.vsr
llvm.ppc.altivec.vsrab
llvm.ppc.altivec.vsrah
llvm.ppc.altivec.vsraw
llvm.ppc.altivec.vsrb
llvm.ppc.altivec.vsrh
llvm.ppc.altivec.vsro
llvm.ppc.altivec.vsrv
llvm.ppc.altivec.vsrw
llvm.ppc.altivec.vsubcuq
llvm.ppc.altivec.vsubcuw
llvm.ppc.altivec.vsubecuq
llvm.ppc.altivec.vsubeuqm
llvm.ppc.altivec.vsubsbs
llvm.ppc.altivec.vsubshs
llvm.ppc.altivec.vsubsws
llvm.ppc.altivec.vsububs
llvm.ppc.altivec.vsubuhs
llvm.ppc.altivec.vsubuws
llvm.ppc.altivec.vsum2sws
llvm.ppc.altivec.vsum4sbs
llvm.ppc.altivec.vsum4shs
llvm.ppc.altivec.vsum4ubs
llvm.ppc.altivec.vsumsws
llvm.ppc.altivec.vupkhpx
llvm.ppc.altivec.vupkhsb
llvm.ppc.altivec.vupkhsh
llvm.ppc.altivec.vupkhsw
llvm.ppc.altivec.vupklpx
llvm.ppc.altivec.vupklsb
llvm.ppc.altivec.vupklsh
llvm.ppc.altivec.vupklsw
llvm.ppc.bpermd
llvm.ppc.cfence
llvm.ppc.dcba
llvm.ppc.dcbf
llvm.ppc.dcbi
llvm.ppc.dcbst
llvm.ppc.dcbt
llvm.ppc.dcbtst
llvm.ppc.dcbz
llvm.ppc.dcbzl
llvm.ppc.divde
llvm.ppc.divdeu
llvm.ppc.divwe
llvm.ppc.divweu
llvm.ppc.get.texasr
llvm.ppc.get.texasru
llvm.ppc.get.tfhar
llvm.ppc.get.tfiar
llvm.ppc.is.decremented.ctr.nonzero
llvm.ppc.lwsync
llvm.ppc.mtctr
llvm.ppc.qpx.qvfabs
llvm.ppc.qpx.qvfadd
llvm.ppc.qpx.qvfadds
llvm.ppc.qpx.qvfcfid
llvm.ppc.qpx.qvfcfids
llvm.ppc.qpx.qvfcfidu
llvm.ppc.qpx.qvfcfidus
llvm.ppc.qpx.qvfcmpeq
llvm.ppc.qpx.qvfcmpgt
llvm.ppc.qpx.qvfcmplt
llvm.ppc.qpx.qvfcpsgn
llvm.ppc.qpx.qvfctid
llvm.ppc.qpx.qvfctidu
llvm.ppc.qpx.qvfctiduz
llvm.ppc.qpx.qvfctidz
llvm.ppc.qpx.qvfctiw
llvm.ppc.qpx.qvfctiwu
llvm.ppc.qpx.qvfctiwuz
llvm.ppc.qpx.qvfctiwz
llvm.ppc.qpx.qvflogical
llvm.ppc.qpx.qvfmadd
llvm.ppc.qpx.qvfmadds
llvm.ppc.qpx.qvfmsub
llvm.ppc.qpx.qvfmsubs
llvm.ppc.qpx.qvfmul
llvm.ppc.qpx.qvfmuls
llvm.ppc.qpx.qvfnabs
llvm.ppc.qpx.qvfneg
llvm.ppc.qpx.qvfnmadd
llvm.ppc.qpx.qvfnmadds
llvm.ppc.qpx.qvfnmsub
llvm.ppc.qpx.qvfnmsubs
llvm.ppc.qpx.qvfperm
llvm.ppc.qpx.qvfre
llvm.ppc.qpx.qvfres
llvm.ppc.qpx.qvfrim
llvm.ppc.qpx.qvfrin
llvm.ppc.qpx.qvfrip
llvm.ppc.qpx.qvfriz
llvm.ppc.qpx.qvfrsp
llvm.ppc.qpx.qvfrsqrte
llvm.ppc.qpx.qvfrsqrtes
llvm.ppc.qpx.qvfsel
llvm.ppc.qpx.qvfsub
llvm.ppc.qpx.qvfsubs
llvm.ppc.qpx.qvftstnan
llvm.ppc.qpx.qvfxmadd
llvm.ppc.qpx.qvfxmadds
llvm.ppc.qpx.qvfxmul
llvm.ppc.qpx.qvfxmuls
llvm.ppc.qpx.qvfxxcpnmadd
llvm.ppc.qpx.qvfxxcpnmadds
llvm.ppc.qpx.qvfxxmadd
llvm.ppc.qpx.qvfxxmadds
llvm.ppc.qpx.qvfxxnpmadd
llvm.ppc.qpx.qvfxxnpmadds
llvm.ppc.qpx.qvgpci
llvm.ppc.qpx.qvlfcd
llvm.ppc.qpx.qvlfcda
llvm.ppc.qpx.qvlfcs
llvm.ppc.qpx.qvlfcsa
llvm.ppc.qpx.qvlfd
llvm.ppc.qpx.qvlfda
llvm.ppc.qpx.qvlfiwa
llvm.ppc.qpx.qvlfiwaa
llvm.ppc.qpx.qvlfiwz
llvm.ppc.qpx.qvlfiwza
llvm.ppc.qpx.qvlfs
llvm.ppc.qpx.qvlfsa
llvm.ppc.qpx.qvlpcld
llvm.ppc.qpx.qvlpcls
llvm.ppc.qpx.qvlpcrd
llvm.ppc.qpx.qvlpcrs
llvm.ppc.qpx.qvstfcd
llvm.ppc.qpx.qvstfcda
llvm.ppc.qpx.qvstfcs
llvm.ppc.qpx.qvstfcsa
llvm.ppc.qpx.qvstfd
llvm.ppc.qpx.qvstfda
llvm.ppc.qpx.qvstfiw
llvm.ppc.qpx.qvstfiwa
llvm.ppc.qpx.qvstfs
llvm.ppc.qpx.qvstfsa
llvm.ppc.set.texasr
llvm.ppc.set.texasru
llvm.ppc.set.tfhar
llvm.ppc.set.tfiar
llvm.ppc.sync
llvm.ppc.tabort
llvm.ppc.tabortdc
llvm.ppc.tabortdci
llvm.ppc.tabortwc
llvm.ppc.tabortwci
llvm.ppc.tbegin
llvm.ppc.tcheck
llvm.ppc.tend
llvm.ppc.tendall
llvm.ppc.trechkpt
llvm.ppc.treclaim
llvm.ppc.tresume
llvm.ppc.tsr
llvm.ppc.tsuspend
llvm.ppc.ttest
llvm.ppc.vsx.lxvd2x
llvm.ppc.vsx.lxvd2x.be
llvm.ppc.vsx.lxvl
llvm.ppc.vsx.lxvll
llvm.ppc.vsx.lxvw4x
llvm.ppc.vsx.lxvw4x.be
llvm.ppc.vsx.stxvd2x
llvm.ppc.vsx.stxvd2x.be
llvm.ppc.vsx.stxvl
llvm.ppc.vsx.stxvll
llvm.ppc.vsx.stxvw4x
llvm.ppc.vsx.stxvw4x.be
llvm.ppc.vsx.xsmaxdp
llvm.ppc.vsx.xsmindp
llvm.ppc.vsx.xvcmpeqdp
llvm.ppc.vsx.xvcmpeqdp.p
llvm.ppc.vsx.xvcmpeqsp
llvm.ppc.vsx.xvcmpeqsp.p
llvm.ppc.vsx.xvcmpgedp
llvm.ppc.vsx.xvcmpgedp.p
llvm.ppc.vsx.xvcmpgesp
llvm.ppc.vsx.xvcmpgesp.p
llvm.ppc.vsx.xvcmpgtdp
llvm.ppc.vsx.xvcmpgtdp.p
llvm.ppc.vsx.xvcmpgtsp
llvm.ppc.vsx.xvcmpgtsp.p
llvm.ppc.vsx.xvcvdpsp
llvm.ppc.vsx.xvcvdpsxws
llvm.ppc.vsx.xvcvdpuxws
llvm.ppc.vsx.xvcvhpsp
llvm.ppc.vsx.xvcvspdp
llvm.ppc.vsx.xvcvsphp
llvm.ppc.vsx.xvcvsxdsp
llvm.ppc.vsx.xvcvsxwdp
llvm.ppc.vsx.xvcvuxdsp
llvm.ppc.vsx.xvcvuxwdp
llvm.ppc.vsx.xvdivdp
llvm.ppc.vsx.xvdivsp
llvm.ppc.vsx.xviexpdp
llvm.ppc.vsx.xviexpsp
llvm.ppc.vsx.xvmaxdp
llvm.ppc.vsx.xvmaxsp
llvm.ppc.vsx.xvmindp
llvm.ppc.vsx.xvminsp
llvm.ppc.vsx.xvrdpip
llvm.ppc.vsx.xvredp
llvm.ppc.vsx.xvresp
llvm.ppc.vsx.xvrspip
llvm.ppc.vsx.xvrsqrtedp
llvm.ppc.vsx.xvrsqrtesp
llvm.ppc.vsx.xvtstdcdp
llvm.ppc.vsx.xvtstdcsp
llvm.ppc.vsx.xvxexpdp
llvm.ppc.vsx.xvxexpsp
llvm.ppc.vsx.xvxsigdp
llvm.ppc.vsx.xvxsigsp
llvm.ppc.vsx.xxextractuw
llvm.ppc.vsx.xxinsertw
llvm.ppc.vsx.xxleqv
llvm.r600.cube
llvm.r600.group.barrier
llvm.r600.implicitarg.ptr
llvm.r600.rat.store.typed
llvm.r600.read.global.size.x
llvm.r600.read.global.size.y
llvm.r600.read.global.size.z
llvm.r600.read.local.size.x
llvm.r600.read.local.size.y
llvm.r600.read.local.size.z
llvm.r600.read.ngroups.x
llvm.r600.read.ngroups.y
llvm.r600.read.ngroups.z
llvm.r600.read.tgid.x
llvm.r600.read.tgid.y
llvm.r600.read.tgid.z
llvm.r600.read.tidig.x
llvm.r600.read.tidig.y
llvm.r600.read.tidig.z
llvm.r600.recipsqrt.clamped
llvm.r600.recipsqrt.ieee
llvm.s390.efpc
llvm.s390.etnd
llvm.s390.lcbb
llvm.s390.ntstg
llvm.s390.ppa.txassist
llvm.s390.sfpc
llvm.s390.tabort
llvm.s390.tbegin
llvm.s390.tbegin.nofloat
llvm.s390.tbeginc
llvm.s390.tdc
llvm.s390.tend
llvm.s390.vaccb
llvm.s390.vacccq
llvm.s390.vaccf
llvm.s390.vaccg
llvm.s390.vacch
llvm.s390.vaccq
llvm.s390.vacq
llvm.s390.vaq
llvm.s390.vavgb
llvm.s390.vavgf
llvm.s390.vavgg
llvm.s390.vavgh
llvm.s390.vavglb
llvm.s390.vavglf
llvm.s390.vavglg
llvm.s390.vavglh
llvm.s390.vbperm
llvm.s390.vceqbs
llvm.s390.vceqfs
llvm.s390.vceqgs
llvm.s390.vceqhs
llvm.s390.vchbs
llvm.s390.vchfs
llvm.s390.vchgs
llvm.s390.vchhs
llvm.s390.vchlbs
llvm.s390.vchlfs
llvm.s390.vchlgs
llvm.s390.vchlhs
llvm.s390.vcksm
llvm.s390.verimb
llvm.s390.verimf
llvm.s390.verimg
llvm.s390.verimh
llvm.s390.verllb
llvm.s390.verllf
llvm.s390.verllg
llvm.s390.verllh
llvm.s390.verllvb
llvm.s390.verllvf
llvm.s390.verllvg
llvm.s390.verllvh
llvm.s390.vfaeb
llvm.s390.vfaebs
llvm.s390.vfaef
llvm.s390.vfaefs
llvm.s390.vfaeh
llvm.s390.vfaehs
llvm.s390.vfaezb
llvm.s390.vfaezbs
llvm.s390.vfaezf
llvm.s390.vfaezfs
llvm.s390.vfaezh
llvm.s390.vfaezhs
llvm.s390.vfcedbs
llvm.s390.vfcesbs
llvm.s390.vfchdbs
llvm.s390.vfchedbs
llvm.s390.vfchesbs
llvm.s390.vfchsbs
llvm.s390.vfeeb
llvm.s390.vfeebs
llvm.s390.vfeef
llvm.s390.vfeefs
llvm.s390.vfeeh
llvm.s390.vfeehs
llvm.s390.vfeezb
llvm.s390.vfeezbs
llvm.s390.vfeezf
llvm.s390.vfeezfs
llvm.s390.vfeezh
llvm.s390.vfeezhs
llvm.s390.vfeneb
llvm.s390.vfenebs
llvm.s390.vfenef
llvm.s390.vfenefs
llvm.s390.vfeneh
llvm.s390.vfenehs
llvm.s390.vfenezb
llvm.s390.vfenezbs
llvm.s390.vfenezf
llvm.s390.vfenezfs
llvm.s390.vfenezh
llvm.s390.vfenezhs
llvm.s390.vfidb
llvm.s390.vfisb
llvm.s390.vfmaxdb
llvm.s390.vfmaxsb
llvm.s390.vfmindb
llvm.s390.vfminsb
llvm.s390.vftcidb
llvm.s390.vftcisb
llvm.s390.vgfmab
llvm.s390.vgfmaf
llvm.s390.vgfmag
llvm.s390.vgfmah
llvm.s390.vgfmb
llvm.s390.vgfmf
llvm.s390.vgfmg
llvm.s390.vgfmh
llvm.s390.vistrb
llvm.s390.vistrbs
llvm.s390.vistrf
llvm.s390.vistrfs
llvm.s390.vistrh
llvm.s390.vistrhs
llvm.s390.vlbb
llvm.s390.vll
llvm.s390.vlrl
llvm.s390.vmaeb
llvm.s390.vmaef
llvm.s390.vmaeh
llvm.s390.vmahb
llvm.s390.vmahf
llvm.s390.vmahh
llvm.s390.vmaleb
llvm.s390.vmalef
llvm.s390.vmaleh
llvm.s390.vmalhb
llvm.s390.vmalhf
llvm.s390.vmalhh
llvm.s390.vmalob
llvm.s390.vmalof
llvm.s390.vmaloh
llvm.s390.vmaob
llvm.s390.vmaof
llvm.s390.vmaoh
llvm.s390.vmeb
llvm.s390.vmef
llvm.s390.vmeh
llvm.s390.vmhb
llvm.s390.vmhf
llvm.s390.vmhh
llvm.s390.vmleb
llvm.s390.vmlef
llvm.s390.vmleh
llvm.s390.vmlhb
llvm.s390.vmlhf
llvm.s390.vmlhh
llvm.s390.vmlob
llvm.s390.vmlof
llvm.s390.vmloh
llvm.s390.vmob
llvm.s390.vmof
llvm.s390.vmoh
llvm.s390.vmslg
llvm.s390.vpdi
llvm.s390.vperm
llvm.s390.vpklsf
llvm.s390.vpklsfs
llvm.s390.vpklsg
llvm.s390.vpklsgs
llvm.s390.vpklsh
llvm.s390.vpklshs
llvm.s390.vpksf
llvm.s390.vpksfs
llvm.s390.vpksg
llvm.s390.vpksgs
llvm.s390.vpksh
llvm.s390.vpkshs
llvm.s390.vsbcbiq
llvm.s390.vsbiq
llvm.s390.vscbib
llvm.s390.vscbif
llvm.s390.vscbig
llvm.s390.vscbih
llvm.s390.vscbiq
llvm.s390.vsl
llvm.s390.vslb
llvm.s390.vsldb
llvm.s390.vsq
llvm.s390.vsra
llvm.s390.vsrab
llvm.s390.vsrl
llvm.s390.vsrlb
llvm.s390.vstl
llvm.s390.vstrcb
llvm.s390.vstrcbs
llvm.s390.vstrcf
llvm.s390.vstrcfs
llvm.s390.vstrch
llvm.s390.vstrchs
llvm.s390.vstrczb
llvm.s390.vstrczbs
llvm.s390.vstrczf
llvm.s390.vstrczfs
llvm.s390.vstrczh
llvm.s390.vstrczhs
llvm.s390.vstrl
llvm.s390.vsumb
llvm.s390.vsumgf
llvm.s390.vsumgh
llvm.s390.vsumh
llvm.s390.vsumqf
llvm.s390.vsumqg
llvm.s390.vtm
llvm.s390.vuphb
llvm.s390.vuphf
llvm.s390.vuphh
llvm.s390.vuplb
llvm.s390.vuplf
llvm.s390.vuplhb
llvm.s390.vuplhf
llvm.s390.vuplhh
llvm.s390.vuplhw
llvm.s390.vupllb
llvm.s390.vupllf
llvm.s390.vupllh
llvm.wasm.current.memory
llvm.wasm.grow.memory
llvm.wasm.rethrow
llvm.wasm.throw
llvm.x86.3dnow.pavgusb
llvm.x86.3dnow.pf2id
llvm.x86.3dnow.pfacc
llvm.x86.3dnow.pfadd
llvm.x86.3dnow.pfcmpeq
llvm.x86.3dnow.pfcmpge
llvm.x86.3dnow.pfcmpgt
llvm.x86.3dnow.pfmax
llvm.x86.3dnow.pfmin
llvm.x86.3dnow.pfmul
llvm.x86.3dnow.pfrcp
llvm.x86.3dnow.pfrcpit1
llvm.x86.3dnow.pfrcpit2
llvm.x86.3dnow.pfrsqit1
llvm.x86.3dnow.pfrsqrt
llvm.x86.3dnow.pfsub
llvm.x86.3dnow.pfsubr
llvm.x86.3dnow.pi2fd
llvm.x86.3dnow.pmulhrw
llvm.x86.3dnowa.pf2iw
llvm.x86.3dnowa.pfnacc
llvm.x86.3dnowa.pfpnacc
llvm.x86.3dnowa.pi2fw
llvm.x86.3dnowa.pswapd
llvm.x86.addcarry.u32
llvm.x86.addcarry.u64
llvm.x86.addcarryx.u32
llvm.x86.addcarryx.u64
llvm.x86.aesni.aesdec
llvm.x86.aesni.aesdeclast
llvm.x86.aesni.aesenc
llvm.x86.aesni.aesenclast
llvm.x86.aesni.aesimc
llvm.x86.aesni.aeskeygenassist
llvm.x86.avx.addsub.pd.256
llvm.x86.avx.addsub.ps.256
llvm.x86.avx.blendv.pd.256
llvm.x86.avx.blendv.ps.256
llvm.x86.avx.cmp.pd.256
llvm.x86.avx.cmp.ps.256
llvm.x86.avx.cvt.pd2.ps.256
llvm.x86.avx.cvt.pd2dq.256
llvm.x86.avx.cvt.ps2dq.256
llvm.x86.avx.cvtdq2.ps.256
llvm.x86.avx.cvtt.pd2dq.256
llvm.x86.avx.cvtt.ps2dq.256
llvm.x86.avx.dp.ps.256
llvm.x86.avx.hadd.pd.256
llvm.x86.avx.hadd.ps.256
llvm.x86.avx.hsub.pd.256
llvm.x86.avx.hsub.ps.256
llvm.x86.avx.ldu.dq.256
llvm.x86.avx.maskload.pd
llvm.x86.avx.maskload.pd.256
llvm.x86.avx.maskload.ps
llvm.x86.avx.maskload.ps.256
llvm.x86.avx.maskstore.pd
llvm.x86.avx.maskstore.pd.256
llvm.x86.avx.maskstore.ps
llvm.x86.avx.maskstore.ps.256
llvm.x86.avx.max.pd.256
llvm.x86.avx.max.ps.256
llvm.x86.avx.min.pd.256
llvm.x86.avx.min.ps.256
llvm.x86.avx.movmsk.pd.256
llvm.x86.avx.movmsk.ps.256
llvm.x86.avx.ptestc.256
llvm.x86.avx.ptestnzc.256
llvm.x86.avx.ptestz.256
llvm.x86.avx.rcp.ps.256
llvm.x86.avx.round.pd.256
llvm.x86.avx.round.ps.256
llvm.x86.avx.rsqrt.ps.256
llvm.x86.avx.sqrt.pd.256
llvm.x86.avx.sqrt.ps.256
llvm.x86.avx.vperm2f128.pd.256
llvm.x86.avx.vperm2f128.ps.256
llvm.x86.avx.vperm2f128.si.256
llvm.x86.avx.vpermilvar.pd
llvm.x86.avx.vpermilvar.pd.256
llvm.x86.avx.vpermilvar.ps
llvm.x86.avx.vpermilvar.ps.256
llvm.x86.avx.vtestc.pd
llvm.x86.avx.vtestc.pd.256
llvm.x86.avx.vtestc.ps
llvm.x86.avx.vtestc.ps.256
llvm.x86.avx.vtestnzc.pd
llvm.x86.avx.vtestnzc.pd.256
llvm.x86.avx.vtestnzc.ps
llvm.x86.avx.vtestnzc.ps.256
llvm.x86.avx.vtestz.pd
llvm.x86.avx.vtestz.pd.256
llvm.x86.avx.vtestz.ps
llvm.x86.avx.vtestz.ps.256
llvm.x86.avx.vzeroall
llvm.x86.avx.vzeroupper
llvm.x86.avx2.gather.d.d
llvm.x86.avx2.gather.d.d.256
llvm.x86.avx2.gather.d.pd
llvm.x86.avx2.gather.d.pd.256
llvm.x86.avx2.gather.d.ps
llvm.x86.avx2.gather.d.ps.256
llvm.x86.avx2.gather.d.q
llvm.x86.avx2.gather.d.q.256
llvm.x86.avx2.gather.q.d
llvm.x86.avx2.gather.q.d.256
llvm.x86.avx2.gather.q.pd
llvm.x86.avx2.gather.q.pd.256
llvm.x86.avx2.gather.q.ps
llvm.x86.avx2.gather.q.ps.256
llvm.x86.avx2.gather.q.q
llvm.x86.avx2.gather.q.q.256
llvm.x86.avx2.maskload.d
llvm.x86.avx2.maskload.d.256
llvm.x86.avx2.maskload.q
llvm.x86.avx2.maskload.q.256
llvm.x86.avx2.maskstore.d
llvm.x86.avx2.maskstore.d.256
llvm.x86.avx2.maskstore.q
llvm.x86.avx2.maskstore.q.256
llvm.x86.avx2.mpsadbw
llvm.x86.avx2.pabs.b
llvm.x86.avx2.pabs.d
llvm.x86.avx2.pabs.w
llvm.x86.avx2.packssdw
llvm.x86.avx2.packsswb
llvm.x86.avx2.packusdw
llvm.x86.avx2.packuswb
llvm.x86.avx2.padds.b
llvm.x86.avx2.padds.w
llvm.x86.avx2.paddus.b
llvm.x86.avx2.paddus.w
llvm.x86.avx2.pavg.b
llvm.x86.avx2.pavg.w
llvm.x86.avx2.pblendvb
llvm.x86.avx2.permd
llvm.x86.avx2.permps
llvm.x86.avx2.phadd.d
llvm.x86.avx2.phadd.sw
llvm.x86.avx2.phadd.w
llvm.x86.avx2.phsub.d
llvm.x86.avx2.phsub.sw
llvm.x86.avx2.phsub.w
llvm.x86.avx2.pmadd.ub.sw
llvm.x86.avx2.pmadd.wd
llvm.x86.avx2.pmovmskb
llvm.x86.avx2.pmul.dq
llvm.x86.avx2.pmul.hr.sw
llvm.x86.avx2.pmulh.w
llvm.x86.avx2.pmulhu.w
llvm.x86.avx2.pmulu.dq
llvm.x86.avx2.psad.bw
llvm.x86.avx2.pshuf.b
llvm.x86.avx2.psign.b
llvm.x86.avx2.psign.d
llvm.x86.avx2.psign.w
llvm.x86.avx2.psll.d
llvm.x86.avx2.psll.q
llvm.x86.avx2.psll.w
llvm.x86.avx2.pslli.d
llvm.x86.avx2.pslli.q
llvm.x86.avx2.pslli.w
llvm.x86.avx2.psllv.d
llvm.x86.avx2.psllv.d.256
llvm.x86.avx2.psllv.q
llvm.x86.avx2.psllv.q.256
llvm.x86.avx2.psra.d
llvm.x86.avx2.psra.w
llvm.x86.avx2.psrai.d
llvm.x86.avx2.psrai.w
llvm.x86.avx2.psrav.d
llvm.x86.avx2.psrav.d.256
llvm.x86.avx2.psrl.d
llvm.x86.avx2.psrl.q
llvm.x86.avx2.psrl.w
llvm.x86.avx2.psrli.d
llvm.x86.avx2.psrli.q
llvm.x86.avx2.psrli.w
llvm.x86.avx2.psrlv.d
llvm.x86.avx2.psrlv.d.256
llvm.x86.avx2.psrlv.q
llvm.x86.avx2.psrlv.q.256
llvm.x86.avx2.psubs.b
llvm.x86.avx2.psubs.w
llvm.x86.avx2.psubus.b
llvm.x86.avx2.psubus.w
llvm.x86.avx2.vperm2i128
llvm.x86.avx512.broadcastmb.128
llvm.x86.avx512.broadcastmb.256
llvm.x86.avx512.broadcastmb.512
llvm.x86.avx512.broadcastmw.128
llvm.x86.avx512.broadcastmw.256
llvm.x86.avx512.broadcastmw.512
llvm.x86.avx512.cvtb2mask.128
llvm.x86.avx512.cvtb2mask.256
llvm.x86.avx512.cvtb2mask.512
llvm.x86.avx512.cvtd2mask.128
llvm.x86.avx512.cvtd2mask.256
llvm.x86.avx512.cvtd2mask.512
llvm.x86.avx512.cvtq2mask.128
llvm.x86.avx512.cvtq2mask.256
llvm.x86.avx512.cvtq2mask.512
llvm.x86.avx512.cvtsi2sd64
llvm.x86.avx512.cvtsi2ss32
llvm.x86.avx512.cvtsi2ss64
llvm.x86.avx512.cvttsd2si
llvm.x86.avx512.cvttsd2si64
llvm.x86.avx512.cvttsd2usi
llvm.x86.avx512.cvttsd2usi64
llvm.x86.avx512.cvttss2si
llvm.x86.avx512.cvttss2si64
llvm.x86.avx512.cvttss2usi
llvm.x86.avx512.cvttss2usi64
llvm.x86.avx512.cvtusi2sd
llvm.x86.avx512.cvtusi2ss
llvm.x86.avx512.cvtusi642sd
llvm.x86.avx512.cvtusi642ss
llvm.x86.avx512.cvtw2mask.128
llvm.x86.avx512.cvtw2mask.256
llvm.x86.avx512.cvtw2mask.512
llvm.x86.avx512.exp2.pd
llvm.x86.avx512.exp2.ps
llvm.x86.avx512.gather.dpd.512
llvm.x86.avx512.gather.dpi.512
llvm.x86.avx512.gather.dpq.512
llvm.x86.avx512.gather.dps.512
llvm.x86.avx512.gather.qpd.512
llvm.x86.avx512.gather.qpi.512
llvm.x86.avx512.gather.qpq.512
llvm.x86.avx512.gather.qps.512
llvm.x86.avx512.gather3div2.df
llvm.x86.avx512.gather3div2.di
llvm.x86.avx512.gather3div4.df
llvm.x86.avx512.gather3div4.di
llvm.x86.avx512.gather3div4.sf
llvm.x86.avx512.gather3div4.si
llvm.x86.avx512.gather3div8.sf
llvm.x86.avx512.gather3div8.si
llvm.x86.avx512.gather3siv2.df
llvm.x86.avx512.gather3siv2.di
llvm.x86.avx512.gather3siv4.df
llvm.x86.avx512.gather3siv4.di
llvm.x86.avx512.gather3siv4.sf
llvm.x86.avx512.gather3siv4.si
llvm.x86.avx512.gather3siv8.sf
llvm.x86.avx512.gather3siv8.si
llvm.x86.avx512.gatherpf.dpd.512
llvm.x86.avx512.gatherpf.dps.512
llvm.x86.avx512.gatherpf.qpd.512
llvm.x86.avx512.gatherpf.qps.512
llvm.x86.avx512.kand.w
llvm.x86.avx512.kandn.w
llvm.x86.avx512.knot.w
llvm.x86.avx512.kor.w
llvm.x86.avx512.kortestc.w
llvm.x86.avx512.kortestz.w
llvm.x86.avx512.kunpck.bw
llvm.x86.avx512.kunpck.dq
llvm.x86.avx512.kunpck.wd
llvm.x86.avx512.kxnor.w
llvm.x86.avx512.kxor.w
llvm.x86.avx512.mask.add.pd.512
llvm.x86.avx512.mask.add.ps.512
llvm.x86.avx512.mask.add.sd.round
llvm.x86.avx512.mask.add.ss.round
llvm.x86.avx512.mask.broadcastf32x2.256
llvm.x86.avx512.mask.broadcastf32x2.512
llvm.x86.avx512.mask.broadcastf32x4.256
llvm.x86.avx512.mask.broadcastf32x4.512
llvm.x86.avx512.mask.broadcastf32x8.512
llvm.x86.avx512.mask.broadcastf64x2.256
llvm.x86.avx512.mask.broadcastf64x2.512
llvm.x86.avx512.mask.broadcastf64x4.512
llvm.x86.avx512.mask.broadcasti32x2.128
llvm.x86.avx512.mask.broadcasti32x2.256
llvm.x86.avx512.mask.broadcasti32x2.512
llvm.x86.avx512.mask.broadcasti32x4.256
llvm.x86.avx512.mask.broadcasti32x4.512
llvm.x86.avx512.mask.broadcasti32x8.512
llvm.x86.avx512.mask.broadcasti64x2.256
llvm.x86.avx512.mask.broadcasti64x2.512
llvm.x86.avx512.mask.broadcasti64x4.512
llvm.x86.avx512.mask.cmp.pd.128
llvm.x86.avx512.mask.cmp.pd.256
llvm.x86.avx512.mask.cmp.pd.512
llvm.x86.avx512.mask.cmp.ps.128
llvm.x86.avx512.mask.cmp.ps.256
llvm.x86.avx512.mask.cmp.ps.512
llvm.x86.avx512.mask.cmp.sd
llvm.x86.avx512.mask.cmp.ss
llvm.x86.avx512.mask.compress.d.128
llvm.x86.avx512.mask.compress.d.256
llvm.x86.avx512.mask.compress.d.512
llvm.x86.avx512.mask.compress.pd.128
llvm.x86.avx512.mask.compress.pd.256
llvm.x86.avx512.mask.compress.pd.512
llvm.x86.avx512.mask.compress.ps.128
llvm.x86.avx512.mask.compress.ps.256
llvm.x86.avx512.mask.compress.ps.512
llvm.x86.avx512.mask.compress.q.128
llvm.x86.avx512.mask.compress.q.256
llvm.x86.avx512.mask.compress.q.512
llvm.x86.avx512.mask.compress.store.d.128
llvm.x86.avx512.mask.compress.store.d.256
llvm.x86.avx512.mask.compress.store.d.512
llvm.x86.avx512.mask.compress.store.pd.128
llvm.x86.avx512.mask.compress.store.pd.256
llvm.x86.avx512.mask.compress.store.pd.512
llvm.x86.avx512.mask.compress.store.ps.128
llvm.x86.avx512.mask.compress.store.ps.256
llvm.x86.avx512.mask.compress.store.ps.512
llvm.x86.avx512.mask.compress.store.q.128
llvm.x86.avx512.mask.compress.store.q.256
llvm.x86.avx512.mask.compress.store.q.512
llvm.x86.avx512.mask.conflict.d.128
llvm.x86.avx512.mask.conflict.d.256
llvm.x86.avx512.mask.conflict.d.512
llvm.x86.avx512.mask.conflict.q.128
llvm.x86.avx512.mask.conflict.q.256
llvm.x86.avx512.mask.conflict.q.512
llvm.x86.avx512.mask.cvtdq2ps.128
llvm.x86.avx512.mask.cvtdq2ps.256
llvm.x86.avx512.mask.cvtdq2ps.512
llvm.x86.avx512.mask.cvtpd2dq.128
llvm.x86.avx512.mask.cvtpd2dq.256
llvm.x86.avx512.mask.cvtpd2dq.512
llvm.x86.avx512.mask.cvtpd2ps
llvm.x86.avx512.mask.cvtpd2ps.256
llvm.x86.avx512.mask.cvtpd2ps.512
llvm.x86.avx512.mask.cvtpd2qq.128
llvm.x86.avx512.mask.cvtpd2qq.256
llvm.x86.avx512.mask.cvtpd2qq.512
llvm.x86.avx512.mask.cvtpd2udq.128
llvm.x86.avx512.mask.cvtpd2udq.256
llvm.x86.avx512.mask.cvtpd2udq.512
llvm.x86.avx512.mask.cvtpd2uqq.128
llvm.x86.avx512.mask.cvtpd2uqq.256
llvm.x86.avx512.mask.cvtpd2uqq.512
llvm.x86.avx512.mask.cvtps2dq.128
llvm.x86.avx512.mask.cvtps2dq.256
llvm.x86.avx512.mask.cvtps2dq.512
llvm.x86.avx512.mask.cvtps2pd.128
llvm.x86.avx512.mask.cvtps2pd.256
llvm.x86.avx512.mask.cvtps2pd.512
llvm.x86.avx512.mask.cvtps2qq.128
llvm.x86.avx512.mask.cvtps2qq.256
llvm.x86.avx512.mask.cvtps2qq.512
llvm.x86.avx512.mask.cvtps2udq.128
llvm.x86.avx512.mask.cvtps2udq.256
llvm.x86.avx512.mask.cvtps2udq.512
llvm.x86.avx512.mask.cvtps2uqq.128
llvm.x86.avx512.mask.cvtps2uqq.256
llvm.x86.avx512.mask.cvtps2uqq.512
llvm.x86.avx512.mask.cvtqq2pd.128
llvm.x86.avx512.mask.cvtqq2pd.256
llvm.x86.avx512.mask.cvtqq2pd.512
llvm.x86.avx512.mask.cvtqq2ps.128
llvm.x86.avx512.mask.cvtqq2ps.256
llvm.x86.avx512.mask.cvtqq2ps.512
llvm.x86.avx512.mask.cvtsd2ss.round
llvm.x86.avx512.mask.cvtss2sd.round
llvm.x86.avx512.mask.cvttpd2dq.128
llvm.x86.avx512.mask.cvttpd2dq.256
llvm.x86.avx512.mask.cvttpd2dq.512
llvm.x86.avx512.mask.cvttpd2qq.128
llvm.x86.avx512.mask.cvttpd2qq.256
llvm.x86.avx512.mask.cvttpd2qq.512
llvm.x86.avx512.mask.cvttpd2udq.128
llvm.x86.avx512.mask.cvttpd2udq.256
llvm.x86.avx512.mask.cvttpd2udq.512
llvm.x86.avx512.mask.cvttpd2uqq.128
llvm.x86.avx512.mask.cvttpd2uqq.256
llvm.x86.avx512.mask.cvttpd2uqq.512
llvm.x86.avx512.mask.cvttps2dq.128
llvm.x86.avx512.mask.cvttps2dq.256
llvm.x86.avx512.mask.cvttps2dq.512
llvm.x86.avx512.mask.cvttps2qq.128
llvm.x86.avx512.mask.cvttps2qq.256
llvm.x86.avx512.mask.cvttps2qq.512
llvm.x86.avx512.mask.cvttps2udq.128
llvm.x86.avx512.mask.cvttps2udq.256
llvm.x86.avx512.mask.cvttps2udq.512
llvm.x86.avx512.mask.cvttps2uqq.128
llvm.x86.avx512.mask.cvttps2uqq.256
llvm.x86.avx512.mask.cvttps2uqq.512
llvm.x86.avx512.mask.cvtudq2ps.128
llvm.x86.avx512.mask.cvtudq2ps.256
llvm.x86.avx512.mask.cvtudq2ps.512
llvm.x86.avx512.mask.cvtuqq2pd.128
llvm.x86.avx512.mask.cvtuqq2pd.256
llvm.x86.avx512.mask.cvtuqq2pd.512
llvm.x86.avx512.mask.cvtuqq2ps.128
llvm.x86.avx512.mask.cvtuqq2ps.256
llvm.x86.avx512.mask.cvtuqq2ps.512
llvm.x86.avx512.mask.dbpsadbw.128
llvm.x86.avx512.mask.dbpsadbw.256
llvm.x86.avx512.mask.dbpsadbw.512
llvm.x86.avx512.mask.div.pd.512
llvm.x86.avx512.mask.div.ps.512
llvm.x86.avx512.mask.div.sd.round
llvm.x86.avx512.mask.div.ss.round
llvm.x86.avx512.mask.expand.d.128
llvm.x86.avx512.mask.expand.d.256
llvm.x86.avx512.mask.expand.d.512
llvm.x86.avx512.mask.expand.load.d.128
llvm.x86.avx512.mask.expand.load.d.256
llvm.x86.avx512.mask.expand.load.d.512
llvm.x86.avx512.mask.expand.load.pd.128
llvm.x86.avx512.mask.expand.load.pd.256
llvm.x86.avx512.mask.expand.load.pd.512
llvm.x86.avx512.mask.expand.load.ps.128
llvm.x86.avx512.mask.expand.load.ps.256
llvm.x86.avx512.mask.expand.load.ps.512
llvm.x86.avx512.mask.expand.load.q.128
llvm.x86.avx512.mask.expand.load.q.256
llvm.x86.avx512.mask.expand.load.q.512
llvm.x86.avx512.mask.expand.pd.128
llvm.x86.avx512.mask.expand.pd.256
llvm.x86.avx512.mask.expand.pd.512
llvm.x86.avx512.mask.expand.ps.128
llvm.x86.avx512.mask.expand.ps.256
llvm.x86.avx512.mask.expand.ps.512
llvm.x86.avx512.mask.expand.q.128
llvm.x86.avx512.mask.expand.q.256
llvm.x86.avx512.mask.expand.q.512
llvm.x86.avx512.mask.fixupimm.pd.128
llvm.x86.avx512.mask.fixupimm.pd.256
llvm.x86.avx512.mask.fixupimm.pd.512
llvm.x86.avx512.mask.fixupimm.ps.128
llvm.x86.avx512.mask.fixupimm.ps.256
llvm.x86.avx512.mask.fixupimm.ps.512
llvm.x86.avx512.mask.fixupimm.sd
llvm.x86.avx512.mask.fixupimm.ss
llvm.x86.avx512.mask.fpclass.pd.128
llvm.x86.avx512.mask.fpclass.pd.256
llvm.x86.avx512.mask.fpclass.pd.512
llvm.x86.avx512.mask.fpclass.ps.128
llvm.x86.avx512.mask.fpclass.ps.256
llvm.x86.avx512.mask.fpclass.ps.512
llvm.x86.avx512.mask.fpclass.sd
llvm.x86.avx512.mask.fpclass.ss
llvm.x86.avx512.mask.getexp.pd.128
llvm.x86.avx512.mask.getexp.pd.256
llvm.x86.avx512.mask.getexp.pd.512
llvm.x86.avx512.mask.getexp.ps.128
llvm.x86.avx512.mask.getexp.ps.256
llvm.x86.avx512.mask.getexp.ps.512
llvm.x86.avx512.mask.getexp.sd
llvm.x86.avx512.mask.getexp.ss
llvm.x86.avx512.mask.getmant.pd.128
llvm.x86.avx512.mask.getmant.pd.256
llvm.x86.avx512.mask.getmant.pd.512
llvm.x86.avx512.mask.getmant.ps.128
llvm.x86.avx512.mask.getmant.ps.256
llvm.x86.avx512.mask.getmant.ps.512
llvm.x86.avx512.mask.getmant.sd
llvm.x86.avx512.mask.getmant.ss
llvm.x86.avx512.mask.max.pd.512
llvm.x86.avx512.mask.max.ps.512
llvm.x86.avx512.mask.max.sd.round
llvm.x86.avx512.mask.max.ss.round
llvm.x86.avx512.mask.min.pd.512
llvm.x86.avx512.mask.min.ps.512
llvm.x86.avx512.mask.min.sd.round
llvm.x86.avx512.mask.min.ss.round
llvm.x86.avx512.mask.mul.pd.512
llvm.x86.avx512.mask.mul.ps.512
llvm.x86.avx512.mask.mul.sd.round
llvm.x86.avx512.mask.mul.ss.round
llvm.x86.avx512.mask.pabs.b.128
llvm.x86.avx512.mask.pabs.b.256
llvm.x86.avx512.mask.pabs.b.512
llvm.x86.avx512.mask.pabs.d.128
llvm.x86.avx512.mask.pabs.d.256
llvm.x86.avx512.mask.pabs.d.512
llvm.x86.avx512.mask.pabs.q.128
llvm.x86.avx512.mask.pabs.q.256
llvm.x86.avx512.mask.pabs.q.512
llvm.x86.avx512.mask.pabs.w.128
llvm.x86.avx512.mask.pabs.w.256
llvm.x86.avx512.mask.pabs.w.512
llvm.x86.avx512.mask.padds.b.128
llvm.x86.avx512.mask.padds.b.256
llvm.x86.avx512.mask.padds.b.512
llvm.x86.avx512.mask.padds.w.128
llvm.x86.avx512.mask.padds.w.256
llvm.x86.avx512.mask.padds.w.512
llvm.x86.avx512.mask.paddus.b.128
llvm.x86.avx512.mask.paddus.b.256
llvm.x86.avx512.mask.paddus.b.512
llvm.x86.avx512.mask.paddus.w.128
llvm.x86.avx512.mask.paddus.w.256
llvm.x86.avx512.mask.paddus.w.512
llvm.x86.avx512.mask.pavg.b.128
llvm.x86.avx512.mask.pavg.b.256
llvm.x86.avx512.mask.pavg.b.512
llvm.x86.avx512.mask.pavg.w.128
llvm.x86.avx512.mask.pavg.w.256
llvm.x86.avx512.mask.pavg.w.512
llvm.x86.avx512.mask.pbroadcast.b.gpr.128
llvm.x86.avx512.mask.pbroadcast.b.gpr.256
llvm.x86.avx512.mask.pbroadcast.b.gpr.512
llvm.x86.avx512.mask.pbroadcast.d.gpr.128
llvm.x86.avx512.mask.pbroadcast.d.gpr.256
llvm.x86.avx512.mask.pbroadcast.d.gpr.512
llvm.x86.avx512.mask.pbroadcast.q.gpr.128
llvm.x86.avx512.mask.pbroadcast.q.gpr.256
llvm.x86.avx512.mask.pbroadcast.q.gpr.512
llvm.x86.avx512.mask.pbroadcast.q.mem.512
llvm.x86.avx512.mask.pbroadcast.w.gpr.128
llvm.x86.avx512.mask.pbroadcast.w.gpr.256
llvm.x86.avx512.mask.pbroadcast.w.gpr.512
llvm.x86.avx512.mask.permvar.df.256
llvm.x86.avx512.mask.permvar.df.512
llvm.x86.avx512.mask.permvar.di.256
llvm.x86.avx512.mask.permvar.di.512
llvm.x86.avx512.mask.permvar.hi.128
llvm.x86.avx512.mask.permvar.hi.256
llvm.x86.avx512.mask.permvar.hi.512
llvm.x86.avx512.mask.permvar.qi.128
llvm.x86.avx512.mask.permvar.qi.256
llvm.x86.avx512.mask.permvar.qi.512
llvm.x86.avx512.mask.permvar.sf.256
llvm.x86.avx512.mask.permvar.sf.512
llvm.x86.avx512.mask.permvar.si.256
llvm.x86.avx512.mask.permvar.si.512
llvm.x86.avx512.mask.pmaddubs.w.128
llvm.x86.avx512.mask.pmaddubs.w.256
llvm.x86.avx512.mask.pmaddubs.w.512
llvm.x86.avx512.mask.pmaddw.d.128
llvm.x86.avx512.mask.pmaddw.d.256
llvm.x86.avx512.mask.pmaddw.d.512
llvm.x86.avx512.mask.pmov.db.128
llvm.x86.avx512.mask.pmov.db.256
llvm.x86.avx512.mask.pmov.db.512
llvm.x86.avx512.mask.pmov.db.mem.128
llvm.x86.avx512.mask.pmov.db.mem.256
llvm.x86.avx512.mask.pmov.db.mem.512
llvm.x86.avx512.mask.pmov.dw.128
llvm.x86.avx512.mask.pmov.dw.256
llvm.x86.avx512.mask.pmov.dw.512
llvm.x86.avx512.mask.pmov.dw.mem.128
llvm.x86.avx512.mask.pmov.dw.mem.256
llvm.x86.avx512.mask.pmov.dw.mem.512
llvm.x86.avx512.mask.pmov.qb.128
llvm.x86.avx512.mask.pmov.qb.256
llvm.x86.avx512.mask.pmov.qb.512
llvm.x86.avx512.mask.pmov.qb.mem.128
llvm.x86.avx512.mask.pmov.qb.mem.256
llvm.x86.avx512.mask.pmov.qb.mem.512
llvm.x86.avx512.mask.pmov.qd.128
llvm.x86.avx512.mask.pmov.qd.256
llvm.x86.avx512.mask.pmov.qd.512
llvm.x86.avx512.mask.pmov.qd.mem.128
llvm.x86.avx512.mask.pmov.qd.mem.256
llvm.x86.avx512.mask.pmov.qd.mem.512
llvm.x86.avx512.mask.pmov.qw.128
llvm.x86.avx512.mask.pmov.qw.256
llvm.x86.avx512.mask.pmov.qw.512
llvm.x86.avx512.mask.pmov.qw.mem.128
llvm.x86.avx512.mask.pmov.qw.mem.256
llvm.x86.avx512.mask.pmov.qw.mem.512
llvm.x86.avx512.mask.pmov.wb.128
llvm.x86.avx512.mask.pmov.wb.256
llvm.x86.avx512.mask.pmov.wb.512
llvm.x86.avx512.mask.pmov.wb.mem.128
llvm.x86.avx512.mask.pmov.wb.mem.256
llvm.x86.avx512.mask.pmov.wb.mem.512
llvm.x86.avx512.mask.pmovs.db.128
llvm.x86.avx512.mask.pmovs.db.256
llvm.x86.avx512.mask.pmovs.db.512
llvm.x86.avx512.mask.pmovs.db.mem.128
llvm.x86.avx512.mask.pmovs.db.mem.256
llvm.x86.avx512.mask.pmovs.db.mem.512
llvm.x86.avx512.mask.pmovs.dw.128
llvm.x86.avx512.mask.pmovs.dw.256
llvm.x86.avx512.mask.pmovs.dw.512
llvm.x86.avx512.mask.pmovs.dw.mem.128
llvm.x86.avx512.mask.pmovs.dw.mem.256
llvm.x86.avx512.mask.pmovs.dw.mem.512
llvm.x86.avx512.mask.pmovs.qb.128
llvm.x86.avx512.mask.pmovs.qb.256
llvm.x86.avx512.mask.pmovs.qb.512
llvm.x86.avx512.mask.pmovs.qb.mem.128
llvm.x86.avx512.mask.pmovs.qb.mem.256
llvm.x86.avx512.mask.pmovs.qb.mem.512
llvm.x86.avx512.mask.pmovs.qd.128
llvm.x86.avx512.mask.pmovs.qd.256
llvm.x86.avx512.mask.pmovs.qd.512
llvm.x86.avx512.mask.pmovs.qd.mem.128
llvm.x86.avx512.mask.pmovs.qd.mem.256
llvm.x86.avx512.mask.pmovs.qd.mem.512
llvm.x86.avx512.mask.pmovs.qw.128
llvm.x86.avx512.mask.pmovs.qw.256
llvm.x86.avx512.mask.pmovs.qw.512
llvm.x86.avx512.mask.pmovs.qw.mem.128
llvm.x86.avx512.mask.pmovs.qw.mem.256
llvm.x86.avx512.mask.pmovs.qw.mem.512
llvm.x86.avx512.mask.pmovs.wb.128
llvm.x86.avx512.mask.pmovs.wb.256
llvm.x86.avx512.mask.pmovs.wb.512
llvm.x86.avx512.mask.pmovs.wb.mem.128
llvm.x86.avx512.mask.pmovs.wb.mem.256
llvm.x86.avx512.mask.pmovs.wb.mem.512
llvm.x86.avx512.mask.pmovus.db.128
llvm.x86.avx512.mask.pmovus.db.256
llvm.x86.avx512.mask.pmovus.db.512
llvm.x86.avx512.mask.pmovus.db.mem.128
llvm.x86.avx512.mask.pmovus.db.mem.256
llvm.x86.avx512.mask.pmovus.db.mem.512
llvm.x86.avx512.mask.pmovus.dw.128
llvm.x86.avx512.mask.pmovus.dw.256
llvm.x86.avx512.mask.pmovus.dw.512
llvm.x86.avx512.mask.pmovus.dw.mem.128
llvm.x86.avx512.mask.pmovus.dw.mem.256
llvm.x86.avx512.mask.pmovus.dw.mem.512
llvm.x86.avx512.mask.pmovus.qb.128
llvm.x86.avx512.mask.pmovus.qb.256
llvm.x86.avx512.mask.pmovus.qb.512
llvm.x86.avx512.mask.pmovus.qb.mem.128
llvm.x86.avx512.mask.pmovus.qb.mem.256
llvm.x86.avx512.mask.pmovus.qb.mem.512
llvm.x86.avx512.mask.pmovus.qd.128
llvm.x86.avx512.mask.pmovus.qd.256
llvm.x86.avx512.mask.pmovus.qd.512
llvm.x86.avx512.mask.pmovus.qd.mem.128
llvm.x86.avx512.mask.pmovus.qd.mem.256
llvm.x86.avx512.mask.pmovus.qd.mem.512
llvm.x86.avx512.mask.pmovus.qw.128
llvm.x86.avx512.mask.pmovus.qw.256
llvm.x86.avx512.mask.pmovus.qw.512
llvm.x86.avx512.mask.pmovus.qw.mem.128
llvm.x86.avx512.mask.pmovus.qw.mem.256
llvm.x86.avx512.mask.pmovus.qw.mem.512
llvm.x86.avx512.mask.pmovus.wb.128
llvm.x86.avx512.mask.pmovus.wb.256
llvm.x86.avx512.mask.pmovus.wb.512
llvm.x86.avx512.mask.pmovus.wb.mem.128
llvm.x86.avx512.mask.pmovus.wb.mem.256
llvm.x86.avx512.mask.pmovus.wb.mem.512
llvm.x86.avx512.mask.pmul.hr.sw.128
llvm.x86.avx512.mask.pmul.hr.sw.256
llvm.x86.avx512.mask.pmul.hr.sw.512
llvm.x86.avx512.mask.pmulh.w.128
llvm.x86.avx512.mask.pmulh.w.256
llvm.x86.avx512.mask.pmulh.w.512
llvm.x86.avx512.mask.pmulhu.w.128
llvm.x86.avx512.mask.pmulhu.w.256
llvm.x86.avx512.mask.pmulhu.w.512
llvm.x86.avx512.mask.pmultishift.qb.128
llvm.x86.avx512.mask.pmultishift.qb.256
llvm.x86.avx512.mask.pmultishift.qb.512
llvm.x86.avx512.mask.prol.d.128
llvm.x86.avx512.mask.prol.d.256
llvm.x86.avx512.mask.prol.d.512
llvm.x86.avx512.mask.prol.q.128
llvm.x86.avx512.mask.prol.q.256
llvm.x86.avx512.mask.prol.q.512
llvm.x86.avx512.mask.prolv.d.128
llvm.x86.avx512.mask.prolv.d.256
llvm.x86.avx512.mask.prolv.d.512
llvm.x86.avx512.mask.prolv.q.128
llvm.x86.avx512.mask.prolv.q.256
llvm.x86.avx512.mask.prolv.q.512
llvm.x86.avx512.mask.pror.d.128
llvm.x86.avx512.mask.pror.d.256
llvm.x86.avx512.mask.pror.d.512
llvm.x86.avx512.mask.pror.q.128
llvm.x86.avx512.mask.pror.q.256
llvm.x86.avx512.mask.pror.q.512
llvm.x86.avx512.mask.prorv.d.128
llvm.x86.avx512.mask.prorv.d.256
llvm.x86.avx512.mask.prorv.d.512
llvm.x86.avx512.mask.prorv.q.128
llvm.x86.avx512.mask.prorv.q.256
llvm.x86.avx512.mask.prorv.q.512
llvm.x86.avx512.mask.psubs.b.128
llvm.x86.avx512.mask.psubs.b.256
llvm.x86.avx512.mask.psubs.b.512
llvm.x86.avx512.mask.psubs.w.128
llvm.x86.avx512.mask.psubs.w.256
llvm.x86.avx512.mask.psubs.w.512
llvm.x86.avx512.mask.psubus.b.128
llvm.x86.avx512.mask.psubus.b.256
llvm.x86.avx512.mask.psubus.b.512
llvm.x86.avx512.mask.psubus.w.128
llvm.x86.avx512.mask.psubus.w.256
llvm.x86.avx512.mask.psubus.w.512
llvm.x86.avx512.mask.pternlog.d.128
llvm.x86.avx512.mask.pternlog.d.256
llvm.x86.avx512.mask.pternlog.d.512
llvm.x86.avx512.mask.pternlog.q.128
llvm.x86.avx512.mask.pternlog.q.256
llvm.x86.avx512.mask.pternlog.q.512
llvm.x86.avx512.mask.range.pd.128
llvm.x86.avx512.mask.range.pd.256
llvm.x86.avx512.mask.range.pd.512
llvm.x86.avx512.mask.range.ps.128
llvm.x86.avx512.mask.range.ps.256
llvm.x86.avx512.mask.range.ps.512
llvm.x86.avx512.mask.range.sd
llvm.x86.avx512.mask.range.ss
llvm.x86.avx512.mask.reduce.pd.128
llvm.x86.avx512.mask.reduce.pd.256
llvm.x86.avx512.mask.reduce.pd.512
llvm.x86.avx512.mask.reduce.ps.128
llvm.x86.avx512.mask.reduce.ps.256
llvm.x86.avx512.mask.reduce.ps.512
llvm.x86.avx512.mask.reduce.sd
llvm.x86.avx512.mask.reduce.ss
llvm.x86.avx512.mask.rndscale.pd.128
llvm.x86.avx512.mask.rndscale.pd.256
llvm.x86.avx512.mask.rndscale.pd.512
llvm.x86.avx512.mask.rndscale.ps.128
llvm.x86.avx512.mask.rndscale.ps.256
llvm.x86.avx512.mask.rndscale.ps.512
llvm.x86.avx512.mask.rndscale.sd
llvm.x86.avx512.mask.rndscale.ss
llvm.x86.avx512.mask.scalef.pd.128
llvm.x86.avx512.mask.scalef.pd.256
llvm.x86.avx512.mask.scalef.pd.512
llvm.x86.avx512.mask.scalef.ps.128
llvm.x86.avx512.mask.scalef.ps.256
llvm.x86.avx512.mask.scalef.ps.512
llvm.x86.avx512.mask.scalef.sd
llvm.x86.avx512.mask.scalef.ss
llvm.x86.avx512.mask.shuf.f32x4
llvm.x86.avx512.mask.shuf.f32x4.256
llvm.x86.avx512.mask.shuf.f64x2
llvm.x86.avx512.mask.shuf.f64x2.256
llvm.x86.avx512.mask.shuf.i32x4
llvm.x86.avx512.mask.shuf.i32x4.256
llvm.x86.avx512.mask.shuf.i64x2
llvm.x86.avx512.mask.shuf.i64x2.256
llvm.x86.avx512.mask.sqrt.pd.128
llvm.x86.avx512.mask.sqrt.pd.256
llvm.x86.avx512.mask.sqrt.pd.512
llvm.x86.avx512.mask.sqrt.ps.128
llvm.x86.avx512.mask.sqrt.ps.256
llvm.x86.avx512.mask.sqrt.ps.512
llvm.x86.avx512.mask.sqrt.sd
llvm.x86.avx512.mask.sqrt.ss
llvm.x86.avx512.mask.store.ss
llvm.x86.avx512.mask.sub.pd.512
llvm.x86.avx512.mask.sub.ps.512
llvm.x86.avx512.mask.sub.sd.round
llvm.x86.avx512.mask.sub.ss.round
llvm.x86.avx512.mask.vcvtph2ps.128
llvm.x86.avx512.mask.vcvtph2ps.256
llvm.x86.avx512.mask.vcvtph2ps.512
llvm.x86.avx512.mask.vcvtps2ph.128
llvm.x86.avx512.mask.vcvtps2ph.256
llvm.x86.avx512.mask.vcvtps2ph.512
llvm.x86.avx512.mask.vfmadd.pd.128
llvm.x86.avx512.mask.vfmadd.pd.256
llvm.x86.avx512.mask.vfmadd.pd.512
llvm.x86.avx512.mask.vfmadd.ps.128
llvm.x86.avx512.mask.vfmadd.ps.256
llvm.x86.avx512.mask.vfmadd.ps.512
llvm.x86.avx512.mask.vfmadd.sd
llvm.x86.avx512.mask.vfmadd.ss
llvm.x86.avx512.mask.vfmaddsub.pd.128
llvm.x86.avx512.mask.vfmaddsub.pd.256
llvm.x86.avx512.mask.vfmaddsub.pd.512
llvm.x86.avx512.mask.vfmaddsub.ps.128
llvm.x86.avx512.mask.vfmaddsub.ps.256
llvm.x86.avx512.mask.vfmaddsub.ps.512
llvm.x86.avx512.mask.vfnmadd.pd.128
llvm.x86.avx512.mask.vfnmadd.pd.256
llvm.x86.avx512.mask.vfnmadd.pd.512
llvm.x86.avx512.mask.vfnmadd.ps.128
llvm.x86.avx512.mask.vfnmadd.ps.256
llvm.x86.avx512.mask.vfnmadd.ps.512
llvm.x86.avx512.mask.vfnmsub.pd.128
llvm.x86.avx512.mask.vfnmsub.pd.256
llvm.x86.avx512.mask.vfnmsub.pd.512
llvm.x86.avx512.mask.vfnmsub.ps.128
llvm.x86.avx512.mask.vfnmsub.ps.256
llvm.x86.avx512.mask.vfnmsub.ps.512
llvm.x86.avx512.mask.vpermi2var.d.128
llvm.x86.avx512.mask.vpermi2var.d.256
llvm.x86.avx512.mask.vpermi2var.d.512
llvm.x86.avx512.mask.vpermi2var.hi.128
llvm.x86.avx512.mask.vpermi2var.hi.256
llvm.x86.avx512.mask.vpermi2var.hi.512
llvm.x86.avx512.mask.vpermi2var.pd.128
llvm.x86.avx512.mask.vpermi2var.pd.256
llvm.x86.avx512.mask.vpermi2var.pd.512
llvm.x86.avx512.mask.vpermi2var.ps.128
llvm.x86.avx512.mask.vpermi2var.ps.256
llvm.x86.avx512.mask.vpermi2var.ps.512
llvm.x86.avx512.mask.vpermi2var.q.128
llvm.x86.avx512.mask.vpermi2var.q.256
llvm.x86.avx512.mask.vpermi2var.q.512
llvm.x86.avx512.mask.vpermi2var.qi.128
llvm.x86.avx512.mask.vpermi2var.qi.256
llvm.x86.avx512.mask.vpermi2var.qi.512
llvm.x86.avx512.mask.vpermt2var.d.128
llvm.x86.avx512.mask.vpermt2var.d.256
llvm.x86.avx512.mask.vpermt2var.d.512
llvm.x86.avx512.mask.vpermt2var.hi.128
llvm.x86.avx512.mask.vpermt2var.hi.256
llvm.x86.avx512.mask.vpermt2var.hi.512
llvm.x86.avx512.mask.vpermt2var.pd.128
llvm.x86.avx512.mask.vpermt2var.pd.256
llvm.x86.avx512.mask.vpermt2var.pd.512
llvm.x86.avx512.mask.vpermt2var.ps.128
llvm.x86.avx512.mask.vpermt2var.ps.256
llvm.x86.avx512.mask.vpermt2var.ps.512
llvm.x86.avx512.mask.vpermt2var.q.128
llvm.x86.avx512.mask.vpermt2var.q.256
llvm.x86.avx512.mask.vpermt2var.q.512
llvm.x86.avx512.mask.vpermt2var.qi.128
llvm.x86.avx512.mask.vpermt2var.qi.256
llvm.x86.avx512.mask.vpermt2var.qi.512
llvm.x86.avx512.mask.vpmadd52h.uq.128
llvm.x86.avx512.mask.vpmadd52h.uq.256
llvm.x86.avx512.mask.vpmadd52h.uq.512
llvm.x86.avx512.mask.vpmadd52l.uq.128
llvm.x86.avx512.mask.vpmadd52l.uq.256
llvm.x86.avx512.mask.vpmadd52l.uq.512
llvm.x86.avx512.mask3.vfmadd.pd.128
llvm.x86.avx512.mask3.vfmadd.pd.256
llvm.x86.avx512.mask3.vfmadd.pd.512
llvm.x86.avx512.mask3.vfmadd.ps.128
llvm.x86.avx512.mask3.vfmadd.ps.256
llvm.x86.avx512.mask3.vfmadd.ps.512
llvm.x86.avx512.mask3.vfmadd.sd
llvm.x86.avx512.mask3.vfmadd.ss
llvm.x86.avx512.mask3.vfmaddsub.pd.128
llvm.x86.avx512.mask3.vfmaddsub.pd.256
llvm.x86.avx512.mask3.vfmaddsub.pd.512
llvm.x86.avx512.mask3.vfmaddsub.ps.128
llvm.x86.avx512.mask3.vfmaddsub.ps.256
llvm.x86.avx512.mask3.vfmaddsub.ps.512
llvm.x86.avx512.mask3.vfmsub.pd.128
llvm.x86.avx512.mask3.vfmsub.pd.256
llvm.x86.avx512.mask3.vfmsub.pd.512
llvm.x86.avx512.mask3.vfmsub.ps.128
llvm.x86.avx512.mask3.vfmsub.ps.256
llvm.x86.avx512.mask3.vfmsub.ps.512
llvm.x86.avx512.mask3.vfmsub.sd
llvm.x86.avx512.mask3.vfmsub.ss
llvm.x86.avx512.mask3.vfmsubadd.pd.128
llvm.x86.avx512.mask3.vfmsubadd.pd.256
llvm.x86.avx512.mask3.vfmsubadd.pd.512
llvm.x86.avx512.mask3.vfmsubadd.ps.128
llvm.x86.avx512.mask3.vfmsubadd.ps.256
llvm.x86.avx512.mask3.vfmsubadd.ps.512
llvm.x86.avx512.mask3.vfnmsub.pd.128
llvm.x86.avx512.mask3.vfnmsub.pd.256
llvm.x86.avx512.mask3.vfnmsub.pd.512
llvm.x86.avx512.mask3.vfnmsub.ps.128
llvm.x86.avx512.mask3.vfnmsub.ps.256
llvm.x86.avx512.mask3.vfnmsub.ps.512
llvm.x86.avx512.mask3.vfnmsub.sd
llvm.x86.avx512.mask3.vfnmsub.ss
llvm.x86.avx512.maskz.fixupimm.pd.128
llvm.x86.avx512.maskz.fixupimm.pd.256
llvm.x86.avx512.maskz.fixupimm.pd.512
llvm.x86.avx512.maskz.fixupimm.ps.128
llvm.x86.avx512.maskz.fixupimm.ps.256
llvm.x86.avx512.maskz.fixupimm.ps.512
llvm.x86.avx512.maskz.fixupimm.sd
llvm.x86.avx512.maskz.fixupimm.ss
llvm.x86.avx512.maskz.pternlog.d.128
llvm.x86.avx512.maskz.pternlog.d.256
llvm.x86.avx512.maskz.pternlog.d.512
llvm.x86.avx512.maskz.pternlog.q.128
llvm.x86.avx512.maskz.pternlog.q.256
llvm.x86.avx512.maskz.pternlog.q.512
llvm.x86.avx512.maskz.vfmadd.pd.128
llvm.x86.avx512.maskz.vfmadd.pd.256
llvm.x86.avx512.maskz.vfmadd.pd.512
llvm.x86.avx512.maskz.vfmadd.ps.128
llvm.x86.avx512.maskz.vfmadd.ps.256
llvm.x86.avx512.maskz.vfmadd.ps.512
llvm.x86.avx512.maskz.vfmadd.sd
llvm.x86.avx512.maskz.vfmadd.ss
llvm.x86.avx512.maskz.vfmaddsub.pd.128
llvm.x86.avx512.maskz.vfmaddsub.pd.256
llvm.x86.avx512.maskz.vfmaddsub.pd.512
llvm.x86.avx512.maskz.vfmaddsub.ps.128
llvm.x86.avx512.maskz.vfmaddsub.ps.256
llvm.x86.avx512.maskz.vfmaddsub.ps.512
llvm.x86.avx512.maskz.vpermt2var.d.128
llvm.x86.avx512.maskz.vpermt2var.d.256
llvm.x86.avx512.maskz.vpermt2var.d.512
llvm.x86.avx512.maskz.vpermt2var.hi.128
llvm.x86.avx512.maskz.vpermt2var.hi.256
llvm.x86.avx512.maskz.vpermt2var.hi.512
llvm.x86.avx512.maskz.vpermt2var.pd.128
llvm.x86.avx512.maskz.vpermt2var.pd.256
llvm.x86.avx512.maskz.vpermt2var.pd.512
llvm.x86.avx512.maskz.vpermt2var.ps.128
llvm.x86.avx512.maskz.vpermt2var.ps.256
llvm.x86.avx512.maskz.vpermt2var.ps.512
llvm.x86.avx512.maskz.vpermt2var.q.128
llvm.x86.avx512.maskz.vpermt2var.q.256
llvm.x86.avx512.maskz.vpermt2var.q.512
llvm.x86.avx512.maskz.vpermt2var.qi.128
llvm.x86.avx512.maskz.vpermt2var.qi.256
llvm.x86.avx512.maskz.vpermt2var.qi.512
llvm.x86.avx512.maskz.vpmadd52h.uq.128
llvm.x86.avx512.maskz.vpmadd52h.uq.256
llvm.x86.avx512.maskz.vpmadd52h.uq.512
llvm.x86.avx512.maskz.vpmadd52l.uq.128
llvm.x86.avx512.maskz.vpmadd52l.uq.256
llvm.x86.avx512.maskz.vpmadd52l.uq.512
llvm.x86.avx512.packssdw.512
llvm.x86.avx512.packsswb.512
llvm.x86.avx512.packusdw.512
llvm.x86.avx512.packuswb.512
llvm.x86.avx512.pmul.dq.512
llvm.x86.avx512.pmulu.dq.512
llvm.x86.avx512.psad.bw.512
llvm.x86.avx512.pshuf.b.512
llvm.x86.avx512.psll.d.512
llvm.x86.avx512.psll.q.512
llvm.x86.avx512.psll.w.512
llvm.x86.avx512.pslli.d.512
llvm.x86.avx512.pslli.q.512
llvm.x86.avx512.pslli.w.512
llvm.x86.avx512.psllv.d.512
llvm.x86.avx512.psllv.q.512
llvm.x86.avx512.psllv.w.128
llvm.x86.avx512.psllv.w.256
llvm.x86.avx512.psllv.w.512
llvm.x86.avx512.psra.d.512
llvm.x86.avx512.psra.q.128
llvm.x86.avx512.psra.q.256
llvm.x86.avx512.psra.q.512
llvm.x86.avx512.psra.w.512
llvm.x86.avx512.psrai.d.512
llvm.x86.avx512.psrai.q.128
llvm.x86.avx512.psrai.q.256
llvm.x86.avx512.psrai.q.512
llvm.x86.avx512.psrai.w.512
llvm.x86.avx512.psrav.d.512
llvm.x86.avx512.psrav.q.128
llvm.x86.avx512.psrav.q.256
llvm.x86.avx512.psrav.q.512
llvm.x86.avx512.psrav.w.128
llvm.x86.avx512.psrav.w.256
llvm.x86.avx512.psrav.w.512
llvm.x86.avx512.psrl.d.512
llvm.x86.avx512.psrl.q.512
llvm.x86.avx512.psrl.w.512
llvm.x86.avx512.psrli.d.512
llvm.x86.avx512.psrli.q.512
llvm.x86.avx512.psrli.w.512
llvm.x86.avx512.psrlv.d.512
llvm.x86.avx512.psrlv.q.512
llvm.x86.avx512.psrlv.w.128
llvm.x86.avx512.psrlv.w.256
llvm.x86.avx512.psrlv.w.512
llvm.x86.avx512.ptestm.b.128
llvm.x86.avx512.ptestm.b.256
llvm.x86.avx512.ptestm.b.512
llvm.x86.avx512.ptestm.d.128
llvm.x86.avx512.ptestm.d.256
llvm.x86.avx512.ptestm.d.512
llvm.x86.avx512.ptestm.q.128
llvm.x86.avx512.ptestm.q.256
llvm.x86.avx512.ptestm.q.512
llvm.x86.avx512.ptestm.w.128
llvm.x86.avx512.ptestm.w.256
llvm.x86.avx512.ptestm.w.512
llvm.x86.avx512.ptestnm.b.128
llvm.x86.avx512.ptestnm.b.256
llvm.x86.avx512.ptestnm.b.512
llvm.x86.avx512.ptestnm.d.128
llvm.x86.avx512.ptestnm.d.256
llvm.x86.avx512.ptestnm.d.512
llvm.x86.avx512.ptestnm.q.128
llvm.x86.avx512.ptestnm.q.256
llvm.x86.avx512.ptestnm.q.512
llvm.x86.avx512.ptestnm.w.128
llvm.x86.avx512.ptestnm.w.256
llvm.x86.avx512.ptestnm.w.512
llvm.x86.avx512.rcp14.pd.128
llvm.x86.avx512.rcp14.pd.256
llvm.x86.avx512.rcp14.pd.512
llvm.x86.avx512.rcp14.ps.128
llvm.x86.avx512.rcp14.ps.256
llvm.x86.avx512.rcp14.ps.512
llvm.x86.avx512.rcp14.sd
llvm.x86.avx512.rcp14.ss
llvm.x86.avx512.rcp28.pd
llvm.x86.avx512.rcp28.ps
llvm.x86.avx512.rcp28.sd
llvm.x86.avx512.rcp28.ss
llvm.x86.avx512.rsqrt14.pd.128
llvm.x86.avx512.rsqrt14.pd.256
llvm.x86.avx512.rsqrt14.pd.512
llvm.x86.avx512.rsqrt14.ps.128
llvm.x86.avx512.rsqrt14.ps.256
llvm.x86.avx512.rsqrt14.ps.512
llvm.x86.avx512.rsqrt14.sd
llvm.x86.avx512.rsqrt14.ss
llvm.x86.avx512.rsqrt28.pd
llvm.x86.avx512.rsqrt28.ps
llvm.x86.avx512.rsqrt28.sd
llvm.x86.avx512.rsqrt28.ss
llvm.x86.avx512.scatter.dpd.512
llvm.x86.avx512.scatter.dpi.512
llvm.x86.avx512.scatter.dpq.512
llvm.x86.avx512.scatter.dps.512
llvm.x86.avx512.scatter.qpd.512
llvm.x86.avx512.scatter.qpi.512
llvm.x86.avx512.scatter.qpq.512
llvm.x86.avx512.scatter.qps.512
llvm.x86.avx512.scatterdiv2.df
llvm.x86.avx512.scatterdiv2.di
llvm.x86.avx512.scatterdiv4.df
llvm.x86.avx512.scatterdiv4.di
llvm.x86.avx512.scatterdiv4.sf
llvm.x86.avx512.scatterdiv4.si
llvm.x86.avx512.scatterdiv8.sf
llvm.x86.avx512.scatterdiv8.si
llvm.x86.avx512.scatterpf.dpd.512
llvm.x86.avx512.scatterpf.dps.512
llvm.x86.avx512.scatterpf.qpd.512
llvm.x86.avx512.scatterpf.qps.512
llvm.x86.avx512.scattersiv2.df
llvm.x86.avx512.scattersiv2.di
llvm.x86.avx512.scattersiv4.df
llvm.x86.avx512.scattersiv4.di
llvm.x86.avx512.scattersiv4.sf
llvm.x86.avx512.scattersiv4.si
llvm.x86.avx512.scattersiv8.sf
llvm.x86.avx512.scattersiv8.si
llvm.x86.avx512.vbroadcast.sd.512
llvm.x86.avx512.vbroadcast.ss.512
llvm.x86.avx512.vcomi.sd
llvm.x86.avx512.vcomi.ss
llvm.x86.avx512.vcvtsd2si32
llvm.x86.avx512.vcvtsd2si64
llvm.x86.avx512.vcvtsd2usi32
llvm.x86.avx512.vcvtsd2usi64
llvm.x86.avx512.vcvtss2si32
llvm.x86.avx512.vcvtss2si64
llvm.x86.avx512.vcvtss2usi32
llvm.x86.avx512.vcvtss2usi64
llvm.x86.avx512.vpermilvar.pd.512
llvm.x86.avx512.vpermilvar.ps.512
llvm.x86.bmi.bextr.32
llvm.x86.bmi.bextr.64
llvm.x86.bmi.bzhi.32
llvm.x86.bmi.bzhi.64
llvm.x86.bmi.pdep.32
llvm.x86.bmi.pdep.64
llvm.x86.bmi.pext.32
llvm.x86.bmi.pext.64
llvm.x86.clflushopt
llvm.x86.clzero
llvm.x86.flags.read.u32
llvm.x86.flags.read.u64
llvm.x86.flags.write.u32
llvm.x86.flags.write.u64
llvm.x86.fma.vfmadd.pd
llvm.x86.fma.vfmadd.pd.256
llvm.x86.fma.vfmadd.ps
llvm.x86.fma.vfmadd.ps.256
llvm.x86.fma.vfmadd.sd
llvm.x86.fma.vfmadd.ss
llvm.x86.fma.vfmaddsub.pd
llvm.x86.fma.vfmaddsub.pd.256
llvm.x86.fma.vfmaddsub.ps
llvm.x86.fma.vfmaddsub.ps.256
llvm.x86.fma.vfmsub.pd
llvm.x86.fma.vfmsub.pd.256
llvm.x86.fma.vfmsub.ps
llvm.x86.fma.vfmsub.ps.256
llvm.x86.fma.vfmsub.sd
llvm.x86.fma.vfmsub.ss
llvm.x86.fma.vfmsubadd.pd
llvm.x86.fma.vfmsubadd.pd.256
llvm.x86.fma.vfmsubadd.ps
llvm.x86.fma.vfmsubadd.ps.256
llvm.x86.fma.vfnmadd.pd
llvm.x86.fma.vfnmadd.pd.256
llvm.x86.fma.vfnmadd.ps
llvm.x86.fma.vfnmadd.ps.256
llvm.x86.fma.vfnmadd.sd
llvm.x86.fma.vfnmadd.ss
llvm.x86.fma.vfnmsub.pd
llvm.x86.fma.vfnmsub.pd.256
llvm.x86.fma.vfnmsub.ps
llvm.x86.fma.vfnmsub.ps.256
llvm.x86.fma.vfnmsub.sd
llvm.x86.fma.vfnmsub.ss
llvm.x86.fxrstor
llvm.x86.fxrstor64
llvm.x86.fxsave
llvm.x86.fxsave64
llvm.x86.int
llvm.x86.llwpcb
llvm.x86.lwpins32
llvm.x86.lwpins64
llvm.x86.lwpval32
llvm.x86.lwpval64
llvm.x86.mmx.emms
llvm.x86.mmx.femms
llvm.x86.mmx.maskmovq
llvm.x86.mmx.movnt.dq
llvm.x86.mmx.packssdw
llvm.x86.mmx.packsswb
llvm.x86.mmx.packuswb
llvm.x86.mmx.padd.b
llvm.x86.mmx.padd.d
llvm.x86.mmx.padd.q
llvm.x86.mmx.padd.w
llvm.x86.mmx.padds.b
llvm.x86.mmx.padds.w
llvm.x86.mmx.paddus.b
llvm.x86.mmx.paddus.w
llvm.x86.mmx.palignr.b
llvm.x86.mmx.pand
llvm.x86.mmx.pandn
llvm.x86.mmx.pavg.b
llvm.x86.mmx.pavg.w
llvm.x86.mmx.pcmpeq.b
llvm.x86.mmx.pcmpeq.d
llvm.x86.mmx.pcmpeq.w
llvm.x86.mmx.pcmpgt.b
llvm.x86.mmx.pcmpgt.d
llvm.x86.mmx.pcmpgt.w
llvm.x86.mmx.pextr.w
llvm.x86.mmx.pinsr.w
llvm.x86.mmx.pmadd.wd
llvm.x86.mmx.pmaxs.w
llvm.x86.mmx.pmaxu.b
llvm.x86.mmx.pmins.w
llvm.x86.mmx.pminu.b
llvm.x86.mmx.pmovmskb
llvm.x86.mmx.pmulh.w
llvm.x86.mmx.pmulhu.w
llvm.x86.mmx.pmull.w
llvm.x86.mmx.pmulu.dq
llvm.x86.mmx.por
llvm.x86.mmx.psad.bw
llvm.x86.mmx.psll.d
llvm.x86.mmx.psll.q
llvm.x86.mmx.psll.w
llvm.x86.mmx.pslli.d
llvm.x86.mmx.pslli.q
llvm.x86.mmx.pslli.w
llvm.x86.mmx.psra.d
llvm.x86.mmx.psra.w
llvm.x86.mmx.psrai.d
llvm.x86.mmx.psrai.w
llvm.x86.mmx.psrl.d
llvm.x86.mmx.psrl.q
llvm.x86.mmx.psrl.w
llvm.x86.mmx.psrli.d
llvm.x86.mmx.psrli.q
llvm.x86.mmx.psrli.w
llvm.x86.mmx.psub.b
llvm.x86.mmx.psub.d
llvm.x86.mmx.psub.q
llvm.x86.mmx.psub.w
llvm.x86.mmx.psubs.b
llvm.x86.mmx.psubs.w
llvm.x86.mmx.psubus.b
llvm.x86.mmx.psubus.w
llvm.x86.mmx.punpckhbw
llvm.x86.mmx.punpckhdq
llvm.x86.mmx.punpckhwd
llvm.x86.mmx.punpcklbw
llvm.x86.mmx.punpckldq
llvm.x86.mmx.punpcklwd
llvm.x86.mmx.pxor
llvm.x86.monitorx
llvm.x86.mwaitx
llvm.x86.pclmulqdq
llvm.x86.rdfsbase.32
llvm.x86.rdfsbase.64
llvm.x86.rdgsbase.32
llvm.x86.rdgsbase.64
llvm.x86.rdpkru
llvm.x86.rdpmc
llvm.x86.rdrand.16
llvm.x86.rdrand.32
llvm.x86.rdrand.64
llvm.x86.rdseed.16
llvm.x86.rdseed.32
llvm.x86.rdseed.64
llvm.x86.rdtsc
llvm.x86.rdtscp
llvm.x86.seh.ehguard
llvm.x86.seh.ehregnode
llvm.x86.seh.lsda
llvm.x86.seh.recoverfp
llvm.x86.sha1msg1
llvm.x86.sha1msg2
llvm.x86.sha1nexte
llvm.x86.sha1rnds4
llvm.x86.sha256msg1
llvm.x86.sha256msg2
llvm.x86.sha256rnds2
llvm.x86.slwpcb
llvm.x86.sse.cmp.ps
llvm.x86.sse.cmp.ss
llvm.x86.sse.comieq.ss
llvm.x86.sse.comige.ss
llvm.x86.sse.comigt.ss
llvm.x86.sse.comile.ss
llvm.x86.sse.comilt.ss
llvm.x86.sse.comineq.ss
llvm.x86.sse.cvtpd2pi
llvm.x86.sse.cvtpi2pd
llvm.x86.sse.cvtpi2ps
llvm.x86.sse.cvtps2pi
llvm.x86.sse.cvtsi2ss
llvm.x86.sse.cvtsi642ss
llvm.x86.sse.cvtss2si
llvm.x86.sse.cvtss2si64
llvm.x86.sse.cvttpd2pi
llvm.x86.sse.cvttps2pi
llvm.x86.sse.cvttss2si
llvm.x86.sse.cvttss2si64
llvm.x86.sse.ldmxcsr
llvm.x86.sse.max.ps
llvm.x86.sse.max.ss
llvm.x86.sse.min.ps
llvm.x86.sse.min.ss
llvm.x86.sse.movmsk.ps
llvm.x86.sse.pshuf.w
llvm.x86.sse.rcp.ps
llvm.x86.sse.rcp.ss
llvm.x86.sse.rsqrt.ps
llvm.x86.sse.rsqrt.ss
llvm.x86.sse.sfence
llvm.x86.sse.sqrt.ps
llvm.x86.sse.sqrt.ss
llvm.x86.sse.stmxcsr
llvm.x86.sse.ucomieq.ss
llvm.x86.sse.ucomige.ss
llvm.x86.sse.ucomigt.ss
llvm.x86.sse.ucomile.ss
llvm.x86.sse.ucomilt.ss
llvm.x86.sse.ucomineq.ss
llvm.x86.sse2.clflush
llvm.x86.sse2.cmp.pd
llvm.x86.sse2.cmp.sd
llvm.x86.sse2.comieq.sd
llvm.x86.sse2.comige.sd
llvm.x86.sse2.comigt.sd
llvm.x86.sse2.comile.sd
llvm.x86.sse2.comilt.sd
llvm.x86.sse2.comineq.sd
llvm.x86.sse2.cvtdq2ps
llvm.x86.sse2.cvtpd2dq
llvm.x86.sse2.cvtpd2ps
llvm.x86.sse2.cvtps2dq
llvm.x86.sse2.cvtsd2si
llvm.x86.sse2.cvtsd2si64
llvm.x86.sse2.cvtsd2ss
llvm.x86.sse2.cvtsi2sd
llvm.x86.sse2.cvtsi642sd
llvm.x86.sse2.cvtss2sd
llvm.x86.sse2.cvttpd2dq
llvm.x86.sse2.cvttps2dq
llvm.x86.sse2.cvttsd2si
llvm.x86.sse2.cvttsd2si64
llvm.x86.sse2.lfence
llvm.x86.sse2.maskmov.dqu
llvm.x86.sse2.max.pd
llvm.x86.sse2.max.sd
llvm.x86.sse2.mfence
llvm.x86.sse2.min.pd
llvm.x86.sse2.min.sd
llvm.x86.sse2.movmsk.pd
llvm.x86.sse2.packssdw.128
llvm.x86.sse2.packsswb.128
llvm.x86.sse2.packuswb.128
llvm.x86.sse2.padds.b
llvm.x86.sse2.padds.w
llvm.x86.sse2.paddus.b
llvm.x86.sse2.paddus.w
llvm.x86.sse2.pause
llvm.x86.sse2.pavg.b
llvm.x86.sse2.pavg.w
llvm.x86.sse2.pmadd.wd
llvm.x86.sse2.pmovmskb.128
llvm.x86.sse2.pmulh.w
llvm.x86.sse2.pmulhu.w
llvm.x86.sse2.pmulu.dq
llvm.x86.sse2.psad.bw
llvm.x86.sse2.psll.d
llvm.x86.sse2.psll.q
llvm.x86.sse2.psll.w
llvm.x86.sse2.pslli.d
llvm.x86.sse2.pslli.q
llvm.x86.sse2.pslli.w
llvm.x86.sse2.psra.d
llvm.x86.sse2.psra.w
llvm.x86.sse2.psrai.d
llvm.x86.sse2.psrai.w
llvm.x86.sse2.psrl.d
llvm.x86.sse2.psrl.q
llvm.x86.sse2.psrl.w
llvm.x86.sse2.psrli.d
llvm.x86.sse2.psrli.q
llvm.x86.sse2.psrli.w
llvm.x86.sse2.psubs.b
llvm.x86.sse2.psubs.w
llvm.x86.sse2.psubus.b
llvm.x86.sse2.psubus.w
llvm.x86.sse2.sqrt.pd
llvm.x86.sse2.sqrt.sd
llvm.x86.sse2.ucomieq.sd
llvm.x86.sse2.ucomige.sd
llvm.x86.sse2.ucomigt.sd
llvm.x86.sse2.ucomile.sd
llvm.x86.sse2.ucomilt.sd
llvm.x86.sse2.ucomineq.sd
llvm.x86.sse3.addsub.pd
llvm.x86.sse3.addsub.ps
llvm.x86.sse3.hadd.pd
llvm.x86.sse3.hadd.ps
llvm.x86.sse3.hsub.pd
llvm.x86.sse3.hsub.ps
llvm.x86.sse3.ldu.dq
llvm.x86.sse3.monitor
llvm.x86.sse3.mwait
llvm.x86.sse41.blendvpd
llvm.x86.sse41.blendvps
llvm.x86.sse41.dppd
llvm.x86.sse41.dpps
llvm.x86.sse41.insertps
llvm.x86.sse41.mpsadbw
llvm.x86.sse41.packusdw
llvm.x86.sse41.pblendvb
llvm.x86.sse41.phminposuw
llvm.x86.sse41.pmuldq
llvm.x86.sse41.ptestc
llvm.x86.sse41.ptestnzc
llvm.x86.sse41.ptestz
llvm.x86.sse41.round.pd
llvm.x86.sse41.round.ps
llvm.x86.sse41.round.sd
llvm.x86.sse41.round.ss
llvm.x86.sse42.crc32.32.16
llvm.x86.sse42.crc32.32.32
llvm.x86.sse42.crc32.32.8
llvm.x86.sse42.crc32.64.64
llvm.x86.sse42.pcmpestri128
llvm.x86.sse42.pcmpestria128
llvm.x86.sse42.pcmpestric128
llvm.x86.sse42.pcmpestrio128
llvm.x86.sse42.pcmpestris128
llvm.x86.sse42.pcmpestriz128
llvm.x86.sse42.pcmpestrm128
llvm.x86.sse42.pcmpistri128
llvm.x86.sse42.pcmpistria128
llvm.x86.sse42.pcmpistric128
llvm.x86.sse42.pcmpistrio128
llvm.x86.sse42.pcmpistris128
llvm.x86.sse42.pcmpistriz128
llvm.x86.sse42.pcmpistrm128
llvm.x86.sse4a.extrq
llvm.x86.sse4a.extrqi
llvm.x86.sse4a.insertq
llvm.x86.sse4a.insertqi
llvm.x86.ssse3.pabs.b
llvm.x86.ssse3.pabs.b.128
llvm.x86.ssse3.pabs.d
llvm.x86.ssse3.pabs.d.128
llvm.x86.ssse3.pabs.w
llvm.x86.ssse3.pabs.w.128
llvm.x86.ssse3.phadd.d
llvm.x86.ssse3.phadd.d.128
llvm.x86.ssse3.phadd.sw
llvm.x86.ssse3.phadd.sw.128
llvm.x86.ssse3.phadd.w
llvm.x86.ssse3.phadd.w.128
llvm.x86.ssse3.phsub.d
llvm.x86.ssse3.phsub.d.128
llvm.x86.ssse3.phsub.sw
llvm.x86.ssse3.phsub.sw.128
llvm.x86.ssse3.phsub.w
llvm.x86.ssse3.phsub.w.128
llvm.x86.ssse3.pmadd.ub.sw
llvm.x86.ssse3.pmadd.ub.sw.128
llvm.x86.ssse3.pmul.hr.sw
llvm.x86.ssse3.pmul.hr.sw.128
llvm.x86.ssse3.pshuf.b
llvm.x86.ssse3.pshuf.b.128
llvm.x86.ssse3.psign.b
llvm.x86.ssse3.psign.b.128
llvm.x86.ssse3.psign.d
llvm.x86.ssse3.psign.d.128
llvm.x86.ssse3.psign.w
llvm.x86.ssse3.psign.w.128
llvm.x86.subborrow.u32
llvm.x86.subborrow.u64
llvm.x86.tbm.bextri.u32
llvm.x86.tbm.bextri.u64
llvm.x86.vcvtph2ps.128
llvm.x86.vcvtph2ps.256
llvm.x86.vcvtps2ph.128
llvm.x86.vcvtps2ph.256
llvm.x86.wrfsbase.32
llvm.x86.wrfsbase.64
llvm.x86.wrgsbase.32
llvm.x86.wrgsbase.64
llvm.x86.wrpkru
llvm.x86.xabort
llvm.x86.xbegin
llvm.x86.xend
llvm.x86.xgetbv
llvm.x86.xop.vfrcz.pd
llvm.x86.xop.vfrcz.pd.256
llvm.x86.xop.vfrcz.ps
llvm.x86.xop.vfrcz.ps.256
llvm.x86.xop.vfrcz.sd
llvm.x86.xop.vfrcz.ss
llvm.x86.xop.vpcomb
llvm.x86.xop.vpcomd
llvm.x86.xop.vpcomq
llvm.x86.xop.vpcomub
llvm.x86.xop.vpcomud
llvm.x86.xop.vpcomuq
llvm.x86.xop.vpcomuw
llvm.x86.xop.vpcomw
llvm.x86.xop.vpermil2pd
llvm.x86.xop.vpermil2pd.256
llvm.x86.xop.vpermil2ps
llvm.x86.xop.vpermil2ps.256
llvm.x86.xop.vphaddbd
llvm.x86.xop.vphaddbq
llvm.x86.xop.vphaddbw
llvm.x86.xop.vphadddq
llvm.x86.xop.vphaddubd
llvm.x86.xop.vphaddubq
llvm.x86.xop.vphaddubw
llvm.x86.xop.vphaddudq
llvm.x86.xop.vphadduwd
llvm.x86.xop.vphadduwq
llvm.x86.xop.vphaddwd
llvm.x86.xop.vphaddwq
llvm.x86.xop.vphsubbw
llvm.x86.xop.vphsubdq
llvm.x86.xop.vphsubwd
llvm.x86.xop.vpmacsdd
llvm.x86.xop.vpmacsdqh
llvm.x86.xop.vpmacsdql
llvm.x86.xop.vpmacssdd
llvm.x86.xop.vpmacssdqh
llvm.x86.xop.vpmacssdql
llvm.x86.xop.vpmacsswd
llvm.x86.xop.vpmacssww
llvm.x86.xop.vpmacswd
llvm.x86.xop.vpmacsww
llvm.x86.xop.vpmadcsswd
llvm.x86.xop.vpmadcswd
llvm.x86.xop.vpperm
llvm.x86.xop.vprotb
llvm.x86.xop.vprotbi
llvm.x86.xop.vprotd
llvm.x86.xop.vprotdi
llvm.x86.xop.vprotq
llvm.x86.xop.vprotqi
llvm.x86.xop.vprotw
llvm.x86.xop.vprotwi
llvm.x86.xop.vpshab
llvm.x86.xop.vpshad
llvm.x86.xop.vpshaq
llvm.x86.xop.vpshaw
llvm.x86.xop.vpshlb
llvm.x86.xop.vpshld
llvm.x86.xop.vpshlq
llvm.x86.xop.vpshlw
llvm.x86.xrstor
llvm.x86.xrstor64
llvm.x86.xrstors
llvm.x86.xrstors64
llvm.x86.xsave
llvm.x86.xsave64
llvm.x86.xsavec
llvm.x86.xsavec64
llvm.x86.xsaveopt
llvm.x86.xsaveopt64
llvm.x86.xsaves
llvm.x86.xsaves64
llvm.x86.xsetbv
llvm.x86.xtest
llvm.xcore.bitrev
llvm.xcore.checkevent
llvm.xcore.chkct
llvm.xcore.clre
llvm.xcore.clrpt
llvm.xcore.clrsr
llvm.xcore.crc32
llvm.xcore.crc8
llvm.xcore.edu
llvm.xcore.eeu
llvm.xcore.endin
llvm.xcore.freer
llvm.xcore.geted
llvm.xcore.getet
llvm.xcore.getid
llvm.xcore.getps
llvm.xcore.getr
llvm.xcore.getst
llvm.xcore.getts
llvm.xcore.in
llvm.xcore.inct
llvm.xcore.initcp
llvm.xcore.initdp
llvm.xcore.initlr
llvm.xcore.initpc
llvm.xcore.initsp
llvm.xcore.inshr
llvm.xcore.int
llvm.xcore.mjoin
llvm.xcore.msync
llvm.xcore.out
llvm.xcore.outct
llvm.xcore.outshr
llvm.xcore.outt
llvm.xcore.peek
llvm.xcore.setc
llvm.xcore.setclk
llvm.xcore.setd
llvm.xcore.setev
llvm.xcore.setps
llvm.xcore.setpsc
llvm.xcore.setpt
llvm.xcore.setrdy
llvm.xcore.setsr
llvm.xcore.settw
llvm.xcore.setv
llvm.xcore.sext
llvm.xcore.ssync
llvm.xcore.syncr
llvm.xcore.testct
llvm.xcore.testwct
llvm.xcore.waitevent
llvm.xcore.zext
aarch64
amdgcn
hexagon
mips
nvvm
r600
s390
wasm
xcore
vararg
<unknown>:
Print Module IR
<Invalid operator> 
indirectbr
invoke
resume
unreachable
cleanupret
catchret
catchswitch
fadd
fsub
fmul
udiv
sdiv
fdiv
urem
srem
frem
lshr
ashr
alloca
getelementptr
cmpxchg
atomicrmw
trunc
zext
fptoui
fptosi
uitofp
sitofp
fptrunc
fpext
ptrtoint
inttoptr
bitcast
addrspacecast
cleanuppad
catchpad
icmp
fcmp
va_arg
extractelement
insertelement
shufflevector
extractvalue
insertvalue
landingpad
malloc
free
unknown
false
true
round.dynamic
round.tonearest
round.downward
round.upward
round.towardzero
fpexcept.ignore
fpexcept.maytrap
fpexcept.strict
tbaa
prof
fpmath
range
tbaa.struct
invariant.load
alias.scope
noalias
nontemporal
llvm.mem.parallel_loop_access
nonnull
dereferenceable
dereferenceable_or_null
make.implicit
unpredictable
invariant.group
align
llvm.loop
type
section_prefix
absolute_symbol
associated
deopt
funclet
gc-transition
singlethread
warning
remark
Pass Arguments: 
Pass '
' is not initialized.
Verify if there is a pass dependency cycle.
Required Passes:
Error: Required pass not found! Possible causes:
- Pass misconfiguration (e.g.: missing macros)
- Corruption of the global PassRegistry
*** IR Dump Before 
 ***
*** IR Dump After 
Releasing pass '
Running pass '
 on module '
function
basic block
 -*- '
' is the last user of following pass instances.
 Free these instances
 -- '
' is not preserving '
Used
 Analyses:
 Uninitialized Pass
Preserved
Required
Executing Pass '
Made Modification '
 Freeing Pass '
' on BasicBlock '
'...
' on Function '
' on Module '
' on Region '
' on Loop '
' on Call Graph Nodes '
FunctionPass Manager
Function Pass Manager
Disabled
disable debug output
Arguments
print pass arguments to pass to 'opt'
print pass structure before run()
Executions
print pass name before it is executed
Details
print pass details when it is executed
debug-pass
Print PassManager debugging information
print-before
Print IR before specified passes
print-after
Print IR after specified passes
print-before-all
Print IR before each pass
print-after-all
Print IR after each pass
filter-print-funcs
function names
Only print IR for functions whose name match this for all print-[before|after][-all] options
Time each pass, printing elapsed time for each on exit
time-passes
cl::location(x) specified more than once!
Cannot find option named '
branch_weights
llvm.module.flags
PIC Level
PIE Level
ProfileSummary
opt-bisect-limit
Maximum optimization to perform
Pass::print not implemented for pass: '
Unnamed pass: implement Pass::getPassName()
Two passes with the same argument (-
) attempted to be registered!
DesiredTypeName = 
 on 
Invalidating all non-preserved analyses for: 
Invalidating analysis: 
Running analysis: 
InstrProf
SampleProfile
DetailedSummary
ProfileFormat
TotalCount
MaxCount
MaxInternalCount
MaxFunctionCount
NumCounts
NumFunctions
ppcf128
isVoid
x86mmx
v16i1
v32i1
v64i1
v512i1
v1024i1
v16i8
v32i8
v64i8
v128i8
v256i8
v1i16
v2i16
v4i16
v8i16
v16i16
v32i16
v64i16
v128i16
v1i32
v2i32
v4i32
v8i32
v16i32
v32i32
v64i32
v1i64
v2i64
v4i64
v8i64
v16i64
v32i64
v1i128
v1f32
v2f32
v2f16
v4f16
v8f16
v4f32
v8f32
v16f32
v1f64
v2f64
v4f64
v8f64
Untyped
verify-debug-info
Basic Block in function '
' does not have terminator!
Function context does not match Module context!
Functions may not have common linkage
# formal arguments must match # of arguments for function type!
Functions cannot return aggregate values!
Invalid struct return type!
Attribute after last parameter!
Attribute 'builtin' can only be applied to a callsite.
Calling convention requires void return type
Calling convention does not allow sret
Calling convention does not support varargs or perfect forwarding!
llvm.
Argument value does not match function argument type!
Function arguments must have first-class types!
Function takes metadata but isn't an intrinsic
Function takes token but isn't an intrinsic
Functions returns a token but isn't an intrinsic
!prof annotations should have no less than 2 operands
first operand should not be null
expected string with name of the !prof annotation
function_entry_count
first operand should be 'function_entry_count'
second operand should not be null
expected integer argument to function_entry_count
Referencing personality function in another module!
unmaterialized function cannot have metadata
function declaration may not have a !dbg attachment
function declaration may not have a !prof attachment
Function declaration shouldn't have a personality routine
llvm intrinsics cannot be defined!
Entry block to function must not have predecessors!
blockaddress may not be used with the entry block!
function must have a single !dbg attachment
function !dbg attachment must be a subprogram
DISubprogram attached to more than one function
function must have a single !prof attachment
Invalid user of intrinsic instruction!
Function is marked as dllimport, but not external.
!dbg attachment points at wrong subprogram for function
Basic Block does not have terminator!
PHI nodes must have at least one entry.  If the block is dead, the PHI should be removed!
PHINode should have one entry for each predecessor of its parent basic block!
PHI node has multiple entries for the same basic block with different incoming values!
PHI node entries do not match predecessors!
Instruction has bogus parent pointer!
Operand is null
EH pads can't handle each other's exceptions
Found return instr that returns non-void in Function of void return type!
Function return type does not match operand type of return inst!
Terminator found in the middle of a basic block!
Branch condition is not 'i1' type!
Switch constants must all be same type as switch value!
Duplicate integer as switch case
Indirectbr operand must have pointer type!
Indirectbr destinations must all have pointer type!
The unwind destination does not have an exception handling instruction!
ResumeInst needs to be in a function with a personality.
The resume instruction should have a consistent result type inside a function.
CleanupReturnInst needs to be provided a CleanupPad
CleanupReturnInst must unwind to an EH block which is not a landingpad.
CatchReturnInst needs to be provided a CatchPad
CatchSwitchInst needs to be in a function with a personality.
CatchSwitchInst not the first non-PHI instruction in the block.
CatchSwitchInst has an invalid parent.
CatchSwitchInst must unwind to an EH block which is not a landingpad.
CatchSwitchInst cannot have empty handler list
CatchSwitchInst handlers must be catchpads
Allocation instruction pointer not in the stack address space!
Cannot allocate unsized type
Alloca array size must have integer type
huge alignment values are unsupported
Load operand must be a pointer.
loading unsized types is not allowed
Load cannot have Release ordering
Atomic load must specify explicit alignment
atomic load operand must have integer, pointer, or floating point type!
atomic memory access' size must be byte-sized
atomic memory access' operand must have a power-of-two size
Non-atomic load cannot have SynchronizationScope specified
Store operand must be a pointer.
Stored value type does not match pointer operand type!
storing unsized types is not allowed
Store cannot have Acquire ordering
Atomic store must specify explicit alignment
atomic store operand must have integer, pointer, or floating point type!
Non-atomic store cannot have SynchronizationScope specified
GEP base pointer is not a vector or a vector of pointers
GEP into unsized type!
Invalid indices for GEP pointer type!
GEP is not of right type for indices!
Vector GEP result width doesn't match operand's
Invalid GEP index vector width
All GEP indices should be of integer type
fence instructions may only have acquire, release, acq_rel, or seq_cst ordering.
cmpxchg instructions must be atomic.
cmpxchg instructions cannot be unordered.
cmpxchg instructions failure argument shall be no stronger than the success argument
cmpxchg failure ordering cannot include release semantics
First cmpxchg operand must be a pointer.
cmpxchg operand must have integer or pointer type
Expected value type does not match pointer operand type!
atomicrmw instructions must be atomic.
atomicrmw instructions cannot be unordered.
First atomicrmw operand must be a pointer.
atomicrmw operand must have integer type!
Argument value type does not match pointer operand type!
Invalid binary operation!
Trunc only operates on integer
Trunc only produces integer
trunc source and destination must both be a vector or neither
DestTy too big for Trunc
ZExt only operates on integer
ZExt only produces an integer
zext source and destination must both be a vector or neither
Type too small for ZExt
SExt only operates on integer
SExt only produces an integer
sext source and destination must both be a vector or neither
Type too small for SExt
FPToUI source and dest must both be vector or scalar
FPToUI source must be FP or FP vector
FPToUI result must be integer or integer vector
FPToUI source and dest vector length mismatch
FPToSI source and dest must both be vector or scalar
FPToSI source must be FP or FP vector
FPToSI result must be integer or integer vector
FPToSI source and dest vector length mismatch
UIToFP source and dest must both be vector or scalar
UIToFP source must be integer or integer vector
UIToFP result must be FP or FP vector
UIToFP source and dest vector length mismatch
SIToFP source and dest must both be vector or scalar
SIToFP source must be integer or integer vector
SIToFP result must be FP or FP vector
SIToFP source and dest vector length mismatch
FPTrunc only operates on FP
FPTrunc only produces an FP
fptrunc source and destination must both be a vector or neither
DestTy too big for FPTrunc
FPExt only operates on FP
FPExt only produces an FP
fpext source and destination must both be a vector or neither
DestTy too small for FPExt
PtrToInt source must be pointer
ptrtoint not supported for non-integral pointers
PtrToInt result must be integral
PtrToInt type mismatch
PtrToInt Vector width mismatch
IntToPtr source must be an integral
IntToPtr result must be a pointer
inttoptr not supported for non-integral pointers
IntToPtr type mismatch
IntToPtr Vector width mismatch
Invalid bitcast
AddrSpaceCast source must be a pointer
AddrSpaceCast result must be a pointer
AddrSpaceCast must be between different address spaces
AddrSpaceCast vector pointer number of elements mismatch
CleanupPadInst needs to be in a function with a personality.
CleanupPadInst not the first non-PHI instruction in the block.
CleanupPadInst has an invalid parent.
CatchPadInst needs to be in a function with a personality.
CatchPadInst needs to be directly nested in a CatchSwitchInst.
CatchPadInst not the first non-PHI instruction in the block.
Both operands to ICmp instruction are not of the same type!
Invalid operand types for ICmp instruction
Invalid predicate in ICmp instruction!
Both operands to FCmp instruction are not of the same type!
Invalid operand types for FCmp instruction
Invalid predicate in FCmp instruction!
PHI nodes not grouped at top of basic block!
PHI nodes cannot have token type!
PHI node operands are not the same type as the result!
Invalid operands for select instruction!
Select values must have same type as select instruction!
User-defined operators should not live outside of a pass!
Invalid extractelement operands!
Invalid insertelement operands!
Invalid shufflevector operands!
Invalid ExtractValueInst operands!
Invalid InsertValueInst operands!
LandingPadInst needs at least one clause or to be a cleanup.
The landingpad instruction should have a consistent result type inside a function.
LandingPadInst needs to be in a function with a personality.
LandingPadInst not the first non-PHI instruction in the block.
Catch operand does not have pointer type!
Clause is neither catch nor filter!
Filter operand is not an array of constants!
cannot use musttail call with inline asm
cannot guarantee tail call due to mismatched parameter counts
cannot guarantee tail call due to mismatched varargs
cannot guarantee tail call due to mismatched return types
cannot guarantee tail call due to mismatched parameter types
cannot guarantee tail call due to mismatched calling conv
cannot guarantee tail call due to mismatched ABI impacting function attributes
bitcast following musttail call must use the call
musttail call must be precede a ret with an optional bitcast
musttail call result must be returned
FuncletPadInst must not be nested within itself
Bogus funclet pad use
Unwind edges out of a funclet pad must have the same unwind dest
Unwind edges out of a catch must have the same unwind dest as the parent catchswitch
Both operands to a binary operator are not of the same type!
Integer arithmetic operators only work with integral types!
Integer arithmetic operators must have same type for operands and result!
Floating-point arithmetic operators only work with floating-point types!
Floating-point arithmetic operators must have same type for operands and result!
Logical operators only work with integral types!
Logical operators must have same type for operands and result!
Shifts only work with integral types!
Shift return type must be same as operands!
EH pad cannot be in entry block.
Block containing LandingPadInst must be jumped to only by the unwind edge of an invoke.
Block containg CatchPadInst must be jumped to only by its catchswitch.
Catchswitch cannot unwind to one of its catchpads
EH pad must be jumped to via an unwind edge
A cleanupret must exit its cleanup
EH pad cannot handle exceptions raised within it
A single unwind edge may only enter one EH pad
EH pad jumps through a cycle of pads
Called function must be a pointer!
Called function is not pointer to function type!
Called function is not the same type as the call!
Called function requires more parameters than were provided!
Incorrect number of arguments passed to called function!
Call parameter type does not match function signature!
speculatable attribute may not apply to call sites
inalloca argument for call has mismatched alloca
swifterror argument for call has mismatched alloca
swifterror argument should come from an alloca or parameter
swifterror argument for call has mismatched parameter
More than one parameter has attribute nest!
More than one parameter has attribute returned!
Incompatible argument and return types for 'returned' attribute
Attribute 'sret' cannot be used for vararg call arguments!
inalloca isn't on the last argument!
Function has metadata parameter but isn't an intrinsic
Function has token parameter but isn't an intrinsic
Return type cannot be token for indirect call!
Multiple deopt operand bundles
Multiple gc-transition operand bundles
Multiple funclet operand bundles
Expected exactly one funclet bundle operand
Funclet bundle operands should correspond to a FuncletPadInst
inlinable function call in a function with debug info must have a !dbg location
Intrinsic functions should never be defined!
Intrinsic has incorrect return type!
Intrinsic has incorrect argument type!
Intrinsic was not defined with variable arguments!
Callsite was not defined with variable arguments!
Intrinsic has too few arguments!
Intrinsic name not mangled correctly for type arguments! Should be: 
info argument of llvm.coro.begin must refer to an initialized constant
info argument of llvm.coro.begin must refer to either a struct or an array
is_zero_undef argument of bit counting intrinsics must be a constant int
invalid arguments for constrained FP intrinsic
invalid exception behavior argument
invalid rounding mode argument
invalid llvm.dbg.declare intrinsic call 1
declare
addr
value
alignment argument of memory intrinsics must be a constant int
alignment argument of memory intrinsics must be a power of 2
isvolatile argument of memory intrinsics must be a constant int
element size of the element-wise unordered atomic memory intrinsic must be a constant int
element size of the element-wise atomic memory intrinsic must be a power of 2
constant length must be a multiple of the element size in the element-wise atomic memory intrinsic
incorrect alignment of the destination argument
incorrect alignment of the source argument
llvm.gcroot parameter #1 must be an alloca.
llvm.gcroot parameter #2 must be a constant.
llvm.gcroot parameter #1 must either be a pointer alloca, or argument #2 must be a non-null constant.
Enclosing function does not use GC.
llvm.init_trampoline parameter #2 must resolve to a function.
invalid arguments to llvm.prefetch
llvm.stackprotector parameter #2 must resolve to an alloca.
size argument of memory use markers must be a constant integer
llvm.invariant.end parameter #2 must be a constant integer
llvm.localescape used outside of entry block
multiple calls to llvm.localescape in one function
llvm.localescape only accepts static allocas
llvm.localrecover first argument must be function defined in this module
idx argument of llvm.localrecover must be a constant int
gc.statepoint support for inline assembly unimplemented
gc.statepoint must read and write all memory to preserve reordering restrictions required by safepoint semantics
gc.statepoint ID must be a constant integer
gc.statepoint number of patchable bytes must be a constant integer
gc.statepoint number of patchable bytes must be positive
gc.statepoint callee must be of function pointer type
gc.statepoint number of arguments to underlying call must be constant integer
gc.statepoint number of arguments to underlying call must be positive
gc.statepoint mismatch in number of vararg call args
gc.statepoint doesn't support wrapping non-void vararg functions yet
gc.statepoint mismatch in number of call args
gc.statepoint flags must be constant integer
unknown flag used in gc.statepoint flags argument
gc.statepoint call argument does not match wrapped function type
gc.statepoint number of transition arguments must be constant integer
gc.statepoint number of transition arguments must be positive
gc.statepoint number of deoptimization arguments must be constant integer
gc.statepoint number of deoptimization arguments must be positive
gc.statepoint too few arguments according to length fields
illegal use of statepoint token
gc.result or gc.relocate are the only value uses of a gc.statepoint
gc.result connected to wrong gc.statepoint
gc.relocate connected to wrong gc.statepoint
gc.result operand #1 must be from a statepoint
gc.result result type does not match wrapped callee
wrong number of arguments
gc.relocate must return a pointer or a vector of pointers
safepoints should have unique landingpads
safepoint block should be well formed
gc relocate should be linked to a statepoint
gc relocate is incorrectly tied to the statepoint
gc.relocate operand #2 must be integer offset
gc.relocate operand #3 must be integer offset
gc.relocate: statepoint base index out of bounds
gc.relocate: statepoint derived index out of bounds
gc.statepoint: insufficient arguments
gc.statement: number of call arguments must be constant integer
gc.statepoint: mismatch in number of call arguments
gc.statepoint: number of transition arguments must be a constant integer
gc.statepoint: number of deoptimization arguments must be a constant integer
gc.relocate: statepoint base index doesn't fall within the 'gc parameters' section of the statepoint call
gc.relocate: statepoint derived index doesn't fall within the 'gc parameters' section of the statepoint call
gc.relocate: relocated value must be a gc pointer
gc.relocate: vector relocates to vector and pointer to pointer
gc.relocate: relocating a pointer shouldn't change its address space
eh.exceptionpointer argument must be a catchpad
masked_load: must return a vector
masked_load: mask must be vector
masked_load: return must match pointer type
masked_load: pass through and data type must match
masked_load: vector mask must be same length as data
masked_store: mask must be vector
masked_store: storee must match pointer type
masked_store: vector mask must be same length as data
experimental_guard cannot be invoked
experimental_guard must have exactly one "deopt" operand bundle
experimental_deoptimize cannot be invoked
experimental_deoptimize must have exactly one "deopt" operand bundle
experimental_deoptimize return type must match caller return type
calls to experimental_deoptimize must be followed by a return
calls to experimental_deoptimize must be followed by a return of the value computed by experimental_deoptimize
invalid llvm.dbg.
 intrinsic address/value
 intrinsic variable
 intrinsic expression
llvm.dbg.
 intrinsic requires a !dbg attachment
mismatched subprogram between llvm.dbg.
 variable and !dbg attachment
dbg intrinsic without variable
conflicting debug info for argument
Expected valid value
Unexpected metadata round-trip through values
function-local metadata used outside a function
function-local metadata not in basic block
function-local metadata used in wrong function
Attributes 'byval', 'inalloca', 'inreg', 'nest', and 'sret' are incompatible!
Attributes 'inalloca and readonly' are incompatible!
Attributes 'sret and returned' are incompatible!
Attributes 'zeroext and signext' are incompatible!
Attributes 'readnone and readonly' are incompatible!
Attributes 'readnone and writeonly' are incompatible!
Attributes 'readonly and writeonly' are incompatible!
Attributes 'noinline and alwaysinline' are incompatible!
Wrong types for attribute: 
Attributes 'byval' and 'inalloca' do not support unsized types!
Attribute 'swifterror' only applies to parameters with pointer to pointer type!
Attribute 'byval' only applies to parameters with pointer type!
Attribute 'swifterror' only applies to parameters with pointer type!
Attribute '
' only applies to functions!
' does not apply to functions!
Instruction not embedded in basic block!
Only PHI nodes may reference their own value!
Instruction has a name, but provides a void value!
Instruction returns a non-scalar type!
Invalid use of metadata!
Instruction referencing instruction not embedded in a basic block!
Use of instruction is not an instruction!
Instruction has null operand!
Instruction operands must be first-class values!
Cannot take the address of an intrinsic!
Cannot invoke an intrinsic other than donothing, patchpoint, statepoint, coro_resume or coro_destroy
Referencing function in another module!
Referring to a basic block in another function!
Referring to an argument in another function!
Referencing global in another module!
Instruction does not dominate all uses!
Cannot take the address of an inline asm!
fpmath requires a floating point result!
fpmath takes one operand!
fpmath accuracy must have float type
fpmath accuracy not a positive number!
invalid fpmath accuracy!
Ranges are only for loads, calls and invokes!
Unfinished range!
It should have at least one range!
The lower limit must be an integer!
The upper limit must be an integer!
Range types must match instruction type!
Range must not be empty!
Intervals are overlapping
Intervals are not in order
Intervals are contiguous
nonnull applies only to pointer types
nonnull applies only to load instructions, use attributes for calls or invokes
align applies only to pointer types
align applies only to load instructions, use attributes for calls or invokes
align takes one operand!
align metadata value must be an i64!
align metadata value must be a power of 2!
alignment is larger that implementation defined limit
invalid !dbg metadata attachment
fragment is larger than or outside of variable
fragment covers entire variable
TBAA is only for loads, stores and calls!
Old-style TBAA is no longer allowed, use struct-path TBAA instead
Struct tag metadata must have either 3 or 4 operands
Immutability tag on struct tag metadata must be a constant
Immutability part of the struct tag metadata must be either 0 or 1
Malformed struct tag metadata:  base and access-type should be non-null and point to Metadata nodes
Access type node must be a valid scalar type
Offset must be constant integer
Cycle detected in struct path
Offset not zero at the point of scalar access
Access bit-width not the same as description bit-width
Did not see access type in access path!
Could not find TBAA parent in struct type node
Base nodes must have at least two operands
Struct tag nodes must have an odd number of operands!
Struct tag nodes have a string as their first operand
Incorrect field entry in struct type node!
Offset entries must be constants!
Bitwidth between the offsets and struct type entries must match
Offsets must be increasing!
dereferenceable, dereferenceable_or_null apply only to pointer types
dereferenceable, dereferenceable_or_null apply only to load instructions, use attributes for calls or invokes
dereferenceable, dereferenceable_or_null take one operand!
dereferenceable, dereferenceable_or_null metadata value must be an i64!
; ModuleID = '
location requires a valid scope
inlined-at should be a location
scope points into the type hierarchy
invalid expression
invalid tag
invalid subrange count
invalid file
invalid pointer to member type
invalid scope
invalid base type
DWARF address space only applies to pointer or reference types
invalid composite elements
invalid vtable holder
invalid reference flags
class/union requires a filename
invalid subroutine type ref
invalid checksum kind
compile units must be distinct
invalid filename
invalid emission kind
invalid enum list
invalid enum type
invalid retained type list
invalid retained type
invalid global variable list
invalid global variable ref
invalid imported entity list
invalid imported entity ref
invalid macro list
invalid macro ref
line specified with no file
invalid subroutine type
invalid containing type
invalid subprogram declaration
invalid variable list
invalid local variable
subprogram definitions must be distinct
subprogram definitions must have a compile unit
invalid unit type
subprogram declarations must not have a compile unit
invalid thrown types list
invalid thrown type
cannot have column info without line info
invalid scope ref
anonymous module
invalid type ref
local variable requires a valid scope
invalid scope for imported entity
invalid imported entity
invalid macinfo type
anonymous macro
Invalid operand for global metadata!
Expected no forward declarations!
All nodes should be resolved!
missing global variable name
missing global variable type
invalid static data member declaration
invalid local scope
invalid template params
invalid template parameter
missing variable
swifterror value can only be loaded and stored from, or as a swifterror argument!
swifterror value should be the second operand when used by stores
swifterror value when used in a callsite should be marked with swifterror attribute
Attributes 'byval', 'inalloca', 'nest', 'sret', 'nocapture', 'returned', 'swiftself', and 'swifterror' do not apply to return values!
' does not apply to function returns
Cannot have multiple 'sret' parameters!
Attribute 'sret' is not on first or second parameter!
Cannot have multiple 'swiftself' parameters!
Cannot have multiple 'swifterror' parameters!
inalloca isn't on the last parameter!
Attributes 'readnone and inaccessiblemem_or_argmemonly' are incompatible!
Attributes 'readnone and inaccessiblememonly' are incompatible!
Attribute 'optnone' requires 'noinline'!
Attributes 'optsize and optnone' are incompatible!
Attributes 'minsize and optnone' are incompatible!
Attribute 'jumptable' requires 'unnamed_addr'
element size
number of elements
'allocsize' 
 argument is out of bounds
 argument must refer to an integer parameter
Global is external, but doesn't have external or weak linkage!
Only global variables can have appending linkage!
Only global arrays can have appending linkage!
Declaration may not be in a Comdat!
Global is referenced by parentless instruction!
Global is referenced in a different module!
Global is used by function in a different module
all indices passed to llvm.localrecover must be less than the number of arguments passed ot llvm.localescape in the parent function
Global variable initializer type does not match global variable type!
'common' global must have a zero initializer!
'common' global may not be marked constant!
'common' global may not be in a Comdat!
llvm.global_ctors
llvm.global_dtors
invalid linkage for intrinsic global variable
wrong type for intrinsic global variable
llvm.used
llvm.compiler.used
wrong initalizer for intrinsic global variable
invalid llvm.used member
members of llvm.used must be named
Global is marked as dllimport, but not external
!dbg attachment of global variable must be a DIGlobalVariableExpression
Alias should have private, internal, linkonce, weak, linkonce_odr, weak_odr, or external linkage!
Aliasee cannot be NULL!
Alias and aliasee types should match!
Aliasee should be either GlobalValue or ConstantExpr
llvm.dbg.cu
unrecognized named metadata node in the llvm.dbg namespace
invalid compile unit
incorrect number of operands in module flag
invalid behavior operand in module flag (expected constant integer)
invalid behavior operand in module flag (unexpected constant)
invalid ID operand in module flag (expected metadata string)
invalid value for 'max' module flag (expected constant integer)
invalid value for 'require' module flag (expected metadata pair)
invalid value for 'require' module flag (first value operand should be a string)
invalid value for 'append'-type module flag (expected a metadata node)
module flag identifiers must be unique (or of 'require' type)
wchar_size
wchar_size metadata requires constant integer argument
Linker Options
llvm.linker.options
'Linker Options' named metadata no longer supported
invalid requirement on flag, flag is not present in module
invalid requirement on flag, flag does not have the required value
llvm.ident
incorrect number of operands in llvm.ident metadata
invalid value for llvm.ident metadata entry operand(the operand should be a string)
DICompileUnit not listed in llvm.dbg.cu
All llvm.experimental.deoptimize declarations must have the same calling convention
comdat global value has private linkage
Alias must point to a definition
Aliases cannot form a cycle
Alias cannot point to an interposable alias
verify
Broken module found, compilation aborted!
DW_TAG_BORLAND_Delphi_variant
DW_TAG_BORLAND_Delphi_set
DW_TAG_BORLAND_Delphi_dynamic_array
DW_TAG_BORLAND_Delphi_string
DW_TAG_BORLAND_property
DW_TAG_APPLE_property
DW_TAG_GNU_call_site_parameter
DW_TAG_GNU_call_site
DW_TAG_GNU_formal_parameter_pack
DW_TAG_GNU_template_parameter_pack
DW_TAG_GNU_template_template_param
DW_TAG_class_template
DW_TAG_function_template
DW_TAG_format_label
DW_TAG_MIPS_loop
DW_TAG_immutable_type
DW_TAG_skeleton_unit
DW_TAG_call_site_parameter
DW_TAG_call_site
DW_TAG_atomic_type
DW_TAG_dynamic_type
DW_TAG_generic_subrange
DW_TAG_coarray_type
DW_TAG_template_alias
DW_TAG_rvalue_reference_type
DW_TAG_type_unit
DW_TAG_shared_type
DW_TAG_condition
DW_TAG_imported_unit
DW_TAG_partial_unit
DW_TAG_unspecified_type
DW_TAG_imported_module
DW_TAG_namespace
DW_TAG_interface_type
DW_TAG_restrict_type
DW_TAG_dwarf_procedure
DW_TAG_volatile_type
DW_TAG_variable
DW_TAG_variant_part
DW_TAG_try_block
DW_TAG_thrown_type
DW_TAG_template_value_parameter
DW_TAG_template_type_parameter
DW_TAG_subprogram
DW_TAG_packed_type
DW_TAG_namelist_item
DW_TAG_namelist
DW_TAG_friend
DW_TAG_file_type
DW_TAG_enumerator
DW_TAG_constant
DW_TAG_const_type
DW_TAG_catch_block
DW_TAG_base_type
DW_TAG_access_declaration
DW_TAG_with_stmt
DW_TAG_subrange_type
DW_TAG_set_type
DW_TAG_ptr_to_member_type
DW_TAG_module
DW_TAG_inlined_subroutine
DW_TAG_inheritance
DW_TAG_common_inclusion
DW_TAG_common_block
DW_TAG_variant
DW_TAG_unspecified_parameters
DW_TAG_union_type
DW_TAG_typedef
DW_TAG_subroutine_type
DW_TAG_structure_type
DW_TAG_string_type
DW_TAG_compile_unit
DW_TAG_reference_type
DW_TAG_pointer_type
DW_TAG_member
DW_TAG_lexical_block
DW_TAG_label
DW_TAG_imported_declaration
DW_TAG_formal_parameter
DW_TAG_enumeration_type
DW_TAG_entry_point
DW_TAG_class_type
DW_TAG_null
DW_TAG_array_type
DW_OP_LLVM_fragment
DW_OP_GNU_const_index
DW_OP_GNU_addr_index
DW_OP_GNU_push_tls_address
DW_OP_reinterpret
DW_OP_convert
DW_OP_xderef_type
DW_OP_deref_type
DW_OP_regval_type
DW_OP_const_type
DW_OP_entry_value
DW_OP_constx
DW_OP_addrx
DW_OP_implicit_pointer
DW_OP_stack_value
DW_OP_implicit_value
DW_OP_bit_piece
DW_OP_call_frame_cfa
DW_OP_form_tls_address
DW_OP_call_ref
DW_OP_call4
DW_OP_call2
DW_OP_push_object_address
DW_OP_nop
DW_OP_xderef_size
DW_OP_deref_size
DW_OP_piece
DW_OP_bregx
DW_OP_fbreg
DW_OP_regx
DW_OP_breg31
DW_OP_breg30
DW_OP_breg29
DW_OP_breg28
DW_OP_breg27
DW_OP_breg26
DW_OP_breg25
DW_OP_breg24
DW_OP_breg23
DW_OP_breg22
DW_OP_breg21
DW_OP_breg20
DW_OP_breg19
DW_OP_breg18
DW_OP_breg17
DW_OP_breg16
DW_OP_breg15
DW_OP_breg14
DW_OP_breg13
DW_OP_breg12
DW_OP_breg11
DW_OP_breg10
DW_OP_breg9
DW_OP_breg8
DW_OP_breg7
DW_OP_breg6
DW_OP_breg5
DW_OP_breg4
DW_OP_breg3
DW_OP_breg2
DW_OP_breg1
DW_OP_breg0
DW_OP_reg31
DW_OP_reg30
DW_OP_reg29
DW_OP_reg28
DW_OP_reg27
DW_OP_reg26
DW_OP_reg25
DW_OP_reg24
DW_OP_reg23
DW_OP_reg22
DW_OP_reg21
DW_OP_reg20
DW_OP_reg19
DW_OP_reg18
DW_OP_reg17
DW_OP_reg16
DW_OP_reg15
DW_OP_reg14
DW_OP_reg13
DW_OP_reg12
DW_OP_reg11
DW_OP_reg10
DW_OP_reg9
DW_OP_reg8
DW_OP_reg7
DW_OP_reg6
DW_OP_reg5
DW_OP_reg4
DW_OP_reg3
DW_OP_reg2
DW_OP_reg1
DW_OP_reg0
DW_OP_lit31
DW_OP_lit30
DW_OP_lit29
DW_OP_lit28
DW_OP_lit27
DW_OP_lit26
DW_OP_lit25
DW_OP_lit24
DW_OP_lit23
DW_OP_lit22
DW_OP_lit21
DW_OP_lit20
DW_OP_lit19
DW_OP_lit18
DW_OP_lit17
DW_OP_lit16
DW_OP_lit15
DW_OP_lit14
DW_OP_lit13
DW_OP_lit12
DW_OP_lit11
DW_OP_lit10
DW_OP_lit9
DW_OP_lit8
DW_OP_lit7
DW_OP_lit6
DW_OP_lit5
DW_OP_lit4
DW_OP_lit3
DW_OP_lit2
DW_OP_lit1
DW_OP_lit0
DW_OP_skip
DW_OP_ne
DW_OP_lt
DW_OP_le
DW_OP_gt
DW_OP_ge
DW_OP_eq
DW_OP_bra
DW_OP_xor
DW_OP_shra
DW_OP_shr
DW_OP_shl
DW_OP_plus_uconst
DW_OP_plus
DW_OP_or
DW_OP_not
DW_OP_neg
DW_OP_mul
DW_OP_mod
DW_OP_minus
DW_OP_div
DW_OP_and
DW_OP_abs
DW_OP_xderef
DW_OP_rot
DW_OP_swap
DW_OP_pick
DW_OP_over
DW_OP_drop
DW_OP_dup
DW_OP_consts
DW_OP_constu
DW_OP_const8s
DW_OP_const8u
DW_OP_const4s
DW_OP_const4u
DW_OP_const2s
DW_OP_const2u
DW_OP_const1s
DW_OP_const1u
DW_OP_addr
DW_OP_deref
DW_ATE_address
DW_ATE_boolean
DW_ATE_complex_float
DW_ATE_float
DW_ATE_signed
DW_ATE_signed_char
DW_ATE_unsigned
DW_ATE_unsigned_char
DW_ATE_imaginary_float
DW_ATE_packed_decimal
DW_ATE_numeric_string
DW_ATE_edited
DW_ATE_signed_fixed
DW_ATE_unsigned_fixed
DW_ATE_decimal_float
DW_ATE_UTF
DW_ATE_UCS
DW_ATE_ASCII
DW_VIRTUALITY_none
DW_VIRTUALITY_virtual
DW_VIRTUALITY_pure_virtual
DW_LANG_BORLAND_Delphi
DW_LANG_GOOGLE_RenderScript
DW_LANG_Mips_Assembler
DW_LANG_BLISS
DW_LANG_RenderScript
DW_LANG_Fortran08
DW_LANG_Fortran03
DW_LANG_C_plus_plus_14
DW_LANG_Dylan
DW_LANG_Julia
DW_LANG_Swift
DW_LANG_C11
DW_LANG_Rust
DW_LANG_OCaml
DW_LANG_C_plus_plus_11
DW_LANG_C_plus_plus_03
DW_LANG_Haskell
DW_LANG_Modula3
DW_LANG_Go
DW_LANG_OpenCL
DW_LANG_Python
DW_LANG_D
DW_LANG_UPC
DW_LANG_ObjC_plus_plus
DW_LANG_ObjC
DW_LANG_PLI
DW_LANG_Fortran95
DW_LANG_Ada95
DW_LANG_C99
DW_LANG_Java
DW_LANG_Modula2
DW_LANG_Pascal83
DW_LANG_Fortran90
DW_LANG_Fortran77
DW_LANG_Cobol85
DW_LANG_Cobol74
DW_LANG_C_plus_plus
DW_LANG_Ada83
DW_LANG_C89
DW_LANG_C
DW_CC_LLVM_vectorcall
DW_CC_BORLAND_fastcall
DW_CC_BORLAND_thiscall
DW_CC_BORLAND_msreturn
DW_CC_BORLAND_msfastcall
DW_CC_BORLAND_pascal
DW_CC_BORLAND_stdcall
DW_CC_BORLAND_safecall
DW_CC_GNU_borland_fastcall_i386
DW_CC_pass_by_value
DW_CC_pass_by_reference
DW_CC_nocall
DW_CC_normal
DW_CC_program
DW_MACINFO_vendor_ext
DW_MACINFO_end_file
DW_MACINFO_start_file
DW_MACINFO_define
DW_MACINFO_undef
v8@?0
%7.4f] 
com.apple.console
Level
Message
<<INVALID>>
UIDRegistryImpl
macOS
tvOS
watchOS
Linux
FreeBSD
Windows
Android
Cygwin
Haiku
arm64
i386
x86_64
powerpc64
powerpc64le
s390x
little
_ObjC
_Native
simulator
macosx
android
linux
windows
mingw
freebsd
haiku
cygwin
appletvsimulator
watchos
watchsimulator
iphoneos
iphonesimulator
appletvos
armv6
armv7
While 
<invalid loc>
line:
line
 RangeText="
NominalTypeDecl__lookupDirect
ClangImporter__Implementation__loadAllMembers
Frontend.NumProcessFailures
AST.NumSourceBuffers
AST.NumSourceLines
AST.NumSourceLinesPerSecond
AST.NumLinkLibraries
AST.NumLoadedModules
AST.NumImportedExternalDefinitions
AST.NumTotalClangImportedEntities
AST.NumASTBytesAllocated
AST.NumDependencies
AST.NumReferencedTopLevelNames
AST.NumReferencedDynamicNames
AST.NumReferencedMemberNames
AST.NumDecls
AST.NumLocalTypeDecls
AST.NumObjCMethods
AST.NumInfixOperators
AST.NumPostfixOperators
AST.NumPrefixOperators
AST.NumPrecedenceGroups
AST.NumUsedConformances
Sema.NumConformancesDeserialized
Sema.NumConstraintScopes
Sema.NumDeclsDeserialized
Sema.NumDeclsValidated
Sema.NumFunctionsTypechecked
Sema.NumGenericSignatureBuilders
Sema.NumLazyGenericEnvironments
Sema.NumLazyGenericEnvironmentsLoaded
Sema.NumLazyIterableDeclContexts
Sema.NominalTypeLookupDirectCount
Sema.NamedLazyMemberLoadSuccessCount
Sema.NamedLazyMemberLoadFailureCount
Sema.NumTypesDeserialized
Sema.NumTypesValidated
Sema.NumUnloadedLazyIterableDeclContexts
SILModule.NumSILGenFunctions
SILModule.NumSILGenVtables
SILModule.NumSILGenWitnessTables
SILModule.NumSILGenDefaultWitnessTables
SILModule.NumSILGenGlobalVariables
SILModule.NumSILOptFunctions
SILModule.NumSILOptVtables
SILModule.NumSILOptWitnessTables
SILModule.NumSILOptDefaultWitnessTables
SILModule.NumSILOptGlobalVariables
IRModule.NumIRGlobals
IRModule.NumIRFunctions
IRModule.NumIRAliases
IRModule.NumIRIFuncs
IRModule.NumIRNamedMetaData
IRModule.NumIRValueSymbols
IRModule.NumIRComdatSymbols
IRModule.NumIRBasicBlocks
IRModule.NumIRInsts
LLVM.NumLLVMBytesOutput
self
alongside
following
from
including
matching
preceding
since
using
with
abbreviate
alert
analyze
apologise
append
apply
apportion
appreciate
assign
begin
break
broadcast
build
calculate
call
cancel
capture
cast
catch
challenge
close
collapse
communicate
concentrate
continue
count
crash
customize
decode
defer
define
delete
depend
disappear
disapprove
double
drain
duplicate
embarrass
enable
encode
encourage
enter
entertain
execute
export
extend
fence
flatten
float
guarantee
guard
help
highlight
import
include
influence
insert
interfere
interrupt
intersect
intersects
introduce
kill
label
load
long
mark
match
move
normalize
note
number
open
pack
plug
post
preload
print
provide
push
question
queue
raise
read
recognise
record
register
release
remove
repeat
replace
require
retain
return
select
shave
show
signal
spill
standardise
store
strengthen
suppress
switch
take
telephone
test
throw
time
touch
translate
understand
union
update
warn
write
auto
Animated
animated
sender
Object
error
visible
backing
compatible
best
according
bound
separated
zone
Indexes
Indices
Integer
Value
Mask
Error
902.0.34
Apple 
Swift version 4.1
 effective-
 (swiftlang-902.0.34
 clang-902.0.30
Builtin.
Demangle::Node::Kind::???
Allocator
ArgumentTuple
AssociatedType
AssociatedTypeRef
AssociatedTypeMetadataAccessor
AssociatedTypeWitnessTableAccessor
AutoClosureType
BoundGenericClass
BoundGenericEnum
BoundGenericStructure
BuiltinTypeName
CFunctionPointer
Class
Constructor
Deallocator
DeclContext
DefaultArgumentInitializer
DependentAssociatedTypeRef
DependentGenericConformanceRequirement
DependentGenericParamCount
DependentGenericParamType
DependentGenericSameTypeRequirement
DependentGenericLayoutRequirement
DependentGenericSignature
DependentGenericType
DependentMemberType
DependentPseudogenericSignature
Destructor
DidSet
Directness
DynamicAttribute
DirectMethodReferenceAttribute
DynamicSelf
Enum
ErrorType
ExistentialMetatype
ExplicitClosure
Extension
FieldOffset
FullTypeMetadata
Function
FunctionSignatureSpecialization
FunctionSignatureSpecializationParam
FunctionSignatureSpecializationParamKind
FunctionSignatureSpecializationParamPayload
FunctionType
GenericPartialSpecialization
GenericPartialSpecializationNotReAbstracted
GenericProtocolWitnessTable
GenericProtocolWitnessTableInstantiationFunction
GenericSpecialization
GenericSpecializationNotReAbstracted
GenericSpecializationParam
GenericTypeMetadataPattern
Getter
Global
GlobalGetter
Identifier
Index
IVarInitializer
IVarDestroyer
ImplEscaping
ImplConvention
ImplFunctionAttribute
ImplFunctionType
ImplicitClosure
ImplParameter
ImplResult
ImplErrorResult
InOut
InfixOperator
Initializer
KeyPathGetterThunkHelper
KeyPathSetterThunkHelper
KeyPathEqualsThunkHelper
KeyPathHashThunkHelper
LazyProtocolWitnessTableAccessor
LazyProtocolWitnessTableCacheVariable
LocalDeclName
MaterializeForSet
MergedFunction
Metatype
MetatypeRepresentation
Metaclass
Module
NativeOwningAddressor
NativeOwningMutableAddressor
NativePinningAddressor
NativePinningMutableAddressor
NominalTypeDescriptor
NonObjCAttribute
Number
ObjCAttribute
ObjCBlock
OwningAddressor
OwningMutableAddressor
PartialApplyForwarder
PartialApplyObjCForwarder
PostfixOperator
PrefixOperator
PrivateDeclName
Protocol
ProtocolConformance
ProtocolDescriptor
ProtocolList
ProtocolListWithClass
ProtocolListWithAnyObject
ProtocolWitness
ProtocolWitnessTable
ProtocolWitnessTableAccessor
QualifiedArchetype
ReabstractionThunk
ReabstractionThunkHelper
ReturnType
Shared
SILBoxType
SILBoxTypeWithLayout
SILBoxLayout
SILBoxMutableField
SILBoxImmutableField
Setter
SpecializationPassID
SpecializationIsFragile
Static
Structure
Subscript
Suffix
ThinFunctionType
Tuple
TupleElement
TupleElementName
Type
TypeAlias
TypeList
TypeMangling
TypeMetadata
TypeMetadataAccessFunction
TypeMetadataLazyCache
UncurriedFunctionType
Unmanaged
Unowned
UnsafeAddressor
UnsafeMutableAddressor
ValueWitness
ValueWitnessTable
Variable
VTableThunk
VTableAttribute
Weak
WillSet
ReflectionMetadataBuiltinDescriptor
ReflectionMetadataFieldDescriptor
ReflectionMetadataAssocTypeDescriptor
ReflectionMetadataSuperclassDescriptor
GenericTypeParamDecl
CurryThunk
DispatchThunk
ThrowsAnnotation
EmptyList
FirstElementMarker
VariadicMarker
OutlinedBridgedMethod
OutlinedCopy
OutlinedConsume
OutlinedRetain
OutlinedRelease
OutlinedInitializeWithTake
OutlinedInitializeWithCopy
OutlinedAssignWithTake
OutlinedAssignWithCopy
OutlinedDestroy
OutlinedVariable
AssocTypePath
%llu
%lld
static 
curry thunk of 
dispatch thunk of 
outlined bridged method (
) of 
outlined copy of 
outlined consume of 
outlined retain of 
outlined release of 
outlined init with take of 
outlined init with copy of 
outlined assign with take of 
outlined assign with copy of 
outlined destroy of 
outlined variable #
 of 
bad directness
direct
indirect
(extension in 
closure #
implicit closure #
 with unmangled suffix 
variable initialization expression
default argument 
 in 
(in 
@autoclosure 
@convention(thin) 
 -> 
weak 
unowned 
unowned(unsafe) 
inout 
__shared 
@nonobjc 
@objc 
super 
dynamic 
override 
function signature specialization
generic partial specialization
Signature = 
generic not-reabstracted partial specialization
generic specialization
generic not re-abstracted specialization
preserving fragile attribute
 with 
 and 
Arg[
] = 
Dead
Owned To Guaranteed
Exploded
Value Promoted from Box
Stack Promoted from Box
Constant Propagated Function
Constant Propagated Global
Constant Propagated Integer
Constant Propagated Float
Constant Propagated String
Closure Propagated
option sets should have been handled earlier
 infix
 prefix
 postfix
lazy protocol witness table accessor for type 
 and conformance 
lazy protocol witness table cache variable for type 
protocol witness table accessor for 
protocol witness table for 
generic protocol witness table for 
instantiation function for generic protocol witness table for 
vtable thunk for 
 dispatching to 
protocol witness for 
 in conformance 
partial apply
partial apply forwarder
 for 
partial apply ObjC forwarder
key path getter for 
key path setter for 
key path index 
equality
hash
 operator for 
field offset for 
thunk for 
reabstraction thunk 
helper 
from 
 to 
merged 
generic type metadata pattern for 
metaclass for 
protocol descriptor for 
full type metadata for 
type metadata for 
type metadata accessor for 
lazy cache variable for type metadata for 
associated type metadata accessor for 
associated type witness table accessor for 
nominal type descriptor for 
bad value witness kind
 value witness for 
value witness table for 
Dictionary
Self
@convention(c) 
@convention(block) 
@box 
.Protocol
.Type
Swift.
(archetype)
(archetype 
owningAddressor
owningMutableAddressor
nativeOwningAddressor
nativeOwningMutableAddressor
nativePinningAddressor
nativePinningMutableAddressor
unsafeAddressor
unsafeMutableAddressor
getter
setter
materializeForSet
willset
didset
__allocating_init
init
deinit
__deallocating_deinit
__ivar_initializer
__ivar_destroyer
property behavior storage of 
@escaping
@error 
no state after Results
bad state
) -> (
<ERROR TYPE>
 where 
should be printed as a child of a DependentGenericSignature
_Trivial
_TrivialAtMost
_NativeClass
_NativeRefCountedObject
_UnknownLayout
_RefCountedObject
 == 
reflection metadata builtin descriptor 
reflection metadata field descriptor 
reflection metadata associated type descriptor 
reflection metadata superclass descriptor 
 throws 
 empty-list 
 first-element-marker 
 variadic-marker 
let 
var 
bad node kind!
Not an abstract storage node
allocateBuffer
assignWithCopy
assignWithTake
deallocateBuffer
destroy
destroyBuffer
destroyArray
initializeBufferWithCopyOfBuffer
initializeBufferWithCopy
initializeWithCopy
initializeBufferWithTake
initializeWithTake
projectBuffer
initializeBufferWithTakeOfBuffer
initializeArrayWithCopy
initializeArrayWithTakeFrontToBack
initializeArrayWithTakeBackToFront
storeExtraInhabitant
getExtraInhabitantIndex
getEnumTag
destructiveProjectEnumData
destructiveInjectEnumTag
getEnumTagSinglePayload
storeEnumTagSinglePayload
, Argument Types : [
specialized 
> of 
 throws
(_:)
_TTS
& @/= >    <*!|+?%-~   ^ .
xInt
xFloat
xRawPointer
invalid
bad directness kind
cpfr
cpfl
cpse
This should never be called
todo
invalid impl convention
bad impl-function-attribute
bad callee convention
bad metatype representation
PA__T
PAo__T
AnyObject
<curry-thunk>
<dispatch-thunk>
<empty>
<first>
unsupported
subscript
Array
Bool
UnicodeScalar
Double
UnsafeRawPointer
UnsafeMutableRawPointer
UnsafePointer
UnsafeMutablePointer
UnsafeBufferPointer
UnsafeMutableBufferPointer
String
UInt
ImplicitlyUnwrappedOptional
not a context node
bad node kind
unsupported node
Optional
Builtin.BridgeObject
Builtin.UnsafeValueBuffer
Builtin.UnknownObject
Builtin.NativeObject
Builtin.RawPointer
Builtin.SILToken
Builtin.Word
Builtin.Int
Builtin.Float
Builtin.Vec
RawPointer
Float
unexpected builtin vector type
unexpected builtin type
handled inline in DependentGenericSignature
wrong dependent member type
handled inline
objc
Unknown encoding
@callee_unowned
@callee_guaranteed
@callee_owned
@convention(thin)
@convention(block)
@convention(c)
@convention(method)
@convention(objc_method)
@convention(closure)
@convention(witness_method)
@inout
@inout_aliasable
@in_guaranteed
@in_constant
@owned
@guaranteed
@deallocating
@unowned
@out
@unowned_inner_pointer
@autoreleased
@thin
@thick
@objc_metatype
wrong metatype representation
should be part of SILBoxTypeWithLayout
Old-fashioned vtable thunk in new mangling format
bad demangling tree node
Not a storage node
bad nominal type kind
fatal error: %s
inout
throws
case
9.1.0
