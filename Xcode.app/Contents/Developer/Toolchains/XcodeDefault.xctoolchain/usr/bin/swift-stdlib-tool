  swift-stdlib-tool --print [options...]
    Find and print the Swift libraries required by an app.
  swift-stdlib-tool --copy [options...]
    Copy the Swift libraries into an app bundle, and optionally sign them.
  --verbose
      Print progress.
  --verbose --verbose
      Print debugging details.
  --help
      Print usage.
  Options for lookup:
  --scan-executable <path>
      Scan the executable at <path> for references to Swift libraries.
      This option may be set multiple times.
  --scan-folder <path>
      Scan any executables inside <path> for references to Swift libraries.
      This option may be set multiple times.
  --platform <macosx|iphoneos|iphonesimulator>
      Use the Swift libraries for <platform>.
  --source-libraries <path>
      Search <path> for Swift libraries.
      The default is /path/to/swift-stdlib-tool/../../lib/swift/<platform>/
  Options for copying and signing:
  --destination <path>
      Copy Swift libraries into <path>.
  --unsigned-destination <path>
      Copy Swift libraries into <path> without signing them.
  --sign <identity>
      Sign copied Swift libraries using <identity>.
  --keychain <keychain>
      Search <keychain> for the code signing identity.
  --Xcodesign <option>
      Pass <option> to the codesign tool.
  --strip-bitcode
      Remove embedded bitcode from libraries copied to --destination.
      Libraries copied to --unsigned-destination are unmodified.
  Options for libraries copied as resources
  --resource-library <library>
      Copy <library> and its dependencies as resources without signing
      them. These copies are in addition to any libraries copied as a result
      of the --scan-executable option.
      Any library in the Swift library search path can be specified for
      <library>.
      This option may be set multiple times.
  --resource-destination <path>
      The <path> to copy Swift resource libraries to.
*** error: %s
*** error: %s
file is too small
pread failed
file is not mach-o
file is badly formed
Scanning %s...
%s: open failed: %s
%s: stat failed: %s
%s: pread failed: %s
/usr/bin/xcrun
--toolchain
--log
  %s
v8@?0
Couldn't copy and strip bitcode %s to %s: bitcode_strip failed with exit code %d
Couldn't copy %s to %s: %s
v16@?0[16C]8
Source UUIDs %s: %s
Destination UUIDs %s: %s
%s is up to date at %s
Copying %s to %s
Probing signature of %s
v60@?0{vector<unsigned char, std::allocator<unsigned char>>=**{__compressed_pair<unsigned char *, std::allocator<unsigned char>>=*}}8{vector<unsigned char, std::allocator<unsigned char>>=**{__compressed_pair<unsigned char *, std::allocator<unsigned char>>=*}}32i56
--print
--copy
--verbose
--help
--scan-executable
--scan-folder
--source-libraries
--platform
--destination
--unsigned-destination
--sign
--keychain
--Xcodesign
--strip-bitcode
--resource-destination
--resource-library
Unknown argument: %s
At least one of --source-libraries and --platform must be set.
Couldn't discover Swift library directories in: %s
Source directory does not exist: %s
v16@?0r^v8
Codesigning %s at %s
Couldn't codesign %s: codesign failed with exit code %d
Code signature of %s is unchanged; keeping original
malloc(sizeofcmds) failed
  loads %.*s
@rpath/libswift
swift-
%s is not an executable file
  swift-stdlib-tool --print [options...]
    Find and print the Swift libraries required by an app.
  swift-stdlib-tool --copy [options...]
    Copy the Swift libraries into an app bundle, and optionally sign them.
  --verbose
      Print progress.
  --verbose --verbose
      Print debugging details.
  --help
      Print usage.
  Options for lookup:
  --scan-executable <path>
      Scan the executable at <path> for references to Swift libraries.
      This option may be set multiple times.
  --scan-folder <path>
      Scan any executables inside <path> for references to Swift libraries.
      This option may be set multiple times.
  --platform <macosx|iphoneos|iphonesimulator>
      Use the Swift libraries for <platform>.
  --source-libraries <path>
      Search <path> for Swift libraries.
      The default is /path/to/swift-stdlib-tool/../../lib/swift/<platform>/
  Options for copying and signing:
  --destination <path>
      Copy Swift libraries into <path>.
  --unsigned-destination <path>
      Copy Swift libraries into <path> without signing them.
  --sign <identity>
      Sign copied Swift libraries using <identity>.
  --keychain <keychain>
      Search <keychain> for the code signing identity.
  --Xcodesign <option>
      Pass <option> to the codesign tool.
  --strip-bitcode
      Remove embedded bitcode from libraries copied to --destination.
      Libraries copied to --unsigned-destination are unmodified.
  Options for libraries copied as resources
  --resource-library <library>
      Copy <library> and its dependencies as resources without signing
      them. These copies are in addition to any libraries copied as a result
      of the --scan-executable option.
      Any library in the Swift library search path can be specified for
      <library>.
      This option may be set multiple times.
  --resource-destination <path>
      The <path> to copy Swift resource libraries to.
*** error: %s
*** error: %s
file is too small
pread failed
file is not mach-o
file is badly formed
Scanning %s...
%s: open failed: %s
%s: stat failed: %s
%s: pread failed: %s
/usr/bin/xcrun
--toolchain
--log
  %s
v8@?0
bitcode_strip
Couldn't copy and strip bitcode %s to %s: bitcode_strip failed with exit code %d
Couldn't copy %s to %s: %s
v16@?0[16C]8
Source UUIDs %s: %s
Destination UUIDs %s: %s
%s is up to date at %s
Copying %s to %s
--display
Probing signature of %s
v60@?0{vector<unsigned char, std::allocator<unsigned char>>=**{__compressed_pair<unsigned char *, std::allocator<unsigned char>>=*}}8{vector<unsigned char, std::allocator<unsigned char>>=**{__compressed_pair<unsigned char *, std::allocator<unsigned char>>=*}}32i56
--print
--copy
--verbose
--help
--scan-executable
--scan-folder
--source-libraries
--platform
--destination
--unsigned-destination
--sign
--keychain
--Xcodesign
--strip-bitcode
--resource-destination
--resource-library
Unknown argument: %s
At least one of --source-libraries and --platform must be set.
Couldn't discover Swift library directories in: %s
Source directory does not exist: %s
v16@?0r^v8
.original
Codesigning %s at %s
Couldn't codesign %s: codesign failed with exit code %d
Code signature of %s is unchanged; keeping original
malloc(sizeofcmds) failed
  loads %.*s
@rpath/libswift
swift-
%s is not an executable file
