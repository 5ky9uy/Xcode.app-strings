__builtin_neon___a32_vcvt_bf16_f32
V8ScV16Sci
bf16
__builtin_neon___a64_vcvtq_low_bf16_f32
V16ScV16Sci
__builtin_neon_splat_lane_bf16
V8ScV8ScIii
__builtin_neon_splat_lane_v
__builtin_neon_splat_laneq_bf16
V8ScV16ScIii
__builtin_neon_splat_laneq_v
__builtin_neon_splatq_lane_bf16
V16ScV8ScIii
__builtin_neon_splatq_lane_v
__builtin_neon_splatq_laneq_bf16
V16ScV16ScIii
__builtin_neon_splatq_laneq_v
__builtin_neon_vabd_f16
V8ScV8ScV8Sci
fullfp16
__builtin_neon_vabd_v
__builtin_neon_vabdd_f64
__builtin_neon_vabdq_f16
V16ScV16ScV16Sci
__builtin_neon_vabdq_v
__builtin_neon_vabds_f32
__builtin_neon_vabs_f16
V8ScV8Sci
__builtin_neon_vabs_v
__builtin_neon_vabsd_s64
WiWi
__builtin_neon_vabsq_f16
__builtin_neon_vabsq_v
__builtin_neon_vadd_v
__builtin_neon_vaddd_s64
WiWiWi
__builtin_neon_vaddd_u64
UWiUWiUWi
__builtin_neon_vaddhn_v
V8ScV16ScV16Sci
__builtin_neon_vaddlv_s16
iV4s
__builtin_neon_vaddlv_s32
WiV2i
__builtin_neon_vaddlv_s8
sV8Sc
__builtin_neon_vaddlv_u16
UiV4Us
__builtin_neon_vaddlv_u32
UWiV2Ui
__builtin_neon_vaddlv_u8
UsV8Uc
__builtin_neon_vaddlvq_s16
iV8s
__builtin_neon_vaddlvq_s32
WiV4i
__builtin_neon_vaddlvq_s8
sV16Sc
__builtin_neon_vaddlvq_u16
UiV8Us
__builtin_neon_vaddlvq_u32
UWiV4Ui
__builtin_neon_vaddlvq_u8
UsV16Uc
__builtin_neon_vaddq_p128
ULLLiULLLiULLLi
__builtin_neon_vaddq_v
__builtin_neon_vaddv_f32
fV2f
__builtin_neon_vaddv_s16
sV4s
__builtin_neon_vaddv_s32
iV2i
__builtin_neon_vaddv_s8
ScV8Sc
__builtin_neon_vaddv_u16
UsV4Us
__builtin_neon_vaddv_u32
UiV2Ui
__builtin_neon_vaddv_u8
UcV8Uc
__builtin_neon_vaddvq_f32
fV4f
__builtin_neon_vaddvq_f64
dV2d
__builtin_neon_vaddvq_s16
sV8s
__builtin_neon_vaddvq_s32
iV4i
__builtin_neon_vaddvq_s64
WiV2Wi
__builtin_neon_vaddvq_s8
ScV16Sc
__builtin_neon_vaddvq_u16
UsV8Us
__builtin_neon_vaddvq_u32
UiV4Ui
__builtin_neon_vaddvq_u64
UWiV2UWi
__builtin_neon_vaddvq_u8
UcV16Uc
__builtin_neon_vaesdq_u8
__builtin_neon_vaeseq_u8
__builtin_neon_vaesimcq_u8
__builtin_neon_vaesmcq_u8
__builtin_neon_vbcaxq_s16
V16ScV16ScV16ScV16Sci
sha3
__builtin_neon_vbcaxq_s32
__builtin_neon_vbcaxq_s64
__builtin_neon_vbcaxq_s8
__builtin_neon_vbcaxq_u16
__builtin_neon_vbcaxq_u32
__builtin_neon_vbcaxq_u64
__builtin_neon_vbcaxq_u8
__builtin_neon_vbfdot_f32
V8ScV8ScV8ScV8Sci
__builtin_neon_vbfdotq_f32
__builtin_neon_vbfmlalbq_f32
__builtin_neon_vbfmlaltq_f32
__builtin_neon_vbfmmlaq_f32
__builtin_neon_vbsl_f16
__builtin_neon_vbsl_v
__builtin_neon_vbslq_f16
__builtin_neon_vbslq_v
__builtin_neon_vcadd_rot270_f16
__builtin_neon_vcadd_rot270_v
__builtin_neon_vcadd_rot90_f16
__builtin_neon_vcadd_rot90_v
__builtin_neon_vcaddq_rot270_f16
__builtin_neon_vcaddq_rot270_v
__builtin_neon_vcaddq_rot90_f16
__builtin_neon_vcaddq_rot90_v
__builtin_neon_vcage_f16
__builtin_neon_vcage_v
__builtin_neon_vcaged_f64
UWidd
__builtin_neon_vcageq_f16
__builtin_neon_vcageq_v
__builtin_neon_vcages_f32
Uiff
__builtin_neon_vcagt_f16
__builtin_neon_vcagt_v
__builtin_neon_vcagtd_f64
__builtin_neon_vcagtq_f16
__builtin_neon_vcagtq_v
__builtin_neon_vcagts_f32
__builtin_neon_vcale_f16
__builtin_neon_vcale_v
__builtin_neon_vcaled_f64
__builtin_neon_vcaleq_f16
__builtin_neon_vcaleq_v
__builtin_neon_vcales_f32
__builtin_neon_vcalt_f16
__builtin_neon_vcalt_v
__builtin_neon_vcaltd_f64
__builtin_neon_vcaltq_f16
__builtin_neon_vcaltq_v
__builtin_neon_vcalts_f32
__builtin_neon_vceqd_f64
__builtin_neon_vceqd_s64
UWiWiWi
__builtin_neon_vceqd_u64
__builtin_neon_vceqs_f32
__builtin_neon_vceqz_f16
__builtin_neon_vceqz_v
__builtin_neon_vceqzd_f64
UWid
__builtin_neon_vceqzd_s64
UWiWi
__builtin_neon_vceqzd_u64
UWiUWi
__builtin_neon_vceqzq_f16
__builtin_neon_vceqzq_v
__builtin_neon_vceqzs_f32
__builtin_neon_vcged_f64
__builtin_neon_vcged_s64
__builtin_neon_vcged_u64
__builtin_neon_vcges_f32
__builtin_neon_vcgez_f16
__builtin_neon_vcgez_v
__builtin_neon_vcgezd_f64
__builtin_neon_vcgezd_s64
__builtin_neon_vcgezq_f16
__builtin_neon_vcgezq_v
__builtin_neon_vcgezs_f32
__builtin_neon_vcgtd_f64
__builtin_neon_vcgtd_s64
__builtin_neon_vcgtd_u64
__builtin_neon_vcgts_f32
__builtin_neon_vcgtz_f16
__builtin_neon_vcgtz_v
__builtin_neon_vcgtzd_f64
__builtin_neon_vcgtzd_s64
__builtin_neon_vcgtzq_f16
__builtin_neon_vcgtzq_v
__builtin_neon_vcgtzs_f32
__builtin_neon_vcled_f64
__builtin_neon_vcled_s64
__builtin_neon_vcled_u64
__builtin_neon_vcles_f32
__builtin_neon_vclez_f16
__builtin_neon_vclez_v
__builtin_neon_vclezd_f64
__builtin_neon_vclezd_s64
__builtin_neon_vclezq_f16
__builtin_neon_vclezq_v
__builtin_neon_vclezs_f32
__builtin_neon_vcls_v
__builtin_neon_vclsq_v
__builtin_neon_vcltd_f64
__builtin_neon_vcltd_s64
__builtin_neon_vcltd_u64
__builtin_neon_vclts_f32
__builtin_neon_vcltz_f16
__builtin_neon_vcltz_v
__builtin_neon_vcltzd_f64
__builtin_neon_vcltzd_s64
__builtin_neon_vcltzq_f16
__builtin_neon_vcltzq_v
__builtin_neon_vcltzs_f32
__builtin_neon_vclz_v
__builtin_neon_vclzq_v
__builtin_neon_vcmla_f16
__builtin_neon_vcmla_rot180_f16
__builtin_neon_vcmla_rot180_v
__builtin_neon_vcmla_rot270_f16
__builtin_neon_vcmla_rot270_v
__builtin_neon_vcmla_rot90_f16
__builtin_neon_vcmla_rot90_v
__builtin_neon_vcmla_v
__builtin_neon_vcmlaq_f16
__builtin_neon_vcmlaq_rot180_f16
__builtin_neon_vcmlaq_rot180_v
__builtin_neon_vcmlaq_rot270_f16
__builtin_neon_vcmlaq_rot270_v
__builtin_neon_vcmlaq_rot90_f16
__builtin_neon_vcmlaq_rot90_v
__builtin_neon_vcmlaq_v
__builtin_neon_vcnt_v
__builtin_neon_vcntq_v
__builtin_neon_vcvt_f16_f32
__builtin_neon_vcvt_f16_s16
__builtin_neon_vcvt_f16_u16
__builtin_neon_vcvt_f32_f16
V16ScV8Sci
__builtin_neon_vcvt_f32_f64
__builtin_neon_vcvt_f32_v
__builtin_neon_vcvt_f64_f32
__builtin_neon_vcvt_f64_v
__builtin_neon_vcvt_n_f16_s16
__builtin_neon_vcvt_n_f16_u16
__builtin_neon_vcvt_n_f32_v
__builtin_neon_vcvt_n_f64_v
__builtin_neon_vcvt_n_s16_f16
__builtin_neon_vcvt_n_s32_v
__builtin_neon_vcvt_n_s64_v
__builtin_neon_vcvt_n_u16_f16
__builtin_neon_vcvt_n_u32_v
__builtin_neon_vcvt_n_u64_v
__builtin_neon_vcvt_s16_f16
__builtin_neon_vcvt_s32_v
__builtin_neon_vcvt_s64_v
__builtin_neon_vcvt_u16_f16
__builtin_neon_vcvt_u32_v
__builtin_neon_vcvt_u64_v
__builtin_neon_vcvta_s16_f16
__builtin_neon_vcvta_s32_v
__builtin_neon_vcvta_s64_v
__builtin_neon_vcvta_u16_f16
__builtin_neon_vcvta_u32_v
__builtin_neon_vcvta_u64_v
__builtin_neon_vcvtad_s64_f64
__builtin_neon_vcvtad_u64_f64
__builtin_neon_vcvtaq_s16_f16
__builtin_neon_vcvtaq_s32_v
__builtin_neon_vcvtaq_s64_v
__builtin_neon_vcvtaq_u16_f16
__builtin_neon_vcvtaq_u32_v
__builtin_neon_vcvtaq_u64_v
__builtin_neon_vcvtas_s32_f32
__builtin_neon_vcvtas_u32_f32
__builtin_neon_vcvtd_f64_s64
__builtin_neon_vcvtd_f64_u64
dUWi
__builtin_neon_vcvtd_n_f64_s64
dWiIi
__builtin_neon_vcvtd_n_f64_u64
dUWiIi
__builtin_neon_vcvtd_n_s64_f64
WidIi
__builtin_neon_vcvtd_n_u64_f64
UWidIi
__builtin_neon_vcvtd_s64_f64
__builtin_neon_vcvtd_u64_f64
__builtin_neon_vcvth_bf16_f32
__builtin_neon_vcvtm_s16_f16
__builtin_neon_vcvtm_s32_v
__builtin_neon_vcvtm_s64_v
__builtin_neon_vcvtm_u16_f16
__builtin_neon_vcvtm_u32_v
__builtin_neon_vcvtm_u64_v
__builtin_neon_vcvtmd_s64_f64
__builtin_neon_vcvtmd_u64_f64
__builtin_neon_vcvtmq_s16_f16
__builtin_neon_vcvtmq_s32_v
__builtin_neon_vcvtmq_s64_v
__builtin_neon_vcvtmq_u16_f16
__builtin_neon_vcvtmq_u32_v
__builtin_neon_vcvtmq_u64_v
__builtin_neon_vcvtms_s32_f32
__builtin_neon_vcvtms_u32_f32
__builtin_neon_vcvtn_s16_f16
__builtin_neon_vcvtn_s32_v
__builtin_neon_vcvtn_s64_v
__builtin_neon_vcvtn_u16_f16
__builtin_neon_vcvtn_u32_v
__builtin_neon_vcvtn_u64_v
__builtin_neon_vcvtnd_s64_f64
__builtin_neon_vcvtnd_u64_f64
__builtin_neon_vcvtnq_s16_f16
__builtin_neon_vcvtnq_s32_v
__builtin_neon_vcvtnq_s64_v
__builtin_neon_vcvtnq_u16_f16
__builtin_neon_vcvtnq_u32_v
__builtin_neon_vcvtnq_u64_v
__builtin_neon_vcvtns_s32_f32
__builtin_neon_vcvtns_u32_f32
__builtin_neon_vcvtp_s16_f16
__builtin_neon_vcvtp_s32_v
__builtin_neon_vcvtp_s64_v
__builtin_neon_vcvtp_u16_f16
__builtin_neon_vcvtp_u32_v
__builtin_neon_vcvtp_u64_v
__builtin_neon_vcvtpd_s64_f64
__builtin_neon_vcvtpd_u64_f64
__builtin_neon_vcvtpq_s16_f16
__builtin_neon_vcvtpq_s32_v
__builtin_neon_vcvtpq_s64_v
__builtin_neon_vcvtpq_u16_f16
__builtin_neon_vcvtpq_u32_v
__builtin_neon_vcvtpq_u64_v
__builtin_neon_vcvtps_s32_f32
__builtin_neon_vcvtps_u32_f32
__builtin_neon_vcvtq_f16_s16
__builtin_neon_vcvtq_f16_u16
__builtin_neon_vcvtq_f32_v
__builtin_neon_vcvtq_f64_v
__builtin_neon_vcvtq_high_bf16_f32
__builtin_neon_vcvtq_n_f16_s16
__builtin_neon_vcvtq_n_f16_u16
__builtin_neon_vcvtq_n_f32_v
__builtin_neon_vcvtq_n_f64_v
__builtin_neon_vcvtq_n_s16_f16
__builtin_neon_vcvtq_n_s32_v
__builtin_neon_vcvtq_n_s64_v
__builtin_neon_vcvtq_n_u16_f16
__builtin_neon_vcvtq_n_u32_v
__builtin_neon_vcvtq_n_u64_v
__builtin_neon_vcvtq_s16_f16
__builtin_neon_vcvtq_s32_v
__builtin_neon_vcvtq_s64_v
__builtin_neon_vcvtq_u16_f16
__builtin_neon_vcvtq_u32_v
__builtin_neon_vcvtq_u64_v
__builtin_neon_vcvts_f32_s32
__builtin_neon_vcvts_f32_u32
__builtin_neon_vcvts_n_f32_s32
fiIi
__builtin_neon_vcvts_n_f32_u32
fUiIi
__builtin_neon_vcvts_n_s32_f32
ifIi
__builtin_neon_vcvts_n_u32_f32
UifIi
__builtin_neon_vcvts_s32_f32
__builtin_neon_vcvts_u32_f32
__builtin_neon_vcvtx_f32_v
__builtin_neon_vcvtxd_f32_f64
__builtin_neon_vdot_s32
dotprod
__builtin_neon_vdot_u32
__builtin_neon_vdotq_s32
__builtin_neon_vdotq_u32
__builtin_neon_vdupb_lane_i8
UcV8ScIi
__builtin_neon_vdupb_laneq_i8
UcV16ScIi
__builtin_neon_vdupd_lane_f64
dV1dIi
__builtin_neon_vdupd_lane_i64
UWiV1WiIi
__builtin_neon_vdupd_laneq_f64
dV2dIi
__builtin_neon_vdupd_laneq_i64
UWiV2WiIi
__builtin_neon_vduph_lane_bf16
yV4yIi
__builtin_neon_vduph_lane_f16
hV4hIi
__builtin_neon_vduph_lane_i16
UsV4sIi
__builtin_neon_vduph_laneq_bf16
yV8yIi
__builtin_neon_vduph_laneq_f16
hV8hIi
__builtin_neon_vduph_laneq_i16
UsV8sIi
__builtin_neon_vdups_lane_f32
fV2fIi
__builtin_neon_vdups_lane_i32
UiV2iIi
__builtin_neon_vdups_laneq_f32
fV4fIi
__builtin_neon_vdups_laneq_i32
UiV4iIi
__builtin_neon_veor3q_s16
__builtin_neon_veor3q_s32
__builtin_neon_veor3q_s64
__builtin_neon_veor3q_s8
__builtin_neon_veor3q_u16
__builtin_neon_veor3q_u32
__builtin_neon_veor3q_u64
__builtin_neon_veor3q_u8
__builtin_neon_vext_f16
V8ScV8ScV8ScIii
__builtin_neon_vext_v
__builtin_neon_vextq_f16
V16ScV16ScV16ScIii
__builtin_neon_vextq_v
__builtin_neon_vfma_f16
__builtin_neon_vfma_lane_f16
V8ScV8ScV8ScV8ScIii
__builtin_neon_vfma_lane_v
__builtin_neon_vfma_laneq_f16
V8ScV8ScV8ScV16ScIii
__builtin_neon_vfma_laneq_v
__builtin_neon_vfma_v
__builtin_neon_vfmad_lane_f64
dddV1dIi
__builtin_neon_vfmad_laneq_f64
dddV2dIi
__builtin_neon_vfmah_lane_f16
hhhV4hIi
__builtin_neon_vfmah_laneq_f16
hhhV8hIi
__builtin_neon_vfmaq_f16
__builtin_neon_vfmaq_lane_f16
V16ScV16ScV16ScV8ScIii
__builtin_neon_vfmaq_lane_v
__builtin_neon_vfmaq_laneq_f16
V16ScV16ScV16ScV16ScIii
__builtin_neon_vfmaq_laneq_v
__builtin_neon_vfmaq_v
__builtin_neon_vfmas_lane_f32
fffV2fIi
__builtin_neon_vfmas_laneq_f32
fffV4fIi
__builtin_neon_vfmlal_high_f16
fp16fml
__builtin_neon_vfmlal_low_f16
__builtin_neon_vfmlalq_high_f16
__builtin_neon_vfmlalq_low_f16
__builtin_neon_vfmlsl_high_f16
__builtin_neon_vfmlsl_low_f16
__builtin_neon_vfmlslq_high_f16
__builtin_neon_vfmlslq_low_f16
__builtin_neon_vget_lane_bf16
__builtin_neon_vget_lane_f32
__builtin_neon_vget_lane_f64
__builtin_neon_vget_lane_i16
__builtin_neon_vget_lane_i32
__builtin_neon_vget_lane_i64
__builtin_neon_vget_lane_i8
__builtin_neon_vgetq_lane_bf16
__builtin_neon_vgetq_lane_f32
__builtin_neon_vgetq_lane_f64
__builtin_neon_vgetq_lane_i16
__builtin_neon_vgetq_lane_i32
__builtin_neon_vgetq_lane_i64
__builtin_neon_vgetq_lane_i8
__builtin_neon_vhadd_v
__builtin_neon_vhaddq_v
__builtin_neon_vhsub_v
__builtin_neon_vhsubq_v
__builtin_neon_vld1_bf16
V8ScvC*i
__builtin_neon_vld1_bf16_x2
vv*vC*i
__builtin_neon_vld1_bf16_x3
__builtin_neon_vld1_bf16_x4
__builtin_neon_vld1_dup_bf16
__builtin_neon_vld1_dup_v
__builtin_neon_vld1_lane_bf16
V8ScvC*V8ScIii
__builtin_neon_vld1_lane_v
__builtin_neon_vld1_v
__builtin_neon_vld1_x2_v
__builtin_neon_vld1_x3_v
__builtin_neon_vld1_x4_v
__builtin_neon_vld1q_bf16
V16ScvC*i
__builtin_neon_vld1q_bf16_x2
__builtin_neon_vld1q_bf16_x3
__builtin_neon_vld1q_bf16_x4
__builtin_neon_vld1q_dup_bf16
__builtin_neon_vld1q_dup_v
__builtin_neon_vld1q_lane_bf16
V16ScvC*V16ScIii
__builtin_neon_vld1q_lane_v
__builtin_neon_vld1q_v
__builtin_neon_vld1q_x2_v
__builtin_neon_vld1q_x3_v
__builtin_neon_vld1q_x4_v
__builtin_neon_vld2_bf16
__builtin_neon_vld2_dup_bf16
__builtin_neon_vld2_dup_v
__builtin_neon_vld2_lane_bf16
vv*vC*V8ScV8ScIii
__builtin_neon_vld2_lane_v
__builtin_neon_vld2_v
__builtin_neon_vld2q_bf16
__builtin_neon_vld2q_dup_bf16
__builtin_neon_vld2q_dup_v
__builtin_neon_vld2q_lane_bf16
vv*vC*V16ScV16ScIii
__builtin_neon_vld2q_lane_v
__builtin_neon_vld2q_v
__builtin_neon_vld3_bf16
__builtin_neon_vld3_dup_bf16
__builtin_neon_vld3_dup_v
__builtin_neon_vld3_lane_bf16
vv*vC*V8ScV8ScV8ScIii
__builtin_neon_vld3_lane_v
__builtin_neon_vld3_v
__builtin_neon_vld3q_bf16
__builtin_neon_vld3q_dup_bf16
__builtin_neon_vld3q_dup_v
__builtin_neon_vld3q_lane_bf16
vv*vC*V16ScV16ScV16ScIii
__builtin_neon_vld3q_lane_v
__builtin_neon_vld3q_v
__builtin_neon_vld4_bf16
__builtin_neon_vld4_dup_bf16
__builtin_neon_vld4_dup_v
__builtin_neon_vld4_lane_bf16
vv*vC*V8ScV8ScV8ScV8ScIii
__builtin_neon_vld4_lane_v
__builtin_neon_vld4_v
__builtin_neon_vld4q_bf16
__builtin_neon_vld4q_dup_bf16
__builtin_neon_vld4q_dup_v
__builtin_neon_vld4q_lane_bf16
vv*vC*V16ScV16ScV16ScV16ScIii
__builtin_neon_vld4q_lane_v
__builtin_neon_vld4q_v
__builtin_neon_vldrq_p128
ULLLivC*
__builtin_neon_vmax_f16
__builtin_neon_vmax_v
__builtin_neon_vmaxnm_f16
__builtin_neon_vmaxnm_v
__builtin_neon_vmaxnmq_f16
__builtin_neon_vmaxnmq_v
__builtin_neon_vmaxnmv_f16
hV8Sc
__builtin_neon_vmaxnmv_f32
__builtin_neon_vmaxnmvq_f16
hV16Sc
__builtin_neon_vmaxnmvq_f32
__builtin_neon_vmaxnmvq_f64
__builtin_neon_vmaxq_f16
__builtin_neon_vmaxq_v
__builtin_neon_vmaxv_f16
__builtin_neon_vmaxv_f32
__builtin_neon_vmaxv_s16
__builtin_neon_vmaxv_s32
__builtin_neon_vmaxv_s8
__builtin_neon_vmaxv_u16
__builtin_neon_vmaxv_u32
__builtin_neon_vmaxv_u8
__builtin_neon_vmaxvq_f16
__builtin_neon_vmaxvq_f32
__builtin_neon_vmaxvq_f64
__builtin_neon_vmaxvq_s16
__builtin_neon_vmaxvq_s32
__builtin_neon_vmaxvq_s8
__builtin_neon_vmaxvq_u16
__builtin_neon_vmaxvq_u32
__builtin_neon_vmaxvq_u8
__builtin_neon_vmin_f16
__builtin_neon_vmin_v
__builtin_neon_vminnm_f16
__builtin_neon_vminnm_v
__builtin_neon_vminnmq_f16
__builtin_neon_vminnmq_v
__builtin_neon_vminnmv_f16
__builtin_neon_vminnmv_f32
__builtin_neon_vminnmvq_f16
__builtin_neon_vminnmvq_f32
__builtin_neon_vminnmvq_f64
__builtin_neon_vminq_f16
__builtin_neon_vminq_v
__builtin_neon_vminv_f16
__builtin_neon_vminv_f32
__builtin_neon_vminv_s16
__builtin_neon_vminv_s32
__builtin_neon_vminv_s8
__builtin_neon_vminv_u16
__builtin_neon_vminv_u32
__builtin_neon_vminv_u8
__builtin_neon_vminvq_f16
__builtin_neon_vminvq_f32
__builtin_neon_vminvq_f64
__builtin_neon_vminvq_s16
__builtin_neon_vminvq_s32
__builtin_neon_vminvq_s8
__builtin_neon_vminvq_u16
__builtin_neon_vminvq_u32
__builtin_neon_vminvq_u8
__builtin_neon_vmmlaq_s32
i8mm
__builtin_neon_vmmlaq_u32
__builtin_neon_vmovl_v
__builtin_neon_vmovn_v
__builtin_neon_vmul_lane_v
__builtin_neon_vmul_laneq_v
V8ScV8ScV16ScIii
__builtin_neon_vmul_n_f64
V1dV1dd
__builtin_neon_vmul_v
__builtin_neon_vmull_p64
ULLLiUWiUWi
__builtin_neon_vmull_v
V16ScV8ScV8Sci
__builtin_neon_vmulq_v
__builtin_neon_vmulx_f16
__builtin_neon_vmulx_v
__builtin_neon_vmulxd_f64
__builtin_neon_vmulxh_lane_f16
hhV4hIi
__builtin_neon_vmulxh_laneq_f16
hhV8hIi
__builtin_neon_vmulxq_f16
__builtin_neon_vmulxq_v
__builtin_neon_vmulxs_f32
__builtin_neon_vnegd_s64
__builtin_neon_vpadal_v
__builtin_neon_vpadalq_v
__builtin_neon_vpadd_f16
__builtin_neon_vpadd_v
__builtin_neon_vpaddd_f64
__builtin_neon_vpaddd_s64
__builtin_neon_vpaddd_u64
__builtin_neon_vpaddl_v
__builtin_neon_vpaddlq_v
__builtin_neon_vpaddq_f16
__builtin_neon_vpaddq_v
__builtin_neon_vpadds_f32
__builtin_neon_vpmax_f16
__builtin_neon_vpmax_v
__builtin_neon_vpmaxnm_f16
__builtin_neon_vpmaxnm_v
__builtin_neon_vpmaxnmq_f16
__builtin_neon_vpmaxnmq_v
__builtin_neon_vpmaxnmqd_f64
__builtin_neon_vpmaxnms_f32
__builtin_neon_vpmaxq_f16
__builtin_neon_vpmaxq_v
__builtin_neon_vpmaxqd_f64
__builtin_neon_vpmaxs_f32
__builtin_neon_vpmin_f16
__builtin_neon_vpmin_v
__builtin_neon_vpminnm_f16
__builtin_neon_vpminnm_v
__builtin_neon_vpminnmq_f16
__builtin_neon_vpminnmq_v
__builtin_neon_vpminnmqd_f64
__builtin_neon_vpminnms_f32
__builtin_neon_vpminq_f16
__builtin_neon_vpminq_v
__builtin_neon_vpminqd_f64
__builtin_neon_vpmins_f32
__builtin_neon_vqabs_v
__builtin_neon_vqabsb_s8
ScSc
__builtin_neon_vqabsd_s64
__builtin_neon_vqabsh_s16
__builtin_neon_vqabsq_v
__builtin_neon_vqabss_s32
__builtin_neon_vqadd_v
__builtin_neon_vqaddb_s8
ScScSc
__builtin_neon_vqaddb_u8
UcUcUc
__builtin_neon_vqaddd_s64
__builtin_neon_vqaddd_u64
__builtin_neon_vqaddh_s16
__builtin_neon_vqaddh_u16
UsUsUs
__builtin_neon_vqaddq_v
__builtin_neon_vqadds_s32
__builtin_neon_vqadds_u32
UiUiUi
__builtin_neon_vqdmlal_v
V16ScV16ScV8ScV8Sci
__builtin_neon_vqdmlalh_lane_s16
iisV4sIi
__builtin_neon_vqdmlalh_laneq_s16
iisV8sIi
__builtin_neon_vqdmlalh_s16
iiss
__builtin_neon_vqdmlals_lane_s32
WiWiiV2iIi
__builtin_neon_vqdmlals_laneq_s32
WiWiiV4iIi
__builtin_neon_vqdmlals_s32
WiWiii
__builtin_neon_vqdmlsl_v
__builtin_neon_vqdmlslh_lane_s16
__builtin_neon_vqdmlslh_laneq_s16
__builtin_neon_vqdmlslh_s16
__builtin_neon_vqdmlsls_lane_s32
__builtin_neon_vqdmlsls_laneq_s32
__builtin_neon_vqdmlsls_s32
__builtin_neon_vqdmulh_lane_v
__builtin_neon_vqdmulh_laneq_v
__builtin_neon_vqdmulh_v
__builtin_neon_vqdmulhh_s16
__builtin_neon_vqdmulhq_lane_v
V16ScV16ScV8ScIii
__builtin_neon_vqdmulhq_laneq_v
__builtin_neon_vqdmulhq_v
__builtin_neon_vqdmulhs_s32
__builtin_neon_vqdmull_v
__builtin_neon_vqdmullh_s16
__builtin_neon_vqdmulls_s32
Wiii
__builtin_neon_vqmovn_v
__builtin_neon_vqmovnd_s64
__builtin_neon_vqmovnd_u64
UiUWi
__builtin_neon_vqmovnh_s16
__builtin_neon_vqmovnh_u16
UcUs
__builtin_neon_vqmovns_s32
__builtin_neon_vqmovns_u32
UsUi
__builtin_neon_vqmovun_v
__builtin_neon_vqmovund_s64
UiWi
__builtin_neon_vqmovunh_s16
__builtin_neon_vqmovuns_s32
__builtin_neon_vqneg_v
__builtin_neon_vqnegb_s8
__builtin_neon_vqnegd_s64
__builtin_neon_vqnegh_s16
__builtin_neon_vqnegq_v
__builtin_neon_vqnegs_s32
__builtin_neon_vqrdmlah_v
__builtin_neon_vqrdmlahh_s16
ssss
__builtin_neon_vqrdmlahq_v
__builtin_neon_vqrdmlahs_s32
iiii
__builtin_neon_vqrdmlsh_v
__builtin_neon_vqrdmlshh_s16
__builtin_neon_vqrdmlshq_v
__builtin_neon_vqrdmlshs_s32
__builtin_neon_vqrdmulh_lane_v
__builtin_neon_vqrdmulh_laneq_v
__builtin_neon_vqrdmulh_v
__builtin_neon_vqrdmulhh_s16
__builtin_neon_vqrdmulhq_lane_v
__builtin_neon_vqrdmulhq_laneq_v
__builtin_neon_vqrdmulhq_v
__builtin_neon_vqrdmulhs_s32
__builtin_neon_vqrshl_v
__builtin_neon_vqrshlb_s8
__builtin_neon_vqrshlb_u8
UcUcSc
__builtin_neon_vqrshld_s64
__builtin_neon_vqrshld_u64
UWiUWiWi
__builtin_neon_vqrshlh_s16
__builtin_neon_vqrshlh_u16
UsUss
__builtin_neon_vqrshlq_v
__builtin_neon_vqrshls_s32
__builtin_neon_vqrshls_u32
UiUii
__builtin_neon_vqrshrn_n_v
__builtin_neon_vqrshrnd_n_s64
iWiIi
__builtin_neon_vqrshrnd_n_u64
UiUWiIi
__builtin_neon_vqrshrnh_n_s16
ScsIi
__builtin_neon_vqrshrnh_n_u16
UcUsIi
__builtin_neon_vqrshrns_n_s32
siIi
__builtin_neon_vqrshrns_n_u32
UsUiIi
__builtin_neon_vqrshrun_n_v
__builtin_neon_vqrshrund_n_s64
__builtin_neon_vqrshrunh_n_s16
__builtin_neon_vqrshruns_n_s32
__builtin_neon_vqshl_n_v
__builtin_neon_vqshl_v
__builtin_neon_vqshlb_n_s8
ScScIi
__builtin_neon_vqshlb_n_u8
UcUcIi
__builtin_neon_vqshlb_s8
__builtin_neon_vqshlb_u8
__builtin_neon_vqshld_n_s64
WiWiIi
__builtin_neon_vqshld_n_u64
UWiUWiIi
__builtin_neon_vqshld_s64
__builtin_neon_vqshld_u64
__builtin_neon_vqshlh_n_s16
ssIi
__builtin_neon_vqshlh_n_u16
UsUsIi
__builtin_neon_vqshlh_s16
__builtin_neon_vqshlh_u16
__builtin_neon_vqshlq_n_v
__builtin_neon_vqshlq_v
__builtin_neon_vqshls_n_s32
iiIi
__builtin_neon_vqshls_n_u32
UiUiIi
__builtin_neon_vqshls_s32
__builtin_neon_vqshls_u32
__builtin_neon_vqshlu_n_v
__builtin_neon_vqshlub_n_s8
__builtin_neon_vqshlud_n_s64
__builtin_neon_vqshluh_n_s16
__builtin_neon_vqshluq_n_v
__builtin_neon_vqshlus_n_s32
__builtin_neon_vqshrn_n_v
__builtin_neon_vqshrnd_n_s64
__builtin_neon_vqshrnd_n_u64
__builtin_neon_vqshrnh_n_s16
__builtin_neon_vqshrnh_n_u16
__builtin_neon_vqshrns_n_s32
__builtin_neon_vqshrns_n_u32
__builtin_neon_vqshrun_n_v
__builtin_neon_vqshrund_n_s64
__builtin_neon_vqshrunh_n_s16
__builtin_neon_vqshruns_n_s32
__builtin_neon_vqsub_v
__builtin_neon_vqsubb_s8
__builtin_neon_vqsubb_u8
__builtin_neon_vqsubd_s64
__builtin_neon_vqsubd_u64
__builtin_neon_vqsubh_s16
__builtin_neon_vqsubh_u16
__builtin_neon_vqsubq_v
__builtin_neon_vqsubs_s32
__builtin_neon_vqsubs_u32
__builtin_neon_vqtbl1_v
V8ScV16ScV8Sci
__builtin_neon_vqtbl1q_v
__builtin_neon_vqtbl2_v
V8ScV16ScV16ScV8Sci
__builtin_neon_vqtbl2q_v
__builtin_neon_vqtbl3_v
V8ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbl3q_v
V16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vqtbl4_v
V8ScV16ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbl4q_v
V16ScV16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vqtbx1_v
V8ScV8ScV16ScV8Sci
__builtin_neon_vqtbx1q_v
__builtin_neon_vqtbx2_v
V8ScV8ScV16ScV16ScV8Sci
__builtin_neon_vqtbx2q_v
__builtin_neon_vqtbx3_v
V8ScV8ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbx3q_v
__builtin_neon_vqtbx4_v
V8ScV8ScV16ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbx4q_v
V16ScV16ScV16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vraddhn_v
__builtin_neon_vrax1q_u64
__builtin_neon_vrbit_v
__builtin_neon_vrbitq_v
__builtin_neon_vrecpe_f16
__builtin_neon_vrecpe_v
__builtin_neon_vrecped_f64
__builtin_neon_vrecpeq_f16
__builtin_neon_vrecpeq_v
__builtin_neon_vrecpes_f32
__builtin_neon_vrecps_f16
__builtin_neon_vrecps_v
__builtin_neon_vrecpsd_f64
__builtin_neon_vrecpsq_f16
__builtin_neon_vrecpsq_v
__builtin_neon_vrecpss_f32
__builtin_neon_vrecpxd_f64
__builtin_neon_vrecpxs_f32
__builtin_neon_vrhadd_v
__builtin_neon_vrhaddq_v
__builtin_neon_vrnd32x_v
__builtin_neon_vrnd32xq_v
__builtin_neon_vrnd32z_v
__builtin_neon_vrnd32zq_v
__builtin_neon_vrnd64x_v
__builtin_neon_vrnd64xq_v
__builtin_neon_vrnd64z_v
__builtin_neon_vrnd64zq_v
__builtin_neon_vrnd_f16
__builtin_neon_vrnd_v
__builtin_neon_vrnda_f16
__builtin_neon_vrnda_v
__builtin_neon_vrndaq_f16
__builtin_neon_vrndaq_v
__builtin_neon_vrndi_f16
__builtin_neon_vrndi_v
__builtin_neon_vrndiq_f16
__builtin_neon_vrndiq_v
__builtin_neon_vrndm_f16
__builtin_neon_vrndm_v
__builtin_neon_vrndmq_f16
__builtin_neon_vrndmq_v
__builtin_neon_vrndn_f16
__builtin_neon_vrndn_v
__builtin_neon_vrndnq_f16
__builtin_neon_vrndnq_v
__builtin_neon_vrndns_f32
__builtin_neon_vrndp_f16
__builtin_neon_vrndp_v
__builtin_neon_vrndpq_f16
__builtin_neon_vrndpq_v
__builtin_neon_vrndq_f16
__builtin_neon_vrndq_v
__builtin_neon_vrndx_f16
__builtin_neon_vrndx_v
__builtin_neon_vrndxq_f16
__builtin_neon_vrndxq_v
__builtin_neon_vrshl_v
__builtin_neon_vrshld_s64
__builtin_neon_vrshld_u64
__builtin_neon_vrshlq_v
__builtin_neon_vrshr_n_v
__builtin_neon_vrshrd_n_s64
__builtin_neon_vrshrd_n_u64
__builtin_neon_vrshrn_n_v
__builtin_neon_vrshrq_n_v
__builtin_neon_vrsqrte_f16
__builtin_neon_vrsqrte_v
__builtin_neon_vrsqrted_f64
__builtin_neon_vrsqrteq_f16
__builtin_neon_vrsqrteq_v
__builtin_neon_vrsqrtes_f32
__builtin_neon_vrsqrts_f16
__builtin_neon_vrsqrts_v
__builtin_neon_vrsqrtsd_f64
__builtin_neon_vrsqrtsq_f16
__builtin_neon_vrsqrtsq_v
__builtin_neon_vrsqrtss_f32
__builtin_neon_vrsra_n_v
__builtin_neon_vrsrad_n_s64
WiWiWiIi
__builtin_neon_vrsrad_n_u64
UWiUWiUWiIi
__builtin_neon_vrsraq_n_v
__builtin_neon_vrsubhn_v
__builtin_neon_vset_lane_bf16
V4yyV4yIi
__builtin_neon_vset_lane_f32
V2ffV2fIi
__builtin_neon_vset_lane_f64
V1ddV1dIi
__builtin_neon_vset_lane_i16
V4ssV4sIi
__builtin_neon_vset_lane_i32
V2iiV2iIi
__builtin_neon_vset_lane_i64
V1WiWiV1WiIi
__builtin_neon_vset_lane_i8
V8ScScV8ScIi
__builtin_neon_vsetq_lane_bf16
V8yyV8yIi
__builtin_neon_vsetq_lane_f32
V4ffV4fIi
__builtin_neon_vsetq_lane_f64
V2ddV2dIi
__builtin_neon_vsetq_lane_i16
V8ssV8sIi
__builtin_neon_vsetq_lane_i32
V4iiV4iIi
__builtin_neon_vsetq_lane_i64
V2WiWiV2WiIi
__builtin_neon_vsetq_lane_i8
V16ScScV16ScIi
__builtin_neon_vsha1cq_u32
V4iV4UiUiV4Ui
__builtin_neon_vsha1h_u32
UiUi
__builtin_neon_vsha1mq_u32
__builtin_neon_vsha1pq_u32
__builtin_neon_vsha1su0q_u32
__builtin_neon_vsha1su1q_u32
__builtin_neon_vsha256h2q_u32
__builtin_neon_vsha256hq_u32
__builtin_neon_vsha256su0q_u32
__builtin_neon_vsha256su1q_u32
__builtin_neon_vsha512h2q_u64
__builtin_neon_vsha512hq_u64
__builtin_neon_vsha512su0q_u64
__builtin_neon_vsha512su1q_u64
__builtin_neon_vshl_n_v
__builtin_neon_vshl_v
__builtin_neon_vshld_n_s64
__builtin_neon_vshld_n_u64
__builtin_neon_vshld_s64
__builtin_neon_vshld_u64
__builtin_neon_vshll_n_v
__builtin_neon_vshlq_n_v
__builtin_neon_vshlq_v
__builtin_neon_vshr_n_v
__builtin_neon_vshrd_n_s64
__builtin_neon_vshrd_n_u64
__builtin_neon_vshrn_n_v
__builtin_neon_vshrq_n_v
__builtin_neon_vsli_n_v
__builtin_neon_vslid_n_s64
__builtin_neon_vslid_n_u64
__builtin_neon_vsliq_n_v
__builtin_neon_vsm3partw1q_u32
__builtin_neon_vsm3partw2q_u32
__builtin_neon_vsm3ss1q_u32
__builtin_neon_vsm3tt1aq_u32
__builtin_neon_vsm3tt1bq_u32
__builtin_neon_vsm3tt2aq_u32
__builtin_neon_vsm3tt2bq_u32
__builtin_neon_vsm4ekeyq_u32
__builtin_neon_vsm4eq_u32
__builtin_neon_vsqadd_v
__builtin_neon_vsqaddb_u8
__builtin_neon_vsqaddd_u64
__builtin_neon_vsqaddh_u16
__builtin_neon_vsqaddq_v
__builtin_neon_vsqadds_u32
__builtin_neon_vsqrt_f16
__builtin_neon_vsqrt_v
__builtin_neon_vsqrtq_f16
__builtin_neon_vsqrtq_v
__builtin_neon_vsra_n_v
__builtin_neon_vsrad_n_s64
__builtin_neon_vsrad_n_u64
__builtin_neon_vsraq_n_v
__builtin_neon_vsri_n_v
__builtin_neon_vsrid_n_s64
__builtin_neon_vsrid_n_u64
__builtin_neon_vsriq_n_v
__builtin_neon_vst1_bf16
vv*V8Sci
__builtin_neon_vst1_bf16_x2
vv*V8ScV8Sci
__builtin_neon_vst1_bf16_x3
vv*V8ScV8ScV8Sci
__builtin_neon_vst1_bf16_x4
vv*V8ScV8ScV8ScV8Sci
__builtin_neon_vst1_lane_bf16
vv*V8ScIii
__builtin_neon_vst1_lane_v
__builtin_neon_vst1_v
__builtin_neon_vst1_x2_v
__builtin_neon_vst1_x3_v
__builtin_neon_vst1_x4_v
__builtin_neon_vst1q_bf16
vv*V16Sci
__builtin_neon_vst1q_bf16_x2
vv*V16ScV16Sci
__builtin_neon_vst1q_bf16_x3
vv*V16ScV16ScV16Sci
__builtin_neon_vst1q_bf16_x4
vv*V16ScV16ScV16ScV16Sci
__builtin_neon_vst1q_lane_bf16
vv*V16ScIii
__builtin_neon_vst1q_lane_v
__builtin_neon_vst1q_v
__builtin_neon_vst1q_x2_v
__builtin_neon_vst1q_x3_v
__builtin_neon_vst1q_x4_v
__builtin_neon_vst2_bf16
__builtin_neon_vst2_lane_bf16
vv*V8ScV8ScIii
__builtin_neon_vst2_lane_v
__builtin_neon_vst2_v
__builtin_neon_vst2q_bf16
__builtin_neon_vst2q_lane_bf16
vv*V16ScV16ScIii
__builtin_neon_vst2q_lane_v
__builtin_neon_vst2q_v
__builtin_neon_vst3_bf16
__builtin_neon_vst3_lane_bf16
vv*V8ScV8ScV8ScIii
__builtin_neon_vst3_lane_v
__builtin_neon_vst3_v
__builtin_neon_vst3q_bf16
__builtin_neon_vst3q_lane_bf16
vv*V16ScV16ScV16ScIii
__builtin_neon_vst3q_lane_v
__builtin_neon_vst3q_v
__builtin_neon_vst4_bf16
__builtin_neon_vst4_lane_bf16
vv*V8ScV8ScV8ScV8ScIii
__builtin_neon_vst4_lane_v
__builtin_neon_vst4_v
__builtin_neon_vst4q_bf16
__builtin_neon_vst4q_lane_bf16
vv*V16ScV16ScV16ScV16ScIii
__builtin_neon_vst4q_lane_v
__builtin_neon_vst4q_v
__builtin_neon_vstrq_p128
vv*ULLLi
__builtin_neon_vsubd_s64
__builtin_neon_vsubd_u64
__builtin_neon_vsubhn_v
__builtin_neon_vtbl1_v
__builtin_neon_vtbl2_v
__builtin_neon_vtbl3_v
V8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtbl4_v
V8ScV8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtbx1_v
__builtin_neon_vtbx2_v
__builtin_neon_vtbx3_v
__builtin_neon_vtbx4_v
V8ScV8ScV8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtrn_f16
__builtin_neon_vtrn_v
__builtin_neon_vtrnq_f16
__builtin_neon_vtrnq_v
__builtin_neon_vtst_v
__builtin_neon_vtstd_s64
__builtin_neon_vtstd_u64
__builtin_neon_vtstq_v
__builtin_neon_vuqadd_v
__builtin_neon_vuqaddb_s8
ScScUc
__builtin_neon_vuqaddd_s64
WiWiUWi
__builtin_neon_vuqaddh_s16
ssUs
__builtin_neon_vuqaddq_v
__builtin_neon_vuqadds_s32
iiUi
__builtin_neon_vusdot_s32
__builtin_neon_vusdotq_s32
__builtin_neon_vusmmlaq_s32
__builtin_neon_vuzp_f16
__builtin_neon_vuzp_v
__builtin_neon_vuzpq_f16
__builtin_neon_vuzpq_v
__builtin_neon_vxarq_u64
__builtin_neon_vzip_f16
__builtin_neon_vzip_v
__builtin_neon_vzipq_f16
__builtin_neon_vzipq_v
__builtin_neon_vabdh_f16
__builtin_neon_vabsh_f16
__builtin_neon_vaddh_f16
__builtin_neon_vcageh_f16
Ushh
__builtin_neon_vcagth_f16
__builtin_neon_vcaleh_f16
__builtin_neon_vcalth_f16
__builtin_neon_vceqh_f16
__builtin_neon_vceqzh_f16
__builtin_neon_vcgeh_f16
__builtin_neon_vcgezh_f16
__builtin_neon_vcgth_f16
__builtin_neon_vcgtzh_f16
__builtin_neon_vcleh_f16
__builtin_neon_vclezh_f16
__builtin_neon_vclth_f16
__builtin_neon_vcltzh_f16
__builtin_neon_vcvtah_s16_f16
__builtin_neon_vcvtah_s32_f16
__builtin_neon_vcvtah_s64_f16
__builtin_neon_vcvtah_u16_f16
__builtin_neon_vcvtah_u32_f16
__builtin_neon_vcvtah_u64_f16
UWih
__builtin_neon_vcvth_f16_s16
__builtin_neon_vcvth_f16_s32
__builtin_neon_vcvth_f16_s64
__builtin_neon_vcvth_f16_u16
__builtin_neon_vcvth_f16_u32
__builtin_neon_vcvth_f16_u64
hUWi
__builtin_neon_vcvth_n_f16_s16
hsIi
__builtin_neon_vcvth_n_f16_s32
hiIi
__builtin_neon_vcvth_n_f16_s64
hWiIi
__builtin_neon_vcvth_n_f16_u16
hUsIi
__builtin_neon_vcvth_n_f16_u32
hUiIi
__builtin_neon_vcvth_n_f16_u64
hUWiIi
__builtin_neon_vcvth_n_s16_f16
shIi
__builtin_neon_vcvth_n_s32_f16
ihIi
__builtin_neon_vcvth_n_s64_f16
WihIi
__builtin_neon_vcvth_n_u16_f16
UshIi
__builtin_neon_vcvth_n_u32_f16
UihIi
__builtin_neon_vcvth_n_u64_f16
UWihIi
__builtin_neon_vcvth_s16_f16
__builtin_neon_vcvth_s32_f16
__builtin_neon_vcvth_s64_f16
__builtin_neon_vcvth_u16_f16
__builtin_neon_vcvth_u32_f16
__builtin_neon_vcvth_u64_f16
__builtin_neon_vcvtmh_s16_f16
__builtin_neon_vcvtmh_s32_f16
__builtin_neon_vcvtmh_s64_f16
__builtin_neon_vcvtmh_u16_f16
__builtin_neon_vcvtmh_u32_f16
__builtin_neon_vcvtmh_u64_f16
__builtin_neon_vcvtnh_s16_f16
__builtin_neon_vcvtnh_s32_f16
__builtin_neon_vcvtnh_s64_f16
__builtin_neon_vcvtnh_u16_f16
__builtin_neon_vcvtnh_u32_f16
__builtin_neon_vcvtnh_u64_f16
__builtin_neon_vcvtph_s16_f16
__builtin_neon_vcvtph_s32_f16
__builtin_neon_vcvtph_s64_f16
__builtin_neon_vcvtph_u16_f16
__builtin_neon_vcvtph_u32_f16
__builtin_neon_vcvtph_u64_f16
__builtin_neon_vdivh_f16
__builtin_neon_vfmah_f16
hhhh
__builtin_neon_vfmsh_f16
__builtin_neon_vmaxh_f16
__builtin_neon_vmaxnmh_f16
__builtin_neon_vminh_f16
__builtin_neon_vminnmh_f16
__builtin_neon_vmulh_f16
__builtin_neon_vmulxh_f16
__builtin_neon_vnegh_f16
__builtin_neon_vrecpeh_f16
__builtin_neon_vrecpsh_f16
__builtin_neon_vrecpxh_f16
__builtin_neon_vrndah_f16
__builtin_neon_vrndh_f16
__builtin_neon_vrndih_f16
__builtin_neon_vrndmh_f16
__builtin_neon_vrndnh_f16
__builtin_neon_vrndph_f16
__builtin_neon_vrndxh_f16
__builtin_neon_vrsqrteh_f16
__builtin_neon_vrsqrtsh_f16
__builtin_neon_vsqrth_f16
__builtin_neon_vsubh_f16
__builtin_sve_svaba_n_s16
q8sq8sq8ss
__builtin_sve_svaba_n_s32
q4iq4iq4ii
__builtin_sve_svaba_n_s64
q2Wiq2Wiq2WiWi
__builtin_sve_svaba_n_s8
q16Scq16Scq16ScSc
__builtin_sve_svaba_n_u16
q8Usq8Usq8UsUs
__builtin_sve_svaba_n_u32
q4Uiq4Uiq4UiUi
__builtin_sve_svaba_n_u64
q2UWiq2UWiq2UWiUWi
__builtin_sve_svaba_n_u8
q16Ucq16Ucq16UcUc
__builtin_sve_svaba_s16
q8sq8sq8sq8s
__builtin_sve_svaba_s32
q4iq4iq4iq4i
__builtin_sve_svaba_s64
q2Wiq2Wiq2Wiq2Wi
__builtin_sve_svaba_s8
q16Scq16Scq16Scq16Sc
__builtin_sve_svaba_u16
q8Usq8Usq8Usq8Us
__builtin_sve_svaba_u32
q4Uiq4Uiq4Uiq4Ui
__builtin_sve_svaba_u64
q2UWiq2UWiq2UWiq2UWi
__builtin_sve_svaba_u8
q16Ucq16Ucq16Ucq16Uc
__builtin_sve_svabalb_n_s16
q8sq8sq16ScSc
__builtin_sve_svabalb_n_s32
q4iq4iq8ss
__builtin_sve_svabalb_n_s64
q2Wiq2Wiq4ii
__builtin_sve_svabalb_n_u16
q8Usq8Usq16UcUc
__builtin_sve_svabalb_n_u32
q4Uiq4Uiq8UsUs
__builtin_sve_svabalb_n_u64
q2UWiq2UWiq4UiUi
__builtin_sve_svabalb_s16
q8sq8sq16Scq16Sc
__builtin_sve_svabalb_s32
q4iq4iq8sq8s
__builtin_sve_svabalb_s64
q2Wiq2Wiq4iq4i
__builtin_sve_svabalb_u16
q8Usq8Usq16Ucq16Uc
__builtin_sve_svabalb_u32
q4Uiq4Uiq8Usq8Us
__builtin_sve_svabalb_u64
q2UWiq2UWiq4Uiq4Ui
__builtin_sve_svabalt_n_s16
__builtin_sve_svabalt_n_s32
__builtin_sve_svabalt_n_s64
__builtin_sve_svabalt_n_u16
__builtin_sve_svabalt_n_u32
__builtin_sve_svabalt_n_u64
__builtin_sve_svabalt_s16
__builtin_sve_svabalt_s32
__builtin_sve_svabalt_s64
__builtin_sve_svabalt_u16
__builtin_sve_svabalt_u32
__builtin_sve_svabalt_u64
__builtin_sve_svabd_f16_m
q8hq16bq8hq8h
__builtin_sve_svabd_f16_x
__builtin_sve_svabd_f16_z
__builtin_sve_svabd_f32_m
q4fq16bq4fq4f
__builtin_sve_svabd_f32_x
__builtin_sve_svabd_f32_z
__builtin_sve_svabd_f64_m
q2dq16bq2dq2d
__builtin_sve_svabd_f64_x
__builtin_sve_svabd_f64_z
__builtin_sve_svabd_n_f16_m
q8hq16bq8hh
__builtin_sve_svabd_n_f16_x
__builtin_sve_svabd_n_f16_z
__builtin_sve_svabd_n_f32_m
q4fq16bq4ff
__builtin_sve_svabd_n_f32_x
__builtin_sve_svabd_n_f32_z
__builtin_sve_svabd_n_f64_m
q2dq16bq2dd
__builtin_sve_svabd_n_f64_x
__builtin_sve_svabd_n_f64_z
__builtin_sve_svabd_n_s16_m
q8sq16bq8ss
__builtin_sve_svabd_n_s16_x
__builtin_sve_svabd_n_s16_z
__builtin_sve_svabd_n_s32_m
q4iq16bq4ii
__builtin_sve_svabd_n_s32_x
__builtin_sve_svabd_n_s32_z
__builtin_sve_svabd_n_s64_m
q2Wiq16bq2WiWi
__builtin_sve_svabd_n_s64_x
__builtin_sve_svabd_n_s64_z
__builtin_sve_svabd_n_s8_m
q16Scq16bq16ScSc
__builtin_sve_svabd_n_s8_x
__builtin_sve_svabd_n_s8_z
__builtin_sve_svabd_n_u16_m
q8Usq16bq8UsUs
__builtin_sve_svabd_n_u16_x
__builtin_sve_svabd_n_u16_z
__builtin_sve_svabd_n_u32_m
q4Uiq16bq4UiUi
__builtin_sve_svabd_n_u32_x
__builtin_sve_svabd_n_u32_z
__builtin_sve_svabd_n_u64_m
q2UWiq16bq2UWiUWi
__builtin_sve_svabd_n_u64_x
__builtin_sve_svabd_n_u64_z
__builtin_sve_svabd_n_u8_m
q16Ucq16bq16UcUc
__builtin_sve_svabd_n_u8_x
__builtin_sve_svabd_n_u8_z
__builtin_sve_svabd_s16_m
q8sq16bq8sq8s
__builtin_sve_svabd_s16_x
__builtin_sve_svabd_s16_z
__builtin_sve_svabd_s32_m
q4iq16bq4iq4i
__builtin_sve_svabd_s32_x
__builtin_sve_svabd_s32_z
__builtin_sve_svabd_s64_m
q2Wiq16bq2Wiq2Wi
__builtin_sve_svabd_s64_x
__builtin_sve_svabd_s64_z
__builtin_sve_svabd_s8_m
q16Scq16bq16Scq16Sc
__builtin_sve_svabd_s8_x
__builtin_sve_svabd_s8_z
__builtin_sve_svabd_u16_m
q8Usq16bq8Usq8Us
__builtin_sve_svabd_u16_x
__builtin_sve_svabd_u16_z
__builtin_sve_svabd_u32_m
q4Uiq16bq4Uiq4Ui
__builtin_sve_svabd_u32_x
__builtin_sve_svabd_u32_z
__builtin_sve_svabd_u64_m
q2UWiq16bq2UWiq2UWi
__builtin_sve_svabd_u64_x
__builtin_sve_svabd_u64_z
__builtin_sve_svabd_u8_m
q16Ucq16bq16Ucq16Uc
__builtin_sve_svabd_u8_x
__builtin_sve_svabd_u8_z
__builtin_sve_svabdlb_n_s16
q8sq16ScSc
__builtin_sve_svabdlb_n_s32
q4iq8ss
__builtin_sve_svabdlb_n_s64
q2Wiq4ii
__builtin_sve_svabdlb_n_u16
q8Usq16UcUc
__builtin_sve_svabdlb_n_u32
q4Uiq8UsUs
__builtin_sve_svabdlb_n_u64
q2UWiq4UiUi
__builtin_sve_svabdlb_s16
q8sq16Scq16Sc
__builtin_sve_svabdlb_s32
q4iq8sq8s
__builtin_sve_svabdlb_s64
q2Wiq4iq4i
__builtin_sve_svabdlb_u16
q8Usq16Ucq16Uc
__builtin_sve_svabdlb_u32
q4Uiq8Usq8Us
__builtin_sve_svabdlb_u64
q2UWiq4Uiq4Ui
__builtin_sve_svabdlt_n_s16
__builtin_sve_svabdlt_n_s32
__builtin_sve_svabdlt_n_s64
__builtin_sve_svabdlt_n_u16
__builtin_sve_svabdlt_n_u32
__builtin_sve_svabdlt_n_u64
__builtin_sve_svabdlt_s16
__builtin_sve_svabdlt_s32
__builtin_sve_svabdlt_s64
__builtin_sve_svabdlt_u16
__builtin_sve_svabdlt_u32
__builtin_sve_svabdlt_u64
__builtin_sve_svabs_f16_m
q8hq8hq16bq8h
__builtin_sve_svabs_f16_x
q8hq16bq8h
__builtin_sve_svabs_f16_z
__builtin_sve_svabs_f32_m
q4fq4fq16bq4f
__builtin_sve_svabs_f32_x
q4fq16bq4f
__builtin_sve_svabs_f32_z
__builtin_sve_svabs_f64_m
q2dq2dq16bq2d
__builtin_sve_svabs_f64_x
q2dq16bq2d
__builtin_sve_svabs_f64_z
__builtin_sve_svabs_s16_m
q8sq8sq16bq8s
__builtin_sve_svabs_s16_x
q8sq16bq8s
__builtin_sve_svabs_s16_z
__builtin_sve_svabs_s32_m
q4iq4iq16bq4i
__builtin_sve_svabs_s32_x
q4iq16bq4i
__builtin_sve_svabs_s32_z
__builtin_sve_svabs_s64_m
q2Wiq2Wiq16bq2Wi
__builtin_sve_svabs_s64_x
q2Wiq16bq2Wi
__builtin_sve_svabs_s64_z
__builtin_sve_svabs_s8_m
q16Scq16Scq16bq16Sc
__builtin_sve_svabs_s8_x
q16Scq16bq16Sc
__builtin_sve_svabs_s8_z
__builtin_sve_svacge_f16
q16bq16bq8hq8h
__builtin_sve_svacge_f32
q16bq16bq4fq4f
__builtin_sve_svacge_f64
q16bq16bq2dq2d
__builtin_sve_svacge_n_f16
q16bq16bq8hh
__builtin_sve_svacge_n_f32
q16bq16bq4ff
__builtin_sve_svacge_n_f64
q16bq16bq2dd
__builtin_sve_svacgt_f16
__builtin_sve_svacgt_f32
__builtin_sve_svacgt_f64
__builtin_sve_svacgt_n_f16
__builtin_sve_svacgt_n_f32
__builtin_sve_svacgt_n_f64
__builtin_sve_svacle_f16
__builtin_sve_svacle_f32
__builtin_sve_svacle_f64
__builtin_sve_svacle_n_f16
__builtin_sve_svacle_n_f32
__builtin_sve_svacle_n_f64
__builtin_sve_svaclt_f16
__builtin_sve_svaclt_f32
__builtin_sve_svaclt_f64
__builtin_sve_svaclt_n_f16
__builtin_sve_svaclt_n_f32
__builtin_sve_svaclt_n_f64
__builtin_sve_svadalp_s16_m
q8sq16bq8sq16Sc
__builtin_sve_svadalp_s16_x
__builtin_sve_svadalp_s16_z
__builtin_sve_svadalp_s32_m
q4iq16bq4iq8s
__builtin_sve_svadalp_s32_x
__builtin_sve_svadalp_s32_z
__builtin_sve_svadalp_s64_m
q2Wiq16bq2Wiq4i
__builtin_sve_svadalp_s64_x
__builtin_sve_svadalp_s64_z
__builtin_sve_svadalp_u16_m
q8Usq16bq8Usq16Uc
__builtin_sve_svadalp_u16_x
__builtin_sve_svadalp_u16_z
__builtin_sve_svadalp_u32_m
q4Uiq16bq4Uiq8Us
__builtin_sve_svadalp_u32_x
__builtin_sve_svadalp_u32_z
__builtin_sve_svadalp_u64_m
q2UWiq16bq2UWiq4Ui
__builtin_sve_svadalp_u64_x
__builtin_sve_svadalp_u64_z
__builtin_sve_svadclb_n_u32
__builtin_sve_svadclb_n_u64
__builtin_sve_svadclb_u32
__builtin_sve_svadclb_u64
__builtin_sve_svadclt_n_u32
__builtin_sve_svadclt_n_u64
__builtin_sve_svadclt_u32
__builtin_sve_svadclt_u64
__builtin_sve_svadd_f16_m
__builtin_sve_svadd_f16_x
__builtin_sve_svadd_f16_z
__builtin_sve_svadd_f32_m
__builtin_sve_svadd_f32_x
__builtin_sve_svadd_f32_z
__builtin_sve_svadd_f64_m
__builtin_sve_svadd_f64_x
__builtin_sve_svadd_f64_z
__builtin_sve_svadd_n_f16_m
__builtin_sve_svadd_n_f16_x
__builtin_sve_svadd_n_f16_z
__builtin_sve_svadd_n_f32_m
__builtin_sve_svadd_n_f32_x
__builtin_sve_svadd_n_f32_z
__builtin_sve_svadd_n_f64_m
__builtin_sve_svadd_n_f64_x
__builtin_sve_svadd_n_f64_z
__builtin_sve_svadd_n_s16_m
__builtin_sve_svadd_n_s16_x
__builtin_sve_svadd_n_s16_z
__builtin_sve_svadd_n_s32_m
__builtin_sve_svadd_n_s32_x
__builtin_sve_svadd_n_s32_z
__builtin_sve_svadd_n_s64_m
__builtin_sve_svadd_n_s64_x
__builtin_sve_svadd_n_s64_z
__builtin_sve_svadd_n_s8_m
__builtin_sve_svadd_n_s8_x
__builtin_sve_svadd_n_s8_z
__builtin_sve_svadd_n_u16_m
__builtin_sve_svadd_n_u16_x
__builtin_sve_svadd_n_u16_z
__builtin_sve_svadd_n_u32_m
__builtin_sve_svadd_n_u32_x
__builtin_sve_svadd_n_u32_z
__builtin_sve_svadd_n_u64_m
__builtin_sve_svadd_n_u64_x
__builtin_sve_svadd_n_u64_z
__builtin_sve_svadd_n_u8_m
__builtin_sve_svadd_n_u8_x
__builtin_sve_svadd_n_u8_z
__builtin_sve_svadd_s16_m
__builtin_sve_svadd_s16_x
__builtin_sve_svadd_s16_z
__builtin_sve_svadd_s32_m
__builtin_sve_svadd_s32_x
__builtin_sve_svadd_s32_z
__builtin_sve_svadd_s64_m
__builtin_sve_svadd_s64_x
__builtin_sve_svadd_s64_z
__builtin_sve_svadd_s8_m
__builtin_sve_svadd_s8_x
__builtin_sve_svadd_s8_z
__builtin_sve_svadd_u16_m
__builtin_sve_svadd_u16_x
__builtin_sve_svadd_u16_z
__builtin_sve_svadd_u32_m
__builtin_sve_svadd_u32_x
__builtin_sve_svadd_u32_z
__builtin_sve_svadd_u64_m
__builtin_sve_svadd_u64_x
__builtin_sve_svadd_u64_z
__builtin_sve_svadd_u8_m
__builtin_sve_svadd_u8_x
__builtin_sve_svadd_u8_z
__builtin_sve_svadda_f16
hq16bhq8h
__builtin_sve_svadda_f32
fq16bfq4f
__builtin_sve_svadda_f64
dq16bdq2d
__builtin_sve_svaddhnb_n_s16
q16Scq8ss
__builtin_sve_svaddhnb_n_s32
q8sq4ii
__builtin_sve_svaddhnb_n_s64
q4iq2WiWi
__builtin_sve_svaddhnb_n_u16
q16Ucq8UsUs
__builtin_sve_svaddhnb_n_u32
q8Usq4UiUi
__builtin_sve_svaddhnb_n_u64
q4Uiq2UWiUWi
__builtin_sve_svaddhnb_s16
q16Scq8sq8s
__builtin_sve_svaddhnb_s32
q8sq4iq4i
__builtin_sve_svaddhnb_s64
q4iq2Wiq2Wi
__builtin_sve_svaddhnb_u16
q16Ucq8Usq8Us
__builtin_sve_svaddhnb_u32
q8Usq4Uiq4Ui
__builtin_sve_svaddhnb_u64
q4Uiq2UWiq2UWi
__builtin_sve_svaddhnt_n_s16
q16Scq16Scq8ss
__builtin_sve_svaddhnt_n_s32
q8sq8sq4ii
__builtin_sve_svaddhnt_n_s64
q4iq4iq2WiWi
__builtin_sve_svaddhnt_n_u16
q16Ucq16Ucq8UsUs
__builtin_sve_svaddhnt_n_u32
q8Usq8Usq4UiUi
__builtin_sve_svaddhnt_n_u64
q4Uiq4Uiq2UWiUWi
__builtin_sve_svaddhnt_s16
q16Scq16Scq8sq8s
__builtin_sve_svaddhnt_s32
q8sq8sq4iq4i
__builtin_sve_svaddhnt_s64
q4iq4iq2Wiq2Wi
__builtin_sve_svaddhnt_u16
q16Ucq16Ucq8Usq8Us
__builtin_sve_svaddhnt_u32
q8Usq8Usq4Uiq4Ui
__builtin_sve_svaddhnt_u64
q4Uiq4Uiq2UWiq2UWi
__builtin_sve_svaddlb_n_s16
__builtin_sve_svaddlb_n_s32
__builtin_sve_svaddlb_n_s64
__builtin_sve_svaddlb_n_u16
__builtin_sve_svaddlb_n_u32
__builtin_sve_svaddlb_n_u64
__builtin_sve_svaddlb_s16
__builtin_sve_svaddlb_s32
__builtin_sve_svaddlb_s64
__builtin_sve_svaddlb_u16
__builtin_sve_svaddlb_u32
__builtin_sve_svaddlb_u64
__builtin_sve_svaddlbt_n_s16
__builtin_sve_svaddlbt_n_s32
__builtin_sve_svaddlbt_n_s64
__builtin_sve_svaddlbt_s16
__builtin_sve_svaddlbt_s32
__builtin_sve_svaddlbt_s64
__builtin_sve_svaddlt_n_s16
__builtin_sve_svaddlt_n_s32
__builtin_sve_svaddlt_n_s64
__builtin_sve_svaddlt_n_u16
__builtin_sve_svaddlt_n_u32
__builtin_sve_svaddlt_n_u64
__builtin_sve_svaddlt_s16
__builtin_sve_svaddlt_s32
__builtin_sve_svaddlt_s64
__builtin_sve_svaddlt_u16
__builtin_sve_svaddlt_u32
__builtin_sve_svaddlt_u64
__builtin_sve_svaddp_f16_m
__builtin_sve_svaddp_f16_x
__builtin_sve_svaddp_f32_m
__builtin_sve_svaddp_f32_x
__builtin_sve_svaddp_f64_m
__builtin_sve_svaddp_f64_x
__builtin_sve_svaddp_s16_m
__builtin_sve_svaddp_s16_x
__builtin_sve_svaddp_s32_m
__builtin_sve_svaddp_s32_x
__builtin_sve_svaddp_s64_m
__builtin_sve_svaddp_s64_x
__builtin_sve_svaddp_s8_m
__builtin_sve_svaddp_s8_x
__builtin_sve_svaddp_u16_m
__builtin_sve_svaddp_u16_x
__builtin_sve_svaddp_u32_m
__builtin_sve_svaddp_u32_x
__builtin_sve_svaddp_u64_m
__builtin_sve_svaddp_u64_x
__builtin_sve_svaddp_u8_m
__builtin_sve_svaddp_u8_x
__builtin_sve_svaddv_f16
hq16bq8h
__builtin_sve_svaddv_f32
fq16bq4f
__builtin_sve_svaddv_f64
dq16bq2d
__builtin_sve_svaddv_s16
Wiq16bq8s
__builtin_sve_svaddv_s32
Wiq16bq4i
__builtin_sve_svaddv_s64
Wiq16bq2Wi
__builtin_sve_svaddv_s8
Wiq16bq16Sc
__builtin_sve_svaddv_u16
UWiq16bq8Us
__builtin_sve_svaddv_u32
UWiq16bq4Ui
__builtin_sve_svaddv_u64
UWiq16bq2UWi
__builtin_sve_svaddv_u8
UWiq16bq16Uc
__builtin_sve_svaddwb_n_s16
q8sq8sSc
__builtin_sve_svaddwb_n_s32
q4iq4is
__builtin_sve_svaddwb_n_s64
q2Wiq2Wii
__builtin_sve_svaddwb_n_u16
q8Usq8UsUc
__builtin_sve_svaddwb_n_u32
q4Uiq4UiUs
__builtin_sve_svaddwb_n_u64
q2UWiq2UWiUi
__builtin_sve_svaddwb_s16
q8sq8sq16Sc
__builtin_sve_svaddwb_s32
q4iq4iq8s
__builtin_sve_svaddwb_s64
q2Wiq2Wiq4i
__builtin_sve_svaddwb_u16
q8Usq8Usq16Uc
__builtin_sve_svaddwb_u32
q4Uiq4Uiq8Us
__builtin_sve_svaddwb_u64
q2UWiq2UWiq4Ui
__builtin_sve_svaddwt_n_s16
__builtin_sve_svaddwt_n_s32
__builtin_sve_svaddwt_n_s64
__builtin_sve_svaddwt_n_u16
__builtin_sve_svaddwt_n_u32
__builtin_sve_svaddwt_n_u64
__builtin_sve_svaddwt_s16
__builtin_sve_svaddwt_s32
__builtin_sve_svaddwt_s64
__builtin_sve_svaddwt_u16
__builtin_sve_svaddwt_u32
__builtin_sve_svaddwt_u64
__builtin_sve_svadrb_u32base_s32offset
q4Uiq4Uiq4i
__builtin_sve_svadrb_u32base_u32offset
q4Uiq4Uiq4Ui
__builtin_sve_svadrb_u64base_s64offset
q2UWiq2UWiq2Wi
__builtin_sve_svadrb_u64base_u64offset
q2UWiq2UWiq2UWi
__builtin_sve_svadrd_u32base_s32index
__builtin_sve_svadrd_u32base_u32index
__builtin_sve_svadrd_u64base_s64index
__builtin_sve_svadrd_u64base_u64index
__builtin_sve_svadrh_u32base_s32index
__builtin_sve_svadrh_u32base_u32index
__builtin_sve_svadrh_u64base_s64index
__builtin_sve_svadrh_u64base_u64index
__builtin_sve_svadrw_u32base_s32index
__builtin_sve_svadrw_u32base_u32index
__builtin_sve_svadrw_u64base_s64index
__builtin_sve_svadrw_u64base_u64index
__builtin_sve_svaesd_u8
q16Ucq16Ucq16Uc
__builtin_sve_svaese_u8
__builtin_sve_svaesimc_u8
q16Ucq16Uc
__builtin_sve_svaesmc_u8
__builtin_sve_svand_b_z
q16bq16bq16bq16b
__builtin_sve_svand_n_s16_m
__builtin_sve_svand_n_s16_x
__builtin_sve_svand_n_s16_z
__builtin_sve_svand_n_s32_m
__builtin_sve_svand_n_s32_x
__builtin_sve_svand_n_s32_z
__builtin_sve_svand_n_s64_m
__builtin_sve_svand_n_s64_x
__builtin_sve_svand_n_s64_z
__builtin_sve_svand_n_s8_m
__builtin_sve_svand_n_s8_x
__builtin_sve_svand_n_s8_z
__builtin_sve_svand_n_u16_m
__builtin_sve_svand_n_u16_x
__builtin_sve_svand_n_u16_z
__builtin_sve_svand_n_u32_m
__builtin_sve_svand_n_u32_x
__builtin_sve_svand_n_u32_z
__builtin_sve_svand_n_u64_m
__builtin_sve_svand_n_u64_x
__builtin_sve_svand_n_u64_z
__builtin_sve_svand_n_u8_m
__builtin_sve_svand_n_u8_x
__builtin_sve_svand_n_u8_z
__builtin_sve_svand_s16_m
__builtin_sve_svand_s16_x
__builtin_sve_svand_s16_z
__builtin_sve_svand_s32_m
__builtin_sve_svand_s32_x
__builtin_sve_svand_s32_z
__builtin_sve_svand_s64_m
__builtin_sve_svand_s64_x
__builtin_sve_svand_s64_z
__builtin_sve_svand_s8_m
__builtin_sve_svand_s8_x
__builtin_sve_svand_s8_z
__builtin_sve_svand_u16_m
__builtin_sve_svand_u16_x
__builtin_sve_svand_u16_z
__builtin_sve_svand_u32_m
__builtin_sve_svand_u32_x
__builtin_sve_svand_u32_z
__builtin_sve_svand_u64_m
__builtin_sve_svand_u64_x
__builtin_sve_svand_u64_z
__builtin_sve_svand_u8_m
__builtin_sve_svand_u8_x
__builtin_sve_svand_u8_z
__builtin_sve_svandv_s16
sq16bq8s
__builtin_sve_svandv_s32
iq16bq4i
__builtin_sve_svandv_s64
__builtin_sve_svandv_s8
Scq16bq16Sc
__builtin_sve_svandv_u16
Usq16bq8Us
__builtin_sve_svandv_u32
Uiq16bq4Ui
__builtin_sve_svandv_u64
__builtin_sve_svandv_u8
Ucq16bq16Uc
__builtin_sve_svasr_n_s16_m
q8sq16bq8sUs
__builtin_sve_svasr_n_s16_x
__builtin_sve_svasr_n_s16_z
__builtin_sve_svasr_n_s32_m
q4iq16bq4iUi
__builtin_sve_svasr_n_s32_x
__builtin_sve_svasr_n_s32_z
__builtin_sve_svasr_n_s64_m
q2Wiq16bq2WiUWi
__builtin_sve_svasr_n_s64_x
__builtin_sve_svasr_n_s64_z
__builtin_sve_svasr_n_s8_m
q16Scq16bq16ScUc
__builtin_sve_svasr_n_s8_x
__builtin_sve_svasr_n_s8_z
__builtin_sve_svasr_s16_m
q8sq16bq8sq8Us
__builtin_sve_svasr_s16_x
__builtin_sve_svasr_s16_z
__builtin_sve_svasr_s32_m
q4iq16bq4iq4Ui
__builtin_sve_svasr_s32_x
__builtin_sve_svasr_s32_z
__builtin_sve_svasr_s64_m
q2Wiq16bq2Wiq2UWi
__builtin_sve_svasr_s64_x
__builtin_sve_svasr_s64_z
__builtin_sve_svasr_s8_m
q16Scq16bq16Scq16Uc
__builtin_sve_svasr_s8_x
__builtin_sve_svasr_s8_z
__builtin_sve_svasr_wide_n_s16_m
q8sq16bq8sUWi
__builtin_sve_svasr_wide_n_s16_x
__builtin_sve_svasr_wide_n_s16_z
__builtin_sve_svasr_wide_n_s32_m
q4iq16bq4iUWi
__builtin_sve_svasr_wide_n_s32_x
__builtin_sve_svasr_wide_n_s32_z
__builtin_sve_svasr_wide_n_s8_m
q16Scq16bq16ScUWi
__builtin_sve_svasr_wide_n_s8_x
__builtin_sve_svasr_wide_n_s8_z
__builtin_sve_svasr_wide_s16_m
q8sq16bq8sq2UWi
__builtin_sve_svasr_wide_s16_x
__builtin_sve_svasr_wide_s16_z
__builtin_sve_svasr_wide_s32_m
q4iq16bq4iq2UWi
__builtin_sve_svasr_wide_s32_x
__builtin_sve_svasr_wide_s32_z
__builtin_sve_svasr_wide_s8_m
q16Scq16bq16Scq2UWi
__builtin_sve_svasr_wide_s8_x
__builtin_sve_svasr_wide_s8_z
__builtin_sve_svasrd_n_s16_m
q8sq16bq8sIUWi
__builtin_sve_svasrd_n_s16_x
__builtin_sve_svasrd_n_s16_z
__builtin_sve_svasrd_n_s32_m
q4iq16bq4iIUWi
__builtin_sve_svasrd_n_s32_x
__builtin_sve_svasrd_n_s32_z
__builtin_sve_svasrd_n_s64_m
q2Wiq16bq2WiIUWi
__builtin_sve_svasrd_n_s64_x
__builtin_sve_svasrd_n_s64_z
__builtin_sve_svasrd_n_s8_m
q16Scq16bq16ScIUWi
__builtin_sve_svasrd_n_s8_x
__builtin_sve_svasrd_n_s8_z
__builtin_sve_svbcax_n_s16
__builtin_sve_svbcax_n_s32
__builtin_sve_svbcax_n_s64
__builtin_sve_svbcax_n_s8
__builtin_sve_svbcax_n_u16
__builtin_sve_svbcax_n_u32
__builtin_sve_svbcax_n_u64
__builtin_sve_svbcax_n_u8
__builtin_sve_svbcax_s16
__builtin_sve_svbcax_s32
__builtin_sve_svbcax_s64
__builtin_sve_svbcax_s8
__builtin_sve_svbcax_u16
__builtin_sve_svbcax_u32
__builtin_sve_svbcax_u64
__builtin_sve_svbcax_u8
__builtin_sve_svbdep_n_u16
q8Usq8UsUs
__builtin_sve_svbdep_n_u32
q4Uiq4UiUi
__builtin_sve_svbdep_n_u64
q2UWiq2UWiUWi
__builtin_sve_svbdep_n_u8
q16Ucq16UcUc
__builtin_sve_svbdep_u16
q8Usq8Usq8Us
__builtin_sve_svbdep_u32
__builtin_sve_svbdep_u64
__builtin_sve_svbdep_u8
__builtin_sve_svbext_n_u16
__builtin_sve_svbext_n_u32
__builtin_sve_svbext_n_u64
__builtin_sve_svbext_n_u8
__builtin_sve_svbext_u16
__builtin_sve_svbext_u32
__builtin_sve_svbext_u64
__builtin_sve_svbext_u8
__builtin_sve_svbfdot_f32
q4fq4fq8yq8y
__builtin_sve_svbfdot_lane_f32
q4fq4fq8yq8yUWi
__builtin_sve_svbfdot_n_f32
q4fq4fq8yy
__builtin_sve_svbfmlalb_f32
__builtin_sve_svbfmlalb_lane_f32
__builtin_sve_svbfmlalb_n_f32
__builtin_sve_svbfmlalt_f32
__builtin_sve_svbfmlalt_lane_f32
__builtin_sve_svbfmlalt_n_f32
__builtin_sve_svbfmmla_f32
__builtin_sve_svbgrp_n_u16
__builtin_sve_svbgrp_n_u32
__builtin_sve_svbgrp_n_u64
__builtin_sve_svbgrp_n_u8
__builtin_sve_svbgrp_u16
__builtin_sve_svbgrp_u32
__builtin_sve_svbgrp_u64
__builtin_sve_svbgrp_u8
__builtin_sve_svbic_b_z
__builtin_sve_svbic_n_s16_m
__builtin_sve_svbic_n_s16_x
__builtin_sve_svbic_n_s16_z
__builtin_sve_svbic_n_s32_m
__builtin_sve_svbic_n_s32_x
__builtin_sve_svbic_n_s32_z
__builtin_sve_svbic_n_s64_m
__builtin_sve_svbic_n_s64_x
__builtin_sve_svbic_n_s64_z
__builtin_sve_svbic_n_s8_m
__builtin_sve_svbic_n_s8_x
__builtin_sve_svbic_n_s8_z
__builtin_sve_svbic_n_u16_m
__builtin_sve_svbic_n_u16_x
__builtin_sve_svbic_n_u16_z
__builtin_sve_svbic_n_u32_m
__builtin_sve_svbic_n_u32_x
__builtin_sve_svbic_n_u32_z
__builtin_sve_svbic_n_u64_m
__builtin_sve_svbic_n_u64_x
__builtin_sve_svbic_n_u64_z
__builtin_sve_svbic_n_u8_m
__builtin_sve_svbic_n_u8_x
__builtin_sve_svbic_n_u8_z
__builtin_sve_svbic_s16_m
__builtin_sve_svbic_s16_x
__builtin_sve_svbic_s16_z
__builtin_sve_svbic_s32_m
__builtin_sve_svbic_s32_x
__builtin_sve_svbic_s32_z
__builtin_sve_svbic_s64_m
__builtin_sve_svbic_s64_x
__builtin_sve_svbic_s64_z
__builtin_sve_svbic_s8_m
__builtin_sve_svbic_s8_x
__builtin_sve_svbic_s8_z
__builtin_sve_svbic_u16_m
__builtin_sve_svbic_u16_x
__builtin_sve_svbic_u16_z
__builtin_sve_svbic_u32_m
__builtin_sve_svbic_u32_x
__builtin_sve_svbic_u32_z
__builtin_sve_svbic_u64_m
__builtin_sve_svbic_u64_x
__builtin_sve_svbic_u64_z
__builtin_sve_svbic_u8_m
__builtin_sve_svbic_u8_x
__builtin_sve_svbic_u8_z
__builtin_sve_svbrka_b_m
__builtin_sve_svbrka_b_z
q16bq16bq16b
__builtin_sve_svbrkb_b_m
__builtin_sve_svbrkb_b_z
__builtin_sve_svbrkn_b_z
__builtin_sve_svbrkpa_b_z
__builtin_sve_svbrkpb_b_z
__builtin_sve_svbsl1n_n_s16
__builtin_sve_svbsl1n_n_s32
__builtin_sve_svbsl1n_n_s64
__builtin_sve_svbsl1n_n_s8
__builtin_sve_svbsl1n_n_u16
__builtin_sve_svbsl1n_n_u32
__builtin_sve_svbsl1n_n_u64
__builtin_sve_svbsl1n_n_u8
__builtin_sve_svbsl1n_s16
__builtin_sve_svbsl1n_s32
__builtin_sve_svbsl1n_s64
__builtin_sve_svbsl1n_s8
__builtin_sve_svbsl1n_u16
__builtin_sve_svbsl1n_u32
__builtin_sve_svbsl1n_u64
__builtin_sve_svbsl1n_u8
__builtin_sve_svbsl2n_n_s16
__builtin_sve_svbsl2n_n_s32
__builtin_sve_svbsl2n_n_s64
__builtin_sve_svbsl2n_n_s8
__builtin_sve_svbsl2n_n_u16
__builtin_sve_svbsl2n_n_u32
__builtin_sve_svbsl2n_n_u64
__builtin_sve_svbsl2n_n_u8
__builtin_sve_svbsl2n_s16
__builtin_sve_svbsl2n_s32
__builtin_sve_svbsl2n_s64
__builtin_sve_svbsl2n_s8
__builtin_sve_svbsl2n_u16
__builtin_sve_svbsl2n_u32
__builtin_sve_svbsl2n_u64
__builtin_sve_svbsl2n_u8
__builtin_sve_svbsl_n_s16
__builtin_sve_svbsl_n_s32
__builtin_sve_svbsl_n_s64
__builtin_sve_svbsl_n_s8
__builtin_sve_svbsl_n_u16
__builtin_sve_svbsl_n_u32
__builtin_sve_svbsl_n_u64
__builtin_sve_svbsl_n_u8
__builtin_sve_svbsl_s16
__builtin_sve_svbsl_s32
__builtin_sve_svbsl_s64
__builtin_sve_svbsl_s8
__builtin_sve_svbsl_u16
__builtin_sve_svbsl_u32
__builtin_sve_svbsl_u64
__builtin_sve_svbsl_u8
__builtin_sve_svcadd_f16_m
q8hq16bq8hq8hIUWi
__builtin_sve_svcadd_f16_x
__builtin_sve_svcadd_f16_z
__builtin_sve_svcadd_f32_m
q4fq16bq4fq4fIUWi
__builtin_sve_svcadd_f32_x
__builtin_sve_svcadd_f32_z
__builtin_sve_svcadd_f64_m
q2dq16bq2dq2dIUWi
__builtin_sve_svcadd_f64_x
__builtin_sve_svcadd_f64_z
__builtin_sve_svcadd_s16
q8sq8sq8sIUWi
__builtin_sve_svcadd_s32
q4iq4iq4iIUWi
__builtin_sve_svcadd_s64
q2Wiq2Wiq2WiIUWi
__builtin_sve_svcadd_s8
q16Scq16Scq16ScIUWi
__builtin_sve_svcadd_u16
q8Usq8Usq8UsIUWi
__builtin_sve_svcadd_u32
q4Uiq4Uiq4UiIUWi
__builtin_sve_svcadd_u64
q2UWiq2UWiq2UWiIUWi
__builtin_sve_svcadd_u8
q16Ucq16Ucq16UcIUWi
__builtin_sve_svcdot_lane_s32
q4iq4iq16Scq16ScIUWiIUWi
__builtin_sve_svcdot_lane_s64
q2Wiq2Wiq8sq8sIUWiIUWi
__builtin_sve_svcdot_s32
q4iq4iq16Scq16ScIUWi
__builtin_sve_svcdot_s64
q2Wiq2Wiq8sq8sIUWi
__builtin_sve_svclasta_bf16
q8yq16bq8yq8y
__builtin_sve_svclasta_f16
__builtin_sve_svclasta_f32
__builtin_sve_svclasta_f64
__builtin_sve_svclasta_n_bf16
yq16byq8y
__builtin_sve_svclasta_n_f16
__builtin_sve_svclasta_n_f32
__builtin_sve_svclasta_n_f64
__builtin_sve_svclasta_n_s16
sq16bsq8s
__builtin_sve_svclasta_n_s32
iq16biq4i
__builtin_sve_svclasta_n_s64
Wiq16bWiq2Wi
__builtin_sve_svclasta_n_s8
Scq16bScq16Sc
__builtin_sve_svclasta_n_u16
Usq16bUsq8Us
__builtin_sve_svclasta_n_u32
Uiq16bUiq4Ui
-module-map
__builtin_sve_svclasta_n_u64
UWiq16bUWiq2UWi
__builtin_sve_svclasta_n_u8
Ucq16bUcq16Uc
__builtin_sve_svclasta_s16
__builtin_sve_svclasta_s32
__builtin_sve_svclasta_s64
__builtin_sve_svclasta_s8
__builtin_sve_svclasta_u16
__builtin_sve_svclasta_u32
__builtin_sve_svclasta_u64
__builtin_sve_svclasta_u8
__builtin_sve_svclastb_bf16
__builtin_sve_svclastb_f16
__builtin_sve_svclastb_f32
__builtin_sve_svclastb_f64
__builtin_sve_svclastb_n_bf16
__builtin_sve_svclastb_n_f16
__builtin_sve_svclastb_n_f32
__builtin_sve_svclastb_n_f64
__builtin_sve_svclastb_n_s16
__builtin_sve_svclastb_n_s32
__builtin_sve_svclastb_n_s64
__builtin_sve_svclastb_n_s8
__builtin_sve_svclastb_n_u16
__builtin_sve_svclastb_n_u32
__builtin_sve_svclastb_n_u64
__builtin_sve_svclastb_n_u8
__builtin_sve_svclastb_s16
__builtin_sve_svclastb_s32
__builtin_sve_svclastb_s64
__builtin_sve_svclastb_s8
__builtin_sve_svclastb_u16
__builtin_sve_svclastb_u32
__builtin_sve_svclastb_u64
__builtin_sve_svclastb_u8
__builtin_sve_svcls_s16_m
q8Usq8Usq16bq8s
__builtin_sve_svcls_s16_x
q8Usq16bq8s
__builtin_sve_svcls_s16_z
__builtin_sve_svcls_s32_m
q4Uiq4Uiq16bq4i
__builtin_sve_svcls_s32_x
q4Uiq16bq4i
__builtin_sve_svcls_s32_z
__builtin_sve_svcls_s64_m
q2UWiq2UWiq16bq2Wi
__builtin_sve_svcls_s64_x
q2UWiq16bq2Wi
__builtin_sve_svcls_s64_z
__builtin_sve_svcls_s8_m
q16Ucq16Ucq16bq16Sc
__builtin_sve_svcls_s8_x
q16Ucq16bq16Sc
__builtin_sve_svcls_s8_z
__builtin_sve_svclz_s16_m
__builtin_sve_svclz_s16_x
__builtin_sve_svclz_s16_z
__builtin_sve_svclz_s32_m
__builtin_sve_svclz_s32_x
__builtin_sve_svclz_s32_z
__builtin_sve_svclz_s64_m
__builtin_sve_svclz_s64_x
__builtin_sve_svclz_s64_z
__builtin_sve_svclz_s8_m
__builtin_sve_svclz_s8_x
__builtin_sve_svclz_s8_z
__builtin_sve_svclz_u16_m
q8Usq8Usq16bq8Us
__builtin_sve_svclz_u16_x
q8Usq16bq8Us
__builtin_sve_svclz_u16_z
__builtin_sve_svclz_u32_m
q4Uiq4Uiq16bq4Ui
__builtin_sve_svclz_u32_x
q4Uiq16bq4Ui
__builtin_sve_svclz_u32_z
__builtin_sve_svclz_u64_m
q2UWiq2UWiq16bq2UWi
__builtin_sve_svclz_u64_x
q2UWiq16bq2UWi
__builtin_sve_svclz_u64_z
__builtin_sve_svclz_u8_m
q16Ucq16Ucq16bq16Uc
__builtin_sve_svclz_u8_x
q16Ucq16bq16Uc
__builtin_sve_svclz_u8_z
__builtin_sve_svcmla_f16_m
q8hq16bq8hq8hq8hIUWi
__builtin_sve_svcmla_f16_x
__builtin_sve_svcmla_f16_z
__builtin_sve_svcmla_f32_m
q4fq16bq4fq4fq4fIUWi
__builtin_sve_svcmla_f32_x
__builtin_sve_svcmla_f32_z
__builtin_sve_svcmla_f64_m
q2dq16bq2dq2dq2dIUWi
__builtin_sve_svcmla_f64_x
__builtin_sve_svcmla_f64_z
__builtin_sve_svcmla_lane_f16
q8hq8hq8hq8hIUWiIUWi
__builtin_sve_svcmla_lane_f32
q4fq4fq4fq4fIUWiIUWi
__builtin_sve_svcmla_lane_s16
q8sq8sq8sq8sIUWiIUWi
__builtin_sve_svcmla_lane_s32
q4iq4iq4iq4iIUWiIUWi
__builtin_sve_svcmla_lane_u16
q8Usq8Usq8Usq8UsIUWiIUWi
__builtin_sve_svcmla_lane_u32
q4Uiq4Uiq4Uiq4UiIUWiIUWi
__builtin_sve_svcmla_s16
q8sq8sq8sq8sIUWi
__builtin_sve_svcmla_s32
q4iq4iq4iq4iIUWi
__builtin_sve_svcmla_s64
q2Wiq2Wiq2Wiq2WiIUWi
__builtin_sve_svcmla_s8
q16Scq16Scq16Scq16ScIUWi
__builtin_sve_svcmla_u16
q8Usq8Usq8Usq8UsIUWi
__builtin_sve_svcmla_u32
q4Uiq4Uiq4Uiq4UiIUWi
__builtin_sve_svcmla_u64
q2UWiq2UWiq2UWiq2UWiIUWi
__builtin_sve_svcmla_u8
q16Ucq16Ucq16Ucq16UcIUWi
__builtin_sve_svcmpeq_f16
__builtin_sve_svcmpeq_f32
__builtin_sve_svcmpeq_f64
__builtin_sve_svcmpeq_n_f16
__builtin_sve_svcmpeq_n_f32
__builtin_sve_svcmpeq_n_f64
__builtin_sve_svcmpeq_n_s16
q16bq16bq8ss
__builtin_sve_svcmpeq_n_s32
q16bq16bq4ii
__builtin_sve_svcmpeq_n_s64
q16bq16bq2WiWi
__builtin_sve_svcmpeq_n_s8
q16bq16bq16ScSc
__builtin_sve_svcmpeq_n_u16
q16bq16bq8UsUs
__builtin_sve_svcmpeq_n_u32
q16bq16bq4UiUi
__builtin_sve_svcmpeq_n_u64
q16bq16bq2UWiUWi
__builtin_sve_svcmpeq_n_u8
q16bq16bq16UcUc
__builtin_sve_svcmpeq_s16
q16bq16bq8sq8s
__builtin_sve_svcmpeq_s32
q16bq16bq4iq4i
__builtin_sve_svcmpeq_s64
q16bq16bq2Wiq2Wi
__builtin_sve_svcmpeq_s8
q16bq16bq16Scq16Sc
__builtin_sve_svcmpeq_u16
q16bq16bq8Usq8Us
__builtin_sve_svcmpeq_u32
q16bq16bq4Uiq4Ui
__builtin_sve_svcmpeq_u64
q16bq16bq2UWiq2UWi
__builtin_sve_svcmpeq_u8
q16bq16bq16Ucq16Uc
__builtin_sve_svcmpeq_wide_n_s16
q16bq16bq8sWi
__builtin_sve_svcmpeq_wide_n_s32
q16bq16bq4iWi
__builtin_sve_svcmpeq_wide_n_s8
q16bq16bq16ScWi
__builtin_sve_svcmpeq_wide_s16
q16bq16bq8sq2Wi
__builtin_sve_svcmpeq_wide_s32
q16bq16bq4iq2Wi
__builtin_sve_svcmpeq_wide_s8
q16bq16bq16Scq2Wi
__builtin_sve_svcmpge_f16
__builtin_sve_svcmpge_f32
__builtin_sve_svcmpge_f64
__builtin_sve_svcmpge_n_f16
__builtin_sve_svcmpge_n_f32
__builtin_sve_svcmpge_n_f64
__builtin_sve_svcmpge_n_s16
__builtin_sve_svcmpge_n_s32
__builtin_sve_svcmpge_n_s64
__builtin_sve_svcmpge_n_s8
__builtin_sve_svcmpge_n_u16
__builtin_sve_svcmpge_n_u32
__builtin_sve_svcmpge_n_u64
__builtin_sve_svcmpge_n_u8
__builtin_sve_svcmpge_s16
__builtin_sve_svcmpge_s32
__builtin_sve_svcmpge_s64
__builtin_sve_svcmpge_s8
__builtin_sve_svcmpge_u16
__builtin_sve_svcmpge_u32
__builtin_sve_svcmpge_u64
__builtin_sve_svcmpge_u8
__builtin_sve_svcmpge_wide_n_s16
__builtin_sve_svcmpge_wide_n_s32
__builtin_sve_svcmpge_wide_n_s8
__builtin_sve_svcmpge_wide_n_u16
q16bq16bq8UsUWi
__builtin_sve_svcmpge_wide_n_u32
q16bq16bq4UiUWi
__builtin_sve_svcmpge_wide_n_u8
q16bq16bq16UcUWi
__builtin_sve_svcmpge_wide_s16
__builtin_sve_svcmpge_wide_s32
__builtin_sve_svcmpge_wide_s8
__builtin_sve_svcmpge_wide_u16
q16bq16bq8Usq2UWi
__builtin_sve_svcmpge_wide_u32
q16bq16bq4Uiq2UWi
__builtin_sve_svcmpge_wide_u8
q16bq16bq16Ucq2UWi
__builtin_sve_svcmpgt_f16
__builtin_sve_svcmpgt_f32
__builtin_sve_svcmpgt_f64
__builtin_sve_svcmpgt_n_f16
__builtin_sve_svcmpgt_n_f32
__builtin_sve_svcmpgt_n_f64
__builtin_sve_svcmpgt_n_s16
__builtin_sve_svcmpgt_n_s32
__builtin_sve_svcmpgt_n_s64
__builtin_sve_svcmpgt_n_s8
__builtin_sve_svcmpgt_n_u16
__builtin_sve_svcmpgt_n_u32
__builtin_sve_svcmpgt_n_u64
__builtin_sve_svcmpgt_n_u8
__builtin_sve_svcmpgt_s16
__builtin_sve_svcmpgt_s32
__builtin_sve_svcmpgt_s64
__builtin_sve_svcmpgt_s8
__builtin_sve_svcmpgt_u16
__builtin_sve_svcmpgt_u32
__builtin_sve_svcmpgt_u64
__builtin_sve_svcmpgt_u8
__builtin_sve_svcmpgt_wide_n_s16
__builtin_sve_svcmpgt_wide_n_s32
__builtin_sve_svcmpgt_wide_n_s8
__builtin_sve_svcmpgt_wide_n_u16
__builtin_sve_svcmpgt_wide_n_u32
__builtin_sve_svcmpgt_wide_n_u8
__builtin_sve_svcmpgt_wide_s16
__builtin_sve_svcmpgt_wide_s32
__builtin_sve_svcmpgt_wide_s8
__builtin_sve_svcmpgt_wide_u16
__builtin_sve_svcmpgt_wide_u32
__builtin_sve_svcmpgt_wide_u8
__builtin_sve_svcmple_f16
__builtin_sve_svcmple_f32
__builtin_sve_svcmple_f64
__builtin_sve_svcmple_n_f16
__builtin_sve_svcmple_n_f32
__builtin_sve_svcmple_n_f64
__builtin_sve_svcmple_n_s16
__builtin_sve_svcmple_n_s32
__builtin_sve_svcmple_n_s64
__builtin_sve_svcmple_n_s8
__builtin_sve_svcmple_n_u16
__builtin_sve_svcmple_n_u32
__builtin_sve_svcmple_n_u64
__builtin_sve_svcmple_n_u8
__builtin_sve_svcmple_s16
__builtin_sve_svcmple_s32
__builtin_sve_svcmple_s64
__builtin_sve_svcmple_s8
__builtin_sve_svcmple_u16
__builtin_sve_svcmple_u32
__builtin_sve_svcmple_u64
__builtin_sve_svcmple_u8
__builtin_sve_svcmple_wide_n_s16
__builtin_sve_svcmple_wide_n_s32
__builtin_sve_svcmple_wide_n_s8
__builtin_sve_svcmple_wide_n_u16
__builtin_sve_svcmple_wide_n_u32
__builtin_sve_svcmple_wide_n_u8
__builtin_sve_svcmple_wide_s16
__builtin_sve_svcmple_wide_s32
__builtin_sve_svcmple_wide_s8
__builtin_sve_svcmple_wide_u16
__builtin_sve_svcmple_wide_u32
__builtin_sve_svcmple_wide_u8
__builtin_sve_svcmplt_f16
__builtin_sve_svcmplt_f32
__builtin_sve_svcmplt_f64
__builtin_sve_svcmplt_n_f16
__builtin_sve_svcmplt_n_f32
__builtin_sve_svcmplt_n_f64
__builtin_sve_svcmplt_n_s16
__builtin_sve_svcmplt_n_s32
__builtin_sve_svcmplt_n_s64
__builtin_sve_svcmplt_n_s8
__builtin_sve_svcmplt_n_u16
__builtin_sve_svcmplt_n_u32
__builtin_sve_svcmplt_n_u64
__builtin_sve_svcmplt_n_u8
__builtin_sve_svcmplt_s16
__builtin_sve_svcmplt_s32
__builtin_sve_svcmplt_s64
__builtin_sve_svcmplt_s8
__builtin_sve_svcmplt_u16
__builtin_sve_svcmplt_u32
__builtin_sve_svcmplt_u64
__builtin_sve_svcmplt_u8
__builtin_sve_svcmplt_wide_n_s16
__builtin_sve_svcmplt_wide_n_s32
__builtin_sve_svcmplt_wide_n_s8
__builtin_sve_svcmplt_wide_n_u16
__builtin_sve_svcmplt_wide_n_u32
__builtin_sve_svcmplt_wide_n_u8
__builtin_sve_svcmplt_wide_s16
__builtin_sve_svcmplt_wide_s32
__builtin_sve_svcmplt_wide_s8
__builtin_sve_svcmplt_wide_u16
__builtin_sve_svcmplt_wide_u32
__builtin_sve_svcmplt_wide_u8
__builtin_sve_svcmpne_f16
__builtin_sve_svcmpne_f32
__builtin_sve_svcmpne_f64
__builtin_sve_svcmpne_n_f16
__builtin_sve_svcmpne_n_f32
__builtin_sve_svcmpne_n_f64
__builtin_sve_svcmpne_n_s16
__builtin_sve_svcmpne_n_s32
__builtin_sve_svcmpne_n_s64
__builtin_sve_svcmpne_n_s8
__builtin_sve_svcmpne_n_u16
__builtin_sve_svcmpne_n_u32
__builtin_sve_svcmpne_n_u64
__builtin_sve_svcmpne_n_u8
__builtin_sve_svcmpne_s16
__builtin_sve_svcmpne_s32
__builtin_sve_svcmpne_s64
__builtin_sve_svcmpne_s8
__builtin_sve_svcmpne_u16
__builtin_sve_svcmpne_u32
__builtin_sve_svcmpne_u64
__builtin_sve_svcmpne_u8
__builtin_sve_svcmpne_wide_n_s16
__builtin_sve_svcmpne_wide_n_s32
__builtin_sve_svcmpne_wide_n_s8
__builtin_sve_svcmpne_wide_s16
__builtin_sve_svcmpne_wide_s32
__builtin_sve_svcmpne_wide_s8
__builtin_sve_svcmpuo_f16
__builtin_sve_svcmpuo_f32
__builtin_sve_svcmpuo_f64
__builtin_sve_svcmpuo_n_f16
__builtin_sve_svcmpuo_n_f32
__builtin_sve_svcmpuo_n_f64
__builtin_sve_svcnot_s16_m
__builtin_sve_svcnot_s16_x
__builtin_sve_svcnot_s16_z
__builtin_sve_svcnot_s32_m
__builtin_sve_svcnot_s32_x
__builtin_sve_svcnot_s32_z
__builtin_sve_svcnot_s64_m
__builtin_sve_svcnot_s64_x
__builtin_sve_svcnot_s64_z
__builtin_sve_svcnot_s8_m
__builtin_sve_svcnot_s8_x
__builtin_sve_svcnot_s8_z
__builtin_sve_svcnot_u16_m
__builtin_sve_svcnot_u16_x
__builtin_sve_svcnot_u16_z
__builtin_sve_svcnot_u32_m
__builtin_sve_svcnot_u32_x
__builtin_sve_svcnot_u32_z
__builtin_sve_svcnot_u64_m
__builtin_sve_svcnot_u64_x
__builtin_sve_svcnot_u64_z
__builtin_sve_svcnot_u8_m
__builtin_sve_svcnot_u8_x
__builtin_sve_svcnot_u8_z
__builtin_sve_svcnt_bf16_m
q8Usq8Usq16bq8y
__builtin_sve_svcnt_bf16_x
q8Usq16bq8y
__builtin_sve_svcnt_bf16_z
__builtin_sve_svcnt_f16_m
q8Usq8Usq16bq8h
__builtin_sve_svcnt_f16_x
q8Usq16bq8h
__builtin_sve_svcnt_f16_z
__builtin_sve_svcnt_f32_m
q4Uiq4Uiq16bq4f
__builtin_sve_svcnt_f32_x
q4Uiq16bq4f
__builtin_sve_svcnt_f32_z
__builtin_sve_svcnt_f64_m
q2UWiq2UWiq16bq2d
__builtin_sve_svcnt_f64_x
q2UWiq16bq2d
__builtin_sve_svcnt_f64_z
__builtin_sve_svcnt_s16_m
__builtin_sve_svcnt_s16_x
__builtin_sve_svcnt_s16_z
__builtin_sve_svcnt_s32_m
__builtin_sve_svcnt_s32_x
__builtin_sve_svcnt_s32_z
__builtin_sve_svcnt_s64_m
__builtin_sve_svcnt_s64_x
__builtin_sve_svcnt_s64_z
__builtin_sve_svcnt_s8_m
__builtin_sve_svcnt_s8_x
__builtin_sve_svcnt_s8_z
__builtin_sve_svcnt_u16_m
__builtin_sve_svcnt_u16_x
__builtin_sve_svcnt_u16_z
__builtin_sve_svcnt_u32_m
__builtin_sve_svcnt_u32_x
__builtin_sve_svcnt_u32_z
__builtin_sve_svcnt_u64_m
__builtin_sve_svcnt_u64_x
__builtin_sve_svcnt_u64_z
__builtin_sve_svcnt_u8_m
__builtin_sve_svcnt_u8_x
__builtin_sve_svcnt_u8_z
__builtin_sve_svcntb
UWiv
__builtin_sve_svcntb_pat
UWiIi
__builtin_sve_svcntd
__builtin_sve_svcntd_pat
__builtin_sve_svcnth
__builtin_sve_svcnth_pat
__builtin_sve_svcntp_b16
UWiq16bq16b
__builtin_sve_svcntp_b32
__builtin_sve_svcntp_b64
__builtin_sve_svcntp_b8
__builtin_sve_svcntw
__builtin_sve_svcntw_pat
__builtin_sve_svcompact_f32
__builtin_sve_svcompact_f64
__builtin_sve_svcompact_s32
__builtin_sve_svcompact_s64
__builtin_sve_svcompact_u32
__builtin_sve_svcompact_u64
__builtin_sve_svcreate2_bf16
q16yq8yq8y
__builtin_sve_svcreate2_f16
q16hq8hq8h
__builtin_sve_svcreate2_f32
q8fq4fq4f
__builtin_sve_svcreate2_f64
q4dq2dq2d
__builtin_sve_svcreate2_s16
q16sq8sq8s
__builtin_sve_svcreate2_s32
q8iq4iq4i
__builtin_sve_svcreate2_s64
q4Wiq2Wiq2Wi
__builtin_sve_svcreate2_s8
q32Scq16Scq16Sc
__builtin_sve_svcreate2_u16
q16Usq8Usq8Us
__builtin_sve_svcreate2_u32
q8Uiq4Uiq4Ui
__builtin_sve_svcreate2_u64
q4UWiq2UWiq2UWi
__builtin_sve_svcreate2_u8
q32Ucq16Ucq16Uc
__builtin_sve_svcreate3_bf16
q24yq8yq8yq8y
__builtin_sve_svcreate3_f16
q24hq8hq8hq8h
__builtin_sve_svcreate3_f32
q12fq4fq4fq4f
__builtin_sve_svcreate3_f64
q6dq2dq2dq2d
__builtin_sve_svcreate3_s16
q24sq8sq8sq8s
__builtin_sve_svcreate3_s32
q12iq4iq4iq4i
__builtin_sve_svcreate3_s64
q6Wiq2Wiq2Wiq2Wi
__builtin_sve_svcreate3_s8
q48Scq16Scq16Scq16Sc
__builtin_sve_svcreate3_u16
q24Usq8Usq8Usq8Us
__builtin_sve_svcreate3_u32
q12Uiq4Uiq4Uiq4Ui
__builtin_sve_svcreate3_u64
q6UWiq2UWiq2UWiq2UWi
__builtin_sve_svcreate3_u8
q48Ucq16Ucq16Ucq16Uc
__builtin_sve_svcreate4_bf16
q32yq8yq8yq8yq8y
__builtin_sve_svcreate4_f16
q32hq8hq8hq8hq8h
__builtin_sve_svcreate4_f32
q16fq4fq4fq4fq4f
__builtin_sve_svcreate4_f64
q8dq2dq2dq2dq2d
__builtin_sve_svcreate4_s16
q32sq8sq8sq8sq8s
__builtin_sve_svcreate4_s32
q16iq4iq4iq4iq4i
__builtin_sve_svcreate4_s64
q8Wiq2Wiq2Wiq2Wiq2Wi
__builtin_sve_svcreate4_s8
q64Scq16Scq16Scq16Scq16Sc
__builtin_sve_svcreate4_u16
q32Usq8Usq8Usq8Usq8Us
__builtin_sve_svcreate4_u32
q16Uiq4Uiq4Uiq4Uiq4Ui
__builtin_sve_svcreate4_u64
q8UWiq2UWiq2UWiq2UWiq2UWi
__builtin_sve_svcreate4_u8
q64Ucq16Ucq16Ucq16Ucq16Uc
__builtin_sve_svcvt_bf16_f32_m
q8yq8yq16bq4f
__builtin_sve_svcvt_bf16_f32_x
q8yq16bq4f
__builtin_sve_svcvt_bf16_f32_z
__builtin_sve_svcvt_f16_f32_m
q8hq8hq16bq4f
__builtin_sve_svcvt_f16_f32_x
q8hq16bq4f
__builtin_sve_svcvt_f16_f32_z
__builtin_sve_svcvt_f16_f64_m
q8hq8hq16bq2d
__builtin_sve_svcvt_f16_f64_x
q8hq16bq2d
__builtin_sve_svcvt_f16_f64_z
__builtin_sve_svcvt_f16_s16_m
q8hq8hq16bq8s
__builtin_sve_svcvt_f16_s16_x
q8hq16bq8s
__builtin_sve_svcvt_f16_s16_z
__builtin_sve_svcvt_f16_s32_m
q8hq8hq16bq4i
__builtin_sve_svcvt_f16_s32_x
q8hq16bq4i
__builtin_sve_svcvt_f16_s32_z
__builtin_sve_svcvt_f16_s64_m
q8hq8hq16bq2Wi
__builtin_sve_svcvt_f16_s64_x
q8hq16bq2Wi
__builtin_sve_svcvt_f16_s64_z
__builtin_sve_svcvt_f16_u16_m
q8hq8hq16bq8Us
__builtin_sve_svcvt_f16_u16_x
q8hq16bq8Us
__builtin_sve_svcvt_f16_u16_z
__builtin_sve_svcvt_f16_u32_m
q8hq8hq16bq4Ui
__builtin_sve_svcvt_f16_u32_x
q8hq16bq4Ui
__builtin_sve_svcvt_f16_u32_z
__builtin_sve_svcvt_f16_u64_m
q8hq8hq16bq2UWi
__builtin_sve_svcvt_f16_u64_x
q8hq16bq2UWi
__builtin_sve_svcvt_f16_u64_z
__builtin_sve_svcvt_f32_f16_m
q4fq4fq16bq8h
__builtin_sve_svcvt_f32_f16_x
q4fq16bq8h
__builtin_sve_svcvt_f32_f16_z
__builtin_sve_svcvt_f32_f64_m
q4fq4fq16bq2d
__builtin_sve_svcvt_f32_f64_x
q4fq16bq2d
__builtin_sve_svcvt_f32_f64_z
__builtin_sve_svcvt_f32_s32_m
q4fq4fq16bq4i
__builtin_sve_svcvt_f32_s32_x
q4fq16bq4i
__builtin_sve_svcvt_f32_s32_z
__builtin_sve_svcvt_f32_s64_m
q4fq4fq16bq2Wi
__builtin_sve_svcvt_f32_s64_x
q4fq16bq2Wi
__builtin_sve_svcvt_f32_s64_z
__builtin_sve_svcvt_f32_u32_m
q4fq4fq16bq4Ui
__builtin_sve_svcvt_f32_u32_x
q4fq16bq4Ui
__builtin_sve_svcvt_f32_u32_z
__builtin_sve_svcvt_f32_u64_m
q4fq4fq16bq2UWi
__builtin_sve_svcvt_f32_u64_x
q4fq16bq2UWi
__builtin_sve_svcvt_f32_u64_z
__builtin_sve_svcvt_f64_f16_m
q2dq2dq16bq8h
__builtin_sve_svcvt_f64_f16_x
q2dq16bq8h
__builtin_sve_svcvt_f64_f16_z
__builtin_sve_svcvt_f64_f32_m
q2dq2dq16bq4f
__builtin_sve_svcvt_f64_f32_x
q2dq16bq4f
__builtin_sve_svcvt_f64_f32_z
__builtin_sve_svcvt_f64_s32_m
q2dq2dq16bq4i
__builtin_sve_svcvt_f64_s32_x
q2dq16bq4i
__builtin_sve_svcvt_f64_s32_z
__builtin_sve_svcvt_f64_s64_m
q2dq2dq16bq2Wi
__builtin_sve_svcvt_f64_s64_x
q2dq16bq2Wi
__builtin_sve_svcvt_f64_s64_z
__builtin_sve_svcvt_f64_u32_m
q2dq2dq16bq4Ui
__builtin_sve_svcvt_f64_u32_x
q2dq16bq4Ui
__builtin_sve_svcvt_f64_u32_z
__builtin_sve_svcvt_f64_u64_m
q2dq2dq16bq2UWi
__builtin_sve_svcvt_f64_u64_x
q2dq16bq2UWi
__builtin_sve_svcvt_f64_u64_z
__builtin_sve_svcvt_s16_f16_m
q8sq8sq16bq8h
__builtin_sve_svcvt_s16_f16_x
q8sq16bq8h
__builtin_sve_svcvt_s16_f16_z
__builtin_sve_svcvt_s32_f16_m
q4iq4iq16bq8h
__builtin_sve_svcvt_s32_f16_x
q4iq16bq8h
__builtin_sve_svcvt_s32_f16_z
__builtin_sve_svcvt_s32_f32_m
q4iq4iq16bq4f
__builtin_sve_svcvt_s32_f32_x
q4iq16bq4f
__builtin_sve_svcvt_s32_f32_z
__builtin_sve_svcvt_s32_f64_m
q4iq4iq16bq2d
__builtin_sve_svcvt_s32_f64_x
q4iq16bq2d
__builtin_sve_svcvt_s32_f64_z
__builtin_sve_svcvt_s64_f16_m
q2Wiq2Wiq16bq8h
__builtin_sve_svcvt_s64_f16_x
q2Wiq16bq8h
__builtin_sve_svcvt_s64_f16_z
__builtin_sve_svcvt_s64_f32_m
q2Wiq2Wiq16bq4f
__builtin_sve_svcvt_s64_f32_x
q2Wiq16bq4f
__builtin_sve_svcvt_s64_f32_z
__builtin_sve_svcvt_s64_f64_m
q2Wiq2Wiq16bq2d
__builtin_sve_svcvt_s64_f64_x
q2Wiq16bq2d
__builtin_sve_svcvt_s64_f64_z
__builtin_sve_svcvt_u16_f16_m
__builtin_sve_svcvt_u16_f16_x
__builtin_sve_svcvt_u16_f16_z
__builtin_sve_svcvt_u32_f16_m
q4Uiq4Uiq16bq8h
__builtin_sve_svcvt_u32_f16_x
q4Uiq16bq8h
__builtin_sve_svcvt_u32_f16_z
__builtin_sve_svcvt_u32_f32_m
__builtin_sve_svcvt_u32_f32_x
__builtin_sve_svcvt_u32_f32_z
__builtin_sve_svcvt_u32_f64_m
q4Uiq4Uiq16bq2d
__builtin_sve_svcvt_u32_f64_x
q4Uiq16bq2d
__builtin_sve_svcvt_u32_f64_z
__builtin_sve_svcvt_u64_f16_m
q2UWiq2UWiq16bq8h
__builtin_sve_svcvt_u64_f16_x
q2UWiq16bq8h
__builtin_sve_svcvt_u64_f16_z
__builtin_sve_svcvt_u64_f32_m
q2UWiq2UWiq16bq4f
__builtin_sve_svcvt_u64_f32_x
q2UWiq16bq4f
__builtin_sve_svcvt_u64_f32_z
__builtin_sve_svcvt_u64_f64_m
__builtin_sve_svcvt_u64_f64_x
__builtin_sve_svcvt_u64_f64_z
__builtin_sve_svcvtlt_f32_f16_m
__builtin_sve_svcvtlt_f32_f16_x
__builtin_sve_svcvtlt_f64_f32_m
__builtin_sve_svcvtlt_f64_f32_x
__builtin_sve_svcvtnt_bf16_f32_m
__builtin_sve_svcvtnt_f16_f32_m
__builtin_sve_svcvtnt_f32_f64_m
__builtin_sve_svcvtx_f32_f64_m
__builtin_sve_svcvtx_f32_f64_x
__builtin_sve_svcvtx_f32_f64_z
__builtin_sve_svcvtxnt_f32_f64_m
__builtin_sve_svdiv_f16_m
__builtin_sve_svdiv_f16_x
__builtin_sve_svdiv_f16_z
__builtin_sve_svdiv_f32_m
__builtin_sve_svdiv_f32_x
__builtin_sve_svdiv_f32_z
__builtin_sve_svdiv_f64_m
__builtin_sve_svdiv_f64_x
__builtin_sve_svdiv_f64_z
__builtin_sve_svdiv_n_f16_m
__builtin_sve_svdiv_n_f16_x
__builtin_sve_svdiv_n_f16_z
__builtin_sve_svdiv_n_f32_m
__builtin_sve_svdiv_n_f32_x
__builtin_sve_svdiv_n_f32_z
__builtin_sve_svdiv_n_f64_m
__builtin_sve_svdiv_n_f64_x
__builtin_sve_svdiv_n_f64_z
__builtin_sve_svdiv_n_s32_m
__builtin_sve_svdiv_n_s32_x
__builtin_sve_svdiv_n_s32_z
__builtin_sve_svdiv_n_s64_m
__builtin_sve_svdiv_n_s64_x
__builtin_sve_svdiv_n_s64_z
__builtin_sve_svdiv_n_u32_m
__builtin_sve_svdiv_n_u32_x
__builtin_sve_svdiv_n_u32_z
__builtin_sve_svdiv_n_u64_m
__builtin_sve_svdiv_n_u64_x
__builtin_sve_svdiv_n_u64_z
__builtin_sve_svdiv_s32_m
__builtin_sve_svdiv_s32_x
__builtin_sve_svdiv_s32_z
__builtin_sve_svdiv_s64_m
__builtin_sve_svdiv_s64_x
__builtin_sve_svdiv_s64_z
__builtin_sve_svdiv_u32_m
__builtin_sve_svdiv_u32_x
__builtin_sve_svdiv_u32_z
__builtin_sve_svdiv_u64_m
__builtin_sve_svdiv_u64_x
__builtin_sve_svdiv_u64_z
__builtin_sve_svdivr_f16_m
__builtin_sve_svdivr_f16_x
__builtin_sve_svdivr_f16_z
__builtin_sve_svdivr_f32_m
__builtin_sve_svdivr_f32_x
__builtin_sve_svdivr_f32_z
__builtin_sve_svdivr_f64_m
__builtin_sve_svdivr_f64_x
__builtin_sve_svdivr_f64_z
__builtin_sve_svdivr_n_f16_m
__builtin_sve_svdivr_n_f16_x
__builtin_sve_svdivr_n_f16_z
__builtin_sve_svdivr_n_f32_m
__builtin_sve_svdivr_n_f32_x
__builtin_sve_svdivr_n_f32_z
__builtin_sve_svdivr_n_f64_m
__builtin_sve_svdivr_n_f64_x
__builtin_sve_svdivr_n_f64_z
__builtin_sve_svdivr_n_s32_m
__builtin_sve_svdivr_n_s32_x
__builtin_sve_svdivr_n_s32_z
__builtin_sve_svdivr_n_s64_m
__builtin_sve_svdivr_n_s64_x
__builtin_sve_svdivr_n_s64_z
__builtin_sve_svdivr_n_u32_m
__builtin_sve_svdivr_n_u32_x
__builtin_sve_svdivr_n_u32_z
__builtin_sve_svdivr_n_u64_m
__builtin_sve_svdivr_n_u64_x
__builtin_sve_svdivr_n_u64_z
__builtin_sve_svdivr_s32_m
__builtin_sve_svdivr_s32_x
__builtin_sve_svdivr_s32_z
__builtin_sve_svdivr_s64_m
__builtin_sve_svdivr_s64_x
__builtin_sve_svdivr_s64_z
__builtin_sve_svdivr_u32_m
__builtin_sve_svdivr_u32_x
__builtin_sve_svdivr_u32_z
__builtin_sve_svdivr_u64_m
__builtin_sve_svdivr_u64_x
__builtin_sve_svdivr_u64_z
__builtin_sve_svdot_lane_s32
__builtin_sve_svdot_lane_s64
__builtin_sve_svdot_lane_u32
q4Uiq4Uiq16Ucq16UcIUWi
__builtin_sve_svdot_lane_u64
q2UWiq2UWiq8Usq8UsIUWi
__builtin_sve_svdot_n_s32
q4iq4iq16ScSc
__builtin_sve_svdot_n_s64
q2Wiq2Wiq8ss
__builtin_sve_svdot_n_u32
q4Uiq4Uiq16UcUc
__builtin_sve_svdot_n_u64
q2UWiq2UWiq8UsUs
__builtin_sve_svdot_s32
q4iq4iq16Scq16Sc
__builtin_sve_svdot_s64
q2Wiq2Wiq8sq8s
__builtin_sve_svdot_u32
q4Uiq4Uiq16Ucq16Uc
__builtin_sve_svdot_u64
q2UWiq2UWiq8Usq8Us
__builtin_sve_svdup_lane_bf16
q8yq8yUs
__builtin_sve_svdup_lane_f16
q8hq8hUs
__builtin_sve_svdup_lane_f32
q4fq4fUi
__builtin_sve_svdup_lane_f64
q2dq2dUWi
__builtin_sve_svdup_lane_s16
q8sq8sUs
__builtin_sve_svdup_lane_s32
q4iq4iUi
__builtin_sve_svdup_lane_s64
q2Wiq2WiUWi
__builtin_sve_svdup_lane_s8
q16Scq16ScUc
__builtin_sve_svdup_lane_u16
__builtin_sve_svdup_lane_u32
__builtin_sve_svdup_lane_u64
__builtin_sve_svdup_lane_u8
__builtin_sve_svdup_n_b16
q16bb
__builtin_sve_svdup_n_b32
__builtin_sve_svdup_n_b64
__builtin_sve_svdup_n_b8
__builtin_sve_svdup_n_bf16
q8yy
__builtin_sve_svdup_n_bf16_m
q8yq8yq16by
__builtin_sve_svdup_n_bf16_x
q8yq16by
__builtin_sve_svdup_n_bf16_z
__builtin_sve_svdup_n_f16
q8hh
__builtin_sve_svdup_n_f16_m
q8hq8hq16bh
__builtin_sve_svdup_n_f16_x
q8hq16bh
__builtin_sve_svdup_n_f16_z
__builtin_sve_svdup_n_f32
q4ff
__builtin_sve_svdup_n_f32_m
q4fq4fq16bf
__builtin_sve_svdup_n_f32_x
q4fq16bf
__builtin_sve_svdup_n_f32_z
__builtin_sve_svdup_n_f64
q2dd
__builtin_sve_svdup_n_f64_m
q2dq2dq16bd
__builtin_sve_svdup_n_f64_x
q2dq16bd
__builtin_sve_svdup_n_f64_z
__builtin_sve_svdup_n_s16
q8ss
__builtin_sve_svdup_n_s16_m
q8sq8sq16bs
__builtin_sve_svdup_n_s16_x
q8sq16bs
__builtin_sve_svdup_n_s16_z
__builtin_sve_svdup_n_s32
q4ii
__builtin_sve_svdup_n_s32_m
q4iq4iq16bi
__builtin_sve_svdup_n_s32_x
q4iq16bi
__builtin_sve_svdup_n_s32_z
__builtin_sve_svdup_n_s64
q2WiWi
__builtin_sve_svdup_n_s64_m
q2Wiq2Wiq16bWi
__builtin_sve_svdup_n_s64_x
q2Wiq16bWi
__builtin_sve_svdup_n_s64_z
__builtin_sve_svdup_n_s8
q16ScSc
__builtin_sve_svdup_n_s8_m
q16Scq16Scq16bSc
__builtin_sve_svdup_n_s8_x
q16Scq16bSc
__builtin_sve_svdup_n_s8_z
__builtin_sve_svdup_n_u16
q8UsUs
__builtin_sve_svdup_n_u16_m
q8Usq8Usq16bUs
__builtin_sve_svdup_n_u16_x
q8Usq16bUs
__builtin_sve_svdup_n_u16_z
__builtin_sve_svdup_n_u32
q4UiUi
__builtin_sve_svdup_n_u32_m
q4Uiq4Uiq16bUi
__builtin_sve_svdup_n_u32_x
q4Uiq16bUi
__builtin_sve_svdup_n_u32_z
__builtin_sve_svdup_n_u64
q2UWiUWi
__builtin_sve_svdup_n_u64_m
q2UWiq2UWiq16bUWi
__builtin_sve_svdup_n_u64_x
q2UWiq16bUWi
__builtin_sve_svdup_n_u64_z
__builtin_sve_svdup_n_u8
q16UcUc
__builtin_sve_svdup_n_u8_m
q16Ucq16Ucq16bUc
__builtin_sve_svdup_n_u8_x
q16Ucq16bUc
__builtin_sve_svdup_n_u8_z
__builtin_sve_svdupq_lane_bf16
q8yq8yUWi
__builtin_sve_svdupq_lane_f16
q8hq8hUWi
__builtin_sve_svdupq_lane_f32
q4fq4fUWi
__builtin_sve_svdupq_lane_f64
__builtin_sve_svdupq_lane_s16
q8sq8sUWi
__builtin_sve_svdupq_lane_s32
q4iq4iUWi
__builtin_sve_svdupq_lane_s64
__builtin_sve_svdupq_lane_s8
q16Scq16ScUWi
__builtin_sve_svdupq_lane_u16
q8Usq8UsUWi
__builtin_sve_svdupq_lane_u32
q4Uiq4UiUWi
__builtin_sve_svdupq_lane_u64
__builtin_sve_svdupq_lane_u8
q16Ucq16UcUWi
__builtin_sve_svdupq_n_b16
q16bbbbbbbbb
__builtin_sve_svdupq_n_b32
q16bbbbb
__builtin_sve_svdupq_n_b64
q16bbb
__builtin_sve_svdupq_n_b8
q16bbbbbbbbbbbbbbbbb
__builtin_sve_svdupq_n_bf16
q8yyyyyyyyy
__builtin_sve_svdupq_n_f16
q8hhhhhhhhh
__builtin_sve_svdupq_n_f32
q4fffff
__builtin_sve_svdupq_n_f64
q2ddd
__builtin_sve_svdupq_n_s16
q8sssssssss
__builtin_sve_svdupq_n_s32
q4iiiii
__builtin_sve_svdupq_n_s64
q2WiWiWi
__builtin_sve_svdupq_n_s8
q16ScScScScScScScScScScScScScScScScSc
__builtin_sve_svdupq_n_u16
q8UsUsUsUsUsUsUsUsUs
__builtin_sve_svdupq_n_u32
q4UiUiUiUiUi
__builtin_sve_svdupq_n_u64
q2UWiUWiUWi
__builtin_sve_svdupq_n_u8
q16UcUcUcUcUcUcUcUcUcUcUcUcUcUcUcUcUc
__builtin_sve_sveor3_n_s16
__builtin_sve_sveor3_n_s32
__builtin_sve_sveor3_n_s64
__builtin_sve_sveor3_n_s8
__builtin_sve_sveor3_n_u16
__builtin_sve_sveor3_n_u32
__builtin_sve_sveor3_n_u64
__builtin_sve_sveor3_n_u8
__builtin_sve_sveor3_s16
__builtin_sve_sveor3_s32
__builtin_sve_sveor3_s64
__builtin_sve_sveor3_s8
__builtin_sve_sveor3_u16
__builtin_sve_sveor3_u32
__builtin_sve_sveor3_u64
__builtin_sve_sveor3_u8
__builtin_sve_sveor_b_z
__builtin_sve_sveor_n_s16_m
__builtin_sve_sveor_n_s16_x
__builtin_sve_sveor_n_s16_z
__builtin_sve_sveor_n_s32_m
__builtin_sve_sveor_n_s32_x
__builtin_sve_sveor_n_s32_z
__builtin_sve_sveor_n_s64_m
__builtin_sve_sveor_n_s64_x
__builtin_sve_sveor_n_s64_z
__builtin_sve_sveor_n_s8_m
__builtin_sve_sveor_n_s8_x
__builtin_sve_sveor_n_s8_z
__builtin_sve_sveor_n_u16_m
__builtin_sve_sveor_n_u16_x
__builtin_sve_sveor_n_u16_z
__builtin_sve_sveor_n_u32_m
__builtin_sve_sveor_n_u32_x
__builtin_sve_sveor_n_u32_z
__builtin_sve_sveor_n_u64_m
__builtin_sve_sveor_n_u64_x
__builtin_sve_sveor_n_u64_z
__builtin_sve_sveor_n_u8_m
__builtin_sve_sveor_n_u8_x
__builtin_sve_sveor_n_u8_z
__builtin_sve_sveor_s16_m
__builtin_sve_sveor_s16_x
__builtin_sve_sveor_s16_z
__builtin_sve_sveor_s32_m
__builtin_sve_sveor_s32_x
__builtin_sve_sveor_s32_z
__builtin_sve_sveor_s64_m
__builtin_sve_sveor_s64_x
__builtin_sve_sveor_s64_z
__builtin_sve_sveor_s8_m
__builtin_sve_sveor_s8_x
__builtin_sve_sveor_s8_z
__builtin_sve_sveor_u16_m
__builtin_sve_sveor_u16_x
__builtin_sve_sveor_u16_z
__builtin_sve_sveor_u32_m
__builtin_sve_sveor_u32_x
__builtin_sve_sveor_u32_z
__builtin_sve_sveor_u64_m
__builtin_sve_sveor_u64_x
__builtin_sve_sveor_u64_z
__builtin_sve_sveor_u8_m
__builtin_sve_sveor_u8_x
__builtin_sve_sveor_u8_z
__builtin_sve_sveorbt_n_s16
__builtin_sve_sveorbt_n_s32
__builtin_sve_sveorbt_n_s64
__builtin_sve_sveorbt_n_s8
__builtin_sve_sveorbt_n_u16
__builtin_sve_sveorbt_n_u32
__builtin_sve_sveorbt_n_u64
__builtin_sve_sveorbt_n_u8
__builtin_sve_sveorbt_s16
__builtin_sve_sveorbt_s32
__builtin_sve_sveorbt_s64
__builtin_sve_sveorbt_s8
__builtin_sve_sveorbt_u16
__builtin_sve_sveorbt_u32
__builtin_sve_sveorbt_u64
__builtin_sve_sveorbt_u8
__builtin_sve_sveortb_n_s16
__builtin_sve_sveortb_n_s32
__builtin_sve_sveortb_n_s64
__builtin_sve_sveortb_n_s8
__builtin_sve_sveortb_n_u16
__builtin_sve_sveortb_n_u32
__builtin_sve_sveortb_n_u64
__builtin_sve_sveortb_n_u8
__builtin_sve_sveortb_s16
__builtin_sve_sveortb_s32
__builtin_sve_sveortb_s64
__builtin_sve_sveortb_s8
__builtin_sve_sveortb_u16
__builtin_sve_sveortb_u32
__builtin_sve_sveortb_u64
__builtin_sve_sveortb_u8
__builtin_sve_sveorv_s16
__builtin_sve_sveorv_s32
__builtin_sve_sveorv_s64
__builtin_sve_sveorv_s8
__builtin_sve_sveorv_u16
__builtin_sve_sveorv_u32
__builtin_sve_sveorv_u64
__builtin_sve_sveorv_u8
__builtin_sve_svexpa_f16
q8hq8Us
__builtin_sve_svexpa_f32
q4fq4Ui
__builtin_sve_svexpa_f64
q2dq2UWi
__builtin_sve_svext_bf16
q8yq8yq8yIUWi
__builtin_sve_svext_f16
q8hq8hq8hIUWi
__builtin_sve_svext_f32
q4fq4fq4fIUWi
__builtin_sve_svext_f64
q2dq2dq2dIUWi
__builtin_sve_svext_s16
__builtin_sve_svext_s32
__builtin_sve_svext_s64
__builtin_sve_svext_s8
__builtin_sve_svext_u16
__builtin_sve_svext_u32
__builtin_sve_svext_u64
__builtin_sve_svext_u8
__builtin_sve_svextb_s16_m
__builtin_sve_svextb_s16_x
__builtin_sve_svextb_s16_z
__builtin_sve_svextb_s32_m
__builtin_sve_svextb_s32_x
__builtin_sve_svextb_s32_z
__builtin_sve_svextb_s64_m
__builtin_sve_svextb_s64_x
__builtin_sve_svextb_s64_z
__builtin_sve_svextb_u16_m
__builtin_sve_svextb_u16_x
__builtin_sve_svextb_u16_z
__builtin_sve_svextb_u32_m
-analyzer-checker-option-help-developer
__builtin_sve_svextb_u32_x
__builtin_sve_svextb_u32_z
__builtin_sve_svextb_u64_m
__builtin_sve_svextb_u64_x
__builtin_sve_svextb_u64_z
__builtin_sve_svexth_s32_m
__builtin_sve_svexth_s32_x
__builtin_sve_svexth_s32_z
__builtin_sve_svexth_s64_m
__builtin_sve_svexth_s64_x
__builtin_sve_svexth_s64_z
__builtin_sve_svexth_u32_m
__builtin_sve_svexth_u32_x
__builtin_sve_svexth_u32_z
__builtin_sve_svexth_u64_m
__builtin_sve_svexth_u64_x
__builtin_sve_svexth_u64_z
__builtin_sve_svextw_s64_m
__builtin_sve_svextw_s64_x
__builtin_sve_svextw_s64_z
__builtin_sve_svextw_u64_m
__builtin_sve_svextw_u64_x
__builtin_sve_svextw_u64_z
__builtin_sve_svget2_bf16
q8yq16yIUWi
__builtin_sve_svget2_f16
q8hq16hIUWi
__builtin_sve_svget2_f32
q4fq8fIUWi
__builtin_sve_svget2_f64
q2dq4dIUWi
__builtin_sve_svget2_s16
q8sq16sIUWi
__builtin_sve_svget2_s32
q4iq8iIUWi
__builtin_sve_svget2_s64
q2Wiq4WiIUWi
__builtin_sve_svget2_s8
q16Scq32ScIUWi
__builtin_sve_svget2_u16
q8Usq16UsIUWi
__builtin_sve_svget2_u32
q4Uiq8UiIUWi
__builtin_sve_svget2_u64
q2UWiq4UWiIUWi
__builtin_sve_svget2_u8
q16Ucq32UcIUWi
__builtin_sve_svget3_bf16
q8yq24yIUWi
__builtin_sve_svget3_f16
q8hq24hIUWi
__builtin_sve_svget3_f32
q4fq12fIUWi
__builtin_sve_svget3_f64
q2dq6dIUWi
__builtin_sve_svget3_s16
q8sq24sIUWi
__builtin_sve_svget3_s32
q4iq12iIUWi
__builtin_sve_svget3_s64
q2Wiq6WiIUWi
__builtin_sve_svget3_s8
q16Scq48ScIUWi
__builtin_sve_svget3_u16
q8Usq24UsIUWi
__builtin_sve_svget3_u32
q4Uiq12UiIUWi
__builtin_sve_svget3_u64
q2UWiq6UWiIUWi
__builtin_sve_svget3_u8
q16Ucq48UcIUWi
__builtin_sve_svget4_bf16
q8yq32yIUWi
__builtin_sve_svget4_f16
q8hq32hIUWi
__builtin_sve_svget4_f32
q4fq16fIUWi
__builtin_sve_svget4_f64
q2dq8dIUWi
__builtin_sve_svget4_s16
q8sq32sIUWi
__builtin_sve_svget4_s32
q4iq16iIUWi
__builtin_sve_svget4_s64
q2Wiq8WiIUWi
__builtin_sve_svget4_s8
q16Scq64ScIUWi
__builtin_sve_svget4_u16
q8Usq32UsIUWi
__builtin_sve_svget4_u32
q4Uiq16UiIUWi
__builtin_sve_svget4_u64
q2UWiq8UWiIUWi
__builtin_sve_svget4_u8
q16Ucq64UcIUWi
__builtin_sve_svhadd_n_s16_m
__builtin_sve_svhadd_n_s16_x
__builtin_sve_svhadd_n_s16_z
__builtin_sve_svhadd_n_s32_m
__builtin_sve_svhadd_n_s32_x
__builtin_sve_svhadd_n_s32_z
__builtin_sve_svhadd_n_s64_m
__builtin_sve_svhadd_n_s64_x
__builtin_sve_svhadd_n_s64_z
__builtin_sve_svhadd_n_s8_m
__builtin_sve_svhadd_n_s8_x
__builtin_sve_svhadd_n_s8_z
__builtin_sve_svhadd_n_u16_m
__builtin_sve_svhadd_n_u16_x
__builtin_sve_svhadd_n_u16_z
__builtin_sve_svhadd_n_u32_m
__builtin_sve_svhadd_n_u32_x
__builtin_sve_svhadd_n_u32_z
__builtin_sve_svhadd_n_u64_m
__builtin_sve_svhadd_n_u64_x
__builtin_sve_svhadd_n_u64_z
__builtin_sve_svhadd_n_u8_m
__builtin_sve_svhadd_n_u8_x
__builtin_sve_svhadd_n_u8_z
__builtin_sve_svhadd_s16_m
__builtin_sve_svhadd_s16_x
__builtin_sve_svhadd_s16_z
__builtin_sve_svhadd_s32_m
__builtin_sve_svhadd_s32_x
__builtin_sve_svhadd_s32_z
__builtin_sve_svhadd_s64_m
__builtin_sve_svhadd_s64_x
__builtin_sve_svhadd_s64_z
__builtin_sve_svhadd_s8_m
__builtin_sve_svhadd_s8_x
__builtin_sve_svhadd_s8_z
__builtin_sve_svhadd_u16_m
__builtin_sve_svhadd_u16_x
__builtin_sve_svhadd_u16_z
__builtin_sve_svhadd_u32_m
__builtin_sve_svhadd_u32_x
__builtin_sve_svhadd_u32_z
__builtin_sve_svhadd_u64_m
__builtin_sve_svhadd_u64_x
__builtin_sve_svhadd_u64_z
__builtin_sve_svhadd_u8_m
__builtin_sve_svhadd_u8_x
__builtin_sve_svhadd_u8_z
__builtin_sve_svhistcnt_s32_z
q4Uiq16bq4iq4i
__builtin_sve_svhistcnt_s64_z
q2UWiq16bq2Wiq2Wi
__builtin_sve_svhistcnt_u32_z
__builtin_sve_svhistcnt_u64_z
__builtin_sve_svhistseg_s8
q16Ucq16Scq16Sc
__builtin_sve_svhistseg_u8
__builtin_sve_svhsub_n_s16_m
__builtin_sve_svhsub_n_s16_x
__builtin_sve_svhsub_n_s16_z
__builtin_sve_svhsub_n_s32_m
__builtin_sve_svhsub_n_s32_x
__builtin_sve_svhsub_n_s32_z
__builtin_sve_svhsub_n_s64_m
__builtin_sve_svhsub_n_s64_x
__builtin_sve_svhsub_n_s64_z
__builtin_sve_svhsub_n_s8_m
__builtin_sve_svhsub_n_s8_x
__builtin_sve_svhsub_n_s8_z
__builtin_sve_svhsub_n_u16_m
__builtin_sve_svhsub_n_u16_x
__builtin_sve_svhsub_n_u16_z
__builtin_sve_svhsub_n_u32_m
__builtin_sve_svhsub_n_u32_x
__builtin_sve_svhsub_n_u32_z
__builtin_sve_svhsub_n_u64_m
__builtin_sve_svhsub_n_u64_x
__builtin_sve_svhsub_n_u64_z
__builtin_sve_svhsub_n_u8_m
__builtin_sve_svhsub_n_u8_x
__builtin_sve_svhsub_n_u8_z
__builtin_sve_svhsub_s16_m
__builtin_sve_svhsub_s16_x
__builtin_sve_svhsub_s16_z
__builtin_sve_svhsub_s32_m
__builtin_sve_svhsub_s32_x
__builtin_sve_svhsub_s32_z
__builtin_sve_svhsub_s64_m
__builtin_sve_svhsub_s64_x
__builtin_sve_svhsub_s64_z
__builtin_sve_svhsub_s8_m
__builtin_sve_svhsub_s8_x
__builtin_sve_svhsub_s8_z
__builtin_sve_svhsub_u16_m
__builtin_sve_svhsub_u16_x
__builtin_sve_svhsub_u16_z
__builtin_sve_svhsub_u32_m
__builtin_sve_svhsub_u32_x
__builtin_sve_svhsub_u32_z
__builtin_sve_svhsub_u64_m
__builtin_sve_svhsub_u64_x
__builtin_sve_svhsub_u64_z
__builtin_sve_svhsub_u8_m
__builtin_sve_svhsub_u8_x
__builtin_sve_svhsub_u8_z
__builtin_sve_svhsubr_n_s16_m
__builtin_sve_svhsubr_n_s16_x
__builtin_sve_svhsubr_n_s16_z
__builtin_sve_svhsubr_n_s32_m
__builtin_sve_svhsubr_n_s32_x
__builtin_sve_svhsubr_n_s32_z
__builtin_sve_svhsubr_n_s64_m
__builtin_sve_svhsubr_n_s64_x
__builtin_sve_svhsubr_n_s64_z
__builtin_sve_svhsubr_n_s8_m
__builtin_sve_svhsubr_n_s8_x
__builtin_sve_svhsubr_n_s8_z
__builtin_sve_svhsubr_n_u16_m
__builtin_sve_svhsubr_n_u16_x
__builtin_sve_svhsubr_n_u16_z
__builtin_sve_svhsubr_n_u32_m
__builtin_sve_svhsubr_n_u32_x
__builtin_sve_svhsubr_n_u32_z
__builtin_sve_svhsubr_n_u64_m
__builtin_sve_svhsubr_n_u64_x
__builtin_sve_svhsubr_n_u64_z
__builtin_sve_svhsubr_n_u8_m
__builtin_sve_svhsubr_n_u8_x
__builtin_sve_svhsubr_n_u8_z
__builtin_sve_svhsubr_s16_m
__builtin_sve_svhsubr_s16_x
__builtin_sve_svhsubr_s16_z
__builtin_sve_svhsubr_s32_m
__builtin_sve_svhsubr_s32_x
__builtin_sve_svhsubr_s32_z
__builtin_sve_svhsubr_s64_m
__builtin_sve_svhsubr_s64_x
__builtin_sve_svhsubr_s64_z
__builtin_sve_svhsubr_s8_m
__builtin_sve_svhsubr_s8_x
__builtin_sve_svhsubr_s8_z
__builtin_sve_svhsubr_u16_m
__builtin_sve_svhsubr_u16_x
__builtin_sve_svhsubr_u16_z
__builtin_sve_svhsubr_u32_m
__builtin_sve_svhsubr_u32_x
__builtin_sve_svhsubr_u32_z
__builtin_sve_svhsubr_u64_m
__builtin_sve_svhsubr_u64_x
__builtin_sve_svhsubr_u64_z
__builtin_sve_svhsubr_u8_m
__builtin_sve_svhsubr_u8_x
__builtin_sve_svhsubr_u8_z
__builtin_sve_svindex_s16
q8sss
__builtin_sve_svindex_s32
q4iii
__builtin_sve_svindex_s64
__builtin_sve_svindex_s8
q16ScScSc
__builtin_sve_svindex_u16
q8UsUsUs
__builtin_sve_svindex_u32
q4UiUiUi
__builtin_sve_svindex_u64
__builtin_sve_svindex_u8
q16UcUcUc
__builtin_sve_svinsr_n_bf16
q8yq8yy
__builtin_sve_svinsr_n_f16
q8hq8hh
__builtin_sve_svinsr_n_f32
q4fq4ff
__builtin_sve_svinsr_n_f64
q2dq2dd
__builtin_sve_svinsr_n_s16
q8sq8ss
__builtin_sve_svinsr_n_s32
q4iq4ii
__builtin_sve_svinsr_n_s64
q2Wiq2WiWi
__builtin_sve_svinsr_n_s8
q16Scq16ScSc
__builtin_sve_svinsr_n_u16
__builtin_sve_svinsr_n_u32
__builtin_sve_svinsr_n_u64
__builtin_sve_svinsr_n_u8
__builtin_sve_svlasta_bf16
yq16bq8y
__builtin_sve_svlasta_f16
__builtin_sve_svlasta_f32
__builtin_sve_svlasta_f64
__builtin_sve_svlasta_s16
__builtin_sve_svlasta_s32
__builtin_sve_svlasta_s64
__builtin_sve_svlasta_s8
__builtin_sve_svlasta_u16
__builtin_sve_svlasta_u32
__builtin_sve_svlasta_u64
__builtin_sve_svlasta_u8
__builtin_sve_svlastb_bf16
__builtin_sve_svlastb_f16
__builtin_sve_svlastb_f32
__builtin_sve_svlastb_f64
__builtin_sve_svlastb_s16
__builtin_sve_svlastb_s32
__builtin_sve_svlastb_s64
__builtin_sve_svlastb_s8
__builtin_sve_svlastb_u16
__builtin_sve_svlastb_u32
__builtin_sve_svlastb_u64
__builtin_sve_svlastb_u8
__builtin_sve_svld1_bf16
q8yq16byC*
__builtin_sve_svld1_f16
q8hq16bhC*
__builtin_sve_svld1_f32
q4fq16bfC*
__builtin_sve_svld1_f64
q2dq16bdC*
__builtin_sve_svld1_gather_s32index_f32
q4fq16bfC*q4i
__builtin_sve_svld1_gather_s32index_s32
q4iq16bSiC*q4i
__builtin_sve_svld1_gather_s32index_u32
q4Uiq16bUiC*q4i
__builtin_sve_svld1_gather_s32offset_f32
__builtin_sve_svld1_gather_s32offset_s32
__builtin_sve_svld1_gather_s32offset_u32
__builtin_sve_svld1_gather_s64index_f64
q2dq16bdC*q2Wi
__builtin_sve_svld1_gather_s64index_s64
q2Wiq16bSWiC*q2Wi
__builtin_sve_svld1_gather_s64index_u64
q2UWiq16bUWiC*q2Wi
__builtin_sve_svld1_gather_s64offset_f64
__builtin_sve_svld1_gather_s64offset_s64
__builtin_sve_svld1_gather_s64offset_u64
__builtin_sve_svld1_gather_u32base_f32
__builtin_sve_svld1_gather_u32base_index_f32
q4fq16bq4UiWi
__builtin_sve_svld1_gather_u32base_index_s32
q4iq16bq4UiWi
__builtin_sve_svld1_gather_u32base_index_u32
q4Uiq16bq4UiWi
__builtin_sve_svld1_gather_u32base_offset_f32
__builtin_sve_svld1_gather_u32base_offset_s32
__builtin_sve_svld1_gather_u32base_offset_u32
__builtin_sve_svld1_gather_u32base_s32
q4iq16bq4Ui
__builtin_sve_svld1_gather_u32base_u32
__builtin_sve_svld1_gather_u32index_f32
q4fq16bfC*q4Ui
__builtin_sve_svld1_gather_u32index_s32
q4iq16bSiC*q4Ui
__builtin_sve_svld1_gather_u32index_u32
q4Uiq16bUiC*q4Ui
__builtin_sve_svld1_gather_u32offset_f32
__builtin_sve_svld1_gather_u32offset_s32
__builtin_sve_svld1_gather_u32offset_u32
__builtin_sve_svld1_gather_u64base_f64
__builtin_sve_svld1_gather_u64base_index_f64
q2dq16bq2UWiWi
__builtin_sve_svld1_gather_u64base_index_s64
q2Wiq16bq2UWiWi
__builtin_sve_svld1_gather_u64base_index_u64
q2UWiq16bq2UWiWi
__builtin_sve_svld1_gather_u64base_offset_f64
__builtin_sve_svld1_gather_u64base_offset_s64
__builtin_sve_svld1_gather_u64base_offset_u64
__builtin_sve_svld1_gather_u64base_s64
q2Wiq16bq2UWi
__builtin_sve_svld1_gather_u64base_u64
__builtin_sve_svld1_gather_u64index_f64
q2dq16bdC*q2UWi
__builtin_sve_svld1_gather_u64index_s64
q2Wiq16bSWiC*q2UWi
__builtin_sve_svld1_gather_u64index_u64
q2UWiq16bUWiC*q2UWi
__builtin_sve_svld1_gather_u64offset_f64
__builtin_sve_svld1_gather_u64offset_s64
__builtin_sve_svld1_gather_u64offset_u64
__builtin_sve_svld1_s16
q8sq16bSsC*
__builtin_sve_svld1_s32
q4iq16bSiC*
__builtin_sve_svld1_s64
q2Wiq16bSWiC*
__builtin_sve_svld1_s8
q16Scq16bScC*
__builtin_sve_svld1_u16
q8Usq16bUsC*
__builtin_sve_svld1_u32
q4Uiq16bUiC*
__builtin_sve_svld1_u64
q2UWiq16bUWiC*
__builtin_sve_svld1_u8
q16Ucq16bUcC*
__builtin_sve_svld1_vnum_bf16
q8yq16byC*Wi
__builtin_sve_svld1_vnum_f16
q8hq16bhC*Wi
__builtin_sve_svld1_vnum_f32
q4fq16bfC*Wi
__builtin_sve_svld1_vnum_f64
q2dq16bdC*Wi
__builtin_sve_svld1_vnum_s16
q8sq16bSsC*Wi
__builtin_sve_svld1_vnum_s32
q4iq16bSiC*Wi
__builtin_sve_svld1_vnum_s64
q2Wiq16bSWiC*Wi
__builtin_sve_svld1_vnum_s8
q16Scq16bScC*Wi
__builtin_sve_svld1_vnum_u16
q8Usq16bUsC*Wi
__builtin_sve_svld1_vnum_u32
q4Uiq16bUiC*Wi
__builtin_sve_svld1_vnum_u64
q2UWiq16bUWiC*Wi
__builtin_sve_svld1_vnum_u8
q16Ucq16bUcC*Wi
__builtin_sve_svld1b_s8_x2
q32ScQScC*
__builtin_sve_svld1b_s8_x4
q64ScQScC*
__builtin_sve_svld1b_u8_x2
q32UcQUcC*
__builtin_sve_svld1b_u8_x4
q64UcQUcC*
__builtin_sve_svld1b_vnum_s8_x2
q32ScQScC*Wi
__builtin_sve_svld1b_vnum_s8_x4
q64ScQScC*Wi
__builtin_sve_svld1b_vnum_u8_x2
q32UcQUcC*Wi
__builtin_sve_svld1b_vnum_u8_x4
q64UcQUcC*Wi
__builtin_sve_svld1d_f64_x2
q4dQdC*
__builtin_sve_svld1d_f64_x4
q8dQdC*
__builtin_sve_svld1d_s64_x2
q4WiQSWiC*
__builtin_sve_svld1d_s64_x4
q8WiQSWiC*
__builtin_sve_svld1d_u64_x2
q4UWiQUWiC*
__builtin_sve_svld1d_u64_x4
q8UWiQUWiC*
__builtin_sve_svld1d_vnum_f64_x2
q4dQdC*Wi
__builtin_sve_svld1d_vnum_f64_x4
q8dQdC*Wi
__builtin_sve_svld1d_vnum_s64_x2
q4WiQSWiC*Wi
__builtin_sve_svld1d_vnum_s64_x4
q8WiQSWiC*Wi
__builtin_sve_svld1d_vnum_u64_x2
q4UWiQUWiC*Wi
__builtin_sve_svld1d_vnum_u64_x4
q8UWiQUWiC*Wi
__builtin_sve_svld1h_bf16_x2
q16yQyC*
__builtin_sve_svld1h_bf16_x4
q32yQyC*
__builtin_sve_svld1h_f16_x2
q16hQhC*
__builtin_sve_svld1h_f16_x4
q32hQhC*
__builtin_sve_svld1h_s16_x2
q16sQSsC*
__builtin_sve_svld1h_s16_x4
q32sQSsC*
__builtin_sve_svld1h_u16_x2
q16UsQUsC*
__builtin_sve_svld1h_u16_x4
q32UsQUsC*
__builtin_sve_svld1h_vnum_bf16_x2
q16yQyC*Wi
__builtin_sve_svld1h_vnum_bf16_x4
q32yQyC*Wi
__builtin_sve_svld1h_vnum_f16_x2
q16hQhC*Wi
__builtin_sve_svld1h_vnum_f16_x4
q32hQhC*Wi
__builtin_sve_svld1h_vnum_s16_x2
q16sQSsC*Wi
__builtin_sve_svld1h_vnum_s16_x4
q32sQSsC*Wi
__builtin_sve_svld1h_vnum_u16_x2
q16UsQUsC*Wi
__builtin_sve_svld1h_vnum_u16_x4
q32UsQUsC*Wi
__builtin_sve_svld1ro_bf16
__builtin_sve_svld1ro_f16
__builtin_sve_svld1ro_f32
__builtin_sve_svld1ro_f64
__builtin_sve_svld1ro_s16
__builtin_sve_svld1ro_s32
__builtin_sve_svld1ro_s64
__builtin_sve_svld1ro_s8
__builtin_sve_svld1ro_u16
__builtin_sve_svld1ro_u32
__builtin_sve_svld1ro_u64
__builtin_sve_svld1ro_u8
__builtin_sve_svld1rq_bf16
__builtin_sve_svld1rq_f16
__builtin_sve_svld1rq_f32
__builtin_sve_svld1rq_f64
__builtin_sve_svld1rq_s16
__builtin_sve_svld1rq_s32
__builtin_sve_svld1rq_s64
__builtin_sve_svld1rq_s8
__builtin_sve_svld1rq_u16
__builtin_sve_svld1rq_u32
__builtin_sve_svld1rq_u64
__builtin_sve_svld1rq_u8
__builtin_sve_svld1sb_gather_s32offset_s32
q4iq16bScC*q4i
__builtin_sve_svld1sb_gather_s32offset_u32
q4Uiq16bScC*q4i
__builtin_sve_svld1sb_gather_s64offset_s64
q2Wiq16bScC*q2Wi
__builtin_sve_svld1sb_gather_s64offset_u64
q2UWiq16bScC*q2Wi
__builtin_sve_svld1sb_gather_u32base_offset_s32
__builtin_sve_svld1sb_gather_u32base_offset_u32
__builtin_sve_svld1sb_gather_u32base_s32
__builtin_sve_svld1sb_gather_u32base_u32
__builtin_sve_svld1sb_gather_u32offset_s32
q4iq16bScC*q4Ui
__builtin_sve_svld1sb_gather_u32offset_u32
q4Uiq16bScC*q4Ui
__builtin_sve_svld1sb_gather_u64base_offset_s64
__builtin_sve_svld1sb_gather_u64base_offset_u64
__builtin_sve_svld1sb_gather_u64base_s64
__builtin_sve_svld1sb_gather_u64base_u64
__builtin_sve_svld1sb_gather_u64offset_s64
q2Wiq16bScC*q2UWi
__builtin_sve_svld1sb_gather_u64offset_u64
q2UWiq16bScC*q2UWi
__builtin_sve_svld1sb_s16
q8sq16bScC*
__builtin_sve_svld1sb_s32
q4iq16bScC*
__builtin_sve_svld1sb_s64
q2Wiq16bScC*
__builtin_sve_svld1sb_u16
q8Usq16bScC*
__builtin_sve_svld1sb_u32
q4Uiq16bScC*
__builtin_sve_svld1sb_u64
q2UWiq16bScC*
__builtin_sve_svld1sb_vnum_s16
q8sq16bScC*Wi
__builtin_sve_svld1sb_vnum_s32
mixed,gcc,xl
q4iq16bScC*Wi
__builtin_sve_svld1sb_vnum_s64
q2Wiq16bScC*Wi
__builtin_sve_svld1sb_vnum_u16
q8Usq16bScC*Wi
__builtin_sve_svld1sb_vnum_u32
q4Uiq16bScC*Wi
__builtin_sve_svld1sb_vnum_u64
q2UWiq16bScC*Wi
__builtin_sve_svld1sh_gather_s32index_s32
q4iq16bSsC*q4i
__builtin_sve_svld1sh_gather_s32index_u32
q4Uiq16bSsC*q4i
__builtin_sve_svld1sh_gather_s32offset_s32
__builtin_sve_svld1sh_gather_s32offset_u32
__builtin_sve_svld1sh_gather_s64index_s64
q2Wiq16bSsC*q2Wi
__builtin_sve_svld1sh_gather_s64index_u64
q2UWiq16bSsC*q2Wi
__builtin_sve_svld1sh_gather_s64offset_s64
__builtin_sve_svld1sh_gather_s64offset_u64
__builtin_sve_svld1sh_gather_u32base_index_s32
__builtin_sve_svld1sh_gather_u32base_index_u32
__builtin_sve_svld1sh_gather_u32base_offset_s32
__builtin_sve_svld1sh_gather_u32base_offset_u32
__builtin_sve_svld1sh_gather_u32base_s32
__builtin_sve_svld1sh_gather_u32base_u32
__builtin_sve_svld1sh_gather_u32index_s32
q4iq16bSsC*q4Ui
__builtin_sve_svld1sh_gather_u32index_u32
q4Uiq16bSsC*q4Ui
__builtin_sve_svld1sh_gather_u32offset_s32
__builtin_sve_svld1sh_gather_u32offset_u32
__builtin_sve_svld1sh_gather_u64base_index_s64
__builtin_sve_svld1sh_gather_u64base_index_u64
__builtin_sve_svld1sh_gather_u64base_offset_s64
__builtin_sve_svld1sh_gather_u64base_offset_u64
__builtin_sve_svld1sh_gather_u64base_s64
__builtin_sve_svld1sh_gather_u64base_u64
__builtin_sve_svld1sh_gather_u64index_s64
q2Wiq16bSsC*q2UWi
__builtin_sve_svld1sh_gather_u64index_u64
q2UWiq16bSsC*q2UWi
__builtin_sve_svld1sh_gather_u64offset_s64
__builtin_sve_svld1sh_gather_u64offset_u64
__builtin_sve_svld1sh_s32
q4iq16bSsC*
__builtin_sve_svld1sh_s64
q2Wiq16bSsC*
__builtin_sve_svld1sh_u32
q4Uiq16bSsC*
__builtin_sve_svld1sh_u64
q2UWiq16bSsC*
__builtin_sve_svld1sh_vnum_s32
q4iq16bSsC*Wi
__builtin_sve_svld1sh_vnum_s64
q2Wiq16bSsC*Wi
__builtin_sve_svld1sh_vnum_u32
q4Uiq16bSsC*Wi
__builtin_sve_svld1sh_vnum_u64
q2UWiq16bSsC*Wi
__builtin_sve_svld1sw_gather_s64index_s64
q2Wiq16bSiC*q2Wi
__builtin_sve_svld1sw_gather_s64index_u64
q2UWiq16bSiC*q2Wi
__builtin_sve_svld1sw_gather_s64offset_s64
__builtin_sve_svld1sw_gather_s64offset_u64
__builtin_sve_svld1sw_gather_u64base_index_s64
__builtin_sve_svld1sw_gather_u64base_index_u64
__builtin_sve_svld1sw_gather_u64base_offset_s64
__builtin_sve_svld1sw_gather_u64base_offset_u64
__builtin_sve_svld1sw_gather_u64base_s64
__builtin_sve_svld1sw_gather_u64base_u64
__builtin_sve_svld1sw_gather_u64index_s64
q2Wiq16bSiC*q2UWi
__builtin_sve_svld1sw_gather_u64index_u64
q2UWiq16bSiC*q2UWi
__builtin_sve_svld1sw_gather_u64offset_s64
__builtin_sve_svld1sw_gather_u64offset_u64
__builtin_sve_svld1sw_s64
q2Wiq16bSiC*
__builtin_sve_svld1sw_u64
q2UWiq16bSiC*
__builtin_sve_svld1sw_vnum_s64
q2Wiq16bSiC*Wi
__builtin_sve_svld1sw_vnum_u64
q2UWiq16bSiC*Wi
__builtin_sve_svld1ub_gather_s32offset_s32
q4iq16bUcC*q4i
__builtin_sve_svld1ub_gather_s32offset_u32
q4Uiq16bUcC*q4i
__builtin_sve_svld1ub_gather_s64offset_s64
q2Wiq16bUcC*q2Wi
__builtin_sve_svld1ub_gather_s64offset_u64
q2UWiq16bUcC*q2Wi
__builtin_sve_svld1ub_gather_u32base_offset_s32
__builtin_sve_svld1ub_gather_u32base_offset_u32
__builtin_sve_svld1ub_gather_u32base_s32
__builtin_sve_svld1ub_gather_u32base_u32
__builtin_sve_svld1ub_gather_u32offset_s32
q4iq16bUcC*q4Ui
__builtin_sve_svld1ub_gather_u32offset_u32
q4Uiq16bUcC*q4Ui
__builtin_sve_svld1ub_gather_u64base_offset_s64
__builtin_sve_svld1ub_gather_u64base_offset_u64
__builtin_sve_svld1ub_gather_u64base_s64
__builtin_sve_svld1ub_gather_u64base_u64
__builtin_sve_svld1ub_gather_u64offset_s64
q2Wiq16bUcC*q2UWi
__builtin_sve_svld1ub_gather_u64offset_u64
q2UWiq16bUcC*q2UWi
__builtin_sve_svld1ub_s16
q8sq16bUcC*
__builtin_sve_svld1ub_s32
q4iq16bUcC*
__builtin_sve_svld1ub_s64
q2Wiq16bUcC*
__builtin_sve_svld1ub_u16
q8Usq16bUcC*
__builtin_sve_svld1ub_u32
q4Uiq16bUcC*
__builtin_sve_svld1ub_u64
q2UWiq16bUcC*
__builtin_sve_svld1ub_vnum_s16
q8sq16bUcC*Wi
__builtin_sve_svld1ub_vnum_s32
q4iq16bUcC*Wi
__builtin_sve_svld1ub_vnum_s64
q2Wiq16bUcC*Wi
__builtin_sve_svld1ub_vnum_u16
q8Usq16bUcC*Wi
__builtin_sve_svld1ub_vnum_u32
q4Uiq16bUcC*Wi
__builtin_sve_svld1ub_vnum_u64
q2UWiq16bUcC*Wi
__builtin_sve_svld1uh_gather_s32index_s32
q4iq16bUsC*q4i
__builtin_sve_svld1uh_gather_s32index_u32
q4Uiq16bUsC*q4i
__builtin_sve_svld1uh_gather_s32offset_s32
__builtin_sve_svld1uh_gather_s32offset_u32
__builtin_sve_svld1uh_gather_s64index_s64
q2Wiq16bUsC*q2Wi
__builtin_sve_svld1uh_gather_s64index_u64
q2UWiq16bUsC*q2Wi
__builtin_sve_svld1uh_gather_s64offset_s64
__builtin_sve_svld1uh_gather_s64offset_u64
__builtin_sve_svld1uh_gather_u32base_index_s32
__builtin_sve_svld1uh_gather_u32base_index_u32
__builtin_sve_svld1uh_gather_u32base_offset_s32
__builtin_sve_svld1uh_gather_u32base_offset_u32
__builtin_sve_svld1uh_gather_u32base_s32
__builtin_sve_svld1uh_gather_u32base_u32
__builtin_sve_svld1uh_gather_u32index_s32
q4iq16bUsC*q4Ui
__builtin_sve_svld1uh_gather_u32index_u32
q4Uiq16bUsC*q4Ui
__builtin_sve_svld1uh_gather_u32offset_s32
__builtin_sve_svld1uh_gather_u32offset_u32
__builtin_sve_svld1uh_gather_u64base_index_s64
__builtin_sve_svld1uh_gather_u64base_index_u64
__builtin_sve_svld1uh_gather_u64base_offset_s64
__builtin_sve_svld1uh_gather_u64base_offset_u64
__builtin_sve_svld1uh_gather_u64base_s64
__builtin_sve_svld1uh_gather_u64base_u64
__builtin_sve_svld1uh_gather_u64index_s64
q2Wiq16bUsC*q2UWi
__builtin_sve_svld1uh_gather_u64index_u64
q2UWiq16bUsC*q2UWi
__builtin_sve_svld1uh_gather_u64offset_s64
__builtin_sve_svld1uh_gather_u64offset_u64
__builtin_sve_svld1uh_s32
q4iq16bUsC*
__builtin_sve_svld1uh_s64
q2Wiq16bUsC*
__builtin_sve_svld1uh_u32
q4Uiq16bUsC*
__builtin_sve_svld1uh_u64
q2UWiq16bUsC*
__builtin_sve_svld1uh_vnum_s32
q4iq16bUsC*Wi
__builtin_sve_svld1uh_vnum_s64
q2Wiq16bUsC*Wi
__builtin_sve_svld1uh_vnum_u32
q4Uiq16bUsC*Wi
__builtin_sve_svld1uh_vnum_u64
q2UWiq16bUsC*Wi
__builtin_sve_svld1uw_gather_s64index_s64
q2Wiq16bUiC*q2Wi
__builtin_sve_svld1uw_gather_s64index_u64
q2UWiq16bUiC*q2Wi
__builtin_sve_svld1uw_gather_s64offset_s64
__builtin_sve_svld1uw_gather_s64offset_u64
__builtin_sve_svld1uw_gather_u64base_index_s64
__builtin_sve_svld1uw_gather_u64base_index_u64
__builtin_sve_svld1uw_gather_u64base_offset_s64
__builtin_sve_svld1uw_gather_u64base_offset_u64
__builtin_sve_svld1uw_gather_u64base_s64
__builtin_sve_svld1uw_gather_u64base_u64
__builtin_sve_svld1uw_gather_u64index_s64
q2Wiq16bUiC*q2UWi
__builtin_sve_svld1uw_gather_u64index_u64
q2UWiq16bUiC*q2UWi
__builtin_sve_svld1uw_gather_u64offset_s64
__builtin_sve_svld1uw_gather_u64offset_u64
__builtin_sve_svld1uw_s64
q2Wiq16bUiC*
__builtin_sve_svld1uw_u64
q2UWiq16bUiC*
__builtin_sve_svld1uw_vnum_s64
q2Wiq16bUiC*Wi
__builtin_sve_svld1uw_vnum_u64
q2UWiq16bUiC*Wi
__builtin_sve_svld1w_f32_x2
q8fQfC*
__builtin_sve_svld1w_f32_x4
q16fQfC*
__builtin_sve_svld1w_s32_x2
q8iQSiC*
__builtin_sve_svld1w_s32_x4
q16iQSiC*
__builtin_sve_svld1w_u32_x2
q8UiQUiC*
__builtin_sve_svld1w_u32_x4
q16UiQUiC*
__builtin_sve_svld1w_vnum_f32_x2
q8fQfC*Wi
__builtin_sve_svld1w_vnum_f32_x4
q16fQfC*Wi
__builtin_sve_svld1w_vnum_s32_x2
q8iQSiC*Wi
__builtin_sve_svld1w_vnum_s32_x4
q16iQSiC*Wi
__builtin_sve_svld1w_vnum_u32_x2
q8UiQUiC*Wi
__builtin_sve_svld1w_vnum_u32_x4
q16UiQUiC*Wi
__builtin_sve_svld2_bf16
q16yq16byC*
__builtin_sve_svld2_f16
q16hq16bhC*
__builtin_sve_svld2_f32
q8fq16bfC*
__builtin_sve_svld2_f64
q4dq16bdC*
__builtin_sve_svld2_s16
q16sq16bSsC*
__builtin_sve_svld2_s32
q8iq16bSiC*
__builtin_sve_svld2_s64
q4Wiq16bSWiC*
__builtin_sve_svld2_s8
q32Scq16bScC*
__builtin_sve_svld2_u16
q16Usq16bUsC*
__builtin_sve_svld2_u32
q8Uiq16bUiC*
__builtin_sve_svld2_u64
q4UWiq16bUWiC*
__builtin_sve_svld2_u8
q32Ucq16bUcC*
__builtin_sve_svld2_vnum_bf16
q16yq16byC*Wi
__builtin_sve_svld2_vnum_f16
q16hq16bhC*Wi
__builtin_sve_svld2_vnum_f32
q8fq16bfC*Wi
__builtin_sve_svld2_vnum_f64
q4dq16bdC*Wi
__builtin_sve_svld2_vnum_s16
q16sq16bSsC*Wi
__builtin_sve_svld2_vnum_s32
q8iq16bSiC*Wi
__builtin_sve_svld2_vnum_s64
q4Wiq16bSWiC*Wi
__builtin_sve_svld2_vnum_s8
q32Scq16bScC*Wi
-fdeclare-opencl-builtins
__builtin_sve_svld2_vnum_u16
q16Usq16bUsC*Wi
__builtin_sve_svld2_vnum_u32
q8Uiq16bUiC*Wi
__builtin_sve_svld2_vnum_u64
q4UWiq16bUWiC*Wi
__builtin_sve_svld2_vnum_u8
q32Ucq16bUcC*Wi
__builtin_sve_svld3_bf16
q24yq16byC*
__builtin_sve_svld3_f16
q24hq16bhC*
__builtin_sve_svld3_f32
q12fq16bfC*
__builtin_sve_svld3_f64
q6dq16bdC*
__builtin_sve_svld3_s16
q24sq16bSsC*
__builtin_sve_svld3_s32
q12iq16bSiC*
__builtin_sve_svld3_s64
q6Wiq16bSWiC*
__builtin_sve_svld3_s8
q48Scq16bScC*
__builtin_sve_svld3_u16
q24Usq16bUsC*
__builtin_sve_svld3_u32
q12Uiq16bUiC*
__builtin_sve_svld3_u64
q6UWiq16bUWiC*
__builtin_sve_svld3_u8
q48Ucq16bUcC*
__builtin_sve_svld3_vnum_bf16
q24yq16byC*Wi
__builtin_sve_svld3_vnum_f16
q24hq16bhC*Wi
__builtin_sve_svld3_vnum_f32
q12fq16bfC*Wi
__builtin_sve_svld3_vnum_f64
q6dq16bdC*Wi
__builtin_sve_svld3_vnum_s16
q24sq16bSsC*Wi
__builtin_sve_svld3_vnum_s32
q12iq16bSiC*Wi
__builtin_sve_svld3_vnum_s64
q6Wiq16bSWiC*Wi
__builtin_sve_svld3_vnum_s8
q48Scq16bScC*Wi
__builtin_sve_svld3_vnum_u16
q24Usq16bUsC*Wi
__builtin_sve_svld3_vnum_u32
q12Uiq16bUiC*Wi
__builtin_sve_svld3_vnum_u64
q6UWiq16bUWiC*Wi
__builtin_sve_svld3_vnum_u8
q48Ucq16bUcC*Wi
__builtin_sve_svld4_bf16
q32yq16byC*
__builtin_sve_svld4_f16
q32hq16bhC*
__builtin_sve_svld4_f32
q16fq16bfC*
__builtin_sve_svld4_f64
q8dq16bdC*
__builtin_sve_svld4_s16
q32sq16bSsC*
__builtin_sve_svld4_s32
q16iq16bSiC*
__builtin_sve_svld4_s64
q8Wiq16bSWiC*
__builtin_sve_svld4_s8
q64Scq16bScC*
__builtin_sve_svld4_u16
q32Usq16bUsC*
__builtin_sve_svld4_u32
q16Uiq16bUiC*
__builtin_sve_svld4_u64
q8UWiq16bUWiC*
__builtin_sve_svld4_u8
q64Ucq16bUcC*
__builtin_sve_svld4_vnum_bf16
q32yq16byC*Wi
__builtin_sve_svld4_vnum_f16
q32hq16bhC*Wi
__builtin_sve_svld4_vnum_f32
q16fq16bfC*Wi
__builtin_sve_svld4_vnum_f64
q8dq16bdC*Wi
__builtin_sve_svld4_vnum_s16
q32sq16bSsC*Wi
__builtin_sve_svld4_vnum_s32
q16iq16bSiC*Wi
__builtin_sve_svld4_vnum_s64
q8Wiq16bSWiC*Wi
__builtin_sve_svld4_vnum_s8
q64Scq16bScC*Wi
__builtin_sve_svld4_vnum_u16
q32Usq16bUsC*Wi
__builtin_sve_svld4_vnum_u32
q16Uiq16bUiC*Wi
__builtin_sve_svld4_vnum_u64
q8UWiq16bUWiC*Wi
__builtin_sve_svld4_vnum_u8
q64Ucq16bUcC*Wi
__builtin_sve_svldff1_bf16
__builtin_sve_svldff1_f16
__builtin_sve_svldff1_f32
__builtin_sve_svldff1_f64
__builtin_sve_svldff1_gather_s32index_f32
__builtin_sve_svldff1_gather_s32index_s32
__builtin_sve_svldff1_gather_s32index_u32
__builtin_sve_svldff1_gather_s32offset_f32
__builtin_sve_svldff1_gather_s32offset_s32
__builtin_sve_svldff1_gather_s32offset_u32
__builtin_sve_svldff1_gather_s64index_f64
__builtin_sve_svldff1_gather_s64index_s64
__builtin_sve_svldff1_gather_s64index_u64
__builtin_sve_svldff1_gather_s64offset_f64
__builtin_sve_svldff1_gather_s64offset_s64
__builtin_sve_svldff1_gather_s64offset_u64
__builtin_sve_svldff1_gather_u32base_f32
__builtin_sve_svldff1_gather_u32base_index_f32
__builtin_sve_svldff1_gather_u32base_index_s32
__builtin_sve_svldff1_gather_u32base_index_u32
__builtin_sve_svldff1_gather_u32base_offset_f32
__builtin_sve_svldff1_gather_u32base_offset_s32
__builtin_sve_svldff1_gather_u32base_offset_u32
__builtin_sve_svldff1_gather_u32base_s32
__builtin_sve_svldff1_gather_u32base_u32
__builtin_sve_svldff1_gather_u32index_f32
__builtin_sve_svldff1_gather_u32index_s32
__builtin_sve_svldff1_gather_u32index_u32
__builtin_sve_svldff1_gather_u32offset_f32
__builtin_sve_svldff1_gather_u32offset_s32
__builtin_sve_svldff1_gather_u32offset_u32
__builtin_sve_svldff1_gather_u64base_f64
__builtin_sve_svldff1_gather_u64base_index_f64
__builtin_sve_svldff1_gather_u64base_index_s64
__builtin_sve_svldff1_gather_u64base_index_u64
-fencode-extended-block-signature
__builtin_sve_svldff1_gather_u64base_offset_f64
__builtin_sve_svldff1_gather_u64base_offset_s64
__builtin_sve_svldff1_gather_u64base_offset_u64
__builtin_sve_svldff1_gather_u64base_s64
__builtin_sve_svldff1_gather_u64base_u64
__builtin_sve_svldff1_gather_u64index_f64
__builtin_sve_svldff1_gather_u64index_s64
__builtin_sve_svldff1_gather_u64index_u64
__builtin_sve_svldff1_gather_u64offset_f64
__builtin_sve_svldff1_gather_u64offset_s64
__builtin_sve_svldff1_gather_u64offset_u64
__builtin_sve_svldff1_s16
__builtin_sve_svldff1_s32
__builtin_sve_svldff1_s64
__builtin_sve_svldff1_s8
__builtin_sve_svldff1_u16
__builtin_sve_svldff1_u32
__builtin_sve_svldff1_u64
__builtin_sve_svldff1_u8
__builtin_sve_svldff1_vnum_bf16
__builtin_sve_svldff1_vnum_f16
__builtin_sve_svldff1_vnum_f32
__builtin_sve_svldff1_vnum_f64
__builtin_sve_svldff1_vnum_s16
__builtin_sve_svldff1_vnum_s32
__builtin_sve_svldff1_vnum_s64
__builtin_sve_svldff1_vnum_s8
__builtin_sve_svldff1_vnum_u16
__builtin_sve_svldff1_vnum_u32
__builtin_sve_svldff1_vnum_u64
__builtin_sve_svldff1_vnum_u8
__builtin_sve_svldff1sb_gather_s32offset_s32
__builtin_sve_svldff1sb_gather_s32offset_u32
__builtin_sve_svldff1sb_gather_s64offset_s64
__builtin_sve_svldff1sb_gather_s64offset_u64
__builtin_sve_svldff1sb_gather_u32base_offset_s32
__builtin_sve_svldff1sb_gather_u32base_offset_u32
__builtin_sve_svldff1sb_gather_u32base_s32
__builtin_sve_svldff1sb_gather_u32base_u32
__builtin_sve_svldff1sb_gather_u32offset_s32
__builtin_sve_svldff1sb_gather_u32offset_u32
__builtin_sve_svldff1sb_gather_u64base_offset_s64
__builtin_sve_svldff1sb_gather_u64base_offset_u64
__builtin_sve_svldff1sb_gather_u64base_s64
__builtin_sve_svldff1sb_gather_u64base_u64
__builtin_sve_svldff1sb_gather_u64offset_s64
__builtin_sve_svldff1sb_gather_u64offset_u64
__builtin_sve_svldff1sb_s16
__builtin_sve_svldff1sb_s32
__builtin_sve_svldff1sb_s64
__builtin_sve_svldff1sb_u16
__builtin_sve_svldff1sb_u32
__builtin_sve_svldff1sb_u64
__builtin_sve_svldff1sb_vnum_s16
__builtin_sve_svldff1sb_vnum_s32
__builtin_sve_svldff1sb_vnum_s64
__builtin_sve_svldff1sb_vnum_u16
__builtin_sve_svldff1sb_vnum_u32
__builtin_sve_svldff1sb_vnum_u64
__builtin_sve_svldff1sh_gather_s32index_s32
__builtin_sve_svldff1sh_gather_s32index_u32
__builtin_sve_svldff1sh_gather_s32offset_s32
__builtin_sve_svldff1sh_gather_s32offset_u32
__builtin_sve_svldff1sh_gather_s64index_s64
__builtin_sve_svldff1sh_gather_s64index_u64
__builtin_sve_svldff1sh_gather_s64offset_s64
__builtin_sve_svldff1sh_gather_s64offset_u64
__builtin_sve_svldff1sh_gather_u32base_index_s32
__builtin_sve_svldff1sh_gather_u32base_index_u32
__builtin_sve_svldff1sh_gather_u32base_offset_s32
Reserve the a5 register (M68k only)
__builtin_sve_svldff1sh_gather_u32base_offset_u32
__builtin_sve_svldff1sh_gather_u32base_s32
__builtin_sve_svldff1sh_gather_u32base_u32
__builtin_sve_svldff1sh_gather_u32index_s32
__builtin_sve_svldff1sh_gather_u32index_u32
__builtin_sve_svldff1sh_gather_u32offset_s32
__builtin_sve_svldff1sh_gather_u32offset_u32
__builtin_sve_svldff1sh_gather_u64base_index_s64
__builtin_sve_svldff1sh_gather_u64base_index_u64
__builtin_sve_svldff1sh_gather_u64base_offset_s64
__builtin_sve_svldff1sh_gather_u64base_offset_u64
__builtin_sve_svldff1sh_gather_u64base_s64
__builtin_sve_svldff1sh_gather_u64base_u64
__builtin_sve_svldff1sh_gather_u64index_s64
__builtin_sve_svldff1sh_gather_u64index_u64
__builtin_sve_svldff1sh_gather_u64offset_s64
__builtin_sve_svldff1sh_gather_u64offset_u64
__builtin_sve_svldff1sh_s32
__builtin_sve_svldff1sh_s64
__builtin_sve_svldff1sh_u32
__builtin_sve_svldff1sh_u64
__builtin_sve_svldff1sh_vnum_s32
__builtin_sve_svldff1sh_vnum_s64
__builtin_sve_svldff1sh_vnum_u32
__builtin_sve_svldff1sh_vnum_u64
__builtin_sve_svldff1sw_gather_s64index_s64
__builtin_sve_svldff1sw_gather_s64index_u64
__builtin_sve_svldff1sw_gather_s64offset_s64
__builtin_sve_svldff1sw_gather_s64offset_u64
__builtin_sve_svldff1sw_gather_u64base_index_s64
__builtin_sve_svldff1sw_gather_u64base_index_u64
__builtin_sve_svldff1sw_gather_u64base_offset_s64
__builtin_sve_svldff1sw_gather_u64base_offset_u64
__builtin_sve_svldff1sw_gather_u64base_s64
__builtin_sve_svldff1sw_gather_u64base_u64
-ffixed-x13
__builtin_sve_svldff1sw_gather_u64index_s64
__builtin_sve_svldff1sw_gather_u64index_u64
__builtin_sve_svldff1sw_gather_u64offset_s64
__builtin_sve_svldff1sw_gather_u64offset_u64
__builtin_sve_svldff1sw_s64
__builtin_sve_svldff1sw_u64
__builtin_sve_svldff1sw_vnum_s64
__builtin_sve_svldff1sw_vnum_u64
__builtin_sve_svldff1ub_gather_s32offset_s32
__builtin_sve_svldff1ub_gather_s32offset_u32
__builtin_sve_svldff1ub_gather_s64offset_s64
__builtin_sve_svldff1ub_gather_s64offset_u64
__builtin_sve_svldff1ub_gather_u32base_offset_s32
__builtin_sve_svldff1ub_gather_u32base_offset_u32
__builtin_sve_svldff1ub_gather_u32base_s32
__builtin_sve_svldff1ub_gather_u32base_u32
__builtin_sve_svldff1ub_gather_u32offset_s32
__builtin_sve_svldff1ub_gather_u32offset_u32
Reserve the x21 register (AArch64/RISC-V only)
__builtin_sve_svldff1ub_gather_u64base_offset_s64
__builtin_sve_svldff1ub_gather_u64base_offset_u64
__builtin_sve_svldff1ub_gather_u64base_s64
__builtin_sve_svldff1ub_gather_u64base_u64
__builtin_sve_svldff1ub_gather_u64offset_s64
__builtin_sve_svldff1ub_gather_u64offset_u64
__builtin_sve_svldff1ub_s16
__builtin_sve_svldff1ub_s32
__builtin_sve_svldff1ub_s64
__builtin_sve_svldff1ub_u16
-ffixed-x27
__builtin_sve_svldff1ub_u32
__builtin_sve_svldff1ub_u64
__builtin_sve_svldff1ub_vnum_s16
__builtin_sve_svldff1ub_vnum_s32
__builtin_sve_svldff1ub_vnum_s64
-ffixed-x2
__builtin_sve_svldff1ub_vnum_u16
__builtin_sve_svldff1ub_vnum_u32
__builtin_sve_svldff1ub_vnum_u64
-ffixed-x31
__builtin_sve_svldff1uh_gather_s32index_s32
__builtin_sve_svldff1uh_gather_s32index_u32
Reserve the x3 register (AArch64/RISC-V only)
__builtin_sve_svldff1uh_gather_s32offset_s32
__builtin_sve_svldff1uh_gather_s32offset_u32
-ffixed-x5
__builtin_sve_svldff1uh_gather_s64index_s64
-ffixed-x6
__builtin_sve_svldff1uh_gather_s64index_u64
-ffixed-x7
__builtin_sve_svldff1uh_gather_s64offset_s64
-ffixed-x8
__builtin_sve_svldff1uh_gather_s64offset_u64
-ffixed-x9
__builtin_sve_svldff1uh_gather_u32base_index_s32
-ffloat-store
__builtin_sve_svldff1uh_gather_u32base_index_u32
-fforbid-guard-variables
__builtin_sve_svldff1uh_gather_u32base_offset_s32
-fforce-addr
__builtin_sve_svldff1uh_gather_u32base_offset_u32
Always emit a debug frame section
__builtin_sve_svldff1uh_gather_u32base_s32
Emits more virtual tables to improve devirtualization
__builtin_sve_svldff1uh_gather_u32base_u32
Enable support for int128_t type
__builtin_sve_svldff1uh_gather_u32index_s32
Form fused FP ops (e.g. FMAs): fast (fuses across statements disregarding pragmas) | on (only fuses in the same statement unless dictated by pragmas) | off (never fuses) | fast-honor-pragmas (fuses across statements unless diectated by pragmas). Default is 'fast' for CUDA, 'fast-honor-pragmas' for HIP, and 'on' otherwise.
__builtin_sve_svldff1uh_gather_u32index_u32
-ffp-eval-method=
__builtin_sve_svldff1uh_gather_u32offset_s32
source,double,extended
__builtin_sve_svldff1uh_gather_u32offset_u32
Specifies the exception behavior of floating-point operations.
__builtin_sve_svldff1uh_gather_u64base_index_s64
-ffp-model=
__builtin_sve_svldff1uh_gather_u64base_index_u64
-ffpe-trap=
__builtin_sve_svldff1uh_gather_u64base_offset_s64
Process source files in free form
OptimizeNoneAttr
-m:e
@UUT@
__builtin_sme_svmopa_za32_bf16
No object file for requested architecture
Enable poisoning array cookies when using custom operator new[] in AddressSanitizer
__builtin_riscv_sm3p1
+++ %u translation units
DWARF64
q16hq16hIUWiq8h
__builtin_sme_svmlsl_za32_u16_vg2x4
 [scalar deleting]
at90usb647
_FILE_OFFSET_BITS
ppc32
zksh
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2
Exclude private header from parsing
DWARF32
CJK COMPATIBILITY IDEOGRAPH-
__builtin_sve_svqdech_u16
__builtin_sve_svset2_f16
__builtin_sve_svsubwt_u32
__builtin_sme_svmlsl_za32_u16_vg2x2
 __attribute__((arm_preserves_za))
seg_size = 0x%2.2x
] was not able to be parsed for CU:
arm64e
__builtin_HEXAGON_V6_vdmpyhsusat_acc
hvxv
_CRT_NONSTDC_NO_WARNINGS
vs63
__builtin_rvv_vsaddu_vv_tuma
__builtin_rvv_vlseg3e64ff_v_ta
__builtin_riscv_sm3p0
__NEC__
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt
base class %0 %select{is not|is}1 virtual here
Define macro
annot_header_unit
DW_IDX_type_hash
arm,thumb
NUSHU CHARACTER-
__builtin_sve_svmin_n_u8_z
__builtin_sve_svmulh_s16_x
q8sq8sIUWi
__builtin_sve_svqsubr_s16_x
q16yq16yIUWiq8y
vq16by*q16y
__builtin_sve_svsubwt_u16
__builtin_sve_reinterpret_s8_s32
__builtin_sme_svmlsl_za32_s16_vg2x4
athlon-xp
Treat <file> as C++ source file
 __attribute__((arm_shared_za))
-fno-integrated-cc1
address range table at offset 0x%llx has length that is not a multiple of the tuple size
cu + 0x%llx
-fno-module-file-deps
-fprofile-remapping-file=
armv7s
vr31
__builtin_HEXAGON_S2_asl_r_vw
__builtin_HEXAGON_V6_vdmpyhsusat_128B
__builtin_HEXAGON_V6_vrounduwuh_128B
__builtin_HEXAGON_V6_vmpyuhvs_128B
__private_macro
  #pragma push_macro Info: 
__imma_m32n8k16_ld_c
__builtin_mma_pmxvbf16ger2pp
vs62
__builtin_rvv_vwadd_wx_tamu
__builtin_rvv_vsaddu_vv_tumu
__builtin_rvv_vmfle_vv_mu
__builtin_rvv_vlseg2e64ff_v_tamu
__builtin_rvv_vfncvt_f_xu_w_tamu
__builtin_riscv_sm4ks
__builtin_ve_vl_pvfnmsb_vvsvMvl
__builtin_ve_vl_lcr_sss
__ve__
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt
unknown/unsupported architecture
 __attribute__((assume_aligned
LD_NO_ENCRYPT
__builtin_ia32_shuf_i64x2_256
annot_module_end
number of bits must be a byte width multiple
DW_IDX_parent
-pacbti
/dev/urandom
KHITAN SMALL SCRIPT CHARACTER-
k8-sse3
__builtin_sve_svmad_f16_z
__builtin_sve_svmin_n_u8_x
__builtin_sve_svmls_n_u8_m
__builtin_sve_svmulh_s16_m
__builtin_sve_svorr_u16_x
__builtin_sve_svqdech_s16
__builtin_sve_svqrshl_n_u32_x
__builtin_sve_svqsubr_s16_m
__builtin_sve_svrhadd_u16_m
__builtin_sve_svset2_bf16
__builtin_sve_svst1_scatter_u64offset_u64
__builtin_sve_svst2_bf16
__builtin_sve_svstnt1h_scatter_u64base_s64
__builtin_sve_svsubwt_s64
__builtin_sve_svuqadd_n_s32_x
q16Scq8Ss
q2dq8Us
__builtin_sme_svmlsl_za32_s16_vg2x2
Selector ID local -> global map
lvi-load-hardening
zvfh requires zfh, zfhmin, zhinx or zhinxmin extension to also be specified
__builtin_sme_svmla_lane_za64_f64_vg1x2
-x87
__write_only image1d_buffer_t
) * 8))) 
 __attribute__((arm_new_za))
threads
raw profile version mismatch
DW_ATOM_unknown_
the length of address range table at offset 0x%llx exceeds section size
failed to parse entry content descriptions because no path was found
cu + 0x%2.2x
 CU offset 
Use jump tables for lowering switches
for BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB missing preceding BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM for opcode at: 0x
more than one 
 fileoff field plus filesize field in 
__builtin_arm_cde_vcx1q_m_f32
vr30
__builtin_HEXAGON_A4_cround_ri
__builtin_HEXAGON_M2_mpy_nac_hh_s1
__builtin_HEXAGON_S2_asl_r_vh
__builtin_HEXAGON_Y6_dmstart
__builtin_HEXAGON_V6_vdmpyhsusat
__builtin_HEXAGON_V6_vpackoh
__builtin_HEXAGON_V6_vrounduwuh
__builtin_HEXAGON_V6_vsub_hf
__builtin_HEXAGON_V6_vmpyuhvs
-fno-openmp-implicit-rpath
-mrelax-all
 #if/#ifndef#ifdef regions skipped
__builtin_powf
V4iiiiiii
__imma_m32n8k16_ld_b_u8
__builtin_altivec_vsubcuw
__builtin_vsx_xvmaxsp
__builtin_mma_xvbf16ger2nn
__alignx
vs61
__builtin_rvv_vssseg3e32_v_m
__builtin_rvv_vwadd_wx_tama
__builtin_rvv_vmaxu_vv_tamu
__builtin_rvv_vsaddu_vv_tu
__builtin_rvv_vfdiv_vf_tamu
__builtin_rvv_vmfle_vv_ma
__builtin_rvv_vlseg8e8_v_tumu
__builtin_rvv_vlseg2e64ff_v_tama
__builtin_rvv_vluxseg8ei8_v_tumu
__builtin_rvv_vfncvt_f_xu_w_tama
zksed
gr740
__builtin_ve_vl_vcmpul_vsvmvl
__builtin_ve_vl_vsfa_vvssvl
__builtin_ve_vl_pvfnmsb_vsvvMvl
__builtin_ve_vl_vfmkdnenan_mvl
__builtin_ve_vl_tovm_sml
__ve
sse4a
silvermont
__clang_svuint8x3_t
elf64_sparc
class
field %0 %select{is not|is}1 bit field here
--prefix=
-print-libgcc-file-name
Enable public header scanning
V4iV4iV4iV4iIiUc
 __declspec(naked
__builtin_ia32_rsqrtsh_mask
clang-offload-bundler
__if_not_exists
annot_module_begin
not a number, or does not fit in an unsigned int
DW_OP_const4u
DW_LANG_Dylan
DW_IDX_die_offset
armv8-m.base
pacbti
-10e60
rv64gc
TANGUT IDEOGRAPH-
__builtin_sve_svldnt1sh_gather_u32offset_s32
__builtin_sve_svlsl_n_s64_x
__builtin_sve_svmad_f16_x
__builtin_sve_svmax_n_u8_m
__builtin_sve_svmin_n_u8_m
__builtin_sve_svmla_n_u16_x
__builtin_sve_svmls_n_u64_z
__builtin_sve_svmsb_n_u64_z
__builtin_sve_svmulh_n_u8_z
__builtin_sve_svnmad_n_f32_x
__builtin_sve_svorr_u16_m
__builtin_sve_svqabs_s16_z
q8Usq8UsIiIUWi
__builtin_sve_svqincb_pat_n_u64
q4Uiq16bq4Uii
__builtin_sve_svqshl_u64_x
__builtin_sve_svqsubr_n_u8_z
__builtin_sve_svrecpx_f16_x
__builtin_sve_svrhadd_s8_z
__builtin_sve_svrshr_n_s32_z
__builtin_sve_svsel_u8
__builtin_sve_svsqadd_n_u32_z
__builtin_sve_svst1_scatter_u64offset_s64
vQh*q32h
vq16bUi*Wiq2UWi
vq16bSs*Wiq32s
__builtin_sve_svstnt1h_scatter_u64base_offset_u64
__builtin_sve_svsubhnt_s64
__builtin_sve_svsubwt_s32
__builtin_sve_svtrn2q_u16
__builtin_sve_svuqadd_n_s32_m
__builtin_sve_svwhilele_b64_s64
__builtin_sve_reinterpret_s8_s16
q8Usq8h
__builtin_sve_reinterpret_f64_u16
__builtin_sme_svmlsl_za32_f16_vg2x4
NoSpeculativeLoadHardening
PragmaClangRelroSection
 imported
QualType
 delete
gfx601
+reserve-x16
+reserve-x17
+soft-float
znver2
+cx16
ExtVector
__read_only image3d_t
typeof_unqual 
__builtin_arm_uqsax
 __attribute__((arm_streaming))
parallel masked taskloop
seq_cst
user
failed to uncompress data (zlib)
DW_CHILDREN_
leaf
, Version = 
neon_polyvector_type
duplicate personality in entry at 0x%llx
failed to parse directory entry because skipping the form value failed
Unable to resolve location list offset pair: Base address not defined
alt indirect string, offset: 0x%llx
clang::opencl_private
 that references a file with index 
-mips16
 with invalid encoding
X86_64_RELOC_SIGNED_4
address 
BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB not allowed in lazy bind table for opcode at: 0x
 at offset 
locreloff field plus nlocrel field times sizeof(struct relocation_info) of LC_DYSYMTAB command 
offset field plus size field of section 
Set macOS deployment target
__builtin_arm_cde_vcx1a_u32
-macabi
__AVR_ATxmega16D4__
vr29
i*i*iiIi
__builtin_HEXAGON_A2_subh_h16_lh
LLiiIi
__builtin_HEXAGON_F2_dfcmpeq
__builtin_HEXAGON_M2_mpy_nac_hh_s0
__builtin_HEXAGON_M2_naccii
__builtin_HEXAGON_S2_asl_r_r_sat
__builtin_HEXAGON_S2_vrndpackwhs
__builtin_HEXAGON_Y6_dmresume
V32iV128bi
__builtin_HEXAGON_V6_vdmpyhsuisat_acc_128B
__builtin_HEXAGON_V6_vminw
__builtin_HEXAGON_V6_vpackob_128B
__builtin_HEXAGON_V6_vsubwsat_dv
__builtin_HEXAGON_V6_vrounduhub_128B
__builtin_HEXAGON_V6_vsatdw_128B
__builtin_HEXAGON_V6_vmpy_sf_sf_128B
__builtin_HEXAGON_V6_vasrvwuhsat_128B
Disable all Clang extensions for OpenMP directives and clauses
-output=
--ptxas-args=
-Wunaligned-access
 #else/#elif/#elifdef/#elifndef.
vsuxseg3ei8_v
__builtin_powif
__nvvm_rcp_rp_d
__nvvm_ull2d_rm
__builtin_ptx_read_image3Dii_
__nvvm_atom_sys_cas_gen_ll
__imma_m32n8k16_ld_b_s8
__pnacl__
__builtin_altivec_vmuloub
__builtin_altivec_vrsqrtefp
UiV2ULLi
__builtin_vsx_xvmaxdp
__builtin_vsx_scalar_extract_expq
__builtin_mma_xvbf16ger2np
__divweu
vs42
vs60
__builtin_rvv_vloxseg6ei64_v_tu
__builtin_rvv_vssseg3e32_v
__builtin_rvv_vsoxseg6ei16_v_m
__builtin_rvv_vwadd_wx_tuma
__builtin_rvv_vnsra_wx_tuma
__builtin_rvv_vmaxu_vv_tama
__builtin_rvv_vwmul_vx_tamu
__builtin_rvv_vsaddu_vv_ta
__builtin_rvv_vssra_vx_tamu
__builtin_rvv_vfdiv_vf_tama
__builtin_rvv_vfwnmacc_vv_ta
__builtin_rvv_vmfle_vv_tumu
__builtin_rvv_vslideup_vx_tumu
__builtin_rvv_vlseg8e8_v_tu
__builtin_rvv_vlseg8e64_v_tama
__builtin_rvv_vlseg2e64ff_v_tuma
__builtin_rvv_vlsseg2e32_v_tumu
__builtin_rvv_vluxseg8ei8_v_tu
__builtin_rvv_vluxseg8ei64_v_tama
__builtin_rvv_vfncvt_f_xu_w_tuma
__builtin_rvv_vsext_vf4_tu
LiLiLiIUc
leon4
__builtin_s390_vsra
__builtin_s390_vstrsh
zEC12
__builtin_ve_vl_vsubuw_vvvmvl
__builtin_ve_vl_vcmpul_vvvmvl
__builtin_ve_vl_pveqv_vvvvl
V256dV256dLUiLUiUi
__builtin_ve_vl_pvfmin_vsvl
__builtin_ve_vl_pvfnmsb_vvvvMvl
__builtin_ve_vl_vfmkweq_mvl
__builtin_ve_vl_vfmkdltnan_mvml
__builtin_ve_vl_vfsumd_vvml
__builtin_ve_vl_lzvm_sml
__linux__
generic
__AVXVNNI__
prescott
__builtin_rvv_vfwcvt_f_xu_v_tu
__rvv_uint32m8_t
UnavailableAttr
OpenCLAccessAttr
elf32_sparc
package
__builtin_ia32_blendvps256
assert_shared_capability
vUiUWi
no declaration found for exported symbol '%0' in dynamic library
-fno-rtti
Failed to scan header interface
LD_APPLICATION_EXTENSION_SAFE
--verify-mode=
mabi=
<glob>
--installapi-sdkdb-path
usr/include
 __attribute__((ns_returns_retained
-rdynamic
--offload
__builtin_ia32_clzero
Invalid encoding
__add_lvalue_reference
__if_exists
annot_module_include
__builtin_omp_required_simd_align
Invalid address space, must be a 24-bit integer
DW_AT_dwo_id
DW_AT_SUN_c_vla
DW_OP_const2s
DW_OP_breg28
DW_LANG_Julia
DW_CFA_def_cfa
DW_IDX_type_unit
armv9.1-a
-perfmon
cortex-m4
+v8r
-cdecp7
ck810et
ccrt
+10e60
rv64imac
dxcontainer
CJK UNIFIED IDEOGRAPH-
lzcnt
lvi-cfi
k6-3
__builtin_sve_svldnf1uh_s64
__builtin_sve_svldnt1_vnum_u16
__builtin_sve_svldnt1sh_gather_u32base_u32
__builtin_sve_svldnt1uw_gather_s64offset_s64
__builtin_sve_svlsl_n_s64_m
__builtin_sve_svlsl_wide_s16_z
q8hq16bq8hq8hq8h
__builtin_sve_svmad_s64_z
__builtin_sve_svmax_n_u64_z
__builtin_sve_svmaxp_s64_m
__builtin_sve_svmin_n_u64_z
__builtin_sve_svminp_s8_m
__builtin_sve_svmla_n_u16_m
__builtin_sve_svmlalt_lane_s64
__builtin_sve_svmls_n_u64_x
__builtin_sve_svmlslt_u64
__builtin_sve_svmsb_n_u64_x
__builtin_sve_svmul_n_s8_m
__builtin_sve_svmulh_n_u8_x
__builtin_sve_svmulx_f32_z
__builtin_sve_svnmad_n_f32_m
__builtin_sve_svnot_b_z
__builtin_sve_svorr_s8_z
vq16bvC*q4UiIi
__builtin_sve_svqabs_s16_x
__builtin_sve_svqadd_u16_x
__builtin_sve_svqdech_pat_u16
__builtin_sve_svqdmlalt_lane_s32
__builtin_sve_svqincb_pat_n_u32
__builtin_sve_svqneg_s32_z
__builtin_sve_svqrshl_n_u32_m
q8sq8sq4iIUWi
__builtin_sve_svqshl_u64_m
__builtin_sve_svqsub_n_u64_m
__builtin_sve_svqsubr_n_u8_x
__builtin_sve_svraddhnb_n_u64
__builtin_sve_svrecpx_f16_m
__builtin_sve_svrevd_u16_z
__builtin_sve_svrhadd_s8_x
__builtin_sve_svrintx_f64_x
__builtin_sve_svrshr_n_s32_x
__builtin_sve_svrsubhnt_n_s16
__builtin_sve_svsel_u64
q16Uiq16UiIUWiq4Ui
__builtin_sve_svsqadd_n_u32_x
vq16bf*q4iq4f
__builtin_sve_svst1_scatter_u64offset_f64
vq16bSc*q2UWiq2Wi
__builtin_sve_svst1h_f16_x4
vQSs*Wiq32s
__builtin_sve_svst1w_vnum_u64
vq16bUs*q24Us
__builtin_sve_svst4_vnum_s16
__builtin_sve_svstnt1_vnum_s16
__builtin_sve_svstnt1h_scatter_u64base_offset_s64
__builtin_sve_svsub_n_s32_x
__builtin_sve_svsubhnt_s32
__builtin_sve_svsubr_n_s64_m
__builtin_sve_svsubwt_s16
__builtin_sve_svtbx_s64
__builtin_sve_svtrn2q_s8
__builtin_sve_svundef4_f16
__builtin_sve_svuqadd_n_s16_z
__builtin_sve_svuzp2_s32
__builtin_sve_svwhilele_b64_s32
__builtin_sve_svxar_n_s8
__builtin_sve_reinterpret_s8_s8
__builtin_sve_reinterpret_s32_f32
__builtin_sve_reinterpret_u16_f16
q8hq2UWi
q2dq16Uc
q4iV4i
vUiIUWiq16fq4fIUWi
__builtin_sme_svmlal_single_za32_u16_vg2x2
__builtin_sme_svmlsl_za32_f16_vg2x2
LLVM ERROR: 
Set assembly output file name (with /FA)
-fdebug-compilation-dir
zihintpause
hlsl
-fdiagnostics-format=
603e
603ev
-fconstant-integer-number-class=
Expected 'kind mangled_name mangled_name', found '
-ffixed-x11
PLEASE submit a bug report to http://developer.apple.com/bugreporter/ and include the crash backtrace.
Enable modules for C++
__builtin_amdgcn_readlane
 default
-Av8
 OMPLowLatMemAlloc
AVX2
SSE2
Overrides: [ 
+popcnt
ObjCObjectPointer
TypeOf
-mdouble-float
NumSGPR
__single
type-parameter-
__ARM_FEATURE_DSP
__builtin_arm_uqasx
clang::__clang_arm_builtin_alias
parallel
__builtin_arm_mve_vabsq_s32
hint
novariants
construct
attiny25
__llvm_prf_vals
attiny84a
__builtin_arm_mve_vcreateq_u16
avr35
Hash table not present
atmega8a
error: invalid contribution to string offsets table in section .
__builtin_arm_mve_vhsubq_u32
parsing address ranges table at offset 0x%llx: %s
 %lld
  LSDA Address: %016llx
atmega168pa
parsing line table prologue at offset 0x%8.8llx: unsupported version %hu
 %2.2hhx
__builtin_arm_mve_vmovltq_x_u16
%08llx %04llx %04llx
indexed (%8.8x) + 0x%x address = 
atmega649
__local
atmega32hvb
 has 
__builtin_arm_mve_vqrshlq_n_u32
NameIndex @ {0:x}: Abbreviation {1:x}: {2} uses an unknown form: {3}.
at90usb1287
-mips1
 for cmd value of: 
X86_64_RELOC_BRANCH
Disable heap memory profiling
Mach-O arm
import name of re-export in export trie data at node: 0x
at BIND_OPCODE_DO_BIND (incorrect ordinal table size, number of BIND_OPCODE_DO_BIND opcodes exceed the count in previous BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB) at BIND_OPCODE_DO_BIND at: 0x
__builtin_arm_mve_vstrwq_scatter_base_wb_p_s32
 starts past end of file
stroff field of LC_SYMTAB command 
struct dylib_module_64
variables, functions, and classes
 x86_THREAD_STATE extends past end of command in 
malformed uleb128, extends past end
 fileoff field in 
PerformPendingInstantiations
__builtin_arm_cde_cx3a
-include-pch
__AVR_AT90PWM3__
__AVR_ATmega640__
__AVR_ATxmega16C4__
__AVR_ATtiny414__
vr28
DIRECTX
pktcount
__builtin_circ_stw
__builtin_HEXAGON_A2_abs
__builtin_HEXAGON_A2_subh_h16_hl
__builtin_HEXAGON_A2_vcmphgt
__builtin_HEXAGON_A4_combineri
__builtin_HEXAGON_C2_muxri
idUIi
__builtin_HEXAGON_M2_hmmpyh_s1
__builtin_HEXAGON_M2_mpy_ll_s1
__builtin_HEXAGON_M2_mpyd_nac_ll_s0
__builtin_HEXAGON_M2_nacci
iUIiii
__builtin_HEXAGON_S2_asl_r_r_or
__builtin_HEXAGON_S2_lsl_r_p
__builtin_HEXAGON_S2_vrndpackwh
__builtin_HEXAGON_Y4_l2fetch
__builtin_HEXAGON_Y6_dmpoll
__builtin_HEXAGON_V6_vaddb
__builtin_HEXAGON_V6_vandqrt_128B
__builtin_HEXAGON_V6_vavguhrnd
__builtin_HEXAGON_V6_vdmpyhsuisat_acc
__builtin_HEXAGON_V6_vgtuh
__builtin_HEXAGON_V6_vminuh_128B
__builtin_HEXAGON_V6_vmpyihb
__builtin_HEXAGON_V6_vpackob
__builtin_HEXAGON_V6_vsh
__builtin_HEXAGON_V6_vsubwsat_128B
__builtin_HEXAGON_V6_vaddubh_acc_128B
__builtin_HEXAGON_V6_vrounduhub
__builtin_HEXAGON_V6_vmpabuu
__builtin_HEXAGON_V6_vsatdw
__builtin_HEXAGON_V6_vdmpy_sf_hf_acc
__builtin_HEXAGON_V6_vmpy_sf_sf
__builtin_HEXAGON_V6_vasrvwuhsat
$fs2
__loongarch__
__builtin_mips_extr_s_h
cstdarg
typeinfo
__builtin_msa_ave_s_h
wordexp.h
statement_attributes_with_gnu_syntax
 #if/#ifndef/#ifdef.
variable(is_parameter)
vssseg3e64_v
-fsanitize-coverage-ignorelist=
xcC*
__nvvm_fmax_nan_xorsign_abs_f16x2
__nvvm_round_d
__nvvm_rcp_rm_d
__nvvm_f2i_rp_ftz
__nvvm_ull2d_rz
__nvvm_vote_uni_sync
V4fiiffff
ULLiULLiD*ULLi
__nvvm_atom_cta_cas_gen_ll
__nvvm_isspacep_global
__imma_m32n8k16_ld_a_u8
__NVPTX__
__builtin_strcat
__builtin_ppc_mtfsb0
__builtin_altivec_vsubsws
__builtin_altivec_vmulesw
V8sV8SsV8Ss
__builtin_altivec_vrfin
__builtin_altivec_crypto_vshasigmaw
__builtin_altivec_vextractdm
V8UsV8UsUiUi
vCc*IiV16Uc
__builtin_vsx_xvxexpsp
dLLd
__builtin_mma_build_acc
__builtin_mma_xvbf16ger2pn
__CRYPTO__
__tdw
__divdeu
__cmplxl
vs41
vs59
__builtin_rvv_vloxseg7ei8_v_tu
__builtin_rvv_vloxseg2ei32_v_tamu
__builtin_rvv_vloxseg6ei64_v_ta
__builtin_rvv_vluxei32_v_tuma
__builtin_rvv_vssseg2e32_v_m
__builtin_rvv_vsuxseg8ei32_v_m
__builtin_rvv_vsoxseg6ei16_v
__builtin_rvv_vwsubu_vv_tu
__builtin_rvv_vwadd_wx_tumu
__builtin_rvv_vor_vv_tamu
__builtin_rvv_vnsra_wx_tumu
__builtin_rvv_vmsgtu_vx_mu
__builtin_rvv_vmaxu_vv_tuma
__builtin_rvv_vmulhsu_vx_tu
__builtin_rvv_vwmul_vx_tama
__builtin_rvv_vnmsub_vv_ta
__builtin_rvv_vmv_v_x_tu
__builtin_rvv_vaadd_vx_tu
__builtin_rvv_vssra_vx_tama
__builtin_rvv_vfwadd_vf_tuma
__builtin_rvv_vfdiv_vf_tuma
__builtin_rvv_vfnmsac_vf_tuma
__builtin_rvv_vfwnmacc_vv_tu
__builtin_rvv_vfsgnj_vv_tamu
__builtin_rvv_vmfle_vv
__builtin_rvv_vredxor_vs_tam
__builtin_rvv_vslideup_vx_ta
__builtin_rvv_vsoxei64_v
__builtin_rvv_vlseg8e8_v_ta
__builtin_rvv_vlseg5e32_v_ta
__builtin_rvv_vlseg8e64_v_tuma
__builtin_rvv_vlseg6e16ff_v_tumu
__builtin_rvv_vlseg2e64ff_v_tumu
__builtin_rvv_vlsseg6e8_v_tama
__builtin_rvv_vlsseg2e32_v_tu
__builtin_rvv_vlsseg5e64_v_ta
__builtin_rvv_vluxseg8ei8_v_ta
__builtin_rvv_vluxseg5ei32_v_ta
__builtin_rvv_vluxseg8ei64_v_tuma
__builtin_rvv_vlse16_v_tamu
__builtin_rvv_vfncvt_f_xu_w_tumu
__builtin_rvv_vfwcvt_f_xu_v_tuma
__builtin_rvv_vsext_vf4_ta
WiWiIUi
__builtin_riscv_sm4ed
myriad2
gr712rc
__builtin_s390_vgfmh
__builtin_s390_vsldb
V8UsV8Usi*
V16UcV16UcV16UcV16Uci*
z196
__builtin_ve_vl_vstu2dncot_vssl
V256dUiV256dV256bV256dUi
__builtin_ve_vl_vsubuw_vsvvl
__builtin_ve_vl_vmulslw_vsvl
__builtin_ve_vl_vcmpul_vsvvl
__builtin_ve_vl_vminswzx_vsvvl
__builtin_ve_vl_pveqv_vvvl
__builtin_ve_vl_pvsll_vvsMvl
__builtin_ve_vl_vsfa_vvssl
__builtin_ve_vl_vfdivd_vsvl
__builtin_ve_vl_pvfmin_vvvvl
__builtin_ve_vl_vfmsbs_vsvvmvl
__builtin_ve_vl_pvfnmsb_vvsvvl
__builtin_ve_vl_vcvtds_vvvl
__builtin_ve_vl_vfmkwne_mvml
__builtin_ve_vl_pvfmkwlonenan_mvml
__builtin_ve_vl_vfmkdltnan_mvl
__builtin_ve_vl_pvfmkslonan_mvl
__builtin_ve_vl_vfsumd_vvl
__builtin_ve_vl_vgtunc_vvssml
LUiV256bUi
__builtin_ve_vl_svob
__builtin_wasm_nearest_f64x2
+extended-const
wasm64
__RDRND__
__AMXBF16__
lzcnt
pentium-mmx
pentium-m
@BT@UAccum
xmm14
SwiftNewTypeAttr
__clang_svuint16x3_t
x86_64-linux-android
OMPDeclareSimdDeclAttr
__OBJC2
__objc_imageinfo
tbd-v2
 __attribute__((signal
__builtin_ia32_movntss
deprecated
Unknown property attr 
 [[clang::__clang_arm_builtin_alias
ignoring the Versions directory within framework because it contains no parsable files: '%0'
__builtin_ia32_vcvtps2ph
platform does not match: '%0' (provided) vs '%1' (found)
 _cdecl
clang Invocation:
 __declspec(__host__
V2dV2dvC*V2OiUcIi
__builtin_ia32_scatterpfdps
V8iV8i
 __attribute__((dllimport
could not generate coverage symbols
__builtin_ia32_vpermi2varq128
--set-installapi-flag
+mabi=
--no-infer-include-paths
gcc::Preprocessor
-fmodules-validate-system-headers
nounroll
--allow-arch-merges
__builtin_ia32_pmovsqw256_mask
macros
diag-style
Force wchar_t to be an unsigned int
Disable the loop vectorization passes
/crt0.o
rv64
i386-linux-gnu
clang-offload-unbundler
     
ld-linux.so.3
__ptrauth
__alignof
__has_unique_object_representations
__fastcall
__int64
greatergreaterequal
annot_pragma_riscv
__builtin_xnu_types_compatible
vec_step
Expected token before separator in datalayout string
DW_TAG_SUN_indirect_inheritance
DW_AT_base_types
DW_AT_rnglists_base
DW_AT_GHS_rso
DW_AT_SUN_f90_assumed_shape_array
DW_AT_APPLE_omit_frame_ptr
DW_OP_const2u
DW_OP_lit28
DW_OP_breg27
DW_ATE_unsigned_fixed
DW_LANG_Swift
DW_MACINFO_define
DW_CFA_restore_state
DW_IDX_compile_unit
R_TOCL
+fp16fml
+v9a
-ssbs
pmuv3
fpv4-dp-d16
cortex-m3
+v6t2
cdecp7
-target-linker-version
ck803efr2
ck810e
-pushpop
-stack-size
10e60
invocation function for block in 
failed to remove lockfile 
standard user-level extension
rv710
rv32imafc
darwin
anyhit
macho
'external-contents': "
cooperlake
retpoline-indirect-calls
four
right-curly-bracket
k6-2
Missing SDKContentRoot
__builtin_sve_svldnf1sb_u64
__builtin_sve_svldnf1uh_s32
__builtin_sve_svldnt1_gather_u32offset_u32
__builtin_sve_svldnt1_vnum_s8
__builtin_sve_svldnt1h_vnum_bf16_x2
__builtin_sve_svldnt1sh_gather_u32base_s32
__builtin_sve_svldnt1ub_gather_u32offset_s32
__builtin_sve_svldnt1uw_gather_s64index_u64
__builtin_sve_svlen_s16
__builtin_sve_svlsl_n_s32_z
__builtin_sve_svlsl_u32_m
__builtin_sve_svlsl_wide_s16_x
__builtin_sve_svlsr_u16_x
__builtin_sve_svmad_f16_m
__builtin_sve_svmad_n_s64_z
__builtin_sve_svmad_s64_x
__builtin_sve_svmax_f64_x
__builtin_sve_svmax_n_u64_x
__builtin_sve_svmaxnm_f32_z
__builtin_sve_svmaxp_s32_x
__builtin_sve_svmin_n_f16_m
__builtin_sve_svmin_n_u64_x
__builtin_sve_svminnm_f64_x
__builtin_sve_svminp_s64_x
__builtin_sve_svmla_lane_f32
__builtin_sve_svmla_n_s8_z
__builtin_sve_svmla_u8_m
__builtin_sve_svmlalt_lane_s32
__builtin_sve_svmls_lane_u32
__builtin_sve_svmls_n_u64_m
__builtin_sve_svmlslb_lane_u64
__builtin_sve_svmlslt_u32
__builtin_sve_svmsb_f64_m
__builtin_sve_svmsb_n_u64_m
__builtin_sve_svmul_f32_x
__builtin_sve_svmul_n_s64_z
__builtin_sve_svmul_u32_z
__builtin_sve_svmulh_n_u8_m
__builtin_sve_svmullb_n_s32
__builtin_sve_svmulx_f32_x
__builtin_sve_svneg_f16_z
__builtin_sve_svnmad_n_f16_z
__builtin_sve_svnmls_f32_z
__builtin_sve_svnor_b_z
__builtin_sve_svorr_n_s32_z
__builtin_sve_svorr_s8_x
__builtin_sve_svpmullb_pair_n_u64
__builtin_sve_svprfb_gather_u32offset
__builtin_sve_svprfw_gather_u32base
__builtin_sve_svqabs_s16_m
__builtin_sve_svqadd_n_u32_x
__builtin_sve_svqadd_u16_m
__builtin_sve_svqdecb_pat_n_u64
q8sq8sIiIUWi
__builtin_sve_svqdecp_u64
__builtin_sve_svqdmlalbt_s64
__builtin_sve_svqdmulh_lane_s64
__builtin_sve_svqincb_pat_n_s64
__builtin_sve_svqincp_n_s64_b8
__builtin_sve_svqneg_s32_x
__builtin_sve_svqrdmlsh_s32
__builtin_sve_svqrshl_n_u16_z
__builtin_sve_svqrshl_u64_z
__builtin_sve_svqrshrnt_n_s32
__builtin_sve_svqshl_n_s8_z
__builtin_sve_svqshl_u32_z
__builtin_sve_svqshrnt_n_u64
__builtin_sve_svqsub_n_u64
__builtin_sve_svqsub_u64_m
__builtin_sve_svqsubr_n_u8_m
q8Usq4Ui
__builtin_sve_svraddhnb_n_u32
__builtin_sve_svrbit_s8_z
q2dq2dq2d
__builtin_sve_svrevb_s16_m
__builtin_sve_svrevd_u16_x
__builtin_sve_svrhadd_n_s32_x
__builtin_sve_svrhadd_s8_m
__builtin_sve_svrintm_f16_z
__builtin_sve_svrintx_f64_m
__builtin_sve_svrshl_n_u8_m
__builtin_sve_svrshr_n_s32_m
__builtin_sve_svrshrnt_n_u16
__builtin_sve_svrsubhnb_u64
__builtin_sve_svscale_n_f16_m
__builtin_sve_svsel_u32
q12iq12iIUWiq4i
__builtin_sve_svset4_u32
__builtin_sve_svshrnt_n_s32
__builtin_sve_svsqadd_n_u32_m
__builtin_sve_svsra_n_s32
__builtin_sve_svst1_scatter_s32index_f32
__builtin_sve_svst1_scatter_u32index_f32
vq16bUWi*q2UWiq2UWi
vq16bUc*Wiq16Uc
__builtin_sve_svst1b_scatter_u64offset_s64
vQUc*Wiq64Uc
vQh*q16h
__builtin_sve_svst1h_scatter_u32offset_u32
__builtin_sve_svst1h_vnum_s16_x4
__builtin_sve_svst1w_scatter_u64base_offset_u64
vQUi*Wiq16Ui
vq16bSs*Wiq16s
__builtin_sve_svst3_u16
vq16by*q32y
vq16bd*Wiq8d
__builtin_sve_svstnt1_scatter_u32base_index_u32
__builtin_sve_svstnt1_vnum_f64
__builtin_sve_svstnt1d_s64_x2
__builtin_sve_svstnt1h_scatter_u64base_index_u64
__builtin_sve_svstnt1w_scatter_u64offset_s64
__builtin_sve_svsub_n_s32_m
__builtin_sve_svsub_u16_m
__builtin_sve_svsubhnt_s16
__builtin_sve_svsublt_u32
__builtin_sve_svsubr_n_s32_z
__builtin_sve_svsubr_u16_z
__builtin_sve_svsubwt_n_u64
__builtin_sve_svtbl_bf16
q4iq4iq4iq4Ui
__builtin_sve_svtrn1q_s16
__builtin_sve_svtrn2q_s64
__builtin_sve_svundef2_u32
q32yv
__builtin_sve_svundef_s32
__builtin_sve_svuqadd_n_s16_x
__builtin_sve_svuzp1_f16
__builtin_sve_svuzp2_s16
__builtin_sve_svwhilege_b64_s64
__builtin_sve_svwhilele_b32_u64
q16bSsC*SsC*
__builtin_sve_svxar_n_s64
__builtin_sve_svzip1q_u8
__builtin_sve_svzip2q_u8
__builtin_sve_reinterpret_s16_u32
q4Siq8y
__builtin_sve_reinterpret_u8_s32
q8Usq2UWi
__builtin_sve_reinterpret_u64_s32
__builtin_sve_reinterpret_f16_u64
q4fq16Sc
__builtin_sve_reinterpret_f64_u8
V2dq2d
__builtin_sve_svdup_neonq_s32
__builtin_sme_svcntsb
__builtin_sme_svmla_lane_za32_f32_vg1x4
__builtin_sme_svmlal_lane_za32_s16_vg2x1
vUiIUWiq8Usq8Us
__builtin_sme_svmlsl_lane_za32_bf16_vg2x1
__builtin_sme_svmlsl_za32_bf16_vg2x4
Hex strings require an exponent
rs780
-fcall-saved-x14
DECL_UNRESOLVED_USING_TYPENAME
-fassume-sane-operator-new
-fbootclasspath=
__builtin_sme_svmls_za64_f64_vg1x2
header-unit
Dump record layout information for all complete types
cmov
Share state based on the PID of the parent command. See also -fdepscan-share-stop.
-fdiagnostics-fixit-info
 ObjCProperty decls, 
 FunctionTemplate decls, 
[:<:]]
-ffixed-form
-ffixed-x10
Program arguments: 
protected
-ffixed-x29
cbuffer 
__builtin_amdgcn_div_scalef
__builtin_amdgcn_fractf
__builtin_amdgcn_readfirstlane
 expansions 
WUiddIi
 CBufferKind
-mcmpb
 eic
Legacy option to specify code object ABI V3 (AMDGPU only)
 LayoutCompatible
 IR_ARCForbiddenType
 AllArg
Enable emitting complete constructors and destructors as aliases when possible
also in 
-mcrc32
nominated 
-mcumode
FunctionProto
ConstantMatrix
Enum
-mdefault-build-attributes
_Sat long _Fract
-mdirect-move
__read_only image2d_array_msaa_depth_t
sysv_abi
__attribute__((__vector_size__(
) */ 
(anonymous namespace)::
__ARM_FEATURE_CMSE
__builtin_arm_sadd8
__builtin_arm_uqadd16
 __attribute__((arm_streaming_compatible))
/.hipVersion
-shared
distribute parallel for
master
taskgroup
target teams loop
atomic_default_mem_order
grainsize
nocontext
__builtin_arm_mve_vbrsrq_n_f32
ppc64
-fPIC
avr25/tiny-stack
attiny24
__llvm_prf_data
attiny4313
failed to compress data (zlib)
profile-summary-large-working-set-size-threshold
__builtin_arm_mve_vcmulq_rot270_x_f16
-fplugin=
avr3
attiny167
__builtin_arm_mve_vddupq_wb_u32
, addr_size = 
avr4
.debug_gnu_pubtypes
0x%8.8llx
atmega88a
debug_macro
0x%4.4llx
 (supported are 
__builtin_arm_mve_vldrbq_s8
op[%u] has type %s but data alignment is zero
 Opcode %x
  Personality Address: %016llx
-fprofile-correction
atmega165p
file_names[%3u]:
       mod_time: 0x%8.8llx
__builtin_arm_mve_vmlaldavq_p_u16
 length %llx
objc_class_stub
<default>
length = 
Use Intel MCU ABI
decoding address ranges: %s
<invalid dwarf unit>
atmega645a
0x%x 
__builtin_arm_mve_vorrq_n_s32
, type_signature = 
__builtin_arm_mve_vqdmladhxq_s32
insufficient space for 64 bit header prefix
__builtin_arm_mve_vqdmulltq_s16
Verifying dwo Units...
DIE has invalid DW_AT_stmt_list encoding:
 (the file table in the prologue is empty)
gnu::randomize_layout
Name Index @ {0:x}: Name table entries [{1}, {2}] are not covered by the hash table.
atmega1284
unsupported compression type (
__builtin_arm_mve_vreinterpretq_u16_f16
-mios-version-min=
more than one LC_MAIN command
LC_SUB_UMBRELLA
LC_UNIXTHREAD
iundefsym in LC_DYSYMTAB load command extends past the end of the symbol table
X86_64_RELOC_SIGNED
single,multiple,virtual
__builtin_arm_mve_vshlcq_m_s32
Mach-O 32-bit i386
__builtin_arm_mve_vshlq_x_u16
ppc64-apple-darwin
for REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB 
for BIND_OPCODE_DO_BIND 
__builtin_arm_mve_vstrhq_scatter_offset_p_s32
bad offset, not in section
 extends past seg_info size 
attiny414
 LC_SYMTAB cmdsize too small
-fprofile-values
atmega1609
structs, unions, classes, and typedefs
LC_NOTE data
 LC_RPATH path.offset field too small, not past the end of the rpath_command struct
) for flavor number 
/rv64imafdc/lp64d
) load command 
Objective-C methods, enums, structs, unions, classes, functions, function pointers, and typedefs
event_t
Unknown architecture named: 
Unimplemented Debug Name
__builtin_arm_mve_vuninitializedq
-mmfocrf
 information
tvOS
xros
__AVR_ATA6616c__
__AVR_ATtiny167__
__AVR_AT90PWM2B__
__AVR_ATmega169A__
__AVR_ATmega64A__
__AVR_ATmega32C1__
__AVR_ATxmega16A4U__
__AVR_ATxmega256A3U__
__AVR_ATtiny214__
probe
svbr
vr27
.dc.w
r31:30
c5:4
upcycle
__builtin_brev_ldh
LLi*LLi*LLiiIi
__builtin_HEXAGON_S2_storerf_pcr
__builtin_HEXAGON_V6_vrmpyub_rtt_acc_128B
__builtin_HEXAGON_A2_combineii
__builtin_HEXAGON_A2_subh_h16_hh
__builtin_HEXAGON_A2_tfrpi
__builtin_HEXAGON_A2_vcmpheq
__builtin_HEXAGON_A2_vsubub
LLiIii
__builtin_HEXAGON_A4_vrmaxw
iiiIi
dLLi
__builtin_HEXAGON_F2_dfclass
__builtin_HEXAGON_M2_acci
__builtin_HEXAGON_M2_hmmpyh_rs1
__builtin_HEXAGON_M2_mmpyuh_rs1
__builtin_HEXAGON_M2_mpy_ll_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s1
__builtin_HEXAGON_M2_mpyd_nac_lh_s1
__builtin_HEXAGON_M2_mpyu_nac_hl_s1
__builtin_HEXAGON_M2_mpyui
__builtin_HEXAGON_M2_vraddh
__builtin_HEXAGON_M4_mpyrr_addi
__builtin_HEXAGON_M5_vrmpybuu
__builtin_HEXAGON_S2_asl_r_r_nac
__builtin_HEXAGON_S2_asr_r_vw
__builtin_HEXAGON_S2_lfsp
__builtin_HEXAGON_S2_lsr_r_p_xor
__builtin_HEXAGON_S2_vrcnegh
__builtin_HEXAGON_S4_extractp_rp
__builtin_HEXAGON_Y2_dczeroa
__builtin_HEXAGON_A7_croundd_rr
__builtin_HEXAGON_Y6_dmpause
__builtin_HEXAGON_V6_pred_scalar2_128B
__builtin_HEXAGON_V6_vabsw_sat_128B
__builtin_HEXAGON_V6_vaddubsat_dv_128B
V16iV64bi
__builtin_HEXAGON_V6_vasrhubsat_128B
__builtin_HEXAGON_V6_vavguh_128B
__builtin_HEXAGON_V6_vdmpybus_dv
__builtin_HEXAGON_V6_vdmpyhsuisat_128B
__builtin_HEXAGON_V6_veqw
__builtin_HEXAGON_V6_vgtub_xor_128B
__builtin_HEXAGON_V6_vlsrhv
__builtin_HEXAGON_V6_vminuh
__builtin_HEXAGON_V6_vmpyewuh
__builtin_HEXAGON_V6_vmpyih_acc_128B
__builtin_HEXAGON_V6_vmpyuh_acc
__builtin_HEXAGON_V6_vpackhub_sat_128B
__builtin_HEXAGON_V6_vrmpyub_acc
V64iV32i
__builtin_HEXAGON_V6_vsubhnq
__builtin_HEXAGON_V6_vsubwsat
__builtin_HEXAGON_V6_vxor
__builtin_HEXAGON_V6_vaddubh_acc
V32iV32iV32iV32iUIi
__builtin_HEXAGON_V6_vmpyowh_64_acc_128B
__builtin_HEXAGON_V6_vavgbrnd
V32iV32iLLi
__builtin_HEXAGON_V6_vscattermh_add
__builtin_HEXAGON_V6_vrotr_128B
__builtin_HEXAGON_V6_vadd_sf_sf
__builtin_HEXAGON_V6_vdmpy_sf_hf_128B
__builtin_HEXAGON_V6_vmax_sf
__builtin_HEXAGON_V6_vmpy_sf_hf_acc_128B
__builtin_HEXAGON_V6_vasrvwuhrndsat_128B
__LANAI_V11__
$fs1
$fs7
__mc68060__
iV2sV2s
__builtin_mips_cmp_le_ph
-ehcontguard
cassert
csetjmp
-arm-add-build-attributes
sstream
__builtin_msa_adds_u_w
netinet/tcp.h
sys/mman.h
utmpx.h
__DATE__
__has_extension
__is_target_vendor
attribute_deprecated_with_message
pragma_clang_attribute_external_declaration
unknown-unknown-
__builtin_msa_fsult_d
 max include stack depth
V2SLLiV2SLLiIUiLLi
variable(is_thread_local)
__builtin_msa_mini_s_h
vssseg2e32_v
__builtin_huge_val
__builtin_inff
__builtin_modfl
__builtin_nanf16
Enable inline 8-bit counters in sanitizer coverage
__nvvm_fmin_bf16
__nvvm_fmax_ftz_xorsign_abs_f16x2
__nvvm_mul_rz_d
__nvvm_round_f
__nvvm_fma_rn_ftz_sat_f16x2
__nvvm_rcp_rz_d
__nvvm_d2f_rn_ftz
__nvvm_f2i_rm
__nvvm_f2ull_rn
dULLi
__nvvm_bar0_or
__nvvm_vote_any_sync
__nvvm_mbarrier_arrive_shared
__builtin_ptx_read_image3Dff_
__nvvm_atom_cta_add_gen_d
__nvvm_atom_max_gen_ull
__nvvm_atom_sys_and_gen_l
__nvvm_atom_cas_gen_ll
__nvvm_ldg_s2
bvC*
__hmma_m16n16k16_mma_f16f32
__imma_m32n8k16_ld_a_s8
__mma_bf16_m8n32k16_mma_f32
__PTX__
65001
vfwnmsac_vv
__builtin_ppc_tdw
__builtin_ppc_setb
__builtin_ppc_extract_sig
__builtin_ppc_maxfl
__builtin_altivec_vsubuhs
__builtin_altivec_vrfim
__builtin_altivec_vmuleuw
V4UiV2SLLiV2SLLi
__builtin_altivec_vcmpgtsh
V8Us
__builtin_altivec_vsro
iiV2LLiV2LLi
__builtin_altivec_crypto_vpermxor_be
__builtin_altivec_vprtybq
__builtin_altivec_vextractwm
V4UiULLi
__builtin_altivec_vinshlx
V2ULLiV4UiV4UiUi
__builtin_vsx_strmb
__builtin_vsx_xvmsubadp
__builtin_vsx_xvxexpdp
V2ULLiV16UcIi
__builtin_truncf128_round_to_odd
__builtin_ttest
__builtin_vsx_build_pair
__builtin_mma_pmxvi16ger2pp
__builtin_mma_xvbf16ger2pp
__LONG_DOUBLE_128__
__POWER8_VECTOR__
__iospace_eieio
__stbcx
__extract_exp
__divwe
__builtin_popcountll
__addex
vs10
vs40
vs58
__riscv_
__builtin_rvv_vluxei8_v_tamu
__builtin_rvv_vloxseg7ei8_v_ta
__builtin_rvv_vloxseg4ei16_v_tuma
__builtin_rvv_vloxseg2ei32_v_tama
__builtin_rvv_vloxseg8ei32_v_tu
__builtin_rvv_vloxseg5ei64_v_tamu
__builtin_rvv_vsse64_v_m
__builtin_rvv_vluxei32_v_tumu
__builtin_rvv_vsseg7e64_v_m
__builtin_rvv_vssseg2e32_v
__builtin_rvv_vsuxseg6ei8_v_m
__builtin_rvv_vsuxseg8ei32_v
__builtin_rvv_vloxei32_v_tuma
__builtin_rvv_vsoxseg5ei16_v_m
__builtin_rvv_vsoxseg8ei64_v_m
__builtin_rvv_vwsubu_vv_ta
__builtin_rvv_vwsub_vx_tuma
__builtin_rvv_vwadd_wx_tu
__builtin_rvv_vmsbc_vxm
__builtin_rvv_vor_vv_tama
__builtin_rvv_vsra_vv_tu
__builtin_rvv_vnsra_wx_tu
__builtin_rvv_vmsltu_vx_mu
__builtin_rvv_vmsgtu_vx_ma
__builtin_rvv_vmsge_vx_tumu
__builtin_rvv_vmaxu_vv_tumu
__builtin_rvv_vmulh_vv_tu
__builtin_rvv_vmulhsu_vx_ta
__builtin_rvv_vremu_vv_tuma
__builtin_rvv_vwmul_vx_tuma
__builtin_rvv_vmacc_vx_ta
__builtin_rvv_vnmsub_vv_tu
__builtin_rvv_vwmacc_vx_tuma
__builtin_rvv_vmv_v_x_ta
__builtin_rvv_vssubu_vx_tamu
__builtin_rvv_vaadd_vx_ta
__builtin_rvv_vsmul_vv_tuma
__builtin_rvv_vssra_vx_tuma
__builtin_rvv_vfadd_vf_tu
__builtin_rvv_vfwadd_vf_tumu
__builtin_rvv_vfwsub_wv_tuma
__builtin_rvv_vfdiv_vf_tumu
__builtin_rvv_vfnmacc_vv_ta
__builtin_rvv_vfnmsac_vf_tumu
__builtin_rvv_vfmsub_vv_tamu
__builtin_rvv_vfwmacc_vf_tamu
__builtin_rvv_vfwnmsac_vf_tuma
__builtin_rvv_vfsgnj_vv_tama
__builtin_rvv_vfabs_v_tu
__builtin_rvv_vmflt_vf_mu
__builtin_rvv_vredmaxu_vs_tumu
__builtin_rvv_vredxor_vs_tum
__builtin_rvv_vfwredusum_vs_ta
__builtin_rvv_vslideup_vx_tu
__builtin_rvv_vfslide1down_vf_tumu
__builtin_rvv_vsoxei32_v_m
__builtin_rvv_vlseg4e8_v_ta
__builtin_rvv_vlseg7e8_v_tamu
__builtin_rvv_vlseg6e16_v_tama
__builtin_rvv_vlseg4e32_v_tamu
__builtin_rvv_vlseg3e64_v_tumu
__builtin_rvv_vlseg8e64_v_tumu
__builtin_rvv_vlseg8e8ff_v_ta
__builtin_rvv_vlseg6e16ff_v_tu
__builtin_rvv_vlseg4e32ff_v_tama
__builtin_rvv_vlseg2e64ff_v_tu
__builtin_rvv_vlseg8e64ff_v_tumu
__builtin_rvv_vlsseg6e8_v_tuma
__builtin_rvv_vlsseg4e16_v_ta
__builtin_rvv_vlsseg2e32_v_ta
__builtin_rvv_vlsseg6e32_v_tama
__builtin_rvv_vlsseg4e64_v_tamu
__builtin_rvv_vluxseg3ei8_v_ta
__builtin_rvv_vluxseg7ei8_v_tamu
__builtin_rvv_vluxseg6ei16_v_tama
__builtin_rvv_vluxseg4ei32_v_tamu
__builtin_rvv_vluxseg3ei64_v_tumu
__builtin_rvv_vluxseg8ei64_v_tumu
__builtin_rvv_vwcvtu_x_x_v_tuma
__builtin_rvv_vlse16_v_tama
__builtin_rvv_vfcvt_rtz_xu_f_v_tamu
__builtin_rvv_vfncvt_f_xu_w_tu
__builtin_rvv_vfrec7_v_tu
__builtin_rvv_vfwcvt_f_xu_v_tumu
__builtin_rvv_vmclr_m
__builtin_rvv_vsext_vf2_tamu
ZiZi
__builtin_riscv_aes64ks1i_64
__builtin_riscv_sha512sum1_64
sx34
__myriad2__
ma2x8x
ut699
__builtin_s390_vupllf
V8SsV8UsV8Usi*
__builtin_s390_vgfmb
__builtin_s390_vmhh
__builtin_s390_vslb
__builtin_s390_vfeeb
__builtin_s390_vistrhs
__builtin_s390_vlrl
__builtin_s390_vstrsb
-fsycl-is-host
__builtin_ve_vl_vstncot_vssl
__builtin_ve_vl_vstu2dot_vssml
V256ddV256dUi
__builtin_ve_vl_vmv_vsvmvl
__builtin_ve_vl_vaddswsx_vsvmvl
__builtin_ve_vl_vsubuw_vsvl
__builtin_ve_vl_vmulul_vvvl
__builtin_ve_vl_vmulslw_vvvvl
__builtin_ve_vl_vdivswzx_vvvl
__builtin_ve_vl_vcmpul_vsvl
__builtin_ve_vl_vcmpsl_vvvvl
__builtin_ve_vl_vminswzx_vsvl
__builtin_ve_vl_pvand_vsvMvl
__builtin_ve_vl_veqv_vsvmvl
__builtin_ve_vl_vbrv_vvl
__builtin_ve_vl_pvsll_vvvMvl
__builtin_ve_vl_vslal_vvvl
__builtin_ve_vl_vsral_vvsmvl
__builtin_ve_vl_vfsubs_vvvl
__builtin_ve_vl_vfdivd_vvvvl
__builtin_ve_vl_vfmaxd_vvvl
__builtin_ve_vl_pvfmin_vvvl
__builtin_ve_vl_vfmads_vvsvmvl
__builtin_ve_vl_vfmsbs_vvvvmvl
__builtin_ve_vl_pvfnmad_vsvvvl
__builtin_ve_vl_pvfnmsb_vvsvl
__builtin_ve_vl_vcvtwssx_vvvl
__builtin_ve_vl_vcvtds_vvl
__builtin_ve_vl_vfmkllt_mvl
__builtin_ve_vl_vfmkwne_mvl
__builtin_ve_vl_pvfmkwlone_mvml
__builtin_ve_vl_pvfmkwupnenan_mvl
__builtin_ve_vl_pvfmkwgtnan_Mvl
__builtin_ve_vl_vfmkdgtnan_mvml
__builtin_ve_vl_vfmksgenan_mvl
__builtin_ve_vl_pvfmksupnum_mvml
__builtin_ve_vl_pvfmksne_Mvl
__builtin_ve_vl_vsuml_vvml
__builtin_ve_vl_vfrmaxsfst_vvvl
__builtin_ve_vl_vgtunc_vvssvl
__builtin_ve_vl_vscuot_vvssl
__builtin_ve_vl_pcvm_sml
__builtin_ve_vl_fencec_s
__builtin_wasm_sub_sat_s_i16x8
__builtin_wasm_any_true_v128
__builtin_wasm_trunc_f64x2
__builtin_wasm_relaxed_trunc_s_i32x4_f32x4
-reference-types
wasm32
+invpcid
atom
__LZCNT__
__AVX512IFMA__
__AMXINT8__
avx512vnni
xsavec
@BT@SatULongAccum
RISCVInterruptAttr
ReturnsNonNullAttr
xmm10
__rvv_int8m1_t
__rvv_uint16m1_t
r11d
intel_sub_group_avc_ime_result_single_reference_streamout_t
__SVFloat16_t
V1OiV1OiV1Oi
ModeAttr
__objc_selrefs
__builtin_ia32_pshufb
__builtin_ia32_cmpneqsd
 uniform
elf_x86_64
 [[clang::amdgpu_num_vgpr
  constants:
uuid
 __attribute__((acquire_handle
/../sysroot
linkage
 [[clang::always_destroy
__builtin_ia32_vec_ext_v16hi
 [[clang::argument_with_type_tag
pointer_with_type_tag
__builtin_ia32_maskloadq256
missing target '%0'
bit field %0 has width %1 here
%0 has property %1 here
/mipsel-r2-hard-nan2008
inlining is not supported for output file type '%0'
virtual filesystem overlay file '%0' not found
__builtin_ia32_vpcomw
/mipsel-r6-hard
/* the next header is configured with pre-includes. It might be include-what-you-use violation. Can it be removed? */
 __attribute__((device_builtin_texture_type
/micromips.*/64
ModuleCache
vUcV8OivC*IiIi
File does not exist
DRIVERKIT_DEPLOYMENT_TARGET
 __attribute__((convergent
SDKROOT
vV16c*V16cUs
 __declspec(empty_bases
 __attribute__((flag_enum
vv*UcV4OiV4iIi
 [[gnu::fastcall
 [[gnu::flatten
__builtin_ia32_cvtpd2qq256_mask
--output
--public-sdk-content-root
mesh
__builtin_ia32_movdqa64store512_mask
/etc/env.d/gcc
 __attribute__((leaf
UiV4fIi
-current_version
-exclude-project-header
Add additional public header location for parsing
__builtin_ia32_cvtmask2q256
usr/local/include
/System/Cryptexes/OS/System/iOSSupport
private-header
xnack
0123456789
__builtin_ia32_vfmaddsd3_mask
' target
<clang debug/development internal options>
<mips features group>
-fno-cuda-rdc
__builtin_ia32_cvtne2ps2bf16_512
output=
hexagon/lib
-fopenmp
c++2a
--offload-arch
-%%%%%%.
rv32
mutableCopy
 __attribute__((objc_requires_property_definitions
Disable modules for C++
 [-Werror
Failed reading rec code: %s
Unexpected end of file reading %u of %u bits
__objc_no
restrict
__null
__is_constructible
__is_union
__is_reference
__stdcall
__noinline__
__leave
r_paren
greaterequal
annot_pragma_pack
annot_pragma_attribute
__is_referenceable
__is_convertible
__builtin_tmo_get_type_descriptor
none
Trailing separator in datalayout string
Import constant global variables with references
DW_TAG_unspecified_type
DW_TAG_SUN_union_template
DW_AT_name
DW_AT_artificial
DW_AT_ranges
DW_AT_addr_base
DW_AT_MIPS_software_pipeline_depth
DW_AT_GHS_frames
DW_AT_SUN_alignment
DW_AT_SUN_f90_allocatable
DW_AT_BORLAND_property_write
DW_AT_APPLE_runtime_class
DW_FORM_exprloc
DW_OP_const1s
DW_OP_le
DW_OP_lit27
DW_OP_reg28
DW_OP_breg26
DW_OP_HP_fltconst4
DW_ATE_signed_fixed
DW_VIRTUALITY_pure_virtual
DW_LANG_C11
DW_CC_LLVM_IntelOclBicc
DW_LNE_set_discriminator
DW_RLE_offset_pair
DW_CFA_remember_state
DW_UT_split_compile
NULL
R_TLS
R_TOCU
apple-s4
+fullfp16
-fp-armv8
ssbs
-hbc
-mops
-vfp4d16
fp4-dp-d16
arm10e
sc300
xscale
8.3-A
armv8-r
idiv
-cdecp6
ulong
ck803efht
ck803efr1
ck804et
r807f
-fdivdu
+pushpop
+doloop
+stack-size
-mp1e2
-7e10
thread-local wrapper routine for 
____Z
failed to create link 
zvl65536b
non-standard user-level extension
Included from 
>; invalid mangling?
gfx902
rv670
rv32imac
In the report, sort the timers in each group in wall clock time order
spir64
contiki
intersection
mipsn32el
goff
Set source and runtime encoding to UTF-8 (default)
'type': 'file',
output has open proxy
pentium3
cascadelake
bdver3
widekl
hreset
retpoline-indirect-branches
Unexpected token
invalid version format
three
right-brace
.0.0
Cannot dup2
projectName
__builtin_sve_svldff1uw_u64
__builtin_sve_svldnf1_vnum_f16
__builtin_sve_svldnf1sb_u32
__builtin_sve_svldnf1sw_u64
__builtin_sve_svldnf1ub_vnum_u64
__builtin_sve_svldnt1_gather_s64index_s64
__builtin_sve_svldnt1_gather_u32offset_s32
__builtin_sve_svldnt1_s16
__builtin_sve_svldnt1_vnum_s64
__builtin_sve_svldnt1d_u64_x2
__builtin_sve_svldnt1h_u16_x4
__builtin_sve_svldnt1sb_gather_u64base_offset_s64
__builtin_sve_svldnt1sh_gather_u32base_offset_u32
__builtin_sve_svldnt1sw_gather_u64base_index_s64
__builtin_sve_svldnt1ub_gather_u32base_u32
__builtin_sve_svldnt1uh_gather_u32base_s32
__builtin_sve_svldnt1uw_gather_s64index_s64
__builtin_sve_svldnt1w_u32_x2
UWiq2d
__builtin_sve_svlogb_f16_m
__builtin_sve_svlsl_n_s32_x
__builtin_sve_svlsl_n_u8_z
__builtin_sve_svlsl_u16_z
__builtin_sve_svlsl_wide_n_s8_x
__builtin_sve_svlsl_wide_s16_m
q16Ucq16bq16Ucq2UWi
__builtin_sve_svlsr_u16_m
__builtin_sve_svlsr_wide_n_u32_z
__builtin_sve_svlsr_wide_u8_z
__builtin_sve_svmad_n_f32_z
__builtin_sve_svmad_n_s64_x
__builtin_sve_svmad_n_u64_z
q2Wiq16bq2Wiq2Wiq2Wi
__builtin_sve_svmad_u64_z
__builtin_sve_svmax_f64_m
__builtin_sve_svmax_n_s32_z
__builtin_sve_svmax_n_u64_m
__builtin_sve_svmax_u16_x
__builtin_sve_svmaxnm_f32_x
__builtin_sve_svmaxnmp_f32_x
__builtin_sve_svmaxp_s32_m
__builtin_sve_svmaxv_s32
__builtin_sve_svmin_f64_z
__builtin_sve_svmin_n_s64_x
__builtin_sve_svmin_n_u64_m
__builtin_sve_svmin_u32_m
__builtin_sve_svminnm_f64_m
__builtin_sve_svminnmp_f64_x
__builtin_sve_svminp_s64_m
__builtin_sve_svminv_s8
q8hq8hq8hq8hIUWi
__builtin_sve_svmla_n_f64_m
__builtin_sve_svmla_n_s8_x
__builtin_sve_svmla_s32_z
__builtin_sve_svmla_u64_z
q4fq4fq8hh
__builtin_sve_svmlalt_lane_f32
__builtin_sve_svmls_f16_m
__builtin_sve_svmls_lane_u16
__builtin_sve_svmls_n_s32_z
__builtin_sve_svmls_n_u32_z
__builtin_sve_svmls_u16_x
__builtin_sve_svmlslb_lane_u32
__builtin_sve_svmlslt_lane_s32
__builtin_sve_svmlslt_u16
__builtin_sve_svmovlb_u32
__builtin_sve_svmsb_f32_z
__builtin_sve_svmsb_n_s32_x
__builtin_sve_svmsb_n_u32_z
__builtin_sve_svmsb_u16_m
__builtin_sve_svmul_f32_m
__builtin_sve_svmul_n_f16_z
__builtin_sve_svmul_n_s64_x
__builtin_sve_svmul_s16_x
__builtin_sve_svmul_u32_x
__builtin_sve_svmulh_n_s8_m
__builtin_sve_svmulh_n_u64_z
__builtin_sve_svmulh_u32_z
__builtin_sve_svmullb_n_s16
__builtin_sve_svmullt_n_s32
__builtin_sve_svmulx_f32_m
__builtin_sve_svnbsl_n_s64
__builtin_sve_svneg_f16_x
__builtin_sve_svneg_s8_m
__builtin_sve_svnmad_n_f16_x
__builtin_sve_svnmla_f64_x
__builtin_sve_svnmls_f32_x
__builtin_sve_svnmsb_f32_m
__builtin_sve_svnmsb_n_f64_z
__builtin_sve_svnot_u32_m
__builtin_sve_svorr_n_s32_x
__builtin_sve_svorr_n_u8_m
__builtin_sve_svorr_s8_m
__builtin_sve_svorv_u32
__builtin_sve_svpmullb_pair_n_u32
__builtin_sve_svpmullt_u64
vq16bq4UiWiIi
__builtin_sve_svprfd_gather_u64base_index
__builtin_sve_svprfw_gather_s64index
__builtin_sve_svptrue_b16
__builtin_sve_svptrue_pat_b8
__builtin_sve_svqadd_n_s32_x
__builtin_sve_svqadd_n_u32_m
q4iq4iq4i
__builtin_sve_svqadd_u16
__builtin_sve_svqcadd_s64
UiUiIiIUWi
__builtin_sve_svqdecd_u64
__builtin_sve_svqdech_pat_s16
__builtin_sve_svqdecp_n_u32_b8
q4Uiq4Uiq16b
__builtin_sve_svqdecw_u32
__builtin_sve_svqdmlalbt_s32
__builtin_sve_svqdmlslbt_n_s16
__builtin_sve_svqdmulh_lane_s32
__builtin_sve_svqdmullb_s64
__builtin_sve_svqincb_pat_n_s32
__builtin_sve_svqinch_n_u64
__builtin_sve_svqincp_n_s64_b64
__builtin_sve_svqincw_n_s64
__builtin_sve_svqneg_s32_m
__builtin_sve_svqrdmlah_n_s16
__builtin_sve_svqrdmlsh_s16
__builtin_sve_svqrshl_n_s16_z
__builtin_sve_svqrshl_n_u16_x
__builtin_sve_svqrshl_s64_x
__builtin_sve_svqrshl_u64_x
q16Ucq16UiIUWi
q16Scq16Scq8sIUWi
q16Ucq16Ucq8sIUWi
__builtin_sve_svqshl_n_s8_x
__builtin_sve_svqshl_s32_m
__builtin_sve_svqshl_u32_x
__builtin_sve_svqshlu_n_s64_z
__builtin_sve_svqshrnt_n_u32
__builtin_sve_svqsub_n_s64_m
__builtin_sve_svqsub_n_u32_z
__builtin_sve_svqsub_s64_m
__builtin_sve_svqsub_u64
__builtin_sve_svqsubr_n_s8_m
__builtin_sve_svqsubr_n_u64_z
__builtin_sve_svqsubr_u32_z
__builtin_sve_svqxtnb_u32
q16Ucq8s
__builtin_sve_svraddhnb_n_u16
__builtin_sve_svraddhnt_u16
__builtin_sve_svrbit_s8_x
__builtin_sve_svrecpe_f16
__builtin_sve_svrecps_f64
__builtin_sve_svrev_f64
__builtin_sve_svrev_u8
__builtin_sve_svrevb_u64_x
__builtin_sve_svrevd_u16_m
__builtin_sve_svrevh_u32_m
__builtin_sve_svrhadd_n_s32_m
__builtin_sve_svrhadd_n_u64_z
__builtin_sve_svrhadd_s64_z
__builtin_sve_svrinta_f32_x
__builtin_sve_svrintm_f16_x
__builtin_sve_svrintp_f16_m
__builtin_sve_svrintx_f32_z
__builtin_sve_svrshl_n_s32_z
__builtin_sve_svrshl_n_u64_z
__builtin_sve_svrshl_u16_x
__builtin_sve_svrshr_n_s16_z
q2UWiq16bq2UWiIUWi
__builtin_sve_svrshrnt_n_s64
__builtin_sve_svrsra_n_u16
__builtin_sve_svrsubhnb_u32
__builtin_sve_svsbclt_n_u32
__builtin_sve_svscale_f64_z
__builtin_sve_svsel_b
__builtin_sve_svsel_u16
q8Uiq8UiIUWiq4Ui
__builtin_sve_svset3_s32
q32hq32hIUWiq8h
q32Usq32UsIUWiq8Us
q4Uiq8UsIUWi
__builtin_sve_svshrnt_n_s16
__builtin_sve_svsplice_f16
__builtin_sve_svsqadd_n_u16_z
__builtin_sve_svsqadd_u8_m
__builtin_sve_svsra_n_s16
vq16by*q8y
vq16bSc*q16Sc
__builtin_sve_svst1_scatter_s64offset_u64
vq16bq4Uiq4Ui
vq16bq2UWiWiq2UWi
__builtin_sve_svst1_scatter_u64index_u64
vq16bd*Wiq2d
__builtin_sve_svst1_vnum_u8
vq16bSc*q2Wiq2Wi
__builtin_sve_svst1b_scatter_u64base_u64
vq16bSc*Wiq4i
__builtin_sve_svst1b_vnum_u8_x4
vQd*Wiq8d
__builtin_sve_svst1h_f16_x2
vq16bSs*q2Wiq2Wi
__builtin_sve_svst1h_scatter_u32offset_s32
vQUs*q32Us
vQSs*Wiq16s
vQf*q16f
__builtin_sve_svst1w_scatter_u64base_offset_s64
vQf*Wiq8f
__builtin_sve_svst1w_vnum_u32_x4
vq16bUs*q16Us
__builtin_sve_svst2_vnum_s16
vq16by*q24y
vq16bSc*q48Sc
vq16bSs*Wiq24s
__builtin_sve_svst4_bf16
vq16bUs*q32Us
__builtin_sve_svst4_vnum_f64
__builtin_sve_svstnt1_f16
__builtin_sve_svstnt1_scatter_u32base_index_s32
__builtin_sve_svstnt1_scatter_u64base_s64
__builtin_sve_svstnt1_vnum_f32
__builtin_sve_svstnt1b_scatter_u32offset_s32
__builtin_sve_svstnt1d_f64_x4
__builtin_sve_svstnt1h_scatter_s64index_s64
__builtin_sve_svstnt1h_scatter_u64base_index_s64
__builtin_sve_svstnt1w_f32_x2
__builtin_sve_svstnt1w_scatter_u64index_u64
__builtin_sve_svsub_f64_m
__builtin_sve_svsub_n_s16_z
__builtin_sve_svsub_n_u64_z
__builtin_sve_svsub_s8_z
__builtin_sve_svsubhnb_n_u32
__builtin_sve_svsubhnt_n_u64
__builtin_sve_svsublbt_n_s16
__builtin_sve_svsublt_u16
__builtin_sve_svsubr_f64_z
__builtin_sve_svsubr_n_s32_x
__builtin_sve_svsubr_n_u8_x
__builtin_sve_svsubr_u16_x
__builtin_sve_svsubwb_s16
__builtin_sve_svsubwt_n_u32
__builtin_sve_svtbl2_s16
q16Ucq32Ucq16Uc
__builtin_sve_svtbl_u16
__builtin_sve_svtbx_s32
q8yq8yq8y
__builtin_sve_svtrn1q_f64
__builtin_sve_svtrn2_s16
__builtin_sve_svtrn2q_s32
__builtin_sve_svundef2_f16
q16Usv
__builtin_sve_svundef3_s32
__builtin_sve_svundef4_bf16
__builtin_sve_svundef4_u32
q8sv
__builtin_sve_svunpkhi_s32
__builtin_sve_svuqadd_n_s16_m
__builtin_sve_svuqadd_s64_z
__builtin_sve_svuzp1_bf16
__builtin_sve_svuzp1q_s32
__builtin_sve_svuzp2_f64
__builtin_sve_svuzp2q_u32
__builtin_sve_svwhilege_b64_s32
__builtin_sve_svwhilegt_b64_s64
__builtin_sve_svwhilele_b32_u32
__builtin_sve_svwhilelt_b64_s64
__builtin_sve_svwhilerw_s16
__builtin_sve_svwhilewr_f16
__builtin_sve_svxar_n_s32
__builtin_sve_svzip1_s8
__builtin_sve_svzip1q_u64
__builtin_sve_svzip2_u8
__builtin_sve_svzip2q_u64
__builtin_sve_reinterpret_s8_f32
q8Ssq8Us
__builtin_sve_reinterpret_s32_s32
__builtin_sve_reinterpret_s32_bf16
__builtin_sve_reinterpret_s64_u32
q16Ucq8Ss
__builtin_sve_reinterpret_u8_f64
__builtin_sve_reinterpret_u16_u64
q4Uiq16Uc
q2UWiq8Ss
__builtin_sve_reinterpret_u64_f64
q8hq4Ui
__builtin_sve_reinterpret_bf16_u8
__builtin_sve_reinterpret_f32_s8
__builtin_sve_reinterpret_f32_bf16
q2dq2SWi
V4iq4i
__builtin_sve_svget_neonq_f64
q4Uiq4UiV4Ui
q8sV8s
__builtin_sve_svdup_neonq_bf16
__builtin_sme_svaddva_za64_u64
__builtin_sme_svld1_ver_vnum_za128
vUiIUWiq8fq4fIUWi
__builtin_sme_svmla_za64_f64_vg1x2
vUiIUWiq32hq8hIUWi
__builtin_sme_svmlal_single_za32_bf16_vg2x4
__builtin_sme_svmlal_single_za32_u16_vg2x1
__builtin_sme_svmlal_za32_u16_vg2x2
__builtin_sme_svmls_za64_f64_vg1x4
__builtin_sme_svmlsl_single_za32_f16_vg2x2
__builtin_sme_svmlsl_za32_bf16_vg2x2
Allocation failed
 __attribute__((os_returns_retained
static
wWinMain
-fcache-disable-replay
Make the x13 register call-saved (AArch64 only)
-fcall-saved-x8
malformed section 
-fbinutils-version=
Enable the 'blocks' language feature
-fbranch-target-identification
FunctionTemplate
Restrict code to those available for App Extensions
-fassociative-math
-fauto-profile=
V16iV16iV16iUs
-fapinotes-modules
-fasync-exceptions
-fdwarf2-cfi-asm
RealFileSystem using 
Only run the driver.
Print option name with mappable diagnostics
custom
Undefine macro
 ExternCContext decls, 
With -fdepscan, seamlessly filter the CAS filesystem to apply the given prefix, updating the command-line to match.
-fdepscan-share-parent
Turn on -fdepscan=auto.
 Empty decls, 
-fdeclspec
Scan for dependencies ahead of compiling, generating a pruned CAS tree to send to -fcas-fs. Values are 'auto', 'daemon' (see -fdepscan-share and -fdepscan-share-parent), 'inline', or 'off' (default).
-gdbx
 Typedef decls, 
Assume all functions with C linkage do not unwind
-ffat-lto-objects
zve64x
Use the experimental C++ class ABI for classes with virtual tables
 ImplicitParam decls, 
enable extended encoding of block type signature
-ffixed-d4
Reserve the d7 register (M68k only)
Reserve register r19 (Hexagon only)
Run the SLP vectorization passes
REG_NOMATCH
unnamed-global-constant
-ffixed-x24
volatile
extern "
Missing RuntimeRoot
zdinx
__builtin_amdgcn_s_setreg
vUiUi
dddbb*
__builtin_amdgcn_sqrt
__builtin_amdgcn_fract
__builtin_amdgcn_uicmp
__builtin_amdgcn_ds_bpermute
+spe
__builtin_amdgcn_grid_size_z
__builtin_amdgcn_cubetc
 Extern
 TextureCube
 TypedBuffer
 Compute
 Mesh
 hw0
gfx940-insts
 DT_Host
 OMF_alloc
 user
 NullResult
 Hidden
__builtin_r600_read_tidig_x
 AddressDiscrimination
 Skip
 UnrollCount
 Disable
 Full
__ibm128
 abstract
 exists
 needs_overload_resolution
 implicit_has_const_param
enum
Attributed
Complex
DependentVector
image1d_buffer_t
v189
SubstTemplateTypeParm
(error)
unsigned __int128
_Fract
_Sat short _Accum
_Sat unsigned long _Accum
<dependent type>
exec_lo
__read_only image2d_msaa_depth_t
aarch64_far_address_space
__read_write image2d_depth_t
fastcall
ms_abi
swift_async_context
gcrt0_64.o
__constant__
__vector __bool 
 __ended_by(
gnu::alloc_align
a234
-fno-init-local-zero
8M_MAIN
+vfp4d16sp
+fp16
-neonfp
__XSCALE__
__ARM_FEATURE_CDE_COPROC
UiiUi
__builtin_arm_qsub8
__builtin_arm_sadd16
__builtin_arm_uhasx
__builtin_arm_uhsub16
ROCM_PATH
-mexception-handling
 in the vbtable, 
begin declare variant
depobj
__builtin_arm_mcr2
for simd
cf_returns_retained
parallel sections
target parallel do
target teams
target teams distribute simd
teams distribute simd
masked
adjust_args
__builtin_arm_mve_vaddvaq_u16
exclusive
__builtin_arm_mve_vbicq_m_n_s32
at90s2313
-mfix-cortex-a57-aes-1742098
safelen
at90s2343
armeb
at90s4434
simd
unified_address
host
nvidia
allow_templates
Enable name/filename string compression
__builtin_arm_mve_vcmpgtq_m_n_s16
ata6616c
-mfprnd
function value site count change detected (counter mismatch)
-mfpmath=
A count is cold if it is below the minimum count to reach this percentile of total counts.
attiny461a
Hash function
Name@0x
Atom 
Invalid section offset
Abbrev
CU[%u]: 0x%08llx
Abbreviations
__builtin_arm_mve_vcvtq_x_u32_f32
0x%04x
__builtin_arm_mve_vdupq_n_f16
-mfunction-return=
.debug_line.dwo
.debug_line_str
.debug_pubnames
__builtin_arm_mve_vgetq_lane_u16
 contents:
clang::min_vector_width
debug_aranges
debug_loc
__builtin_arm_mve_vidupq_x_n_u8
Address table header: 
none,cf,cf-nochecks
 has unsupported address size: 
__builtin_arm_mve_vld4q_u32
__builtin_arm_mve_vldrbq_gather_offset_z_u32
OT_None
op[%u] has OperandType OT_Offset which produces a signed result, call getOperandAsSigned instead
__builtin_arm_mve_vldrwq_gather_base_wb_z_s32
atmega16
  Augmentation:          "
atmega164a
'\\'
'\n'
'\u%04x'
max_ops_per_inst: %u
     opcode_base: %u
__builtin_arm_mve_vmladavq_p_s16
atmega32
0x%08.08llx: 
Disable support for K&R C function declarations
-mhvx=
atmega325
failed to parse directory entry because extracting the form value failed
atmega3250
atmega3250p
atmega328
name lookup table at offset 0x%llx parsing failed: %s
__builtin_arm_mve_vmullbq_int_m_u32
invalid range list entry at offset 0x%llx
__builtin_arm_mve_vmulq_m_n_f16
atmega3290pa
 %s%+lld
__builtin_arm_mve_vmulq_x_s8
objc_subclassing_restricted
atmega644p
API limitation - string extraction not available without a DWARFUnit
    {0}: offset = {1:x8}, type_offset = {2:x8}, type_signature = {3:x16}
      String name: %s, CU vector index: %d
section is not large enough to contain a %s table of length 0x%llx at offset 0x%llx
0x%0*llx
name = '
Index Signature         
[0x%08x, 0x%08x) 
DWARF type unit from offset 0x%8.8llx incl. to offset 0x%8.8llx excl. has its relocated type_offset 0x%8.8llx pointing past the unit end
length exceeds section size
The unit type encoding is not valid.
Skeleton compilation unit has children.
at90pwm161
Verifying .debug_info Unit Header Chain...
atmega32m1
-fprofile-instrument-path=
-fno-math-builtin
Verifying .debug_line...
Tag 
Name Index @ {0:x} references a non-existing CU @ {1:x}
__builtin_arm_mve_vqshrnbq_n_u16
Name Index @ {0:x}: Verifying indexes of type units is not currently supported.
DW_SECT_MACINFO
corrupted compressed section header
Invalid symbol index
Mach-O headers
data in code info
LC_SEGMENT_64
LC_DYLD_ENVIRONMENT
LC_SOURCE_VERSION command 
sub_framework_command
__builtin_arm_mve_vrmulhq_u16
atxmega32a4
Equivalent to -march=mips3
iextdefsym plus nextdefsym in LC_DYSYMTAB load command extends past the end of the symbol table
atxmega32d4
X86_64_RELOC_UNSIGNED
avrxmega4
ARM_THUMB_32BIT_BRANCH
__builtin_arm_mve_vsbciq_u32
__builtin_arm_mve_vsetq_lane_u32
featuresStrs...
linker optimization hints
Equivalent to -march=mips64r5
__builtin_arm_mve_vshlq_r_u8
cortex-a7
ppc-apple-darwin
atxmega192a3u
edge sub-string in export trie data at node: 0x
for REBASE_OPCODE_DO_REBASE_ULEB_TIMES 
__builtin_arm_mve_vstrbq_scatter_offset_u32
atxmega384d3
-mldc1-sdc1
for BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED 
attiny202
 offset to next pointer in the chain after one at address: 0x
attiny214
bad chained fixups: segment start 
__builtin_arm_mve_vsubq_u8
__swift5_builtin
load command 0 extends past the end all load commands in the file
__builtin_arm_mve_vcaddq_rot270_m
symbol table
variables and statements
modtaboff field of LC_DYSYMTAB command 
__builtin_arm_mve_veorq
more than one LC_DYLD_INFO and or LC_DYLD_INFO_ONLY command
__builtin_arm_mve_vidupq_x_u8
LC_ID_DYLIB
 library name extends past the end of the load command
, platform value is not allowed when the mach header flag MH_SIM_SUPPORT is set
return statements
 count in 
__builtin_arm_mve_vmovlbq_x
+mabi=lp64
-flang-experimental-exec
 which is a PPC_THREAD_STATE flavor in 
march=rv64imac
Malformed MachO file.
-fno-modules-global-index
__NSConstantString
align (2^
+march=rv32iac
invalid section header table offset (e_shoff = 0x
entry with offset 0x
: string table with offset 0x
__builtin_arm_mve_vstrhq_scatter_offset_p
arm64_32
unknown
Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
parent_umbrellas
exported_symbols
relinked_libraries
xrOS
__builtin_arm_cde_vcx3q_u8_impl_f16
-fmudflap
-mmovbe
__AVR_ATtiny15__
__AVR_ATA5272__
__AVR_ATtiny261A__
__AVR_AT43USB320__
__AVR_ATmega48__
__AVR_AT90PWM2__
__AVR_ATmega161__
__AVR_ATmega169__
__AVR_ATmega3250P__
__AVR_ATmega64__
__AVR_ATmega6490P__
__AVR_AT90PWM316__
__AVR_ATmega1281__
__AVR_ATxmega16A4__
__AVR_ATxmega64D3__
__AVR_ATxmega256A3__
__AVR_ATtiny102__
__AVR_ATtiny412__
__AVR_ATmega1608__
__AVR_ATmega4809__
__BPF__
fr15
fr31
vr15
vr26
hexagonv68
+hvxv
r29:28
c3:2
utimerhi
v29:28
v*i*Ci*iC
__builtin_circ_ldb
__builtin_circ_std
__builtin_HEXAGON_L2_loadrb_pcr
__builtin_HEXAGON_S2_storerh_pcr
__builtin_HEXAGON_V6_vmaskedstorenq_128B
__builtin_HEXAGON_V6_vrmpyub_rtt_acc
__builtin_HEXAGON_A2_addh_l16_sat_ll
__builtin_HEXAGON_A2_combine_ll
__builtin_HEXAGON_A2_negsat
__builtin_HEXAGON_A2_sub
__builtin_HEXAGON_A2_svadduhs
__builtin_HEXAGON_A2_tfrp
__builtin_HEXAGON_A2_vavgh
__builtin_HEXAGON_A2_vcmpbgtu
__builtin_HEXAGON_A2_vminuw
__builtin_HEXAGON_A2_vsubhs
__builtin_HEXAGON_A4_cmpbeq
__builtin_HEXAGON_A4_combineir
__builtin_HEXAGON_A4_vcmpbeqi
__builtin_HEXAGON_A4_vrmaxuw
__builtin_HEXAGON_C2_cmpgei
__builtin_HEXAGON_C2_muxir
__builtin_HEXAGON_C4_cmplte
__builtin_HEXAGON_F2_conv_d2df
__builtin_HEXAGON_F2_conv_sf2df
__builtin_HEXAGON_F2_conv_w2sf
__builtin_HEXAGON_F2_sffixupd
__builtin_HEXAGON_F2_sfsub
__builtin_HEXAGON_M2_cmpys_s1
ULLiii
__builtin_HEXAGON_M2_mmacuhs_rs1
__builtin_HEXAGON_M2_mmpyuh_rs0
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s1
__builtin_HEXAGON_M2_mpy_lh_s1
__builtin_HEXAGON_M2_mpy_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s0
__builtin_HEXAGON_M2_mpyd_acc_ll_s0
__builtin_HEXAGON_M2_mpyd_nac_lh_s0
__builtin_HEXAGON_M2_mpyu_acc_hl_s1
__builtin_HEXAGON_M2_mpyu_nac_hl_s0
__builtin_HEXAGON_M2_mpyud_hl_s0
__builtin_HEXAGON_M2_mpyud_nac_ll_s1
__builtin_HEXAGON_M2_vmac2
__builtin_HEXAGON_M2_vmpy2su_s1
__builtin_HEXAGON_M2_xor_xacc
iiUIii
__builtin_HEXAGON_M4_vrmpyoh_acc_s1
__builtin_HEXAGON_M5_vrmpybsu
__builtin_HEXAGON_S2_asl_i_r_xacc
__builtin_HEXAGON_S2_asl_r_r_and
__builtin_HEXAGON_S2_asr_i_vh
__builtin_HEXAGON_S2_asr_r_vh
__builtin_HEXAGON_S2_deinterleave
__builtin_HEXAGON_S2_interleave
__builtin_HEXAGON_S2_lsr_i_p_nac
__builtin_HEXAGON_S2_lsr_r_p_or
__builtin_HEXAGON_S2_svsathb
__builtin_HEXAGON_S2_vcrotate
__builtin_HEXAGON_S2_vtrunewh
__builtin_HEXAGON_S4_extractp
LLiLLiLLiiUIi
__builtin_HEXAGON_Y2_dcinva
__builtin_HEXAGON_S6_rol_i_r_xacc
__builtin_HEXAGON_A7_croundd_ri
__builtin_HEXAGON_M7_dcmpyrwc_acc
v68|v69
__builtin_HEXAGON_V6_pred_and
V64bi
__builtin_HEXAGON_V6_vabsdiffub
__builtin_HEXAGON_V6_vabsw_sat
__builtin_HEXAGON_V6_vaddhnq_128B
__builtin_HEXAGON_V6_vaddubsat_dv
__builtin_HEXAGON_V6_vaddwsat_128B
__builtin_HEXAGON_V6_vandqrt
V32iV32ii
__builtin_HEXAGON_V6_vasrhubsat
__builtin_HEXAGON_V6_vasrwv_128B
__builtin_HEXAGON_V6_vavguh
__builtin_HEXAGON_V6_vdealb
__builtin_HEXAGON_V6_vdmpybus_acc_128B
__builtin_HEXAGON_V6_vdmpyhisat_128B
__builtin_HEXAGON_V6_vdmpyhsuisat
__builtin_HEXAGON_V6_veqb_and
__builtin_HEXAGON_V6_veqh_xor_128B
__builtin_HEXAGON_V6_vgth
__builtin_HEXAGON_V6_vgtub_xor
__builtin_HEXAGON_V6_vgtw
__builtin_HEXAGON_V6_vlsrh_128B
__builtin_HEXAGON_V6_vlutvwh_oracc_128B
__builtin_HEXAGON_V6_vminub_128B
__builtin_HEXAGON_V6_vmpybus_128B
__builtin_HEXAGON_V6_vmpybv_acc_128B
__builtin_HEXAGON_V6_vmpyhv_acc
__builtin_HEXAGON_V6_vmpyih_acc
__builtin_HEXAGON_V6_vmpyowh_rnd
__builtin_HEXAGON_V6_vmpyuh_128B
__builtin_HEXAGON_V6_vnormamtw
__builtin_HEXAGON_V6_vpackhub_sat
__builtin_HEXAGON_V6_vrmpybusi_128B
__builtin_HEXAGON_V6_vrmpyub_128B
__builtin_HEXAGON_V6_vroundwh
__builtin_HEXAGON_V6_vsb_128B
__builtin_HEXAGON_V6_vshufoeh
__builtin_HEXAGON_V6_vsubh_dv_128B
__builtin_HEXAGON_V6_vsubuhsat
__builtin_HEXAGON_V6_vsubwq_128B
__builtin_HEXAGON_V6_vtmpyhb_acc
__builtin_HEXAGON_V6_vunpackuh_128B
__builtin_HEXAGON_V6_shuffeqw_128B
__builtin_HEXAGON_V6_vaddhw_acc_128B
V32iV128bV32i
__builtin_HEXAGON_V6_vlutvvb_oracci_128B
__builtin_HEXAGON_V6_vminb_128B
__builtin_HEXAGON_V6_vmpyowh_64_acc
hvxv65|hvxv66|hvxv67|hvxv68|hvxv69
__builtin_HEXAGON_V6_vavgb_128B
vv*V128biiV32i
__builtin_HEXAGON_V6_vlut4_128B
__builtin_HEXAGON_V6_vmpyuhe_acc
viiV32iV32i
__builtin_HEXAGON_V6_vscattermw
__builtin_HEXAGON_V6_vrotr
__builtin_HEXAGON_V6_vadd_hf
__builtin_HEXAGON_V6_vadd_sf_hf_128B
__builtin_HEXAGON_V6_vcvt_hf_h
__builtin_HEXAGON_V6_vdmpy_sf_hf
__builtin_HEXAGON_V6_vgthf_and
__builtin_HEXAGON_V6_vmax_hf_128B
__builtin_HEXAGON_V6_vmpy_qf32
__builtin_HEXAGON_V6_vmpy_sf_hf_acc
__builtin_HEXAGON_V6_vsub_sf_sf
__builtin_HEXAGON_V6_vasrvwuhrndsat
__lanai__
$r24
$ft2
$fs0
$fs6
__mc68060
_GLIBCXX_USE_CXX11_ABI
__builtin_mips_precrqu_s_qb_ph
__builtin_mips_shll_qb
__builtin_mips_muleq_s_w_phl
__builtin_mips_dpaq_s_w_ph
__builtin_mips_cmp_lt_ph
ehcont
__builtin_mips_subq_s_w
stdarg.h
uchar.h
cfloat
__builtin_mips_insv
-dwarf-debug-producer
__builtin_mips_prepend
memory_scope
-mno-popcnt
strstream
triple=
monetary.h
--cuda-path=
strings.h
__builtin_msa_binsri_w
sys/uio.h
tar.h
 overridden
V4SiV4UiIUi
__pragma
zve32f
a_key
-msign-return-address-key=
attribute_availability_with_message
attribute_availability_in_templates
ptrauth_vtable_pointer_type_discrimination
cxx_decltype_incomplete_return_types
__builtin_get_pointer_upper_bound
pragma error
__builtin_msa_fsne_d
execution_character_set
  #include/#include_next/#import:
-fsanitize-coverage-8bit-counters
  Macros: 
-fno-operator-names
objc_method
vssseg4e8_v
__builtin_msa_min_s_h
__builtin_atan2l
__builtin_copysignf
__builtin_fmodf
__builtin_frexpf
__builtin_huge_vall
__builtin_inf
__builtin_ldexpl
ddd*
__builtin_nan
__mips64
-fno-pack-struct
__nvvm_read_ptx_sreg_lanemask_eq
__nvvm_fmin_nan_f16
__nvvm_fmin_ftz_nan_xorsign_abs_f16x2
__nvvm_fmin_ftz_nan_xorsign_abs_f
__nvvm_fmax_xorsign_abs_f16x2
__nvvm_fmax_nan_xorsign_abs_f
__nvvm_mul_rn_d
__nvvm_div_rz_d
__nvvm_round_ftz_f
__nvvm_lg2_approx_d
__nvvm_fma_rn_sat_f16x2
__nvvm_fma_rp_f
__nvvm_rcp_rn_d
__nvvm_sqrt_rp_d
__nvvm_add_rp_d
__nvvm_d2ui_rp
__nvvm_f2i_rm_ftz
__nvvm_ui2f_rm
ULLif
__nvvm_ll2f_rn
__nvvm_ull2d_rn
ZUsf
__nvvm_bar0_and
__nvvm_shfl_sync_down_f32
bUib
__nvvm_redux_sync_and
WiWi*
vUc*Uc*zi
V4fiiiiii
__nvvm_atom_cta_add_gen_i
ddD*d
__nvvm_atom_sys_max_gen_i
__nvvm_atom_sys_max_gen_ll
__nvvm_atom_cta_min_gen_ll
__nvvm_atom_cta_and_gen_l
__nvvm_atom_xor_gen_l
__nvvm_atom_sys_cas_gen_l
__nvvm_ldg_us
E4cE4cC*
__nvvm_ldg_us4
__nvvm_isspacep_const
__hmma_m32n8k16_ld_c_f16
vf*iC*iC*fC*IiIi
(sm_80|sm_86|sm_87|sm_89|sm_90),(ptx71|ptx72|ptx73|ptx74|ptx75|ptx76|ptx77|ptx78)
__imma_m16n16k16_st_c_i32
__imma_m8n8k32_ld_c
__mma_bf16_m8n32k16_ld_b
__nvvm_cp_async_ca_shared_global_16
WIN32
_MSC_VER
_MSVC_EXECUTION_CHARACTER_SET
-fno-signed-char
__builtin_ppc_fsel
__builtin_ppc_fetch_and_swap
icD*i
__builtin_ppc_swdivs_nochk
iCIiii
__builtin_ppc_rldimi
__builtin_ppc_extract_exp
__builtin_ppc_fres
LdLdLdLd.
__builtin_altivec_vaddsws
__builtin_altivec_vsubshs
__builtin_altivec_vcfsx
__builtin_altivec_vexptefp
__builtin_altivec_vmsumubm
__builtin_altivec_vmulesh
V8sV4UiV4Ui
__builtin_altivec_vpksdus
__builtin_altivec_vcmpequb
V16cV16UcV16Uc
__builtin_altivec_vcmpequq_p
__builtin_altivec_mfvscr
V8sV8sV8Us
__builtin_altivec_vsr
__builtin_altivec_vupkhsw
__builtin_altivec_vcmpequd_p
__builtin_altivec_vcmpgtuw_p
__builtin_altivec_crypto_vpermxor
V4UiV4Ui
__builtin_altivec_vprtybd
V4SiV16Sc
__builtin_altivec_vextracthm
__builtin_altivec_vexpandwm
__builtin_altivec_mtvsrwm
iiV8s
__builtin_altivec_vinsbrx
__builtin_altivec_vinswvrx
__builtin_altivec_vextduwvlx
__builtin_vsx_stxvw4x
V16UcCc*Ii
__builtin_vsx_xvcmpgedp_p
__builtin_vsx_xvmaddasp
__builtin_vsx_xvcpsgnsp
V4fV4UiV4Ui
V4fV2SLLi
__builtin_vsx_extractuword
V16UcV16UcV16UcV16UcIi
LLdLLdLLdLLd
__builtin_treclaim
__builtin_set_tfiar
__builtin_darn
__builtin_mma_disassemble_pair
__builtin_mma_xvf64ger
__builtin_mma_pmxvi8ger4spp
__builtin_mma_pmxvf32gernp
__builtin_mma_pmxvbf16ger2
+isa-v31-instructions
__NATURAL_ALIGNMENT__
_ARCH_PWR6
__VSX__
-mcpu=pwr10 -mprefixed
__eieio
__fetch_and_addlp
__sthcx
__mulhd
__store8r
__swdivs_nochk
__divde
__darn_32
__popcnt8
__fric
__fsqrts
-vsx
vs26
vs39
vs57
-fno-profile-use
__riscv_arch_test
__builtin_rvv_vadd_vv_tu
__builtin_rvv_vluxei8_v_tama
__builtin_rvv_vloxseg4ei8_v_tuma
__builtin_rvv_vloxseg6ei8_v_tamu
__builtin_rvv_vloxseg8ei8_v_tamu
__builtin_rvv_vloxseg4ei16_v_tumu
__builtin_rvv_vloxseg7ei16_v_tu
__builtin_rvv_vloxseg2ei32_v_tuma
__builtin_rvv_vloxseg5ei32_v_tuma
__builtin_rvv_vloxseg8ei32_v_ta
__builtin_rvv_vloxseg3ei64_v_tuma
__builtin_rvv_vloxseg5ei64_v_tama
__builtin_rvv_vloxseg8ei64_v_tamu
__builtin_rvv_vsse64_v
__builtin_rvv_vsseg7e8_v_m
__builtin_rvv_vluxei32_v_tu
__builtin_rvv_vsseg6e32_v_m
__builtin_rvv_vsseg7e64_v
__builtin_rvv_vssseg2e16_v_m
__builtin_rvv_vssseg8e16_v_m
__builtin_rvv_vssseg4e64_v_m
__builtin_rvv_vsuxseg6ei8_v
__builtin_rvv_vsuxseg7ei16_v_m
__builtin_rvv_vsuxseg7ei32_v_m
__builtin_rvv_vsuxseg2ei8_v_m
__builtin_rvv_vloxei32_v_tumu
__builtin_rvv_vloxei64_v_tu
__builtin_rvv_vsoxseg5ei16_v
__builtin_rvv_vsoxseg7ei32_v_m
__builtin_rvv_vsoxseg8ei64_v
__builtin_rvv_vsub_vx_tuma
__builtin_rvv_vwaddu_vx_tamu
__builtin_rvv_vwadd_vv_tamu
__builtin_rvv_vwsub_vx_tumu
__builtin_rvv_vwsubu_wx_tu
__builtin_rvv_vwadd_wx_ta
__builtin_rvv_vwcvt_x_x_v_tuma
__builtin_rvv_vmsbc_vvm
__builtin_rvv_vxor_vv_tu
__builtin_rvv_vor_vv_tuma
__builtin_rvv_vsll_vx_tuma
__builtin_rvv_vsra_vv_ta
__builtin_rvv_vnsrl_wv_tamu
__builtin_rvv_vnsra_wx_ta
__builtin_rvv_vmseq_vx_mu
__builtin_rvv_vmsltu_vx_ma
__builtin_rvv_vmsleu_vx_mu
__builtin_rvv_vmsgtu_vx_tumu
__builtin_rvv_vwaddu_wv_tuma
__builtin_rvv_vmsge_vx
__builtin_rvv_vmin_vv_tu
__builtin_rvv_vmaxu_vv_tu
__builtin_rvv_vmax_vx_tuma
__builtin_rvv_vmulh_vv_ta
__builtin_rvv_vmulhu_vv_tamu
__builtin_rvv_vsuxei32_v_m
__builtin_rvv_vdivu_vx_tamu
__builtin_rvv_vremu_vv_tumu
__builtin_rvv_vrem_vx_tu
__builtin_rvv_vwmul_vx_tumu
__builtin_rvv_vwmulsu_vv_tuma
__builtin_rvv_vmacc_vx_tu
__builtin_rvv_vnmsac_vx_tuma
__builtin_rvv_vmadd_vx_tamu
__builtin_rvv_vwmaccu_vv_tamu
__builtin_rvv_vwmacc_vx_tumu
__builtin_rvv_vwmaccus_vx_ta
__builtin_rvv_vmv_v_v_tu
__builtin_rvv_vsadd_vx_tu
__builtin_rvv_vssubu_vx_tama
__builtin_rvv_vaaddu_vv_tuma
__builtin_rvv_vaadd_vv_tamu
__builtin_rvv_vasubu_vx_tamu
__builtin_rvv_vsmul_vv_tumu
__builtin_rvv_vssrl_vx_tu
__builtin_rvv_vssra_vx_tumu
__builtin_rvv_vnclip_wv_tuma
__builtin_rvv_vfadd_vf_ta
__builtin_rvv_vfsub_vf_tamu
__builtin_rvv_vfwadd_vf_tu
__builtin_rvv_vfwsub_vf_tamu
__builtin_rvv_vfwsub_wv_tumu
__builtin_rvv_vfmul_vf_tu
__builtin_rvv_vfdiv_vf_tu
__builtin_rvv_vfwmul_vf_tuma
__builtin_rvv_vfnmacc_vv_tu
__builtin_rvv_vfmsac_vv_tamu
__builtin_rvv_vfnmsac_vf_ta
__builtin_rvv_vfnmadd_vv_ta
__builtin_rvv_vfmsub_vv_tama
__builtin_rvv_vfnmsub_vf_tuma
__builtin_rvv_vfwmacc_vf_tama
__builtin_rvv_vfwmsac_vv_tamu
__builtin_rvv_vfwnmsac_vf_tumu
__builtin_rvv_vfmax_vv_tu
__builtin_rvv_vfsgnj_vv_tuma
__builtin_rvv_vfsgnjn_vf_tuma
__builtin_rvv_vfabs_v_ta
__builtin_rvv_vmfne_vv_mu
__builtin_rvv_vmflt_vf_ma
__builtin_rvv_vmfge_vv_mu
__builtin_rvv_vredmaxu_vs_ta
__builtin_rvv_vredmin_vs_tum
__builtin_rvv_vredxor_vs_tumu
__builtin_rvv_vfredmin_vs_tu
__builtin_rvv_vfwredusum_vs_tu
__builtin_rvv_vid_v_ta
__builtin_rvv_vfmv_s_x_ta
__builtin_rvv_vfslide1up_vf_ta
__builtin_rvv_vfslide1down_vf_tu
__builtin_rvv_vrgatherei16_vv_ta
__builtin_rvv_vsoxei32_v
__builtin_rvv_vle32ff_v_tumu
__builtin_rvv_vlseg3e8_v_tamu
__builtin_rvv_vle8_v_tama
__builtin_rvv_vlseg7e8_v_tama
__builtin_rvv_vlseg4e16_v_ta
__builtin_rvv_vlseg6e16_v_tuma
__builtin_rvv_vlseg2e32_v_tumu
__builtin_rvv_vlseg4e32_v_tama
__builtin_rvv_vlseg7e32_v_tama
__builtin_rvv_vlseg3e64_v_tu
__builtin_rvv_vlseg6e64_v_ta
__builtin_rvv_vlseg8e64_v_tu
__builtin_rvv_vlseg5e8ff_v_tumu
__builtin_rvv_vlseg7e8ff_v_tamu
__builtin_rvv_vlseg3e16ff_v_tama
__builtin_rvv_vlseg6e16ff_v_ta
__builtin_rvv_vlseg2e32ff_v_ta
__builtin_rvv_vlseg4e32ff_v_tuma
__builtin_rvv_vlseg7e32ff_v_tumu
__builtin_rvv_vlseg2e64ff_v_ta
__builtin_rvv_vlseg5e64ff_v_tama
__builtin_rvv_vlseg8e64ff_v_tu
__builtin_rvv_vlsseg4e8_v_ta
__builtin_rvv_vlsseg6e8_v_tumu
__builtin_rvv_vlsseg2e16_v_tumu
__builtin_rvv_vlsseg3e16_v_tamu
__builtin_rvv_vlsseg6e16_v_tama
__builtin_rvv_vlsseg8e16_v_tamu
__builtin_rvv_vlsseg5e32_v_ta
__builtin_rvv_vlsseg6e32_v_tuma
__builtin_rvv_vlsseg2e64_v_tumu
__builtin_rvv_vlsseg4e64_v_tama
__builtin_rvv_vlsseg7e64_v_tama
__builtin_rvv_vsseg2e8_v_m
__builtin_rvv_vluxseg5ei8_v_tama
__builtin_rvv_vluxseg7ei8_v_tama
__builtin_rvv_vluxseg4ei16_v_ta
__builtin_rvv_vluxseg6ei16_v_tuma
__builtin_rvv_vluxseg2ei32_v_tumu
__builtin_rvv_vluxseg4ei32_v_tama
__builtin_rvv_vluxseg7ei32_v_tama
__builtin_rvv_vluxseg3ei64_v_tu
__builtin_rvv_vluxseg6ei64_v_ta
__builtin_rvv_vluxseg8ei64_v_tu
__builtin_rvv_vnot_v_ta
__builtin_rvv_vwcvtu_x_x_v_tumu
__builtin_rvv_vle64_v_tu
__builtin_rvv_vlse16_v_tuma
__builtin_rvv_vfcvt_f_xu_v_tu
__builtin_rvv_vfcvt_rtz_xu_f_v_tama
__builtin_rvv_vfncvt_f_f_w_tu
__builtin_rvv_vfncvt_f_xu_w_ta
__builtin_rvv_vfncvt_rtz_xu_f_w_tuma
__builtin_rvv_vfrec7_v_ta
__builtin_rvv_vfsqrt_v_tamu
__builtin_rvv_vfwcvt_x_f_v_tu
__builtin_rvv_vmandn_mm
__builtin_rvv_vmsof_m_ma
__builtin_rvv_vsext_vf2_tama
__builtin_rvv_vzext_vf2_tuma
__builtin_riscv_orc_b_32
__builtin_riscv_xperm8
__builtin_riscv_aes64im_64
zknh,32bit
__builtin_riscv_sha512sum0_64
ValueStmt
OwnerAttr
__sparc_v9__
__ma2x8x__
ultrasparc3
ma2485
leon3
__builtin_s390_vpkshs
V4UiV2ULLiV2ULLii*
__builtin_s390_vupllh
__builtin_s390_vavglg
__builtin_s390_vchlhs
V8UsV8UsV8UsV8UsIi
__builtin_s390_verllvg
__builtin_s390_vmalhf
__builtin_s390_vmhb
__builtin_s390_vmlof
__builtin_s390_vsl
__builtin_s390_vfaebs
__builtin_s390_vfaezfs
__builtin_s390_vfenebs
__builtin_s390_vistrh
__builtin_s390_vstrczhs
V2SLLiV2dIii*
__builtin_s390_vfmaxsb
__builtin_s390_vsrd
__builtin_s390_vcnf
10304
-fno-rtlib-add-rpath
__builtin_ve_vl_vldlsx_vssl
__builtin_ve_vl_vldl2dsx_vssl
__builtin_ve_vl_vstot_vssml
__builtin_ve_vl_vstlncot_vssl
__builtin_ve_vl_vstu2dot_vssl
LUiV256dUi
__builtin_ve_vl_vbrdd_vsvl
V256diUi
V256dUiV256dV256dUi
__builtin_ve_vl_vadduw_vvvmvl
__builtin_ve_vl_vaddswsx_vvvmvl
__builtin_ve_vl_vaddsl_vsvl
__builtin_ve_vl_vsubuw_vvvvl
__builtin_ve_vl_vsubswzx_vsvl
__builtin_ve_vl_vsubsl_vsvmvl
__builtin_ve_vl_vmulswsx_vvvmvl
__builtin_ve_vl_vmulslw_vvvl
__builtin_ve_vl_vdivul_vvsvl
__builtin_ve_vl_vdivswsx_vsvmvl
__builtin_ve_vl_vdivsl_vvvvl
__builtin_ve_vl_vcmpul_vvvvl
__builtin_ve_vl_vcmpswsx_vsvvl
__builtin_ve_vl_vcmpsl_vvvl
__builtin_ve_vl_vmaxswzx_vsvmvl
__builtin_ve_vl_vminswzx_vvvvl
__builtin_ve_vl_vminsl_vvvvl
__builtin_ve_vl_pvand_vvvMvl
__builtin_ve_vl_vxor_vsvvl
__builtin_ve_vl_veqv_vvvmvl
__builtin_ve_vl_pvldz_vvl
__builtin_ve_vl_pvpcnt_vvMvl
__builtin_ve_vl_pvseqlo_vvl
__builtin_ve_vl_pvsll_vvsvl
__builtin_ve_vl_vslawsx_vvsl
__builtin_ve_vl_pvsla_vvsMvl
__builtin_ve_vl_vsrawzx_vvvmvl
__builtin_ve_vl_vsral_vvvmvl
V256dfV256dV256dUi
__builtin_ve_vl_vfsubd_vsvmvl
__builtin_ve_vl_vfmuld_vvvmvl
__builtin_ve_vl_vfdivd_vvvl
__builtin_ve_vl_vfcmpd_vsvl
__builtin_ve_vl_pvfcmp_vsvMvl
__builtin_ve_vl_pvfmax_vvvMvl
__builtin_ve_vl_vfmins_vsvmvl
__builtin_ve_vl_vfmadd_vsvvmvl
V256dfV256dV256dV256bV256dUi
__builtin_ve_vl_vfmsbd_vvvvl
__builtin_ve_vl_vfmsbs_vvsvvl
__builtin_ve_vl_vfnmadd_vvsvvl
__builtin_ve_vl_pvfnmad_vsvvl
__builtin_ve_vl_vfnmsbs_vvvvvl
__builtin_ve_vl_pvfnmsb_vsvvvl
__builtin_ve_vl_vrsqrtsnex_vvvl
__builtin_ve_vl_vcvtwssx_vvl
__builtin_ve_vl_pvcvtwsrz_vvMvl
__builtin_ve_vl_vcvtdl_vvvl
__builtin_ve_vl_vshf_vvvsl
V256bV256dV256bUi
__builtin_ve_vl_vfmklltnan_mvl
__builtin_ve_vl_vfmkwlt_mvml
__builtin_ve_vl_vfmkweqnan_mvl
__builtin_ve_vl_pvfmkwupne_mvl
__builtin_ve_vl_pvfmkwlonum_mvml
__builtin_ve_vl_pvfmkwlonenan_mvl
__builtin_ve_vl_pvfmkwgt_MvMl
__builtin_ve_vl_pvfmkwnan_MvMl
__builtin_ve_vl_vfmkdne_mvl
__builtin_ve_vl_vfmkdgtnan_mvl
__builtin_ve_vl_vfmksge_mvl
__builtin_ve_vl_vfmkseqnan_mvml
__builtin_ve_vl_pvfmksloeq_mvl
__builtin_ve_vl_pvfmkslonum_mvml
__builtin_ve_vl_pvfmksloeqnan_mvl
__builtin_ve_vl_pvfmkslt_MvMl
__builtin_ve_vl_pvfmksnenan_Mvl
__builtin_ve_vl_vsuml_vvl
__builtin_ve_vl_vrminswfstzx_vvvl
__builtin_ve_vl_vfrmaxsfst_vvl
__builtin_ve_vl_vrxor_vvml
__builtin_ve_vl_vgtunc_vvssl
__builtin_ve_vl_vgtlzxnc_vvssml
__builtin_ve_vl_vscunc_vvssml
__builtin_ve_vl_orm_mmm
V512bV512b
__builtin_ve_vl_fencem_s
__builtin_wasm_rethrow
nontrapping-fptoint
__builtin_wasm_sub_sat_u_i8x16
__builtin_wasm_min_s_i32x4
V16ScV16ScV16ScIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
__builtin_wasm_abs_f64x2
__builtin_wasm_floor_f64x2
V4iV2d
__builtin_wasm_relaxed_max_f64x2
__wasm_relaxed_simd__
+reference-types
-extended-const
+avx512vbmi2
+clwb
+ptwrite
__amd64__
nocona
amdfam10
__LAHF_SAHF__
__FMA__
__AVX512VBMI2__
__KL__
__AMXTILE__
__SSE_MATH__
avx512vpopcntdq
cldemote
widekl
sahf
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512f,+adx,+avx512er,+avx512pf,+avx512cd,+avx5124fmaps,+avx5124vnniw,+avx512vpopcntdq
__builtin_ve_vl_vscu_vvssl
sse3
powerpc64-unknown-linux-gnu
@BT@ULongAccum
-fno-sanitize-ignorelist
__rvv_float32m1_t
xmm6
__rvv_int64m2_t
riscv64-unknown-elf
SwiftAsyncAttr
ymm26
zmm18
__clang_svbfloat16x3_t
__clang_svuint32x4_t
__SVBool_t
__clang_svfloat64x2_t
VisibilityAttr
__builtin_ia32_pfmin
__builtin_ia32_pfpnacc
(py)
image1d_buffer
image2d_msaa_depth
intel_sub_group_avc_ime_payload_t
/backward
/include/g++-v
objc class section size is not a multiple of pointer size
__builtin_ia32_phaddd
.hpp
(weak-def) 
disable
/System/DriverKit/
required field 'path' not specified
headers
 adjust_args(need_device_ptr:
none
  properties:
  isThreadLocalValue: 
  access: 
__builtin_ia32_pmuldq128
__builtin_ia32_pcmpistrio128
reexportedLibraries
 __attribute__((acquire_shared_capability
properties
ivar should be an object
un-expected filetype: 
/mipsel-r2-hard-musl
weakReferenced
align
V8fV8fV4fIi
interfaces
obsoleted
violations found for %0
</plist>
 [[gnu::nocf_check
conflicting superclass for objc class '%0': '%1' is not the same as '%2'
missing ObjC category '%0(%1)' from binary interface
__builtin_ia32_psrlq256
__builtin_ia32_insert128i256
 [[gnu::artificial
/micromips/mips16
%0 has ivar %1 here
/mips-r2-hard
unsupported file type
__builtin_ia32_wbinvd
deprecated=
%0 in '%1' does not match '%2'
 __attribute__((clang_builtin_alias
V4iV8sV8sV4i
-mabi=n64
__builtin_ia32_vphsubwd
V4iV4iIc
-preamble-bytes=
 [[clang::cf_returns_retained
V16fV16fV16fUsIi
__builtin_ia32_cvttpd2udq512_mask
/micromipsel-r6-soft
-fvisibility=
/include
Note: the paths in the reproducer might need to be adjusted.
/../../../../mips-linux-gnu/libc/usr/include
cannot create vfs file
 __attribute__((shared_capability
vv*UcV8iV8OiIi
RC_ARCHS
 [[gnu::cold
march=ck802
 __attribute__((require_constant_initialization
march=ck810v
unknown-apple-
EquivalentTypes
__builtin_ia32_maxsd_round_mask
could not read alias list
AppleInternal
unable to create temporary output file
unable to read file
()^$|+.[]\{}
 __attribute__((error
V8fV8fV8fV8fUc
vv*UcV2OiV4iIi
 [[clang::fallthrough
<framework_name>
lib32/ilp32d
-reexport_install_name
-rpath
Path to SDKContentRoot
-std=
V4fV4fV4fV4fUcIiIi
--private-umbrella-header=
-exceptions
/430/exceptions
-help-hidden
Infer include paths based on the provided/found header files
installapi SDKDB input directory (default to output directory)
-isysroot
List the exported symbols.
Merge the input files.
Don't infer include paths based on the provided/found header files
__builtin_ia32_storedquhi256_mask
__builtin_ia32_storeups256_mask
__builtin_ia32_scalefss_round_mask
distribute
--dSYM=
--exclude-project-header=
V32sUi
V16sUs
Allow merges of the same architecture.
 __attribute__((minsize
__builtin_ia32_pmovsdb256mem_mask
llvm-link
--no-undefined
-plugin-opt=-mattr=
 [[gnu::long_call
 [[gnu::short_call
projects
 [[clang::musttail
V16iV16iV4iIi
'-nogpuinc'
__builtin_ia32_ktestzdi
Minimize whitespace when emitting preprocessor output
__builtin_ia32_kshiftridi
 __attribute__((nomicromips
c89,c90,iso9899:1990,iso9899:199409,gnu89,gnu90,c99,iso9899:1999,c9x,iso9899:199x,gnu99,gnu9x,c11,iso9899:2011,c1x,iso9899:201x,gnu11,gnu1x,c17,iso9899:2017,c18,iso9899:2018,gnu17,gnu18,c2x,gnu2x,c++98,c++03,gnu++98,gnu++03,c++11,c++0x,gnu++11,gnu++0x,c++14,c++1y,gnu++14,gnu++1y,c++17,c++1z,gnu++17,gnu++1z,c++20,c++2a,gnu++20,gnu++2a,c++2b,gnu++2b,cl1.0,cl,cl1.1,cl1.2,cl2.0,cl3.0,clc++1.0,clc++,clc++2021,CL,CL1.1,CL1.2,CL2.0,CL3.0,CLC++,CLC++1.0,CLC++2021,cuda,hip,hlsl,hlsl2015,hlsl2016,hlsl2017,hlsl2018,hlsl2021,hlsl202x,
<clang-cl ignored options>
<clang-dxc options>
<g flags group>
-fasynchronous-unwind-tables
Do not include column number on diagnostics
-record-command-line
Turn off Type Based Alias Analysis
-Wno-extra-semi-stmt
-Wno-error=int-conversion
-Wno-error=implicit-function-declaration
__builtin_ia32_vcvtph2dq512_mask
__builtin_ia32_vcvttph2dq128_mask
__builtin_ia32_vcvtph2qq512_mask
], output: 
__builtin_ia32_vcvttsh2si32
User configuration file directory: 
-reorder-cxx-includes-hack
-disable-aligned-alloc-awareness=1
-resource-dir=
release 6
-openmp
 __attribute__((objc_non_runtime_protocol
__builtin_ia32_serialize
/usr/libo32
  File *
 [-ferror-limit=]
In module '
 read_write
clang.serialized_diags
ROCm installation path, used for finding and automatically linking required bitcode libraries.
goto
void
__objc_yes
operator
wchar_t
import
_Decimal128
__label__
__is_nothrow_assignable
__is_base_of
__is_trivially_copyable
__is_trivially_relocatable
__is_function
__is_convertible
__cdecl
__builtin_astype
addrspace_cast
__kindof
__finally
raw_identifier
l_paren
minusequal
greatergreater
coloncolon
annot_pragma_vis
annot_pragma_ms_pragma
annot_pragma_fp
__is_empty
__is_scoped_enum
__is_member_object_pointer
__is_same
__builtin_tmo_get_type_data
typed
Unknown specifier in datalayout string
Preferred alignment cannot be less than the ABI alignment
cl::location(x) specified more than once!
import-constants-with-refs
DW_TAG_common_inclusion
DW_TAG_namelist
DW_TAG_imported_module
DW_TAG_MIPS_loop
DW_TAG_SUN_struct_template
DW_TAG_GHS_namespace
DW_AT_location
DW_AT_const_value
DW_AT_address_class
DW_AT_priority
DW_AT_extension
DW_AT_endianity
DW_AT_str_offsets_base
DW_AT_call_data_location
DW_AT_MIPS_loop_unroll_factor
DW_AT_HP_opt_flags
DW_AT_GHS_frsm
DW_AT_GNU_tail_call
DW_AT_SUN_template
DW_AT_SUN_profile_id
DW_AT_SUN_pass_by_ref
DW_AT_GNU_numerator
DW_AT_BORLAND_property_read
DW_AT_LLVM_include_path
DW_AT_APPLE_major_runtime_vers
DW_FORM_string
DW_FORM_sec_offset
DW_FORM_strx4
DW_OP_const1u
DW_OP_minus
DW_OP_gt
DW_OP_lit12
DW_OP_lit26
DW_OP_reg12
DW_OP_reg27
DW_OP_breg12
DW_OP_breg25
DW_OP_call_frame_cfa
DW_OP_HP_is_value
DW_OP_LLVM_entry_value
DW_ATE_edited
DW_END_default
DW_VIRTUALITY_virtual
DW_LANG_ObjC
DW_LANG_Rust
DW_CC_pass_by_reference
DW_CC_LLVM_AAPCS_VFP
DW_LNS_copy
DW_LNE_define_file
DW_MACRO_define_strx
DW_RLE_startx_length
DW_CFA_GNU_args_size
DW_CFA_register
DW_APPLE_PROPERTY_readwrite
DW_UT_skeleton
UNUSED7
STATIC
Unknown
R_RBR
R_TLSML
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789._
neoverse-512tvb
apple-m2
carmel
+neon
+bf16
+perfmon
+v8.4a
armv9-a
-lse
-sve2-aes
-mte
-ls64
mops
v8.4a
v9.2-a
-vfp4
maverick
fpv4-sp-d16
arm7tdmi-s
arm968e-s
cortex-a5
cortex-r52
cortex-a76ae
iwmmxt
armv5t
armv6t2
armv7-m
armv8.3-a
+v8.8a
+v9.3a
none
mve.fp
-cdecp1
+cdecp6
-fno-strict-overflow
Invalid character in exponent
= *cannot print option value*
s802
ck803eft
ck803fhr1
ck803ehtr3
e803
ck804eh
ck805t
r807
ck810ftv
fdivdu
+float1e3
pushpop
elrw
doloop
-vdspv2
stack-size
+mp1e2
+7e10
LLVM ERROR: out of memory
covariant return thunk to 
Text after end of document
failed to write to 
zvfh
ztso
zvl32768b
' (this compiler supports 
standard supervisor-level extension
Invalid cache file
' as a <
tahiti
bonaire
gfx900
gfx1034
rv620
turks
rv32imc
Enable -time-passes memory tracking (this may be slow)
sort-timers
msp430
sparcv9
mipsisa32r6el
cloudabi
minix
windows
msvc
raygeneration
cortex-a7
mipsn32r6
xcoff
Set __cdecl as a default calling convention
use-external-name
  'roots': [
'contents': [
output already closed
avx512vnni
pentium2
goldmont-plus
athlon-xp
bdver2
amx-tile
serialize
xsaves
retpoline-external-thunk
tag:yaml.org,2002:null
Already encountered a tag for this node!
out of range number
xdigit
ampersand
right-square-bracket
vertical-line
invalid repetition count(s)
-darwin
/var/tmp/
output
too many signal callbacks already registered
SDKContentRoot should be an array
__builtin_sve_svldff1uh_vnum_u64
__builtin_sve_svldff1uw_gather_u64base_offset_u64
__builtin_sve_svldff1uw_s64
__builtin_sve_svldnf1_s32
__builtin_sve_svldnf1_vnum_bf16
__builtin_sve_svldnf1_vnum_u32
__builtin_sve_svldnf1sb_u16
__builtin_sve_svldnf1sh_s64
__builtin_sve_svldnf1sw_s64
__builtin_sve_svldnf1ub_u64
__builtin_sve_svldnf1ub_vnum_u32
__builtin_sve_svldnf1uw_u64
__builtin_sve_svldnt1_gather_s64index_f64
__builtin_sve_svldnt1_gather_u32base_index_u32
__builtin_sve_svldnt1_gather_u32offset_f32
__builtin_sve_svldnt1_gather_u64base_s64
__builtin_sve_svldnt1_gather_u64offset_u64
__builtin_sve_svldnt1_vnum_bf16
__builtin_sve_svldnt1_vnum_s32
__builtin_sve_svldnt1b_vnum_s8_x2
__builtin_sve_svldnt1d_s64_x4
__builtin_sve_svldnt1h_bf16_x2
__builtin_sve_svldnt1h_u16_x2
__builtin_sve_svldnt1sb_gather_s64offset_s64
__builtin_sve_svldnt1sb_gather_u32offset_u32
__builtin_sve_svldnt1sh_gather_s64offset_s64
__builtin_sve_svldnt1sh_gather_u32base_offset_s32
__builtin_sve_svldnt1sh_gather_u64index_s64
__builtin_sve_svldnt1sw_gather_s64offset_u64
__builtin_sve_svldnt1sw_gather_u64offset_s64
__builtin_sve_svldnt1ub_gather_u32base_s32
__builtin_sve_svldnt1uh_gather_s64index_s64
__builtin_sve_svldnt1uh_gather_u32base_offset_u32
__builtin_sve_svldnt1uh_gather_u64base_s64
__builtin_sve_svldnt1uh_gather_u64offset_u64
__builtin_sve_svldnt1uw_gather_u64index_s64
__builtin_sve_svldnt1w_s32_x4
__builtin_sve_svlen_bf16
__builtin_sve_svlen_f64
__builtin_sve_svlen_u16
UWiq16Uc
__builtin_sve_svlogb_f64_z
__builtin_sve_svlsl_n_s32_m
__builtin_sve_svlsl_n_u32_m
__builtin_sve_svlsl_n_u8_x
__builtin_sve_svlsl_s64_x
__builtin_sve_svlsl_u16_x
__builtin_sve_svlsl_u8_z
__builtin_sve_svlsl_wide_n_s8_m
__builtin_sve_svlsl_wide_n_u32_x
__builtin_sve_svlsl_wide_n_u8_z
q8Usq16bq8Usq2UWi
__builtin_sve_svlsl_wide_u8_m
__builtin_sve_svlsr_n_u32_z
__builtin_sve_svlsr_n_u8_z
__builtin_sve_svlsr_u8_m
__builtin_sve_svlsr_wide_n_u32_x
__builtin_sve_svlsr_wide_u32_x
__builtin_sve_svlsr_wide_u8_x
__builtin_sve_svmad_f64_z
__builtin_sve_svmad_n_f32_x
__builtin_sve_svmad_n_s16_z
q2Wiq16bq2Wiq2WiWi
__builtin_sve_svmad_n_u16_z
__builtin_sve_svmad_n_u64_x
__builtin_sve_svmad_s16_z
__builtin_sve_svmad_s64_m
__builtin_sve_svmad_u16_z
__builtin_sve_svmad_u64_x
__builtin_sve_svmatch_u8
__builtin_sve_svmax_f32_z
__builtin_sve_svmax_n_f64_m
__builtin_sve_svmax_n_s32_x
__builtin_sve_svmax_n_u16_x
__builtin_sve_svmax_n_u32_z
__builtin_sve_svmax_s32_z
__builtin_sve_svmax_u16_m
__builtin_sve_svmax_u8_m
__builtin_sve_svmaxnm_f32_m
__builtin_sve_svmaxnm_n_f32_x
__builtin_sve_svmaxnmp_f32_m
__builtin_sve_svmaxp_f32_m
__builtin_sve_svmaxp_s16_x
__builtin_sve_svmaxp_u64_m
__builtin_sve_svmaxv_s16
__builtin_sve_svmin_f16_x
__builtin_sve_svmin_f64_x
__builtin_sve_svmin_n_f64_z
__builtin_sve_svmin_n_s64_m
__builtin_sve_svmin_n_u32_m
__builtin_sve_svmin_n_u32_z
__builtin_sve_svmin_s64_x
__builtin_sve_svmin_u16_z
__builtin_sve_svmin_u8_z
__builtin_sve_svminnm_f32_z
__builtin_sve_svminnm_n_f64_m
__builtin_sve_svminnmp_f64_m
__builtin_sve_svminp_f64_m
__builtin_sve_svminp_s32_x
__builtin_sve_svminp_u8_m
__builtin_sve_svminv_s64
__builtin_sve_svmla_f32_m
__builtin_sve_svmla_lane_f16
__builtin_sve_svmla_lane_u32
__builtin_sve_svmla_n_f32_z
__builtin_sve_svmla_n_s32_z
__builtin_sve_svmla_n_s8_m
__builtin_sve_svmla_n_u8_m
__builtin_sve_svmla_s32_x
__builtin_sve_svmla_u16_x
__builtin_sve_svmla_u64_x
q4iq4iq8sq8sIUWi
__builtin_sve_svmlalb_n_f32
__builtin_sve_svmlalb_s32
__builtin_sve_svmlalt_f32
__builtin_sve_svmlalt_n_u32
__builtin_sve_svmlalt_u64
__builtin_sve_svmls_f64_z
__builtin_sve_svmls_lane_s64
__builtin_sve_svmls_n_f64_m
__builtin_sve_svmls_n_s32_x
__builtin_sve_svmls_n_u16_x
__builtin_sve_svmls_n_u32_x
__builtin_sve_svmls_s32_z
__builtin_sve_svmls_u16_m
__builtin_sve_svmls_u8_m
__builtin_sve_svmlslb_lane_s64
__builtin_sve_svmlslb_s16
__builtin_sve_svmlslt_lane_f32
__builtin_sve_svmlslt_n_u16
__builtin_sve_svmlslt_s64
__builtin_sve_svmovlb_s16
q8Usq16Uc
__builtin_sve_svmovlt_u32
__builtin_sve_svmsb_f32_x
__builtin_sve_svmsb_n_f32_z
__builtin_sve_svmsb_n_s32_m
__builtin_sve_svmsb_n_u16_m
__builtin_sve_svmsb_n_u32_x
__builtin_sve_svmsb_s32_x
__builtin_sve_svmsb_s8_z
__builtin_sve_svmsb_u64_z
__builtin_sve_svmul_f16_z
__builtin_sve_svmul_lane_s16
__builtin_sve_svmul_n_f16_x
__builtin_sve_svmul_n_s16_x
__builtin_sve_svmul_n_s64_m
__builtin_sve_svmul_n_u32_z
__builtin_sve_svmul_s16_m
__builtin_sve_svmul_s8_m
__builtin_sve_svmul_u32_m
__builtin_sve_svmulh_n_s16_x
__builtin_sve_svmulh_n_s64_z
__builtin_sve_svmulh_n_u32_z
__builtin_sve_svmulh_n_u64_x
__builtin_sve_svmulh_s8_m
__builtin_sve_svmulh_u32_x
q4iq8sq8sIUWi
q2UWiq4Uiq4UiIUWi
__builtin_sve_svmullb_u16
__builtin_sve_svmullt_n_s16
__builtin_sve_svmullt_u16
__builtin_sve_svmulx_f16_z
__builtin_sve_svmulx_n_f32_x
__builtin_sve_svnbsl_n_s32
__builtin_sve_svnbsl_s64
__builtin_sve_svneg_f16_m
__builtin_sve_svneg_s16_x
__builtin_sve_svneg_s64_z
__builtin_sve_svnmad_f32_z
__builtin_sve_svnmad_n_f16_m
__builtin_sve_svnmatch_u8
__builtin_sve_svnmla_f64_m
__builtin_sve_svnmla_n_f64_m
__builtin_sve_svnmls_f32_m
__builtin_sve_svnmls_n_f32_x
__builtin_sve_svnmsb_f16_z
__builtin_sve_svnmsb_n_f16_z
__builtin_sve_svnmsb_n_f64_x
__builtin_sve_svnot_s64_x
__builtin_sve_svnot_u16_z
__builtin_sve_svnot_u8_z
__builtin_sve_svorr_n_s32_m
__builtin_sve_svorr_n_u16_x
__builtin_sve_svorr_n_u64_z
__builtin_sve_svorr_s32_z
__builtin_sve_svorr_s64_z
__builtin_sve_svorr_u8_m
__builtin_sve_svorv_u16
__builtin_sve_svpfalse_b
__builtin_sve_svpmullb_n_u64
__builtin_sve_svpmullt_n_u64
__builtin_sve_svpmullt_u16
vq16bvC*q4iIi
__builtin_sve_svprfb_gather_u32base_offset
vq16bvC*WiIi
__builtin_sve_svprfd_gather_u64base
__builtin_sve_svprfh_gather_u32index
__builtin_sve_svprfw_gather_s32index
q16bq16bq16bi
__builtin_sve_svptest_last
__builtin_sve_svptrue_c8
__builtin_sve_svptrue_pat_b64
__builtin_sve_svqabs_s8_x
__builtin_sve_svqadd_n_s32_m
__builtin_sve_svqadd_n_s8_x
__builtin_sve_svqadd_n_u32
__builtin_sve_svqadd_n_u8_x
__builtin_sve_svqadd_s32
__builtin_sve_svqadd_s64_z
__builtin_sve_svqadd_s8_z
__builtin_sve_svqadd_u64_x
__builtin_sve_svqcadd_s32
__builtin_sve_svqdecb_n_u64
__builtin_sve_svqdecb_pat_n_u32
__builtin_sve_svqdecd_pat_n_u32
q2Wiq2WiIUWi
__builtin_sve_svqdech_pat_n_u32
__builtin_sve_svqdech_pat_n_u64
WiWiq16b
__builtin_sve_svqdecp_n_u32_b64
__builtin_sve_svqdecp_s32
__builtin_sve_svqdecp_u32
__builtin_sve_svqdecw_pat_n_u32
q4iq4iIUWi
__builtin_sve_svqdmlalb_s32
__builtin_sve_svqdmlalbt_s16
__builtin_sve_svqdmlslb_lane_s32
__builtin_sve_svqdmlslb_s64
__builtin_sve_svqdmlslt_n_s16
__builtin_sve_svqdmulh_lane_s16
__builtin_sve_svqdmulh_s8
__builtin_sve_svqdmullb_s32
__builtin_sve_svqdmullt_s64
__builtin_sve_svqincb_n_u64
__builtin_sve_svqincd_pat_n_u64
__builtin_sve_svqinch_n_u32
__builtin_sve_svqinch_u16
__builtin_sve_svqincp_n_s64_b32
__builtin_sve_svqincp_n_u64_b8
__builtin_sve_svqincw_n_s32
__builtin_sve_svqincw_pat_u32
__builtin_sve_svqneg_s16_z
__builtin_sve_svqrdcmlah_lane_s32
__builtin_sve_svqrdmlah_lane_s64
__builtin_sve_svqrdmlsh_lane_s16
__builtin_sve_svqrdmlsh_n_s8
__builtin_sve_svqrdmulh_n_s64
__builtin_sve_svqrshl_n_s16_x
__builtin_sve_svqrshl_n_s8_x
q8Usq16bq8Uss
__builtin_sve_svqrshl_n_u8_z
__builtin_sve_svqrshl_s64_m
__builtin_sve_svqrshl_u16_z
q2UWiq16bq2UWiq2Wi
q8sq8WiIUWi
__builtin_sve_svqrshr_u8_x4
q16Ucq8UsIUWi
__builtin_sve_svqrshrnt_n_s16
q4Uiq4Uiq2UWiIUWi
__builtin_sve_svqrshrunt_n_s16
__builtin_sve_svqshl_n_s32_m
__builtin_sve_svqshl_n_s8_m
__builtin_sve_svqshl_n_u64_x
__builtin_sve_svqshl_s16_z
__builtin_sve_svqshl_s8_z
__builtin_sve_svqshl_u32_m
__builtin_sve_svqshlu_n_s16_z
__builtin_sve_svqshlu_n_s64_x
__builtin_sve_svqshrnb_n_u16
__builtin_sve_svqshrnt_n_u16
__builtin_sve_svqsub_n_s16_m
__builtin_sve_svqsub_n_s64
__builtin_sve_svqsub_n_u16_m
__builtin_sve_svqsub_n_u32_x
__builtin_sve_svqsub_s16_m
__builtin_sve_svqsub_s64
__builtin_sve_svqsub_u16_m
__builtin_sve_svqsub_u32_z
__builtin_sve_svqsubr_n_s16_x
__builtin_sve_svqsubr_n_s64_z
__builtin_sve_svqsubr_n_u32_z
__builtin_sve_svqsubr_n_u64_x
__builtin_sve_svqsubr_s8_m
__builtin_sve_svqsubr_u32_x
q16Scq8s
q16Ucq8Us
q4iq4iq2Wi
__builtin_sve_svqxtunb_s16
q8Usq8Usq4i
__builtin_sve_svraddhnb_n_s64
__builtin_sve_svraddhnt_n_s32
__builtin_sve_svraddhnt_s64
__builtin_sve_svrbit_s32_m
__builtin_sve_svrbit_s8_m
__builtin_sve_svrbit_u64_x
q16bq16b
__builtin_sve_svrecpe_u32_z
q4fq4fq4f
__builtin_sve_svrev_b16
__builtin_sve_svrev_f32
q16Scq16Sc
q2UWiq2UWi
__builtin_sve_svrevb_s64_z
__builtin_sve_svrevb_u64_m
__builtin_sve_svrevd_s64_m
__builtin_sve_svrevd_s8_z
__builtin_sve_svrevd_u8_x
__builtin_sve_svrevh_s64_z
__builtin_sve_svrevw_s64_z
__builtin_sve_svrhadd_n_s16_z
__builtin_sve_svrhadd_n_u16_m
__builtin_sve_svrhadd_n_u64_x
__builtin_sve_svrhadd_s32_x
__builtin_sve_svrhadd_s64_x
__builtin_sve_svrhadd_u64_z
__builtin_sve_svrinta_f32_m
__builtin_sve_svrinti_f32_m
__builtin_sve_svrintm_f16_m
__builtin_sve_svrintn_f16_x
__builtin_sve_svrintn_f64_z
__builtin_sve_svrintp_f64_z
__builtin_sve_svrintx_f32_x
__builtin_sve_svrintz_f64_m
__builtin_sve_svrshl_n_s32_x
__builtin_sve_svrshl_n_u16_x
__builtin_sve_svrshl_n_u64_x
__builtin_sve_svrshl_s32_z
__builtin_sve_svrshl_u16_m
__builtin_sve_svrshl_u8_m
__builtin_sve_svrshr_n_s16_x
q8Usq16bq8UsIUWi
__builtin_sve_svrshr_n_u64_m
__builtin_sve_svrshrnb_n_s32
__builtin_sve_svrshrnt_n_s32
__builtin_sve_svrsqrte_u32_z
__builtin_sve_svrsra_n_s8
__builtin_sve_svrsubhnb_n_u32
__builtin_sve_svrsubhnb_u16
__builtin_sve_svrsubhnt_s64
__builtin_sve_svsbclb_u64
__builtin_sve_svscale_f32_m
__builtin_sve_svscale_f64_x
__builtin_sve_svscale_n_f64_m
__builtin_sve_svsclamp_s8
__builtin_sve_svsel_s8
--include-with-prefix-after=
q8iq8iIUWiq4i
__builtin_sve_svset2_u32
q24hq24hIUWiq8h
q24sq24sIUWiq8s
q12Uiq12UiIUWiq4Ui
__builtin_sve_svset4_f16
q16iq16iIUWiq4i
__builtin_sve_svset4_u16
q8sq16ScIUWi
__builtin_sve_svshllb_n_u32
__builtin_sve_svshllt_n_u64
__builtin_sve_svshrnb_n_u64
__builtin_sve_svsli_n_s8
__builtin_sve_svsplice_bf16
__builtin_sve_svsplice_u32
__builtin_sve_svsqadd_n_u16_x
__builtin_sve_svsqadd_u16_x
__builtin_sve_svsqadd_u64_z
__builtin_sve_svsqrt_f16_z
__builtin_sve_svsqrt_f64_z
__builtin_sve_svsri_n_s32
__builtin_sve_svst1_bf16
vq16bSs*q8s
__builtin_sve_svst1_s8
__builtin_sve_svst1_scatter_s64index_f64
__builtin_sve_svst1_scatter_s64offset_s64
vq16bq4UiWiq4Ui
__builtin_sve_svst1_scatter_u32base_u32
__builtin_sve_svst1_scatter_u32offset_u32
__builtin_sve_svst1_scatter_u64base_index_u64
__builtin_sve_svst1_scatter_u64index_f64
vq16bSWi*q2UWiq2Wi
vq16bUc*q16Uc
__builtin_sve_svst1_vnum_f64
vq16bSc*Wiq16Sc
vq16bUWi*Wiq2UWi
vQSc*q32Sc
__builtin_sve_svst1b_scatter_s64offset_s64
vq16bSc*q4Uiq4i
__builtin_sve_svst1b_scatter_u64base_s64
vq16bUc*q2UWi
__builtin_sve_svst1b_vnum_s32
vq16bUc*Wiq8Us
vQUc*Wiq32Uc
vQSWi*q8Wi
__builtin_sve_svst1d_vnum_f64_x4
vQUWi*Wiq8UWi
vQy*q32y
vq16bSs*q2Wi
__builtin_sve_svst1h_scatter_s64index_s64
__builtin_sve_svst1h_scatter_u32base_offset_u32
vq16bUs*q4Uiq4Ui
vq16bSs*q2UWiq2Wi
__builtin_sve_svst1h_u16_x4
vQy*Wiq32y
__builtin_sve_svst1h_vnum_s16_x2
vQUs*Wiq32Us
__builtin_sve_svst1w_f32_x4
vq16bSi*q2Wiq2Wi
__builtin_sve_svst1w_scatter_u64base_index_u64
__builtin_sve_svst1w_scatter_u64offset_u64
__builtin_sve_svst1w_vnum_f32_x2
vq16bSi*Wiq2Wi
vQUi*Wiq8Ui
vq16bSs*q16s
__builtin_sve_svst2_u16
vq16by*Wiq16y
vq16bd*Wiq4d
vq16bUs*Wiq16Us
__builtin_sve_svst3_bf16
vq16bSs*q24s
__builtin_sve_svst3_s8
vq16by*Wiq24y
__builtin_sve_svst3_vnum_s16
vq16bUs*Wiq24Us
vq16bUc*Wiq48Uc
vq16bSs*q32s
__builtin_sve_svst4_u16
vq16by*Wiq32y
vq16bf*Wiq16f
vq16bUs*Wiq32Us
__builtin_sve_svstnt1_bf16
__builtin_sve_svstnt1_scatter_s64index_s64
__builtin_sve_svstnt1_scatter_u32base_index_f32
__builtin_sve_svstnt1_scatter_u32offset_u32
__builtin_sve_svstnt1_scatter_u64base_offset_u64
__builtin_sve_svstnt1_u16
__builtin_sve_svstnt1_vnum_f16
__builtin_sve_svstnt1b_s8_x2
__builtin_sve_svstnt1b_scatter_u32base_u32
__builtin_sve_svstnt1b_u8_x2
__builtin_sve_svstnt1d_f64_x2
__builtin_sve_svstnt1d_vnum_u64_x2
__builtin_sve_svstnt1h_s16_x4
__builtin_sve_svstnt1h_scatter_u32base_s32
__builtin_sve_svstnt1h_scatter_u32offset_u32
__builtin_sve_svstnt1h_vnum_bf16_x2
__builtin_sve_svstnt1h_vnum_u16_x4
__builtin_sve_svstnt1w_scatter_u64base_index_s64
__builtin_sve_svstnt1w_scatter_u64index_s64
__builtin_sve_svstnt1w_vnum_u32_x2
__builtin_sve_svsub_f32_z
__builtin_sve_svsub_n_f32_z
__builtin_sve_svsub_n_s16_x
__builtin_sve_svsub_n_u16_m
__builtin_sve_svsub_n_u64_x
__builtin_sve_svsub_s32_x
__builtin_sve_svsub_s8_x
__builtin_sve_svsub_u64_z
__builtin_sve_svsubhnb_n_u16
__builtin_sve_svsubhnt_n_s16
__builtin_sve_svsubhnt_n_u32
__builtin_sve_svsublb_n_u32
__builtin_sve_svsublb_u64
__builtin_sve_svsublt_n_s64
__builtin_sve_svsublt_s64
__builtin_sve_svsubr_f16_m
__builtin_sve_svsubr_f64_x
__builtin_sve_svsubr_n_f64_x
__builtin_sve_svsubr_n_s32_m
__builtin_sve_svsubr_n_u16_z
__builtin_sve_svsubr_n_u8_m
__builtin_sve_svsubr_s64_m
__builtin_sve_svsubr_u16_m
__builtin_sve_svsubr_u8_x
__builtin_sve_svsubwb_n_u64
__builtin_sve_svsubwt_n_s64
__builtin_sve_svsubwt_n_u16
__builtin_sve_svtbl2_bf16
q2dq4dq2UWi
__builtin_sve_svtbl2_u16
__builtin_sve_svtbl2_u8
__builtin_sve_svtbl_s16
q16Scq16Scq16Uc
__builtin_sve_svtbx_f32
q8sq8sq8sq8Us
__builtin_sve_svtmad_f16
__builtin_sve_svtrn1_bf16
__builtin_sve_svtrn1_u16
__builtin_sve_svtrn1q_f32
__builtin_sve_svtrn2_b16
__builtin_sve_svtrn2_f64
__builtin_sve_svtrn2q_bf16
__builtin_sve_svtrn2q_s16
__builtin_sve_svtssel_f32
q16yv
__builtin_sve_svundef2_s32
__builtin_sve_svundef2_u16
__builtin_sve_svundef3_f16
q24sv
__builtin_sve_svundef3_u32
q48Ucv
__builtin_sve_svundef4_s32
q32Usv
__builtin_sve_svundef_f16
__builtin_sve_svundef_s16
__builtin_sve_svundef_u32
__builtin_sve_svunpkhi_s16
__builtin_sve_svunpklo_s64
__builtin_sve_svunpklo_u64
__builtin_sve_svuqadd_s16_m
__builtin_sve_svuqadd_s64_x
__builtin_sve_svusdot_s32
__builtin_sve_svuzp1_b8
__builtin_sve_svuzp1_u32
__builtin_sve_svuzp1q_s16
__builtin_sve_svuzp2_b32
__builtin_sve_svuzp2_f32
__builtin_sve_svuzp2q_f16
__builtin_sve_svuzp2q_u16
q16bUiUi
__builtin_sve_svwhilege_b32_u64
__builtin_sve_svwhilegt_b16_s64
__builtin_sve_svwhilegt_b64_s32
__builtin_sve_svwhilele_b16_s64
__builtin_sve_svwhilele_b32_s64
__builtin_sve_svwhilelt_b16_s64
__builtin_sve_svwhilelt_b64_s32
q16byC*yC*
q16bdC*dC*
q16bUsC*UsC*
__builtin_sve_svwhilewr_bf16
__builtin_sve_svwhilewr_u32
__builtin_sve_svxar_n_s16
__builtin_sve_svzip1_b8
__builtin_sve_svzip1_s64
__builtin_sve_svzip1q_f64
__builtin_sve_svzip1q_u32
__builtin_sve_svzip2_f64
__builtin_sve_svzip2_u64
__builtin_sve_svzip2q_s8
__builtin_sve_svzip2q_u32
__builtin_sve_reinterpret_s8_u32
q16Scq8y
__builtin_sve_reinterpret_s16_s32
__builtin_sve_reinterpret_s16_u16
__builtin_sve_reinterpret_s16_f32
q4Siq8Ss
__builtin_sve_reinterpret_s32_u32
q4Siq8h
__builtin_sve_reinterpret_s64_s32
q2SWiq8Us
__builtin_sve_reinterpret_s64_f32
__builtin_sve_reinterpret_u8_s16
__builtin_sve_reinterpret_u8_u64
q16Ucq4f
__builtin_sve_reinterpret_u16_s64
__builtin_sve_reinterpret_u16_u32
q4Uiq16Sc
__builtin_sve_reinterpret_u32_u8
__builtin_sve_reinterpret_u32_f32
__builtin_sve_reinterpret_u64_s16
__builtin_sve_reinterpret_u64_u32
q2UWiq4f
__builtin_sve_reinterpret_f16_s64
__builtin_sve_reinterpret_f16_u32
__builtin_sve_reinterpret_bf16_s8
q8yq2SWi
__builtin_sve_reinterpret_bf16_f16
q8yq2d
q4fq16Uc
q4fq8h
q2dq8Ss
__builtin_sve_reinterpret_f64_s64
__builtin_sve_reinterpret_f64_f32
__builtin_sve_svget_neonq_s32
V4Uiq4Ui
V4fq4f
q4iq4iV4i
__builtin_sve_svset_neonq_u32
q2dq2dV2d
__builtin_sve_svdup_neonq_s16
__builtin_sve_svdup_neonq_u64
q2dV2d
__builtin_sme_svaddha_za64_s64
__builtin_sme_svaddva_za64_s64
__builtin_sme_svld1_hor_vnum_za64
__builtin_sme_svld1_hor_za8
__builtin_sme_svld1_ver_za64
__builtin_sme_svmla_lane_za32_f32_vg1x2
__builtin_sme_svmla_single_za64_f64_vg1x2
vUiIUWiq16fq16f
__builtin_sme_svmlal_lane_za32_bf16_vg2x4
__builtin_sme_svmlal_lane_za32_f16_vg2x4
__builtin_sme_svmlal_lane_za32_u16_vg2x2
vUiIUWiq16yq8y
__builtin_sme_svmlal_single_za32_s16_vg2x1
vUiIUWiq32sq8s
__builtin_sme_svmlal_za32_f16_vg2x2
vUiIUWiq32sq32s
__builtin_sme_svmls_single_za32_f32_vg1x2
__builtin_sme_svmlsl_lane_za32_s16_vg2x4
__builtin_sme_svmlsl_single_za32_f16_vg2x1
__builtin_sme_svmlsl_single_za32_u16_vg2x4
-malign-branch-boundary=
MipsShortCall
PragmaClangRodataSection
Enable cf-protection in 'full' mode
unspecified,standalone,objc,swift,swift-5.0,swift-4.2,swift-4.1
+nvic
rv635
<tree>
gfx1031
Error opening info-output-file '
   ---Wall Time---
-fcall-saved-x11
-fcall-saved-x13
-fcall-saved-x15
C++ ABI to use. This will override the target C++ ABI.
Exponent has no digits
-fbounds-check
-fbranch-count-reg
Use the last modification time of <file> as the build session timestamp
ObjCImplementation
-fast
-fauto-profile-accurate
-fautomatic
Specify that backslash in string introduces an escape character
all,labels,none,list=
-fblas-matmul-limit=
-fconst-strings
ClassTemplatePartialSpecialization
-fapplication-extension
-fapprox-func
amplification
-fanalyzed-objects-for-unparse
Does nothing; API notes are no longer cached separately from modules
Specify the Swift version to use when filtering API notes
+xgot
<option>
Embed Offloading device-side binary into host object file as a section.
.lock
-fdirect-access-external-data
-fdollars-in-identifiers
-fdriver-only
-fdump-parse-tree
-fdump-record-layouts-simple
-fdump-vtable-layouts
Use DWARF style exceptions
-felide-constructors
-trigraphs
AtomicWrite
-fdepscan-share=
-fdepscan
-fdiagnostics-absolute-paths
-fdiagnostics-format
Prevent misexpect diagnostics from being output if the profile counts are within N% of the expected. 
none,id,name
-fdiagnostics-show-location=
-mavx512bitalg
-mavx512bw
 UsingEnum decls, 
<new>
-fdepscan-prefix-map=
-fdepscan-share-identifier
opteron-sse3
Add OpenCL builtin function declarations (experimental)
Set default calling convention
Set the default integer kind to an 8 byte wide type
Set the default real kind to an 8 byte wide type
-fdelayed-template-parsing
pconfig
equal
waitpkg
VCINSTALLDIR
remap file source paths in debug info, predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
 UsingPack decls, 
Enable support for exception handling
Set the maximum bitwidth for _BitInt (this option is expected to be removed in the future)
-fexperimental-new-pass-manager
-fexperimental-relative-c++-abi-vtables
-fexperimental-sanitize-metadata=covered
Controls how scalar integer arguments are extended in calls to unprototyped and varargs functions
-fexternc-nounwind
-ff2c
-fno-target-variant-availability-checks
-mavx
-mbackchain
unordered
-ffixed-line-length=
-ffixed-r19
 OMPThreadPrivate decls, 
Reserve the d3 register (M68k only)
Reserve the d5 register (M68k only)
nine
<stdin>
REG_0x%x
-ffixed-x16
-ffixed-x17
REG_ASSERT
-ffixed-x23
Reserve the x23 register (AArch64/RISC-V only)
Reserve the x27 register (AArch64/RISC-V only)
#pragma omp end declare target
Only show error-related paths in the analysis graph
Executable "
Couldn't fork
-ffp-exception-behavior=
projectWithError
-fcomplete-member-pointers
__builtin_amdgcn_workitem_id_x
__builtin_amdgcn_grid_size_y
UiIi
__builtin_amdgcn_wave_barrier
__builtin_amdgcn_ds_gws_init
__builtin_amdgcn_atomic_inc32
__builtin_amdgcn_div_scale
__builtin_amdgcn_div_fixupf
__builtin_amdgcn_rcpf
__builtin_amdgcn_log_clampf
__builtin_amdgcn_frexp_expf
__builtin_amdgcn_cubesc
__builtin_amdgcn_fcmp
__builtin_amdgcn_ds_permute
 depth 
-fmodules-strict-decluse
rv64imac
 nocf
Failed to parse minor version number for extension '
-fno-hip-new-launch-api
 Texture3D
Equivalent to -mcmodel=small, compatible with RISC-V gcc.
__builtin_amdgcn_sad_u8
 Domain
 ClosestHit
-Aleon
 sw1
__builtin_amdgcn_flat_atomic_fmin_f64
 OMPHighBWMemAlloc
 MT_Link
OVERLOAD: 
 Target
sandybridge
 OMF_new
Specify code object ABI version. Defaults to 4. (AMDGPU only)
 NonNullError
 NonZeroArgument
thread_local
Uc*7
 IR_ARCFieldWithOwnership
pentium3
 NoAddressDiscrimination
-mconstant-cfstrings
char
__builtin_amdgcn_mfma_f32_16x16x4bf16_1k
 Unroll
_BitInt
 Distribute
btver2
 AssumeSafety
-mcpu=
 IsReplacedByActive
__builtin_amdgcn_cvt_pk_bf8_f32
 polymorphic
union
 has_variant_members
+sse4.2
CopyConstructor
 has_const_param
v101
union
__remove_const
IncompleteArray
+seses
Builtin
-mcx16
DependentName
DependentTemplateSpecialization
MacroQualified
v185
Paren
-mdefault-visibility-export-mapping=
SubstTemplateTypeParmPack
-mdebug-pass
TypeOfExpr
v229
unsigned long long
__forceinline
unsigned _Accum
friend
unsigned long _Fract
-bpD:0x110000000
-mdouble=
<pseudo-object type>
__read_only image2d_array_depth_t
__builtin_hlsl_create_handle
__write_only image2d_msaa_t
__read_write image2d_array_t
<OpenMP iterator type>
amdgpu_num_sgpr
vectorcall
intel_ocl_bicc
gnu::interrupt
a122
gcrt0.o
__local
-meabi
__device__
HandleType
_Complex 
__vector __pixel 
__attribute__((__arm_sve_vector_bits__(
 __sized_by(
 /* __started_by(
a226
 __counted_by(
/lib/ld-ananas.so
Don't emit in-descriptor block flags
clang::annotate_type
E-m:e-p:32:32-Fi8-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
8_6A
9_3A
+thumb-mode
+vfp4sp
+hwdiv-arm
+neonfp
__ARM_32BIT_STATE
__ARM_RWPI
__ARM_VFPV2__
__ARM_FEATURE_CDE
__builtin_arm_smultt
__builtin_arm_usat
__builtin_arm_usat16
__builtin_arm_qadd8
__builtin_arm_uqsub8
__builtin_arm_qsub16
__builtin_arm_ssub16
__builtin_arm_uadd16
__builtin_arm_uhsax
+fp-armv8
 vcall offset offset
clang::assume
() [scalar deleting]
vbptr at offset 
vtordisp at 
+wavefrontsize64
begin declare target
__builtin_arm_get_fpscr
__cdecl
vUIiUIiUIiUIiUIiUIi
end declare target
ROCm installation search path
flush
__builtin_arm_mve_srshrl
nothing
/libclang_rt.
parallel master taskloop simd
__builtin_arm_mve_vabdq_s8
target enter data
__builtin_arm_mve_vabsq_f16
target simd
-Tdata=0x
target teams distribute parallel for simd
__builtin_arm_mve_vaddq_m_n_f32
teams distribute parallel do simd
--end-group
Insert calls to fentry at function entry (x86/SystemZ only)
Encoding...
gnu::cold
__builtin_arm_mve_vaddvaq_p_u8
compare
at90s1200
destroy
dynamic_allocators
__builtin_arm_mve_vandq_x_f32
Work around Cortex-A72 Erratum 1655431 (ARM only)
nowait
__builtin_arm_mve_vbicq_x_f32
partial
require_constant_initialization
reverse_offload
at90s2333
use_device_addr
-mfloat-abi
x86_64
__builtin_arm_mve_vcaddq_rot90_m_u8
invalid
__builtin_arm_mve_vcaddq_rot90_x_u16
Message
condition
attiny13
atomic_default_mem_order
Disable the integrated assembler
__builtin_arm_mve_vcmpeqq_m_n_u32
match_none
disable_implicit_base
<any, entirely target dependent>
Use 64-bit floating point registers (MIPS only)
enable-name-compression
UserDiagnostic
value profile address is greater than total size
ata5272
__llvm_orderfile
too much profile data
Enable the 'modules' language feature
<name>-<arg>
-mfp64
__builtin_arm_mve_vcmpltq_s32
profile data is empty
FormatIdx
__builtin_arm_mve_vcmpneq_m_s8
attiny461
A fixed cold count that overrides the count derived from profile-summary-cutoff-cold
-mframe-chain=
attiny861
attiny861a
Section too small: cannot read buckets and hashes.
__builtin_arm_mve_vcvtaq_m_s16_f16
Incorrectly terminated list.
Space
DIE offset base
at43usb355
Hash 0x
Use external machine object code emitter.
Name count
Resolver
Name 
Compilation Unit offsets
LocalTU[%u]: 0x%08llx
gnu::ms_abi
Name Index @ 0x
: Compile Unit:
, version = 
ata664251
__builtin_arm_mve_vdupq_m_n_s8
.debug_abbrev.dwo
.debug_types.dwo
.debug_frame
.debug_macinfo
ata6289
.debug_str.dwo
__builtin_arm_mve_vfmaq_m_f16
matrix_type
__builtin_arm_mve_vgetq_lane_s16
.gdb_index
atmega48
UUID: 
__builtin_arm_mve_vhaddq_x_n_s16
no end of list marker detected at end of %s table starting at offset 0x%llx
atmega88
failed to decompress '
__builtin_arm_mve_vhsubq_m_n_s8
At most two relocations per offset are supported
__builtin_arm_mve_vhsubq_n_s8
debug_macro.dwo
atmega8515
__builtin_arm_mve_vhsubq_x_u32
Abbrev table for offset: 0x%8.8llx
address table at offset 0x%llx has unsupported segment selector size %hhu
at90pwm2b
-fproc-stat-report
Enable merging of globals
__builtin_arm_mve_vld1q_z_s16
__builtin_arm_mve_vld4q_s16
length = 0x%0*llx, 
avr5
addr_size = 0x%2.2x, 
invalid extended CFI opcode 0x%hhx
__builtin_arm_mve_vldrhq_gather_offset_s16
-mharden-sls=
ata5831
__builtin_arm_mve_vldrhq_s32
%s encountered when existing rule for this register is not a constant
gnu::noinline
 operand to
ata8510
 ZERO terminator
-mhvx-ieee-fp
  Version:               %d
__builtin_arm_mve_vmaxnmvq_f16
  Format:       
__builtin_arm_mve_vmaxq_s8
parsing entry instructions at 0x%llx failed
no_sanitize_address
, 0x0
atmega165a
'\f'
Don't keep static const variables if unused
no_split_stack
         version: %u
 min_inst_length: %u
__builtin_arm_mve_vminvq_u32
nouwtable
__builtin_arm_mve_vmladavaq_u32
   md5_checksum: 
atmega169p
atmega169pa
 is_stmt
 end_sequence
__builtin_arm_mve_vmlaq_n_s16
, dir=
clang::objc_boxable
Enable full Microsoft Visual C++ compatibility
atmega324pb
0x%16.16llx
-miamcu
last sequence in debug line table at offset 0x%8.8llx is not terminated
__builtin_arm_mve_vmlsldavaxq_s16
-mibt-seal
          => 
, debug_line_offset = 0x%0*llx
 - import offset: 0x%0*llx
-mieee-fp
Kind
__builtin_arm_mve_vmulhq_x_s8
0x%0*llx 
atmega329a
NSObject
<End of list>
__builtin_arm_mve_vmulltq_int_x_u32
NULL
__builtin_arm_mve_vmulq_n_s16
atmega64
-migrate
__builtin_arm_mve_vmulq_x_n_u32
objc_runtime_visible
<0x%8.8x> 
__builtin_arm_mve_vmvnq_n_u16
indexed (%8.8x) string = 
opencl_local
Unsupported form for string attribute
-mimplicit-sme
  Types CU list offset = {0:x}, has {1} entries:
-fno-logical-abbreviations
__global
__builtin_arm_mve_vorrq_m_n_u32
%s table at offset 0x%llx has too small length (0x%llx) to contain a complete header
atmega6450a
%s list header: length = 0x%0*llx
clang::param_typestate
ABBREV
RNGLISTS
TYPES
%5u 0x%016llx 
clang::overloadable
DWARF unit from offset 0x%8.8llx incl. to offset  0x%8.8llx excl. extends past section size 0x%8.8zx
atmega16hvbrevb
No unit DIE
__builtin_arm_mve_vqdmulhq_n_s16
Units[%d] - start offset: 0x%08llx 
__builtin_arm_mve_vqdmullbq_s16
 has DW_CHILDREN_yes but DIE has no children: 
Compilation unit without DIE.
 attributes.
Section is empty.
__builtin_arm_mve_vqrdmlahq_n_s32
__ptrauth
DW_AT_ranges offset is beyond 
__builtin_arm_mve_vqrdmlsdhxq_m_s8
DW_AT_stmt_list offset is beyond .debug_line bounds: 
__builtin_arm_mve_vqrshlq_m_n_s16
 (valid values are [
TypedefType
__builtin_arm_mve_vqrshlq_n_s16
atmega32u6
] is a duplicate of file_names[
] decreases in address from previous row:
__builtin_arm_mve_vqshlq_m_u32
Hash[%d] has invalid HashData offset: 0x%08llx.
__builtin_arm_mve_vqshlq_r_u32
Name Index @ {0:x} does not index any CU
reinitializes
Bucket {0} of Name Index @ {1:x} contains invalid value {2}. Valid range is [0, {3}].
atmega1281
NameIndex @ {0:x}: Abbreviation {1:x}: {2} uses an unexpected form {3} (expected form class {4}).
Equivalent to -march=mips1
Verifying .debug_names...
Unknown DW_SECT value 0
Name Index @ {0:x}: Name {1} ({2}): {3}
__builtin_arm_mve_vreinterpretq_s32_u64
String table must end with a null terminator
__builtin_arm_mve_vreinterpretq_s8_f32
's cputype does not match object file's mach header
atmega256rfr2
__builtin_arm_mve_vreinterpretq_u8_s8
-mips32
atmega16u4
LC_SEGMENT_SPLIT_INFO
more than one LC_UUID command
__builtin_arm_mve_vrev64q_m_f32
LC_LOAD_DYLINKER
clang::speculative_load_hardening
overlapping index entries for entries {0:x16} and {1:x16} for column {2}
attiny104
LC_ENCRYPTION_INFO_64
__builtin_arm_mve_vrmlaldavhq_u32
__builtin_arm_mve_vrmlsldavhaq_s32
more than one LC_ROUTINES and or LC_ROUTINES_64 command
more than one LC_ROUTINES_64 and or LC_ROUTINES command
__builtin_arm_mve_vrndmq_f32
ilocalsym in LC_DYSYMTAB load command extends past the end of the symbol table
Metadata
__builtin_arm_mve_vrndpq_f32
atxmega32d3
GENERIC_RELOC_VANILLA
-mips64r3
atxmega16e5
atxmega64a3
ARM_RELOC_LOCAL_SECTDIFF
__builtin_arm_mve_vrshrq_m_n_s32
ARM_THUMB_RELOC_BR22
__builtin_arm_mve_vrshrq_x_n_u8
ARM64_RELOC_GOT_LOAD_PAGEOFF12
atxmega64b3
PPC_RELOC_VANILLA
target_clones
PPC_RELOC_HA16
Requested symbol index is out of range.
NameIndex @ {0:x}: Abbreviation {1:x} contains an unknown index attribute: {2}.
__builtin_arm_mve_vshlq_m_s32
x86_64-apple-darwin
clang::trivial_abi
armv5e-apple-darwin
atxmega128b1
armv5e
atxmega128c3
Name Index @ {0:x}: String ({1}) at index {2} hashes to {3:x}, but the Name Index hash is {4:x}
__builtin_arm_mve_vshrq_x_n_s32
) in export trie data at node: 0x
__builtin_arm_mve_vsliq_n_s32
byte for count of childern in export trie data at node: 0x
clang::unsafe_buffer_usage
node is not an export node in export trie data at node: 0x
atxmega256a3u
for REBASE_OPCODE_ADD_ADDR_ULEB 
__builtin_arm_mve_vst4q_u8
__builtin_arm_mve_vstrbq_p_u16
for BIND_OPCODE_SET_ADDEND_SLEB 
for BIND_OPCODE_ADD_ADDR_ULEB 
__builtin_arm_mve_vstrdq_scatter_offset_u64
for BIND_OPCODE_ADD_ADDR_ULEB (after adding ULEB) 
NumBytes
NameIndex @ {0:x}: Indexing multiple compile units and abbreviation {1:x} has no {2} attribute.
atxmega128a4u
for BIND_SUBOPCODE_THREADED_APPLY 
-mlink-cuda-bitcode
attiny212
bad chained fixups: image starts end 
-mlittle-endian
 starts past end 
ImportName
 page_start index 
attiny412
 extends past section data
Use instrumentation data for profile-guided optimization. If pathname is a directory, it reads from <pathname>/default.profdata. Otherwise, it reads from file <pathname>.
Contents
Extend the -G behaviour to object local data (MIPS)
kernel functions
__builtin_arm_mve_vbicq
struct nlist_64
attiny817
) of LC_SYMTAB command 
variables
LC_DYSYMTAB command 
__builtin_arm_mve_vcmpltq_m
__builtin_arm_mve_vcmulq_rot270
structs, unions, and classes
__builtin_arm_mve_vdwdupq_u8
classes
dataoff field plus datasize field of 
__builtin_arm_mve_vidupq_u32
dyld weak bind info
Force long double to be 80 bits, padded to 128 bits for storage
dyld export info
__builtin_arm_mve_vldrhq_gather_shifted_offset
attiny1624
-mlvi-cfi
__builtin_arm_mve_vminnmq
functions, Objective-C methods, and blocks
 LC_LINKER_OPTION string count 
__builtin_arm_mve_vmlaldavxq_p
 extends past end of command
-lsupc++
__builtin_arm_mve_vmlsldavxq_p
Objective-C interfaces and Objective-C implementation declarations
 x86_THREAD_STATE64 extends past end of command in 
 which is a x86_EXCEPTION_STATE64 flavor in 
 count not ARM_THREAD_STATE64_COUNT for flavor number 
function templates
__builtin_arm_mve_vqdmlahq_m
rv64imac
offset field of LC_TWOLEVEL_HINTS command 
-mmacosx-version-min=
 extends past the end all load commands in the file
__builtin_arm_mve_vqrshruntq
addr field plus size of section 
atomic_half
section relocation entries
MachOUniversalBinary::ObjectForArch::getAsObjectFile() called when Parent is a nullptr
fat_arch
__builtin_arm_mve_vrhaddq_x
/rv32im/ilp32
__builtin_arm_mve_vrndmq_m
, overlaps cputype (
Invalid signature
invalid number of sections specified in the NULL section's sh_size field (
__builtin_arm_mve_vshllbq_m
 go past the end of the file
__builtin_arm_mve_vshrntq_m
aix5coff64-rs6000
march=rv32im
a csect auxiliary entry has not been found for symbol "
-mmfcrf
armv7
arm64
march=rv32imafc
ilp32
cannot remove last architecture slice '
target_info
install_names
baremetal
names
__builtin_arm_cde_vcx2q_u8_u16
strict_gs_check
macOS
-mmma
sepOS
tvos
sepos
tvos-simulator
-fmudflapth
__flash4
__AVR_ATtiny12__
__AVR_AT86RF401__
__AVR_AT90S8535__
__AVR_ATtiny44__
__AVR_ATtiny261__
__AVR_ATtiny43U__
__AVR_ATmega103__
__AVR_ATmega32U2__
__AVR_ATA6612C__
__AVR_ATmega88PA__
__AVR_AT90PWM1__
__AVR_ATA5795__
__AVR_ATmega16A__
__AVR_ATmega165P__
__AVR_ATmega168PB__
__AVR_ATmega324PA__
__AVR_ATmega3250A__
__AVR_ATmega329PA__
__AVR_ATmega406__
__AVR_ATmega649__
__AVR_ATmega6490A__
__AVR_ATmega32HVBREVB__
__AVR_AT90PWM216__
__AVR_AT90USB646__
__AVR_ATmega1280__
__AVR_AT90USB1287__
__AVR_ATmega2564RFR2__
__AVR_ATxmega16E5__
__AVR_ATxmega64C3__
__AVR_ATxmega128C3__
__AVR_ATxmega192D3__
__AVR_ATxmega128A1U__
__AVR_ATtiny40__
__AVR_ATtiny406__
__AVR_ATtiny212__
__AVR_ATtiny817__
__AVR_ATmega809__
__AVR_ATmega4808__
.cv_inline_site_id
__bpf__
__CSKY_3E3R1__
fr14
fr23
fr30
vr14
vr23
vr25
-x86-asm-syntax=
hexagonv66
__HEXAGON_V67T__
__HVX_ARCH__
long-calls
r15:14
r27:26
c1:0
c21:20
upcyclehi
utimerlo
v13:12
v27:26
v27:24
__builtin_brev_ldw
__builtin_circ_ldd
Us*Us*Us*iIi
__builtin_brev_sth
c*Cc*iiC
__builtin_HEXAGON_L2_loadrb_pci
iv*ivC*
__builtin_HEXAGON_S2_storerh_pci
vv*iivC*
__builtin_HEXAGON_V6_vmaskedstoreq
vV128bv*V32i
__builtin_HEXAGON_V6_vrmpybub_rtt_acc
__builtin_HEXAGON_V6_vrmpyub_rtt_128B
__builtin_HEXAGON_A2_addh_h16_ll
__builtin_HEXAGON_A2_addh_l16_sat_hl
__builtin_HEXAGON_A2_andir
__builtin_HEXAGON_A2_combine_lh
__builtin_HEXAGON_A2_maxup
__builtin_HEXAGON_A2_negp
__builtin_HEXAGON_A2_sat
__builtin_HEXAGON_A2_satuh
__builtin_HEXAGON_A2_subh_l16_sat_hl
__builtin_HEXAGON_A2_svaddhs
__builtin_HEXAGON_A2_sxtb
__builtin_HEXAGON_A2_tfril
__builtin_HEXAGON_A2_vaddb_map
__builtin_HEXAGON_A2_vaddws
__builtin_HEXAGON_A2_vavguwr
iLLiLLi
__builtin_HEXAGON_A2_vmaxub
__builtin_HEXAGON_A2_vminuh
__builtin_HEXAGON_A2_vraddub
__builtin_HEXAGON_A2_vsubh
__builtin_HEXAGON_A2_zxth
iiLLi
__builtin_HEXAGON_A4_cmphgt
__builtin_HEXAGON_A4_cmphgtui
__builtin_HEXAGON_A4_rcmpneqi
__builtin_HEXAGON_A4_vcmpbeq_any
__builtin_HEXAGON_A4_vcmphgtui
__builtin_HEXAGON_A4_vrmaxuh
__builtin_HEXAGON_C2_andn
__builtin_HEXAGON_C2_cmpeqp
__builtin_HEXAGON_C2_cmplt
iiIiIi
__builtin_HEXAGON_C2_vitpack
__builtin_HEXAGON_C4_and_orn
__builtin_HEXAGON_C4_nbitsclr
__builtin_HEXAGON_C4_or_orn
__builtin_HEXAGON_F2_conv_df2ud_chop
__builtin_HEXAGON_F2_conv_sf2d_chop
__builtin_HEXAGON_F2_conv_ud2df
__builtin_HEXAGON_F2_conv_w2df
__builtin_HEXAGON_F2_sfadd
__builtin_HEXAGON_F2_sfcmpuo
__builtin_HEXAGON_F2_sffms_lib
__builtin_HEXAGON_F2_sfmpy
__builtin_HEXAGON_M2_cmacsc_s1
__builtin_HEXAGON_M2_cmpys_s0
__builtin_HEXAGON_M2_dpmpyss_nac_s0
__builtin_HEXAGON_M2_dpmpyuu_s0
__builtin_HEXAGON_M2_mmachs_rs1
__builtin_HEXAGON_M2_mmacuhs_rs0
__builtin_HEXAGON_M2_mmpyh_rs1
__builtin_HEXAGON_M2_mmpyl_s1
__builtin_HEXAGON_M2_mpy_acc_hh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s0
__builtin_HEXAGON_M2_mpy_hh_s1
__builtin_HEXAGON_M2_mpy_lh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s1
__builtin_HEXAGON_M2_mpy_rnd_hh_s0
__builtin_HEXAGON_M2_mpy_sat_hh_s1
__builtin_HEXAGON_M2_mpy_sat_ll_s1
__builtin_HEXAGON_M2_mpy_up_s1
__builtin_HEXAGON_M2_mpyd_acc_lh_s1
__builtin_HEXAGON_M2_mpyd_ll_s0
__builtin_HEXAGON_M2_mpyd_nac_hl_s1
__builtin_HEXAGON_M2_mpyd_rnd_ll_s0
__builtin_HEXAGON_M2_mpyu_acc_hl_s0
__builtin_HEXAGON_M2_mpyu_hl_s1
__builtin_HEXAGON_M2_mpyu_nac_hh_s1
__builtin_HEXAGON_M2_mpyud_acc_hl_s0
__builtin_HEXAGON_M2_mpyud_hh_s1
__builtin_HEXAGON_M2_mpyud_nac_hl_s0
__builtin_HEXAGON_M2_mpyud_nac_ll_s0
__builtin_HEXAGON_M2_vcmpy_s1_sat_i
__builtin_HEXAGON_M2_vdmpys_s1
__builtin_HEXAGON_M2_vmpy2es_s0
__builtin_HEXAGON_M2_vmpy2su_s0
__builtin_HEXAGON_M2_vrcmpyr_s0
__builtin_HEXAGON_M2_vrmpy_s0
__builtin_HEXAGON_M4_cmpyr_whc
__builtin_HEXAGON_M4_mpyri_addr_u2
__builtin_HEXAGON_M4_pmpyw_acc
__builtin_HEXAGON_M4_vrmpyoh_acc_s0
__builtin_HEXAGON_M5_vdmpybsu
__builtin_HEXAGON_M5_vrmacbuu
__builtin_HEXAGON_S2_asl_i_p_or
__builtin_HEXAGON_S2_asl_i_r_sat
__builtin_HEXAGON_S2_asl_r_p_xor
__builtin_HEXAGON_S2_asl_r_r_acc
__builtin_HEXAGON_S2_asr_i_r
__builtin_HEXAGON_S2_asr_i_svw_trun
__builtin_HEXAGON_S2_asr_r_r
__builtin_HEXAGON_S2_asr_r_svw_trun
__builtin_HEXAGON_S2_clbnorm
__builtin_HEXAGON_S2_ct1p
iiiUIiUIi
__builtin_HEXAGON_S2_insertp_rp
__builtin_HEXAGON_S2_lsl_r_r_and
__builtin_HEXAGON_S2_lsr_i_p_and
__builtin_HEXAGON_S2_lsr_i_r_xacc
__builtin_HEXAGON_S2_lsr_r_p_nac
__builtin_HEXAGON_S2_packhl
__builtin_HEXAGON_S2_shuffoh
__builtin_HEXAGON_S2_tstbit_i
__builtin_HEXAGON_S2_vcnegh
__builtin_HEXAGON_S2_vsatwuh_nopack
__builtin_HEXAGON_S2_vtrunehb
__builtin_HEXAGON_S4_andi_asl_ri
__builtin_HEXAGON_S4_extract_rp
__builtin_HEXAGON_S4_ori_lsr_ri
__builtin_HEXAGON_S4_vrcrotate_acc
__builtin_HEXAGON_S5_asrhub_sat
__builtin_HEXAGON_Y2_dcfetch
__builtin_HEXAGON_S6_rol_i_p_nac
__builtin_HEXAGON_S6_rol_i_r_or
__builtin_HEXAGON_F2_dfadd
__builtin_HEXAGON_A7_clip
__builtin_HEXAGON_F2_dfmpyll
__builtin_HEXAGON_M7_dcmpyrwc
__builtin_HEXAGON_M7_wcmpyrw_rnd
__builtin_HEXAGON_Y6_dmlink
__builtin_HEXAGON_V6_hi_128B
V32ii
__builtin_HEXAGON_V6_pred_not_128B
__builtin_HEXAGON_V6_pred_scalar2
__builtin_HEXAGON_V6_vS32b_nt_qpred_ai
V32iV32iV32i
__builtin_HEXAGON_V6_vabsh_128B
__builtin_HEXAGON_V6_vabsw_128B
V32iV128bV32iV32i
__builtin_HEXAGON_V6_vaddhnq
V32iV16iV16i
__builtin_HEXAGON_V6_vaddubsat_128B
__builtin_HEXAGON_V6_vaddw_128B
__builtin_HEXAGON_V6_vaddwsat
V16iV16iV16iUIi
__builtin_HEXAGON_V6_vand_128B
V128bV32ii
__builtin_HEXAGON_V6_vaslh_128B
__builtin_HEXAGON_V6_vaslwv_128B
__builtin_HEXAGON_V6_vasrhubrndsat_128B
__builtin_HEXAGON_V6_vasrwh_128B
__builtin_HEXAGON_V6_vasrwv
__builtin_HEXAGON_V6_vavghrnd
__builtin_HEXAGON_V6_vavgubrnd_128B
__builtin_HEXAGON_V6_vcl0w
V32i
__builtin_HEXAGON_V6_vdealvdd_128B
__builtin_HEXAGON_V6_vdmpybus_acc
__builtin_HEXAGON_V6_vdmpyhb_acc
V16iV32ii
__builtin_HEXAGON_V6_vdmpyhsat_acc
__builtin_HEXAGON_V6_vdmpyhsat_acc_128B
__builtin_HEXAGON_V6_vdsaduh
V128bV32iV32i
__builtin_HEXAGON_V6_veqh
__builtin_HEXAGON_V6_veqh_xor
__builtin_HEXAGON_V6_vgtb
__builtin_HEXAGON_V6_vgtb_xor_128B
__builtin_HEXAGON_V6_vgtub
__builtin_HEXAGON_V6_vgtub_or_128B
__builtin_HEXAGON_V6_vgtuw
__builtin_HEXAGON_V6_vgtuw_xor_128B
__builtin_HEXAGON_V6_vinsertwr
__builtin_HEXAGON_V6_vlsrh
__builtin_HEXAGON_V6_vlutvvb_oracc
V32iV32iV16iV16ii
__builtin_HEXAGON_V6_vmaxw
__builtin_HEXAGON_V6_vminub
__builtin_HEXAGON_V6_vmpabuuv
V32iV16ii
__builtin_HEXAGON_V6_vmpybusv_acc
__builtin_HEXAGON_V6_vmpybv_acc
__builtin_HEXAGON_V6_vmpyhss
__builtin_HEXAGON_V6_vmpyhv_128B
__builtin_HEXAGON_V6_vmpyiewuh
__builtin_HEXAGON_V6_vmpyih_128B
__builtin_HEXAGON_V6_vmpyiwb_acc
__builtin_HEXAGON_V6_vmpyowh_128B
__builtin_HEXAGON_V6_vmpyub_acc
__builtin_HEXAGON_V6_vmpyuh
__builtin_HEXAGON_V6_vnavgh
__builtin_HEXAGON_V6_vnormamth_128B
__builtin_HEXAGON_V6_vpackeh
__builtin_HEXAGON_V6_vpackhb_sat_128B
__builtin_HEXAGON_V6_vrdelta
V32iV32iiUIi
__builtin_HEXAGON_V6_vrmpybusv_acc
__builtin_HEXAGON_V6_vrmpyub
__builtin_HEXAGON_V6_vrmpyubv_acc
__builtin_HEXAGON_V6_vroundhub_128B
__builtin_HEXAGON_V6_vsathub
V32iV16i
__builtin_HEXAGON_V6_vshuffh
__builtin_HEXAGON_V6_vshufoeb_128B
__builtin_HEXAGON_V6_vsubbnq
__builtin_HEXAGON_V6_vsubh_dv
__builtin_HEXAGON_V6_vsubhw
__builtin_HEXAGON_V6_vsububsat_dv_128B
__builtin_HEXAGON_V6_vsubw_dv
__builtin_HEXAGON_V6_vsubwq
__builtin_HEXAGON_V6_vtmpyb_acc
__builtin_HEXAGON_V6_vtmpyhb_128B
__builtin_HEXAGON_V6_vunpackob_128B
__builtin_HEXAGON_V6_vunpackuh
__builtin_HEXAGON_V6_lvsplatb_128B
__builtin_HEXAGON_V6_shuffeqw
V32iV32iV32iv*
__builtin_HEXAGON_V6_vaddhw_acc
__builtin_HEXAGON_V6_vadduwsat_dv_128B
__builtin_HEXAGON_V6_vandvnqv_128B
__builtin_HEXAGON_V6_vasrwuhrndsat_128B
V16iV16iV16iV16iUIi
V64iV64iV32iV32iUIi
__builtin_HEXAGON_V6_vminb
__builtin_HEXAGON_V6_vmpyiwub_128B
__builtin_HEXAGON_V6_vmpyiwub_acc_128B
__builtin_HEXAGON_V6_vsubcarry_128B
__builtin_HEXAGON_V6_vabsb
__builtin_HEXAGON_V6_vasruhubrndsat
__builtin_HEXAGON_V6_vavgb
V64i
__builtin_HEXAGON_V6_vgathermhq_128B
__builtin_HEXAGON_V6_vgathermw
V16iV16iLLi
__builtin_HEXAGON_V6_vmpauhuhsat
__builtin_HEXAGON_V6_vmpyuhe_128B
__builtin_HEXAGON_V6_vprefixqh
__builtin_HEXAGON_V6_vscattermh_128B
__builtin_HEXAGON_V6_vscattermhw_128B
vV128biiV64iV32i
hvxv66|hvxv67|hvxv68|hvxv69
__builtin_HEXAGON_V6_vasr_into_128B
__builtin_HEXAGON_V6_v6mpyvubs10
__builtin_HEXAGON_V6_vabs_sf_128B
__builtin_HEXAGON_V6_vadd_qf32
__builtin_HEXAGON_V6_vadd_sf_hf
__builtin_HEXAGON_V6_vconv_sf_qf32
__builtin_HEXAGON_V6_vcvt_hf_b_128B
__builtin_HEXAGON_V6_vcvt_sf_hf
__builtin_HEXAGON_V6_vcvt_uh_hf_128B
__builtin_HEXAGON_V6_vfmin_sf
__builtin_HEXAGON_V6_vgthf_128B
__builtin_HEXAGON_V6_vgtsf_and
__builtin_HEXAGON_V6_vmax_hf
__builtin_HEXAGON_V6_vmpy_hf_hf_acc
__builtin_HEXAGON_V6_vmpy_qf16_mix_hf_128B
__builtin_HEXAGON_V6_vmpy_qf32_sf
__builtin_HEXAGON_V6_vmpy_sf_hf_128B
__builtin_HEXAGON_V6_vsub_qf32
__builtin_HEXAGON_V6_vsub_sf_hf_128B
__builtin_HEXAGON_V6_vasrvuhubsat_128B
-mno-nvs
$r16
$r23
$zero
$fa2
$ft1
$ft10
$ft15
$fs5
mc68000
__mc68020__
mc68060
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_min_max __opencl_c_ext_fp64_global_atomic_min_max __opencl_c_atomic_scope_device
__builtin_mips_maddu
__builtin_mips_modsub
V4ScV2sV2s
V2sV4Sc
__builtin_mips_preceu_ph_qbra
__builtin_mips_shll_s_w
__builtin_mips_mulq_rs_ph
__builtin_mips_mult
__builtin_mips_dpsu_h_qbr
__builtin_mips_cmpgu_eq_qb
vV2sV2s
-fdefault-calling-conv=fastcall
-cfguard-no-checks
cl_mem_fence_flags
ehcont-
stdalign.h
__builtin_mips_multu
-fptrauth-kernel-abi-version
vV4ScV4Sc
cfenv
.previous.ub.
clocale
ctime
cwchar
__builtin_mips_dpaqx_s_w_ph
_REENTRANT
chrono
__builtin_msa_add_a_w
streambuf
.linear.step
exception
file=
fcntl.h
fnmatch.h
libgen.h
--image=
regex.h
__builtin_msa_binsl_h
omp_allocator_handle_t
__builtin_msa_binsr_w
sys/shm.h
--device-debug
sys/types.h
-fno-openmp-optimistic-collapse
__builtin_msa_ceq_w
__builtin_msa_ceqi_d
.task_red.
__builtin_msa_clei_s_h
__has_cpp_attribute
clang-linker-wrapper
-fno-openmp-simd
forKeyedSubscript
__has_include
iV4UiIUi
__is_target_arch
vloxseg6ei32_v
-mno-relax
??:??:??
-mno-relax-pic-calls
vloxseg6ei16_v
V4fV2dV2d
ptrauth_vtable_pointer_address_discrimination
-mno-relaxed-simd
V4fV4Ui
V2SLLiLLi
V2dV2d
__builtin_msa_fmin_a_d
pragma once
-mno-rtd
pragma clang __debug captured
restrict_expansion
+mips4
-mno-sahf
 #undef.
__builtin_msa_ilvl_d
B total
vsseg8e16_v
+mips32r6
enum_constant
__builtin_msa_maddr_q_w
+mips64r6
__builtin_msa_max_u_h
variable
V4UiV4UiIi
bjc_arc_weak_reference_unavailable
nu::no_profile_instrument_function
vssseg5e64_v
__builtin_copysign
AS_SECURE_LOG_FILE
__builtin_fabs
vssseg8e32_v
__builtin_fmod
-Ofast
__builtin_msa_sld_w
__builtin_msa_sll_b
vsuxseg2ei16_v
__builtin_msa_srari_b
vsuxseg5ei32_v
__builtin_msa_subs_s_w
-menable-unsafe-fp-math
-fsanitize-coverage-indirect-calls
-fdenormal-fp-math=
_mips
-ffp-contract=
-fno-allow-editor-placeholders
__builtin_asinhf
__nvvm_read_ptx_sreg_nctaid_z
__nvvm_read_ptx_sreg_gridid
__nvvm_read_ptx_sreg_pm0
__nvvm_fmin_ftz_f16
V2hV2hV2h
__nvvm_fmin_nan_xorsign_abs_f16x2
__nvvm_fmin_nan_xorsign_abs_bf16x2
__nvvm_fmin_nan_xorsign_abs_f
__nvvm_fmax_nan_xorsign_abs_f16
__nvvm_fmax_ftz_nan_f16x2
__nvvm_fmax_xorsign_abs_bf16x2
__nvvm_fmax_ftz_xorsign_abs_f
__nvvm_mul_rn_f
__nvvm_mul_rp_f
__nvvm_div_rn_f
__nvvm_div_rn_d
__nvvm_ceil_ftz_f
__nvvm_fabs_d
__nvvm_ex2_approx_f
__nvvm_lg2_approx_f
__nvvm_fma_rn_sat_f16
__nvvm_fma_rn_ftz_f16x2
__nvvm_fma_rn_relu_bf16x2
__nvvm_fma_rp_ftz_f
__nvvm_rcp_rz_f
__nvvm_rcp_rp_f
__nvvm_sqrt_rm_f
__nvvm_sqrt_rm_d
__nvvm_add_rm_ftz_f
__nvvm_add_rm_d
__nvvm_d2i_rn
__nvvm_d2ui_rm
__nvvm_ui2d_rm
__nvvm_f2i_rz
__nvvm_f2ui_rp_ftz
__nvvm_ui2f_rz
__nvvm_f2ll_rz_ftz
__nvvm_f2ull_rn_ftz
__nvvm_d2ll_rz
__nvvm_d2ull_rp
__nvvm_ull2f_rp
__nvvm_ll2d_rp
__nvvm_ff2bf16x2_rz
__nvvm_f2bf16_rn
__nvvm_bitcast_ll2d
__nvvm_bar0_popc
__nvvm_shfl_up_i32
iUiiii
__nvvm_vote_all
__nvvm_vote_all_sync
UiUiUii*
__nvvm_redux_sync_umax
__nvvm_mbarrier_init_shared
__nvvm_mbarrier_arrive
__nvvm_mbarrier_arrive_drop_noComplete
__nvvm_memcpy
V4iiiii
__builtin_ptx_read_image3Dfi_
viiiUiUiUiUi
iiD*i
__nvvm_atom_cta_add_gen_ll
__nvvm_atom_add_gen_d
__nvvm_atom_xchg_gen_l
__nvvm_atom_cta_max_gen_i
__nvvm_atom_max_gen_ul
__nvvm_atom_cta_max_gen_ll
__nvvm_atom_sys_min_gen_ui
__nvvm_atom_min_gen_ll
__nvvm_atom_dec_gen_ui
__nvvm_atom_and_gen_l
__nvvm_atom_cta_or_gen_l
__nvvm_atom_sys_xor_gen_i
__nvvm_atom_cta_cas_gen_i
__nvvm_atom_cta_cas_gen_l
__nvvm_ldg_i
UcUcC*
__nvvm_ldg_f
__nvvm_ldg_c4
__nvvm_ldg_ll2
E2UsE2UsC*
__nvvm_ldg_f2
E2dE2dC*
vf*fC*UiIi
__hmma_m32n8k16_ld_b
__hmma_m8n32k16_st_c_f16
__hmma_m16n16k16_mma_f32f32
__hmma_m8n32k16_mma_f32f32
vi*iC*iC*iC*Ii
__imma_m16n16k16_ld_c
__imma_m16n16k16_mma_u8
__imma_m8n32k16_ld_c
__imma_m8n8k32_ld_b_u4
__dmma_m8n8k4_st_c_f64
__mma_bf16_m8n32k16_ld_a
__mma_tf32_m16n16k8_mma_f32
__nvvm_cp_async_ca_shared_global_8
ZUiZUi
e-i64:64-i128:128-v16:16-v32:32-n16:32:64
-fno-pic
__ENVIRONMENT_WATCH_OS_VERSION_MIN_REQUIRED__
_WIN64
__BOOL_DEFINED
_RVALUE_REFERENCES_SUPPORTED
_INTEGRAL_MAX_BITS
-module-dependency-dir
vvC*
__builtin_ppc_frim
__builtin_ppc_frizs
__builtin_ppc_compare_and_swaplp
__builtin_ppc_fetch_and_orlp
ccD*
__builtin_ppc_stbcx
__builtin_ppc_fcfud
__builtin_ppc_swdiv_nochk
__builtin_ppc_compare_exp_eq
__builtin_ppc_cmprb
__builtin_ppc_maddhd
UiUiUiIUiIUi
__builtin_ppc_store2r
vULLiULLi*
ddULLi
__builtin_ppc_fre
__builtin_ppc_mtspr
__builtin_ppc_maxfe
__builtin_ppc_fnabss
__builtin_altivec_vadduhs
V1ULLLiV16UcV16Uc
__builtin_altivec_vsububs
__builtin_altivec_vsubecuq_c
__builtin_altivec_vrfip
__builtin_altivec_dss
__builtin_altivec_dststt
__builtin_altivec_lvewx
__builtin_altivec_vmhraddshs
__builtin_altivec_vmsumuhs
__builtin_altivec_vmuleuh
__builtin_altivec_vmulesd
__builtin_altivec_vpkpx
V8SsV4SiV4Si
V4SiV2SLLiV2SLLi
__builtin_altivec_stvxl
__builtin_altivec_vcmpgefp
__builtin_altivec_vcmpnezb
__builtin_altivec_vcmpgtub
__builtin_altivec_vcmpgtud
__builtin_altivec_vcmpgtuq
__builtin_altivec_vmaxsh
__builtin_altivec_vmaxfp
__builtin_altivec_vminud
__builtin_altivec_vrlh
__builtin_altivec_vslo
__builtin_altivec_vsraw
__builtin_altivec_vsumsws
V4iV8s
__builtin_altivec_vcmpgefp_p
iiV4iV4i
__builtin_altivec_vcmpgtub_p
iiV4SiV4Si
__builtin_altivec_vbpermq
V2ULLiV2ULLi
__builtin_altivec_crypto_vpmsumb
__builtin_altivec_vclzw
__builtin_ppc_bcdsub
__builtin_altivec_vprtybw
__builtin_altivec_vabsduw
__builtin_altivec_vextsb2w
V2SLLiV4Si
UiV16Uc
V1SLLLiV1SLLLiV1SLLLi
__builtin_altivec_vexpandhm
ULLiV4UiUi
V8UsULLi
__builtin_altivec_vstribl
__builtin_altivec_vstrihr_p
__builtin_altivec_vclzdm
V16UcV16UcUiUi
__builtin_altivec_vinsbvlx
V4UiV4UiUiV4Ui
V16UcV16UcULLiiC
__builtin_altivec_vextduhvrx
V2dLivC*
vV2dLiv*
__builtin_vsx_stxvl
__builtin_vsx_ldrmb
__builtin_vsx_xvrspip
__builtin_vsx_xvcmpgesp
__builtin_vsx_xvrdpi
__builtin_vsx_xvmaddadp
__builtin_vsx_xvredp
__builtin_vsx_xvcpsgndp
V4UiV4Uii
__builtin_vsx_xviexpsp
V2SLLiV4f
__builtin_vsx_xvcvsxdsp
__builtin_vsx_xvcvspbf16
V16UcV4UiV16UcIi
iV2dV2d
__builtin_vsx_xxpermx
LLdLLdLLd
__builtin_fmaf128_round_to_odd
__builtin_tbegin
__builtin_tcheck
__builtin_get_texasru
__builtin_set_tfhar
__builtin_pextd
Lddd
__builtin_readflm
__builtin_mma_assemble_pair
__builtin_mma_xxmfacc
__builtin_mma_xvf32ger
__builtin_mma_xvi4ger8pp
__builtin_mma_pmxvi8ger4pp
__builtin_mma_pmxvf16ger2np
__builtin_mma_pmxvf32gerpn
__builtin_mma_pmxvf64gernp
__builtin_mma_xvbf16ger2
+power10-vector
+isa-v30-instructions
__THW_PPC__
_CALL_LINUX
_ARCH_PPCGR
_ARCH_PWR5X
_ARCH_PWR_FUTURE
__NO_FPRS__
direct-move
-mpcrel
prefix-instrs
vscr
__poppar8
__dcbst
__fetch_and_add
__lwarx
__stwcx
__fctiw
__cmpb
__rlwimi
__store4r
__fmsubs
__swdiv_nochk
__vpmsumb
__vpmsumw
__cmplx
__darn
__builtin_abs
__builtin_popcount
__setrnd
__mtspr
__frizs
__fsqrt
__fnabs
__builtin_minfs
vs18
vs25
vs34
vs38
vs50
vs56
-fno-asynchronous-unwind-tables
__riscv_xlen
__riscv_abi_rve
__riscv_fsqrt
__builtin_rvv_vadd_vv_ta
__builtin_rvv_vwaddu_vv_tuma
__builtin_rvv_vluxei8_v_tuma
__builtin_rvv_vloxseg3ei8_v_tu
__builtin_rvv_vloxseg4ei8_v_tumu
__builtin_rvv_vloxseg5ei8_v_tamu
__builtin_rvv_vloxseg6ei8_v_tama
__builtin_rvv_vlse64_v_tuma
__builtin_rvv_vloxseg8ei8_v_tama
__builtin_rvv_vloxseg3ei16_v_tu
__builtin_rvv_vloxseg4ei16_v_tu
__builtin_rvv_vloxseg5ei16_v_tamu
__builtin_rvv_vloxseg7ei16_v_ta
__builtin_rvv_vloxseg8ei16_v_tuma
__builtin_rvv_vloxseg2ei32_v_tumu
__builtin_rvv_vloxseg4ei32_v_tu
__builtin_rvv_vloxseg5ei32_v_tumu
__builtin_rvv_vloxseg6ei32_v_tamu
__builtin_rvv_vloxseg7ei32_v_tamu
__builtin_rvv_vloxseg2ei64_v_tu
__builtin_rvv_vloxseg3ei64_v_tumu
__builtin_rvv_vloxseg4ei64_v_tamu
__builtin_rvv_vloxseg5ei64_v_tuma
__builtin_rvv_vloxseg7ei64_v_tuma
__builtin_rvv_vloxseg8ei64_v_tama
__builtin_rvv_vsse32_v_m
__builtin_rvv_vluxei64_v_tamu
__builtin_rvv_vluxei16_v_tamu
__builtin_rvv_vsseg7e8_v
__builtin_rvv_vsseg4e16_v_m
__builtin_rvv_vluxei32_v_ta
__builtin_rvv_vsseg2e32_v_m
__builtin_rvv_vsseg6e32_v
__builtin_rvv_vsseg3e64_v_m
__builtin_rvv_vsseg6e64_v_m
__builtin_rvv_vssseg5e8_v_m
__builtin_rvv_vssseg2e16_v
__builtin_rvv_vssseg6e16_v_m
__builtin_rvv_vssseg8e16_v
__builtin_rvv_vssseg7e32_v_m
__builtin_rvv_vssseg4e64_v
__builtin_rvv_vssseg8e64_v_m
__builtin_rvv_vsuxseg5ei8_v_m
__builtin_rvv_vsuxseg3ei16_v_m
__builtin_rvv_vsuxseg7ei16_v
__builtin_rvv_vsuxseg4ei32_v_m
__builtin_rvv_vsuxseg7ei32_v
__builtin_rvv_vsuxseg5ei64_v_m
__builtin_rvv_vsuxseg2ei8_v
__builtin_rvv_vloxei16_v_tu
__builtin_rvv_vloxei32_v_tu
__builtin_rvv_vsoxseg4ei8_v_m
__builtin_rvv_vloxei64_v_ta
__builtin_rvv_vsoxseg2ei16_v_m
__builtin_rvv_vsoxseg4ei16_v_m
__builtin_rvv_vsoxseg3ei32_v_m
__builtin_rvv_vsoxseg7ei32_v
__builtin_rvv_vsoxseg4ei64_v_m
__builtin_rvv_vsoxseg7ei64_v_m
__builtin_rvv_vsub_vv_tu
__builtin_rvv_vsub_vx_tumu
__builtin_rvv_vrsub_vx_tamu
__builtin_rvv_vwaddu_vx_tama
__builtin_rvv_vwsubu_vx_tuma
__builtin_rvv_vwadd_vv_tama
__builtin_rvv_vwsub_vv_tu
__builtin_rvv_vwsub_vx_tu
__builtin_rvv_vwaddu_wx_tamu
__builtin_rvv_vwsubu_wx_ta
__builtin_rvv_vwadd_wv_tuma
__builtin_rvv_vwadd_wv_tamu
__builtin_rvv_vwsub_wx_tu
__builtin_rvv_vwcvt_x_x_v_tumu
__builtin_rvv_vsbc_vvm_tu
__builtin_rvv_vmadc_vx
__builtin_rvv_vand_vv_tamu
__builtin_rvv_vxor_vv_ta
__builtin_rvv_vxor_vx_tuma
__builtin_rvv_vor_vv_tumu
__builtin_rvv_vsll_vv_tu
__builtin_rvv_vsll_vx_tumu
__builtin_rvv_vsrl_vv_tamu
__builtin_rvv_vsrl_vx_tamu
__builtin_rvv_vsra_vx_tuma
__builtin_rvv_vnsrl_wv_tama
__builtin_rvv_vnsra_wv_tu
__builtin_rvv_vnsra_wv_tamu
__builtin_rvv_vncvt_x_x_w_tamu
__builtin_rvv_vmseq_vx_ma
__builtin_rvv_vmsne_vx_mu
__builtin_rvv_vmsltu_vx_tumu
__builtin_rvv_vmslt_vx_mu
__builtin_rvv_vmsleu_vx_ma
__builtin_rvv_vmsle_vx_mu
__builtin_rvv_vmsgtu_vx
__builtin_rvv_vmsgt_vx_mu
__builtin_rvv_vwaddu_wv_tumu
__builtin_rvv_vmsgeu_vx_tumu
__builtin_rvv_vmsge_vv_mu
__builtin_rvv_vminu_vv_tamu
__builtin_rvv_vmin_vv_ta
__builtin_rvv_vmin_vx_tuma
__builtin_rvv_vmaxu_vv_ta
__builtin_rvv_vmax_vv_tu
__builtin_rvv_vmax_vx_tumu
__builtin_rvv_vmul_vv_tamu
__builtin_rvv_vmul_vx_tamu
__builtin_rvv_vmulh_vx_tuma
__builtin_rvv_vmulhu_vv_tama
__builtin_rvv_vmulhsu_vv_tu
__builtin_rvv_vsuxei32_v
__builtin_rvv_vdivu_vv_tuma
__builtin_rvv_vdivu_vx_tama
__builtin_rvv_vdiv_vx_tu
__builtin_rvv_vremu_vv_tu
__builtin_rvv_vremu_vx_tamu
__builtin_rvv_vrem_vx_ta
__builtin_rvv_vwmul_vv_tuma
__builtin_rvv_vwmul_vx_tu
__builtin_rvv_vwmulu_vx_tu
__builtin_rvv_vwmulsu_vv_tumu
__builtin_rvv_vwmulsu_vx_tamu
__builtin_rvv_vmacc_vv_tamu
__builtin_rvv_vnmsac_vv_tuma
__builtin_rvv_vnmsac_vx_tumu
__builtin_rvv_vmadd_vv_tamu
__builtin_rvv_vmadd_vx_tama
__builtin_rvv_vnmsub_vx_tuma
__builtin_rvv_vwmaccu_vv_tama
__builtin_rvv_vwmacc_vv_ta
__builtin_rvv_vwmacc_vx_ta
__builtin_rvv_vwmaccsu_vv_tamu
__builtin_rvv_vwmaccus_vx_tu
__builtin_rvv_vmerge_vxm_tu
__builtin_rvv_vmv_v_v_ta
__builtin_rvv_vsaddu_vx_tamu
__builtin_rvv_vsadd_vx_ta
__builtin_rvv_vssubu_vv_tuma
__builtin_rvv_vssubu_vx_tuma
__builtin_rvv_vssub_vx_tu
__builtin_rvv_vaaddu_vv_tumu
__builtin_rvv_vaaddu_vx_tamu
__builtin_rvv_vaadd_vv_tama
__builtin_rvv_vasubu_vv_tuma
__builtin_rvv_vasubu_vx_tama
__builtin_rvv_vasub_vx_tu
__builtin_rvv_vsmul_vv_tu
__builtin_rvv_vsmul_vx_tamu
__builtin_rvv_vssrl_vx_ta
__builtin_rvv_vssra_vv_tuma
__builtin_rvv_vssra_vx_tu
__builtin_rvv_vnclipu_wx_tu
__builtin_rvv_vnclip_wv_tumu
__builtin_rvv_vnclip_wx_tamu
__builtin_rvv_vfadd_vv_tamu
__builtin_rvv_vfsub_vv_tuma
__builtin_rvv_vfsub_vf_tama
__builtin_rvv_vfwadd_vv_tu
__builtin_rvv_vfwadd_vf_ta
__builtin_rvv_vfwsub_vv_tamu
__builtin_rvv_vfwsub_vf_tama
__builtin_rvv_vfwadd_wf_tu
__builtin_rvv_vfwsub_wv_tu
__builtin_rvv_vfwsub_wf_tamu
__builtin_rvv_vfmul_vf_ta
__builtin_rvv_vfdiv_vv_tuma
__builtin_rvv_vfdiv_vf_ta
__builtin_rvv_vfwmul_vv_tu
__builtin_rvv_vfwmul_vf_tumu
__builtin_rvv_vfmacc_vv_tamu
__builtin_rvv_vfmacc_vf_tamu
__builtin_rvv_vfnmacc_vf_tuma
__builtin_rvv_vfmsac_vv_tama
__builtin_rvv_vfnmsac_vv_ta
__builtin_rvv_vfnmsac_vf_tu
__builtin_rvv_vfmadd_vv_tamu
__builtin_rvv_vfnmadd_vv_tu
__builtin_rvv_vfnmadd_vf_tuma
__builtin_rvv_vfmsub_vv_tuma
__builtin_rvv_vfnmsub_vv_ta
__builtin_rvv_vfnmsub_vf_tumu
__builtin_rvv_vfwmacc_vv_tamu
__builtin_rvv_vfwmacc_vf_tuma
__builtin_rvv_vfwnmacc_vf_tuma
__builtin_rvv_vfwmsac_vv_tama
__builtin_rvv_vfwnmsac_vv_ta
__builtin_rvv_vfwnmsac_vf_ta
__builtin_rvv_vfmin_vv_tamu
__builtin_rvv_vfmax_vv_ta
__builtin_rvv_vfmax_vf_tuma
__builtin_rvv_vfsgnj_vv_tumu
__builtin_rvv_vfsgnjn_vv_tu
__builtin_rvv_vfsgnjn_vf_tumu
__builtin_rvv_vfsgnjx_vv_tamu
__builtin_rvv_vfsgnjx_vf_tamu
__builtin_rvv_vmfeq_vv_mu
__builtin_rvv_vmfne_vv_ma
__builtin_rvv_vmflt_vv_mu
__builtin_rvv_vmflt_vf_tumu
__builtin_rvv_vmfgt_vv_mu
__builtin_rvv_vmfge_vv_ma
__builtin_rvv_vfmv_v_f_tu
__builtin_rvv_vredmaxu_vs_tu
__builtin_rvv_vredminu_vs_tu
__builtin_rvv_vredmin_vs_tumu
__builtin_rvv_vredor_vs_ta
__builtin_rvv_vredxor_vs_ta
__builtin_rvv_vwredsumu_vs_tumu
__builtin_rvv_vfredmax_vs_tam
__builtin_rvv_vfredusum_vs_tum
__builtin_rvv_vfredosum_vs_tam
__builtin_rvv_vfwredosum_vs_tam
__builtin_rvv_viota_m_tamu
__builtin_rvv_vmv_s_x_ta
__builtin_rvv_vfmv_s_x_tu
__builtin_rvv_vslidedown_vx_tama
__builtin_rvv_vslide1up_vx_tamu
__builtin_rvv_vslide1down_vx_ta
__builtin_rvv_vfslide1down_vf_ta
__builtin_rvv_vrgather_vv_tama
__builtin_rvv_vrgather_vx_tamu
__builtin_rvv_vget_v
__builtin_rvv_vsoxei16_v_m
__builtin_rvv_vle16ff_v_ta
__builtin_rvv_vle32ff_v_tu
__builtin_rvv_vle64ff_v_tama
__builtin_rvv_vlseg3e8_v_tama
__builtin_rvv_vlseg5e8_v_tumu
__builtin_rvv_vle8_v_tuma
__builtin_rvv_vlseg7e8_v_ta
__builtin_rvv_vlseg7e8_v_tuma
__builtin_rvv_vlseg2e16_v_tama
__builtin_rvv_vlseg3e16_v_tamu
__builtin_rvv_vlseg5e16_v_tumu
__builtin_rvv_vlseg6e16_v_tumu
__builtin_rvv_vlseg8e16_v_ta
__builtin_rvv_vlseg2e32_v_tu
__builtin_rvv_vlseg3e32_v_tama
__builtin_rvv_vlseg4e32_v_tuma
__builtin_rvv_vlseg6e32_v_tumu
__builtin_rvv_vlseg7e32_v_tuma
__builtin_rvv_vlseg2e64_v_ta
__builtin_rvv_vlseg3e64_v_ta
__builtin_rvv_vlseg4e64_v_tama
__builtin_rvv_vlseg5e64_v_tamu
__builtin_rvv_vlseg7e64_v_tumu
__builtin_rvv_vlseg8e64_v_ta
__builtin_rvv_vlseg4e8ff_v_ta
__builtin_rvv_vlseg5e8ff_v_tu
__builtin_rvv_vlseg6e8ff_v_tama
__builtin_rvv_vlseg7e8ff_v_tama
__builtin_rvv_vlseg2e16ff_v_tumu
__builtin_rvv_vlseg3e16ff_v_tuma
__builtin_rvv_vlseg5e16ff_v_ta
__builtin_rvv_vlseg5e16ff_v_tamu
__builtin_rvv_vlseg7e16ff_v_tama
__builtin_rvv_vlseg8e16ff_v_tamu
__builtin_rvv_vlseg3e32ff_v_tumu
__builtin_rvv_vlseg4e32ff_v_tumu
__builtin_rvv_vlseg6e32ff_v_ta
__builtin_rvv_vlseg7e32ff_v_tu
__builtin_rvv_vlseg8e32ff_v_tama
__builtin_rvv_vlseg8e32ff_v_tamu
__builtin_rvv_vlseg4e64ff_v_tumu
__builtin_rvv_vlseg5e64ff_v_tuma
__builtin_rvv_vlseg7e64ff_v_ta
__builtin_rvv_vlseg8e64ff_v_ta
__builtin_rvv_vlseg2e8ff_v_tama
__builtin_rvv_vlsseg3e8_v_tamu
__builtin_rvv_vlsseg5e8_v_tumu
__builtin_rvv_vlsseg6e8_v_tu
__builtin_rvv_vlsseg8e8_v_ta
__builtin_rvv_vlsseg2e16_v_tu
__builtin_rvv_vlsseg2e8_v_tama
__builtin_rvv_vlsseg3e16_v_tama
__builtin_rvv_vlsseg5e16_v_tumu
__builtin_rvv_vlsseg6e16_v_tuma
__builtin_rvv_vlsseg8e16_v_ta
__builtin_rvv_vlsseg8e16_v_tama
__builtin_rvv_vlsseg3e32_v_tama
__builtin_rvv_vlsseg4e32_v_tamu
__builtin_rvv_vluxseg2ei8_v_tumu
__builtin_rvv_vlsseg6e32_v_tumu
__builtin_rvv_vlsseg8e32_v_ta
__builtin_rvv_vlsseg2e64_v_tu
__builtin_rvv_vlsseg3e64_v_tama
__builtin_rvv_vlsseg4e64_v_tuma
__builtin_rvv_vlsseg6e64_v_tumu
__builtin_rvv_vlsseg7e64_v_tuma
__builtin_rvv_vle8ff_v_ta
__builtin_rvv_vsseg2e8_v
__builtin_rvv_vluxseg4ei8_v_tumu
__builtin_rvv_vluxseg5ei8_v_tuma
__builtin_rvv_vluxseg7ei8_v_ta
__builtin_rvv_vluxseg7ei8_v_tuma
__builtin_rvv_vluxseg2ei16_v_tama
__builtin_rvv_vluxseg3ei16_v_tamu
__builtin_rvv_vluxseg5ei16_v_tumu
__builtin_rvv_vluxseg6ei16_v_tumu
__builtin_rvv_vluxseg8ei16_v_ta
__builtin_rvv_vluxseg2ei32_v_tu
__builtin_rvv_vluxseg3ei32_v_tama
__builtin_rvv_vluxseg4ei32_v_tuma
__builtin_rvv_vluxseg6ei32_v_tumu
__builtin_rvv_vluxseg7ei32_v_tuma
__builtin_rvv_vluxseg2ei64_v_ta
__builtin_rvv_vluxseg3ei64_v_ta
__builtin_rvv_vluxseg4ei64_v_tama
__builtin_rvv_vluxseg5ei64_v_tamu
__builtin_rvv_vluxseg7ei64_v_tumu
__builtin_rvv_vluxseg8ei64_v_ta
__builtin_rvv_vlse8_v_tama
__builtin_rvv_vneg_v_tamu
__builtin_rvv_vfneg_v_tu
__builtin_rvv_vwcvtu_x_x_v_tu
__builtin_rvv_vle16_v_tamu
__builtin_rvv_vle64_v_ta
__builtin_rvv_vse32_v_m
__builtin_rvv_vlse16_v_tumu
__builtin_rvv_vfclass_v_tamu
__builtin_rvv_vfcvt_f_xu_v_ta
__builtin_rvv_vfcvt_rtz_x_f_v_tuma
__builtin_rvv_vfcvt_rtz_xu_f_v_tuma
__builtin_rvv_vfcvt_xu_f_v_tu
__builtin_rvv_vfncvt_f_f_w_ta
__builtin_rvv_vfncvt_f_x_w_tuma
__builtin_rvv_vfncvt_f_x_w_tamu
__builtin_rvv_vfncvt_rtz_x_f_w_tu
__builtin_rvv_vfncvt_rtz_xu_f_w_tumu
__builtin_rvv_vfncvt_x_f_w_tamu
__builtin_rvv_vfncvt_xu_f_w_tamu
__builtin_rvv_vfrsqrt7_v_tuma
__builtin_rvv_vfsqrt_v_tama
__builtin_rvv_vfwcvt_f_x_v_tu
__builtin_rvv_vfwcvt_f_xu_v_ta
__builtin_rvv_vfwcvt_rtz_x_f_v_tamu
__builtin_rvv_vfwcvt_x_f_v_ta
__builtin_rvv_vfwcvt_xu_f_v_tuma
__builtin_rvv_vmand_mm
__builtin_rvv_vmsbf_m_mu
__builtin_rvv_vmsof_m_tumu
zIzIz
__builtin_rvv_vsext_vf2_tuma
__builtin_rvv_vsext_vf8_tuma
__builtin_rvv_vzext_vf2_tumu
__builtin_rvv_vzext_vf4_tamu
__builtin_rvv_vzext_vf8_tamu
__builtin_riscv_clmul
zbkx
ZiZiZiIUc
__builtin_riscv_aes64dsm_64
__builtin_riscv_aes64esm_64
ZiZiZi
__builtin_riscv_sha512sig1_64
-no-hip-rt
-tvos_version_min
__sparcv8__
__ma2080
__ma2x8x
sparclite
ultrasparc
ma2450
ma2480
at697f
.opt.
__builtin_s390_vll
__builtin_s390_vpksh
__builtin_s390_vpklsh
__builtin_s390_vpklsgs
__builtin_s390_vuplhb
__builtin_s390_vupllb
__builtin_s390_vacccq
__builtin_s390_vavglf
V2SLLiV2SLLiV2SLLii*
V16ScV16UcV16Uci*
__builtin_s390_vclzf
__builtin_s390_verimh
V4UiV4UiUi
__builtin_s390_verllvf
V2ULLiV4UiV4UiV2ULLi
__builtin_s390_vmalhh
__builtin_s390_vmalef
__builtin_s390_vmalof
__builtin_s390_vmleb
__builtin_s390_vmloh
__builtin_s390_vscbib
__builtin_s390_vscbiq
V2ULLiV8UsV8Us
__builtin_s390_vfaeb
__builtin_s390_vfaefs
__builtin_s390_vfaezf
V4UiV4UiV4Uii*
__builtin_s390_vfeneb
__builtin_s390_vfenezhs
V16UcV16Uci*
__builtin_s390_vstrchs
__builtin_s390_vstrczh
V2dV2dIiIi
__builtin_s390_vftcidb
__builtin_s390_vfnmadb
V4fV4fIiIi
__builtin_s390_vfnmssb
__builtin_s390_vsld
__builtin_s390_vlbrf
__builtin_s390_vcfn
arch14
__VX__
-fno-char8_t
__TCELE_V1__
__builtin_ve_vl_vld_vssvl
__builtin_ve_vl_vldunc_vssvl
__builtin_ve_vl_vld2d_vssl
__builtin_ve_vl_vldu2dnc_vssvl
__builtin_ve_vl_vst_vssl
__builtin_ve_vl_vstot_vssl
__builtin_ve_vl_vstuncot_vssl
__builtin_ve_vl_vstlot_vssml
__builtin_ve_vl_vst2dncot_vssl
__builtin_ve_vl_vstu2dnc_vssml
__builtin_ve_vl_vstl2dncot_vssl
__builtin_ve_vl_lvsl_svs
V512bV512bLUiLUi
V256ddUi
V256dLiV256bV256dUi
__builtin_ve_vl_vbrdw_vsl
V256dLUiV256dUi
__builtin_ve_vl_vmv_vsvvl
__builtin_ve_vl_vaddul_vvvmvl
__builtin_ve_vl_vadduw_vsvvl
__builtin_ve_vl_pvaddu_vsvMvl
V256diV256dV256dUi
__builtin_ve_vl_pvadds_vvvl
__builtin_ve_vl_vaddsl_vvvvl
__builtin_ve_vl_vsubul_vsvl
__builtin_ve_vl_vsubuw_vvvl
__builtin_ve_vl_vsubswsx_vvvl
__builtin_ve_vl_vsubswzx_vvvvl
__builtin_ve_vl_pvsubs_vvvMvl
__builtin_ve_vl_vsubsl_vvvmvl
__builtin_ve_vl_vmuluw_vsvl
__builtin_ve_vl_vmulswsx_vsvvl
__builtin_ve_vl_vmulsl_vvvl
__builtin_ve_vl_vmulsl_vsvmvl
__builtin_ve_vl_vdivuw_vvvl
V256dV256dLUiUi
__builtin_ve_vl_vdivuw_vvsmvl
__builtin_ve_vl_vdivswsx_vvvmvl
__builtin_ve_vl_vdivswsx_vvsvl
__builtin_ve_vl_vdivsl_vvvl
V256dV256dLiV256dUi
__builtin_ve_vl_vcmpul_vvvl
__builtin_ve_vl_pvcmpu_vvvvl
__builtin_ve_vl_vcmpswsx_vsvl
__builtin_ve_vl_vcmpswzx_vsvmvl
__builtin_ve_vl_pvcmps_vsvMvl
__builtin_ve_vl_vmaxswsx_vsvvl
__builtin_ve_vl_vmaxswzx_vvvmvl
__builtin_ve_vl_vminswsx_vvvvl
__builtin_ve_vl_vminswzx_vvvl
__builtin_ve_vl_pvmins_vsvMvl
__builtin_ve_vl_vminsl_vvvl
__builtin_ve_vl_vand_vsvvl
__builtin_ve_vl_pvand_vsvvl
__builtin_ve_vl_pvor_vvvvl
__builtin_ve_vl_vxor_vsvl
__builtin_ve_vl_pvxor_vsvMvl
__builtin_ve_vl_veqv_vsvvl
__builtin_ve_vl_vldz_vvmvl
__builtin_ve_vl_pvldzup_vvmvl
__builtin_ve_vl_pvpcntlo_vvvl
__builtin_ve_vl_pvpcnt_vvvl
__builtin_ve_vl_pvbrvup_vvmvl
__builtin_ve_vl_pvseqlo_vl
__builtin_ve_vl_vsll_vvsvl
__builtin_ve_vl_pvsll_vvsl
__builtin_ve_vl_pvsrl_vvvl
__builtin_ve_vl_vslawsx_vvvvl
__builtin_ve_vl_vslawzx_vvvmvl
__builtin_ve_vl_pvsla_vvvMvl
__builtin_ve_vl_vsrawsx_vvsl
__builtin_ve_vl_vsrawzx_vvsvl
__builtin_ve_vl_vsral_vvvl
__builtin_ve_vl_vsral_vvsvl
V256ddV256dV256dUi
__builtin_ve_vl_vfadds_vsvvl
__builtin_ve_vl_pvfadd_vvvMvl
__builtin_ve_vl_vfsubd_vvvmvl
__builtin_ve_vl_pvfsub_vsvl
__builtin_ve_vl_vfmuld_vsvvl
__builtin_ve_vl_pvfmul_vvvl
__builtin_ve_vl_pvfmul_vsvMvl
__builtin_ve_vl_vfdivs_vvvmvl
__builtin_ve_vl_vfcmpd_vvvvl
__builtin_ve_vl_vfcmps_vvvmvl
__builtin_ve_vl_pvfcmp_vvvMvl
__builtin_ve_vl_vfmaxs_vsvl
__builtin_ve_vl_pvfmax_vsvvl
__builtin_ve_vl_vfmins_vvvl
__builtin_ve_vl_vfmins_vvvmvl
__builtin_ve_vl_vfmadd_vsvvvl
V256dV256dV256dV256dV256bV256dUi
V256dfV256dV256dV256dUi
__builtin_ve_vl_vfmads_vsvvmvl
__builtin_ve_vl_pvfmad_vvsvvl
V256dV256dLUiV256dV512bV256dUi
__builtin_ve_vl_vfmsbd_vvsvmvl
__builtin_ve_vl_vfmsbs_vvsvl
__builtin_ve_vl_pvfmsb_vvvvMvl
__builtin_ve_vl_vfnmadd_vvsvl
__builtin_ve_vl_vfnmads_vvsvl
__builtin_ve_vl_pvfnmad_vvvvvl
__builtin_ve_vl_vfnmsbd_vsvvl
__builtin_ve_vl_vfnmsbs_vvvvl
__builtin_ve_vl_pvfnmsb_vvvvl
__builtin_ve_vl_pvfnmsb_vsvvl
__builtin_ve_vl_vrsqrtd_vvvl
__builtin_ve_vl_vrsqrtsnex_vvl
__builtin_ve_vl_vcvtwdsxrz_vvmvl
__builtin_ve_vl_vcvtwdzxrz_vvmvl
__builtin_ve_vl_vcvtwszxrz_vvl
__builtin_ve_vl_pvcvtwsrz_vvvl
__builtin_ve_vl_vcvtdw_vvvl
__builtin_ve_vl_vcvtdl_vvl
__builtin_ve_vl_vmrg_vsvmvl
V256dUiV256dV512bV256dUi
__builtin_ve_vl_vfmklaf_ml
__builtin_ve_vl_vfmklgt_mvml
__builtin_ve_vl_vfmklle_mvl
__builtin_ve_vl_vfmklgtnan_mvml
__builtin_ve_vl_vfmkllenan_mvl
__builtin_ve_vl_vfmkwlt_mvl
__builtin_ve_vl_vfmkwnan_mvl
__builtin_ve_vl_vfmkwnenan_mvml
__builtin_ve_vl_pvfmkwlogt_mvml
__builtin_ve_vl_pvfmkwlone_mvl
__builtin_ve_vl_pvfmkwloge_mvml
__builtin_ve_vl_pvfmkwupnum_mvl
__builtin_ve_vl_pvfmkwlogtnan_mvml
__builtin_ve_vl_pvfmkwupltnan_mvml
__builtin_ve_vl_pvfmkwlogenan_mvml
V512bV256dUi
__builtin_ve_vl_pvfmkwge_Mvl
__builtin_ve_vl_pvfmkwnan_Mvl
__builtin_ve_vl_pvfmkwgenan_Mvl
__builtin_ve_vl_vfmkdlt_mvml
__builtin_ve_vl_vfmkdnum_mvl
__builtin_ve_vl_vfmkdnan_mvml
__builtin_ve_vl_vfmksgt_mvl
__builtin_ve_vl_vfmkseq_mvml
__builtin_ve_vl_vfmksgtnan_mvl
__builtin_ve_vl_vfmkseqnan_mvl
__builtin_ve_vl_pvfmkslolt_mvl
__builtin_ve_vl_pvfmksupne_mvml
__builtin_ve_vl_pvfmkslole_mvl
__builtin_ve_vl_pvfmksupnum_mvl
__builtin_ve_vl_pvfmksloltnan_mvl
__builtin_ve_vl_pvfmksupnenan_mvml
__builtin_ve_vl_pvfmkslolenan_mvl
__builtin_ve_vl_pvfmkslt_Mvl
__builtin_ve_vl_pvfmksnum_Mvl
__builtin_ve_vl_pvfmksltnan_MvMl
__builtin_ve_vl_vsumwsx_vvl
__builtin_ve_vl_vsumwzx_vvml
__builtin_ve_vl_vrmaxswfstzx_vvvl
__builtin_ve_vl_vrminswfstzx_vvl
__builtin_ve_vl_vrminslfst_vvvl
__builtin_ve_vl_vfrmaxdlst_vvvl
__builtin_ve_vl_vfrminsfst_vvvl
__builtin_ve_vl_vrxor_vvl
__builtin_ve_vl_vgtnc_vvssml
__builtin_ve_vl_vgtu_vvssmvl
__builtin_ve_vl_vgtlsxnc_vvssml
__builtin_ve_vl_vgtlzxnc_vvssvl
__builtin_ve_vl_vscot_vvssl
__builtin_ve_vl_vscunc_vvssl
__builtin_ve_vl_vsclot_vvssl
V512bV512bV512b
__builtin_ve_vl_negm_mm
__builtin_ve_vl_negm_MM
__builtin_ve_vl_fencei
Don't use a const qualified type for string literals in C and ObjC
exception-handling
__builtin_wasm_trunc_u_i32_f32
__builtin_wasm_trunc_saturate_s_i32_f32
__builtin_wasm_swizzle_i8x16
__builtin_wasm_sub_sat_s_i8x16
__builtin_wasm_min_s_i8x16
__builtin_wasm_max_u_i16x8
__builtin_wasm_extadd_pairwise_i8x16_s_i16x8
__builtin_wasm_shuffle_i8x16
UiV16Sc
__builtin_wasm_abs_f32x4
__builtin_wasm_pmax_f64x2
__builtin_wasm_ceil_f64x2
V16ScV8sV8s
__builtin_wasm_trunc_sat_s_zero_f64x2_i32x4
__builtin_wasm_laneselect_i16x8
__builtin_wasm_relaxed_min_f64x2
V4iV16ScV16ScV4i
__wasm_simd128__
__wasm_tail_call__
-tail-call
CUDA offloading device architecture (e.g. sm_35), or HIP offloading target ID in the form of a device architecture followed by target ID features delimited by a colon. Each target ID feature is a pre-defined string followed by a plus or minus sign (e.g. gfx908:xnack+:sramecc-).  May be specified more than once.
crc32
+avx512er
+avx512vbmi
+fxsr
+clflushopt
+widekl
+pconfig
+tsxldtrk
__code_model_
__attribute__((address_space(256)))
__tune_pentium2__
__tune_k6_2__
geode
__VPCLMULQDQ__
__ADX__
__SSE4A__
__AVX512FP16__
__AVX512VBMI__
__PKU__
__CLZERO__
__PCONFIG__
__HRESET__
__AVX__
__SSE__
3dnowa
avx512cd
avx512vl
bmi2
fsgsbase
prefetchwt1
waitpkg
cannonlake
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512f,+adx,+avx512er,+avx512pf,+avx512cd
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512dq,+avx512f,+adx,+avx512ifma,+avx512cd,+avx512bw,+avx512vl,+avx512vbmi
Optimize for speed
/Oi-
PragmaClangDataSectionAttr
serialize
@BT@ULongFract
@BT@SatLongAccum
ivybridge
__rvv_float32m8_t
__rvv_bool8_t
__rvv_bool64_t
{di}
st(5)
riscv32-linux-gnu
SymbolMetadataFootnoteAttr
__rvv_int32m4_t
__rvv_uint32m1_t
__rvv_int64m1_t
ymm14
__rvv_uint8mf8_t
__rvv_int16m1_t
__rvv_int16m8_t
__rvv_uint16m2_t
zmm10
__rvv_int8mf8_t
s390x-redhat-linux
__clang_svfloat32x4_t
sparc-sun-solaris2.11
sparc-sun-solaris2.12
-ftrigraphs
__clang_svint16x3_t
__clang_svuint32x3_t
__clang_svfloat16x3_t
i386-pc-solaris2.12
intel_sub_group_avc_ime_result_dual_reference_streamout_t
@BT@OCLQueue
__SVInt32_t
__SVUint16_t
__SVFloat32_t
-fno-sanitize-memory-param-retval
XRayLogArgsAttr
gcc-cross/
/../
-ftrivial-auto-var-init-skip-non-pod
@CM@
__builtin_ia32_punpckhdq
__builtin_ia32_pcmpgtw
requested address out of bound
__builtin_ia32_pmaxub
__objc_protolist
__objc_const
__builtin_ia32_pabsb
__DATA_CONST
__TEXT
Unknown future swift version
armelf_linux_eabi
#EncryptedString#
__builtin_ia32_ucomisdle
__builtin_ia32_cmpneqps
elf32lppclinux
sepos
__builtin_ia32_vec_ext_v4sf
__builtin_ia32_haddpd
__builtin_ia32_phsubsw128
elf32ltsmip
Write output to <file>
tbd-v3
__builtin_ia32_cvttsd2si
  availability: 
__builtin_ia32_pause
-ftrivial-auto-var-init=
 [[clang::amdgpu_kernel
--param=
__builtin_ia32_palignr128
 readonly
    getter name: 
private
__builtin_ia32_phminposuw128
binaryInfo
+march=mips32r6
parentUmbrella
appExtensionSafe
Disable creation of CodeFoundation-type constant initializer `NSNumber`s from number literals
__builtin_ia32_aesenclast512
type
__builtin_ia32_vgf2p8affineqb_v16qi
__builtin_ia32_pclmulqdq128
attribute should be string
accessControl
classMethods
__builtin_ia32_cmpss
-pedantic
private
function
exported
/permissive-
__builtin_ia32_vtestnzcpd256
super
interface
typedefs
-march=mips64r2
/mips16
__builtin_ia32_packusdw256
missing ObjC property '%0' in %select{class|category|protocol}1 '%2' from binary interface
new API objc %select{class|category|protocol}0 '%1' in '%2' for target '%3'
skipping file '%0': %1
V4OiV8iV8i
duplicated typedef '%0' inside SDKDB
-mabi=n32
no such %select{public|private}0 pre-include header file: '%1'
platform specific option for deployment target '%0' is deprecated, use -mtargetos.
/nan2008
variable %0 has type %1 here
%0 has incompatible definitions
glob '%0' did not match any header file
__builtin_ia32_psllv4di
property %0 has attribute here
 __attribute__((assert_shared_capability
__builtin_ia32_gatherq_q
Use pipes between commands, when possible
/mips16/64
%0 has base class %1 here
-muclibc
/mips-r2-soft
__builtin_ia32_setssbsy
regression for API '%0' in '%1' for target '%2': %3
missing %select{enum|enum constant|typedef}0 '%1' for target '%2'
__builtin_ia32_llwpcb
-pipe
dynamic library '%0' doesn't have all the required architectures
byref
cannot parse allowlist file %0: %1
declaration has external linkage, but dynamic library doesn't have symbol '%0'
 more than one framework/dynamic library found
no such %select{public|private|project}1 header file: '%0'
-prebind
__builtin_ia32_vphadduwd
dynamic library symbol '%0' is %select{weak defined|thread local}1, but it's declaration is not
declaration '%0' is marked %select{available|unavailable}1, but symbol is %select{not |}2exported in dynamic library
/../../../../sysroot
cannot generate text-based stub file
/mips64r6
__builtin_ia32_wrpkru
V4fV4fV4fV4fUc
Private
-xc++
 __declspec(cpu_specific
V16iV16fV16iUsIi
-iframework /System/Library/PrivateFrameworks
.cpp
V8dV8dIiV8dUcIi
__builtin_ia32_cvtpd2udq512_mask
__builtin_ia32_storedqudi512_mask
Unsupported version
__builtin_ia32_alignq512
-funknown-anytype
noreturn
-sdk
-vfsoverlay
-fno-sanitize-thread-memory-access
 __attribute__((called_once
-print-file-name=
-Xclang
arm64
/System/iOSSupport/usr/include
mthumb
--sdk-content-root
public.sdkdb
binary file doesn't exist
__builtin_ia32_cmpq128_mask
linker.reexport
stubify
sdkdb
march=ck810
TVOS_DEPLOYMENT_TARGET
__builtin_ia32_vpopcntw_128
SDKDB
V32sV32s
__builtin_ia32_pmulhuw512
+hard-fp
-print-multi-os-directory
__builtin_ia32_mulss_round_mask
-dynamiclib
stderr
clang
+march=ck802
/ck803
__builtin_ia32_cvtpd2udq256_mask
-print-prog-name=
__builtin_ia32_expanddf256_mask
+march=ck805
V16cV16cC*V16cUs
(([^/]*(/|$))*)
 __attribute__((enum_extensibility
Verbose output, show scan content and driver options
-Xarch_
/ck860
--verify-api-skip-external-headers
Verify the API of zippered frameworks
-verify-swift
Print the paths used for finding ROCm installation
__builtin_ia32_vpermi2varpd512
lib32/ilp32f
--target=
Print the directory pathname containing clangs runtime libraries
__builtin_ia32_vpshldw512
--sdk
+mabi=lp64f
Path to RuntimeRoot
 [[gnu::function_return
 [[gnu::gnu_inline
__builtin_ia32_cvttps2qq128_mask
Print performance metrics and statistics
Specify the product name
<SDKContentRoot>
__builtin_ia32_cvtqq2pd512_mask
--partial-sdkdb-list
/430
Treat source input files as Objective-C++ inputs
__builtin_ia32_prolvd128
Print the normalized target triple
__builtin_ia32_pshuflw512
-fno-save-optimization-record
 [[gnu::hot
-macosx_version_min
/x32
+mx32
avx512ifma,avx512vl
-ios_version_min
V8dV8dV8dV8OiIiUcIi
Inline private frameworks
__builtin_ia32_loaddquqi256_mask
-iframework
V4fV4fV4fV4iIiUc
-fobjc-arc
Set the default symbol visibility for all global declarations
linker (via gcc)
__builtin_ia32_storedqusi256_mask
-filelist
/system/develop/headers/c++
-type=o
__builtin_ia32_rndscaless_round_mask
Add additional private header location for parsing
Add additional project header location for parsing
Disable linemarker output in -E mode
__builtin_ia32_psrav8di
Scan only Frameworks and UNIX libs
#       HIP Object Generator
# *** Automatically generated by Clang ***
-bridgeos_version_min
--config-file=
--delete-private-frameworks
  .section .hip_fatbin,"a",@progbits
 __attribute__((ms_struct
-alias_list
 __attribute__((maybe_undef
Frameworks
/System/DriverKit
System/Library
System/Library/PrivateFrameworks
near
iosmac
root-mask
Do not emit metadata containing compiler name and version
objective-c
invalid macro
use-overlay
__builtin_ia32_pmovdw256_mask
__builtin_ia32_pmovqd256mem_mask
sdk-version
include-paths
V4iV8iIiV4iUc
Architectures: 
null
false
 [[clang::noduplicate
compare-private-headers
sysroot
UcV4fIiUc
/Root/
Display the list of analyzer checkers that are available
 [[gnu::nodebug
iUiUi
<input>
Print (but do not run) the commands to run for this compilation
Use the named plugin action in addition to the default action
/Qvec-
auto-vectorization
V32sV64cV64cIi
<hexagon features group>
/Qvec-report
__builtin_ia32_expandsf512_mask
__builtin_ia32_cvtw2mask128
<clang legacy flags>
<d group>
-hexagon-autohvx
/hexagon/include
<W group>
-fno-cuda-short-ptr
-fverify-debuginfo-preserve
__builtin_ia32_maxph128
-analyzer-checker
__builtin_ia32_rcpph128_mask
, total=
-fvirtual-function-elimination
-read_only_relocs
__builtin_ia32_reduceph128_mask
omp_cgroup_mem_alloc
__builtin_ia32_vcvtph2pd128_mask
-Wno-error=unsafe-buffer-usage
Enable Debug Info Metadata preservation testing in optimizations.
-Wno-error=strict-prototypes
V16UsV16xV16UsUs
-Wno-implicit-int-float-conversion
__builtin_ia32_vcvtph2dq128_mask
-pc-gnu
-miamcu
 [[clang::os_returns_retained_on_non_zero
--no-offload-arch
Constructing phase actions
a.exe
Computing output path
 [[clang::objc_class_stub
__builtin_ia32_vfmaddph512_maskz
i386-gnu
CLANG_NO_DEFAULT_CONFIG
.cfg
-clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation
-clang-vendor-feature=+thisNoAlignAttr
c++latest
__builtin_ia32_selectph_512
-linux-
/etc/SuSE-release
ddV8d
xxV8x
mipsisa64r6el
clang-offload-packager
static-lib-linker
relro
UiUiV2OiV2Oiv*
depscan
header-module-precompiler
__readfsqword
 __attribute__((objc_runtime_name
string
V4OiV4OiOiIi
note: 
error: 
Read extension block message: %s
No version provided in diagnostics
read_write
Unterminated VBR
When -fvisibility-inlines-hidden is enabled, static variables in inline C++ member functions will also be given hidden visibility by default
ROCm device library path. Alternative to rocm-path.
__XS1B__
signed
unsigned
_Generic
__func__
dynamic_cast
throw
virtual
noexcept
module
typeof_unqual
_Decimal64
__builtin_source_location
__int128
L__FUNCTION__
__is_nothrow_destructible
__has_nothrow_constructor
__is_aggregate
__is_polymorphic
__is_trivially_constructible
__remove_cv
__underlying_type
__is_rvalue_expr
__is_array
__is_member_object_pointer
__is_same
__builtin_xnu_type_signature
__declspec
__local
__read_write
image2d_array_depth_t
pipe
__bf16
__contravariant
__uptr
__try
__builtin_sycl_unique_stable_name
identifier
wide_string_literal
r_square
star
minusminus
less
greater
equal
arrowstar
annot_non_type
annot_pragma_unused
annot_pragma_redefine_extname
annot_pragma_ms_vtordisp
annot_pragma_loop_hint
-sectobjectsymbols
__has_trivial_assign
__is_class
__is_trivially_copyable
__is_nullptr
__is_reference
__is_pointer
__is_nothrow_assignable
__reference_binds_to_temporary
__alignof
__builtin_xnu_type_summary
 __declspec(allocate
-Rno-
 __attribute__((selectany
Use llvm.dbg.addr for all local variables
Invalid preferred alignment, must be a power of 2
Unknown mangling in datalayout string
Invalid bit width, must be a 24bit integer
Enable adding flow sensitive discriminators
' in -pass-remarks: 
Propagate attributes in index
Deref attributes and metadata infer facts at definition only
DW_TAG_string_type
DW_TAG_common_block
DW_TAG_access_declaration
DW_TAG_friend
DW_TAG_variant_part
DW_TAG_namespace
DW_TAG_coarray_type
DW_TAG_immutable_type
DW_TAG_GNU_formal_parameter_pack
DW_TAG_SUN_class_template
DW_TAG_SUN_fortran_vax_structure
DW_TAG_LLVM_annotation
DW_TAG_PGI_interface_block
DW_AT_sibling
DW_AT_language
DW_AT_comp_dir
DW_AT_return_addr
DW_AT_accessibility
DW_AT_discr_list
DW_AT_namelist_item
DW_AT_vtable_elem_location
DW_AT_use_UTF8
DW_AT_small
DW_AT_object_pointer
DW_AT_enum_class
DW_AT_rank
DW_AT_call_return_pc
DW_AT_call_target_clobbered
DW_AT_GHS_namespace_alias
DW_AT_MIPS_epilog_begin
DW_AT_MIPS_ptr_dopetype
DW_AT_HP_prof_version_id
DW_AT_HP_widened_byte_size
DW_AT_GHS_rsm
DW_AT_body_end
DW_AT_GNU_call_site_target_clobbered
DW_AT_GNU_ranges_base
DW_AT_GNU_entry_view
DW_AT_SUN_vtable_abi
DW_AT_SUN_memop_type_ref
DW_AT_SUN_link_name
DW_AT_SUN_90_pointer
DW_AT_SUN_f90_use_only
DW_AT_GNAT_descriptive_type
DW_AT_UPC_threads_scaled
DW_AT_PGI_lstride
DW_AT_BORLAND_Delphi_constructor
DW_AT_BORLAND_closure
DW_AT_LLVM_ptrauth_isa_pointer
DW_AT_APPLE_block
DW_AT_APPLE_sdk
DW_FORM_data8
DW_FORM_ref_addr
DW_FORM_indirect
DW_FORM_line_strp
DW_FORM_strx3
DW_FORM_GNU_strp_alt
DW_OP_deref
DW_OP_over
DW_OP_div
DW_OP_shl
DW_OP_ge
DW_OP_lit4
DW_OP_lit11
DW_OP_lit20
DW_OP_lit25
DW_OP_reg4
DW_OP_reg11
DW_OP_reg20
DW_OP_reg26
DW_OP_breg4
DW_OP_breg11
DW_OP_breg20
DW_OP_breg24
DW_OP_deref_size
DW_OP_form_tls_address
DW_OP_const_type
DW_OP_GNU_push_tls_address
DW_OP_APPLE_uninit
DW_OP_LLVM_tag_offset
DW_ATE_signed_char
DW_ATE_numeric_string
DW_ATE_HP_floathpintel
DW_DS_trailing_separate
DW_DEFAULTED_no
DW_VIRTUALITY_none
DW_LANG_Fortran90
DW_LANG_PLI
DW_LANG_Haskell
DW_LANG_OCaml
DW_LANG_BORLAND_Delphi
DW_CC_nocall
DW_CC_BORLAND_msreturn
DW_CC_LLVM_AAPCS
DW_CC_GDB_IBM_OpenCL
DW_LNS_extended_op
DW_LNS_fixed_advance_pc
DW_LNE_set_address
DW_MACRO_start_file
DW_MACRO_import_sup
DW_MACRO_GNU_transparent_include
DW_RLE_startx_endx
DW_LLE_offset_pair
DW_CFA_AARCH64_negate_ra_state
DW_CFA_advance_loc4
DW_CFA_same_value
DW_CFA_val_offset
DW_APPLE_PROPERTY_assign
DW_APPLE_PROPERTY_unsafe_unretained
DW_UT_partial
DW_ATOM_ext_types
UNUSED6
EXTERNAL
copybrief
R_TRLA
R_RBA
R_TLSM
Emit a section containing remark diagnostics metadata. By default, this is enabled for the following formats: yaml-strtab, bitstream.
Invalid abbrev number
cortex-a72
cortex-a710
neoverse-n2
apple-a11
apple-m1
thunderx2t99
a64fx
+sm4
+fp-armv8
+sve2-bitperm
+predres
+flagm
+mops
armv8.2-a
8.4-A
8.7-A
+v8.8a
+v9.3a
-sha3
-dotprod
-spe
sve2-aes
-sve2p1
memtag
-i8mm
ls64
-sme
-sme2
-fno-strength-reduce
aarch64
v8.3-a
v8.8-a
v9.2a
-vfp2
-fp16
fpe3
vfp3-d16
vfpv4-sp-d16
generic
arm7tdmi
arm940t
arm966e-s
arm1176jz-s
sc000
cortex-r4
cortex-r8
cortex-a35
cortex-a76
neoverse-n2
kryo
aapcs-linux
+v4t
armv6
+v6k
+v7r
+v8a
+v8.2a
armv8.6-a
8.8-A
9.2-A
9.3-A
+v8.1m.main
+v7k
fp-armv8-fullfp16-sp-d16
-dsp
-i8mm
+cdecp1
+cdecp4
cdecp6
-fno-deprecated-macro
e+00
 (includes alignment, etc)
' is invalid value for boolean argument! Try 0 or 1
*no default*
ck801
e802t
ck803e
ck803ft
ck803tr2
ck803fr3
ck803ehr3
ck803ehtr2
ck803eftr1
s803t
ck804
ck804e
e804dt
ck805f
ck807e
c807f
c810t
ck810efv
c860v
-fpuv2_df
-fpuv3_df
float1e3
hwdiv
-multiple_stld
+dspe60
-dsp_silan
-java
-nvic
vdsp2e3
+vdspv2
+istack
-constpool
3e3r3
mp1e2
7e10
unable to decode LEB128 at offset 0x%8.8llx: %s
operator?
, std::allocator<char>
typeinfo name for 
construction vtable for 
Unterminated string
Invalid JSON value (number?)
failed to get host id
unsupported standard user-level extension '%c'
zfinx
zve64d requires d or zdinx extension to also be specified
ilp32e
zawrs
zbkx
zvl256b
zvl16384b
Failed to parse major version number for extension '
 for experimental extension '
non-standard supervisor-level extension
 [ (
malformed regex in line 
-twolevel_namespace_hints
Build with asserts or with -DLLVM_FORCE_ENABLE_STATS
Could not demangle '
sifive-e21
sifive-s76
gfx600
kaveri
gfx704
fiji
stoney
gfx1010
gfx1033
rv630
rv610
juniper
cayman
Generate source-level debug information with dwarf version 5
  --- Name ---
.sys
track-memory
Friend
csky
le64
mipsel
renderscript32
sparcel
thumbeb
mipsisa32r6
cuda
hermit
mesa3d
solaris
watchos
itanium
vertex
library
mipsn32
cortex-a9
powerpcspe
mips64eb
spirv32v1.4
spirv64v1.5
coff
-fno-trap-function-returns
 CWD
expected integer
external-contents
fallback
  'overlay-relative': '
 (exists)
output not closed
Use colors in output (default=autodetect)
avx2
bmi2
avx512vbmi
vpclmulqdq
winchip2
i686
nocona
goldmont
core-avx-i
skylake-avx512
athlon-tbird
athlon64-sse3
bdver1
x86-64-v4
amx-int8
enqcmd
invpcid
prfchw
sahf
vzeroupper
xsaveopt
avxvnni
Cannot consume non-ascii characters
Expected a line break after block scalar header
Unknown tag handle 
Unexpected token. Expected Key, Flow Entry, or Flow Mapping End.
Already encountered an anchor for this node!
unknown bit value
invalid number
 Decomposition decls, 
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
ABCDEFGHIJKLMNOPQRSTUVWXYZ
newline
percent-sign
hyphen-minus
less-than-sign
reverse-solidus
left-curly-bracket
invalid backreference number
REG_BADBR
empty (sub)expression
*** unknown regexp error code ***
-verify=
TEMPDIR
COLUMNS
posix_spawn failed
input
 + %tu
pthread_attr_destroy failed
exclusive_lock_function
__builtin_sve_svldff1uh_gather_u64offset_u64
__builtin_sve_svldff1uh_u64
__builtin_sve_svldff1uh_vnum_u32
__builtin_sve_svldff1uw_gather_s64offset_u64
__builtin_sve_svldff1uw_gather_u64base_offset_s64
__builtin_sve_svldff1uw_gather_u64index_u64
__builtin_sve_svldff1uw_gather_u64offset_u64
__builtin_sve_svldnf1_f16
__builtin_sve_svldnf1_s16
__builtin_sve_svldnf1_u32
__builtin_sve_svldnf1_u8
__builtin_sve_svldnf1_vnum_s32
__builtin_sve_svldnf1_vnum_u16
__builtin_sve_svldnf1sb_s32
__builtin_sve_svldnf1sb_s64
__builtin_sve_svldnf1sb_vnum_u16
__builtin_sve_svldnf1sh_s32
__builtin_sve_svldnf1sh_vnum_s64
__builtin_sve_svldnf1sh_vnum_u64
__builtin_sve_svldnf1ub_s32
__builtin_sve_svldnf1ub_u32
__builtin_sve_svldnf1ub_vnum_u16
__builtin_sve_svldnf1uh_vnum_s64
__builtin_sve_svldnf1uw_s64
__builtin_sve_svldnt1_f16
__builtin_sve_svldnt1_f64
__builtin_sve_svldnt1_gather_s64offset_u64
__builtin_sve_svldnt1_gather_u32base_index_s32
__builtin_sve_svldnt1_gather_u32base_s32
__builtin_sve_svldnt1_gather_u32base_u32
__builtin_sve_svldnt1_gather_u64base_index_u64
__builtin_sve_svldnt1_gather_u64base_offset_u64
__builtin_sve_svldnt1_gather_u64index_u64
__builtin_sve_svldnt1_gather_u64offset_s64
__builtin_sve_svldnt1_u16
__builtin_sve_svldnt1_u8
__builtin_sve_svldnt1_vnum_s16
Emit debug line info directives only
__builtin_sve_svldnt1b_s8_x2
__builtin_sve_svldnt1b_u8_x4
__builtin_sve_svldnt1d_f64_x2
__builtin_sve_svldnt1d_s64_x2
__builtin_sve_svldnt1d_vnum_s64_x2
__builtin_sve_svldnt1d_vnum_u64_x4
__builtin_sve_svldnt1h_s16_x2
__builtin_sve_svldnt1h_s16_x4
__builtin_sve_svldnt1h_vnum_s16_x2
__builtin_sve_svldnt1h_vnum_u16_x4
__builtin_sve_svldnt1sb_gather_u32base_s32
__builtin_sve_svldnt1sb_gather_u32offset_s32
__builtin_sve_svldnt1sb_gather_u64offset_s64
__builtin_sve_svldnt1sh_gather_s64index_u64
__builtin_sve_svldnt1sh_gather_u32base_index_u32
__builtin_sve_svldnt1sh_gather_u64base_offset_s64
__builtin_sve_svldnt1sh_gather_u64base_u64
__builtin_sve_svldnt1sw_gather_s64index_s64
__builtin_sve_svldnt1sw_gather_s64offset_s64
__builtin_sve_svldnt1sw_gather_u64base_s64
__builtin_sve_svldnt1sw_gather_u64index_u64
__builtin_sve_svldnt1ub_gather_u32base_offset_s32
__builtin_sve_svldnt1ub_gather_u32base_offset_u32
__builtin_sve_svldnt1ub_gather_u64base_s64
__builtin_sve_svldnt1ub_gather_u64offset_u64
__builtin_sve_svldnt1uh_gather_u32base_index_s32
__builtin_sve_svldnt1uh_gather_u32base_offset_s32
__builtin_sve_svldnt1uh_gather_u64base_index_s64
__builtin_sve_svldnt1uh_gather_u64base_offset_u64
__builtin_sve_svldnt1uh_gather_u64offset_s64
__builtin_sve_svldnt1uw_gather_u64base_offset_s64
__builtin_sve_svldnt1uw_gather_u64base_u64
__builtin_sve_svldnt1w_f32_x2
__builtin_sve_svldnt1w_s32_x2
__builtin_sve_svldnt1w_vnum_s32_x2
__builtin_sve_svldnt1w_vnum_u32_x4
__builtin_sve_svlen_f32
UWiq4f
__builtin_sve_svlen_s64
UWiq16Sc
__builtin_sve_svlen_u64
__builtin_sve_svlen_u8
__builtin_sve_svlogb_f32_x
__builtin_sve_svlogb_f64_x
__builtin_sve_svlsl_n_s16_z
Restore the default behavior of not embedding source text in DWARF debug sections
__builtin_sve_svlsl_n_s8_z
__builtin_sve_svlsl_n_u16_z
__builtin_sve_svlsl_n_u64_x
__builtin_sve_svlsl_n_u8_m
__builtin_sve_svlsl_s32_m
__builtin_sve_svlsl_s64_m
__builtin_sve_svlsl_s8_z
__builtin_sve_svlsl_u16_m
__builtin_sve_svlsl_u64_x
__builtin_sve_svlsl_u8_x
__builtin_sve_svlsl_wide_n_s32_m
__builtin_sve_svlsl_wide_n_s32_z
__builtin_sve_svlsl_wide_n_u16_x
q4Uiq16bq4UiUWi
__builtin_sve_svlsl_wide_n_u8_x
-gno-pubnames
__builtin_sve_svlsl_wide_s8_m
__builtin_sve_svlsl_wide_u16_m
q4Uiq16bq4Uiq2UWi
__builtin_sve_svlsl_wide_u32_z
__builtin_sve_svlsr_n_u16_x
__builtin_sve_svlsr_n_u32_x
__builtin_sve_svlsr_n_u8_m
__builtin_sve_svlsr_n_u8_x
__builtin_sve_svlsr_u32_z
__builtin_sve_svlsr_u64_z
__builtin_sve_svlsr_wide_n_u16_x
__builtin_sve_svlsr_wide_n_u32_m
__builtin_sve_svlsr_wide_u16_m
__builtin_sve_svlsr_wide_u32_m
__builtin_sve_svlsr_wide_u8_m
-gno-simple-template-names
__builtin_sve_svmad_f32_z
__builtin_sve_svmad_f64_x
__builtin_sve_svmad_n_f16_z
q4fq16bq4fq4ff
__builtin_sve_svmad_n_f64_z
__builtin_sve_svmad_n_s16_x
__builtin_sve_svmad_n_s32_z
__builtin_sve_svmad_n_s64_m
__builtin_sve_svmad_n_s8_z
__builtin_sve_svmad_n_u16_x
__builtin_sve_svmad_n_u32_z
q2UWiq16bq2UWiq2UWiUWi
__builtin_sve_svmad_n_u8_z
__builtin_sve_svmad_s16_x
__builtin_sve_svmad_s32_z
Bundle output files of HIP device compilation
__builtin_sve_svmad_s8_z
__builtin_sve_svmad_u16_x
__builtin_sve_svmad_u32_z
q2UWiq16bq2UWiq2UWiq2UWi
__builtin_sve_svmad_u8_z
__builtin_sve_svmatch_u16
__builtin_sve_svmax_f32_m
__builtin_sve_svmax_f32_x
__builtin_sve_svmax_n_f16_z
__builtin_sve_svmax_n_f32_z
__builtin_sve_svmax_n_s16_x
__builtin_sve_svmax_n_s32_m
__builtin_sve_svmax_n_s8_m
__builtin_sve_svmax_n_u16_m
__builtin_sve_svmax_n_u32_x
Default max threads per block for kernel launch bounds for HIP
__builtin_sve_svmax_s16_x
__builtin_sve_svmax_s32_x
__builtin_sve_svmax_s8_m
__builtin_sve_svmax_s8_z
__builtin_sve_svmax_u32_z
__builtin_sve_svmax_u64_z
__builtin_sve_svmaxnm_f16_x
__builtin_sve_svmaxnm_f16_z
__builtin_sve_svmaxnm_n_f16_m
__builtin_sve_svmaxnm_n_f32_m
__builtin_sve_svmaxnm_n_f64_z
__builtin_sve_svmaxnmp_f16_x
__builtin_sve_svmaxnmv_f32
__builtin_sve_svmaxp_f16_x
__builtin_sve_svmaxp_s16_m
/GR-
__builtin_sve_svmaxp_u16_m
__builtin_sve_svmaxp_u32_x
__builtin_sve_svmaxv_f16
__builtin_sve_svmaxv_f64
__builtin_sve_svmaxv_u32
__builtin_sve_svmin_f16_m
__builtin_sve_svmin_f32_z
__builtin_sve_svmin_f64_m
__builtin_sve_svmin_n_f32_x
__builtin_sve_svmin_n_f64_x
__builtin_sve_svmin_n_s32_m
__builtin_sve_svmin_n_s32_z
__builtin_sve_svmin_n_s8_z
__builtin_sve_svmin_n_u16_z
__builtin_sve_svmin_n_u32_x
/Gregcall
__builtin_sve_svmin_s32_m
__builtin_sve_svmin_s64_m
__builtin_sve_svmin_s8_z
__builtin_sve_svmin_u16_x
__builtin_sve_svmin_u64_x
__builtin_sve_svmin_u8_x
__builtin_sve_svminnm_f32_m
__builtin_sve_svminnm_f32_x
__builtin_sve_svminnm_n_f16_z
__builtin_sve_svminnm_n_f32_z
__builtin_sve_svminnmp_f16_x
__builtin_sve_svminnmp_f32_x
__builtin_sve_svminp_f16_m
__builtin_sve_svminp_f32_x
__builtin_sve_svminp_s32_m
__builtin_sve_svminp_u32_m
__builtin_sve_svminp_u64_x
__builtin_sve_svminv_f64
__builtin_sve_svminv_s32
__builtin_sve_svminv_u8
__builtin_sve_svmla_f16_z
__builtin_sve_svmla_f64_x
__builtin_sve_svmla_f64_z
__builtin_sve_svmla_lane_s16
__builtin_sve_svmla_lane_u16
__builtin_sve_svmla_n_f16_z
__builtin_sve_svmla_n_f32_x
__builtin_sve_svmla_n_s16_x
__builtin_sve_svmla_n_s32_x
__builtin_sve_svmla_n_s64_z
/GS-
__builtin_sve_svmla_n_u32_z
__builtin_sve_svmla_n_u64_z
__builtin_sve_svmla_s16_x
__builtin_sve_svmla_s32_m
__builtin_sve_svmla_s8_m
__builtin_sve_svmla_u16_m
__builtin_sve_svmla_u32_z
__builtin_sve_svmla_u64_m
q4fq4fq8hq8h
__builtin_sve_svmlalb_lane_s32
q4Uiq4Uiq8Usq8UsIUWi
q2UWiq2UWiq4Uiq4UiIUWi
__builtin_sve_svmlalb_n_u16
__builtin_sve_svmlalb_s16
__builtin_sve_svmlalb_u64
Use simple template names in DWARF, or include the full template name with a modified prefix for validation
__builtin_sve_svmlalt_n_s16
__builtin_sve_svmlalt_n_u16
__builtin_sve_svmlalt_s64
__builtin_sve_svmlalt_u32
__builtin_sve_svmls_f32_x
__builtin_sve_svmls_f64_x
__builtin_sve_svmls_lane_s16
__builtin_sve_svmls_lane_s32
__builtin_sve_svmls_n_f16_z
__builtin_sve_svmls_n_f32_z
__builtin_sve_svmls_n_s16_x
__builtin_sve_svmls_n_s32_m
__builtin_sve_svmls_n_s8_m
__builtin_sve_svmls_n_u16_m
__builtin_sve_svmls_n_u32_m
Set DWARF fission mode
__builtin_sve_svmls_s16_x
__builtin_sve_svmls_s32_x
__builtin_sve_svmls_s8_m
__builtin_sve_svmls_s8_z
__builtin_sve_svmls_u32_z
__builtin_sve_svmls_u64_z
__builtin_sve_svmlslb_lane_f32
__builtin_sve_svmlslb_lane_s32
__builtin_sve_svmlslb_n_s64
__builtin_sve_svmlslb_n_u64
__builtin_sve_svmlslb_u32
__builtin_sve_svmlslt_f32
__builtin_sve_svmlslt_n_f32
__builtin_sve_svmlslt_n_s64
__builtin_sve_svmlslt_s32
md5,sha1,sha256
q2dq2dq2dq2d
__builtin_sve_svmov_b_z
__builtin_sve_svmovlb_s64
__builtin_sve_svmovlb_u16
__builtin_sve_svmovlt_s16
__builtin_sve_svmovlt_u16
__builtin_sve_svmsb_f16_z
__builtin_sve_svmsb_f32_m
__builtin_sve_svmsb_n_f16_x
__builtin_sve_svmsb_n_f32_x
__builtin_sve_svmsb_n_s16_m
__builtin_sve_svmsb_n_s16_z
__builtin_sve_svmsb_n_s64_z
__builtin_sve_svmsb_n_s8_z
__builtin_sve_svmsb_n_u32_m
Enable buffer security check (default)
__builtin_sve_svmsb_s16_m
__builtin_sve_svmsb_s32_m
__builtin_sve_svmsb_s64_z
__builtin_sve_svmsb_s8_x
__builtin_sve_svmsb_u32_x
__builtin_sve_svmsb_u64_x
__builtin_sve_svmul_f16_m
__builtin_sve_svmul_f16_x
__builtin_sve_svmul_f64_z
__builtin_sve_svmul_lane_f64
__builtin_sve_svmul_lane_u32
__builtin_sve_svmul_n_f16_m
__builtin_sve_svmul_n_f64_m
__builtin_sve_svmul_n_s16_m
__builtin_sve_svmul_n_s32_z
-gtoggle
__builtin_sve_svmul_n_u16_x
__builtin_sve_svmul_n_u32_x
__builtin_sve_svmul_n_u8_m
__builtin_sve_svmul_n_u8_z
__builtin_sve_svmul_s32_z
__builtin_sve_svmul_s64_z
__builtin_sve_svmul_u16_x
__builtin_sve_svmul_u16_z
__builtin_sve_svmul_u8_m
__builtin_sve_svmulh_n_s16_m
__builtin_sve_svmulh_n_s32_z
__builtin_sve_svmulh_n_s64_x
__builtin_sve_svmulh_n_u16_x
__builtin_sve_svmulh_n_u32_x
__builtin_sve_svmulh_n_u64_m
-gused
__builtin_sve_svmulh_s32_z
__builtin_sve_svmulh_s64_z
__builtin_sve_svmulh_u16_x
__builtin_sve_svmulh_u32_m
__builtin_sve_svmulh_u8_m
__builtin_sve_svmullb_lane_s32
q4Uiq8Usq8UsIUWi
__builtin_sve_svmullb_lane_u64
__builtin_sve_svmullb_n_u64
__builtin_sve_svmullb_s64
__builtin_sve_svmullt_lane_s64
__builtin_sve_svmullt_lane_u64
__builtin_sve_svmullt_n_u64
__builtin_sve_svmullt_s64
__builtin_sve_svmulx_f16_x
/Gw-
__builtin_sve_svmulx_n_f16_m
__builtin_sve_svmulx_n_f32_m
__builtin_sve_svmulx_n_f64_z
__builtin_sve_svnbsl_n_s16
__builtin_sve_svnbsl_n_u64
__builtin_sve_svnbsl_s32
__builtin_sve_svnbsl_u64
__builtin_sve_svnbsl_u8
__builtin_sve_svneg_f64_m
__builtin_sve_svneg_s16_m
__builtin_sve_svneg_s32_z
__builtin_sve_svneg_s64_x
__builtin_sve_svnmad_f16_x
__builtin_sve_svnmad_f32_x
__builtin_sve_svnmad_f64_z
/GX-
__builtin_sve_svnmad_n_f64_z
__builtin_sve_svnmatch_u16
__builtin_sve_svnmla_f32_m
__builtin_sve_svnmla_f32_z
__builtin_sve_svnmla_n_f16_z
__builtin_sve_svnmla_n_f32_z
__builtin_sve_svnmls_f16_x
__builtin_sve_svnmls_f16_z
__builtin_sve_svnmls_n_f16_m
__builtin_sve_svnmls_n_f32_m
__builtin_sve_svnmls_n_f64_z
__builtin_sve_svnmsb_f16_x
__builtin_sve_svnmsb_f64_x
__builtin_sve_svnmsb_n_f16_x
__builtin_sve_svnmsb_n_f64_m
Deprecated; use /EHsc
__builtin_sve_svnot_s32_m
__builtin_sve_svnot_s64_m
__builtin_sve_svnot_s8_z
__builtin_sve_svnot_u16_x
__builtin_sve_svnot_u64_x
__builtin_sve_svnot_u8_x
__builtin_sve_svorr_n_s16_x
__builtin_sve_svorr_n_s16_z
__builtin_sve_svorr_n_s8_m
__builtin_sve_svorr_n_u16_m
__builtin_sve_svorr_n_u32_z
__builtin_sve_svorr_n_u64_x
__builtin_sve_svorr_s16_x
__builtin_sve_svorr_s32_x
__builtin_sve_svorr_s64_x
Put each function in its own section
__builtin_sve_svorr_u32_z
__builtin_sve_svorr_u64_z
__builtin_sve_svorv_s32
__builtin_sve_svorv_s8
q16bQIUWi
__builtin_sve_svpext_lane_c8
__builtin_sve_svpmul_u8
__builtin_sve_svpmullb_n_u16
__builtin_sve_svpmullb_pair_u8
__builtin_sve_svpmullt_n_u16
__builtin_sve_svpmullt_pair_u32
__builtin_sve_svpmullt_pair_u8
__builtin_sve_svpnext_b8
__builtin_sve_svprfb_gather_s32offset
vq16bq4UiIi
Set __stdcall as a default calling convention
vq16bq2UWiWiIi
__builtin_sve_svprfb_vnum
__builtin_sve_svprfd_gather_u32base
__builtin_sve_svprfd_gather_u32index
__builtin_sve_svprfh_gather_s32index
__builtin_sve_svprfh_gather_u32base_index
__builtin_sve_svprfh_vnum
__builtin_sve_svprfw
__builtin_sve_svprfw_gather_u64base_index
__builtin_sve_svpsel_b16
__builtin_sve_svptest_any
__builtin_sve_svptest_first
__builtin_sve_svptrue_c16
__builtin_sve_svptrue_c64
__builtin_sve_svptrue_pat_b32
<size>
__builtin_sve_svqabs_s64_m
__builtin_sve_svqabs_s8_m
__builtin_sve_svqadd_n_s16_x
__builtin_sve_svqadd_n_s32
__builtin_sve_svqadd_n_s64_x
__builtin_sve_svqadd_n_s8_m
__builtin_sve_svqadd_n_u16_x
__builtin_sve_svqadd_n_u16_z
__builtin_sve_svqadd_n_u64_x
__builtin_sve_svqadd_n_u8_m
__builtin_sve_svqadd_s16_m
__builtin_sve_svqadd_s16_z
__builtin_sve_svqadd_s64
__builtin_sve_svqadd_s64_x
__builtin_sve_svqadd_s8_x
Filename (or -) to write header include output to
__builtin_sve_svqadd_u32_x
__builtin_sve_svqadd_u64_m
__builtin_sve_svqadd_u8_x
__builtin_sve_svqcadd_s16
__builtin_sve_svqdecb_n_s64
UiUiIUWi
__builtin_sve_svqdecb_pat_n_s64
WiWiIiIUWi
__builtin_sve_svqdecd_n_u32
__builtin_sve_svqdecd_pat_n_s64
__builtin_sve_svqdecd_pat_u64
__builtin_sve_svqdecd_s64
__builtin_sve_svqdech_n_u32
__builtin_sve_svqdech_pat_n_s64
-fintegrated-cc1
-header-include-format=
__builtin_sve_svqdecp_n_s32_b32
__builtin_sve_svqdecp_n_s64_b16
__builtin_sve_svqdecp_n_u32_b16
__builtin_sve_svqdecp_n_u32_b32
__builtin_sve_svqdecp_n_u64_b64
q8sq8sq16b
__builtin_sve_svqdecp_u16
q8Usq8Usq16b
__builtin_sve_svqdecw_n_u32
__builtin_sve_svqdecw_pat_n_s64
__builtin_sve_svqdecw_pat_u32
__builtin_sve_svqdecw_s32
__builtin_sve_svqdmlalb_n_s16
__builtin_sve_svqdmlalb_s16
__builtin_sve_svqdmlalbt_n_s64
-headerpad_max_install_names
__builtin_sve_svqdmlalt_n_s64
__builtin_sve_svqdmlalt_s64
__builtin_sve_svqdmlslb_n_s64
__builtin_sve_svqdmlslb_s32
__builtin_sve_svqdmlslbt_s32
__builtin_sve_svqdmlslt_lane_s64
__builtin_sve_svqdmlslt_s32
__builtin_sve_svqdmlslt_s64
__builtin_sve_svqdmulh_n_s8
__builtin_sve_svqdmulh_s64
__builtin_sve_svqdmullb_n_s32
__builtin_sve_svqdmullb_s16
__builtin_sve_svqdmullt_n_s32
__builtin_sve_svqdmullt_s32
__builtin_sve_svqincb_n_u32
--help-hidden
__builtin_sve_svqincd_n_u64
__builtin_sve_svqincd_pat_n_u32
__builtin_sve_svqincd_u64
__builtin_sve_svqinch_n_s64
__builtin_sve_svqinch_pat_n_u64
__builtin_sve_svqinch_s16
__builtin_sve_svqincp_n_s32_b8
__builtin_sve_svqincp_n_s64_b16
__builtin_sve_svqincp_n_u32_b8
__builtin_sve_svqincp_n_u64_b64
__builtin_sve_svqincp_u16
__builtin_sve_svqincp_u64
__builtin_sve_svqincw_pat_n_s64
__builtin_sve_svqincw_pat_s32
__builtin_sve_svqneg_s16_x
/help
__builtin_sve_svqneg_s8_m
__builtin_sve_svqrdcmlah_lane_s16
__builtin_sve_svqrdcmlah_s8
__builtin_sve_svqrdmlah_lane_s32
__builtin_sve_svqrdmlah_s16
__builtin_sve_svqrdmlah_s8
__builtin_sve_svqrdmlsh_n_s32
__builtin_sve_svqrdmlsh_n_s64
__builtin_sve_svqrdmulh_lane_s32
__builtin_sve_svqrdmulh_n_s32
__builtin_sve_svqrdmulh_s64
__builtin_sve_svqrshl_n_s16_m
__builtin_sve_svqrshl_n_s64_m
__builtin_sve_svqrshl_n_s8_m
__builtin_sve_svqrshl_n_u16_m
--hip-link
__builtin_sve_svqrshl_n_u64_z
__builtin_sve_svqrshl_n_u8_x
__builtin_sve_svqrshl_s32_m
__builtin_sve_svqrshl_s32_z
__builtin_sve_svqrshl_s8_z
__builtin_sve_svqrshl_u16_x
__builtin_sve_svqrshl_u32_z
__builtin_sve_svqrshl_u64_m
__builtin_sve_svqrshl_u8_z
__builtin_sve_svqrshr_s16_x4
q8Usq8UiIUWi
q8Usq8UWiIUWi
q8sq4iIUWi
__builtin_sve_svqrshrnb_n_u16
q4Uiq2UWiIUWi
--hip-version=
q16Ucq16Ucq8UsIUWi
__builtin_sve_svqrshrnt_n_u64
q8Usq4iIUWi
q4Uiq2WiIUWi
q4Uiq4Uiq2WiIUWi
__builtin_sve_svqshl_n_s16_z
__builtin_sve_svqshl_n_s64_x
__builtin_sve_svqshl_n_s64_z
__builtin_sve_svqshl_n_u32_m
__builtin_sve_svqshl_n_u64_m
__builtin_sve_svqshl_n_u8_z
__builtin_sve_svqshl_s16_x
__builtin_sve_svqshl_s64_x
__builtin_sve_svqshl_s8_x
__builtin_sve_svqshl_u16_z
-hlsl-entry
__builtin_sve_svqshl_u8_z
__builtin_sve_svqshlu_n_s16_x
__builtin_sve_svqshlu_n_s32_z
q2UWiq16bq2WiIUWi
__builtin_sve_svqshlu_n_s8_z
__builtin_sve_svqshrnb_n_s64
__builtin_sve_svqshrnt_n_s32
__builtin_sve_svqshrnt_n_s64
__builtin_sve_svqshrunt_n_s16
__builtin_sve_svqsub_n_s16
__builtin_sve_svqsub_n_s32_m
__builtin_sve_svqsub_n_s32_z
__builtin_sve_svqsub_n_s8_m
__builtin_sve_svqsub_n_u16
__builtin_sve_svqsub_n_u32_m
/homeparams
__builtin_sve_svqsub_n_u8_m
__builtin_sve_svqsub_s16
__builtin_sve_svqsub_s32_m
__builtin_sve_svqsub_s32_z
__builtin_sve_svqsub_s8_m
__builtin_sve_svqsub_u16
__builtin_sve_svqsub_u32_m
__builtin_sve_svqsub_u32_x
__builtin_sve_svqsub_u8_m
__builtin_sve_svqsubr_n_s16_m
__builtin_sve_svqsubr_n_s32_z
__builtin_sve_svqsubr_n_s64_x
__builtin_sve_svqsubr_n_u16_x
__builtin_sve_svqsubr_n_u32_x
__builtin_sve_svqsubr_n_u64_m
Show header includes and nesting depth
__builtin_sve_svqsubr_s32_z
__builtin_sve_svqsubr_s64_z
__builtin_sve_svqsubr_u16_x
__builtin_sve_svqsubr_u32_m
__builtin_sve_svqsubr_u8_m
__builtin_sve_svqxtnb_s16
q4iq2Wi
__builtin_sve_svqxtnb_u16
q16Scq16Scq8s
__builtin_sve_svqxtnt_s64
q8Usq8Usq4Ui
q4Uiq4Uiq2UWi
q4Uiq2Wi
__builtin_sve_svqxtunt_s32
__builtin_sve_svraddhnb_n_s32
-iapinotes-modules
__builtin_sve_svraddhnb_u16
__builtin_sve_svraddhnt_n_s16
__builtin_sve_svraddhnt_n_u64
__builtin_sve_svraddhnt_s32
__builtin_sve_svrax1_u64
__builtin_sve_svrbit_s16_z
__builtin_sve_svrbit_s64_x
__builtin_sve_svrbit_s64_z
__builtin_sve_svrbit_u32_m
__builtin_sve_svrbit_u64_m
__builtin_sve_svrbit_u8_z
__builtin_sve_svrdffr_z
__builtin_sve_svrecpe_f64
__builtin_sve_svrecpe_u32_x
__builtin_sve_svrecps_f32
-ibuiltininc
__builtin_sve_svrecpx_f32_z
__builtin_sve_svrecpx_f64_z
__builtin_sve_svrev_bf16
__builtin_sve_svrev_f16
q4iq4i
__builtin_sve_svrev_s8
q4Uiq4Ui
__builtin_sve_svrev_u64
__builtin_sve_svrevb_s32_x
__builtin_sve_svrevb_s64_x
__builtin_sve_svrevb_u32_m
__builtin_sve_svrevb_u32_z
__builtin_sve_svrevd_s16_z
__builtin_sve_svrevd_s32_z
__builtin_sve_svrevd_s8_x
-iframeworkwithsysroot
__builtin_sve_svrevd_u64_m
__builtin_sve_svrevd_u8_m
__builtin_sve_svrevh_s32_z
__builtin_sve_svrevh_s64_x
__builtin_sve_svrevh_u64_x
__builtin_sve_svrevw_s64_x
__builtin_sve_svrhadd_n_s16_m
__builtin_sve_svrhadd_n_s16_x
__builtin_sve_svrhadd_n_s64_z
__builtin_sve_svrhadd_n_s8_z
__builtin_sve_svrhadd_n_u32_x
__builtin_sve_svrhadd_n_u64_m
__builtin_sve_svrhadd_s16_m
__builtin_sve_svrhadd_s32_m
__builtin_sve_svrhadd_s64_m
--imacros=
__builtin_sve_svrhadd_u32_x
__builtin_sve_svrhadd_u64_x
__builtin_sve_svrinta_f16_m
__builtin_sve_svrinta_f16_z
__builtin_sve_svrinta_f64_z
__builtin_sve_svrinti_f16_z
__builtin_sve_svrinti_f64_x
__builtin_sve_svrinti_f64_z
__builtin_sve_svrintm_f64_m
__builtin_sve_svrintn_f16_m
__builtin_sve_svrintn_f32_z
__builtin_sve_svrintn_f64_x
__builtin_sve_svrintp_f32_x
__builtin_sve_svrintp_f64_x
__builtin_sve_svrintx_f32_m
/imsvc
__builtin_sve_svrintz_f16_z
__builtin_sve_svrintz_f32_z
__builtin_sve_svrshl_n_s16_x
__builtin_sve_svrshl_n_s32_m
__builtin_sve_svrshl_n_s8_m
__builtin_sve_svrshl_n_u16_m
__builtin_sve_svrshl_n_u32_z
__builtin_sve_svrshl_n_u64_m
__builtin_sve_svrshl_s16_x
__builtin_sve_svrshl_s32_x
__builtin_sve_svrshl_s8_m
__builtin_sve_svrshl_s8_z
__builtin_sve_svrshl_u32_z
__builtin_sve_svrshl_u64_z
__builtin_sve_svrshr_n_s16_m
--include-directory-after=
__builtin_sve_svrshr_n_s8_m
__builtin_sve_svrshr_n_u16_m
q4Uiq16bq4UiIUWi
__builtin_sve_svrshr_n_u32_z
q16Ucq16bq16UcIUWi
__builtin_sve_svrshrnb_n_s16
__builtin_sve_svrshrnb_n_u64
__builtin_sve_svrshrnt_n_s16
__builtin_sve_svrsqrte_f32
__builtin_sve_svrsqrte_u32_x
__builtin_sve_svrsra_n_s16
__builtin_sve_svrsra_n_s64
__builtin_sve_svrsubhnb_n_s16
__builtin_sve_svrsubhnb_n_u16
__builtin_sve_svrsubhnb_s64
-include-pch
__builtin_sve_svrsubhnt_n_u32
__builtin_sve_svrsubhnt_s32
__builtin_sve_svsbclb_n_u32
__builtin_sve_svsbclb_u32
__builtin_sve_svscale_f16_m
__builtin_sve_svscale_f16_z
__builtin_sve_svscale_f64_m
q2dq16bq2dq2Wi
__builtin_sve_svscale_n_f32_m
__builtin_sve_svscale_n_f32_z
__builtin_sve_svsclamp_s16
__builtin_sve_svsclamp_s64
__builtin_sve_svsel_f64
__builtin_sve_svsel_s64
-fintrinsic-modules-path
-fobjc-encode-cxx-class-template-spec
q4dq4dIUWiq2d
__builtin_sve_svset2_s32
q32Scq32ScIUWiq16Sc
q16Usq16UsIUWiq8Us
q32Ucq32UcIUWiq16Uc
__builtin_sve_svset3_f16
q6dq6dIUWiq2d
__builtin_sve_svset3_s16
q48Scq48ScIUWiq16Sc
__builtin_sve_svset3_u32
q48Ucq48UcIUWiq16Uc
q32yq32yIUWiq8y
q8dq8dIUWiq2d
__builtin_sve_svset4_s32
q64Scq64ScIUWiq16Sc
--include-with-prefix=
q64Ucq64UcIUWiq16Uc
__builtin_sve_svshllb_n_s16
q2Wiq4iIUWi
q8Usq16UcIUWi
__builtin_sve_svshllt_n_s32
__builtin_sve_svshllt_n_u32
__builtin_sve_svshrnb_n_u16
__builtin_sve_svshrnb_n_u32
__builtin_sve_svshrnt_n_u64
__builtin_sve_svsli_n_s64
__builtin_sve_svsli_n_u8
__builtin_sve_svsm4ekey_u32
__builtin_sve_svsplice_s32
__builtin_sve_svsplice_u16
__builtin_sve_svsqadd_n_u16_m
-index-header-map
__builtin_sve_svsqadd_n_u8_m
__builtin_sve_svsqadd_u16_m
__builtin_sve_svsqadd_u32_z
__builtin_sve_svsqadd_u64_x
__builtin_sve_svsqrshru_u16_x4
__builtin_sve_svsqrt_f16_x
__builtin_sve_svsqrt_f64_m
__builtin_sve_svsqrt_f64_x
__builtin_sve_svsra_n_u32
__builtin_sve_svsri_n_s16
__builtin_sve_svsri_n_u32
__builtin_sve_svsri_n_u8
vq16bf*q4f
__builtin_sve_svst1_s16
vq16bSWi*q2Wi
-index-ignore-pcms
vq16bUi*q4iq4Ui
__builtin_sve_svst1_scatter_s32offset_u32
__builtin_sve_svst1_scatter_s64index_u64
__builtin_sve_svst1_scatter_s64offset_f64
vq16bq4UiWiq4f
__builtin_sve_svst1_scatter_u32base_index_u32
__builtin_sve_svst1_scatter_u32base_s32
vq16bq4Uiq4i
__builtin_sve_svst1_scatter_u32index_u32
__builtin_sve_svst1_scatter_u32offset_s32
vq16bq2UWiWiq2d
vq16bq2UWiWiq2Wi
__builtin_sve_svst1_scatter_u64base_s64
vq16bq2UWiq2UWi
__builtin_sve_svst1_scatter_u64index_s64
-index-record-codegen-name
vq16bUi*q4Ui
__builtin_sve_svst1_u8
vq16bh*Wiq8h
vq16bf*Wiq4f
vq16bSi*Wiq4i
__builtin_sve_svst1_vnum_s8
vq16bUi*Wiq4Ui
__builtin_sve_svst1_vnum_u64
vq16bSc*q4i
__builtin_sve_svst1b_s8_x2
vq16bSc*q4iq4i
vq16bUc*q4iq4Ui
__builtin_sve_svst1b_scatter_u32base_offset_u32
__builtin_sve_svst1b_scatter_u32offset_s32
__builtin_sve_svst1b_scatter_u64base_offset_u64
-index-unit-output-path
vq16bUc*q8Us
__builtin_sve_svst1b_u64
vQUc*q64Uc
vq16bSc*Wiq8s
vQSc*Wiq32Sc
__builtin_sve_svst1b_vnum_u16
vq16bUc*Wiq2UWi
__builtin_sve_svst1b_vnum_u8_x2
vQd*q8d
__builtin_sve_svst1d_s64_x4
vQUWi*q8UWi
vQd*Wiq4d
vQSWi*Wiq8Wi
__builtin_sve_svst1d_vnum_u64_x4
__builtin_sve_svst1h_bf16_x4
Only execute frontend initialization
vQSs*q32s
__builtin_sve_svst1h_s64
vq16bUs*q4iq4Ui
__builtin_sve_svst1h_scatter_s32offset_u32
__builtin_sve_svst1h_scatter_s64offset_u64
__builtin_sve_svst1h_scatter_u32base_offset_s32
vq16bSs*q4Uiq4i
__builtin_sve_svst1h_scatter_u32index_u32
__builtin_sve_svst1h_scatter_u64base_offset_u64
__builtin_sve_svst1h_scatter_u64index_s64
__builtin_sve_svst1h_scatter_u64offset_u64
vQUs*q16Us
vq16bUs*q2UWi
__builtin_sve_svst1h_vnum_bf16_x4
vQh*Wiq32h
-install_name
vq16bSs*Wiq2Wi
__builtin_sve_svst1h_vnum_u16_x4
vq16bUs*Wiq2UWi
vQf*q8f
vQSi*q16i
__builtin_sve_svst1w_scatter_s64index_s64
__builtin_sve_svst1w_scatter_s64offset_u64
__builtin_sve_svst1w_scatter_u64base_index_s64
vq16bSi*q2UWiq2Wi
__builtin_sve_svst1w_scatter_u64offset_s64
vQUi*q16Ui
vq16bUi*q2UWi
vQSi*Wiq8i
__builtin_sve_svst1w_vnum_s64
__builtin_sve_svst1w_vnum_u32_x2
Add directory to the internal system include search path with implicit extern "C" semantics; these are assumed to not be user-provided and are used to model system and standard headers' paths.
vq16bf*q8f
__builtin_sve_svst2_s16
vq16bSWi*q4Wi
vq16bSc*q32Sc
vq16bUWi*q4UWi
__builtin_sve_svst2_vnum_bf16
vq16bf*Wiq8f
__builtin_sve_svst2_vnum_f64
vq16bSWi*Wiq4Wi
__builtin_sve_svst2_vnum_u16
vq16bUWi*Wiq4UWi
vq16bUc*Wiq32Uc
vq16bf*q12f
__builtin_sve_svst3_s16
vq16bSWi*q6Wi
Set the -iwithprefix/-iwithprefixbefore prefix
vq16bUWi*q6UWi
__builtin_sve_svst3_vnum_bf16
vq16bf*Wiq12f
vq16bd*Wiq6d
vq16bSWi*Wiq6Wi
__builtin_sve_svst3_vnum_u16
vq16bUWi*Wiq6UWi
__builtin_sve_svst3_vnum_u8
vq16bf*q16f
__builtin_sve_svst4_s16
vq16bSWi*q8Wi
vq16bSc*q64Sc
vq16bUWi*q8UWi
__builtin_sve_svst4_vnum_bf16
__builtin_sve_svst4_vnum_f32
Set the system root directory (usually /)
vq16bSWi*Wiq8Wi
__builtin_sve_svst4_vnum_u16
vq16bUWi*Wiq8UWi
vq16bUc*Wiq64Uc
__builtin_sve_svstnt1_s32
__builtin_sve_svstnt1_scatter_s64index_f64
__builtin_sve_svstnt1_scatter_s64offset_u64
__builtin_sve_svstnt1_scatter_u32base_f32
__builtin_sve_svstnt1_scatter_u32base_s32
__builtin_sve_svstnt1_scatter_u32offset_s32
__builtin_sve_svstnt1_scatter_u64base_index_u64
__builtin_sve_svstnt1_scatter_u64base_offset_s64
__builtin_sve_svstnt1_scatter_u64index_u64
__builtin_sve_svstnt1_scatter_u64offset_u64
__builtin_sve_svstnt1_vnum_bf16
Add directory to SYSTEM include search path
__builtin_sve_svstnt1_vnum_u16
__builtin_sve_svstnt1_vnum_u8
__builtin_sve_svstnt1b_scatter_u32base_offset_s32
__builtin_sve_svstnt1b_scatter_u32base_s32
__builtin_sve_svstnt1b_scatter_u64base_s64
__builtin_sve_svstnt1b_scatter_u64offset_u64
__builtin_sve_svstnt1b_vnum_u8_x2
__builtin_sve_svstnt1b_vnum_u8_x4
__builtin_sve_svstnt1d_vnum_f64_x2
__builtin_sve_svstnt1d_vnum_s64_x4
__builtin_sve_svstnt1h_f16_x2
__builtin_sve_svstnt1h_s16_x2
__builtin_sve_svstnt1h_scatter_u32base_index_s32
__builtin_sve_svstnt1h_scatter_u32base_offset_u32
__builtin_sve_svstnt1h_scatter_u32offset_s32
Use the stat data cached in file instead of doing filesystem syscalls. See clang-stat-cache utility.
__builtin_sve_svstnt1h_scatter_u64offset_s64
__builtin_sve_svstnt1h_u16_x4
__builtin_sve_svstnt1h_vnum_s16_x2
__builtin_sve_svstnt1h_vnum_u16_x2
__builtin_sve_svstnt1w_scatter_s64index_s64
__builtin_sve_svstnt1w_scatter_s64offset_u64
__builtin_sve_svstnt1w_scatter_u64base_s64
__builtin_sve_svstnt1w_scatter_u64base_u64
__builtin_sve_svstnt1w_vnum_f32_x2
__builtin_sve_svstnt1w_vnum_s32_x4
__builtin_sve_svsub_f16_z
__builtin_sve_svsub_f32_x
__builtin_sve_svsub_n_f16_x
__builtin_sve_svsub_n_f32_x
__builtin_sve_svsub_n_s16_m
Set directory to SYSTEM include search path with prefix
__builtin_sve_svsub_n_s64_z
__builtin_sve_svsub_n_s8_z
__builtin_sve_svsub_n_u32_x
__builtin_sve_svsub_n_u64_m
__builtin_sve_svsub_s16_m
__builtin_sve_svsub_s32_m
__builtin_sve_svsub_s64_z
__builtin_sve_svsub_s8_m
__builtin_sve_svsub_u32_x
__builtin_sve_svsub_u64_x
__builtin_sve_svsubhnb_n_s16
__builtin_sve_svsubhnb_n_s64
__builtin_sve_svsubhnb_s64
__builtin_sve_svsubhnb_u64
__builtin_sve_svsubhnt_n_u16
When looking up file, use the working directory provided by the operating system, or by the virtual file system.
__builtin_sve_svsublb_n_s16
__builtin_sve_svsublb_n_u16
__builtin_sve_svsublb_s64
__builtin_sve_svsublb_u32
__builtin_sve_svsublbt_s32
__builtin_sve_svsublt_n_s32
__builtin_sve_svsublt_s16
__builtin_sve_svsublt_s32
__builtin_sve_svsubltb_n_s64
__builtin_sve_svsubltb_s64
__builtin_sve_svsubr_f32_x
__builtin_sve_svsubr_f64_m
__builtin_sve_svsubr_n_f32_m
__builtin_sve_svsubr_n_f64_m
__builtin_sve_svsubr_n_s16_z
__builtin_sve_svsubr_n_s8_x
__builtin_sve_svsubr_n_u16_x
__builtin_sve_svsubr_n_u64_m
__builtin_sve_svsubr_n_u64_z
__builtin_sve_svsubr_s16_z
__builtin_sve_svsubr_s32_z
__builtin_sve_svsubr_s8_x
__builtin_sve_svsubr_s8_z
__builtin_sve_svsubr_u64_m
__builtin_sve_svsubr_u8_m
__builtin_sve_svsubwb_n_s64
__builtin_sve_svsubwb_n_u32
__builtin_sve_svsubwb_u32
__builtin_sve_svsubwt_n_s32
-fix-only-warnings
/JMC
__builtin_sve_svsudot_n_s32
q4iq4iq16Scq16Uc
__builtin_sve_svtbl2_f32
__builtin_sve_svtbl2_f64
__builtin_sve_svtbl2_s64
q16Scq32Scq16Uc
__builtin_sve_svtbl2_u64
q2UWiq4UWiq2UWi
__builtin_sve_svtbl_f32
q2dq2dq2UWi
__builtin_sve_svtbl_s64
__builtin_sve_svtbl_s8
__builtin_sve_svtbx_bf16
q8hq8hq8hq8Us
__builtin_sve_svtbx_s16
-keep_private_externs
__builtin_sve_svtbx_u16
__builtin_sve_svtbx_u8
__builtin_sve_svtrn1_b32
__builtin_sve_svtrn1_b8
__builtin_sve_svtrn1_s16
__builtin_sve_svtrn1_s8
__builtin_sve_svtrn1q_bf16
__builtin_sve_svtrn1q_f16
__builtin_sve_svtrn1q_u16
__builtin_sve_svtrn1q_u8
__builtin_sve_svtrn2_bf16
__builtin_sve_svtrn2_f32
__builtin_sve_svtrn2_u16
__builtin_sve_svtrn2_u8
__builtin_sve_svtrn2q_f64
--language
__builtin_sve_svtsmul_f16
__builtin_sve_svtssel_f16
__builtin_sve_svuclamp_u64
__builtin_sve_svundef2_bf16
__builtin_sve_svundef2_f64
q16sv
__builtin_sve_svundef2_s8
q32Scv
__builtin_sve_svundef2_u8
q24yv
__builtin_sve_svundef3_f64
__builtin_sve_svundef3_s16
__builtin_sve_svundef3_s8
q24Usv
__builtin_sve_svundef3_u8
/LDd
__builtin_sve_svundef4_f64
q32sv
__builtin_sve_svundef4_s8
__builtin_sve_svundef4_u16
__builtin_sve_svundef4_u8
q8yv
__builtin_sve_svundef_f64
q2dv
__builtin_sve_svundef_s8
q8Usv
__builtin_sve_svundef_u8
__builtin_sve_svunpkhi_b
__builtin_sve_svunpkhi_u64
__builtin_sve_svunpklo_s32
__builtin_sve_svunpklo_u32
--libomptarget-amdgcn-bc-path=
__builtin_sve_svuqadd_n_s64_z
__builtin_sve_svuqadd_n_s8_z
__builtin_sve_svuqadd_s32_x
__builtin_sve_svuqadd_s64_m
__builtin_sve_svusdot_lane_s32
q4iq4iq16UcSc
__builtin_sve_svuzp1_b32
__builtin_sve_svuzp1_b64
__builtin_sve_svuzp1_s32
__builtin_sve_svuzp1_u16
__builtin_sve_svuzp1q_f16
__builtin_sve_svuzp1q_f64
__builtin_sve_svuzp1q_u32
__builtin_sve_svuzp2_b16
__builtin_sve_svuzp2_f16
Path to libomptarget-nvptx bitcode library
__builtin_sve_svuzp2_u32
__builtin_sve_svuzp2q_bf16
__builtin_sve_svuzp2q_s32
__builtin_sve_svuzp2q_s8
q16bii
__builtin_sve_svwhilege_b16_u32
__builtin_sve_svwhilege_b32_s64
__builtin_sve_svwhilege_b32_u32
__builtin_sve_svwhilege_b8_s64
__builtin_sve_svwhilegt_b16_s32
__builtin_sve_svwhilegt_b32_s64
__builtin_sve_svwhilegt_b32_u64
__builtin_sve_svwhilegt_b8_s64
__builtin_sve_svwhilele_b16_s32
__builtin_sve_svwhilele_b32_s32
Add linker option
__builtin_sve_svwhilele_b8_s64
__builtin_sve_svwhilelt_b16_s32
__builtin_sve_svwhilelt_b32_s64
__builtin_sve_svwhilelt_b32_u64
__builtin_sve_svwhilelt_b8_s64
__builtin_sve_svwhilerw_bf16
q16bfC*fC*
__builtin_sve_svwhilerw_f64
q16bSWiC*SWiC*
__builtin_sve_svwhilerw_u16
q16bUWiC*UWiC*
q16bUcC*UcC*
__builtin_sve_svwhilewr_s32
__builtin_sve_svwhilewr_u16
vq16b
__builtin_sve_svxar_n_u8
__builtin_sve_svzip1_b64
__builtin_sve_svzip1_f64
__builtin_sve_svzip1_s32
__builtin_sve_svzip1_u8
__builtin_sve_svzip1q_f32
__builtin_sve_svzip1q_s8
__builtin_sve_svzip1q_u16
__builtin_sve_svzip2_b8
__builtin_sve_svzip2_f32
__builtin_sve_svzip2_s8
__builtin_sve_svzip2_u32
__builtin_sve_svzip2q_f64
__builtin_sve_svzip2q_s64
__builtin_sve_svzip2q_u16
__builtin_sve_reinterpret_s8_u8
q16Scq8Us
__builtin_sve_reinterpret_s8_f16
__builtin_sve_reinterpret_s8_bf16
__builtin_sve_reinterpret_s16_s8
q8Ssq8Ss
__builtin_sve_reinterpret_s16_u8
q8Ssq16Uc
__builtin_sve_reinterpret_s16_f16
q8Ssq8y
__builtin_sve_reinterpret_s32_s8
__builtin_sve_reinterpret_s32_s16
__builtin_sve_reinterpret_s32_u8
q4Siq8Us
__builtin_sve_reinterpret_s32_f16
-m3dnow
__builtin_sve_reinterpret_s64_s8
q2SWiq8Ss
__builtin_sve_reinterpret_s64_u8
__builtin_sve_reinterpret_s64_u16
__builtin_sve_reinterpret_s64_f16
q2SWiq8y
__builtin_sve_reinterpret_u8_s8
q16Ucq16Sc
__builtin_sve_reinterpret_u8_u8
q16Ucq4Ui
__builtin_sve_reinterpret_u8_bf16
__builtin_sve_reinterpret_u8_f32
__builtin_sve_reinterpret_u16_s16
q8Usq4Si
__builtin_sve_reinterpret_u16_u16
-m68020
q8Usq4f
__builtin_sve_reinterpret_u32_s8
q4Uiq4Si
q4Uiq2SWi
__builtin_sve_reinterpret_u32_f16
q4Uiq8y
__builtin_sve_reinterpret_u64_s8
q2UWiq16Sc
__builtin_sve_reinterpret_u64_u8
q2UWiq8Us
__builtin_sve_reinterpret_u64_bf16
__builtin_sve_reinterpret_u64_f32
__builtin_sve_reinterpret_f16_s16
q8hq4Si
__builtin_sve_reinterpret_f16_u16
-m80387
__builtin_sve_reinterpret_f16_f32
q8hq2d
__builtin_sve_reinterpret_bf16_s32
__builtin_sve_reinterpret_bf16_s64
__builtin_sve_reinterpret_bf16_u32
q8yq2UWi
q8yq4f
__builtin_sve_reinterpret_bf16_f64
q4fq4Si
__builtin_sve_reinterpret_f32_u8
__builtin_sve_reinterpret_f32_u64
__builtin_sve_reinterpret_f32_f16
q4fq2d
__builtin_sve_reinterpret_f64_s16
q2dq4Si
Enable quadword atomics ABI on AIX (AIX PPC64 only). Uses lqarx/stqcx. instructions.
__builtin_sve_reinterpret_f64_f16
q2dq8y
V16Scq16Sc
V8sq8s
V16Ucq16Uc
__builtin_sve_svget_neonq_u32
V8hq8h
__builtin_sve_svget_neonq_f32
q16Scq16ScV16Sc
__builtin_sve_svset_neonq_s32
q16Ucq16UcV16Uc
q8Usq8UsV8s
q8hq8hV8h
__builtin_sve_svset_neonq_f64
q16ScV16Sc
Enable the extended Altivec ABI on AIX (AIX only). Uses volatile and nonvolatile vector registers
__builtin_sve_svdup_neonq_u16
q4UiV4Ui
__builtin_sve_svdup_neonq_f32
__builtin_sve_svdup_neonq_f64
__builtin_sme_svaddha_za32_s32
vIUWiq16bq16bq4Ui
__builtin_sme_svaddva_za32_s32
__builtin_sme_svaddva_za32_u32
__builtin_sme_svld1_hor_vnum_za128
__builtin_sme_svld1_hor_vnum_za32
__builtin_sme_svld1_hor_za16
__builtin_sme_svld1_hor_za64
__builtin_sme_svld1_ver_vnum_za8
__builtin_sme_svld1_ver_za32
vUiIUWiq16bvC*
-mabs=
__builtin_sme_svmla_single_za32_f32_vg1x2
vUiIUWiq16fq4f
__builtin_sme_svmla_za32_f32_vg1x2
__builtin_sme_svmla_za32_f32_vg1x4
__builtin_sme_svmlal_lane_za32_bf16_vg2x1
vUiIUWiq16yq8yIUWi
__builtin_sme_svmlal_lane_za32_f16_vg2x2
vUiIUWiq16hq8hIUWi
__builtin_sme_svmlal_lane_za32_s16_vg2x4
vUiIUWiq8Usq8UsIUWi
__builtin_sme_svmlal_single_za32_bf16_vg2x1
__builtin_sme_svmlal_single_za32_bf16_vg2x2
__builtin_sme_svmlal_single_za32_f16_vg2x2
vUiIUWiq32hq8h
__builtin_sme_svmlal_single_za32_s16_vg2x4
-main-file-name
__builtin_sme_svmlal_za32_bf16_vg2x2
vUiIUWiq32yq32y
__builtin_sme_svmlal_za32_s16_vg2x2
__builtin_sme_svmlal_za32_s16_vg2x4
__builtin_sme_svmls_lane_za32_f32_vg1x2
__builtin_sme_svmls_lane_za64_f64_vg1x4
__builtin_sme_svmls_za32_f32_vg1x2
__builtin_sme_svmls_za32_f32_vg1x4
__builtin_sme_svmlsl_lane_za32_f16_vg2x2
__builtin_sme_svmlsl_lane_za32_s16_vg2x2
__builtin_sme_svmlsl_single_za32_bf16_vg2x1
__builtin_sme_svmlsl_single_za32_bf16_vg2x4
__builtin_sme_svmlsl_single_za32_s16_vg2x4
__builtin_sme_svmlsl_single_za32_u16_vg2x2
-fixit-recompile
-fopenmp-target-debug
Size is not plausible
Choose analyzer checkers to enable
-fcheck-new
gfx904
gfx90a
-fcf-protection
cdecp4
gfx1035
gfx1102
Option to pass to the CAS plugin.
Configure the frontend to use a CAS include tree.
palm
field-padding
-fcaret-diagnostics
c++-header
-fcall-saved-x18
Make the x8 register call-saved (AArch64 only)
Align doubles to two words in structs (x86 only)
Make the x14 register call-saved (AArch64 only)
ExternCContext
Make the x12 register call-saved (AArch64 only)
aarch64_32
amdil
-fcache-compile-job
Disable replaying a cached compile job
kalimba
LinkageSpec
Time when the current build session started
powerpc
renderscript64
NamespaceAlias
-fbracket-depth
Weakly link in the blocks runtime
Accept non-standard constructs supported by the Borland compiler
-fcs-profile-generate
spirv
ObjCProperty
-fbasic-block-sections=
freebsd
Concept
<file or dir/>
tvos
Enum
Enable EH Asynchronous exceptions
cygnus
-fasm-blocks
-fastf
-fcomment-block-commands=
muslx32
geometry
Typedef
-fapple-pragma-pack
Generate coverage mapping to enable code coverage analysis
UnresolvedUsingIfExists
-fapinotes
-fdump-fortran-optimized
i886
Field
Use ANSI escape codes for diagnostics
spirv32v1.1
-faltivec
+3e3r2
spirv32v1.5
dSYM
-masm=
CXXDestructor
-fembed-bitcode
NonTypeTemplateParm
failed to obtain absolute path for 
-feliminate-unused-debug-types
/Fe:
 _-ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789PER BODY TILTING FROM HIP JOINTS BETWEEN MIDDLE AND RING FINGERSFACE WITH SYMBOLS COVERING MOUTHLE-LINE EQUAL ABOVE GREATER-THANLE COMMA QUOTATION MARK ORNAMENTLAR SIGN WITH OVERLAID BACKSLASH BAR AT END OF HORIZONTAL STROKEWNWARDS ARROW WITH TIP LEFTWARDSLAGAB TIMES U OVER LAGAB TIMES UWO DOTS ABOVE AND TWO DOTS BELOWAND LEFTWARDS OPEN CIRCLE ARROWSFT-POINTING ANGLE QUOTATION MARKWO DOTS OVER ONE DOT PUNCTUATIONUPPER AND LOWER ONE EIGHTH BLOCKTRIANGLE-HEADED RIGHTWARDS ARROWAND MIDDLE RIGHT TO LOWER CENTRE SHADOWED WHITE RIGHTWARDS ARROWLOWER LEFT CURLY BRACKET SECTIONROFLEX CLICK WITH RETROFLEX HOOKL ARABIC LETTER TAH AND TWO DOTSRONG CENTRALIZATION STROKE BELOWOWNWARDS HARPOON WITH BARB RIGHTOWER RIGHT CURLY BRACKET SECTIONGREATER-THAN ABOVE SLANTED EQUALTOP HALF DIVIDED BY VERTICAL BARAISING BOTH HANDS IN CELEBRATION DOWNWARDS EQUILATERAL ARROWHEADUG2 OVER TUG2 TUG2 OVER TUG2 PAP DOWNWARDS TRIANGLE-HEADED ARROWLL BUT UPPER LEFT QUADRANT BLACKEN ARM ENDING IN ARROW POINTING DIFIER LETTER LABIALIZATION MARKDIC KASHMIRI INDEPENDENT SVARITARIGHT SEMICIRCLE WITH THREE DOTS CONTAINING SMALL WHITE TRIANGLE HORIZONTAL STROKES TO THE RIGHTER ARROWS CIRCLING ANTICLOCKWISEER IGI SHIR OVER SHIR UD OVER UDRONT-TILTED SHADOWED WHITE ARROWER TAB NI OVER NI DISH OVER DISHDED HIGH STOP WITH FILLED CENTRELEFTWARDS HARPOON WITH BARB DOWN KORANIC STOP SIGN ISOLATED FORMESS-THAN ABOVE DOUBLE-LINE EQUAL LEFTWARDS TRIANGLE-HEADED ARROW LETTER BYELORUSSIAN-UKRAINIAN IETALLED BLACK AND WHITE FLORETTE LOWER HALF INVERSE MEDIUM SHADERIGHTWARDS TRIANGLE-HEADED ARROWD ARROW WITH TRIANGLE ARROWHEADSHT-POINTING ANGLE QUOTATION MARKED ARABIC-INDIC DIGIT FOUR ABOVETER-THAN ABOVE DOUBLE-LINE EQUALNORMAL FACTOR SEMIDIRECT PRODUCTTICAL BAR DOUBLE RIGHT TURNSTILEE SQUARED LATIN CAPITAL LETTER PIRECT PRODUCT WITH BOTTOM CLOSEDROXIMATELY NOR ACTUALLY EQUAL TOIGHTWARDS HARPOON WITH BARB DOWNATHARVAVEDIC INDEPENDENT SVARITARIANGLE-HEADED OPEN CIRCLE ARROWINTING DOWNWARDS THEN NORTH EASTED ARABIC-INDIC DIGIT FOUR BELOWHUR KAZAKH KIRGHIZ ALEF MAKSURA THIRD WHITE RIGHT POINTING INDEXVED STEM PARAGRAPH SIGN ORNAMENTS VERTICALLY BELOW AND SMALL TAHIDE AND JOINED WITH INTERSECTIONE CONTAINING BLACK SMALL LOZENGEOF UPWARDS TRIANGLE-HEADED ARROWE-POINTED BLACK RIGHTWARDS ARROWE TO MIDDLE LEFT TO LOWER CENTRE-SHADOWED WHITE RIGHTWARDS ARROW-POINTING ANGLE BRACKET ORNAMENTSEMICIRCULAR ANTICLOCKWISE ARROWH HAMZA ABOVE WITH ALEF MAKSURA H HORIZONTAL MIDDLE BLACK STRIPEMARK WITH LEFT RIGHT ARROW ABOVESWIRL BIRGA WITH DOUBLE ORNAMENTH SUPERSCRIPT ALEF ISOLATED FORMTOM-LIGHTED RIGHTWARDS ARROWHEADVE LESS-THAN ABOVE SLANTED EQUALS AND UPWARDS OPEN CIRCLE ARROWS TORTOISE SHELL BRACKET ORNAMENT TRIANGULAR THREE QUARTERS BLOCKHAND WITH MIDDLE FINGER EXTENDEDEDIUM SHADE AND RIGHT HALF BLOCKM LEFT MEMBER OF DOUBLE VERTICALTION SIGN WITH CIRCUMFLEX ACCENTEDIUM SHADE AND LOWER HALF BLOCKARDROP-SPOKED PROPELLER ASTERISKARDS ARROW ABOVE LEFTWARDS ARROWED UPWARDS EQUILATERAL ARROWHEADARDS HARPOON WITH BARB DOWNWARDSTIMES ASH2 KU OVER HI TIMES ASH2OUBLE-LINE EQUAL ABOVE LESS-THANED COMMA QUOTATION MARK ORNAMENTONE HUNDRED THIRTY-FIVE DEGREESAISED HAND WITH FINGERS SPLAYEDLEFTWARDS EQUILATERAL ARROWHEADETALLED OUTLINED BLACK FLORETTERIGHTWARDS HARPOON WITH BARB UPRING OVER TWO RINGS PUNCTUATIONRINGS OVER ONE RING PUNCTUATIONAND MIDDLE LEFT TO LOWER CENTRETNAMESE ALTERNATE READING MARK UPWARDS HARPOON WITH BARB RIGHTIN WHITE CIRCLE IN BLACK SQUAREACK-TILTED SHADOWED WHITE ARROW CROSSING ASH OVER ASH OVER ASHINDEX THUMB CURVE THUMB INSIDEHT CENTRALIZATION STROKE BELOWDOWNWARDS AND RIGHTWARDS ARROW-HIRAGANA PROLONGED SOUND MARKAGGRAVATED INDEPENDENT SVARITAGREATER-THAN ABOVE EQUALS SIGNGHT FOUR POINTED PINWHEEL STARDOT BELOW AND THREE DOTS ABOVEEFT SEMICIRCLE WITH THREE DOTSOPEN CENTRE EIGHT POINTED STARAND JOINED BY DASH WITH SUBSETMODIFIER LETTER LEFT HALF RINGMINTON RACQUET AND SHUTTLECOCKQAF WITH LAM WITH ALEF MAKSURAMAKSURA WITH SUPERSCRIPT ALEF DIVIDED BY HORIZONTAL BAR AND HIGH-REVERSED-9 QUOTATION MARKSAD WITH LAM WITH ALEF MAKSURAEART EXCLAMATION MARK ORNAMENTON WITH RIGHTWARDS ARROW ABOVEDOWN HEAVY AND RIGHT UP LIGHTONAL INDICATOR SYMBOL LETTER DOT OVER TWO DOTS PUNCTUATION WITH REVERSED NEGATION SLASHDOWN MIDDLE THUMB INDEX CROSS DOWN INDEX THUMB HOOK MIDDLENS-SERIF INTERROBANG ORNAMENTCKED FACE WITH EXPLODING HEADEFTWARDS HARPOON WITH BARB UPOMBINING ANUSVARA ABOVE RIGHTCONTAINING BLACK SMALL CIRCLEUP HEAVY AND RIGHT DOWN LIGHT OVER RIGHTWARDS ARROW TO BARWITH RIGHTWARDS ARROW AT LEFTPUNCTUATION CHINOOK FULL STOPEXTENDED ARABIC-INDIC DIGIT TEVERSED LUNATE EPSILON SYMBOLSUPERSCRIPT ALEF INITIAL FORMSEMICIRCULAR PATH AROUND POLELIGHT FOUR POINTED BLACK CUSPEFT ARC GREATER-THAN BRACKETACE DIRECTION POSITION NOSE DOWN HEAVY AND LEFT UP LIGHTFTING POINT RIGHTWARDS ARROWEDGE-TAILED RIGHTWARDS ARROWLEFTWARDS OF DOWNWARDS ARROWUPPER CENTRE TO MIDDLE RIGHTDOUBLE ANUSVARA ANTARGOMUKHASALTIRE WITH ROUNDED CORNERSBESIDE AND JOINED WITH UNIONMONOGRAMMOS TESSERA DODEKATAUP HEAVY AND LEFT DOWN LIGHTLIQUID MEASURE FIRST SUBUNITHREE HUNDRED FIFTEEN DEGREESHADED WHITE RIGHTWARDS ARROWOUND-TIPPED RIGHTWARDS ARROWU ALAYHI WAAALIHEE WA-SALLAMASTERISKS ALIGNED VERTICALLYT LITTER IN ITS PLACE SYMBOLISMILLAH AR-RAHMAN AR-RAHEEMRECTANGULAR PATH AROUND POLEIBE SYLLABLE BOUNDARY MARKERMIDDLE RING LITTLE CONJOINEDUPWARDS AND RIGHTWARDS ARROWBRDA RNYING YIG MGO MDUN MAPPY PERSON RAISING ONE HANDBRDA RNYING YIG MGO SGAB MAFINGER COVERING CLOSED LIPSOUR BALLOON-SPOKED ASTERISKHEAD MARK WITH MOON AND SUNTALIC LATIN CAPITAL LETTER ZERO FOR ODD POWERS OF FOURCONTINUOUS UNDERLINE SYMBOL AND LEFT SEMICIRCLE ARROWSLOWER MIDDLE LEFT TO LOWER STRUMENTAL NOTATION SYMBOL-KATHAKA INDEPENDENT SVARITARIGHT ARC LESS-THAN BRACKETIDE ARC ANTICLOCKWISE ARROWCIRCLE WITH NORTHWEST ARROWIDE-HEADED RIGHTWARDS ARROWLOWER TONAL RANGE INDICATORBETWEEN TWO HORIZONTAL BARSEAVY WHITE RIGHTWARDS ARROWRIPLE VERTICAL BAR OPERATORPHARYNGEAL VOICED FRICATIVEWO DOTS BELOW AND DOT ABOVEFOUR FINGERS CONJOINED BENT-FEATHERED RIGHTWARDS ARROW BARREE WITH TWO DOTS BELOWHANDED INTERLACED PENTAGRAMLARGE EQUILATERAL ARROWHEADUPPER MIDDLE LEFT TO UPPER LIGHT CENTRALIZATION STROKEDOUBLE PRIME QUOTATION MARKDOUBLE ANGLE QUOTATION MARKTWO HUNDRED SEVENTY DEGREESWALLPLANE SHOULDER HIP MOVELESS-THAN ABOVE EQUALS SIGNEMICIRCULAR CLOCKWISE ARROW DIVIDED BY HORIZONTAL RULERIANGULAR ONE QUARTER BLOCKIMPERFECTUM CUM PROLATIONE ONE LARGE AND ONE SMALL EYEENTATION FORM FOR VERTICAL CRIPT LIGATURE ET ORNAMENTU REVERSED OVER U REVERSEDMEEM WITH HAH WITH TATWEELCAT FACE WITH SMILING EYESOORPLANE SHOULDER HIP MOVELINE FEED SEPARATOR SYMBOLMARRIED PARTNERSHIP SYMBOLUNEVEN EYES AND WAVY MOUTHRIGHT PARENTHESIS ORNAMENTMODIFIER FITZPATRICK TYPE-LLALLAHOU ALAYHE WASSALLAMRIPLE DOT PUNCTUATION MARKDROP-SHADOWED WHITE SQUARETHREE DOTS ABOVE DOWNWARDS OR APPROXIMATELY EQUAL TOSSIAN ASTROLOGICAL SYMBOL AND MIDDLE FINGERS CROSSEDCLOCKWISE ARROW WITH MINUSE ONE-WAY LEFT WAY TRAFFICIDEOGRAPHIC ITERATION MARKAND RIGHT ONE EIGHTH BLOCKLEFTWARDS OF UPWARDS ARROWJECT REPLACEMENT CHARACTERLANTED SOUTH ARROW WITH HOERSTRASS ELLIPTIC FUNCTIONDOTTED SUBSTITUTION MARKERBLE TENNIS PADDLE AND BALLALEF MAKSURA ISOLATED FORM GAD OVER GAD GAR OVER GARHTORA SKLIRON CHROMA VASISDOTTED LUNATE SIGMA SYMBOL LESS THAN THE DENOMINATORWITH LEFTWARDS ARROW ABOVEINDUSTRIAL STANDARD SYMBOLOCKED FEMALE AND MALE SIGN NEGATED WITH VERTICAL BARORTHOGONAL CROSSHATCH FILLONOMICAL SYMBOL FOR URANUSOTATED FLORAL HEART BULLETYAJURVEDIC MIDLINE SVARITA WITHIN TRIANGLE ARROWHEADSTROKE AND TWO DOTS ABOVETTED SUBSTITUTION BRACKETLEFTWARDS ARROW WITH HOOKRIGHT DIAGONAL HALF BLACKTAB OVER TAB GAR OVER GARDOUBLE CANDRABINDU VIRAMABUT NOT ACTUALLY EQUAL TODIAERESIS AND HOOK SYMBOLOLD ASSYRIAN WORD DIVIDERELD HOCKEY STICK AND BALLINVERTED EXCLAMATION MARKMULTIPLICATION SIGN BELOWLEFT PARENTHESIS ORNAMENTTERNION INTEGRAL OPERATORLOW QUILT SQUARE ORNAMENTBREVE WITH INVERTED BREVERIST CIRCLE HITTING WALL REE-HUNDRED-AND-TWENTIETHFECTIVENESS OR DISTORTION WITH DOUBLE VERTICAL BAR WITH DOUBLE GRAVE ACCENTMBINING CRYPTOGRAMMIC DOTCROSSING NORTH EAST ARROW OVER NUN LAGAR TIMES SALMEDIUM TRIANGLE ARROWHEADCAT FACE WITH CLOSED EYESOUTLINED RIGHTWARDS ARROWRANCH BANK IDENTIFICATION WITH CIRCLED ONE OVERLAYOUBLE BIRGA WITH ORNAMENTING ON THE FLOOR LAUGHINGDRY MEASURE FIRST SUBUNITONE UNDER EIGHTEEN SYMBOLNIVERSAL RECYCLING SYMBOLFFICULTY AT THE BEGINNING WITH DOUBLE MIDDLE TILDERIPLE BIRGA WITH ORNAMENTWELVE POINTED BLACK STARORIZONTAL BAR WITH NOTCHUPWARD POINTING TRIANGLEGLOTTAL STOP WITH STROKEWITH CANCELLATION STROKET BLACK RIGHTWARDS ARROWEQUAL TO OR GREATER-THANTED INTERPOLATION MARKERMALL CIRCLE TO THE RIGHTUPRIGHT RECTANGULAR ZEROHEAVY BLACK HEART BULLETDESCENDING MUSICAL NOTESARM CIRCLE HITTING WALL REVERSED NINE-LIKE BHALESMALL ARABIC LETTER TAH ISOSCELES RIGHT TRIANGLESYLLABLE REPETITION MARKBLIC ADDRESS LOUDSPEAKERTEARDROP-SPOKED ASTERISKARROW POINTING DIRECTLY OTTOM-SHADED WHITE ARROWGREATER-THAN OR EQUAL TOLICATION PROGRAM COMMANDOTTOM SHADED WHITE ARROWBUSINESS SUIT LEVITATINGDIAGONAL CROSSHATCH FILLDOWNSCALING FACTOR KIIZHBLACK LENTICULAR BRACKETSTROKE THROUGH DESCENDERINTERSECTION WITH SERIFSLINE HORIZONTAL ELLIPSISSINGLE-LINE NOT EQUAL TOPERSCRIPT ALEF MOKHASSASBERKANAN BEORC BJARKAN BING FACE WITH OPEN MOUTHWITH UPWARDS ARROW ABOVECOMPATIBILITY IDEOGRAPH- OVER TOP SQUARE BRACKETPOINTING DOWNWARDS ABOVEAND MALE AND FEMALE SIGNWO DOTS VERTICALLY ABOVE POINTING BACKHAND INDEXEYES AND HAND OVER MOUTHLY-RECYCLED PAPER SYMBOLCULINE ORDINAL INDICATORIGATURE OPEN ET ORNAMENTCONSECUTIVE EQUALS SIGNSDOUBLE HORIZONTAL STROKERIGHTWARDS THEN CURVING LARGE TRIANGLE ARROWHEADALTERNATE SECTION MARKERFINGER AND THUMB CROSSEDE PLUS A PLUS SU PLUS NAMTAVRULI CAPITAL LETTER ONE-HUNDRED-AND-SIXTIETHVOICED LARYNGEAL SPIRANTLEFT DIAGONAL HALF BLACKORAH WITH NINE BRANCHESPUNCTUATION END OF TEXTRIGHT DIAGONAL ELLIPSISIVE FINGERS SPREAD OPENGREEK SMALL LETTER IOTAWESTERN PWO KAREN TONE-RIGHT HORIZONTAL SECANTRIGHT-POINTING TRIANGLEISTED RIGHTWARDS ARROWSOVERLAPPING LOGICAL ANDOVER RIGHTWARDS HARPOON WITH HALF-CIRCLE BELOWIGHT-SHADED WHITE ARROWMITIAN CONJUGATE MATRIXRTOISE SHELL BRACKETED HREE POINTED BLACK STARSOLIDUS BINARY RELATIONHANKED RIGHTWARDS ARROWININE ORDINAL INDICATORLSCHREIBER PAUSE SYMBOLUBLE VERTICAL BAR BELOWAVOURING DELICIOUS FOODORIGINAL OF OR EQUAL TOBARBED RIGHTWARDS ARROWLEFT-SHADED WHITE ARROWDOWNWARDS THEN CURVING HT TRIFOLIATE SNOWFLAKERAISED OMISSION BRACKETARABIC LETTER TAH ABOVEESS OUTLINED WHITE STARCURRENT SYMBOL FORM TWOCLUSTER-INITIAL LETTER PA OVER PA GAR OVER GAR ROTATED NINETY DEGREESANG DEPARTING TONE MARKWO-WAY LEFT WAY TRAFFICUP SPREAD THUMB FORWARDZANTINE MUSICAL SYMBOL  CAKE WITH SWIRL DESIGN HUNDRED TWENTY-EIGHTH ASCENDING MUSICAL NOTESIDE ARC CLOCKWISE ARROW POINTING AT THE VIEWERAND WOMAN HOLDING HANDSSING DIAGONAL CROSSING CIRCUMFLEX ACCENT ABOVEREE VARIATION SELECTOR ARTY HORN AND PARTY HATDOT BELOW AND DOT ABOVEWHITE FOUR POINTED CUSPALEF MAKSURA FINAL FORMUPWARDS THEN NORTH WESTATTACHING VERTICAL OMETALGAMATION OR COPRODUCTVERTICAL BISECTING LINEP WITH EXCLAMATION MARKSHAPE WITH A DOT INSIDEWITH HORIZONTAL STROKEDOMAIN ANTIRESTRICTIONLONG HORIZONTAL STROKERECTILINEAR BLACK STARSHORT VERTICAL STROKESINVERTED SMALL V ABOVE WITH DECORATIVE COVERQUESTION MARK ORNAMENTLE BESIDE VERTICAL BARYIAKENG PUACHUE HMONG TWO HORIZONTAL STROKESINVERTED SMALL V BELOWNOT INCLUDING THE POLEUBSCRIPT SMALL LETTER ARMENIAN ETERNITY SIGNDOUBLE-LINED HEAD MARKDOUBLE VERTICAL STROKELEFT TRIANGLE OPERATORING HEAD IN SILHOUETTEPUNCTUATION KUNDDALIYAROUND A POINT OPERATOR WITH THREE DOTS ABOVEHORT HORIZONTAL STROKEWASALLAM ISOLATED FORMDOUBLE SOLIDUS OVERLAYCURLY BRACKET ORNAMENT WITH SINGLE ZAPYATAYAWITH JEEM INITIAL FORMHEXIFORM LONG ANUSVARAEAST-POINTING AIRPLANEIN DEPARTING TONE MARKUIGHUR KIRGHIZ YEH WITGREATER-THAN DIAERESISLOW PARAPHRASE BRACKETND RECORDING COPYRIGHTKEEPING STILL MOUNTAINCONSONANT SIGN MEDIAL CONSONANT MODIFIER BAR SYMBOL FOR LIGHTHOUSETRIPLE RIGHT TURNSTILEDOWN-POINTING TRIANGLE-ROTATED DIVISION SIGNUSTOMER ACCOUNT NUMBERI YFESIS TETARTIMORIONTRIPLE VERTICAL STROKEUPPER RIGHT AND LOWER REE-CIRCLE ALTERNATE ICJK UNIFIED IDEOGRAPH-RROW WITH ROUNDED HEADRIGHT-POINTING FLEURONREASE FONT SIZE SYMBOL OVER STAMPED ENVELOPEDRESSED TO THE SUBJECTSEMI-VOICED SOUND MARKMNYAM YIG GI MGO RGYANPRECEDED BY APOSTROPHEIGEL LONG-BRANCH-SOL S WITH CIRCUMFLEX ABOVESYMPTOTICALLY EQUAL TOINDIRECT QUESTION MARKDOWNWARDS ZIGZAG ARROW RIGHT ARROWHEAD ABOVEACKSLANTED SOUTH ARROWLATIN CAPITAL LETTER SWITH VOICED SOUND MARKSHORT RIGHTWARDS ARROWPERSET OF NOR EQUAL TOPOINTING UPWARDS BELOWBAR ABOVE INTERSECTIONOVER LEFTWARDS HARPOONOVER NU11 BUR OVER BUROVER SHIR BUR OVER BURUPPER ONE EIGHTH BLOCKMALE WITH STROKE SIGNBESIDE RIGHT TRIANGLETEEN POINTED ASTERISKINVERTED BRIDGE BELOWRELICT HOUSE BUILDINGOP SHADED WHITE ARROWOHAMMAD ISOLATED FORMHOUSAND MILLIONS SIGNINTERSECTION OPERATOROCAL NOTATION SYMBOL--SHAPED BAG DELIMITER-ROUND NOTEHEAD DOWN BOTTOM U-SHAPED ARROWTHICK LETTER SELECTORHORIZONTAL TABULATIONINTERSECTING LOGICAL YIG MGO TSHEG SHAD MAREVERSED FEATHER MARKOPPOSING AN PLUS NAGAMORPHOLOGICAL DIVIDERALLING DIAGONAL SLASHSIDE TO SIDE SCISSORSCTOR OR CROSS PRODUCTFINAL CONSONANT SIGN CRUCIFORM NUMBER FOURCROSSE STICK AND BALLVOICED ITERATION MARKLATTENED OPEN A ABOVEFLATTENED PARENTHESISSHORT LEFTWARDS ARROWRISING DIAGONAL SLASHTRIANGULAR HALF BLOCKDOWN HORIZONTAL HEAVYDOWN HORIZONTAL LIGHTAND VOWEL LENGTH MARKWO-CIRCLE ALTERNATE IPAP PLUS PAP PLUS LU3WO-CIRCLE NUKTA ABOVELESS-THAN OR EQUAL TOEIGHT SPOKED ASTERISKELATIONAL COMPOSITIONACUTE AND HOOK SYMBOLRATING SYSTEM COMMANDDIGRAMMOS EX DODEKATAEFT-POINTING TRIANGLELETTER SMALL CAPITAL EQUAL TO OR LESS-THANER RIGHT CORNER ANGLEINVERTED GLOTTAL STOPDELIMITER TSHEG BSTARAKIA TELOUS ICHIMATOSDOUBLE LEFT TURNSTILEEFT OPEN BOX OPERATORMIDDLE RING LITTLE ONQUADRANT CIRCULAR ARCEFT HORIZONTAL SECANTWITH INVERTED V ABOVEABOVE SHORT DOWN TACK AND SLANTED PARALLELDOWNWARDS ARROW ABOVEVERTICAL LINE OVERLAYXTRA SHORT VOWEL MARKBUT NOT EQUIVALENT TOGRUENT WITH DOT ABOVESH AMPERSAND ORNAMENTARYSTIAN FIVE HUNDREDND TELEPHONE RECEIVERARKENING OF THE LIGHTHALF TRIANGULAR COLONARD SHELL FLOPPY DISKVERY HEAVY BARB ARROWGHT OPEN BOX OPERATOR WITH VERTICAL STROKENTISTRY SYMBOL LIGHT HAND INTERIOR PRODUCTHOCKEY STICK AND PUCKGRAMMOS OKTO DODEKATA WITH SHORT RIGHT LEGTILDE OPERATOR ABOVE TOUCHING INSIDE MOUTHWITH FOUR DOTS ABOVELEFT-TO-RIGHT SECANTNIS RACQUET AND BALLARXIS KAI FTHORA VOUSINGLE DOT TONE MARKINVERSE WHITE CIRCLEINDEX RING LITTLE ONYIG MGO PHUR SHAD MASCRIPTION CHARACTER 79 OVER LAK-079 GUNUIRCLES HITTING WALL WARE-FUNCTION SYMBOLINVERTED CANDRABINDUE POINTED WHITE STARMULTIPLE PUNCTUATIONL FUNCTIONAL SYMBOL WET CULTIVATION SIGNANGE ANTIRESTRICTIONSTAR WITH MIDDLE DOTWORD REPETITION MARKAND SOUTH WEST ARROWAND SOUTH EAST ARROWAND NORTH WEST ARROWA- SHOG GI MGO RGYANAND NORTH EAST ARROWKHAMTI REDUPLICATIONSIDEWAYS NOON GHUNNAINSIDE MOUTH RELAXEDLASHING SWEAT SYMBOLLATALIZED HOOK BELOWINING OBLIQUE STROKEJUDEO-SPANISH VARIKAWITH SOROCHYA NOZHKASEPARATOR MIDDLE DOTLE WITH POPPING CORKSEPARATOR KEY SYMBOLLEFT AND LOWER RIGHTHIGH RATHA OR LOW PAHIGH TONE APOSTROPHERIGHT-POINTING ANGLERIGHT U-SHAPED ARROWOTLESS J WITH STROKEUBHAANAHU WA TAAALAABSET OF NOR EQUAL TOTHROUGH SMALL CIRCLEENARMONIOS ANTIFONIAHORIZONTAL BAR WITH RIGHT QUADRANT BLACKEVERSED ROTATED RANAEMESTVENNY ZADERZHKADOTLESS HEAD OF KHAHDOUBLE ANGLE BRACKETREAN STANDARD SYMBOLDOUBLE DOT TONE MARK BEGIN LOGOGRAM MARKHREE-DOT NUKTA ABOVEDOWN ARROWHEAD BELOWYRENAIC TWO DRACHMASCRESCENT MOON SYMBOLFOUR RAISED KNUCKLESCONSONANT SIGN HAARUPLUS GISH TIMES TAK4TRANSPOSITION MARKERGHTWARDS ARROW BELOWFORMS LIGHT VERTICALCHEMICAL SYMBOL FOR POTABLE WATER SYMBOL OVER TUR ZA OVER ZAGRA GCAN -CHAR RTAGSCHARACTER INTRODUCER WITH HORIZONTAL BARFIVE SPOKED ASTERISK OVER LAGAR GUNU SHEOVER LEFTWARDS ARROWCENTRE VERTICAL LINEFINAL CONSONANT MARKCURRENCY SYMBOL RIELCURVED ANGLE BRACKETHALF CIRCLE WITH DOTHAR2 TIMES GAL PLUS UP-POINTING TRIANGLERIGHT ANGLE WITH DOT ABOVE LEFT TRIANGLEE CONSONANT MODIFIERREVERSED ONE HUNDREDONCAVE-SIDED DIAMONDVAL WITH OVAL INSIDEIMAGE OF OR EQUAL TOONE MARK SGAW KAREN RUMAI PALAUNG TONE-5 AND DIAGONAL STROKEBETWEEN PALM FACINGSALTERNATE LAKH MARKSYMBOL FOR BEGINNERNETWORKED COMPUTERSVASTNESS OR WASTINGOVER E NUN OVER NUNSEVEN EIGHTHS BLOCKIMIDIA SEXTULA SIGNPREFIXED NASAL SIGNHURISAZ THURS THORNNE HUNDRED TWENTY PTO LOWER RIGHT FILLSH PLUS HU PLUS ASHNDRED POINTS SYMBOLFIVE FINGERS SPREADRROW NO-BREAK SPACED CIRCUMFLEX ACCENTEVEN POWERS OF FOURARENTHESIS NOTEHEADLEFT TO LOWER RIGHTLEFT POINTING INDEXQUADRUPLE CRESCENTSHEAD-SHAPED POINTERHAND COVERING MOUTHARABIC FORM SHAPINGDOWN AND HORIZONTALTWENTY-FIVE DEGREESTURNED SECTION MARKSEQUENCE INTRODUCERTURNED PADA PISELEHLEADING MCHAN RTAGSGAPPED CIRCLE ARROWTRANNO MALO POVYSHEVARIANT FORM ILIMMUTHANG LONG ANUSVARAPARAGRAPH SEPARATORCIRCLED SANS-SERIF IN CHEN SPUNGS SHADCIRCLED WHITE ARROWMOVES AGAINST CHEEKWOMEN HOLDING HANDSRY CULTIVATION SIGNLANTED EQUAL ABOVE MSHELL MOBILE PHONEFT-POINTING FLEURONA END LOGOGRAM MARKDOWN POINTING INDEXNAXIAN FIVE HUNDREDOW-9 QUOTATION MARKVARIATION INDICATORVARIANT WITH SQUARESLANTED NORTH ARROWANSPOSITION BRACKETANS-SERIF CAPITAL LILDING CONSTRUCTIONFLOORPLANE TWISTINGSTRATIAN FIFTY MNASSTRAIGHT THUMB BENTWITH YEH FINAL FORMGIBBOUS MOON SYMBOLKULL AND CROSSBONESREE-QUARTER CIRCLE RIGHT TO LOWER LEFTRAILING MCHAN RTAGSUBLE DOT WITHIN DOTOTATED ARDHAVISARGAING SHIRT WITH SASHVERSE FINAL BARLINEAHU ALAYHI WA-AALIHLF MADDA OVER MADDA AND PROSGEGRAMMENI WITH STRIKETHROUGHLUB-SPOKED ASTERISK IN A RECTANGLE BOXTIGHTLY-CLOSED EYESDENOMINATOR SIXTEENARTIAL DIFFERENTIALNORTH ARROW WITH HORIGHT MIDDLE STROKEBETWEEN MIDDLE RINGTART OF RUB EL HIZBOP SEMICIRCLE ARROWHORT STROKE OVERLAYINSIDE CIRCLE BELOWRATUM SUPER STRATUMIGATURE AYIN-DALETH LOVE YOU HAND SIGNATED TELLER MACHINE FLUTTERING IN WIND WITH VERTICAL TAIL AND RETROFLEX HOOKVERSAL INTERSECTIONISPUTED END OF AYAHUP HORIZONTAL HEAVYC DIGRAPH WITH CURLQUESTION MARK ABOVEUP HORIZONTAL LIGHTNOGRAPHIC FULL STOPITED LIABILITY SIGNET WITH WHITE CROSSVERTICAL TABULATIONURRENCY SYMBOL BAHTLEFT U-SHAPED ARROW KASKAL U GUNU DISHLOWER MIDDLE RIGHTCTLY EQUIVALENT TOSMALL RED TRIANGLE FOR SIMALUNGUN SAFORTY-FIVE DEGREESSOUL ISOLATED FORMLEFT MIDDLE STROKE AND SMASH PRODUCTQUARTER NOTE STEM TYPE A ELECTRONICSEVERSED CHELYUSTKA AND YPOGEGRAMMENICOPPER ANTIMONIATEUPPER MIDDLE RIGHTEVENTEEN FULL STOPCONTINUING OVERLAPLOSED CIRCLE ARROWBAARAKA WA-TAAALAACUP WITHOUT HANDLEDOUBLE PUNCTUATIONEAST POINTING LEAF AND NO DOTS ABOVESINGLE PUNCTUATIONERTICAL BAR VIRAMASMALL CIRCLE ABOVE OVER INVERTED SHUFIVE EIGHTHS BLOCKWEST POINTING LEAFWHITE VERTICAL BAREPIGRAPHIC LETTER FORKED PARAGRAPHOSPUNCTUATION BINDU UP ARROWHEAD BELOWABBREVIATION MARK DOWN-OUTPUT SYMBOLENTY-TWO POINT TWOENTERING TONE MARKU-SHAPED ORNAMENTSWITH STROKE SYMBOLMATHEMATICAL SPACE NOT LITTER SYMBOLUM WITH DRUMSTICKSLEFT-STEM TONE BARWITH JUSTIFICATIONHILOSOPHERS SULFURCANTILLATION SIGN VERY SMALL DIAMONDSYMMETRIC SWAPPINGHAIS LUS NTOG NTOGS PRESSED TOGETHERSEPTUPLE CRESCENTSNORMAL SUBGROUP OFARROW SHAFT WIDTH TO LOWER LEFT FILL WITH KAVYKA ABOVEJEEM ISOLATED FORMSET OVER BUILDINGSOU ALAYHE WASALLAMS INSIDE AND ABOVEOTLESS DALATH RISHIGATURE ZAYIN-YODHIRROR HORIZONTALLYKANTAJA NAASIKYAYAOUCHTONE TELEPHONE WITH FLOWING SANDBOTTOM RIGHT KASRAATIN SMALL LETTER HORIZONTALLY BELOWTILTING FROM WAISTORK ON THE DECAYEDNITE PART INTEGRALNISH VERSE DIVIDER THUMB INDEX THUMBITAN SMALL SCRIPT  WITH CROSSED-TAILHOUSANDS SEPARATOR WITH CIRCLE BELOW WITH CIRCLE ABOVEHUNDREDS UNIT MARKNINETEEN FULL STOPIX SPOKED ASTERISKINDEPENDENT VOWEL KOREAN CHARACTER OPACING CANDRABINDU SPREAD THUMB SIDEGGLY VERTICAL LINEBASELINE ROUND DOTASTED SWEET POTATOGATIVE ACKNOWLEDGEGISH CROSSING GISHTROFLEX HOOK BELOWRYUKOVAYA SVETLAYAATERRESTRIAL ALIENPERFIXED LETTER RAVARIANT FORM LIMMUYLLABLE LENGTHENERASTROLOGICAL SIGN IGSAW PUZZLE PIECEIN POSSESSION SIGNOW TONE APOSTROPHEYPTIAN HIEROGLYPH KBAR ISOLATED FORMHOLDING BACK TEARSAND LOW RIGHT RINGRIST CIRCLE FRONT NYET THYOOM TA-ROLUTLINED BLACK STARSHAN REDUPLICATIONTOP U-SHAPED ARROWNYOOGA NAAKSIKYAYAAEUM ONE PLETHRONBRACKET EXTENSIONEMICOLON UNDERBARVERAGE WITH SLASHHORIZONTAL SINGLEHORIZONTAL DOUBLETERSYLLABIC TSHEGRIATION SELECTOR-VARIANT FORM ASH9A PLUS HA PLUS DAVARIANT FORM IMINVARIANT FORM USSUEAR SCREEN SYMBOLINEAR ANNOTATION TEN THOUSAND SIGNBE WITH MERIDIANSIGHTEEN FULL STOPING POLE AND FISHABBREVIATION SIGNATHERING TOGETHERBERBER ACADEMY YAULAR MEDIUM SHADEVEE WITH UNDERBARINITIAL LETTER RAAUKAZ LAGU LOGR LIDEOGRAPHIC COMMAICTED LEFT ENTRY-IASTRE MARK ABOVEBOTTOM HALF BLACKTARTING FROM SIGNGENERIC MATERIALSCTION APPLICATIONAPLI DYO DODEKATAGREATER-THAN SIGNFINGER-POST ARROWLD PERMIC LETTER ALTERNATE NUMBER GREATER-THAN NOR CROSS PUNCTUATIONKE BOTTLE AND CUPAMBDA WITH STROKEFLICK ALTERNATINGVOCALIZATION MARKKHAH INITIAL FORMSTRAIGHT MOVEMENTCIRCLES WITH DOTSCONTOURED OUTLINEAMPHYLIAN DIGAMMALAPPING LESS-THANCONTINUATION SIGNCLOSED LITTLE YUSTRIPLE DASH ARROWCONSONANT SIGN PALAH ISOLATED FORMLAGOLITIC LETTER COMBINING NUMBER AND BLACK SQUARESFRACTION ONE HALFURNED DAMMA BELOWBRIGHTNESS SYMBOLASTERN PWO KAREN TAN ISOLATED FORMTHREE SOUND WAVESLIAN HIEROGLYPH ALHOUETTE OF JAPANTIAL ARTS UNIFORMHIRTEEN FULL STOPDENTAL PERCUSSIVEBUT RELIEVED FACEDELPHIC FIVE MNASUP AND HORIZONTALFROM SMALL CIRCLEINVERTED MCHU CANVRE TOURNOIS SIGNURNED COMMA ABOVECAL SYMBOL BOTTOMCANCELLATION MARKUP POINTING INDEXHEART-SHAPED EYESCANDRABINDU ABOVEVERY SMALL SQUAREFACING BABY CHICKSQUARED TIMES KURHAH ISOLATED FORMTONAL RANGE MARK MANENT PAPER SIGNY ON BLACK SQUAREREATIONAL VEHICLE LAGAB TIMES ASH2 LAGAR OVER LAGAR TO BLACK DIAMONDWITH NOT EQUAL TOMILITARY AIRPLANEQUAT REVERSED ESHMEEM INITIAL FORM WITH BULLET NOSE OVER ZU PLUS SARMALL WHITE CIRCLEYEH ISOLATED FORMONE EIGHTH BLOCK-0 WHEELED CHARIOT GRAVEYARD SYMBOLPINWHEEL ASTERISKRYBLION BASE SIGNRIGHT HALF CIRCLEOURTEEN FULL STOPNE EYEBROW RAISEDNEGATIVE CIRCLED MEDIUM BARB ARROW PLUS SHA3 PLUS AOWER NUMERAL SIGNWO VERTICAL DOTS NAUDIZ NYD NAUD NSIGN O WITH CROSSPRIZNAK MODIFIER NFORMATION SOURCE ALTERNATION MARKS REVOLVING LIGHT-HEIGHT LEFT HOOKSERVER EYE SYMBOL WITH TILDE ABOVEPRESSIONLESS FACEPUNCTUATION SIGN  WITH SOUND WAVESOPEN-HEADED ARROW-GAAHLAA TTUDDAAGPRECEDING SOLIDUS AND PALATAL HOOKNASALIZATION MARKWHITE PARENTHESISWHITE SHOGI PIECENG STROKE OVERLAYPLACEHOLDER MARKFLOORPLANE SPACESTRING FRETBOARDINDEPENDENT SHINFFERENCE BETWEENUPPER OVER LOWERVARIANT FORM ESHRIZONTAL ELLIPSEMIDDLE AND BELOWSTICKING OUT FARMIDDLE AND RIGHTMESTVENNY KLYUCHCOMPRESSED ARROWRISING TONE MARKFALLING DIAGONALPRECHGESANG STEMCREAMING IN FEARINES CONVERGING POSTPOSITION MENOLD TAMIL VIRAMAWITH CENTRED DOTPRECEDING SUBSETCORNER LEFTWARDSCORNER DOWNWARDSB2 TENU PLUS TABINDEX THUMB SIDESTRAIGHT STRETCHOLD WHITE CIRCLE OR THE IMAGE OF PLUS KAK PLUS ANAL DIGIT SHAPESYIR MKPARAQ MEUNPLE MEASURE RESTCONSONANT JOINERHMATULLAH ALAYHECASIAN ALBANIAN IFTEEN FULL STOP WITH BUNNY EARSSHU2 PLUS KASKALLD ASSYRIAN ONE  WITH DOT INSIDEIDED GREEK CROSS WITH HEADSTROKEHIGH SPACING DOTHOLDING TOGETHERHYPHENATION MARKANABAZAR SQUARE BOTTOM HALF RINGORIZONTAL JOINERBOLD GREEK CROSSSTERISK OPERATORPEN CENTRE CROSSVOWEL LENGTHENERWITH HAMZA ABOVEWITH HEARING AIDIMENSIONAL ANGLE SMALL ROTATIONSTRIPLE CRESCENTSLEFT HALF CIRCLEWITH LEFT UPTURN TIMES DISH TENUCH WITH UMBRELLALEFT ARROW ABOVEIGHTH NOTE STEM  TIMES GAN2 TENUTAKANA-HIRAGANA DOTTED CRESCENTSSMALL NOON ABOVESMALL CAPITAL ELRIGHT HALF BLACKUDLY CRYING FACENTAIGANA LETTER IRCLE X NOTEHEADRAYS AND DOTTED DITORIAL CORONIS AND LIGHT RIGHTEN MILLIONS SIGNIPPER-MOUTH FACE AND HEAVY RIGHTECIMAL SEPARATORWAVY HAMZA BELOWSANS-SERIF ARROWEND OF TEXT MARKRAIDO RAD REID RSTUCK-OUT TONGUEDVUMYA ZAPYATYMIRIGHT DOWN BARB LTERNATE HASANTADOWN RIGHT BARB EFORE COMPLETIONDOUBLE ZAPYATAYADOUBLE TURNSTILEREPETITION MARK-RECORD SEPARATOR CAPPED MOUNTAINISTOS DISC SIGN ULDERED OPEN BOXRESH-AYIN-DALETHIVE POINTED STARDOUBLE HEAD MARKDOUBLE DOT ABOVELOWER OVER UPPERDOUBLE CRESCENTSSITION INDICATORK PERMITTED HERERIGHT HALF BELOWVERY HEAVY SHAFTARENTHESES ABOVEO-MINOAN SIGN CM LIGHT MOON ARTAENTRE WHITE STARUP MIDDLE HINGEDQUALS SIGN BELOWUP-OUTPUT SYMBOLEVERSED VISARGA AFFRICATION MARKEVERY OTHER TIMESERIFS AT BOTTOMVIEWING CEREMONYSIGN RISING TONEWALLED ENCLOSURELIGHT BARB ARROWLIGHT AND RIGHT E PLUS GAN2 TENUUPERSCRIPT ALAPHQ WITH HOOK TAILMAGNIFYING GLASSENUMERATION SIGNUBJOINED LETTER ADIAN SYLLABICS DEWAYS U BRACKETUMBER SIGN ABOVEEPSILON UNDERBARYATHOS BASE SIGN INSERTION POINTERCURY SUBLIMATER PLUS GAN2 TENUNION WITH SERIFSSLANTED EQUAL TOLLOW PAN OF FOODBINDING BRACKETITH FINGERNAILSBAR ABOVE UNIONIDING ENCLOSURE-PIECE SWIMSUITNJOINING MACRONVERTICAL SECANTORIZONTAL COLONUSTER NOTEHEAD BLOCK DIAGONAL -NO-EVIL MONKEYTHREE DISH TENUIAMOND UNDERBARXTEEN FULL STOPINUS SIGN BELOWATA LINK ESCAPEINVERTED LAZY SNVERTED UBADAMA2 CHARIOT FRAMESALTER PAHLAVI OLIDUS OPERATORON TOP OF MODEMATINATE MYSLITEODIFIER DAMAGEDS ELEVATUS MARKS IN SILHOUETTEODO SOFT HYPHENING SYMBOL FOR OGOGRAM KHAMTI INGLE HEAD MARKNOT APPROXIMATEBENT OVER INDEXBELOW LONG DASHNOON FINAL FORMONTOUR INTEGRALBELGTHOR SYMBOLNOON WITH KASRAONJOINED HINGEDNO GOOD GESTUREIGN PALI VIRAMATAI LAING TONE-IZED WHEELCHAIRIRCUMFLEX BELOWOND PLACE MEDALIMISEOS CHRONOUIMPERFECTA RESTINVERTED STROKEYNCHRONOUS IDLERIGHT RERENGGANESIDE LESS-THANR WITH FISHHOOKERICAN FOOTBALLDESCENDING TONEDI ALLAHOU ANHUDIALYTIKA TONOSESSARON CHRONONUBLE RING BELOWDIGA AELA-PILLARIGHT HALF RINGDOING CARTWHEELEH INITIAL FORMRIGHTWARDS TICKPRISHTHAMATRA EPUT SYMBOL FOR TVIMADUR SYMBOLZERO WITH SLASH NEPOSTOYANNAYAEXPONENT SYMBOL DEYTEROU ICHOUQUADRUPLE ARROWQUADRUPLE DASH DAGESH OR MAPIQTWO WITH STROKEETIC VERSE SIGNRIGHTWARDS AND U PLUS U PLUS UULTIPLICATION XDOWNWARDS TREND AND LOWER LEFTREVERSE SOLIDUS AND BOTTOM ENDREVERSED OPEN EUMAI PALAUNG FAE ISOLATED FORME MUSICAL NOTES ALTERNATE FORME OVER INFINITYDOWN SEQUENTIALUGMENTATION DOTDOUBLE TRIANGLERECITATIVE MARKRECEPTIVE EARTHREAMY EYEBROWS  CLOUD AND RAINEFT REPEAT SIGNEFTWARDS ARROWS CORNER BRACKETHAKING PARALLELHEH MEDIAL FORM WITH DESCENDERTIP ON THE LEFTCAPITAL LETTERSHALF FILL SPACE TOUCHING INDEX WITH DIAERESIS TIMES IGI GUNUGROUP SEPARATORUR POINTED STAR THUMB STRAIGHT THROUGH CIRCLETHROWING A KISSHOUSAND STATERS-CARRIER LETTERORT EQUALS SIGNHORIZONTAL FILLBREAKING HYPHENHORIZONTAL DASHBROWS STRAIGHT OW-FALLING TONEHOOKED INDEX UP WITH RIGHT LEGOUBLE BACKSLASHTILDE DIAERESIS PLUS HI PLUS AFTER COMPLETIONFRACTION DIGIT FOUR ENCLOSURESFOUR DOTS WITH PERTHO PEORTH PPLUS SIGN BELOWFORWARD TILTING PARESTIGMENON CORNER WITH DOT OVER SIG4 SHU2FIVE-LIKE BHALE OVER MOUNTAINSHREE DOTS BELOWCLOSED BY CURVETRIANGULAR MARKRMAN PENNY SIGNPENSION RAILWAYPEN SQUARED DOTCKET CALCULATORRNAMENT STROKE-CIRCUIT-OUTPUT GEMINATION MARKGGLY LINE BELOWGHT REPEAT SIGNOWER HALF BLACKTOP RIGHT FATHAZAIN FINAL FORMVOWEL SHORTENERSTROKE NOT SIGNALMOST EQUAL TOACHES THE LIMITALIF LENGTHENERLEFT DOWN BARB ND OF PARAGRAPHLEFT HALF BELOWLEFT HAND INDEXVOWEL SEPARATORALAYHE ASSALLAMWITH RAIN DROPSMIDDLE DIAGONALWITH DOWN ARROWWHITE DOT RIGHTLETTER CAPITAL LOSED INSULAR GLEVEL TONE MARKLEVEN FULL STOPAI LAING DIGIT SSICAL BUILDINGNA DOUBLE HELIXSTERESIS SYMBOLN-ARY SUMMATIONAND PARALLEL TOSHITA PLUS GISHMURDA MAHAPRANAKTOVIK NUMERAL ST SYRIAC CROSSST QUARTER MOONLEFT HALF BLACKSHORT OVER LONGAMOUNT OF CHECKKISIM5 TIMES BISIXTEENTH NOTESNASALIZED TONE-LATION FUNCTIONAMARITAN SOURCEMARRYING MAIDENLD TAMIL SHORT LONG VOWEL SIGNLOOK OF TRIUMPHWALLPLANE SPACELMOST EQUAL TO MEEM FINAL FORMMALAKON CHROMA LONG HOOK BELOWLIGHT AND LEFT HIRD-STAGE HLIENDED MULTIMAPSMALL LETTER DOT TILDE ABOVETHREE POINTED MOTHETIC ABOVEOSITION SYMBOLAMNUC PII KUUHENNA WITH BARSTIMES OPERATOROUR OBOLS SIGNERTICAL JOINERSQUIGGLE ARROW WITH BACK YERLOWER DIAGONALMEDIUM DIAMONDTIMES SHU TENUERIAL ARAMAIC HESIVE BANDAGEERIC INDICATORREATIVE HEAVEN WITH LONG LEG-CURRENCY SIGNOTHERS CIRCLEDSMALL LETTER JDIAGONAL PATH THALAN ETHEL OTHAKA ANUDATTAEPENTHETIC YUTOOTNOTE MARKERTETARTOS ICHOSDEYTEROS ICHOSDIAGONAL MOUTHSHESHIG TIMES UNIT SEPARATORLACE OF SAJDAHBHATTIPROLU AAIGHTWARDS VANEUNION OPERATORTERMINAL MARK-IKHAYA PUTNAYATELPIECE CLOCKYOUTHFUL FOLLYONE SOUND WAVEDI ALLAAHU ANH HASER FOR VAVTHOUSANDS MARKOUSING THUNDERMRACHNOTIKHAYAUSPENSION MARKHREE-LEGGED TEUBHAYATO MUKHADOUBLE-STRUCK THOUSANDS SIGNORANGE DIAMONDBLADE SCISSORSBLACK TRIANGLEOPPOSING PIRIGTHER CHRISTMASREE-LINE STAFFRIGHT CROSSBARREH FINAL FORMAND COLD SWEATD-UP NEWSPAPERLETTER OVERLAPEMIVOWEL SIGN TWO ENCLOSURESDIRECTION FLIPFORWARD INDEX LESS-THAN NOR PLITTING APARTPPED MIDDLE UPPLETE INFINITYPLE WITH HEARTLEFTWARDS TICKMID-LEVEL TONEWITH DOT BELOWAFETY SCISSORSVRON SNOWFLAKEUP RIGHT BARB LEFTWARDS AND UNDER RELATIONFFICE BUILDINGEXTENDED BHALERING MEGAPHONETWO DOT LEADERUPPED INDEX UPSPEECH BUBBLESFATHATAN ABOVETURKIC LETTER FFED FLATBREADPROTECTED AREAAI LENGTH MARKFINAL ANUSVARALEVEN TWELFTHSLIGHTLY SMALL EXCLAMATION OHDIO MICROPHONELINE EXTENSIONCRIFICIAL WINEMENSION ORIGINCEPTER OF JOVEDASIA PNEUMATAQUINARIUS SIGNVONIC ASTERISKSMOKING SYMBOLRD PLACE MEDALCERTAINTY SIGNOVER GUD LUGALTOP HALF BLACKWITH LEFT HOOKCENTURIAL SIGNGUNU TIMES ASHGYPTOLOGICAL AROSS ON SHIELDEND OF SECTION CROSSING ESH2ALLAJALALOUHOUSIDE-DOWN FACEUAL WHEELCHAIRCOLON OPERATORUND MARK ABOVETWO WHITE DOTSWITH FATHATAN PEN MARK BELOWLITTLE SECTIONTRIANGLE WITH DOES NOT EXISTPARTMENT STOREZAH WITH MEEM PARATED SYMBOLLOTUS POSITIONGERED TREMOLO-TRANSMIT STATEPAO KAREN TONESMALL TRIANGLEGHT WITH STARSZAKAYA LANTERNSEPARATOR MARKALF TREE TRUNKREVERSED-SCHWAIRCULAR VIRAMAANGLE OPENING SHAN MEDIAL WAED SYMBOL FOR ISSION TICKETSIVE OBOLS SIGNSEL LOCOMOTIVEXO EKFONITIKONNORTH ARABIAN DUN3 GUNU GUNUOBLIQUE HYPHENVERTICAL COLONIWAZ TIR TYR TSECOND SUBUNITSURROUND FROM VERTICAL LIGHT1 OVER LAK-081VERTICAL HEAVYAROUND-PROFILEJOINED SQUARESING HANDS SIGNINOLOGICAL DOTINSERTION SIGNISED ROUND DOT AND DIAERESISIVE KEY SYMBOLINFINITY BELOWVERTICAL ABOVEOLD RESOLUTIONAU LENGTH MARKVENIENCE STOREITA PLUS GISH WORD SEPARATORBAG MEMBERSHIPINVERTED BIRGASTRONG ISOLATEINVERTED DAMMANYI ZLA NAA DAHINESE TONE YAUDATE CHRIVIWITH INTEGRAL WITH JEGOGANMARKS CHAPTERDOUBLE MUCAADSIGN AVAGRAHA WITH OVERBARUPWARDS TRENDLEFT CROSSBARVERGREEN TREEDOUBLE HYPHENHIEROGLYPHIC VEN POINT ONEMODIFIER MARKNUMERATOR ONETOP HALF RINGSSAGE WAITINGPLUS OPERATORCHRYSANTHEMUMARRED TRIDENTURNED W BELOW WITH INK PEN OF THE HORNSWITH ASTERISKBY DEFINITIONDOUBLE STROKEVERTICAL FILLCHECKER BOARDMESSENIAN TENLATERAL CLICKUPERIMPOSED XSIGN PAMUDPODFOREMENTIONEDOGOTYPE SIGN VERLAY MIDDLEITING THROUGH WITHOUT SNOWINVERTED TURNDIAERESIZED UEHU FEOH FE F DIRECTIONAL SAMYOK SANNYASMALL LETTERSK WORK SYMBOLUFFLE PRODUCTOTEHEAD BLACKUPONDIUS SIGNINVERTED FORKS KAI APOTHESS KRYZHEM ON VERTICAL BARSWAW-AYIN-RESH WITH TEE TOP BZHI MIG CAN TIMES KASKALGYA GRAM SHADHAM DIGIT ONEISH LIRA SIGNCROSSING MUSHEAVENLY EARTHMINUS SIMILARPAIRED ARROWS VARIANT FORMALL LOST SIGNPREPONDERANCEMINUS WHITE XGTER TSHEG MAFINAL SEMKATHTIRTA TUMETESMINDER RIBBONSAL PLUS TUG2OUT MIDDLE UPH-TYPE SYMBOLGIFT ENVELOPEDOTTED ZLAMA EMPHATIC TONEPPOSING LUGALCROSSING GABAYUUKALEAPINTU CROSSING KA2HAKASSIAN CHECROSSING GAN2OURTH SUBUNITPA NJI PIPAEMOBLIQUE LINE APPED PRESENTRIPLE SVARITACULATED LORRYKAPYEOUNPIEUPMOBILE PHONESMASORA CIRCLEINTEREST SIGNCRIPTION TAKEFIXED-FORM RAHERICAL ANGLENUMERIC SIGN RANKS CASKET DOUBLE CIRCLEFINAL LETTER S UP TOGETHERROTATED BIRGALVE FULL STOPVICE CONTROL ACCOMMODATIONW RING INSIDE OPPOSING KUR DIMINUTION-1TU WAS-SALAAMFICATION CARDARROW OVERLAYSIA-AUSTRALIACRIPTIONAL PARTABLE STEREOZHOU NUMERAL OLVING HEARTSUDDISA SIRRAHNTY FULL STOPIFI ROHINGYA OMAN NUMERAL FT ARROWHEAD AR WITH QUILLSTERTIUS SIGNOON NOTEHEAD NING MOVEMENTLOCATION SIGNSELECTED AREALVEOLAR CLICKSHESH PLUS KI-OFF CALENDARED PAPERCLIPSU WITH STROKECITATION MARKIOT SYLLABLE ARGOSYNTHETONGAW KAREN SHAIVE SLOW SIGNIGHT TWELFTHSIDE LOST SIGNERTION SYMBOLFROWNING FACEGAR FRACTION -OR-PLUS SIGN-PER-EM SPACERN PENTATHLONUPSILON WITH FULL SURROUNDEDIC ANUSVARAL-TYPE SYMBOLILE SEPARATORNG TERMINATOR AND SKI BOOTIMAGE BRACKETYOD YOD PATAHWO-LINE STAFFTED HAND SIGNLOSING SPIRALONAL COMPUTER HEADED ARROWRIZONTAL TAILBALL AND HOOPTROFLEX CLICKEELING PERSONER BOARD FILLRACKETS ABOVE AND YEN SIGNIRCLED INDEX YMBOL TAU RHOLOCK WITH KEYONGRATULATIONVOWEL SIGN PAVE-LINE STAFFONG-LEGGED DERIGHT HARPOONARCHAIC KOPPANINE TWELFTHSSYNDESMOS NEOONG RIGHT LEGILABIAL CLICKBASAN LETTER MELODIC QITSAEVERSED DAMMASILI PNEUMATAARLAUG SYMBOLEUROPE-AFRICAQUARTERS SIGNMAILBOX WITH BOWING DEEPLYED DOUBLE VERTE ORDER MARKANNED LEATHERLEGETOS ICHOSBOTTOM CORNERDVOECHELNAYA USHING UPWARDAMUHU ALAYNAAMALO POVYSHE USICAL LEIMMAAWELLEMET YAZAN RUPEE SIGN-ESASA DOTTEDHREE TWELFTHSBOHAIRIC KHEICIRCLE INSIDEDIC MARK SIGNOPPOSING NAGAWAVY LOW LINEMALL LETTER Z B BAR SYMBOLSTABLE SYMBOLI WITH STROKEUE OF LIBERTYMULTIOCULAR OMEDIUM SQUARERRIAGE RETURNTHIRD SUBUNITLISION SYMBOLIVE POINT ONERPENTRY PLANEWAVY OVERLINEJES SU NGA RO BAT AND BALLNAP PIZZICATOENT ARROW POIRTY-SECOND EMELY HEAVY FOLDED HANDSEMISOFT SIGNFORMING ARTSMIDDLE PIECELER CONSTANTUBSCRIPT TWOPOETRY MARK-FOUNTAIN PENNOTCHED HOOKVICTORY HANDKANA REPEAT FT RERENGGANPORT CONTROLRISTMAS TREESAZ IS ISS ISH ZIDA TENUSUR OVER SURNOTCHED TAIL LINE SYMBOLDE MARK SIGNAR DIAERESISLLE PATTERN MEDIUM SHAFTQUIRREL TAILSMALL TRIPLELL MODIFIER-DASHED ARROWDICTION SIGNETRETES SIGNNERSHIP SIGNLINKING MARKLINGING FIRENJALA GONDI QUARTER SIGNNEPOSTOYANNYNGLE BARLINEARALLELOGRAMRAFFIC LIGHTRIGHT SINGLERAH BEN YOMOMADDA ABOVE MEDARY CAMELENOS CHRONOUM NSHUT NYAMEVERING FACEDENTAL CLICK IN TRIANGLEXIRON KLASMASMILING FACEERPENDICULARIVE TWELFTHS KLYUCHEVAYADIGRAPH YORIRIAGE SYMBOLPROTOS ICHOSCROSSING NUNCROSSING LU2CROSSING KALCROSSING GI4ACUTE ACCENT OVER KISIM5FERENCE MARK OVER MIDDLEUPPER CORNERFLAG ON POSTEAGULL BELOWCRESCENT BARPOUTING FACENORTHERN TSE OVER TWO PIMETA STAVROUSECTION SIGNQUARED ARROWENARIUS SIGNAFU LEERAEWAT MONGKEUAEQLIMBS DIGITSLICKING LIPSRANCHING OUTRING OVERLAY OF ANTIMONYRIAL TRAMWAYFALLING DOTSRION CHRONONDIGRAPH KOTOFEMININE DOT ON PEDESTALING HAND FANKHAMTI TONE-BRATION MODELARGE TRIPLEKHMIMIC KHEIOID NOTEHEADOING TO MEETING OPERATORING HITTING OK HAND SIGNLARGE DOUBLETHREE HEARTSOHAZARD SIGN-DZUD RTAGS MPHASIS MARKMPTY CENTRE HREE FINGERSING ENVELOPES ABOVE SIGNLAM WITH YEHREVERSE MARKKLYUCHEVAYA BLUE DIAMONDBLOWING FACENARROW SHAFTUN WITH RAYSALTERNATING SS-THAN SIGNHIBITED SIGNLAYING CARDS WITH INDEX INTEGRATION BYSMAL WATERWDATA SQUAREBUTTON MOUSEDUG TIMES NIOTTOM HALF OLOWERED FLAGMANNAZ MAN MTHODOX CROSSSHORT RIKRIKUSEATED FACEBSCRIPT ALEFOGOGRAM NYAJRIGHT DOUBLEMONOGRAPH UKBRIDGE ABOVE WITH UPTURNROUNDED ZEROLATALIZATIONN ELEMENT OF-SIMPLIFIED IGATURE SHRIUTH-SLAVEY KSHED BARLINEREN CROSSINGEEPING SMALLYMBOL BINDU AND OPERATORBACK OF HANDBEHIND CLOUDSMALL DOUBLEONISHED FACE-SHAPED SIGNTERNATE AYININ MIDDLE UPYOUTHFULNESS AND TOP ENDLU PLUS ESH2ANG KHANG GYON US SYMBOLILLED CIRCLEVAKRAHASANYAYOD TRIANGLE AND PICTURETEARS OF JOYBAHIRGOMUKHAHYPHEN-MINUSTE SEPARATOROQ NSHUT YUMBLACK CIRCLEUGHT BALLOONDOWN HARPOONTHIC LETTER THETA SYMBOLBINING MARK -MAIL SYMBOLOPPOSING LU2INDEX MIDDLEREFACE COLONMALL SECTIONDOWN NEUTRALOPLE HUGGINGOPENING LEFTAND CRESCENTIDENTICAL TOBETWEEN LIPSMUM TIMES PAUTH ARABIAN UH PLUS GISHDOT OPERATORRCHAIC SAMPI SKEWED LEFTLEFT HARPOONTRAGRAM FOR ROLLING EYESTOP-LIGHTED LUS NOTEHEADCHARACTER-1BCHARACTER-18WIGGLY FENCECHAIR SYMBOLOVER KASKAL GREEN DRAGONGROUND SLIDEVOLTAGE SIGNPHEME JOINERTRIPLE FLAMETRIPLE DANDALEFT-LIGHTEDIRAGANA HOKANDING PERSONKAPPA SYMBOLCK-O-LANTERNRNAM BCAD MAGAW KAREN EUOUCHES THUMBEIGHTH NOTESGBY FOOTBALLNUITY SYMBOLCIRCLES AND AA AS-SALAAMCIRCLED PLUSGEBA KAREN ICIAN LETTER OUR TWELFTHSS SUBPUNCTISHAND FORMAT CALENDAR PAD WITH DAGESHDOUBLE ARROWATNAH HAFUKHULL NOTEHEADALT PAN SIGNOUGHT BUBBLEACE INTEGRALHASIS SYMBOLDOUBLE ARCH LOWER CORNERVER EQUAL TOHEAD-BANDAGEATTOOED HEADNCK CONSTANT CROSSING GUINUSOID SIGNINVERTEBRATECABBAGE-TREECENDING NODEMBELLISHMENTGUARDED AREAYAN NUMERAL UME INTEGRALNATURAL SIGNHAH WITH DALLEADING EYESALLPOINT PEN6 LONG NGGOOWITH SMALL VMING TO MEETHALF BRACKETENG DIGRAPHEDICAL MASKRIGHT GUARDRIGHT HEAVYME LONG CANUISHED FACEZZA WA JALLLOSED ENTRYMACING FACEMED RGYINGSRESPONDS TOLOTI NAGRI SMALL CLOUDE2 TIMES ANLU PLUS IGIEEZING FACELTED FLOWERULO TWO SUMLT OF CLOTHMBLER GLASSRANSMISSIONLUPOVODNAYAUG RTAGS GYRIGHT LIGHTEAVER DENE MBA BAYANNARAISED FLAGLTERNATE AALTERNATE YALOSING MARKSINGLE AND RCHAIC JNYAUBLE TONGUEE WITH VEILUETTE BREADREAKTHROUGHEN STRAIGHTSHEQEL SIGNOPPOSING IMOPPOSING ENTHAM DIGIT MUNCIA SIGNIEN MONSTERTH-THALATHATETRAFONIASMUUSIKATOANONIAN SIGN N THE VERGETENS DIGIT IL FRAGMENTILCROW SIGNILIQUA SIGNL TIMES LALL OF THREADSTEAMY ROOMSTERED SIGNRUNNING MANHREE BALUDATIEE SHEUOQHITE DRAGONHLETIC SHOEHOKHLOM ON LATIN CROSSMONOCULAR OTHREE TIMESHORA DIGIT MOVED BELOWORT BARLINERPOON ABOVEORCE SYMBOLOR OPERATORTHIRDS SIGNI TIMES BADI TIMES NUNLACKLETTER LACK SULFURIBLE-CREE YJOYOUS LAKENUMBER ZERONUMBER SIGNIPLE TONGUENTIMONY OREIRCLED TEXTKAARA POLLUNSE CHEEKS ISIGOTHIC ZTA EQUAL TOSHAAYATHIYASECOND MARKSVASTI SIGNJIHVAMULIYANITIAL IZHEIVERY TRUCKJECT SYMBOLIX TWELFTHSSYURA SASAKNIKOLSBURG NG LEFT LEGSYMBOL VIDJIMULTANEOUSIN EQUAL TOOMAN SIYAQ KTIESELSKABRYVNIA SIGNINDERGARTENSTORIC SITEINDICESIMA OLD NUBIAN SSANGKIYEOKOHINGYA YEHOF MASHFAATOF ENVELOPENBLENDED UKNYIS -KHYILND ODD SIGNND OF PIECENUSVARA ONENUN HAFUKHALETION MARKPUT MORTUUMSPEED TRAINTUNE COOKIEFGHANI SIGNFINAL SIGMALEU SATANGAFIRE ENGINERIPLE PRIMEMFON PIPAEMPOST OFFICESPIRATED FAMICAL HEARTPODCHASHIEMRISING DOTSMIDDLE BENTFOURTH ROOTRITING HANDESH DIGRAPHENTHESIZED EORGIAN NARLON SKEWED EPIDAUREAN RADITIONAL RACHMA SIGNRA SOMPENG ERCENT SIGNRIGHT-HAND RIGHT-LIGHTPHNAEK MUANQUIQUADRATEQUERED FLAGETEI MAYEK SIMILE SIGNEUNJOMNDEUQTY THOUSANDLINE FILLERTWO FINGERSRING LIQUIDHAWH HMONG GSUM -KHYILGUISED FACEROSS ACCENTOUTHERN TSETONAL MARK HAGGAR YAZHLEEP SYMBOLLEAF CLOVERHANG KHUDAMOVERSTRUCK OUNDED FACELD SCRIPT XHEATED FACEHEAVEN MARKLD POLISH OHEELED SHOELCE TSA CANOUBLE DANDAHIGH STROKEOUBLE ACUTETIGHT ACUTETRUNCATED AMIDDLE HOOKPERISPOMENIGAP FILLER-LEFT SYMBOLLEFT SINGLEGAYANUKITTATRIAN CAMELGE AT NIGHTMIDDLE STEMPARAKALESMAGENTLE WINDTRESVETLAYATRESS SIGN GHAIN WITH TRAIGHT WAWROKUTASTI ARONTHISMATAROR-BARRED GRAMMA SIGNGRAVE-ACUTELEFT DOUBLEAILLESS PHIAESHAE NYAMCK SEXTANT--OFF SYMBOLBETA SYMBOL PLUS NUNUZ PLUS MASH2AGAZ DAEG D DECORATIONUTH CORNERSAGONAL SIGNUTING WHALEBELOW RIGHT-MINUS SIGNCOMBINATIONXAGRAM FOR VYKA ABOVE VA V CHELNUCOND SCREENCONTAIN AS DIATONON DI0 FOOTSTOOLBANK SYMBOLDOUBLE AND  WRIST FLEXUSHING HANDACKED COMMABOTTOM MARKACTIVE SIGNACUTE-GRAVECHING CHICKDOUBLE SHADDOUBLE RINGDOUBLE MARKVAMAGOMUKHAWASLA ABOVE-COPPER OREWO TWELFTHS PROPORTIONDONG TSHUGSBLACK ARROWDOLLAR SIGNDOACHASHMEEAESCULAPIUSARM SPIRAL  I ZAPYATOYVISARGA ONEASE TO THE YEORINHIEUH OF FORTUNECURVED BENDXTINGUISHER OF FLOWERSARPEGGIATO DE KIKAKUI ARMS RAISEDZERO THIRDSUPADHMANIYAARAM GONDI DASH SYMBOLDALETH-RESHCROSSING URVARYS ICHOSCREDIT SIGNXESTES SIGNVE OF PEACEAWNING FACECROSSING BUUNIT DIGIT CROSSING ENCROSSING IMZIGZAG LINECROSSING PIWING NEEDLEDESK PERSONUNJO WYNN WCTION MARK CTION MARK- OVER IDIM  OVER BULUGATION SPACEATION POINT3 LONG NGGOXI RADICAL AMUSED FACEATH PRODUCTDENT EMBLEM WITH PLATEWHITE JOKER UPPER HALF WITH JACKSCCUMULATIONDYO CHRONON AND MACRONCELANDIC-YRWINKING EYECAN RGYINGSWITH GARDEN6 LONG NGGEDUATION CAP WITH DASIACARET TILDE TIMES ESH2 WITH CARON WITH COMMA WITH MAPIQCH AND LAMPCE OF PIZZA WITH TRILL WITH TITLO5 LONG MBOOBREVE BELOWUMAN FIGUREBZHI -KHYIL S ZAPYATOY SHOE STILEURRENT SIGN TACK BELOWBUMPY ABOVE WITH FLASHWE PALAUNG OUT INDEX  TIMES SHEVERAGE BOXHAAPRAANA CURLED WAWION BOTTLEASTERISCUSTAMAN SIGNASPIRATIONCURLY HAIR1 LONG MBE1 PLASTICSTIMES SIGNING-SHIFT OLING FACEC WITH DOTGUA PI MAOTOP CORNEROLON EQUALINHERENT AOUR FIFTHS WITH BASEUR YIG MGOCROSS MARKPPOPOTAMUSBA SATANGACROPHONIC HERMOMETERATRICHISMAATTY WITH OUTHERN TAOUTER JOINVEL SLIDER OVER KAD5FFICULTIESROEZENIAN FINAL HETHPRALINEAR INITIAL RAAUTOMOBILEDA SATANGAUP NEUTRALUP OR DOWNEUTRAL YERTWO THIRDSTWO SHORTSSYLLABLE MAR ECLIPSEHAN DIGIT DA PLUS HAOANDAKHIATIXTHS DISHEVERSED PED WITH DOTT AND BOLTZH DIGRAPHNTITY MARKNTO SHRINEKAI SYMBOLKA SATANGAK2 PLUS BUNUMBER TENTYPE COLON2 LONG MBOHAMZA MARKJONG TILE ISMUTH ORERING THUMBITH DIGIT IT MBAAKETF SHE-GOATYEH BARREE OF DHARMAHEAVY BEATFAHRENHEITOF HYGIEIACY MESSAGERING ABOVED KEYBOARDCAPITAL ETTAIL GLASSTING HEARTURIPIGMENTTWENTIETHSCIRCLED CAGBAKURUNENICAL TAPERCISIVENESS WITH PLUS WITH RAINPEDAL MARK-LUE KARANTRETCHED C POVODNAYAI ARCHAION SCHROEDERBLACK FLAGGAS BZUNG OPEN SHELF WITH LOW IED SHRIMPGANDA MARK PLUS SHU2IDEOGRAPH IDDLE MARK WITH PAGETHAPASCAN GOLUBCHIK ICK FIGURETHDAY CAKEHREE ABOVE WITH TAILGHT LIFTERHOOK ABOVEBOLD SHAFTBSTRUCTIONROUNDED ERORTHERN TAOSSED SHEI WITH TICKBROKEN BAROSTAL MARKHOTIC HOOKUSEL HORSEGGRAVATIONOTING STARTRESS AND GGING FACEURVED OMETTHMIKON N ZAR AMULET WITH RINGTREFACTIONRKING FACEOROME SIGNHUNGARIAN BLUE HEART RESUPINUS RGYA GRAMGREE SLASHFORMATTING WITH BELTCHAD RTAGSUPPER HOOKCH BALLOONILE FOLDEROUND OMEGAROAD OMEGACOMPONENT-COMPONENT TEMPLATIONIKRON ISONZEIRO SIGNINDU BELOWAYER BEADSYMBOL AIVAINDEX BENTOMMA BELOWPOUND SIGNGIMEL-HETHON MEDIAL FOR RECORDRUPEE MARKPOLICE CARPASSIMBANG-SHAPED HAUR CORNERSPLUS ERIN2TRIPLE DOTTESE CROSSRSI SYMBOL WITH EGGSPLUS BELOWG MUNDARI UTH OR SPYIGATURE OECHECK MARKIGATING RAOP NKAARAEGAGE CLAIMRUDIMENTA FRONT WALLTERNATIVE FTOGGOS OUCOLATE BAROON LILITHOON SELENAUR HUNDREDBELOW LEFTPLUS NAGA AB2 TIMES ENS SYMBOLABATA TREELEFT HEAVYLTIC CROSSXED BICEPSLEFT GUARDUBLE DASH SHMIRI YEHENTHUSIASM5 PLASTICSRESH BELOWEDESTRIANSLEFT SERIFACE FILLERDIATONIKI LOWER HOOKLEFT-HAND LPAPRAANA ENETRATIONMOTORCYCLEALEF LAMEDALEF WITH EEKING EYEALENT SIGNLEFT LIGHTLTERNATE URAGGISMATASSANGARAEAED FINGERSED FIGURE-MONOGRAM BRIGHT SIGNMONOFONIASA PLUS KURNGUAGE TAGA PLUS IGISSANGPIEUP AND KNIFEUNKIA SIGNMADDA MARKSELINE ESHWITH STRAWWITH SPOONM STALLION3 PLASTICSNGLICANA WLE-DELAYEDALLY MARK  AND MOUSEA TANG LAILE LETTER MONTH SIGNMONOSPACE SS OF MILKWITH WINGSEONGCHIEUMN NGGEUAETRED DRAGONLINDRICITYLOGICAL ORLIMITATION4 PLASTICSLIGHT BULBELT BUCKLELIGHT BEATNDA PA NJILHAG RTAGSNAKE BELOWRECIPITATESMILO SIGNLLOW HEARTEIGHTIETHSAEDA-PILLASPACE MARKSHARP SIGNNANGMONTHOEICH STARKNASPIRATEDRDHACANDRALEK ATTAK SGOR RTAGS DRAWINGS SMALL TAH LENDED YUSDIGIT ZERORIGHT HOOKAKKHANGYAONDU TEMPLERCHAIC KHAWO SHORTS LGIZ EOLHXLONG FINALAILED BIRDDIRGA MUREW OR MODELLONG OVER LET SYMBOLLONG TSHEGADDA WITH DOUBLE BARADAK BINDIY AND RICEQUISH QUADRHO SYMBOLSTRAL SIGNU2 PLUS BAUMAN EARTHSE-CREE SKKRYZHEVAYAEARLY FORMEARTH MARKANGKHANKHUDED PERSONUAM TSHOOJRGE SQUAREMILLE SIGNSIXTEENTHSRGE CIRCLEANDHI MARK KABA TENU2 PLUS ASHETTA-PILLAMEEM ABOVEVIE CAMERAMEL SYMBOLU CIN HAU E PLUS SUMWING HEART2 PLASTICSSTRUCTION SBUB -CHALSCAN LINE-STROM SIGNME PLUS ENEQUIHOPPERUM ROTUNDAKINDI MVOP LATE FORMNOTE WITH ANGULAR TO7 PLASTICSUP HARPOONEBENSTIMMEWHOLE NOTE AND ARROWLACK JOKERUARDEDNESSMINO TILE VIOUS PAGEST-FEEDINGST PALETTEREVERSED ISIDEWAYS IWHITE HAIR AND BREVEWHITE FLAGMALL ALEPHLANE MERGEDUOUS TREEXHEEJ CEEV6 PLASTICSLA USED AS AND ACUTEZU OVER ZUR2 PLUS SUMHANCHOLLROTATION-CAPITAL QADMA GDANHWAZ EH EHINOCEROSMETOBELUSCAPITAL ISMALL YUSMBROIDERYCAPITAL DLOND HAIRURNED GANURUZ UR UWASH TAILHARACTERSHARD SIGNMAEMGBIEEOUTH WINDOUT MOUTHBING CANE-KHYUD PAWING STARIALECT-P MUKPHRENGBITE LIPSHIMA SIMAIA SYMBOLBKHASIAN I PLUS LI TIMES UDMRACHNAYAOW KAVYKAM HE-GOAT5 CYPERUS TIMES HAMALL RINGBOTH BENTOURA SIGNHI SYMBOL TROMIKONOVER GAN2HOT SASAKSIVE FACEACE NOTE OTAL SIGNLOWER DOT5 LONG JOTIMES PAPABOVE TO BRUL SHADTIMES NA2HEADSCARFURNED AYBLVIN SIGNURLY LOOPRPORATIONCANG TE-U-AMMONIACA PLUS NAORT-TWIG-ORTH WINDZ DIGRAPHLONG TIP ADEG ADEGBO BAIMAIWITH FACE5 BATHTUBBO GYFU GOVER MUSHHREE FOR HOOK MARKHIYYAALAACARTRIDGEMARK SHADMARK CIM STAL BALLTANDSTILLVISARGAYATAKHALLUSLACKFOOT OF STIMMEIRST MARKNING SIGNAS MEMBERVINE LEAFISEN-ISENTABE SIGNL ME HANDYEH WITH ANEROSIS ODIASTOLESTEBASKETKYO TOWEROKED HEADVOETOCHIESEMICOLONNIGGAHITANIGHT OF VOCALIC RINNYIIYHESSANGSIOSVELOPMENTNIHSHVASAOKOUFISMAOKED TAILNO TELEIAATTACHED LARGEMENTVER LUGALXHAUSTIONS DIGRAPHATHAMASATLAN SIGN VERLONG AANTHAKHATKING BOOTVEUAENGAMVIGINTILE2 GARMENTJERUSALEMNVERTED RANSKRIT SANTAYALANNSERT AT NUSVARAYAKEMPHRENGAOS ICHOSK GESTUREVICE MARKNTERPRISENTESSENCEKA- SHOG NTRACTIONKAMEYTSA YEH ABOVEOCCLUSIONANG CITI ANGGEUAETKU RU KHA247 DIPTET ON BONEITRA SIGNT OF MEATY BLOSSOMKSTREPTON1 CHARIOTARM CLOCKARISTERA YEAR SIGNIVE-PULL-IVINATIONY-FOURTH ARCHAIC MY-FOURTHSSTRELNAYANDAILING WRINKLES IGH HAMZA-STACCATORTER MARKIGHTH ASHAINTBRUSHAISED DOTBEER MUGSWRY SMILEUTRA MARKSHAB CEEBRTS MEDALUURDHAJA SPIRITUS UVUZHAKKUIGN NUKTAIGN SAFHAIGN TOMPIOO DENNENAJANYALANBASE UNITIDEOGRAM NA KHONNALLABLE OM-LOW TONEICE CREAMLLABLE B0SOF PASUQ-MID TONELIVERANCELITTLE UPLISSANDO BICYCLISTBIAL SIGNXCITEMENTWORDSPACEIDEWAYS UAF PERSONAFFE FACELINE FACEYRANISMA LIGHTNINGNCLOSING OP HALF ONGER SHIPRWARI DDAALI GALI SEPTEMBERING CARD NGER ROOTING DOLLSING GLOVENG SANDAL3 PLUS ANOM SYMBOLING LANESING STONEAVE ARROWALPAPRANAINISHMENTNGUN SIGNONGSEONG ILE TILDETEH ABOVEAL RUNOUTILIPPINE ONG GRAVENFORZANDORUM CLEF-VRAKHIYA ONE THIRDONE MARK-TED PLANTALAYALAM LEFT TACK0 LONG LEVANAGARI LEFT RINGIN SQUAREON TEUAEQON GROUNDINAL NOTEINARBORASB DIGRAPHTRESVETLO APODEXIA RA OR RITREDECILEEEN WITH CHOSEONG  AND TAIL OF PAPERTUTEYASATDRAM SIGN RICKSHAWPROJECTORTUKWENTISCUBE ROOTDOWN SIGNZIR SASAKDOWN STEPCULTATIONENTRY SAWUNGLASSESUNGSEONG FEH WITH ULL BLANKED DIGIT D SALTIREUMED HEADRNEY PARAZAL SASAK AND CURLRO WIDTH CHAVIYANIDEPARTUREDUS RTAGS OF BLOOD FROM BARTRAIGHT UPENTASEMEZERO SIGNPENT SIGN GARSHUNIGITTARIUSED PLANETRCHAIC RAEMBEDDINGCRESCENDO PLUS GALFLAT SIGNCOIN SIGNEIGHT OF  PLUS GUDG IN HOLE PLUS KU3CLOSED PLUPPER DOTPPOINTED CORN FACEFOUR BENTELEGRAPH CONJOINERREAK HERE PLUS LALRDEL DKARCOMPLETEDELLOWSHIPUBSTITUTEPOSITIONSTTED STEMFROM WALLDOWN HAND PLUS TURFINAL NUNFINAL NGAREFORMED FINAL MEMUPTSTIMMEEFORMED TEFAIDRIN  PLUS ZA7 OVER BALZENE RINGPIDERY HAPLE HEART DIVIDERSRCHAIC IIUE MAEMBAPPOSITIONFISH TAILRED JOKERFACING UP OVER LUMREDNE ON  PLUS SAGEMPTY SET AND BELTZAKRYTAYAE AT LEFTETER SIGNRFUL FACE STREAMERDAD WITH DENT AND URAMAZDAAEAVY DOWNTO CORNERHAIKSUKI  SPARKLERQUADCOLONTONE MAI ERTY LINERIED FACEES AKURU EURO SIGNQUEEN OF ER BUBBLEP ELAMITEESAME DOTP DIGRAPHR PLUS RAERCIAL ATPANYANGGAETTI BALLROJECTIONETRASIMOUEBIT SIGNCHANICAL PAA-PILLAGRIK SIGNHALF SIGNQUSHSHAYAUR-DE-LISHALF NOTEHALSHELETGREATER YPADE SUITL-LAKUNATTO MARKEN NTEUM OTTAVA ING ROD XCELLENTAVY BANDDANTAJA OM NTEUMVE SASAKETA SIGN1 BARLEYING BELL OVER KGANE TREEKATAKANAKASRATANLESSER YAIYANNOIYIDDISH PRECEDESNEIFORM LESS SHANO SLASHOLLOWINGDIM GUNUSUCCEEDSUNG DASHNO THUMBDAMMATANFINAL THL POLISHETRASEMEFILE BOXNED FOODNAVIYANINCE SIGNFOR STOPBACKWARDUNDERDOTINAGARI WRINKLEDNOTE PAD LANTANGESH LOOP CURRENTCOUNCIL RDEL NAGSE WEDGEIMANSIS FLOURISHDDY BEARELEPHANTONE FOR COUNTERS OVER MULF RING AY-NIGHTOMANIAN ANS SIGNNRES TOSVERGENCEING BOWLWRITING ET SHOESSPERSIONW PRINTS OVER ZIY POPPEROMMA BARAZHAAKKUEST WINDQUINTILE KEMBANGDIT CARDLFWIDTH TTENTIONNOVEMBERSCRIPT GUNDERTIEY BEETLEUAREG YAOCK SALTEOUT BOXEVEN OF ER TRUTHUBJOINER NUTILLUYAMAKKANOCALIC M HANDLESSENTAGONPUSHPIKALEANING ARTYRIA ALLIANCESWIMMINGARSI YEHODESTONETAALUJA ERAL URNSQUEEZEDITA MFONARRIVINGOCUS OF UP TRUCKVESSEL BYBEYFILIJAVIYANIARCASITEUATRILLOEVERANCENINE OF NI ABOVEAR TSHESD BUBBLET NGGEETD CROSS QAIRTHRAARKLEAN LATION XOBOOFILIEXCHANGEAMS HORNSALT OF RILLIONSASTERN WTAR EYESEREVODKARASMIAN AST WINDEUFEUAET1 HELMETCURLICUEERDIGRISFEBRUARYOHM SIGNLA LENGARAUGHTS SANYAKA 3 ARMOURSUPERSETJUNCTIONDIFONIASATH MARKJACK OF PROSTAYAATEBOARDATE MARKATAKANA APITAL FPUN IYEK FACING PUB DAWBCURSIVE YENISEI TAI LUE RAMMA GGVOMITING ON LEFTVOLUTION OF YARNIS FORM IS WHEELIS-PILLAYESIEUNGNITIAL ZTURNED MENICIAN NG RTAGSKAIYARAAANC SIGNYER YAGHIRD MARKS OCHKOM ANTENNAMARRATANABAAFILILTRY LEGBLINEAR  RASWADITHOSCOPEBLED CAROVER BU PAKPAK EBLE SIGNABOAFILIPAIRTHRAHREE OF WO ABOVESMA SIGNCHINESE ROSHTHI CEILING  YUQ NAEBOL SIGNPALOCHKALUB SUITSHOE JOTTRI DISHOREHEAD THIOPIC LOW STOPHAGALL HLOW DOUBCANDICUSYRILLIC BINOVILEWBOY HATORM FEEDCAL DISCZWARAKAYLOZHITIERIYOOSAN-CREE TH-EM DASHOVER GA2BOT FACEGENITIVEUKEUTNDAOVER GI4I SHAKTISHKIR KATO-LEFT TICK IN BUNDANCECER BALLMON TIMEED BRICK TTUDDAG SCOTS S SATCHELDVANTAGEOTIFIED RESVETLYC SIYAQ DS-CREE  SLIDINGMIONIAN GREAT SAZAKRYTOEECH YIWNMALL AXECHATTAWAPAVIYANIMMATION EBEEFILIDUSHENNAGORAZDO HESPIAN MANDARINMANGALAMWN HEARTOT MBUAESHORT ERM ALLAAHCABLEWAYSIX DOTSA SIGN ATOWARDS 56 TURO2HOP BELLDVISVARAGLASNAYAULLS LEGROSSED OPENTAGONBRA FACEBOX TRAYME WITH HARMONICOVERRIDEHARBAHAYZWJ THAJAEN NYAMN-JOINERSNA LDANWON SIGNSIGN LAECOMBINEDDOCUMENT CEDILLATIRRUP RLOCATIVEWASH KAFCLIMBINGRED HAIRTRICOLONIGMOID SME BADGEBER POLECLOSED TV OVER MYPORROONBATBEIT FRAKTUR MEM-QOPHHAN-AKATTISMOS E-X BELOW TALENTSHALF GURE OF POO0 BRONZEEK ONKARNAMENNY 8 KANAKO PLUS DU PLUS DIOO TYPE NA METEKFRICAN D-KHIEUKHREATNESSUDAWADI TER FACELKULIZMYSOFTNESSCASSETTECK CHARTMY HOUSE AT DUSKGBASINNARSE DUNGLONG S TGARITIC BIEE FONOVER TIRLORRAINEOVER SAGOVER SHEICHAEAN BILLIONSEGORIAN  PLUS RUACKSPACE POLNAYALONG BAR-PHIEUPHSIFISTONREE MARKBEVERAGEMINGKALKOMBUVAKPAK WAMBOL B0ER THANLAMITE EAD ORETIVATE Y HEART9 CLOTHMEETORUEAVY YAKOQNDONECEMBERL SEGNODEAVOURMINIMA RDO RJE2 WOMANKYLISMAANGLED SIGN UDAN MARKKORONISERNIN AE DRINK7 NGGUAANGKUOQLAGIOS SEGMENTMARCATO3 EIGHT ISLANDXOPHONENJAEMLI9 NGGAAUM IYEKRA REPAAND END26 EYYYMERICAS KEFULASTERINGWIFRUITANDERERKUTAARU3 AREPALAK-050ST TUBEE GLASSMANCHU WIGNYANR2 GUNUMASSAGEY GREEN7 NGUANDYNAMICSEXTILEAD NECKLEUT KA BUTTONZQAPHA WO WAENLEYBALLWAZ EOHWO FOR SHIFT TWO MARKACTER TAELAENGSPRINGSLEK TOONESTED EN LEAFRAYANNALENGTH-NEQUDAAVYSOKO SOLDIERREATHY RD FACESHAKINGLIGHT XWORSHIPNAYANNARD DISK CHIKI UBUFILIAETMEUNNANCIALEL PUMPDISIMOUDIPLOUNLF FACELLYFISHEIGHT KDOFONONAHAPAKHSOV ROGLJUDIJE CER-WAED RICELAYANNAAM ALEFRESILLOALTILLOLYGISMASHORT ARAKHANGDRIL BUVOICINGLE LEAFSIDDHAMA -PHRUNIKAHITLASHES 6 NGGOOMAI SATA NAME 3 OMEGA3 MONTHDU NJAAMAAYYAA3 WHEELNG MASKUKKAKHARANGKEPENSHUETRARIETYDIARGONMUNGKAHSERPINAALLOT XDHALATHMRACHNYREREKAN3 SPICE5 NGGEEUN MEUT APLOUN3 SWORDWDRIVERALESMA GOLIAN VANESE BAIRKANVAPOURSYNAMIC POMOFO TORNADO PLOPHUHIUCHUS0 SPEARPECTIVECRACKERFLUENCEPAYEROKON FACEPAYANNA0 WHEATPOVODNYRIPPLE VAV YODOMERANGVAYANNA-WELSH IL DRUMONGONANBARREKHONG UEXCONTACTTSECHKAILLEANNCOPTIC RMUKHI PEGERMAFORKINGBUFFALOBAMBOOSIMILAR BULANCEFINAGH TIKRAMAAUNTLETOLAPUK OKRYTIEAULDRONTASHEELVEMENT-AU MARK SHAKERINNABARATH OF ATAEAN  WAAJIB OPEN-OASUTORUTTHACANVE DOT TCHFORKAY SIGNTAYANNAYMAIC LGRADUALAXIMATARY FACECHEINAPTTILIK PPROACHFINAL Y1 ARROWIBIFILITHIEUTHORCULUSIANGQI THESEOSBORZAYA-KIYEOKIC WAND-MACRONCHIEUCHGAYANNAICOPTERTRAINERBOURINGBIG YUSICYCLESCK LIMEHYAAUSHUSSYERUGHEUGHEORTIETH RAMBATPERVISEBOARDERTHKUQI ORKHON -CREE RI NTEUMGENERALI RTAGSRRECTUSBLACHKOPHUTHAOOREVMA RTHIAN CLOTHESGLAGOLI-SHIFT-COASTERTROLLEYPENGKALCOMING TRYASKAUYGHUR -THIRTYONTIEEN-TIKEUTIKHAHITUT TIME-MU-MO-OT NGOMCHEVRONTHALIYACLEAVEROT REPH WOLOSOPRENKHAIFIED EBREVIS BERRIESPLOYAN BERGINEOP MARKRISIMOUCLOSE E MUQDAMJIBWAY HEADINGCAYANNAVEW NOWSANGAN  MUOMAEHAYANNAUP MARK MENDUTP PIEETSANDHI CAP TENEULEUNGNUMBERSTYSCAPEQUARIUSJARATI T ASHESHAARKAAUP TACKYAYANNAUP STEPROGRESSSYNAGMADA FACEJAIN OMJAYANNAURATIONJECTIVESAMPHAOUP SIGNCANDRA JERAN JROKEN LQUEEZE DANESE KEUAERIURGLASSKHA YATSCOOTERESTIVAL TEDUNGOX BACKDANCINGURFACE OWILO SDAYANNAKKURUNIYA LAMPVILIK BVILLAINANGLONGANGOLATUP HAND LONSUMSUKUUDO MAELEE2 OLIVEAPEZIUM STRIDEHALANTAYAH LI YANMAR ETNAHTAKARO BANTAINS HANGUL OW ALEFSAYANNAKAYANNAOX LINECABINETISIBLE CELSIUSPURPLE PUSHPINTA MARKOVER ANS-SAJDAITALIC OCTOBEROCTAGONFATIGUEASH FROOGDIAN TAISYOUPANESE HEXAGONF SASAKOFFICEROF SOAPFAYANNAASHTRA OUT HUBPANSIOSAS SIGNYELLOW IVE OF ITON RATALL AASA VAH ARRED BD MADDAD MOUTHPALLAWAPSTICKSARDNESSOUR OF OVER DU OCLOCKARRED OHI SIGNPTHAHA  SLOWLYF DAVID5 WOOLMPLINGROCKETOSETTE6 TREEYSTICKOW TIE8 HOOUPECIALPBOARDPENCIL6 NGGERICORN7 MBEEPEAKS OTTED-7 MBUU6 HUAN SPLIT7 NDOO6 GUEI7 NGONPEPPERSICKLE AGUNG7 GUANWN BOXPALUTAWN BOW7 KAPO TIKHYPWATCHS SHOENGGONGS TENT1 WINERAKLITODHADH3 NGGAOCIETYOCENCE MURDAQAMATSQETANAOBELOSSAADIY1 GOLDNEUME  EPOCHOITIC  EQUID1 HORNRIISAP1 NDEEOGONEKOFOUNDNGBAT PUFFEDNTIIMUSAUCERNTEVMANSUZ ANOKHUKNSANAQ KAPALNOZHEKNOWMANNOR BUZHITSA LELET3 GBEEXIMIZEXO NEONIRUGU3 HEEIRACINGRAAKANYAKASHNISTER2 KPOO MELIKNIZKO 2 MBOO2 NGGUNKNOWNNTOGENOPEN PPIRIT WO OF YRENE OPITSARSENICN DASH-IEUNGOPEN D-PIEUPRSHANAN YANGRSIAN N-NISFOOPED RKAANU QATAN5 MERISHMAAMRENGTHRISEMEREMEDY-HIDET-HIEUHPICKET00-1024 MUANWRENCHON KEY4 KPEE DIPLINDA TA4 DEERNCH FR4 DARTYIN-DORBITSAX FACE1 GBOORAVEL-4 NYINOOMUUT CARETNACLESSHAYIMONOCLEWORKERYOMBO 0 NGGI0 NGGO4 NJOOPOKOJIPOMMEE4 NGEN0 NYON0 NYUNAPYRUSSWORDSGBASAQCKNESSGEADALGEDOLAARADDOSYNAFIARBUTAGGLINGKAYAH CODILESUCKEDCLOSETIYANNATRIKE APISMASURANGSURED APLI MGANGIAITABLEISSIMOISSHARISSANTARSEOSCHESS GLAZ HCHEMA TAIKHUIRINGUGNANT CHURCHIXTY PSYOUWAGHAMALIX OF TRAPLIVERTKAGHETTIGHEUAECHO CHCHIRETT NJAQITULUMITHER LAMADHLASTONFAMILYFATHA LAMEDHCUPPEDTUXEDOSSLESSTURBANCUMBERFF OF VIRIAMANCHORLAFRONEVENTHEXHALEEXISTSSTANCEEYANNAUPNAYAF CLEFLD MAPF MAREKNIFE KLITONANIMALSTROFOKILLERVILIANKEYCAPFORMEEFORTISKE PHOANUARYANGKATSTANCYKY WAYKUSHU2KTIKO STLERSKRISISSTOLI CREASECRAYONBETAN BGBIEETIMATEIDE ESHEUAEPHIBIT THAKKUC CLEFIB YAMIASMA BEFILICALATETERON IGGLESTEUWENHEISEIURNAMAIEVAN HERMESHO HOIHUMBS BLINK HIVETEBOFILIHUR PAHORT IBOWTIEBISCUSBISHOPHIMAHUTIKENOI MAIMI HOOKHINGE BURGERAUTUMNCEVITUTAU ROINHALETAUROSINSHIPGS-PA INGAATGURAMUTAMINGASHGABCHEIKHGO NGUGOBLINASSINGGORGONTOPBARTARGETGRASP ATTERYATTIC CHAMKOCHADINHAMILOILLAGETIRYAKILBOATCARIK HAMEDHHASHKAUZEIROUYANNAHE MGOUUMISHINDHI TE TSEINCUNXINAGMATE USEIN YEHBAFILICATAWACASTLEHALF HBANWA HAM AIENTIMAACINTHENIKI WBERRYDICINEAASHAEEN GHEUNGAAMWEORTHEMPUS EMASTIA-KARAUBLE XM BOARM BULLAGOGUEUAEQTUUP BOWDE DOGLIGIONLIGON SOUNAPAFFIX ERMATAUANGXIELLITELISHA AESURALITIKIDERMA LLIPOPAEMMAEEPACT DGEHOGLONG EEENTH-9 NJEE9 MUENED ICEED CAPDUCEUSME DIEWINDOWDVANCEMECHIK8 NYEN8 NYANEAHMUK8 MBEEE WAVESKAPI MADDAHMADR MUCIBLEUDARKAA HAAMEIGHTYSIXTHSDIESISDOKMAIMALGAMMALL FUGGAGEMANYA SPLIT U MBITSPADESLEVEL-ET KUTAKEUAEAJANI AK-668AILUREEUREUTEUNYAMAKABATEUAENASPITALSPATHIEU MBUESTAN AGRANTDAGGERZSEKAEIDON TELU CAPOEGL HDOTS-EGALIEGIONTINNEHAYINCANUSHATHIURINEFAAFUHASE-TUUMUFAIHUTIPPIHANNAEUAEM COATPSILIEKEETPAATOCCEPTCCOLIHADDATON AHAALUCECAKCECEKROGOMRDIONUBUTSGVANGTKAANHALQA TABSPTUNERONOSFEARNHALA TMAAUEISMACAUDACAUSEUDAATHAINU CHWVRIEENRILLAHISTIDWICHHIRIQTIGMAHIUTHRIEULEURAEEBALLOUNCEHIMELOTHAL MOODZYGOSBREW BSTERE GEEOTERI ALLOHOLARHOLAM AMPSEAGLERICEMDAIC RELAAUMMERF COWREPHAF EWEUKARARELA CAKESREIWACAKRAF SOWEESHIUGUSTREGIAURITYURTLEQAAFUEYBUSDSMANCALYAEYYALHI ROTILESCAANGHETHECKAGEET TUFLAGSPITERDEPTHGAZE-DENCEUNOO RACHYCKTIEGAMANPPAGEGAMALGALGA ICONGESH2TTOCK FUJIUNITYCHULA GORACHUTEDELTACIEUCRAIDA HAA PI RORITSIGEAN UBITODESTYTSERER-RUB KAWIDATUSTSEEBPOLI FLUTEFORCEU U UPONSEDBOATQUIRYESHE3 LACAESO E ILUTPLHAUCLIFFTRIOLGADOLCLONEZIDI FLICTEOPLEERINECLUBSERKHAPLUTAPLUTOPMUNKTSADIFSAAQPCHA EMLJAPASEQPATAKGORGIUNGBAPEAN UQUETTORSOGOGI TUEUMCTRICDLINGUBURUGULUSDKAR CEREK DEKARCHIDEMAKEZHAINCHADACUBEDEMBICCHESTZILDEENENGPEPETENJETCHIMEGHULUCROWNCHOOICHOOLGHNUTTTORUENUTOEO-EUPEN-PENANOEVAL  SARIPEITHRATERTOYORCHERYRASHATRACKENDEPTRAIFALLEY3 RA3NGENTALGARLEASE3 VEE3 WEI3-VASAMEKHLATIKNIEUN3 NDIVRIDOSENTONGUE LAYARALPHAALOG NGMANALLI AGMA 4 LEE4 LOO4 MBO4 MONNCORA4 NDO4 KPUWAQFANASHI4 TOO4 VOOSHANGSPINE32 JELENISVZMETNENOENEMKAWUAETNEGARWU3184 ABBWAAVU4 GBI2 PTEVIET NSYONKBALLNSUAEKERETNSIEEKESH22 POOKHAPHANNON2 SEEKNOBSNTXIV2 MBUK-0202 NJANUENG2 NJUKO LASUKUNNTHA KARORSAUILLAGUSLABORSEGOL3 BOO3 FOONNAN 3 HIN3 HONNINTHXING LAMDAVITAESTORMSTNUTSOLVEANGELKURONXYOOJKUSMAKWAENXW XWXTRA-L NETL-JUZ7 FUAMINDU9 WVE6 WEE9 WVA9 PU26-VASMALONWIANG9 NUNMIEUM7 GBE7 HUN7 JEEMAQAF9 NON7 MIN6 KOOMAI KMAIZESHTINMMOTHSICLE9 NDEMISRA6 RA26 SIA6 SOO9-VASMINGO9 YEE6 TA28 NWAWISAD8 RO28 FEEWINDUMEPET8 GBUMENOEMETEG8 NANSILA3MELON8 MANMEIZIWINJA8 KPOMEEMU8 KPE9 DEE7 NEN9 NDA9 MUN7 NIN9 MEN7 TWE9 KUAWIDE MADYA7-VASMI RO8-VASMETRYLOUREADULTLOMKAWATTOLOBE ACHKA5 KEEMUOY NABLA4 WOOSHAR2SHARA4 WUISHARUNADA 4-VASAEREENA POAEMAELOAN A UNAMPIREWFISHMPAREA YUE5-VASLWAY M RAMWLINESKATEMAAEHMAALA6 GBAMACUSAAMAEWBOAT5 MBI5 NDUMUHORMUCH 2-VASSHOOKMSHAEMROCKLURALAADHUAWAY IAUDAOMBIERRITOIARDS0-VASRYASOAVROSBISAHVATOROMMAEOQPENRUSH ICHONINTHUI KOIIPINGIPEHAATAF OJKI ATIYAI-RESBAARUOKARAOKEE THING1 FAN1 DWEINNA AUTHSOLD XYIZET0 DOOUTEUXVAAVU0 BEEBASA RULAIIKURUBASSATENSE-RINGIKARABENDEUTIESRUHUAIHVUSRUDAA-SIOSBEITHOPLETBACUS0 OILBALAGIMMERICRONIMMA 0 MANIMGBABHETHSUTUH0 JOO0 HEE0 HANBHADH0 GEEILVER0 GBORUMP-0 DWOILLU TEGEHOCADO2 HENORUTOARERU2 HOOYECEKJERVIOBYLAOSTERITUALHOUR HOTELITHI YSTERO KAIJANG SALADO BOXO PLAO RUASAKTAO ANGHROOMYURIISAKINNZEUMYAMOKBOOTSROWN BORZYAR AESADHEJUEUI2 KPIASAR HUMP -BEAMSURYAHUTA ASEIAJUDUL1 PEE1-VAS2 MBA2 MBEBLAKOIRACYASPER-ALAFISTLE1 YOO2 KPA1 WVIJUDGE1 TEEYENAPAPPLE1 TWOTFONZZY ULU UTTYSIKIROUTSLURRT TRSO-UHURRROIYWAAUMEAUNAHUGU URUSRPSESINKRIFYSHTAUSA UTANUTAESHYAYUKUZIZ2YUDHUNAVTURUVIYOSELFTUKISEEVZELOSEENVEDEROARVOS XEIAZETAROA YEUXTWAAXEYNVEUXVESTZATAVEUMSUABVIDAVEYZSA-IVUEQZAYNYAWNWAW ROOKSOKAZIETRUNGWDERRUISRUKUWAAKWAHAWAETTAXIRUTUTZELSEYEWULUUON SONGRUSIHEYSHEENHEEPHEROHERUHEYNHEYT2 VIHHWAHID HIINHILD2 YAHAVEHAYN2 NOHUB2HUEN2 QOHWAA2 PEHSHU2 L22 KAIANOIARA2 BU2 SOHMI 2 ROHOKEHOM HOSTHSDA3 MEFIRIFITAFFIN3 LE3 L33 KU3 MUEURI3 YU3 TAEZZO3 RI3 PA3 JOFAIBFAST3 MIFEEMFETHFEUQGORTGIDAGIEAGIR2GOALGIBAGROMGRU 3 A3FWAA3 JE3 EEGAMEGAMLGEDEGGWSGHOMGHWAKMA 1 INKOBAKOETKOKEKOKOKPEN1 HAKWAA1 GA1 DU1 DO1 DALAANKALIKAPHKCET1 KU1 KIKICKKINILFERLFIELIFULIUMLIWN028BLOLLKAKOILETILUYINORINY IPODIFATIGERIQAAIITOJOT 1 YIJEONJIIM1 VU1 SU1 SI1 SA1 RA1 QI1 POKAAFKAD31358ISI ARA3ARGIARUM7 BE7 EIAPAQAPON7 DD7 DA6 JO6 L6BAGSBALD6 LABASH6 JEBAYI6 HIBBIT6 HEATIMATYAAN X6 WU6 SE6 RU6 QA6 PO6 NAAAMU8 FO8 EN8 GU8 DU8 BO9 TU9 PA9 PI9 JA9 SE9 SI9 SO9 TA9 TOAFEL8 WE8 SU8 QEA IE8 PI8 KOA-HA8 JIALDAALTA7 JA7 VOAHAD7 ZA7 TI7 RE7 LU7 KI5 BB5 AU5 A2DZHAEAAEEEEEEENG4 ZE5 GI5 FEDGER5 FADIM2EESU5 DE4 DOEHEH4 WIEETA4 WA4 TU4 TE4 NEDEAD4 L44 KEEIPTEIRTEIWS4 FIEKAACASEBUOYBUNGCAYN5 WE5 WA5 VECHAU5 VACHEHBETH6 FUBERD6 DIBOOKBORE5 OOCWAA5 NU5 MO5 LIDAGSDAIR5 JUDDAKDDHI5 INCORE5 TOCOONHUVA5 TECRETMUINMWAA0 HOMVAT PODPLUGPLUMOPUSPOLOMUAS0 BINUUNNAG PHABNWAANAAUPHINORIIORAXOONUQASRMMU2QEF ODLEQHAU WEBMLYAQOPAO-YOOPOD0 JUMPET0 KOPRILNUNGOOTHOBATOBRO OHMNSHENHAYNGA2NSUBNNNA-ONEOXIANEO NJAMNOWCNPEANRUA-RAY-UM NCERNTOCPEEPNANANAM2PEUXOUBTPARDPAWNNTAANDAPPEEIOJOD0 NIREIARAFELUMNOJI MARULUISMARY0 PUMESOLOVO R SOFUMMFAARGU20 WI0 SAMIIMMIIN0 RA0 ZO C D0 YECIG5 UUEZ4 ECAICAHCA9UDYEIEDJAUMXUOPE80DA2D70D42RQACWIWOQDE64-0UKYZOOZJEZORQUFVOKVOYAL2VUUQARPUQQ00QIFQIGVNOQOFQOTA7A8 IZUP9E39818F0REXWI ZZEAG-72CWAU8 AXAUBIBB895-0BXGBUD550B575575B66D7POQAZUVAUAYD6-0AWX620AUJ155YOTIMNMU 14DI-IY00HOJHOXIHI18D0 E0 U0B9SJELK LJE0-0LULLFAYIT04ASUS1 XSUUJHAK00IWR1211-21-0JAHJAWJEUMAUKUGKAQSIIFOMOAYFLYTUJFAJ3 D3 IO YES-X0031CXANEOWOGHXEHEYKF14F8COIX3-0305NII2-020BGVENIBHAQXWVXWG2532DD3638G3830929171648401F1D494B4E1AL0HZP0VDC09990QWG0F3R7
InMemoryFileSystem
-fdump-record-layouts
MSGuid
Dump record layout information with canonical field types
redirecting-with
version mismatch, expected 0
UnnamedGlobalConstant
-fdouble-square-bracket-attributes
'contents' is not supported for 'directory-remap' entries
OMPAllocate
Dump symbols after the semantic analysis
Enable alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:' (default)
Don't use GOT indirection to reference external data symbols
function-entry
Display include stacks for diagnostic notes
-fdollar-ok
Color Options
Enable profile hotness information in diagnostic line
 decls total.
-fdiagnostics-print-source-range-info
-fdiagnostics-show-category=
sse4a
-fcuda-short-ptr
-fdiagnostics-color=
clang,msvc,vi,sarif,SARIF
Prevent optimization remarks from being output if they do not have at least this profile count. Use 'auto' to apply the threshold from profile summary
-fdiagnostics-misexpect-tolerance=
-foperator-names
i386
 Import decls, 
-fdepscan=
pentium4
-fdepscan-share-parent=
-fdepscan-share-stop=
Stop looking for the command named by -fdepscan-share if a process with the name of the provided argument is found first. Also blocks -fdepscan-share=parent if the parent has this name. E.g., -fdepscan -fdepscan-share=ninja -fdepscan-share-stop=cmake looks for 'ninja' and 'cmake' in the process tree; if 'ninja' is found first, state is shared based on ninja's PID; if 'cmake' is found first, state is not shared.
sandybridge
haswell
 NamespaceAlias decls, 
-fdepscan-prefix-map-toolchain=
cuda
 ObjCCategory decls, 
nooddspreg
athlon-mp
athlon-fx
Specify the class to use for constant Objective-C string objects.
-fdenormal-fp-math=
bdver4
x86-64
-fdefault-real-8
 parent 
-fdefault-double-8
cx16
f16c
__attribute__((deprecated))
movbe
-ffixed-a4
 CXXRecord decls, 
604e
tsxldtrk
Assume all loops are finite.
amd64
-ffile-prefix-map=
Use the target's platform-specific path separator character when expanding the __FILE__ macro
c++-cpp-output
Use a fake address space map; OpenCL testing purposes only
Found invalid tab character in indentation
Leading all-spaces line must be smaller than the block indent
 Field decls, 
-fextended-identifiers
Null key in Key Value.
 ObjCIvar decls, 
Emit extra debug info to make sample profile more accurate
-fexperimental-sanitize-metadata=
unknown enumerated scalar
unexpected scalar
 CXXDestructor decls, 
Reuse stack space around some argument temporaries
true
Enable the experimental new constant interpreter
%02X
-fexpensive-optimizations
-fexperimental-library
abcdefghijklmnopqrstuvwxyz
-fdebug-dump-provenance
-ferror-limit=
Set the maximum number of errors to emit before stopping (0 = no limit).
-fexceptions
--for-linker
vertical-tab
carriage-return
Reserve the r9 register (ARM only)
 UnnamedGlobalConstant decls, 
-ffixed-point
Reserve the d6 register (M68k only)
Process source files in fixed form
-ffixed-line-length-
plus-sign
period
 RequiresExprBody decls, 
-ffixed-d2
Reserve the d2 register (M68k only)
 TranslationUnit decls, 
circumflex
Reserve the x1 register (AArch64/RISC-V only)
/tune:
00020400-0000-0000-C000-000000000046
-ffixed-x18
REG_EESCAPE
Dump symbols and the parse tree after the semantic checks
-ffixed-x14
Reserve the x16 register (AArch64/RISC-V only)
REG_BADRPT
-fdebug-dump-all
-ffixed-d1
Reserve the x22 register (AArch64/RISC-V only)
-ffixed-x26
generic
-fdebug-default-version=
HOME
parsing struct/union body
TERM
Reserve the x31 register (AArch64/RISC-V only)
Child timed out
Reserve the x6 register (AArch64/RISC-V only)
friend 
Place each data in its own section
llvm-symbolizer
CFStringCreateWithFormatAndArguments
pthread_attr_setstacksize failed
acquire_shared_capability
-gdwarf-4
<<error-type>>
 contains_unexpanded_pack
signature mismatch
__builtin_amdgcn_workgroup_id_x
__builtin_amdgcn_workgroup_id_z
__builtin_amdgcn_grid_size_x
__builtin_amdgcn_s_memtime
__builtin_amdgcn_s_getreg
__builtin_amdgcn_s_barrier
__builtin_amdgcn_iglp_opt
__builtin_amdgcn_buffer_wbinvl1
__builtin_amdgcn_ds_gws_sema_p
__builtin_amdgcn_groupstaticsize
__builtin_amdgcn_atomic_dec32
__builtin_amdgcn_atomic_dec64
__builtin_amdgcn_div_fmasf
dddd
__builtin_amdgcn_trig_preopf
__builtin_amdgcn_rcp
__builtin_amdgcn_rsq_clamp
__builtin_amdgcn_cosf
__builtin_amdgcn_frexp_mantf
__builtin_amdgcn_frexp_exp
__builtin_amdgcn_cubeid
__builtin_amdgcn_s_incperflevel
__builtin_amdgcn_s_setprio
__builtin_amdgcn_sicmp
WUiWiWiIi
__builtin_amdgcn_ds_swizzle
-mcmodel=medlow
struct
Reserve the d1 register (M68k only)
tbuffer 
ilp32d
rv32imac
 IsPointer
__builtin_amdgcn_sqrtf
-mcmodel=
 openmp_standalone_directive
-Av9b
 GeneratedDeclaration
 Keep
-ffixed-x22
 UAV
 CBuffer
-mcmse
 Texture2DMS
__builtin_amdgcn_alignbit
 Texture2DArray
 Texture2DMSArray
 TextureCubeArray
-Asparclet
 StructuredBuffer
-mcode-object-v3
 Hull
-Av8plusb
 RayGeneration
 Intersection
__builtin_amdgcn_sinh
Don't use new kernel launching API for HIP
 Callable
-mcode-object-version=
 sw0
__builtin_amdgcn_s_dcache_wb
 hw3
 hw4
__builtin_amdgcn_global_atomic_fmin_f64
 OMPNullMemAlloc
InBase
none,2,3,4,5
 MT_To
-vector
 DT_Any
 Indirect
__builtin_amdgcn_sdot4
-fno-honor-infinites
 OMF_None
-mconsole
 OMF_mutableCopy
__builtin_amdgcn_image_bvh_intersect_ray
 machine
 None
V8fV16sV16sV8f
V16sV16sV16sV16sIb
register
-mconstructor-aliases
 Default
skylake-avx512
__builtin_amdgcn_read_exec_lo
 IR_ForbiddenWeak
 IR_ARCInitReturnsUnrelated
half
 DefaultKey
-mcpu=?
 DefaultAddressDiscrimination
__builtin_amdgcn_mfma_f32_16x16x4f16
 NoExtraDiscrimination
 TypeDiscrimination
 CustomDiscrimination
core-avx2
 AllGPR
-mcrbits
 InterleaveCount
core2
 UnrollAndJamCount
 PipelineDisabled
Enable support for the C++ Modules TS
-fno-honor-nans
 Enable
-mcrc
 ScalableWidth
V16iV2iV4iV16iiIiIi
 Numeric
 BS_Inbranch
 BS_Notinbranch
i486
cleanup 
-mcrypto
 pod
-rtm
 has_user_declared_ctor
 has_constexpr_non_copy_move_ctor
-fno-ident
DefaultConstructor
Specify CU wavefront execution mode (AMDGPU only)
 defaulted_is_constexpr
 user_declared
MoveConstructor
target 
-mdarwin-stkchk-strong-link
__interface
+lvi-load-hardening
Decayed
ConstantArray
v125
-fno-implement-inlines
Atomic
Use DLL debug run-time
BlockPointer
v141
Auto
DeducedTemplateSpecialization
v153
v157
_Atomic
Enable additional debug output
InjectedClassName
-a32
v181
ObjCObject
PackExpansion
virtual
-fixit
-fparse-all-comments
image2d_array_msaa_t
v205
LValueReference
TemplateSpecialization
TemplateTypeParm
-bM:SRE
Vector
none,explicit,all
unsigned long
-b32
long double
short _Accum
-fno-implicit-modules-use-lock
short _Fract
-mdll
unsigned _Fract
Mapping between default visibility and export
_Sat long _Accum
_Sat unsigned short _Accum
_Sat unsigned _Accum
arch12
-fpascal-strings
char8_t
<bound member function type>
-bcdtors:all:0:s
<ARC unbridged cast type>
<builtin fn type>
__read_only image2d_depth_t
Resource
__read_only image2d_msaa_t
__write_only image1d_t
__write_only image1d_array_t
__write_only image2d_array_depth_t
-fpass-by-value-is-noalias
-mdsp
__read_write image2d_t
<incomplete matrix index type>
<OpenMP array section type>
stdcall
picking up libstdc++ headers is unimplemented on AIX
aapcs
-fpass-plugin=
amdgpu_kernel
clang::acquire_handle
preserve_all
swift_context
-fno-implicit-templates
swift_indirect_result
gnu::alias
__global
a138
-fpatchable-function-entry-offset=
Write a depfile containing user and system headers
__global_host
mcrt0_64.o
__sptr __ptr32
__uptr __ptr32
aix::Assembler
ParamIndex
Use DLL run-time
default,4,5,gnu
a198
a202
_Alignas
--sysroot=
 * sizeof(
-Bstatic
__unsafe_indexable
-membedded-data
__constant
analyzer_suppress
typeof_unqual(
typeof(
__terminated_by(
-fmodules-validate-once-per-build-session
crtn.o
blink
e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
e-m:o-p:32:32-Fi8-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
8_2A
8_5A
9_1A
9_2A
aapcs-linux
-thumb-mode
+vfp3d16sp
+vfp3d16
+fp-armv8d16sp
+hwdiv
+cdecp7
+pacbti
__ARM_ARCH_7A__
__ARM_ARCH_ISA_THUMB
__ARM_PCS_VFP
__ARM_ROPI
__ARM_FEATURE_SIMD32
__VFP_FP__
__ARM_FEATURE_MVE
-menable-unsafe-fp-math
__ARM_FEATURE_BTI
__builtin_arm_smultb
__builtin_arm_qsub
__builtin_arm_ssat
__builtin_arm_smlatt
__builtin_arm_ssat16
__builtin_arm_uxtb16
__builtin_arm_sel
__builtin_arm_uadd8
__builtin_arm_uqadd8
__builtin_arm_qadd16
__builtin_arm_qsax
__builtin_arm_shsax
-mexec-model=
+vfp2sp
HIP_DEVICE_LIB_PATH
clang::assert_capability
__ARM_VFPV3__
gnu::cdecl
       [this adjustment: 
command,reactor
 entries
%4llu | 
Construction vtable for ('
) in '
       -- (
__builtin_arm_usub8
VFTable for 
__builtin_arm_shsub16
__clang_hip_runtime_wrapper.h
Disallow generation of data access to code sections (ARM only)
[this adjustment: 
__builtin_arm_smladx
 vboffset at 
clang::cf_returns_retained
begin assumes
__builtin_arm_ldrexd
critical
-mextern-sdata
declare reduction
-fvisibility=hidden
__builtin_arm_stcl
distribute parallel for simd
end assumes
device_builtin_surface_type
end declare variant
-mf16c
__builtin_arm_dbg
end single
end workshare
master taskloop simd
metadirective
__builtin_arm_mve_vabavq_s8
parallel masked
-mfentry
parallel master taskloop
__builtin_arm_mve_vabdq_m_u32
sections
simd
__constant__
target parallel
-mfix-and-continue
target parallel for simd
-fmodules-validate-system-headers
target teams distribute parallel do
target teams distribute parallel do simd
__builtin_arm_mve_vadcq_m_u32
target teams distribute parallel for
taskyield
Work around VLLDM erratum CVE-2021-35465 (ARM only)
teams distribute
teams distribute parallel do
tile
workshare
dispatch
__builtin_arm_mve_vaddq_x_f32
CallableStates...
Workaround Cortex-A53 erratum 835769 (AArch64 only)
acquire
/avr
__builtin_arm_mve_vaddvaq_p_s32
bind
collapse
clang::require_constant_initialization
copyin
Work around Cortex-A57 Erratum 1742098 (ARM only)
__builtin_arm_mve_vaddvq_u16
__builtin_arm_mve_vandq_f32
carries_dependency
device_type
has_device_addr
in_reduction
Include file before parsing
-fpermissive
nogroup
gnu::dllexport
__builtin_arm_mve_vbicq_u16
num_tasks
order
avr2
relaxed
Validate the system headers that a module depends on when loading the module
-fpeel-loops
-mfloat-abi=
thread_limit
gnu::destructor
untied
__builtin_arm_mve_vcaddq_rot270_f32
-fpic
-mfix-cortex-a72-aes-1655431
consumable_set_state_on_read
nvptx
nvptx64
threadprivate or thread local
clang::disable_tail_calls
implementation
-mfloat128
parallel
at90c8534
arch
vendor
__builtin_arm_mve_vclzq_s8
soft,softfp,hard
-mfma
dynamic_allocators
__builtin_arm_mve_vcmlaq_rot180_m_f16
Cond
attiny13a
__builtin_arm_mve_vcmpcsq_n_u16
Use 32-bit floating point registers (MIPS only)
match_all
__builtin_arm_mve_vcmpeqq_n_f16
__builtin_arm_mve_vcmpeqq_s16
gnu::fallthrough
false
__builtin_arm_mve_vcmpgeq_m_f16
-fplugin-arg-
Strip specified level of directory name from source path in the profile counter name for static functions.
attiny261a
Use full module build paths in the profile counter names for static functions.
total size is not multiples of quardword
value kind is invalid
-mfp32
__llvm_prf_names
-mfpmath
__llvm_covfun
__builtin_arm_mve_vcmphiq_m_n_u8
__builtin_arm_mve_vcmphiq_u32
__builtin_arm_mve_vcmpleq_m_n_s16
debug info for correlation is not necessary
invalid profile created. Please file a bug at: http://developer.apple.com/bugreporter/ and include the profraw files that caused this error.
Enable support for ignoring exception handling constructs
managed
static-func-full-module-prefix
numthreads
__builtin_arm_mve_vcmpltq_n_s16
function name is empty
gnu::flatten
profile-summary-contextless
profile-summary-cutoff-hot
-mfpxx
profile-summary-cutoff-cold
Pass <arg> to plugin <name>
The code working set size is considered huge if the number of blocks required to reach the -profile-summary-cutoff-hot percentile exceeds this count.
gnu::hot
profile-summary-cold-count
__builtin_arm_mve_vcmpneq_u32
Load the named plugin (dynamic shared object)
Which unit to use for fp math
attiny841
-fno-integrated-objemitter
attiny43u
init_priority
Magic
none,aapcs,aapcs+leaf
HeaderData length
attiny88
Data 
Atom[%d]: 
__builtin_arm_mve_vcvtmq_m_u32_f32
Avoid FPU mode dependent operations when used with the O32 ABI
Atoms
Specify which frame pointers to retain.
EMPTY
__builtin_arm_mve_vcvtnq_u32_f32
CU count
Local TU count
clang::iboutletcollection
__builtin_arm_mve_vcvtq_m_f32_u32
Incorrectly terminated abbreviation table.
-mfsgsbase
Error extracting index attribute values.
__builtin_arm_mve_vcvtq_n_f32_u32
Hash
__builtin_arm_mve_vcvtq_u32_f32
-mframe-pointer=
__builtin_arm_mve_vcvtq_x_n_f32_u32
clang::lto_visibility_public
Replace returns with jumps to ``__x86_return_thunk`` (x86 only, error otherwise)
at90usb162
ata5505
__builtin_arm_mve_vddupq_m_n_u8
__builtin_arm_mve_vddupq_n_u16
, format = 
gnu::ms_struct
, abbr_offset = 
-mfxsr
 (invalid)
0x%02x
lockable
__builtin_arm_mve_vdwdupq_m_n_u16
.debug_types
__builtin_arm_mve_vdwdupq_x_n_u16
atmega8
Write depfile output from -MMD, -MD, -MM, or -M to <file>
.debug_macro.dwo
__builtin_arm_mve_veorq_s16
.debug_line
VectorWidth
.debug_str
__builtin_arm_mve_veorq_x_u32
.debug_ranges
Generate code which only uses the general purpose registers (AArch64/x86 only)
.debug_rnglists.dwo
ata6286
__builtin_arm_mve_vfmsq_m_f16
.debug_str_offsets
debug_str_offsets.dwo
gnu::mode
.apple_names
-mginv
__builtin_arm_mve_vhaddq_n_s16
.debug_names
error: UUID load command is too short.
ranges:
invalid %s list offset 0x%llx
__builtin_arm_mve_vhcaddq_rot270_s32
, Format = 
-mglobal-merge
failed to get relocated section: 
__builtin_arm_mve_vhcaddq_rot90_x_s32
debug_frame
debug_info
gnu::short_call
atmega88pa
debug_abbrev
-mgpopt
debug_macinfo.dwo
-fms-compatibility-version=
debug_rnglists
debug_pubnames
debug_pubtypes
< EMPTY >
atmega8hva
-mguard=
address table at offset 0x%llx has a unit_length value of 0x%llx, which is too small to contain a complete header
address table at offset 0x%llx has unsupported version %hu
, version = 0x%4.4hx
, addr_size = 0x%2.2hhx
, seg_size = 0x%2.2hhx
__builtin_arm_mve_vld1q_u32
-fjmc
0x%16.16llx
Addrs: [
at90pwm81
__builtin_arm_mve_vld2q_u32
address range table at offset 0x%llx has an insufficient length to contain any entries
Address Range Header: 
clang::noinline
version = 0x%4.4x, 
Add missing headers to depfile
cu_offset = 0x%0*llx, 
undefined
 in addrspace
__builtin_arm_mve_vldrdq_gather_base_z_s64
OT_Address
-fgnu
-fprofile-arcs
op[%u] has type %s which has no value
gnu::no_randomize_layout
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_s32
op[%u] has type OT_UnsignedFactDataOffset but data alignment is zero
DW_CFA_restore_state without a matching previous DW_CFA_remember_state
ata6614q
%s found when CFA rule was not RegPlusOffset
-mhreset
 Unsupported 
Print subprocess statistics
 %+lld
gnu::no_sanitize_thread
%08llx
__builtin_arm_mve_vldrwq_gather_shifted_offset_z_u32
-fprofile-dir=
-mhard-float
nomips16
  Format:                
WARNING: unsupported CIE version
<invalid offset>
 pc=%08llx...%08llx
no_thread_safety_analysis
unknown augmentation character %c in entry at 0x%llx
-mhvx-length=
parsing FDE data at 0x%llx failed due to missing CIE
atmega164pa
? + 
__builtin_arm_mve_vmaxvq_u32
-mhtm
(unsigned short)
64B,128B
'\b'
__builtin_arm_mve_vminnmaq_m_f16
'\t'
'\v'
'\x%02x'
atmega168
__builtin_arm_mve_vminq_x_u32
Enable Hexagon HVX QFloat instructions
 prologue_length: 0x%0*llx
__builtin_arm_mve_vminvq_s16
 default_is_stmt: %u
       line_base: %i
      line_range: %u
atmega169
include_directories[%3u] = 
Enable Hexagon Vector eXtensions
      dir_index: %llu
-fno-knr-functions
         source: 
InstanceMethod
unknown data in line table prologue at offset 0x%8.8llx: parsing ended (at offset 0x%8.8llx) before reaching the prologue end at offset 0x%8.8llx
__builtin_arm_mve_vmladavxq_s32
__builtin_arm_mve_vmlaldavaq_u16
--mhwdiv=
 epilogue_begin
atmega323
__builtin_arm_mve_vmlaldavxq_s16
%02.02hhx 
address size 0x%2.2llx of DW_LNE_set_address opcode at offset 0x%8.8llx is unsupported
atmega324p
(0x%16.16llx)
Enable just-my-code debugging
--mhwdiv
unexpected line op length at offset 0x%8.8llx expected 0x%2.2llx found 0x%2.2llx
 (<parsing error>
clang::objc_gc
 (operands: 
__builtin_arm_mve_vmlsdavq_p_s8
-mhvx
atmega325a
__builtin_arm_mve_vmlsldavaq_s16
atmega325p
failed to parse file entry because the MD5 hash is invalid
clang::NSObject
__builtin_arm_mve_vmovlbq_u16
-fprofile-generate=
-mhwdiv=
atmega3250a
-fno-lax-vector-conversions
atmega3250pa
objc_requires_property_definitions
 filenum: 
__builtin_arm_mve_vmovntq_u16
-mhwmult=
atmega328p
opcode_operands_table is not supported
atmega328pb
name lookup table at offset 0x%llx has a terminator at offset 0x%llx before the expected end at 0x%llx
-fprofile-generate-sampling
Offset     Name
MetadataName
%-8s
-mignore-xcoff-visibility
range list at offset 0x%llx
__builtin_arm_mve_vmullbq_poly_p16
objc_nonlazy_class
__builtin_arm_mve_vmulltq_int_x_s16
Loclist table not found
 (0x%8.8llx)
Abbreviation code not found in 'debug_abbrev' class for code: 
--migrate
__builtin_arm_mve_vmulq_m_s16
 0x0
 0x%02x
<empty>
 %02x
__generic
-fprofile-instr-generate=
-mieee-rnd-near
 [%llu]
indexed (%8.8x) address = 
<unresolved>
atmega644
<0x%4.4x> 
__builtin_arm_mve_vmvnq_m_u32
 .debug_str[0x%0*llx] = 
-mimplicit-float
 .debug_line_str[0x%0*llx] = 
Not emit the visibility attribute for asm in AIX OS or give all symbols 'unspecified' visibility in XCOFF object file
__write_only
__read_write
Invalid form for string attribute
__builtin_arm_mve_vnegq_x_s8
-fprofile-instr-generate
Run the migrator
    %d: Offset = 0x%llx, Length = 0x%llx
ignore __weak qualifiers in manual reference counting
    Low/High address = [0x%llx, 0x%llx) (Size: 0x%llx), CU id = %d
  Symbol table offset = 0x%x, size = %lld, filled slots:
    %d: Name offset = 0x%x, CU vector offset = 0x%x
atmega649p
    %d(0x%x): 
(integrated-as) Emit an object file which can be used with an incremental linker
parsing %s table at offset 0x%llx: %s
clang::ownership_holds
%s table at offset 0x%llx
%s table at offset 0x%llx has unsupported segment selector size %hhu
Generate instrumented code to collect execution counts into <file> (overridden by LLVM_PROFILE_FILE env var)
__builtin_arm_mve_vorrq_x_u8
SubGroupSize
Add cs prefix to call and jmp to indirect thunk
 => 0x%08llx
__builtin_arm_mve_vqaddq_m_n_s8
atmega6490p
atmega64rfr2
MACRO
__builtin_arm_mve_vqaddq_s16
atmega16hva
Change indirect jump instructions to inhibit speculation
 ------------------------
atmega16hva2
DW_FORM_strx uses index 
, which is too large
__builtin_arm_mve_vqdmlashq_n_s32
__builtin_arm_mve_vqdmlsdhq_m_s8
DWARF type unit at offset 0x%8.8llx has its relocated type_offset 0x%8.8llx pointing inside the header
-minvariant-function-descriptors
clang::ownership_returns
__builtin_arm_mve_vqdmulhq_m_n_s8
section offset exceeds section size
32 bit contribution referenced from a 64 bit unit
-fno-lto
atmega64hve
The 16 bit unit header version is not valid.
-mios-simulator-version-min=
         original: {0}
    reconstituted: {1}
preserve_all
-mindirect-jump=
preserve_most
Abbreviation declaration contains multiple 
__builtin_arm_mve_vqmovuntq_s16
__builtin_arm_mve_vqrdmladhq_m_s16
Set iOS deployment target
__builtin_arm_mve_vqrdmlahq_m_n_s16
Verifying .debug_types Unit Header Chain...
Verifying non-dwo Units...
atmega64c1
DIE address ranges are not contained in its parent's ranges:
__builtin_arm_mve_vqrdmlsdhq_s32
{0:x8}
-miphonesimulator-version-min=
DIE has invalid DW_AT_ranges encoding:
regparm
__builtin_arm_mve_vqrdmulhq_n_s8
 that points to DIE with incompatible tag 
 with an invalid file index 
] row[
-mips2
__builtin_arm_mve_vqshlq_m_s16
Bucket[%d] has invalid hash index: %u.
No atoms: failed to read HashData.
atmega128
malloc
%s Bucket[%d] Hash[%d] = 0x%08x Str[%u] = 0x%08llx DIE[%d] = 0x%08llx is not a valid DIE offset for "%s".
-mips32r2
atmega128a
atmega2560
avrtiny
attiny10
atxmega16a4
avrxmega2
atxmega64a1u
atxmega128d3
atxmega256a3b
atxmega256a3bu
 in accelerator table does not match Tag 
CU @ {0:x} not covered by any Name Index
Name Index @ {0:x} does not contain a hash table.
Disable implicit builtin knowledge of math functions
-mips32r3
__builtin_arm_mve_vqshruntq_n_s16
NameIndex @ {0:x}: Abbreviation {1:x} contains multiple {2} attributes.
Name Index @ {0:x}: Unable to get string associated with name {1}.
Name Index @ {0:x}: Entry @ {1:x} contains an invalid CU index ({2}).
clang::requires_capability
Sentinel
-fno-math-errno
-mips32r5
llvm.object
The file was not recognized as a valid object file
Invalid data was encountered while parsing the file
The end of the file was unexpectedly encountered
gnu::returns_nonnull
clang::set_typestate
avr6
Bitcode section not found in object file
Section has been stripped from the object file
-mips32r6
universal header architecture: 
standalone_debug
 cmdsize not a multiple of 8
 cmdsize not a multiple of 4
__builtin_arm_mve_vreinterpretq_u32_s32
LC_LINKER_OPTIMIZATION_HINT
-fkeep-inline-functions
Use the remappings described in <file> to match the profile data against names in the program
clang::return_typestate
__sptr
 has incorrect cmdsize
clang::swiftasynccall
__builtin_arm_mve_vreinterpretq_s32_s64
clang::swift_async_context
LC_LOAD_WEAK_DYLIB
-mips3
LC_ID_DYLINKER
attiny40
LC_VERSION_MIN_IPHONEOS
LC_VERSION_MIN_TVOS
__builtin_arm_mve_vrev64q_x_u8
Equivalent to -march=mips32r6
LC_MAIN command 
-mips4
returns_twice
__builtin_arm_mve_vrhaddq_u8
__builtin_arm_mve_vrmlaldavhaxq_s32
sub_umbrella_command
LC_SUB_LIBRARY
LC_SUB_CLIENT
LC_ROUTINES command 
-mips5
returns_nonnull
swift_objc_members
__builtin_arm_mve_vrndaq_m_f32
 is obsolete and not supported
contains LC_DYSYMTAB load command without a LC_SYMTAB load command
atxmega32c3
swift_bridge
-mips64r2
DW_SECT_MACRO
-fno-memory-profile
bad section index: 
Model
__LLVM
__builtin_arm_mve_vrshlq_m_n_u16
Equivalent to -march=mips4
GENERIC_RELOC_TLV
at90can128
clang::test_typestate
Specifies that the sample profile is accurate
thiscall
ARM_RELOC_SECTDIFF
__builtin_arm_mve_vrshrntq_n_s32
ARM_RELOC_BR24
-mips64r5
DW_SECT_RNGLISTS
atxmega64a4u
__builtin_arm_mve_vrshrq_x_n_s32
ARM64_RELOC_BRANCH26
ARM64_RELOC_GOT_LOAD_PAGE21
clang::try_acquire_capability
ARM64_RELOC_TLVP_LOAD_PAGE21
-mips64r6
ARM64_RELOC_TLVP_LOAD_PAGEOFF12
ARM64_RELOC_ADDEND
PPC_RELOC_PAIR
atxmega64d3
PPC_RELOC_LO16
__builtin_arm_mve_vshlltq_m_n_s8
typed_memory_operation
-mips64
__builtin_arm_mve_vshlq_m_n_u8
InferredParameterIdx
__builtin_arm_mve_vshlq_m_r_u16
Mach-O arm64
i386-apple-darwin
avrxmega6
armv4t-apple-darwin
-misel
__builtin_arm_mve_vshlltq_x_n_s8
-fprofile-selected-function-group=
atxmega128a3u
__builtin_arm_mve_vshlq_x_n_u8
LayoutCompatible
Equivalent to -march=mips64r6
thumbv7m-apple-darwin
Write a compilation database entry per input
arm64_32-apple-darwin
-fkeep-static-consts
arm64-apple-darwin
dylib ordinal of re-export 
 (max 
clang::vecreturn
 extends past end of trie data
-mkl
 where actual size was: 0x
atxmega192d3
child node offset 
loop in childern in export trie data at node: 0x
__builtin_arm_mve_vst1q_p_f32
 (num entries: 
-mlimit-float-precision
for REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB 
__builtin_arm_mve_vst1q_u8
__builtin_arm_mve_vst4q_s32
bad rebase info (bad opcode value 0x
) for opcode at: 0x
BIND_OPCODE_SET_DYLIB_SPECIAL_IMM not allowed in weak bind table for opcode at: 0x
for BIND_OPCODE_SET_TYPE_IMM bad bind type: 
-mlink-bitcode-file
for BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB 
clang::export_name
__builtin_arm_mve_vstrdq_scatter_base_wb_u64
BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB not allowed in lazy bind table for opcode at: 0x
for BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB missing preceding BIND_OPCODE_SET_DYLIB_ORDINAL_* for opcode at: 0x
avrxmega7
for BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED missing preceding BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM for opcode at: 0x
-mlink-builtin-bitcode
for BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED missing preceding BIND_OPCODE_SET_DYLIB_ORDINAL_* for opcode at: 0x
-fno-minimize-whitespace
for BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB (skip value) 
gnu::force_align_arg_pointer
at BIND_SUBOPCODE_THREADED_APPLY (incorrect ordinal table size, count of previous BIND_OPCODE_DO_BIND opcodes don't match count in previous BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB at BIND_SUBOPCODE_THREADED_APPLY at: 0x
__builtin_arm_mve_vstrhq_scatter_shifted_offset_u32
Limit float precision to the given value
bad bind info (for BIND_SUBOPCODE_THREADED_APPLY for opcode at: 0x
 at address: 0x
clang::xray_log_args
atomic,prefer-atomic,single
clang::xnu_usage_semantics
 overlaps with chained fixups header
__builtin_arm_mve_vsubq_m_n_s32
Keep static const variables if unused
-fprofile-use
bad chained fixups: seg_info_offset 
attiny404
 symbol offset extends past end: 
 is invalid
 pointer format 
Link and internalize needed symbols from the given bitcode file before performing optimizations.
bad chained fixups: chain starts section 
Additional arguments to forward to LLVM's option processing
bad chained fixups: chain start 
__builtin_arm_mve_vsubq_x_u8
xray_log_args
__builtin_arm_mve_vabdq
-filetype
-fprofile
truncated or malformed object (
attiny814
Structure read out-of-range
-mllvm
 extends past the end of the file
functions and variables
symoff field plus nsyms field times sizeof(
Generate branches with extended addressability, usually via indirect jumps.
atmega808
__builtin_arm_mve_vcmlaq_rot270_m
string table
atmega809
more than one LC_DYSYMTAB command
-mlocal-sdata
tocoff field of LC_DYSYMTAB command 
Force long double to be 128 bits
__builtin_arm_mve_vcmulq_m
empty statements
indirect table
external relocation table
locreloff field of LC_DYSYMTAB command 
local relocation table
 cmdsize too small
Force long double to be 64 bits
dataoff field of 
__builtin_arm_mve_vhaddq_x
__builtin_arm_mve_vhcaddq_rot90_m
bind_off field plus bind_size field of 
weak_bind_off field plus weak_bind_size field of 
attiny1614
static,static_dbg,dll,dll_dbg
Emit pseudo probes for sample profiling
export_off field plus export_size field of 
__builtin_arm_mve_vldrdq_gather_shifted_offset
LC_ID_DYLIB load command in non-dynamic library file type
 name.offset field too small, not past the end of the dylib_command struct
 name.offset field extends past the end of the load command
variables, functions, blocks, and Objective-C methods
-fpseudo-probe-for-profiling
__builtin_arm_mve_vminaq_m
__builtin_arm_mve_vminnmaq
the two LC_BUILD_VERSION load commands are not for the platforms MACOS and MACCATALYST
 LC_RPATH cmdsize too small
attiny3217
cryptoff field of 
__builtin_arm_mve_vmladavaxq_p
 does not match number of strings
-mlvi-hardening
flavor in 
functions, global variables, Objective-C methods, and Objective-C properties
 which is a x86_THREAD_STATE32 flavor in 
 x86_THREAD_STATE32 extends past end of command in 
 unknown flavor (
 count not x86_THREAD_STATE_COUNT for flavor number 
 which is a x86_THREAD_STATE flavor in 
-mlwp
 x86_EXCEPTION_STATE extends past end of command in 
__builtin_arm_mve_vmullbq_int
__builtin_arm_mve_vmulq_m
__builtin_arm_mve_vmvnq_x
 ARM_THREAD_STATE extends past end of command in 
-fms-volatile
 which is a ARM_EXCEPTION_STATE64 flavor in 
-mmacos-version-min=
 count not PPC_THREAD_STATE_COUNT for flavor number 
Enable all mitigations for Load Value Injection (LVI)
unknown cputype (
thread-local variables
more than one LC_TWOLEVEL_HINTS command
__builtin_arm_mve_vqmovntq_m
-fptrauth-auth-traps
march=rv64imafdc
__builtin_arm_mve_vqrdmlahq_m
mabi=lp64
__builtin_arm_mve_vqrshrntq
size field of section 
 less than the segment's vmaddr
mabi=lp64d
Class
Enable the generation of 4-operand madd.s, madd.d and related instructions.
__builtin_arm_mve_vqshruntq
__builtin_arm_mve_vreinterpretq_s8
size_t
/rv32i/ilp32
bad magic number
-fptrauth-block-descriptor-pointers
offset plus size of cputype (
Add .note.gnu.property with BTI to assembly files (AArch64 only)
) extends past the end of the file
'weak'
contains two of the same architecture (cputype (
) at offset 
Do not automatically generate or update the global module index
super
__builtin_arm_mve_vrndxq_m
-MMD
section header table goes past the end of the file: e_shoff = 0x
__builtin_arm_mve_vsbcq
section table goes past the end of file
rv32i
 and size 0x
__builtin_arm_mve_vshlq_x_n
-mmemops
rv32imafc
march=rv32i
" with index 
 contains no auxiliary entry
atomic_intptr_t
atomic_ptrdiff_t
Enable support for generating executables (experimental)
Enabling type discrimination on C function pointers
armv5
march=rv32imac
__builtin_arm_mve_vstrwq_scatter_shifted_offset_p
Source
arm64v8
 (for architecture 
 does not contain architecture: 
-mmicromips
application extension safe flags do not match
-fno-modules-search-all
__builtin_arm_cde_vcx1qa_u64
__builtin_arm_cde_vcx2d_u64
attributes
__builtin_arm_cde_vcx2q_m_impl_u64
Additional arguments to forward to MLIR's option processing
reexported_libraries
__builtin_arm_cde_vcx2q_u8_s16
undefined_symbols
rpaths
paths
not_app_extension_safe
-mmmx
__builtin_arm_cde_vcx3q_impl_u64
, and 
__builtin_arm_cde_vcx3q_m_impl_u16
iOS Simulator
-fptrauth-intrinsics
__clang_openmp_device_functions.h
-mmovdir64b
API_AVAILABLE
__builtin_available
__ldrexd
_MoveFromCoprocessor2
Use generic block helpers for copying/destroying blocks
-flarge-sizes
-mmpx
__flash
__flash2
__attribute__((address_space(4)))
avrxmega1
__AVR_ATtiny11__
__AVR_AT90S2333__
__AVR_ATtiny26__
__AVR_AT90S8515__
__AVR_AT90c8534__
__AVR_ATtiny2313A__
__AVR_ATtiny4313__
__AVR_ATtiny25__
__AVR_ATtiny85__
__AVR_ATtiny841__
__AVR_ATtiny87__
__AVR_AT43USB355__
__AVR_AT76C711__
__AVR_ATA6617C__
__AVR_ATmega16U2__
__AVR_ATmega8A__
__AVR_ATA6286__
__AVR_ATmega48P__
__AVR_ATmega88P__
__AVR_ATmega8HVA__
Enable MT ASE (MIPS only)
__AVR_ATA5782__
__AVR_ATA5791__
__AVR_ATA8210__
__AVR_ATmega16__
__AVR_ATmega164P__
__AVR_ATmega165A__
__AVR_ATmega168P__
__AVR_ATmega168PA__
__AVR_ATmega32A__
__AVR_ATmega324P__
__AVR_ATmega325P__
__AVR_ATmega3250__
__AVR_ATmega328PB__
__AVR_ATmega329P__
__AVR_ATmega3290PA__
__AVR_ATmega644PA__
__AVR_ATmega645P__
__AVR_ATmega6450A__
__AVR_ATmega6490__
__AVR_ATmega16HVA2__
__AVR_ATmega32HVB__
__AVR_AT90CAN64__
__AVR_AT90PWM161__
__AVR_ATmega64M1__
__AVR_ATmega32U6__
__AVR_AT000__
__AVR_ATmega128A__
__AVR_ATmega128RFR2__
__AVR_AT90USB1286__
__AVR_ATmega256RFR2__
-mno-3dnow
__AVR_ATxmega32C4__
__AVR_ATxmega32E5__
__AVR_ATxmega64A4U__
__AVR_ATxmega64B3__
__AVR_ATxmega128A3__
__AVR_ATxmega128B3__
__AVR_ATxmega192A3U__
__AVR_ATxmega192C3__
__AVR_ATxmega256D3__
__AVR_ATxmega128A1__
__AVR_ATtiny9__
__AVR_ATtiny20__
__AVR_ATtiny204__
__AVR_ATtiny1604__
__AVR_ATtiny1607__
-mno-adx
__AVR_ATtiny816__
__AVR_ATtiny417__
__AVR_ATtiny1626__
__AVR_ATmega808__
__AVR_ATmega3209__
strip,sign-and-strip,sign-and-auth
cl_khr_subgroups or __opencl_c_subgroups
always
__CSKYABI__
__CSKY_VDSPV2__
__CSKY_VDSP128__
fr11
fr13
fr19
fr22
fr27
fr29
vr11
vr13
vr19
vr22
vr24
-mno-avx2
-mno-avx512bf16
__QDSP6_V5__
__HEXAGON_V60__
__HEXAGON_V67__
hexagonv67t
__HEXAGON_V69__
__HVX__
audio
__HEXAGON_PHYSICAL_SLOTS__
r7:6
r13:12
r23:22
r25:24
c13:12
c19:18
c29:28
upcyclelo
pktcounthi
-mno-avx512f
v5:4
v11:10
v21:20
v25:24
v11:8
v23:20
__builtin_brev_ldd
v*LLi*CLLi*iC
__builtin_brev_ldb
v*Uc*CUc*iC
__builtin_circ_ldh
__builtin_circ_lduh
__builtin_brev_std
i*Ci*iiC
__builtin_brev_stb
-mno-avx512vbmi
__builtin_circ_stb
iv*IiivC*
__builtin_HEXAGON_L2_loadrd_pci
__builtin_HEXAGON_L2_loadrub_pcr
__builtin_HEXAGON_L2_loadrd_pcr
vv*IiiivC*
vv*IiiLLivC*
__builtin_HEXAGON_S2_storerb_pcr
__builtin_HEXAGON_prefetch
v62|v65|v66|v67|v68|v69
__builtin_HEXAGON_V6_vmaskedstorentq
__builtin_HEXAGON_V6_vmaskedstoreq_128B
V32iV16iLLi
V64iV32iLLi
__builtin_HEXAGON_V6_vrmpyub_rtt
-mno-avx512vpopcntdq
__builtin_HEXAGON_A2_add
__builtin_HEXAGON_A2_addh_h16_lh
__builtin_HEXAGON_A2_addh_h16_sat_ll
__builtin_HEXAGON_A2_addh_l16_ll
__builtin_HEXAGON_A2_addsat
__builtin_HEXAGON_A2_and
__builtin_HEXAGON_A2_combine_hh
__builtin_HEXAGON_A2_combine_hl
__builtin_HEXAGON_A2_max
Uiii
__builtin_HEXAGON_A2_minu
__builtin_HEXAGON_A2_neg
__builtin_HEXAGON_A2_orir
iLLi
__builtin_HEXAGON_A2_satub
-mno-bmi2
__builtin_HEXAGON_A2_subh_h16_sat_lh
__builtin_HEXAGON_A2_subh_l16_ll
iIii
__builtin_HEXAGON_A2_svaddh
__builtin_HEXAGON_A2_svsubh
__builtin_HEXAGON_A2_swiz
__builtin_HEXAGON_A2_tfrih
iiUIi
__builtin_HEXAGON_A2_vabsh
__builtin_HEXAGON_A2_vabswsat
__builtin_HEXAGON_A2_vaddubs
__builtin_HEXAGON_A2_vaddw
__builtin_HEXAGON_A2_vavgubr
__builtin_HEXAGON_A2_vavguw
__builtin_HEXAGON_A2_vcmpbeq
Do not add a BTI instruction after a setjmp or other return-twice construct (Arm/AArch64 only)
__builtin_HEXAGON_A2_vcmpwgtu
__builtin_HEXAGON_A2_vmaxh
__builtin_HEXAGON_A2_vminb
__builtin_HEXAGON_A2_vminub
__builtin_HEXAGON_A2_vnavghr
__builtin_HEXAGON_A2_vnavgwr
__builtin_HEXAGON_A2_vrsadub_acc
__builtin_HEXAGON_A2_vsubb_map
__builtin_HEXAGON_A2_vsubws
__builtin_HEXAGON_A2_zxtb
__builtin_HEXAGON_A4_bitspliti
__builtin_HEXAGON_A4_boundscheck
__builtin_HEXAGON_A4_cmpbgtu
__builtin_HEXAGON_A4_cmpheqi
__builtin_HEXAGON_A4_cmphgtu
-mno-clflushopt
__builtin_HEXAGON_A4_ornp
__builtin_HEXAGON_A4_rcmpneq
__builtin_HEXAGON_A4_round_rr_sat
iLLii
iLLiIi
__builtin_HEXAGON_A4_vcmphgti
__builtin_HEXAGON_A4_vrmaxh
LLiLLiLLii
__builtin_HEXAGON_A4_vrminw
__builtin_HEXAGON_C2_and
__builtin_HEXAGON_C2_bitsset
__builtin_HEXAGON_C2_cmpeqi
__builtin_HEXAGON_C2_cmpgtp
__builtin_HEXAGON_C2_cmpgtup
__builtin_HEXAGON_C2_muxii
-mno-code-object-v3
__builtin_HEXAGON_C2_orn
__builtin_HEXAGON_C2_tfrrp
__builtin_HEXAGON_C4_and_and
__builtin_HEXAGON_C4_and_or
__builtin_HEXAGON_C4_cmpneq
__builtin_HEXAGON_C4_fastcorner9_not
__builtin_HEXAGON_C4_or_andn
__builtin_HEXAGON_C4_or_or
LLid
__builtin_HEXAGON_F2_conv_df2ud
__builtin_HEXAGON_F2_conv_df2w_chop
LLif
__builtin_HEXAGON_F2_conv_sf2uw
__builtin_HEXAGON_F2_conv_sf2w_chop
__builtin_HEXAGON_F2_conv_uw2sf
Disable emitting complete constructors and destructors as aliases when possible
__builtin_HEXAGON_F2_dfcmpuo
__builtin_HEXAGON_F2_dfimm_p
__builtin_HEXAGON_F2_sfcmpgt
__builtin_HEXAGON_F2_sffma_lib
__builtin_HEXAGON_F2_sffms
__builtin_HEXAGON_F2_sfmax
__builtin_HEXAGON_F2_sfmin
__builtin_HEXAGON_M2_cmacr_s0
__builtin_HEXAGON_M2_cmacsc_s0
__builtin_HEXAGON_M2_cmpyrs_s1
__builtin_HEXAGON_M2_cmpyrsc_s1
__builtin_HEXAGON_M2_cnacs_s1
__builtin_HEXAGON_M2_dpmpyss_acc_s0
__builtin_HEXAGON_M2_dpmpyuu_nac_s0
Disallow use of CRC instructions (Mips only)
__builtin_HEXAGON_M2_macsin
__builtin_HEXAGON_M2_mmachs_rs0
__builtin_HEXAGON_M2_mmacls_rs1
__builtin_HEXAGON_M2_mmacls_s1
__builtin_HEXAGON_M2_mmaculs_rs1
__builtin_HEXAGON_M2_mmpyh_rs0
__builtin_HEXAGON_M2_mmpyl_rs1
__builtin_HEXAGON_M2_mmpyl_s0
__builtin_HEXAGON_M2_mmpyul_rs1
__builtin_HEXAGON_M2_mpy_acc_hh_s0
__builtin_HEXAGON_M2_mpy_acc_lh_s1
__builtin_HEXAGON_M2_mpy_acc_ll_s1
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s1
__builtin_HEXAGON_M2_mpy_hh_s0
__builtin_HEXAGON_M2_mpy_hl_s1
-mno-cx16
__builtin_HEXAGON_M2_mpy_nac_lh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s1
__builtin_HEXAGON_M2_mpy_rnd_lh_s1
__builtin_HEXAGON_M2_mpy_sat_hh_s0
__builtin_HEXAGON_M2_mpy_sat_lh_s1
__builtin_HEXAGON_M2_mpy_sat_ll_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s1
__builtin_HEXAGON_M2_mpy_up
__builtin_HEXAGON_M2_mpyd_acc_hl_s0
__builtin_HEXAGON_M2_mpyd_acc_lh_s0
__builtin_HEXAGON_M2_mpyd_hl_s0
__builtin_HEXAGON_M2_mpyd_lh_s1
__builtin_HEXAGON_M2_mpyd_nac_hl_s0
-mno-dsp
__builtin_HEXAGON_M2_mpyd_rnd_hl_s0
__builtin_HEXAGON_M2_mpyd_rnd_lh_s1
__builtin_HEXAGON_M2_mpysu_up
__builtin_HEXAGON_M2_mpyu_acc_hh_s1
__builtin_HEXAGON_M2_mpyu_acc_ll_s1
__builtin_HEXAGON_M2_mpyu_hl_s0
__builtin_HEXAGON_M2_mpyu_ll_s1
__builtin_HEXAGON_M2_mpyu_nac_hh_s0
__builtin_HEXAGON_M2_mpyu_nac_ll_s1
__builtin_HEXAGON_M2_mpyud_acc_hh_s1
__builtin_HEXAGON_M2_mpyud_acc_ll_s0
__builtin_HEXAGON_M2_mpyud_hh_s0
__builtin_HEXAGON_M2_mpyud_ll_s0
__builtin_HEXAGON_M2_mpyud_nac_hh_s1
__builtin_HEXAGON_M2_mpyud_nac_lh_s1
-mno-exception-handling
__builtin_HEXAGON_M2_vcmac_s0_sat_i
__builtin_HEXAGON_M2_vcmpy_s0_sat_r
__builtin_HEXAGON_M2_vdmpyrs_s0
__builtin_HEXAGON_M2_vdmpys_s0
__builtin_HEXAGON_M2_vmac2s_s0
__builtin_HEXAGON_M2_vmac2su_s1
__builtin_HEXAGON_M2_vmpy2s_s1
__builtin_HEXAGON_M2_vmpy2s_s1pack
__builtin_HEXAGON_M2_vrcmacr_s0
__builtin_HEXAGON_M2_vrcmpyi_s0c
LLiLLii
__builtin_HEXAGON_M2_vrmac_s0
__builtin_HEXAGON_M4_and_xor
__builtin_HEXAGON_M4_cmpyr_wh
__builtin_HEXAGON_M4_mpyri_addr
-mno-extern-sdata
__builtin_HEXAGON_M4_or_andn
__builtin_HEXAGON_M4_pmpyw
__builtin_HEXAGON_M4_vrmpyeh_acc_s1
__builtin_HEXAGON_M4_vrmpyeh_s1
__builtin_HEXAGON_M4_xor_andn
__builtin_HEXAGON_M5_vdmacbsu
__builtin_HEXAGON_M5_vmpybuu
__builtin_HEXAGON_M5_vrmacbsu
__builtin_HEXAGON_S2_asl_i_p_acc
__builtin_HEXAGON_S2_asl_i_p_nac
__builtin_HEXAGON_S2_asl_i_r_and
__builtin_HEXAGON_S2_asl_i_r_or
__builtin_HEXAGON_S2_asl_r_p_acc
__builtin_HEXAGON_S2_asl_r_p_or
__builtin_HEXAGON_S2_asl_r_r
Don't work around VLLDM erratum CVE-2021-35465 (ARM only)
__builtin_HEXAGON_S2_asr_i_p_nac
__builtin_HEXAGON_S2_asr_i_p_rnd_goodsyntax
__builtin_HEXAGON_S2_asr_i_r_or
__builtin_HEXAGON_S2_asr_i_r_rnd_goodsyntax
__builtin_HEXAGON_S2_asr_r_p_and
__builtin_HEXAGON_S2_asr_r_p_xor
__builtin_HEXAGON_S2_asr_r_r_or
__builtin_HEXAGON_S2_asr_r_r_sat
__builtin_HEXAGON_S2_cl0p
__builtin_HEXAGON_S2_clb
__builtin_HEXAGON_S2_ct0
__builtin_HEXAGON_S2_ct1
__builtin_HEXAGON_S2_extractup
__builtin_HEXAGON_S2_insert
LLiLLiLLiUIiUIi
Don't work around Cortex-A57 Erratum 1742098 (ARM only)
__builtin_HEXAGON_S2_lsl_r_p_or
__builtin_HEXAGON_S2_lsl_r_r_acc
__builtin_HEXAGON_S2_lsl_r_vw
__builtin_HEXAGON_S2_lsr_i_p_acc
__builtin_HEXAGON_S2_lsr_i_r_acc
__builtin_HEXAGON_S2_lsr_i_r_or
__builtin_HEXAGON_S2_lsr_r_p_acc
__builtin_HEXAGON_S2_lsr_r_p_and
__builtin_HEXAGON_S2_lsr_r_r_nac
__builtin_HEXAGON_S2_lsr_r_vw
__builtin_HEXAGON_S2_shuffeb
__builtin_HEXAGON_S2_shuffob
__builtin_HEXAGON_S2_tableidxh_goodsyntax
__builtin_HEXAGON_S2_togglebit_r
__builtin_HEXAGON_S2_valignrb
-mno-fma4
__builtin_HEXAGON_S2_vsathub_nopack
__builtin_HEXAGON_S2_vsatwuh
__builtin_HEXAGON_S2_vsplicerb
__builtin_HEXAGON_S2_vsxthw
__builtin_HEXAGON_S2_vzxthw
__builtin_HEXAGON_S4_addi_lsr_ri
__builtin_HEXAGON_S4_clbpnorm
__builtin_HEXAGON_S4_extract
__builtin_HEXAGON_S4_or_andi
__builtin_HEXAGON_S4_ori_asl_ri
__builtin_HEXAGON_S4_subi_lsr_ri
LLiLLiiUIi
__builtin_HEXAGON_S4_vxsubaddh
__builtin_HEXAGON_S5_asrhub_rnd_sat_goodsyntax
__builtin_HEXAGON_Y2_dccleaninva
-mno-fsgsbase
__builtin_HEXAGON_S6_rol_i_p
__builtin_HEXAGON_S6_rol_i_p_and
__builtin_HEXAGON_S6_rol_i_r_acc
__builtin_HEXAGON_S6_rol_i_r_nac
__builtin_HEXAGON_S6_vtrunehb_ppp
v65|v66|v67|v68|v69
__builtin_HEXAGON_S2_mask
iUIiUIi
__builtin_HEXAGON_F2_dfmin
__builtin_HEXAGON_F2_dfmpylh
__builtin_HEXAGON_M7_dcmpyiwc_acc
__builtin_HEXAGON_M7_dcmpyrw_acc
__builtin_HEXAGON_M7_wcmpyiw_rnd
__builtin_HEXAGON_M7_wcmpyrw
__builtin_HEXAGON_M7_wcmpyrwc_rnd
-mno-global-merge
__builtin_HEXAGON_V6_extractw_128B
V16iV32i
__builtin_HEXAGON_V6_lvsplatw
__builtin_HEXAGON_V6_lvsplatw_128B
__builtin_HEXAGON_V6_pred_and_n
V64bV64b
__builtin_HEXAGON_V6_pred_or_n
__builtin_HEXAGON_V6_pred_or_n_128B
__builtin_HEXAGON_V6_vS32b_nqpred_ai
__builtin_HEXAGON_V6_vS32b_nt_nqpred_ai_128B
__builtin_HEXAGON_V6_vabsdiffh
__builtin_HEXAGON_V6_vabsdiffh_128B
__builtin_HEXAGON_V6_vabsdiffw
V16iV16i
__builtin_HEXAGON_V6_vabsw
-mno-hreset
V64iV64iV64i
__builtin_HEXAGON_V6_vaddbnq_128B
__builtin_HEXAGON_V6_vaddh_128B
__builtin_HEXAGON_V6_vaddh_dv_128B
__builtin_HEXAGON_V6_vaddhsat_128B
__builtin_HEXAGON_V6_vaddhw
__builtin_HEXAGON_V6_vaddubh_128B
__builtin_HEXAGON_V6_vaddubsat
__builtin_HEXAGON_V6_vadduhsat_dv_128B
__builtin_HEXAGON_V6_vaddw
__builtin_HEXAGON_V6_vaddwnq_128B
__builtin_HEXAGON_V6_vaddwq_128B
V16iV16iV16ii
__builtin_HEXAGON_V6_valignbi
__builtin_HEXAGON_V6_vand
-mno-hvx-qfloat
V32iV32iV128bi
__builtin_HEXAGON_V6_vandvrt_128B
V128bV128bV32ii
V16iV16ii
__builtin_HEXAGON_V6_vaslw_128B
__builtin_HEXAGON_V6_vaslwv
__builtin_HEXAGON_V6_vasrhbrndsat_128B
__builtin_HEXAGON_V6_vasrhubrndsat
__builtin_HEXAGON_V6_vasrw_128B
__builtin_HEXAGON_V6_vasrwh
__builtin_HEXAGON_V6_vasrwhsat_128B
__builtin_HEXAGON_V6_vasrwuhsat_128B
__builtin_HEXAGON_V6_vassignp_128B
__builtin_HEXAGON_V6_vavgh_128B
__builtin_HEXAGON_V6_vavgubrnd
-mno-iamcu
__builtin_HEXAGON_V6_vavgwrnd
__builtin_HEXAGON_V6_vcl0h_128B
__builtin_HEXAGON_V6_vd0
__builtin_HEXAGON_V6_vd0_128B
__builtin_HEXAGON_V6_vdealh
V32iV16iV16ii
__builtin_HEXAGON_V6_vdmpybus
__builtin_HEXAGON_V6_vdmpybus_128B
__builtin_HEXAGON_V6_vdmpybus_dv_acc_128B
__builtin_HEXAGON_V6_vdmpyhb_128B
__builtin_HEXAGON_V6_vdmpyhb_dv_acc
__builtin_HEXAGON_V6_vdmpyhisat
__builtin_HEXAGON_V6_vdmpyhisat_acc_128B
__builtin_HEXAGON_V6_vdmpyhsat_128B
-flimit-debug-info
Don't generate implicit SME instructions or mode switches
__builtin_HEXAGON_V6_vdmpyhvsat_acc
V32iV32iV32iV32i
__builtin_HEXAGON_V6_veqb
__builtin_HEXAGON_V6_veqb_128B
__builtin_HEXAGON_V6_veqb_or
__builtin_HEXAGON_V6_veqb_xor_128B
__builtin_HEXAGON_V6_veqh_or
__builtin_HEXAGON_V6_veqh_or_128B
__builtin_HEXAGON_V6_veqw_or
__builtin_HEXAGON_V6_veqw_xor_128B
__builtin_HEXAGON_V6_vgtb_or
__builtin_HEXAGON_V6_vgtb_xor
__builtin_HEXAGON_V6_vgth_or
__builtin_HEXAGON_V6_vgth_xor_128B
__builtin_HEXAGON_V6_vgtub_or
-mno-invariant-function-descriptors
__builtin_HEXAGON_V6_vgtuh_or
__builtin_HEXAGON_V6_vgtuh_xor_128B
__builtin_HEXAGON_V6_vgtuw_or
__builtin_HEXAGON_V6_vgtuw_xor
__builtin_HEXAGON_V6_vgtw_or
__builtin_HEXAGON_V6_vgtw_xor_128B
__builtin_HEXAGON_V6_vlalignbi
__builtin_HEXAGON_V6_vlalignbi_128B
__builtin_HEXAGON_V6_vlsrwv
__builtin_HEXAGON_V6_vlutvvb_128B
__builtin_HEXAGON_V6_vlutvwh
__builtin_HEXAGON_V6_vlutvwh_oracc
__builtin_HEXAGON_V6_vmaxub
__builtin_HEXAGON_V6_vmaxuh_128B
__builtin_HEXAGON_V6_vminh_128B
-mno-ldc1-sdc1
__builtin_HEXAGON_V6_vmpabus_acc
__builtin_HEXAGON_V6_vmpabusv_128B
__builtin_HEXAGON_V6_vmpahb_acc
__builtin_HEXAGON_V6_vmpybus
__builtin_HEXAGON_V6_vmpybus_acc_128B
__builtin_HEXAGON_V6_vmpybusv_128B
__builtin_HEXAGON_V6_vmpybv
__builtin_HEXAGON_V6_vmpybv_128B
__builtin_HEXAGON_V6_vmpyhsat_acc
__builtin_HEXAGON_V6_vmpyhsrs_128B
__builtin_HEXAGON_V6_vmpyhus_acc
__builtin_HEXAGON_V6_vmpyhv
__builtin_HEXAGON_V6_vmpyieoh
__builtin_HEXAGON_V6_vmpyiewh_acc_128B
__builtin_HEXAGON_V6_vmpyih
Restore the default behaviour of not generating long calls
__builtin_HEXAGON_V6_vmpyiowh
__builtin_HEXAGON_V6_vmpyiwb_128B
__builtin_HEXAGON_V6_vmpyiwh_acc
__builtin_HEXAGON_V6_vmpyowh
__builtin_HEXAGON_V6_vmpyowh_sacc
__builtin_HEXAGON_V6_vmpyub_128B
__builtin_HEXAGON_V6_vmpyubv_acc
__builtin_HEXAGON_V6_vmpyubv_acc_128B
__builtin_HEXAGON_V6_vmpyuhv_acc
__builtin_HEXAGON_V6_vmux_128B
__builtin_HEXAGON_V6_vnavgw
__builtin_HEXAGON_V6_vnormamth
__builtin_HEXAGON_V6_vor
__builtin_HEXAGON_V6_vpackeb_128B
__builtin_HEXAGON_V6_vpackhb_sat
-mno-lvi-hardening
__builtin_HEXAGON_V6_vpackwuh_sat
__builtin_HEXAGON_V6_vpopcounth_128B
__builtin_HEXAGON_V6_vrmpybus_acc
__builtin_HEXAGON_V6_vrmpybusi
__builtin_HEXAGON_V6_vrmpybusi_acc_128B
__builtin_HEXAGON_V6_vrmpybusv_128B
__builtin_HEXAGON_V6_vrmpybv_acc
__builtin_HEXAGON_V6_vrmpybv_acc_128B
__builtin_HEXAGON_V6_vrmpyubi_acc
__builtin_HEXAGON_V6_vrmpyubv_128B
__builtin_HEXAGON_V6_vroundhb
__builtin_HEXAGON_V6_vroundhub
__builtin_HEXAGON_V6_vrsadubi
__builtin_HEXAGON_V6_vrsadubi_acc_128B
__builtin_HEXAGON_V6_vsb
-mno-madd4
__builtin_HEXAGON_V6_vshuffb
__builtin_HEXAGON_V6_vshuffeb_128B
__builtin_HEXAGON_V6_vshuffvdd
__builtin_HEXAGON_V6_vshufoeb
__builtin_HEXAGON_V6_vsubb
__builtin_HEXAGON_V6_vsubb_dv_128B
__builtin_HEXAGON_V6_vsubh
__builtin_HEXAGON_V6_vsubh_128B
__builtin_HEXAGON_V6_vsubhsat
__builtin_HEXAGON_V6_vsubhsat_dv_128B
__builtin_HEXAGON_V6_vsububsat
__builtin_HEXAGON_V6_vsububsat_dv
__builtin_HEXAGON_V6_vsubuhw
__builtin_HEXAGON_V6_vsubw_128B
__builtin_HEXAGON_V6_vsubwnq_128B
-mno-mfcrf
__builtin_HEXAGON_V6_vswap_128B
__builtin_HEXAGON_V6_vtmpyb_128B
__builtin_HEXAGON_V6_vtmpybus_acc
__builtin_HEXAGON_V6_vtmpyhb
__builtin_HEXAGON_V6_vunpackh
V32iV32iV16i
__builtin_HEXAGON_V6_vunpackub
__builtin_HEXAGON_V6_vunpackub_128B
__builtin_HEXAGON_V6_vzh
hvxv62|hvxv65|hvxv66|hvxv67|hvxv68|hvxv69
__builtin_HEXAGON_V6_pred_scalar2v2_128B
__builtin_HEXAGON_V6_shuffeqh_128B
__builtin_HEXAGON_V6_vaddbsat_dv_128B
__builtin_HEXAGON_V6_vaddcarry_128B
__builtin_HEXAGON_V6_vaddclbw_128B
-mno-mma
__builtin_HEXAGON_V6_vadduhw_acc_128B
__builtin_HEXAGON_V6_vadduwsat_dv
__builtin_HEXAGON_V6_vandnqrt_acc_128B
V16iV64bV16i
__builtin_HEXAGON_V6_vasrhbsat_128B
__builtin_HEXAGON_V6_vasrwuhrndsat
__builtin_HEXAGON_V6_vlutvvb_nm_128B
__builtin_HEXAGON_V6_vlutvvb_oracci
__builtin_HEXAGON_V6_vlutvwh_nm_128B
__builtin_HEXAGON_V6_vlutvwh_oracci_128B
V64iV32iV32iUIi
__builtin_HEXAGON_V6_vmaxb_128B
__builtin_HEXAGON_V6_vmpauhb_acc_128B
__builtin_HEXAGON_V6_vmpyiwub
__builtin_HEXAGON_V6_vmpyiwub_acc
-mno-movdiri
__builtin_HEXAGON_V6_vsubbsat_128B
__builtin_HEXAGON_V6_vsubcarry
__builtin_HEXAGON_V6_vsubuwsat_128B
__builtin_HEXAGON_V6_vsubuwsat_dv_128B
__builtin_HEXAGON_V6_vaslh_acc
__builtin_HEXAGON_V6_vasrh_acc_128B
__builtin_HEXAGON_V6_vasruwuhsat
__builtin_HEXAGON_V6_vasruwuhsat_128B
__builtin_HEXAGON_V6_vavguwrnd
__builtin_HEXAGON_V6_vdd0_128B
vv*iiV32i
vv*V64biiV16i
__builtin_HEXAGON_V6_vgathermhwq
vv*V128biiV64i
__builtin_HEXAGON_V6_vlut4
-mno-ms-bitfields
__builtin_HEXAGON_V6_vmpahhsat
V32iV32iV32iLLi
__builtin_HEXAGON_V6_vmpyh_acc
__builtin_HEXAGON_V6_vmpyuhe
__builtin_HEXAGON_V6_vprefixqb
V32iV128b
__builtin_HEXAGON_V6_vscattermh
viiV16iV16i
__builtin_HEXAGON_V6_vscattermhq_128B
viiV32iV16i
__builtin_HEXAGON_V6_vscattermhwq
__builtin_HEXAGON_V6_vscattermhwq_128B
__builtin_HEXAGON_V6_vscattermwq
V16iV16iV16iV64b
__builtin_HEXAGON_V6_vasr_into
-mno-mt
V64iV64iV64iUIi
V64iV64iV64iV64iUIi
__builtin_HEXAGON_V6_vabs_hf
__builtin_HEXAGON_V6_vabs_sf
__builtin_HEXAGON_V6_vadd_qf16
__builtin_HEXAGON_V6_vadd_qf16_mix_128B
__builtin_HEXAGON_V6_vadd_sf
__builtin_HEXAGON_V6_vadd_sf_128B
__builtin_HEXAGON_V6_vconv_hf_qf16
__builtin_HEXAGON_V6_vconv_hf_qf32_128B
__builtin_HEXAGON_V6_vcvt_h_hf
__builtin_HEXAGON_V6_vcvt_hf_b
__builtin_HEXAGON_V6_vcvt_hf_ub
__builtin_HEXAGON_V6_vcvt_hf_uh_128B
__builtin_HEXAGON_V6_vcvt_uh_hf
-mno-mwaitx
__builtin_HEXAGON_V6_vfmax_sf
__builtin_HEXAGON_V6_vfmin_hf_128B
__builtin_HEXAGON_V6_vfneg_sf
__builtin_HEXAGON_V6_vgthf
__builtin_HEXAGON_V6_vgthf_xor
__builtin_HEXAGON_V6_vgtsf_128B
__builtin_HEXAGON_V6_vgtsf_xor
__builtin_HEXAGON_V6_vgtsf_xor_128B
__builtin_HEXAGON_V6_vmin_sf
__builtin_HEXAGON_V6_vmpy_hf_hf_128B
__builtin_HEXAGON_V6_vmpy_qf16_hf
__builtin_HEXAGON_V6_vmpy_qf16_mix_hf
__builtin_HEXAGON_V6_vmpy_qf32_mix_hf
__builtin_HEXAGON_V6_vmpy_qf32_qf16_128B
__builtin_HEXAGON_V6_vmpy_sf_hf
-mno-nvj
__builtin_HEXAGON_V6_vsub_qf16
__builtin_HEXAGON_V6_vsub_qf16_mix_128B
__builtin_HEXAGON_V6_vsub_sf
__builtin_HEXAGON_V6_vsub_sf_hf
hvxv69
__builtin_HEXAGON_V6_vasrvuhubsat
-flto-jobs=
Enable linker dead stripping of globals in AddressSanitizer
cl_ext_float_atomics __opencl_c_ext_fp32_global_atomic_min_max __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
$r12
$r15
$r20
$r22
$r28
$r31
$fa1
$fa6
$ft0
$ft6
$ft9
$ft14
Don't generate local calls to out-of-line atomic operations
$fs4
-fdefault-calling-conv=regcall
-n8:16:32
__m68k__
__mc68010
__mc68020
mc68040
__mc68040__
cf,nochecks
__builtin_mips_subu_qb
__builtin_mips_addq_s_ph
__builtin_mips_madd
__builtin_mips_addq_s_w
__builtin_mips_addwc
V2sV2s
__builtin_mips_precrq_qb_ph
__builtin_mips_preceq_w_phl
__builtin_mips_precequ_ph_qbl
__builtin_mips_preceu_ph_qbl
__builtin_mips_preceu_ph_qbla
V2sV2si
__builtin_mips_shra_r_ph
V2sV4ScV2s
__builtin_mips_muleu_s_ph_qbr
__builtin_mips_maq_s_w_phl
__builtin_mips_maq_sa_w_phr
LLiLLiV4ScV4Sc
__builtin_mips_dpsu_h_qbl
__builtin_mips_cmpu_eq_qb
__builtin_mips_cmpu_le_qb
__builtin_mips_cmp_eq_ph
-mno-pclmul
__unknown_anytype
Darwin
$ft5
__builtin_mips_subu_s_qb
iV2s
Disable generation of instruction packets
iso646.h
-mno-pcrel
signal.h
__builtin_mips_shra_r_w
tgmath.h
threads.h
$fa0
.unroll_inner.tripcount.
wctype.h
-mno-popcntd
cerrno
-darwin-target-variant-triple
ciso646
climits
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_load_store __opencl_c_ext_fp16_local_atomic_load_store __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
-mno-pconfig
cstdalign
-mno-power10-vector
cstdint
iv*i
__builtin_mips_adduh_r_qb
__builtin_mips_cmpgdu_lt_qb
tuple
type_traits
-targets=
-mno-power9-vector
__builtin_mips_subu_ph
dist_schedule
__builtin_msa_add_a_b
stdexcept
ostream
-unbundle
istream
-mno-prefixed
.copyin.dst
-fsanitize-address-use-after-scope
system_error
LoopVar
dlfcn.h
__builtin_msa_addvi_w
-mno-power8-vector
-mno-ptwrite
langinfo.h
-fno-align-jumps
netinet/in.h
.omp.comb.lb
pwd.h
__builtin_msa_bclri_d
search.h
-mno-rdpid
spawn.h
--host-triple=
__builtin_msa_binsli_d
sys/msg.h
sys/sem.h
.step
sys/socket.h
-mno-rdrnd
sys/times.h
__builtin_msa_bnz_h
sys/utsname.h
sys/wait.h
__builtin_msa_bseli_b
syslog.h
 ModuleMacro 
-mno-red-zone
 active
--linker-path=
__FILE__
-mno-rdpru
__FLT_EVAL_METHOD__
'enable_if'
__INCLUDE_LEVEL__
-mno-relax-all
__identifier
__builtin_msa_clti_u_h
__has_feature
-fmacro-prefix-map=
__has_declspec_attribute
-mno-rdseed
__has_warning
Do not produce relaxation hints for linkers to try optimizing PIC call sequences into direct calls (MIPS only)
__is_identifier
vloxseg4ei8_v
vloxseg6ei8_v
vloxseg4ei32_v
__builtin_msa_dpsub_u_h
-fno-openmp-target-debug
Enable control flow integrity (CFI) checks for cross-DSO calls.
"%02d:%02d:%02d"
V2LLiV2d
attribute_availability_with_version_underscores
attribute_availability_with_strict
attribute_availability_with_replacement
darwinpcs
__builtin_msa_fcun_d
-mno-restrict-it
ptrauth_restricted_intptr_qualifier
V2dV4f
"%s %2d %4d"
ptrauth_function_pointer_type_discrimination
objc_default_synthesize_properties
-fno-openmp-target-new-runtime
__builtin_unsafe_forge_bidi_indexable
-mno-retpoline-external-thunk
__builtin_unsafe_forge_terminated_by
Disable linker relaxation
pragma hdrstop
-soft-float
vsseg6e16_v
-fsanitize-cfi-icall-generalize-pointers
pragma diagnostic
Allow generation of complex IT blocks.
#pragma clang deprecated
vsseg4e32_v
#pragma clang restrict_expansion
__VA_OPT__
-flto-unit
Enable frequency counters in sanitizer coverage
__builtin_msa_ftrunc_u_d
+mips32r2
__builtin_msa_ilvev_d
 obj/fn/builtin macros expanded, 
Preprocessor Memory: 
+mips32r5
  Macro Expanded Tokens: 
Disable using library calls for save and restore
  Predefines Buffer: 
-mno-rtm
V8Ssv*Ii
-fimplicit-none
enum
+mips64r3
objc_category
-mno-seses
objc_interface
vssseg6e16_v
objc_implementation
hasType(functionType)
type_alias
-massembler-fatal-warnings
variable(is_local)
-mno-sgx
xclude_from_explicit_instantiation
vssseg7e32_v
--compress-debug-sections
not a builtin function
vssseg5e16_v
V16ScV16Sc
vssseg7e16_v
-mno-shstk
LLdLLdLLd
vssseg8e64_v
__builtin_copysignl
__builtin_msa_nor_v
__builtin_msa_ori_b
__builtin_fabsf
-mno-simd128
__builtin_fabsf16
-fno-aligned-new
-ffp-model=
ddi*
strict
LLdLLdi*
-mno-soft-float
__builtin_huge_valf
ignore
__builtin_huge_valf16
-fno-trapping-math
-mno-skip-rax-setup
-mno-spe
__builtin_ldexp
-ffp-model=strict
__builtin_ldexpf128
LLdLLdi
__builtin_msa_str_d
__builtin_modff
fff*
-mno-sse3
LdLdLd*
-freciprocal-math
__builtin_nansf16
__builtin_nansf128
__builtin_powi
__builtin_powil
__builtin_pow
Place each function in its own section
No implicit typing allowed unless overridden by IMPLICIT statements
-mno-sse4.2
vsoxseg3ei16_v
__nvvm_read_ptx_sreg_ntid_z
__nvvm_read_ptx_sreg_ctaid_z
__nvvm_read_ptx_sreg_nctaid_y
__nvvm_read_ptx_sreg_nwarpid
__nvvm_read_ptx_sreg_nsmid
__nvvm_read_ptx_sreg_lanemask_gt
__nvvm_prmt
(sm_80|sm_86|sm_87|sm_89|sm_90),(ptx70|ptx71|ptx72|ptx73|ptx74|ptx75|ptx76|ptx77|ptx78)
__nvvm_fmin_ftz_xorsign_abs_f16
__nvvm_fmin_f16x2
__nvvm_fmin_xorsign_abs_f16x2
__nvvm_fmin_ftz_xorsign_abs_f16x2
__nvvm_fmin_bf16x2
__nvvm_fmin_xorsign_abs_bf16x2
__nvvm_fmin_ftz_nan_f
__nvvm_fmin_ftz_xorsign_abs_f
__nvvm_fmax_nan_f16
__nvvm_fmax_ftz_xorsign_abs_f16
__nvvm_fmax_nan_f16x2
Disable stack probes which are enabled by default
__nvvm_fmax_xorsign_abs_bf16
__nvvm_fmax_nan_bf16x2
__nvvm_fmax_nan_f
__nvvm_fmax_xorsign_abs_f
__nvvm_mulhi_ui
__nvvm_mul_rn_ftz_f
__nvvm_mul_rm_f
__nvvm_mul_rp_ftz_f
__nvvm_mul24_ui
__nvvm_div_rn_ftz_f
__nvvm_div_rm_f
__nvvm_div_rp_f
__nvvm_sad_ui
__nvvm_floor_d
__nvvm_fabs_f
-mno-tgsplit
__nvvm_saturate_ftz_f
__nvvm_ex2_approx_ftz_f
__nvvm_ex2_approx_f16x2
__nvvm_lg2_approx_ftz_f
__nvvm_cos_approx_f
__nvvm_fma_rn_ftz_f16
__nvvm_fma_rn_f16x2
V2hV2hV2hV2h
UsUsUsUs
ZUiZUiZUiZUi
__nvvm_fma_rz_f
__nvvm_fma_rm_f
__nvvm_fma_rp_d
__nvvm_rcp_rz_ftz_f
__nvvm_rcp_rp_ftz_f
Disable direct TLS access through segment registers
__nvvm_sqrt_rn_f
__nvvm_sqrt_rm_ftz_f
__nvvm_sqrt_approx_f
__nvvm_sqrt_rz_d
__nvvm_add_rn_ftz_f
__nvvm_add_rz_f
__nvvm_add_rn_d
__nvvm_add_rz_d
__nvvm_d2f_rm_ftz
__nvvm_d2f_rp
__nvvm_d2ui_rn
__nvvm_d2ui_rz
__nvvm_i2d_rp
__nvvm_ui2d_rz
__nvvm_f2i_rz_ftz
-mno-uintr
__nvvm_f2ui_rz_ftz
__nvvm_f2ui_rm
__nvvm_i2f_rm
__nvvm_ui2f_rn
__nvvm_d2i_lo
__nvvm_f2ll_rn
__nvvm_f2ll_rp_ftz
__nvvm_f2ll_rp
__nvvm_f2ull_rm
__nvvm_d2ll_rn
ULLid
__nvvm_d2ull_rm
__nvvm_ull2f_rn
__nvvm_ull2f_rm
__nvvm_ll2d_rm
-mno-vaes
__nvvm_f2h_rn
__nvvm_ff2bf16x2_rn_relu
__nvvm_ff2f16x2_rn_relu
__nvvm_ff2f16x2_rz_relu
__nvvm_f2tf32_rna
__nvvm_bitcast_i2f
ptx60|ptx61|ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74|ptx75|ptx76|ptx77|ptx78
__syncthreads
__nvvm_barrier_sync_cnt
ffii
__nvvm_shfl_idx_i32
__nvvm_shfl_sync_down_i32
__nvvm_shfl_sync_bfly_i32
__nvvm_shfl_sync_idx_f32
-mno-vx
(sm_70|sm_72|sm_75|sm_80|sm_86|sm_87|sm_89|sm_90),(ptx60|ptx61|ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74|ptx75|ptx76|ptx77|ptx78)
__nvvm_match_all_sync_i32p
__nvvm_redux_sync_min
__nvvm_redux_sync_umin
__nvvm_membar_gl
vWi*i
__nvvm_mbarrier_inval_shared
vWi*3
__nvvm_mbarrier_arrive_noComplete_shared
__nvvm_mbarrier_arrive_drop_shared
__nvvm_mbarrier_test_wait_shared
__nvvm_mbarrier_pending_count
V4fiiii
__builtin_ptx_read_image2Dii_
V4iiiff
-mno-wavefrontsize64
viiiffff
__builtin_ptx_write_image2Dui_
__builtin_ptx_get_image_channel_data_typei_
__nvvm_atom_add_gen_i
LiLiD*Li
__nvvm_atom_add_gen_ll
__nvvm_atom_cta_add_gen_f
__nvvm_atom_sys_add_gen_f
__nvvm_atom_sub_gen_ll
__nvvm_atom_sys_xchg_gen_i
__nvvm_atom_cta_xchg_gen_ll
__nvvm_atom_max_gen_i
__nvvm_atom_sys_max_gen_ui
__nvvm_atom_sys_max_gen_l
__nvvm_atom_max_gen_ll
-mno-x87
__nvvm_atom_cta_min_gen_i
__nvvm_atom_cta_min_gen_ui
__nvvm_atom_min_gen_ul
__nvvm_atom_sys_min_gen_ul
__nvvm_atom_sys_min_gen_ull
__nvvm_atom_sys_inc_gen_ui
__nvvm_atom_cta_and_gen_i
__nvvm_atom_sys_and_gen_i
__nvvm_atom_or_gen_i
__nvvm_atom_or_gen_l
__nvvm_atom_sys_or_gen_ll
__nvvm_atom_cta_xor_gen_i
__nvvm_atom_cta_xor_gen_ll
iiD*ii
LiLiD*LiLi
-mno-xsaveopt
__nvvm_ldg_c
ssC*
__nvvm_ldg_ll
__nvvm_ldg_uc
__nvvm_ldg_ul
ULLiULLiC*
__nvvm_ldg_c2
E2cE2cC*
__nvvm_ldg_i2
E4iE4iC*
__nvvm_ldg_uc4
__nvvm_ldg_us2
__nvvm_ldg_ui4
E2ULLiE2ULLiC*
__nvvm_ldg_d2
-mnocrc
vi*iC*UiIi
__hmma_m16n16k16_ld_c_f32
vf*f*UiIi
(sm_70|sm_72|sm_75|sm_80|sm_86|sm_87|sm_89|sm_90),(ptx61|ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74|ptx75|ptx76|ptx77|ptx78)
__hmma_m8n32k16_ld_a
__hmma_m8n32k16_ld_c_f32
__hmma_m16n16k16_mma_f32f16
vf*iC*iC*iC*IiIi
__hmma_m32n8k16_mma_f32f32
__hmma_m8n32k16_mma_f32f16
__bmma_m8n8k128_ld_b_b1
__bmma_m8n8k128_mma_and_popc_b1
(sm_72|sm_75|sm_80|sm_86|sm_87|sm_89|sm_90),(ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74|ptx75|ptx76|ptx77|ptx78)
__imma_m16n16k16_ld_b_u8
__imma_m16n16k16_mma_s8
-mnontrapping-fptoint
__imma_m8n32k16_ld_a_s8
__imma_m8n32k16_ld_b_u8
__imma_m8n8k32_ld_a_s4
__imma_m8n8k32_ld_b_s4
__dmma_m8n8k4_ld_a
__dmma_m8n8k4_ld_c
__mma_bf16_m16n16k16_ld_b
__mma_bf16_m16n16k16_mma_f32
__mma_tf32_m16n16k8_ld_a
__mma_m16n16k8_st_c_f32
__nvvm_cp_async_mbarrier_arrive_noinc_shared
vv*3vC*1
__nvvm_cp_async_wait_all
__nvvm_abs_bf16x2
e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64
Enable generation of new-value jumps
-fno-apinotes
vfmadd_vf
__STATIC__
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_OS_VERSION_MIN_REQUIRED__
_WIN32
__MSVCRT__
_CPPUNWIND
_M_FP_FAST
_M_FP_STRICT
_MSVC_LANG
_RVALUE_REFERENCES_V2_SUPPORTED
_KERNEL_MODE
vfwmsac_vf
-fsanitize-coverage=
__builtin_ppc_eieio
__builtin_ppc_iospace_lwsync
__builtin_ppc_dcbfl
__builtin_ppc_dcbtst
__builtin_ppc_fric
__builtin_ppc_frip
__builtin_ppc_friz
__builtin_ppc_fsqrt
iiD*i*i
__builtin_ppc_fetch_and_and
__builtin_ppc_fetch_and_or
__builtin_ppc_lwarx
__builtin_ppc_lbarx
__builtin_ppc_sthcx
isD*s
__builtin_ppc_trap
__builtin_ppc_fcfid
__builtin_ppc_fctiwz
__builtin_ppc_fctuwz
UWiUWiUWiUWIi
__builtin_ppc_compare_exp_gt
__builtin_ppc_swdivs
__builtin_ppc_cmpeqb
__builtin_ppc_mulhdu
__builtin_ppc_mulhwu
__builtin_ppc_rlwnm
__builtin_ppc_rlwimi
__builtin_ppc_load4r
ULLiULLi*
__builtin_ppc_store8r
Provide information about a particular module file
vUIiUi
__builtin_ppc_insert_exp
__builtin_ppc_fnmadds
__builtin_ppc_fnmsubs
__builtin_ppc_mfmsr
__builtin_ppc_mtmsr
__builtin_ppc_addex
LLiLLiLLiCIi
__builtin_ppc_minfe
__builtin_ppc_fnabs
__builtin_altivec_vaddsbs
__builtin_altivec_vaddshs
__builtin_altivec_vaddcuq
__builtin_altivec_vadduqm
__builtin_altivec_vsubsbs
-momit-leaf-frame-pointer
__builtin_altivec_vsubecuq
__builtin_altivec_vsubcuq_c
__builtin_altivec_vavguh
__builtin_altivec_vavguw
__builtin_altivec_vctsxs
V4UiV4fIi
__builtin_altivec_dstt
__builtin_altivec_dstst
__builtin_altivec_lvebx
V8sLivC*
__builtin_altivec_lvsr
__builtin_altivec_vmhaddshs
__builtin_altivec_vmsumuhm
V4SiV8SsV8SsV4Si
__builtin_altivec_vmulesb
Generate local calls to out-of-line atomic operations
__builtin_altivec_vmulouw
V1ULLLiV2ULLiV2ULLi
__builtin_altivec_vmsumcud
__builtin_altivec_vnmsubfp
V16ScV8SsV8Ss
__builtin_altivec_vpkswss
V8UsV4SiV4Si
__builtin_altivec_vpksdss
__builtin_altivec_vperm_4si
vV4iLiv*
vV8sLiv*
__builtin_altivec_vcmpbfp
__builtin_altivec_vcmpeqfp
__builtin_altivec_vcmpnew
V16cV16ScV16Sc
Use packed stack layout (SystemZ only).
V4iV4SiV4Si
__builtin_altivec_vcmpgtsd
V1LLLiV1ULLLiV1ULLLi
V1LLLiV1SLLLiV1SLLLi
__builtin_altivec_vcmpgtuq_p
__builtin_altivec_vmaxub
__builtin_altivec_vmaxsd
__builtin_altivec_vmaxud
__builtin_altivec_vminuh
__builtin_altivec_vminsd
__builtin_altivec_vrefp
V16cV16cV16Uc
V2LLiV2LLiV2ULLi
__builtin_altivec_vsl
__builtin_altivec_vsrah
Specify maximum number of prefixes to use for padding
V4UiV16UcV4Ui
__builtin_altivec_vsum2sws
__builtin_altivec_vupkhpx
__builtin_altivec_vupkhsh
__builtin_altivec_vupklsh
iiV4fV4f
iiV8sV8s
__builtin_altivec_vcmpequw_p
__builtin_altivec_vcmpnew_p
iiV16ScV16Sc
__builtin_altivec_vcmpgtuh_p
__builtin_altivec_vcmpgtsw_p
iiV2ULLiV2ULLi
V16UcV16Uc
__builtin_altivec_crypto_vsbox
-mpconfig
__builtin_altivec_crypto_vcipher
__builtin_altivec_crypto_vncipherlast
__builtin_altivec_vclzb
V8UsV8Us
__builtin_altivec_vctzw
V16UcV16UcV16UcIi
SiV16Uc
__builtin_altivec_vctzlsbb
__builtin_altivec_vpopcntw
__builtin_altivec_vabsduh
__builtin_altivec_vrldmi
__builtin_altivec_vrldnm
V4SiV8Ss
__builtin_altivec_vextsw2d
__builtin_altivec_vextractbm
-mpopcnt
__builtin_altivec_vdiveuw
__builtin_altivec_vdivesq
__builtin_altivec_vmulhsd
__builtin_altivec_vexpandbm
ULLiV16UcUi
__builtin_altivec_vcntmbw
V16UcULLi
__builtin_altivec_mtvsrhm
V1ULLLiULLi
__builtin_altivec_vstribr
__builtin_altivec_vstribr_p
__builtin_altivec_vstribl_p
ULLiV1ULLLiIi
__builtin_altivec_vclrrb
__builtin_altivec_vinsblx
-mprefer-vector-width=
__builtin_altivec_vinswrx
__builtin_altivec_vinsdrx
V8UsV8UsUiV8Us
__builtin_altivec_vinswvlx
V16UcV16UcULLiIi
__builtin_altivec_vinsd_elt
__builtin_altivec_vextduhvlx
V2ULLiV8UsV8UsUi
__builtin_altivec_vextddvrx
__builtin_vsx_lxvd2x
__builtin_vsx_lxvw4x_be
__builtin_vsx_stxvd2x
vV4iSLLivC*
__builtin_vsx_lxvll
__builtin_vsx_stxvll
-mprfchw
__builtin_vsx_xsmindp
__builtin_vsx_xvrdpip
iiV2dV2d
__builtin_vsx_xvcmpgedp
__builtin_vsx_xvcmpgtdp_p
__builtin_vsx_xvrspim
__builtin_vsx_xvrdpiz
__builtin_vsx_xvrspiz
__builtin_vsx_xvnmaddadp
__builtin_vsx_xvnmsubasp
__builtin_vsx_xvsqrtdp
__builtin_vsx_xxleqv
V16UcV16Uci
__builtin_vsx_xxgenpcvwm
V2dV2ULLiV2ULLi
V4SiV2d
__builtin_vsx_xvcvspsxds
__builtin_vsx_xvcvuxwdp
__builtin_vsx_xvcvspdp
V4fV2d
V4fV8Us
__builtin_vsx_xvtstdcsp
__builtin_vsx_insertword
V2ULLiV2ULLiV2ULLiV2ULLiIi
__builtin_vsx_xvtdivdp
iV2d
iV4f
__builtin_vsx_xxblendvd
__builtin_addf128_round_to_odd
__builtin_divf128_round_to_odd
Enable hexagon-qdsp6 backward compatibility
__builtin_ppc_rsqrtf
__builtin_ppc_recipdivd
__builtin_tabortdci
__builtin_tabortwci
__builtin_tresume
vLUi
__builtin_set_texasru
__builtin_divde
__builtin_pdepd
__builtin_unpack_longdouble
__builtin_pack_longdouble
ULLiV1LLLii
__builtin_setrnd
__builtin_mma_stxvp
-mrdpru
__builtin_vsx_disassemble_pair
__builtin_mma_xxmtacc
__builtin_mma_xvi16ger2
__builtin_mma_xvf16ger2
__builtin_mma_pmxvi16ger2s
__builtin_mma_pmxvf64ger
__builtin_mma_xvi16ger2spp
__builtin_mma_pmxvi4ger8pp
__builtin_mma_xvf16ger2np
__builtin_mma_pmxvf16ger2pn
__builtin_mma_xvf32gernp
__builtin_mma_pmxvf32gerpp
__builtin_mma_xvf64gernp
__builtin_mma_pmxvf64gerpn
__builtin_mma_pmxvf64gernn
Allow reassociation transformations for floating-point instructions
+power8-vector
+power9-vector
+privileged
+isa-v207-instructions
__powerpc__
__PPC64__
_BIG_ENDIAN
_CALL_ELF
__LONGDOUBLE64
_ARCH_
_ARCH_604
_ARCH_PWR5
_ARCH_PWR9
__NO_LWSYNC__
__SPE__
Generate a __mcount_loc section entry for each __fentry__ call.
__ROP_PROTECT__
__HAVE_BSWAP__
-mmma
-mpaired-vector-memops
pcrelative-memops
-mregparm
vrsave
__popcntb
__poppar4
__sync
__dcbflp
__icbt
__compare_and_swaplp
__fetch_and_orlp
__ldarx
__stdcx
-mrelax-pic-calls
__fcfid
__fctidz
__cmpeqb
__setb
__maddhd
__rlwnm
__load8r
__store2r
__mtfsf
__fmsub
__fnmsubs
__fres
__vcipherlast
__vpermxor
__vpmsumh
-mrelaxed-simd
__cntlz4
__builtin_clzll
__builtin_ctz
__builtin_ctzll
__builtin_fma
__abs
__builtin_llabs
__popcnt4
__rotatel8
__setflm
__mfmsr
__mfspr
__frins
__friz
__frsqrtes
The relocation model to use
__compare_exp_eq
__swdivs
__builtin_maxfs
__builtin_minfl
-mpower10-vector
vs14
vs17
vs22
vs24
vs30
vs33
vs37
-mretpoline-external-thunk
vs46
vs49
vs54
vs55
-flto
__ibm128
__riscv
__riscv_float_abi_double
__riscv_float_abi_soft
__riscv_muldiv
__riscv_fdiv
__riscv_compressed
__riscv_vector
__builtin_rvv_vadd_vv_tamu
__builtin_rvv_vwaddu_vv_tumu
__builtin_rvv_vluxei8_v_tu
__builtin_rvv_vluxei8_v_tumu
__builtin_rvv_vlse32_v_tuma
__builtin_rvv_vloxseg3ei8_v_ta
__builtin_rvv_vloxseg3ei8_v_tamu
__builtin_rvv_vloxseg4ei8_v_tu
__builtin_rvv_vloxseg5ei8_v_tu
__builtin_rvv_vloxseg5ei8_v_tama
__builtin_rvv_vloxseg6ei8_v_tuma
Enable using library calls for save and restore
__builtin_rvv_vloxseg7ei8_v_tamu
__builtin_rvv_vlse64_v_tumu
__builtin_rvv_vloxseg8ei8_v_tu
__builtin_rvv_vloxseg8ei8_v_tuma
__builtin_rvv_vloxseg2ei16_v_tuma
__builtin_rvv_vloxseg3ei16_v_ta
__builtin_rvv_vloxseg3ei16_v_tamu
__builtin_rvv_vloxseg4ei16_v_ta
__builtin_rvv_vloxseg5ei16_v_tu
__builtin_rvv_vloxseg5ei16_v_tama
__builtin_rvv_vloxseg6ei16_v_tuma
__builtin_rvv_vloxseg6ei16_v_tamu
__builtin_rvv_vloxseg7ei16_v_tamu
__builtin_rvv_vloxseg8ei16_v_tumu
__builtin_rvv_vloxseg2ei32_v_tu
-mserialize
__builtin_rvv_vloxseg3ei32_v_tuma
__builtin_rvv_vloxseg4ei32_v_ta
__builtin_rvv_vloxseg4ei32_v_tamu
__builtin_rvv_vloxseg5ei32_v_tu
__builtin_rvv_vloxseg6ei32_v_tu
__builtin_rvv_vloxseg6ei32_v_tama
__builtin_rvv_vloxseg7ei32_v_tuma
__builtin_rvv_vloxseg7ei32_v_tama
__builtin_rvv_vloxseg8ei32_v_tamu
__builtin_rvv_vloxseg2ei64_v_ta
__builtin_rvv_vloxseg2ei64_v_tamu
__builtin_rvv_vloxseg3ei64_v_tu
__builtin_rvv_vloxseg4ei64_v_tu
__builtin_rvv_vloxseg4ei64_v_tama
__builtin_rvv_vloxseg5ei64_v_tumu
-msha
__builtin_rvv_vloxseg6ei64_v_tamu
__builtin_rvv_vloxseg7ei64_v_tumu
__builtin_rvv_vloxseg8ei64_v_tu
__builtin_rvv_vloxseg8ei64_v_tuma
__builtin_rvv_vloxseg2ei8_v_tuma
__builtin_rvv_vsse32_v
__builtin_rvv_vluxei64_v_tuma
__builtin_rvv_vluxei64_v_tama
__builtin_rvv_vluxei16_v_tu
__builtin_rvv_vluxei16_v_tama
__builtin_rvv_vsseg5e8_v_m
__builtin_rvv_vsseg6e8_v_m
__builtin_rvv_vsseg2e16_v_m
__builtin_rvv_vsseg4e16_v
__builtin_rvv_vsseg6e16_v_m
a_key,b_key
__builtin_rvv_vsseg7e16_v_m
__builtin_rvv_vsseg2e32_v
__builtin_rvv_vsseg4e32_v_m
__builtin_rvv_vsseg5e32_v_m
__builtin_rvv_vsseg8e32_v_m
__builtin_rvv_vsseg3e64_v
__builtin_rvv_vsseg5e64_v_m
__builtin_rvv_vsseg6e64_v
__builtin_rvv_vssseg3e8_v_m
__builtin_rvv_vssseg5e8_v
__builtin_rvv_vssseg7e8_v_m
__builtin_rvv_vssseg8e8_v_m
__builtin_rvv_vssseg4e16_v_m
__builtin_rvv_vssseg6e16_v
__builtin_rvv_vssseg7e16_v_m
-msimd128
__builtin_rvv_vssseg5e32_v_m
__builtin_rvv_vssseg7e32_v
__builtin_rvv_vssseg2e64_v_m
__builtin_rvv_vssseg3e64_v_m
__builtin_rvv_vssseg6e64_v_m
__builtin_rvv_vssseg8e64_v
__builtin_rvv_vsuxseg4ei8_v_m
__builtin_rvv_vsuxseg5ei8_v
__builtin_rvv_vsuxseg8ei8_v_m
__builtin_rvv_vsuxseg3ei16_v
__builtin_rvv_vsuxseg5ei16_v_m
__builtin_rvv_vsuxseg6ei16_v_m
__builtin_rvv_vsuxseg2ei32_v_m
__builtin_rvv_vsuxseg4ei32_v
__builtin_rvv_vsuxseg6ei32_v_m
Skip setting up RAX register when passing variable arguments (x86 only)
__builtin_rvv_vsuxseg3ei64_v_m
__builtin_rvv_vsuxseg5ei64_v
__builtin_rvv_vsuxseg7ei64_v_m
__builtin_rvv_vsuxseg8ei64_v_m
__builtin_rvv_vloxei8_v_tuma
__builtin_rvv_vloxei16_v_ta
__builtin_rvv_vloxei16_v_tamu
__builtin_rvv_vloxei32_v_ta
__builtin_rvv_vsoxseg2ei8_v_m
__builtin_rvv_vsoxseg4ei8_v
__builtin_rvv_vsoxseg6ei8_v_m
__builtin_rvv_vsoxseg7ei8_v_m
__builtin_rvv_vloxei64_v_tamu
__builtin_rvv_vsoxseg2ei16_v
__builtin_rvv_vsoxseg4ei16_v
-msmall-data-threshold=
__builtin_rvv_vsoxseg8ei16_v_m
__builtin_rvv_vsoxseg3ei32_v
__builtin_rvv_vsoxseg5ei32_v_m
__builtin_rvv_vsoxseg6ei32_v_m
__builtin_rvv_vsoxseg2ei64_v_m
__builtin_rvv_vsoxseg4ei64_v
__builtin_rvv_vsoxseg6ei64_v_m
__builtin_rvv_vsoxseg7ei64_v
__builtin_rvv_vadd_vx_tuma
__builtin_rvv_vsub_vv_ta
__builtin_rvv_vsub_vv_tamu
__builtin_rvv_vsub_vx_tu
__builtin_rvv_vrsub_vx_tu
__builtin_rvv_vrsub_vx_tama
__builtin_rvv_vwaddu_vx_tuma
-mspe
__builtin_rvv_vwsubu_vv_tamu
__builtin_rvv_vwsubu_vx_tumu
__builtin_rvv_vwadd_vv_tu
__builtin_rvv_vwadd_vv_tuma
__builtin_rvv_vwadd_vx_tuma
__builtin_rvv_vwsub_vv_ta
__builtin_rvv_vwsub_vv_tamu
__builtin_rvv_vwsub_vx_ta
__builtin_rvv_vwaddu_wx_tu
__builtin_rvv_vwaddu_wx_tama
__builtin_rvv_vwsubu_wv_tuma
__builtin_rvv_vwsubu_wv_tamu
__builtin_rvv_vwsubu_wx_tamu
__builtin_rvv_vwadd_wv_tumu
__builtin_rvv_vwadd_wv_tama
-msse4.2
__builtin_rvv_vwsub_wv_tuma
__builtin_rvv_vwsub_wx_ta
__builtin_rvv_vwsub_wx_tamu
__builtin_rvv_vwcvt_x_x_v_tu
__builtin_rvv_vadc_vvm_tu
__builtin_rvv_vsbc_vvm_ta
__builtin_rvv_vmadc_vxm
__builtin_rvv_vmadc_vv
__builtin_rvv_vand_vv_tu
__builtin_rvv_vand_vv_tama
__builtin_rvv_vand_vx_tuma
__builtin_rvv_vand_vx_tamu
__builtin_rvv_vxor_vv_tamu
__builtin_rvv_vxor_vx_tumu
__builtin_rvv_vor_vv_tu
-mssse3
__builtin_rvv_vor_vx_tuma
__builtin_rvv_vsll_vv_ta
__builtin_rvv_vsll_vv_tamu
__builtin_rvv_vsll_vx_tu
__builtin_rvv_vsrl_vv_tu
__builtin_rvv_vsrl_vv_tama
__builtin_rvv_vsrl_vx_tuma
__builtin_rvv_vsrl_vx_tama
__builtin_rvv_vsra_vv_tamu
__builtin_rvv_vsra_vx_tumu
__builtin_rvv_vnsrl_wv_tu
__builtin_rvv_vnsrl_wv_tuma
__builtin_rvv_vnsrl_wx_tuma
__builtin_rvv_vnsra_wv_ta
__builtin_rvv_vnsra_wv_tama
Enable stack probes
__builtin_rvv_vncvt_x_x_w_tu
__builtin_rvv_vncvt_x_x_w_tama
__builtin_rvv_vmseq_vv_mu
__builtin_rvv_vmseq_vx_tumu
__builtin_rvv_vmsne_vv_mu
__builtin_rvv_vmsne_vx_ma
__builtin_rvv_vmsltu_vv_mu
__builtin_rvv_vmsltu_vx
__builtin_rvv_vmslt_vv_mu
__builtin_rvv_vmslt_vx_ma
__builtin_rvv_vmsleu_vv_mu
__builtin_rvv_vmsleu_vx_tumu
__builtin_rvv_vmsle_vv_mu
__builtin_rvv_vmsle_vx_ma
__builtin_rvv_vmsgtu_vv_mu
Use the given offset for addressing the stack-protector guard
__builtin_rvv_vmsgt_vv_mu
__builtin_rvv_vmsgt_vx_ma
__builtin_rvv_vmsgeu_vv_mu
__builtin_rvv_vwaddu_wv_tu
__builtin_rvv_vse8_v_m
__builtin_rvv_vmsgeu_vx
__builtin_rvv_vmsge_vv_tumu
__builtin_rvv_vmsge_vv_ma
__builtin_rvv_vminu_vv_tu
__builtin_rvv_vminu_vv_tama
__builtin_rvv_vminu_vx_tuma
__builtin_rvv_vminu_vx_tamu
__builtin_rvv_vmin_vv_tamu
__builtin_rvv_vmin_vx_tumu
__builtin_rvv_vmin_vx_tamu
Use the given symbol for addressing the stack-protector guard
__builtin_rvv_vmaxu_vx_tuma
__builtin_rvv_vmax_vv_ta
__builtin_rvv_vmax_vv_tamu
__builtin_rvv_vmax_vx_tu
__builtin_rvv_vmul_vv_tu
__builtin_rvv_vmul_vv_tama
__builtin_rvv_vmul_vx_tuma
__builtin_rvv_vmul_vx_tama
__builtin_rvv_vmulh_vv_tamu
__builtin_rvv_vmulh_vx_tumu
__builtin_rvv_vmulhu_vv_tu
__builtin_rvv_vmulhu_vv_tuma
__builtin_rvv_vmulhu_vx_tuma
__builtin_rvv_vmulhsu_vv_ta
__builtin_rvv_vmulhsu_vv_tamu
Force realign the stack at entry to every function
__builtin_rvv_vmulhsu_vx_tamu
__builtin_rvv_vdivu_vv_tumu
__builtin_rvv_vdivu_vx_tu
__builtin_rvv_vdivu_vx_tuma
__builtin_rvv_vdiv_vv_tuma
__builtin_rvv_vdiv_vx_ta
__builtin_rvv_vdiv_vx_tamu
__builtin_rvv_vremu_vv_ta
__builtin_rvv_vremu_vx_tu
__builtin_rvv_vremu_vx_tama
__builtin_rvv_vrem_vv_tuma
__builtin_rvv_vrem_vv_tamu
__builtin_rvv_vrem_vx_tamu
__builtin_rvv_vwmul_vv_tumu
__builtin_rvv_vwmul_vx_ta
Specify the size in bits of an SVE vector register. Defaults to the vector length agnostic value of "scalable". (AArch64 only)
__builtin_rvv_vwmulu_vv_tuma
__builtin_rvv_vwmulu_vx_ta
__builtin_rvv_vwmulu_vx_tamu
__builtin_rvv_vwmulsu_vv_tu
__builtin_rvv_vwmulsu_vx_tu
__builtin_rvv_vwmulsu_vx_tama
__builtin_rvv_vmacc_vv_tuma
__builtin_rvv_vmacc_vv_tama
__builtin_rvv_vmacc_vx_tamu
__builtin_rvv_vnmsac_vv_tumu
__builtin_rvv_vsuxei8_v_m
__builtin_rvv_vnmsac_vx_ta
__builtin_rvv_vmadd_vv_ta
__builtin_rvv_vmadd_vv_tama
__builtin_rvv_vmadd_vx_tuma
Directory for temporary files produced during ARC or ObjC migration
__builtin_rvv_vnmsub_vv_tamu
__builtin_rvv_vnmsub_vx_tumu
__builtin_rvv_vwmaccu_vv_ta
__builtin_rvv_vwmaccu_vv_tuma
__builtin_rvv_vwmaccu_vx_tuma
__builtin_rvv_vwmacc_vv_tu
__builtin_rvv_vwmacc_vv_tamu
__builtin_rvv_vwmacc_vx_tu
__builtin_rvv_vwmaccsu_vv_ta
__builtin_rvv_vwmaccsu_vv_tama
__builtin_rvv_vwmaccsu_vx_tuma
__builtin_rvv_vwmaccsu_vx_tamu
__builtin_rvv_vwmaccus_vx_tamu
__builtin_rvv_vmerge_vxm_ta
-fmacro-prefix-map=
-mtbm
__builtin_rvv_vsaddu_vx_tu
__builtin_rvv_vsaddu_vx_tama
__builtin_rvv_vsadd_vv_tuma
__builtin_rvv_vsadd_vv_tamu
__builtin_rvv_vsadd_vx_tamu
__builtin_rvv_vssubu_vv_tumu
__builtin_rvv_vssubu_vx_tu
__builtin_rvv_vssubu_vx_tumu
__builtin_rvv_vssub_vv_tuma
__builtin_rvv_vssub_vx_ta
__builtin_rvv_vssub_vx_tamu
__builtin_rvv_vaaddu_vv_tu
__builtin_rvv_vaaddu_vx_tu
__builtin_rvv_vaaddu_vx_tama
__builtin_rvv_vaadd_vv_tuma
Enable threadgroup split execution mode (AMDGPU only)
__builtin_rvv_vaadd_vx_tamu
__builtin_rvv_vasubu_vv_tumu
__builtin_rvv_vasubu_vx_tu
__builtin_rvv_vasubu_vx_tuma
__builtin_rvv_vasub_vv_tuma
__builtin_rvv_vasub_vx_ta
__builtin_rvv_vasub_vx_tamu
__builtin_rvv_vsmul_vv_ta
__builtin_rvv_vsmul_vx_tu
__builtin_rvv_vsmul_vx_tama
__builtin_rvv_vssrl_vv_tuma
__builtin_rvv_vssrl_vv_tamu
__builtin_rvv_vssrl_vx_tamu
__builtin_rvv_vssra_vv_tumu
__builtin_rvv_vssra_vx_ta
-mthreads
__builtin_rvv_vnclipu_wv_tuma
__builtin_rvv_vnclipu_wx_ta
__builtin_rvv_vnclipu_wx_tamu
__builtin_rvv_vnclip_wv_tu
__builtin_rvv_vnclip_wx_tu
__builtin_rvv_vnclip_wx_tama
__builtin_rvv_vfadd_vv_tuma
__builtin_rvv_vfadd_vv_tama
__builtin_rvv_vfadd_vf_tamu
__builtin_rvv_vfsub_vv_tumu
__builtin_rvv_vfsub_vf_tu
__builtin_rvv_vfsub_vf_tuma
__builtin_rvv_vfrsub_vf_tuma
__builtin_rvv_vfwadd_vv_ta
__builtin_rvv_vfwadd_vv_tamu
-mtls-size=
__builtin_rvv_vfwsub_vv_tu
__builtin_rvv_vfwsub_vv_tama
__builtin_rvv_vfwsub_vf_tu
__builtin_rvv_vfwsub_vf_tuma
__builtin_rvv_vfwadd_wv_tuma
__builtin_rvv_vfwadd_wf_ta
__builtin_rvv_vfwadd_wf_tamu
__builtin_rvv_vfwsub_wv_ta
__builtin_rvv_vfwsub_wf_tu
__builtin_rvv_vfwsub_wf_tama
__builtin_rvv_vfmul_vv_tuma
__builtin_rvv_vfmul_vv_tamu
__builtin_rvv_vfmul_vf_tamu
__builtin_rvv_vfdiv_vv_tumu
__builtin_rvv_vfdiv_vv_tamu
soft,cp15,el0,el1,el2,el3
__builtin_rvv_vfrdiv_vf_tuma
__builtin_rvv_vfwmul_vv_ta
__builtin_rvv_vfwmul_vv_tamu
__builtin_rvv_vfwmul_vf_tu
__builtin_rvv_vfmacc_vv_ta
__builtin_rvv_vfmacc_vv_tama
__builtin_rvv_vfmacc_vf_tuma
__builtin_rvv_vfmacc_vf_tama
__builtin_rvv_vfnmacc_vv_tamu
__builtin_rvv_vfnmacc_vf_tumu
__builtin_rvv_vfmsac_vv_ta
__builtin_rvv_vfmsac_vv_tuma
__builtin_rvv_vfmsac_vf_tuma
__builtin_rvv_vfnmsac_vv_tu
__builtin_rvv_vfnmsac_vv_tamu
-mtune=?
__builtin_rvv_vfmadd_vv_ta
__builtin_rvv_vfmadd_vv_tama
__builtin_rvv_vfmadd_vf_tuma
__builtin_rvv_vfmadd_vf_tamu
__builtin_rvv_vfnmadd_vv_tamu
__builtin_rvv_vfnmadd_vf_tumu
__builtin_rvv_vfmsub_vv_ta
__builtin_rvv_vfmsub_vv_tumu
__builtin_rvv_vfmsub_vf_tuma
__builtin_rvv_vfnmsub_vv_tu
__builtin_rvv_vfnmsub_vv_tamu
__builtin_rvv_vfnmsub_vf_ta
__builtin_rvv_vfwmacc_vv_ta
__builtin_rvv_vfwmacc_vv_tama
__builtin_rvv_vfwmacc_vf_tumu
-mtvos-version-min=
__builtin_rvv_vfwnmacc_vv_tamu
__builtin_rvv_vfwnmacc_vf_tumu
__builtin_rvv_vfwmsac_vv_ta
__builtin_rvv_vfwmsac_vv_tuma
__builtin_rvv_vfwmsac_vf_tuma
__builtin_rvv_vfwnmsac_vv_tu
__builtin_rvv_vfwnmsac_vv_tamu
__builtin_rvv_vfwnmsac_vf_tu
__builtin_rvv_vfmin_vv_tu
__builtin_rvv_vfmin_vv_tama
__builtin_rvv_vfmin_vf_tuma
__builtin_rvv_vfmin_vf_tamu
__builtin_rvv_vfmax_vv_tamu
__builtin_rvv_vfmax_vf_tumu
__builtin_rvv_vfsgnj_vv_tu
Use static run-time
__builtin_rvv_vfsgnj_vf_tuma
__builtin_rvv_vfsgnjn_vv_ta
__builtin_rvv_vfsgnjn_vv_tamu
__builtin_rvv_vfsgnjn_vf_tu
__builtin_rvv_vfsgnjx_vv_tu
__builtin_rvv_vfsgnjx_vv_tama
__builtin_rvv_vfsgnjx_vf_tuma
__builtin_rvv_vfsgnjx_vf_tama
__builtin_rvv_vfabs_v_tamu
__builtin_rvv_vmfeq_vv_ma
__builtin_rvv_vmfeq_vf_mu
__builtin_rvv_vmfne_vv_tumu
__builtin_rvv_vmfne_vf_mu
__builtin_rvv_vmflt_vv_ma
__builtin_rvv_vmflt_vf
-multiply_defined_unused
__builtin_rvv_vmfle_vf_mu
__builtin_rvv_vmfgt_vv_ma
__builtin_rvv_vmfgt_vf_mu
__builtin_rvv_vmfge_vv_tumu
__builtin_rvv_vmfge_vf_mu
__builtin_rvv_vfmv_v_f_ta
__builtin_rvv_vredsum_vs_tum
__builtin_rvv_vredsum_vs_tam
__builtin_rvv_vredmax_vs_ta
__builtin_rvv_vredmax_vs_tam
__builtin_rvv_vredminu_vs_tam
__builtin_rvv_vredmin_vs_ta
__builtin_rvv_vredand_vs_tumu
__builtin_rvv_vredor_vs_tu
__builtin_rvv_vredxor_vs_tu
-municode
__builtin_rvv_vwredsum_vs_tum
__builtin_rvv_vwredsumu_vs_ta
__builtin_rvv_vfredmax_vs_ta
__builtin_rvv_vfredmax_vs_tum
__builtin_rvv_vfredmin_vs_tam
__builtin_rvv_vfredusum_vs_tumu
__builtin_rvv_vfredosum_vs_tumu
__builtin_rvv_vfredosum_vs_tum
__builtin_rvv_vfwredosum_vs_tu
__builtin_rvv_vfwredosum_vs_tum
__builtin_rvv_viota_m_tumu
__builtin_rvv_viota_m_tama
__builtin_rvv_vid_v_tama
__builtin_rvv_vmv_s_x_tu
__builtin_rvv_vfmv_s_f_ta
-mv5
__builtin_rvv_vslidedown_vx_tu
__builtin_rvv_vslidedown_vx_tuma
__builtin_rvv_vslide1up_vx_tumu
__builtin_rvv_vslide1up_vx_tama
__builtin_rvv_vfslide1up_vf_tama
__builtin_rvv_vsse8_v_m
__builtin_rvv_vslide1down_vx_tama
__builtin_rvv_vslide1down_vx_tamu
__builtin_rvv_vrgather_vv_ta
__builtin_rvv_vrgather_vv_tuma
__builtin_rvv_vrgather_vx_tumu
__builtin_rvv_vrgather_vx_tama
__builtin_rvv_vrgatherei16_vv_tama
__builtin_rvv_vcompress_vm_ta
__builtin_rvv_vsoxei16_v
-mv66
__builtin_rvv_vlseg2e8_v_tumu
__builtin_rvv_vlseg2e8_v_tamu
__builtin_rvv_vle16ff_v_tama
__builtin_rvv_vle32ff_v_ta
__builtin_rvv_vle64ff_v_ta
__builtin_rvv_vle64ff_v_tuma
__builtin_rvv_vlseg3e8_v_tumu
__builtin_rvv_vlseg3e8_v_tuma
__builtin_rvv_vlseg4e8_v_tama
__builtin_rvv_vlseg5e8_v_tu
__builtin_rvv_vle8_v_ta
__builtin_rvv_vle8_v_tumu
__builtin_rvv_vlseg6e8_v_tumu
__builtin_rvv_vlseg6e8_v_tamu
__builtin_rvv_vlseg7e8_v_tumu
-mv69
__builtin_rvv_vlseg2e16_v_ta
__builtin_rvv_vlseg2e16_v_tuma
__builtin_rvv_vlseg3e16_v_tumu
__builtin_rvv_vlseg3e16_v_tama
__builtin_rvv_vlseg4e16_v_tama
__builtin_rvv_vlseg5e16_v_tu
__builtin_rvv_vlseg6e16_v_ta
__builtin_rvv_vlseg6e16_v_tu
__builtin_rvv_vlseg7e16_v_tumu
__builtin_rvv_vlseg7e16_v_tamu
__builtin_rvv_vlseg8e16_v_tama
__builtin_rvv_vlseg2e32_v_ta
__builtin_rvv_vlseg3e32_v_ta
__builtin_rvv_vlseg3e32_v_tuma
__builtin_rvv_vlseg4e32_v_tumu
-mvscale-max=
__builtin_rvv_vlseg5e32_v_tama
__builtin_rvv_vlseg6e32_v_tu
__builtin_rvv_vlseg7e32_v_ta
__builtin_rvv_vlseg7e32_v_tumu
__builtin_rvv_vlseg8e32_v_tumu
__builtin_rvv_vlseg8e32_v_tamu
__builtin_rvv_vlseg2e64_v_tama
__builtin_rvv_vlseg2e64_v_tamu
__builtin_rvv_vlseg4e64_v_ta
__builtin_rvv_vlseg4e64_v_tuma
__builtin_rvv_vlseg5e64_v_tumu
__builtin_rvv_vlseg5e64_v_tama
__builtin_rvv_vlseg6e64_v_tama
__builtin_rvv_vlseg7e64_v_tu
__builtin_rvv_vlseg7e64_v_tamu
-mvsx
__builtin_rvv_vlseg3e8ff_v_tumu
__builtin_rvv_vlseg3e8ff_v_tamu
__builtin_rvv_vlseg4e8ff_v_tama
__builtin_rvv_vlseg5e8ff_v_ta
__builtin_rvv_vlseg6e8ff_v_ta
__builtin_rvv_vlseg6e8ff_v_tuma
__builtin_rvv_vlseg7e8ff_v_tumu
__builtin_rvv_vlseg7e8ff_v_tuma
__builtin_rvv_vlseg8e8ff_v_tama
__builtin_rvv_vlseg2e16ff_v_tu
__builtin_rvv_vlseg3e16ff_v_ta
__builtin_rvv_vlseg3e16ff_v_tumu
__builtin_rvv_vlseg4e16ff_v_tumu
__builtin_rvv_vlseg4e16ff_v_tamu
__builtin_rvv_vlseg5e16ff_v_tama
Use NMake/Jom format for the depfile
__builtin_rvv_vlseg7e16ff_v_ta
__builtin_rvv_vlseg7e16ff_v_tuma
__builtin_rvv_vlseg8e16ff_v_tumu
__builtin_rvv_vlseg8e16ff_v_tama
__builtin_rvv_vlseg2e32ff_v_tama
__builtin_rvv_vlseg3e32ff_v_tu
__builtin_rvv_vlseg4e32ff_v_ta
__builtin_rvv_vlseg4e32ff_v_tu
__builtin_rvv_vlseg5e32ff_v_tumu
__builtin_rvv_vlseg5e32ff_v_tamu
__builtin_rvv_vlseg6e32ff_v_tama
__builtin_rvv_vlseg7e32ff_v_ta
__builtin_rvv_vlseg8e32ff_v_ta
__builtin_rvv_vlseg8e32ff_v_tuma
-fmax-array-constructor=
-mwatchos-simulator-version-min=
__builtin_rvv_vlseg3e64ff_v_tama
__builtin_rvv_vlseg4e64ff_v_tu
__builtin_rvv_vlseg5e64ff_v_ta
__builtin_rvv_vlseg5e64ff_v_tumu
__builtin_rvv_vlseg6e64ff_v_tumu
__builtin_rvv_vlseg6e64ff_v_tamu
__builtin_rvv_vlseg7e64ff_v_tama
__builtin_rvv_vlseg7e64ff_v_tamu
__builtin_rvv_vlseg2e8ff_v_ta
__builtin_rvv_vlseg2e8ff_v_tuma
__builtin_rvv_vlsseg3e8_v_tumu
__builtin_rvv_vlsseg3e8_v_tama
__builtin_rvv_vlsseg4e8_v_tama
__builtin_rvv_vlsseg5e8_v_tu
__builtin_rvv_vlsseg6e8_v_ta
Specify wavefront size 64 mode (AMDGPU only)
__builtin_rvv_vlsseg7e8_v_tumu
__builtin_rvv_vlsseg7e8_v_tamu
__builtin_rvv_vlsseg8e8_v_tama
__builtin_rvv_vlsseg2e16_v_ta
__builtin_rvv_vlsseg2e8_v_ta
__builtin_rvv_vlsseg2e8_v_tuma
__builtin_rvv_vlsseg3e16_v_tumu
__builtin_rvv_vlsseg3e16_v_tuma
__builtin_rvv_vlsseg4e16_v_tama
__builtin_rvv_vlsseg5e16_v_tu
__builtin_rvv_vlsseg6e16_v_ta
__builtin_rvv_vlsseg6e16_v_tumu
__builtin_rvv_vlsseg7e16_v_tumu
__builtin_rvv_vlsseg7e16_v_tamu
__builtin_rvv_vlsseg8e16_v_tuma
-mx32
__builtin_rvv_vlsseg3e32_v_ta
__builtin_rvv_vlsseg3e32_v_tuma
__builtin_rvv_vlsseg4e32_v_tumu
__builtin_rvv_vlsseg4e32_v_tama
__builtin_rvv_vlsseg5e32_v_tama
__builtin_rvv_vluxseg2ei8_v_tu
__builtin_rvv_vlsseg6e32_v_ta
__builtin_rvv_vlsseg6e32_v_tu
__builtin_rvv_vlsseg7e32_v_tumu
__builtin_rvv_vlsseg7e32_v_tamu
__builtin_rvv_vlsseg8e32_v_tama
__builtin_rvv_vlsseg2e64_v_ta
__builtin_rvv_vlsseg3e64_v_ta
__builtin_rvv_vlsseg3e64_v_tuma
__builtin_rvv_vlsseg4e64_v_tumu
-mxsavec
__builtin_rvv_vlsseg5e64_v_tama
__builtin_rvv_vlsseg6e64_v_tu
__builtin_rvv_vlsseg7e64_v_ta
__builtin_rvv_vlsseg7e64_v_tumu
__builtin_rvv_vlsseg8e64_v_tumu
__builtin_rvv_vlsseg8e64_v_tamu
__builtin_rvv_vle8ff_v_tama
__builtin_rvv_vle8ff_v_tamu
__builtin_rvv_vluxseg3ei8_v_tama
__builtin_rvv_vluxseg4ei8_v_tu
__builtin_rvv_vluxseg5ei8_v_ta
__builtin_rvv_vluxseg5ei8_v_tumu
__builtin_rvv_vluxseg6ei8_v_tumu
__builtin_rvv_vluxseg6ei8_v_tamu
__builtin_rvv_vluxseg7ei8_v_tumu
-mzvector
__builtin_rvv_vluxseg2ei16_v_ta
__builtin_rvv_vluxseg2ei16_v_tuma
__builtin_rvv_vluxseg3ei16_v_tumu
__builtin_rvv_vluxseg3ei16_v_tama
__builtin_rvv_vluxseg4ei16_v_tama
__builtin_rvv_vluxseg5ei16_v_tu
__builtin_rvv_vluxseg6ei16_v_ta
__builtin_rvv_vluxseg6ei16_v_tu
__builtin_rvv_vluxseg7ei16_v_tumu
__builtin_rvv_vluxseg7ei16_v_tamu
__builtin_rvv_vluxseg8ei16_v_tama
__builtin_rvv_vluxseg2ei32_v_ta
__builtin_rvv_vluxseg3ei32_v_ta
__builtin_rvv_vluxseg3ei32_v_tuma
__builtin_rvv_vluxseg4ei32_v_tumu
Enable enhanced struct-path aware Type Based Alias Analysis
__builtin_rvv_vluxseg5ei32_v_tama
__builtin_rvv_vluxseg6ei32_v_tu
__builtin_rvv_vluxseg7ei32_v_ta
__builtin_rvv_vluxseg7ei32_v_tumu
__builtin_rvv_vluxseg8ei32_v_tumu
__builtin_rvv_vluxseg8ei32_v_tamu
__builtin_rvv_vluxseg2ei64_v_tama
__builtin_rvv_vluxseg2ei64_v_tamu
__builtin_rvv_vluxseg4ei64_v_ta
__builtin_rvv_vluxseg4ei64_v_tuma
__builtin_rvv_vluxseg5ei64_v_tumu
__builtin_rvv_vluxseg5ei64_v_tama
__builtin_rvv_vluxseg6ei64_v_tama
__builtin_rvv_vluxseg7ei64_v_tu
__builtin_rvv_vluxseg7ei64_v_tamu
Don't clear the Clang AST before running backend code generation
__builtin_rvv_vlse8_v_ta
__builtin_rvv_vlse8_v_tuma
__builtin_rvv_vneg_v_tumu
__builtin_rvv_vneg_v_tama
__builtin_rvv_vnot_v_tama
__builtin_rvv_vfneg_v_ta
__builtin_rvv_vfneg_v_tamu
__builtin_rvv_vwcvtu_x_x_v_ta
__builtin_rvv_vle16_v_tu
__builtin_rvv_vle16_v_tama
__builtin_rvv_vle32_v_tuma
__builtin_rvv_vle32_v_tamu
__builtin_rvv_vle64_v_tamu
__builtin_rvv_vse32_v
__builtin_rvv_vlse16_v_tu
Do not include declarations inside namespaces (incl. global namespace) in the code-completion results.
__builtin_rvv_vfclass_v_tu
__builtin_rvv_vfclass_v_tama
__builtin_rvv_vfcvt_f_x_v_tuma
__builtin_rvv_vfcvt_f_x_v_tamu
__builtin_rvv_vfcvt_f_xu_v_tamu
__builtin_rvv_vfcvt_rtz_x_f_v_tumu
__builtin_rvv_vfcvt_rtz_xu_f_v_tu
__builtin_rvv_vfcvt_rtz_xu_f_v_tumu
__builtin_rvv_vfcvt_x_f_v_tuma
__builtin_rvv_vfcvt_xu_f_v_ta
__builtin_rvv_vfcvt_xu_f_v_tamu
__builtin_rvv_vfirst_m_m
__builtin_rvv_vfncvt_f_f_w_tamu
__builtin_rvv_vfncvt_f_x_w_tumu
__builtin_rvv_vfncvt_f_x_w_tama
Do not include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
__builtin_rvv_vfncvt_rod_f_f_w_tuma
__builtin_rvv_vfncvt_rtz_x_f_w_ta
__builtin_rvv_vfncvt_rtz_x_f_w_tamu
__builtin_rvv_vfncvt_rtz_xu_f_w_tu
__builtin_rvv_vfncvt_x_f_w_tu
__builtin_rvv_vfncvt_x_f_w_tama
__builtin_rvv_vfncvt_xu_f_w_tuma
__builtin_rvv_vfncvt_xu_f_w_tama
__builtin_rvv_vfrec7_v_tamu
__builtin_rvv_vfrsqrt7_v_tumu
__builtin_rvv_vfsqrt_v_tu
__builtin_rvv_vfsqrt_v_tuma
__builtin_rvv_vfwcvt_f_f_v_tuma
__builtin_rvv_vfwcvt_f_x_v_ta
__builtin_rvv_vfwcvt_f_x_v_tamu
--no-default-config
__builtin_rvv_vfwcvt_rtz_x_f_v_tu
__builtin_rvv_vfwcvt_rtz_x_f_v_tama
__builtin_rvv_vfwcvt_rtz_xu_f_v_tuma
__builtin_rvv_vfwcvt_rtz_xu_f_v_tamu
__builtin_rvv_vfwcvt_x_f_v_tamu
__builtin_rvv_vfwcvt_xu_f_v_tumu
__builtin_rvv_vlmul_ext_v
__builtin_rvv_vlmul_trunc_v
__builtin_rvv_vmorn_mm
__builtin_rvv_vmsbf_m_ma
__builtin_rvv_vmsif_m_ma
__builtin_rvv_vmsof_m
__builtin_rvv_vreinterpret_v
__builtin_rvv_vsetvlimax
__builtin_rvv_vsext_vf2_tumu
-no-enable-noundef-analysis
__builtin_rvv_vsext_vf4_tamu
__builtin_rvv_vsext_vf8_tumu
__builtin_rvv_vundefined
__builtin_rvv_vzext_vf2_tu
__builtin_rvv_vzext_vf4_tu
__builtin_rvv_vzext_vf4_tama
__builtin_rvv_vzext_vf8_tuma
__builtin_rvv_vzext_vf8_tama
__builtin_riscv_clz_32
__builtin_riscv_ctz_64
__builtin_riscv_clmulr
__builtin_riscv_xperm4
__builtin_riscv_zip_32
__builtin_riscv_aes32dsi_32
zknd,64bit
--no-gpu-bundle-output
zkne,32bit
zkne,64bit
__builtin_riscv_sha256sum0
__builtin_riscv_sha512sig0h_32
__builtin_riscv_sha512sum0r_32
zknh,64bit
-finit-logical=
0,1,2
Do not link against HIP runtime libraries
SPIRV64
sparc
__sparcv8
__ma2150
__ma2455
__ma2x5x
__ma2x5x__
__sparc64__
supersparc
sparclet
niagara4
ma2155
ma2085
-no-integrated-cpp
leon2
at697e
--no-line-commands
__builtin_tx_nesting_depth
__builtin_s390_lcbb
V16ScvC*Ii
__builtin_s390_vperm
V2ULLiV2ULLiV2ULLiIi
V8SsV4SiV4Sii*
V4SiV2SLLiV2SLLii*
__builtin_s390_vpklsfs
__builtin_s390_vpklsg
__builtin_s390_vuphf
__builtin_s390_vuplf
__builtin_s390_vuplhf
V2ULLiV4Ui
__builtin_s390_vacch
__builtin_s390_vaccq
__builtin_s390_vavgg
__builtin_s390_vavglh
V8SsV8SsV8Ssi*
__builtin_s390_vceqgs
__builtin_s390_vchgs
__builtin_s390_vchlbs
V2SLLiV2ULLiV2ULLii*
__builtin_s390_vclzh
__builtin_s390_vctzf
__builtin_s390_verimb
__builtin_s390_verllb
__builtin_s390_verllf
__builtin_s390_verllvh
-no-opaque-pointers
__builtin_s390_vgfmab
__builtin_s390_vgfmaf
__builtin_s390_vmahh
__builtin_s390_vmalhb
__builtin_s390_vmaef
__builtin_s390_vmaleh
__builtin_s390_vmalob
__builtin_s390_vmaloh
__builtin_s390_vmlhf
__builtin_s390_vmef
__builtin_s390_vmoh
__builtin_s390_vmlob
__builtin_s390_vpopctg
__builtin_s390_vsbiq
__builtin_s390_vscbig
-no-pthread
__builtin_s390_vsumb
__builtin_s390_vsumgh
__builtin_s390_vsumqg
iV16UcV16Uc
__builtin_s390_vfaehs
V4UiV4UiV4UiIi
__builtin_s390_vfaezh
__builtin_s390_vfaezhs
__builtin_s390_vfeehs
__builtin_s390_vfeefs
__builtin_s390_vfeezhs
__builtin_s390_vfeezfs
__builtin_s390_vfenefs
__builtin_s390_vfenezh
__builtin_s390_vistrbs
--no-standard-libraries
__builtin_s390_vstrcb
__builtin_s390_vstrch
V4UiV4UiV4UiV4UiIii*
__builtin_s390_vstrczbs
V2SLLiV2dV2di*
__builtin_s390_vfidb
__builtin_s390_vfmsdb
__builtin_s390_vfsqdb
V16UcV2ULLiV2ULLiV16UcIi
__builtin_s390_vfmindb
__builtin_s390_vfchsbs
__builtin_s390_vfisb
__builtin_s390_vflpsb
__builtin_s390_vfnmasb
V4SiV4fIii*
Treat all #include paths starting with <prefix> as not including a system header.
__builtin_s390_vstrszb
__builtin_s390_vlbrh
__builtin_s390_vclfnls
V8UsV4fV4fIi
arch10
arch13
__ARCH__
-fmax-tokens=
--no-undefined
osx.cocoa.IncompatibleMethodTypes
__TCELE__
__builtin_ve_vl_extract_vm512u
V512bV512bV256b
V256dLUivC*Ui
__builtin_ve_vl_vldu_vssl
__builtin_ve_vl_vldunc_vssl
__builtin_ve_vl_vldlzx_vssl
__builtin_ve_vl_vldlzxnc_vssvl
__builtin_ve_vl_vldu2d_vssl
__builtin_ve_vl_vldu2dnc_vssl
__builtin_ve_vl_vldl2dzx_vssl
__builtin_ve_vl_vldl2dzxnc_vssvl
__builtin_ve_vl_vstnc_vssl
__builtin_ve_vl_vstnc_vssml
__builtin_ve_vl_vstunc_vssl
__builtin_ve_vl_vstuot_vssml
__builtin_ve_vl_vstlnc_vssl
__builtin_ve_vl_vstlot_vssl
__builtin_ve_vl_vst2dnc_vssl
__builtin_ve_vl_vst2dot_vssml
__builtin_ve_vl_vstu2dnc_vssl
Disable predefined and command line preprocessor macros
__builtin_ve_vl_vstl2dnc_vssl
__builtin_ve_vl_vstl2dot_vssml
__builtin_ve_vl_pfchvnc_ssl
V256dV256dUiLUi
fV256dUi
__builtin_ve_vl_lvm_MMss
LUiV512bLUi
__builtin_ve_vl_vbrdd_vsl
V256dLiUi
__builtin_ve_vl_vbrdl_vsmvl
V256dfV256dUi
V256dfV256bV256dUi
V256diV256bV256dUi
__builtin_ve_vl_pvbrd_vsvl
V256dUiV256dUi
-nodriverkitlib
V256dV256dV256dV256dUi
V256dLUiV256dV256dUi
__builtin_ve_vl_vadduw_vvvl
__builtin_ve_vl_vadduw_vsvl
__builtin_ve_vl_pvaddu_vsvl
V256dV256dV256dV512bV256dUi
__builtin_ve_vl_vaddswsx_vsvl
__builtin_ve_vl_vaddswsx_vsvvl
__builtin_ve_vl_vaddswzx_vsvl
__builtin_ve_vl_vaddswzx_vsvmvl
__builtin_ve_vl_pvadds_vvvMvl
__builtin_ve_vl_vaddsl_vvvl
__builtin_ve_vl_vaddsl_vsvmvl
__builtin_ve_vl_vsubul_vvvvl
__builtin_ve_vl_vsubul_vsvmvl
-nogpulib
__builtin_ve_vl_pvsubu_vsvl
__builtin_ve_vl_pvsubu_vsvMvl
__builtin_ve_vl_vsubswsx_vvvmvl
__builtin_ve_vl_vsubswzx_vvvl
__builtin_ve_vl_pvsubs_vvvl
__builtin_ve_vl_pvsubs_vsvvl
__builtin_ve_vl_vsubsl_vsvl
__builtin_ve_vl_vsubsl_vsvvl
__builtin_ve_vl_vmulul_vvvmvl
__builtin_ve_vl_vmuluw_vvvvl
__builtin_ve_vl_vmulswsx_vvvl
__builtin_ve_vl_vmulswsx_vsvl
__builtin_ve_vl_vmulswzx_vsvl
__builtin_ve_vl_vmulswzx_vsvmvl
__builtin_ve_vl_vmulsl_vvvmvl
-nolibc
__builtin_ve_vl_vdivul_vsvl
__builtin_ve_vl_vdivul_vsvmvl
__builtin_ve_vl_vdivuw_vvvmvl
__builtin_ve_vl_vdivul_vvsl
__builtin_ve_vl_vdivuw_vvsl
V256dV256dUiV256dUi
__builtin_ve_vl_vdivswsx_vsvl
__builtin_ve_vl_vdivswsx_vsvvl
__builtin_ve_vl_vdivswzx_vvvmvl
V256dV256diUi
__builtin_ve_vl_vdivswzx_vvsl
__builtin_ve_vl_vdivswzx_vvsmvl
__builtin_ve_vl_vdivsl_vsvmvl
__builtin_ve_vl_vdivsl_vvsvl
V256dV256dLiV256bV256dUi
-noprebind
__builtin_ve_vl_vcmpuw_vsvvl
__builtin_ve_vl_pvcmpu_vvvl
__builtin_ve_vl_pvcmpu_vsvMvl
__builtin_ve_vl_vcmpswsx_vvvvl
__builtin_ve_vl_vcmpswzx_vvvvl
__builtin_ve_vl_vcmpswzx_vvvmvl
__builtin_ve_vl_pvcmps_vsvvl
__builtin_ve_vl_pvcmps_vvvMvl
__builtin_ve_vl_vcmpsl_vsvmvl
__builtin_ve_vl_vmaxswsx_vsvl
__builtin_ve_vl_vmaxswzx_vvvvl
__builtin_ve_vl_vmaxswzx_vsvvl
__builtin_ve_vl_pvmaxs_vsvvl
__builtin_ve_vl_vminswsx_vvvl
__builtin_ve_vl_vminswsx_vsvmvl
-nostdinc++
__builtin_ve_vl_pvmins_vvvvl
__builtin_ve_vl_pvmins_vvvMvl
__builtin_ve_vl_vmaxsl_vsvvl
__builtin_ve_vl_vmaxsl_vsvmvl
__builtin_ve_vl_vminsl_vsvmvl
__builtin_ve_vl_vand_vsvl
__builtin_ve_vl_pvand_vvvvl
__builtin_ve_vl_pvand_vsvl
__builtin_ve_vl_vor_vsvvl
__builtin_ve_vl_pvor_vvvl
__builtin_ve_vl_pvor_vsvMvl
__builtin_ve_vl_vxor_vvvvl
__builtin_ve_vl_pvxor_vvvvl
__builtin_ve_vl_pvxor_vvvMvl
__builtin_ve_vl_veqv_vsvl
-nostdlibinc
__builtin_ve_vl_pveqv_vsvMvl
__builtin_ve_vl_vldz_vvvl
__builtin_ve_vl_pvldzlo_vvmvl
__builtin_ve_vl_pvldzup_vvvl
__builtin_ve_vl_vpcnt_vvl
__builtin_ve_vl_pvpcntlo_vvl
__builtin_ve_vl_pvpcntup_vvmvl
__builtin_ve_vl_pvpcnt_vvl
__builtin_ve_vl_pvbrvlo_vvvl
__builtin_ve_vl_pvbrvup_vvvl
__builtin_ve_vl_vseq_vl
__builtin_ve_vl_vseq_vvl
__builtin_ve_vl_pvseq_vvl
__builtin_ve_vl_vsll_vvsl
__builtin_ve_vl_pvsll_vvvvl
__builtin_ve_vl_vsrl_vvsl
__builtin_ve_vl_vsrl_vvsmvl
__builtin_ve_vl_pvsrl_vvvMvl
__builtin_ve_vl_vslawsx_vvvl
__builtin_ve_vl_vslawzx_vvvl
__builtin_ve_vl_vslawzx_vvsvl
__builtin_ve_vl_pvsla_vvsl
__builtin_ve_vl_pvsla_vvsvl
__builtin_ve_vl_vslal_vvvmvl
__builtin_ve_vl_vsrawsx_vvvvl
__builtin_ve_vl_vsrawzx_vvvl
__builtin_ve_vl_vsrawzx_vvsl
__builtin_ve_vl_pvsra_vvsl
__builtin_ve_vl_pvsra_vvsMvl
__builtin_ve_vl_vsral_vvsl
Optimize for size  (like /Og     /Os /Oy /Ob2 /GF /Gy)
__builtin_ve_vl_vfaddd_vvvl
__builtin_ve_vl_vfaddd_vsvvl
__builtin_ve_vl_vfadds_vvvl
__builtin_ve_vl_vfadds_vsvl
__builtin_ve_vl_pvfadd_vvvl
__builtin_ve_vl_pvfadd_vsvvl
__builtin_ve_vl_vfsubd_vsvl
__builtin_ve_vl_vfsubd_vsvvl
__builtin_ve_vl_vfsubs_vvvmvl
__builtin_ve_vl_pvfsub_vvvvl
__builtin_ve_vl_vfmuld_vvvl
__builtin_ve_vl_vfmuld_vsvl
__builtin_ve_vl_vfmuls_vsvl
__builtin_ve_vl_vfmuls_vsvmvl
__builtin_ve_vl_pvfmul_vvvMvl
/Ob0
__builtin_ve_vl_vfdivs_vvvl
__builtin_ve_vl_vfdivs_vsvvl
__builtin_ve_vl_vfsqrts_vvl
__builtin_ve_vl_vfcmpd_vvvl
__builtin_ve_vl_vfcmps_vvvl
__builtin_ve_vl_vfcmps_vsvvl
__builtin_ve_vl_pvfcmp_vsvl
__builtin_ve_vl_pvfcmp_vsvvl
__builtin_ve_vl_vfmaxd_vvvmvl
__builtin_ve_vl_vfmaxs_vvvvl
__builtin_ve_vl_pvfmax_vvvl
__builtin_ve_vl_pvfmax_vsvl
__builtin_ve_vl_vfmind_vsvl
__builtin_ve_vl_vfmind_vsvmvl
__builtin_ve_vl_vfmins_vsvvl
/Ob2
__builtin_ve_vl_vfmadd_vvvvl
__builtin_ve_vl_vfmadd_vsvvl
__builtin_ve_vl_vfmadd_vvsvvl
__builtin_ve_vl_vfmadd_vvvvmvl
__builtin_ve_vl_vfmads_vvvvl
__builtin_ve_vl_vfmads_vsvvvl
V256dV256dfV256dV256dUi
__builtin_ve_vl_vfmads_vvvvmvl
__builtin_ve_vl_pvfmad_vsvvl
__builtin_ve_vl_pvfmad_vvsvl
__builtin_ve_vl_pvfmad_vsvvMvl
__builtin_ve_vl_pvfmad_vvsvMvl
__builtin_ve_vl_vfmsbd_vvsvl
__builtin_ve_vl_vfmsbd_vsvvmvl
__builtin_ve_vl_vfmsbs_vsvvvl
-objc-isystem
__builtin_ve_vl_pvfmsb_vsvvl
__builtin_ve_vl_pvfmsb_vvsvvl
__builtin_ve_vl_vfnmadd_vvvvvl
__builtin_ve_vl_vfnmadd_vsvvvl
__builtin_ve_vl_vfnmads_vvvvl
__builtin_ve_vl_vfnmads_vsvvvl
__builtin_ve_vl_vfnmads_vvsvmvl
__builtin_ve_vl_pvfnmad_vvvvl
__builtin_ve_vl_pvfnmad_vsvvMvl
__builtin_ve_vl_vfnmsbd_vvvvvl
__builtin_ve_vl_vfnmsbd_vvvvmvl
__builtin_ve_vl_vfnmsbd_vvsvmvl
__builtin_ve_vl_vfnmsbs_vvsvvl
__builtin_ve_vl_vfnmsbs_vvsvmvl
__builtin_ve_vl_pvfnmsb_vvvvvl
-objcmt-atomic-property
__builtin_ve_vl_vrcps_vvvl
__builtin_ve_vl_vrsqrtd_vvl
__builtin_ve_vl_pvrsqrt_vvvl
__builtin_ve_vl_vrsqrtdnex_vvvl
__builtin_ve_vl_vcvtwdsx_vvvl
__builtin_ve_vl_vcvtwdsxrz_vvvl
__builtin_ve_vl_vcvtwdzxrz_vvl
__builtin_ve_vl_vcvtwdzxrz_vvvl
__builtin_ve_vl_vcvtwssxrz_vvmvl
__builtin_ve_vl_vcvtwszx_vvmvl
__builtin_ve_vl_pvcvtws_vvvl
__builtin_ve_vl_pvcvtwsrz_vvl
__builtin_ve_vl_vcvtldrz_vvl
__builtin_ve_vl_vcvtdw_vvl
__builtin_ve_vl_pvcvtsw_vvvl
-objcmt-migrate-annotation
V256dV256dV256dV256bUi
V256dLUiV256dV256bUi
__builtin_ve_vl_vmrgw_vsvMl
__builtin_ve_vl_vmrgw_vsvMvl
__builtin_ve_vl_vcp_vvmvl
V256bUi
__builtin_ve_vl_vfmklgt_mvl
V256bV256dUi
__builtin_ve_vl_vfmkleq_mvl
__builtin_ve_vl_vfmklge_mvml
__builtin_ve_vl_vfmklnan_mvl
__builtin_ve_vl_vfmklgtnan_mvl
__builtin_ve_vl_vfmkleqnan_mvl
__builtin_ve_vl_vfmklgenan_mvml
__builtin_ve_vl_vfmkwgt_mvml
-objcmt-migrate-instancetype
__builtin_ve_vl_vfmkwle_mvl
__builtin_ve_vl_vfmkwnum_mvml
__builtin_ve_vl_vfmkwltnan_mvl
__builtin_ve_vl_vfmkwnenan_mvl
__builtin_ve_vl_vfmkwlenan_mvl
__builtin_ve_vl_pvfmkwupgt_mvl
__builtin_ve_vl_pvfmkwlolt_mvml
__builtin_ve_vl_pvfmkwuplt_mvml
__builtin_ve_vl_pvfmkwloeq_mvml
__builtin_ve_vl_pvfmkwupge_mvl
__builtin_ve_vl_pvfmkwlole_mvml
__builtin_ve_vl_pvfmkwlonum_mvl
__builtin_ve_vl_pvfmkwlonan_mvml
__builtin_ve_vl_pvfmkwupgtnan_mvl
__builtin_ve_vl_pvfmkwloltnan_mvml
-objcmt-migrate-ns-macros
__builtin_ve_vl_pvfmkwloeqnan_mvml
__builtin_ve_vl_pvfmkwupgenan_mvl
__builtin_ve_vl_pvfmkwlolenan_mvml
__builtin_ve_vl_pvfmkwgt_Mvl
__builtin_ve_vl_pvfmkwne_Mvl
__builtin_ve_vl_pvfmkweq_MvMl
__builtin_ve_vl_pvfmkwnum_Mvl
__builtin_ve_vl_pvfmkwnum_MvMl
__builtin_ve_vl_pvfmkwnenan_Mvl
__builtin_ve_vl_pvfmkweqnan_MvMl
__builtin_ve_vl_vfmkdgt_mvl
__builtin_ve_vl_vfmkdlt_mvl
__builtin_ve_vl_vfmkdge_mvl
__builtin_ve_vl_vfmkdle_mvml
__builtin_ve_vl_vfmkdnan_mvl
-objcmt-migrate-property
__builtin_ve_vl_vfmkdgenan_mvl
__builtin_ve_vl_vfmkdlenan_mvml
__builtin_ve_vl_vfmksne_mvl
__builtin_ve_vl_vfmkseq_mvl
__builtin_ve_vl_vfmksnum_mvl
__builtin_ve_vl_vfmksnan_mvml
__builtin_ve_vl_vfmksnenan_mvl
__builtin_ve_vl_vfmksnenan_mvml
__builtin_ve_vl_pvfmkslogt_mvl
__builtin_ve_vl_pvfmksupgt_mvml
__builtin_ve_vl_pvfmkslone_mvl
__builtin_ve_vl_pvfmkslone_mvml
__builtin_ve_vl_pvfmksloge_mvl
__builtin_ve_vl_pvfmksupge_mvml
__builtin_ve_vl_pvfmkslonum_mvl
-objcmt-migrate-readonly-property
__builtin_ve_vl_pvfmkslogtnan_mvl
__builtin_ve_vl_pvfmksupgtnan_mvml
__builtin_ve_vl_pvfmkslonenan_mvl
__builtin_ve_vl_pvfmkslonenan_mvml
__builtin_ve_vl_pvfmkslogenan_mvl
__builtin_ve_vl_pvfmksupgenan_mvml
__builtin_ve_vl_pvfmksgt_Mvl
__builtin_ve_vl_pvfmksgt_MvMl
__builtin_ve_vl_pvfmksge_Mvl
__builtin_ve_vl_pvfmksle_MvMl
__builtin_ve_vl_pvfmksgtnan_Mvl
__builtin_ve_vl_pvfmksltnan_Mvl
__builtin_ve_vl_pvfmksgenan_Mvl
__builtin_ve_vl_pvfmkslenan_MvMl
__builtin_ve_vl_vsumwzx_vvl
-objcmt-migrate-subscripting
__builtin_ve_vl_vrmaxswfstsx_vvvl
__builtin_ve_vl_vrmaxswfstzx_vvl
__builtin_ve_vl_vrminswfstsx_vvvl
__builtin_ve_vl_vrminswlstsx_vvvl
__builtin_ve_vl_vrmaxslfst_vvvl
__builtin_ve_vl_vrminslfst_vvl
__builtin_ve_vl_vfrmaxdfst_vvvl
__builtin_ve_vl_vfrmaxdlst_vvl
__builtin_ve_vl_vfrmindfst_vvvl
__builtin_ve_vl_vfrminsfst_vvl
__builtin_ve_vl_vrand_vvml
__builtin_ve_vl_vror_vvml
V256dV256dLUiLUiV256bUi
__builtin_ve_vl_vgtnc_vvssvl
__builtin_ve_vl_vgtu_vvssml
-objcmt-returns-innerpointer-property
__builtin_ve_vl_vgtlsx_vvssml
__builtin_ve_vl_vgtlsxnc_vvssvl
__builtin_ve_vl_vgtlzx_vvssml
__builtin_ve_vl_vgtlzxnc_vvssl
__builtin_ve_vl_vsc_vvssml
__builtin_ve_vl_vscnc_vvssml
__builtin_ve_vl_vscu_vvssml
__builtin_ve_vl_vscl_vvssl
__builtin_ve_vl_vsclnc_vvssml
__builtin_ve_vl_andm_mmm
__builtin_ve_vl_andm_MMM
__builtin_ve_vl_eqvm_mmm
__builtin_ve_vl_nndm_MMM
V256bV256b
Alias for -objcmt-allowlist-dir-path
__builtin_ve_vl_tscr_ssss
LUiLUiUi
-fmemory-profile
x86_64-linux-gnu
powerpc64-suse-linux
__builtin_wasm_tls_size
__builtin_wasm_tls_base
__builtin_wasm_max_f64
vIUiv*
iLLi*LLiLLi
__builtin_wasm_trunc_s_i32_f32
__builtin_wasm_trunc_u_i64_f32
__builtin_wasm_trunc_u_i64_f64
__builtin_wasm_trunc_saturate_s_i64_f32
__builtin_wasm_trunc_saturate_u_i64_f64
__builtin_wasm_add_sat_s_i16x8
__builtin_wasm_add_sat_u_i16x8
__builtin_wasm_abs_i32x4
V2LLiV2LLi
__builtin_wasm_min_s_i16x8
__builtin_wasm_max_s_i16x8
__builtin_wasm_avgr_u_i8x16
__builtin_wasm_q15mulr_sat_s_i16x8
__builtin_wasm_extadd_pairwise_i16x8_u_i32x4
__builtin_wasm_bitselect
__builtin_wasm_all_true_i32x4
__builtin_wasm_bitmask_i8x16
UiV4i
UiV2LLi
__builtin_wasm_pmax_f32x4
__builtin_wasm_pmin_f64x2
__builtin_wasm_nearest_f32x4
-object
__builtin_wasm_sqrt_f64x2
__builtin_wasm_narrow_s_i8x16_i16x8
V8sV4iV4i
V8UsV4iV4i
__builtin_wasm_fms_f32x4
__builtin_wasm_laneselect_i8x16
__builtin_wasm_relaxed_min_f32x4
__builtin_wasm_relaxed_max_f32x4
__builtin_wasm_relaxed_q15mulr_s_i16x8
__builtin_wasm_dot_i8x16_i7x16_add_s_i32x4
sign-ext
tail-call
__wasm_bulk_memory__
__wasm_multivalue__
+tail-call
-ftrapping-math
--offload-arch=
sse4.2
-crc32
+avx512cd
+avx512bf16
+avx512bitalg
+avx512vl
+shstk
+cx8
+xsaves
+pku
+cldemote
+movdiri
+movdir64b
+amx-int8
+serialize
+mmx
__GCC_ASM_FLAG_OUTPUTS__
__x86_64h__
__seg_gs
__tune_pentium_mmx__
__tune_pentium3__
tremont
__k6_2__
athlon
__tune_athlon_sse__
bdver3
znver3
__PCLMUL__
Use the new offloading linker to perform the link job.
__POPCNT__
__RDSEED__
__MOVBE__
__FMA4__
__AVX512VPOPCNTDQ__
__AVX512ER__
__AVX512BW__
__AVX512VL__
__XSAVE__
__XSAVES__
__SHSTK__
__PREFETCHWT1__
__CLDEMOTE__
__MOVDIR64B__
__ENQCMD__
Specify comma-separated list of offloading target triples (CUDA and HIP only)
__CRC32__
__AVX2__
__SSE3__
__SSE2_MATH__
__MMX__
3dnow
amx-tile
avx2
avx512pf
avx512bw
avx512vp2intersect
enqcmd
fma4
invpcid
Disable use of builtin functions
mwaitx
rdpru
rdseed
shstk
vpclmulqdq
wbnoinvd
pentium_iii
skylake
+cmov,+mmx,+sse
+cmov,+mmx,+sse,+sse2,+sse3
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt,+avx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+adx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512dq,+avx512f,+adx,+avx512cd,+avx512bw,+avx512vl,+clwb
Enable opaque pointers
PureAttr
powerpc-montavista-linuxspe
powerpcle-linux-gnu
Disable aliasing mode in HWAddressSanitizer
@BT@SatUShortFract
@BT@SatUFract
Disable OpenMP support
@BT@SatUAccum
@BT@SatFract
powerpc64-linux-gnu
SentinelAttr
-ftree-salias
@BT@LongFract
@BT@UShortFract
Enable OpenMP support with experimental SIMD support
@BT@ShortFract
powerpc64le-linux-gnu
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+movbe
Enable heap memory profiling
-fno-constant-nsarray-literals
sapphirerapids
RetainAttr
Enable OpenMP support
__rvv_uint64m1_t
__rvv_float16mf2_t
__rvv_float16m1_t
__rvv_float16m4_t
__rvv_float16m8_t
__rvv_float32m2_t
SelectAnyAttr
/openmp:experimental
File name to use for YAML optimization record output
__rvv_uint32m4_t
riscv64-linux-gnu
TransparentSteppingAttr
Don't use ignorelist file for sanitizers
__rvv_int32mf2_t
__rvv_int32m1_t
The format used for serializing remarks (default: YAML)
xmm18
sparcv8-linux-gnu
xmm26
xmm30
sparc64-linux-gnu
__rvv_int8m8_t
__rvv_uint8mf4_t
Only record remark information for passes whose names match the given regular expression
__rvv_int8mf4_t
__rvv_int8m2_t
s390x-ibm-linux-gnu
__vector_quad
s390x-suse-linux
__clang_svbfloat16x4_t
--optimize
__clang_svint8x4_t
__clang_svint16x4_t
__clang_svint64x4_t
__clang_svuint8x4_t
__clang_svuint64x4_t
X86ForceAlignArgPointerAttr
Optimize for size
sparcv9-sun-solaris2.12
i386-pc-solaris2.11
__clang_svint64x2_t
__clang_svbfloat16x2_t
--optimize=
aarch64-linux-android
__builtin_ia32_readeflags_u32
arm-linux-androideabi
V8cV8cV8c
-ftrivial-auto-var-init-skip-cpp-obj
mipsel-linux-android
intel_sub_group_avc_ime_dual_reference_streamin_t
@BT@OCLReserveID
Select the asm variant index to use for output
WebAssemblyImportNameAttr
intel_sub_group_avc_ref_payload_t
intel_sub_group_avc_sic_payload_t
intel_sub_group_avc_ime_result_t
intel_sub_group_avc_ref_result_t
../..
__builtin_ia32_psubsw
--output-class-directory
image2d
image2d_array
image2d_array_depth
image2d_msaa
image2d_array_msaa_depth
__builtin_ia32_pslldi
RenderScriptKernelAttr
--output
objc(cs)
(im)
(cm)
objc(pl)
Disable detection of uninitialized parameters and return values
Expect to read a none zero length string
string out of bound
Deprecated (like /Og /Oi /Ot /Oy /Ob2); use /O2
__builtin_ia32_pshufw
ObjCDirectMembersAttr
-ftrivial-auto-var-init-skip-non-ptr-array
mmx,sse2
__builtin_ia32_paddq
__category_list
ObjCRuntimeVisibleAttr
Disable frame pointer omission (x86 only, default)
aarch64linuxb
__OBJC
armelfb_linux_eabi
4.1/4.2
SwiftVersionedAttr
__builtin_ia32_ucomile
Enable frame pointer omission (x86 only)
/System/Library/PrivateFrameworks/
.hxx
(weak-ref) 
(tlv) 
_OBJC_CLASS_$_
Allow merging of constants
Stop initializing trivial automatic stack variables after the specified number of instances
__builtin_ia32_cmpeqsd
Requested architectures don't exist
Disable origins tracking in MemorySanitizer
macos
__builtin_ia32_vec_ext_v2di
/System/iOSSupport/
#pragma unroll_and_jam
<flags>
swiftCompatibilityHeader
expect a JSON object
required field 'version' not specified
invalid version number
 __attribute__((amdgpu_waves_per_eu
Initialize trivial automatic stack variables. Defaults to 'uninitialized'
__builtin_ia32_movmskpd
tbd-v1
-fno-sanitize-memory-use-after-dtor
Set multiple /O flags at once; e.g. '/O2y-' for '/O2 /Oy-'
elf32_x86_64
Deprecated (set output file name); use /Fe or /Fe
  instance variables:
objective-c categories:
objective-c protocols:
type defs:
  kind: 
cskyelf_linux
-ftrivial-auto-var-zero-init-max-size=
__builtin_ia32_monitor
-mcpu=cortex-a15
__builtin_ia32_pblendvb128
Disable use-after-destroy detection in MemorySanitizer
kryo
    isOptional: 
 dynamic
-pass-exit-codes
    kind: 
Input triple is not expected
/mips-r6
reexportedLibrary is not string
potentially defined selector is not string
 __attribute__((align_value
-pagezero_size
When creating a PCH, stop PCH generation after #pragma hdrstop.
V2OiV2OiV2OiIcIc
expected currentVersion
expected compatibilityVersion
installName
__builtin_ia32_aesenc512
invalid
/mips-r1
When using a PCH, skip tokens until after a #pragma hdrstop.
property should be an object
getter
setter
cannot find setter
constants
 __attribute__((always_inline
__builtin_ia32_hsubps256
Stop PCH generation after including this file.  When using a PCH, skip tokens until after this file is included.
__builtin_ia32_blendps256
-fno-sanitize-recover=
 __attribute__((analyzer_noreturn
Unknown Linkage 
threadLocalValue
-pch-through-hdrstop-use
/mips32
__builtin_ia32_vperm2f128_ps256
+m32
__builtin_ia32_vpermilps
Default type visibility
-mmicromips
access
Enable use of typed variants of C++ new() and delete()
-pch-through-header=
__builtin_ia32_vtestnzcps
/mips64r2
-fmerge-constants
argument_with_type_tag
V32ccC*
/mips64
__builtin_ia32_maskstoreps
/permissive
<?xml version="1.0" encoding="UTF-8"?>
<plist version="1.0">
<array>
V32cV16sV16s
snapshot options are deprecated and will be ignored.
 __attribute__((arm_streaming_compatible
__builtin_ia32_pblendw256
__builtin_ia32_phsubsw256
 [[clang::objc_arc_weak_reference_unavailable
duplicated ObjC category '%0(%1)' inside SDKDB
updating '%0': %1 in %2
missing ObjC interface '%0' from binary interface
-pic-is-pie
SDKDB map has poison entry for %select{class|category|protocol}0 '%1'
__builtin_ia32_pslldqi256_byteshift
-ftyped-memory-operations-experimental
__builtin_ia32_psrlw256
+msoft-float
set-installapi-flag is deprecated and will be ignored.
no such excluded %select{public|private}0 header file: '%1'
-pic-level
ignoring broken symlink '%0'
could not generate information about '%0' for 32bit injection.
-fno-sanitize-stats
/mips64/mips16
__builtin_ia32_maskstoreq256
return value has type %0 here
for target %0
Enable mcount instrumentation
-pie
%0 has no corresponding ivar here
no corresponding parameter here
parameter has type %0 here
__builtin_ia32_gatherd_q
interface %0 has super class %1 here
-fmerge-functions
-funderscoring
%0 has no corresponding field here
interface %0 has inconsistent super class here
__builtin_ia32_xgetbv
immintrin.h
swift generated text based file doesn't have symbol '%0', but found in dynamic library
architecture '%0' is not supported: '%1'
os '%0' is not supported: '%1'
<name> <arg>
missing objc %select{class|category|protocol}0 '%1' in '%2' for target '%3'
regression for ObjC selector '%0' in %select{class|category|protocol}1 '%2' in '%3' for target '%4': %5
 [[clang::availability
/mipsel-r2-soft
__builtin_ia32_lzcnt_u32
relinked libraries do not match: '%0' (provided) vs '%1' (found)
relinked libraries missing from %0: '%1'
Use the named plugin action instead of the default action (use "help" to list available options)
re-exported libraries do not match: '%0' (provided) vs '%1' (found)
-fgpu-rdc
-fno-sanitize-thread-atomics
/mipsel-r2-hard-nan2008-uclibc
no such symbols file: '%0'
no target specified: add --target=<triple>
/mips-r2-hard-uclibc
Assume that the precompiled header is a precompiled preamble covering the first N bytes of the main file
/micromipsel-r2-hard-nan2008
-funique-basic-block-section-names
/micromipsel-r2-soft
 __attribute__((cf_unknown_transfer
__builtin_ia32_vphaddbd
invalid input file: '%0'
Uniqueify Internal Linkage Symbol Names by appending the MD5 hash of the module path
-plugin
+mabi=n32
/../../../../sysroot/uclibc/usr/include
__builtin_ia32_vprotw
Disable atomic operations instrumentation in ThreadSanitizer
/../../../../sysroot/usr/include
cannot write file '%0': %1
compatibility_version does not match: '%0' (provided) vs '%1' (found)
Only precompile the input
 __declspec(guard
%0: '%1'
architectures do not match: '%0' (provided) vs '%1' (found)
cannot convert '%0' to a text-based stub file
--prefix
V16fV16fIi
Disable code coverage analysis
-fno-sanitize-thread-func-entry-exit
V4fV4fV4fV4fUcIi
 __attribute__((cpu_specific
--preprocess
#import 
/micromipsel-r6-hard
unconsumed
-funique-section-names
-D__clang_tapi__=1
-iframework
Print the output of the dependency directives source minimizer
/../../../../mips-img-linux-gnu/lib
Apple 
Disable function entry/exit instrumentation in ThreadSanitizer
.map
-preload
/mips16.*/64
-print-diagnostic-options
-%%%%%%.sh
Cannot create temporary file for swift reproducer
Note: a reproducer of the error is written to: "
version
/../../../../mips-linux-gnu/libc/uclibc/usr/include
__builtin_ia32_vpdpbusds512
-print-dependency-directives-minimized-source
-print-effective-triple
_TAPI_TEST_SWIFT_API_EXTRACT
swift-api-extract
'swift-api-extract' invocation failed:
cannot open swift-api-extract output file
/thumb
--print-diagnostic-categories
-march=armv7-a
V8dV8dvC*V8iUcIi
/armv7-a/thumb
vv*UcV8iV8dIi
vv*UcV8OiV8dIi
march=armv7-a
19.0
Simulator
--print-file-name
vUcV8ivC*IiIi
partial.sdkdb
 __declspec(code_seg
soft-fp
__builtin_ia32_knotsi
RuntimeRoot
--runtime-root
Print the effective target triple
Enable Objective-C Ivar layout bitmap print trace
__builtin_ia32_cmpb512_mask
march=ck803
march=ck804
__builtin_ia32_ucmpb256_mask
RC_BUILDIT
Print the library path for the currently used compiler runtime library ("libgcc.a" or "libclang_rt.builtins.*.a")
WATCHOS_DEPLOYMENT_TARGET
XROS_DEPLOYMENT_TARGET
-fno-sanitize-trap=
MACOSX_DEPLOYMENT_TARGET
__builtin_ia32_vpopcntq_512
diag.plist
 __attribute__((consumable_set_state_on_read
-print-multi-directory
objective-c++
TAPI_OUTPUT_FILE_TYPE
env TAPI_OUTPUT_FILE_TYPE
XBS_TAPI_SDKDB_OUTPUT_PATH
 __attribute__((enable_if
-fmessage-length=
-funswitch-loops
/usr/local/lib
 __attribute__((deprecated
open
V4fV4fV4fUc
/ck802
vV2Oi*V2OiUc
-print-preamble
unable to create temporary input file
libcodecoverage
cannot open input file
V4iV2dV4iUc
.partial.sdkdb
Generate unwinding tables for all functions
-print-multi-lib
__builtin_ia32_cvttpd2udq256_mask
macabi
re-exported library
/org.llvm.clang.tapi/ModuleCache
V8sV8sC*V8sUc
not a glob
closed
--print-prog-name
__builtin_ia32_expandsf256_mask
-funwind-tables=
__builtin_ia32_scalefpd256_mask
+march=ck810v
-version
Display the version
Print the resource directory pathname
Verify that the specified <architecture> is present in the file.
Specify the severity and extend of the validation. Valid modes are ErrorsOnly, ErrorsAndWarnings, and Pedantic.
 [[clang::external_source_symbol
/ck860v
vv*UcV4iV4OiIi
--verify-api-error-as-warning
Print the full program path of <name>
/big
--target-variant=
-target-variant
Generate code for the given target
-tvos_simulator_version_min
-tvos_version_min
Verify all symbols from swift interface exist in dynamic library.
-fuse-cuid=
-print-resource-dir
Language standard to compile for
-fno-sanitize-undefined-trap-on-error
lib64/lp64f
domain
__builtin_ia32_vpshrdq256
library
-print-rocm-search-dirs
Print the paths used for finding libraries and programs
-reexport_library
Add relinked library.
--remove
Add path to the runpath search path list for the dynamic library being created.
__builtin_ia32_cvttpd2qq128_mask
Re-export the specified framework
-fuse-cxa-atexit
-print-runtime-dir
<name>
<PublicSDKContentRoot>
-fno-sanitize=
Specify the private umbrella header location
__builtin_ia32_cvtpd2uqq512_mask
Enable private header scanning
compute
Print supported cpu models for the given target (if target is not specified, it will print the supported cpus for the default target)
-ObjC
Method to generate ID's for compilation units for single source offloading languages CUDA and HIP: 'hash' (ID's generated by hashing file path and command line options) | 'random' (ID's generated as random numbers) | 'none' (disabled). Default is 'hash'. This option will be overridden by option '-cuid=[ID]' if it is specified.
Disable public header scanning
--no-verify-api-skip-external-headers
--no-verify-api
-fuse-ld=
-print-stats
__builtin_ia32_prorvq128
exceptions
Format message diagnostics so that they fit within N columns
-mmacosx-version-min=
-mtargetos=
-mx32
__builtin_ia32_movdqa32load128_mask
Print the registered targets
Add directory to SYSTEM include search path
-ivfsoverlay
Add directory to include search path
mx32
V32sV32sC*V32sUi
--product-name=
init_seg
-install_name
-fno-schedule-insns2
List the architectures in the input file
V4fV4fV4fIiV4fUcIi
--infer-include-paths
 [[clang::lto_visibility_public
-pthreads
Enable ARC-style weak references in Objective-C
-help
vV32s*V32sUi
gcc::Linker
-fno-application-extension
-fno-rtti
Support POSIX threads in generated code
<directory>
-fmodules
-fno-cuda-flush-denormals-to-zero
UiV2dIi
Restrict code to those available for App Extensions
-ferror-limit
--filelist=
Path to ptxas (used for compiling CUDA code)
-extra-public-header
Extract the specified <architecture>.
pipeline
-targets=host-x86_64-unknown-linux
V16iV16iV4i
--extra-private-header=
-fminimize-whitespace
Exclude public header from parsing
hipfb
__builtin_ia32_shuf_f64x2
__builtin_ia32_shufps512
Demangle C++ symbols when printing warnings and errors
--diagnostics-file=
Specify dSYM path.
Preprocess to file
 __multiple_inheritance
  .protected __hip_fatbin
UiV32c
V32cUi
  .type __hip_fatbin,@object
-arch
Specify the architecture to build for
/Qfast_transcendentals
-allowable_client
Generate relocatable device code, also known as separate compilation mode
-fno-cuda-host-device-constexpr
  .p2align 
-action=
usr/lib/swift
/Qimprecise_fwaits
--filetype=obj
-fvalidate-ast-input-files-content
llvm-mc
 __attribute__((near
__builtin_ia32_pmovsqb128_mask
Headers
vector=hw0
Align branches within 32-byte boundaries to mitigate the performance impact of the Intel JCC erratum.
__builtin_ia32_pmovsqw128_mask
-fno-semantic-interposition
-plugin-opt=-amdgpu-internalize-symbols
 __attribute__((ns_consumed
__builtin_ia32_pmovusqd512mem_mask
excludes
/QIfist
-plugin-opt=-force-import-all
__builtin_ia32_pmovusqb256mem_mask
-save-temps
__builtin_ia32_pmovusqd256mem_mask
-amdgpu-internalize-symbols
__builtin_ia32_pmovdw512_mask
watchos
/Qpar
__builtin_ia32_pmovqb256_mask
Don't treat unattributed constexpr functions as __host__ __device__.
-fno-short-enums
V2dV8dIiV2dUc
 [[gnu::mode
/Qspectre-load-cf
V8OiV8OiV2OiIi
 __attribute__((noderef
Use the given vector functions library
__builtin_ia32_inserti32x4_256
 __attribute__((ns_returns_autoreleased
path
 __attribute__((ns_returns_not_retained
/Qpar-report
/Qspectre
diag-depth
--spirv-max-version=1.1
[_]?Private\.h
/Qsafe_fp_loads
-vectorize-slp=false
Don't emit warning for unused driver arguments
__builtin_ia32_kadddi
-add-plugin
--all-warnings
-analyze-function=
-analyze-function
-analyzer-checker-help-developer
Display the list of developer-only checkers such as modeling and debug checkers
-fverbose-asm
HIPSPV::Linker
__builtin_ia32_kshiftlihi
UOiUOiIUi
hipspv-link
<m68k features group>
<opencl group>
<SYCL group>
-Qunused-arguments
/Qvec
 __attribute__((nomerge
-mcpu=hexagon
<clang driver internal options>
<aarch64 features group>
<amdgpu features group>
Emit metadata containing compiler name and version
-gpsize=
dxc compatibility options
<f (clang-only) group>
<gTune group>
 __attribute__((noreturn
+reserved-r19
</M group>
CL.EXE COMPATIBILITY OPTIONS
<clang i group>
<clang ignored f group>
<clang_ignored_gcc_optimization_f_Group>
Generate verbose assembly output
__builtin_ia32_dpbf16ps_512
__builtin_ia32_vp2intersect_q_512
<T/e/s/t/u group>
vV4iV4iUc*Uc*
-std=
<action group>
<CompileOnly group>
<I group>
__builtin_ia32_mulsh_round_mask
ERROR: Cannot lock file 
Export debug info (by testing original Debug Info) failures into specified (JSON) file (should be abs path as we use append mode to insert new JSON objects).
/reference
link
V16xV16xIiV16xUs
__builtin_ia32_getexpph256_mask
-fmodule-feature
V32xV32xV32xV32xUiIi
-Wno-error=objc-signed-char-bool-implicit-int-conversion
-Wno-error=unused-but-set-variable
-Wno-error=shadow
__builtin_ia32_vcvtpd2ph256_mask
-Wno-error=typeof-bitfield
-lclang_rt.builtins-hexagon
Whether to build a relocatable precompiled header
notinbranch
-Wno-error=deprecated-non-prototype
-Wno-misleading-indentation
-Wno-quoted-include-in-framework-header
-finline-max-stacksize=
Do not include source location information with diagnostics
Replace the contents of the <from> file with the contents of the <to> file
/init.o
/finiS.o
__builtin_ia32_vcvtph2udq256_mask
-relocatable-pch
/fini.o
clang++
-remap
hexagon::Linker
-remap-file
hexagon-ld
 [[clang::objc_direct_members
__builtin_ia32_vcvtph2uqq512_mask
__builtin_ia32_vcvtusi2sh
Reorder C++ include search paths. Temporary hack.
 [[clang::objc_bridge_mutable
programs: =
libraries: =
libgcc.a
Building universal build actions
The visibility for dllexport definitions [-fvisibility-from-dllstorageclass]
/lib/i386-gnu
-resource-dir
 __attribute__((objc_direct_members
__builtin_ia32_vfcmaddcph512_maskz
 __attribute__((objc_exception
lib32
__builtin_ia32_vfcmaddcsh_round_mask
__builtin_ia32_selectb_256
GNU::Linker
--resource=
 __attribute__((objc_gc
flang
-MMD
 [[clang::objc_non_runtime_protocol
__builtin_ia32_selectps_512
-rewrite-legacy-objc
/etc/redhat-release
release 5
cuda
 [[clang::objc_requires_super
--resource
-rewrite-macros
__builtin_ia32_umonitor
api-extractor
assembler
interface-stub-merger
lipo
verify-pch
libo32
-rewrite-objc
_WriteBarrier
  File 
 Line *
 (directive at 
  (frontend)
/../lib/libc++.so
__shiftleft128
-rewrite-test
__builtin_ia32_cvttss2si64
  ...
/system/bin/linker64
__write_only
Rewrite Objective-C source to C++
__read_write
char is unsigned
--rocm-device-lib-path=
__builtin_ia32_lzcnt_u64
Hello from 
.so.1
Malformed sub-block in a diagnostic
Malformed BlockInfo block
ld-linux-armhf.so.3
__builtin_ia32_vcvttsh2si64
--rocm-path=
Unexpected end of file reading %u of %u bytes
-fgcse-las
<feature>
Use an unsigned type for wchar_t
__builtin_setps
__xcore__
char
default
extern
float
long
short
switch
union
_Alignof
_Complex
_Thread_local
-Rpass=
catch
delete
friend
namespace
reinterpret_cast
this
typeid
using
char16_t
decltype
co_await
co_yield
requires
typeof
_Decimal32
Set the rsp quoting to either 'posix', or 'windows'
__builtin_FILE
__builtin_COLUMN
__float128
__imag
__PRETTY_FUNCTION__
__FUNCSIG__
__is_destructible
__is_trivially_destructible
__has_trivial_move_assign
__has_nothrow_copy
__has_trivial_destructor
__is_abstract
__is_enum
__is_pod
__is_trivially_assignable
--rtlib
__make_signed
__remove_const
__remove_reference_t
__remove_volatile
__is_scoped_enum
__is_lvalue_expr
__is_complete_type
__is_void
__is_object
__is_pointer
__is_volatile
__is_unsigned
__module_private__
__builtin_ptrauth_struct_disc
__builtin_tmo_get_type_descriptor
__forceinline
__global
__kernel
__write_only
image1d_buffer_t
image2d_depth_t
image2d_array_msaa_depth_t
image3d_t
__pascal
__bool
__bridge_retained
__covariant
_Null_unspecified
__sptr
__uuidof
-save-temps=
__interface
__builtin_available
comment
utf8_char_constant
string_literal
utf32_string_literal
l_square
ellipsis
ampequal
plusequal
arrow
slash
percentequal
spaceship
/sdl-
pipeequal
semi
hashhash
periodstar
caretcaret
annot_template_id
annot_primary_expr
annot_decltype
annot_pragma_msstruct
annot_pragma_weakalias
annot_pragma_fenv_round
annot_pragma_ms_pointers_to_members
annot_pragma_openmp_end
Make the module with the given compile job cache key available as if it were at <path>. This option may be combined with -fmodule-file= to import the module. The module must have previously been built with -fcache-compile-job.
-fweb
__is_trivially_destructible
__has_trivial_move_constructor
__has_nothrow_constructor
__has_virtual_destructor
__is_aggregate
__is_pod
__is_trivial
__is_bounded_array
__is_unbounded_array
__is_complete_type
__is_function
__is_object
__is_compound
__is_volatile
__builtin_types_compatible_p
__is_trivially_assignable
-seg_addr_table
__array_rank
alignof
__builtin_xnu_type_signature
-segaddr
-hwmultf5
LLVM 15.0.0
-Wfatal-errors=
function-exit
+hwmult16
ompx_no_call_asm
201307
Pointer preferred alignment must be a power of 2
ABI alignment specification must be >0 for non-aggregate types
Invalid preferred alignment, must be a 16bit integer
Unexpected trailing characters after mangling specifier in datalayout string
Unknown mangling specifier in datalayout string
-fno-debug-pass-manager
-D__MSP430i
__attribute__((objc_gc(strong)))
Invalid regular expression '
 [[gnu::stdcall
Disables inttoptr/ptrtoint roundtrip optimization
-lsim
running pass 
use-dereferenceable-at-point-semantics
DW_TAG_formal_parameter
DW_TAG_member
DW_TAG_compile_unit
DW_TAG_union_type
DW_TAG_variant
DW_TAG_ptr_to_member_type
DW_TAG_with_stmt
DW_TAG_constant
DW_TAG_file_type
DW_TAG_template_type_parameter
DW_TAG_try_block
DW_TAG_restrict_type
DW_TAG_interface_type
DW_TAG_shared_type
DW_TAG_template_alias
DW_TAG_call_site
DW_TAG_skeleton_unit
DW_TAG_GNU_BINCL
DW_TAG_GNU_template_parameter_pack
DW_TAG_SUN_function_template
Serialize compiler diagnostics to a file
DW_TAG_SUN_rtti_descriptor
DW_TAG_SUN_f90_interface
DW_TAG_ALTIUM_mwa_circ_type
DW_TAG_ALTIUM_rom
DW_TAG_UPC_shared_type
DW_TAG_PGI_kanji_type
DW_TAG_BORLAND_Delphi_set
DW_TAG_BORLAND_Delphi_variant
DW_AT_bit_size
DW_AT_high_pc
DW_AT_import
DW_AT_common_reference
DW_AT_is_optional
DW_AT_prototyped
DW_AT_abstract_origin
-shared-libgcc
DW_AT_decl_column
DW_AT_declaration
DW_AT_friend
DW_AT_macro_info
DW_AT_type
DW_AT_virtuality
DW_AT_byte_stride
DW_AT_entry_pc
DW_AT_call_line
DW_AT_decimal_scale
DW_AT_mutable
DW_AT_explicit
DW_AT_signature
DW_AT_const_expr
DW_AT_string_length_byte_size
-show-encoding
DW_AT_macros
DW_AT_call_all_tail_calls
DW_AT_call_pc
DW_AT_call_target
DW_AT_export_symbols
DW_AT_loclists_base
DW_AT_MIPS_loop_begin
DW_AT_MIPS_tail_loop_begin
DW_AT_MIPS_clone_origin
DW_AT_MIPS_stride_elem
DW_AT_HP_raw_data_ptr
DW_AT_HP_opt_level
DW_AT_HP_linkage_name
DW_AT_HP_unit_size
DW_AT_DW_AT_INTEL_other_endian
-show-inst
DW_AT_src_info
DW_AT_body_begin
DW_AT_GNU_call_site_value
DW_AT_GNU_call_site_target
DW_AT_GNU_macros
DW_AT_GNU_dwo_id
DW_AT_GNU_discriminator
DW_AT_GNU_locviews
DW_AT_SUN_vbase
DW_AT_SUN_browser_file
DW_AT_SUN_omp_tpriv_addr
DW_AT_SUN_func_offset
DW_AT_SUN_original_name
DW_AT_SUN_part_link_name
DW_AT_SUN_import_by_name
/showFilenames
DW_AT_SUN_dtor_state_initial
DW_AT_SUN_import_by_lname
DW_AT_SUN_fortran_based
DW_AT_use_GNAT_descriptive_type
DW_AT_GO_key
DW_AT_GO_runtime_type
DW_AT_PGI_lbase
DW_AT_PGI_soffset
DW_AT_BORLAND_Delphi_unit
DW_AT_BORLAND_Delphi_metaclass
DW_AT_BORLAND_Delphi_ABI
DW_AT_BORLAND_Delphi_frameptr
DW_AT_LLVM_ptrauth_key
DW_AT_LLVM_apinotes
DW_AT_APPLE_isa
/showIncludes
DW_AT_APPLE_property_attribute
DW_AT_APPLE_objc_direct
DW_FORM_block4
DW_FORM_data4
DW_FORM_flag
DW_FORM_udata
DW_FORM_ref8
DW_FORM_ref_udata
DW_FORM_addrx
DW_FORM_data16
DW_FORM_ref_sup8
DW_FORM_strx2
DW_FORM_addrx4
DW_FORM_GNU_ref_alt
DW_OP_addr
-skip-unused-modulemap-deps
DW_OP_constu
DW_OP_drop
DW_OP_xderef
DW_OP_and
DW_OP_not
DW_OP_plus_uconst
DW_OP_bra
DW_OP_eq
DW_OP_lit0
DW_OP_lit3
DW_OP_lit8
DW_OP_lit10
DW_OP_lit16
DW_OP_lit19
DW_OP_lit24
-source-date-epoch
DW_OP_reg0
DW_OP_reg3
DW_OP_reg8
DW_OP_reg10
DW_OP_reg16
DW_OP_reg19
DW_OP_reg24
DW_OP_reg25
DW_OP_breg0
DW_OP_breg3
DW_OP_breg8
DW_OP_breg10
DW_OP_breg16
DW_OP_breg19
DW_OP_breg23
-specs=
DW_OP_regx
DW_OP_piece
DW_OP_call2
DW_OP_call_ref
DW_OP_implicit_pointer
DW_OP_entry_value
DW_OP_convert
DW_OP_reinterpret
DW_OP_HP_tls
DW_OP_WASM_location_int
DW_OP_GNU_const_index
DW_OP_LLVM_fragment
DW_ATE_boolean
DW_ATE_signed
DW_ATE_packed_decimal
-split-dwarf-output
DW_ATE_ASCII
DW_ATE_HP_complex_float128
DW_DS_leading_overpunch
DW_DS_leading_separate
DW_END_hi_user
DW_ACCESS_private
DW_VIS_exported
DW_VIS_qualified
DW_LANG_C_plus_plus
DW_LANG_Fortran77
DW_LANG_C99
DW_LANG_Fortran95
DW_LANG_Python
DW_LANG_Modula3
DW_LANG_C_plus_plus_11
-stack-protector
DW_LANG_RenderScript
DW_LANG_GOOGLE_RenderScript
DW_ID_case_insensitive
DW_CC_program
DW_CC_BORLAND_safecall
DW_CC_BORLAND_msfastcall
DW_CC_LLVM_Win64
DW_CC_LLVM_X86_64SysV
DW_CC_LLVM_PreserveMost
DW_CC_LLVM_SwiftTail
DW_INL_declared_inlined
DW_ORD_col_major
DW_LNS_set_column
DW_LNS_const_add_pc
DW_LNE_end_sequence
Filename (or -) to write stack usage output to
DW_MACINFO_vendor_ext
DW_MACRO_undef
DW_MACRO_import
DW_MACRO_undef_sup
DW_MACRO_GNU_start_file
DW_MACRO_GNU_undef_indirect
DW_RLE_end_of_list
DW_RLE_base_addressx
DW_LLE_end_of_list
DW_LLE_startx_length
DW_LLE_start_length
DW_CFA_GNU_window_save
DW_CFA_restore
DW_CFA_advance_loc2
DW_CFA_undefined
Should __STATIC__ be defined
DW_CFA_expression
DW_CFA_def_cfa_offset_sf
DW_CFA_LLVM_def_aspace_cfa_sf
DW_APPLE_PROPERTY_getter
DW_APPLE_PROPERTY_setter
DW_APPLE_PROPERTY_strong
DW_UT_compile
DW_UT_type
DW_ATOM_cu_offset
DW_ATOM_qual_name_hash
FUNCTION
UNUSED5
-fhalf-no-semantic-interposition
-fno-stack-protector
netbsd::Assembler
R_NEG
R_TRL
R_BA
R_BR
R_TLS_LE
rcrt0.o
Ignore warnings from system headers (default)
Fixed or VBR abbrev record with size > MaxChunkData
Abbrev record with no operands
cortex-a510
cortex-a65ae
cortex-a76ae
cortex-a78c
cortex-x2
neoverse-n1
apple-a7
apple-a10
apple-a15
apple-a16
exynos-m5
kryo
thunderxt81
tsv110
+crc
+crypto
+dotprod
+sve2
-std-default=
+sve2-sha3
+mte
+tme
+pauth
+sme2
+hbc
+v8a
+v8.1a
8.3-A
armv8.4-a
armv8.6-a
armv8.7-a
8.8-A
-stdlib++-isystem
libc++,libstdc++,platform
9.2-A
9.3-A
none
-crc
-crypto
sha3
-aes
dotprod
-fullfp16
profile
-sve
-sve2
-sve2-sha3
sve2p1
-rand
-predres
i8mm
-f64mm
-tme
-pauth
-sme-i16i64
sme2
Disable delayed template parsing
-sys-header-deps
endmanonly
v7-a
v7em
v8.1-a
v8.2-a
v8.6-a
v8.8a
v9-a
v9.1-a
v8m.main
v8.1-m.main
-vfp3d16sp
-vfp3sp
-fp-armv8d16sp
-d32
fpe2
vfp3
vfpv4
fp4-sp-d16
fpv5-dp-d16
neon
strongarm110
strongarm1110
arm9tdmi
arm922t
arm9e
arm946e-s
arm1136j-s
mpcorenovfp
cortex-m0
cortex-m1
cortex-a12
krait
cortex-r7
cortex-m35p
--system-header-prefix=
cortex-a32
cortex-a72
cortex-a75
cortex-a710
neoverse-n1
exynos-m4
exynos-m5
fp.dp
apcs-gnu
5TEJ
Only run preprocess and compilation steps
-target-cpu
armv6-m
armv7-a
+v7ve
7E-M
armv8.2-a
8.2-A
+v8.4a
+v8.5a
8.7-A
armv8.8-a
armv9.1-a
armv9.2-a
armv9.3-a
8-M.Mainline
8.1-M.Mainline
+v7s
vfpv3xd
fp-armv8-fullfp16-d16
crypto-neon-fp-armv8
softvfp
+ras
cdecp0
cdecp1
cdecp3
-cdecp5
[<name>=]<file>
-fno-sycl
--target-help
Significand has no digits
Invalid string length
String has no digits
0.0E+0
Invalid trailing hexadecimal fraction!
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
Bytes wasted: 
 option: 
inconsistency in registered CommandLine options
-fwasm-exceptions
zlib error: Z_DATA_ERROR
+fpuv3_hf
+fpuv3_df
ck802t
e802
ck803t
ck803fh
ck803ef
ck803efh
ck803hr1
ck803tr1
ck803htr3
ck803fr2
ck803er2
ck803ehr2
ck803ehtr1
-target
ck803efhr3
ck803ftr3
ck803efhtr2
s803
ck803se
ck803seft
ck804f
ck804fh
ck804ft
e804d
e804dft
ck805e
ck805eft
ck807
c807
Treat <file> as C source file
ck810f
c810
ck810etv
ck810fv
ck860f
ck860fv
-fpuv2_sf
fpuv2_df
-fpuv3_hf
fpuv3_df
float1e2
-float1e2
-float3e4
-float7e60
+multiple_stld
Run the InputOuputTest action. Use for development and testing only.
dsp1e2
dspe60
-dspv2
+dsp_silan
+trust
+java
nvic
-high-registers
-smart
+vdsp2e60f
vdspv2
-hard-tp
soft-tp
istack
+constpool
Treat all source files as C++
+vdspv1
-2e3
-3e3r1
-3e3r2
+3e7
-3e7
no null terminated string at offset 0x%llx
line 
failed_to_rename_temp_file
decimal32
alignof 
operator.
'block-literal'
<char, std::char_traits<char>
VTT for 
typeinfo for 
guard variable for 
initializer for module 
Invalid JSON value (null?)
Expected object key
Invalid JSON value
Invalid \u escape sequence
-fdebug-dump-symbols
-fno-depscan
string must begin with rv32{i,e,g} or rv64{i,g}
standard user-level extension not given in canonical order '%c'
mafdcbv
%s name missing after '%s'
zve64d
zve32f requires f or zfinx extension to also be specified
zhinxmin
ilp32d
zihintntl
zbkc
zksed
zvl128b
zvl4096b
zvl8192b
zicboz
minor version number missing after 'p' for extension '
experimental extension requires explicit version number `
unsupported version number 
 for extension '
-fcoroutines-ts
SmallVector capacity unable to grow. Already at maximum size 
-fconstexpr-backtrace-limit
-fconstexpr-steps
Generate source-level debug information with dwarf version 3
Statistics are disabled.  
' have both been used in prior remappings. Move this remapping earlier in the file.
objective-c-cpp-output
c++-header-unit-cpp-output
c++-system-header
generic-rv64
sifive-e20
sifive-e76
sifive-s54
sifive-7-series
-64bit
gfx602
gfx700
gfx703
mullins
gfx802
gfx803
tongapro
gfx810
gfx909
gfx940
gfx1030
gfx1032
gfx1101
r600
rs880
Set target profile
cedar
hemlock
barts
aruba
-fcaller-saves
-fno-threadsafe-statics
   --User+System--
  ---Instr---
%.*e
.user
Miscellaneous Ungrouped Timers
  %7.4f (%5.1f%%)
c++-user-header
amdil64
armeb
bpfel
hsail
le32
mips64
mips
powerpc64le
r600
shave
sparc
s390x
thumb
i386
xcore
arm64e
apple
ananas
-undef
emscripten
haiku
linux
macosx
openbsd
rtems
sepos
wasi
coreclr
eabihf
gnueabihf
gnu_ilp32
musleabihf
pixel
compute
Generate unoptimized CFGs for all analyses
mesh
ppcle
cortex-a8
i786
amd64
mipsallegrex
mipsallegrexel
spirv32v1.0
spirv32v1.3
spirv64v1.2
spirv64v1.4
-femit-dwarf-unwind=
Generate source-level debug information with the default dwarf version
-fdwarf-directory-asm
-finstrument-functions-after-inlining
/utf-8
 -> '
process
overlay-relative
expected array
unknown key
expected mapping node for file or directory entry
'use-external-name' is not supported for 'directory' entries
expected boolean value
  'case-sensitive': '
  'use-external-names': '
'name': "
 on 
Print a template comparison tree for differing templates
OnlyIfDifferent
invalid config
error: 
color
Print diagnostic category
ssse3
avx512dq
avx512pf
avx512vpopcntdq
gfni
winchip-c6
pentium-mmx
pentiumpro
yonah
prescott
atom
westmere
ivybridge
skylake
/validate-charset
icelake-server
alderlake
k6-2
athlon
athlon64
k8-sse3
btver1
btver2
znver3
x86-64-v3
64bit
amx-bf16
clzero
crc32
fxsr
Path to the VCToolChain
mwaitx
prefetchwt1
rdrnd
vaes
xsave
xsavec
avx512fp16
Windows Kits
#;/?:@&=+$,_.!~*'()[]
,:?[]{}
Got empty alias or anchor
Unrecognized character while tokenizing.
Unrecognized escape code
Unexpected token. Expected Key or Block End
tag:yaml.org,2002:
-vectorize-loops
not a sequence
unexpected scalar in sequence of bit values
unknown node kind
invalid call
                
invalid boolean
delete
IO failure on output stream: 
cntrl
graph
punct
quotation-mark
dollar-sign
asterisk
hyphen
solidus
-verify-ignore-unexpected=
eight
semicolon
commercial-at
backslash
low-line
left-brace
-verify-ignore-unexpected
invalid regular expression
invalid character class
REG_ESUBREG
parentheses not balanced
braces not balanced
out of memory
REG_EMPTY
invalid argument to regex routine
hw.physicalcpu
Reserve the x29 register (AArch64/RISC-V only)
-ggdb0
TMPDIR
TEMP
/dev/null
 (core dumped)
Can't redirect stderr to stdout
Cannot open file '
' for 
 %-*s
 %#0*lx
pthread_join failed
Missing PublicSDKContentRoot
Equivalent to -verify=expected
__builtin_sve_svldff1uh_gather_u64base_u64
__builtin_sve_svldff1uh_gather_u64index_u64
__builtin_sve_svldff1uh_gather_u64offset_s64
__builtin_sve_svldff1uh_s64
__builtin_sve_svldff1uh_u32
__builtin_sve_svldff1uh_vnum_s64
acquired_before
__builtin_sve_svldff1uw_gather_s64index_u64
__builtin_sve_svldff1uw_gather_s64offset_s64
__builtin_sve_svldff1uw_gather_u64base_index_u64
assert_shared_capability
__builtin_sve_svldff1uw_gather_u64base_u64
__builtin_sve_svldff1uw_gather_u64index_s64
__builtin_sve_svldff1uw_gather_u64offset_s64
assert_shared_lock
__builtin_sve_svldff1uw_vnum_u64
__builtin_sve_svldnf1_bf16
__builtin_sve_svldnf1_f64
exclusive_trylock_function
__builtin_sve_svldnf1_s8
__builtin_sve_svldnf1_u16
__builtin_sve_svldnf1_u64
lock_returned
__builtin_sve_svldnf1_vnum_f64
__builtin_sve_svldnf1_vnum_s16
__builtin_sve_svldnf1_vnum_s8
pt_guarded_by
__builtin_sve_svldnf1_vnum_u8
__builtin_sve_svldnf1sb_s16
-ggnu-pubnames
release_shared_capability
__builtin_sve_svldnf1sb_vnum_s32
__builtin_sve_svldnf1sb_vnum_s64
__builtin_sve_svldnf1sb_vnum_u64
unlock_function
__builtin_sve_svldnf1sh_u64
__builtin_sve_svldnf1sh_vnum_s32
__builtin_sve_svldnf1sh_vnum_u32
exclusive_locks_required
__builtin_sve_svldnf1sw_vnum_u64
__builtin_sve_svldnf1ub_s16
__builtin_sve_svldnf1ub_u16
shared_locks_required
__builtin_sve_svldnf1ub_vnum_s32
__builtin_sve_svldnf1ub_vnum_s64
Do not process trigraph sequences
try_acquire_capability
__builtin_sve_svldnf1uh_u64
__builtin_sve_svldnf1uh_vnum_s32
__builtin_sve_svldnf1uh_vnum_u64
callback
__builtin_sve_svldnf1uw_vnum_u64
__builtin_sve_svldnt1_bf16
__builtin_sve_svldnt1_f32
Owner
__builtin_sve_svldnt1_gather_s64offset_f64
__builtin_sve_svldnt1_gather_s64offset_s64
__builtin_sve_svldnt1_gather_u32base_index_f32
preferred_name
__builtin_sve_svldnt1_gather_u32base_offset_s32
__builtin_sve_svldnt1_gather_u32base_offset_u32
/GL-
cpu_dispatch
__builtin_sve_svldnt1_gather_u64base_index_f64
__builtin_sve_svldnt1_gather_u64base_index_s64
__builtin_sve_svldnt1_gather_u64base_offset_s64
interrupt
__builtin_sve_svldnt1_gather_u64index_f64
__builtin_sve_svldnt1_gather_u64index_s64
__builtin_sve_svldnt1_gather_u64offset_f64
pointer_with_type_tag
__builtin_sve_svldnt1_s64
__builtin_sve_svldnt1_s8
__builtin_sve_svldnt1_u64
availability
__builtin_sve_svldnt1_vnum_f32
__builtin_sve_svldnt1_vnum_f64
Disable use of typed variants of C++ new() and delete()
clang_builtin_alias
__builtin_sve_svldnt1_vnum_u64
__builtin_sve_svldnt1_vnum_u8
__builtin_sve_svldnt1b_u8_x2
callable_when
__builtin_sve_svldnt1b_vnum_u8_x2
__builtin_sve_svldnt1b_vnum_u8_x4
__builtin_sve_svldnt1d_f64_x4
enum_extensibility
__builtin_sve_svldnt1d_vnum_f64_x2
__builtin_sve_svldnt1d_vnum_f64_x4
__builtin_sve_svldnt1d_vnum_u64_x2
function_return
__builtin_sve_svldnt1h_f16_x2
__builtin_sve_svldnt1h_f16_x4
Emit debug line number tables only
loop
__builtin_sve_svldnt1h_vnum_f16_x2
__builtin_sve_svldnt1h_vnum_f16_x4
__builtin_sve_svldnt1h_vnum_u16_x2
nounroll
__builtin_sve_svldnt1sb_gather_u32base_offset_s32
__builtin_sve_svldnt1sb_gather_u32base_offset_u32
__builtin_sve_svldnt1sb_gather_u32base_u32
nounroll_and_jam
__builtin_sve_svldnt1sb_gather_u64base_s64
__builtin_sve_svldnt1sb_gather_u64base_u64
__builtin_sve_svldnt1sh_gather_s64index_s64
ns_error_domain
__builtin_sve_svldnt1sh_gather_u32base_index_s32
declare simd
Disable Typed Memory Operations call site rewriting
declare target
__builtin_sve_svldnt1sh_gather_u64base_index_s64
__builtin_sve_svldnt1sh_gather_u64base_index_u64
__builtin_sve_svldnt1sh_gather_u64base_s64
objc_bridge_mutable
__builtin_sve_svldnt1sh_gather_u64offset_s64
__builtin_sve_svldnt1sh_gather_u64offset_u64
__builtin_sve_svldnt1sw_gather_s64index_u64
objc_gc
__builtin_sve_svldnt1sw_gather_u64base_offset_s64
__builtin_sve_svldnt1sw_gather_u64base_offset_u64
__builtin_sve_svldnt1sw_gather_u64index_s64
objc_ownership
__builtin_sve_svldnt1ub_gather_s64offset_s64
__builtin_sve_svldnt1ub_gather_s64offset_u64
-gmlt
ownership_returns
__builtin_sve_svldnt1ub_gather_u64base_offset_s64
__builtin_sve_svldnt1ub_gather_u64base_offset_u64
__builtin_sve_svldnt1ub_gather_u64offset_s64
param_typestate
__builtin_sve_svldnt1uh_gather_s64offset_s64
__builtin_sve_svldnt1uh_gather_s64offset_u64
__builtin_sve_svldnt1uh_gather_u32base_index_u32
return_typestate
__builtin_sve_svldnt1uh_gather_u32offset_s32
__builtin_sve_svldnt1uh_gather_u32offset_u32
__builtin_sve_svldnt1uh_gather_u64base_offset_s64
swift_async
__builtin_sve_svldnt1uh_gather_u64index_s64
__builtin_sve_svldnt1uh_gather_u64index_u64
-fno-underscoring
swift_error
__builtin_sve_svldnt1uw_gather_u64base_index_s64
__builtin_sve_svldnt1uw_gather_u64base_index_u64
__builtin_sve_svldnt1uw_gather_u64base_s64
swift_wrapper
__builtin_sve_svldnt1uw_gather_u64offset_s64
__builtin_sve_svldnt1uw_gather_u64offset_u64
__builtin_sve_svldnt1w_f32_x4
type_tag_for_datatype
__builtin_sve_svldnt1w_vnum_f32_x2
__builtin_sve_svldnt1w_vnum_f32_x4
__builtin_sve_svldnt1w_vnum_u32_x2
ptrauth_vtable_pointer
__builtin_sve_svlen_f16
UWiq8h
-gno-column-info
xnu_usage_semantics
__builtin_sve_svlen_s32
UWiq4i
__builtin_sve_svlen_s8
annotate
__builtin_sve_svlen_u32
UWiq4Ui
UWiq2UWi
__builtin_sve_svlogb_f16_z
__builtin_sve_svlogb_f32_m
__builtin_sve_svlogb_f64_m
tvOS
__builtin_sve_svlsl_n_s16_x
watchOS
-fno-unique-internal-linkage-names
bridgeOS
__builtin_sve_svlsl_n_s8_m
__builtin_sve_svlsl_n_s8_x
__builtin_sve_svlsl_n_u16_x
ios_app_extension
__builtin_sve_svlsl_n_u32_z
__builtin_sve_svlsl_n_u64_m
__builtin_sve_svlsl_n_u64_z
tvOSApplicationExtension
__builtin_sve_svlsl_s16_x
__builtin_sve_svlsl_s16_z
__builtin_sve_svlsl_s32_z
watchOSApplicationExtension
__builtin_sve_svlsl_s8_m
__builtin_sve_svlsl_s8_x
-gno-inline-line-tables
macCatalyst
__builtin_sve_svlsl_u32_z
__builtin_sve_svlsl_u64_m
__builtin_sve_svlsl_u8_m
macCatalystApplicationExtension
__builtin_sve_svlsl_wide_n_s16_x
__builtin_sve_svlsl_wide_n_s16_z
__builtin_sve_svlsl_wide_n_s32_x
xros_app_extension
__builtin_sve_svlsl_wide_n_u16_m
q8Usq16bq8UsUWi
__builtin_sve_svlsl_wide_n_u32_m
visionOSApplicationExtension
__builtin_sve_svlsl_wide_n_u8_m
q16Ucq16bq16UcUWi
Don't use unique names for text and data sections
shadermodel
__builtin_sve_svlsl_wide_s32_x
__builtin_sve_svlsl_wide_s32_z
__builtin_sve_svlsl_wide_s8_z
__builtin_sve_svlsl_wide_u16_z
__builtin_sve_svlsl_wide_u32_m
__builtin_sve_svlsl_wide_u32_x
namespace 
__builtin_sve_svlsl_wide_u8_z
__builtin_sve_svlsr_n_u16_m
__builtin_sve_svlsr_n_u32_m
parsing namespace
__builtin_sve_svlsr_n_u64_x
__builtin_sve_svlsr_n_u64_z
-gno-record-gcc-switches
attributes list
__builtin_sve_svlsr_u32_m
__builtin_sve_svlsr_u32_x
__builtin_sve_svlsr_u64_x
alias declaration
__builtin_sve_svlsr_u8_z
__builtin_sve_svlsr_wide_n_u16_m
__builtin_sve_svlsr_wide_n_u16_z
final
__builtin_sve_svlsr_wide_n_u8_x
__builtin_sve_svlsr_wide_n_u8_z
__builtin_sve_svlsr_wide_u16_z
sealed
__builtin_sve_svlsr_wide_u32_z
abstract
-fno-unroll-all-loops
override
q4fq16bq4fq4fq4f
__builtin_sve_svmad_f32_x
q2dq16bq2dq2dq2d
q8hq16bq8hq8hh
__builtin_sve_svmad_n_f16_x
__builtin_sve_svmad_n_f32_m
access declaration
q2dq16bq2dq2dd
__builtin_sve_svmad_n_f64_x
q8sq16bq8sq8ss
parsing struct/union/class body
q4iq16bq4iq4ii
__builtin_sve_svmad_n_s32_x
-gno-strict-dwarf
throw
q16Scq16bq16Scq16ScSc
__builtin_sve_svmad_n_s8_x
q8Usq16bq8Usq8UsUs
__gnu__
q4Uiq16bq4Uiq4UiUi
__builtin_sve_svmad_n_u32_x
__builtin_sve_svmad_n_u64_m
nodiscard
q16Ucq16bq16Ucq16UcUc
__builtin_sve_svmad_n_u8_x
q8sq16bq8sq8sq8s
<anonymous>
q4iq16bq4iq4iq4i
__builtin_sve_svmad_s32_x
Turn off loop unroller
__is_aggregate
q16Scq16bq16Scq16Scq16Sc
__builtin_sve_svmad_s8_x
q8Usq16bq8Usq8Usq8Us
__is_array
q4Uiq16bq4Uiq4Uiq4Ui
__builtin_sve_svmad_u32_x
__builtin_sve_svmad_u64_m
__is_base_of
q16Ucq16bq16Ucq16Ucq16Uc
__builtin_sve_svmad_u8_x
__builtin_sve_svmatch_s8
__is_class
__builtin_sve_svmax_f16_x
__builtin_sve_svmax_f16_z
Instrument device library for HIP, which is a LLVM bitcode containing __cyg_profile_func_enter and __cyg_profile_func_exit
__is_compound
__builtin_sve_svmax_n_f16_m
__builtin_sve_svmax_n_f16_x
__builtin_sve_svmax_n_f32_x
__is_constructible
__builtin_sve_svmax_n_f64_z
__builtin_sve_svmax_n_s16_m
__builtin_sve_svmax_n_s16_z
__is_convertible_to
__builtin_sve_svmax_n_s64_x
__builtin_sve_svmax_n_s64_z
__builtin_sve_svmax_n_s8_z
__is_empty
__builtin_sve_svmax_n_u32_m
__is_enum
-fno-unsafe-math-optimizations
__is_floating_point
__builtin_sve_svmax_n_u8_z
__builtin_sve_svmax_s16_m
__builtin_sve_svmax_s32_m
__is_function
__builtin_sve_svmax_s64_x
__builtin_sve_svmax_s64_z
__builtin_sve_svmax_s8_x
__is_integral
__builtin_sve_svmax_u32_m
__builtin_sve_svmax_u32_x
__builtin_sve_svmax_u64_x
__is_literal
__builtin_sve_svmax_u8_z
__builtin_sve_svmaxnm_f16_m
Prepare '-aux-triple' only without populating '-aux-target-cpu' and '-aux-target-feature'.
__is_lvalue_reference
__builtin_sve_svmaxnm_f64_x
__builtin_sve_svmaxnm_f64_z
__builtin_sve_svmaxnm_n_f16_z
__is_member_object_pointer
__builtin_sve_svmaxnm_n_f64_m
__builtin_sve_svmaxnm_n_f64_x
__builtin_sve_svmaxnmp_f16_m
__is_nothrow_assignable
__builtin_sve_svmaxnmp_f64_x
__builtin_sve_svmaxnmv_f16
__builtin_sve_svmaxp_f16_m
__is_nothrow_destructible
__builtin_sve_svmaxp_f64_m
__builtin_sve_svmaxp_f64_x
-fno-unswitch-loops
__is_object
__builtin_sve_svmaxp_s8_m
__builtin_sve_svmaxp_s8_x
__builtin_sve_svmaxp_u32_m
__is_pointer
__builtin_sve_svmaxp_u8_m
__builtin_sve_svmaxp_u8_x
__builtin_sve_svmaxv_f32
__is_reference
__builtin_sve_svmaxv_s8
__builtin_sve_svmaxv_u16
__builtin_sve_svmaxv_u8
__is_rvalue_expr
__builtin_sve_svmin_f32_m
__builtin_sve_svmin_f32_x
-grecord-command-line
__is_same
__builtin_sve_svmin_n_f16_z
__builtin_sve_svmin_n_f32_m
__builtin_sve_svmin_n_f64_m
__is_scoped_enum
__builtin_sve_svmin_n_s16_x
__builtin_sve_svmin_n_s16_z
__builtin_sve_svmin_n_s32_x
__is_signed
__builtin_sve_svmin_n_s8_m
__builtin_sve_svmin_n_s8_x
__builtin_sve_svmin_n_u16_x
__is_trivial
Generate calls to instrument function entry and exit
__is_trivially_assignable
-fno-use-ctor-homing
__is_trivially_constructible
__builtin_sve_svmin_s16_x
__builtin_sve_svmin_s16_z
__builtin_sve_svmin_s32_z
__is_unbounded_array
__builtin_sve_svmin_s8_m
__builtin_sve_svmin_s8_x
__builtin_sve_svmin_u16_m
__is_unsigned
__builtin_sve_svmin_u32_z
__builtin_sve_svmin_u64_m
__builtin_sve_svmin_u8_m
__is_volatile
__builtin_sve_svminnm_f16_x
__builtin_sve_svminnm_f16_z
-greproducible
RTT_JOIN(__, add_pointer)
__builtin_sve_svminnm_n_f16_m
__builtin_sve_svminnm_n_f16_x
__builtin_sve_svminnm_n_f32_x
RTT_JOIN(__, decay)
__builtin_sve_svminnm_n_f64_z
__builtin_sve_svminnmp_f16_m
__builtin_sve_svminnmp_f32_m
RTT_JOIN(__, make_unsigned)
__builtin_sve_svminnmv_f32
__builtin_sve_svminnmv_f64
__builtin_sve_svminp_f32_m
RTT_JOIN(__, remove_const)
__builtin_sve_svminp_s16_m
__builtin_sve_svminp_s16_x
-fno-use-cxa-atexit
RTT_JOIN(__, remove_cvref)
__builtin_sve_svminp_u16_m
__builtin_sve_svminp_u16_x
__builtin_sve_svminp_u64_m
RTT_JOIN(__, remove_pointer)
__builtin_sve_svminv_f16
__builtin_sve_svminv_f32
__builtin_sve_svminv_s16
RTT_JOIN(__, remove_restrict)
__builtin_sve_svminv_u32
__builtin_sve_svminv_u64
__builtin_sve_svmla_f16_x
RTT_JOIN(__, underlying_type)
__builtin_sve_svmla_f32_z
__builtin_sve_svmla_f64_m
__bridge_retained
__builtin_sve_svmla_lane_f64
q2dq2dq2dq2dIUWi
__builtin_sve_svmla_lane_s64
android
__builtin_sve_svmla_n_f16_m
__builtin_sve_svmla_n_f16_x
__builtin_sve_svmla_n_f32_m
Fuchsia
__builtin_sve_svmla_n_f64_z
__builtin_sve_svmla_n_s16_m
__builtin_sve_svmla_n_s32_m
macOS (App Extension)
__builtin_sve_svmla_n_s64_x
tvOS (App Extension)
-fno-use-init-array
watchOS (App Extension)
__builtin_sve_svmla_n_u32_m
__builtin_sve_svmla_n_u32_x
__builtin_sve_svmla_n_u64_x
visionOS (App Extension)
__builtin_sve_svmla_n_u8_z
__builtin_sve_svmla_s16_m
__builtin_sve_svmla_s16_z
HLSL ShaderModel
__builtin_sve_svmla_s64_x
__builtin_sve_svmla_s64_z
__builtin_sve_svmla_s8_z
template 
__builtin_sve_svmla_u32_m
__builtin_sve_svmla_u32_x
-gsce
addrspace_cast
__builtin_sve_svmla_u8_z
__builtin_sve_svmlalb_f32
q4fq4fq8hq8hIUWi
dynamic_cast
q2Wiq2Wiq4iq4iIUWi
__builtin_sve_svmlalb_lane_u32
__builtin_sve_svmlalb_lane_u64
static_cast
__builtin_sve_svmlalb_n_s32
__builtin_sve_svmlalb_n_s64
__builtin_sve_svmlalb_n_u64
typeid
__builtin_sve_svmlalb_u16
__builtin_sve_svmlalb_u32
-fno-use-line-directives
operator 
__builtin_sve_svmlalt_lane_u64
__builtin_sve_svmlalt_n_f32
__builtin_sve_svmlalt_n_s64
__builtin_sve_svmlalt_s16
__builtin_sve_svmlalt_s32
__builtin_sve_svmlalt_u16
__builtin_bit_cast
__builtin_sve_svmls_f16_z
__builtin_sve_svmls_f32_m
__builtin_sve_svmls_f64_m
register
__builtin_sve_svmls_lane_f32
__builtin_sve_svmls_lane_f64
-gsimple-template-names
@class
__builtin_sve_svmls_n_f16_m
__builtin_sve_svmls_n_f16_x
__builtin_sve_svmls_n_f32_x
assign
__builtin_sve_svmls_n_f64_z
__builtin_sve_svmls_n_s16_m
__builtin_sve_svmls_n_s16_z
readwrite
__builtin_sve_svmls_n_s64_x
__builtin_sve_svmls_n_s64_z
__builtin_sve_svmls_n_s8_z
strong
__builtin_sve_svmls_n_u16_z
copy
-fno-validate-pch
nonatomic
__builtin_sve_svmls_n_u8_z
__builtin_sve_svmls_s16_m
__builtin_sve_svmls_s32_m
nonnull
__builtin_sve_svmls_s64_x
__builtin_sve_svmls_s64_z
__builtin_sve_svmls_s8_x
null_unspecified
__builtin_sve_svmls_u32_m
__builtin_sve_svmls_u32_x
__builtin_sve_svmls_u64_x
direct
__builtin_sve_svmls_u8_z
__builtin_sve_svmlslb_f32
-gsplit-dwarf
@protocol
__builtin_sve_svmlslb_n_s16
__builtin_sve_svmlslb_n_s32
__builtin_sve_svmlslb_n_u32
@synthesize
__builtin_sve_svmlslb_s64
__builtin_sve_svmlslb_u16
__builtin_sve_svmlslb_u64
@throw
__builtin_sve_svmlslt_lane_u32
__builtin_sve_svmlslt_lane_u64
__builtin_sve_svmlslt_n_s32
@catch clause
__builtin_sve_svmlslt_n_u64
__builtin_sve_svmlslt_s16
-fno-var-tracking
q4fq4fq4fq4f
__builtin_sve_svmmla_f64
__builtin_sve_svmmla_u32
autoreleasepool
__builtin_sve_svmovlb_s32
q4iq8s
q2Wiq4i
@selector
__builtin_sve_svmovlb_u64
q2UWiq4Ui
__builtin_sve_svmovlt_s64
'initializer'
__builtin_sve_svmsb_f16_m
__builtin_sve_svmsb_f16_x
-gstrict-dwarf
(<property-name>)
__builtin_sve_svmsb_f64_z
__builtin_sve_svmsb_n_f16_m
__builtin_sve_svmsb_n_f32_m
user condition
__builtin_sve_svmsb_n_f64_x
__builtin_sve_svmsb_n_f64_z
__builtin_sve_svmsb_n_s16_x
<invalid>
__builtin_sve_svmsb_n_s64_m
__builtin_sve_svmsb_n_s64_x
__builtin_sve_svmsb_n_s8_x
'=' that follows the context set name "
__builtin_sve_svmsb_n_u16_z
context selectors for the context set "
-fno-vect-cost-model
interop
__builtin_sve_svmsb_n_u8_x
__builtin_sve_svmsb_n_u8_z
__builtin_sve_svmsb_s16_z
omp_
__builtin_sve_svmsb_s64_m
__builtin_sve_svmsb_s64_x
__builtin_sve_svmsb_s8_m
when clause
__builtin_sve_svmsb_u16_z
__builtin_sve_svmsb_u32_m
__builtin_sve_svmsb_u64_m
uses_allocator
__builtin_sve_svmsb_u8_x
__builtin_sve_svmsb_u8_z
Use stack probes (default)
targetsync
__builtin_sve_svmul_f64_m
__builtin_sve_svmul_f64_x
__builtin_sve_svmul_lane_f32
interop types
__builtin_sve_svmul_lane_s64
__builtin_sve_svmul_lane_u16
__builtin_sve_svmul_lane_u64
schedule modifier
__builtin_sve_svmul_n_f32_x
__builtin_sve_svmul_n_f32_z
__builtin_sve_svmul_n_f64_z
mapper
__builtin_sve_svmul_n_s32_m
__builtin_sve_svmul_n_s32_x
-fno-verbose-asm
reduction identifier
__builtin_sve_svmul_n_s8_z
__builtin_sve_svmul_n_u16_m
__builtin_sve_svmul_n_u32_m
motion modifier
__builtin_sve_svmul_n_u64_x
__builtin_sve_svmul_n_u64_z
__builtin_sve_svmul_n_u8_x
simdlen
__builtin_sve_svmul_s32_m
__builtin_sve_svmul_s32_x
__builtin_sve_svmul_s64_x
score expression
__builtin_sve_svmul_s8_z
__builtin_sve_svmul_u16_m
/guard:
ext_
__builtin_sve_svmul_u64_x
__builtin_sve_svmul_u64_z
__builtin_sve_svmul_u8_z
contains
__builtin_sve_svmulh_n_s32_m
__builtin_sve_svmulh_n_s32_x
__builtin_sve_svmulh_n_s64_m
no_openmp
__builtin_sve_svmulh_n_s8_z
__builtin_sve_svmulh_n_u16_m
__builtin_sve_svmulh_n_u32_m
no_parallelism
-fintegrated-as
data
-fno-visibility-from-dllstorageclass
__builtin_sve_svmulh_s32_m
__builtin_sve_svmulh_s32_x
__builtin_sve_svmulh_s64_x
reduction
__builtin_sve_svmulh_s8_z
__builtin_sve_svmulh_u16_m
__builtin_sve_svmulh_u16_z
begin
__builtin_sve_svmulh_u64_x
__builtin_sve_svmulh_u64_z
__builtin_sve_svmulh_u8_z
OPENCL
q2Wiq4iq4iIUWi
__builtin_sve_svmullb_lane_u32
write
__builtin_sve_svmullb_n_u16
__builtin_sve_svmullb_n_u32
__builtin_sve_svmullb_s32
remove
__builtin_sve_svmullb_u64
__builtin_sve_svmullt_lane_s32
__builtin_sve_svmullt_lane_u32
__builtin_sve_svmullt_n_u16
__builtin_sve_svmullt_n_u32
__builtin_sve_svmullt_s32
".CRT$XCC"
__builtin_sve_svmullt_u64
__builtin_sve_svmulx_f16_m
Disables -fvisibility-inlines-hidden-static-local-var (this is the default on non-darwin targets)
".CRT$XCU"
__builtin_sve_svmulx_f64_x
__builtin_sve_svmulx_f64_z
__builtin_sve_svmulx_n_f16_z
fixed
__builtin_sve_svmulx_n_f64_m
__builtin_sve_svmulx_n_f64_x
__builtin_sve_svnand_b_z
unless(
__builtin_sve_svnbsl_n_u16
__builtin_sve_svnbsl_n_u32
__builtin_sve_svnbsl_s16
__builtin_sve_svnbsl_u16
__builtin_sve_svnbsl_u32
__INTRIN_H
__builtin_sve_svneg_f32_x
__builtin_sve_svneg_f32_z
__builtin_sve_svneg_f64_z
clang loop 
__builtin_sve_svneg_s32_m
__builtin_sve_svneg_s32_x
__builtin_sve_svneg_s64_m
namespace
__builtin_sve_svneg_s8_z
__builtin_sve_svnmad_f16_m
__builtin_sve_svnmad_f32_m
'is_instance'
__builtin_sve_svnmad_f64_x
'unless(is_union)'
-fno-wchar
'functionType'
__builtin_sve_svnmad_n_f64_m
__builtin_sve_svnmad_n_f64_x
__builtin_sve_svnmatch_s8
any(
__builtin_sve_svnmla_f16_x
__builtin_sve_svnmla_f16_z
__builtin_sve_svnmla_f32_x
options
__builtin_sve_svnmla_n_f16_m
__builtin_sve_svnmla_n_f16_x
__builtin_sve_svnmla_n_f32_x
mac68k
__builtin_sve_svnmla_n_f64_z
__builtin_sve_svnmls_f16_m
-gxcoff
ms_struct
__builtin_sve_svnmls_f64_x
__builtin_sve_svnmls_f64_z
__builtin_sve_svnmls_n_f16_z
redefine_extname
__builtin_sve_svnmls_n_f64_m
__builtin_sve_svnmls_n_f64_x
__builtin_sve_svnmsb_f16_m
FE_TONEAREST
__builtin_sve_svnmsb_f32_z
__builtin_sve_svnmsb_f64_m
__builtin_sve_svnmsb_n_f16_m
FE_DOWNWARD
__builtin_sve_svnmsb_n_f32_x
__builtin_sve_svnmsb_n_f32_z
-fno-web
FE_DYNAMIC
__builtin_sve_svnot_s16_x
__builtin_sve_svnot_s16_z
__builtin_sve_svnot_s32_z
CX_LIMITED_RANGE
__builtin_sve_svnot_s8_m
__builtin_sve_svnot_s8_x
__builtin_sve_svnot_u16_m
pragma clang section
__builtin_sve_svnot_u32_z
__builtin_sve_svnot_u64_m
__builtin_sve_svnot_u8_m
exestr
__builtin_sve_svorr_b_z
__builtin_sve_svorr_n_s16_m
Do not put each function in its own section (default)
float_control
__builtin_sve_svorr_n_s64_x
__builtin_sve_svorr_n_s64_z
__builtin_sve_svorr_n_s8_z
pointers_to_members
__builtin_sve_svorr_n_u32_m
__builtin_sve_svorr_n_u32_x
__builtin_sve_svorr_n_u64_m
vtordisp
__builtin_sve_svorr_n_u8_z
__builtin_sve_svorr_s16_m
__builtin_sve_svorr_s32_m
fenv_access
__builtin_sve_svorr_s64_m
force_cuda_host_device
-fno-whole-program-vtables
clang optimize
__builtin_sve_svorr_u32_m
__builtin_sve_svorr_u32_x
__builtin_sve_svorr_u64_x
__builtin_sve_svorr_u8_z
__builtin_sve_svorv_s16
__builtin_sve_svorv_s64
clang attribute
__builtin_sve_svorv_u8
__builtin_sve_svpext_lane_c16
__builtin_sve_svpext_lane_c64
max_tokens_total
__builtin_sve_svpfirst_b
__builtin_sve_svpmul_n_u8
riscv
__builtin_sve_svpmullb_pair_u32
__builtin_sve_svpmullb_pair_u64
__builtin_sve_svpmullb_u64
vector
__builtin_sve_svpmullt_pair_n_u64
__builtin_sve_svpmullt_pair_n_u8
__builtin_sve_svpmullt_pair_u64
clang riscv intrinsic
__builtin_sve_svpnext_b32
__builtin_sve_svpnext_b64
vq16bvC*Ii
goto
vq16bvC*q2WiIi
__builtin_sve_svprfb_gather_u32base
-fno-working-directory
break
vq16bq2UWiIi
__builtin_sve_svprfb_gather_u64base_offset
vq16bvC*q2UWiIi
__builtin_sve_svprfd_gather_s32index
__builtin_sve_svprfd_gather_s64index
__builtin_sve_svprfd_gather_u32base_index
fp_contract
__builtin_sve_svprfd_vnum
__builtin_sve_svprfh
__builtin_sve_svprfh_gather_u32base
case 
__builtin_sve_svprfh_gather_u64base_index
__builtin_sve_svprfh_gather_u64index
'default'
__builtin_sve_svprfw_gather_u32index
__builtin_sve_svprfw_gather_u64base
__builtin_sve_svprfw_vnum
__builtin_sve_svpsel_b64
__builtin_sve_svpsel_b8
bq16bq16b
else
__builtin_sve_svptrue_b64
__builtin_sve_svptrue_b8
__builtin_sve_svptrue_c32
while
q16bIi
'do'
-fno-xl-pragma-pack
parsing function body
__builtin_sve_svqabs_s32_x
__builtin_sve_svqabs_s32_z
__builtin_sve_svqabs_s64_z
parsing function try block
__builtin_sve_svqadd_n_s16
__builtin_sve_svqadd_n_s16_m
__builtin_sve_svqadd_n_s16_z
<MS inline asm>
__builtin_sve_svqadd_n_s64
__builtin_sve_svqadd_n_s64_m
__builtin_sve_svqadd_n_s8
asm operand
__builtin_sve_svqadd_n_u16
__builtin_sve_svqadd_n_u16_m
Generate source-level debug information
inline
__builtin_sve_svqadd_n_u64
__builtin_sve_svqadd_n_u64_m
__builtin_sve_svqadd_n_u8
unspecified
__builtin_sve_svqadd_s16
q8sq8sq8s
__builtin_sve_svqadd_s16_x
fpsr
__builtin_sve_svqadd_s32_x
__builtin_sve_svqadd_s32_z
__builtin_sve_svqadd_s64_m
template
q16Scq16Scq16Sc
__builtin_sve_svqadd_s8_m
-fno-xray-always-emit-customevents
__builtin_sve_svqadd_u32
__builtin_sve_svqadd_u32_m
__builtin_sve_svqadd_u64
<unknown>
__builtin_sve_svqadd_u8
__builtin_sve_svqadd_u8_m
__builtin_sve_svqadd_u8_z
__builtin_sve_svqdecb_n_s32
iiIUWi
__builtin_sve_svqdecb_n_u32
inout
__builtin_sve_svqdecb_pat_n_s32
iiIiIUWi
set the flag that enables filtering header information
bycopy
__builtin_sve_svqdecd_n_s32
__builtin_sve_svqdecd_n_s64
__builtin_sve_svqdecd_pat_n_s32
_Bool
__builtin_sve_svqdecd_pat_s64
q2Wiq2WiIiIUWi
q2UWiq2UWiIiIUWi
_exception_info
__builtin_sve_svqdech_n_s32
__builtin_sve_svqdech_n_s64
__builtin_sve_svqdech_pat_n_s32
GetExceptionInformation
Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
_exception_code
-fno-xray-function-index
__exception_code
__builtin_sve_svqdecp_n_s32_b16
iiq16b
__builtin_sve_svqdecp_n_s32_b8
_abnormal_termination
__builtin_sve_svqdecp_n_s64_b64
__builtin_sve_svqdecp_n_s64_b8
UiUiq16b
AbnormalTermination
UWiUWiq16b
__builtin_sve_svqdecp_n_u64_b32
__builtin_sve_svqdecp_s16
module
__builtin_sve_svqdecp_s64
q2Wiq2Wiq16b
textual,json
'asm'
__builtin_sve_svqdecw_n_s32
__builtin_sve_svqdecw_n_s64
__builtin_sve_svqdecw_pat_n_s32
__if_not_exists
__builtin_sve_svqdecw_pat_s32
q4iq4iIiIUWi
q4Uiq4UiIiIUWi
not a IncludeTreeRoot node kind
__builtin_sve_svqdmlalb_lane_s32
__builtin_sve_svqdmlalb_lane_s64
__builtin_sve_svqdmlalb_n_s64
(Module for visibility only) 
__builtin_sve_svqdmlalbt_n_s16
__builtin_sve_svqdmlalbt_n_s32
-fno-xray-ignore-loops
 (framework)
__builtin_sve_svqdmlalt_n_s16
__builtin_sve_svqdmlalt_n_s32
__builtin_sve_svqdmlalt_s32
 (extern_c)
__builtin_sve_svqdmlslb_n_s16
__builtin_sve_svqdmlslb_n_s32
__builtin_sve_svqdmlslb_s16
  explicit module *
__builtin_sve_svqdmlslbt_n_s64
__builtin_sve_svqdmlslbt_s16
__builtin_sve_svqdmlslt_lane_s32
 { export * }
__builtin_sve_svqdmlslt_n_s64
__builtin_sve_svqdmlslt_s16
/headerUnit:quote
(PCH) 
__builtin_sve_svqdmulh_n_s32
__builtin_sve_svqdmulh_n_s64
__builtin_sve_svqdmulh_s32
Files:
__builtin_sve_svqdmullb_lane_s64
__builtin_sve_svqdmullb_n_s16
__builtin_sve_svqdmullb_n_s64
FileSystem
__builtin_sve_svqdmullt_lane_s64
__builtin_sve_svqdmullt_n_s16
__builtin_sve_svqdmullt_s16
link 
__builtin_sve_svqincb_n_s64
file '%s' changed during build; include-tree contents changed from %s to %s
-fno-zero-initialized-in-bss
cache poisoned for '
__builtin_sve_svqincd_n_s64
__builtin_sve_svqincd_n_u32
__builtin_sve_svqincd_pat_n_s64
' vs. existing '
__builtin_sve_svqincd_pat_u64
__builtin_sve_svqincd_s64
__builtin_sve_svqinch_n_s32
invalid cas-id '
__builtin_sve_svqinch_pat_n_s64
__builtin_sve_svqinch_pat_n_u32
__builtin_sve_svqinch_pat_u16
invalid hash in cas-id '
__builtin_sve_svqincp_n_s32_b32
__builtin_sve_svqincp_n_s32_b64
/HELP
unknown object '
__builtin_sve_svqincp_n_u32_b32
__builtin_sve_svqincp_n_u32_b64
__builtin_sve_svqincp_n_u64_b32
BLAKE3
__builtin_sve_svqincp_s32
__builtin_sve_svqincp_s64
__builtin_sve_svqincp_u32
__builtin_sve_svqincw_n_u64
__builtin_sve_svqincw_pat_n_s32
__builtin_sve_svqincw_pat_n_u64
invalid tree '
__builtin_sve_svqincw_u32
__builtin_sve_svqneg_s16_m
-fno-zvector
__builtin_sve_svqneg_s64_x
__builtin_sve_svqneg_s64_z
__builtin_sve_svqneg_s8_z
 subtrie-bits=
__builtin_sve_svqrdcmlah_s32
__builtin_sve_svqrdcmlah_s64
__builtin_sve_svqrdmlah_lane_s16
[no-root]
__builtin_sve_svqrdmlah_n_s64
__builtin_sve_svqrdmlah_n_s8
__builtin_sve_svqrdmlah_s64
subtrie=
__builtin_sve_svqrdmlsh_lane_s64
__builtin_sve_svqrdmlsh_n_s16
--hip-device-lib=
- index=
__builtin_sve_svqrdmlsh_s8
__builtin_sve_svqrdmulh_lane_s16
__builtin_sve_svqrdmulh_n_s16
__builtin_sve_svqrdmulh_s16
__builtin_sve_svqrdmulh_s32
__builtin_sve_svqrdmulh_s8
.shared
__builtin_sve_svqrshl_n_s32_x
__builtin_sve_svqrshl_n_s32_z
__builtin_sve_svqrshl_n_s64_z
__builtin_sve_svqrshl_n_s8_z
unknown object '
-fno_pch-validate-input-files-content
LLVM_CAS_MAX_MAPPING_SIZE
__builtin_sve_svqrshl_n_u64_m
__builtin_sve_svqrshl_n_u64_x
q16Ucq16bq16UcSc
on-disk-root-path: 
__builtin_sve_svqrshl_s16_x
__builtin_sve_svqrshl_s16_z
__builtin_sve_svqrshl_s32_x
pool:
__builtin_sve_svqrshl_s8_m
__builtin_sve_svqrshl_s8_x
q8Usq16bq8Usq8s
record refs=
q4Uiq16bq4Uiq4i
__builtin_sve_svqrshl_u32_x
--hip-path=
 size=
q16Ucq16bq16Ucq16Sc
__builtin_sve_svqrshl_u8_x
q8sq8iIUWi
OnDiskCAS: corrupt internal reference
q16Scq16iIUWi
__builtin_sve_svqrshr_u16_x2
__builtin_sve_svqrshr_u16_x4
unexpected user header in '
q16Scq8sIUWi
__builtin_sve_svqrshrnb_n_s32
q4iq2WiIUWi
.leaf+0
q8Usq4UiIUWi
__builtin_sve_svqrshrnb_n_u64
-fnoopenmp-relocatable-target
q4iq4iq2WiIUWi
__builtin_sve_svqrshrnt_n_u16
q8Usq8Usq4UiIUWi
llvm.cas.index
q16Ucq8sIUWi
__builtin_sve_svqrshrunb_n_s32
__builtin_sve_svqrshrunb_n_s64
 SK=
q8Usq8Usq4iIUWi
__builtin_sve_svqrshrunt_n_s64
__builtin_sve_svqshl_n_s16_x
datapool         
__builtin_sve_svqshl_n_s32_z
__builtin_sve_svqshl_n_s64_m
--hipspv-pass-plugin=
standalone-leaf  
__builtin_sve_svqshl_n_u16_x
__builtin_sve_svqshl_n_u16_z
__builtin_sve_svqshl_n_u32_z
 Offset=
__builtin_sve_svqshl_n_u8_m
__builtin_sve_svqshl_n_u8_x
__builtin_sve_svqshl_s16_m
subtrie bits
__builtin_sve_svqshl_s32_z
__builtin_sve_svqshl_s64_m
__builtin_sve_svqshl_s8_m
invalid hash size: 
__builtin_sve_svqshl_u16_x
 (not byte-aligned)
-fnoxray-link-deps
table not found
__builtin_sve_svqshl_u8_m
__builtin_sve_svqshl_u8_x
q8Usq16bq8sIUWi
data size
q4Uiq16bq4iIUWi
__builtin_sve_svqshlu_n_s32_x
__builtin_sve_svqshlu_n_s64_m
hash-num-bits=
q16Ucq16bq16ScIUWi
__builtin_sve_svqshlu_n_s8_x
__builtin_sve_svqshrnb_n_s32
 record-data-size=
__builtin_sve_svqshrnb_n_u64
__builtin_sve_svqshrnt_n_s16
/hlsl-no-stdinc
bytes=
__builtin_sve_svqshrunb_n_s32
__builtin_sve_svqshrunb_n_s64
__builtin_sve_svqshrunt_n_s64
addr=
__builtin_sve_svqsub_n_s16_z
__builtin_sve_svqsub_n_s32
__builtin_sve_svqsub_n_s32_x
 content=
__builtin_sve_svqsub_n_s64_z
__builtin_sve_svqsub_n_s8
__builtin_sve_svqsub_n_s8_z
 (max: 
__builtin_sve_svqsub_n_u16_z
__builtin_sve_svqsub_n_u32
-fobjc-arc-cxxlib=
database: missing header
__builtin_sve_svqsub_n_u64_z
__builtin_sve_svqsub_n_u8
__builtin_sve_svqsub_n_u8_z
database: wrong version
__builtin_sve_svqsub_s16_z
__builtin_sve_svqsub_s32
__builtin_sve_svqsub_s32_x
mismatched 
__builtin_sve_svqsub_s64_z
__builtin_sve_svqsub_s8
__builtin_sve_svqsub_s8_z
, observed: 
__builtin_sve_svqsub_u16_z
__builtin_sve_svqsub_u32
Create hotpatchable image
cannot add new table '
__builtin_sve_svqsub_u64_z
__builtin_sve_svqsub_u8
__builtin_sve_svqsub_u8_z
expected value size of 
__builtin_sve_svqsubr_n_s32_m
__builtin_sve_svqsubr_n_s32_x
__builtin_sve_svqsubr_n_s64_m
llvm.actioncache[
__builtin_sve_svqsubr_n_s8_z
__builtin_sve_svqsubr_n_u16_m
__builtin_sve_svqsubr_n_u32_m
actions
-fintegrated-objemitter
llcas_actioncache_get_for_digest
libc++,libstdc++,none
failed symbol 'llcas_actioncache_get_for_digest' lookup
__builtin_sve_svqsubr_s32_m
__builtin_sve_svqsubr_s32_x
__builtin_sve_svqsubr_s64_x
failed symbol 'llcas_actioncache_put_for_digest' lookup
__builtin_sve_svqsubr_s8_z
__builtin_sve_svqsubr_u16_m
__builtin_sve_svqsubr_u16_z
failed symbol 'llcas_cas_contains_object' lookup
__builtin_sve_svqsubr_u64_x
__builtin_sve_svqsubr_u64_z
__builtin_sve_svqsubr_u8_z
failed symbol 'llcas_cas_create' lookup
q8sq4i
__builtin_sve_svqxtnb_s64
failed symbol 'llcas_cas_dispose' lookup
q4Uiq2UWi
__builtin_sve_svqxtnt_s16
q8sq8sq4i
failed symbol 'llcas_cas_get_hash_schema_name' lookup
q16Ucq16Ucq8Us
__builtin_sve_svqxtnt_u32
__builtin_sve_svqxtnt_u64
failed symbol 'llcas_cas_get_objectid' lookup
q8Usq4i
__builtin_sve_svqxtunb_s64
q16Ucq16Ucq8s
failed symbol 'llcas_cas_load_object' lookup
q4Uiq4Uiq2Wi
__builtin_sve_svraddhnb_n_s16
Use EH-safe code when synthesizing retains and releases in -fobjc-arc
failed symbol 'llcas_cas_load_object_async' lookup
__builtin_sve_svraddhnb_s32
__builtin_sve_svraddhnb_s64
__builtin_sve_svraddhnb_u64
failed symbol 'llcas_cas_options_create' lookup
__builtin_sve_svraddhnt_n_u16
__builtin_sve_svraddhnt_n_u32
__builtin_sve_svraddhnt_s16
failed symbol 'llcas_cas_options_dispose' lookup
__builtin_sve_svraddhnt_u64
__builtin_sve_svrax1_s64
__builtin_sve_svrbit_s16_x
failed symbol 'llcas_cas_options_set_client_version' lookup
__builtin_sve_svrbit_s32_z
__builtin_sve_svrbit_s64_m
-iapinotes-path
failed symbol 'llcas_cas_options_set_ondisk_path' lookup
__builtin_sve_svrbit_u16_x
__builtin_sve_svrbit_u16_z
__builtin_sve_svrbit_u32_z
failed symbol 'llcas_cas_options_set_option' lookup
__builtin_sve_svrbit_u8_m
__builtin_sve_svrbit_u8_x
__builtin_sve_svrdffr
failed symbol 'llcas_cas_store_object' lookup
__builtin_sve_svrecpe_f32
q4fq4f
__builtin_sve_svrecpe_u32_m
failed symbol 'llcas_digest_parse' lookup
q8hq8hq8h
llcas_digest_print
Synthesize retain and release calls for Objective-C pointers
failed symbol 'llcas_digest_print' lookup
__builtin_sve_svrecpx_f32_m
__builtin_sve_svrecpx_f32_x
__builtin_sve_svrecpx_f64_x
failed symbol 'llcas_get_plugin_version' lookup
__builtin_sve_svrev_b64
__builtin_sve_svrev_b8
q8yq8y
failed symbol 'llcas_loaded_object_get_data' lookup
q8sq8s
__builtin_sve_svrev_s32
q2Wiq2Wi
failed symbol 'llcas_loaded_object_get_refs' lookup
q8Usq8Us
__builtin_sve_svrev_u32
-idirafter
failed symbol 'llcas_object_refs_get_count' lookup
__builtin_sve_svrevb_s16_z
__builtin_sve_svrevb_s32_m
__builtin_sve_svrevb_s64_m
failed symbol 'llcas_object_refs_get_id' lookup
__builtin_sve_svrevb_u16_x
__builtin_sve_svrevb_u16_z
__builtin_sve_svrevb_u32_x
failed symbol 'llcas_objectid_get_digest' lookup
__builtin_sve_svrevd_s16_m
__builtin_sve_svrevd_s16_x
__builtin_sve_svrevd_s32_x
failed symbol 'llcas_string_dispose' lookup
__builtin_sve_svrevd_s64_z
__builtin_sve_svrevd_s8_m
-fobjc-avoid-heapify-local-blocks
__builtin_sve_svrevd_u32_x
__builtin_sve_svrevd_u32_z
__builtin_sve_svrevd_u64_z
llvm::cas::schema::tree::v1
__builtin_sve_svrevh_s32_m
__builtin_sve_svrevh_s32_x
__builtin_sve_svrevh_s64_m
objectid
__builtin_sve_svrevh_u32_z
__builtin_sve_svrevh_u64_m
__builtin_sve_svrevw_s64_m
__builtin_sve_svrevw_u64_x
__builtin_sve_svrevw_u64_z
-iframework
__builtin_sve_svrhadd_n_s64_m
__builtin_sve_svrhadd_n_s64_x
__builtin_sve_svrhadd_n_s8_x
__builtin_sve_svrhadd_n_u16_z
__builtin_sve_svrhadd_n_u32_m
__builtin_sve_svrhadd_n_u32_z
exec
__builtin_sve_svrhadd_n_u8_x
__builtin_sve_svrhadd_n_u8_z
__builtin_sve_svrhadd_s16_z
tree
__builtin_sve_svrhadd_s32_z
-fobjc-call-cxx-cdtors
__builtin_sve_svrhadd_u16_z
__builtin_sve_svrhadd_u32_m
__builtin_sve_svrhadd_u64_m
OPTIONS
__builtin_sve_svrhadd_u8_x
__builtin_sve_svrhadd_u8_z
__builtin_sve_svrinta_f16_x
<value>
__builtin_sve_svrinta_f64_m
__builtin_sve_svrinta_f64_x
__builtin_sve_svrinti_f16_x
Expected visible lookup table block
__builtin_sve_svrinti_f32_z
__builtin_sve_svrinti_f64_m
Include macros from file before parsing
source location entry ID out-of-range for AST file
__builtin_sve_svrintm_f32_x
__builtin_sve_svrintm_f32_z
__builtin_sve_svrintm_f64_z
unexpected number of macro tokens for a macro in AST file
__builtin_sve_svrintn_f32_m
__builtin_sve_svrintn_f32_x
__builtin_sve_svrintn_f64_m
' referenced by AST file '
__builtin_sve_svrintp_f16_z
__builtin_sve_svrintp_f32_m
__builtin_sve_svrintp_f64_m
error at end of module block in AST file
__builtin_sve_svrintx_f16_x
__builtin_sve_svrintx_f16_z
-fobjc-convert-messages-to-runtime-calls
duplicate DECL_OFFSET record in AST file
__builtin_sve_svrintz_f16_m
__builtin_sve_svrintz_f16_x
__builtin_sve_svrintz_f32_x
invalid special-types record
__builtin_sve_svrintz_f64_z
__builtin_sve_svrshl_n_s16_m
__builtin_sve_svrshl_n_s16_z
ran out of source locations
__builtin_sve_svrshl_n_s64_x
__builtin_sve_svrshl_n_s64_z
__builtin_sve_svrshl_n_s8_z
Invalid VTABLE_USES record
__builtin_sve_svrshl_n_u32_m
__builtin_sve_svrshl_n_u32_x
-imultilib
Invalid PENDING_IMPLICIT_INSTANTIATIONS block
__builtin_sve_svrshl_n_u8_z
__builtin_sve_svrshl_s16_m
__builtin_sve_svrshl_s32_m
invalid DECL_UPDATE_OFFSETS block in AST file
__builtin_sve_svrshl_s64_x
__builtin_sve_svrshl_s64_z
__builtin_sve_svrshl_s8_x
Invalid existing UndefinedButUsed
__builtin_sve_svrshl_u32_m
__builtin_sve_svrshl_u32_x
__builtin_sve_svrshl_u64_x
duplicate MACRO_OFFSET record in AST file
__builtin_sve_svrshl_u8_z
invalid pragma optimize record
Ignore attribute objc_direct so that direct methods can be tested
invalid pragma ms_struct record
__builtin_sve_svrshr_n_s64_x
__builtin_sve_svrshr_n_s64_z
__builtin_sve_svrshr_n_s8_z
invalid cuda pragma options record
__builtin_sve_svrshr_n_u16_z
__builtin_sve_svrshr_n_u32_m
__builtin_sve_svrshr_n_u32_x
invalid pragma float control record
__builtin_sve_svrshr_n_u64_z
__builtin_sve_svrshr_n_u8_m
__builtin_sve_svrshr_n_u8_z
' referenced by AST file
__builtin_sve_svrshrnb_n_u16
__builtin_sve_svrshrnb_n_u32
--include-directory=
malformed EXTENSION_METADATA in AST file
__builtin_sve_svrshrnt_n_u64
__builtin_sve_svrsqrte_f16
__builtin_sve_svrsqrte_u32_m
Invalid FILE type in AST file
__builtin_sve_svrsqrts_f32
__builtin_sve_svrsqrts_f64
__builtin_sve_svrsra_n_s32
Invalid jmp_buf type in AST file
__builtin_sve_svrsra_n_u64
__builtin_sve_svrsra_n_u8
__builtin_sve_svrsubhnb_n_s64
ucontext_t type is NULL
__builtin_sve_svrsubhnb_s16
__builtin_sve_svrsubhnb_s32
Objective-C dispatch method to use
malformed module definition
__builtin_sve_svrsubhnt_n_s64
__builtin_sve_svrsubhnt_n_u16
__builtin_sve_svrsubhnt_s16
no preprocessing record
__builtin_sve_svrsubhnt_u32
__builtin_sve_svrsubhnt_u64
__builtin_sve_svsbclb_n_u64
malformed AST file: missing C++ ctor initializers
__builtin_sve_svsbclt_u32
__builtin_sve_svsbclt_u64
__builtin_sve_svscale_f16_x
declaration ID out-of-range for AST file
__builtin_sve_svscale_f32_x
__builtin_sve_svscale_f32_z
--include-prefix=
*** AST File Statistics:
__builtin_sve_svscale_n_f16_x
__builtin_sve_svscale_n_f16_z
__builtin_sve_svscale_n_f32_x
  %u/%u types read (%f%%)
__builtin_sve_svscale_n_f64_x
__builtin_sve_svscale_n_f64_z
__builtin_sve_svsclamp_s32
  %u/%u identifiers read (%f%%)
__builtin_sve_svsel_f16
__builtin_sve_svsel_f32
__builtin_sve_svsel_s32
  %u/%u selectors read (%f%%)
Specify that kernel argument names are preserved (HIP only)
  %u/%u statements read (%f%%)
-fno-fat-lto-objects
  %u/%u lexical declcontexts read (%f%%)
q8fq8fIUWiq4f
__builtin_sve_svset2_f64
q16sq16sIUWiq8s
  %u/%u method pool entries read (%f%%)
q4Wiq4WiIUWiq2Wi
__builtin_sve_svset2_s8
__builtin_sve_svset2_u16
  %u/%u method pool table lookups succeeded (%f%%)
q4UWiq4UWiIUWiq2UWi
__builtin_sve_svset2_u8
q24yq24yIUWiq8y
*** PCH/ModuleFile Remappings:
q12fq12fIUWiq4f
__builtin_sve_svset3_f64
--include-with-prefix-before=
Global source location entry map
q6Wiq6WiIUWiq2Wi
__builtin_sve_svset3_s8
q24Usq24UsIUWiq8Us
Global declaration map
q6UWiq6UWiIUWiq2UWi
__builtin_sve_svset3_u8
__builtin_sve_svset4_bf16
Global macro map
q16fq16fIUWiq4f
__builtin_sve_svset4_f64
q32sq32sIUWiq8s
Global selector map
q8Wiq8WiIUWiq2Wi
__builtin_sve_svset4_s8
-fobjc-exceptions
*** PCH/Modules Loaded:
q8UWiq8UWiIUWiq2UWi
__builtin_sve_svset4_u8
no macro table in AST file
q4iq8sIUWi
__builtin_sve_svshllb_n_s64
__builtin_sve_svshllb_n_u16
selector ID out of range in AST file
q2UWiq4UiIUWi
__builtin_sve_svshllt_n_s16
__builtin_sve_svshllt_n_u16
__builtin_sve_svshrnb_n_s32
__builtin_sve_svshrnb_n_s64
--include=
__builtin_sve_svshrnt_n_u16
__builtin_sve_svshrnt_n_u32
__builtin_sve_svsli_n_s32
Kernel mode
__builtin_sve_svsli_n_u32
__builtin_sve_svsli_n_u64
__builtin_sve_svsm4e_u32
Microsoft inline asm blocks
__builtin_sve_svsplice_f64
__builtin_sve_svsplice_s16
__builtin_sve_svsplice_s8
C++11
__builtin_sve_svsplice_u8
C++14
-fobjc-gc-only
C++17
__builtin_sve_svsqadd_n_u64_x
__builtin_sve_svsqadd_n_u64_z
__builtin_sve_svsqadd_n_u8_z
C++2b
__builtin_sve_svsqadd_u32_m
__builtin_sve_svsqadd_u32_x
__builtin_sve_svsqadd_u64_m
trigraphs
__builtin_sve_svsqadd_u8_z
__builtin_sve_svsqrshru_u16_x2
__builtin_sve_svsqrt_f16_m
bool, true, and false keywords
__builtin_sve_svsqrt_f32_x
__builtin_sve_svsqrt_f32_z
-index-ignore-macros
wchar_t keyword
__builtin_sve_svsra_n_s8
__builtin_sve_svsra_n_u16
__builtin_sve_svsra_n_u8
__ieee128 keyword
__builtin_sve_svsri_n_s8
__builtin_sve_svsri_n_u16
__builtin_sve_svsri_n_u64
GNU extensions
vq16bh*q8h
__builtin_sve_svst1_f32
vq16bd*q2d
GNU C compatibility version
vq16bSi*q4i
__builtin_sve_svst1_s64
-fobjc-gc
digraphs
vq16bSi*q4iq4i
__builtin_sve_svst1_scatter_s32index_u32
__builtin_sve_svst1_scatter_s32offset_s32
Apple kext support
__builtin_sve_svst1_scatter_s64index_s64
vq16bSWi*q2Wiq2Wi
vq16bUWi*q2Wiq2UWi
const-qualified string support
vq16bq4Uiq4f
__builtin_sve_svst1_scatter_u32base_index_f32
vq16bq4UiWiq4i
Altivec source compatibility
__builtin_sve_svst1_scatter_u32base_offset_s32
__builtin_sve_svst1_scatter_u32base_offset_u32
-index-ignore-system-symbols
AltiVec-style vector initializers
__builtin_sve_svst1_scatter_u32index_s32
vq16bSi*q4Uiq4i
__builtin_sve_svst1_scatter_u32offset_f32
exception handling
vq16bq2UWiq2d
__builtin_sve_svst1_scatter_u64base_index_f64
__builtin_sve_svst1_scatter_u64base_index_s64
C++ exceptions
__builtin_sve_svst1_scatter_u64base_offset_s64
__builtin_sve_svst1_scatter_u64base_offset_u64
__builtin_sve_svst1_scatter_u64base_u64
ignore exceptions
vq16bd*q2UWiq2d
Assume extern C functions don't unwind
-fobjc-infer-related-result-type
traditional CPP emulation
vq16bUs*q8Us
__builtin_sve_svst1_u32
vq16bUWi*q2UWi
emit run-time type information data
vq16by*Wiq8y
__builtin_sve_svst1_vnum_f16
__builtin_sve_svst1_vnum_f32
Microsoft-compatible volatile loads and stores
vq16bSs*Wiq8s
__builtin_sve_svst1_vnum_s32
vq16bSWi*Wiq2Wi
disable builtin functions
vq16bUs*Wiq8Us
__builtin_sve_svst1_vnum_u32
-index-store-path
GNU-style inline assembly
vq16bSc*q8s
__builtin_sve_svst1b_s32
vq16bSc*q2Wi
prefer Aligned Allocation according to P2014 Option 2
vQSc*q64Sc
__builtin_sve_svst1b_scatter_s32offset_s32
__builtin_sve_svst1b_scatter_s32offset_u32
C++17 relaxed matching of template template arguments
vq16bUc*q2Wiq2UWi
__builtin_sve_svst1b_scatter_u32base_offset_s32
__builtin_sve_svst1b_scatter_u32base_u32
function pointer authentication
vq16bUc*q4Uiq4Ui
__builtin_sve_svst1b_scatter_u64base_offset_s64
-fobjc-link-runtime
indirect gotos pointer authentication
vq16bUc*q2UWiq2UWi
__builtin_sve_svst1b_u16
vq16bUc*q4Ui
incorporate address discrimination in authenticated vtable pointers
vQUc*q32Uc
__builtin_sve_svst1b_u8_x4
__builtin_sve_svst1b_vnum_s16
authentication mode for objc isa
vq16bSc*Wiq2Wi
__builtin_sve_svst1b_vnum_s8_x2
vQSc*Wiq64Sc
authentication key for SEL fields of ObjC interfaces
vq16bUc*Wiq4Ui
__builtin_sve_svst1b_vnum_u64
<path>
software emulation of pointer authentication
vQd*q4d
__builtin_sve_svst1d_f64_x4
vQSWi*q4Wi
controls whether the pointer auth abi version represents a kernel ABI
vQUWi*q4UWi
__builtin_sve_svst1d_u64_x4
__builtin_sve_svst1d_vnum_f64_x2
enable signed block descriptors
vQSWi*Wiq4Wi
__builtin_sve_svst1d_vnum_s64_x4
vQUWi*Wiq4UWi
Enable unstable and experimental features
vQy*q16y
enable unstable and experimental library features
-fobjc-new-property
'[[]]' attributes extension for all language standard modes
vQSs*q16s
__builtin_sve_svst1h_s16_x4
vq16bSs*q4i
Preserve the type in recovery expressions
vq16bSs*q4iq4i
__builtin_sve_svst1h_scatter_s32index_u32
__builtin_sve_svst1h_scatter_s32offset_s32
blocks extension to C
vq16bUs*q2Wiq2UWi
__builtin_sve_svst1h_scatter_s64offset_s64
__builtin_sve_svst1h_scatter_u32base_index_u32
modules semantics
__builtin_sve_svst1h_scatter_u32base_u32
__builtin_sve_svst1h_scatter_u32index_s32
-inline-asm=
C++ modules syntax
__builtin_sve_svst1h_scatter_u64base_index_u64
__builtin_sve_svst1h_scatter_u64base_offset_s64
__builtin_sve_svst1h_scatter_u64base_u64
requiring declaration of module uses and all headers to be in modules
vq16bUs*q2UWiq2UWi
__builtin_sve_svst1h_scatter_u64offset_s64
__builtin_sve_svst1h_u16_x2
hash out diagnostic errors as part of the module hash
vq16bUs*q4Ui
__builtin_sve_svst1h_u64
vQy*Wiq16y
disable ODR hash checking for categories
vQh*Wiq16h
__builtin_sve_svst1h_vnum_f16_x4
-fobjc-nonfragile-abi
disable ODR hash checking for protocols
vq16bSs*Wiq4i
__builtin_sve_svst1h_vnum_s64
vQUs*Wiq16Us
disable ODR hash checking for properties
vq16bUs*Wiq4Ui
__builtin_sve_svst1h_vnum_u64
__builtin_sve_svst1w_f32_x2
disable ODR hash checking for methods
vQSi*q8i
__builtin_sve_svst1w_s32_x4
vq16bSi*q2Wi
__OPTIMIZE_SIZE__ predefined macro
vq16bUi*q2Wiq2UWi
__builtin_sve_svst1w_scatter_s64offset_s64
-interface-stub-version=
default struct packing maximum alignment
__builtin_sve_svst1w_scatter_u64base_u64
__builtin_sve_svst1w_scatter_u64index_s64
vq16bUi*q2UWiq2UWi
Controls if doubles should be aligned to 8 bytes (x86 only)
vQUi*q8Ui
__builtin_sve_svst1w_u32_x4
__builtin_sve_svst1w_u64
width of long double
vQf*Wiq16f
__builtin_sve_svst1w_vnum_s32_x2
vQSi*Wiq16i
__EXTABI__  predefined macro
-fipa-cp
Use 16-byte atomic lock free semantics
Enable relative method lists
__PIC__ level
vq16bh*q16h
__builtin_sve_svst2_f32
vq16bd*q4d
Read-only position independence
vq16bSi*q8i
__builtin_sve_svst2_s64
__builtin_sve_svst2_s8
GNU inline semantics
vq16bUi*q8Ui
__builtin_sve_svst2_u64
vq16bUc*q32Uc
__DEPRECATED predefined macro
vq16bh*Wiq16h
__builtin_sve_svst2_vnum_f32
Add directory to the internal system include search path; these are assumed to not be user-provided and are used to model system and standard headers' paths.
__FINITE_MATH_ONLY__ predefined macro
vq16bSi*Wiq8i
__builtin_sve_svst2_vnum_s64
vq16bSc*Wiq32Sc
optimizer honors parentheses when floating-point expressions are evaluated
vq16bUi*Wiq8Ui
__builtin_sve_svst2_vnum_u64
__builtin_sve_svst2_vnum_u8
width of wchar_t
vq16bh*q24h
__builtin_sve_svst3_f32
vq16bd*q6d
member-pointer representation method
vq16bSi*q12i
__builtin_sve_svst3_s64
The target Objective-C runtime supports ARC weak operations
short enum types
vq16bUi*q12Ui
__builtin_sve_svst3_u64
vq16bUc*q48Uc
C++ for OpenCL version
vq16bh*Wiq24h
__builtin_sve_svst3_vnum_f32
__builtin_sve_svst3_vnum_f64
OpenCL pipes language constructs and built-ins
vq16bSi*Wiq12i
__builtin_sve_svst3_vnum_s64
vq16bSc*Wiq48Sc
Native half args and returns
vq16bUi*Wiq12Ui
__builtin_sve_svst3_vnum_u64
Add directory to QUOTE include search path
Enable all Clang extensions for OpenMP directives and clauses
vq16bh*q32h
__builtin_sve_svst4_f32
vq16bd*q8d
Use TLS for threadprivates or runtime calls
vq16bSi*q16i
__builtin_sve_svst4_s64
__builtin_sve_svst4_s8
Generate code for OpenMP pragmas in SIMT/SPMD mode
vq16bUi*q16Ui
__builtin_sve_svst4_u64
vq16bUc*q64Uc
Number of SMs for CUDA devices.
vq16bh*Wiq32h
Number of blocks per SM for CUDA devices.
Specify the target Objective-C runtime kind and version
Number of the reduction records in the intermediate reduction buffer used for the teams reductions.
vq16bSi*Wiq16i
__builtin_sve_svst4_vnum_s64
vq16bSc*Wiq64Sc
Use at most 32 bits to represent the collapsed loop nest counter.
vq16bUi*Wiq16Ui
__builtin_sve_svst4_vnum_u64
__builtin_sve_svst4_vnum_u8
Assume distributed loops do not have more iterations than participating teams.
__builtin_sve_svstnt1_f64
__builtin_sve_svstnt1_s16
__builtin_sve_svstnt1_s8
Assume that no thread in a parallel region will encounter a parallel region
__builtin_sve_svstnt1_scatter_s64offset_f64
__builtin_sve_svstnt1_scatter_s64offset_s64
Add directory to end of the SYSTEM include search path
Indicate a build without the standard GPU libraries.
__builtin_sve_svstnt1_scatter_u32base_offset_s32
__builtin_sve_svstnt1_scatter_u32base_offset_u32
__builtin_sve_svstnt1_scatter_u32offset_f32
compiling for CUDA device
__builtin_sve_svstnt1_scatter_u64base_index_f64
__builtin_sve_svstnt1_scatter_u64base_index_s64
__builtin_sve_svstnt1_scatter_u64base_offset_f64
treating unattributed constexpr functions as __host__ __device__
__builtin_sve_svstnt1_scatter_u64index_f64
__builtin_sve_svstnt1_scatter_u64index_s64
__builtin_sve_svstnt1_scatter_u64offset_s64
generate relocatable device code
__builtin_sve_svstnt1_u64
__builtin_sve_svstnt1_u8
-fobjc-subscripting-legacy-runtime
default max threads per block for kernel launch bounds for HIP
__builtin_sve_svstnt1_vnum_s64
__builtin_sve_svstnt1_vnum_s8
__builtin_sve_svstnt1_vnum_u64
always exclude wrong side overloads in overloading resolution for CUDA/HIP
__builtin_sve_svstnt1b_scatter_s64offset_s64
__builtin_sve_svstnt1b_scatter_s64offset_u64
__builtin_sve_svstnt1b_scatter_u32base_offset_u32
Generate code for SYCL device
__builtin_sve_svstnt1b_scatter_u64base_offset_s64
__builtin_sve_svstnt1b_scatter_u64base_offset_u64
__builtin_sve_svstnt1b_scatter_u64offset_s64
Version of the SYCL standard used
__builtin_sve_svstnt1b_vnum_s8_x2
__builtin_sve_svstnt1b_vnum_s8_x4
Overlay the virtual filesystem described by file over the real file system
sized deallocation
__builtin_sve_svstnt1d_u64_x2
__builtin_sve_svstnt1d_u64_x4
__builtin_sve_svstnt1d_vnum_s64_x2
aligned allocation functions are unavailable
__builtin_sve_svstnt1h_bf16_x2
__builtin_sve_svstnt1h_bf16_x4
__builtin_sve_svstnt1h_f16_x4
no constant CoreFoundation strings
__builtin_sve_svstnt1h_scatter_s64offset_s64
__builtin_sve_svstnt1h_scatter_s64offset_u64
__builtin_sve_svstnt1h_scatter_u32base_offset_s32
no constant number literals
__builtin_sve_svstnt1h_scatter_u32base_u32
no constant array literals
-fobjc-weak
no constant dictionary literals
__builtin_sve_svstnt1h_scatter_u64index_s64
__builtin_sve_svstnt1h_scatter_u64index_u64
__builtin_sve_svstnt1h_u16_x2
check availability for target variant platform
__builtin_sve_svstnt1h_vnum_f16_x2
__builtin_sve_svstnt1h_vnum_f16_x4
__builtin_sve_svstnt1h_vnum_s16_x4
treating double-precision floating point constants as single precision constants
__builtin_sve_svstnt1w_s32_x2
__builtin_sve_svstnt1w_s32_x4
__builtin_sve_svstnt1w_scatter_s64offset_s64
Enable experimental strict floating point
__builtin_sve_svstnt1w_scatter_u64base_offset_s64
__builtin_sve_svstnt1w_scatter_u64base_offset_u64
Set directory to include search path with prefix
hexagon-qdsp6 backward compatibility
__builtin_sve_svstnt1w_u32_x2
__builtin_sve_svstnt1w_u32_x4
__builtin_sve_svstnt1w_vnum_s32_x2
__weak support in the ARC runtime
__builtin_sve_svsub_f16_m
__builtin_sve_svsub_f16_x
__builtin_sve_svsub_f32_m
Ignore ARC-style __weak instead of erroring
__builtin_sve_svsub_f64_z
__builtin_sve_svsub_n_f16_m
__builtin_sve_svsub_n_f32_m
Disable recognition of objc_direct methods
__builtin_sve_svsub_n_f64_x
__builtin_sve_svsub_n_f64_z
-fodr-hash-attributes
OpenCL fake address space map
__builtin_sve_svsub_n_s64_m
__builtin_sve_svsub_n_s64_x
__builtin_sve_svsub_n_s8_x
Include default header file for OpenCL
__builtin_sve_svsub_n_u16_z
__builtin_sve_svsub_n_u32_m
__builtin_sve_svsub_n_u32_z
optional blocks runtime
__builtin_sve_svsub_n_u8_x
__builtin_sve_svsub_n_u8_z
__builtin_sve_svsub_s16_z
Objective-C Garbage Collection mode
__builtin_sve_svsub_s64_m
__builtin_sve_svsub_s64_x
Add directory to SYSTEM include search path, absolute paths are relative to -isysroot
default visibility for types [-ftype-visibility]
__builtin_sve_svsub_u16_z
__builtin_sve_svsub_u32_m
__builtin_sve_svsub_u64_m
set the visiblity of globals from their DLL storage class [-fvisibility-from-dllstorageclass]
__builtin_sve_svsub_u8_x
__builtin_sve_svsub_u8_z
__builtin_sve_svsubhnb_n_s32
visibility for functions and variables without an explicit DLL storage class [-fvisibility-from-dllstorageclass]
__builtin_sve_svsubhnb_s16
__builtin_sve_svsubhnb_s32
__builtin_sve_svsubhnb_u32
visibility for external declarations without an explicit DLL storage class [-fvisibility-from-dllstorageclass]
__builtin_sve_svsubhnt_n_s64
stack protector mode
-foffload-lto=
stack checking
__builtin_sve_svsubhnt_u32
__builtin_sve_svsubhnt_u64
__builtin_sve_svsublb_n_s64
trivial automatic variable initialization
__builtin_sve_svsublb_s16
__builtin_sve_svsublb_s32
__builtin_sve_svsublb_u16
Zero initialize only first N bytes of each stack variable.
__builtin_sve_svsublbt_n_s64
__builtin_sve_svsublbt_s16
__builtin_sve_svsublt_n_s16
do not auto-initialize non-POD objects
__builtin_sve_svsublt_n_u32
__builtin_sve_svsublt_n_u64
do not auto-initialize arrays other than arrays of pointers
__builtin_sve_svsubltb_n_s16
__builtin_sve_svsubltb_n_s32
__builtin_sve_svsubltb_s32
Thread Model
__builtin_sve_svsubr_f16_z
__builtin_sve_svsubr_f32_m
__builtin_sve_svsubr_f32_z
How many vtordisps to insert
__builtin_sve_svsubr_n_f16_x
__builtin_sve_svsubr_n_f16_z
__builtin_sve_svsubr_n_f32_z
IBM XL #pragma pack handling
__builtin_sve_svsubr_n_s16_m
__builtin_sve_svsubr_n_s16_x
-foffload-lto
use external API notes
__builtin_sve_svsubr_n_s64_z
__builtin_sve_svsubr_n_s8_m
__builtin_sve_svsubr_n_u16_m
controls how aggressive is ASan field padding (0: none, 1:least aggressive, 2: more aggressive)
__builtin_sve_svsubr_n_u32_x
__builtin_sve_svsubr_n_u32_z
__builtin_sve_svsubr_n_u64_x
controls whether to do XRay instrumentation
__builtin_sve_svsubr_s16_m
__builtin_sve_svsubr_s16_x
__builtin_sve_svsubr_s32_x
controls whether to always emit intrinsic calls to __xray_typedevent(...) builtin.
__builtin_sve_svsubr_s64_z
__builtin_sve_svsubr_s8_m
/JMC-
version of Clang that we should attempt to be ABI-compatible with
__builtin_sve_svsubr_u32_x
__builtin_sve_svsubr_u32_z
__builtin_sve_svsubr_u64_z
Default alignment for loops
__builtin_sve_svsubwb_n_s16
__builtin_sve_svsubwb_n_s32
__builtin_sve_svsubwb_n_u16
unsigned fixed point types having one extra padding bit
__builtin_sve_svsubwb_s64
__builtin_sve_svsubwb_u16
__builtin_sve_svsubwt_n_s16
Enable or disable the builtin matrix type
Use new kernel launching API for HIP
Rely on strict definition of flexible arrays
-fomit-frame-pointer
Max number of tokens per TU or 0
__builtin_sve_svsudot_lane_s32
q4iq4iq16Scq16UcIUWi
__builtin_sve_svsudot_s32
Scope of return address signing
__builtin_sve_svtbl2_f16
q8hq16hq8Us
q4fq8fq4Ui
Branch-target enforcement enabled
__builtin_sve_svtbl2_s32
q4iq8iq4Ui
__builtin_sve_svtbl2_s8
Use an ABI-incompatible v-table layout that uses relative references
__builtin_sve_svtbl2_u32
q4Uiq8Uiq4Ui
Maximum vscale value
__builtin_sve_svtbl_f16
q8hq8hq8Us
__builtin_sve_svtbl_f64
Fuchsia API level
__builtin_sve_svtbl_s32
q4iq4iq4Ui
q2Wiq2Wiq2UWi
Use typed variants of C++ new() and delete()
__builtin_sve_svtbl_u64
__builtin_sve_svtbl_u8
__builtin_sve_svtbx_f16
Revert f50d1aca992864d7edd65a449f5368b53727752a and return id for [self alloc]
__builtin_sve_svtbx_f64
q2dq2dq2dq2UWi
Enable OpenACC
Revert dafc3106d2069b806a10e072306a2196f1cda585 and do not emit -Wformat
__builtin_sve_svtbx_s8
q16Scq16Scq16Scq16Uc
__builtin_sve_svtbx_u64
Revert 7ae1b4a0ce9c7f269cf3069e41496a78e3f28d49 and allow static members in anon unions
__builtin_sve_svtmad_f64
__builtin_sve_svtrn1_b16
__builtin_sve_svtrn1_b64
Revert 878a24ee244a24c39d1c57e9af2e88c621f7cce9 and give some implicit member expressions dependent type
__builtin_sve_svtrn1_f32
__builtin_sve_svtrn1_f64
__builtin_sve_svtrn1_s64
Revert 536b0ee40ab97f2878dc124a321cf9108ee3d233 and don't check nullptr arithmetic
__builtin_sve_svtrn1_u64
__builtin_sve_svtrn1_u8
/kernel
Disable (part of) 96c899449b61b866b583560a49c4627f561336fc
__builtin_sve_svtrn1q_s64
__builtin_sve_svtrn1q_s8
__builtin_sve_svtrn1q_u64
Disable ccc4d83cda16bea1d9dfd0967dc7d2cfb24b8e75
__builtin_sve_svtrn2_b64
__builtin_sve_svtrn2_b8
__builtin_sve_svtrn2_f16
Disable (part of) 552c6c232872
__builtin_sve_svtrn2_s64
__builtin_sve_svtrn2_s8
__builtin_sve_svtrn2_u64
rdar://72823399
__builtin_sve_svtrn2q_f32
rdar://81325777
Assert no nested parallel regions in the GPU
rdar://81712146
__builtin_sve_svtrn2q_u64
__builtin_sve_svtrn2q_u8
__builtin_sve_svtsmul_f64
Suppress conflicting type errors from mismatching declarations
__builtin_sve_svuclamp_u16
__builtin_sve_svuclamp_u32
__builtin_sve_svuclamp_u8
target Objective-C runtime
__builtin_sve_svundef2_f32
q8fv
__builtin_sve_svundef2_s16
target ABI
__builtin_sve_svundef2_s64
q4Wiv
-lazy_library
tune CPU
__builtin_sve_svundef2_u64
q4UWiv
__builtin_sve_svundef3_bf16
-Werror
__builtin_sve_svundef3_f32
q12fv
q6dv
-Werror=
__builtin_sve_svundef3_s64
q6Wiv
__builtin_sve_svundef3_u16
malformed uleb128, extends past end
__builtin_sve_svundef3_u64
q6UWiv
Assert no thread in a parallel region modifies an ICV
Cursor should always be able to go back, failed: 
__builtin_sve_svundef4_f32
q16fv
__builtin_sve_svundef4_s16
AST record has invalid code
__builtin_sve_svundef4_s64
q8Wiv
q64Scv
Timestamp file
__builtin_sve_svundef4_u64
q8UWiv
__builtin_sve_svundef_bf16
file doesn't start with AST file magic
__builtin_sve_svundef_f32
q4fv
jumping
__builtin_sve_svundef_s64
q2Wiv
__builtin_sve_svundef_u16
ASTReader::readDeclRecord failed reading decl code: 
__builtin_sve_svundef_u64
q2UWiv
q16Ucv
attempt to read a C++ ctor initializer record as a declaration
__builtin_sve_svunpkhi_u16
__builtin_sve_svunpkhi_u32
__builtin_sve_svunpklo_s16
ASTReader::loadDeclUpdateRecords failed reading code: 
__builtin_sve_svunpklo_u16
ASTReader::loadDeclUpdateRecords failed reading rec code: 
-fopenmp-assume-threads-oversubscription
ASTReader::loadPendingDeclChain failed jumping: 
__builtin_sve_svuqadd_n_s64_m
__builtin_sve_svuqadd_n_s64_x
__builtin_sve_svuqadd_n_s8_x
ASTReader::loadPendingDeclChain failed reading rec code: 
__builtin_sve_svuqadd_s16_z
__builtin_sve_svuqadd_s32_m
__builtin_sve_svuqadd_s32_z
CONTROL_BLOCK
__builtin_sve_svuqadd_s8_x
__builtin_sve_svuqadd_s8_z
__builtin_sve_svusdot_n_s32
MODULE_NAME
__builtin_sve_svusmmla_s32
__builtin_sve_svuzp1_b16
--libomptarget-amdgpu-bc-path=
MODULE_MAP_FILE
__builtin_sve_svuzp1_f64
__builtin_sve_svuzp1_s16
__builtin_sve_svuzp1_s8
ORIGINAL_FILE
__builtin_sve_svuzp1_u8
__builtin_sve_svuzp1q_bf16
__builtin_sve_svuzp1q_f32
INPUT_FILE_OFFSETS
__builtin_sve_svuzp1q_s8
__builtin_sve_svuzp1q_u16
__builtin_sve_svuzp1q_u8
CASFS_ROOT_ID
__builtin_sve_svuzp2_b8
__builtin_sve_svuzp2_bf16
-fopenmp-cuda-mode
OPTIONS_BLOCK
__builtin_sve_svuzp2_s8
__builtin_sve_svuzp2_u16
__builtin_sve_svuzp2_u8
TARGET_OPTIONS
__builtin_sve_svuzp2q_f64
__builtin_sve_svuzp2q_s16
__builtin_sve_svuzp2q_s64
PREPROCESSOR_OPTIONS
__builtin_sve_svuzp2q_u8
__builtin_sve_svwhilege_b16_s32
q16bWiWi
INPUT_FILE
q16bUWiUWi
__builtin_sve_svwhilege_b32_s32
--library-directory
AST_BLOCK
__builtin_sve_svwhilege_b64_u64
__builtin_sve_svwhilege_b8_s32
__builtin_sve_svwhilege_b8_u64
DECL_OFFSET
__builtin_sve_svwhilegt_b16_u64
__builtin_sve_svwhilegt_b32_s32
__builtin_sve_svwhilegt_b32_u32
IDENTIFIER_TABLE
__builtin_sve_svwhilegt_b64_u64
__builtin_sve_svwhilegt_b8_s32
__builtin_sve_svwhilegt_b8_u64
MODULAR_CODEGEN_DECLS
__builtin_sve_svwhilele_b16_u64
SPECIAL_TYPES
-fopenmp-cuda-teams-reduction-recs-num=
STATISTICS
__builtin_sve_svwhilele_b64_u64
__builtin_sve_svwhilele_b8_s32
__builtin_sve_svwhilele_b8_u64
SELECTOR_OFFSETS
__builtin_sve_svwhilelt_b16_u64
__builtin_sve_svwhilelt_b32_s32
__builtin_sve_svwhilelt_b32_u32
PP_COUNTER_VALUE
__builtin_sve_svwhilelt_b64_u64
__builtin_sve_svwhilelt_b8_s32
__builtin_sve_svwhilelt_b8_u64
SOURCE_LOCATION_PRELOADS
q16bhC*hC*
__builtin_sve_svwhilerw_f32
Forward options to the linker
UNUSED_FILESCOPED_DECLS
q16bSiC*SiC*
__builtin_sve_svwhilerw_s64
q16bScC*ScC*
VTABLE_USES
q16bUiC*UiC*
__builtin_sve_svwhilerw_u64
__builtin_sve_svwhilerw_u8
TU_UPDATE_LEXICAL
__builtin_sve_svwhilewr_f64
__builtin_sve_svwhilewr_s16
__builtin_sve_svwhilewr_s8
WEAK_UNDECLARED_IDENTIFIERS
__builtin_sve_svwhilewr_u8
__builtin_sve_svwrffr
Use the experimental OpenMP-IR-Builder codegen path.
UPDATE_VISIBLE
__builtin_sve_svxar_n_u32
__builtin_sve_svxar_n_u64
__builtin_sve_svzip1_b32
DECL_UPDATES
__builtin_sve_svzip1_f16
__builtin_sve_svzip1_f32
__builtin_sve_svzip1_s16
HEADER_SEARCH_TABLE
__builtin_sve_svzip1_u32
__builtin_sve_svzip1_u64
__builtin_sve_svzip1q_f16
OPENCL_EXTENSIONS
__builtin_sve_svzip1q_s32
__builtin_sve_svzip1q_s64
OPENCL_EXTENSION_DECLS
__builtin_sve_svzip2_b32
__builtin_sve_svzip2_b64
__builtin_sve_svzip2_f16
KNOWN_NAMESPACES
__builtin_sve_svzip2_s32
__builtin_sve_svzip2_s64
__builtin_sve_svzip2_u16
SOURCE_MANAGER_LINE_TABLE
__builtin_sve_svzip2q_f16
__builtin_sve_svzip2q_f32
__builtin_sve_svzip2q_s32
FILE_SORTED_DECLS
-fix-what-you-can
IMPORTED_MODULES
Enable all Clang extensions for OpenMP directives and clauses
OBJC_CATEGORIES
__builtin_sve_reinterpret_s8_s64
q16Scq2SWi
__builtin_sve_reinterpret_s8_u16
INTERESTING_IDENTIFIERS
__builtin_sve_reinterpret_s8_u64
q16Scq2UWi
q16Scq8h
LATE_PARSED_TEMPLATE
__builtin_sve_reinterpret_s8_f64
q16Scq2d
__builtin_sve_reinterpret_s16_s16
MSSTRUCT_PRAGMA_OPTIONS
__builtin_sve_reinterpret_s16_s64
q8Ssq2SWi
-m32
UNUSED_LOCAL_TYPEDEF_NAME_CANDIDATES
__builtin_sve_reinterpret_s16_u64
q8Ssq2UWi
__builtin_sve_reinterpret_s16_bf16
CUDA_PRAGMA_FORCE_HOST_DEVICE_DEPTH
__builtin_sve_reinterpret_s16_f64
q8Ssq2d
q4Siq16Sc
DECLS_TO_CHECK_FOR_DEFERRED_DIAGS
__builtin_sve_reinterpret_s32_s64
q4Siq2SWi
__builtin_sve_reinterpret_s32_u16
PP_ASSUME_NONNULL_LOC
__builtin_sve_reinterpret_s32_u64
q4Siq2UWi
Path to the IR file produced by the frontend for the host.
SM_SLOC_FILE_ENTRY
__builtin_sve_reinterpret_s32_f64
q4Siq2d
__builtin_sve_reinterpret_s64_s16
SM_SLOC_BUFFER_BLOB
__builtin_sve_reinterpret_s64_s64
q2SWiq2SWi
q2SWiq16Uc
SM_SLOC_EXPANSION_ENTRY
__builtin_sve_reinterpret_s64_u64
q2SWiq2UWi
__builtin_sve_reinterpret_s64_bf16
PP_MACRO_DIRECTIVE_HISTORY
__builtin_sve_reinterpret_s64_f64
q2SWiq2d
-m68000
PP_MACRO_OBJECT_LIKE
__builtin_sve_reinterpret_u8_s64
q16Ucq2SWi
__builtin_sve_reinterpret_u8_u32
PP_TOKEN
__builtin_sve_reinterpret_u8_f16
q16Ucq8h
q16Ucq8y
SUBMODULE_METADATA
__builtin_sve_reinterpret_u16_s8
q8Usq16Sc
__builtin_sve_reinterpret_u16_s32
SUBMODULE_UMBRELLA_HEADER
__builtin_sve_reinterpret_u16_u8
SUBMODULE_HEADER
Set rpath on OpenMP executables
SUBMODULE_TOPHEADER
q8Usq8y
__builtin_sve_reinterpret_u16_f32
q8Usq2d
SUBMODULE_IMPORTS
q4Uiq8Ss
__builtin_sve_reinterpret_u32_s32
__builtin_sve_reinterpret_u32_s64
SUBMODULE_EXPORTS
__builtin_sve_reinterpret_u32_u32
__builtin_sve_reinterpret_u32_u64
__builtin_sve_reinterpret_u32_bf16
SUBMODULE_EXCLUDED_HEADER
__builtin_sve_reinterpret_u32_f64
q4Uiq2d
-m68040
SUBMODULE_CONFIG_MACRO
__builtin_sve_reinterpret_u64_s64
q2UWiq2SWi
__builtin_sve_reinterpret_u64_u16
SUBMODULE_PRIVATE_HEADER
__builtin_sve_reinterpret_u64_f16
q2UWiq8h
q2UWiq8y
SUBMODULE_PRIVATE_TEXTUAL_HEADER
__builtin_sve_reinterpret_f16_s8
q8hq16Sc
__builtin_sve_reinterpret_f16_s32
SUBMODULE_EXPORT_AS
__builtin_sve_reinterpret_f16_u8
q8hq16Uc
Generate code only for an OpenMP target device.
COMMENTS_RAW_COMMENT
__builtin_sve_reinterpret_f16_bf16
q8hq8y
__builtin_sve_reinterpret_f16_f64
DECLTYPES_BLOCK
__builtin_sve_reinterpret_bf16_s16
q8yq8Ss
q8yq4Si
TYPE_COMPLEX
__builtin_sve_reinterpret_bf16_u16
q8yq8Us
__builtin_sve_reinterpret_bf16_u64
TYPE_BLOCK_POINTER
__builtin_sve_reinterpret_bf16_bf16
__builtin_sve_reinterpret_bf16_f32
Use IEEE 754 quadruple-precision for long double
TYPE_RVALUE_REFERENCE
q4fq8Ss
__builtin_sve_reinterpret_f32_s32
q4fq2SWi
TYPE_CONSTANT_ARRAY
q4fq8Us
__builtin_sve_reinterpret_f32_u32
q4fq2UWi
TYPE_VARIABLE_ARRAY
__builtin_sve_reinterpret_f32_f32
__builtin_sve_reinterpret_f32_f64
q2dq16Sc
TYPE_EXT_VECTOR
__builtin_sve_reinterpret_f64_s32
TYPE_FUNCTION_NO_PROTO
Use the new driver for OpenMP offloading.
TYPE_FUNCTION_PROTO
q2dq4Ui
__builtin_sve_reinterpret_f64_u64
__builtin_sve_reinterpret_f64_bf16
TYPE_TYPEOF_EXPR
__builtin_sve_reinterpret_f64_f64
__builtin_sve_svget_neonq_s8
__builtin_sve_svget_neonq_s16
TYPE_RECORD
V2Wiq2Wi
__builtin_sve_svget_neonq_u8
V16Usq16Us
TYPE_OBJC_INTERFACE
V2UWiq2UWi
__builtin_sve_svget_neonq_f16
Enable the default Altivec ABI on AIX (AIX only). Uses only volatile vector registers.
TYPE_DECLTYPE
V8yq8y
__builtin_sve_svset_neonq_s8
q8sq8sV8s
TYPE_SUBST_TEMPLATE_TYPE_PARM
q2Wiq2WiV2Wi
__builtin_sve_svset_neonq_u8
__builtin_sve_svset_neonq_u16
TYPE_INJECTED_CLASS_NAME
q2UWiq2UWiV2UWi
__builtin_sve_svset_neonq_f16
q4fq4fV4f
TYPE_TEMPLATE_TYPE_PARM
q8yq8yV8y
__builtin_sve_svdup_neonq_s8
Do not create a host fallback if offloading to the device fails.
TYPE_DEPENDENT_NAME
__builtin_sve_svdup_neonq_u8
q16UcV16Uc
__builtin_sve_svdup_neonq_u32
TYPE_DEPENDENT_SIZED_ARRAY
__builtin_sve_svdup_neonq_f16
q8hV8h
q4fV4f
TYPE_MACRO_QUALIFIED
__builtin_sme___arm_in_streaming_mode
__builtin_sme_svaddha_za32_u32
TYPE_ATTRIBUTED
__builtin_sme_svaddha_za64_u64
vIUWiq16bq16bq2UWi
-mabicalls
TYPE_AUTO
__builtin_sme_svcntsh
__builtin_sme_svcntsw
__builtin_sme_svld1_hor_vnum_za16
TYPE_ATOMIC
__builtin_sme_svld1_hor_za128
vIUWiUiIUWiq16bvC*
__builtin_sme_svld1_hor_za32
TYPE_ADJUSTED
__builtin_sme_svld1_ver_vnum_za32
__builtin_sme_svld1_ver_vnum_za64
__builtin_sme_svld1_ver_za16
LOCAL_REDECLARATIONS
__builtin_sme_svldr_vnum_za
DECL_TYPEDEF
-fopenmp-relocatable-target
DECL_TYPEALIAS
__builtin_sme_svmla_lane_za64_f64_vg1x4
vUiIUWiq8dq2dIUWi
__builtin_sme_svmla_single_za32_f32_vg1x4
DECL_RECORD
__builtin_sme_svmla_single_za64_f64_vg1x4
vUiIUWiq8dq2d
vUiIUWiq8fq8f
DECL_FUNCTION
__builtin_sme_svmla_za64_f64_vg1x4
vUiIUWiq8dq8d
__builtin_sme_svmlal_lane_za32_bf16_vg2x2
DECL_OBJC_INTERFACE
__builtin_sme_svmlal_lane_za32_f16_vg2x1
vUiIUWiq8hq8hIUWi
-madx
DECL_OBJC_IVAR
__builtin_sme_svmlal_lane_za32_s16_vg2x2
vUiIUWiq16sq8sIUWi
__builtin_sme_svmlal_lane_za32_u16_vg2x1
DECL_OBJC_CATEGORY
__builtin_sme_svmlal_lane_za32_u16_vg2x4
vUiIUWiq32Usq8UsIUWi
vUiIUWiq8yq8y
DECL_OBJC_IMPLEMENTATION
__builtin_sme_svmlal_single_za32_f16_vg2x1
vUiIUWiq8hq8h
__builtin_sme_svmlal_single_za32_f16_vg2x4
DECL_OBJC_PROPERTY
__builtin_sme_svmlal_single_za32_s16_vg2x2
vUiIUWiq16sq8s
Emit OpenMP code only for SIMD-based constructs.
DECL_FIELD
__builtin_sme_svmlal_single_za32_u16_vg2x4
vUiIUWiq32Usq8Us
__builtin_sme_svmlal_za32_bf16_vg2x4
DECL_VAR
__builtin_sme_svmlal_za32_f16_vg2x4
vUiIUWiq32hq32h
vUiIUWiq16sq16s
DECL_PARM_VAR
__builtin_sme_svmlal_za32_u16_vg2x4
vUiIUWiq32Usq32Us
__builtin_sme_svmls_lane_za64_f64_vg1x2
DECL_BLOCK
__builtin_sme_svmls_single_za64_f64_vg1x2
__builtin_sme_svmls_single_za64_f64_vg1x4
-maix-struct-return
DECL_CONTEXT_VISIBLE
__builtin_sme_svmlsl_lane_za32_bf16_vg2x4
__builtin_sme_svmlsl_lane_za32_f16_vg2x1
__builtin_sme_svmlsl_lane_za32_s16_vg2x1
DECL_NAMESPACE_ALIAS
__builtin_sme_svmlsl_lane_za32_u16_vg2x2
__builtin_sme_svmlsl_lane_za32_u16_vg2x4
__builtin_sme_svmlsl_single_za32_bf16_vg2x2
DECL_USING_SHADOW
__builtin_sme_svmlsl_single_za32_s16_vg2x1
__builtin_sme_svmlsl_single_za32_s16_vg2x2
__builtin_sme_svmlsl_single_za32_u16_vg2x1
DECL_UNRESOLVED_USING_VALUE
-fhonor-infinities
-fno-gnu-keywords
DECL_LINKAGE_SPEC
common
-fdepscan-share-identifier=
DECL_CXX_METHOD
Inconvertible error value. An error has occurred that could not be converted to a known std::error_code. Please file a bug.
A file error occurred.
DECL_CXX_CONSTRUCTOR
`anonymous namespace'
DECL_CXX_DESTRUCTOR
(anonymous)
DECL_CXX_CONVERSION
offset 0x%llx is beyond the end of data at 0x%zx
DECL_ACCESS_SPEC
-fcf-runtime-abi=
DECL_FRIEND
extern
DECL_FRIEND_TEMPLATE
DECL_CLASS_TEMPLATE
STMT_BREAK
DECL_CLASS_TEMPLATE_SPECIALIZATION
-fcas-plugin-path
DECL_CLASS_TEMPLATE_PARTIAL_SPECIALIZATION
-Inf
DECL_VAR_TEMPLATE
Invalid character in significand
DECL_VAR_TEMPLATE_SPECIALIZATION
rv730
DECL_VAR_TEMPLATE_PARTIAL_SPECIALIZATION
-fcoverage-mapping
DECL_FUNCTION_TEMPLATE
Enable colors in diagnostics
DECL_TEMPLATE_TYPE_PARM
DECL_NON_TYPE_TEMPLATE_PARM
Set the maximum number of source lines to show in a caret diagnostic
DECL_TEMPLATE_TEMPLATE_PARM
ps_6_0, ps_6_1, ps_6_2, ps_6_3, ps_6_4, ps_6_5, ps_6_6, ps_6_7,vs_6_0, vs_6_1, vs_6_2, vs_6_3, vs_6_4, vs_6_5, vs_6_6, vs_6_7,gs_6_0, gs_6_1, gs_6_2, gs_6_3, gs_6_4, gs_6_5, gs_6_6, gs_6_7,hs_6_0, hs_6_1, hs_6_2, hs_6_3, hs_6_4, hs_6_5, hs_6_6, hs_6_7,ds_6_0, ds_6_1, ds_6_2, ds_6_3, ds_6_4, ds_6_5, ds_6_6, ds_6_7,cs_6_0, cs_6_1, cs_6_2, cs_6_3, cs_6_4, cs_6_5, cs_6_6, cs_6_7,lib_6_3, lib_6_4, lib_6_5, lib_6_6, lib_6_7, lib_6_x,ms_6_5, ms_6_6, ms_6_7,as_6_5, as_6_6, as_6_7
DECL_CONCEPT
  Total Execution Time: %5.4f seconds (%5.4f wall clock)
DECL_REQUIRES_EXPR_BODY
Captured
DECL_TYPE_ALIAS_TEMPLATE
Total
DECL_STATIC_ASSERT
Make the x15 register call-saved (AArch64 only)
DECL_CXX_BASE_SPECIFIERS
Empty
DECL_CXX_CTOR_INITIALIZERS
-gdwarf-2
DECL_INDIRECTFIELD
-fcall-saved-x12
DECL_EXPANDED_NON_TYPE_TEMPLATE_PARM_PACK
Make the x11 register call-saved (AArch64 only)
DECL_EXPANDED_TEMPLATE_TEMPLATE_PARM_PACK
Make the x10 register call-saved (AArch64 only)
DECL_CLASS_SCOPE_FUNCTION_SPECIALIZATION
Import
DECL_IMPORT
dxil
DECL_OMP_THREADPRIVATE
Assume functions may be convergent
DECL_EMPTY
Configure the filesystem to read from the provided CAS tree. See also -fcas-builtin-path for loading a tree.
DECL_OBJC_TYPE_PARAM
Submodule ID local -> global map
DECL_OMP_CAPTUREDEXPR
nvptx64
DECL_PRAGMA_COMMENT
-fbuild-session-timestamp=
DECL_PRAGMA_DETECT_MISMATCH
-fbuild-session-file=
DECL_OMP_DECLARE_REDUCTION
less
DECL_OMP_ALLOCATE
spir
DECL_HLSL_BUFFER
Maximum number of steps in constexpr function evaluation
PREPROCESSOR_DETAIL_BLOCK
ObjCCategory
PPD_MACRO_EXPANSION
Require member pointer base types to be complete if they would be significant under the Microsoft ABI
PPD_MACRO_DEFINITION
mipsisa64r6
PPD_INCLUSION_DIRECTIVE
-fblocks-runtime-optional
EXTENSION_BLOCK
<major.minor>
EXTENSION_METADATA
Supplied regexp was blank
UNHASHED_CONTROL_BLOCK
dragonfly
SIGNATURE
-fcoro-aligned-allocation
AST_BLOCK_HASH
-fc++-abi=
DIAGNOSTIC_OPTIONS
HEADER_SEARCH_PATHS
nvcl
FILE_SYSTEM_OPTIONS
/favor
DIAG_PRAGMA_MAPPINGS
-fautolink
<<<INVALID BUFFER>>>
objective-c++-header
STMT_STOP
shadermodel
STMT_NULL_PTR
-fconstexpr-steps=
STMT_REF_PTR
CXXRecord
STMT_NULL
-fastcp
STMT_COMPOUND
macabi
STMT_CASE
Allow certain math function calls to be replaced with an approximately equivalent calculation
STMT_DEFAULT
Apply global symbol visibility to external declarations without an explicit visibility
STMT_LABEL
sifive-e24
STMT_ATTRIBUTED
closesthit
STMT_IF
-fconvergent-functions
STMT_SWITCH
-fbackslash
STMT_WHILE
STMT_DO
EXPR_CONDITIONAL_OPERATOR
arm926ej-s
STMT_FOR
<version>
STMT_GOTO
-fapinotes-swift-version=
STMT_INDIRECT_GOTO
objective-c
STMT_CONTINUE
mips64r6el
-fconstexpr-depth
STMT_RETURN
ObjCIvar
STMT_DECL
+3e3r1
STMT_GCCASM
-triple=
STMT_MSASM
libgcc,unwindlib,platform
EXPR_PREDEFINED
EXPR_DECL_REF
precompiled-header
EXPR_INTEGER_LITERAL
EXPR_FIXEDPOINT_LITERAL
off,all,bitcode,marker
EXPR_FLOATING_LITERAL
-femit-all-decls
EXPR_IMAGINARY_LITERAL
PreferredName
EXPR_STRING_LITERAL
EXPR_CHARACTER_LITERAL
-feliminate-unused-debug-symbols
EXPR_PAREN
OMPCapturedExpr
EXPR_PAREN_LIST
-fno-temp-file
EXPR_UNARY_OPERATOR
hipfb
EXPR_SIZEOF_ALIGN_OF
Dump the layouts of all vtables that will be emitted in a translation unit
EXPR_ARRAY_SUBSCRIPT
OverlayFileSystem
EXPR_CALL
-fcrash-diagnostics
EXPR_MEMBER
expected mapping node
EXPR_BINARY_OPERATOR
Dump record layout information in a simple form used for testing
EXPR_COMPOUND_ASSIGN_OPERATOR
-fdump-fortran-original
EXPR_IMPLICIT_CAST
unknown value for 'type'
EXPR_CSTYLE_CAST
Allow '$' in identifiers
EXPR_COMPOUND_LITERAL
 (UseExternalName: true)
EXPR_EXT_VECTOR_ELEMENT
PragmaClangTextSection
RandomizeLayout
SharedTrylockFunction
EXPR_INIT_LIST
EXPR_DESIGNATED_INIT
redirect-only
EXPR_DESIGNATED_INIT_UPDATE
Rename failed: 
EXPR_IMPLICIT_VALUE_INIT
-fdiagnostics-show-template-tree
EXPR_NO_INIT
llvm.vfs.output
EXPR_VA_ARG
-fdiagnostics-show-note-include-stack
EXPR_ADDR_LABEL
function-exit
EXPR_STMT
-fdiagnostics-show-hotness
EXPR_CHOOSE
EXPR_GNU_NULL
sse4.1
EXPR_SHUFFLE_VECTOR
Print fix-its in machine parseable form
EXPR_BLOCK
 Captured decls, 
EXPR_GENERIC_SELECTION
pclmul
EXPR_OBJC_STRING_LITERAL
avx512cd
EXPR_OBJC_BOXED_EXPRESSION
-fno-gpu-exclude-wrong-side-overloads
EXPR_OBJC_ARRAY_LITERAL
-fcoverage-compilation-dir=
EXPR_OBJC_DICTIONARY_LITERAL
avx512bitalg
EXPR_OBJC_ENCODE
Print absolute paths in diagnostics
EXPR_OBJC_SELECTOR_EXPR
-fdevirtualize
EXPR_OBJC_PROTOCOL_EXPR
response-file
EXPR_OBJC_IVAR_REF_EXPR
pentium3m
EXPR_OBJC_PROPERTY_REF_EXPR
If the argument is the name of a command in the process tree, share state based on its PID. E.g., -fdepscan -fdepscan-share=ninja will search for 'ninja' in the process tree and share state based on its PID if found. See also -fdepscan-share-stop.
EXPR_OBJC_KVC_REF_EXPR
 LinkageSpec decls, 
EXPR_OBJC_MESSAGE_EXPR
-fapple-link-rtlib
STMT_OBJC_FOR_COLLECTION
tremont
STMT_OBJC_CATCH
Share depscan daemon for Clang invocations using the same string identifier.
STMT_OBJC_FINALLY
STMT_OBJC_AT_TRY
sifive-u54
gfx906
STMT_OBJC_AT_SYNCHRONIZED
cannonlake
STMT_OBJC_AT_THROW
The compilation directory to embed in the coverage mapping.
EXPR_OBJC_BOOL_LITERAL
Change diagnostic formatting to match IDE and command line tools
STMT_CXX_CATCH
STMT_CXX_TRY
-fdepscan-daemon=
STMT_CXX_FOR_RANGE
-fdeprecated-macro
EXPR_CXX_OPERATOR_CALL
 ObjCProtocol decls, 
EXPR_CXX_MEMBER_CALL
 multiversion
EXPR_CXX_REWRITTEN_BINARY_OPERATOR
  Base decl ID: 
EXPR_CXX_CONSTRUCT
-fdefer-pop
EXPR_CXX_TEMPORARY_OBJECT
 Concept decls, 
EXPR_CXX_STATIC_CAST
-fdiagnostics-color
EXPR_CXX_DYNAMIC_CAST
cldemote
EXPR_CXX_REINTERPRET_CAST
cdecl,fastcall,stdcall,vectorcall,regcall
EXPR_CXX_CONST_CAST
-fdefault-calling-conv=
EXPR_CXX_ADDRSPACE_CAST
Use approximate transcendental functions
EXPR_CXX_FUNCTIONAL_CAST
-ffixed-a5
EXPR_USER_DEFINED_LITERAL
EXPR_CXX_STD_INITIALIZER_LIST
-fdepscan-prefix-map-sdk=
EXPR_CXX_BOOL_LITERAL
EXPR_CXX_NULL_PTR_LITERAL
-ffixed-a1
EXPR_CXX_TYPEID_EXPR
-ffixed-a0
EXPR_CXX_TYPEID_TYPE
 ObjCTypeParam decls, 
EXPR_CXX_THIS
capture
EXPR_CXX_THROW
-ffile-reproducible
EXPR_CXX_DEFAULT_ARG
-fconstant-string-class=
EXPR_CXX_DEFAULT_INIT
-fno-tree-salias
EXPR_CXX_BIND_TEMPORARY
CXXCtorInitializer
EXPR_CXX_SCALAR_VALUE_INIT
Could not find expected : for simple key
EXPR_CXX_NEW
-ffile-compilation-dir=
EXPR_CXX_DELETE
Set output executable file name
EXPR_CXX_PSEUDO_DESTRUCTOR
EXPR_EXPR_WITH_CLEANUPS
tag:yaml.org,2002:str
EXPR_CXX_DEPENDENT_SCOPE_MEMBER
32,64
EXPR_CXX_DEPENDENT_SCOPE_DECL_REF
EXPR_CXX_UNRESOLVED_CONSTRUCT
-fdebug-dump-parsing-log
EXPR_CXX_UNRESOLVED_MEMBER
not a mapping
EXPR_CXX_UNRESOLVED_LOOKUP
-fextdirs=
EXPR_CXX_EXPRESSION_TRAIT
Emit PCs for atomic operations used by binary analysis sanitizers
EXPR_CXX_NOEXCEPT
-fexperimental-sanitize-metadata=atomics
EXPR_OPAQUE_VALUE
EXPR_BINARY_CONDITIONAL_OPERATOR
-fextend-arguments=
EXPR_TYPE_TRAIT
 NonTypeTemplateParm decls, 
EXPR_ARRAY_TYPE_TRAIT
/GF-
EXPR_PACK_EXPANSION
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
EXPR_SIZEOF_PACK
EXPR_SUBST_NON_TYPE_TEMPLATE_PARM
-fexec-charset=
EXPR_SUBST_NON_TYPE_TEMPLATE_PARM_PACK
 VarTemplateSpecialization decls, 
EXPR_FUNCTION_PARM_PACK
0123456789ABCDEFabcdef
EXPR_MATERIALIZE_TEMPORARY
EXPR_CUDA_KERNEL_CALL
-fno-gpu-sanitize
EXPR_CXX_UUIDOF_EXPR
Use 32-bit pointers for accessing const/local/shared address spaces
EXPR_CXX_UUIDOF_TYPE
Specify target triple (e.g. i686-apple-darwin9)
EXPR_LAMBDA
Reserve the x10 register (AArch64/RISC-V only)
serializing
 OMPDeclareReduction decls, 
unexpected declaration kind '
<unknown> parser at unknown location
Module LoadIndex
expected signature BCGI
Use <value> as character line width in fixed mode
*** Global Module Index Statistics:
 OMPAllocate decls, 
  %u / %u identifier lookups succeeded (%f%%)
With -fdepscan, auto-detect the SDK path on-disk and remap it to the given path (see -fdepscan-prefix-map=).
LFS error
apostrophe
someone else is building the index
-ffixed-d6
failed writing index
-ffixed-d5
Module index '
-fcrash-diagnostics-dir=
' failed: 
five
failed getting buffer for module file
Enable support for the C++ Coroutines TS
expected signature CPCH
Reserve the d4 register (M68k only)
imported file "%s" not found
 variably_modified
Module WriteIndex
Reserve the d0 register (M68k only)
GLOBAL_INDEX_BLOCK
INDEX_METADATA
first deprecated in 
MODULE
strong_ordering
IDENTIFIER_INDEX
REG_ECOLLATE
Module: 
Reserve the x17 register (AArch64/RISC-V only)
  Imports: 
GUID{%08x-%04hx-%04hx-
  Base source location offset: 
-fcuda-flush-denormals-to-zero
Source location offset local -> global map
REG_ERANGE
  Base identifier ID: 
Reserve the x13 register (AArch64/RISC-V only)
  Number of identifiers: 
public
Identifier ID local -> global map
-fcuda-rdc
  Base macro ID: 
first letter should be 'e', 'i' or 'g'
  Number of macros: 
-fcuda-approx-transcendentals
Macro ID local -> global map
remap file source paths in coverage mapping
  Base submodule ID: 
  Number of submodules: 
-fcommon
-ffixed-x28
  Base selector ID: 
Reserve the x2 register (AArch64/RISC-V only)
  Number of selectors: 
-ffixed-x4
  Base preprocessed entity ID: 
-fcompilation-caching-service-path
-fcxx-exceptions
  Number of preprocessed entities: 
-ffixed-x3
Preprocessed entity ID local -> global map
extension name missing after separator '_'
zknd
zvl512b
  Base type index: 
-fforce-dwarf-frame
  Number of types: 
-fdebug-compilation-dir=
Type index local -> global map
pthread_attr_init failed
-fd-lines-as-comments
  Number of decls: 
Set level of crash diagnostic reporting, (option: off, compiler, all)
Decl ID local -> global map
Prefer aligned allocation for C++ Coroutines
    
Specifies the evaluation method to use for floating-point arithmetic.
module file out of date
 instantiation_dependent
 <undeserialized declarations>
module file not found
-save-restore
__builtin_amdgcn_implicitarg_ptr
__builtin_amdgcn_queue_ptr
__builtin_amdgcn_workgroup_id_y
.clang-scan
__builtin_amdgcn_workitem_id_z
__builtin_amdgcn_workgroup_size_x
__builtin_amdgcn_workgroup_size_z
 functions analyzed (
__builtin_amdgcn_mbcnt_hi
__builtin_amdgcn_mbcnt_lo
s-memtime-inst
__builtin_amdgcn_s_getpc
__builtin_amdgcn_s_waitcnt
__builtin_amdgcn_s_sendmsghalt
 average CFG blocks per function.
__builtin_amdgcn_sched_group_barrier
vIiIiIi
__builtin_amdgcn_s_dcache_inv
 functions analyzed for uninitialiazed variables
__builtin_amdgcn_ds_gws_sema_v
__builtin_amdgcn_ds_gws_sema_br
vUicC*
 average variables per function.
__builtin_amdgcn_atomic_inc64
UWiUWiD*UWiUicC*
-mclwb
 block visits.
__builtin_amdgcn_div_fmas
ddddb
__builtin_amdgcn_div_fixup
 max block visits per function.
__builtin_amdgcn_trig_preop
__builtin_amdgcn_rsq
__builtin_amdgcn_rsqf
__builtin_amdgcn_sinf
case
__builtin_amdgcn_ldexpf
__builtin_amdgcn_frexp_mant
-mcmodel=medany
[[fallthrough]]
UiUiUiUi
__builtin_amdgcn_class
__attribute__((fallthrough))
__builtin_amdgcn_cubema
__builtin_amdgcn_s_sleep
__builtin_amdgcn_s_decperflevel
__builtin_amdgcn_uicmpl
WUiWUiWUiIi
__builtin_amdgcn_sicmpl
__builtin_amdgcn_fcmpf
WUiffIi
Override record layouts with those in the given file
 remove_volatile
 tls_dynamic
 cinit
/* DISABLES CODE */ (
+save-restore
 synthesize
 captures_this
 unsafe_unretained
-Av9
 IsDeref
+relax
 DT_Error
 Open
WUiUiUiIi
WUiiiIi
original
-Av9d
__builtin_amdgcn_fmed3f
Output object file
__builtin_amdgcn_ds_fmaxf
 Texture2D
PREFERRED-TYPE: 
 Texture1DArray
-Asparclite
Hidden
 Texture1D
__builtin_amdgcn_cvt_pk_u16
 RawBuffer
Inaccessible
__builtin_amdgcn_cvt_pknorm_u16
-Av8plus
 Vertex
Pattern : 
__builtin_amdgcn_is_private
 Geometry
 to "
 Library
fffUiUiUi
16-bit-insts
OPENING_PAREN_LOC: 
 AnyHit
 Miss
const
-Av8plusd
volatile
/fp:contract
restrict
iiIiIiIiIb
 BestCase
unspecified
 hw2
Allow use of CMSE (Armv8-M Security Extensions)
__builtin_amdgcn_global_atomic_fadd_f32
extern
 hw5
+transactional-execution
 Amplification
auto
+vector
 OMPThreadMemAlloc
__private_extern__
V2sV2s*3V2s
 OMPUserDefinedMemAlloc
__thread
 DT_NoHost
sV2sV2ss
SiV2SsV2SsSiIb
_Thread_local
 Target_TargetSync
-fmodules-ts
 TargetSync
long
__builtin_amdgcn_udot8
/fp:except
unaligned
imaginary
gfx10-insts
 OMF_init
signed
 supervisor
typedef
haswell
void
 NotSwiftPrivate
AVX512F
 ZeroArgument
static
__wchar_t
 OMF_copy
AVX512
char8_t
 MustBeNull
-mcompact-branches=
 Protected
char32_t
 IR_None
short
V4iIbV2iIbV2iV4iIb
__int128
 IR_ARCForbiddenConversion
long long
 IR_IgnoredWeak
-fno-honor-infinities
float
/fp:precise
complex
double
__builtin_amdgcn_mfma_f32_32x32x2f32
 ProcessIndependent
_Fract
 DefaultExtraDiscrimination
unsigned
pentium4
__float128
 ProcessDependent
__builtin_amdgcn_mfma_i32_32x32x8i8
 UsedGPRArg
bool
__builtin_amdgcn_mfma_i32_16x16x4i8
nehalem
 VectorizeWidth
_Decimal32
__builtin_amdgcn_mfma_f64_4x4x4f64
 Interleave
_Decimal128
 UnrollAndJam
__builtin_amdgcn_mfma_f32_32x32x4_xf32
fp8-insts
class
Apply fix-it advice creating a file with the given suffix
 PipelineInitiationInterval
 VectorizePredicate
struct
yonah
V16fV4hV8hV16fiIiIi
-fpack-derived
_Accum
type-name
V16fV4sV8sV16fiIiIi
 FixedWidth
typeof_unqual
 BS_Undefined
_Float16
x86-64
(decltype)
__builtin_amdgcn_mfma_f32_16x16x1f32
__builtin_amdgcn_cvt_f32_fp8
__add_lvalue_reference
__builtin_amdgcn_smfmac_f32_32x32x32_bf8_fp8
-pclmul
 standard_layout
__add_rvalue_reference
enum
 trivially_copyable
__make_signed
 literal
__remove_all_extents
 has_mutable_fields
__interface
 can_const_default_init
__remove_cv
-fsgsbase
__remove_cvref
Specify the default maximum struct packing alignment
__remove_extent
 needs_implicit
typeof
__remove_reference_t
 non_trivial
Allow use of CRC instructions (ARM/Mips only)
 user_provided
__remove_volatile
 defaulted_is_deleted
+ssse3
 NoKey
decltype(auto)
__unknown_anytype
+retpoline-indirect-branches
class
__bf16
v109
__make_unsigned
struct
image1d_array_t
Adjusted
v117
v121
image2d_t
DependentSizedArray
-fmodules-user-build-path
VariableArray
image2d_depth_t
+lvi-cfi
v133
-fpadding-on-unsigned-fixed-point
__remove_pointer
image2d_msaa_t
v137
BitInt
image2d_msaa_depth_t
Decltype
__remove_restrict
-mmx
image3d_t
DependentBitInt
-sse
DependentSizedExtVector
__underlying_type
constexpr
BTFTagAttributed
+harden-sls-ret
constinit
/MDd
DependentSizedMatrix
cl_clang_storage_class_specifiers
MemberPointer
image2d_array_t
v173
inline
ObjCTypeParam
-a64
image2d_array_depth_t
ObjCInterface
Pipe
explicit
-fno-implicit-module-maps
_Noreturn
Pointer
v201
RValueReference
__module_private__
Record
image2d_array_msaa_depth_t
-bnso
power8-vector
v197
v217
Typedef
power10-vector
v213
-bdbg:namedsects:ss
unsigned short
override
v237
_Sat
unsigned int
__final
__fp16
v245
v249
abstract
unsigned short _Accum
-bpD:0x20000000
unsigned long _Accum
__builtin_shufflevector
Specify the module user build path
Recognize and construct Pascal-style string literals
element_count
-b64
unsigned short _Fract
RWBuffer
_Sat _Accum
-bpT:0x100000000
__pixel
long _Fract
_Sat short _Fract
_Sat _Fract
crti_64.o
clang::aarch64_far_address_space
s109
sealed
<overloaded function type>
clang::aarch64_sve_pcs
<unknown type>
s117
s121
clang::aarch64_vector_pcs
__read_only image2d_array_t
CreateExportList
__read_only image2d_t
clang::amdgpu_flat_work_group_size
flat_scratch_lo
Allows assuming by-value parameters do not alias any other value. Has no effect on non-trivially-copyable classes in C++.
__read_only image2d_array_msaa_t
-many
--export-symbols
clang::amdgpu_kernel
element_type
__write_only image2d_t
clang::amdgpu_num_sgpr
__write_only image2d_depth_t
__write_only image2d_array_t
amdgpu_num_vgpr
-bE:
__write_only image2d_array_msaa_t
__read_write image1d_array_t
aarch64_vector_pcs
NumVGPR
Force double to be <n> bits
__read_write image1d_buffer_t
clang::amdgpu_waves_per_eu
__read_write image2d_array_depth_t
amdgpu_flat_work_group_size
Interrupt
<OpenMP array shaping type>
/usr/include
cdecl
amdgpu_kernel
gnu::signal
Load pass plugin from a dynamic shared object file (only with new pass manager).
-mdspr2
gnu::abi_tag
thiscall
pascal
clang::acquire_capability
regcall
opt/IBM/openxlCSDK
clang::amdgpu_num_vgpr
Args...
aarch64_sve_pcs
amdgpu_waves_per_eu
aarch64_vector_pcs
swiftcall
a106
a114
address_space
NSObject
abi_tag
swift_error_result
AddressSpace
-lc++abi
a130
Tags...
__ptrauth(
a134
ptrauth_key_none
align_value
__private
clang::acquire_shared_capability
Alignment
aligned
a146
acquire_handle
__global_device
alignas
__shared__
a154
<dsopath>
alloc_align
_BitInt(
a178
Aliasee
__generic
decltype(
a182
a194
gnu::alloc_size
)))) 
linker
 * 8
gnu::aligned
NumElemsParam
Set EABI type. Default depends on triple)
) * 8
clang::always_destroy
mcrt0.o
a214
 __attribute__((matrix_type(
gnu::always_inline
a210
-Bshareable
__forceinline
aapcs-vfp
-dynamic-linker
always_inline
unnamed
typeof 
a246
a250
DiagnosticIdentifiers...
std::function<
clang::always_inline
clang::annotate
Annotation
-menable-experimental-extensions
ilink1
 __attribute__((pcs("aapcs")))
e-m:w-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S128
E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
E-m:o-p:32:32-Fi8-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
nocf_check
8M_BASE
objc_arc_weak_reference_unavailable
8_1A
8_4A
clang::argument_with_type_tag
8_8A
-menable-no-infs
ArgumentKind
aapcs16
apcs-gnu
thumb-mode
TypeTagIdx
+vfp2
+vfp3sp
+vfp3
BuiltinName
+vfp4d16
+fp-armv8sp
+fp-armv8d16
__clang_arm_mve_strict_polymorphism
+mve.fp
+cdecp0
-menable-no-nans
arm_new_za
__arm__
__ARM_ARCH_7K__
__ARM_ARCH_ISA_ARM
arm_shared_za
__ARM_EABI__
__ARM_PCS
__SOFTFP__
arm_streaming_compatible
__thumb__
__thumb2__
__APCS_32__
NumBits
__ARM_VFPV4__
__ARM_FPV5__
-fpcc-struct-return
gnu::artificial
__ARM_FEATURE_QBIT
__ARM_FEATURE_PAUTH
__builtin_arm_smulbt
clang::assert_shared_capability
__builtin_arm_smulwt
__builtin_arm_qadd
__builtin_arm_qdbl
gnu::assume_aligned
__builtin_arm_smlabt
__builtin_arm_smlatb
__builtin_arm_smlawt
assume
__builtin_arm_sxtb16
__builtin_arm_uxtab16
-menqcmd
Assumption
__builtin_arm_shsub8
__builtin_arm_ssub8
__builtin_arm_uhsub8
priority
__builtin_arm_usad8
__builtin_arm_usada8
__builtin_arm_qasx
clang::preserve_access_index
__builtin_arm_shadd16
__builtin_arm_shasx
__builtin_arm_ssax
clang::btf_decl_tag
__builtin_arm_uhadd16
BTFDeclTag
-fpch-codegen
btf_type_tag
SPACK package 
-fno-inline-functions-called-once
vcall_offset (
arm_locally_streaming
BTFTypeTag
Cannot use SPACK package 
__arm
Type
Allow optimization to assume there are no infinities.
amdgcn
assume_aligned
 [pure]
 vbase offset offset
Allow unsafe floating-point math optimizations which may decrease precision
__builtin_arm_smlabb
_cdecl
 at 
arm_preserves_za
Offset
clang::cf_audited_transfer
, version 
VTable indices for '
clang::cf_consumed
 method: 
preserve_access_index
cuda_wrappers
Guard
'): 
__builtin_arm_uasx
-fpch-debuginfo
clang::cfi_canonical_jump_table
 non-virtual]
-fno-inline-functions
__builtin_arm_uqsub16
clang::cf_returns_not_retained
vbase #
__builtin_arm_smlsd
clang::blocks
assumes
Don't verify input files for the modules if the module has been successfully validated or loaded during this build session
Execution model (WebAssembly only)
barrier
clang::cf_unknown_transfer
cancellation point
clang::builtin_alias
CL1.2
Cpus...
declare mapper
Generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
distribute parallel do
constant
distribute parallel do simd
cf_audited_transfer
device
do simd
-mlink-builtin-bitcode
cf_consumed
distribute simd
-mexecute-only
__device_builtin_surface_type__
-fpch-instantiate-templates
device_builtin_texture_type
end do
cfi_canonical_jump_table
 (Spack 
__global__
master taskloop
cf_returns_not_retained
ld.lld
__host__
LLUiUIiUIiUIi
-mextended-const
parallel do
__launch_bounds__
__builtin_arm_mve_uqshl
__builtin_arm_mve_vabdq_f16
parallel masked taskloop simd
clang::cpu_dispatch
MinBlocks
Generate debug info for types in an object file built from this PCH and do not generate them elsewhere
parallel master
noreturn
parallel workshare
clang::cpu_specific
--gc-sections
clang::callable_when
target data
Assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
target exit data
clang::callback
__builtin_arm_mve_vabdq_x_f16
__device__
-fpch-preprocess
called_once
__builtin_arm_mve_vabsq_m_s16
/lib/
target parallel for
capability
target teams distribute
-fno-inline-small-functions
__builtin_arm_mve_vadciq_m_u32
shared_capability
target parallel do simd
--start-group
__device_builtin_texture_type__
Name
taskloop
-l:crt
-lgcc
MaxThreads
cleanup
Instantiate templates already while building a PCH
__builtin_arm_mve_vaddq_m_n_u16
FunctionDecl
threadprivate
__builtin_arm_mve_vaddq_n_s32
__builtin_arm_mve_vaddq_n_u8
cmse_nonsecure_entry
teams
avr-ld
parallel loop
_Noreturn
cold
target parallel loop
Validate PCH input files based on content if mtime differs
gnu::common
acq_rel
-fno-inline
affinity
__const
append_args
clang::called_once
__builtin_arm_mve_vaddq_x_n_u8
constinit
capture
AVR::Linker
clang::capability
cancellation_construct_type
copyprivate
-mfix-cmse-cve-2021-35465
__builtin_arm_mve_vaddvq_p_u8
Priority
depend
avr1
detach
DefaultState
-fpch-validate-input-files-content
clang::shared_capability
clang::consumable_auto_cast_state
defaultmap
cmse_nonsecure_call
attiny12
clang::consumable_set_state_on_read
attiny28
linear
mergeable
clang::convergent
__builtin_arm_mve_vaddq_x_n_s32
__builtin_arm_mve_vbicq_n_u32
gnu::const
nontemporal
notinbranch
tiny-stack
-fno-integer-4-integer-8
gnu::dllimport
num_threads
gnu::__const
num_teams
DependerDecls...
proc_bind
__builtin_arm_mve_vbrsrq_m_n_f32
__builtin_arm_mve_vbrsrq_m_n_u16
gnu::deprecated
teams loop
gnu::constructor
task_reduction
Replacement
at90s2323
__builtin_arm_mve_vbrsrq_x_n_f32
clang::consumable
unified_address
uniform
__builtin_arm_mve_vbrsrq_x_n_u16
unified_shared_memory
clang::diagnose_as_builtin
use_device_ptr
consumable_auto_cast_state
Function
ArgIndices...
when
__builtin_arm_mve_vcaddq_rot270_m_u8
__builtin_arm_mve_vcaddq_rot270_u16
DiagnosticType
ppc64le
dllexport
dllimport
clang::disable_sanitizer_instrumentation
at90s4433
__builtin_arm_mve_vcaddq_rot90_x_f32
IsDeref
device
-mfix4300
at90s8515
target
enforce_tcb
__builtin_arm_mve_vclsq_m_s32
DependerLevels...
teams
TCBName
kind
__builtin_arm_mve_vclzq_m_s16
__builtin_arm_mve_vclzq_m_u32
clang::enforce_tcb_leaf
extension
destructor
dispatch
Extensibility
at90s8535
__builtin_arm_mve_vclzq_x_u32
-fpie
diagnose_as_builtin
gnu::warning
__builtin_arm_mve_vcmlaq_m_f16
reverse_offload
exclude_from_explicit_instantiation
nohost
-fmodules
avr25
SuccessValue
fpga
__builtin_arm_mve_vcmpcsq_m_n_u8
NumElements
__builtin_arm_mve_vcmlaq_rot90_m_f16
clang::external_source_symbol
unknown
-fPIE
generatedDeclaration
__builtin_arm_mve_vcmpeqq_n_s8
unified_shared_memory
enforce_tcb_leaf
bind_to_declaration
empty_bases
-mfma4
true
__fastcall
clang::enum_extensibility
_fastcall
flag_enum
__builtin_arm_mve_vcmpgeq_m_s32
gnu::error
static-func-strip-dirname-prefix
flatten
number of value profile kinds is invalid
__builtin_arm_mve_vcmpgeq_s32
__builtin_arm_mve_vcmpgtq_m_f16
gnu::format
attiny261
clang::exclude_from_explicit_instantiation
__llvm_prf_cnts
FirstArg
at86rf401
__builtin_arm_mve_vcmpgtq_n_s16
__llvm_prf_vnds
ext_vector_type
gnu::format_arg
__llvm_covmap
__builtin_arm_mve_vcmpgtq_s32
ThunkType
invalid instrumentation profile data (file header is corrupt)
attiny44
truncated profile data
gnu::gnu_inline
debug info for correlation is required
clang::fallthrough
attiny44a
guarded_var
no profile data available for function
counter overflow
gnu::fastcall
malformed instrumentation profile data
__builtin_arm_mve_vcmpgeq_m_n_s16
__builtin_arm_mve_vcmpltq_m_s32
clang::flag_enum
empty raw profile file
profile uses zlib compression but the profile reader was built without zlib support
attiny45
Spawn a separate process for each cc1
llvm.instrprof
memprof schema invalid
attiny85
ResourceType
Merge context profiles before calculating thresholds.
__builtin_arm_mve_vcmpneq_m_n_s16
__builtin_arm_mve_vcmpneq_m_n_u32
Slot
A count is hot if it exceeds the minimum count to reach this percentile of total counts.
format_arg
profile-summary-huge-working-set-size-threshold
SV_GroupIndex
attiny441
__builtin_arm_mve_vcmpneq_n_s8
gnu::function_return
The code working set size is considered large if the number of blocks required to reach the -profile-summary-cutoff-hot percentile exceeds this count.
A fixed hot count that overrides the count derived from profile-summary-cutoff-hot
__builtin_arm_mve_vcmpneq_s16
profile-summary-hot-count
clang::ibaction
profile-symbol-list-cutoff
gnu_inline
iboutlet
clang::iboutlet
Cutoff value about how many symbols in profile symbol list will be used. This is very useful for performance debugging
clang::guarded_var
Interface
Profile uses flow sensitive discriminators
gnu::ifunc
Section too small: cannot read header.
__builtin_arm_mve_vctp64q
Header
-mfpu=
attiny48
Bucket count
intel_ocl_bicc
__builtin_arm_mve_vcvtaq_s16_f16
ResourceShape
Hashes count
internal_linkage
String: 0x%08llx
__builtin_arm_mve_vcvtbq_f16_f32
__builtin_arm_mve_vcvtbq_x_f32_f16
lto_visibility_public
Error extracting the value
Number of atoms
layout_version
attiny828
__builtin_arm_mve_vcvtmq_x_u32_f32
Look up implicit modules in the prebuilt module path
ibaction
gnu::leaf
__builtin_arm_mve_vcvtnq_m_u32_f32
Bucket 
clang::lifetimebound
Length
-fmodulo-sched-allow-regmoves
at76c711
clang::likely
Foreign TU count
__builtin_arm_mve_vcvtpq_u32_f32
Abbreviations table size
clang::loader_uninitialized
__builtin_arm_mve_vcvtpq_m_u32_f32
__builtin_arm_mve_vcvtq_m_n_u32_f32
{0}: 
clang::loop
Invalid abbreviation.
-fprebuilt-implicit-modules
gnu::init_priority
State
Form: 
__builtin_arm_mve_vcvtq_n_u32_f32
Incorrectly terminated entry list.
mig_server_routine
Local Type Unit offsets
at90usb82
Foreign Type Unit signatures
clang::internal_linkage
ms_abi
ForeignTU[%u]: 0x%016llx
Specify the prebuilt module path
allocator
Name index is invalid
-fno-ipa-cp
parsing .debug_names header at 0x%llx: %s
__multiple_inheritance
0x%08llx
lifetimebound
 length = 
__unspecified_inheritance
__builtin_arm_mve_vcvtq_x_n_u32_f32
ata6617c
likely
0x%0*llx
, unit_type = 
all,non-leaf,none
__builtin_arm_mve_vdupq_m_n_f16
clang::matrix_type
0x%04llx
atmega8u2
loader_uninitialized
NumColumns
, DWO_id = 
atmega32u2
.debug_info
gnu::may_alias
.debug_info.dwo
Value
attiny1634
clang::maybe_undef
.debug_loc.dwo
Set preprocess output file name (with /P)
-fpreserve-as-comments
minsize
.debug_macro
-fno-ivopts
__builtin_arm_mve_veorq_m_s8
min_vector_width
.eh_frame
__builtin_arm_mve_veorq_u32
__virtual_inheritance
.debug_cu_index
-fmodulo-sched
keep,thunk-extern
.debug_tu_index
long_call
.debug_addr
novtable
ata6285
.debug_rnglists
-fprefetch-loop-arrays
.debug_pubtypes
short_call
.debug_gnu_pubnames
NumRows
__builtin_arm_mve_vfmaq_n_f16
near
.debug_str_offsets.dwo
ata6612c
may_alias
debug_str_offsets
Mode
Preserve 3-component vector type
musttail
.apple_types
gnu::micromips
atmega48a
ns_consumed
0x%8.8llx: "
clang::minsize
atmega48pb
ns_consumes_self
__builtin_arm_mve_vhaddq_m_n_u32
-mgeneral-regs-only
overlapping contributions to string offsets table in section .%s.
ErrorDomain
__builtin_arm_mve_vhaddq_x_n_u32
__builtin_arm_mve_vhcaddq_rot270_x_s8
%0*llx 
gnu::long_call
clang::ns_returns_autoreleased
-fpreserve-vec3-type
"%s"
clang::ns_returns_not_retained
debug_ranges
gnu::far
atmega88p
clang::ns_returns_retained
Unexpected relocations for dwo section 
-mgfni
failed to compute relocation: 
gnu::naked
__builtin_arm_mve_vhsubq_m_s16
gnu::near
-fproc-stat-report=
clang::neon_polyvector_type
__builtin_arm_mve_vhsubq_s16
atmega88pb
debug_macinfo
clang::neon_vector_type
debug_line
-fno-jump-tables
__builtin_arm_mve_vhsubq_x_s16
clang::musttail
no_builtin
atmega8535
failed to compute symbol address: 
BuiltinNames...
debug_str
parsing address table at offset 0x%llx: %s
at90pwm1
ns_returns_autoreleased
gnu::nocommon
-fprintf
__builtin_arm_mve_viwdupq_m_n_u16
gnu::nodebug
length = 0x%0*llx
__builtin_arm_mve_viwdupq_x_n_u16
__builtin_arm_mve_viwdupq_x_wb_u32
ns_returns_retained
clang::noderef
at90pwm3
0x%8.8llx
clang::no_destroy
-fignore-objc-weak
noduplicate
section is not large enough to contain an address table at offset 0x%llx with a unit_length value of 0x%llx
naked
clang::noduplicate
Do not use jump tables for lowering switches
address range table at offset 0x%llx
clang::noescape
non-zero segment selector size in address range table at offset 0x%llx is not supported
neon_vector_type
__builtin_arm_mve_vld1q_z_u32
noinline
address range table at offset 0x%llx is not terminated by null entry
ata5702m322
noalias
address range table at offset 0x%llx has a premature terminator entry at offset 0x%llx
format = 
Use GP relative accesses for symbols known to be in a small data section (MIPS)
__builtin_arm_mve_vldrbq_gather_offset_z_s16
gnu::no_instrument_function
at90pwm3b
ata5782
clang::no_builtin
nocommon
clang::nomerge
Save subprocess statistics to the given file
same
gnu::nomicromips
OT_Unset
noderef
ata5790n
gnu::nomips16
ata5795
OT_Register
OT_Expression
gnu::no_profile_instrument_function
<unknown CFIProgram::OperandType>
__builtin_arm_mve_vldrhq_gather_shifted_offset_u16
noescape
op[%u] has type OT_FactoredCodeOffset but code alignment is zero
op[%u] has OperandType %s which produces an unsigned result, call getOperandAsUnsigned instead
ata6613c
-fno-keep-inline-functions
no_sanitize
%s encountered while parsing a CIE
__noinline__
%s with adrress 0x%llx which must be greater than the current row address 0x%llx
Sanitizers...
DW_CFA opcode %#x is not supported for architecture %s
__builtin_arm_mve_vldrwq_f32
__builtin_arm_mve_vldrwq_gather_base_wb_f32
gnu::no_address_safety_analysis
Dot-separated value representing the Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
no_instrument_function
 %llx
gnu::no_sanitize_address
ata8210
__builtin_arm_mve_vldrwq_gather_offset_z_f32
nomerge
 %lld*code_alignment_factor
 in addrspace%lld
__builtin_arm_mve_vldrwq_gather_shifted_offset_s32
 %lld*data_alignment_factor
clang::no_sanitize_memory
 %0*llx
nomicromips
no_speculative_load_hardening
clang::no_speculative_load_hardening
 CIE
__builtin_arm_mve_vmaxaq_m_s8
__builtin_arm_mve_vmaxavq_p_s16
gnu::no_split_stack
  Augmentation data:    
no_randomize_layout
gnu::noreturn
clang::no_stack_protector
atmega16a
__builtin_arm_mve_vmaxq_m_u32
clang::no_sanitize
decoding the FDE opcodes into rows failed
Select straight-line speculation hardening scope (ARM/AArch64/X86 only). <arg> must be: all, none, retbr(ARM/AArch64), blr(ARM/AArch64), comdat(ARM/AArch64), nocomdat(ARM/AArch64), return(X86), indirect-jmp(X86)
atmega164p
'z' must be the first character at 0x%llx
nothrow
__builtin_arm_mve_vmaxq_x_s16
no_address_safety_analysis
parsing augmentation data at 0x%llx failed
no_unique_address
__builtin_arm_mve_vmaxvq_p_s8
__builtin_arm_mve_vmaxvq_s16
clang::nouwtable
no_sanitize_thread
(short)
not_tail_called
atmega165
__builtin_arm_mve_vminavq_p_s16
Instrument only functions from files where names don't match all the regexes separated by a semi-colon
no_sanitize_memory
os_consumed
__builtin_arm_mve_vminavq_s32
'\a'
os_consumes_this
'\r'
-fms-compatibility
atmega165pa
os_returns_not_retained
__builtin_arm_mve_vminnmq_m_f16
__builtin_arm_mve_vminnmvq_f16
'\U%08x'
os_returns_retained
__builtin_arm_mve_vminq_m_s16
const 
    address_size: %u
clang::no_thread_safety_analysis
os_returns_retained_on_non_zero
-fprofile-exclude-files=
 seg_select_size: %u
os_returns_retained_on_zero
gnu::nothrow
atmega168pb
objc_boxable
'\''
Set Hexagon Vector Length
standard_opcode_lengths[{0}] = {1}
clang::objc_bridge
__builtin_arm_mve_vmladavaq_p_s8
BridgedType
Instrument only functions from files where names match any regex separated by a semi-colon
clang::objc_bridge_mutable
__builtin_arm_mve_vmladavaxq_p_s8
clang::not_tail_called
         length: 0x%8.8llx
RelatedClass
atmega169a
__builtin_arm_mve_vmladavq_s8
clang::os_consumed
parsing line table prologue at offset 0x%8.8llx found opcode base of 0. Assuming no standard opcodes
parsing line table prologue at offset 0x%8.8llx: %s
parsing line table prologue at 0x%8.8llx found an invalid directory or file table description at 0x%8.8llx
__builtin_arm_mve_vmladavxq_p_s16
clang::objc_class_stub
 %6u %3u %13u 
clang::os_returns_not_retained
 basic_block
objc_designated_initializer
 prologue_end
atmega32a
clang::os_returns_retained
objc_direct
line table program at offset 0x%8.8llx contains a %s opcode at offset 0x%8.8llx, but the prologue minimum_instruction_length value is 0, which prevents any address advancing
atmega324a
__builtin_arm_mve_vmlaldavaxq_s16
objc_direct_members
mismatching address size at offset 0x%8.8llx expected 0x%2.2hhx found 0x%2.2llx
clang::os_returns_retained_on_zero
Badly formed extended line op (length 0)
objc_exception
, mod_time=
__builtin_arm_mve_vmlasq_m_n_s8
Partition functions into N groups and select only functions in group i to be instrumented using -fprofile-selected-function-group
gnu::nonnull
objc_protocol_requires_explicit_implementation
, length=
Unrecognized extended op 0x%02.02hhx
objc_externally_retained
atmega324pa
__builtin_arm_mve_vmlsdavaxq_p_s16
clang::objc_bridge_related
 (0x%16.16llx)
Unrecognized standard opcode
__builtin_arm_mve_vmlsdavaxq_s32
 (0x%4.4hx)
objc_independent_class
address += 
,  line += 
ClassMethod
__kindof
__builtin_arm_mve_vmlasq_n_s16
           name: 
failed to parse file entry because extracting the form value failed
Family
__builtin_arm_mve_vmlsdavxq_s32
-fprofile-function-groups=
clang::objc_designated_initializer
include directories table was not null terminated before the end of the prologue
__builtin_arm_mve_vmovlbq_m_u16
clang::objc_nonlazy_class
clang::objc_direct
objc_non_runtime_protocol
clang::objc_non_runtime_protocol
LLE of kind %x not supported
clang::objc_exception
macro header: version = 0x%04hx
objc_precise_lifetime
, flags = 0x%02hhx
__builtin_arm_mve_vmovnbq_u16
clang::objc_protocol_requires_explicit_implementation
0x%08llx:
 macro: 
__builtin_arm_mve_vmovntq_m_u16
 - lineno: 
objc_requires_super
 - constant: 
 string: 
clang::objc_externally_retained
objc_returns_inner_pointer
Macro contribution of the unit not found
__builtin_arm_mve_vmulhq_u32
name lookup table at offset 0x%llx does not have a complete header: %s
objc_root_class
__builtin_arm_mve_vmulhq_s16
clang::objc_independent_class
, unit_offset = 
objc_runtime_name
Offset     Linkage  Kind     Name
atmega329
clang::objc_method_family
, unit_size = 
__builtin_arm_mve_vmullbq_int_s8
invalid range list offset 0x%llx
-fprofile-generate
clang::objc_runtime_visible
__builtin_arm_mve_vmullbq_int_x_s16
atmega329p
%08llx %08llx %08llx
clang::objc_subclassing_restricted
%08llx %016llx %016llx
atmega3290
dead code
clang::objc_suppress_direct
No %s
clang::objc_ownership
atmega3290a
read_only
 => 
atmega3290p
clang::objc_requires_property_definitions
write_only
__builtin_arm_mve_vmulq_m_n_s8
 [{0}]
DW_APPLE_PROPERTY_0x%llx
read_write
 0x%llx
atmega406
clang::objc_returns_inner_pointer
opencl_constant
__builtin_arm_mve_vmulq_n_u32
__builtin_arm_mve_vmulq_s8
clang::objc_root_class
0x%08llx -> 
-fjump-tables
opencl_generic
0x%08llx)
clang::opencl_generic
 <invalid base_type ref: 0x%llx>
atmega640
clang::objc_runtime_name
opencl_global
-fno-limit-debug-info
0x%08x
opencl_global_device
<0x%2.2x> 
__builtin_arm_mve_vmvnq_m_s16
<0x%llx> 
opencl_global_host
%2.2x 
atmega644a
objc_suppress_direct
intel_reqd_sub_group_size
__builtin_arm_mve_vmulq_x_n_s16
__builtin_arm_mve_vmvnq_x_n_s16
0x%*.*llx
__kernel
<alt 0x%llx>
DW_FORM_indirect
__builtin_arm_mve_vmvnq_x_u32
Generate instrumented code to collect execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
atmega64a
__builtin_arm_mve_vnegq_x_f16
 => {
nosvm
 uses index 
, but the referenced string
__constant
clang::opencl_constant
opencl_private
__builtin_arm_mve_vornq_s32
  CU list offset = 0x%x, has %lld entries:
opencl_unroll_hint
  Address area offset = 0x%x, has %lld entries:
Accept some non-standard constructs supported by the Microsoft compiler
atmega649a
optnone
atmega645p
__builtin_arm_mve_vorrq_m_f32
  Constant pool offset = 0x%x, has %lld CU vectors:
overloadable
__builtin_arm_mve_vornq_x_u8
clang::opencl_global
<error parsing>
gsl::Owner
Migrate source code
atmega6450
clang::opencl_global_device
  Version = 
unrecognised %s table version %hu in table at offset 0x%llx
__builtin_arm_mve_vorrq_s32
__builtin_arm_mve_vorrq_u8
clang::ownership_takes
%s table at offset 0x%llx has more offset entries (%u) than there is space for
atmega6450p
, version = 0x%4.4hx, addr_size = 0x%2.2hhx, seg_size = 0x%2.2hhx, offset_entry_count = 0x%8.8x
clang::opencl_global_host
gnu::packed
offsets: [
-fprofile-instr-use=
ParamState
__builtin_arm_mve_vpselq_s16
__builtin_arm_mve_vpselq_u16
-mimplicit-it=
clang::pascal
<type unit can't be parsed!>
-fno-lto-unit
LINE
_pascal
STR_OFFSETS
__builtin_arm_mve_vqaddq_n_s8
LOCLISTS
clang::pass_object_size
atmega6490
atmega644rfr2
 Unknown: %-15u
clang::pass_dynamic_object_size
__builtin_arm_mve_vqdmladhxq_m_s16
clang::optnone
----- ------------------
gnu::patchable_function_entry
DW_FORM_strx used without a valid string offsets table
__builtin_arm_mve_vqdmlahq_m_n_s8
Generate instrumented code to collect execution counts into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
gnu::pcs
DWARF unit at 0x%8.8llx cannot be parsed:
DerefType
DWARF unit at offset 0x%8.8llx has unsupported version %hu, supported are 2-%u
gsl::Pointer
atmega16hvb
__builtin_arm_mve_vqdmlsdhxq_m_s16
-fprofile-instr-use
__ptrauth_restricted_intptr
DWARF unit at offset 0x%8.8llx
-mindirect-branch-cs-prefix
invalid reference to or invalid content in .debug_str_offsets[.dwo]: 
AddressDiscriminated
insufficient space for 32 bit header prefix
Module
atmega32hvbrevb
AuthenticationMode
-fms-hotpatch
invalid length
The length for this unit is too large for the .debug_info provided.
clang::ptrauth_struct
__builtin_arm_mve_vqdmulhq_s32
pascal
The offset into the .debug_abbrev section is not valid.
clang::preferred_name
Simplified template DW_AT_name could not be reconstituted:
atmega64hve2
__pascal
The address size is unsupported.
__builtin_arm_mve_vqdmulltq_m_s16
__builtin_arm_mve_vqmovntq_u16
pass_dynamic_object_size
Call site entry nested within inlined subroutine:
Subprogram with call site entry has no DW_AT_call attribute:
Use instrumentation data for profile-guided optimization
Call site entry not nested within a valid subprogram:
pt_guarded_var
clang::pt_guarded_var
-fprofile-instrument-use-path=
__ptr32
.debug_tu_index
atmega32c1
.debug_cu_index
pure
Disable LTO mode (default)
Invalid address range 
randomize_layout
DIEs have overlapping address ranges:
__builtin_arm_mve_vqrdmlsdhq_m_s16
DIE has overlapping ranges in DW_AT_ranges attribute: 
enforce_read_only_placement
 bounds: 
atmega16m1
ExtraDiscriminator
gnu::regcall
__builtin_arm_mve_vqrdmladhxq_m_s8
__builtin_arm_mve_vqrdmulhq_m_s32
ptrauth_struct
DIE contains invalid DWARF expression:
DIE with tag 
atmega64m1
-minvpcid
NumParams
 with incompatible tag 
Discriminator
DIE has 
clang::reinitializes
__builtin_arm_mve_vqrshlq_m_s8
-fprofile-instrument=
clang::release_shared_capability
at90pwm316
clang::preserve_all
 and the compile unit has no line table
clang::unlock_function
atmega32u4
__builtin_arm_mve_vqrshrnbq_m_n_s16
 is invalid (must be less than CU size of 
clang::release_handle
.debug_line[
Ensure that all functions can be hotpatched at runtime
. Offset is in between DIEs:
XDim
__builtin_arm_mve_vqshlq_m_n_s16
-miphoneos-version-min=
ZDim
at94k
__builtin_arm_mve_vqshlq_m_r_s8
] has invalid file index 
clang::exclusive_locks_required
Section is too small to fit a section header.
m3000
clang::enforce_read_only_placement
clang::shared_locks_required
Unsupported form: failed to read HashData.
__builtin_arm_mve_vqshlq_r_s16
__regcall
<NULL>
Specify the profile path in PGO use compilation
gnu::malloc
none,clang,llvm,csllvm
gnu::retain
__builtin_arm_mve_vqshlq_s8
gnu::regparm
 of DIE[
Name Index @ {0:x} references a CU @ {1:x}, but this CU is already indexed by Name Index @ {2:x}
__builtin_arm_mve_vqshluq_n_s32
__builtin_arm_mve_vqshrnbq_m_n_u16
avr51
clang::release_capability
Name Index @ {0:x}: Bucket {1} is not empty but points to a mismatched hash value {2:x} (belonging to bucket {3}).
atmega1280
__builtin_arm_mve_vqshrntq_n_u16
NameIndex @ {0:x}: Abbreviation {1:x}: DW_IDX_type_hash uses an unexpected form {2} (should be {3}).
clang::release_generic_capability
clang::sycl_kernel
__builtin_arm_mve_vqshrunbq_n_s16
__builtin_arm_mve_vreinterpretq_f16_u32
reference
clang::sycl_special_class
NameIndex @ {0:x}: Abbreviation {1:x} references an unknown tag: {2}.
DW_SECT_LINE
release_handle
atmega1284p
reqd_work_group_size
clang::requires_shared_capability
clang::scoped_lockable
__builtin_arm_mve_vqsubq_m_u32
NameIndex @ {0:x}: Abbreviation {1:x} has no {2} attribute.
gnu::section
__builtin_arm_mve_vqsubq_m_s16
__builtin_arm_mve_vreinterpretq_s16_s8
Filename defining the list of functions/files to instrument
selectany
-fms-kernel
Name Index @ {0:x}: Name {1} ({2}) is not associated with any entries.
sentinel
Equivalent to -march=mips32r2
Invalid section index
__builtin_arm_mve_vreinterpretq_s64_s16
gnu::returns_twice
speculative_load_hardening
__builtin_arm_mve_vreinterpretq_s8_u16
atmega2561
sycl_kernel
load commands extend past the end of the file
load command 
-fprofile-list=
Equivalent to -march=mips2
__builtin_arm_mve_vreinterpretq_u16_u8
__builtin_arm_mve_vreinterpretq_u64_u16
__builtin_arm_mve_vreinterpretq_u8_f32
__builtin_arm_mve_vrev32q_s16
__builtin_arm_mve_vrndpq_x_f32
__builtin_arm_mve_vrshlq_s32
gnu::stdcall
LC_DATA_IN_CODE
split info data
atmega2564rfr2
sycl_special_class
section
_stdcall
-filelist
strict_gs_check
-fno-max-type-align
gsl::suppress
function starts data
code signing RDs data
Mach-O 32-bit unknown
CompletionHandlerIndex
LC_CODE_SIGNATURE
LC_UUID command 
gnu::sentinel
DW_SECT_LOCLISTS
attiny4
__builtin_arm_mve_vrev32q_x_u8
NullPos
LC_LOAD_DYLIB
Equivalent to -march=mips32r5
attiny20
LC_REEXPORT_DYLIB
Convention
__builtin_arm_mve_vrev64q_m_u16
NewState
LC_LOAD_UPWARD_DYLIB
swift_async_name
LC_VERSION_MIN_MACOSX
__builtin_arm_mve_vrev64q_u8
__builtin_arm_mve_vrev64q_x_s32
Attribute
LC_VERSION_MIN_WATCHOS
clang::standalone_debug
more than one LC_SOURCE_VERSION command
SwiftType
attiny102
__builtin_arm_mve_vrhaddq_s32
-fprofile-sample-accurate
swiftcall
LC_ENCRYPTION_INFO
LC_ENCRYPTION_INFO_64 command 
__stdcall
swift_context
 LC_SUB_UMBRELLA cmdsize too small
clang::swift_async
LC_ENCRYPTION_INFO command 
swift_error_result
 LC_SUB_LIBRARY cmdsize too small
atxmega16a4u
__builtin_arm_mve_vrmulhq_m_s32
swift_indirect_result
sub_umbrella
swift_async_context
clang::swift_async_error
swift_name
LC_ROUTINES_64 command 
__builtin_arm_mve_vrmulhq_x_u8
HandlerParamIdx
more than one LC_UNIXTHREAD command
LC_THREAD
atxmega32a4u
-fprofile-reusedist
symbol_metadata_footnote
LC_BUILD_VERSION and some LC_VERSION_MIN load command also found
swift_attr
MH_SIM_SUPPORT files only support LC_BUILD_VERSION and LC_VERSION_MIN_MACOSX load commands
Section
__builtin_arm_mve_vrndnq_m_f32
ilocalsym plus nlocalsym in LC_DYSYMTAB load command extends past the end of the symbol table
-fprofile-sample-use=
sysv_abi
DW_SECT_STR_OFFSETS
swift_bridged_typedef
no LC_ID_DYLIB load command in dynamic library filetype
tls_model
atxmega32c4
__builtin_arm_mve_vrndxq_f32
clang::swiftcall
bad library ordinal: 
__swift_ast
__builtin_arm_mve_vrndxq_x_f32
bad string index: 
featuresStr
GENERIC_RELOC_PAIR
GENERIC_RELOC_SECTDIFF
clang::swift_context
gnu::target_clones
atmega1284rfr2
DW_SECT_ABBREV
clang::swift_indirect_result
Unknown
__builtin_arm_mve_vrshlq_n_u16
__builtin_arm_mve_vrshrnbq_n_s32
swift_private
X86_64_RELOC_TLV
ARM_RELOC_PAIR
Equivalent to -march=mips5
ARM_RELOC_VANILLA
__thiscall
ARM_RELOC_PB_LA_PTR
clang::symbol_metadata_footnote
-fprofile-sample-use
transparent_stepping
__builtin_arm_mve_vreinterpretq_f32_u16
Equivalent to -march=mips32r3
ARM_RELOC_HALF_SECTDIFF
transparent_union
ARM64_RELOC_UNSIGNED
gnu::sysv_abi
__builtin_arm_mve_vrshrq_m_n_u8
trivial_abi
ARM64_RELOC_PAGEOFF12
atxmega64b1
gnu::tls_model
ARM64_RELOC_PAGE21
ARM64_RELOC_POINTER_TO_GOT
Equivalent to -march=mips64r2
__builtin_arm_mve_vsetq_lane_s32
_Nullable_result
atxmega64a3u
atxmega64c3
iextdefsym in LC_DYSYMTAB load command extends past the end of the symbol table
gnu::target
MatchingCType
Enable sample-based profile guided optimizations
PPC_RELOC_BR24
MustBeNull
PPC_RELOC_HI16
__builtin_arm_mve_vshlcq_u16
__builtin_arm_mve_vshllbq_m_n_s8
gnu::thiscall
Visibility
PPC_RELOC_JBSR
Partition functions into N groups using -fprofile-function-groups and select only functions in group i to be instrumented. The valid range is 0 to N-1 inclusive
clang::typed_memory_operation
__builtin_arm_mve_vreinterpretq_s16_f16
__builtin_arm_mve_vreinterpretq_u32_u64
clang::transparent_stepping
Mach-O 32-bit ppc
atxmega128a3
-fno-merge-all-constants
clang::unavailable
Mach-O 64-bit unknown
gnu::transparent_union
Mach-O 64-bit ppc64
unlikely
x86_64h-apple-darwin
__builtin_arm_mve_vshlq_n_u16
__builtin_arm_mve_vshlq_r_s32
unsafe_buffer_usage
LC_FUNCTION_STARTS
LC_DYLIB_CODE_SIGN_DRS
clang::try_acquire_shared_capability
armv6-apple-darwin
gnu::unused
getSymbolIndex() called with no symbol table symbol
__builtin_arm_mve_vshlq_x_n_s32
cortex-m0
scoped_lockable
_thiscall
clang::use_handle
cortex-m3
using_if_exists
atxmega128b3
__builtin_arm_mve_vshrnbq_n_s32
-fprofile-update=
clang::type_visibility
Guid
__builtin_arm_mve_vshrntq_m_n_s32
arm64e-apple-darwin
AddressDiscrimination
 in flags: 0x
-fms-omit-default-lib
__uptr
CustomDiscriminationValue
DW_SECT_TYPES
__builtin_arm_mve_vsliq_m_n_u16
clang::uninitialized
 starts past end of trie data
Equivalent to -march=mips64
atxmega192c3
resolver of stub and resolver 
clang::vectorcall
__builtin_arm_mve_vsliq_n_u8
clang::unlikely
inconsistent export info size: 0x
_vectorcall
 for child #
__builtin_arm_mve_vsriq_n_s32
__builtin_arm_mve_vsriq_n_u8
gnu::vector_size
 back to node: 0x
use_handle
out of range bind ordinal 
gnu::visibility
atxmega256a3
warn_unused
<method>
gnu::warn_unused
__builtin_arm_mve_vst1q_s32
 for opcode at: 0x
gnu::used
warn_unused_result
for REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB 
clang::ptrauth_vtable_pointer
for REBASE_OPCODE_SET_TYPE_IMM bad bind type: 
gnu::weak
for BIND_OPCODE_SET_DYLIB_ORDINAL_IMM bad library ordinal: 
atxmega256c3
__builtin_arm_mve_vstrbq_scatter_offset_p_s8
clang::weak_import
BIND_OPCODE_SET_DYLIB_ORDINAL_IMM not allowed in weak bind table for opcode at: 0x
restrict
vecreturn
TypeHint
gnu::weakref
__builtin_arm_mve_vstrdq_scatter_base_u64
__vectorcall
for BIND_OPCODE_DO_BIND missing preceding BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM for opcode at: 0x
for BIND_OPCODE_DO_BIND missing preceding BIND_OPCODE_SET_DYLIB_ORDINAL_* for opcode at: 0x
atxmega128a1
Set update method of profile counters
import_module
for BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB missing preceding BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM for opcode at: 0x
vector_size
for BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB 
ImportModule
BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED not allowed in lazy bind table for opcode at: 0x
__builtin_arm_mve_vstrhq_p_s32
-fprofile-use=
clang::import_name
__builtin_arm_mve_vstrhq_s32
-fms-runtime-lib=
for BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB  (count value) 
work_group_size_hint
atxmega128a1u
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_f16
clang::warn_unused_result
for BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB missing preceding BIND_OPCODE_SET_DYLIB_ORDINAL_* for opcode at: 0x
for BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB 
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_u32
for BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB 
clang::xray_always_instrument
for BIND_SUBOPCODE_THREADED_APPLY for opcode at: 0x
 bad segOffset, not 8-byte aligned
gnu::warn_unused_result
clang::xray_never_instrument
 in pointer: 0x
avrxmega3
weakref
 bad ordinal: 0x
__builtin_arm_mve_vstrwq_scatter_base_s32
__builtin_arm_mve_vstrwq_u32
ExportName
bad chained fixups: unknown version: 
bad chained fixups: image starts offset 
Link the given bitcode file before performing optimizations.
bad chained fixups: unknown imports format: 
gnu::zero_call_used_regs
 extends past end 
clang::import_module
ZeroCallUsedRegs
global variables
__builtin_arm_mve_vsubq_m_u16
import_name
 bad library ordinal: 
functions
 page size 
__builtin_arm_mve_vsubq_n_u16
__builtin_arm_mve_vsubq_s32
functions, typedefs, and parameters
attiny402
force_align_arg_pointer
 chain_start index 
functions and global variables
attiny406
__builtin_arm_mve_vsubq_x_n_u16
 extends past end of file
xray_always_instrument
non-K&R-style functions
__builtin_arm_mve_vsubq_x_s32
pointer format 
functions and statements
xray_never_instrument
attiny416
functions and function pointers
__builtin_arm_mve_vuninitializedq_polymorphic_s8
__builtin_arm_mve_vuninitializedq_polymorphic_u8
Unrecognized MachO magic number
__swift5_reflstr
__swift5_proto
Semantics...
Objective-C methods and functions
__swift5_mpenum
__builtin_arm_mve_vaddvq
 with size less than 8 bytes
named declarations
__builtin_arm_mve_vaddq_x
structs, variables, functions, and namespaces
more than one LC_SYMTAB command
variables, functions, structs, unions, classes, non-static data members, and typedefs
symoff field of LC_SYMTAB command 
attiny816
non-static data members and global variables
LC_SYMTAB command 
struct nlist
__builtin_arm_mve_vcaddq_rot90_x
__builtin_arm_mve_vclzq_m
Objective-C methods, functions, and function pointers
attiny807
bad chained fixups: import #
stroff field plus strsize field of LC_SYMTAB command 
variables and typedefs
parameters, Objective-C methods, and functions
__builtin_arm_mve_vcmpcsq
 with a size of 
functions and classes
 LC_DYSYMTAB cmdsize too small
__builtin_arm_mve_vcmpgeq_m
, overlaps 
non-static data members and variables
atmega1608
functions, Objective-C methods, and Objective-C properties
Determines whether the optimizer honors parentheses when floating-point expressions are evaluated
functions, Objective-C methods, and global variables
__builtin_arm_mve_vsubq_m_n_u8
tocoff field plus ntoc field times sizeof(struct dylib_table_of_contents) of LC_DYSYMTAB command 
inline functions
struct dylib_module
modtaboff field plus nmodtab field times sizeof(
indirectsymoff field plus nindirectsyms field times sizeof(uint32_t) of LC_DYSYMTAB command 
__builtin_arm_mve_vdupq_m
Objective-C interfaces
Objective-C methods and non-K&R-style functions
atmega4809
table of contents
parameters
structs
-fprotect-parens
 command
parameters and global variables
attiny1604
__builtin_arm_mve_vfmsq_m
 command 
parameters and implicit object parameters
rebase_off field of 
rebase_off field plus rebase_size field of 
attiny1606
variables, enums, typedefs, and non-static data members
weak_bind_off field of 
functions, variables, classes, and Objective-C interfaces
dyld bind info
Objective-C methods
lazy_bind_off field of 
lazy_bind_off field plus lazy_bind_size field of 
__builtin_arm_mve_viwdupq_u8
non-bit-field non-static data members
dyld lazy bind info
export_off field of 
attiny1616
non-static member functions
more than one LC_ID_DYLIB command
attiny1617
Objective-C methods, blocks, and non-K&R-style functions
Objective-C implementation declarations, Objective-C interfaces, and Objective-C containers
-fno-modules-decluse
__builtin_arm_mve_vmaxavq_p
cbuffer/tbuffer and external global variables
offset field of LC_NOTE command 
size field plus offset field of LC_NOTE command 
attiny1627
-mlong-double-64
Objective-C methods and Objective-C properties
the LC_BUILD_VERSION, command 
attiny3216
more than two LC_BUILD_VERSION load commands
Objective-C instance methods
Objective-C properties
-mlong-double-80
 LC_RPATH path.offset field extends past the end of the load command
'for', 'while', and 'do' statements
more than one LC_ENCRYPTION_INFO and or LC_ENCRYPTION_INFO_64 command
__builtin_arm_mve_vminvq_p
 LC_RPATH library name extends past the end of the load command
non-static non-const member functions
/usr/lib/avr
variables with non-local storage, functions, and Objective-C methods
Pointer Authentication ABI version
functions and parameters
__builtin_arm_mve_vmlasq_m
../lib/clang-runtimes
functions, Objective-C methods, Objective-C properties, and parameters
 name extends past the end of the load command
 count not x86_THREAD_STATE32_COUNT for flavor number 
-mlongcall
__builtin_arm_mve_vmlsldavaxq_p
functions, methods, and parameters
functions, Objective-C methods, Objective-C interfaces, and Objective-C properties
-lunwind
.offset field extends past the end of the load command
Objective-C protocols
variables, non-static data members, types, enums, enumerators, labels, non-static data members, Objective-C methods, functions, and function pointers
-fptrauth-abi-version=
 x86_FLOAT_STATE extends past end of command in 
structs, unions, classes, and enums
 count not x86_EXCEPTION_STATE_COUNT for flavor number 
 which is a x86_EXCEPTION_STATE flavor in 
Objective-C interfaces and Objective-C protocols
variables and functions
 count not x86_EXCEPTION_STATE64_COUNT for flavor number 
class templates
 x86_EXCEPTION_STATE64 extends past end of command in 
:auto
 which is a ARM_THREAD_STATE flavor in 
+march=rv64imafdc
 count not ARM_THREAD_STATE_COUNT for flavor number 
__int128_t
 count not ARM_EXCEPTION_STATE64_COUNT for flavor number 
Do not automatically import modules for error recovery
Enable traps on authentication failures
 ARM_EXCEPTION_STATE64 extends past end of command in 
tag types, typedefs, Objective-C interfaces, and Objective-C protocols
 PPC_THREAD_STATE extends past end of command in 
Protocol
rv64imafdc
__builtin_arm_mve_vqdmulhq_m
 for 
type_info
 LC_TWOLEVEL_HINTS has incorrect cmdsize
__builtin_arm_mve_vqdmulltq_m
 command can't be checked
sampler_t
offset field plus nhints times sizeof(struct twolevel_hint) field of LC_TWOLEVEL_HINTS command 
two level hints
named declarations, types, and value declarations
clk_event_t
__builtin_arm_mve_vqdmladhq_m
.offset field too small, not past the end of the 
 inconsistent cmdsize in 
reserve_id_t
 for the number of sections
lp64d
__builtin_arm_mve_vqrdmladhq_m
atomic_uint
addr field of section 
__uint128_t
 greater than the segment
atomic_flag
__builtin_arm_mve_vqshluq
 greater than than the segment's vmaddr plus vmsize
enable signing block descriptors
atomic_double
section contents
+mabi=ilp32
 filesize field in 
atomic_ulong
 greater than vmsize field
__builtin_arm_mve_vreinterpretq_u8
File too small to be a Mach-O universal file
__builtin_va_list
__builtin_arm_mve_vldrbq_gather_offset
__builtin_arm_mve_vrev32q
contains zero architecture types
*** Semantic Analysis Stats:
 structs would extend past the end of the file
+march=rv32i
queue_t
nullptr
__builtin_arm_mve_vrmlaldavhaxq
__builtin_arm_mve_vrmlaldavhxq
atomic_int
) too large for cputype (
) (maximum 2^
 overlaps universal headers
-fmsc-version=
/**<
) cpusubtype (
__builtin_arm_mve_vrndq
atomic_long
fat file does not contain 
truncated or malformed fat file (
/rv32imafc/ilp32f
Enable signing and authentication of all indirect calls
atomic_size_t
Unexpected EOF
__builtin_arm_mve_vrshrq_x
invalid e_shentsize in ELF header: 
atomic_uintptr_t
) or invalid number of sections specified in the first section header's sh_size field (0x
+mabi=ilp32f
__imp_
expression
+march=rv32imafc
__builtin_arm_mve_vshlq_m
: relocations with offset 0x
array
 in a string table with size 0x
rv32im
///<
deque
-mmcu=
__builtin_arm_mve_vsriq
 goes past the end of the file
list
csect symbol "
__builtin_arm_mve_vstrbq_scatter_offset
__builtin_arm_mve_vstrdq_scatter_shifted_offset
multiset
: section data with offset 0x
rv32iac
i386
priority_queue
Specify the output file type ('asm', 'null', or 'obj')
queue
x86_64h
stack
armv4t
rv32imac
armv7em
unordered_map
Write a depfile containing user headers
forward_list
march=rv32iac
unordered_multimap
armv6
[(empty)]
reverse_iterator
file: 
Enable generation of memop instructions
compatibility versions do not match
basic_regex
two level namespace flags do not match
Allow device side init function in HIP (experimental)
swift ABI versions do not match
basic_string_view
ilp32f
mabi=ilp32f
targets
regex_iterator
min_deployment
unordered_multiset
swift_abi
vtordisp
mabi=ilp32
__builtin_arm_cde_vcx2q_s64
Enable signing and authentication of indirect goto targets
const_reverse_iterator
alloc_text
-fptrauth-indirect-gotos
clients
function
reexported_symbols
unique_ptr
reference_wrapper
CF_OPTIONS
-mmlir
__builtin_arm_cde_vcx2qa_impl_u64
allowable_clients
OBJC_OPTIONS
flat_namespace
__builtin_arm_cde_vcx2qa_m_impl_u16
-fno-modules-share-filemanager
<API Notes>
__builtin_arm_cde_vcx3q_impl_s64
optimize
xrOS Simulator
load
unknown
-internal-isystem
watchOS
API_AVAILABLE(
macCatalyst
NS_OPTIONS
openmp_wrappers
init
bridgeOS
Enable pointer-authentication intrinsics
if (
watchos
__builtin_arm_cde_vcx3qa_m_impl_u64
z/OS
xros-simulator
ios-simulator
-pch-through-hdrstop-
watchos-simulator
} else {
-apple-
// Fallback on earlier versions
vector element
-fptrauth-kernel-abi-version
exports
__AVR__
__AVR_TINY__
__flash1
__attribute__((address_space(2)))
__flash3
    
__flash5
__attribute__((address_space(6)))
__AVR_AT90S1200__
__builtin_frame_address
__AVR_AT90S2313__
__AVR_AT90S2323__
__AVR_ATtiny22__
__AVR_AT90S4433__
__AVR_AT90S4434__
Set the default structure layout to be compatible with the Microsoft compiler standard
__AVR_ATtiny13A__
__AVR_ATtiny2313__
__AVR_ATtiny24A__
isa-v31-instructions
__AVR_ATtiny84__
__AVR_ATtiny84A__
__AVR_ATtiny45__
isa-v30-instructions
__AVR_ATtiny461__
__AVR_ATtiny461A__
__AVR_ATtiny861A__
power9-vector
__AVR_ATtiny88__
__AVR_ATtiny828__
Enable MSA ASE (MIPS only)
isa-v206-instructions
__AVR_AT90USB162__
__AVR_ATA5505__
__AVR_ATmega8U2__
vW256SLiW256*
__AVR_ATmega8__
__AVR_ATA6289__
__AVR_ATA6285__
vv*W256*
__AVR_ATmega48PA__
__AVR_ATmega48PB__
__AVR_ATmega88A__
vv*W512*
__AVR_ATmega8515__
__AVR_ATmega8535__
Enable signing and authentication for ObjC class_ro pointers
vW512*VV
__AVR_AT90PWM81__
__AVR_ATA5702M322__
__AVR_ATA5790N__
vW512*VVi15i15i255
__AVR_ATA6613C__
__AVR_ATA6614Q__
__AVR_ATA8510__
vW512*VVi15i15i3
__AVR_ATmega163__
__AVR_ATmega164A__
__AVR_ATmega165__
vW512*W256Vi15i3
__AVR_ATmega168__
__AVR_ATmega168A__
-mmutable-globals
RV64
__AVR_ATmega169PA__
__AVR_ATmega32__
__AVR_ATmega324A__
'this'
__AVR_ATmega325__
__AVR_ATmega325A__
__AVR_ATmega325PA__
half
__AVR_ATmega328__
__AVR_ATmega328P__
__AVR_ATmega329A__
second
__AVR_ATmega3290A__
__AVR_ATmega3290P__
Enable signing and authentication of Objective-C object's 'SEL' fields
daifset
__AVR_ATmega644A__
__AVR_ATmega644P__
__AVR_ATmega645A__
__AVR_ATmega649P__
__AVR_ATmega6450__
__AVR_ATmega6450P__
paired-vector-memops
__AVR_ATmega644RFR2__
__AVR_ATmega16HVA__
__AVR_ATmega16HVBREVB__
kprintf
__AVR_ATmega64HVE2__
__AVR_AT90CAN32__
-mnan=
vcmn_err
__AVR_ATmega16M1__
__AVR_ATmega32M1__
__AVR_ATmega32U4__
freebsd_kprintf
__AVR_AT90SCR100__
__AVR_AT94K__
__AVR_ATmega128__
os_log
__AVR_ATmega1284P__
__AVR_ATmega128RFA1__
__AVR_AT90CAN128__
__AVR_ATmega2561__
std::abs
pre- and post-authentication masking mode of objective-c isa pointers
__AVR_ATxmega32A4U__
__AVR_ATxmega32C3__
__AVR_ATxmega32D4__
) - 
__AVR_ATxmega64A3__
__AVR_ATxmega64A3U__
__AVR_ATxmega64B1__
) - 1
__AVR_ATxmega64A1__
__AVR_ATxmega64A1U__
__AVR_ATxmega128B1__
release
__AVR_ATxmega128D4__
__AVR_ATxmega192A3__
-mno-abicalls
__AVR_ATxmega256A3BU__
__AVR_ATxmega256C3__
__AVR_ATxmega384D3__
%s%s
__AVR_ATtiny4__
__AVR_ATtiny5__
__AVR_ATtiny10__
__AVR_ATtiny202__
__AVR_ATtiny402__
__AVR_ATtiny804__
: %zu 
__AVR_ATtiny1606__
__AVR_ATtiny807__
Authentication mode for ObjC isa field. Full auth if unspecified
__AVR_ATtiny1614__
__AVR_ATtiny416__
__AVR_ATtiny3216__
%hhu
__AVR_ATtiny3217__
__AVR_ATtiny1624__
__AVR_ATtiny1627__
__AVR_ATmega3208__
-fno-ms-extensions
sensitive
never
__builtin_btf_type_id
__builtin_preserve_type_info
__builtin_preserve_enum_value
-mno-amdgpu-ieee
.cv_filechecksumoffset
__ckcore__
__CKCORE__
__cskyLE__
__CSKY_DSPV2__
__CSKY_VDSP64__
streaming compatible
localizedStringForKey
fr10
fr12
table
fr17
fr18
fr21
fr25
fr26
fr28
NSUInteger
-mno-amx-tile
.c_str()
cmath
vr10
vr12
vr17
vr18
vr21
'std::strong_ordering::equal'
-flat_namespace
'std::strong_ordering::less'
-fptrauth-returns
'std::strong_ordering::greater'
Enable signing and authentication of return addresses
hexagonv5
__HEXAGON_ARCH__
hexagonv55
__HEXAGON_V55__
hexagonv60
hexagonv62
__HEXAGON_V62__
__HEXAGON_V65__
operator
hexagonv67
else if
hexagonv69
hvx-length64b
template
hvx-length128b
__HVXDBL__
__HEXAGON_AUDIO__
delete[]
r3:2
r5:4
r11:10
r19:18
r21:20
-mno-avx512cd
-mno-avx512er
c9:8
c11:10
c17:16
c25:24
c27:26
c31:30
p3:0
framekey
pktcountlo
-fptrauth-vtable-pointer-address-discrimination
v1:0
v3:2
v9:8
v17:16
v19:18
v23:22
method
v3:0
v7:4
v19:16
sender
__builtin_SI_to_SXTHI_asrh
v5|v55|v60|v62|v65|v66|v67|v68|v69
-mno-avx512pf
ifdef
__builtin_brev_lduh
v*Us*CUs*iC
__builtin_brev_ldub
ifndef
__builtin_circ_ldw
i*i*i*iIi
s*s*s*iIi
elifdef
__builtin_circ_ldub
Uc*Uc*Uc*iIi
__builtin_brev_stw
endif
__builtin_brev_sthhi
header
-fptrauth-vtable-pointer-type-discrimination
args
s*s*iiIi
__builtin_circ_sthhi
__builtin_HEXAGON_L2_loadrub_pci
number
__builtin_HEXAGON_L2_loadrh_pci
__builtin_HEXAGON_L2_loadri_pci
LLiv*IiivC*
pragma
__builtin_HEXAGON_L2_loadrh_pcr
__builtin_HEXAGON_L2_loadri_pcr
__builtin_HEXAGON_S2_storerb_pci
defined
__builtin_HEXAGON_S2_storeri_pci
__builtin_HEXAGON_S2_storerd_pci
-mno-avx512vnni
operator+
__builtin_HEXAGON_S2_storerd_pcr
vv*iLLivC*
LLiLLiLLi
operator*
hvxv60|hvxv62|hvxv65|hvxv66|hvxv67|hvxv68|hvxv69
__builtin_HEXAGON_V6_vmaskedstorenq
__builtin_HEXAGON_V6_vmaskedstorentnq
operator%
__builtin_HEXAGON_V6_vmaskedstorentnq_128B
__builtin_HEXAGON_V6_vrmpybub_rtt
__builtin_HEXAGON_V6_vrmpybub_rtt_128B
operator&
__builtin_HEXAGON_V6_vrmpybub_rtt_acc_128B
V64iV64iV32iLLi
operator~
LLiLLi
__builtin_HEXAGON_A2_abssat
__builtin_HEXAGON_A2_addh_h16_hl
operator=
__builtin_HEXAGON_A2_addh_h16_sat_hl
__builtin_HEXAGON_A2_addh_h16_sat_lh
__builtin_HEXAGON_A2_addh_l16_hl
operator>
__builtin_HEXAGON_A2_addp
__builtin_HEXAGON_A2_addpsat
LLiiLLi
operator-=
__builtin_HEXAGON_A2_aslh
__builtin_HEXAGON_A2_asrh
-mno-avx
operator/=
__builtin_HEXAGON_A2_combinew
LLiii
__builtin_HEXAGON_A2_maxu
operator^=
__builtin_HEXAGON_A2_min
__builtin_HEXAGON_A2_minp
__builtin_HEXAGON_A2_minup
operator|=
__builtin_HEXAGON_A2_notp
__builtin_HEXAGON_A2_or
__builtin_HEXAGON_A2_roundsat
operator>>
__builtin_HEXAGON_A2_sath
operator<<=
-framework
operator>>=
__builtin_HEXAGON_A2_subh_h16_sat_hh
__builtin_HEXAGON_A2_subh_h16_sat_hl
__builtin_HEXAGON_A2_subh_l16_hl
operator!=
__builtin_HEXAGON_A2_subp
__builtin_HEXAGON_A2_subri
__builtin_HEXAGON_A2_subsat
operator>=
__builtin_HEXAGON_A2_svavghs
__builtin_HEXAGON_A2_svnavgh
__builtin_HEXAGON_A2_svsubuhs
operator&&
__builtin_HEXAGON_A2_sxtw
__builtin_HEXAGON_A2_tfr
-mno-branch-likely
operator++
__builtin_HEXAGON_A2_tfrsi
__builtin_HEXAGON_A2_vabsw
operator,
__builtin_HEXAGON_A2_vaddhs
__builtin_HEXAGON_A2_vaddub
__builtin_HEXAGON_A2_vadduhs
operator->
__builtin_HEXAGON_A2_vavghr
__builtin_HEXAGON_A2_vavgub
__builtin_HEXAGON_A2_vavguhr
operator new
__builtin_HEXAGON_A2_vavgwcr
__builtin_HEXAGON_A2_vavgwr
-frandomize-layout-seed-file=
operator new[]
__builtin_HEXAGON_A2_vcmpweq
__builtin_HEXAGON_A2_vcmpwgt
__builtin_HEXAGON_A2_vmaxb
operator()
__builtin_HEXAGON_A2_vmaxuw
__builtin_HEXAGON_A2_vmaxw
__builtin_HEXAGON_A2_vminh
template<...> class
__builtin_HEXAGON_A2_vnavgh
__builtin_HEXAGON_A2_vnavghcr
__builtin_HEXAGON_A2_vnavgwcr
 restrict
LLiLLiLLiLLi
__builtin_HEXAGON_A2_vrsadub
-mno-check-zero-division
(void)
__builtin_HEXAGON_A2_vsubuhs
__builtin_HEXAGON_A2_vsubw
__builtin_HEXAGON_A2_xorp
inout 
__builtin_HEXAGON_A4_andnp
__builtin_HEXAGON_A4_bitsplit
LLiiUIi
bycopy 
__builtin_HEXAGON_A4_cmpbgt
__builtin_HEXAGON_A4_cmpbgti
__builtin_HEXAGON_A4_cmpheq
oneway 
__builtin_HEXAGON_A4_cmphgti
nonnull 
-frandomize-layout-seed=
nullable 
__builtin_HEXAGON_A4_modwrapu
__builtin_HEXAGON_A4_orn
__builtin_HEXAGON_A4_rcmpeqi
, nil
__builtin_HEXAGON_A4_round_ri_sat
__builtin_HEXAGON_A4_round_rr
__builtin_HEXAGON_A4_tlbmatch
, (void*)0
__builtin_HEXAGON_A4_vcmpbgt
__builtin_HEXAGON_A4_vcmpbgti
__builtin_HEXAGON_A4_vcmpheqi
identifier
__builtin_HEXAGON_A4_vcmpwgti
__builtin_HEXAGON_A4_vcmpwgtui
-mno-clzero
using namespace
__builtin_HEXAGON_A4_vrminuh
__builtin_HEXAGON_A4_vrminuw
__builtin_HEXAGON_C2_all8
declaration
__builtin_HEXAGON_C2_bitsclr
__builtin_HEXAGON_C2_bitsclri
__builtin_HEXAGON_C2_cmpeq
qualifier
__builtin_HEXAGON_C2_cmpgt
__builtin_HEXAGON_C2_cmpgti
__builtin_HEXAGON_C2_cmpgtui
catch
__builtin_HEXAGON_C2_mask
__builtin_HEXAGON_C2_mux
<seed>
init-statement
__builtin_HEXAGON_C2_not
__builtin_HEXAGON_C2_or
__builtin_HEXAGON_C2_tfrpr
inc-expression
LLiiLLiLLi
__builtin_HEXAGON_C2_xor
__builtin_HEXAGON_C4_and_andn
range-expression
__builtin_HEXAGON_C4_cmplteu
__builtin_HEXAGON_C4_cmplteui
__builtin_HEXAGON_C4_fastcorner9
return false
__builtin_HEXAGON_C4_nbitsset
__builtin_HEXAGON_C4_or_and
-mno-constant-cfstrings
label
fLLi
__builtin_HEXAGON_F2_conv_df2d
__builtin_HEXAGON_F2_conv_df2sf
__bridge_transfer
__builtin_HEXAGON_F2_conv_df2uw_chop
__builtin_HEXAGON_F2_conv_df2w
__builtin_HEXAGON_F2_conv_sf2d
CF type
__builtin_HEXAGON_F2_conv_sf2ud
__builtin_HEXAGON_F2_conv_sf2ud_chop
__builtin_HEXAGON_F2_conv_sf2w
typeid
__builtin_HEXAGON_F2_conv_uw2df
expression-or-type
-freal-4-real-10
expressions
__builtin_HEXAGON_F2_dfcmpge
__builtin_HEXAGON_F2_dfcmpgt
dUIi
void
ifUIi
__builtin_HEXAGON_F2_sfcmpeq
__builtin_HEXAGON_F2_sfcmpge
alignof
__builtin_HEXAGON_F2_sffixupr
__builtin_HEXAGON_F2_sffma
ffffi
parameter-pack
fUIi
__builtin_HEXAGON_F2_sfimm_p
-mno-crc32
_Alignof
__builtin_HEXAGON_M2_cmaci_s0
LLiLLiii
__builtin_HEXAGON_M2_cmacs_s1
typedef
__builtin_HEXAGON_M2_cmpyr_s0
__builtin_HEXAGON_M2_cmpyrs_s0
__builtin_HEXAGON_M2_cmpyrsc_s0
constexpr
__builtin_HEXAGON_M2_cmpysc_s1
__builtin_HEXAGON_M2_cnacs_s0
__builtin_HEXAGON_M2_cnacsc_s1
friend
__builtin_HEXAGON_M2_dpmpyss_s0
__builtin_HEXAGON_M2_dpmpyuu_acc_s0
-freal-4-real-8
inline
__builtin_HEXAGON_M2_hmmpyl_s1
__builtin_HEXAGON_M2_maci
__builtin_HEXAGON_M2_macsip
__FUNCTION__
__builtin_HEXAGON_M2_mmachs_s1
__builtin_HEXAGON_M2_mmacls_rs0
__builtin_HEXAGON_M2_mmacls_s0
!#!NAME_GOES_HERE!#!
__builtin_HEXAGON_M2_mmacuhs_s1
__builtin_HEXAGON_M2_mmaculs_rs0
__builtin_HEXAGON_M2_mmaculs_s1
body
__builtin_HEXAGON_M2_mmpyh_s1
__builtin_HEXAGON_M2_mmpyl_rs0
-mno-cumode
long
__builtin_HEXAGON_M2_mmpyuh_s1
__builtin_HEXAGON_M2_mmpyul_rs0
__builtin_HEXAGON_M2_mmpyul_s1
unsigned
__builtin_HEXAGON_M2_mpy_acc_hl_s1
__builtin_HEXAGON_M2_mpy_acc_lh_s0
__builtin_HEXAGON_M2_mpy_acc_ll_s0
_Complex
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s1
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s0
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s1
wchar_t
__builtin_HEXAGON_M2_mpy_hl_s0
char16_t
-freal-8-real-16
char32_t
__builtin_HEXAGON_M2_mpy_nac_hl_s1
__builtin_HEXAGON_M2_mpy_nac_lh_s0
__builtin_HEXAGON_M2_mpy_nac_ll_s1
typeof
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s1
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s0
synthesize
__builtin_HEXAGON_M2_mpy_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_rnd_lh_s0
__builtin_HEXAGON_M2_mpy_rnd_ll_s1
@required
__builtin_HEXAGON_M2_mpy_sat_hl_s1
__builtin_HEXAGON_M2_mpy_sat_lh_s0
-mno-direct-move
@optional
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s1
protocol
__builtin_HEXAGON_M2_mpyd_acc_hh_s0
__builtin_HEXAGON_M2_mpyd_acc_hh_s1
__builtin_HEXAGON_M2_mpyd_acc_hl_s1
implementation
__builtin_HEXAGON_M2_mpyd_hh_s0
__builtin_HEXAGON_M2_mpyd_hh_s1
__builtin_HEXAGON_M2_mpyd_lh_s0
@import
__builtin_HEXAGON_M2_mpyd_nac_hh_s0
__builtin_HEXAGON_M2_mpyd_nac_hh_s1
-frealloc-lhs
@protected
__builtin_HEXAGON_M2_mpyd_rnd_hh_s0
__builtin_HEXAGON_M2_mpyd_rnd_hh_s1
__builtin_HEXAGON_M2_mpyd_rnd_lh_s0
@package
__builtin_HEXAGON_M2_mpyi
__builtin_HEXAGON_M2_mpysmi
__builtin_HEXAGON_M2_mpyu_acc_hh_s0
@catch
__builtin_HEXAGON_M2_mpyu_acc_lh_s1
__builtin_HEXAGON_M2_mpyu_acc_ll_s0
__builtin_HEXAGON_M2_mpyu_hh_s1
@throw
__builtin_HEXAGON_M2_mpyu_lh_s1
__builtin_HEXAGON_M2_mpyu_ll_s0
Do not place constants in the .rodata section instead of the .sdata if they meet the -G <size> threshold (MIPS)
char[]
__builtin_HEXAGON_M2_mpyu_nac_lh_s1
__builtin_HEXAGON_M2_mpyu_nac_ll_s0
__builtin_HEXAGON_M2_mpyud_acc_hh_s0
encode
__builtin_HEXAGON_M2_mpyud_acc_lh_s0
__builtin_HEXAGON_M2_mpyud_acc_lh_s1
__builtin_HEXAGON_M2_mpyud_acc_ll_s1
Protocol *
__builtin_HEXAGON_M2_mpyud_lh_s0
__builtin_HEXAGON_M2_mpyud_lh_s1
__builtin_HEXAGON_M2_mpyud_nac_hh_s0
NSString *
__builtin_HEXAGON_M2_mpyud_nac_lh_s0
Allow division operations to be reassociated
NSArray *
__builtin_HEXAGON_M2_vabsdiffh
__builtin_HEXAGON_M2_vabsdiffw
__builtin_HEXAGON_M2_vcmpy_s0_sat_i
objects, ...
__builtin_HEXAGON_M2_vdmacs_s0
__builtin_HEXAGON_M2_vdmacs_s1
__builtin_HEXAGON_M2_vdmpyrs_s1
__builtin_HEXAGON_M2_vmac2es_s0
__builtin_HEXAGON_M2_vmac2es_s1
__builtin_HEXAGON_M2_vmac2su_s0
object, ...
__builtin_HEXAGON_M2_vmpy2s_s0
__builtin_HEXAGON_M2_vmpy2s_s0pack
Allow generation of data access to code sections (ARM only)
autorelease
__builtin_HEXAGON_M2_vrcmaci_s0
__builtin_HEXAGON_M2_vrcmaci_s0c
__builtin_HEXAGON_M2_vrcmpyi_s0
alloc
__builtin_HEXAGON_M2_vrcmpys_acc_s1
__builtin_HEXAGON_M2_vrcmpys_s1
__builtin_HEXAGON_M2_vrcmpys_s1rp
__interface <anonymous>
__builtin_HEXAGON_M4_and_andn
__builtin_HEXAGON_M4_and_or
__builtin_HEXAGON_M4_cmpyi_whc
union <anonymous>
__builtin_HEXAGON_M4_mpyri_addi
iUIiiUIi
-frecord-gcc-switches
__builtin_HEXAGON_M4_nac_up_s1_sat
__builtin_HEXAGON_M4_or_and
__builtin_HEXAGON_M4_or_xor
NSMutableArray
__builtin_HEXAGON_M4_vpmpyh_acc
__builtin_HEXAGON_M4_vrmpyeh_acc_s0
__builtin_HEXAGON_M4_vrmpyeh_s0
NSMutableSet
__builtin_HEXAGON_M4_vrmpyoh_s1
__builtin_HEXAGON_M4_xor_and
__builtin_HEXAGON_M4_xor_xacc
countOf
__builtin_HEXAGON_M5_vmacbuu
__builtin_HEXAGON_M5_vmpybsu
-mno-f16c
AtIndex
__builtin_HEXAGON_S2_asl_i_p
LLiLLiUIi
__builtin_HEXAGON_S2_asl_i_p_and
NSIndexSet *
__builtin_HEXAGON_S2_asl_i_r
__builtin_HEXAGON_S2_asl_i_r_acc
__builtin_HEXAGON_S2_asl_i_r_nac
object-type
__builtin_HEXAGON_S2_asl_i_vw
__builtin_HEXAGON_S2_asl_r_p
__builtin_HEXAGON_S2_asl_r_p_nac
buffer
none,integer,all
range:
-frecovery-ast-type
NSRange
__builtin_HEXAGON_S2_asr_i_p_acc
__builtin_HEXAGON_S2_asr_i_p_and
__builtin_HEXAGON_S2_asr_i_p_rnd
insertObject
__builtin_HEXAGON_S2_asr_i_r_and
__builtin_HEXAGON_S2_asr_i_r_nac
__builtin_HEXAGON_S2_asr_i_r_rnd
object
__builtin_HEXAGON_S2_asr_r_p
__builtin_HEXAGON_S2_asr_r_p_acc
__builtin_HEXAGON_S2_asr_r_p_or
atIndexes
__builtin_HEXAGON_S2_asr_r_r_and
__builtin_HEXAGON_S2_asr_r_r_nac
Don't workaround Cortex-A53 erratum 835769 (AArch64 only)
removeObjectFrom
__builtin_HEXAGON_S2_brevp
__builtin_HEXAGON_S2_cl0
__builtin_HEXAGON_S2_cl1p
withObject
__builtin_HEXAGON_S2_clrbit_i
__builtin_HEXAGON_S2_clrbit_r
__builtin_HEXAGON_S2_ct0p
replace
iiUIiUIi
__builtin_HEXAGON_S2_extractu_rp
__builtin_HEXAGON_S2_extractup_rp
enumeratorOf
iiiLLi
__builtin_HEXAGON_S2_insertp
-frecovery-ast
memberOf
__builtin_HEXAGON_S2_lsl_r_p_and
__builtin_HEXAGON_S2_lsl_r_p_nac
__builtin_HEXAGON_S2_lsl_r_r
NSSet *
__builtin_HEXAGON_S2_lsl_r_r_or
__builtin_HEXAGON_S2_lsl_r_vh
__builtin_HEXAGON_S2_lsr_i_p
intersect
__builtin_HEXAGON_S2_lsr_i_p_xacc
__builtin_HEXAGON_S2_lsr_i_r
__builtin_HEXAGON_S2_lsr_i_r_nac
NSSet<NSString *> *
__builtin_HEXAGON_S2_lsr_i_vw
__builtin_HEXAGON_S2_lsr_r_p
Don't work around Cortex-A72 Erratum 1655431 (ARM only)
.inc
__builtin_HEXAGON_S2_lsr_r_r_acc
__builtin_HEXAGON_S2_lsr_r_r_and
__builtin_HEXAGON_S2_lsr_r_vh
initial_suspend
__builtin_HEXAGON_S2_setbit_i
__builtin_HEXAGON_S2_setbit_r
__builtin_HEXAGON_S2_shuffeh
co_await
__builtin_HEXAGON_S2_tableidxb_goodsyntax
__builtin_HEXAGON_S2_tableidxd_goodsyntax
__builtin_HEXAGON_S2_togglebit_i
co_yield
__builtin_HEXAGON_S2_valignib
yield_value
-frecursive
co_return
__builtin_HEXAGON_S2_vsathb_nopack
__builtin_HEXAGON_S2_vsathub
__builtin_HEXAGON_S2_vsatwh_nopack
return_void
__builtin_HEXAGON_S2_vsplatrh
__builtin_HEXAGON_S2_vspliceib
__builtin_HEXAGON_S2_vsxtbh
unhandled_exception
__builtin_HEXAGON_S2_vtrunowh
__builtin_HEXAGON_S2_vzxtbh
__builtin_HEXAGON_S4_addi_asl_ri
coroutine_traits
__builtin_HEXAGON_S4_clbaddi
__builtin_HEXAGON_S4_clbpaddi
-mno-fp-ret-in-387
promise_type
__builtin_HEXAGON_S4_ntstbit_i
__builtin_HEXAGON_S4_ntstbit_r
__builtin_HEXAGON_S4_or_ori
await_suspend
__builtin_HEXAGON_S4_subaddi
__builtin_HEXAGON_S4_subi_asl_ri
__builtin_HEXAGON_S4_vrcrotate
from_address
__builtin_HEXAGON_S4_vxaddsubhr
__builtin_HEXAGON_S4_vxaddsubw
__builtin_HEXAGON_S4_vxsubaddw
std::coroutine_handle
__builtin_HEXAGON_S5_vasrhrnd_goodsyntax
__builtin_HEXAGON_Y2_dccleana
Override the default ABI to return small structs in registers
hipConfigureCall
__builtin_HEXAGON_Y5_l2fetch
vv*LLi
__builtin_HEXAGON_S6_rol_i_p_acc
cudaConfigureCall
__builtin_HEXAGON_S6_rol_i_p_xacc
__builtin_HEXAGON_S6_rol_i_r
__builtin_HEXAGON_S6_rol_i_r_and
'ns_returns_retained'
__builtin_HEXAGON_M6_vabsdiffub
__builtin_HEXAGON_S6_vsplatrbp
__builtin_HEXAGON_A6_vcmpbeq_notany
global or constant
__builtin_HEXAGON_F2_dfsub
__builtin_HEXAGON_M2_mnaci
-mno-gfni
constexpr 
__builtin_HEXAGON_F2_dfmax
v67|v68|v69
__builtin_HEXAGON_F2_dfmpyhh
ntohl
__builtin_HEXAGON_M7_dcmpyiw_acc
__builtin_HEXAGON_M7_dcmpyiwc
__builtin_HEXAGON_M7_dcmpyrw
is_path_xcrun_shim
__builtin_HEXAGON_M7_vdmpy_acc
__builtin_HEXAGON_M7_wcmpyiw
__builtin_HEXAGON_M7_wcmpyiwc_rnd
os_variant_has_internal_diagnostic
__builtin_HEXAGON_M7_wcmpyrwc
os_variant_has_internal_diagnostics
Use atexit or __cxa_atexit to register global destructors
_NSGetExecutablePath
__builtin_HEXAGON_V6_extractw
iV16ii
__builtin_HEXAGON_V6_hi
H5T_patch_vlen_file
__builtin_HEXAGON_V6_lo
__builtin_HEXAGON_V6_lo_128B
V16ii
CGSGetDebugOptions
__builtin_HEXAGON_V6_pred_and_128B
V128bV128bV128b
__builtin_HEXAGON_V6_pred_not
thread_stack_pcs
__builtin_HEXAGON_V6_pred_or
__builtin_HEXAGON_V6_pred_or_128B
-mno-gpopt
inaddr6_loopback
__builtin_HEXAGON_V6_pred_xor
__builtin_HEXAGON_V6_pred_xor_128B
__builtin_HEXAGON_V6_vS32b_nt_nqpred_ai
NSString
__builtin_HEXAGON_V6_vS32b_qpred_ai
__builtin_HEXAGON_V6_vS32b_qpred_ai_128B
V16iV16iV16i
bad_alloc
__builtin_HEXAGON_V6_vabsdiffuh
__builtin_HEXAGON_V6_vabsdiffuh_128B
__builtin_HEXAGON_V6_vabsh
__type_descriptor_t
__builtin_HEXAGON_V6_vabsh_sat
__builtin_HEXAGON_V6_vabsh_sat_128B
-frelaxed-template-template-args
stdio.h
__builtin_HEXAGON_V6_vaddb_dv
__builtin_HEXAGON_V6_vaddb_dv_128B
V16iV64bV16iV16i
ucontext.h
__builtin_HEXAGON_V6_vaddbq_128B
__builtin_HEXAGON_V6_vaddh
__builtin_HEXAGON_V6_vaddh_dv
__attribute__((require_constant_initialization))
__builtin_HEXAGON_V6_vaddhq_128B
__builtin_HEXAGON_V6_vaddhsat
__builtin_HEXAGON_V6_vaddhsat_dv_128B
uintptr_t
V64iV32iV32i
__builtin_HEXAGON_V6_vaddubh
-mno-hvx-ieee-fp
__builtin_HEXAGON_V6_vadduhsat_128B
__builtin_HEXAGON_V6_vadduhsat_dv
__builtin_HEXAGON_V6_vadduhw_128B
tune=
__builtin_HEXAGON_V6_vaddw_dv_128B
__builtin_HEXAGON_V6_vaddwnq
__builtin_HEXAGON_V6_vaddwq
'minsize'
__builtin_HEXAGON_V6_vaddwsat_dv_128B
__builtin_HEXAGON_V6_valignb
V32iV32iV32ii
'dllimport'
V32iV32iV32iUIi
pointer
-frename-registers
self
V16iV16iV64bi
__builtin_HEXAGON_V6_vandqrt_acc_128B
V64bV16ii
'signal'
V64bV64bV16ii
__builtin_HEXAGON_V6_vandvrt_acc_128B
__builtin_HEXAGON_V6_vaslh
<no message provided>
__builtin_HEXAGON_V6_vaslhv_128B
__builtin_HEXAGON_V6_vaslw
__builtin_HEXAGON_V6_vaslw_acc_128B
strfmon
__builtin_HEXAGON_V6_vasrh_128B
__builtin_HEXAGON_V6_vasrhbrndsat
-mno-hvx
vcmn_err
__builtin_HEXAGON_V6_vasrhv_128B
__builtin_HEXAGON_V6_vasrw
__builtin_HEXAGON_V6_vasrw_acc_128B
kprintf
__builtin_HEXAGON_V6_vasrwhrndsat_128B
__builtin_HEXAGON_V6_vasrwhsat
__builtin_HEXAGON_V6_vasrwuhsat
os_trace
__builtin_HEXAGON_V6_vassign_128B
__builtin_HEXAGON_V6_vassignp
__builtin_HEXAGON_V6_vavgh
gcc_diag
__builtin_HEXAGON_V6_vavgub
__builtin_HEXAGON_V6_vavgub_128B
-frepack-arrays
gcc_cxxdiag
__builtin_HEXAGON_V6_vavgw
__builtin_HEXAGON_V6_vavgw_128B
__builtin_HEXAGON_V6_vcl0h
NSAttributedString
__builtin_HEXAGON_V6_vcombine
__builtin_HEXAGON_V6_vcombine_128B
V16i
__CFString
__builtin_HEXAGON_V6_vdealb4w
__builtin_HEXAGON_V6_vdealb4w_128B
__builtin_HEXAGON_V6_vdealvdd
non-member functions
__builtin_HEXAGON_V6_vdelta
__builtin_HEXAGON_V6_vdelta_128B
Don't generate implicit floating point instructions
V64iV64ii
__builtin_HEXAGON_V6_vdmpybus_dv_acc
__builtin_HEXAGON_V6_vdmpyhb
Compute, Amplification, Mesh or Library
__builtin_HEXAGON_V6_vdmpyhb_dv
__builtin_HEXAGON_V6_vdmpyhb_dv_128B
__builtin_HEXAGON_V6_vdmpyhb_dv_acc_128B
space0
__builtin_HEXAGON_V6_vdmpyhisat_acc
V16iV16iV32ii
__builtin_HEXAGON_V6_vdmpyhsat
mutex
-fimplicit-modules-use-lock
zero_argument
Turn on loop reroller
nonzero_argument
__builtin_HEXAGON_V6_vdmpyhvsat
__builtin_HEXAGON_V6_vdmpyhvsat_128B
__builtin_HEXAGON_V6_vdmpyhvsat_acc_128B
 sealed
__builtin_HEXAGON_V6_vdsaduh_acc
__builtin_HEXAGON_V6_vdsaduh_acc_128B
V64bV16iV16i
const &
__builtin_HEXAGON_V6_veqb_and_128B
V128bV128bV32iV32i
__builtin_HEXAGON_V6_veqb_xor
__restrict
__builtin_HEXAGON_V6_veqh_and
__builtin_HEXAGON_V6_veqh_and_128B
(integrated-as) Emit an object file which cannot be used with an incremental linker
experimental
__builtin_HEXAGON_V6_veqw_and
__builtin_HEXAGON_V6_veqw_and_128B
__builtin_HEXAGON_V6_veqw_xor
initializer_list
__builtin_HEXAGON_V6_vgtb_and
__builtin_HEXAGON_V6_vgtb_and_128B
__builtin_HEXAGON_V6_vgtb_or_128B
auto &
__builtin_HEXAGON_V6_vgth_and
__builtin_HEXAGON_V6_vgth_and_128B
__builtin_HEXAGON_V6_vgth_xor
'const char *'
__builtin_HEXAGON_V6_vgtub_and
__builtin_HEXAGON_V6_vgtub_and_128B
-frewrite-imports
__builtin_HEXAGON_V6_vgtuh_and
__builtin_HEXAGON_V6_vgtuh_and_128B
__builtin_HEXAGON_V6_vgtuh_xor
tuple_element
__builtin_HEXAGON_V6_vgtuw_and
__builtin_HEXAGON_V6_vgtuw_and_128B
__builtin_HEXAGON_V6_vgtuw_or_128B
__builtin_HEXAGON_V6_vgtw_and
__builtin_HEXAGON_V6_vgtw_and_128B
__builtin_HEXAGON_V6_vgtw_xor
__builtin_memcpy
__builtin_HEXAGON_V6_vlalignb
__builtin_HEXAGON_V6_vlalignb_128B
-mno-isel
__builtin_HEXAGON_V6_vlsrw
__builtin_HEXAGON_V6_vlsrw_128B
__builtin_HEXAGON_V6_vlutvvb
category
__builtin_HEXAGON_V6_vlutvvb_oracc_128B
V32iV32iV32iV32ii
__builtin_HEXAGON_V6_vlutvwh_128B
__contravariant
__builtin_HEXAGON_V6_vmaxh
__builtin_HEXAGON_V6_vmaxh_128B
__builtin_HEXAGON_V6_vmaxuh
forwardInvocation
__builtin_HEXAGON_V6_vminh
NSProxy
-frewrite-map-file=
length
__builtin_HEXAGON_V6_vmpabus
__builtin_HEXAGON_V6_vmpabus_128B
__builtin_HEXAGON_V6_vmpabusv
iOS 9
__builtin_HEXAGON_V6_vmpahb
__builtin_HEXAGON_V6_vmpahb_128B
__builtin_HEXAGON_V6_vmpahb_acc_128B
throw(
__builtin_HEXAGON_V6_vmpybus_acc
V32iV32iV16ii
__builtin_HEXAGON_V6_vmpybusv
__attribute__((nothrow))
__builtin_HEXAGON_V6_vmpybusv_acc_128B
V64iV64iV32iV32i
Do not extend the -G behaviour to object local data (MIPS)
(void*) 0
__builtin_HEXAGON_V6_vmpyh
__builtin_HEXAGON_V6_vmpyh_128B
__builtin_HEXAGON_V6_vmpyhsrs
object_getClass(
__builtin_HEXAGON_V6_vmpyhus
__builtin_HEXAGON_V6_vmpyhus_128B
__builtin_HEXAGON_V6_vmpyhus_acc_128B
__builtin_HEXAGON_V6_vmpyhvsrs
__builtin_HEXAGON_V6_vmpyhvsrs_128B
__builtin_HEXAGON_V6_vmpyiewh_acc
less
__builtin_HEXAGON_V6_vmpyiewuh_acc
__builtin_HEXAGON_V6_vmpyiewuh_acc_128B
-fropi
greater
__builtin_HEXAGON_V6_vmpyihb_acc
__builtin_HEXAGON_V6_vmpyihb_acc_128B
__builtin_HEXAGON_V6_vmpyiwb
static_cast<void>(
__builtin_HEXAGON_V6_vmpyiwh
__builtin_HEXAGON_V6_vmpyiwh_128B
__builtin_HEXAGON_V6_vmpyiwh_acc_128B
object_setClass
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc_128B
__builtin_HEXAGON_V6_vmpyub
BOOL
__builtin_HEXAGON_V6_vmpyubv
__builtin_HEXAGON_V6_vmpyubv_128B
-mno-lvi-cfi
__builtin_HEXAGON_V6_vmpyuhv
__builtin_HEXAGON_V6_vmpyuhv_128B
__builtin_HEXAGON_V6_vmux
__builtin_HEXAGON_V6_vnavgub
__builtin_HEXAGON_V6_vnavgub_128B
__builtin_HEXAGON_V6_vnavgw_128B
performSelector
__builtin_HEXAGON_V6_vnot
__builtin_HEXAGON_V6_vnot_128B
__builtin_HEXAGON_V6_vpackeb
__builtin_HEXAGON_V6_vpackeh_128B
1 << 
-frounding-math
1LL << 
__builtin_HEXAGON_V6_vpackwh_sat
__builtin_HEXAGON_V6_vpackwh_sat_128B
__builtin_HEXAGON_V6_vpopcounth
__builtin_HEXAGON_V6_vrmpybus
__builtin_HEXAGON_V6_vrmpybus_128B
__builtin_HEXAGON_V6_vrmpybus_acc_128B
__real
__builtin_HEXAGON_V6_vrmpybusi_acc
V32iV32iV32iiUIi
__builtin_HEXAGON_V6_vrmpybusv
source_location
__builtin_HEXAGON_V6_vrmpybv
__builtin_HEXAGON_V6_vrmpybv_128B
-mno-lwp
_M_function_name
__builtin_HEXAGON_V6_vrmpyubi
__builtin_HEXAGON_V6_vrmpyubi_128B
__builtin_HEXAGON_V6_vrmpyubv
'size_t'
__builtin_HEXAGON_V6_vror
__builtin_HEXAGON_V6_vror_128B
__builtin_HEXAGON_V6_vroundhb_128B
default delete
__builtin_HEXAGON_V6_vroundwuh
__builtin_HEXAGON_V6_vroundwuh_128B
__builtin_HEXAGON_V6_vrsadubi_acc
__builtin_operator_new
__builtin_HEXAGON_V6_vsatwh
__builtin_HEXAGON_V6_vsatwh_128B
Add -rpath with architecture-specific resource directory to the linker flags
, this
__builtin_HEXAGON_V6_vshufeh
__builtin_HEXAGON_V6_vshufeh_128B
__builtin_HEXAGON_V6_vshuffeb
__builtin_HEXAGON_V6_vshuffob
__builtin_HEXAGON_V6_vshuffob_128B
__builtin_HEXAGON_V6_vshuffvdd_128B
__builtin_HEXAGON_V6_vshufoh
__builtin_HEXAGON_V6_vshufoh_128B
__builtin_HEXAGON_V6_vsubb_dv
stringWithUTF8String
__builtin_HEXAGON_V6_vsubbq
__builtin_HEXAGON_V6_vsubbq_128B
-mno-memops
objCType
__builtin_HEXAGON_V6_vsubhq
__builtin_HEXAGON_V6_vsubhq_128B
__builtin_HEXAGON_V6_vsubhsat_dv
__builtin_HEXAGON_V6_vsububh
__builtin_HEXAGON_V6_vsububh_128B
__builtin_HEXAGON_V6_vsububsat_128B
keys
__builtin_HEXAGON_V6_vsubuhsat_dv
__builtin_HEXAGON_V6_vsubuhsat_dv_128B
__builtin_HEXAGON_V6_vsubw
respondsToSelector
__builtin_HEXAGON_V6_vsubwnq
CFBridgingRelease
-frtti
CFBridgingRelease 
__builtin_HEXAGON_V6_vswap
V32iV64bV16iV16i
__builtin_HEXAGON_V6_vtmpyb
CFBridgingRetain
__builtin_HEXAGON_V6_vtmpybus
__builtin_HEXAGON_V6_vtmpybus_128B
__builtin_HEXAGON_V6_vtmpybus_acc_128B
CFBridgingRetain 
__builtin_HEXAGON_V6_vunpackb
__builtin_HEXAGON_V6_vunpackb_128B
__builtin_HEXAGON_V6_vunpackob
__builtin_HEXAGON_V6_vunpackoh
__builtin_HEXAGON_V6_vunpackoh_128B
-mno-micromips
__builtin_HEXAGON_V6_vzb
__builtin_HEXAGON_V6_vzb_128B
__builtin_HEXAGON_V6_lvsplatb
L'\0'
__builtin_HEXAGON_V6_lvsplath_128B
__builtin_HEXAGON_V6_pred_scalar2v2
__builtin_HEXAGON_V6_shuffeqh
U'\0'
__builtin_HEXAGON_V6_vaddbsat_128B
__builtin_HEXAGON_V6_vaddbsat_dv
V16iV16iV16iv*
Addressing Mode
__builtin_HEXAGON_V6_vaddclbh_128B
__builtin_HEXAGON_V6_vaddclbw
Generate read-write position independent code (ARM only)
__builtin_HEXAGON_V6_vaddububb_sat_128B
__builtin_HEXAGON_V6_vadduhw_acc
__builtin_HEXAGON_V6_vadduwsat_128B
rbegin
__builtin_HEXAGON_V6_vandnqrt_128B
__builtin_HEXAGON_V6_vandnqrt_acc
__builtin_HEXAGON_V6_vandvnqv
crbegin
__builtin_HEXAGON_V6_vandvqv_128B
__builtin_HEXAGON_V6_vasrhbsat
__builtin_HEXAGON_V6_vasruwuhrndsat_128B
cend
__builtin_HEXAGON_V6_vlsrb_128B
__builtin_HEXAGON_V6_vlutvvb_nm
-mno-movbe
c_str
__builtin_HEXAGON_V6_vlutvvbi_128B
__builtin_HEXAGON_V6_vlutvwh_nm
V32iV32iV16iV16iUIi
equal_range
V32iV16iV16iUIi
__builtin_HEXAGON_V6_vlutvwhi_128B
__builtin_HEXAGON_V6_vmaxb
upper_bound
__builtin_HEXAGON_V6_vmpauhb_128B
__builtin_HEXAGON_V6_vmpauhb_acc
__builtin_HEXAGON_V6_vmpyewuh_64_128B
-flogical-abbreviations
static_cast<
__builtin_HEXAGON_V6_vsatuwuh_128B
__builtin_HEXAGON_V6_vsubbsat
__builtin_HEXAGON_V6_vsubbsat_dv_128B
'this'
__builtin_HEXAGON_V6_vsubububb_sat_128B
__builtin_HEXAGON_V6_vsubuwsat
__builtin_HEXAGON_V6_vsubuwsat_dv
lookup results for 
__builtin_HEXAGON_V6_vabsb_sat
__builtin_HEXAGON_V6_vabsb_sat_128B
__builtin_HEXAGON_V6_vasrh_acc
[...]
__builtin_HEXAGON_V6_vasruhubsat
__builtin_HEXAGON_V6_vasruhubsat_128B
Disallow use of movt/movw pairs (ARM only)
__type_pack_element
__builtin_HEXAGON_V6_vavguw
__builtin_HEXAGON_V6_vavguw_128B
__builtin_HEXAGON_V6_vdd0
vv*iiV16i
__builtin_HEXAGON_V6_vgathermh_128B
__builtin_HEXAGON_V6_vgathermhq
__builtin_HEXAGON_V6_vgathermhw_128B
vv*iiV64i
__builtin_HEXAGON_V6_vgathermhwq_128B
__builtin_HEXAGON_V6_vgathermwq
__builtin_HEXAGON_V6_vgathermwq_128B
Display suggestions to update code associated with -Wunsafe-buffer-usage warnings
__builtin_HEXAGON_V6_vmpabuu_acc
__builtin_HEXAGON_V6_vmpabuu_acc_128B
__builtin_HEXAGON_V6_vmpahhsat_128B
__builtin_HEXAGON_V6_vmpsuhuhsat
__builtin_HEXAGON_V6_vmpsuhuhsat_128B
__builtin_HEXAGON_V6_vmpyh_acc_128B
atomic_flag_test_and_set_explicit
__builtin_HEXAGON_V6_vnavgb
__builtin_HEXAGON_V6_vnavgb_128B
__builtin_HEXAGON_V6_vprefixqb_128B
ub_group_clustered_reduce_logical_or
__builtin_HEXAGON_V6_vprefixqw
__builtin_HEXAGON_V6_vprefixqw_128B
-mno-msa
tomic_compare_exchange_strong_explicit
__builtin_HEXAGON_V6_vscattermhq
vV64biiV16iV16i
__builtin_HEXAGON_V6_vscattermhw
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_load_store __opencl_c_ext_fp16_local_atomic_load_store
__builtin_HEXAGON_V6_vscattermhw_add
__builtin_HEXAGON_V6_vscattermhw_add_128B
vV64biiV32iV16i
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_add
__builtin_HEXAGON_V6_vscattermw_add
__builtin_HEXAGON_V6_vscattermw_add_128B
__builtin_HEXAGON_V6_vaddcarrysat
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_min_max
V32iV32iV32iV128b
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_add
Set destructor type used in ASan instrumentation
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_load_store
hvxv68|hvxv69
__builtin_HEXAGON_V6_v6mpyhubs10_128B
__builtin_HEXAGON_V6_v6mpyhubs10_vxx_128B
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_add __opencl_c_ext_fp32_global_atomic_add
__builtin_HEXAGON_V6_v6mpyvubs10_vxx
__builtin_HEXAGON_V6_v6mpyvubs10_vxx_128B
__builtin_HEXAGON_V6_vabs_hf_128B
cl_ext_float_atomics __opencl_c_ext_fp32_global_atomic_add
__builtin_HEXAGON_V6_vadd_hf_hf
__builtin_HEXAGON_V6_vadd_hf_hf_128B
__builtin_HEXAGON_V6_vadd_qf16_mix
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_add
__builtin_HEXAGON_V6_vadd_qf32_mix
__builtin_HEXAGON_V6_vadd_qf32_mix_128B
-mno-multivalue
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_add __opencl_c_ext_fp64_global_atomic_add
__builtin_HEXAGON_V6_vassign_fp
__builtin_HEXAGON_V6_vassign_fp_128B
__builtin_HEXAGON_V6_vconv_hf_qf32
cl_ext_float_atomics __opencl_c_ext_fp64_global_atomic_add
__builtin_HEXAGON_V6_vcvt_b_hf
__builtin_HEXAGON_V6_vcvt_b_hf_128B
__builtin_HEXAGON_V6_vcvt_h_hf_128B
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_add
__builtin_HEXAGON_V6_vcvt_hf_sf
__builtin_HEXAGON_V6_vcvt_hf_sf_128B
__builtin_HEXAGON_V6_vcvt_hf_uh
cl_khr_extended_bit_ops
__builtin_HEXAGON_V6_vcvt_ub_hf
__builtin_HEXAGON_V6_vcvt_ub_hf_128B
-fsanitize-address-field-padding=
cl_khr_subgroup_clustered_reduce
__builtin_HEXAGON_V6_vfmax_hf
__builtin_HEXAGON_V6_vfmax_hf_128B
__builtin_HEXAGON_V6_vfmin_hf
cl_khr_subgroup_non_uniform_arithmetic
__builtin_HEXAGON_V6_vfneg_hf
__builtin_HEXAGON_V6_vfneg_hf_128B
__builtin_HEXAGON_V6_vfneg_sf_128B
cl_khr_subgroup_shuffle
__builtin_HEXAGON_V6_vgthf_or
__builtin_HEXAGON_V6_vgthf_or_128B
__builtin_HEXAGON_V6_vgtsf
__opencl_subgroup_builtins
__builtin_HEXAGON_V6_vgtsf_or
__builtin_HEXAGON_V6_vgtsf_or_128B
Disallow converting instructions with negative immediates to their negation or inversion.
__opencl_c_work_group_collective_functions
__builtin_HEXAGON_V6_vmin_hf
__builtin_HEXAGON_V6_vmin_hf_128B
__builtin_HEXAGON_V6_vmpy_hf_hf
__opencl_c_integer_dot_product_input_4x8bit_packed
__builtin_HEXAGON_V6_vmpy_qf16
__builtin_HEXAGON_V6_vmpy_qf16_128B
__builtin_HEXAGON_V6_vmpy_qf16_hf_128B
__opencl_c_generic_address_space __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
__builtin_HEXAGON_V6_vmpy_qf32_hf
__builtin_HEXAGON_V6_vmpy_qf32_hf_128B
__builtin_HEXAGON_V6_vmpy_qf32_qf16
__opencl_c_named_address_space_builtins __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
__builtin_HEXAGON_V6_vmpy_qf32_sf_128B
__opencl_c_named_address_space_builtins __opencl_c_atomic_scope_device
-fsanitize-address-globals-dead-stripping
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_load_store __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
__builtin_HEXAGON_V6_vsub_hf_hf
__builtin_HEXAGON_V6_vsub_hf_hf_128B
__builtin_HEXAGON_V6_vsub_qf16_mix
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_add __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
__builtin_HEXAGON_V6_vsub_qf32_mix
__builtin_HEXAGON_V6_vsub_qf32_mix_128B
__builtin_HEXAGON_V6_vsub_sf_128B
cl_ext_float_atomics __opencl_c_ext_fp32_global_atomic_add __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
__builtin_HEXAGON_V6_vasrvuhubrndsat
V16iV32iV16i
V32iV64iV32i
cl_ext_float_atomics __opencl_c_ext_fp64_global_atomic_add __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
-fimplicit-modules
cl_ext_float_atomics __opencl_c_ext_fp64_global_atomic_add __opencl_c_atomic_scope_device
-fno-openmp-cuda-mode
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_min_max __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_min_max __opencl_c_atomic_scope_device
-fms-volatile
le64
cl_ext_float_atomics __opencl_c_ext_fp64_global_atomic_min_max __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
$r10
$r11
$r14
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_load_store __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
$r18
$r19
$r21
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_add __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
$r26
$r27
$r30
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_add __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_add __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_min_max __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
-mno-omit-leaf-frame-pointer
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_min_max __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_min_max __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
$fa4
$fa5
$fa7
$ft4
$ft8
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_add __opencl_c_ext_fp16_global_atomic_add __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
$ft12
$ft13
-fsanitize-address-poison-custom-array-cookie
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_add __opencl_c_ext_fp32_global_atomic_add __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
$fs3
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_add __opencl_c_ext_fp32_global_atomic_add __opencl_c_atomic_scope_device
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_add __opencl_c_ext_fp64_global_atomic_add __opencl_c_atomic_scope_device
-mno-outline
_BSD_SOURCE
-p:32:16:32
-i8:8:8-i16:16:16-i32:16:32
-a:0:16-S16
__mc68000
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_min_max __opencl_c_ext_fp16_global_atomic_min_max __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
__mc68000__
mc68010
mc68020
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_min_max __opencl_c_ext_fp32_global_atomic_min_max __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
__mc68030
__mc68030__
__mc68040
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_min_max __opencl_c_ext_fp64_global_atomic_min_max __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
-mno-packed-stack
V4ScV4ScV4Sc
__builtin_mips_addu_s_qb
__builtin_mips_addq_ph
V2sV2sV2s
__builtin_mips_subq_s_ph
memory_order
__builtin_mips_msub
__builtin_mips_msubu
__builtin_mips_addsc
objc_super
iV4Sc
__builtin_mips_absq_s_ph
__builtin_mips_absq_s_w
@synthesize 
V2sii
__builtin_mips_precrq_rs_ph_w
__builtin_mips_preceq_w_phr
nonatomic, 
__builtin_mips_precequ_ph_qbla
__builtin_mips_precequ_ph_qbra
__builtin_mips_preceu_ph_qbr
requires
__builtin_mips_shrl_qb
__builtin_mips_shll_ph
__builtin_mips_shra_ph
.bound_tid.
__builtin_mips_shilo
__builtin_mips_muleu_s_ph_qbl
-mno-paired-vector-memops
.privates.
__builtin_mips_mulsaq_s_w_ph
LLiLLiV2sV2s
__builtin_mips_maq_sa_w_phl
.task_t.
LLiUiUi
__builtin_mips_dpau_h_qbl
__builtin_mips_dpau_h_qbr
.ub.
__builtin_mips_dpaq_sa_l_w
__builtin_mips_dpsq_sa_l_w
__builtin_mips_cmpu_lt_qb
.liter.
__builtin_mips_cmpgu_lt_qb
__builtin_mips_cmpgu_le_qb
<mode>
.previous.lb.
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_load_store __opencl_c_ext_fp16_local_atomic_load_store __opencl_c_atomic_scope_device
retain (or strong)
excluded
omp_interop_t
__builtin_convertvector
_SVID_SOURCE
__STDC_FORMAT_MACROS
ordered
_GLIBCXX_PARALLEL
__attribute__((objc_method_family(none)))
inttypes.h
'map', 'use_device_ptr', or 'use_device_addr'
V4ScV4Sci
locale.h
.global_tid.
.floor_
__builtin_mips_shll_s_ph
math.h
.tile_
string.h
-fptrauth-abi-version=
.lb.
.unrolled.iv.
time.h
__builtin_mips_dpsq_s_w_ph
.st.
wchar.h
-mno-pascal-strings
-cc1as
/fsanitize-address-use-after-return
'init', 'use', 'destroy', or 'nowait'
iV4ScV4Sc
.reductions.
cctype
.lastprivate.src
cinttypes
__builtin_mips_extr_w
__builtin_mips_extpdp
.linear.start
ccomplex
scan
csignal
.copyin.src
-filetype
__builtin_mips_pick_ph
cstdbool
threadprivate or private in the enclosing context
cstddef
never,runtime,always
'map' or 'use_device_ptr'
.copyprivate.dst
cuchar
.iv.
cwctype
depend modifier(iterator) or 
fstream
-aarch64-mark-bti-property
__builtin_mips_mulq_rs_w
omp_out
algorithm
omp_priv
Enable use-after-scope detection in AddressSanitizer
omp_orig
LLiLLiUiUi
_POSIX_C_SOURCE
.firstprivate.temp
complex
iosfwd
-input=
-fno-openmp-new-driver
'alloc', 'from', 'to', 'tofrom', 'firstprivate', 'none', 'default'
iostream
.lastprivate.dst
condition_variable
.devptr.temp
utility
__builtin_msa_adds_s_b
__builtin_msa_adds_u_b
schedule
Distance
iomanip
ratio
.stop
-allow-missing-bundles
__builtin_msa_addv_w
.copyprivate.src
arpa/inet.h
dirent.h
__builtin_msa_addvi_b
cpio.h
 or 
fmtmsg.h
omp_in
Enable ODR indicator globals to avoid false ODR violation reports in partially sanitized programs at the cost of an increase in binary size
.omp.lb
grp.h
kind=
iconv.h
.omp.is_last
__builtin_msa_asub_u_h
__builtin_msa_bclr_h
'scalar', 'aggregate', 'pointer'
nl_types.h
pthread.h
-mno-prefetchwt1
poll.h
.omp.iv
sched.h
'alloc', 'from', 'to', 'tofrom', 'firstprivate', 'none', 'default', 'present'
--opt-level=O
.reduction.lhs
semaphore.h
-fsanitize-address-use-odr-indicator
stropts.h
omp_depend_t
sys/ipc.h
.start
__builtin_msa_binsl_d
sys/select.h
--wrapper-verbose
sys/resource.h
objectForKeyedSubscript
-mno-prfchw
objectAtIndexedSubscript
Alias for -fsanitize-ignorelist=
setObject
Logical
__builtin_msa_bnegi_w
sys/time.h
atIndexedSubscript
sys/un.h
$ompvariant
--offload-opt=-pass-remarks=
zve64d
sys/statvfs.h
.omp.ub
__builtin_msa_bneg_w
vadd_vv
MacroState 
--save-temps
--device-linker=
vluxei8_v
 undef
V4SiV4UiV4Ui
__LINE__
vloxseg3ei8_v
V16ScV16UcV16Uc
omp_alloctrait_t
__TIME__
vloxseg5ei8_v
_Pragma
__COUNTER__
vloxseg7ei8_v
__BASE_FILE__
__builtin_msa_clt_s_h
Make the jump table addresses canonical in the symbol table
vloxseg8ei8_v
__TIMESTAMP__
/E, /P or /EP
__FILE_NAME__
vloxseg3ei16_v
-fno-align-labels
iV16ScIUi
__has_builtin
vloxseg5ei16_v
__has_c_attribute
iV4SiIUi
__has_attribute
vloxseg7ei16_v
__has_include_next
-fcoverage-prefix-map=
experimental-zvfh
vloxseg2ei32_v
Controls the backend parallelism of -flto=thin (default of 0 means the number of threads will be derived from the number of CPUs detected)
__builtin_msa_div_s_d
vwaddu_vv
__is_target_os
vIii
V8UsV8UsV16UcV16Uc
V2ULLiV2ULLiV4UiV4Ui
vloxseg8ei32_v
vlse64_v
vloxseg2ei16_v
vsse16_v
vloxseg2ei64_v
__builtin_msa_fceq_d
??? ?? ????
vloxseg4ei64_v
attribute_availability_app_extension
vloxseg4ei16_v
-aux-target-feature
vloxseg6ei64_v
V4iV4fV4f
__builtin_msa_fcule_d
attribute_cf_returns_not_retained
vloxseg8ei64_v
__builtin_msa_fcor_d
attribute_cf_returns_on_parameters
attribute_symbol_metadata_footnote
vloxseg3ei32_v
vsse32_v
V2dV2dV2LLi
ptrauth_qualifier_authentication_mode
vsse64_v
ptrauth_member_function_pointer_type_discrimination
vloxseg5ei32_v
-mincremental-linker-compatible
vluxei16_v
sys/stat.h
vloxseg7ei32_v
arc_cf_code_audited
vsseg5e8_v
cxx_attributes_on_using_declarations
+use-tcc-in-div
Generalize pointers in CFI indirect call type signature checks
vloxseg3ei64_v
vsseg7e8_v
-use-tcc-in-div
__builtin_get_pointer_lower_bound
vsseg2e16_v
clang
+soft-float
vloxseg7ei64_v
vsseg4e16_v
region
__builtin_msa_frcp_d
vloxseg2ei8_v
pragma message
pragma warning
+mips1
__builtin_msa_fmul_d
vsseg7e16_v
pragma crash
vluxei64_v
__builtin_msa_fsle_d
vsseg2e32_v
 visible 
+mips3
vsseg4e8_v
crash
__builtin_msa_fsune_d
V2SLLiV2d
-fno-openmp
vsseg6e32_v
 #define.
vsseg7e32_v
+mips5
vsseg8e32_v
_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES
vsseg3e16_v
 source files entered.
vsseg3e64_v
 #pragma.
+mips32r3
__builtin_msa_hadd_u_h
vsseg5e64_v
 token paste (##) operations performed, 
vluxei32_v
 on the fast path.
vsseg7e64_v
  BumpPtr: 
__builtin_msa_ilvr_d
V8SsV8SsIUii
vssseg3e8_v
+mips32
vsseg3e32_v
  Poison Reasons: 
vssseg5e8_v
__gnu__
+mips64r2
_Clang
vssseg7e8_v
block
-fno-aligned-allocation
clang
vssseg2e16_v
namespace
+mips64r5
Restrict sanitizer coverage instrumentation exclusively to modules and functions that match the provided special case list, except the blocked ones
vssseg4e16_v
-mno-save-restore
__builtin_msa_max_a_h
vsseg6e64_v
objc_method(is_instance)
record
-force_cpusubtype_ALL
-msave-temp-labels
vsseg4e64_v
vssseg8e16_v
V16UcV16UcIi
variable(is_global)
vssseg3e32_v
V4SiV4SiIi
vssseg6e8_v
variable(unless(is_parameter))
vssseg5e32_v
_clang_arm_mve_strict_polymorphism
-massembler-no-warn
vssseg8e8_v
-mno-serialize
-march
vssseg2e64_v
__builtin_atan2
-fdebug-compilation-dir
__builtin_atan2f
vssseg4e64_v
__builtin_msa_mod_s_h
Collect control flow of function
vssseg6e64_v
-fdebug-compilation-dir=
__builtin_msa_msubv_d
vssseg4e32_v
__builtin_atan2f128
__builtin_copysignf16
-fsanitize-coverage-control-flow
__builtin_msa_nlzc_b
vsuxseg4ei8_v
__builtin_copysignf128
-arm-implicit-it=
vssseg6e32_v
vsuxseg6ei8_v
-mno-sha
__builtin_fabsl
vsuxseg8ei8_v
LdLdLd
__builtin_msa_pckod_d
LdLd
vsuxseg3ei16_v
__builtin_fmodf16
__builtin_msa_sld_b
-fno-optimize-sibling-calls
vsuxseg5ei16_v
Disable speculative execution side effect suppression (SESES)
-mno-sign-ext
__builtin_frexpl
vsuxseg7ei16_v
-mlimit-float-precision
-ftrapping-math
Disable sanitizer coverage instrumentation for modules and functions that match the provided special case list, even the allowed ones
vsuxseg2ei32_v
__builtin_msa_slli_b
vsuxseg7ei8_v
vsuxseg4ei32_v
__builtin_msa_splat_w
__builtin_msa_splati_b
vsuxseg6ei32_v
__builtin_msa_sra_b
__builtin_huge_valf128
vsuxseg8ei32_v
__builtin_inff128
vsuxseg6ei16_v
vsuxseg8ei16_v
vsuxseg3ei64_v
Disable tail call optimization, keeping the call stack accurate
source
LLiLLi
vsuxseg5ei64_v
LdLdi
__builtin_msa_st_b
-mno-speculative-load-hardening
vsuxseg7ei64_v
__builtin_modf
vsuxseg7ei32_v
__builtin_llabs
vsuxseg2ei8_v
-menable-no-nans
vloxei8_v
Enable sanitizer coverage for indirect calls
vloxei16_v
__builtin_msa_subs_u_w
-fno-signed-zeros
LLdLLdLLd*
vsoxseg2ei8_v
__builtin_nans
__builtin_msa_vshf_d
-fno-pack-derived
vsuxseg2ei64_v
vloxei32_v
vsoxseg4ei8_v
__builtin_modff128
vsoxseg6ei8_v
-fdenormal-fp-math-f32=
__mips_o32
__builtin_powf16
vloxei64_v
-fgpu-defer-diag
vsoxseg3ei8_v
vsoxseg8ei8_v
vsoxseg2ei16_v
-ffp-contract=fast
__nvvm_read_ptx_sreg_tid_z
__nvvm_read_ptx_sreg_ntid_x
__nvvm_read_ptx_sreg_ntid_y
__nvvm_read_ptx_sreg_ctaid_x
__nvvm_read_ptx_sreg_ctaid_y
__nvvm_read_ptx_sreg_nctaid_x
vsoxseg6ei16_v
__nvvm_read_ptx_sreg_laneid
__nvvm_read_ptx_sreg_warpid
__nvvm_read_ptx_sreg_smid
vsoxseg8ei16_v
__nvvm_read_ptx_sreg_lanemask_lt
__nvvm_read_ptx_sreg_lanemask_ge
__nvvm_read_ptx_sreg_clock64
vsoxseg3ei32_v
__nvvm_read_ptx_sreg_pm2
__nvvm_read_ptx_sreg_pm3
__nvvm_fmin_f16
vsoxseg5ei32_v
__nvvm_fmin_xorsign_abs_f16
(sm_86|sm_87|sm_89|sm_90),(ptx72|ptx73|ptx74|ptx75|ptx76|ptx77|ptx78)
__nvvm_fmin_ftz_nan_xorsign_abs_f16
vsoxseg7ei32_v
__nvvm_fmin_nan_f16x2
__nvvm_fmin_ftz_nan_f16x2
-mno-ssse3
vsoxseg2ei64_v
__nvvm_fmin_xorsign_abs_bf16
__nvvm_fmin_nan_xorsign_abs_bf16
__nvvm_fmin_nan_bf16x2
vsoxseg4ei64_v
__nvvm_fmin_ftz_f
__nvvm_fmin_nan_f
__nvvm_fmin_xorsign_abs_f
vsoxseg6ei64_v
__nvvm_fmax_f16
__nvvm_fmax_ftz_f16
__nvvm_fmax_xorsign_abs_f16
vsoxseg8ei64_v
__nvvm_fmax_f16x2
__nvvm_fmax_ftz_f16x2
Enable inline bool flag in sanitizer coverage
vsub_vv
__nvvm_fmax_bf16
__nvvm_fmax_nan_bf16
__nvvm_fmax_bf16x2
vrsub_vx
__nvvm_fmax_f
__nvvm_fmax_ftz_f
__nvvm_fmax_ftz_nan_f
vwsubu_vv
__nvvm_fmax_d
__nvvm_mulhi_i
__nvvm_mulhi_ull
vwadd_vv
__nvvm_mul_rz_f
__nvvm_mul_rm_ftz_f
-mno-tail-call
vwsub_vv
__nvvm_mul_rp_d
__nvvm_mul24_i
__nvvm_div_approx_f
vwaddu_wx
__nvvm_div_rz_f
__nvvm_div_rm_ftz_f
__nvvm_div_rp_ftz_f
vwsubu_wx
__nvvm_div_rp_d
__nvvm_sad_i
__nvvm_floor_f
vwadd_wx
__nvvm_ceil_d
__nvvm_fabs_ftz_f
Disable coverage pruning (i.e. instrument all blocks/edges)
vwsub_wx
__nvvm_trunc_f
__nvvm_trunc_d
__nvvm_saturate_d
vwcvt_x
__nvvm_ex2_approx_f16
(sm_75|sm_80|sm_86|sm_87|sm_89|sm_90),(ptx70|ptx71|ptx72|ptx73|ptx74|ptx75|ptx76|ptx77|ptx78)
V2hV2h
vadc_vxm
__nvvm_sin_approx_f
__nvvm_cos_approx_ftz_f
(sm_53|sm_60|sm_61|sm_62|sm_70|sm_72|sm_75|sm_80|sm_86|sm_87|sm_89|sm_90),(ptx42|ptx60|ptx61|ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74|ptx75|ptx76|ptx77|ptx78)
vsbc_vxm
__nvvm_fma_rn_relu_f16
__nvvm_fma_rn_ftz_relu_f16
-mno-thumb
vmadc_vxm
__nvvm_fma_rn_ftz_relu_f16x2
__nvvm_fma_rn_bf16
__nvvm_fma_rn_bf16x2
vmadc_vx
__nvvm_fma_rn_f
__nvvm_fma_rz_ftz_f
__nvvm_fma_rm_ftz_f
vmsbc_vxm
__nvvm_fma_rz_d
__nvvm_fma_rm_d
__nvvm_rcp_rn_f
vmsbc_vx
__nvvm_rcp_rm_f
vand_vv
Create a table of coverage-instrumented PCs
vand_vx
__nvvm_rcp_approx_ftz_d
__nvvm_sqrt_rn_ftz_f
__nvvm_sqrt_rz_f
vxor_vx
__nvvm_sqrt_rp_f
__nvvm_sqrt_approx_ftz_f
__nvvm_sqrt_rn_d
vor_vx
__nvvm_rsqrt_approx_f
__nvvm_rsqrt_approx_d
__nvvm_add_rz_ftz_f
vsll_vx
__nvvm_add_rp_ftz_f
__nvvm_add_rp_f
-mno-type-check
vsrl_vx
__nvvm_d2f_rz_ftz
__nvvm_d2f_rz
__nvvm_d2f_rp_ftz
vsra_vx
__nvvm_d2i_rm
__nvvm_d2i_rp
vnsrl_wx
__nvvm_i2d_rz
__nvvm_i2d_rm
vnsra_wx
__nvvm_f2i_rn_ftz
__nvvm_f2i_rn
Enable max stack depth tracing
vncvt_x
__nvvm_f2ui_rn_ftz
__nvvm_f2ui_rn
__nvvm_f2ui_rm_ftz
vmseq_vx
__nvvm_i2f_rn
__nvvm_i2f_rz
__nvvm_i2f_rp
vmsne_vx
__nvvm_lohi_i2d
__nvvm_f2ll_rn_ftz
vmsltu_vx
__nvvm_f2ll_rm_ftz
__nvvm_f2ll_rm
Force all memory accesses to be aligned (AArch32/AArch64 only)
vmslt_vx
__nvvm_f2ull_rz
__nvvm_f2ull_rm_ftz
__nvvm_f2ull_rp
vmsleu_vx
__nvvm_d2ll_rp
__nvvm_d2ull_rn
__nvvm_d2ull_rz
vmsle_vx
__nvvm_ll2f_rm
__nvvm_ll2f_rp
__nvvm_ull2f_rz
vmsgtu_vx
__nvvm_ll2d_rz
vmsgt_vv
Enable basic block tracing in sanitizer coverage
vmsgt_vx
__nvvm_f2h_rn_ftz
ZUiff
vwaddu_wv
__nvvm_ff2f16x2_rn
V2hff
__nvvm_ff2f16x2_rz
vsuxei16_v
__nvvm_f2bf16_rz
__nvvm_f2bf16_rz_relu
__nvvm_bitcast_f2i
vmsge_vv
__nvvm_fns
UiUiUii
-mno-vpclmulqdq
vminu_vv
__nvvm_bar_warp_sync
__nvvm_barrier_sync
__nvvm_shfl_down_f32
vmin_vv
__nvvm_shfl_bfly_i32
__nvvm_shfl_bfly_f32
__nvvm_shfl_idx_f32
vmaxu_vv
__nvvm_shfl_sync_up_i32
__nvvm_shfl_sync_up_f32
__nvvm_shfl_sync_idx_i32
vmax_vv
__nvvm_vote_uni
__nvvm_vote_ballot
Enable cmp instruction tracing in sanitizer coverage
vmul_vv
UiUib
__nvvm_match_any_sync_i32
UiUiWi
vmulh_vv
UiUiWii*
__nvvm_redux_sync_add
__nvvm_redux_sync_max
vmulhu_vv
__nvvm_redux_sync_or
__nvvm_membar_cta
__nvvm_mbarrier_init
vmulhsu_vv
__nvvm_mbarrier_inval
vWi*
-mno-waitpkg
vmulhsu_vx
__nvvm_mbarrier_arrive_noComplete
WiWi*i
__nvvm_mbarrier_arrive_drop
vdivu_vx
__nvvm_mbarrier_test_wait
bWi*Wi
bWi*3Wi
vdiv_vx
vUc*Uczi
__builtin_ptx_read_image2Dfi_
V4fiiff
vremu_vx
__builtin_ptx_read_image2Dif_
vrem_vv
Enable div instruction tracing in sanitizer coverage
vrem_vx
V4iiiffff
__builtin_ptx_write_image2Df_
viiiiiii
vwmul_vx
__builtin_ptx_get_image_heighti_
__builtin_ptx_get_image_widthi_
__builtin_ptx_get_image_channel_orderi_
vwmulu_vx
__nvvm_atom_sys_add_gen_i
__nvvm_atom_add_gen_l
__nvvm_atom_sys_add_gen_l
vwmulsu_vx
__nvvm_atom_add_gen_f
ffD*f
-mno-wbnoinvd
vmacc_vx
__nvvm_atom_sub_gen_i
__nvvm_atom_sub_gen_l
__nvvm_atom_cta_xchg_gen_i
vsuxei8_v
__nvvm_atom_sys_xchg_gen_l
__nvvm_atom_xchg_gen_ll
__nvvm_atom_sys_xchg_gen_ll
vmadd_vv
UiUiD*Ui
__nvvm_atom_cta_max_gen_ui
__nvvm_atom_cta_max_gen_l
vnmsub_vv
__nvvm_atom_cta_max_gen_ul
__nvvm_atom_sys_max_gen_ul
Enable gep instruction tracing in sanitizer coverage
vwmaccu_vv
__nvvm_atom_sys_max_gen_ull
__nvvm_atom_min_gen_i
__nvvm_atom_min_gen_ui
vwmacc_vv
__nvvm_atom_cta_min_gen_l
__nvvm_atom_sys_min_gen_l
__nvvm_atom_cta_min_gen_ul
vwmaccsu_vv
__nvvm_atom_min_gen_ull
__nvvm_atom_cta_min_gen_ull
__nvvm_atom_cta_inc_gen_ui
vwmaccus_vx
__nvvm_atom_sys_dec_gen_ui
__nvvm_atom_and_gen_i
-mno-xop
vmerge_vxm
__nvvm_atom_cta_and_gen_ll
__nvvm_atom_sys_and_gen_ll
__nvvm_atom_sys_or_gen_i
vmv_v
__nvvm_atom_or_gen_ll
__nvvm_atom_cta_or_gen_ll
__nvvm_atom_xor_gen_i
vsaddu_vv
__nvvm_atom_sys_xor_gen_l
__nvvm_atom_xor_gen_ll
__nvvm_atom_cas_gen_i
vsadd_vv
__nvvm_atom_cas_gen_l
vsadd_vx
Enable tracing of loads
vssubu_vv
vcC*4
__nvvm_compiler_warn
__nvvm_ldg_s
vssub_vv
__nvvm_ldg_l
LiLiC*
LLiLLiC*
vaaddu_vv
__nvvm_ldg_ui
UiUiC*
__nvvm_ldg_ull
vaadd_vv
__nvvm_ldg_d
ddC*
-mno-xsave
vasubu_vv
__nvvm_ldg_s4
E4sE4sC*
__nvvm_ldg_i4
vasub_vv
__nvvm_ldg_uc2
E2UcE2UcC*
E4UcE4UcC*
vsmul_vv
__nvvm_ldg_ui2
E2UiE2UiC*
__nvvm_ldg_ull2
vssrl_vv
__nvvm_ldg_f4
E4fE4fC*
Enable PC tracing with guard in sanitizer coverage
vssra_vv
__nvvm_isspacep_shared
__hmma_m16n16k16_ld_a
__hmma_m16n16k16_ld_c_f16
vnclipu_wv
vi*i*UiIi
__hmma_m16n16k16_st_c_f32
__hmma_m32n8k16_ld_a
vnclip_wv
__hmma_m32n8k16_st_c_f16
__hmma_m32n8k16_st_c_f32
__hmma_m8n32k16_ld_c_f16
vfadd_vv
__hmma_m16n16k16_mma_f16f16
vi*iC*iC*iC*IiIi
-mnoexecstack
vfsub_vv
__hmma_m32n8k16_mma_f16f16
__hmma_m32n8k16_mma_f32f16
__hmma_m8n32k16_mma_f16f16
vfrsub_vf
__bmma_m8n8k128_ld_a_b1
(sm_75|sm_80|sm_86|sm_87|sm_89|sm_90),(ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74|ptx75|ptx76|ptx77|ptx78)
__bmma_m8n8k128_ld_c
vfwadd_vf
__bmma_m8n8k128_st_c_i32
__imma_m16n16k16_ld_a_s8
__imma_m16n16k16_ld_b_s8
vsuxei64_v
-flto=auto
vfwsub_vf
Enable PC tracing in sanitizer coverage
vfwadd_wv
__imma_m32n8k16_mma_u8
__imma_m32n8k16_st_c_i32
__imma_m8n32k16_ld_b_s8
vfwsub_wv
__imma_m8n32k16_mma_u8
__imma_m8n32k16_st_c_i32
__imma_m8n8k32_ld_a_u4
vfmul_vv
__imma_m8n8k32_mma_u4
__imma_m8n8k32_st_c_i32
__dmma_m8n8k4_ld_b
vfdiv_vv
vd*dC*dC*dC*IiIi
__mma_bf16_m16n16k16_ld_a
Generate mcount/__fentry__ calls as nops. To activate they need to be patched in.
vfrdiv_vf
__mma_bf16_m32n8k16_ld_b
__mma_bf16_m32n8k16_mma_f32
__mma_tf32_m16n16k8_ld_c
vfwmul_vf
__nvvm_cp_async_mbarrier_arrive_shared
__nvvm_cp_async_mbarrier_arrive_noinc
__nvvm_cp_async_ca_shared_global_4
vfmacc_vf
__nvvm_cp_async_commit_group
__nvvm_cp_async_wait_group
UsUs
vfnmacc_vf
__nvvm_neg_bf16x2
e-p:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64
Enable tracing of stores
vfmsac_vf
vfnmsac_vf
Enable LTO in 'full' mode
vfmadd_vv
pattern
6000
__PTRAUTH_INTRINSICS__
__ptrauth_abi_version__
__ENVIRONMENT_TV_OS_VERSION_MIN_REQUIRED__
vfnmadd_vf
__ENVIRONMENT_BRIDGE_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
__APPLE_SEPOS__
vfmsub_vf
WIN64
__MINGW64__
_CPPRTTI
vfnmsub_vf
_M_FP_CONTRACT
_M_FP_EXCEPT
_M_FP_PRECISE
vfwmacc_vf
_MSC_BUILD
_HAS_CHAR16_T_LANGUAGE_SUPPORT
_MSC_EXTENSIONS
vfwnmacc_vf
_ISO_VOLATILE
vfwmsac_vv
-fno-math-builtin
-fno-PIE
__builtin_ppc_poppar4
__builtin_ppc_poppar8
iULLi
__builtin_ppc_isync
__builtin_ppc_lwsync
__builtin_ppc_iospace_sync
vfmin_vf
__builtin_ppc_dcbst
__builtin_ppc_dcbt
__builtin_ppc_icbt
vfmax_vf
__builtin_ppc_frin
__builtin_ppc_frins
__builtin_ppc_frips
vfsgnj_vf
__builtin_ppc_frsqrte
__builtin_ppc_frsqrtes
__builtin_ppc_compare_and_swap
vfsgnjn_vf
__builtin_ppc_fetch_and_add
__builtin_ppc_fetch_and_addlp
__builtin_ppc_fetch_and_andlp
vfsgnjx_vf
__builtin_ppc_ldarx
LiLiD*
__builtin_ppc_lharx
vmfeq_vv
iLiD*Li
__builtin_ppc_stwcx
Put MODULE files in <dir>
vmfne_vv
__builtin_ppc_tw
viiIUi
vmflt_vv
__builtin_ppc_fctidz
__builtin_ppc_fctiw
__builtin_ppc_fctudz
vmfle_vv
vIivC*
__builtin_ppc_rdlam
__builtin_ppc_compare_exp_lt
vmfgt_vv
idIi
__builtin_ppc_swdiv
Include module files in dependency output
vmfge_vv
__builtin_ppc_mulhd
LLiLiLi
__builtin_ppc_mulhw
vfmerge_vfm
ULLiULLiULLiULLi
__builtin_ppc_maddld
UiUiUiIUi
vfmv_v
__builtin_ppc_load2r
UsUs*
__builtin_ppc_load8r
vredmaxu_vs
__builtin_ppc_store4r
vUiUi*
Select the HWAddressSanitizer ABI to target (interceptor or platform, default interceptor). This option is currently unused.
vredminu_vs
__builtin_ppc_mtfsb1
__builtin_ppc_mtfsf
vUIiUIi
vredand_vs
__builtin_ppc_fmsubs
__builtin_ppc_fnmadd
__builtin_ppc_fnmsub
vredxor_vs
__builtin_ppc_dcbtt
__builtin_ppc_mftbu
ULiIi
vwredsumu_vs
__builtin_ppc_stfiw
viC*d
Use <suffix> as the suffix for module files (the default value is `.mod`)
vfredmin_vs
__builtin_ppc_maxfs
ffff.
__builtin_ppc_minfs
vfredosum_vs
ULLi
__builtin_altivec_vaddcuw
__builtin_altivec_vaddubs
vfwredosum_vs
__builtin_altivec_vaddeuqm
V1ULLLiV1ULLLiV1ULLLiV1ULLLi
__builtin_altivec_vaddecuq
viota_m
__builtin_altivec_vaddcuq_c
__builtin_altivec_vaddecuq_c
Enable aliasing mode in HWAddressSanitizer
vmv_x_s
__builtin_altivec_vsubeuqm
__builtin_altivec_vsubcuq
__builtin_altivec_vsubeuqm_c
vmv_s_x
__builtin_altivec_vavgub
__builtin_altivec_vavgsh
__builtin_altivec_vavgsw
vfmv_f_s
__builtin_altivec_vcfux
V4fV4UiIi
__builtin_altivec_vctuxs
vfmv_s_f
__builtin_altivec_dst
vvC*iUIi
-moslib=
vfmv_s_x
V4iLivC*
__builtin_altivec_lvxl
__builtin_altivec_lvehx
vslidedown_vx
__builtin_altivec_lvsl
V16cUcvC*
__builtin_altivec_vmaddfp
vfslide1up_vf
__builtin_altivec_vmsummbm
V4SiV16ScV16UcV4Si
__builtin_altivec_vmsumshm
vslide1down_vx
__builtin_altivec_vmuleub
vfslide1down_vf
Path to ignorelist file for sanitizers
vrgather_vv
__builtin_altivec_vmulouh
__builtin_altivec_vmulosh
__builtin_altivec_vmuleud
vrgatherei16_vv
__builtin_altivec_vmuloud
__builtin_altivec_vmulosd
V1ULLLiV2ULLiV2ULLiV1ULLLi
vget_v
V16UcV8UsV8Us
__builtin_altivec_vpkshss
V8UsV4UiV4Ui
vsoxei8_v
V16UcV8SsV8Ss
__builtin_altivec_vpkswus
Enable function outlining (AArch64 only)
vsoxei32_v
V4UiV2ULLiV2ULLi
__builtin_altivec_vpkudum
__builtin_altivec_stvx
vlseg2e8_v
vV16cLiv*
__builtin_altivec_stvehx
__builtin_altivec_stvewx
vle32ff_v
__builtin_altivec_vcmpequw
__builtin_altivec_vcmpequd
__builtin_altivec_vcmpneh
vlseg3e8_v
__builtin_altivec_vcmpnezw
__builtin_altivec_vcmpgtsb
-fsanitize-link-runtime
vlseg5e8_v
V8sV8UsV8Us
__builtin_altivec_vcmpgtsw
V4iV4UiV4Ui
vlseg6e8_v
__builtin_altivec_vcmpgtfp
__builtin_altivec_vcmpequq
__builtin_altivec_vcmpgtsq
vlseg8e8_v
__builtin_altivec_vcmpgtsq_p
iiV1SLLLiV1SLLLi
__builtin_altivec_vmaxsb
vlseg3e16_v
__builtin_altivec_vmaxsw
__builtin_altivec_vmaxuw
Enable generation of instruction packets
vlseg5e16_v
__builtin_altivec_vminub
__builtin_altivec_vminsh
__builtin_altivec_vminuw
vlseg7e16_v
__builtin_altivec_mtvscr
vV4i
__builtin_altivec_vrlb
vlseg2e32_v
V4iV4iV4Ui
__builtin_altivec_vrld
V4iV4iV4iV4Ui
vlseg4e32_v
__builtin_altivec_vsrab
vlseg5e32_v
Enable detection of uninitialized parameters and return values
vlseg6e32_v
V4SiV16ScV4Si
__builtin_altivec_vsum4ubs
V4SiV8SsV4Si
vlseg8e32_v
__builtin_altivec_vupkhsb
V8sV16c
V4UiV8s
vlseg3e64_v
__builtin_altivec_vupklsb
__builtin_altivec_vupklpx
__builtin_altivec_vcmpbfp_p
vlseg5e64_v
iiV16cV16c
__builtin_altivec_vcmpequh_p
-mpascal-strings
vlseg7e64_v
__builtin_altivec_vcmpneb_p
__builtin_altivec_vcmpneh_p
__builtin_altivec_vcmpgtsb_p
vlseg3e8ff_v
__builtin_altivec_vcmpgtsh_p
iiV8SsV8Ss
iiV8UsV8Us
vlseg5e8ff_v
__builtin_altivec_vcmpgtsd_p
__builtin_altivec_vcmpgtud_p
__builtin_altivec_vgbbd
vlseg7e8ff_v
__builtin_altivec_vbpermd
V2ULLiV2ULLiV16Uc
Enable origins tracking in MemorySanitizer
vlseg2e16ff_v
__builtin_altivec_crypto_vshasigmad
V2ULLiV2ULLiIiIi
__builtin_altivec_crypto_vncipher
vlseg4e16ff_v
__builtin_altivec_crypto_vpmsumw
__builtin_altivec_crypto_vpmsumd
__builtin_altivec_vclzh
vlseg6e16ff_v
__builtin_altivec_vctzb
__builtin_altivec_vctzh
__builtin_ppc_bcdadd
vlseg8e16ff_v
__builtin_ppc_bcdsub_p
__builtin_altivec_vclzlsbb
-mpku
vlseg3e32ff_v
__builtin_altivec_vpopcntb
__builtin_altivec_vpopcnth
__builtin_altivec_vabsdub
vlseg5e32ff_v
__builtin_altivec_vsrv
__builtin_altivec_vrlwmi
__builtin_altivec_vrlwnm
vlseg7e32ff_v
V2SLLiV16Sc
__builtin_altivec_vextsh2w
V2SLLiV8Ss
vlseg2e64ff_v
V1SLLLiV2SLLi
vlseg3e64ff_v
-fsanitize-memory-use-after-dtor
vlseg4e64ff_v
UiV1ULLLi
__builtin_altivec_vdivesw
__builtin_altivec_vdiveud
vlseg6e64ff_v
__builtin_altivec_vmulhsw
__builtin_altivec_vmulhuw
__builtin_altivec_vmulhud
vlseg8e64ff_v
__builtin_altivec_vexpandqm
__builtin_altivec_vcntmbb
ULLiV8UsUi
vlsseg3e8_v
ULLiV2ULLiUi
__builtin_altivec_mtvsrbm
-mpower8-vector
vlsseg5e8_v
V2ULLiULLi
__builtin_altivec_mtvsrqm
__builtin_altivec_vpextd
vlsseg7e8_v
V8sV8s
__builtin_altivec_vstrihl
iiV16Uc
vlsseg2e16_v
__builtin_altivec_vcfuged
__builtin_altivec_vgnb
V16UcV16UcUi
vlsseg3e16_v
__builtin_altivec_vsldbi
__builtin_altivec_vsrdbi
-fsanitize-memtag-mode=
vlsseg5e16_v
__builtin_altivec_vinswlx
V4UiV4UiUiUi
V2ULLiV2ULLiULLiULLi
vlsseg7e16_v
__builtin_altivec_vinsbvrx
__builtin_altivec_vinshvlx
__builtin_altivec_vinshvrx
vlsseg2e32_v
V16UcV16UcUiIi
__builtin_altivec_vinsd
V16UcV16UcUiiC
vlsseg4e32_v
V2ULLiV16UcV16UcUi
__builtin_altivec_vextdubvrx
-mprefetchwt1
vluxseg2ei8_v
__builtin_altivec_vextddvlx
V2ULLiV2ULLiV2ULLiUi
__builtin_altivec_vrlqnm
vlsseg7e32_v
__builtin_vsx_lxvd2x_be
V2dSLLivC*
V4iSLLivC*
vlsseg2e64_v
vV2dSLLivC*
__builtin_vsx_stxvw4x_be
V4ivC*ULLi
vlsseg4e64_v
vV4iv*ULLi
vlsseg5e64_v
-fsanitize-minimal-runtime
vlsseg6e64_v
__builtin_vsx_xvmindp
__builtin_vsx_xvminsp
__builtin_vsx_xvdivsp
vlsseg8e64_v
__builtin_vsx_xvcmpeqsp
__builtin_vsx_xvcmpeqdp_p
__builtin_vsx_xvcmpeqsp_p
vsseg2e8_v
__builtin_vsx_xvcmpgtdp
__builtin_vsx_xvcmpgtsp
__builtin_vsx_xvrdpim
vluxseg4ei8_v
__builtin_vsx_xvrdpic
__builtin_vsx_xvrspic
-mptwrite
vluxseg6ei8_v
__builtin_vsx_xvmuldp
__builtin_vsx_xvmulsp
__builtin_vsx_xvnmsubadp
vluxseg8ei8_v
__builtin_vsx_xvrsqrtedp
__builtin_vsx_xvrsqrtesp
__builtin_vsx_xvsqrtsp
vluxseg3ei16_v
__builtin_vsx_xvabsdp
__builtin_vsx_xxgenpcvbm
V8UsV8Usi
vluxseg5ei16_v
V2ULLiV2ULLii
__builtin_vsx_xviexpdp
Enable recovery for specified sanitizers
vluxseg7ei16_v
__builtin_vsx_xvxsigsp
__builtin_vsx_xvcvdpsxws
V4UiV2d
vluxseg2ei32_v
V2ULLiV4f
__builtin_vsx_xvcvsxwdp
V2dV4Ui
vluxseg4ei32_v
V4fV2ULLi
__builtin_vsx_xvcvdpsp
__builtin_vsx_xvcvhpsp
vluxseg6ei32_v
__builtin_vsx_xvtstdcdp
V2ULLiV2dIi
vluxseg8ei32_v
__builtin_vsx_xxsldwi
__builtin_vsx_xxeval
iV16UcUi
vluxseg3ei64_v
iV4fV4f
__builtin_vsx_xvtsqrtdp
__builtin_vsx_xvtsqrtsp
vluxseg5ei64_v
__builtin_vsx_xxblendvh
__builtin_vsx_xxblendvw
LLdLLd
vluxseg7ei64_v
__builtin_mulf128_round_to_odd
vluxseg8ei64_v
-fsanitize-stats
vssseg2e8_v
__builtin_vsx_scalar_insert_exp_qp
LLdLLdULLi
__builtin_ppc_recipdivf
vneg_v
__builtin_tabort
__builtin_tabortdc
__builtin_tabortwc
vmmv_m
__builtin_tsr
__builtin_tendall
__builtin_get_texasr
vwcvtu_x_x_v
__builtin_get_tfiar
__builtin_set_texasr
Specify name of main file output to quote in depfile
vle16_v
SiSiSi
__builtin_divweu
__builtin_bpermd
vle64_v
__builtin_cntlzdm
__builtin_cnttzdm
dLdIi
vse32_v
__builtin_darn_32
__builtin_unpack_vector_int128
V1LLLiULLiULLi
vlse16_v
__builtin_dcbf
__builtin_mma_lxvp
-fsanitize-system-blacklist=
vfclass_v
__builtin_vsx_stxvp
__builtin_vsx_assemble_pair
__builtin_mma_disassemble_acc
vfcvt_f
__builtin_mma_xvi4ger8
__builtin_mma_xvi8ger4
__builtin_mma_xvi16ger2s
vfcvt_rtz_x_f_v
__builtin_mma_pmxvi8ger4
__builtin_mma_pmxvi16ger2
__builtin_mma_pmxvf32ger
vfcvt_rtz_xu_f_v
__builtin_mma_xvi8ger4spp
__builtin_mma_xvi16ger2pp
-mrdseed
vfcvt_x_f_v
__builtin_mma_xvf16ger2pp
__builtin_mma_xvf16ger2pn
__builtin_mma_pmxvf16ger2pp
vfcvt_xu_f_v
__builtin_mma_xvf32gerpp
__builtin_mma_xvf32gerpn
__builtin_mma_xvf32gernn
vfirst_m
__builtin_mma_xvf64gerpp
__builtin_mma_xvf64gerpn
__builtin_mma_pmxvf64gerpp
vfncvt_f
Set LTO mode
vfncvt_f_x_w
-fsanitize-system-ignorelist=
vfncvt_f_xu_w
__builtin_mma_pmxvbf16ger2np
__builtin_mma_pmxvbf16ger2nn
+float128
vfncvt_rod_f
+mma
+rop-protect
+isa-v206-instructions
vfncvt_rtz_x
__ppc__
_ARCH_PPC
__ppc64__
vfncvt_rtz_xu
__powerpc
_LITTLE_ENDIAN
-mrecip
vfncvt_x
__LONG_DOUBLE_IEEE128__
__LONG_DOUBLE_IBM128__
vfncvt_xu
_ARCH_440
_ARCH_603
_ARCH_PWR4
vfrsqrt7_v
_ARCH_PWR7
_ARCH_PWR8
_ARCH_A2
vfwcvt_f_f_v
10206
__ALTIVEC__
-fsanitize-thread-atomics
vfwcvt_f_x_v
__POWER9_VECTOR__
__MMA__
__PCREL__
vfwcvt_rtz_x_f_v
rop-protect
privileged
-mfloat128
vfwcvt_rtz_xu_f_v
-mprefixed
-mcpu=pwr10
-mprivileged
vfwcvt_x_f_v
efpu2
-mreference-types
vfwcvt_xu_f_v
vlm_v
vlmul_ext
vlmul_trunc
vmand_mm
-fsanitize-thread-func-entry-exit
vmandn_mm
vmnand_mm
spefscr
vmor_mm
vmsbf_m
-mrelax-all
vmsif_m
__lwsync
__iospace_lwsync
__dcbfl
vmxnor_mm
__dcbtst
__dcbz
__compare_and_swap
vreinterpret_v
__fetch_and_andlp
__fetch_and_or
__fetch_and_swaplp
vsext_vf4
__lbarx
__stfiw
-fsanitize-thread-memory-access
vsm_v
__trap
__trapd
__fctid
vzext_vf2
__fctudz
__fctuwz
__cmprb
vzext_vf8
__mulhw
__mulhwu
__maddld
UNREFERENCED_PARAMETER
__load2r
__load4r
--mrelax-relocations
continue
__mtfsb0
__mtfsb1
__insert_exp
count
__fnmadds
__fnmsub
__fre
__begin
__builtin_alloca
__vcipher
__vncipherlast
literal
__vpmsumd
@try
-fsanitize-trap=
'__try'
bcopy
__bpermd
__cntlz8
'try'
__cmplxf
__cnttz4
__cnttz8
__context
__dcbf
__fmadd
__builtin_fmaf
Objective-C @finally statement
__builtin_labs
__llabs
Enable linker relaxation
unwind
__rotatel4
__builtin_rotateleft32
__rdlam
[[clang::always_inline]]
__dcbtt
__mftbu
__mtmsr
valarray
__frims
__frin
__frips
template<> 
__fsels
__frsqrte
-fsanitize-trap
InstantiateClass
__compare_exp_lt
__compare_exp_gt
__swdiv
instantiating enum definition
__builtin_maxfe
__builtin_maxfl
__builtin_minfe
cannot instantiate %0 yet
-mdirect-move
-mpower9-vector
instantiating function definition
-mrestrict-it
instantiating variable definition
vs12
vs13
vs16
matrix row
vs20
vs21
vs23
_Nonnull
vs28
vs29
vs32
_Nullable_result
vs36
_Null_unspecified
-fsanitize-undefined-strip-path-components=
NSError
vs44
vs45
vs48
_BitInt
vs52
vs53
-mretpoline
cl_khr_fp64 and __opencl_c_fp64
-finclude-default-header
__float128
__kindof 
'sve'
fs11
ft11
authenticates-null-values
__riscv_cmodel_medany
__riscv_float_abi_single
Make StdCall calling convention the default
'__ptr64'
__riscv_mul
__riscv_div
__riscv_flen
'__uptr'
__riscv_v_elen
__riscv_v_elen_fp
zve32x
type qualifier
__builtin_rvv_vadd_vv_tuma
__builtin_rvv_vadd_vv_tama
__builtin_rvv_vwaddu_vv_tu
Loading API notes from 
__builtin_rvv_vwaddu_vv_tamu
__builtin_rvv_vluxei8_v_ta
-msahf
APINotes
__builtin_rvv_vlse32_v_tu
__builtin_rvv_vlse32_v_tumu
__builtin_rvv_vlse32_v_tamu
APINotes.
__builtin_rvv_vloxseg3ei8_v_tuma
__builtin_rvv_vloxseg3ei8_v_tama
__builtin_rvv_vloxseg4ei8_v_ta
OBJC_CONTEXT_BLOCK
__builtin_rvv_vloxseg4ei8_v_tamu
__builtin_rvv_vloxseg5ei8_v_ta
__builtin_rvv_vloxseg5ei8_v_tuma
OBJC_PROPERTY_BLOCK
__builtin_rvv_vloxseg6ei8_v_tu
__builtin_rvv_vloxseg6ei8_v_tumu
/fsanitize=address
OBJC_METHOD_BLOCK
__builtin_rvv_vloxseg7ei8_v_tuma
__builtin_rvv_vloxseg7ei8_v_tama
__builtin_rvv_vlse64_v_tu
OBJC_SELECTOR_BLOCK
__builtin_rvv_vlse64_v_tamu
__builtin_rvv_vloxseg8ei8_v_ta
__builtin_rvv_vloxseg8ei8_v_tumu
GLOBAL_VARIABLE_BLOCK
__builtin_rvv_vloxseg2ei16_v_tu
__builtin_rvv_vloxseg2ei16_v_tumu
__builtin_rvv_vloxseg2ei16_v_tamu
GLOBAL_FUNCTION_BLOCK
__builtin_rvv_vloxseg3ei16_v_tuma
__builtin_rvv_vloxseg3ei16_v_tama
Save temporary labels in the symbol table. Note this may change .s semantics and shouldn't generally be used on compiler-generated code.
Availability
__builtin_rvv_vloxseg4ei16_v_tamu
__builtin_rvv_vloxseg5ei16_v_ta
__builtin_rvv_vloxseg5ei16_v_tuma
SwiftInferImportAsMember
__builtin_rvv_vloxseg6ei16_v_tu
__builtin_rvv_vloxseg6ei16_v_tumu
__builtin_rvv_vloxseg6ei16_v_tama
__builtin_rvv_vloxseg7ei16_v_tuma
__builtin_rvv_vloxseg7ei16_v_tama
__builtin_rvv_vloxseg8ei16_v_tu
nonswift
__builtin_rvv_vloxseg8ei16_v_tamu
__builtin_rvv_vloxseg2ei32_v_ta
-fsanitize=
<none>
__builtin_rvv_vloxseg3ei32_v_tu
__builtin_rvv_vloxseg3ei32_v_tumu
__builtin_rvv_vloxseg3ei32_v_tamu
Protocols
__builtin_rvv_vloxseg4ei32_v_tuma
__builtin_rvv_vloxseg4ei32_v_tama
__builtin_rvv_vloxseg5ei32_v_ta
Globals
__builtin_rvv_vloxseg5ei32_v_tamu
__builtin_rvv_vloxseg6ei32_v_ta
__builtin_rvv_vloxseg6ei32_v_tuma
Tags
__builtin_rvv_vloxseg7ei32_v_tu
__builtin_rvv_vloxseg7ei32_v_tumu
Enable speculative execution side effect suppression (SESES). Includes LVI control flow integrity mitigations
AuditedForNullability
__builtin_rvv_vloxseg8ei32_v_tuma
__builtin_rvv_vloxseg8ei32_v_tama
__builtin_rvv_vsse16_v_m
SwiftName
__builtin_rvv_vloxseg2ei64_v_tuma
__builtin_rvv_vloxseg2ei64_v_tama
__builtin_rvv_vloxseg3ei64_v_ta
NSErrorDomain
__builtin_rvv_vloxseg3ei64_v_tamu
__builtin_rvv_vloxseg4ei64_v_ta
__builtin_rvv_vloxseg4ei64_v_tuma
SwiftObjCMembers
__builtin_rvv_vloxseg5ei64_v_tu
Methods
<check>
Properties
__builtin_rvv_vloxseg6ei64_v_tuma
__builtin_rvv_vloxseg6ei64_v_tama
__builtin_rvv_vloxseg7ei64_v_tu
MethodKind
__builtin_rvv_vloxseg7ei64_v_tamu
__builtin_rvv_vloxseg8ei64_v_ta
__builtin_rvv_vloxseg8ei64_v_tumu
Nullability
__builtin_rvv_vloxseg2ei8_v_tu
__builtin_rvv_vloxseg2ei8_v_tumu
__builtin_rvv_vloxseg2ei8_v_tamu
RetainCountConvention
__builtin_rvv_vluxei64_v_tu
__builtin_rvv_vluxei64_v_tumu
-msign-ext
DesignatedInit
__builtin_rvv_vsseg3e8_v_m
__builtin_rvv_vluxei16_v_ta
__builtin_rvv_vluxei16_v_tuma
SuppressDirect
__builtin_rvv_vsseg4e8_v_m
__builtin_rvv_vsseg5e8_v
__builtin_rvv_vsseg6e8_v
Instance
__builtin_rvv_vsseg8e8_v_m
__builtin_rvv_vsseg2e16_v
__builtin_rvv_vsseg3e16_v_m
NoEscape
__builtin_rvv_vsseg5e16_v_m
__builtin_rvv_vsseg6e16_v
Generate an optimization record file in a specific format
Optional
__builtin_rvv_vluxei32_v_tamu
__builtin_rvv_vsseg7e16_v
__builtin_rvv_vsseg8e16_v_m
NullableResult
__builtin_rvv_vsseg3e32_v_m
__builtin_rvv_vsseg4e32_v
__builtin_rvv_vsseg5e32_v
__builtin_rvv_vsseg7e32_v_m
__builtin_rvv_vsseg8e32_v
__builtin_rvv_vsseg2e64_v_m
__builtin_rvv_vsseg4e64_v_m
__builtin_rvv_vsseg5e64_v
Select return address signing scope
CFReturnsNotRetained
__builtin_rvv_vsseg8e64_v_m
__builtin_rvv_vssseg3e8_v
__builtin_rvv_vssseg4e8_v_m
NSReturnsNotRetained
__builtin_rvv_vssseg6e8_v_m
__builtin_rvv_vssseg7e8_v
__builtin_rvv_vssseg8e8_v
__builtin_rvv_vssseg3e16_v_m
__builtin_rvv_vssseg4e16_v
__builtin_rvv_vssseg5e16_v_m
SwiftImportAsAccessors
__builtin_rvv_vssseg7e16_v
EnumExtensibility
-fsave-optimization-record
FlagEnum
__builtin_rvv_vssseg4e32_v_m
__builtin_rvv_vssseg5e32_v
__builtin_rvv_vssseg6e32_v_m
open
__builtin_rvv_vssseg8e32_v_m
__builtin_rvv_vssseg2e64_v
__builtin_rvv_vssseg3e64_v
CFEnum
__builtin_rvv_vssseg5e64_v_m
__builtin_rvv_vssseg6e64_v
__builtin_rvv_vssseg7e64_v_m
CFOptions
__builtin_rvv_vsuxseg3ei8_v_m
__builtin_rvv_vsuxseg4ei8_v
-msingle-float
CFClosedEnum
__builtin_rvv_vsuxseg7ei8_v_m
__builtin_rvv_vsuxseg8ei8_v
__builtin_rvv_vsuxseg2ei16_v_m
SwiftWrapper
__builtin_rvv_vsuxseg4ei16_v_m
__builtin_rvv_vsuxseg5ei16_v
__builtin_rvv_vsuxseg6ei16_v
multiple definitions of protocol '
__builtin_rvv_vsuxseg8ei16_v_m
__builtin_rvv_vsuxseg2ei32_v
__builtin_rvv_vsuxseg3ei32_v_m
multiple definitions of global function '
__builtin_rvv_vsuxseg5ei32_v_m
__builtin_rvv_vsuxseg6ei32_v
-fsched-interblock
multiple definitions Of tag '
__builtin_rvv_vsuxseg2ei64_v_m
__builtin_rvv_vsuxseg3ei64_v
__builtin_rvv_vsuxseg4ei64_v_m
cannot mix EnumKind and FlagEnum (for 
__builtin_rvv_vsuxseg6ei64_v_m
__builtin_rvv_vsuxseg7ei64_v
__builtin_rvv_vsuxseg8ei64_v
duplicate definition of method '
__builtin_rvv_vloxei8_v_tu
__builtin_rvv_vloxei8_v_tumu
__builtin_rvv_vloxei8_v_tamu
duplicate definition of instance property '
__builtin_rvv_vloxei16_v_tuma
__builtin_rvv_vloxei16_v_tama
Put global and static data smaller than the limit into a special section
selector 
__builtin_rvv_vloxei32_v_tamu
__builtin_rvv_vsoxseg2ei8_v
__builtin_rvv_vsoxseg3ei8_v_m
'FactoryAsInit' is no longer valid; use 'SwiftName' instead
__builtin_rvv_vsoxseg5ei8_v_m
__builtin_rvv_vsoxseg6ei8_v
__builtin_rvv_vsoxseg7ei8_v
' will not be used
__builtin_rvv_vloxei64_v_tuma
__builtin_rvv_vloxei64_v_tama
__builtin_rvv_vsoxseg8ei8_v_m
 does not fit
__builtin_rvv_vsoxseg3ei16_v_m
  <#code#>
-fschedule-insns
<#code#>
break;
__builtin_rvv_vsoxseg7ei16_v_m
__builtin_rvv_vsoxseg8ei16_v
__builtin_rvv_vsoxseg2ei32_v_m
libcxx03 std::call_once implementation, skipping.
__builtin_rvv_vsoxseg4ei32_v_m
__builtin_rvv_vsoxseg5ei32_v
__builtin_rvv_vsoxseg6ei32_v
__state_
__builtin_rvv_vsoxseg8ei32_v_m
__builtin_rvv_vsoxseg2ei64_v
__builtin_rvv_vsoxseg3ei64_v_m
completionHandler
__builtin_rvv_vsoxseg5ei64_v_m
__builtin_rvv_vsoxseg6ei64_v
Use software floating point
withCompletionHandler
__builtin_rvv_vadd_vx_tu
__builtin_rvv_vadd_vx_tumu
__builtin_rvv_vadd_vx_tamu
completionBlock
__builtin_rvv_vsub_vv_tuma
__builtin_rvv_vsub_vv_tama
__builtin_rvv_vsub_vx_ta
replyTo
__builtin_rvv_vsub_vx_tamu
__builtin_rvv_vrsub_vx_ta
__builtin_rvv_vrsub_vx_tuma
withReplyTo
__builtin_rvv_vwaddu_vx_tu
__builtin_rvv_vwaddu_vx_tumu
-fsee
WithCompletion
__builtin_rvv_vwsubu_vv_tuma
__builtin_rvv_vwsubu_vv_tama
__builtin_rvv_vwsubu_vx_tu
WithReplyTo
__builtin_rvv_vwsubu_vx_tamu
__builtin_rvv_vwadd_vv_ta
__builtin_rvv_vwadd_vv_tumu
cancel
__builtin_rvv_vwadd_vx_tu
__builtin_rvv_vwadd_vx_tumu
__builtin_rvv_vwadd_vx_tamu
done
__builtin_rvv_vwsub_vv_tuma
__builtin_rvv_vwsub_vv_tama
-msse3
success
__builtin_rvv_vwsub_vx_tamu
__builtin_rvv_vwaddu_wx_ta
__builtin_rvv_vwaddu_wx_tuma
dispatch_async_and_wait
__builtin_rvv_vwsubu_wv_tu
__builtin_rvv_vwsubu_wv_tumu
__builtin_rvv_vwsubu_wv_tama
dispatch_sync
__builtin_rvv_vwsubu_wx_tuma
__builtin_rvv_vwsubu_wx_tama
__builtin_rvv_vwadd_wv_tu
dispatch_barrier_async
-fmacro-backtrace-limit
dispatch_barrier_async_and_wait
Use SEH style exceptions
dispatch_barrier_sync
__builtin_rvv_vwsub_wv_tu
__builtin_rvv_vwsub_wv_tumu
__builtin_rvv_vwsub_wv_tamu
__builtin_rvv_vwsub_wx_tuma
__builtin_rvv_vwsub_wx_tama
__builtin_rvv_vwcvt_x_x_v_ta
catch (
__builtin_rvv_vwcvt_x_x_v_tamu
__builtin_rvv_vadc_vvm_ta
__builtin_rvv_vadc_vxm_tu
for (
__builtin_rvv_vsbc_vxm_tu
__builtin_rvv_vmadc_vvm
-msse4
goto *
__builtin_rvv_vmsbc_vx
__builtin_rvv_vand_vv_ta
__builtin_rvv_vand_vv_tuma
__builtin_rvv_vand_vx_tu
__builtin_rvv_vand_vx_tumu
__builtin_rvv_vand_vx_tama
consumed
__builtin_rvv_vxor_vv_tuma
__builtin_rvv_vxor_vv_tama
__builtin_rvv_vxor_vx_tu
NSException
__builtin_rvv_vxor_vx_tamu
__builtin_rvv_vor_vv_ta
-fshort-enums
arguments
__builtin_rvv_vor_vx_tu
__builtin_rvv_vor_vx_tumu
__builtin_rvv_vor_vx_tamu
#null
__builtin_rvv_vsll_vv_tuma
__builtin_rvv_vsll_vv_tama
__builtin_rvv_vsll_vx_ta
#ptr
__builtin_rvv_vsll_vx_tamu
__builtin_rvv_vsrl_vv_ta
__builtin_rvv_vsrl_vv_tuma
#lit
__builtin_rvv_vsrl_vx_tu
__builtin_rvv_vsrl_vx_tumu
Set the stack alignment
__builtin_rvv_vsra_vv_tuma
__builtin_rvv_vsra_vv_tama
__builtin_rvv_vsra_vx_tu
 := 
__builtin_rvv_vsra_vx_tamu
__builtin_rvv_vnsrl_wv_ta
__builtin_rvv_vnsrl_wv_tumu
extendNum
__builtin_rvv_vnsrl_wx_tu
__builtin_rvv_vnsrl_wx_tumu
__builtin_rvv_vnsrl_wx_tamu
toFloat
__builtin_rvv_vnsra_wv_tuma
toInt
-fshort-wchar
objToPtr
__builtin_rvv_vnsra_wx_tamu
__builtin_rvv_vncvt_x_x_w_ta
__builtin_rvv_vncvt_x_x_w_tuma
CFG {
__builtin_rvv_vmseq_vv_tumu
__builtin_rvv_vmseq_vv_ma
__builtin_rvv_vmseq_vx
 BB_
__builtin_rvv_vmsne_vv_tumu
__builtin_rvv_vmsne_vv_ma
__builtin_rvv_vmsne_vx_tumu
let _x
__builtin_rvv_vmsltu_vv_tumu
__builtin_rvv_vmsltu_vv_ma
Set the stack probe size
goto 
__builtin_rvv_vmslt_vv_tumu
__builtin_rvv_vmslt_vv_ma
__builtin_rvv_vmslt_vx_tumu
branch (
__builtin_rvv_vmsleu_vv_tumu
__builtin_rvv_vmsleu_vv_ma
__builtin_rvv_vmsleu_vx
return 
__builtin_rvv_vmsle_vv_tumu
__builtin_rvv_vmsle_vv_ma
__builtin_rvv_vmsle_vx_tumu
) then 
__builtin_rvv_vmsgtu_vv_tumu
__builtin_rvv_vmsgtu_vv_ma
-fshow-column
__builtin_rvv_vmsgt_vv_tumu
__builtin_rvv_vmsgt_vv_ma
__builtin_rvv_vmsgt_vx_tumu
wildcard
__builtin_rvv_vmsgeu_vv_tumu
__builtin_rvv_vmsgeu_vv_ma
__builtin_rvv_vwaddu_wv_ta
__builtin_rvv_vwaddu_wv_tamu
__builtin_rvv_vse8_v
__builtin_rvv_vsuxei16_v_m
__builtin_rvv_vmsgeu_vx_mu
__builtin_rvv_vmsge_vv
Use the given reg for addressing the stack-protector guard
__builtin_rvv_vmsge_vx_mu
__builtin_rvv_vminu_vv_ta
__builtin_rvv_vminu_vv_tuma
__builtin_rvv_vminu_vx_tu
__builtin_rvv_vminu_vx_tumu
__builtin_rvv_vminu_vx_tama
__builtin_rvv_vmin_vv_tuma
__builtin_rvv_vmin_vv_tama
__builtin_rvv_vmin_vx_tu
__builtin_rvv_vmin_vx_tama
Which overload candidates to show when overload resolution fails. Defaults to 'all'
__builtin_rvv_vmaxu_vx_tu
__builtin_rvv_vmaxu_vx_tumu
__builtin_rvv_vmaxu_vx_tamu
__builtin_rvv_vmax_vv_tuma
__builtin_rvv_vmax_vv_tama
__builtin_rvv_vmax_vx_ta
__builtin_rvv_vmax_vx_tamu
__builtin_rvv_vmul_vv_ta
__builtin_rvv_vmul_vv_tuma
Increment
__builtin_rvv_vmul_vx_tu
__builtin_rvv_vmul_vx_tumu
Use the given guard (global, tls) for addressing the stack-protector guard
ArraySubscript
__builtin_rvv_vmulh_vv_tuma
__builtin_rvv_vmulh_vv_tama
__builtin_rvv_vmulh_vx_tu
UnsafeBufferUsageAttr
__builtin_rvv_vmulh_vx_tamu
__builtin_rvv_vmulhu_vv_ta
__builtin_rvv_vmulhu_vv_tumu
PointerDereference
__builtin_rvv_vmulhu_vx_tu
__builtin_rvv_vmulhu_vx_tumu
__builtin_rvv_vmulhu_vx_tamu
DerefSimplePtrArithFixable
__builtin_rvv_vmulhsu_vv_tuma
__builtin_rvv_vmulhsu_vv_tama
-fshow-skipped-includes
any_dre
__builtin_rvv_vmulhsu_vx_tuma
__builtin_rvv_vmulhsu_vx_tama
__builtin_rvv_vdivu_vv_tu
ArraySubscriptUnderULC
__builtin_rvv_vdivu_vv_tamu
__builtin_rvv_vdivu_vx_ta
__builtin_rvv_vdivu_vx_tumu
__builtin_rvv_vdiv_vv_tu
__builtin_rvv_vdiv_vv_tumu
__builtin_rvv_vdiv_vv_tamu
.data() + 
__builtin_rvv_vdiv_vx_tuma
__builtin_rvv_vdiv_vx_tama
Force all memory accesses to be aligned (same as mno-unaligned-access)
ParenExpr
__builtin_rvv_vremu_vv_tamu
__builtin_rvv_vremu_vx_ta
__builtin_rvv_vremu_vx_tuma
__builtin_rvv_vrem_vv_tu
__builtin_rvv_vrem_vv_tumu
__builtin_rvv_vrem_vv_tama
ptrAdd
__builtin_rvv_vrem_vx_tuma
__builtin_rvv_vrem_vx_tama
__builtin_rvv_vwmul_vv_tu
call_expr
__builtin_rvv_vwmul_vv_tamu
std::span<
-fshow-source-location
[[clang::unsafe_buffer_usage]] 
__builtin_rvv_vwmulu_vv_tu
__builtin_rvv_vwmulu_vv_tumu
__builtin_rvv_vwmulu_vv_tamu
  return 
__builtin_rvv_vwmulu_vx_tuma
__builtin_rvv_vwmulu_vx_tama
__builtin_rvv_vwmulsu_vv_ta
__builtin_rvv_vwmulsu_vv_tamu
__builtin_rvv_vwmulsu_vx_ta
__builtin_rvv_vwmulsu_vx_tuma
__builtin_rvv_vmacc_vv_ta
__builtin_rvv_vmacc_vv_tumu
Return small structs in registers (PPC32 only)
typeid(
__builtin_rvv_vmacc_vx_tuma
__builtin_rvv_vmacc_vx_tama
__builtin_rvv_vnmsac_vv_ta
<out of lifetime>
__builtin_rvv_vnmsac_vv_tamu
__builtin_rvv_vsuxei8_v
__builtin_rvv_vnmsac_vx_tu
__builtin_rvv_vnmsac_vx_tamu
__builtin_rvv_vmadd_vv_tu
__builtin_rvv_vmadd_vv_tuma
{*new 
__builtin_rvv_vmadd_vx_ta
__builtin_rvv_vmadd_vx_tumu
-fsignaling-math
 + 1
__builtin_rvv_vnmsub_vv_tuma
__builtin_rvv_vnmsub_vv_tama
__builtin_rvv_vnmsub_vx_ta
__builtin_rvv_vnmsub_vx_tamu
__builtin_rvv_vwmaccu_vv_tu
__builtin_rvv_vwmaccu_vv_tumu
__builtin_rvv_vwmaccu_vx_ta
__builtin_rvv_vwmaccu_vx_tumu
__builtin_rvv_vwmaccu_vx_tamu
;{}#@
__builtin_rvv_vwmacc_vv_tuma
__builtin_rvv_vwmacc_vv_tama
-mtargetos=
 types total.
__builtin_rvv_vwmacc_vx_tamu
__builtin_rvv_vwmaccsu_vv_tu
__builtin_rvv_vwmaccsu_vv_tuma
 types, 
__builtin_rvv_vwmaccsu_vx_ta
__builtin_rvv_vwmaccsu_vx_tumu
__builtin_rvv_vwmaccsu_vx_tama
 bytes)
__builtin_rvv_vwmaccus_vx_tuma
__builtin_rvv_vwmaccus_vx_tama
__builtin_rvv_vmerge_vvm_tu
ConstantArray
-findirect-virtual-calls
DependentSizedArray
-fsigned-bitfields
IncompleteArray
__builtin_rvv_vsaddu_vv_tamu
__builtin_rvv_vsaddu_vx_ta
__builtin_rvv_vsaddu_vx_tuma
Atomic
__builtin_rvv_vsadd_vv_tu
__builtin_rvv_vsadd_vv_tumu
__builtin_rvv_vsadd_vv_tama
BTFTagAttributed
__builtin_rvv_vsadd_vx_tuma
__builtin_rvv_vsadd_vx_tama
__builtin_rvv_vssubu_vv_tu
BlockPointer
__builtin_rvv_vssubu_vv_tamu
__builtin_rvv_vssubu_vx_ta
Use static debug run-time
Complex
__builtin_rvv_vssub_vv_tu
__builtin_rvv_vssub_vv_tumu
__builtin_rvv_vssub_vv_tamu
Auto
__builtin_rvv_vssub_vx_tuma
__builtin_rvv_vssub_vx_tama
__builtin_rvv_vaaddu_vv_ta
DependentAddressSpace
__builtin_rvv_vaaddu_vv_tamu
__builtin_rvv_vaaddu_vx_ta
__builtin_rvv_vaaddu_vx_tuma
DependentName
__builtin_rvv_vaadd_vv_tu
__builtin_rvv_vaadd_vv_tumu
char is signed
DependentTemplateSpecialization
__builtin_rvv_vaadd_vx_tuma
__builtin_rvv_vaadd_vx_tama
__builtin_rvv_vasubu_vv_tu
DynamicCountPointer
__builtin_rvv_vasubu_vv_tamu
__builtin_rvv_vasubu_vx_ta
__builtin_rvv_vasubu_vx_tumu
Elaborated
__builtin_rvv_vasub_vv_tu
__builtin_rvv_vasub_vv_tumu
__builtin_rvv_vasub_vv_tamu
FunctionProto
__builtin_rvv_vasub_vx_tuma
__builtin_rvv_vasub_vx_tama
The thread model to use. Defaults to 'posix')
MacroQualified
__builtin_rvv_vsmul_vv_tamu
__builtin_rvv_vsmul_vx_ta
__builtin_rvv_vsmul_vx_tuma
DependentSizedMatrix
__builtin_rvv_vssrl_vv_tu
__builtin_rvv_vssrl_vv_tumu
__builtin_rvv_vssrl_vv_tama
ObjCObjectPointer
__builtin_rvv_vssrl_vx_tuma
__builtin_rvv_vssrl_vx_tama
__builtin_rvv_vssra_vv_tu
ObjCInterface
__builtin_rvv_vssra_vv_tamu
ObjCTypeParam
Use a signed type for wchar_t
PackExpansion
__builtin_rvv_vnclipu_wv_tu
__builtin_rvv_vnclipu_wv_tumu
__builtin_rvv_vnclipu_wv_tamu
Pipe
__builtin_rvv_vnclipu_wx_tuma
__builtin_rvv_vnclipu_wx_tama
__builtin_rvv_vnclip_wv_ta
RValueReference
__builtin_rvv_vnclip_wv_tamu
__builtin_rvv_vnclip_wx_ta
__builtin_rvv_vnclip_wx_tuma
SubstTemplateTypeParm
__builtin_rvv_vfadd_vv_tu
__builtin_rvv_vfadd_vv_tumu
-mtls-direct-seg-refs
Record
__builtin_rvv_vfadd_vf_tuma
__builtin_rvv_vfadd_vf_tama
__builtin_rvv_vfsub_vv_tu
TemplateTypeParm
__builtin_rvv_vfsub_vv_tamu
__builtin_rvv_vfsub_vf_ta
__builtin_rvv_vfsub_vf_tumu
TypeOf
__builtin_rvv_vfrsub_vf_tu
__builtin_rvv_vfrsub_vf_tumu
__builtin_rvv_vfrsub_vf_tamu
UnaryTransform
__builtin_rvv_vfwadd_vv_tuma
__builtin_rvv_vfwadd_vv_tama
-fsingle-precision-constant
Using
__builtin_rvv_vfwadd_vf_tamu
__builtin_rvv_vfwsub_vv_ta
__builtin_rvv_vfwsub_vv_tuma
Vector
__builtin_rvv_vsuxei64_v_m
__builtin_rvv_vfwsub_vf_ta
__builtin_rvv_vfwsub_vf_tumu
Total bytes = 
__builtin_rvv_vfwadd_wv_tu
__builtin_rvv_vfwadd_wv_tumu
__builtin_rvv_vfwadd_wv_tamu
 implicit copy constructors created
__builtin_rvv_vfwadd_wf_tuma
__builtin_rvv_vfwadd_wf_tama
-mtp=
 implicit copy assignment operators created
__builtin_rvv_vfwsub_wv_tamu
__builtin_rvv_vfwsub_wf_ta
__builtin_rvv_vfwsub_wf_tuma
 implicit destructors created
__builtin_rvv_vfmul_vv_tu
__builtin_rvv_vfmul_vv_tumu
__builtin_rvv_vfmul_vv_tama
__uint128_t
__builtin_rvv_vfmul_vf_tuma
__builtin_rvv_vfmul_vf_tama
__builtin_rvv_vfdiv_vv_tu
__NSConstantString_tag
__builtin_rvv_vfdiv_vv_tama
flags
Enable C++14 sized global deallocation functions
__builtin_rvv_vfrdiv_vf_tu
__builtin_rvv_vfrdiv_vf_tumu
__builtin_rvv_vfrdiv_vf_tamu
_swift_rc
__builtin_rvv_vfwmul_vv_tuma
__builtin_rvv_vfwmul_vv_tama
__builtin_rvv_vfwmul_vf_ta
objc_super
__builtin_rvv_vfwmul_vf_tamu
__builtin_rvv_vfmacc_vv_tu
__builtin_rvv_vfmacc_vv_tuma
instancetype
__builtin_rvv_vfmacc_vf_ta
__builtin_rvv_vfmacc_vf_tumu
Mode for reading thread pointer
__builtin_rvv_vfnmacc_vv_tuma
__builtin_rvv_vfnmacc_vv_tama
__builtin_rvv_vfnmacc_vf_ta
objc_object
__builtin_rvv_vfnmacc_vf_tamu
__builtin_rvv_vfmsac_vv_tu
__builtin_rvv_vfmsac_vv_tumu
__builtin_rvv_vfmsac_vf_ta
__builtin_rvv_vfmsac_vf_tumu
__builtin_rvv_vfmsac_vf_tamu
{objc_class=}
__builtin_rvv_vfnmsac_vv_tuma
__builtin_rvv_vfnmsac_vv_tama
Use SjLj style exceptions
__builtin_rvv_vfnmsac_vf_tamu
__builtin_rvv_vfmadd_vv_tu
__builtin_rvv_vfmadd_vv_tuma
__builtin_rvv_vfmadd_vf_ta
__builtin_rvv_vfmadd_vf_tumu
__builtin_rvv_vfmadd_vf_tama
Class
__builtin_rvv_vfnmadd_vv_tuma
__builtin_rvv_vfnmadd_vv_tama
__builtin_rvv_vfnmadd_vf_ta
sse2
__builtin_rvv_vfnmadd_vf_tamu
__builtin_rvv_vfmsub_vv_tu
Only supported on AArch64, PowerPC, RISC-V, SystemZ, and X86
__make_integer_seq
__builtin_rvv_vfmsub_vf_ta
__builtin_rvv_vfmsub_vf_tumu
__builtin_rvv_vfmsub_vf_tamu
__builtin_rvv_vfnmsub_vv_tuma
__builtin_rvv_vfnmsub_vv_tama
__builtin_rvv_vfnmsub_vf_tu
<objc_object>
__builtin_rvv_vfnmsub_vf_tamu
__builtin_rvv_vfwmacc_vv_tu
__builtin_rvv_vfwmacc_vv_tuma
__builtin_rvv_vfwmacc_vf_ta
-fslp-vectorize
__builtin_rvv_vfwnmacc_vv_tuma
__builtin_rvv_vfwnmacc_vv_tama
__builtin_rvv_vfwnmacc_vf_ta
__builtin_rvv_vfwnmacc_vf_tamu
__builtin_rvv_vfwmsac_vv_tu
__builtin_rvv_vfwmsac_vv_tumu
__builtin_rvv_vfwmsac_vf_ta
__builtin_rvv_vfwmsac_vf_tumu
__builtin_rvv_vfwmsac_vf_tamu
cannot yet @encode type %0
__builtin_rvv_vfwnmsac_vv_tuma
__builtin_rvv_vfwnmsac_vv_tama
Specify name of main file output in depfile
__builtin_rvv_vfwnmsac_vf_tamu
__builtin_rvv_vfmin_vv_ta
__builtin_rvv_vfmin_vv_tuma
__gr_top
__builtin_rvv_vfmin_vf_tu
__builtin_rvv_vfmin_vf_tumu
__builtin_rvv_vfmin_vf_tama
__gr_offs
__builtin_rvv_vfmax_vv_tuma
__builtin_rvv_vfmax_vv_tama
__builtin_rvv_vfmax_vf_tu
__builtin_rvv_vfmax_vf_tamu
__builtin_rvv_vfsgnj_vv_ta
-fsmall-block-descriptors
overflow_arg_area
__builtin_rvv_vfsgnj_vf_tu
__builtin_rvv_vfsgnj_vf_tumu
__builtin_rvv_vfsgnj_vf_tamu
gp_offset
__builtin_rvv_vfsgnjn_vv_tuma
__builtin_rvv_vfsgnjn_vv_tama
__builtin_rvv_vfsgnjn_vf_ta
__ap
__builtin_rvv_vfsgnjn_vf_tamu
__builtin_rvv_vfsgnjx_vv_ta
__builtin_rvv_vfsgnjx_vv_tuma
__fpr
__builtin_rvv_vfsgnjx_vf_tu
__builtin_rvv_vfsgnjx_vf_tumu
-muintr
__reg_save_area
__builtin_rvv_vfabs_v_tuma
__builtin_rvv_vfabs_v_tama
__builtin_rvv_vmfeq_vv_tumu
__saved_reg_area_end_pointer
__builtin_rvv_vmfeq_vf_tumu
__builtin_rvv_vmfeq_vf_ma
__builtin_rvv_vmfne_vv
__builtin_ms_va_list
__builtin_rvv_vmfne_vf_tumu
__builtin_rvv_vmfne_vf_ma
__builtin_rvv_vmflt_vv_tumu
address space
-fmath-errno
unqualified
-fspec-constr-count
the global namespace
__builtin_rvv_vmfle_vf_tumu
__builtin_rvv_vmfle_vf_ma
__builtin_rvv_vmfgt_vv_tumu
block literal
__builtin_rvv_vmfgt_vf_tumu
__builtin_rvv_vmfgt_vf_ma
__builtin_rvv_vmfge_vv
method 
__builtin_rvv_vmfge_vf_tumu
__builtin_rvv_vmfge_vf_ma
__builtin_rvv_vfmerge_vfm_tu
' (aka '
__builtin_rvv_vredsum_vs_ta
__builtin_rvv_vredsum_vs_tumu
-munaligned-access
' (vector of 
__builtin_rvv_vredmaxu_vs_tam
__builtin_rvv_vredmax_vs_tu
__builtin_rvv_vredmax_vs_tum
(no argument)
__builtin_rvv_vredminu_vs_tumu
__builtin_rvv_vredminu_vs_tum
__builtin_rvv_vredmin_vs_tu
 != 
__builtin_rvv_vredand_vs_tu
__builtin_rvv_vredand_vs_ta
__builtin_rvv_vredand_vs_tam
(default) template 
__builtin_rvv_vredor_vs_tum
__builtin_rvv_vredor_vs_tam
-fspell-checking-limit
[template 
__builtin_rvv_vwredsum_vs_ta
__builtin_rvv_vwredsum_vs_tumu
__builtin_rvv_vwredsumu_vs_tu
(no qualifiers) 
__builtin_rvv_vwredsumu_vs_tam
__builtin_rvv_vfredmax_vs_tu
__builtin_rvv_vfredmax_vs_tumu
(no qualifiers)
__builtin_rvv_vfredmin_vs_tumu
__builtin_rvv_vfredmin_vs_tum
__builtin_rvv_vfredusum_vs_ta
 * ...]
__builtin_rvv_vfredosum_vs_tu
__builtin_rvv_vfredosum_vs_ta
Enable unsafe floating point atomic instructions (AMDGPU only)
previous
__builtin_rvv_vfwredusum_vs_tum
__builtin_rvv_vfwredusum_vs_tam
__builtin_rvv_vfwredosum_vs_tumu
inner
__builtin_rvv_viota_m_ta
__builtin_rvv_viota_m_tu
__builtin_rvv_viota_m_tuma
<None>
__builtin_rvv_vid_v_tumu
__builtin_rvv_vid_v_tuma
__builtin_rvv_vmv_x_s
TemplateArgumentLoc
__builtin_rvv_vfmv_s_f_tu
LambdaCapture
-fspell-checking
TemplateName
__builtin_rvv_vslideup_vx_tama
__builtin_rvv_vslideup_vx_tamu
__builtin_rvv_vslidedown_vx_tumu
QualType
__builtin_rvv_vslide1up_vx_ta
__builtin_rvv_vslide1up_vx_tu
__builtin_rvv_vslide1up_vx_tuma
AdjustedTypeLoc
__builtin_rvv_vfslide1up_vf_tumu
__builtin_rvv_vfslide1up_vf_tuma
__builtin_rvv_vsse8_v
ArrayTypeLoc
__builtin_rvv_vslide1down_vx_tumu
__builtin_rvv_vslide1down_vx_tuma
-mv62
DependentSizedArrayTypeLoc
__builtin_rvv_vfslide1down_vf_tama
__builtin_rvv_vfslide1down_vf_tamu
__builtin_rvv_vrgather_vv_tumu
VariableArrayTypeLoc
__builtin_rvv_vrgather_vx_ta
__builtin_rvv_vrgather_vx_tu
__builtin_rvv_vrgather_vx_tuma
AttributedTypeLoc
__builtin_rvv_vrgatherei16_vv_tumu
__builtin_rvv_vrgatherei16_vv_tuma
__builtin_rvv_vcompress_vm_tu
BitIntTypeLoc
__builtin_rvv_vsoxei8_v
__builtin_rvv_vsoxei8_v_m
Permit splitting of cold code when optimizing (off by default).
BuiltinTypeLoc
__builtin_rvv_vlseg2e8_v_ta
__builtin_rvv_vlseg2e8_v_tu
__builtin_rvv_vlseg2e8_v_tama
DecltypeTypeLoc
__builtin_rvv_vle16ff_v_tumu
__builtin_rvv_vle16ff_v_tuma
__builtin_rvv_vle16ff_v_tamu
AutoTypeLoc
__builtin_rvv_vle32ff_v_tama
__builtin_rvv_vle32ff_v_tamu
__builtin_rvv_vle64ff_v_tumu
DependentAddressSpaceTypeLoc
__builtin_rvv_vlseg3e8_v_ta
__builtin_rvv_vlseg3e8_v_tu
-mv67
DependentNameTypeLoc
__builtin_rvv_vlseg4e8_v_tumu
__builtin_rvv_vlseg4e8_v_tuma
__builtin_rvv_vlseg5e8_v_ta
DependentTemplateSpecializationTypeLoc
__builtin_rvv_vlseg5e8_v_tama
__builtin_rvv_vlseg5e8_v_tamu
__builtin_rvv_vle8_v_tu
DynamicBoundPointerTypeLoc
__builtin_rvv_vlseg6e8_v_ta
__builtin_rvv_vlseg6e8_v_tu
__builtin_rvv_vlseg6e8_v_tama
DynamicRangePointerTypeLoc
__builtin_rvv_vlseg7e8_v_tu
ElaboratedTypeLoc
Provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF
FunctionTypeLoc
__builtin_rvv_vlseg8e8_v_tama
__builtin_rvv_vlseg8e8_v_tamu
__builtin_rvv_vlseg2e16_v_tumu
FunctionProtoTypeLoc
__builtin_rvv_vlseg3e16_v_ta
__builtin_rvv_vlseg3e16_v_tu
__builtin_rvv_vlseg3e16_v_tuma
MacroQualifiedTypeLoc
__builtin_rvv_vlseg4e16_v_tumu
__builtin_rvv_vlseg4e16_v_tuma
__builtin_rvv_vlseg5e16_v_ta
ConstantMatrixTypeLoc
__builtin_rvv_vlseg5e16_v_tama
__builtin_rvv_vlseg5e16_v_tamu
-mvirt
MemberPointerTypeLoc
__builtin_rvv_vlseg7e16_v_ta
__builtin_rvv_vlseg7e16_v_tu
__builtin_rvv_vlseg7e16_v_tama
ObjCObjectTypeLoc
__builtin_rvv_vlseg8e16_v_tumu
__builtin_rvv_vlseg8e16_v_tuma
__builtin_rvv_vlseg8e16_v_tamu
ObjCTypeParamTypeLoc
__builtin_rvv_vlseg2e32_v_tama
__builtin_rvv_vlseg2e32_v_tamu
__builtin_rvv_vlseg3e32_v_tumu
ParenTypeLoc
__builtin_rvv_vlseg4e32_v_ta
__builtin_rvv_vlseg4e32_v_tu
Enables splitting of the LTO unit
PointerTypeLoc
__builtin_rvv_vlseg5e32_v_tumu
__builtin_rvv_vlseg5e32_v_tuma
__builtin_rvv_vlseg6e32_v_ta
LValueReferenceTypeLoc
__builtin_rvv_vlseg6e32_v_tama
__builtin_rvv_vlseg6e32_v_tamu
__builtin_rvv_vlseg7e32_v_tu
SubstTemplateTypeParmPackTypeLoc
__builtin_rvv_vlseg8e32_v_ta
__builtin_rvv_vlseg8e32_v_tu
__builtin_rvv_vlseg8e32_v_tama
TagTypeLoc
__builtin_rvv_vlseg2e64_v_tumu
__builtin_rvv_vlseg2e64_v_tuma
-mvscale-min=
RecordTypeLoc
__builtin_rvv_vlseg3e64_v_tama
__builtin_rvv_vlseg3e64_v_tamu
__builtin_rvv_vlseg4e64_v_tumu
TemplateTypeParmTypeLoc
__builtin_rvv_vlseg5e64_v_ta
__builtin_rvv_vlseg5e64_v_tu
__builtin_rvv_vlseg5e64_v_tuma
TypeOfTypeLoc
__builtin_rvv_vlseg6e64_v_tumu
__builtin_rvv_vlseg6e64_v_tuma
__builtin_rvv_vlseg7e64_v_ta
UnaryTransformTypeLoc
__builtin_rvv_vlseg7e64_v_tama
UnresolvedUsingTypeLoc
Enable late function splitting using profile information (x86 ELF)
UsingTypeLoc
__builtin_rvv_vlseg3e8ff_v_ta
__builtin_rvv_vlseg3e8ff_v_tu
__builtin_rvv_vlseg3e8ff_v_tama
VectorTypeLoc
__builtin_rvv_vlseg4e8ff_v_tumu
__builtin_rvv_vlseg4e8ff_v_tuma
__builtin_rvv_vlseg4e8ff_v_tamu
TypeLoc
__builtin_rvv_vlseg5e8ff_v_tama
__builtin_rvv_vlseg5e8ff_v_tamu
__builtin_rvv_vlseg6e8ff_v_tumu
CXXCtorInitializer
__builtin_rvv_vlseg7e8ff_v_ta
__builtin_rvv_vlseg7e8ff_v_tu
-mvzeroupper
Decl
__builtin_rvv_vlseg8e8ff_v_tumu
__builtin_rvv_vlseg8e8ff_v_tuma
__builtin_rvv_vlseg2e16ff_v_ta
BlockDecl
__builtin_rvv_vlseg2e16ff_v_tama
__builtin_rvv_vlseg2e16ff_v_tamu
__builtin_rvv_vlseg3e16ff_v_tu
ClassScopeFunctionSpecializationDecl
__builtin_rvv_vlseg4e16ff_v_ta
__builtin_rvv_vlseg4e16ff_v_tu
__builtin_rvv_vlseg4e16ff_v_tama
ExportDecl
__builtin_rvv_vlseg5e16ff_v_tumu
__builtin_rvv_vlseg5e16ff_v_tuma
Use segmented stack
FileScopeAsmDecl
__builtin_rvv_vlseg6e16ff_v_tama
__builtin_rvv_vlseg6e16ff_v_tamu
__builtin_rvv_vlseg7e16ff_v_tumu
FriendTemplateDecl
__builtin_rvv_vlseg8e16ff_v_ta
__builtin_rvv_vlseg8e16ff_v_tu
__builtin_rvv_vlseg8e16ff_v_tuma
LifetimeExtendedTemporaryDecl
__builtin_rvv_vlseg2e32ff_v_tumu
__builtin_rvv_vlseg2e32ff_v_tuma
__builtin_rvv_vlseg3e32ff_v_ta
NamedDecl
__builtin_rvv_vlseg3e32ff_v_tama
__builtin_rvv_vlseg3e32ff_v_tamu
-mwarn-nonportable-cfstrings
UsingDecl
__builtin_rvv_vlseg5e32ff_v_ta
__builtin_rvv_vlseg5e32ff_v_tu
__builtin_rvv_vlseg5e32ff_v_tama
HLSLBufferDecl
__builtin_rvv_vlseg6e32ff_v_tumu
__builtin_rvv_vlseg6e32ff_v_tuma
__builtin_rvv_vlseg6e32ff_v_tamu
NamespaceDecl
__builtin_rvv_vlseg7e32ff_v_tama
__builtin_rvv_vlseg7e32ff_v_tamu
__builtin_rvv_vlseg8e32ff_v_tumu
ObjCCompatibleAliasDecl
-finit-integer=
ObjCContainerDecl
-fstack-check
ObjCCategoryDecl
__builtin_rvv_vlseg3e64ff_v_tumu
__builtin_rvv_vlseg3e64ff_v_tuma
__builtin_rvv_vlseg4e64ff_v_ta
ObjCCategoryImplDecl
__builtin_rvv_vlseg4e64ff_v_tama
__builtin_rvv_vlseg4e64ff_v_tamu
__builtin_rvv_vlseg5e64ff_v_tu
ObjCInterfaceDecl
__builtin_rvv_vlseg6e64ff_v_ta
__builtin_rvv_vlseg6e64ff_v_tu
__builtin_rvv_vlseg6e64ff_v_tama
ObjCMethodDecl
__builtin_rvv_vlseg7e64ff_v_tumu
__builtin_rvv_vlseg7e64ff_v_tuma
-mwatchsimulator-version-min=
TemplateDecl
__builtin_rvv_vlseg8e64ff_v_tama
__builtin_rvv_vlseg8e64ff_v_tamu
__builtin_rvv_vlseg2e8ff_v_tumu
ConceptDecl
__builtin_rvv_vlsseg3e8_v_ta
__builtin_rvv_vlsseg3e8_v_tu
__builtin_rvv_vlsseg3e8_v_tuma
ClassTemplateDecl
__builtin_rvv_vlsseg4e8_v_tumu
__builtin_rvv_vlsseg4e8_v_tuma
__builtin_rvv_vlsseg5e8_v_ta
TypeAliasTemplateDecl
__builtin_rvv_vlsseg5e8_v_tama
__builtin_rvv_vlsseg5e8_v_tamu
-fstack-clash-protection
TemplateTemplateParmDecl
__builtin_rvv_vlsseg7e8_v_ta
__builtin_rvv_vlsseg7e8_v_tu
__builtin_rvv_vlsseg7e8_v_tama
TagDecl
__builtin_rvv_vlsseg8e8_v_tumu
__builtin_rvv_vlsseg8e8_v_tuma
__builtin_rvv_vlsseg8e8_v_tamu
RecordDecl
__builtin_rvv_vlsseg2e16_v_tama
__builtin_rvv_vlsseg2e16_v_tamu
__builtin_rvv_vlsseg2e8_v_tumu
ClassTemplateSpecializationDecl
__builtin_rvv_vlsseg3e16_v_ta
__builtin_rvv_vlsseg3e16_v_tu
-mwidekl
TemplateTypeParmDecl
__builtin_rvv_vlsseg4e16_v_tumu
__builtin_rvv_vlsseg4e16_v_tuma
__builtin_rvv_vlsseg5e16_v_ta
ObjCTypeParamDecl
__builtin_rvv_vlsseg5e16_v_tama
__builtin_rvv_vlsseg5e16_v_tamu
__builtin_rvv_vlsseg6e16_v_tu
TypedefDecl
__builtin_rvv_vlsseg7e16_v_ta
__builtin_rvv_vlsseg7e16_v_tu
__builtin_rvv_vlsseg7e16_v_tama
UnresolvedUsingIfExistsDecl
__builtin_rvv_vlsseg8e16_v_tumu
UsingDirectiveDecl
-fstack-protector-all
UsingPackDecl
__builtin_rvv_vlsseg2e32_v_tama
__builtin_rvv_vlsseg2e32_v_tamu
__builtin_rvv_vlsseg3e32_v_tumu
ConstructorUsingShadowDecl
__builtin_rvv_vlsseg4e32_v_ta
__builtin_rvv_vlsseg4e32_v_tu
__builtin_rvv_vlsseg4e32_v_tuma
BindingDecl
__builtin_rvv_vlsseg5e32_v_tumu
__builtin_rvv_vlsseg5e32_v_tuma
__builtin_rvv_vluxseg2ei8_v_ta
FieldDecl
__builtin_rvv_vluxseg2ei8_v_tama
__builtin_rvv_vluxseg2ei8_v_tamu
-mxgot
ObjCIvarDecl
__builtin_rvv_vlsseg7e32_v_ta
__builtin_rvv_vlsseg7e32_v_tu
__builtin_rvv_vlsseg7e32_v_tama
CXXDeductionGuideDecl
__builtin_rvv_vlsseg8e32_v_tumu
__builtin_rvv_vlsseg8e32_v_tuma
__builtin_rvv_vlsseg8e32_v_tamu
CXXConstructorDecl
__builtin_rvv_vlsseg2e64_v_tama
__builtin_rvv_vlsseg2e64_v_tamu
__builtin_rvv_vlsseg3e64_v_tumu
CXXDestructorDecl
__builtin_rvv_vlsseg4e64_v_ta
__builtin_rvv_vlsseg4e64_v_tu
-fstack-protector-strong
NonTypeTemplateParmDecl
__builtin_rvv_vlsseg5e64_v_tumu
__builtin_rvv_vlsseg5e64_v_tuma
__builtin_rvv_vlsseg6e64_v_ta
DecompositionDecl
__builtin_rvv_vlsseg6e64_v_tama
__builtin_rvv_vlsseg6e64_v_tamu
__builtin_rvv_vlsseg7e64_v_tu
OMPCapturedExprDecl
__builtin_rvv_vlsseg8e64_v_ta
__builtin_rvv_vlsseg8e64_v_tu
__builtin_rvv_vlsseg8e64_v_tama
VarTemplateSpecializationDecl
__builtin_rvv_vle8ff_v_tumu
__builtin_rvv_vle8ff_v_tuma
-mxsaves
EnumConstantDecl
__builtin_rvv_vluxseg3ei8_v_tumu
__builtin_rvv_vluxseg3ei8_v_tuma
__builtin_rvv_vluxseg4ei8_v_ta
MSGuidDecl
__builtin_rvv_vluxseg4ei8_v_tama
__builtin_rvv_vluxseg4ei8_v_tamu
__builtin_rvv_vluxseg5ei8_v_tu
OMPDeclareReductionDecl
__builtin_rvv_vluxseg6ei8_v_ta
__builtin_rvv_vluxseg6ei8_v_tu
__builtin_rvv_vluxseg6ei8_v_tama
UnnamedGlobalConstantDecl
__builtin_rvv_vluxseg7ei8_v_tu
UnresolvedUsingValueDecl
-fstack-protector
OMPAllocateDecl
__builtin_rvv_vluxseg8ei8_v_tama
__builtin_rvv_vluxseg8ei8_v_tamu
__builtin_rvv_vluxseg2ei16_v_tumu
OMPThreadPrivateDecl
__builtin_rvv_vluxseg3ei16_v_ta
__builtin_rvv_vluxseg3ei16_v_tu
__builtin_rvv_vluxseg3ei16_v_tuma
PragmaCommentDecl
__builtin_rvv_vluxseg4ei16_v_tumu
__builtin_rvv_vluxseg4ei16_v_tuma
__builtin_rvv_vluxseg5ei16_v_ta
RequiresExprBodyDecl
__builtin_rvv_vluxseg5ei16_v_tama
__builtin_rvv_vluxseg5ei16_v_tamu
Like -MD, but also implies -E and writes to stdout by default
TranslationUnitDecl
__builtin_rvv_vluxseg7ei16_v_ta
__builtin_rvv_vluxseg7ei16_v_tu
__builtin_rvv_vluxseg7ei16_v_tama
AsmStmt
__builtin_rvv_vluxseg8ei16_v_tumu
__builtin_rvv_vluxseg8ei16_v_tuma
__builtin_rvv_vluxseg8ei16_v_tamu
MSAsmStmt
__builtin_rvv_vluxseg2ei32_v_tama
__builtin_rvv_vluxseg2ei32_v_tamu
__builtin_rvv_vluxseg3ei32_v_tumu
CXXCatchStmt
__builtin_rvv_vluxseg4ei32_v_ta
__builtin_rvv_vluxseg4ei32_v_tu
-fstack-size-section
CXXTryStmt
__builtin_rvv_vluxseg5ei32_v_tumu
__builtin_rvv_vluxseg5ei32_v_tuma
__builtin_rvv_vluxseg6ei32_v_ta
CompoundStmt
__builtin_rvv_vluxseg6ei32_v_tama
__builtin_rvv_vluxseg6ei32_v_tamu
__builtin_rvv_vluxseg7ei32_v_tu
CoreturnStmt
__builtin_rvv_vluxseg8ei32_v_ta
__builtin_rvv_vluxseg8ei32_v_tu
__builtin_rvv_vluxseg8ei32_v_tama
DeclStmt
__builtin_rvv_vluxseg2ei64_v_tumu
__builtin_rvv_vluxseg2ei64_v_tuma
Use relative paths for invoking subcommands
ForStmt
__builtin_rvv_vluxseg3ei64_v_tama
__builtin_rvv_vluxseg3ei64_v_tamu
__builtin_rvv_vluxseg4ei64_v_tumu
IfStmt
__builtin_rvv_vluxseg5ei64_v_ta
__builtin_rvv_vluxseg5ei64_v_tu
__builtin_rvv_vluxseg5ei64_v_tuma
MSDependentExistsStmt
__builtin_rvv_vluxseg6ei64_v_tumu
__builtin_rvv_vluxseg6ei64_v_tuma
__builtin_rvv_vluxseg7ei64_v_ta
OMPCanonicalLoop
__builtin_rvv_vluxseg7ei64_v_tama
OMPExecutableDirective
-fstack-usage
OMPAtomicDirective
__builtin_rvv_vssseg2e8_v
__builtin_rvv_vssseg2e8_v_m
__builtin_rvv_vlse8_v_tumu
OMPCancelDirective
__builtin_rvv_vneg_v_ta
__builtin_rvv_vneg_v_tu
__builtin_rvv_vneg_v_tuma
OMPCriticalDirective
__builtin_rvv_vnot_v_tumu
__builtin_rvv_vnot_v_tuma
__builtin_rvv_vmmv_m
OMPDispatchDirective
__builtin_rvv_vfneg_v_tuma
__builtin_rvv_vfneg_v_tama
Do not include global declarations in code-completion results.
OMPInteropDirective
__builtin_rvv_vwcvtu_x_x_v_tamu
__builtin_rvv_vle16_v_ta
__builtin_rvv_vle16_v_tuma
OMPLoopDirective
__builtin_rvv_vle32_v_tu
__builtin_rvv_vle32_v_tumu
__builtin_rvv_vle32_v_tama
OMPDistributeParallelForDirective
__builtin_rvv_vle64_v_tuma
__builtin_rvv_vle64_v_tama
__builtin_rvv_vse16_v_m
OMPDistributeSimdDirective
__builtin_rvv_vse64_v_m
__builtin_rvv_vlse16_v_ta
-fstandalone-debug
OMPForSimdDirective
__builtin_rvv_vcpop_m_m
__builtin_rvv_vfclass_v_ta
__builtin_rvv_vfclass_v_tuma
OMPMaskedTaskLoopDirective
__builtin_rvv_vfcvt_f_x_v_tu
__builtin_rvv_vfcvt_f_x_v_tumu
__builtin_rvv_vfcvt_f_x_v_tama
OMPMasterTaskLoopDirective
__builtin_rvv_vfcvt_f_xu_v_tuma
__builtin_rvv_vfcvt_f_xu_v_tama
__builtin_rvv_vfcvt_rtz_x_f_v_tu
OMPParallelForDirective
__builtin_rvv_vfcvt_rtz_x_f_v_tamu
__builtin_rvv_vfcvt_rtz_xu_f_v_ta
--no-cuda-gpu-arch=
OMPParallelGenericLoopDirective
__builtin_rvv_vfcvt_x_f_v_tu
__builtin_rvv_vfcvt_x_f_v_tumu
__builtin_rvv_vfcvt_x_f_v_tamu
OMPParallelMaskedTaskLoopSimdDirective
__builtin_rvv_vfcvt_xu_f_v_tuma
__builtin_rvv_vfcvt_xu_f_v_tama
__builtin_rvv_vfirst_m
OMPParallelMasterTaskLoopSimdDirective
__builtin_rvv_vfncvt_f_f_w_tuma
__builtin_rvv_vfncvt_f_f_w_tama
__builtin_rvv_vfncvt_f_x_w_tu
OMPTargetParallelForSimdDirective
-fmax-identifier-length
OMPTargetParallelGenericLoopDirective
-fstrength-reduce
OMPTargetSimdDirective
__builtin_rvv_vfncvt_rod_f_f_w_tu
__builtin_rvv_vfncvt_rod_f_f_w_tumu
__builtin_rvv_vfncvt_rod_f_f_w_tamu
OMPTargetTeamsDistributeParallelForDirective
__builtin_rvv_vfncvt_rtz_x_f_w_tuma
__builtin_rvv_vfncvt_rtz_x_f_w_tama
__builtin_rvv_vfncvt_rtz_xu_f_w_ta
OMPTargetTeamsDistributeSimdDirective
__builtin_rvv_vfncvt_rtz_xu_f_w_tamu
__builtin_rvv_vfncvt_x_f_w_ta
__builtin_rvv_vfncvt_x_f_w_tuma
OMPTaskLoopDirective
__builtin_rvv_vfncvt_xu_f_w_tu
__builtin_rvv_vfncvt_xu_f_w_tumu
--no-cuda-version-check
OMPTeamsDistributeDirective
__builtin_rvv_vfrec7_v_tuma
__builtin_rvv_vfrec7_v_tama
__builtin_rvv_vfrsqrt7_v_tu
OMPTeamsDistributeParallelForSimdDirective
__builtin_rvv_vfrsqrt7_v_tamu
__builtin_rvv_vfsqrt_v_ta
__builtin_rvv_vfsqrt_v_tumu
OMPTeamsGenericLoopDirective
__builtin_rvv_vfwcvt_f_f_v_tu
__builtin_rvv_vfwcvt_f_f_v_tumu
__builtin_rvv_vfwcvt_f_f_v_tamu
OMPTileDirective
__builtin_rvv_vfwcvt_f_x_v_tuma
__builtin_rvv_vfwcvt_f_x_v_tama
-fstrict-enums
OMPMaskedDirective
__builtin_rvv_vfwcvt_f_xu_v_tamu
__builtin_rvv_vfwcvt_rtz_x_f_v_ta
__builtin_rvv_vfwcvt_rtz_x_f_v_tuma
OMPMetaDirective
__builtin_rvv_vfwcvt_rtz_xu_f_v_tu
__builtin_rvv_vfwcvt_rtz_xu_f_v_tumu
__builtin_rvv_vfwcvt_rtz_xu_f_v_tama
OMPParallelDirective
__builtin_rvv_vfwcvt_x_f_v_tuma
__builtin_rvv_vfwcvt_x_f_v_tama
__builtin_rvv_vfwcvt_xu_f_v_tu
OMPParallelMasterDirective
__builtin_rvv_vfwcvt_xu_f_v_tamu
__builtin_rvv_vlm_v
-no-emit-llvm-uselists
OMPScanDirective
__builtin_rvv_vmnor_mm
__builtin_rvv_vmor_mm
__builtin_rvv_vmsbf_m_tumu
OMPSectionsDirective
__builtin_rvv_vmsif_m
__builtin_rvv_vmsif_m_tumu
__builtin_rvv_vmsif_m_mu
OMPTargetDataDirective
__builtin_rvv_vmxnor_mm
__builtin_rvv_vmxor_mm
zzIzIz
OMPTargetEnterDataDirective
__builtin_rvv_vsext_vf2_tu
OMPTargetExitDataDirective
-fstrict-flex-arrays=
OMPTargetParallelDirective
__builtin_rvv_vsext_vf4_tuma
__builtin_rvv_vsext_vf4_tama
__builtin_rvv_vsext_vf8_tu
OMPTargetTeamsDirective
__builtin_rvv_vsext_vf8_tamu
__builtin_rvv_vsm_v
__builtin_rvv_vzext_vf2_ta
OMPTaskDirective
__builtin_rvv_vzext_vf2_tamu
__builtin_rvv_vzext_vf4_ta
__builtin_rvv_vzext_vf4_tuma
OMPTaskwaitDirective
__builtin_rvv_vzext_vf8_tu
__builtin_rvv_vzext_vf8_tumu
-no-finalize-removal
OMPTeamsDirective
__builtin_riscv_orc_b_64
zbb,64bit
__builtin_riscv_ctz_32
ObjCAtFinallyStmt
zbc|zbkc
__builtin_riscv_clmulh
ObjCAtThrowStmt
LiLi
zbkb
__builtin_riscv_unzip_32
ObjCAutoreleasePoolStmt
__builtin_riscv_aes32dsmi_32
__builtin_riscv_aes64ds_64
ReturnStmt
__builtin_riscv_aes64ks2_64
__builtin_riscv_aes32esi_32
__builtin_riscv_aes64es_64
SEHFinallyStmt
zknh
__builtin_riscv_sha256sig1
__builtin_riscv_sha256sum1
SEHTryStmt
__builtin_riscv_sha512sig1h_32
__builtin_riscv_sha512sig1l_32
__builtin_riscv_sha512sig0_64
CaseStmt
Flush denormal floating point values to zero in CUDA/HIP device mode.
DefaultStmt
-fno-cache-compile-job
SwitchStmt
-fstrict-float-cast-overflow
SPIR64
SPIRV32
sx37
AbstractConditionalOperator
ConditionalOperator
ArrayInitIndexExpr
ArraySubscriptExpr
SOFT_FLOAT
AsTypeExpr
__leon__
__ma2100
__ma2450
AtomicExpr
__ma2480
__ma2485
Don't generate implicit SME instructions or mode switch
CompoundAssignOperator
__sparcv9
__arch64__
BoundsCheckExpr
hypersparc
sparclite86x
tsc701
CXXBoolLiteralExpr
niagara2
niagara3
ma2150
CXXTemporaryObjectExpr
ma2x5x
ma2080
-fstrict-overflow
CXXDefaultInitExpr
myriad2.2
myriad2.3
-fno-cache-disable-replay
CXXDependentScopeMemberExpr
-fstrict-return
__builtin_tbegin_nofloat
__builtin_tbeginc
__builtin_non_tx_store
vULi*ULi
__builtin_s390_vlbb
CXXNoexceptExpr
__builtin_s390_vstl
vV16ScUiv*
__builtin_s390_vpdi
CXXPseudoDestructorExpr
__builtin_s390_vpksf
__builtin_s390_vpksfs
__builtin_s390_vpksgs
CXXScalarValueInitExpr
V16UcV8UsV8Usi*
__builtin_s390_vpklsf
V8UsV4UiV4Uii*
CXXThisExpr
V8SsV16Sc
__builtin_s390_vuphh
__builtin_s390_vuplhw
CXXTypeidExpr
__builtin_s390_vuplhh
V4UiV8Us
--no-offload-arch=
CXXUuidofExpr
__builtin_s390_vacq
__builtin_s390_vaccb
__builtin_s390_vaccg
CUDAKernelCallExpr
__builtin_s390_vavgh
__builtin_s390_vavgf
__builtin_s390_vavglb
CXXOperatorCallExpr
V16ScV16ScV16Sci*
__builtin_s390_vceqhs
V4SiV4SiV4Sii*
CastExpr
__builtin_s390_vchhs
__builtin_s390_vchfs
--no-offload-new-driver
BuiltinBitCastExpr
V4SiV4UiV4Uii*
__builtin_s390_vchlgs
__builtin_s390_vclzb
CXXFunctionalCastExpr
__builtin_s390_vctzb
__builtin_s390_vctzh
__builtin_s390_vctzg
CXXAddrspaceCastExpr
V4UiV4UiV4UiV4UiIi
__builtin_s390_verimg
V8UsV8UsUi
CXXDynamicCastExpr
V2ULLiV2ULLiUi
__builtin_s390_verllvb
-fstruct-path-tbaa
CXXStaticCastExpr
__builtin_s390_vgfmg
V16UcV2ULLiV2ULLi
__builtin_s390_vgfmah
ImplicitCastExpr
V16UcV2ULLiV2ULLiV16Uc
__builtin_s390_vmahb
__builtin_s390_vmahf
ChooseExpr
V8SsV16ScV16ScV8Ss
__builtin_s390_vmaeh
__builtin_s390_vmaleb
ConceptSpecializationExpr
__builtin_s390_vmaoh
__builtin_s390_vmaof
-no-pedantic
CoroutineSuspendExpr
__builtin_s390_vmlhb
__builtin_s390_vmlhh
__builtin_s390_vmeh
CoyieldExpr
__builtin_s390_vmlef
__builtin_s390_vmob
__builtin_s390_vmof
DependentCoawaitExpr
__builtin_s390_vpopcth
__builtin_s390_vpopctf
__builtin_s390_vsbcbiq
DesignatedInitExpr
__builtin_s390_vscbif
DesignatedInitUpdateExpr
Ignore errors from conflicting types in function declarations
ExpressionTraitExpr
__builtin_s390_vsrl
__builtin_s390_vsrlb
__builtin_s390_vsumh
FirebloomPointerPromotionExpr
__builtin_s390_vsumqf
V16UcV4UiV4Ui
__builtin_s390_vtm
FloatingLiteral
__builtin_s390_vfaeh
V8UsV8UsV8UsIi
__builtin_s390_vfaef
FullExpr
__builtin_s390_vfaezb
__builtin_s390_vfaezbs
Disable command line arguments round-trip.
ExprWithCleanups
V16UcV16UcV16Uci*
__builtin_s390_vfeeh
__builtin_s390_vfeef
GNUNullExpr
__builtin_s390_vfeezbs
__builtin_s390_vfeezh
__builtin_s390_vfeezf
GetBoundExpr
__builtin_s390_vfenehs
__builtin_s390_vfenef
__builtin_s390_vfenezbs
ImplicitValueInitExpr
__builtin_s390_vfenezfs
__builtin_s390_vistrb
Control emission of Swift async extended frame info
IntegerLiteral
__builtin_s390_vistrfs
V4UiV4Uii*
V16UcV16UcV16UcV16UcIii*
MSPropertyRefExpr
__builtin_s390_vstrcf
__builtin_s390_vstrcfs
__builtin_s390_vstrczb
MaterializeSequenceExpr
__builtin_s390_vstrczfs
__builtin_s390_vfcedbs
__builtin_s390_vfchedbs
MatrixSubscriptExpr
__builtin_s390_vflpdb
__builtin_s390_vfmadb
Turn off struct-path aware Type Based Alias Analysis
NoInitExpr
__builtin_s390_vbperm
__builtin_s390_vmslg
V2dV2dV2dIi
OMPArrayShapingExpr
__builtin_s390_vfcesbs
V4SiV4fV4fi*
__builtin_s390_vfchesbs
ObjCAvailabilityCheckExpr
__builtin_s390_vfminsb
__builtin_s390_vflnsb
__builtin_s390_vfmssb
ObjCEncodeExpr
__builtin_s390_vftcisb
ObjCIndirectCopyRestoreExpr
-fsycl-is-device
ObjCIsaExpr
__builtin_s390_vstrsf
V16UcV4UiV4UiV16Uci*
__builtin_s390_vstrszf
ObjCMessageExpr
__builtin_s390_vclfnhs
V4fV8UsIi
__builtin_s390_vcrnfs
ObjCArrayLiteral
arch8
arch9
arch12
ObjCDictionaryLiteral
__s390x__
__zarch__
Generate code for SYCL device.
ObjCPropertyRefExpr
-finit-real=
ObjCProtocolExpr
ObjCSelectorExpr
__TCE_V1__
tcele
osx.cocoa.Dealloc
__builtin_ve_vl_pack_f32a
ULifC*
__builtin_ve_vl_extract_vm512l
__builtin_ve_vl_insert_vm512u
__builtin_ve_vl_vld_vssl
OverloadExpr
__builtin_ve_vl_vldnc_vssl
__builtin_ve_vl_vldnc_vssvl
__builtin_ve_vl_vldu_vssvl
UnresolvedMemberExpr
__builtin_ve_vl_vldlsxnc_vssl
__builtin_ve_vl_vldlsxnc_vssvl
__builtin_ve_vl_vldlzxnc_vssl
ParenExpr
__builtin_ve_vl_vld2dnc_vssl
__builtin_ve_vl_vld2dnc_vssvl
__builtin_ve_vl_vldu2d_vssvl
PredefinedBoundsCheckExpr
__builtin_ve_vl_vldl2dsxnc_vssl
__builtin_ve_vl_vldl2dsxnc_vssvl
__builtin_ve_vl_vldl2dzxnc_vssl
PseudoObjectExpr
__builtin_ve_vl_vst_vssml
vV256dLUiv*V256bUi
Disable builtin #include directories
RequiresExpr
__builtin_ve_vl_vstu_vssl
__builtin_ve_vl_vstu_vssml
__builtin_ve_vl_vstuot_vssl
ShuffleVectorExpr
__builtin_ve_vl_vstl_vssl
__builtin_ve_vl_vstl_vssml
__builtin_ve_vl_vstlnc_vssml
SourceLocExpr
__builtin_ve_vl_vst2d_vssl
__builtin_ve_vl_vst2d_vssml
__builtin_ve_vl_vst2dot_vssl
StringLiteral
__builtin_ve_vl_vstu2d_vssl
__builtin_ve_vl_vstu2d_vssml
-fsycl
SubstNonTypeTemplateParmPackExpr
__builtin_ve_vl_vstl2d_vssl
__builtin_ve_vl_vstl2d_vssml
__builtin_ve_vl_vstl2dot_vssl
TerminatedByToIndexableExpr
__builtin_ve_vl_pfchv_ssl
vLivC*Ui
__builtin_ve_vl_lsv_vvss
TypoExpr
dV256dUi
__builtin_ve_vl_lvss_svs
V256bV256bLUiLUi
UnaryOperator
LUiV256bLUi
__builtin_ve_vl_svm_sMs
-nocudalib
LabelStmt
V256ddV256bV256dUi
__builtin_ve_vl_vbrdl_vsl
V256dLiV256dUi
Type
V256dfUi
__builtin_ve_vl_vbrds_vsvl
__builtin_ve_vl_vbrds_vsmvl
DecayedType
V256diV256dUi
__builtin_ve_vl_vbrdw_vsmvl
V256dLUiUi
ConstantArrayType
V256dLUiV512bV256dUi
__builtin_ve_vl_vmv_vsvl
-fsymbol-partition=
IncompleteArrayType
V256dV256dV256dUi
__builtin_ve_vl_vaddul_vvvvl
__builtin_ve_vl_vaddul_vsvvl
AtomicType
__builtin_ve_vl_vaddul_vsvmvl
V256dLUiV256dV256bV256dUi
__builtin_ve_vl_vadduw_vvvvl
BTFTagAttributedType
__builtin_ve_vl_pvaddu_vvvl
__builtin_ve_vl_pvaddu_vvvvl
__builtin_ve_vl_pvaddu_vvvMvl
BlockPointerType
__builtin_ve_vl_vaddswsx_vvvl
__builtin_ve_vl_vaddswsx_vvvvl
-nogpuinc
ComplexType
__builtin_ve_vl_vaddswzx_vvvl
__builtin_ve_vl_vaddswzx_vvvvl
__builtin_ve_vl_vaddswzx_vvvmvl
DeducedType
__builtin_ve_vl_pvadds_vsvl
__builtin_ve_vl_pvadds_vsvvl
__builtin_ve_vl_pvadds_vsvMvl
DeducedTemplateSpecializationType
V256dLiV256dV256dUi
__builtin_ve_vl_vaddsl_vvvmvl
__builtin_ve_vl_vsubul_vvvl
DependentBitIntType
__builtin_ve_vl_vsubul_vvvmvl
DependentNameType
Run the preprocessor, parser and semantic analysis stages
DependentSizedExtVectorType
__builtin_ve_vl_pvsubu_vvvl
__builtin_ve_vl_pvsubu_vvvvl
__builtin_ve_vl_pvsubu_vvvMvl
DependentVectorType
__builtin_ve_vl_vsubswsx_vsvl
__builtin_ve_vl_vsubswsx_vsvvl
__builtin_ve_vl_vsubswsx_vsvmvl
DynamicCountPointerType
__builtin_ve_vl_vsubswzx_vvvmvl
__builtin_ve_vl_vsubswzx_vsvmvl
__builtin_ve_vl_pvsubs_vsvl
ElaboratedType
__builtin_ve_vl_vsubsl_vvvl
__builtin_ve_vl_vsubsl_vvvvl
-nohipwrapperinc
FunctionNoProtoType
__builtin_ve_vl_vmulul_vsvl
__builtin_ve_vl_vmulul_vsvvl
__builtin_ve_vl_vmuluw_vvvl
InjectedClassNameType
__builtin_ve_vl_vmuluw_vvvmvl
__builtin_ve_vl_vmuluw_vsvmvl
__builtin_ve_vl_vmulswsx_vvvvl
MatrixType
__builtin_ve_vl_vmulswzx_vvvl
__builtin_ve_vl_vmulswzx_vvvvl
__builtin_ve_vl_vmulswzx_vvvmvl
DependentSizedMatrixType
__builtin_ve_vl_vmulsl_vsvl
__builtin_ve_vl_vmulsl_vsvvl
Build this module as a system module. Only used with -emit-module
ObjCObjectPointerType
__builtin_ve_vl_vdivul_vvvl
__builtin_ve_vl_vdivul_vvvvl
__builtin_ve_vl_vdivul_vvvmvl
ObjCInterfaceType
__builtin_ve_vl_vdivuw_vsvl
__builtin_ve_vl_vdivuw_vsvvl
__builtin_ve_vl_vdivuw_vsvmvl
PackExpansionType
__builtin_ve_vl_vdivul_vvsmvl
V256dV256dLUiV256bV256dUi
__builtin_ve_vl_vdivuw_vvsvl
PipeType
__builtin_ve_vl_vdivswsx_vvvl
__builtin_ve_vl_vdivswsx_vvvvl
-nomultidefs
ReferenceType
__builtin_ve_vl_vdivswzx_vsvl
__builtin_ve_vl_vdivswzx_vsvvl
__builtin_ve_vl_vdivswsx_vvsl
RValueReferenceType
__builtin_ve_vl_vdivswsx_vvsmvl
V256dV256diV256bV256dUi
__builtin_ve_vl_vdivswzx_vvsvl
SubstTemplateTypeParmType
__builtin_ve_vl_vdivsl_vsvvl
__builtin_ve_vl_vdivsl_vvvmvl
V256dV256dLiUi
EnumType
__builtin_ve_vl_vdivsl_vvsmvl
RecordType
-ftabstop=
TemplateSpecializationType
__builtin_ve_vl_vcmpuw_vvvvl
__builtin_ve_vl_vcmpuw_vsvl
__builtin_ve_vl_vcmpuw_vsvmvl
TypeOfExprType
__builtin_ve_vl_pvcmpu_vsvvl
__builtin_ve_vl_pvcmpu_vvvMvl
__builtin_ve_vl_vcmpswsx_vvvl
TypedefType
__builtin_ve_vl_vcmpswsx_vsvmvl
__builtin_ve_vl_vcmpswzx_vvvl
__builtin_ve_vl_vcmpswzx_vsvvl
UnresolvedUsingType
__builtin_ve_vl_pvcmps_vvvvl
__builtin_ve_vl_pvcmps_vsvl
-noseglinkedit
ValueTerminatedType
__builtin_ve_vl_vcmpsl_vsvvl
__builtin_ve_vl_vcmpsl_vvvmvl
__builtin_ve_vl_vmaxswsx_vvvvl
ExtVectorType
__builtin_ve_vl_vmaxswsx_vsvmvl
__builtin_ve_vl_vmaxswzx_vvvl
__builtin_ve_vl_vmaxswzx_vsvl
OMPAcqRelClause
__builtin_ve_vl_pvmaxs_vvvvl
__builtin_ve_vl_pvmaxs_vsvl
__builtin_ve_vl_pvmaxs_vsvMvl
OMPAffinityClause
__builtin_ve_vl_vminswsx_vsvvl
__builtin_ve_vl_vminswsx_vvvmvl
Set the tab stop distance.
OMPAlignedClause
__builtin_ve_vl_vminswzx_vsvmvl
__builtin_ve_vl_pvmins_vvvl
__builtin_ve_vl_pvmins_vsvvl
OMPAllocatorClause
__builtin_ve_vl_vmaxsl_vvvvl
__builtin_ve_vl_vmaxsl_vsvl
__builtin_ve_vl_vmaxsl_vvvmvl
OMPBindClause
__builtin_ve_vl_vminsl_vsvvl
__builtin_ve_vl_vminsl_vvvmvl
__builtin_ve_vl_vand_vvvvl
OMPCollapseClause
__builtin_ve_vl_vand_vsvmvl
__builtin_ve_vl_pvand_vvvl
-nostdinc
OMPCopyprivateClause
__builtin_ve_vl_vor_vvvvl
__builtin_ve_vl_vor_vsvl
__builtin_ve_vl_vor_vsvmvl
OMPDefaultClause
__builtin_ve_vl_pvor_vsvvl
__builtin_ve_vl_pvor_vvvMvl
__builtin_ve_vl_vxor_vvvl
OMPDependClause
__builtin_ve_vl_vxor_vsvmvl
__builtin_ve_vl_pvxor_vvvl
__builtin_ve_vl_pvxor_vsvvl
OMPDestroyClause
__builtin_ve_vl_veqv_vvvvl
OMPDetachClause
Enable availability checks for the target variant platform
OMPDeviceClause
__builtin_ve_vl_pveqv_vsvvl
__builtin_ve_vl_pveqv_vvvMvl
V256dV256dUi
OMPDynamicAllocatorsClause
__builtin_ve_vl_pvldzlo_vvl
__builtin_ve_vl_pvldzlo_vvvl
__builtin_ve_vl_pvldzup_vvl
OMPFilterClause
__builtin_ve_vl_pvldz_vvMvl
V256dV256dV512bV256dUi
__builtin_ve_vl_vpcnt_vvmvl
OMPFirstprivateClause
__builtin_ve_vl_pvpcntup_vvl
__builtin_ve_vl_pvpcntup_vvvl
-nostdsysteminc
OMPFromClause
__builtin_ve_vl_vbrv_vvmvl
__builtin_ve_vl_pvbrvlo_vvl
__builtin_ve_vl_pvbrvup_vvl
OMPGrainsizeClause
__builtin_ve_vl_pvbrv_vvvl
__builtin_ve_vl_pvbrv_vvMvl
V256dUi
OMPHintClause
__builtin_ve_vl_pvsequp_vvl
__builtin_ve_vl_pvseq_vl
__builtin_ve_vl_vsll_vvvvl
OMPInReductionClause
__builtin_ve_vl_vsll_vvsmvl
__builtin_ve_vl_pvsll_vvvl
-ftemplate-backtrace-limit
OMPInitClause
__builtin_ve_vl_vsrl_vvvl
__builtin_ve_vl_vsrl_vvvvl
__builtin_ve_vl_vsrl_vvvmvl
OMPLastprivateClause
__builtin_ve_vl_pvsrl_vvsl
__builtin_ve_vl_pvsrl_vvsvl
__builtin_ve_vl_pvsrl_vvsMvl
OMPMapClause
__builtin_ve_vl_vslawsx_vvvmvl
__builtin_ve_vl_vslawsx_vvsmvl
__builtin_ve_vl_vslawzx_vvsl
OMPNogroupClause
__builtin_ve_vl_pvsla_vvvl
__builtin_ve_vl_pvsla_vvvvl
OMPNocontextClause
__builtin_ve_vl_vslal_vvsl
__builtin_ve_vl_vslal_vvsvl
__builtin_ve_vl_vsrawsx_vvvl
OMPNovariantsClause
__builtin_ve_vl_vsrawsx_vvvmvl
__builtin_ve_vl_vsrawsx_vvsmvl
__builtin_ve_vl_vsrawzx_vvvvl
OMPNumTeamsClause
__builtin_ve_vl_pvsra_vvvl
__builtin_ve_vl_pvsra_vvvvl
__builtin_ve_vl_pvsra_vvvMvl
OMPOrderClause
__builtin_ve_vl_vsral_vvvvl
OMPOrderedClause
-ftemplate-depth-
OMPPartialClause
__builtin_ve_vl_vsfa_vvssmvl
V256dV256dLUiLUiV256bV256dUi
__builtin_ve_vl_vfaddd_vsvl
OMPPrivateClause
__builtin_ve_vl_vfaddd_vsvmvl
V256ddV256dV256bV256dUi
__builtin_ve_vl_vfadds_vvvvl
OMPReadClause
__builtin_ve_vl_vfadds_vsvmvl
V256dfV256dV256bV256dUi
__builtin_ve_vl_pvfadd_vsvl
OMPRelaxedClause
__builtin_ve_vl_vfsubd_vvvl
__builtin_ve_vl_vfsubd_vvvvl
Optimize for speed (like /Og /Oi /Ot /Oy /Ob2 /GF /Gy)
OMPReverseOffloadClause
__builtin_ve_vl_vfsubs_vsvl
__builtin_ve_vl_vfsubs_vsvvl
__builtin_ve_vl_pvfsub_vvvl
OMPScheduleClause
__builtin_ve_vl_pvfsub_vvvMvl
__builtin_ve_vl_pvfsub_vsvMvl
__builtin_ve_vl_vfmuld_vvvvl
OMPSharedClause
__builtin_ve_vl_vfmuls_vvvl
__builtin_ve_vl_vfmuls_vvvvl
__builtin_ve_vl_vfmuls_vvvmvl
OMPSimdlenClause
__builtin_ve_vl_pvfmul_vsvl
__builtin_ve_vl_pvfmul_vsvvl
-ftemplate-depth
OMPTaskReductionClause
__builtin_ve_vl_vfdivd_vvvmvl
__builtin_ve_vl_vfdivd_vsvmvl
__builtin_ve_vl_vfdivs_vsvl
OMPThreadsClause
__builtin_ve_vl_vfsqrtd_vvl
__builtin_ve_vl_vfsqrtd_vvvl
__builtin_ve_vl_vfsqrts_vvvl
OMPUnifiedAddressClause
__builtin_ve_vl_vfcmpd_vvvmvl
__builtin_ve_vl_vfcmpd_vsvmvl
__builtin_ve_vl_vfcmps_vsvl
OMPUntiedClause
__builtin_ve_vl_pvfcmp_vvvl
__builtin_ve_vl_pvfcmp_vvvvl
/Ob1
OMPUseClause
__builtin_ve_vl_vfmaxd_vsvl
__builtin_ve_vl_vfmaxd_vsvvl
__builtin_ve_vl_vfmaxs_vvvl
OMPUseDevicePtrClause
__builtin_ve_vl_vfmaxs_vvvmvl
__builtin_ve_vl_vfmaxs_vsvmvl
__builtin_ve_vl_pvfmax_vvvvl
OMPWriteClause
__builtin_ve_vl_vfmind_vvvl
__builtin_ve_vl_vfmind_vvvvl
__builtin_ve_vl_vfmind_vvvmvl
AddressSpaceAttr
__builtin_ve_vl_vfmins_vsvl
AnnotateTypeAttr
-fterminated-vtables
ArmMveStrictPolymorphismAttr
__builtin_ve_vl_pvfmin_vvvMvl
__builtin_ve_vl_pvfmin_vsvMvl
V256dV256dV256dV256dV256dUi
ArmPreservesZAAttr
__builtin_ve_vl_vfmadd_vvsvl
V256dV256ddV256dUi
V256dV256ddV256dV256dUi
ArmStreamingAttr
__builtin_ve_vl_vfmadd_vvsvmvl
V256dV256ddV256dV256bV256dUi
__builtin_ve_vl_vfmads_vsvvl
BTFTypeTagAttr
V256dV256dfV256dUi
__builtin_ve_vl_vfmads_vvsvvl
-ObjC++
NoDerefAttr
__builtin_ve_vl_pvfmad_vvvvl
__builtin_ve_vl_pvfmad_vvvvvl
V256dLUiV256dV256dV256dUi
ObjCInertUnsafeUnretainedAttr
__builtin_ve_vl_pvfmad_vvvvMvl
V256dV256dV256dV256dV512bV256dUi
V256dLUiV256dV256dV512bV256dUi
OpenCLConstantAddressSpaceAttr
__builtin_ve_vl_vfmsbd_vsvvl
__builtin_ve_vl_vfmsbd_vsvvvl
__builtin_ve_vl_vfmsbd_vvvvmvl
OpenCLGlobalAddressSpaceAttr
__builtin_ve_vl_vfmsbs_vvvvvl
__builtin_ve_vl_vfmsbs_vsvvl
-ftest-module-file-extension=
OpenCLGlobalHostAddressSpaceAttr
__builtin_ve_vl_pvfmsb_vvvvl
__builtin_ve_vl_pvfmsb_vvvvvl
__builtin_ve_vl_pvfmsb_vvsvl
OpenCLPrivateAddressSpaceAttr
__builtin_ve_vl_pvfmsb_vvsvMvl
__builtin_ve_vl_vfnmadd_vvvvl
__builtin_ve_vl_vfnmadd_vsvvl
Ptr32Attr
__builtin_ve_vl_vfnmadd_vsvvmvl
__builtin_ve_vl_vfnmadd_vvsvmvl
__builtin_ve_vl_vfnmads_vsvvl
PtrAutoAttrAttr
__builtin_ve_vl_vfnmads_vvvvmvl
__builtin_ve_vl_vfnmads_vsvvmvl
-objcmt-allowlist-dir-path=
SPtrAttr
__builtin_ve_vl_pvfnmad_vvsvvl
__builtin_ve_vl_pvfnmad_vvvvMvl
__builtin_ve_vl_vfnmsbd_vvvvl
TypeNullUnspecifiedAttr
__builtin_ve_vl_vfnmsbd_vvsvl
__builtin_ve_vl_vfnmsbd_vvsvvl
__builtin_ve_vl_vfnmsbd_vsvvmvl
TypeNullableResultAttr
__builtin_ve_vl_vfnmsbs_vsvvvl
__builtin_ve_vl_vfnmsbs_vvsvl
__builtin_ve_vl_vfnmsbs_vsvvmvl
XnuUsageSemanticsAttr
Specify the maximum alignment to enforce on pointers lacking an explicit alignment
FallThroughAttr
-fthin-link-bitcode=
LikelyAttr
__builtin_ve_vl_vrcpd_vvvl
__builtin_ve_vl_vrcps_vvl
__builtin_ve_vl_pvrcp_vvvl
OpenCLUnrollHintAttr
__builtin_ve_vl_vrsqrts_vvvl
__builtin_ve_vl_pvrsqrt_vvl
__builtin_ve_vl_vrsqrtdnex_vvl
UnlikelyAttr
__builtin_ve_vl_pvrsqrtnex_vvvl
__builtin_ve_vl_vcvtwdsx_vvl
__builtin_ve_vl_vcvtwdsxrz_vvl
AnalyzerSuppressAttr
__builtin_ve_vl_vcvtwdzx_vvvl
__builtin_ve_vl_vcvtwdzx_vvmvl
-objcmt-migrate-all
NoMergeAttr
__builtin_ve_vl_vcvtwssxrz_vvl
__builtin_ve_vl_vcvtwssxrz_vvvl
__builtin_ve_vl_vcvtwszx_vvvl
AArch64VectorPcsAttr
__builtin_ve_vl_vcvtwszxrz_vvmvl
__builtin_ve_vl_pvcvtws_vvl
__builtin_ve_vl_pvcvtws_vvMvl
AcquireHandleAttr
__builtin_ve_vl_vcvtld_vvvl
__builtin_ve_vl_vcvtld_vvmvl
__builtin_ve_vl_vcvtldrz_vvmvl
CDeclAttr
__builtin_ve_vl_vcvtsw_vvvl
__builtin_ve_vl_pvcvtsw_vvl
-fthinlto-index=
IntelOclBiccAttr
__builtin_ve_vl_vcvtsd_vvvl
__builtin_ve_vl_vmrg_vvvml
__builtin_ve_vl_vmrg_vsvml
MSABIAttr
V256dV256dV256dV512bUi
__builtin_ve_vl_vmrgw_vvvMvl
V256dUiV256dV512bUi
ObjCOwnershipAttr
__builtin_ve_vl_vshf_vvvsvl
V256dV256dV256dLUiV256dUi
__builtin_ve_vl_vfmklat_ml
PcsAttr
V512bUi
__builtin_ve_vl_pvfmkaf_Ml
-objcmt-migrate-designated-init
PreserveMostAttr
__builtin_ve_vl_vfmklne_mvl
__builtin_ve_vl_vfmklne_mvml
__builtin_ve_vl_vfmklge_mvl
StdCallAttr
__builtin_ve_vl_vfmklnum_mvl
__builtin_ve_vl_vfmklnum_mvml
__builtin_ve_vl_vfmklnan_mvml
SwiftCallAttr
__builtin_ve_vl_vfmklnenan_mvl
__builtin_ve_vl_vfmklnenan_mvml
__builtin_ve_vl_vfmklgenan_mvl
ThisCallAttr
__builtin_ve_vl_vfmkwgt_mvl
VectorCallAttr
-fthreadsafe-statics
SwiftAsyncContextAttr
__builtin_ve_vl_vfmkwge_mvl
__builtin_ve_vl_vfmkwge_mvml
__builtin_ve_vl_vfmkwnum_mvl
SwiftErrorResultAttr
__builtin_ve_vl_vfmkwgtnan_mvl
__builtin_ve_vl_vfmkwgtnan_mvml
__builtin_ve_vl_vfmkwltnan_mvml
AnnotateAttr
__builtin_ve_vl_vfmkwgenan_mvl
__builtin_ve_vl_vfmkwgenan_mvml
__builtin_ve_vl_pvfmkwlogt_mvl
CarriesDependencyAttr
__builtin_ve_vl_pvfmkwlolt_mvl
__builtin_ve_vl_pvfmkwuplt_mvl
-objcmt-migrate-literals
NonNullAttr
__builtin_ve_vl_pvfmkwloeq_mvl
__builtin_ve_vl_pvfmkwupeq_mvl
__builtin_ve_vl_pvfmkwloge_mvl
PassObjectSizeAttr
__builtin_ve_vl_pvfmkwlole_mvl
__builtin_ve_vl_pvfmkwuple_mvl
__builtin_ve_vl_pvfmkwuple_mvml
UseHandleAttr
__builtin_ve_vl_pvfmkwlonan_mvl
__builtin_ve_vl_pvfmkwupnan_mvl
__builtin_ve_vl_pvfmkwlogtnan_mvl
AMDGPUFlatWorkGroupSizeAttr
__builtin_ve_vl_pvfmkwloltnan_mvl
__builtin_ve_vl_pvfmkwupltnan_mvl
(For new pass manager) 'per-pass': one report for each pass; 'per-pass-run': one report for each pass invocation
AMDGPUNumVGPRAttr
__builtin_ve_vl_pvfmkwloeqnan_mvl
__builtin_ve_vl_pvfmkwupeqnan_mvl
__builtin_ve_vl_pvfmkwlogenan_mvl
ARMInterruptAttr
__builtin_ve_vl_pvfmkwlolenan_mvl
__builtin_ve_vl_pvfmkwuplenan_mvl
__builtin_ve_vl_pvfmkwuplenan_mvml
AVRSignalAttr
__builtin_ve_vl_pvfmkwlt_Mvl
__builtin_ve_vl_pvfmkwlt_MvMl
__builtin_ve_vl_pvfmkweq_Mvl
AcquiredAfterAttr
__builtin_ve_vl_pvfmkwle_Mvl
__builtin_ve_vl_pvfmkwle_MvMl
-objcmt-migrate-property-dot-syntax
AlignMac68kAttr
__builtin_ve_vl_pvfmkwltnan_Mvl
__builtin_ve_vl_pvfmkwltnan_MvMl
__builtin_ve_vl_pvfmkweqnan_Mvl
AlignedAttr
__builtin_ve_vl_pvfmkwlenan_Mvl
__builtin_ve_vl_pvfmkwlenan_MvMl
__builtin_ve_vl_vfmkdgt_mvml
AllocSizeAttr
__builtin_ve_vl_vfmkdeq_mvl
__builtin_ve_vl_vfmkdeq_mvml
__builtin_ve_vl_vfmkdle_mvl
AnalyzerNoReturnAttr
__builtin_ve_vl_vfmkdnum_mvml
AnyX86InterruptAttr
-ftime-report
AnyX86NoCallerSavedRegistersAttr
__builtin_ve_vl_vfmkdeqnan_mvl
__builtin_ve_vl_vfmkdeqnan_mvml
__builtin_ve_vl_vfmkdlenan_mvl
ArgumentWithTypeTagAttr
__builtin_ve_vl_vfmkslt_mvl
__builtin_ve_vl_vfmkslt_mvml
__builtin_ve_vl_vfmksne_mvml
ArmLocallyStreamingAttr
__builtin_ve_vl_vfmksle_mvl
__builtin_ve_vl_vfmksle_mvml
__builtin_ve_vl_vfmksnan_mvl
AsmLabelAttr
__builtin_ve_vl_vfmksltnan_mvl
__builtin_ve_vl_vfmksltnan_mvml
-objcmt-migrate-protocol-conformance
AssertExclusiveLockAttr
__builtin_ve_vl_vfmkslenan_mvl
__builtin_ve_vl_vfmkslenan_mvml
__builtin_ve_vl_pvfmkslogt_mvml
AssumeAlignedAttr
__builtin_ve_vl_pvfmkslolt_mvml
__builtin_ve_vl_pvfmksuplt_mvml
__builtin_ve_vl_pvfmksupne_mvl
AvailabilityAttr
__builtin_ve_vl_pvfmksloeq_mvml
__builtin_ve_vl_pvfmksupeq_mvml
__builtin_ve_vl_pvfmksloge_mvml
BTFDeclTagAttr
__builtin_ve_vl_pvfmkslole_mvml
__builtin_ve_vl_pvfmksuple_mvml
Minimum time granularity (in microseconds) traced by time profiler
BuiltinAttr
__builtin_ve_vl_pvfmkslonan_mvml
__builtin_ve_vl_pvfmksupnan_mvml
__builtin_ve_vl_pvfmkslogtnan_mvml
CFAuditedTransferAttr
__builtin_ve_vl_pvfmksloltnan_mvml
__builtin_ve_vl_pvfmksupltnan_mvml
__builtin_ve_vl_pvfmksupnenan_mvl
CFICanonicalJumpTableAttr
__builtin_ve_vl_pvfmksloeqnan_mvml
__builtin_ve_vl_pvfmksupeqnan_mvml
__builtin_ve_vl_pvfmkslogenan_mvml
CFReturnsRetainedAttr
__builtin_ve_vl_pvfmkslolenan_mvml
__builtin_ve_vl_pvfmksuplenan_mvml
-objcmt-migrate-readwrite-property
CPUDispatchAttr
__builtin_ve_vl_pvfmkseq_Mvl
__builtin_ve_vl_pvfmkseq_MvMl
__builtin_ve_vl_pvfmksle_Mvl
CUDAConstantAttr
__builtin_ve_vl_pvfmksnan_Mvl
__builtin_ve_vl_pvfmksnan_MvMl
__builtin_ve_vl_pvfmksgtnan_MvMl
CUDADeviceBuiltinSurfaceTypeAttr
__builtin_ve_vl_pvfmkseqnan_Mvl
__builtin_ve_vl_pvfmkseqnan_MvMl
__builtin_ve_vl_pvfmkslenan_Mvl
CUDAGlobalAttr
V256dV256dV256bUi
CUDAHostAttr
Similar to -ftime-trace. Specify the JSON file or a directory which will contain the JSON file
CUDAInvalidTargetAttr
__builtin_ve_vl_vfsums_vvml
__builtin_ve_vl_vrmaxswfstsx_vvl
__builtin_ve_vl_vrmaxswlstsx_vvvl
CUDASharedAttr
__builtin_ve_vl_vrmaxswlstzx_vvvl
__builtin_ve_vl_vrminswfstsx_vvl
__builtin_ve_vl_vrminswlstsx_vvl
CallableWhenAttr
__builtin_ve_vl_vrminswlstzx_vvvl
__builtin_ve_vl_vrmaxslfst_vvl
__builtin_ve_vl_vrmaxsllst_vvvl
CapabilityAttr
__builtin_ve_vl_vrminsllst_vvvl
__builtin_ve_vl_vfrmaxdfst_vvl
-objcmt-ns-nonatomic-iosonly
CleanupAttr
__builtin_ve_vl_vfrmaxslst_vvvl
__builtin_ve_vl_vfrmindfst_vvl
__builtin_ve_vl_vfrmindlst_vvvl
CodeSegAttr
__builtin_ve_vl_vfrminslst_vvvl
__builtin_ve_vl_vrand_vvl
__builtin_ve_vl_vror_vvl
CommonAttr
__builtin_ve_vl_vgt_vvssvl
__builtin_ve_vl_vgt_vvssml
__builtin_ve_vl_vgtnc_vvssl
ConstInitAttr
__builtin_ve_vl_vgtu_vvssl
__builtin_ve_vl_vgtu_vvssvl
Turn on time profiler. Generates JSON file based on output filename.
ConsumableAttr
__builtin_ve_vl_vgtlsx_vvssl
__builtin_ve_vl_vgtlsx_vvssvl
__builtin_ve_vl_vgtlsxnc_vvssl
ConsumableSetOnReadAttr
__builtin_ve_vl_vgtlzx_vvssl
__builtin_ve_vl_vgtlzx_vvssvl
__builtin_ve_vl_vgtlzx_vvssmvl
DLLExportAttr
__builtin_ve_vl_vsc_vvssl
vV256dV256dLUiLUiUi
__builtin_ve_vl_vscnc_vvssl
DLLImportAttr
__builtin_ve_vl_vscncot_vvssl
__builtin_ve_vl_vscncot_vvssml
-objcmt-white-list-dir-path=
DependerDeclsAttr
__builtin_ve_vl_vscuncot_vvssl
__builtin_ve_vl_vscuncot_vvssml
__builtin_ve_vl_vsclnc_vvssl
DestructorAttr
__builtin_ve_vl_vsclncot_vvssl
__builtin_ve_vl_vsclncot_vvssml
V256bV256bV256b
DiagnoseIfAttr
__builtin_ve_vl_xorm_mmm
__builtin_ve_vl_xorm_MMM
__builtin_ve_vl_nndm_mmm
DisableTailCallsAttr
Enable heap memory profiling and dump results into <directory>
EmptyBasesAttr
global-dynamic,local-dynamic,initial-exec,local-exec
EnableIfAttr
__builtin_ve_vl_scr_sss
vLUiLUiLUi
__builtin_ve_vl_fidcr_sss
EnforceTCBLeafAttr
Inline suitable functions
EnumExtensibilityAttr
-objcxx-isystem
display-ctu-progress
__builtin_wasm_memory_grow
zIiz
__builtin_wasm_tls_align
ExclusiveTrylockFunctionAttr
__builtin_wasm_max_f32
__builtin_wasm_min_f64
__builtin_wasm_throw
FinalAttr
ii*iLLi
__builtin_wasm_memory_atomic_wait64
Uii*Ui
FlattenAttr
__builtin_wasm_trunc_u_i32_f64
__builtin_wasm_trunc_s_i64_f32
__builtin_wasm_trunc_s_i64_f64
FormatArgAttr
__builtin_wasm_trunc_saturate_s_i32_f64
__builtin_wasm_trunc_saturate_u_i32_f64
__builtin_wasm_trunc_saturate_s_i64_f64
GNUInlineAttr
__builtin_wasm_add_sat_s_i8x16
__builtin_wasm_add_sat_u_i8x16
Treat source input files as Objective-C inputs
GuardedVarAttr
__builtin_wasm_abs_i8x16
__builtin_wasm_abs_i16x8
__builtin_wasm_abs_i64x2
HLSLNumThreadsAttr
__builtin_wasm_max_s_i8x16
__builtin_wasm_max_u_i8x16
__builtin_wasm_min_u_i16x8
HLSLResourceBindingAttr
__builtin_wasm_max_s_i32x4
__builtin_wasm_max_u_i32x4
__builtin_wasm_popcnt_i8x16
HotAttr
__builtin_wasm_extadd_pairwise_i8x16_u_i16x8
__builtin_wasm_extadd_pairwise_i16x8_s_i32x4
Set the output <file> for debug infos
IBOutletAttr
__builtin_wasm_all_true_i8x16
__builtin_wasm_all_true_i16x8
iV2LLi
InitPriorityAttr
UiV8s
__builtin_wasm_bitmask_i32x4
__builtin_wasm_bitmask_i64x2
LTOVisibilityPublicAttr
__builtin_wasm_max_f32x4
__builtin_wasm_pmin_f32x4
__builtin_wasm_max_f64x2
LeafAttr
__builtin_wasm_floor_f32x4
__builtin_wasm_trunc_f32x4
The trap function specified by -ftrap-function may return normally
LocksExcludedAttr
V4iV8sV8s
__builtin_wasm_sqrt_f32x4
__builtin_wasm_trunc_saturate_u_i32x4_f32x4
MIGServerRoutineAttr
V16UcV8sV8s
__builtin_wasm_narrow_s_i16x8_i32x4
__builtin_wasm_narrow_u_i16x8_i32x4
MSInheritanceAttr
__builtin_wasm_fma_f32x4
relaxed-simd
__builtin_wasm_fms_f64x2
MSP430InterruptAttr
__builtin_wasm_laneselect_i64x2
__builtin_wasm_relaxed_swizzle_i8x16
Disable optimization
MSVtorDispAttr
__builtin_wasm_relaxed_trunc_s_zero_i32x4_f64x2
__builtin_wasm_relaxed_trunc_u_zero_i32x4_f64x2
V8sV16ScV16Sc
MayAliasAttr
V4fV8UsV8UsV4f
mutable-globals
MicroMipsAttr
__wasm_sign_ext__
__wasm_exception_handling__
__wasm_mutable_globals__
MinVectorWidthAttr
__wasm_extended_const__
bleeding-edge
Issue call to specified function rather than a trap instruction
MipsInterruptAttr
Disable features of coverage instrumentation for Sanitizers
MipsLongCallAttr
sse2
popcnt
xsave
NSErrorDomainAttr
+f16c
+gfni
+avx512vnni
NSReturnsNotRetainedAttr
+avx512pf
+avx512dq
+avx512bw
NoAliasAttr
+avx512vp2intersect
+sha
+sgx
NoDebugAttr
+xsaveopt
+xsavec
+mwaitx
NoDuplicateAttr
+prefetchwt1
+clzero
+rdpru
NoMicroMipsAttr
+sahf
+waitpkg
--offload-host-device
NoProfileFunctionAttr
+hreset
+amx-bf16
+avxvnni
NoReturnAttr
+crc32
+x87
avx512f
NoSpeculativeLoadHardeningAttr
__x86_64
__x86_64h
__SEG_FS
NoStackProtectorAttr
__attribute__((address_space(257)))
__pentium_mmx__
--offload-host-only
NoThrowAttr
goldmont
goldmont_plus
__tune_lakemont__
NoUwtableAttr
__tune_k6_3__
__athlon_sse__
OMPAllocateDeclAttr
bdver1
bdver2
znver1
OMPDeclareTargetDeclAttr
__AES__
__VAES__
<function name>
OMPThreadPrivateDeclAttr
__BMI__
__BMI2__
__PRFCHW__
OSReturnsNotRetainedAttr
__LWP__
__MWAITX__
__XOP__
OSReturnsRetainedOnNonZeroAttr
__GFNI__
__AVX512CD__
__AVX512BF16__
ObjCBridgeAttr
__AVX512DQ__
__AVX512BITALG__
Use the new driver for offloading compilation.
ObjCBridgeRelatedAttr
__SHA__
__FXSR__
__XSAVEC__
ObjCExceptionAttr
__CLWB__
__WBNOINVD__
__SGX__
ObjCExternallyRetainedAttr
__RDPID__
__RDPRU__
__MOVDIRI__
ObjCMethodFamilyAttr
__INVPCID__
ObjCNSObjectAttr
-ftrapv
ObjCPreciseLifetimeAttr
__TSXLDTRK__
__UINTR__
__AVX512F__
ObjCRequiresSuperAttr
__SSE4_1__
__SSSE3__
__SSE2__
ObjCRootClassAttr
__3dNOW_A__
__3dNOW__
__SIZEOF_FLOAT128__
ObjCSuppressDirectPropertyAttr
amx-bf16
amx-int8
No effect
OpenCLKernelAttr
avx512er
avx512fp16
avx512bitalg
OverrideAttr
avx512vbmi2
avx512ifma
avxvnni
OwnershipAttr
clwb
clzero
ParamTypestateAttr
gfni
hreset
-ftree-dce
PointerAttr
movdiri
movdir64b
pconfig
PragmaClangBSSSectionAttr
ptwrite
rdpid
rdrnd
PragmaClangRelroSectionAttr
ssse3
PragmaClangTextSectionAttr
uintr
vaes
Enable use of builtin functions
PtGuardedByAttr
xsaveopt
cmov
broadwell
+cmov
+cmov,+mmx
+cmov,+mmx,+sse,+sse2
RandomizeLayoutAttr
ReinitializesAttr
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+adx,+mpx
ReleaseCapabilityAttr
-ftree-slp-vectorize
ReqdWorkGroupSizeAttr
ObjCSuppressDirectAttr
f16c
RestrictAttr
objc(ext)
@UD@
PatchableFunctionEntryAttr
ReturnTypestateAttr
avx512vbmi
clflushopt
fxsr
pclmul
@BT@SatULongFract
powerpcle-unknown-linux-gnu
ReturnsTwiceAttr
prfchw
@BT@SatLongFract
SYCLSpecialClassAttr
@BT@SatShortFract
PragmaClangRodataSectionAttr
powerpcle-linux-musl
SectionAttr
@BT@SatUShortAccum
tsxldtrk
PreferredNameAttr
@BT@UFract
@BT@SatShortAccum
@BT@SatAccum
xsaves
PtGuardedVarAttr
SharedTrylockFunctionAttr
@BT@Fract
-ftree-vectorizer-verbose
StandaloneDebugAttr
ppc64-redhat-linux
-opaque-pointers
@BT@UShortAccum
StrictGuardStackCheckAttr
@BT@LongAccum
powerpc64le-unknown-linux-gnu
__rvv_bool32_t
SwiftAsyncErrorAttr
__rvv_bool4_t
__rvv_bool16_t
powerpc64le-none-linux-gnu
SwiftAttrAttr
__rvv_float64m1_t
/openmp-
__rvv_float32m4_t
SwiftBridgedTypedefAttr
ppc64le-redhat-linux
__rvv_float32mf2_t
st(1)
SwiftImportAsNonGenericAttr
riscv32-unknown-linux-gnu
__rvv_float16m2_t
SYCLKernelAttr
SwiftNameAttr
-ftree-ter
__rvv_uint64m2_t
riscv32-unknown-elf
SwiftPrivateAttr
__rvv_int64m8_t
-ftree-vrp
TLSModelAttr
__rvv_int64m4_t
SetTypestateAttr
riscv64-unknown-linux-gnu
TargetClonesAttr
__rvv_uint32m2_t
ymm2
SpeculativeLoadHardeningAttr
__rvv_int32m2_t
__rvv_int32m8_t
__rvv_uint32mf2_t
ymm10
StrictFPAttr
TrivialABIAttr
__rvv_uint16m8_t
sparc-linux-gnu
TypeTagForDatatypeAttr
__rvv_uint16m4_t
/openmp
__rvv_uint16mf2_t
TypedMemoryAttr
__rvv_uint16mf4_t
SwiftAsyncNameAttr
__rvv_int16m4_t
UninitializedAttr
__rvv_uint8m2_t
__rvv_int16m2_t
SwiftErrorAttr
UnusedAttr
zmm2
Process trigraph sequences
-opt-record-file
UsingIfExistsAttr
s390x-unknown-linux-gnu
__rvv_int8mf2_t
zmm14
VTablePointerAuthenticationAttr
__vector_pair
__rvv_int8m4_t
Disable creation of CodeFoundation-type constant initializer `NSArray`s from array literals
VecTypeHintAttr
__SVCount_t
zmm30
-fno-sanitize-link-c++-runtime
WarnUnusedAttr
__clang_svfloat64x4_t
TestTypestateAttr
__clang_svfloat16x4_t
WeakAttr
-opt-record-format
__clang_svuint16x4_t
TransparentUnionAttr
WeakRefAttr
bnd2
__clang_svint32x4_t
tmm2
TryAcquireCapabilityAttr
WebAssemblyImportModuleAttr
sparcv9-sun-solaris2.11
__clang_svfloat64x3_t
TypeVisibilityAttr
WorkGroupSizeHintAttr
__clang_svfloat32x3_t
do not auto-initialize objects initialized by a C++ constructor
XRayInstrumentAttr
__clang_svuint64x3_t
-opt-record-passes
__clang_svint64x3_t
ZeroCallUsedRegsAttr
__clang_svint32x3_t
UnsafeBufferUsageAttr
__clang_svint8x3_t
AbiTagAttr
__clang_svfloat32x2_t
UsedAttr
AlignValueAttr
__SVBFloat16_t
__clang_svint32x2_t
x86_64-pc-solaris2.12
CalledOnceAttr
ncV:256:
__SVUint64_t
__SVFloat64_t
InitSegAttr
__SVUint32_t
WarnUnusedResultAttr
__SVUint8_t
LoopHintAttr
@BT@OCLSampler
__SVInt64_t
mips64el-linux-android
NoBuiltinAttr
__builtin_ia32_pfrcpit1
__builtin_ia32_pmulhrw
do not auto-initialize non-POD objects
OMPCaptureKindAttr
intel_sub_group_avc_sic_result_t
intel_sub_group_avc_ime_single_reference_streamin_t
-fmerge-all-constants
OMPReferencedVarAttr
-fno-constant-nsdictionary-literals
intel_sub_group_avc_mce_result_t
gcc/
ObjCClassStubAttr
__builtin_ia32_paddsb
__builtin_ia32_psubb
intel_sub_group_avc_mce_payload_t
ObjCDirectAttr
AArch64FarAddressSpaceAttr
image3d
ObjCNonLazyClassAttr
image2d_array_msaa
AliasAttr
ObjCRuntimeNameAttr
__builtin_ia32_psllw
image2d_depth
__builtin_ia32_psllq
BuiltinAliasAttr
/config-
image1d_array
IFuncAttr
OverloadableAttr
image1d
do not auto-initialize arrays other than arrays of pointers
SwiftObjCMembersAttr
(cpy)
__builtin_ia32_pcmpeqb
SwiftVersionedRemovalAttr
/lib/../
objc(cy)
NoEscapeAttr
ObjCProtocolLoc
/bin
Method list extends out of the range
V8ccccccccc
ObjCBoxableAttr
ObjC Image Info section is too small
ObjCDesignatedInitializerAttr
scalable
iV8c
objc protocol section size is not a multiple of pointer size
__objc_methname
enable
__protocol_list
elf_iamcu
objc category section size is not a multiple of pointer size
assume_safety
__objc_catlist
aarch64linux
__class_list
__objc_classlist
do not auto-initialize variables in STL namespace
--output=
#pragma unroll
-output-asm-variant
__module_info
__builtin_ia32_phsubsw
#pragma nounroll_and_jam
__DATA
5.0 or later
Disable creation of CodeFoundation-type constant initializer `NSDictionary`s from dictionary literals
 simdlen(
-fno-sanitize-memory-track-origins
__builtin_ia32_comige
 aligned(
.framework
 device_type(
elf32ppclinux
__builtin_ia32_cmpeqps
 indirect
elf32ppc
(ObjC Class EH) 
, scalable
 adjust_args(nothing:
-ftrivial-auto-var-init-skip-stl
_OBJC_METACLASS_$_
/Oy-
 append_args(
.objc_class_name_
 __attribute__((aarch64_far_address_space
elf64lppc
 [[clang::aarch64_far_address_space
ObjCNonRuntimeProtocolAttr
unknown/unsupported platform
#pragma nounroll
 __attribute__((aarch64_sve_pcs
.framework
driverkit
V16cV8sV8s
 __attribute__((aarch64_vector_pcs
/(.+)\.framework/(.+)?Headers/(.+)
elf32loongarch
 __attribute__((amdgpu_flat_work_group_size
(.+)/(.+)\.framework/
 __attribute__((amdgpu_kernel
elf64loongarch
unsupported version
__builtin_ia32_phaddd128
 __attribute__((amdgpu_num_sgpr
elf32btsmip
not a JSON object
 linear(
 __attribute__((amdgpu_num_vgpr
-ftrivial-auto-var-init-stop-after=
__builtin_ia32_ldmxcsr
 indirect(
unsupported header type
_mm_getcsr
tbd-v5
required field 'type' not specified
__builtin_ia32_sqrtss
elf64btsmip
mach-o bundle
tbd-v4
V2OiV2d
UNDEF
elf64_s390
 [[clang::aarch64_sve_pcs
  linkage: 
 [[gnu::interrupt
USR: 
__builtin_ia32_lfence
  loc: 
 [[clang::aarch64_vector_pcs
 [[gnu::signal
  isWeakDefined: 
__builtin_ia32_psraw128
 [[clang::amdgpu_flat_work_group_size
 [[gnu::abi_tag
  interfaceName: 
elf64ve
 [[clang::acquire_capability
__builtin_ia32_psllq128
V4iV4ii
  methods:
 [[clang::acquire_shared_capability
__builtin_ia32_psrldi128
 __attribute__((exclusive_lock_function
  protocols:
 __attribute__((shared_lock_function
krait
public
objective-c interfaces:
acquire_shared_capability
protected
 [[clang::amdgpu_waves_per_eu
    access: 
shared_lock_function
 class
    setter name: 
 [[clang::acquire_handle
__builtin_ia32_roundsd
instance
 __attribute__((acquired_before
/mips-r2
swiftABI
uninitialized,zero,pattern
 [[clang::address_space
  superClassName: 
potentiallyDefinedSelectors
 __attribute__((abi_tag
 [[gnu::alias
__builtin_ia32_pcmpestric128
__builtin_ia32_crc32qi
 __attribute__((acquire_capability
allowableClients
allowableClient is not string
+march=mips32
-ftype-visibility=
 [[gnu::aligned
missing install name
twoLevelNamespace
+march=mips64r6
 alignas
__builtin_ia32_aesdec128
compatibilityVersion
-fno-sanitize-minimal-runtime
aligned
currentVersion
acquire_capability
/32/mips-r1
alignas
bundle
--param
enum constant should be an object
 __attribute__((alloc_align
/32/mips-r2
ivars
__builtin_ia32_vgf2p8mulb_v32qi
 __attribute__((alloc_size
/32/mips-r6
cannot find getter
 __attribute__((acquired_after
 __attribute__((always_destroy
Zero initialize only first N bytes of each stack variable; 0 value turns off the limit.
V4dV4dV4d
 __attribute__((address_space
method should be an object
optional
 [[gnu::always_inline
default,hidden,internal,protected
 [[clang::always_inline
protected
 __attribute__((aligned
dynamic
always_inline
readonly
V4dV4dV4dIc
 __declspec(align
attr
(No spelling)
weakDefined
V4fV8fIi
 [[clang::analyzer_suppress
internal
external
 _Alignas
 [[clang::annotate
V4iV4d
Unknown GVKind 
re-exported
 __attribute__((no_caller_saved_registers
variable
_Alignas
kind
 __attribute__((nocf_check
public
Unknown access 
 [[gnu::alloc_align
 __attribute__((objc_arc_weak_reference_unavailable
unconditionallyDeprecated
malformed obsoleted version
V4dV4d
 __attribute__((argument_with_type_tag
+mmicromips
introduced
unavailable
 __attribute__((pointer_with_type_tag
iV8f
 __forceinline
protocols
enums
-pedantic-errors
categories
 __attribute__((__clang_arm_builtin_alias
hasException
 __attribute__((analyzer_suppress
 __attribute__((arm_locally_streaming
__builtin_ia32_maskstoreps256
</array>
 __attribute__((annotate
 [[clang::__clang_arm_mve_strict_polymorphism
-ftyped-cxx-new-delete
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
__builtin_ia32_vec_set_v8si
 __attribute__((arm_preserves_za
truncating current version '%0' to fit in 32-bit space used by old mach-o format
+mips16
 [[clang::annotate_type
 [[gnu::no_caller_saved_registers
 __attribute__((arm_streaming
skipping framework '%0': %1
Enable Typed Memory Operations call site rewriting
 __attribute__((artificial
new API %select{symbol|global variable|function}0 '%1' in '%2' for target '%3'
new API ObjC selector '%0' in %select{class|category|protocol}1 '%2' in '%3' for target '%4'
V8iV8iV8i
 asm
missing ObjC protocol '%0' from binary interface
-fno-sanitize-recover
missing ObjC method '%0' in %select{class|category|protocol}1 '%2' from binary interface
__asm__
/uclibc
missing symbol '%0' from binary interface
__builtin_ia32_pmuludq256
 [[clang::assert_capability
+mabi=n64
Disable non conforming code from compiling (default)
duplicated symbol '%0' inside SDKDB
 [[clang::assert_shared_capability
Warn on language extensions
conflict ObjC protocol definition '%0' inside SDKDB
__builtin_ia32_psllwi256
runpath search paths missing from %0: '%1'
duplicated enum '%0' inside SDKDB
 __attribute__((__clang_arm_mve_strict_polymorphism
no-uuids is deprecated and will be ignored.
 __attribute__((assert_shared_lock
no such %select{public|private}0 header file: '%1'
no such %select{public|private}0 umbrella header file: '%1'
 __attribute__((arm_new_za
 [[gnu::assume_aligned
Enable some non conforming code to compile
no declaration was found for exported symbol '%0' in dynamic library
-function-alignment
 [[clang::assume
V4OiV4OiV4OiIi
+mnan=2008
 __attribute__((arm_shared_za
, strict
-fno-coroutines-ts
%0 is missing from target %1 but required for target %2
Auto zippering was requested, output will be zippered
, deprecated=
%0 is defined to type %1 here
__builtin_ia32_maskstoreq
, unavailable
/mips64r2/mips16
%0 conforms to protocol %1
 __asm__
introduced=
property %0 has type %1 here
__builtin_ia32_gatherd_pd
%0 has no corresponding property here
obsoleted=
__builtin_ia32_gatherd_ps
%0 has no corresponding method here
-ftyped-memory-operations
 [[clang::preserve_access_index
%0 has method %1 here
assert_capability
/mips32/64
 [[clang::btf_decl_tag
Inline functions which are (explicitly or implicitly) marked inline
 __attribute__((btf_type_tag
interface %0 has type %1 here
 [[clang::btf_type_tag
^/64
Disable sanitizer statistics gathering.
%0 has %1 base class(es) here
 __attribute__((blocks
base class %0 has access specifier '%select{public|protected|private|none}1' here
 __attribute__((availability
vendor '%0' is not supported: '%1'
 [[clang::builtin_alias
File is for a position independent executable
environment '%0' is not supported: '%1'
, introduced=
builtin_alias
Value for __PIC__
dynamic library doesn't have symbol '%0', but found in swift interface
__builtin_ia32_rstorssp
 _Noreturn
regression for ObjC %select{class|category|protocol}0 '%1' in '%2' for target '%3': %4
/mipsel-r2-hard
, obsoleted=
 __attribute__((cdecl
missing %select{symbol|global variable|function}0 '%1' in '%2' for target '%3'
default alignment for functions
API info missing binary info for target '%0'
 __cdecl
regression for %select{enum|enum constant|typedef}0 '%1' for target '%2': %3
missing %select{frontend API|library '%2'}0 from project '%1' for target '%3'
__builtin_ia32_bzhi_si
 __attribute__((cf_audited_transfer
/mips-r2-hard-nan2008
re-exported library missing from %0: '%1'
Use unique names for basic block sections (ELF Only)
 __attribute__((preserve_access_index
 __attribute__((cf_consumed
__builtin_ia32_sha1nexte
parsing of all headers disabled
nocf
-fno-coverage-mapping
input '%0' is not a dynamic library
only one architecture can be specified '%0'
 __attribute__((guard
__builtin_ia32_vfmaddpd256
no such %select{public|private|project}1 umbrella header file: '%0'
V8dV8dV8dV8dUcIi
 __attribute__((cfi_canonical_jump_table
no deployment target specified
flat namespace libraries are not supported
__builtin_ia32_vfmsubaddps512_mask3
 __attribute__((cf_returns_not_retained
no architecture specified: add -arch <architecture>
clang_builtin_alias
no such sysroot directory: '%0'
 __attribute__((cf_returns_retained
unable to merge '%0': '%1'
__builtin_ia32_vpmacsdqh
_Noreturn
invalid platform name '%0'
invalid virtual filesystem overlay file '%0'
declaration has external linkage, but symbol has internal linkage in dynamic library '%0'
__builtin_ia32_vphaddwd
 __attribute__((cpu_dispatch
invalid current version '%0'
 [[gnu::cdecl
 [[clang::cpu_dispatch
 __declspec(cpu_dispatch
declaration '%0' is %select{weak defined|thread local}1, but symbol is not in dynamic library
install_name does not match: '%0' (provided) vs '%1' (found)
invalid compatibility version '%0'
 [[clang::cpu_specific
symbol exported in dynamic library, but marked hidden in declaration '%0'
 [[clang::cf_audited_transfer
cannot infer '%0', please specify with option '%1'
 __attribute__((constant
current_version does not match: '%0' (provided) vs '%1' (found)
expected only one input file
 [[clang::cf_consumed
constant
__builtin_ia32_vpshld
cannot read file '%0': %1
__builtin_ia32_vpshad
 __declspec(__device__
cannot find any public (usr/include) or private (usr/local/include) header directory: '%0'
cannot open file '%0': %1
 [[clang::guard
 __declspec(__device_builtin_surface_type__
V4fV4fV4fV4iIc
allowable clients do not match: '%0' (provided) vs '%1' (found)
__builtin_ia32_vfrczpd256
 [[clang::cf_returns_not_retained
 __declspec(__device_builtin_texture_type__
,sh}
-prebind_all_twolevel_modules
 __declspec(__global__
/mips-r6-soft
Cannot create temporary file for clang reproducer
-funit-at-a-time
 [[clang::cf_unknown_transfer
 __attribute__((host
-xobjective-c++
/tmp/tapi_include_headers-%%%%%%
host
-xobjective-c
/mipsel-r6-soft
 __declspec(__launch_bounds__
Public
Project
/micromips-r6-hard
 __declspec(__shared__
__builtin_ia32_rcp14ps512_mask
--precompile
 [[_Noreturn
#include 
 __declspec(__constant__
/micromips-r6-soft
unknown
UcV8fV8fIiUc
 __attribute__((device
-isystem
-stdlib=libc++
UcV2dV2dIiUc
 __attribute__((device_builtin_surface_type
 [[clang::callable_when
 __attribute__((callback
Enable parser support for the __unknown_anytype type; for testing purposes only
 [[clang::callback
-frtti
-fobjc-weak
-mips16
 [[clang::called_once
-fmodules
/System/Library/PrivateFrameworks
__builtin_ia32_loadupd512_mask
 [[clang::capability
/mips16/nan2008
 __attribute__((launch_bounds
output path is not a directory
 [[clang::shared_capability
output path is empty
__builtin_ia32_storeups512_mask
 __attribute__((shared
shared_capability
Note: the reproducer is intended to help users to debug the issue under a more familiar context using swift.
__builtin_ia32_alignd128
 [[noreturn
 [[carries_dependency
/n32
 [[gnu::cleanup
V4fV16fIiV4fUc
V8iV8iV8iV8i
iOSSupport
 __attribute__((cmse_nonsecure_entry
-module-cache-path
consumed
-funroll-loops
 __attribute__((cold
API is not a JSON Object
-module-name
 __attribute__((callable_when
 __attribute__((common
V4dV4dvC*V4OiUcIi
cannot find 'swift-api-extract' in toolchain directory. Looking for 'swift-api-extract' in PATH instead.
+march=armv7-a
 __attribute__((const
V2dV2dvC*V4iUcIi
V4dV4dvC*V4iUcIi
vfsoverlay
 __attribute__((__const
V4fV4fvC*V4iUcIi
/System/iOSSupport/System/Library/Frameworks
-%%%%%%
 constinit
/System/iOSSupport/usr/local/include
-funroll-all-loops
x86_64
 [[clang::require_constant_initialization
i386
 __attribute__((carries_dependency
require_constant_initialization
simulator
-diagnostic-log-file
 __attribute__((cleanup
 [[gnu::constructor
Print all of Clang's warning options
 __attribute__((consumable
-funsafe-loop-optimizations
 [[clang::consumable
13.0
hard-fp
 __attribute__((cmse_nonsecure_call
 [[clang::consumable_auto_cast_state
private.sdkdb
Disable memory access instrumentation in ThreadSanitizer
--action=
 [[clang::consumable_set_state_on_read
SDKContentRoot
SDKDBAction
UsV16cV16cIiUs
 [[clang::convergent
march=ck801
RC_MIN_VERSION_OPTION
 [[gnu::common
 __attribute__((dllexport
TAPI_SDKDB_FORCE_ERROR
__builtin_ia32_cmpq256_mask
See 'tapi <command> --help' to read more about a specific command.
 __declspec(dllimport
USAGE: tapi [--version][--help]
       tapi <command> [<args>]
Commands:
  archive     Merge or thin text-based stub files
  stubify     Create a text-based stub file from a library
  installapi  Create a text-based stub file by scanning the header files
  reexport    Create a linker reexport file by scanning the header files
Turn on loop unroller
reexport
 [[gnu::dllimport
archive
installapi
__builtin_ia32_ucmpb512_mask
march=ck805
 __attribute__((constructor
-funsigned-bitfields
 __declspec(deprecated
__builtin_ia32_vpconflictdi_256
BRIDGEOS_DEPLOYMENT_TARGET
Disable auto-generation of preprocessed source files and a script for reproduction during a clang crash
 __attribute__((destructor
IPHONEOS_DEPLOYMENT_TARGET
RC_ProjectName
__builtin_ia32_vpopcntq_128
 __attribute__((diagnose_as_builtin
tapi
march=ck860
 __attribute__((consumable_auto_cast_state
error
RC_PROJECT_COMPILATION_PLATFORM
-print-ivar-layout
LD_TRACE_FILE
 __attribute__((diagnose_if
march=ck860v
TAPI_API_VERIFY_ERROR_AS_WARNING
UiV32cV32cUi
 [[clang::disable_sanitizer_instrumentation
/hard-fp
TAPI_DELETE_INPUT_FILE
 __declspec(dllexport
 [[clang::disable_tail_calls
-funsafe-math-optimizations
__builtin_ia32_subpd512
 [[gnu::dllexport
/System/Library/Frameworks
__builtin_ia32_pmaddwd512
 __attribute__((enforce_tcb
/Library/Frameworks
 [[clang::enforce_tcb
/usr/lib
/soft-fp
+soft-fp
 [[clang::enforce_tcb_leaf
V16cV16cV16cUs
 [[deprecated
'clang' invocation failed:
_TAPI_TEST_CLANG
--print-missing-file-dependencies
 [[clang::enum_extensibility
-fcoverage-mapping
 [[clang::diagnose_as_builtin
static int foo() { return 0; }
 [[gnu::error
vV8s*V8sUc
dylib
warning
 [[gnu::warning
-funsigned-char
code_coverage
vV4i*V4iUc
 [[clang::exclude_from_explicit_instantiation
LinkerAutoZipperList.txt
+march=ck803
 __attribute__((disable_sanitizer_instrumentation
 __attribute__((disable_tail_calls
 __attribute__((external_source_symbol
frontend
.tbd
 [[fallthrough
+march=ck804
.framework/
/include/
 __attribute__((fallthrough
-fno-sanitize-trap
.dylib
V4iV2OiC*V2OiUc
 __attribute__((fastcall
apple
/ck807
 __attribute__((enforce_tcb_leaf
 __fastcall
([^/]*)
-print-multiarch
final
+march=ck807
<language>
V4iV4iC*V4iUc
<arg>
 __attribute__((warning
-watchos_version_min
 __attribute__((flatten
-watchos_simulator_version_min
 __attribute__((exclude_from_explicit_instantiation
 __attribute__((format
Print the "preamble" of a file, which is a candidate for implicit precompiled headers.
 [[gnu::format
-fuse-ctor-homing
 __attribute__((format_arg
vv*UcV4OiV4OiIi
+march=ck860
 __attribute__((exclusive_trylock_function
keep
--verify-arch
Disable trapping for all sanitizers
--verify-api
 __attribute__((function_return
Emit API Verification errors as warnings
Skip external headers for API verification of zippered frameworks
vv*UcV4iV4iIi
 __attribute__((gnu_inline
Undefine macro
Verify the specified dynamic library/framework against the headers
+march=ck860v
 __attribute__((guarded_by
 _fastcall
 [[clang::guarded_var
-funwind-tables
-target
__builtin_ia32_vpermi2varqi256
sealed
 __declspec(__managed__
Generate code for the given target variant
__builtin_ia32_vpshldd128
:register
-swift-installapi-interface
Ignore symbols in verification against headers from specified file path for swift generated file.
 [[clang::flag_enum
pixel
+mabi=ilp32d
-fno-cuda-approx-transcendentals
Serialize compiler diagnostics to a file
geometry
-serialize-diagnostics
__builtin_ia32_vpshrdvq512
 [[gnu::format_arg
Write SDKDB output to path
__builtin_ia32_vpshrdd128
-sdkdb-output-dir
thunk-extern
<RuntimeRoot>
--sdk-content-root
lib64/lp64d
--runtime-root
intersection
__builtin_ia32_pmovwb512_mask
Remove the specified <architecture>.
ilp32d
closestHit
__builtin_ia32_cvtps2qq128_mask
-relinked_library
Use constructor homing if we are using limited debug info already
callable
Re-export the specified internal "install path" (LC_ID_DYLIB)
 __attribute__((guarded_var
mabi=ilp32d
amplification
Specify the public umbrella header location
 __attribute__((managed
[shader
 __attribute__((hot
__builtin_ia32_vpermi2varhi256
-public-headers
[numthreads
:SV_GroupIndex
 __attribute__((ibaction
--product-name=
__builtin_ia32_pmovuswb256_mask
 __attribute__((iboutlet
-private-umbrella-header
/../../../../riscv64-unknown-elf/lib
vertex
hull
 __attribute__((iboutletcollection
Write output to <file>
-private-headers
 __attribute__((ifunc
__builtin_ia32_rangeps512_mask
Treat source input files as Objective-C inputs
raygeneration
 __attribute__((init_priority
-ObjC++
Path to PublicSDKContentRoot
__builtin_ia32_prolvd512
anyHit
#pragma init_seg
--no-uuids
__builtin_ia32_prord128
 __attribute__((intel_ocl_bicc
Disable private header scanning
-no-public-headers
miss
 __attribute__((internal_linkage
+exceptions
-mwatchos-version-min=
-no-private-headers
 __attribute__((lto_visibility_public
Set the deployment target to be the specified platform and OS version
-mwatchos-simulator-version-min=
/amd64
 __declspec(layout_version
__builtin_ia32_psrlv32hi
-print-supported-cpus
--merge
 [[gnu::leaf
-mbridgeos-version-min=
 [[clang::iboutlet
Add directory to the library search path
 [[clang::lifetimebound
__builtin_ia32_movdqa32store512_mask
--list-symbols
 [[clang::iboutletcollection
 [[clang::likely
-fuse-init-array
Overlay the virtual filesystem described by file over the real file system
__builtin_ia32_movdqa64store256_mask
 [[gnu::ifunc
 [[clang::loader_uninitialized
-print-target-triple
Add directory to QUOTE include search path
 __attribute__((locks_excluded
-iquote
vectorize
Use #line in preprocessed output
vectorize_width
Sets an internal "install path" (LC_ID_DYLIB) in a dynamic library
Don't record the UUIDs from the library in the text-based stub file
 [[clang::intel_ocl_bicc
interleave_count
--inline-private-frameworks
-ios_simulator_version_min
__builtin_ia32_getexpss128_round_mask
unroll_count
--info
gcc preprocessor
 [[clang::internal_linkage
unroll_and_jam_count
Add directory to SYSTEM framework search path
-print-targets
Display this help message
pipeline_initiation_interval
gcc::Compiler
Add directory to framework include search path
__builtin_ia32_fixupimmps256_maskz
vectorize_predicate
gcc frontend
 [[likely
-fobjc-weak
loop
Disable generation of rtti information
Synthesize retain and release calls for Objective-C pointers
 __attribute__((loader_uninitialized
nounroll_and_jam
-private_bundle
Enable the 'modules' language feature
-fuse-register-sized-bitfield-access
 [[clang::mig_server_routine
Validate the system headers that a module depends on when loading the module
/c++/
 __attribute__((lock_returned
 [[gnu::ms_abi
Specify the module cache path
interleave
Specifies the <path> to a file that contains a list of headers to parse.
 __single_inheritance
__builtin_ia32_storeaps256_mask
Set the maximum number of errors to emit before stopping (0 = no limit).
unroll
 __virtual_inheritance
--profile
-fapplication-extension
V8dV8dV8Oi
__single_inheritance
--extract
-bundle-align=
unroll_and_jam
__virtual_inheritance
--extra-public-header=
-fuse-linker-plugin
-extra-project-header
 __declspec(novtable
-extra-private-header
--extra-project-header=
__builtin_ia32_psllv8di
 [[gnu::ms_struct
-finline-limit
 __attribute__((may_alias
-fno-see
 [[gnu::may_alias
-fno-second-underscore
 [[clang::maybe_undef
-dynamiclib
 __attribute__((ms_abi
-dylibs-only
 [[gnu::micromips
__builtin_ia32_pternlogq512_mask
Write diagnostics to <file>
 __declspec(allocator
 [[clang::minsize
--ptxas-path=
--demangle
UOiV64c
 [[clang::min_vector_width
Delete private frameworks from the SDK
Use register sized accesses to bit-fields, when possible.
<file>
 [[gnu::mips16
Read configuration from <file>
__multiple_inheritance
Specifies the compatibility version number of the library
vector=sw1
<architecture>
-compatibility_version
__unspecified_inheritance
vector=hw1
Restricts what can link against the dynamic library being created
Compute and store the hash of input files used to build an AST. Files with mismatching mtime's are considered valid if both contents is identical
vector=hw3
__builtin_ia32_cvtmask2d256
  .globl __hip_fatbin
<path>
vector=hw5
Specify the path to a file containing a list of symbol aliases
Enables the global instruction selector
scan-interface,gen-public,gen-private,all
 __attribute__((long_call
__builtin_ia32_pmovsdw512_mask
<unknown>
__builtin_ia32_pmovsqb512_mask
 __attribute__((far
Set SDKDB generation option: 'scan-interface', 'gen-public', 'gen-private' or 'all'
usr/lib
__builtin_ia32_pmovswb128mem_mask
long_call
PrivateFrameworks
 __attribute__((min_vector_width
/System/Cryptexes/OS
 __attribute__((short_call
Library/Apple
__builtin_ia32_pmovsdw256_mask
 __attribute__((mips16
Modules
Versions
/System/iOSSupport
__builtin_ia32_pmovsqb256_mask
short_call
IOKit.framework
-fveclib=
 __attribute__((mode
System/Library/Frameworks/
vector=hw2
use-split-header-dir
 __attribute__((musttail
sdk-mask
__builtin_ia32_pmovusdw512mem_mask
vector=hw4
language-std
zippered
iosmac-umbrella-only
__builtin_ia32_pmovusdb128mem_mask
 __attribute__((ns_consumes_self
umbrella
pre-includes
 __attribute__((ns_error_domain
__builtin_ia32_pmovusdw256mem_mask
public-header
clang-extra-args
 [[clang::ns_returns_autoreleased
install-name
-fvariable-expansion-in-unroller
 [[clang::ns_returns_not_retained
tvos
objective-cxx
/QIntel-jcc-erratum
 [[clang::ns_returns_retained
AMDGPU address sanitizer runtime library (asanrtl) is not found. Please install ROCm device library which supports address sanitizer
macosx
Accelerate,libmvec,MASSV,SVML,Darwin_libsystem_m,none
 [[gnu::near
 [[gnu::naked
public-dylibs
unknown
 __declspec(noalias
framework-paths
xnack+
language
 [[clang::no_builtin
invalid input file
sdk-root
 __attribute__((nocommon
amdgcn-link
 [[clang::ns_consumed
 __attribute__((nodebug
V8dV8dV2dIi
file doesn't have architecture '
 [[clang::ns_consumes_self
01234567
0123456789abcdefABCDEF
-load-pass-plugin
true
 __attribute__((no_destroy
-?:\,[]{}#&*!|>'"%@`
NULL
-passes=hip-post-link-passes
 __attribute__((noduplicate
__builtin_ia32_getmantps256_mask
frameworks
-fvectorize
 __attribute__((noescape
allowlist
includes
__builtin_ia32_vfmsubss3_mask3
 __noinline__
target
UcV2dIiUc
 [[gnu::noinline
-vectorize-loops=false
 __attribute__((no_builtin
error
 __declspec(noinline
warning
__builtin_ia32_fpclassss_mask
Display the list of in development checker and package options. These are NOT considered safe, they are unstable and will emit incorrect reports. Enable ONLY FOR DEVELOPMENT purposes
 [[gnu::no_instrument_function
-analyzer-checker-help
-analyzer-checker-option-help-alpha
__builtin_ia32_kanddi
 [[gnu::nocommon
 [[clang::nomerge
Run analysis on specific function (for C++ include parameters in name)
__builtin_ia32_kortestchi
 [[gnu::nomicromips
hipspv-
-all_load
__builtin_ia32_ktestzhi
 [[clang::no_destroy
 [[gnu::nomips16
<name>
no_builtin
 [[gnu::no_profile_instrument_function
libLLVMHipSpvPasses.so
Display available options
 [[gnu::no_randomize_layout
 [[clang::noescape
-###
 [[gnu::noreturn
<u group>
<unknown>
 __attribute__((noinline
 __attribute__((no_sanitize
<pedantic group>
<reserved libs group>
V8sV16cV16cIi
 __attribute__((no_speculative_load_hardening
<x86 features group>
-filetype=obj
 [[clang::noinline
 __attribute__((no_split_stack
<m libc group>
UcV4fV4fIiUcIi
<arm features group>
 __attribute__((no_stack_protector
__builtin_ia32_expandhi512_mask
DRIVER OPTIONS
<m group>
 __declspec(safebuffers
-mhvx-ieee-fp
no_stack_protector
-fverify-debuginfo-preserve-export=
safebuffers
__builtin_ia32_compressstoredf512_mask
<gN group>
<clang internal options>
 __attribute__((no_randomize_layout
 [[clang::no_thread_safety_analysis
<f group>
 __attribute__((nomips16
 [[gnu::nothrow
<clang ignored m group>
DEBUG/DEVELOPMENT OPTIONS
 [[no_unique_address
__builtin_ia32_vpmultishiftqb512
 __declspec(noreturn
__builtin_ia32_cvtsd2ss_round_mask
 [[clang::nouwtable
V8sV4fV4f
<clang-cl compile-only options>
 [[clang::no_sanitize
 [[gnu::nonnull
</volatile group>
<clang-cl options>
__builtin_ia32_dpbf16ps_128
 [[clang::not_tail_called
<W (with value) group>
/hexagon/include/c++/v1
<T group>
omp_default_mem_alloc
hexagonv60
V32xV32xV32xIi
 [[clang::no_speculative_load_hardening
omp_const_mem_alloc
<g group>
<W/R group>
avx512fp16,avx512vl
 __attribute__((no_thread_safety_analysis
omp_low_lat_mem_alloc
--std=
hvx-length
omp_pteam_mem_alloc
<I/i group>
 __attribute__((nothrow
debug.AnalysisOrder,debug.Stats,alpha.security.ArrayBound,alpha.security.ArrayBoundV2,osx.cocoa.AutoreleaseWrite,alpha.unix.BlockInCriticalSection,alpha.core.BoolAssignment,core.builtin.BuiltinFunctions,alpha.core.C11Lock,osx.coreFoundation.CFError,debug.DumpCFG,debug.ViewCFG,osx.coreFoundation.CFNumber,osx.coreFoundation.CFRetainRelease,alpha.unix.cstring.BufferOverlap,unix.cstring.CStringModeling,alpha.unix.cstring.NotNullTerminated,unix.cstring.NullArg,alpha.unix.cstring.OutOfBounds,unix.cstring.BadSizeArg,alpha.unix.cstring.UninitializedRead,cplusplus.SelfAssignment,core.CallAndMessage,core.CallAndMessageModeling,debug.DumpCalls,debug.DumpCallGraph,debug.ViewCallGraph,alpha.core.CastSize,alpha.core.CastToStruct,apiModeling.llvm.CastValue,alpha.unix.Chroot,osx.cocoa.ClassRelease,alpha.clone.CloneChecker,debug.ConfigDumper,alpha.cplusplus.ContainerModeling,debug.DumpControlDependencies,alpha.core.Conversion,valist.CopyToSelf,deadcode.DeadStores,debug.DebugContainerModeling,debug.DebugIteratorModeling,alpha.cplusplus.DeleteWithNonVirtualDtor,security.insecureAPI.DeprecatedOrUnsafeBufferHandling,core.NullDereference,alpha.osx.cocoa.DirectIvarAssignment,core.DivideZero,debug.DumpDominators,unix.DynamicMemoryModeling,alpha.core.DynamicTypeChecker,core.DynamicTypePropagation,optin.osx.cocoa.localizability.EmptyLocalizationContextChecker,alpha.cplusplus.EnumCastOutOfRange,alpha.unix.Errno,apiModeling.Errno,debug.ErrnoTest,debug.ViewExplodedGraph,debug.ExprInspection,alpha.core.FixedAddr,security.FloatLoopCounter,fuchsia.HandleChecker,alpha.fuchsia.Lock,optin.performance.GCDAntipattern,apiModeling.google.GTest,alpha.security.taint.TaintPropagation,alpha.core.IdenticalExpr,cplusplus.InnerPointer,alpha.osx.cocoa.InstanceVariableInvalidation,alpha.security.cert.env.InvalidPtr,alpha.cplusplus.InvalidatedIterator,alpha.cplusplus.IteratorModeling,alpha.cplusplus.IteratorRange,alpha.osx.cocoa.IvarInvalidationModeling,alpha.llvm.Conventions,debug.DumpLiveExprs,debug.DumpLiveVars,osx.MIG,optin.mpi.MPI-Checker,osx.SecKeychainAPI,osx.API,unix.Malloc,alpha.security.MallocOverflow,unix.MallocSizeof,unix.MismatchedDeallocator,alpha.cplusplus.MismatchedIterator,alpha.osx.cocoa.MissingInvalidationMethod,alpha.security.MmapWriteExec,cplusplus.Move,osx.cocoa.NSAutoreleasePool,osx.cocoa.NSError,osx.NSOrCFErrorDerefChecker,cplusplus.NewDelete,cplusplus.NewDeleteLeaks,osx.cocoa.NilArg,core.builtin.NoReturnFunctions,webkit.NoUncountedMemberChecker,optin.osx.cocoa.localizability.NonLocalizedStringChecker,core.NonNullParamChecker,core.NonnilStringConstants,nullability.NullPassedToNonnull,nullability.NullReturnedFromNonnull,nullability.NullabilityBase,nullability.NullableDereferenced,nullability.NullablePassedToNonnull,nullability.NullableReturnedFromNonnull,osx.NumberObjectConversion,optin.osx.OSObjectCStyleCast,osx.OSObjectRetainCount,osx.cocoa.AtSync,osx.coreFoundation.containers.PointerSizedValues,osx.coreFoundation.containers.OutOfBounds,osx.cocoa.Dealloc,osx.cocoa.ObjCGenerics,osx.cocoa.Loops,osx.cocoa.IncompatibleMethodTypes,osx.cocoa.NonNilReturnValue,osx.ObjCProperty,osx.cocoa.SelfInit,osx.cocoa.MissingSuperCall,osx.cocoa.SuperDealloc,osx.cocoa.UnusedIvars,optin.performance.Padding,cplusplus.PlacementNew,alpha.osx.cocoa.localizability.PluralMisuseChecker,alpha.core.PointerArithm,alpha.nondeterminism.PointerIteration,alpha.nondeterminism.PointerSorting,alpha.core.PointerSub,debug.DumpPostDominators,alpha.core.PthreadLockBase,alpha.unix.PthreadLock,cplusplus.PureVirtualCall,alpha.security.cert.pos.34c,webkit.RefCntblBaseVirtualDtor,debug.ReportStmts,osx.cocoa.RetainCountBase,osx.cocoa.RetainCount,alpha.security.ReturnPtrRange,core.uninitialized.UndefReturn,apiModeling.llvm.ReturnValue,osx.cocoa.RunLoopAutoreleaseLeak,alpha.cplusplus.STLAlgorithmModeling,security.insecureAPI.SecuritySyntaxChecker,alpha.unix.SimpleStream,alpha.core.SizeofPtr,alpha.cplusplus.SmartPtr,cplusplus.SmartPtrModeling,alpha.core.StackAddressAsyncEscape,core.StackAddrEscapeBase,core.StackAddressEscape,alpha.unix.StdCLibraryFunctionArgs,apiModeling.StdCLibraryFunctions,debug.StdCLibraryFunctionsTester,alpha.unix.Stream,debug.StreamTester,cplusplus.StringChecker,debug.TaintTest,alpha.core.TestAfterDivZero,debug.DumpTraversal,apiModeling.TrustNonnull,apiModeling.TrustReturnsNonnull,security.insecureAPI.UncheckedReturn,alpha.webkit.UncountedCallArgsChecker,webkit.UncountedLambdaCapturesChecker,alpha.webkit.UncountedLocalVarsChecker,core.uninitialized.Branch,core.uninitialized.CapturedBlockVariable,core.UndefinedBinaryOperatorResult,core.uninitialized.ArraySubscript,core.uninitialized.Assign,core.uninitialized.NewArraySize,valist.Uninitialized,optin.cplusplus.UninitializedObject,unix.API,optin.portability.UnixAPI,alpha.deadcode.UnreachableCode,valist.Unterminated,core.VLASize,valist.ValistBase,osx.cocoa.VariadicMethodTypes,unix.Vfork,optin.cplusplus.VirtualCall,cplusplus.VirtualCallModeling,security.insecureAPI.bcmp,security.insecureAPI.bcopy,security.insecureAPI.bzero,security.insecureAPI.decodeValueOfObjCType,security.insecureAPI.getpw,security.insecureAPI.gets,security.insecureAPI.mkstemp,security.insecureAPI.mktemp,security.insecureAPI.rand,security.insecureAPI.strcpy,security.insecureAPI.vfork,alpha.unix.cstring,alpha.clone,alpha,debug,nullability,optin.portability,unix.cstring,core.uninitialized,apiModeling.llvm,apiModeling.google,webkit,alpha.security.taint,alpha.cplusplus,alpha.osx.cocoa,alpha.security.cert,cplusplus,osx.coreFoundation.containers,osx.cocoa,optin.osx.cocoa.localizability,optin.osx,alpha.security,security,alpha.unix,alpha.core,optin.mpi,security.insecureAPI,alpha.apiModeling,unix,osx.coreFoundation,apiModeling,core,optin,alpha.security.cert.pos,alpha.fuchsia,alpha.deadcode,alpha.security.cert.env,alpha.nondeterminism,optin.cplusplus,fuchsia,optin.osx.cocoa,deadcode,optin.performance,alpha.osx.cocoa.localizability,core.builtin,alpha.llvm,alpha.osx,valist,osx,llvm,alpha.webkit,
 __declspec(nothrow
inbranch
 __attribute__((nouwtable
#pragma omp declare simd
%.3f
__builtin_ia32_rsqrtph512_mask
 __attribute__((nonnull
.lib
random
(nothing)
 __attribute__((not_tail_called
#pragma omp declare variant
declare variant
(input arg)
omp_null_allocator
 __attribute__((os_consumed
-Wno-error=unqualified-std-cast-call
omp_high_bw_mem_alloc
 __attribute__((os_consumes_this
UcV8xIiUc
-Wno-error=tautological-constant-compare
The string to embed in the .LLVM.command.line section.
 __attribute__((os_returns_not_retained
-Wno-error=incompatible-pointer-types
omp_thread_mem_alloc
-dynamic-linker=/lib/ld-musl-hexagon.so.1
-Wno-error=array-parameter
__builtin_ia32_vcvtph2pd512_mask
-Wno-error=incompatible-function-pointer-types
 __attribute__((os_returns_retained_on_non_zero
<LongDouble group>
-analyzer-config-compatibility-mode=
-Wno-error=unreachable-code
__builtin_ia32_vcvtsh2sd_round_mask
 __attribute__((os_returns_retained_on_zero
-Wno-implicit-fallthrough
-Wno-error=deprecated
V32xV32sV32xUiIi
#pragma omp declare target
 __attribute__((objc_boxable
/initS.o
-Wno-final-dtor-non-final-class
 __attribute__((objc_bridge
-fno-cxx-exceptions
-Wno-c99-designator
-fvisibility-dllexport=
 __attribute__((objc_bridge_mutable
-apple-
-Wno-reorder-init-list
 __attribute__((objc_bridge_related
i586
 [[clang::os_consumes_this
OBJECT_MODE
 __attribute__((objc_class_stub
clang-dxc
hurd
 [[clang::os_returns_retained
 __attribute__((objc_complete_definition
__builtin_ia32_vcvtqq2ph256_mask
LLVM_DIAGNOSTIC_DIR
__builtin_ia32_vcvtph2qq128_mask
 [[clang::objc_designated_initializer
.out
 [[clang::os_returns_retained_on_zero
CLANG_CRASH_DIAGNOSTICS_DIR
 [[clang::objc_direct
a.out
__builtin_ia32_vcvtph2uqq128_mask
 [[clang::objc_boxable
], outputs: [
-fno-sign-zero
thinLTO on AIX
 [[clang::objc_exception
Building compilation jobs
 __attribute__((objc_protocol_requires_explicit_implementation
-fvisibility-externs-dllimport=
 [[clang::os_consumed
 [[clang::objc_protocol_requires_explicit_implementation
Building compilation actions
 [[clang::objc_bridge_related
 [[clang::objc_externally_retained
__builtin_ia32_vcvtps2phx512_mask
builtins
__builtin_ia32_vfmaddph256
 [[clang::objc_gc
 __attribute__((objc_designated_initializer
System configuration file directory: 
 [[clang::objc_independent_class
{0} [options] file...
Configuration file: 
__builtin_ia32_vfmaddcph512_mask
 __kindof
user
/lib/ld.so
c++2b
alloc
-clang-vendor-feature=+thisNoNullAttr
__builtin_ia32_vfcmaddcsh_mask
-clang-vendor-feature=+revert09abecef7bbf
init
-clang-vendor-feature=+enableAggressiveVLAFolding
lib64
-clang-vendor-feature=+disableNeonImmediateRangeCheck
Compilation construction
__builtin_ia32_selectw_128
-fvisibility-externs-nodllstorageclass=
 [[clang::objc_method_family
1021
/invalid/
__builtin_ia32_selectd_256
 __attribute__((objc_independent_class
 [[clang::NSObject
Command line argument parsing
 __unsafe_unretained
 [[clang::objc_nonlazy_class
The visibility for dllimport external declarations [-fvisibility-from-dllstorageclass]
__builtin_ia32_selectps_128
none
/etc/lsb-release
The directory which holds the compiler resource files
/etc/debian_version
 [[clang::objc_ownership
gnuabi64
release 7
xxV32x
 [[clang::objc_precise_lifetime
/lib/mips64-linux-gnu
openmp
 __attribute__((objc_method_family
 [[clang::objc_requires_property_definitions
-fno-signaling-nans
__builtin_ia32_reduce_fmul_pd512
 __attribute__((objc_nonlazy_class
device-cuda
device-openmp
 __attribute__((objc_returns_inner_pointer
-fvisibility-from-dllstorageclass
 [[clang::objc_returns_inner_pointer
clang-linker-wrapper
/lib/powerpc-linux-gnuspe
dsymutil
 [[clang::objc_root_class
The visibility for external declarations without an explicit DLL dllstorageclass [-fvisibility-from-dllstorageclass]
linker
vV2OiV2OiV2OiUi
 __attribute__((objc_precise_lifetime
 [[clang::objc_runtime_name
analyzer
Rewrite Legacy Objective-C source to C++
 [[clang::objc_runtime_visible
/lib/mips64el-linux-gnu
precompiler
 __attribute__((objc_requires_super
 [[clang::objc_subclassing_restricted
input
preprocessor
-fno-signed-char
 __attribute__((objc_root_class
 [[clang::objc_suppress_direct
 Line 
/usr/lib/..
 __read_only
__readgsqword
Expand macros without full preprocessing
 __write_only
regex
-fvisibility-global-new-delete-hidden
 __read_write
warn
 __attribute__((objc_suppress_direct
/../../../../
__read_only
__builtin_ia32_rdgsbase64
 suppress_direct
While building module '
fix-it:"
vUOiv*
 write_only
remark: 
warning: 
powerpc-sf
 __attribute__((objc_subclassing_restricted
 __constant
/lib/ld-musl-
 __attribute__((opencl_constant
Malformed Metadata block
Unsupported diagnostics version
ld-linux-aarch64.so.1
__constant
__builtin_ia32_cvtsi2sd64
__builtin_ia32_vcvtusi642sh
can't skip to bit %zu from %llu
 __generic
can't skip block: already at end of stream
 generic
-fvisibility-inlines-hidden-static-local-var
 [[clang::opencl_constant
 __attribute__((opencl_generic
SourceFileContents
-ffuchsia-api-level=
__generic
Suppress inlining of functions whose stack size exceeds the given value
generic
__builtin_ia32_vcvttsd2si64
opencl_generic
__builtin_getid
__builtin_getps
ld-musl-mips.so.1
#define 
 [[clang::opencl_global
opencl_global
 [[clang::opencl_global_device
 [[clang::opencl_global_host
-Rpass-analysis=
 __kernel
 __local
 __attribute__((opencl_local
break
case
continue
__local
else
enum
-Rpass-missed=
opencl_local
_ExtInt
_BitInt
return
 private
static
struct
typedef
 [[clang::opencl_private
while
_Alignas
_Bool
private
_Noreturn
_Static_assert
-fvisibility-ms-compat
 __attribute__((opencl_unroll_hint
bool
const_cast
 [[clang::optnone
export
false
mutable
 [[clang::overloadable
protected
public
template
 __attribute__((ownership_holds
typename
-rpath
 __attribute__((ownership_returns
alignas
alignof
constexpr
 __attribute__((ownership_takes
static_assert
thread_local
co_return
ownership_holds
constinit
concept
_Float16
ownership_takes
_Fract
_Sat
-fvisibility-nodllstorageclass=
 [[gnu::packed
__builtin_choose_expr
__builtin_offsetof
__builtin_LINE
 [[clang::param_typestate
__builtin_va_arg
__extension__
__ibm128
 [[clang::pascal
__thread
__FUNCTION__
__FUNCDNAME__
 _pascal
__is_interface_class
__is_sealed
-rtlib=
 [[clang::pass_object_size
__is_assignable
__has_nothrow_move_assign
__has_nothrow_assign
 [[clang::pass_dynamic_object_size
__has_trivial_copy
__has_trivial_constructor
__has_virtual_destructor
pass_dynamic_object_size
__is_convertible_to
__is_empty
__is_literal
 [[gnu::patchable_function_entry
__is_trivial
aapcs
-fvisibility=
aapcs-vfp
__add_rvalue_reference
__decay
__remove_all_extents
 [[gnu::pcs
__remove_extent
__remove_pointer
__remove_restrict
 __ptrauth
__is_unbounded_array
__is_nullptr
__reference_binds_to_temporary
__ptrauth
__is_floating_point
__is_integral
Enable the specified remark
 __attribute__((ptrauth_struct
__is_rvalue_reference
__is_fundamental
__is_compound
 __attribute__((preferred_name
__is_member_pointer
__is_const
__is_signed
 __attribute__((preserve_all
__array_extent
__private_extern__
__builtin_ptrauth_struct_key
 __attribute__((preserve_most
__builtin_xnu_types_compatible
__builtin_tmo_get_type_data
-fwarn-stack-size=
 __attribute__((pt_guarded_by
__regcall
__vectorcall
__super
 [[clang::pt_guarded_var
__private
__generic
__read_only
 __ptr64
image1d_t
image1d_array_t
image2d_array_t
 [[gnu::pure
image2d_array_msaa_t
image2d_msaa_depth_t
Save llvm statistics.
supervisor
tbuffer
__builtin_omp_required_simd_align
__pixel
 __attribute__((randomize_layout
__bridge
__bridge_transfer
__bridge_retain
 __attribute__((enforce_read_only_placement
_Nullable
_Nullable_result
__ptr32
 __attribute__((regcall
__w64
 [[gnu::regcall
Use WebAssembly style exceptions
 __regcall
__multiple_inheritance
__virtual_inheritance
__builtin_bit_cast
 [[clang::reinitializes
unknown
code_completion
 [[clang::release_capability
char_constant
wide_char_constant
utf32_char_constant
 [[clang::release_shared_capability
utf8_string_literal
utf16_string_literal
-save-temps
 [[clang::release_generic_capability
r_brace
period
ampamp
 [[clang::unlock_function
plus
plusplus
minus
release_shared_capability
exclaim
exclaimequal
percent
unlock_function
lessequal
lesslessequal
Select underlying type for wchar_t
 [[clang::release_handle
caretequal
pipepipe
colon
 __attribute__((reqd_work_group_size
comma
hash
hashat
 [[clang::requires_capability
lesslessless
greatergreatergreater
annot_typename
 [[clang::exclusive_locks_required
annot_non_type_dependent
annot_overload_set
-sectalign
 [[clang::requires_shared_capability
annot_pragma_captured
annot_pragma_dump
annot_pragma_weak
 [[clang::shared_locks_required
annot_pragma_fenv_access
annot_pragma_fenv_access_ms
annot_pragma_float_control
exclusive_locks_required
annot_attr_openmp
annot_pragma_openmp
-finline-small-functions
shared_locks_required
-fno-small-block-descriptors
 __declspec(restrict
__is_sealed
__is_destructible
__has_nothrow_move_assign
__has_trivial_move_assign
__has_nothrow_copy
restrict
__has_trivial_constructor
__has_trivial_destructor
__is_abstract
 __attribute__((retain
__is_final
__is_literal
__is_standard_layout
 __attribute__((return_typestate
__has_unique_object_representations
__is_trivially_relocatable
-seg1addr
 __attribute__((returns_nonnull
__is_floating_point
__is_integral
__is_array
 __attribute__((returns_twice
__is_rvalue_reference
__is_fundamental
__is_scalar
 __sptr
__is_member_pointer
__is_const
__is_unsigned
 [[clang::sycl_kernel
__is_base_of
__is_convertible_to
-fwhole-program-vtables
 [[clang::sycl_special_class
__is_nothrow_constructible
__is_trivially_constructible
sizeof
 [[clang::scoped_lockable
__builtin_ptrauth_struct_key
__builtin_ptrauth_struct_disc
-fno-spell-checking
 [[gnu::section
-segcreate
Apple 
__GLIBCXX_TYPE_INT_N_0
-Wfatal-errors
__SYCL_DEVICE_ONLY__
function
function-entry
-seglinkedit
omp_no_openmp_routines
ompx_spmd_amenable
201511
 __attribute__((sentinel
Missing size specification for pointer in datalayout string
Missing alignment specification for pointer in datalayout string
Pointer ABI alignment must be a power of 2
Sized aggregate specification in datalayout string
Missing alignment specification in datalayout string
Invalid ABI alignment, must be a power of 2
 [[clang::set_typestate
Alignment is neither 0 nor a power of 2
Unknown function pointer alignment type in datalayout string
Expected mangling specifier in datalayout string
 __attribute__((speculative_load_hardening
<path> <key>
 [[clang::speculative_load_hardening
-segs_read_only_addr
__autoreleasing
 [[clang::standalone_debug
pass-remarks-missed
pass-remarks-analysis
Enable optimization analysis remarks from passes whose name match the given regular expression
crtbegin_no_eh.o
Maximum size for the name of non-global values.
disable-i2p-p2i-opt
Use opaque pointers
__FLT_RADIX__
-segs_read_
__PIE__
NOT 
BISECT: 
not_swift_private
DW_TAG_array_type
DW_TAG_entry_point
DW_TAG_enumeration_type
DW_TAG_label
DW_TAG_lexical_block
DW_TAG_reference_type
 __attribute__((swiftasynccall
DW_TAG_subroutine_type
DW_TAG_typedef
DW_TAG_unspecified_parameters
 __attribute__((swift_async_context
DW_TAG_inlined_subroutine
DW_TAG_module
DW_TAG_subrange_type
nonnull_error
DW_TAG_catch_block
DW_TAG_const_type
DW_TAG_enumerator
nonzero_argument
DW_TAG_packed_type
DW_TAG_subprogram
DW_TAG_thrown_type
 [[clang::swift_async_error
DW_TAG_volatile_type
DW_TAG_dwarf_procedure
<filename>
 __attribute__((swift_attr
DW_TAG_imported_unit
DW_TAG_condition
DW_TAG_rvalue_reference_type
 __attribute__((swift_bridged_typedef
DW_TAG_dynamic_type
DW_TAG_atomic_type
DW_TAG_call_site_parameter
 [[clang::swiftcall
DW_TAG_function_template
DW_TAG_class_template
DW_TAG_GNU_template_template_param
 [[clang::swift_context
DW_TAG_GNU_call_site_parameter
DW_TAG_APPLE_property
Store string literals as writable data
zero_result
DW_TAG_SUN_memop_info
DW_TAG_SUN_omp_child_func
DW_TAG_SUN_dtor
 __attribute__((swift_error
DW_TAG_LLVM_ptrauth_type
DW_TAG_ALTIUM_circ_type
DW_TAG_ALTIUM_rev_carry_type
 [[clang::swift_error_result
DW_TAG_GHS_using_declaration
DW_TAG_GHS_template_templ_param
DW_TAG_UPC_relaxed
 [[clang::swift_indirect_result
DW_TAG_BORLAND_Delphi_string
DW_TAG_BORLAND_Delphi_dynamic_array
Set up preprocessor for static analyzer (done automatically when static analyzer is run).
struct
DW_AT_byte_size
DW_AT_bit_offset
DW_AT_low_pc
 __attribute__((swift_newtype
DW_AT_discr_value
DW_AT_visibility
DW_AT_string_length
swift_newtype
DW_AT_default_value
DW_AT_inline
DW_AT_producer
 __attribute__((swift_objc_members
DW_AT_bit_stride
DW_AT_upper_bound
Enable IBM XL #pragma pack handling
 __attribute__((symbol_metadata_footnote
DW_AT_count
DW_AT_data_member_location
DW_AT_decl_line
 __attribute__((sysv_abi
DW_AT_external
DW_AT_frame_base
DW_AT_identifier_case
 __attribute__((tls_model
DW_AT_specification
DW_AT_static_link
DW_AT_variable_parameter
 __attribute__((target
DW_AT_associated
DW_AT_data_location
Dynamically link the sanitizer runtime
 __attribute__((target_clones
DW_AT_call_column
DW_AT_call_file
DW_AT_binary_scale
 __attribute__((test_typestate
DW_AT_digit_count
DW_AT_picture_string
DW_AT_threads_scaled
 __attribute__((thiscall
DW_AT_pure
DW_AT_recursive
DW_AT_data_bit_offset
 __thiscall
DW_AT_string_length_bit_size
 _thiscall
Enable .XOR. as a synonym of .NEQV.
 __declspec(thread
DW_AT_reference
DW_AT_rvalue_reference
DW_AT_call_all_source_calls
 [[clang::transparent_stepping
DW_AT_call_origin
DW_AT_call_parameter
DW_AT_call_tail_call
 [[gnu::transparent_union
DW_AT_noreturn
DW_AT_alignment
DW_AT_defaulted
 [[clang::trivial_abi
DW_AT_GHS_using_declaration
DW_AT_MIPS_fde
--show-includes
 [[clang::try_acquire_capability
DW_AT_MIPS_stride
DW_AT_MIPS_abstract_name
DW_AT_MIPS_stride_byte
 [[clang::try_acquire_shared_capability
DW_AT_MIPS_assumed_shape_dopetype
DW_AT_MIPS_assumed_size
DW_AT_HP_pass_by_reference
try_acquire_shared_capability
DW_AT_HP_cold_region_high_pc
DW_AT_HP_all_variables_modifiable
DW_AT_HP_unit_name
 _Null_unspecified
DW_AT_HP_default_location
DW_AT_HP_is_result_param
Always emit __xray_customevent(...) calls even if the containing function is not always instrumented
 _Nullable_result
DW_AT_GHS_lbrace_line
DW_AT_sf_names
DW_AT_src_coords
 [[clang::type_tag_for_datatype
DW_AT_GNU_odr_signature
DW_AT_GNU_template_name
DW_AT_GNU_call_site_data_value
hidden
DW_AT_GNU_all_call_sites
DW_AT_GNU_all_source_call_sites
DW_AT_GNU_dwo_name
 __attribute__((type_visibility
DW_AT_GNU_pubnames
DW_AT_GNU_pubtypes
/showFilenames-
 __attribute__((typed_memory_operation
DW_AT_SUN_count_guarantee
DW_AT_SUN_command_line
DW_AT_SUN_language
 __uptr
DW_AT_SUN_cf_kind
DW_AT_SUN_vtable_index
DW_AT_SUN_omp_child_func
 [[clang::unavailable
DW_AT_SUN_obj_dir
DW_AT_SUN_obj_file
DW_AT_SUN_amd64_parmdump
 [[clang::uninitialized
DW_AT_SUN_return_with_const
 [[unlikely
Always emit __xray_typedevent(...) calls even if the containing function is not always instrumented
 [[clang::unlikely
DW_AT_SUN_dtor_start
DW_AT_SUN_dtor_length
DW_AT_SUN_dtor_state_deltas
 [[clang::unsafe_buffer_usage
DW_AT_SUN_is_omp_child_func
DW_AT_SUN_fortran_main_alias
DW_AT_ALTIUM_loclist
 __attribute__((unused
DW_AT_GNU_bias
DW_AT_GO_kind
DW_AT_GO_embedded_field
maybe_unused
DW_AT_IBM_home_location
DW_AT_IBM_alt_srcview
/showIncludes:user
 __attribute__((use_handle
DW_AT_BORLAND_property_index
DW_AT_BORLAND_property_default
DW_AT_BORLAND_Delphi_record
 __attribute__((used
DW_AT_BORLAND_Delphi_anonymous_method
DW_AT_BORLAND_Delphi_interface
DW_AT_BORLAND_Delphi_return
used
DW_AT_LLVM_sysroot
DW_AT_LLVM_tag_offset
DW_AT_LLVM_ptrauth_extra_discriminator
 [[clang::using_if_exists
DW_AT_APPLE_optimized
DW_AT_APPLE_flags
DEPRECATED: Filename defining the whitelist for imbuing the 'always instrument' XRay attribute.
[uuid
DW_AT_APPLE_property_getter
DW_AT_APPLE_property_setter
DW_AT_APPLE_property
no_authentication
DW_FORM_addr
DW_FORM_block2
DW_FORM_data2
process_independent
DW_FORM_block1
DW_FORM_data1
DW_FORM_strp
no_address_discrimination
DW_FORM_ref2
DW_FORM_ref4
--signed-char
default_extra_discrimination
DW_FORM_ref_sig8
DW_FORM_strx
DW_FORM_strp_sup
type_discrimination
DW_FORM_loclistx
DW_FORM_rnglistx
DW_FORM_strx1
 __attribute__((ptrauth_vtable_pointer
DW_FORM_addrx2
DW_FORM_addrx3
DW_FORM_GNU_str_index
 __attribute__((vecreturn
DW_FORM_LLVM_addrx_offset
 [[clang::vecreturn
Filename defining the list of functions/types for imbuing XRay attributes.
 __attribute__((vec_type_hint
DW_OP_const8u
DW_OP_const8s
DW_OP_dup
 [[clang::vectorcall
DW_OP_swap
DW_OP_rot
DW_OP_abs
 _vectorcall
DW_OP_mul
DW_OP_neg
DW_OP_plus
 [[gnu::visibility
DW_OP_shra
DW_OP_xor
/source-charset:
 [[gnu::warn_unused
DW_OP_ne
DW_OP_skip
DW_OP_lit2
 [[clang::warn_unused_result
DW_OP_lit6
DW_OP_lit7
DW_OP_lit9
 [[gnu::warn_unused_result
DW_OP_lit14
DW_OP_lit15
DW_OP_lit18
warn_unused_result
DW_OP_lit22
DW_OP_lit23
Only instrument 1 of N groups
 [[gnu::weak
DW_OP_lit30
DW_OP_lit31
DW_OP_reg2
 [[clang::weak_import
DW_OP_reg6
DW_OP_reg7
DW_OP_reg9
 [[gnu::weakref
DW_OP_reg14
DW_OP_reg15
DW_OP_reg18
 [[clang::export_name
DW_OP_reg22
DW_OP_reg23
/sourceDependencies:directives
 [[clang::import_module
DW_OP_reg30
DW_OP_reg31
DW_OP_breg2
 [[clang::import_name
DW_OP_breg6
DW_OP_breg7
DW_OP_breg9
 __attribute__((force_align_arg_pointer
DW_OP_breg14
DW_OP_breg15
DW_OP_breg18
 __attribute__((xray_always_instrument
DW_OP_breg22
 [[clang::xray_always_instrument
-fxray-ignore-loops
 __attribute__((xray_never_instrument
DW_OP_breg30
DW_OP_breg31
DW_OP_bregx
xray_always_instrument
DW_OP_nop
DW_OP_push_object_address
DW_OP_call4
 __attribute__((xray_log_args
DW_OP_implicit_value
DW_OP_stack_value
DW_OP_constx
 __attribute__((xnu_usage_semantics
DW_OP_deref_type
DW_OP_xderef_type
-split-dwarf-file
skip
DW_OP_HP_mod_range
DW_OP_HP_unmod_range
DW_OP_WASM_location
used-gpr
DW_OP_PGI_omp_thread_num
DW_OP_GNU_addr_index
DW_OP_LLVM_convert
all-gpr-arg
DW_OP_LLVM_arg
DW_ATE_address
DW_ATE_float
all-arg
DW_ATE_unsigned_char
DW_ATE_imaginary_float
-fxray-instruction-threshold=
 __attribute__((zero_call_used_regs
DW_ATE_UTF
DW_ATE_UCS
DW_ATE_HP_float128
interop(
DW_ATE_HP_imaginary_float128
DW_DS_unsigned
DW_DS_trailing_overpunch
NoCommentKind
DW_END_little
DW_END_lo_user
DW_ACCESS_protected
ParamCommandComment
DW_DEFAULTED_out_of_class
DW_VIS_local
-stack-protector-buffer-size
VerbatimBlockComment
DW_LANG_C
DW_LANG_Ada83
DW_LANG_Cobol85
ParagraphComment
DW_LANG_Modula2
DW_LANG_Java
DW_LANG_Ada95
HTMLEndTagComment
DW_LANG_UPC
DW_LANG_D
DW_LANG_Go
InlineCommandComment
DW_LANG_C_plus_plus_03
TextComment
-fxray-instrumentation-bundle=
VerbatimBlockLineComment
DW_LANG_Fortran03
DW_LANG_Fortran08
DW_LANG_Mips_Assembler
[out]
DW_ID_up_case
DW_ID_down_case
DW_CC_normal
DW_CC_GNU_renesas_sh
DW_CC_GNU_borland_fastcall_i386
DW_CC_BORLAND_pascal
Returns 
DW_CC_BORLAND_fastcall
DW_CC_LLVM_vectorcall
0,1,2,3
DW_CC_LLVM_OpenCLKernel
DW_CC_LLVM_Swift
DW_CC_LLVM_X86RegCall
DW_INL_inlined
DW_INL_declared_not_inlined
DW_ORD_row_major
DW_LNS_advance_line
DW_LNS_set_file
DW_LNS_set_basic_block
DW_LNS_set_epilogue_begin
DW_LNS_set_isa
-fxray-instrument
textblock
DW_MACINFO_start_file
DW_MACINFO_end_file
DW_MACRO_define
protectedsection
DW_MACRO_define_strp
DW_MACRO_undef_strp
DW_MACRO_define_sup
DW_MACRO_GNU_define
DW_MACRO_GNU_undef
DW_MACRO_GNU_define_indirect
addindex
DW_MACRO_GNU_undef_indirect_alt
DW_MACRO_GNU_transparent_include_alt
Don't emit warnings about unused arguments for the following arguments
anchor
DW_RLE_start_end
DW_RLE_start_length
DW_LLE_startx_endx
attention
DW_LLE_base_address
DW_LLE_start_end
DW_CFA_MIPS_advance_loc8
authors
DW_CFA_advance_loc
DW_CFA_offset
DW_CFA_advance_loc1
brief
DW_CFA_restore_extended
-fxray-link-deps
DW_CFA_def_cfa_offset
DW_CFA_def_cfa_expression
DW_CFA_def_cfa_sf
callback
DW_CFA_val_expression
DW_CFA_LLVM_def_aspace_cfa
DW_APPLE_PROPERTY_readonly
category
DW_APPLE_PROPERTY_copy
DW_APPLE_PROPERTY_nonatomic
DW_APPLE_PROPERTY_weak
class
DW_APPLE_PROPERTY_null_resettable
DW_APPLE_PROPERTY_class
-static-libgfortran
coclass
DW_ATOM_null
DW_ATOM_die_offset
DW_ATOM_type_flags
endcode
TYPE
VARIABLE
OTHER
cond
-fgnu-keywords
const
-fno-defer-pop
constant
Statically link the sanitizer runtime
SV3264
copyright
R_RL
R_RLA
R_TOC
dependency
R_TCL
R_REF
-static-openmp
details
R_TLS_LD
diafile
/external:W1
Use the static host OpenMP runtime while linking.
discussion
can't enter sub block: already at end of stream
Array element type can't be an Array or a Blob
Failed to read size: 
Array element type has to be an encoding of a type
Blob ends too soon
-lc++abi_p
this,arguments,all
cortex-a53
cortex-a55
cortex-a65
cortex-a75
cortex-a76
cortex-a78
dotfile
cortex-x1
cortex-x1c
neoverse-e1
else
neoverse-v2
cyclone
apple-a9
apple-a13
apple-a14
-stats-file=
endcond
exynos-m3
exynos-m4
saphira
enum
thunderx
thunderxt88
thunderxt83
exception
invalid
+rdm
+sha2
+aes
-fxray-selected-function-group=
+ras
+sve
+sve2-sm4
+rcpc
+rand
+ssbs
+f32mm
+f64mm
+brbe
+sme-f64f64
+sme-i16i64
Set language version (c++14,c++17,c++20,c++latest,c11,c17)
functiongroup
armv8-a
8.1-A
helper
+v8.2a
armv8.3-a
+v8.3a
helps
8.5-A
+v8.5a
+v8.6a
hidecallergraph
armv8.8-a
hideinitializer
hiderefby
+v9.1a
armv9.2-a
armv9.3-a
htmlinclude
+v8r
endhtmlonly
-rdm
crypto
-sm4
-sha2
-stdlib=
image
-neon
fp16
-fp16fml
include
-ras
sve2
instancesize
-sve2-sm4
sve2-sha3
-sve2-bitperm
internal
-rcpc
Clear call-used registers upon function return (AArch64/x86 only)
invariant
predres
-bf16
latexonly
-f32mm
f64mm
-brbe
pauth
-flagm
/link
-sme-f64f64
sme-i16i64
--std
maninclude
-fmodule-file=
manonly
-lto-debug-options=
v5te
v6-m
v6kz
method
v7-m
v8-a
v8.1a
v8.2a
mscfile
v8.5-a
v8.6a
v8.7-a
name
v8-r
v9.1a
noop
v9.3-a
v8-m.base
v8.1m.main
note
-vfp3
-vfp3d16
SYCL language standard to compile for.
ownership
-vfp4sp
-fp-armv8d16
+d32
page
parblock
vfp2
vfpv2
vfp4
paragraph
vfp4-d16
vfpv4-d16
Enable System z vector language extension
performance
fpv5-sp-d16
fp5-dp-d16
neon-vfpv3
arm810
strongarm
strongarm1100
privatesection
arm720t
arm9
arm920t
protected
arm10tdmi
arm1020t
--sysroot=
public
arm1022e
arm926ej-s
mpcore
pure
arm1156t2-s
arm1156t2f-s
cortex-m0plus
related
cortex-a8
cortex-a9
cortex-a17
relates
cortex-r5
relatesalso
Add directory to framework include search path
remark
cortex-m23
cortex-m33
cortex-m85
result
cortex-a55
cortex-a57
cortex-a73
returns
cortex-a78
cortex-a78c
cortex-x1c
rtfinclude
cyclone
exynos-m3
--system-header-prefix
endrtfonly
-hwdiv-arm
-hwdiv
aapcs16
secreflist
armv4
armv4t
security
armv5te
armv5tej
seealso
armv6k
showinitializer
+v6kz
+v6m
showrefs
armv7ve
armv7-r
skip
+v7m
armv7e-m
armv8-a
snippet
8.1-A
+v8.1a
-target-abi
struct
armv8.4-a
8.4-A
8.5-A
subsection
+v8.6a
armv8.7-a
+v8.7a
superclass
+v9a
+v9.1a
template
+v9.2a
templatefield
test
+v8m.base
armv8-m.main
armv8.1-m.main
throw
armv7s
armv7k
todo
vfpv3-fp16
vfpv3-d16-fp16
fp-armv8
typedef
neon-vfpv4
neon-fp-armv8
-target-feature
enduml
fp16
until
+lob
-lob
-cdecp0
verbinclude
+cdecp2
-cdecp2
-cdecp3
endverbatim
cdecp5
+cdecp5
warning
-finstrument-function-entry-bare
weakgroup
xmlonly
+atomics
OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
OpenCL only. Enable or disable OpenCL extensions/optional features. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
Path to a persistent on-disk backing store for the builtin CAS. '-fcas-path=auto' chooses a path in the user's system cache.
<dir>|auto
<name>=<value>
Path to a shared library implementing the LLVM CAS plugin API.
Turn off -fdepscan-share and -fdepscan-share-parent.
Bytes allocated: 
: for the 
>...
' value invalid for uint argument!
' value invalid for ullong argument!
 (default: 
: CommandLine Error: Option '
' registered more than once!
<CFGDIR>
The version of target SDK used for compilation
Allocation failed
zlib error: Z_BUF_ERROR
zlib error: Z_STREAM_ERROR
+fpuv2_df
+fdivdu
+fpuv3_sf
e801
ck802
ck802j
ck803
ck803h
ck803f
ck803et
ck803eht
--target=
ck803r2
ck803r3
ck803hr3
ck803htr1
ck803htr2
ck803fr1
ck803fhr3
ck803er1
ck803ehr1
ck803etr2
ck803etr3
Assume thread-local variables are defined in the executable
ck803efhr1
ck803efhr2
ck803ftr2
ck803eftr3
ck803efhtr1
ck803efhtr3
ck803s
ck803st
ck803sef
ck804t
ck804ht
Treat all source files as C
ck804ef
ck804efh
ck804efht
e804ft
e804df
ck805
ck805et
ck805ft
i805f
ck807ef
Use GCC installation in the specified directory. The directory ends with path components like 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Note: executables (e.g. ld) used by the compiler are not overridden by the selected GCC installation
ck810eft
ck810
ck810ft
ck810ev
ck810tv
c810v
c810eftv
ck860
ck860v
none
fpuv2_sf
Dump templight information to stdout
-fpuv3_hi
fpuv3_hf
-fpuv3_sf
+floate1
-floate1
+float1e2
float3e4
+float3e4
+float7e60
-hwdiv
multiple_stld
Specify a directory where Clang can find 'include' and 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Clang will use the GCC installation with the largest version
+edsp
-edsp
-dsp1e2
dspv2
+dspv2
dsp_silan
-elrw
trust
java
+cache
-cache
Time individual commands
high-registers
+high-registers
+smart
-vdsp2e3
vdsp2e60f
-vdsp2e60f
+hard-tp
-soft-tp
constpool
Emit type record hashes in a .debug$H section
<script>
-ccrt
vdspv1
+2e3
3e3r1
-3e3r3
Multiple errors:
Don't emit errors on invalid analyzer-config inputs
<pathname>
return,branch,full,none
Enable C++ Extensions for Concepts. (deprecated - use -std=c++2a)
-fd-lines-as-code
Generate source-level debug information with dwarf version 2
cpp-output
cuda-cpp-output
objc-cpp-output
objective-c++-cpp-output
failed_to_create_uniq_file
output_stream_error
Allocation failed
decimal64
decimal128
 imaginary
noexcept 
sizeof... 
operator.*
typeid 
yptn
template parameter object for 
vtable for 
-traditional
virtual thunk to 
non-virtual thunk to 
reference temporary for 
/translateInclude
Invalid UTF-8 sequence
[{0}:{1}, byte={2}]: {3}
Invalid JSON value (false?)
Expected , or ] after array element
Expected , or } after object property
Invalid escape sequence
failed to create unique file 
Select the container format for clang modules and PCH. Supported options are 'raw' and 'obj'.
Run instrumented parse and dump the parsing log
-trim-egraph
-INF
Dump the parse tree
Stack dump:
Dump the parse tree (skips the semantic checks)
string must be lowercase
standard user-level extension 'e' requires 'rv32'
invalid standard user-level extension '%c'
invalid extension prefix '
%s not given in canonical order '%s'
unsupported %s '%s'
zve32x
zve32f
d requires f extension to also be specified
zfhmin
zhinx
zvl*b requires v or zve* extension to also be specified
lp64d
lp64
-triple
zbkb
zkne
zknh
zksh
zmmul
zvl64b
zvl1024b
zvl2048b
-tune-cpu
zve64f
zicbom
mafdqlcbkjtpvn
multi-character extensions must be separated by underscores
requires '-menable-experimental-extensions' for experimental extension '
-gdwarf-3
Allocation failed
) is larger than maximum value for size type (
Directly create compilation output files. This may lead to incorrect incremental builds if the compiler crashes
can't open file '
malformed section header on line 
malformed regex for section 
malformed line 
Set the maximum number of entries to print in a constexpr evaluation backtrace (0 = no limit).
                          ... Statistics Collected ...
%*llu %-*s - %s
partial_ordering
Allocation failed
Manglings '
' and '
-fconstant-array-class=
-fcuda-allow-variadic-functions
-fcuda-is-device
-twolevel_namespace
invalid
generic-rv32
rocket-rv64
equivalent
sifive-e31
sifive-e34
sifive-s51
greater
sifive-u74
rocket
+64bit
CFStringCreateWithFormat
pitcairn
verde
oland
CFStringAppendFormat
hawaii
gfx702
kabini
gfx801
carrizo
tonga
(anonymous namespace)
(anonymous 
polaris11
gfx805
auto
gfx908
gfx90c
gfx1011
__private_extern__
register
gfx1012
gfx1013
gfx1036
gfx1100
gfx1103
WinMain
r630
-gdwarf-5
-traditional-cpp
Tune for a specific cpu type
DllMain
rv740
rv770
cypress
<deduction guide for 
operator 
sumo
sumo2
caicos
<using-directive>
-fno-devirtualize
AccessSpec
Block
%9lld  
   ---User Time---
   --System Time--
  ---Mem---
ClassScopeFunctionSpecialization
"time.
.wall
Export
.instr
misc
        -----     
FileScopeAsm
-umbrella
aarch64
aarch64_be
amdgcn
bpfeb
LifetimeExtendedTemporary
hexagon
hsail64
lanai
Using
loongarch64
m68k
mips64el
HLSLBuffer
nvptx
powerpc64
powerpcle
Namespace
riscv32
riscv64
--undefine-macro
ObjCCompatibleAlias
spirv32
spirv64
tcele
ObjCCategoryImpl
wasm32
wasm64
x86_64
ObjCInterface
mipsisa64r6el
arm64ec
wasm
ObjCMethod
amdhsa
amdpal
Enables DWARF32 format for ELF binaries, if debug information emission is enabled.
BuiltinTemplate
driverkit
elfiamcu
fuchsia
ClassTemplate
kfreebsd
TypeAliasTemplate
nacl
netbsd
TemplateTemplateParm
bridgeos
xros
-unexported_symbols_list
Record
android
code16
eabi
ClassTemplateSpecialization
gnuabin32
gnueabi
gnux32
TemplateTypeParm
musl
musleabi
simulator
TypeAlias
hull
domain
Enables DWARF64 format for ELF binaries, if debug information emission is enabled.
UnresolvedUsingTypename
miss
callable
ppc32le
UsingDirective
mipsr6el
arm1176jzf-s
UsingShadow
strongarm
arm7tdmi
i986
Binding
xscaleeb
mipseb
-unwindlib=
ObjCAtDefsField
mipsn32r6el
sparc64
spirv32v1.2
Function
spirv64v1.0
spirv64v1.1
spirv64v1.3
CXXMethod
-fno-tracer
CXXConstructor
CXXConversion
HANGUL SYLLABLE 
MSProperty
ImplicitParam
ParmVar
-fheinous-gnu-extensions
VarTemplateSpecialization
VarTemplatePartialSpecialization
EnumConstant
RedirectingFileSystem (UseExternalNames: 
ExternalFS:
 (UseExternalName: false)
expected root node
OMPDeclareMapper
case-sensitive
use-external-names
roots
TemplateParamObject
'fallthrough' and 'redirecting-with' are mutually exclusive
expected valid redirect kind
duplicate key '
UnresolvedUsingValue
entry already has 'contents' or 'external-contents'
missing key 'contents' or 'external-contents'
entry with relative path at the root level is not discoverable
OMPRequires
missing key '
  'version': 0,
ObjCPropertyImpl
'type': 'directory',
PragmaComment
-fdigraphs
<macro>
RequiresExprBody
DiscardOnSignal
ImplyCreateDirectories
-fdiagnostics-show-option
TranslationUnit
note: 
remark: 
 AccessSpec decls, 
popcnt
sse2
sse3
sse4.2
 Block decls, 
fma4
avx512f
 ClassScopeFunctionSpecialization decls, 
avx512vl
avx512bw
avx512er
 Export decls, 
avx5124vnniw
avx5124fmaps
avx512vbmi2
 FileScopeAsm decls, 
avx512bf16
avx512vp2intersect
i486
 FriendTemplate decls, 
i586
pentium
 LifetimeExtendedTemporary decls, 
pentium-m
c3-2
pentium4m
 Using decls, 
penryn
bonnell
silvermont
 HLSLBuffer decls, 
nehalem
corei7
corei7-avx
 Namespace decls, 
core-avx2
broadwell
Emit a compilation database fragment to the specified directory
 ObjCCompatibleAlias decls, 
icelake-client
rocketlake
sapphirerapids
 ObjCCategoryImpl decls, 
lakemont
k6-3
 ObjCInterface decls, 
athlon-4
opteron
 ObjCMethod decls, 
amdfam10
barcelona
Override validator version for module. Format: <major.minor>;Default: DXIL.dll version or current internal version
 BuiltinTemplate decls, 
znver1
znver2
x86-64-v2
 ClassTemplate decls, 
3dnow
3dnowa
 TypeAliasTemplate decls, 
clflushopt
clwb
 TemplateTemplateParm decls, 
fsgsbase
 Enum decls, 
Emit reproducer on (option: off, crash (default), error, always)
 Record decls, 
movdir64b
movdiri
 ClassTemplateSpecialization decls, 
rdpid
rdpru
rdseed
 TemplateTypeParm decls, 
shstk
uintr
 TypeAlias decls, 
wbnoinvd
For use with /winsysroot, defaults to newest found
 UnresolvedUsingTypename decls, 
-fno-diagnostics-show-hotness
 UnresolvedUsingIfExists decls, 
The compilation directory to embed in the debug info and coverage mapping.
YAML
 UsingShadow decls, 
Expected quote at end of scalar
Found unexpected ':' while scanning a plain scalar
Got empty plain scalar
 Binding decls, 
A text line is less indented than the block scalar
-?:,[]{}#&*!|>'"%@`
Can only iterate over the stream once
 ObjCAtDefsField decls, 
tag:yaml.org,2002:seq
Unexpected token in Key Value.
 Function decls, 
Could not find closing ]!
Expected , between entries!
 CXXMethod decls, 
missing required key '
unknown key '
expected sequence of bit values
 CXXConversion decls, 
Map key must be a scalar
Map value must not be empty
 MSProperty decls, 
false
 Var decls, 
-vectorize-slp
-fexperimental-max-bitint-width=
alnum
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
blank
digit
 ParmVar decls, 
print
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~ 
!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
 VarTemplatePartialSpecialization decls, 
 IndirectField decls, 
alert
backspace
 OMPDeclareMapper decls, 
form-feed
 TemplateParamObject decls, 
--verify-debug-info
 UnresolvedUsingValue decls, 
 OMPRequires decls, 
exclamation-mark
number-sign
 ObjCPropertyImpl decls, 
left-parenthesis
right-parenthesis
comma
 PragmaDetectMismatch decls, 
full-stop
slash
-gfull
 StaticAssert decls, 
seven
colon
not available on 
greater-than-sign
question-mark
left-square-bracket
obsoleted in 
circumflex-accent
underscore
grave-accent
00000000-0000-0000-C000-000000000046
Reserve the x19 register (AArch64/RISC-V only)
llvm_regexec() failed to match
REG_BADPAT
invalid collating element
REG_ECTYPE
trailing backslash (\)
%02hhx
brackets ([ ]) not balanced
REG_EPAREN
REG_EBRACE
__invoke
invalid character range
REG_ESPACE
repetition-operator operand invalid
private
"can't happen" -- you found a bug
REG_INVARG
Load and verify that a pre-compiled header file is not stale
self
x86_64-apple-darwin22.1.0
_cmd
-fno-tree-vectorize
NSObject
0123456789abcdef
-%%%%%%
.cache
 ...
__asm (
Child timed out but wouldn't die
Error waiting for child process
Program could not be executed
" doesn't exist!
@import 
/dev/null
Cannot posix_spawn_file_actions_addopen
<prefixes>
using enum 
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
%-2d
acquire_capability
fast,on,off,fast-honor-pragmas
pthread_create failed
@compatibility_alias 
RuntimeRoot should be an array
PublicSDKContentRoot
-ggdb2
__builtin_sve_svldff1uh_gather_u64base_offset_u64
__builtin_sve_svldff1uh_gather_u64base_s64
__covariant 
__builtin_sve_svldff1uh_gather_u64index_s64
__contravariant 
shared_lock_function
@implementation 
__builtin_sve_svldff1uh_s32
@class 
acquired_after
@protocol 
__builtin_sve_svldff1uh_vnum_s32
--version
__builtin_sve_svldff1uw_gather_s64index_s64
@required
assert_capability
@optional
__builtin_sve_svldff1uw_gather_u64base_index_s64
getter = 
Print version information
setter = 
__builtin_sve_svldff1uw_gather_u64base_s64
__module_private__ 
assert_exclusive_lock
 struct
-ggdb3
-version
typedef 
__builtin_sve_svldff1uw_vnum_s64
using typename 
diagnose_if
using namespace 
__builtin_sve_svldnf1_f32
mutable 
Print the compiler version
extern 
__builtin_sve_svldnf1_s64
__private_extern__ 
guarded_by
consteval 
-ggdb
-via-file-asm
 throw(
__builtin_sve_svldnf1_vnum_f32
 noexcept
locks_excluded
auto 
__builtin_sve_svldnf1_vnum_s64
 requires 
Write assembly to file for input to assemble jobs
 = 0
__builtin_sve_svldnf1_vnum_u64
 = delete
release_capability
 = default
-fno-trigraphs
__thread 
/vmb
_Thread_local 
__builtin_sve_svldnf1sb_vnum_s16
thread_local 
release_generic_capability
#pragma omp declare mapper (
__builtin_sve_svldnf1sb_vnum_u32
#pragma omp declare reduction (
Use a best-case representation method for member pointers
 initializer(
__builtin_sve_svldnf1sh_u32
omp_priv(
requires_capability
omp_priv = 
#pragma omp allocate
/vmg
#pragma omp requires 
__builtin_sve_svldnf1sw_vnum_s64
#pragma omp threadprivate
requires_shared_capability
@dynamic 
__builtin_sve_svldnf1ub_s64
static_assert(
Use a most-general representation for member pointers
__builtin_sve_svldnf1ub_vnum_s16
shared_trylock_function
<template param 
-fno-diagnostics-use-presumed-location
__func__
/vmm
__FUNCTION__
__builtin_sve_svldnf1uh_u32
__FUNCDNAME__
try_acquire_shared_capability
L__FUNCTION__
__builtin_sve_svldnf1uh_vnum_u32
__PRETTY_FUNCTION__
Set the default most-general representation to multiple inheritance
__FUNCSIG__
__builtin_sve_svldnf1uw_vnum_s64
L__FUNCSIG__
iboutletcollection
_block_invoke
-ginline-line-tables
virtual 
/vms
__cdecl 
__builtin_sve_svldnt1_gather_s64index_u64
__stdcall 
Pointer
__fastcall 
__builtin_sve_svldnt1_gather_u32base_f32
__thiscall 
Set the default most-general representation to single inheritance
__vectorcall 
__builtin_sve_svldnt1_gather_u32base_offset_f32
__regcall 
vec_type_hint
-fno-typed-cxx-new-delete
/vmv
__builtin_sve_svldnt1_gather_u64base_f64
 const
cpu_specific
__builtin_sve_svldnt1_gather_u64base_offset_f64
Set the default most-general representation to virtual inheritance
__builtin_sve_svldnt1_gather_u64base_u64
top level
argument_with_type_tag
-gline-directives-only
/volatile:iso
%02x
__builtin_sve_svldnt1_s32
__clang_arm_builtin_alias
__builtin_sve_svldnt1_u32
%08x
Volatile loads and stores have standard semantics
0123456789ABCDEF
__builtin_sve_svldnt1_vnum_f16
\U00
blocks
Ignore #line directives when displaying diagnostic locations
/volatile:ms
__builtin_sve_svldnt1_vnum_u32
guard
__builtin_sve_svldnt1b_s8_x4
Volatile loads and stores have acquire and release semantics
__builtin_sve_svldnt1b_vnum_s8_x4
consumable
-gline-tables-only
__real
-vtordisp-mode=
__imag
__builtin_sve_svldnt1d_u64_x4
__extension__
format
co_await
__builtin_sve_svldnt1d_vnum_s64_x4
Dependent
Control vtordisp placement on win32 targets
BitCast
__builtin_sve_svldnt1h_bf16_x4
LValueBitCast
shader
LValueToRValueBitCast
-fno-typed-memory-operations-experimental
LValueToRValue
NoOp
__builtin_sve_svldnt1h_vnum_bf16_x4
BaseToDerived
unroll
DerivedToBase
__builtin_sve_svldnt1h_vnum_s16_x4
UncheckedDerivedToBase
Dynamic
__builtin_sve_svldnt1sb_gather_s64offset_u64
ToUnion
unroll_and_jam
ArrayToPointerDecay
-glldb
FunctionToPointerDecay
NullToPointer
__builtin_sve_svldnt1sb_gather_u64base_offset_u64
NullToMemberPointer
mode
BaseToDerivedMemberPointer
__builtin_sve_svldnt1sb_gather_u64offset_u64
DerivedToBaseMemberPointer
Show commands to run and use verbose output
MemberPointerToBoolean
__builtin_sve_svldnt1sh_gather_s64offset_u64
ReinterpretMemberPointer
Build a C++20 Header Unit from a header.
UserDefinedConversion
-fno-digraphs
ConstructorConversion
IntegralToPointer
__builtin_sve_svldnt1sh_gather_u32offset_u32
PointerToIntegral
objc_bridge
PointerToBoolean
__builtin_sve_svldnt1sh_gather_u64base_offset_u64
ToVoid
Disable all warnings
MatrixCast
__builtin_sve_svldnt1sh_gather_u64index_u64
VectorSplat
objc_bridge_related
IntegralCast
/Gm-
IntegralToBoolean
IntegralToFloating
__builtin_sve_svldnt1sw_gather_u64base_index_u64
FloatingToFixedPoint
objc_method_family
FixedPointToFloating
__builtin_sve_svldnt1sw_gather_u64base_u64
FixedPointCast
Enable -Wall
FixedPointToIntegral
__builtin_sve_svldnt1sw_gather_u64offset_u64
IntegralToFixedPoint
ownership_holds
FixedPointToBoolean
-fno-typed-memory-operations
FloatingToIntegral
FloatingToBoolean
__builtin_sve_svldnt1ub_gather_u32offset_u32
BooleanToSignedIntegral
ownership_takes
FloatingCast
__builtin_sve_svldnt1ub_gather_u64base_u64
CPointerToObjCPointerCast
BlockPointerToObjCPointerCast
__builtin_sve_svldnt1uh_gather_s64index_u64
AnyPointerToBlockPointerCast
ObjCObjectLValueCast
-gmodules
FloatingRealToComplex
FloatingComplexToReal
__builtin_sve_svldnt1uh_gather_u32base_u32
FloatingComplexToBoolean
set_typestate
FloatingComplexCast
__builtin_sve_svldnt1uh_gather_u64base_index_u64
FloatingComplexToIntegralComplex
Enable -Wall and -Wextra
IntegralRealToComplex
__builtin_sve_svldnt1uh_gather_u64base_u64
IntegralComplexToReal
swift_async_error
IntegralComplexToBoolean
Disallow alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:'
IntegralComplexCast
-Wa,
IntegralComplexToFloatingComplex
__builtin_sve_svldnt1uw_gather_s64offset_u64
ARCProduceObject
swift_newtype
ARCConsumeObject
__builtin_sve_svldnt1uw_gather_u64base_offset_u64
ARCReclaimReturnedObject
Pass the comma separated arguments in <arg> to the assembler
ARCExtendBlockObject
__builtin_sve_svldnt1uw_gather_u64index_u64
AtomicToNonAtomic
test_typestate
NonAtomicToAtomic
-gno-codeview-ghash
CopyAndAutoreleaseBlockObject
-Wall
BuiltinFnToFnPtr
__builtin_sve_svldnt1w_u32_x4
ZeroToOCLOpaqueType
type_visibility
AddressSpaceConversion
__builtin_sve_svldnt1w_vnum_s32_x4
IntToOCLSampler
/Wall
FirebloomPointerCast
UWiq8y
FlexibleArrayCountDeref(BasePtr, FamPtr, Count)
visibility
FlexibleArrayCountCast(BasePtr, FamPtr, Count)
-fno-unique-basic-block-section-names
FlexibleArrayCountAssign(BasePtr, FamPtr, Count)
Enable -Weverything
UWiq8s
zero_call_used_regs
UWiq2Wi
--warn-=
UWiq8Us
annotate_type
-gno-embed-source
--warn-
__builtin_sve_svlogb_f16_x
macOS
__builtin_sve_svlogb_f32_z
-WCL4
__builtin_sve_svlsl_n_s16_m
-fmodule-implementation-of
-fno-direct-access-external-data
-Wdeprecated
__builtin_sve_svlsl_n_s64_z
iOSApplicationExtension
__builtin_sve_svlsl_n_u16_m
Enable warnings for deprecated constructs and define __DEPRECATED
__builtin_sve_svlsl_n_u32_x
macOSApplicationExtension
-gno-gnu-pubnames
__builtin_sve_svlsl_s16_m
tvos_app_extension
__builtin_sve_svlsl_s32_x
-weak-l
__builtin_sve_svlsl_s64_z
__builtin_FILE
watchos_app_extension
__builtin_FUNCTION
-fno-unique-section-names
__builtin_LINE
-weak_framework
__builtin_COLUMN
__builtin_sve_svlsl_u32_x
__builtin_source_location
maccatalyst
_M_file_name
__builtin_sve_svlsl_u64_z
_M_line
-weak_library
_M_column
__builtin_sve_svlsl_wide_n_s16_m
maccatalyst_app_extension
Don't emit inline line tables.
even
-weak_reference_mismatches
__builtin_sve_svlsl_wide_n_s8_z
visionOS
__builtin_sve_svlsl_wide_n_u16_z
-Wframe-larger-than=
__builtin_sve_svlsl_wide_n_u32_z
ShaderModel
captures not currently allowed
Use GOT indirection to reference external data symbols
deallocate
-Wframe-larger-than
__builtin_is_constant_evaluated
__builtin_sve_svlsl_wide_s32_m
std::is_constant_evaluated
instancetype
<...>
__builtin_sve_svlsl_wide_s8_x
static_cast
-whatsloaded
dynamic_cast
__builtin_sve_svlsl_wide_u16_x
reinterpret_cast
inline 
const_cast
-gno-record-command-line
addrspace_cast
-why_load
<invalid cast>
__builtin_sve_svlsl_wide_u8_x
__bridge
__bridge_transfer
__builtin_sve_svlsr_n_u16_z
__bridge_retained
-whyload
generation counter overflowed
__builtin_sve_svlsr_n_u64_m
using-enum declaration
-fno-unit-at-a-time
/winsdkdir
__builtin_sve_svlsr_u16_z
using declaration
__builtin_sve_svlsr_u64_m
Path to the Windows SDK
__builtin_sve_svlsr_u8_x
_Static_assert
-gno-reproducible
/winsdkversion
__builtin_sve_svlsr_wide_n_u8_m
__final
__builtin_sve_svlsr_wide_u16_x
Full version of the Windows SDK, defaults to newest found
-finstrument-functions
-fmodule-map-file-home-is-cwd
-fno-directives-only
/winsysroot
__builtin_sve_svmad_f32_m
__builtin_sve_svmad_f64_m
Same as "/diasdkdir <dir>/DIA SDK" /vctoolsdir <dir>/VC/Tools/MSVC/<vctoolsversion> "/winsdkdir <dir>/Windows Kits/10"
__builtin_sve_svmad_n_f16_m
-gno-split-dwarf
-Wl,
__builtin_sve_svmad_n_f64_m
ParseClass
__builtin_sve_svmad_n_s16_m
Pass the comma separated arguments in <arg> to the linker
__builtin_sve_svmad_n_s32_m
(anonymous)
-fno-unroll-loops
-Wlarge-by-value-copy=
__builtin_sve_svmad_n_s8_m
_Clang
__builtin_sve_svmad_n_u16_m
-Wlarge-by-value-copy
__builtin_sve_svmad_n_u32_m
noexcept(false)
--gpu-bundle-output
Warn if a function definition returns or accepts an object larger in bytes than a given value
__builtin_sve_svmad_n_u8_m
maybe_unused
__builtin_sve_svmad_s16_m
-Wlarger-than-
__builtin_sve_svmad_s32_m
__is_abstract
-fno-discard-value-names
-Wlarger-than=
size_t
__builtin_sve_svmad_s8_m
ssize_t
__is_arithmetic
intmax_t
__builtin_sve_svmad_u16_m
uintmax_t
unimplemented feature
__builtin_sve_svmad_u32_m
missing source location
__is_assignable
Interpreter cannot return values
--gpu-instrument-lib=
missing source expression
-Wno-deprecated
<lambda
__builtin_sve_svmad_u8_m
__is_bounded_array
__builtin_sve_svmatch_s16
-Wno-nonportable-cfstrings
__builtin_sve_svmax_f16_m
basic_istream
__is_complete_type
-fno-unsafe-loop-optimizations
basic_ostream
-Wno-rewrite-macros
__builtin_sve_svmax_f64_z
basic_iostream
__is_const
__builtin_sve_svmax_n_f32_m
char_traits
Silence ObjC rewriting warnings
U2ASI
__builtin_sve_svmax_n_f64_x
__is_convertible
CLglobal
--gpu-max-threads-per-block=
CLdevice
-Wno-system-headers
CLhost
__builtin_sve_svmax_n_s64_m
CLlocal
__is_destructible
CLconstant
__builtin_sve_svmax_n_s8_x
CLprivate
-Wno-write-strings
CLgeneric
__builtin_sve_svmax_n_u16_z
SYglobal
Use the current working directory as the home directory of module maps specified by -fmodule-map-file=<FILE>
SYdevice
Do not discard value names in LLVM IR
SYhost
-Wnonportable-cfstrings
SYlocal
__builtin_sve_svmax_n_u8_x
SYprivate
__is_final
CUdevice
__builtin_sve_svmax_s16_z
CUconstant
-working-directory=
CUshared
__builtin_sve_svmax_s64_m
ptr32_sptr
__is_fundamental
ptr32_uptr
--gpu-use-aux-triple-only
ptr64
-working-directory
__builtin_sve_svmax_u16_z
__is_interface_class
__builtin_sve_svmax_u64_m
Resolve file paths relative to the specified directory
cannot yet mangle expression type %0
__builtin_sve_svmax_u8_x
u8__uuidof
__is_lvalue_expr
u8__uuidoft
-fno-unsigned-char
u8__uuidofz
-Wp,
?: operator with omitted middle operand cannot be mangled
__builtin_sve_svmaxnm_f64_m
__is_member_function_pointer
__builtin_sve_svmaxnm_n_f16_x
Pass the comma separated arguments in <arg> to the preprocessor
__builtin_sve_svmaxnm_n_f32_z
__is_member_pointer
-gpubnames
/Wp64
__builtin_sve_svmaxnmp_f64_m
__is_nothrow_constructible
__builtin_sve_svmaxnmv_f64
--write-dependencies
u11__alignof__
__builtin_sve_svmaxp_f32_x
cannot yet mangle __builtin_ptrauth_type_discriminator expression
__is_nullptr
cannot yet mangle __builtin_xnu_type_signature expression
-fno-dllexport-inlines
cannot yet mangle __builtin_xnu_type_summary expression
--write-user-dependencies
cannot yet mangle __builtin_tmo_get_type_data expression
__builtin_sve_svmaxp_s64_x
cannot yet mangle __builtin_tmo_get_type_descriptor expression
__is_pod
cannot yet mangle vec_step expression
__builtin_sve_svmaxp_u16_x
cannot yet mangle __builtin_omp_required_simd_align expression
-Wsystem-headers
__builtin_sve_svmaxp_u64_x
__is_polymorphic
Do not emit RTTI data
-Wundef-prefix=
__builtin_sve_svmaxv_s64
__is_referenceable
ixix
__builtin_sve_svmaxv_u64
Enable warnings for undefined macros with a prefix in the comma separated list <arg>
__builtin_sve_svmin_f16_z
__is_rvalue_reference
-fno-unwind-tables
_SUBSTPACK_
__builtin_sve_svmin_n_f16_x
v110_SUBSTPACK
__is_scalar
__builtin_sve_svmin_n_f32_z
-Wwrite-strings
LDnE
__builtin_sve_svmin_n_s16_m
__is_sealed
-grecord-gcc-switches
/WX-
__builtin_sve_svmin_n_s64_z
__is_standard_layout
__builtin_sve_svmin_n_u16_m
Do not treat warnings as errors (default)
-fhip-dump-offload-linker-script
v18co_await
-fmodule-map-file=
v18co_yield
-fno-dollar-ok
u33__builtin_sycl_unique_stable_name
dtdefpT
__builtin_sve_svmin_s16_m
__is_trivially_copyable
__builtin_sve_svmin_s32_x
Treat warnings as errors
__builtin_sve_svmin_s64_z
__is_union
Set __regcall as a default calling convention
__builtin_sve_svmin_u32_x
__is_void
__builtin_sve_svmin_u64_z
Enable the specified warning
__builtin_sve_svminnm_f16_m
RTT_JOIN(__, add_lvalue_reference)
Don't use constructor homing for debug info
<warning>
__builtin_sve_svminnm_f64_z
RTT_JOIN(__, add_rvalue_reference)
__builtin_sve_svminnm_n_f32_m
__builtin_sve_svminnm_n_f64_x
RTT_JOIN(__, make_signed)
Tune debug info to be reproducible.
Suppress all warnings
__builtin_sve_svminnmv_f16
RTT_JOIN(__, remove_all_extents)
__builtin_sve_svminp_f16_x
__builtin_sve_svminp_f64_x
RTT_JOIN(__, remove_cv)
-fno-dollars-in-identifiers
-Xanalyzer
__builtin_sve_svminp_s8_x
RTT_JOIN(__, remove_extent)
__builtin_sve_svminp_u32_x
Pass <arg> to the static analyzer
__builtin_sve_svminp_u8_x
RTT_JOIN(__, remove_reference_t)
Emit RTTI data (default)
-Xarch_device
12_GLOBAL__N_1
__builtin_sve_svminv_u16
RTT_JOIN(__, remove_volatile)
__builtin_sve_svmla_f16_m
Li0E
Pass <arg> to the CUDA/HIP device compilation
decvP
__builtin_sve_svmla_f32_x
plcvPcad
__builtin_sycl_unique_stable_name
Don't use __cxa_atexit for calling destructors
-Xarch_host
q4fq4fq4fq4fIUWi
cannot mangle this unnamed union NTTP yet
block literal parsing
__builtin_sve_svmla_lane_s32
__device_stub__
Pass <arg> to the CUDA/HIP host compilation
__regcall3__
__builtin_sve_svmla_lane_u64
Android
Set __fastcall as a default calling convention
-Xarch_
__builtin_sve_svmla_n_f64_x
iOS (App Extension)
U25pass_dynamic_object_size
__builtin_sve_svmla_n_s16_z
U17pass_object_size
-Xassembler
__builtin_sve_svmla_n_s64_m
Load this module map file
Disallow '$' in identifiers
Pass <arg> to the assembler
cannot mangle fixed point literals yet
__builtin_sve_svmla_n_u16_z
macCatalyst (App Extension)
__builtin_sve_svmla_n_u64_m
U7_Atomic
-Xclang=
__builtin_sve_svmla_n_u8_x
U13block_pointer
Swift
Disable buffer security check
Alias for -Xclang
__builtin_sve_svmla_s64_m
11objc_object
__builtin_sve_svmla_s8_x
10objc_class
-Xclang
13objc_selector
__builtin_sve_svmla_u16_z
ocl_image1d_ro
lambda expression parsing
ocl_image1d_array_ro
Use .ctors/.dtors instead of .init_array/.fini_array
ocl_image1d_buffer_ro
Pass <arg> to clang -cc1
ocl_image2d_ro
__builtin_sve_svmla_u8_x
ocl_image2d_array_ro
const_cast
ocl_image2d_depth_ro
__builtin_sve_svmlalb_lane_f32
ocl_image2d_array_depth_ro
-Xcuda-fatbinary
ocl_image2d_msaa_ro
__builtin_sve_svmlalb_lane_s64
ocl_image2d_array_msaa_ro
reinterpret_cast
ocl_image2d_msaa_depth_ro
-gsimple-template-names=
ocl_image2d_array_msaa_depth_ro
Pass <arg> to fatbinary invocation
ocl_image3d_ro
__builtin_sve_svmlalb_n_s16
ocl_image1d_wo
ocl_image1d_array_wo
__builtin_sve_svmlalb_n_u32
ocl_image1d_buffer_wo
-Xcuda-ptxas
ocl_image2d_wo
__builtin_sve_svmlalb_s64
ocl_image2d_array_wo
__uuidof
ocl_image2d_depth_wo
-fno-double-square-bracket-attributes
ocl_image2d_array_depth_wo
Pass <arg> to the ptxas assembler
ocl_image2d_msaa_wo
__builtin_sve_svmlalt_lane_u32
ocl_image2d_array_msaa_wo
ocl_image2d_msaa_depth_wo
__builtin_sve_svmlalt_n_s32
ocl_image2d_array_msaa_depth_wo
-Xflang
ocl_image3d_wo
__builtin_sve_svmlalt_n_u64
ocl_image1d_rw
requires
ocl_image1d_array_rw
simple,mangled
ocl_image1d_buffer_rw
Pass <arg> to the flang compiler
ocl_image2d_rw
__builtin_sve_svmls_f16_x
ocl_image2d_array_rw
Allocation failed
ocl_image2d_depth_rw
__builtin_sve_svmls_f32_z
ocl_image2d_array_depth_rw
-Xlinker
ocl_image2d_msaa_rw
__builtin_sve_svmls_lane_f16
ocl_image2d_array_msaa_rw
space
ocl_image2d_msaa_depth_rw
-fno-use-linker-plugin
ocl_image2d_array_msaa_depth_rw
Pass <arg> to the linker
ocl_image3d_rw
__builtin_sve_svmls_lane_u64
11ocl_sampler
9ocl_event
__builtin_sve_svmls_n_f32_m
12ocl_clkevent
-Xmicrosoft-visualc-tools-root
9ocl_queue
__builtin_sve_svmls_n_f64_x
13ocl_reserveid
unsafe_unretained
ocl_intel_sub_group_avc_mce_payload_t
-gsplit-dwarf=
ocl_intel_sub_group_avc_ime_payload_t
-Xmicrosoft-visualc-tools-version
ocl_intel_sub_group_avc_ref_payload_t
__builtin_sve_svmls_n_s64_m
ocl_intel_sub_group_avc_sic_payload_t
retain
ocl_intel_sub_group_avc_mce_result_t
__builtin_sve_svmls_n_s8_x
ocl_intel_sub_group_avc_ime_result_t
-Xmicrosoft-windows-sdk-root
ocl_intel_sub_group_avc_ref_result_t
-finteger-4-integer-8
ocl_intel_sub_group_avc_sic_result_t
-fmodule-maps
ocl_intel_sub_group_avc_ime_result_single_reference_streamout_t
Disable '[[]]' attributes in all C and C++ language modes
ocl_intel_sub_group_avc_ime_result_dual_reference_streamout_t
-Xmicrosoft-windows-sdk-version
ocl_intel_sub_group_avc_ime_single_reference_streamin_t
__builtin_sve_svmls_n_u8_x
ocl_intel_sub_group_avc_ime_dual_reference_streamin_t
weak
svint8x2_t
__builtin_sve_svmls_s16_z
svint16x2_t
-Xoffload-linker
svint32x2_t
__builtin_sve_svmls_s64_m
svint64x2_t
nullable
svuint8x2_t
split,single
svuint16x2_t
Pass <arg> to the offload linkers or the ones idenfied by -<triple>
svuint32x2_t
__builtin_sve_svmls_u16_z
svuint64x2_t
null_resettable
svfloat16x2_t
__builtin_sve_svmls_u64_m
svfloat32x2_t
<triple> <arg>
svfloat64x2_t
__builtin_sve_svmls_u8_x
svbfloat16x2_t
suppress_direct
svint8x3_t
Disable validation of precompiled headers
svint16x3_t
-Xopenmp-target=
svint32x3_t
__builtin_sve_svmlslb_n_f32
svint64x3_t
@compatibility_alias
svuint8x3_t
__builtin_sve_svmlslb_n_u16
svuint16x3_t
Pass <arg> to the target offloading toolchain identified by <triple>.
svuint32x3_t
__builtin_sve_svmlslb_s32
svuint64x3_t
@dynamic
svfloat16x3_t
-gsrc-hash=
svfloat32x3_t
-Xopenmp-target
svfloat64x3_t
__builtin_sve_svmlslt_lane_s64
svbfloat16x3_t
@synchronized
svint8x4_t
__builtin_sve_svmlslt_n_s16
svint16x4_t
Pass <arg> to the target offloading toolchain.
svint32x4_t
__builtin_sve_svmlslt_n_u32
svint64x4_t
parsing Objective-C method
svuint8x4_t
-fno-dump-fortran-optimized
svuint16x4_t
-Xpreprocessor
svuint32x4_t
__builtin_sve_svmmla_f32
svuint64x4_t
finally
svfloat16x4_t
__builtin_sve_svmmla_s32
svfloat32x4_t
Pass <arg> to the preprocessor
svfloat64x4_t
q8sq16Sc
svbfloat16x4_t
@encode
svboolx2_t
-gstabs
svboolx4_t
q4Uiq8Us
initializer
__builtin_sve_svmovlt_s32
__builtin_sve_svmovlt_u64
<selector-name>
-fno-variable-expansion-in-unroller
cannot mangle this dependent neon vector type yet
Do not add %INCLUDE% to include search path
cannot mangle this dependent fixed-length SVE vector type yet
__builtin_sve_svmsb_f64_x
<property-name>
__builtin_sve_svmsb_n_f16_z
U8__kindof
__builtin_sve_svmsb_n_f64_m
objcproto
<condition>
8ocl_pipe
u6typeof
Treat subsequent input files as having type <language>
__add_lvalue_reference
__builtin_sve_svmsb_n_s32_z
__add_pointer
context set name "
__add_rvalue_reference
__builtin_sve_svmsb_n_s8_m
__decay
<language>
__make_signed
__builtin_sve_svmsb_n_u16_x
__make_unsigned
-fmodule-name=
__remove_all_extents
-fno-dump-fortran-original
__remove_const
__remove_cv
__builtin_sve_svmsb_n_u8_m
__remove_cvref
ompx_
__remove_extent
__builtin_sve_svmsb_s16_x
__remove_pointer
Disable precompiled headers, overrides /Yc and /Yu
__remove_reference_t
__builtin_sve_svmsb_s32_z
__remove_restrict
'#pragma omp 
__remove_volatile
__underlying_type
Poly8
__builtin_sve_svmsb_u16_x
Poly16
sizes
Poly64
__builtin_sve_svmsb_u32_z
Generate a pch file for all code up to and including <filename>
__builtin_sve_svmsb_u8_m
Int8
uses_allocators
Int16
-fno-vectorize
Int32
Int64
__builtin_sve_svmul_f32_z
Uint8
prefer_type
Uint16
__builtin_sve_svmul_lane_f16
Uint32
Uint64
__builtin_sve_svmul_lane_s32
Float16
Float32
Set stack probe size (default 4096)
Float64
Bfloat16
__builtin_sve_svmul_n_f32_m
poly8_t
defaultmap modifier
poly16_t
__builtin_sve_svmul_n_f64_x
poly64_t
Load a pch file and use it instead of all code up to and including <filename>
int8_t
__builtin_sve_svmul_n_s16_z
uint8_t
iterator
int16_t
-fno-dump-parse-tree
uint16_t
int32_t
__builtin_sve_svmul_n_s8_x
uint32_t
dependency type
int64_t
__builtin_sve_svmul_n_u16_z
uint64_t
-Z-reserved-lib-cckext
float64_t
__builtin_sve_svmul_n_u64_m
float32_t
adjust-op
float16_t
bfloat16_t
-Z-reserved-lib-stdc++
__simd64_
__builtin_sve_svmul_s16_z
__simd128_
__SVBfloat16_t
__builtin_sve_svmul_s64_m
9__SVE_VLSI
-Z-Xlinker-no-demangle
__builtin_sve_svmul_s8_x
Ua9enable_ifI
', '
-fno-virtual-function-elimination
Mangling declaration
__builtin_sve_svmul_u64_m
__vtptrauth
absent
_ZGR
__builtin_sve_svmul_u8_x
_ZTV
Enable CodeView debug information in object files
_ZTI
__builtin_sve_svmulh_n_s16_z
_ZTS
holds
_ZGV
Enable Control Flow Guard with /guard:cf, or only the table with /guard:cf,nochecks. Enable EH Continuation Guard with /guard:ehcont
__cxx_global_var_init
__dtor_
__builtin_sve_svmulh_n_s8_x
__filt_
no_openmp_routines
__fin_
__builtin_sve_svmulh_n_u16_z
_ZTT
/Zc:__cplusplus
_ZTC
-fhip-fp32-correctly-rounded-divide-sqrt
_ZTH
Specify the name of the module to build
_ZTW
-fno-dwarf-directory-asm
__finalize_
/Zc:alignedNew-
_ZGI
__builtin_sve_svmulh_s16_z
AddressSpaceAttr
exit
AnnotateTypeAttr
__builtin_sve_svmulh_s64_m
ArmMveStrictPolymorphismAttr
Disable C++17 aligned allocation functions
ArmNewZAAttr
__builtin_sve_svmulh_s8_x
ArmPreservesZAAttr
update
ArmSharedZAAttr
-gvms
ArmStreamingAttr
/Zc:alignedNew
ArmStreamingCompatibleAttr
__builtin_sve_svmulh_u64_m
BTFTypeTagAttr
STDC
CmseNSCallAttr
__builtin_sve_svmulh_u8_x
NoDerefAttr
/Zc:auto
ObjCGCAttr
__builtin_sve_svmullb_lane_s64
ObjCInertUnsafeUnretainedAttr
read
ObjCKindOfAttr
-fno-visibility-inlines-hidden-static-local-var
OpenCLConstantAddressSpaceAttr
/Zc:char8_t-
OpenCLGenericAddressSpaceAttr
__builtin_sve_svmullb_n_s64
OpenCLGlobalAddressSpaceAttr
discard
OpenCLGlobalDeviceAddressSpaceAttr
__builtin_sve_svmullb_s16
OpenCLGlobalHostAddressSpaceAttr
Disable char8_t from c++2a
OpenCLLocalAddressSpaceAttr
__builtin_sve_svmullb_u32
OpenCLPrivateAddressSpaceAttr
push
PointerAuthAttr
Set __vectorcall as a default calling convention
Ptr32Attr
/Zc:char8_t
Ptr64Attr
__builtin_sve_svmullt_n_s64
PtrAutoAttrAttr
compiler
PtrAutoNullTerminatedAttrAttr
__builtin_sve_svmullt_s16
SPtrAttr
Enable char8_t from C++2a
TypeNonNullAttr
__builtin_sve_svmullt_u32
TypeNullUnspecifiedAttr
".CRT$XCL"
TypeNullableAttr
-fno-dwarf2-cfi-asm
TypeNullableResultAttr
/Zc:dllexportInlines-
UPtrAttr
__builtin_sve_svmulx_f64_m
XnuUsageSemanticsAttr
distribute
FallThroughAttr
__builtin_sve_svmulx_n_f16_x
LikelyAttr
Do not dllexport/dllimport inline member functions of dllexport/import classes
MustTailAttr
__builtin_sve_svmulx_n_f32_z
OpenCLUnrollHintAttr
SuppressAttr
Do not put each data item in its own section (default)
UnlikelyAttr
/Zc:dllexportInlines
AlwaysInlineAttr
__builtin_sve_svnbsl_n_s8
AnalyzerSuppressAttr
__attribute__((
NoInlineAttr
__builtin_sve_svnbsl_n_u8
NoMergeAttr
dllexport/dllimport inline member functions of dllexport/import classes (default)
AArch64SVEPcsAttr
__builtin_sve_svnbsl_s8
AArch64VectorPcsAttr
apply_to
AMDGPUKernelCallAttr
-fno-visibility-inlines-hidden
AcquireHandleAttr
/Zc:forScope
AnyX86NoCfCheckAttr
__builtin_sve_svneg_f32_m
CDeclAttr
'on' or 'off'
FastCallAttr
__builtin_sve_svneg_f64_x
IntelOclBiccAttr
/Zc:inline
LifetimeBoundAttr
__builtin_sve_svneg_s16_z
MSABIAttr
field
NSReturnsRetainedAttr
Put each data item in its own section
ObjCOwnershipAttr
/Zc:rvalueCast
PascalAttr
__builtin_sve_svneg_s8_x
PcsAttr
'is_member'
PreserveAllAttr
__builtin_sve_svnmad_f16_z
PreserveMostAttr
/Zc:sizedDealloc-
RegCallAttr
__builtin_sve_svnmad_f64_m
StdCallAttr
-fmodule-private
SwiftAsyncCallAttr
-fno-elide-constructors
SwiftCallAttr
Disable C++14 sized global deallocation functions
SysVABIAttr
__builtin_sve_svnmad_n_f32_z
ThisCallAttr
'is_thread_local', 'is_global', 'is_local', 'is_parameter', 'unless(is_parameter)'
VectorCallAttr
__builtin_sve_svnmatch_s16
SwiftAsyncContextAttr
/Zc:sizedDealloc
SwiftContextAttr
__builtin_sve_svnmla_f16_m
SwiftErrorResultAttr
align
SwiftIndirectResultAttr
Deprecated (like not passing /EH)
AnnotateAttr
/Zc:strictStrings
CFConsumedAttr
__builtin_sve_svnmla_f64_z
CarriesDependencyAttr
packed
NSConsumedAttr
__builtin_sve_svnmla_n_f32_m
NonNullAttr
Treat string literals as const
OSConsumedAttr
__builtin_sve_svnmla_n_f64_x
PassObjectSizeAttr
pack
ReleaseHandleAttr
Disable C++ builtin type wchar_t
UseHandleAttr
/Zc:ternary
HLSLSV_GroupIndexAttr
__builtin_sve_svnmls_f64_m
AMDGPUFlatWorkGroupSizeAttr
unused
AMDGPUNumSGPRAttr
__builtin_sve_svnmls_n_f16_x
AMDGPUNumVGPRAttr
/Zc:threadSafeInit-
AMDGPUWavesPerEUAttr
__builtin_sve_svnmls_n_f32_z
ARMInterruptAttr
FE_TOWARDZERO
AVRInterruptAttr
AVRSignalAttr
Disable thread-safe initialization of static variables
AcquireCapabilityAttr
__builtin_sve_svnmsb_f32_x
AcquiredAfterAttr
FE_UPWARD
AcquiredBeforeAttr
__builtin_sve_svnmsb_f64_z
AlignMac68kAttr
/Zc:threadSafeInit
AlignNaturalAttr
__builtin_sve_svnmsb_n_f32_m
AlignedAttr
FE_TONEARESTFROMZERO
AllocAlignAttr
Disable C++ copy constructor elision
AllocSizeAttr
Enable thread-safe initialization of static variables
AlwaysDestroyAttr
__builtin_sve_svnot_s16_m
AnalyzerNoReturnAttr
STDC FENV_ROUND
AnyX86InterruptAttr
__builtin_sve_svnot_s32_x
AnyX86NoCallerSavedRegistersAttr
/Zc:trigraphs-
ArcWeakrefUnavailableAttr
__builtin_sve_svnot_s64_z
ArgumentWithTypeTagAttr
clang section
ArmBuiltinAliasAttr
/Gy-
ArmLocallyStreamingAttr
Disable trigraphs (default)
ArtificialAttr
__builtin_sve_svnot_u32_x
AsmLabelAttr
OPENCL EXTENSION
AssertCapabilityAttr
__builtin_sve_svnot_u64_z
AssertExclusiveLockAttr
/Zc:trigraphs
AssertSharedLockAttr
__builtin_sve_svorn_b_z
AssumeAlignedAttr
pragma comment
AssumptionAttr
-fno-whole-file
AvailabilityAttr
Enable trigraphs
BPFPreserveAccessIndexAttr
__builtin_sve_svorr_n_s64_m
BTFDeclTagAttr
pragma detect_mismatch
BlocksAttr
__builtin_sve_svorr_n_s8_x
BuiltinAttr
/Zc:twoPhase-
C11NoReturnAttr
__builtin_sve_svorr_n_u16_z
CFAuditedTransferAttr
full_generality
CFGuardAttr
CFICanonicalJumpTableAttr
Disable two-phase name lookup in templates (default)
CFReturnsNotRetainedAttr
__builtin_sve_svorr_n_u8_x
CFReturnsRetainedAttr
intrinsic
CFUnknownTransferAttr
__builtin_sve_svorr_s16_z
CPUDispatchAttr
/Zc:twoPhase
CPUSpecificAttr
Enable the integrated assembler
CUDAConstantAttr
-fmodule-related-to-pch
CUDADeviceAttr
-fno-elide-type
CUDADeviceBuiltinSurfaceTypeAttr
Enable two-phase name lookup in templates
CUDADeviceBuiltinTextureTypeAttr
__builtin_sve_svorr_u16_z
CUDAGlobalAttr
clang loop
CUDAHostAttr
__builtin_sve_svorr_u64_m
CUDAInvalidTargetAttr
/Zc:wchar_t-
CUDALaunchBoundsAttr
__builtin_sve_svorr_u8_x
CUDASharedAttr
clang fp
CXX11NoReturnAttr
-gz=
CallableWhenAttr
/Zc:wchar_t
CallbackAttr
__builtin_sve_svorv_u64
CapabilityAttr
clang max_tokens_here
CapturedRecordAttr
__builtin_sve_svpext_lane_c32
CleanupAttr
Enable C++ builtin type wchar_t (default)
CmseNSEntryAttr
q16bv
CodeSegAttr
clang max_tokens_total
ColdAttr
-fno-whole-program
CommonAttr
/Zc:
ConstAttr
__builtin_sve_svpmullb_pair_n_u8
ConstInitAttr
'intrinsic'
ConstructorAttr
__builtin_sve_svpmullb_u16
ConsumableAttr
ConsumableAutoCastAttr
__builtin_sve_svpmullt_pair_n_u32
ConsumableSetOnReadAttr
'vector'
ConvergentAttr
DLLExportAttr
DLLExportStaticLocalAttr
__builtin_sve_svpnext_b16
DLLImportAttr
do/while
DLLImportStaticLocalAttr
__builtin_sve_svprfb
DependerDeclsAttr
/ZH:MD5
DeprecatedAttr
__builtin_sve_svprfb_gather_s64offset
DestructorAttr
continue
DiagnoseAsBuiltinAttr
Do not elide types when printing diagnostics
DiagnoseIfAttr
Use MD5 for file checksums in debug info (default)
DisableSanitizerInstrumentationAttr
__builtin_sve_svprfb_gather_u64base
DisableTailCallsAttr
co_return
EmptyBasesAttr
__builtin_sve_svprfb_gather_u64offset
EnableIfAttr
/ZH:SHA1
EnforceTCBAttr
__builtin_sve_svprfd
EnforceTCBLeafAttr
__leave
EnumExtensibilityAttr
ErrorAttr
Use SHA1 for file checksums in debug info
ExcludeFromExplicitInstantiationAttr
__builtin_sve_svprfd_gather_u64index
ExclusiveTrylockFunctionAttr
STDC FENV_ACCESS
ExternalSourceSymbolAttr
__builtin_sve_svprfh_gather_s64index
FinalAttr
/ZH:SHA_256
FlagEnumAttr
__builtin_sve_svprfh_gather_u64base
FlattenAttr
'case'
FormatAttr
-fno-wrapv
FormatArgAttr
Use SHA256 for file checksums in debug info
FunctionReturnThunksAttr
__builtin_sve_svprfw_gather_u32base_index
GNUInlineAttr
in compound statement ('{}')
GuardedByAttr
__builtin_sve_svprfw_gather_u64index
GuardedVarAttr
HIPManagedAttr
__builtin_sve_svpsel_b32
HLSLNumThreadsAttr
consteval
HLSLResourceAttr
Put objects of at most <size> bytes into small data section (MIPS / Hexagon)
HLSLResourceBindingAttr
HLSLShaderAttr
__builtin_sve_svptrue_b32
HotAttr
switch
IBActionAttr
IBOutletAttr
Like /Z7
IBOutletCollectionAttr
__builtin_sve_svptrue_pat_b16
InitPriorityAttr
Mark module as related to a PCH
InternalLinkageAttr
-fno-eliminate-unused-debug-symbols
LTOVisibilityPublicAttr
-Zlinker-input
LayoutVersionAttr
__builtin_sve_svqabs_s32_m
LeafAttr
InternalPragmaState
LockReturnedAttr
__builtin_sve_svqabs_s64_x
LocksExcludedAttr
M68kInterruptAttr
__builtin_sve_svqabs_s8_z
MIGServerRoutineAttr
target MC unavailable
MSAllocatorAttr
MSInheritanceAttr
Do not let object file auto-link default libraries
MSNoVTableAttr
__builtin_sve_svqadd_n_s32_z
MSP430InterruptAttr
target ASM parser unavailable
MSStructAttr
__builtin_sve_svqadd_n_s64_z
MSVtorDispAttr
MaxFieldAlignmentAttr
__builtin_sve_svqadd_n_s8_z
MayAliasAttr
volatile
MaybeUndefAttr
-fno-xor-operator
MicroMipsAttr
/Zo-
MinSizeAttr
__builtin_sve_svqadd_n_u32_z
MinVectorWidthAttr
goto
Mips16Attr
__builtin_sve_svqadd_n_u64_z
MipsInterruptAttr
MipsLongCallAttr
__builtin_sve_svqadd_n_u8_z
MipsShortCallAttr
NSConsumesSelfAttr
-header-include-file
NSErrorDomainAttr
NSReturnsAutoreleasedAttr
__builtin_sve_svqadd_s32_m
NSReturnsNotRetainedAttr
ParseTemplate
NakedAttr
q2Wiq2Wiq2Wi
NoAliasAttr
Set default maximum struct packing alignment to 1
NoCommonAttr
__builtin_sve_svqadd_s8
NoDebugAttr
typename
NoDestroyAttr
-fno-eliminate-unused-debug-types
NoDuplicateAttr
Set default maximum struct packing alignment
NoInstrumentFunctionAttr
__builtin_sve_svqadd_u16_z
NoMicroMipsAttr
NoMips16Attr
__builtin_sve_svqadd_u32_z
NoProfileFunctionAttr
NoRandomizeLayoutAttr
__builtin_sve_svqadd_u64_z
NoReturnAttr
__except
NoSanitizeAttr
-header-include-filtering=
NoSpeculativeLoadHardeningAttr
NoSplitStackAttr
__builtin_sve_svqcadd_s8
NoStackProtectorAttr
NoThreadSafetyAnalysisAttr
WiWiIUWi
NoThrowAttr
NoUniqueAddressAttr
UWiUWiIUWi
NoUwtableAttr
oneway
NotTailCalledAttr
-fno-xray-always-emit-typedevents
OMPAllocateDeclAttr
OMPCaptureNoInitAttr
UWiUWiIiIUWi
OMPDeclareTargetDeclAttr
byref
OMPDeclareVariantAttr
__builtin_sve_svqdecd_n_u64
OMPThreadPrivateDeclAttr
Pass -z <arg> to the linker
OSConsumesThisAttr
__builtin_sve_svqdecd_pat_n_u64
OSReturnsNotRetainedAttr
pixel
OSReturnsRetainedAttr
none,only-direct-system
OSReturnsRetainedOnNonZeroAttr
OSReturnsRetainedOnZeroAttr
q2UWiq2UWiIUWi
ObjCBridgeAttr
__exception_info
ObjCBridgeMutableAttr
__builtin_sve_svqdech_n_u64
ObjCBridgeRelatedAttr
ObjCCompleteDefinitionAttr
-fgnu-runtime
ObjCExceptionAttr
-fmodules-cache-path=
ObjCExplicitProtocolImplAttr
Emit  debug info for defined but unused types
ObjCExternallyRetainedAttr
ObjCIndependentClassAttr
q8Usq8UsIUWi
ObjCMethodFamilyAttr
GetExceptionCode
ObjCNSObjectAttr
__builtin_sve_svqdecp_n_s32_b64
ObjCPreciseLifetimeAttr
 env
ObjCRequiresPropertyDefsAttr
__builtin_sve_svqdecp_n_s64_b32
ObjCRequiresSuperAttr
__abnormal_termination
ObjCReturnsInnerPointerAttr
set format in which header info is emitted
ObjCRootClassAttr
-ivfsoverlay
ObjCSubclassingRestrictedAttr
__builtin_sve_svqdecp_n_u64_b16
ObjCSuppressDirectPropertyAttr
import
OpenCLIntelReqdSubGroupSizeAttr
__builtin_sve_svqdecp_n_u64_b8
OpenCLKernelAttr
repro-modules
OptimizeNoneAttr
q4iq4iq16b
OverrideAttr
top-level asm block
OwnerAttr
Omit function index section at the expense of single-function patching performance
OwnershipAttr
index-store
PackedAttr
q2UWiq2UWiq16b
ParamTypestateAttr
__if_exists
PatchableFunctionEntryAttr
__builtin_sve_svqdecw_n_u64
PointerAttr
 Arguments passed via response file:
PointerAuthStructAttr
__builtin_sve_svqdecw_pat_n_u64
PragmaClangBSSSectionAttr
cannot get default cache directory
PragmaClangDataSectionAttr
/headerName:
PragmaClangRelroSectionAttr
 (end of response file)
PragmaClangRodataSectionAttr
q4Uiq4UiIUWi
PragmaClangTextSectionAttr
Submodule: 
PreferredNameAttr
__builtin_sve_svqdmlalb_n_s32
PtGuardedByAttr
 (in-process)
PtGuardedVarAttr
__builtin_sve_svqdmlalb_s64
PureAttr
(Module) 
RISCVInterruptAttr
-fno-emulated-tls
RandomizeLayoutAttr
ReadOnlyPlacementAttr
__builtin_sve_svqdmlalt_lane_s64
ReinitializesAttr
 (explicit)
ReleaseCapabilityAttr
__builtin_sve_svqdmlalt_s16
ReqdWorkGroupSizeAttr
RequiresCapabilityAttr
__builtin_sve_svqdmlslb_lane_s64
RestrictAttr
 (system)
RetainAttr
/headerUnit:angle
ReturnTypestateAttr
-idirafter
ReturnsNonNullAttr
__builtin_sve_svqdmlslbt_n_s32
ReturnsTwiceAttr
  module *
SYCLKernelAttr
__builtin_sve_svqdmlslbt_s64
SYCLSpecialClassAttr
ScopedLockableAttr
__builtin_sve_svqdmlslt_n_s32
SectionAttr
export *
SelectAnyAttr
-fno-xray-instrument
SentinelAttr
SetTypestateAttr
__builtin_sve_svqdmulh_n_s16
SharedTrylockFunctionAttr
Module Map:
SpeculativeLoadHardeningAttr
__builtin_sve_svqdmulh_s16
StandaloneDebugAttr
StrictFPAttr
__builtin_sve_svqdmullb_lane_s32
StrictGuardStackCheckAttr
filename not part of include tree list
SwiftAsyncAttr
/headerUnit
SwiftAsyncErrorAttr
SwiftAsyncNameAttr
__builtin_sve_svqdmullt_lane_s32
SwiftAttrAttr
export 
SwiftBridgeAttr
__builtin_sve_svqdmullt_n_s64
SwiftBridgedTypedefAttr
depscan
SwiftErrorAttr
__builtin_sve_svqincb_n_s32
SwiftImportAsNonGenericAttr
Specify the module cache path
SwiftImportPropertyAsAccessorsAttr
-fno-escaping-block-tail-calls
SwiftNameAttr
preprocessor
SwiftNewTypeAttr
__builtin_sve_svqincd_n_s32
SwiftPrivateAttr
' (new='
SymbolMetadataFootnoteAttr
__builtin_sve_svqincd_pat_n_s32
TLSModelAttr
precompiler
TargetAttr
__builtin_sve_svqincd_pat_s64
TargetClonesAttr
TestTypestateAttr
Display help for hidden options
TransparentSteppingAttr
compiler
TransparentUnionAttr
__builtin_sve_svqinch_pat_n_s32
TrivialABIAttr
wrong size for cas-id hash '
TryAcquireCapabilityAttr
__builtin_sve_svqinch_pat_s16
TypeTagForDatatypeAttr
backend
TypeVisibilityAttr
__builtin_sve_svqincp_n_s32_b16
TypedMemoryAttr
llvmcas://
UnavailableAttr
Don't place zero initialized data in BSS
UninitializedAttr
assembler
UnusedAttr
__builtin_sve_svqincp_n_u32_b16
UsedAttr
corrupt object '
UsingIfExistsAttr
__builtin_sve_svqincp_n_u64_b16
UuidAttr
linker
VTablePointerAuthenticationAttr
__builtin_sve_svqincp_s16
VecReturnAttr
llvm.cas.builtin.v2[
VecTypeHintAttr
-help
VisibilityAttr
ifsmerger
WarnUnusedAttr
__builtin_sve_svqincw_n_u32
WarnUnusedResultAttr
cannot get reference to root FS
WeakAttr
__builtin_sve_svqincw_pat_n_u32
WeakImportAttr
-fsanitize-trap=undefined
WeakRefAttr
__builtin_sve_svqincw_s32
WebAssemblyExportNameAttr
WebAssemblyImportModuleAttr
-fno-exceptions
WebAssemblyImportNameAttr
-fsanitize=function
WorkGroupSizeHintAttr
__builtin_sve_svqneg_s64_m
X86ForceAlignArgPointerAttr
root-bits=
XRayInstrumentAttr
__builtin_sve_svqneg_s8_x
XRayLogArgsAttr
-mcmodel=small
ZeroCallUsedRegsAttr
__builtin_sve_svqrdcmlah_s16
AArch64FarAddressSpaceAttr
AbiTagAttr
--hip-device-lib-path=
AliasAttr
-fsanitize=cfi-mfcall
AlignValueAttr
__builtin_sve_svqrdmlah_n_s32
BuiltinAliasAttr
root
CalledOnceAttr
__builtin_sve_svqrdmlah_s32
IFuncAttr
-fsanitize=vptr
InitSegAttr
__builtin_sve_svqrdmlsh_lane_s32
LoaderUninitializedAttr
 num-slots=
LoopHintAttr
-fno_modules-validate-input-files-content
ModeAttr
-ffixed-x18
NoBuiltinAttr
__builtin_sve_svqrdmlsh_s64
NoEscapeAttr
content=
OMPCaptureKindAttr
__builtin_sve_svqrdmulh_lane_s64
OMPDeclareSimdDeclAttr
-fno-sanitize-trap=
OMPReferencedVarAttr
__builtin_sve_svqrdmulh_n_s8
ObjCBoxableAttr
index: 
ObjCClassStubAttr
HIP device library
ObjCDesignatedInitializerAttr
sync
ObjCDirectAttr
__builtin_sve_svqrshl_n_s32_m
ObjCDirectMembersAttr
missing object '
ObjCNonLazyClassAttr
__builtin_sve_svqrshl_n_s64_x
ObjCNonRuntimeProtocolAttr
-fsanitize-memtag-mode=
ObjCRuntimeNameAttr
Run cc1 in-process
ObjCRuntimeVisibleAttr
-fmodules-codegen
ObjCSuppressDirectAttr
Disable support for exception handling
OpenCLAccessAttr
{async, sync}
OverloadableAttr
__builtin_sve_svqrshl_n_u32_z
RenderScriptKernelAttr
invalid value for %s: expected integer
SwiftObjCMembersAttr
__builtin_sve_svqrshl_n_u8_m
SwiftVersionedAttr
-fsanitize=kcfi
SwiftVersionedRemovalAttr
__builtin_sve_svqrshl_s16_m
ThreadAttr
index:
Link clang-offload-bundler bundles for HIP
kind
fsanitize-minimal-runtime
range
__builtin_sve_svqrshl_s64_z
inherited
- addr=
implicit
__builtin_sve_svqrshl_u16_m
type
fsanitize-trap=cfi
lvalue
__builtin_sve_svqrshl_u32_m
xvalue
 data=
prvalue
-fnon-call-exceptions
valueCategory
-fsanitize-coverage=trace-pc-guard
containsErrors
__builtin_sve_svqrshl_u8_m
isDependent
 end=
isInstantiationDependent
__builtin_sve_svqrshr_s16_x2
isVariablyModified
-fsanitize-coverage=func
containsUnexpandedPack
__builtin_sve_svqrshr_s8_x4
isImported
.%%%%%%
QualType
HIP runtime installation path, used for finding HIP version and adding HIP include path.
qualifiers
-fsanitize-coverage=bb
Decl
__builtin_sve_svqrshrnb_n_s16
.data
isImplicit
__builtin_sve_svqrshrnb_n_s64
isInvalid
-fsanitize-coverage=edge
isUsed
__builtin_sve_svqrshrnb_n_u32
isReferenced
.leaf
isHidden
-fno-expensive-optimizations
parentDeclContextId
-fsanitize-coverage=trace-bb
TemplateArgument
__builtin_sve_svqrshrnt_n_s64
fromDecl
index
CXXCtorInitializer
__builtin_sve_svqrshrnt_n_u32
anyInit
-fsanitize-coverage=8bit-counters
baseInit
__builtin_sve_svqrshrunb_n_s16
delegatingInit
llvm.cas.data
Capture
HIP version in the format of major.minor.patch
byref
-fsanitize-coverage=[func|bb|edge]
nested
__builtin_sve_svqrshrunt_n_s32
unknown          
associationKind
__builtin_sve_svqshl_n_s16_m
case
-fsanitize-coverage=[func|bb|edge],[trace-pc-guard|trace-pc],[control-flow]
default
__builtin_sve_svqshl_n_s32_x
selected
standalone-data  
TypeRequirement
-fnoopenmp-use-tls
SimpleRequirement
-fsanitize=address
CompoundRequirement
__builtin_sve_svqshl_n_u16_m
NestedRequirement
standalone-leaf+0
noexcept
__builtin_sve_svqshl_n_u32_x
satisfied
platform
value
__builtin_sve_svqshl_n_u64_z
includedFrom
root bits
offset
path to a pass plugin for HIP to SPIR-V passes.
presumedFile
interceptor
presumedLine
__builtin_sve_svqshl_s32_x
tokLen
hash size
spellingLoc
__builtin_sve_svqshl_s64_z
expansionLoc
-fsanitize-coverage-type=1
__builtin_sve_svqshl_u16_m
qualType
Generate code for uses of this module that assumes an explicit object file will be built for the module
desugaredQualType
-fno-experimental-isel
typeAliasDeclId
-fsanitize-coverage-type=2
name
__builtin_sve_svqshl_u64_z
isVirtual
table kind
isGenericLambda
__builtin_sve_svqshlu_n_s16_m
isLambda
-fsanitize-coverage-type=3
isEmpty
__builtin_sve_svqshlu_n_s32_m
isAggregate
unsupported flags: 
isStandardLayout
Entry point name for hlsl
isTriviallyCopyable
covered
isPOD
__builtin_sve_svqshlu_n_s8_m
isTrivial
 hash-size=
isPolymorphic
__builtin_sve_svqshrnb_n_s16
isAbstract
atomics
isLiteral
__builtin_sve_svqshrnb_n_u32
canPassInRegisters
records
hasUserDeclaredConstructor
-fobjc-abi-version=
hasConstexprNonCopyMoveConstructor
-fexperimental-sanitize-metadata=
hasMutableFields
__builtin_sve_svqshrunb_n_s16
hasVariantMembers
 addr=
canConstDefaultInit
__builtin_sve_svqshrunt_n_s32
defaultCtor
ubsan_standalone
copyCtor
__builtin_sve_svqsub_n_s16_x
moveCtor
 subtrie=
copyAssign
HLSL only. Disables all standard includes containing non-native compiler types and functions.
moveAssign
ubsan_standalone_cxx
dtor
__builtin_sve_svqsub_n_s64_x
writtenAccess
invalid 
isPackExpansion
__builtin_sve_svqsub_n_s8_x
decl
stats_client
producesResult
__builtin_sve_svqsub_n_u16_x
regParm
trailingReturn
-fno-experimental-library
variadic
stats
refQualifier
__builtin_sve_svqsub_n_u64_x
exceptionSpec
database: bad magic
exceptionTypes
__builtin_sve_svqsub_n_u8_x
throwsAny
__sanitizer_stats_register
conditionEvaluatesTo
__builtin_sve_svqsub_s16_x
spelledAsLValue
database: corrupt bump-ptr
sizeModifier
/hotpatch
indexTypeQualifiers
-fsanitize-ignorelist=
attrLoc
__builtin_sve_svqsub_s64_x
numElements
 (expected: 
vectorKind
__builtin_sve_svqsub_s8_x
altivec pixel
-fsanitize-system-ignorelist=
altivec bool
__builtin_sve_svqsub_u16_x
neon poly
table name collision '
fixed-length sve data vector
Objective-C++ Automatic Reference Counting standard library kind
fixed-length sve predicate vector
-tsan-instrument-memory-accesses=0
transformKind
__builtin_sve_svqsub_u64_x
add_lvalue_reference
' to existing root '
add_pointer
__builtin_sve_svqsub_u8_x
add_rvalue_reference
-tsan-instrument-memintrinsics=0
decay
__builtin_sve_svqsubr_n_s16_z
make_signed
, got: 
make_unsigned
remove_all_extents
-tsan-instrument-func-entry-exit=0
remove_const
__builtin_sve_svqsubr_n_s8_x
remove_cv
remove_cvref
__builtin_sve_svqsubr_n_u16_z
remove_extent
-tsan-instrument-atomics=0
remove_pointer
-fhip-kernel-arg-name
remove_reference_t
-fmodules-debuginfo
remove_restrict
-fno-experimental-relative-c++-abi-vtables
remove_volatile
-hwasan-experimental-use-page-aliases=1
underlying_type
__builtin_sve_svqsubr_s16_z
depth
llcas_actioncache_put_for_digest
isPack
__builtin_sve_svqsubr_s64_m
pack_index
-asan-detect-invalid-pointer-cmp
undeduced
__builtin_sve_svqsubr_s8_x
typeKeyword
llcas_cas_contains_object
decltype(auto)
isAlias
-asan-detect-invalid-pointer-sub
templateName
__builtin_sve_svqsubr_u64_m
numExpansions
llcas_cas_create
ownedTagDecl
__builtin_sve_svqsubr_u8_x
macroName
-asan-instrumentation-with-call-threshold=0
isData
__builtin_sve_svqxtnb_s32
isFunction
llcas_cas_dispose
mangledName
-fobjc-arc-exceptions
isInline
hwasan-abi=
originalNamespace
__builtin_sve_svqxtnb_u64
nominatedNamespace
llcas_cas_get_hash_schema_name
aliasedNamespace
__builtin_sve_svqxtnt_s32
storageClass
+tagged-globals
nrvo
__builtin_sve_svqxtnt_u16
modulePrivate
llcas_cas_get_objectid
isParameterPack
Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path
isBitfield
-fno-builtin-bcmp
hasInClassInitializer
__builtin_sve_svqxtunb_s32
explicitlyDeleted
llcas_cas_load_object
explicitlyDefaulted
__builtin_sve_svqxtunt_s16
deleted
-fno-builtin-memcmp
fixedUnderlyingType
__builtin_sve_svqxtunt_s64
scopedEnumTag
llcas_cas_load_object_async
tagUsed
Do not use the experimental C++ class ABI for classes with virtual tables
completeDefinition
-fno-builtin-strncmp
definitionData
__builtin_sve_svraddhnb_s16
bases
llcas_cas_options_create
bufferKind
__builtin_sve_svraddhnb_u32
cbuffer
-fno-builtin-strcmp
tbuffer
__builtin_sve_svraddhnt_n_s64
defaultArg
llcas_cas_options_dispose
hasBraces
Add directory to the API notes search path referenced by module name
synthesized
-fno-builtin-strncasecmp
returnType
__builtin_sve_svraddhnt_u32
bounded
llcas_cas_options_set_client_version
variance
__builtin_sve_svrbit_s16_m
covariant
-fno-builtin-strcasecmp
contravariant
__builtin_sve_svrbit_s32_x
categoryDecl
llcas_cas_options_set_ondisk_path
control
-fobjc-arc
implKind
-fno-builtin-strstr
propertyDecl
__builtin_sve_svrbit_u16_m
ivarDecl
llcas_cas_options_set_option
capturesThis
__builtin_sve_svrbit_u32_x
encodedType
-fno-builtin-strcasestr
receiverKind
__builtin_sve_svrbit_u64_z
classType
llcas_cas_store_object
super (instance)
Include API notes file
superType
-fno-builtin-memmem
super (class)
q8hq8h
callReturnType
llcas_digest_parse
propertyKind
q2dq2d
isSuperReceiver
asan_ignorelist.txt
isMessagingGetter
__builtin_sve_svrecps_f16
isMessagingSetter
Generate debug info for types in an object file built from this module and do not generate them elsewhere
subscriptKind
-fno-experimental-sanitize-metadata=
dictionary
hwasan_ignorelist.txt
isFreeIvar
__builtin_sve_svrecpx_f16_z
isArrow
llcas_get_plugin_version
__objc_yes
__builtin_sve_svrecpx_f64_m
__objc_no
memtag_ignorelist.txt
referencedDecl
__builtin_sve_svrev_b32
foundReferencedDecl
llcas_loaded_object_get_data
nonOdrUseReason
Enable builtin #include directories even when -nostdinc is used before or after -ibuiltininc. Using -nobuiltininc after the option disables it
unevaluated
msan_ignorelist.txt
discarded
__builtin_sve_svrev_s16
typeSourceInfo
llcas_loaded_object_get_refs
isPostfix
__builtin_sve_svrev_s64
opcode
tsan_ignorelist.txt
canOverflow
__builtin_sve_svrev_u16
computeLHSType
llcas_object_refs_get_count
computeResultType
-fobjc-atdefs
referencedMemberDecl
dfsan_abilist.txt
isGlobal
__builtin_sve_svrevb_s16_x
isArray
llcas_object_refs_get_id
isPlacement
__builtin_sve_svrevb_s32_z
initStyle
cfi_ignorelist.txt
operatorNewDecl
__builtin_sve_svrevb_u16_m
operatorDeleteDecl
llcas_objectid_get_digest
isArrayAsWritten
Add directory to AFTER include search path
castKind
ubsan_ignorelist.txt
conversionFunc
__builtin_sve_svrevb_u64_z
isPartOfExplicitCast
llcas_string_dispose
__builtin_sve_svrevd_s32_m
argType
share
usesADL
__builtin_sve_svrevd_s64_x
lookups
error loading '
labelDeclId
Disable emitting metadata for binary analysis sanitizers
typeArg
address
adjustedTypeArg
__builtin_sve_svrevd_u32_m
resultDependent
not a tree object
typeAsWritten
__builtin_sve_svrevd_u64_x
ctorType
pointer-compare
elidable
__builtin_sve_svrevd_u8_z
zeroing
lock
hadMultipleCandidates
Add directory to SYSTEM framework search path, absolute paths are relative to -isysroot
constructionKind
pointer-subtract
complete
__builtin_sve_svrevh_u32_x
delegating
unexpected directory 
non-virtual base
__builtin_sve_svrevh_u64_z
virtual base
kernel-address
cleanupsHaveSideEffects
__builtin_sve_svrevw_u64_m
cleanups
temp
Try to avoid heapifying local blocks
extendingDecl
hwaddress
storageDuration
__builtin_sve_svrhadd_n_s32_z
automatic
 -> 
full expression
__builtin_sve_svrhadd_n_s8_m
boundToLValueRef
kernel-hwaddress
member
__builtin_sve_svrhadd_n_u16_x
hasTemplateKeyword
file
hasExplicitTemplateArgs
Add directory to SYSTEM framework search path
explicitTemplateArgs
memtag-stack
hasInit
__builtin_sve_svrhadd_n_u8_m
hasVar
syml
hasElse
__builtin_sve_svrhadd_s16_x
isConstexpr
memtag-heap
isConsteval
Use internal machine object code emitter.
constevalIsNegated
-fmodules-decluse
isGNURange
-fno-extended-identifiers
declId
memtag-globals
sideEntry
__builtin_sve_svrhadd_u16_x
targetLabelDeclId
USAGE: 
isCatchAll
__builtin_sve_svrhadd_u32_z
isNull
memory
isNullptr
__builtin_sve_svrhadd_u8_m
isExpr
 <value>
<invalid>
-imacros
text
kernel-memory
renderKind
__builtin_sve_svrinta_f32_z
normal
Expected lexical block
bold
__builtin_sve_svrinti_f16_m
emphasized
fuzzer
monospaced
__builtin_sve_svrinti_f32_x
anchor
malformed block record in AST file
selfClosing
-fobjc-constant-literals
malformed
fuzzer-no-link
attrs
__builtin_sve_svrintm_f32_m
direction
incorrectly-formatted source location entry in AST file
in,out
__builtin_sve_svrintm_f64_x
param
thread
paramIdx
__builtin_sve_svrintn_f16_z
positions
could not find file '
closeName
-image_base
FPContractMode
leak
RoundingMath
__builtin_sve_svrintp_f16_x
ConstRoundingMode
missing or unloadable module cache key
SpecifiedExceptionMode
__builtin_sve_svrintp_f32_z
AllowFEnvAccess
alignment
AllowFPReassociate
__builtin_sve_svrintx_f16_m
NoHonorNaNs
duplicate TYPE_OFFSET record in AST file
NoHonorInfs
-fno-external-blas
NoSignedZero
array-bounds
AllowReciprocal
__builtin_sve_svrintx_f64_z
AllowApproxFunc
duplicate IDENTIFIER_OFFSET record in AST file
FPEvalMethod
__builtin_sve_svrintz_f32_m
fpoptions
bool
exists
__builtin_sve_svrintz_f64_x
trivial
invalid weak identifiers record
nonTrivial
Add <dir> to system include search path, as if in %INCLUDE%
userProvided
builtin
needsImplicit
__builtin_sve_svrshl_n_s64_m
defaultedIsConstexpr
Multiple SOURCE_LOCATION_PRELOADS records in AST file
userDeclared
__builtin_sve_svrshl_n_s8_x
hasConstParam
enum
implicitHasConstParam
__builtin_sve_svrshl_n_u16_z
needsOverloadResolution
Invalid existing PendingInstantiations
defaultedIsDeleted
-fobjc-disable-direct-methods-for-testing
irrelevant
float-cast-overflow
firstRedecl
__builtin_sve_svrshl_n_u8_x
previousDecl
Invalid SEMA_DECL_REFS block
isMacroArgExpansion
__builtin_sve_svrshl_s16_z
__main_argc_argv
float-divide-by-zero
_GUID_%08x_%04x_%04x_
__builtin_sve_svrshl_s64_m
duplicate OBJC_CATEGORIES_MAP record in AST file
--include-barrier
_OBJC_CLASS_
integer-divide-by-zero
OBJC_CLASS_$_
__builtin_sve_svrshl_u16_z
Mangling number exceeds limit (65535)
invalid undefined-but-used record
<lambda_
__builtin_sve_svrshl_u64_m
3U__s_GUID@@B
nonnull-attribute
?A0x
__builtin_sve_svrshl_u8_x
Require declaration of modules used within a module
?__N
-fno-f2c
<unnamed-type-
nullability-arg
<unnamed-enum-
__builtin_sve_svrshr_n_s64_m
<unnamed-type-$S
invalid pragma pointers to members record
__builtin_sve_svrshr_n_s8_x
nullability-assign
__builtin_sve_svrshr_n_u16_x
invalid pragma pack record
?__K
--include-directory-after
nullability-return
__builtin_sve_svrshr_n_u64_x
SourceLocation remap refers to unknown module, cannot find 
__builtin_sve_svrshr_n_u8_x
object-size
__builtin_sve_svrshrnb_n_s64
$$$V
invalid record at top-level of AST file
-fobjc-dispatch-method=
pointer-overflow
__builtin_sve_svrshrnt_n_u32
cannot mangle this dependent-length array yet
FILE type is NULL
__builtin_sve_svrsqrte_f64
PEAXI@Z
returns-nonnull-attribute
PAXI@Z
__builtin_sve_svrsqrts_f16
jmp_buf type is NULL
<decltype-auto>
--include-directory
<auto>
shift-base
__pass_dynamic_object_size
__builtin_sve_svrsra_n_u32
__pass_object_size
sigjmp_buf type is NULL
__clang
__builtin_sve_svrsubhnb_n_s32
shift-exponent
_UBitInt
__builtin_sve_svrsubhnb_n_u64
submodule metadata record should be at beginning of block
-fno-fast-math
signed-integer-overflow
__builtin_sve_svrsubhnt_n_s32
too many submodules
__builtin_sve_svrsubhnt_n_u64
unreachable
__builtin_sve_svrsubhnt_u16
Unexpected code for type
objc_selector
Include precompiled header file
PAUocl_image1d_ro@@
vla-bound
PAUocl_image1d_array_ro@@
__builtin_sve_svsbclt_n_u64
PAUocl_image1d_buffer_ro@@
malformed AST file: missing C++ base specifiers
PAUocl_image2d_ro@@
q8hq16bq8hq8s
PAUocl_image2d_array_ro@@
vptr
PAUocl_image2d_depth_ro@@
q4fq16bq4fq4i
PAUocl_image2d_array_depth_ro@@
Corrupted AST file
PAUocl_image2d_msaa_ro@@
legacy,non-legacy,mixed
PAUocl_image2d_array_msaa_ro@@
unsigned-integer-overflow
PAUocl_image2d_msaa_depth_ro@@
q8hq16bq8hs
PAUocl_image2d_array_msaa_depth_ro@@
  %u/%u source location entries read (%f%%)
PAUocl_image3d_ro@@
q4fq16bq4fi
PAUocl_image1d_wo@@
unsigned-shift-base
PAUocl_image1d_array_wo@@
q2dq16bq2dWi
PAUocl_image1d_buffer_wo@@
  %u/%u declarations read (%f%%)
PAUocl_image2d_wo@@
--include-prefix
PAUocl_image2d_array_wo@@
dataflow
PAUocl_image2d_depth_wo@@
__builtin_sve_svsel_bf16
PAUocl_image2d_array_depth_wo@@
  %u/%u macros read (%f%%)
PAUocl_image2d_msaa_wo@@
__builtin_sve_svsel_s16
PAUocl_image2d_array_msaa_wo@@
cfi-cast-strict
PAUocl_image2d_msaa_depth_wo@@
Generate output compatible with the standard GNU Objective-C runtime
PAUocl_image2d_array_msaa_depth_wo@@
-fmodules-disable-diagnostic-validation
PAUocl_image3d_wo@@
-fgcse
PAUocl_image1d_rw@@
cfi-derived-cast
PAUocl_image1d_array_rw@@
__builtin_sve_svset2_f32
PAUocl_image1d_buffer_rw@@
  %u/%u visible declcontexts read (%f%%)
PAUocl_image2d_rw@@
__builtin_sve_svset2_s16
PAUocl_image2d_array_rw@@
cfi-icall
PAUocl_image2d_depth_rw@@
__builtin_sve_svset2_s64
PAUocl_image2d_array_depth_rw@@
  %u/%u method pool lookups succeeded (%f%%)
PAUocl_image2d_msaa_rw@@
--include-with-prefix-after
PAUocl_image2d_array_msaa_rw@@
cfi-mfcall
PAUocl_image2d_msaa_depth_rw@@
__builtin_sve_svset2_u64
PAUocl_image2d_array_msaa_depth_rw@@
  %u / %u identifier table lookups succeeded (%f%%)
PAUocl_image3d_rw@@
__builtin_sve_svset3_bf16
cfi-unrelated-cast
ocl_sampler
__builtin_sve_svset3_f32
ocl_event
Global bit offset map
ocl_clkevent
Fully encode c++ class template specialization
ocl_queue
cfi-nvcall
ocl_reserveid
__builtin_sve_svset3_s64
Global type map
_Half
__builtin_sve_svset3_u16
$f16@
cfi-vcall
$halff@
__builtin_sve_svset3_u64
cannot mangle this built-in %0 type yet
Global identifier map
cannot mangle this decltype() yet
--include-with-prefix-before
cannot mangle this 'auto' type yet
kcfi
cannot mangle this deduced class template specialization type yet
__builtin_sve_svset4_f32
cannot mangle this dependent address space type yet
Global submodule map
cannot mangle this DependentBitInt type yet
__builtin_sve_svset4_s16
cannot mangle this dependent name type yet
safe-stack
cannot mangle this dependent-sized extended vector type yet
__builtin_sve_svset4_s64
cannot mangle this dependent template specialization type yet
Global preprocessed entity map
cannot mangle this dependent-sized vector type yet
-fno-file-reproducible
$$A6
shadow-call-stack
$$A8@@
__builtin_sve_svset4_u64
Cannot mangle this matrix type yet
no identifier table in AST file
Cannot mangle this dependent-sized matrix type yet
__builtin_sve_svsetffr
Autoreleasing
implicit-unsigned-integer-truncation
Strong
__builtin_sve_svshllb_n_s32
Weak
submodule ID out of range in AST file
__ObjC
--include-with-prefix
KindOf
implicit-signed-integer-truncation
cannot mangle this pack expansion yet
__builtin_sve_svshllb_n_u64
ocl_pipe
__builtin_sve_svshllt_n_s64
_ASCLglobal
implicit-integer-sign-change
_ASCLdevice
__builtin_sve_svshrnb_n_s16
_ASCLhost
_ASCLlocal
Enable Objective-C exceptions
_ASCLconstant
objc-cast
_ASCLprivate
__builtin_sve_svshrnt_n_s64
_ASCLgeneric
Microsoft Visual C++ full compatibility mode
_ASCUdevice
__builtin_sve_svsli_n_s16
_ASCUconstant
local-bounds
_ASCUshared
__builtin_sve_svsli_n_u16
Microsoft C++ extensions
cannot mangle this substituted parameter pack yet
-include
cannot mangle this template specialization type yet
scudo
cannot mangle this template type parameter type yet
__builtin_sve_svsplice_f32
cannot mangle this typeof(expression) yet
Borland extensions
cannot mangle this typeof(type) yet
__builtin_sve_svsplice_s64
cannot mangle this unary transform type yet
--linker-option=/include:
cannot mangle this unresolved dependent type yet
__builtin_sve_svsplice_u64
__m64
Disable validation of the diagnostic options when loading the module
Use the host's platform-specific path separator character when expanding the __FILE__ macro
__vector
__builtin_sve_svsqadd_n_u64_m
C++20
__builtin_sve_svsqadd_n_u8_x
arm64e
__builtin_sve_svsqadd_u16_z
cannot mangle this template argument yet
Objective-C App Extension
Make the next included directory (-I or -F) an indexer header map
arm64
__builtin_sve_svsqadd_u8_x
'//' comments
__builtin_sve_svsqrshru_u8_x4
arm64_32
__builtin_sve_svsqrt_f32_m
half keyword
Use GC exclusively for Objective-C related memory management
__builtin_sve_svsra_n_s64
char8_t keyword
__builtin_sve_svsra_n_u64
ppcle
__builtin_sve_svsri_n_s64
__declspec keyword
Ignore macros during indexing
ppc64
__builtin_sve_svst1_f16
GNU keywords
__builtin_sve_svst1_f64
ppc64le
__builtin_sve_svst1_s32
require function types to have a prototype
-fno-fine-grained-bitfield-accesses
darwin
__builtin_sve_svst1_scatter_s32index_s32
C++ operator name keywords
__builtin_sve_svst1_scatter_s32offset_f32
freebsd
vq16bd*q2Wiq2d
writable string support
Ignore symbols from imported pcm modules
netbsd
__builtin_sve_svst1_scatter_u32base_f32
lax vector conversions
__builtin_sve_svst1_scatter_u32base_index_s32
openbsd
__builtin_sve_svst1_scatter_u32base_offset_f32
Assume convergent functions
Enable Objective-C garbage collection
sunos
vq16bf*q4Uiq4f
System z vector extensions
vq16bUi*q4Uiq4Ui
?__L
?__M
__builtin_sve_svst1_scatter_u64base_f64
cannot mangle this conditional operator yet
Objective-C exceptions
Ignore symbols from system headers
__block_literal
__builtin_sve_svst1_scatter_u64base_offset_f64
$$J0
C/C++ EH Asynch exceptions
vq16bq2UWiq2Wi
??_E
.obj
?$RT
Specify where to find the compiled intrinsic modules
??_R0
-fmodules-embed-all-files
Use large-integer access for consecutive bitfield runs.
??_C@_
??__J
__builtin_sve_svst1_u16
??_B
run-time type information
?$S1@
__builtin_sve_svst1_u64
@4IA
__builtin_sve_svst1_vnum_bf16
??__
Microsoft-compatible structure layout
YAXXZ
Record the codegen name for symbols
?filt$
.dll.a
__builtin_sve_svst1_vnum_s16
?fin$
freestanding implementation
??_S
__builtin_sve_svst1_vnum_s64
??_7
__builtin_sve_svst1_vnum_u16
??_8
disable math builtin functions
-fobjc-legacy-dispatch
?$TSS
-android
@4HA
__builtin_sve_svst1b_s16
??_K
C++20 coroutines
__builtin_sve_svst1b_s64
clang_rt.
_CTA
__builtin_sve_svst1b_s8_x4
dllexported classes dllexport inline methods
??_R1
Enable indexing with the specified data store path
??_R2
android
??_R3
__builtin_sve_svst1b_scatter_s64offset_u64
??_R4@
pointer authentication intrinsics
??_R4
__builtin_sve_svst1b_scatter_u32base_s32
__super
ld64.
NSObject
__builtin_sve_svst1b_scatter_u32offset_u32
NSString
return pointer authentication
NSArray
-fno-finite-loops
NSMutableArray
NSDictionary
__builtin_sve_svst1b_scatter_u64offset_u64
NSMutableDictionary
pointer authentication failure traps
NSNumber
__builtin_sve_svst1b_u32
NSMutableSet
libtool
NSMutableOrderedSet
__builtin_sve_svst1b_u8_x2
NSValue
incorporate type discrimination in authenticated vtable pointers
stringWithString
Use <path> as the output path for this compilation unit in the index unit file
initWithString
llvm-ar
arrayWithArray
__builtin_sve_svst1b_vnum_s64
arrayWithObject
authentication of SEL fields of ObjC interfaces
arrayWithObjects
__builtin_sve_svst1b_vnum_s8_x4
initWithArray
x86_64-apple-darwin22.1.0
initWithObjects
__builtin_sve_svst1b_vnum_u32
objectAtIndex
pre- and post-authentication masking for Objective-C isa pointer
replaceObjectAtIndex
-fobjc-msgsend-selector-stubs
addObject
x86_64h
atIndex
__builtin_sve_svst1d_f64_x2
dictionaryWithDictionary
pointer authentication ABI version
dictionaryWithObject
__builtin_sve_svst1d_s64_x2
forKey
profile
dictionaryWithObjects
__builtin_sve_svst1d_u64_x2
forKeys
controls whether the pointer auth abi version should be encoded in the IR
dictionaryWithObjectsAndKeys
-init-only
initWithDictionary
-internal-isystem
initWithObjectsAndKeys
__builtin_sve_svst1d_vnum_s64_x2
objectForKey
class_ro_t pointer authentication
setValue
__builtin_sve_svst1d_vnum_u64_x2
numberWithChar
-internal-externc-isystem
numberWithUnsignedChar
__builtin_sve_svst1h_bf16_x2
numberWithShort
Embed the contents of all files read by this compilation into the produced module file.
numberWithUnsignedShort
Do not assume that any loop is finite.
numberWithInt
-lc++
numberWithUnsignedInt
__builtin_sve_svst1h_s16_x2
numberWithLong
Preserve expressions in AST when encountering errors
numberWithUnsignedLong
__builtin_sve_svst1h_s32
numberWithLongLong
-lc++experimental
numberWithUnsignedLongLong
__builtin_sve_svst1h_scatter_s32index_s32
numberWithFloat
POSIX thread support
numberWithDouble
-init
numberWithBool
-lstdc++
numberWithInteger
__builtin_sve_svst1h_scatter_s64index_u64
numberWithUnsignedInteger
errno in math functions
initWithChar
__builtin_sve_svst1h_scatter_u32base_index_s32
initWithUnsignedChar
initWithShort
__builtin_sve_svst1h_scatter_u32base_s32
initWithUnsignedShort
C++ Modules TS syntax
initWithInt
-fobjc-nonfragile-abi-version=
initWithUnsignedInt
-lcc_kext
initWithLong
__builtin_sve_svst1h_scatter_u64base_index_s64
initWithUnsignedLong
require declaration of module uses
initWithLongLong
__builtin_sve_svst1h_scatter_u64base_s64
initWithUnsignedLongLong
crtfastmath.o
initWithFloat
__builtin_sve_svst1h_scatter_u64index_u64
initWithDouble
local submodule visibility
initWithBool
att,intel
initWithInteger
invalid Xarch argument: '%0', not all driver options can be forwared via Xarch argument
initWithUnsignedInteger
__builtin_sve_svst1h_u32
BOOL
enable ODR hash checking for attributes
NSInteger
__builtin_sve_svst1h_vnum_bf16_x2
NSUInteger
0123456789.
category '
__builtin_sve_svst1h_vnum_f16_x2
' on interface '
disable ODR hash checking for interfaces
-fno-finite-math-only
--driver-mode=g++
__builtin_sve_svst1h_vnum_s32
disable ODR hash checking for records
final(
__builtin_sve_svst1h_vnum_u16_x2
num_threads(
clang-c++
align(
__builtin_sve_svst1h_vnum_u32
safelen(
disable ODR hash checking for ivars
simdlen(
-integrated-as
sizes(
clang-cc
__builtin_sve_svst1w_s32_x2
full
__OPTIMIZE__ predefined macro
partial
__builtin_sve_svst1w_s64
allocator(
--driver-mode=cpp
collapse(
__builtin_sve_svst1w_scatter_s64index_u64
detach(
__STATIC__ predefined macro (as opposed to __DYNAMIC__)
default(
-fobjc-relative-method-lists
proc_bind(
clang-g++
unified_address
__builtin_sve_svst1w_scatter_u64base_s64
unified_shared_memory
default maximum alignment for types
reverse_offload
__builtin_sve_svst1w_scatter_u64index_u64
dynamic_allocators
clang-gcc
atomic_default_mem_order(
__builtin_sve_svst1w_u32_x2
schedule(
width of double
ordered
-internal-externc-isystem
--driver-mode=cl
nowait
__builtin_sve_svst1w_vnum_f32_x4
untied
use IEEE 754 quadruple-precision for long double
nogroup
__builtin_sve_svst1w_vnum_s32_x4
mergeable
read
-fhip-new-launch-api
write
-fmodules-embed-file=
update
-fno-fixed-point
capture
compare
__builtin_sve_svst2_f16
seq_cst
is pie
acq_rel
__builtin_sve_svst2_f64
acquire
--driver-mode=flang
release
__builtin_sve_svst2_s32
relaxed
Read-write position independence
threads
-internal-isystem
simd
--driver-mode=dxc
device(
__builtin_sve_svst2_u32
num_teams(
__NO_INLINE__ predefined macro
thread_limit(
__builtin_sve_svst2_u8
priority(
clang-cache
grainsize(
__builtin_sve_svst2_vnum_f16
num_tasks(
fast FP math optimizations, and __FAST_MATH__ predefined macro
hint(
-fobjc-runtime-has-weak
init(
--driver-mode=cache
prefer_type(
__builtin_sve_svst2_vnum_s32
Unsafe Floating Point Math
__builtin_sve_svst2_vnum_s8
target
clang::as
targetsync
__builtin_sve_svst2_vnum_u32
signed char
use(
-iprefix
destroy
clang integrated assembler
novariants
__builtin_sve_svst3_f16
nocontext
signed or unsigned wchar_t
allocate
__builtin_sve_svst3_f64
IFS::Merger
private
__builtin_sve_svst3_s32
firstprivate
default calling convention
lastprivate
Disable fixed point types
shared
llvm-ifs
reduction(
__builtin_sve_svst3_u32
task_reduction(
OpenCL C version
in_reduction(
__builtin_sve_svst3_u8
linear
offload bundler
aligned
__builtin_sve_svst3_vnum_f16
copyin
OpenCL generic keyword
copyprivate
-iquote
depend(
clang-offload-bundler
__builtin_sve_svst3_vnum_s32
Native half type support
omp_all_memory
__builtin_sve_svst3_vnum_s8
map(
Offload::Packager
dist_schedule(
__builtin_sve_svst3_vnum_u32
defaultmap(
OpenMP support and version of OpenMP (31, 40 or 45)
use_device_ptr
-fobjc-runtime=
use_device_addr
clang-offload-packager
is_device_ptr
__builtin_sve_svst4_f16
has_device_addr
Use SIMD only OpenMP support.
nontemporal
__builtin_sve_svst4_f64
order(
Offload::Linker
inclusive
__builtin_sve_svst4_s32
exclusive
Generate code only for OpenMP target device
uses_allocators(
-isysroot
affinity
linker
filter(
__builtin_sve_svst4_u32
bind(
Use the experimental OpenMP-IR-Builder codegen path.
__builtin_sve_svst4_u8
score(
armhf
__builtin_sve_svst4_vnum_f16
wint_t
Embed the contents of the specified file into the module file being compiled.
__int32
-fno-float-store
__int64
i686
intmax_t
__builtin_sve_svst4_vnum_s32
ssize_t
Enable debugging in the OpenMP offloading device RTL
unsigned __int32
__builtin_sve_svst4_vnum_s8
unsigned __int64
uintmax_t
__builtin_sve_svst4_vnum_u32
unsigned ptrdiff_t
Assume work-shared loops do not have more iterations than participating threads.
const unichar *
-isystem-after
wchar_t *
__builtin_sve_svstnt1_f32
Assume that no thread in a parallel region will modify an ICV.
__builtin_sve_svstnt1_s64
native
__builtin_sve_svstnt1_scatter_s64index_u64
Assert that offloading is mandatory and do not create a host fallback.
-fobjc-sender-dependent-dispatch
^[[:space:]]*(private|public|sensitive|mask\.[^[:space:],}]*)[[:space:]]*(,|})
apple-m1
*** Dumping AST Record Layout
__builtin_sve_svstnt1_scatter_u32base_offset_f32
Type: 
HLSL Version
Layout: 
__builtin_sve_svstnt1_scatter_u32base_u32
<ASTRecordLayout
apple-s4
  Size:
__builtin_sve_svstnt1_scatter_u64base_f64
  DataSize:
allowing variadic functions in CUDA device code
  Alignment:
-isystem
  PreferredAlignment:
apple-a12
  FieldOffsets: [
__builtin_sve_svstnt1_scatter_u64base_u64
 (empty)
using approximate transcendental functions
 vtable pointer)
__builtin_sve_svstnt1_scatter_u64offset_f64
 vftable pointer)
apple-a7
(primary base)
__builtin_sve_svstnt1_u32
(base)
allowing device side global init functions for HIP
 vbtable pointer)
-fno-for-scope
(vtordisp for vbase 
generic
(primary virtual base)
__builtin_sve_svstnt1_vnum_s32
(virtual base)
defer host/device related diagnostic messages for CUDA/HIP
[sizeof=
__builtin_sve_svstnt1_vnum_u32
, dsize=
+neon
, align=
__builtin_sve_svstnt1b_s8_x4
, preferredalign=
use the new driver for generating offloading code.
-ivfsoverlay
 nvsize=
-march=
, nvalign=
__builtin_sve_svstnt1b_scatter_u32offset_u32
, preferrednvalign=
SYCL host compilation
%10lld | 
__builtin_sve_svstnt1b_scatter_u64base_u64
armv8-a
           | 
__builtin_sve_svstnt1b_u8_x4
Use new kernel launching API for HIP
Allow Objective-C array and dictionary subscripting in legacy runtime
march=
*** Stmt/Expr Stats:
__builtin_sve_svstnt1d_s64_x4
aligned allocation
 stmts/exprs total.
__builtin_sve_svstnt1d_vnum_f64_x4
    
+reserve-x30
__builtin_sve_svstnt1d_vnum_u64_x4
maximum alignment guaranteed by '::operator new(size_t)'
 each (
-ivfsstatcache
 bytes)
-fp-armv8
Total bytes = 
__builtin_sve_svstnt1h_scatter_s64index_u64
constant Objective-C literals
__builtin_sve_svstnt1h_scatter_u32base_index_u32
-crypto
-fivopts
-fmodules-hash-content
${:uid}
-fno-force-dwarf-frame
GCCAsmStmt
-neon
MSAsmStmt
__builtin_sve_svstnt1h_scatter_u64base_u64
BreakStmt
hidden visibility for global operator new and delete declaration
CXXCatchStmt
__builtin_sve_svstnt1h_scatter_u64offset_u64
CXXForRangeStmt
+tpidr-el3
CXXTryStmt
__builtin_sve_svstnt1h_vnum_bf16_x4
CapturedStmt
Treats throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
CompoundStmt
-iwithprefixbefore
ContinueStmt
+tpidr-el2
CoreturnStmt
__builtin_sve_svstnt1w_f32_x4
CoroutineBodyStmt
OpenCL fast relaxed math
DeclStmt
__builtin_sve_svstnt1w_scatter_s64index_u64
DoStmt
+tpidr-el1
ForStmt
__builtin_sve_svstnt1w_scatter_u64base_index_u64
GotoStmt
bit-field type alignment
IfStmt
Enable ARC-style weak references in Objective-C
IndirectGotoStmt
+harden-sls-retbr
MSDependentExistsStmt
__builtin_sve_svstnt1w_scatter_u64offset_u64
NullStmt
Objective-C automated reference counting
OMPCanonicalLoop
__builtin_sve_svstnt1w_vnum_f32_x4
OMPAtomicDirective
+harden-sls-blr
OMPBarrierDirective
__builtin_sve_svstnt1w_vnum_u32_x4
OMPCancelDirective
Objective-C __weak in ARC and MRC files
OMPCancellationPointDirective
-iwithprefix
OMPCriticalDirective
+harden-sls-nocomdat
OMPDepobjDirective
__builtin_sve_svsub_f64_x
OMPDispatchDirective
Subscripting support in legacy ObjectiveC runtime
OMPFlushDirective
__builtin_sve_svsub_n_f16_z
OMPInteropDirective
+crc
OMPDistributeDirective
__builtin_sve_svsub_n_f64_m
OMPDistributeParallelForDirective
Control-Flow Branch Protection enabled
OMPDistributeParallelForSimdDirective
-fno-force-emit-vtables
OMPDistributeSimdDirective
-crc
OMPForDirective
__builtin_sve_svsub_n_s32_z
OMPForSimdDirective
OpenCL address space map mangling mode
OMPGenericLoopDirective
__builtin_sve_svsub_n_s8_m
OMPMaskedTaskLoopDirective
+sm4
OMPMaskedTaskLoopSimdDirective
__builtin_sve_svsub_n_u16_x
OMPMasterTaskLoopDirective
Declare OpenCL builtin functions
OMPMasterTaskLoopSimdDirective
-iwithsysroot
OMPParallelForDirective
+sha3
OMPParallelForSimdDirective
__builtin_sve_svsub_n_u8_m
OMPParallelGenericLoopDirective
Require member pointer base types to be complete at the point where the type's inheritance model would be determined under the Microsoft ABI
OMPParallelMaskedTaskLoopDirective
__builtin_sve_svsub_s16_x
OMPParallelMaskedTaskLoopSimdDirective
+sha2
OMPParallelMasterTaskLoopDirective
__builtin_sve_svsub_s32_z
OMPParallelMasterTaskLoopSimdDirective
default visibility for functions and variables [-fvisibility]
OMPSimdDirective
Enable ODR hash checking for attributes 
OMPTargetParallelForSimdDirective
+aes
OMPTargetParallelGenericLoopDirective
__builtin_sve_svsub_u16_x
OMPTargetSimdDirective
apply global symbol visibility to external declarations without an explicit visibility
OMPTargetTeamsDistributeDirective
__builtin_sve_svsub_u32_z
OMPTargetTeamsDistributeParallelForDirective
-sm4
OMPTargetTeamsDistributeParallelForSimdDirective
__builtin_sve_svsub_u8_m
OMPTargetTeamsDistributeSimdDirective
visibility for functions and variables with dllexport annotations [-fvisibility-from-dllstorageclass]
OMPTargetTeamsGenericLoopDirective
-iworkdir=
OMPTaskLoopDirective
-sha3
OMPTaskLoopSimdDirective
__builtin_sve_svsubhnb_n_u64
OMPTeamsDistributeDirective
visibility for external declarations with dllimport annotations [-fvisibility-from-dllstorageclass]
OMPTeamsDistributeParallelForDirective
__builtin_sve_svsubhnb_u16
OMPTeamsDistributeParallelForSimdDirective
-sha2
OMPTeamsDistributeSimdDirective
__builtin_sve_svsubhnt_n_s32
OMPTeamsGenericLoopDirective
Enable hashing the content of a module file
OMPTileDirective
-fno-force-enable-int128
OMPUnrollDirective
-aes
OMPMaskedDirective
__builtin_sve_svsubhnt_u16
OMPMasterDirective
controls whether to use strong linking for darwin stack checking (x86 only)
OMPMetaDirective
__builtin_sve_svsublb_n_s32
OMPOrderedDirective
+fp16fml
OMPParallelDirective
__builtin_sve_svsublb_n_u64
OMPParallelMaskedDirective
stop trivial automatic variable initialization after the specified number of instances. Must be greater than 0.
OMPParallelMasterDirective
os,virtual
OMPParallelSectionsDirective
-fp16fml
OMPScanDirective
__builtin_sve_svsublbt_n_s32
OMPSectionDirective
do not auto-initialize objects initialized by a C++ constructor
OMPSectionsDirective
__builtin_sve_svsublbt_s64
OMPSingleDirective
-fullfp16
OMPTargetDataDirective
__builtin_sve_svsublt_n_u16
OMPTargetDirective
do not auto-initialize variables in STL namespace
OMPTargetEnterDataDirective
Set LTO mode for offload compilation
OMPTargetExitDataDirective
+fullfp16
OMPTargetParallelDirective
__builtin_sve_svsublt_u64
OMPTargetParallelForDirective
signed integer overflow handling
OMPTargetTeamsDirective
__builtin_sve_svsubltb_s16
OMPTargetUpdateDirective
+crypto
OMPTaskDirective
__builtin_sve_svsubr_f16_x
OMPTaskgroupDirective
Microsoft Visual C/C++ Version
OMPTaskwaitDirective
Add directory to the end of the list of include search paths
OMPTaskyieldDirective
+i8mm
OMPTeamsDirective
__builtin_sve_svsubr_n_f16_m
ObjCAtCatchStmt
Apple gcc-compatible #pragma pack handling
ObjCAtFinallyStmt
__builtin_sve_svsubr_n_f32_x
ObjCAtSynchronizedStmt
+bf16
ObjCAtThrowStmt
__builtin_sve_svsubr_n_f64_z
ObjCAtTryStmt
retain documentation comments from system headers in the AST
ObjCAutoreleasePoolStmt
Disable support for int128_t type
ObjCForCollectionStmt
+hbc
ReturnStmt
__builtin_sve_svsubr_n_s64_x
SEHExceptStmt
compilation involves pch
SEHFinallyStmt
__builtin_sve_svsubr_n_s8_z
SEHLeaveStmt
+mops
SEHTryStmt
__builtin_sve_svsubr_n_u32_m
CaseStmt
ARM Security extensions support
DefaultStmt
Add directory to include search path
SwitchStmt
+reserve-x1
AttributedStmt
__builtin_sve_svsubr_n_u8_z
BinaryConditionalOperator
controls whether to always emit intrinsic calls to __xray_customevent(...) builtin.
ConditionalOperator
__builtin_sve_svsubr_s32_m
AddrLabelExpr
+reserve-x2
ArrayInitIndexExpr
__builtin_sve_svsubr_s64_x
ArrayInitLoopExpr
whether to emit all vtables
ArraySubscriptExpr
Enable LTO in 'full' mode for offload compilation
ArrayTypeTraitExpr
+reserve-x3
AsTypeExpr
__builtin_sve_svsubr_u32_m
AssumptionExpr
Default alignment for functions
AtomicExpr
__builtin_sve_svsubr_u64_x
BinaryOperator
+reserve-x4
CompoundAssignOperator
__builtin_sve_svsubr_u8_z
BlockExpr
fixed point types
BoundsCheckExpr
Disable just-my-code debugging (default)
CXXBindTemporaryExpr
+reserve-x5
CXXBoolLiteralExpr
__builtin_sve_svsubwb_s32
CXXConstructExpr
Register C++ static destructors
CXXTemporaryObjectExpr
__builtin_sve_svsubwb_u64
CXXDefaultArgExpr
+reserve-x6
CXXDefaultInitExpr
-fgnu89-inline
CXXDeleteExpr
-fmodules-hash-error-diagnostics
CXXDependentScopeMemberExpr
-fno-friend-injection
CXXFoldExpr
+reserve-x7
CXXInheritedCtorInitExpr
__builtin_sve_svsubwt_u64
CXXNewExpr
enable noescape optimized blocks
CXXNoexceptExpr
q4iq4iq16ScUc
CXXNullPtrLiteralExpr
+reserve-x9
CXXPseudoDestructorExpr
q8yq16yq8Us
CXXRewrittenBinaryOperator
Key used for return address signing
CXXScalarValueInitExpr
CXXStdInitializerListExpr
+reserve-x10
CXXThisExpr
q8sq16sq8Us
CXXThrowExpr
Speculative load hardening enabled
CXXTypeidExpr
q2Wiq4Wiq2UWi
CXXUnresolvedConstructExpr
+reserve-x11
CXXUuidofExpr
q8Usq16Usq8Us
CallExpr
Minimum vscale value
CUDAKernelCallExpr
-fopenacc
CXXMemberCallExpr
+reserve-x12
CXXOperatorCallExpr
q8yq8yq8Us
UserDefinedLiteral
Controls how scalar integer arguments are extended in calls to unprototyped and varargs functions
BuiltinBitCastExpr
q4fq4fq4Ui
CStyleCastExpr
+reserve-x13
CXXFunctionalCastExpr
q8sq8sq8Us
CXXAddrspaceCastExpr
Typed Memory Operations Callsite Rewriting
CXXConstCastExpr
Make char type unsigned
CXXDynamicCastExpr
+reserve-x14
CXXReinterpretCastExpr
__builtin_sve_svtbl_u32
CXXStaticCastExpr
Allow CWG1423
ObjCBridgedCastExpr
q8yq8yq8yq8Us
ImplicitCastExpr
+reserve-x15
CharacterLiteral
q4fq4fq4fq4Ui
ChooseExpr
Revert 4257857bf8a508b56f73f61bdf941194913bac92 and do not infer +new availability
CompoundLiteralExpr
-fno-frontend-optimize
ConceptSpecializationExpr
+reserve-x18
ConvertVectorExpr
q2Wiq2Wiq2Wiq2UWi
CoawaitExpr
Revert 5741d19f046f24450ebda3a421a8ce49043ad2b8 and do not emit -Wformat
CoyieldExpr
__builtin_sve_svtbx_u32
DeclRefExpr
+reserve-x20
DependentCoawaitExpr
__builtin_sve_svtmad_f32
DependentScopeDeclRefExpr
Revert 7ae1b4a0ce9c7f269cf3069e41496a78e3f28d49 and allow static members in local structs
DesignatedInitExpr
/kernel-
DesignatedInitUpdateExpr
+reserve-x21
ExpressionTraitExpr
__builtin_sve_svtrn1_f16
ExtVectorElementExpr
Revert part of c90e198107431f64b73686bdce31c293e3380ac7
FirebloomPointerPromotionExpr
__builtin_sve_svtrn1_s32
FixedPointLiteral
+reserve-x22
FloatingLiteral
__builtin_sve_svtrn1_u32
ForgePtrExpr
Disable 89b1a463a531dbdb18aa3516d7b8fd7482d1d3a0
ConstantExpr
-fopenmp-assume-no-nested-parallelism
ExprWithCleanups
+reserve-x23
FunctionParmPackExpr
__builtin_sve_svtrn1q_s32
GNUNullExpr
Disable a4a60ad51dd58da2c15ef505d5fe527ef3fecd89
GenericSelectionExpr
__builtin_sve_svtrn1q_u32
GetBoundExpr
+reserve-x24
ImaginaryLiteral
__builtin_sve_svtrn2_b32
ImplicitValueInitExpr
rdar://67765582
InitListExpr
--language=
IntegerLiteral
+reserve-x25
LambdaExpr
__builtin_sve_svtrn2_s32
MSPropertyRefExpr
rdar://72363517
MSPropertySubscriptExpr
__builtin_sve_svtrn2_u32
MaterializeSequenceExpr
+reserve-x26
MaterializeTemporaryExpr
__builtin_sve_svtrn2q_f16
MatrixSubscriptExpr
Use a separate module cache for modules compiled with conflicting -Werror options
MemberExpr
-fno-function-attribute-list
NoInitExpr
+reserve-x27
OMPArraySectionExpr
__builtin_sve_svtrn2q_u32
OMPArrayShapingExpr
Disable ObjCConstantLiterals in projects that do not handle it
OMPIteratorExpr
__builtin_sve_svtsmul_f32
ObjCAvailabilityCheckExpr
+reserve-x28
ObjCBoolLiteralExpr
__builtin_sve_svtssel_f64
ObjCEncodeExpr
module features
ObjCIndirectCopyRestoreExpr
-lazy_framework
ObjCIsaExpr
+call-saved-x8
ObjCIvarRefExpr
q16hv
ObjCMessageExpr
block command names
ObjCArrayLiteral
q4dv
ObjCBoxedExpr
+call-saved-x9
ObjCDictionaryLiteral
q8iv
ObjCStringLiteral
target CPU
ObjCPropertyRefExpr
-fopenmp-assume-no-thread-state
ObjCProtocolExpr
+call-saved-x10
ObjCSelectorExpr
q8Uiv
ObjCSubscriptRefExpr
-Wsystem-headers
OffsetOfExpr
q32Ucv
OpaqueValueExpr
+call-saved-x11
UnresolvedLookupExpr
q24hv
UnresolvedMemberExpr
-Weverything -Werror
PackExpansionExpr
--ld-path=
ParenListExpr
+call-saved-x12
PredefinedBoundsCheckExpr
q12iv
PredefinedExpr
PseudoObjectExpr
q48Scv
RecoveryExpr
+call-saved-x13
RequiresExpr
q12Uiv
SYCLUniqueStableNameExpr
uleb128 too big for uint64
ShuffleVectorExpr
-fno-function-sections
SizeOfPackExpr
+call-saved-x14
SourceLocExpr
q32hv
StmtExpr
could not decompress embedded file contents: 
StringLiteral
q8dv
SubstNonTypeTemplateParmExpr
+call-saved-x15
SubstNonTypeTemplateParmPackExpr
q16iv
TerminatedByFromIndexableExpr
could not get buffer for file '
TerminatedByToIndexableExpr
Create debug DLL
TypeTraitExpr
+call-saved-x18
TypoExpr
q16Uiv
UnaryExprOrTypeTraitExpr
file too small to contain AST file magic
UnaryOperator
q64Ucv
VAArgExpr
+no-neg-immediates
LabelStmt
q8hv
WhileStmt
clang diagnostic
-fopenmp-assume-teams-oversubscription
asm 
+fix-cortex-a53-835769
volatile 
q4iv
reading code
__asm 
q16Scv
break;
-fix-cortex-a53-835769
#pragma STDC FENV_ACCESS 
q4Uiv
attempt to read a C++ base-specifier record as a declaration
Create DLL
#pragma clang fp exceptions(
+no-bti-at-return-twice
#pragma STDC FENV_ROUND 
__builtin_sve_svunpkhi_s64
<<<NULL STATEMENT>>>
ASTReader::loadDeclUpdateRecords failed jumping: 
<null expr>
__builtin_sve_svunpklo_b
try 
+sve
Apply fix-it advice only for warnings, not errors
continue;
-fmodules-ignore-macro=
-fno-gcse-after-reload
while (
+sve2
__if_exists (
__builtin_sve_svuqadd_n_s32_z
__if_not_exists (
ASTReader::loadPendingDeclChain failed reading code: 
#pragma omp atomic
__builtin_sve_svuqadd_n_s8_m
#pragma omp barrier
neon
#pragma omp cancel 
__builtin_sve_svuqadd_s16_x
#pragma omp cancellation point 
ASTReader::readDeclRecord failed 
#pragma omp critical
Path to libomptarget-amdgcn bitcode library
#pragma omp depobj
sve2-sha3
#pragma omp dispatch
__builtin_sve_svuqadd_s8_m
#pragma omp flush
METADATA
#pragma omp interop
q4iq4iq16Ucq16ScIUWi
#pragma omp distribute
sve2-aes
#pragma omp distribute parallel for
q4iq4iq16Ucq16Sc
#pragma omp distribute parallel for simd
MODULE_DIRECTORY
#pragma omp distribute simd
-fopenmp-cuda-blocks-per-sm=
#pragma omp for
sve2-sm4
#pragma omp for simd
__builtin_sve_svuzp1_f32
#pragma omp loop
IMPORTS
#pragma omp masked taskloop
__builtin_sve_svuzp1_s64
#pragma omp masked taskloop simd
-sve2
#pragma omp master taskloop
__builtin_sve_svuzp1_u64
#pragma omp master taskloop simd
ORIGINAL_FILE_ID
#pragma omp parallel for
--libomptarget-nvptx-bc-path=
#pragma omp parallel for simd
-sve2-bitperm
#pragma omp parallel loop
__builtin_sve_svuzp1q_s64
#pragma omp parallel masked taskloop
MODULE_CACHE_KEY
#pragma omp parallel masked taskloop simd
__builtin_sve_svuzp1q_u64
#pragma omp parallel master taskloop
-sve2-sha3
#pragma omp parallel master taskloop simd
__builtin_sve_svuzp2_b64
#pragma omp simd
CAS_INCLUDE_TREE_ID
#pragma omp target parallel for simd
-fno-gcse-las
#pragma omp target parallel loop
-sve2-aes
#pragma omp target simd
__builtin_sve_svuzp2_s64
#pragma omp target teams distribute
LANGUAGE_OPTIONS
#pragma omp target teams distribute parallel for
__builtin_sve_svuzp2_u64
#pragma omp target teams distribute parallel for simd
-sve2-sm4
#pragma omp target teams distribute simd
__builtin_sve_svuzp2q_f32
#pragma omp target teams loop
HEADER_SEARCH_OPTIONS
#pragma omp taskloop
--library-directory=
#pragma omp taskloop simd
#pragma omp teams distribute
__builtin_sve_svuzp2q_u64
#pragma omp teams distribute parallel for
INPUT_FILES_BLOCK
#pragma omp teams distribute parallel for simd
__builtin_sve_svwhilege_b16_s64
#pragma omp teams distribute simd
+f32mm
#pragma omp teams loop
__builtin_sve_svwhilege_b16_u64
#pragma omp tile
INPUT_FILE_HASH
#pragma omp unroll
-fopenmp-cuda-number-of-sm=
#pragma omp masked
cyclone
#pragma omp master
__builtin_sve_svwhilege_b64_u32
#pragma omp metadirective
TYPE_OFFSET
#pragma omp ordered
__builtin_sve_svwhilege_b8_u32
#pragma omp parallel
+zcm
#pragma omp parallel masked
__builtin_sve_svwhilegt_b16_u32
#pragma omp parallel master
IDENTIFIER_OFFSET
#pragma omp parallel sections
--linker-option=
#pragma omp scan
+zcz
#pragma omp section
__builtin_sve_svwhilegt_b64_u32
#pragma omp sections
EAGERLY_DESERIALIZED_DECLS
#pragma omp single
__builtin_sve_svwhilegt_b8_u32
#pragma omp target data
soft
#pragma omp target
__builtin_sve_svwhilele_b16_u32
#pragma omp target enter data
Ignore the definition of the given macro when building and loading modules
#pragma omp target exit data
-fno-gcse-sm
#pragma omp target parallel
armeb
#pragma omp target parallel for
__builtin_sve_svwhilele_b64_u32
#pragma omp target teams
TENTATIVE_DEFINITIONS
#pragma omp target update
__builtin_sve_svwhilele_b8_u32
#pragma omp task
#pragma omp taskgroup
__builtin_sve_svwhilelt_b16_u32
#pragma omp taskwait
METHOD_POOL
#pragma omp taskyield
/link
#pragma omp teams
-mthumb
@catch (...) { /* todo */ } 
__builtin_sve_svwhilelt_b64_u32
@synchronized (
SOURCE_LOCATION_OFFSETS
@catch(
__builtin_sve_svwhilelt_b8_u32
@autoreleasepool
thumbeb
 in 
__builtin_sve_svwhilerw_f16
<<unknown expr type>>
EXT_VECTOR_DECLS
__finally 
-fopenmp-enable-irbuilder
__leave;
thumb
__try 
__builtin_sve_svwhilerw_s32
default:
PPD_ENTITIES_OFFSETS
switch (
__builtin_sve_svwhilerw_s8
 ?: 
+soft-float-abi
__builtin_astype(
__builtin_sve_svwhilerw_u32
__c11_atomic_init(
REFERENCED_SELECTOR_POOL
__c11_atomic_load(
<options>
__c11_atomic_store(
-mfpu=
__c11_atomic_exchange(
__builtin_sve_svwhilewr_f32
__c11_atomic_compare_exchange_strong(
SEMA_DECL_REFS
__c11_atomic_compare_exchange_weak(
__builtin_sve_svwhilewr_s64
__c11_atomic_fetch_add(
+read-tp-hard
__c11_atomic_fetch_sub(
__builtin_sve_svwhilewr_u64
__c11_atomic_fetch_and(
PENDING_IMPLICIT_INSTANTIATIONS
__c11_atomic_fetch_or(
-fno-gcse
__c11_atomic_fetch_xor(
-dotprod
__c11_atomic_fetch_nand(
__builtin_sve_svxar_n_u16
__c11_atomic_fetch_max(
DECL_UPDATE_OFFSETS
__c11_atomic_fetch_min(
__builtin_sve_svzip1_b16
__atomic_load(
-bf16
__atomic_load_n(
__builtin_sve_svzip1_bf16
__atomic_store(
CUDA_SPECIAL_DECL_REFS
__atomic_store_n(
-load
__atomic_exchange(
-mve
__atomic_exchange_n(
__builtin_sve_svzip1_u16
__atomic_compare_exchange(
FP_PRAGMA_OPTIONS
__atomic_compare_exchange_n(
__builtin_sve_svzip1q_bf16
__atomic_fetch_add(
-mve.fp
__atomic_fetch_sub(
__builtin_sve_svzip1q_s16
__atomic_fetch_and(
OPENCL_EXTENSION_TYPES
__atomic_fetch_or(
-fopenmp-extensions
__atomic_fetch_xor(
-fpregs
__atomic_fetch_nand(
__builtin_sve_svzip2_b16
__atomic_add_fetch(
DELEGATING_CTORS
__atomic_sub_fetch(
__builtin_sve_svzip2_bf16
__atomic_and_fetch(
sha2
__atomic_or_fetch(
__builtin_sve_svzip2_s16
__atomic_xor_fetch(
MODULE_OFFSET_MAP
__atomic_max_fetch(
Add directory to library search path
__atomic_min_fetch(
__atomic_nand_fetch(
__builtin_sve_svzip2q_bf16
__opencl_atomic_init(
OBJC_CATEGORIES_MAP
__opencl_atomic_load(
__builtin_sve_svzip2q_s16
__opencl_atomic_store(
aapcs
__opencl_atomic_exchange(
-fhonor-infinites
__opencl_atomic_compare_exchange_strong(
-fmodules-local-submodule-visibility
__opencl_atomic_compare_exchange_weak(
-fno-generic-block-helpers-use-extended-layout
__opencl_atomic_fetch_add(
+aapcs-frame-chain
__opencl_atomic_fetch_sub(
q16Scq4Si
__opencl_atomic_fetch_and(
MACRO_OFFSET
__opencl_atomic_fetch_or(
q16Scq16Uc
__opencl_atomic_fetch_xor(
+aapcs-frame-chain-leaf
__opencl_atomic_fetch_min(
q16Scq4Ui
__opencl_atomic_fetch_max(
UNDEFINED_BUT_USED
__atomic_fetch_min(
-m16
__atomic_fetch_max(
+8msecext
__hip_atomic_load(
q16Scq4f
__hip_atomic_store(
OPTIMIZE_PRAGMA_OPTIONS
__hip_atomic_compare_exchange_weak(
q8Ssq16Sc
__hip_atomic_compare_exchange_strong(
+fix-cmse-cve-2021-35465
__hip_atomic_exchange(
q8Ssq4Si
__hip_atomic_fetch_add(
POINTERS_TO_MEMBERS_PRAGMA_OPTIONS
__hip_atomic_fetch_and(
-fopenmp-host-ir-file-path
__hip_atomic_fetch_or(
-fix-cmse-cve-2021-35465
__hip_atomic_fetch_xor(
q8Ssq4Ui
__hip_atomic_fetch_min(
DELETE_EXPRS_TO_ANALYZE
__hip_atomic_fetch_max(
q8Ssq8h
+fix-cortex-a57-aes-1742098
delete 
q8Ssq4f
PP_CONDITIONAL_STACK
<forwarded>
-m3dnowa
throw 
-fix-cortex-a57-aes-1742098
__uuidof(
q4Siq4Si
PP_INCLUDED_FILES
>>>(
q4Siq16Uc
-0123456789
+long-calls
__builtin_bit_cast(
q4Siq4Ui
__builtin_choose_expr(
SOURCE_MANAGER_BLOCK
__builtin_convertvector(
Generic block helpers don't use extended layout
co_await 
+execute-only
co_yield 
q4Siq4f
/*base*/
SM_SLOC_BUFFER_ENTRY
/*updater*/
q2SWiq16Sc
q2SWiq4Si
SM_SLOC_BUFFER_BLOB_COMPRESSED
-m64
v8m.base
q2SWiq4Ui
PREPROCESSOR_BLOCK
q2SWiq8h
+reserve-r9
q2SWiq4f
PP_MACRO_FUNCTION_LIKE
-fopenmp-implicit-rpath
__builtin_unsafe_forge_bidi_indexable(
+no-movt
__builtin_unsafe_forge_terminated_by(
q16Ucq4Si
__builtin_unsafe_forge_single(
PP_MODULE_MACRO
__null
__builtin_sve_reinterpret_u8_u16
_Generic(
armv7k
__builtin_get_pointer_
q16Ucq2UWi
lower
SUBMODULE_BLOCK
upper
-m68010
_bound(
armv7s
/*implicit*/
q16Ucq2d
/*implicit*/(
SUBMODULE_DEFINITION
q8Usq8Ss
--be8
q8Usq2SWi
name visibility rules across submodules of the same top-level module
-fno-generic-block-helpers
Ui16
+mve
__builtin_sve_reinterpret_u16_bf16
SUBMODULE_UMBRELLA_DIR
__builtin_sve_reinterpret_u16_f64
*this
crypto
 mutable
__builtin_sve_reinterpret_u32_s16
/*no init*/
SUBMODULE_AFFECTING_MODULES
iterator(
-m68030
@available(...)
ck810
@encode(
__builtin_sve_reinterpret_u32_u16
->isa
SUBMODULE_REQUIRES
.isa
q4Uiq8h
Super
+hard-float-abi
q4Uiq4f
SUBMODULE_LINK_LIBRARY
-fopenmp-is-device
super.
+hard-float
@protocol(
q2UWiq4Si
@selector(
SUBMODULE_CONFLICT
__builtin_offsetof(
q2UWiq16Uc
<recovery-expr>(
+fpuv2_sf
requires 
__builtin_sve_reinterpret_u64_u64
SUBMODULE_TEXTUAL_HEADER
<<error-expression>>
-m68060
__builtin_sycl_unique_stable_name(
+fpuv2_df
__builtin_shufflevector(
q2UWiq2d
sizeof...(
SUBMODULE_INITIALIZERS
__builtin_unsafe_terminated_by_from_indexable(
q8hq8Ss
__builtin_unsafe_terminated_by_to_indexable
+fdivdu
__builtin_terminated_by_to_indexable
q8hq2SWi
__alignof
COMMENTS_BLOCK
__builtin_va_arg(
Don't use generic block helpers for copying/destroying blocks
(no value)
+fpuv3_hi
(signed char)
__builtin_sve_reinterpret_f16_f16
(unsigned char)
COMMENTS_DECL_TO_COMMENT
(null template argument)
q8hq4f
+fpuv3_hf
<<<NULL>>>
q8yq16Sc
AnnotateType
TYPE_EXT_QUAL
ArmMveStrictPolymorphism
-mabi=ieeelongdouble
ArmNewZA
+fpuv3_sf
ArmPreservesZA
q8yq16Uc
ArmSharedZA
TYPE_POINTER
ArmStreaming
q8yq4Ui
ArmStreamingCompatible
+fpuv3_df
CmseNSCall
q8yq8h
NoDeref
TYPE_LVALUE_REFERENCE
ObjCGC
-fopenmp-new-driver
ObjCInertUnsafeUnretained
ilp32d
ObjCKindOf
__builtin_sve_reinterpret_f32_s16
OpenCLConstantAddressSpace
TYPE_MEMBER_POINTER
OpenCLGenericAddressSpace
__builtin_sve_reinterpret_f32_s64
OpenCLGlobalAddressSpace
lp64d
OpenCLGlobalDeviceAddressSpace
__builtin_sve_reinterpret_f32_u16
OpenCLGlobalHostAddressSpace
TYPE_INCOMPLETE_ARRAY
OpenCLLocalAddressSpace
-mabi=quadword-atomics
OpenCLPrivateAddressSpace
PointerAuth
Ptr32
q4fq8y
TYPE_VECTOR
TYPE_TYPEDEF
Ptr64
__builtin_sve_reinterpret_f64_s8
PtrAutoAttr
m68000
PtrAutoNullTerminatedAttr
Apply fix-it advice even in the presence of unfixable errors
SPtr
-fmodules-prune-after=
TypeNonNull
-fno-global-isel
TypeNullUnspecified
68000
TypeNullable
__builtin_sve_reinterpret_f64_u32
TypeNullableResult
UPtr
XnuUsageSemantics
q2dq8h
M68000
m68010
FallThrough
q2dq4f
Likely
TYPE_TYPEOF
MustTail
-mabi=vec-default
OpenCLUnrollHint
Suppress
Unlikely
__builtin_sve_svget_neonq_s64
TYPE_ENUM
TYPE_OBJC_OBJECT_POINTER
AlwaysInline
__builtin_sve_svget_neonq_u16
AnalyzerSuppress
68010
NoInline
__builtin_sve_svget_neonq_u64
NoMerge
AArch64SVEPcs
AArch64VectorPcs
-fopenmp-offload-mandatory
M68010
m68020
AMDGPUKernelCall
__builtin_sve_svget_neonq_bf16
AcquireHandle
TYPE_ELABORATED
AnyX86NoCfCheck
__builtin_sve_svset_neonq_s16
CDecl
FastCall
IntelOclBicc
__builtin_sve_svset_neonq_s64
TYPE_UNRESOLVED_USING
TYPE_OBJC_OBJECT
LifetimeBound
-mabi=vec-extabi
MSABI
68020
ObjCOwnership
__builtin_sve_svset_neonq_u64
Pascal
PreserveAll
__builtin_sve_svset_neonq_f32
M68020
m68030
PreserveMost
__builtin_sve_svset_neonq_bf16
RegCall
TYPE_TEMPLATE_SPECIALIZATION
StdCall
Disables the global instruction selector
SwiftAsyncCall
SwiftCall
SysVABI
__builtin_sve_svdup_neonq_s64
TYPE_DEPENDENT_TEMPLATE_SPECIALIZATION
TYPE_PAREN
ThisCall
q8UsV8Us
VectorCall
68030
SwiftAsyncContext
q2UWiV2UWi
SwiftContext
SwiftErrorResult
SwiftIndirectResult
-mabi=
M68030
m68040
Annotate
q8yV8y
CFConsumed
TYPE_PACK_EXPANSION
CarriesDependency
vIUWiq16bq16bq4i
NSConsumed
NonNull
OSConsumed
vIUWiq16bq16bq2Wi
TYPE_SUBST_TEMPLATE_TYPE_PARM_PACK
TYPE_UNARY_TRANSFORM
PassObjectSize
-fopenmp-optimistic-collapse
ReleaseHandle
68040
UseHandle
__builtin_sme_svcntsd
HLSLSV_GroupIndex
AMDGPUFlatWorkGroupSize
AMDGPUNumSGPR
vIUWiUiIUWiq16bvC*Wi
M68040
m68060
AMDGPUNumVGPR
__builtin_sme_svld1_hor_vnum_za8
AMDGPUWavesPerEU
TYPE_DECAYED
ARMInterrupt
Enable SVR4-style position-independent code (Mips only)
AVRInterrupt
AVRSignal
AcquireCapability
__builtin_sme_svld1_ver_vnum_za16
TYPE_OBJC_TYPE_PARAM
DECL_ENUM
AcquiredAfter
__builtin_sme_svld1_ver_za128
AcquiredBefore
68060
AlignMac68k
__builtin_sme_svld1_ver_za8
AlignNatural
Specify the interval (in seconds) after which a module file will be considered unused
Aligned
-fno-gnu-inline-asm
AllocAlign
M68060
AllocSize
vUiIUWiq4dq2dIUWi
AlwaysDestroy
AnalyzerNoReturn
AnyX86Interrupt
vUiIUWiq8fq4f
-hard-float
+reserve-a0
AnyX86NoCallerSavedRegisters
vUiIUWiq4dq2d
ArcWeakrefUnavailable
DECL_ENUM_CONSTANT
ArgumentWithTypeTag
-Mach
ArmBuiltinAlias
ArmLocallyStreaming
Artificial
vUiIUWiq4dq4d
DECL_OBJC_METHOD
DECL_OBJC_PROTOCOL
AsmLabel
vUiIUWiq8yq8yIUWi
AssertCapability
+reserve-a1
AssertExclusiveLock
vUiIUWiq32yq8yIUWi
AssertSharedLock
AssumeAligned
BPFPreserveAccessIndex
-fopenmp-simd
+reserve-a2
+reserve-a3
Blocks
vUiIUWiq8sq8sIUWi
C11NoReturn
DECL_OBJC_AT_DEFS_FIELD
CFAuditedTransfer
vUiIUWiq32sq8sIUWi
CFGuard
CFICanonicalJumpTable
CFUnknownTransfer
vUiIUWiq16Usq8UsIUWi
DECL_OBJC_CATEGORY_IMPL
DECL_OBJC_COMPATIBLE_ALIAS
CPUDispatch
-maes
CPUSpecific
+reserve-a4
CUDAConstant
vUiIUWiq32yq8y
CUDADevice
CUDADeviceBuiltinSurfaceType
CUDADeviceBuiltinTextureType
vUiIUWiq16hq8h
+reserve-a5
+reserve-a6
CUDAGlobal
vUiIUWiq8sq8s
CUDAHost
DECL_OBJC_PROPERTY_IMPL
CUDAInvalidTarget
Disable GNU style inline asm
CUDALaunchBounds
CUDAShared
CXX11NoReturn
vUiIUWiq16Usq8Us
DECL_MS_PROPERTY
DECL_IMPLICIT_PARAM
CallableWhen
vUiIUWiq16yq16y
Callback
+reserve-d0
Capability
vUiIUWiq16hq16h
CapturedRecord
Cleanup
CmseNSEntry
Main file name to use for debug info and source if missing
+reserve-d1
+reserve-d2
CodeSeg
vUiIUWiq16Usq16Us
Cold
DECL_FILE_SCOPE_ASM
Common
__builtin_sme_svmls_lane_za32_f32_vg1x4
Const
ConstInit
Constructor
__builtin_sme_svmls_single_za32_f32_vg1x4
DECL_CONTEXT_LEXICAL
DECL_NAMESPACE
Consumable
-fopenmp-target-debug=
ConsumableAutoCast
+reserve-d3
ConsumableSetOnRead
__builtin_sme_svmlsl_lane_za32_bf16_vg2x2
Convergent
DLLExport
DLLExportStaticLocal
__builtin_sme_svmlsl_lane_za32_f16_vg2x4
+reserve-d4
+reserve-d5
DLLImport
__builtin_sme_svmlsl_lane_za32_u16_vg2x1
DLLImportStaticLocal
DECL_USING
DependerDecls
Return all structs in memory (PPC32 only)
Deprecated
Destructor
DiagnoseAsBuiltin
__builtin_sme_svmlsl_single_za32_f16_vg2x4
DECL_USING_DIRECTIVE
DECL_CXX_RECORD
DiagnoseIf
Set Fuchsia API level
DisableSanitizerInstrumentation
+reserve-d6
DisableTailCalls
Use the gnu89 inline semantics
EmptyBases
<seconds>
EnableIf
-fgeneric-block-helpers-use-extended-layout
EnforceTCB
+reserve-d7
EnforceTCBLeaf
Error
objc++-cpp-output
ExcludeFromExplicitInstantiation
ExclusiveTrylockFunction
mips32r2
ExternalSourceSymbol
Final
objective-c++
Flatten
Format
mips64r2
FormatArg
-analyzer-checker=
-fbuiltin
FunctionReturnThunks
renderscript
GNUInline
/fcgl
GuardedBy
mips32r6
GuardedVar
SmallVector unable to grow. Requested capacity (
HIPManaged
c-header-cpp-output
HLSLNumThreads
-fcheck-array-temporaries
HLSLResource
mips64r6
HLSLResourceBinding
atomic_write_error: 
HLSLShader
c-header
IBOutletCollection
mips32
InitPriority
InternalLinkage
LTOVisibilityPublic
cl-header
wmain
LayoutVersion
Leaf
M68kInterrupt
mips3
mips2
Generate instrumented code to collect context sensitive execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
LockReturned
objective-c-header-cpp-output
objective-c-header
LocksExcluded
-fcas-path
MIGServerRoutine
-fcas-include-tree
MSAllocator
MSInheritance
MSNoVTable
-fcas-plugin-option
MSP430Interrupt
Used
ObjCNonLazyClass
MSStruct
c++-header-cpp-output
MSVtorDisp
redwood
MaxFieldAlignment
MayAlias
-fcaret-diagnostics-max-lines
MaybeUndef
 for appending!
MicroMips
Make the x9 register call-saved (AArch64 only)
MinSize
MinVectorWidth
-fno-devirtualize-speculatively
Mips16
MipsInterrupt
Make the x18 register call-saved (AArch64 only)
MipsLongCall
NSConsumesSelf
NSReturnsAutoreleased
c++-header-unit-header
-fcall-saved-x9
Naked
NoAlias
Unused
ObjCDirectMembers
-fcs-profile-generate=
-fdirectives-only
NoCommon
NoDebug
rocket-rv32
gfx701
NoDestroy
mips1
NoDuplicate
.mem
NoInstrumentFunction
FriendTemplate
UsingEnum
NoMicroMips
unknown
NoMips16
mips4
NoProfileFunction
Set endian conversion of data for unformatted files
NoRandomizeLayout
objective-c++-header-cpp-output
NoReturn
Try to cache full compilation job (-cc1). Ignored (for now) without -fcas-fs.
NoSanitize
mips5
-fc++-static-destructors
NoSplitStack
-fmodules-prune-interval=
NoStackProtector
-fcall-saved-x10
NoThreadSafetyAnalysis
mips32r3
NoThrow
-analyzer-config-help
-fapple-kext
NoUniqueAddress
c++-module
NoUwtable
<time since Epoch in seconds>
NotTailCalled
mips32r5
OMPAllocateDecl
loongarch32
OMPCaptureNoInit
c++-module-cpp-output
OMPDeclareTargetDecl
Label
OMPDeclareVariant
mips64
OMPThreadPrivateDecl
Set CPU for optimization without affecting instruction set
OSConsumesThis
OSReturnsNotRetained
Maximum nesting level for parentheses, brackets, and braces
OSReturnsRetained
mips64r3
OSReturnsRetainedOnNonZero
-fbracket-depth=
OSReturnsRetainedOnZero
assembler
ObjCBridge
Emit branch target identification instructions for indirect branch destinations
ObjCBridgeMutable
mips64r5
ObjCBridgeRelated
-fborland-extensions
ObjCCompleteDefinition
assembler-with-cpp
ObjCException
-fblocks
ObjCExplicitProtocolImpl
octeon
ObjCExternallyRetained
ObjCIndependentClass
f95-cpp-input
ObjCMethodFamily
ObjCProtocol
ObjCNSObject
p5600
ObjCPreciseLifetime
-fcreate-profile
ObjCRequiresPropertyDefs
java
ObjCRequiresSuper
Place each function's basic blocks in unique sections (ELF Only)
ObjCReturnsInnerPointer
ObjCRootClass
-fbacktrace
ObjCSubclassingRestricted
ObjCSuppressDirectProperty
Produced object files can use all ELF features supported by this binutils version and newer. If -fno-integrated-as is specified, the generated assembly will consider GNU as support. 'none' means that all ELF features can be used, regardless of binutils support. Defaults to 2.26.
OpenCLIntelReqdSubGroupSize
+noabicalls
OpenCLKernel
OptimizeNone
lto-ir
Override
Output assembly code file during compilation
Ownership
-noabicalls
Packed
hurd
ParamTypestate
lto-bc
PatchableFunctionEntry
VarTemplate
PointerAuthStruct
-long-calls
PragmaClangBSSSection
PragmaClangDataSection
ifs-cpp
PtGuardedBy
-fauto-profile
PtGuardedVar
-xgot
Pure
RISCVInterrupt
plist
-fasm
Allow variadic functions in CUDA device code.
-fcuda-include-gpubinary
-fdebug-info-for-profiling
-fdiscard-value-names
-fembed-bitcode=
-fembed-offload-object=
always,no-compact-unwind,default
-femulated-tls
ReadOnlyPlacement
+nan2008
Reinitializes
gnuabi64
ReleaseCapability
rewritten-objc
ReqdWorkGroupSize
ObjCTypeParam
UsingPack
RequiresCapability
-nan2008
Restrict
Retain
rewritten-legacy-objc
ReturnTypestate
Enable Apple gcc-compatible #pragma pack handling
ReturnsNonNull
+abs2008
ReturnsTwice
Force linking the clang builtins runtime library
SYCLKernel
Specify the interval (in seconds) between attempts to prune the module cache
SYCLSpecialClass
-fapply-global-visibility-to-externs
ScopedLockable
-abs2008
SelectAny
SetTypestate
Alias
Enable external API notes support
SpeculativeLoadHardening
single-float
StandaloneDebug
mipsr6
StrictFP
object
StrictGuardStackCheck
ConstructorUsingShadow
CXXDeductionGuide
Decomposition
SwiftAsync
mips16
SwiftAsyncError
SwiftAsyncName
treelang
SwiftAttr
-fapinotes-cache-path=
SwiftBridgedTypedef
micromips
SwiftError
-fansi-escape-codes
SwiftImportPropertyAsAccessors
image
SwiftNewType
Enable module-based external API notes support
SymbolMetadataFootnote
TLSModel
Enable crash diagnostic reporting (default)
Target
TargetClones
TestTypestate
dspr2
TransparentStepping
When to emit DWARF unwind (EH frame) info
TransparentUnion
HANGUL JUNGSEONG O-E
TrivialABI
Emit all declarations, even if unused
TryAcquireCapability
TypeTagForDatatype
Maximum depth of recursive constexpr function calls
TypeVisibility
dependencies
TypedMemory
Embed LLVM IR bitcode as data
Unavailable
-fp64
Uninitialized
-fcompile-resource=
UnsafeBufferUsage
Use Apple's kernel extensions ABI
+fpxx
UsingIfExists
Display the list of -analyzer-config options. These are meant for development purposes only!
-fclang-abi-compat=
<major>.<minor>,latest
Uuid
cuda-fatbin
VTablePointerAuthentication
Do not emit  debug info for defined but unused types
VecReturn
+nooddspreg
VecTypeHint
: Mismatched cache file version
WarnUnused
fatbin
WarnUnusedResult
WeakImport
+fp64
WeakRef
WebAssemblyExportName
hip-fatbin
WebAssemblyImportModule
-fdwarf-exceptions
WebAssemblyImportName
WorkGroupSizeHint
remap
X86ForceAlignArgPointer
IndirectField
XRayInstrument
XRayLogArgs
nomadd4
AArch64FarAddressSpace
Specify the socket path for connecting to a remote caching service
-fconstant-string-class
AbiTag
api-information
-fdump-record-layouts-complete
AlignValue
BuiltinAlias
-fdump-record-layouts-canonical
CalledOnce
json
IFunc
OMPDeclareReduction
OMPThreadPrivate
InitSeg
LoaderUninitialized
-fconstexpr-depth=
LoopHint
none
NoBuiltin
Enable '[[]]' attributes in all C and C++ language modes
OMPCaptureKind
virt
OMPDeclareSimdDecl
sifive-s21
OMPReferencedVar
-fmodules-search-all
ObjCBoxable
Embed LLVM bitcode
ObjCClassStub
ginv
ObjCDesignatedInitializer
ObjCDirect
hazard
ObjCNonRuntimeProtocol
hainan
gfx705
iceland
polaris10
ObjCRuntimeName
PragmaDetectMismatch
ObjCRuntimeVisible
The trap function specified by -ftrap-function never returns
ObjCSuppressDirect
+use-indirect-jump-hazard
OpenCLAccess
error parsing file '
Overloadable
StaticAssert
RenderScriptKernel
CRLF
SwiftVersioned
SwiftVersionedRemoval
Thread
*** Decl Stats:
Attr
Text
 Inherited
 Implicit
warning: 
TemplateArgument
 contains-errors
-fdiagnostics-show-category
 lvalue
 xvalue
Print source range spans in numeric form
 bitfield
-fxray-modes=
 objcproperty
 each (
 objcsubscript
 vectorcomponent
-fdiagnostics-parseable-fixits
 matrixcomponent
typed
LocInfo Type
<value>
 sugar
-fdiagnostics-hotness-threshold=
 dependent
 implicit
avx512ifma
 used
 referenced
 Friend decls, 
 invalid
 constexpr
-fconstexpr-backtrace-limit=
-fcoverage-prefix-map=
Put crash-report files in <dir>
Generate instrumented code to collect context sensitive execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
-fctor-dtor-return-this
Generate code for CUDA device
-fdebug-dump-parse-tree-no-sema
-fdefault-inline
-fdefault-integer-8
-fdelete-null-pointer-checks
Treat usage of null pointers as undefined behavior (default)
-fdepfile-entry=
Defines the __DEPRECATED macro
Set dep-scanner to produce the include tree
 consteval
arm64
 byref
-fdevirtualize-speculatively
 nested
<<<NULL>>> OMPClause
Clause
Share state based on the PID of the parent command if the name matches. See also -fdepscan-share-stop.
Allow aggressive, lossy floating-point optimizations
-ffine-grained-bitfield-accesses
Use separate accesses for consecutive bitfield runs with legal widths and alignments.
-ffinite-loops
-ffinite-math-only
Reserve the a0 register (M68k only)
Reserve the a2 register (M68k only)
 <implicit>
case 
core2
default
 selected
 Label decls, 
 ObjCImplementation decls, 
<<<NULL>>> Requirement
pwr3
TypeRequirement
-fcray-pointer
SimpleRequirement
Hostx64
CompoundRequirement
With -fdepscan, auto-detect the toolchain path on-disk and remap it to the given path (see -fdepscan-prefix-map=).
NestedRequirement
 noexcept
 satisfied
Search even non-imported modules to resolve references
 unsatisfied
<old>=<new>
None
7400
Indeterminate
Instrument function entry only, after inlining, without arguments to the instrumentation call
Int 
stdlib.h
Float 
Dump the pre-fir parse tree
FixedPoint 
Vector length=
elements
ComplexInt 
attribute
ComplexFloat 
7450
LValue <todo>
-fcompatibility-qualified-id-block-type-checking
Array size=
Tools
Struct
Parse templated function definitions at the end of the translation unit
fields
Union
VCToolsInstallDir
MemberPointer <todo>
-fdenormal-fp-math-f32=
AddrLabelDiff <todo>
<invalid sloc>
ilp32
Set the default double precision kind to an 8 byte wide type
8548
geode
PATH
<not a builtin command>
 VarTemplate decls, 
 ClassTemplatePartialSpecialization decls, 
 FPContractMode=
e500
 RoundingMath=
-fcrash-diagnostics=
 ConstRoundingMode=
x86ret
 SpecifiedExceptionMode=
 AllowFEnvAccess=
 AllowFPReassociate=
 NoHonorNaNs=
x86chk
 NoHonorInfs=
Allow __declspec as a keyword
 NoSignedZero=
 AllowReciprocal=
Frontend
 AllowApproxFunc=
amd64ret
 FPEvalMethod=
-fdebug-dump-pft
 Text="
ptwrite
 Name="
amd64chk
 RenderNormal
Dump provenance
 RenderBold
e500mc
 RenderMonospaced
[[deprecated]]
 RenderEmphasized
Host
 RenderAnchor
hip-cpp-output
 Arg[
e5500
cppm
 Attrs: 
 UsingDirective decls, 
Hostx86
 SelfClosing
power3
 explicitly
zicbop
 implicitly
 Param="
-ffast-math
 ParamIndex=
power4
 Position=<
-ffake-address-space-map
" CloseName="
STATISTICS:
 null
 ConstructorUsingShadow decls, 
 CXXDeductionGuide decls, 
 type
pwr4
 decl
 nullptr
<eof> parser at end of file
 integral 
-fexternal-blas
 using
power5
 template 
Allow using blocks with parameters of more specific type than the type system guarantees when a parameter is qualified id
 template expansion 
-fmodules-strict-context-hash
 expr
-ffixed-a3
 pack
pwr5
 has_init
macosx_app_extension
 has_var
: at annotation token
 has_else
Specify the type of metadata to emit for binary analysis sanitizers
 side_entry
power5x
 gnu_range
Emit PCs for code covered with binary analysis sanitizers
 adl
: unknown current parser token
 part_of_explicit_cast
 CXXConstructor decls, 
 non_odr_use_unevaluated
pwr5x
 non_odr_use_constant
Invalid kind, expected 'name', 'type', or 'encoding', found '
 non_odr_use_discarded
: current parser token '
-fexperimental-optimized-noescape
ADL) = '
power6
 empty
-fexperimental-optimized-argument-temporaries
 isFreeIvar
Unexpected token. Expected Block Entry or Block End.
 field 
pwr6
 result_dependent
-fexperimental-new-constant-interpreter
postfix
[:>:]]
prefix
Control whether unstable and experimental library features are enabled. This option enables various library features that are either experimental (also known as TSes), or have been but are not stable yet in the selected Standard Library implementation. It is not recommended to use this option in production code, since neither ABI nor API stability are guaranteed. This is intended to provide a preview of features that will ship in the future for experimentation purposes
 cannot overflow
power6x
' ComputeLHSTy=
-fexperimental-isel
 ComputeResultTy=
decltype
 this
 OMPCapturedExpr decls, 
 functional cast to 
pwr6x
 list
-fexcess-precision=
 elidable
 std::initializer_list
-fescaping-block-tail-calls
 zeroing
pwr7
 (CXXTemporary
-ferror-limit
 array
 extended by 
 EnumConstant decls, 
 MSGuid decls, 
 selector=
pwr8
 class=
<class name>
 super (instance)
enable_if
 super (class)
Reserve the x11 register (AArch64/RISC-V only)
 catch all
pwr9
 Kind=MethodRef Getter="
(null)
property
" Setter="
Enable C++ exceptions
 Kind=PropertyRef Property="
pwr10
 super
-fconstant-double-number-class=
 Messaging=
Getter&Setter
Enable fixed point types
Getter
future
Setter
weak_ordering
 Kind=ArraySubscript GetterForArray="
__declspec
 Kind=DictionarySubscript GetterForDictionary="
-ffixed-r9
" SetterForArray="
powerpc
" SetterForDictionary="
 begin 
 end 
-ffixed-d7
 step 
powerpc64
 lower
 upper
macos_app_extension
 <Unbind>
 PragmaComment decls, 
introduced in 
 <Bind>
ppc64
 written as lvalue reference
Place uninitialized global variables in a common block
 static
message
 altivec
-ffixed-d3
 altivec pixel
powerpc64le
 altivec bool
-fconstant-float-number-class=
 neon
Enable hashing of all compiler options that could impact the semantics of a module in an implicit build
 neon poly
-fencoding=
 fixed-length sve data vector
ppc64le
 fixed-length sve predicate vector
 noreturn
defined_in
 produces_result
-ffixed-a6
 regparm 
-mpower7
 trailing_return
 variadic
generated_declaration
 divergent
equals-sign
 add_lvalue_reference
-mpower8
 add_pointer
+experimental-
 add_rvalue_reference
VideoFullscreenInterfaceAVKit
 decay
Reserve the x18 register (AArch64/RISC-V only)
 make_signed
-mpower9
 make_unsigned
tigerlake
 remove_all_extents
enum 
 remove_const
-ffixed-x1
 remove_cv
-mpower10
 remove_cvref
tilde
 remove_extent
union
 remove_pointer
Reserve the x14 register (AArch64/RISC-V only)
 remove_reference_t
-many
 remove_restrict
REG_EBRACK
 underlying_type
Treat each comma separated argument in <arg> as a documentation comment block command
 index 
Change the C++ ABI to returning `this` pointer from constructors and non-deleting destructors. (No effect on Microsoft ABI)
 pack_index 
__interface
 decltype(auto)
-fdebug-dump-parse-tree
 undeduced
+secure-plt
 alias
 ineligible
 <<<NULL params x 
-fconstant-cfstrings
__interface 
_Atomic
type name
 __module_private__
-fconstant-dictionary-class=
 definition
+reserve-x8
 inline
Default DWARF version to use, if a -g option caused DWARF debug info to be produced
 virtual
 pure
_delete
const
 trivial
 not_selected
The compilation directory to embed in the debug info
 noexcept-unevaluated 
 "\$
 noexcept-uninstantiated 
concept 
 implicit-inline
 nrvo
 callinit
+reserve-x19
+reserve-x31
lp64
 mangling 
replacement
 tls
 listinit
 destroyed
+reserve-x29
 nothrow
Reserve the x9 register (AArch64/RISC-V only)
duplicated %s '%s'
 combiner
@interface 
 initializer
 typename
Use a const qualified type for string literals in C and ObjC
-fdata-sections
 omp_priv = 
-relax
 omp_priv ()
 C++
 none
 bounded
 copy
 Data
 FIQ
 SWI
 ABORT
 DT_Warning
 ArgDependent
 Closed
 SRV
 Sampler
Generate instrumented code to collect order file into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
-mcheck-zero-division
-mcldemote
-mclzero
Equivalent to -mcmodel=medium, compatible with RISC-V gcc.
 protected
__builtin_amdgcn_dispatch_ptr
 public
__builtin_amdgcn_kernarg_segment_ptr
 package
could not read module signature
vIiUi
__builtin_amdgcn_sched_barrier
fffbb*
ffffb
ffff
__builtin_amdgcn_rsq_clampf
__builtin_amdgcn_lerp
 covariant
 atomic
 strong
ilp32
lp64d
 contravariant
__builtin_amdgcn_workitem_id_y
*** Analysis Based Warnings Stats:
 required
__builtin_amdgcn_workgroup_size_y
 optional
 assign
 readwrite
 w/o CFGs).
 retain
 nonatomic
 CFG blocks built.
 weak
 direct
__builtin_amdgcn_s_sendmsg
 max CFG blocks per function.
-mclflushopt
 cbuffer
tonearestaway
ilp32e
rv32imafdc
 tbuffer
__builtin_amdgcn_ds_gws_barrier
 first 
 AddressDiscriminated
 Pointer
 UNDEF
 variables analyzed.
 average block visits per function.
 prev 
__builtin_amdgcn_fence
towardzero
 AAPCS
 AAPCS_VFP
 IRQ
 Generic
 Unknown
rv32e
rv64imafdc
tonearest
UZiUZiD*UZiUicC*
upward
 max variables per function.
downward
-foutput-class-dir=
 IsLiteralLabel
__builtin_amdgcn_ldexp
 Unavailable
fallthrough
 Strict
-foverride-record-layout=
 ByRef
-Av9a
[[clang::fallthrough]]
 Consumed
__builtin_amdgcn_classf
__builtin_amdgcn_ds_faddf
ff*3fIiIiIb
__builtin_amdgcn_ds_fminf
__builtin_amdgcn_ds_append
ii*3
__builtin_amdgcn_ds_consume
__builtin_amdgcn_alignbyte
__builtin_amdgcn_ubfe
__builtin_amdgcn_sbfe
__builtin_amdgcn_cvt_pkrtz
E2hff
__builtin_amdgcn_cvt_pknorm_i16
E2sff
E2Usff
__builtin_amdgcn_cvt_pk_i16
E2sii
E2UsUiUi
__builtin_amdgcn_cvt_pk_u8_f32
UifUiUi
__builtin_amdgcn_msad_u8
__builtin_amdgcn_sad_hi_u8
__builtin_amdgcn_sad_u16
__builtin_amdgcn_qsad_pk_u16_u8
WUiWUiUiWUi
__builtin_amdgcn_mqsad_pk_u16_u8
__builtin_amdgcn_mqsad_u32_u8
 Unconsumed
 SamplerKind
 TBuffer
 RTAccelerationStructure
V4UiWUiUiV4Ui
__builtin_amdgcn_s_dcache_inv_vol
ci-insts
__builtin_amdgcn_buffer_wbinvl1_vol
 FeedbackTexture2D
 FeedbackTexture2DArray
__builtin_amdgcn_ds_gws_sema_release_all
__builtin_amdgcn_is_shared
bvC*0
flat-address-space
__builtin_amdgcn_interp_p1_f16
ffUiUibUi
__builtin_amdgcn_interp_p2_f16
hffUiUibUi
__builtin_amdgcn_interp_p1
ffUiUiUi
__builtin_amdgcn_interp_p2
__builtin_amdgcn_interp_mov
fUiUiUiUi
__builtin_amdgcn_div_fixuph
__builtin_amdgcn_rcph
__builtin_amdgcn_sqrth
__builtin_amdgcn_rsqh
__builtin_amdgcn_cosh
__builtin_amdgcn_ldexph
__builtin_amdgcn_frexp_manth
__builtin_amdgcn_frexp_exph
__builtin_amdgcn_fracth
__builtin_amdgcn_classh
__builtin_amdgcn_s_memrealtime
s-memrealtime
__builtin_amdgcn_mov_dpp
__builtin_amdgcn_update_dpp
iiiIiIiIiIb
gfx8-insts
__builtin_amdgcn_perm
__builtin_amdgcn_fmed3h
gfx9-insts
__builtin_amdgcn_global_atomic_fadd_f64
dd*1d
gfx90a-insts
ff*1f
__builtin_amdgcn_global_atomic_fadd_v2f16
V2hV2h*1V2h
__builtin_amdgcn_global_atomic_fmax_f64
__builtin_amdgcn_flat_atomic_fadd_f64
dd*0d
__builtin_amdgcn_flat_atomic_fmax_f64
__builtin_amdgcn_ds_atomic_fadd_f64
dd*3d
__builtin_amdgcn_ds_atomic_fadd_f32
ff*3f
__builtin_amdgcn_flat_atomic_fadd_f32
ff*0f
__builtin_amdgcn_flat_atomic_fadd_v2f16
V2hV2h*0V2h
__builtin_amdgcn_flat_atomic_fadd_v2bf16
 Pixel
COMPLETION: 
 hw1
 OMPDefaultMemAlloc
 OMPLargeCapMemAlloc
Set output object file (with /c)
 OMPConstMemAlloc
-transactional-execution
 (requires fix-it:
 OMPCGroupMemAlloc
V2sV2s*0V2s
__builtin_amdgcn_global_atomic_fadd_v2bf16
V2sV2s*1V2s
__builtin_amdgcn_ds_atomic_fadd_v2bf16
__builtin_amdgcn_fdot2
fV2hV2hfIb
dot7-insts
__builtin_amdgcn_fdot2_f16_f16
hV2hV2hh
dot8-insts
__builtin_amdgcn_fdot2_bf16_bf16
__builtin_amdgcn_fdot2_f32_bf16
fV2sV2sfIb
__builtin_amdgcn_sdot2
dot2-insts
__builtin_amdgcn_udot2
UiV2UsV2UsUiIb
SiSiSiSiIb
dot1-insts
__builtin_amdgcn_udot4
UiUiUiUiIb
__builtin_amdgcn_sudot4
iIbiIbiiIb
__builtin_amdgcn_sdot8
__builtin_amdgcn_sudot8
__builtin_amdgcn_permlane16
UiUiUiUiUiIbIb
__builtin_amdgcn_permlanex16
__builtin_amdgcn_mov_dpp8
UiUiIUi
V4UiUifV4fV4fV4fV4Ui
__builtin_amdgcn_image_bvh_intersect_ray_h
V4UiUifV4fV4hV4hV4Ui
__builtin_amdgcn_image_bvh_intersect_ray_l
V4UiWUifV4fV4fV4fV4Ui
__builtin_amdgcn_image_bvh_intersect_ray_lh
V4UiWUifV4fV4hV4hV4Ui
 OMPPTeamMemAlloc
__builtin_amdgcn_wmma_f32_16x16x16_f16_w32
V8fV16hV16hV8f
gfx11-insts
__builtin_amdgcn_wmma_f32_16x16x16_bf16_w32
__builtin_amdgcn_wmma_f16_16x16x16_f16_w32
V16hV16hV16hV16hIb
__builtin_amdgcn_wmma_bf16_16x16x16_bf16_w32
__builtin_amdgcn_wmma_i32_16x16x16_iu8_w32
V8iIbV4iIbV4iV8iIb
__builtin_amdgcn_wmma_i32_16x16x16_iu4_w32
V8iIbV2iIbV2iV8iIb
__builtin_amdgcn_wmma_f32_16x16x16_f16_w64
V4fV16hV16hV4f
__builtin_amdgcn_wmma_f32_16x16x16_bf16_w64
 SwiftPrivate
/fp:except-
 ZeroResult
 NonZeroResult
V4fV16sV16sV4f
__builtin_amdgcn_wmma_f16_16x16x16_f16_w64
V8hV16hV16hV8hIb
__builtin_amdgcn_wmma_bf16_16x16x16_bf16_w64
 NK_Struct
mutable
 NK_Enum
V8sV16sV16sV8sIb
__builtin_amdgcn_wmma_i32_16x16x16_iu8_w64
V4iIbV4iIbV4iV4iIb
__builtin_amdgcn_wmma_i32_16x16x16_iu4_w64
__builtin_amdgcn_s_sendmsg_rtn
UiUIi
__builtin_amdgcn_s_sendmsg_rtnl
UWiUIi
__builtin_amdgcn_ds_bvh_stack_rtn
V2UiUiUiV4UiIi
__builtin_amdgcn_read_exec
__builtin_amdgcn_read_exec_hi
__builtin_amdgcn_endpgm
__builtin_r600_implicitarg_ptr
__builtin_r600_read_tgid_x
__builtin_r600_read_tgid_y
__builtin_r600_read_tgid_z
__builtin_r600_read_tidig_y
__builtin_r600_read_tidig_z
__builtin_r600_recipsqrt_ieee
__builtin_r600_recipsqrt_ieeef
__builtin_amdgcn_mfma_f32_32x32x1f32
V32fffV32fIiIiIi
mai-insts
V16fffV16fIiIiIi
__builtin_amdgcn_mfma_f32_4x4x1f32
V4fffV4fIiIiIi
__builtin_amdgcn_mfma_f32_16x16x4f32
__builtin_amdgcn_mfma_f32_32x32x4f16
V32fV4hV4hV32fIiIiIi
V16fV4hV4hV16fIiIiIi
__builtin_amdgcn_mfma_f32_4x4x4f16
V4fV4hV4hV4fIiIiIi
__builtin_amdgcn_mfma_f32_32x32x8f16
__builtin_amdgcn_mfma_f32_16x16x16f16
__builtin_amdgcn_mfma_i32_32x32x4i8
V32iiiV32iIiIiIi
V16iiiV16iIiIiIi
__builtin_amdgcn_mfma_i32_4x4x4i8
V4iiiV4iIiIiIi
__builtin_amdgcn_mfma_i32_16x16x16i8
__builtin_amdgcn_mfma_f32_32x32x2bf16
V32fV2sV2sV32fIiIiIi
 UsedGPR
__builtin_amdgcn_mfma_f32_16x16x2bf16
V16fV2sV2sV16fIiIiIi
__builtin_amdgcn_mfma_f32_4x4x2bf16
V4fV2sV2sV4fIiIiIi
__builtin_amdgcn_mfma_f32_32x32x4bf16
__builtin_amdgcn_mfma_f32_16x16x8bf16
__builtin_amdgcn_mfma_f32_32x32x4bf16_1k
V32fV4sV4sV32fIiIiIi
V16fV4sV4sV16fIiIiIi
__builtin_amdgcn_mfma_f32_4x4x4bf16_1k
V4fV4sV4sV4fIiIiIi
 UsedArg
wchar_t
 Used
/fp:fast
 AllGPRArg
penryn
char16_t
 All
__builtin_amdgcn_mfma_f32_32x32x8bf16_1k
__builtin_amdgcn_mfma_f32_16x16x16bf16_1k
__builtin_amdgcn_mfma_f64_16x16x4f64
V4dddV4dIiIiIi
ddddIiIiIi
__builtin_amdgcn_mfma_i32_16x16x32_i8
V4iWiWiV4iIiIiIi
__builtin_amdgcn_mfma_i32_32x32x16_i8
V16iWiWiV16iIiIiIi
__builtin_amdgcn_mfma_f32_16x16x8_xf32
V4fV2fV2fV4fIiIiIi
V16fV2fV2fV16fIiIiIi
__builtin_amdgcn_mfma_f32_16x16x32_bf8_bf8
V4fWiWiV4fIiIiIi
__builtin_amdgcn_mfma_f32_16x16x32_bf8_fp8
__builtin_amdgcn_mfma_f32_16x16x32_fp8_bf8
__builtin_amdgcn_mfma_f32_16x16x32_fp8_fp8
__builtin_amdgcn_mfma_f32_32x32x16_bf8_bf8
V16fWiWiV16fIiIiIi
__builtin_amdgcn_mfma_f32_32x32x16_bf8_fp8
__builtin_amdgcn_mfma_f32_32x32x16_fp8_bf8
__builtin_amdgcn_mfma_f32_32x32x16_fp8_fp8
__builtin_amdgcn_smfmac_f32_16x16x32_f16
V4fV4hV8hV4fiIiIi
__builtin_amdgcn_smfmac_f32_32x32x16_f16
__builtin_amdgcn_smfmac_f32_16x16x32_bf16
V4fV4sV8sV4fiIiIi
__builtin_amdgcn_smfmac_f32_32x32x16_bf16
__builtin_amdgcn_smfmac_i32_16x16x64_i8
V4iV2iV4iV4iiIiIi
__builtin_amdgcn_smfmac_i32_32x32x32_i8
__builtin_amdgcn_smfmac_f32_16x16x64_bf8_bf8
V4fV2iV4iV4fiIiIi
__builtin_amdgcn_smfmac_f32_16x16x64_bf8_fp8
__builtin_amdgcn_smfmac_f32_16x16x64_fp8_bf8
__builtin_amdgcn_smfmac_f32_16x16x64_fp8_fp8
__builtin_amdgcn_smfmac_f32_32x32x32_bf8_bf8
V16fV2iV4iV16fiIiIi
__builtin_amdgcn_smfmac_f32_32x32x32_fp8_bf8
__builtin_amdgcn_smfmac_f32_32x32x32_fp8_fp8
__builtin_amdgcn_cvt_f32_bf8
__builtin_amdgcn_cvt_pk_f32_bf8
V2fiIb
__builtin_amdgcn_cvt_pk_f32_fp8
iffiIb
__builtin_amdgcn_cvt_pk_fp8_f32
__builtin_amdgcn_cvt_sr_bf8_f32
ifiiIi
__builtin_amdgcn_cvt_sr_fp8_f32
 Vectorize
_Bool
DefinitionData
/fp:strict
 parsing_base_specifiers
-rdrnd
 lambda
 is_anonymous
_Decimal64
 pass_in_registers
v100
v102
v103
v104
 aggregate
__auto_type
 simple
CopyAssignment
__add_pointer
MoveAssignment
-fpack-struct=
 irrelevant
+retpoline-indirect-calls
__decay
constructed 
v105
v106
v107
v108
v110
v111
v112
v113
v114
v115
v116
v118
v119
v120
v122
v123
v124
v126
v127
v128
v129
v130
v131
v132
v134
v135
v136
v138
v139
v140
v142
v143
v144
v145
v146
v147
v148
typename
v149
v150
v151
v152
v154
v155
v156
v158
v159
v160
v161
v162
v163
v164
DependentAddressSpace
-fpack-struct
DynamicCountPointer
+harden-sls-ijmp
DynamicRangePointer
v165
v166
v167
v168
Elaborated
image1d_t
FunctionNoProto
v169
v170
v171
v172
v174
v175
v176
v177
v178
v179
v180
v182
v183
v184
v186
v187
v188
v190
v191
v192
v193
v194
v195
v196
v198
v199
v200
v202
v203
v204
v206
v207
v208
v209
v210
v211
v212
v214
v215
v216
v218
v219
v220
UnaryTransform
v221
v222
v223
v224
v225
v226
v227
v228
v230
v231
v232
UnresolvedUsing
consteval
Using
Force each unsigned fixed point type to have an extra bit of padding to align their scales with those of signed fixed point types
ValueTerminated
-bnoentry
__unaligned
long long
v233
v234
v235
v236
v238
v239
v240
v241
v242
v243
v244
v246
v247
v248
v250
v251
v252
v253
v254
v255
s100
unsigned char
-bpT:0x10000000
_Accum
-fident
long _Accum
crti.o
_Sat unsigned short _Fract
s101
s102
s103
s104
_Sat unsigned _Fract
final
_Sat unsigned long _Fract
s105
s106
s107
s108
s110
s111
s112
s113
s114
s115
s116
s118
s119
s120
s122
s123
s124
__wchar_t
/llvm-nm
__read_only image1d_t
s125
s126
s127
exec
flat_scratch
exec_hi
vcc_lo
vcc_hi
flat_scratch_hi
__read_only image1d_array_t
element
__read_only image1d_buffer_t
-fno-implicit-modules
__write_only image2d_msaa_depth_t
aarch64_sve_pcs
__write_only image2d_array_msaa_depth_t
__write_only image3d_t
-lpthreads
__read_write image1d_t
__read_write image2d_msaa_t
__read_write image2d_array_msaa_t
a100
a101
__read_write image2d_msaa_depth_t
-fmodules-validate-input-files-content
__read_write image2d_array_msaa_depth_t
-fno-implicit-none
__read_write image3d_t
ppc_wrappers
a102
a103
a104
a105
a107
a108
a109
a110
a111
a112
a113
a115
a116
a117
spir_function
-D__LIBC_NO_CPP_MATH_OVERLOADS__
opencl_kernel
swiftasynccall
-mdynamic-no-pic
preserve_most
linking libstdc++ unimplemented on AIX
signal
NSCopying
a118
a119
a120
a121
a123
a124
a125
a126
a127
a128
a129
a131
a132
a133
a135
a136
a137
a139
a140
a141
a142
a143
a144
a145
a147
a148
a149
a150
a151
a152
a153
a155
a156
a157
a158
a159
a160
a161
 __attribute__((nothrow))
crt0.o
__ptr64
a162
a163
a164
a165
__attribute__((address_space(
clang::address_space
a166
a167
a168
a169
NULL TYPE
crt0_64.o
_Atomic(
a170
a171
a172
a173
a174
a175
a176
a177
a179
a180
a181
a183
a184
a185
a186
a187
a188
a189
a190
a191
a192
a193
a195
a196
a197
a199
a200
a201
a203
a204
a205
a206
a207
a208
a209
a211
a212
a213
a215
a216
a217
 btf_type_tag(
alias
unsigned 
assembler
__vector 
Apply fix-it advice to the input source
__attribute__((neon_vector_type(
Validate PCM input files based on content if mtime differs
))) 
-fno-in-descriptor-block-flags
__attribute__((neon_polyvector_type(
aix::Linker
a218
a219
a220
a221
a222
a223
a224
a225
a227
a228
a229
read_only 
alloc_size
write_only 
Generate M NOPs before function entry
pipe 
-export-dynamic
ElemSizeParam
__indexable
a230
a231
a232
a233
a235
a236
a237
a238
a239
a240
a241
a242
a243
a244
a245
a247
a248
a249
a251
a252
a253
a254
a255
dot5-insts
dot6-insts
__bidi_indexable
lambda
always_destroy
anonymous
-mefpu2
crtbeginS.o
__counted_by(
dl-insts
gfx10-3-insts
dot3-insts
dot4-insts
 [[clang::lifetimebound]]
analyzer_noreturn
 [[clang::annotate_type(...)]]
e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7
e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1
__AMD__
__AMDGPU__
 __attribute__((
crtbegin.o
pcs(
__AMDGCN__
__R600__
__amdgcn_processor__
__amdgcn_target_id__
__amdgcn_feature_
__AMDGCN_UNSAFE_FP_ATOMICS__
__HAS_FMAF__
FP_FAST_FMAF
__HAS_LDEXPF__
__HAS_FP64__
FP_FAST_FMA
__AMDGCN_WAVEFRONT_SIZE
tma_lo
tma_hi
tba_lo
tba_hi
"aapcs"
clang::analyzer_suppress
"aapcs-vfp"
Place constants in the .rodata section instead of the .sdata section even if they meet the -G <size> threshold (MIPS)
inteloclbicc
crtendS.o
 __attribute__((address_space(
Sets various macros to claim compatibility with the given GCC version (default is 4.2.1)
 __attribute__((ext_vector_type(
-fignore-exceptions
 __attribute__((stdcall))
 __attribute__((fastcall))
crtend.o
 __attribute__((thiscall))
-fpatchable-function-entry=
 __attribute__((vectorcall))
__arc__
 __attribute__((pascal))
no_caller_saved_registers
E-m:o-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
e-m:o-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
 __attribute__((pcs("aapcs-vfp")))
__attribute__((aarch64_vector_pcs))
gnu::no_caller_saved_registers
__attribute__((aarch64_sve_pcs))
e-m:o-p:32:32-Fi8-i64:64-a:0:32-n32-S128
__attribute__((amdgpu_kernel))
ananas::Assembler
 __attribute__((intel_ocl_bicc))
e-m:e-p:32:32-Fi8-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
 __attribute__((ms_abi))
gnu::nocf_check
 __attribute__((sysv_abi))
Enable use of experimental RISC-V extensions.
 __attribute__((regcall))
ananas::Linker
 __attribute__((swiftcall))
__attribute__((swiftasynccall))
clang::objc_arc_weak_reference_unavailable
 __attribute__((preserve_most))
8_3A
 __attribute__((preserve_all))
 __attribute__((noreturn))
8_7A
 __attribute__((cmse_nonsecure_call))
clang::pointer_with_type_tag
 __attribute__((ns_returns_retained))
Generate M NOPs before function entry and N-M NOPs after function entry
 __attribute__((regparm (
 __attribute__((no_caller_saved_registers))
8_1M_MAIN
 __attribute__((nocf_check))
ArgumentIdx
__attribute__((ns_consumed)) 
llvm.arm.gnu.eabi.mcount
__attribute__((noescape)) 
 not found at 
+vfp4
clang::__clang_arm_mve_strict_polymorphism
arm_sve_vector_bits
<N,M>
VFTable indices for 
 due to multiple installations for the same version
 entry
__ARM_ARCH_
 -- accessible via 
vbtable index 
vbase_offset (
 RTTI
 [deleted]
       [return adjustment: 
 non-virtual
() [complete]
[unused] 
__THUMB_INTERWORK__
__ARM_ARCH_EXT_IDIV__
__ARM_FEATURE_SAT
__builtin_arm_smulbb
__builtin_arm_smulwb
__builtin_arm_smlawb
__builtin_arm_sxtab16
vfptr at offset 
Vtable for '
 entries).
arm_streaming
artificial
Allow optimization to assume there are no NaNs.
Original map
%4d | 
offset_to_top (
() [deleting]
__THUMBEL__
) vtable address --
Override the default ABI to return all structs on the stack
Virtual base offset offsets for '
Found HIP installation: 
Thunks for '
__builtin_arm_shadd8
return adjustment: 
clang::availability
       
this adjustment: 
__builtin_arm_uhadd8
Unexpected vftable component type %0 for component number %1
__builtin_arm_sasx
__builtin_arm_usax
__builtin_arm_usub16
__builtin_arm_smlad
__builtin_arm_smlald
LLiiiLLi
__builtin_arm_smlaldx
__builtin_arm_smlsdx
__builtin_arm_smlsld
__builtin_arm_smlsldx
__builtin_arm_smuad
__builtin_arm_smuadx
__builtin_arm_smusd
__builtin_arm_smusdx
LLUiv*
__builtin_arm_strexd
iLLUiv*
__builtin_arm_set_fpscr
__builtin_arm_vcvtr_f
__builtin_arm_vcvtr_d
__builtin_arm_ldc
vUIiUIivC*
__builtin_arm_ldcl
__builtin_arm_ldc2
__builtin_arm_ldc2l
__builtin_arm_stc
vUIiUIiv*
__builtin_arm_stc2
__builtin_arm_stc2l
__builtin_arm_cdp
__builtin_arm_cdp2
__builtin_arm_mcr
vUIiUIiUiUIiUIiUIi
__builtin_arm_mrc
UiUIiUIiUIiUIiUIi
__builtin_arm_mrc2
__builtin_arm_mcrr
vUIiUIiLLUiUIi
__builtin_arm_mcrr2
__builtin_arm_mrrc
__builtin_arm_mrrc2
UiUiLLUi
__builtin_arm_cmse_TT
' in 
btf_decl_tag
[return adjustment (to type '
vbptr at 
clang::btf_type_tag
 to the left,
end do simd
clang::guard
end sections
Uiv*
__builtin_arm_cmse_TTT
__builtin_arm_cmse_TTA
__builtin_arm_cmse_TTAT
vvC*UiUi
LLUicC*
vcC*LLUi
__builtin_arm_mve_asrl
__builtin_arm_mve_lsll
__builtin_arm_mve_sqrshr
__builtin_arm_mve_sqrshrl
-fno-inline-limit
masked taskloop
amdgpu::Linker
masked taskloop simd
__builtin_arm_mve_sqrshrl_sat48
__builtin_arm_mve_sqshl
__builtin_arm_mve_sqshll
__builtin_arm_mve_srshr
__builtin_arm_mve_uqrshl
__builtin_arm_mve_uqrshll
__builtin_arm_mve_uqrshll_sat48
__builtin_arm_mve_uqshll
__builtin_arm_mve_urshr
__builtin_arm_mve_urshrl
__builtin_arm_mve_vabavq_p_s16
__builtin_arm_mve_vabavq_p_s32
__builtin_arm_mve_vabavq_p_s8
__builtin_arm_mve_vabavq_p_u16
/../bin
parallel do simd
__builtin_arm_mve_vabavq_p_u32
__builtin_arm_mve_vabavq_p_u8
__builtin_arm_mve_vabavq_s16
__builtin_arm_mve_vabavq_s32
__builtin_arm_mve_vabavq_u16
__builtin_arm_mve_vabavq_u32
__builtin_arm_mve_vabavq_u8
__builtin_arm_mve_vabdq_f32
__builtin_arm_mve_vabdq_m_f16
__builtin_arm_mve_vabdq_m_f32
__builtin_arm_mve_vabdq_m_s16
__builtin_arm_mve_vabdq_m_s32
__builtin_arm_mve_vabdq_m_s8
__builtin_arm_mve_vabdq_m_u16
__builtin_arm_mve_vabdq_m_u8
__builtin_arm_mve_vabdq_s16
__builtin_arm_mve_vabdq_s32
__builtin_arm_mve_vabdq_u16
__builtin_arm_mve_vabdq_u32
__builtin_arm_mve_vabdq_u8
__builtin_arm_mve_vabdq_x_f32
__builtin_arm_mve_vabdq_x_s16
__builtin_arm_mve_vabdq_x_s32
__builtin_arm_mve_vabdq_x_s8
__builtin_arm_mve_vabdq_x_u16
__builtin_arm_mve_vabdq_x_u32
__builtin_arm_mve_vabdq_x_u8
__builtin_arm_mve_vabsq_f32
__builtin_arm_mve_vabsq_m_f16
__builtin_arm_mve_vabsq_m_f32
__builtin_arm_mve_vabsq_m_s32
__builtin_arm_mve_vabsq_m_s8
__builtin_arm_mve_vabsq_s16
__builtin_arm_mve_vabsq_s8
__builtin_arm_mve_vabsq_x_f16
__builtin_arm_mve_vabsq_x_f32
__builtin_arm_mve_vabsq_x_s16
__builtin_arm_mve_vabsq_x_s32
__builtin_arm_mve_vabsq_x_s8
__builtin_arm_mve_vadciq_m_s32
__builtin_arm_mve_vadciq_s32
__builtin_arm_mve_vadciq_u32
__builtin_arm_mve_vadcq_m_s32
__builtin_arm_mve_vadcq_s32
__builtin_arm_mve_vadcq_u32
__builtin_arm_mve_vaddlvaq_p_s32
parallel for
cf_unknown_transfer
parallel for simd
__builtin_arm_mve_vaddlvaq_p_u32
__builtin_arm_mve_vaddlvaq_s32
__builtin_arm_mve_vaddlvaq_u32
__builtin_arm_mve_vaddlvq_p_s32
__builtin_arm_mve_vaddlvq_p_u32
__builtin_arm_mve_vaddlvq_s32
__builtin_arm_mve_vaddlvq_u32
__builtin_arm_mve_vaddq_f16
target update
host
task
-mfancy-math-387
__builtin_arm_mve_vaddq_f32
__builtin_arm_mve_vaddq_m_f16
__builtin_arm_mve_vaddq_m_f32
__builtin_arm_mve_vaddq_m_n_f16
__builtin_arm_mve_vaddq_m_n_s16
__builtin_arm_mve_vaddq_m_n_s32
__builtin_arm_mve_vaddq_m_n_s8
__builtin_arm_mve_vaddq_m_n_u32
__builtin_arm_mve_vaddq_m_n_u8
__builtin_arm_mve_vaddq_m_s16
__builtin_arm_mve_vaddq_m_s32
__builtin_arm_mve_vaddq_m_s8
__builtin_arm_mve_vaddq_m_u16
__builtin_arm_mve_vaddq_m_u32
taskloop simd
launch_bounds
taskwait
teams distribute parallel for
__builtin_arm_mve_vaddq_m_u8
__builtin_arm_mve_vaddq_n_f16
__builtin_arm_mve_vaddq_n_f32
__builtin_arm_mve_vaddq_n_s16
__builtin_arm_mve_vaddq_n_s8
__builtin_arm_mve_vaddq_n_u16
__builtin_arm_mve_vaddq_n_u32
__builtin_arm_mve_vaddq_s16
__builtin_arm_mve_vaddq_s32
__builtin_arm_mve_vaddq_s8
__builtin_arm_mve_vaddq_u16
__builtin_arm_mve_vaddq_u32
__builtin_arm_mve_vaddq_u8
__builtin_arm_mve_vaddq_x_f16
__builtin_arm_mve_vaddq_x_n_f16
__builtin_arm_mve_vaddq_x_n_f32
__builtin_arm_mve_vaddq_x_n_s16
__builtin_arm_mve_vaddq_x_n_s8
__builtin_arm_mve_vaddq_x_n_u16
__builtin_arm_mve_vaddq_x_n_u32
__builtin_arm_mve_vaddq_x_s16
__builtin_arm_mve_vaddq_x_s32
__builtin_arm_mve_vaddq_x_s8
__builtin_arm_mve_vaddq_x_u16
__builtin_arm_mve_vaddq_x_u32
__builtin_arm_mve_vaddq_x_u8
__builtin_arm_mve_vaddvaq_p_s16
__builtin_arm_mve_vaddvaq_p_s8
__builtin_arm_mve_vaddvaq_p_u16
__builtin_arm_mve_vaddvaq_p_u32
__builtin_arm_mve_vaddvaq_s16
__builtin_arm_mve_vaddvaq_s32
__builtin_arm_mve_vaddvaq_s8
__builtin_arm_mve_vaddvaq_u32
__builtin_arm_mve_vaddvaq_u8
__builtin_arm_mve_vaddvq_p_s16
__builtin_arm_mve_vaddvq_p_s32
__builtin_arm_mve_vaddvq_p_s8
__builtin_arm_mve_vaddvq_p_u16
__builtin_arm_mve_vaddvq_p_u32
__builtin_arm_mve_vaddvq_s16
__builtin_arm_mve_vaddvq_s32
__builtin_arm_mve_vaddvq_s8
__builtin_arm_mve_vaddvq_u32
__builtin_arm_mve_vaddvq_u8
__builtin_arm_mve_vandq_f16
__builtin_arm_mve_vandq_m_f16
__builtin_arm_mve_vandq_m_f32
__builtin_arm_mve_vandq_m_s16
__builtin_arm_mve_vandq_m_s32
__builtin_arm_mve_vandq_m_s8
__builtin_arm_mve_vandq_m_u16
__builtin_arm_mve_vandq_m_u32
teams distribute parallel for simd
__shared__
attiny11
filter
__builtin_arm_mve_vandq_m_u8
__builtin_arm_mve_vandq_s16
__builtin_arm_mve_vandq_s32
__builtin_arm_mve_vandq_s8
firstprivate
gnu::cleanup
from
__builtin_arm_mve_vandq_u16
__builtin_arm_mve_vandq_u32
__builtin_arm_mve_vandq_u8
__builtin_arm_mve_vandq_x_f16
__builtin_arm_mve_vandq_x_s16
__builtin_arm_mve_vandq_x_s32
__builtin_arm_mve_vandq_x_s8
__builtin_arm_mve_vandq_x_u16
__builtin_arm_mve_vandq_x_u32
__builtin_arm_mve_vandq_x_u8
__builtin_arm_mve_vbicq_f16
-mfix-cortex-a53-835769
inbranch
attiny15
inclusive
__builtin_arm_mve_vbicq_f32
__builtin_arm_mve_vbicq_m_f16
__builtin_arm_mve_vbicq_m_f32
__builtin_arm_mve_vbicq_m_n_s16
__builtin_arm_mve_vbicq_m_n_u16
__builtin_arm_mve_vbicq_m_n_u32
__builtin_arm_mve_vbicq_m_s16
__builtin_arm_mve_vbicq_m_s32
__builtin_arm_mve_vbicq_m_s8
__builtin_arm_mve_vbicq_m_u16
__builtin_arm_mve_vbicq_m_u32
__builtin_arm_mve_vbicq_m_u8
__builtin_arm_mve_vbicq_n_s16
__builtin_arm_mve_vbicq_n_s32
__builtin_arm_mve_vbicq_n_u16
__builtin_arm_mve_vbicq_s16
__builtin_arm_mve_vbicq_s32
__builtin_arm_mve_vbicq_s8
__builtin_arm_mve_vbicq_u32
__builtin_arm_mve_vbicq_u8
__builtin_arm_mve_vbicq_x_f16
__builtin_arm_mve_vbicq_x_s16
__builtin_arm_mve_vbicq_x_s32
__builtin_arm_mve_vbicq_x_s8
__builtin_arm_mve_vbicq_x_u16
__builtin_arm_mve_vbicq_x_u32
__builtin_arm_mve_vbicq_x_u8
__builtin_arm_mve_vbrsrq_m_n_f16
__builtin_arm_mve_vbrsrq_m_n_s16
__builtin_arm_mve_vbrsrq_m_n_s32
__builtin_arm_mve_vbrsrq_m_n_s8
__builtin_arm_mve_vbrsrq_m_n_u32
__builtin_arm_mve_vbrsrq_m_n_u8
__builtin_arm_mve_vbrsrq_n_f16
__builtin_arm_mve_vbrsrq_n_s16
__builtin_arm_mve_vbrsrq_n_s32
__builtin_arm_mve_vbrsrq_n_s8
__builtin_arm_mve_vbrsrq_n_u16
__builtin_arm_mve_vbrsrq_n_u32
__builtin_arm_mve_vbrsrq_n_u8
__builtin_arm_mve_vbrsrq_x_n_f16
__builtin_arm_mve_vbrsrq_x_n_s16
__builtin_arm_mve_vbrsrq_x_n_s32
__builtin_arm_mve_vbrsrq_x_n_s8
__builtin_arm_mve_vbrsrq_x_n_u32
__builtin_arm_mve_vbrsrq_x_n_u8
__builtin_arm_mve_vcaddq_rot270_f16
__builtin_arm_mve_vcaddq_rot270_m_f16
__builtin_arm_mve_vcaddq_rot270_m_f32
__builtin_arm_mve_vcaddq_rot270_m_s16
__builtin_arm_mve_vcaddq_rot270_m_s32
__builtin_arm_mve_vcaddq_rot270_m_s8
__builtin_arm_mve_vcaddq_rot270_m_u16
__builtin_arm_mve_vcaddq_rot270_m_u32
__builtin_arm_mve_vcaddq_rot270_s16
__builtin_arm_mve_vcaddq_rot270_s32
__builtin_arm_mve_vcaddq_rot270_s8
__builtin_arm_mve_vcaddq_rot270_u32
__builtin_arm_mve_vcaddq_rot270_u8
__builtin_arm_mve_vcaddq_rot270_x_f16
is_device_ptr
code_seg
lastprivate
match
attiny22
aarch64
__builtin_arm_mve_vcaddq_rot270_x_f32
__builtin_arm_mve_vcaddq_rot270_x_s16
__builtin_arm_mve_vcaddq_rot270_x_s32
__builtin_arm_mve_vcaddq_rot270_x_s8
__builtin_arm_mve_vcaddq_rot270_x_u16
__builtin_arm_mve_vcaddq_rot270_x_u32
__builtin_arm_mve_vcaddq_rot270_x_u8
__builtin_arm_mve_vcaddq_rot90_f16
aarch64_be
convergent
aarch64_32
-fno-integrated-as
attiny26
ppcle
__builtin_arm_mve_vcaddq_rot90_f32
__builtin_arm_mve_vcaddq_rot90_m_f16
__builtin_arm_mve_vcaddq_rot90_m_f32
__builtin_arm_mve_vcaddq_rot90_m_s16
__builtin_arm_mve_vcaddq_rot90_m_s32
__builtin_arm_mve_vcaddq_rot90_m_s8
__builtin_arm_mve_vcaddq_rot90_m_u16
__builtin_arm_mve_vcaddq_rot90_m_u32
__builtin_arm_mve_vcaddq_rot90_s16
__builtin_arm_mve_vcaddq_rot90_s32
__builtin_arm_mve_vcaddq_rot90_s8
__builtin_arm_mve_vcaddq_rot90_u16
__builtin_arm_mve_vcaddq_rot90_u32
__builtin_arm_mve_vcaddq_rot90_u8
__builtin_arm_mve_vcaddq_rot90_x_f16
__builtin_arm_mve_vcaddq_rot90_x_s16
__builtin_arm_mve_vcaddq_rot90_x_s32
__builtin_arm_mve_vcaddq_rot90_x_s8
__builtin_arm_mve_vcaddq_rot90_x_u32
__builtin_arm_mve_vcaddq_rot90_x_u8
__builtin_arm_mve_vclsq_m_s16
__builtin_arm_mve_vclsq_m_s8
__builtin_arm_mve_vclsq_s16
__builtin_arm_mve_vclsq_s32
__builtin_arm_mve_vclsq_s8
__builtin_arm_mve_vclsq_x_s16
__builtin_arm_mve_vclsq_x_s32
__builtin_arm_mve_vclsq_x_s8
__builtin_arm_mve_vclzq_m_s32
__builtin_arm_mve_vclzq_m_s8
__builtin_arm_mve_vclzq_m_u16
__builtin_arm_mve_vclzq_m_u8
__builtin_arm_mve_vclzq_s16
__builtin_arm_mve_vclzq_s32
__builtin_arm_mve_vclzq_u16
__builtin_arm_mve_vclzq_u32
__builtin_arm_mve_vclzq_u8
__builtin_arm_mve_vclzq_x_s16
__builtin_arm_mve_vclzq_x_s32
__builtin_arm_mve_vclzq_x_s8
__builtin_arm_mve_vclzq_x_u16
__builtin_arm_mve_vclzq_x_u8
__builtin_arm_mve_vcmlaq_f16
__builtin_arm_mve_vcmlaq_f32
__builtin_arm_mve_vcmlaq_m_f32
__builtin_arm_mve_vcmlaq_rot180_f16
__builtin_arm_mve_vcmlaq_rot180_f32
__builtin_arm_mve_vcmlaq_rot180_m_f32
__builtin_arm_mve_vcmlaq_rot270_f16
__builtin_arm_mve_vcmlaq_rot270_f32
__builtin_arm_mve_vcmlaq_rot270_m_f16
__builtin_arm_mve_vcmlaq_rot270_m_f32
__builtin_arm_mve_vcmlaq_rot90_f16
__builtin_arm_mve_vcmlaq_rot90_f32
__builtin_arm_mve_vcmlaq_rot90_m_f32
__builtin_arm_mve_vcmpcsq_m_n_u16
__builtin_arm_mve_vcmpcsq_m_n_u32
__builtin_arm_mve_vcmpcsq_m_u16
__builtin_arm_mve_vcmpcsq_m_u32
__builtin_arm_mve_vcmpcsq_m_u8
__builtin_arm_mve_vcmpcsq_n_u32
__builtin_arm_mve_vcmpcsq_n_u8
__builtin_arm_mve_vcmpcsq_u16
__builtin_arm_mve_vcmpcsq_u32
__builtin_arm_mve_vcmpcsq_u8
__builtin_arm_mve_vcmpeqq_f16
__builtin_arm_mve_vcmpeqq_f32
at90s4414
amdgcn
cray
disable_sanitizer_instrumentation
fujitsu
The float ABI to use
attiny2313
__builtin_arm_mve_vcmpeqq_m_f16
__builtin_arm_mve_vcmpeqq_m_f32
__builtin_arm_mve_vcmpeqq_m_n_f16
__builtin_arm_mve_vcmpeqq_m_n_f32
intel
disable_tail_calls
llvm
__builtin_arm_mve_vcmpeqq_m_n_s16
__builtin_arm_mve_vcmpeqq_m_n_s32
__builtin_arm_mve_vcmpeqq_m_n_s8
__builtin_arm_mve_vcmpeqq_m_n_u16
__builtin_arm_mve_vcmpeqq_m_n_u8
__builtin_arm_mve_vcmpeqq_m_s16
__builtin_arm_mve_vcmpeqq_m_s32
__builtin_arm_mve_vcmpeqq_m_s8
__builtin_arm_mve_vcmpeqq_m_u16
__builtin_arm_mve_vcmpeqq_m_u32
__builtin_arm_mve_vcmpeqq_m_u8
__builtin_arm_mve_vcmpeqq_n_f32
__builtin_arm_mve_vcmpeqq_n_s16
__builtin_arm_mve_vcmpeqq_n_s32
__builtin_arm_mve_vcmpeqq_n_u16
__builtin_arm_mve_vcmpeqq_n_u32
__builtin_arm_mve_vcmpeqq_n_u8
__builtin_arm_mve_vcmpeqq_s32
__builtin_arm_mve_vcmpeqq_s8
__builtin_arm_mve_vcmpeqq_u16
__builtin_arm_mve_vcmpeqq_u32
__builtin_arm_mve_vcmpeqq_u8
__builtin_arm_mve_vcmpgeq_f16
__builtin_arm_mve_vcmpgeq_f32
__builtin_arm_mve_vcmpgeq_m_f32
__builtin_arm_mve_vcmpgeq_m_n_f16
__builtin_arm_mve_vcmpgeq_m_n_f32
__builtin_arm_mve_vcmpgeq_m_n_s32
__builtin_arm_mve_vcmpgeq_m_n_s8
__builtin_arm_mve_vcmpgeq_m_s16
__builtin_arm_mve_vcmpgeq_m_s8
__builtin_arm_mve_vcmpgeq_n_f16
__builtin_arm_mve_vcmpgeq_n_f32
__builtin_arm_mve_vcmpgeq_n_s16
__builtin_arm_mve_vcmpgeq_n_s32
__builtin_arm_mve_vcmpgeq_n_s8
__builtin_arm_mve_vcmpgeq_s16
__builtin_arm_mve_vcmpgeq_s8
__builtin_arm_mve_vcmpgtq_f16
__builtin_arm_mve_vcmpgtq_f32
__builtin_arm_mve_vcmpgtq_m_f32
__builtin_arm_mve_vcmpgtq_m_n_f16
__builtin_arm_mve_vcmpgtq_m_n_f32
__builtin_arm_mve_vcmpgtq_m_n_s32
__builtin_arm_mve_vcmpgtq_m_n_s8
__builtin_arm_mve_vcmpgtq_m_s16
__builtin_arm_mve_vcmpgtq_m_s32
__builtin_arm_mve_vcmpgtq_m_s8
__builtin_arm_mve_vcmpgtq_n_f16
__builtin_arm_mve_vcmpgtq_n_f32
__builtin_arm_mve_vcmpgtq_n_s32
__builtin_arm_mve_vcmpgtq_n_s8
__builtin_arm_mve_vcmpgtq_s16
__builtin_arm_mve_vcmpgtq_s8
__builtin_arm_mve_vcmphiq_m_n_u16
__builtin_arm_mve_vcmphiq_m_n_u32
__builtin_arm_mve_vcmphiq_m_u16
__builtin_arm_mve_vcmphiq_m_u32
__builtin_arm_mve_vcmphiq_m_u8
__builtin_arm_mve_vcmphiq_n_u16
__builtin_arm_mve_vcmphiq_n_u32
__builtin_arm_mve_vcmphiq_n_u8
__builtin_arm_mve_vcmphiq_u16
__builtin_arm_mve_vcmphiq_u8
__builtin_arm_mve_vcmpleq_f16
__builtin_arm_mve_vcmpleq_f32
attiny2313a
match_any
clang::enforce_tcb
attiny24a
end of File
external_source_symbol
unrecognized instrumentation profile encoding format
-fplt
invalid instrumentation profile data (bad magic)
unsupported instrumentation profile format version
definedIn
unsupported instrumentation profile hash type
__builtin_arm_mve_vcmpleq_m_f16
__builtin_arm_mve_vcmpleq_m_f32
__builtin_arm_mve_vcmpleq_m_n_f16
__builtin_arm_mve_vcmpleq_m_n_f32
__builtin_arm_mve_vcmpleq_m_n_s32
__builtin_arm_mve_vcmpleq_m_n_s8
__builtin_arm_mve_vcmpleq_m_s16
__builtin_arm_mve_vcmpleq_m_s32
__builtin_arm_mve_vcmpleq_m_s8
__builtin_arm_mve_vcmpleq_n_f16
__builtin_arm_mve_vcmpleq_n_f32
unable to correlate profile
__builtin_arm_mve_vcmpleq_n_s16
__builtin_arm_mve_vcmpleq_n_s32
__builtin_arm_mve_vcmpleq_n_s8
__builtin_arm_mve_vcmpleq_s16
__builtin_arm_mve_vcmpleq_s32
__builtin_arm_mve_vcmpleq_s8
__builtin_arm_mve_vcmpltq_f16
__builtin_arm_mve_vcmpltq_f32
__builtin_arm_mve_vcmpltq_m_f16
__builtin_arm_mve_vcmpltq_m_f32
__builtin_arm_mve_vcmpltq_m_n_f16
__builtin_arm_mve_vcmpltq_m_n_f32
__builtin_arm_mve_vcmpltq_m_n_s16
__builtin_arm_mve_vcmpltq_m_n_s32
__builtin_arm_mve_vcmpltq_m_n_s8
__builtin_arm_mve_vcmpltq_m_s16
__builtin_arm_mve_vcmpltq_m_s8
__builtin_arm_mve_vcmpltq_n_f16
__builtin_arm_mve_vcmpltq_n_f32
__builtin_arm_mve_vcmpltq_n_s32
__builtin_arm_mve_vcmpltq_n_s8
__builtin_arm_mve_vcmpltq_s16
__builtin_arm_mve_vcmpltq_s8
__builtin_arm_mve_vcmpneq_f16
__builtin_arm_mve_vcmpneq_f32
__builtin_arm_mve_vcmpneq_m_f16
__builtin_arm_mve_vcmpneq_m_f32
__builtin_arm_mve_vcmpneq_m_n_f16
__builtin_arm_mve_vcmpneq_m_n_f32
__builtin_arm_mve_vcmpneq_m_n_s32
__builtin_arm_mve_vcmpneq_m_n_s8
__builtin_arm_mve_vcmpneq_m_n_u16
__builtin_arm_mve_vcmpneq_m_n_u8
__builtin_arm_mve_vcmpneq_m_s16
__builtin_arm_mve_vcmpneq_m_s32
__builtin_arm_mve_vcmpneq_m_u16
__builtin_arm_mve_vcmpneq_m_u32
__builtin_arm_mve_vcmpneq_m_u8
__builtin_arm_mve_vcmpneq_n_f16
__builtin_arm_mve_vcmpneq_n_f32
__builtin_arm_mve_vcmpneq_n_s16
__builtin_arm_mve_vcmpneq_n_s32
__builtin_arm_mve_vcmpneq_n_u16
__builtin_arm_mve_vcmpneq_n_u32
__builtin_arm_mve_vcmpneq_n_u8
__builtin_arm_mve_vcmpneq_s32
__builtin_arm_mve_vcmpneq_s8
__builtin_arm_mve_vcmpneq_u16
__builtin_arm_mve_vcmpneq_u8
__builtin_arm_mve_vcmulq_f16
__builtin_arm_mve_vcmulq_f32
__builtin_arm_mve_vcmulq_m_f16
__builtin_arm_mve_vcmulq_m_f32
__builtin_arm_mve_vcmulq_rot180_f16
__builtin_arm_mve_vcmulq_rot180_f32
function control flow change detected (hash mismatch)
attiny84
function basic block count change detected (counter mismatch)
generate-merged-base-profiles
__builtin_arm_mve_vcmulq_rot180_m_f16
__builtin_arm_mve_vcmulq_rot180_m_f32
__builtin_arm_mve_vcmulq_rot180_x_f16
__builtin_arm_mve_vcmulq_rot180_x_f32
When generating nested context-sensitive profiles, always generate extra base profile for function with all its context profiles merged into it.
profile-isfs
__builtin_arm_mve_vcmulq_rot270_f16
__builtin_arm_mve_vcmulq_rot270_f32
__builtin_arm_mve_vcmulq_rot270_m_f16
__builtin_arm_mve_vcmulq_rot270_m_f32
__builtin_arm_mve_vcmulq_rot270_x_f32
__builtin_arm_mve_vcmulq_rot90_f16
__builtin_arm_mve_vcmulq_rot90_f32
__builtin_arm_mve_vcmulq_rot90_m_f16
__builtin_arm_mve_vcmulq_rot90_m_f32
__builtin_arm_mve_vcmulq_rot90_x_f16
__builtin_arm_mve_vcmulq_rot90_x_f32
_unknown_
__builtin_arm_mve_vcmulq_x_f16
__builtin_arm_mve_vcmulq_x_f32
__builtin_arm_mve_vcreateq_f16
__builtin_arm_mve_vcreateq_f32
__managed__
__builtin_arm_mve_vcreateq_s16
__builtin_arm_mve_vcreateq_s32
__builtin_arm_mve_vcreateq_s64
__builtin_arm_mve_vcreateq_s8
__builtin_arm_mve_vcreateq_u32
__builtin_arm_mve_vcreateq_u64
__builtin_arm_mve_vcreateq_u8
__builtin_arm_mve_vctp16q
__builtin_arm_mve_vctp16q_m
__builtin_arm_mve_vctp32q
__builtin_arm_mve_vctp32q_m
__builtin_arm_mve_vctp64q_m
__builtin_arm_mve_vctp8q
__builtin_arm_mve_vctp8q_m
__builtin_arm_mve_vcvtaq_m_s32_f32
__builtin_arm_mve_vcvtaq_m_u16_f16
__builtin_arm_mve_vcvtaq_m_u32_f32
__builtin_arm_mve_vcvtaq_s32_f32
__builtin_arm_mve_vcvtaq_u16_f16
__builtin_arm_mve_vcvtaq_u32_f32
__builtin_arm_mve_vcvtaq_x_s16_f16
__builtin_arm_mve_vcvtaq_x_s32_f32
__builtin_arm_mve_vcvtaq_x_u16_f16
__builtin_arm_mve_vcvtaq_x_u32_f32
__builtin_arm_mve_vcvtbq_f32_f16
__builtin_arm_mve_vcvtbq_m_f16_f32
__builtin_arm_mve_vcvtbq_m_f32_f16
__builtin_arm_mve_vcvtmq_m_s16_f16
__builtin_arm_mve_vcvtmq_m_s32_f32
__builtin_arm_mve_vcvtmq_m_u16_f16
__builtin_arm_mve_vcvtmq_s16_f16
__builtin_arm_mve_vcvtmq_s32_f32
__builtin_arm_mve_vcvtmq_u16_f16
__builtin_arm_mve_vcvtmq_u32_f32
__builtin_arm_mve_vcvtmq_x_s16_f16
__builtin_arm_mve_vcvtmq_x_s32_f32
__builtin_arm_mve_vcvtmq_x_u16_f16
__builtin_arm_mve_vcvtnq_m_s16_f16
__builtin_arm_mve_vcvtnq_m_s32_f32
__builtin_arm_mve_vcvtnq_m_u16_f16
__builtin_arm_mve_vcvtnq_s16_f16
__builtin_arm_mve_vcvtnq_s32_f32
__builtin_arm_mve_vcvtnq_u16_f16
__builtin_arm_mve_vcvtnq_x_s16_f16
__builtin_arm_mve_vcvtnq_x_s32_f32
__builtin_arm_mve_vcvtnq_x_u16_f16
__builtin_arm_mve_vcvtnq_x_u32_f32
__builtin_arm_mve_vcvtpq_m_s16_f16
__builtin_arm_mve_vcvtpq_m_s32_f32
__builtin_arm_mve_vcvtpq_m_u16_f16
__builtin_arm_mve_vcvtpq_s16_f16
__builtin_arm_mve_vcvtpq_s32_f32
__builtin_arm_mve_vcvtpq_u16_f16
__builtin_arm_mve_vcvtpq_x_s16_f16
__builtin_arm_mve_vcvtpq_x_s32_f32
__builtin_arm_mve_vcvtpq_x_u16_f16
attiny87
atmega103
Augmentation: '
__builtin_arm_mve_vcvtpq_x_u32_f32
__builtin_arm_mve_vcvtq_f16_s16
__builtin_arm_mve_vcvtq_f16_u16
__builtin_arm_mve_vcvtq_f32_s32
__builtin_arm_mve_vcvtq_f32_u32
__builtin_arm_mve_vcvtq_m_f16_s16
__builtin_arm_mve_vcvtq_m_f16_u16
__builtin_arm_mve_vcvtq_m_f32_s32
__builtin_arm_mve_vcvtq_m_n_f16_s16
__builtin_arm_mve_vcvtq_m_n_f16_u16
__builtin_arm_mve_vcvtq_m_n_f32_s32
cannot read header augmentation
ifunc
Abbreviation 0x
Select the frame chain model used to emit frame records (Arm only).
Tag: {0}
avr31
{0}: {1}
Section too small: cannot read abbreviations.
__builtin_arm_mve_vcvtq_m_n_f32_u32
__builtin_arm_mve_vcvtq_m_n_s16_f16
__builtin_arm_mve_vcvtq_m_n_s32_f32
__builtin_arm_mve_vcvtq_m_n_u16_f16
__builtin_arm_mve_vcvtq_m_s16_f16
__builtin_arm_mve_vcvtq_m_s32_f32
__builtin_arm_mve_vcvtq_m_u16_f16
__builtin_arm_mve_vcvtq_m_u32_f32
__builtin_arm_mve_vcvtq_n_f16_s16
__builtin_arm_mve_vcvtq_n_f16_u16
__builtin_arm_mve_vcvtq_n_f32_s32
__builtin_arm_mve_vcvtq_n_s16_f16
__builtin_arm_mve_vcvtq_n_s32_f32
__builtin_arm_mve_vcvtq_n_u16_f16
__builtin_arm_mve_vcvtq_s16_f16
__builtin_arm_mve_vcvtq_s32_f32
__builtin_arm_mve_vcvtq_u16_f16
__builtin_arm_mve_vcvtq_x_f16_s16
__builtin_arm_mve_vcvtq_x_f16_u16
__builtin_arm_mve_vcvtq_x_f32_s32
__builtin_arm_mve_vcvtq_x_f32_u32
__builtin_arm_mve_vcvtq_x_n_f16_s16
__builtin_arm_mve_vcvtq_x_n_f16_u16
__builtin_arm_mve_vcvtq_x_n_f32_s32
__builtin_arm_mve_vcvtq_x_n_s16_f16
__builtin_arm_mve_vcvtq_x_n_s32_f32
__builtin_arm_mve_vcvtq_x_n_u16_f16
__builtin_arm_mve_vcvtq_x_s16_f16
__builtin_arm_mve_vcvtq_x_s32_f32
__builtin_arm_mve_vcvtq_x_u16_f16
__builtin_arm_mve_vcvttq_f16_f32
__builtin_arm_mve_vcvttq_f32_f16
__builtin_arm_mve_vcvttq_m_f16_f32
__builtin_arm_mve_vcvttq_m_f32_f16
__builtin_arm_mve_vcvttq_x_f32_f16
__builtin_arm_mve_vddupq_m_n_u16
__builtin_arm_mve_vddupq_m_n_u32
__builtin_arm_mve_vddupq_m_wb_u16
__builtin_arm_mve_vddupq_m_wb_u32
__builtin_arm_mve_vddupq_m_wb_u8
__builtin_arm_mve_vddupq_n_u32
__builtin_arm_mve_vddupq_n_u8
__builtin_arm_mve_vddupq_wb_u16
__builtin_arm_mve_vddupq_wb_u8
__builtin_arm_mve_vddupq_x_n_u16
__builtin_arm_mve_vddupq_x_n_u32
__builtin_arm_mve_vddupq_x_n_u8
__builtin_arm_mve_vddupq_x_wb_u16
__builtin_arm_mve_vddupq_x_wb_u32
__builtin_arm_mve_vddupq_x_wb_u8
__builtin_arm_mve_vdupq_m_n_f32
__builtin_arm_mve_vdupq_m_n_s16
__builtin_arm_mve_vdupq_m_n_s32
__builtin_arm_mve_vdupq_m_n_u16
__builtin_arm_mve_vdupq_m_n_u32
__builtin_arm_mve_vdupq_m_n_u8
__builtin_arm_mve_vdupq_n_f32
__builtin_arm_mve_vdupq_n_s16
__builtin_arm_mve_vdupq_n_s32
__builtin_arm_mve_vdupq_n_s8
__builtin_arm_mve_vdupq_n_u16
__builtin_arm_mve_vdupq_n_u32
__builtin_arm_mve_vdupq_n_u8
Duplicate abbreviation code.
at43usb320
Entry @ 0x
clang::intel_ocl_bicc
0x%016llx
-fprebuilt-module-path=
 (next unit at 
atmega16u2
<compile unit can't be parsed!>
__builtin_arm_mve_vdupq_x_n_f16
__builtin_arm_mve_vdupq_x_n_f32
__builtin_arm_mve_vdupq_x_n_s16
__builtin_arm_mve_vdupq_x_n_s32
.dwp
Option
.debug_abbrev
__builtin_arm_mve_vdupq_x_n_s8
__builtin_arm_mve_vdupq_x_n_u16
__builtin_arm_mve_vdupq_x_n_u32
__builtin_arm_mve_vdupq_x_n_u8
__builtin_arm_mve_vdwdupq_m_n_u32
__builtin_arm_mve_vdwdupq_m_n_u8
__builtin_arm_mve_vdwdupq_m_wb_u16
__builtin_arm_mve_vdwdupq_m_wb_u32
__builtin_arm_mve_vdwdupq_m_wb_u8
__builtin_arm_mve_vdwdupq_n_u16
__builtin_arm_mve_vdwdupq_n_u32
.debug_loc
__builtin_arm_mve_vdwdupq_n_u8
__builtin_arm_mve_vdwdupq_wb_u16
__builtin_arm_mve_vdwdupq_wb_u32
__builtin_arm_mve_vdwdupq_wb_u8
__builtin_arm_mve_vdwdupq_x_n_u32
__builtin_arm_mve_vdwdupq_x_n_u8
__builtin_arm_mve_vdwdupq_x_wb_u16
__builtin_arm_mve_vdwdupq_x_wb_u32
__builtin_arm_mve_vdwdupq_x_wb_u8
__builtin_arm_mve_veorq_f16
__builtin_arm_mve_veorq_f32
__builtin_arm_mve_veorq_m_f16
__builtin_arm_mve_veorq_m_f32
__builtin_arm_mve_veorq_m_s16
__builtin_arm_mve_veorq_m_s32
__builtin_arm_mve_veorq_m_u16
__builtin_arm_mve_veorq_m_u32
__builtin_arm_mve_veorq_m_u8
__builtin_arm_mve_veorq_s32
__builtin_arm_mve_veorq_s8
__builtin_arm_mve_veorq_u16
__builtin_arm_mve_veorq_u8
__builtin_arm_mve_veorq_x_f16
__builtin_arm_mve_veorq_x_f32
__builtin_arm_mve_veorq_x_s16
__builtin_arm_mve_veorq_x_s32
__builtin_arm_mve_veorq_x_s8
__builtin_arm_mve_veorq_x_u16
__builtin_arm_mve_veorq_x_u8
__builtin_arm_mve_vfmaq_f16
__builtin_arm_mve_vfmaq_f32
__builtin_arm_mve_vfmaq_m_f32
__builtin_arm_mve_vfmaq_m_n_f16
__builtin_arm_mve_vfmaq_m_n_f32
__builtin_arm_mve_vfmaq_n_f32
__builtin_arm_mve_vfmasq_m_n_f16
__builtin_arm_mve_vfmasq_m_n_f32
__builtin_arm_mve_vfmasq_n_f16
__builtin_arm_mve_vfmasq_n_f32
__builtin_arm_mve_vfmsq_f16
__builtin_arm_mve_vfmsq_f32
__builtin_arm_mve_vfmsq_m_f32
__builtin_arm_mve_vgetq_lane_f16
__builtin_arm_mve_vgetq_lane_f32
__builtin_arm_mve_vgetq_lane_s32
__builtin_arm_mve_vgetq_lane_s64
__builtin_arm_mve_vgetq_lane_s8
__builtin_arm_mve_vgetq_lane_u32
__builtin_arm_mve_vgetq_lane_u64
__builtin_arm_mve_vgetq_lane_u8
__builtin_arm_mve_vhaddq_m_n_s16
__builtin_arm_mve_vhaddq_m_n_s32
__builtin_arm_mve_vhaddq_m_n_s8
__builtin_arm_mve_vhaddq_m_n_u16
__builtin_arm_mve_vhaddq_m_n_u8
__builtin_arm_mve_vhaddq_m_s16
__builtin_arm_mve_vhaddq_m_s32
.debug_loclists
clang::mig_server_routine
.debug_loclists.dwo
.debug_macinfo.dwo
__single_inheritance
.debug_aranges
.apple_namespaces
maybe_undef
.apple_objc
__builtin_arm_mve_vhaddq_m_s8
__builtin_arm_mve_vhaddq_m_u16
__builtin_arm_mve_vhaddq_m_u32
__builtin_arm_mve_vhaddq_m_u8
__builtin_arm_mve_vhaddq_n_s32
__builtin_arm_mve_vhaddq_n_s8
__builtin_arm_mve_vhaddq_n_u16
__builtin_arm_mve_vhaddq_n_u32
__builtin_arm_mve_vhaddq_n_u8
__builtin_arm_mve_vhaddq_s16
__builtin_arm_mve_vhaddq_s32
-fno-jmc
locations
atmega48pa
debug_line[
__builtin_arm_mve_vhaddq_s8
__builtin_arm_mve_vhaddq_u16
__builtin_arm_mve_vhaddq_u32
__builtin_arm_mve_vhaddq_u8
__builtin_arm_mve_vhaddq_x_n_s32
__builtin_arm_mve_vhaddq_x_n_s8
__builtin_arm_mve_vhaddq_x_n_u16
__builtin_arm_mve_vhaddq_x_n_u8
__builtin_arm_mve_vhaddq_x_s16
__builtin_arm_mve_vhaddq_x_s32
__builtin_arm_mve_vhaddq_x_s8
__builtin_arm_mve_vhaddq_x_u16
__builtin_arm_mve_vhaddq_x_u32
__builtin_arm_mve_vhaddq_x_u8
atmega48p
0x%8.8llx: Gap, length = 
__builtin_arm_mve_vhcaddq_rot270_m_s16
__builtin_arm_mve_vhcaddq_rot270_m_s32
__builtin_arm_mve_vhcaddq_rot270_m_s8
__builtin_arm_mve_vhcaddq_rot270_s16
__builtin_arm_mve_vhcaddq_rot270_s8
__builtin_arm_mve_vhcaddq_rot270_x_s16
__builtin_arm_mve_vhcaddq_rot270_x_s32
__builtin_arm_mve_vhcaddq_rot90_m_s16
__builtin_arm_mve_vhcaddq_rot90_m_s32
__builtin_arm_mve_vhcaddq_rot90_m_s8
__builtin_arm_mve_vhcaddq_rot90_s16
__builtin_arm_mve_vhcaddq_rot90_s32
__builtin_arm_mve_vhcaddq_rot90_s8
__builtin_arm_mve_vhcaddq_rot90_x_s16
__builtin_arm_mve_vhcaddq_rot90_x_s8
__builtin_arm_mve_vhsubq_m_n_s16
__builtin_arm_mve_vhsubq_m_n_s32
__builtin_arm_mve_vhsubq_m_n_u16
__builtin_arm_mve_vhsubq_m_n_u32
__builtin_arm_mve_vhsubq_m_n_u8
__builtin_arm_mve_vhsubq_m_s32
__builtin_arm_mve_vhsubq_m_s8
__builtin_arm_mve_vhsubq_m_u16
__builtin_arm_mve_vhsubq_m_u32
__builtin_arm_mve_vhsubq_m_u8
__builtin_arm_mve_vhsubq_n_s16
__builtin_arm_mve_vhsubq_n_s32
__builtin_arm_mve_vhsubq_n_u16
__builtin_arm_mve_vhsubq_n_u32
__builtin_arm_mve_vhsubq_n_u8
__builtin_arm_mve_vhsubq_s32
__builtin_arm_mve_vhsubq_s8
__builtin_arm_mve_vhsubq_u16
__builtin_arm_mve_vhsubq_u8
__builtin_arm_mve_vhsubq_x_n_s16
__builtin_arm_mve_vhsubq_x_n_s32
__builtin_arm_mve_vhsubq_x_n_s8
__builtin_arm_mve_vhsubq_x_n_u16
__builtin_arm_mve_vhsubq_x_n_u32
__builtin_arm_mve_vhsubq_x_n_u8
__builtin_arm_mve_vhsubq_x_s32
__builtin_arm_mve_vhsubq_x_s8
__builtin_arm_mve_vhsubq_x_u16
__builtin_arm_mve_vhsubq_x_u8
__builtin_arm_mve_vidupq_m_n_u16
__builtin_arm_mve_vidupq_m_n_u32
0x%8.8llx: 
gnu::mips16
Contribution size = 
__builtin_arm_mve_vidupq_m_n_u8
__builtin_arm_mve_vidupq_m_wb_u16
__builtin_arm_mve_vidupq_m_wb_u32
__builtin_arm_mve_vidupq_m_wb_u8
__builtin_arm_mve_vidupq_n_u16
__builtin_arm_mve_vidupq_n_u32
__builtin_arm_mve_vidupq_n_u8
__builtin_arm_mve_vidupq_wb_u16
failed to get symbol section: 
clang::ns_consumed
unsupported reserved unit length of value 0x%8.8llx
-mglibc
__builtin_arm_mve_vidupq_wb_u32
__builtin_arm_mve_vidupq_wb_u8
__builtin_arm_mve_vidupq_x_n_u16
__builtin_arm_mve_vidupq_x_n_u32
__builtin_arm_mve_vidupq_x_wb_u16
__builtin_arm_mve_vidupq_x_wb_u32
__builtin_arm_mve_vidupq_x_wb_u8
__builtin_arm_mve_viwdupq_m_n_u32
__builtin_arm_mve_viwdupq_m_n_u8
__builtin_arm_mve_viwdupq_m_wb_u16
__builtin_arm_mve_viwdupq_m_wb_u32
__builtin_arm_mve_viwdupq_m_wb_u8
__builtin_arm_mve_viwdupq_n_u16
__builtin_arm_mve_viwdupq_n_u32
address table at offset 0x%llx
clang::ns_consumes_self
address table at offset 0x%llx contains data of size 0x%llx which is not a multiple of addr size %hhu
at90pwm2
address table at offset 0x%llx has address size %hhu which is different from CU address size %hhu
__builtin_arm_mve_viwdupq_n_u8
__builtin_arm_mve_viwdupq_wb_u16
__builtin_arm_mve_viwdupq_wb_u32
__builtin_arm_mve_viwdupq_wb_u8
__builtin_arm_mve_viwdupq_x_n_u32
__builtin_arm_mve_viwdupq_x_n_u8
__builtin_arm_mve_viwdupq_x_wb_u16
__builtin_arm_mve_viwdupq_x_wb_u8
__builtin_arm_mve_vld1q_f16
__builtin_arm_mve_vld1q_f32
__builtin_arm_mve_vld1q_s16
__builtin_arm_mve_vld1q_s32
__builtin_arm_mve_vld1q_s8
__builtin_arm_mve_vld1q_u16
__builtin_arm_mve_vld1q_u8
__builtin_arm_mve_vld1q_z_f16
__builtin_arm_mve_vld1q_z_f32
__builtin_arm_mve_vld1q_z_s32
__builtin_arm_mve_vld1q_z_s8
__builtin_arm_mve_vld1q_z_u16
__builtin_arm_mve_vld1q_z_u8
__builtin_arm_mve_vld2q_f16
__builtin_arm_mve_vld2q_f32
__builtin_arm_mve_vld2q_s16
__builtin_arm_mve_vld2q_s32
__builtin_arm_mve_vld2q_s8
__builtin_arm_mve_vld2q_u16
__builtin_arm_mve_vld2q_u8
__builtin_arm_mve_vld4q_f16
__builtin_arm_mve_vld4q_f32
__builtin_arm_mve_vld4q_s32
__builtin_arm_mve_vld4q_s8
__builtin_arm_mve_vld4q_u16
__builtin_arm_mve_vld4q_u8
__builtin_arm_mve_vldrbq_gather_offset_s16
__builtin_arm_mve_vldrbq_gather_offset_s32
__builtin_arm_mve_vldrbq_gather_offset_s8
__builtin_arm_mve_vldrbq_gather_offset_u16
__builtin_arm_mve_vldrbq_gather_offset_u32
__builtin_arm_mve_vldrbq_gather_offset_u8
__builtin_arm_mve_vldrbq_gather_offset_z_s32
__builtin_arm_mve_vldrbq_gather_offset_z_s8
__builtin_arm_mve_vldrbq_gather_offset_z_u16
__builtin_arm_mve_vldrbq_gather_offset_z_u8
__builtin_arm_mve_vldrbq_s16
__builtin_arm_mve_vldrbq_s32
__builtin_arm_mve_vldrbq_u16
__builtin_arm_mve_vldrbq_u32
__builtin_arm_mve_vldrbq_u8
__builtin_arm_mve_vldrbq_z_s16
__builtin_arm_mve_vldrbq_z_s32
__builtin_arm_mve_vldrbq_z_s8
__builtin_arm_mve_vldrbq_z_u16
DWARF version is not defined in CU, assuming version 5
ns_returns_not_retained
ata5790
0x%llx: 
__builtin_arm_mve_vldrbq_z_u32
__builtin_arm_mve_vldrbq_z_u8
__builtin_arm_mve_vldrdq_gather_base_s64
__builtin_arm_mve_vldrdq_gather_base_u64
CFA=
nodebug
unable to get CIE for FDE at offset 0x%llx
__builtin_arm_mve_vldrdq_gather_base_wb_s64
__builtin_arm_mve_vldrdq_gather_base_wb_u64
__builtin_arm_mve_vldrdq_gather_base_wb_z_s64
__builtin_arm_mve_vldrdq_gather_base_wb_z_u64
__builtin_arm_mve_vldrdq_gather_base_z_u64
__builtin_arm_mve_vldrdq_gather_offset_s64
__builtin_arm_mve_vldrdq_gather_offset_u64
__builtin_arm_mve_vldrdq_gather_offset_z_s64
__builtin_arm_mve_vldrdq_gather_offset_z_u64
__builtin_arm_mve_vldrdq_gather_shifted_offset_s64
__builtin_arm_mve_vldrdq_gather_shifted_offset_u64
Enable or disable Control Flow Guard checks and guard tables emission
OT_Offset
ata5791
OT_FactoredCodeOffset
__builtin_arm_mve_vldrdq_gather_shifted_offset_z_s64
__builtin_arm_mve_vldrdq_gather_shifted_offset_z_u64
__builtin_arm_mve_vldrhq_f16
__builtin_arm_mve_vldrhq_gather_offset_f16
__builtin_arm_mve_vldrhq_gather_offset_s32
__builtin_arm_mve_vldrhq_gather_offset_u16
__builtin_arm_mve_vldrhq_gather_offset_u32
__builtin_arm_mve_vldrhq_gather_offset_z_f16
__builtin_arm_mve_vldrhq_gather_offset_z_s16
__builtin_arm_mve_vldrhq_gather_offset_z_s32
__builtin_arm_mve_vldrhq_gather_offset_z_u16
__builtin_arm_mve_vldrhq_gather_offset_z_u32
__builtin_arm_mve_vldrhq_gather_shifted_offset_f16
__builtin_arm_mve_vldrhq_gather_shifted_offset_s16
__builtin_arm_mve_vldrhq_gather_shifted_offset_s32
__builtin_arm_mve_vldrhq_gather_shifted_offset_u32
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_f16
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_s16
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_u16
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_u32
__builtin_arm_mve_vldrhq_s16
__builtin_arm_mve_vldrhq_u16
__builtin_arm_mve_vldrhq_u32
__builtin_arm_mve_vldrhq_z_f16
__builtin_arm_mve_vldrhq_z_s16
__builtin_arm_mve_vldrhq_z_s32
__builtin_arm_mve_vldrhq_z_u16
__builtin_arm_mve_vldrhq_z_u32
__builtin_arm_mve_vldrwq_gather_base_f32
__builtin_arm_mve_vldrwq_gather_base_s32
__builtin_arm_mve_vldrwq_gather_base_u32
__builtin_arm_mve_vldrwq_gather_base_wb_s32
__builtin_arm_mve_vldrwq_gather_base_wb_u32
__builtin_arm_mve_vldrwq_gather_base_wb_z_f32
__builtin_arm_mve_vldrwq_gather_base_wb_z_u32
__builtin_arm_mve_vldrwq_gather_base_z_f32
__builtin_arm_mve_vldrwq_gather_base_z_s32
__builtin_arm_mve_vldrwq_gather_base_z_u32
__builtin_arm_mve_vldrwq_gather_offset_f32
__builtin_arm_mve_vldrwq_gather_offset_s32
__builtin_arm_mve_vldrwq_gather_offset_u32
__builtin_arm_mve_vldrwq_gather_offset_z_s32
__builtin_arm_mve_vldrwq_gather_offset_z_u32
__builtin_arm_mve_vldrwq_gather_shifted_offset_f32
__builtin_arm_mve_vldrwq_gather_shifted_offset_u32
__builtin_arm_mve_vldrwq_gather_shifted_offset_z_f32
__builtin_arm_mve_vldrwq_gather_shifted_offset_z_s32
__builtin_arm_mve_vldrwq_s32
__builtin_arm_mve_vldrwq_u32
__builtin_arm_mve_vldrwq_z_f32
__builtin_arm_mve_vldrwq_z_s32
__builtin_arm_mve_vldrwq_z_u32
__builtin_arm_mve_vmaxaq_m_s16
__builtin_arm_mve_vmaxaq_m_s32
__builtin_arm_mve_vmaxaq_s16
__builtin_arm_mve_vmaxaq_s32
__builtin_arm_mve_vmaxaq_s8
__builtin_arm_mve_vmaxavq_p_s32
__builtin_arm_mve_vmaxavq_p_s8
__builtin_arm_mve_vmaxavq_s16
OT_SignedFactDataOffset
no_destroy
OT_UnsignedFactDataOffset
OT_AddressSpace
atmega161
  Address size:          %u
__builtin_arm_mve_vmaxavq_s32
__builtin_arm_mve_vmaxavq_s8
__builtin_arm_mve_vmaxnmaq_f16
__builtin_arm_mve_vmaxnmaq_f32
__builtin_arm_mve_vmaxnmaq_m_f16
__builtin_arm_mve_vmaxnmaq_m_f32
__builtin_arm_mve_vmaxnmavq_f16
__builtin_arm_mve_vmaxnmavq_f32
  Segment desc size:     %u
no_profile_instrument_function
  Code alignment factor: %u
-fno-keep-static-consts
  Data alignment factor: %d
atmega162
  Return address column: %d
__builtin_arm_mve_vmaxnmavq_p_f16
__builtin_arm_mve_vmaxnmavq_p_f32
__builtin_arm_mve_vmaxnmq_f16
__builtin_arm_mve_vmaxnmq_f32
__builtin_arm_mve_vmaxnmq_m_f16
__builtin_arm_mve_vmaxnmq_m_f32
__builtin_arm_mve_vmaxnmq_x_f16
__builtin_arm_mve_vmaxnmq_x_f32
__builtin_arm_mve_vmaxnmvq_f32
__builtin_arm_mve_vmaxnmvq_p_f16
__builtin_arm_mve_vmaxnmvq_p_f32
__builtin_arm_mve_vmaxq_m_s16
__builtin_arm_mve_vmaxq_m_s32
__builtin_arm_mve_vmaxq_m_s8
__builtin_arm_mve_vmaxq_m_u16
__builtin_arm_mve_vmaxq_m_u8
__builtin_arm_mve_vmaxq_s16
__builtin_arm_mve_vmaxq_s32
__builtin_arm_mve_vmaxq_u16
__builtin_arm_mve_vmaxq_u32
__builtin_arm_mve_vmaxq_u8
__builtin_arm_mve_vmaxq_x_s32
__builtin_arm_mve_vmaxq_x_s8
__builtin_arm_mve_vmaxq_x_u16
__builtin_arm_mve_vmaxq_x_u32
__builtin_arm_mve_vmaxq_x_u8
__builtin_arm_mve_vmaxvq_p_s16
__builtin_arm_mve_vmaxvq_p_s32
__builtin_arm_mve_vmaxvq_p_u16
__builtin_arm_mve_vmaxvq_p_u32
__builtin_arm_mve_vmaxvq_p_u8
__builtin_arm_mve_vmaxvq_s32
__builtin_arm_mve_vmaxvq_s8
__builtin_arm_mve_vmaxvq_u16
__builtin_arm_mve_vmaxvq_u8
__builtin_arm_mve_vminaq_m_s16
__builtin_arm_mve_vminaq_m_s32
__builtin_arm_mve_vminaq_m_s8
__builtin_arm_mve_vminaq_s16
__builtin_arm_mve_vminaq_s32
__builtin_arm_mve_vminaq_s8
__builtin_arm_mve_vminavq_p_s32
__builtin_arm_mve_vminavq_p_s8
__builtin_arm_mve_vminavq_s16
__builtin_arm_mve_vminavq_s8
__builtin_arm_mve_vminnmaq_f16
__builtin_arm_mve_vminnmaq_f32
__builtin_arm_mve_vminnmaq_m_f32
__builtin_arm_mve_vminnmavq_f16
__builtin_arm_mve_vminnmavq_f32
__builtin_arm_mve_vminnmavq_p_f16
__builtin_arm_mve_vminnmavq_p_f32
__builtin_arm_mve_vminnmq_f16
__builtin_arm_mve_vminnmq_f32
__builtin_arm_mve_vminnmq_m_f32
__builtin_arm_mve_vminnmq_x_f16
__builtin_arm_mve_vminnmq_x_f32
__builtin_arm_mve_vminnmvq_f32
__builtin_arm_mve_vminnmvq_p_f16
__builtin_arm_mve_vminnmvq_p_f32
__builtin_arm_mve_vminq_m_s32
__builtin_arm_mve_vminq_m_s8
__builtin_arm_mve_vminq_m_u16
__builtin_arm_mve_vminq_m_u32
__builtin_arm_mve_vminq_m_u8
__builtin_arm_mve_vminq_s16
__builtin_arm_mve_vminq_s32
decoding the CIE opcodes into rows failed
atmega163
 FDE cie=
DWARF unit from offset 0x%8.8llx incl. to offset 0x%8.8llx excl. tries to read DIEs at offset 0x%8.8llx
no_stack_protector
DWARF unit at offset 0x%8.8llx contains invalid abbreviation set offset 0x%llx
Enable Hexagon HVX IEEE floating-point
DWARF unit at offset 0x%8.8llx contains invalid abbreviation %llu at offset 0x%8.8llx, valid abbreviations are %s
atmega168a
DWARF unit at offset 0x%8.8llx contains invalid FORM_* 0x%hx at offset 0x%8.8llx
__builtin_arm_mve_vminq_s8
__builtin_arm_mve_vminq_u16
__builtin_arm_mve_vminq_u32
__builtin_arm_mve_vminq_u8
Line table prologue:
safebuffers
    total_length: 0x%0*llx
__builtin_arm_mve_vminq_x_s16
__builtin_arm_mve_vminq_x_s32
__builtin_arm_mve_vminq_x_s8
__builtin_arm_mve_vminq_x_u16
__builtin_arm_mve_vminq_x_u8
__builtin_arm_mve_vminvq_p_s16
__builtin_arm_mve_vminvq_p_s32
__builtin_arm_mve_vminvq_p_s8
__builtin_arm_mve_vminvq_p_u16
__builtin_arm_mve_vminvq_p_u32
__builtin_arm_mve_vminvq_p_u8
__builtin_arm_mve_vminvq_s32
__builtin_arm_mve_vminvq_s8
__builtin_arm_mve_vminvq_u16
__builtin_arm_mve_vminvq_u8
__builtin_arm_mve_vmladavaq_p_s16
__builtin_arm_mve_vmladavaq_p_s32
__builtin_arm_mve_vmladavaq_p_u16
__builtin_arm_mve_vmladavaq_p_u32
__builtin_arm_mve_vmladavaq_p_u8
__builtin_arm_mve_vmladavaq_s16
__builtin_arm_mve_vmladavaq_s32
__builtin_arm_mve_vmladavaq_s8
__builtin_arm_mve_vmladavaq_u16
__builtin_arm_mve_vmladavaq_u8
__builtin_arm_mve_vmladavaxq_p_s16
__builtin_arm_mve_vmladavaxq_p_s32
__builtin_arm_mve_vmladavaxq_s16
__builtin_arm_mve_vmladavaxq_s32
__builtin_arm_mve_vmladavaxq_s8
__builtin_arm_mve_vmladavq_p_s32
__builtin_arm_mve_vmladavq_p_s8
__builtin_arm_mve_vmladavq_p_u16
__builtin_arm_mve_vmladavq_p_u32
__builtin_arm_mve_vmladavq_p_u8
__builtin_arm_mve_vmladavq_s16
__builtin_arm_mve_vmladavq_s32
__builtin_arm_mve_vmladavq_u16
__builtin_arm_mve_vmladavq_u32
__builtin_arm_mve_vmladavq_u8
__builtin_arm_mve_vmladavxq_p_s32
__builtin_arm_mve_vmladavxq_p_s8
__builtin_arm_mve_vmladavxq_s16
__builtin_arm_mve_vmladavxq_s8
__builtin_arm_mve_vmlaldavaq_p_s16
__builtin_arm_mve_vmlaldavaq_p_s32
__builtin_arm_mve_vmlaldavaq_p_u16
__builtin_arm_mve_vmlaldavaq_p_u32
__builtin_arm_mve_vmlaldavaq_s16
__builtin_arm_mve_vmlaldavaq_s32
__builtin_arm_mve_vmlaldavaq_u32
__builtin_arm_mve_vmlaldavaxq_p_s16
__builtin_arm_mve_vmlaldavaxq_p_s32
__builtin_arm_mve_vmlaldavaxq_s32
__builtin_arm_mve_vmlaldavq_p_s16
__builtin_arm_mve_vmlaldavq_p_s32
__builtin_arm_mve_vmlaldavq_p_u32
__builtin_arm_mve_vmlaldavq_s16
__builtin_arm_mve_vmlaldavq_s32
__builtin_arm_mve_vmlaldavq_u16
__builtin_arm_mve_vmlaldavq_u32
__builtin_arm_mve_vmlaldavxq_p_s16
__builtin_arm_mve_vmlaldavxq_p_s32
__builtin_arm_mve_vmlaldavxq_s32
__builtin_arm_mve_vmlaq_m_n_s16
__builtin_arm_mve_vmlaq_m_n_s32
          format: 
atmega168p
Address            Line   Column File   ISA Discriminator Flags
clang::os_consumes_this
------------------ ------ ------ ------ --- ------------- -------------
-mhvx-qfloat
0x%16.16llx %6u %6u
offset 0x%8.8llx is not a valid debug line section offset
-fprofile-filter-files=
line table program at offset 0x%8.8llx contains a %s opcode at offset 0x%8.8llx, but the prologue maximum_operations_per_instruction value is %hhd, which is unsupported. Assuming a value of 1 instead
line table program at offset 0x%8.8llx contains a %s opcode at offset 0x%8.8llx, but the prologue line_range value is 0. The address and line will not be adjusted
clang::os_returns_retained_on_non_zero
line table program with offset 0x%8.8llx has length 0x%8.8llx but only 0x%8.8llx bytes are available
__builtin_arm_mve_vmlaq_m_n_s8
__builtin_arm_mve_vmlaq_m_n_u16
__builtin_arm_mve_vmlaq_m_n_u32
__builtin_arm_mve_vmlaq_m_n_u8
__builtin_arm_mve_vmlaq_n_s32
__builtin_arm_mve_vmlaq_n_s8
__builtin_arm_mve_vmlaq_n_u16
__builtin_arm_mve_vmlaq_n_u32
__builtin_arm_mve_vmlaq_n_u8
__builtin_arm_mve_vmlasq_m_n_s16
__builtin_arm_mve_vmlasq_m_n_s32
__builtin_arm_mve_vmlasq_m_n_u16
__builtin_arm_mve_vmlasq_m_n_u32
__builtin_arm_mve_vmlasq_m_n_u8
__builtin_arm_mve_vmlasq_n_s32
__builtin_arm_mve_vmlasq_n_s8
__builtin_arm_mve_vmlasq_n_u16
__builtin_arm_mve_vmlasq_n_u32
__builtin_arm_mve_vmlasq_n_u8
__builtin_arm_mve_vmlsdavaq_p_s16
__builtin_arm_mve_vmlsdavaq_p_s32
__builtin_arm_mve_vmlsdavaq_p_s8
__builtin_arm_mve_vmlsdavaq_s16
__builtin_arm_mve_vmlsdavaq_s32
__builtin_arm_mve_vmlsdavaq_s8
__builtin_arm_mve_vmlsdavaxq_p_s32
__builtin_arm_mve_vmlsdavaxq_p_s8
__builtin_arm_mve_vmlsdavaxq_s16
__builtin_arm_mve_vmlsdavaxq_s8
__builtin_arm_mve_vmlsdavq_p_s16
__builtin_arm_mve_vmlsdavq_p_s32
__builtin_arm_mve_vmlsdavq_s16
__builtin_arm_mve_vmlsdavq_s32
__builtin_arm_mve_vmlsdavq_s8
__builtin_arm_mve_vmlsdavxq_p_s16
__builtin_arm_mve_vmlsdavxq_p_s32
__builtin_arm_mve_vmlsdavxq_p_s8
__builtin_arm_mve_vmlsdavxq_s16
__builtin_arm_mve_vmlsdavxq_s8
__builtin_arm_mve_vmlsldavaq_p_s16
__builtin_arm_mve_vmlsldavaq_p_s32
__builtin_arm_mve_vmlsldavaq_s32
__builtin_arm_mve_vmlsldavaxq_p_s16
__builtin_arm_mve_vmlsldavaxq_p_s32
__builtin_arm_mve_vmlsldavaxq_s32
__builtin_arm_mve_vmlsldavq_p_s16
__builtin_arm_mve_vmlsldavq_p_s32
__builtin_arm_mve_vmlsldavq_s16
__builtin_arm_mve_vmlsldavq_s32
__builtin_arm_mve_vmlsldavxq_p_s16
__builtin_arm_mve_vmlsldavxq_p_s32
failed to parse entry content descriptors: %s
objc_complete_definition
atmega325pa
file names table was not null terminated before the end of the prologue
__builtin_arm_mve_vmlsldavxq_s16
__builtin_arm_mve_vmlsldavxq_s32
__builtin_arm_mve_vmovlbq_m_s16
__builtin_arm_mve_vmovlbq_m_s8
__builtin_arm_mve_vmovlbq_m_u8
__builtin_arm_mve_vmovlbq_s16
__builtin_arm_mve_vmovlbq_s8
__builtin_arm_mve_vmovlbq_u8
__builtin_arm_mve_vmovlbq_x_s16
__builtin_arm_mve_vmovlbq_x_s8
__builtin_arm_mve_vmovlbq_x_u16
__builtin_arm_mve_vmovlbq_x_u8
__builtin_arm_mve_vmovltq_m_s16
__builtin_arm_mve_vmovltq_m_s8
special
%-*s(
__builtin_arm_mve_vmovltq_m_u16
__builtin_arm_mve_vmovltq_m_u8
__builtin_arm_mve_vmovltq_s16
__builtin_arm_mve_vmovltq_s8
Invalid dump range
clang::objc_direct_members
unable to resolve indirect address %u for: %s
__builtin_arm_mve_vmovltq_u16
__builtin_arm_mve_vmovltq_u8
__builtin_arm_mve_vmovltq_x_s16
__builtin_arm_mve_vmovltq_x_s8
__builtin_arm_mve_vmovltq_x_u8
__builtin_arm_mve_vmovnbq_m_s16
__builtin_arm_mve_vmovnbq_m_s32
__builtin_arm_mve_vmovnbq_m_u16
__builtin_arm_mve_vmovnbq_m_u32
__builtin_arm_mve_vmovnbq_s16
__builtin_arm_mve_vmovnbq_s32
__builtin_arm_mve_vmovnbq_u32
__builtin_arm_mve_vmovntq_m_s16
__builtin_arm_mve_vmovntq_m_s32
__builtin_arm_mve_vmovntq_m_u32
__builtin_arm_mve_vmovntq_s16
__builtin_arm_mve_vmovntq_s32
__builtin_arm_mve_vmovntq_u32
__builtin_arm_mve_vmulhq_m_s16
__builtin_arm_mve_vmulhq_m_s32
__builtin_arm_mve_vmulhq_m_s8
__builtin_arm_mve_vmulhq_m_u16
__builtin_arm_mve_vmulhq_m_u32
__builtin_arm_mve_vmulhq_m_u8
__builtin_arm_mve_vmulhq_s32
__builtin_arm_mve_vmulhq_s8
__builtin_arm_mve_vmulhq_u16
__builtin_arm_mve_vmulhq_u8
__builtin_arm_mve_vmulhq_x_s16
__builtin_arm_mve_vmulhq_x_s32
__builtin_arm_mve_vmulhq_x_u16
__builtin_arm_mve_vmulhq_x_u32
__builtin_arm_mve_vmulhq_x_u8
__builtin_arm_mve_vmullbq_int_m_s16
__builtin_arm_mve_vmullbq_int_m_s32
__builtin_arm_mve_vmullbq_int_m_s8
__builtin_arm_mve_vmullbq_int_m_u16
__builtin_arm_mve_vmullbq_int_m_u8
__builtin_arm_mve_vmullbq_int_s16
__builtin_arm_mve_vmullbq_int_s32
__builtin_arm_mve_vmullbq_int_u16
__builtin_arm_mve_vmullbq_int_u32
__builtin_arm_mve_vmullbq_int_u8
__builtin_arm_mve_vmullbq_int_x_s32
__builtin_arm_mve_vmullbq_int_x_s8
__builtin_arm_mve_vmullbq_int_x_u16
__builtin_arm_mve_vmullbq_int_x_u32
__builtin_arm_mve_vmullbq_int_x_u8
__builtin_arm_mve_vmullbq_poly_m_p16
__builtin_arm_mve_vmullbq_poly_m_p8
__builtin_arm_mve_vmullbq_poly_p8
__builtin_arm_mve_vmullbq_poly_x_p16
__builtin_arm_mve_vmullbq_poly_x_p8
%08llx <End of list>
__builtin_arm_mve_vmulltq_int_m_s16
__builtin_arm_mve_vmulltq_int_m_s32
__builtin_arm_mve_vmulltq_int_m_s8
__builtin_arm_mve_vmulltq_int_m_u16
unknown rnglists encoding 0x%x at offset 0x%llx
atmega329pa
read past end of table when reading %s encoding at offset 0x%llx
__builtin_arm_mve_vmulltq_int_m_u32
__builtin_arm_mve_vmulltq_int_m_u8
__builtin_arm_mve_vmulltq_int_s16
__builtin_arm_mve_vmulltq_int_s32
__builtin_arm_mve_vmulltq_int_s8
__builtin_arm_mve_vmulltq_int_u16
__builtin_arm_mve_vmulltq_int_u32
__builtin_arm_mve_vmulltq_int_u8
__builtin_arm_mve_vmulltq_int_x_s32
__builtin_arm_mve_vmulltq_int_x_s8
__builtin_arm_mve_vmulltq_int_x_u16
__builtin_arm_mve_vmulltq_int_x_u8
__builtin_arm_mve_vmulltq_poly_m_p16
__builtin_arm_mve_vmulltq_poly_m_p8
0x%8.8llx:
-fms-extensions
 [%s%*c
-fno-legacy-pass-manager
Unsupported %s encoding: %s
__builtin_arm_mve_vmulltq_poly_p16
__builtin_arm_mve_vmulltq_poly_p8
__builtin_arm_mve_vmulltq_poly_x_p16
__builtin_arm_mve_vmulltq_poly_x_p8
__builtin_arm_mve_vmulq_f16
__builtin_arm_mve_vmulq_f32
__builtin_arm_mve_vmulq_m_f16
__builtin_arm_mve_vmulq_m_f32
__builtin_arm_mve_vmulq_m_n_f32
__builtin_arm_mve_vmulq_m_n_s16
__builtin_arm_mve_vmulq_m_n_s32
__builtin_arm_mve_vmulq_m_n_u16
__builtin_arm_mve_vmulq_m_n_u32
__builtin_arm_mve_vmulq_m_n_u8
__builtin_arm_mve_vmulq_m_s32
__builtin_arm_mve_vmulq_m_s8
__builtin_arm_mve_vmulq_m_u16
__builtin_arm_mve_vmulq_m_u32
__builtin_arm_mve_vmulq_m_u8
__builtin_arm_mve_vmulq_n_f16
__builtin_arm_mve_vmulq_n_f32
__builtin_arm_mve_vmulq_n_s32
__builtin_arm_mve_vmulq_n_s8
__builtin_arm_mve_vmulq_n_u16
__builtin_arm_mve_vmulq_n_u8
__builtin_arm_mve_vmulq_s16
__builtin_arm_mve_vmulq_s32
__builtin_arm_mve_vmulq_u16
__builtin_arm_mve_vmulq_u32
__builtin_arm_mve_vmulq_u8
__builtin_arm_mve_vmulq_x_f16
__builtin_arm_mve_vmulq_x_f32
__builtin_arm_mve_vmulq_x_n_f16
__builtin_arm_mve_vmulq_x_n_f32
__builtin_arm_mve_vmulq_x_n_s32
__builtin_arm_mve_vmulq_x_n_s8
__builtin_arm_mve_vmulq_x_n_u16
__builtin_arm_mve_vmulq_x_n_u8
__builtin_arm_mve_vmulq_x_s16
__builtin_arm_mve_vmulq_x_s32
__builtin_arm_mve_vmulq_x_u16
__builtin_arm_mve_vmulq_x_u32
__builtin_arm_mve_vmulq_x_u8
__builtin_arm_mve_vmvnq_m_n_s16
__builtin_arm_mve_vmvnq_m_n_s32
__builtin_arm_mve_vmvnq_m_n_u16
__builtin_arm_mve_vmvnq_m_n_u32
__builtin_arm_mve_vmvnq_m_s32
__builtin_arm_mve_vmvnq_m_s8
__builtin_arm_mve_vmvnq_m_u16
__builtin_arm_mve_vmvnq_m_u8
__builtin_arm_mve_vmvnq_n_s16
__builtin_arm_mve_vmvnq_n_s32
__builtin_arm_mve_vmvnq_n_u32
__builtin_arm_mve_vmvnq_s16
__builtin_arm_mve_vmvnq_s32
__builtin_arm_mve_vmvnq_s8
__builtin_arm_mve_vmvnq_u16
__builtin_arm_mve_vmvnq_u32
__builtin_arm_mve_vmvnq_u8
__builtin_arm_mve_vmvnq_x_n_s32
__builtin_arm_mve_vmvnq_x_n_u16
__builtin_arm_mve_vmvnq_x_n_u32
0x%8.8llx: 
clang::objc_precise_lifetime
 [%u] %c
Optimize fcf-protection=branch/full (requires LTO).
clang::objc_requires_super
<decoding error>
Generate instrumented code to collect execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
__read_only
cu + 0x%4.4x
__builtin_arm_mve_vmvnq_x_s16
__builtin_arm_mve_vmvnq_x_s32
__builtin_arm_mve_vmvnq_x_s8
__builtin_arm_mve_vmvnq_x_u16
__builtin_arm_mve_vmvnq_x_u8
__builtin_arm_mve_vnegq_f16
__builtin_arm_mve_vnegq_f32
__builtin_arm_mve_vnegq_m_f16
__builtin_arm_mve_vnegq_m_f32
__builtin_arm_mve_vnegq_m_s16
__builtin_arm_mve_vnegq_m_s32
cu + 0x%8.8llx
atmega644pa
indexed (0x%x) rangelist = 
atmega645
indexed (0x%x) loclist = 
__builtin_arm_mve_vnegq_m_s8
__builtin_arm_mve_vnegq_s16
__builtin_arm_mve_vnegq_s32
__builtin_arm_mve_vnegq_s8
__builtin_arm_mve_vnegq_x_f32
__builtin_arm_mve_vnegq_x_s16
__builtin_arm_mve_vnegq_x_s32
__builtin_arm_mve_vornq_f16
__builtin_arm_mve_vornq_f32
__builtin_arm_mve_vornq_m_f16
__builtin_arm_mve_vornq_m_f32
__builtin_arm_mve_vornq_m_s16
__builtin_arm_mve_vornq_m_s32
__builtin_arm_mve_vornq_m_s8
DW_FORM(0x%4.4x)
 offset 
__builtin_arm_mve_vornq_m_u16
__builtin_arm_mve_vornq_m_u32
__builtin_arm_mve_vornq_m_u8
__builtin_arm_mve_vornq_s16
__builtin_arm_mve_vornq_s8
__builtin_arm_mve_vornq_u16
__builtin_arm_mve_vornq_u32
__builtin_arm_mve_vornq_u8
__builtin_arm_mve_vornq_x_f16
__builtin_arm_mve_vornq_x_f32
__builtin_arm_mve_vornq_x_s16
__builtin_arm_mve_vornq_x_s32
__builtin_arm_mve_vornq_x_s8
__builtin_arm_mve_vornq_x_u16
__builtin_arm_mve_vornq_x_u32
__builtin_arm_mve_vorrq_f16
__builtin_arm_mve_vorrq_f32
__builtin_arm_mve_vorrq_m_f16
__builtin_arm_mve_vorrq_m_n_s16
__builtin_arm_mve_vorrq_m_n_s32
__builtin_arm_mve_vorrq_m_n_u16
__builtin_arm_mve_vorrq_m_s16
__builtin_arm_mve_vorrq_m_s32
__builtin_arm_mve_vorrq_m_s8
__builtin_arm_mve_vorrq_m_u16
__builtin_arm_mve_vorrq_m_u32
__builtin_arm_mve_vorrq_m_u8
__builtin_arm_mve_vorrq_n_s16
__builtin_arm_mve_vorrq_n_u16
__builtin_arm_mve_vorrq_n_u32
__builtin_arm_mve_vorrq_s16
__builtin_arm_mve_vorrq_s8
__builtin_arm_mve_vorrq_u16
__builtin_arm_mve_vorrq_u32
__builtin_arm_mve_vorrq_x_f16
__builtin_arm_mve_vorrq_x_f32
__builtin_arm_mve_vorrq_x_s16
__builtin_arm_mve_vorrq_x_s32
__builtin_arm_mve_vorrq_x_s8
__builtin_arm_mve_vorrq_x_u16
__builtin_arm_mve_vorrq_x_u32
__builtin_arm_mve_vpnot
__builtin_arm_mve_vpselq_f16
__builtin_arm_mve_vpselq_f32
__builtin_arm_mve_vpselq_s32
__builtin_arm_mve_vpselq_s64
__builtin_arm_mve_vpselq_s8
__builtin_arm_mve_vpselq_u32
__builtin_arm_mve_vpselq_u64
__builtin_arm_mve_vpselq_u8
__builtin_arm_mve_vqabsq_m_s16
__builtin_arm_mve_vqabsq_m_s32
__builtin_arm_mve_vqabsq_m_s8
__builtin_arm_mve_vqabsq_s16
 is beyond .debug_str bounds
, length = 
atmega6490a
: Type Unit:
__builtin_arm_mve_vqabsq_s32
__builtin_arm_mve_vqabsq_s8
__builtin_arm_mve_vqaddq_m_n_s16
__builtin_arm_mve_vqaddq_m_n_s32
__builtin_arm_mve_vqaddq_m_n_u16
__builtin_arm_mve_vqaddq_m_n_u32
__builtin_arm_mve_vqaddq_m_n_u8
, name = '
clang::opencl_local
, type_offset = 
version = %u, units = %u, slots = %u
__builtin_arm_mve_vqaddq_m_s16
__builtin_arm_mve_vqaddq_m_s32
__builtin_arm_mve_vqaddq_m_s8
__builtin_arm_mve_vqaddq_m_u16
__builtin_arm_mve_vqaddq_m_u32
__builtin_arm_mve_vqaddq_m_u8
__builtin_arm_mve_vqaddq_n_s16
__builtin_arm_mve_vqaddq_n_s32
__builtin_arm_mve_vqaddq_n_u16
__builtin_arm_mve_vqaddq_n_u32
__builtin_arm_mve_vqaddq_n_u8
__builtin_arm_mve_vqaddq_s32
__builtin_arm_mve_vqaddq_s8
__builtin_arm_mve_vqaddq_u16
INFO
__private
__builtin_arm_mve_vqaddq_u32
__builtin_arm_mve_vqaddq_u8
__builtin_arm_mve_vqdmladhq_m_s16
__builtin_arm_mve_vqdmladhq_m_s32
__builtin_arm_mve_vqdmladhq_m_s8
__builtin_arm_mve_vqdmladhq_s16
__builtin_arm_mve_vqdmladhq_s32
__builtin_arm_mve_vqdmladhq_s8
__builtin_arm_mve_vqdmladhxq_m_s32
__builtin_arm_mve_vqdmladhxq_m_s8
__builtin_arm_mve_vqdmladhxq_s16
__builtin_arm_mve_vqdmladhxq_s8
__builtin_arm_mve_vqdmlahq_m_n_s16
__builtin_arm_mve_vqdmlahq_m_n_s32
__builtin_arm_mve_vqdmlahq_n_s16
__builtin_arm_mve_vqdmlahq_n_s32
__builtin_arm_mve_vqdmlahq_n_s8
__builtin_arm_mve_vqdmlashq_m_n_s16
__builtin_arm_mve_vqdmlashq_m_n_s32
__builtin_arm_mve_vqdmlashq_m_n_s8
__builtin_arm_mve_vqdmlashq_n_s16
__builtin_arm_mve_vqdmlashq_n_s8
__builtin_arm_mve_vqdmlsdhq_m_s16
__builtin_arm_mve_vqdmlsdhq_m_s32
__builtin_arm_mve_vqdmlsdhq_s16
__builtin_arm_mve_vqdmlsdhq_s32
__builtin_arm_mve_vqdmlsdhq_s8
__builtin_arm_mve_vqdmlsdhxq_m_s32
__builtin_arm_mve_vqdmlsdhxq_m_s8
__builtin_arm_mve_vqdmlsdhxq_s16
__builtin_arm_mve_vqdmlsdhxq_s32
__builtin_arm_mve_vqdmlsdhxq_s8
__builtin_arm_mve_vqdmulhq_m_n_s16
__builtin_arm_mve_vqdmulhq_m_n_s32
__builtin_arm_mve_vqdmulhq_m_s16
__builtin_arm_mve_vqdmulhq_m_s32
__builtin_arm_mve_vqdmulhq_m_s8
__builtin_arm_mve_vqdmulhq_n_s32
__builtin_arm_mve_vqdmulhq_n_s8
__builtin_arm_mve_vqdmulhq_s16
__builtin_arm_mve_vqdmulhq_s8
__builtin_arm_mve_vqdmullbq_m_n_s16
__builtin_arm_mve_vqdmullbq_m_n_s32
__builtin_arm_mve_vqdmullbq_m_s16
__builtin_arm_mve_vqdmullbq_m_s32
__builtin_arm_mve_vqdmullbq_n_s16
__builtin_arm_mve_vqdmullbq_n_s32
__builtin_arm_mve_vqdmullbq_s32
__builtin_arm_mve_vqdmulltq_m_n_s16
__builtin_arm_mve_vqdmulltq_m_n_s32
__builtin_arm_mve_vqdmulltq_m_s32
__builtin_arm_mve_vqdmulltq_n_s16
__builtin_arm_mve_vqdmulltq_n_s32
__builtin_arm_mve_vqdmulltq_s32
__builtin_arm_mve_vqmovnbq_m_s16
__builtin_arm_mve_vqmovnbq_m_s32
__builtin_arm_mve_vqmovnbq_m_u16
__builtin_arm_mve_vqmovnbq_m_u32
__builtin_arm_mve_vqmovnbq_s16
__builtin_arm_mve_vqmovnbq_s32
UnrollHint
MACINFO
-mincremental-linker-compatible
at90can32
Compilation unit root DIE is not a unit DIE: 
__builtin_arm_mve_vqmovnbq_u16
__builtin_arm_mve_vqmovnbq_u32
__builtin_arm_mve_vqmovntq_m_s16
__builtin_arm_mve_vqmovntq_m_s32
Compilation unit type (
pass_object_size
) and root DIE (
__builtin_arm_mve_vqmovntq_m_u16
__builtin_arm_mve_vqmovntq_m_u32
__builtin_arm_mve_vqmovntq_s16
__builtin_arm_mve_vqmovntq_s32
__builtin_arm_mve_vqmovntq_u32
__builtin_arm_mve_vqmovunbq_m_s16
__builtin_arm_mve_vqmovunbq_m_s32
__builtin_arm_mve_vqmovunbq_s16
__builtin_arm_mve_vqmovunbq_s32
__builtin_arm_mve_vqmovuntq_m_s16
__builtin_arm_mve_vqmovuntq_m_s32
__builtin_arm_mve_vqmovuntq_s32
__builtin_arm_mve_vqnegq_m_s16
__builtin_arm_mve_vqnegq_m_s32
) do not match.
at90can64
patchable_function_entry
Verifying .debug_abbrev...
__builtin_arm_mve_vqnegq_m_s8
__builtin_arm_mve_vqnegq_s16
__builtin_arm_mve_vqnegq_s32
__builtin_arm_mve_vqnegq_s8
__builtin_arm_mve_vqrdmladhq_m_s32
__builtin_arm_mve_vqrdmladhq_m_s8
__builtin_arm_mve_vqrdmladhq_s16
__builtin_arm_mve_vqrdmladhq_s32
__builtin_arm_mve_vqrdmladhq_s8
__builtin_arm_mve_vqrdmladhxq_m_s16
__builtin_arm_mve_vqrdmladhxq_m_s32
__builtin_arm_mve_vqrdmladhxq_s16
__builtin_arm_mve_vqrdmladhxq_s32
__builtin_arm_mve_vqrdmladhxq_s8
__builtin_arm_mve_vqrdmlahq_m_n_s32
__builtin_arm_mve_vqrdmlahq_m_n_s8
__builtin_arm_mve_vqrdmlahq_n_s16
__builtin_arm_mve_vqrdmlahq_n_s8
__builtin_arm_mve_vqrdmlashq_m_n_s16
__builtin_arm_mve_vqrdmlashq_m_n_s32
__builtin_arm_mve_vqrdmlashq_m_n_s8
__builtin_arm_mve_vqrdmlashq_n_s16
__builtin_arm_mve_vqrdmlashq_n_s32
__builtin_arm_mve_vqrdmlashq_n_s8
__builtin_arm_mve_vqrdmlsdhq_m_s32
__builtin_arm_mve_vqrdmlsdhq_m_s8
__builtin_arm_mve_vqrdmlsdhq_s16
__builtin_arm_mve_vqrdmlsdhq_s8
__builtin_arm_mve_vqrdmlsdhxq_m_s16
__builtin_arm_mve_vqrdmlsdhxq_m_s32
__builtin_arm_mve_vqrdmlsdhxq_s16
__builtin_arm_mve_vqrdmlsdhxq_s32
__builtin_arm_mve_vqrdmlsdhxq_s8
__builtin_arm_mve_vqrdmulhq_m_n_s16
__builtin_arm_mve_vqrdmulhq_m_n_s32
__builtin_arm_mve_vqrdmulhq_m_n_s8
__builtin_arm_mve_vqrdmulhq_m_s16
__builtin_arm_mve_vqrdmulhq_m_s8
__builtin_arm_mve_vqrdmulhq_n_s16
__builtin_arm_mve_vqrdmulhq_n_s32
__builtin_arm_mve_vqrdmulhq_s16
__builtin_arm_mve_vqrdmulhq_s32
__builtin_arm_mve_vqrdmulhq_s8
__builtin_arm_mve_vqrshlq_m_n_s32
__builtin_arm_mve_vqrshlq_m_n_s8
__builtin_arm_mve_vqrshlq_m_n_u16
__builtin_arm_mve_vqrshlq_m_n_u32
__builtin_arm_mve_vqrshlq_m_n_u8
__builtin_arm_mve_vqrshlq_m_s16
__builtin_arm_mve_vqrshlq_m_s32
__builtin_arm_mve_vqrshlq_m_u16
__builtin_arm_mve_vqrshlq_m_u32
__builtin_arm_mve_vqrshlq_m_u8
__builtin_arm_mve_vqrshlq_n_s32
__builtin_arm_mve_vqrshlq_n_s8
__builtin_arm_mve_vqrshlq_n_u16
__builtin_arm_mve_vqrshlq_n_u8
__builtin_arm_mve_vqrshlq_s16
__builtin_arm_mve_vqrshlq_s32
__builtin_arm_mve_vqrshlq_s8
__builtin_arm_mve_vqrshlq_u16
__builtin_arm_mve_vqrshlq_u32
__builtin_arm_mve_vqrshlq_u8
__builtin_arm_mve_vqrshrnbq_m_n_s32
__builtin_arm_mve_vqrshrnbq_m_n_u16
__builtin_arm_mve_vqrshrnbq_m_n_u32
Verifying unit: 
at90pwm216
Count
Verifying 
-minline-all-stringops
clang::preserve_most
__builtin_arm_mve_vqrshrnbq_n_s16
__builtin_arm_mve_vqrshrnbq_n_s32
__builtin_arm_mve_vqrshrnbq_n_u16
__builtin_arm_mve_vqrshrnbq_n_u32
__builtin_arm_mve_vqrshrntq_m_n_s16
__builtin_arm_mve_vqrshrntq_m_n_s32
__builtin_arm_mve_vqrshrntq_m_n_u16
__builtin_arm_mve_vqrshrntq_m_n_u32
__builtin_arm_mve_vqrshrntq_n_s16
__builtin_arm_mve_vqrshrntq_n_s32
__builtin_arm_mve_vqrshrntq_n_u16
__builtin_arm_mve_vqrshrntq_n_u32
DW_FORM_ref_addr offset beyond .debug_info bounds:
at90usb646
invalid DIE reference 
two compile unit DIEs, 
__builtin_arm_mve_vqrshrunbq_m_n_s16
__builtin_arm_mve_vqrshrunbq_m_n_s32
__builtin_arm_mve_vqrshrunbq_n_s16
__builtin_arm_mve_vqrshrunbq_n_s32
, have the same DW_AT_stmt_list section offset:
__ptr64
].prologue.file_names[
__builtin_arm_mve_vqrshruntq_m_n_s16
__builtin_arm_mve_vqrshruntq_m_n_s32
__builtin_arm_mve_vqrshruntq_n_s16
__builtin_arm_mve_vqrshruntq_n_s32
__builtin_arm_mve_vqshlq_m_n_s32
__builtin_arm_mve_vqshlq_m_n_s8
__builtin_arm_mve_vqshlq_m_n_u16
__builtin_arm_mve_vqshlq_m_n_u32
__builtin_arm_mve_vqshlq_m_n_u8
__builtin_arm_mve_vqshlq_m_r_s16
__builtin_arm_mve_vqshlq_m_r_s32
__builtin_arm_mve_vqshlq_m_r_u16
__builtin_arm_mve_vqshlq_m_r_u32
__builtin_arm_mve_vqshlq_m_r_u8
__builtin_arm_mve_vqshlq_m_s32
__builtin_arm_mve_vqshlq_m_s8
__builtin_arm_mve_vqshlq_m_u16
__builtin_arm_mve_vqshlq_m_u8
__builtin_arm_mve_vqshlq_n_s16
__builtin_arm_mve_vqshlq_n_s32
__builtin_arm_mve_vqshlq_n_s8
__builtin_arm_mve_vqshlq_n_u16
__builtin_arm_mve_vqshlq_n_u32
__builtin_arm_mve_vqshlq_n_u8
__builtin_arm_mve_vqshlq_r_s32
__builtin_arm_mve_vqshlq_r_s8
__builtin_arm_mve_vqshlq_r_u16
__builtin_arm_mve_vqshlq_r_u8
__builtin_arm_mve_vqshlq_s16
__builtin_arm_mve_vqshlq_s32
__builtin_arm_mve_vqshlq_u16
__builtin_arm_mve_vqshlq_u32
__builtin_arm_mve_vqshlq_u8
__builtin_arm_mve_vqshluq_m_n_s16
__builtin_arm_mve_vqshluq_m_n_s32
__builtin_arm_mve_vqshluq_m_n_s8
__builtin_arm_mve_vqshluq_n_s16
__builtin_arm_mve_vqshluq_n_s8
__builtin_arm_mve_vqshrnbq_m_n_s16
__builtin_arm_mve_vqshrnbq_m_n_s32
__builtin_arm_mve_vqshrnbq_m_n_u32
__builtin_arm_mve_vqshrnbq_n_s16
__builtin_arm_mve_vqshrnbq_n_s32
__builtin_arm_mve_vqshrnbq_n_u32
__builtin_arm_mve_vqshrntq_m_n_s16
__builtin_arm_mve_vqshrntq_m_n_s32
__builtin_arm_mve_vqshrntq_m_n_u16
__builtin_arm_mve_vqshrntq_m_n_u32
__builtin_arm_mve_vqshrntq_n_s16
__builtin_arm_mve_vqshrntq_n_s32
__builtin_arm_mve_vqshrntq_n_u32
__builtin_arm_mve_vqshrunbq_m_n_s16
__builtin_arm_mve_vqshrunbq_m_n_s32
__builtin_arm_mve_vqshrunbq_n_s32
__builtin_arm_mve_vqshruntq_m_n_s16
__builtin_arm_mve_vqshruntq_m_n_s32
__builtin_arm_mve_vqshruntq_n_s32
__builtin_arm_mve_vqsubq_m_n_s16
__builtin_arm_mve_vqsubq_m_n_s32
__builtin_arm_mve_vqsubq_m_n_s8
__builtin_arm_mve_vqsubq_m_n_u16
__builtin_arm_mve_vqsubq_m_n_u32
__builtin_arm_mve_vqsubq_m_n_u8
__builtin_arm_mve_vqsubq_m_s32
__builtin_arm_mve_vqsubq_m_s8
__builtin_arm_mve_vqsubq_m_u16
__builtin_arm_mve_vqsubq_m_u8
__builtin_arm_mve_vqsubq_n_s16
__builtin_arm_mve_vqsubq_n_s32
].dir_idx contains an invalid index: 
at90scr100
gnu::pure
atmega128rfa1
Name Index @ {0:x}: Entry @ {1:x} references a non-existing DIE @ {2:x}.
__builtin_arm_mve_vqsubq_n_s8
__builtin_arm_mve_vqsubq_n_u16
__builtin_arm_mve_vqsubq_n_u32
__builtin_arm_mve_vqsubq_n_u8
__builtin_arm_mve_vqsubq_s16
__builtin_arm_mve_vqsubq_s32
__builtin_arm_mve_vqsubq_s8
__builtin_arm_mve_vqsubq_u16
Name Index @ {0:x}: Entry @ {1:x}: mismatched CU of DIE @ {2:x}: index - {3:x}; debug_info - {4:x}.
YDim
Name Index @ {0:x}: Entry @ {1:x}: mismatched Tag of DIE @ {2:x}: index - {3}; debug_info - {4}.
Enable PGO instrumentation
Name Index @ {0:x}: Entry @ {1:x}: mismatched Name of DIE @ {2:x}: index - {3}; debug_info - {4}.
atmega128rfr2
Name Index @ {0:x}: Entry for DIE @ {1:x} ({2}) with name {3} missing.
__builtin_arm_mve_vqsubq_u32
__builtin_arm_mve_vqsubq_u8
__builtin_arm_mve_vreinterpretq_f16_f32
__builtin_arm_mve_vreinterpretq_f16_s16
__builtin_arm_mve_vreinterpretq_f16_s32
__builtin_arm_mve_vreinterpretq_f16_s64
__builtin_arm_mve_vreinterpretq_f16_s8
__builtin_arm_mve_vreinterpretq_f16_u16
__builtin_arm_mve_vreinterpretq_f16_u64
__builtin_arm_mve_vreinterpretq_f16_u8
__builtin_arm_mve_vreinterpretq_f32_f16
__builtin_arm_mve_vreinterpretq_f32_s16
__builtin_arm_mve_vreinterpretq_f32_s32
__builtin_arm_mve_vreinterpretq_f32_s64
__builtin_arm_mve_vreinterpretq_f32_s8
__builtin_arm_mve_vreinterpretq_f32_u32
__builtin_arm_mve_vreinterpretq_f32_u64
__builtin_arm_mve_vreinterpretq_f32_u8
__builtin_arm_mve_vreinterpretq_s16_f32
__builtin_arm_mve_vreinterpretq_s16_s32
__builtin_arm_mve_vreinterpretq_s16_s64
__builtin_arm_mve_vreinterpretq_s16_u16
__builtin_arm_mve_vreinterpretq_s16_u32
__builtin_arm_mve_vreinterpretq_s16_u64
__builtin_arm_mve_vreinterpretq_s16_u8
__builtin_arm_mve_vreinterpretq_s32_f16
__builtin_arm_mve_vreinterpretq_s32_f32
__builtin_arm_mve_vreinterpretq_s32_s16
__builtin_arm_mve_vreinterpretq_s32_s8
__builtin_arm_mve_vreinterpretq_s32_u16
__builtin_arm_mve_vreinterpretq_s32_u32
__builtin_arm_mve_vreinterpretq_s32_u8
__builtin_arm_mve_vreinterpretq_s64_f16
__builtin_arm_mve_vreinterpretq_s64_f32
__builtin_arm_mve_vreinterpretq_s64_s32
__builtin_arm_mve_vreinterpretq_s64_s8
__builtin_arm_mve_vreinterpretq_s64_u16
__builtin_arm_mve_vreinterpretq_s64_u32
__builtin_arm_mve_vreinterpretq_s64_u64
__builtin_arm_mve_vreinterpretq_s64_u8
__builtin_arm_mve_vreinterpretq_s8_f16
__builtin_arm_mve_vreinterpretq_s8_s16
__builtin_arm_mve_vreinterpretq_s8_s32
__builtin_arm_mve_vreinterpretq_s8_s64
__builtin_arm_mve_vreinterpretq_s8_u32
__builtin_arm_mve_vreinterpretq_s8_u64
__builtin_arm_mve_vreinterpretq_s8_u8
__builtin_arm_mve_vreinterpretq_u16_f32
__builtin_arm_mve_vreinterpretq_u16_s16
__builtin_arm_mve_vreinterpretq_u16_s32
__builtin_arm_mve_vreinterpretq_u16_s64
__builtin_arm_mve_vreinterpretq_u16_s8
__builtin_arm_mve_vreinterpretq_u16_u32
__builtin_arm_mve_vreinterpretq_u16_u64
__builtin_arm_mve_vreinterpretq_u32_f16
__builtin_arm_mve_vreinterpretq_u32_f32
__builtin_arm_mve_vreinterpretq_u32_s16
__builtin_arm_mve_vreinterpretq_u32_s64
__builtin_arm_mve_vreinterpretq_u32_s8
__builtin_arm_mve_vreinterpretq_u32_u16
__builtin_arm_mve_vreinterpretq_u32_u8
__builtin_arm_mve_vreinterpretq_u64_f16
__builtin_arm_mve_vreinterpretq_u64_f32
__builtin_arm_mve_vreinterpretq_u64_s16
__builtin_arm_mve_vreinterpretq_u64_s32
__builtin_arm_mve_vreinterpretq_u64_s64
__builtin_arm_mve_vreinterpretq_u64_s8
__builtin_arm_mve_vreinterpretq_u64_u32
__builtin_arm_mve_vreinterpretq_u64_u8
__builtin_arm_mve_vreinterpretq_u8_f16
__builtin_arm_mve_vreinterpretq_u8_s16
__builtin_arm_mve_vreinterpretq_u8_s32
__builtin_arm_mve_vreinterpretq_u8_s64
__builtin_arm_mve_vreinterpretq_u8_u16
__builtin_arm_mve_vreinterpretq_u8_u32
__builtin_arm_mve_vreinterpretq_u8_u64
__builtin_arm_mve_vrev16q_m_s8
__builtin_arm_mve_vrev16q_m_u8
__builtin_arm_mve_vrev16q_s8
__builtin_arm_mve_vrev16q_u8
DW_SECT_INFO
DW_SECT_LOC
at90usb1286
code signature data
allocate
LC_DYLD_INFO
-fno-max-identifier-length
LC_DYLD_INFO_ONLY
attiny5
LC_DYLD_EXPORTS_TRIE
__builtin_arm_mve_vrev16q_x_s8
__builtin_arm_mve_vrev16q_x_u8
__builtin_arm_mve_vrev32q_f16
__builtin_arm_mve_vrev32q_m_f16
export trie
gnu::selectany
LC_DYLD_CHAINED_FIXUPS
LC_SEGMENT
LC_LAZY_LOAD_DYLIB
iundefsym plus nundefsym in LC_DYSYMTAB load  command extends past the end of the symbol table
 for symbol at index 
ARM_RELOC_HALF
ARM64_RELOC_SUBTRACTOR
ARM64_RELOC_AUTHENTICATED_POINTER
PPC_RELOC_BR14
Mach-O arm64 (ILP32)
Mach-O 64-bit x86-64
xscale-apple-darwin
armv6m-apple-darwin
thumbv7em-apple-darwin
armv7k-apple-darwin
armv7s-apple-darwin
__builtin_arm_mve_vrev32q_m_s16
__builtin_arm_mve_vrev32q_m_s8
__builtin_arm_mve_vrev32q_m_u16
__builtin_arm_mve_vrev32q_m_u8
__builtin_arm_mve_vrev32q_s8
__builtin_arm_mve_vrev32q_u16
__builtin_arm_mve_vrev32q_u8
__builtin_arm_mve_vrev32q_x_f16
__builtin_arm_mve_vrev32q_x_s16
__builtin_arm_mve_vrev32q_x_s8
__builtin_arm_mve_vrev32q_x_u16
__builtin_arm_mve_vrev64q_f16
__builtin_arm_mve_vrev64q_f32
__builtin_arm_mve_vrev64q_m_f16
__builtin_arm_mve_vrev64q_m_s16
__builtin_arm_mve_vrev64q_m_s32
__builtin_arm_mve_vrev64q_m_s8
__builtin_arm_mve_vrev64q_m_u32
__builtin_arm_mve_vrev64q_m_u8
__builtin_arm_mve_vrev64q_s16
__builtin_arm_mve_vrev64q_s32
__builtin_arm_mve_vrev64q_s8
__builtin_arm_mve_vrev64q_u16
__builtin_arm_mve_vrev64q_u32
__builtin_arm_mve_vrev64q_x_f16
__builtin_arm_mve_vrev64q_x_f32
__builtin_arm_mve_vrev64q_x_s16
__builtin_arm_mve_vrev64q_x_s8
__builtin_arm_mve_vrev64q_x_u16
__builtin_arm_mve_vrev64q_x_u32
__builtin_arm_mve_vrhaddq_m_s16
__builtin_arm_mve_vrhaddq_m_s32
__builtin_arm_mve_vrhaddq_m_s8
__builtin_arm_mve_vrhaddq_m_u16
__builtin_arm_mve_vrhaddq_m_u32
__builtin_arm_mve_vrhaddq_m_u8
__builtin_arm_mve_vrhaddq_s16
__builtin_arm_mve_vrhaddq_s8
__builtin_arm_mve_vrhaddq_u16
__builtin_arm_mve_vrhaddq_u32
__builtin_arm_mve_vrhaddq_x_s16
__builtin_arm_mve_vrhaddq_x_s32
__builtin_arm_mve_vrhaddq_x_s8
__builtin_arm_mve_vrhaddq_x_u16
__builtin_arm_mve_vrhaddq_x_u32
__builtin_arm_mve_vrhaddq_x_u8
__builtin_arm_mve_vrmlaldavhaq_p_s32
__builtin_arm_mve_vrmlaldavhaq_p_u32
__builtin_arm_mve_vrmlaldavhaq_s32
__builtin_arm_mve_vrmlaldavhaq_u32
__builtin_arm_mve_vrmlaldavhaxq_p_s32
__builtin_arm_mve_vrmlaldavhq_p_s32
__builtin_arm_mve_vrmlaldavhq_p_u32
__builtin_arm_mve_vrmlaldavhq_s32
__builtin_arm_mve_vrmlaldavhxq_p_s32
__builtin_arm_mve_vrmlaldavhxq_s32
__builtin_arm_mve_vrmlsldavhaq_p_s32
__builtin_arm_mve_vrmlsldavhaxq_p_s32
__builtin_arm_mve_vrmlsldavhaxq_s32
__builtin_arm_mve_vrmlsldavhq_p_s32
__builtin_arm_mve_vrmlsldavhq_s32
__builtin_arm_mve_vrmlsldavhxq_p_s32
__builtin_arm_mve_vrmlsldavhxq_s32
__builtin_arm_mve_vrmulhq_m_s16
__builtin_arm_mve_vrmulhq_m_s8
__builtin_arm_mve_vrmulhq_m_u16
__builtin_arm_mve_vrmulhq_m_u32
chained fixups
attiny9
-fgpu-allow-device-init
 LC_SUB_FRAMEWORK cmdsize too small
-fms-memptr-rep=
LC_SUB_FRAMEWORK
-fgeneric-block-helpers
swiftasynccall
sub_library_command
Equivalent to -march=mips32
sub_library
atxmega16c4
 LC_SUB_CLIENT cmdsize too small
sub_client_command
__builtin_arm_mve_vrmulhq_m_u8
__builtin_arm_mve_vrmulhq_s16
__builtin_arm_mve_vrmulhq_s32
__builtin_arm_mve_vrmulhq_s8
__builtin_arm_mve_vrmulhq_u32
__builtin_arm_mve_vrmulhq_u8
__builtin_arm_mve_vrmulhq_x_s16
__builtin_arm_mve_vrmulhq_x_s32
__builtin_arm_mve_vrmulhq_x_s8
__builtin_arm_mve_vrmulhq_x_u16
__builtin_arm_mve_vrmulhq_x_u32
__builtin_arm_mve_vrndaq_f16
__builtin_arm_mve_vrndaq_f32
__builtin_arm_mve_vrndaq_m_f16
__builtin_arm_mve_vrndaq_x_f16
__builtin_arm_mve_vrndaq_x_f32
__builtin_arm_mve_vrndmq_f16
__builtin_arm_mve_vrndmq_m_f16
__builtin_arm_mve_vrndmq_m_f32
__builtin_arm_mve_vrndmq_x_f16
__builtin_arm_mve_vrndmq_x_f32
__builtin_arm_mve_vrndnq_f16
__builtin_arm_mve_vrndnq_f32
__builtin_arm_mve_vrndnq_m_f16
__builtin_arm_mve_vrndnq_x_f16
__builtin_arm_mve_vrndnq_x_f32
__builtin_arm_mve_vrndpq_f16
__builtin_arm_mve_vrndpq_m_f16
__builtin_arm_mve_vrndpq_m_f32
__builtin_arm_mve_vrndpq_x_f16
__builtin_arm_mve_vrndq_f16
__builtin_arm_mve_vrndq_f32
__builtin_arm_mve_vrndq_m_f16
__builtin_arm_mve_vrndq_m_f32
__builtin_arm_mve_vrndq_x_f16
__builtin_arm_mve_vrndq_x_f32
__builtin_arm_mve_vrndxq_f16
__builtin_arm_mve_vrndxq_m_f16
__builtin_arm_mve_vrndxq_m_f32
__builtin_arm_mve_vrndxq_x_f16
__builtin_arm_mve_vrshlq_m_n_s16
__builtin_arm_mve_vrshlq_m_n_s32
__builtin_arm_mve_vrshlq_m_n_s8
__builtin_arm_mve_vrshlq_m_n_u32
__builtin_arm_mve_vrshlq_m_n_u8
__builtin_arm_mve_vrshlq_m_s16
__builtin_arm_mve_vrshlq_m_s32
__builtin_arm_mve_vrshlq_m_s8
__builtin_arm_mve_vrshlq_m_u16
__builtin_arm_mve_vrshlq_m_u32
client
atxmega16d4
atxmega32e5
GENERIC_RELOC_PB_LA_PTR
__builtin_arm_mve_vrshlq_m_u8
__builtin_arm_mve_vrshlq_n_s16
__builtin_arm_mve_vrshlq_n_s32
__builtin_arm_mve_vrshlq_n_s8
__builtin_arm_mve_vrshlq_n_u32
__builtin_arm_mve_vrshlq_n_u8
__builtin_arm_mve_vrshlq_s16
__builtin_arm_mve_vrshlq_s8
__builtin_arm_mve_vrshlq_u16
__builtin_arm_mve_vrshlq_u32
__builtin_arm_mve_vrshlq_u8
__builtin_arm_mve_vrshlq_x_s16
__builtin_arm_mve_vrshlq_x_s32
__builtin_arm_mve_vrshlq_x_s8
GENERIC_RELOC_LOCAL_SECTDIFF
clang::swift_error_result
X86_64_RELOC_GOT_LOAD
atxmega8e5
X86_64_RELOC_GOT
__builtin_arm_mve_vrshlq_x_u16
__builtin_arm_mve_vrshlq_x_u32
__builtin_arm_mve_vrshlq_x_u8
__builtin_arm_mve_vrshrnbq_m_n_s16
X86_64_RELOC_SUBTRACTOR
NewtypeKind
X86_64_RELOC_SIGNED_1
__builtin_arm_mve_vrshrnbq_m_n_s32
__builtin_arm_mve_vrshrnbq_m_n_u16
__builtin_arm_mve_vrshrnbq_m_n_u32
__builtin_arm_mve_vrshrnbq_n_s16
__builtin_arm_mve_vrshrnbq_n_u16
__builtin_arm_mve_vrshrnbq_n_u32
__builtin_arm_mve_vrshrntq_m_n_s16
__builtin_arm_mve_vrshrntq_m_n_s32
__builtin_arm_mve_vrshrntq_m_n_u16
__builtin_arm_mve_vrshrntq_m_n_u32
__builtin_arm_mve_vrshrntq_n_s16
__builtin_arm_mve_vrshrntq_n_u16
__builtin_arm_mve_vrshrntq_n_u32
__builtin_arm_mve_vrshrq_m_n_s16
__builtin_arm_mve_vrshrq_m_n_s8
__builtin_arm_mve_vrshrq_m_n_u16
__builtin_arm_mve_vrshrq_m_n_u32
__builtin_arm_mve_vrshrq_n_s16
__builtin_arm_mve_vrshrq_n_s32
__builtin_arm_mve_vrshrq_n_s8
__builtin_arm_mve_vrshrq_n_u16
__builtin_arm_mve_vrshrq_n_u32
__builtin_arm_mve_vrshrq_n_u8
__builtin_arm_mve_vrshrq_x_n_s16
__builtin_arm_mve_vrshrq_x_n_s8
__builtin_arm_mve_vrshrq_x_n_u16
__builtin_arm_mve_vrshrq_x_n_u32
__builtin_arm_mve_vsbciq_m_s32
__builtin_arm_mve_vsbciq_m_u32
__builtin_arm_mve_vsbciq_s32
__builtin_arm_mve_vsbcq_m_s32
__builtin_arm_mve_vsbcq_m_u32
__builtin_arm_mve_vsbcq_s32
__builtin_arm_mve_vsbcq_u32
__builtin_arm_mve_vsetq_lane_f16
__builtin_arm_mve_vsetq_lane_f32
__builtin_arm_mve_vsetq_lane_s16
__builtin_arm_mve_vsetq_lane_s64
__builtin_arm_mve_vsetq_lane_s8
__builtin_arm_mve_vsetq_lane_u16
__builtin_arm_mve_vsetq_lane_u64
__builtin_arm_mve_vsetq_lane_u8
__builtin_arm_mve_vshlcq_m_s16
__builtin_arm_mve_vshlcq_m_s8
__builtin_arm_mve_vshlcq_m_u16
__builtin_arm_mve_vshlcq_m_u32
__builtin_arm_mve_vshlcq_m_u8
__builtin_arm_mve_vshlcq_s16
__builtin_arm_mve_vshlcq_s32
__builtin_arm_mve_vshlcq_s8
__builtin_arm_mve_vshlcq_u32
__builtin_arm_mve_vshlcq_u8
__builtin_arm_mve_vshllbq_m_n_s16
__builtin_arm_mve_vshllbq_m_n_u16
__builtin_arm_mve_vshllbq_m_n_u8
__builtin_arm_mve_vshllbq_n_s16
X86_64_RELOC_SIGNED_2
PPC_RELOC_LO14
atxmega64d4
PPC_RELOC_SECTDIFF
__builtin_arm_mve_vshllbq_n_s8
__builtin_arm_mve_vshllbq_n_u16
__builtin_arm_mve_vshllbq_n_u8
__builtin_arm_mve_vshllbq_x_n_s16
__builtin_arm_mve_vshllbq_x_n_s8
__builtin_arm_mve_vshllbq_x_n_u16
__builtin_arm_mve_vshllbq_x_n_u8
__builtin_arm_mve_vshlltq_m_n_s16
__builtin_arm_mve_vshlltq_m_n_u16
__builtin_arm_mve_vshlltq_m_n_u8
__builtin_arm_mve_vshlltq_n_s16
PPC_RELOC_PB_LA_PTR
TestState
PPC_RELOC_HI16_SECTDIFF
Equivalent to -march=mips64r3
PPC_RELOC_LO16_SECTDIFF
atxmega64a1
PPC_RELOC_HA16_SECTDIFF
PPC_RELOC_LO14_SECTDIFF
__builtin_arm_mve_vshlltq_n_s8
__builtin_arm_mve_vshlltq_n_u16
__builtin_arm_mve_vshlltq_n_u8
__builtin_arm_mve_vshlltq_x_n_s16
__builtin_arm_mve_vshlltq_x_n_u16
__builtin_arm_mve_vshlltq_x_n_u8
__builtin_arm_mve_vshlq_m_n_s16
__builtin_arm_mve_vshlq_m_n_s32
__builtin_arm_mve_vshlq_m_n_s8
__builtin_arm_mve_vshlq_m_n_u16
__builtin_arm_mve_vshlq_m_n_u32
__builtin_arm_mve_vshlq_m_r_s16
__builtin_arm_mve_vshlq_m_r_s32
__builtin_arm_mve_vshlq_m_r_s8
__builtin_arm_mve_vshlq_m_r_u32
__builtin_arm_mve_vshlq_m_r_u8
__builtin_arm_mve_vshlq_m_s16
__builtin_arm_mve_vshlq_m_s8
__builtin_arm_mve_vshlq_m_u16
__builtin_arm_mve_vshlq_m_u32
__builtin_arm_mve_vshlq_m_u8
__builtin_arm_mve_vshlq_n_s16
__builtin_arm_mve_vshlq_n_s32
__builtin_arm_mve_vshlq_n_s8
__builtin_arm_mve_vshlq_n_u32
__builtin_arm_mve_vshlq_n_u8
__builtin_arm_mve_vshlq_r_s16
__builtin_arm_mve_vshlq_r_s8
__builtin_arm_mve_vshlq_r_u16
__builtin_arm_mve_vshlq_r_u32
__builtin_arm_mve_vshlq_s16
__builtin_arm_mve_vshlq_s32
__builtin_arm_mve_vshlq_s8
__builtin_arm_mve_vshlq_u16
__builtin_arm_mve_vshlq_u32
__builtin_arm_mve_vshlq_u8
__builtin_arm_mve_vshlq_x_n_s16
__builtin_arm_mve_vshlq_x_n_s8
__builtin_arm_mve_vshlq_x_n_u16
__builtin_arm_mve_vshlq_x_n_u32
__builtin_arm_mve_vshlq_x_s16
__builtin_arm_mve_vshlq_x_s32
__builtin_arm_mve_vshlq_x_s8
__builtin_arm_mve_vshlq_x_u32
__builtin_arm_mve_vshlq_x_u8
__builtin_arm_mve_vshrnbq_m_n_s16
__builtin_arm_mve_vshrnbq_m_n_s32
__builtin_arm_mve_vshrnbq_m_n_u16
__builtin_arm_mve_vshrnbq_m_n_u32
__builtin_arm_mve_vshrnbq_n_s16
__builtin_arm_mve_vshrnbq_n_u16
__builtin_arm_mve_vshrnbq_n_u32
__builtin_arm_mve_vshrntq_m_n_s16
__builtin_arm_mve_vshrntq_m_n_u16
__builtin_arm_mve_vshrntq_m_n_u32
__builtin_arm_mve_vshrntq_n_s16
__builtin_arm_mve_vshrntq_n_s32
__builtin_arm_mve_vshrntq_n_u16
__builtin_arm_mve_vshrntq_n_u32
__builtin_arm_mve_vshrq_m_n_s16
__builtin_arm_mve_vshrq_m_n_s32
__builtin_arm_mve_vshrq_m_n_s8
__builtin_arm_mve_vshrq_m_n_u16
__builtin_arm_mve_vshrq_m_n_u32
PPC_RELOC_LOCAL_SECTDIFF
avrxmega5
armv7-apple-darwin
clang::type_tag_for_datatype
cortex-m4
export info size 
Disallow merging of constants
 in export trie data at node: 0x
atxmega128d4
export info size: 0x
__builtin_arm_mve_vshrq_m_n_u8
__builtin_arm_mve_vshrq_n_s16
__builtin_arm_mve_vshrq_n_s32
__builtin_arm_mve_vshrq_n_s8
 too big and extends past end of trie data
RewriteTarget
flags 
__builtin_arm_mve_vshrq_n_u16
__builtin_arm_mve_vshrq_n_u32
__builtin_arm_mve_vshrq_n_u8
__builtin_arm_mve_vshrq_x_n_s16
__builtin_arm_mve_vshrq_x_n_s8
__builtin_arm_mve_vshrq_x_n_u16
__builtin_arm_mve_vshrq_x_n_u32
__builtin_arm_mve_vshrq_x_n_u8
__builtin_arm_mve_vsliq_m_n_s16
__builtin_arm_mve_vsliq_m_n_s32
__builtin_arm_mve_vsliq_m_n_s8
__builtin_arm_mve_vsliq_m_n_u32
__builtin_arm_mve_vsliq_m_n_u8
__builtin_arm_mve_vsliq_n_s16
__builtin_arm_mve_vsliq_n_s8
__builtin_arm_mve_vsliq_n_u16
__builtin_arm_mve_vsliq_n_u32
__builtin_arm_mve_vsriq_m_n_s16
__builtin_arm_mve_vsriq_m_n_s32
__builtin_arm_mve_vsriq_m_n_s8
__builtin_arm_mve_vsriq_m_n_u16
__builtin_arm_mve_vsriq_m_n_u32
__builtin_arm_mve_vsriq_m_n_u8
__builtin_arm_mve_vsriq_n_s16
__builtin_arm_mve_vsriq_n_s8
__builtin_arm_mve_vsriq_n_u16
__builtin_arm_mve_vsriq_n_u32
__builtin_arm_mve_vst1q_f16
__builtin_arm_mve_vst1q_f32
__builtin_arm_mve_vst1q_p_f16
__builtin_arm_mve_vst1q_p_s16
__builtin_arm_mve_vst1q_p_s32
__builtin_arm_mve_vst1q_p_s8
__builtin_arm_mve_vst1q_p_u16
__builtin_arm_mve_vst1q_p_u32
__builtin_arm_mve_vst1q_p_u8
__builtin_arm_mve_vst1q_s16
__builtin_arm_mve_vst1q_s8
__builtin_arm_mve_vst1q_u16
__builtin_arm_mve_vst1q_u32
__builtin_arm_mve_vst2q_f16
__builtin_arm_mve_vst2q_f32
__builtin_arm_mve_vst2q_s16
unsupported exported symbol kind: 
atxmega192a3
__builtin_arm_mve_vst2q_s32
__builtin_arm_mve_vst2q_s8
__builtin_arm_mve_vst2q_u16
__builtin_arm_mve_vst2q_u32
__builtin_arm_mve_vst2q_u8
__builtin_arm_mve_vst4q_f16
__builtin_arm_mve_vst4q_f32
__builtin_arm_mve_vst4q_s16
__builtin_arm_mve_vst4q_s8
__builtin_arm_mve_vst4q_u16
__builtin_arm_mve_vst4q_u32
__builtin_arm_mve_vstrbq_p_s16
__builtin_arm_mve_vstrbq_p_s32
__builtin_arm_mve_vstrbq_p_s8
__builtin_arm_mve_vstrbq_p_u32
__builtin_arm_mve_vstrbq_p_u8
__builtin_arm_mve_vstrbq_s16
__builtin_arm_mve_vstrbq_s32
__builtin_arm_mve_vstrbq_s8
__builtin_arm_mve_vstrbq_scatter_offset_p_s16
__builtin_arm_mve_vstrbq_scatter_offset_p_s32
__builtin_arm_mve_vstrbq_scatter_offset_p_u16
__builtin_arm_mve_vstrbq_scatter_offset_p_u32
__builtin_arm_mve_vstrbq_scatter_offset_p_u8
for REBASE_OPCODE_ADD_ADDR_IMM_SCALED 
clang::using_if_exists
for REBASE_OPCODE_DO_REBASE_IMM_TIMES 
-fno-merge-constants
ExtraDiscrimination
BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB not allowed in weak bind table for opcode at: 0x
-mkernel
for BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB 
atxmega256d3
for BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB bad library ordinal: 
for BIND_OPCODE_SET_DYLIB_SPECIAL_IMM unknown special ordinal: 
__builtin_arm_mve_vstrbq_scatter_offset_s16
__builtin_arm_mve_vstrbq_scatter_offset_s32
__builtin_arm_mve_vstrbq_scatter_offset_s8
__builtin_arm_mve_vstrbq_scatter_offset_u16
__builtin_arm_mve_vstrbq_scatter_offset_u8
__builtin_arm_mve_vstrbq_u16
__builtin_arm_mve_vstrbq_u32
__builtin_arm_mve_vstrbq_u8
__builtin_arm_mve_vstrdq_scatter_base_p_s64
__builtin_arm_mve_vstrdq_scatter_base_p_u64
__builtin_arm_mve_vstrdq_scatter_base_s64
__builtin_arm_mve_vstrdq_scatter_base_wb_p_s64
__builtin_arm_mve_vstrdq_scatter_base_wb_p_u64
__builtin_arm_mve_vstrdq_scatter_base_wb_s64
__builtin_arm_mve_vstrdq_scatter_offset_p_s64
__builtin_arm_mve_vstrdq_scatter_offset_p_u64
__builtin_arm_mve_vstrdq_scatter_offset_s64
__builtin_arm_mve_vstrdq_scatter_shifted_offset_p_s64
__builtin_arm_mve_vstrdq_scatter_shifted_offset_p_u64
__builtin_arm_mve_vstrdq_scatter_shifted_offset_s64
__builtin_arm_mve_vstrdq_scatter_shifted_offset_u64
__builtin_arm_mve_vstrhq_f16
__builtin_arm_mve_vstrhq_p_f16
__builtin_arm_mve_vstrhq_p_s16
__builtin_arm_mve_vstrhq_p_u16
__builtin_arm_mve_vstrhq_p_u32
__builtin_arm_mve_vstrhq_s16
__builtin_arm_mve_vstrhq_scatter_offset_f16
__builtin_arm_mve_vstrhq_scatter_offset_p_f16
__builtin_arm_mve_vstrhq_scatter_offset_p_s16
__builtin_arm_mve_vstrhq_scatter_offset_p_u16
__builtin_arm_mve_vstrhq_scatter_offset_p_u32
__builtin_arm_mve_vstrhq_scatter_offset_s16
__builtin_arm_mve_vstrhq_scatter_offset_s32
__builtin_arm_mve_vstrhq_scatter_offset_u16
__builtin_arm_mve_vstrhq_scatter_offset_u32
__builtin_arm_mve_vstrhq_scatter_shifted_offset_f16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_s16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_s32
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_u16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_s16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_s32
__builtin_arm_mve_vstrhq_scatter_shifted_offset_u16
__builtin_arm_mve_vstrhq_u16
__builtin_arm_mve_vstrhq_u32
__builtin_arm_mve_vstrwq_f32
__builtin_arm_mve_vstrwq_p_f32
__builtin_arm_mve_vstrwq_p_s32
__builtin_arm_mve_vstrwq_p_u32
__builtin_arm_mve_vstrwq_s32
for BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM symbol name extends past opcodes for opcode at: 0x
atxmega384c3
avrxmega3/short-calls
bad bind sub-obcode of BIND_OPCODE_THREADED (bad sub-opcode value 0x
__builtin_arm_mve_vstrwq_scatter_base_f32
__builtin_arm_mve_vstrwq_scatter_base_p_f32
__builtin_arm_mve_vstrwq_scatter_base_p_s32
__builtin_arm_mve_vstrwq_scatter_base_p_u32
__builtin_arm_mve_vstrwq_scatter_base_u32
__builtin_arm_mve_vstrwq_scatter_base_wb_f32
__builtin_arm_mve_vstrwq_scatter_base_wb_p_f32
__builtin_arm_mve_vstrwq_scatter_base_wb_p_u32
__builtin_arm_mve_vstrwq_scatter_base_wb_s32
__builtin_arm_mve_vstrwq_scatter_base_wb_u32
__builtin_arm_mve_vstrwq_scatter_offset_f32
__builtin_arm_mve_vstrwq_scatter_offset_p_f32
__builtin_arm_mve_vstrwq_scatter_offset_p_s32
__builtin_arm_mve_vstrwq_scatter_offset_p_u32
bad bind info (bad opcode value 0x
weak_import
 is past end of segment)
attiny204
 is past end of the same page)
__builtin_arm_mve_vstrwq_scatter_offset_s32
__builtin_arm_mve_vstrwq_scatter_offset_u32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_f32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_p_f32
missing preceding *_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB
export_name
bad segIndex (too large)
__builtin_arm_mve_vstrwq_scatter_shifted_offset_p_s32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_p_u32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_s32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_u32
__builtin_arm_mve_vsubq_f16
__builtin_arm_mve_vsubq_f32
__builtin_arm_mve_vsubq_m_f16
__builtin_arm_mve_vsubq_m_f32
__builtin_arm_mve_vsubq_m_n_f16
__builtin_arm_mve_vsubq_m_n_f32
__builtin_arm_mve_vsubq_m_n_s16
__builtin_arm_mve_vsubq_m_n_s8
__builtin_arm_mve_vsubq_m_n_u16
__builtin_arm_mve_vsubq_m_n_u32
__builtin_arm_mve_vsubq_m_s16
__builtin_arm_mve_vsubq_m_s32
__builtin_arm_mve_vsubq_m_s8
__builtin_arm_mve_vsubq_m_u32
__builtin_arm_mve_vsubq_m_u8
__builtin_arm_mve_vsubq_n_f16
__builtin_arm_mve_vsubq_n_f32
__builtin_arm_mve_vsubq_n_s16
__builtin_arm_mve_vsubq_n_s32
__builtin_arm_mve_vsubq_n_s8
__builtin_arm_mve_vsubq_n_u32
__builtin_arm_mve_vsubq_n_u8
__builtin_arm_mve_vsubq_s16
__builtin_arm_mve_vsubq_s8
__builtin_arm_mve_vsubq_u16
__builtin_arm_mve_vsubq_u32
__builtin_arm_mve_vsubq_x_f16
__builtin_arm_mve_vsubq_x_f32
__builtin_arm_mve_vsubq_x_n_f16
__builtin_arm_mve_vsubq_x_n_f32
__builtin_arm_mve_vsubq_x_n_s16
__builtin_arm_mve_vsubq_x_n_s32
__builtin_arm_mve_vsubq_x_n_s8
__builtin_arm_mve_vsubq_x_n_u32
__builtin_arm_mve_vsubq_x_n_u8
__builtin_arm_mve_vsubq_x_s16
__builtin_arm_mve_vsubq_x_s8
__builtin_arm_mve_vsubq_x_u16
__builtin_arm_mve_vsubq_x_u32
__builtin_arm_mve_vuninitializedq_f16
__builtin_arm_mve_vuninitializedq_f32
__builtin_arm_mve_vuninitializedq_polymorphic_f16
__builtin_arm_mve_vuninitializedq_polymorphic_f32
__builtin_arm_mve_vuninitializedq_polymorphic_s16
__builtin_arm_mve_vuninitializedq_polymorphic_s32
__builtin_arm_mve_vuninitializedq_polymorphic_s64
__builtin_arm_mve_vuninitializedq_polymorphic_u16
__builtin_arm_mve_vuninitializedq_polymorphic_u32
__builtin_arm_mve_vuninitializedq_polymorphic_u64
__builtin_arm_mve_vuninitializedq_s16
__builtin_arm_mve_vuninitializedq_s32
__builtin_arm_mve_vuninitializedq_s64
bad offset, extends beyond section boundary
Resources
attiny417
DWARF
__builtin_arm_mve_vuninitializedq_s8
__builtin_arm_mve_vuninitializedq_u16
__builtin_arm_mve_vuninitializedq_u32
__builtin_arm_mve_vuninitializedq_u64
__builtin_arm_mve_vuninitializedq_u8
__builtin_arm_mve_vabavq_p
__builtin_arm_mve_vabavq
__builtin_arm_mve_vabdq_m
__builtin_arm_mve_vabdq_x
__builtin_arm_mve_vabsq
%s: expected directory 'Contents/Resources/DWARF' in dSYM bundle
ArgumentCount
%s: no objects found in dSYM bundle
-mlinker-version=
__swift5_fieldmd
attiny804
__swift5_assocty
__swift5_capture
__builtin_arm_mve_vabsq_m
__builtin_arm_mve_vabsq_x
__builtin_arm_mve_vadciq_m
__builtin_arm_mve_vadciq
__builtin_arm_mve_vadcq_m
__builtin_arm_mve_vadcq
__builtin_arm_mve_vaddlvaq_p
__builtin_arm_mve_vaddlvaq
__builtin_arm_mve_vaddlvq_p
__builtin_arm_mve_vaddlvq
__builtin_arm_mve_vaddq
__builtin_arm_mve_vaddq_m
__builtin_arm_mve_vaddvaq_p
__builtin_arm_mve_vaddvaq
__builtin_arm_mve_vaddvq_p
__builtin_arm_mve_vandq
__builtin_arm_mve_vandq_m
__builtin_arm_mve_vandq_x
__builtin_arm_mve_vbicq_m
__builtin_arm_mve_vbicq_m_n
__builtin_arm_mve_vbicq_x
__builtin_arm_mve_vbrsrq_m
__builtin_arm_mve_vbrsrq
__builtin_arm_mve_vbrsrq_x
__builtin_arm_mve_vcaddq_rot270
__builtin_arm_mve_vcaddq_rot270_x
__builtin_arm_mve_vcaddq_rot90
__builtin_arm_mve_vcaddq_rot90_m
__builtin_arm_mve_vclsq_m
__builtin_arm_mve_vclsq
__builtin_arm_mve_vclsq_x
__builtin_arm_mve_vclzq
__builtin_arm_mve_vclzq_x
__builtin_arm_mve_vcmlaq
__builtin_arm_mve_vcmlaq_m
__builtin_arm_mve_vcmlaq_rot180
__builtin_arm_mve_vcmlaq_rot180_m
__builtin_arm_mve_vcmlaq_rot270
__builtin_arm_mve_vcmlaq_rot90
__builtin_arm_mve_vcmlaq_rot90_m
__builtin_arm_mve_vcmpcsq_m
__builtin_arm_mve_vcmpeqq
__builtin_arm_mve_vcmpeqq_m
__builtin_arm_mve_vcmpgeq
__builtin_arm_mve_vcmpgtq
__builtin_arm_mve_vcmpgtq_m
__builtin_arm_mve_vcmphiq_m
__builtin_arm_mve_vcmphiq
__builtin_arm_mve_vcmpleq
__builtin_arm_mve_vcmpleq_m
__builtin_arm_mve_vcmpltq
__builtin_arm_mve_vcmpneq
__builtin_arm_mve_vcmpneq_m
__builtin_arm_mve_vcmulq
__builtin_arm_mve_vcmulq_rot180
__builtin_arm_mve_vcmulq_rot180_m
__builtin_arm_mve_vcmulq_rot180_x
__builtin_arm_mve_vcmulq_rot270_m
__builtin_arm_mve_vcmulq_rot270_x
__builtin_arm_mve_vcmulq_rot90
__builtin_arm_mve_vcmulq_rot90_m
__builtin_arm_mve_vcmulq_rot90_x
__builtin_arm_mve_vcmulq_x
__builtin_arm_mve_vcvtaq_m
__swift5_typeref
attiny806
Select Windows run-time library
__swift5_protos
-fno-module-maps
__swift5_acfuncs
-fno-module-private
) of LC_DYSYMTAB command 
atmega3208
module table
__builtin_arm_mve_vcvtmq_m
__builtin_arm_mve_vcvtnq_m
__builtin_arm_mve_vcvtpq_m
__builtin_arm_mve_vcvtq
extrefsymoff field of LC_DYSYMTAB command 
functions and Objective-C methods
extrefsymoff field plus nextrefsyms field times sizeof(struct dylib_reference) of LC_DYSYMTAB command 
__builtin_arm_mve_vcvtq_m
__builtin_arm_mve_vcvtq_m_n
__builtin_arm_mve_vcvtq_n
__builtin_arm_mve_vcvtq_x
reference table
atmega3209
indirectsymoff field of LC_DYSYMTAB command 
__builtin_arm_mve_vcvtq_x_n
__builtin_arm_mve_vddupq_m
__builtin_arm_mve_vddupq_u16
__builtin_arm_mve_vddupq_u32
__builtin_arm_mve_vddupq_u8
__builtin_arm_mve_vddupq_x_u16
__builtin_arm_mve_vddupq_x_u32
__builtin_arm_mve_vddupq_x_u8
__builtin_arm_mve_vdwdupq_m
__builtin_arm_mve_vdwdupq_u16
__builtin_arm_mve_vdwdupq_u32
__builtin_arm_mve_vdwdupq_x_u16
__builtin_arm_mve_vdwdupq_x_u32
__builtin_arm_mve_vdwdupq_x_u8
__builtin_arm_mve_veorq_m
__builtin_arm_mve_veorq_x
__builtin_arm_mve_vfmaq
__builtin_arm_mve_vfmaq_m
__builtin_arm_mve_vfmasq_m
__builtin_arm_mve_vfmasq
__builtin_arm_mve_vfmsq
__builtin_arm_mve_vgetq_lane
__builtin_arm_mve_vhaddq_m
__builtin_arm_mve_vhaddq
__builtin_arm_mve_vhcaddq_rot270_m
__builtin_arm_mve_vhcaddq_rot270
__builtin_arm_mve_vhcaddq_rot270_x
__builtin_arm_mve_vhcaddq_rot90
__builtin_arm_mve_vhcaddq_rot90_x
__builtin_arm_mve_vhsubq_m
__builtin_arm_mve_vhsubq
__builtin_arm_mve_vhsubq_x
__builtin_arm_mve_vidupq_m
__builtin_arm_mve_vidupq_u16
__builtin_arm_mve_vidupq_u8
__builtin_arm_mve_vidupq_x_u16
__builtin_arm_mve_vidupq_x_u32
__builtin_arm_mve_viwdupq_m
__builtin_arm_mve_viwdupq_u16
__builtin_arm_mve_viwdupq_u32
__builtin_arm_mve_viwdupq_x_u16
__builtin_arm_mve_viwdupq_x_u32
__builtin_arm_mve_viwdupq_x_u8
__builtin_arm_mve_vld1q
__builtin_arm_mve_vld1q_z
__builtin_arm_mve_vld2q
__builtin_arm_mve_vld4q
__builtin_arm_mve_vldrbq_gather_offset_z
__builtin_arm_mve_vldrdq_gather_offset
__builtin_arm_mve_vldrdq_gather_offset_z
__builtin_arm_mve_vldrdq_gather_shifted_offset_z
__builtin_arm_mve_vldrhq_gather_offset
__builtin_arm_mve_vldrhq_gather_offset_z
__builtin_arm_mve_vldrhq_gather_shifted_offset_z
__builtin_arm_mve_vldrwq_gather_offset
__builtin_arm_mve_vldrwq_gather_offset_z
__builtin_arm_mve_vldrwq_gather_shifted_offset
__builtin_arm_mve_vldrwq_gather_shifted_offset_z
__builtin_arm_mve_vmaxaq_m
__builtin_arm_mve_vmaxaq
__builtin_arm_mve_vmaxavq
__builtin_arm_mve_vmaxnmaq
__builtin_arm_mve_vmaxnmaq_m
-mlong-calls
extreloff field of LC_DYSYMTAB command 
atmega4808
extreloff field plus nextrel field times sizeof(struct relocation_info) of LC_DYSYMTAB command 
local variables
dyld rebase info
-mlong-double-128
bind_off field of 
attiny1607
 name.offset field too small, not past the end of the dylinker_command struct
global functions
 dyld name extends past the end of the load command
__builtin_arm_mve_vmaxnmavq
__builtin_arm_mve_vmaxnmavq_p
__builtin_arm_mve_vmaxnmq
__builtin_arm_mve_vmaxnmq_m
more than one LC_VERSION_MIN_MACOSX, LC_VERSION_MIN_IPHONEOS, LC_VERSION_MIN_TVOS or LC_VERSION_MIN_WATCHOS command
attiny1626
 LC_NOTE has incorrect cmdsize
__builtin_arm_mve_vmaxnmq_x
__builtin_arm_mve_vmaxnmvq
__builtin_arm_mve_vmaxnmvq_p
__builtin_arm_mve_vmaxq_m
__builtin_arm_mve_vmaxq
__builtin_arm_mve_vmaxq_x
__builtin_arm_mve_vmaxvq_p
__builtin_arm_mve_vmaxvq
__builtin_arm_mve_vminaq
__builtin_arm_mve_vminavq_p
__builtin_arm_mve_vminavq
__builtin_arm_mve_vminnmaq_m
__builtin_arm_mve_vminnmavq
__builtin_arm_mve_vminnmavq_p
__builtin_arm_mve_vminnmq_m
__builtin_arm_mve_vminnmq_x
__builtin_arm_mve_vminnmvq
__builtin_arm_mve_vminnmvq_p
__builtin_arm_mve_vminq_m
__builtin_arm_mve_vminq
__builtin_arm_mve_vminq_x
__builtin_arm_mve_vminvq
__builtin_arm_mve_vmladavaq_p
__builtin_arm_mve_vmladavaq
__builtin_arm_mve_vmladavaxq
__builtin_arm_mve_vmladavq_p
__builtin_arm_mve_vmladavq
 LC_BUILD_VERSION_COMMAND has incorrect cmdsize
cryptoff field plus cryptsize field of 
/usr/avr
 LC_LINKER_OPTION cmdsize too small
__builtin_arm_mve_vmladavxq_p
__builtin_arm_mve_vmladavxq
__builtin_arm_mve_vmlaldavaq_p
__builtin_arm_mve_vmlaldavaq
__builtin_arm_mve_vmlaldavaxq_p
__builtin_arm_mve_vmlaldavaxq
__builtin_arm_mve_vmlaldavq_p
__builtin_arm_mve_vmlaldavq
__builtin_arm_mve_vmlaldavxq
__builtin_arm_mve_vmlaq_m
__builtin_arm_mve_vmlaq
__builtin_arm_mve_vmlasq
__builtin_arm_mve_vmlsdavaq_p
__builtin_arm_mve_vmlsdavaq
__builtin_arm_mve_vmlsdavaxq_p
__builtin_arm_mve_vmlsdavaxq
__builtin_arm_mve_vmlsdavq_p
__builtin_arm_mve_vmlsdavq
__builtin_arm_mve_vmlsdavxq_p
__builtin_arm_mve_vmlsdavxq
__builtin_arm_mve_vmlsldavaq_p
__builtin_arm_mve_vmlsldavaq
__builtin_arm_mve_vmlsldavaxq
__builtin_arm_mve_vmlsldavq_p
__builtin_arm_mve_vmlsldavq
__builtin_arm_mve_vmlsldavxq
__builtin_arm_mve_vmovlbq_m
__builtin_arm_mve_vmovlbq
__builtin_arm_mve_vmovltq_m
__builtin_arm_mve_vmovltq
__builtin_arm_mve_vmovltq_x
__builtin_arm_mve_vmovnbq_m
__builtin_arm_mve_vmovnbq
__builtin_arm_mve_vmovntq_m
__builtin_arm_mve_vmovntq
 LC_LINKER_OPTION string #
typedefs, functions, function pointers, Objective-C methods, and variables
 is not NULL terminated
-fno-modules-error-recovery
 count not x86_FLOAT_STATE_COUNT for flavor number 
+march=rv64imac
 which is a x86_FLOAT_STATE flavor in 
__builtin_arm_mve_vmulhq_m
__builtin_arm_mve_vmulhq
__builtin_arm_mve_vmulhq_x
__builtin_arm_mve_vmullbq_int_m
__builtin_arm_mve_vmullbq_int_x
__builtin_arm_mve_vmullbq_poly_m
__builtin_arm_mve_vmullbq_poly
__builtin_arm_mve_vmullbq_poly_x
__builtin_arm_mve_vmulltq_int_m
__builtin_arm_mve_vmulltq_int
__builtin_arm_mve_vmulltq_int_x
__builtin_arm_mve_vmulltq_poly_m
__builtin_arm_mve_vmulltq_poly
__builtin_arm_mve_vmulltq_poly_x
__builtin_arm_mve_vmulq
__builtin_arm_mve_vmulq_x
__builtin_arm_mve_vmvnq_m
__builtin_arm_mve_vmvnq
__builtin_arm_mve_vnegq
__builtin_arm_mve_vnegq_m
__builtin_arm_mve_vnegq_x
__builtin_arm_mve_vornq
__builtin_arm_mve_vornq_m
__builtin_arm_mve_vornq_x
__builtin_arm_mve_vorrq
__builtin_arm_mve_vorrq_m
__builtin_arm_mve_vorrq_m_n
__builtin_arm_mve_vorrq_x
__builtin_arm_mve_vpselq
 count not x86_THREAD_STATE64_COUNT for flavor number 
parameters and typedefs
 which is a x86_THREAD_STATE64 flavor in 
Enable only control-flow mitigations for Load Value Injection (LVI)
 which is a ARM_THREAD_STATE64 flavor in 
+mabi=lp64d
 ARM_THREAD_STATE64 extends past end of command in 
__builtin_arm_mve_vqabsq_m
__builtin_arm_mve_vqabsq
__builtin_arm_mve_vqaddq_m
__builtin_arm_mve_vqaddq
__builtin_arm_mve_vqdmladhq
__builtin_arm_mve_vqdmladhxq_m
__builtin_arm_mve_vqdmladhxq
__builtin_arm_mve_vqdmlahq
__builtin_arm_mve_vqdmlashq_m
__builtin_arm_mve_vqdmlashq
__builtin_arm_mve_vqdmlsdhq_m
__builtin_arm_mve_vqdmlsdhq
__builtin_arm_mve_vqdmlsdhxq_m
__builtin_arm_mve_vqdmlsdhxq
__builtin_arm_mve_vqdmulhq
__builtin_arm_mve_vqdmullbq_m
__builtin_arm_mve_vqdmullbq
__builtin_arm_mve_vqdmulltq
__builtin_arm_mve_vqmovnbq_m
__builtin_arm_mve_vqmovnbq
__builtin_arm_mve_vqmovntq
__builtin_arm_mve_vqmovunbq_m
__builtin_arm_mve_vqmovunbq
__builtin_arm_mve_vqmovuntq_m
__builtin_arm_mve_vqmovuntq
__builtin_arm_mve_vqnegq_m
__builtin_arm_mve_vqnegq
__builtin_arm_mve_vqrdmladhq
__builtin_arm_mve_vqrdmladhxq_m
__builtin_arm_mve_vqrdmladhxq
__builtin_arm_mve_vqrdmlahq
__builtin_arm_mve_vqrdmlashq_m
__builtin_arm_mve_vqrdmlashq
uleb128 too big for uint64
lp64
malformed sleb128, extends past end
__builtin_arm_mve_vqrdmlsdhq_m
__builtin_arm_mve_vqrdmlsdhq
__builtin_arm_mve_vqrdmlsdhxq_m
__builtin_arm_mve_vqrdmlsdhxq
__builtin_arm_mve_vqrdmulhq_m
__builtin_arm_mve_vqrdmulhq
__builtin_arm_mve_vqrshlq_m_n
__builtin_arm_mve_vqrshlq_m
sleb128 too big for int64
auto:
the mach header extends past the end of the file
-mlzcnt
__builtin_arm_mve_vqrshlq
__builtin_arm_mve_vqrshrnbq_m
__builtin_arm_mve_vqrshrnbq
__builtin_arm_mve_vqrshrntq_m
__builtin_arm_mve_vqrshrunbq_m
__builtin_arm_mve_vqrshrunbq
__builtin_arm_mve_vqrshruntq_m
__builtin_arm_mve_vqshlq_m_n
__builtin_arm_mve_vqshlq_m_r
__builtin_arm_mve_vqshlq_m
__builtin_arm_mve_vqshlq_n
__builtin_arm_mve_vqshlq_r
__builtin_arm_mve_vqshlq
__builtin_arm_mve_vqshluq_m
__builtin_arm_mve_vqshrnbq_m
__builtin_arm_mve_vqshrnbq
__builtin_arm_mve_vqshrntq_m
offset field of section 
__va_list_tag
 not past the headers of the file
__builtin_arm_mve_vqshrntq
__builtin_arm_mve_vqshrunbq_m
__builtin_arm_mve_vqshrunbq
__builtin_arm_mve_vqshruntq_m
__builtin_arm_mve_vqsubq_m
__builtin_arm_mve_vqsubq
__builtin_arm_mve_vreinterpretq_f16
__builtin_arm_mve_vreinterpretq_f32
__builtin_arm_mve_vreinterpretq_s16
__builtin_arm_mve_vreinterpretq_s32
__builtin_arm_mve_vreinterpretq_s64
__builtin_arm_mve_vreinterpretq_u16
__builtin_arm_mve_vreinterpretq_u32
__builtin_arm_mve_vreinterpretq_u64
__builtin_arm_mve_vrev16q_m
__builtin_arm_mve_vrev16q
__builtin_arm_mve_vrev16q_x
__builtin_arm_mve_vrev32q_m
__builtin_arm_mve_vrev32q_x
__builtin_arm_mve_vrev64q
__builtin_arm_mve_vrev64q_m
__builtin_arm_mve_vrev64q_x
__builtin_arm_mve_vrhaddq_m
__builtin_arm_mve_vrhaddq
__builtin_arm_mve_vrmlaldavhaq_p
__builtin_arm_mve_vrmlaldavhaq
__builtin_arm_mve_vrmlaldavhaxq_p
__builtin_arm_mve_vrmlaldavhq_p
__builtin_arm_mve_vrmlaldavhq
__builtin_arm_mve_vrmlaldavhxq_p
__builtin_arm_mve_vrmlsldavhaq_p
__builtin_arm_mve_vrmlsldavhaq
__builtin_arm_mve_vrmlsldavhaxq_p
__builtin_arm_mve_vrmlsldavhaxq
__builtin_arm_mve_vrmlsldavhq_p
__builtin_arm_mve_vrmlsldavhq
__builtin_arm_mve_vrmlsldavhxq_p
reloff field of section 
+march=rv32imac
reloff field plus nreloc field times sizeof(struct relocation_info) of section 
-mmadd4
offset: 
+march=rv32im
 for cputype (
__builtin_arm_mve_vrmlsldavhxq
__builtin_arm_mve_vrmulhq_m
__builtin_arm_mve_vrmulhq
__builtin_arm_mve_vrmulhq_x
) not aligned on it's alignment (2^
atomic_float
cputype (
__builtin_arm_mve_vrndaq
__builtin_arm_mve_vrndaq_m
__builtin_arm_mve_vrndaq_x
__builtin_arm_mve_vrndmq
__builtin_arm_mve_vrndmq_x
__builtin_arm_mve_vrndnq
__builtin_arm_mve_vrndnq_m
__builtin_arm_mve_vrndnq_x
__builtin_arm_mve_vrndpq
__builtin_arm_mve_vrndpq_m
__builtin_arm_mve_vrndpq_x
__builtin_arm_mve_vrndq_m
__builtin_arm_mve_vrndq_x
__builtin_arm_mve_vrndxq
__builtin_arm_mve_vrndxq_x
__builtin_arm_mve_vrshlq_m_n
__builtin_arm_mve_vrshlq_m
) offset 
/rv32iac/ilp32
Invalid version
__builtin_arm_mve_vrshlq
__builtin_arm_mve_vrshlq_x
__builtin_arm_mve_vrshrnbq_m
__builtin_arm_mve_vrshrnbq
__builtin_arm_mve_vrshrntq_m
__builtin_arm_mve_vrshrntq
__builtin_arm_mve_vrshrq_m
__builtin_arm_mve_vrshrq
__builtin_arm_mve_vsbciq_m
__builtin_arm_mve_vsbciq
__builtin_arm_mve_vsbcq_m
__builtin_arm_mve_vsetq_lane
__builtin_arm_mve_vshlcq_m
__builtin_arm_mve_vshlcq
__builtin_arm_mve_vshllbq
__builtin_arm_mve_vshllbq_x
__builtin_arm_mve_vshlltq_m
__builtin_arm_mve_vshlltq
__builtin_arm_mve_vshlltq_x
__builtin_arm_mve_vshlq_m_n
__builtin_arm_mve_vshlq_m_r
__builtin_arm_mve_vshlq_n
__builtin_arm_mve_vshlq_r
__builtin_arm_mve_vshlq
__builtin_arm_mve_vshlq_x
__builtin_arm_mve_vshrnbq_m
__builtin_arm_mve_vshrnbq
__builtin_arm_mve_vshrntq
__builtin_arm_mve_vshrq_m
__builtin_arm_mve_vshrq
__builtin_arm_mve_vshrq_x
__builtin_arm_mve_vsliq_m
__builtin_arm_mve_vsliq
__builtin_arm_mve_vsriq_m
__builtin_arm_mve_vst1q
__builtin_arm_mve_vst1q_p
__builtin_arm_mve_vst2q
Cannot handle one of the minidump streams
__builtin_ms_va_list
Duplicate stream type
-mmark-bti-property
 SFINAE diagnostics trapped.
invalid section index: 
-fptrauth-calls
aixcoff-rs6000
the section index (
__builtin_arm_mve_vst4q
__builtin_arm_mve_vstrbq_p
__builtin_arm_mve_vstrbq
__builtin_arm_mve_vstrbq_scatter_offset_p
__builtin_arm_mve_vstrdq_scatter_base_p
__builtin_arm_mve_vstrdq_scatter_base
__builtin_arm_mve_vstrdq_scatter_base_wb_p
__builtin_arm_mve_vstrdq_scatter_base_wb
__builtin_arm_mve_vstrdq_scatter_offset_p
__builtin_arm_mve_vstrdq_scatter_offset
__builtin_arm_mve_vstrdq_scatter_shifted_offset_p
__builtin_arm_mve_vstrhq
__builtin_arm_mve_vstrhq_p
__builtin_arm_mve_vstrhq_scatter_offset
__builtin_arm_mve_vstrhq_scatter_shifted_offset
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p
__builtin_arm_mve_vstrwq
) is invalid
: section headers with offset 0x
bool
: symbol table with offset 0x
-fno-modules-local-submodule-visibility
__builtin_arm_mve_vstrwq_p
__builtin_arm_mve_vstrwq_scatter_base
__builtin_arm_mve_vstrwq_scatter_base_p
__builtin_arm_mve_vstrwq_scatter_base_wb
__builtin_arm_mve_vstrwq_scatter_base_wb_p
__builtin_arm_mve_vstrwq_scatter_offset
__builtin_arm_mve_vstrwq_scatter_offset_p
__builtin_arm_mve_vstrwq_scatter_shifted_offset
__builtin_arm_mve_vsubq
__builtin_arm_mve_vsubq_m
__builtin_arm_mve_vsubq_x
__builtin_arm_cde_cx1
x86_64
armv7k
__builtin_arm_cde_cx1a
__builtin_arm_cde_cx1d
__builtin_arm_cde_cx1da
__builtin_arm_cde_cx2
__builtin_arm_cde_cx2a
__builtin_arm_cde_cx2d
__builtin_arm_cde_cx2da
__builtin_arm_cde_cx3
__builtin_arm_cde_cx3d
__builtin_arm_cde_cx3da
__builtin_arm_cde_vcx1_u32
__builtin_arm_cde_vcx1d_u64
__builtin_arm_cde_vcx1da_u64
__builtin_arm_cde_vcx1q_m_f16
__builtin_arm_cde_vcx1q_m_s16
__builtin_arm_cde_vcx1q_m_s32
__builtin_arm_cde_vcx1q_m_s64
__builtin_arm_cde_vcx1q_m_s8
__builtin_arm_cde_vcx1q_m_u16
__builtin_arm_cde_vcx1q_m_u32
__builtin_arm_cde_vcx1q_m_u64
armv6m
basic_string
armv7m
-fptrauth-function-pointer-type-discrimination
__builtin_arm_cde_vcx1q_m_u8
__builtin_arm_cde_vcx1q_u8
__builtin_arm_cde_vcx1qa_f16
__builtin_arm_cde_vcx1qa_f32
install names do not match
multimap
current versions do not match
__builtin_arm_cde_vcx1qa_m_f16
__builtin_arm_cde_vcx1qa_m_f32
__builtin_arm_cde_vcx1qa_m_s16
__builtin_arm_cde_vcx1qa_m_s32
__builtin_arm_cde_vcx1qa_m_s64
__builtin_arm_cde_vcx1qa_m_s8
__builtin_arm_cde_vcx1qa_m_u16
__builtin_arm_cde_vcx1qa_m_u32
__builtin_arm_cde_vcx1qa_m_u64
__builtin_arm_cde_vcx1qa_m_u8
__builtin_arm_cde_vcx1qa_s16
__builtin_arm_cde_vcx1qa_s32
tapi_tbd_version
__builtin_arm_cde_vcx1qa_s64
__builtin_arm_cde_vcx1qa_s8
__builtin_arm_cde_vcx1qa_u16
__builtin_arm_cde_vcx1qa_u32
__builtin_arm_cde_vcx1qa_u8
__builtin_arm_cde_vcx2_u32
__builtin_arm_cde_vcx2a_u32
__builtin_arm_cde_vcx2da_u64
__builtin_arm_cde_vcx2q_f16
__builtin_arm_cde_vcx2q_f32
__builtin_arm_cde_vcx2q_m_impl_f16
__builtin_arm_cde_vcx2q_m_impl_f32
__builtin_arm_cde_vcx2q_m_impl_s16
__builtin_arm_cde_vcx2q_m_impl_s32
main_library
unordered_set
libraries
baremetal::Linker
current_versions
__builtin_arm_cde_vcx2q_m_impl_s64
__builtin_arm_cde_vcx2q_m_impl_s8
__builtin_arm_cde_vcx2q_m_impl_u16
__builtin_arm_cde_vcx2q_m_impl_u32
__builtin_arm_cde_vcx2q_m_impl_u8
__builtin_arm_cde_vcx2q_s16
__builtin_arm_cde_vcx2q_s32
__builtin_arm_cde_vcx2q_s8
__builtin_arm_cde_vcx2q_u16
__builtin_arm_cde_vcx2q_u32
__builtin_arm_cde_vcx2q_u64
__builtin_arm_cde_vcx2q_u8
__builtin_arm_cde_vcx2q_u8_f16
__builtin_arm_cde_vcx2q_u8_f32
__builtin_arm_cde_vcx2q_u8_s32
__builtin_arm_cde_vcx2q_u8_s64
__builtin_arm_cde_vcx2q_u8_s8
__builtin_arm_cde_vcx2q_u8_u32
__builtin_arm_cde_vcx2q_u8_u64
__builtin_arm_cde_vcx2q_u8_u8
compatibility_versions
const_iterator
-skip-unused-modulemap-deps
objc_eh_type
__builtin_arm_cde_vcx2qa_impl_f16
__builtin_arm_cde_vcx2qa_impl_f32
__builtin_arm_cde_vcx2qa_impl_s16
__builtin_arm_cde_vcx2qa_impl_s32
__builtin_arm_cde_vcx2qa_impl_s64
__builtin_arm_cde_vcx2qa_impl_s8
__builtin_arm_cde_vcx2qa_impl_u16
__builtin_arm_cde_vcx2qa_impl_u32
__builtin_arm_cde_vcx2qa_impl_u8
__builtin_arm_cde_vcx2qa_m_impl_f16
__builtin_arm_cde_vcx2qa_m_impl_f32
objc_ivar
{0:2}
stack empty
 section
__builtin_arm_cde_vcx2qa_m_impl_s16
__builtin_arm_cde_vcx2qa_m_impl_s32
__builtin_arm_cde_vcx2qa_m_impl_s64
__builtin_arm_cde_vcx2qa_m_impl_s8
__builtin_arm_cde_vcx2qa_m_impl_u32
__builtin_arm_cde_vcx2qa_m_impl_u64
__builtin_arm_cde_vcx2qa_m_impl_u8
__builtin_arm_cde_vcx3_u32
__builtin_arm_cde_vcx3a_u32
__builtin_arm_cde_vcx3d_u64
__builtin_arm_cde_vcx3da_u64
missing 
-sys-header-deps
__builtin_arm_cde_vcx3q_impl_f16
__builtin_arm_cde_vcx3q_impl_f32
__builtin_arm_cde_vcx3q_impl_s16
__builtin_arm_cde_vcx3q_impl_s32
__builtin_arm_cde_vcx3q_impl_s8
__builtin_arm_cde_vcx3q_impl_u16
__builtin_arm_cde_vcx3q_impl_u32
__builtin_arm_cde_vcx3q_impl_u8
__builtin_arm_cde_vcx3q_m_impl_f16
__builtin_arm_cde_vcx3q_m_impl_f32
__builtin_arm_cde_vcx3q_m_impl_s16
__builtin_arm_cde_vcx3q_m_impl_s32
__builtin_arm_cde_vcx3q_m_impl_s64
__builtin_arm_cde_vcx3q_m_impl_s8
__builtin_arm_cde_vcx3q_m_impl_u32
__builtin_arm_cde_vcx3q_m_impl_u64
__builtin_arm_cde_vcx3q_m_impl_u8
__builtin_arm_cde_vcx3q_u8_impl_f32
__builtin_arm_cde_vcx3q_u8_impl_s16
__builtin_arm_cde_vcx3q_u8_impl_s32
-include
tvOS Simulator
__builtin_arm_cde_vcx3q_u8_impl_s64
__builtin_arm_cde_vcx3q_u8_impl_s8
__builtin_arm_cde_vcx3q_u8_impl_u16
__builtin_arm_cde_vcx3q_u8_impl_u32
__builtin_arm_cde_vcx3q_u8_impl_u64
__builtin_arm_cde_vcx3q_u8_impl_u8
__builtin_arm_cde_vcx3qa_impl_f16
__builtin_arm_cde_vcx3qa_impl_f32
watchOS Simulator
SWIFT_OPTIONS
DriverKit
macos
__builtin_arm_cde_vcx3qa_impl_s16
__builtin_arm_cde_vcx3qa_impl_s32
__builtin_arm_cde_vcx3qa_impl_s64
__builtin_arm_cde_vcx3qa_impl_s8
__builtin_arm_cde_vcx3qa_impl_u16
__builtin_arm_cde_vcx3qa_impl_u32
__builtin_arm_cde_vcx3qa_impl_u64
__builtin_arm_cde_vcx3qa_impl_u8
_app_extension
-fpch-instantiate-templates
bridgeos
__builtin_arm_cde_vcx3qa_m_impl_f16
__builtin_arm_cde_vcx3qa_m_impl_f32
__builtin_arm_cde_vcx3qa_m_impl_s16
__builtin_arm_cde_vcx3qa_m_impl_s32
__builtin_arm_cde_vcx3qa_m_impl_s64
__builtin_arm_cde_vcx3qa_m_impl_s8
__builtin_arm_cde_vcx3qa_m_impl_u16
__builtin_arm_cde_vcx3qa_m_impl_u32
__builtin_arm_cde_vcx3qa_m_impl_u8
__builtin_arm_cde_vreinterpretq_u8_u8
vIUiC
WiWiCD*
_MoveFromCoprocessor
UiIUiIUiIUiIUiIUi
_MoveToCoprocessor
vUiIUiIUiIUiIUiIUi
_MoveToCoprocessor2
driverkit
Disable sharing the FileManager when building a module implicitly
no such architecture
create
unsupported file type
!tapi-tbd-v3
@available
!tapi-tbd-v2
!tapi-tbd
!tapi-tbd-v1
__ARMEL__
__ARMEB__
__ARM_BIG_ENDIAN
_M_ARM_NT
_M_ARMT
_M_ARM
_M_THUMB
_M_ARM_FP
_ARM_
armv7
__RENDERSCRIPT__
tag:yaml.org,2002:map
, *)) {
tbd-version
-mmovdiri
uuids
-pch-through-header=
current-version
-ffunction-sections
compatibility-version
-fgpu-default-stream=
swift-abi-version
-fimplement-inlines
parent-umbrella
.dummy
allowable-clients
-fno-modules-validate-system-headers
reexported-libraries
matrix element
__AVR
reexports
property expression
undefineds
__attribute__((address_space(1)))
unparsable target
container subscripting expression
unknown architecture
__attribute__((address_space(3)))
unknown platform
symbols
__attribute__((address_space(5)))
objc-classes
__builtin_return_address
objc-eh-types
-mms-bitfields
objc-ivars
-isysroot
weak-symbols
__AVR_ATtiny28__
thread-local-symbols
archs
__AVR_AT90S2343__
swift-version
objc-constraint
__AVR_AT90S4414__
allowed-clients
extdiv
re-exports
Enable Pointer Authentication kernel ABI version
weak-def-symbols
CPATH
weak-ref-symbols
__AVR_ATtiny13__
none
bpermd
retain_release
__AVR_ATtiny24__
retain_release_for_simulator
-c-isystem
retain_release_or_gc
__AVR_ATtiny44A__
zippered
-mmsa
macosx
C_INCLUDE_PATH
__AVR_ATtiny441__
watchos
tvos
__AVR_ATtiny861__
bridgeos
-cxx-isystem
maccatalyst
__AVR_ATtiny48__
driverkit
isa-v207-instructions
invalid platform
-fptrauth-objc-class-ro
unknown platform
CPLUS_INCLUDE_PATH
__AVR_AT90USB82__
W256SLiW256C*
__AVR_ATA664251__
-objc-isystem
invalid Swift ABI version.
__AVR_ATtiny1634__
invalid sign in float literal
vW256*VV
invalid hexadecimal floating-point constant: expected at least one significand digit
-mmt
invalid hexadecimal floating-point constant: expected exponent part 'p'
OBJC_INCLUDE_PATH
invalid hexadecimal floating-point constant: expected at least one exponent digit
__AVR_ATmega48A__
unterminated comment
vW512*VVVV
 number
__AVR_ATmega88__
invalid hexadecimal number
-objcxx-isystem
invalid binary number
__AVR_ATmega88PB__
invalid usage of character literals
vW512*
unterminated string constant
-fno-modules
unterminated single quote
OBJCPLUS_INCLUDE_PATH
single quote way too long
__AVR_AT90PWM3B__
invalid usage of string literals
vW512*W256V
invalid character in input
__AVR_ATA5790__
got_hi
SOURCE_DATE_EPOCH
got_lo
__AVR_ATA5831__
vW512*VVi15i15i15
higher
-mmultivalue
highest
-source-date-epoch
tlsgd
__AVR_ATmega162__
binary
vW512*VVi15i15
octal
__AVR_ATmega164PA__
decimal
-fno-aapcs-bitfield-width
hexadecimal
__AVR_ATmega165PA__
base-
64bit
missing expression
-fptrauth-objc-interface-sel
Recursive use of '
-faapcs-bitfield-load
redefinition of '
__AVR_ATmega169P__
invalid assignment to '
RV32
invalid reassignment of non-absolute variable '
__AVR_ATmega323__
Need to implement createSPIRVAsmParser for SPIRV format.
-msoft-float
.set
__AVR_ATmega324PB__
.equ
_Float16
.equiv
-mmwaitx
.ascii
hard
.asciz
__AVR_ATmega3250PA__
.string
first
.byte
__AVR_ATmega329__
.short
-arm-global-merge=false
.value
__AVR_ATmega3290__
.2byte
spsel
.long
-fno-modulo-sched-allow-regmoves
.int
-arm-global-merge=true
.4byte
__AVR_ATmega644__
.quad
daifclr
.8byte
__AVR_ATmega645__
.octa
-mcmse
.single
__AVR_ATmega649A__
.float
.double
Like -MMD, but also implies -E and writes to stdout by default
.align
-aarch64-enable-global-merge=false
.align32
__AVR_ATmega64RFR2__
.balign
.balignw
__AVR_ATmega16HVB__
.balignl
-aarch64-enable-global-merge=true
.p2align
__AVR_ATmega64HVE__
.p2alignw
cmn_err
.p2alignl
-fptrauth-objc-isa-masking
.org
-mvscale-max=
.fill
__AVR_ATmega64C1__
.zero
zcmn_err
.extern
__AVR_ATmega16U4__
.globl
-mvscale-min=
.global
__AVR_AT90USB647__
.lazy_reference
os_trace
.no_dead_strip
-mno-3dnowa
.symbol_resolver
scalable
.private_extern
__AVR_ATmega1284__
.reference
c_str
.weak_definition
__AVR_ATmega1284RFR2__
.weak_reference
-target-abi
.weak_def_can_be_hidden
__AVR_ATmega2560__
.cold
.comm
-fno-modulo-sched
.common
-mno-ldc1-sdc1
.lcomm
__AVR_ATxmega32A4__
.abort
sizeof(
.include
__AVR_ATxmega32D3__
.incbin
-mno-check-zero-division
.code16
__AVR_ATxmega8E5__
.code16gcc
strlen(
.rept
-mno-80387
.rep
-mfix4300
.irp
__AVR_ATxmega64D4__
.irpc
'super'
.endr
__AVR_ATxmega128A3U__
.bundle_align_mode
-mips-ssection-threshold=
.bundle_lock
__AVR_ATxmega128D3__
.bundle_unlock
taggedRelease
-fptrauth-objc-isa-mode=
.ifeq
.ifge
__AVR_ATxmega256A3B__
.ifgt
column
.ifle
__AVR_ATxmega384C3__
.iflt
-mgpopt
.ifne
__AVR_ATxmega128A4U__
.ifb
.ifnb
Disable SVR4-style position-independent code (Mips only)
.ifc
-mlocal-sdata=1
.ifeqs
__AVR_ATtiny104__
.ifnc
%s%s %s 
.ifnes
__AVR_ATtiny404__
.ifdef
-mlocal-sdata=0
.ifndef
__AVR_ATtiny806__
.ifnotdef
.elseif
-fno-ms-compatibility
.else
-mextern-sdata=1
.end
__AVR_ATtiny814__
.endif
.skip
__AVR_ATtiny1616__
.space
-mextern-sdata=0
.file
__AVR_ATtiny1617__
.line
%hhd
.loc
-mno-aes
.stabs
-membedded-data=1
.cv_file
__AVR_ATmega1609__
.cv_func_id
Use INTEGER(KIND=8) for the result type in size-related intrinsics
.cv_loc
-fnative-half-arguments-and-returns
.cv_linetable
-membedded-data=0
.cv_inline_linetable
-mno-altivec
__builtin_preserve_field_info
.cv_def_range
LUi.
.cv_string
'kernel_enqueue_flags_t' (i.e. uint)
.cv_stringtable
-fptrauth-objc-isa
.cv_filechecksums
ndrange_t
__csky__
__CSKY__
.cv_fpo_data
'ndrange_t'
.sleb128
__cskyabi__
.uleb128
streaming or locally streaming
.cfi_sections
__CSKY_VDSPV2_F__
.cfi_startproc
-mips-compact-branches=
.cfi_endproc
.cfi_def_cfa
non-streaming
.cfi_def_cfa_offset
.cfi_adjust_cfa_offset
-mips-jalr-reloc=0
.cfi_def_cfa_register
.cfi_llvm_def_aspace_cfa
value
.cfi_offset
-mno-amx-bf16
.cfi_rel_offset
elfv2
.cfi_personality
fr16
.cfi_lsda
.cfi_remember_state
fr20
.cfi_restore_state
elfv1
.cfi_same_value
fr24
.cfi_restore
%04x
.cfi_escape
-mno-amx-int8
.cfi_return_column
ibmlongdouble
.cfi_signal_frame
.cfi_undefined
unichar
.cfi_register
.cfi_window_save
altivec
.cfi_b_key_frame
.cfi_mte_tagged_frame
c_str()
.macros_on
Enable signing and authentication of Objective-C object's 'isa' field
.macros_off
-mpacked-stack -mbackchain -mhard-float
.macro
.exitm
cstdlib
.endm
.endmacro
-mbackchain
.purgem
.err
.error
-mno-atomics
.warning
-mpacked-stack
.altmacro
vr16
.noaltmacro
.reloc
vr20
intel
.dc.a
-fimplicit-module-maps
.dc.b
Use the native __fp16 type for arguments and returns (and skip ABI-specific lowering)
.dc.d
-fno-new-infallible
.dc.l
.dc.s
Disable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
__qdsp6__
__hexagon__
.dc.x
__HEXAGON_V5__
.dcb
, ...
.dcb.b
__QDSP6_ARCH__
.dcb.d
 override
.dcb.l
__QDSP6_V55__
.dcb.s
-x86-asm-syntax=intel
.dcb.w
__QDSP6_V60__
.dcb.x
final
hexagonv65
.ds.b
-mskip-rax-setup
.ds.d
__HEXAGON_V66__
.ds.l
override
.ds.p
-mno-avx512bitalg
.ds.s
-mstack-alignment=4
.ds.w
__HEXAGON_V68__
.ds.x
condition
.print
.addrsig
-Wreturn-type
.addrsig_sym
__HVX_LENGTH__
.pseudoprobe
new[]
.lto_discard
-mno-avx512bw
.lto_set_conditional
-hexagon-small-data-threshold=
frame_ptr_rel
r1:0
subfield_reg
reg_rel
r9:8
unexpected token at start of statement
-enable-hexagon-ieee-rnd-near
invalid use of pseudo-symbol '.' as a label
r17:16
 not currently supported for this target
unknown directive
-fptrauth-soft
__emit
-machine-sink-split=0
expected comma
expected string parameter for '.ifeqs' directive
expected string parameter for '.ifnes' directive
expected comma after first string for '.ifeqs' directive
{ "directory": "
expected comma after first string for '.ifnes' directive
expected identifier after '.ifdef'
Encountered a .elseif that doesn't follow an .if or  an .elseif
-mno-avx512dq
Encountered a .else that doesn't follow  an .if or an .elseif
Encountered a .endif that doesn't follow an .if or .else
expected identifier
macros cannot be nested more than 
 levels deep.
, "file": "
 Use -asm-macro-max-nesting-depth to increase this limit.
.endmacro
<instantiation>
Enable software lowering of pointer authentication
invalid argument identifier for formal argument
, "output": "
expected '=' after formal parameter identifier
c7:6
cannot mix positional and keyword arguments
expected absolute expression
c15:14
parameter named '
, "arguments": ["
' does not exist for macro '
c23:22
missing value for required parameter '
' in macro '
-mno-avx512fp16
too many positional arguments
unexpected token in macro instantiation
unbalanced parentheses in macro argument
Wrong number of arguments
out of range literal value
unknown token in expression
framelimit
unexpected token in directive
infinity
-fno-non-call-exceptions
, "-o", "
utimer
invalid floating point literal
p2align directive with no operand(s) is ignored
v7:6
invalid alignment value
--target=
alignment must be a power of 2
v15:14
alignment must be smaller than 2**32
co_await
alignment directive can never be satisfied in this many bytes, ignoring maximum bytes expression
-mno-avx512ifma
maximum bytes expression exceeds alignment and has no effect
"]},
'.fill' directive with negative size has no effect
v31:30
'.fill' directive with size greater than 8 has been truncated to 8
selector
'.fill' directive pattern has been truncated to 32-bits
v15:12
non-local symbol required
.%%%%.json
unable to emit symbol attribute
v31:28
expected identifier in directive
statements
alignment not supported on this target
Enable address discrimination of vtable pointers
size must be non-negative
CLANG_MODULE_CACHE_PATH
invalid symbol redefinition
v*s*Cs*iC
.abort detected. Assembly stopping.
macro
.abort '
v*Sc*CSc*iC
' detected. Assembly stopping.
clang
expected string in '.include' directive
LLi*LLi*LLi*iIi
unexpected token in '.include' directive
elif
Could not find include file '
-mno-avx512vbmi2
expected string in '.incbin' directive
-fdepscan-prefix-map=
skip is negative
c*c*c*iIi
Could not find incbin file '
elifndef
negative count has no effect
LLi*CLLi*LLiiC
unexpected token in '
' directive
s*Cs*iiC
Count is negative
-fnative-half-type
no matching '.endr' in definition
-fno-objc-arc-exceptions
unexpected token in '.endr' directive
.endr
__builtin_circ_sth
expected identifier in '.irp' directive
undef
expected identifier in '.irpc' directive
c*c*iiIi
unexpected token in '.irpc' directive
unmatched '.endr' directive
__builtin_HEXAGON_L2_loadruh_pci
invalid bundle alignment size (expected between 0 and 30)
filename
invalid option for '.bundle_lock' directive
-mno-avx512vl
negative file number
extract-api
explicit path specified, but no file number
__builtin_HEXAGON_L2_loadruh_pcr
unexpected token in '.file' directive
include_next
MD5 checksum specified, but no file number
LLiv*ivC*
source specified, but no file number
C++ for IAMCU
inconsistent use of MD5 checksums
__builtin_HEXAGON_S2_storerf_pci
unexpected token in '.line' directive
ApplicationExtension
unexpected token in '.loc' directive
Enable type discrimination of vtable pointers
file number less than one in '.loc' directive
-cc1depscan
unassigned file number in '.loc' directive
__builtin_HEXAGON_S2_storeri_pcr
line number less than zero in '.loc' directive
operator-
column position less than zero in '.loc' directive
__builtin_HEXAGON_A6_vminub_RdP
is_stmt value not 0 or 1
is_stmt value not the constant value of 0 or 1
vV64bv*V16i
isa number less than zero
operator/
isa number not a constant value
-mno-avx512vp2intersect
unknown sub-directive in '.loc' directive
-cc1-args
unsupported directive '.stabs'
__builtin_HEXAGON_V6_vmaskedstorentq_128B
expected file number in '.cv_file' directive
operator^
file number less than one
hvxv65
unexpected token in '.cv_file' directive
expected checksum kind in '.cv_file' directive
V32iV32iV16iLLi
file number already allocated
operator|
function id already allocated
-fno-objc-arc
expected function id in '
-triple
expected function id within range [0, UINT_MAX)
__builtin_HEXAGON_A2_absp
expected 'within' identifier in '.cv_inline_site_id' directive
operator!
expected 'inlined_at' identifier in '.cv_inline_site_id' directive
__builtin_HEXAGON_A2_addh_h16_hh
expected line number after 'inlined_at'
-target-sdk-version=
expected integer in '
__builtin_HEXAGON_A2_addh_h16_sat_hh
file number less than one in '
operator<
unassigned file number in '
-mno-avxvnni
line number less than zero in '.cv_loc' directive
-sycl-std=2020
column position less than zero in '.cv_loc' directive
__builtin_HEXAGON_A2_addi
unexpected token in '.cv_loc' directive
operator+=
unknown sub-directive in '.cv_loc' directive
__builtin_HEXAGON_A2_addsp
expected SourceField in '.cv_inline_linetable' directive
-Wspir-compat
File id less than zero in '.cv_inline_linetable' directive
__builtin_HEXAGON_A2_andp
expected SourceLineNum in '.cv_inline_linetable' directive
operator*=
Line number less than zero in '.cv_inline_linetable' directive
Set pch file name (with /Yc and /Yu)
expected comma before def_range type in .cv_def_range directive
-analyze
expected def_range type in directive
LLiIiIi
expected comma before register number in .cv_def_range directive
operator%=
expected register number
__builtin_HEXAGON_A2_maxp
expected comma before offset in .cv_def_range directive
-migrate
expected offset value
ULLiLLiLLi
expected register value
operator&=
expected comma before flag value in .cv_def_range directive
-mno-backchain
expected flag value
-Eonly
expected comma before base pointer offset in .cv_def_range directive
__builtin_HEXAGON_A2_not
expected base pointer offset value
operator<<
unexpected def_range type in .cv_def_range directive
__builtin_HEXAGON_A2_orp
expected symbol name
expected .eh_frame or .debug_frame
__builtin_HEXAGON_A2_satb
unexpected token
Use the native half type for __fp16 instead of promoting to float
unsupported encoding.
-fno-objc-avoid-heapify-local-blocks
expected identifier in '.macro' directive
-fdirectives-only
vararg parameter '
__builtin_HEXAGON_A2_subh_h16_ll
' should be the last parameter
operator==
macro '
__builtin_HEXAGON_A2_subh_h16_sat_ll
' has multiple parameters named '
-emit-obj
missing parameter qualifier for '
__builtin_HEXAGON_A2_subh_l16_sat_ll
 is not a valid parameter qualifier for '
operator<=
pointless default value for required parameter '
-mno-bmi
no matching '.endmacro' in definition
-fsyntax-only
' is already defined
__builtin_HEXAGON_A2_svavgh
macro defined with named parameters which are not used in macro body, possible positional parameter found in body which will have no effect
operator<=>
unexpected '
__builtin_HEXAGON_A2_svsubhs
' in file, no current macro definition
-emit-header-module
expected identifier in '.purgem' directive
__builtin_HEXAGON_A2_sxth
' is not defined
operator||
.err encountered
-frandom-seed=
.error directive invoked in source file
-emit-module-interface
.error argument must be a string
LLiIi
.warning directive invoked in source file
operator--
.warning argument must be a string
__builtin_HEXAGON_A2_vabshsat
expected relocation name
-emit-header-unit
expression must be relocatable
__builtin_HEXAGON_A2_vaddh
' directive with negative repeat count has no effect
operator->*
literal value out of range for directive
-mno-bti-at-return-twice
expected double quoted string after .print
-emit-pch
unexpected token in '.pseudoprobe' directive
__builtin_HEXAGON_A2_vavghcr
unexpected expression in _emit
operatorco_await
unexpected expression in align
__builtin_HEXAGON_A2_vavguh
literal value not a power of two greater then zero
-verify-pch
parsed instruction: [
__builtin_HEXAGON_A2_vavgw
unmatched .ifs or .elses
operator delete
unassigned file number: 
Don't try to avoid heapifying local blocks
 for .file directives
-extract-api
assembler local symbol '
__builtin_HEXAGON_A2_vcmphgtu
' not defined
operator delete[]
directional label undefined
__builtin_HEXAGON_A2_vconj
 * $$
-emit-llvm
offset 
__builtin_HEXAGON_A2_vmaxuh
operator[]
-mno-bulk-memory
 + $$
-emit-llvm-bc
byte ptr 
__builtin_HEXAGON_A2_vminw
word ptr 
 volatile
dword ptr 
__builtin_HEXAGON_A2_vnavgw
qword ptr 
-emit-interface-stubs
xword ptr 
__builtin_HEXAGON_A2_vraddub_acc
xmmword ptr 
(...)
ymmword ptr 
File holding the seed used by the randomize structure layout feature
.even
-interface-stub-version=
while in macro instantiation
__builtin_HEXAGON_A2_vsububs
expected string
unexpected backslash at end of string
__builtin_HEXAGON_A2_xor
invalid hexadecimal escape sequence
invalid octal escape sequence (out of range)
__builtin_HEXAGON_A4_andn
invalid escape sequence (unrecognized character)
out 
unexpected symbol modifier following '@'
-mno-cldemote
invalid variant '
-module-file-info
invalid modifier '
__builtin_HEXAGON_A4_cmpbeqi
' (no symbols present)
byref 
invalid variant on expression '
__builtin_HEXAGON_A4_cmpbgtui
' (already modified)
-rewrite-objc
invalid token in expression
-flax-vector-conversions=
expected symbol variant after '@'
-fnested-functions
expected a symbol reference
-fno-objc-convert-messages-to-runtime-calls
unexpected modifier on variable reference
-emit-llvm-uselists
cannot use . as current PC
__builtin_HEXAGON_A4_cround_rr
brackets expression not supported on this target
null_unspecified 
expected '(' after operator
__builtin_HEXAGON_A4_rcmpeq
expected ')'
-fno-gpu-rdc
expected ']' in brackets expression
__builtin_HEXAGON_A4_round_ri
expected section directive before assembly directive
, NULL
The HLASM Label has to be an Identifier
-mno-clwb
Cannot have just a label for an HLASM inline asm statement
-flto=
.text
iLLiUIi
.bss
concept
.section
__builtin_HEXAGON_A4_vcmpbgtui
.def
thin
.scl
__builtin_HEXAGON_A4_vcmpweqi
.type
declarations
.endef
The seed used by the randomize structure layout feature
.secrel32
-flto-unit
.symidx
__builtin_HEXAGON_A4_vrminh
.safeseh
string-literal
.secidx
__builtin_HEXAGON_A5_vaddhubs
.linkonce
.rva
__builtin_HEXAGON_C2_any8
.weak
using
.cg_profile
-mno-cmpb
.seh_proc
-fembed-bitcode=marker
.seh_endproc
__builtin_HEXAGON_C2_cmpgeui
.seh_endfunclet
using typename
.seh_startchained
__builtin_HEXAGON_C2_cmpgtu
.seh_endchained
-discard-value-names
.seh_handler
__builtin_HEXAGON_C2_cmpltu
.seh_handlerdata
cases
.seh_stackalloc
-fno-objc-encode-cxx-class-template-spec
.seh_endprologue
-DUNICODE
unexpected token in section switching directive
iiIii
expected string in directive
init-expression
expected comdat type such as 'discard' or 'largest' after protection bits
__builtin_HEXAGON_C2_pxfer_map
expected comma in directive
-setup-static-analyzer
conflicting section flags 'b' and 'd'.
__builtin_HEXAGON_C2_vmux
unknown flag
range-declaration
one_only
Legacy option to specify code object ABI V2 (AMDGPU only)
same_size
-analyzer-config-compatibility-mode=true
same_contents
__builtin_HEXAGON_C4_cmpltei
associative
return true
largest
__builtin_HEXAGON_C4_cmpneqi
newest
-mrelocation-model
unrecognized COMDAT type '
__builtin_HEXAGON_C4_nbitsclri
invalid '.secrel32' directive offset, can't be less than zero or greater than std::numeric_limits<uint32_t>::max()
return nullptr
cannot make section associative with .linkonce
-frange-check
section '
' is already linkonce
__builtin_HEXAGON_F2_conv_d2sf
 in directive
__bridge
invalid '.rva' directive offset, can't be less than -2147483648 or greater than 2147483647
__builtin_HEXAGON_F2_conv_df2d_chop
you must specify one or both of @unwind or @except
a handler attribute must begin with '@' or '%'
__builtin_HEXAGON_F2_conv_df2uw
expected @unwind or @except
Objective-C type
.alt_entry
-mno-constructor-aliases
.desc
-pic-is-pie
.indirect_symbol
.lsym
std::type_info
.subsections_via_symbols
__builtin_HEXAGON_F2_conv_sf2uw_chop
.dump
-fropi
.load
__builtin_HEXAGON_F2_conv_ud2sf
.pushsection
-fnew-alignment=
.popsection
-fno-objc-exceptions
.previous
-meabi
.secure_log_unique
.secure_log_reset
size
.tbss
__builtin_HEXAGON_F2_dfimm_n
.zerofill
posix
.data_region
__builtin_HEXAGON_F2_sfclass
.end_data_region
std::nullptr_t
.const
-mno-crbits
.const_data
-mthread-model
.constructor
__builtin_HEXAGON_F2_sffixupn
.cstring
sizeof...
.destructor
__builtin_HEXAGON_F2_sffma_sc
.dyld
-mabi=vec-default
.fvmlib_init0
__builtin_HEXAGON_F2_sfimm_n
.fvmlib_init1
.lazy_symbol_pointer
-freal-4-real-16
.linker_option
-mabi=quadword-atomics
.literal16
__builtin_HEXAGON_M2_accii
.literal4
sizeof
.literal8
__builtin_HEXAGON_M2_cmacs_s0
.mod_init_func
-mregparm
.mod_term_func
__builtin_HEXAGON_M2_cmpyi_s0
.non_lazy_symbol_pointer
static_assert
.thread_local_variable_pointer
-mno-crc
.objc_cat_cls_meth
-maix-struct-return
.objc_cat_inst_meth
__builtin_HEXAGON_M2_cmpysc_s0
.objc_category
thread_local
.objc_class
__builtin_HEXAGON_M2_cnacsc_s0
.objc_class_names
-msvr4-struct-return
.objc_class_vars
__builtin_HEXAGON_M2_dpmpyss_rnd_s0
.objc_cls_meth
mutable
.objc_cls_refs
-fno-objc-infer-related-result-type
.objc_inst_meth
-fpcc-struct-return
.objc_instance_vars
__builtin_HEXAGON_M2_hmmpyl_rs1
.objc_message_refs
__PRETTY_FUNCTION__
.objc_meta_class
iiiUIi
.objc_meth_var_names
-freg-struct-return
.objc_meth_var_types
__builtin_HEXAGON_M2_mmachs_s0
.objc_module_info
__func__
.objc_protocol
-mno-crypto
.objc_selector_strs
-fdefault-calling-conv=stdcall
.objc_string_object
__builtin_HEXAGON_M2_mmacuhs_s0
.objc_symbols
parameter
.picsymbol_stub
__builtin_HEXAGON_M2_mmaculs_s0
.static_const
-fenable-matrix
.static_data
__builtin_HEXAGON_M2_mmpyh_s0
.symbol_stub
__unaligned
.tdata
-freal-8-real-10
.thread_init_func
-enable-matrix
.tlv
__builtin_HEXAGON_M2_mmpyuh_s0
.ident
signed
.bridgeos_version_min
__builtin_HEXAGON_M2_mmpyul_s0
.watchos_version_min
-mframe-pointer=none
.tvos_version_min
__builtin_HEXAGON_M2_mpy_acc_hl_s0
.ios_version_min
float
.macosx_version_min
Specify WGP wavefront execution mode (AMDGPU only)
.build_version
-mframe-pointer=non-leaf
.ptrauth_abi_version
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s0
.ptrauth_kernel_abi_version
_Imaginary
.alt_entry must preceed symbol definition
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s0
unexpected token in '.desc' directive
-mframe-pointer=all
indirect symbol not in a symbol pointer or stub section
Enable implicit vector bit-casts
expected identifier in .indirect_symbol directive
Specifies the largest alignment guaranteed by '::operator new(size_t)'
non-local symbol required in directive
do not infer Objective-C related result type based on method family
unable to emit indirect symbol attribute for: 
-enable-loop-distribute
unexpected token in '.indirect_symbol' directive
__builtin_HEXAGON_M2_mpy_nac_hl_s0
unexpected token in '.lsym' directive
__auto_type
directive '.lsym' is unsupported
__builtin_HEXAGON_M2_mpy_nac_ll_s0
unexpected token in '.subsections_via_symbols' directive
-loop-distribute-mem
expected string in '.dump' or '.load' directive
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s0
unexpected token in '.dump' or '.load' directive
@end
ignoring directive .dump for now
-mno-default-build-attributes
ignoring directive .load for now
-extra-vectorizer-passes
expected identifier after '.section' directive
__builtin_HEXAGON_M2_mpy_rnd_hl_s0
unexpected token in '.section' directive
@property
__textcoal_nt
__builtin_HEXAGON_M2_mpy_rnd_ll_s0
__text
-fno-strict-return
__const_coal
__builtin_HEXAGON_M2_mpy_sat_hl_s0
__datacoal_nt
required
__data
-freal-8-real-4
section "
" is deprecated
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s0
change section name to "
@interface
.popsection without corresponding .pushsection
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s0
.previous without corresponding .section
-fextend-arguments=64
unexpected token in '.secure_log_unique' directive
__builtin_HEXAGON_M2_mpy_up_s1_sat
.secure_log_unique specified multiple times
@implementation
.secure_log_unique used but AS_SECURE_LOG_FILE environment variable unset.
-mno-dspr2
can't open secure log file: 
-fno-verbose-asm
unexpected token in '.secure_log_reset' directive
__builtin_HEXAGON_M2_mpyd_acc_ll_s1
unexpected token in '.tbss' directive
compatibility_alias
invalid '.tbss' directive size, can't be less thanzero
__builtin_HEXAGON_M2_mpyd_hl_s1
invalid '.tbss' alignment, can't be lessthan zero
-no-integrated-as
__thread_bss
__builtin_HEXAGON_M2_mpyd_ll_s1
expected segment name after '.zerofill' directive
@private
expected section name after comma in '.zerofill' directive
-fno-objc-legacy-dispatch
unexpected token in '.zerofill' directive
-mdebug-pass
invalid '.zerofill' directive size, can't be less than zero
__builtin_HEXAGON_M2_mpyd_nac_ll_s1
invalid '.zerofill' directive alignment, can't be less than zero
@public
expected region type after '.data_region' directive
__builtin_HEXAGON_M2_mpyd_rnd_hl_s1
unknown region type in '.data_region' directive
Structure
unexpected token in '.end_data_region' directive
__builtin_HEXAGON_M2_mpyd_rnd_ll_s1
__bss
@try
__constructor
-mno-embedded-data
__cstring
Arguments
__destructor
__builtin_HEXAGON_M2_mpyu_acc_lh_s0
__dyld
@finally
__fvmlib_init0
__builtin_HEXAGON_M2_mpyu_hh_s0
__fvmlib_init1
-mms-bitfields
__la_symbol_ptr
__builtin_HEXAGON_M2_mpyu_lh_s0
expected string in '
synchronized
__literal16
-freciprocal-math
__literal4
-ffreestanding
__literal8
__builtin_HEXAGON_M2_mpyu_nac_lh_s0
__mod_init_func
const char[]
__mod_term_func
__builtin_HEXAGON_M2_mpyu_up
__nl_symbol_ptr
-funwind-tables=2
__thread_ptr
__builtin_HEXAGON_M2_mpyud_acc_hl_s1
__cat_cls_meth
type-name
__cat_inst_meth
-mno-enqcmd
__category
-funwind-tables=1
__class
__builtin_HEXAGON_M2_mpyud_hl_s1
__class_vars
protocol-name
__cls_meth
__builtin_HEXAGON_M2_mpyud_ll_s1
__cls_refs
-aux-target-cpu
__inst_meth
__builtin_HEXAGON_M2_mpyud_nac_hl_s1
__instance_vars
<align>
__message_refs
-fno-objc-msgsend-selector-stubs
__meta_class
kernel
__protocol
__builtin_HEXAGON_M2_subacc
__selector_strs
__string_object
__builtin_HEXAGON_M2_vcmac_s0_sat_r
__symbols
-mcmodel=large
__picsymbol_stub
__builtin_HEXAGON_M2_vcmpy_s1_sat_r
__static_const
NSDictionary *
__static_data
-mno-execute-only
__symbol_stub
-treat-scalable-fixed-error-as-warning
__thread_data
__builtin_HEXAGON_M2_vmac2es
__thread_init
__thread_vars
__builtin_HEXAGON_M2_vmac2s_s1
-fjmc
invalid OS update specifier, comma expected
__builtin_HEXAGON_M2_vmpy2es_s1
OS update
 major version number, integer expected
-frecord-command-line
 major version number
 minor version number required, comma expected
__builtin_HEXAGON_M2_vradduh
 minor version number, integer expected
mutableCopy
 minor version number
__builtin_HEXAGON_M2_vrcmacr_s0c
 version number, integer expected
please use -maltivec and include altivec.h explicitly
 version number
__builtin_HEXAGON_M2_vrcmpyr_s0c
struct <anonymous>
SDK subminor
-mno-extended-const
 used while targeting 
please use -mno-altivec
overriding previous version directive
__builtin_HEXAGON_M4_and_and
previous definition is here
class <anonymous>
 in '
__builtin_HEXAGON_M4_cmpyi_wh
platform name expected
unknown platform name
__builtin_HEXAGON_M4_mac_up_s1_sat
version number required, comma expected
enum <anonymous>
 in '.build_version' directive
-fno-objc-nonfragile-abi
expected integer version in '.ptrauth_abi_version' directive
-header-include-format=
invalid ptrauth ABI version number
__builtin_HEXAGON_M4_mpyrr_addr
 in '.ptrauth_abi_version' directive
BOOL
expected integer version in '.ptrauth_kernel_abi_version' directive
__builtin_HEXAGON_M4_or_or
invalid ptrauth kernel ABI version number
-header-include-filtering=
 in '.ptrauth_kernel_abi_version' directive
__builtin_HEXAGON_M4_vpmpyh
.rodata
NSArray
.data.rel
Do not assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
.data.rel.ro
-disable-pragma-debug-crash
.size
__builtin_HEXAGON_M4_vrmpyoh_s0
.symver
NSSet
.version
__builtin_HEXAGON_M4_xor_or
.weakref
-crash-diagnostics-dir=
.local
__builtin_HEXAGON_M5_vmacbsu
.protected
objectIn
.internal
-frecord-marker=
.hidden
-ffunction-sections
.subsection
__builtin_HEXAGON_S2_addasl_rrri
Section cannot specifiy a group name while also acting as a member of the last group
AtIndexes
Mergeable section must specify the type
LLiLLiLLiUIi
Group section must specify the type
.note
__builtin_HEXAGON_S2_asl_i_p_xacc
init_array
indexes
fini_array
-mno-fix-cmse-cve-2021-35465
preinit_array
CLANG_PROJECT_INDEX_PATH
nobits
__builtin_HEXAGON_S2_asl_i_vh
progbits
llvm_odrtab
__builtin_HEXAGON_S2_asl_r_p_and
llvm_linker_options
-index-store-path
llvm_call_graph_profile
Implicitly search the file system for module map files.
llvm_dependent_libraries
-fnew-alignment
llvm_sympart
-fno-objc-relative-method-lists
llvm_bb_addr_map
-index-ignore-system-symbols
llvm_offloading
__builtin_HEXAGON_S2_asr_i_p
unknown section type
inRange
changed section type for 
__builtin_HEXAGON_S2_asr_i_p_or
, expected: 0x
-Wno-
changed section flags for 
__builtin_HEXAGON_S2_asr_i_r_acc
changed section entsize for 
insertObject:
, expected: 
-mno-fix-cortex-a53-835769
DWARF2 only supports one section per compilation unit
-pedantic
expected '@<type>', '%<type>' or "<type>"
__builtin_HEXAGON_S2_asr_i_vw
expected '%<type>' or "<type>"
insert
expected the entry size
__builtin_HEXAGON_S2_asr_r_p_nac
entry size must be positive
GCC_TREAT_WARNINGS_AS_ERRORS
expected group name
__builtin_HEXAGON_S2_asr_r_r_acc
invalid group name
atIndexes:
invalid linkage
Preserve the type for recovery expressions when possible
Linkage must be 'comdat'
expected linked-to symbol
__builtin_HEXAGON_S2_brev
invalid linked-to symbol
replaceObjectIn
linked-to symbol is not in a section: 
__builtin_HEXAGON_S2_cl1
expected 'unique'
-Wno-error
expected commma
__builtin_HEXAGON_S2_clbp
unique id must be positive
withObject:
unique id is too large
-mno-fix-cortex-a57-aes-1742098
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '%<type>' or "<type>"
-std=c++98
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '@<type>', '%<type>' or "<type>"
__builtin_HEXAGON_S2_extractu
expected symbol type in directive
with
unsupported attribute in '.type' directive
LLiLLiUIiUIi
unexpected token in '.type' directive
-std=c89
unexpected token in '.ident' directive
__builtin_HEXAGON_S2_insert_rp
expected a comma
NSEnumerator *
expected a '@' in the name
-fno-objc-weak
-fgnu-keywords
expected 'remove'
__builtin_HEXAGON_S2_lsl_r_p_acc
unexpected token in '.version' directive
Object
asm-macro-max-nesting-depth
__builtin_HEXAGON_S2_lsl_r_p_xor
The maximum nesting depth allowed for assembly macros.
-foperator-arrow-depth
expected newline
__builtin_HEXAGON_S2_lsl_r_r_nac
unexpected token
objects
expected integer count in '.cg_profile' directive
-mno-fix-cortex-a72-aes-1655431
expected string in directive, instead got: 
-Wlarge-by-value-copy=64
__builtin_HEXAGON_S2_lsr_i_p_or
Only data sections can be passive
keyPathsForValuesAffecting
Expected 
__builtin_HEXAGON_S2_lsr_i_r_and
, instead got: 
standalone
.size directive ignored for function symbols
__builtin_HEXAGON_S2_lsr_i_vh
Expected label after .type directive, got: 
automaticallyNotifiesObserversOf
Expected label,@type declaration, got: 
Preserve expressions in AST rather than dropping them when encountering semantic errors
Unknown WASM symbol type: 
swift
__builtin_HEXAGON_S2_lsr_r_r
.csect
__promise
XCOFFAsmParser directive not yet supported!
__builtin_HEXAGON_S2_lsr_r_r_or
expected assembly-time absolute expression
swift-5.0
invalid number of bytes
__builtin_HEXAGON_S2_parityp
invalid .org offset '
final_suspend
' (at offset '
-mno-float128
Fragment can't be larger than a bundle size
swift-4.2
Padding cannot exceed 255 bytes
__builtin_HEXAGON_S2_svsathub
<stdin>
await_transform
checksum_offset
__builtin_HEXAGON_S2_tableidxw_goodsyntax
swift-4.1
Cannot initialize MC for non-Windows COFF object files.
__builtin_HEXAGON_S2_tstbit_r
Cannot initialize MC for unknown object file format.
-fnew-infallible
-fno-odr-hash-categories
._Renamed..
-ftarget-variant-availability-checks
_Renamed..
__builtin_HEXAGON_S2_vsathb
invalid symbol name from source
return_value
section's multiply symbols policy does not match
__builtin_HEXAGON_S2_vsatwh
.section
-fno-constant-nsnumber-literals
inconsistent use of embedded source
__builtin_HEXAGON_S2_vsplatrb
get_return_object_on_allocation_failure
0x%02llx
-mno-fma
<<invalid>>
-fno-constant-nsarray-literals
DTPOFF
__builtin_HEXAGON_S2_vtrunohb
DTPREL
get_return_object
__builtin_HEXAGON_S4_addaddi
GOTOFF
-fno-constant-nsdictionary-literals
GOTREL
__builtin_HEXAGON_S4_andi_lsr_ri
PCREL
std::coroutine_traits
GOTPCREL
-freg-struct-return
GOTPCREL_NORELAX
-fconstant-array-class
GOTTPOFF
__builtin_HEXAGON_S4_lsli
INDNTPOFF
await_ready
NTPOFF
__builtin_HEXAGON_S4_or_andix
GOTNTPOFF
-fconstant-dictionary-class
__builtin_HEXAGON_S4_parity
TLSGD
await_resume
TLSLD
-mno-fprnd
TLSLDM
-fconstant-integer-number-class
TPOFF
__builtin_HEXAGON_S4_vxaddsubh
TPREL
coroutine_handle
tlscall
__builtin_HEXAGON_S4_vxsubaddhr
tlsdesc
-fconstant-float-number-class
TLVP
__builtin_HEXAGON_S5_popcountp
TLVPPAGE
__hipPushCallConfiguration
TLVPPAGEOFF
Disable ODR hash checking for categories
PAGE
-fconstant-double-number-class
PAGEOFF
vv*i
GOTPAGE
__cudaPushCallConfiguration
GOTPAGEOFF
v60|v62|v65|v66|v67|v68|v69
SECREL32
-ftabstop
SIZE
__builtin_HEXAGON_S6_rol_i_p_or
WEAKREF
typename 
ABS8
-mno-fxsr
PLTOFF
-stack-usage-file
GOT_PREL
__builtin_HEXAGON_M6_vabsdiffb
target1
static 
target2
__builtin_HEXAGON_S6_vtrunohb_ppp
prel31
sbrel
v66|v67|v68|v69
tlsldo
printf
tlsdescseq
-fregister-global-dtors-with-atexit
__builtin_HEXAGON_A7_vclip
hlo8
  int 
diff8
__builtin_HEXAGON_F2_dfmpyfix
diff16
diff32
__builtin_HEXAGON_M7_dcmpyiw
htonl
-mno-ginv
high
-fmacro-backtrace-limit
higha
__builtin_HEXAGON_M7_vdmpy
highera
qsort
highesta
__builtin_HEXAGON_M7_wcmpyiwc
got@l
-ftemplate-backtrace-limit
got@h
-flax-vector-conversions
got@ha
Enable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
tocbase
-fno-odr-hash-interfaces
-fmessage-length=
toc@l
__builtin_HEXAGON_Y6_dmwait
toc@h
fdatasync
toc@ha
iV32ii
dtpmod
-frandomize-layout-seed=
tprel@l
V32iV64i
tprel@h
CGSSetDebugOptions
tprel@ha
Disable merging of globals
tprel@high
-frandomize-layout-seed-file=
tprel@higha
V64bV64bV64b
tprel@higher
CGSCreateShadowCacheDebugInfo
tprel@highera
__builtin_HEXAGON_V6_pred_and_n_128B
tprel@highest
-ftype-visibility=default
tprel@highesta
V128bV128b
dtprel@l
inaddr6_any
dtprel@h
-fregs-graph
dtprel@ha
-fvisibility=protected
dtprel@high
V128bi
dtprel@higha
AXAuditIsQueue
dtprel@higher
__builtin_HEXAGON_V6_vS32b_nqpred_ai_128B
dtprel@highera
-fvisibility-from-dllstorageclass
dtprel@highest
__builtin_HEXAGON_V6_vS32b_nt_qpred_ai_128B
dtprel@highesta
scanf
got@tprel
Do not use GP relative accesses for symbols known to be in a small data section (MIPS)
got@tprel@l
-mignore-xcoff-visibility
got@tprel@h
__builtin_HEXAGON_V6_vabsdiffub_128B
got@tprel@ha
align_val_t
got@dtprel
__builtin_HEXAGON_V6_vabsdiffw_128B
got@dtprel@l
-fvisibility-inlines-hidden
got@dtprel@h
V32iV32i
got@dtprel@ha
<global>
got@tlsgd
Disable ODR hash checking for interfaces
got@tlsgd@l
-fnew-infallible
got@tlsgd@h
__builtin_HEXAGON_V6_vaddb_128B
got@tlsgd@ha
setjmp.h
__builtin_HEXAGON_V6_vaddbnq
got@tlsld
-fopenmp
got@tlsld@l
__builtin_HEXAGON_V6_vaddbq
got@tlsld@h
[[clang::require_constant_initialization]]
got@tlsld@ha
-mno-htm
got@pcrel
-fnoopenmp-use-tls
got@tlsgd@pcrel
__builtin_HEXAGON_V6_vaddhq
got@tlsld@pcrel
intptr_t
got@tprel@pcrel
__builtin_HEXAGON_V6_vaddhsat_dv
tls@pcrel
-fopenmp-optimistic-collapse
tlsld
__builtin_HEXAGON_V6_vaddhw_128B
notoc
ptrdiff_t
IMGREL
Enable C++17 relaxed template template argument matching
LO16
-fopenmp-cuda-mode
HI16
__builtin_HEXAGON_V6_vadduhsat
GPREL
fpmath=
GDGOT
__builtin_HEXAGON_V6_vadduhw
LDGOT
-fopenmp-target-debug
GDPLT
__builtin_HEXAGON_V6_vaddw_dv
LDPLT
branch-protection
Disable Hexagon HVX IEEE floating-point
IEGOT
-fopenmp-assume-teams-oversubscription
TYPEINDEX
__builtin_HEXAGON_V6_vaddwsat_dv
MBREL
'ns_returns_retained'
TLSREL
__builtin_HEXAGON_V6_valignb_128B
TBREL
-fopenmp-assume-threads-oversubscription
GOT@TLS
__builtin_HEXAGON_V6_valignbi_128B
gotpcrel32@lo
-fnext-runtime
gotpcrel32@hi
-fno-odr-hash-ivars
rel32@lo
-fopenmp-assume-no-thread-state
rel32@hi
__builtin_HEXAGON_V6_vandqrt_acc
rel64
'interrupt'
abs32@lo
__builtin_HEXAGON_V6_vandvrt
abs32@hi
-fopenmp-assume-no-nested-parallelism
pc_hi
__builtin_HEXAGON_V6_vandvrt_acc
pc_lo
'export_name'
gotoff_hi
Disable Hexagon HVX QFloat instructions
gotoff_lo
-fopenmp-offload-mandatory
plt_hi
__builtin_HEXAGON_V6_vaslhv
plt_lo
printf0
tls_gd_hi
__builtin_HEXAGON_V6_vaslw_acc
tls_gd_lo
-fprofile-list=
tpoff_hi
__builtin_HEXAGON_V6_vasrh
tpoff_lo
cmn_err
-freorder-blocks
typeindex
unable to evaluate offset for variable '
__builtin_HEXAGON_V6_vasrhv
unable to evaluate offset to undefined symbol '
zcmn_err
__eh_frame
__builtin_HEXAGON_V6_vasrw_acc
__ustring
-fpatchable-function-entry-offset=
__common
__builtin_HEXAGON_V6_vasrwhrndsat
__llvm_addrsig
freebsd_kprintf
__gcc_except_tab
Disable Hexagon Vector eXtensions
__LD
-ftrapv-handler
__compact_unwind
__builtin_HEXAGON_V6_vassign
__DWARF
os_log
__debug_names
V64iV64i
debug_names_begin
-ftrap-function-returns
__apple_names
__builtin_HEXAGON_V6_vavghrnd_128B
names_begin
gcc_cdiag
__apple_objc
Disable ODR hash checking for ivars
objc_begin
-ftrap-function=
__apple_namespac
__builtin_HEXAGON_V6_vavguhrnd_128B
namespac_begin
gcc_tdiag
__apple_types
__builtin_HEXAGON_V6_vavgwrnd_128B
types_begin
-fwrapv
__debug_abbrev
__builtin_HEXAGON_V6_vcl0w_128B
section_abbrev
NSMutableString
__debug_info
-mno-implicit-float
section_info
-mstack-alignment=
__debug_line
__builtin_HEXAGON_V6_vdealb_128B
section_line
string type
__debug_line_str
__builtin_HEXAGON_V6_vdealh_128B
section_line_str
-mstack-probe-size=0
__debug_frame
V64iV32iV32ii
__debug_pubnames
functions, classes, or enumerations
__debug_pubtypes
-freroll-loops
__debug_gnu_pubn
-arm-restrict-it
__debug_gnu_pubt
__builtin_HEXAGON_V6_vdmpybus_dv_128B
__debug_str
__declspec(thread)
info_string
V64iV64iV64ii
__debug_str_offs
-arm-default-it
section_str_off
__builtin_HEXAGON_V6_vdmpyhb_acc_128B
__debug_addr
Compute
__debug_loc
-mno-implicit-sme
section_debug_loc
-fgpu-allow-device-init
__debug_loclists
V32iV64ii
__debug_aranges
memtag
__debug_ranges
V32iV32iV64ii
debug_range
-fgpu-rdc
__debug_rnglists
Specify default stream. The default value is 'legacy'. (HIP only)
__debug_macinfo
-fno-aapcs-bitfield-width
__debug_macro
-fno-odr-hash-methods
__debug_inlined
-fgpu-defer-diag
__debug_cu_index
__builtin_HEXAGON_V6_vdmpyhsusat_acc_128B
__debug_tu_index
sealed
__LLVM_STACKMAPS
V16iV16iV16iV16i
__llvm_stackmaps
-nogpulib
__LLVM_FAULTMAPS
__builtin_HEXAGON_V6_vdsaduh_128B
__llvm_faultmaps
 final
__remarks
-mno-incremental-linker-compatible
.bss
-fcf-protection=
.text
V64bV64bV16iV16i
.rodata.cst4
 const &
.rodata.cst8
__builtin_HEXAGON_V6_veqb_or_128B
.rodata.cst16
SampleUse with PGO options
.rodata.cst32
__builtin_HEXAGON_V6_veqh_128B
.gcc_except_table
.llvm_stackmaps
-fretain-comments-from-system-headers
.llvm_faultmaps
-funique-internal-linkage-names
.stack_sizes
__builtin_HEXAGON_V6_veqw_128B
.pseudo_probe
std::
.pseudo_probe_desc
__builtin_HEXAGON_V6_veqw_or_128B
.ppa1
-fapinotes
.rdata
__builtin_HEXAGON_V6_vgtb_128B
.debug$S
using 
.debug$T
-mno-inline-all-stringops
.debug$H
-fblocks
section_debug_loclists
__builtin_HEXAGON_V6_vgth_128B
section_info_dwo
constexpr auto 
section_types_dwo
__builtin_HEXAGON_V6_vgth_or_128B
section_abbrev_dwo
-fgnuc-version=
skel_string
__builtin_HEXAGON_V6_vgtub_128B
skel_loc
section_str_off_dwo
Disable ODR hash checking for methods
addr_sec
-fms-compatibility-version=
.drectve
__builtin_HEXAGON_V6_vgtuh_128B
.pdata
tuple_size
.xdata
__builtin_HEXAGON_V6_vgtuh_or_128B
.sxdata
.gehcont$y
__builtin_HEXAGON_V6_vgtuw_128B
.gfids$y
.giats$y
-mno-invpcid
.gljmp$y
-std=c11
.tls$
__builtin_HEXAGON_V6_vgtw_128B
.rodata.gcc_except_table
__builtin_objc_memmove_collectable
.rodata.8
__builtin_HEXAGON_V6_vgtw_or_128B
.rodata.16
.eh_info_table
__builtin_HEXAGON_V6_vinsertwr_128B
.dwabrev
.dwinfo
-frewrite-includes
.dwline
-std=c17
.dwframe
__builtin_HEXAGON_V6_vlsrhv_128B
.dwpbnms
.dwpbtyp
__builtin_HEXAGON_V6_vlsrwv_128B
.dwstr
c++14
.dwloc
V16iV16iV16iV16ii
.dwarnge
__covariant
.dwrnges
-mno-kl
.dwmac
-std=c++14
DXBC
V64iV64iV32iV32ii
.section
.linkonce
__builtin_HEXAGON_V6_vmaxub_128B
IMAGE_SCN_CNT_UNINITIALIZED_DATA
-std=c++17
,#alloc
__builtin_HEXAGON_V6_vmaxw_128B
,#execinstr
Do not follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
,#write
-fno-odr-hash-properties
,#exclude
c++20
,#tls
__builtin_HEXAGON_V6_vminw_128B
0x7000001e
macOS 10.11
llvm_bb_addr_map_v0
__builtin_HEXAGON_V6_vmpabus_acc_128B
unsupported type 0x
-std=c++20
 for section 
__builtin_HEXAGON_V6_vmpabuuv_128B
,comdat
throw()
,unique,
-mno-local-sdata
.subsection
-std=c++2b
SHT_NOBITS
V64iV32ii
0123456789_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
noexcept(
,none,
V64iV64iV32ii
mach-o section specifier requires a segment and section separated by a comma
-std=c++11
mach-o section specifier requires a section whose length is between 1 and 16 characters
V32iV32iV16iV16i
mach-o section specifier uses an unknown section type
NULL
mach-o section specifier of type 'symbol_stubs' requires a size specifier
-fripa
mach-o section specifier has invalid attribute
-fno-declspec
mach-o section specifier cannot have a stub size specified because it does not have type 'symbol_stubs'
__builtin_HEXAGON_V6_vmpyewuh_128B
mach-o section specifier has a malformed stub size
object_getClass
regular
__builtin_HEXAGON_V6_vmpyhsat_acc_128B
S_REGULAR
-fno-threadsafe-statics
zerofill
__builtin_HEXAGON_V6_vmpyhss_128B
S_ZEROFILL
__builtin_trap
cstring_literals
-mno-long-calls
S_CSTRING_LITERALS
-fdelayed-template-parsing
4byte_literals
__builtin_HEXAGON_V6_vmpyhv_acc_128B
S_4BYTE_LITERALS
(void *)0
8byte_literals
__builtin_HEXAGON_V6_vmpyieoh_128B
S_8BYTE_LITERALS
-fmodules-codegen
literal_pointers
__builtin_HEXAGON_V6_vmpyiewuh_128B
S_LITERAL_POINTERS
less_equal
non_lazy_symbol_pointers
Disable ODR hash checking for properties
S_NON_LAZY_SYMBOL_POINTERS
-fmodules-debuginfo
lazy_symbol_pointers
__builtin_HEXAGON_V6_vmpyihb_128B
S_LAZY_SYMBOL_POINTERS
greater_equal
symbol_stubs
__builtin_HEXAGON_V6_vmpyiowh_128B
S_SYMBOL_STUBS
-fobjc-encode-cxx-class-template-spec
mod_init_funcs
__builtin_HEXAGON_V6_vmpyiwb_acc_128B
S_MOD_INIT_FUNC_POINTERS
(void)(
mod_term_funcs
-mno-longcall
S_MOD_TERM_FUNC_POINTERS
-fapplication-extension
coalesced
__builtin_HEXAGON_V6_vmpyowh_rnd_128B
S_COALESCED
object_setClass(
S_GB_ZEROFILL
__builtin_HEXAGON_V6_vmpyowh_sacc_128B
interposing
-exception-model=sjlj
S_INTERPOSING
__builtin_HEXAGON_V6_vmpyub_acc_128B
16byte_literals
(vector of 
S_16BYTE_LITERALS
Generate read-only position independent code (ARM only)
S_DTRACE_DOF
-exception-model=seh
S_LAZY_DYLIB_SYMBOL_POINTERS
__builtin_HEXAGON_V6_vmpyuh_acc_128B
thread_local_regular
' values)
S_THREAD_LOCAL_REGULAR
__builtin_HEXAGON_V6_vmpyuhv_acc_128B
thread_local_zerofill
-exception-model=dwarf
S_THREAD_LOCAL_ZEROFILL
__builtin_HEXAGON_V6_vnavgh_128B
thread_local_variables
isEqual
S_THREAD_LOCAL_VARIABLES
Disable control-flow mitigations for Load Value Injection (LVI)
thread_local_variable_pointers
-exception-model=wasm
S_THREAD_LOCAL_VARIABLE_POINTERS
__builtin_HEXAGON_V6_vnormamtw_128B
thread_local_init_function_pointers
S_THREAD_LOCAL_INIT_FUNCTION_POINTERS
__builtin_HEXAGON_V6_vor_128B
S_INIT_FUNC_OFFSETS
-fno-aligned-allocation
pure_instructions
-flimited-precision=
S_ATTR_PURE_INSTRUCTIONS
-fno-access-control
no_toc
-fno-odr-hash-protocols
S_ATTR_NO_TOC
-faligned-allocation
strip_static_syms
__builtin_HEXAGON_V6_vpackoh_128B
S_ATTR_STRIP_STATIC_SYMS
0x2 ^ 
no_dead_strip
__builtin_HEXAGON_V6_vpackwuh_sat_128B
S_ATTR_NO_DEAD_STRIP
-fno-constant-cfstrings
live_support
__builtin_HEXAGON_V6_vrdelta_128B
S_ATTR_LIVE_SUPPORT
0xA ^ 
self_modifying_code
Disable mitigations for Load Value Injection (LVI)
S_ATTR_SELF_MODIFYING_CODE
-fpack-struct=
S_ATTR_DEBUG
V64iV64iiUIi
S_ATTR_SOME_INSTRUCTIONS
__imag
S_ATTR_EXT_RELOC
V64iV64iV64iiUIi
S_ATTR_LOC_RELOC
-fpack-struct=1
.csect 
__builtin_HEXAGON_V6_vrmpybusv_acc_128B
Unhandled storage-mapping class for .text csect
__impl
Unhandled storage-mapping class for .rodata csect.
-frtlib-add-rpath
Unhandled storage-mapping class for .tdata csect.
-fmax-type-align=16
.toc
__builtin_HEXAGON_V6_vrmpyub_acc_128B
Unhandled storage-mapping class for .data csect.
operator""
.dwsect 
__builtin_HEXAGON_V6_vrmpyubi_acc_128B
0x%x
Printing for this SectionKind is unimplemented.
__builtin_HEXAGON_V6_vrmpyubv_acc_128B
unsupported directive in streamer
default new
line_table_start
-mno-lzcnt
this directive must appear between .cfi_startproc and .cfi_endproc directives
-fptrauth-intrinsics
parent function id not introduced by .cv_func_id or .cv_inline_site_id
__builtin_HEXAGON_V6_vroundwh_128B
symbol '
__builtin_operator_delete
starting new .cfi frame before finishing the previous one
__builtin_HEXAGON_V6_vrsadubi_128B
.seh_* directives are not supported on this target
-fptrauth-calls
.seh_ directive must appear within an active frame
__builtin_HEXAGON_V6_vsathub_128B
Starting a function before ending the previous one!
expr-type
Not all chained regions terminated!
Disable ODR hash checking for protocols
End of a chained region outside a chained region!
-fptrauth-returns
Chained unwind areas can't have handlers!
__builtin_HEXAGON_V6_vsh_128B
Don't know what kind of handler this is!
frame register and offset can be set at most once
__builtin_HEXAGON_V6_vshuffb_128B
offset is not a multiple of 16
-fptrauth-indirect-gotos
frame offset must be less than or equal to 240
__builtin_HEXAGON_V6_vshuffh_128B
stack allocation size must be non-zero
even
stack allocation size is not a multiple of 8
Disable the generation of 4-operand madd.s, madd.d and related instructions.
register save offset is not 8 byte aligned
-fptrauth-auth-traps
If present, PushMachFrame must be the first UOP
__builtin_HEXAGON_V6_vshufoeh_128B
EmitRawText called on an MCStreamer that doesn't support it (target backend is likely missing an AsmStreamer implementation)
NSConstantString
Unfinished frame!
__builtin_HEXAGON_V6_vsubb_128B
DWARF64 Mark
-fptrauth-vtable-pointer-address-discrimination
_end
__builtin_HEXAGON_V6_vsubbnq_128B
emitXCOFFExceptDirective is only supported on XCOFF targets
valueWithBytes
Symbol name with unsupported characters
-frtti-data
-fptrauth-vtable-pointer-type-discrimination
__builtin_HEXAGON_V6_vsubhnq_128B
Unable to find target for this triple (no targets are registered)
bytes
  Registered Targets:
__builtin_HEXAGON_V6_vsubhsat_128B
    (none)
-fptrauth-objc-isa-mode=sign-and-auth
__builtin_HEXAGON_V6_vsubhw_128B
integral
Disable generation of memop instructions
-fptrauth-objc-interface-sel
__builtin_HEXAGON_V6_vsubuhsat_128B
NSCopying
__rvv_
__builtin_HEXAGON_V6_vsubuhw_128B
uint
-fptrauth-soft
vbool
__builtin_HEXAGON_V6_vsubw_dv_128B
Disable C++ access control
-fno-odr-hash-records
-fptrauth-block-descriptor-pointers
__builtin_HEXAGON_V6_vsubwsat_dv_128B
_tum
__bridge_transfer 
_tam
V64iV128bV32iV32i
_tumu
-fptrauth-function-pointer-type-discrimination
_tamu
__builtin_HEXAGON_V6_vtmpyb_acc_128B
_tuma
__bridge 
_tama
-mno-mfocrf
-fptrauth-objc-class-ro
<{0}>
__builtin_HEXAGON_V6_vtmpyhb_acc_128B
"{0}"
__bridge_retained 
#include {0}
__builtin_HEXAGON_V6_vunpackh_128B
-ftyped-memory-operations
export
V64iV64iV32i
*** HeaderSearch Stats:
 = {}
 files tracked.
-frwpi
utf-8
 #import/#pragma once files.
__builtin_HEXAGON_V6_vxor_128B
 #include/#include_next/#import.
'\0'
    
__builtin_HEXAGON_V6_vzh_128B
 #includes skipped due to the multi-include optimization.
-vectorize-loops
 framework lookups.
__builtin_HEXAGON_V6_lvsplath
 subframework lookups.
u'\0'
-mno-mips16
Private
-fdollars-in-identifiers
.framework
__builtin_HEXAGON_V6_vaddbsat
.system_framework
Filter Mode
Headers/
__builtin_HEXAGON_V6_vaddcarry
Frameworks/
-frewrite-imports
PrivateHeaders/
__builtin_HEXAGON_V6_vaddclbh
Modules
Disable ODR hash checking for records
file-search
-frewrite-includes
NumIncluded
__builtin_HEXAGON_V6_vaddububb_sat
Number of attempted #includes.
NumMultiIncludeFileOptzn
__builtin_HEXAGON_V6_vadduwsat
Number of #includes skipped due to the multi-include optimization.
-serialize-diagnostic-file
NumFrameworkLookups
__builtin_HEXAGON_V6_vandnqrt
Number of framework lookups.
cbegin
NumSubFrameworkLookups
-mno-mmx
Number of subframework lookups.
-load
/System/DriverKit/System/Library/Frameworks
__builtin_HEXAGON_V6_vandvqv
/usr/lib/gcc
rend
i686-pc-cygwin
__builtin_HEXAGON_V6_vasruwuhrndsat
4.7.3
-plugin-arg-
4.5.3
__builtin_HEXAGON_V6_vlsrb
4.3.4
crend
4.3.2
/usr/include/c++/5.0
-fpass-plugin=
/usr/gnu/include/c++/4.4.3
__builtin_HEXAGON_V6_vlutvvbi
/include/c++
find
/include/c++/backward
__builtin_HEXAGON_V6_vlutvwh_oracci
../../..
-finclude-default-header
/boot/system/non-packaged/develop/headers
__builtin_HEXAGON_V6_vlutvwhi
/boot/system/develop/headers/os
lower_bound
/boot/system/develop/headers/os/app
-mno-movdir64b
/boot/system/develop/headers/os/arch
-disable-llvm-optzns
/boot/system/develop/headers/os/device
__builtin_HEXAGON_V6_vmpauhb
/boot/system/develop/headers/os/drivers
back
/boot/system/develop/headers/os/game
__builtin_HEXAGON_V6_vmpyewuh_64
/boot/system/develop/headers/os/interface
-greproducible
/boot/system/develop/headers/os/kernel
Use filesystem locks for implicit modules builds to avoid duplicating work in competing clang invocations.
/boot/system/develop/headers/os/locale
-fno-addrsig
/boot/system/develop/headers/os/mail
-fno-offload-lto
/boot/system/develop/headers/os/media
/boot/system/develop/headers/os/midi
__builtin_HEXAGON_V6_vsatuwuh
/boot/system/develop/headers/os/midi2
/boot/system/develop/headers/os/net
__builtin_HEXAGON_V6_vsubbsat_dv
/boot/system/develop/headers/os/opengl
/boot/system/develop/headers/os/storage
__builtin_HEXAGON_V6_vsubububb_sat
/boot/system/develop/headers/os/support
__invoke
/boot/system/develop/headers/os/translation
-mno-movt
/boot/system/develop/headers/os/add-ons/graphics
/boot/system/develop/headers/os/add-ons/input_server
__builtin_HEXAGON_V6_vabsb_128B
/boot/system/develop/headers/os/add-ons/mail_daemon
        
/boot/system/develop/headers/os/add-ons/registrar
__builtin_HEXAGON_V6_vaslh_acc_128B
/boot/system/develop/headers/os/add-ons/screen_saver
-record-command-line
/boot/system/develop/headers/os/add-ons/tracker
__builtin_HEXAGON_V6_vasruhubrndsat_128B
/boot/system/develop/headers/os/be_apps/Deskbar
__make_integer_seq
/boot/system/develop/headers/os/be_apps/NetPositive
-fsafe-buffer-usage-suggestions
/boot/system/develop/headers/os/be_apps/Tracker
-fembed-offload-object=
/boot/system/develop/headers/3rdparty
__builtin_HEXAGON_V6_vavgbrnd_128B
/boot/system/develop/headers/bsd
/boot/system/develop/headers/glibc
__builtin_HEXAGON_V6_vavguwrnd_128B
/boot/system/develop/headers/posix
-fcuda-short-ptr
/boot/system/develop/headers
__builtin_HEXAGON_V6_vgathermh
/usr/include/w32api
SCE_ORBIS_SDK_DIR
-mno-mpx
SCE_PROSPERO_SDK_DIR
-fcuda-allow-variadic-functions
/target/include_common
__builtin_HEXAGON_V6_vgathermhw
removed duplicate -I C++ includes
changed -I to -isystem for C include
vv*V64biiV32i
reordered C includes after C++ includes
-inline-threshold=
#include "..." search starts here:
__builtin_HEXAGON_V6_vgathermw_128B
#include <...> search starts here:
 (framework directory)
Disable LTO mode (default) for offload compilation
 (headermap)
-fopenmp-is-device
End of search list.
__builtin_HEXAGON_V6_vmpabuu_128B
ignoring duplicate directory "
  as it is a non-system directory that duplicates 
V16iV16iV16iLLi
a system directory
-fopenmp-host-ir-file-path
__builtin_HEXAGON_V6_vmpauhuhsat_128B
ident
Do not set the default structure layout to be compatible with the Microsoft compiler standard
<<<<
-fopenmp-targets=
>>>>>>>
__builtin_HEXAGON_V6_vmpyuhe_acc_128B
tomic_compare_exchange_weak_explicit
V16iV64b
Allocation failed
-flto=full
MacroInfo 
__builtin_HEXAGON_V6_vprefixqh_128B
 builtin
sub_group_clustered_reduce_logical_
 disabled
-fsanitize-address-destructor=
 allow_redefinitions_without_warning
-fno-whole-program-vtables
 warn_if_unused
__builtin_HEXAGON_V6_vscattermh_add_128B
 header_guard
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_add __opencl_c_ext_fp16_global_atomic_add
    #define <macro>
vV128biiV32iV32i
DefMacroDirective
-fwhole-program-vtables
UndefMacroDirective
viiV64iV32i
VisibilityMacroDirective
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_min_max __opencl_c_ext_fp16_global_atomic_min_max
 from_pch
Disable MSA ASE (MIPS only)
.framework
-flto
<global>
__builtin_HEXAGON_V6_vscattermw_128B
<private>
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_load_store
__builtin_HEXAGON_V6_vscattermwq_128B
exclude
-fno-split-lto-unit
export_as
__builtin_HEXAGON_V6_vaddcarrysat_128B
contents
Don't emit an address-significance table
framework 
-fno-omit-frame-pointer
module 
-fsanitize=cfi
framework module
__builtin_HEXAGON_V6_v6mpyhubs10
_ExtInt
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_min_max
_Generic
__builtin_HEXAGON_V6_v6mpyhubs10_vxx
_Thread_local
-global-isel=1
co_yield
__builtin_HEXAGON_V6_v6mpyvubs10_128B
typeof_unqual
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_min_max __opencl_c_ext_fp32_global_atomic_min_max
_Sat
Disable MT ASE (MIPS only)
_Decimal32
-global-isel-abort=2
_Decimal64
__builtin_HEXAGON_V6_vadd_hf_128B
_Decimal128
cl_ext_float_atomics __opencl_c_ext_fp32_global_atomic_min_max
__attribute
__builtin_HEXAGON_V6_vadd_qf16_128B
__builtin_choose_expr
-global-isel=0
__builtin_offsetof
__builtin_HEXAGON_V6_vadd_qf32_128B
__builtin_FILE
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_min_max
__builtin_FUNCTION
none,global
__builtin_LINE
AARCH64_ALWAYS_ENABLE_GLOBAL_ISEL
__builtin_COLUMN
__builtin_HEXAGON_V6_vadd_sf_sf_128B
__builtin_source_location
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_min_max __opencl_c_ext_fp64_global_atomic_min_max
__builtin_types_compatible_p
__builtin_HEXAGON_V6_vconv_hf_qf16_128B
__builtin_va_arg
-global-isel
__extension__
__builtin_HEXAGON_V6_vconv_sf_qf32_128B
__label__
cl_ext_float_atomics __opencl_c_ext_fp64_global_atomic_min_max
__thread
-mno-mutable-globals
__FUNCDNAME__
-global-isel-abort=0
__FUNCSIG__
__builtin_HEXAGON_V6_vcvt_hf_h_128B
L__FUNCTION__
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_min_max
L__FUNCSIG__
__builtin_HEXAGON_V6_vcvt_hf_ub_128B
__is_trivially_destructible
-forder-file-instrumentation
__has_nothrow_move_assign
__builtin_HEXAGON_V6_vcvt_sf_hf_128B
__has_trivial_move_assign
cl_khr_subgroup_ballot
__has_trivial_move_constructor
-fno-openmp-assume-teams-oversubscription
__has_nothrow_assign
-enable-order-file-instrumentation
__has_nothrow_copy
__builtin_HEXAGON_V6_vdmpy_sf_hf_acc_128B
__has_nothrow_constructor
cl_khr_subgroup_extended_types
__has_trivial_assign
__builtin_HEXAGON_V6_vfmax_sf_128B
__has_trivial_copy
+outline-atomics
__has_trivial_constructor
__builtin_HEXAGON_V6_vfmin_sf_128B
__has_trivial_destructor
cl_khr_subgroup_non_uniform_vote
__has_virtual_destructor
-mno-neg-immediates
__is_literal_type
-outline-atomics
__has_unique_object_representations
__builtin_HEXAGON_V6_vgthf_and_128B
__is_trivially_relocatable
cl_khr_subgroup_shuffle_relative
__reference_binds_to_temporary
__builtin_HEXAGON_V6_vgthf_xor_128B
__array_rank
-D__GCC_HAVE_DWARF2_CFI_ASM=1
__array_extent
__builtin_HEXAGON_V6_vgtsf_and_128B
__is_same_as
__opencl_c_named_address_space_builtins
__module_private__
Level of field padding for AddressSanitizer
__builtin_ptrauth_type_discriminator
__builtin_ptrauth_struct_key
__builtin_HEXAGON_V6_vmax_sf_128B
__builtin_ptrauth_struct_disc
__opencl_c_integer_dot_product_input_4x8bit
__builtin_xnu_type_signature
__builtin_HEXAGON_V6_vmin_sf_128B
__builtin_xnu_type_summary
-fomit-frame-pointer
__builtin_xnu_types_compatible
__builtin_HEXAGON_V6_vmpy_hf_hf_acc_128B
__builtin_tmo_get_type_data
cl_khr_subgroup_rotate
__builtin_tmo_get_type_descriptor
-mno-nontrapping-fptoint
__builtin_astype
clang frontend
vec_step
__builtin_HEXAGON_V6_vmpy_qf32_128B
image1d_t
__opencl_c_generic_address_space __opencl_c_atomic_scope_device
image1d_array_t
__builtin_HEXAGON_V6_vmpy_qf32_mix_hf_128B
image1d_buffer_t
-fobjc-runtime=
image2d_t
Enable logical abbreviations
image2d_array_t
-fno-aggressive-function-elimination
image2d_depth_t
-fno-openmp-assume-threads-oversubscription
image2d_array_depth_t
--show-includes
image2d_msaa_t
__builtin_HEXAGON_V6_vsub_hf_128B
image2d_array_msaa_t
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_load_store __opencl_c_atomic_scope_device
image2d_msaa_depth_t
__builtin_HEXAGON_V6_vsub_qf16_128B
image2d_array_msaa_depth_t
-stack-protector
image3d_t
__builtin_HEXAGON_V6_vsub_qf32_128B
pipe
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_add __opencl_c_atomic_scope_device
__builtin_omp_required_simd_align
Disable generation of new-value jumps
__bool
/JMC
__bridge_retain
__builtin_HEXAGON_V6_vsub_sf_sf_128B
__alignof__
cl_ext_float_atomics __opencl_c_ext_fp32_global_atomic_add __opencl_c_atomic_scope_device
__asm
__builtin_HEXAGON_V6_vasrvuhubrndsat_128B
__attribute__
'/Zi', '/Z7'
__complex
legacy,per-thread
__complex__
-fno-align-commons
__const__
-fget-definition
__decltype
-fexceptions
__imag__
__inline
-fsanitize-address-outline-instrumentation
__inline__
Disable generation of new-value stores
__nullptr
__real__
__restrict__
cl_ext_float_atomics __opencl_c_ext_fp32_global_atomic_min_max __opencl_c_atomic_scope_device
__signed
__signed__
-fno-dllexport-inlines
__typeof
__typeof__
cl_ext_float_atomics __opencl_c_ext_fp64_global_atomic_min_max __opencl_c_atomic_scope_device
__volatile
$r13
__volatile__
IA32
__w64
$r17
__uuidof
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_load_store __opencl_c_atomic_scope_device
__try
-mno-odd-spreg
__finally
/arch:
__int8
$r25
__int16
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_add __opencl_c_atomic_scope_device
__builtin_alignof
$r29
_asm
/kernel
_alignof
_declspec
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_add __opencl_c_atomic_scope_device
_finally
Disable odd single-precision floating point registers
_forceinline
_inline
_int8
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_add __opencl_c_atomic_scope_device
_int16
_int32
-fms-memptr-rep=single
_int64
_leave
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_min_max __opencl_c_atomic_scope_device
_multiple_inheritance
Always generate function calls for address sanitizer instrumentation
_ptr32
-fms-memptr-rep=multiple
_ptr64
_restrict
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_min_max __opencl_c_atomic_scope_device
_try
_unaligned
-fms-memptr-rep=virtual
_uptr
$fa3
_uuidof
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_min_max __opencl_c_atomic_scope_device
_virtual_inheritance
-mno-outline-atomics
_w64
-fdefault-calling-conv=cdecl
$ft3
__char16_t
__char32_t
$ft7
$ft11
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_add __opencl_c_ext_fp16_global_atomic_add __opencl_c_atomic_scope_device
-fno-openmp-extensions
IOKit
-fdefault-calling-conv=vectorcall
-fno-align-functions
__public_macro
_ATFILE_SOURCE
_CRT_SECURE_NO_WARNINGS
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_add __opencl_c_ext_fp64_global_atomic_add __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
__mc68010__
-fdiagnostics-format
_FORTIFY_SOURCE
_GLIBCXX_CONCEPT_CHECKS
_GLIBCXX_DEBUG_PEDANTIC
__STDCPP_WANT_MATH_SPEC_FUNCS__
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_min_max __opencl_c_ext_fp16_global_atomic_min_max __opencl_c_atomic_scope_device
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_min_max __opencl_c_ext_fp32_global_atomic_min_max __opencl_c_atomic_scope_device
_GLIBCXX_ASSERTIONS
-fms-kernel
_GLIBCXX_DEBUG
mc68030
_GLIBCXX_PARALLEL_ASSERTIONS
_GLIBCXX_SANITIZE_VECTOR
-fsanitize-address-use-after-return=
Disable function outlining (AArch64 only)
-mno-packets
-mno-retpoline
MSP430
__MSP430__
_GLIBCXX_USE_DEPRECATED
_ISOC95_SOURCE
_ISOC99_SOURCE
_LARGEFILE64_SOURCE
_THREAD_SAFE
_XOPEN_SOURCE
fenv.h
__builtin_mips_addu_qb
__builtin_mips_raddu_w_qb
__builtin_mips_precequ_ph_qbr
_GNU_SOURCE
clk_profiling_info
_ISOC11_SOURCE
_XOPEN_SOURCE_EXTENDED
boost
__builtin_mips_subq_ph
__builtin_mips_precrq_ph_w
complex.h
ctype.h
errno.h
float.h
limits.h
.part_id.
stdatomic.h
Select the mode of detecting stack use-after-return in AddressSanitizer
stdbool.h
arm64e
stddef.h
__builtin_mips_muleq_s_w_phr
stdint.h
.copy_fn.
stdlib.h
codecvt
numeric
limits
aio.h
__builtin_mips_maq_s_w_phr
__builtin_mips_extr_rs_w
__builtin_mips_extr_r_w
__builtin_mips_extp
__builtin_mips_wrdsp
viIi
__builtin_mips_rddsp
__builtin_mips_bitrev
__builtin_mips_packrl_ph
__builtin_mips_repl_qb
V4Sci
__builtin_mips_repl_ph
V2si
__builtin_mips_pick_qb
__builtin_mips_mthlip
__builtin_mips_bposge32
__builtin_mips_lbux
__builtin_mips_lhx
__builtin_mips_lwx
__builtin_mips_absq_s_qb
stdnoreturn.h
cstdio
V4ScV4Sc
__builtin_mips_addqh_ph
__builtin_mips_addqh_r_ph
__builtin_mips_addqh_w
__builtin_mips_addqh_r_w
__builtin_mips_addu_ph
__builtin_mips_addu_s_ph
__builtin_mips_adduh_qb
__builtin_mips_append
__builtin_mips_balign
__builtin_mips_cmpgdu_eq_qb
__builtin_mips_cmpgdu_le_qb
__builtin_mips_dpa_w_ph
__builtin_mips_dps_w_ph
__builtin_mips_dpaqx_sa_w_ph
__builtin_mips_dpax_w_ph
__builtin_mips_dpsx_w_ph
__builtin_mips_dpsqx_s_w_ph
__builtin_mips_dpsqx_sa_w_ph
__builtin_mips_mul_ph
__builtin_mips_mul_s_ph
__builtin_mips_mulq_s_ph
__builtin_mips_mulq_s_w
__builtin_mips_mulsa_w_ph
cstring
'map'
ctgmath
functional
#pragma omp unroll full
locale
-mno-pku
scoped_allocator
-type=
.unroll_inner.iv.
bitset
__builtin_mips_precr_qb_ph
__builtin_mips_precr_sra_ph_w
V2siiIi
__builtin_mips_precr_sra_r_ph_w
__builtin_mips_shra_qb
__builtin_mips_shra_r_qb
__builtin_mips_shrl_ph
__builtin_mips_subqh_ph
__builtin_mips_subqh_r_ph
__builtin_mips_subqh_w
__builtin_mips_subqh_r_w
__builtin_mips_subu_s_ph
__builtin_mips_subuh_qb
__builtin_mips_subuh_r_qb
V16ScV16ScV16Sc
__builtin_msa_add_a_h
V8SsV8SsV8Ss
V4SiV4SiV4Si
__builtin_msa_add_a_d
V2SLLiV2SLLiV2SLLi
__builtin_msa_adds_a_b
__builtin_msa_adds_a_h
__builtin_msa_adds_a_w
__builtin_msa_adds_a_d
__builtin_msa_adds_s_h
__builtin_msa_adds_s_w
__builtin_msa_adds_s_d
V16UcV16UcV16Uc
__builtin_msa_adds_u_h
V8UsV8UsV8Us
V4UiV4UiV4Ui
__builtin_msa_adds_u_d
V2ULLiV2ULLiV2ULLi
__builtin_msa_addv_b
V16cV16cV16c
__builtin_msa_addv_h
V8sV8sV8s
V4iV4iV4i
__builtin_msa_addv_d
V2LLiV2LLiV2LLi
V16cV16cIUi
__builtin_msa_addvi_h
V8sV8sIUi
V4iV4iIUi
__builtin_msa_addvi_d
V2LLiV2LLiIUi
__builtin_msa_and_v
__builtin_msa_andi_b
V16UcV16UcIUi
__builtin_msa_asub_s_b
shared_mutex
'source' or 'sink'
arch=
ftw.h
__builtin_msa_asub_s_h
__builtin_msa_asub_s_w
__builtin_msa_asub_s_d
__builtin_msa_asub_u_b
__builtin_msa_asub_u_w
__builtin_msa_asub_u_d
__builtin_msa_ave_s_b
__builtin_msa_ave_s_w
__builtin_msa_ave_s_d
__builtin_msa_ave_u_b
__builtin_msa_ave_u_h
__builtin_msa_ave_u_w
__builtin_msa_ave_u_d
__builtin_msa_aver_s_b
glob.h
Don't use the new driver for OpenMP offloading.
mqueue.h
feature=
ndbm.h
__builtin_msa_aver_s_h
__builtin_msa_aver_s_w
__builtin_msa_aver_s_d
__builtin_msa_aver_u_b
net/if.h
omp_event_handle_t
netdb.h
__builtin_msa_aver_u_h
__builtin_msa_aver_u_w
__builtin_msa_aver_u_d
__builtin_msa_bclr_b
__builtin_msa_bclr_w
__builtin_msa_bclr_d
__builtin_msa_bclri_b
__builtin_msa_bclri_h
V8UsV8UsIUi
__builtin_msa_bclri_w
V4UiV4UiIUi
V2ULLiV2ULLiIUi
__builtin_msa_binsl_b
V16UcV16UcV16UcV16Uc
V8UsV8UsV8UsV8Us
__builtin_msa_binsl_w
V4UiV4UiV4UiV4Ui
V2ULLiV2ULLiV2ULLiV2ULLi
__builtin_msa_binsli_b
V16UcV16UcV16UcIUi
__builtin_msa_binsli_h
V8UsV8UsV8UsIUi
__builtin_msa_binsli_w
V4UiV4UiV4UiIUi
V2ULLiV2ULLiV2ULLiIUi
__builtin_msa_binsr_b
__builtin_msa_binsr_h
__builtin_msa_binsr_d
__builtin_msa_binsri_b
__builtin_msa_binsri_h
__builtin_msa_binsri_d
__builtin_msa_bmnz_v
__builtin_msa_bmnzi_b
__builtin_msa_bmz_v
__builtin_msa_bmzi_b
__builtin_msa_bneg_b
__builtin_msa_bneg_h
__builtin_msa_bneg_d
__builtin_msa_bnegi_b
__builtin_msa_bnegi_h
__builtin_msa_bnegi_d
__builtin_msa_bnz_b
iV16Uc
iV8Us
__builtin_msa_bnz_w
iV4Ui
__builtin_msa_bnz_d
iV2ULLi
__builtin_msa_bnz_v
__builtin_msa_bsel_v
__builtin_msa_bset_b
__builtin_msa_bset_h
__builtin_msa_bset_w
__builtin_msa_bset_d
__builtin_msa_bseti_b
__builtin_msa_bseti_h
__builtin_msa_bseti_w
termios.h
--offload-opt=-pass-remarks-missed=
trace.h
__builtin_msa_bseti_d
__builtin_msa_bz_b
__builtin_msa_bz_h
__builtin_msa_bz_w
__builtin_msa_bz_d
__builtin_msa_bz_v
__builtin_msa_ceq_b
__builtin_msa_ceq_h
__builtin_msa_ceq_d
__builtin_msa_ceqi_b
V16ScV16ScISi
ulimit.h
.omp.stride
unistd.h
-mno-pure-code
utime.h
--offload-opt=-pass-remarks-analysis=
.omp.comb.ub
'defined'
__builtin_msa_ceqi_h
V8SsV8SsISi
__builtin_msa_ceqi_w
V4SiV4SiISi
V2SLLiV2SLLiISi
__builtin_msa_cfcmsa
__builtin_msa_cle_s_b
__builtin_msa_cle_s_h
__builtin_msa_cle_s_w
__builtin_msa_cle_s_d
__builtin_msa_cle_u_b
__builtin_msa_cle_u_h
V8SsV8UsV8Us
__builtin_msa_cle_u_w
__builtin_msa_cle_u_d
V2SLLiV2ULLiV2ULLi
__builtin_msa_clei_s_b
__builtin_msa_clei_s_w
__builtin_msa_clei_s_d
__builtin_msa_clei_u_b
V16ScV16UcIUi
__builtin_msa_clei_u_h
V8SsV8UsIUi
__builtin_msa_clei_u_w
__builtin_msa_clei_u_d
V2SLLiV2ULLiIUi
__builtin_msa_clt_s_b
__builtin_msa_clt_s_w
__builtin_msa_clt_s_d
__builtin_msa_clt_u_b
__builtin_msa_clt_u_h
__builtin_msa_clt_u_w
__builtin_msa_clt_u_d
__builtin_msa_clti_s_b
__builtin_msa_clti_s_h
__builtin_msa_clti_s_w
__builtin_msa_clti_s_d
__builtin_msa_clti_u_b
__builtin_msa_clti_u_w
__builtin_msa_clti_u_d
__builtin_msa_copy_s_b
__builtin_msa_copy_s_h
iV8SsIUi
__builtin_msa_copy_s_w
__builtin_msa_copy_s_d
LLiV2SLLiIUi
__builtin_msa_copy_u_b
iV16UcIUi
__builtin_msa_copy_u_h
iV8UsIUi
__builtin_msa_copy_u_w
__builtin_msa_copy_u_d
LLiV2ULLiIUi
__builtin_msa_ctcmsa
__builtin_msa_div_s_b
__builtin_msa_div_s_h
__builtin_msa_div_s_w
__builtin_msa_div_u_b
__builtin_msa_div_u_h
__builtin_msa_div_u_w
__builtin_msa_div_u_d
__builtin_msa_dotp_s_h
V8SsV16ScV16Sc
__builtin_msa_dotp_s_w
 to 
 ambiguous
.capture_expr.
 overrides
-fsanitize-blacklist=
__is_target_environment
-fsanitize-cfi-canonical-jump-tables
__has_target_variant
b_key
__is_target_variant_os
V4SiV8SsV8Ss
__builtin_msa_dotp_s_d
V2SLLiV4SiV4Si
__builtin_msa_dotp_u_h
__is_target_variant_environment
vlse32_v
__building_module
V8UsV16UcV16Uc
__builtin_msa_dotp_u_w
V4UiV8UsV8Us
__builtin_msa_dotp_u_d
__MODULE__
b-key
??? ??? ?? ??:??:?? ????
V2ULLiV4UiV4Ui
__builtin_msa_dpadd_s_h
V8SsV8SsV16ScV16Sc
__builtin_msa_dpadd_s_w
V4SiV4SiV8SsV8Ss
__builtin_msa_dpadd_s_d
V2SLLiV2SLLiV4SiV4Si
__builtin_msa_dpadd_u_h
__builtin_msa_dpadd_u_w
V4UiV4UiV8UsV8Us
__builtin_msa_dpadd_u_d
__builtin_msa_dpsub_s_h
__builtin_msa_dpsub_s_w
__builtin_msa_dpsub_s_d
__builtin_msa_dpsub_u_w
__builtin_msa_dpsub_u_d
__builtin_msa_fadd_w
V4fV4fV4f
__builtin_msa_fadd_d
V2dV2dV2d
__builtin_msa_fcaf_w
__builtin_msa_fcaf_d
V2LLiV2dV2d
__builtin_msa_fceq_w
__builtin_msa_fclass_w
V4iV4f
__builtin_msa_fclass_d
__builtin_msa_fcle_w
__builtin_msa_fcle_d
__builtin_msa_fclt_w
__builtin_msa_fclt_d
__builtin_msa_fcne_w
__builtin_msa_fcne_d
__builtin_msa_fcor_w
__builtin_msa_fcueq_w
__builtin_msa_fcueq_d
__builtin_msa_fcule_w
__builtin_msa_fcult_w
__builtin_msa_fcult_d
__builtin_msa_fcun_w
__builtin_msa_fcune_w
__builtin_msa_fcune_d
__builtin_msa_fdiv_w
__builtin_msa_fdiv_d
__builtin_msa_fexdo_h
V8hV4fV4f
__builtin_msa_fexdo_w
__builtin_msa_fexp2_w
V4fV4fV4i
__builtin_msa_fexp2_d
__builtin_msa_fexupl_w
V4fV8h
__builtin_msa_fexupl_d
__builtin_msa_fexupr_w
__builtin_msa_fexupr_d
__builtin_msa_ffint_s_w
V4fV4Si
__builtin_msa_ffint_s_d
V2dV2SLLi
__builtin_msa_ffint_u_w
__builtin_msa_ffint_u_d
V2dV2ULLi
__builtin_msa_ffql_w
-mno-reference-types
-msign-return-address=
+strict-align
vloxseg8ei16_v
attribute_deprecated_with_replacement
-fsanitize-cfi-cross-dso
attribute_ns_returns_not_retained
attribute_unavailable_with_message
V4fV8Ss
__builtin_msa_ffql_d
V2dV4Si
__builtin_msa_ffqr_w
cxx_default_function_template_args
-mno-type-check
cxx_reference_qualified_functions
__builtin_msa_ffqr_d
__builtin_msa_fill_b
V16Sci
__builtin_msa_fill_h
V8Ssi
__builtin_msa_fill_w
V4Sii
__builtin_msa_fill_d
__builtin_msa_flog2_w
V4fV4f
__builtin_msa_flog2_d
__builtin_msa_fmadd_w
V4fV4fV4fV4f
__builtin_msa_fmadd_d
pragma_clang_attribute_namespaces
-fno-align-loops
V2dV2dV2dV2d
__builtin_msa_fmax_w
__builtin_msa_fmax_d
__builtin_msa_fmax_a_w
__builtin_msa_fmax_a_d
__builtin_msa_fmin_w
__builtin_msa_fmin_d
__builtin_msa_fmin_a_w
__builtin_msa_fmsub_w
__builtin_msa_fmsub_d
__builtin_msa_fmul_w
__builtin_msa_frint_w
__builtin_msa_frint_d
__builtin_msa_frcp_w
__builtin_msa_frsqrt_w
__builtin_msa_frsqrt_d
__builtin_msa_fsaf_w
__builtin_msa_fsaf_d
__builtin_msa_fseq_w
__builtin_msa_fseq_d
__builtin_msa_fsle_w
__builtin_msa_fslt_w
__builtin_msa_fslt_d
__builtin_msa_fsne_w
__builtin_msa_fsor_w
__builtin_msa_fsor_d
__builtin_msa_fsqrt_w
'__has_warning'
vloxseg5ei64_v
#pragma clang __debug llvm_fatal_error
+mips2
 imported 
__builtin_msa_fsqrt_d
__builtin_msa_fsub_w
__builtin_msa_fsub_d
__builtin_msa_fsueq_w
__builtin_msa_fsueq_d
__builtin_msa_fsule_w
__builtin_msa_fsule_d
__builtin_msa_fsult_w
__builtin_msa_fsun_w
__builtin_msa_fsun_d
__builtin_msa_fsune_w
__builtin_msa_ftint_s_w
V4SiV4f
__builtin_msa_ftint_s_d
__builtin_msa_ftint_u_w
V4UiV4f
__builtin_msa_ftint_u_d
V2ULLiV2d
__builtin_msa_ftq_h
V4UiV4fV4f
__builtin_msa_ftq_w
via pragma 
vsseg3e8_v
pragma execution_character_set
vsseg6e8_v
UTF-8
*** Preprocessor Stats:
V2ULLiV2dV2d
__builtin_msa_ftrunc_s_w
__builtin_msa_ftrunc_s_d
__builtin_msa_ftrunc_u_w
__builtin_msa_hadd_s_h
__builtin_msa_hadd_s_w
__builtin_msa_hadd_s_d
__builtin_msa_hadd_u_w
__builtin_msa_hadd_u_d
__builtin_msa_hsub_s_h
__builtin_msa_hsub_s_w
__builtin_msa_hsub_s_d
__builtin_msa_hsub_u_h
__builtin_msa_hsub_u_w
 directives found:
vsseg8e8_v
__builtin_msa_hsub_u_d
__builtin_msa_ilvev_b
__builtin_msa_ilvev_h
__builtin_msa_ilvev_w
__builtin_msa_ilvl_b
__builtin_msa_ilvl_h
__builtin_msa_ilvl_w
__builtin_msa_ilvod_b
__builtin_msa_ilvod_h
__builtin_msa_ilvod_w
__builtin_msa_ilvod_d
__builtin_msa_ilvr_b
__builtin_msa_ilvr_h
__builtin_msa_ilvr_w
__builtin_msa_insert_b
V16ScV16ScIUii
__builtin_msa_insert_h
__builtin_msa_insert_w
V4SiV4SiIUii
__builtin_msa_insert_d
__builtin_msa_insve_b
V16ScV16ScIUiV16Sc
__builtin_msa_insve_h
V8SsV8SsIUiV8Ss
__builtin_msa_insve_w
V4SiV4SiIUiV4Si
__builtin_msa_insve_d
 #endif.
vsseg5e16_v
  Comment Handlers: 
+mips64
<scratch space>
V2SLLiV2SLLiIUiV2SLLi
__builtin_msa_ld_b
V16Scv*Ii
__builtin_msa_ld_h
__builtin_msa_ld_w
V4Siv*Ii
__builtin_msa_ld_d
V2SLLiv*Ii
__builtin_msa_ldr_d
__builtin_msa_ldr_w
__builtin_msa_ldi_b
V16cIi
__builtin_msa_ldi_h
V8sIi
__builtin_msa_ldi_w
vsseg5e32_v
V4iIi
__builtin_msa_ldi_d
V2LLiIi
__builtin_msa_madd_q_h
field
vsseg2e64_v
function
V8SsV8SsV8SsV8Ss
__builtin_msa_madd_q_w
V4SiV4SiV4SiV4Si
__builtin_msa_maddr_q_h
__builtin_msa_maddv_b
V16ScV16ScV16ScV16Sc
__builtin_msa_maddv_h
__builtin_msa_maddv_w
__builtin_msa_maddv_d
V2SLLiV2SLLiV2SLLiV2SLLi
__builtin_msa_max_a_b
__builtin_msa_max_a_w
__builtin_msa_max_a_d
__builtin_msa_max_s_b
function(is_member)
objc_property
__builtin_msa_max_s_h
__builtin_msa_max_s_w
__builtin_msa_max_s_d
__builtin_msa_max_u_b
__builtin_msa_max_u_w
__builtin_msa_max_u_d
__builtin_msa_maxi_s_b
V16ScV16ScIi
__builtin_msa_maxi_s_h
V8SsV8SsIi
__builtin_msa_maxi_s_w
__builtin_msa_maxi_s_d
V2SLLiV2SLLiIi
__builtin_msa_maxi_u_b
__builtin_msa_maxi_u_h
V8UsV8UsIi
__builtin_msa_maxi_u_w
__builtin_msa_maxi_u_d
V2ULLiV2ULLiIi
__builtin_msa_min_a_b
__builtin_msa_min_a_h
__builtin_msa_min_a_w
__builtin_msa_min_a_d
__builtin_msa_min_s_b
__builtin_msa_min_s_w
__builtin_msa_min_s_d
__builtin_msa_min_u_b
objc_protocol
record(unless(is_union))
vsseg8e64_v
hasType
-fsanitize-coverage-allowlist=
__builtin_msa_min_u_h
__builtin_msa_min_u_w
__builtin_msa_min_u_d
__builtin_msa_mini_s_b
__builtin_msa_mini_s_w
__builtin_msa_mini_s_d
__builtin_msa_mini_u_b
__builtin_msa_mini_u_h
__builtin_msa_mini_u_w
__builtin_msa_mini_u_d
__builtin_msa_mod_s_b
__builtin_msa_mod_s_w
__builtin_msa_mod_s_d
__builtin_msa_mod_u_b
lang::consumable_set_state_on_read
vssseg3e16_v
Do not treat C++ operator name keywords as synonyms for operators
__builtin_msa_mod_u_h
__builtin_msa_mod_u_w
__builtin_msa_mod_u_d
__builtin_msa_move_v
__builtin_msa_msub_q_h
__builtin_msa_msub_q_w
__builtin_msa_msubr_q_h
__builtin_msa_msubr_q_w
__builtin_msa_msubv_b
__builtin_msa_msubv_h
__builtin_msa_msubv_w
__builtin_msa_mul_q_h
__builtin_msa_mul_q_w
__builtin_msa_mulr_q_h
__builtin_abs
__builtin_msa_mulr_q_w
__builtin_msa_mulv_b
__builtin_msa_mulv_h
__builtin_msa_mulv_w
-mnoexecstack
__builtin_msa_mulv_d
__builtin_msa_nloc_b
__builtin_msa_nloc_h
V8SsV8Ss
__builtin_msa_nloc_w
V4SiV4Si
__builtin_msa_nloc_d
V2SLLiV2SLLi
__builtin_msa_nlzc_h
__builtin_msa_nlzc_w
__builtin_msa_nlzc_d
__builtin_msa_nori_b
V16UcV16cIUi
__builtin_msa_or_v
__builtin_msa_pckev_b
__builtin_msa_pckev_h
__builtin_msa_pckev_w
__builtin_msa_pckev_d
__builtin_msa_pckod_b
__builtin_msa_pckod_h
__builtin_msa_pckod_w
__builtin_msa_pcnt_b
__builtin_msa_pcnt_h
__builtin_msa_pcnt_w
__builtin_msa_pcnt_d
__builtin_msa_sat_s_b
V16ScV16ScIUi
__builtin_msa_sat_s_h
__builtin_fabsf128
fast
LLdLLd
V8SsV8SsIUi
__builtin_msa_sat_s_w
V4SiV4SiIUi
__builtin_msa_sat_s_d
V2SLLiV2SLLiIUi
__builtin_msa_sat_u_b
__builtin_msa_sat_u_h
__builtin_msa_sat_u_w
__builtin_fmodl
__builtin_msa_sat_u_d
__builtin_msa_shf_b
__builtin_msa_shf_h
__builtin_msa_shf_w
V16cV16cV16cUi
__builtin_msa_sld_h
V8sV8sV8sUi
V4iV4iV4iUi
__builtin_msa_sld_d
V2LLiV2LLiV2LLiUi
__builtin_msa_sldi_b
V16cV16cV16cIUi
__builtin_msa_sldi_h
V8sV8sV8sIUi
__builtin_fmodf128
vssseg7e64_v
__builtin_frexp
ffi*
LdLdi*
__builtin_msa_sldi_w
V4iV4iV4iIUi
__builtin_msa_sldi_d
V2LLiV2LLiV2LLiIUi
__builtin_msa_sll_h
__builtin_msa_sll_w
__builtin_msa_sll_d
__builtin_msa_slli_h
__builtin_msa_slli_w
__builtin_msa_slli_d
__builtin_msa_splat_b
V16cV16cUi
__builtin_msa_splat_h
V8sV8sUi
V4iV4iUi
__builtin_msa_splat_d
V2LLiV2LLiUi
__builtin_msa_splati_h
__builtin_msa_splati_w
__builtin_msa_splati_d
__builtin_msa_sra_h
__builtin_msa_sra_w
__builtin_msa_sra_d
__builtin_msa_srai_b
__builtin_msa_srai_h
__builtin_msa_srai_w
__builtin_msa_srai_d
__builtin_frexpf128
vsuxseg5ei8_v
vsuxseg4ei16_v
maytrap
__builtin_infl
__builtin_msa_srar_b
__builtin_msa_srar_h
__builtin_msa_srar_w
__builtin_msa_srar_d
__builtin_msa_srari_h
__builtin_msa_srari_w
__builtin_msa_srari_d
__builtin_inff16
__builtin_labs
double
LiLi
__builtin_msa_srl_b
__builtin_msa_srl_h
__builtin_msa_srl_w
__builtin_msa_srl_d
__builtin_msa_srli_b
__builtin_msa_srli_h
__builtin_msa_srli_w
__builtin_msa_srli_d
__builtin_msa_srlr_b
__builtin_msa_srlr_h
__builtin_msa_srlr_w
__builtin_msa_srlr_d
vsuxseg3ei32_v
__builtin_ldexpf
__builtin_msa_srlri_b
__builtin_msa_srlri_h
__builtin_msa_srlri_w
__builtin_msa_srlri_d
vV16Scv*Ii
__builtin_msa_st_h
vV8Ssv*Ii
__builtin_msa_st_w
vV4Siv*Ii
__builtin_msa_st_d
vV2SLLiv*Ii
__builtin_msa_str_w
__builtin_msa_subs_s_b
__builtin_msa_subs_s_h
__builtin_msa_subs_s_d
__builtin_msa_subs_u_b
__builtin_msa_subs_u_h
__builtin_msa_subs_u_d
__builtin_msa_subsus_u_b
V16UcV16UcV16Sc
__builtin_msa_subsus_u_h
V8UsV8UsV8Ss
__builtin_msa_subsus_u_w
V4UiV4UiV4Si
__builtin_msa_subsus_u_d
V2ULLiV2ULLiV2SLLi
__builtin_msa_subsuu_s_b
__builtin_msa_subsuu_s_h
dcC*
vsuxseg4ei64_v
__builtin_msa_subsuu_s_w
__builtin_msa_subsuu_s_d
__builtin_msa_subv_b
__builtin_msa_subv_h
__builtin_nanf
-mreassociate
fcC*
__builtin_msa_subv_w
__builtin_msa_subv_d
__builtin_msa_subvi_b
__builtin_msa_subvi_h
__builtin_msa_subvi_w
__builtin_msa_subvi_d
__builtin_msa_vshf_b
V16cV16cV16cV16c
__builtin_nanl
vsuxseg6ei64_v
LdcC*
-mno-sse2
__builtin_msa_vshf_h
V8sV8sV8sV8s
__builtin_msa_vshf_w
V4iV4iV4iV4i
V2LLiV2LLiV2LLiV2LLi
__builtin_msa_xor_v
__builtin_msa_xori_b
mips3
mips4
mips5
MIPSEB
_MIPSEB
MIPSEL
_MIPSEL
__mips__
__mips
_MIPS_ISA
_MIPS_ISA_MIPS32
__mips64__
_MIPS_ISA_MIPS64
__mips_isa_rev
_ABIO32
_MIPS_SIM
__mips_n32
_ABIN32
__mips_n64
_ABI64
__mips_abicalls
__builtin_nanf128
vsuxseg8ei64_v
LLdcC*
__builtin_nansf
Emit IR to support LTO unit features (CFI, whole program vtable opt)
__builtin_nansl
-fno-all-intrinsics
__builtin_powl
-mno-sse4.1
__builtin_powf128
-fno-rounding-math
__builtin_acos
__ABICALLS__
__mips_hard_float
__mips_soft_float
__mips_single_float
__builtin_acosf
vsoxseg5ei8_v
__builtin_acosl
__mips_fpr
_MIPS_FPSET
__mips16
__mips_micromips
__builtin_acosf128
-frounding-math
__builtin_acosh
__mips_nan2008
__mips_abs2008
__mips_dsp_rev
__mips_dsp
__mips_dspr2
__mips_msa
__mips_no_madd4
_MIPS_SZPTR
_MIPS_SZINT
_MIPS_SZLONG
_MIPS_ARCH
_MIPS_ARCH_OCTEONP
_MIPS_ARCH_
__OCTEON__
-mfp32
mips2
-mfp64
__builtin_acoshf
vsoxseg7ei8_v
__builtin_acoshl
-fsanitize-coverage-inline-8bit-counters
__builtin_acoshf128
-ffp-eval-method=
__builtin_asin
Get the symbol definition from <line> <start-column> <end-column>
__builtin_asinf
-flto-visibility-public-std
__builtin_asinl
-ffrontend-optimize
__builtin_asinf128
-ffast-math
__builtin_asinh
-mno-sse4a
__nvvm_read_ptx_sreg_tid_x
__nvvm_read_ptx_sreg_tid_y
__builtin_asinhl
__nvvm_read_ptx_sreg_tid_w
__builtin_asinhf128
vsoxseg4ei16_v
__builtin_atan
__nvvm_read_ptx_sreg_ntid_w
__builtin_atanf
vsoxseg5ei16_v
__builtin_atanl
__nvvm_read_ptx_sreg_ctaid_w
__builtin_atanf128
-ffp-model=fast
__builtin_atanh
__nvvm_read_ptx_sreg_nctaid_w
__builtin_atanhf
vsoxseg7ei16_v
__builtin_atanhl
-mno-sse4
__builtin_atanhf128
-mfpmath
__builtin_cbrt
__nvvm_read_ptx_sreg_lanemask_le
__builtin_cbrtf
vsoxseg2ei32_v
__builtin_cbrtl
__nvvm_read_ptx_sreg_clock
__builtin_cbrtf128
preserve-sign
__builtin_ceil
__nvvm_read_ptx_sreg_pm1
__builtin_ceilf
vsoxseg4ei32_v
__builtin_ceilf16
-mno-sse
__builtin_ceill
positive-zero
__builtin_ceilf128
__nvvm_fmin_ftz_nan_f16
__builtin_cos
vsoxseg6ei32_v
__builtin_cosf
__nvvm_fmin_nan_xorsign_abs_f16
__builtin_cosf16
__builtin_cosh
__nvvm_fmin_ftz_f16x2
__builtin_coshf
vsoxseg8ei32_v
__builtin_coshl
-fsanitize-coverage-inline-bool-flag
__builtin_coshf128
-mrecip=
__builtin_cosl
__nvvm_fmin_nan_bf16
__builtin_cosf128
vsoxseg3ei64_v
__builtin_erf
ZUiZUiZUi
__builtin_erff
divd
__builtin_erfl
__nvvm_fmin_f
__builtin_erff128
vsoxseg5ei64_v
__builtin_erfc
-mno-stack-arg-probe
__builtin_erfcf
divf
__builtin_erfcl
__nvvm_fmin_d
__builtin_erfcf128
vsoxseg7ei64_v
__builtin_exp
__nvvm_fmax_ftz_nan_f16
__builtin_expf
divh
__builtin_expf16
__nvvm_fmax_ftz_nan_xorsign_abs_f16
__builtin_expl
vadd_vx
__builtin_expf128
-fno-padding-on-unsigned-fixed-point
__builtin_exp2
vec-divd
__builtin_exp2f
__nvvm_fmax_ftz_nan_xorsign_abs_f16x2
__builtin_exp2f16
vsub_vx
__builtin_exp2l
__nvvm_fmax_nan_xorsign_abs_bf16
__builtin_exp2f128
vec-divf
__builtin_expm1
__nvvm_fmax_nan_xorsign_abs_bf16x2
__builtin_expm1f
vwaddu_vx
__builtin_expm1l
-mno-stackrealign
__builtin_expm1f128
vec-divh
__builtin_fdim
__nvvm_fmax_ftz_nan_xorsign_abs_f
__builtin_fdimf
vwsubu_vx
__builtin_fdiml
__nvvm_mulhi_ll
__builtin_fdimf128
sqrtd
__builtin_floor
__nvvm_mul_rz_ftz_f
__builtin_floorf
vwadd_vx
__builtin_floorf16
-fsanitize-coverage-no-prune
__builtin_floorl
sqrtf
__builtin_floorf128
__nvvm_mul_rm_d
__builtin_fma
vwsub_vx
dddd
__nvvm_div_approx_ftz_f
__builtin_fmaf
sqrth
ffff
__nvvm_div_rz_ftz_f
__builtin_fmaf16
vwsubu_wv
hhhh
-mno-tbm
__builtin_fmal
vec-sqrtd
LdLdLdLd
__nvvm_div_rm_d
__builtin_fmaf128
vwadd_wv
LLdLLdLLdLLd
__nvvm_floor_ftz_f
__builtin_fmax
vec-sqrtf
__builtin_fmaxf
__nvvm_ceil_f
__builtin_fmaxf16
vwsub_wv
__builtin_fmaxl
-fno-pascal-strings
__builtin_fmaxf128
vec-sqrth
__builtin_fmin
__nvvm_trunc_ftz_f
__builtin_fminf
vwcvt_x_x_v
__builtin_fminf16
__nvvm_saturate_f
__builtin_fminl
c++-cpp-output
__builtin_fminf128
__nvvm_ex2_approx_d
__builtin_hypot
vadc_vvm
__builtin_hypotf
Disable threadgroup split execution mode (AMDGPU only)
__builtin_hypotl
-analyzer-checker=core
__builtin_hypotf128
__nvvm_sin_approx_ftz_f
__builtin_ilogb
vsbc_vvm
__nvvm_fma_rn_f16
__builtin_ilogbf
-analyzer-checker=apiModeling
__nvvm_fma_rn_ftz_sat_f16
__builtin_ilogbl
vmadc_vvm
-fsanitize-coverage-pc-table
__builtin_ilogbf128
-analyzer-checker=unix
iLLd
__nvvm_fma_rn_relu_f16x2
__builtin_lgamma
vmadc_vv
__builtin_lgammaf
__nvvm_fma_rn_relu_bf16
__builtin_lgammal
-analyzer-checker=unix.API
__builtin_lgammaf128
__nvvm_fma_rn_ftz_f
__builtin_llrint
vmsbc_vvm
LLid
-mno-tls-direct-seg-refs
__builtin_llrintf
-analyzer-checker=unix.Malloc
LLif
__nvvm_fma_rn_d
__builtin_llrintl
vmsbc_vv
LLiLd
__nvvm_rcp_rn_ftz_f
__builtin_llrintf128
-analyzer-checker=unix.MallocSizeof
LLiLLd
__nvvm_rcp_rm_ftz_f
__builtin_llround
-fno-altivec
__builtin_llroundf
-fno-pch-codegen
__builtin_llroundl
-analyzer-checker=unix.MismatchedDeallocator
__builtin_llroundf128
__nvvm_rcp_approx_ftz_f
__builtin_log
vxor_vv
__builtin_log10
__nvvm_sqrt_rz_ftz_f
__builtin_log10f
-analyzer-checker=unix.cstring.BadSizeArg
__builtin_log10f16
__nvvm_sqrt_rp_ftz_f
__builtin_log10l
vor_vv
__builtin_log10f128
-mno-tsxldtrk
__builtin_log1p
-analyzer-checker=unix.cstring.NullArg
__builtin_log1pf
__nvvm_rsqrt_approx_ftz_f
__builtin_log1pl
vsll_vv
__builtin_log1pf128
__nvvm_add_rn_f
__builtin_log2
-analyzer-disable-checker=unix.API
__builtin_log2f
__nvvm_add_rm_f
__builtin_log2f16
vsrl_vv
__builtin_log2l
-fsanitize-coverage-stack-depth
__builtin_log2f128
-analyzer-disable-checker=unix.Vfork
__builtin_logb
__nvvm_d2f_rn
__builtin_logbf
vsra_vv
__builtin_logbl
__nvvm_d2f_rm
__builtin_logbf128
-analyzer-checker=osx
__builtin_logf
__nvvm_d2i_rz
__builtin_logf16
vnsrl_wv
__builtin_logl
Don't perform type checking of the assembly code (wasm only)
__builtin_logf128
-analyzer-checker=security.insecureAPI.decodeValueOfObjCType
__builtin_lrint
__nvvm_i2d_rn
vnsra_wv
__builtin_lrintf
__nvvm_ui2d_rn
-analyzer-checker=fuchsia
__builtin_lrintl
__nvvm_ui2d_rp
LiLd
vncvt_x_x_w
__builtin_lrintf128
Do not generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
LiLLd
-analyzer-checker=deadcode
__builtin_lround
__nvvm_f2i_rp
__builtin_lroundf
vmseq_vv
__builtin_lroundl
__nvvm_f2ui_rz
__builtin_lroundf128
-analyzer-checker=cplusplus
__builtin_nearbyint
__nvvm_f2ui_rp
__builtin_nearbyintf
vmsne_vv
__builtin_nearbyintl
-mno-unaligned-access
__builtin_nearbyintf128
-analyzer-checker=security.insecureAPI.UncheckedReturn
__builtin_nextafter
__nvvm_ui2f_rp
__builtin_nextafterf
vmsltu_vv
__builtin_nextafterl
__nvvm_d2i_hi
__builtin_nextafterf128
-analyzer-checker=security.insecureAPI.getpw
__builtin_nexttoward
__nvvm_f2ll_rz
ddLd
vmslt_vv
__builtin_nexttowardf
-fsanitize-coverage-trace-bb
ffLd
-analyzer-checker=security.insecureAPI.gets
__builtin_nexttowardl
__nvvm_f2ull_rz_ftz
__builtin_nexttowardf128
vmsleu_vv
__builtin_remainder
__nvvm_f2ull_rp_ftz
__builtin_remainderf
-analyzer-checker=security.insecureAPI.mktemp
__builtin_remainderl
__nvvm_d2ll_rm
__builtin_remainderf128
vmsle_vv
__builtin_remquo
-mno-unsafe-fp-atomics
dddi*
-analyzer-checker=security.insecureAPI.mkstemp
__builtin_remquof
__nvvm_ll2f_rz
fffi*
vmsgtu_vv
__builtin_remquol
fULLi
LdLdLdi*
-analyzer-checker=security.insecureAPI.vfork
__builtin_remquof128
__nvvm_ll2d_rn
LLdLLdLLdi*
-fno-analyzed-objects-for-unparse
__builtin_rint
-fno-pch-debuginfo
__builtin_rintf
-analyzer-checker=nullability.NullPassedToNonnull
__builtin_rintf16
__nvvm_ull2d_rp
__builtin_rintl
vmsgeu_vv
__builtin_rintf128
__nvvm_ff2bf16x2_rn
__builtin_round
-analyzer-checker=nullability.NullReturnedFromNonnull
__builtin_roundf
__nvvm_ff2bf16x2_rz_relu
__builtin_roundf16
vse8_v
__builtin_roundl
-mno-virt
__builtin_roundf128
-analyzer-tidy-checker=bugprone-assert-side-effect
__builtin_scalbln
__nvvm_f2bf16_rn_relu
ddLi
vmsgeu_vx
__builtin_scalblnf
ZUif
ffLi
-analyzer-tidy-checker=bugprone-infinite-loop
__builtin_scalblnl
__nvvm_bitcast_d2ll
LdLdLi
vmsge_vx
__builtin_scalblnf128
-fsanitize-coverage-trace-cmp
LLdLLdLi
-analyzer-tidy-checker=bugprone-move-forwarding-reference
__builtin_scalbn
__nvvm_bar_sync
__builtin_scalbnf
vminu_vx
__builtin_scalbnl
__nvvm_shfl_down_i32
__builtin_scalbnf128
-analyzer-output
__builtin_sin
__nvvm_shfl_up_f32
__builtin_sinf
vmin_vx
__builtin_sinf16
-mno-vsx
__builtin_sinh
-static
__builtin_sinhf
fUifii
__builtin_sinhl
vmaxu_vx
__builtin_sinhf128
__nvvm_shfl_sync_bfly_f32
__builtin_sinl
-gstrict-dwarf
__builtin_sinf128
__nvvm_vote_any
__builtin_sqrt
vmax_vx
__builtin_sqrtf
Do not generate debug info for types in an object file built from this PCH and do not generate them elsewhere
__builtin_sqrtf16
-dwarf-ext-refs
__builtin_sqrtl
__nvvm_vote_ballot_sync
__builtin_sqrtf128
vmul_vx
__builtin_tan
__nvvm_match_any_sync_i64
__builtin_tanf
-fmodule-format=obj
__builtin_tanh
__nvvm_match_all_sync_i64p
__builtin_tanhf
vmulh_vx
__builtin_tanhl
-mno-vzeroupper
__builtin_tanhf128
-fsplit-dwarf-inlining
__builtin_tanl
__nvvm_redux_sync_xor
__builtin_tanf128
vmulhu_vx
__builtin_tgamma
__nvvm_membar_sys
__builtin_tgammaf
-gdwarf-5
__builtin_tgammal
vWi*3i
__builtin_tgammaf128
vsuxei32_v
__builtin_trunc
-fsanitize-coverage-trace-div
__builtin_truncf
-gcodeview
__builtin_truncl
WiWi*3
__builtin_truncf128
vdivu_vv
__builtin_truncf16
WiWi*3i
__builtin_flt_rounds
-gno-inline-line-tables
__nvvm_mbarrier_arrive_drop_noComplete_shared
vdiv_vv
__builtin_cabs
-mno-warn-nonportable-cfstrings
-debug-info-macro
__builtin_cabsf
__nvvm_memset
vremu_vv
__builtin_cabsl
__builtin_ptx_read_image2Dff_
LdXLd
-gpubnames
__builtin_cacos
Use public LTO visibility for classes in std and stdext namespaces
XdXd
Do not use the analyzed objects when unparsing
__builtin_cacosf
-fno-pch-instantiate-templates
XfXf
-ggnu-pubnames
__builtin_cacosh
__builtin_ptx_read_image3Dif_
__builtin_cacoshf
vwmul_vv
__builtin_cacoshl
__builtin_ptx_write_image2Di_
XLdXLd
-gsimple-template-names=simple
__builtin_cacosl
__builtin_ptx_get_image_depthi_
__builtin_carg
vwmulu_vv
__builtin_cargf
Specify wavefront size 32 mode (AMDGPU only)
__builtin_cargl
-generate-arange-section
__builtin_casin
sm_60|sm_61|sm_62|sm_70|sm_72|sm_75|sm_80|sm_86|sm_87|sm_89|sm_90
__builtin_casinf
vwmulsu_vv
__builtin_casinh
__nvvm_atom_cta_add_gen_l
__builtin_casinhf
-fforce-dwarf-frame
__builtin_casinhl
__nvvm_atom_sys_add_gen_ll
__builtin_casinl
vmacc_vv
__builtin_catan
-fsanitize-coverage-trace-gep
__builtin_catanf
-generate-type-units
__builtin_catanh
__nvvm_atom_sys_add_gen_d
__builtin_catanhf
vnmsac_vv
__builtin_catanhl
__nvvm_atom_xchg_gen_i
__builtin_catanl
-debug-forward-template-params
__builtin_ccos
__nvvm_atom_cta_xchg_gen_l
__builtin_ccosf
vnmsac_vx
__builtin_ccosl
-mno-widekl
__builtin_ccosh
textual
__builtin_ccoshf
__nvvm_atom_max_gen_ui
__builtin_ccoshl
vmadd_vx
__builtin_cexp
__nvvm_atom_max_gen_l
__builtin_cexpf
json
__builtin_cexpl
ULiULiD*ULi
__builtin_cimag
vnmsub_vx
__builtin_cimagf
-fno-pch-timestamp
__builtin_cimagl
-fprofile-instrument-path=
__builtin_conj
__nvvm_atom_cta_max_gen_ull
__builtin_conjf
vwmaccu_vx
__builtin_conjl
__nvvm_atom_sys_min_gen_i
__builtin_clog
-fprofile-instrument=clang
__builtin_clogf
__nvvm_atom_min_gen_l
__builtin_clogl
vwmacc_vx
__builtin_cproj
-mno-xgot
__builtin_cprojf
--dependent-lib=
__builtin_cprojl
__nvvm_atom_sys_min_gen_ll
__builtin_cpow
vwmaccsu_vx
XdXdXd
__nvvm_atom_inc_gen_ui
__builtin_cpowf
profile
XfXfXf
__nvvm_atom_cta_dec_gen_ui
__builtin_cpowl
vmerge_vvm
XLdXLdXLd
-fsanitize-coverage-trace-loads
__builtin_creal
-fprofile-instrument=llvm
__builtin_crealf
__nvvm_atom_and_gen_ll
__builtin_creall
vmv_v_v
__builtin_csin
__nvvm_atom_cta_or_gen_i
__builtin_csinf
-fprofile-instrument=csllvm
__builtin_csinl
__nvvm_atom_sys_or_gen_l
__builtin_csinh
vmv_v_x
__builtin_csinhf
-mno-xsavec
__builtin_csinhl
default_%m.profraw
__builtin_csqrt
__nvvm_atom_cta_xor_gen_l
__builtin_csqrtf
vsaddu_vx
__builtin_csqrtl
__nvvm_atom_sys_xor_gen_ll
__builtin_ctan
-fprofile-instrument-use-path=
__builtin_ctanf
__nvvm_atom_sys_cas_gen_i
__builtin_ctanl
-fno-apinotes-modules
__builtin_ctanh
Disable inclusion of timestamp in precompiled headers
__builtin_ctanhf
default.profdata
__builtin_ctanhl
__nvvm_compiler_error
__builtin_complex
vssubu_vx
ccC*
-ftest-coverage
__builtin_isgreater
iiC*
vssub_vx
Fnct
-mno-xsaves
__builtin_isgreaterequal
-fprofile-arcs
__builtin_isless
UsUsC*
__builtin_islessequal
vaaddu_vx
__builtin_islessgreater
ULiULiC*
__builtin_isunordered
-fprofile-instr-generate
__builtin_fpclassify
ffC*
iiiiii.
vaadd_vx
__builtin_isfinite
-fsanitize-coverage-trace-pc-guard
__builtin_isinf
--coverage
__builtin_isinf_sign
E2sE2sC*
__builtin_isnan
vasubu_vx
__builtin_isnormal
E2iE2iC*
__builtin_signbit
atomic
__builtin_signbitf
E2LLiE2LLiC*
__builtin_signbitl
vasub_vx
__builtin_canonicalize
-mno-zvector
__builtin_canonicalizef
-fprofile-update=atomic
__builtin_canonicalizef16
E4UsE4UsC*
__builtin_canonicalizel
vsmul_vx
__builtin_clzs
E4UiE4UiC*
-fprofile-function-groups=
__builtin_clz
E2fE2fC*
vssrl_vx
__builtin_clzl
-fno-peel-loops
iULi
gcno
__builtin_clzll
__nvvm_isspacep_local
iULLi
vssra_vx
__builtin_ctzs
__hmma_m16n16k16_ld_b
__builtin_ctz
gcda
__builtin_ctzl
__hmma_m16n16k16_st_c_f16
__builtin_ctzll
vnclipu_wx
__builtin_ffs
Disallow use of CRC instructions (ARM only)
__builtin_ffsl
-arcmt-action=check
__hmma_m32n8k16_ld_c_f32
__builtin_ffsll
vnclip_wx
iLLi
__hmma_m8n32k16_ld_b
__builtin_parity
-arcmt-action=modify
__builtin_parityl
__hmma_m8n32k16_st_c_f32
__builtin_parityll
vfadd_vf
__builtin_popcount
-fsanitize-coverage-trace-pc
__builtin_popcountl
-arcmt-action=migrate
__builtin_popcountll
vi*iC*iC*fC*IiIi
__builtin_clrsb
vfsub_vf
__builtin_clrsbl
__hmma_m32n8k16_mma_f16f32
__builtin_clrsbll
-mt-migrate-directory
__builtin_bswap16
__hmma_m8n32k16_mma_f16f32
UsUs
vfwadd_vv
__builtin_bswap32
Mark the file as not needing an executable stack
UZiUZi
-ccc-arcmt-migrate
__builtin_bswap64
__bmma_m8n8k128_mma_xor_popc_b1
UWiUWi
vfwsub_vv
__builtin_bitreverse8
__imma_m16n16k16_ld_a_u8
UcUc
-objcmt-migrate-subscripting
__builtin_bitreverse16
-fimplicit-templates
__builtin_bitreverse32
Disable module-based external API notes support
__builtin_bitreverse64
-fno-permissive
__builtin_rotateleft8
environment
UcUcUc
__imma_m32n8k16_mma_s8
__builtin_rotateleft16
vfwadd_wf
UsUsUs
__imma_m8n32k16_ld_a_u8
__builtin_rotateleft32
-fdebug-prefix-map=
UZiUZiUZi
__imma_m8n32k16_mma_s8
__builtin_rotateleft64
vfwsub_wf
UWiUWiUWi
-mnop-mcount
__builtin_rotateright8
__builtin_rotateright16
__imma_m8n8k32_mma_s4
__builtin_rotateright32
vfmul_vf
__builtin_rotateright64
vd*dC*UiIi
__builtin_calloc
global
v*zz
__dmma_m8n8k4_mma_f64
vfdiv_vf
__builtin_constant_p
-fsanitize-coverage-trace-stores
nctu
tls global
__builtin_classify_type
__mma_bf16_m32n8k16_ld_a
__builtin___CFStringMakeConstantString
vfwmul_vv
FC*cC*
__mma_tf32_m16n16k8_ld_b
__builtin___NSStringMakeConstantString
-mstack-protector-guard=tls
__builtin_va_start
__nvvm_cp_async_mbarrier_arrive
vfmacc_vv
-mnvj
__builtin_va_end
sysreg global
__nvvm_cp_async_cg_shared_global_16
__builtin_va_copy
vfnmacc_vv
__nvvm_abs_bf16
__builtin_stdarg_start
__builtin_assume_aligned
__nvvm_neg_bf16
v*vC*z.
vfmsac_vv
__builtin_bcmp
-fno-PIC
ivC*vC*z
fs gs
__builtin_bcopy
vv*v*z
vfnmsac_vv
__builtin_bzero
Defer host/device related diagnostic messages for CUDA/HIP
vv*z
legal symbol name
__builtin_fprintf
-fin-descriptor-block-flags
iP*cC*.
-fsanitize-coverage-type=
Fp:1:
-mnvs
__builtin_free
__APPLE_CC__
__APPLE__
__builtin_malloc
vfnmadd_vv
__DYNAMIC__
__builtin_memchr
-ftrivial-auto-var-init=
v*vC*iz
__ENVIRONMENT_DRIVERKIT_VERSION_MIN_REQUIRED__
__builtin_memcmp
vfmsub_vv
__builtin_memcpy
Enable generation of new-value stores
v*v*vC*z
-cl-std=
__builtin_memcpy_inline
WINNT
vv*vC*Iz
vfnmsub_vv
__builtin_memmove
__MINGW32__
__builtin_mempcpy
-cl-ext=
__builtin_memset
_CHAR_UNSIGNED
v*v*iz
vfwmacc_vv
__builtin_memset_inline
-modd-spreg
vv*iIz
-fdeclare-opencl-builtins
__builtin_printf
_MSC_FULL_VER
icC*.
vfwnmacc_vv
Fp:0:
202004L
__builtin_stpcpy
-fno-builtin
c*c*cC*
_NATIVE_NULLPTR_SUPPORTED
__builtin_stpncpy
Sanitizer coverage type
c*c*cC*z
Enable odd single-precision floating point registers
__builtin_strcasecmp
__le32__
icC*cC*
Disable external API notes support
__builtin_ppc_popcntb
ULiULi
__builtin_strchr
c*cC*i
vfwnmsac_vf
__builtin_strcmp
__builtin_ppc_iospace_eieio
__builtin_strcpy
vfmin_vv
__builtin_strcspn
__builtin_ppc_sync
zcC*cC*
-fwchar-type=short
__builtin_strdup
__builtin_ppc_dcbflp
c*cC*
vfmax_vv
__builtin_strlen
__builtin_ppc_dcbz
zcC*
-fno-signed-wchar
__builtin_strncasecmp
__builtin_ppc_frims
icC*cC*z
vfsgnj_vv
__builtin_strncat
Directory to dump module dependencies to
__builtin_strncmp
-fwchar-type=int
__builtin_strncpy
__builtin_ppc_fsels
__builtin_strndup
vfsgnjn_vv
c*cC*z
__builtin_ppc_fsqrts
__builtin_strpbrk
-fsigned-wchar
c*cC*cC*
iLiD*Li*Li
__builtin_strrchr
vfsgnjx_vv
__builtin_strspn
-module-dir
__builtin_strstr
-D_DEBUG
__builtin_wcschr
__builtin_ppc_fetch_and_swaplp
w*wC*w
vfabs_v
__builtin_wcscmp
iiD*
iwC*wC*
-D_MT
__builtin_wcslen
__builtin_ppc_stdcx
zwC*
vmfeq_vf
__builtin_wcsncmp
Specify the type of coverage instrumentation for Sanitizers
iwC*wC*z
-D_DLL
__builtin_wmemchr
vLLiLLiIUi
w*wC*wz
vmfne_vf
__builtin_wmemcmp
__builtin_ppc_trapd
__builtin_wmemcpy
--dependent-lib=msvcrt
w*w*wC*z
__builtin_ppc_fctid
__builtin_wmemmove
vmflt_vf
__builtin_realloc
-module-file-deps
v*v*z
--dependent-lib=msvcrtd
__builtin_return_address
__builtin_ppc_alignx
v*IUi
vmfle_vf
__builtin_extract_return_addr
__builtin_ppc_compare_exp_uo
v*v*
-flto-visibility-public-std
__builtin_frame_address
__builtin_ppc_test_data_class
__builtin___clear_cache
vmfgt_vf
vc*c*
-fsanitize-hwaddress-abi=
__builtin_setjmp
--dependent-lib=libcmt
iv**
__builtin_ppc_cmpb
vmfge_vf
__builtin_longjmp
ULLiULiULi
vv**i
--dependent-lib=libcmtd
__builtin_ppc_maddhdu
__builtin_unwind_init
vfmv_v_f
-module-file-info
-D_VC_NODEFAULTLIB
__builtin_eh_return_data_regno
ULLiULLiULLiIUiIULLi
vredsum_vs
__builtin_snprintf
UiUi*
ic*zcC*.
--dependent-lib=oldnames
nFp:2:
vUiUs*
__builtin_sprintf
vredmax_vs
ic*cC*.
-fno-pie
nFP:1:
-fmodules-ts
__builtin_vsnprintf
vUIi
ic*zcC*a
vredmin_vs
nFP:2:
__builtin_ppc_mtfsfi
__builtin_vsprintf
-fmodules-strict-decluse
ic*cC*a
__builtin_ppc_fmsub
__builtin_thread_pointer
vredor_vs
-module-suffix
__builtin_launder
.cache
__builtin_is_constant_evaluated
__builtin_ppc_dcbtstt
vwredsum_vs
__builtin_get_vtable_pointer
__builtin_ppc_mfspr
modules
__builtin_eh_return
vIiULi
vzv*
vfredmax_vs
__builtin_frob_return_addr
-fsanitize-hwaddress-experimental-aliasing
__builtin_dwarf_cfa
-fmodules-cache-path=
__builtin_init_dwarf_reg_size_table
dddd.
__builtin_dwarf_sp_column
vfredusum_vs
__builtin_ppc_minfl
__builtin_extend_pointer
-fprebuilt-module-path=
ULLiv*
__builtin_ppc_get_timebase
__builtin_object_size
vfwredusum_vs
zvC*i
<suffix>
-fprebuilt-implicit-modules
__builtin_dynamic_object_size
__builtin_altivec_vadduws
__builtin___memcpy_chk
vmnot_m
v*v*vC*zz
V1ULLLiV1ULLLiV1ULLLi
__builtin___memccpy_chk
module.modulemap
v*v*vC*izz
__builtin_altivec_vaddeuqm_c
__builtin___memmove_chk
vid_v
__builtin___mempcpy_chk
-fno-plt
__builtin___memset_chk
v*v*izz
__builtin_altivec_vsubuws
__builtin___stpcpy_chk
vmv_x
__builtin___strcat_chk
__builtin_altivec_vsubuqm
__builtin___strcpy_chk
-module-dependency-dir
__builtin___strlcat_chk
__builtin_altivec_vavgsb
zc*cC*zz
vmv_s
__builtin___strlcpy_chk
Omit frame pointer setup for leaf functions
__builtin___strncat_chk
-fbuild-session-timestamp
c*c*cC*zz
V4fV4SiIi
__builtin___strncpy_chk
vfmv_f
__builtin___stpncpy_chk
V4SiV4fIi
__builtin___snprintf_chk
-fmodules-validate-system-headers
ic*zizcC*.
__builtin_altivec_dssall
Fp:4:
vfmv_s
__builtin___sprintf_chk
-fsanitize-ignorelist=
ic*izcC*.
-fobjc-dispatch-method=mixed
Fp:3:
__builtin_altivec_lvx
__builtin___vsnprintf_chk
vslideup_vx
ic*zizcC*a
V16cLivC*
FP:4:
-fobjc-dispatch-method=non-legacy
__builtin___vsprintf_chk
__builtin_altivec_vlogefp
ic*izcC*a
vslide1up_vx
FP:3:
-moutline-atomics
__builtin___fprintf_chk
-fobjc-subscripting-legacy-runtime
iP*icC*.
V4UiV16UcV16UcV4Ui
Fp:2:
vsse8_v
__builtin___printf_chk
V4UiV8UsV8UsV4Ui
iicC*.
-fobjc-arc
__builtin___vfprintf_chk
__builtin_altivec_vmsumshs
iP*icC*a
-fno-apple-pragma-pack
FP:2:
Use GOT indirection instead of PLT to make external function calls (x86 only)
__builtin___vprintf_chk
-fobjc-arc-cxxlib=libc++
iicC*a
__builtin_altivec_vmulosb
FP:1:
vrgather_vx
__builtin_unpredictable
__builtin_altivec_vmulosw
__builtin_expect
-fobjc-arc-cxxlib=libstdc++
LiLiLi
V1SLLLiV2SLLiV2SLLi
__builtin_expect_with_probability
vcompress_vm
LiLiLid
-moutline
__builtin_prefetch
-fobjc-arc-exceptions
vvC*.
__builtin_altivec_vpkuhus
__builtin_readcyclecounter
vset_v
ULLi
__builtin_altivec_vpkuwus
__builtin_trap
-fno-objc-convert-messages-to-runtime-calls
__builtin_altivec_vpkshus
__builtin_debugtrap
vsoxei16_v
__builtin_unreachable
-fsanitize-link-c++-runtime
__builtin_shufflevector
-fno-objc-infer-related-result-type
__builtin_convertvector
__builtin_altivec_vpkudus
__builtin_alloca
vsoxei64_v
__builtin_alloca_uninitialized
V4iV4iV4iV16Uc
__builtin_alloca_with_align
ignore_mrc_weak
v*zIz
__builtin_altivec_stvebx
__builtin_alloca_with_align_uninitialized
vle16ff_v
__builtin_call_with_static_chain
-mpacked-stack
__builtin_elementwise_abs
-fignore-objc-weak
__builtin_elementwise_max
__builtin_altivec_vcmpequh
__builtin_elementwise_min
vle64ff_v
__builtin_elementwise_ceil
__builtin_altivec_vcmpneb
__builtin_elementwise_floor
-fobjc-relative-method-lists
__builtin_elementwise_roundeven
__builtin_altivec_vcmpnezh
__builtin_elementwise_trunc
vlseg4e8_v
__builtin_elementwise_add_sat
-fno-prebuilt-implicit-modules
__builtin_elementwise_sub_sat
-fsmall-block-descriptors
__builtin_reduce_max
__builtin_altivec_vcmpgtuh
__builtin_reduce_min
vle8_v
__builtin_reduce_xor
__builtin_altivec_vcmpgtuw
__builtin_reduce_or
-fobjc-disable-direct-methods-for-testing
__builtin_reduce_and
V2LLiV2ULLiV2ULLi
__builtin_reduce_add
vlseg7e8_v
__builtin_reduce_mul
-mpackets
__builtin_matrix_transpose
local
iiV1ULLLiV1LLLi
__builtin_matrix_column_major_load
vlseg2e16_v
__builtin_matrix_column_major_store
iiV1ULLLiV1ULLLi
__sync_fetch_and_add
-fasync-exceptions
__builtin_altivec_vmaxuh
__sync_fetch_and_add_1
vlseg4e16_v
ccD*c.
-fsanitize-memory-param-retval
__sync_fetch_and_add_2
-fdiagnostics-show-category
ssD*s.
__builtin_altivec_vminsb
__sync_fetch_and_add_4
vlseg6e16_v
iiD*i.
__builtin_altivec_vminsw
__sync_fetch_and_add_8
-fdiagnostics-hotness-threshold=
LLiLLiD*LLi.
__builtin_altivec_vminfp
__sync_fetch_and_add_16
vlseg8e16_v
LLLiLLLiD*LLLi.
-mpad-max-prefix-size=
__sync_fetch_and_sub
-fno-diagnostics-show-note-include-stack
__sync_fetch_and_sub_1
__builtin_altivec_vrlw
__sync_fetch_and_sub_2
vlseg3e32_v
__sync_fetch_and_sub_4
__builtin_altivec_vsel_4si
__sync_fetch_and_sub_8
auto
__sync_fetch_and_sub_16
-flto=jobserver
__sync_fetch_and_or
-fno-application-extension
__sync_fetch_and_or_1
-fno-prefetch-loop-arrays
__sync_fetch_and_or_2
-fcolor-diagnostics
__sync_fetch_and_or_4
__builtin_altivec_vsum4sbs
__sync_fetch_and_or_8
vlseg7e32_v
__sync_fetch_and_or_16
__builtin_altivec_vsum4shs
__sync_fetch_and_and
-fno-show-column
__sync_fetch_and_and_1
__builtin_altivec_vrfiz
vlseg2e64_v
__sync_fetch_and_and_2
-mpaired-vector-memops
__sync_fetch_and_and_4
-mprefer-vector-width=none
__sync_fetch_and_and_8
V2LLiV4i
__sync_fetch_and_and_16
vlseg4e64_v
__sync_fetch_and_xor
__builtin_altivec_vupklsw
__sync_fetch_and_xor_1
-mprefer-vector-width=
__sync_fetch_and_xor_2
__builtin_altivec_vcmpequb_p
__sync_fetch_and_xor_4
vlseg6e64_v
__sync_fetch_and_xor_8
-fsanitize-memory-track-origins=
__sync_fetch_and_xor_16
-foptimization-record-file
__sync_fetch_and_nand
__builtin_altivec_vcmpeqfp_p
__sync_fetch_and_nand_1
vlseg8e64_v
__sync_fetch_and_nand_2
__builtin_altivec_vcmpned_p
__sync_fetch_and_nand_4
yaml
__sync_fetch_and_nand_8
iiV16UcV16Uc
__sync_fetch_and_nand_16
vlseg4e8ff_v
__sync_add_and_fetch
-mpclmul
__sync_add_and_fetch_1
opt.
__sync_add_and_fetch_2
iiV4UiV4Ui
__sync_add_and_fetch_4
vlseg6e8ff_v
__sync_add_and_fetch_8
__builtin_altivec_vcmpgtfp_p
__sync_add_and_fetch_16
-opt-record-passes
__sync_sub_and_fetch
V2ULLiV16UcV16Uc
__sync_sub_and_fetch_1
vlseg8e8ff_v
__sync_sub_and_fetch_2
-fno-preserve-as-comments
__sync_sub_and_fetch_4
-opt-record-format
__sync_sub_and_fetch_8
V4UiV4UiIiIi
__sync_sub_and_fetch_16
vlseg3e16ff_v
__sync_or_and_fetch
__builtin_altivec_crypto_vcipherlast
__sync_or_and_fetch_1
--amdhsa-code-object-version=
__sync_or_and_fetch_2
__builtin_altivec_crypto_vpmsumh
__sync_or_and_fetch_4
vlseg5e16ff_v
__sync_or_and_fetch_8
-mpcrel
__sync_or_and_fetch_16
__sync_and_and_fetch
__builtin_altivec_vclzd
__sync_and_and_fetch_1
vlseg7e16ff_v
__sync_and_and_fetch_2
__builtin_altivec_vctzd
__sync_and_and_fetch_4
-debug-info-kind=line-directives-only
__sync_and_and_fetch_8
__builtin_ppc_bcdadd_p
__sync_and_and_fetch_16
vlseg2e32ff_v
__sync_xor_and_fetch
-fsanitize-memory-track-origins
__sync_xor_and_fetch_1
-debug-info-kind=line-tables-only
__sync_xor_and_fetch_2
V1ULLLiV1ULLLi
__sync_xor_and_fetch_4
vlseg4e32ff_v
__sync_xor_and_fetch_8
__builtin_altivec_vpopcntd
__sync_xor_and_fetch_16
-debug-info-kind=constructor
__sync_nand_and_fetch
__builtin_altivec_vslv
__sync_nand_and_fetch_1
vlseg6e32ff_v
__sync_nand_and_fetch_2
-mpopcntd
__sync_nand_and_fetch_4
-debug-info-kind=limited
__sync_nand_and_fetch_8
__builtin_altivec_vextsb2d
__sync_nand_and_fetch_16
vlseg8e32ff_v
__sync_bool_compare_and_swap
__builtin_altivec_vextsh2d
__sync_bool_compare_and_swap_1
-debug-info-kind=standalone
bcD*cc.
__builtin_altivec_vextsd2q
__sync_bool_compare_and_swap_2
-fno-approx-func
bsD*ss.
Do not preserve comments in inline assembly
__sync_bool_compare_and_swap_4
-debug-info-kind=unused-types
biD*ii.
__builtin_altivec_vextractqm
__sync_bool_compare_and_swap_8
vlseg5e64ff_v
bLLiD*LLiLLi.
__builtin_altivec_vdivesd
__sync_bool_compare_and_swap_16
-dwarf-version=
bLLLiD*LLLiLLLi.
__builtin_altivec_vdiveuq
__sync_val_compare_and_swap
vlseg7e64ff_v
__sync_val_compare_and_swap_1
-mpower10-vector
ccD*cc.
-debugger-tuning=gdb
__sync_val_compare_and_swap_2
__builtin_altivec_vexpanddm
ssD*ss.
vlseg2e8ff_v
__sync_val_compare_and_swap_4
__builtin_altivec_vcntmbh
iiD*ii.
-debugger-tuning=lldb
__sync_val_compare_and_swap_8
__builtin_altivec_vcntmbd
LLiLLiD*LLiLLi.
vlsseg4e8_v
__sync_val_compare_and_swap_16
Enable use-after-destroy detection in MemorySanitizer
LLLiLLLiD*LLLiLLLi.
-debugger-tuning=sce
__sync_lock_test_and_set
__builtin_altivec_mtvsrdm
__sync_lock_test_and_set_1
vlsseg6e8_v
__sync_lock_test_and_set_2
__builtin_altivec_vpdepd
__sync_lock_test_and_set_4
-debugger-tuning=dbx
__sync_lock_test_and_set_8
__builtin_altivec_vstrihr
__sync_lock_test_and_set_16
vlsseg8e8_v
__sync_lock_release
-mpower9-vector
__sync_lock_release_1
DWARFv3 or greater
vcD*.
__builtin_altivec_vstrihl_p
__sync_lock_release_2
vlsseg2e8_v
vsD*.
__builtin_altivec_vclrlb
__sync_lock_release_4
64 bit architecture
viD*.
__builtin_altivec_vctzdm
__sync_lock_release_8
vlsseg4e16_v
vLLiD*.
-fno-printf
__sync_lock_release_16
ELF platforms
vLLLiD*.
__builtin_altivec_vinshrx
__sync_swap
vlsseg6e16_v
__sync_swap_1
__builtin_altivec_vinsdlx
__sync_swap_2
--compress-debug-sections=none
__sync_swap_4
V16UcV16UcUiV16Uc
__sync_swap_8
vlsseg8e16_v
__sync_swap_16
Specifies preferred vector width for auto-vectorization. Defaults to 'none' which allows target specific decisions.
__c11_atomic_init
--compress-debug-sections=
__c11_atomic_load
__builtin_altivec_vinsw
__c11_atomic_store
vlsseg3e32_v
__c11_atomic_exchange
__builtin_altivec_vinsw_elt
__c11_atomic_compare_exchange_strong
-target
__c11_atomic_compare_exchange_weak
__builtin_altivec_vextdubvlx
__c11_atomic_fetch_add
vlsseg5e32_v
__c11_atomic_fetch_sub
Set default MTE mode to 'sync' (default) or 'async'
__c11_atomic_fetch_and
--no-dynamic-linker
__c11_atomic_fetch_or
__builtin_altivec_vextduwvrx
__c11_atomic_fetch_xor
vlsseg6e32_v
__c11_atomic_fetch_nand
__builtin_altivec_vrlqmi
__c11_atomic_fetch_max
-pie
__c11_atomic_fetch_min
__builtin_vsx_lxvw4x
__c11_atomic_thread_fence
vlsseg8e32_v
-mprefixed
__c11_atomic_signal_fence
-zrelro
__c11_atomic_is_lock_free
__builtin_vsx_stxvd2x_be
vlsseg3e64_v
__atomic_load
__builtin_vsx_lxvl
__atomic_load_n
--eh-frame-hdr
__atomic_store
-flto=
__atomic_store_n
-fno-asm-blocks
__atomic_exchange
-fno-profile-arcs
__atomic_exchange_n
-lcompiler_rt
__atomic_compare_exchange
__builtin_vsx_xsmaxdp
__atomic_compare_exchange_n
vlsseg7e64_v
__atomic_fetch_add
__builtin_vsx_xvdivdp
__atomic_fetch_sub
include/c++/v1
__atomic_fetch_and
__builtin_vsx_xvcmpeqdp
__atomic_fetch_or
vle8ff_v
__atomic_fetch_xor
-mprivileged
__atomic_fetch_nand
cloudabi::Linker
__atomic_add_fetch
__builtin_vsx_xvcmpgesp_p
__atomic_sub_fetch
vluxseg3ei8_v
__atomic_and_fetch
__builtin_vsx_xvcmpgtsp_p
__atomic_or_fetch
LIBRARY_PATH
__atomic_xor_fetch
__builtin_vsx_xvrspi
__atomic_max_fetch
vluxseg5ei8_v
__atomic_min_fetch
-fsanitize-recover=
__atomic_nand_fetch
--compress-debug-sections=
__atomic_test_and_set
__builtin_vsx_xvmsubasp
bvD*i
vluxseg7ei8_v
__atomic_clear
__builtin_vsx_xvnmaddasp
vvD*i
pwr7
__atomic_thread_fence
__builtin_vsx_xvresp
__atomic_signal_fence
vluxseg2ei16_v
__atomic_always_lock_free
-mpure-code
bzvCD*
ppc64le
__atomic_is_lock_free
__builtin_vsx_xvabssp
__opencl_atomic_init
vluxseg4ei16_v
__opencl_atomic_load
__builtin_vsx_xxgenpcvhm
__opencl_atomic_store
hexagon
__opencl_atomic_exchange
__builtin_vsx_xxgenpcvdm
__opencl_atomic_compare_exchange_strong
vluxseg6ei16_v
__opencl_atomic_compare_exchange_weak
-fno-profile-correction
__opencl_atomic_fetch_add
-bplugin:
__opencl_atomic_fetch_sub
__builtin_vsx_xvxsigdp
__opencl_atomic_fetch_and
vluxseg8ei16_v
__opencl_atomic_fetch_or
__builtin_vsx_xvcvdpuxws
__opencl_atomic_fetch_xor
/libLTO
__opencl_atomic_fetch_min
__builtin_vsx_xvcvspuxds
__opencl_atomic_fetch_max
vluxseg3ei32_v
__atomic_fetch_min
Create phony target for each dependency (other than main file)
__atomic_fetch_max
/LLVMgold
__hip_atomic_load
__builtin_vsx_xvcvuxdsp
__hip_atomic_store
vluxseg5ei32_v
__hip_atomic_compare_exchange_weak
__builtin_vsx_xvcvsphp
__hip_atomic_compare_exchange_strong
-plugin
__hip_atomic_exchange
__builtin_vsx_xvcvbf16spn
__hip_atomic_fetch_add
vluxseg7ei32_v
__hip_atomic_fetch_and
-fsanitize-recover
__hip_atomic_fetch_or
/../lib
__hip_atomic_fetch_xor
__builtin_vsx_xxpermdi
__hip_atomic_fetch_min
vluxseg2ei64_v
__hip_atomic_fetch_max
__builtin_vsx_xvtlsbb
__sync_synchronize
-bplugin_opt:
__sync_fetch_and_min
__builtin_vsx_xvtdivsp
iiD*i
vluxseg4ei64_v
__sync_fetch_and_max
-mqdsp6-compat
__sync_fetch_and_umin
-plugin-opt=
UiUiD*Ui
__builtin_vsx_xxblendvb
__sync_fetch_and_umax
vluxseg6ei64_v
__builtin_abort
__builtin_sqrtf128_round_to_odd
-mcpu=
__builtin_index
__builtin_subf128_round_to_odd
__builtin_rindex
-fno-asm
__warn_memset_zero_len
-fno-profile-generate-sampling
mcpu=
_alloca
ULLiLLd
__annotation
vlse8_v
wC*.
__builtin_ppc_rsqrtd
__assume
__builtin_tend
_bittest
vnot_v
UcNiC*Ni
_bittestandcomplement
dwo_dir=
UcNi*Ni
__builtin_trechkpt
_bittestandreset
vfneg_v
_bittestandset
__builtin_tsuspend
_bittest64
_dwo
UcWiC*Wi
__builtin_get_tfhar
_bittestandcomplement64
vwcvtu_x
UcWi*Wi
Enable sanitizer statistics gathering.
_bittestandreset64
thinlto
_bittestandset64
__builtin_divwe
_byteswap_ushort
vle32_v
__builtin_divdeu
stdlib.h
jobs=
_byteswap_ulong
__builtin_cfuged
UNiUNi
vse16_v
_byteswap_uint64
-mrdpid
ULLiULLi
-debugger-tune=lldb
__debugbreak
__builtin_darn_raw
__exception_code
vse64_v
__builtin_pack_vector_int128
_exception_code
-debugger-tune=sce
__exception_info
__builtin_setflm
_exception_info
vcpop_m
__abnormal_termination
-fno-profile-generate
_abnormal_termination
-debugger-tune=dbx
__GetExceptionInfo
__builtin_vsx_lxvp
vfcvt_f_x_v
zntu
__builtin_mma_assemble_acc
_InterlockedAnd8
-debugger-tune=gdb
ccD*c
__builtin_mma_xxsetaccz
_InterlockedAnd16
vfcvt_f_xu_v
ssD*s
-mrdrnd
_InterlockedAnd
-function-sections=1
NiNiD*Ni
__builtin_mma_pmxvi4ger8
_InterlockedCompareExchange8
vfcvt_rtz_x
ccD*cc
__builtin_mma_pmxvf16ger2
_InterlockedCompareExchange16
-function-sections=0
ssD*ss
__builtin_mma_xvi8ger4pp
_InterlockedCompareExchange
vfcvt_rtz_xu
NiNiD*NiNi
Alias for -fsanitize-system-ignorelist=
_InterlockedCompareExchange64
-data-sections=1
LLiLLiD*LLiLLi
__builtin_mma_pmxvi16ger2spp
_InterlockedCompareExchangePointer
vfcvt_x
v*v*D*v*v*
__builtin_mma_xvf16ger2nn
_InterlockedCompareExchangePointer_nf
-data-sections=0
_InterlockedDecrement16
__builtin_mma_pmxvf16ger2nn
ssD*
vfcvt_xu
_InterlockedDecrement
-mreassociate
NiNiD*
-split-machine-functions
_InterlockedExchange
__builtin_mma_pmxvf32gernn
_InterlockedExchange8
vfncvt_f_f_w
_InterlockedExchange16
__builtin_mma_xvf64gernn
_InterlockedExchangeAdd8
sample-profile=
_InterlockedExchangeAdd16
Emit in-descriptor block flags
_InterlockedExchangeAdd
-fno-associative-math
_InterlockedExchangePointer
Disable generation of profile instrumentation.
v*v*D*v*
cs-profile-generate
_InterlockedExchangeSub8
__builtin_mma_pmxvbf16ger2pn
_InterlockedExchangeSub16
vfncvt_rod_f_f_w
_InterlockedExchangeSub
+direct-move
_InterlockedIncrement16
cs-profile-path=
_InterlockedIncrement
+paired-vector-memops
_InterlockedOr8
vfncvt_rtz_x_f_w
_InterlockedOr16
-mrecip=
_InterlockedOr
cs-profile-path=default_%m.profraw
_InterlockedXor8
+quadword-atomics
_InterlockedXor16
vfncvt_rtz_xu_f_w
_InterlockedXor
__POWERPC__
_interlockedbittestandreset
-enable-jmc-instrument
UcNiD*Ni
__PPC
_interlockedbittestandreset64
vfncvt_x_f_w
UcWiD*Wi
Path to system ignorelist file for sanitizers
_interlockedbittestandreset_acq
stats-file=
_interlockedbittestandreset_nf
__LONGDOUBLE128
_interlockedbittestandreset_rel
vfncvt_xu_f_w
_interlockedbittestandset
__STRUCT_PARM_ALIGN__
_interlockedbittestandset64
-rpath
_interlockedbittestandset_acq
_ARCH_PPCSQ
_interlockedbittestandset_nf
vfrec7_v
_interlockedbittestandset_rel
-mrecord-mcount
__iso_volatile_load8
-Bstatic
ccCD*
_ARCH_PWR6X
__iso_volatile_load16
vfsqrt_v
ssCD*
_ARCH_PWR10
__iso_volatile_load32
-lomp
iiCD*
__VEC__
__iso_volatile_load64
vfwcvt_f
LLiLLiCD*
-fno-profile-instr-generate
__iso_volatile_store8
-lgomp
vcD*c
__HTM__
__iso_volatile_store16
vfwcvt_f_xu_v
vsD*s
__POWER10_VECTOR__
__iso_volatile_store32
-liomp5
viD*i
crbits
__iso_volatile_store64
vfwcvt_rtz_x
vLLiD*LLi
-mred-zone
__noop
-Bdynamic
__lzcnt16
+prefixed
__lzcnt
vfwcvt_rtz_xu
UiUi
-mrop-protect
__lzcnt64
-lrt
__popcnt16
float128
__popcnt
vfwcvt_x
__popcnt64
Enable atomic operations instrumentation in ThreadSanitizer (default)
_ReturnAddress
-lomptarget
_rotl8
_rotl16
vfwcvt_xu
UsUsUc
_rotl
-lomptarget.devicertl
UiUii
_lrotl
vlmul_ext_v
UNiUNii
-mregparm=
_rotl64
Fortran_main.lib
UWiUWii
_rotr8
vlmul_trunc_v
_rotr16
_rotr
FortranRuntime.lib
_lrotr
_rotr64
-fno-assume-sane-operator-new
__va_start
-fno-profile-instr-use
vc**.
FortranDecimal.lib
__fastfail
vmclr_m
_setjmpex
-lFortran_main
spe_acc
setjmpex.h
vmnor_mm
va_start
Limit the number of registers available for integer arguments
-lFortranRuntime
stdarg.h
va_end
vmorn_mm
va_copy
abort
-lFortranDecimal
calloc
vmset_m
exit
Enable function entry/exit instrumentation in ThreadSanitizer (default)
_Exit
-libpath:
malloc
__isync
realloc
vmsof_m
free
__iospace_sync
strtod
-zignore
dcC*c**
__dcbt
strtof
vmxor_mm
fcC*c**
(integrated-as) Relax all machine instructions
strtold
-zrecord
LdcC*c**
__fetch_and_and
strtol
vsext_vf2
LicC*c**i
__fetch_and_swap
strtoll
--as-needed
LLicC*c**i
__lharx
strtoul
vsext_vf8
ULicC*c**i
Disable using instrumentation data for profile-guided optimization
strtoull
--no-as-needed
ULLicC*c**i
__tw
aligned_alloc
vundefined
memcpy
__fcfud
string.h
-lpthread
memcmp
__fctiwz
memmove
vzext_vf4
strcpy
Produce relaxation hints for linkers to try optimizing PIC call sequences into direct calls (MIPS only)
strncpy
strcmp
__mulhdu
strncmp
__builtin_rvv_
strcat
__maddhdu
strncat
-ldl
strxfrm
__rldimi
zc*cC*z
break
memchr
Enable memory access instrumentation in ThreadSanitizer (default)
strchr
-lexecinfo
strcspn
__extract_sig
strpbrk
countByEnumeratingWithState
strrchr
__mtfsfi
strspn
-lresolv
strstr
__fnmadd
strtok
__range
memset
Use relaxable elf relocations
strerror
fuzzer_interceptors
__alloca
strlen
__end
printf
__vncipher
fp:0:
stdio.h
thin,full
fprintf
Don't assume that C++'s global operator new can't alias any pointer
fp:1:
-fno-profile-reusedist
snprintf
--export-dynamic
fp:2:
__bcopy
sprintf
@throw
vprintf
__builtin_clz
icC*a
--export-dynamic-symbol=__cfi_check
fP:0:
__builtin_complex
vfprintf
'@try'
iP*cC*a
-mrelax
fP:1:
-fsanitize=memtag*
vsnprintf
__darn_raw
fP:2:
default captured statement
vsprintf
__fmadds
scanf
--android-memtag-mode=
icC*R.
__labs
fs:0:
OpenMP region
fscanf
Enable trapping for specified sanitizers
iP*RcC*R.
--android-memtag-heap
fs:1:
__readflm
sscanf
__MSASMLABEL_.${:uid}__
icC*RcC*R.
__builtin_rotateleft64
vscanf
--android-memtag-stack
icC*Ra
__dcbtstt
fS:0:
[[clang::noinline]]
vfscanf
-mrelocation-model
iP*RcC*Ra
-whole-archive
fS:1:
__frim
vsscanf
[with 
icC*RcC*Ra
__frip
fopen
xray
P*cC*cC*
__fsel
fread
(anonymous)
zv*zzP*
-fno-profile-sample-accurate
fwrite
-no-whole-archive
zvC*zzP*
__compare_exp_uo
isalnum
instantiating class definition
__test_data_class
ctype.h
--extract-dwo
isalpha
__fnabss
isblank
instantiating default member init
iscntrl
static,pic,ropi,rwpi,ropi-rwpi,dynamic-no-pic
isdigit
--strip-dwo
isgraph
-mpower8-vector
islower
InstantiateFunction
isprint
-mno-vsx
ispunct
objcopy
isspace
isupper
instantiating variable initializer
isxdigit
Enable trapping for all sanitizers
tolower
static
toupper
vs11
wcschr
matrix
wchar.h
vs15
wcscmp
wcslen
vs19
wcsncmp
matrix column
wmemchr
Disallow generation of complex IT blocks.
wmemcmp
dynamic-no-pic
wmemcpy
vs27
wmemmove
_Nullable
setjmp
vs31
setjmp.h
ropi
longjmp
vs35
-fno-async-exceptions
-fno-profile-sample-use
alloca
rwpi
memalign
vs43
malloc.h
memccpy
vs47
v*v*vC*iz
ropi-rwpi
mempcpy
vs51
stpcpy
__bf16
stpncpy
-fget-symbols-sources
strdup
strndup
-fgpu-exclude-wrong-side-overloads
index
Strip (or keep only, if negative) a given number of path components when emitting check metadata.
strings.h
-mrop-protect
rindex
bzero
bcmp
cl_khr_3d_image_writes and __opencl_c_3d_image_writes
strcasecmp
strncasecmp
-KPIC
_exit
unistd.h
autoreleasing
vfork
MSVC
pthread_create
fC<2,3>
'neon' or 'mve'
pthread.h
-mrtd
_setjmp
-x86-branches-within-32B-boundaries
__sigsetjmp
fs10
iSJi
isa-pointer
sigsetjmp
ft10
savectx
-x86-align-branch-boundary=
getcontext
__riscv_cmodel_medlow
'__ptr32'
_longjmp
<number>
siglongjmp
call
vSJi
zmmul
strlcpy
'__sptr'
strlcat
__riscv_atomic
objc_msgSend
indirect
GGH.
__riscv_v_min_vlen
objc/message.h
'static'
objc_msgSend_fpret
-mrtm
LdGH.
fused, jcc, jmp, call, ret, indirect
objc_msgSend_fp2ret
__builtin_rvv_vadd_vv_tumu
XLdGH.
'address_space'
objc_msgSend_stret
__builtin_rvv_vwaddu_vv_ta
vGH.
-x86-align-branch=
objc_msgSendSuper
__builtin_rvv_vwaddu_vv_tama
GM*H.
_private
objc_msgSendSuper_stret
-fsanitize-undefined-trap-on-error
vM*H.
-x86-pad-max-prefix-size=
objc_getClass
__builtin_rvv_vlse32_v_ta
GcC*
_private.
objc/runtime.h
__builtin_rvv_vlse32_v_tama
objc_getMetaClass
/libdevice
objc_enumerationMutation
__builtin_rvv_vloxseg3ei8_v_tumu
IDENTIFIER_BLOCK
objc_read_weak
-msave-restore
/libbc-
objc/objc-auto.h
__builtin_rvv_vloxseg4ei8_v_tama
objc_assign_weak
OBJC_CONTEXT_ID_DATA
GGG*
__builtin_rvv_vloxseg5ei8_v_tumu
objc_assign_ivar
/lib
GGGY
__builtin_rvv_vloxseg6ei8_v_ta
objc_assign_global
OBJC_PROPERTY_DATA
objc_assign_strongCast
-fno-profile-values
objc_exception_extract
nvptx
__builtin_rvv_vloxseg7ei8_v_tumu
objc/objc-exception.h
OBJC_METHOD_DATA
objc_exception_try_enter
__builtin_rvv_vlse64_v_ta
objc_exception_try_exit
/libdevice/
objc_exception_match
__builtin_rvv_vlse64_v_tama
OBJC_SELECTOR_DATA
objc_exception_throw
-msave-temp-labels
objc_sync_enter
libbc-
__builtin_rvv_vloxseg2ei16_v_ta
objc/objc-sync.h
GLOBAL_VARIABLE_DATA
objc_sync_exit
__builtin_rvv_vloxseg2ei16_v_tama
__builtin_objc_memmove_collectable
NSLog
__builtin_rvv_vloxseg3ei16_v_tumu
GLOBAL_FUNCTION_DATA
Foundation/NSObjCRuntime.h
Enable AddressSanitizer
NSLogv
-type=a
__builtin_rvv_vloxseg4ei16_v_tama
atan2
AvailabilityMsg
__builtin_rvv_vloxseg5ei16_v_tumu
math.h
clang-offload-bundler
atan2f
__builtin_rvv_vloxseg6ei16_v_ta
atan2l
SwiftVersions
-msecure-plt
labs
-hip-openmp-compatible
llabs
__builtin_rvv_vloxseg7ei16_v_tumu
copysign
TVOS
copysignf
__builtin_rvv_vloxseg8ei16_v_ta
copysignl
cudart
fabs
__builtin_rvv_vloxseg8ei16_v_tama
fabsf
available
fabsl
-fno-profile
finite
finitef
__builtin_rvv_vloxseg3ei32_v_ta
finitel
Classes
__finite
__builtin_rvv_vloxseg3ei32_v_tama
__finitef
gcc_s
__finitel
__builtin_rvv_vloxseg4ei32_v_tumu
fmod
Functions
fmodf
-mseses
fmodl
pthread
frexp
__builtin_rvv_vloxseg5ei32_v_tama
frexpf
Enumerators
frexpl
__builtin_rvv_vloxseg6ei32_v_tumu
ldexp
hip_hcc
ldexpf
__builtin_rvv_vloxseg7ei32_v_ta
ldexpl
Typedefs
modf
Turn on runtime checks for various forms of undefined or suspicious behavior. See user manual for available checks
modff
-mno-code-object-v3
modfl
__builtin_rvv_vloxseg8ei32_v_tumu
SwiftPrivate
__builtin_rvv_vsse16_v
nanf
-mcode-object-version=2
nanl
__builtin_rvv_vloxseg2ei64_v_tumu
SwiftBridge
powf
-msgx
powl
-mcode-object-v3
acos
__builtin_rvv_vloxseg3ei64_v_tama
acosf
SwiftImportAsNonGeneric
acosl
__builtin_rvv_vloxseg4ei64_v_tumu
acosh
-mcode-object-version=3
acoshf
__builtin_rvv_vloxseg5ei64_v_ta
acoshl
-fno-auto-profile-accurate
asin
-fno-protect-parens
asinf
-enable-machine-outliner
asinl
__builtin_rvv_vloxseg6ei64_v_tumu
asinh
Selector
asinhf
__builtin_rvv_vloxseg7ei64_v_ta
asinhl
-enable-machine-outliner=never
atan
__builtin_rvv_vloxseg7ei64_v_tama
atanf
Parameters
atanl
-mshstk
atanh
amdgpu
atanhf
__builtin_rvv_vloxseg2ei8_v_ta
atanhl
NullabilityOfRet
cbrt
__builtin_rvv_vloxseg2ei8_v_tama
cbrtf
libomptarget-
cbrtl
__builtin_rvv_vluxei64_v_ta
ceil
FactoryAsInit
ceilf
-fsave-optimization-record=
ceill
rv630
__builtin_rvv_vsseg3e8_v
cosf
Required
cosl
__builtin_rvv_vluxei16_v_tumu
cosh
rv635
coshf
__builtin_rvv_vsseg4e8_v
coshl
ResultType
-msign-return-address-key=
erff
r600
erfl
__builtin_rvv_vsseg8e8_v
erfc
Position
erfcf
__builtin_rvv_vsseg3e16_v
erfcl
rv610
__builtin_rvv_vsseg5e16_v
expf
Nonnull
expl
-fno-pseudo-probe-for-profiling
exp2
rv620
exp2f
__builtin_rvv_vluxei32_v_tama
exp2l
Unspecified
expm1
__builtin_rvv_vsseg8e16_v
expm1f
rs780
expm1l
__builtin_rvv_vsseg3e32_v
fdim
Scalar
fdimf
-msign-return-address=
fdiml
rs880
floor
__builtin_rvv_vsseg7e32_v
floorf
floorl
__builtin_rvv_vsseg2e64_v
rv740
fmaf
__builtin_rvv_vsseg4e64_v
fmal
CFReturnsRetained
fmax
<format>
fmaxf
rv770
fmaxl
__builtin_rvv_vsseg8e64_v
fmin
NSReturnsRetained
fminf
__builtin_rvv_vssseg4e8_v
fminl
palm
hypot
__builtin_rvv_vssseg6e8_v
hypotf
hypotl
none,all,non-leaf
ilogb
cedar
ilogbf
__builtin_rvv_vssseg3e16_v
ilogbl
PropertyKind
lgamma
__builtin_rvv_vssseg5e16_v
lgammaf
sumo
lgammal
-fmacro-backtrace-limit=
llrint
-fno-auto-profile
llrintf
Do not emit pseudo probes for sample profiling
llrintl
sumo2
llround
__builtin_rvv_vssseg4e32_v
llroundf
EnumKind
llroundl
__builtin_rvv_vssseg6e32_v
hemlock
logf
__builtin_rvv_vssseg8e32_v
logl
closed
log10
-msim
log10f
cypress
log10l
__builtin_rvv_vssseg5e64_v
log1p
NSEnum
log1pf
__builtin_rvv_vssseg7e64_v
log1pl
aruba
log2
__builtin_rvv_vsuxseg3ei8_v
log2f
NSOptions
log2l
Generate a YAML optimization record file
logb
cayman
logbf
__builtin_rvv_vsuxseg7ei8_v
logbl
NSClosedEnum
lrint
__builtin_rvv_vsuxseg2ei16_v
lrintf
-pass-remarks=
lrintl
__builtin_rvv_vsuxseg4ei16_v
lround
multiple definitions of class '
lroundf
-mskip-rax-setup
lroundl
-pass-remarks-missed=
nearbyint
__builtin_rvv_vsuxseg8ei16_v
nearbyintf
multiple definitions of global variable '
nearbyintl
__builtin_rvv_vsuxseg3ei32_v
nextafter
-pass-remarks-analysis=
nextafterf
__builtin_rvv_vsuxseg5ei32_v
nextafterl
multiple definitions of enumerator '
nexttoward
-fno-ptrauth-abi-version
nexttowardf
opt-remarks-filename=
nexttowardl
__builtin_rvv_vsuxseg2ei64_v
remainder
cannot mix EnumKind and EnumExtensibility (for 
remainderf
__builtin_rvv_vsuxseg4ei64_v
remainderl
.opt.ld.
remquo
__builtin_rvv_vsuxseg6ei64_v
remquof
multiple definitions of typedef '
remquol
-msmall-data-limit=
rint
opt-remarks-passes=
__builtin_rvv_vloxei8_v_ta
rintf
rintl
__builtin_rvv_vloxei8_v_tama
round
opt-remarks-format=
roundf
__builtin_rvv_vloxei16_v_tumu
roundl
duplicate definition of class property '
scalbln
-fschedule-insns2
scalblnf
opt-remarks-with-hotness
scalblnl
__builtin_rvv_vloxei32_v_tama
scalbn
is missing a ':' at the end
scalbnf
__builtin_rvv_vsoxseg3ei8_v
scalbnl
opt-remarks-hotness-threshold=
__builtin_rvv_vsoxseg5ei8_v
sinf
availability message for available API '
sinl
-msmall-data-limit
sinh
asan
sinhf
__builtin_rvv_vloxei64_v_tumu
sinhl
nullability info for 
sqrt
__builtin_rvv_vsoxseg8ei8_v
sqrtf
asan-preinit
sqrtl
__builtin_rvv_vsoxseg3ei16_v
-fno-autolink
tanf
Disable Pointer Authentication ABI versioning
tanl
memprof
tanh
__builtin_rvv_vsoxseg7ei16_v
tanhf
call_once
tanhl
__builtin_rvv_vsoxseg2ei32_v
tgamma
memprof-preinit
tgammaf
__builtin_rvv_vsoxseg4ei32_v
tgammal
unknown std::call_once implementation, skipping.
trunc
-msoft-float
truncf
ubsan_minimal
truncl
__builtin_rvv_vsoxseg8ei32_v
cabs
_M_once
complex.h
__builtin_rvv_vsoxseg3ei64_v
cabsf
scudo_minimal
cabsl
__builtin_rvv_vsoxseg5ei64_v
cacos
completion
cacosf
-fsecond-underscore
cacosl
tsan
cacosh
__builtin_rvv_vadd_vx_ta
cacoshf
withCompletion
cacoshl
__builtin_rvv_vadd_vx_tama
carg
hwasan_aliases
cargf
__builtin_rvv_vsub_vv_tumu
cargl
withCompletionBlock
casin
-mspeculative-load-hardening
casinf
hwasan
casinl
__builtin_rvv_vsub_vx_tama
casinh
reply
casinhf
__builtin_rvv_vrsub_vx_tumu
casinhl
hwasan-preinit
catan
__builtin_rvv_vwaddu_vx_ta
catanf
WithCompletionHandler
catanl
-fno-ptrauth-auth-traps
catanh
asan_static
catanhf
__builtin_rvv_vwsubu_vv_tumu
catanhl
WithCompletionBlock
ccos
__builtin_rvv_vwsubu_vx_ta
ccosf
asan_cxx
ccosl
__builtin_rvv_vwsubu_vx_tama
ccosh
WithReply
ccoshf
-msse2
ccoshl
memprof_cxx
cexp
__builtin_rvv_vwadd_vx_ta
cexpf
shouldCall
cexpl
__builtin_rvv_vwadd_vx_tama
cimag
hwasan_aliases_cxx
cimagf
__builtin_rvv_vwsub_vv_tumu
cimagl
conj
-fseh-exceptions
conjf
hwasan_cxx
conjl
__builtin_rvv_vwsub_vx_tama
clog
dispatch_async
clogf
__builtin_rvv_vwaddu_wx_tumu
clogl
dfsan
cproj
__builtin_rvv_vwsubu_wv_ta
cprojf
dispatch_after
cprojl
-msse4.1
cpow
lsan
cpowf
__builtin_rvv_vwsubu_wx_tumu
cpowl
dispatch_once
creal
__builtin_rvv_vwadd_wv_ta
crealf
msan
creall
Include default header file for OpenCL and HLSL
csin
Disable generation of linker directives for automatic library linking
csinf
-fno-ptrauth-block-descriptor-pointers
csinl
msan_cxx
csinh
__builtin_rvv_vwsub_wv_ta
csinhf
csinhl
__builtin_rvv_vwsub_wv_tama
csqrt
tsan_cxx
csqrtf
__builtin_rvv_vwsub_wx_tumu
csqrtl
 ... 
ctan
-msse4a
ctanf
safestack
ctanl
__builtin_rvv_vwcvt_x_x_v_tama
ctanh
__except (
ctanhf
__builtin_rvv_vadc_vxm_ta
ctanhl
__safestack_init
__sinpi
__builtin_rvv_vsbc_vxm_ta
__sinpif
__cospi
-fsemantic-interposition
__cospif
__tanpi
__builtin_rvv_vmsbc_vv
__tanpif
__exp10
__builtin_rvv_vand_vv_tumu
__exp10f
cfi_diag
_Block_object_assign
__builtin_rvv_vand_vx_ta
vv*vC*iC
unconsumed
Blocks.h
-msse
_Block_object_dispose
scudo_cxx_minimal
vvC*iC
__builtin_rvv_vxor_vv_tumu
addressof
raise
v*v&
__builtin_rvv_vxor_vx_ta
zfncTh
scudo_cxx
memory
__builtin_rvv_vxor_vx_tama
__addressof
format
zfncT
-fno-ptrauth-calls
as_const
--whole-archive
v&v&
__builtin_rvv_vor_vx_ta
utility
forward
__builtin_rvv_vor_vx_tama
move
--no-whole-archive
move_if_noexcept
__builtin_rvv_vsll_vv_tumu
__builtin_annotation
#undefined
__builtin_assume
-mstack-alignment=
__builtin_addcb
.syms
UcUcCUcCUcCUc*
__builtin_rvv_vsll_vx_tama
__builtin_addcs
#vref
UsUsCUsCUsCUs*
__builtin_rvv_vsrl_vv_tumu
__builtin_addc
--dynamic-list=
UiUiCUiCUiCUi*
__builtin_rvv_vsrl_vx_ta
__builtin_addcl
ULiULiCULiCULiCULi*
Allocate to an enum type only as many bytes as it needs for the declared range of possible values
__builtin_addcll
.dwo
ULLiULLiCULLiCULLiCULLi*
__builtin_rvv_vsra_vv_tumu
__builtin_subcb
new 
__builtin_subcs
__builtin_rvv_vsra_vx_ta
__builtin_subc
-lgcc_eh
__builtin_subcl
__builtin_rvv_vsra_vx_tama
__builtin_subcll
cast[
__builtin_add_overflow
-mstack-arg-probe
-lgcc_s
__builtin_sub_overflow
__builtin_rvv_vnsrl_wx_ta
__builtin_mul_overflow
truncNum
__builtin_uadd_overflow
__builtin_rvv_vnsrl_wx_tama
bUiCUiCUi*
-l:libunwind.a
__builtin_uaddl_overflow
__builtin_rvv_vnsra_wv_tumu
bULiCULiCULi*
-fno-automatic
__builtin_uaddll_overflow
-fno-ptrauth-function-pointer-type-discrimination
bULLiCULLiCULLi*
-l:libunwind.dll.a
__builtin_usub_overflow
__builtin_rvv_vnsra_wx_tama
__builtin_usubl_overflow
__builtin_usubll_overflow
__builtin_rvv_vncvt_x_x_w_tumu
__builtin_umul_overflow
-l:libunwind.so
__builtin_umull_overflow
__builtin_rvv_vmseq_vv
__builtin_umulll_overflow
__builtin_sadd_overflow
-mstack-probe-size=
bSiCSiCSi*
-mllvm
__builtin_saddl_overflow
__builtin_rvv_vmsne_vv
bSLiCSLiCSLi*
let 
__builtin_saddll_overflow
__builtin_rvv_vmsne_vx
bSLLiCSLLiCSLLi*
--32
__builtin_ssub_overflow
__builtin_rvv_vmsltu_vv
__builtin_ssubl_overflow
phi(
__builtin_ssubll_overflow
Force wchar_t to be a short unsigned int
__builtin_smul_overflow
--64
__builtin_smull_overflow
__builtin_rvv_vmslt_vv
__builtin_smulll_overflow
BB_null
__builtin_addressof
__builtin_rvv_vmslt_vx
__builtin_function_start
--strip-all
__builtin_operator_new
__builtin_rvv_vmsleu_vv
__builtin_operator_delete
-mstack-protector-guard-offset=
__builtin_char_memchr
thumb2pe
c*cC*iz
__builtin_rvv_vmsle_vv
__builtin_dump_struct
__builtin_preserve_access_index
__builtin_rvv_vmsle_vx
__builtin_is_aligned
arm64pe
bvC*z
__builtin_rvv_vmsgtu_vv
__builtin_align_up
 else 
v*vC*z
-fno-ptrauth-indirect-gotos
__builtin_align_down
i386pe
__builtin___get_unsafe_stack_start
__builtin_rvv_vmsgt_vv
__builtin___get_unsafe_stack_bottom
#lit
__builtin___get_unsafe_stack_top
__builtin_rvv_vmsgt_vx
__builtin___get_unsafe_stack_ptr
i386pep
__builtin_nontemporal_store
__builtin_rvv_vmsgeu_vv
__builtin_nontemporal_load
__builtin_coro_resume
-mstack-protector-guard-reg=
__builtin_coro_destroy
_DllMainCRTStartup
__builtin_coro_done
__builtin_rvv_vwaddu_wv_tama
__builtin_coro_promise
__builtin_rvv_vsuxei16_v
v*v*IiIb
_DllMainCRTStartup@12
__builtin_coro_size
__builtin_rvv_vmsgeu_vx_ma
__builtin_coro_align
-fshow-overloads=
__builtin_coro_frame
-Bdynamic
__builtin_coro_noop
__builtin_rvv_vmsge_vx_ma
__builtin_coro_free
__builtin_coro_id
__builtin_rvv_vminu_vv_tumu
v*Iiv*v*v*
--enable-auto-image-base
__builtin_coro_alloc
__builtin_rvv_vminu_vx_ta
__builtin_coro_begin
__builtin_coro_end
-mstack-protector-guard-symbol=
bv*Ib
--entry
__builtin_coro_suspend
__builtin_rvv_vmin_vv_tumu
__builtin_ptrauth_strip
__builtin_rvv_vmin_vx_ta
v*v*i
mainCRTStartup
__builtin_ptrauth_blend_discriminator
Set the maximum number of entries to print in a macro expansion backtrace (0 = no limit).
zv*i
Implies the SAVE attribute for non-automatic local objects in subprograms unless RECURSIVE
__builtin_ptrauth_sign_constant
-fno-ptrauth-intrinsics
v*v*iv*
--allow-multiple-definition
__builtin_ptrauth_sign_unauthenticated
__builtin_rvv_vmaxu_vx_ta
__builtin_ptrauth_sign_generic_data
zv*v*
__builtin_rvv_vmaxu_vx_tama
__builtin_ptrauth_auth_and_resign
--out-implib
v*v*iv*iv*
__builtin_rvv_vmax_vv_tumu
__builtin_ptrauth_auth
__builtin_ptrauth_string_discriminator
-mstack-protector-guard=
__builtin_virtual_member_address
-lmsvcrt
v*v*v*
__builtin_rvv_vmax_vx_tama
__builtin_load_member_function_pointer
read_pipe
__builtin_rvv_vmul_vv_tumu
write_pipe
asan_dll_thunk
reserve_read_pipe
__builtin_rvv_vmul_vx_ta
reserve_write_pipe
Decrement
commit_write_pipe
best,all
commit_read_pipe
asan_dynamic
sub_group_reserve_read_pipe
__builtin_rvv_vmulh_vv_tumu
sub_group_reserve_write_pipe
PointerArithmetic
sub_group_commit_read_pipe
__builtin_rvv_vmulh_vx_ta
sub_group_commit_write_pipe
asan_dynamic_runtime_thunk
work_group_reserve_read_pipe
__builtin_rvv_vmulh_vx_tama
work_group_reserve_write_pipe
ULCArraySubscript
work_group_commit_read_pipe
-mstackrealign
work_group_commit_write_pipe
--undefined
get_pipe_num_packets
__builtin_rvv_vmulhu_vx_ta
UPCAddressofArraySubscript
get_pipe_max_packets
__builtin_rvv_vmulhu_vx_tama
enqueue_kernel
___asan_seh_interceptor
get_kernel_work_group_size
__builtin_rvv_vmulhsu_vv_tumu
get_kernel_preferred_work_group_size_multiple
PointerCtxAccess
get_kernel_max_sub_group_size_for_ndrange
-fno-ptrauth-kernel-abi-version
get_kernel_sub_group_count_for_ndrange
__asan_seh_interceptor
to_global
__builtin_rvv_vmulhsu_vx_tumu
to_local
any_ds
to_private
__builtin_rvv_vdivu_vv_ta
__builtin_store_half
/usr/local/include
vdh*
__builtin_rvv_vdivu_vv_tama
__builtin_store_halff
BaseDRE
vfh*
-mstrict-align
__builtin_load_half
/usr/include/c++/v1
dhC*
__builtin_rvv_vdiv_vv_ta
__builtin_load_halff
AddressofArraySubscriptUnderUPC
fhC*
__builtin_rvv_vdiv_vv_tama
__builtin_os_log_format_buffer_size
CrossWindows::Linker
zcC*.
__builtin_rvv_vdiv_vx_tumu
p:0:nut
DerefOp
__builtin_os_log_format
Show skipped includes in -H output.
v*v*cC*.
CrossWindows::Assembler
p:0:nt
__builtin_rvv_vremu_vv_tama
__builtin_get_device_side_mangled_name
AddOp
cC*.
__builtin_rvv_vremu_vx_tumu
/../
__builtin_hlsl_wave_active_count_bits
__builtin_rvv_vrem_vv_ta
PtrAccess
__builtin_hlsl_create_handle
-msve-vector-bits=
v*Uc
/bin
__xray_customevent
__builtin_rvv_vrem_vx_tumu
vcC*z
ptrAddPtr
__xray_typedevent
__builtin_rvv_vwmul_vv_ta
vzcC*z
sys-include
__builtin_ms_va_start
__builtin_rvv_vwmul_vv_tama
vc*&.
-fno-backslash
__builtin_ms_va_end
Disable Pointer Authentication kernel ABI versioning
vc*&
/include/c++/
__builtin_ms_va_copy
__builtin_rvv_vwmulu_vv_ta
vc*&c*&
__arithmetic_fence
__builtin_rvv_vwmulu_vv_tama
__builtin_tmo_get_id
cskyelf
zvC*
__builtin_rvv_vwmulu_vx_tumu
, <# size #>)
__builtin_tmo_get_size
-msvr4-struct-return
__builtin_tmo_get_flags
crtbegin
__builtin_tmo_get_version
__builtin_rvv_vwmulsu_vv_tama
__builtin_tmo_get_alignment
placeholder
__builtin_tmo_get_xnu_description
__builtin_rvv_vwmulsu_vx_tumu
cC*vC*
crtend
__builtin_tmo_get_json_description
__builtin_rvv_vmacc_vv_tu
span
-fsign-zero
-lsemi
__builtin_rvv_vmacc_vx_tumu
void()
__builtin_rvv_vnmsac_vv_tu
10.0
-lnosys
10.1
__builtin_rvv_vnmsac_vv_tama
10.2
<uninitialized>
11.0
-mt-migrate-directory
11.1
CSKY::Linker
11.2
__builtin_rvv_vnmsac_vx_tama
11.3
(char*)
11.4
__builtin_rvv_vmadd_vv_tumu
11.5
11.6
__builtin_rvv_vmadd_vx_tu
11.7
11.8
-fno-ptrauth-objc-class-ro
unknown
__builtin_rvv_vnmsub_vv_tumu
sm_20
...}
compute_20
__builtin_rvv_vnmsub_vx_tu
sm_21
/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v
sm_30
__builtin_rvv_vnmsub_vx_tama
compute_30
sm_32
-mtail-call
compute_32
ptxas
sm_35
__builtin_rvv_vwmaccu_vx_tu
compute_35
sm_37
__builtin_rvv_vwmaccu_vx_tama
compute_37
/usr/local/cuda-
sm_50
__builtin_rvv_vwmacc_vv_tumu
compute_50
*** AST Context Stats:
sm_52
-fsignaling-nans
compute_52
/lib64
sm_53
__builtin_rvv_vwmacc_vx_tama
compute_53
Adjusted
sm_60
__builtin_rvv_vwmaccsu_vv_tumu
compute_60
/libdevice.10.bc
sm_61
__builtin_rvv_vwmaccsu_vx_tu
compute_61
 each 
sm_62
Set the deployment target to be the specified OS and OS version
compute_62
sm_20
sm_70
__builtin_rvv_vwmaccus_vx_tumu
compute_70
Decayed
sm_72
__builtin_rvv_vmerge_vvm_ta
compute_72
sm_21
sm_75
Always exclude wrong side overloads in overloading resolution for CUDA/HIP
compute_75
-fno-backtrace
sm_80
-fno-ptrauth-objc-interface-sel
compute_80
sm_32
sm_86
__builtin_rvv_vsaddu_vv_tama
compute_86
VariableArray
sm_87
__builtin_rvv_vsaddu_vx_tumu
compute_87
sm_30
sm_89
__builtin_rvv_vsadd_vv_ta
compute_89
Attributed
sm_90
/MTd
compute_90
sm_50
gfx600
__builtin_rvv_vsadd_vx_tumu
compute_amdgcn
BitInt
gfx601
__builtin_rvv_vssubu_vv_ta
gfx602
sm_52
gfx700
__builtin_rvv_vssubu_vv_tama
gfx701
Builtin
gfx702
-fsigned-char
gfx703
sm_53
gfx704
__builtin_rvv_vssub_vv_ta
gfx705
Decltype
gfx801
__builtin_rvv_vssub_vv_tama
gfx802
sm_60
gfx803
__builtin_rvv_vssub_vx_tumu
gfx805
DeducedTemplateSpecialization
gfx810
-mtgsplit
gfx900
sm_61
gfx902
__builtin_rvv_vaaddu_vv_tama
gfx904
DependentBitInt
gfx906
__builtin_rvv_vaaddu_vx_tumu
gfx908
sm_62
gfx909
__builtin_rvv_vaadd_vv_ta
gfx90a
DependentSizedExtVector
gfx90c
-fno-ptrauth-objc-isa
gfx940
sm_35
gfx1010
__builtin_rvv_vaadd_vx_tumu
gfx1011
DependentVector
gfx1012
__builtin_rvv_vasubu_vv_ta
gfx1013
sm_37
gfx1030
__builtin_rvv_vasubu_vv_tama
gfx1031
DynamicRangePointer
gfx1032
-mthread-model
gfx1033
__clang_cuda_runtime_wrapper.h
gfx1034
__builtin_rvv_vasub_vv_ta
gfx1035
FunctionNoProto
gfx1036
__builtin_rvv_vasub_vv_tama
gfx1100
Found CUDA installation: 
gfx1101
__builtin_rvv_vasub_vx_tumu
gfx1102
InjectedClassName
gfx1103
-fsigned-wchar
generic
, version 
MaximumDeploymentTarget
__builtin_rvv_vsmul_vv_tama
VersionMap
ConstantMatrix
macOS_iOSMac
__builtin_rvv_vsmul_vx_tumu
iOSMac_macOS
SDKSettings.json
__builtin_rvv_vssrl_vv_ta
invalid SDKSettings.json
MemberPointer
'nonnull'
posix,single
'_Nonnull'
-m64
'nullable'
__builtin_rvv_vssrl_vx_tumu
'_Nullable'
ObjCObject
'null_unspecified'
__builtin_rvv_vssra_vv_ta
'_Null_unspecified'
-m32
_Nullable_result
__builtin_rvv_vssra_vv_tama
diagnostic state at 
-fno-bitfield-type-align
<unknown 
-fno-ptrauth-returns
 pragma
--dont-merge-basicblocks
 no-error
__builtin_rvv_vnclipu_wv_ta
 no-fatal
Paren
 overruled
__builtin_rvv_vnclipu_wv_tama
<can't format argument>
--return-at-end
File 
__builtin_rvv_vnclipu_wx_tumu
 <FileID 
LValueReference
-mthumb
 has_local_transitions
: state 
__builtin_rvv_vnclip_wv_tama
SubstTemplateTypeParmPack
__builtin_rvv_vnclip_wx_tumu
-lineinfo
__builtin_rvv_vfadd_vv_ta
Lexical or Preprocessor Issue
Enum
Semantic Issue
-fsigned-zeros
Lambda Issue
--gpu-name
Parse Issue
__builtin_rvv_vfadd_vf_tumu
ARC Semantic Issue
TemplateSpecialization
ARC and @properties
__builtin_rvv_vfsub_vv_ta
ARC Casting Rules
--output-file
ARC Parse Issue
__builtin_rvv_vfsub_vv_tama
ARC Weak References
TypeOfExpr
ARC Restrictions
Enable direct TLS access through segment registers (default)
OpenMP Issue
Inline Assembly Issue
__builtin_rvv_vfrsub_vf_ta
AST Deserialization Issue
Typedef
Firebloom Pointer Attributes Issue
__builtin_rvv_vfrsub_vf_tama
Modules Issue
--options-file
Coroutines Issue
__builtin_rvv_vfwadd_vv_tumu
Concepts Issue
UnresolvedUsing
Dependency Directive Source Scanner Issue
-fno-ptrauth-soft
Backend Issue
--cuda
SourceMgr Reported Issue
__builtin_rvv_vfwadd_vf_tama
Refactoring Continuation Issue
ValueTerminated
API Notes Issue
__builtin_rvv_vfwsub_vv_tumu
Related Result Type Issue
Rename Issue
__builtin_rvv_vsuxei64_v
AST Serialization Issue
ExtVector
Nullability Issue
Specify bit size of immediate TLS offsets (AArch64 ELF only): 12 (for 4KB) | 24 (for 16MB, default) | 32 (for 4GB) | 48 (for 256TB, needs -mcmodel=large)
Generics Issue
User-Defined Issue
__builtin_rvv_vfwadd_wv_ta
Refactoring Invocation Issue
 implicit default constructors created
VTable ABI Issue
__builtin_rvv_vfwadd_wv_tama
Value Conversion Issue
--create
Documentation Issue
__builtin_rvv_vfwadd_wf_tumu
ARC Retain Cycle
 implicit move constructors created
Deprecations
-fsized-deallocation
Format String Issue
--image=profile=
Cocoa API Issue
__builtin_rvv_vfwsub_wv_tama
#pragma message Directive
 implicit move assignment operators created
Instrumentation Issue
__builtin_rvv_vfwsub_wf_tumu
Unused Entity Issue
,file=
The warning is issued if the number of pre-processor tokens exceeds
the token limit, which can be set in three ways:
1. As a limit at a specific point in a file, using the ``clang max_tokens_here``
   pragma:
   .. code-block: c++
      #pragma clang max_tokens_here 1234
2. As a per-translation unit limit, using the ``-fmax-tokens=`` command-line
   flag:
   .. code-block: console
      clang -c a.cpp -fmax-tokens=1234
3. As a per-translation unit limit using the ``clang max_tokens_total`` pragma,
   which works like and overrides the ``-fmax-tokens=`` flag:
   .. code-block: c++
      #pragma clang max_tokens_total 1234
These limits can be helpful in limiting code growth through included files.
Setting a token limit of zero means no limit.
Note that the warning is disabled by default, so -Wmax-tokens must be used
in addition with the pragmas or -fmax-tokens flag to get any warnings.
__builtin_rvv_vfmul_vv_ta
__is_lvalue_expr
__int128_t
__is_rvalue_expr
Thread pointer access method (AArch32/AArch64 only)
*** File Manager Stats:
fatbinary
 real files found, 
__builtin_rvv_vfmul_vf_tumu
 real dirs found.
_GUID
 virtual files found, 
__builtin_rvv_vfdiv_vv_ta
 virtual dirs found.
+ptx42
 dir lookups, 
remap file source paths in predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
 dir cache misses.
Ignore bit-field types when aligning structures
 file lookups, 
-fno-ptrauth-vtable-pointer-address-discrimination
 file cache misses.
+ptx78
NumDirLookups
__builtin_rvv_vfrdiv_vf_ta
Number of directory lookups.
_cfisa
NumDirCacheMisses
__builtin_rvv_vfrdiv_vf_tama
Number of directory cache misses.
+ptx77
NumFileLookups
__builtin_rvv_vfwmul_vv_tumu
Number of file lookups.
_ptr
NumFileCacheMisses
-mtp
Number of file cache misses.
+ptx76
delete
__builtin_rvv_vfwmul_vf_tama
reserved
__builtin_rvv_vfmacc_vv_tumu
and_eq
+ptx75
bitand
__builtin_rvv_vfmacc_vf_tu
bitor
compl
-fsjlj-exceptions
not_eq
+ptx74
or_eq
__builtin_rvv_vfnmacc_vv_tumu
xor_eq
objc_class
co_await
__builtin_rvv_vfnmacc_vf_tu
_Nonnull
+ptx73
_Nullable
__builtin_rvv_vfnmacc_vf_tama
_Nullable_result
_Null_unspecified
-mtsxldtrk
not_keyword
+ptx72
defs
__builtin_rvv_vfmsac_vf_tu
__ieee128
{objc_object=}
__builtin_rvv_vfmsac_vf_tama
*** Identifier Table Stats:
+ptx71
# Identifiers:   %d
__builtin_rvv_vfnmsac_vv_tumu
# Empty Buckets: %d
"_vptr$
Hash density (#identifiers per bucket): %f
-fno-ptrauth-vtable-pointer-type-discrimination
Ave identifier length: %f
+ptx70
Max identifier length: %d
__builtin_rvv_vfnmsac_vf_tama
<null selector>
__builtin_rvv_vfmadd_vv_tumu
dealloc
+ptx65
finalize
__builtin_rvv_vfmadd_vf_tu
retainCount
initialize
-mtune=
performSelectorInBackground
+ptx64
performSelectorOnMainThread
__builtin_rvv_vfnmadd_vv_tumu
stringByAppendingFormat
Protocol
stringWithFormat
__builtin_rvv_vfnmadd_vf_tu
+ptx63
new[]
__builtin_rvv_vfnmadd_vf_tama
delete[]
a prior #pragma section
-fslp-vectorize-aggressive
+ptx61
__builtin_rvv_vfmsub_vf_tu
__type_pack_element
__builtin_rvv_vfmsub_vf_tama
+ptx60
__builtin_rvv_vfnmsub_vv_tumu
-mtvos-simulator-version-min=
cubin
__builtin_rvv_vfnmsub_vf_tama
__builtin_rvv_vfwmacc_vv_tumu
-enable-memcpyopt-without-libcalls
__builtin_rvv_vfwmacc_vf_tu
-fno-blocks
-fno-range-check
--nvptx-short-ptr
__builtin_rvv_vfwnmacc_vv_tumu
__builtin_rvv_vfwnmacc_vf_tu
define
__builtin_rvv_vfwnmacc_vf_tama
DF16_
CUDA_VERSION
__builtin_rvv_vfwmsac_vf_tu
<anonymous_record>
__builtin_rvv_vfwmsac_vf_tama
NVPTX::Assembler
__builtin_rvv_vfwnmsac_vv_tumu
__va_list
Enable the superword-level parallelism vectorization passes
NVPTX::Linker
__builtin_rvv_vfwnmsac_vf_tama
__stack
__builtin_rvv_vfmin_vv_tumu
ppc601
__builtin_rvv_vfmin_vf_ta
__vr_top
nonnull
nullable
ppc603
null_unspecified
__builtin_rvv_vfmax_vv_tumu
C++ for OpenCL
__vr_offs
OpenCL C
__builtin_rvv_vfmax_vf_ta
 version 
ppc604
getLangStandardForKind() on unspecified kind
__builtin_rvv_vfmax_vf_tama
iso9899:199409
-fno-real-4-real-10
gnu89
ppc604e
__builtin_rvv_vfsgnj_vf_ta
gnu99
reg_save_area
__builtin_rvv_vfsgnj_vf_tama
gnu11
ppc750
__builtin_rvv_vfsgnjn_vv_tumu
gnu17
fp_offset
-muclibc
gnu2x
ppc7400
c++98
__builtin_rvv_vfsgnjn_vf_tama
gnu++98
__gpr
c++11
__builtin_rvv_vfsgnjx_vv_tumu
gnu++11
ppc7450
c++14
__builtin_rvv_vfsgnjx_vf_ta
gnu++14
__overflow_arg_area
c++17
Enable small block descriptors
gnu++17
ppc970
c++20
__builtin_rvv_vfabs_v_tumu
gnu++20
__current_saved_reg_area_pointer
c++2b
__builtin_rvv_vmfeq_vv
gnu++2b
i486SX
cl1.0
__builtin_rvv_vmfeq_vf
cl1.1
__overflow_area_pointer
cl1.2
-multi_module
cl2.0
pentium
cl3.0
__builtin_rvv_vmfne_vf
clc++1.0
 address space
clc++2021
__builtin_rvv_vmflt_vv
cuda
pentpro
-finit-character=
hlsl
-fno-borland-extensions
hlsl2015
-fno-real-4-real-16
hlsl2016
pentIIm3
hlsl2017
__builtin_rvv_vmfle_vf
hlsl2018
the global scope
hlsl2021
__builtin_rvv_vmfgt_vv
hlsl202x
pentIIm5
ISO C 1990
__builtin_rvv_vmfgt_vf
ISO C 1990 with amendment 1
lambda expression
ISO C 1990 with GNU extensions
-multiply_defined
ISO C 1999
armv4t
ISO C 1999 with GNU extensions
__builtin_rvv_vmfge_vf
ISO C 2011
function 
ISO C 2011 with GNU extensions
__builtin_rvv_vfmerge_vfm_ta
ISO C 2017
armv5
ISO C 2017 with GNU extensions
__builtin_rvv_vredsum_vs_tu
Working Draft for ISO C2x
values
Working Draft for ISO C2x with GNU extensions
-fspell-checking-limit=
ISO C++ 1998 with amendments
armv6
ISO C++ 1998 with amendments and GNU extensions
__builtin_rvv_vredmaxu_vs_tum
ISO C++ 2011 with amendments
ISO C++ 2011 with amendments and GNU extensions
__builtin_rvv_vredmax_vs_tumu
ISO C++ 2014 with amendments
armv6m
ISO C++ 2014 with amendments and GNU extensions
__builtin_rvv_vredminu_vs_ta
ISO C++ 2017 with amendments
(default) 
ISO C++ 2017 with amendments and GNU extensions
Allow memory accesses to be unaligned (AArch32/AArch64 only)
ISO C++ 2020 DIS
armv7
ISO C++ 2020 DIS with GNU extensions
__builtin_rvv_vredmin_vs_tam
Working draft for ISO C++ 2023 DIS
[(default) 
Working draft for ISO C++ 2023 DIS with GNU extensions
__builtin_rvv_vredand_vs_tum
OpenCL 1.0
armv7em
OpenCL 1.1
__builtin_rvv_vredor_vs_tumu
OpenCL 1.2
[(default) template 
OpenCL 2.0
-fno-real-4-real-8
OpenCL 3.0
armv7m
C++ for OpenCL 1.0
__builtin_rvv_vwredsum_vs_tu
C++ for OpenCL 2021
 aka 
NVIDIA CUDA(tm)
__builtin_rvv_vwredsum_vs_tam
xscale
High Level Shader Language
__builtin_rvv_vwredsumu_vs_tum
High Level Shader Language 2015
High Level Shader Language 2016
-munsafe-fp-atomics
High Level Shader Language 2017
arm64_32
High Level Shader Language 2018
__builtin_rvv_vfredmin_vs_ta
High Level Shader Language 2021
High Level Shader Language 202x
__builtin_rvv_vfredusum_vs_tu
nvptx64
explicit 
__builtin_rvv_vfredusum_vs_tam
 [system]
inherited from
 [extern_c]
Set the maximum number of times to perform spell checking on unrecognized identifiers (0 = no limit).
 [swift_infer_import_as_member]
amdil
umbrella header "
__builtin_rvv_vfwredusum_vs_tumu
umbrella "
 hidden
config_macros 
__builtin_rvv_vfwredosum_vs_ta
[exhaustive]
spir
textual 
__builtin_rvv_vmnot_m
private 
array_filler
private textual 
-mv55
exclude 
header "
__builtin_rvv_vid_v_tu
" { size 
TemplateArgument
 mtime 
__builtin_rvv_vid_v_tamu
--gstabs
 size 
__builtin_rvv_vfmv_f_s
import 
-fno-bounds-check
use 
-fno-real-8-real-10
conflict 
-arch
module * {
__builtin_rvv_vslideup_vx_tuma
macosx
NestedNameSpecifierLoc
macosx-fragile
__builtin_rvv_vslidedown_vx_ta
-demangle
watchos
__builtin_rvv_vslidedown_vx_tamu
bridgeos
QualifiedTypeLoc
gnustep
-mv60
-export_dynamic
objfw
__builtin_rvv_vfslide1up_vf_tu
cl_khr_fp64
DecayedTypeLoc
cl_khr_3d_image_writes
__builtin_rvv_vfslide1up_vf_tamu
__opencl_c_pipes
-application_extension
__opencl_c_generic_address_space
__builtin_rvv_vslide1down_vx_tu
__opencl_c_3d_image_writes
ConstantArrayTypeLoc
__opencl_c_device_enqueue
-fsplit-cold-code
__opencl_c_read_write_images
-object_path_lto
__opencl_c_program_scope_global_variables
__builtin_rvv_vfslide1down_vf_tuma
__opencl_c_fp64
IncompleteArrayTypeLoc
__opencl_c_images
__builtin_rvv_vrgather_vv_tu
close
libLTO.dylib
spread
__builtin_rvv_vrgather_vv_tamu
primary
AtomicTypeLoc
guided
-mv65
monotonic
-lto_library
nonmonotonic
__builtin_rvv_vrgatherei16_vv_tu
mutexinoutset
BTFTagAttributedTypeLoc
sink
__builtin_rvv_vrgatherei16_vv_tamu
inoutset
-no_deduplicate
outallmemory
__builtin_rvv_vset_v
inoutallmemory
BlockPointerTypeLoc
-fno-real-8-real-16
-dynamic
uval
__builtin_rvv_vsoxei64_v_m
tofrom
ComplexTypeLoc
present
__builtin_rvv_vlseg2e8_v_tuma
ompx_hold
-dylib
scalar
__builtin_rvv_vle16ff_v_tu
aggregate
DeducedTypeLoc
nohost
-mv67t
conditional
-dylib_compatibility_version
concurrent
__builtin_rvv_vle32ff_v_tuma
ancestor
DeducedTemplateSpecializationTypeLoc
device_num
__builtin_rvv_vle64ff_v_tu
inscan
-dylib_current_version
need_device_ptr
__builtin_rvv_vle64ff_v_tamu
type
DependentBitIntTypeLoc
-fsplit-dwarf-inlining
shift
-dylib_install_name
undefined-trap
__builtin_rvv_vlseg4e8_v_tu
implicit-integer-truncation
DependentSizedExtVectorTypeLoc
implicit-integer-arithmetic-value-change
__builtin_rvv_vlseg4e8_v_tamu
implicit-conversion
-no_pie
bounds
__builtin_rvv_vlseg5e8_v_tuma
none
DependentVectorTypeLoc
global
-mv68
invalid
-bitcode_bundle
always
__builtin_rvv_vle8_v_tamu
runtime
DynamicCountPointerTypeLoc
never
__builtin_rvv_vlseg6e8_v_tuma
-bitcode_process_mode
artifactLocation
Require math functions to indicate errors by setting errno
tool
-fno-branch-count-reg
enabled
-fno-real-8-real-4
level
-syslibroot
rank
__builtin_rvv_vlseg8e8_v_tuma
fullDescription
FunctionNoProtoTypeLoc
defaultConfiguration
__builtin_rvv_vlseg2e16_v_tu
helpUri
touch
driver
__builtin_rvv_vlseg2e16_v_tamu
rules
InjectedClassNameTypeLoc
artifacts
-mvaes
location
-enable-machine-outliner
roles
__builtin_rvv_vlseg4e16_v_tu
mimeType
MatrixTypeLoc
threadFlows
__builtin_rvv_vlseg4e16_v_tamu
fullName
-enable-linkonceodr-outlining
en-US
__builtin_rvv_vlseg5e16_v_tuma
informationUri
DependentSizedMatrixTypeLoc
https://clang.llvm.org/docs/UsersManual.html
-fsplit-lto-unit
results
-enable-machine-outliner=never
columnKind
__builtin_rvv_vlseg6e16_v_tamu
unicodeCodePoints
ObjCObjectPointerTypeLoc
ruleIndex
__builtin_rvv_vlseg7e16_v_tuma
ruleId
-lto-stats-file=
codeFlows
__builtin_rvv_vlseg8e16_v_tu
$schema
ObjCInterfaceTypeLoc
runs
-mvpclmulqdq
file://
-ObjC
-._~:@!$&'()*+,;=
__builtin_rvv_vlseg2e32_v_tuma
startLine
PackExpansionTypeLoc
startColumn
__builtin_rvv_vlseg3e32_v_tu
endColumn
-lsystem_pthread
endLine
__builtin_rvv_vlseg3e32_v_tamu
physicalLocation
PipeTypeLoc
importance
-fno-realloc-lhs
important
-framework
essential
__builtin_rvv_vlseg5e32_v_tu
unimportant
ReferenceTypeLoc
<invalid loc>
__builtin_rvv_vlseg5e32_v_tamu
<invalid>
Foundation
 <Spelling=
__builtin_rvv_vlseg6e32_v_tuma
RValueReferenceTypeLoc
UTF-32 (BE)
Specify the vscale maximum. Defaults to the vector length agnostic value of "0". (AArch64 only)
UTF-32 (LE)
-lobjc
UTF-16 (BE)
__builtin_rvv_vlseg7e32_v_tamu
UTF-16 (LE)
SubstTemplateTypeParmTypeLoc
UTF-7
__builtin_rvv_vlseg8e32_v_tuma
UTF-1
-arch_multiple
UTF-EBCDIC
__builtin_rvv_vlseg2e64_v_tu
SCSU
EnumTypeLoc
BOCU-1
-fsplit-machine-functions
GB-18030
-final_output
__builtin_rvv_vlseg3e64_v_tuma
<<<INVALID BUFFER>>
TemplateSpecializationTypeLoc
<<<<<INVALID SOURCE LOCATION>>>>>
__builtin_rvv_vlseg4e64_v_tu
<<<<INVALID BUFFER>>>>
-allow_stack_execute
<invalid loc>
__builtin_rvv_vlseg4e64_v_tamu
<invalid buffer>
TypeOfExprTypeLoc
*** Source Manager Stats:
Specify the vscale minimum. Defaults to "1". (AArch64 only)
 files mapped, 
-threads=
 mem buffers mapped.
__builtin_rvv_vlseg6e64_v_tu
 local SLocEntry's allocated (
TypedefTypeLoc
 bytes of capacity), 
__builtin_rvv_vlseg6e64_v_tamu
B of Sloc address space used.
-filelist
 loaded SLocEntries allocated, 
__builtin_rvv_vlseg7e64_v_tuma
 bytes of files mapped, 
-fno-branch-target-identification
 files with line #'s computed, 
-fno-reciprocal-math
 files with macro args computed.
ZERO_AR_DATE
FileID scans: 
__builtin_rvv_vlseg8e64_v_tamu
 linear, 
ValueTerminatedTypeLoc
 binary.
__builtin_rvv_vlseg3e8ff_v_tuma
sramecc
-no_warning_for_no_symbols
xnack
__builtin_rvv_vlseg4e8ff_v_tu
mcount
ExtVectorTypeLoc
cf-protection=branch
-mvx
cf-protection=return
-create
signed char
__builtin_rvv_vlseg5e8ff_v_tuma
unsigned char
CXXBaseSpecifier
short
__builtin_rvv_vlseg6e8ff_v_tu
unsigned short
-output
__builtin_rvv_vlseg6e8ff_v_tamu
unsigned int
NestedNameSpecifier
long int
-fsplit-stack
long unsigned int
lipo
long long int
__builtin_rvv_vlseg8e8ff_v_tu
long long unsigned int
AccessSpecDecl
__builtin_rvv_vlseg8e8ff_v_tamu
dsymutil
__builtin_rvv_vlseg2e16ff_v_tuma
CapturedDecl
--verify
__builtin_rvv_vlseg3e16ff_v_tamu
EmptyDecl
__builtin_rvv_vlseg4e16ff_v_tuma
--debug-info
__builtin_rvv_vlseg5e16ff_v_tu
ExternCContextDecl
__tune_
-fno-record-command-line
__declspec(a)
--eh-frame
__attribute__((a))
__builtin_rvv_vlseg6e16ff_v_tuma
__attribute__((__
FriendDecl
__))
__builtin_rvv_vlseg7e16ff_v_tu
e-m:e-p:32:32-i1:8:32-i8:8:32-i16:16:32-i32:32:32-f32:32:32-i64:32-f64:32-a:0:32-n32
--quiet
e-m:e-p:32:32-i1:8:32-i8:8:32-i16:16:32-i64:32-f64:32-a:0:32-n32
__builtin_rvv_vlseg7e16ff_v_tamu
e-m:e-p:32:32:32-a:0-n16:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f32:32:32-f64:64:64-v32:32:32-v64:64:64-v512:512:512-v1024:1024:1024-v2048:2048:2048
ImportDecl
E-m:e-p:32:32-i64:64-a:0:32-n32-S64
-mwaitpkg
u6__bf16
dwarfdump
__builtin_rvv_vlseg2e32ff_v_tu
__CloudABI__
LinkageSpecDecl
__ELF__
__builtin_rvv_vlseg2e32ff_v_tamu
__STDC_ISO_10646__
arm64-apple-
201206L
__builtin_rvv_vlseg3e32ff_v_tuma
e-P1-p:16:8-i8:8-i16:8-i32:8-i64:8-f32:8-f64:8-n8-a:8
BaseUsingDecl
E-m:e-p:64:64-i64:64-i128:128-n32:64-S128
-fstack-arrays
e-m:e-p:64:64-i64:64-i128:128-n32:64-S128
array-bounds-pointer-arithmetic
e-m:e-p:16:16-i32:16-i64:16-f32:16-f64:16-a:8-n8:16-S16
__builtin_rvv_vlseg4e32ff_v_tamu
e-m:e-v128:32-v16:16-v32:32-v96:32-n8:16:32:64-S128
UsingEnumDecl
E-m:o-p:32:32-f64:32:64-n32
__builtin_rvv_vlseg5e32ff_v_tuma
mcount
builtin-memcpy-chk-size
E-m:a-p:32:32-i64:64-n32
__builtin_rvv_vlseg6e32ff_v_tu
e-m:e-p:32:32-i64:64-n32
LabelDecl
E-m:e-p:32:32-i64:64-n32
-mwatch-bitcode-compatibility
u9__ieee128
conditional-uninitialized
__builtin_rvv_vlseg7e32ff_v_tuma
NamespaceAliasDecl
power7
__builtin_rvv_vlseg8e32ff_v_tu
power8
empty-body
pwr8
-fgpu-flush-denormals-to-zero
power9
-fno-builtin-
pwr9
-fno-record-gcc-switches
power10
format-security
pwr10
__builtin_rvv_vlseg3e64ff_v_tu
__TEXT,__StaticInit,regular,pure_instructions
ObjCImplDecl
_IBMR2
__builtin_rvv_vlseg3e64ff_v_tamu
_POWER
implicit-int-conversion
__THW_BIG_ENDIAN__
__builtin_rvv_vlseg4e64ff_v_tuma
_AIX
ObjCImplementationDecl
__TOS_AIX__
-mwatchos-version-min=
__HOS_AIX__
memset-transposed-args
__STDC_NO_ATOMICS__
__builtin_rvv_vlseg5e64ff_v_tamu
__STDC_NO_THREADS__
ObjCProtocolDecl
__EXTABI__
__builtin_rvv_vlseg6e64ff_v_tuma
_AIX32
return-stack-address
_AIX41
__builtin_rvv_vlseg7e64ff_v_tu
_AIX43
ObjCPropertyDecl
_AIX50
Enable stack checking
_AIX51
shadow
_AIX52
__builtin_rvv_vlseg8e64ff_v_tuma
_AIX53
BuiltinTemplateDecl
_AIX61
__builtin_rvv_vlseg2e8ff_v_tu
_AIX71
shorten-64-to-32
_AIX72
__builtin_rvv_vlseg2e8ff_v_tamu
_AIX73
RedeclarableTemplateDecl
_LONG_LONG
-mwavefrontsize64
__64BIT__
sign-conversion
_WCHAR_T
__builtin_rvv_vlsseg4e8_v_tu
E-m:o-i64:64-n32:64
FunctionTemplateDecl
E-m:a-i64:64-n32:64
__builtin_rvv_vlsseg4e8_v_tamu
e-m:e-i64:64-n32:64
sizeof-array-argument
E-m:e-i64:64-n32:64
__builtin_rvv_vlsseg5e8_v_tuma
-S128-v256:256:256-v512:512:512
VarTemplateDecl
quadword-atomics
-fno-recovery-ast-type
e-m:e-p:32:32-i64:64-n32-S128
sizeof-array-decay
_mcount
__builtin_rvv_vlsseg6e8_v_tamu
e-m:e-p:64:64-i64:64-i128:128-n64-S128
TypeDecl
E-m:e-p:32:32-i64:64-f128:64-n32-S64
__builtin_rvv_vlsseg7e8_v_tuma
e-m:e-p:32:32-i64:64-f128:64-n32-S64
sizeof-pointer-memaccess
E-m:e-i64:64-n32:64-S128
__builtin_rvv_vlsseg8e8_v_tu
E-m:l-i1:8:16-i8:8:16-i64:64-f128:64-v128:64-a:8:16-n32:64
EnumDecl
E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-v128:64-a:8:16-n32:64
-mwbnoinvd
E-p:32:32:32-i1:8:8-i8:8:32-i16:16:32-i32:32:32-i64:32:32-f32:32:32-f64:32:32-v64:32:32-v128:32:32-v256:32:32-v512:32:32-v1024:32:32-a0:0:32-n32
unused-result
e-p:32:32:32-i1:8:8-i8:8:32-i16:16:32-i32:32:32-i64:32:32-f32:32:32-f64:32:32-v64:32:32-v128:32:32-v256:32:32-v512:32:32-v1024:32:32-a0:0:32-n32
__builtin_rvv_vlsseg2e16_v_tuma
e-m:o-p:32:32-p270:32:32-p271:32:32-p272:64:64-f64:32:64-f80:128-n8:16:32-S128
CXXRecordDecl
e-m:o-p:32:32-p270:32:32-p271:32:32-p272:64:64-f64:32:64-f80:32-n8:16:32-S128
__builtin_rvv_vlsseg2e8_v_tu
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-f64:32:64-f80:32-n8:16:32-S128
__builtin_rvv_vlsseg2e8_v_tamu
ClassTemplatePartialSpecializationDecl
Enable stack clash protection
-Wno-error=
__builtin_rvv_vlsseg4e16_v_tu
TypedefNameDecl
__builtin_rvv_vlsseg4e16_v_tamu
xmm0
-Wdeprecated-objc-isa-usage
__builtin_rvv_vlsseg5e16_v_tuma
~{dirflag},~{fpsr},~{flags}
TypeAliasDecl
avx512
-mwindows
-Werror=deprecated-objc-isa-usage
no-mmx
__builtin_rvv_vlsseg6e16_v_tamu
avx512f
UnresolvedUsingTypenameDecl
__Ananas__
__builtin_rvv_vlsseg7e16_v_tuma
.text.startup
-Werror=implicit-function-declaration
linux
__builtin_rvv_vlsseg8e16_v_tu
__ANDROID__
Disable implicit builtin knowledge of a specific function
__ANDROID_MIN_SDK_VERSION__
-fno-recovery-ast
__ANDROID_API__
-fptrauth-objc-isa-mode=sign-and-strip
__gnu_linux__
__builtin_rvv_vlsseg2e32_v_tuma
__FLOAT128__
UsingShadowDecl
__mcount
__builtin_rvv_vlsseg3e32_v_tu
__NetBSD__
__unix__
__builtin_rvv_vlsseg3e32_v_tamu
__OpenBSD__
ValueDecl
__FreeBSD_kernel__
-mx87
__GLIBC__
-force_load
__minix
__builtin_rvv_vlsseg5e32_v_tu
_EM_WSIZE
DeclaratorDecl
_EM_PSIZE
__builtin_rvv_vlsseg5e32_v_tamu
_EM_SSIZE
libarclite_
_EM_LSIZE
__builtin_rvv_vluxseg2ei8_v_tuma
_EM_FSIZE
ObjCAtDefsFieldDecl
_EM_DSIZE
Enable stack protectors for all functions
e-m:x-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:32-n8:16:32-a:0:32-S32
watchsimulator
_X86_
__builtin_rvv_vlsseg6e32_v_tamu
__CYGWIN__
FunctionDecl
__CYGWIN32__
__builtin_rvv_vlsseg7e32_v_tuma
e-m:x
appletvsimulator
e-m:e
__builtin_rvv_vlsseg8e32_v_tu
-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-
CXXMethodDecl
f80:128
-mxop
f80:32
appletvos
-n8:16:32-a:0:32-S32
__builtin_rvv_vlsseg2e64_v_tuma
_M_IX86
CXXConversionDecl
__builtin_rvv_vlsseg3e64_v_tu
__HAIKU__
iphonesimulator
__INTEL__
__builtin_rvv_vlsseg3e64_v_tamu
__rtems__
MSPropertyDecl
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:32-f64:32-f128:32-n8:16:32-a:0:32-S32
-fno-recursive
__iamcu
iphoneos
__iamcu__
__builtin_rvv_vlsseg5e64_v_tu
__GNU__
VarDecl
__gnu_hurd__
__builtin_rvv_vlsseg5e64_v_tamu
__MACH__
libclang_rt.
e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128
__builtin_rvv_vlsseg6e64_v_tuma
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128
ImplicitParamDecl
e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128
-mxsaveopt
e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128
_dynamic.dylib
cx16
__builtin_rvv_vlsseg7e64_v_tamu
ParmVarDecl
__x86_64__
__builtin_rvv_vlsseg8e64_v_tuma
__CYGWIN64__
macho_embedded
_M_X64
__builtin_rvv_vle8ff_v_tu
_M_AMD64
VarTemplatePartialSpecializationDecl
.mcount
Enable stack protectors for some functions vulnerable to stack smashing. Compared to -fstack-protector, this uses a stronger heuristic that includes functions containing arrays of any size (and any type), as well as any calls to alloca or the taking of an address from a local variable
__FreeBSD__
-rpath
__FreeBSD_cc_version
__builtin_rvv_vluxseg3ei8_v_tu
900001
IndirectFieldDecl
__KPRINTF_ATTRIBUTE__
__builtin_rvv_vluxseg3ei8_v_tamu
__SCE__
@executable_path
__ORBIS__
__builtin_rvv_vluxseg4ei8_v_tuma
__PROSPERO__
OMPDeclareMapperDecl
e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024
-mxsave
e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024
MacOSX
e-m:e-p:32:32-p10:8:8-p20:8:8-i64:64-f128:64-n32:64-S128-ni:1:10:20
__builtin_rvv_vluxseg5ei8_v_tamu
e-m:e-p:32:32-p10:8:8-p20:8:8-i64:64-n32:64-S128-ni:1:10:20
TemplateParamObjectDecl
__wasi__
__builtin_rvv_vluxseg6ei8_v_tuma
e-m:e-p:64:64-p10:8:8-p20:8:8-i64:64-f128:64-n32:64-S128-ni:1:10:20
iPhone
e-m:e-p:64:64-p10:8:8-p20:8:8-i64:64-n32:64-S128-ni:1:10:20
-fmax-errors=
e-m:e-p:32:32-i1:32-i8:8-i16:16-i32:32-i64:64-f16:16-f32:32-f64:64-n8:16:32:64
-fno-builtin
e-m:e-S32-p:32:32-i32:32:32-i64:32:32-f32:32:32-f64:32:32-v64:32:32-v128:32:32-a:0:32-Fi32-n32
-fno-reformat
abiv2
AppleTV
__STDC_MB_MIGHT_NEQ_WC__
__builtin_rvv_vluxseg8ei8_v_tuma
__Fuchsia__
OMPRequiresDecl
__Fuchsia_API_level__
__builtin_rvv_vluxseg2ei16_v_tu
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-n8:16:32-S128
Watch
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-n8:16:32:64-S128
__builtin_rvv_vluxseg2ei16_v_tamu
e-p:32:32-i64:64
ObjCPropertyImplDecl
__native_client__
~{$1}
DriverKit
cnmips
__builtin_rvv_vluxseg4ei16_v_tu
cnmipsp
PragmaDetectMismatchDecl
+dsp
__builtin_rvv_vluxseg4ei16_v_tamu
m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64
Bridge
m:e-p:32:32-i8:8:32-i16:16:32-i64:64-n32:64-S128
__builtin_rvv_vluxseg5ei16_v_tuma
m:e-i8:8:32-i16:16:32-i64:64-n32:64-S128
StaticAssertDecl
Enable stack protectors for some functions vulnerable to stack smashing. This uses a loose heuristic which considers functions vulnerable if they contain a char (or 8bit integer) array or constant sized calls to alloca , which are of greater size than ssp-buffer-size (default: 8 bytes). All variable sized calls to alloca are considered vulnerable. A function with a stack protector has a guard value added to the stack frame that is checked on function exit. The guard value must be positioned in the stack frame such that a buffer overflow from a vulnerable variable will overwrite the guard value before overwriting the function's return address. The reference stack guard value is stored in a global variable.
__builtin_rvv_vluxseg6ei16_v_tamu
Stmt
__builtin_rvv_vluxseg7ei16_v_tuma
SepOS
__builtin_rvv_vluxseg8ei16_v_tu
GCCAsmStmt
-new-struct-path-tbaa
iossim
__builtin_rvv_vluxseg2ei32_v_tuma
BreakStmt
__builtin_rvv_vluxseg3ei32_v_tu
tvossim
__builtin_rvv_vluxseg3ei32_v_tamu
CXXForRangeStmt
Dump the cooked character stream in -E mode
watchossim
__builtin_rvv_vluxseg5ei32_v_tu
CapturedStmt
__builtin_rvv_vluxseg5ei32_v_tamu
xros
__builtin_rvv_vluxseg6ei32_v_tuma
ContinueStmt
-no-canonical-prefixes
xrossim
__builtin_rvv_vluxseg7ei32_v_tamu
CoroutineBodyStmt
__builtin_rvv_vluxseg8ei32_v_tuma
___gcov_dump
__builtin_rvv_vluxseg2ei64_v_tu
DoStmt
Emit section containing metadata on function stack sizes
___gcov_reset
__builtin_rvv_vluxseg3ei64_v_tuma
GotoStmt
__builtin_rvv_vluxseg4ei64_v_tu
_writeout_fn_list
__builtin_rvv_vluxseg4ei64_v_tamu
IndirectGotoStmt
-no-clear-ast-before-backend
_reset_fn_list
__builtin_rvv_vluxseg6ei64_v_tu
NullStmt
$f10
__builtin_rvv_vluxseg6ei64_v_tamu
$f11
___llvm_profile_filename
$f12
__builtin_rvv_vluxseg7ei64_v_tuma
$f13
Disable implicit builtin knowledge of functions
$f14
-fno-register-global-dtors-with-atexit
$f15
___llvm_profile_raw_version
$f16
__builtin_rvv_vluxseg8ei64_v_tamu
$f17
OMPBarrierDirective
$f18
__builtin_rvv_vlse8_v_tu
$f19
ubsan
$f20
__builtin_rvv_vlse8_v_tamu
$f21
OMPCancellationPointDirective
$f22
-no-code-completion-globals
$f23
xray
$f24
__builtin_rvv_vnot_v_tu
$f25
OMPDepobjDirective
$f26
__builtin_rvv_vnot_v_tamu
$f27
xray-basic
$f28
__builtin_rvv_vfneg_v_tumu
$f29
OMPFlushDirective
$f30
Emit .su file containing information on function stack sizes
$f31
xray-fdr
$fcc0
__builtin_rvv_vwcvtu_x_x_v_tama
$fcc1
OMPLoopBasedDirective
$fcc2
__builtin_rvv_vle16_v_tumu
$fcc3
-lSystem
$fcc4
__builtin_rvv_vle32_v_ta
$fcc5
OMPDistributeDirective
$fcc6
-no-code-completion-ns-level-decls
$fcc7
-lgcc_s.1
$ac1hi
__builtin_rvv_vle64_v_tumu
$ac1lo
OMPDistributeParallelForSimdDirective
$ac2hi
__builtin_rvv_vse16_v
$ac2lo
/XcodeDefault.xctoolchain/usr/include
$ac3hi
__builtin_rvv_vse64_v
$ac3lo
OMPForDirective
Don't use atexit or __cxa_atexit to register global destructors
backward
__builtin_rvv_vcpop_m
OMPGenericLoopDirective
__builtin_rvv_vfclass_v_tumu
ignoring nonexistent directory "
__builtin_rvv_vfcvt_f_x_v_ta
OMPMaskedTaskLoopSimdDirective
-no-cpp-precomp
4.2.1
$w10
__builtin_rvv_vfcvt_f_xu_v_tumu
$w11
OMPMasterTaskLoopSimdDirective
$w12
__builtin_rvv_vfcvt_rtz_x_f_v_ta
$w13
powerpc-apple-darwin10
$w14
__builtin_rvv_vfcvt_rtz_x_f_v_tama
$w15
OMPParallelForSimdDirective
$w16
Emit full debug info for all types used by the program
$w17
4.0.0
$w18
__builtin_rvv_vfcvt_x_f_v_ta
$w19
OMPParallelMaskedTaskLoopDirective
$w20
__builtin_rvv_vfcvt_x_f_v_tama
$w21
i686-apple-darwin10
$w22
__builtin_rvv_vfcvt_xu_f_v_tumu
$w23
OMPParallelMasterTaskLoopDirective
$w24
--no-cuda-include-ptx=
$w25
i686-apple-darwin8
$w26
__builtin_rvv_vfncvt_f_f_w_tumu
$w27
OMPSimdDirective
$w28
__builtin_rvv_vfncvt_f_x_w_ta
$w29
arm-apple-darwin10
$w30
-finit-local-zero
$w31
-fno-c++-static-destructors
$msair
-fno-regs-graph
$msacsr
$msaaccess
__builtin_rvv_vfncvt_rod_f_f_w_ta
$msasave
OMPTargetTeamsDistributeDirective
$msamodify
__builtin_rvv_vfncvt_rod_f_f_w_tama
$msarequest
$msamap
__builtin_rvv_vfncvt_rtz_x_f_w_tumu
$msaunmap
OMPTargetTeamsDistributeParallelForSimdDirective
--no-cuda-noopt-device-debug
arm64-apple-darwin10
__builtin_rvv_vfncvt_rtz_xu_f_w_tama
OMPTargetTeamsGenericLoopDirective
__builtin_rvv_vfncvt_x_f_w_tumu
iOS 7
__builtin_rvv_vfncvt_xu_f_w_ta
OMPTaskLoopSimdDirective
-fstrict-aliasing
OS X 10.9
__builtin_rvv_vfrec7_v_tumu
OMPTeamsDistributeParallelForDirective
__builtin_rvv_vfrsqrt7_v_ta
libstdc++.dylib
__builtin_rvv_vfrsqrt7_v_tama
OMPTeamsDistributeSimdDirective
Don't error out if the detected version of the CUDA install is too low for the requested CUDA gpu architecture.
libstdc++.6.dylib
__builtin_rvv_vfwcvt_f_f_v_ta
OMPLoopTransformationDirective
__builtin_rvv_vfwcvt_f_f_v_tama
/usr/lib/libstdc++.dylib
__builtin_rvv_vfwcvt_f_x_v_tumu
OMPUnrollDirective
-fno-relaxed-template-template-args
/usr/lib/libstdc++.6.dylib
__builtin_rvv_vfwcvt_f_xu_v_tama
OMPMasterDirective
__builtin_rvv_vfwcvt_rtz_x_f_v_tumu
libclang_rt.cc_kext_watchos.a
__builtin_rvv_vfwcvt_rtz_xu_f_v_ta
OMPOrderedDirective
E-m:e-p:32:32-i64:64-n32:64
Disable loading default configuration files
__PPC__
libclang_rt.cc_kext_tvos.a
__PPU__
__builtin_rvv_vfwcvt_x_f_v_tumu
__CELLOS_LV2__
OMPParallelMaskedDirective
__LP32__
__builtin_rvv_vfwcvt_xu_f_v_ta
_ARCH_PPC64
libclang_rt.cc_kext_bridgeos.a
__powerpc64__
__builtin_rvv_vfwcvt_xu_f_v_tama
OMPParallelSectionsDirective
__svr4__
Enable optimizations based on the strict definition of an enum's value range
__SVR4
libclang_rt.cc_kext_ios.a
__builtin_rvv_vmnand_mm
__C99FEATURES__
OMPSectionDirective
_LARGEFILE_SOURCE
__builtin_rvv_vmsbf_m
__EXTENSIONS__
libclang_rt.cc_kext_
__builtin_rvv_vmset_m
OMPSingleDirective
transactional-execution
Don't preserve order of LLVM use-lists when serializing
vector-enhancements-1
libclang_rt.cc_kext.a
vector-enhancements-2
__builtin_rvv_vmsof_m_mu
nnp-assist
OMPTargetDirective
_OPEN_DEFAULT
__builtin_rvv_vsetvli
_UNIX03_WITHDRAWN
pentium2
__370__
__builtin_rvv_vsext_vf2_ta
__BFP__
Disable C++ static destructor registration
__BOOL__
-fno-rename-registers
__LONGNAME__
pentiumpro
__MVS__
__builtin_rvv_vsext_vf4_tumu
__THW_370__
OMPTargetParallelForDirective
__TOS_390__
__builtin_rvv_vsext_vf8_ta
__TOS_MVS__
armv5tej
__XPLINK__
__builtin_rvv_vsext_vf8_tama
__DLL__
OMPTargetUpdateDirective
_MI_BUILTIN
Disable analyzing function argument and return types for mandatory definedness
_EXT
armv6k
__DragonFly__
__builtin_rvv_vzext_vf2_tama
__DragonFly_cc_version
OMPTaskgroupDirective
100001
__builtin_rvv_vzext_vf4_tumu
__tune_i386__
armv7a
__EMSCRIPTEN__
__builtin_rvv_vzext_vf8_ta
__EMSCRIPTEN_PTHREADS__
OMPTaskyieldDirective
e-m:e-i64:64-n32:64-S128-v64:64:64-v128:64:64-v256:64:64-v512:64:64-v1024:64:64-v2048:64:64-v4096:64:64-v8192:64:64-v16384:64:64
Enable optimizations based on the strict definition of flexible arrays
_pic
ObjCAtCatchStmt
__builtin_riscv_clz_64
_static
LiLiLi
ObjCAtSynchronizedStmt
Do not remove finalize method in gc mode
-fno-builtin-malloc
__builtin_riscv_brev8
sx10
ObjCAtTryStmt
sx11
zbkb,32bit
sx12
-darwin-target-variant-sdk-version=
sx13
zknd,32bit
sx14
ObjCForCollectionStmt
sx15
-fno-reorder-blocks
sx16
-fdepfile-entry=
sx17
zknd|zkne,64bit
sx18
SEHExceptStmt
sx19
__builtin_riscv_aes32esmi_32
sx20
RC_DEBUG_OPTIONS
sx21
__builtin_riscv_sha256sig0
sx22
SEHLeaveStmt
sx23
Do not bundle output files of HIP device compilation
sx24
RC_DEBUG_PREFIX_MAP
sx25
__builtin_riscv_sha512sig0l_32
sx26
SwitchCase
sx27
__builtin_riscv_sha512sum1r_32
sx28
-watchos_version_min
sx29
Dump symbols and their source code locations
sx30
-fmax-stack-var-size=
sx31
-fgcse-after-reload
sx32
-watchos_simulator_version_min
sx33
-fno-repack-arrays
SPIR
SPIR32
sx35
SPIRV
sx36
AttributedStmt
sx38
Expr
sx39
sx40
-tvos_simulator_version_min
sx41
sx42
BinaryConditionalOperator
sx43
sx44
-bridgeos_version_min
sx45
sx46
AddrLabelExpr
sx47
-no-implicit-float
sx48
-driverkit_version_min
sx49
sx50
ArrayInitLoopExpr
sx51
sx52
-ios_simulator_version_min
sx53
sx54
ArrayTypeTraitExpr
sx55
-no-implicit-sme
sx56
-iphoneos_version_min
sx57
__sparc_v8__
sx58
AssumptionExpr
sx59
__ma2155
sx60
-maccatalyst_version_min
sx61
__ma2085
sx62
BinaryOperator
sx63
Assume that overflowing float-to-int casts are undefined (default)
-macosx_version_min
__myriad2
BlockExpr
__sparcv9__
-lcrt0.o
f934
outer
CXXBindTemporaryExpr
-no-integrated-as
crt3.o
niagara
CXXConstructExpr
ma2100
tsan_tvos_dynamic
info
ma2455
CXXDefaultArgExpr
-fno-reroll-loops
tsan_ios_dynamic
myriad2.1
CXXDeleteExpr
-fmax-subrecord-length=
-lto-pass-remarks-output
-fno-rewrite-imports
CXXFoldExpr
CXXInheritedCtorInitExpr
__builtin_tx_assist
CXXNewExpr
UivC*Ii
-lto-pass-remarks-filter=
V16ScUivC*
CXXNullPtrLiteralExpr
-no-ns-alloc-error
-lto-pass-remarks-format=
V16ScV8SsV8Ssi*
CXXRewrittenBinaryOperator
__builtin_s390_vpksg
-lto-pass-remarks-with-hotness
__builtin_s390_vpklshs
CXXStdInitializerListExpr
Do not error on use of NSAllocateCollectable/NSReallocateCollectable
-lto-pass-remarks-hotness-threshold=
__builtin_s390_vuphb
CXXThrowExpr
__builtin_s390_vuplb
libsystem_pthread
V8UsV16Uc
CXXUnresolvedConstructExpr
-fstrict-vtable-pointers
libsystem_kernel
__builtin_s390_vaq
CallExpr
__builtin_s390_vaccf
libkxld
__builtin_s390_vavgb
CXXMemberCallExpr
Remove CUDA/HIP offloading device architecture (e.g. sm_35, gfx906) from the list of devices to compile for. 'all' resets the list to its default value.
libsystem_platform
__builtin_s390_vceqbs
UserDefinedLiteral
__builtin_s390_vceqfs
-cpp-output
darwin::Lipo
ObjC migration
__builtin_s390_vchbs
ARC migration
ExplicitCastExpr
-emit-module
Enable optimizations based on the strict rules for overwriting polymorphic C++ objects
-fsystem-module
darwin::Dsymutil
Must specify a valid interface stub format type, ie: -interface-stub-version=ifs-v1
__builtin_s390_vchlfs
 is deprecated.
CStyleCastExpr
Invalid interface stub format: 
__builtin_s390_vcksm
ifs-v1
darwin::VerifyDebug
alpha.webkit
__builtin_s390_vclzg
CXXNamedCastExpr
valist
Don't Use the new driver for offloading compilation.
alpha.osx
darwin::Linker
alpha.llvm
__builtin_s390_verimf
core.builtin
CXXConstCastExpr
alpha.osx.cocoa.localizability
__builtin_s390_verllh
optin.performance
darwin::StaticLibTool
deadcode
__builtin_s390_verllg
optin.osx.cocoa
CXXReinterpretCastExpr
optin.cplusplus
-fno-rewrite-includes
alpha.nondeterminism
static-lib-linker
alpha.security.cert.env
__builtin_s390_vgfmf
alpha.deadcode
ObjCBridgedCastExpr
alpha.fuchsia
V8UsV16UcV16UcV8Us
alpha.security.cert.pos
darwin::Assembler
optin
__builtin_s390_vgfmag
core
CharacterLiteral
apiModeling
Disable opaque pointers
osx.coreFoundation
Toolchains/XcodeDefault.xctoolchain/usr
unix
__builtin_s390_vmaeb
alpha.apiModeling
CompoundLiteralExpr
security.insecureAPI
V2SLLiV4SiV4SiV2SLLi
optin.mpi
.app/Contents/Developer
alpha.core
__builtin_s390_vmaob
alpha.unix
ConvertVectorExpr
security
-fsuppress-conflicting-types
alpha.security
-exported_symbols_list
optin.osx
__builtin_s390_vmhf
optin.osx.cocoa.localizability
CoawaitExpr
osx.cocoa
__builtin_s390_vmeb
osx.coreFoundation.containers
-exported_symbol
cplusplus
__builtin_s390_vmleh
alpha.security.cert
DeclRefExpr
alpha.osx.cocoa
-no-pie
alpha.cplusplus
-sectalign
alpha.security.taint
__builtin_s390_vpopctb
webkit
DependentScopeDeclRefExpr
apiModeling.google
__builtin_s390_vsq
apiModeling.llvm
0x4000
core.uninitialized
__builtin_s390_vscbih
unix.cstring
-fno-caller-saves
optin.portability
-fno-ripa
nullability
WatchOS
debug
__builtin_s390_vsrab
alpha
ExtVectorElementExpr
alpha.clone
V4UiV16UcV16Uc
alpha.unix.cstring
BridgeOS
security.insecureAPI.vfork
__builtin_s390_vsumgf
security.insecureAPI.strcpy
FixedPointLiteral
security.insecureAPI.rand
-no-round-trip-args
security.insecureAPI.mktemp
-platform_version
security.insecureAPI.mkstemp
V16UcV16UcV16UcIii*
security.insecureAPI.gets
ForgePtrExpr
security.insecureAPI.getpw
V8UsV8UsV8UsIii*
security.insecureAPI.decodeValueOfObjCType
-simulator
security.insecureAPI.bzero
V4UiV4UiV4UiIii*
security.insecureAPI.bcopy
ConstantExpr
security.insecureAPI.bcmp
-fswift-async-fp=
cplusplus.VirtualCallModeling
mac catalyst
optin.cplusplus.VirtualCall
__builtin_s390_vfeebs
unix.Vfork
FunctionParmPackExpr
osx.cocoa.VariadicMethodTypes
V8UsV8UsV8Usi*
valist.ValistBase
-ldylib1.o
core.VLASize
__builtin_s390_vfeezb
valist.Unterminated
GenericSelectionExpr
alpha.deadcode.UnreachableCode
--no-standard-includes
optin.portability.UnixAPI
-ldylib1.10.5.o
unix.API
__builtin_s390_vfeneh
optin.cplusplus.UninitializedObject
ImaginaryLiteral
valist.Uninitialized
__builtin_s390_vfenezb
core.uninitialized.NewArraySize
-lbundle1.o
core.uninitialized.Assign
__builtin_s390_vfenezf
core.uninitialized.ArraySubscript
InitListExpr
core.UndefinedBinaryOperatorResult
-fno-ropi
core.uninitialized.CapturedBlockVariable
-lgcrt0.o
core.uninitialized.Branch
__builtin_s390_vistrf
alpha.webkit.UncountedLocalVarsChecker
LambdaExpr
webkit.UncountedLambdaCapturesChecker
__builtin_s390_vstrcbs
alpha.webkit.UncountedCallArgsChecker
-lgcrt1.o
security.insecureAPI.UncheckedReturn
V8UsV8UsV8UsV8UsIii*
apiModeling.TrustReturnsNonnull
MSPropertySubscriptExpr
apiModeling.TrustNonnull
-no-struct-path-tbaa
debug.DumpTraversal
-no_new_main
alpha.core.TestAfterDivZero
__builtin_s390_vstrczf
debug.TaintTest
MaterializeTemporaryExpr
cplusplus.StringChecker
__builtin_s390_vfchdbs
debug.StreamTester
-lcrt1.o
alpha.unix.Stream
__builtin_s390_vflndb
debug.StdCLibraryFunctionsTester
MemberExpr
apiModeling.StdCLibraryFunctions
auto,always,never
alpha.unix.StdCLibraryFunctionArgs
-lcrt1.3.1.o
core.StackAddressEscape
__builtin_s390_vstrl
core.StackAddrEscapeBase
OMPArraySectionExpr
alpha.core.StackAddressAsyncEscape
__builtin_s390_vfmaxdb
cplusplus.SmartPtrModeling
-lcrt1.10.5.o
alpha.cplusplus.SmartPtr
__builtin_s390_vfnmsdb
alpha.core.SizeofPtr
OMPIteratorExpr
alpha.unix.SimpleStream
--no-system-header-prefix=
security.insecureAPI.SecuritySyntaxChecker
-lcrt1.10.6.o
alpha.cplusplus.STLAlgorithmModeling
V4fV4fV4fIi
osx.cocoa.RunLoopAutoreleaseLeak
ObjCBoolLiteralExpr
apiModeling.llvm.ReturnValue
__builtin_s390_vfmasb
core.uninitialized.UndefReturn
/usr/libexec/ld-elf.so.2
alpha.security.ReturnPtrRange
__builtin_s390_vfsqsb
osx.cocoa.RetainCount
-fno-caret-diagnostics
osx.cocoa.RetainCountBase
-fno-rounding-math
debug.ReportStmts
--hash-style=gnu
webkit.RefCntblBaseVirtualDtor
V16UcV8UsV8UsV16Uci*
alpha.security.cert.pos.34c
ObjCIvarRefExpr
cplusplus.PureVirtualCall
__builtin_s390_vstrszh
alpha.unix.PthreadLock
--enable-new-dtags
alpha.core.PthreadLockBase
__builtin_s390_vlbrg
debug.DumpPostDominators
ObjCObjectLiteral
alpha.core.PointerSub
--no-system-header-prefix
alpha.nondeterminism.PointerSorting
elf_i386
alpha.nondeterminism.PointerIteration
systemz
alpha.core.PointerArithm
ObjCBoxedExpr
alpha.osx.cocoa.localizability.PluralMisuseChecker
arch11
cplusplus.PlacementNew
gcrt1.o
optin.performance.Padding
__s390__
osx.cocoa.UnusedIvars
ObjCStringLiteral
osx.cocoa.SuperDealloc
-fglobal-isel
osx.cocoa.MissingSuperCall
Scrt1.o
osx.cocoa.SelfInit
-fgpu-inline-threshold=
osx.ObjCProperty
--no-warnings
osx.cocoa.NonNilReturnValue
crt1.o
__TCE__
osx.cocoa.Loops
-L/usr/lib/gcc80
osx.cocoa.ObjCGenerics
ObjCSubscriptRefExpr
__builtin_ve_vl_pack_f32p
ULifC*fC*
osx.coreFoundation.containers.OutOfBounds
OffsetOfExpr
osx.coreFoundation.containers.PointerSizedValues
V256bV512b
osx.cocoa.AtSync
OpaqueValueExpr
osx.OSObjectRetainCount
__builtin_ve_vl_insert_vm512l
optin.osx.OSObjectCStyleCast
/usr/lib/gcc80
osx.NumberObjectConversion
V256dLUivC*V256dUi
nullability.NullableReturnedFromNonnull
UnresolvedLookupExpr
nullability.NullablePassedToNonnull
-no_dead_strip_inits_and_terms
nullability.NullableDereferenced
-lpthread
nullability.NullabilityBase
__builtin_ve_vl_vldlsx_vssvl
nullability.NullReturnedFromNonnull
PackExpansionExpr
nullability.NullPassedToNonnull
__builtin_ve_vl_vldlzx_vssvl
core.NonnilStringConstants
-lgcc_pic
core.NonNullParamChecker
__builtin_ve_vl_vld2d_vssvl
optin.osx.cocoa.localizability.NonLocalizedStringChecker
ParenListExpr
webkit.NoUncountedMemberChecker
-nobuiltininc
core.builtin.NoReturnFunctions
--as-needed
osx.cocoa.NilArg
__builtin_ve_vl_vldl2dsx_vssvl
cplusplus.NewDeleteLeaks
PredefinedExpr
cplusplus.NewDelete
__builtin_ve_vl_vldl2dzx_vssvl
osx.NSOrCFErrorDerefChecker
--no-as-needed
osx.cocoa.NSError
vV256dLUiv*Ui
osx.cocoa.NSAutoreleasePool
RecoveryExpr
cplusplus.Move
SYCL host compilation
alpha.security.MmapWriteExec
dragonfly::Assembler
alpha.osx.cocoa.MissingInvalidationMethod
__builtin_ve_vl_vstncot_vssml
alpha.cplusplus.MismatchedIterator
SYCLUniqueStableNameExpr
unix.MismatchedDeallocator
__builtin_ve_vl_vstunc_vssml
unix.MallocSizeof
dragonfly::Linker
alpha.security.MallocOverflow
__builtin_ve_vl_vstuncot_vssml
unix.Malloc
SizeOfPackExpr
osx.API
-nocpp
osx.SecKeychainAPI
-fc1
optin.mpi.MPI-Checker
__builtin_ve_vl_vstlncot_vssml
osx.MIG
StmtExpr
debug.DumpLiveVars
__builtin_ve_vl_vst2dnc_vssml
debug.DumpLiveExprs
-emit-ast
alpha.llvm.Conventions
__builtin_ve_vl_vst2dncot_vssml
alpha.osx.cocoa.IvarInvalidationModeling
SubstNonTypeTemplateParmExpr
alpha.cplusplus.IteratorRange
Do not add -rpath with architecture-specific resource directory to the linker flags
alpha.cplusplus.IteratorModeling
flang-new
alpha.cplusplus.InvalidatedIterator
__builtin_ve_vl_vstu2dncot_vssml
alpha.security.cert.env.InvalidPtr
TerminatedByFromIndexableExpr
alpha.osx.cocoa.InstanceVariableInvalidation
__builtin_ve_vl_vstl2dnc_vssml
cplusplus.InnerPointer
flang frontend
alpha.core.IdenticalExpr
__builtin_ve_vl_vstl2dncot_vssml
alpha.security.taint.TaintPropagation
TypeTraitExpr
apiModeling.google.GTest
-nocudainc
optin.performance.GCDAntipattern
-mabi
alpha.fuchsia.Lock
__builtin_ve_vl_lvsd_svs
fuchsia.HandleChecker
UnaryExprOrTypeTraitExpr
security.FloatLoopCounter
__builtin_ve_vl_lvm_mmss
alpha.core.FixedAddr
debug.ExprInspection
__builtin_ve_vl_svm_sms
debug.ViewExplodedGraph
VAArgExpr
debug.ErrnoTest
Enables SYCL kernels compilation for device
apiModeling.Errno
alpha.unix.Errno
__builtin_ve_vl_vbrdd_vsmvl
alpha.cplusplus.EnumCastOutOfRange
WhileStmt
optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
__builtin_ve_vl_vbrdl_vsvl
core.DynamicTypePropagation
alpha.core.DynamicTypeChecker
__builtin_ve_vl_vbrds_vsl
unix.DynamicMemoryModeling
AdjustedType
debug.DumpDominators
-nodefaultlibs
core.DivideZero
-mfpu=vfp
alpha.osx.cocoa.DirectIvarAssignment
__builtin_ve_vl_vbrdw_vsvl
core.NullDereference
ArrayType
security.insecureAPI.DeprecatedOrUnsafeBufferHandling
__builtin_ve_vl_pvbrd_vsl
alpha.cplusplus.DeleteWithNonVirtualDtor
-mfpu=softvfp
debug.DebugIteratorModeling
__builtin_ve_vl_pvbrd_vsMvl
debug.DebugContainerModeling
DependentSizedArrayType
deadcode.DeadStores
-fno-rtti-data
valist.CopyToSelf
-meabi=5
alpha.core.Conversion
__builtin_ve_vl_vaddul_vvvl
debug.DumpControlDependencies
VariableArrayType
alpha.cplusplus.ContainerModeling
__builtin_ve_vl_vaddul_vsvl
debug.ConfigDumper
-matpcs
alpha.clone.CloneChecker
V256dV256dV256dV256bV256dUi
osx.cocoa.ClassRelease
AttributedType
alpha.unix.Chroot
-nofixprebinding
apiModeling.llvm.CastValue
--debug-prefix-map
alpha.core.CastToStruct
__builtin_ve_vl_vadduw_vsvmvl
alpha.core.CastSize
BitIntType
debug.ViewCallGraph
__builtin_ve_vl_pvaddu_vsvvl
debug.DumpCallGraph
/libexec/ld-elf.so.1
debug.DumpCalls
V256dLUiV256dV512bV256dUi
core.CallAndMessageModeling
BuiltinType
core.CallAndMessage
-fsyntax-only
cplusplus.SelfAssignment
--hash-style=both
alpha.unix.cstring.UninitializedRead
V256diV256dV256bV256dUi
unix.cstring.BadSizeArg
DecltypeType
alpha.unix.cstring.OutOfBounds
__builtin_ve_vl_vaddswzx_vsvvl
unix.cstring.NullArg
elf_i386_fbsd
alpha.unix.cstring.NotNullTerminated
__builtin_ve_vl_pvadds_vvvvl
unix.cstring.CStringModeling
AutoType
alpha.unix.cstring.BufferOverlap
Do not add include paths for CUDA/HIP and do not include the default CUDA/HIP wrapper headers
osx.coreFoundation.CFRetainRelease
elf32ppc_fbsd
osx.coreFoundation.CFNumber
__builtin_ve_vl_vaddsl_vsvvl
debug.ViewCFG
DependentAddressSpaceType
debug.DumpCFG
V256dLiV256dV256bV256dUi
osx.coreFoundation.CFError
elf32lppc
alpha.core.C11Lock
__builtin_ve_vl_vsubul_vsvvl
core.builtin.BuiltinFunctions
Disable C++ builtin type char8_t
alpha.core.BoolAssignment
Disable generation of RTTI data
alpha.unix.BlockInCriticalSection
elf32btsmip_fbsd
osx.cocoa.AutoreleaseWrite
__builtin_ve_vl_vsubuw_vsvmvl
alpha.security.ArrayBoundV2
DependentTemplateSpecializationType
alpha.security.ArrayBound
__builtin_ve_vl_pvsubu_vsvvl
debug.Stats
elf32ltsmip_fbsd
debug.AnalysisOrder
__builtin_ve_vl_vsubswsx_vvvvl
an unsigned
DynamicBoundPointerType
a boolean
Do not link device library for CUDA/HIP device compilation
a filename
elf32btsmipn32_fbsd
'track-conditions' to also be enabled
__builtin_ve_vl_vsubswzx_vsvvl
DynamicRangePointerType
dynamic-bifurcate
__builtin_ve_vl_pvsubs_vvvvl
inlining
elf64btsmip_fbsd
unexplored_first_queue
__builtin_ve_vl_pvsubs_vsvMvl
destructors
FunctionType
invocations.yaml
-fsystem-module
externalDefMap.txt
elf32ltsmipn32_fbsd
small
__builtin_ve_vl_vmulul_vvvvl
deep
FunctionProtoType
block
__builtin_ve_vl_vmulul_vsvmvl
statement
elf64ltsmip_fbsd
text-minimal
__builtin_ve_vl_vmuluw_vsvvl
text
MacroQualifiedType
sarif-html
Do not include the default HIP wrapper headers and include paths
plist-html
elf32lriscv
plist-multi-file
__builtin_ve_vl_vmulswsx_vsvmvl
plist
ConstantMatrixType
html-single-file
__builtin_ve_vl_vmulswzx_vsvvl
elf64lriscv
range
__builtin_ve_vl_vmulsl_vvvvl
HLSL
MemberPointerType
LLVM IR
-fno-rtti
crtbeginT.o
__builtin_ve_vl_vmulslw_vsvvl
RenderScript
ObjCObjectType
CUDA
__builtin_ve_vl_vdivul_vsvvl
C++ for OpenCL
-lm_p
OpenCL
__builtin_ve_vl_vdivuw_vvvvl
Objective-C++
ObjCTypeParamType
/nologo
Objective-C
-lgcc_p
V256dV256dLUiV256dUi
microsoft
ParenType
fuchsia
V256dV256dUiUi
webassembly
-lgcc_eh_p
mips
V256dV256dUiV256bV256dUi
aarch64
PointerType
applearm64
itanium
-lpthread_p
-fsuppress-conflicting-types
__builtin_ve_vl_vdivswzx_vvvvl
-fcuda-approx-transcendentals
LValueReferenceType
-sycl-std=
__builtin_ve_vl_vdivswzx_vsvmvl
-fsycl-is-host
-lc_p
-fsycl-is-device
V256dV256diV256dUi
-fno-cuda-host-device-constexpr
SubstTemplateTypeParmPackType
-fcuda-is-device
-nopie
-fexperimental-max-bitint-width=
/usr/lib32/crt1.o
-fcompatibility-qualified-id-block-type-checking
__builtin_ve_vl_vdivsl_vsvl
-fwchar-type=
TagType
-fdefault-calling-conv=
__builtin_ve_vl_vdivsl_vvsl
-fnative-half-arguments-and-returns
/usr/lib32
-fnative-half-type
Max total number of preprocessed tokens for -Wmax-tokens.
-vtordisp-mode=
-fno-check-array-temporaries
-fdeprecated-macro
Disable generation of rtti information
-fdebugger-objc-literal
/usr/include/c++/4.2
-fdebugger-cast-result-to-id
__builtin_ve_vl_vcmpuw_vvvl
-fdebugger-support
TemplateTypeParmType
-funknown-anytype
__builtin_ve_vl_vcmpuw_vvvmvl
-faddress-space-map-mangling=
-lc++_p
-ffake-address-space-map
__builtin_ve_vl_pvcmpu_vsvl
-fno-bitfield-type-align
TypeOfType
-fconst-strings
-noprofilelib
-fbracket-depth
-lstdc++_p
-fconstexpr-steps
__builtin_ve_vl_vcmpswsx_vvvmvl
-fconstexpr-depth
UnaryTransformType
-ftemplate-depth
__builtin_ve_vl_vcmpswzx_vsvl
-fapply-global-visibility-to-externs
freebsd::Assembler
-ftype-visibility=
__builtin_ve_vl_pvcmps_vvvl
-static-define
UsingType
-fhalf-no-semantic-interposition
-ftabstop
-function-alignment
freebsd::Linker
-fencode-extended-block-signature
__builtin_ve_vl_vcmpsl_vsvl
-disable-objc-default-synthesize-properties
VectorType
-fconstant-string-class
__builtin_ve_vl_vmaxswsx_vvvl
-fno-wchar
-fexternc-nounwind
__builtin_ve_vl_vmaxswsx_vvvmvl
-fblocks-runtime-optional
OMPClause
-pic-level
-nostartfiles
-faligned-alloc-unavailable
max-page-size=4096
-building-pch-with-obj
__builtin_ve_vl_pvmaxs_vvvl
-fdump-record-layouts
OMPAcquireClause
-fdump-record-layouts-complete
__builtin_ve_vl_pvmaxs_vvvMvl
-fdump-record-layouts-canonical
-fdump-record-layouts-simple
__builtin_ve_vl_vminswsx_vsvl
-fno-recovery-ast-type
OMPAlignClause
-fno-recovery-ast
-fno-rwpi
-fno-odr-hash-methods
rodynamic
-fno-odr-hash-ivars
__builtin_ve_vl_vminswzx_vvvmvl
-fno-odr-hash-properties
OMPAllocateClause
-fno-odr-hash-records
__builtin_ve_vl_pvmins_vsvl
-fno-odr-hash-protocols
separate-loadable-segments
-fno-odr-hash-interfaces
__builtin_ve_vl_vmaxsl_vvvl
-fno-odr-hash-categories
OMPAtomicDefaultMemOrderClause
-fodr-hash-attributes
Disable standard #include directories for the C++ standard library
-fmodules-hash-error-diagnostics
-fno-modules-local-submodule-visibility
__builtin_ve_vl_vminsl_vsvl
-fmodules-local-submodule-visibility
OMPCaptureClause
-fmodule-feature
__builtin_ve_vl_vand_vvvl
-fno-modules-error-recovery
--pack-dyn-relocs=relr
-mbranch-target-enforce
__builtin_ve_vl_vand_vvvmvl
-mabi=ieeelongdouble
OMPCompareClause
-menable-no-infs
-ftarget-variant-availability-checks
-fdump-vtable-layouts
-fpadding-on-unsigned-fixed-point
__builtin_ve_vl_vor_vvvl
-fsemantic-interposition
OMPCopyinClause
-fexperimental-optimized-noescape
__builtin_ve_vl_vor_vvvmvl
-faltivec-src-compat=
-traditional-cpp
__builtin_ve_vl_pvor_vsvl
-pthread
OMPDefaultmapClause
-print-ivar-layout
-nostdlib++
-fzvector
--build-id
-mabi=vec-extabi
__builtin_ve_vl_vxor_vvvmvl
-ffuchsia-api-level=
OMPDepobjClause
-mdarwin-stkchk-strong-link
__builtin_ve_vl_pvxor_vsvl
-malign-double
--execute-only
-mdouble=
__builtin_ve_vl_veqv_vvvl
-mqdsp6-compat
-fno-check-new
-fwritable-strings
-fno-safe-buffer-usage-suggestions
-mdefault-visibility-export-mapping=
--fix-cortex-a53-843419
-fvisibility-global-new-delete-hidden
__builtin_ve_vl_pveqv_vsvl
-fvisibility-inlines-hidden-static-local-var
OMPDistScheduleClause
-fvisibility-externs-nodllstorageclass=
__builtin_ve_vl_vldz_vvl
-fvisibility-externs-dllimport=
asan/
-fvisibility-nodllstorageclass=
V256dV256dV256bV256dUi
-fvisibility-dllexport=
OMPExclusiveClause
-Wlarge-by-value-copy=
-nostdlib
-ftrivial-auto-var-init-skip-non-ptr-array
hwasan/
-ftrivial-auto-var-init-skip-stl
__builtin_ve_vl_pvldz_vvvl
-ftrivial-auto-var-init-skip-non-pod
OMPFinalClause
-ftrivial-auto-var-init-skip-cpp-obj
__builtin_ve_vl_vpcnt_vvvl
-ftrivial-auto-var-zero-init-max-size=
tsan/
-ftrivial-auto-var-init-stop-after=
__builtin_ve_vl_pvpcntlo_vvmvl
-fstack-check
OMPFlushClause
-fno-spell-checking
-ftemplate-backtrace-limit=
-fno-char8_t
ld.so.1
-fchar8_t
__builtin_ve_vl_vbrv_vvvl
-fshort-enums
OMPFullClause
-fno-rtti-data
__builtin_ve_vl_pvbrvlo_vvmvl
-frwpi
--push-state
-fpascal-strings
__builtin_ve_vl_pvbrv_vvl
-fmax-type-align=
OMPHasDeviceAddrClause
--offload-new-driver
Disable standard system #include directories
-fno-openmp-extensions
--pop-state
-fnew-alignment=
__builtin_ve_vl_pvsequp_vl
-fsized-deallocation
OMPIfClause
-frelaxed-template-template-args
__builtin_ve_vl_vsll_vvvl
-fobjc-exceptions
--wrap=pthread_create
-fno-operator-names
__builtin_ve_vl_vsll_vvvmvl
-fno-digraphs
OMPInclusiveClause
-fdigraphs
-fno-sanitize-address-globals-dead-stripping
-fno-knr-functions
noexcept
-fretain-comments-from-system-headers
V256dV256dLUiV512bV256dUi
-fno-implicit-modules
OMPIsDevicePtrClause
-fmodules-search-all
__builtin_ve_vl_vsrl_vvsvl
-fmodules-decluse
+fno-exceptions
-fmodule-name=
__builtin_ve_vl_pvsrl_vvvvl
-fdeclspec
OMPLinearClause
-fms-memptr-rep=
Don't automatically start assembly file with a text section
-fasm-blocks
+fsanitize=address
-fms-extensions
__builtin_ve_vl_vslawsx_vvsvl
-fms-compatibility
OMPMergeableClause
-flax-vector-conversions=
__builtin_ve_vl_vslawzx_vvvvl
-fxray-always-emit-typedevents
asan+noexcept
-fxray-always-emit-customevents
__builtin_ve_vl_vslawzx_vvsmvl
-fxray-attr-list=
OMPNowaitClause
-fxray-never-instrument=
Set the maximum number of entries to print in a template instantiation backtrace (0 = no limit).
-fxray-always-instrument=
+fsanitize=hwaddress
-fxray-instrument
__builtin_ve_vl_vslal_vvvvl
-fexperimental-strict-floating-point
OMPNontemporalClause
-fheinous-gnu-extensions
__builtin_ve_vl_vslal_vvsmvl
-fgnu89-inline
hwasan+noexcept
-fno-gnu-keywords
__builtin_ve_vl_vsrawsx_vvsvl
-fprotect-parens
OMPNumTasksClause
-ffinite-math-only
-fapprox-func
relative-vtables
-fsanitize-address-field-padding=
__builtin_ve_vl_vsrawzx_vvsmvl
-fno-c++-static-destructors
OMPNumThreadsClause
-ffixed-point
__builtin_ve_vl_pvsra_vvsvl
-fextend-arguments=
+fexperimental-relative-c++-abi-vtables
-fmath-errno
-fmax-type-align=
-ffp-exception-behavior=
-fno-color-diagnostics
-fignore-exceptions
Disable linker dead stripping of globals in AddressSanitizer
-exception-model
relative-vtables+noexcept
-femit-all-decls
V256dV256dLUiLUiV256dUi
-fno-elide-constructors
OMPPriorityClause
-fno-dollars-in-identifiers
__builtin_ve_vl_vfaddd_vvvvl
-fcxx-modules
relative-vtables+asan
-fno-cxx-modules
__builtin_ve_vl_vfaddd_vvvmvl
-fcxx-exceptions
OMPProcBindClause
-fexperimental-new-constant-interpreter
-fconstant-double-number-class=
relative-vtables+asan+noexcept
-fconstant-float-number-class=
__builtin_ve_vl_vfadds_vvvmvl
-fconstant-integer-number-class=
OMPReductionClause
-fconstant-dictionary-class=
__builtin_ve_vl_pvfadd_vvvvl
-fconstant-array-class=
relative-vtables+hwasan
-fcf-runtime-abi=
__builtin_ve_vl_pvfadd_vsvMvl
-fcomplete-member-pointers
OMPReleaseClause
-fparse-all-comments
-ftemplate-depth=
-fcomment-block-commands=
relative-vtables+hwasan+noexcept
-fborland-extensions
__builtin_ve_vl_vfsubs_vvvvl
-ftyped-cxx-new-delete
OMPSafelenClause
-ftyped-memory-operations-experimental
__builtin_ve_vl_vfsubs_vsvmvl
-fapinotes-modules
compat
-fno-gnu-inline-asm
__builtin_ve_vl_pvfsub_vsvvl
-fexperimental-library
OMPSeqCstClause
-fcoro-aligned-allocation
-fcoroutines-ts
+fc++-abi=itanium
-fno-double-square-bracket-attributes
__builtin_ve_vl_vfmuld_vsvmvl
-fdouble-square-bracket-attributes
OMPSIMDClause
-fxl-pragma-pack
__builtin_ve_vl_vfmuls_vsvvl
-fapple-pragma-pack
fexceptions
-fstrict-flex-arrays=
__builtin_ve_vl_pvfmul_vvvvl
-fapple-kext
OMPSizesClause
-fallow-editor-placeholders
-fno-sanitize-address-outline-instrumentation
-fno-access-control
fsanitize=address
-fmax-tokens=
__builtin_ve_vl_vfdivd_vsvvl
-cuid=
OMPThreadLimitClause
--gpu-max-threads-per-block=
__builtin_ve_vl_vfdivs_vvvvl
-fgpu-exclude-wrong-side-overloads
fsanitize=hwaddress
-fhip-new-launch-api
__builtin_ve_vl_vfdivs_vsvmvl
-fgpu-default-stream=
OMPToClause
-cl-no-signed-zeros
Disable function inlining
-cl-fast-relaxed-math
fexperimental-relative-c++-abi-vtables
-cl-unsafe-math-optimizations
__builtin_ve_vl_vfcmpd_vsvvl
-cl-finite-math-only
OMPUnifiedSharedMemoryClause
-cl-single-precision-constant
__builtin_ve_vl_vfcmps_vvvvl
fc++-abi=itanium
-verify=
__builtin_ve_vl_vfcmps_vsvmvl
-Wno-rewrite-macros
OMPUpdateClause
-fcaret-diagnostics-max-lines
Maximum depth of recursive template instantiation
-fspell-checking-limit
fuchsia::Linker
-fconstexpr-backtrace-limit
__builtin_ve_vl_vfmaxd_vvvvl
-ferror-limit
OMPUseDeviceAddrClause
-fno-diagnostics-use-presumed-location
__builtin_ve_vl_vfmaxd_vsvmvl
-pedantic-errors
rcsD
-fno-show-source-location
__builtin_ve_vl_vfmaxs_vsvvl
-fshow-overloads=
OMPUsesAllocatorsClause
-fdiagnostics-absolute-paths
Only inline functions explicitly or implicitly marked inline
-fno-elide-type
rcrt1.o
-fsafe-buffer-usage-suggestions
__builtin_ve_vl_pvfmax_vsvMvl
-fdiagnostics-show-template-tree
Attr
-fdiagnostics-show-note-include-stack
__builtin_ve_vl_vfmind_vsvvl
-fno-diagnostics-show-option
max-page-size=0x4000000
-fdiagnostics-print-source-range-info
__builtin_ve_vl_vfmins_vvvvl
-fdiagnostics-parseable-fixits
Disable colors in diagnostics
-fno-diagnostics-fixit-info
Use default code inlining logic for the address sanitizer
-fansi-escape-codes
crtbegin_so.o
-fno-caret-diagnostics
__builtin_ve_vl_pvfmin_vsvvl
-Wundef-prefix=
ArmNewZAAttr
-fcas-plugin-option
__builtin_ve_vl_vfmadd_vvvvvl
-fcas-plugin-path
crtbegin_static.o
-fcas-path
V256ddV256dV256dV256dUi
Not an integer: %s
ArmSharedZAAttr
Inline functions as deemed beneficial by the compiler
Error in reading profile %0: %1
crtbegin_dynamic.o
RootID does not exist
V256ddV256dV256dV256bV256dUi
ArmStreamingCompatibleAttr
ieee
__builtin_ve_vl_vfmads_vvvvvl
-fdebug-pass-manager
-Bsymbolic
-fcuda-include-gpubinary
__builtin_ve_vl_vfmads_vvsvl
-fexperimental-optimized-argument-temporaries
CmseNSCallAttr
-fpass-by-value-is-noalias
-ftest-coverage
-fpreserve-vec3-type
-latomic
-stack-protector-buffer-size
V256dV256dfV256dV256bV256dUi
-fobjc-dispatch-method=
ObjCGCAttr
-split-dwarf-file
__builtin_ve_vl_pvfmad_vsvvvl
-split-dwarf-output
-lgloss
-main-file-name
V256dV256dLUiV256dV256dUi
-opt-record-file
ObjCKindOfAttr
-no-opaque-pointers
Treat source input files as Objective-C++ inputs
-no-enable-noundef-analysis
-lsoftfp
-clear-ast-before-backend
__builtin_ve_vl_vfmsbd_vvvvvl
-fctor-dtor-return-this
OpenCLGenericAddressSpaceAttr
-cfguard
__builtin_ve_vl_vfmsbd_vvsvvl
-fwarn-stack-size=
crtend_so.o
-fverify-debuginfo-preserve-export=
__builtin_ve_vl_vfmsbs_vvvvl
-fverify-debuginfo-preserve
OpenCLGlobalDeviceAddressSpaceAttr
-fprofile-instrument=
-fno-sanitize-address-poison-custom-array-cookie
-fexperimental-sanitize-metadata=atomics
crtend_android.o
-fexperimental-sanitize-metadata=covered
__builtin_ve_vl_vfmsbs_vvsvmvl
-fsanitize-coverage-trace-stores
OpenCLLocalAddressSpaceAttr
-fsanitize-coverage-trace-loads
__builtin_ve_vl_pvfmsb_vsvvvl
-fsanitize-coverage-stack-depth
--x32
-fsanitize-coverage-no-prune
__builtin_ve_vl_pvfmsb_vsvvMvl
-fsanitize-coverage-trace-pc-guard
PointerAuthAttr
-fsanitize-coverage-trace-pc
Add directory to the ObjC SYSTEM include search path
-fsanitize-coverage-control-flow
-mppc
-fsanitize-coverage-pc-table
__builtin_ve_vl_vfnmadd_vvvvmvl
-fsanitize-coverage-inline-bool-flag
Ptr64Attr
-fsanitize-coverage-inline-8bit-counters
__builtin_ve_vl_vfnmads_vvvvvl
-fsanitize-coverage-8bit-counters
-mbig-endian
-fsanitize-coverage-trace-gep
__builtin_ve_vl_vfnmads_vvsvvl
-fsanitize-coverage-trace-div
PtrAutoNullTerminatedAttrAttr
-fsanitize-coverage-trace-cmp
introduce a module file extension for testing purposes. The argument is parsed as blockname:major:minor:hashed:user info
-fsanitize-coverage-trace-bb
-mlittle-endian
-fsanitize-coverage-indirect-calls
__builtin_ve_vl_pvfnmad_vvsvl
-fsanitize-coverage-type=
TypeNonNullAttr
--linker-option=
__builtin_ve_vl_pvfnmad_vvsvMvl
-fapple-kext-vtable-mitigation
-mppc64
-vectorize-slp
__builtin_ve_vl_vfnmsbd_vsvvvl
-mconstructor-aliases
TypeNullableAttr
-funwind-tables=
Only modify files with a filename contained in the provided directory path
-msmall-data-limit
-mfpu=neon
-mfloat-abi
__builtin_ve_vl_vfnmsbs_vsvvl
-mframe-pointer=
UPtrAttr
-no-struct-path-tbaa
__builtin_ve_vl_vfnmsbs_vvvvmvl
-relaxed-aliasing
-mfpu=crypto-neon-fp-armv8
-fuse-register-sized-bitfield-access
-finline-functions-called-once
-dump-coverage-mapping
-fno-common
-coverage-notes-file
Disable poisoning array cookies when using custom operator new[] in AddressSanitizer
-coverage-data-file
-mfloat-abi=soft
-fmerge-functions
__builtin_ve_vl_vrcpd_vvl
-no-implicit-sme
MustTailAttr
-no-implicit-float
__builtin_ve_vl_pvrcp_vvl
-fforbid-guard-variables
-mfloat-abi=softfp
-dwarf-explicit-import
__builtin_ve_vl_vrsqrts_vvl
-disable-red-zone
SuppressAttr
-disable-O0-optnone
Make migration to 'atomic' properties
-disable-lifetime-markers
-mfloat-abi=hard
-disable-llvm-passes
__builtin_ve_vl_pvrsqrtnex_vvl
-disable-llvm-verifier
AlwaysInlineAttr
-as-secure-log-file
__builtin_ve_vl_vcvtwdsx_vvmvl
--mrelax-relocations
-mno-shared
-compress-debug-sections=
__builtin_ve_vl_vcvtwdzx_vvl
-extend-lifetimes=
NoInlineAttr
-dwarf-debug-flags
Write minimized bitcode to <file> for the ThinLTO thin link only
-debugger-tuning=
-call_nonpic
-default-function-attr
__builtin_ve_vl_vcvtwssx_vvmvl
-fno-integrated-as
AArch64SVEPcsAttr
__builtin_ve_vl_vcvtwszx_vvl
-object-file-name=
-mnan=2008
-mrecord-mcount
__builtin_ve_vl_vcvtwszxrz_vvvl
-mnop-mcount
AMDGPUKernelCallAttr
-mfentry
Enable migration to modern ObjC
-mstack-protector-guard-reg=
-mfpxx
-mstack-protector-guard-symbol=
__builtin_ve_vl_vcvtld_vvl
-mstack-protector-guard-offset=
AnyX86NoCfCheckAttr
-mstack-protector-guard=
__builtin_ve_vl_vcvtldrz_vvvl
-mno-amdgpu-ieee
-no-mips16
-mspeculative-load-hardening
__builtin_ve_vl_vcvtsw_vvl
-mno-tls-direct-seg-refs
FastCallAttr
-mno-stack-arg-probe
-fno-sanitize-address-use-after-scope
-mstack-probe-size=
-mmsa
-mstackrealign
__builtin_ve_vl_vcvtsd_vvl
-mtls-size=
LifetimeBoundAttr
-inline-asm=
__builtin_ve_vl_vmrg_vvvmvl
-gembed-source
-gsrc-hash=
__builtin_ve_vl_vmrgw_vvvMl
-gno-column-info
NSReturnsRetainedAttr
-gcodeview-ghash
Enable migration to property and method annotations
-gdwarf64
/crtbegin.o
-femit-dwarf-unwind=
V256dV256dV256dLUiUi
-fdebug-ranges-base-address
PascalAttr
-fzero-call-used-regs=
__builtin_ve_vl_vex_vvmvl
-fsplit-machine-functions
-fno-unique-section-names
__builtin_ve_vl_pvfmkat_Ml
-funique-basic-block-section-names
PreserveAllAttr
-fstack-size-section
Perform ThinLTO importing using provided function summary index
-fdata-sections
-fbasic-block-sections=
__builtin_ve_vl_vfmkllt_mvml
-fno-zero-initialized-in-bss
RegCallAttr
-fvirtual-function-elimination
__builtin_ve_vl_vfmkleq_mvml
-fforce-emit-vtables
mips32
-fsplit-lto-unit
__builtin_ve_vl_vfmklle_mvml
-fno-use-init-array
SwiftAsyncCallAttr
-fregister-global-dtors-with-atexit
Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods
-freroll-loops
march=mips32
-ftls-model=
__builtin_ve_vl_vfmklltnan_mvml
-ftime-report=
SysVABIAttr
-ftime-report
__builtin_ve_vl_vfmkleqnan_mvml
-fstrict-vtable-pointers
mips32r2
-fstrict-enums
__builtin_ve_vl_vfmkllenan_mvml
-fstack-clash-protection
Compile common globals like normal definitions
-fsplit-stack
Disable use-after-scope detection in AddressSanitizer
-fno-preserve-as-comments
mips32r3
-fno-plt
__builtin_ve_vl_vfmkweq_mvml
-fms-hotpatch
SwiftContextAttr
-fpatchable-function-entry=
__builtin_ve_vl_vfmkwle_mvml
-fno-escaping-block-tail-calls
mips32r5
-fno-optimize-sibling-calls
__builtin_ve_vl_vfmkwnan_mvml
-fobjc-avoid-heapify-local-blocks
SwiftIndirectResultAttr
-fgeneric-block-helpers-use-extended-layout
Enable migration to infer instancetype for method result type
-fgeneric-block-helpers
march=mips32r2
-fin-descriptor-block-flags
__builtin_ve_vl_vfmkweqnan_mvml
-fobjc-msgsend-selector-stubs
CFConsumedAttr
-fno-use-cxa-atexit
__builtin_ve_vl_vfmkwlenan_mvml
-fveclib=
mips32r6
-fno-assume-sane-operator-new
__builtin_ve_vl_pvfmkwupgt_mvml
-fmerge-all-constants
NSConsumedAttr
-fthin-link-bitcode=
-ftime-report=
-ffine-grained-bitfield-accesses
march=mips32r6
-fxray-selected-function-group=
__builtin_ve_vl_pvfmkwupne_mvml
-fxray-function-groups=
OSConsumedAttr
-fno-xray-function-index
__builtin_ve_vl_pvfmkwupeq_mvml
-fxray-ignore-loops
mips64
-fxray-instruction-threshold=
__builtin_ve_vl_pvfmkwupge_mvml
-mindirect-branch-cs-prefix
ReleaseHandleAttr
-mfunction-return=
Enable migration to modern ObjC literals
-finstrument-function-entry-bare
march=mips64
-finstrument-functions-after-inlining
__builtin_ve_vl_pvfmkwupnum_mvml
-finstrument-functions
HLSLSV_GroupIndexAttr
-finline-max-stacksize=
__builtin_ve_vl_pvfmkwupnan_mvml
-frewrite-map-file=
mips64r2
-fno-delete-null-pointer-checks
__builtin_ve_vl_pvfmkwupgtnan_mvml
-fno-strict-float-cast-overflow
AMDGPUNumSGPRAttr
-fsanitize-undefined-strip-path-components=
-fno-sanitize-address-use-odr-indicator
-fsanitize-stats
mips64r3
-fsanitize-cfi-canonical-jump-tables
__builtin_ve_vl_pvfmkwupnenan_mvml
-fsanitize-cfi-icall-generalize-pointers
AMDGPUWavesPerEUAttr
-fsanitize-cfi-cross-dso
__builtin_ve_vl_pvfmkwupeqnan_mvml
-fsanitize-minimal-runtime
mips64r5
-fno-sanitize-memory-param-retval
__builtin_ve_vl_pvfmkwupgenan_mvml
-fsanitize-address-destructor=
AVRInterruptAttr
-fsanitize-address-use-odr-indicator
Enable migration to NS_ENUM/NS_OPTIONS macros
-fsanitize-address-globals-dead-stripping
octeon+
-fsanitize-address-poison-custom-array-cookie
V512bV256dV512bUi
-fsanitize-address-use-after-return=
AcquireCapabilityAttr
-fsanitize-address-use-after-scope
__builtin_ve_vl_pvfmkwne_MvMl
-fsanitize-memory-use-after-dtor
march=mips64r2
-fsanitize-memory-track-origins=
__builtin_ve_vl_pvfmkwge_MvMl
-fsanitize-coverage-ignorelist=
AcquiredBeforeAttr
-fsanitize-coverage-allowlist=
per-pass,per-pass-run
-fsymbol-partition=
mips64r6
-fkeep-static-consts
__builtin_ve_vl_pvfmkwgtnan_MvMl
-fno-jump-tables
AlignNaturalAttr
-femulated-tls
__builtin_ve_vl_pvfmkwnenan_MvMl
-fno-dwarf-directory-asm
march=mips64r6
-fcommon
__builtin_ve_vl_pvfmkwgenan_MvMl
-faddrsig
AllocAlignAttr
-fswift-async-fp=
Enable migration of setter/getter messages to property-dot syntax
-fprofile-selected-function-group=
mmicromips
-fpseudo-probe-for-profiling
__builtin_ve_vl_vfmkdne_mvml
-fprofile-update=
AlwaysDestroyAttr
-fprofile-exclude-files=
__builtin_ve_vl_vfmkdge_mvml
-fprofile-filter-files=
muclibc
-fprofile-remapping-file=
-fmemory-profile=
-fdebug-info-for-profiling
-fno-complete-member-pointers
-fcoverage-compilation-dir=
Disable ODR indicator globals
-fprofile-sample-accurate
mnan=2008
-fprofile-sample-use=
__builtin_ve_vl_vfmkdnenan_mvml
-mwatch-bitcode-compatibility
ArcWeakrefUnavailableAttr
sycl-1.2.1
__builtin_ve_vl_vfmkdgenan_mvml
1.2.1
mabi=n32
__builtin_ve_vl_vfmksgt_mvml
2017
ArmBuiltinAliasAttr
2020
Enable migration to modern ObjC property
mabi=n64
short
__builtin_ve_vl_vfmksge_mvml
char
ArtificialAttr
regcall
__builtin_ve_vl_vfmksnum_mvml
vectorcall
msoft-float
stdcall
__builtin_ve_vl_vfmksgtnan_mvml
fastcall
AssertCapabilityAttr
cdecl
-ftime-trace-granularity=
mhard-float
__builtin_ve_vl_vfmksgenan_mvml
non-legacy
AssertSharedLockAttr
libstdc++
__builtin_ve_vl_pvfmksupgt_mvl
libc++
migrate
__builtin_ve_vl_pvfmksuplt_mvl
modify
AssumptionAttr
check
Enable migration to add protocol conformance on classes
SARIF
__builtin_ve_vl_pvfmksupeq_mvl
sarif
BPFPreserveAccessIndexAttr
__builtin_ve_vl_pvfmksupge_mvl
msvc
/../../..
only-direct-system
__builtin_ve_vl_pvfmksuple_mvl
csllvm
BlocksAttr
llvm
/fno-sanitize-address-vcasan-lib
zstd
0.0.0
zlib
__builtin_ve_vl_pvfmksupnan_mvl
arguments
C11NoReturnAttr
this
__builtin_ve_vl_pvfmksupgtnan_mvl
Found candidate GCC installation: 
__builtin_ve_vl_pvfmksupltnan_mvl
lldb
CFGuardAttr
Enable migration to modern ObjC readonly property
dynamic-no-pic
Selected GCC installation: 
ropi-rwpi
__builtin_ve_vl_pvfmksupeqnan_mvl
rwpi
CFReturnsNotRetainedAttr
ropi
__builtin_ve_vl_pvfmksupgenan_mvl
Candidate multilib: 
static
__builtin_ve_vl_pvfmksuplenan_mvl
CFUnknownTransferAttr
-ftime-trace=
mixed
Selected multilib: 
__builtin_ve_vl_pvfmksne_MvMl
CPUSpecificAttr
__builtin_ve_vl_pvfmksge_MvMl
/usr/gcc
sha256
__builtin_ve_vl_pvfmksnum_MvMl
sha1
CUDADeviceAttr
Enable migration to modern ObjC readwrite property
no-compact-unwind
/opt/rh
all-arg
__builtin_ve_vl_pvfmksnenan_MvMl
all-gpr
CUDADeviceBuiltinTextureTypeAttr
all-gpr-arg
__builtin_ve_vl_pvfmksgenan_MvMl
used
/opt/rh/
used-arg
__builtin_ve_vl_vsumwsx_vvml
used-gpr
Do not require member pointer base types to be complete if they would be significant under the Microsoft ABI
used-gpr-arg
-fno-sanitize-blacklist
skip
/usr
explicit
__builtin_ve_vl_vfsums_vvl
hidden
CUDALaunchBoundsAttr
default
__builtin_ve_vl_vrmaxswlstsx_vvl
local-exec
aarch64-none-linux-gnu
initial-exec
__builtin_ve_vl_vrmaxswlstzx_vvl
local-dynamic
CXX11NoReturnAttr
zero
Enable migration to modern ObjC subscripting
uninitialized
aarch64-linux-gnu
best
__builtin_ve_vl_vrminswlstzx_vvl
Darwin_libsystem_m
CallbackAttr
SVML
__builtin_ve_vl_vrmaxsllst_vvl
MASSV
aarch64-redhat-linux
libmvec
__builtin_ve_vl_vrminsllst_vvl
Accelerate
CapturedRecordAttr
virtual
-ftime-trace
multiple
aarch64-suse-linux
single
__builtin_ve_vl_vfrmaxslst_vvl
integer
CmseNSEntryAttr
runtime
__builtin_ve_vl_vfrmindlst_vvl
aarch64_be-none-linux-gnu
extended
__builtin_ve_vl_vfrminslst_vvl
wasm
ColdAttr
Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property's 'atomic' attribute
sjlj
aarch64_be-linux-gnu
dwarf
__builtin_ve_vl_vgt_vvssl
objc
ConstAttr
unspecified
__builtin_ve_vl_vgt_vvssmvl
marker
arm-linux-gnueabi
bitcode
__builtin_ve_vl_vgtnc_vvssmvl
per-thread
ConstructorAttr
legacy
-fno-sanitize-cfi-canonical-jump-tables
-fembed-bitcode=
arm-linux-gnueabihf
-fno-autolink
__builtin_ve_vl_vgtunc_vvssmvl
-falign-loops=
ConsumableAutoCastAttr
-fhip-kernel-arg-name
__builtin_ve_vl_vgtlsx_vvssmvl
-fno-hip-fp32-correctly-rounded-divide-sqrt
armv7hl-redhat-linux-gnueabi
-cl-uniform-work-group-size
__builtin_ve_vl_vgtlsxnc_vvssmvl
-cl-fp32-correctly-rounded-divide-sqrt
ConvergentAttr
-cl-mad-enable
Enable migration to annotate property with NS_RETURNS_INNER_POINTER
-cl-kernel-arg-info
armv6hl-suse-linux-gnueabi
-no-round-trip-args
__builtin_ve_vl_vgtlzxnc_vvssmvl
DLLExportStaticLocalAttr
silence-checkers
vV256dV256dLUiLUiV256bUi
exploration_strategy
armv7hl-suse-linux-gnueabi
c++-inlining
__builtin_ve_vl_vscot_vvssml
model-path
DLLImportStaticLocalAttr
ctu-invocation-list
-ftls-model=
ctu-index-name
armeb-linux-gnueabi
ctu-dir
__builtin_ve_vl_vscuot_vvssml
region-store-small-array-limit
DeprecatedAttr
region-store-small-struct-limit
__builtin_ve_vl_vscl_vvssml
ctu-phase1-inlining
armeb-linux-gnueabihf
ctu-max-nodes-min
__builtin_ve_vl_vsclot_vvssml
ctu-max-nodes-pct
DiagnoseAsBuiltinAttr
max-nodes
-objcmt-whitelist-dir-path=
max-inlinable-size
armebv7hl-redhat-linux-gnueabi
max-times-inline-large
__builtin_ve_vl_orm_MMM
max-symbol-complexity
DisableSanitizerInstrumentationAttr
min-cfg-size-treat-functions-as-large
__builtin_ve_vl_eqvm_MMM
graph-trim-interval
csky-linux-gnuabiv2
ipa-always-inline-size
-finline-functions
ctu-import-cpp-threshold
-fno-const-strings
ctu-import-threshold
Do not make the jump table addresses canonical in the symbol table
ignore-flex-generated-files
csky-linux-uclibcabiv2
ignore-bison-generated-files
LUiLUiLUi
assume-controlled-environment
EnforceTCBAttr
consider-single-element-arrays-as-flexible-array-members
LUiLUiLUiLUi
support-symbolic-integer-casts
csky-elf-noneabiv2
display-checker-name
Inline threshold for device compilation for CUDA/HIP
apply-fixits
-fno-sanitize-cfi-cross-dso
track-conditions-debug
-ftls-model
track-conditions
ErrorAttr
__builtin_wasm_memory_size
expand-macros
ExcludeFromExplicitInstantiationAttr
experimental-enable-naive-ctu-analysis
bulk-memory
eagerly-assume
x86_64-unknown-linux-gnu
aggressive-binary-operation-simplification
__builtin_wasm_min_f32
notes-as-events
ExternalSourceSymbolAttr
unroll-loops
Add directory to the ObjC++ SYSTEM include search path
widen-loops
x86_64-pc-linux-gnu
inline-lambdas
__builtin_wasm_memory_atomic_wait32
elide-constructors
FlagEnumAttr
faux-bodies
__builtin_wasm_memory_atomic_notify
cfg-conditional-static-initializers
x86_64-redhat-linux6E
add-pop-up-notes
__builtin_wasm_trunc_s_i32_f64
prune-paths
FormatAttr
objc-inlining
-ObjC
serialize-stats
x86_64-redhat-linux
verbose-report-filename
__builtin_wasm_trunc_saturate_u_i32_f32
stable-report-filename
FunctionReturnThunksAttr
report-in-main-source-file
__builtin_wasm_trunc_saturate_u_i64_f32
crosscheck-with-z3
x86_64-suse-linux
suppress-c++-stdlib
simd128
c++-container-inlining
GuardedByAttr
suppress-inlined-defensive-checks
-ftracer
avoid-suppressing-null-argument-paths
x86_64-manbo-linux-gnu
suppress-null-return-paths
__builtin_wasm_sub_sat_u_i16x8
c++-temp-dtor-inlining
HIPManagedAttr
c++-shared_ptr-inlining
V4iV4i
c++-allocator-inlining
x86_64-slackware-linux
c++-stdlib-inlining
__builtin_wasm_min_u_i8x16
c++-template-inlining
HLSLResourceAttr
cfg-expand-default-aggr-inits
-object-file-name=
cfg-scopes
x86_64-unknown-linux
cfg-rich-constructors
__builtin_wasm_min_u_i32x4
cfg-loopexit
HLSLShaderAttr
cfg-lifetime
__builtin_wasm_avgr_u_i16x8
cfg-temporary-dtors
x86_64-amazon-linux
cfg-implicit-dtors
V8sV16Sc
mode
IBActionAttr
-cc1
-ftrap-function-returns
-fdefault-calling-conv
x86_64-linux-gnux32
iV16Sc
clc++
IBOutletCollectionAttr
gnu++03
__builtin_wasm_all_true_i64x2
c++03
x86_64-pc-linux-gnux32
gnu18
__builtin_wasm_bitmask_i16x8
iso9899:2018
InternalLinkageAttr
-object-file-name
iso9899:2017
/libx32
iso9899:2011
__builtin_wasm_min_f32x4
iso9899:1999
LayoutVersionAttr
gnu90
__builtin_wasm_min_f64x2
iso9899:1990
/lib32
__builtin_wasm_ceil_f32x4
-fsanitize=
LockReturnedAttr
+disableObjCConstantLiterals
Disable control flow integrity (CFI) checks for cross-DSO calls.
+thisNoNullAttr
i586-linux-gnu
+thisNoAlignAttr
__builtin_wasm_dot_s_i32x4_i16x8
+revertcff6dda604cb
M68kInterruptAttr
+revert09abecef7bbf
__builtin_wasm_trunc_saturate_s_i32x4_f32x4
+disablePtrauthPacError
i686-linux-gnu
+enableAggressiveVLAFolding
__builtin_wasm_narrow_u_i8x16_i16x8
-enableObjCImplicitClassTypeCoercion
MSAllocatorAttr
+enableObjCImplicitClassTypeCoercion
-legacyAvailabilityTempWorkaround
i686-pc-linux-gnu
+legacyAvailabilityTempWorkaround
__builtin_wasm_trunc_sat_u_zero_f64x2_i32x4
-enableObjCNumericLiteralWithoutAt
MSNoVTableAttr
+enableObjCNumericLiteralWithoutAt
__builtin_wasm_fma_f64x2
+useNonPrimaryObjCCategoryDecl
i386-redhat-linux6E
-zeroInitializeGlobalsBeforeEvaluating
__builtin_wasm_laneselect_i32x4
+zeroInitializeGlobalsBeforeEvaluating
MSStructAttr
+disableOVEimplicitConv
-ftrap-function=
-disableNullSanitizerCheckForPointerSanitizer
i686-redhat-linux
+disableNullSanitizerCheckForPointerSanitizer
__builtin_wasm_relaxed_trunc_u_i32x4_f32x4
+fixedEnumsInClassScopeCXX98
MaxFieldAlignmentAttr
-disableNonDependentMemberExprInCurrentInstantiation
__builtin_wasm_dot_i8x16_i7x16_s_i16x8
+disableNonDependentMemberExprInCurrentInstantiation
i386-redhat-linux
+disableNeonImmediateRangeCheck
__builtin_wasm_relaxed_dot_bf16x8_add_f32_f32x4
+allowStaticMemberInLocalRecord
MaybeUndefAttr
-allowStaticMemberInAnonymousUnion
-Ofast
+allowStaticMemberInAnonymousUnion
i586-suse-linux
+allowFormatBooleanCheck
__wasm_nontrapping_fptoint__
-allowFormatVoidPointerWithStringSpecifier
MinSizeAttr
+allowFormatVoidPointerWithStringSpecifier
__wasm_atomics__
-disableInferNewAvailabilityFromInit
i686-montavista-linux
+disableInferNewAvailabilityFromInit
__wasm_reference_types__
-messageToSelfInClassMethodIdReturnType
Mips16Attr
+messageToSelfInClassMethodIdReturnType
-fno-sanitize-coverage=
+nullptrToBoolConversion
i686-gnu
non-leaf
-fno-constant-cfstrings
latest
loongarch64-linux-gnu
15.0
14.0
MipsShortCallAttr
12.0
-popcnt
11.0
NSConsumesSelfAttr
-xsave
loongarch64-unknown-linux-gnu
sse4.1
NSReturnsAutoreleasedAttr
+avx512vpopcntdq
fast-honor-pragmas
m68k-linux-gnu
+avx512fp16
NakedAttr
-verify-ignore-unexpected=
--offload-device-only
m68k-unknown-linux-gnu
no-pass-missed
+avx512ifma
no-pass-analysis
NoCommonAttr
no-pass
+movbe
m68k-suse-linux
remark
+xsave
note
NoDestroyAttr
expected
Only compile for the offloading device.
-fsanitize-trap=
/libo32
-fsanitize-recover=
+wbnoinvd
-fdiagnostics-misexpect-tolerance=
NoInstrumentFunctionAttr
-fdiagnostics-show-hotness
+rdpid
global-dynamic
mips-linux-gnu
large
+retpoline-external-thunk
keep
NoMips16Attr
-fxray-instrumentation-bundle=
-ftrapv-handler=
-x ir
mips-mti-linux
none
+enqcmd
NoRandomizeLayoutAttr
pass-analysis
+amx-tile
pass-missed
mips-mti-linux-gnu
pass
+uintr
thunk-extern
NoSanitizeAttr
branch
Only compile for the offloading host.
return
mips-img-linux-gnu
memprof.profraw
__amd64
full
NoSplitStackAttr
per-pass-run
__SEG_GS
mangled
mipsisa32r6-linux-gnu
simple
__seg_fs
NoThreadSafetyAnalysisAttr
unused-types
Specify the function to be called on overflow
limited
mipsel-linux-gnu
constructor
line-directives-only
NoUniqueAddressAttr
line-tables-only
corei7
mipsisa32r6el-linux-gnu
imported module
__k6_3__
missing main output
NotTailCalledAttr
result module doesn't exist in CAS
--offload-link
no such entry in action cache; expected compile:
mips64-linux-gnu
Module Compile
btver1
LLBUILD_TASK_ID
OMPCaptureNoInitAttr
module.private.modulemap
bdver4
module.map
mips64-linux-gnuabi64
module_private.map
__NO_MATH_INLINES
__inferred_module.map
OMPDeclareVariantAttr
modules.idx
func,bb,edge,indirect-calls,trace-bb,trace-cmp,trace-div,trace-gep,8bit-counters,trace-pc,trace-pc-guard,no-prune,inline-8bit-counters,inline-bool-flag
.pcm
mipsisa64r6-linux-gnu
modules.timestamp
__FSGSBASE__
OSConsumesThisAttr
_Private
__RTM__
 -> 
mipsisa64r6-linux-gnuabi64
Module Load
__TBM__
Loading 
OSReturnsRetainedAttr
loading.
--offload-new-driver
Preloading 
mips64el-linux-gnu
preloading.
__F16C__
Reading modules
OSReturnsRetainedOnZeroAttr
reading_modules
__AVX512VNNI__
mips64el-linux-gnuabi64
 when compiling for 
__AVX512PF__
 when compiling for host
ObjCBridgeMutableAttr
 generated
-ftrapv-handler
 error
mipsisa64r6el-linux-gnu
 and 
__AVX512VP2INTERSECT__
ObjCCompleteDefinitionAttr
 warning
__XSAVEOPT__
 default target 
mipsisa64r6el-linux-gnuabi64
clang -cc1 version 15.0.0
__CLFLUSHOPT__
Clang front-end timer
ObjCExplicitProtocolImplAttr
Clang front-end time report
--offload=
mips64-linux-gnuabin32
__WIDEKL__
llvm::cas::schema::compile_job_result::v1
ObjCIndependentClassAttr
not a compile job result
__WAITPKG__
mipsisa64r6-linux-gnuabin32
__PTWRITE__
expected blob for entry 
Disable creation of CodeFoundation-type constant strings
cas object is not a valid cache key
-fno-sanitize-hwaddress-experimental-aliasing
computation
mips64el-linux-gnuabin32
expected cache key to be a CAS tree; got 
__SERIALIZE__
unknown module format
ObjCRequiresPropertyDefsAttr
.pch
__RETPOLINE__
mipsisa64r6el-linux-gnuabin32
LIBCLANG_DISABLE_PCH_VALIDATION
__SSE4_2__
--- %u translation units
ObjCReturnsInnerPointerAttr
LIBCLANG_OBJTRACKING
msp430-elf
LIBCLANG_TIMING
_M_IX86_FP
ObjCSubclassingRestrictedAttr
@UUV@
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16
@MG@
powerpc-linux-gnu
OpenCLIntelReqdSubGroupSizeAttr
PackedAttr
Trap on integer overflow
@FT@
powerpc-unknown-linux-gnu
@FI@
avx512bf16
avx512dq
@CT@
powerpc-linux-gnuspe
@NA@
movbe
@BT@__ibm128
PointerAuthStructAttr
@BT@Accum
@BT@__bf16
ReadOnlyPlacementAttr
@BT@ShortAccum
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt,+f16c,+avx
__rvv_bool2_t
westmere
bonnell
goldmont-plus
icelake-client
__rvv_bool1_t
RequiresCapabilityAttr
__rvv_float64m8_t
icelake-server
cascadelake
tigerlake
cooperlake
alderlake
rocketlake
{ax}
{bx}
{cx}
{dx}
{si}
{st}
{st(1)}
st(2)
st(3)
st(4)
st(6)
st(7)
argp
fpcr
dirflag
frame
xmm1
__rvv_float64m4_t
powerpc64le-suse-linux
__rvv_float16mf4_t
__rvv_float64m2_t
xmm2
xmm3
xmm4
xmm5
xmm7
xmm8
xmm9
xmm11
xmm12
xmm13
xmm15
ymm0
ymm1
ymm3
ymm4
ymm5
ymm6
ymm7
ymm8
ymm9
ymm11
ymm12
ymm13
ymm15
xmm16
xmm17
xmm19
xmm20
xmm21
xmm22
xmm23
xmm24
xmm25
xmm27
xmm28
xmm29
xmm31
ymm16
ymm17
__rvv_uint64m8_t
ScopedLockableAttr
__rvv_uint64m4_t
ymm18
ymm19
ymm20
ymm21
ymm22
ymm23
ymm24
ymm25
ymm27
ymm28
ymm29
__rvv_int16mf2_t
SwiftBridgeAttr
__rvv_int16mf4_t
-ftree-vectorize
__rvv_uint8m8_t
sparcv9-linux-gnu
__rvv_uint8m1_t
__rvv_uint8m4_t
ymm30
ymm31
zmm0
zmm1
zmm3
zmm4
zmm5
zmm6
zmm7
zmm8
zmm9
zmm11
zmm12
zmm13
zmm15
zmm16
zmm17
zmm19
zmm20
zmm21
zmm22
zmm23
zmm24
zmm25
__rvv_uint8mf2_t
s390x-linux-gnu
SwiftImportPropertyAsAccessorsAttr
__clang_svboolx4_t
zmm26
zmm27
zmm28
zmm29
zmm31
bnd0
bnd1
bnd3
tmm0
tmm1
tmm3
tmm4
tmm5
tmm6
tmm7
r10d
r10w
r10b
r11w
r11b
r12d
r12w
r12b
r13d
r13w
__clang_svboolx2_t
TargetAttr
__clang_svfloat16x2_t
-fno-sanitize-link-runtime
__clang_svuint64x2_t
x86_64-pc-solaris2.11
__clang_svuint32x2_t
r13b
r14d
r14w
r14b
__clang_svuint16x2_t
UuidAttr
__clang_svuint8x2_t
r15d
r15w
r15b
__builtin_cpu_init
__builtin_cpu_supports
bcC*
__builtin_cpu_is
__builtin_ia32_undef128
ncV:128:
__builtin_ia32_undef256
__builtin_ia32_undef512
ncV:512:
__builtin_ia32_writeeflags_u32
__builtin_ia32_femms
__builtin_ia32_pavgusb
ncV:64:
__builtin_ia32_pf2id
V2iV2f
__builtin_ia32_pfacc
V2fV2fV2f
__builtin_ia32_pfadd
__builtin_ia32_pfcmpeq
__clang_svint16x2_t
VecReturnAttr
__clang_svint8x2_t
V2iV2fV2f
__builtin_ia32_pfcmpge
__builtin_ia32_pfcmpgt
__builtin_ia32_pfmax
__builtin_ia32_pfmul
__builtin_ia32_pfrcp
V2fV2f
__builtin_ia32_pfrcpit2
__builtin_ia32_pfrsqrt
__builtin_ia32_pfrsqit1
__builtin_ia32_pfsub
__builtin_ia32_pfsubr
__builtin_ia32_pi2fd
V2fV2i
V4sV4sV4s
__builtin_ia32_pf2iw
__builtin_ia32_pfnacc
__builtin_ia32_pi2fw
__builtin_ia32_pswapdsf
__builtin_ia32_pswapdsi
V2iV2i
_mm_prefetch
vcC*i
__builtin_ia32_emms
__builtin_ia32_paddb
__builtin_ia32_paddw
__builtin_ia32_paddd
V2iV2iV2i
__builtin_ia32_paddsw
__builtin_ia32_paddusb
__builtin_ia32_paddusw
__builtin_ia32_psubw
__builtin_ia32_psubd
__builtin_ia32_psubsb
__builtin_ia32_psubusb
__builtin_ia32_psubusw
__builtin_ia32_pmulhw
__builtin_ia32_pmullw
__builtin_ia32_pmaddwd
V2iV4sV4s
__builtin_ia32_pand
__builtin_ia32_pandn
__builtin_ia32_por
__builtin_ia32_pxor
V4sV4sV1Oi
__builtin_ia32_pslld
V2iV2iV1Oi
__builtin_ia32_psrlw
__builtin_ia32_psrld
__builtin_ia32_psrlq
__builtin_ia32_psraw
__builtin_ia32_psrad
__builtin_ia32_psllwi
V4sV4si
V2iV2ii
__builtin_ia32_psllqi
V1OiV1Oii
__SVInt16_t
WeakImportAttr
__SVInt8_t
WebAssemblyExportNameAttr
@BT@OCLClkEvent
@BT@OCLEvent
i686-linux-android
__builtin_ia32_psrlwi
__builtin_ia32_psrldi
__builtin_ia32_psrlqi
__builtin_ia32_psrawi
/usr/lib/gcc/
@BT@
__builtin_ia32_psradi
__builtin_ia32_packsswb
V8cV4sV4s
__builtin_ia32_packssdw
V4sV2iV2i
__builtin_ia32_packuswb
__builtin_ia32_punpckhbw
__builtin_ia32_punpckhwd
__builtin_ia32_punpcklbw
__builtin_ia32_punpcklwd
__builtin_ia32_punpckldq
__builtin_ia32_pcmpeqw
__builtin_ia32_pcmpeqd
__builtin_ia32_pcmpgtb
__builtin_ia32_pcmpgtd
__builtin_ia32_maskmovq
vV8cV8cc*
nV:64:
__builtin_ia32_movntq
vV1Oi*V1Oi
__builtin_ia32_vec_init_v2si
LoaderUninitializedAttr
vmaddr is encrypted
V2iii
__builtin_ia32_vec_init_v4hi
V4sssss
__builtin_ia32_vec_init_v8qi
__builtin_ia32_vec_ext_v2si
iV2ii
__builtin_ia32_cvtpi2ps
Symtab extends out of the range
Unsupported ObjC Runtime
/gcc/
__module_info is not a multiple of objc_module_t size
V4fV4fV2i
mmx,sse
__builtin_ia32_cvtps2pi
V2iV4f
__builtin_ia32_cvttps2pi
__builtin_ia32_pavgb
__builtin_ia32_pavgw
__builtin_ia32_pmaxsw
__builtin_ia32_pminsw
__builtin_ia32_pminub
__builtin_ia32_pmovmskb
__builtin_ia32_pmulhuw
__builtin_ia32_psadbw
V4sV8cV8c
V4sV4sIc
__builtin_ia32_vec_ext_v4hi
iV4sIi
__builtin_ia32_vec_set_v4hi
V4sV4siIi
__builtin_ia32_cvtpd2pi
V2iV2d
__builtin_ia32_cvtpi2pd
V2dV2i
__builtin_ia32_cvttpd2pi
__builtin_ia32_pmuludq
V1OiV2iV2i
__builtin_ia32_psubq
V8cV8c
mmx,ssse3
__builtin_ia32_pabsd
__builtin_ia32_pabsw
V4sV4s
__builtin_ia32_palignr
V8cV8cV8cIc
__builtin_ia32_phaddsw
__builtin_ia32_phaddw
__builtin_ia32_phsubd
__builtin_ia32_phsubw
__builtin_ia32_pmaddubsw
__builtin_ia32_pmulhrsw
__builtin_ia32_psignw
__builtin_ia32_psignb
__builtin_ia32_psignd
__builtin_ia32_comieq
__builtin_ia32_comilt
__builtin_ia32_comile
__builtin_ia32_comigt
__builtin_ia32_comineq
__builtin_ia32_ucomieq
__builtin_ia32_ucomilt
__builtin_ia32_ucomigt
__builtin_ia32_ucomige
__builtin_ia32_ucomineq
--output-class-directory=
Data extends pass the end of the section
/../include/c++/
requested address not in section
m68kelf
__builtin_ia32_comisdeq
__builtin_ia32_comisdlt
__builtin_ia32_comisdle
__builtin_ia32_comisdgt
__builtin_ia32_comisdge
__builtin_ia32_comisdneq
__builtin_ia32_ucomisdeq
__builtin_ia32_ucomisdlt
__builtin_ia32_ucomisdgt
__builtin_ia32_ucomisdge
__builtin_ia32_ucomisdneq
__builtin_ia32_cmpltps
__builtin_ia32_cmpleps
__builtin_ia32_cmpunordps
__builtin_ia32_cmpnltps
__builtin_ia32_cmpnleps
__builtin_ia32_cmpordps
__builtin_ia32_cmpeqss
__builtin_ia32_cmpltss
__builtin_ia32_cmpless
__builtin_ia32_cmpunordss
ThreadAttr
__builtin_ia32_cmpneqss
__builtin_ia32_cmpnltss
__builtin_ia32_cmpnless
__builtin_ia32_cmpordss
.tmp
fixed
-%%%%%%%%
__builtin_ia32_minps
__builtin_ia32_maxps
__builtin_ia32_minss
__builtin_ia32_maxss
unsupported file type
elf64ppc
_OBJC_IVAR_$_
__builtin_ia32_cmpeqpd
__builtin_ia32_cmpltpd
__builtin_ia32_cmplepd
__builtin_ia32_cmpunordpd
__builtin_ia32_cmpneqpd
__builtin_ia32_cmpnltpd
__builtin_ia32_cmpnlepd
__builtin_ia32_cmpordpd
__builtin_ia32_cmpltsd
__builtin_ia32_cmplesd
__builtin_ia32_cmpunordsd
__builtin_ia32_cmpnltsd
__builtin_ia32_cmpnlesd
__builtin_ia32_cmpordsd
__builtin_ia32_minpd
__builtin_ia32_maxpd
__builtin_ia32_minsd
__builtin_ia32_maxsd
__builtin_ia32_pmulhw128
__builtin_ia32_pavgb128
__builtin_ia32_pavgw128
__builtin_ia32_packsswb128
__builtin_ia32_packssdw128
__builtin_ia32_packuswb128
__builtin_ia32_pmulhuw128
OiV2OiIi
__builtin_ia32_vec_ext_v4si
iV4iIi
__builtin_ia32_vec_ext_v8hi
sV8sIi
__builtin_ia32_vec_set_v8hi
V8sV8ssIi
__builtin_ia32_addsubps
__builtin_ia32_addsubpd
__builtin_ia32_haddps
__builtin_ia32_hsubps
__builtin_ia32_hsubpd
__builtin_ia32_phaddw128
__builtin_ia32_phaddsw128
__builtin_ia32_phsubw128
__builtin_ia32_phsubd128
__builtin_ia32_pmaddubsw128
V8sV16cV16c
__builtin_ia32_pmulhrsw128
__builtin_ia32_pshufb128
__builtin_ia32_psignb128
__builtin_ia32_psignw128
__builtin_ia32_psignd128
_mm_setcsr
xmmintrin.h
__builtin_ia32_stmxcsr
__builtin_ia32_cvtss2si
__builtin_ia32_cvttss2si
__builtin_ia32_movmskps
_OBJC_EHTYPE_$_
full
___Z
elf32btsmipn32
nV:128:
__builtin_ia32_sfence
_mm_sfence
__builtin_ia32_rcpps
__builtin_ia32_rcpss
__builtin_ia32_rsqrtps
__builtin_ia32_rsqrtss
__builtin_ia32_sqrtps
__builtin_ia32_shufps
__builtin_ia32_maskmovdqu
vV16cV16cc*
__builtin_ia32_pmovmskb128
iV16c
__builtin_ia32_movnti
vi*i
__builtin_ia32_pshufd
V4iV4iIi
__builtin_ia32_pshuflw
V8sV8sIi
__builtin_ia32_pshufhw
__builtin_ia32_psadbw128
V2OiV16cV16c
swift_demangle
 match(
/usr/lib/swift/libswiftCore.dylib
elf32ltsmipn32
mach-o dynamic library stub
-finline-hint-functions
mach-o dynamic library
-fno-constant-nsnumber-literals
elf64ltsmip
 (spi)
__builtin_ia32_sqrtpd
__builtin_ia32_sqrtsd
__builtin_ia32_shufpd
__builtin_ia32_cvtpd2dq
__builtin_ia32_cvtpd2ps
__builtin_ia32_cvttpd2dq
__builtin_ia32_cvtsd2si
__builtin_ia32_cvtsd2ss
V4fV4fV2d
__builtin_ia32_cvtps2dq
__builtin_ia32_cvttps2dq
__builtin_ia32_clflush
_mm_clflush
emmintrin.h
_mm_lfence
__builtin_ia32_mfence
_mm_mfence
_mm_pause
__builtin_ia32_pmuludq128
V2OiV4iV4i
__builtin_ia32_psrad128
__builtin_ia32_psrlw128
__builtin_ia32_psrld128
__builtin_ia32_psrlq128
V2OiV2OiV2Oi
__builtin_ia32_psllw128
__builtin_ia32_pslld128
__builtin_ia32_psllwi128
V8sV8si
__builtin_ia32_pslldi128
__builtin_ia32_psllqi128
V2OiV2Oii
__builtin_ia32_psrlwi128
__builtin_ia32_psrlqi128
__builtin_ia32_psrawi128
__builtin_ia32_psradi128
__builtin_ia32_pmaddwd128
__builtin_ia32_pslldqi128_byteshift
V2OiV2OiIi
__builtin_ia32_psrldqi128_byteshift
__builtin_ia32_mwait
__builtin_ia32_lddqu
V16ccC*
V16cV16cV16cIi
__builtin_ia32_insertps128
V4fV4fV4fIc
__builtin_ia32_pblendw128
V8sV8sV8sIi
__builtin_ia32_blendpd
__builtin_ia32_blendps
__builtin_ia32_blendvpd
__builtin_ia32_blendvps
__builtin_ia32_packusdw128
__builtin_ia32_roundps
V4fV4fIi
__builtin_ia32_roundss
__builtin_ia32_roundpd
V2dV2dIi
__builtin_ia32_dpps
  categories:
 [[clang::amdgpu_num_sgpr
  hasExceptionAttribute: 
-mcpu=cortex-a57
    attributes:
__builtin_ia32_dppd
V2dV2dV2dIc
__builtin_ia32_ptestz128
iV2OiV2Oi
__builtin_ia32_ptestc128
__builtin_ia32_ptestnzc128
__builtin_ia32_mpsadbw128
V16cV16cV16cIc
__builtin_ia32_vec_ext_v16qi
cV16cIi
__builtin_ia32_vec_set_v16qi
    isDynamic: 
ABORT
 __attribute__((interrupt
- name: 
V16cV16ccIi
__builtin_ia32_vec_set_v4si
V4iV4iiIi
__builtin_ia32_pcmpistrm128
enums:
+march=mips32r2
  - name: 
__builtin_ia32_pcmpistri128
iV16cV16cIc
__builtin_ia32_pcmpestrm128
V16cV16ciV16ciIc
__builtin_ia32_pcmpestri128
iV16ciV16ciIc
__builtin_ia32_pcmpistria128
__builtin_ia32_pcmpistric128
__builtin_ia32_pcmpistris128
__builtin_ia32_pcmpistriz128
__builtin_ia32_pcmpestria128
__builtin_ia32_pcmpestrio128
__builtin_ia32_pcmpestris128
__builtin_ia32_pcmpestriz128
__builtin_ia32_crc32hi
__builtin_ia32_crc32si
__builtin_ia32_extrqi
V2OiV2OiIcIc
__builtin_ia32_extrq
V2OiV2OiV16c
__builtin_ia32_insertqi
__builtin_ia32_insertq
__builtin_ia32_movntsd
vd*V2d
vf*V4f
__builtin_ia32_aesenc128
__builtin_ia32_aesenclast128
__builtin_ia32_aesdeclast128
__builtin_ia32_aesimc128
V2OiV2Oi
__builtin_ia32_aeskeygenassist128
V2OiV2OiIc
__builtin_ia32_aesenc256
V4OiV4OiV4Oi
V8OiV8OiV8Oi
avx512f,vaes
__builtin_ia32_aesenclast256
__builtin_ia32_aesdec256
__builtin_ia32_aesdec512
__builtin_ia32_aesdeclast256
globals:
stub
__builtin_ia32_aesdeclast512
__builtin_ia32_vgf2p8affineinvqb_v16qi
__builtin_ia32_vgf2p8affineinvqb_v32qi
V32cV32cV32cIc
avx,gfni
__builtin_ia32_vgf2p8affineinvqb_v64qi
V64cV64cV64cIc
avx512bw,gfni
__builtin_ia32_vgf2p8affineqb_v32qi
__builtin_ia32_vgf2p8affineqb_v64qi
__builtin_ia32_vgf2p8mulb_v16qi
V32cV32cV32c
__builtin_ia32_vgf2p8mulb_v64qi
V64cV64cV64c
V2OiV2OiV2OiIc
__builtin_ia32_pclmulqdq256
V4OiV4OiV4OiIc
__builtin_ia32_pclmulqdq512
V8OiV8OiV8OiIc
avx512f,vpclmulqdq
__builtin_ia32_addsubpd256
__builtin_ia32_addsubps256
V8fV8fV8f
__builtin_ia32_haddpd256
__builtin_ia32_hsubpd256
__builtin_ia32_haddps256
__builtin_ia32_maxpd256
expected filetype
exclusive_lock_function
/mips-r2-hard-musl
instanceMethods
__builtin_ia32_maxps256
__builtin_ia32_minpd256
__builtin_ia32_minps256
__builtin_ia32_vpermilvarpd
V2dV2dV2Oi
__builtin_ia32_vpermilvarps
__builtin_ia32_vpermilvarpd256
V4dV4dV4Oi
conformed protocol should be a string
 __attribute__((alias
Expect to be JSON Object
-pch-through-hdrstop-create
Unknown access control 
__builtin_ia32_vpermilvarps256
V8fV8fV8i
__builtin_ia32_blendpd256
V4dV4dV4dIi
V8fV8fV8fIi
__builtin_ia32_blendvpd256
V4dV4dV4dV4d
V8fV8fV8fV8f
__builtin_ia32_shufpd256
__builtin_ia32_shufps256
__builtin_ia32_dpps256
V8fV8fV8fIc
__builtin_ia32_cmppd
__builtin_ia32_cmppd256
__builtin_ia32_cmpps
__builtin_ia32_cmpps256
__builtin_ia32_cmpsd
__builtin_ia32_vextractf128_pd256
V2dV4dIi
__builtin_ia32_vextractf128_ps256
__builtin_ia32_vextractf128_si256
V4iV8iIi
__builtin_ia32_cvtpd2ps256
V4fV4d
__builtin_ia32_cvtps2dq256
V8iV8f
__builtin_ia32_cvttpd2dq256
__builtin_ia32_cvtpd2dq256
__builtin_ia32_cvttps2dq256
__builtin_ia32_vperm2f128_pd256
__builtin_ia32_vperm2f128_si256
V8iV8iV8iIi
__builtin_ia32_vpermilpd
__builtin_ia32_vpermilpd256
V4dV4dIi
__builtin_ia32_vpermilps256
V8fV8fIi
__builtin_ia32_vinsertf128_pd256
V4dV4dV2dIi
__builtin_ia32_vinsertf128_ps256
__builtin_ia32_vinsertf128_si256
V8iV8iV4iIi
__builtin_ia32_sqrtpd256
__builtin_ia32_sqrtps256
V8fV8f
__builtin_ia32_rsqrtps256
package
/micromips
malformed deprecated version
__builtin_ia32_rcpps256
__builtin_ia32_roundpd256
__builtin_ia32_roundps256
__builtin_ia32_vtestzpd
__builtin_ia32_vtestcpd
__builtin_ia32_vtestnzcpd
__builtin_ia32_vtestzps
__builtin_ia32_vtestcps
__builtin_ia32_vtestzpd256
iV4dV4d
__builtin_ia32_vtestcpd256
__builtin_ia32_vtestzps256
iV8fV8f
__builtin_ia32_vtestcps256
__builtin_ia32_vtestnzcps256
__builtin_ia32_ptestz256
iV4OiV4Oi
__builtin_ia32_ptestc256
__builtin_ia32_ptestnzc256
__builtin_ia32_movmskpd256
iV4d
__builtin_ia32_movmskps256
__builtin_ia32_vzeroall
__builtin_ia32_vzeroupper
__builtin_ia32_lddqu256
nV:256:
__builtin_ia32_maskloadpd
V2dV2dC*V2Oi
malformed introduced version
 [[gnu::alloc_size
line
SPIAvailable
-fno-coro-aligned-allocation
file
Disable recovery for specified sanitizers
missing name in json api object
+m64
+march=mips64r2
globals
__builtin_ia32_maskloadps
V4fV4fC*V4i
__builtin_ia32_maskloadpd256
V4dV4dC*V4Oi
__builtin_ia32_maskloadps256
V8fV8fC*V8i
__builtin_ia32_maskstorepd
vV2d*V2OiV2d
vV4f*V4iV4f
__builtin_ia32_maskstorepd256
vV4d*V4OiV4d
vV8f*V8iV8f
__builtin_ia32_vec_ext_v32qi
cV32cIi
sV16sIi
__builtin_ia32_vec_ext_v8si
iV8iIi
__builtin_ia32_vec_set_v32qi
V32cV32ccIi
__builtin_ia32_vec_set_v16hi
V16sV16ssIi
V8iV8iiIi
__builtin_ia32_mpsadbw256
__builtin_ia32_packsswb256
__builtin_ia32_packssdw256
V16sV8iV8i
__builtin_ia32_packuswb256
__builtin_ia32_palignr256
V32cV32cV32cIi
__builtin_ia32_pavgb256
__builtin_ia32_pavgw256
V16sV16sV16s
__builtin_ia32_pblendvb256
V32cV32cV32cV32c
V16sV16sV16sIi
__builtin_ia32_phaddw256
__builtin_ia32_phaddd256
__builtin_ia32_phaddsw256
__builtin_ia32_phsubw256
__builtin_ia32_phsubd256
__builtin_ia32_pmaddubsw256
V16sV32cV32c
__builtin_ia32_pmaddwd256
V8iV16sV16s
__builtin_ia32_pmovmskb256
iV32c
__builtin_ia32_pmuldq256
__builtin_ia32_pmulhrsw256
__builtin_ia32_pmulhuw256
__builtin_ia32_pmulhw256
__builtin_ia32_psadbw256
V4OiV32cV32c
__builtin_ia32_pshufb256
project
__forceinline
new API %select{enum|enum constant|typedef}0 '%1' for target '%2'
+muclibc
new %select{frontend API|library '%2'}0 from project '%1' for target '%3'
__builtin_ia32_pshufd256
V8iV8iIi
__builtin_ia32_pshuflw256
V16sV16sIi
__builtin_ia32_pshufhw256
__builtin_ia32_psignb256
__builtin_ia32_psignw256
__builtin_ia32_psignd256
V16sV16si
__builtin_ia32_psllw256
V16sV16sV8s
V4OiV4OiIi
__builtin_ia32_pslldi256
V8iV8ii
duplicated ObjC interface '%0' inside SDKDB
 [[clang::pointer_with_type_tag
conflicting install name '%0' from project '%1' and '%2'
conflicting declaration for exported symbol '%0'
__builtin_ia32_pslld256
V8iV8iV4i
__builtin_ia32_psllqi256
V4OiV4Oii
__builtin_ia32_psllq256
V4OiV4OiV2Oi
__builtin_ia32_psrawi256
__builtin_ia32_psraw256
runpath search paths do not match: '%0' (provided) vs '%1' (found)
conflicting availability info for %0: %1 is not the same as %2
/sof
reexport_install_name is deprecated, use reexport_framework reexport_l or reexport_library
__builtin_ia32_psradi256
__builtin_ia32_psrad256
__builtin_ia32_psrldqi256_byteshift
__builtin_ia32_psrlwi256
__builtin_ia32_psrldi256
__builtin_ia32_psrld256
__builtin_ia32_psrlqi256
__builtin_ia32_pblendd128
V4iV4iV4iIi
__builtin_ia32_pblendd256
__builtin_ia32_permvarsi256
__builtin_ia32_permdf256
__builtin_ia32_permvarsf256
__builtin_ia32_permti256
__builtin_ia32_permdi256
__builtin_ia32_extract128i256
V2OiV4OiIi
V4OiV4OiV2OiIi
__builtin_ia32_maskloadd256
V8iV8iC*V8i
V4OiV4OiC*V4Oi
__builtin_ia32_maskloadd
V4iV4iC*V4i
__builtin_ia32_maskloadq
V2OiV2OiC*V2Oi
__builtin_ia32_maskstored256
vV8i*V8iV8i
vV4Oi*V4OiV4Oi
__builtin_ia32_maskstored
vV4i*V4iV4i
vV2Oi*V2OiV2Oi
__builtin_ia32_psllv8si
__builtin_ia32_psllv4si
__builtin_ia32_psllv2di
__builtin_ia32_psrav8si
__builtin_ia32_psrav4si
__builtin_ia32_psrlv8si
__builtin_ia32_psrlv4si
__builtin_ia32_psrlv4di
__builtin_ia32_psrlv2di
V2dV2ddC*V4iV2dIc
__builtin_ia32_gatherd_pd256
V4dV4ddC*V4iV4dIc
 __attribute__((assert_capability
interface %0 has no corresponding super class here
__builtin_ia32_gatherq_pd
V2dV2ddC*V2OiV2dIc
__builtin_ia32_gatherq_pd256
V4dV4ddC*V4OiV4dIc
V4fV4ffC*V4iV4fIc
__builtin_ia32_gatherd_ps256
V8fV8ffC*V8iV8fIc
__builtin_ia32_gatherq_ps
V4fV4ffC*V2OiV4fIc
__builtin_ia32_gatherq_ps256
V4fV4ffC*V4OiV4fIc
V2OiV2OiOiC*V4iV2OiIc
__builtin_ia32_gatherd_q256
V4OiV4OiOiC*V4iV4OiIc
V2OiV2OiOiC*V2OiV2OiIc
__builtin_ia32_gatherq_q256
V4OiV4OiOiC*V4OiV4OiIc
%0 has no corresponding protocol here
/micromips/64
__builtin_ia32_gatherd_d
V4iV4iiC*V4iV4iIc
__builtin_ia32_gatherd_d256
V8iV8iiC*V8iV8iIc
__builtin_ia32_gatherq_d
V4iV4iiC*V2OiV4iIc
__builtin_ia32_gatherq_d256
V4iV4iiC*V4OiV4iIc
V8sV4fIi
__builtin_ia32_vcvtps2ph256
V8sV8fIi
field %0 has type %1 here
 __attribute__((assert_exclusive_lock
%0 has field %1 here
field has name %0 here
__builtin_ia32_vcvtph2ps
V4fV8s
__builtin_ia32_vcvtph2ps256
V8fV8s
enumerator %0 with value %1 here
.*sof/nan2008
enum has type %0 here
__builtin_ia32_rdrand16_step
UiUs*
__builtin_ia32_rdrand32_step
__builtin_ia32_fxrstor
__builtin_ia32_fxsave
__builtin_ia32_xsave
vv*UOi
__builtin_ia32_xrstor
UOiUi
_xgetbv
UWiUi
__builtin_ia32_xsetbv
vUiUOi
_xsetbv
__builtin_ia32_xsaveopt
__builtin_ia32_xrstors
__builtin_ia32_xsavec
__builtin_ia32_xsaves
__builtin_ia32_incsspd
__builtin_ia32_rdsspd
__builtin_ia32_saveprevssp
__builtin_ia32_wrssd
vUiv*
__builtin_ia32_wrussd
__builtin_ia32_clrssbsy
__builtin_ia32_clflushopt
__builtin_ia32_clwb
__builtin_ia32_wbnoinvd
__builtin_ia32_addcarryx_u32
UcUcUiUiUi*
__builtin_ia32_subborrow_u32
__builtin_ia32_rdseed16_step
__builtin_ia32_rdseed32_step
__builtin_ia32_lzcnt_u16
__builtin_ia32_bextr_u32
__builtin_ia32_tzcnt_u16
__builtin_ia32_tzcnt_u32
__builtin_ia32_pdep_si
__builtin_ia32_pext_si
__builtin_ia32_bextri_u32
__builtin_ia32_slwpcb
__builtin_ia32_lwpins32
UcUiUiIUi
__builtin_ia32_lwpval32
vUiUiIUi
__builtin_ia32_sha1rnds4
V4iV4iV4iIc
__builtin_ia32_sha1msg1
__builtin_ia32_sha1msg2
__builtin_ia32_sha256rnds2
declaration has name %0 here
 __attribute__((assume
 __attribute__((btf_decl_tag
parent umbrella missing from %0: '%1'
__builtin_ia32_sha256msg1
__builtin_ia32_sha256msg2
__builtin_ia32_vfmaddps
fma|fma4
__builtin_ia32_vfmaddpd
__builtin_ia32_vfmaddss3
__builtin_ia32_vfmaddsd3
__builtin_ia32_vfmaddss
__builtin_ia32_vfmaddsd
__builtin_ia32_vfmaddsubps
__builtin_ia32_vfmaddsubpd
__builtin_ia32_vfmaddps256
__builtin_ia32_vfmaddsubps256
__builtin_ia32_vfmaddsubpd256
__builtin_ia32_vfmaddpd512_mask
__builtin_ia32_vfmaddpd512_maskz
__builtin_ia32_vfmaddpd512_mask3
__builtin_ia32_vfmsubpd512_mask3
parent umbrella does not match: '%0' (provided) vs '%1' (found)
/mips-r2-hard-nan2008-uclibc
only one target can be specified
__builtin_ia32_vfmaddps512_mask
V16fV16fV16fV16fUsIi
__builtin_ia32_vfmaddps512_maskz
__builtin_ia32_vfmaddps512_mask3
__builtin_ia32_vfmsubps512_mask3
__builtin_ia32_vfmaddsubpd512_mask
__builtin_ia32_vfmaddsubpd512_maskz
__builtin_ia32_vfmaddsubpd512_mask3
no output file specified
 [[clang::blocks
no matching target found for target variant '%0'
-plugin-arg-
no install name specified: add -install_name <path>
/mipsel-r2-hard-uclibc
no framework/dynamic library found
__builtin_ia32_vfmsubaddpd512_mask3
__builtin_ia32_vfmaddsubps512_mask
__builtin_ia32_vfmaddsubps512_maskz
__builtin_ia32_vfmaddsubps512_mask3
__builtin_ia32_vpmacssww
__builtin_ia32_vpmacsww
__builtin_ia32_vpmacsswd
__builtin_ia32_vpmacswd
__builtin_ia32_vpmacssdd
__builtin_ia32_vpmacsdd
__builtin_ia32_vpmacssdql
V2OiV4iV4iV2Oi
__builtin_ia32_vpmacsdql
__builtin_ia32_vpmacssdqh
__builtin_ia32_vpmadcsswd
__builtin_ia32_vpmadcswd
__builtin_ia32_vphaddbw
V4iV16c
__builtin_ia32_vphaddbq
V2OiV16c
__builtin_ia32_vphaddwq
V2OiV8s
__builtin_ia32_vphadddq
V2OiV4i
__builtin_ia32_vphaddubw
__builtin_ia32_vphaddubd
__builtin_ia32_vphaddubq
__builtin_ia32_vphadduwq
__builtin_ia32_vphaddudq
__builtin_ia32_vphsubbw
__builtin_ia32_vphsubdq
__builtin_ia32_vpperm
__builtin_ia32_vprotb
__builtin_ia32_vprotd
__builtin_ia32_vprotq
__builtin_ia32_vprotbi
V16cV16cIc
__builtin_ia32_vprotwi
V8sV8sIc
__builtin_ia32_vprotdi
__builtin_ia32_vprotqi
__builtin_ia32_vpshlb
__builtin_ia32_vpshlw
__builtin_ia32_vpshlq
__builtin_ia32_vpshab
__builtin_ia32_vpshaw
__builtin_ia32_vpshaq
__builtin_ia32_vpcomub
__builtin_ia32_vpcomuw
V8sV8sV8sIc
__builtin_ia32_vpcomud
__builtin_ia32_vpcomuq
__builtin_ia32_vpcomb
__builtin_ia32_vpcomd
__builtin_ia32_vpcomq
__builtin_ia32_vpermil2pd
cannot generate SDKDB: '%0'
input '%0' is not a directory
/../usr/include
cannot find %0: %1
cannot find re-exported library '%0'
V2dV2dV2dV2OiIc
__builtin_ia32_vpermil2pd256
V4dV4dV4dV4OiIc
__builtin_ia32_vpermil2ps
__builtin_ia32_vpermil2ps256
V8fV8fV8fV8iIc
__builtin_ia32_vfrczss
__builtin_ia32_vfrczsd
__builtin_ia32_vfrczps
__builtin_ia32_vfrczpd
__builtin_ia32_vfrczps256
__builtin_ia32_xbegin
__builtin_ia32_xend
__builtin_ia32_xabort
__builtin_ia32_xtest
__builtin_ia32_rdpmc
UOii
cannot create directory '%0': %1
/../../../../mips-mti-linux-gnu/lib
 [[clang::cfi_canonical_jump_table
ApplicationExtensionSafe flag does not match: '%0' (provided) vs '%1' (found)
-funique-internal-linkage-names
allowable client missing from %0: '%1'
/mips-r6-hard
-iquote
__builtin_ia32_rdtsc
__rdtsc
__builtin_ia32_rdtscp
UOiUi*
__builtin_ia32_rdpid
__builtin_ia32_rdpru
__builtin_ia32_rdpkru
__builtin_ia32_sqrtpd512
V8dV8dIi
__builtin_ia32_sqrtps512
__builtin_ia32_rsqrt14sd_mask
V2dV2dV2dV2dUc
__builtin_ia32_rsqrt14ss_mask
__builtin_ia32_rsqrt14pd512_mask
V8dV8dV8dUc
__builtin_ia32_rsqrt14ps512_mask
V16fV16fV16fUs
__builtin_ia32_rsqrt28sd_round_mask
V2dV2dV2dV2dUcIi
__builtin_ia32_rsqrt28ss_round_mask
__builtin_ia32_rsqrt28pd_mask
V8dV8dV8dUcIi
__builtin_ia32_rsqrt28ps_mask
__builtin_ia32_rcp14sd_mask
__builtin_ia32_rcp14ss_mask
__builtin_ia32_rcp14pd512_mask
__builtin_ia32_rcp28sd_round_mask
__builtin_ia32_rcp28ss_round_mask
__builtin_ia32_rcp28pd_mask
__builtin_ia32_rcp28ps_mask
__builtin_ia32_exp2pd_mask
__builtin_ia32_exp2ps_mask
__builtin_ia32_cvttps2dq512_mask
__builtin_ia32_cvttps2udq512_mask
__builtin_ia32_cvttpd2dq512_mask
V8iV8dV8iUcIi
__builtin_ia32_cmpps512_mask
UsV16fV16fIiUsIi
__builtin_ia32_cmpps256_mask
__builtin_ia32_cmpps128_mask
UcV4fV4fIiUc
__builtin_ia32_cmppd512_mask
UcV8dV8dIiUcIi
__builtin_ia32_cmppd256_mask
UcV4dV4dIiUc
__builtin_ia32_cmppd128_mask
__builtin_ia32_rndscaleps_mask
V16fV16fIiV16fUsIi
__builtin_ia32_rndscalepd_mask
__builtin_ia32_cvtps2dq512_mask
__builtin_ia32_cvtpd2dq512_mask
__builtin_ia32_cvtps2udq512_mask
__builtin_ia32_minps512
V16fV16fV16fIi
__builtin_ia32_minpd512
V8dV8dV8dIi
__builtin_ia32_maxps512
__builtin_ia32_maxpd512
__builtin_ia32_cvtdq2ps512_mask
-std=
Note: the reproducer is intended to help users to debug the issue under a more familiar context using clang.
V16fV16iV16fUsIi
__builtin_ia32_cvtudq2ps512_mask
__builtin_ia32_cvtpd2ps512_mask
V8fV8dV8fUcIi
-resource-dir
 __attribute__((global
 Headers:
__builtin_ia32_vcvtps2ph512_mask
V16sV16fIiV16sUs
__builtin_ia32_vcvtph2ps512_mask
V16fV16sV16fUsIi
tapi_include_headers
/soft-float
 (tapi-1500.0.12.6)
__builtin_ia32_pmuldq512
V8OiV16iV16i
__builtin_ia32_pmuludq512
__builtin_ia32_loaddqusi512_mask
V16iiC*V16iUs
nV:512:
__builtin_ia32_loaddqudi512_mask
V8OiOiC*V8OiUc
TAPI version 15.0.0
global
/micromips/nan2008
bridge-objc-class
__builtin_ia32_loadups512_mask
V16ffC*V16fUs
__builtin_ia32_loadaps512_mask
V16fV16fC*V16fUs
V8ddC*V8dUc
__builtin_ia32_loadapd512_mask
V8dV8dC*V8dUc
vOi*V8OiUc
__builtin_ia32_storedqusi512_mask
vi*V16iUs
__builtin_ia32_storeupd512_mask
vd*V8dUc
__builtin_ia32_storeapd512_mask
vV8d*V8dUc
vf*V16fUs
__builtin_ia32_storeaps512_mask
vV16f*V16fUs
V8OiV8OiV8OiIi
__builtin_ia32_alignd512
V16iV16iV16iIi
__builtin_ia32_alignd256
__builtin_ia32_alignq128
V2OiV2OiV2OiIi
__builtin_ia32_alignq256
__builtin_ia32_extractf64x4_mask
V4dV8dIiV4dUc
__builtin_ia32_extractf32x4_mask
__builtin_ia32_vpdpbusd128
avx512vl,avx512vnni|avxvnni
__builtin_ia32_vpdpbusd256
__builtin_ia32_vpdpbusd512
__builtin_ia32_vpdpbusds128
__builtin_ia32_vpdpbusds256
__builtin_ia32_vpdpwssd128
__builtin_ia32_vpdpwssd256
__builtin_ia32_vpdpwssd512
__builtin_ia32_vpdpwssds128
__builtin_ia32_vpdpwssds256
__builtin_ia32_vpdpwssds512
__builtin_ia32_gather3div2df
__builtin_ia32_gather3div2di
V2OiV2OivC*V2OiUcIi
__builtin_ia32_gather3div4df
__builtin_ia32_gather3div4di
V4OiV4OivC*V4OiUcIi
__builtin_ia32_gather3div4sf
V4fV4fvC*V2OiUcIi
__builtin_ia32_gather3div4si
V4iV4ivC*V2OiUcIi
__builtin_ia32_gather3div8sf
V4fV4fvC*V4OiUcIi
__builtin_ia32_gather3div8si
V4iV4ivC*V4OiUcIi
__builtin_ia32_gather3siv2df
__builtin_ia32_gather3siv2di
V2OiV2OivC*V4iUcIi
__builtin_ia32_gather3siv4df
__builtin_ia32_gather3siv4di
V4OiV4OivC*V4iUcIi
__builtin_ia32_gather3siv4sf
__builtin_ia32_gather3siv4si
V4iV4ivC*V4iUcIi
__builtin_ia32_gather3siv8sf
V8fV8fvC*V8iUcIi
__builtin_ia32_gather3siv8si
V8iV8ivC*V8iUcIi
__builtin_ia32_gathersiv8df
__builtin_ia32_gathersiv16sf
V16fV16fvC*V16iUsIi
__builtin_ia32_gatherdiv8df
ignore-objc-class
/armv7-a
swift-api-extract: 
Permit merging of identical functions when optimizing.
swiftapi
-fno-crash-diagnostics
tapi_includes
unable to find 'swift-api-extract' in PATH
 __attribute__((capability
Library
/System/iOSSupport/System/Library/PrivateFrameworks
V8dV8dvC*V8OiUcIi
__builtin_ia32_gatherdiv16sf
V8fV8fvC*V8OiUcIi
__builtin_ia32_gathersiv8di
System
+mthumb
include
V8OiV8OivC*V8iUcIi
__builtin_ia32_gathersiv16si
V16iV16ivC*V16iUsIi
__builtin_ia32_gatherdiv8di
V8OiV8OivC*V8OiUcIi
__builtin_ia32_gatherdiv16si
V8iV8ivC*V8OiUcIi
__builtin_ia32_scattersiv8df
__builtin_ia32_scattersiv16sf
vv*UsV16iV16fIi
__builtin_ia32_scatterdiv8df
__builtin_ia32_scatterdiv16sf
vv*UcV8OiV8fIi
__builtin_ia32_scattersiv8di
__builtin_ia32_scattersiv16si
vv*UsV16iV16iIi
__builtin_ia32_scatterdiv8di
vv*UcV8OiV8OiIi
__builtin_ia32_scatterdiv16si
vv*UcV8OiV8iIi
__builtin_ia32_gatherpfdpd
__builtin_ia32_gatherpfdps
vUsV16ivC*IiIi
__builtin_ia32_gatherpfqpd
__builtin_ia32_gatherpfqps
__builtin_ia32_scatterpfdpd
vUcV8iv*IiIi
vUsV16iv*IiIi
__builtin_ia32_scatterpfqpd
vUcV8Oiv*IiIi
__builtin_ia32_scatterpfqps
__builtin_ia32_knotqi
UcUc
__builtin_ia32_knothi
__builtin_ia32_knotdi
UOiUOi
__builtin_ia32_cmpb128_mask
avx512vl,avx512bw
__builtin_ia32_cmpd128_mask
UcV4iV4iIiUc
UcV2OiV2OiIiUc
__builtin_ia32_cmpw128_mask
UcV8sV8sIiUc
__builtin_ia32_cmpb256_mask
UiV32cV32cIiUi
__builtin_ia32_cmpd256_mask
UcV8iV8iIiUc
UcV4OiV4OiIiUc
__builtin_ia32_cmpw256_mask
UsV16sV16sIiUs
UOiV64cV64cIiUOi
__builtin_ia32_cmpd512_mask
UsV16iV16iIiUs
machine
capability
 [[gnu::const
OVERVIEW: 
Experimental Commands:
  sdkdb         Generate SDKDB from SDKContent
  api-verify    Compare interfaces between frameworks
__builtin_ia32_cmpq512_mask
UcV8OiV8OiIiUc
__builtin_ia32_cmpw512_mask
UiV32sV32sIiUi
__builtin_ia32_ucmpb128_mask
__builtin_ia32_ucmpd128_mask
__builtin_ia32_ucmpq128_mask
__builtin_ia32_ucmpw128_mask
__builtin_ia32_ucmpd256_mask
__builtin_ia32_ucmpq256_mask
__builtin_ia32_ucmpw256_mask
__builtin_ia32_ucmpd512_mask
__builtin_ia32_ucmpq512_mask
__builtin_ia32_ucmpw512_mask
api-verify
 [[gnu::__const
__builtin_ia32_packssdw512
V32sV16iV16i
__builtin_ia32_packsswb512
V64cV32sV32s
__builtin_ia32_packusdw512
__builtin_ia32_packuswb512
__builtin_ia32_pavgb512
__builtin_ia32_pavgw512
RC_XBS
constinit
.conf
Print the full library path of <file>
config
march=ck807
15.0.0
V32sV32sV32s
__builtin_ia32_pshufb512
__builtin_ia32_vpconflictdi_128
avx512cd,avx512vl
V4OiV4Oi
__builtin_ia32_vpconflictsi_128
__builtin_ia32_vpconflictsi_256
__builtin_ia32_vpconflictdi_512
V8OiV8Oi
__builtin_ia32_vpconflictsi_512
__builtin_ia32_vplzcntd_512
__builtin_ia32_vplzcntq_512
__builtin_ia32_vpopcntd_128
avx512vpopcntdq,avx512vl
__builtin_ia32_vpopcntd_256
__builtin_ia32_vpopcntq_256
__builtin_ia32_vpopcntd_512
__builtin_ia32_vpopcntb_128
V16cV16c
avx512vl,avx512bitalg
__builtin_ia32_vpopcntb_256
V32cV32c
__builtin_ia32_vpopcntw_256
V16sV16s
__builtin_ia32_vpopcntb_512
V64cV64c
__builtin_ia32_vpopcntw_512
__builtin_ia32_vpshufbitqmb128_mask
UsV16cV16cUs
__builtin_ia32_vpshufbitqmb256_mask
__builtin_ia32_vpshufbitqmb512_mask
UOiV64cV64cUOi
__builtin_ia32_pmulhrsw512
__builtin_ia32_pmulhw512
__builtin_ia32_addpd512
__builtin_ia32_addps512
__builtin_ia32_divpd512
__builtin_ia32_divps512
__builtin_ia32_mulpd512
__builtin_ia32_mulps512
__builtin_ia32_subps512
__builtin_ia32_pmaddubsw512
V32sV64cV64c
V16iV32sV32s
__builtin_ia32_addss_round_mask
__builtin_ia32_divss_round_mask
__builtin_ia32_subss_round_mask
__builtin_ia32_maxss_round_mask
__builtin_ia32_minss_round_mask
__builtin_ia32_addsd_round_mask
__builtin_ia32_divsd_round_mask
__builtin_ia32_mulsd_round_mask
__builtin_ia32_subsd_round_mask
__builtin_ia32_minsd_round_mask
__builtin_ia32_compressdf128_mask
V2dV2dV2dUc
__builtin_ia32_compressdf256_mask
V4dV4dV4dUc
__builtin_ia32_compressdi128_mask
V2OiV2OiV2OiUc
binary file
+soft
tapi option
__builtin_ia32_compressdi256_mask
V4OiV4OiV4OiUc
__builtin_ia32_compresshi128_mask
V8sV8sV8sUc
avx512vl,avx512vbmi2
__builtin_ia32_compresshi256_mask
V16sV16sV16sUs
__builtin_ia32_compressqi128_mask
__builtin_ia32_compressqi256_mask
V32cV32cV32cUi
__builtin_ia32_compresssf128_mask
__builtin_ia32_compresssf256_mask
V8fV8fV8fUc
__builtin_ia32_compresssi128_mask
invalid alias list
 [[gnu::deprecated
unable to find 'clang' in PATH
Disable trapping for specified sanitizers
cannot find 'clang' in toolchain directory. Looking for 'clang' in PATH instead.
/ck801
+march=ck801
unable to create temporary stderr file
V4iV4iV4iUc
__builtin_ia32_compresssi256_mask
V8iV8iV8iUc
__builtin_ia32_compressstoredf128_mask
vV2d*V2dUc
__builtin_ia32_compressstoredf256_mask
vV4d*V4dUc
__builtin_ia32_compressstoredi128_mask
__builtin_ia32_compressstoredi256_mask
vV4Oi*V4OiUc
__builtin_ia32_compressstorehi128_mask
__builtin_ia32_compressstorehi256_mask
vV16s*V16sUs
__builtin_ia32_compressstoreqi128_mask
__builtin_ia32_compressstoreqi256_mask
vV32c*V32cUi
__builtin_ia32_compressstoresf128_mask
vV4f*V4fUc
__builtin_ia32_compressstoresf256_mask
vV8f*V8fUc
__builtin_ia32_compressstoresi128_mask
__builtin_ia32_compressstoresi256_mask
vV8i*V8iUc
__builtin_ia32_cvtpd2dq128_mask
__builtin_ia32_cvtpd2ps_mask
V4fV2dV4fUc
__builtin_ia32_cvtpd2udq128_mask
V4iV4dV4iUc
__builtin_ia32_cvtps2udq128_mask
V4iV4fV4iUc
__builtin_ia32_cvtps2udq256_mask
V8iV8fV8iUc
__builtin_ia32_cvttpd2dq128_mask
__builtin_ia32_cvttpd2udq128_mask
__builtin_ia32_cvttps2udq128_mask
__builtin_ia32_cvttps2udq256_mask
__builtin_ia32_expanddf128_mask
__builtin_ia32_expanddi128_mask
__builtin_ia32_expanddi256_mask
__builtin_ia32_expandhi128_mask
__builtin_ia32_expandhi256_mask
__builtin_ia32_expandqi128_mask
__builtin_ia32_expandqi256_mask
__builtin_ia32_expandloaddf128_mask
V2dV2dC*V2dUc
__builtin_ia32_expandloaddf256_mask
V4dV4dC*V4dUc
__builtin_ia32_expandloaddi128_mask
__builtin_ia32_expandloaddi256_mask
V4OiV4OiC*V4OiUc
__builtin_ia32_expandloadhi128_mask
__builtin_ia32_expandloadhi256_mask
V16sV16sC*V16sUs
__builtin_ia32_expandloadqi128_mask
__builtin_ia32_expandloadqi256_mask
V32cV32cC*V32cUi
__builtin_ia32_expandloadsf128_mask
V4fV4fC*V4fUc
__builtin_ia32_expandloadsf256_mask
V8fV8fC*V8fUc
__builtin_ia32_expandloadsi128_mask
__builtin_ia32_expandloadsi256_mask
V8iV8iC*V8iUc
__builtin_ia32_expandsf128_mask
__builtin_ia32_expandsi128_mask
__builtin_ia32_expandsi256_mask
__builtin_ia32_getexppd128_mask
 [[gnu::destructor
triple:
/ck805
-Wprivate-extern
-finline-limit=
re-exported framework
-fno-cray-pointer
Treat subsequent input files as having type <language>
+march=ck810
__builtin_ia32_getexppd256_mask
__builtin_ia32_getexpps128_mask
__builtin_ia32_getexpps256_mask
__builtin_ia32_rndscalepd_128_mask
V2dV2dIiV2dUc
__builtin_ia32_rndscalepd_256_mask
V4dV4dIiV4dUc
__builtin_ia32_rndscaleps_128_mask
Pass <arg> to the clang parser
-Xplatform_
/ck810v
-Xparser
V4fV4fIiV4fUc
__builtin_ia32_rndscaleps_256_mask
V8fV8fIiV8fUc
__builtin_ia32_scalefpd128_mask
V4dV4dV4dV4dUc
__builtin_ia32_scalefps128_mask
__builtin_ia32_scalefps256_mask
__builtin_ia32_scatterdiv2df
vv*UcV2OiV2dIi
__builtin_ia32_scatterdiv2di
vv*UcV2OiV2OiIi
__builtin_ia32_scatterdiv4df
vv*UcV4OiV4dIi
__builtin_ia32_scatterdiv4di
__builtin_ia32_scatterdiv4sf
vv*UcV2OiV4fIi
__builtin_ia32_scatterdiv4si
__builtin_ia32_scatterdiv8sf
vv*UcV4OiV4fIi
__builtin_ia32_scatterdiv8si
__builtin_ia32_scattersiv2df
vv*UcV4iV2dIi
__builtin_ia32_scattersiv2di
vv*UcV4iV2OiIi
__builtin_ia32_scattersiv4df
vv*UcV4iV4dIi
__builtin_ia32_scattersiv4di
__builtin_ia32_scattersiv4sf
vv*UcV4iV4fIi
__builtin_ia32_scattersiv4si
__builtin_ia32_scattersiv8sf
vv*UcV8iV8fIi
__builtin_ia32_scattersiv8si
vv*UcV8iV8iIi
__builtin_ia32_vpermi2vard128
__builtin_ia32_vpermi2vard256
__builtin_ia32_vpermi2vard512
__builtin_ia32_vpermi2varpd128
V2dV2dV2OiV2d
__builtin_ia32_vpermi2varpd256
V4dV4dV4OiV4d
V8dV8dV8OiV8d
__builtin_ia32_vpermi2varps128
V4fV4fV4iV4f
-verify-against
 [[gnu::fallthrough
Specifies that the dylib being linked is re-exported through an umbrella framework of the specified name.
--verify-against=
__builtin_ia32_vpermi2varps256
V8fV8fV8iV8f
__builtin_ia32_vpermi2varps512
V16fV16fV16iV16f
V2OiV2OiV2OiV2Oi
__builtin_ia32_vpermi2varq256
V4OiV4OiV4OiV4Oi
__builtin_ia32_vpermi2varq512
V8OiV8OiV8OiV8Oi
__builtin_ia32_vpermi2varqi128
avx512vbmi,avx512vl
__builtin_ia32_vpermi2varqi512
V64cV64cV64cV64c
__builtin_ia32_vpermi2varhi128
V16sV16sV16sV16s
__builtin_ia32_vpermi2varhi512
V32sV32sV32sV32s
__builtin_ia32_vpshldd256
__builtin_ia32_vpshldd512
__builtin_ia32_vpshldq128
__builtin_ia32_vpshldq256
__builtin_ia32_vpshldq512
__builtin_ia32_vpshldw128
__builtin_ia32_vpshldw256
V32sV32sV32sIi
__builtin_ia32_vpshldvd128
__builtin_ia32_vpshldvd256
-umbrella
lib32/ilp32
Force creation of a snapshot
Logs each dylib tapi loads. Useful for debugging problems with search paths where the wrong library is loaded.
__builtin_ia32_vpshldvd512
__builtin_ia32_vpshldvq128
__builtin_ia32_vpshldvq256
__builtin_ia32_vpshldvq512
--snapshot
lib64/lp64
Set the installapi flag in the text-based stub file
__builtin_ia32_vpshldvw128
__builtin_ia32_vpshldvw256
__builtin_ia32_vpshldvw512
__builtin_ia32_vpshrdvd128
__builtin_ia32_vpshrdvd256
__builtin_ia32_vpshrdvd512
__builtin_ia32_vpshrdvq128
__builtin_ia32_vpshrdvq256
__builtin_ia32_vpshrdvw128
__builtin_ia32_vpshrdvw256
__builtin_ia32_vpshrdvw512
__builtin_ia32_vpshrdd256
__builtin_ia32_vpshrdd512
__builtin_ia32_vpshrdq128
__builtin_ia32_vpshrdq512
__builtin_ia32_vpshrdw128
__builtin_ia32_vpshrdw256
__builtin_ia32_vpshrdw512
__builtin_ia32_pmovswb512_mask
V32cV32sV32cUi
__builtin_ia32_pmovuswb512_mask
__builtin_ia32_cvtpd2qq128_mask
V2OiV2dV2OiUc
avx512vl,avx512dq
V4OiV4dV4OiUc
__builtin_ia32_cvtpd2uqq128_mask
__builtin_ia32_cvtpd2uqq256_mask
V2OiV4fV2OiUc
__builtin_ia32_cvtps2qq256_mask
V4OiV4fV4OiUc
__builtin_ia32_cvtps2uqq128_mask
__builtin_ia32_cvtps2uqq256_mask
__builtin_ia32_cvtqq2ps128_mask
V4fV2OiV4fUc
__builtin_ia32_cvttpd2qq256_mask
__builtin_ia32_cvttpd2uqq128_mask
__builtin_ia32_cvttpd2uqq256_mask
__builtin_ia32_cvttps2qq256_mask
__builtin_ia32_cvttps2uqq128_mask
__builtin_ia32_cvttps2uqq256_mask
-reexport_framework
mabi=lp64f
Re-export the specified library
__builtin_ia32_cvtuqq2ps128_mask
__builtin_ia32_rangepd128_mask
V2dV2dV2dIiV2dUc
__builtin_ia32_rangepd256_mask
V4dV4dV4dIiV4dUc
__builtin_ia32_rangeps128_mask
V4fV4fV4fIiV4fUc
__builtin_ia32_rangeps256_mask
-public-umbrella-header
-reexport-l
+march=
--public-umbrella-header=
V8fV8fV8fIiV8fUc
__builtin_ia32_rangesd128_round_mask
V2dV2dV2dV2dUcIiIi
__builtin_ia32_rangess128_round_mask
__builtin_ia32_reducepd128_mask
__builtin_ia32_reducepd256_mask
__builtin_ia32_reduceps128_mask
__builtin_ia32_reduceps256_mask
__builtin_ia32_reducesd_mask
__builtin_ia32_reducess_mask
__builtin_ia32_pmovswb128_mask
V16cV8sV16cUc
__builtin_ia32_pmovswb256_mask
V16cV16sV16cUs
__builtin_ia32_pmovuswb128_mask
__builtin_ia32_pmovwb128_mask
__builtin_ia32_cvtpd2qq512_mask
V8OiV8dV8OiUcIi
__builtin_ia32_cvtps2qq512_mask
V8OiV8fV8OiUcIi
__builtin_ia32_cvtps2uqq512_mask
V8dV8OiV8dUcIi
__builtin_ia32_cvtqq2ps512_mask
V8fV8OiV8fUcIi
__builtin_ia32_cvttpd2qq512_mask
__builtin_ia32_cvttpd2uqq512_mask
__builtin_ia32_cvttps2qq512_mask
__builtin_ia32_cvttps2uqq512_mask
--print-after=
-print-search-dirs
<filelist>
/../../../../riscv32-unknown-elf/lib
Partial SDKDB filelist path
__builtin_ia32_cvtuqq2pd512_mask
__builtin_ia32_cvtuqq2ps512_mask
__builtin_ia32_rangepd512_mask
V8dV8dV8dIiV8dUcIi
V16fV16fV16fIiV16fUsIi
__builtin_ia32_reducepd512_mask
__builtin_ia32_reduceps512_mask
__builtin_ia32_prold512
V16iV16iIi
__builtin_ia32_prolq512
V8OiV8OiIi
__builtin_ia32_prold128
__builtin_ia32_prold256
__builtin_ia32_prolq128
__builtin_ia32_prolq256
__builtin_ia32_prolvq512
__builtin_ia32_prord512
__builtin_ia32_prorq512
__builtin_ia32_prolvd256
__builtin_ia32_prolvq128
__builtin_ia32_prolvq256
__builtin_ia32_prord256
__builtin_ia32_prorq128
__builtin_ia32_prorq256
__builtin_ia32_prorvd512
__builtin_ia32_prorvq512
__builtin_ia32_prorvd128
__builtin_ia32_prorvd256
__builtin_ia32_prorvq256
__builtin_ia32_pshufhw512
V32sV32sIi
__builtin_ia32_psllv32hi
__builtin_ia32_psllw512
V32sV32sV8s
__builtin_ia32_psllwi512
V32sV32si
__builtin_ia32_psllv16hi
avx512bw,avx512vl
__builtin_ia32_psllv8hi
__builtin_ia32_pslldi512
__builtin_ia32_psllqi512
V8OiV8Oii
__builtin_ia32_psrlv16hi
__builtin_ia32_psrlv8hi
__builtin_ia32_psrldi512
-mtvos-version-min=
Don't use approximate transcendental functions
-mmacos-version-min=
-mtvos-simulator-version-min=
__builtin_ia32_psrlqi512
__builtin_ia32_psrav32hi
__builtin_ia32_psrav16hi
__builtin_ia32_psrav8hi
-miphoneos-version-min=
/sparcv9
-mios-version-min=
__builtin_ia32_psravq128
__builtin_ia32_psravq256
__builtin_ia32_psraw512
__builtin_ia32_psrawi512
__builtin_ia32_psrlw512
__builtin_ia32_psrlwi512
__builtin_ia32_pslldqi512_byteshift
__builtin_ia32_psrldqi512_byteshift
__builtin_ia32_movdqa32load256_mask
__builtin_ia32_movdqa32load512_mask
V16iV16iC*V16iUs
vV16i*V16iUs
__builtin_ia32_movdqa64load512_mask
V8OiV8OiC*V8OiUc
vV8Oi*V8OiUc
__builtin_ia32_movdqa32store128_mask
__builtin_ia32_movdqa32store256_mask
__builtin_ia32_movdqa64load128_mask
V2OiV2OiC*V2OiUc
__builtin_ia32_movdqa64load256_mask
__builtin_ia32_movdqa64store128_mask
__builtin_ia32_vpmadd52huq512
__builtin_ia32_vpmadd52luq512
__builtin_ia32_vpmadd52huq128
__builtin_ia32_vpmadd52huq256
__builtin_ia32_vpmadd52luq128
__builtin_ia32_vpmadd52luq256
-mios-simulator-version-min=
 [[clang::ibaction
-isystem
/libgcc.a
<dir>
__builtin_ia32_vcomisd
iV2dV2dIiIi
__builtin_ia32_vcomiss
iV4fV4fIiIi
__builtin_ia32_kunpckdi
UOiUOiUOi
__builtin_ia32_kunpcksi
__builtin_ia32_loaddquhi512_mask
__builtin_ia32_loaddquqi512_mask
V64cV64cC*V64cUOi
__builtin_ia32_fixupimmpd512_mask
__builtin_ia32_fixupimmpd512_maskz
__builtin_ia32_fixupimmps512_mask
V16fV16fV16fV16iIiUsIi
__builtin_ia32_fixupimmps512_maskz
__builtin_ia32_fixupimmsd_mask
V2dV2dV2dV2OiIiUcIi
__builtin_ia32_fixupimmsd_maskz
__builtin_ia32_fixupimmss_mask
V4fV4fV4fV4iIiUcIi
__builtin_ia32_fixupimmss_maskz
__builtin_ia32_getexpsd128_round_mask
__builtin_ia32_getmantsd_round_mask
V2dV2dV2dIiV2dUcIi
__builtin_ia32_getmantss_round_mask
__builtin_ia32_loaddquhi128_mask
__builtin_ia32_loaddquhi256_mask
__builtin_ia32_loaddquqi128_mask
__builtin_ia32_fixupimmpd128_mask
V2dV2dV2dV2OiIiUc
__builtin_ia32_fixupimmpd128_maskz
__builtin_ia32_fixupimmpd256_mask
V4dV4dV4dV4OiIiUc
__builtin_ia32_fixupimmpd256_maskz
__builtin_ia32_fixupimmps128_mask
__builtin_ia32_fixupimmps128_maskz
__builtin_ia32_fixupimmps256_mask
V8fV8fV8fV8iIiUc
__builtin_ia32_loadapd128_mask
__builtin_ia32_loadsd128_mask
__builtin_ia32_loadapd256_mask
Set the system root directory (usually /)
 [[gnu::init_priority
__builtin_ia32_loadaps128_mask
__builtin_ia32_loadss128_mask
__builtin_ia32_loadaps256_mask
__builtin_ia32_loaddqudi128_mask
__builtin_ia32_loaddqudi256_mask
__builtin_ia32_loaddqusi128_mask
__builtin_ia32_loaddqusi256_mask
__builtin_ia32_loadupd128_mask
-fvisibility=
 __attribute__((lifetimebound
-frtti
-fuse-line-directives
Add extra symbols for InstallAPI that are created by code coverage.
GNU::Assembler
-fprofile-instr-generate
__builtin_ia32_loadupd256_mask
__builtin_ia32_loadups128_mask
__builtin_ia32_loadups256_mask
__builtin_ia32_storedquhi512_mask
__builtin_ia32_storedquqi512_mask
vV64c*V64cUOi
__builtin_ia32_storedquhi128_mask
__builtin_ia32_storedquqi128_mask
__builtin_ia32_storedquqi256_mask
__builtin_ia32_storeapd128_mask
__builtin_ia32_storesd128_mask
__builtin_ia32_storeapd256_mask
__builtin_ia32_storeaps128_mask
__builtin_ia32_storess128_mask
__builtin_ia32_storedqudi128_mask
__builtin_ia32_storedqudi256_mask
__builtin_ia32_storedqusi128_mask
__builtin_ia32_storeupd128_mask
__builtin_ia32_storeupd256_mask
__builtin_ia32_storeups128_mask
__builtin_ia32_rcp14pd128_mask
__builtin_ia32_rcp14pd256_mask
__builtin_ia32_rcp14ps128_mask
__builtin_ia32_rcp14ps256_mask
__builtin_ia32_vplzcntd_128
__builtin_ia32_vplzcntd_256
__builtin_ia32_vplzcntq_128
-fmodules-cache-path=
-fno-schedule-insns
Specify the output file type (tbd-v1, tbd-v2, tbd-v3, or tbd-v4)
/system/develop/headers/c++/v1
--filetype=
__builtin_ia32_vplzcntq_256
__builtin_ia32_vcvtsd2si32
iV2dIi
__builtin_ia32_vcvtsd2usi32
__builtin_ia32_vcvtss2si32
iV4fIi
__builtin_ia32_vcvtss2usi32
__builtin_ia32_vcvttsd2si32
__builtin_ia32_vcvttsd2usi32
__builtin_ia32_vcvttss2si32
__builtin_ia32_vcvttss2usi32
__builtin_ia32_vpermilpd512
__builtin_ia32_vpermilps512
__builtin_ia32_vpermilvarpd512
__builtin_ia32_vpermilvarps512
V16fV16fV16i
__builtin_ia32_rndscalesd_round_mask
__builtin_ia32_scalefpd512_mask
__builtin_ia32_scalefps512_mask
__builtin_ia32_scalefsd_round_mask
__builtin_ia32_psradi512
__builtin_ia32_psraqi512
__builtin_ia32_psraq128
__builtin_ia32_psraq256
__builtin_ia32_psraqi128
__builtin_ia32_psraqi256
__builtin_ia32_pslld512
__builtin_ia32_psllq512
V8OiV8OiV2Oi
__builtin_ia32_psllv16si
__builtin_ia32_psrad512
__builtin_ia32_psraq512
__builtin_ia32_psrav16si
__builtin_ia32_psrld512
__builtin_ia32_psrlq512
__builtin_ia32_psrlv16si
__builtin_ia32_psrlv8di
__builtin_ia32_pternlogd512_mask
V16iV16iV16iV16iIiUs
__builtin_ia32_pternlogd512_maskz
V8OiV8OiV8OiV8OiIiUc
__builtin_ia32_pternlogq512_maskz
__builtin_ia32_pternlogd128_mask
__builtin_ia32_pternlogd128_maskz
__builtin_ia32_pternlogd256_mask
V8iV8iV8iV8iIiUc
-exclude-public-header
#pragma clang loop
--exclude-public-header=
-pthread
Exclude project header from parsing
-input=/dev/null
mcin
-exclude-private-header
__builtin_ia32_pternlogd256_maskz
__builtin_ia32_pternlogq128_mask
V2OiV2OiV2OiV2OiIiUc
__builtin_ia32_pternlogq128_maskz
__builtin_ia32_pternlogq256_mask
V4OiV4OiV4OiV4OiIiUc
__builtin_ia32_pternlogq256_maskz
__builtin_ia32_shuf_f32x4
__builtin_ia32_shuf_i32x4
__builtin_ia32_shuf_i64x2
__builtin_ia32_shufpd512
__builtin_ia32_shuf_f32x4_256
__builtin_ia32_shuf_f64x2_256
__builtin_ia32_shuf_i32x4_256
__builtin_ia32_sqrtsd_round_mask
__builtin_ia32_sqrtss_round_mask
__builtin_ia32_rsqrt14pd128_mask
__builtin_ia32_rsqrt14pd256_mask
__builtin_ia32_rsqrt14ps128_mask
__builtin_ia32_rsqrt14ps256_mask
__builtin_ia32_cvtb2mask512
__builtin_ia32_cvtmask2b512
V64cUOi
__builtin_ia32_cvtmask2w512
__builtin_ia32_cvtd2mask512
UsV16i
__builtin_ia32_cvtmask2d512
--exclude-private-header=
 __attribute__((mig_server_routine
Delete input file on success
  .section .hip_fatbin, "dw"
--delete-input-file
V16iUs
__builtin_ia32_cvtmask2q512
V8OiUc
__builtin_ia32_cvtq2mask512
UcV8Oi
__builtin_ia32_cvtb2mask128
UsV16c
__builtin_ia32_cvtb2mask256
__builtin_ia32_cvtmask2b128
V16cUs
__builtin_ia32_cvtmask2b256
__builtin_ia32_cvtmask2w128
V8sUc
__builtin_ia32_cvtmask2w256
__builtin_ia32_cvtd2mask128
UcV4i
avx512dq,avx512vl
__builtin_ia32_cvtd2mask256
UcV8i
__builtin_ia32_cvtmask2d128
V4iUc
V8iUc
__builtin_ia32_cvtmask2q128
V2OiUc
V4OiUc
__builtin_ia32_cvtq2mask128
UcV2Oi
__builtin_ia32_cvtq2mask256
UcV4Oi
__builtin_ia32_pmovsdb512_mask
V16cV16iV16cUs
__builtin_ia32_pmovsdb512mem_mask
vV16c*V16iUs
__builtin_ia32_pmovswb512mem_mask
vV32c*V32sUi
V16sV16iV16sUs
__builtin_ia32_pmovsdw512mem_mask
vV16s*V16iUs
V16cV8OiV16cUc
__builtin_ia32_pmovsqb512mem_mask
vV16c*V8OiUc
Specifies the current version number of the library
 __unspecified_inheritance
<input>
__hip_fatbin:
__builtin_ia32_pmovsqd512_mask
V8iV8OiV8iUc
__builtin_ia32_pmovsqd512mem_mask
vV8i*V8OiUc
__builtin_ia32_pmovsqw512_mask
V8sV8OiV8sUc
__builtin_ia32_pmovsqw512mem_mask
vV8s*V8OiUc
/Versions/
 __attribute__((micromips
  .incbin 
System/Library/Frameworks
__builtin_ia32_pmovsdb128_mask
V16cV4iV16cUc
__builtin_ia32_pmovsdb128mem_mask
vV16c*V4iUc
vV16c*V8sUc
__builtin_ia32_pmovsdb256_mask
V16cV8iV16cUc
vV16c*V8iUc
__builtin_ia32_pmovswb256mem_mask
vV16c*V16sUs
__builtin_ia32_pmovsdw128_mask
V8sV4iV8sUc
__builtin_ia32_pmovsdw128mem_mask
vV8s*V4iUc
V8sV8iV8sUc
__builtin_ia32_pmovsdw256mem_mask
vV8s*V8iUc
V16cV2OiV16cUc
__builtin_ia32_pmovsqb128mem_mask
vV16c*V2OiUc
V16cV4OiV16cUc
__builtin_ia32_pmovsqb256mem_mask
vV16c*V4OiUc
__builtin_ia32_pmovsqd128_mask
V4iV2OiV4iUc
__builtin_ia32_pmovsqd128mem_mask
vV4i*V2OiUc
PrivateHeaders
usr/local/lib
vector=sw0
-flavor
Kernel.framework
__builtin_ia32_pmovsqd256_mask
V4iV4OiV4iUc
__builtin_ia32_pmovsqd256mem_mask
vV4i*V4OiUc
V8sV2OiV8sUc
__builtin_ia32_pmovsqw128mem_mask
vV8s*V2OiUc
V8sV4OiV8sUc
__builtin_ia32_pmovsqw256mem_mask
vV8s*V4OiUc
__builtin_ia32_pmovusdb512_mask
__builtin_ia32_pmovusdb512mem_mask
__builtin_ia32_pmovuswb512mem_mask
__builtin_ia32_pmovusdw512_mask
__builtin_ia32_pmovusqb512_mask
__builtin_ia32_pmovusqb512mem_mask
__builtin_ia32_pmovusqd512_mask
__builtin_ia32_pmovusqw512_mask
__builtin_ia32_pmovusqw512mem_mask
__builtin_ia32_pmovusdb128_mask
__builtin_ia32_pmovuswb128mem_mask
__builtin_ia32_pmovusdb256_mask
__builtin_ia32_pmovusdb256mem_mask
__builtin_ia32_pmovuswb256mem_mask
__builtin_ia32_pmovusdw128_mask
__builtin_ia32_pmovusdw128mem_mask
__builtin_ia32_pmovusdw256_mask
__builtin_ia32_pmovusqb128_mask
__builtin_ia32_pmovusqb128mem_mask
__builtin_ia32_pmovusqb256_mask
__builtin_ia32_pmovusqd128_mask
__builtin_ia32_pmovusqd128mem_mask
__builtin_ia32_pmovusqd256_mask
__builtin_ia32_pmovusqw128_mask
__builtin_ia32_pmovusqw128mem_mask
__builtin_ia32_pmovusqw256_mask
__builtin_ia32_pmovusqw256mem_mask
__builtin_ia32_pmovdb512_mask
__builtin_ia32_pmovdb512mem_mask
__builtin_ia32_pmovwb512mem_mask
__builtin_ia32_pmovdw512mem_mask
__builtin_ia32_pmovqb512_mask
__builtin_ia32_pmovqb512mem_mask
System/Library/PrivateFrameworks/
name
 [[gnu::far
__builtin_ia32_pmovqd512_mask
__builtin_ia32_pmovqd512mem_mask
__builtin_ia32_pmovqw512_mask
__builtin_ia32_pmovqw512mem_mask
-mlink-bitcode-file
invalid packed version string.
__builtin_ia32_pmovdb128_mask
__builtin_ia32_pmovwb128mem_mask
__builtin_ia32_pmovdb128mem_mask
__builtin_ia32_pmovdb256_mask
__builtin_ia32_pmovdb256mem_mask
__builtin_ia32_pmovwb256mem_mask
__builtin_ia32_pmovdw128_mask
__builtin_ia32_pmovdw128mem_mask
__builtin_ia32_pmovdw256mem_mask
__builtin_ia32_pmovqb128_mask
__builtin_ia32_pmovqb128mem_mask
__builtin_ia32_pmovqb256mem_mask
__builtin_ia32_pmovqd128_mask
__builtin_ia32_pmovqd128mem_mask
__builtin_ia32_pmovqw128_mask
__builtin_ia32_pmovqw128mem_mask
__builtin_ia32_pmovqw256_mask
__builtin_ia32_pmovqw256mem_mask
__builtin_ia32_extractf32x8_mask
V8fV16fIiV8fUc
__builtin_ia32_extractf64x2_512_mask
__builtin_ia32_extracti32x8_mask
V8iV16iIiV8iUc
__builtin_ia32_extracti64x2_512_mask
bridgeos
V2OiV8OiIiV2OiUc
__builtin_ia32_extracti32x4_mask
V4iV16iIiV4iUc
__builtin_ia32_extracti64x4_mask
sdk-platform
AMDGCN::Linker
tapi-configuration-v1
V4OiV8OiIiV4OiUc
__builtin_ia32_extractf64x2_256_mask
V2dV4dIiV2dUc
__builtin_ia32_extracti64x2_256_mask
V2OiV4OiIiV2OiUc
__builtin_ia32_extractf32x4_256_mask
V4fV8fIiV4fUc
__builtin_ia32_extracti32x4_256_mask
__builtin_ia32_insertf32x8
V16fV16fV8fIi
__builtin_ia32_insertf64x2_512
__builtin_ia32_inserti32x8
V16iV16iV8iIi
__builtin_ia32_inserti64x2_512
__builtin_ia32_insertf64x4
V8dV8dV4dIi
__builtin_ia32_inserti64x4
V8OiV8OiV4OiIi
__builtin_ia32_insertf64x2_256
__builtin_ia32_inserti64x2_256
__builtin_ia32_insertf32x4_256
__builtin_ia32_insertf32x4
V16fV16fV4fIi
__builtin_ia32_inserti32x4
__builtin_ia32_getmantpd128_mask
__builtin_ia32_getmantpd256_mask
__builtin_ia32_getmantps128_mask
__builtin_ia32_getmantpd512_mask
__builtin_ia32_getmantps512_mask
__builtin_ia32_getexppd512_mask
__builtin_ia32_getexpps512_mask
__builtin_ia32_vfmaddss3_mask
__builtin_ia32_vfmaddss3_maskz
__builtin_ia32_vfmaddss3_mask3
__builtin_ia32_vfmaddsd3_maskz
__builtin_ia32_vfmaddsd3_mask3
__builtin_ia32_vfmsubsd3_mask3
__builtin_ia32_permdf512
__builtin_ia32_permdi512
__builtin_ia32_permvarhi512
malformed file
__builtin_ia32_permvardf512
__builtin_ia32_permvardi512
__builtin_ia32_permvarsf512
__builtin_ia32_permvarsi512
__builtin_ia32_permvarqi512
__builtin_ia32_permvarqi128
__builtin_ia32_permvarqi256
__builtin_ia32_permvarhi128
no-cascading-diags
 __attribute__((naked
missing-api
-fno-short-wchar
skip-external
--spirv-ext=+all
variant
__builtin_ia32_permvarhi256
__builtin_ia32_permvardf256
__builtin_ia32_permvardi256
__builtin_ia32_fpclasspd128_mask
__builtin_ia32_fpclasspd256_mask
UcV4dIiUc
__builtin_ia32_fpclassps128_mask
__builtin_ia32_fpclassps256_mask
UcV8fIiUc
__builtin_ia32_fpclassps512_mask
UsV16fIiUs
__builtin_ia32_fpclasspd512_mask
UcV8dIiUc
__builtin_ia32_fpclasssd_mask
__builtin_ia32_kaddqi
__builtin_ia32_kaddhi
__builtin_ia32_kaddsi
__builtin_ia32_kandqi
__builtin_ia32_kandhi
__builtin_ia32_kandsi
__builtin_ia32_kandnqi
__builtin_ia32_kandnhi
__builtin_ia32_kandnsi
__builtin_ia32_kandndi
__builtin_ia32_korqi
__builtin_ia32_korhi
__builtin_ia32_korsi
base
Display the list of in development analyzer checkers. These are NOT considered safe, they are unstable and will emit incorrect reports. Enable ONLY FOR DEVELOPMENT purposes
-fvect-cost-model
hip-device-lib
-analyzer-checker-help-alpha
__builtin_ia32_kordi
__builtin_ia32_kortestcqi
iUcUc
__builtin_ia32_kortestzqi
iUsUs
__builtin_ia32_kortestzhi
__builtin_ia32_kortestcsi
__builtin_ia32_kortestzsi
__builtin_ia32_kortestcdi
iUOiUOi
__builtin_ia32_kortestzdi
__builtin_ia32_ktestcqi
__builtin_ia32_ktestzqi
__builtin_ia32_ktestchi
__builtin_ia32_ktestcsi
__builtin_ia32_ktestzsi
__builtin_ia32_ktestcdi
__builtin_ia32_kunpckhi
__builtin_ia32_kxnorqi
__builtin_ia32_kxnorhi
__builtin_ia32_kxnorsi
__builtin_ia32_kxnordi
__builtin_ia32_kxorqi
__builtin_ia32_kxorhi
__builtin_ia32_kxorsi
__builtin_ia32_kxordi
__builtin_ia32_kshiftliqi
UcUcIUi
UsUsIUi
__builtin_ia32_kshiftlisi
__builtin_ia32_kshiftlidi
__builtin_ia32_kshiftriqi
__builtin_ia32_kshiftrihi
__builtin_ia32_kshiftrisi
__builtin_ia32_kmovb
__builtin_ia32_kmovw
__builtin_ia32_kmovd
__builtin_ia32_kmovq
__builtin_ia32_palignr512
V64cV64cV64cIi
__builtin_ia32_dbpsadbw128
__builtin_ia32_dbpsadbw256
V16sV32cV32cIi
__builtin_ia32_dbpsadbw512
__builtin_ia32_psadbw512
V8OiV64cV64c
__builtin_ia32_compressdf512_mask
Tool used for detecting AMD GPU arch in the system.
/analyze-
 [[clang::noderef
<wasm features group>
-allowable_client
--amdgpu-arch-tool=
/Qspectre-load
--arch=hexagon
<wasm driver features group>
__builtin_ia32_compressdi512_mask
V8OiV8OiV8OiUc
__builtin_ia32_compresshi512_mask
V32sV32sV32sUi
__builtin_ia32_compressqi512_mask
V64cV64cV64cUOi
__builtin_ia32_compresssf512_mask
__builtin_ia32_compresssi512_mask
__builtin_ia32_cmpsd_mask
UcV2dV2dIiUcIi
__builtin_ia32_cmpss_mask
__builtin_ia32_pshufd512
__builtin_ia32_expanddf512_mask
__builtin_ia32_expanddi512_mask
__builtin_ia32_expandqi512_mask
__builtin_ia32_expandloaddf512_mask
__builtin_ia32_expandloaddi512_mask
__builtin_ia32_expandloadhi512_mask
__builtin_ia32_expandloadqi512_mask
__builtin_ia32_expandloadsf512_mask
__builtin_ia32_expandloadsi512_mask
__builtin_ia32_expandsi512_mask
__builtin_ia32_cvtps2pd512_mask
V8dV8fV8dUcIi
__builtin_ia32_compressstoredi512_mask
__builtin_ia32_compressstorehi512_mask
__builtin_ia32_compressstoreqi512_mask
<riscv features group>
 __attribute__((no_instrument_function
<i group>
<ppc features group>
Enable the loop vectorization passes
__builtin_ia32_compressstoresf512_mask
__builtin_ia32_compressstoresi512_mask
__builtin_ia32_vcvtph2ps_mask
V4fV8sV4fUc
__builtin_ia32_vcvtph2ps256_mask
V8fV8sV8fUc
__builtin_ia32_vcvtps2ph_mask
V8sV4fIiV8sUc
<ggdbN group>
 __attribute__((no_profile_instrument_function
<gfortran group>
-fno-show-column
__builtin_ia32_vcvtps2ph256_mask
V8sV8fIiV8sUc
__builtin_ia32_cvtw2mask512
UiV32s
UcV8s
__builtin_ia32_cvtw2mask256
UsV16s
V4fV4fV2dV4fUcIi
__builtin_ia32_cvtsi2ss32
V4fV4fiIi
__builtin_ia32_cvtss2sd_round_mask
V2dV2dV4fV2dUcIi
__builtin_ia32_cvtusi2ss32
V4fV4fUiIi
__builtin_ia32_vpmultishiftqb128
__builtin_ia32_vpmultishiftqb256
__builtin_ia32_cvtne2ps2bf16_128
avx512bf16,avx512vl
__builtin_ia32_cvtne2ps2bf16_256
V16sV8fV8f
V32sV16fV16f
__builtin_ia32_cvtneps2bf16_128_mask
V8sV4fV8sUc
__builtin_ia32_cvtneps2bf16_256_mask
V8sV8fV8sUc
__builtin_ia32_cvtneps2bf16_512_mask
V16sV16fV16sUs
V4fV4fV4iV4i
__builtin_ia32_dpbf16ps_256
V8fV8fV8iV8i
V16fV16fV16iV16i
__builtin_ia32_cvtsbf162ss_32
vV8OiV8OiUc*Uc*
__builtin_ia32_vp2intersect_q_256
vV4OiV4OiUc*Uc*
avx512vp2intersect,avx512vl
__builtin_ia32_vp2intersect_q_128
vV2OiV2OiUc*Uc*
__builtin_ia32_vp2intersect_d_512
<Static analyzer group>
 [[gnu::no_split_stack
<R group>
<R (with value) group>
/hexagon/include/c++
<Preprocessor group>
vV16iV16iUs*Us*
__builtin_ia32_vp2intersect_d_256
vV8iV8iUc*Uc*
__builtin_ia32_vp2intersect_d_128
__builtin_ia32_vcomish
iV8xV8xIiIi
__builtin_ia32_addph512
__builtin_ia32_subph512
__builtin_ia32_mulph512
__builtin_ia32_divph512
__builtin_ia32_maxph512
__builtin_ia32_minph512
__builtin_ia32_minph256
V16xV16xV16x
__builtin_ia32_minph128
V8xV8xV8x
__builtin_ia32_maxph256
__builtin_ia32_addsh_round_mask
V8xV8xV8xV8xUcIi
__builtin_ia32_divsh_round_mask
__builtin_ia32_subsh_round_mask
__builtin_ia32_maxsh_round_mask
__builtin_ia32_minsh_round_mask
__builtin_ia32_cmpph512_mask
UiV32xV32xIiUiIi
__builtin_ia32_cmpph256_mask
UsV16xV16xIiUs
<O group>
 [[clang::no_stack_protector
<M group>
__builtin_ia32_cmpph128_mask
UcV8xV8xIiUc
__builtin_ia32_cmpsh_mask
UcV8xV8xIiUcIi
__builtin_ia32_loadsh128_mask
V8xV8xC*V8xUc
__builtin_ia32_storesh128_mask
vV8x*V8xUc
V8xV8xV8xUc
__builtin_ia32_rcpph256_mask
V16xV16xV16xUs
__builtin_ia32_rcpph512_mask
V32xV32xV32xUi
__builtin_ia32_rsqrtph128_mask
__builtin_ia32_rsqrtph256_mask
__builtin_ia32_getmantph128_mask
V8xV8xIiV8xUc
__builtin_ia32_getmantph256_mask
__builtin_ia32_getmantph512_mask
V32xV32xIiV32xUiIi
__builtin_ia32_getexpph128_mask
__builtin_ia32_getexpph512_mask
V32xV32xV32xUiIi
__builtin_ia32_scalefph128_mask
V8xV8xV8xV8xUc
__builtin_ia32_scalefph256_mask
V16xV16xV16xV16xUs
__builtin_ia32_scalefph512_mask
__builtin_ia32_rndscaleph_128_mask
__builtin_ia32_rndscaleph_256_mask
__builtin_ia32_rndscaleph_mask
__builtin_ia32_reduceph256_mask
__builtin_ia32_reduceph512_mask
__builtin_ia32_rcpsh_mask
__builtin_ia32_getmantsh_round_mask
V8xV8xV8xIiV8xUcIi
__builtin_ia32_getexpsh128_round_mask
__builtin_ia32_scalefsh_round_mask
__builtin_ia32_rndscalesh_round_mask
V8xV8xV8xV8xUcIiIi
__builtin_ia32_reducesh_mask
__builtin_ia32_sqrtph
V8xV8x
__builtin_ia32_sqrtph256
V16xV16x
, mem=
128b
, user=
omp_large_cap_mem_alloc
-fno-show-source-location
-march=hexagon
-Wno-error=return-type
-Wno-error=bitwise-instead-of-logical
__builtin_ia32_sqrtph512
V32xV32xIi
__builtin_ia32_sqrtsh_round_mask
__builtin_ia32_fpclassph128_mask
__builtin_ia32_fpclassph256_mask
UsV16xIiUs
__builtin_ia32_fpclassph512_mask
UiV32xIiUi
__builtin_ia32_fpclasssh_mask
__builtin_ia32_vcvtpd2ph128_mask
V8xV2dV8xUc
V8xV4dV8xUc
__builtin_ia32_vcvtpd2ph512_mask
V8xV8dV8xUcIi
V2dV8xV2dUc
__builtin_ia32_vcvtph2pd256_mask
V4dV8xV4dUc
V8dV8xV8dUcIi
__builtin_ia32_vcvtsh2ss_round_mask
V4fV4fV8xV4fUcIi
__builtin_ia32_vcvtss2sh_round_mask
V8xV8xV4fV8xUcIi
__builtin_ia32_vcvtsd2sh_round_mask
V8xV8xV2dV8xUcIi
V2dV2dV8xV2dUcIi
__builtin_ia32_vcvtph2w128_mask
V8sV8xV8sUc
-Wno-error=unused-but-set-parameter
-call_shared
__builtin_ia32_vcvtph2w256_mask
V16sV16xV16sUs
__builtin_ia32_vcvtph2w512_mask
V32sV32xV32sUiIi
-Wno-gnu-folding-constant
/crt0_standalone.o
-Wno-reserved-identifier
__builtin_ia32_vcvttph2w128_mask
__builtin_ia32_vcvttph2w256_mask
__builtin_ia32_vcvttph2w512_mask
__builtin_ia32_vcvtw2ph128_mask
V8xV8sV8xUc
__builtin_ia32_vcvtw2ph256_mask
V16xV16sV16xUs
__builtin_ia32_vcvtw2ph512_mask
__builtin_ia32_vcvtph2uw128_mask
V8UsV8xV8UsUc
__builtin_ia32_vcvtph2uw256_mask
__builtin_ia32_vcvtph2uw512_mask
V32UsV32xV32UsUiIi
__builtin_ia32_vcvttph2uw128_mask
__builtin_ia32_vcvttph2uw256_mask
__builtin_ia32_vcvttph2uw512_mask
__builtin_ia32_vcvtuw2ph128_mask
V8xV8UsV8xUc
__builtin_ia32_vcvtuw2ph256_mask
V16xV16UsV16xUs
__builtin_ia32_vcvtuw2ph512_mask
V32xV32UsV32xUiIi
V4iV8xV4iUc
__builtin_ia32_vcvtph2dq256_mask
V8iV8xV8iUc
V16iV16xV16iUsIi
__builtin_ia32_vcvtph2udq128_mask
V4UiV8xV4UiUc
V8UiV8xV8UiUc
__builtin_ia32_vcvtph2udq512_mask
V16UiV16xV16UiUsIi
__builtin_ia32_vcvtdq2ph128_mask
V8xV4iV8xUc
__builtin_ia32_vcvtdq2ph256_mask
V8xV8iV8xUc
-Wno-elaborated-enum-base
nohost
-Wno-enum-float-conversion
-relaxed-aliasing
-Wno-enum-enum-conversion
__builtin_ia32_vcvtdq2ph512_mask
V16xV16iV16xUsIi
__builtin_ia32_vcvtudq2ph128_mask
V8xV4UiV8xUc
-unknown-gnu
 [[clang::os_returns_not_retained
amdgcn-amd-amdhsa
__builtin_ia32_vcvtudq2ph256_mask
V8xV8UiV8xUc
__builtin_ia32_vcvtudq2ph512_mask
V16xV16UiV16xUsIi
__builtin_ia32_vcvttph2dq256_mask
__builtin_ia32_vcvttph2dq512_mask
__builtin_ia32_vcvttph2udq128_mask
__builtin_ia32_vcvttph2udq256_mask
__builtin_ia32_vcvttph2udq512_mask
__builtin_ia32_vcvtqq2ph128_mask
V8xV2OiV8xUc
V8xV4OiV8xUc
__builtin_ia32_vcvtqq2ph512_mask
V8xV8OiV8xUcIi
V2OiV8xV2OiUc
__builtin_ia32_vcvtph2qq256_mask
V4OiV8xV4OiUc
V8OiV8xV8OiUcIi
__builtin_ia32_vcvtuqq2ph128_mask
V8xV2UOiV8xUc
__builtin_ia32_vcvtuqq2ph256_mask
V8xV4UOiV8xUc
__builtin_ia32_vcvtuqq2ph512_mask
V8xV8UOiV8xUcIi
V2UOiV8xV2UOiUc
__builtin_ia32_vcvtph2uqq256_mask
V4UOiV8xV4UOiUc
V8UOiV8xV8UOiUcIi
__builtin_ia32_vcvttph2qq128_mask
__builtin_ia32_vcvttph2qq256_mask
nvptx-nvidia-cuda
hexagon::Assembler
clang-cl
nvptx64-nvidia-cuda
Enables dead virtual function elimination optimization. Requires -flto=full
clang-cpp
hexagon-as
hexagon-link
", inputs: [
__builtin_ia32_vcvttph2qq512_mask
__builtin_ia32_vcvttph2uqq128_mask
__builtin_ia32_vcvttph2uqq256_mask
__builtin_ia32_vcvttph2uqq512_mask
__builtin_ia32_vcvtsh2si32
iV8xIi
__builtin_ia32_vcvtsh2usi32
UiV8xIi
V8xV8xUiIi
__builtin_ia32_vcvtsi2sh
V8xV8xiIi
__builtin_ia32_vcvttsh2usi32
__builtin_ia32_vcvtph2psx128_mask
V4fV8xV4fUc
__builtin_ia32_vcvtph2psx256_mask
V8fV8xV8fUc
__builtin_ia32_vcvtph2psx512_mask
V16fV16xV16fUsIi
__builtin_ia32_vcvtps2phx128_mask
V8xV4fV8xUc
__builtin_ia32_vcvtps2phx256_mask
V8xV8fV8xUc
V16xV16fV16xUsIi
__builtin_ia32_vfmaddph
V8xV8xV8xV8x
V16xV16xV16xV16x
__builtin_ia32_vfmaddph512_mask
__builtin_ia32_vfmaddph512_mask3
__builtin_ia32_vfmaddsubph
__builtin_ia32_vfmaddsubph256
__builtin_ia32_vfmaddsubph512_mask
__builtin_ia32_vfmaddsubph512_maskz
__builtin_ia32_vfmaddsubph512_mask3
__builtin_ia32_vfmsubaddph512_mask3
__builtin_ia32_vfmsubph512_mask3
 - "
 [[clang::objc_bridge
<from>;<to>
InstalledDir: 
__builtin_ia32_vfmaddsh3_mask
__builtin_ia32_vfmaddsh3_maskz
__builtin_ia32_vfmaddsh3_mask3
__builtin_ia32_vfmsubsh3_mask3
Thread model: 
 __attribute__((objc_direct
Target: 
__builtin_ia32_vfmaddcph128_mask
__builtin_ia32_vfmaddcph128_maskz
__builtin_ia32_vfmaddcph256_mask
__builtin_ia32_vfmaddcph256_maskz
__builtin_ia32_vfmaddcph512_maskz
__builtin_ia32_vfmaddcph512_mask3
__builtin_ia32_vfcmaddcph128_mask
__builtin_ia32_vfcmaddcph128_maskz
__builtin_ia32_vfcmaddcph256_mask
__builtin_ia32_vfcmaddcph256_maskz
__builtin_ia32_vfcmaddcph512_mask
__builtin_ia32_vfcmaddcph512_mask3
__builtin_ia32_vfmaddcsh_mask
__builtin_ia32_vfmaddcsh_maskz
__builtin_ia32_vfcmaddcsh_maskz
__builtin_ia32_vfmaddcsh_round_mask
__builtin_ia32_vfmaddcsh_round_mask3
__builtin_ia32_vfcmaddcsh_round_mask3
__builtin_ia32_vfmulcsh_mask
__builtin_ia32_vfcmulcsh_mask
__builtin_ia32_vfmulcph128_mask
__builtin_ia32_vfmulcph256_mask
__builtin_ia32_vfmulcph512_mask
__builtin_ia32_vfcmulcph128_mask
flang-new
-fno-cxx-modules
-Xlinker
-fno-signaling-math
__builtin_ia32_vfcmulcph256_mask
__builtin_ia32_vfcmulcph512_mask
__builtin_ia32_selectb_128
V16cUsV16cV16c
V32cUiV32cV32c
__builtin_ia32_selectb_512
V64cUOiV64cV64c
V8sUcV8sV8s
__builtin_ia32_selectw_256
V16sUsV16sV16s
__builtin_ia32_selectw_512
V32sUiV32sV32s
__builtin_ia32_selectd_128
V4iUcV4iV4i
V8iUcV8iV8i
__builtin_ia32_selectd_512
V16iUsV16iV16i
-clang-vendor-feature=+messageToSelfInClassMethodIdReturnType
 __attribute__((objc_externally_retained
COMPILER_PATH
__builtin_ia32_selectph_128
V8xUcV8xV8x
__builtin_ia32_selectph_256
V16xUsV16xV16x
V32xUiV32xV32x
__builtin_ia32_selectq_128
V2OiUcV2OiV2Oi
__builtin_ia32_selectq_256
V4OiUcV4OiV4Oi
__builtin_ia32_selectq_512
V8OiUcV8OiV8Oi
V4fUcV4fV4f
__builtin_ia32_selectps_256
V8fUcV8fV8f
V16fUsV16fV16f
__builtin_ia32_selectpd_128
V2dUcV2dV2d
--no-demangle
mipsisa64r6
-Xclang 
/usr/lib/os-release
gnuabin32
/etc/os-release
__builtin_ia32_selectpd_256
V4dUcV4dV4d
__builtin_ia32_selectpd_512
V8dUcV8dV8d
__builtin_ia32_selectsh_128
__builtin_ia32_selectss_128
__builtin_ia32_selectsd_128
__builtin_ia32_reduce_fadd_pd512
__builtin_ia32_reduce_fadd_ps512
ffV16f
__builtin_ia32_reduce_fadd_ph512
__builtin_ia32_reduce_fadd_ph256
xxV16x
__builtin_ia32_reduce_fadd_ph128
__builtin_ia32_reduce_fmax_pd512
dV8d
__builtin_ia32_reduce_fmax_ps512
fV16f
__builtin_ia32_reduce_fmax_ph512
xV32x
__builtin_ia32_reduce_fmax_ph256
/etc/gentoo-release
copy
xV16x
__builtin_ia32_reduce_fmax_ph128
xV8x
__builtin_ia32_reduce_fmin_pd512
-hip
 __attribute__((NSObject
-cuda
__builtin_ia32_reduce_fmin_ps512
__builtin_ia32_reduce_fmin_ph512
__builtin_ia32_reduce_fmin_ph256
__builtin_ia32_reduce_fmin_ph128
__builtin_ia32_reduce_fmul_ps512
__builtin_ia32_reduce_fmul_ph512
__builtin_ia32_reduce_fmul_ph256
__builtin_ia32_reduce_fmul_ph128
__builtin_ia32_monitorx
__builtin_ia32_mwaitx
vUiUiUi
__builtin_ia32_umwait
UcUiUiUi
__builtin_ia32_tpause
__builtin_ia32_cldemote
__builtin_ia32_directstore_u32
vUi*Ui
host
mips64el
device-hip
__builtin_ia32_movdir64b
vv*vC*
__builtin_ia32_ptwrite32
__builtin_ia32_invpcid
__builtin_ia32_enqcmd
Ucv*vC*
__builtin_ia32_enqcmds
__builtin_ia32_loadiwkey
__builtin_ia32_encodekey128_u32
UiUiV2Oiv*
__builtin_ia32_encodekey256_u32
__builtin_ia32_aesenc128kl_u8
UcV2Oi*V2OivC*
__builtin_ia32_aesenc256kl_u8
verify-debug-info
 __attribute__((objc_ownership
backend
opt/rh/
compiler
__builtin_ia32_aesdec128kl_u8
__builtin_ia32_aesdec256kl_u8
__builtin_ia32_aesencwide128kl_u8
UcV2Oi*V2OiC*vC*
kl,widekl
__builtin_ia32_aesencwide256kl_u8
__builtin_ia32_aesdecwide128kl_u8
__builtin_ia32_aesdecwide256kl_u8
__builtin_ia32_xsusldtrk
__builtin_ia32_xresldtrk
_ReadBarrier
__cpuid
__cpuidex
vi*ii
__emul
__emulu
ULLiUiUi
__stosb
vUc*Ucz
__int2c
offload
migrator
Enable <feature> in module map requires declarations
bind-arch
 File 
/lib/..
__ud2
__readfsbyte
__readfsword
__readfsdword
__readgsbyte
__readgsword
__readgsdword
WiWiD*Wi
WiWiD*
_mul128
LLiLLiLLiLLi*
_umul128
ULLiULLiULLiULLi*
__faststorefence
ULLiULLiULLiUc
__shiftright128
__builtin_ia32_readeflags_u64
 __attribute__((objc_runtime_visible
__builtin_ia32_writeeflags_u64
vUOi
__builtin_ia32_cvtss2si64
OiV4f
__builtin_ia32_cvtsd2si64
OiV2d
__builtin_ia32_cvttsd2si64
__builtin_ia32_movnti64
vOi*Oi
__builtin_ia32_vec_set_v2di
V2OiV2OiOiIi
Set the visibility of symbols in the generated code from their DLL storage class
<XX>
/libc
<U+>
__builtin_ia32_crc32di
__builtin_ia32_vec_ext_v4di
OiV4OiIi
__builtin_ia32_vec_set_v4di
__builtin_ia32_rdfsbase32
__builtin_ia32_rdfsbase64
__builtin_ia32_rdgsbase32
__builtin_ia32_wrfsbase32
__builtin_ia32_wrfsbase64
__builtin_ia32_wrgsbase32
__builtin_ia32_wrgsbase64
__builtin_ia32_fxrstor64
__builtin_ia32_fxsave64
__builtin_ia32_xsave64
/system/bin/linker
In included file:
__builtin_ia32_xrstor64
__builtin_ia32_xsaveopt64
__builtin_ia32_xrstors64
__builtin_ia32_xsavec64
In file included from 
 read_only
__builtin_ia32_xsaves64
__builtin_ia32_incsspq
__builtin_ia32_rdsspq
__builtin_ia32_wrssq
__builtin_ia32_wrussq
__builtin_ia32_addcarryx_u64
UcUcUOiUOiUOi*
__builtin_ia32_subborrow_u64
__builtin_ia32_rdrand64_step
UiUOi*
__builtin_ia32_rdseed64_step
__builtin_ia32_bextr_u64
__builtin_ia32_tzcnt_u64
__builtin_ia32_bzhi_di
__builtin_ia32_pdep_di
__builtin_ia32_pext_di
__builtin_ia32_bextri_u64
UOiUOiIUOi
fatal error: 
__builtin_ia32_lwpins64
UcUOiUiIUi
__builtin_ia32_lwpval64
vUOiUiIUi
__builtin_ia32_vcvtsd2si64
OiV2dIi
__builtin_ia32_vcvtsd2usi64
UOiV2dIi
Generic error occurred while handling a record
read_only
Bitcode constructs that are not supported in diagnostics appear
Rewriter playground
__builtin_ia32_vcvtss2si64
OiV4fIi
__builtin_ia32_vcvtss2usi64
UOiV4fIi
__builtin_ia32_vcvttsd2usi64
__builtin_ia32_vcvttss2si64
__builtin_ia32_vcvttss2usi64
V2dV2dOiIi
__builtin_ia32_cvtsi2ss64
V4fV4fOiIi
__builtin_ia32_cvtusi2sd64
V2dV2dUOiIi
__builtin_ia32_cvtusi2ss64
V4fV4fUOiIi
Malformed Diagnostic record
write_only
Malformed block at top-level of diagnostics
Malformed Diagnostic block
Give global C++ operator new and delete declarations hidden visibility
Parse error reading diagnostics
ld-linux-aarch64_be.so.1
Invalid diagnostics signature
__builtin_ia32_vcvtsh2si64
OiV8xIi
__builtin_ia32_vcvtsh2usi64
UOiV8xIi
V8xV8xUOiIi
__builtin_ia32_vcvtsi642sh
V8xV8xOiIi
__builtin_ia32_vcvttsh2usi64
__builtin_ia32_directstore_u64
__builtin_ia32_clui
__builtin_ia32_stui
__builtin_ia32_testui
__builtin_ia32_senduipi
vUWi
__builtin_ia32_tile_loadconfig_internal
__builtin_ia32_tileloadd64_internal
V256iUsUsvC*z
Failed to open diagnostics file
 constant
opencl_constant
FixIt
__builtin_ia32_tileloaddt164_internal
__builtin_ia32_tdpbssd_internal
V256iUsUsUsV256iV256iV256i
__builtin_ia32_tdpbsud_internal
FileName
ld-linux-loongarch-
DiagFlag
__builtin_ia32_tdpbusd_internal
__builtin_ia32_tdpbuud_internal
__builtin_ia32_tilestored64_internal
vUsUsv*zV256i
__builtin_ia32_tilezero_internal
V256iUsUs
__builtin_ia32_tdpbf16ps_internal
__builtin_ia32_tile_loadconfig
CatName
-fno-d-lines-as-code
SrcRange
-fno-signed-wchar
DiagInfo
ld-uClibc-mipsn8.so.0
Diag
__builtin_ia32_tile_storeconfig
__builtin_ia32_tilerelease
__builtin_ia32_tilezero
__builtin_ia32_tileloadd64
vIUcvC*z
__builtin_ia32_tileloaddt164
__builtin_ia32_tilestored64
vIUcv*z
__builtin_ia32_tdpbssd
vIUcIUcIUc
__builtin_ia32_tdpbsud
__builtin_ia32_tdpbusd
__builtin_ia32_tdpbuud
__builtin_ia32_tdpbf16ps
__builtin_ia32_ptwrite64
Version
 [[clang::opencl_generic
Meta
Assert that the compilation takes place in a freestanding environment
ld-uClibc.so.0
-fgpu-sanitize
suppress
-fno-d-lines-as-comments
once
-fgnu-inline-asm
ld-musl-mipsel.so.1
fatal
__builtin_bitrev
#pragma 
 __global
-round-trip-args
__VA_ARGS__
 global
 __attribute__((opencl_global
vfs.yaml
ld-linux-mipsn8.so.1
</integer>
<integer>
__global
fatal error
ignored
ld64.so.2
</string>
&quot;
 __attribute__((opencl_global_device
&apos;
Enable command line arguments round-trip.
&gt;
ld64.so.1
&lt;
&amp;
 __attribute__((opencl_global_host
<string>
</dict>
ld-linux-riscv32-
  </array>
  <array>
 __attribute__((intel_reqd_sub_group_size
  <key>diagnostics</key>
-fvisibility-inlines-hidden
  <key>dwarf-debug-flags</key>
ld-linux-riscv64-
  <key>main-file</key>
 kernel
<dict>
    </dict>
ld-linux.so.2
      <key>WarningOption</key>
      <key>ID</key>
 local
      <key>message</key>
Report transformation analysis from optimization passes whose name matches the given POSIX regular expression
      <key>column</key>
libx32
      <key>line</key>
auto
      <key>filename</key>
 [[clang::opencl_local
      
const
      <key>level</key>
ld-linux-x32.so.2
    <dict>
double
FieldOffsets: [
local
align=
Give inline C++ member functions hidden visibility by default
sizeof=
ld-linux-x86-64.so.2
Alignment:
 Size:
 __private
union 
register
class 
/opt/nec/ve/lib/ld-linux-ve.so.1
struct 
sizeof
*** Dumping AST Record Layout
 __attribute__((opencl_private
Report missed transformations by optimization passes whose name matches the given POSIX regular expression
#__include_macros "
/usr/
volatile
__private
#undef 
_Atomic
HIP_API_PER_THREAD_DEFAULT_STREAM
/../include/c++
__HIP_DEVICE_COMPILE__
_Imaginary
__HIP_MEMORY_SCOPE_SYSTEM
opencl_private
__HIP_MEMORY_SCOPE_AGENT
-fno-signed-zeros
__HIP_MEMORY_SCOPE_WORKGROUP
/../include/g++
__HIP_MEMORY_SCOPE_WAVEFRONT
__ptrauth_restricted_intptr
__HIP_MEMORY_SCOPE_SINGLETHREAD
 __attribute__((optnone
__HIPCC__
class
__HIP__
-lamdhip64
__CUDA__
explicit
__CLANG_RDC__
 __attribute__((overloadable
__ASSEMBLER__
Report transformations performed by optimization passes whose name matches the given POSIX regular expression
202001
libr6
SYCL_LANGUAGE_VERSION
private
CL_SYCL_LANGUAGE_VERSION
 [[gsl::Owner
__ENDIAN_LITTLE__
static_cast
CL_VERSION_3_0
libr2
CL_VERSION_2_0
true
CL_VERSION_1_2
 [[clang::ownership_holds
CL_VERSION_1_1
Give global types 'default' visibility and global functions and variables 'hidden' visibility by default
CL_VERSION_1_0
GNU::StaticLibTool
inline
 [[clang::ownership_returns
char32_t
__llvm_profile_runtime
__OPENCL_C_VERSION__
nullptr
__CL_CPP_VERSION_2021__
 [[clang::ownership_takes
__CL_CPP_VERSION_1_0__
--rsp-quoting=
202100
/c++/v1
consteval
__OPENCL_CPP_VERSION__
ownership_returns
__OBJC__
char8_t
__STDC_UTF_32__
-lmingwthrd
__STDC_UTF_16__
_Accum
__STDCPP_THREADS__
 __attribute__((packed
__STDCPP_DEFAULT_NEW_ALIGNMENT__
Allow optimizations that ignore the sign of floating point zeros
201103L
-lmingw32
201402L
__attribute
202002L
 __attribute__((param_typestate
202101L
__builtin_FUNCTION
__cplusplus
-lmoldname
199409L
__builtin_types_compatible_p
199901L
 __attribute__((pascal
201112L
/RTC
201710L
-lmingwex
202000L
__real
__STDC_VERSION__
 __pascal
__STDC_HOSTED__
__auto_type
__STDC__
ucrt
__SHADER_TARGET_MINOR
L__FUNCSIG__
__SHADER_TARGET_MAJOR
 __attribute__((pass_object_size
__SHADER_TARGET_STAGE
The visibility for definitions without an explicit DLL export class [-fvisibility-from-dllstorageclass]
__SHADER_STAGE_LIBRARY
--subsystem
__SHADER_STAGE_MESH
__is_nothrow_constructible
__SHADER_STAGE_AMPLIFICATION
 __attribute__((pass_dynamic_object_size
__SHADER_STAGE_COMPUTE
__has_trivial_move_constructor
__SHADER_STAGE_DOMAIN
windows
__SHADER_STAGE_HULL
__has_trivial_assign
__SHADER_STAGE_GEOMETRY
pass_object_size
__SHADER_STAGE_PIXEL
Compiler runtime library to use
__SHADER_STAGE_VERTEX
console
__HLSL_ENABLE_16_BIT
__is_class
__HLSL_VERSION
 __attribute__((patchable_function_entry
__hlsl_clang
__is_final
 _Tp> {
--dll
struct __is_scalar<__attribute__((objc_ownership(autoreleasing)))
__is_standard_layout
struct __is_scalar<__attribute__((objc_ownership(weak))) _Tp> {
-fno-data-sections
-fno-single-precision-constant
  typedef __false_type __type;
--shared
  enum { __value = 0 };
__add_pointer
struct __is_scalar<__attribute__((objc_ownership(strong))) _Tp> {
 __attribute__((pcs
template<typename _Tp>
__make_unsigned
template<typename _Tp> struct __is_scalar;
struct __false_type;
__remove_cvref
struct __true_type;
 [[gsl::Pointer
namespace std {
_GLIBCXX_PREDEFINED_OBJC_ARC_IS_SCALAR
DllMainCRTStartup
POINTER_LOCK_FREE
__is_bounded_array
LLONG_LOCK_FREE
 __ptrauth_restricted_intptr
LONG_LOCK_FREE
__is_referenceable
INT_LOCK_FREE
--no-guard-cf
SHORT_LOCK_FREE
__is_arithmetic
WCHAR_T_LOCK_FREE
__ptrauth_restricted_intptr
CHAR32_T_LOCK_FREE
Set the default symbol visibility for all global definitions
CHAR16_T_LOCK_FREE
--guard-cf
CHAR8_T_LOCK_FREE
__is_lvalue_reference
CHAR_LOCK_FREE
 [[clang::ptrauth_struct
BOOL_LOCK_FREE
__is_scalar
__UINT_FAST
.exe
__INT_FAST
__is_member_function_pointer
__UINT_LEAST
 [[clang::preferred_name
__INT_LEAST
<remark>
_C_SUFFIX__
dllcrt2.o
_TYPE__
__array_rank
__UINT
 [[clang::preserve_all
__INT
__builtin_ptrauth_type_discriminator
MIN__
crt2u.o
MIN_EXP__
__builtin_xnu_type_summary
MIN_10_EXP__
 [[clang::preserve_most
MAX__
-fno-sized-deallocation
MAX_EXP__
crt2.o
MAX_10_EXP__
__thiscall
MANT_DIG__
 __attribute__((pt_guarded_var
HAS_QUIET_NAN__
__unaligned
HAS_INFINITY__
gcrt2.o
EPSILON__
__constant
DECIMAL_DIG__
 __ptr32
DIG__
-save-stats=
HAS_DENORM__
-lssp_nonshared
DENORM_MIN__
vec_step
1.18973149535723176508575932662800702e+4932
 __attribute__((pure
1.79769313486231580793728971405301e+308
image2d_t
1.18973149535723176502e+4932
-lssp
1.7976931348623157e+308
image2d_msaa_t
3.40282347e+38
user
6.5504e+4
-fwasm-exceptions
3.36210314311209350626267781732175260e-4932
-lomp
2.00416836000897277799610805135016e-292
cbuffer
3.36210314311209350626e-4932
machine
2.2250738585072014e-308
__vector
1.17549435e-38
-liomp5md
6.103515625e-5
half
1.92592994438723585305597794258492732e-34
 [[gnu::randomize_layout
1.08420217248550443401e-19
-save-stats
2.2204460492503131e-16
-lgomp
1.19209290e-7
_Nonnull
9.765625e-4
 [[clang::enforce_read_only_placement
6.47517511943802511092443895822764655e-4966
__ptr64
4.94065645841246544176568792868221e-324
-lgmon
3.64519953188247460253e-4951
-fmodule-file-cache-key
4.9406564584124654e-324
-fno-debug-info-for-profiling
1.40129846e-45
-fno-slp-vectorize-aggressive
5.9604644775390625e-8
--require-defined
__single_inheritance
_FMT
 __attribute__((reinitializes
ouxX
__builtin_convertvector
-lgdi32
_WIDTH__
__unknown_anytype
_MAX__
 __attribute__((release_capability
__cpp_coroutines
Save intermediate compilation results.
__cpp_impl_destroying_delete
-lcomdlg32
201811L
numeric_constant
__cpp_char8_t
 __attribute__((release_shared_capability
__cpp_named_character_escapes
utf16_char_constant
202207L
-ladvapi32
__cpp_static_call_operator
header_name
__cpp_multidimensional_subscript
 __attribute__((release_generic_capability
202106L
-fwchar-type=
__cpp_if_consteval
-lshell32
__cpp_size_t_suffix
l_brace
202011L
 __attribute__((unlock_function
__cpp_implicit_move
__cpp_using_enum
-luser32
__cpp_impl_three_way_comparison
starequal
__cpp_designated_initializers
release_capability
201902L
Save intermediate compilation results
__cpp_impl_coroutine
-lkernel32
__cpp_constinit
tilde
__cpp_constexpr_dynamic_alloc
release_generic_capability
201806L
slashequal
__cpp_conditional_explicit
-w64-mingw32
__cpp_concepts
lessless
__cpp_template_template_args
 __attribute__((release_handle
__cpp_aligned_new
-fno-slp-vectorize
__cpp_nontype_template_parameter_auto
mingw32
__cpp_guaranteed_copy_elision
caret
__cpp_fold_expressions
 __attribute__((kernel
__cpp_nontype_template_args
question
__cpp_structured_bindings
mingw/lib
__cpp_aggregate_bases
equalequal
201611L
 __attribute__((requires_capability
__cpp_variadic_using
/sdl
__cpp_nested_namespace_definitions
/sys-root/mingw/lib
__cpp_enumerator_attributes
__cpp_namespace_attributes
 __attribute__((exclusive_locks_required
__cpp_template_auto
annot_cxxscope
201703L
/sys-root/mingw/include
__cpp_deduction_guides
annot_non_type_undeclared
__cpp_if_constexpr
 __attribute__((requires_shared_capability
__cpp_capture_star_this
char,short,int
201510L
g++-v
__cpp_noexcept_function_type
annot_pragma_parser_crash
201606L
 __attribute__((shared_locks_required
__cpp_inline_variables
annot_pragma_align
__cpp_hex_float
-w64-mingw32-gcc
__cpp_sized_deallocation
annot_pragma_fp_contract
__cpp_variable_templates
requires_capability
__cpp_aggregate_nsdmi
-sectcreate
__cpp_return_type_deduction
mingw32-gcc
__cpp_decltype_auto
annot_pragma_opencl_extension
201707L
requires_shared_capability
__cpp_generic_lambdas
Enable sanitizer for AMDGPU target
201803L
MinGW::Assemble
__cpp_init_captures
-fno-debug-macro
201309L
MinGW::Linker
__cpp_digit_separators
__is_interface_class
__cpp_binary_literals
 __attribute__((malloc
__cpp_threadsafe_static_init
__is_nothrow_destructible
__cpp_alias_templates
 [[gnu::malloc
__cpp_ref_qualifiers
__has_nothrow_assign
201511L
i386
__cpp_inheriting_constructors
__has_trivial_copy
__cpp_nsdmi
malloc
200604L
-sectorder
__cpp_delegating_constructors
i586
200806L
__is_enum
__cpp_initializer_lists
 [[gnu::retain
__cpp_variadic_templates
__is_polymorphic
200610L
i686
__cpp_rvalue_references
__is_union
__cpp_attributes
 [[clang::return_typestate
200707L
-fwhole-file
__cpp_decltype
armv7
200410
__is_arithmetic
201411L
 [[gnu::returns_nonnull
__cpp_static_assert
__is_void
200907
-lCompilerRT-Generic
__cpp_range_based_for
__is_lvalue_reference
201711L
 [[gnu::returns_twice
__cpp_constexpr_in_decltype
-seg_addr_table_filename
200704
-L/usr/pkg/compiler-rt/lib
201304L
__is_member_function_pointer
201603L
 __attribute__((sycl_kernel
201907L
__is_signed
202110L
minix::Assembler
__cpp_constexpr
__is_assignable
200907L
 __attribute__((sycl_special_class
__cpp_lambdas
-fno-spec-constr-count
200809L
minix::Linker
__cpp_user_defined_literals
__is_constructible
__cpp_unicode_literals
 __attribute__((scoped_lockable
200710L
__array_extent
__cpp_raw_strings
-hwmult16
200704L
__builtin_ptrauth_type_discriminator
__cpp_unicode_characters
 __attribute__((section
__cpp_exceptions
Do not emit macro debug information
199711L
-hwmult32
__cpp_rtti
Enables whole-program vtable optimization. Requires -flto
tapi-1500.0.12.6
clang
__GLIBCXX_BITSIZE_INT_N_0
 version 15.0.0
__int128
section
no-format
16bit
__IMAGE_SUPPORT__
allocate
custom
__CLANG_CUDA_APPROX_TRANSCENDENTALS__
 __declspec(selectany
__CUDA_ARCH__
-fwhole-program
201811
omp_no_openmp
202111
omp_no_parallelism
202011
 [[gnu::selectany
use-dbg-addr
32bit
Address space 0 can never be non-integral
Invalid address space, must be a 24bit integer
201107
Invalid pointer size of 0 bytes
_OPENMP
 [[gnu::sentinel
__APPLE_EMBEDDED_SIMULATOR__
Invalid index size of 0 bytes
_Nullable
 __attribute__((set_typestate
__nullable
Invalid ABI alignment, must be a 16bit integer
_Null_unspecified
+hwmult32
__null_unspecified
Zero width native integer type in datalayout string
_Nonnull
 __attribute__((shared_trylock_function
__nonnull
-segprot
__attribute__((objc_ownership(none)))
+hwmultf5
__attribute__((objc_ownership(autoreleasing)))
-finline
__attribute__((objc_ownership(strong)))
Disable spell-checking
__attribute__((objc_ownership(weak)))
-fwrapv
__unsafe_unretained
 __attribute__((standalone_debug
enable-fs-discriminator
-D__
pass-remarks
Enable optimization remarks from passes whose name match the given regular expression
__strong
Enable missed optimization remarks from passes whose name match the given regular expression
__attribute__((objc_gc(weak)))
 __attribute__((stdcall
__weak
-segs_read_write_addr
__FAST_RELAXED_MATH__
non-global-value-max-name-size
__clang_analyzer__
 __stdcall
__SSP_ALL__
opaque-pointers
__SSP_STRONG__
__SSP__
 _stdcall
__LDBL_DECIMAL_DIG__
-lcrt
__DECIMAL_DIG__
 __declspec(strict_gs_check
propagate-attrs
Treat signed integer overflow as two's complement
__pie__
 [[gsl::suppress
opt-bisect-limit
Maximum optimization to perform
__pic__
swift_private
__PIC__
--undefined=__crt0_call_exit
__NO_INLINE__
DW_TAG_null
__GCC_ATOMIC_
DW_TAG_class_type
__CLANG_ATOMIC_
 __attribute__((swift_async
__GCC_ATOMIC_TEST_AND_SET_TRUEVAL
DW_TAG_imported_declaration
__GNUC_STDC_INLINE__
 [[clang::swift_async
__GNUC_GNU_INLINE__
DW_TAG_pointer_type
__FINITE_MATH_ONLY__
crtend_no_eh.o
__NO_MATH_ERRNO__
DW_TAG_structure_type
__USER_LABEL_PREFIX__
 [[clang::swiftasynccall
__WINT_UNSIGNED__
-serialize-diagnostic-file
__WCHAR_UNSIGNED__
--relax
__CHAR_UNSIGNED__
DW_TAG_inheritance
__BIGGEST_ALIGNMENT__
 [[clang::swift_async_context
__POINTER_WIDTH__
DW_TAG_set_type
MSP430::Linker
LDBL
DW_TAG_base_type
zero_argument
File for serializing diagnostics in a binary format
msp430-elf-ld
DW_TAG_namelist_item
FLT16
 __attribute__((swift_async_error
__UINTPTR_TYPE__
DW_TAG_template_value_parameter
__CHAR32_TYPE__
-lmul_16
__CHAR16_TYPE__
DW_TAG_variable
__SIG_ATOMIC
 __attribute__((swift_async_name
__WINT_TYPE__
-fwritable-strings
__WCHAR_TYPE__
-lmul_32
__SIZE_TYPE__
DW_TAG_partial_unit
__INTPTR_TYPE__
 __attribute__((swift_bridge
__PTRDIFF_TYPE__
DW_TAG_type_unit
__UINTMAX_C_SUFFIX__
-lmul_f5
__UINTMAX_TYPE__
DW_TAG_generic_subrange
__INTMAX_C_SUFFIX__
 __attribute__((swiftcall
__INTMAX_TYPE__
-serialize-diagnostics
__SIZEOF_INT128__
-lmul_none
__SIZEOF_WINT_T__
DW_TAG_format_label
__SIZEOF_WCHAR_T__
 __attribute__((swift_context
__SIZEOF_SIZE_T__
DW_TAG_GNU_EINCL
__SIZEOF_PTRDIFF_T__
-Tmsp430-sim.ld
__SIZEOF_SHORT__
DW_TAG_GNU_call_site
__SIZEOF_POINTER__
null_result
__SIZEOF_LONG_LONG__
-fno-split-cold-code
__SIZEOF_LONG_DOUBLE__
__SIZEOF_LONG__
DW_TAG_SUN_codeflags
__SIZEOF_INT__
nonzero_result
__SIZEOF_FLOAT__
DW_TAG_SUN_dtor_info
__SIZEOF_DOUBLE__
__UINTPTR
DW_TAG_SUN_hi
__INTPTR
 __attribute__((swift_error_result
__PTRDIFF
-setup-static-analyzer
__UINTMAX
-out:
__SIZE
DW_TAG_GHS_using_namespace
__INTMAX
 __attribute__((swift_indirect_result
__WINT
DW_TAG_UPC_strict_type
__WCHAR
-defaultlib:libcmt
__LONG_LONG_MAX__
DW_TAG_BORLAND_property
__LONG_MAX__
 __attribute__((swift_name
__INT_MAX__
-fxl-pragma-pack
__SHRT_MAX__
-defaultlib:oldnames
__SCHAR_MAX__
DW_AT_ordering
__BITINT_MAXWIDTH__
enum
__LLONG_WIDTH__
DW_AT_stmt_list
__LONG_WIDTH__
DIA SDK
__INT_WIDTH__
DW_AT_discr
__SHRT_WIDTH__
 __attribute__((swift_wrapper
__BOOL_WIDTH__
-shared-libasan
__CHAR_BIT__
__ILP32__
DW_AT_containing_type
_ILP32
swift_wrapper
__LP64__
DW_AT_lower_bound
_LP64
atlmfc
__LITTLE_ENDIAN__
DW_AT_start_scope
__BIG_ENDIAN__
 __attribute__((swift_private
__BYTE_ORDER__
Disable splitting of cold code when optimizing.
3412
/subsystem:console
__ORDER_PDP_ENDIAN__
DW_AT_calling_convention
4321
 [[clang::symbol_metadata_footnote
__ORDER_BIG_ENDIAN__
DW_AT_decl_file
1234
-nologo
__ORDER_LITTLE_ENDIAN__
DW_AT_encoding
__FAST_MATH__
 [[gnu::sysv_abi
__OPTIMIZE_SIZE__
-shared-libsan
__OPTIMIZE__
-debug
"UTF-16"
DW_AT_segment
"UTF-32"
 [[gnu::tls_model
__clang_wide_literal_encoding__
DW_AT_use_location
"UTF-8"
-functionpadmin
__clang_literal_encoding__
DW_AT_allocated
_NATIVE_WCHAR_T_DEFINED
 [[gnu::target
_WCHAR_T_DEFINED
-fxor-operator
extern
-Brepro
__private_extern__
DW_AT_trampoline
__DEPRECATED
 [[gnu::target_clones
__ARM_DWARF_EH__
DW_AT_description
__SEH__
-dll
__USING_SJLJ_EXCEPTIONS__
DW_AT_decimal_sign
__GXX_RTTI
 [[clang::test_typestate
__EXCEPTIONS
-shared
__BLOCKS__
-implib:
__attribute__((__blocks__(byref)))
DW_AT_elemental
__block
 [[gnu::thiscall
__PASCAL_STRINGS__
DW_AT_main_subprogram
OBJC_NEW_PROPERTIES
-wholearchive:
__CONSTANT_CFSTRINGS__
DW_AT_linkage_name
__OBJC_BOOL_IS_BOOL
Disables debug printing for the new pass manager
IB_DESIGNABLE
-fno-split-dwarf-inlining
IBInspectable
-incremental:no
void)__attribute__((ibaction)
DW_AT_dwo_name
IBAction
 __attribute__((transparent_stepping
__attribute__((iboutletcollection(ClassName)))
DW_AT_call_all_calls
IBOutletCollection(ClassName)
-include:___asan_seh_interceptor
__attribute__((iboutlet))
DW_AT_call_value
IBOutlet
 __attribute__((transparent_union
__OBJFW_RUNTIME_ABI__
Show instruction encoding information in transliterate mode
-include:__asan_seh_interceptor
__OBJC_GNUSTEP_RUNTIME_ABI__
DW_AT_call_data_value
__NEXT_RUNTIME__
 __attribute__((trivial_abi
__OBJC_GC__
DW_AT_deleted
OBJC_ZEROCOST_EXCEPTIONS
-guard:cf
__OBJC2__
DW_AT_GHS_using_namespace
__GXX_EXPERIMENTAL_CXX0X__
 __attribute__((try_acquire_capability
__STRICT_ANSI__
-fxray-always-emit-customevents
__VERSION__
-guard:cf-
__PRAGMA_REDEFINE_EXTNAME
DW_AT_MIPS_linkage_name
__OPENCL_MEMORY_SCOPE_SUB_GROUP
 __attribute__((try_acquire_shared_capability
__OPENCL_MEMORY_SCOPE_ALL_SVM_DEVICES
DW_AT_MIPS_has_inlines
__OPENCL_MEMORY_SCOPE_DEVICE
-guard:ehcont
__OPENCL_MEMORY_SCOPE_WORK_GROUP
DW_AT_MIPS_allocatable_dopetype
__OPENCL_MEMORY_SCOPE_WORK_ITEM
try_acquire_capability
__ATOMIC_SEQ_CST
Print cl.exe style /showIncludes to stdout
__ATOMIC_ACQ_REL
-guard:ehcont-
__ATOMIC_RELEASE
DW_AT_HP_cold_region_low_pc
__ATOMIC_ACQUIRE
 _Nonnull
__ATOMIC_CONSUME
DW_AT_HP_prof_flags
__ATOMIC_RELAXED
-nodefaultlib:vcomp.lib
__GXX_WEAK__
DW_AT_HP_definition_points
__GNUG__
 _Nullable
1002
-fno-split-lto-unit
__GXX_ABI_VERSION
-nodefaultlib:vcompd.lib
__GNUC_PATCHLEVEL__
DW_AT_GHS_subcpu
__GNUC_MINOR__
 __attribute__((type_tag_for_datatype
__GNUC__
DW_AT_mac_info
"15.0.0 
-defaultlib:libomp.lib
__clang_version__
DW_AT_GNU_vector
__clang_patchlevel__
default
__clang_minor__
Show internal instruction representation in transliterate mode
-defaultlib:libiomp5md.lib
__clang_major__
DW_AT_GNU_all_tail_call_sites
__clang__
protected
__llvm__
DW_AT_GNU_deleted
#define 
link
# 1 "<built-in>" 2
DW_AT_GNU_addr_base
# 1 "<command line>" 1
 [[clang::type_visibility
# 1 "<built-in>" 3
-fxray-always-emit-typedevents
__opencl_c_int64
lld-link
__opencl_c_images
DW_AT_SUN_vtable
__opencl_c_fp64
 [[clang::typed_memory_operation
__opencl_c_program_scope_global_variables
DW_AT_SUN_compile_options
__opencl_c_read_write_images
link.exe
__opencl_c_device_enqueue
DW_AT_SUN_func_offsets
__opencl_c_3d_image_writes
 __attribute__((unavailable
__opencl_c_subgroups
Do not print the name of each compiled file (default)
__opencl_c_atomic_order_seq_cst
cl.exe
__opencl_c_atomic_order_acq_rel
DW_AT_SUN_memop_signature
__opencl_c_generic_address_space
 __attribute__((uninitialized
__opencl_c_pipes
DW_AT_SUN_hwcprof_signature
cl_intel_device_side_avc_motion_estimation
amdhip64.lib
cl_intel_subgroups_short
DW_AT_SUN_pass_with_const
cl_intel_subgroups
-fno-debug-ranges-base-address
cl_arm_integer_dot_product_accumulate_saturate_int8
-fno-split-machine-functions
cl_arm_integer_dot_product_accumulate_int16
cl_arm_integer_dot_product_accumulate_int8
DW_AT_SUN_return_value_ptr
cl_arm_integer_dot_product_int8
 __attribute__((unsafe_buffer_usage
cl_amd_media_ops2
DW_AT_SUN_dtor_state_final
cl_amd_media_ops
__cl_clang_bitfields
DW_AT_SUN_namelist_spec
__cl_clang_non_portable_kernel_param_types
 [[maybe_unused
__cl_clang_variadic_functions
Print the name of each compiled file
__cl_clang_function_pointers
INCLUDE
cl_clang_storage_class_specifiers
DW_AT_GNU_denominator
cl_khr_subgroups
 [[gnu::unused
cl_khr_srgb_image_writes
DW_AT_GO_elem
cl_khr_mipmap_image_writes
EXTERNAL_INCLUDE
cl_khr_mipmap_image
DW_AT_IBM_wsa_addr
cl_khr_gl_msaa_sharing
unused
cl_khr_depth_images
-fxray-always-instrument=
cles_khr_int64
Include
cl_khr_3d_image_writes
DW_AT_BORLAND_property_implements
cl_khr_int64_extended_atomics
 [[clang::use_handle
cl_khr_int64_base_atomics
DW_AT_BORLAND_Delphi_class
cl_khr_fp16
shared
cl_khr_fp64
DW_AT_BORLAND_Delphi_destructor
cl_khr_local_int32_extended_atomics
 [[gnu::used
cl_khr_local_int32_base_atomics
Like /showIncludes but omit system headers
cl_khr_global_int32_extended_atomics
winrt
cl_khr_global_int32_base_atomics
DW_AT_LLVM_config_macros
cl_khr_byte_addressable_store
 __attribute__((using_if_exists
failed to find or infer submodule '
DW_AT_LLVM_ptrauth_address_discriminated
failed to find module '
cppwinrt
Note: including file:
DW_AT_LLVM_ptrauth_authenticates_null_values
hlsl
 __declspec(uuid
Disable late function splitting using profile information (x86 ELF)
-D_HAS_STATIC_RTTI=0
DW_AT_APPLE_property_name
default_key
DW_AT_APPLE_objc_complete_type
clcpp
visualstudio::Linker
DW_AT_APPLE_origin
process_dependent
Print info about included files to stderr
cppm
-fno-exceptions
DW_FORM_block
default_address_discrimination
DW_FORM_sdata
-DMYRIAD2
unknown module format
DW_FORM_ref1
address_discrimination
2.1.0
-fxray-attr-list=
https://docs.oasis-open.org/sarif/sarif/v2.1.0/cos02/schemas/sarif-schema-2.1.0.json
moviCompile
%0 was deserialized
DW_FORM_flag_present
no_extra_discrimination
PCH DECL: 
DW_FORM_ref_sup4
.hpp
-no6thSlotCompression
DW_FORM_implicit_const
custom_discrimination
-single_module
#include "
-cv:
#import "
DW_FORM_addrx1
extern "C" {
 [[clang::ptrauth_vtable_pointer
DW_FORM_GNU_addr_index
STATISTICS FOR '
-noSPrefixing
<PCH>
-fmodule-file-deps
-fmodule-file-cache-key
-fno-debug-types-section
-fno-split-stack
while building module '
' imported from 
DW_OP_const4s
in module '
 __attribute__((vectorcall
in file included from 
DW_OP_consts
 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
(skipping 
DW_OP_pick
expanded from macro '
 __vectorcall
expanded from here
Include module map files only for imported modules in dependency output
header_
DW_OP_mod
 __attribute__((visibility
DW_OP_or
 [ shape="box", label="
moviAsm
digraph "dependencies" {
DW_OP_shr
 #${}^!
 __attribute__((warn_unused
<built-in>
-fxray-function-groups=
-lrtemscpu
DW_OP_lt
-header-include-file
 [[nodiscard
-module-file-deps
DW_OP_lit1
-dependency-dot
-lrtemsbsp
-dependency-file
DW_OP_lit5
 __attribute__((warn_unused_result
Set source encoding, supports only UTF-8
sparc-myriad-rtems-ld
-fshow-skipped-includes
DW_OP_lit13
-fminimize-whitespace
nodiscard
-fuse-line-directives
DW_OP_lit17
myriad
DW_OP_lit21
 __attribute__((weak
Wouldn't use segmented stack
-detailed-preprocessing-record
sparc-myriad-rtems
-dump-deserialized-decls
DW_OP_lit29
-fallow-pch-with-different-modules-cache-path
 __attribute__((weak_import
-fallow-pch-with-compiler-errors
DW_OP_reg1
-fno-validate-pch
/../sparc-myriad-rtems/lib
-fobjc-arc-cxxlib=
DW_OP_reg5
-pch-through-hdrstop-create
 __attribute__((weakref
-undef
Time to be used in __DATE__, __TIME__, and __TIMESTAMP__ macros
-imacros
/../include/c++/v1
hlsl.h
DW_OP_reg13
opencl-c.h
 __attribute__((export_name
opencl-c-base.h
DW_OP_reg17
-reorder-cxx-includes-hack
movicompile
-fmodules-strict-context-hash
DW_OP_reg21
-fmodules-hash-content
 __attribute__((import_module
-fdisable-module-hash
-fxray-function-index
-nostdsysteminc
shave::Linker
-fmodule-format=
DW_OP_reg29
-fmodule-file-home-is-cwd
 __attribute__((import_name
-fmodule-map-file-home-is-cwd
DW_OP_breg1
-nostdinc++
nacl-arm-macros.s
-nobuiltininc
DW_OP_breg5
-fimplicit-module-maps
 __attribute__((work_group_size_hint
-fvalidate-ast-input-files-content
/sourceDependencies
-fmodules-disable-diagnostic-validation
elf_i386_nacl
-fmodules-validate-once-per-build-session
DW_OP_breg13
-fbuild-session-timestamp=
 [[gnu::force_align_arg_pointer
-fmodules-prune-after=
DW_OP_breg17
-fmodules-prune-interval=
armelf_nacl
-fmodules-user-build-path
DW_OP_breg21
/validator-version
-fno-declspec
-target-linker-version
-fno-stack-arrays
-target-feature
elf_x86_64_nacl
-tune-cpu
DW_OP_breg29
-target-cpu
 [[clang::xray_never_instrument
-munsafe-fp-atomics
DW_OP_fbreg
-mcode-object-version=
mipselelf_nacl
-mcmodel=
DW_OP_xderef_size
-fforce-enable-int128
xray_never_instrument
-fcompilation-caching-service-path
-specs
-fcache-disable-replay
Native Client
-fcache-compile-job
DW_OP_bit_piece
-fcas-include-tree
 [[clang::xray_log_args
-fno-modules-share-filemanager
DW_OP_addrx
-fallow-pcm-with-compiler-errors
-lnacl
-version
DW_OP_regval_type
-fno-pch-timestamp
 [[clang::xnu_usage_semantics
-foverride-record-layout=
Don't instrument functions with loops unless they also meet the minimum function size
-fixit-to-temporary
-lpnacl_legacy
-fixit-recompile
DW_OP_HP_fltconst8
-fix-only-warnings
used-gpr-arg
-fix-what-you-can
DW_OP_INTEL_bit_piece
-stats-file=
x86_64-nacl/lib32
-print-stats
DW_OP_GNU_entry_value
-arcmt-action=
used-arg
-ast-dump-lookups
Name of the split dwarf debug info file to encode in the object file
-ast-dump-decl-types
i686-nacl/usr/lib
-fno-implicit-modules-use-lock
DW_OP_LLVM_implicit_pointer
-fmodules-embed-all-files
all-gpr
-fmodules-embed-file=
DW_ATE_complex_float
-fno-modules-global-index
x86_64-nacl/usr/lib
-ast-dump-filter
DW_ATE_unsigned
-add-plugin
-disable-free
-fno-stack-check
-code-completion-with-fixits
arm-nacl/usr/lib
-code-completion-brief-comments
DW_ATE_decimal_float
-no-code-completion-ns-level-decls
 [[gnu::zero_call_used_regs
-no-code-completion-globals
DW_ATE_HP_complex_float
-code-completion-patterns
mipsel-nacl/usr/lib
-code-completion-macros
DW_ATE_HP_imaginary_float90
-aux-triple
target,targetsync
-ast-merge
File name to use for split dwarf debug info output
-print-supported-cpus
i686-nacl/usr/include
-mllvm
DW_END_big
-relocatable-pch
BlockCommandComment
-help
DW_ACCESS_public
-ftime-trace=
x86_64-nacl/include
-ftime-trace-granularity=
DW_DEFAULTED_in_class
-ftime-trace
TParamCommandComment
-fno-temp-file
Sets the minimum function size to instrument with XRay
-fmodule-map-file=
arm-nacl/usr/include
--extract-api-ignores=
DW_LANG_C89
--product-name=
VerbatimLineComment
-index-ignore-pcms
DW_LANG_Cobol74
-index-ignore-macros
x86_64-nacl/usr/include
-index-unit-output-path
DW_LANG_Pascal83
-index-record-codegen-name
FullComment
-objcmt-allowlist-dir-path=
Lower bound for a buffer to be considered for stack protection
-objcmt-migrate-designated-init
mipsel-nacl/usr/include
-objcmt-ns-nonatomic-iosonly
DW_LANG_ObjC_plus_plus
-objcmt-returns-innerpointer-property
HTMLStartTagComment
-objcmt-atomic-property
DW_LANG_OpenCL
-objcmt-migrate-protocol-conformance
arm-nacl/include/c++/v1
-objcmt-migrate-ns-macros
-fmodule-file-home-is-cwd
-objcmt-migrate-instancetype
Disallow __declspec as a keyword
-objcmt-migrate-annotation
Disable stack checking
-objcmt-migrate-property-dot-syntax
x86_64-nacl/include/c++/v1
-objcmt-migrate-readwrite-property
DW_LANG_C_plus_plus_14
-objcmt-migrate-readonly-property
[in]
-objcmt-migrate-all
DW_LANG_BLISS
-objcmt-migrate-property
mipsel-nacl/include/c++/v1
-objcmt-migrate-literals
DW_ID_case_sensitive
-arcmt-migrate-emit-errors
[in,out]
-arcmt-migrate-report-output
Enable stack protectors
-analyzer-werror
NaCl::Linker
-analyzer-config-compatibility-mode
DW_CC_pass_by_value
-analyzer-checker-option-help-developer
-analyzer-checker-option-help-alpha
DW_CC_BORLAND_stdcall
-analyzer-checker-option-help
/libexec/ld.elf_so
-analyzer-list-enabled-checkers
DW_CC_BORLAND_thiscall
-analyzer-config-help
-analyzer-checker-help-developer
Select which XRay instrumentation points to emit. Options: all, none, function-entry, function-exit, function, custom. Default is 'all'.  'function' includes both 'function-entry' and 'function-exit'.
-analyzer-checker-help-alpha
armelf_nbsd_eabi
-analyzer-checker-help
DW_CC_LLVM_SpirFunction
-analyzer-disable-all-checks
-analyzer-stats
DW_CC_LLVM_PreserveAll
-analyzer-max-loop
armelf_nbsd_eabihf
-analyzer-disable-retry-exhausted
DW_INL_not_inlined
-analyzer-inline-max-stack-depth
link
-analyzer-dump-egraph
-stack-usage-file
-analyzer-viz-egraph-graphviz
armelf_nbsd
-trim-egraph
DW_LNS_advance_pc
-analyze-function
-analyzer-display-progress
DW_LNS_negate_stmt
-analyzer-opt-analyze-headers
armelfb_nbsd_eabi
-unoptimized-cfg
DW_LNS_set_prologue_end
-no-finalize-removal
refitem
-no-ns-alloc-error
-fno-stack-clash-protection
-fcas-fs-working-directory
armelfb_nbsd_eabihf
-fcas-fs
DW_MACINFO_undef
-working-directory
section
-hlsl-entry
DW_MACINFO_invalid
__CET__=3
armelfb_nbsd
__CET__=2
DW_MACRO_end_file
__CET__=1
sign-and-auth
--start-no-unused-arguments
sign-and-strip
elf32ppc_nbsd
strip
DW_MACRO_undef_strx
main
abstract
<module-includes>
DW_MACRO_GNU_end_file
<stdin>
=/usr/lib/i386
DW_MACRO_GNU_define_indirect_alt
addtogroup
assembler-with-cpp
Generate XRay instrumentation sleds on function entry and exit
hlsl
=/usr/lib/eabi
renderscript
DW_RLE_base_address
cuda
DW_LLE_base_addressx
clcpp
=/usr/lib/eabihf
-user
DW_LLE_default_location
-system
author
-header-unit
-static-define
-header
=/usr/lib/oabi
Source-level compatibility for Altivec vectors (for PowerPC targets). This includes results of vector comparison (scalar for 'xl', vector for 'gcc') as well as behavior when initializing with a scalar (splatting for 'xl', element zero only for 'gcc'). For 'mixed', the compatibility is as 'gcc' for 'vector bool/vector pixel' and as 'xl' for other types. Current default is 'mixed'.
DW_CFA_nop
-faltivec-src-compat=
Enable the old style PARAMETER statement
DW_CFA_set_loc
-falternative-parameter-statement
-fallow-unsupported
DW_CFA_offset_extended
Accept a PCH file that was created with a different modules cache path
-fallow-pcm-with-compiler-errors
Accept a PCM file that was created with compiler errors
-fno-default-inline
Disable stack clash protection
=/usr/lib/o32
-fallow-pch-with-different-modules-cache-path
DW_CFA_def_cfa_register
Accept a PCH file that was created with compiler errors
callgraph
-fallow-pch-with-compiler-errors
DW_CFA_offset_extended_sf
Treat editor placeholders as valid source code
=/usr/lib/64
-fallow-editor-placeholders
DW_CFA_val_offset_sf
-fall-intrinsics
callergraph
-faligned-new=
-faligned-new
-static-libgcc
=/usr/lib/powerpc
Enable C++17 aligned allocation functions
DW_APPLE_PROPERTY_retain
-faligned-allocation
cite
Aligned allocation/deallocation functions are unavailable
DW_APPLE_PROPERTY_atomic
-faligned-alloc-unavailable
=/usr/lib/sparc
-falign-loops
DW_APPLE_PROPERTY_nullability
classdesign
-falign-loops=
N must be a power of two. Align loops to the boundary
Tells clang to add the link dependencies for XRay.
=/usr/lib
-falign-labels
DW_UT_split_type
-falign-labels=
code
-falign-jumps
DW_ATOM_die_tag
-falign-jumps=
/usr/include/c++
-falign-functions
NONE
-falign-functions=
concept
-faggressive-function-elimination
-falign-commons
-static-libsan
/usr/include/g++
Set the mode for address space map based mangling; OpenCL testing purposes only
target,no,yes
-faddrsig
Emit an address-significance table
-fgcse-sm
-finput-charset=
Use the current working directory as the base directory of compiled module files.
-D_REENTRANT
-faddress-space-map-mangling=
-fxray-modes=
-faccess-control
Follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
copydetails
-faapcs-bitfield-width
SV64
Follows the AAPCS standard that all volatile bit-field write generates at least one load. (ARM only).
copydoc
-faapcs-bitfield-load
netbsd::Linker
Preprocess to stdout
date
Only run the preprocessor
-static-libstdc++
__start
Entry point name
R_POS
defgroup
Extract API information
R_REL
-extract-api
/usr/libexec/ld.so
Comma separated list of files containing a new line separated list of API symbols to ignore when extracting API information.
R_GL
--extract-api-ignores=
deprecated
/external:
--extra-warnings
List of modes to link in by default into XRay instrumented binaries.
-nopie
/external:W4
R_TLS_IE
Enable -Wsystem-headers
/external:W2
/external:W3
Disable the use of stack protectors
-fxray-never-instrument=
remarks-section
/usr/lib
can't read more than %zu at a time, trying to read %u
can't enter sub-block: current code size is 0
/external:W0
Abbreviation starts with an Array or a Blob
Add directory to include search path with warnings suppressed
docbookinclude
/external:I
Array op not second to last
<var>
docbookonly
/external:env:
Add dirs in env var <var> to include search path with warnings suppressed
-static-pie
enddocbookonly
cortex-a34
cortex-a35
-extend-lifetimes=
dontinclude
--extdirs
cortex-a57
--extdirs=
/usr/lib/libcompiler_rt.a
/exportHeader
cortex-a73
-exported_symbols_list
enddot
/experimental:
cortex-a77
Set runtime encoding, supports only UTF-8
openbsd::Assembler
/execution-charset:
cortex-r82
dwarf,sjlj,seh,wasm
-exception-model
The exception model
-static
openbsd::Linker
-exception-model=
neoverse-v1
/errorReport
elseif
Emit error if a specific declaration is deserialized from PCH, for testing
apple-a8
-error-on-deserialized-decl
--dependent-lib=
-error-on-deserialized-decl=
apple-a12
Disable linemarker output and preprocess to stdout
emoji
Just run preprocessor, no output (for timings)
DEPRECATED: Filename defining the whitelist for imbuing the 'never instrument' XRay attribute.
-Eonly
apple-s5
--entry
endif
Start emitting warnings for unused driver arguments
falkor
--end-no-unused-arguments
--dependent-lib=lib
--encoding
thunderx3t110
--encoding=
example
Enable analyzing function argument and return types for mandatory definedness
-enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang
Filename to write statistics to
-enable-noundef-analysis
ampere1
Enable 16-bit types and disable min precision types.Available in HLSL 2018 and shader model 6.2.
extends
/enable-16bit-types
+lse
Enable linker job to emit a static library.
SceDbgUBSanitizer_stub_weak
--emit-static-lib
+sha3
Emit pristine LLVM IR from the frontend by not running any LLVM passes at all.Same as -S + -emit-llvm + -disable-llvm-passes.
Generate pre-compiled header file
/emit-pristine-llvm
-fno-stack-size-section
SceDbgAddressSanitizer_stub_weak
-emit-pch
+spe
Emit native object files
-emit-obj
+sve2-aes
Generate pre-compiled module file from a module map
SceUBSanitizer_nosubmission_stub_weak
-emit-module
+sve2p1
Generate pre-compiled module file from a C++ module interface
Build the parse tree, then lower it to MLIR
-emit-module-interface
/std:
SceAddressSanitizer_nosubmission_stub_weak
-emit-mlir
+i8mm
Generate Interface Stub Files, emit merged text not binary.
file
-emit-merged-ifs
+ls64
Use the LLVM representation for assembler and object files
SceThreadSanitizer_nosubmission_stub_weak
-emit-llvm
+sme
Preserve order of LLVM use-lists when serializing
function
Build ASTs and convert to LLVM, discarding output
-emit-llvm-uselists
When using -fxray-function-groups, select which group of functions to instrument. Valid range is 0 to fxray-function-groups - 1
-lSceDbgJmc
-emit-llvm-only
Build ASTs then convert to LLVM, emit .bc file
headerfile
-emit-llvm-bc
armv8.1-a
Generate Interface Stub Files.
-lSceJmc_nosubmission
-emit-interface-stubs
8.2-A
Output input source as HTML
helperclass
Generate C++20 header units from header files
-emit-html
Language standard to compile for
-fuse-ld
-emit-header-unit
armv8.5-a
Generate pre-compiled module file from a set of header files
hidecallgraph
-emit-header-module
8.6-A
-emit-fir
/../../
Generate machine code, but discard output
+v8.7a
-emit-ast
Emit Clang AST files for source inputs
-emit-codegen-only
-fno-delayed-template-parsing
-fno-standalone-debug
target/include
9.1-A
Set exception handling model
hiderefs
+v9.2a
Emit Windows EH Continuation Guard tables
 system headers
-ehcontguard
armv8-r
htmlonly
<macro[=value]>
Use directory as the C++ standard library include path
target/lib
Define macro
idlexcept
<macro>=<value>
Define <macro> to <value> (or 1 if <value> omitted)
 system libraries
sha2
ifnot
-dynamiclib
-dynamic
-fzero-call-used-regs=
-fvisibility-dllexport=protected
-dylinker
simd
-dylinker_install_name
implements
-dylib_file
fp16fml
--dyld-prefix
-fvisibility-nodllstorageclass=hidden
--dyld-prefix=
-dwarf-version=
ingroup
-dwarf-ext-refs
Generate debug info with external references to clang modules or precompiled headers
C++ standard library to use
-fvisibility-externs-dllimport=default
Generate explicit import from anonymous namespace to containing scope
sve2-sm4
-dwarf-explicit-import
interface
The string to embed in the Dwarf debug AT_producer record.
sve2-bitperm
-dwarf-debug-producer
-fvisibility-externs-nodllstorageclass=default
The string to embed in the Dwarf debug flags record.
rcpc
-dwarf-debug-flags
endinternal
-dumpspecs
-dumpversion
Limit debug information produced to reduce size of debug binary
-dumpmachine
Run preprocessor, dump internal rep of tokens
latexinclude
-dump-tokens
bf16
Lex file in raw mode and dump raw tokens
SCE_ORBIS_SDK_DIR
-dump-raw-tokens
f32mm
Dump declarations that are deserialized from PCH, for testing
endlatexonly
emit the CAS identifier for the tree instead of the full -cc1
-dump-deserialized-decls
--stdlib
-dump-depscan-tree=
brbe
Dump the coverage mapping records, for testing
line
-dump-coverage-mapping
flagm
Directory to output dSYM's (if any) to
SCE_PROSPERO_SDK_DIR
-dsym-dir
sme-f64f64
Set the driver mode to either 'gcc', 'g++', 'cpp', or 'cl'
mainpage
/doc
--driver-mode=
skip,used-gpr-arg,used-gpr,used-arg,used,all-gpr-arg,all-gpr,all-arg,all
-lto-thin-debug-options=
Print include directives in -E mode in addition to normal output
Print macro definitions in -E mode instead of normal output
Specify the default character set for source files
-fzero-initialized-in-bss
-sub_library
Discard value names in LLVM IR
-discard-value-names
memberof
Do not emit code that uses the red zone.
v7hl
-disable-red-zone
PScpu::Assembler
Disable any #pragma clang __debug that can lead to crashing behavior. This is meant for testing.
v7-r
-disable-pragma-debug-crash
methodgroup
disable the default synthesis of Objective-C properties
v7e-m
-disable-objc-default-synthesize-properties
PScpu::Linker
Disable adding the optnone attribute to functions at O0
arm64
-disable-O0-optnone
endmsc
-disable-llvm-verifier
Don't run the LLVM IR verifier pass
-sub_umbrella
orbis-
Use together with -emit-llvm to get pristine LLVM IR from the frontend by not running any LLVM passes at all
v8.4-a
-disable-llvm-passes
-disable-llvm-optzns
v8.7a
Disable lifetime-markers emission even when optimizations are enabled
libclang_rt.profile-x86_64.a
-disable-lifetime-markers
Disable freeing of memory on exit
namespace
<dir>
-disable-free
-sycl-std=
prospero-
Path to the DIA SDK
v9.3a
/diasdkdir
nosubgrouping
Disable caret diagnostics but keep column info
v8-m.main
/diagnostics:column
libclang_rt.profile-x86_64_nosubmission.a
Disable column and caret diagnostics
-vfp2sp
/diagnostics:classic
overload
/diagnostics:caret
Enable caret and column diagnostics (default)
-fzvector
Filename (or -) to log diagnostics to
-vfp4d16sp
-diagnostic-log-file
include a detailed record of preprocessing actions
-fp-armv8sp
-detailed-preprocessing-record
lib/crt0.o
Add dependent library
thumb
--dependent-lib=
-dependency-file
Filename (or -) to write dependency output to
2020,2017,121,1.2.1,sycl-1.2.1
RISCV::Linker
Filename to write DOT-formatted header dependencies to
invalid
-dependency-dot
endparblock
--dependencies
vfpv3
Define a value for a symbol
_start
-defsym
vfpv3-d16
--define-macro
param
Apply given attribute to all functions
--define-macro=
-fno-strict-aliasing
-default-function-attr
fp5-sp-d16
--debug
post
gdb,lldb,sce,dbx
fpv5-d16
-debugger-tuning=
values-Xa.o
--debug=
arm8
Emit macro debug information
private
-debug-info-kind=
-debug-info-macro
Include system headers in dependency output
values-Xc.o
Emit complete descriptions of template parameters in forward declarations
arm710t
-debug-forward-template-params
property
-dead_strip
arm920
Print macro definitions in -E mode in addition to normal output
values-xpg6.o
ep9312
protocol
-darwin-target-variant
Generate code for an additional runtime variant of the deployment target
values-xpg4.o
Specify the darwin target variant triple
arm1020e
-darwin-target-variant-triple
publicsection
The version of darwin target variant SDK used for compilation
arm1136jf-s
-darwin-target-variant-sdk-version=
-zrelax=transtls
arm1176jzf-s
/d2Zi+
Dump record layout information
/d2FastFail
--sysroot
solaris::Assembler
/d1reportAllClassLayout
cortex-a7
Retain macro definitions in /E mode
relatedalso
/d1PP
cortex-a15
Compile only
solaris::Linker
cortex-r4f
Do not discard comments when preprocessing
Only run preprocess, compile, and assemble steps
-fno-delete-null-pointer-checks
-fno-strict-enums
/usr/bin/ld
cortex-m7
Include comments in preprocessed output
remarks
cortex-m55
Add directory to the C++ SYSTEM include search path
-to-binary
-cxx-isystem
cortex-a53
-current_version
return
-cuid=
An ID for compilation unit, which should be the same for the same compilation unit but different for different compilation units. It is used to externalize device-side static variables for single source offloading languages CUDA and HIP so that they can be accessed by the host code of the same compilation unit.
Treat all #include paths starting with <prefix> as including a system header.
--spirv-tools-dis
CUDA installation path
cortex-a77
--cuda-path=
retval
Ignore environment variables to detect CUDA installation
cortex-x1
--cuda-path-ignore-env
Enable device-side debug info generation. Disables ptxas optimizations.
neoverse-v1
--cuda-noopt-device-debug
rtfonly
--cuda-include-ptx=
Include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
llvm-spirv
Compile CUDA code for host only. Has no effect on non-CUDA compilations.
swift
--cuda-host-only
--cuda-gpu-arch=
aapcs
Manually specify the CUDA feature to use
SPIRV::Linker
--cuda-feature=
Compile CUDA code for device only
endsecreflist
Compile CUDA code for both host and device (default). Has no effect on non-CUDA compilations.
--cuda-device-only
spirv-link
--cuda-compile-host-device
Enable predefined and command line preprocessor macros
-cpp
+v5e
-cpp-precomp
SPIR-V::Translator
-coverage
Four-byte version string for gcov files.
short
Emit coverage notes to this filename.
-coverage-version=
-fno-strict-float-cast-overflow
/../libexec
-coverage-notes-file
armv6kz
-coverage-notes-file=
showrefby
Emit coverage data to this filename.
-coverage-data-file
/opt/nec/ve/bin
-coverage-data-file=
/constexpr:
since
--config
--constant-cfstrings
/opt/nec/ve/lib
Specify configuration file
--config=
skipline
User directory for configuration files
+v7em
--config-user-dir=
NCC_C_INCLUDE_PATH
System directory for configuration files
armv8.1-a
--config-system-dir=
static
none,zlib,zstd
-compress-debug-sections
/opt/nec/ve/include
DWARF debug sections compression type
+v8.3a
-compress-debug-sections=
subpage
--compile
armv8.5-a
Dump the compiler configuration options
NCC_CPLUS_INCLUDE_PATH
-compiler-options-dump
8.6-A
-compatibility_version
subsubsection
--comments-in-macros
--comments
Target a particular ABI type
-ldl
-combine
armv9-a
Include code completion results which require small fix-its.
tableofcontents
-code-completion-with-fixits
9.1-A
Include code patterns in code-completion results
Include brief documentation comments in code-completion results.
-code-completion-macros
Include macros in code-completion results
-code-completion-patterns
Specify the mapping of module name to precompiled module file, or load a module file if name is omitted.
Do not treat usage of null pointers as undefined behavior
Relax language rules and try to match the behavior of the target's native float-to-int conversion instructions
wasm64
-code-completion-brief-comments
8-M.Baseline
<file>:<line>:<column>
/textblock
Dump code-completion information at a location
+v8m.main
-code-completion-at
wasm32
-code-completion-at=
iwmmxt2
/clr
throws
Clear the Clang AST before running backend code generation
-client_name
Target a specific cpu type
crt1-command.o
-clear-ast-before-backend
--classpath
tparam
--CLASSPATH
vfpv3xd-fp16
--classpath=
crt1-reactor.o
--CLASSPATH=
neon-fp16
Pass <arg> to the clang driver
startuml
Vendor specific clang features
/clang:
_initialize
-clang-vendor-feature=
OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable.
union
-cl-unsafe-math-optimizations
-ras
OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel
--shared-memory
-cl-uniform-work-group-size
OpenCL only. This option is added for compatibility with OpenCL 1.0.
cl,CL,cl1.0,CL1.0,cl1.1,CL1.1,cl1.2,CL1.2,cl2.0,CL2.0,cl3.0,CL3.0,clc++,CLC++,clc++1.0,CLC++1.0,clc++2021,CLC++2021
-cl-strict-aliasing
Target specific attributes
wasm-opt
OpenCL language standard to compile for.
cdecp2
-cl-std=
verbatim
OpenCL only. Treat double precision floating-point constant as single precision constant.
+cdecp3
-cl-single-precision-constant
-mno-atomics
OpenCL only. This option disables all optimizations. By default optimizations are enabled.
-cdecp4
-cl-opt-disable
version
-cl-no-stdinc
OpenCL only. Disables all standard includes containing non-native compiler types and functions.
-fno-strict-modules-decluse
-mno-bulk-memory
-cl-no-signed-zeros
OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
Like -fno-semantic-interposition but don't use local aliases
-mno-mutable-globals
OpenCL only. Allow use of less precise MAD computations in the generated binary.
String contains multiple dots
-cl-mad-enable
xrefitem
OpenCL only. Generate kernel argument metadata.
+Inf
-cl-kernel-arg-info
xmlinclude
OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
Invalid string
-cl-fp32-correctly-rounded-divide-sqrt
-mno-sign-ext
-cl-finite-math-only
OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
Target linker version
endxmlonly
-cl-fast-relaxed-math
Number of memory regions: 
Bytes used: 
-cl-ext=
+bulk-memory
OpenCL only. Allow denormals to be flushed to zero.
Could not convert UTF16 to UTF8
-cl-denorms-are-zero
\@"&<
<file>
Include and chain a header file after turning it into PCH
-chain-include
/cgthreads
+mutable-globals
Emit Windows Control Flow Guard tables and checks
' value invalid for integer argument!
-cfguard
-cfguard-no-checks
Emit Windows Control Flow Guard tables only (no checks)
-target-sdk-version=
+sign-ext
Add C++ implicit destructors to CFGs for all analyses
General options
-cfg-add-implicit-dtors
Include comments from within macros in preprocessed output
Cannot specify more than one option with cl::ConsumeAfter!
-fPIC
Dump list of actions to perform
-ccc-
LLVM was not built with LLVM_ENABLE_ZSTD or did not find zstd at build time
-ccc-print-phases
zlib error: Z_MEM_ERROR
Show bindings of tools to actions
-ccc-print-bindings
+fpuv2_sf
Apply modifications and produces temporary files to migrate to modern ObjC syntax
-ccc-objcmt-migrate
+fpuv3_hi
Simulate installation in the given directory
-mno-exception-handling
-ccc-install-dir
ck801t
<gcc-path>
-ccc-gcc-name
Name for native GCC compiler
-target-variant
-enable-emscripten-cxx-exceptions
Apply modifications to files to conform to ARC
s802t
-ccc-arcmt-modify
Apply modifications and produces temporary files that conform to ARC
ck803ht
-ccc-arcmt-migrate
-mllvm -enable-emscripten-cxx-exceptions
Check for ARC migration issues that need manual handling
ck803eh
-ccc-arcmt-check
-cc1as
-cc1
+exception-handling
pass cc1 options to depscan afterwards
ck803r1
-cc1-args
Use absolute paths for invoking subcommands (default)
ck803hr2
-canonical-prefixes
-wasm-enable-eh
<directory>
ck803tr3
Add directory to the C SYSTEM include search path
<arg>
-c-isystem
Generate code for the given target
-emscripten-cxx-exceptions-allowed
Pass -b <arg> to the linker on AIX
ck803fhr2
<prefix>
ck803er3
Search $prefix$file for executables, libraries, and data files. If $prefix is a directory, search $prefix/$file
-mllvm -emscripten-cxx-exceptions-allowed
ck803etr1
-bundle
This compilation is part of building a PCH with corresponding object file.
-bundle_loader
-fno-strict-return
--force-attribute=
-building-pch-with-obj
ck803efr3
/Bt+
ck803ftr1
Do not write current time into COFF output (breaks link.exe /incremental)
:noinline
/Brepro
ck803eftr2
Write current time into COFF output (default)
--bootclasspath
/Brepro-
-mllvm -wasm-enable-sjlj
--bootclasspath=
e803t
-bind_at_load
/bigobj
ck803sf
-mllvm -enable-emscripten-sjlj
/await
ck804h
/await:
-aux-triple
Auxiliary target triple.
--gcc-install-dir=
/llvm-lto/1500.0.12git
Target specific auxiliary attributes
ck804eht
-aux-target-feature
Target a specific auxiliary cpu type
ck804eft
-aux-target-cpu
wasm::Linker
--autocomplete=
e804f
Build ASTs and view them with GraphViz
Build ASTs and then pretty-print them
-ast-view
wasm-ld
-ast-print
ck805ef
<ast file>
Merge the given AST file into the translation unit being compiled.
i805
-ast-merge
-fverbose-asm
Build ASTs and print the list of declaration node qualified names
ck807f
-ast-dump
Build ASTs and then debug dump them
-ast-list
Undefines the __DEPRECATED macro
Don't treat control flow paths that fall off the end of a non-void function as unreachable
Build ASTs and then debug dump them in the specified format. Supported formats include: default, json
ck810ef
-ast-dump=
Build ASTs and then debug dump their name lookup tables
ck810t
-ast-dump-lookups
XCC_C_INCLUDE_PATH
<dump_filter>
ck810v
Use with -ast-dump or -ast-print to dump/print only AST declaration nodes having a certain substring in a qualified name. Use -ast-list to list all filterable declaration node names.
-ast-dump-filter=
-ast-dump-filter
-templight-dump
XCC_CPLUS_INCLUDE_PATH
Include declaration types in AST dumps
c810tv
-ast-dump-decl-types
Build ASTs and then debug dump them, forcing deserialization
c860
-ast-dump-all
XCore::Assembler
Build ASTs and then debug dump them in the specified format, forcing deserialization. Supported formats include: default, json
invalid
-ast-dump-all=
--assert=
--assert
--gcc-toolchain=
XCore-as
--assemble
fpuv3_hi
Emit .secure_log_unique directives to this filename.
-as-secure-log-file
fpuv3_sf
Set build target to arm64ec
XCore::Linker
/arm64EC
floate1
Output path for the plist report
Emit ARC errors even if the migrator can fix them
-arcmt-migrate-report-output
-test-io
XCore-ld
-arcmt-migrate-emit-errors
-float1e3
check,modify,migrate
The ARC migration action to take
float7e60
-arcmt-action=
--input-format=IFS
-arch
+hwdiv
-arch_only
Set architecture for code generation
-arch_errors_fatal
-fno-strict-vtable-pointers
--output-format=ELF
/arch:
edsp
-ansi
Run static analysis engine
+dsp1e2
-analyze
--output-format=IFS
Run the static analyzer
-dspe60
--analyze
-analyzer-werror
Emit analyzer results as errors rather than warnings
-time
ifso
Display exploded graph using GraphViz
+elrw
-analyzer-viz-egraph-graphviz
Add clang-tidy check string (enable, -disable, comma-separated)
-trust
-analyzer-tidy-checker
.ifso
-analyzer-tidy-checker=
cache
Print internal analyzer statistics.
Source Code Analysis - Dead Symbol Removal Frequency
-analyzer-stats
-gcodeview-ghash
.ifs
-analyzer-purge
-doloop
-analyzer-purge=
Source Code Analysis - Output Options
smart
-analyzer-output
Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
+vdsp2e3
--analyzer-output
Force the static analyzer to analyze functions defined in header files
-analyzer-output=
-analyzer-opt-analyze-headers
hard-tp
--analyzer-no-default-checks
The maximum number of times the analyzer will go through a loop
+soft-tp
-analyzer-max-loop
Display the list of enabled analyzer checkers
-istack
-analyzer-inlining-mode
Specify the function selection heuristic used during inlining
-analyzer-list-enabled-checkers
-fno-depscan-share
-fno-struct-path-tbaa
-analyzer-inlining-mode=
+ccrt
Bound on stack depth while inlining (4 by default)
-analyzer-inline-max-stack-depth
-vdspv1
-analyzer-inline-max-stack-depth=
Dump exploded graph to the specified file
-analyzer-dump-egraph
Emit verbose output about the analyzer's progress
-analyzer-dump-egraph=
-analyzer-display-progress
Do not re-analyze paths leading to exhausted nodes with a different strategy (may decrease code coverage)
-analyzer-disable-retry-exhausted
3e3r2
Choose analyzer checkers to disable
-analyzer-disable-checker
+3e3r3
-analyzer-disable-checker=
-analyzer-disable-all-checks
Disable all static analyzer checks
-gcodeview
Choose analyzer options to enable
-analyzer-constraints=
-analyzer-constraints
Source Code Analysis - Symbolic Constraint Engines
-fmodule-format=
Generate CodeView debug information
--trace-includes
unexpected end of data at offset 0x%zx while reading [0x%llx, 0x%llx)
-analyzer-config
Multiple errors
-analyzer-config-compatibility-mode
true,false
-analyzer-checker-option-help
Display the list of checker and package options
 complex
Display the list of checker and package options meant for development purposes only
-fapple-kext-vtable-mitigation
Enable mitigation for kernel v-table exploits through null pointers
-fbuiltin-module-map
Load the clang builtins module map file.
-fcas-fs-working-directory
Working directory for -fcas-fs (if not the root).
-fcas-fs
-fcf-protection=
Instrument control-flow architecture protection
-fchar8_t
Enable C++ builtin type char8_t
-fcheck=
Attempt to match the ABI of Clang <version>
Enable special debugger support behavior
-fdebugger-support
Enable special debugger support for Objective-C subscripting and literals
operator co_await
-fdebugger-objc-literal
clcpp
Enable casting unknown expression results to id
sizeof 
-fdebugger-cast-result-to-id
Unparse and stop.
-fdebug-unparse
Enable some traditional CPP emulation
-fdebug-unparse-with-symbols
%LaL
Unparse and stop (skips the semantic checks)
-fdebug-unparse-no-sema
_GLOBAL__N
Place debug types in their own section (ELF Only)
-fdebug-types-section
string literal
Use DWARF base address selection entries in .debug_ranges
remap file source paths in debug info
-fdebug-ranges-base-address
-gcoff
-fdebug-prefix-map=
thread-local initialization routine for 
Dump the pre-FIR tree
-fdebug-pass-structure
-fdebug-pre-fir-tree
Disables SYCL kernels compilation for device
-fdebug-pass-manager
Prints debug information for the new pass manager
-gcolumn-info
%.*g
-fdebug-pass-arguments
Enable debug messages while writing module files
-fdebug-module-writer
Invalid JSON value (true?)
Measure the parse tree
-fdebug-measure-parse-tree
Expected : after object key
-fdebug-macro
Control character in string
Incorporate CUDA device-side binary into host object file.
-fcxx-modules
zvl32b
-fcolor-diagnostics
-fconvert=
CFStringAppendFormatAndArguments
-fclasspath=
-fcoarray=
-fconcepts-ts
Specify the path to the daemon to be used. Clang will use the daemon specified, rather than try to spawn its own based on parent processes.
-fdepscan-include-tree
-fdisable-module-hash
Disable the module hash
-fembed-bitcode-marker
Embed placeholder LLVM IR data as a marker
Use emutls functions to access thread_local variables
-fenable-matrix
Enable matrix data type and related builtin functions
-fexperimental-strict-floating-point
Enables experimental strict floating point in LLVM.
Reserve the a1 register (M68k only)
-ffixed-a2
Reserve the a3 register (M68k only)
Reserve the a4 register (M68k only)
Reserve the a6 register (M68k only)
-ffixed-d0
-ffixed-x12
Reserve the x12 register (AArch64/RISC-V only)
-ffixed-x15
Reserve the x15 register (AArch64/RISC-V only)
-ffixed-x19
-ffixed-x20
Reserve the x20 register (AArch64/RISC-V only)
-ffixed-x21
Reserve the x24 register (AArch64/RISC-V only)
-ffixed-x25
Reserve the x25 register (AArch64/RISC-V only)
Reserve the x26 register (AArch64/RISC-V only)
Reserve the x28 register (AArch64/RISC-V only)
-ffixed-x30
Reserve the x30 register (AArch64/RISC-V only)
Reserve the x4 register (AArch64/RISC-V only)
Reserve the x5 register (AArch64/RISC-V only)
Reserve the x7 register (AArch64/RISC-V only)
Reserve the x8 register (AArch64/RISC-V only)
-ffor-scope
Emit an error if a C++ static local initializer would need a guard variable
-fforce-emit-vtables
-fforce-enable-int128
-ffp-contract=
ignore,maytrap,strict
Controls the semantics of floating-point calculations.
-ffree-form
-ffree-line-length-
-ffreestanding
-ffriend-injection
-ffunction-attribute-list
Generic block helpers use extended layout
Allow GNU-extension keywords regardless of language standard
-fgnuc-version=
-fhonor-nans
-fhosted
Like -finstrument-functions, but insert the calls after inlining
Apply fix-it changes and recompile
-fixit-to-temporary
Apply fix-it changes to temporary files
-fixit=
-fmodule-header=
Build a C++20 Header Unit from a header that should be found in the user (fmodule-header=user) or system (fmodule-header=system) search path.
<kind>
-fmodule-header
Like -fmodules-decluse but requires all headers to be in modules
-fno-diagnostics-color
-fno-diagnostics-fixit-info
Do not include fixit information in diagnostics
-fno-diagnostics-show-note-include-stack
-fno-diagnostics-show-option
-fno-gnu89-inline
-fno-gnu
-fno-gpu-allow-device-init
Don't allow device side init function in HIP (experimental)
-fno-gpu-defer-diag
Don't defer host/device related diagnostic messages for CUDA/HIP
Exclude wrong side overloads only if there are same side overloads in overloading resolution for CUDA/HIP
-fno-gpu-flush-denormals-to-zero
-fno-gpu-rdc
-fno-hip-fp32-correctly-rounded-divide-sqrt
Don't specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
-fno-hip-kernel-arg-name
Don't specify that kernel argument names are preserved (HIP only)
-fno-test-coverage
Do not emit code to make initialization of local statics thread safe
-fno-tls-model
-fno-trapping-math
-fno-tree-dce
-fno-tree-slp-vectorize
-fno-tree-ter
-fno-tree-vectorizer-verbose
-fno-tree-vrp
Enable debugging in the OpenMP offloading device RTL
-fopenmp-target-new-runtime
-fopenmp-targets=
Specify comma-separated list of triples OpenMP offloading targets to be supported
-fopenmp-use-tls
-fopenmp-version=
Set OpenMP version (e.g. 45 for OpenMP 4.5, 50 for OpenMP 5.0). Default value is 50.
-fopenmp=
-fopenmp
Parse OpenMP pragmas and generate parallel code.
-foperator-arrow-depth=
-foperator-arrow-depth
Maximum number of 'operator->'s to call for a member access
-foptimization-record-file=
Specify the output name of the file containing the optimization remarks. Implies -fsave-optimization-record. On Darwin platforms, this cannot be used with multiple -arch <arch> options.
-foptimization-record-passes=
Only include passes which match a specified regular expression in the generated optimization record (by default, include all passes)
<regex>
-foptimize-sibling-calls
--for-linker=
--force-link=
--force-link
-force_cpusubtype_ALL
-force_flat_namespace
-force_load
-forder-file-instrumentation
Generate source-level debug information with dwarf version 4
-gdwarf-aranges
-gdwarf32
-gdwarf64
-gdwarf
-gembed-source
Embed source text in DWARF debug sections
-gen-cdb-fragment-path
-gen-reproducer=
-gen-reproducer
Auto-generates preprocessed source files and a reproduction script
Disable string pooling
Enable string pooling (default)
-ggdb1
Specify the boundary's size to align branches
-malign-branch=
Specify types of branches to align
-malign-double
-malign-functions=
-malign-jumps=
-malign-loops=
-maltivec
-mamdgpu-ieee
Sets the IEEE bit in the expected default floating point  mode register. Floating point opcodes that support exception flag gathering quiet and propagate signaling NaN inputs per IEEE 754-2008. This option changes the ABI. (AMDGPU only)
-mamx-bf16
-mamx-int8
-mamx-tile
-mappletvos-version-min=
-mappletvsimulator-version-min=
-march=
-marm
-massembler-fatal-warnings
Make assembler warnings fatal
-massembler-no-warn
Make assembler not emit warnings
-matomics
-mavx2
-mavx512bf16
-mavx512cd
-mavx512dq
-mavx512er
-mavx512fp16
-mavx512f
-mavx512ifma
-mavx512pf
-mavx512vbmi2
-mavx512vbmi
-mavx512vl
-mavx512vnni
-mavx512vp2intersect
-mavx512vpopcntdq
-mavxvnni
Link stack frames through backchain on System Z
-mbig-endian
-mbmi2
-mbmi
-mbranch-likely
-mbranch-protection=
Enforce targets of indirect branches and function returns
-mbranch-target-enforce
-mbranches-within-32B-boundaries
Align selected branches (fused, jcc, jmp) within 32-byte boundary
-mbridgeos-version-min=
-mbulk-memory
Specify <script> as linker script
<profile>
--undefine-macro=
-undefined
undef all system defines
-unoptimized-cfg
--unsigned-char
Unwind library to use
--user-dependencies
Undefine macro <macro>
/validate-charset-
/validator-version
/vctoolsdir
/vctoolsversion
Control vtordisp placement
Run the Loop vectorization passes
--verbose
Verify the binary representation of debug output
Ignore unexpected diagnostic messages
-verify-pch
Verify diagnostic output using comment directives that start with prefixes in the comma-separated sequence <prefixes>
-verify
vIUWiq16bq16bq8yq8y
__builtin_sme_svmopa_za32_f16
vIUWiq16bq16bq8hq8h
__builtin_sme_svmopa_za32_f32
vIUWiq16bq16bq4fq4f
__builtin_sme_svmopa_za32_s8
vIUWiq16bq16bq16Scq16Sc
__builtin_sme_svmopa_za32_u8
vIUWiq16bq16bq16Ucq16Uc
__builtin_sme_svmopa_za64_f64
vIUWiq16bq16bq2dq2d
__builtin_sme_svmopa_za64_s16
vIUWiq16bq16bq8sq8s
__builtin_sme_svmopa_za64_u16
vIUWiq16bq16bq8Usq8Us
__builtin_sme_svmops_za32_bf16
__builtin_sme_svmops_za32_f16
__builtin_sme_svmops_za32_f32
__builtin_sme_svmops_za32_s8
__builtin_sme_svmops_za32_u8
__builtin_sme_svmops_za64_f64
__builtin_sme_svmops_za64_s16
__builtin_sme_svmops_za64_u16
__builtin_sme_svread_hor_za128_bf16_m
q8yq8yq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_f16_m
q8hq8hq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_f32_m
q4fq4fq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_f64_m
q2dq2dq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_s16_m
q8sq8sq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_s32_m
q4iq4iq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_s64_m
q2Wiq2Wiq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_s8_m
q16Scq16Scq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_u16_m
q8Usq8Usq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_u32_m
q4Uiq4Uiq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_u64_m
q2UWiq2UWiq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_u8_m
q16Ucq16Ucq16bIUWiUiIUWi
__builtin_sme_svread_hor_za16_bf16_m
__builtin_sme_svread_hor_za16_bf16_vg2
q16yUiIUWi
__builtin_sme_svread_hor_za16_bf16_vg4
q32yUiIUWi
__builtin_sme_svread_hor_za16_f16_m
__builtin_sme_svread_hor_za16_f16_vg2
q16hUiIUWi
__builtin_sme_svread_hor_za16_f16_vg4
q32hUiIUWi
__builtin_sme_svread_hor_za16_s16_m
__builtin_sme_svread_hor_za16_s16_vg2
q16sUiIUWi
__builtin_sme_svread_hor_za16_s16_vg4
q32sUiIUWi
__builtin_sme_svread_hor_za16_u16_m
__builtin_sme_svread_hor_za16_u16_vg2
q16UsUiIUWi
__builtin_sme_svread_hor_za16_u16_vg4
q32UsUiIUWi
__builtin_sme_svread_hor_za32_f32_m
__builtin_sme_svread_hor_za32_f32_vg2
q8fUiIUWi
__builtin_sme_svread_hor_za32_f32_vg4
q16fUiIUWi
__builtin_sme_svread_hor_za32_s32_m
__builtin_sme_svread_hor_za32_s32_vg2
q8iUiIUWi
__builtin_sme_svread_hor_za32_s32_vg4
q16iUiIUWi
__builtin_sme_svread_hor_za32_u32_m
__builtin_sme_svread_hor_za32_u32_vg2
q8UiUiIUWi
__builtin_sme_svread_hor_za32_u32_vg4
q16UiUiIUWi
__builtin_sme_svread_hor_za64_f64_m
__builtin_sme_svread_hor_za64_f64_vg2
q4dUiIUWi
__builtin_sme_svread_hor_za64_f64_vg4
q8dUiIUWi
__builtin_sme_svread_hor_za64_s64_m
__builtin_sme_svread_hor_za64_s64_vg2
q4WiUiIUWi
__builtin_sme_svread_hor_za64_s64_vg4
q8WiUiIUWi
__builtin_sme_svread_hor_za64_u64_m
__builtin_sme_svread_hor_za64_u64_vg2
q4UWiUiIUWi
__builtin_sme_svread_hor_za64_u64_vg4
q8UWiUiIUWi
__builtin_sme_svread_hor_za8_s8_m
__builtin_sme_svread_hor_za8_s8_vg2
q32ScUiIUWi
__builtin_sme_svread_hor_za8_s8_vg4
q64ScUiIUWi
__builtin_sme_svread_hor_za8_u8_m
__builtin_sme_svread_hor_za8_u8_vg2
q32UcUiIUWi
__builtin_sme_svread_hor_za8_u8_vg4
q64UcUiIUWi
__builtin_sme_svread_ver_za128_bf16_m
__builtin_sme_svread_ver_za128_f16_m
__builtin_sme_svread_ver_za128_f32_m
__builtin_sme_svread_ver_za128_f64_m
__builtin_sme_svread_ver_za128_s16_m
__builtin_sme_svread_ver_za128_s32_m
__builtin_sme_svread_ver_za128_s64_m
__builtin_sme_svread_ver_za128_s8_m
__builtin_sme_svread_ver_za128_u16_m
__builtin_sme_svread_ver_za128_u32_m
__builtin_sme_svread_ver_za128_u64_m
__builtin_sme_svread_ver_za128_u8_m
__builtin_sme_svread_ver_za16_bf16_m
__builtin_sme_svread_ver_za16_bf16_vg2
__builtin_sme_svread_ver_za16_bf16_vg4
__builtin_sme_svread_ver_za16_f16_m
__builtin_sme_svread_ver_za16_f16_vg2
__builtin_sme_svread_ver_za16_f16_vg4
__builtin_sme_svread_ver_za16_s16_m
__builtin_sme_svread_ver_za16_s16_vg2
__builtin_sme_svread_ver_za16_s16_vg4
__builtin_sme_svread_ver_za16_u16_m
__builtin_sme_svread_ver_za16_u16_vg2
__builtin_sme_svread_ver_za16_u16_vg4
__builtin_sme_svread_ver_za32_f32_m
__builtin_sme_svread_ver_za32_f32_vg2
__builtin_sme_svread_ver_za32_f32_vg4
__builtin_sme_svread_ver_za32_s32_m
__builtin_sme_svread_ver_za32_s32_vg2
__builtin_sme_svread_ver_za32_s32_vg4
__builtin_sme_svread_ver_za32_u32_m
__builtin_sme_svread_ver_za32_u32_vg2
__builtin_sme_svread_ver_za32_u32_vg4
__builtin_sme_svread_ver_za64_f64_m
__builtin_sme_svread_ver_za64_f64_vg2
__builtin_sme_svread_ver_za64_f64_vg4
__builtin_sme_svread_ver_za64_s64_m
__builtin_sme_svread_ver_za64_s64_vg2
__builtin_sme_svread_ver_za64_s64_vg4
__builtin_sme_svread_ver_za64_u64_m
__builtin_sme_svread_ver_za64_u64_vg2
__builtin_sme_svread_ver_za64_u64_vg4
__builtin_sme_svread_ver_za8_s8_m
__builtin_sme_svread_ver_za8_s8_vg2
__builtin_sme_svread_ver_za8_s8_vg4
__builtin_sme_svread_ver_za8_u8_m
__builtin_sme_svread_ver_za8_u8_vg2
__builtin_sme_svread_ver_za8_u8_vg4
__builtin_sme_svread_za64_f64_vg1x2
__builtin_sme_svread_za64_f64_vg1x4
__builtin_sme_svread_za64_s64_vg1x2
__builtin_sme_svread_za64_s64_vg1x4
__builtin_sme_svread_za64_u64_vg1x2
__builtin_sme_svread_za64_u64_vg1x4
__builtin_sme_svst1_hor_vnum_za128
vIUWiUiIUWiq16bv*Wi
__builtin_sme_svst1_hor_vnum_za16
__builtin_sme_svst1_hor_vnum_za32
__builtin_sme_svst1_hor_vnum_za64
__builtin_sme_svst1_hor_vnum_za8
__builtin_sme_svst1_hor_za128
vIUWiUiIUWiq16bv*
__builtin_sme_svst1_hor_za16
__builtin_sme_svst1_hor_za32
__builtin_sme_svst1_hor_za64
__builtin_sme_svst1_hor_za8
__builtin_sme_svst1_ver_vnum_za128
__builtin_sme_svst1_ver_vnum_za16
__builtin_sme_svst1_ver_vnum_za32
__builtin_sme_svst1_ver_vnum_za64
__builtin_sme_svst1_ver_vnum_za8
__builtin_sme_svst1_ver_za128
__builtin_sme_svst1_ver_za16
__builtin_sme_svst1_ver_za32
__builtin_sme_svst1_ver_za64
__builtin_sme_svst1_ver_za8
__builtin_sme_svstr_vnum_za
vUiIUWiq16bv*
__builtin_sme_svsumopa_za32_s8
__builtin_sme_svsumopa_za64_s16
__builtin_sme_svsumops_za32_s8
__builtin_sme_svsumops_za64_s16
__builtin_sme_svusmopa_za32_u8
__builtin_sme_svusmopa_za64_u16
__builtin_sme_svusmops_za32_u8
__builtin_sme_svusmops_za64_u16
__builtin_sme_svwrite_hor_za128_bf16_m
vIUWiUiIUWiq16bq8y
__builtin_sme_svwrite_hor_za128_f16_m
vIUWiUiIUWiq16bq8h
__builtin_sme_svwrite_hor_za128_f32_m
vIUWiUiIUWiq16bq4f
__builtin_sme_svwrite_hor_za128_f64_m
vIUWiUiIUWiq16bq2d
__builtin_sme_svwrite_hor_za128_s16_m
vIUWiUiIUWiq16bq8s
__builtin_sme_svwrite_hor_za128_s32_m
vIUWiUiIUWiq16bq4i
__builtin_sme_svwrite_hor_za128_s64_m
vIUWiUiIUWiq16bq2Wi
__builtin_sme_svwrite_hor_za128_s8_m
vIUWiUiIUWiq16bq16Sc
__builtin_sme_svwrite_hor_za128_u16_m
vIUWiUiIUWiq16bq8Us
__builtin_sme_svwrite_hor_za128_u32_m
vIUWiUiIUWiq16bq4Ui
__builtin_sme_svwrite_hor_za128_u64_m
vIUWiUiIUWiq16bq2UWi
__builtin_sme_svwrite_hor_za128_u8_m
vIUWiUiIUWiq16bq16Uc
__builtin_sme_svwrite_hor_za16_bf16_m
__builtin_sme_svwrite_hor_za16_bf16_vg2
vUiIUWiq16y
__builtin_sme_svwrite_hor_za16_bf16_vg4
vUiIUWiq32y
__builtin_sme_svwrite_hor_za16_f16_m
__builtin_sme_svwrite_hor_za16_f16_vg2
vUiIUWiq16h
__builtin_sme_svwrite_hor_za16_f16_vg4
vUiIUWiq32h
__builtin_sme_svwrite_hor_za16_s16_m
__builtin_sme_svwrite_hor_za16_s16_vg2
vUiIUWiq16s
__builtin_sme_svwrite_hor_za16_s16_vg4
vUiIUWiq32s
__builtin_sme_svwrite_hor_za16_u16_m
__builtin_sme_svwrite_hor_za16_u16_vg2
vUiIUWiq16Us
__builtin_sme_svwrite_hor_za16_u16_vg4
vUiIUWiq32Us
__builtin_sme_svwrite_hor_za32_f32_m
__builtin_sme_svwrite_hor_za32_f32_vg2
vUiIUWiq8f
__builtin_sme_svwrite_hor_za32_f32_vg4
vUiIUWiq16f
__builtin_sme_svwrite_hor_za32_s32_m
__builtin_sme_svwrite_hor_za32_s32_vg2
vUiIUWiq8i
__builtin_sme_svwrite_hor_za32_s32_vg4
vUiIUWiq16i
__builtin_sme_svwrite_hor_za32_u32_m
__builtin_sme_svwrite_hor_za32_u32_vg2
vUiIUWiq8Ui
__builtin_sme_svwrite_hor_za32_u32_vg4
vUiIUWiq16Ui
__builtin_sme_svwrite_hor_za64_f64_m
__builtin_sme_svwrite_hor_za64_f64_vg2
vUiIUWiq4d
__builtin_sme_svwrite_hor_za64_f64_vg4
vUiIUWiq8d
__builtin_sme_svwrite_hor_za64_s64_m
__builtin_sme_svwrite_hor_za64_s64_vg2
vUiIUWiq4Wi
__builtin_sme_svwrite_hor_za64_s64_vg4
vUiIUWiq8Wi
__builtin_sme_svwrite_hor_za64_u64_m
__builtin_sme_svwrite_hor_za64_u64_vg2
vUiIUWiq4UWi
__builtin_sme_svwrite_hor_za64_u64_vg4
vUiIUWiq8UWi
__builtin_sme_svwrite_hor_za8_s8_m
__builtin_sme_svwrite_hor_za8_s8_vg2
vUiIUWiq32Sc
__builtin_sme_svwrite_hor_za8_s8_vg4
vUiIUWiq64Sc
__builtin_sme_svwrite_hor_za8_u8_m
__builtin_sme_svwrite_hor_za8_u8_vg2
vUiIUWiq32Uc
__builtin_sme_svwrite_hor_za8_u8_vg4
vUiIUWiq64Uc
__builtin_sme_svwrite_ver_za128_bf16_m
__builtin_sme_svwrite_ver_za128_f16_m
__builtin_sme_svwrite_ver_za128_f32_m
__builtin_sme_svwrite_ver_za128_f64_m
__builtin_sme_svwrite_ver_za128_s16_m
__builtin_sme_svwrite_ver_za128_s32_m
__builtin_sme_svwrite_ver_za128_s64_m
__builtin_sme_svwrite_ver_za128_s8_m
__builtin_sme_svwrite_ver_za128_u16_m
__builtin_sme_svwrite_ver_za128_u32_m
__builtin_sme_svwrite_ver_za128_u64_m
__builtin_sme_svwrite_ver_za128_u8_m
__builtin_sme_svwrite_ver_za16_bf16_m
__builtin_sme_svwrite_ver_za16_bf16_vg2
__builtin_sme_svwrite_ver_za16_bf16_vg4
__builtin_sme_svwrite_ver_za16_f16_m
__builtin_sme_svwrite_ver_za16_f16_vg2
__builtin_sme_svwrite_ver_za16_f16_vg4
__builtin_sme_svwrite_ver_za16_s16_m
__builtin_sme_svwrite_ver_za16_s16_vg2
__builtin_sme_svwrite_ver_za16_s16_vg4
__builtin_sme_svwrite_ver_za16_u16_m
__builtin_sme_svwrite_ver_za16_u16_vg2
__builtin_sme_svwrite_ver_za16_u16_vg4
__builtin_sme_svwrite_ver_za32_f32_m
__builtin_sme_svwrite_ver_za32_f32_vg2
__builtin_sme_svwrite_ver_za32_f32_vg4
__builtin_sme_svwrite_ver_za32_s32_m
__builtin_sme_svwrite_ver_za32_s32_vg2
__builtin_sme_svwrite_ver_za32_s32_vg4
__builtin_sme_svwrite_ver_za32_u32_m
__builtin_sme_svwrite_ver_za32_u32_vg2
__builtin_sme_svwrite_ver_za32_u32_vg4
__builtin_sme_svwrite_ver_za64_f64_m
__builtin_sme_svwrite_ver_za64_f64_vg2
__builtin_sme_svwrite_ver_za64_f64_vg4
__builtin_sme_svwrite_ver_za64_s64_m
__builtin_sme_svwrite_ver_za64_s64_vg2
__builtin_sme_svwrite_ver_za64_s64_vg4
__builtin_sme_svwrite_ver_za64_u64_m
__builtin_sme_svwrite_ver_za64_u64_vg2
__builtin_sme_svwrite_ver_za64_u64_vg4
__builtin_sme_svwrite_ver_za8_s8_m
__builtin_sme_svwrite_ver_za8_s8_vg2
__builtin_sme_svwrite_ver_za8_s8_vg4
__builtin_sme_svwrite_ver_za8_u8_m
__builtin_sme_svwrite_ver_za8_u8_vg2
__builtin_sme_svwrite_ver_za8_u8_vg4
__builtin_sme_svwrite_za64_f64_vg1x2
__builtin_sme_svwrite_za64_f64_vg1x4
__builtin_sme_svwrite_za64_s64_vg1x2
__builtin_sme_svwrite_za64_s64_vg1x4
__builtin_sme_svwrite_za64_u64_vg1x2
__builtin_sme_svwrite_za64_u64_vg1x4
__builtin_sme_svzero_mask_za
vIUWi
__clear_cache
vv*v*
__builtin_arm_ldrex
__builtin_arm_ldaex
__builtin_arm_strex
__builtin_arm_stlex
__builtin_arm_clrex
__builtin_arm_rbit
__builtin_arm_rbit64
WUiWUi
__builtin_arm_cls
UiZUi
__builtin_arm_cls64
UiWUi
__builtin_arm_nop
__builtin_arm_yield
__builtin_arm_wfe
__builtin_arm_wfi
__builtin_arm_sev
__builtin_arm_sevl
__builtin_arm_crc32b
UiUiUc
__builtin_arm_crc32cb
__builtin_arm_crc32h
UiUiUs
__builtin_arm_crc32ch
__builtin_arm_crc32w
__builtin_arm_crc32cw
__builtin_arm_crc32d
UiUiWUi
__builtin_arm_crc32cd
__builtin_arm_irg
v*v*Ui
__builtin_arm_addg
__builtin_arm_gmi
Uiv*Ui
__builtin_arm_ldg
v*v*
__builtin_arm_stg
__builtin_arm_subp
Uiv*v*
__builtin_arm_mops_memset_tag
v*v*iz
__builtin_arm_dmb
__builtin_arm_dsb
__builtin_arm_isb
__builtin_arm_jcvt
v8.3a
__builtin_arm_prefetch
vvC*UiUiUiUi
__builtin_arm_rsr
UicC*
__builtin_arm_rsr64
WUicC*
__builtin_arm_rsrp
v*cC*
__builtin_arm_wsr
vcC*Ui
__builtin_arm_wsr64
vcC*WUi
__builtin_arm_wsrp
vcC*vC*
__dmb
__dsb
__isb
__yield
__wfe
__wfi
__sev
__sevl
__builtin_sponentry
__builtin_arm_tstart
__builtin_arm_tcommit
__builtin_arm_tcancel
vWUIi
__builtin_arm_ttest
__builtin_arm_rint32zf
v8.5a
__builtin_arm_rint32z
__builtin_arm_rint64zf
__builtin_arm_rint64z
__builtin_arm_rint32xf
__builtin_arm_rint32x
__builtin_arm_rint64xf
__builtin_arm_rint64x
__builtin_arm_rndr
iWUi*
rand
__builtin_arm_rndrrs
__builtin_arm_ld64b
vvC*WUi*
ls64
__builtin_arm_st64b
vv*WUiC*
__builtin_arm_st64bv
WUiv*WUiC*
__builtin_arm_st64bv0
_BitScanForward
UcUNi*UNi
intrin.h
_BitScanReverse
_BitScanForward64
UcUNi*ULLi
_BitScanReverse64
_InterlockedAdd
NiNiD*Ni
_InterlockedAnd64
LLiLLiD*LLi
_InterlockedDecrement64
LLiLLiD*
_InterlockedExchange64
_InterlockedExchangeAdd64
_InterlockedExchangeSub64
_InterlockedIncrement64
_InterlockedOr64
_InterlockedXor64
_InterlockedExchangeAdd_acq
_InterlockedExchangeAdd_rel
_InterlockedExchangeAdd_nf
_InterlockedExchangeAdd8_acq
ccD*c
_InterlockedExchangeAdd8_rel
_InterlockedExchangeAdd8_nf
_InterlockedExchangeAdd16_acq
ssD*s
_InterlockedExchangeAdd16_rel
_InterlockedExchangeAdd16_nf
_InterlockedExchangeAdd64_acq
_InterlockedExchangeAdd64_rel
_InterlockedExchangeAdd64_nf
_InterlockedExchange8_acq
_InterlockedExchange8_nf
_InterlockedExchange8_rel
_InterlockedExchange16_acq
_InterlockedExchange16_nf
_InterlockedExchange16_rel
_InterlockedExchange_acq
_InterlockedExchange_nf
_InterlockedExchange_rel
_InterlockedExchange64_acq
_InterlockedExchange64_nf
_InterlockedExchange64_rel
_InterlockedCompareExchange8_acq
ccD*cc
_InterlockedCompareExchange8_nf
_InterlockedCompareExchange8_rel
_InterlockedCompareExchange16_acq
ssD*ss
_InterlockedCompareExchange16_nf
_InterlockedCompareExchange16_rel
_InterlockedCompareExchange_acq
NiNiD*NiNi
_InterlockedCompareExchange_nf
_InterlockedCompareExchange_rel
_InterlockedCompareExchange64_acq
LLiLLiD*LLiLLi
_InterlockedCompareExchange64_nf
_InterlockedCompareExchange64_rel
_InterlockedCompareExchange128
UcLLiD*LLiLLiLLi*
_InterlockedCompareExchange128_acq
_InterlockedCompareExchange128_nf
_InterlockedCompareExchange128_rel
_InterlockedOr8_acq
_InterlockedOr8_nf
_InterlockedOr8_rel
_InterlockedOr16_acq
_InterlockedOr16_nf
_InterlockedOr16_rel
_InterlockedOr_acq
_InterlockedOr_nf
_InterlockedOr_rel
_InterlockedOr64_acq
_InterlockedOr64_nf
_InterlockedOr64_rel
_InterlockedXor8_acq
_InterlockedXor8_nf
_InterlockedXor8_rel
_InterlockedXor16_acq
_InterlockedXor16_nf
_InterlockedXor16_rel
_InterlockedXor_acq
_InterlockedXor_nf
_InterlockedXor_rel
_InterlockedXor64_acq
_InterlockedXor64_nf
_InterlockedXor64_rel
_InterlockedAnd8_acq
_InterlockedAnd8_nf
_InterlockedAnd8_rel
_InterlockedAnd16_acq
_InterlockedAnd16_nf
_InterlockedAnd16_rel
_InterlockedAnd_acq
_InterlockedAnd_nf
_InterlockedAnd_rel
_InterlockedAnd64_acq
_InterlockedAnd64_nf
_InterlockedAnd64_rel
_InterlockedIncrement16_acq
ssD*
_InterlockedIncrement16_nf
_InterlockedIncrement16_rel
_InterlockedIncrement_acq
NiNiD*
_InterlockedIncrement_nf
_InterlockedIncrement_rel
_InterlockedIncrement64_acq
_InterlockedIncrement64_nf
_InterlockedIncrement64_rel
_InterlockedDecrement16_acq
_InterlockedDecrement16_nf
_InterlockedDecrement16_rel
_InterlockedDecrement_acq
_InterlockedDecrement_nf
_InterlockedDecrement_rel
_InterlockedDecrement64_acq
_InterlockedDecrement64_nf
_InterlockedDecrement64_rel
_ReadWriteBarrier
__getReg
ULLii
_ReadStatusReg
LLii
_WriteStatusReg
viLLi
_AddressOfReturnAddress
__mulh
SLLiSLLiSLLi
__umulh
ULLiULLiULLi
__break
__writex18byte
vUNiUc
__writex18word
vUNiUs
__writex18dword
vUNiUNi
__writex18qword
vUNiULLi
__readx18byte
UcUNi
__readx18word
UsUNi
__readx18dword
UNiUNi
__readx18qword
ULLiUNi
_mcount
__ARM_FEATURE_QRDMX
__ARM_FEATURE_ATOMICS
__ARM_FEATURE_CRC32
__ARM_ARCH_8_3__
__ARM_FEATURE_COMPLEX
__ARM_FEATURE_JCVT
__ARM_ARCH_8_4__
__ARM_FEATURE_FRINT
__ARM_ARCH_8_5__
__ARM_ARCH_8_6__
__ARM_ARCH_8_7__
__ARM_ARCH_8_8__
__ARM_ARCH_9_0__
__ARM_ARCH_9_1__
__ARM_ARCH_9_2__
__ARM_ARCH_9_3__
__aarch64__
__AARCH64_CMODEL_
__ARM_ACLE
__ARM_ARCH
__ARM_ARCH_PROFILE
__ARM_64BIT_STATE
__ARM_PCS_AAPCS64
__ARM_ARCH_ISA_A64
__ARM_FEATURE_CLZ
__ARM_FEATURE_FMA
__ARM_FEATURE_LDREX
__ARM_FEATURE_IDIV
__ARM_FEATURE_DIV
__ARM_FEATURE_NUMERIC_MAXMIN
__ARM_FEATURE_DIRECTED_ROUNDING
__ARM_ALIGN_MAX_STACK_PWR
__ARM_FP
__ARM_FP16_FORMAT_IEEE
__ARM_FP16_ARGS
__ARM_FP_FAST
__ARM_SIZEOF_WCHAR_T
__ARM_SIZEOF_MINIMAL_ENUM
__ARM_NEON
__ARM_NEON_FP
__ARM_FEATURE_SVE
__ARM_NEON_SVE_BRIDGE
__ARM_FEATURE_SVE2
__ARM_FEATURE_SVE2_AES
__ARM_FEATURE_SVE2_BITPERM
__ARM_FEATURE_SVE2_SHA3
__ARM_FEATURE_SVE2_SM4
__ARM_FEATURE_SME
__ARM_FEATURE_SME_I64I64
__ARM_FEATURE_SME2
__ARM_FEATURE_RCPC
__ARM_FEATURE_CRYPTO
__ARM_FEATURE_AES
__ARM_FEATURE_SHA2
__ARM_FEATURE_SHA3
__ARM_FEATURE_SHA512
__ARM_FEATURE_SM3
__ARM_FEATURE_SM4
__ARM_FEATURE_UNALIGNED
__ARM_FEATURE_FP16_VECTOR_ARITHMETIC
__ARM_FEATURE_FP16_SCALAR_ARITHMETIC
__ARM_FEATURE_DOTPROD
__ARM_FEATURE_MEMORY_TAGGING
__ARM_FEATURE_TME
__ARM_FEATURE_MATMUL_INT8
__ARM_FEATURE_BF16
__ARM_FEATURE_BF16_VECTOR_ARITHMETIC
__ARM_BF16_FORMAT_ALTERNATIVE
__ARM_FEATURE_BF16_SCALAR_ARITHMETIC
__ARM_FEATURE_SVE_BF16
__ARM_FEATURE_SVE_MATMUL_FP64
__ARM_FEATURE_SVE_MATMUL_FP32
__ARM_FEATURE_SVE_MATMUL_INT8
__ARM_FEATURE_FP16_FML
__ARM_FEATURE_PAC_DEFAULT
__ARM_FEATURE_BTI_DEFAULT
__ARM_FEATURE_LS64
__ARM_FEATURE_RNG
__ARM_FEATURE_MOPS
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8
__FP_FAST_FMA
__FP_FAST_FMAF
__ARM_FEATURE_SVE_VECTOR_OPERATORS
__ARM_FEATURE_SVE_BITS
aarch64
f64mm
f32mm
sme2
+dotprod
cpu=
e-m:o-p:32:32-i64:64-i128:128-n32:64-S128
e-m:o-i64:64-i128:128-n32:64-S128
e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128
__AARCH64EL__
__AARCH64EB__
__AARCH_BIG_ENDIAN
__ARM_BIG_ENDIAN
E-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128
e-m:w-p:64:64-i32:32-i64:64-i128:128-n32:64-S128
_M_ARM64
__AARCH64_SIMD__
__ARM64_ARCH_8_32__
__ARM64_ARCH_8__
__ARM_NEON__
__REGISTER_PREFIX__
__arm64
__arm64__
__arm64e__
__RENDERSCRIPT__
d_to_declarationbind_to_declaratle_implicit_basedisable_implicitarget dependent><any, entirely t
Text-based Stubs Tool
0E/System/iOSSuppo
/System/DriverKit
LLVM_SYMBOLIZER_PATH
nternalPrivate.hAvailabilityInteneratedAccessorsCoreDataGenerate
__objc_imageinfo
.objc_class_name_
_OBJC_METACLASS_$_
#EncryptedString#
odulemap
module.private.mmodule_private.map
only
line-directives-line-tables-onlya
fast-honor-pragmas
nversion
+nullptrToBoolCoeanCheck
+allowFormatBool+allowStaticMemb+disableNeonImme+fixedEnumsInCla+disableOVEimpli+useNonPrimaryOb+enableAggressiv+disablePtrauthP+revert09abecef7+revertcff6dda60+thisNoAlignAttr+disableObjCCons-nullptrToBoolCo-allowFormatBool-allowStaticMemb-disableNeonImme-fixedEnumsInCla-disableOVEimpli-useNonPrimaryOb-enableAggressiv-disablePtrauthP-revert09abecef7-revertcff6dda60-thisNoAlignAttr-disableObjCConshtml-single-fileplist-multi-fileerimental-ifs-v1experimental-ifserimental-ifs-v2l-elf-v1
experimental-yami-elf-v1
experimental-tapprecompiled-header
assembler-with-cpp
<module-includes>
0123456789ABCDEF
DISTRIB_CODENAME=
se Linux
Red Hat EnterpriScientific Linuxdate
MobileSoftwareUpCorePhotogrammetry
DTRemoteServicesDeliveryServicesContentDeliverySport
RealitySystemSupIDESceneKitEditor
ulatorBridge_iOSCoreSimulatorBriTextureConvertercessorySimulatorHomeKitAccessory
zlib
-fdump-record-layouts
full
compiler
auto
marker
integer
none
undefined
ignore
strict
precise
address
local-exec
always
4096
medium
small
mips1
mips2
mips32r2
mips32r3
mips32r5
mips32r6
mips32
mips3
mips4
mips5
mips64r2
mips64r3
mips64r5
mips64r6
mips64
hexagonv55
hexagonv5
hexagonv60
hexagonv62
hexagonv65
hexagonv66
hexagonv67t
hexagonv67
hexagonv68
hexagonv69
no-invalid-source-encoding
invalid-source-encoding
everything
no-error
error
error=c++11-compat-deprecated-writable-strings
sha1
sha256
-externc-isystem-internal-extern-internal-isystem
file
-header-include--iwithprefixbefore
-index-store-path
ules-cache-path=-fmodules-cache-otes-cache-path=-fapinotes-cacheinline-bool-flagters
inline-8bit-coun
ze64_off
oclc_wavefrontsivefrontsize64_onrounded_sqrt_offoclc_correctly_r_rounded_sqrt_onoclc_daz_opt_offc_finite_only_onoclc_finite_onlyc_unsafe_math_onoclc_unsafe_math_off
oclc_abi_versionoclc_isa_versionHIP_VERSION_MAJOR
HIP_VERSION_MINOHIP_VERSION_PATCH
r-passes
-extra-vectorize<
ssp-buffer-size=t-header
-finclude-defaultzns
-disable-llvm-op--fatal-warningse_cpusubtype_ALL-force_cpusubtypsections
-compress-debug---compress-debugions=yes
-relocations=yes--nocompress-deb-nocompress-debu-compilation-dirion-dir=
-object-file-name
atic
-lcompiler_rt-st/usr/lib/system/
.xctoolchain/usrandLineTools/usr/CommandLineTool/XcodeDefault.xcAppleTVSimulator
msp430i2xxgeneric
-wasm-enable-sjlj
-emscripten-sjlj-enable-emscript
-fxray-instrument
-fxray-instruction-threshold=
try_acquire_sharquire_capabilitytry_acquire_capauires_capabilityrequires_capabiltrylock_functionexclusive_trylocneric_capabilityrelease_generic_requires_shared_t_exclusive_lockassert_exclusived_locks_requiredshared_locks_reqpability
assert_shared_carequired
exclusive_locks_assert_capability
tion
shared_lock_funcve_lock_functionexclusive_lock_fshared_trylock_facquire_shared_crelease_shared_cacquire_capability
assert_shared_lock
release_capabiliownership_returnswift_async_erronounroll_and_jamreturn_typestateenum_extensibiliobjc_method_family
ng_builtin_aliasclang_builtin_alc_bridge_mutableobjc_bridge_mutac_bridge_relatedobjc_bridge_rela_usage_semanticsxnu_usage_semanto_call_used_regszero_call_used_rrm_builtin_alias__clang_arm_builer_with_type_tagpointer_with_typtag_for_datatypetype_tag_for_datnt_with_type_tagargument_with_tyh_vtable_pointerptrauth_vtable_piboutletcollection
hared_capabilitylayout_compatiblos_app_extensionvisionos_app_exticationExtensionvisionOSApplicatiOSMacApplicatiosion
iosmac_app_extenmacCatalystAppliwatchOSApplicatixtension
tvOSApplicationExrOSApplicationEmacOSApplicationiOSApplicationEx
st_app_extensionmaccatalyst_app_watchos_app_extetvos_app_extensixros_app_extensimacos_app_extensios_app_extension
unsafe_unretained
null_unspecified3
torize_predicatevectorize_predicc_implementationobjc_implementatZERO
FE_TONEARESTFROMtual_inheritancevirtual_inheritaance
multiple_inheritsingle_inheritance
tiation_intervalpipeline_initiatinterleave_count
erationWithBlockaddOperationWith_ptr
intrusive_shared
tObjectFromCoderreplacementObjecableCopyWithZonemutableCopyWithZ2
ATED_INITIALIZERNS_DESIGNATED_INF
.framework/Headers
keConstantString__CFStringMakeCo
ype_descriptor_t__type_descripto
no_sanitize_thread
no_sanitize_memosanitize_addressno_sanitize_addr_safety_analysisno_address_safet
asrl
lsll
sqrshr
sqrshrl
sqrshrl_sat48
sqshl
sqshll
srshr
srshrl
uqrshl
uqrshll
uqrshll_sat48
uqshl
uqshll
urshr
urshrl
vabavq_p
vabavq_p_s16
vabavq_p_s32
vabavq_p_s8
vabavq_p_u16
vabavq_p_u32
vabavq_p_u8
vabavq
vabavq_s16
vabavq_s32
vabavq_s8
vabavq_u16
vabavq_u32
vabavq_u8
vabdq
vabdq_f16
vabdq_f32
vabdq_m
vabdq_m_f16
vabdq_m_f32
vabdq_m_s16
vabdq_m_s32
vabdq_m_s8
vabdq_m_u16
vabdq_m_u32
vabdq_m_u8
vabdq_s16
vabdq_s32
vabdq_s8
vabdq_u16
vabdq_u32
vabdq_u8
vabdq_x
vabdq_x_f16
vabdq_x_f32
vabdq_x_s16
vabdq_x_s32
vabdq_x_s8
vabdq_x_u16
vabdq_x_u32
vabdq_x_u8
vabsq
vabsq_f16
vabsq_f32
vabsq_m
vabsq_m_f16
vabsq_m_f32
vabsq_m_s16
vabsq_m_s32
vabsq_m_s8
vabsq_s16
vabsq_s32
vabsq_s8
vabsq_x
vabsq_x_f16
vabsq_x_f32
vabsq_x_s16
vabsq_x_s32
vabsq_x_s8
vadciq_m
vadciq_m_s32
vadciq_m_u32
vadciq
vadciq_s32
vadciq_u32
vadcq_m
vadcq_m_s32
vadcq_m_u32
vadcq
vadcq_s32
vadcq_u32
vaddlvaq_p
vaddlvaq_p_s32
vaddlvaq_p_u32
vaddlvaq
vaddlvaq_s32
vaddlvaq_u32
vaddlvq_p
vaddlvq_p_s32
vaddlvq_p_u32
vaddlvq
vaddlvq_s32
vaddlvq_u32
vaddq
vaddq_f16
vaddq_f32
vaddq_m
vaddq_m_f16
vaddq_m_f32
vaddq_m_n_f16
vaddq_m_n_f32
vaddq_m_n_s16
vaddq_m_n_s32
vaddq_m_n_s8
vaddq_m_n_u16
vaddq_m_n_u32
vaddq_m_n_u8
vaddq_m_s16
vaddq_m_s32
vaddq_m_s8
vaddq_m_u16
vaddq_m_u32
vaddq_m_u8
vaddq_n_f16
vaddq_n_f32
vaddq_n_s16
vaddq_n_s32
vaddq_n_s8
vaddq_n_u16
vaddq_n_u32
vaddq_n_u8
vaddq_s16
vaddq_s32
vaddq_s8
vaddq_u16
vaddq_u32
vaddq_u8
vaddq_x
vaddq_x_f16
vaddq_x_f32
vaddq_x_n_f16
vaddq_x_n_f32
vaddq_x_n_s16
vaddq_x_n_s32
vaddq_x_n_s8
vaddq_x_n_u16
vaddq_x_n_u32
vaddq_x_n_u8
vaddq_x_s16
vaddq_x_s32
vaddq_x_s8
vaddq_x_u16
vaddq_x_u32
vaddq_x_u8
vaddvaq_p
vaddvaq_p_s16
vaddvaq_p_s32
vaddvaq_p_s8
vaddvaq_p_u16
vaddvaq_p_u32
vaddvaq_p_u8
vaddvaq
vaddvaq_s16
vaddvaq_s32
vaddvaq_s8
vaddvaq_u16
vaddvaq_u32
vaddvaq_u8
vaddvq_p
vaddvq_p_s16
vaddvq_p_s32
vaddvq_p_s8
vaddvq_p_u16
vaddvq_p_u32
vaddvq_p_u8
vaddvq
vaddvq_s16
vaddvq_s32
vaddvq_s8
vaddvq_u16
vaddvq_u32
vaddvq_u8
vandq
vandq_f16
vandq_f32
vandq_m
vandq_m_f16
vandq_m_f32
vandq_m_s16
vandq_m_s32
vandq_m_s8
vandq_m_u16
vandq_m_u32
vandq_m_u8
vandq_s16
vandq_s32
vandq_s8
vandq_u16
vandq_u32
vandq_u8
vandq_x
vandq_x_f16
vandq_x_f32
vandq_x_s16
vandq_x_s32
vandq_x_s8
vandq_x_u16
vandq_x_u32
vandq_x_u8
vbicq
vbicq_f16
vbicq_f32
vbicq_m
vbicq_m_f16
vbicq_m_f32
vbicq_m_n
vbicq_m_n_s16
vbicq_m_n_s32
vbicq_m_n_u16
vbicq_m_n_u32
vbicq_m_s16
vbicq_m_s32
vbicq_m_s8
vbicq_m_u16
vbicq_m_u32
vbicq_m_u8
vbicq_n_s16
vbicq_n_s32
vbicq_n_u16
vbicq_n_u32
vbicq_s16
vbicq_s32
vbicq_s8
vbicq_u16
vbicq_u32
vbicq_u8
vbicq_x
vbicq_x_f16
vbicq_x_f32
vbicq_x_s16
vbicq_x_s32
vbicq_x_s8
vbicq_x_u16
vbicq_x_u32
vbicq_x_u8
vbrsrq_m
vbrsrq_m_n_f16
vbrsrq_m_n_f32
vbrsrq_m_n_s16
vbrsrq_m_n_s32
vbrsrq_m_n_s8
vbrsrq_m_n_u16
vbrsrq_m_n_u32
vbrsrq_m_n_u8
vbrsrq
vbrsrq_n_f16
vbrsrq_n_f32
vbrsrq_n_s16
vbrsrq_n_s32
vbrsrq_n_s8
vbrsrq_n_u16
vbrsrq_n_u32
vbrsrq_n_u8
vbrsrq_x
vbrsrq_x_n_f16
vbrsrq_x_n_f32
vbrsrq_x_n_s16
vbrsrq_x_n_s32
vbrsrq_x_n_s8
vbrsrq_x_n_u16
vbrsrq_x_n_u32
vbrsrq_x_n_u8
vcaddq_rot270
vcaddq_rot270_f16
vcaddq_rot270_f32
vcaddq_rot270_m
vcaddq_rot270_m_f16
vcaddq_rot270_m_f32
vcaddq_rot270_m_s16
vcaddq_rot270_m_s32
vcaddq_rot270_m_s8
vcaddq_rot270_m_u16
vcaddq_rot270_m_u32
vcaddq_rot270_m_u8
vcaddq_rot270_s16
vcaddq_rot270_s32
vcaddq_rot270_s8
vcaddq_rot270_u16
vcaddq_rot270_u32
vcaddq_rot270_u8
vcaddq_rot270_x
vcaddq_rot270_x_f16
vcaddq_rot270_x_f32
vcaddq_rot270_x_s16
vcaddq_rot270_x_s32
vcaddq_rot270_x_s8
vcaddq_rot270_x_u16
vcaddq_rot270_x_u32
vcaddq_rot270_x_u8
vcaddq_rot90
vcaddq_rot90_f16
vcaddq_rot90_f32
vcaddq_rot90_m
vcaddq_rot90_m_f16
vcaddq_rot90_m_f32
vcaddq_rot90_m_s16
vcaddq_rot90_m_s32
vcaddq_rot90_m_s8
vcaddq_rot90_m_u16
vcaddq_rot90_m_u32
vcaddq_rot90_m_u8
vcaddq_rot90_s16
vcaddq_rot90_s32
vcaddq_rot90_s8
vcaddq_rot90_u16
vcaddq_rot90_u32
vcaddq_rot90_u8
vcaddq_rot90_x
vcaddq_rot90_x_f16
vcaddq_rot90_x_f32
vcaddq_rot90_x_s16
vcaddq_rot90_x_s32
vcaddq_rot90_x_s8
vcaddq_rot90_x_u16
vcaddq_rot90_x_u32
vcaddq_rot90_x_u8
vclsq_m
vclsq_m_s16
vclsq_m_s32
vclsq_m_s8
vclsq
vclsq_s16
vclsq_s32
vclsq_s8
vclsq_x
vclsq_x_s16
vclsq_x_s32
vclsq_x_s8
vclzq_m
vclzq_m_s16
vclzq_m_s32
vclzq_m_s8
vclzq_m_u16
vclzq_m_u32
vclzq_m_u8
vclzq
vclzq_s16
vclzq_s32
vclzq_s8
vclzq_u16
vclzq_u32
vclzq_u8
vclzq_x
vclzq_x_s16
vclzq_x_s32
vclzq_x_s8
vclzq_x_u16
vclzq_x_u32
vclzq_x_u8
vcmlaq
vcmlaq_f16
vcmlaq_f32
vcmlaq_m
vcmlaq_m_f16
vcmlaq_m_f32
vcmlaq_rot180
vcmlaq_rot180_f16
vcmlaq_rot180_f32
vcmlaq_rot180_m
vcmlaq_rot180_m_f16
vcmlaq_rot180_m_f32
vcmlaq_rot270
vcmlaq_rot270_f16
vcmlaq_rot270_f32
vcmlaq_rot270_m
vcmlaq_rot270_m_f16
vcmlaq_rot270_m_f32
vcmlaq_rot90
vcmlaq_rot90_f16
vcmlaq_rot90_f32
vcmlaq_rot90_m
vcmlaq_rot90_m_f16
vcmlaq_rot90_m_f32
vcmpcsq_m
vcmpcsq_m_n_u16
vcmpcsq_m_n_u32
vcmpcsq_m_n_u8
vcmpcsq_m_u16
vcmpcsq_m_u32
vcmpcsq_m_u8
vcmpcsq
vcmpcsq_n_u16
vcmpcsq_n_u32
vcmpcsq_n_u8
vcmpcsq_u16
vcmpcsq_u32
vcmpcsq_u8
vcmpeqq
vcmpeqq_f16
vcmpeqq_f32
vcmpeqq_m
vcmpeqq_m_f16
vcmpeqq_m_f32
vcmpeqq_m_n_f16
vcmpeqq_m_n_f32
vcmpeqq_m_n_s16
vcmpeqq_m_n_s32
vcmpeqq_m_n_s8
vcmpeqq_m_n_u16
vcmpeqq_m_n_u32
vcmpeqq_m_n_u8
vcmpeqq_m_s16
vcmpeqq_m_s32
vcmpeqq_m_s8
vcmpeqq_m_u16
vcmpeqq_m_u32
vcmpeqq_m_u8
vcmpeqq_n_f16
vcmpeqq_n_f32
vcmpeqq_n_s16
vcmpeqq_n_s32
vcmpeqq_n_s8
vcmpeqq_n_u16
vcmpeqq_n_u32
vcmpeqq_n_u8
vcmpeqq_s16
vcmpeqq_s32
vcmpeqq_s8
vcmpeqq_u16
vcmpeqq_u32
vcmpeqq_u8
vcmpgeq
vcmpgeq_f16
vcmpgeq_f32
vcmpgeq_m
vcmpgeq_m_f16
vcmpgeq_m_f32
vcmpgeq_m_n_f16
vcmpgeq_m_n_f32
vcmpgeq_m_n_s16
vcmpgeq_m_n_s32
vcmpgeq_m_n_s8
vcmpgeq_m_s16
vcmpgeq_m_s32
vcmpgeq_m_s8
vcmpgeq_n_f16
vcmpgeq_n_f32
vcmpgeq_n_s16
vcmpgeq_n_s32
vcmpgeq_n_s8
vcmpgeq_s16
vcmpgeq_s32
vcmpgeq_s8
vcmpgtq
vcmpgtq_f16
vcmpgtq_f32
vcmpgtq_m
vcmpgtq_m_f16
vcmpgtq_m_f32
vcmpgtq_m_n_f16
vcmpgtq_m_n_f32
vcmpgtq_m_n_s16
vcmpgtq_m_n_s32
vcmpgtq_m_n_s8
vcmpgtq_m_s16
vcmpgtq_m_s32
vcmpgtq_m_s8
vcmpgtq_n_f16
vcmpgtq_n_f32
vcmpgtq_n_s16
vcmpgtq_n_s32
vcmpgtq_n_s8
vcmpgtq_s16
vcmpgtq_s32
vcmpgtq_s8
vcmphiq_m
vcmphiq_m_n_u16
vcmphiq_m_n_u32
vcmphiq_m_n_u8
vcmphiq_m_u16
vcmphiq_m_u32
vcmphiq_m_u8
vcmphiq
vcmphiq_n_u16
vcmphiq_n_u32
vcmphiq_n_u8
vcmphiq_u16
vcmphiq_u32
vcmphiq_u8
vcmpleq
vcmpleq_f16
vcmpleq_f32
vcmpleq_m
vcmpleq_m_f16
vcmpleq_m_f32
vcmpleq_m_n_f16
vcmpleq_m_n_f32
vcmpleq_m_n_s16
vcmpleq_m_n_s32
vcmpleq_m_n_s8
vcmpleq_m_s16
vcmpleq_m_s32
vcmpleq_m_s8
vcmpleq_n_f16
vcmpleq_n_f32
vcmpleq_n_s16
vcmpleq_n_s32
vcmpleq_n_s8
vcmpleq_s16
vcmpleq_s32
vcmpleq_s8
vcmpltq
vcmpltq_f16
vcmpltq_f32
vcmpltq_m
vcmpltq_m_f16
vcmpltq_m_f32
vcmpltq_m_n_f16
vcmpltq_m_n_f32
vcmpltq_m_n_s16
vcmpltq_m_n_s32
vcmpltq_m_n_s8
vcmpltq_m_s16
vcmpltq_m_s32
vcmpltq_m_s8
vcmpltq_n_f16
vcmpltq_n_f32
vcmpltq_n_s16
vcmpltq_n_s32
vcmpltq_n_s8
vcmpltq_s16
vcmpltq_s32
vcmpltq_s8
vcmpneq
vcmpneq_f16
vcmpneq_f32
vcmpneq_m
vcmpneq_m_f16
vcmpneq_m_f32
vcmpneq_m_n_f16
vcmpneq_m_n_f32
vcmpneq_m_n_s16
vcmpneq_m_n_s32
vcmpneq_m_n_s8
vcmpneq_m_n_u16
vcmpneq_m_n_u32
vcmpneq_m_n_u8
vcmpneq_m_s16
vcmpneq_m_s32
vcmpneq_m_s8
vcmpneq_m_u16
vcmpneq_m_u32
vcmpneq_m_u8
vcmpneq_n_f16
vcmpneq_n_f32
vcmpneq_n_s16
vcmpneq_n_s32
vcmpneq_n_s8
vcmpneq_n_u16
vcmpneq_n_u32
vcmpneq_n_u8
vcmpneq_s16
vcmpneq_s32
vcmpneq_s8
vcmpneq_u16
vcmpneq_u32
vcmpneq_u8
vcmulq
vcmulq_f16
vcmulq_f32
vcmulq_m
vcmulq_m_f16
vcmulq_m_f32
vcmulq_rot180
vcmulq_rot180_f16
vcmulq_rot180_f32
vcmulq_rot180_m
vcmulq_rot180_m_f16
vcmulq_rot180_m_f32
vcmulq_rot180_x
vcmulq_rot180_x_f16
vcmulq_rot180_x_f32
vcmulq_rot270
vcmulq_rot270_f16
vcmulq_rot270_f32
vcmulq_rot270_m
vcmulq_rot270_m_f16
vcmulq_rot270_m_f32
vcmulq_rot270_x
vcmulq_rot270_x_f16
vcmulq_rot270_x_f32
vcmulq_rot90
vcmulq_rot90_f16
vcmulq_rot90_f32
vcmulq_rot90_m
vcmulq_rot90_m_f16
vcmulq_rot90_m_f32
vcmulq_rot90_x
vcmulq_rot90_x_f16
vcmulq_rot90_x_f32
vcmulq_x
vcmulq_x_f16
vcmulq_x_f32
vcreateq_f16
vcreateq_f32
vcreateq_s16
vcreateq_s32
vcreateq_s64
vcreateq_s8
vcreateq_u16
vcreateq_u32
vcreateq_u64
vcreateq_u8
vctp16q
vctp16q_m
vctp32q
vctp32q_m
vctp64q
vctp64q_m
vctp8q
vctp8q_m
vcvtaq_m
vcvtaq_m_s16_f16
vcvtaq_m_s32_f32
vcvtaq_m_u16_f16
vcvtaq_m_u32_f32
vcvtaq_s16_f16
vcvtaq_s32_f32
vcvtaq_u16_f16
vcvtaq_u32_f32
vcvtaq_x_s16_f16
vcvtaq_x_s32_f32
vcvtaq_x_u16_f16
vcvtaq_x_u32_f32
vcvtbq_f16_f32
vcvtbq_f32_f16
vcvtbq_m_f16_f32
vcvtbq_m_f32_f16
vcvtbq_x_f32_f16
vcvtmq_m
vcvtmq_m_s16_f16
vcvtmq_m_s32_f32
vcvtmq_m_u16_f16
vcvtmq_m_u32_f32
vcvtmq_s16_f16
vcvtmq_s32_f32
vcvtmq_u16_f16
vcvtmq_u32_f32
vcvtmq_x_s16_f16
vcvtmq_x_s32_f32
vcvtmq_x_u16_f16
vcvtmq_x_u32_f32
vcvtnq_m
vcvtnq_m_s16_f16
vcvtnq_m_s32_f32
vcvtnq_m_u16_f16
vcvtnq_m_u32_f32
vcvtnq_s16_f16
vcvtnq_s32_f32
vcvtnq_u16_f16
vcvtnq_u32_f32
vcvtnq_x_s16_f16
vcvtnq_x_s32_f32
vcvtnq_x_u16_f16
vcvtnq_x_u32_f32
vcvtpq_m
vcvtpq_m_s16_f16
vcvtpq_m_s32_f32
vcvtpq_m_u16_f16
vcvtpq_m_u32_f32
vcvtpq_s16_f16
vcvtpq_s32_f32
vcvtpq_u16_f16
vcvtpq_u32_f32
vcvtpq_x_s16_f16
vcvtpq_x_s32_f32
vcvtpq_x_u16_f16
vcvtpq_x_u32_f32
vcvtq
vcvtq_f16_s16
vcvtq_f16_u16
vcvtq_f32_s32
vcvtq_f32_u32
vcvtq_m
vcvtq_m_f16_s16
vcvtq_m_f16_u16
vcvtq_m_f32_s32
vcvtq_m_f32_u32
vcvtq_m_n
vcvtq_m_n_f16_s16
vcvtq_m_n_f16_u16
vcvtq_m_n_f32_s32
vcvtq_m_n_f32_u32
vcvtq_m_n_s16_f16
vcvtq_m_n_s32_f32
vcvtq_m_n_u16_f16
vcvtq_m_n_u32_f32
vcvtq_m_s16_f16
vcvtq_m_s32_f32
vcvtq_m_u16_f16
vcvtq_m_u32_f32
vcvtq_n
vcvtq_n_f16_s16
vcvtq_n_f16_u16
vcvtq_n_f32_s32
vcvtq_n_f32_u32
vcvtq_n_s16_f16
vcvtq_n_s32_f32
vcvtq_n_u16_f16
vcvtq_n_u32_f32
vcvtq_s16_f16
vcvtq_s32_f32
vcvtq_u16_f16
vcvtq_u32_f32
vcvtq_x
vcvtq_x_f16_s16
vcvtq_x_f16_u16
vcvtq_x_f32_s32
vcvtq_x_f32_u32
vcvtq_x_n
vcvtq_x_n_f16_s16
vcvtq_x_n_f16_u16
vcvtq_x_n_f32_s32
vcvtq_x_n_f32_u32
vcvtq_x_n_s16_f16
vcvtq_x_n_s32_f32
vcvtq_x_n_u16_f16
vcvtq_x_n_u32_f32
vcvtq_x_s16_f16
vcvtq_x_s32_f32
vcvtq_x_u16_f16
vcvtq_x_u32_f32
vcvttq_f16_f32
vcvttq_f32_f16
vcvttq_m_f16_f32
vcvttq_m_f32_f16
vcvttq_x_f32_f16
vddupq_m
vddupq_m_n_u16
vddupq_m_n_u32
vddupq_m_n_u8
vddupq_m_wb_u16
vddupq_m_wb_u32
vddupq_m_wb_u8
vddupq_u16
vddupq_n_u16
vddupq_u32
vddupq_n_u32
vddupq_u8
vddupq_n_u8
vddupq_wb_u16
vddupq_wb_u32
vddupq_wb_u8
vddupq_x_u16
vddupq_x_n_u16
vddupq_x_u32
vddupq_x_n_u32
vddupq_x_u8
vddupq_x_n_u8
vddupq_x_wb_u16
vddupq_x_wb_u32
vddupq_x_wb_u8
vdupq_m
vdupq_m_n_f16
vdupq_m_n_f32
vdupq_m_n_s16
vdupq_m_n_s32
vdupq_m_n_s8
vdupq_m_n_u16
vdupq_m_n_u32
vdupq_m_n_u8
vdupq_n_f16
vdupq_n_f32
vdupq_n_s16
vdupq_n_s32
vdupq_n_s8
vdupq_n_u16
vdupq_n_u32
vdupq_n_u8
vdupq_x_n_f16
vdupq_x_n_f32
vdupq_x_n_s16
vdupq_x_n_s32
vdupq_x_n_s8
vdupq_x_n_u16
vdupq_x_n_u32
vdupq_x_n_u8
vdwdupq_m
vdwdupq_m_n_u16
vdwdupq_m_n_u32
vdwdupq_m_n_u8
vdwdupq_m_wb_u16
vdwdupq_m_wb_u32
vdwdupq_m_wb_u8
vdwdupq_u16
vdwdupq_n_u16
vdwdupq_u32
vdwdupq_n_u32
vdwdupq_u8
vdwdupq_n_u8
vdwdupq_wb_u16
vdwdupq_wb_u32
vdwdupq_wb_u8
vdwdupq_x_u16
vdwdupq_x_n_u16
vdwdupq_x_u32
vdwdupq_x_n_u32
vdwdupq_x_u8
vdwdupq_x_n_u8
vdwdupq_x_wb_u16
vdwdupq_x_wb_u32
vdwdupq_x_wb_u8
veorq
veorq_f16
veorq_f32
veorq_m
veorq_m_f16
veorq_m_f32
veorq_m_s16
veorq_m_s32
veorq_m_s8
veorq_m_u16
veorq_m_u32
veorq_m_u8
veorq_s16
veorq_s32
veorq_s8
veorq_u16
veorq_u32
veorq_u8
veorq_x
veorq_x_f16
veorq_x_f32
veorq_x_s16
veorq_x_s32
veorq_x_s8
veorq_x_u16
veorq_x_u32
veorq_x_u8
vfmaq
vfmaq_f16
vfmaq_f32
vfmaq_m
vfmaq_m_f16
vfmaq_m_f32
vfmaq_m_n_f16
vfmaq_m_n_f32
vfmaq_n_f16
vfmaq_n_f32
vfmasq_m
vfmasq_m_n_f16
vfmasq_m_n_f32
vfmasq
vfmasq_n_f16
vfmasq_n_f32
vfmsq
vfmsq_f16
vfmsq_f32
vfmsq_m
vfmsq_m_f16
vfmsq_m_f32
vgetq_lane
vgetq_lane_f16
vgetq_lane_f32
vgetq_lane_s16
vgetq_lane_s32
vgetq_lane_s64
vgetq_lane_s8
vgetq_lane_u16
vgetq_lane_u32
vgetq_lane_u64
vgetq_lane_u8
vhaddq_m
vhaddq_m_n_s16
vhaddq_m_n_s32
vhaddq_m_n_s8
vhaddq_m_n_u16
vhaddq_m_n_u32
vhaddq_m_n_u8
vhaddq_m_s16
vhaddq_m_s32
vhaddq_m_s8
vhaddq_m_u16
vhaddq_m_u32
vhaddq_m_u8
vhaddq
vhaddq_n_s16
vhaddq_n_s32
vhaddq_n_s8
vhaddq_n_u16
vhaddq_n_u32
vhaddq_n_u8
vhaddq_s16
vhaddq_s32
vhaddq_s8
vhaddq_u16
vhaddq_u32
vhaddq_u8
vhaddq_x
vhaddq_x_n_s16
vhaddq_x_n_s32
vhaddq_x_n_s8
vhaddq_x_n_u16
vhaddq_x_n_u32
vhaddq_x_n_u8
vhaddq_x_s16
vhaddq_x_s32
vhaddq_x_s8
vhaddq_x_u16
vhaddq_x_u32
vhaddq_x_u8
vhcaddq_rot270_m
vhcaddq_rot270_m_s16
vhcaddq_rot270_m_s32
vhcaddq_rot270_m_s8
vhcaddq_rot270
vhcaddq_rot270_s16
vhcaddq_rot270_s32
vhcaddq_rot270_s8
vhcaddq_rot270_x
vhcaddq_rot270_x_s16
vhcaddq_rot270_x_s32
vhcaddq_rot270_x_s8
vhcaddq_rot90_m
vhcaddq_rot90_m_s16
vhcaddq_rot90_m_s32
vhcaddq_rot90_m_s8
vhcaddq_rot90
vhcaddq_rot90_s16
vhcaddq_rot90_s32
vhcaddq_rot90_s8
vhcaddq_rot90_x
vhcaddq_rot90_x_s16
vhcaddq_rot90_x_s32
vhcaddq_rot90_x_s8
vhsubq_m
vhsubq_m_n_s16
vhsubq_m_n_s32
vhsubq_m_n_s8
vhsubq_m_n_u16
vhsubq_m_n_u32
vhsubq_m_n_u8
vhsubq_m_s16
vhsubq_m_s32
vhsubq_m_s8
vhsubq_m_u16
vhsubq_m_u32
vhsubq_m_u8
vhsubq
vhsubq_n_s16
vhsubq_n_s32
vhsubq_n_s8
vhsubq_n_u16
vhsubq_n_u32
vhsubq_n_u8
vhsubq_s16
vhsubq_s32
vhsubq_s8
vhsubq_u16
vhsubq_u32
vhsubq_u8
vhsubq_x
vhsubq_x_n_s16
vhsubq_x_n_s32
vhsubq_x_n_s8
vhsubq_x_n_u16
vhsubq_x_n_u32
vhsubq_x_n_u8
vhsubq_x_s16
vhsubq_x_s32
vhsubq_x_s8
vhsubq_x_u16
vhsubq_x_u32
vhsubq_x_u8
vidupq_m
vidupq_m_n_u16
vidupq_m_n_u32
vidupq_m_n_u8
vidupq_m_wb_u16
vidupq_m_wb_u32
vidupq_m_wb_u8
vidupq_u16
vidupq_n_u16
vidupq_u32
vidupq_n_u32
vidupq_u8
vidupq_n_u8
vidupq_wb_u16
vidupq_wb_u32
vidupq_wb_u8
vidupq_x_u16
vidupq_x_n_u16
vidupq_x_u32
vidupq_x_n_u32
vidupq_x_u8
vidupq_x_n_u8
vidupq_x_wb_u16
vidupq_x_wb_u32
vidupq_x_wb_u8
viwdupq_m
viwdupq_m_n_u16
viwdupq_m_n_u32
viwdupq_m_n_u8
viwdupq_m_wb_u16
viwdupq_m_wb_u32
viwdupq_m_wb_u8
viwdupq_u16
viwdupq_n_u16
viwdupq_u32
viwdupq_n_u32
viwdupq_u8
viwdupq_n_u8
viwdupq_wb_u16
viwdupq_wb_u32
viwdupq_wb_u8
viwdupq_x_u16
viwdupq_x_n_u16
viwdupq_x_u32
viwdupq_x_n_u32
viwdupq_x_u8
viwdupq_x_n_u8
viwdupq_x_wb_u16
viwdupq_x_wb_u32
viwdupq_x_wb_u8
vld1q
vld1q_f16
vld1q_f32
vld1q_s16
vld1q_s32
vld1q_s8
vld1q_u16
vld1q_u32
vld1q_u8
vld1q_z
vld1q_z_f16
vld1q_z_f32
vld1q_z_s16
vld1q_z_s32
vld1q_z_s8
vld1q_z_u16
vld1q_z_u32
vld1q_z_u8
vld2q
vld2q_f16
vld2q_f32
vld2q_s16
vld2q_s32
vld2q_s8
vld2q_u16
vld2q_u32
vld2q_u8
vld4q
vld4q_f16
vld4q_f32
vld4q_s16
vld4q_s32
vld4q_s8
vld4q_u16
vld4q_u32
vld4q_u8
vldrbq_gather_offset
vldrbq_gather_offset_s16
vldrbq_gather_offset_s32
vldrbq_gather_offset_s8
vldrbq_gather_offset_u16
vldrbq_gather_offset_u32
vldrbq_gather_offset_u8
vldrbq_gather_offset_z
vldrbq_gather_offset_z_s16
vldrbq_gather_offset_z_s32
vldrbq_gather_offset_z_s8
vldrbq_gather_offset_z_u16
vldrbq_gather_offset_z_u32
vldrbq_gather_offset_z_u8
vldrbq_s16
vldrbq_s32
vldrbq_s8
vldrbq_u16
vldrbq_u32
vldrbq_u8
vldrbq_z_s16
vldrbq_z_s32
vldrbq_z_s8
vldrbq_z_u16
vldrbq_z_u32
vldrbq_z_u8
vldrdq_gather_base_s64
vldrdq_gather_base_u64
vldrdq_gather_base_wb_s64
vldrdq_gather_base_wb_u64
vldrdq_gather_base_wb_z_s64
vldrdq_gather_base_wb_z_u64
vldrdq_gather_base_z_s64
vldrdq_gather_base_z_u64
vldrdq_gather_offset
vldrdq_gather_offset_s64
vldrdq_gather_offset_u64
vldrdq_gather_offset_z
vldrdq_gather_offset_z_s64
vldrdq_gather_offset_z_u64
vldrdq_gather_shifted_offset
vldrdq_gather_shifted_offset_s64
vldrdq_gather_shifted_offset_u64
vldrdq_gather_shifted_offset_z
vldrdq_gather_shifted_offset_z_s64
vldrdq_gather_shifted_offset_z_u64
vldrhq_f16
vldrhq_gather_offset
vldrhq_gather_offset_f16
vldrhq_gather_offset_s16
vldrhq_gather_offset_s32
vldrhq_gather_offset_u16
vldrhq_gather_offset_u32
vldrhq_gather_offset_z
vldrhq_gather_offset_z_f16
vldrhq_gather_offset_z_s16
vldrhq_gather_offset_z_s32
vldrhq_gather_offset_z_u16
vldrhq_gather_offset_z_u32
vldrhq_gather_shifted_offset
vldrhq_gather_shifted_offset_f16
vldrhq_gather_shifted_offset_s16
vldrhq_gather_shifted_offset_s32
vldrhq_gather_shifted_offset_u16
vldrhq_gather_shifted_offset_u32
vldrhq_gather_shifted_offset_z
vldrhq_gather_shifted_offset_z_f16
vldrhq_gather_shifted_offset_z_s16
vldrhq_gather_shifted_offset_z_s32
vldrhq_gather_shifted_offset_z_u16
vldrhq_gather_shifted_offset_z_u32
vldrhq_s16
vldrhq_s32
vldrhq_u16
vldrhq_u32
vldrhq_z_f16
vldrhq_z_s16
vldrhq_z_s32
vldrhq_z_u16
vldrhq_z_u32
vldrwq_f32
vldrwq_gather_base_f32
vldrwq_gather_base_s32
vldrwq_gather_base_u32
vldrwq_gather_base_wb_f32
vldrwq_gather_base_wb_s32
vldrwq_gather_base_wb_u32
vldrwq_gather_base_wb_z_f32
vldrwq_gather_base_wb_z_s32
vldrwq_gather_base_wb_z_u32
vldrwq_gather_base_z_f32
vldrwq_gather_base_z_s32
vldrwq_gather_base_z_u32
vldrwq_gather_offset
vldrwq_gather_offset_f32
vldrwq_gather_offset_s32
vldrwq_gather_offset_u32
vldrwq_gather_offset_z
vldrwq_gather_offset_z_f32
vldrwq_gather_offset_z_s32
vldrwq_gather_offset_z_u32
vldrwq_gather_shifted_offset
vldrwq_gather_shifted_offset_f32
vldrwq_gather_shifted_offset_s32
vldrwq_gather_shifted_offset_u32
vldrwq_gather_shifted_offset_z
vldrwq_gather_shifted_offset_z_f32
vldrwq_gather_shifted_offset_z_s32
vldrwq_gather_shifted_offset_z_u32
vldrwq_s32
vldrwq_u32
vldrwq_z_f32
vldrwq_z_s32
vldrwq_z_u32
vmaxaq_m
vmaxaq_m_s16
vmaxaq_m_s32
vmaxaq_m_s8
vmaxaq
vmaxaq_s16
vmaxaq_s32
vmaxaq_s8
vmaxavq_p
vmaxavq_p_s16
vmaxavq_p_s32
vmaxavq_p_s8
vmaxavq
vmaxavq_s16
vmaxavq_s32
vmaxavq_s8
vmaxnmaq
vmaxnmaq_f16
vmaxnmaq_f32
vmaxnmaq_m
vmaxnmaq_m_f16
vmaxnmaq_m_f32
vmaxnmavq
vmaxnmavq_f16
vmaxnmavq_f32
vmaxnmavq_p
vmaxnmavq_p_f16
vmaxnmavq_p_f32
vmaxnmq
vmaxnmq_f16
vmaxnmq_f32
vmaxnmq_m
vmaxnmq_m_f16
vmaxnmq_m_f32
vmaxnmq_x
vmaxnmq_x_f16
vmaxnmq_x_f32
vmaxnmvq
vmaxnmvq_f16
vmaxnmvq_f32
vmaxnmvq_p
vmaxnmvq_p_f16
vmaxnmvq_p_f32
vmaxq_m
vmaxq_m_s16
vmaxq_m_s32
vmaxq_m_s8
vmaxq_m_u16
vmaxq_m_u32
vmaxq_m_u8
vmaxq
vmaxq_s16
vmaxq_s32
vmaxq_s8
vmaxq_u16
vmaxq_u32
vmaxq_u8
vmaxq_x
vmaxq_x_s16
vmaxq_x_s32
vmaxq_x_s8
vmaxq_x_u16
vmaxq_x_u32
vmaxq_x_u8
vmaxvq_p
vmaxvq_p_s16
vmaxvq_p_s32
vmaxvq_p_s8
vmaxvq_p_u16
vmaxvq_p_u32
vmaxvq_p_u8
vmaxvq
vmaxvq_s16
vmaxvq_s32
vmaxvq_s8
vmaxvq_u16
vmaxvq_u32
vmaxvq_u8
vminaq_m
vminaq_m_s16
vminaq_m_s32
vminaq_m_s8
vminaq
vminaq_s16
vminaq_s32
vminaq_s8
vminavq_p
vminavq_p_s16
vminavq_p_s32
vminavq_p_s8
vminavq
vminavq_s16
vminavq_s32
vminavq_s8
vminnmaq
vminnmaq_f16
vminnmaq_f32
vminnmaq_m
vminnmaq_m_f16
vminnmaq_m_f32
vminnmavq
vminnmavq_f16
vminnmavq_f32
vminnmavq_p
vminnmavq_p_f16
vminnmavq_p_f32
vminnmq
vminnmq_f16
vminnmq_f32
vminnmq_m
vminnmq_m_f16
vminnmq_m_f32
vminnmq_x
vminnmq_x_f16
vminnmq_x_f32
vminnmvq
vminnmvq_f16
vminnmvq_f32
vminnmvq_p
vminnmvq_p_f16
vminnmvq_p_f32
vminq_m
vminq_m_s16
vminq_m_s32
vminq_m_s8
vminq_m_u16
vminq_m_u32
vminq_m_u8
vminq
vminq_s16
vminq_s32
vminq_s8
vminq_u16
vminq_u32
vminq_u8
vminq_x
vminq_x_s16
vminq_x_s32
vminq_x_s8
vminq_x_u16
vminq_x_u32
vminq_x_u8
vminvq_p
vminvq_p_s16
vminvq_p_s32
vminvq_p_s8
vminvq_p_u16
vminvq_p_u32
vminvq_p_u8
vminvq
vminvq_s16
vminvq_s32
vminvq_s8
vminvq_u16
vminvq_u32
vminvq_u8
vmladavaq_p
vmladavaq_p_s16
vmladavaq_p_s32
vmladavaq_p_s8
vmladavaq_p_u16
vmladavaq_p_u32
vmladavaq_p_u8
vmladavaq
vmladavaq_s16
vmladavaq_s32
vmladavaq_s8
vmladavaq_u16
vmladavaq_u32
vmladavaq_u8
vmladavaxq_p
vmladavaxq_p_s16
vmladavaxq_p_s32
vmladavaxq_p_s8
vmladavaxq
vmladavaxq_s16
vmladavaxq_s32
vmladavaxq_s8
vmladavq_p
vmladavq_p_s16
vmladavq_p_s32
vmladavq_p_s8
vmladavq_p_u16
vmladavq_p_u32
vmladavq_p_u8
vmladavq
vmladavq_s16
vmladavq_s32
vmladavq_s8
vmladavq_u16
vmladavq_u32
vmladavq_u8
vmladavxq_p
vmladavxq_p_s16
vmladavxq_p_s32
vmladavxq_p_s8
vmladavxq
vmladavxq_s16
vmladavxq_s32
vmladavxq_s8
vmlaldavaq_p
vmlaldavaq_p_s16
vmlaldavaq_p_s32
vmlaldavaq_p_u16
vmlaldavaq_p_u32
vmlaldavaq
vmlaldavaq_s16
vmlaldavaq_s32
vmlaldavaq_u16
vmlaldavaq_u32
vmlaldavaxq_p
vmlaldavaxq_p_s16
vmlaldavaxq_p_s32
vmlaldavaxq
vmlaldavaxq_s16
vmlaldavaxq_s32
vmlaldavq_p
vmlaldavq_p_s16
vmlaldavq_p_s32
vmlaldavq_p_u16
vmlaldavq_p_u32
vmlaldavq
vmlaldavq_s16
vmlaldavq_s32
vmlaldavq_u16
vmlaldavq_u32
vmlaldavxq_p
vmlaldavxq_p_s16
vmlaldavxq_p_s32
vmlaldavxq
vmlaldavxq_s16
vmlaldavxq_s32
vmlaq_m
vmlaq_m_n_s16
vmlaq_m_n_s32
vmlaq_m_n_s8
vmlaq_m_n_u16
vmlaq_m_n_u32
vmlaq_m_n_u8
vmlaq
vmlaq_n_s16
vmlaq_n_s32
vmlaq_n_s8
vmlaq_n_u16
vmlaq_n_u32
vmlaq_n_u8
vmlasq_m
vmlasq_m_n_s16
vmlasq_m_n_s32
vmlasq_m_n_s8
vmlasq_m_n_u16
vmlasq_m_n_u32
vmlasq_m_n_u8
vmlasq
vmlasq_n_s16
vmlasq_n_s32
vmlasq_n_s8
vmlasq_n_u16
vmlasq_n_u32
vmlasq_n_u8
vmlsdavaq_p
vmlsdavaq_p_s16
vmlsdavaq_p_s32
vmlsdavaq_p_s8
vmlsdavaq
vmlsdavaq_s16
vmlsdavaq_s32
vmlsdavaq_s8
vmlsdavaxq_p
vmlsdavaxq_p_s16
vmlsdavaxq_p_s32
vmlsdavaxq_p_s8
vmlsdavaxq
vmlsdavaxq_s16
vmlsdavaxq_s32
vmlsdavaxq_s8
vmlsdavq_p
vmlsdavq_p_s16
vmlsdavq_p_s32
vmlsdavq_p_s8
vmlsdavq
vmlsdavq_s16
vmlsdavq_s32
vmlsdavq_s8
vmlsdavxq_p
vmlsdavxq_p_s16
vmlsdavxq_p_s32
vmlsdavxq_p_s8
vmlsdavxq
vmlsdavxq_s16
vmlsdavxq_s32
vmlsdavxq_s8
vmlsldavaq_p
vmlsldavaq_p_s16
vmlsldavaq_p_s32
vmlsldavaq
vmlsldavaq_s16
vmlsldavaq_s32
vmlsldavaxq_p
vmlsldavaxq_p_s16
vmlsldavaxq_p_s32
vmlsldavaxq
vmlsldavaxq_s16
vmlsldavaxq_s32
vmlsldavq_p
vmlsldavq_p_s16
vmlsldavq_p_s32
vmlsldavq
vmlsldavq_s16
vmlsldavq_s32
vmlsldavxq_p
vmlsldavxq_p_s16
vmlsldavxq_p_s32
vmlsldavxq
vmlsldavxq_s16
vmlsldavxq_s32
vmovlbq_m
vmovlbq_m_s16
vmovlbq_m_s8
vmovlbq_m_u16
vmovlbq_m_u8
vmovlbq
vmovlbq_s16
vmovlbq_s8
vmovlbq_u16
vmovlbq_u8
vmovlbq_x
vmovlbq_x_s16
vmovlbq_x_s8
vmovlbq_x_u16
vmovlbq_x_u8
vmovltq_m
vmovltq_m_s16
vmovltq_m_s8
vmovltq_m_u16
vmovltq_m_u8
vmovltq
vmovltq_s16
vmovltq_s8
vmovltq_u16
vmovltq_u8
vmovltq_x
vmovltq_x_s16
vmovltq_x_s8
vmovltq_x_u16
vmovltq_x_u8
vmovnbq_m
vmovnbq_m_s16
vmovnbq_m_s32
vmovnbq_m_u16
vmovnbq_m_u32
vmovnbq
vmovnbq_s16
vmovnbq_s32
vmovnbq_u16
vmovnbq_u32
vmovntq_m
vmovntq_m_s16
vmovntq_m_s32
vmovntq_m_u16
vmovntq_m_u32
vmovntq
vmovntq_s16
vmovntq_s32
vmovntq_u16
vmovntq_u32
vmulhq_m
vmulhq_m_s16
vmulhq_m_s32
vmulhq_m_s8
vmulhq_m_u16
vmulhq_m_u32
vmulhq_m_u8
vmulhq
vmulhq_s16
vmulhq_s32
vmulhq_s8
vmulhq_u16
vmulhq_u32
vmulhq_u8
vmulhq_x
vmulhq_x_s16
vmulhq_x_s32
vmulhq_x_s8
vmulhq_x_u16
vmulhq_x_u32
vmulhq_x_u8
vmullbq_int_m
vmullbq_int_m_s16
vmullbq_int_m_s32
vmullbq_int_m_s8
vmullbq_int_m_u16
vmullbq_int_m_u32
vmullbq_int_m_u8
vmullbq_int
vmullbq_int_s16
vmullbq_int_s32
vmullbq_int_s8
vmullbq_int_u16
vmullbq_int_u32
vmullbq_int_u8
vmullbq_int_x
vmullbq_int_x_s16
vmullbq_int_x_s32
vmullbq_int_x_s8
vmullbq_int_x_u16
vmullbq_int_x_u32
vmullbq_int_x_u8
vmullbq_poly_m
vmullbq_poly_m_p16
vmullbq_poly_m_p8
vmullbq_poly
vmullbq_poly_p16
vmullbq_poly_p8
vmullbq_poly_x
vmullbq_poly_x_p16
vmullbq_poly_x_p8
vmulltq_int_m
vmulltq_int_m_s16
vmulltq_int_m_s32
vmulltq_int_m_s8
vmulltq_int_m_u16
vmulltq_int_m_u32
vmulltq_int_m_u8
vmulltq_int
vmulltq_int_s16
vmulltq_int_s32
vmulltq_int_s8
vmulltq_int_u16
vmulltq_int_u32
vmulltq_int_u8
vmulltq_int_x
vmulltq_int_x_s16
vmulltq_int_x_s32
vmulltq_int_x_s8
vmulltq_int_x_u16
vmulltq_int_x_u32
vmulltq_int_x_u8
vmulltq_poly_m
vmulltq_poly_m_p16
vmulltq_poly_m_p8
vmulltq_poly
vmulltq_poly_p16
vmulltq_poly_p8
vmulltq_poly_x
vmulltq_poly_x_p16
vmulltq_poly_x_p8
vmulq
vmulq_f16
vmulq_f32
vmulq_m
vmulq_m_f16
vmulq_m_f32
vmulq_m_n_f16
vmulq_m_n_f32
vmulq_m_n_s16
vmulq_m_n_s32
vmulq_m_n_s8
vmulq_m_n_u16
vmulq_m_n_u32
vmulq_m_n_u8
vmulq_m_s16
vmulq_m_s32
vmulq_m_s8
vmulq_m_u16
vmulq_m_u32
vmulq_m_u8
vmulq_n_f16
vmulq_n_f32
vmulq_n_s16
vmulq_n_s32
vmulq_n_s8
vmulq_n_u16
vmulq_n_u32
vmulq_n_u8
vmulq_s16
vmulq_s32
vmulq_s8
vmulq_u16
vmulq_u32
vmulq_u8
vmulq_x
vmulq_x_f16
vmulq_x_f32
vmulq_x_n_f16
vmulq_x_n_f32
vmulq_x_n_s16
vmulq_x_n_s32
vmulq_x_n_s8
vmulq_x_n_u16
vmulq_x_n_u32
vmulq_x_n_u8
vmulq_x_s16
vmulq_x_s32
vmulq_x_s8
vmulq_x_u16
vmulq_x_u32
vmulq_x_u8
vmvnq_m
vmvnq_m_n_s16
vmvnq_m_n_s32
vmvnq_m_n_u16
vmvnq_m_n_u32
vmvnq_m_s16
vmvnq_m_s32
vmvnq_m_s8
vmvnq_m_u16
vmvnq_m_u32
vmvnq_m_u8
vmvnq_n_s16
vmvnq_n_s32
vmvnq_n_u16
vmvnq_n_u32
vmvnq
vmvnq_s16
vmvnq_s32
vmvnq_s8
vmvnq_u16
vmvnq_u32
vmvnq_u8
vmvnq_x_n_s16
vmvnq_x_n_s32
vmvnq_x_n_u16
vmvnq_x_n_u32
vmvnq_x
vmvnq_x_s16
vmvnq_x_s32
vmvnq_x_s8
vmvnq_x_u16
vmvnq_x_u32
vmvnq_x_u8
vnegq
vnegq_f16
vnegq_f32
vnegq_m
vnegq_m_f16
vnegq_m_f32
vnegq_m_s16
vnegq_m_s32
vnegq_m_s8
vnegq_s16
vnegq_s32
vnegq_s8
vnegq_x
vnegq_x_f16
vnegq_x_f32
vnegq_x_s16
vnegq_x_s32
vnegq_x_s8
vornq
vornq_f16
vornq_f32
vornq_m
vornq_m_f16
vornq_m_f32
vornq_m_s16
vornq_m_s32
vornq_m_s8
vornq_m_u16
vornq_m_u32
vornq_m_u8
vornq_s16
vornq_s32
vornq_s8
vornq_u16
vornq_u32
vornq_u8
vornq_x
vornq_x_f16
vornq_x_f32
vornq_x_s16
vornq_x_s32
vornq_x_s8
vornq_x_u16
vornq_x_u32
vornq_x_u8
vorrq
vorrq_f16
vorrq_f32
vorrq_m
vorrq_m_f16
vorrq_m_f32
vorrq_m_n
vorrq_m_n_s16
vorrq_m_n_s32
vorrq_m_n_u16
vorrq_m_n_u32
vorrq_m_s16
vorrq_m_s32
vorrq_m_s8
vorrq_m_u16
vorrq_m_u32
vorrq_m_u8
vorrq_n_s16
vorrq_n_s32
vorrq_n_u16
vorrq_n_u32
vorrq_s16
vorrq_s32
vorrq_s8
vorrq_u16
vorrq_u32
vorrq_u8
vorrq_x
vorrq_x_f16
vorrq_x_f32
vorrq_x_s16
vorrq_x_s32
vorrq_x_s8
vorrq_x_u16
vorrq_x_u32
vorrq_x_u8
vpnot
vpselq
vpselq_f16
vpselq_f32
vpselq_s16
vpselq_s32
vpselq_s64
vpselq_s8
vpselq_u16
vpselq_u32
vpselq_u64
vpselq_u8
vqabsq_m
vqabsq_m_s16
vqabsq_m_s32
vqabsq_m_s8
vqabsq
vqabsq_s16
vqabsq_s32
vqabsq_s8
vqaddq_m
vqaddq_m_n_s16
vqaddq_m_n_s32
vqaddq_m_n_s8
vqaddq_m_n_u16
vqaddq_m_n_u32
vqaddq_m_n_u8
vqaddq_m_s16
vqaddq_m_s32
vqaddq_m_s8
vqaddq_m_u16
vqaddq_m_u32
vqaddq_m_u8
vqaddq
vqaddq_n_s16
vqaddq_n_s32
vqaddq_n_s8
vqaddq_n_u16
vqaddq_n_u32
vqaddq_n_u8
vqaddq_s16
vqaddq_s32
vqaddq_s8
vqaddq_u16
vqaddq_u32
vqaddq_u8
vqdmladhq_m
vqdmladhq_m_s16
vqdmladhq_m_s32
vqdmladhq_m_s8
vqdmladhq
vqdmladhq_s16
vqdmladhq_s32
vqdmladhq_s8
vqdmladhxq_m
vqdmladhxq_m_s16
vqdmladhxq_m_s32
vqdmladhxq_m_s8
vqdmladhxq
vqdmladhxq_s16
vqdmladhxq_s32
vqdmladhxq_s8
vqdmlahq_m
vqdmlahq_m_n_s16
vqdmlahq_m_n_s32
vqdmlahq_m_n_s8
vqdmlahq
vqdmlahq_n_s16
vqdmlahq_n_s32
vqdmlahq_n_s8
vqdmlashq_m
vqdmlashq_m_n_s16
vqdmlashq_m_n_s32
vqdmlashq_m_n_s8
vqdmlashq
vqdmlashq_n_s16
vqdmlashq_n_s32
vqdmlashq_n_s8
vqdmlsdhq_m
vqdmlsdhq_m_s16
vqdmlsdhq_m_s32
vqdmlsdhq_m_s8
vqdmlsdhq
vqdmlsdhq_s16
vqdmlsdhq_s32
vqdmlsdhq_s8
vqdmlsdhxq_m
vqdmlsdhxq_m_s16
vqdmlsdhxq_m_s32
vqdmlsdhxq_m_s8
vqdmlsdhxq
vqdmlsdhxq_s16
vqdmlsdhxq_s32
vqdmlsdhxq_s8
vqdmulhq_m
vqdmulhq_m_n_s16
vqdmulhq_m_n_s32
vqdmulhq_m_n_s8
vqdmulhq_m_s16
vqdmulhq_m_s32
vqdmulhq_m_s8
vqdmulhq
vqdmulhq_n_s16
vqdmulhq_n_s32
vqdmulhq_n_s8
vqdmulhq_s16
vqdmulhq_s32
vqdmulhq_s8
vqdmullbq_m
vqdmullbq_m_n_s16
vqdmullbq_m_n_s32
vqdmullbq_m_s16
vqdmullbq_m_s32
vqdmullbq
vqdmullbq_n_s16
vqdmullbq_n_s32
vqdmullbq_s16
vqdmullbq_s32
vqdmulltq_m
vqdmulltq_m_n_s16
vqdmulltq_m_n_s32
vqdmulltq_m_s16
vqdmulltq_m_s32
vqdmulltq
vqdmulltq_n_s16
vqdmulltq_n_s32
vqdmulltq_s16
vqdmulltq_s32
vqmovnbq_m
vqmovnbq_m_s16
vqmovnbq_m_s32
vqmovnbq_m_u16
vqmovnbq_m_u32
vqmovnbq
vqmovnbq_s16
vqmovnbq_s32
vqmovnbq_u16
vqmovnbq_u32
vqmovntq_m
vqmovntq_m_s16
vqmovntq_m_s32
vqmovntq_m_u16
vqmovntq_m_u32
vqmovntq
vqmovntq_s16
vqmovntq_s32
vqmovntq_u16
vqmovntq_u32
vqmovunbq_m
vqmovunbq_m_s16
vqmovunbq_m_s32
vqmovunbq
vqmovunbq_s16
vqmovunbq_s32
vqmovuntq_m
vqmovuntq_m_s16
vqmovuntq_m_s32
vqmovuntq
vqmovuntq_s16
vqmovuntq_s32
vqnegq_m
vqnegq_m_s16
vqnegq_m_s32
vqnegq_m_s8
vqnegq
vqnegq_s16
vqnegq_s32
vqnegq_s8
vqrdmladhq_m
vqrdmladhq_m_s16
vqrdmladhq_m_s32
vqrdmladhq_m_s8
vqrdmladhq
vqrdmladhq_s16
vqrdmladhq_s32
vqrdmladhq_s8
vqrdmladhxq_m
vqrdmladhxq_m_s16
vqrdmladhxq_m_s32
vqrdmladhxq_m_s8
vqrdmladhxq
vqrdmladhxq_s16
vqrdmladhxq_s32
vqrdmladhxq_s8
vqrdmlahq_m
vqrdmlahq_m_n_s16
vqrdmlahq_m_n_s32
vqrdmlahq_m_n_s8
vqrdmlahq
vqrdmlahq_n_s16
vqrdmlahq_n_s32
vqrdmlahq_n_s8
vqrdmlashq_m
vqrdmlashq_m_n_s16
vqrdmlashq_m_n_s32
vqrdmlashq_m_n_s8
vqrdmlashq
vqrdmlashq_n_s16
vqrdmlashq_n_s32
vqrdmlashq_n_s8
vqrdmlsdhq_m
vqrdmlsdhq_m_s16
vqrdmlsdhq_m_s32
vqrdmlsdhq_m_s8
vqrdmlsdhq
vqrdmlsdhq_s16
vqrdmlsdhq_s32
vqrdmlsdhq_s8
vqrdmlsdhxq_m
vqrdmlsdhxq_m_s16
vqrdmlsdhxq_m_s32
vqrdmlsdhxq_m_s8
vqrdmlsdhxq
vqrdmlsdhxq_s16
vqrdmlsdhxq_s32
vqrdmlsdhxq_s8
vqrdmulhq_m
vqrdmulhq_m_n_s16
vqrdmulhq_m_n_s32
vqrdmulhq_m_n_s8
vqrdmulhq_m_s16
vqrdmulhq_m_s32
vqrdmulhq_m_s8
vqrdmulhq
vqrdmulhq_n_s16
vqrdmulhq_n_s32
vqrdmulhq_n_s8
vqrdmulhq_s16
vqrdmulhq_s32
vqrdmulhq_s8
vqrshlq_m_n
vqrshlq_m_n_s16
vqrshlq_m_n_s32
vqrshlq_m_n_s8
vqrshlq_m_n_u16
vqrshlq_m_n_u32
vqrshlq_m_n_u8
vqrshlq_m
vqrshlq_m_s16
vqrshlq_m_s32
vqrshlq_m_s8
vqrshlq_m_u16
vqrshlq_m_u32
vqrshlq_m_u8
vqrshlq
vqrshlq_n_s16
vqrshlq_n_s32
vqrshlq_n_s8
vqrshlq_n_u16
vqrshlq_n_u32
vqrshlq_n_u8
vqrshlq_s16
vqrshlq_s32
vqrshlq_s8
vqrshlq_u16
vqrshlq_u32
vqrshlq_u8
vqrshrnbq_m
vqrshrnbq_m_n_s16
vqrshrnbq_m_n_s32
vqrshrnbq_m_n_u16
vqrshrnbq_m_n_u32
vqrshrnbq
vqrshrnbq_n_s16
vqrshrnbq_n_s32
vqrshrnbq_n_u16
vqrshrnbq_n_u32
vqrshrntq_m
vqrshrntq_m_n_s16
vqrshrntq_m_n_s32
vqrshrntq_m_n_u16
vqrshrntq_m_n_u32
vqrshrntq
vqrshrntq_n_s16
vqrshrntq_n_s32
vqrshrntq_n_u16
vqrshrntq_n_u32
vqrshrunbq_m
vqrshrunbq_m_n_s16
vqrshrunbq_m_n_s32
vqrshrunbq
vqrshrunbq_n_s16
vqrshrunbq_n_s32
vqrshruntq_m
vqrshruntq_m_n_s16
vqrshruntq_m_n_s32
vqrshruntq
vqrshruntq_n_s16
vqrshruntq_n_s32
vqshlq_m_n
vqshlq_m_n_s16
vqshlq_m_n_s32
vqshlq_m_n_s8
vqshlq_m_n_u16
vqshlq_m_n_u32
vqshlq_m_n_u8
vqshlq_m_r
vqshlq_m_r_s16
vqshlq_m_r_s32
vqshlq_m_r_s8
vqshlq_m_r_u16
vqshlq_m_r_u32
vqshlq_m_r_u8
vqshlq_m
vqshlq_m_s16
vqshlq_m_s32
vqshlq_m_s8
vqshlq_m_u16
vqshlq_m_u32
vqshlq_m_u8
vqshlq_n
vqshlq_n_s16
vqshlq_n_s32
vqshlq_n_s8
vqshlq_n_u16
vqshlq_n_u32
vqshlq_n_u8
vqshlq_r
vqshlq_r_s16
vqshlq_r_s32
vqshlq_r_s8
vqshlq_r_u16
vqshlq_r_u32
vqshlq_r_u8
vqshlq
vqshlq_s16
vqshlq_s32
vqshlq_s8
vqshlq_u16
vqshlq_u32
vqshlq_u8
vqshluq_m
vqshluq_m_n_s16
vqshluq_m_n_s32
vqshluq_m_n_s8
vqshluq
vqshluq_n_s16
vqshluq_n_s32
vqshluq_n_s8
vqshrnbq_m
vqshrnbq_m_n_s16
vqshrnbq_m_n_s32
vqshrnbq_m_n_u16
vqshrnbq_m_n_u32
vqshrnbq
vqshrnbq_n_s16
vqshrnbq_n_s32
vqshrnbq_n_u16
vqshrnbq_n_u32
vqshrntq_m
vqshrntq_m_n_s16
vqshrntq_m_n_s32
vqshrntq_m_n_u16
vqshrntq_m_n_u32
vqshrntq
vqshrntq_n_s16
vqshrntq_n_s32
vqshrntq_n_u16
vqshrntq_n_u32
vqshrunbq_m
vqshrunbq_m_n_s16
vqshrunbq_m_n_s32
vqshrunbq
vqshrunbq_n_s16
vqshrunbq_n_s32
vqshruntq_m
vqshruntq_m_n_s16
vqshruntq_m_n_s32
vqshruntq
vqshruntq_n_s16
vqshruntq_n_s32
vqsubq_m
vqsubq_m_n_s16
vqsubq_m_n_s32
vqsubq_m_n_s8
vqsubq_m_n_u16
vqsubq_m_n_u32
vqsubq_m_n_u8
vqsubq_m_s16
vqsubq_m_s32
vqsubq_m_s8
vqsubq_m_u16
vqsubq_m_u32
vqsubq_m_u8
vqsubq
vqsubq_n_s16
vqsubq_n_s32
vqsubq_n_s8
vqsubq_n_u16
vqsubq_n_u32
vqsubq_n_u8
vqsubq_s16
vqsubq_s32
vqsubq_s8
vqsubq_u16
vqsubq_u32
vqsubq_u8
vreinterpretq_f16
vreinterpretq_f16_f32
vreinterpretq_f16_s16
vreinterpretq_f16_s32
vreinterpretq_f16_s64
vreinterpretq_f16_s8
vreinterpretq_f16_u16
vreinterpretq_f16_u32
vreinterpretq_f16_u64
vreinterpretq_f16_u8
vreinterpretq_f32
vreinterpretq_f32_f16
vreinterpretq_f32_s16
vreinterpretq_f32_s32
vreinterpretq_f32_s64
vreinterpretq_f32_s8
vreinterpretq_f32_u16
vreinterpretq_f32_u32
vreinterpretq_f32_u64
vreinterpretq_f32_u8
vreinterpretq_s16
vreinterpretq_s16_f16
vreinterpretq_s16_f32
vreinterpretq_s16_s32
vreinterpretq_s16_s64
vreinterpretq_s16_s8
vreinterpretq_s16_u16
vreinterpretq_s16_u32
vreinterpretq_s16_u64
vreinterpretq_s16_u8
vreinterpretq_s32
vreinterpretq_s32_f16
vreinterpretq_s32_f32
vreinterpretq_s32_s16
vreinterpretq_s32_s64
vreinterpretq_s32_s8
vreinterpretq_s32_u16
vreinterpretq_s32_u32
vreinterpretq_s32_u64
vreinterpretq_s32_u8
vreinterpretq_s64
vreinterpretq_s64_f16
vreinterpretq_s64_f32
vreinterpretq_s64_s16
vreinterpretq_s64_s32
vreinterpretq_s64_s8
vreinterpretq_s64_u16
vreinterpretq_s64_u32
vreinterpretq_s64_u64
vreinterpretq_s64_u8
vreinterpretq_s8
vreinterpretq_s8_f16
vreinterpretq_s8_f32
vreinterpretq_s8_s16
vreinterpretq_s8_s32
vreinterpretq_s8_s64
vreinterpretq_s8_u16
vreinterpretq_s8_u32
vreinterpretq_s8_u64
vreinterpretq_s8_u8
vreinterpretq_u16
vreinterpretq_u16_f16
vreinterpretq_u16_f32
vreinterpretq_u16_s16
vreinterpretq_u16_s32
vreinterpretq_u16_s64
vreinterpretq_u16_s8
vreinterpretq_u16_u32
vreinterpretq_u16_u64
vreinterpretq_u16_u8
vreinterpretq_u32
vreinterpretq_u32_f16
vreinterpretq_u32_f32
vreinterpretq_u32_s16
vreinterpretq_u32_s32
vreinterpretq_u32_s64
vreinterpretq_u32_s8
vreinterpretq_u32_u16
vreinterpretq_u32_u64
vreinterpretq_u32_u8
vreinterpretq_u64
vreinterpretq_u64_f16
vreinterpretq_u64_f32
vreinterpretq_u64_s16
vreinterpretq_u64_s32
vreinterpretq_u64_s64
vreinterpretq_u64_s8
vreinterpretq_u64_u16
vreinterpretq_u64_u32
vreinterpretq_u64_u8
vreinterpretq_u8
vreinterpretq_u8_f16
vreinterpretq_u8_f32
vreinterpretq_u8_s16
vreinterpretq_u8_s32
vreinterpretq_u8_s64
vreinterpretq_u8_s8
vreinterpretq_u8_u16
vreinterpretq_u8_u32
vreinterpretq_u8_u64
vrev16q_m
vrev16q_m_s8
vrev16q_m_u8
vrev16q
vrev16q_s8
vrev16q_u8
vrev16q_x
vrev16q_x_s8
vrev16q_x_u8
vrev32q
vrev32q_f16
vrev32q_m
vrev32q_m_f16
vrev32q_m_s16
vrev32q_m_s8
vrev32q_m_u16
vrev32q_m_u8
vrev32q_s16
vrev32q_s8
vrev32q_u16
vrev32q_u8
vrev32q_x
vrev32q_x_f16
vrev32q_x_s16
vrev32q_x_s8
vrev32q_x_u16
vrev32q_x_u8
vrev64q
vrev64q_f16
vrev64q_f32
vrev64q_m
vrev64q_m_f16
vrev64q_m_f32
vrev64q_m_s16
vrev64q_m_s32
vrev64q_m_s8
vrev64q_m_u16
vrev64q_m_u32
vrev64q_m_u8
vrev64q_s16
vrev64q_s32
vrev64q_s8
vrev64q_u16
vrev64q_u32
vrev64q_u8
vrev64q_x
vrev64q_x_f16
vrev64q_x_f32
vrev64q_x_s16
vrev64q_x_s32
vrev64q_x_s8
vrev64q_x_u16
vrev64q_x_u32
vrev64q_x_u8
vrhaddq_m
vrhaddq_m_s16
vrhaddq_m_s32
vrhaddq_m_s8
vrhaddq_m_u16
vrhaddq_m_u32
vrhaddq_m_u8
vrhaddq
vrhaddq_s16
vrhaddq_s32
vrhaddq_s8
vrhaddq_u16
vrhaddq_u32
vrhaddq_u8
vrhaddq_x
vrhaddq_x_s16
vrhaddq_x_s32
vrhaddq_x_s8
vrhaddq_x_u16
vrhaddq_x_u32
vrhaddq_x_u8
vrmlaldavhaq_p
vrmlaldavhaq_p_s32
vrmlaldavhaq_p_u32
vrmlaldavhaq
vrmlaldavhaq_s32
vrmlaldavhaq_u32
vrmlaldavhaxq_p
vrmlaldavhaxq_p_s32
vrmlaldavhaxq
vrmlaldavhaxq_s32
vrmlaldavhq_p
vrmlaldavhq_p_s32
vrmlaldavhq_p_u32
vrmlaldavhq
vrmlaldavhq_s32
vrmlaldavhq_u32
vrmlaldavhxq_p
vrmlaldavhxq_p_s32
vrmlaldavhxq
vrmlaldavhxq_s32
vrmlsldavhaq_p
vrmlsldavhaq_p_s32
vrmlsldavhaq
vrmlsldavhaq_s32
vrmlsldavhaxq_p
vrmlsldavhaxq_p_s32
vrmlsldavhaxq
vrmlsldavhaxq_s32
vrmlsldavhq_p
vrmlsldavhq_p_s32
vrmlsldavhq
vrmlsldavhq_s32
vrmlsldavhxq_p
vrmlsldavhxq_p_s32
vrmlsldavhxq
vrmlsldavhxq_s32
vrmulhq_m
vrmulhq_m_s16
vrmulhq_m_s32
vrmulhq_m_s8
vrmulhq_m_u16
vrmulhq_m_u32
vrmulhq_m_u8
vrmulhq
vrmulhq_s16
vrmulhq_s32
vrmulhq_s8
vrmulhq_u16
vrmulhq_u32
vrmulhq_u8
vrmulhq_x
vrmulhq_x_s16
vrmulhq_x_s32
vrmulhq_x_s8
vrmulhq_x_u16
vrmulhq_x_u32
vrmulhq_x_u8
vrndaq
vrndaq_f16
vrndaq_f32
vrndaq_m
vrndaq_m_f16
vrndaq_m_f32
vrndaq_x
vrndaq_x_f16
vrndaq_x_f32
vrndmq
vrndmq_f16
vrndmq_f32
vrndmq_m
vrndmq_m_f16
vrndmq_m_f32
vrndmq_x
vrndmq_x_f16
vrndmq_x_f32
vrndnq
vrndnq_f16
vrndnq_f32
vrndnq_m
vrndnq_m_f16
vrndnq_m_f32
vrndnq_x
vrndnq_x_f16
vrndnq_x_f32
vrndpq
vrndpq_f16
vrndpq_f32
vrndpq_m
vrndpq_m_f16
vrndpq_m_f32
vrndpq_x
vrndpq_x_f16
vrndpq_x_f32
vrndq
vrndq_f16
vrndq_f32
vrndq_m
vrndq_m_f16
vrndq_m_f32
vrndq_x
vrndq_x_f16
vrndq_x_f32
vrndxq
vrndxq_f16
vrndxq_f32
vrndxq_m
vrndxq_m_f16
vrndxq_m_f32
vrndxq_x
vrndxq_x_f16
vrndxq_x_f32
vrshlq_m_n
vrshlq_m_n_s16
vrshlq_m_n_s32
vrshlq_m_n_s8
vrshlq_m_n_u16
vrshlq_m_n_u32
vrshlq_m_n_u8
vrshlq_m
vrshlq_m_s16
vrshlq_m_s32
vrshlq_m_s8
vrshlq_m_u16
vrshlq_m_u32
vrshlq_m_u8
vrshlq
vrshlq_n_s16
vrshlq_n_s32
vrshlq_n_s8
vrshlq_n_u16
vrshlq_n_u32
vrshlq_n_u8
vrshlq_s16
vrshlq_s32
vrshlq_s8
vrshlq_u16
vrshlq_u32
vrshlq_u8
vrshlq_x
vrshlq_x_s16
vrshlq_x_s32
vrshlq_x_s8
vrshlq_x_u16
vrshlq_x_u32
vrshlq_x_u8
vrshrnbq_m
vrshrnbq_m_n_s16
vrshrnbq_m_n_s32
vrshrnbq_m_n_u16
vrshrnbq_m_n_u32
vrshrnbq
vrshrnbq_n_s16
vrshrnbq_n_s32
vrshrnbq_n_u16
vrshrnbq_n_u32
vrshrntq_m
vrshrntq_m_n_s16
vrshrntq_m_n_s32
vrshrntq_m_n_u16
vrshrntq_m_n_u32
vrshrntq
vrshrntq_n_s16
vrshrntq_n_s32
vrshrntq_n_u16
vrshrntq_n_u32
vrshrq_m
vrshrq_m_n_s16
vrshrq_m_n_s32
vrshrq_m_n_s8
vrshrq_m_n_u16
vrshrq_m_n_u32
vrshrq_m_n_u8
vrshrq
vrshrq_n_s16
vrshrq_n_s32
vrshrq_n_s8
vrshrq_n_u16
vrshrq_n_u32
vrshrq_n_u8
vrshrq_x
vrshrq_x_n_s16
vrshrq_x_n_s32
vrshrq_x_n_s8
vrshrq_x_n_u16
vrshrq_x_n_u32
vrshrq_x_n_u8
vsbciq_m
vsbciq_m_s32
vsbciq_m_u32
vsbciq
vsbciq_s32
vsbciq_u32
vsbcq_m
vsbcq_m_s32
vsbcq_m_u32
vsbcq
vsbcq_s32
vsbcq_u32
vsetq_lane
vsetq_lane_f16
vsetq_lane_f32
vsetq_lane_s16
vsetq_lane_s32
vsetq_lane_s64
vsetq_lane_s8
vsetq_lane_u16
vsetq_lane_u32
vsetq_lane_u64
vsetq_lane_u8
vshlcq_m
vshlcq_m_s16
vshlcq_m_s32
vshlcq_m_s8
vshlcq_m_u16
vshlcq_m_u32
vshlcq_m_u8
vshlcq
vshlcq_s16
vshlcq_s32
vshlcq_s8
vshlcq_u16
vshlcq_u32
vshlcq_u8
vshllbq_m
vshllbq_m_n_s16
vshllbq_m_n_s8
vshllbq_m_n_u16
vshllbq_m_n_u8
vshllbq
vshllbq_n_s16
vshllbq_n_s8
vshllbq_n_u16
vshllbq_n_u8
vshllbq_x
vshllbq_x_n_s16
vshllbq_x_n_s8
vshllbq_x_n_u16
vshllbq_x_n_u8
vshlltq_m
vshlltq_m_n_s16
vshlltq_m_n_s8
vshlltq_m_n_u16
vshlltq_m_n_u8
vshlltq
vshlltq_n_s16
vshlltq_n_s8
vshlltq_n_u16
vshlltq_n_u8
vshlltq_x
vshlltq_x_n_s16
vshlltq_x_n_s8
vshlltq_x_n_u16
vshlltq_x_n_u8
vshlq_m_n
vshlq_m_n_s16
vshlq_m_n_s32
vshlq_m_n_s8
vshlq_m_n_u16
vshlq_m_n_u32
vshlq_m_n_u8
vshlq_m_r
vshlq_m_r_s16
vshlq_m_r_s32
vshlq_m_r_s8
vshlq_m_r_u16
vshlq_m_r_u32
vshlq_m_r_u8
vshlq_m
vshlq_m_s16
vshlq_m_s32
vshlq_m_s8
vshlq_m_u16
vshlq_m_u32
vshlq_m_u8
vshlq_n
vshlq_n_s16
vshlq_n_s32
vshlq_n_s8
vshlq_n_u16
vshlq_n_u32
vshlq_n_u8
vshlq_r
vshlq_r_s16
vshlq_r_s32
vshlq_r_s8
vshlq_r_u16
vshlq_r_u32
vshlq_r_u8
vshlq
vshlq_s16
vshlq_s32
vshlq_s8
vshlq_u16
vshlq_u32
vshlq_u8
vshlq_x_n
vshlq_x_n_s16
vshlq_x_n_s32
vshlq_x_n_s8
vshlq_x_n_u16
vshlq_x_n_u32
vshlq_x_n_u8
vshlq_x
vshlq_x_s16
vshlq_x_s32
vshlq_x_s8
vshlq_x_u16
vshlq_x_u32
vshlq_x_u8
vshrnbq_m
vshrnbq_m_n_s16
vshrnbq_m_n_s32
vshrnbq_m_n_u16
vshrnbq_m_n_u32
vshrnbq
vshrnbq_n_s16
vshrnbq_n_s32
vshrnbq_n_u16
vshrnbq_n_u32
vshrntq_m
vshrntq_m_n_s16
vshrntq_m_n_s32
vshrntq_m_n_u16
vshrntq_m_n_u32
vshrntq
vshrntq_n_s16
vshrntq_n_s32
vshrntq_n_u16
vshrntq_n_u32
vshrq_m
vshrq_m_n_s16
vshrq_m_n_s32
vshrq_m_n_s8
vshrq_m_n_u16
vshrq_m_n_u32
vshrq_m_n_u8
vshrq
vshrq_n_s16
vshrq_n_s32
vshrq_n_s8
vshrq_n_u16
vshrq_n_u32
vshrq_n_u8
vshrq_x
vshrq_x_n_s16
vshrq_x_n_s32
vshrq_x_n_s8
vshrq_x_n_u16
vshrq_x_n_u32
vshrq_x_n_u8
vsliq_m
vsliq_m_n_s16
vsliq_m_n_s32
vsliq_m_n_s8
vsliq_m_n_u16
vsliq_m_n_u32
vsliq_m_n_u8
vsliq
vsliq_n_s16
vsliq_n_s32
vsliq_n_s8
vsliq_n_u16
vsliq_n_u32
vsliq_n_u8
vsriq_m
vsriq_m_n_s16
vsriq_m_n_s32
vsriq_m_n_s8
vsriq_m_n_u16
vsriq_m_n_u32
vsriq_m_n_u8
vsriq
vsriq_n_s16
vsriq_n_s32
vsriq_n_s8
vsriq_n_u16
vsriq_n_u32
vsriq_n_u8
vst1q
vst1q_f16
vst1q_f32
vst1q_p
vst1q_p_f16
vst1q_p_f32
vst1q_p_s16
vst1q_p_s32
vst1q_p_s8
vst1q_p_u16
vst1q_p_u32
vst1q_p_u8
vst1q_s16
vst1q_s32
vst1q_s8
vst1q_u16
vst1q_u32
vst1q_u8
vst2q
vst2q_f16
vst2q_f32
vst2q_s16
vst2q_s32
vst2q_s8
vst2q_u16
vst2q_u32
vst2q_u8
vst4q
vst4q_f16
vst4q_f32
vst4q_s16
vst4q_s32
vst4q_s8
vst4q_u16
vst4q_u32
vst4q_u8
vstrbq_p
vstrbq_p_s16
vstrbq_p_s32
vstrbq_p_s8
vstrbq_p_u16
vstrbq_p_u32
vstrbq_p_u8
vstrbq
vstrbq_s16
vstrbq_s32
vstrbq_s8
vstrbq_scatter_offset_p
vstrbq_scatter_offset_p_s16
vstrbq_scatter_offset_p_s32
vstrbq_scatter_offset_p_s8
vstrbq_scatter_offset_p_u16
vstrbq_scatter_offset_p_u32
vstrbq_scatter_offset_p_u8
vstrbq_scatter_offset
vstrbq_scatter_offset_s16
vstrbq_scatter_offset_s32
vstrbq_scatter_offset_s8
vstrbq_scatter_offset_u16
vstrbq_scatter_offset_u32
vstrbq_scatter_offset_u8
vstrbq_u16
vstrbq_u32
vstrbq_u8
vstrdq_scatter_base_p
vstrdq_scatter_base_p_s64
vstrdq_scatter_base_p_u64
vstrdq_scatter_base
vstrdq_scatter_base_s64
vstrdq_scatter_base_u64
vstrdq_scatter_base_wb_p
vstrdq_scatter_base_wb_p_s64
vstrdq_scatter_base_wb_p_u64
vstrdq_scatter_base_wb
vstrdq_scatter_base_wb_s64
vstrdq_scatter_base_wb_u64
vstrdq_scatter_offset_p
vstrdq_scatter_offset_p_s64
vstrdq_scatter_offset_p_u64
vstrdq_scatter_offset
vstrdq_scatter_offset_s64
vstrdq_scatter_offset_u64
vstrdq_scatter_shifted_offset_p
vstrdq_scatter_shifted_offset_p_s64
vstrdq_scatter_shifted_offset_p_u64
vstrdq_scatter_shifted_offset
vstrdq_scatter_shifted_offset_s64
vstrdq_scatter_shifted_offset_u64
vstrhq
vstrhq_f16
vstrhq_p
vstrhq_p_f16
vstrhq_p_s16
vstrhq_p_s32
vstrhq_p_u16
vstrhq_p_u32
vstrhq_s16
vstrhq_s32
vstrhq_scatter_offset
vstrhq_scatter_offset_f16
vstrhq_scatter_offset_p
vstrhq_scatter_offset_p_f16
vstrhq_scatter_offset_p_s16
vstrhq_scatter_offset_p_s32
vstrhq_scatter_offset_p_u16
vstrhq_scatter_offset_p_u32
vstrhq_scatter_offset_s16
vstrhq_scatter_offset_s32
vstrhq_scatter_offset_u16
vstrhq_scatter_offset_u32
vstrhq_scatter_shifted_offset
vstrhq_scatter_shifted_offset_f16
vstrhq_scatter_shifted_offset_p
vstrhq_scatter_shifted_offset_p_f16
vstrhq_scatter_shifted_offset_p_s16
vstrhq_scatter_shifted_offset_p_s32
vstrhq_scatter_shifted_offset_p_u16
vstrhq_scatter_shifted_offset_p_u32
vstrhq_scatter_shifted_offset_s16
vstrhq_scatter_shifted_offset_s32
vstrhq_scatter_shifted_offset_u16
vstrhq_scatter_shifted_offset_u32
vstrhq_u16
vstrhq_u32
vstrwq
vstrwq_f32
vstrwq_p
vstrwq_p_f32
vstrwq_p_s32
vstrwq_p_u32
vstrwq_s32
vstrwq_scatter_base
vstrwq_scatter_base_f32
vstrwq_scatter_base_p
vstrwq_scatter_base_p_f32
vstrwq_scatter_base_p_s32
vstrwq_scatter_base_p_u32
vstrwq_scatter_base_s32
vstrwq_scatter_base_u32
vstrwq_scatter_base_wb
vstrwq_scatter_base_wb_f32
vstrwq_scatter_base_wb_p
vstrwq_scatter_base_wb_p_f32
vstrwq_scatter_base_wb_p_s32
vstrwq_scatter_base_wb_p_u32
vstrwq_scatter_base_wb_s32
vstrwq_scatter_base_wb_u32
vstrwq_scatter_offset
vstrwq_scatter_offset_f32
vstrwq_scatter_offset_p
vstrwq_scatter_offset_p_f32
vstrwq_scatter_offset_p_s32
vstrwq_scatter_offset_p_u32
vstrwq_scatter_offset_s32
vstrwq_scatter_offset_u32
vstrwq_scatter_shifted_offset
vstrwq_scatter_shifted_offset_f32
vstrwq_scatter_shifted_offset_p
vstrwq_scatter_shifted_offset_p_f32
vstrwq_scatter_shifted_offset_p_s32
vstrwq_scatter_shifted_offset_p_u32
vstrwq_scatter_shifted_offset_s32
vstrwq_scatter_shifted_offset_u32
vstrwq_u32
vsubq
vsubq_f16
vsubq_f32
vsubq_m
vsubq_m_f16
vsubq_m_f32
vsubq_m_n_f16
vsubq_m_n_f32
vsubq_m_n_s16
vsubq_m_n_s32
vsubq_m_n_s8
vsubq_m_n_u16
vsubq_m_n_u32
vsubq_m_n_u8
vsubq_m_s16
vsubq_m_s32
vsubq_m_s8
vsubq_m_u16
vsubq_m_u32
vsubq_m_u8
vsubq_n_f16
vsubq_n_f32
vsubq_n_s16
vsubq_n_s32
vsubq_n_s8
vsubq_n_u16
vsubq_n_u32
vsubq_n_u8
vsubq_s16
vsubq_s32
vsubq_s8
vsubq_u16
vsubq_u32
vsubq_u8
vsubq_x
vsubq_x_f16
vsubq_x_f32
vsubq_x_n_f16
vsubq_x_n_f32
vsubq_x_n_s16
vsubq_x_n_s32
vsubq_x_n_s8
vsubq_x_n_u16
vsubq_x_n_u32
vsubq_x_n_u8
vsubq_x_s16
vsubq_x_s32
vsubq_x_s8
vsubq_x_u16
vsubq_x_u32
vsubq_x_u8
vuninitializedq_f16
vuninitializedq_f32
vuninitializedq
vuninitializedq_polymorphic_f16
vuninitializedq_polymorphic_f32
vuninitializedq_polymorphic_s16
vuninitializedq_polymorphic_s32
vuninitializedq_polymorphic_s64
vuninitializedq_polymorphic_s8
vuninitializedq_polymorphic_u16
vuninitializedq_polymorphic_u32
vuninitializedq_polymorphic_u64
vuninitializedq_polymorphic_u8
vuninitializedq_s16
vuninitializedq_s32
vuninitializedq_s64
vuninitializedq_s8
vuninitializedq_u16
vuninitializedq_u32
vuninitializedq_u64
vuninitializedq_u8
cx1a
cx1d
cx1da
cx2a
cx2d
cx2da
cx3a
cx3d
cx3da
vcx1_u32
vcx1a_u32
vcx1d_u64
vcx1da_u64
vcx1q_m
vcx1q_m_f16
vcx1q_m_f32
vcx1q_m_s16
vcx1q_m_s32
vcx1q_m_s64
vcx1q_m_s8
vcx1q_m_u16
vcx1q_m_u32
vcx1q_m_u64
vcx1q_m_u8
vcx1q_u8
vcx1qa
vcx1qa_f16
vcx1qa_f32
vcx1qa_m
vcx1qa_m_f16
vcx1qa_m_f32
vcx1qa_m_s16
vcx1qa_m_s32
vcx1qa_m_s64
vcx1qa_m_s8
vcx1qa_m_u16
vcx1qa_m_u32
vcx1qa_m_u64
vcx1qa_m_u8
vcx1qa_s16
vcx1qa_s32
vcx1qa_s64
vcx1qa_s8
vcx1qa_u16
vcx1qa_u32
vcx1qa_u64
vcx1qa_u8
vcx2_u32
vcx2a_u32
vcx2d_u64
vcx2da_u64
vcx2q
vcx2q_f16
vcx2q_f32
vcx2q_m_impl
vcx2q_m_impl_f16
vcx2q_m_impl_f32
vcx2q_m_impl_s16
vcx2q_m_impl_s32
vcx2q_m_impl_s64
vcx2q_m_impl_s8
vcx2q_m_impl_u16
vcx2q_m_impl_u32
vcx2q_m_impl_u64
vcx2q_m_impl_u8
vcx2q_s16
vcx2q_s32
vcx2q_s64
vcx2q_s8
vcx2q_u16
vcx2q_u32
vcx2q_u64
vcx2q_u8
vcx2q_u8_f16
vcx2q_u8_f32
vcx2q_u8_s16
vcx2q_u8_s32
vcx2q_u8_s64
vcx2q_u8_s8
vcx2q_u8_u16
vcx2q_u8_u32
vcx2q_u8_u64
vcx2q_u8_u8
vcx2qa_impl
vcx2qa_impl_f16
vcx2qa_impl_f32
vcx2qa_impl_s16
vcx2qa_impl_s32
vcx2qa_impl_s64
vcx2qa_impl_s8
vcx2qa_impl_u16
vcx2qa_impl_u32
vcx2qa_impl_u64
vcx2qa_impl_u8
vcx2qa_m_impl
vcx2qa_m_impl_f16
vcx2qa_m_impl_f32
vcx2qa_m_impl_s16
vcx2qa_m_impl_s32
vcx2qa_m_impl_s64
vcx2qa_m_impl_s8
vcx2qa_m_impl_u16
vcx2qa_m_impl_u32
vcx2qa_m_impl_u64
vcx2qa_m_impl_u8
vcx3_u32
vcx3a_u32
vcx3d_u64
vcx3da_u64
vcx3q_impl
vcx3q_impl_f16
vcx3q_impl_f32
vcx3q_impl_s16
vcx3q_impl_s32
vcx3q_impl_s64
vcx3q_impl_s8
vcx3q_impl_u16
vcx3q_impl_u32
vcx3q_impl_u64
vcx3q_impl_u8
vcx3q_m_impl
vcx3q_m_impl_f16
vcx3q_m_impl_f32
vcx3q_m_impl_s16
vcx3q_m_impl_s32
vcx3q_m_impl_s64
vcx3q_m_impl_s8
vcx3q_m_impl_u16
vcx3q_m_impl_u32
vcx3q_m_impl_u64
vcx3q_m_impl_u8
vcx3q_u8_impl
vcx3q_u8_impl_f16
vcx3q_u8_impl_f32
vcx3q_u8_impl_s16
vcx3q_u8_impl_s32
vcx3q_u8_impl_s64
vcx3q_u8_impl_s8
vcx3q_u8_impl_u16
vcx3q_u8_impl_u32
vcx3q_u8_impl_u64
vcx3q_u8_impl_u8
vcx3qa_impl
vcx3qa_impl_f16
vcx3qa_impl_f32
vcx3qa_impl_s16
vcx3qa_impl_s32
vcx3qa_impl_s64
vcx3qa_impl_s8
vcx3qa_impl_u16
vcx3qa_impl_u32
vcx3qa_impl_u64
vcx3qa_impl_u8
vcx3qa_m_impl
vcx3qa_m_impl_f16
vcx3qa_m_impl_f32
vcx3qa_m_impl_s16
vcx3qa_m_impl_s32
vcx3qa_m_impl_s64
vcx3qa_m_impl_s8
vcx3qa_m_impl_u16
vcx3qa_m_impl_u32
vcx3qa_m_impl_u64
vcx3qa_m_impl_u8
vreinterpretq_u8
vreinterpretq_u8_u8
on_uniform_scan_sub_group_non_unnclusive_logicalxclusive_logicalusive_logical_oroup_non_uniform_ub_group_non_unieduce_logical_or_uniform_reduce_lustered_reduce_ub_group_cluster_exchange_strongtomic_compare_exstered_reduce_orx8packed_uu_uintot_acc_sat_4x8paoup_strided_copysync_work_group_allot_bit_extracc_sat_4x8packed_t_profiling_infoapture_event_prore_exchange_weakhannel_data_typemage_channel_datd_num_sub_groupsnqueued_num_sub_g_clear_explicittomic_flag_clearunsigned
itfield_extract_p_inverse_ballotub_group_inversee_num_mip_levelset_image_num_mip_ushort16_sat_rtonvert_ushort16_xchange_explicitmage_channel_ordnqueued_local_size
d_extract_signedoup_shuffle_downub_group_shuffleub_group_local_iax_sub_group_siz_work_item_fencetomic_work_item_ork_group_reduceroup_shuffle_xorb_group_shuffle_ser_event_statust_user_event_stamage_num_samplesuint
ot_4x8packed_uu_c_store_explicitomic_store_expli_work_group_copyync_work_group_c_group_broadcastork_group_broadcic_load_explicittomic_load_expliub_group_broadcast
s_valid_reserve_id
et_local_linear_ork_group_barriestorea_half16_rtait_group_events
CONCEPT_REQUIRES
ates-null-valuesauthenticates-nuestricted_intptr__ptrauth_restri
apinotes
icCompareAndSwapOSAtomicCompareAobjc_atomicCompa
not_swift_privatnonzero_argumentcess_independentprocess_independno_authenticatioprocess_dependens_discriminationaddress_discrimino_address_discrdefault_address_m_discriminationcustom_discrimine_discriminationtype_discriminata_discriminationno_extra_discrimdefault_extra_di
protectedsection
troying_delete_tdestroying_delet
nstant_evaluatedis_constant_eval
0123456789abcdef
,/\:. 
declare reductiocancellation point
 declare variantbegin declare varget
begin declare taarallel for simddistribute paralute parallel forparallel do simdbute parallel doend declare target
end declare varisimd
masked taskloop master taskloop parallel for simtaskloop
parallel masked ed taskloop simdparallel master er taskloop simdparallel sectionparallel workshatarget enter data
target exit datatarget parallel do
get parallel forfor simd
teams distributetarget teams dis distribute simdtarget teams loop
loop
n_construct_typecancellation_conem_order
atomic_default_mdynamic_allocatoed_shared_memoryunified_shared_m
PrivateFramework
--- !tapi-configonfiguration-v1
ErrorsAndWarningM
FORM
debug_abbrev.dwodebug_macinfo.dwo
_str_offsets.dwodebug_str_offsetdebug_loclists.dwo
debug_rnglists.ddebug_gnu_pubnames
debug_gnu_pubtypapple_namespaces
decltype(nullptr)
unsigned long long
__swift5_fieldmd__swift5_assocty__swift5_builtin__swift5_capture__swift5_typeref__swift5_reflstr__swift5_acfuncs
p_extension_safenot_app_extensiowatchos-simulato
--- !tapi-tbd-v3--- !tapi-tbd-v2--- !tapi-tbd-v1
watchossimulator
llvm_bb_addr_mapibraries
llvm_dependent_lll_graph_profilellvm_call_graph_m_linker_optionsllvm_linker_optignu_unique_objecndirect_functiongnu_indirect_fun.gnu.linkonce.b..llvm.linkonce.b.
.gnu.linkonce.tb.llvm.linkonce.tb.
.gnu.linkonce.tdd.
gotpcrel_norelax
^[\t\ ]*#[\t\ ]*(import|include)[^"<]*(["<][^">]*[">])
__include_macrosmodule.modulemap/usr/local/include
////////////////A
auth_struct_disc__add_lvalue_ref__add_rvalue_ref__multiple_inherstructor
__has_trivial_de__has_virtual_dethrow_assignable__is_nothrow_assivially_copyablein_convertvector__builtin_converow_constructible__is_nothrow_conally_relocatable__is_trivially_rr_object_pointer__is_member_objexnu_type_summaryray_msaa_depth_timage2d_array_ms__is_destructibl__is_literal_typ__remove_restric__remove_volatil__underlying_typ__bridge_transfe__bridge_retaine_Null_unspecifie__builtin_alignof
__unknown_anytypmove_constructornds_to_temporary__reference_bindtypes_compatiblelass
__is_interface_csign
__has_nothrow_as__has_trivial_asyout
__is_standard_laents
__remove_all_extce_t
__remove_referenrray
__is_unbounded_aaa_t
th_t
image2d_msaa_dep__single_inherit_virtual_inheritRETTY_FUNCTION____PRETTY_FUNCTIOs_convertible_tos_floating_point__is_floating_pos_member_pointer__is_member_poinuiltin_available__builtin_availa_source_location__builtin_sourcerow_destructible__is_nothrow_deshrow_move_assign__has_nothrow_movial_move_assignhrow_constructorvial_constructor__has_trivial_coially_assignable__is_trivially_apes_compatible_p__builtin_types_ly_constructiblefunction_pointer__is_member_funcrauth_struct_keyu_type_signature__builtin_offsetof
__builtin_FUNCTION
__is_constructible
__is_bounded_array
__is_referenceab__is_complete_type
__private_extern__
__module_private__builtin_bit_caltin_choose_expr__builtin_choose__is_lvalue_refe__is_rvalue_refe2d_array_depth_timage2d_array_de__virtual_inheri_multiple_inherireinterpret_cast__builtin_COLUMN__builtin_va_arg__is_polymorphic__remove_pointer__is_scoped_enum__is_lvalue_expr__is_rvalue_expr__is_fundamental__builtin_astypeimage1d_buffer_t_Nullable_resultlly_destructible__is_trivially_dmo_get_type_data__builtin_tmo_geimport_as_memberswift_infer_impoeclared_includesno_undeclared_in
nsafe_unretained__unsafe_unretai
address_sanitizee_load_hardeningspeculative_loadddress_sanitizerhwaddress_saniticoverage_sanitizhavior_sanitizerundefined_behavinalyzer_noreturnattribute_analyzbility_driverkitattribute_availaability_bridgeoslability_watchosvailability_tvosute_availabilityailability_swiftreturns_retainedattribute_cf_ret_ext_vector_typeattribute_ext_veattribute_ns_retbute_ns_consumedattribute_ns_conbute_cf_consumedattribute_cf_conjc_method_familyattribute_objc_mns_consumes_selfobjc_ivar_unusedattribute_objc_iute_overloadableattribute_overlounused_on_fieldsattribute_unuseddiagnose_if_objcattribute_diagnoafety_attributesc_thread_safety_rator_attributesenumerator_attrilized_swift_namegeneralized_swifbility_on_arraysnullability_on_amemory_sanitizerthread_sanitizer_nullable_resultnullability_nulldataflow_sanitizptrauth_intrinsics
ptrauth_qualifieptrauth_objc_isahod_list_pointerptrauth_objc_metc_signable_classptrauth_objc_sigjc_interface_selptrauth_objc_intsa_authenticatesh_objc_isa_signs_objc_isa_stripsh_indirect_gotosptrauth_indirect_masking
lock_descriptorsptrauth_signed_bobjc_instancetypc_nonfragile_abiobjc_nonfragile_alifier_manglingobjc_protocol_qu_explicit_atomicobjc_property_exobjc_subscripting
c_array_literalsobjc_array_literliterals
objc_dictionary_oxed_expressionsobjc_boxed_exprealue_expressionsobjc_boxed_nsvalonstant_literalsobjc_constant_li_cf_code_auditedarc_cf_code_audie_id_on_typedefsobjc_bridge_id_oenerics_varianceobjc_generics_vac_class_propertyobjc_class_propesert
objc_c_static_asxx_static_assertobjc_cxx_static_ions
c_generic_selects_control_sfinaecxx_access_contr_alias_templatescxx_alias_templa_string_builtinscxx_constexpr_staulted_functionscxx_defaulted_fuing_constructorscxx_delegating_celeted_functionscxx_deleted_funcversions
cxx_explicit_conzed_initializerscxx_generalized_cxx_implicit_movcxx_inheriting_cnline_namespacescxx_inline_namespe_template_argscxx_local_type_tatic_member_initcxx_nonstatic_metrol
cxx_override_con_string_literalscxx_raw_string_lvalue_referencescxx_rvalue_refercxx_strong_enumscxx_static_assercxx_thread_local_trailing_returncxx_trailing_retrals
cxx_unicode_liteestricted_unionscxx_unrestrictedcxx_user_literalriadic_templatescxx_variadic_tem_aggregate_nsdmicxx_aggregate_ns_binary_literalscxx_binary_litertual_conversionscxx_contextual_ccxx_decltype_aut_generic_lambdascxx_generic_lambcxx_init_captureelaxed_constexprcxx_relaxed_consn_type_deductioncxx_return_type_riable_templatescxx_variable_temhas_nothrow_assign
has_nothrow_copyhas_nothrow_conshas_trivial_assihas_trivial_copyhas_trivial_consivial_destructorhas_trivial_destrtual_destructorhas_virtual_destis_constructibleis_convertible_tis_standard_layout
is_trivially_assis_trivially_conis_trivially_copshadow_call_stack
rary
experimental_lib_relative_vtablecxx_abi_relativenoinline_keywordcuda_noinline_keemory_operationstyped_memory_opelete
typed_cxx_new_deoadable_unmarkedoverloadable_unm_scalar_divisionmatrix_types_scaoto_with_outputsgnu_asm_goto_witlvalue_referencervalue_reference__is_target_archype_pack_element__type_pack_elem__make_integer_seq
__is_target_vendor
rget_environment__is_target_enviiant
__has_target_variant_environment__is_target_variarget_variant_osafe_forge_single__builtin_unsafe
llvm_fatal_errorllvm_unreachableg+
_saved_registersno_caller_saved_trument_functionno_instrument_furandomize_layoutno_randomize_layno_profile_instron_entry
patchable_functitransparent_uniowarn_unused_result
lign_arg_pointerforce_align_arg_aarch64_vector_par_address_spaceaarch64_far_addranalyzer_suppresrve_access_indexpreserve_access_cf_returns_not_rmp_table
cfi_canonical_juaudited_transfercf_audited_transcf_returns_retaiunknown_transfercf_unknown_transgnose_as_builtindiagnose_as_buildisable_tail_calls
enforce_tcb_leafal_source_symbolexternal_source_isibility_publiclto_visibility_pinternal_linkageized
loader_uninitialmig_server_routine
min_vector_widthrns_autoreleasedns_returns_autorns_returns_not_rns_returns_retaineon_vector_typetype
neon_polyvector_no_speculative_lno_stack_protectno_thread_safetyos_consumes_thisos_returns_not_rretained_on_zeroined_on_non_zeroated_initializerobjc_designated_c_direct_membersobjc_direct_membretained
objc_externally_ndependent_classobjc_independentobjc_nonlazy_class
precise_lifetimeobjc_precise_lifruntime_protocolobjc_non_runtimec_requires_superobjc_requires_suible
objc_runtime_visobjc_runtime_namns_inner_pointerobjc_returns_innssing_restrictedobjc_subclassingrect
objc_suppress_divice
opencl_global_deopencl_global_hoect_size
d_only_placementenforce_read_onlsycl_special_claft_async_contextswift_async_contswift_error_resu_indirect_resultswift_indirect_rfootnote
symbol_metadata_memory_operationping
transparent_stepafe_buffer_usageunsafe_buffer_usnever_instrumentxray_never_instrlways_instrumentxray_always_inst_work_group_sizeamdgpu_flat_workgpu_waves_per_euamdgpu_waves_perrns_not_retainedshared_capabilitt_initializationrequire_constantet_state_on_readconsumable_set_s_auto_cast_stateconsumable_auto_pass_object_sizepass_dynamic_objstandalone_debugcarries_dependency
no_unique_addres__launch_bounds_n_surface_type____device_builtinn_texture_type____cudart_builtinanalyzer_noreturocally_streamingarm_locally_strearm_preserves_za_sve_vector_bitsarm_sve_vector_bmpatible
arm_streaming_cotin_surface_typedevice_builtin_stin_texture_typedevice_builtin_te_nonsecure_callcmse_nonsecure_cntry
cmse_nonsecure_efinition
objc_complete_ded_sub_group_sizeintel_reqd_sub_gopencl_unroll_hisize
reqd_work_group_swift_async_name_bridged_typedefswift_bridged_tyswift_objc_membehint
work_group_size__returns_retaineubclassing_restresignated_initianforce_read_onlypeculative_load_bjc_returns_inneprotocol
bjc_non_runtime_analysis
o_thread_safety_ss_space
arch64_far_addrein_alias
_clang_arm_builtnu::no_address_setadata_footnoteymbol_metadata_famic_object_sizeass_dynamic_objeernally_retainedbjc_externally_rnical_jump_tablefi_canonical_jumnu::no_caller_sas_returns_not_ref_returns_not_ree_function_entrynu::patchable_furay_always_instryped_memory_opertrauth_vtable_pobjc_independent_xternal_source_srgument_with_typnu::force_align_ment
ray_never_instruype_tag_for_datasult
wift_indirect_reeserve_access_ininter_with_type_time
bjc_precise_lifeblic
to_visibility_punu::no_instrumensparent_steppingransparent_steppencl_global_devi_polyvector_typeeon_polyvector_ter_uninitializedoader_uninitialinu_usage_semantinsafe_buffer_usage
wift_async_context
s_returns_retained
iagnose_as_builtin
cl_special_classift_error_resultencl_global_hostig_server_routinboutletcollectionum_extensibilitisable_tail_callarch64_vector_pcero_call_used_regs
wift_async_errornalyzer_suppressarn_unused_resulo_sanitize_threaransparent_unionnu::transparent_nu::randomize_laequire_constant_ry_acquire_shareo_speculative_lomdgpu_flat_work_uires_shared_capease_generic_caponsumable_auto_celease_shared_caquire_shared_caprch64_far_addrese_locks_requiredxclusive_locks_rssert_shared_capped_memory_operality
y_acquire_capabiift_indirect_resared_locks_requiequires_capabilimdgpu_waves_per_eu
elease_capabilitrch64_vector_pcsrries_dependencyo_unique_addresso_address_safetyxclusive_trylockhread_safety_anaaller_saved_regioup_size
ntel_reqd_sub_grchable_function_s_dynamic_objectxternally_retainomplete_definitisert_shared_capaaming_compatiblem_streaming_comphared_trylock_fuorce_align_arg_pxclusive_lock_fuo_instrument_funsert_exclusive_lm_locally_stream_group_size_hintork_group_size_hed_lock_functionhared_lock_functeqd_work_group_s_nonsecure_entrymse_nonsecure_ense_nonsecure_call
ang_builtin_aliam_sve_vector_bitdgpu_waves_per_eu
arries_dependencsert_shared_lockfied_inheritance__unspecified_iniple_inheritanceos_returns_retai
#pragma-messages
#warnings
CFString-literal
IndependentClass-attribute
NSObject-attribute
absolute-value
abstract-final-class
abstract-vbase-init
address
address-of-packed-member
address-of-temporary
aggregate-return
aix-compat
align-mismatch
alloca
alloca-with-align-alignof
always-inline-coroutine
ambiguous-delete
ambiguous-ellipsis
ambiguous-macro
ambiguous-member-template
ambiguous-reversed-operator
analyzer-incompatible-plugin
anon-enum-enum-conversion
anonymous-pack-parens
apinotes
arc%arc-bridge-casts-disallowed-in-nonarc
arc-maybe-repeated-use-of-weak
arc-non-pod-memaccess
arc-performSelector-leaks
arc-repeated-use-of-weak
arc-retain-cycles
arc-unsafe-retained-assign
argument-outside-range
argument-undefined-behaviourarray-bounds
array-bounds-pointer-arithmetic
array-parameter
asm-operand-widths
assign-enum
assume
at-protocol
atimport-in-framework-header
atomic-access
atomic-alignment
atomic-implicit-seq-cst
atomic-memory-ordering
atomic-properties*atomic-property-with-user-defined-accessor
attribute-packed-for-bitfield
attribute-warning
attributes
auto-disable-vptr-sanitizer
auto-import
auto-storage-class
auto-var-idavailability
avr-rtlib-linking-quirks
backend-plugin
backslash-newline-escape
bad-function-cast
binary-literal
bind-to-temporary-copy
binding-in-condition
bit-int-extension
bitfield-constant-conversion
bitfield-enum-conversion
bitfield-width
bitwise-conditional-parentheses
bitwise-instead-of-logical
bitwise-op-parentheses
block-capture-autoreleasing
bool-conversion
bool-conversions
bool-operation*bounds-attributes-cxx-experimental-ignored$bounds-attributes-extern-array-countBbounds-attributes-implicit-conversion-single-to-explicit-indexable'bounds-attributes-init-list-side-effect+bounds-attributes-objc-experimental-ignored+bounds-safety-init-list-null-non-zero-count2bounds-safety-single-to-indexable-bounds-truncated
braced-scalar-init
branch-protection
bridge-cast builtin-assume-aligned-alignment
builtin-macro-redefined
builtin-memcpy-chk-size
builtin-requires-header
c++-compatc++0x-compat
c++0x-extensions
c++0x-narrowingc++11-compat(c++11-compat-deprecated-writable-strings
c++11-compat-pedantic*c++11-compat-reserved-user-defined-literal
c++11-extensions
c++11-extra-semi
c++11-inline-namespace
c++11-long-long
c++11-narrowing
c++14-attribute-extensions
c++14-binary-literalc++14-compat
c++14-compat-pedantic
c++14-extensions
c++17-attribute-extensionsc++17-compat
c++17-compat-mangling
c++17-compat-pedantic
c++17-extensions
c++1y-extensionsc++1z-compat
c++1z-compat-mangling
c++1z-extensions
c++20-attribute-extensionsc++20-compat
c++20-compat-pedantic
c++20-designator
c++20-extensionsc++2a-compat
c++2a-compat-pedantic
c++2a-extensions
c++2b-extensions
c++98-c++11-c++14-c++17-compat'c++98-c++11-c++14-c++17-compat-pedantic
c++98-c++11-c++14-compat!c++98-c++11-c++14-compat-pedantic
c++98-c++11-compat!c++98-c++11-compat-binary-literal
c++98-c++11-compat-pedanticc++98-compat#c++98-compat-bind-to-temporary-copy
c++98-compat-extra-semi%c++98-compat-local-type-template-args
c++98-compat-pedantic'c++98-compat-unnamed-type-template-args
c11-extensions
c2x-compat
c2x-extensions
c99-compat
c99-designator
c99-extensions#call-to-pure-virtual-from-ctor-dtor
called-once-parameter
cast-align
cast-calling-convention
cast-function-type
cast-of-sel-type
cast-qual
cast-qual-unrelated
char-align
char-subscripts
clang-cacheclang-cl-pch
class-conversion
class-varargs
cmse-union-leak
comma
comment
comments
compare-distinct-pointer-types
compile-job-cache
compile-job-cache-hit
compile-job-cache-miss
compile-job-cache-timing
completion-handler
complex-component-init
compound-token-split
compound-token-split-by-macro
compound-token-split-by-space
concepts-ts-compat
conditional-type-mismatch
conditional-uninitialized
config-macros
constant-conversion
constant-evaluated
constant-logical-operand
constexpr-not-const
consumed
conversion
conversion-null$coro-non-aligned-allocation-funciton
coroutine%coroutine-missing-unhandled-exception
covered-switch-default
cstring-format-directive
ctad-maybe-unsupported
ctor-dtor-privacy
cuda-compat
custom-atomic-properties
cxx-attribute-extension
dangling
dangling-else
dangling-fielddangling-gsl
dangling-initializer-list
darwin-sdk-settings
date-time
dealloc-in-category
debug-compression-unavailable
declaration-after-statement
defaulted-function-deleted
delegating-ctor-cycles delete-abstract-non-virtual-dtor
delete-incomplete$delete-non-abstract-non-virtual-dtor
delete-non-virtual-dtor#delimited-escape-sequence-extension
deprecate-lax-vec-conv-all
deprecated
deprecated-altivec-src-compat$deprecated-anon-enum-enum-conversion
deprecated-array-compare
deprecated-attributes
deprecated-builtins
deprecated-comma-subscript
deprecated-copy
deprecated-copy-dtor
deprecated-copy-with-dtor'deprecated-copy-with-user-provided-copy'deprecated-copy-with-user-provided-dtor
deprecated-coroutine
deprecated-declarations!deprecated-dynamic-exception-spec
deprecated-enum-compare#deprecated-enum-compare-conditional
deprecated-enum-enum-conversion deprecated-enum-float-conversion!deprecated-experimental-coroutine
deprecated-implementations
deprecated-increment-bool
deprecated-non-prototype
deprecated-objc-isa-usage%deprecated-objc-pointer-introspection5deprecated-objc-pointer-introspection-performSelector
deprecated-pragma
deprecated-register
deprecated-static-analyzer-flag
deprecated-this-capture
deprecated-type
deprecated-volatile
deprecated-writable-strings
direct-ivar-access
disabled-macro-expansion
disabled-optimizationdiscard-qual
distributed-object-modifiers
div-by-zero
division-by-zero
dll-attribute-on-redeclaration%dllexport-explicit-instantiation-decl
dllimport-static-field-def
documentation
documentation-deprecated-sync
documentation-html
documentation-pedantic
documentation-unknown-command
dollar-in-identifier-extension
double-promotion
dtor-namedtor-typedef
duplicate-decl-specifier
duplicate-enum
duplicate-method-arg
duplicate-method-match
duplicate-protocol
dynamic-class-memaccess
dynamic-exception-spec
effc++
elaborated-enum-base
elaborated-enum-class
embedded-directive
empty-body
empty-decomposition
empty-init-stmt
empty-translation-unit
encode-typeendif-labelsenum-compare
enum-compare-conditional
enum-compare-switch
enum-constexpr-conversion
enum-conversion
enum-enum-conversion
enum-float-conversion
enum-too-large
exceptions
excess-initializers
exit-time-destructors
expansion-to-defined
explicit-initialize-call
explicit-ownership-type
export-unnamed
export-using-directive
extern-c-compat
extern-initializer
extra
extra-qualification
extra-semi
extra-semi-stmtextra-tokens
final-dtor-non-final-class
final-macro
firebloom-incomplete-array firebloom-init-list-partial-null
firebloom-single-to-count
fixed-enum-extension
fixed-point-overflow
flag-enum
flexible-array-extensions
float-conversion
float-equal
float-overflow-conversion
float-zero-conversion
for-loop-analysis
format
format-extra-args
format-insufficient-args
format-invalid-specifier
format-non-iso
format-nonliteral
format-pedantic
format-security
format-type-confusion
format-y2k
format-zero-length
format=2
fortify-source
four-char-constants
frame-address
frame-larger-than
frame-larger-than=%framework-include-private-from-public
free-nonheap-object
function-def-in-objc-container
function-multiversionfuse-ld-path
future-attribute-extensions
future-compat
gcc-compat
global-constructors
global-isel
gnu-alignof-expression
gnu-anonymous-struct
gnu-array-member-paren-init
gnu-auto-type
gnu-binary-literal
gnu-case-range
gnu-complex-integer gnu-compound-literal-initializer
gnu-conditional-omitted-operand
gnu-designator
gnu-empty-initializer
gnu-empty-struct
gnu-flexible-array-initializer
gnu-flexible-array-union-member
gnu-folding-constant
gnu-imaginary-constant
gnu-include-next
gnu-inline-cpp-without-extern
gnu-label-as-value
gnu-line-marker
gnu-null-pointer-arithmetic
gnu-pointer-arith
gnu-redeclared-enum
gnu-statement-expression-gnu-statement-expression-from-macro-expansion
gnu-static-float-init$gnu-string-literal-operator-template
gnu-union-cast"gnu-variable-sized-type-not-at-end
gnu-zero-line-directive!gnu-zero-variadic-macro-arguments
gpu-maybe-wrong-sideheader-guard
header-hygiene
hip-only
hlsl-extensions
idiomatic-parentheses
ignored-attributes)ignored-availability-without-sdk-settings
ignored-optimization-argument
ignored-pragma-intrinsic
ignored-pragma-optimize
ignored-pragmas
ignored-qualifiers
ignored-reference-qualifiers
implicit
implicit-atomic-properties#implicit-const-int-float-conversion*implicit-conversion-floating-point-to-bool implicit-exception-spec-mismatch
implicit-fallthrough!implicit-fallthrough-per-function
implicit-fixed-point-conversion
implicit-float-conversion
implicit-function-declarationimplicit-int
implicit-int-conversion
implicit-int-float-conversion
implicit-retain-self
implicitly-unsigned-literal
import&import-preprocessor-directive-pedantic
inaccessible-base
include-next-absolute-path
include-next-outside-header
incompatible-exception-spec#incompatible-function-pointer-types"incompatible-library-redeclaration
incompatible-ms-struct
incompatible-pointer-types.incompatible-pointer-types-discards-qualifiers
incompatible-property-type
incompatible-sysroot'incomplete-framework-module-declaration
incomplete-implementation
incomplete-module
incomplete-setjmp-declaration
incomplete-umbrella
inconsistent-dllimport(inconsistent-missing-destructor-override
inconsistent-missing-override
increment-bool
index-store
infinite-recursion
init-self
initializer-overrides
injected-class-name
inline
inline-asm#inline-namespace-reopened-noninline
inline-new-delete"instantiation-after-specialization
int-conversion
int-conversions
int-in-bool-context
int-to-pointer-cast
int-to-void-pointer-cast
integer-overflow
interrupt-service-routine
invalid-command-line-argument
invalid-constexpr
invalid-iboutlet&invalid-initializer-from-system-header
invalid-ios-deployment-target
invalid-no-builtin-names
invalid-noreturn
invalid-offsetof invalid-or-nonexistent-directory
invalid-partial-specialization
invalid-pch
invalid-pp-token
invalid-source-encoding
invalid-token-pasteinvalid-utf8
jump-seh-finally
keyword-compat
keyword-macro
knr-promoted-parameter
language-extension-token
large-by-value-copy
liblto
linker-warnings
literal-conversion
literal-range
local-type-template-args
logical-not-parentheses
logical-op-parentheses
long-long
loop-analysis
macro-redefined
main
main-return-type
malformed-warning-check
many-braces-around-scalar-init
max-tokens
max-unsigned-zero
memset-transposed-args
memsize-comparison
method-signatures
microsoft
microsoft-abstract
microsoft-anon-tag
microsoft-cast
microsoft-charize
microsoft-comment-paste
microsoft-const-init
microsoft-cpp-macro"microsoft-default-arg-redefinition
microsoft-drectve-section
microsoft-end-of-file microsoft-enum-forward-reference
microsoft-enum-value
microsoft-exception-spec
microsoft-exists#microsoft-explicit-constructor-call
microsoft-extra-qualification
microsoft-fixed-enum
microsoft-flexible-array
microsoft-goto
microsoft-inaccessible-base
microsoft-include
microsoft-mutable-reference
microsoft-pure-definition
microsoft-redeclare-static
microsoft-sealed
microsoft-static-assert
microsoft-template
microsoft-template-shadow microsoft-union-member-reference
microsoft-unqualified-friend
microsoft-using-decl
microsoft-void-pseudo-dtor
misexpect
misleading-indentation
mismatched-new-delete
mismatched-parameter-types
mismatched-return-types
mismatched-tags
missing-braces
missing-constinit
missing-declarations
missing-exception-spec
missing-field-initializers
missing-format-attribute
missing-include-dirs
missing-method-return-type
missing-noescape
missing-noreturn
missing-prototype-for-cc
missing-prototypes
missing-selector-name
missing-sysroot
missing-variable-declarations
misspelled-assumptionmodule-build
module-conflict
module-file-config-mismatch
module-file-extension
module-import
module-import-in-extern-c
module-include-translation
module-lock"modules-ambiguous-internal-linkage
modules-import-nested-redundant
most
movemsvc-include
msvc-not-found
multichar
multiple-move-vbase
narrowing
nested-anon-types
nested-externs
new-returns-null
newline-eof
noderef
noexcept-type
non-c-typedef-for-linkage
non-gcc
non-literal-null-conversion'non-modular-include-in-framework-module
non-modular-include-in-module
non-pod-varargs
non-power-of-two-alignment
non-virtual-dtor
nonnull
nonportable-cfstrings
nonportable-include-path!nonportable-private-apinotes-path(nonportable-private-system-apinotes-path
nonportable-system-include-path!nonportable-vector-initialization
nontrivial-memaccess
nsconsumed-mismatch
nsreturns-mismatch
null-arithmetic
null-character
null-conversion
null-dereference
null-pointer-arithmetic
null-pointer-subtraction
nullability
nullability-completeness"nullability-completeness-on-arrays
nullability-declspec
nullability-extension#nullability-inferred-on-nested-type
nullable-to-nonnull-conversion+objc-autosynthesis-property-ivar-name-match
objc-bool-constant-conversion
objc-boxing
objc-circular-container
objc-cocoa-api
objc-designated-initializers
objc-dictionary-duplicate-keys
objc-flexible-array
objc-forward-class-redefinition
objc-interface-ivars
objc-literal-compare
objc-literal-conversion
objc-load-method
objc-macro-redefinition
objc-messaging-id
objc-method-access
objc-missing-property-synthesis
objc-missing-super-calls
objc-multiple-method-names"objc-noncopy-retain-block-property
objc-nonunified-exceptions#objc-property-assign-on-object-type
objc-property-implementation
objc-property-implicit-mismatch*objc-property-matches-cocoa-ownership-rule
objc-property-no-attribute
objc-property-synthesis#objc-protocol-method-implementation objc-protocol-property-synthesis
objc-protocol-qualifiers"objc-readonly-with-setter-property
objc-redundant-api-use
objc-redundant-literal-use
objc-root-class
objc-signed-char-bool/objc-signed-char-bool-implicit-float-conversion-objc-signed-char-bool-implicit-int-conversion
objc-string-compare
objc-string-concatenation
objc-unsafe-perform-selector
objc-weak-compat
old-style-cast
old-style-definition
opencl-unsupported-rgba
openmp
openmp-51-extensions
openmp-clauses
openmp-loop-form
openmp-mapping
openmp-target
option-ignored!ordered-compare-function-pointers
ossharedptr-misuse
out-of-line-declaration
out-of-scope-functionover-aligned
overflow
overlength-strings
overloaded-shift-op-parentheses
overloaded-virtual
override-init
override-module
overriding-method-mismatch
overriding-t-option
packed
padded
parentheses
parentheses-equality
partial-availability
pass
pass-analysis
pass-failed
pass-missed
pch-date-time
pedantic
pedantic-core-features
pedantic-macros
pessimizing-move
pointer-arith
pointer-bool-conversion
pointer-compare
pointer-integer-comparepointer-sign
pointer-to-enum-cast
pointer-to-int-cast
pointer-type-mismatch
poison-system-directories
potentially-direct-selector potentially-evaluated-expression
pragma-clang-attribute
pragma-once-outside-header
pragma-pack
pragma-pack-suspicious-include#pragma-system-header-outside-header
pragmas
pre-c++14-compat
pre-c++14-compat-pedantic
pre-c++17-compat
pre-c++17-compat-pedantic
pre-c++20-compat
pre-c++20-compat-pedantic
pre-c++2b-compat
pre-c++2b-compat-pedantic
pre-c2x-compat
pre-c2x-compat-pedantic
pre-openmp-51-compat&predefined-identifier-outside-function
private-extern
private-header
private-module
profile-instr-missing
profile-instr-out-of-date
profile-instr-unprofiled
property-access-dot-syntax
property-attribute-mismatch
protocol%protocol-property-synthesis-ambiguity
psabi
ptrauth-null-pointers
qualified-void-return-type"quoted-include-in-framework-header
range-loop-analysis
range-loop-bind-reference
range-loop-construct
read-only-types
readonly-iboutlet-property
receiver-expr
receiver-forward-class
redeclared-class-member
redundant-consteval-if
redundant-decls
redundant-move
redundant-parens
register
reinterpret-base-class
remark-backend-plugin
reorderreorder-ctor
reorder-init-list
reproducible-caching
requires-super-attribute
reserved-id-macro
reserved-identifier
reserved-macro-identifier
reserved-user-defined-literal
restrict-expansion
retained-language-linkage
return-stack-address
return-std-move
return-type
return-type-c-linkage
rewrite-not-bool
round-trip-cc1-args
rtti
sanitize-address
sarif-format-unstable
search-path-usage
section
selector
selector-type-mismatch
self-assign
self-assign-field
self-assign-overloaded
self-move
semicolon-before-method-body
sentinel
sequence-point
serialized-diagnostics
shadow
shadow-allshadow-field
shadow-field-in-constructor$shadow-field-in-constructor-modified
shadow-ivar
shadow-uncaptured-local
shift-count-negative
shift-count-overflow
shift-negative-value
shift-op-parentheses
shift-overflow
shift-sign-overflow
shorten-64-to-32sign-compare
sign-conversion
sign-promo
signed-enum-bitfield
signed-unsigned-wchar'single-bit-bitfield-constant-conversion
sizeof-array-argument
sizeof-array-decay
sizeof-array-div
sizeof-pointer-div
sizeof-pointer-memaccess
slash-u-filenameslh-asm-goto
sometimes-uninitialized
source-mgr
source-uses-openmp
spir-compatspirv-compat
stack-exhausted
stack-protector
static-float-init
static-in-inline$static-inline-explicit-instantiation
static-local-in-inline
static-self-init
stdlibcxx-not-found
strict-aliasing
strict-aliasing=0
strict-aliasing=1
strict-aliasing=2
strict-overflow
strict-overflow=0
strict-overflow=1
strict-overflow=2
strict-overflow=3
strict-overflow=4
strict-overflow=5"strict-potentially-direct-selector
strict-prototypes
strict-selector-match
string-compare
string-concatenation
string-conversion
string-plus-char
string-plus-int
strlcpy-strlcat-sizestrncat-size
suggest-destructor-override
suggest-override
super-class-method-mismatch
suspicious-bzero
suspicious-memaccess
swift-name-attribute
swift-newtype-attribute
switch
switch-bool
switch-default
switch-enum%sync-fetch-and-nand-semantics-changed
synth
target-clones-mixed-specifiers
tautological-bitwise-compare
tautological-compare
tautological-constant-compare&tautological-constant-in-range-compare*tautological-constant-out-of-range-compare
tautological-objc-bool-compare
tautological-overlap-compare
tautological-pointer-compare
tautological-type-limit-compare
tautological-undefined-compare'tautological-unsigned-char-zero-compare'tautological-unsigned-enum-zero-compare"tautological-unsigned-zero-compare tautological-value-range-compare
tcb-enforcement$tentative-definition-incomplete-type
thread-safety
thread-safety-analysis
thread-safety-attributes
thread-safety-beta
thread-safety-negative
thread-safety-precise
thread-safety-reference
thread-safety-verbose
trigraphs
type-limits
type-safety
typed-memory-inference-failure
typedef-redefinition
typename-missing
typeof-bitfield
unable-to-open-stats-file
unaligned-access!unaligned-qualifier-implicit-cast
unavailable-declarations
undeclared-selector
undefundef-prefix
undefined-arm-streaming
undefined-bool-conversion
undefined-func-template
undefined-inline
undefined-internal
undefined-internal-type
undefined-reinterpret-cast
undefined-var-template
underaligned-exception-object
unevaluated-expression
unguarded-availability
unguarded-availability-new
unicode
unicode-homoglyph
unicode-whitespace
unicode-zero-width
uninitialized
uninitialized-const-reference
unknown-argument
unknown-assumption
unknown-attributes
unknown-cuda-version
unknown-directives
unknown-escape-sequence
unknown-pragmas
unknown-sanitizers
unknown-warning-option
unnamed-type-template-args
unneeded-internal-declaration
unneeded-member-function
unqualified-std-cast-call
unreachable-code
unreachable-code-aggressive
unreachable-code-break
unreachable-code-fallthrough
unreachable-code-generic-assoc
unreachable-code-loop-increment
unreachable-code-return
unsafe-buffer-usage
unsequenced
unsupported-abi
unsupported-abs
unsupported-availability-guard
unsupported-cb#unsupported-dll-base-class-template
unsupported-floating-point-opt
unsupported-friend
unsupported-gpopt
unsupported-nan
unsupported-target-opt
unsupported-visibility
unusable-partial-specialization
unused
unused-argument
unused-but-set-parameter
unused-but-set-variable
unused-command-line-argument
unused-comparison
unused-const-variable
unused-exception-parameter
unused-function
unused-getter-return-valueunused-label
unused-lambda-capture
unused-local-typedef
unused-local-typedefs
unused-macros
unused-member-function
unused-parameter
unused-private-field
unused-property-ivar
unused-result
unused-templateunused-value
unused-variable
unused-volatile-lvalue
used-but-marked-unused
user-defined-literals
user-defined-warnings
varargs
variadic-macros
vec-elem-size
vector-conversion
vector-conversionsvexing-parse
visibility
vla-extension
void-pointer-to-enum-cast
void-pointer-to-int-cast
void-ptr-dereference
volatile-register-var
wasm-exception-spec
weak-template-vtablesweak-vtables
writable-strings
write-strings
xor-used-as-pow
zero-as-null-pointer-constant
zero-length-array
API notes file not found at '%0'
NSInvocation's %0 is not safe to be used with an object with ownership other than __unsafe_unretained
invalid type %0 in asm %select{input|output}1
invalid type %0 in asm input for constraint '%1'
%0 attribute cannot be applied to types
uuid attribute contains a malformed GUID
cannot open file '%0': %1
%select{pointer|reference}0 to %select{|subobject of }1%select{type_info object|string literal|temporary object|predefined '%3' variable}2 is not allowed in a template argument
'size_t' suffix for literals is a C++2b feature
only special member functions %select{|and comparison operators }0may be defaulted
only functions can have deleted definitions
duplicate '%0' declaration specifier
enumeration cannot be a template
expected %0
expected %1 after %0
method name referenced in property setter attribute must end with ':'
expected %0 or %1
expected namespace name
expected string literal %select{in %1|for diagnostic message in static_assert|for optional message in 'availability' attribute|for %select{language name|source container name|USR}1 in 'external_source_symbol' attribute}0
file '%0' modified since it was first processed
sorry, unsupported: file '%0' is too large for Clang to process
compile with '-ffixed-point' to enable fixed point types
'%0' is invalid in friend declarations
sorry, this include generates a translation unit too large for Clang to process.
integer literal is too large to be represented in any %select{signed |}0integer type
character literal with user-defined suffix cannot be used here
invalid feature combination: %0
%select{data member |non-public member function |static member function |user-declared constructor|user-declared destructor|operator |nested class }0%1 is not permitted within an interface type
numeric literal with user-defined suffix cannot be used here
invalid storage class specifier in function declarator
string literal with user-defined suffix cannot be used here
'%0' can only be used if the target supports the mfhc1 and mthc1 instructions
module '%0' is needed but has not been provided, and implicit use of module files is disabled
build a shadowed submodule '%0'
cyclic dependency in module '%0': %1
no handler registered for module format '%0'
%select{|umbrella }0header '%1' not found
could not build module '%0'
module '%0' not found
error in loading module '%0' from prebuilt module path
cannot rebuild module '%0' as it is already finalized
import of shadowed module '%0'
module '%0' %select{is incompatible with|requires}1 feature '%2'
an inline asm block cannot have an operand which is a bit-field
[rewriter] %0
nullability specifier %0 conflicts with existing specifier %1
directive '#pragma omp %0' cannot contain more than one '%1' clause%select{| with '%3' name modifier| with 'source' dependence}2
directive '#pragma omp %0' requires the '%1' clause
options %0 and %1 are set to different values
feature %0 requires support of %1 feature
%0 does not support the '%1' %select{type qualifier|storage class specifier}2
'%0' is not supported in C++ for OpenCL
option '%0' cannot be specified on this target
option '%0' cannot be specified with '%1'
option '%0' cannot be specified without '%1'
redefinition of parameter %0
%0 only allowed in __except block or filter expression
%0 only allowed in __except filter expression
%0 only allowed in __finally block
expected '__except' or '__finally' block
%select{signed |}0'size_t' literal is out of range of possible %select{signed |}0'size_t' values
unknown target ABI '%0'
unknown target CPU '%0'
unknown FP unit '%0'
unknown target triple '%0', please use -triple or -arch
ABI '%0' is not supported on CPU '%1'
ABI '%0' is not supported for '%1'
micromips is not supported for target CPU '%0'
execute only is not supported for the %0 sub-architecture
the '%0' unit is not supported with this instruction set
-mcmse is not supported for %0
hardware TLS register is not supported for the %0 sub-architecture
the %0 sub-architecture does not support unaligned accesses
this value is too large for this fixed point type
unable to make temporary file: %0
unable to rename temporary '%0' to output file '%1': '%2'
conversion between fixed point and %0 is not yet supported
no analyzer checkers or packages are associated with '%0'
'%0' can only be used with the '%1' ABI
%0 byte order mark detected in '%1', but encoding is not supported
must use '%1' tag to refer to type %0%select{| in this scope}2
'_BitInt' suffix for literals is a C2x extension
'long long' is an extension when C99 mode is not enabled
'diagnose_if' is a clang extension
'enable_if' is a clang extension
'long long' is a C++11 extension
'size_t' suffix for literals is a C++2b extension
duplicate '%0' declaration specifier
integer literal is too large to be represented in a signed integer type, interpreting as unsigned
integer literal is too large to be represented in type 'long' and is subject to undefined behavior under C++98, interpreting as 'unsigned long'; this literal will %select{have type 'long long'|be ill-formed}0 in C++11 onwards
variadic templates are a C++11 extension
duplicate '%0' declaration specifier
too many errors emitted, stopping now
also found
%select{pointer|reference}0 to %select{|subobject of }1%select{type_info object|string literal|temporary object|predefined '%3' variable}2 is not allowed in a template argument
%1 %0 is hidden by a non-type declaration of %0 here
declared here
previous case defined here
forward declaration of %0
subexpression not valid in a constant expression
to match this %0
[rewriter] %0
one possibility
#pragma entered here
previous declaration is here
previous definition is here
previous implicit declaration is here
previous use is here
use -analyzer-disable-all-checks to disable all static analyzer checkers
definition of %0 is not complete until the closing '}'
using
valid target CPU values are: %0
could not acquire lock file for module '%0': %1
timed out waiting to acquire lock file for module '%0'
private API notes file for module '%0' should be named '%0_private.apinotes', not '%1'
private API notes file for module '%0' should be named '%0_private.apinotes', not '%1'
[rewriter] call returns pointer to GC managed memory; it will become unmanaged in ARC
%0 attribute ignored
'_BitInt' suffix for literals is incompatible with C standards before C2x
conflicting nullability specifier on parameter types, %0 conflicts with existing specifier %1
conflicting nullability specifier on return types, %0 conflicts with existing specifier %1
'consteval' specifier is incompatible with C++ standards before C++20
'size_t' suffix for literals is incompatible with C++ standards before C++2b
'long long' is incompatible with C++98
variadic templates are incompatible with C++98
duplicate definition of category %1 on interface %0
duplicate '%0' declaration specifier
'%0' is ignored since it is only supported for HIP
'-mbranch-protection=' option is incompatible with the '%0' architecture
redeclaration of method parameter %0
redefinition of method parameter %0
type specifier missing, defaults to 'int'
[rewriter] %0
duplicate nullability specifier %0
integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C89; this literal will %select{have type 'long long'|be ill-formed}0 in C99 onwards
integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C++98; this literal will %select{have type 'long long'|be ill-formed}0 in C++11 onwards
%0 is a core feature in %select{OpenCL C|C++ for OpenCL}1 version %2 but not supported on this target
include location '%0' is unsafe for cross-compilation
speculative load hardening does not protect functions with asm goto
unable to protect inline asm that clobbers stack pointer against stack clash
stack nearly exhausted; compilation time may suffer, and crashes due to stack overflow are likely
ignoring the 'branch-protection' attribute because the '%0' architecture does not support it
unknown attribute %0 ignored
The default Altivec ABI on AIX is not yet supported, use '-mabi=vec-extabi' for the extended Altivec ABI
TLS model '%0' is not yet supported on AIX
checker cannot be enabled with analyzer option '%0' == %1
invalid input for checker option '%0', that expects %1
checker '%0' has no option called '%1'
invalid input for analyzer-config option '%0', that expects %1 value
analyzer-config option '%0' should contain only one '='
analyzer-config option '%0' has a key but no value
unknown analyzer-config '%0'
analyzer constraint manager 'z3' is only available if LLVM was built with -DLLVM_ENABLE_Z3_SOLVER=ON
-fobjc-arc is not supported on platforms using the legacy runtime
-fobjc-arc is not supported on versions of OS X prior to 10.6
architecture '%0' does not support '%1' execution mode
original arguments parse failed, then succeeded in round-trip
generated arguments do not match in round-trip
generated arguments parse failed in round-trip
minimum vscale must be an unsigned integer greater than 0
cmse is not compatible with %select{RWPI|ROPI}0
CPU '%0' does not support '%1' execution mode
'%0' not supported, please use -iquote instead
cannot deduce implicit triple value for -Xopenmp-target, specify triple using -Xopenmp-target=<triple>
alignment is not a power of 2 in '%0'
invalid argument '-mno-amdgpu-ieee' only allowed with relaxed NaN handling
option '%0' requires input to be LLVM bitcode
invalid argument '%0' not allowed with '%1'
invalid argument '%0' only allowed with '%1'
invalid offload arch combinations: '%0' and '%1' (for a specific processor, a feature should either exist in all offload archs, or not exist in any offload archs)
invalid target ID '%0'; format is a processor name followed by an optional colon-delimited list of features followed by an enable/disable sign (e.g., 'gfx908:sramecc+:xnack-')
-fembed-bitcode is not supported on versions of iOS prior to 6.0
cannot specify '%1' along with '%0'
cannot read randomize layout seed file '%0'
cannot read configuration file '%0'
unable to open CC_PRINT_OPTIONS file: %0
the clang compiler does not support '%0'
the clang compiler does not support '%0' for C++ on Darwin/i386
the clang compiler does not support '%0', %1
the clang compiler does not support -pg option on %select{Darwin|versions of OS X 10.9 and later}0
%0 command failed with exit code %1 (use -v to see invocation)
unable to execute command: %0
%0 command failed due to signal (use -v to see invocation)
compilation database '%0' could not be opened: %1
configuration file '%0' does not exist
configuration file '%0' cannot be found
conflicting deployment targets, both '%0' and '%1' are present in environment
unsupported CUDA gpu architecture: %0
unsupported architecture '%0' for host compilation
CUDA offload target is supported only along with --emit-llvm
GPU arch %0 is supported by CUDA versions between %1 and %2 (inclusive), but installation at %3 is %4; use '--cuda-path' to specify a different CUDA install, pass a different GPU arch with '--cuda-gpu-arch', or pass '--no-cuda-version-check'
SDK does not contain 'libarclite' at the path '%0'; try increasing the minimum deployment target
defsym must be of the form: sym=value: %0
value is not an integer: %0
no more than one option '--config' is allowed
target profile option (-T) is missing
-emit-llvm cannot be used when linking
failed to expand response file: %0
'-fopenmp-targets' must be used in conjunction with a '-fopenmp' option compatible with offloading; e.g., '-fopenmp=libomp' or '-fopenmp=libiomp5'
header file '%0' input '%1' does not match the type of prior input in api extraction; use '-x %2' to override
failed to deduce triple for target architecture '%0'; specify the triple using '-fopenmp-targets' and '-Xopenmp-target' instead.
failing because %select{environment variable 'FORCE_CLANG_DIAGNOSTICS_CRASH' is set|'-gen-reproducer' is used}0
GNUstep Objective-C runtime version %0 incompatible with target binary format
multiple inputs are not valid for header units (first extra '%0')
'--hip-path' must be specified when offloading to SPIR-V%select{| unless %1 is given}0.
HLSL code generation is unsupported for target '%0'
OpenMP target architecture '%0' pointer size is incompatible with host '%1'
--rtlib=libgcc requires --unwindlib=libgcc
passing input files is incompatible with '-fcas-include-tree'
invalid Xarch argument: '%0', options requiring arguments are unsupported
invalid -Xopenmp-target argument: '%0', options requiring arguments are unsupported
invalid arch name '%0'
invalid argument '%0' to -%1
invalid CoreFoundation Runtime ABI '%0'; must be one of 'objc', 'standalone', 'swift', 'swift-5.0', 'swift-4.2', 'swift-4.1'
invalid Darwin version number: %0
invalid argument in '%0', only integer or 'auto' is supported
invalid argument in '%0', only integers are supported
invalid profile : %0
invalid validator version : %0
If validator major version is 0, minor version must also be 0.
invalid validator version : %0
Format of validator version is "<major>.<minor>" (ex:"1.4").
'%0' does not contain a GCC installation
invalid output type '%0' for use with gcc tool
invalid integral value '%1' in '%0'
invalid linker name in argument '%0'
invalid argument '%0' to -malign-branch=; each element must be one of: %1
invalid float ABI '%0'
invalid thread pointer reading mode '%0'
OBJECT_MODE setting %0 is not recognized and is not a valid setting
OpenMP target is invalid: '%0'
invalid or unsupported offload target: '%0'
invalid OS value '%0' in '%1'
cannot use '%0' output with multiple -arch options
invalid validator version : %0
Validator version must be less than or equal to current internal version.
invalid option '%0' not of the form <from-file>;<to-file>
invalid arch name '%0', %1
invalid runtime library name in argument '%0'
invalid library name in argument '%0'
'-msve-vector-bits' is not supported without SVE enabled
invalid thread model '%0' in '%1' for this target
invalid unwind library name in argument '%0'
invalid value '%1' in '%0'
invalid value '%1' in '%0', expected one of: %2
invalid version number in '%0'
LTO requires -fuse-ld=lld
malformed sanitizer coverage allowlist: '%0'
malformed sanitizer coverage ignorelist: '%0'
malformed sanitizer ignorelist: '%0'
option '-MG' requires '-M' or '-MM'
'-fminimize-whitespace' invalid for input of type %0
missing argument to '%0'
argument to '%0' is missing (expected %1 value%s1)
missing sanitizer ignorelist: '%0'
mixed CUDA and HIP compilation is not supported
header file '%0' input type '%1' does not match type of prior input in module compilation; use '-x %2' to override
option '-fmodules-validate-once-per-build-session' requires '-fbuild-session-timestamp=<seconds since Epoch>' or '-fbuild-session-file=<file>'
%0 requires HVX, use -mhvx/-mhvx= to enable it
%0 is not supported on HVX %1
invalid value '%1' in '%0', value must be 'none' or a positive integer
option '--config' is not allowed inside configuration file
'%0': unable to use AST files with this tool
cannot find CUDA installation; provide its path via '--cuda-path', or pass '-nocudainc' to build without CUDA includes
cannot find libdevice for %0; provide path to different CUDA installation via '--cuda-path', or pass '-nocudalib' to build without linking with libdevice
cannot find HIP runtime; provide its path via '--rocm-path', or pass '-nogpuinc' to build without HIP runtime
cannot find HIP device library%select{| for %1}0; provide its path via '--hip-path' or '--hip-device-lib-path', or pass '-nogpulib' to build without HIP device library
no input files
'%0': unable to pass LLVM bit-code files to linker
'%0': unable to use module files with this tool
[no]neon is not accepted as modifier, please use [no]simd instead
cannot find ROCm device library%select{| for %1|for ABI version %1}0; provide its path via '--rocm-path' or '--rocm-device-lib-path', or pass '-nogpulib' to build without ROCm device library
no such file or directory: '%0'
no such file or directory: '%0'; did you mean '%1'?
unsupported %0 gpu architecture: %1
provided host compiler IR file '%0' is required to generate code for OpenMP target regions but cannot be found
target '%0' is not a supported OpenMP host target
bitcode library '%0' does not exist
NVPTX target requires CUDA 9.2 or above; CUDA %0 detected
no library '%0' found in the default clang lib directory or in LIBRARY_PATH; use '--libomptarget-%1-bc-path' to specify %1 bitcode library
only one offload target is supported
unknown remark serializer format: '%0'
in pattern '%1': %0
cannot use '%0' without using '%1'
cannot specify '%0%1' when compiling multiple source files
cannot specify -o when generating multiple output files
incorrect format for -preamble-bytes=N,END
environment variable CC_PRINT_HEADERS_%select{FORMAT|FILTERING}0 has invalid value %1
unsupported combination: CC_PRINT_HEADERS_FORMAT=%0 and CC_PRINT_HEADERS_FILTERING=%1
unsupported combination: -header-include-format=%0 and -header-include-filtering=%1
target '%0' does not support native pointer authentication
%0 is unsupported with RISC-V linker relaxation (-mrelax)
ROPI is not compatible with c++
embedded and GOT-based position independence are incompatible
invalid value '%1' in '%0', value must be '%2' or greater
'%0' is used without '-mstack-protector-guard-offset', and there is no default
unsupported '%0' value '%1'; use 'ios-macabi' instead
'-ftrivial-auto-var-init-stop-after=*' only accepts positive integers
'-ftrivial-auto-var-init-stop-after=*' is used without '-ftrivial-auto-var-init=zero' or '-ftrivial-auto-var-init=pattern'
unable to remove file: %0
unable to set working directory: %0
cannot determine AMDGPU architecture: %0; consider passing it via '--march'
unknown argument: '%0'
unknown argument '%0'; did you mean '%1'?
unknown '-mindirect-jump=' option '%0'
language not recognized: '%0'
unknown or ill-formed Objective-C runtime '%0'
-E or -x required when input is from standard input
use /Tc or /Tp to set input type for standard input
%0 is not supported with -fembed-bitcode
the second argument of '-fpatchable-function-entry' must be smaller than the first argument
'-mindirect-jump=%0' is unsupported with the '%1' architecture
position-independent code requires '-mabicalls'
unsupported option '%0'
unsupported option '%0' for language mode '%1'
unsupported option '%0' for target '%1'
unsupported option '%0'; did you mean '%1'?
unsupported argument '%1' to option '-%0'
unsupported runtime library '%0' for platform '%1'
static UndefinedBehaviorSanitizer runtime is not supported on darwin
invalid C++ ABI name '%0'
32-bit targets are not supported when building for Mac Catalyst
%select{C++20|Modules TS}0 modules require the -fmodules-local-submodule-visibility -cc1 option
there is no external assembler that can be used on this platform
-fobjc-weak is not supported on the current deployment target
-fobjc-weak is not supported in Objective-C garbage collection
-mharden-sls is only supported on armv7-a or later
'-fsanitize=memtag-stack' requires hardware support (+memtag). For Armv8 or Armv9, try compiling with -march=armv8a+memtag or -march=armv9a+memtag
the target architecture '%0' is not supported by the target '%1'
-ftest-module-file-extension argument '%0' is not of the required form 'blockname:major:minor:hashed:user info'
C++ ABI '%0' is not supported on target triple '%1'
generated arguments #%0 in round-trip: %1
original arguments in round-trip: %0
AddressSanitizer doesn't support linking with debug runtime libraries yet
diagnostic msg: %0
was searched for in the directory: %0
the last '/TC' or '/TP' option takes precedence over earlier instances
use '%0'%select{| or '%3'|, '%3', or '%4'|, '%3', '%4', or '%5'}2 for '%1' standard
-verify prefixes must start with a letter and contain only alphanumeric characters, hyphens, and underscores
use '--' to treat subsequent arguments as filenames
generated arguments #%0 in round-trip: %1
-O4 is equivalent to -O3
analyzer option '%0' is deprecated. This flag will be removed in %1, and passing this option will be an error.
ignoring -fapple-kext which is valid for C++ and Objective-C++ only
cannot compress debug sections (%0 not enabled)
unknown platform, assuming -mfloat-abi=%0
support for linking stdlibs for microcontroller '%0' is not implemented
no avr-libc installation can be found on the system, cannot link standard libraries
support for passing the data section address to the linker for microcontroller '%0' is not implemented
no target microcontroller specified on command line, cannot link standard libraries, please pass -mmcu=<mcu name>
standard library not linked and so no interrupt vector table or compiler runtime routines will be linked
the clang compiler does not support '%0'
compiler_rt-static.a is being deprecated, please use -fapple-link-rtlib instead. Clang will substitute -lcompiler_rt-static with libclang_rt.a
SDK settings were ignored as 'SDKSettings.json' could not be parsed
argument '%0' is deprecated, use '%1' instead
libstdc++ is deprecated; move to libc++%select{ with a minimum deployment target of %1|}0
argument '%0' requires profile-guided optimization information
argument '%0' requires profile-guided optimization information
implicitly disabling vptr sanitizer because rtti wasn't enabled
debug information option '%0' is not supported; requires DWARF-%2 but target '%1' only provides DWARF-%3
joined argument expects additional value: '%0'
option '-ffine-grained-bitfield-accesses' cannot be enabled together with a sanitizer; flag ignored
-fjmc works only for ELF; option ignored
'-fuse-ld=' taking a path is deprecated; use '--ld-path=' instead
-fglobal-isel support for the '%0' architecture is incomplete
-fglobal-isel support is incomplete for this architecture at the current optimization level
%0: '%1' input unused%select{ when '%3' is present|}2
%0: '%1' input unused in cpp mode
ignoring invalid /arch: argument '%0'; for %select{64|32}1-bit expected one of %2
%0 requires debug info. Use %1 or debug options that enable debugger's stepping function; option ignored
include path for libstdc++ headers not found; pass '-stdlib=libc++' on the command line to use the libc++ standard library instead
missing plugin argument for plugin %0 in %1
missing plugin name in %0
'%0' does not support '-%1'; flag ignored
'%0' does not support '-moutline'; flag ignored
the given MCU supports %0 hardware multiply, but '-mhwmult' is set to %1
no MCU device specified, but '-mhwmult' is set to 'auto', assuming no hardware multiply; use '-mmcu' to specify an MSP430 device, or '-mhwmult' to set the hardware multiply type explicitly
the given MCU does not support hardware multiply, but '-mhwmult' is set to %0
unable to find a Visual Studio installation; try running Clang from a developer command prompt
%0 requires HVX, use -mhvx/-mhvx= to enable it
CUDA version%0 is newer than the latest%select{| partially}1 supported version %2
the object size sanitizer has no effect at -O0, but is explicitly enabled: %0
OpenMP offloading target '%0' is similar to target '%1' already specified; will be ignored
optimization level '%0' is not supported; using '%1%2' instead
overriding '%0' option with '%1'
CUDA version %0 is only partially supported
precompiled header '%0' was ignored because '%1' is not first '-include'
joined argument treated as '%0'; did you mean '%1'?
%0: previously preprocessed input%select{ unused when '%2' is present|}1
option '%0' was ignored by the %1 toolchain, using '-fPIC'
environment variable '%0' is set, but points to invalid or nonexistent directory '%1'
diagnostic formatting in SARIF mode is currently unstable
treating '%0' input as '%1' when in C++ mode, this behavior is deprecated
unable to find %0 directory, expected to be in '%1'
unknown argument ignored in clang-cl: '%0'
unknown argument ignored in clang-cl '%0'; did you mean '%1'?
debug information option '%0' is not supported for target '%1'
float ABI '%0' is not supported by current library
ignoring '-mgpopt' option as it cannot be used with %select{|the implicit usage of }0-mabicalls
ignoring '-mlong-calls' option as it is not currently supported with %select{|the implicit usage of }0-mabicalls
optimization flag '%0' is not supported for target '%1'
ignoring '%0' option for offload arch '%1' as it is not currently supported there. Use it with an offload arch containing '%2' instead
ignoring '%0' option as it is not currently supported for target '%1'
ignoring '%0' option as it cannot be used with %select{implicit usage of|}1 -mabicalls and the N64 ABI
ignoring '-msmall-data-limit=' with -mcmodel=large for -fpic or RV64
argument unused during compilation: '%0'
'-x %0' after last input file has no effect
support for '/Yc' with more than one source file not implemented yet; flag ignored
support for '/Yc' and '/Yu' with different filenames not implemented yet; flags ignored
the flag '%0' has been deprecated and will be ignored
optimization flag '%0' is not supported
ignoring -fdiscard-value-names for LLVM Bitcode
ignoring invalid -ftabstop value '%0', using default value %1
ignoring -fverify-debuginfo-preserve-export=%0 because -fverify-debuginfo-preserve wasn't enabled
using sysroot for '%0' but targeting '%1'
invalid iOS deployment version '%0', iOS 10 is the maximum deployment target for 32-bit targets
no such sysroot directory: '%0'
'/U%0' treated as the '/U' option
/arm64EC has been overridden by specified target: %0; option ignored
ignoring '-mabs=2008' option because the '%0' architecture does not support it
ignoring '-mabs=legacy' option because the '%0' architecture does not support it
ignoring '-mcompact-branches=' option because the '%0' architecture does not support it
ignoring extension '%0' because the '%1' architecture does not support it
ignoring '-mnan=2008' option because the '%0' architecture does not support it
ignoring '-mnan=legacy' option because the '%0' architecture does not support it
invalid branch protection option '%0' in '%1'
%select{alias|ifunc}0 must point to a defined %select{variable or |}1function
AVX vector %select{return|argument}0 of type %1 without '%2' enabled changes the ABI
%0 needs target feature %1
%select{alias|ifunc}0 definition is part of a cycle
definition with same mangled name '%0' as another definition
file '%0' specified by '--extract-api-ignores=' not found
action %0 not compiled in
call to %0 declared with 'error' attribute: %1
-dependency-file requires at least one -MT or -MQ option
error in backend: %0
error opening '%0': %1
error reading '%0'
error reading stdin: %0
error writing '%0': %1
expected a clang compiler command
unable to handle compilation, expected exactly one compiler job in '%0'
'%0' is incompatible with remote caching backend
invalid value '%1' in '%0'; alignment must be a power of 2
cannot locate code-completion file %0
invalid exception model '%select{none|sjlj|seh|dwarf|wasm}0' for target '%1'
unable to find plugin '%0'
environment variable 'SOURCE_DATE_EPOCH' ('%0') must be a non-negative decimal integer <= %1
cannot link module '%0': %1
no suitable precompiled header file found in directory '%0'
could not remap from missing file '%0'
could not remap file '%0' to the contents of file '%1'
unable to create target: '%0'
unable to interface with target machine
unable to load basic block sections function list: '%0'
unable to load the CAS include-tree '%0': '%1'
unable to load PCH file
unable to load plugin '%0': '%1'
unable to open output file '%0': '%1'
initializing value is out of valid range
always_inline function %1 requires target feature '%2', but would be inlined into function %0 that is compiled without support for '%2'
header module compilation requires '-fmodules', '-std=c++20', or '-fmodules-ts'
hidden visibility cannot be applied to 'dllexport' declaration
ifunc resolver function must return a pointer
option 'ffp-eval-method' cannot be used with option %select{'fapprox-func'|'mreassociate'|'freciprocal'}0
inline asm is used in the module with -fno-gnu-inline-asm
invalid virtual filesystem overlay file '%0'
invalid stat cache file '%0'
no module named '%0' declared in module map file '%1'
no module named '%0' declared in include-tree module map '%1'
no module name provided; specify one with -fmodule-name=
virtual filesystem overlay file '%0' not found
stat cache file '%0' not found
module compilation requires '-fmodules'
cannot create includes file for module %0: %1
module header file '%0' not found
module interface compilation requires '-std=c++20' or '-fmodules-ts'
module map file '%0' not found
file '%0' specified by '-fmodules-embed-file=' not found
-fapinotes was provided without -fmodules-cache-path=<directory>
no submodule named %0 in module '%1'
no submodule named %0 in module '%1'; did you mean '%2'?
non-default visibility cannot be applied to 'dllimport' declaration
must specify system root with -isysroot when building a relocatable PCH file
test module file extension '%0' has different version (%1.%2) than expected (%3.%4)
unable to load a node from the CAS include-tree: '%0'
reference to marker '%0' is ambiguous
'%0' diagnostics %select{expected|seen}1 but not %select{seen|expected}1: %2
invalid expected %0: %1
%select{expected|'expected-no-diagnostics'}0 directive cannot follow %select{'expected-no-diagnostics' directive|other expected directives}0
invalid range following '-' in expected %0
cannot find end ('}}') of expected %0
file '%0' could not be located in expected %1
missing or invalid line number following '@' in expected %0
cannot find start of regex ('{{') in %0
cannot find start ('{{') of expected %0
no expected directives found: consider use of 'expected-no-diagnostics'
use of undefined marker '%0'
qualifier 'const' is needed for variables in address space '%0'
firebloom is supported only for C language
could not determine the original source location for %0:%1:%2
instantiated into assembly here
linking module '%0': %1
FIX-IT applied suggested code changes
FIX-IT unable to apply suggested code changes
FIX-IT unable to apply suggested code changes in a macro
FIX-IT detected an error it cannot fix
current API version is '%0', but plugin was compiled with version '%1'
macro was %select{defined|#undef'd}0 here
module imported here
module defined here
ambiguous marker '%0' is defined here
%0; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop. If the arrays will always be independent specify '#pragma clang loop vectorize(assume_safety)' before the loop or provide the '__restrict__' qualifier with the independent array arguments. Erroneous results will occur if these options are incorrectly applied!
%0; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'.
producing index data for module file '%0'
building module '%0' as '%1'
finished building module '%0'
locking '%0' to build module '%1'
%select{alias|ifunc}2 will always resolve to %0 even if weak definition of %1 is overridden
%select{alias|ifunc}1 will not be in section '%0' but in the same section as the %select{aliasee|resolver}2
misaligned atomic operation may incur significant performance penalty; the expected alignment (%0 bytes) exceeds the actual alignment (%1 bytes)
large atomic operation may incur significant performance penalty; the access size (%0 bytes) exceeds the max lock-free size (%1  bytes)
AVX vector %select{return|argument}0 of type %1 without '%2' enabled changes the ABI
-fbounds-attributes-cxx-experimental without -fbounds-attributes is ignored
-fbounds-attributes-objc-experimental without -fbounds-attributes is ignored
feature flag '%0' must start with either '+' to enable the feature or '-' to disable it; flag ignored
overriding currently unsupported use of floating point exceptions on this target
overriding currently unsupported rounding mode on this target
call to %0 declared with 'warning' attribute: %1
unable to open CC_LOG_DIAGNOSTICS file: %0 (using stderr)
unable to open CC_PRINT_HEADERS file: %0 (using stderr)
-fconcepts-ts is deprecated - use '-std=c++20' for Concepts support
stack frame size (%0) exceeds limit (%1) in '%2'
linking module '%0': %1
macro '%0' contains embedded newline; text after the newline is ignored
overriding the module target triple with %0
unable to open file %0 for serializing diagnostics (%1)
Received warning after diagnostic serialization teardown was underway: %0
unable to merge a subprocess's serialized diagnostics
unable to open statistics output file '%0': '%1'
FIX-IT detected errors it could not fix; no output will be generated
checker plugin '%0' is not compatible with this version of the analyzer
missing submodule '%0'
%select{definition|#undef}0 of configuration macro '%1' has no effect on the import of '%2'; pass '%select{-D%1=...|-U%1}0' on the command line to configure the module
module file %0 cannot be loaded due to a configuration mismatch with the current compilation
no submodule named %0 in module '%1'; using top level '%2'
%0 does not support the option '%1'
Potential performance regression from use of __builtin_expect(): Annotation was correct on %0 of profiled executions.
profile data may be incomplete: of %0 function%s0, %1 %plural{1:has|:have}1 no data
profile data may be out of date: of %0 function%s0, %1 %plural{1:has|:have}1 mismatched data that will be ignored
no profile data available for file "%0"
unknown %select{warning|remark}0 option '%1'%select{|; did you mean '%3'?}2
unknown %0 warning specifier: '%1'
file '%1' is not a valid precompiled %select{PCH|module|AST}0 file
%select{PCH|module|AST}0 file '%1' not found%select{|: %3}2
%select{PCH|module|AST}0 file '%1' is out of date and needs to be rebuilt%select{|: %3}2
file '%0' has been modified since the %select{precompiled header|module file|AST file}1 '%2' was built: %select{size|mtime|content}3 changed%select{| (was %5, now %6)}4
input is not a PCH file: '%0'
file '%0' from the precompiled header has been overridden
malformed or corrupted AST file: '%0'
malformed block record in PCH file: '%0'
unable to read PCH file %0: '%1'
module '%0' %select{in|imported by}4 AST file '%1' found in a different module map file (%2) than when the importing AST file was built (%3)
module '%0' in AST file '%1' %select{(imported by AST file '%2') |}4is not defined in any loaded module map file; maybe you need to load '%3'?
module '%0' was built in directory '%1' but now resides in directory '%2'
module '%0' %select{uses|does not use}1 additional module map '%2'%select{| not}1 used when the module was built
module '%0' is defined in both '%1' and '%2'
module file '%0' is missing its top-level submodule
AST file '%0' was not built as a module
cannot emit module %0: %select{size|mtime}1 must be explicitly specified for missing header file "%2"
instantiation of %q0 is different in different modules
%q0 from module '%1' is not present in definition of %q2%select{ in module '%4'| provided earlier}3
failed to hash content for '%0' because memory buffer cannot be retrieved
%0 is currently enabled, but was not in the PCH file
PCH file built from a different branch (%0) than the compiler (%1)
%0 was %select{disabled|enabled}1 in PCH file but is currently %select{disabled|enabled}2
%0 differs in PCH file vs. current file
definition of macro '%0' differs between the precompiled header ('%1') and the command line ('%2')
macro '%0' was %select{defined|undef'd}1 in the precompiled header but %select{undef'd|defined}1 on the command line
PCH was compiled with module cache path '%0', but the path is currently '%1'
%select{command line contains|precompiled header was built with}0 '-detailed-preprocessing-record' but %select{precompiled header was not built with it|it is not present on the command line}0
%select{AST file was|current translation unit is}0 compiled with the target feature '%1' but the %select{current translation unit is|AST file was}0 not
PCH file was compiled for the %0 '%1' but the current translation unit is being compiled for target '%2'
%select{command line contains|precompiled header was built with}0 '-undef' but %select{precompiled header was not built with it|it is not present on the command line}0
PCH file uses a newer PCH format that cannot be read
PCH file uses an older PCH format that is no longer supported
PCH file contains compiler errors
consider adding '%0' to the header search path
after modifying system headers, please delete the module cache at '%0'
this is generally caused by modules with the same name found in multiple paths
imported by %select{|module '%2' in }1'%0'
definition has no member %0
declaration of %0 does not match
please rebuild precompiled header '%0'
'%0' required by '%1'
importing module '%0'%select{| into '%3'}2 from '%1'
duplicate module file extension block name '%0'
module file '%0' was validated as a system module and is now being imported as a non-system module; any difference in diagnostic options will be ignored
%select{precompiled header|module}0 uses __DATE__ or __TIME__
backslash and newline separated by space
_Pragma takes a parenthesized string literal
illegal character encoding in character literal
illegal character encoding in string literal
unexpected character <U+%0>
character <U+%0> not allowed %select{in|at the start of}1 an identifier
character too large for enclosing character literal type
version control conflict marker in file
'defined' cannot be used as a macro name
delimited escape sequence cannot be empty
invalid digit '%0' in escape sequence
expected '{' after '\%0' escape sequence
could not find ';' after @import
unexpected extra tokens at end of @import declaration
digit separator cannot appear at %select{start|end}0 of digit sequence
embedding a #%0 directive within macro arguments is not supported
%select{hex|octal}0 escape sequence out of range
expected a module name in '__building_module' expression
exponent has no digits
builtin feature check macro requires a parenthesized identifier
header file %0 (aka '%1') cannot be imported because it is not known to be a header unit
semicolon terminating header import declaration cannot be produced by a macro
hexadecimal floating %select{constant|literal}0 requires %select{an exponent|a significand}1
\%0 used with no following hex digits
'__FLT_EVAL_METHOD__' cannot be expanded inside a scope containing '#pragma clang fp eval_method'
invalid character '%0' character in raw string delimiter; use PREFIX( )PREFIX to delimit raw string
invalid argument to convert to character
invalid digit '%0' in %select{decimal|octal|binary}1 constant
invalid suffix '%0' on %select{integer|floating|fixed-point}1 constant
'%0' is not a valid Unicode character name
source file is not valid UTF-8
failure when lexing a character literal
failure when lexing a numeric literal
failure when lexing a string literal
configuration macros are only allowed in top-level modules
conflicting re-export of module '%0' as '%1' or '%2'
header attribute '%0' specified multiple times
expected an attribute name
expected configuration macro name after ','
expected ',' after conflicting module name
expected a message describing the conflict with '%0'
only '*' can be exported from an inferred submodule
expected a feature name
expected a header name after '%0'
expected a header attribute name ('size' or 'mtime')
expected %select{module exclusion with 'exclude'|'export *'}0
expected '{' to start module '%0'
expected '{' to start inferred submodule
expected %select{library|framework}0 name as a string
expected umbrella, header, submodule, or module export
expected a module map file name
expected module declaration
expected module name
expected '}'
expected ']' to close attribute
inferred framework modules cannot be 'explicit'
'explicit' is not permitted on top-level modules
inferred submodule cannot be a framework submodule
inferred submodules require a module with an umbrella
redefinition of inferred submodule
expected integer literal as value for header attribute '%0'
expected excluded module name
no module named '%0' in '%1'
no module named '%0' visible from '%1'
no module named '%0' %select{found|in '%2'}1, parent module must be defined before the submodule
expected a module name or '*'
redefinition of module '%0'
qualified module name can only be used to define modules at the top level
only top-level modules can be re-exported as public
only submodules and framework modules may be inferred with wildcard syntax
umbrella for module '%0' already covers this directory
skipping stray token
use declarations are only allowed in top-level modules
%select{wide|Unicode}0 character literals may not contain multiple characters
Pascal string is too long
'##' cannot appear at end of macro expansion
'##' cannot appear at start of macro expansion
editor placeholder in source file
expected 'set(attr1 [attr2 ...])'
expected 'begin' or 'end'
expected 'begin' or 'end'
pasting formed '%0', an invalid preprocessing token
':' without preceding '?'
%0 must be used within a preprocessing directive
division by zero in preprocessor expression
already inside '#pragma clang arc_cf_code_audited'
already inside '#pragma clang assume_nonnull'
already inside '#pragma unsafe_buffer_usage'
duplicate macro parameter name %0
empty filename
encountered non-reproducible token, caching failed
#endif without #if
'#pragma clang arc_cf_code_audited' was not ended within this file
'#pragma clang assume_nonnull' was not ended within this file
error opening file '%0': %1
missing %1 after %0
expected comma in macro parameter list
expected end of line in preprocessor expression
expected identifier in macro parameter list
expected %select{identifier after '.' in |}0module name
expected ')' in preprocessor expression
expected value in expression
expected "FILENAME" or <FILENAME>
token is not a valid binary operator in a preprocessor subexpression
function-like macro %0 is not defined
invalid token at start of a preprocessor expression
'%0' file not found
'%0' file not found with <angled> %select{include|import}1; use "quotes" instead
'%0' file not found, did you mean '%1'?
cannot convert %0 token to an identifier
floating point literal in preprocessor expression
#import of type library is an unsupported Microsoft feature
cannot %select{#include files|import headers}0 inside '#pragma clang arc_cf_code_audited'
cannot %select{#include files|import headers}0 inside '#pragma clang assume_nonnull'
#include nested too deeply
main file cannot be included recursively when building a preamble
invalid preprocessing directive%select{|, did you mean '#%1'?}0
can only poison identifier tokens
invalid token in macro parameter list
%select{character|integer}0 literal with user-defined suffix cannot be used in preprocessor constant expression
%select{#line|GNU line marker}0 directive requires a simple digit sequence
invalid filename for #line directive
#line directive requires a positive integer argument
invalid filename for line marker directive
invalid flag line marker directive
invalid line marker flag '2': cannot pop empty include stack
line marker directive requires a positive integer argument
macro name must be an identifier
invalid #ident directive
missing '(' following __VA_OPT__
macro name missing
no module named '%0' declared in include-tree module map
missing ')' in macro parameter list
no module map available for module %0
submodule %0.%1 not declared in module map
no matching '#pragma clang module end' for this '#pragma clang module begin'
must specify '-fmodule-name=%0' to enter %select{|submodule of }1this module%select{ (current module is %3)|}2
no matching '#pragma clang module endbuild' for this '#pragma clang module build'
no matching '#pragma clang module begin' for this '#pragma clang module end'
nested parentheses not permitted in %0
C++ operator %0 (aka %1) used as a macro name
#pragma hdrstop not seen while attempting to use precompiled header
Expected 'begin' or 'end'
remainder by zero in preprocessor expression
'%select{#|#@}0' is not followed by a macro parameter
'%0' required for precompiled header not found
#include of '%0' not seen while attempting to %select{create|use}1 precompiled header
'#pragma unsafe_buffer_usage' was not ended
not currently inside '#pragma unsafe_buffer_usage'
not currently inside '#pragma clang arc_cf_code_audited'
not currently inside '#pragma clang assume_nonnull'
unterminated conditional directive
attempt to use a poisoned identifier
__VA_OPT__ cannot be nested within its own replacement tokens
no macro named %0
pragma %select{message|warning|error}0 requires parenthesized string
pragma %0 requires a parenthesized string
raw string delimiter longer than 16 characters; use PREFIX( )PREFIX to delimit raw string
differing user-defined suffixes ('%0' and '%1') in string literal concatenation
too few arguments provided to function-like macro invocation
too many arguments provided to function-like macro invocation
universal character name refers to a control character
character '%0' cannot be specified by a universal character name
incomplete universal character name
invalid universal character
module %0 does not depend on a module exporting '%1'
unsupported non-standard concatenation of string literals
unterminated function-like macro invocation
missing terminating ')' character
unterminated /* comment
raw string missing terminating delimiter )%0"
'##' cannot appear at end of __VA_OPT__ argument
'##' cannot appear at start of __VA_OPT__ argument
escaped newline between */ characters at block comment end
binary integer literals are a GNU extension
binary integer literals are a C++14 extension
use of a '#%select{<BUG IF SEEN>|elifdef|elifndef}0' directive is a C2x extension
ISO C99 requires whitespace after the macro name
charizing operator #@ is a Microsoft extension
pasting two '/' tokens into a '//' comment is a Microsoft extension
treating Ctrl-Z as end-of-file is a Microsoft extension
use of a '#%select{<BUG IF SEEN>|elifdef|elifndef}0' directive is a C++2b extension
%select{delimited|named}0 escape sequences are a %select{Clang|C++2b}1 extension
'$' in identifier
embedding a directive within macro arguments has undefined behavior
empty character constant
empty macro arguments are a C99 feature
hexadecimal floating constants are a C99 feature
hexadecimal floating literals are a C++17 feature
// comments are not allowed in this language
must specify at least one argument for '...' parameter of variadic macro
whitespace required after macro name
invalid suffix on literal; C++11 requires a space between literal and identifier
multi-line // comment
named variadic macros are a GNU extension
no newline at end of file
use of non-standard escape character '\%0'
expected 'ON' or 'OFF' or 'DEFAULT' in pragma
token pasting of ',' and __VA_ARGS__ is a GNU extension
pasting formed '%0', an invalid preprocessing token
__VA_ARGS__ can only appear in the expansion of a C99 variadic macro
__VA_OPT__ can only appear in the expansion of a variadic macro
comma operator in operand of #if
extra tokens at end of #%0 directive
this style of line directive is a GNU extension
#ident is a language extension
#import is a language extension
#include_next is a language extension
#include resolved using non-portable Microsoft search rules as: %0
C requires #line number to be less than %0, allowed as extension
#line directive with zero argument is a GNU extension
%0 macro redefined
variadic macros are a Clang extension in OpenCL
C++ operator %0 (aka %1) used as a macro name
redefining builtin macro
undefining builtin macro
#warning is a %select{C2x|C++2b}0 extension
expected end of directive in pragma
invalid suffix on literal; C++11 requires a space between literal and identifier
string literal of length %0 exceeds maximum length %1 that %select{C90|ISO C99|C++}2 compilers are required to support
extension used
treating Unicode character as whitespace
unknown escape sequence '\%0'
missing terminating %select{'|'"'}0 character
variadic macros are a C99 feature
%0 is defined here; did you mean %1?
submodule of top-level module '%0' implicitly imported here
cannot use initializer list at the beginning of a macro argument
did you mean %0 ('%2' U+%1)?
characters names in Unicode escape sequences are sensitive to case and whitespaces
expansion of macro %0 requested here
macro %0 defined here
use 'framework module' to declare module '%0'
to match this '{'
to match this ']'
previously defined here
rename '%0' to ensure it can be found by name
expanding this definition of %0
other definition of %0
did not find header '%0' in framework '%1' (loaded from '%2')
macro marked '%select{deprecated|restrict_expansion|final}0' here
entering module '%0' due to this pragma
parentheses are required around macro argument containing braced initializer list
did you mean to use '\u'?
null character(s) preserved in %select{char|string}0 literal
null character ignored
disabled expansion of recursive macro
%select{#elif|#elifdef|#elifndef}0 after #else
%select{#elif|#elifdef|#elifndef}0 without #if
#else after #else
#else without #if
the #__include_macros directive is only for internal use by -imacros
#include_next in file found relative to primary source file or found by absolute path; will search from start of include path
#include_next in primary source file; will search from start of include path
invalid string literal, ignoring final '\'
macro is not used
non-portable path to file '%0'; specified path differs in case from file name on disk
non-portable path to file '%0'; specified path differs in case from file name on disk
current file is older than dependency %0
poisoning existing macro
#pragma once in main file
#pragma system_header ignored in main file
treating #%select{include|import|include_next|__include_macros}0 as an import of module '%1'
search path used: '%0'
trigraph converted to '%0' character
trigraph ends block comment
trigraph ignored
ignored trigraph would end block comment
illegal character encoding in character literal
illegal character encoding in string literal
digit separators are incompatible with C standards before C2x
use of a '#%select{<BUG IF SEEN>|elifdef|elifndef}0' directive is incompatible with C standards before C2x
#warning is incompatible with C standards before C2x
'%0' is a keyword in C2x
%select{using this character in an identifier|starting an identifier with this character}0 is incompatible with C99
unicode literals are incompatible with C99
'%0' is a keyword in C99
character constant too long for its type
binary integer literals are incompatible with C++ standards before C++14
digit separators are incompatible with C++ standards before C++14
identifier after literal will be treated as a reserved user-defined literal suffix in C++11
identifier after literal will be treated as a user-defined literal suffix in C++11
'%0' is a keyword in C++11
unicode literals are incompatible with C++ standards before C++17
passing no argument for the '...' parameter of a variadic macro is incompatible with C++ standards before C++20
'<=>' operator is incompatible with C++ standards before C++20
hexadecimal floating literals are incompatible with C++ standards before C++17
'<=>' is a single token in C++20; add a space to avoid a change in behavior
'%0' is a keyword in C++20
use of a '#%select{<BUG IF SEEN>|elifdef|elifndef}0' directive is incompatible with C++ standards before C++2b
#warning is incompatible with C++ standards before C++2b
%select{delimited|named}0 escape sequences are incompatible with C++ standards before C++2b
empty macro arguments are incompatible with C++98
'<::' is treated as digraph '<:' (aka '[') followed by ':' in C++98
universal character name referring to a control character is incompatible with C++98
specifying character '%0' with a universal character name is incompatible with C++98
C++98 requires newline at end of file
#line number greater than 32767 is incompatible with C++98
raw string literals are incompatible with C++98
unicode literals are incompatible with C++98
variadic macros are incompatible with C++98
macro expansion producing 'defined' has undefined behavior
macro expansion producing 'defined' has undefined behavior
empty delimited universal character name; treating as '\' '%0' '{' '}'
incomplete delimited universal character name; treating as '\' '%0' '{' identifier
multi-character character constant
public framework header includes private framework header '%0'
__has_warning expected option name (e.g. "-Wundef")
%0 is used as a header guard here, followed by #define of a different macro
invalid UTF-8 in comment
whitespace recommended after macro name
skipping '%0' because module declaration of '%1' lacks the 'framework' qualifier
expected canonical name for private module '%0'
private submodule '%0' in private module map, expected top-level module
module '%0' already re-exported as '%1'
umbrella directory '%0' not found
unknown attribute '%0'
module '%0' conflicts with already-imported module '%1': %2
multi-character character constant
'/*' within block comment
no newline at end of file
include of non-modular header inside framework module '%0': '%1'
include of non-modular header inside module '%0': '%1'
ambiguous expansion of macro %0
%select{left|right}0 side of operator converted from negative value to unsigned: %1
expansion of date or time macro is not reproducible
encountered non-reproducible token, caching will be skipped
integer overflow in preprocessor expression
#pragma hdrstop filename not supported, /Fp can be used to specify precompiled header filename
invalid preprocessing directive%select{|, did you mean '#%1'?}0
%select{#line|GNU line marker}0 directive interprets number as decimal, not octal
definition of macro %0 does not match definition in precompiled header
keyword is hidden by macro definition
macro name is a reserved identifier
ignoring redefinition of Objective-C qualifier macro
%0 is not defined, evaluates to 0
%0 is not defined, evaluates to 0
missing argument to debug command '%0'
unexpected debug command '%0'
unknown module '%0'
macro %0 has been marked as deprecated%select{|: %2}1
pragma diagnostic pop could not pop, no matching push
pragma diagnostic expected 'error', 'warning', 'ignored', 'fatal', 'push', or 'pop'
pragma diagnostic expected option name (e.g. "-Wundef")
unexpected token in pragma diagnostic
unknown warning group '%0', ignored
#pragma execution_character_set expected '%0'
#pragma execution_character_set invalid value '%0', only 'UTF-8' is supported
#pragma execution_character_set expected 'push' or 'pop'
macro %0 has been marked as final and should not be %select{undefined|redefined}1
unknown pragma ignored
pragma include_alias expected '%0'
pragma include_alias expected include filename
angle-bracketed include <%0> cannot be aliased to double-quoted include "%1"
double-quoted include "%0" cannot be aliased to angle-bracketed include <%1>
pragma pop_macro could not pop '%0', no matching push_macro
macro %0 has been marked as unsafe for use in headers%select{|: %2}1
#pragma warning expected '%0'
#pragma warning expected a warning number
#pragma warning(push, level) requires a level between 0 and 4
#pragma warning expected 'push', 'pop', 'default', 'disable', 'error', 'once', 'suppress', 1, 2, 3, or 4
double-quoted include "%0" in framework header, expected angle-bracketed instead
incomplete universal character name; treating as '\' followed by identifier
\%0 used with no following hex digits; treating as '\' followed by identifier
universal character name refers to a surrogate character
universal character names are only valid in C99 or C++; treating as '\' followed by identifier
universal character names are only valid in C99 or C++
umbrella header for module '%0' does not include header '%1'
use of private header from outside its module: '%0'
treating Unicode character <U+%0> as identifier character rather than as '%1' symbol
identifier contains Unicode character <U+%0> that is invisible in some environments
interface types cannot specify '%select{private|protected}0' access
use of address-of-label extension outside of a function body
name defined in alias declaration must be an identifier
alias declaration cannot be a pack expansion
%select{partial specialization|explicit specialization|explicit instantiation}0 of alias templates is not permitted
anonymous bit-field cannot have a default member initializer
declaration of anonymous %0 must be a definition
ISO C++ only allows ':' in member enumeration declaration to introduce a fixed underlying type, not an anonymous bit-field
unknown cast annotation __bridge_retain; did you mean __bridge_retained?
argument required after attribute
duplicate asm qualifier '%0'
__asm used with no assembly instructions
cannot use %select{unicode|wide|an empty}0 string literal in 'asm'
expected 'volatile', 'inline', 'goto', or '('
@defs is not supported in Objective-C++
unexpected '@' in member specification
use of '@import' when modules are disabled
use of '@import' when C++ modules are disabled, consider using -fmodules and -fcxx-modules
attribute %0 does not support argument pack expansion
%0 attribute cannot be applied to a module import
%0 attribute cannot be applied to a module
parentheses must be omitted if %0 attribute's argument list is empty
misplaced attributes; expected attributes here
an attribute list cannot appear here
expected a platform name here
unrecognized platform name %0
expected 'introduced', 'deprecated', or 'obsoleted'
expected a platform name, e.g., 'macos'
version for '%0' already specified
'*' query has already been specified
must handle potential future platforms with '*'
redundant %0 availability change; only the last specified change will be used
%0 is not an availability stage; use 'introduced', 'deprecated', or 'obsoleted'
redeclaration of C++ built-in type 'bool'
bracket nesting level exceeded maximum of %0
brackets are not allowed here; to declare an array, place the brackets after the %select{identifier|name}0
'_Noreturn' keyword must precede function declarator
capture default must be first
template template parameter requires 'class'%select{| or 'typename'}0 after the parameter list
name defined in concept definition must be an identifier
missing return type for function %0; did you mean the constructor name %1?
missing ',' between base or member initializers
attribute %0 cannot have an argument list
attribute %0 cannot be used as an attribute pack
declaration does not declare a parameter
'%0' qualifier may not appear after the virtual specifier '%1'
unexpected end of default argument expression
'= %select{default|delete}0' is a function definition and must occur in a standalone declaration
default template argument for a template template parameter must be a class template
destructor name %0 does not refer to a template
expected a class name after '~' to name a destructor
'~' in destructor name should be after nested name specifier
duplicate 'virtual' in base specifier
class already marked '%0'
duplicate default generic association
class member already marked '%0'
cannot have both throw() and noexcept() clause on the same function
use of empty enum
a requires expression must contain at least one requirement
missing ',' between enumerators
unnamed enumeration must be a definition
unexpected end of exception specification
'#pragma omp end assumes' with no matching '#pragma omp begin assumes'
'#pragma omp end declare variant' with no matching '#pragma omp begin declare variant'
expected variable name or 'this' in lambda capture list
expected 'case' keyword before expression
expected catch
expected class name
'typename' is redundant; base classes are implicitly types
expected '::' after '__super'
expected ',' or '>' in template-parameter-list
expected ',' or ']' in lambda capture list
expected '#pragma omp end declare %select{target|variant}0'
expected '= constant-expression' or end of enumerator definition
expected '=' or another designator
expected expression
expected external declaration
expected a field designator, such as '.field = 4'
expected function body after function declarator
expected a foldable binary operator in fold expression
variable declaration in condition must have an initializer
variable declaration in condition cannot have a parenthesized initializer
expected body of lambda expression
expected '{' after base class list
expected '{' in compound literal
expected '<' after '%0'
expected '(' after '%0'
expected '(' for function-style cast or type construction
expected member name or ';' after declaration specifiers
expected member name or ';' after declaration specifiers; %0 is a keyword in Objective-C++
expected class member or base class name
expected method body
method type specifier must start with '-' or '+'
'@end' must appear in an Objective-C context
expected the name of a parameter pack
expected parentheses around type name in %0 expression
expected property name
expected ')' or ',' after '%0'
expected a qualified name after 'typename'
expected ')' after '%0'
expected selector for Objective-C method
expected HLSL Semantic identifier
expected ';' after attribute list
expected ';' after expression
expected ';' after method prototype
expected ';' after namespace name
expected ';' after '%0'
expected ';' after %0 statement
expected ';' at end of declaration list
expected ';' at end of declaration
expected ';' in 'for' statement specifier
expected ';' at end of requirement
expected an OpenMP 'directive' or 'sequence' attribute argument
expected 'this' following '*' in lambda capture list
expected statement
expected template
expected template parameter
expected %0; %1 is a keyword in Objective-C++
expected a type
expected an identifier or template-id after '::'
expected %select{identifier|unqualified-id}0
expected a version of the form 'major[.minor[.subminor]]'
expected 'while' in do/while loop
enumerations cannot be explicitly instantiated
explicit template instantiation cannot have a definition; if this definition is meant to be an explicit specialization, add '<>' after the 'template' keyword
explicit %select{specialization|instantiation}0 of %select{non-|undeclared }3template %1 %2
export declaration cannot be empty
duplicate %0 clause in an 'external_source_symbol' attribute
expected 'language', 'defined_in', 'generated_declaration', or 'USR'
extraneous closing brace ('}')
extraneous ')' after condition, expected a statement
extraneous '%0' before ';'
operators in fold expression must be the same
'co_await' modifier can only be applied to range-based for loop
for range declaration must declare a variable
range-based for loop requires type for loop variable
cannot define a type in a friend declaration
friend cannot be declared in an explicit instantiation; if this declaration is meant to be a friend declaration, remove the 'template' keyword
'friend' used outside of class
function definition does not declare parameters
function definition declared 'typedef'
function definition is not allowed here
unexpected %0 in function call; perhaps remove the %0?
function scope depth exceeded maximum of %0
meaningless '%0' on asm outside function
'module;' introducing a global module fragment can appear only at the start of the translation unit
GNU-style inline assembly is disabled
wrong argument format for hlsl attribute, use %0 instead
expected template name after 'template' keyword in nested name specifier
%0 declared as a reference to a reference
cannot cast 'super' (it isn't an expression)
module%select{| partition}0 imports cannot be in the %select{global|private}1 module fragment
imports must immediately follow the module declaration
array bound cannot be deduced from a default member initializer
initializer list cannot be used on the %select{left|right}0 hand side of operator '%1'
namespace alias cannot be inline
nested namespace definition cannot be 'inline'
invalid declaration inside %select{tbuffer|cbuffer}0
cannot use %select{dot|arrow}0 operator on a type
'%0' qualifier may not be applied to a reference
invalid %0 at end of declaration; did you mean '='?
expected ';' after top level declarator
invalid parameter name: '%0' is a keyword
C++11 only allows consecutive left square brackets when introducing an attribute
'[]' after delete interpreted as 'delete[]'; add parentheses to treat this as a lambda-expression
ellipsis in pack %select{|init-}0capture must appear %select{after|before}0 the name of the capture
multiple ellipses in pack capture
%select{'mutable'|'static'|'constexpr'|'consteval'}0 cannot appear multiple times in a lambda declarator
lambda template parameter list cannot be empty
string literal after 'operator' must be '""'
string literal after 'operator' cannot have an encoding prefix
'...' must %select{immediately precede declared identifier|be innermost component of anonymous pack declaration}0
expected %0 at end of module
@try statement without a @catch and @finally clause
C requires a comma prior to the ellipsis in a variadic function type
use 'template' keyword to treat '%0' as a dependent template name
missing '}' at end of definition of %q0
expected parameter declarator
found '<::' after a %select{template name|addrspace_cast|const_cast|dynamic_cast|reinterpret_cast|static_cast}0 which forms the digraph '<:' (aka '[') and a ':', did you mean '< ::'?
expected a module name after '%select{module|import}0'
expected ';' after module name
%select{global|private}0 module fragment cannot be exported
'__declspec' attributes are not enabled; use '-fdeclspec' or '-fms-extensions' to enable support for __declspec attributes
__declspec attributes must be an identifier or string literal
property declaration specifies '%0' accessor twice
expected name of accessor method
expected ',' or ')' at end of property accessor list
expected '=' after '%0'
putter for property must be specified as 'put', not 'set'
property declaration cannot have a default member initializer
missing 'get=' or 'put='
property does not specify a getter or a putter
expected 'get' or 'put' in property declaration
MS-style inline assembly is not available: %0
unsupported architecture '%0' for MS-style inline assembly
%select{|a template declaration|an explicit template specialization|an explicit template instantiation}0 can only %select{|declare|declare|instantiate}0 a single entity
namespaces can only be defined in global or namespace scope
parameter named %0 is missing
@%0 must be followed by a number to form an NSNumber object
unexpected token after Objective-C string
directive may only be specified in protocols only
expected '=' for Objective-C getter
expected '=' for Objective-C setter
unknown property attribute %0
expected selector for Objective-C %select{setter|getter}0
expected type parameter name
illegal interface qualifier
illegal visibility specification
missing '@end'
@implementation cannot have type parameters
postfix attributes are not allowed on Objective-C directives
postfix attributes are not allowed on Objective-C directives, place them in front of '%select{@interface|@protocol}0'
property name cannot be a bit-field
property requires fields to be named
protocol qualifiers must precede type arguments
'@end' appears where closing brace '}' is expected
prefix attribute must be followed by an interface, protocol, or implementation
expected an Objective-C directive after '@'
expected a related ObjectiveC class name, e.g., 'NSColor'
expected a class method selector with single argument, e.g., 'colorWithCGColor:'
unexpected '(', only 'to', 'link' or 'device_type' clauses expected for 'begin declare target' directive
function declaration is expected after 'declare %select{simd|variant}0' directive
unexpected '%0' clause, '%1' is specified already
only 'device_type(any)' clause is allowed with indirect clause
expected at least one %select{'to' or 'link'|'to', 'link' or 'indirect'}0 clause
%0 appears multiple times in clauses on the same declare target directive
unexpected '%0' clause, only %select{'device_type'|'to' or 'link'|'to', 'link' or 'device_type'|'device_type', 'indirect'|'to', 'link', 'device_type' or 'indirect'}1 clauses expected
unexpected clause after an implicit 'to' clause
nested OpenMP context selector contains duplicated trait '%0' in selector '%1' and set '%2' with different score
nested user conditions in OpenMP context selector not supported (yet)
expected %select{'match'|'match', 'adjust_args', or 'append_args'}0 clause on 'omp declare variant' directive
expected at least one clause on '#pragma omp %0' directive
missing ':' in %0
expected valid context selector in %0
expected '=' in iterator specifier
expected identifier specifying the name of the 'omp critical' directive
expected interop type: 'target' and/or 'targetsync'
expected ',' or ')' in '%0' %select{clause|directive}1
expected ',' after interop modifier
expected ',' or ')' after iterator specifier
expected identifier or one of the following operators: '+', '-', '*', '&', '|', '^', '&&', or '||'
'#pragma omp %0' %select{|with '%2' clause }1cannot be an immediate substatement
data-sharing attribute '%0' in '%1' clause requires OpenMP version %2 or above
missing map type
missing map type modifier
expected declarator on 'omp declare mapper' directive
illegal OpenMP user-defined mapper identifier
reserved locator 'omp_all_memory' requires 'out' or 'inout' dependency types
unexpected operation specified in 'append_args' clause, expected 'interop'
unexpected OpenMP clause '%0' in directive '#pragma omp %1'
unexpected OpenMP directive %select{|'#pragma omp %1'}0
expected an OpenMP directive
incorrect map type, expected one of 'to', 'from', 'tofrom', 'alloc', 'release', or 'delete'
incorrect map type modifier, expected one of: 'always', 'close', 'mapper'%select{|, 'present'}0%select{|, 'ompx_hold'}1
only a single match extension allowed per OpenMP context selector
^^ is a reserved operator in OpenCL
taking address of function is not allowed
virtual functions are not supported in C++ for OpenCL
out-of-line constructor for %0 cannot have template arguments
'%0' keyword not permitted with interface types
missing parentheses around the size of parameter pack %0
module partition imports must be within a module purview
expected 'auto' or 'decltype(auto)' after concept name
expression cannot be followed by a postfix %0 operator; add parentheses
duplicate attribute subject matcher '%0'
expected an attribute after '('
expected identifier that represents an attribute name
expected an attribute that is specified using the GNU, C++11 or '__declspec' syntax
expected '.' after pragma attribute namespace %0
expected 'push', 'pop', or '(' after '#pragma clang attribute'
expected an identifier that corresponds to an attribute subject rule
expected an identifier that corresponds to an attribute subject matcher sub-rule; '%0' matcher %select{does not support sub-rules|supports the following sub-rules: %2|}1
extra tokens after attribute in a '#pragma clang attribute push'
unexpected argument '%0' to '#pragma clang attribute'; expected 'push' or 'pop'
expected attribute subject set specifier 'apply_to'
namespace can only apply to 'push' or 'pop' directives
unknown attribute subject rule '%0'
%select{invalid use of|unknown}2 attribute subject matcher sub-rule '%0'; '%1' matcher %select{does not support sub-rules|supports the following sub-rules: %3}2
attribute %0 is not supported by '#pragma clang attribute'
force_cuda_host_device end pragma without matching force_cuda_host_device begin
expected '=' following '#pragma clang section %select{invalid|bss|data|rodata|text|relro}0'
pragma comment requires parenthesized identifier and optional string
unknown kind of pragma comment
pragma detect_mismatch is malformed; it requires two comma-separated string literals
expected one of [bss|data|rodata|text|relro] section kind in '#pragma %0'
expected an integer argument in '#pragma %0'
'#pragma %0' can only appear at file scope or at the start of a compound statement
pragma float_control is malformed; use 'float_control({push|pop})' or 'float_control({precise|except}, {on|off} [,push])'
unexpected argument '%0' to '#pragma clang fp %1'; expected %select{'fast' or 'on' or 'off'|'on' or 'off'|'ignore', 'maytrap' or 'strict'|'source', 'double' or 'extended'}2
%select{invalid|missing}0 option%select{ %1|}0; expected 'contract', 'reassociate' or 'exceptions'
invalid argument; expected 'enable'%select{|, 'full'}0%select{|, 'assume_safety'}1 or 'disable'
%select{invalid|missing}0 option%select{ %1|}0; expected vectorize, vectorize_width, interleave, interleave_count, unroll, unroll_count, pipeline, pipeline_initiation_interval, vectorize_predicate, or distribute
vectorize_width loop hint malformed; use vectorize_width(X, fixed) or vectorize_width(X, scalable) where X is an integer, or vectorize_width('fixed' or 'scalable')
missing argument; expected %select{an integer value|'enable'%select{|, 'full'}1%select{|, 'assume_safety'}2 or 'disable'}0
this pragma cannot appear in %0 declaration
missing argument to '#pragma %0'%select{|; expected %2}1
unexpected extra argument '%0' to '#pragma clang optimize'
unexpected argument '%0' to '#pragma clang optimize'; expected 'on' or 'off'
invalid argument; expected 'disable'
unexpected %0, expected to see one of %select{|'best_case', 'full_generality', }1'single_inheritance', 'multiple_inheritance', or 'virtual_inheritance'
expected ';' after private module fragment declaration
trailing requires clause should be placed outside parentheses
trailing return type must appear before trailing requires clause
trailing requires clause can only be used when declaring a function
expected concept name with optional arguments
requires expression in requirement body; did you intend to place it in a nested requirement? (add another 'requires' before the expression)
expected '->' before expression type requirement
varargs not allowed in requires expression
'noexcept' can only be used in a compound requirement (with '{' '}' around the expression)
a space is required between a right angle bracket and an equals sign (use '> =')
scoped enumeration requires a name
range-based 'for' statement uses ':', not '='
expected parenthesized parameter pack name in 'sizeof...' expression
static lambdas are a C++2b extension
a static lambda cannot have any captures
lambda cannot be both mutable and static
statement expression not allowed at file scope
'__super' cannot be used with a using declaration
expected a property name in @synthesize
%select{function|class|variable}0 cannot be defined in an explicit instantiation; if this declaration is meant to be a %select{function|class|variable}0 definition, remove the 'template' keyword
identifier followed by '<' indicates a class template specialization but %0 %select{does not refer to a template|refers to a function template|<unused>|refers to a variable template|<unused>|<unused>|refers to a concept}1
a static_assert declaration cannot be a template
cannot template a using %select{directive|declaration}0
'this' cannot be captured by reference
a space is required between consecutive right angle brackets (use '> >')
invalid comparison flag %0; use 'layout_compatible' or 'must_be_null'
type trait requires %0%select{| or more}1 argument%select{|s}2; have %3 argument%s3
unparsed tokens following type
typename is allowed for identifiers only
type name does not allow %select{<ERROR>|constexpr|consteval|constinit}0 specifier to be specified
type name does not allow function specifier to be specified
type name does not allow storage class to be specified
typename specifier refers to a non-type template
type name requires a specifier or qualifier
unexpected '@' in program
unexpected ':' in nested name specifier; did you mean '::'?
module declaration can only appear at the top level
attributes cannot be specified on namespace alias
attributes cannot be specified on a nested namespace definition
@implementation declaration cannot be protocol qualified
unexpected namespace scope prior to decltype
unexpected ';' before %0
'template' keyword not permitted after 'using' keyword
'template' keyword not permitted in destructor name
'template' keyword not permitted here
'%0' cannot be a part of nested name specifier; did you mean ':'?
unexpected type name %0: expected identifier
type-id cannot have a name
unknown HLSL semantic %0
unknown template name %0
parentheses are required around this expression in a requires clause
'static' may not be used without an array size
'static' may not be used with an unspecified variable length array size
module partitions are only supported for C++20 onwards
attribute with scope specifier cannot follow default scope specifier
using enum %select{requires an enum or typedef name|does not permit an elaborated enum specifier}0
'using namespace' is not allowed in classes
'%0' specifier is not allowed outside a class definition
while loop outside of a function
version number must have non-zero major, minor, or sub-minor version
ISO C++11 requires a parenthesized pack declaration to have a name
alias declarations are a C++11 extension
alias declaration in this context is a C++2b extension
%0 applied to an expression is a GNU extension
'auto' storage class specifier is not permitted in C++11, and will not be supported in future releases
'__auto_type' is a GNU extension
'_BitInt' in %select{C17 and earlier|C++}0 is a Clang extension
default member initializer for bit-field is a C++20 extension
'%0' is a C11 extension
compound literals are a C99-specific feature
'%0' is a C99 extension
variable declaration in for loop is a C99-specific feature
label at end of compound statement is a C2x extension
'_Static_assert' with no message is a C2x extension
enumeration types with a fixed underlying type are a Clang extension
ISO C++20 does not permit the 'bool' keyword after 'concept'
consteval if is a C++2b extension
constexpr if is a C++17 extension
'constexpr' on lambda expressions is a C++17 extension
ISO C++ does not allow an attribute list to appear here
enumeration types with a fixed underlying type are a C++11 extension
label at end of compound statement is a C++2b extension
'static_assert' with no message is a C++17 extension
an attribute specifier sequence in this position is a C++2b extension
'decltype(auto)' type specifier is a C++14 extension
ISO C++17 does not allow a decomposition group to be empty
%select{defaulted|deleted}0 function definitions are a C++11 extension
ISO C++17 does not allow dynamic exception specifications
reference to enumeration must use 'enum' not 'enum %select{struct|class}0'
exception specification of '...' is a Microsoft extension
ISO C requires a translation unit to contain at least one declaration
non-defining declaration of enumeration with a fixed underlying type is only permitted as a standalone declaration%select{|; missing list of enumerators?}0
commas at the end of enumerator lists are a C99-specific feature
commas at the end of enumerator lists are a C++11 extension
expected ';' at end of declaration list
explicit(bool) is a C++20 extension
extern templates are a C++11 extension
extra ';' %select{outside of a function|inside a %1|inside instance variable list|after member function definition}0
extra ';' outside of a function is a C++11 extension
pack fold expression is a C++17 extension
range-based for loop is a C++11 extension
range-based for loop initialization statements are a C++20 extension
generalized initializer lists are a C++11 extension
use of GNU address-of-label extension
use of GNU array range extension
use of GNU case range extension
use of GNU ?: conditional expression extension, omitting middle operand
use of GNU empty initializer extension
use of GNU indirect-goto extension
use of GNU 'missing =' extension in designator
use of GNU old-style field designator extension
use of GNU statement expression extension
use of GNU statement expression extension from macro expansion
access specifiers are a clang HLSL extension
type-less parameter names in function declaration
'%select{if|switch}0' initialization statements are a C++17 extension
inline namespaces are a C++11 feature
inline nested namespace definition is a C++20 extension
keyword '%0' will be made available as an identifier %select{here|for the remainder of the translation unit}1
lambda without a parameter clause is a C++2b extension
explicit template parameter list for lambdas is a C++20 extension
'abstract' keyword is a Microsoft extension
enumeration types with a fixed underlying type are a Microsoft extension
'sealed' keyword is a Microsoft extension
use of 'static_assert' without inclusion of <assert.h> is a Microsoft extension
use of multiple declarators in a single using declaration is a C++17 extension
nested namespace definition is a C++17 extension; define each namespace separately
default member initializer for non-static data member is a C++11 extension
attributes on %select{a namespace|an enumerator}0 declaration are a C++17 extension
type nullability specifier %0 is a Clang extension
specifying OpenMP directives with [[]] is an OpenMP 5.1 extension
'%0' keyword is a C++11 extension
reference qualifiers on functions are a C++11 extension
rvalue references are a C++11 extension
scoped enumerations are a C++11 extension
unknown pragma in STDC namespace
template template parameter using 'typename' is a C++17 extension
'__thread' before '%0'
default scope specifier for attributes is a C++17 extension
pack expansion of using declaration is a C++17 extension
using enum declaration is a C++20 extension
__final is a GNU extension, consider using C++11 final
use -fbracket-depth=N to increase maximum nesting level
%select{|second }0%1 token is here
use '%0' instead
comma separating Objective-C messaging arguments
or insert whitespace before ':' to use %0 as parameter name and have an empty entry in the selector
total token limit set here
did you mean to use 'typename'?
insert ',' before '...' to silence this warning
place '...' %select{immediately before declared identifier|here}0 to declare a function parameter pack
preceding '...' declares a function parameter pack
still within definition of %q0 here
introduce a parameter name to make %0 part of the selector
%select{class|protocol|category|class extension|implementation|category implementation}0 started here
the ignored tokens spans until here
the context property '%0' can be nested in the context selector '%1' which is nested in the context set '%2'; try 'match(%2={%1(%0)})'
the context selector '%0' can be nested in the context set '%1'; try 'match(%1={%0%select{|(property)}2})'
the ignored %select{set|selector|property}0 spans until here
'%0' is a context %select{set|selector|property}1 not a context %select{set|selector|property}2
context %select{set|selector|property}0 options are: %1
try 'match(%0={%1%2})'
the previous context %select{set|selector|property}0 '%1' used here
omit the namespace to add attributes to the most-recently pushed attribute group
use the GNU '__attribute__' syntax
vectorize_width loop hint malformed; use vectorize_width(X, fixed) or vectorize_width(X, scalable) where X is an integer, or vectorize_width('fixed' or 'scalable')
previous default generic association is here
previous statement is here
parentheses are required around this expression in a requires clause
'%0' casts have no effect when not using ARC
use of '@import' in framework header is discouraged, including this header requires -fmodules
attribute %0 ignored, because it is not attached to a declaration
GCC does not allow %0 attribute in this position on a function definition
'unavailable' availability overrides all other availability information
'_BitInt' is incompatible with C standards before C2x
'_Static_assert' with no message is incompatible with C standards before C2x
label at end of compound statement is incompatible with C standards before C2x
'%select{typeof|typeof_unqual}0' is incompatible with C standards before C2x
%select{%1 and |}0%2 tokens %select{introducing statement expression|terminating statement expression|introducing attribute|terminating attribute|forming pointer to member type}3 appear in different macro expansion contexts
%select{%1 and |}0%2 tokens %select{introducing statement expression|terminating statement expression|introducing attribute|terminating attribute|forming pointer to member type}3 are separated by whitespace
use of C-style parameters in Objective-C method declarations is deprecated
nvcc does not allow '__%0__' to appear after the parameter list in lambdas
'decltype(auto)' type specifier is incompatible with C++ standards before C++14
use of right-shift operator ('>>') in template argument will require parentheses in C++11
constexpr if is incompatible with C++ standards before C++17
constexpr on lambda expressions is incompatible with C++ standards before C++17
pack fold expression is incompatible with C++ standards before C++17
%select{if|switch}0 initialization statements are incompatible with C++ standards before C++17
nested namespace definition is incompatible with C++ standards before C++17
attributes on %select{a namespace|an enumerator}0 declaration are incompatible with C++ standards before C++17
'static_assert' with no message is incompatible with C++ standards before C++17
template template parameter using 'typename' is incompatible with C++ standards before C++17
default scope specifier for attributes is incompatible with C++ standards before C++17
default member initializer for bit-field is incompatible with C++ standards before C++20
explicit(bool) is incompatible with C++ standards before C++20
range-based for loop initialization statements are incompatible with C++ standards before C++20
inline nested namespace definition is incompatible with C++ standards before C++20
explicit template parameter list for lambdas is incompatible with C++ standards before C++20
use of multiple declarators in a single using declaration is incompatible with C++ standards before C++17
pack expansion using declaration is incompatible with C++ standards before C++17
using enum declaration is incompatible with C++ standards before C++20
alias declaration in this context is incompatible with C++ standards before C++2b
consteval if is incompatible with C++ standards before C++2b
an attribute specifier sequence in this position is incompatible with C++ standards before C++2b
this expression will be parsed as explicit(bool) in C++20
label at end of compound statement is incompatible with C++ standards before C++2b
static lambdas are incompatible with C++ standards before C++2b
alias declarations are incompatible with C++98
'alignas' is incompatible with C++98
alignof expressions are incompatible with C++98
C++11 attribute syntax is incompatible with C++98
'decltype' type specifier is incompatible with C++98
%select{defaulted|deleted}0 function definitions are incompatible with C++98
enumeration types with a fixed underlying type are incompatible with C++98
commas at the end of enumerator lists are incompatible with C++98
extern templates are incompatible with C++98
range-based for loop is incompatible with C++98
generalized initializer lists are incompatible with C++98
inline namespaces are incompatible with C++98
lambda expressions are incompatible with C++98
literal operators are incompatible with C++98
noexcept specifications are incompatible with C++98
noexcept expressions are incompatible with C++98
default member initializer for non-static data members is incompatible with C++98
'nullptr' is incompatible with C++98
'%0' keyword is incompatible with C++98
reference qualifiers on functions are incompatible with C++98
rvalue references are incompatible with C++98
scoped enumerations are incompatible with C++98
'static_assert' declarations are incompatible with C++98
extra ';' outside of a function is incompatible with C++98
trailing return types are incompatible with C++98
consecutive right angle brackets are incompatible with C++98 (use '> >')
add explicit braces to avoid dangling else
'for co_await' belongs to CoroutineTS instead of C++20, which is deprecated
empty initialization statement of '%select{if|switch|range-based for}0' has no effect
dynamic exception specifications are deprecated
use same version number separators '_' or '.'; as in 'major[.minor[.subminor]]'
expected a qualified name after 'typename'
'_ExtInt' is deprecated; use '_BitInt' instead
extra ';' after member function definition
GCC does not allow an attribute in this position on a function declaration
GCC does not allow variable declarations in for loop initializers before C99
the number of preprocessor source tokens (%0) exceeds this token limit (%1)
the total number of preprocessor source tokens (%0) exceeds the token limit (%1)
dependent %select{__if_not_exists|__if_exists}0 declarations are ignored
qualifiers after comma in declarator list are ignored
misleading indentation; statement is not part of the previous '%select{if|else|for|while}0'
'...' in this location creates a C-style varargs function%select{, not a function parameter pack|}0
use 'template' keyword to treat '%0' as a dependent template name
%0 used as the name of the previous parameter rather than as part of the selector
Setting the floating point evaluation method to `source` on a target without SSE is not supported.
empty expression statement has no effect; remove unnecessary ';' to silence this warning
protocol has no object type specified; defaults to qualified 'id'
specifying OpenMP directives with [[]] is incompatible with OpenMP standards before OpenMP 5.1
the context property '%0' is not valid for the context selector '%1' and the context set '%2'; property ignored
the context selector '%0' in the context set '%1' cannot have a score ('%2'); score ignored
the context selector '%0' is not valid for the context set '%1'; selector ignored
the context selector '%0' in context set '%1' requires a context property defined in parentheses; selector ignored
the context %select{set|selector|property}0 '%1' was used already in the same 'omp declare variant' directive; %select{set|selector|property}0 ignored
'%0' is not a valid context property for the context selector '%1' and the context set '%2'; property ignored
'%0' is not a valid context selector for the context set '%1'; selector ignored
'%0' is not a valid context set in a `declare variant`; set ignored
expected '%0' after the %1; '%0' assumed
expected identifier or string literal describing a context %select{set|selector|property}0; %select{set|selector|property}0 skipped
extra tokens at the end of '#pragma omp %0' are ignored
more than one 'device_type' clause is specified
interop type '%0' cannot be specified more than once
reserved locator 'omp_all_memory' cannot be specified more than once
valid %0 clauses start with %1; %select{token|tokens}2 will be ignored
%0 clause should not be followed by arguments; tokens will be ignored
expected '=' following '#pragma %select{align|options align}0' - ignored
invalid alignment option in '#pragma %select{align|options align}0' - ignored
'#pragma comment %0' ignored
expected action or ')' in '#pragma %0' - ignored
missing ':' after %0 - ignoring
missing ':' or ')' after %0 - ignoring
expected ',' in '#pragma %0'
expected identifier in '#pragma %0' - ignored
expected 'compiler', 'lib', 'user', or a string literal for the section name in '#pragma %0' - ignored
expected integer between %0 and %1 inclusive in '#pragma %2' - ignored
missing '(' after '#pragma %0' - ignoring
expected non-wide string literal in '#pragma %0'
expected %select{'enable', 'disable', 'begin' or 'end'|'disable'}0 - ignoring
expected ')' or ',' in '#pragma %0'
missing ')' after '#pragma %0' - ignoring
expected a stack label or a string literal for the section name in '#pragma %0' - ignored
expected a string literal for the section name in '#pragma %0' - ignored
expected push, pop or a string literal for the section name in '#pragma %0' - ignored
expected string literal in '#pragma %0' - ignoring
OpenCL extension %0 is core feature or supported optional core feature - ignoring
extra tokens at end of '#pragma %0' - ignored
incorrect use of #pragma clang force_cuda_host_device begin|end
'#pragma %0' is not supported on this target - ignored
'#pragma init_seg' is only supported when targeting a Microsoft environment
%0 is not a recognized builtin%select{|; consider including <intrin.h> to access non-builtin intrinsics}1
unknown action for '#pragma %0' - ignored
unexpected argument '%0' to '#pragma %1'%select{|; expected %3}2
unknown action '%1' for '#pragma %0' - ignored
missing argument to '#pragma %0'%select{|; expected %2}1
incorrect use of '#pragma fenv_access (on|off)' - ignored
incorrect use of '#pragma ms_struct on|off' - ignored
unexpected '#pragma omp ...' in program
expected 'align' following '#pragma options' - ignored
expected integer or identifier in '#pragma pack' - ignored
OpenCL extension %0 unknown or does not require pragma - ignoring
argument to '#pragma unroll' should not be in parentheses in CUDA C/C++
known but unsupported action '%1' for '#pragma %0' - ignored
unsupported OpenCL extension %0 - ignoring
expected '#pragma unused' argument to be a variable name
semicolon before method body is ignored
ignoring '%select{static|inline}0' keyword on explicit template instantiation
pragma STDC FENV_ROUND is not supported
invalid or unsupported rounding mode in '#pragma STDC FENV_ROUND' - ignored
isa trait '%0' is not known to the current target; verify the spelling or consider restricting the context selector with the 'arch' selector further
'__clang__' is a predefined macro name, not an attribute scope specifier; did you mean '_Clang' instead?
empty symbolic operand name in inline assembly string
invalid %% escape in inline assembly string
invalid operand number in inline asm string
unknown symbolic operand name in inline assembly string
unterminated symbolic operand name in inline assembly string
the experimental clang interpreter failed to evaluate an expression
cannot get %select{lower,upper}0 bound because object size is unknown
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{%4 base %plural{1:class|:classes}4|%4 virtual base %plural{1:class|:classes}4|%ordinal4 base class with type %5|%ordinal4 %select{non-virtual|virtual}5 base class %6|%ordinal4 base class %5 with %select{public|protected|private|no}6 access specifier}3
%q0 has different definitions in different modules; %select{definition in module '%2' is here|defined here}1
%q0 has different definitions in different modules; %select{definition in module '%2'|defined here}1 first difference is %select{enum that is %select{not scoped|scoped}4|enum scoped with keyword %select{struct|class}4|enum %select{without|with}4 specified type|enum with specified type %4|enum with %4 element%s4|%ordinal4 element has name %5|%ordinal4 element %5 %select{has|does not have}6 an initializer|%ordinal4 element %5 has an initializer|}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{field %4|field %4 with type %5|%select{non-|}5bitfield %4|bitfield %4 with one width expression|%select{non-|}5mutable field %4|field %4 with %select{no|an}5 initalizer|field %4 with an initializer}3
%q0 has different definitions in different modules; %select{definition in module '%2'|defined here}1 first difference is %select{return type is %4|%ordinal4 parameter with name %5|%ordinal4 parameter with type %5%select{| decayed from %7}6|%ordinal4 parameter with%select{out|}5 a default argument|%ordinal4 parameter with a default argument|function body}3
%0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{%select{method %5|constructor|destructor}4 that has %6 parameter%s6|%select{method %5|constructor|destructor}4 with %ordinal6 parameter of type %7%select{| decayed from %9}8|%select{method %5|constructor|destructor}4 with %ordinal6 parameter named %7}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{end of class|public access specifier|private access specifier|protected access specifier|static assert|field|method|type alias|typedef|data member|friend declaration|function template|method|instance variable|property}3
%q0 %select{with definition in module '%2'|defined here}1 has different definitions in different modules; first difference is this %select{||||static assert|field|method|type alias|typedef|data member|friend declaration|function template|method|instance variable|property|unexpected decl}3
%0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{%select{no super class|super class with type %5}4|instance variable '%4' access control is %select{|@private|@protected|@public|@package}5}3
%0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{return type is %4|method name %4|%select{class|instance}4 method|%select{no|'required'|'optional'}4 method control|method with %select{no designater initializer|designater initializer}4|%select{no direct|direct}4 method}3
%0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{property name %4|property %4 with type %5|%select{no|'required'|'optional'}4 property control|%select{default |}5'%select{none|readonly|getter|assign|readwrite|retain|copy|nonatomic|setter|atomic|weak|strong|unsafe_unretained|nullability|null_resettable|class|}4' property attribute}3
%0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{static assert with condition|static assert with message|static assert with %select{|no }4message|%select{method %5|constructor|destructor}4|%select{method %5|constructor|destructor}4 is %select{not deleted|deleted}6|%select{method %5|constructor|destructor}4 is %select{not defaulted|defaulted}6|%select{method %5|constructor|destructor}4 is %select{|pure }6%select{not virtual|virtual}7|%select{method %5|constructor|destructor}4 is %select{not static|static}6|%select{method %5|constructor|destructor}4 is %select{not volatile|volatile}6|%select{method %5|constructor|destructor}4 is %select{not const|const}6|%select{method %5|constructor|destructor}4 is %select{not inline|inline}6|%select{method %5|constructor|destructor}4 with %ordinal6 parameter with%select{out|}7 a default argument|%select{method %5|constructor|destructor}4 with %ordinal6 parameter with a default argument|%select{method %5|constructor|destructor}4 with %select{no |}6template arguments|%select{method %5|constructor|destructor}4 with %6 template argument%s6|%select{method %5|constructor|destructor}4 with %6 for %ordinal7 template argument|%select{method %5|constructor|destructor}4 with %select{no body|body}6|%select{method %5|constructor|destructor}4 with body|friend %select{class|function}4|friend %4|friend function %4|function template %4 with %5 template parameter%s5|function template %4 with %ordinal5 template parameter being a %select{type|non-type|template}6 template parameter|function template %4 with %ordinal5 template parameter %select{with no name|named %7}6|function template %4 with %ordinal5 template parameter with %select{no |}6default argument|function template %4 with %ordinal5 template parameter with default argument %6|function template %4 with %ordinal5 template parameter with one type|function template %4 with %ordinal5 template parameter %select{not |}6being a template parameter pack|%select{no attribute|%5}4|}3
%0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{%4 referenced %plural{1:protocol|:protocols}4|%ordinal4 referenced protocol with name %5}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{unnamed template parameter|template parameter %5|template parameter with %select{no |}4default argument|template parameter with default argument}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{%select{typedef|type alias}4 name %5|%select{typedef|type alias}4 %5 with underlying type %6}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{data member with name %4|data member %4 with type %5|data member %4 with%select{out|}5 an initializer|data member %4 with an initializer|data member %4 %select{is constexpr|is not constexpr}5}3
template parameter lists have a different number of parameters (%0 vs %1)
template parameter has different kinds in different translation units
field %0 declared with incompatible types in different translation units (%1 vs. %2)
external function %0 declared with incompatible types in different translation units (%1 vs. %2)
instance variable %0 declared with incompatible types in different translation units (%1 vs. %2)
non-type template parameter declared with incompatible types in different translation units (%0 vs. %1)
%select{class|instance}0 method %1 has a different number of parameters in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has a parameter with a different types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has incompatible result types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 is variadic in one translation unit and not variadic in another
property %0 is implemented with %select{@synthesize|@dynamic}1 in one translation but %select{@dynamic|@synthesize}1 in another translation unit
property %0 declared with incompatible types in different translation units (%1 vs. %2)
class %0 has incompatible superclasses
property %0 is synthesized to different ivars in different translation units (%1 vs. %2)
parameter kind mismatch; parameter is %select{not a|a}0 parameter pack
type %0 has incompatible definitions in different translation units
external variable %0 defined in multiple translation units
external variable %0 declared with incompatible types in different translation units (%1 vs. %2)
cannot import unsupported AST node %0
ambiguous vftable component for %0 introduced via covariant thunks; this is an inherent limitation of the ABI
%select{pointer|reference}0 to a consteval declaration is not a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 heap allocated object that has been deleted
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of subobject of|destruction of}0 member %1 of union with %select{active member %3|no active member}2 is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 mutable member %1 is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 dereferenced null pointer is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 dereferenced one-past-the-end pointer is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|reconstruction of|destruction of}0 temporary is not allowed in a constant expression outside the expression that created the temporary
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of subobject of|destruction of}0 %select{object outside its lifetime|uninitialized object}1 is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 object '%1' whose value is not known
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 element of array without known bound is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|<ERROR>|<ERROR>|<ERROR>|<ERROR>}0 volatile %select{temporary|object %2|member %2}1 is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|<ERROR>|<ERROR>|<ERROR>|<ERROR>}0 volatile-qualified type %1 is not allowed in a constant expression
cannot constant evaluate the result of adjusting alignment to %0
cannot constant evaluate whether run-time alignment is at least %0
requested alignment must be %0 or less for type %1; %2 is invalid
cannot refer to element %0 of %select{array of %2 element%plural{1:|:s}2|non-array object}1 in a constant expression
%select{alignment of|offset of the aligned pointer from}0 the base pointee object (%1 %plural{1:byte|:bytes}1) is %select{less than|not a multiple of}0 the asserted %2 %plural{1:byte|:bytes}2
value of the aligned pointer (%0) is not a multiple of the asserted %1 %plural{1:byte|:bytes}1
indeterminate value can only initialize an object of type 'unsigned char'%select{, 'char',|}1 or 'std::byte'; %0 is invalid
invalid type %0 is a %select{member|base}1 of %2
bit_cast %select{from|to}0 a %select{|type with a }1%select{union|pointer|member pointer|volatile|reference}2 %select{type|member}1 is not allowed in a constant expression
value %1 cannot be represented in type %0
constexpr bit_cast involving bit-field is not yet supported
constexpr bit_cast involving type %0 is not yet supported
in call to '%0'
constexpr evaluation hit maximum call limit
(skipping %0 call%s0 in backtrace; use -fconstexpr-backtrace-limit=0 to see all)
comparison of pointer to virtual member function %0 has unspecified value
both arms of conditional operator are unable to produce a constant expression
construction of individual component of complex number is not yet supported in constant expressions
'std::allocator<...>::deallocate' used to delete a null pointer
delete of object with dynamic type %1 through pointer to base class type %0 with non-virtual destructor
delete of pointer '%0' that does not point to a heap-allocated object
delete of pointer%select{ to subobject|}1 '%0' %select{|that does not point to complete object}1
constexpr evaluation exceeded maximum depth of %0 calls
destruction of individual component of complex number is not yet supported in constant expressions
destroying object '%0' whose lifetime has already ended
delete of pointer that has already been deleted
destruction of object that is already being destroyed
%select{pointer|reference}0 to %select{|subobject of }1heap-allocated object is not a constant expression
heap allocation performed here
reference dynamic_cast failed: %select{static type %1 of operand is a non-public base class of dynamic type %2|dynamic type %2 of operand does not have a base class of type %3|%3 is an ambiguous base class of dynamic type %2 of operand|%3 is a non-public base class of dynamic type %2 of operand}0
cannot evaluate this expression if rounding mode is dynamic
floating point arithmetic produces %select{an infinity|a NaN}0
compile time floating point arithmetic suppressed in strict evaluation modes
function parameter %0 with unknown value cannot be used in a constant expression
constexpr evaluation hit maximum heap allocation limit
in implicit initialization for inherited constructor of %0
requested alignment %0 is not a positive power of two
%select{reinterpret_cast|dynamic_cast|%select{this conversion|cast that performs the conversions of a reinterpret_cast}1|cast from %1}0 is not allowed in a constant expression%select{| in C++ standards before C++20||}0
cannot cast object of dynamic type %0 to type %1
%select{non-constexpr|undefined}0 %select{function|constructor}1 %2 cannot be used in a constant expression
constructor inherited from base class %0 cannot be used in a constant expression; derived class cannot be implicitly initialized
shift count %0 >= width of type %1 (%2 bit%s2)
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 %select{temporary|variable}1 whose %plural{8:storage duration|:lifetime}0 has ended
signed left shift discards bits
left shift of negative value %0
read of incomplete type %0 is not allowed in a constant expression
read of non-const variable %0 is not allowed in a constant expression
read of non-constexpr variable %0 is not allowed in a constant expression
read of variable %0 of non-integral, non-enumeration type %1 is not allowed in a constant expression
constant evaluation of %0 on array of type %1 is not supported; only arrays of narrow character types can be searched
constant evaluation of %0 between arrays of types %1 and %2 is not supported; only arrays of narrow character types can be compared
cannot constant evaluate '%select{memcpy|memmove}0' between objects of incomplete type %1
cannot constant evaluate '%select{memcpy|memmove}0' between objects of non-trivially-copyable type %1
%select{source|destination}2 of '%select{%select{memcpy|wmemcpy}1|%select{memmove|wmemmove}1}0' is %3
'%select{memcpy|wmemcpy}0' between overlapping memory regions
cannot constant evaluate '%select{memcpy|memmove}0' from object of type %1 to object of type %2
'%select{%select{memcpy|wmemcpy}1|%select{memmove|wmemmove}1}0' not supported: %select{size to copy (%4) is not a multiple of size of element type %3 (%5)|source is not a contiguous array of at least %4 elements of type %3|destination is not a contiguous array of at least %4 elements of type %3}2
allocation performed here was not deallocated%plural{0:|: (along with %0 other memory leak%s0)}0
modification of object of const-qualified type %0 is not allowed in a constant expression
a constant expression cannot modify an object that is visible outside that expression
negative shift count %0
dynamic memory allocation is not permitted in constant expressions until C++20
%plural{2:'delete' used to delete pointer to object allocated with 'std::allocator<...>::allocate'|:%select{non-array delete|array delete|'std::allocator<...>::deallocate'}0 used to delete pointer to %select{array object of type %2|non-array object of type %2|object allocated with 'new'}0}1
cannot allocate array; evaluated array bound %0 is negative
call to %select{placement|class-specific}0 %1
cannot allocate memory of %select{incomplete|function}0 type %1
this placement new expression is not yet supported in constant expressions
cannot allocate array; evaluated array bound %0 is too large
cannot allocate array; evaluated array bound %0 is too small to hold %1 explicitly initialized elements
cannot allocate untyped memory in a constant expression; use 'std::allocator<T>::allocate' to allocate memory of type 'T'
control reached end of constexpr function
%select{pointer|reference}0 to %select{|subobject of }1%select{temporary|%3}2 is not a constant expression
non-literal type %0 cannot be used in a constant expression
address of non-static constexpr variable %0 may differ on each invocation of the enclosing function; add 'static' to give it a constant address
cannot %select{access base class of|access derived class of|access field of|access array element of|perform pointer arithmetic on|access real component of|access imaginary component of}0 null pointer
allocated size %0 is not a multiple of size %1 of element type %2
value %0 is outside the range of representable values of type %1
dereferenced pointer past the end of %select{|subobject of }0%select{temporary|%2}1 is not a constant expression
cannot %select{access base class of|access derived class of|access field of|access array element of|ERROR|access real component of|access imaginary component of}0 pointer past the end of object
placement new would change type of storage from %0 to %1
comparison of addresses of subobjects of different base classes has unspecified value
comparison of address of base class subobject %0 of class %1 to field %2 has unspecified value
comparison of address of fields %0 and %2 of %4 with differing access specifiers (%1 vs %3) has unspecified value
comparison has unspecified value
subtracted pointers are not elements of the same array
subtraction of pointers to type %0 of zero size
%select{|||||virtual function called on|dynamic_cast applied to|typeid applied to|construction of|destruction of}0 object '%1' whose dynamic type is not constant
pseudo-destructor call is not permitted in constant expressions until C++20
pure virtual function %q0 called
control flows through the definition of a %select{static|thread_local}0 variable
constexpr evaluation hit maximum step limit; possible infinite loop?
this use of statement expressions is not supported in a constant expression
subobject declared here
temporary created here
%select{|implicit }0use of 'this' pointer is only allowed within the evaluation of a call to a 'constexpr' member function
typeid applied to expression of polymorphic type %0 is not allowed in a constant expression in C++ standards before C++20
%select{|sub}0object of type %1 is not initialized
assignment would change active union member during the initialization of a different member of the same union
indexing of array without known bound is not allowed in a constant expression
non-trivial destruction of type %0 in a constant expression is not supported
flexible array initialization is not yet supported
type %0 has unexpected layout
non-trivial destruction of lifetime-extended temporary with type %0 used in the result of a constant expression is not yet supported
array-to-pointer decay of array member without known bound is not supported
use of reference outside its lifetime is not allowed in a constant expression
initializer of %0 is not a constant expression
initializer of %0 is unknown
initializer of weak variable %0 is not considered constant because it may be different at runtime
cannot construct object of type %0 with virtual base class in a constant expression
cannot evaluate call to virtual function in a constant expression in C++ standards before C++20
comparison between unequal pointers to void has unspecified result
volatile %select{temporary created|object declared|member declared}0 here
covariant thunk required by %0
division by zero
in first definition, possible difference is here
but in '%0' found %select{%2 base %plural{1:class|:classes}2|%2 virtual base %plural{1:class|:classes}2|%ordinal2 base class with different type %3|%ordinal2 %select{non-virtual|virtual}3 base class %4|%ordinal2 base class %3 with %select{public|protected|private|no}4 access specifier}1
definition in module '%0' is here
but in '%0' found %select{enum that is %select{not scoped|scoped}2|enum scoped with keyword %select{struct|class}2|enum %select{without|with}2 specified type|enum with specified type %2|enum with %2 element%s2|%ordinal2 element has name %3|%ordinal2 element %3 %select{has|does not have}4 an initializer|%ordinal2 element %3 has different initializer|}1
but in '%0' found %select{field %2|field %2 with type %3|%select{non-|}3bitfield %2|bitfield %2 with different width expression|%select{non-|}3mutable field %2|field %2 with %select{no|an}3 initializer|field %2 with a different initializer}1
but in '%0' found %select{different return type %2|%ordinal2 parameter with name %3|%ordinal2 parameter with type %3%select{| decayed from %5}4|%ordinal2 parameter with%select{out|}3 a default argument|%ordinal2 parameter with a different default argument|a different body}1
but in '%0' found %select{%select{method %3|constructor|destructor}2 that has %4 parameter%s4|%select{method %3|constructor|destructor}2 with %ordinal4 parameter of type %5%select{| decayed from %7}6|%select{method %3|constructor|destructor}2 with %ordinal4 parameter named %5}1
but in '%0' found %select{end of class|public access specifier|private access specifier|protected access specifier|static assert|field|method|type alias|typedef|data member|friend declaration|function template|method|instance variable|property}1
but in '%0' found %select{||||different static assert|different field|different method|different type alias|different typedef|different data member|different friend declaration|different function template|method|instance variable|property|another unexpected decl}1
but in '%0' found %select{%select{no super class|super class with type %3}2|instance variable '%2' access control is %select{|@private|@protected|@public|@package}3}1
but in '%0' found %select{different return type %2|method name %2|%select{class|instance}2 method|%select{no|'required'|'optional'}2 method control|method with %select{no designater initializer|designater initializer}2|%select{no direct|direct}2 method}1
but in '%0' found %select{property name %2|property %2 with type %3|%select{no|'required'|'optional'}2 property control|no written or default attribute for property|}1
but in '%0' found %select{static assert with different condition|static assert with different message|static assert with %select{|no }2message|%select{method %3|constructor|destructor}2|%select{method %3|constructor|destructor}2 is %select{not deleted|deleted}4|%select{method %3|constructor|destructor}2 is %select{not defaulted|defaulted}4|%select{method %3|constructor|destructor}2 is %select{|pure }4%select{not virtual|virtual}5|%select{method %3|constructor|destructor}2 is %select{not static|static}4|%select{method %3|constructor|destructor}2 is %select{not volatile|volatile}4|%select{method %3|constructor|destructor}2 is %select{not const|const}4|%select{method %3|constructor|destructor}2 is %select{not inline|inline}4|%select{method %3|constructor|destructor}2 with %ordinal4 parameter with%select{out|}5 a default argument|%select{method %3|constructor|destructor}2 with %ordinal4 parameter with a different default argument|%select{method %3|constructor|destructor}2 with %select{no |}4template arguments|%select{method %3|constructor|destructor}2 with %4 template argument%s4|%select{method %3|constructor|destructor}2 with %4 for %ordinal5 template argument|%select{method %3|constructor|destructor}2 with %select{no body|body}4|%select{method %3|constructor|destructor}2 with different body|friend %select{class|function}2|friend %2|friend function %2|function template %2 with %3 template parameter%s3|function template %2 with %ordinal3 template paramter being a %select{type|non-type|template}4 template parameter|function template %2 with %ordinal3 template parameter %select{with no name|named %5}4|function template %2 with %ordinal3 template parameter with %select{no |}4default argument|function template %2 with %ordinal3 template parameter with default argument %4|function template %2 with %ordinal3 template parameter with different type|function template %2 with %ordinal3 template parameter %select{not |}4being a template parameter pack|%select{no attribute|%3}2|}1
but in '%0' found %select{%2 referenced %plural{1:protocol|:protocols}2|%ordinal2 referenced protocol with different name %3}1
but in '%0' found %select{unnamed template parameter %2|template parameter %3|template parameter with %select{no |}2default argument|template parameter with different default argument}1
but in '%0' found %select{%select{typedef|type alias}2 name %3|%select{typedef|type alias}2 %3 with different underlying type %4}1
but in '%0' found %select{data member with name %2|data member %2 with different type %3|data member %2 with%select{out|}3 an initializer|data member %2 with a different initializer|data member %2 %select{is constexpr|is not constexpr}3}1
null passed to a callee that requires a non-null argument
class has base type %0
enumerator %0 with value %1 here
field %0 has type %1 here
field has name %0 here
friend declared here
no corresponding base class here
no corresponding enumerator here
no corresponding field here
no corresponding friend here
class has %0 base %plural{1:class|:classes}0
%select{class|instance}0 method %1 also declared here
no corresponding superclass here
property %0 is implemented with %select{@synthesize|@dynamic}1 here
inherits from superclass %0 here
property is synthesized to ivar %0 here
%select{parameter|parameter pack}0 declared here
%0 is a %select{struct|interface|union|class|enum}1 here
template parameter declared here
template parameter list also declared here
declared here with type %0
%select{non-virtual|virtual}0 derivation here
in second definition, possible difference is here
unimplemented constexpr lambda feature: %0 (coming soon!)
-fsanitize-address-field-padding applied to %0
-fsanitize-address-field-padding ignored for %0 because it %select{is not C++|is packed|is a union|is trivially copyable|has trivial destructor|is standard layout|is in a ignorelisted file|is ignorelisted}1
integer value %0 is outside the valid range of values [%1, %2] for this enumeration type
overflow in expression; result is %0 with type %1
overflow in expression; result is %0 with type %1
'%0' will always evaluate to 'true' in a manifestly constant-evaluated expression
ms_struct may not produce Microsoft-compatible layouts with fundamental data types with sizes that aren't a power of two
template parameter lists have a different number of parameters (%0 vs %1)
template parameter has different kinds in different translation units
field %0 declared with incompatible types in different translation units (%1 vs. %2)
external function %0 declared with incompatible types in different translation units (%1 vs. %2)
instance variable %0 declared with incompatible types in different translation units (%1 vs. %2)
non-type template parameter declared with incompatible types in different translation units (%0 vs. %1)
%select{class|instance}0 method %1 has a different number of parameters in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has a parameter with a different types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has incompatible result types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 is variadic in one translation unit and not variadic in another
property %0 is implemented with %select{@synthesize|@dynamic}1 in one translation but %select{@dynamic|@synthesize}1 in another translation unit
property %0 declared with incompatible types in different translation units (%1 vs. %2)
class %0 has incompatible superclasses
property %0 is synthesized to different ivars in different translation units (%1 vs. %2)
parameter kind mismatch; parameter is %select{not a|a}0 parameter pack
type %0 has incompatible definitions in different translation units
external variable %0 defined in multiple translation units
external variable %0 declared with incompatible types in different translation units (%1 vs. %2)
padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%s2 to align anonymous bit-field
padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%s2 to align %4
padding size of %0 with %1 %select{byte|bit}2%s1 to alignment boundary
field %1 within %0 is less aligned than %2 and is usually due to %0 being packed, which can lead to unaligned accesses
packed attribute is unnecessary for %0
add a deprecation attribute to the declaration to silence this warning
previous command '%select{\|@}0%1' here
previous command '%select{\|@}0%1' (an alias of '\%2') here
end tag
HTML tag started here
did you mean '%0'?
previous documentation
did you mean '%0'?
previous documentation
unknown command tag name '%0'; did you mean '%1'?
'%select{\|@}0%select{class|interface|protocol|struct|union}1' command should not be used in a comment attached to a non-%select{class|interface|protocol|struct|union}2 declaration
duplicated command '%select{\|@}0%1'
empty paragraph passed to '%select{\|@}0%1' command
'%select{\|@}0%select{classdesign|coclass|dependency|helper|helperclass|helps|instancesize|ownership|performance|security|superclass}1' command should not be used in a comment attached to a non-container declaration
declaration is marked with '%select{\|@}0deprecated' command but does not have a deprecation attribute
'%select{\|@}0%select{function|functiongroup|method|methodgroup|callback}1' command should be used in a comment attached to %select{a function|a function|an Objective-C method|an Objective-C method|a pointer to function}2 declaration
HTML end tag '%0' is forbidden
HTML end tag does not match any start tag
HTML tag '%0' requires an end tag
HTML start tag '%0' closed by '%1'
HTML start tag prematurely ended, expected attribute name or '>'
expected quoted string after equals sign
'%select{\|@}0%1' command has %plural{0:no|:%2}2 word argument%s2, expected %3
parameter '%0' is already documented
unrecognized parameter passing direction, valid directions are '[in]', '[out]' and '[in,out]'
'%select{\|@}0param' command used in a comment that is not attached to a function declaration
parameter '%0' not found in the function declaration
whitespace is not allowed in parameter passing direction
'%select{\|@}0%1' command used in a comment that is attached to a %select{function returning void|constructor|destructor|method returning void}2
'%select{\|@}0%1' command used in a comment that is not attached to a function or method declaration
template parameter '%0' is already documented
'%select{\|@}0tparam' command used in a comment that is not attached to a template declaration
template parameter '%0' not found in the template declaration
unknown command tag name
'%select{\|@}0%1' command does not terminate a verbatim text block
error opening '%0': required by the CrossTU functionality
error parsing index file: '%0' line: %1 '<USR-Length>:<USR> <File-Path>' format expected
multiple definitions are found for the same key in index 
imported AST from '%0' had been generated for a different target, current: %1, imported: %2
this builtin is only available on 32-bit targets
this builtin is only available on 64-bit targets
cannot add 'abi_tag' attribute in a redeclaration
%select{return|parameter|variable|field|instance variable|synthesized instance variable}0 type %1 is an abstract class
%1 is a %select{private|protected}0 member of %3
%select{base class|inherited virtual base class}0 %1 has %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR*|}2constructor
calling a %select{private|protected}0 constructor of class %2
ISO C++11 does not allow access declarations; use using declarations instead
calling a %select{private|protected}1 destructor of class %0
base class %0 has %select{private|protected}1 destructor
exception object of type %0 has %select{private|protected}1 destructor
field of type %1 has %select{private|protected}2 destructor
instance variable of type %0 has %select{private|protected}1 destructor
temporary of type %0 has %select{private|protected}1 destructor
variable of type %1 has %select{private|protected}2 destructor
inherited virtual base class %1 has %select{private|protected}2 destructor
field of type %0 has %select{private|protected}2 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}1constructor
friend function %1 is a %select{private|protected}0 member of %3
capture of variable '%0' as type %1 calls %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}2constructor
address of overloaded function %0 is ambiguous
cannot form member pointer of type %0 without '&' and class name
address of overloaded function %0 does not match required type %1
address of overloaded function %0 cannot be converted to type %1
cannot take address of function %0 because parameter %1 has pass_object_size attribute
conflicting address space qualifiers are provided between types %0 and %1
'delete' cannot delete objects of type %0 in address space '%1'
'new' cannot allocate objects of type %0 in address space '%1'
cannot take address of function %0 because its constraints are not satisfied
cannot take address of function %0 because it has one or more non-tautological enable_if conditions
TLS model '%0' is not yet supported on AIX
alias definition of %0 after tentative definition
definition %0 cannot also be an %select{alias|ifunc}1
aliases are not supported on darwin
CUDA does not support aliases
extraneous template parameter list in alias template declaration
'align_value' attribute requires integer constant
%0 attribute cannot be applied to %select{a function parameter|a variable with 'register' storage class|a 'catch' variable|a bit-field|an enumeration}1
redeclaration has different alignment requirement (%1 vs %0)
%0 must be specified on definition if it is specified on any declaration
requested alignment is less than minimum alignment of %1 for type %0
aligned %select{allocation|deallocation}0 function of type '%1' is %select{only|not}4 available on %2%select{ %3 or newer|}4
'aligned' attribute requires integer constant
requested alignment is dependent but declaration is not dependent
requested alignment is not a power of 2
requested alignment must be %0 or smaller
requested alignment must be %0 or greater
invalid application of 'alignof' to a field of a class still being defined
allocating an object of abstract class type %0
expected initializer
ambiguous cast from base %0 to derived %1:%2
ambiguous conversion of delete expression of type %0 to a pointer
ambiguous conversion from derived class %0 to base class %1:%2
destructor of class %0 is ambiguous
constructor of %0 inherited from multiple base class subobjects
member %0 found in multiple base classes of different types
non-static member %0 found in multiple base-class subobjects of type %1:%2
ambiguous conversion from pointer to member of %select{base|derived}0 class %1 to pointer to member of %select{derived|base}0 class %2:%3
reference to %0 is ambiguous
multiple suitable %0 functions in %1
a type named %0 is hidden by a declaration in a different namespace
anonymous bit-field has negative width (%0)
anonymous bit-field cannot have qualifiers
anonymous property is not supported
anonymous %select{struct|union}0 can only contain non-static data members
member of anonymous %select{struct|union}0 redeclares %1
anonymous %select{struct|union}0 cannot contain a %select{private|protected}1 data member
functions cannot be declared in an anonymous %select{struct|union}0
static members cannot be declared in an anonymous %select{struct|union}0
types cannot be declared in an anonymous %select{struct|union}0
anonymous %select{structs|structs and classes}0 must be %select{struct or union|class}0 members
anonymous unions at namespace or global scope must be declared 'static'
anonymous union at class scope must not have a storage specifier
%select{x86|x86-64}0 'interrupt' attribute only applies to functions that have %select{a 'void' return type|only a pointer parameter optionally followed by an integer parameter|a pointer as the first parameter|a %2 type as the second parameter}1
interrupt service routine cannot be called directly
must explicitly describe intended ownership of an object array parameter
existing instance variable %1 for property %0 with %select{unsafe_unretained|assign}2 attribute must be __unsafe_unretained
cannot perform atomic operation on a pointer to type %0: type has non-trivial ownership
cannot capture __autoreleasing variable in a %select{block|lambda by copy}0
%select{__block variables|global variables|fields|instance variables}0 cannot have __autoreleasing ownership
incompatible types casting %0 to %1 with a %select{__bridge|__bridge_transfer|__bridge_retained}2 cast
cast of %select{Objective-C|block|C}0 pointer type %1 to %select{Objective-C|block|C}2 pointer type %3 cannot use %select{__bridge|__bridge_transfer|__bridge_retained}4
%select{cast|implicit conversion}0 of %select{Objective-C|block|C}1 pointer type %2 to %select{Objective-C|block|C}3 pointer type %4 requires a bridged cast
collection expression type %0 is a forward declaration
%select{implicit conversion|cast}0 of weak-unavailable object of type %1 to a __weak object of type %2
method implementation does not match its declaration
ARC forbids explicit message send of %0
ARC forbids %select{implementation|synthesis}0 of %1
ARC forbids use of %0 in a @selector
%select{|unsafe_unretained|strong|weak}1 property %0 may not also be declared %select{|__unsafe_unretained|__strong|__weak|__autoreleasing}2
%select{pointer|reference}1 to non-const type %0 with no explicit ownership
init methods must return a type related to the receiver type
method was declared as %select{an 'alloc'|a 'copy'|an 'init'|a 'new'}0 method, but its implementation doesn't match because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
no visible @interface for %0 declares the selector %1
no known %select{instance|class}1 method for selector %0
%select{implicit conversion|cast}0 of %select{%2|a non-Objective-C pointer type %2|a block pointer|an Objective-C pointer|an indirect pointer to an Objective-C pointer}1 to %3 is disallowed with ARC
multiple methods named %0 found with mismatched result, parameter type or attributes
'new' cannot allocate an array of %0 with no explicit ownership
explicit ownership qualifier on cast result has no effect
passing address of %select{non-local|non-scalar}0 object to __autoreleasing parameter for write-back
ARC forbids synthesizing a property of an Objective-C object with unspecified ownership or storage attribute
performSelector names a selector which retains the object
pseudo-destructor destroys object of type %0 with inconsistently-qualified type %1
receiver %0 for class message is a forward declaration
receiver type %0 for instance message is a forward declaration
existing instance variable %1 for strong property %0 may not be %select{|__unsafe_unretained||__weak}2
thread-local variable has non-trivial ownership: type is %0
incompatible pointer types passing retainable parameter of type %0to a CF function expecting %1 type
class is incompatible with __weak references
the result of a delegate init call must be immediately returned or assigned to 'self'
cannot create __weak reference in file using manual reference counting
dereferencing a __weak pointer is not allowed due to possible null value caused by race condition, assign it to strong variable first
cannot create __weak reference because the current deployment target does not support weak references
assignment of a weak-unavailable object to a __weak object
synthesizing __weak instance variable of type %0, which does not support weak references
parameter may not be qualified with an address space
argument value %0 is outside the valid range [%1, %2]
argument %0 value should represent a contiguous bit field
argument should be a multiple of %0
argument should be a power of 2
argument should be an 8-bit value shifted by a multiple of 8 bits
argument should be an 8-bit value shifted by a multiple of 8 bits, or in the form 0x??FF
arithmetic on pointer to interface %0, which is not a constant size for this architecture and platform
coprocessor %0 must be configured as %select{GCP|CDE}1
DSB argument value %0 is outside valid set {0-15, 16, 20, 24, 28}
DSB argument value %0 requires FEAT_XS support
invalid special register for builtin
array designator range [%0, %1] is empty
array designator value '%0' is negative
array designator cannot initialize non-array type %0
array designator index (%0) exceeds array bounds (%1)
array has %select{incomplete|sizeless}0 element type %1
cannot initialize array %diff{of type $ with array of type $|with different type of array}0,1
initializing wide char array with incompatible wide string literal
initializing wide char array with non-wide string literal
cannot initialize array %diff{of type $ with non-constant array of type $|with different type of array}0,1
array initializer must be an initializer list%select{| or string literal| or wide string literal}0
initializing 'char8_t' array with plain string literal
%select{|ISO C++20 does not permit }0initialization of char array with UTF-8 string literal%select{ is not permitted by '-fchar8_t'|}0
initializing char array with wide string literal
array size must be specified in new expression with no initializer
array of abstract class type %0
array section does not specify contiguous storage
array section does not specify length for outermost dimension
ambiguous conversion of array size expression of type %0 to an integral or enumeration type
array size expression of type %0 requires explicit conversion to type %1
array size expression has incomplete class type %0
size of array has non-integer type %0
array size expression must have integral or %select{|unscoped }0enumeration type, not %1
variable length array must be bound in function definition
star modifier used outside of function prototype
%0 used in non-outermost array type derivation
%0 used in array declarator outside of function prototype
array is too large (%0 elements)
automatic variable qualified with an%select{| invalid}0 address space
bad type for named register variable
asm operand has incomplete type %0
more than one input constraint matches the same output '%0'
register '%0' unsuitable for global register variables on this target
invalid input constraint '%0' in asm
invalid input size for constraint '%0'
invalid lvalue in asm input for constraint '%0'
invalid lvalue in asm output
invalid output constraint '%0' in asm
invalid output size for constraint '%0'
parameter references not allowed in naked functions
'this' pointer references not allowed in naked functions
reference to a %select{bit-field|vector element|global register variable}0 in asm %select{input|output}1 with a memory constraint '%2'
size of register '%0' does not match variable size
unsupported inline asm: input with type %diff{$ matching output with type $|}0,1
asm constraint has an unexpected number of alternatives: %0 vs %1
unknown register name '%0' in asm
unwind clobber can't be used with asm goto
type %0 in generic association compatible with previously specified type %1
type %0 in generic association incomplete
type %0 in generic association not an object type
type %0 in generic association is a variably modified type
use of @defs is not supported on this architecture and platform
argument to atomic builtin of type '_BitInt' is not supported
address argument to atomic builtin cannot be const-qualified (%0 invalid)
Atomic memory operand must have a power-of-two size
address argument to atomic builtin must be a pointer (%0 invalid)
address argument to atomic builtin must be a pointer to integer, floating-point or pointer (%0 invalid)
address argument to atomic builtin must be a pointer to integer or pointer (%0 invalid)
address argument to atomic builtin must be a pointer to 1,2,4,8 or 16 byte type (%0 invalid)
address argument to load or store exclusive builtin must be a pointer to 1,2,4 or 8 byte type (%0 invalid)
atomic %select{load|store}0 requires runtime support that is not available for this target
synchronization scope argument to atomic operation is invalid
address argument to atomic operation must be a pointer to _Atomic type (%0 invalid)
address argument to atomic operation must be a pointer to %select{|atomic }0integer (%1 invalid)
address argument to atomic operation must be a pointer to %select{|atomic }0integer or pointer (%1 invalid)
address argument to atomic operation must be a pointer to %select{|atomic }0integer, pointer or supported floating point type (%1 invalid)
address argument to %select{atomic|__sync}0 operation must be a pointer to a non address discriminated type (%1 invalid)
address argument to atomic operation must be a pointer to non-%select{const|constant}0 _Atomic type (%1 invalid)
address argument to atomic operation must be a pointer to non-const type (%0 invalid)
address argument to atomic operation must be a pointer to a trivially-copyable type (%0 invalid)
atomic property of reference type %0 cannot have non-trivial assignment operator
_Atomic cannot be applied to %select{incomplete |array |function |reference |atomic |qualified |sizeless ||integer }0type %1 %select{|||||||which is not trivially copyable|}0
%0 attribute expression never produces a constant expression
the type %0 is already explicitly ownership-qualified
%0 attribute can only be applied to a %select{function|method}1 with an error parameter
%0 attribute with '%1' convention can only be applied to a %select{function|method}2 returning %select{an integral type|a pointer}3
tls_model must be "global-dynamic", "local-dynamic", "initial-exec" or "local-exec"
function type may not be qualified with an address space
multiple address spaces specified for type
address space is negative
address space is larger than the maximum supported (%0)
requested alignment must be %0 bytes or smaller
%0 attribute argument is invalid: %select{max must be 0 since min is 0|min must not be greater than max}1
%0 attribute must be greater than 0
%0 attribute requires parameter %1 to be %select{int or bool|an integer constant|a string|an identifier|a constant expression|a builtin function}2
%0 attribute parameter %1 is out of bounds
%0 attribute parameter %1 is out of bounds: %plural{0:no parameters to index into|1:can only be 1, since there is one parameter|:must be between 1 and %2}2
%0 attribute requires integer constant between %1 and %2 inclusive
%0 attribute requires %select{int or bool|an integer constant|a string|an identifier}1
%0 attribute requires an integer type argument
%0 attribute requires a pointer type argument
'__clang_arm_builtin_alias' attribute can only be applied to an ARM builtin
%0 is only supported when '-msve-vector-bits=<bits>' is specified with a value of 128, 256, 512, 1024 or 2048.
'__clang_arm_mve_strict_polymorphism' attribute can only be applied to an MVE/NEON vector type
Neon vector size must be 64 or 128 bits
invalid SVE vector size '%0', must match value set by '-msve-vector-bits' ('%1')
%0 attribute references parameter %1, but the function %2 has only %3 parameters
%0 attribute can only be applied to a ARM, HLSL or RISC-V builtin
'cleanup' argument %select{|%1 |%1 }0is not a %select{||single }0function
'cleanup' function %0 parameter has %diff{type $ which is incompatible with type $|incompatible type}1,2
'cleanup' function %0 must take 1 parameter
'__declspec(dllexport)' cannot be applied to more than one default constructor in %0
attribute %q0 cannot be applied to a deleted function
lambda cannot be declared %0
attribute %q0 cannot be applied to member of %q1 class
%q0 must have external linkage when declared %q1
redeclaration of %q0 cannot add %q1 attribute
%q0 cannot be thread local when declared %q1
definition of dllimport data
dllimport cannot be applied to non-inline function definition
cannot define non-inline dllimport template specialization
definition of dllimport static field not allowed
%0 attribute argument may only refer to a function parameter of integer type
%select{a reference type|an array type|a non-vector or non-vectorizable scalar type}0 is an invalid argument to attribute %1
invalid argument expression to firebloom attribute
'_BitInt' vector element width must be %select{a power of 2|at least as wide as 'CHAR_BIT'}0
%0 attribute is invalid for the implicit this argument
invalid matrix element type %0
%0 attribute cannot be applied to a declaration
vector size not an integral multiple of component size
%0 attribute applied to non-SVE type %1
invalid vector element type %0
%0 attribute does not appear on the first declaration
multiple garbage collection attributes specified for type
%0 attribute has no effect on defaulted or deleted functions
%0 attribute is permitted on definitions only
empty %0 cannot be composed with named ones
%0 attribute cannot be applied to non-static member functions
%0 attribute cannot be used with pointers to members
function type with %0 attribute must have C linkage
%0 attribute is not supported in %select{C|C++|Objective-C}1
%0 attribute is not supported on '%1'
%0 attribute can only be applied once per parameter
attribute only applies to output parameters
redeclaration of %0 must %select{not |}1have the 'overloadable' attribute
at most one overload for a given name may lack the 'overloadable' attribute
'overloadable' function %0 must have a prototype
%0 attribute parameter types do not match: parameter %1 of function %2 has type %3, but parameter %4 of function %5 has type %6
%0 attribute only applies to%select{| constant}1 pointer arguments
argument %0 to 'preferred_name' attribute is not a typedef for a specialization of %1
'regparm' parameter must be between 0 and %0 inclusive
'regparm' is not valid on this platform
attribute %0 is supported in the OpenCL version %1%select{| onwards}2
%0 attribute requires a %select{positive|non-negative}1 integral compile time constant expression
argument to %select{'code_seg'|'section'}1 attribute is not valid for this target: %0
'selectany' can only be applied to data items with external linkage
'sentinel' parameter 1 less than zero
'sentinel' parameter 2 not 0 or 1
%0 size too large
%0 attribute cannot be applied to sizeless type %1
'symbol_metadata_footnote' attributes must use section names that are between 1 and 9 characters long, excluding the leading underscores.
%0 attribute takes at least %1 argument%s1
%0 attribute takes no more than %1 argument%s1
%0 attribute is not supported on targets missing %1; specify an appropriate -march= or -mcpu=
the vecreturn attribute can only be used on a POD (plain old data) class or structure (i.e. no virtual functions)
the vecreturn attribute can only be used on a class or structure with one member, which must be a vector
weak declaration cannot have internal linkage
weakref declaration of %0 must be in a global context
weakref declaration must have internal linkage
weakref declaration of %0 must also have an alias attribute
%0 attribute only applies to %select{functions|unions|variables and functions|functions and methods|functions, methods and blocks|functions, methods, and parameters|variables|variables and fields|variables, data members and tag types|types and namespaces|variables, functions and classes|kernel functions|non-K&R-style functions}1
%0 attribute only applies to %1
%0 attribute %plural{0:takes no arguments|1:takes one argument|:requires exactly %1 arguments}1
%0 attribute references function %1, which %plural{0:takes no arguments|1:takes one argument|:takes exactly %2 arguments}2
zero %0 size
%0 and %1 attributes are not compatible
cannot pass bit-field as __auto_type initializer in C
%select{'auto'|'decltype(auto)'|'__auto_type'|template arguments}0 deduced as %1 in declaration of %2 and deduced as %3 in declaration of %4
functional-style cast to %0 has incompatible initializer of type %1
initializer for functional-style cast to %0 contains multiple expressions
initializer for functional-style cast to %0 is empty
cannot deduce actual type for %1 from %select{parenthesized|nested}0 initializer list
cannot deduce return type %0 from returned value of type %1
'%select{auto|decltype(auto)}0' in return type deduced as %1 here but deduced as %2 in earlier return statement
cannot deduce return type %0 for function with no return statements
cannot deduce return type from initializer list
cannot deduce return type %0 from omitted return expression
function %0 with deduced return type cannot be used before it is defined
function with deduced return type cannot be virtual
deduced conflicting types %diff{($ vs $) |}0,1for initializer list element type
cannot use __auto_type with initializer list in C
'auto' return without trailing return type; deduced return types are a C++14 extension
new expression for type %0 contains multiple constructor arguments
new expression for type %0 has incompatible constructor argument of type %1
new expression for type %0 requires a constructor argument
%select{function with deduced return type|declaration with trailing return type}0 must be the only declaration in its group
%select{'auto'|'decltype(auto)'|'__auto_type'|use of %select{class template|function template|variable template|alias template|template template parameter|concept|template}2 %3 requires template arguments; argument deduction}0 not allowed %select{in function prototype|in non-static struct member|in struct member|in non-static union member|in union member|in non-static class member|in interface member|in exception declaration|in template parameter until C++17|in block literal|in template argument|in typedef|in type alias|in function return type|in conversion function type|here|in lambda parameter|in type allocated by 'new'|in K&R-style function parameter|in template parameter|in friend declaration|in function prototype that is not a function declaration|in requires expression parameter}1
'auto' variable template instantiation is not allowed
variable %0 with type %1 has incompatible initializer of type %2
cannot deduce actual type for variable %0 with type %1 from initializer list
initializer for variable %0 with type %1 contains multiple expressions
initializer for variable %0 with type %1 is empty
cannot deduce type for variable %1 with type %2 from %select{parenthesized|nested}0 initializer list
declaration of variable %0 with deduced type %1 requires an initializer
variable %0 declared with deduced type %1 cannot appear in its own initializer
return type of 'await_suspend' is required to be 'void' or 'bool' (have %0)
%0 is an incomplete type
property implementation must have its declaration in the category %0
%select{const_cast||||C-style cast|functional-style cast|}0 to %2, which is not a reference, pointer-to-object, or pointer-to-data-member
address of overloaded function %0 cannot be cast to type %1
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|addrspace_cast}0 from %1 to %2 converts between mismatching address spaces
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from bit-field lvalue to reference type %2
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|addrspace_cast}0 from %1 to %2 is not allowed
cannot %select{||reinterpret_cast||C-style cast||}0 from member pointer type %1 to member pointer type %2 of different size
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2 casts away qualifiers
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|addrspace_cast}0 from rvalue to reference type %2
%select{||reinterpret_cast||C-style cast||}0 from scalar %1 to vector %2 of different size
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2, which are not related by inheritance, is not allowed
%select{||reinterpret_cast||C-style cast||}0 from vector %1 to scalar %2 of different size
%select{||reinterpret_cast||C-style cast||}0 from vector %1 to vector %2 of different size
%0 is not a class type
%0 is not polymorphic
cannot use dynamic_cast to convert from %0 to %1
invalid target type %0 for dynamic_cast; target type must be a reference or pointer type to a defined class
%0 cannot be used as the type of a kernel parameter
cannot cast from lvalue of type %1 to rvalue reference type %2; types are not compatible
left hand operand to %0 must be a %select{|pointer to }1class compatible with the right hand operand, but is %2
right hand operand to %0 has non-pointer-to-member type %1
function multiversioning doesn't support %select{feature|architecture}0 '%1'
cannot allocate %select{function|reference}1 type %0 with new
%0 cannot be the name of a parameter
parameter name cannot have template arguments
property implementation must be in a class or category implementation
property implementation must have its declaration in interface %0 or one of its extensions
bad receiver type %0
reinterpret_cast cannot resolve overloaded function %0 to type %1
reinterpret_cast of a %0 to %1 needs its address, which is not allowed
cast from pointer to smaller type %2 loses information
cannot cast from rvalue of type %1 to rvalue reference type %2; types are not compatible
cannot cast from type %1 to member pointer type %2
address of overloaded function %0 cannot be static_cast to type %1
cannot cast from type %1 to pointer type %2
%0 cannot be the name of a variable or data member
base class %0 has a flexible array member
unions cannot have base classes
base class initializer %0 names both a direct base class and an inherited virtual base class
constructor initializer %0 does not name a class
base specifier must name a class
%0 attribute cannot be applied to a base specifier
binding %0 cannot appear in the initializer of its own decomposition declaration
__builtin_bit_cast %select{source|destination}0 type must be trivially copyable
__builtin_bit_cast source size does not equal destination size (%0 vs %1)
%select{signed|unsigned}0 _BitInt must have a bit size of at least %select{2|1}0
%select{signed|unsigned}0 _BitInt of bit sizes greater than %1 not supported
bit-field %0 has negative width (%1)
named bit-field %0 has zero width
%select{bit-field %1|anonymous bit-field}0 is too wide (%2 bits)
width of%select{ anonymous|}0 bit-field%select{| %1}0 (%2 bits) exceeds the %select{width|size}3 of its type (%4 bit%s4)
variable is not assignable (missing __block type specifier)
declaration of block scope identifier with linkage cannot have an initializer
__block attribute not allowed, only allowed on local variables
__block attribute not allowed on declaration with a variably modified type
non-void block should return a value
block cannot return %select{array|function}0 type %1
blocks support disabled - compile with -fblocks or %select{pick a deployment target that supports them|for OpenCL C 2.0 or OpenCL C 3.0 with __opencl_c_device_enqueue feature}0
reference to non-static member function must be called%select{|; did you mean to call it with no arguments?}0
%select{string|character|boolean|numeric}0 literal must be prefixed by '@' in a collection
'break' statement not in loop or switch statement
__builtin_btf_type_id argument %0 not a constant
first argument to __builtin_annotation must be an integer
second argument to __builtin_annotation must be a non-wide string constant
this builtin is not supported on the requested cpu, please specify -mcpu=%0 or newer
definition of builtin function %0
builtin functions must be directly called
function-style cast to a builtin type can only take one argument
%ordinal0 argument must be a %select{vector, integer or floating point type|matrix|pointer to a valid matrix element type|signed integer or floating point type|vector type|floating point type|vector of integers}1 (was %2)
%select{non-pointer|function pointer|void pointer}0 argument to '__builtin_launder' is not allowed
argument to __builtin_longjmp must be a constant 1
__builtin_longjmp is not supported for the current target
matrix types extension is disabled. Pass -fenable-matrix to enable it
%0 dimension is outside the allowed range [1, %1]
the pointee of the 2nd argument must match the element type of the 1st argument (%0 != %1)
%0 argument must be a constant unsigned integer expression
cannot store matrix to read-only pointer
stride must be greater or equal to the number of rows
unsupported signature for %q0
call to '%select{__builtin_operator_new|__builtin_operator_delete}0' selects non-usual %select{allocation|deallocation}0 function
cannot redeclare builtin function %0
'%0' is only available in %1
__builtin_setjmp is not supported for the current target
builtin is not supported on this target
this builtin is only available on x86-64 and aarch64 targets
%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature, not permitted in C++
calling %0 with incomplete return type %1
argument type %0 is incomplete
calling function with incomplete return type %0
declaring overloaded %0 as 'static' is a C++2b extension
'callback' attribute argument %0 is not a known function parameter
'callback' attribute specifies invalid callback callee
multiple 'callback' attributes specified
'callback' attribute specifies no callback callee
'callback' attribute callee may not be variadic
'callback' attribute callee does not have function type
'callback' argument at position %0 references unavailable implicit 'this'
'called_once' attribute only applies to function-like parameters
cannot find suitable %select{getter|setter}0 for property %1
cannot form a pointer-to-member to member %0 of reference type %1
cannot pass non-trivial C object of type %0 by value to variadic %select{function|block|method|constructor}1
cannot pass object with interface type %0 by value through variadic %select{function|block|method|constructor}1
cannot pass object with interface type %1 by value to variadic %select{function|block|method|constructor}2; expected type from format string was %3
cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2
cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
capture host variable %0 by reference in device or host device lambda function
capturing a structured binding is not yet supported in OpenMP
__block variable %0 cannot be captured in a %select{lambda expression|captured statement}1
non-local lambda expression cannot have a capture-default
%0 in capture list does not name a variable
%0 can appear only once in a capture list
%0 cannot be captured because it does not have automatic storage duration
by-copy capture of value of abstract type %0
by-copy capture of variable %0 with %select{incomplete|sizeless}1 type %2
%select{function|parameter}0 declared '[[carries_dependency]]' after its first declaration
'[[carries_dependency]]' attribute only allowed on parameter in a function declaration or lambda
'case' statement not in switch statement
cannot type-cast from __bf16
casting from randomized structure pointer type %0 to %1
operand of type %0 cannot be cast to a pointer type
pointer cannot be cast to type %0
cannot type cast @selector expression
cannot type-cast to __bf16
cannot catch incomplete type %0
cannot catch pointer to incomplete type %0
cannot catch reference to incomplete type %0
@catch parameter is not a pointer to an interface type
cannot catch exceptions by rvalue reference
cannot catch %select{|reference to }0sizeless type %1
cannot catch variably modified type %0
cannot define %select{category|class extension}0 for undefined class %1
property declared in category %0 cannot be implemented in class implementation
function declared '%0' here was previously declared %select{'%2'|without calling convention}1
parameter %0 must have a complete type to use function %1 with the %2 calling convention
function with no prototype cannot use the %0 calling convention
variadic function cannot use %0 calling convention
CFString literal is not a string constant
circular inheritance between %0 and %1
cannot declare class extension for %0 after class implementation
base %0 is marked '%select{final|sealed}1'
property %0 is a class property; did you mean to access it with class '%1'?
%0 redeclared with '%1' access
'objc_class_stub' attribute cannot be specified on a class that does not have the 'objc_subclassing_restricted' attribute
property follows Cocoa naming convention for returning 'owned' objects
the type %0 is not a pointer to a fast-enumerable object
type of machine mode does not support base vector types
compound literal in function scope may not be qualified with an address space
%select{block pointer|pointer|reference}0 to function type %select{%2 |}1cannot have '%3' qualifier
concept declarations may only appear in global or namespace scope
extraneous template parameter list in concept definition
concept cannot have associated constraints
concept template parameter list must have at least one parameter; explicit specialization of concepts is not allowed
conditional expression returns %select{values with incompatible nested pointer types|functions with incompatible firebloom attributes}2%diff{ $ and $|}0,1
operands to conditional of types%diff{ $ and $|}0,1 are incompatible in ARC mode
conditional expression is ambiguous; %diff{$ can be converted to $ and vice versa|types can be convert to each other}0,1
conditional expression is ambiguous; %diff{$ and $|types}0,1 can be converted to several common types
cannot mix vectors and extended vectors in a vector conditional
vector condition type %0 and result type %1 do not have elements of the same size
GNU vector conditional operand cannot be %select{void|a throw expression}0
vector operands to the vector conditional must be the same type %diff{($ and $)|}0,1}
enumeration type %0 is not allowed in a vector conditional
vector condition type %0 and result type %1 do not have the same number of elements
%select{left|right}1 operand to ? is void, but %select{right|left}1 operand is of type %0
CUDA special function '%0' must have scalar return type
conflicting types for alias %0
conflicting option '-fcoro-aligned-allocation' and '-fno-aligned-allocation'
conflicting code segment specifiers
instance variable %0 has conflicting bit-field width
conflicting instance variable names: %0 vs %1
instance variable %0 has conflicting type%diff{: $ vs $|}1,2
virtual function %0 has different attributes %diff{($) than the function it overrides (which has $)|than the function it overrides}1,2
virtual function %0 has different calling convention attributes %diff{($) than the function it overrides (which has calling convention $)|than the function it overrides}1,2
conflicting super class name %0
conflicting types for %0
argument to %0 must be a constant integer
consteval function %0 cannot override a non-consteval function
statement not allowed in %select{constexpr|consteval}1 %select{function|constructor}0
no return statement in %select{constexpr|consteval}0 function
destructor cannot be declared %select{<ERROR>|constexpr|consteval|constinit}0
destructor cannot be declared %select{<ERROR>|constexpr|consteval|constinit}0 because %select{data member %2|base class %3}1 does not have a constexpr destructor
constexpr if condition is not a constant expression
variable of non-literal type %1 cannot be defined in a constexpr %select{function|constructor}0 before C++2b
'main' is not allowed to be declared %select{constexpr|consteval}0
%select{constexpr|consteval}2 %select{function|constructor}1's %ordinal0 parameter type %3 is not a literal type
%select{constexpr|consteval}0 function's return type %1 is not a literal type
%select{non-constexpr|constexpr|consteval}1 declaration of %0 follows %select{non-constexpr|constexpr|consteval}2 declaration
non-void %select{constexpr|consteval}1 function %0 should return a value
declaration of constexpr static data member %0 requires an initializer
%select{class|struct|interface|union|enum}0 cannot be marked %select{<ERROR>|constexpr|consteval|constinit}1
constexpr variable cannot have non-literal type %0
constexpr variable %0 must have constant destruction
constexpr variable %0 must be initialized by a constant expression
virtual function cannot be constexpr
constexpr %select{member function|constructor}0 not allowed in %select{struct|interface|class}1 with virtual base %plural{1:class|:classes}2
variably-modified type %0 cannot be used in a constexpr %select{function|constructor}1
%select{<ERROR>|constexpr|consteval|constinit}0 can only be used in %select{|variable and function|function|variable}0 declarations
'constinit' specifier added after initialization of variable
local variable cannot be declared 'constinit'
non-templated function cannot have a requires clause
virtual function cannot have a requires clause
copy constructor must pass its first argument by reference
constructor cannot be declared '%0'
constructor cannot be redeclared
constructor cannot have a return type
class extension has no primary class
cannot jump from this continue statement to the loop increment; jump bypasses initialization of loop condition variable
'continue' statement not in loop statement
conversion function must be a non-static member function
conversion function cannot be redeclared
conversion function cannot have a return type
conversion function cannot convert to an array type
conversion function cannot convert to a function type
conversion function cannot be variadic
cannot specify any part of a return type in the declaration of a conversion function%select{; put the complete type after 'operator'|; use a typedef to declare a conversion to %1|; use an alias template to declare a conversion to %1|}0
conversion function cannot have any parameters
first two arguments to __builtin_convertvector must have the same number of elements
first argument to __builtin_convertvector must be a vector
second argument to __builtin_convertvector must be a vector type
'&' must precede a capture when the capture default is '='
std::coroutine_handle must have a member named '%0'
'%1' cannot be used in %select{a constructor|a destructor|the 'main' function|a constexpr function|a function with a deduced return type|a varargs function|a consteval function}0
Objective-C methods as coroutines are not yet supported
'%0' cannot be used outside a function
the expression 'co_await __promise.final_suspend()' is required to be non-throwing
%0: 'get_return_object_on_allocation_failure()' must be a static member function
the coroutine promise type %0 declares both 'return_value' and 'return_void'
%0 is required to have a non-throwing noexcept specification when the promise type declares 'get_return_object_on_allocation_failure()'
this function cannot be a coroutine: %0 is an incomplete type
%0 is required to declare the member 'unhandled_exception()'
this function cannot be a coroutine: missing definition of specialization %0
'%0' cannot be used in an unevaluated context
unable to find %select{'::operator new(size_t, nothrow_t)'|'::operator new(size_t, align_val_t, nothrow_t)'}1 for %0
'operator new' provided by %0 is not usable with the function signature of %1
'%0' cannot be used in the handler of a try block
return type of virtual function %3 is not covariant with the return type of the function it overrides (ambiguous conversion from derived class %0 to base class %1:%2)
invalid covariant return for virtual function: %1 is a %select{private|protected}2 base class of %0
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is incomplete)
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is not derived from %2)
return type of virtual function %0 is not covariant with the return type of the function it overrides (class type %1 is more qualified than class type %2
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 has different qualifiers than %2)
'cpu_dispatch' function redeclared with different CPUs
multiple 'cpu_specific' functions cannot specify the same CPU: %0
%select{constructor|destructor}1 %0 must not return void expression
illegal device builtin %select{surface|texture}0 reference class template %1 declared here
illegal device builtin %select{surface|texture}0 reference type %1 declared here
cannot use '%0' in %select{__device__|__global__|__host__|__host__ __device__}1 function
__shared__ variable %0 cannot be 'extern'
__shared__ local variables not allowed in %select{__device__|__global__|__host__|__host__ __device__}0 functions
__constant__, __device__, and __managed__ are not allowed on non-static local variables
%select{__device__|__global__|__host__|__host__ __device__}0 function %1 cannot overload %select{__device__|__global__|__host__|__host__ __device__}2 function %3
constexpr function %0 without __host__ or __device__ attributes cannot overload __device__ function with same signature.  Add a __host__ attribute, or build with -fno-cuda-host-device-constexpr.
cannot use variable-length arrays in %select{__device__|__global__|__host__|__host__ __device__}0 functions
module name '%0' specified on command line does not match name of module
%select{reference|backing array for 'std::initializer_list'}2 %select{|subobject of }1member %0 %select{binds to|is}2 a temporary object whose lifetime would be shorter than the lifetime of the constructed object
dealloc return type must be correctly specified as 'void' under ARC, instead of %0
GNU decimal type extension not supported
%0 attribute cannot be applied to a statement
'%0' declared as an array with a negative size
declarator requires an identifier
'__declspec(thread)' applied to variable that already has a thread-local storage specifier
'decltype(auto)' cannot be combined with other type specifiers
cannot form %select{pointer to|reference to|array of}0 'decltype(auto)'
'decltype(auto)' can only be used as a return type in a function declaration
cannot deduce 'decltype(auto)' from initializer list
'decltype(auto)' not allowed here
'decltype' cannot be used to name a declaration
cannot decompose members of ambiguous base class %1 of %0:%2
cannot decompose class type %0 because it has an anonymous %select{struct|union}1 member
decomposition declaration not permitted in this context
cannot decompose members of inaccessible base class %1 of %0
cannot decompose %select{private|protected}0 member %1 of %3
cannot decompose lambda closure type
cannot decompose class type %1: %select{its base classes %2 and|both it and its base class}0 %3 have non-static data members
decomposition declaration must be the only declaration in its group
decomposition declaration cannot be declared with parentheses
decomposition declaration %0 requires an initializer
decomposition declaration cannot be declared %plural{1:'%1'|:with '%1' specifiers}0
cannot decompose this type; 'std::tuple_element<%0>::type' does not name a type
cannot decompose this type; 'std::tuple_size<%0>::value' is not a valid integral constant expression
decomposition declaration template not supported
decomposition declaration cannot be declared with type %0; declared type must be 'auto' or reference to 'auto'
cannot decompose %select{union|non-class, non-array}1 type %2
type %0 decomposes into %3 %plural{1:element|:elements}2, but %select{%plural{0:no|:only %1}1|%1}4 %plural{1:name was|:names were}1 provided
cannot decrement expression of type bool
cannot %select{form pointer to|form reference to|form array of|form function returning|use parentheses when declaring variable with}0 deduced class template specialization type
ambiguous deduction for template arguments of %0
no viable constructor or deduction guide for deduction of template arguments of %0
class template argument deduction for %0 selected a deleted constructor
class template argument deduction for %0 selected an explicit %select{constructor|deduction guide}1 for copy-list-initialization
template %0 has no definition and no %select{|viable }1deduction guides for deduction of template arguments
%select{<error>|function template|variable template|alias template|template template parameter|concept|template}0 %1 requires template arguments; argument deduction only allowed for class templates
deduced non-type template argument does not have the same type as the corresponding template parameter%diff{ ($ vs $)|}0,1
deduced return types are a C++14 extension
typename specifier refers to %select{class template|function template|variable template|alias template|template template parameter|template}0; argument deduction not allowed here
deduced type %1 of deduction guide is not %select{|written as }2a specialization of template %0
deduction guide cannot have a function definition
deduction guide cannot be declared '%0'
cannot specify deduction guide for %select{<error>|function template|variable template|alias template|template template parameter|concept|dependent template name}0 %1
deduction guide declaration without trailing return type
redeclaration of deduction guide
deduction guide cannot be %select{explicitly instantiated|explicitly specialized}0
deduction guide template contains %select{a template parameter|template parameters}0 that cannot be deduced
cannot specify any part of a return type in the declaration of a deduction guide
deduction guide has different access from the corresponding member template
deduction guide must be declared in the same scope as template %q0
exception specifications of %select{return|argument}0 types differ
default template argument in a class template partial specialization
addition of default argument on redeclaration makes this constructor a %select{default|copy|move}0 constructor
default initialization of an object of const type %0%select{| without a user-provided default constructor}1
default member initializer for %0 uses itself
default member initializer for %1 needed within definition of enclosing class %0 outside of member functions
'default' statement not in switch statement
return type of defaulted 'operator<=>' cannot be deduced because three-way comparison for %select{|member|base class}0 %1 has a deduced return type and is not yet defined
deduced return type for defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator must be 'auto', not %1
defaulted member %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator must be const-qualified
%select{<ERROR>|equality|three-way|equality|relational}0 comparison operator is not a friend of %select{|incomplete class }1%2
%select{non-member|member}0 %select{<ERROR>|equality|three-way|equality|relational}1 comparison operator comparison operator must have %select{2|1}0 parameters
invalid parameter type for defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator; found %1, expected %2%select{| or %4}3
parameters for defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator must have the same type%diff{ (found $ vs $)|}1,2
invalid parameter type for non-member defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator; found %1, expected class or reference to a constant class
return type for defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator must be 'bool', not %1
comparison operator template cannot be defaulted
the parameter for an explicitly-defaulted copy assignment operator must be an lvalue reference type
the parameter for this explicitly-defaulted copy %select{constructor|assignment operator}0 is const, but a member or base requires it to be non-const
the parameter for an explicitly-defaulted move %select{constructor|assignment operator}0 may not be const
an explicitly-defaulted %select{|copy |move }0constructor cannot have default arguments
an explicitly-defaulted %select{copy|move}0 assignment operator may not have 'const'%select{, 'constexpr'|}1 or 'volatile' qualifiers
explicitly-defaulted %select{copy|move}0 assignment operator must return %1
an explicitly-defaulted %select{|copy |move }0constructor cannot be variadic
the parameter for an explicitly-defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 may not be volatile
definition of explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}0
definition of implicitly declared %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}1
delegating constructors are permitted only in C++11
an initializer for a delegating constructor must appear alone
converting delete expression from type %0 to type %1 invokes an explicit conversion function
deleting incomplete class type %0; no conversions to pointer type
cannot delete expression of type %0
deleted definition must be first declaration
attempt to use a deleted function
constructor inherited by %0 from base class %1 is implicitly deleted
'main' is not allowed to be deleted
deleted function %0 cannot override a non-deleted function
typename specifier refers to %select{class template|function template|variable template|alias template|template template parameter|template}0 member in %1; argument deduction not allowed here
no candidate function template was found for dependent friend function template specialization
nested name specifier for a declaration cannot depend on a template parameter
type of specialized non-type template argument depends on a template parameter of the partial specialization
%select{declaration|definition}0 of %select{struct|interface|union|class|enum}1 in a dependent scope
non-type template argument specializes a template parameter with dependent type %0
dereference operator in '%select{__counted_by|__sized_by}0' is only allowed for function parameters
dereference of pointer to incomplete type %0
'objc_designated_initializer' attribute only applies to init methods of interface or class extension declarations
designator in initializer for %select{scalar|indivisible sizeless}0 type %1
designator into flexible array member subobject
%select{no_destroy|always_destroy}0 attribute can only be applied to a variable with static or thread storage duration
destroying operator delete can have only an optional size and optional alignment parameter
destructor cannot be declared '%0'
identifier %0 in object destruction expression does not name the type %1 of the object being destroyed
identifier %0 in object destruction expression does not name a type
destructor type %0 in object destruction expression does not match the type %1 of the object being destroyed
expected the class name after '~' to name the enclosing class
identifier %0 after '~' in destructor name does not name a type
destructor must be a non-static member function
destructor cannot be redeclared
destructor cannot have a return type
destructor cannot be declared as a template
destructor cannot be variadic
destructor cannot have any parameters
invalid diagnostic type for 'diagnose_if'; use "error" or "warning" instead
conflicting asm label
declaration of %0 has a different language linkage
conflicting pass_object_size attributes on parameters
virtual function %0 has a different return type %diff{($) than the function it overrides (which has return type $)|than the function it overrides}1,2
dimension expression does not evaluate to a constant unsigned int
@selector expression formed with direct selector %0
attribute %0 cannot appear more than once on a declaration
exception specifications are not allowed beyond a single level of indirection
cannot cast %select{private|protected}2 base class %1 to %0
reference to %select{destructor|pseudo-destructor}0 must be called%select{|; did you mean to call it with no arguments?}1
reimplementation of category %1 for class %0
reimplementation of class %0
base class %0 specified more than once as a direct base class
duplicate case value '%0'
duplicate case value: '%0' and '%1' both equal '%2'
duplicate interface definition for class %0
instance variable is already declared
synthesized properties %0 and %1 both claim instance variable %2
duplicate member %0
duplicate declaration of method %0
property has a previous declaration
multiple vtable pointer authentication policies on %0
dynamic property cannot have instance variable specification
dynamic initialization is not supported for __device__, __constant__, __shared__, and __managed__ variables.
catch-all handler must come last
ISO C requires a named parameter before '...'
only function and template parameters can be parameter packs
scalar initializer cannot be empty
initializer for sizeless type %0 cannot be empty
non-integral type %0 is an invalid underlying type
mode %0 is not supported for enumeration types
enumeration previously declared with %select{non|}0fixed underlying type
enumeration previously declared as %select{un|}0scoped
enumeration redeclared with different underlying type %0 (was %1)
enumerator %0 does not exist in instantiation of %1
enumerator value is not representable in the underlying type %0
enumerator value %0 is not representable in the underlying type %1
the event_t type can only be used with __private address space qualifier
exception specification of %0 uses itself
exception specifications are not allowed in %select{typedefs|type aliases}0
exception specification needed for member of incomplete class %0
exception specification is not available until end of class definition
cannot use '%0' with exceptions disabled
excess elements in %select{array|vector|scalar|union|struct}0 initializer
excess elements in initializer for indivisible sizeless type %0
excess elements in char array initializer
expected an 'allocator' clause inside of the target region; provide an 'allocator' clause or use 'requires' directive with the 'dynamic_allocators' clause
expected an allocator expression inside of the target region; provide an allocator expression or use 'requires' directive with the 'dynamic_allocators' clause
expected a callable expression as %ordinal0 argument to %1, found %2
%0 is not a class%select{ or namespace|, namespace, or enumeration}1
kernel must have void return type
expected pointer to struct as %ordinal0 argument to %1, found %2
partial ordering for explicit instantiation of %0 is ambiguous
explicit instantiation cannot be 'constexpr'
explicit instantiation refers to static data member %q0 that is not an instantiation
explicit instantiation declaration (with 'extern') follows explicit instantiation definition (without 'extern')
explicit instantiation has dependent template arguments
duplicate explicit instantiation of %0
explicit instantiation of %0 in class scope
explicit instantiation cannot be 'inline'
explicit instantiation declaration of %0 with internal linkage
explicit instantiation refers to member function %q0 that is not an instantiation
explicit instantiation of %0 must occur at global scope
explicit instantiation of non-templated type %0
explicit instantiation of %0 does not refer to a function template, variable template, member function, member class, or static data member
explicit instantiation of typedef %0
explicit instantiation of %0 not in a namespace enclosing %1
explicit instantiation declaration requires a name
explicit instantiation cannot have a storage class
explicit instantiation of undefined function template %0
explicit instantiation of undefined %select{member class|member function|static data member}0 %1 of class template %2
explicit instantiation of undefined variable template %q0
explicit instantiation of %q0 must occur in namespace %1
explicit instantiation of %q0 must specify a template argument list
'explicit' can only be applied to a constructor or conversion function
'explicit' can only appear on non-static member functions
'explicit' can only be specified inside the class definition
explicit specialization has extraneous, inconsistent storage class '%select{none|extern|static|__private_extern__|auto|register}0'
export declaration cannot be used in a private module fragment
inline function not defined%select{| before the private module fragment}0
declaration of %0 with internal linkage cannot be exported
%select{empty|static_assert|asm}0 declaration cannot be exported
cannot export %0 as it is not at namespace scope
export declaration can only be used within a module interface unit%select{ after the module declaration|}0
module partition implementations cannot be exported
using declaration referring to %1 with %select{internal|module|unknown}0 linkage cannot be exported
export declaration appears within anonymous namespace
export declaration appears within another export declaration
%select{case value|enumerator value|non-type template argument|array size|explicit specifier argument|noexcept specifier argument}0 is not a constant expression
expression is not an %select{integer|integral}0 constant expression
expression is not a string literal
vector component access exceeds type %0
illegal vector component name '%0'
declaration of %1 %select{with C language linkage|in global scope}0 conflicts with declaration %select{in global scope|with C language linkage}0
extern declaration of %0 follows non-extern declaration
non-void block does not return a value
fallthrough annotation does not directly precede switch label
fallthrough annotation is outside switch statement
%0 attribute is only allowed on empty statements
field %0 declared as a function
field designator cannot initialize a %select{non-struct, non-union|non-class}0 type %1
field designator %0 does not refer to a non-static data member
field designator %0 does not refer to any field in type %1
field designator %0 does not refer to any field in type %1; did you mean %2?
field has %select{incomplete|sizeless}0 type %1
data member instantiated with function type %0
field may not be qualified with an address space
filter expression has non-integral type %0
declaration of %0 overrides a '%select{final|sealed}1' function
%0 cannot be set as a default pointer attribute
parameter of array type %0 decays to a __single pointer, and will not allow arithmetic
address argument to atomic arithmetic operation must be a pointer to '__unsafe_indexable' pointer (%0 invalid)
atomic operation on '%select{__indexable|__bidi_indexable|__counted_by|__sized_by|__ended_by}0' pointer is not yet supported
_Atomic on '%select{__indexable|__bidi_indexable|__counted_by|__sized_by|__ended_by|__terminated_by}0' pointer is not yet supported
passing %select{'__counted_by'|'__sized_by'|'__ended_by'|end}0 pointer as __auto_type initializer is not yet supported
parameter '%0' with '%select{__counted_by|__sized_by|__ended_by}1' attribute depending on an indirect count is implicitly read-only and cannot be passed as an indirect argument
arrays with an explicit size decay to counted pointers and cannot also have a count attribute
pointer cannot be '%0' and '__%select{bidi_indexable|indexable}1' at the same time
pointer cannot have count and range at the same time
pointer cannot have more than one %select{bound|type|count|end}0 attribute
cannot apply '__counted_by' attribute to %0 because %1 has unknown size%select{|; did you mean to use '__sized_by' instead?}2
cannot reference '%0' after it is changed during consecutive assignments
not allowed to change out parameter used as dependent count expression of other parameter
not allowed to change out parameter with dependent count
assignments to dependent variables should not have side effects between them
external count of a pointer cannot be used with inline assembly
argument of '%select{__counted_by|__sized_by|__ended_by}0' attribute cannot refer to declaration of a different lifetime
argument of '%select{__counted_by|__sized_by|__ended_by}0' attribute cannot refer to declaration from a different scope
initalizer for %select{count|size|'__counted_by' pointer|'__sized_by' pointer|'__ended_by' pointer|end pointer}0 with side effects is not supported yet
compound assignment on dynamic bound pointer type %0 with side effects is not supported yet;instead, use seperate assignment and binary expressions
%select{negative|positive}0 pointer arithmetic on %select{'__counted_by' |'__sized_by' ||end }1pointer%select{|| that starts the '__ended_by' chain|}1 always traps
conflicting '%select{__counted_by|__sized_by|__ended_by|__terminated_by}0' attribute with the previous %select{function|variable}1 declaration
argument of '%select{__counted_by|__sized_by}0' attribute can only reference function with 'const' attribute
argument of function call '%0' in '__counted_by' attribute is not a constant expression
end-pointer must be '__single'
variable %0 cannot be used in multiple '%select{__counted_by|__sized_by|__ended_by}1' attributes
Firebloom forbids arithmetic on pointers to types with a flexible array member
flexible array member is initialized without a count
flexible array member is initialized with %0 element%select{|s}2, but count value is initialized to %1
'__unsafe_forge_%select{bidi_indexable|single|terminated_by}0' requires a pointer, array or integer address argument
'__unsafe_forge_bidi_indexable' requires an integer size argument
negative %select{address|size}0 argument to '__unsafe_forge_%select{bidi_indexable|single|terminated_by}1'
function pointers cannot be indexable
pointer with '%select{__counted_by|__sized_by|__ended_by}0' and the argument of the attribute must be defined in the same translation unit
incompatible count expression (%0) vs. (%1) in argument to function
type of %0, %1, is incompatible with parameter of type %2
incompatible dynamic count pointer argument to parameter of type %0
passing%select{| address of}1 %0 referred to by '%select{__counted_by|__sized_by}2' to a parameter that is not referred to by the same attribute
%select{%diff{assigning to $ from incompatible type $|assigning type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1|}2 is an unsafe operation; use '__unsafe_terminated_by_from_indexable()' or '__unsafe_forge_terminated_by()' to perform this conversion
'__terminated_by' pointer converted from a string literal must be NUL-terminated
%select{%diff{assigning to $ from incompatible type $|assigning type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1|}2 that discards '__terminated_by' attribute is not allowed
pointers with incompatible terminators %select{%diff{assigning to $ from incompatible type $|assigning type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1|}2
%select{%diff{assigning to $ from incompatible type $|assigning type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1|}2 requires a linear search for the terminator; use '__terminated_by_to_indexable()' to perform this conversion explicitly
cannot convert single pointer to incomplete type %0 to indexable pointer %1; consider making the destination '__single' to perform this conversion
incrementing '%0' without updating '%1' always traps
incrementing '%0' always traps
decremented indexable pointer '%0' is out of bounds
array subscript with a negative index on indexable pointer '%0' is out of bounds
%select{|implicitly }0initializing negative %select{count|size}1 for %select{'__counted_by'|'__sized_by'}1 pointer%select{| field}3 %2
cannot initialize %select{'__counted_by'|'__sized_by'}0 pointer field %1 with %select{count|size}0 %2 which is larger than the actual %select{count|size}0 of the field initializer '%3'
local dependent count decl should be declared side by side to its dependent pointer
attribute %0 is not allowed for local variables with external storage
accessing %select{'%select{__counted_by|__sized_by|__ended_by}0' pointer member|member referred to by '__ended_by'}1 using %select{an object|a pointer}2 with side effects is not yet supported; store '%3' into a local variable first
base of member reference is a null pointer
incompatible pointer types assigning %0 with an expression with mismatching size attributes %1
assignment to %select{%2 |}3'%0' requires corresponding assignment to %select{|%2 }3'%1'; add self assignment '%1 = %1' if the value has not changed
multiple consecutive assignments to a %select{dynamic count|dynamic count pointer|ranged pointer}0 %1 must be simplified; keep only one of the assignments
negative count expression
%0 attribute on nested pointer type is only allowed on indirect parameters
%0 is not allowed for nested pointers
cannot extract the %select{lower|upper}0 bound of %1 because %select{it is not a pointer|it has no bounds specification|its bounds are not contained within the pointer}2
assignment to '%0' requires an immediately preceding assignment to '%1'; add self assignment '%1 = %1' if the value has not changed
local variable %0 must be declared right next to its dependent decl
non-pointer to safe pointer conversion is not allowed with firebloom; use '__unsafe_forge_single' or '__unsafe_forge_bidi_indexable'
array subscript on %select{single|'__terminated_by'}0 pointer '%1' %select{must use a constant index of 0 to be in bounds|is not allowed}0
pointer with bounds cannot be used with inline assembly
Pointer authentication is currently unsupported on indexable pointers
parameter '%0' with '%select{__counted_by|__sized_by}1' attribute depending on an indirect count is implicitly read-only
parameter '%0' %select{with '__ended_by' attribute depending on an indirect end pointer|referred to by an indirect '__ended_by' pointer}1 is implicitly read-only
attribute %0 is only allowed for struct fields or function parameters
pointer arithmetic on single pointer '%0' is out of bounds%select{|; consider adding '__counted_by' to '%2'}1
%0 cannot apply to arrays: use 'counted_by' instead
cannot take address of pointer without explicit bounds
variable referred to by '%select{__counted_by|__sized_by|__ended_by}0' cannot be pointed to by any other variable; exception is when the variable is passed as a compatible argument to a function
pointer with '%select{__counted_by|__sized_by|__ended_by}0' cannot be pointed to by any other variable; exception is when the variable is passed as a compatible argument to a function
'__terminated_by' attribute cannot be applied to empty arrays
pointee types of the pointer and pointer to terminator arguments must be the same
pointee type of the pointer argument must be an integer or a pointer
pointer to terminator argument must be a pointer (%0 invalid)
pointer argument must be a safe pointer (%0 invalid)
incomplete array '%0' with '__terminated_by' attribute must be initialized with at least one element
%select{array|pointer}0 cannot have more than one '__terminated_by' attribute
pointer arithmetic on '__terminated_by' pointer '%0' can only increase the value by one
cannot decrement '__terminated_by' pointer '%0'
terminator in array '%0' must be a compile-time constant
array '%0' with '__terminated_by' attribute is initialized with an incorrect terminator (expected: %1; got %2)
terminator value is not a constant expression
pointer argument must be a '__terminated_by' pointer (%0 invalid)
pointer argument must be terminated by %0 (got %1)
%select{array|pointer}0 '%1' with '__terminated_by' attribute must be initialized
%select{element|pointee}0 type of %select{array|pointer}0 with '__terminated_by' attribute must be an integer or a pointer
array '%0' with '__terminated_by' attribute must be initialized with a string literal or an initializer list
'__terminated_by' attribute currently can be applied only to '__single' pointers
'__terminated_by' attribute can be applied to pointers, constant-length arrays or incomplete arrays
%0 inside typedef is only allowed for function type
conversion from pointer type %0 to a counted pointer of %1 elements never succeeds
conversion from pointer type %0 with pointee of size %1 to sized pointer type with greater size %2 never succeeds
%select{%diff{assigning to $ from incompatible type $|assigning type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1|}2 casts away '__unsafe_indexable' qualifier; use '__unsafe_forge_single' or '__unsafe_forge_bidi_indexable' to perform this conversion
taking the address of an incomplete __counted_by array is not yet supported
passing%select{| address of}1 %0 as an indirect parameter; must also pass %2 %select{|or its address }3because the type of %select{%0|%2}4, %5, refers to %select{%2|%0}4
void pointers must use a byte count attribute instead of an item count
first argument to __builtin_call_with_static_chain must not be a block call
first argument to __builtin_call_with_static_chain must not be a builtin call
first argument to __builtin_call_with_static_chain must be a non-member call expression
first argument to __builtin_call_with_static_chain must not be a pseudo-destructor call
first argument to 'va_arg' is of type %0 and not 'va_list'
ARC forbids flexible array members with retainable object type
flexible array member %0 not allowed in otherwise empty %select{struct|interface|union|class|enum}1
flexible array member %0 of type %1 with non-trivial destruction
initialization of flexible array member is not allowed
flexible array requires brace-enclosed initializer
Firebloom forbids passing %0 by copy because it has a flexible array member
flexible array member %0 with type %1 is not at the end of %select{struct|interface|union|class|enum}2
flexible array member %0 in a union is not allowed
flexible array member %0 not allowed in %select{struct|interface|union|class|enum}1 which has a virtual base class
expression not permitted as operand of fold expression
unary fold expression has empty expansion for operator '%0' with no fallback value
instantiating fold expression with %0 arguments exceeded expression nesting limit of %1
binary fold expression has unexpanded parameter packs in both operands
for range declaration must declare a variable
cannot use type %0 as a range
invalid range expression of type %0; did you mean to dereference it with '*'?
cannot use incomplete type %0 as a range
invalid range expression of type %0; no viable '%select{begin|end}1' function available
cannot use type %0 as an iterator
loop variable %0 may not be declared %select{'extern'|'static'|'__private_extern__'|'auto'|'register'|'constexpr'|'thread_local'}1
format attribute cannot specify the implicit this argument as the format string
format argument not a string type
function does not return %0
strftime format attribute requires 3rd parameter to be 0
ISO C++ forbids forward references to 'enum' types
attempting to use the forward class %0 as superclass of %1
explicit qualification required to use member %0 from dependent base class
member %0 used before its declaration
friend declaration of %0 does not match any declaration in %1
friend declaration specifying a default argument must be a definition
friend declaration specifying a default argument must be the only declaration
friend function cannot be defined in a local class
friends cannot be members of the declaring class
'friend' must appear first in a non-function declaration
incomplete result type %0 in function definition
function cannot return %select{array|function}0 type %1
function cannot return qualified void type %0
function declared with %0 attribute was previously declared without the %0 attribute
functions may not be declared with 'cmse_nonsecure_call' attribute
%0 marked 'override' but does not override any member functions
type %0 of function parameter pack does not contain any unexpanded parameter packs
argument must be a function
function template partial specialization is not allowed
function template specialization %0 ambiguously refers to more than one function template; explicitly specify%select{| additional}1 template arguments to identify a particular function template
no function template matches function template specialization %0
weak attribute declared on a __strong type property in GC mode
controlling expression type %0 compatible with %1 generic association types
controlling expression type %0 not compatible with any generic association type
__builtin_get_vtable_pointer requires an argument of%select{| polymorphic}0 class pointer type, but %1 %select{was provided|has no virtual methods}0
__builtin_get_vtable_pointer requires an argument with a complete type, but %0 is incomplete
no getter method for read from property
call to global function %0 not configured
cannot jump from this goto statement to its label
cannot jump from this goto statement to label %0 inside an inline assembly block
half precision constant requires cl_khr_fp16
invalid argument: symbol must be a device-side function or global variable
attribute %0 is unsupported in %select{Pixel|Vertex|Geometry|Hull|Domain|Compute|Library|RayGeneration|Intersection|AnyHit|ClosestHit|Miss|Callable|Mesh|Amplification|Invalid}1 shaders, requires %2
%0 attribute parameters do not match the previous declaration
invalid space specifier '%0' used; expected 'space' followed by an integer, like space1
initializer priorities are not supported in HLSL
missing numthreads attribute for %0 shader entry
semantic annotations must be present for all parameters of an entry function or patch constant function
argument '%select{X|Y|Z}0' to numthreads attribute cannot exceed %1
total number of threads cannot exceed %0
the '%select{&|*|->}0' operator is unsupported in HLSL
%select{pointers|references}0 are unsupported in HLSL
register number should be an integer
invalid resource class specifier '%0' used; expected 'b', 's', 't', or 'u'
type argument of iboutletcollection attribute cannot be a builtin type
invalid type %0 as argument of iboutletcollection attribute
ambiguous conversion from type %0 to an integral or unscoped enumeration type
integral constant expression requires explicit conversion from %0 to %1
integral constant expression has incomplete class type %0
%select{integer|integral}1 constant expression must have %select{integer|integral or unscoped enumeration}1 type, not %0
integer constant expression evaluates to value %0 that cannot be represented in a %1-bit %select{signed|unsigned}2 integer type
a parameter list without types is only allowed in a function definition
illegal operation on Objective-C container subscripting
'%0' declared as array of %1
'%0' declared as array of functions of type %1
'%0' declared as array of references of type %1
'%0' does not point into a class
'%0' declared as a member pointer to a reference of type %1
'%0' declared as a member pointer to void
'%0' declared as a pointer to a reference of type %1
illegal initializer (only variables can be initialized)
illegal initializer type %0
Objective-C message has incomplete result type %0
illegal qualifiers on @catch parameter
%select{anonymous struct|union}0 member %1 has a non-trivial %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2
imaginary types are not supported
implicit conversion from %0 to %1 is not permitted in C++
cannot declare implementation of a class declared with the 'objc_class_stub' attribute
std::nothrow was not found; include <new> before defining a coroutine which uses get_return_object_on_allocation_failure()
initializer for aggregate with no elements requires explicit braces
implicit instantiation of undefined member %0
cannot %select{use builtin operator '<=>'|default 'operator<=>'}1 because type '%0' was not found; include <compare>
%0 type was not found; include <coroutine> before defining a coroutine; include <experimental/coroutine> if your version of libcxx is less than 14.0
this function cannot be a coroutine: %0 is not a class
this function cannot be a coroutine: %q0 has no member named 'promise_type'
cannot deduce type of initializer list because std::initializer_list was not found; include <initializer_list>
static data member of type %0 must be initialized out of line
in-class initializer for static data member of type %0 requires 'constexpr' specifier
non-const static data member must be initialized out of line
in-class initializer for static data member is not a constant expression
static const volatile data member must be initialized out of line
attribute %0 is already applied with different arguments
target exception specification is not superset of source
conversion between pointers to functions with incompatible firebloom attributes
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2
API notes replacement type %0 has a different size from original type %1
incompatible vector types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
base class has incomplete type
enumeration %0 is incomplete
%select{|pointer to |reference to }0incomplete type %1 is not allowed in exception specification
member access into incomplete type %0
incomplete type %0 named in nested name specifier
incomplete type in call to object of type %0
incomplete receiver type %0
cannot synthesize property %0 with incomplete type %1
incomplete type %0 where a complete type is required
'@encode' of incomplete type %0
incomplete type %0 used in type trait expression
cannot set vtable pointer authentication on an incomplete type %0
'typeid' of incomplete type %0
inconsistent number of instance variables specified
defaulted definition of %select{%select{<ERROR>|equality|three-way|equality|relational}1 comparison operator|three-way comparison operator}0 cannot be declared %select{constexpr|consteval}2 because %select{it|the corresponding implicit 'operator=='}0 invokes a non-constexpr comparison function
defaulted declaration of %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 cannot be consteval because implicit definition is not constexpr
defaulted definition of %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 is not constexpr
number of elements must be either one or match the size of the vector
cannot %select{decrement|increment}0 expression of enum type %1
cannot jump from this %select{indirect|asm}0 goto statement to one of its possible targets
indirect goto in function with no address-of-label expressions
cannot deduce type for lambda capture %0 from initializer of type %2
cannot deduce type for lambda capture %0 from initializer list
initializer for lambda capture %0 contains multiple expressions
initializer missing for lambda capture %0
cannot deduce type for lambda capture %1 from %select{parenthesized|nested}0 initializer list
cannot initialize %select{a variable|a parameter|template parameter|return object|statement expression result|an exception object|a member subobject|an array element|a new value|a value|a base class|a constructor delegation|a vector element|a block element|a block element|a complex element|a lambda capture|a compound literal initializer|a related result|a parameter of CF audited function}0 %diff{of type $ with an %select{rvalue|lvalue}2 of type $|with an %select{rvalue|lvalue}2 of incompatible type}1,3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%5 vs %6)|: different exception specifications}4
initializer element is not a compile-time constant
cannot create object of function type %0
initialization of incomplete type %0
%select{|non-aggregate }0type %1 cannot be initialized with an initializer list
init methods must return an object pointer type, not %0
initialization of non-aggregate type %0 with an initializer list
cannot initialize Objective-C class type %0
can only use 'init_priority' attribute on file-scope definitions of objects of class type
reference member of type %0 uninitialized
initializer would partially override prior initialization of object of type %1 with non-trivial destruction
initializer-string for char array is too long
inline declaration of %0 follows non-inline definition
inline declaration of %0 not allowed in block scope
'main' is not allowed to be declared inline
non-inline namespace cannot be reopened as inline
'inline' can only appear on functions%select{| and non-local variables}0
invalid block pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
integer sequences must have integral element type
integer sequences must have non-negative sequence length
%plural{[0,2]:must use a qualified name when declaring|3:cannot declare}0 a %select{constructor|destructor|conversion operator|deduction guide}0 as a friend
invalid address discrimination mode %0
invalid use of a cast in a inline asm context requiring an lvalue: remove the cast or build with -fheinous-gnu-extensions
value '%0' out of range for constraint '%1'
invalid reinterpretation: sizes of %0 and %1 must match
invalid authentication key %0
interface type cannot inherit from %select{struct|non-public interface|class}0 %1
invalid or misplaced branch protection specification '%0'
collection element of type %0 is not an Objective-C object
'_Complex %0' is invalid
call to consteval function %q0 is not a constant expression
%0 cannot be declared consteval
cannot take address of consteval function %0 outside of an immediate invocation
%select{function parameter|typedef}0 cannot be %select{<ERROR>|constexpr|consteval|constinit}1
non-static data member cannot be constexpr%select{; did you intend to make it %select{const|static}0?|}1
constexpr variable declaration must be a definition
invalid conversion between ext-vector type %0 and %1
conversion between matrix type %0 and incompatible type %1 is not allowed
conversion between matrix types%diff{ $ and $|}0,1 of different size is not allowed
invalid conversion between vector type %0 and integer type %1 of different size
invalid conversion between vector type %0 and scalar type %1
invalid conversion between vector type%diff{ $ and $|}0,1 of different size
invalid cpu name for builtin
invalid option '%0' for %select{cpu_specific|cpu_dispatch}1
invalid cpu feature string for builtin
invalid custom discrimination
count expression %select{on struct field|in function declaration}0 may only reference %select{other fields of the same struct|parameters of that function}0
cannot use %0 on union fields
cannot combine with previous '%0' declaration specifier
invalid declaration specifier in template non-type parameter
definition or redeclaration of %0 cannot name the global scope
definition or redeclaration of %0 not allowed inside a block
definition or redeclaration of %0 not allowed inside a function
cannot define or redeclare %0 here because namespace %1 does not enclose namespace %2
invalid extra discrimination selection %0
cannot create a non-constant pointer to member function
invalid use of incomplete type %0
mask type size must be between 1-byte and 8-bytes
invalid use of member %0 in static member function
incompatible constant for this __builtin_neon function
invalid use of non-static data member %0
%0 is not a valid literal type for NSNumber
invalid PCS type
'__pixel' must be preceded by '__vector'.  '%0' declaration specifier not allowed here
%0 is not a valid property name (accessing an object of type %1)
invalid protocol qualifiers on non-ObjC type
'%0' qualifier is not allowed on a constructor
'%0' qualifier is not allowed on a destructor
%select{non-member function|static member function|deduction guide}0 %select{of type %2 |}1cannot have '%3' qualifier
receiver type %0 is not an Objective-C class
'super' is only valid in a method body
'_Sat' specifier is only valid on '_Fract' or '_Accum', not '%0'
'%0' cannot be signed or unsigned
invalid use of '__super', this keyword can only be used inside class or member function scope
invalid use of 'this' outside of a non-static member function
'%0' is only allowed on variable declarations
the %0 type cannot be used to declare a program scope variable
invalid application of __builtin_xnu_type_%select{signature|summary}0 to %select{variable array}1 type %2
an array type is not allowed here
a function type is not allowed here
type %2 of %select{explicit instantiation|explicit specialization|partial specialization|redeclaration}0 of %1 does not match expected type %3
cannot use '%0' with '__vector bool'
use of '__int128' with '__vector bool' requires VSX support enabled (on POWER10 or later)
cannot combine with previous '%0' declaration specifier. '__vector' must be first
use of 'double' with '__vector' requires VSX support to be enabled (available on POWER7 or later)
cannot use 'float' with '__vector'
use of '__int128' with '__vector' requires extended Altivec support (available on POWER8 or later)
cannot use 'long' with '__vector'
cannot use 'long double' with '__vector'
use of 'long long' with '__vector' requires VSX support (available on POWER7 or later) to be enabled
'%select{|short|long|long long}0 %1' is invalid
property %0 not found on object of type %1; did you mean to access instance variable %2?
property %0 attempting to use instance variable %1 declared in super class %2
instance variables cannot be of reference type
instance variable %0 accessed in class method
kernel call to non-global function %0
kernel function %0 must be a free function or static member function
kernel function type %0 must have void return type
pointer arguments to kernel functions must reside in '__global', '__constant' or '__local' address space
unnamed variable cannot be implicitly captured in a lambda expression
lambda expression in default argument cannot capture any entity
variable %0 with flexible array member cannot be captured in a lambda expression
cannot assign to a variable captured by copy in a non-mutable lambda
variable %0 cannot be implicitly captured in a lambda with no capture-default specified
a lambda expression may not appear inside of a constant expression
a lambda expression cannot appear in this context
incomplete result type %0 in lambda expression
cannot deduce lambda return type from initializer list
lambda expression in an unevaluated operand
string literal in language linkage specifier cannot have an encoding-prefix
unknown linkage language
cannot apply asm label to %select{variable|function}0 after its first use
'lifetimebound' attribute cannot be applied to a %select{constructor|destructor}0
'lifetimebound' attribute cannot be applied; %select{static |non-}0member function has no implicit object parameter
cannot initialize %select{non-class|reference}0 type %1 with a parenthesized initializer list
non-template literal operator must have one or two parameters
literal operator cannot have a default argument
literal operator must have C++ linkage
non-namespace scope '%0' cannot have a literal operator member
parameter of literal operator must have type 'unsigned long long', 'long double', 'char', 'wchar_t', 'char16_t', 'char32_t', or 'const char *'
literal operator %0 must be in a namespace or global scope
invalid literal operator parameter type %0, did you mean %1?
template parameter list for literal operator must be either 'char...' or 'typename T, T...'
literal operator template cannot have any parameters
second argument to __builtin_load_member_function_pointer must be the address of a C++ member function: for example '&Foo::func', or null
first argument to __builtin_load_member_function_pointer must have C++ class type
variable with 'loader_uninitialized' attribute cannot have an initializer
variable %0 cannot be declared both 'extern' and with the 'loader_uninitialized' attribute
redeclaration cannot add 'loader_uninitialized' attribute
variable with 'loader_uninitialized' attribute must have a trivial default constructor
'__local' variable cannot have an initializer
%select{non-const|volatile}0 lvalue reference to type %1 cannot bind to an initializer list temporary
%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a temporary of type $|cannot bind to incompatible temporary}1,2
%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a value of unrelated type $|cannot bind to a value of unrelated type}1,2
rvalue reference %diff{to type $ cannot bind to lvalue of type $|cannot bind to incompatible lvalue}0,1
%select{unknown|unsupported}0 machine mode %1
%select{first|second|third|fourth}0 parameter of 'main' (%select{argument count|argument array|environment|platform-specific data}0) must be of type %1
main cannot be declared as global variable
'main' must return 'int'
too many parameters (%0) for 'main': must be 0, 2, or 3
%0 cannot be a template
'%select{make_unsigned|make_signed}0' is only compatible with non-%select{bool|_BitInt(1)}1 integers and enum types, but was given %2%select{| whose underlying type is %4}3
std::coroutine_handle isn't a class template
std::coroutine_traits isn't a class template
std::initializer_list must be a class template with a single type parameter
std::nothrow must be a valid variable declaration
single subscript expressions are not allowed for matrix values
matrix %select{row|column}0 index is not an integer
matrix %select{row|column}0 index is outside the allowed range [0, %1)
matrix row and column subscripts cannot be separated by any expression
comma expressions are not allowed as indices in matrix subscript expressions
non-void block does not return a value in all control paths
member initializer %0 does not name a non-static data member or base class
initializer %0 does not name a non-static data member or base class; did you mean the %select{base class|member}1 %2?
call to non-static member function without an object argument
out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1
out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1; did you mean %3?
return type of out-of-line definition of %q0 differs from that in the declaration
out-of-line definition of %0 from class %1 without definition
extra qualification on member %0
'this' argument to member function %0 has type %1, but function is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}2
'this' argument to member function %0 is an %select{lvalue|rvalue}1, but function has %select{non-const lvalue|rvalue}2 ref-qualifier
cannot initialize object parameter of type %0 with an expression of type %1
initializer on function does not look like a pure-specifier
member %0 has the same name as its class
no member %0 in %1; it has not yet been instantiated
non-friend class member %0 cannot have a qualified name
class member cannot be redeclared
multiple overloads of %0 instantiate to the same signature %1
base of member reference is a function; perhaps you meant to call it%select{| with no arguments}0?
member %0 cannot have template arguments
member pointer refers into non-class type %0
conversion from pointer to member of class %0 to pointer to member of class %1 via virtual base %2 is not allowed
member pointer has incomplete base type %0
at least one argument of MTE builtin function must be a pointer (%0, %1 invalid)
%0 argument of MTE builtin function must be an integer type (%1 invalid)
%0 argument of MTE builtin function must be a pointer (%1 invalid)
%0 argument of MTE builtin function must be a null or a pointer (%1 invalid)
messaging a Class with a method that is possibly direct
messaging super with a direct method
messaging unqualified id with a method that is possibly direct
kernel functions cannot be class members
%select{instance|class}1 method %0 not found ; did you mean %2?
this builtin requires 'dsp' ASE, please use -mdsp
this builtin requires 'dsp r2' ASE, please use -mdspr2
this builtin requires 'msa' ASE, please use -mmsa
derived class must specify the same code segment as its base classes
overriding virtual function must specify the same code segment as its overridden function
exception specification in declaration does not match previous declaration
exception specification in explicit instantiation does not match instantiated one
inheritance model does not match %select{definition|previous declaration}0
declaration of %0 in %select{the global module|module %2}1 follows declaration in %select{the global module|module %4}3
uuid does not match previous declaration
visibility does not match previous declaration
instance variables may not be placed in %select{categories|class extension}0
missing actual type specifier for pipe
%select{string|numeric}0 literal must be prefixed by '@'
missing custom discrimination
%select{constructor for %1 must explicitly initialize the|implicit default constructor for %1 must explicitly initialize the|cannot use constructor inherited from base class %4;}0 %select{base class|member}2 %3 %select{which|which|of %1}0 does not have a default constructor
%0 is missing exception specification '%1'
missing context for method declaration
missing '[' at start of message send expression
missing context for property implementation declaration
property implementation in a category with no category declaration
synthesized property %0 must either be named the same as a compatible instance variable or must explicitly name an instance variable
a type specifier is required for all declarations
conflicting mixed use of std and std::experimental namespaces for coroutine components
cannot use %select{C++ 'try'|Objective-C '@try'}0 in the same function as SEH '__try'
mode attribute only supported for integer and floating-point types
type of machine mode does not match type of base type
'module' declaration found while building header unit
'module' declaration found while building module from module map
module declaration must occur at the start of the translation unit
missing 'export module' declaration in module interface unit
missing 'module' declaration at end of global module fragment introduced here
@import of module '%0' in implementation of '%1'; use #import
import of module '%0' appears within %1
missing 'export' specifier in module declaration while building module interface
definition of module '%0' is not available; use -fmodule-file= to specify path to precompiled module interface
%select{local variable|parameter|typedef}0 %1 cannot be declared __module_private__
local %select{struct|interface|union|class|enum}0 cannot be declared __module_private__
%select{template|partial|member}0 specialization cannot be declared __module_private__
translation unit contains multiple module declarations
redefinition of module '%0'
import of module '%0' appears within same top-level module '%1'
import of module '%0' appears within its own %select{interface|implementation}1
%select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from module '%2' before it is required
%select{missing '#include'|missing '#include %3'}2; %select{||default argument of |explicit specialization of |partial specialization of }0%1 must be %select{declared|defined|defined|declared|declared}0 before it is used
%select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from one of the following modules before it is required:%2
'__leave' statement not in __try block
'__builtin_ms_va_start' used in System V ABI function
arguments to __annotation must be wide string constants
multiple initializations given for base %0
multiple coupled declarations in a firebloom attribute are not supported yet
multiple default labels in one switch
virtual function %q0 has more than one final overrider in %1
multiple initializations given for non-static member %0
initializing multiple members of union
function declaration cannot become a multiversioned function after first usage
multiversioned function declaration has a different %select{calling convention|return type|constexpr specification|inline specification|linkage|language linkage}0
attribute '%select{|target|cpu_specific|cpu_dispatch|target_clones}0' multiversioning cannot be combined with attribute %1
attribute '%select{|target|cpu_specific|cpu_dispatch|target_clones}0' multiversioned functions do not yet support %select{function templates|virtual functions|deduced return types|constructors|destructors|deleted functions|defaulted functions|constexpr functions|consteval function|lambdas}1
multiversioned function redeclarations require identical target attributes
multiversioned function must have a prototype
'main' cannot be a multiversioned function
function multiversioning is not supported on the current target
function declaration is missing %select{'target'|'cpu_specific' or 'cpu_dispatch'}0 attribute in a multiversioned function
multiversioning attributes cannot be combined
cannot perform a tail call to function%select{| %1}0 because it uses an incompatible calling convention
%0 attribute cannot be used from %select{a block|an Objective-C function|this context}1
%select{non-member|static member|non-static member}0 function cannot perform a tail call to %select{non-member|static member|non-static member|pointer-to-member}1 function%select{| %3}2
cannot perform a tail call to function%select{| %1}0 because its signature is incompatible with the calling function
%0 attribute requires that the return value is the result of a function call
%0 attribute requires that both caller and callee functions have a prototype
tail call requires that the return value, all parameters, and any temporaries created by the expression are trivially destructible
%0 attribute may not be used with variadic functions
cannot perform a tail call from this return statement
cannot perform a tail call %select{from|to}0 a %select{constructor|destructor}1
'mutable' and 'const' cannot be mixed
'mutable' cannot be applied to functions
'mutable' can only be applied to member variables
'mutable' cannot be applied to references
no matching %0 function for non-allocating placement new expression; include <new>
you need to include <typeinfo> before using the 'typeid' operator
%select{%diff{assigning to $ from $|assigning to incompatible nested pointer type}0,1|%diff{passing $ to parameter of incompatible nested pointer type $|passing to parameter of incompatible nested pointer type}0,1|%diff{returning $ from a function with result of incompatible nested pointer type $|returning from function with return of incompatible nested pointer type}0,1|%diff{converting $ to incompatible nested pointer type $|converting between incompatible nested pointer types}0,1|%diff{initializing $ with an expression of incompatible nested pointer type $|initializing with expression of incompatible nested pointer type}0,1|%diff{sending $ to parameter of incompatible nested pointer type $|sending to parameter of incompatible nested pointer type}0,1|%diff{casting $ to incompatible nested pointer type $|casting between incompatible nested pointer types}0,1}2; use explicit cast to perform this conversion
lookup of %0 in member access expression is ambiguous
%0 cannot appear before '::' because it is not a class%select{ or namespace|, namespace, or enumeration}1; did you mean ':'?
type %0 cannot be used prior to '::' because it has no members
%select{call to non-static member function|use of non-static data member}0 %2 of %1 from nested type %3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers in nested pointer types
nested redefinition of %0
'abi_tag' %0 missing in original declaration
array 'new' cannot have initialization arguments
only the first dimension of an allocated array may have dynamic size
cannot allocate array of 'auto'
cannot determine allocated array size from initializer
allocation of %select{incomplete|sizeless}0 type %1
no %select{getter|setter}0 defined for property %1
invalid use of '__super', %0 has no base classes
declaration does not declare anything
cannot specify a default vtable pointer authentication %select{key|address discrimination mode|discriminator}0 with no default set
use of dynamic_cast requires -frtti
no matching function found in local scope
no matching function %0 found in local scope; did you mean %3?
no member named %0 in %1
no member named %0 in %1; did you mean to use '->' instead of '.'?
no member named %0 in %1; did you mean %select{|simply }2%3?
no template named %0 in %1
no template named %0 in %1; did you mean %select{|simply }2%3?
cannot find interface declaration for %0
expression is not assignable
no suitable member %0 in %1
no @interface declaration found in class messaging of %0
no template named %0
no template named %0; did you mean %1?
use of typeid requires -frtti
no viable destructor found for class %0
a getter method is needed to perform a compound assignment on a property
no getter method %1 for %select{increment|decrement}0 of property
non-ASM statement in naked function is not supported
atomic constraint must be of type 'bool' (found %0)
anonymous non-C-compatible type given name for linkage purposes by %select{typedef|alias}0 declaration after its linkage was computed; add a tag name here to establish linkage prior to definition
substitution into constraint expression resulted in a non-constant expression
non-consteval function %0 cannot override a consteval function
non-deleted function %0 cannot override a deleted function
a randomized struct can only be initialized with a designated initializer
non-extern declaration of %0 follows extern declaration
defaulting %select{this %select{<ERROR>|equality|three-way|equality|relational}1 comparison operator|the corresponding implicit 'operator==' for this defaulted 'operator<=>'}0 would delete it after its first declaration
declaration of non-local variable in 'for' loop
cannot set vtable pointer authentication on monomorphic type %0
non-static declaration of %0 follows static declaration
member %0 of %1 is not a template; did you mean %select{|simply }2%3?
%0 does not name a template but is followed by template arguments
%0 does not name a template but is followed by template arguments; did you mean %1?
non-thread-local declaration of %0 follows thread-local declaration
cannot set vtable pointer authentication on %0 which is a subclass of polymorphic type %1
cannot %select{use type %1 for a function/method parameter|use type %1 for function/method return|default-initialize an object of type %1|declare an automatic variable of type %1|copy-initialize an object of type %1|assign to a variable of type %1|construct an automatic compound literal of type %1|capture a variable of type %1|cannot use volatile type %1 where it causes an lvalue-to-rvalue conversion}3 since it %select{contains|is}2 a union that is non-trivial to %select{default-initialize|destruct|copy}0
template argument / label address difference / what did you expect?
non-type template argument refers to subobject '%0'
sorry, non-type template argument of type %0 is not yet supported
qualified name refers into a specialization of %select{function|variable}0 template %1
non-type template parameter %0 with type %1 has incompatible initializer of type %2
non-variable declaration in 'for' loop
%0 is not virtual and cannot be declared pure
block pointer to non-function type is invalid
non-static data member defined out-of-line
address argument to nontemporal builtin must be a pointer (%0 invalid)
address argument to nontemporal builtin must be a pointer to integer, float, pointer, or a vector of such types (%0 invalid)
block declared 'noreturn' should not return
lambda declared 'noreturn' should not return
'_Noreturn' can only appear on functions
%select{assignment to readonly property|no setter method %1 for assignment to property}0
%select{%select{increment|decrement}1 of readonly property|no setter method %2 for %select{increment|decrement}1 of property}0
cannot specialize a %select{dependent template|template template parameter}0
type %0 is not a direct or virtual base of %1
call to function %0 that is neither visible in the template definition nor found by argument-dependent lookup
anonymous bit-field has non-integral type %0
bit-field %0 has non-integral type %1
no %select{struct|interface|union|class|enum}0 named %1 in %2
%0 attribute only applies to %select{Objective-C object|pointer|pointer-to-CF-pointer}1 parameters
overriding method has mismatched ns_consumed attribute on its parameter
domain argument %select{|%1 }0does not refer to global constant
domain argument %0 does not point to an NSString or CFString constant
'NSObject' attribute is for pointer types only
overriding method has mismatched ns_returns_%select{not_retained|retained}0 attributes
nullability keyword %0 cannot be applied to multi-level pointer type %1
nullability specifier %0 cannot be applied to non-pointer type %1
array of interface %0 is invalid (probably should be an array of pointers)
parameter of %0 attribute must be a single name of an Objective-C %select{class|protocol}1
attribute %0 can only be applied to @protocol definitions, not forward declarations
parameter of %0 attribute must be 'id' when used on a typedef
'objc_bridge(id)' is only allowed on structs and typedefs of void pointers
could not find Objective-C class %0 to convert %1 to %2
%0 must be name of an Objective-C class to be able to convert %1 to %2
%0 must be explicitly converted to %1; use %select{%objcclass2|%objcinstance2}3 method for this conversion
CF object of type %0 is bridged to %1, which is not an Objective-C class
Objective-C declarations may only appear in global scope
%select{|direct }0%select{method|property}1 declaration conflicts with previous %select{|direct }2declaration of %select{method|property}1 %3
direct property cannot be @dynamic
direct method was declared in %select{the primary interface|an extension|a category}0 but is implemented in %select{the primary interface|a category|a different category}1
direct method implementation was previously declared not direct
methods that %select{override superclass methods|implement protocol requirements}0 cannot be direct
'objc_direct' attribute cannot be applied to %select{methods|properties}0 declared in an Objective-C protocol
%select{category %1|class extension}0 cannot conform to protocol %2 because of direct members declared in interface %3
cannot use '%0' with Objective-C exceptions disabled
initialization statement is not supported when iterating over Objective-C collection
illegal type %0 used in a boxed expression
incomplete type %0 used in a boxed expression
Objective-C index expression has incomplete class type %0
method for accessing %select{dictionary|array}1 element must have Objective-C object return type instead of %0
'__kindof' specifier cannot be applied to non-object type %0
'__kindof' type specifier must precede the declarator
literal construction method %0 has incompatible signature
%select{an array|a dictionary|a numeric literal|a boxed expression|}0 literal can only be used at file scope if %select{its contents are all also constant literals|its contents are all also constant literals and its keys are string literals|constant|constant}0
%0 %select{parameter|return}1 type is unsupported; support for vector types for this target is introduced in %2
indexing expression is invalid because subscript type %0 has multiple type conversion functions
cannot use a protocol declared 'objc_non_runtime_protocol' in a @protocol expression
non-trivially copyable type %0 cannot be used in a boxed expression
ObjectiveC object of type %0 is bridged to %1, which is not valid CF object
cannot assign to class object (%0 invalid)
cannot catch an Objective-C object by value
cannot override a method that is declared direct by a superclass
%select{extension|category}0 of non-parameterized class %1 cannot have type parameters
forward declaration of non-parameterized class %0 cannot have type parameters
class %0 previously declared with type parameters
objc_precise_lifetime only applies to retainable types; type here is %0
property attributes '%0' and '%1' are mutually exclusive
property with '%0' attribute must be of object type
objc_root_class attribute may only be specified on a root class declaration
cannot implement a category for class %0 that is only visible via the Objective-C runtime
cannot implement subclass %0 of a superclass %1 that is only visible via the Objective-C runtime
%select{dictionary|array}1 subscript base type %0 is not an Objective-C object
method object parameter type %0 is not object type
method index parameter type %0 is not integral type
method key parameter type %0 is not object type
expected method to %select{read|write}1 %select{dictionary|array}2 element not found on object of type %0
cannot assign to this %select{dictionary|array}1 because assigning method's 2nd parameter of type %0 is not an Objective-C pointer type
indexing expression is invalid because subscript type %0 is not an Objective-C pointer
indexing expression is invalid because subscript type %0 is not an integral or Objective-C pointer type
@synchronized requires an Objective-C object type (%0 invalid)
@throw requires an Objective-C object type (%0 invalid)
type argument %0 does not satisfy the bound (%1) of type parameter %2
type argument %0 cannot explicitly specify nullability
no type or protocol named %0
type argument %0 must be a pointer (requires a '*')
type argument %0 is neither an Objective-C object nor a block type
type argument %0 cannot be qualified with '%1'
angle brackets contain both a %select{type|protocol}0 (%1) and a %select{protocol|type}0 (%2)
type arguments cannot be applied to non-class type %0
type arguments cannot be applied to non-parameterized class %0
type arguments cannot be applied to already-specialized class type %0
too %select{many|few}0 type arguments for class %1 (have %2, expected %3)
%select{forward class declaration|class definition|category|extension}0 has too %select{few|many}1 type parameters (expected %2, have %3)
type bound %0 for type parameter %1 conflicts with %select{implicit|previous}2 bound %3%select{for type parameter %5|}4
type parameter %0 bound %1 cannot explicitly specify nullability
missing type bound %0 for type parameter %1 in %select{@interface|@class}2
missing '*' in type bound %0 for type parameter %1
type bound %0 for type parameter %1 is not an Objective-C pointer type
type bound %1 for type parameter %0 cannot be qualified with '%2'
redeclaration of type parameter %0
%select{in|co|contra}0variant type parameter %1 conflicts with previous %select{in|co|contra}2variant type parameter %3
cannot declare variable inside @interface or @protocol
field %0 with variable sized type %1 is not at the end of class
interface type %1 cannot be %select{returned|passed}0 by value; did you forget * in %1?
offsetof requires array type, %0 invalid
cannot compute offset of bit-field %0
invalid application of 'offsetof' to a field of a virtual base
offsetof of incomplete type %0
offsetof requires struct, union, or class type, %0 invalid
'adjust_arg' argument %0 used in multiple clauses
argument of aligned clause should be array%select{ or pointer|, pointer, reference to array or reference to pointer}1, not %0
allocator must be specified in the 'uses_allocators' clause
allocators used in 'uses_allocators' clause cannot appear in other data-sharing or data-mapping attribute clauses
ambiguous conversion from type %0 to an integral or unscoped enumeration type
'append_args' is not allowed with varargs functions
expected pointer, array, reference to pointer, or reference to array in 'is_device_ptr clause'
OpenMP array section is not allowed here
OpenMP array shaping operation is not allowed here
expected at least one 'to' clause or 'from' clause specified to '#pragma omp target update'
the statement for 'atomic capture' must be a compound statement of form '{v = x; x binop= expr;}', '{x binop= expr; v = x;}', '{v = x; x = x binop expr;}', '{v = x; x = expr binop x;}', '{x = x binop expr; v = x;}', '{x = expr binop x; v = x;}' or '{v = x; x = expr;}', '{v = x; x++;}', '{v = x; ++x;}', '{++x; v = x;}', '{x++; v = x;}', '{v = x; x--;}', '{v = x; --x;}', '{--x; v = x;}', '{x--; v = x;}' where x is an lvalue expression with scalar type
the statement for 'atomic capture' must be an expression statement of form 'v = ++x;', 'v = --x;', 'v = x++;', 'v = x--;', 'v = x binop= expr;', 'v = x = x binop expr' or 'v = x = expr binop x', where x and v are both lvalue expressions with scalar type
the statement for 'atomic compare' must be a compound statement of form '{x = expr ordop x ? expr : x;}', '{x = x ordop expr? expr : x;}', '{x = x == e ? d : x;}', '{x = e == x ? d : x;}', or 'if(expr ordop x) {x = expr;}', 'if(x ordop expr) {x = expr;}', 'if(x == e) {x = d;}', 'if(e == x) {x = d;}' where 'x' is an lvalue expression with scalar type, 'expr', 'e', and 'd' are expressions with scalar type, and 'ordop' is one of '<' or '>'.
the statement for 'atomic compare capture' must be a compound statement of form '{v = x; cond-up-stmt}', ''{cond-up-stmt v = x;}', '{if(x == e) {x = d;} else {v = x;}}', '{r = x == e; if(r) {x = d;}}', or '{r = x == e; if(r) {x = d;} else {v = x;}}', where 'cond-update-stmt' can have one of the following forms: 'if(expr ordop x) {x = expr;}', 'if(x ordop expr) {x = expr;}', 'if(x == e) {x = d;}', or 'if(e == x) {x = d;}' where 'x', 'r', and 'v' are lvalue expressions with scalar type, 'expr', 'e', and 'd' are expressions with scalar type, and 'ordop' is one of '<' or '>'.
directive '#pragma omp atomic%select{ %0|}1' cannot be used with '%2' clause
the statement for 'atomic' must be an expression statement of form '++x;', '--x;', 'x++;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an lvalue expression with scalar type
the statement for 'atomic read' must be an expression statement of form 'v = x;', where v and x are both lvalue expressions with scalar type
directive '#pragma omp atomic' cannot contain more than one 'read', 'write', 'update', 'capture', or 'compare' clause
the statement for 'atomic update' must be an expression statement of form '++x;', '--x;', 'x++;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an lvalue expression with scalar type
the statement for 'atomic write' must be an expression statement of form 'x = expr;', where x is a lvalue expression with scalar type
bit fields cannot be used to specify storage in a '%0' clause
the host cannot update a declare target variable that is not externally visible.
arguments of OpenMP clause '%0' with bitwise operators cannot be of floating type
arguments of OpenMP clause '%0' for 'min' or 'max' must be of %select{scalar|arithmetic}1 type
'%0' clause requires 'dispatch' context selector
'%0' and '%1' clause are mutually exclusive and may not appear on the same directive
const-qualified list item cannot be %0
const-qualified variable without mutable fields cannot be %0
const-qualified variable cannot be %0
constructs with the same name must have a 'hint' clause with the same value
redefinition of user-defined mapper for type %0 with name %1
only variable %0 is allowed in map clauses of this 'omp declare mapper' directive
redefinition of user-defined reduction for type %0
%0 must not appear in both clauses 'to' and 'link'
function with '#pragma omp declare variant' has a different %select{calling convention|return type|constexpr specification|inline specification|storage class|linkage}0
'#pragma omp declare variant' does not support %select{function templates|virtual functions|deduced return types|constructors|destructors|deleted functions|defaulted functions|constexpr functions|consteval function}0
'#pragma omp declare variant' is not compatible with any target-specific attributes
variant in '#pragma omp declare variant' with type %0 is incompatible with type %1%select{| with appended arguments}2
function with '#pragma omp declare variant' must have a prototype when 'append_args' is used
variant in '#pragma omp declare variant' is the same as the base function
the user condition in the OpenMP context selector needs to be constant; %0 is not
variable %0 must have explicitly specified data sharing attributes, data mapping attributes, or in an is_device_ptr clause
'depend' clauses cannot be mixed with '%0' clause
expected iterator specification as depend modifier
expected%select{| %1}0 loop iteration variable
expected '+' or '-' operation
'depend(%select{source|sink:vec}0)' clause%select{|s}0 cannot be mixed with 'depend(%select{sink:vec|source}0)' clause%select{s|}0
depend modifier cannot be used with 'sink' or 'source' depend type
unexpected expression: number of expressions is larger than the number of associated loops
zero-length array section is not allowed in 'depend' clause
expected depobj expression
exactly one of 'depend', 'destroy', or 'update' clauses is expected
Device clause with ancestor device-modifier used without specifying 'requires reverse_offload'
'device_type(%0)' does not match previously specified 'device_type(%1)' for the same declaration
'%0' region encountered before requires directive with '%1' clause
statement after '#pragma omp dispatch' must be a direct call to a target function or an assignment to one
same map type modifier has been specified more than once
same motion modifier has been specified more than once
expected access to data field
expected addressable lvalue expression, array element%select{ or array section|, array section or array shaping expression}0%select{| of non 'omp_depend_t' type}1
expected constant sized array of 'omp_alloctrait_t' elements, not %0
expected variable name as a base of the array %select{subscript|section}0
expected a reference to an integer-typed parameter
expected expression containing only member accesses and/or array sections based on named variables
expected lvalue expression%select{ of 'omp_depend_t' type, not %1|}0
expected one of the predefined allocators for the variables with the static storage: 'omp_default_mem_alloc', 'omp_large_cap_mem_alloc', 'omp_const_mem_alloc', 'omp_high_bw_mem_alloc', 'omp_low_lat_mem_alloc', 'omp_cgroup_mem_alloc', 'omp_pteam_mem_alloc' or 'omp_thread_mem_alloc'
the referenced item is not found in any private clause on the same directive
expected a reference to a parameter specified in a 'uniform' clause
%0 is not a global variable, static local variable or static data member
%0 is not a global variable, static local variable or static data member; did you mean %1
expected variable name%select{| or data member of current class}0
expected variable name%select{|, data member of current class}0, array element or array section
expected variable%select{| or static data member|, static data member, or non-static data member of current class}0 of type '%1'
expression requires explicit conversion from %0 to %1
a firstprivate variable with incomplete type %0
'flush' directive with memory order clause '%0' cannot have the list
'#pragma omp declare %select{simd|variant}0' can only be applied to functions
function name is not allowed in 'link' clause
arguments of '#pragma omp %0' must have %select{global storage|static storage duration}1
the name of the construct must be specified in presence of 'hint' clause
'%0' type not found; include <omp.h>
the list item must appear in 'reduction' clause with the 'inscan' modifier of the parent directive
expression has incomplete class type %0
expected 'reduction' clause with the 'inscan' modifier
instantiation of '%0' not supported yet
'depend' clause requires the 'targetsync' interop type
prefer_list item must be a string literal or constant integral expression
'omp_interop_t' must be defined when 'append_args' clause is used; include <omp.h>
interop variable %0 used in multiple action clauses
expected%select{| non-const}0 variable of type 'omp_interop_t'
interop variable must be of type 'omp_interop_t'
invalid 'this' expression on 'map' clause
%select{map type '%1' is not allowed|map type must be specified}0 for '#pragma omp %2'
map type modifier '%0' is not allowed for '#pragma omp %1'
cannot find a valid user-defined mapper for type %0 with name %1
'#pragma omp %0' directive must appear only in file scope
%0 used in declare target directive is not a variable or a function name
expected loop invariant expression
expected loop invariant expression or '<invariant1> * %0 + <invariant2>' kind of expression
expected integral or pointer type as the iterator-type, not %0
iterator step expression %0 evaluates to 0
iterator step expression %0 is not the integral expression
OpenMP iterator is not allowed here
variable captured in declare target region must appear in a to clause
expected list item of scalar type in 'lastprivate' clause with 'conditional' modifier
a lastprivate variable with incomplete type %0
only loop iteration variables are allowed in 'lastprivate' clause in 'omp %0' directives
only loop iteration variables are allowed in 'linear' clause in distribute directives
argument of a linear clause should be of integral or pointer type, not %0
a linear variable with incomplete type %0
'linear' clause cannot be specified along with 'ordered' clause with a parameter
variable with local storage in initial value of threadprivate variable
'%0' statement cannot be used in OpenMP for loop
could not calculate number of iterations calling 'operator-' with upper and lower loop bounds
increment expression must cause %0 to %select{decrease|increase}1 on each iteration of OpenMP for loop
condition of OpenMP for loop must be a relational comparison ('<', '<=', '>', %select{or '>='|'>=', or '!='}0) of loop variable %1
increment clause of OpenMP for loop must perform simple addition or subtraction on loop variable %0
initialization clause of OpenMP for loop is not in canonical form ('var = init' or 'T var = init')
loop iteration variable in the associated loop of 'omp %1' directive may not be %0, predetermined as %2
variable must be of integer or %select{pointer|random access iterator}0 type
variable already marked as mapped in current construct
mapper type must be of struct, union or class type
multiple array elements associated with the same variable are not allowed in map clauses of the same construct
argument to '%0' clause must be a %select{non-negative|strictly positive}1 integer value
expected at least one %0 clause for '#pragma omp %1'
variable %0 must have explicitly specified data sharing attributes
no more 'if' clause is allowed
expected addressable lvalue in '%0' clause
expected expression with a pointer to a complete type as a base of an array shaping operation
non-predefined allocator must have traits specified
%select{statement after '#pragma omp %1' must be a for loop|expected %2 for loops after '#pragma omp %1'%select{|, but found only %4}3}0
expression must have integral or unscoped enumeration type, not %0
unable to resolve declare reduction construct for type %0
variable can appear only once in OpenMP '%0' clause
variable can appear only once in OpenMP 'target update' construct
at most one defaultmap clause for each variable-category can appear on the directive
'ordered' directive %select{without any clauses|with 'threads' clause}0 cannot be closely nested inside ordered region with specified parameter
'ordered' directive with 'depend' clause cannot be closely nested inside ordered region without specified parameter
'ordered' clause with a parameter can not be specified in '#pragma omp %0' directive
original storage of expression in data environment is shared but data environment do not fully contain mapped expression storage
orphaned 'omp %0' directives are prohibited; perhaps you forget to enclose the directive into a %select{|||target |teams|for, simd, for simd, parallel for, or parallel for simd }1region?
%select{orphaned 'omp section' directives are prohibited, it|'omp section' directive}0 must be closely nested to a sections region%select{|, not a %1 region}0
argument of a reduction clause of a %0 construct must not appear in a firstprivate clause on a task construct
the statement for '#pragma omp parallel sections' must be a compound statement
statement in 'omp parallel sections' directive must be enclosed into a section region
expected reference to one of the parameters of function %0%select{| or 'this'}1
parent region for 'omp %select{cancellation point|cancel}0' construct cannot be nowait
parent region for 'omp %select{cancellation point|cancel}0' construct cannot be ordered
pointer cannot be mapped along with a section derived from itself
predefined allocator cannot have traits specified
a private variable with incomplete type %0
region cannot be%select{| closely}0 nested inside '%1' region%select{|; perhaps you forget to enclose 'omp %3' directive into a parallel region?|; perhaps you forget to enclose 'omp %3' directive into a for or a parallel for region with 'ordered' clause?|; perhaps you forget to enclose 'omp %3' directive into a target region?|; perhaps you forget to enclose 'omp %3' directive into a teams region?|; perhaps you forget to enclose 'omp %3' directive into a for, simd, for simd, parallel for, or parallel for simd region?}2
OpenMP constructs may not be nested inside an atomic region
cannot nest 'critical' regions having the same name %0
OpenMP constructs may not be nested inside a simd region%select{| except for ordered simd, simd, scan, or atomic directive}0
list item of type %0 is not valid for specified reduction operation: unable to provide default initialization value
in_reduction variable must have the same reduction operation as in a task_reduction clause
reduction variables may not be accessed in an explicit task
a reduction list item with incomplete type %0
expected addressable reduction item for the task-based directives
the inscan reduction list item must appear as a list item in an 'inclusive' or 'exclusive' clause on an inner 'omp scan' directive
argument of OpenMP clause '%0' must reference the same object in all threads
'reduction' clause with 'task' modifier allowed only on non-simd parallel or worksharing constructs
cannot generate code for reduction on %select{|array section, which requires a }0variable length array
'reduction' clause cannot be used with 'nogroup' clause
reduction type cannot be %select{qualified with 'const', 'volatile' or 'restrict'|a function|a reference|an array}0 type
arguments of '#pragma omp %0' cannot be of reference type %1
directive must be at file or namespace scope
%0 variable must be %1
Only one %0 clause can appear on a requires directive in a single translation unit
same pointer dereferenced in multiple different ways in map clause expressions
exactly one of 'inclusive' or 'exclusive' clauses is expected
'nonmonotonic' modifier can only be specified with 'dynamic' or 'guided' schedule kind
section of pointer to function type %0
section of pointer to incomplete type %0
section length is evaluated to a negative value %0
section length is unspecified and cannot be inferred because subscripted value is %select{not an array|an array of unknown bound}0
array section must be a subset of the original array
section stride is evaluated to a non-positive value %0
the statement for '#pragma omp sections' must be a compound statement
statement in 'omp sections' directive must be enclosed into a section region
exactly one '%0' directive must appear in the loop body of an enclosing directive
directive '#pragma omp %0' cannot contain more than one %select{'seq_cst', 'relaxed', |}1'acq_rel', 'acquire' or 'release' clause
array shaping dimension is evaluated to a non-positive value %0
'%0' statement cannot be used in OpenMP simd region
'%0' clause with '%1' modifier cannot be specified if an 'ordered' clause is specified
the 'copyprivate' clause must not be used with the 'nowait' clause
single declaration is expected after 'declare %select{simd|variant}0' directive
the loop %select{initializer|condition}0 expression depends on the current loop control variable
target construct with nested teams region contains statements outside of the teams construct
'mutexinoutset' modifier not allowed in 'depend' clause on 'taskwait' directive
threadprivate variables are not allowed in '%0' clause
threadprivate variables cannot be used in target constructs
threadprivate variable with incomplete type %0
array section %select{lower bound|length}0 is not an integer
subscripted value is not an array or pointer
array shaping operation dimension is not an integer
expected %0 in OpenMP clause '%1'
modifier '%0' cannot be used along with modifier '%1'
mapping of union members is not allowed
incorrect reduction identifier, expected one of '+', '-', '*', '&', '|', '^', '&&', '||', 'min' or 'max' or declare reduction for type %0
expected%select{| one of}0 %1 directive name modifier%select{|s}0
loop to be fully unrolled must have a constant trip count
%select{a variable|a parameter|'this'}0 cannot appear in more than one %1 clause
expected pointer or reference to pointer in 'use_device_ptr' clause
expected variable of the '%0' type%select{|, not %2}1
'#pragma omp %0' must appear in the scope of the %q1 variable declaration
variable %0 cannot be threadprivate because it is %select{thread-local|a global named register variable}1
'#pragma omp %0' must precede all references to variable %q1
%0 variable cannot be in a %1 clause in '#pragma omp %2' directive
arguments of OpenMP clause '%0' in '#pragma omp %2' directive cannot be of variably-modified type %1
one of 'for', 'parallel', 'sections' or 'taskgroup' is expected
expected an integer or a pointer type of the outer loop counter '%0' for non-rectangular nests
function with 'device_type(%0)' is not available on %select{device|host}1
%0 variable cannot be %1
directive name modifier '%0' is not allowed for '#pragma omp %1'
'inscan' modifier can be used only in 'omp for', 'omp simd', 'omp for simd', 'omp parallel for', or 'omp parallel for simd' directive
expected %select{'val' modifier|one of 'ref', val' or 'uval' modifiers}0
variable of non-reference type %0 can be used only with 'val' modifier, but used with '%1'
the parameter of the 'ordered' clause must be greater than or equal to the parameter of the 'collapse' clause
the value of 'simdlen' parameter must be less than or equal to the value of the 'safelen' parameter
only %select{'omp_priv' or 'omp_orig'|'omp_in' or 'omp_out'}0 variables are allowed in %select{initializer|combiner}0 expression
access specifier can only have annotation attributes
only constructors take base initializers
only enumeration types have underlying types
variables in the %0 address space can only be declared in the outermost scope of a kernel function
atomic variable can be %select{assigned|initialized}0 to a variable only in global address space
bit-fields are not supported in OpenCL
cannot refer to a block inside block
the __block storage type is not permitted
illegal call to %0, expected %1 argument type
invalid number of arguments to function: %0
first argument to %0 must be a pipe type
invalid pipe access modifier (expecting %0)
invalid argument type to function %0 (expecting %1 having %2)
invalid argument %0 to function: %1, expecting a generic pointer argument
cannot cast non-zero value '%0' to 'event_t'
casting to type %0 is not allowed
variable in constant address space must be initialized
blocks with parameters are not accepted in this prototype of enqueue_kernel call
blocks used in enqueue_kernel call are expected to have parameters of type 'local void*'
illegal call to enqueue_kernel, incorrect argument types
illegal call to enqueue_kernel, parameter needs to be specified as integer type
mismatch in number of block parameters and local size arguments passed
vector component access has invalid length %0.  Supported: 1,2,3,4,8,16.
invalid block variable declaration - using 'extern' storage class is disallowed
%select{pointers|references}0 to functions are not allowed
%select{non-kernel function|function scope}0 variable cannot be declared in %1 address space
%select{program scope|static local|extern}0 variable must reside in %1 address space
declaring variable of type %0 is not allowed
%select{loading directly from|assigning directly to}0 pointer to type %1 requires cl_khr_fp16. Use vector data %select{load|store}0 builtin functions instead
implicit conversions between vector types (%0 and %1) are not permitted
access qualifier can only be used for pipe and image type
invalid block variable declaration - must be %select{const qualified|initialized}0
declaring function parameter of type %0 is not allowed%select{; did you forget * ?|}1
access qualifier %0 can not be used for %1 %select{|prior to OpenCL C version 2.0 or in version 3.0 and without __opencl_c_read_write_images feature}2
declaring function return value of type %0 is not allowed %select{; did you forget * ?|}1
array of %0 type is invalid in OpenCL
attribute %0 can only be applied to an OpenCL kernel function
multiple access qualifiers
%select{function|kernel}0 cannot be called 'main'
global sampler requires a const or constant address space qualifier
pointer to type %0 is invalid in OpenCL
kernel parameter cannot be declared as a pointer to a pointer
use of %select{type|declaration}0 %1 requires %2 support
return value cannot be qualified with address space
scalar operand type has greater rank than the type of the vector element. (%0 and %1)
invalid application of '%0' to a void type
taking address of a capture is not allowed
block type cannot be used as expression in ternary expression in OpenCL
type %0 can only be used as a function parameter in OpenCL
%0 type %1 not found; include the base header with -finclude-default-header
the %0 type cannot be used to declare a structure or union field
invalid prototype, variadic arguments are not allowed in OpenCL
variable length arrays are not supported in OpenCL
use of placement new requires explicit declaration
invalid application of '__builtin_omp_required_simd_align' to an expression, only type is allowed
variable length arrays are not supported in OpenMP tasking regions with 'untied' clause
circular pointer delegation detected
use of 'operator->' on type %0 would invoke a sequence of more than %1 'operator->' calls
%0 cannot take a dependent type as first parameter; use %1 instead
first parameter of %0 must have type %1
parameter of %0 cannot have a default argument
%0 cannot be declared inside a namespace
%0 cannot be declared static in global scope
%0 cannot have a dependent return type; use %1 instead
%0 must return type %1
%0 template must have at least two parameters
%0 must have at least one parameter
%0 cannot take a dependent type as first parameter; use size_t (%1) instead
%0 takes type size_t (%1) as first parameter
parameter of overloaded %0 cannot have a default argument
overloaded %0 must be a %select{unary|binary|unary or binary}2 operator (has %1 parameter%s1)
overloaded %0 must be a non-static member function
overloaded %0 must have at least one parameter of class or enumeration type
parameter of overloaded post-%select{increment|decrement}1 operator must have type 'int' (not %0)
overloaded %0 cannot be a static member function
overloaded %0 cannot be variadic
os_log() argument %0 is too big (%1 bytes, max %2)
os_log() format argument is not a string constant
defaulting this %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 would delete it after its first declaration
qualified reference to %0 is a constructor name rather than a %select{template name|type}1 in this context
__builtin_mul_overflow does not support 'signed _BitInt' operands of more than %0 bits
operand argument to overflow builtin must be an integer (%0 invalid)
result argument to overflow builtin must be a pointer to a non-const integer (%0 invalid)
exception specification of overriding function is more lax than base version
call to %0 is ambiguous
ambiguous conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2
call to constructor of %0 is ambiguous
call to member function %0 is ambiguous
call to object of type %0 is ambiguous
use of overloaded operator '%0' is ambiguous (with operand types %1 and %2)
use of overloaded operator '%0' is ambiguous (operand type %1)
call to subscript operator of type %0 is ambiguous
call to deleted function %0
object of type %0 cannot be compared because its %1 is implicitly deleted
%select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2 uses deleted function
call to deleted constructor of %0
call to deleted member function %0
call to deleted function call operator in type %0
overload resolution selected deleted operator '%0'
call to implicitly-deleted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}0 of %1
object of type %0 cannot be %select{constructed|copied|moved|assigned|assigned|destroyed}1 because its %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 is implicitly deleted
functions that differ only in their return type cannot be overloaded
cannot convert %1 to %2 without a conversion operator
type %0 does not provide a %select{subscript|call}1 operator
no matching conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2
no matching function for call to %0
no matching constructor for initialization of %0
no matching literal operator for call to %0%select{| with argument of type %2| with arguments of types %2 and %3}1%select{| or 'const char *'}4%select{|, and no matching literal operator template}5
no matching member function for call to %0
no matching function for call to object of type %0
no viable overloaded '%0'
no viable overloaded operator[] for type %0
return type %0 of selected 'operator==' function for rewritten '%1' comparison is not 'bool'
static and non-static member functions with the same parameter types cannot be overloaded
reference to %select{overloaded|multiversioned}1 function could not be resolved; did you mean to call it%select{| with no arguments}0?
'ownership_returns' attribute index does not match; here it is %0
%0 attribute only applies to %select{pointer|integer}1 arguments
pack expansion contains parameter packs %0 and %1 that have different lengths (%2 vs. %3)
pack expansion contains parameter pack %0 that has a different length (%1 vs. %2) from outer parameter packs
pack expansion contains parameter pack %0 that has a different length (at least %1 vs. %2) from outer parameter packs
pack expansion for initialization of member %0
pack expansion does not contain any unexpanded parameter packs
C does not support default arguments
default arguments cannot be added to an out-of-line definition of a member of a %select{class template|class template partial specialization|nested class in a template}0
missing default argument on parameter
missing default argument on parameter %0
default arguments can only be specified for parameters in a function declaration
parameter pack cannot have a default argument
redefinition of default argument
default argument references local variable %0 of enclosing function
default argument references parameter %0
default argument references 'this'
default arguments cannot be added to a function template that has already been declared
argument may not have 'void' type
a lambda parameter cannot shadow an explicitly captured entity
%select{parameters|function return value}0 cannot have __fp16 type; did you forget * ?
cannot parenthesize the name of a method when forming a member pointer
%select{class|variable}0 template partial specialization does not specialize any template argument; to %select{declare|define}1 the primary template, remove the template argument list
partial specialization of %0 does not use any of its template parameters
ambiguous partial specializations of %0
class template partial specialization %0 cannot be redeclared
partial specialization cannot be declared as a friend
deduced type %0 does not satisfy %1
'new' expression with placement arguments refers to non-placement 'operator delete'
call to pointer to member function of type %0 drops '%1' qualifier%s2
pointer-to-member function type %0 can only be called on an %select{rvalue|lvalue}1
invalid use of pointer to member type after %select{.*|->*}0
this builtin is only valid on POWER%0 or later CPUs
this builtin requires ABI -mabi=%0
this builtin requires HTM to be enabled
this builtin requires VSX to be enabled
expected a 'float' or 'double' for the first argument
invalid use of PPC MMA type
'#pragma alloc_text' is applicable only to functions with C linkage
'#pragma alloc_text' is applicable only to functions
'#pragma clang attribute' attribute with no matching '#pragma clang attribute push'
attribute %0 can't be applied to %1
negated attribute subject matcher sub-rule '%0' contradicts sub-rule '%1'
redundant attribute subject matcher sub-rule '%0'; '%1' already matches those declarations
unterminated '#pragma clang attribute push' at end of file
'#pragma clang attribute %select{%1.|}0pop' with no matching '#pragma clang attribute %select{%1.|}0push'
'#pragma %0' can only appear at file scope
'#pragma float_control(except, on)' is illegal when precise is disabled
'#pragma float_control(precise, off)' is illegal when except is enabled
'#pragma float_control(precise, off)' is illegal when fenv_access is enabled
'#pragma float_control push/pop' can only appear at file or namespace scope or within a language linkage specification
'#pragma STDC FENV_ACCESS ON' is illegal when precise is disabled
%select{incompatible|duplicate}0 directives '%1' and '%2'
invalid argument of type %0; expected an integer type
%select{invalid value '%0'; must be positive|value '%0' is too large}1
expected a for, while, or do-while loop to follow '%0'
mac68k alignment pragma is not supported on this target
specifying an identifier within `#pragma pack` is not supported on this target
expected #pragma pack parameter to be '1', '2', '4', '8', or '16'
#pragma visibility pop with no matching #pragma visibility push
#pragma visibility push with no matching #pragma visibility pop
argument to #pragma section is not valid for this target: %0
__builtin_preserve_enum_value argument %0 invalid
__builtin_preserve_enum_value argument %0 not a constant
__builtin_preserve_field_info argument %0 not a constant
__builtin_preserve_field_info argument %0 not a field access
__builtin_preserve_type_info argument %0 invalid
__builtin_preserve_type_info argument %0 not a constant
instance variable %0 is private
private module fragment declaration with no preceding module declaration
private module fragment in module implementation unit
private module fragment redefined
probability argument to __builtin_expect_with_probability must be constant floating-point expression
probability argument to __builtin_expect_with_probability is outside the range [0.0, 1.0]
type of property %0 (%1) does not match type of accessor %2 (%3)
property %0 found on object of type %1; did you mean to access it with the "." operator?
use of Objective-C property in function nested in Objective-C container not supported, move function outside its container
property %0 is already implemented
property %0 has a variably modified type
type of property %0 (%1) does not match type of instance variable %2 (%3)
property access is using %0 method which is unavailable
property %0 refers to an incomplete Objective-C class %1 (with no @interface available)
property %0 not found on object of type %1
property %0 cannot be found in forward class object %1
property %0 not found on object of type %1; did you mean %2?
synthesized properties %0 and %1 both claim setter %2 - use of this setter will cause unexpected behavior
property cannot have array or function type %0
instance variable %0 is protected
protocol has circular dependency
property %select{of type %1|with attribute '%1'|without attribute '%1'|with getter %1|with setter %1}0 was selected for synthesis
object expression of non-scalar type %0 cannot be used in a pseudo-destructor expression
call to pseudo-destructor cannot have any arguments
%0 does not refer to a type name in pseudo-destructor expression; expected the name of type %1
the type of object expression %diff{($) does not match the type being destroyed ($)|does not match the type being destroyed}0,1 in pseudo-destructor expression
address discrimination flag for __ptrauth must be 0 or 1; value is %0
argument to %select{__ptrauth|ptrauth_struct}0 must be an integer constant expression
discriminator argument to ptrauth_sign_constant must be a constant integer, the address of the global variable where the result will be stored, or a blend of the two
argument to ptrauth_sign_constant must refer to a global variable or function
pointer authentication is disabled for the current target
this target does not support pointer authentication
empty __ptrauth authentication option
extra discriminator for %select{__ptrauth|ptrauth_struct}2 must be between 0 and %1; value is %0
%select{static locals|globals}0 with authenticated null values are currently unsupported
%0 does not identify a valid pointer authentication key for the current target
invalid character in __ptrauth options
missing comma between __ptrauth options
attribute ptrauth_struct cannot be used on class %0 or its subclasses because it is a dynamic class
__ptrauth options must be a string of comma separated flags, found %0
%0 qualifier must take between 1 and 4 arguments
cast types may not be qualified with __ptrauth; type is %0
%select{return types|parameter types|properties}2 may not be qualified with %select{__ptrauth|__ptrauth_restricted_intptr}1; type is %0
__ptrauth qualifier may only be applied to pointer types; type here is %0
type %0 is already %1-qualified
signed pointer types may not be qualified with __ptrauth(ptrauth_key_none); type is %0
repeated __ptrauth authentication %select{mode|option}0
__ptrauth_restricted_intptr qualifier may only be applied to pointer sized integer types; type here is %0
argument must be a string literal%select{| of char type}0
argument to '__builtin_ptrauth_type_discriminator' isn't a record type
%0 is signed differently from the previous declaration
cannot pass undiscriminated type %0 to '__builtin_ptrauth_type_discriminator'
unknown __ptrauth authentication option %0
%select{signed value|extra discriminator|blended pointer|blended integer}0 must have %select{pointer|integer|pointer or integer}1 type; type here is %2
friend declaration cannot have a pure-specifier
exception declarator cannot be qualified
friend function definition cannot be qualified with '%0'
friend declaration of %0 does not match any declaration in %1
type operand %0 of 'typeid' cannot have '%1' qualifier
qualified member access refers to a member in %0
%q0 is not a member of class %1
%select{property|instance variable}0 access cannot be qualified with '%1'
@catch parameter declarator cannot be qualified
parameter declarator cannot be qualified
typedef declarator cannot be qualified
cannot build range expression with array function parameter %0 since parameter with array type %1 is treated as pointer type %2
assigning to 'readonly' return result of an Objective-C message not allowed
invalid type %0 to %1 operator
%select{struct|union}0 kernel parameters may not contain pointers
recursive evaluation of default argument
trying to recursively use %0 as superclass of %1
redeclaration of %0 with a different type%diff{: $ vs $|}1,2
cannot export redeclaration %0 here since the previous declaration %select{is not exported|has internal linkage|has module linkage}1
redefinition of %0
redefinition of concept %0 with different template parameters or requirements
redefinition of %0 as different kind of symbol
redefinition of %0 as an alias for a different namespace
redefinition of %0 with a different type%diff{: $ vs $|}1,2
%select{typedef|type alias|type alias template}0 redefinition with different types%diff{ ($ vs $)|}1,2
redefinition of a 'extern inline' function %0 is not supported in %select{C99 mode|C++}1
redefinition of enumerator %0
redefinition of label %0
redefinition of %select{typedef|type alias}0 for variably-modified type %1
cannot refer to declaration with an array type inside block
reference to %select{__device__|__global__|__host__|__host__ __device__}0 %select{function|variable}1 %2 in %select{__device__|__global__|__host__|__host__ __device__}3 function
reference to %select{__device__|__global__|__host__|__host__ __device__}0 function %1 in global initializer
cannot refer to declaration of structure variable with flexible array member inside block
reference initialization of type %0 with initializer of type %1 is ambiguous
%0 does not refer to a value
ref-qualifier '%select{&&|&}0' is not allowed on a constructor
ref-qualifier '%select{&&|&}0' is not allowed on a destructor
cannot overload a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}0 with a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}1
cannot refer to declaration with a variably modified type inside block
binding reference %diff{of type $ to value of type $|to value}0,1 %select{drops %3 qualifier%plural{1:|2:|4:|:s}4|changes address space|not permitted due to incompatible qualifiers}2
reference %diff{to %select{type|incomplete type}1 $ could not bind to an %select{rvalue|lvalue}2 of type $|could not bind to %select{rvalue|lvalue}2 of incompatible type}0,3
reference to type %0 cannot bind to an initializer list
reference of type %0 cannot bind to a temporary object because of address space mismatch
%select{non-const|volatile}0 reference cannot bind to bit-field%select{| %1}2
%select{non-const|volatile}0 reference cannot bind to matrix element
%select{non-const|volatile}0 reference cannot bind to vector element
'&' cannot precede a capture when the capture default is '&'
reference cannot be initialized with multiple values
pipes packet types cannot be of reference type
invalid reference to function %0: constraints not satisfied
reference to local %select{variable|binding}1 %0 declared in enclosing %select{%3|block literal|lambda expression|context}2
cannot form a reference to 'void'
declaration of reference variable %0 requires an initializer
reference to type %0 requires an initializer
function declared with regparm(%0) attribute was previously declared %plural{0:without the regparm|:with the regparm(%1)}1 attribute
%0 attribute cannot be repeated
variable does not have a constant initializer
default arguments not allowed for parameters of a requires expression
constraint variable %0 cannot be used in an evaluated context
cannot subclass a class that was declared with the 'objc_subclassing_restricted' attribute
returning block that lives on the local stack
@throw (rethrow) used outside of a @catch block
void block should not return a value
cannot return from %0
return in the catch of a function try block of a constructor is illegal
return statement not allowed in coroutine; did you mean 'co_return'?
%select{void function|void method|constructor|destructor}1 %0 must not return a value
LMUL argument must be in the range [0,3] or [5,7]
builtin requires%select{| at least one of the following extensions to be enabled}0: %1
%0 cannot use 'super' because it is a root class
argument should be the value 90 or 270
argument should be the value 0, 90, 180 or 270
rvalue reference type %0 is not allowed in exception specification
sampler_t variable required - got %0
sampler_t initialization requires 32-bit integer, not %0
second argument to __builtin_call_with_static_chain must be of pointer type
second argument to 'va_arg' is of abstract type %0
second argument to 'va_arg' is of incomplete type %0
%0 causes a section type conflict with %1
cannot use SEH '__try' in a coroutine when C++ exceptions are enabled
cannot use SEH '__try' in blocks, captured regions, or Obj-C method decls
SEH '__try' is not supported on this target
chosen constructor is explicit in copy-initialization
selector element of type %0 cannot be a constant lvalue expression
selector element is not a valid lvalue
selector element type %0 is not a valid object
type of setter must be void
%select{'#pragma clang fp eval_method'|option 'ffp-eval-method'}0 cannot be used with %select{option 'fapprox-func'|option 'mreassociate'|option 'freciprocal'|option 'ffp-eval-method'|'#pragma clang fp reassociate'}1
initialization is not supported for __shared__ variables.
requested shift is a vector of type %0 but the first operand is not a vector (%1)
index for __builtin_shufflevector must be less than the total number of vector elements
index for __builtin_shufflevector must be a constant integer
%select{|reference to }0sizeless type %1 is not allowed in exception specification
non-local variable with sizeless type %0
invalid application of '%0' to a function type
invalid application of '%0' to %select{an incomplete|sizeless}1 type %2
invalid application of '%select{sizeof|alignof|typeof|typeof_unqual}0' to bit-field
application of '%select{alignof|sizeof}1' to interface %0 is not supported on this architecture and platform
%0 does not refer to the name of a parameter pack
%0 does not refer to the name of a parameter pack; did you mean %1?
function declared '%0' was previously declared '%1' with different SME function attributes
argument to 'operator<=>' %select{cannot be narrowed from type %1 to %2|evaluates to %1, which cannot be narrowed to type %2}0
specialization of member %q0 does not specialize an instantiated member
explicit specialization of %0 after instantiation
cannot reference member of primary template because deduced class template specialization %0 is %select{instantiated from a partial|an explicit}1 specialization
cannot specialize %select{|(with 'template<>') }0a member of an unspecialized template
forward declaration of %select{class|struct|interface|union|enum}0 cannot have a nested name specifier
static assertion expression is not an integral constant expression
static assertion failed%select{: %1|}0
static assertion failed due to requirement '%0'%select{: %2|}1
function declared in block scope cannot have 'static' storage class
static data member %0 not allowed in anonymous %select{struct|interface|union|class|enum}1
static data member %0 not allowed in local %select{struct|interface|union|class|enum}2 %1
static data member %0 already has an initializer
cannot cast %0 to %1 via virtual base %2
variables in function scope cannot be declared static
the 'static' modifier for the array size is not legal in new expressions
kernel functions cannot be declared static
'main' is not allowed to be declared static
static declaration of %0 follows non-static declaration
static member %0 cannot be a bit-field
'static' can only be specified inside the class definition
'static' member function %0 overrides a virtual function in a base class
interface type cannot be statically allocated
standard library implementation of %0 is not supported; %select{member '%2' does not have expected form|member '%2' is missing|the type is not trivially copyable|the type does not have the expected form}1
'std::source_location::__impl' must be standard-layout and have only two 'const char *' fields '_M_file_name' and '_M_function_name', and two integral fields '_M_line' and '_M_column'
'std::source_location::__impl' was not found; it must be defined before '__builtin_source_location' is called
unsupported standard library implementation: 'std::%0' is not a class template
default %select{argument|non-type template argument}0 may not use a GNU statement expression
static data member definition cannot specify a storage class
@catch parameter cannot have storage specifier '%0'
storage class specified for a member declaration
impossible constraint in asm: can't store value into a register
existing instance variable %1 for strong property %0 may not be __weak
subscript of pointer to function type %0
subscript of pointer to %select{incomplete|sizeless}0 type %1
subscript requires size of interface %0, which is not constant for this architecture and platform
subscript of svbool_t is not allowed
use of '__super' inside a lambda is unsupported
'%0' parameter must have pointer%select{| to unqualified pointer}1 type; type here is %2
'swift_async' completion handler parameter must have block type returning 'void', type here is %0
%0 attribute with 'nonnull_error' convention can only be applied to a %select{function|method}1 with a completion handler with an error parameter
%0 attribute with '%1' convention must have an integral-typed parameter in completion handler at index %2, type here is %3
%0 attribute must be applied to a %select{function|method}1 annotated with non-'none' attribute 'swift_async'
first argument to 'swift_async' must be either 'none', 'swift_private', or 'not_swift_private'
'swift_error_result' parameter must follow 'swift_context' parameter
'swift_indirect_result' parameters must be first parameters of function
'%0' parameter can only be used with swiftcall%select{ or swiftasynccall|}1 calling convention%select{|s}1
switch condition type %0 requires explicit conversion to %1
switch condition has incomplete class type %0
cannot jump from switch statement to this case label
multiple conversions from switch condition type %0 to an integral or enumeration type
types with 'sycl_special_class' attribute must have one and only one '__init' method defined
@synthesize not allowed in a category's implementation
@synthesize not allowed on a class property %0
synthesized property with variable size type %0 requires an existing instance variable
cannot synthesize weak property in file using manual reference counting
cannot synthesize weak property because the current deployment target does not support weak references
invalid transaction abort code
definition of type %0 conflicts with %select{typedef|type alias}1 of the same name
%select{type tag|argument}0 index %1 is greater than the number of arguments specified
implicit declaration introduced by elaborated type conflicts with a %select{non-struct type|non-class type|non-union type|non-enum type|typedef|type alias|template|type alias template|template template argument}0 of the same name
%select{non-struct type|non-class type|non-union type|non-enum type|typedef|type alias|template|type alias template|template template argument}1 %0 cannot be referenced with a %select{struct|interface|union|class|enum}2 specifier
friend type templates must use an elaborated type
'target_clones' attribute does not match previous declaration
'target_clones' multiversioning requires a default target
%0 requires %select{|%2 bit size}1 %3 %select{|return }4type support, but target '%5' does not support it
attributes '%0("%2")' and '%1("%2")' are mutually exclusive
ambiguous constructor call when %select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1
%select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1 invokes deleted constructor
copying a temporary object of incomplete type %0
no viable constructor %select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1
address taken in non-type template argument for template parameter of reference type %0
deduced incomplete pack %0 for template parameter %1
non-type template argument refers to non-static data member %0
constraints not satisfied for %select{class template|function template|variable template|alias template|template template parameter|template}0 %1%2
%select{too few|too many}0 template arguments for %select{class template|function template|variable template|alias template|template template parameter|concept|template}1 %2
sorry, non-type template argument of pointer-to-member type %1 that refers to member %q0 of a different class is not supported yet
non-type template argument refers to non-static member function %0
template argument for non-type template parameter must be an expression
template argument for template template parameter must be a class template%select{| or type alias template}0
template argument for template type parameter must be a type
template argument for template type parameter must be a type; did you forget 'typename'?
non-type template parameter of reference type %diff{$ cannot bind to template argument of type $|cannot bind to template of incompatible argument type}0,1
template argument for non-type template parameter is treated as function type %0
non-type template argument of type %0 is not a constant expression
non-type template argument for template parameter of pointer type %0 must have its address taken
non-type template argument of type %0 cannot be converted to a value of type %1
non-type template argument does not refer to any declaration
non-type template argument of type %0 is not an integral constant expression
non-type template argument of type %0 must have an integral or enumeration type
non-type template argument does not refer to an object or function
non-type template argument is not a pointer to member constant
template argument does not refer to a class or alias template, or template template parameter
non-type template argument refers to %select{function|object}0 %1 that does not have linkage
template argument is the type of an unresolved overloaded function
reference binding of non-type template parameter %diff{of type $ to template argument of type $|to template argument}0,1 ignores qualifiers
non-type template argument of reference type %0 is not an object
template template argument has different template parameters than its corresponding template template parameter
non-type template argument refers to thread-local object
null non-type template argument must be cast to template parameter type %0
null non-type template argument of type %0 does not match template parameter of type %1
requires clause differs in template redeclaration
type constraint differs in template redeclaration
pack expansion used as argument for non-pack parameter of %select{alias template|concept}0
template name refers to non-type template %0
templates cannot be declared inside of a local class
%select{implicit|explicit}0 instantiation of undefined template %1
%select{implicit|explicit}0 instantiation of template %1 within its own definition
kernel functions cannot be used in a template declaration, instantiation or specialization
missing 'template' keyword prior to dependent template name '%0%1'
'%0%1' instantiated to a class template, not a function template
%0%select{| following the 'template' keyword}1 cannot refer to a dependent template
%0%select{| following the 'template' keyword}1 does not refer to a template
templates must have C++ linkage
member %0 declared as a template
extraneous 'template<>' in declaration of member %0
use of %select{class template|function template|variable template|alias template|template template parameter|concept|template}0 %1 requires template arguments
a non-type template parameter cannot have type %0 before C++20
a non-type template parameter cannot have type %0
template non-type parameter has a different type %0 in template %select{|template parameter }1redeclaration
non-type template parameter has incomplete type %0
non-type template parameter has non-literal type %0
type %0 of non-type template parameter is not a structural type
non-type template parameter has rvalue reference type %0
templates can only be declared in namespace or class scope
template parameter default argument is inconsistent with previous definition
template parameter missing a default argument
template parameter redefines default argument
template parameter has a different kind in template %select{|template parameter }0redeclaration
%select{too few|too many}0 template parameters in template %select{|template parameter }1redeclaration
template parameter list matching the non-templated nested type %0 should be empty ('template<>')
template parameter pack cannot have a default argument
template parameter pack must be the last template parameter
declaration of %0 shadows template parameter
default template argument not permitted on a friend template
cannot add a default template argument to the definition of a member of a class template
%select{template type|non-type template|template template}0 parameter%select{| pack}1 conflicts with previous %select{template type|non-type template|template template}0 parameter%select{ pack|}1
nested name specifier '%0' for declaration does not refer into a class, class template or class template partial specialization
recursive template instantiation exceeded maximum depth of %0
cannot declare an explicit specialization in a friend
explicit specialization of %0 in function scope
default argument not permitted on an explicit %select{instantiation|specialization}0 of function %1
extraneous template parameter list in template specialization or out-of-line template definition
template specialization declaration cannot be a friend
template specialization requires 'template<>'
template specialization or definition requires a template parameter list corresponding to the nested type %0
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 must occur at global scope
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 not in %select{a namespace enclosing %2|class %2 or an enclosing namespace}3
can only provide an explicit specialization for a class template, function template, variable template, or a member function, static data member, %select{or member class|member class, or member enumeration}0 of a class template
extraneous 'template<>' in declaration of %0 %1
template template argument %0 is more constrained than template template parameter %1
template template parameter must have its own template parameters
a typedef cannot be a template
cannot declare a class template with no name
extraneous 'template<>' in declaration of variable %0
tentative definition has type %0 that is never completed
'this' cannot be %select{implicitly |}0captured in this context
'this' cannot be%select{| implicitly}0 used in a static member function declaration
initializer for thread-local variable must be a constant expression
'%0' variables must have global storage
thread-local declaration of %0 follows non-thread-local declaration
type of thread-local variable has non-trivial destruction
thread-local declaration of %0 with %select{static|dynamic}1 initialization follows declaration with %select{dynamic|static}1 initialization
thread-local storage is not supported for the current target
three-way comparison between vectors is not supported
cannot throw an object of abstract type %0
cannot throw object of incomplete type %0
cannot throw pointer to object of incomplete type %0
cannot throw object of sizeless type %0
alignment (%0) of thread-local variable %1 is greater than the maximum supported alignment (%2) for a thread-local variable on this target
typed memory inference is not enabled (-ftyped-memory-operations)
%select{untyped|typed}0 memory operation %1 %select{cannot be a variadic function|cannot be an instance method|must have a prototype|must be a function}2
invalid parameter type for inference at index %0. %1 is not an integer type
the typed_memory_operations attribute can only be applied to functions
typed memory operation %0 has multiple overloads
typed memory operation %0 has incompatible type (%diff{$ vs $|}1,2)
only one element declaration is allowed
deduction guide cannot have a requires clause
trailing return type may not be nested within parentheses
function with trailing return type must specify return type 'auto', not %0
%0 requires more than 1 template argument; provide the remaining arguments explicitly to use it here
concept named in type constraint is not a type concept
%0 cannot be defined in a type alias template
%0 cannot be defined in a condition
%0 cannot be defined in an enumeration
types may not be defined in a for range declaration
%0 cannot be defined in a parameter type
%0 cannot be defined in the result type of a function
%0 cannot be defined in a type specifier
type of property %0 in class extension does not match property type in primary class
a parameter pack may not be accessed at an out of bounds index
'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression
'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression that can be represented by a 64 bit integer
%0 is not supported on this target
address of %select{bit-field|vector element|property expression|register variable|matrix element}0 requested
taking the address of a destructor
taking the address of a temporary object of type %0
conversion %diff{from $ to $|between types}0,1 is ambiguous
variable declared with 'objc_externally_retained' cannot be modified in ARC
cannot assign to 'self' outside of a method in the init family
cannot assign to 'self' in a class method
arithmetic on a pointer to %select{an incomplete|sizeless}0 type %1
fast enumeration variables cannot be modified in ARC by default; declare the variable __strong to allow this
array type %0 is not assignable
%select{cannot assign to return value because function %1 returns a const value|cannot assign to variable %1 with const-qualified type %2|cannot assign to %select{non-|}1static data member %2 with const-qualified type %3|cannot assign to non-static data member within const member function %1|cannot assign to %select{variable %2|non-static data member %2|lvalue}1 with %select{|nested }3const-qualified data member %4|read-only variable is not assignable}0
value of type %0 is not contextually convertible to 'bool'
arguments are of different types%diff{ ($ vs $)|}0,1
ordered compare requires two args of floating point type%diff{ ($ and $)|}0,1
floating point classification requires argument of floating point type (passed in %0)
called object type %0 is not a function or function pointer
argument type %0 is not a real floating point type
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, at least argument %1 must be specified
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2; did you mean %3?
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, single argument %1 was not specified
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most single argument %1, have %2 arguments
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2; did you mean %3?
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected single argument %1, have %2 arguments
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
cast to incomplete type %0
cast to union type from type %0 not present in union
'__builtin_choose_expr' requires a constant expression
comparison of distinct block types%diff{ ($ and $)|}0,1
comparison of distinct pointer types%diff{ ($ and $)|}0,1
equality comparison between function pointer and void pointer (%0 and %1)
comparison between pointer and integer (%0 and %1)
used type %0 where integer or floating point type is required
used type %0 where floating point type is not allowed
used type %0 where arithmetic or pointer type is required
incompatible operand types%diff{ ($ and $)|}0,1
non-pointer operand type %0 incompatible with %select{NULL|nullptr}1
__ptrauth qualification mismatch%diff{ ($ and $)|}0,1
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%5 vs %6)|: different exception specifications}4
incompatible block pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
incompatible function pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between pointers to integer types %select{with different sign|where one is of the unique plain 'char' type and the other is not}3
incompatible integer to pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer to integer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between void pointer and function pointer
value of type %0 is not implicitly convertible to %1
conversion from %0 to %1 is not allowed in a converted constant expression
conversion from %0 to %1 in converted constant expression would bind reference to a temporary
variable has incomplete type %0
conversion function %diff{from $ to $|between types}0,1 invokes a deleted function
vector is not assignable (contains duplicate components)
invalid operand of type %0 where floating, complex or a vector of such types is required
used type %0 where integer is required
operand of type %0 where arithmetic or pointer type is required
expression is not assignable
fields must have a constant size: 'variable length array in structure' extension will never be supported
cannot %select{decrement|increment}1 value of type %0
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes address space of pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes address space of nested pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes retain/release properties of pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes pointer-authentication of pointee type
definition of variable with array type needs an explicit size or an initializer
incomplete definition of type %0
incomplete type %0 is not assignable
indirection requires pointer operand (%0 invalid)
cannot take the address of an rvalue of type %0
extra '&' taking address of overloaded function
invalid operands to binary expression (%0 and %1)
pointer to function type %0 may not be 'restrict' qualified
restrict requires a pointer or reference (%0 is invalid)
restrict requires a pointer or reference
instance variables must have a constant size
logical expression with vector %select{type %1 and non-vector type %2|types %1 and %2}0 is only supported in C++
assignment to cast is illegal, lvalue casts are not supported
member reference type %0 is not a pointer
%0 does not have a member named %1
%0 does not have a member named %1; did you mean %2?
member reference base type %0 is not a structure or union
member reference type %0 is %select{a|not a}1 pointer; did you mean to use '%select{->|.}1'?
cannot refer to type member %0 in %1 with '%select{.|->}2'
cannot refer to member %0 in %1 with '%select{.|->}2'
%diff{return type $ must match previous return type $|return type must match previous return type}0,1 when %select{block literal|lambda expression}2 has unspecified explicit return type
array size is negative
non-object type %0 is not assignable
no viable conversion%select{%diff{ from $ to $|}1,2|%diff{ from returned value of type $ to function return type $|}1,2}0
no viable conversion%diff{ from $ to incomplete type $|}0,1
%select{comparison between %diff{ ($ and $)|}0,1|arithmetic operation with operands of type %diff{ ($ and $)|}0,1|conditional operator with the second and third operands of type %diff{ ($ and $)|}0,1}2 which are pointers to non-overlapping address spaces
ordered comparison of function pointers (%0 and %1)
ordered comparison between pointer and zero (%0 and %1)
arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2
arithmetic on%select{ a|}0 pointer%select{|s}0 to void
illegal storage class on file-scoped variable
illegal storage class on function
statement requires expression of integer type (%0 invalid)
statement requires expression of scalar type (%0 invalid)
%diff{$ and $ are not pointers to compatible types|pointers to incompatible types}0,1
array subscript is not an integer
subscripted value is not an array, pointer, or vector
cannot combine fixed-length and sizeless SVE vectors in expression, result is ambiguous (%0 and %1)
cannot combine GNU and SVE vectors in expression, result is ambiguous (%0 and %1)
three-way comparison between pointer and zero
invalid argument type %0 to unary expression
vector operands do not have the same number of elements (%0 and %1)
cannot convert between vector values of different size (%0 and %1)
cannot convert between %select{scalar|vector}0 type %1 and vector type %2 as implicit conversion would cause truncation
cannot convert between vector and non-scalar values (%0 and %1)
zero-length arrays are not permitted in %select{C++|SYCL device code}0
__type_descriptor_t must be a 64bit enum type when using typed operator new
typed allocation of over aligned types is not supported
unsupported: anonymous type given name for linkage purposes by %select{typedef|alias}0 declaration after its linkage was computed; add a tag name here to establish linkage prior to definition
typedef member %0 cannot be a bit-field
typedef name must be an identifier
missing 'typename' prior to dependent type name '%0%1'
missing 'typename' prior to dependent type template name '%0%1'
no type named %0 in %1
no type named 'type' in %0; 'enable_if' cannot be used to disable this declaration
failed requirement '%0'; 'enable_if' cannot be used to disable this declaration
typename specifier refers to non-type member %0 in %1
typename specifier refers to non-type %0
typename specifier refers to a dependent using declaration for a value %0 in %1
%0 is unavailable
%0 is unavailable in ARC
%0 is unavailable: %1
%0 has unknown return type; cast the call to its declared return type
no known method %select{%objcinstance1|%objcclass1}0; cast the message send to the method's return type
%0 has unknown type; cast it to its declared type to use it
declaration of %0 is missing in %1 class
undeclared identifier %0 in destructor name
use of undeclared label %0
definition of class %0 must be available to use Objective-C %select{array literals|dictionary literals|numeric literals|boxed expressions|string literals}1
cannot find protocol declaration for %0
cannot find protocol declaration for %0; did you mean %1?
use of undeclared %0
use of undeclared %0; did you mean %1?
use of undeclared identifier %0
use of undeclared identifier %0; did you mean %1?
cannot find interface declaration for %0
cannot find interface declaration for %0; did you mean %1?
cannot find interface declaration for %0, superclass of %1
cannot find interface declaration for %0, superclass of %1; did you mean %2?
inline variable %q0 is not defined
%select{function|variable}0 %q1 is used but not defined in this translation unit, and cannot be defined in any other translation unit because its type does not have linkage
cannot determine underlying type of incomplete enumeration type %0
%select{expression|base type|declaration type|data member type|bit-field size|static assertion|fixed underlying type|enumerator value|using declaration|friend declaration|qualifier|initializer|default argument|non-type template parameter type|exception type|partial specialization|__if_exists name|__if_not_exists name|lambda|block|type constraint|requirement|requires clause}0 contains%plural{0: an|:}1 unexpanded parameter pack%plural{0:|1: %2|2:s %2 and %3|:s %2, %3, ...}1
friends can only be classes or functions
unexpected interface name %0: expected expression
unexpected namespace name %0: expected expression
unexpected type name %0: expected expression
cannot define the implicit copy assignment operator for %0, because non-static %select{reference|const}1 member %2 cannot use copy assignment operator
%select{constructor for %1|implicit default constructor for %1|cannot use constructor inherited from %1:}0 must explicitly initialize the %select{reference|const}2 member %3
unions cannot be base classes
union member %0 has reference type %1
the address of a declaration with unknown type can only be cast to a pointer type
address-of operator cannot be applied to a call to a function with unknown return type
function %0 with unknown type must be given a function type
variable %0 with unknown type cannot be given a function type
no type named %0 in %1; did you mean %select{|simply }2%3?
unknown receiver %0; did you mean %1?
unknown %select{type|class}1 name %0; did you mean %2?
unknown type name %0
unknown type name %0; did you mean %1?
must explicitly qualify name of member function when taking its address
constrained placeholder types other than simple 'auto' on non-type template parameters not supported yet
call to unsupported expression with unknown type
%0 has unknown type, which is not supported for this kind of declaration
unsupported expression with unknown type
cannot cast %0 to its %select{private|protected}2 base class %1
illegal redeclaration of property in class extension %0 (attribute must be 'readwrite', while its primary must be 'readonly')
illegal redeclaration of 'readwrite' property in class extension %0 (perhaps you intended this to be a 'readwrite' redeclaration of a 'readonly' public property?)
use of default argument to function %0 that is declared later in class %1
reference to unresolved using declaration
taking address of non-addressable standard library function
use of %0 with tag type that does not match previous declaration
using declaration cannot refer to class member
using declaration cannot refer to a namespace
target of using declaration conflicts with declaration already in scope
declaration conflicts with target of using declaration already in scope
using declaration cannot refer to a constructor
%0 is not a direct base of %1, cannot inherit constructors
using declaration cannot refer to a destructor
cannot befriend target of using declaration
using declaration refers to its own class
using declaration refers into '%0', which is not a base class of %1
using declaration in class refers into '%0', which is not a class
redeclaration of using declaration
using declaration pack expansion at block scope produces multiple values
using declaration cannot refer to a template specialization
dependent using declaration resolved to type without 'typename'
no namespace named %0 in %1; did you mean %select{|simply }2%3?
no namespace named %0; did you mean %1?
redeclaration of using-enum declaration
using-enum cannot name a dependent type
%0 is not an enumerated type
'using_if_exists' attribute cannot be applied to an inheriting constructor
%select{|member}0 using declaration %1 instantiates to an empty pack
using declaration requires a qualified name
'typename' keyword used on a non-type
cannot call operator __uuidof on a type with multiple GUIDs
cannot call operator __uuidof on a type with no GUID
CUDA device code does not support va_arg
'va_start' cannot be used in a captured statement
'va_start' used in function with fixed args
'va_start' cannot be used outside a function
'va_start' used in %select{System V|Win64}0 ABI function
array types cannot be value-initialized
variable template partial specialization %0 cannot be redefined
no variable template matches%select{| partial}0 specialization
no variable template matches specialization; did you mean to use %0 as function template instead?
%select{variable|static data member}0 instantiated with function type %1
variable-sized object may not be initialized
'new' cannot allocate object of variably modified type %0
non-type template parameter of variably modified type %0
variably modified type %0 cannot be used as a template argument
'typeid' of variably modified type %0
CUDA device code does not support variadic functions
first two arguments to %0 must have the same type
first two arguments to %0 must be vectors
'vec_step' requires built-in scalar or vector type, %0 invalid
%select{too many|too few}0 elements in vector initialization (expected %1 elements, have %2)
unions cannot have virtual functions
second argument to __builtin_virtual_member_address must be the address of a virtual C++ member function: for example '&Foo::func'
'virtual' cannot be specified on member function templates
first argument to __builtin_virtual_member_address must have a type deriving from class where second argument was defined
first argument to __builtin_virtual_member_address must have C++ class type
'virtual' can only appear on non-static member functions
'virtual' can only be specified inside the class definition
variable length array declaration cannot have 'extern' linkage
variable length array declaration cannot have 'static' storage duration
variable length array declaration not allowed at file scope
variable length array cannot be formed during template argument deduction
variable length arrays are not supported for %select{the current target|'%1'}0
variably modified type declaration cannot have 'extern' linkage
variably modified type declaration not allowed at file scope
function declaration cannot have variably modified type
'void' must be the first and only parameter if specified
'void' as parameter must not have type qualifiers
argument %0 to %1 must be a 2-bit unsigned literal (i.e. 0, 1, 2 or 3)
existing instance variable %1 for __weak property %0 must be __weak
sampler type cannot be used with the __local and __global address space qualifiers
invalid rounding argument
scale argument must be 1, 2, 4, or 8
tile arguments must refer to different tiles
%0 attribute can only be applied to a typedef or a field declaration
%0 attribute can only be applied to non-record types
invalid type signature semantic kind %1
%0 attribute can only be applied once per declaration
semantics kind '%1' repeated more than once
%0 calling convention is not supported %select{for this target|on variadic function|on constructor/destructor|on builtin function}1
duplicate use of asm operand name "%0"
asm-specifier for input or output variable conflicts with asm clobber list
overloaded %0 cannot have %select{no|a defaulted|more than one}1 parameter before C++2b
use of function template name with no prior declaration in function call with explicit template arguments is a C++20 extension
initializer for aggregate is not a compile-time constant
anonymous types declared in an anonymous %select{struct|union}0 are an extension
types declared in an anonymous %select{struct|union}0 are a Microsoft extension
anonymous %select{struct|union}0 cannot be '%1'
anonymous unions are a C11 extension
initialization of an array %diff{of type $ from a compound literal of type $|from a compound literal}0,1 is a GNU extension
parenthesized initialization of a member array is a GNU extension
implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is a C++11 extension
ISO C++ standards before C++17 do not allow new expression for type %0 to use list-initialization
'auto' type specifier is a C++11 extension
ISO C++ does not allow %select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2 because it casts away qualifiers, even though the source and destination types are unrelated
anonymous structs are a C11 extension
%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature
flexible array members are a C99 feature
'trivial_abi' cannot be applied to %0
captured structured bindings are a C++20 extension
cast between pointer-to-function and pointer-to-object is an extension
%select{case value|enumerator value|non-type template argument|array size|explicit specifier argument|noexcept specifier argument}0 %select{cannot be narrowed from type %2 to %3|evaluates to %2, which cannot be narrowed to type %3}1
complex initialization specifying real and imaginary components is an extension
use of this statement in a constexpr %select{function|constructor}0 is a C++14 extension
use of this statement in a constexpr %select{function|constructor}0 is a C++20 extension
use of this statement in a constexpr %select{function|constructor}0 is a C++2b extension
multiple return statements in constexpr function is a C++14 extension
constexpr constructor that does not initialize all members is a C++20 extension
%select{constexpr|consteval}1 %select{function|constructor}0 never produces a constant expression
function try block in constexpr %select{function|constructor}0 is a C++20 extension
variable declaration in a constexpr %select{function|constructor}0 is a C++14 extension
uninitialized variable in a constexpr %select{function|constructor}0 is a C++20 extension
definition of a %select{static|thread_local}1 variable in a constexpr %select{function|constructor}0 is a C++2b extension
type definition in a constexpr %select{function|constructor}0 is a C++14 extension
constexpr union constructor that does not initialize any member is a C++20 extension
'constinit' specifier missing on initializing declaration of %0
use of the %0 attribute is a C++14 extension
use of the %0 attribute is a C++17 extension
use of the %0 attribute is a C++20 extension
designated initializers are a C++20 extension
decomposition declarations are a C++17 extension
ISO C++17 does not permit structured binding declaration in a condition
decomposition declaration declared %plural{1:'%1'|:with '%1' specifiers}0 is a C++20 extension
default initialization of an object of const type %0%select{| without a user-provided default constructor}1 is a Microsoft extension
defaulted comparison operators are a C++20 extension
cannot delete expression with pointer-to-'void' type %0
ISO C++11 does not allow conversion from string literal to %0
designated initializers are a C99 feature
array designators are a C99 extension
brace elision for designated initializer is a C99 extension
mixture of designated and non-designated initializers in the same initializer list is a C99 extension
nested designators are a C99 extension
ISO C++ requires field designators to be specified in declaration order; field %1 will be initialized after field %0
destructor cannot be declared using a %select{typedef|type alias}1 %0 of the class name
ISO C++ considers this destructor name lookup to be ambiguous
ISO C++ requires the name after '::~' to be found in the same scope as the name before '::~'
empty %select{struct|union}0 is a GNU extension
befriending enumeration type %0 is a C++11 extension
enumeration values exceed range of largest integer
ISO C restricts enumerator values to range of 'int' (%0 is too %select{small|large}1)
incremented enumerator value %0 is not representable in the largest integer type
enumerator value is not representable in the underlying type %0
explicit capture of 'this' with a capture default of '=' is a C++20 extension
ambiguous use of internal linkage declaration %0 defined in multiple modules
excess elements in %select{array|vector|scalar|union|struct}0 initializer
excess elements in initializer for indivisible sizeless type %0
excess elements in char array initializer
explicit conversion functions are a C++11 extension
duplicate explicit instantiation of %0 ignored as a Microsoft extension
qualifier in explicit instantiation of %q0 requires a template-id (a typedef is not permitted)
explicit specialization cannot have a storage class
ISO C++20 does not permit %select{an empty|a static_assert}0 declaration to appear in an export block
ISO C++20 does not permit a declaration that does not introduce any names to be exported
ISO C++20 does not permit using directive to be exported
expression is not an %select{integer|integral}0 constant expression; folding it to a constant is a GNU extension
flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a GNU extension
flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a Microsoft extension
%0 may not be used as an array element due to flexible array member
%0 may not be nested in a struct due to flexible array member
flexible array initialization is a GNU extension
flexible array member %0 in a union is a GNU extension
flexible array member %0 in a union is a Microsoft extension
'begin' and 'end' returning different types (%0 and %1) is a C++17 extension
ISO C forbids forward references to 'enum' types
redeclaration of already-defined enum %0 is a GNU extension
use of member %0 found via unqualified lookup into dependent bases of class templates is a Microsoft extension
use of member %0 before its declaration is a Microsoft extension
complex numbers are an extension in a freestanding C99 implementation
unqualified friend declaration referring to type outside of the nearest enclosing namespace is a Microsoft extension; add a nested name specifier
anonymous structs are a GNU extension
arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2 is a GNU extension
subscript of a pointer to void is a GNU extension
arithmetic on%select{ a|}0 pointer%select{|s}0 to void is a GNU extension
jump from this goto statement to its label is a Microsoft extension
imaginary constants are a GNU extension
function previously declared with an %select{explicit|implicit}0 exception specification redeclared with an %select{implicit|explicit}0 exception specification
call to undeclared function %0; ISO C99 and later do not support implicit function declarations
implicitly declaring library function '%0' with type %1
call to undeclared library function '%0' with type %1; ISO C99 and later do not support implicit function declarations
missing 'typename' prior to dependent type name %0%1; implicit 'typename' is a C++20 extension
in-class initializer for static data member of type %0 is a GNU extension
in-class initializer for static data member of type %0 requires 'constexpr' specifier
in-class initializer for static data member is not a constant expression; folding it to a constant is a GNU extension
%select{|pointer to |reference to }0incomplete type %1 is not allowed in exception specification
ISO C++17 does not allow incrementing expression of type bool
initialized lambda captures are a C++14 extension
initialized lambda pack captures are a C++20 extension
constant expression evaluates to %0 which cannot be narrowed to type %1
type %0 cannot be narrowed to %1 in initializer list
non-constant-expression cannot be narrowed from type %0 to %1 in initializer list
initializer %select{partially |}0overrides prior initialization of this subobject
initializer-string for char array is too long
inline variables are a C++17 extension
ISO C does not support '~' for complex conjugation of %0
complex integer types are a GNU extension
ISO C does not support '++'/'--' on complex integer type %0
static %select{function|variable}0 %1 is used in an inline function with external linkage
static %select{function|variable}0 %1 is used in an inline function with external linkage
return type of 'main' is not 'int'
ISO C++ does not allow 'main' to be used by a program
too many braces around %select{scalar |}0initializer
class member cannot be redeclared
exception specification in declaration does not match previous declaration
exception specification in explicit instantiation does not match instantiated one
%0 is missing exception specification '%1'
type specifier missing, defaults to 'int'; ISO C99 and later do not support implicit int
mixing declarations and code is a C99 extension
import of C++ module '%0' appears within extern "C" language linkage specification
redundant #include of module '%0' appears within %1
accessing inaccessible direct base %0 of %1 is a Microsoft extension
anonymous %select{structs|unions}0 are a Microsoft extension
static_cast between pointer-to-function and pointer-to-object is a Microsoft extension
using the undeclared type %0 as a default template argument is a Microsoft extension
non-type template argument containing a dereference operation is a Microsoft extension
explicit constructor calls are a Microsoft extension
forward references to 'enum' types are a Microsoft extension
implicit conversion between pointer-to-function and pointer-to-object is a Microsoft extension
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 not in %select{a namespace enclosing %2|class %2 or an enclosing namespace}3 is a Microsoft extension
template argument for template type parameter must be a type; omitted 'typename' is a Microsoft extension
using declaration referring to inaccessible member '%0' (which refers to accessible member '%1') is a Microsoft compatibility extension
'mutable' on a reference type is a Microsoft extension
lookup of %0 in member access expression is ambiguous; using member of %1
use of enumeration in a nested name specifier is a C++11 extension
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers in nested pointer types
when type is in parentheses, array cannot have dynamic size
declaration does not declare anything
%select{struct|union}0 without named members is a GNU extension
anonymous non-C-compatible type given name for linkage purposes by %select{typedef|alias}0 declaration; add a tag name here
non-class friend type %0 is a C++11 extension
'main' is not allowed to be declared _Noreturn
offset of on non-POD type %0
offset of on non-standard-layout type %0
initialization clause of OpenMP for loop is not in canonical form ('var = init' or 'T var = init')
Clang permits use of type 'double' regardless pragma if 'cl_khr_fp64' is supported
vector component name '%0' is a feature from OpenCL version 3.0 onwards
replacement function %0 cannot be declared 'inline'
declaring overloaded %0 as 'static' is a C++2b extension
out-of-line declaration of a member must be a definition
ISO C++ specifies that qualified reference to %0 is a constructor name rather than a %select{template name|type}1 in this context, despite preceding %select{'typename'|'template'}2 keyword
exception specification of overriding function is more lax than base version
ISO C++20 considers use of overloaded operator '%0' (with operand types %1 and %2) to be ambiguous despite there being a unique best viable function%select{ with non-reversed arguments|}3
ISO C++20 requires return type of selected 'operator==' function for rewritten '%1' comparison to be 'bool', not %0
redefinition of default argument
parameter %0 was not declared, defaults to 'int'; ISO C99 and later do not support implicit int
%diff{promoted type $ of K&R function parameter is not compatible with the parameter type $|promoted type of K&R function parameter is not compatible with parameter type}0,1 declared in a previous prototype
omitting the parameter name in a function definition is a C2x extension
%select{class|variable}0 template partial specialization is not more specialized than the primary template
%select{class|variable}0 template partial specialization contains %select{a template parameter|template parameters}1 that cannot be deduced; this partial specialization will never be used
plain '_Complex' requires a type specifier; assuming '_Complex double'
invoking a pointer to a 'const &' member function on an rvalue is a C++20 extension
predefined identifier is only valid inside function
pseudo-destructors on type void are a Microsoft extension
function definition with pure-specifier is a Microsoft extension
qualified destructor name only found in lexical scope; omit the qualifier to find this type name by unqualified lookup
redefinition of typedef %0 is a C11 feature
ISO C++17 does not allow 'register' storage class specifier
friend function %0 retaining previous language linkage is an extension
%select{void function|void method|constructor|destructor}1 %0 should not return a value
void %select{function|method|block}1 %0 should not return void expression
non-void %select{function|method}1 %0 should return a value
C++98 requires an accessible copy constructor for class %2 when binding a reference to a temporary; was %select{private|protected}0
no viable constructor %select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1; C++98 requires a copy constructor when binding a reference to a temporary
invalid application of '%0' to a function type
invalid application of '%0' to a void type
'%0' is not permitted on a declaration of a type
capture of '*this' by copy is a C++17 extension
static data member %0 in union is a C++11 extension
redeclaring non-static %0 as static is a Microsoft extension
'static' can only be specified inside the class definition
string literal operator templates are a GNU extension
ISO C90 does not allow subscripting non-lvalue array
overloaded %0 with %select{no|a defaulted|more than one}1 parameter is a C++2b extension
address non-type template argument cannot be surrounded by parentheses
template argument uses local type %0
non-type template argument referring to %select{function|object}0 %1 with internal linkage is a C++11 extension
template argument uses unnamed type
'template' keyword outside of a template
declaration of %0 shadows template parameter
default template arguments for a function template are a C++11 extension
taking the address of a temporary object of type %0
ISO C forbids taking the address of an expression of type 'void'
method parameter type %diff{$ does not match super class method parameter type $|does not match super class method parameter type}0,1
C99 forbids casting nonscalar type %0 to the same type
cast to union type is a GNU extension
pointer comparisons before C11 need to be between two complete or two incomplete types; %0 is %select{|in}2complete and %1 is %select{|in}3complete
comparison of distinct pointer types%diff{ ($ and $)|}0,1
equality comparison between function pointer and void pointer (%0 and %1)
comparison between pointer and integer (%0 and %1)
incompatible operand types (%0 and %1)
pointer type mismatch%diff{ ($ and $)|}0,1
C99 forbids conditional expressions with only one void side
pointer/integer type mismatch in conditional expression%diff{ ($ and $)|}0,1
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers
incompatible function pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between pointers to integer types %select{with different sign|where one is of the unique plain 'char' type and the other is not}3
incompatible integer to pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer to integer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between void pointer and function pointer
tentative definition of variable with internal linkage has incomplete non-array type %0
ISO C does not allow indirection on operand of type %0
ISO C++ does not allow indirection on operand of type %0
ordered comparison of function pointers (%0 and %1)
ordered comparison between pointer and zero (%0 and %1) is an extension
ordered comparison between pointer and integer (%0 and %1)
zero size arrays are an extension
typedef requires a name
missing 'typename' prior to dependent type name '%0%1'
'typename' occurs outside of a template
use of undeclared identifier %0; unqualified lookup into dependent bases of class template %1 is a Microsoft extension
ISO C++ requires a definition in this translation unit for %select{function|variable}0 %q1 because its type does not have linkage
unelaborated friend declaration is a C++11 extension; specify '%select{struct|interface|union|class|enum}0' to befriend %1
union member %0 has reference type %1, which is a Microsoft extension
unqualified base initializer of class templates is a Microsoft extension
use of out-of-scope declaration of %0%select{| whose type is not compatible with that of an implicit declaration}1
using declaration naming a scoped enumerator is a C++20 extension
using directive refers to implicitly-defined namespace 'std'
field %0 with variable sized type %1 not at the end of a struct or class is a GNU extension
variable templates are a C++14 extension
'main' is not allowed to be declared variadic
variable length arrays are a C99 feature
variable length array folded to constant array as an extension
'%0' cannot be signed or unsigned
declaration does not introduce any names to be exported
constrained by %select{|implicitly }1%select{private|protected}0 inheritance here
%select{|implicitly }1declared %select{private|protected}0 here
protected %select{constructor|destructor}0 can only be used to %select{construct|destroy}0 a base class subobject
must name member using the type of the current context %0
can only access this member on an object of type %0
add stubs for missing protocol requirements
add a '@synthesize' directive
add a pair of parentheses to declare a variable
candidate function made ineligible by enable_if
declared with %0 attribute here
allocated with 'new%select{[]|}0' here
lookup in the object type %0 refers here
lookup from the current scope refers here
similar constraint expressions not considered equivalent; constraint expressions cannot be considered equivalent unless they originate from the same concept
similar constraint expression here
candidate found by name lookup is %q0
inherited from base class %0 here
member found by ambiguous name lookup
member type %0 found by ambiguous name lookup
because of ambiguity in conversion %diff{of $ to $|between types}0,1
anonymous namespace begins here
use __bridge to convert directly (no change in ownership)
use %select{__bridge_retained|CFBridgingRetain call}1 to make an ARC object available as a +1 %0
use %select{__bridge_transfer|CFBridgingRelease call}1 to transfer ownership of a +1 %0 into ARC
use __bridge with C-style cast to convert directly (no change in ownership)
use __bridge_retained with C-style cast to make an ARC object available as a +1 %0
use __bridge_transfer with C-style cast to transfer ownership of a +1 %0 into ARC
field has non-trivial ownership qualification
declaration uses type that is ill-formed in ARC
declaration in interface is not in the '%select{alloc|copy|init|new}0' family because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
init method must return a type related to its receiver type
declaration in interface
block will be retained by %select{the captured object|an object strongly retained by the captured object}0
also accessed here
declaration uses __weak, but ARC is disabled
declaration uses __weak, which the current deployment target does not support
array %0 declared here
add 'u8' prefix to form a 'char8_t' string literal
conversion to %select{integral|enumeration}0 type %1 declared here
constraint '%0' is already present here
use constraint modifier "%0"
type %0 is incomplete
%select{and|because}0 '%1' evaluated to false
%select{and|because}0 '%1' (%2 %3 %4) evaluated to false
setter and getter must both be synthesized, or both be user defined, or the property must be nonatomic
attribute is here
annotating the 'if %select{constexpr|consteval}0' statement here
annotating the infinite loop here
previous %select{unmarked |}0overload of function is here
property should be changed to be readwrite
%0 has been explicitly marked %select{unavailable|deleted|deprecated}1 here
return type of 'await_ready' is required to be contextually convertible to 'bool'
explicitly cast the pointer to silence this warning
base class %0 specified here
bit-field is declared here
did you mean to use __block %0?
in call to printing function with arguments '(%0)' while dumping struct
called by %0
previous call is here%select{; set to nil to indicate it cannot be called afterwards|}0
%0 declared here
callee declares array parameter as static here
'trivial_abi' is disallowed on %0 because %select{its copy constructors and move constructors are all deleted|it is polymorphic|it has a base of a non-trivial class type|it has a virtual base|it has a __weak field|it has a field of a non-trivial class type|it has an address-discriminated __ptrauth field}1
declaration missing '[[carries_dependency]]' attribute is here
cast one or both operands to int to silence this warning
cast expression to void to silence warning
%select{category|class extension}0 conforms to protocol %1 which defines method %2
consider making the bitfield type %select{unsigned|signed}0
consider defining %0 with the '%1' calling convention
while checking constraint satisfaction for class template partial specialization '%0' required here
while checking constraint satisfaction for function '%0' required here
while checking constraint satisfaction for template '%0' required here
while checking constraint satisfaction for variable template partial specialization '%0' required here
class is declared here
explicitly declare getter %objcinstance0 with '%1' to return an 'unowned' object
parameter of the 'collapse' clause
in defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator for %1 first required here
compatible type %0 specified here
place parentheses around the string literal to silence warning
%select{and|because}0 '%1' evaluated to false
while checking the satisfaction of concept '%0' requested here
place parentheses around the assignment to silence this warning
use '==' to turn this assignment into an equality comparison
use '!=' to turn this compound assignment into an inequality comparison
conflicting attribute is here
conflicting prototype is here
conflicting %0 here
previous return statement is here
member not initialized by constructor
%select{data member %1|base class %2}0 declared here
virtual base class declared here
add the %select{'require_constant_initialization' attribute|'constinit' specifier}0 to the initializing declaration here
variable declared constinit here
while calculating associated constraint of template '%0' here
constraint depends on a previously diagnosed expression
while substituting template arguments into constraint expression here
type conversion function declared here
use 'static' to give inline function %0 internal linkage
must be declared with 'noexcept'
call to %0 implicitly required by coroutine function here
call to 'await_transform' implicitly required by 'co_await' here
call to '%select{initial_suspend|final_suspend}0' implicitly required by the %select{initial suspend point|final suspend point}0
conflicting __device__ function declared here
const variable cannot be emitted on device side due to dynamic initialization
the %select{1st|2nd|3rd}1 template parameter of %0 needs to be %select{a type|an integer or enum value}2
%0 needs to have exactly %1 template parameters
%0 needs to be instantiated from a class template with proper template arguments
host variable declared here
candidate template ignored: target attributes do not match
remove 'u8' prefix to avoid a change of behavior; Clang encodes unprefixed narrow string literals as UTF-8
annotate %select{%1|anonymous %1}0 with an availability attribute to silence this warning
this declaration is not a prototype; add %select{'void'|parameter declarations}0 to make it %select{a prototype for a zero-parameter function|one}0
declare the parameter __strong or capture a __block __strong variable to keep values alive across autorelease pools
function is a coroutine due to use of '%0' here
declared %select{'returns_nonnull'|'nonnull'}0 here
required by %select{'require_constant_initialization' attribute|'constinit' specifier}0 here
during template argument deduction for %select{class|variable}0 template %select{partial specialization |}1%2 %3
deduction guide declared %0 by intervening access specifier
member template declared %0 here
in instantiation of default argument for '%0' required here
default argument declared here
in instantiation of default function argument expression for '%0' required here
default member initializer declared here
defaulted %0 is implicitly deleted because implied %select{|'==' |'<' }1comparison %select{|for member %3 |for base class %3 }2is ambiguous
defaulted %0 is implicitly deleted because it would invoke a deleted comparison function%select{| for member %2| for base class %2}1
return type of defaulted 'operator<=>' cannot be deduced because return type %2 of three-way comparison for %select{|member|base class}0 %1 is not a standard comparison category type
selected 'operator<=>' for %select{|member|base class}0 %1 declared here
%select{|member|base class}0 %1 declared here
defaulted %0 is implicitly deleted because it would invoke a %select{private|protected}3 %4%select{ member of %6| member of %6 to compare member %2| to compare base class %2}1
defaulted %0 is implicitly deleted because there is no viable %select{three-way comparison function|'operator=='}1 for %select{|member |base class }2%3
three-way comparison cannot be synthesized because there is no viable function for %select{'=='|'<'}0 comparison
non-constexpr comparison function would be used to compare %select{|member %1|base class %1}0
non-constexpr comparison function declared here
defaulted %0 is implicitly deleted because this non-rewritten comparison function would be the best match for the comparison
defaulted %0 is implicitly deleted because a builtin comparison function using this conversion would be the best match for the comparison
defaulted %0 is implicitly deleted because class %1 has a reference member
defaulted %0 is implicitly deleted because %2 is a %select{union-like class|union}1 with variant members
%0 defined here
conversion to pointer type %0
qualify call to silence this warning
%select{copy|move}0 assignment operator of %1 is implicitly deleted because field %2 is of %select{reference|const-qualified}4 type %3
copy constructor of %0 is implicitly deleted because field %1 is of rvalue reference type %2
copy %select{constructor|assignment operator}0 is implicitly deleted because %1 has a user-declared move %select{constructor|assignment operator}2
%select{default constructor of|constructor inherited by}0 %1 is implicitly deleted because all %select{data members|data members of an anonymous union member}2 are const-qualified
%select{default constructor of|constructor inherited by}0 %1 is implicitly deleted because field %2 of %select{reference|const-qualified}4 type %3 would not be initialized
virtual destructor requires an unambiguous, accessible 'operator delete'
%select{default constructor of|copy constructor of|move constructor of|copy assignment operator of|move assignment operator of|destructor of|constructor inherited by}0 %1 is implicitly deleted because %select{base class %3|%select{||||variant }4field %3}2 %select{has %select{no|a deleted|multiple|an inaccessible|a non-trivial}4 %select{%select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|%select{default|corresponding|default|default|default}4 constructor}0|destructor}5%select{||s||}4|is an ObjC pointer|has an address-discriminated ptrauth qualifier}6
function is implicitly deleted because its declared type does not match the type of an implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0
candidate ignored: %select{not a function template|not a member of the enclosing namespace; did you mean to explicitly qualify the specialization?}0
must qualify identifier to find this declaration in dependent base class
template parameter is used in default argument declared here
add an explicit capture of 'this' to capture '*this' by reference
first non-designated initializer is here
non-type declaration found by destructor name lookup
type %0 found by destructor name lookup
direct member declared here
direct method %0 declared here
due to %0 being dllexported%select{|; try compiling in C++11 mode}1
asm operand name "%0" first referenced here
element %0 also has value %1
put the semicolon on a separate line to silence this warning
remove parentheses to declare a variable
change this ',' to a ';' to call %0
replace parentheses with an initializer to declare a variable
using declaration annotated with 'using_if_exists' here
type was declared read-only here
jump enters lifetime of block which captures a destructible C++ object
jump enters lifetime of block which captures a C struct that is non-trivial to destroy
jump enters lifetime of block which strongly captures a variable
jump enters lifetime of block which weakly captures a variable
jump enters lifetime of a compound literal that is non-trivial to destruct
%0 declared here
enum %0 was explicitly specialized here
remove extraneous parentheses around the comparison to silence this warning
use '=' to turn this equality comparison into an assignment
declared here%select{ in module '%1'|}0
place parentheses around comparison expression to evaluate it first
in evaluation of exception specification for %q0 needed here
jump exits scope of __block variable
jump exits lifetime of block which captures a destructible C++ object
jump exits lifetime of block which captures a C struct that is non-trivial to destroy
jump exits lifetime of block which strongly captures a variable
jump exits lifetime of block which weakly captures a variable
jump exits scope of variable with __attribute__((cleanup))
jump exits lifetime of a compound literal that is non-trivial to destruct
jump exits catch block
jump exits try block
jump exits scope of variable with non-trivial destructor
jump exits autoreleasepool block
jump exits @catch block
jump exits @finally block
jump exits scope of __strong variable
jump exits @synchronized block
jump exits @try block
jump exits scope of __weak variable
jump exits __except block
jump exits __finally block
jump exits __try block
jump exits scope of lifetime-extended temporary with non-trivial destructor
explicit %select{constructor|deduction guide}0 declared here
explicit instantiation candidate function %q0 template here %1
explicit instantiation definition is here
explicit instantiation refers here
while substituting explicitly-specified template arguments into function template %0 %1
'template<>' header not required for explicitly-specialized class %0 declared here
export block begins here
expression evaluates to '%0 %1 %2'
%select{and|because}0 type constraint '%1' was not satisfied:
%select{and|because}0 %1 does not satisfy %2:
%select{and|because}0 '%1' would be invalid: %2
%select{and|because}0 '%1' would be invalid
%select{and|because}0 '%1' may throw an exception
%select{and|because}0 '%1' would be invalid: %2
%select{and|because}0 '%1' would be invalid
extern "C" language linkage specification begins here
declared %select{in global scope|with C language linkage}0 here
did you forget ';'?
field designator refers here
add missing switch cases
mark %0 as '%select{final|sealed}1' to silence this warning
final overrider of %q0 in %1
add '__%select{counted|sized}0_by(%2)' to '%1'
add a count attribute within the declarator brackets or convert the parameter to a pointer with a count or size attribute
'%0' has been assigned here
casting %0 to %1 will not be allowed in the future; consider replacing '__unsafe_indexable' by a safe pointer
previously assigned here
remove '&' to get address as %0 instead of %1
cast to %0 first to keep bounds of %1
silence by making the destination '__single'
initialized flexible array member %0 is here
selected '%select{begin|end}0' %select{function|template }1%2 with iterator type %3
in implicit call to 'operator%select{!=|*|++}0' for iterator of type %1
member is not a candidate because range type %0 has no '%select{end|begin}1' member
did you mean to use '%0'?
treat the string as an argument to avoid this
format string is defined here
forward declaration of class here
%0 is not defined, but forward declared here; conversion would be valid if it was derived from %1
forward declaration of template entity is here
found near match '%0'
from 'diagnose_if' attribute on %0:
add enclosing parentheses to perform a function-style cast
did you mean %0?
while substituting deduced template arguments into function template %0 %1
in instantiation of function template specialization %q0 requested here
function template %q0 matches specialization %1
suffix with parentheses to turn this into a function call
prefix with the address-of operator to silence this warning
or because setter is declared here, but no getter method %0 is found
add 'module;' to the start of the file to introduce a global module fragment
inline assembly label %0 declared here
guarded_by declared here
hidden overloaded virtual function %q0 declared here%select{|: different classes%diff{ ($ vs $)|}2,3|: different number of parameters (%2 vs %3)|: type mismatch at %ordinal2 parameter%diff{ ($ vs $)|}3,4|: different return type%diff{ ($ vs $)|}2,3|: different qualifiers (%2 vs %3)|: different exception specifications}1
type declaration hidden
declaration hides type
conversion to %select{integral|enumeration}0 type %1 declared here
field of illegal %select{type|pointer type}0 %1 declared here
class implementation is declared here
when implemented by class %0
while checking implicit 'delete this' for virtual destructor
implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 inferred target collision: call to both %select{__device__|__global__|__host__|__host__ __device__}1 and %select{__device__|__global__|__host__|__host__ __device__}2 members
%0 is an implicit parameter
explicitly defaulted function was implicitly deleted here
in implicit initialization of binding declaration %0
add 'constexpr'
while declaring the corresponding implicit 'operator==' for this defaulted 'operator<=>'
while declaring the implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 for %0
when looking up '%select{begin|end}0' function for range expression of type %1
in implicit initialization of %select{array element %1 with omitted initializer|field %1 with omitted initializer|trailing array elements in runtime-sized array new}0
in initialization of temporary of type %0 created to list-initialize this reference
include the header <%0> or explicitly provide a declaration for '%1'
conformance of forward class %0 to protocol %1 can not be confirmed
possible target of %select{indirect|asm}0 goto statement
consider using __builtin_trap() or qualifying pointer with 'volatile'
use '|=' to turn this inequality comparison into an or-assignment
insert an explicit cast to silence this issue
initializing field %0 with default member initializer
%select{field|base class}0 %1 will be initialized after %select{field|base}2 %3
insert 'break;' to avoid fall-through
insert '%0;' to silence this warning
add an explicit instantiation declaration to suppress this warning if %q0 is explicitly instantiated in another translation unit
(skipping %0 context%s0 in backtrace; use -ftemplate-backtrace-limit=0 to see all)
%select{implicit|explicit}0 instantiation first required here
it delegates to
instance variable is declared here
%select{implicitly |}2captured%select{| by reference}3%select{%select{ due to use|}2 here| via initialization of lambda capture %0}1
lambda expression begins here
default capture by %select{value|reference}0
explicitly capture 'this'
implicit capture of lambda object due to conversion to block pointer here
capture %0 by %select{value|reference}1
%select{%select{reference|'std::initializer_list'}0 member|member with %select{reference|'std::initializer_list'}0 subobject}1 declared here
local declaration nearly matches
type of %ordinal0 parameter of local declaration does not match definition%diff{ ($ vs $)|}1,2
%select{via initialization of|binding reference}0 variable %select{%2 |}1here
the other acquisition of %0 '%1' is here
%0 acquired here
use '%0' for a bitwise operation
remove constant to silence this warning
add parentheses after the '!' to evaluate the %select{comparison|bitwise operator}0 first
add parentheses around left hand side expression to silence this warning
%select{decremented|incremented}0 here
change return type to 'int'
remove '_Noreturn'
member is declared here
member %0 declared here
member declaration does not match because it %select{is|is not}0 const qualified
member declaration nearly matches
type of %ordinal0 parameter of member declaration does not match definition%diff{ ($ vs $)|}1,2
member %0 first declared here
'->' applied to return value of the operator->() declared here
in %select{implicit|defaulted}0 %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 for %2 first required here
explicitly cast the argument to size_t to silence this warning
did you mean to compare the result of %0 instead?
method %0 declared here
compiler has implicitly changed method %0 return type
method %0 is used for the forward class
passing byval argument %0 with potentially incompatible alignment here
%0 begins here
function multiversioning caused by this declaration
target function has calling convention %1 (expected %0)
%0 declared here
add 'void' to the parameter list to turn an old-style K&R function declaration into a prototype
target function %select{is a member of different class%diff{ (expected $ but has $)|}1,2|has different number of parameters (expected %1 but has %2)|has type mismatch at %ordinal3 parameter%diff{ (expected $ but has $)|}1,2|has different return type%diff{ ($ expected but has $)|}1,2}0
target %select{constructor|destructor}0 is declared here
namespace %0 defined here
consider using vld1_%0%1() to initialize a vector from memory, or vcreate_%0%1() to initialize from an integer constant
consider using vld1q_%0%1() to initialize a vector from memory, or vcombine_%0%1(vcreate_%0%1(), vcreate_%0%1()) to initialize from integer constants
while checking the satisfaction of nested requirement requested here
%select{and|because}0 '%1' would be invalid: %2
%select{and|because}0 '%1' would be invalid
next field declaration is here
next %select{instance variable declaration|synthesized instance variable}0 is here
type is not C-compatible due to this %select{base class|default member initializer|lambda expression|friend declaration|member declaration}0
non-deducible template parameter %0
not-yet-instantiated member is declared here
%0 is not literal because it has base class %1 of non-literal type
%0 is not literal because it has data member %1 of %select{non-literal|volatile}3 type %2
incomplete type %0 is not a literal type
lambda closure types are non-literal types before C++17
%0 is not literal because it is not an aggregate and has no constexpr constructors other than copy or move constructors
%0 is not literal because its destructor is not constexpr
%0 is not literal because it has a non-trivial destructor
%0 is not literal because it has a user-provided destructor
%select{struct|interface|class}0 with virtual base %plural{1:class|:classes}1 is not a literal type
non-template declaration found by name lookup
%select{%2 has subobjects that are|%3 has type %2 that is}0 non-trivial to %select{default-initialize|destruct|copy}1
non-usual %0 declared here
non-templated declaration is here
because it has a default argument
because field %0 has an initializer
field is non-trivial to %select{copy|default-initialize}0
because type %0 has a virtual %select{member function|base class}1
because no %select{<<ERROR>>|constructor|constructor|assignment operator|assignment operator|<<ERROR>>}2 can be used to %select{<<ERROR>>|copy|move|copy|move|<<ERROR>>}2 %select{base class|field|an object}0 of type %3
because %select{base class of |field of |}0type %1 has no default constructor
because type %0 has a member with %select{no|no|__strong|__weak|__autoreleasing}1 ownership
because its parameter is %diff{of type $, not $|of the wrong type}2,3
because the function selected to %select{construct|copy|move|copy|move|destroy}2 %select{base class|field}0 of type %1 is not trivial
because %select{base class of |field of |}0type %1 has a user-provided %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2
because it is a variadic function
destructor for %0 is not trivial because it is virtual
%0 should be declared prior to the call site%select{| or in %2| or in an associated namespace of one of its arguments}1
add 'export' here if this is intended to be a module interface unit
%0 is not a structural type because it has a mutable non-static data member
%0 is not a structural type because it has a %select{non-static data member|base class}1 that is not public
%0 is not a structural type because it has a non-static data member of rvalue reference type
%0 is not a structural type because it has a %select{non-static data member|base class}1 of non-structural type %2
previous equal key is here
insert '%select{_Nonnull|_Nullable|_Null_unspecified}0' if the %select{pointer|block pointer|member pointer|array parameter}1 %select{should never be null|may be null|should not declare nullability}0
%0 specified here
use nullability type specifier %0 to affect the innermost pointer type of %1
%0 declared here
method marked as designated initializer of the class here
use 'isEqual:' instead
%select{first|second|third}0 parameter has unexpected type %1 (should be %2)
method returns unexpected type %0 (should be an object type)
add a super class to fix this problem
type parameter %0 declared here
method %0 that returns %1 declared here
%select{expected assignment expression|expected compound statement|expected exactly two expression statements|expected in right hand side of the first expression}0
%select{expected compound statement|expected exactly one expression statement|expected assignment statement|expected conditional operator|expect result value to be at false expression|expect binary operator in conditional expression|expect '<', '>' or '==' as order operator|expect comparison in a form of 'x == e', 'e == x', 'x ordop expr', or 'expr ordop x'|expect lvalue for result value|expect scalar value|expect integer value|unexpected 'else' statement|expect '==' operator|expect an assignment statement 'v = x'|expect a 'if' statement|expect no more than two statements|expect a compound statement|expect 'else' statement|expect a form 'r = x == e; if (r) ...'}0
%select{expected an expression statement|expected built-in assignment operator|expected expression of scalar type|expected lvalue expression}0
%select{expected an expression statement|expected built-in binary or unary operator|expected unary decrement/increment operation|expected expression of scalar type|expected assignment expression|expected built-in binary operator|expected one of '+', '*', '-', '/', '&', '^', '%|', '<<', or '>>' built-in operations|expected in right hand side of expression}0
as specified in %select{'collapse'|'ordered'|'collapse' and 'ordered'}0 clause%select{||s}0
conversion to %select{integral|enumeration}0 type %1 declared here
%select{|previous }0'hint' clause with value '%1'
%select{|previous }0directive with no 'hint' clause specified
explicit data sharing attribute requested here
explicit data sharing attribute, data mapping attribute, or is_device_ptr clause requested here
'%0' directive found here
jump exits scope of OpenMP structured block
defined as %0
memory order clause '%0' is specified here
implicitly determined as %0
expected length on mapping of 'this' array section expression to be '1'
expected lower bound on mapping of 'this' array section expression to be '0' or not specified
expected 'this' subscript expression on map clause to be 'this[0]'
loop step is expected to be %select{negative|positive}0 due to this condition
marked as 'declare variant' here
marked as 'device_type(%0)' here
%select{statement|directive}0 outside teams construct here
nested teams construct here
'nowait' clause is here
'ordered' clause%select{| with specified parameter}0
predefined trait '%0' used here
%select{static data member is predetermined as shared|variable with static storage duration is predetermined as shared|loop iteration variable is predetermined as private|loop iteration variable is predetermined as linear|loop iteration variable is predetermined as lastprivate|constant variable is predetermined as shared|global variable is predetermined as shared|non-shared variable in a task construct is predetermined as firstprivate|variable with automatic storage duration is predetermined as private}0%select{|; perhaps you forget to enclose 'omp %2' directive into a parallel or another task region?}1
previous allocator is specified here
'%0' clause is specified here
previous 'critical' region starts here
previous '%0' directive used here
'reduction' clause with 'inscan' modifier is used here
'%0' clause used here
previous clause with directive name modifier specified here
previously marked as task_reduction with different reduction operation
jump bypasses OpenMP structured block
previously referenced here
'%0' previously encountered here
%0 clause previously used here
predetermined as a firstprivate in a task construct here
previously declared '%0' here
use -foperator-arrow-depth=N to increase 'operator->' limit
'operator->' declared here produces an object of type %0
(skipping %0 'operator->'%s0 in backtrace)
parameter of overridden method is annotated with __attribute__((noescape))
overridden method is here
overridden virtual function is here
mark 'operator==' as const or add a matching 'operator!=' to resolve the ambiguity
ambiguous candidate function with reversed arguments
ambiguity is between a regular call to this operator and a call with the argument order reversed
candidate function with non-reversed arguments
built-in candidate %0
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %3}1%select{| has different class%diff{ (expected $ but has $)|}5,6| has different number of parameters (expected %5 but has %6)| has type mismatch at %ordinal5 parameter%diff{ (expected $ but has $)|}6,7| has different return type%diff{ ($ expected but has $)|}5,6| has different qualifiers (expected %5 but found %6)| has different exception specification}4
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: requires%select{ at least| at most|}3 %4 argument%s4, but %5 %plural{1:was|:were}5 provided
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %select{requires at least|allows at most single|requires single}3 argument %4, but %plural{0:no|:%5}5 arguments were provided
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: cannot %select{pass pointer to|bind reference in}5 %3 %select{as a pointer to|to object in}5 %4 in %ordinal6 argument
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: 'this' object is in %3, but method expects object in %4
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: cannot implicitly convert argument %diff{of type $ to $|type to parameter type}3,4 for %select{%ordinal6 argument|object argument}5 under ARC
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: cannot %select{convert from|convert from|bind}3 %select{base class pointer|superclass|base class object of type}3 %4 to %select{derived class pointer|subclass|derived class reference}3 %5 for %ordinal6 argument
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: no known conversion %diff{from $ to $|from argument type to parameter type}3,4 for %select{%ordinal6 argument|object argument}5%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}7
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: cannot convert argument of incomplete type %diff{$ to $|to parameter type}3,4 for %select{%ordinal6 argument|object argument}5%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}7
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %ordinal5 argument (%3) would lose %select{const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}4 qualifier%select{||s||s|s|s}4
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: 'this' argument has type %3, but method is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}4
candidate template ignored: failed template argument deduction
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %select{%ordinal7|'this'}6 argument (%3) has %select{no|__weak|__strong}4 ownership, but parameter has %select{no|__weak|__strong}5 ownership
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %select{cannot convert initializer list|too few initializers in list|too many initializers in list}7 argument to %4
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: no overload of %4 matching %3 for %ordinal5 argument
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %select{%ordinal7|'this'}6 argument (%3) has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}4 ownership, but parameter has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}5 ownership
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %ordinal8 argument (%3) has %select{no ptrauth|%5}4 qualifier, but parameter has %select{no ptrauth|%7}6 qualifier
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: call to %select{__device__|__global__|__host__|__host__ __device__|invalid}3 function from %select{__device__|__global__|__host__|__host__ __device__|invalid}4 function
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %ordinal5 argument (%3) would lose __unaligned qualifier
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: expects an %select{lvalue|rvalue}5 for %select{%ordinal4 argument|object argument}3
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: constraints not satisfied
candidate template ignored: deduced type %diff{$ of %select{|element of }4%ordinal0 parameter does not match adjusted type $ of %select{|element of }4argument|of %select{|element of }4%ordinal0 parameter does not match adjusted type of %select{|element of }4argument}1,2%3
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 has been %select{explicitly made unavailable|explicitly deleted|implicitly deleted}3
candidate template ignored: disabled by %0%1
candidate disabled: %0
candidate template ignored: requirement '%0' was not satisfied%1
explicit %select{constructor|conversion function|deduction guide}0 is not a candidate%select{| (explicit specifier evaluates to true)}1
candidate template ignored: invalid explicitly-specified argument for template parameter %0
candidate template ignored: invalid explicitly-specified argument for %ordinal0 template parameter
candidate address cannot be taken because parameter %0 has pass_object_size attribute
candidate %select{constructor|template}0 ignored: instantiation %select{takes|would take}0 its own class type by value
candidate constructor ignored: cannot be used to construct an object in address space %0
candidate template ignored: couldn't infer template argument %0
candidate template ignored: deduced too few arguments for expanded pack %0; no argument for %ordinal1 expanded parameter in deduced argument pack %2
candidate template ignored: deduced %select{conflicting types|conflicting values|conflicting templates|packs of different lengths}0 for parameter %1%diff{ ($ vs. $)|}2,3
candidate template ignored: deduced values %diff{of conflicting types for parameter %0 (%1 of type $ vs. %3 of type $)|%1 and %3 of conflicting types for parameter %0}2,4
constructor from base class %0 inherited here
candidate %select{constructor|template}0 ignored: inherited constructor cannot be used to %select{copy|move}1 object
candidate template ignored: substitution exceeded maximum template instantiation depth
candidate template ignored: could not match %diff{$ against $|types}0,1
candidate template ignored: could not match %q0 against %q1
candidate template ignored: substitution failure%0%1
candidate template ignored: cannot deduce a type for %0 that would make %2 equal %1
candidate template ignored: constraints not satisfied%0
conversion candidate of type %0
remaining %0 candidate%s0 omitted; pass -fshow-overloads=all to show them
declared with index %0 here
passing argument to parameter here
while substituting into concept arguments here; substitution failures not allowed in concept arguments
passing argument to parameter %0 here
parameter pack %0 declared here
parameter of type %0 is declared here
%0 has been marked as being introduced in %1 %2 here, but the deployment target is %1 %3
partial specialization matches %0
inline function performs a conversion which is forbidden in ARC
pointer %0 declared here
pointer '%0' declared here
possible target for call
when applied to this declaration
'#pragma clang attribute push' regions ends here
previous '#pragma pack' directive that modifies alignment is here
did you intend to use '#pragma pack (pop)' instead of '#pragma pack()'?
place parentheses around the %0 expression to evaluate it first
place parentheses around the '?:' expression to evaluate it first
place parentheses around the '%0' expression to silence this warning
previous module declaration is here
previously defined here
module loaded from '%0'
previous declaration of class template partial specialization %0 is here
previously declared '%1' here
previous attribute is here
%0 is a builtin with type %1
%0 declared here
previously declared as %0 here
for type %0
previous explicit instantiation is here
previous initialization for field %0 is here
previous initialization %select{|with side effects }0is here%select{| (side effects will not occur at run time)}0
previous inheritance model specified here
previously defined as an alias for %0
previous declaration of %0 is here
previous template specialization is here
previous uuid specified here
did you mean to call the %0 method?
while substituting prior template arguments into %select{non-type|template}0 template parameter%1 %2
use __attribute__((visibility("hidden"))) attribute instead
private module fragment begins here
property %0 is declared %select{deprecated|unavailable|partial}1 here
property declared here
property synthesized here
jump bypasses setup of __block variable
jump bypasses initialization of variable with __attribute__((cleanup))
jump enters controlled statement of consteval if
jump enters controlled statement of constexpr if
jump bypasses initialization of catch block
jump bypasses initialization of try block
jump enters controlled statement of if available
jump bypasses initialization of variable of non-trivial C struct type
jump bypasses auto release push of @autoreleasepool block
jump bypasses initialization of @catch block
jump enters Objective-C fast enumeration loop
jump bypasses initialization of @finally block
jump bypasses initialization of __strong variable
jump bypasses initialization of @synchronized block
jump bypasses initialization of @try block
jump bypasses initialization of __weak variable
jump bypasses initialization of __except block
jump bypasses initialization of __finally block
jump bypasses initialization of __try block
jump bypasses variable initialization
jump bypasses initialization of non-POD variable
jump bypasses variable with a non-trivial destructor
jump bypasses initialization of variable length array
jump bypasses initialization of VLA type alias
jump bypasses initialization of VLA typedef
protocol is declared here
protocol %0 has no definition
protocol method is here
it could also be property %select{of type %1|without attribute '%1'|with attribute '%1'|with getter %1|with setter %1}0 declared here
previous __ptrauth authentication %select{mode|option}0
%0 is incomplete
cannot take an address of a virtual member function if its return or argument types are incomplete
qualified call to %0::%1 is treated as a virtual call to %1 due to -fapple-kext
unimplemented pure virtual method %0 in %1
add a variable name to declare a %0 initialized with %1
receiver is instance of class declared here
receiver expression is here
receiver is treated with 'id' type for purpose of method lookup
default argument used here
'%0' included multiple times, additional include site here
'%0' included multiple times, additional include site in header from module '%1'
%select{reference|pointer}0 member declared here
%select{const|reference}0 member %1 will never be initialized
%0 returns a reference
class template declared here
use 'static_cast' to adjust the pointer correctly while %select{upcasting|downcasting}0
%select{overridden|current}0 method is explicitly declared 'instancetype'%select{| and is expected to return an instance of its class type}0
%select{overridden|current}0 method is part of the '%select{|alloc|copy|init|mutableCopy|new|autorelease|dealloc|finalize|release|retain|retainCount|self}1' method family%select{| and is expected to return an instance of its class type}0
%select{class|instance}0 method %1 is assumed to return an instance of its receiver type (%2)
overridden method returns an instance of its class type
remove the call to '%0' since unsigned values cannot be negative
remove call to max function and unsigned zero argument
remove std::move call here
remove parentheses to silence this warning
use function '%0' instead
replace 'default' with 'delete'
while rewriting comparison as call to 'operator<=>' declared here
repeated RISC-V 'interrupt' attribute is here
pass -fsafe-buffer-usage-suggestions to receive code hardening suggestions
%select{function|method|block}0 has been explicitly marked sentinel here
declared here
if you supply your own aligned allocation functions, use -faligned-allocation to silence this diagnostic
%select{and|because}0 %1 does not satisfy %2
attempt to specialize declaration here
explicitly specialized declaration is here
declare 'static' if the %select{variable|function}0 is not intended to be used outside of this translation unit
use array indexing to silence this warning
change size argument to be the size of the destination
change the argument to be the free space in the destination buffer minus the terminating null byte
did you mean %select{struct|interface|class}0 here?
because substituted constraint expression is ill-formed%0
add a deduction guide to suppress this warning
class with specified objc_requires_property_definitions attribute is declared here
surrounding namespace with visibility attribute ends here
surrounding namespace with visibility attribute starts here
parenthesize the second argument to silence
%select{parenthesize the third argument|cast the second argument to 'int'}0 to silence
conversion to %select{integral|enumeration}0 type %1
tail call required by %0 attribute here
non-type template argument refers to %select{function|object}0 here
non-type template argument refers here
template argument refers to function template %0, here
class template %0 was explicitly specialized here
in instantiation of template class %q0 requested here
class template %0 was instantiated here
template is declared here
%select{function template|class template|variable template|type alias template|template template parameter}0 %1 declared here
while checking a default template argument used here
in instantiation of enumeration %q0 requested here
in instantiation of exception specification for %0 requested here
declared as a non-template here
in instantiation of member class %q0 requested here
in instantiation of member function %q0 requested here
template non-type parameter has a different type %0 in template argument
previous non-type template parameter with type %0 is here
in instantiation of default member initializer %q0 requested here
template parameter has a different kind in template argument
template parameter is declared here
%select{too few|too many}0 template parameters in template template argument
previous default template argument defined here
previous default template argument defined in module %0
previous %select{template type|non-type template|template template}0 parameter%select{| pack}1 declared here
%select{template type|non-type template|template template}0 parameter%select{| pack}1 does not match %select{template type|non-type template|template template}0 parameter%select{ pack|}1 in template argument
previous template %select{declaration|template parameter}0 is here
use -ftemplate-depth=N to increase recursive template instantiation depth
in instantiation of requirement here
in instantiation of requirement parameters here
in instantiation of static data member %q0 requested here
in instantiation of template type alias %0 requested here
unnamed type used in template argument was declared here
in instantiation of variable template specialization %q0 requested here
thread warning in function %0
%select{destructor|deallocator}0 has a %select{non-throwing|implicit non-throwing}1 exception specification
function declared non-throwing here
required alignment of type %0 (%1 bytes) is larger than the supported alignment of C++ exception objects on this target (%2 bytes)
rewrite target here
%select{alignment|size}0 of first field is %1 bits
%0 is incomplete
%select{and|because}0 '%1' would be invalid: %2
%select{and|because}0 '%1' would be invalid
%select{function %1 which returns const-qualified type %2 declared here|variable %1 declared const here|%select{non-|}1static data member %2 declared const here|member function %q1 is declared const here|%select{|nested }1data member %2 declared const here}0
%select{first|second}0 operand was implicitly converted to type %1
did you mean to use '.' instead?
type is given name %0 for linkage purposes by this %select{typedef|alias}1 declaration
referenced member %0 is declared here
referenced %0 is declared here
enclose %0 in %select{an @available|a __builtin_available}1 check to silence this warning
remove the %select{'%1' if its condition|condition if it}0 is always %select{false|true}2
during field initialization in %select{this|the implicit default}0 constructor
uninitialized reference member is here
%select{uninitialized use occurs|variable is captured by block}0 here
%0 released here
%select{declaration|definition|default argument declared|explicit specialization declared|partial specialization declared}0 here is not %select{visible|reachable|reachable|reachable|reachable|reachable}0
silence by adding parentheses to mark code as explicitly dead
used%select{| in pointer arithmetic| in buffer access}0 here
change type of '%0' to '%select{std::span|std::array|std::span::iterator}1' to preserve bounds information
unguarded header; consider using #ifdef guards or #pragma once
use non-reference type %0
use reference type %0 to prevent copying
use 'thread_local' to allow this
use non-reference type %0 to make construction explicit or type %1 to prevent copying
used here
used in initialization here
implicit default constructor suppressed by user-declared constructor
%select{|previous }0using declaration
use %select{an alias declaration|a typedef declaration|a reference|a const variable|a constexpr variable}0 instead
conflicting declaration
target of using declaration
%select{|previous }0using-enum declaration
add 'typename' to treat this using declaration as a type
in value-initialization of type %0 here
variable %0 is declared here
variable %0 is%select{| explicitly}1 captured here
initialize the variable %0 to silence this warning
previous declaration of variable template partial specialization is here
%select{%1 is a virtual base class of base class %2 declared here|virtual base class %1 declared here}0
variable length arrays are not supported for the current target
which delegates to
detected while default synthesizing properties in class implementation
widen this field to %0 bits to store all values of %1
within field of type %0 declared here
replace expression with '%0' %select{|or use 'xor' instead of '^' }1to silence this warning
non-virtual member function marked '%0' hides virtual member %select{function|functions}1
only virtual member functions can be marked '%0'
absolute value function %0 given an argument of type %1 but has parameter of type %2 which may cause truncation of value
abstract class is marked '%select{final|sealed}0'
initializer for virtual base class %0 of abstract class %1 will never be used
access declarations are deprecated; use using declarations instead
type of property %0 does not match type of accessor %1
acquiring %0 '%1' requires negative capability '%2'
%0 '%1' must be acquired before '%2'
Cycle in acquired_before/after dependencies, starting with '%0'
operator '%0' has lower precedence than '%1'; '%1' will be evaluated first
reference cannot be bound to dereferenced null pointer in well-defined C++ code; pointer may be assumed to always convert to true
reference cannot be bound to dereferenced null pointer in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0
requested alignment is less than minimum alignment of %1 for type %0
%select{aligning a value|the result of checking whether a value is aligned}0 to 1 byte is %select{a no-op|always true}0
requested alignment is not a power of 2
use of function %0 is discouraged; there is no way to check for failure but failure may still occur, resulting in a possibly exploitable security vulnerability
second argument to __builtin_alloca_with_align is supposed to be in bits
this coroutine may be split into pieces; not every piece is guaranteed to be inlined
multiple suitable %0 functions for %1; no 'operator delete' function will be invoked if initialization throws an exception
interrupt service routine should only call a function with attribute 'no_caller_saved_registers'
ARC %select{unused|__unsafe_unretained|__strong|__weak|__autoreleasing}0 lifetime qualifier on return type is ignored
assigning %select{array literal|dictionary literal|numeric literal|boxed expression|<should not happen>|block literal}0 to a weak %select{property|variable}1; object will be released after assignment
%select{destination for|source of}0 this %1 call is a pointer to ownership-qualified type %2
performSelector may cause a leak because its selector is unknown
weak %select{variable|property|implicit property|instance variable}0 %1 may be accessed multiple times in this %select{function|method|block|lambda}2 and may be unpredictably set to nil; assign to a strong variable to keep the object alive
weak %select{variable|property|implicit property|instance variable}0 %1 is accessed multiple times in this %select{function|method|block|lambda}2 but may be unpredictably set to nil; assign to a strong variable to keep the object alive
capturing %0 strongly in this block is likely to lead to a retain cycle
assigning retained object to %select{weak|unsafe_unretained}0 %select{property|variable}1; object will be released after assignment
assigning retained object to unsafe property; object will be released after assignment
method parameter of type %0 with no explicit ownership
argument value %0 is outside the valid range [%1, %2]
argument value %0 will result in undefined behaviour
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 %select{floating-point|enumeration}1 type %2 %plural{2:with|4:from|:and}0 %select{enumeration|floating-point}1 type %3
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 %select{floating-point|enumeration}1 type %2 %plural{2:with|4:from|:and}0 %select{enumeration|floating-point}1 type %3 is deprecated
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated
call to function without interrupt attribute could clobber interruptee's VFP registers
array index %0 is past the end of the array (which contains %1 element%s2)
array index %0 refers past the last possible element for an array in %1-bit address space containing %2-bit (%3-byte) elements (max possible %4 element%s5)
array index %0 is before the beginning of the array
ignored asm label '%0' on automatic variable
value size does not match register size specified by the constraint and modifier
requested alignment must be %0 bytes or smaller; maximum alignment assumed
unknown assumption string '%0'; attribute is potentially ignored
unknown assumption string '%0' may be misspelled; attribute is potentially ignored, did you mean '%1'?
the argument to %0 has side effects that will be discarded
%select{@available|__builtin_available}0 does not guard availability here; use if (%select{@available|__builtin_available}0) instead
specifying 'uuid' as an ATL attribute is deprecated; use __declspec instead
implicit use of sequentially-consistent atomic may incur stronger memory barriers than necessary
accessing a member of an atomic structure or union is undefined behavior
memory order argument to atomic operation is invalid
writable atomic property %0 cannot pair a synthesized %select{getter|setter}1 with a user defined %select{getter|setter}2
@protocol is using a forward protocol declaration of %0
'abi_tag' attribute on %select{non-inline|anonymous}0 namespace ignored
consumed analysis attribute is attached to member of class %0 which isn't marked as consumable
%0 attribute cannot be applied to this declaration
%0 attribute cannot be applied to a %select{function|method}1 with no parameters
%0 attribute argument must be a string literal specifying a Swift function name
%0 attribute for getter must not have any parameters besides 'self:'
%0 attribute has invalid identifier for the %select{base|context|parameter}1 name
%0 attribute is missing parameter label clause
%0 attribute cannot specify more than one 'self:' parameter
too %select{few|many}0 parameters in the signature specified by the %1 attribute (expected %2; got %3)
%0 attribute for setter must have one parameter for new value
%0 attribute for 'subscript' getter cannot have a 'newValue:' parameter
%0 attribute for 'subscript' must %select{be a getter or setter|have at least one parameter|have a 'self:' parameter}1
%0 attribute for 'subscript' setter cannot have multiple 'newValue:' parameters
%0 attribute for 'subscript' setter must have a 'newValue:' parameter
multiple identical address spaces specified for type
attribute %0 after definition is ignored
%0 attribute parameter %1 is negative and will be ignored
builtin call has undefined behaviour when called from a %0 function
'cmse_nonsecure_entry' cannot be applied to functions with internal linkage
propagating dll attribute to %select{already instantiated|explicitly specialized}0 base class template without dll attribute is not supported
redeclaration of %q0 should not add %q1 attribute
explicit instantiation declaration should not be 'dllexport'
'dllexport' attribute ignored on explicit instantiation definition
definition of dllimport static field
attribute %0 has no effect when annotating an 'if %select{constexpr|consteval}1' statement
attribute %0 has no effect when annotating an infinite loop
%0 attribute can only be applied to instance variables or properties
%0 attribute ignored for field of type %1
%0 attribute is ignored because there exists no call expression inside the statement
%0 attribute ignored on inline function
%0 attribute ignored on a non-definition declaration
'%0' attribute cannot be specified on a definition
'%0' is not a valid builtin name for %1
'noescape' attribute ignored on parameter of non-pointer type %0
'nonnull' attribute applied to function with no pointer arguments
'nonnull' attribute when used on parameters takes no arguments
%0 attribute ignored when parsing type
'packed' attribute was ignored on bit-fields with single-byte alignment in older versions of GCC and Clang
%0 attribute only applies to a pointer or reference (%1 is invalid)
%0 attribute only applies to%select{| constant}1 pointer arguments
attribute declaration must precede definition
target does not support 'protected' visibility; using 'default'
%0 attribute only applies to return values that are pointers
%0 attribute only applies to return values that are pointers or references
#pragma %0(".drectve") has undefined behavior, use #pragma comment(linker, ...) instead
section attribute is specified on redeclared variable
'sentinel' attribute requires named arguments
'sentinel' attribute only supported for variadic %select{functions|blocks}0
%0 attribute argument not supported: %1
%0 attribute argument '%1' not supported on a global variable
unknown visibility %0
attribute %0 cannot be applied to %select{functions|Objective-C method}1 without return value
__weak attribute cannot be specified on a field declaration
__weak attribute cannot be specified on an automatic variable when ARC is not enabled
%0 attribute only applies to %select{functions|unions|variables and functions|functions and methods|functions, methods and blocks|functions, methods, and parameters|variables|variables and fields|variables, data members and tag types|types and namespaces|variables, functions and classes|kernel functions|non-K&R-style functions}1
%0 attribute only applies to %1
conflicting attributes %0 are ignored
property is assumed atomic when auto-synthesizing the property
readonly IBOutlet property %0 when auto-synthesized may not work correctly with 'nib' loader
'auto' storage class specifier is redundant and incompatible with C++11
auto property synthesis will not synthesize property %0 declared in protocol %1
'auto' deduced as 'id' in declaration of %0
auto property synthesis will not synthesize property %0; it will be implemented by its superclass, use @dynamic to acknowledge intention
autosynthesized property %0 will use %select{|synthesized}1 instance variable %2, not existing instance variable %3
Fuchsia API Level prohibits specifying a minor or sub-minor version
ignoring availability attribute %select{on '+load' method|with constructor attribute|with destructor attribute}0
only 'unavailable' and 'deprecated' are supported for Swift availability
unknown platform %0 in availability macro
feature cannot be %select{introduced|deprecated|obsoleted}0 in %1 version %2 before it was %select{introduced|deprecated|obsoleted}3 in version %4; attribute ignored
%select{reinterpret_cast|C-style cast}0 from %1 to %2 changes address space of nested pointers
cast from function call of type %0 to non-matching type %1
receiver type %0 is not 'id' or interface pointer, consider casting it to 'id'
base class %0 is uninitialized when used here to access %q1
binding reference member %0 to stack allocated %select{variable|parameter}2 %1
binding dereferenced null pointer to reference has undefined behavior
bit-field %0 is not wide enough to store all enumerators of %1
width of bit-field %0 (%1 bits) exceeds the width of its type; value will be truncated to %2 bit%s2
use of bitwise '%0' with boolean operands
bitwise negation of a boolean expression%select{;| always evaluates to 'true';}0 did you mean logical negation?
'%0' within '%1'
block captures an autoreleasing out-parameter, which may result in use-after-free bugs
attribute %0 ignored, because it cannot be applied to omitted return type
'%0' qualifier on omitted return type %1 has no effect
switch condition has boolean value
braces around %select{scalar |}0initializer
'break' is bound to loop, GCC binds it to switch
'%0' will always overflow; destination buffer has size %1, but size argument is %2
use of unknown builtin %0
call to pure virtual member function %0 has undefined behavior; overrides of %0 in subclasses are not available in the %select{constructor|destructor}1 of %2
too %select{few|many}0 arguments in call to %1
%0 parameter marked 'called_once' is called twice
%select{|captured }1%0 parameter marked 'called_once' is never called
%0 parameter marked 'called_once' is never %select{used|called}1 when %select{taking true branch|taking false branch|handling this case|none of the cases applies|entering the loop|skipping the loop|taking one of the branches}2
cannot pass object of %select{non-POD|non-trivial}0 type %1 through variadic %select{function|block|method|constructor}2; call will abort at runtime
cannot resolve lock expression
empty case range specified
overflow converting case value to switch condition type (%0 to %1)
cast from %0 to %1 increases required alignment from %2 to %3
cast between incompatible calling conventions '%0' and '%1'; calls through this pointer may abort at runtime
cast %diff{from $ to $ |}0,1converts to incompatible function type
nonnull %select{function call|parameter}0 '%1' will evaluate to 'true' on first encounter
cast of type %0 to %1 is deprecated; use sel_getName instead
cast from %0 to %1 drops %select{const and volatile qualifiers|const qualifier|volatile qualifier}2
cast from %0 to %1 must have all intermediate pointers const qualified to be safe
category is implementing a method which will also be implemented by its primary class
function with no prototype cannot use the %0 calling convention
%0 calling convention is not supported %select{for this target|on variadic function|on constructor/destructor|on builtin function}1
cannot refer to a non-static member from the handler of a %select{constructor|destructor}0 function try block
input conversion stopped due to an input byte that does not belong to the input codeset UTF-8
%select{class|category}0 %1 does not conform to protocol%plural{1: %3|2:s %3 and %4|3:s %3, %4 and %5|:s %3, %4, %5, ...}2
class method %objcclass0 not found (return type defaults to 'id')
class method %objcclass0 not found (return type defaults to 'id'); did you mean %objcclass2?
GCC does not allow the 'cleanup' attribute argument to be anything other than a simple identifier
passing union across security boundary via %select{parameter %1|return value}0 may leak information
property follows Cocoa naming convention for returning 'owned' objects
collection expression type %0 may not respond to %1
possible misuse of comma operator here
%select{self-|array }0comparison always evaluates to %select{a constant|true|false|'std::strong_ordering::equal'}1
bitwise comparison always evaluates to %select{false|true}0
bitwise or with non-zero value always evaluates to true
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated
comparison of different enumeration types in switch statement%diff{ ($ and $)|}0,1
completion handler is called twice
%select{|captured }1completion handler is never called
completion handler is never %select{used|called}1 when %select{taking true branch|taking false branch|handling this case|none of the cases applies|entering the loop|skipping the loop|taking one of the branches}2
suspicious concatenation of string literals in an array initialization; did you mean to separate the elements with a comma?
concatenated NSString literal for an NSArray expression - possibly missing a comma
using the result of an assignment as a condition without parentheses
using the result of an assignment as a condition without parentheses
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated
conflicting distributed object modifiers on parameter type in declaration of %0
conflicting parameter types in declaration of %0%diff{: $ vs $|}1,2
conflicting distributed object modifiers on return type in declaration of %0
conflicting return type in declaration of %0%diff{: $ vs $|}1,2
conflicting variadic declaration of method and its implementation
conflicting distributed object modifiers on parameter type in implementation of %0
conflicting parameter types in implementation of %0%diff{: $ vs $|}1,2
conflicting distributed object modifiers on return type in implementation of %0
conflicting return type in implementation of %0%diff{: $ vs $|}1,2
conflicting variadic declaration of method and its implementation
consteval if is always true in an %select{unevaluated|immediate}0 context
conversion function converting %0 to its base class %1 will never be used
conversion function converting %0 to itself will never be used
conversion function converting %0 to %1 will never be used
return type of 'coroutine_handle<>::address should be 'void*' (have %0) in order to get capability with existing async C API.
%0 is required to declare the member 'unhandled_exception()' when exceptions are enabled
%select{destination for|source of|first operand of|second operand of}0 this %1 call is a pointer to record %2 that is not trivial to %select{primitive-default-initialize|primitive-copy}3
%0 may not intend to support class template argument deduction
constructor parameter %0 shadows the field %1 of %2
use of this statement in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
multiple return statements in constexpr function is incompatible with C++ standards before C++14
constexpr function with no return statements is incompatible with C++ standards before C++14
variable declaration in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
type definition in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
return type deduction is incompatible with C++ standards before C++14
generic lambdas are incompatible with C++11
initialized lambda captures are incompatible with C++ standards before C++14
variable templates are incompatible with C++ standards before C++14
attribute %0 ignored, because it cannot be applied to a type
class template argument deduction is incompatible with C++ standards before C++17%select{|; for compatibility, use explicit type name %1}0
'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior
decomposition declarations are incompatible with C++ standards before C++17
inline variables are incompatible with C++ standards before C++17
by value capture of '*this' is incompatible with C++ standards before C++17
non-type template parameters declared with %0 are incompatible with C++ standards before C++17
use of function template name with no prior function template declaration in function call with explicit template arguments is incompatible with C++ standards before C++20
captured structured bindings are incompatible with C++ standards before C++20
use of this statement in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++20
constexpr constructor that does not initialize all members is incompatible with C++ standards before C++20
function try block in constexpr %select{function|constructor}0 is incompatible with C++ standards before C++20
uninitialized variable in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++20
constexpr union constructor that does not initialize any member is incompatible with C++ standards before C++20
virtual constexpr functions are incompatible with C++ standards before C++20
decomposition declaration declared %plural{1:'%1'|:with '%1' specifiers}0 is incompatible with C++ standards before C++20
defaulted comparison operators are incompatible with C++ standards before C++20
explicitly defaulting this %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 with a type different from the implicit type is incompatible with C++ standards before C++20
designated initializers are incompatible with C++ standards before C++20
explicit capture of 'this' with a capture default of '=' is incompatible with C++ standards before C++20
mangled name of %0 will change in C++17 due to non-throwing exception specification in function signature
use of implicit 'typename' is incompatible with C++ standards before C++20
initialized lambda capture packs are incompatible with C++ standards before C++20
%select{default construction|assignment}0 of lambda is incompatible with C++ standards before C++20
invoking a pointer to a 'const &' member function on an rvalue is incompatible with C++ standards before C++20
non-type template parameter of type %0 is incompatible with C++ standards before C++20
'char8_t' type specifier is incompatible with C++ standards before C++20
member using declaration naming a non-member enumerator is incompatible with C++ standards before C++20
member using declaration naming non-class '%0' enumerator is incompatible with C++ standards before C++20
using declaration naming a scoped enumerator is incompatible with C++ standards before C++20
aggregate initialization of type %0 with user-declared constructors is incompatible with C++20
'auto' as a functional-style cast is incompatible with C++ standards before C++2b
use of this statement in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++2b
definition of a %select{static variable|thread_local variable|variable of non-literal type}1 in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++2b
'constinit' specifier is incompatible with C++ standards before C++20
taking address of non-addressable standard library function is incompatible with C++20
type of UTF-8 string literal will change from array of const char to array of const char8_t in C++20
implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is incompatible with C++98
'auto' type specifier is incompatible with C++98
cast between pointer-to-function and pointer-to-object is incompatible with C++98
'constexpr' specifier is incompatible with C++98
constructor call from initializer list is incompatible with C++98
delegating constructors are incompatible with C++98
scalar initialized from empty initializer list is incompatible with C++98
initializing %0 from an empty initializer list is incompatible with C++98
befriending enumeration type %0 is incompatible with C++98
enumeration type in nested name specifier is incompatible with C++98
explicit conversion functions are incompatible with C++98
friend declaration naming a member of the declaring class is incompatible with C++98
jump from this goto statement to its label is incompatible with C++98
jump from this %select{indirect|asm}0 goto statement to one of its possible targets is incompatible with C++98
initialization of initializer_list object is incompatible with C++98
use of non-static data member %0 in an unevaluated context is incompatible with C++98
non-class friend type %0 is incompatible with C++98
%select{anonymous struct|union}0 member %1 with a non-trivial %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2 is incompatible with C++98
passing object of trivial but non-POD type %0 through variadic %select{function|block|method|constructor}1 is incompatible with C++98
reference initialized from initializer list is incompatible with C++98
substitution failure due to access control is incompatible with C++98
static data member %0 in union is incompatible with C++98
jump from switch statement to this case label is incompatible with C++98
%select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}1 of type %2 when binding a reference to a temporary would %select{invoke an inaccessible constructor|find no viable constructor|find ambiguous constructors|invoke a deleted constructor}0 in C++98
redundant parentheses surrounding address non-type template argument are incompatible with C++98
local type %0 as template argument is incompatible with C++98
use of null pointer as non-type template argument is incompatible with C++98
non-type template argument referring to %select{function|object}0 %1 with internal linkage is incompatible with C++98
unnamed type as template argument is incompatible with C++98
use of 'template' keyword outside of a template is incompatible with C++98
default template arguments for a function template are incompatible with C++98
use of 'typename' outside of a template is incompatible with C++98
befriending %1 without '%select{struct|interface|union|class|enum}0' keyword is incompatible with C++98
'%0' type specifier is incompatible with C++98
inheriting constructors are incompatible with C++98
ms_struct may not produce Microsoft-compatible layouts for classes with base classes or virtual functions
object backing the pointer will be destroyed at the end of the full-expression
initializing pointer member %0 to point to a temporary object whose lifetime is shorter than the lifetime of the constructed object
%select{reference|backing array for 'std::initializer_list'}2 %select{|subobject of }1member %0 %select{binds to|is}2 a temporary object whose lifetime is shorter than the lifetime of the constructed object
%select{temporary %select{whose address is used as value of|%select{|implicitly }2bound to}4 %select{%select{|reference }4member of local variable|local %select{variable|reference}4}1|array backing %select{initializer list subobject of local variable|local initializer list}1}0 %select{%3 |}2will be destroyed at the end of the full-expression
-dealloc is being overridden in a category
declaration of %0 will not be visible outside of this function
declaration shadows a %select{local variable|variable in %2|static data member of %2|field of %2|typedef in %2|type alias in %2|structured binding}1
declaration shadows a %select{local variable|variable in %2|static data member of %2|field of %2|typedef in %2|type alias in %2|structured binding}1
ignoring __declspec(allocator) because the function return type %0 is not a pointer or reference type
attribute %0 is ignored, place it after "%select{class|struct|interface|union|enum}1" to apply attribute to type declaration
exception specifications of %select{return|argument}0 types differ
%plural{1:enumeration value %1 not explicitly handled in switch|2:enumeration values %1 and %2 not explicitly handled in switch|3:enumeration values %1, %2, and %3 not explicitly handled in switch|:%0 enumeration values not explicitly handled in switch: %1, %2, %3...}0
atomic by default property %0 has a user defined %select{getter|setter}1 (property should be marked 'atomic' if this is intended)
explicitly defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator is implicitly deleted
explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 is implicitly deleted
constructor for %0 creates a delegation cycle
%select{delete|destructor}0 called on %1 that is abstract but has non-virtual destructor
'delete' applied to a pointer-to-array type %0 treated as 'delete[]'
deleting pointer to incomplete type %0 may cause undefined behavior
%select{delete|destructor}0 called on non-final %1 that has virtual functions but non-virtual destructor
comparison between two arrays is deprecated; to compare array addresses, use unary '+' to decay operands to pointers
%0 is deprecated
Current handling of vector bool and vector pixel types in this context are deprecated. The default behaviour will soon change to that implied by the '-altivec-compat=xl' option
'deprecated' attribute on anonymous namespace ignored
builtin %0 is deprecated; use %1 instead
top-level comma expression in array subscript is deprecated in C++20 and unsupported in C++2b
compound assignment to object of volatile-qualified type %0 is deprecated
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-declared copy %select{assignment operator|constructor}1
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-declared destructor
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-provided copy %select{assignment operator|constructor}1
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-provided destructor
support for std::experimental::%0 will be removed in LLVM 15; use std::%0 instead
implementing deprecated %select{method|class|category}0
%0 may be deprecated because the receiver type is unknown
%0 currently has no effect on a using declaration
%select{decrement|increment}0 of object of volatile-qualified type %1 is deprecated
Implicit conversion between vector types ('%0' and '%1') is deprecated. In the future, the behavior implied by '-fno-lax-vector-conversions' will be the default.
%0 is deprecated: %1
the '[[_Noreturn]]' attribute spelling is deprecated in C2x; use '[[noreturn]]' instead
out-of-line definition of constexpr static data member is redundant in C++17 and is deprecated
'register' storage class specifier is deprecated and incompatible with C++17
use of result of assignment to object of volatile-qualified type %0 is deprecated
conversion from string literal to %0 is deprecated
implicit capture of 'this' with a capture default of '=' is deprecated
volatile-qualified parameter type %0 is deprecated
volatile-qualified return type %0 is deprecated
volatile qualifier in structured binding declaration is deprecated
dereferencing %0; was declared with a 'noderef' type
dereferencing expression marked as 'noderef'
explicit call to +initialize results in duplicate call to +initialize
instance variable %0 is being directly accessed
explicit call to [super initialize] should only be in implementation of +initialize
body of cpu_dispatch function will be ignored
expression does not compute the number of elements in this array; element type is %0, not %1
'%0' will return the size of the pointer, not the array itself
%q0 redeclared inline; %1 attribute ignored
double precision constant requires %select{cl_khr_fp64|cl_khr_fp64 and __opencl_c_fp64}0, casting to single precision
acquiring %0 '%1' that is already held
attribute %0 is already applied with different arguments
attribute %0 is already applied
duplicate code segment specifiers
element %0 has been implicitly assigned %1 which another element has been assigned
multiple declarations of method %0 found and ignored
duplicate protocol definition of %0 is ignored
%select{destination for|source of|first operand of|second operand of}0 this %1 call is a pointer to %select{|class containing a }2dynamic class %3; vtable pointer will be %select{overwritten|copied|moved|compared}4
for loop has empty body
format string is empty
if statement has empty body
empty parentheses interpreted as a function declaration
range-based for loop has empty body
switch statement has empty body
while loop has empty body
converting the enum constant to a boolean
overflow in enumeration value
equality comparison with extraneous parentheses
exception of type %0 will be caught by earlier handler
declaration requires an exit-time destructor
expecting %0 '%1' to be held at start of each loop
expecting %0 '%1' to be held at the end of function
explicit instantiation of %0 that occurs after an explicit specialization has no effect
explicit instantiation cannot be 'inline'
explicit instantiation of %0 must occur at global scope
explicit instantiation of %0 not in a namespace enclosing %1
explicit instantiation of %q0 must occur in namespace %1
'extern' variable has an initializer
non-void coroutine does not return a value
non-void function does not return a value
non-void lambda does not return a value
function declared 'noreturn' should not return
field %0 is uninitialized when used here
class with destructor marked '%select{final|sealed}0' cannot be inherited from
array with '%select{__counted_by|__sized_by}0' and the argument of the attribute should be defined in the same translation unit
%select{%diff{assigning to%select{ __indexable| __bidi_indexable|}3 type $ from%select{ __single|}4 type $|assigning%select{ __indexable| __bidi_indexable|}3 type from%select{ __single|}4 type}0,1|%diff{passing%select{ __single|}4 type $ to parameter of%select{ __indexable| __bidi_indexable|}3 type $|passing%select{ __single|}4 type to parameter of%select{ __indexable| __bidi_indexable|}3 type}0,1|%diff{returning%select{ __single|}4 type $ from a function with%select{ __indexable| __bidi_indexable|}3 result type $|returning%select{ __single|}4 type from a function with%select{ __indexable| __bidi_indexable|}3 result type}0,1|%diff{converting%select{ __single|}4 type $ to%select{ __indexable| __bidi_indexable|}3 type $|converting%select{ __single|}4 type to%select{ __indexable| __bidi_indexable|}3 type}0,1|%diff{initializing%select{ __indexable| __bidi_indexable|}3 type $ with an expression of%select{ __single|}4 type $|initializing%select{ __indexable| __bidi_indexable|}3 type with an expression of%select{ __single|}4 type}0,1|%diff{sending%select{ __single|}4 type $ to parameter of%select{ __indexable| __bidi_indexable|}3 type $|sending%select{ __single|}4 type to parameter of%select{ __indexable| __bidi_indexable|}3 type}0,1|%diff{casting%select{ __single|}4 type $ to%select{ __indexable| __bidi_indexable|}3 type $|casting%select{ __single|}4 type to%select{ __indexable| __bidi_indexable|}3 type}0,1|}2 results in %select{an __indexable|a __bidi_indexable}5 pointer that will trap if a non-zero offset is dereferenced%select{|. consider adding '__counted_by' to '%7'}6
%select{|implicit }0zero-initialization of %select{'__counted_by'|'__sized_by'}1 pointer%select{| field}3 %2 with non-zero %select{count|size}1 never succeeds
%select{|implicitly }0initializing field %1 of type %2 to NULL while '%3' is initialized with a value rarely succeeds
accessing elements of an unannotated incomplete array always fails at runtime
casting %0 to %1 creates a '%select{__indexable|__bidi_indexable}2' pointer %select{with bounds containing only one %3|with zero length due to %3 having unknown size)}4
initializer %0 has a side effect; this may lead to an unexpected result because the evaluation order of initialization list expressions is indeterminate
conversion from pointer type %0 to a %select{counted|sized}1 pointer type with an unrelated length rarely succeeds
enumeration value %0 is out of range of flags in enumeration type %1
floating-point comparison is always %select{true|false}0; constant cannot be represented exactly in type %1
magnitude of floating-point constant too large for type %0; maximum is %1
magnitude of floating-point constant too small for type %0; minimum is %1
comparing floating point with == or != is unsafe
'begin' and 'end' returning different types (%0 and %1) is incompatible with C++ standards before C++17
loop variable %0 %diff{of type $ binds to a temporary constructed from type $|binds to a temporary constructed from a different type}1,2
loop variable %0 creates a copy from type %1
loop variable %0 binds to a temporary value produced by a range of type %1
using '%%P' format specifier without precision
%select{values of type|enum values with underlying type}2 '%0' should not be used as format arguments; add an explicit cast to %1 instead
%select{values of type|enum values with underlying type}2 '%0' should not be used as format arguments; add an explicit cast to %1 instead
using '%0' format specifier, but argument has boolean value
format specifies type %0 but the argument has %select{type|underlying type}2 %1
format specifies type %0 but the argument has %select{type|underlying type}2 %1
format specifies type %0 but the argument has %select{type|underlying type}2 %1
using '%0' format specifier annotation outside of os_log()/os_trace()
invalid conversion specifier '%0'
invalid position specified for %select{field width|field precision}0
cannot mix positional and non-positional arguments in format string
'%0' %select{length modifier|conversion specifier}1 is not supported by ISO C
using length modifier '%0' with conversion specifier '%1' is not supported by ISO C
positional arguments are not supported by ISO C
format string is not a string literal
format string is not a string literal (potentially insecure)
length modifier '%0' results in undefined behavior or no effect with '%1' conversion specifier
format string should not be a wide string
position arguments in format strings start counting at 1 (not 0)
'%0' may overflow; destination buffer in argument %1 has size %2, but the corresponding specifier may require size %3
'%0' will always overflow; destination buffer has size %1, but format string expands to at least %2
'%0' will always overflow; destination buffer has size %1, but size argument is %2
'%0' size argument is too large; destination buffer has size %1, but size argument is %2
'%0' will always overflow; destination buffer has size %1, but the source string has length %2 (including NUL byte)
redefinition of forward class %0 of a typedef name of an object type is ignored
calling '%0' with a nonzero argument is unsafe
attempt to call %0 on non-heap %select{object %2|object: block expression|object: lambda-to-function-pointer conversion}1
cannot call function '%1' while %0 '%2' is held
calling function %1 requires holding %0 %select{'%2'|'%2' exclusively}3
calling function %1 requires holding %0 %select{'%2'|'%2' exclusively}3
calling function %0 requires negative capability '%1'
instantiation of function %q0 required here, but no definition is available
attribute is ignored on this statement as it only applies to functions; use '%0' on statements
function definition inside an Objective-C container is deprecated
statement attribute %0 has higher precedence than function attribute '%select{always_inline|flatten|noinline}1'
Objective-C GC does not allow weak variables on the stack
GCC does not allow the %0 attribute to be written on a type
GCC requires a function with the %0 attribute to be variadic
declaration requires a global constructor
declaration requires a global destructor
'gnu_inline' attribute requires function to be marked 'inline', attribute ignored
'gnu_inline' attribute without 'extern' in C++ treated as externally available, this changed in Clang 10
arithmetic on a null pointer treated as a cast from integer to pointer is a GNU extension
passing variable %1 by reference requires holding %0 %select{'%2'|'%2' exclusively}3
%select{instance variable|property}2 with %0 attribute must be an object type (invalid %1)
IBOutletCollection properties should be copy/strong and not assign
assigning %select{field|instance variable}0 to itself
inheritance model ignored on %select{primary template|partial specialization}0
'objc_externally_retained' can only be applied to local variables %select{of retainable type|with strong ownership}0
implicit cast from type %0 to type %1 drops __unaligned qualifier
implicit truncation from %2 to bit-field changes value from %0 to %1
initialization of pointer of type %0 to null from a constant boolean expression
implicit conversion discards imaginary component: %0 to %1
implicit conversion from constant value %0 to 'BOOL'; the only well defined values for 'BOOL' are YES and NO
implicit conversion from enumeration type %0 to different enumeration type %1
implicit conversion increases floating-point precision: %0 to %1
implicit conversion from %0 cannot fit within the range of values for %1
implicit conversion turns floating-point number into integer: %0 to %1
implicit conversion loses floating-point precision: %0 to %1
implicit conversion when assigning computation result loses floating-point precision: %0 to %1
implicit conversion from %0 to %1 changes value from %2 to %3
implicit conversion of out of range value from %0 to %1 is undefined
implicit conversion from %0 to %1 changes non-zero value from %2 to %3
implicit conversion from floating-point type %0 to 'BOOL'
implicit conversion turns floating-point number into bool: %0 to %1
higher order bits are zeroes after implicit conversion
implicit conversion from integral type %0 to 'BOOL'
implicit conversion loses integer precision: %0 to %1
implicit conversion from %0 to %1 may lose precision
implicit conversion from %2 to %3 changes value from %0 to %1
implicit conversion loses integer precision: %0 to %1
implicit conversion from %2 to %3 changes value from %0 to %1
implicit conversion changes signedness: %0 to %1
operand of ? changes signedness: %0 to %1
implicit conversion from %0 to %1 changes value from %2 to %3
implicit conversion of out of range value from %0 to %1 is undefined
the resulting value is always non-negative after implicit conversion
implicit conversion of %select{NULL|nullptr}0 constant to %1
implicit boolean conversion of Objective-C object literal always evaluates to true
address of%select{| function| array}0 '%1' will always evaluate to 'true'
implicit truncation from %2 to a one-bit wide bit-field changes value from %0 to %1
implicit conversion turns string literal into bool: %0 to %1
implicit conversion turns vector to scalar: %0 to %1
class property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this class implementation
class property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category
default assign attribute on property %0 which implements NSCopying protocol is not appropriate with -fobjc-gc[-only]
property is assumed atomic by default
declaration of built-in function '%0' requires the declaration of the 'jmp_buf' type, commonly provided in the header <setjmp.h>.
declaration of built-in function '%1' requires inclusion of the header <%0>
implicit declaration of function %0
block implicitly retains 'self'; explicitly mention 'self' to indicate this is intended behavior
import %select{module|name}0 cannot be applied to a function with a definition
direct base %0 is inaccessible due to ambiguity:%1
target exception specification is not superset of source
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2
incompatible vector types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
encoding of %0 type is incomplete because %1 component has unknown encoding
argument %0 of type %1 with mismatched bound
%0 overrides a destructor but is not marked 'override'
%0 overrides a member function but is not marked 'override'
incrementing expression of type bool is deprecated and incompatible with C++17
'objc_independent_class' attribute may be put on a typedef only; attribute is ignored
indirection of non-volatile null pointer will be deleted, not trap
all paths through this function will call itself
constant expression evaluates to %0 which cannot be narrowed to type %1 in C++11
type %0 cannot be narrowed to %1 in initializer list in C++11
non-constant-expression cannot be narrowed from type %0 to %1 in initializer list in C++11
initializing pointer member %0 with the stack address of %select{variable|parameter}2 %1
%select{field|base class}0 %1 will be initialized after %select{field|base}2 %3
initializer %select{partially |}0overrides prior initialization of this subobject
inline namespace reopened as a non-inline namespace
instance method %objcinstance0 not found (return type defaults to 'id')
instance method %objcinstance0 not found (return type defaults to 'id'); did you mean %objcinstance2?
instance method %0 found instead of class method %1
cast to %1 from smaller integer type %0
cast to %1 from smaller integer type %0
converting the result of '?:' with integer constants to a boolean always evaluates to 'true'
'internal_linkage' attribute on a non-static local variable is ignored
%select{MIPS|MSP430|RISC-V}0 'interrupt' attribute only applies to functions that have %select{no parameters|a 'void' return type}1
invalid use of a cast in an inline asm context requiring an lvalue: accepted due to -fheinous-gnu-extensions, but clang may remove support for this in the future
invalid constructor from class in system header, should not be explicit
local declaration of %0 hides instance variable
declaration of instance variables in the interface is deprecated
jump out of __finally block has undefined behavior
ignored 'inline' attribute on kernel function %0
kernel function %0 is a member function; this may not be accepted by nvcc
converting the result of '<<' to a boolean always evaluates to %select{false|true}0
converting the result of '<<' to a boolean; did you mean '(%0) != 0'?
first argument to __builtin_load_member_function_pointer must have a type deriving from class where second argument was defined
second argument to __builtin_load_member_function_pointer must be the address of a C++ member function: for example '&Foo::func', not null
%0 '%1' is acquired exclusively and shared in the same scope
%0 '%1' is not held on every path through here
'&&' within '||'
use of logical '%0' with constant operand
logical not is only applied to the left hand side of this %select{comparison|bitwise operator}0
'%0' is bound to current loop, GCC binds it to the enclosing loop
state of variable '%0' must match at the entry and exit of loop
only one parameter on 'main' declaration
variable named 'main' with external linkage has undefined behavior
bool literal returned from 'main'
taking the max of %select{a value and unsigned zero|unsigned zero and a value}0 is always equal to the other value
capture host side class data member by this pointer in device or host device lambda function may result in invalid memory access if this pointer is not accessible on device side
non-void coroutine does not return a value in all control paths
non-void function does not return a value in all control paths
non-void lambda does not return a value in all control paths
variable %0 may be uninitialized when %select{used here|captured by block}1
%0 may not respond to %1
extra qualification on member %0
size argument in %0 call is a comparison
messaging unqualified id
'mig_server_routine' attribute only applies to routines that return a kern_return_t
availability does not match previous declaration
%select{|overriding }4method %select{introduced after|deprecated before|obsoleted before}0 %select{the protocol method it implements|overridden method}4 on %1 (%2 vs. %3)
%select{|overriding }1method cannot be unavailable on %0 when %select{the protocol method it implements|its overridden method}1 is available
'delete%select{|[]}0' applied to a pointer that was allocated with 'new%select{[]|}0'; did you mean 'delete%select{[]|}0'?
import %select{module|name}0 (%1) does not match the import %select{module|name}0 (%2) of the previous declaration
nullability specifier %0 conflicts with existing specifier %1
%select{codeseg|section}0 does not match previous declaration
use of OSPtr outside of a return type
suggest braces around initialization of subobject
%plural{1:enumeration value %1 not handled in switch|2:enumeration values %1 and %2 not handled in switch|3:enumeration values %1, %2, and %3 not handled in switch|:%0 enumeration values not handled in switch: %1, %2, %3...}0
no case matching constant switch condition '%0'
auto property synthesis is synthesizing property not explicitly synthesized
missing field %0 initializer
format string missing
method has no return type specified; defaults to 'id'
no previous prototype for function %0
%0 availability is ignored without a valid 'SDKSettings.json' in the SDK
missing sentinel in %select{function call|method dispatch|block call}0
no previous extern declaration for non-static variable %0
mixing declarations and code is incompatible with standards before C99
comparison of integers of different signs: %0 and %1
modifying constructor parameter %0 that shadows a field of %1
multiple methods named %0 found
several methods with selector %0 of mismatched types are found for the @selector expression
CPU list contains duplicate entries; attribute ignored
extra qualification on member %0
vector initializers are not compatible with NEON intrinsics in big endian mode
array backing %select{initializer list subobject of the allocated object|the allocated initializer list}0 will be destroyed at the end of the full-expression
temporary bound to reference member of allocated object will be destroyed at the end of the full-expression
auto property synthesis will not synthesize property %0 because it is 'readwrite' but it will be synthesized 'readonly' via another property
auto property synthesis will not synthesize property %0 because it cannot share an ivar with another synthesized property
%select{struct|interface|union|class|enum}0 %1 does not declare any constructor to initialize its non-modifiable members
dynamic_cast will not work since RTTI data is disabled by %select{-fno-rtti-data|/GR-}0
typeid will not work since RTTI data is disabled by %select{-fno-rtti-data|/GR-}0
enums in the Microsoft ABI are signed integers by default; consider giving the enum %0 an unsigned underlying type to make this code portable
%0 '%1' is still held at the end of function
'nocf_check' attribute ignored; use -fcf-protection to enable the attribute
'noderef' can only be used on an array or pointer type
casting to dereferenceable pointer removes 'noderef' attribute
under -fcoro-aligned-allocation, the non-aligned allocation function for the promise type %0 has higher precedence than the global aligned allocation function
conflicting parameter types in declaration of %0: %1 vs %2
conflicting parameter types in implementation of %0: %1 vs %2
conflicting return type in declaration of %0: %1 vs %2
conflicting return type in implementation of %0: %1 vs %2
expression which evaluates to zero treated as a null pointer constant of type %0
cannot pass %select{non-POD|non-trivial}0 object of type %1 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
a function %select{declaration|definition}0 without a prototype is deprecated in all versions of C %select{and is not supported in C2x|and is treated as a zero-parameter prototype in C2x, conflicting with a %select{previous|subsequent}2 %select{declaration|definition}3}1
%0 has virtual functions but non-virtual destructor
comparison of nonnull %select{function call|parameter}0 '%1' %select{not |}2equal to a null pointer is '%select{true|false}2' on first encounter
function %0 declared 'noreturn' should not return
not a Doxygen trailing comment
use of unary operator that may be intended as compound assignment (%0=)
not enough variable arguments in %0 declaration to fit a sentinel
case value not in enumerated type %0
integer constant not in range of enumerated type %0
alignment of 16 bytes for a struct member is not binary compatible with IBM XL C/C++ for AIX 16.1.0 or older
'nothrow' attribute conflicts with exception specification; attribute ignored
%0 attribute only applies to %select{Objective-C object|pointer|pointer-to-CF-pointer|pointer/reference-to-OSObject-pointer}1 parameters
%0 attribute only applies to %select{functions|methods|properties}1 that return %select{an Objective-C object|a pointer|a non-retainable pointer}2
overriding method has mismatched ns_consumed attribute on its parameter
duplicate key in dictionary literal
'NSObject' attribute may be put on a typedef only; attribute is ignored
overriding method has mismatched ns_returns_%select{not_retained|retained}0 attributes
null passed to a callee that requires a non-null argument
use of NULL in arithmetic operation
comparison between NULL and non-pointer %select{(%1 and NULL)|(NULL and %1)}0
comparison of %select{address of|function|array}0 '%1' %select{not |}2equal to a null pointer is always %select{true|false}2
synthesized setter %0 for null_resettable property %1 does not handle nil
null returned from %select{function|method}0 that requires a non-null return value
nullability specifier %0 cannot be applied to non-pointer type %1; did you mean to apply the specifier to the %select{pointer|block pointer|member pointer|function pointer|member function pointer}2?
inferring '_Nonnull' for pointer type within %select{array|reference}0 is deprecated
implicit conversion from nullable pointer %0 to non-nullable pointer type %1
%select{pointer|block pointer|member pointer}0 is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified)
array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified)
string is ill-formed as UTF-8 and will become a null %0 when boxed
using %0 directive in %select{NSString|CFString}1 which is being passed as a formatting argument to the formatting %select{method|CFfunction}2
adding %0 to %1 might cause circular dependency in container
object of type %0 is not compatible with %select{array element type|dictionary key type|dictionary value type}1 %2
designated initializer missing a 'super' call to a designated initializer of the super class
designated initializer invoked a non-designated initializer
designated initializer should only invoke a designated initializer on 'super'
%0 attribute isn't implemented by this Objective-C runtime
direct attribute on property %0 ignored (not implemented by this Objective-C runtime)
method override for the designated initializer of the superclass %objcinstance0 not found
%0 bridges to %1, not %2
%0 cannot bridge to %1
assignment to Objective-C's isa is deprecated in favor of object_setClass()
direct access to Objective-C's isa is deprecated in favor of object_getClass()
direct comparison of %select{an array literal|a dictionary literal|a numeric literal|a boxed expression|}0 has undefined behavior
'+load' is called at app startup and can increase launch time; consider using '+initialize' instead
method possibly missing a [super %0] call
cannot catch an exception thrown with @throw in C++ in the non-unified exception model
bitmasking for introspection of Objective-C object pointers is strongly discouraged
bitmasking for introspection of Objective-C object pointers is strongly discouraged
objc_precise_lifetime is not meaningful for %select{__unsafe_unretained|__autoreleasing}0 objects
'assign' property of object type may become a dangling reference; consider using 'unsafe_unretained'
'copy' attribute must be specified for the block property when -fobjc-gc-only is specified
default property attribute 'assign' not appropriate for object
no 'assign', 'retain', or 'copy' attribute is specified - 'assign' is assumed
retain'ed block property does not copy the block - use copy attribute instead
setter cannot be specified for a readonly property
using %0 with a literal is redundant
parameterized class %0 already conforms to the protocols listed; did you forget a '*'?
%0 attribute cannot be applied to %select{methods in protocols|dealloc}1
class %0 defined without specifying a base class
convenience initializer missing a 'self' call to another initializer
convenience initializer should not invoke an initializer on 'super'
direct comparison of a string literal has undefined behavior
'objc_direct' attribute is ignored as 'objc_suppress_direct' attribute is applied
'objc_suppress_direct' attribute is ignored
%0 is incompatible with selectors that return a %select{struct|union|vector}1 type
the meaning of __weak has changed in manual reference-counting
%0 was declared with __weak, but __weak is ignored in files using manual reference counting
ignoring __weak in file using manual reference counting
use of old-style cast
aligned clause will be ignored because the requested alignment is not a power of 2
allocator with the 'thread' trait access has unspecified behavior on '%0' directive
declaration marked as declare target after first use, it may lead to incorrect results
'#pragma omp declare variant' cannot be applied to the function that was defined already; the original function might be used
'#pragma omp declare variant' cannot be applied for function after first usage; the original function might be used
variant function in '#pragma omp declare variant' is itself marked as '#pragma omp declare variant'
score expressions in the OpenMP context selector need to be constant; %0 is not and will be ignored
zero linear step (%0 %select{|and other variables in clause }1should probably be const)
OpenMP loop iteration variable cannot have more than 64 bits size and will be narrowed
OpenMP only allows an ordered construct with the simd clause nested in a simd construct
Type %0 is not trivially copyable and not guaranteed to be mapped correctly
declaration is not declared in any declare target region
array section %select{lower bound|length}0 is of type 'char'
expected '#pragma omp end declare target' at end of file to match '#pragma omp %0'
allocate directive specifies %select{default|'%1'}0 allocator while previously used %select{default|'%3'}2
class implementation may not have super class
%0 attribute is deprecated and ignored in %1
passing non-generic address space pointer to %0 may cause dynamic conversion affecting performance
%0 should not return a null pointer unless it is declared 'throw()'%select{| or 'noexcept'}1
os_log() '%%n' format specifier is not allowed
result of comparison of %select{constant %0|true|false}1 with %select{expression of type %2|boolean expression}3 is always %4
type %0 requires %1 bytes of alignment and the default allocator only guarantees %2 bytes
overloaded operator %select{>>|<<}0 has higher precedence than comparison operator
%q0 hides overloaded virtual %select{function|functions}1
parameter of overriding method should be annotated with __attribute__((noescape))
passing %0-byte aligned argument to %1-byte aligned parameter %2%select{| of %4}3 may result in an unaligned pointer access
parameter '%0' not in expected state when the function returns: expected '%1', observed '%2'
argument not in expected state; expected '%0', observed '%1'
%0 is a large (%1 bytes) pass-by-value argument; pass it by reference instead ?
parentheses were disambiguated as a function declaration
parentheses were disambiguated as redundant parentheses around declaration of variable named %0
passing object of class type %0 through variadic %select{function|block|method|constructor}1%select{|; did you mean to call '%3'?}2
moving a temporary object prevents copy elision
moving a local object in a return statement prevents copy elision
taking the absolute value of %select{pointer|function|array}0 type %1 is suspicious
performing pointer arithmetic on a null pointer has undefined behavior%select{| if the offset is nonzero}0
comparing a pointer to a null character constant; did you mean to compare to %select{NULL|(void *)0}0?
dereference of type %1 that was reinterpret_cast from type %0 has undefined behavior
performing pointer subtraction with a null pointer %select{has|may have}0 undefined behavior
cast to smaller integer type %1 from %0
cast to smaller integer type %1 from %0
@selector expression formed with potentially direct selector %0
#pragma align(packed) may not be compatible with objects generated with AIX XL C/C++
unused attribute %0 in '#pragma clang attribute push' region
#pragma options align=reset failed: %0
expected #pragma pack parameter to be '1', '2', '4', '8', or '16'
the current #pragma pack alignment value is modified in the included file
unterminated '#pragma pack (push, ...)' at end of file
non-default #pragma pack value changes the alignment of struct or union members in the included file
specifying both a name and alignment to 'pop' is undefined
value of #pragma pack(show) == %0
#pragma %0(pop, ...) failed: %1
only variables can be arguments to '#pragma unused'
undeclared variable %0 used as an argument for '#pragma unused'
operator '?:' has lower precedence than '%0'; '%0' will be evaluated first
%0 has lower precedence than %1; %1 will be evaluated first
operator '?:' has lower precedence than '%0'; '%0' will be evaluated first
object format flags cannot be used with '%0' conversion specifier
'%select{*|.*}0' specified field %select{width|precision}0 is missing a matching 'int' argument
field %select{width|precision}0 should have type %1, but argument has type %2
data argument not used by format string
missing object format flag
format string contains '\0' within the string body
format string is not null-terminated
flag '%0' is ignored when flag '%1' is present
incomplete format specifier
more '%%' conversions than data arguments
'%0' is not a valid object format flag
'%%n' specifier not supported on this platform
flag '%0' results in undefined behavior with '%1' conversion specifier
%select{field width|precision}0 used with '%1' conversion specifier, resulting in undefined behavior
data argument position '%0' exceeds the number of data arguments (%1)
use of __private_extern__ on a declaration may not produce external symbol private to the linkage unit and is deprecated
property %0 not found on object of type %1; did you mean to access property %2?
property attribute in class extension does not match the primary class
'%1' attribute on property %0 does not match the property inherited from %2
property declared as returning non-retained objects; getter returning retained objects
primary property declaration is implicitly strong while redeclaration in class extension is weak
property access is using %0 method which is deprecated
getter name mismatch between property redeclaration (%1) and its original declaration (%0)
property type %0 is incompatible with type %1 inherited from %2
property %select{of type %1|with attribute '%1'|without attribute '%1'|with getter %1|with setter %1}0 was selected for synthesis
passing the value that %1 points to by reference requires holding %0 %select{'%2'|'%2' exclusively}3
the pointer incremented by %0 refers past the end of the array (that contains %1 element%s2)
the pointer incremented by %0 refers past the last possible element for an array in %1-bit address space containing %2-bit (%3-byte) elements (max possible %4 element%s5)
the pointer decremented by %0 refers before the beginning of the array
'objc_independent_class' attribute may be put on Objective-C object pointer type only; attribute is ignored
authenticating a null pointer will almost certainly trap
signing a null pointer will yield a non-null pointer
'%0' type qualifier%s1 on return type %plural{1:has|:have}1 no effect
attribute 'readonly' of property %0 restricts attribute 'readwrite' of property inherited from %1
receiver %0 is a forward class and corresponding @interface may not exist
receiver type %0 for instance message is a forward declaration
incompatible redeclaration of library function %0
%q0 redeclared without %1 attribute: previous %1 ignored
%q0 redeclared without 'dllimport' attribute: 'dllexport' attribute added
#pragma redefine_extname is applicable to external C declarations only; not applied to %select{function|variable}0 %1
redefinition of %0 will not be visible outside of this function
variable %0 is %select{decremented|incremented}1 both in the loop header and in the loop body
redundant move in return statement
redundant parentheses surrounding declarator
reference %0 is not yet bound to a value when used here
'register' storage specifier on @catch parameter will be ignored
'reinterpret_cast' %select{from|to}3 class %0 %select{to|from}3 its %select{virtual base|base at non-zero offset}2 %1 behaves differently from 'static_cast'
method is expected to return an instance of its class type %diff{$, but is declared to return $|, but is declared to return different type}0,1
protocol method is expected to return an instance of the implementing class, but is declared to return %0
%select{remainder|division}0 by zero is undefined
'require_constant_initialization' attribute added after initialization of variable
identifier %0 is reserved because %select{<ERROR>|it starts with '_' at global scope|it starts with '_' and has C language linkage|it starts with '__'|it starts with '_' followed by a capital letter|it contains '__'}1
returning address of label, which is local
returning %select{address of|reference to}0 local temporary object
%select{address of|reference to}0 stack memory associated with %select{local variable|parameter}2 %1 returned
manual %0 of an OSSharedPtr is error-prone
non-void %select{function|method}1 %0 should return a value
return state set for an unconsumable type '%0'
return value not in expected state; expected '%0', observed '%1'
return value of %0 is a large (%1 bytes) pass-by-value object; pass it by reference instead ?
%0 has C-linkage specified, but returns user-defined type %1 which is incompatible with C
%0 has C-linkage specified, but returns incomplete type %1 which could be incompatible with C
repeated RISC-V 'interrupt' attribute
instance method %0 is being used on 'Class' which is not in the root class
sampler initializer has invalid %0 bits
zero field width in scanf format string is unused
no closing ']' for '%%[' in scanf format string
second argument to 'va_start' is not the last named parameter
second argument to 'va_arg' is of promotable type %0; this va_arg has undefined behavior because arguments will be promoted to %1
second argument to 'va_arg' is of non-POD type %0
second argument to 'va_arg' is of ARC ownership-qualified type %0
explicitly assigning value of variable of type %0 to itself%select{|; did you mean to assign to member %2?}1
explicitly assigning value of variable of type %0 to itself%select{|; did you mean to assign to member %2?}1
explicitly moving variable of type %0 to itself%select{|; did you mean to move to member %2?}1
property %0 requires method %1 to be defined - use @synthesize, @dynamic or provide a method implementation in this class implementation
property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category
%select{parameter|non-static data member}3 %0 %select{|of %1 }3shadows member inherited from type %2
shift count >= width of type
shifting a negative signed value is undefined
shift count is negative
signed shift result (%0) requires %1 bits to represent, but %2 only has %3 bits
signed shift result (%0) sets the sign bit of the shift expression's type (%1) and becomes negative
expression with side effects will be evaluated despite being used as an operand to 'typeid'
expression with side effects has no effect in an unevaluated context
signed bit-field %0 needs an extra bit to represent the largest positive enumerators of %1
sizeof on pointer operation will return size of %0 instead of %1
sizeof on array function parameter will return size of %0 instead of %1
'%0' call operates on objects of type %1 while the size is based on a different type %2
did you mean to %select{dereference the argument to 'sizeof' (and multiply it by the number of elements)|remove the addressof in the argument to 'sizeof' (and multiply it by the number of elements)|provide an explicit length}0?
argument to 'sizeof' in %0 call is the same pointer type %1 as the %select{destination|source}2; expected %3 or an explicit length
initializer order does not match the declaration order
variable %0 is %select{used|captured}1 uninitialized whenever %select{'%3' condition is %select{true|false}4|'%3' loop %select{is entered|exits because its condition is false}4|'%3' loop %select{condition is true|exits because its condition is false}4|switch %3 is taken|its declaration is reached|%3 is called}2
'%0' ignored on this declaration
array argument is too small; %select{contains %0 elements|is of size %0}2, callee requires at least %1
non-constant static local variable in inline function may be different in different files
'main' should not be declared static
static variable %0 is suspiciously used within its own initialization
multiple methods named %0 found
@selector expression formed with potentially direct selector %0
a %select{function|block}0 declaration without a prototype is deprecated %select{in all versions of C|}0
passing arguments to %select{a function|%1}0 without a prototype is deprecated in all versions of C and is not supported in C2x
adding %0 to a string pointer does not append to the string
adding %0 to a string does not append to the string
result of comparison against %select{a string literal|@encode}0 is unspecified (use an explicit string comparison function instead)
size argument in %0 call appears to be size of the source; expected the size of the destination
the value of the size argument in 'strncat' is too large, might lead to a buffer overflow
size argument in 'strncat' call appears to be size of the source
the value of the size argument to 'strncat' is wrong
%2 defined as %select{a struct|an interface|a class}0%select{| template}1 here but previously declared as %select{a struct|an interface|a class}3%select{| template}1; this is valid, but may result in linker errors under the Microsoft C++ ABI
%select{struct|interface|class}0%select{| template}1 %2 was previously declared as a %select{struct|interface|class}3%select{| template}1; this is valid, but may result in linker errors under the Microsoft C++ ABI
subtraction of pointers to type %0 of zero size has undefined behavior
array subscript is of type 'char'
%0 overrides a destructor but is not marked 'override'
%0 overrides a member function but is not marked 'override'
block could be declared with attribute 'noreturn'
%select{function|method}0 %1 could be declared with attribute 'noreturn'
field %0 can overwrite instance variable %1 with variable sized type %2 in superclass %3
'size' argument to bzero is '0'
%select{'size' argument to memset is '0'|setting buffer to a 'sizeof' expression}0; did you mean to transpose the last two arguments?
'swift_newtype' attribute may be put on a typedef only; attribute is ignored
template parameter of a function template with the 'sycl_kernel' attribute cannot be a non-type template parameter
function template with 'sycl_kernel' attribute must have a single parameter
'sycl_kernel' attribute only applies to a function template with at least two template parameters
function template with 'sycl_kernel' attribute must have a 'void' return type
the semantics of this intrinsic changed with GCC version 4.4 - the newer semantics are provided here
taking address of packed member %0 of class or structure %q1 may result in an unaligned pointer value
version list contains duplicate entries
mixing 'target_clones' specifier mechanisms is permitted for GCC compatibility; use a comma separated sequence of string literals, or a string literal containing a comma-separated list of versions
result of comparison of %select{constant %0|true|false}1 with %select{expression of type %2|boolean expression}3 is always %4
result of comparison of constant %0 with expression of type 'BOOL' is always %1, as the only well defined values for 'BOOL' are YES and NO
result of comparison of %select{%4|%1-bit %select{signed|unsigned}2 value}0 %3 %select{%1-bit %select{signed|unsigned}2 value|%4}0 is always %5
result of comparison %select{%3|%1}0 %2 %select{%1|%3}0 is always %4
overlapping comparisons always evaluate to %select{false|true}0
calling %0 is a violation of trusted computing base '%1'
non-type template argument with value '%0' converted to '%1' for unsigned template parameter of type %2
non-type template argument value '%0' truncated to '%1' for template parameter of type %2
exported templates are unsupported
dependent nested name specifier '%0' for friend template declaration is not supported; ignoring this friend declaration
dependent nested name specifier '%0' for friend class declaration is not supported; turning off access control for %1
extraneous template parameter list in template specialization
tentative array definition assumed to have one element
'this' pointer cannot be null in well-defined C++ code; pointer may be assumed to always convert to true
'this' pointer cannot be null in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0
%0 attribute requires arguments whose type is annotated with 'capability' attribute; type here is %1
%0 attribute can only be applied in a context annotated with 'capability' attribute
%0 only applies to pointer types; type here is %1
ignoring %0 attribute because its argument is invalid
%0 attribute without capability arguments refers to 'this', but %1 isn't annotated with 'capability' or 'scoped_lockable' attribute
%0 attribute without capability arguments can only be applied to non-static methods of a class
thread safety beta warning
thread safety verbose warning
%0 has a non-throwing exception specification but can still throw
underaligned exception object thrown
could not infer allocation type in call to '%0'
%select{alignment|size}0 of field %1 (%2 bits) does not match the %select{alignment|size}0 of the first field in transparent union; transparent_union attribute ignored
first field of a transparent union cannot have %select{floating point|vector}0 type %1; transparent_union attribute ignored
transparent_union attribute can only be applied to a union definition; attribute ignored
transparent union definition must contain at least one field; transparent_union attribute ignored
applying attribute %0 to a declaration is deprecated; apply it to the type instead
'%0' only applies to %select{function|pointer|Objective-C object or block pointer}1 types; type here is %2
specified %0 type tag requires a null pointer
argument type %0 doesn't match specified %1 type tag %select{that requires %3|}2
this type tag was not designed to be used with this function
'%0' qualifier on function type %1 has no effect
'%0' qualifier on function type %1 has unspecified behavior
ordered comparison of function pointers (%0 and %1)
'%0' qualifier on reference type %1 has no effect
vector operands do not have the same elements sizes (%0 and %1)
invalid application of '%select{typeof|typeof_unqual}0' to bit-field
unannotated fall-through between switch labels
unannotated fall-through between switch labels in partly-annotated function
implementing unavailable method
%0 may be unavailable because the receiver type is unknown
undeclared selector %0
undeclared selector %0; did you mean %1?
cannot find interface declaration for %0
cannot find interface declaration for %0; did you mean %1?
method definition for %0 not found
cannot find protocol definition for %0
inline function %q0 is not defined
%select{function|variable}0 %q1 has internal linkage but is not defined
reinterpret_cast from %0 to %1 has undefined behavior
%0 is only available on %1 %2 or newer
%0 is only available on %1 %2 or newer
__declspec attribute %0 is not supported
method %0 in protocol %1 not implemented
no method with selector %0 is implemented in this translation unit
block pointer variable %0 is %select{uninitialized|null}1 when captured by block
variable %0 is uninitialized when passed as a const reference argument here
variable %0 is uninitialized when used within its own initialization
reference %0 is not yet bound to a value when used within its own initialization
variable %0 is uninitialized when %select{used here|captured by block}1
unknown sanitizer '%0' ignored
releasing %0 '%1' that was not held
releasing %0 '%1' using %select{shared|exclusive}2 access, expected %select{shared|exclusive}3 access
%select{function|variable}0 %1 is not needed and will not be emitted
member function %0 is not needed and will not be emitted
'static' function %0 declared in header file should be declared 'static inline'
unqualified call to '%0'
code will never be executed
due to lvalue conversion of the controlling expression, association of type %0 will never be selected because it is %select{of array type|qualified}1
'break' will never be executed
default label in switch which covers all enumeration values
fallthrough annotation in unreachable code
loop will run at most once (loop increment never executed)
'return' will never be executed
%select{unsafe pointer operation|unsafe pointer arithmetic|unsafe buffer access|function introduces unsafe buffer manipulation}0
%0 is an %select{unsafe pointer used for buffer access|unsafe buffer that does not perform bounds checks}1
multiple unsequenced modifications to %0
unsequenced modification and access to %0
taking the absolute value of unsigned type %0 has no effect
result of comparison of %select{%3|unsigned expression}0 %2 %select{unsigned expression|%3}0 is always %4
assigning value of signed enum type %1 to unsigned bit-field %0; negative enumerators of enum %1 will be converted to positive values
result of comparison of %select{%3|char expression}0 %2 %select{char expression|%3}0 is always %4, since char is interpreted as unsigned
result of comparison of %select{%3|unsigned enum expression}0 %2 %select{unsigned enum expression|%3}0 is always %4
unsupported branch protection specification '%0'
sorry, lifetime extension of %select{temporary|backing array of initializer list}0 created by aggregate initialization using default member initializer is not supported; lifetime of %select{temporary|backing array}0 will end at the end of the full-expression
%select{unsupported|duplicate|unknown}0%select{| CPU| tune CPU}1 '%2' in the '%select{target|target_clones}3' attribute string; '%select{target|target_clones}3' attribute ignored
parameter %0 set but not used
variable %0 set but not used
ignoring return value of function declared with %0 attribute
left operand of comma operator has no effect
%select{equality|inequality|relational|three-way}0 comparison result unused
unused variable %0
ignoring temporary created by a constructor declared with %0 attribute
ignoring temporary created by a constructor declared with %0 attribute: %1
container access result unused - container access should not be used for side effects
unused exception parameter %0
expression result unused
unused function %0
unused label %0
lambda capture %0 is not %select{used|required to be captured for this use}1
unused %select{typedef|type alias}0 %1
unused member function %0
unused parameter %0
private field %0 is not used
ivar %0 which backs the property is not referenced in this property's accessor
property access result unused - getters should not be used for side effects
ignoring return value of function declared with %0 attribute
ignoring return value of function declared with %0 attribute: %1
'[[%select{nodiscard|gnu::warn_unused_result}0]]' attribute ignored when applied to a typedef; consider using '__attribute__((warn_unused_result))' or '[[clang::warn_unused_result]]' instead
unused %select{function|variable}0 template %1
unused variable %0
expression result unused; should this cast be to 'void'?
expression result unused; assign into a variable to force a volatile load
invalid invocation of method '%0' on object '%1' while it is in the '%2' state
invalid invocation of method '%0' on a temporary object while it is in the '%1' state
%0 was marked unused but was used
user-defined literal suffixes not starting with '_' are reserved%select{; no literal will invoke this operator|}0
using namespace directive in global context in header
passing %select{an object that undergoes default argument promotion|an object of reference type|a parameter declared with the 'register' keyword}0 to 'va_start' has undefined behavior
object of type %0 cannot be placed in read-only memory
%select{reading|writing}1 the value pointed to by %0 requires holding %select{any mutex|any mutex exclusively}1
%select{reading|writing}3 the value pointed to by %1 requires holding %0 %select{'%2'|'%2' exclusively}3
%select{reading|writing}3 the value pointed to by %1 requires holding %0 %select{'%2'|'%2' exclusively}3
instantiation of variable %q0 required here, but no definition is available
%select{reading|writing}1 variable %0 requires holding %select{any mutex|any mutex exclusively}1
%select{reading|writing}3 variable %1 requires holding %0 %select{'%2'|'%2' exclusively}3
%select{reading|writing}3 variable %1 requires holding %0 %select{'%2'|'%2' exclusively}3
field %0 with variable sized type %1 is not visible to subclasses and can conflict with their instance variables
variable%select{s| %1|s %1 and %2|s %1, %2, and %3|s %1, %2, %3, and %4}0 used in loop condition not modified in loop body
defaulted move assignment operator of %0 will move assign virtual base class %1 multiple times
Use of 'long' with '__vector' is deprecated
specifying vector types with the 'mode' attribute is deprecated; use the 'vector_size' attribute instead
variable length array used
cast to smaller integer type %1 from %0
cast to smaller integer type %1 from %0
dynamic exception specifications with types are currently ignored in wasm
weak identifier %0 never declared
an already-declared variable is made a weak_import declaration %0
this warning is no longer in use and will be removed in the next release
%0 has no out-of-line virtual method definitions; its vtable will be emitted in every translation unit
using %select{integer|floating point|complex}1 absolute value function %0 when argument is of %select{integer|floating point|complex}2 type
result of '%0' is %1; did you mean exponentiation?
result of '%0' is %1; did you mean '%2'?
result of '%0' is %1; did you mean '%2' (%3)?
zero as null pointer constant
%select{|empty }0%select{struct|union}1 has size 0 in C, %select{size 1|non-zero size}2 in C++
%select{|empty }0%select{struct|union}1 has size 0 in C, %select{size 1|non-zero size}2 in C++
%0 is only available on %1 %2 and %3 %4 or newer
the selected methods are already implemented
method %0 cannot be renamed because it overrides a method declared in a system framework
no %select{implementation file|@implementation declaration}0 for the selected %select{declaration|@interface}0 %1; please add one and run the refactoring action again
the selected code is not a part of a function's / method's body
the selected expression can't be extracted
the selected expression is too simple to extract
refactoring action can't be initiated without a selection
the provided selection does not overlap with the AST nodes of interest
there is no symbol at the given location
%0 is a builtin function that cannot be renamed
%0 is declared in a %1 file; rename can be initiated in a %1 file only
%0 cannot be renamed because it is declared in a system header
ActionCache cannot be initialized from '%0' on disk (check -fcas-path)
CAS cannot be initialized from '%0' on disk (check -fcas-path): %1
caching backend error: %0
caching failed because the output can be non-deterministic
CAS cannot load module with key '%0' from %1: %2
CAS cannot parse include-tree-id '%0'
CAS cannot parse root-id '%0' specified by -fcas-fs
CAS cannot parse root-id '%0' for module '%1'
Failed to establish connection with depscan daemon: %0
CAS-based dependency scan failed: %0
CAS filesystem cannot be initialized from root-id '%0' specified by -fcas-fs
CAS filesystem cannot set working directory to '%0' specified by -fcas-fs-working-directory
CAS missing expected include-tree '%0'
CAS missing expected root-id '%0'
failed to store to CAS: %0
clang-cache cannot find compiler binary %0
clang-cache failed to execute compiler: %0
missing compiler command for clang-cache
missing arguments for dep-scanning server mode
plugin CAS cannot be initialized from '%0': %1
compile job cache backend did not find output '%0' for key '%1' (output ID: '%2')
compile job cache hit for '%0' => '%1'
compile job cache miss for '%0'
compile job cache miss for '%0' (result not found: '%1')
compile job cache skipped for '%0'
compile job cache backend key query time: %0
compile job cache backend key update time: %0
compile job cache backend load artifacts time: %0
compile job cache backend store artifacts time: %0
compile job dependency scanning time: %0
caching disabled because %0
StringWithFormatlocalizedStringW__has_trivial_mo__has_nothrow_co__is_convertible__is_trivially_c__builtin_ptraut
null
_Builtin_stddef_ddef_max_align_t
eger-sign-changeimplicit-integerteger-truncationinteger-overflowsigned-integer-oonnull-attributereturns-nonnull-unsigned-integerzero
float-divide-by-at-cast-overflowfloat-cast-overfigned-shift-baseunsigned-shift-blicit-conversionimplicit-conversnonnull-attributshadow-call-stacr-divide-by-zerointeger-divide-bnullability-assinullability-return
cfi-unrelated-capointer-subtractkernel-hwaddresspointer-overflowcfi-derived-cast
branch-protection=
rect-jump-hazard+use-indirect-juxecution
+wavefrontsize64
ed-vector-memops+paired-vector-mpcrelative-memopmops
paired-vector-me206-instructionsisa-v206-instruc207-instructionsisa-v207-instrucisa-v30-instructisa-v31-instructquadword-atomics
exception-handlitrapping-fptointnontrapping-fptooint
-mutable-globals+general-regs-onavx512vp2intersect
ndirect-branchesretpoline-indirect-calls
al-thunk
retpoline-externgeneral-regs-onlcore_aes_pclmulqdq
_tsx
core_4th_gen_avxcore_5th_gen_avxcore_2_duo_sse4_1
atom_sse4_2_movbcore_2_duo_ssse3core_2nd_gen_avxcore_3rd_gen_avx_iii_no_xmm_regspentium_iii_no_x
tion-declaration-implicit-functii
C/C++ MSF 7.00
Microsoft C/C++ 
0000000000000000
()^$|*+?.[]\{}
----------------
z>()^$|+?[]\{}
use-external-namoverlay-relativeexternal-content
                                                                                
[0;30m
[0;31m
[0;32m
[0;33m
[0;34m
[0;35m
[0;36m
[0;37m
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;40m
[0;41m
[0;42m
[0;43m
[0;44m
[0;45m
[0;46m
[0;47m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
LLVM_DISABLE_SYMBOLIZATION
s/OS
/System/Cryptexerary/Frameworks//System/Library/
aV,m
F,C
Epr@
"jU7
#mGs/
@%uQO
i@)0T=
1E5L@+,T9
1@,F
M@,p
-AD 
@.$W)
@2)G
4`OdC
@6gB
7|RLt
D/G@7
;xKo
<+C\
<qG58
@=$Dm!
RNZ@>E
~@?3
@@EB
@@[F
9@@q
L@B4
@B@G
BvR+z
C@D?K@CLF
CXQV
@E#E
;@Hw
@IMB
J#QW(
JsMz
E(y@K
NaNn]
@OuL
@P8B
@R{C
TUG3
_8Mx
x@V+
0YEiL
(@Vk
W)SBF@W;
k@Xh
[WNt
^xHVa
\ G3
@\JC
@^BF
EF@^
@_9O
_EM&
XCFF
@cVC
@e_E
fuRJ|@f{G
@gfG
J)Gi
0@hv
XQS=
@lLJ
M{@mlK
oNFv
@oTKo
~@uo
RI\@v
uyKo
wlCh
@xnF
xzNs
z-B)
zWB2
zoB08
{AG*
@}tG
~GIV
@~MB
:@~c
Nm)@~
 EF
HFU-
Ob6@
O0Oj
T?]@
8D[
O-l@
G V@
iqQQr@
F)S@
WEA.@
uiJR
t)C?h@
qD{I@
`E>q
E1X@
AQE+
SEQ@
MzV@
9E?M@
SGK
DaI@
HB9<
B9<@
Ob'@
0GTo@
1HQU
0F7^
HQPb
71I8
GTo@
u9Ch
P]2@
PB08
yB08
"B08
o0QU
RAG3
RPOb
A#$C
A#bD
wA#~
A$rB
A')B
A(J#
NA1i
5xKo
7"Nq
74Nta
M0E'^A8
5A;uE
I~!AI
AVFI
JAVx
aGV)AY
D5KAZ
)QQaA[
hA^-
^CD"q
A_NE
,Ad*
e(T>
AePD[
PZBAe
)Ak:G
kFCE
Al^G
lAn*
Ao&G
rAvR
Ax[B
A},
MA}N
E@<A
U8SA
=B&QA
0I9(
xC]j
xXG}
3XO0
DqJo
0HDB
9F`K
)LRq
J_rA
OjLA
M;NA
NI8A
N!0A
9!D[A
5!QO
zAB-A
bB-A
DGK
^YA
;G!y
QM}bB
B6F
KQgB
VHVaB
$IHK
vB"a
B"yC
rB#}
E27B$
&aD"q
B&QB&
B'dE
,B+VG
,B+c
,B,'
,B-EG
,B-m
.PDd
!aDd
$aDb
=B4#
B4eC
B4}D
5'OgmB5E
B6+I
;xM{@B;~
=WFw.
G7qB>
CxO_
K0E+
A7F+
sPMz
PC?zBE
lBHf
q9Ch
BP9F
lBPQ
BQ5H
,BQS
RtJ8
BTBJu8
U1I-m
X"Od
X(LRqBX4P_r
7BXRE
VBXd
BXzE
BZ$D
B["H
B`EHm
[B`]
NB`u
Ba&I
BaxD
bcSB
b{D[Bb
cG"BcOB
*Bg
$BgV
`NI8
lBh7I
BhUP
oBhy
kBiC
mzI@2
uBo&
BoxF
;`I4$
y) Bye&
|xH<
O)E'
D:tB
EOCB
hU2
`@B#
y1G3
iC/S
0H"C
7B&Q
[D!1
H/8B
&C&QB
$iDb
m!BeB
F'B
XD.`
D.`B
IAuB
^Nh@
POh?B
;aGjb
FfB
CUE
GjbC
$IMkZC
21F/
PG9E
(C6;
P\bC
>C w
He3C 
7!E-
D.`C"
"2E-
"FF-
D.`C"
lC#6
#TE-
#^D.`C#hC
F?6C#
C$"C.a
lC$P
xC.a
%:D.`C%F
lC%v
JsMC%
JsMC%
&6F-
&pEQ
JsMC&
(@G;
*YI)
C*_I)
C*kI)
C*wI)
,(Cu
3C0#
kC;CF
<\G!y
kC>d
CBoD)
EcCl
CEoD
LhI;M
M'E<
'CRK
,CV6
29F/
kCY8
.CYrI
.CY~I
/C[%
C[1F 
}C[RF 
}C[p
lC]>
lC]\
lC]t
lC^ZC
^fC.aC^v
D.`C^
JsMC_
_XEQ
C_hD.`
C.aC_
oC``
lCa
`D.`
aNEQ
a|C.aCa
Cf3Q
VCfW
CzKCi
l,&ClH
l|"Cl
kCmnEA
CnBG:
CoeE
otF;
CpyF
ZiEw
VCsN
VCsZ
yCt>
KaD)
kCy2F
kCy>G
kCz7
C|]F
C|iL
EFC}?
C}WC
kC}{F
~*G~
$xGZ5
NJsMC
CUC
GLC
SD!C
`C.aC
FkmC
L{tC
lM~s
YFs{C
Iu9C
&3gg
,???3:
)L6Text-based Stubs Tool
C44NY44d44444w
#49>CKQV[`ej
!#%'
$ $$$
*YYY8YYYG
#Z,Z5?ZZHQ
,eeeee7HWu
X[^adgj
#5?L[n$8
(-27
0123456789ABCDEF
_gow
$V_gw]
zlib
-fdump-record-layouts
full
compiler
auto
marker
integer
none
undefined
ignore
strict
precise
address
local-exec
always
4096
medium
small
mips1
mips2
mips32r2
mips32r3
mips32r5
mips32r6
mips32
mips3
mips4
mips5
mips64r2
mips64r3
mips64r5
mips64r6
mips64
hexagonv55
hexagonv5
hexagonv60
hexagonv62
hexagonv65
hexagonv66
hexagonv67t
hexagonv67
hexagonv68
hexagonv69
no-invalid-source-encoding
invalid-source-encoding
everything
no-error
error
error=c++11-compat-deprecated-writable-strings
sha1
sha256
.5@
====)=.==2
=  =============$$?EEESVEE
/,/,/,/,/
/i.i./,/,/
/,/,/,/,/,/,/,/,/,/,/
'QQUo
    >>
 33+
)-1?
7AD"
R*1RRRR8?RRRRRRRRJ
#&),/2=
JPWZ
*** 
tttttttttEQEttt""p
zFz""zzzzMTzzzz)
-fxray-instrument
-fxray-instruction-threshold=
.BXp
BBBBB'3
[`ZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZ[ZZ[[ZZZ[Z[[[ZZZ[[[[[Z[[Z[[Z[[[[[Z[Z[[[Z[[[[ZZZ[[Z[Z[ZZZ[ZZ[ZZZZeZZZZZZZZZ ZZ[[[[ZZ[[[ ZZ[[ZZZZZ[[ZZ[[[[[[[[[[ZZ[ZZZZZZZZZZ[[Z[ZZ[ZZ[
1111^
11j
111w
111
111
111
115
111
111111111F
11N
111
11111
11
11
1111111111
11
11
111111111111111111111111111111111111111111
11111111111111111111111111111
11111
11111111
110
111e
111111
1111
11111q
1111
11111G
11
1111111111111
n!!!!
III0F
P,3F
 "$&(*\,.0^2`4b68d:<fh>@j~lnBDF
rHJt
zN|PRTVXZ
)=dUddr
/:KKKKB
#------)
dDOZ
&9.5
(+.:=@FFFFC
&-6?
 +69<BEGJMPV
*7Zj|
"&*.2
6:>BF
NRVZ^bfjnr
vz~


 ) J j | 
!!!D!V!p!
!2"V"
# #:#T#n#
$/$I$c$
%"%A%[%u%
&'&F&e&
'>'e'
(7(Q(q(
( )A)b)
*6*S*p*
+1+N+d+
,,,C,g,},
!!!!
!!!!
!!!!
!!!!
!!!!!!!!!!!!!!!!
 
*.<@!$6
#####
37;?
"048<CHLPTX\
 #&)
"%(+.147:=@HKNQTWZ]`
cfilorux{~
369<?
#49>CKQV[`ej
!#%'
"'+/8<@G
V]afjnrw
-;DP
 *+9**D*****dw
"&8J
6_
 D ~ 
!7!P!u!
! "E"j"
")#N#z#
++4++++
"048<CHLPTX\
!#%'
"048<CHLPTX\
!#%'
"048<BGKOSW[
S`mz
VVO
VV2
VVV
VVV
VV
====
========
=========
========================7
========================================
oooooottttttyyyyyy~~~~~~
!#1LW]ciou{
~~;;~~;;
"-4>
"-4>
"-4>
"-4>{aajj
aajj
~~~~~;;;~~~~~;;;
s)Vs)V
s)Vs)V
"-4>
"-4>
"-4>
"-4>{~;~;~;~;
>)V>)V
>)V>)V
{{{{{{{{{{{{
Y[]`c]`c
Y[]`c
uuuwwwyyysss
Y[]`c]`c
Y[]`cE
++++
.
;;;e;""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
,""""""""""""N"""""""1"N'''''"""""""""""6""""";""
"N"""""""""
"""""C"""""
"""""""""R"""""""""N""""""""""""""""""""""N""""
...-..--.--......
---..----------
::;;;;;;:;:;;:;::::
::::;;::::::::::
''''
''''''
'''''
OOOOOOO
 "$O&YOOO(
O.OOOO0O24O68:<O>@OOOBOODOOOOOO
OOOFOOOKM
"048<CGKOSW[
!#%'
!%),/37;?
GKOSW[_bfjnr
&1FQ
Z%%%9%
ddd)
:K<KKKKKJKCEKKKI
ffffff--
"048<CHLPTX\
!#%'
asrl
lsll
sqrshr
sqrshrl
sqrshrl_sat48
sqshl
sqshll
srshr
srshrl
uqrshl
uqrshll
uqrshll_sat48
uqshl
uqshll
urshr
urshrl
vabavq_p
vabavq_p_s16
vabavq_p_s32
vabavq_p_s8
vabavq_p_u16
vabavq_p_u32
vabavq_p_u8
vabavq
vabavq_s16
vabavq_s32
vabavq_s8
vabavq_u16
vabavq_u32
vabavq_u8
vabdq
vabdq_f16
vabdq_f32
vabdq_m
vabdq_m_f16
vabdq_m_f32
vabdq_m_s16
vabdq_m_s32
vabdq_m_s8
vabdq_m_u16
vabdq_m_u32
vabdq_m_u8
vabdq_s16
vabdq_s32
vabdq_s8
vabdq_u16
vabdq_u32
vabdq_u8
vabdq_x
vabdq_x_f16
vabdq_x_f32
vabdq_x_s16
vabdq_x_s32
vabdq_x_s8
vabdq_x_u16
vabdq_x_u32
vabdq_x_u8
vabsq
vabsq_f16
vabsq_f32
vabsq_m
vabsq_m_f16
vabsq_m_f32
vabsq_m_s16
vabsq_m_s32
vabsq_m_s8
vabsq_s16
vabsq_s32
vabsq_s8
vabsq_x
vabsq_x_f16
vabsq_x_f32
vabsq_x_s16
vabsq_x_s32
vabsq_x_s8
vadciq_m
vadciq_m_s32
vadciq_m_u32
vadciq
vadciq_s32
vadciq_u32
vadcq_m
vadcq_m_s32
vadcq_m_u32
vadcq
vadcq_s32
vadcq_u32
vaddlvaq_p
vaddlvaq_p_s32
vaddlvaq_p_u32
vaddlvaq
vaddlvaq_s32
vaddlvaq_u32
vaddlvq_p
vaddlvq_p_s32
vaddlvq_p_u32
vaddlvq
vaddlvq_s32
vaddlvq_u32
vaddq
vaddq_f16
vaddq_f32
vaddq_m
vaddq_m_f16
vaddq_m_f32
vaddq_m_n_f16
vaddq_m_n_f32
vaddq_m_n_s16
vaddq_m_n_s32
vaddq_m_n_s8
vaddq_m_n_u16
vaddq_m_n_u32
vaddq_m_n_u8
vaddq_m_s16
vaddq_m_s32
vaddq_m_s8
vaddq_m_u16
vaddq_m_u32
vaddq_m_u8
vaddq_n_f16
vaddq_n_f32
vaddq_n_s16
vaddq_n_s32
vaddq_n_s8
vaddq_n_u16
vaddq_n_u32
vaddq_n_u8
vaddq_s16
vaddq_s32
vaddq_s8
vaddq_u16
vaddq_u32
vaddq_u8
vaddq_x
vaddq_x_f16
vaddq_x_f32
vaddq_x_n_f16
vaddq_x_n_f32
vaddq_x_n_s16
vaddq_x_n_s32
vaddq_x_n_s8
vaddq_x_n_u16
vaddq_x_n_u32
vaddq_x_n_u8
vaddq_x_s16
vaddq_x_s32
vaddq_x_s8
vaddq_x_u16
vaddq_x_u32
vaddq_x_u8
vaddvaq_p
vaddvaq_p_s16
vaddvaq_p_s32
vaddvaq_p_s8
vaddvaq_p_u16
vaddvaq_p_u32
vaddvaq_p_u8
vaddvaq
vaddvaq_s16
vaddvaq_s32
vaddvaq_s8
vaddvaq_u16
vaddvaq_u32
vaddvaq_u8
vaddvq_p
vaddvq_p_s16
vaddvq_p_s32
vaddvq_p_s8
vaddvq_p_u16
vaddvq_p_u32
vaddvq_p_u8
vaddvq
vaddvq_s16
vaddvq_s32
vaddvq_s8
vaddvq_u16
vaddvq_u32
vaddvq_u8
vandq
vandq_f16
vandq_f32
vandq_m
vandq_m_f16
vandq_m_f32
vandq_m_s16
vandq_m_s32
vandq_m_s8
vandq_m_u16
vandq_m_u32
vandq_m_u8
vandq_s16
vandq_s32
vandq_s8
vandq_u16
vandq_u32
vandq_u8
vandq_x
vandq_x_f16
vandq_x_f32
vandq_x_s16
vandq_x_s32
vandq_x_s8
vandq_x_u16
vandq_x_u32
vandq_x_u8
vbicq
vbicq_f16
vbicq_f32
vbicq_m
vbicq_m_f16
vbicq_m_f32
vbicq_m_n
vbicq_m_n_s16
vbicq_m_n_s32
vbicq_m_n_u16
vbicq_m_n_u32
vbicq_m_s16
vbicq_m_s32
vbicq_m_s8
vbicq_m_u16
vbicq_m_u32
vbicq_m_u8
vbicq_n_s16
vbicq_n_s32
vbicq_n_u16
vbicq_n_u32
vbicq_s16
vbicq_s32
vbicq_s8
vbicq_u16
vbicq_u32
vbicq_u8
vbicq_x
vbicq_x_f16
vbicq_x_f32
vbicq_x_s16
vbicq_x_s32
vbicq_x_s8
vbicq_x_u16
vbicq_x_u32
vbicq_x_u8
vbrsrq_m
vbrsrq_m_n_f16
vbrsrq_m_n_f32
vbrsrq_m_n_s16
vbrsrq_m_n_s32
vbrsrq_m_n_s8
vbrsrq_m_n_u16
vbrsrq_m_n_u32
vbrsrq_m_n_u8
vbrsrq
vbrsrq_n_f16
vbrsrq_n_f32
vbrsrq_n_s16
vbrsrq_n_s32
vbrsrq_n_s8
vbrsrq_n_u16
vbrsrq_n_u32
vbrsrq_n_u8
vbrsrq_x
vbrsrq_x_n_f16
vbrsrq_x_n_f32
vbrsrq_x_n_s16
vbrsrq_x_n_s32
vbrsrq_x_n_s8
vbrsrq_x_n_u16
vbrsrq_x_n_u32
vbrsrq_x_n_u8
vcaddq_rot270
vcaddq_rot270_f16
vcaddq_rot270_f32
vcaddq_rot270_m
vcaddq_rot270_m_f16
vcaddq_rot270_m_f32
vcaddq_rot270_m_s16
vcaddq_rot270_m_s32
vcaddq_rot270_m_s8
vcaddq_rot270_m_u16
vcaddq_rot270_m_u32
vcaddq_rot270_m_u8
vcaddq_rot270_s16
vcaddq_rot270_s32
vcaddq_rot270_s8
vcaddq_rot270_u16
vcaddq_rot270_u32
vcaddq_rot270_u8
vcaddq_rot270_x
vcaddq_rot270_x_f16
vcaddq_rot270_x_f32
vcaddq_rot270_x_s16
vcaddq_rot270_x_s32
vcaddq_rot270_x_s8
vcaddq_rot270_x_u16
vcaddq_rot270_x_u32
vcaddq_rot270_x_u8
vcaddq_rot90
vcaddq_rot90_f16
vcaddq_rot90_f32
vcaddq_rot90_m
vcaddq_rot90_m_f16
vcaddq_rot90_m_f32
vcaddq_rot90_m_s16
vcaddq_rot90_m_s32
vcaddq_rot90_m_s8
vcaddq_rot90_m_u16
vcaddq_rot90_m_u32
vcaddq_rot90_m_u8
vcaddq_rot90_s16
vcaddq_rot90_s32
vcaddq_rot90_s8
vcaddq_rot90_u16
vcaddq_rot90_u32
vcaddq_rot90_u8
vcaddq_rot90_x
vcaddq_rot90_x_f16
vcaddq_rot90_x_f32
vcaddq_rot90_x_s16
vcaddq_rot90_x_s32
vcaddq_rot90_x_s8
vcaddq_rot90_x_u16
vcaddq_rot90_x_u32
vcaddq_rot90_x_u8
vclsq_m
vclsq_m_s16
vclsq_m_s32
vclsq_m_s8
vclsq
vclsq_s16
vclsq_s32
vclsq_s8
vclsq_x
vclsq_x_s16
vclsq_x_s32
vclsq_x_s8
vclzq_m
vclzq_m_s16
vclzq_m_s32
vclzq_m_s8
vclzq_m_u16
vclzq_m_u32
vclzq_m_u8
vclzq
vclzq_s16
vclzq_s32
vclzq_s8
vclzq_u16
vclzq_u32
vclzq_u8
vclzq_x
vclzq_x_s16
vclzq_x_s32
vclzq_x_s8
vclzq_x_u16
vclzq_x_u32
vclzq_x_u8
vcmlaq
vcmlaq_f16
vcmlaq_f32
vcmlaq_m
vcmlaq_m_f16
vcmlaq_m_f32
vcmlaq_rot180
vcmlaq_rot180_f16
vcmlaq_rot180_f32
vcmlaq_rot180_m
vcmlaq_rot180_m_f16
vcmlaq_rot180_m_f32
vcmlaq_rot270
vcmlaq_rot270_f16
vcmlaq_rot270_f32
vcmlaq_rot270_m
vcmlaq_rot270_m_f16
vcmlaq_rot270_m_f32
vcmlaq_rot90
vcmlaq_rot90_f16
vcmlaq_rot90_f32
vcmlaq_rot90_m
vcmlaq_rot90_m_f16
vcmlaq_rot90_m_f32
vcmpcsq_m
vcmpcsq_m_n_u16
vcmpcsq_m_n_u32
vcmpcsq_m_n_u8
vcmpcsq_m_u16
vcmpcsq_m_u32
vcmpcsq_m_u8
vcmpcsq
vcmpcsq_n_u16
vcmpcsq_n_u32
vcmpcsq_n_u8
vcmpcsq_u16
vcmpcsq_u32
vcmpcsq_u8
vcmpeqq
vcmpeqq_f16
vcmpeqq_f32
vcmpeqq_m
vcmpeqq_m_f16
vcmpeqq_m_f32
vcmpeqq_m_n_f16
vcmpeqq_m_n_f32
vcmpeqq_m_n_s16
vcmpeqq_m_n_s32
vcmpeqq_m_n_s8
vcmpeqq_m_n_u16
vcmpeqq_m_n_u32
vcmpeqq_m_n_u8
vcmpeqq_m_s16
vcmpeqq_m_s32
vcmpeqq_m_s8
vcmpeqq_m_u16
vcmpeqq_m_u32
vcmpeqq_m_u8
vcmpeqq_n_f16
vcmpeqq_n_f32
vcmpeqq_n_s16
vcmpeqq_n_s32
vcmpeqq_n_s8
vcmpeqq_n_u16
vcmpeqq_n_u32
vcmpeqq_n_u8
vcmpeqq_s16
vcmpeqq_s32
vcmpeqq_s8
vcmpeqq_u16
vcmpeqq_u32
vcmpeqq_u8
vcmpgeq
vcmpgeq_f16
vcmpgeq_f32
vcmpgeq_m
vcmpgeq_m_f16
vcmpgeq_m_f32
vcmpgeq_m_n_f16
vcmpgeq_m_n_f32
vcmpgeq_m_n_s16
vcmpgeq_m_n_s32
vcmpgeq_m_n_s8
vcmpgeq_m_s16
vcmpgeq_m_s32
vcmpgeq_m_s8
vcmpgeq_n_f16
vcmpgeq_n_f32
vcmpgeq_n_s16
vcmpgeq_n_s32
vcmpgeq_n_s8
vcmpgeq_s16
vcmpgeq_s32
vcmpgeq_s8
vcmpgtq
vcmpgtq_f16
vcmpgtq_f32
vcmpgtq_m
vcmpgtq_m_f16
vcmpgtq_m_f32
vcmpgtq_m_n_f16
vcmpgtq_m_n_f32
vcmpgtq_m_n_s16
vcmpgtq_m_n_s32
vcmpgtq_m_n_s8
vcmpgtq_m_s16
vcmpgtq_m_s32
vcmpgtq_m_s8
vcmpgtq_n_f16
vcmpgtq_n_f32
vcmpgtq_n_s16
vcmpgtq_n_s32
vcmpgtq_n_s8
vcmpgtq_s16
vcmpgtq_s32
vcmpgtq_s8
vcmphiq_m
vcmphiq_m_n_u16
vcmphiq_m_n_u32
vcmphiq_m_n_u8
vcmphiq_m_u16
vcmphiq_m_u32
vcmphiq_m_u8
vcmphiq
vcmphiq_n_u16
vcmphiq_n_u32
vcmphiq_n_u8
vcmphiq_u16
vcmphiq_u32
vcmphiq_u8
vcmpleq
vcmpleq_f16
vcmpleq_f32
vcmpleq_m
vcmpleq_m_f16
vcmpleq_m_f32
vcmpleq_m_n_f16
vcmpleq_m_n_f32
vcmpleq_m_n_s16
vcmpleq_m_n_s32
vcmpleq_m_n_s8
vcmpleq_m_s16
vcmpleq_m_s32
vcmpleq_m_s8
vcmpleq_n_f16
vcmpleq_n_f32
vcmpleq_n_s16
vcmpleq_n_s32
vcmpleq_n_s8
vcmpleq_s16
vcmpleq_s32
vcmpleq_s8
vcmpltq
vcmpltq_f16
vcmpltq_f32
vcmpltq_m
vcmpltq_m_f16
vcmpltq_m_f32
vcmpltq_m_n_f16
vcmpltq_m_n_f32
vcmpltq_m_n_s16
vcmpltq_m_n_s32
vcmpltq_m_n_s8
vcmpltq_m_s16
vcmpltq_m_s32
vcmpltq_m_s8
vcmpltq_n_f16
vcmpltq_n_f32
vcmpltq_n_s16
vcmpltq_n_s32
vcmpltq_n_s8
vcmpltq_s16
vcmpltq_s32
vcmpltq_s8
vcmpneq
vcmpneq_f16
vcmpneq_f32
vcmpneq_m
vcmpneq_m_f16
vcmpneq_m_f32
vcmpneq_m_n_f16
vcmpneq_m_n_f32
vcmpneq_m_n_s16
vcmpneq_m_n_s32
vcmpneq_m_n_s8
vcmpneq_m_n_u16
vcmpneq_m_n_u32
vcmpneq_m_n_u8
vcmpneq_m_s16
vcmpneq_m_s32
vcmpneq_m_s8
vcmpneq_m_u16
vcmpneq_m_u32
vcmpneq_m_u8
vcmpneq_n_f16
vcmpneq_n_f32
vcmpneq_n_s16
vcmpneq_n_s32
vcmpneq_n_s8
vcmpneq_n_u16
vcmpneq_n_u32
vcmpneq_n_u8
vcmpneq_s16
vcmpneq_s32
vcmpneq_s8
vcmpneq_u16
vcmpneq_u32
vcmpneq_u8
vcmulq
vcmulq_f16
vcmulq_f32
vcmulq_m
vcmulq_m_f16
vcmulq_m_f32
vcmulq_rot180
vcmulq_rot180_f16
vcmulq_rot180_f32
vcmulq_rot180_m
vcmulq_rot180_m_f16
vcmulq_rot180_m_f32
vcmulq_rot180_x
vcmulq_rot180_x_f16
vcmulq_rot180_x_f32
vcmulq_rot270
vcmulq_rot270_f16
vcmulq_rot270_f32
vcmulq_rot270_m
vcmulq_rot270_m_f16
vcmulq_rot270_m_f32
vcmulq_rot270_x
vcmulq_rot270_x_f16
vcmulq_rot270_x_f32
vcmulq_rot90
vcmulq_rot90_f16
vcmulq_rot90_f32
vcmulq_rot90_m
vcmulq_rot90_m_f16
vcmulq_rot90_m_f32
vcmulq_rot90_x
vcmulq_rot90_x_f16
vcmulq_rot90_x_f32
vcmulq_x
vcmulq_x_f16
vcmulq_x_f32
vcreateq_f16
vcreateq_f32
vcreateq_s16
vcreateq_s32
vcreateq_s64
vcreateq_s8
vcreateq_u16
vcreateq_u32
vcreateq_u64
vcreateq_u8
vctp16q
vctp16q_m
vctp32q
vctp32q_m
vctp64q
vctp64q_m
vctp8q
vctp8q_m
vcvtaq_m
vcvtaq_m_s16_f16
vcvtaq_m_s32_f32
vcvtaq_m_u16_f16
vcvtaq_m_u32_f32
vcvtaq_s16_f16
vcvtaq_s32_f32
vcvtaq_u16_f16
vcvtaq_u32_f32
vcvtaq_x_s16_f16
vcvtaq_x_s32_f32
vcvtaq_x_u16_f16
vcvtaq_x_u32_f32
vcvtbq_f16_f32
vcvtbq_f32_f16
vcvtbq_m_f16_f32
vcvtbq_m_f32_f16
vcvtbq_x_f32_f16
vcvtmq_m
vcvtmq_m_s16_f16
vcvtmq_m_s32_f32
vcvtmq_m_u16_f16
vcvtmq_m_u32_f32
vcvtmq_s16_f16
vcvtmq_s32_f32
vcvtmq_u16_f16
vcvtmq_u32_f32
vcvtmq_x_s16_f16
vcvtmq_x_s32_f32
vcvtmq_x_u16_f16
vcvtmq_x_u32_f32
vcvtnq_m
vcvtnq_m_s16_f16
vcvtnq_m_s32_f32
vcvtnq_m_u16_f16
vcvtnq_m_u32_f32
vcvtnq_s16_f16
vcvtnq_s32_f32
vcvtnq_u16_f16
vcvtnq_u32_f32
vcvtnq_x_s16_f16
vcvtnq_x_s32_f32
vcvtnq_x_u16_f16
vcvtnq_x_u32_f32
vcvtpq_m
vcvtpq_m_s16_f16
vcvtpq_m_s32_f32
vcvtpq_m_u16_f16
vcvtpq_m_u32_f32
vcvtpq_s16_f16
vcvtpq_s32_f32
vcvtpq_u16_f16
vcvtpq_u32_f32
vcvtpq_x_s16_f16
vcvtpq_x_s32_f32
vcvtpq_x_u16_f16
vcvtpq_x_u32_f32
vcvtq
vcvtq_f16_s16
vcvtq_f16_u16
vcvtq_f32_s32
vcvtq_f32_u32
vcvtq_m
vcvtq_m_f16_s16
vcvtq_m_f16_u16
vcvtq_m_f32_s32
vcvtq_m_f32_u32
vcvtq_m_n
vcvtq_m_n_f16_s16
vcvtq_m_n_f16_u16
vcvtq_m_n_f32_s32
vcvtq_m_n_f32_u32
vcvtq_m_n_s16_f16
vcvtq_m_n_s32_f32
vcvtq_m_n_u16_f16
vcvtq_m_n_u32_f32
vcvtq_m_s16_f16
vcvtq_m_s32_f32
vcvtq_m_u16_f16
vcvtq_m_u32_f32
vcvtq_n
vcvtq_n_f16_s16
vcvtq_n_f16_u16
vcvtq_n_f32_s32
vcvtq_n_f32_u32
vcvtq_n_s16_f16
vcvtq_n_s32_f32
vcvtq_n_u16_f16
vcvtq_n_u32_f32
vcvtq_s16_f16
vcvtq_s32_f32
vcvtq_u16_f16
vcvtq_u32_f32
vcvtq_x
vcvtq_x_f16_s16
vcvtq_x_f16_u16
vcvtq_x_f32_s32
vcvtq_x_f32_u32
vcvtq_x_n
vcvtq_x_n_f16_s16
vcvtq_x_n_f16_u16
vcvtq_x_n_f32_s32
vcvtq_x_n_f32_u32
vcvtq_x_n_s16_f16
vcvtq_x_n_s32_f32
vcvtq_x_n_u16_f16
vcvtq_x_n_u32_f32
vcvtq_x_s16_f16
vcvtq_x_s32_f32
vcvtq_x_u16_f16
vcvtq_x_u32_f32
vcvttq_f16_f32
vcvttq_f32_f16
vcvttq_m_f16_f32
vcvttq_m_f32_f16
vcvttq_x_f32_f16
vddupq_m
vddupq_m_n_u16
vddupq_m_n_u32
vddupq_m_n_u8
vddupq_m_wb_u16
vddupq_m_wb_u32
vddupq_m_wb_u8
vddupq_u16
vddupq_n_u16
vddupq_u32
vddupq_n_u32
vddupq_u8
vddupq_n_u8
vddupq_wb_u16
vddupq_wb_u32
vddupq_wb_u8
vddupq_x_u16
vddupq_x_n_u16
vddupq_x_u32
vddupq_x_n_u32
vddupq_x_u8
vddupq_x_n_u8
vddupq_x_wb_u16
vddupq_x_wb_u32
vddupq_x_wb_u8
vdupq_m
vdupq_m_n_f16
vdupq_m_n_f32
vdupq_m_n_s16
vdupq_m_n_s32
vdupq_m_n_s8
vdupq_m_n_u16
vdupq_m_n_u32
vdupq_m_n_u8
vdupq_n_f16
vdupq_n_f32
vdupq_n_s16
vdupq_n_s32
vdupq_n_s8
vdupq_n_u16
vdupq_n_u32
vdupq_n_u8
vdupq_x_n_f16
vdupq_x_n_f32
vdupq_x_n_s16
vdupq_x_n_s32
vdupq_x_n_s8
vdupq_x_n_u16
vdupq_x_n_u32
vdupq_x_n_u8
vdwdupq_m
vdwdupq_m_n_u16
vdwdupq_m_n_u32
vdwdupq_m_n_u8
vdwdupq_m_wb_u16
vdwdupq_m_wb_u32
vdwdupq_m_wb_u8
vdwdupq_u16
vdwdupq_n_u16
vdwdupq_u32
vdwdupq_n_u32
vdwdupq_u8
vdwdupq_n_u8
vdwdupq_wb_u16
vdwdupq_wb_u32
vdwdupq_wb_u8
vdwdupq_x_u16
vdwdupq_x_n_u16
vdwdupq_x_u32
vdwdupq_x_n_u32
vdwdupq_x_u8
vdwdupq_x_n_u8
vdwdupq_x_wb_u16
vdwdupq_x_wb_u32
vdwdupq_x_wb_u8
veorq
veorq_f16
veorq_f32
veorq_m
veorq_m_f16
veorq_m_f32
veorq_m_s16
veorq_m_s32
veorq_m_s8
veorq_m_u16
veorq_m_u32
veorq_m_u8
veorq_s16
veorq_s32
veorq_s8
veorq_u16
veorq_u32
veorq_u8
veorq_x
veorq_x_f16
veorq_x_f32
veorq_x_s16
veorq_x_s32
veorq_x_s8
veorq_x_u16
veorq_x_u32
veorq_x_u8
vfmaq
vfmaq_f16
vfmaq_f32
vfmaq_m
vfmaq_m_f16
vfmaq_m_f32
vfmaq_m_n_f16
vfmaq_m_n_f32
vfmaq_n_f16
vfmaq_n_f32
vfmasq_m
vfmasq_m_n_f16
vfmasq_m_n_f32
vfmasq
vfmasq_n_f16
vfmasq_n_f32
vfmsq
vfmsq_f16
vfmsq_f32
vfmsq_m
vfmsq_m_f16
vfmsq_m_f32
vgetq_lane
vgetq_lane_f16
vgetq_lane_f32
vgetq_lane_s16
vgetq_lane_s32
vgetq_lane_s64
vgetq_lane_s8
vgetq_lane_u16
vgetq_lane_u32
vgetq_lane_u64
vgetq_lane_u8
vhaddq_m
vhaddq_m_n_s16
vhaddq_m_n_s32
vhaddq_m_n_s8
vhaddq_m_n_u16
vhaddq_m_n_u32
vhaddq_m_n_u8
vhaddq_m_s16
vhaddq_m_s32
vhaddq_m_s8
vhaddq_m_u16
vhaddq_m_u32
vhaddq_m_u8
vhaddq
vhaddq_n_s16
vhaddq_n_s32
vhaddq_n_s8
vhaddq_n_u16
vhaddq_n_u32
vhaddq_n_u8
vhaddq_s16
vhaddq_s32
vhaddq_s8
vhaddq_u16
vhaddq_u32
vhaddq_u8
vhaddq_x
vhaddq_x_n_s16
vhaddq_x_n_s32
vhaddq_x_n_s8
vhaddq_x_n_u16
vhaddq_x_n_u32
vhaddq_x_n_u8
vhaddq_x_s16
vhaddq_x_s32
vhaddq_x_s8
vhaddq_x_u16
vhaddq_x_u32
vhaddq_x_u8
vhcaddq_rot270_m
vhcaddq_rot270_m_s16
vhcaddq_rot270_m_s32
vhcaddq_rot270_m_s8
vhcaddq_rot270
vhcaddq_rot270_s16
vhcaddq_rot270_s32
vhcaddq_rot270_s8
vhcaddq_rot270_x
vhcaddq_rot270_x_s16
vhcaddq_rot270_x_s32
vhcaddq_rot270_x_s8
vhcaddq_rot90_m
vhcaddq_rot90_m_s16
vhcaddq_rot90_m_s32
vhcaddq_rot90_m_s8
vhcaddq_rot90
vhcaddq_rot90_s16
vhcaddq_rot90_s32
vhcaddq_rot90_s8
vhcaddq_rot90_x
vhcaddq_rot90_x_s16
vhcaddq_rot90_x_s32
vhcaddq_rot90_x_s8
vhsubq_m
vhsubq_m_n_s16
vhsubq_m_n_s32
vhsubq_m_n_s8
vhsubq_m_n_u16
vhsubq_m_n_u32
vhsubq_m_n_u8
vhsubq_m_s16
vhsubq_m_s32
vhsubq_m_s8
vhsubq_m_u16
vhsubq_m_u32
vhsubq_m_u8
vhsubq
vhsubq_n_s16
vhsubq_n_s32
vhsubq_n_s8
vhsubq_n_u16
vhsubq_n_u32
vhsubq_n_u8
vhsubq_s16
vhsubq_s32
vhsubq_s8
vhsubq_u16
vhsubq_u32
vhsubq_u8
vhsubq_x
vhsubq_x_n_s16
vhsubq_x_n_s32
vhsubq_x_n_s8
vhsubq_x_n_u16
vhsubq_x_n_u32
vhsubq_x_n_u8
vhsubq_x_s16
vhsubq_x_s32
vhsubq_x_s8
vhsubq_x_u16
vhsubq_x_u32
vhsubq_x_u8
vidupq_m
vidupq_m_n_u16
vidupq_m_n_u32
vidupq_m_n_u8
vidupq_m_wb_u16
vidupq_m_wb_u32
vidupq_m_wb_u8
vidupq_u16
vidupq_n_u16
vidupq_u32
vidupq_n_u32
vidupq_u8
vidupq_n_u8
vidupq_wb_u16
vidupq_wb_u32
vidupq_wb_u8
vidupq_x_u16
vidupq_x_n_u16
vidupq_x_u32
vidupq_x_n_u32
vidupq_x_u8
vidupq_x_n_u8
vidupq_x_wb_u16
vidupq_x_wb_u32
vidupq_x_wb_u8
viwdupq_m
viwdupq_m_n_u16
viwdupq_m_n_u32
viwdupq_m_n_u8
viwdupq_m_wb_u16
viwdupq_m_wb_u32
viwdupq_m_wb_u8
viwdupq_u16
viwdupq_n_u16
viwdupq_u32
viwdupq_n_u32
viwdupq_u8
viwdupq_n_u8
viwdupq_wb_u16
viwdupq_wb_u32
viwdupq_wb_u8
viwdupq_x_u16
viwdupq_x_n_u16
viwdupq_x_u32
viwdupq_x_n_u32
viwdupq_x_u8
viwdupq_x_n_u8
viwdupq_x_wb_u16
viwdupq_x_wb_u32
viwdupq_x_wb_u8
vld1q
vld1q_f16
vld1q_f32
vld1q_s16
vld1q_s32
vld1q_s8
vld1q_u16
vld1q_u32
vld1q_u8
vld1q_z
vld1q_z_f16
vld1q_z_f32
vld1q_z_s16
vld1q_z_s32
vld1q_z_s8
vld1q_z_u16
vld1q_z_u32
vld1q_z_u8
vld2q
vld2q_f16
vld2q_f32
vld2q_s16
vld2q_s32
vld2q_s8
vld2q_u16
vld2q_u32
vld2q_u8
vld4q
vld4q_f16
vld4q_f32
vld4q_s16
vld4q_s32
vld4q_s8
vld4q_u16
vld4q_u32
vld4q_u8
vldrbq_gather_offset
vldrbq_gather_offset_s16
vldrbq_gather_offset_s32
vldrbq_gather_offset_s8
vldrbq_gather_offset_u16
vldrbq_gather_offset_u32
vldrbq_gather_offset_u8
vldrbq_gather_offset_z
vldrbq_gather_offset_z_s16
vldrbq_gather_offset_z_s32
vldrbq_gather_offset_z_s8
vldrbq_gather_offset_z_u16
vldrbq_gather_offset_z_u32
vldrbq_gather_offset_z_u8
vldrbq_s16
vldrbq_s32
vldrbq_s8
vldrbq_u16
vldrbq_u32
vldrbq_u8
vldrbq_z_s16
vldrbq_z_s32
vldrbq_z_s8
vldrbq_z_u16
vldrbq_z_u32
vldrbq_z_u8
vldrdq_gather_base_s64
vldrdq_gather_base_u64
vldrdq_gather_base_wb_s64
vldrdq_gather_base_wb_u64
vldrdq_gather_base_wb_z_s64
vldrdq_gather_base_wb_z_u64
vldrdq_gather_base_z_s64
vldrdq_gather_base_z_u64
vldrdq_gather_offset
vldrdq_gather_offset_s64
vldrdq_gather_offset_u64
vldrdq_gather_offset_z
vldrdq_gather_offset_z_s64
vldrdq_gather_offset_z_u64
vldrdq_gather_shifted_offset
vldrdq_gather_shifted_offset_s64
vldrdq_gather_shifted_offset_u64
vldrdq_gather_shifted_offset_z
vldrdq_gather_shifted_offset_z_s64
vldrdq_gather_shifted_offset_z_u64
vldrhq_f16
vldrhq_gather_offset
vldrhq_gather_offset_f16
vldrhq_gather_offset_s16
vldrhq_gather_offset_s32
vldrhq_gather_offset_u16
vldrhq_gather_offset_u32
vldrhq_gather_offset_z
vldrhq_gather_offset_z_f16
vldrhq_gather_offset_z_s16
vldrhq_gather_offset_z_s32
vldrhq_gather_offset_z_u16
vldrhq_gather_offset_z_u32
vldrhq_gather_shifted_offset
vldrhq_gather_shifted_offset_f16
vldrhq_gather_shifted_offset_s16
vldrhq_gather_shifted_offset_s32
vldrhq_gather_shifted_offset_u16
vldrhq_gather_shifted_offset_u32
vldrhq_gather_shifted_offset_z
vldrhq_gather_shifted_offset_z_f16
vldrhq_gather_shifted_offset_z_s16
vldrhq_gather_shifted_offset_z_s32
vldrhq_gather_shifted_offset_z_u16
vldrhq_gather_shifted_offset_z_u32
vldrhq_s16
vldrhq_s32
vldrhq_u16
vldrhq_u32
vldrhq_z_f16
vldrhq_z_s16
vldrhq_z_s32
vldrhq_z_u16
vldrhq_z_u32
vldrwq_f32
vldrwq_gather_base_f32
vldrwq_gather_base_s32
vldrwq_gather_base_u32
vldrwq_gather_base_wb_f32
vldrwq_gather_base_wb_s32
vldrwq_gather_base_wb_u32
vldrwq_gather_base_wb_z_f32
vldrwq_gather_base_wb_z_s32
vldrwq_gather_base_wb_z_u32
vldrwq_gather_base_z_f32
vldrwq_gather_base_z_s32
vldrwq_gather_base_z_u32
vldrwq_gather_offset
vldrwq_gather_offset_f32
vldrwq_gather_offset_s32
vldrwq_gather_offset_u32
vldrwq_gather_offset_z
vldrwq_gather_offset_z_f32
vldrwq_gather_offset_z_s32
vldrwq_gather_offset_z_u32
vldrwq_gather_shifted_offset
vldrwq_gather_shifted_offset_f32
vldrwq_gather_shifted_offset_s32
vldrwq_gather_shifted_offset_u32
vldrwq_gather_shifted_offset_z
vldrwq_gather_shifted_offset_z_f32
vldrwq_gather_shifted_offset_z_s32
vldrwq_gather_shifted_offset_z_u32
vldrwq_s32
vldrwq_u32
vldrwq_z_f32
vldrwq_z_s32
vldrwq_z_u32
vmaxaq_m
vmaxaq_m_s16
vmaxaq_m_s32
vmaxaq_m_s8
vmaxaq
vmaxaq_s16
vmaxaq_s32
vmaxaq_s8
vmaxavq_p
vmaxavq_p_s16
vmaxavq_p_s32
vmaxavq_p_s8
vmaxavq
vmaxavq_s16
vmaxavq_s32
vmaxavq_s8
vmaxnmaq
vmaxnmaq_f16
vmaxnmaq_f32
vmaxnmaq_m
vmaxnmaq_m_f16
vmaxnmaq_m_f32
vmaxnmavq
vmaxnmavq_f16
vmaxnmavq_f32
vmaxnmavq_p
vmaxnmavq_p_f16
vmaxnmavq_p_f32
vmaxnmq
vmaxnmq_f16
vmaxnmq_f32
vmaxnmq_m
vmaxnmq_m_f16
vmaxnmq_m_f32
vmaxnmq_x
vmaxnmq_x_f16
vmaxnmq_x_f32
vmaxnmvq
vmaxnmvq_f16
vmaxnmvq_f32
vmaxnmvq_p
vmaxnmvq_p_f16
vmaxnmvq_p_f32
vmaxq_m
vmaxq_m_s16
vmaxq_m_s32
vmaxq_m_s8
vmaxq_m_u16
vmaxq_m_u32
vmaxq_m_u8
vmaxq
vmaxq_s16
vmaxq_s32
vmaxq_s8
vmaxq_u16
vmaxq_u32
vmaxq_u8
vmaxq_x
vmaxq_x_s16
vmaxq_x_s32
vmaxq_x_s8
vmaxq_x_u16
vmaxq_x_u32
vmaxq_x_u8
vmaxvq_p
vmaxvq_p_s16
vmaxvq_p_s32
vmaxvq_p_s8
vmaxvq_p_u16
vmaxvq_p_u32
vmaxvq_p_u8
vmaxvq
vmaxvq_s16
vmaxvq_s32
vmaxvq_s8
vmaxvq_u16
vmaxvq_u32
vmaxvq_u8
vminaq_m
vminaq_m_s16
vminaq_m_s32
vminaq_m_s8
vminaq
vminaq_s16
vminaq_s32
vminaq_s8
vminavq_p
vminavq_p_s16
vminavq_p_s32
vminavq_p_s8
vminavq
vminavq_s16
vminavq_s32
vminavq_s8
vminnmaq
vminnmaq_f16
vminnmaq_f32
vminnmaq_m
vminnmaq_m_f16
vminnmaq_m_f32
vminnmavq
vminnmavq_f16
vminnmavq_f32
vminnmavq_p
vminnmavq_p_f16
vminnmavq_p_f32
vminnmq
vminnmq_f16
vminnmq_f32
vminnmq_m
vminnmq_m_f16
vminnmq_m_f32
vminnmq_x
vminnmq_x_f16
vminnmq_x_f32
vminnmvq
vminnmvq_f16
vminnmvq_f32
vminnmvq_p
vminnmvq_p_f16
vminnmvq_p_f32
vminq_m
vminq_m_s16
vminq_m_s32
vminq_m_s8
vminq_m_u16
vminq_m_u32
vminq_m_u8
vminq
vminq_s16
vminq_s32
vminq_s8
vminq_u16
vminq_u32
vminq_u8
vminq_x
vminq_x_s16
vminq_x_s32
vminq_x_s8
vminq_x_u16
vminq_x_u32
vminq_x_u8
vminvq_p
vminvq_p_s16
vminvq_p_s32
vminvq_p_s8
vminvq_p_u16
vminvq_p_u32
vminvq_p_u8
vminvq
vminvq_s16
vminvq_s32
vminvq_s8
vminvq_u16
vminvq_u32
vminvq_u8
vmladavaq_p
vmladavaq_p_s16
vmladavaq_p_s32
vmladavaq_p_s8
vmladavaq_p_u16
vmladavaq_p_u32
vmladavaq_p_u8
vmladavaq
vmladavaq_s16
vmladavaq_s32
vmladavaq_s8
vmladavaq_u16
vmladavaq_u32
vmladavaq_u8
vmladavaxq_p
vmladavaxq_p_s16
vmladavaxq_p_s32
vmladavaxq_p_s8
vmladavaxq
vmladavaxq_s16
vmladavaxq_s32
vmladavaxq_s8
vmladavq_p
vmladavq_p_s16
vmladavq_p_s32
vmladavq_p_s8
vmladavq_p_u16
vmladavq_p_u32
vmladavq_p_u8
vmladavq
vmladavq_s16
vmladavq_s32
vmladavq_s8
vmladavq_u16
vmladavq_u32
vmladavq_u8
vmladavxq_p
vmladavxq_p_s16
vmladavxq_p_s32
vmladavxq_p_s8
vmladavxq
vmladavxq_s16
vmladavxq_s32
vmladavxq_s8
vmlaldavaq_p
vmlaldavaq_p_s16
vmlaldavaq_p_s32
vmlaldavaq_p_u16
vmlaldavaq_p_u32
vmlaldavaq
vmlaldavaq_s16
vmlaldavaq_s32
vmlaldavaq_u16
vmlaldavaq_u32
vmlaldavaxq_p
vmlaldavaxq_p_s16
vmlaldavaxq_p_s32
vmlaldavaxq
vmlaldavaxq_s16
vmlaldavaxq_s32
vmlaldavq_p
vmlaldavq_p_s16
vmlaldavq_p_s32
vmlaldavq_p_u16
vmlaldavq_p_u32
vmlaldavq
vmlaldavq_s16
vmlaldavq_s32
vmlaldavq_u16
vmlaldavq_u32
vmlaldavxq_p
vmlaldavxq_p_s16
vmlaldavxq_p_s32
vmlaldavxq
vmlaldavxq_s16
vmlaldavxq_s32
vmlaq_m
vmlaq_m_n_s16
vmlaq_m_n_s32
vmlaq_m_n_s8
vmlaq_m_n_u16
vmlaq_m_n_u32
vmlaq_m_n_u8
vmlaq
vmlaq_n_s16
vmlaq_n_s32
vmlaq_n_s8
vmlaq_n_u16
vmlaq_n_u32
vmlaq_n_u8
vmlasq_m
vmlasq_m_n_s16
vmlasq_m_n_s32
vmlasq_m_n_s8
vmlasq_m_n_u16
vmlasq_m_n_u32
vmlasq_m_n_u8
vmlasq
vmlasq_n_s16
vmlasq_n_s32
vmlasq_n_s8
vmlasq_n_u16
vmlasq_n_u32
vmlasq_n_u8
vmlsdavaq_p
vmlsdavaq_p_s16
vmlsdavaq_p_s32
vmlsdavaq_p_s8
vmlsdavaq
vmlsdavaq_s16
vmlsdavaq_s32
vmlsdavaq_s8
vmlsdavaxq_p
vmlsdavaxq_p_s16
vmlsdavaxq_p_s32
vmlsdavaxq_p_s8
vmlsdavaxq
vmlsdavaxq_s16
vmlsdavaxq_s32
vmlsdavaxq_s8
vmlsdavq_p
vmlsdavq_p_s16
vmlsdavq_p_s32
vmlsdavq_p_s8
vmlsdavq
vmlsdavq_s16
vmlsdavq_s32
vmlsdavq_s8
vmlsdavxq_p
vmlsdavxq_p_s16
vmlsdavxq_p_s32
vmlsdavxq_p_s8
vmlsdavxq
vmlsdavxq_s16
vmlsdavxq_s32
vmlsdavxq_s8
vmlsldavaq_p
vmlsldavaq_p_s16
vmlsldavaq_p_s32
vmlsldavaq
vmlsldavaq_s16
vmlsldavaq_s32
vmlsldavaxq_p
vmlsldavaxq_p_s16
vmlsldavaxq_p_s32
vmlsldavaxq
vmlsldavaxq_s16
vmlsldavaxq_s32
vmlsldavq_p
vmlsldavq_p_s16
vmlsldavq_p_s32
vmlsldavq
vmlsldavq_s16
vmlsldavq_s32
vmlsldavxq_p
vmlsldavxq_p_s16
vmlsldavxq_p_s32
vmlsldavxq
vmlsldavxq_s16
vmlsldavxq_s32
vmovlbq_m
vmovlbq_m_s16
vmovlbq_m_s8
vmovlbq_m_u16
vmovlbq_m_u8
vmovlbq
vmovlbq_s16
vmovlbq_s8
vmovlbq_u16
vmovlbq_u8
vmovlbq_x
vmovlbq_x_s16
vmovlbq_x_s8
vmovlbq_x_u16
vmovlbq_x_u8
vmovltq_m
vmovltq_m_s16
vmovltq_m_s8
vmovltq_m_u16
vmovltq_m_u8
vmovltq
vmovltq_s16
vmovltq_s8
vmovltq_u16
vmovltq_u8
vmovltq_x
vmovltq_x_s16
vmovltq_x_s8
vmovltq_x_u16
vmovltq_x_u8
vmovnbq_m
vmovnbq_m_s16
vmovnbq_m_s32
vmovnbq_m_u16
vmovnbq_m_u32
vmovnbq
vmovnbq_s16
vmovnbq_s32
vmovnbq_u16
vmovnbq_u32
vmovntq_m
vmovntq_m_s16
vmovntq_m_s32
vmovntq_m_u16
vmovntq_m_u32
vmovntq
vmovntq_s16
vmovntq_s32
vmovntq_u16
vmovntq_u32
vmulhq_m
vmulhq_m_s16
vmulhq_m_s32
vmulhq_m_s8
vmulhq_m_u16
vmulhq_m_u32
vmulhq_m_u8
vmulhq
vmulhq_s16
vmulhq_s32
vmulhq_s8
vmulhq_u16
vmulhq_u32
vmulhq_u8
vmulhq_x
vmulhq_x_s16
vmulhq_x_s32
vmulhq_x_s8
vmulhq_x_u16
vmulhq_x_u32
vmulhq_x_u8
vmullbq_int_m
vmullbq_int_m_s16
vmullbq_int_m_s32
vmullbq_int_m_s8
vmullbq_int_m_u16
vmullbq_int_m_u32
vmullbq_int_m_u8
vmullbq_int
vmullbq_int_s16
vmullbq_int_s32
vmullbq_int_s8
vmullbq_int_u16
vmullbq_int_u32
vmullbq_int_u8
vmullbq_int_x
vmullbq_int_x_s16
vmullbq_int_x_s32
vmullbq_int_x_s8
vmullbq_int_x_u16
vmullbq_int_x_u32
vmullbq_int_x_u8
vmullbq_poly_m
vmullbq_poly_m_p16
vmullbq_poly_m_p8
vmullbq_poly
vmullbq_poly_p16
vmullbq_poly_p8
vmullbq_poly_x
vmullbq_poly_x_p16
vmullbq_poly_x_p8
vmulltq_int_m
vmulltq_int_m_s16
vmulltq_int_m_s32
vmulltq_int_m_s8
vmulltq_int_m_u16
vmulltq_int_m_u32
vmulltq_int_m_u8
vmulltq_int
vmulltq_int_s16
vmulltq_int_s32
vmulltq_int_s8
vmulltq_int_u16
vmulltq_int_u32
vmulltq_int_u8
vmulltq_int_x
vmulltq_int_x_s16
vmulltq_int_x_s32
vmulltq_int_x_s8
vmulltq_int_x_u16
vmulltq_int_x_u32
vmulltq_int_x_u8
vmulltq_poly_m
vmulltq_poly_m_p16
vmulltq_poly_m_p8
vmulltq_poly
vmulltq_poly_p16
vmulltq_poly_p8
vmulltq_poly_x
vmulltq_poly_x_p16
vmulltq_poly_x_p8
vmulq
vmulq_f16
vmulq_f32
vmulq_m
vmulq_m_f16
vmulq_m_f32
vmulq_m_n_f16
vmulq_m_n_f32
vmulq_m_n_s16
vmulq_m_n_s32
vmulq_m_n_s8
vmulq_m_n_u16
vmulq_m_n_u32
vmulq_m_n_u8
vmulq_m_s16
vmulq_m_s32
vmulq_m_s8
vmulq_m_u16
vmulq_m_u32
vmulq_m_u8
vmulq_n_f16
vmulq_n_f32
vmulq_n_s16
vmulq_n_s32
vmulq_n_s8
vmulq_n_u16
vmulq_n_u32
vmulq_n_u8
vmulq_s16
vmulq_s32
vmulq_s8
vmulq_u16
vmulq_u32
vmulq_u8
vmulq_x
vmulq_x_f16
vmulq_x_f32
vmulq_x_n_f16
vmulq_x_n_f32
vmulq_x_n_s16
vmulq_x_n_s32
vmulq_x_n_s8
vmulq_x_n_u16
vmulq_x_n_u32
vmulq_x_n_u8
vmulq_x_s16
vmulq_x_s32
vmulq_x_s8
vmulq_x_u16
vmulq_x_u32
vmulq_x_u8
vmvnq_m
vmvnq_m_n_s16
vmvnq_m_n_s32
vmvnq_m_n_u16
vmvnq_m_n_u32
vmvnq_m_s16
vmvnq_m_s32
vmvnq_m_s8
vmvnq_m_u16
vmvnq_m_u32
vmvnq_m_u8
vmvnq_n_s16
vmvnq_n_s32
vmvnq_n_u16
vmvnq_n_u32
vmvnq
vmvnq_s16
vmvnq_s32
vmvnq_s8
vmvnq_u16
vmvnq_u32
vmvnq_u8
vmvnq_x_n_s16
vmvnq_x_n_s32
vmvnq_x_n_u16
vmvnq_x_n_u32
vmvnq_x
vmvnq_x_s16
vmvnq_x_s32
vmvnq_x_s8
vmvnq_x_u16
vmvnq_x_u32
vmvnq_x_u8
vnegq
vnegq_f16
vnegq_f32
vnegq_m
vnegq_m_f16
vnegq_m_f32
vnegq_m_s16
vnegq_m_s32
vnegq_m_s8
vnegq_s16
vnegq_s32
vnegq_s8
vnegq_x
vnegq_x_f16
vnegq_x_f32
vnegq_x_s16
vnegq_x_s32
vnegq_x_s8
vornq
vornq_f16
vornq_f32
vornq_m
vornq_m_f16
vornq_m_f32
vornq_m_s16
vornq_m_s32
vornq_m_s8
vornq_m_u16
vornq_m_u32
vornq_m_u8
vornq_s16
vornq_s32
vornq_s8
vornq_u16
vornq_u32
vornq_u8
vornq_x
vornq_x_f16
vornq_x_f32
vornq_x_s16
vornq_x_s32
vornq_x_s8
vornq_x_u16
vornq_x_u32
vornq_x_u8
vorrq
vorrq_f16
vorrq_f32
vorrq_m
vorrq_m_f16
vorrq_m_f32
vorrq_m_n
vorrq_m_n_s16
vorrq_m_n_s32
vorrq_m_n_u16
vorrq_m_n_u32
vorrq_m_s16
vorrq_m_s32
vorrq_m_s8
vorrq_m_u16
vorrq_m_u32
vorrq_m_u8
vorrq_n_s16
vorrq_n_s32
vorrq_n_u16
vorrq_n_u32
vorrq_s16
vorrq_s32
vorrq_s8
vorrq_u16
vorrq_u32
vorrq_u8
vorrq_x
vorrq_x_f16
vorrq_x_f32
vorrq_x_s16
vorrq_x_s32
vorrq_x_s8
vorrq_x_u16
vorrq_x_u32
vorrq_x_u8
vpnot
vpselq
vpselq_f16
vpselq_f32
vpselq_s16
vpselq_s32
vpselq_s64
vpselq_s8
vpselq_u16
vpselq_u32
vpselq_u64
vpselq_u8
vqabsq_m
vqabsq_m_s16
vqabsq_m_s32
vqabsq_m_s8
vqabsq
vqabsq_s16
vqabsq_s32
vqabsq_s8
vqaddq_m
vqaddq_m_n_s16
vqaddq_m_n_s32
vqaddq_m_n_s8
vqaddq_m_n_u16
vqaddq_m_n_u32
vqaddq_m_n_u8
vqaddq_m_s16
vqaddq_m_s32
vqaddq_m_s8
vqaddq_m_u16
vqaddq_m_u32
vqaddq_m_u8
vqaddq
vqaddq_n_s16
vqaddq_n_s32
vqaddq_n_s8
vqaddq_n_u16
vqaddq_n_u32
vqaddq_n_u8
vqaddq_s16
vqaddq_s32
vqaddq_s8
vqaddq_u16
vqaddq_u32
vqaddq_u8
vqdmladhq_m
vqdmladhq_m_s16
vqdmladhq_m_s32
vqdmladhq_m_s8
vqdmladhq
vqdmladhq_s16
vqdmladhq_s32
vqdmladhq_s8
vqdmladhxq_m
vqdmladhxq_m_s16
vqdmladhxq_m_s32
vqdmladhxq_m_s8
vqdmladhxq
vqdmladhxq_s16
vqdmladhxq_s32
vqdmladhxq_s8
vqdmlahq_m
vqdmlahq_m_n_s16
vqdmlahq_m_n_s32
vqdmlahq_m_n_s8
vqdmlahq
vqdmlahq_n_s16
vqdmlahq_n_s32
vqdmlahq_n_s8
vqdmlashq_m
vqdmlashq_m_n_s16
vqdmlashq_m_n_s32
vqdmlashq_m_n_s8
vqdmlashq
vqdmlashq_n_s16
vqdmlashq_n_s32
vqdmlashq_n_s8
vqdmlsdhq_m
vqdmlsdhq_m_s16
vqdmlsdhq_m_s32
vqdmlsdhq_m_s8
vqdmlsdhq
vqdmlsdhq_s16
vqdmlsdhq_s32
vqdmlsdhq_s8
vqdmlsdhxq_m
vqdmlsdhxq_m_s16
vqdmlsdhxq_m_s32
vqdmlsdhxq_m_s8
vqdmlsdhxq
vqdmlsdhxq_s16
vqdmlsdhxq_s32
vqdmlsdhxq_s8
vqdmulhq_m
vqdmulhq_m_n_s16
vqdmulhq_m_n_s32
vqdmulhq_m_n_s8
vqdmulhq_m_s16
vqdmulhq_m_s32
vqdmulhq_m_s8
vqdmulhq
vqdmulhq_n_s16
vqdmulhq_n_s32
vqdmulhq_n_s8
vqdmulhq_s16
vqdmulhq_s32
vqdmulhq_s8
vqdmullbq_m
vqdmullbq_m_n_s16
vqdmullbq_m_n_s32
vqdmullbq_m_s16
vqdmullbq_m_s32
vqdmullbq
vqdmullbq_n_s16
vqdmullbq_n_s32
vqdmullbq_s16
vqdmullbq_s32
vqdmulltq_m
vqdmulltq_m_n_s16
vqdmulltq_m_n_s32
vqdmulltq_m_s16
vqdmulltq_m_s32
vqdmulltq
vqdmulltq_n_s16
vqdmulltq_n_s32
vqdmulltq_s16
vqdmulltq_s32
vqmovnbq_m
vqmovnbq_m_s16
vqmovnbq_m_s32
vqmovnbq_m_u16
vqmovnbq_m_u32
vqmovnbq
vqmovnbq_s16
vqmovnbq_s32
vqmovnbq_u16
vqmovnbq_u32
vqmovntq_m
vqmovntq_m_s16
vqmovntq_m_s32
vqmovntq_m_u16
vqmovntq_m_u32
vqmovntq
vqmovntq_s16
vqmovntq_s32
vqmovntq_u16
vqmovntq_u32
vqmovunbq_m
vqmovunbq_m_s16
vqmovunbq_m_s32
vqmovunbq
vqmovunbq_s16
vqmovunbq_s32
vqmovuntq_m
vqmovuntq_m_s16
vqmovuntq_m_s32
vqmovuntq
vqmovuntq_s16
vqmovuntq_s32
vqnegq_m
vqnegq_m_s16
vqnegq_m_s32
vqnegq_m_s8
vqnegq
vqnegq_s16
vqnegq_s32
vqnegq_s8
vqrdmladhq_m
vqrdmladhq_m_s16
vqrdmladhq_m_s32
vqrdmladhq_m_s8
vqrdmladhq
vqrdmladhq_s16
vqrdmladhq_s32
vqrdmladhq_s8
vqrdmladhxq_m
vqrdmladhxq_m_s16
vqrdmladhxq_m_s32
vqrdmladhxq_m_s8
vqrdmladhxq
vqrdmladhxq_s16
vqrdmladhxq_s32
vqrdmladhxq_s8
vqrdmlahq_m
vqrdmlahq_m_n_s16
vqrdmlahq_m_n_s32
vqrdmlahq_m_n_s8
vqrdmlahq
vqrdmlahq_n_s16
vqrdmlahq_n_s32
vqrdmlahq_n_s8
vqrdmlashq_m
vqrdmlashq_m_n_s16
vqrdmlashq_m_n_s32
vqrdmlashq_m_n_s8
vqrdmlashq
vqrdmlashq_n_s16
vqrdmlashq_n_s32
vqrdmlashq_n_s8
vqrdmlsdhq_m
vqrdmlsdhq_m_s16
vqrdmlsdhq_m_s32
vqrdmlsdhq_m_s8
vqrdmlsdhq
vqrdmlsdhq_s16
vqrdmlsdhq_s32
vqrdmlsdhq_s8
vqrdmlsdhxq_m
vqrdmlsdhxq_m_s16
vqrdmlsdhxq_m_s32
vqrdmlsdhxq_m_s8
vqrdmlsdhxq
vqrdmlsdhxq_s16
vqrdmlsdhxq_s32
vqrdmlsdhxq_s8
vqrdmulhq_m
vqrdmulhq_m_n_s16
vqrdmulhq_m_n_s32
vqrdmulhq_m_n_s8
vqrdmulhq_m_s16
vqrdmulhq_m_s32
vqrdmulhq_m_s8
vqrdmulhq
vqrdmulhq_n_s16
vqrdmulhq_n_s32
vqrdmulhq_n_s8
vqrdmulhq_s16
vqrdmulhq_s32
vqrdmulhq_s8
vqrshlq_m_n
vqrshlq_m_n_s16
vqrshlq_m_n_s32
vqrshlq_m_n_s8
vqrshlq_m_n_u16
vqrshlq_m_n_u32
vqrshlq_m_n_u8
vqrshlq_m
vqrshlq_m_s16
vqrshlq_m_s32
vqrshlq_m_s8
vqrshlq_m_u16
vqrshlq_m_u32
vqrshlq_m_u8
vqrshlq
vqrshlq_n_s16
vqrshlq_n_s32
vqrshlq_n_s8
vqrshlq_n_u16
vqrshlq_n_u32
vqrshlq_n_u8
vqrshlq_s16
vqrshlq_s32
vqrshlq_s8
vqrshlq_u16
vqrshlq_u32
vqrshlq_u8
vqrshrnbq_m
vqrshrnbq_m_n_s16
vqrshrnbq_m_n_s32
vqrshrnbq_m_n_u16
vqrshrnbq_m_n_u32
vqrshrnbq
vqrshrnbq_n_s16
vqrshrnbq_n_s32
vqrshrnbq_n_u16
vqrshrnbq_n_u32
vqrshrntq_m
vqrshrntq_m_n_s16
vqrshrntq_m_n_s32
vqrshrntq_m_n_u16
vqrshrntq_m_n_u32
vqrshrntq
vqrshrntq_n_s16
vqrshrntq_n_s32
vqrshrntq_n_u16
vqrshrntq_n_u32
vqrshrunbq_m
vqrshrunbq_m_n_s16
vqrshrunbq_m_n_s32
vqrshrunbq
vqrshrunbq_n_s16
vqrshrunbq_n_s32
vqrshruntq_m
vqrshruntq_m_n_s16
vqrshruntq_m_n_s32
vqrshruntq
vqrshruntq_n_s16
vqrshruntq_n_s32
vqshlq_m_n
vqshlq_m_n_s16
vqshlq_m_n_s32
vqshlq_m_n_s8
vqshlq_m_n_u16
vqshlq_m_n_u32
vqshlq_m_n_u8
vqshlq_m_r
vqshlq_m_r_s16
vqshlq_m_r_s32
vqshlq_m_r_s8
vqshlq_m_r_u16
vqshlq_m_r_u32
vqshlq_m_r_u8
vqshlq_m
vqshlq_m_s16
vqshlq_m_s32
vqshlq_m_s8
vqshlq_m_u16
vqshlq_m_u32
vqshlq_m_u8
vqshlq_n
vqshlq_n_s16
vqshlq_n_s32
vqshlq_n_s8
vqshlq_n_u16
vqshlq_n_u32
vqshlq_n_u8
vqshlq_r
vqshlq_r_s16
vqshlq_r_s32
vqshlq_r_s8
vqshlq_r_u16
vqshlq_r_u32
vqshlq_r_u8
vqshlq
vqshlq_s16
vqshlq_s32
vqshlq_s8
vqshlq_u16
vqshlq_u32
vqshlq_u8
vqshluq_m
vqshluq_m_n_s16
vqshluq_m_n_s32
vqshluq_m_n_s8
vqshluq
vqshluq_n_s16
vqshluq_n_s32
vqshluq_n_s8
vqshrnbq_m
vqshrnbq_m_n_s16
vqshrnbq_m_n_s32
vqshrnbq_m_n_u16
vqshrnbq_m_n_u32
vqshrnbq
vqshrnbq_n_s16
vqshrnbq_n_s32
vqshrnbq_n_u16
vqshrnbq_n_u32
vqshrntq_m
vqshrntq_m_n_s16
vqshrntq_m_n_s32
vqshrntq_m_n_u16
vqshrntq_m_n_u32
vqshrntq
vqshrntq_n_s16
vqshrntq_n_s32
vqshrntq_n_u16
vqshrntq_n_u32
vqshrunbq_m
vqshrunbq_m_n_s16
vqshrunbq_m_n_s32
vqshrunbq
vqshrunbq_n_s16
vqshrunbq_n_s32
vqshruntq_m
vqshruntq_m_n_s16
vqshruntq_m_n_s32
vqshruntq
vqshruntq_n_s16
vqshruntq_n_s32
vqsubq_m
vqsubq_m_n_s16
vqsubq_m_n_s32
vqsubq_m_n_s8
vqsubq_m_n_u16
vqsubq_m_n_u32
vqsubq_m_n_u8
vqsubq_m_s16
vqsubq_m_s32
vqsubq_m_s8
vqsubq_m_u16
vqsubq_m_u32
vqsubq_m_u8
vqsubq
vqsubq_n_s16
vqsubq_n_s32
vqsubq_n_s8
vqsubq_n_u16
vqsubq_n_u32
vqsubq_n_u8
vqsubq_s16
vqsubq_s32
vqsubq_s8
vqsubq_u16
vqsubq_u32
vqsubq_u8
vreinterpretq_f16
vreinterpretq_f16_f32
vreinterpretq_f16_s16
vreinterpretq_f16_s32
vreinterpretq_f16_s64
vreinterpretq_f16_s8
vreinterpretq_f16_u16
vreinterpretq_f16_u32
vreinterpretq_f16_u64
vreinterpretq_f16_u8
vreinterpretq_f32
vreinterpretq_f32_f16
vreinterpretq_f32_s16
vreinterpretq_f32_s32
vreinterpretq_f32_s64
vreinterpretq_f32_s8
vreinterpretq_f32_u16
vreinterpretq_f32_u32
vreinterpretq_f32_u64
vreinterpretq_f32_u8
vreinterpretq_s16
vreinterpretq_s16_f16
vreinterpretq_s16_f32
vreinterpretq_s16_s32
vreinterpretq_s16_s64
vreinterpretq_s16_s8
vreinterpretq_s16_u16
vreinterpretq_s16_u32
vreinterpretq_s16_u64
vreinterpretq_s16_u8
vreinterpretq_s32
vreinterpretq_s32_f16
vreinterpretq_s32_f32
vreinterpretq_s32_s16
vreinterpretq_s32_s64
vreinterpretq_s32_s8
vreinterpretq_s32_u16
vreinterpretq_s32_u32
vreinterpretq_s32_u64
vreinterpretq_s32_u8
vreinterpretq_s64
vreinterpretq_s64_f16
vreinterpretq_s64_f32
vreinterpretq_s64_s16
vreinterpretq_s64_s32
vreinterpretq_s64_s8
vreinterpretq_s64_u16
vreinterpretq_s64_u32
vreinterpretq_s64_u64
vreinterpretq_s64_u8
vreinterpretq_s8
vreinterpretq_s8_f16
vreinterpretq_s8_f32
vreinterpretq_s8_s16
vreinterpretq_s8_s32
vreinterpretq_s8_s64
vreinterpretq_s8_u16
vreinterpretq_s8_u32
vreinterpretq_s8_u64
vreinterpretq_s8_u8
vreinterpretq_u16
vreinterpretq_u16_f16
vreinterpretq_u16_f32
vreinterpretq_u16_s16
vreinterpretq_u16_s32
vreinterpretq_u16_s64
vreinterpretq_u16_s8
vreinterpretq_u16_u32
vreinterpretq_u16_u64
vreinterpretq_u16_u8
vreinterpretq_u32
vreinterpretq_u32_f16
vreinterpretq_u32_f32
vreinterpretq_u32_s16
vreinterpretq_u32_s32
vreinterpretq_u32_s64
vreinterpretq_u32_s8
vreinterpretq_u32_u16
vreinterpretq_u32_u64
vreinterpretq_u32_u8
vreinterpretq_u64
vreinterpretq_u64_f16
vreinterpretq_u64_f32
vreinterpretq_u64_s16
vreinterpretq_u64_s32
vreinterpretq_u64_s64
vreinterpretq_u64_s8
vreinterpretq_u64_u16
vreinterpretq_u64_u32
vreinterpretq_u64_u8
vreinterpretq_u8
vreinterpretq_u8_f16
vreinterpretq_u8_f32
vreinterpretq_u8_s16
vreinterpretq_u8_s32
vreinterpretq_u8_s64
vreinterpretq_u8_s8
vreinterpretq_u8_u16
vreinterpretq_u8_u32
vreinterpretq_u8_u64
vrev16q_m
vrev16q_m_s8
vrev16q_m_u8
vrev16q
vrev16q_s8
vrev16q_u8
vrev16q_x
vrev16q_x_s8
vrev16q_x_u8
vrev32q
vrev32q_f16
vrev32q_m
vrev32q_m_f16
vrev32q_m_s16
vrev32q_m_s8
vrev32q_m_u16
vrev32q_m_u8
vrev32q_s16
vrev32q_s8
vrev32q_u16
vrev32q_u8
vrev32q_x
vrev32q_x_f16
vrev32q_x_s16
vrev32q_x_s8
vrev32q_x_u16
vrev32q_x_u8
vrev64q
vrev64q_f16
vrev64q_f32
vrev64q_m
vrev64q_m_f16
vrev64q_m_f32
vrev64q_m_s16
vrev64q_m_s32
vrev64q_m_s8
vrev64q_m_u16
vrev64q_m_u32
vrev64q_m_u8
vrev64q_s16
vrev64q_s32
vrev64q_s8
vrev64q_u16
vrev64q_u32
vrev64q_u8
vrev64q_x
vrev64q_x_f16
vrev64q_x_f32
vrev64q_x_s16
vrev64q_x_s32
vrev64q_x_s8
vrev64q_x_u16
vrev64q_x_u32
vrev64q_x_u8
vrhaddq_m
vrhaddq_m_s16
vrhaddq_m_s32
vrhaddq_m_s8
vrhaddq_m_u16
vrhaddq_m_u32
vrhaddq_m_u8
vrhaddq
vrhaddq_s16
vrhaddq_s32
vrhaddq_s8
vrhaddq_u16
vrhaddq_u32
vrhaddq_u8
vrhaddq_x
vrhaddq_x_s16
vrhaddq_x_s32
vrhaddq_x_s8
vrhaddq_x_u16
vrhaddq_x_u32
vrhaddq_x_u8
vrmlaldavhaq_p
vrmlaldavhaq_p_s32
vrmlaldavhaq_p_u32
vrmlaldavhaq
vrmlaldavhaq_s32
vrmlaldavhaq_u32
vrmlaldavhaxq_p
vrmlaldavhaxq_p_s32
vrmlaldavhaxq
vrmlaldavhaxq_s32
vrmlaldavhq_p
vrmlaldavhq_p_s32
vrmlaldavhq_p_u32
vrmlaldavhq
vrmlaldavhq_s32
vrmlaldavhq_u32
vrmlaldavhxq_p
vrmlaldavhxq_p_s32
vrmlaldavhxq
vrmlaldavhxq_s32
vrmlsldavhaq_p
vrmlsldavhaq_p_s32
vrmlsldavhaq
vrmlsldavhaq_s32
vrmlsldavhaxq_p
vrmlsldavhaxq_p_s32
vrmlsldavhaxq
vrmlsldavhaxq_s32
vrmlsldavhq_p
vrmlsldavhq_p_s32
vrmlsldavhq
vrmlsldavhq_s32
vrmlsldavhxq_p
vrmlsldavhxq_p_s32
vrmlsldavhxq
vrmlsldavhxq_s32
vrmulhq_m
vrmulhq_m_s16
vrmulhq_m_s32
vrmulhq_m_s8
vrmulhq_m_u16
vrmulhq_m_u32
vrmulhq_m_u8
vrmulhq
vrmulhq_s16
vrmulhq_s32
vrmulhq_s8
vrmulhq_u16
vrmulhq_u32
vrmulhq_u8
vrmulhq_x
vrmulhq_x_s16
vrmulhq_x_s32
vrmulhq_x_s8
vrmulhq_x_u16
vrmulhq_x_u32
vrmulhq_x_u8
vrndaq
vrndaq_f16
vrndaq_f32
vrndaq_m
vrndaq_m_f16
vrndaq_m_f32
vrndaq_x
vrndaq_x_f16
vrndaq_x_f32
vrndmq
vrndmq_f16
vrndmq_f32
vrndmq_m
vrndmq_m_f16
vrndmq_m_f32
vrndmq_x
vrndmq_x_f16
vrndmq_x_f32
vrndnq
vrndnq_f16
vrndnq_f32
vrndnq_m
vrndnq_m_f16
vrndnq_m_f32
vrndnq_x
vrndnq_x_f16
vrndnq_x_f32
vrndpq
vrndpq_f16
vrndpq_f32
vrndpq_m
vrndpq_m_f16
vrndpq_m_f32
vrndpq_x
vrndpq_x_f16
vrndpq_x_f32
vrndq
vrndq_f16
vrndq_f32
vrndq_m
vrndq_m_f16
vrndq_m_f32
vrndq_x
vrndq_x_f16
vrndq_x_f32
vrndxq
vrndxq_f16
vrndxq_f32
vrndxq_m
vrndxq_m_f16
vrndxq_m_f32
vrndxq_x
vrndxq_x_f16
vrndxq_x_f32
vrshlq_m_n
vrshlq_m_n_s16
vrshlq_m_n_s32
vrshlq_m_n_s8
vrshlq_m_n_u16
vrshlq_m_n_u32
vrshlq_m_n_u8
vrshlq_m
vrshlq_m_s16
vrshlq_m_s32
vrshlq_m_s8
vrshlq_m_u16
vrshlq_m_u32
vrshlq_m_u8
vrshlq
vrshlq_n_s16
vrshlq_n_s32
vrshlq_n_s8
vrshlq_n_u16
vrshlq_n_u32
vrshlq_n_u8
vrshlq_s16
vrshlq_s32
vrshlq_s8
vrshlq_u16
vrshlq_u32
vrshlq_u8
vrshlq_x
vrshlq_x_s16
vrshlq_x_s32
vrshlq_x_s8
vrshlq_x_u16
vrshlq_x_u32
vrshlq_x_u8
vrshrnbq_m
vrshrnbq_m_n_s16
vrshrnbq_m_n_s32
vrshrnbq_m_n_u16
vrshrnbq_m_n_u32
vrshrnbq
vrshrnbq_n_s16
vrshrnbq_n_s32
vrshrnbq_n_u16
vrshrnbq_n_u32
vrshrntq_m
vrshrntq_m_n_s16
vrshrntq_m_n_s32
vrshrntq_m_n_u16
vrshrntq_m_n_u32
vrshrntq
vrshrntq_n_s16
vrshrntq_n_s32
vrshrntq_n_u16
vrshrntq_n_u32
vrshrq_m
vrshrq_m_n_s16
vrshrq_m_n_s32
vrshrq_m_n_s8
vrshrq_m_n_u16
vrshrq_m_n_u32
vrshrq_m_n_u8
vrshrq
vrshrq_n_s16
vrshrq_n_s32
vrshrq_n_s8
vrshrq_n_u16
vrshrq_n_u32
vrshrq_n_u8
vrshrq_x
vrshrq_x_n_s16
vrshrq_x_n_s32
vrshrq_x_n_s8
vrshrq_x_n_u16
vrshrq_x_n_u32
vrshrq_x_n_u8
vsbciq_m
vsbciq_m_s32
vsbciq_m_u32
vsbciq
vsbciq_s32
vsbciq_u32
vsbcq_m
vsbcq_m_s32
vsbcq_m_u32
vsbcq
vsbcq_s32
vsbcq_u32
vsetq_lane
vsetq_lane_f16
vsetq_lane_f32
vsetq_lane_s16
vsetq_lane_s32
vsetq_lane_s64
vsetq_lane_s8
vsetq_lane_u16
vsetq_lane_u32
vsetq_lane_u64
vsetq_lane_u8
vshlcq_m
vshlcq_m_s16
vshlcq_m_s32
vshlcq_m_s8
vshlcq_m_u16
vshlcq_m_u32
vshlcq_m_u8
vshlcq
vshlcq_s16
vshlcq_s32
vshlcq_s8
vshlcq_u16
vshlcq_u32
vshlcq_u8
vshllbq_m
vshllbq_m_n_s16
vshllbq_m_n_s8
vshllbq_m_n_u16
vshllbq_m_n_u8
vshllbq
vshllbq_n_s16
vshllbq_n_s8
vshllbq_n_u16
vshllbq_n_u8
vshllbq_x
vshllbq_x_n_s16
vshllbq_x_n_s8
vshllbq_x_n_u16
vshllbq_x_n_u8
vshlltq_m
vshlltq_m_n_s16
vshlltq_m_n_s8
vshlltq_m_n_u16
vshlltq_m_n_u8
vshlltq
vshlltq_n_s16
vshlltq_n_s8
vshlltq_n_u16
vshlltq_n_u8
vshlltq_x
vshlltq_x_n_s16
vshlltq_x_n_s8
vshlltq_x_n_u16
vshlltq_x_n_u8
vshlq_m_n
vshlq_m_n_s16
vshlq_m_n_s32
vshlq_m_n_s8
vshlq_m_n_u16
vshlq_m_n_u32
vshlq_m_n_u8
vshlq_m_r
vshlq_m_r_s16
vshlq_m_r_s32
vshlq_m_r_s8
vshlq_m_r_u16
vshlq_m_r_u32
vshlq_m_r_u8
vshlq_m
vshlq_m_s16
vshlq_m_s32
vshlq_m_s8
vshlq_m_u16
vshlq_m_u32
vshlq_m_u8
vshlq_n
vshlq_n_s16
vshlq_n_s32
vshlq_n_s8
vshlq_n_u16
vshlq_n_u32
vshlq_n_u8
vshlq_r
vshlq_r_s16
vshlq_r_s32
vshlq_r_s8
vshlq_r_u16
vshlq_r_u32
vshlq_r_u8
vshlq
vshlq_s16
vshlq_s32
vshlq_s8
vshlq_u16
vshlq_u32
vshlq_u8
vshlq_x_n
vshlq_x_n_s16
vshlq_x_n_s32
vshlq_x_n_s8
vshlq_x_n_u16
vshlq_x_n_u32
vshlq_x_n_u8
vshlq_x
vshlq_x_s16
vshlq_x_s32
vshlq_x_s8
vshlq_x_u16
vshlq_x_u32
vshlq_x_u8
vshrnbq_m
vshrnbq_m_n_s16
vshrnbq_m_n_s32
vshrnbq_m_n_u16
vshrnbq_m_n_u32
vshrnbq
vshrnbq_n_s16
vshrnbq_n_s32
vshrnbq_n_u16
vshrnbq_n_u32
vshrntq_m
vshrntq_m_n_s16
vshrntq_m_n_s32
vshrntq_m_n_u16
vshrntq_m_n_u32
vshrntq
vshrntq_n_s16
vshrntq_n_s32
vshrntq_n_u16
vshrntq_n_u32
vshrq_m
vshrq_m_n_s16
vshrq_m_n_s32
vshrq_m_n_s8
vshrq_m_n_u16
vshrq_m_n_u32
vshrq_m_n_u8
vshrq
vshrq_n_s16
vshrq_n_s32
vshrq_n_s8
vshrq_n_u16
vshrq_n_u32
vshrq_n_u8
vshrq_x
vshrq_x_n_s16
vshrq_x_n_s32
vshrq_x_n_s8
vshrq_x_n_u16
vshrq_x_n_u32
vshrq_x_n_u8
vsliq_m
vsliq_m_n_s16
vsliq_m_n_s32
vsliq_m_n_s8
vsliq_m_n_u16
vsliq_m_n_u32
vsliq_m_n_u8
vsliq
vsliq_n_s16
vsliq_n_s32
vsliq_n_s8
vsliq_n_u16
vsliq_n_u32
vsliq_n_u8
vsriq_m
vsriq_m_n_s16
vsriq_m_n_s32
vsriq_m_n_s8
vsriq_m_n_u16
vsriq_m_n_u32
vsriq_m_n_u8
vsriq
vsriq_n_s16
vsriq_n_s32
vsriq_n_s8
vsriq_n_u16
vsriq_n_u32
vsriq_n_u8
vst1q
vst1q_f16
vst1q_f32
vst1q_p
vst1q_p_f16
vst1q_p_f32
vst1q_p_s16
vst1q_p_s32
vst1q_p_s8
vst1q_p_u16
vst1q_p_u32
vst1q_p_u8
vst1q_s16
vst1q_s32
vst1q_s8
vst1q_u16
vst1q_u32
vst1q_u8
vst2q
vst2q_f16
vst2q_f32
vst2q_s16
vst2q_s32
vst2q_s8
vst2q_u16
vst2q_u32
vst2q_u8
vst4q
vst4q_f16
vst4q_f32
vst4q_s16
vst4q_s32
vst4q_s8
vst4q_u16
vst4q_u32
vst4q_u8
vstrbq_p
vstrbq_p_s16
vstrbq_p_s32
vstrbq_p_s8
vstrbq_p_u16
vstrbq_p_u32
vstrbq_p_u8
vstrbq
vstrbq_s16
vstrbq_s32
vstrbq_s8
vstrbq_scatter_offset_p
vstrbq_scatter_offset_p_s16
vstrbq_scatter_offset_p_s32
vstrbq_scatter_offset_p_s8
vstrbq_scatter_offset_p_u16
vstrbq_scatter_offset_p_u32
vstrbq_scatter_offset_p_u8
vstrbq_scatter_offset
vstrbq_scatter_offset_s16
vstrbq_scatter_offset_s32
vstrbq_scatter_offset_s8
vstrbq_scatter_offset_u16
vstrbq_scatter_offset_u32
vstrbq_scatter_offset_u8
vstrbq_u16
vstrbq_u32
vstrbq_u8
vstrdq_scatter_base_p
vstrdq_scatter_base_p_s64
vstrdq_scatter_base_p_u64
vstrdq_scatter_base
vstrdq_scatter_base_s64
vstrdq_scatter_base_u64
vstrdq_scatter_base_wb_p
vstrdq_scatter_base_wb_p_s64
vstrdq_scatter_base_wb_p_u64
vstrdq_scatter_base_wb
vstrdq_scatter_base_wb_s64
vstrdq_scatter_base_wb_u64
vstrdq_scatter_offset_p
vstrdq_scatter_offset_p_s64
vstrdq_scatter_offset_p_u64
vstrdq_scatter_offset
vstrdq_scatter_offset_s64
vstrdq_scatter_offset_u64
vstrdq_scatter_shifted_offset_p
vstrdq_scatter_shifted_offset_p_s64
vstrdq_scatter_shifted_offset_p_u64
vstrdq_scatter_shifted_offset
vstrdq_scatter_shifted_offset_s64
vstrdq_scatter_shifted_offset_u64
vstrhq
vstrhq_f16
vstrhq_p
vstrhq_p_f16
vstrhq_p_s16
vstrhq_p_s32
vstrhq_p_u16
vstrhq_p_u32
vstrhq_s16
vstrhq_s32
vstrhq_scatter_offset
vstrhq_scatter_offset_f16
vstrhq_scatter_offset_p
vstrhq_scatter_offset_p_f16
vstrhq_scatter_offset_p_s16
vstrhq_scatter_offset_p_s32
vstrhq_scatter_offset_p_u16
vstrhq_scatter_offset_p_u32
vstrhq_scatter_offset_s16
vstrhq_scatter_offset_s32
vstrhq_scatter_offset_u16
vstrhq_scatter_offset_u32
vstrhq_scatter_shifted_offset
vstrhq_scatter_shifted_offset_f16
vstrhq_scatter_shifted_offset_p
vstrhq_scatter_shifted_offset_p_f16
vstrhq_scatter_shifted_offset_p_s16
vstrhq_scatter_shifted_offset_p_s32
vstrhq_scatter_shifted_offset_p_u16
vstrhq_scatter_shifted_offset_p_u32
vstrhq_scatter_shifted_offset_s16
vstrhq_scatter_shifted_offset_s32
vstrhq_scatter_shifted_offset_u16
vstrhq_scatter_shifted_offset_u32
vstrhq_u16
vstrhq_u32
vstrwq
vstrwq_f32
vstrwq_p
vstrwq_p_f32
vstrwq_p_s32
vstrwq_p_u32
vstrwq_s32
vstrwq_scatter_base
vstrwq_scatter_base_f32
vstrwq_scatter_base_p
vstrwq_scatter_base_p_f32
vstrwq_scatter_base_p_s32
vstrwq_scatter_base_p_u32
vstrwq_scatter_base_s32
vstrwq_scatter_base_u32
vstrwq_scatter_base_wb
vstrwq_scatter_base_wb_f32
vstrwq_scatter_base_wb_p
vstrwq_scatter_base_wb_p_f32
vstrwq_scatter_base_wb_p_s32
vstrwq_scatter_base_wb_p_u32
vstrwq_scatter_base_wb_s32
vstrwq_scatter_base_wb_u32
vstrwq_scatter_offset
vstrwq_scatter_offset_f32
vstrwq_scatter_offset_p
vstrwq_scatter_offset_p_f32
vstrwq_scatter_offset_p_s32
vstrwq_scatter_offset_p_u32
vstrwq_scatter_offset_s32
vstrwq_scatter_offset_u32
vstrwq_scatter_shifted_offset
vstrwq_scatter_shifted_offset_f32
vstrwq_scatter_shifted_offset_p
vstrwq_scatter_shifted_offset_p_f32
vstrwq_scatter_shifted_offset_p_s32
vstrwq_scatter_shifted_offset_p_u32
vstrwq_scatter_shifted_offset_s32
vstrwq_scatter_shifted_offset_u32
vstrwq_u32
vsubq
vsubq_f16
vsubq_f32
vsubq_m
vsubq_m_f16
vsubq_m_f32
vsubq_m_n_f16
vsubq_m_n_f32
vsubq_m_n_s16
vsubq_m_n_s32
vsubq_m_n_s8
vsubq_m_n_u16
vsubq_m_n_u32
vsubq_m_n_u8
vsubq_m_s16
vsubq_m_s32
vsubq_m_s8
vsubq_m_u16
vsubq_m_u32
vsubq_m_u8
vsubq_n_f16
vsubq_n_f32
vsubq_n_s16
vsubq_n_s32
vsubq_n_s8
vsubq_n_u16
vsubq_n_u32
vsubq_n_u8
vsubq_s16
vsubq_s32
vsubq_s8
vsubq_u16
vsubq_u32
vsubq_u8
vsubq_x
vsubq_x_f16
vsubq_x_f32
vsubq_x_n_f16
vsubq_x_n_f32
vsubq_x_n_s16
vsubq_x_n_s32
vsubq_x_n_s8
vsubq_x_n_u16
vsubq_x_n_u32
vsubq_x_n_u8
vsubq_x_s16
vsubq_x_s32
vsubq_x_s8
vsubq_x_u16
vsubq_x_u32
vsubq_x_u8
vuninitializedq_f16
vuninitializedq_f32
vuninitializedq
vuninitializedq_polymorphic_f16
vuninitializedq_polymorphic_f32
vuninitializedq_polymorphic_s16
vuninitializedq_polymorphic_s32
vuninitializedq_polymorphic_s64
vuninitializedq_polymorphic_s8
vuninitializedq_polymorphic_u16
vuninitializedq_polymorphic_u32
vuninitializedq_polymorphic_u64
vuninitializedq_polymorphic_u8
vuninitializedq_s16
vuninitializedq_s32
vuninitializedq_s64
vuninitializedq_s8
vuninitializedq_u16
vuninitializedq_u32
vuninitializedq_u64
vuninitializedq_u8
cx1a
cx1d
cx1da
cx2a
cx2d
cx2da
cx3a
cx3d
cx3da
vcx1_u32
vcx1a_u32
vcx1d_u64
vcx1da_u64
vcx1q_m
vcx1q_m_f16
vcx1q_m_f32
vcx1q_m_s16
vcx1q_m_s32
vcx1q_m_s64
vcx1q_m_s8
vcx1q_m_u16
vcx1q_m_u32
vcx1q_m_u64
vcx1q_m_u8
vcx1q_u8
vcx1qa
vcx1qa_f16
vcx1qa_f32
vcx1qa_m
vcx1qa_m_f16
vcx1qa_m_f32
vcx1qa_m_s16
vcx1qa_m_s32
vcx1qa_m_s64
vcx1qa_m_s8
vcx1qa_m_u16
vcx1qa_m_u32
vcx1qa_m_u64
vcx1qa_m_u8
vcx1qa_s16
vcx1qa_s32
vcx1qa_s64
vcx1qa_s8
vcx1qa_u16
vcx1qa_u32
vcx1qa_u64
vcx1qa_u8
vcx2_u32
vcx2a_u32
vcx2d_u64
vcx2da_u64
vcx2q
vcx2q_f16
vcx2q_f32
vcx2q_m_impl
vcx2q_m_impl_f16
vcx2q_m_impl_f32
vcx2q_m_impl_s16
vcx2q_m_impl_s32
vcx2q_m_impl_s64
vcx2q_m_impl_s8
vcx2q_m_impl_u16
vcx2q_m_impl_u32
vcx2q_m_impl_u64
vcx2q_m_impl_u8
vcx2q_s16
vcx2q_s32
vcx2q_s64
vcx2q_s8
vcx2q_u16
vcx2q_u32
vcx2q_u64
vcx2q_u8
vcx2q_u8_f16
vcx2q_u8_f32
vcx2q_u8_s16
vcx2q_u8_s32
vcx2q_u8_s64
vcx2q_u8_s8
vcx2q_u8_u16
vcx2q_u8_u32
vcx2q_u8_u64
vcx2q_u8_u8
vcx2qa_impl
vcx2qa_impl_f16
vcx2qa_impl_f32
vcx2qa_impl_s16
vcx2qa_impl_s32
vcx2qa_impl_s64
vcx2qa_impl_s8
vcx2qa_impl_u16
vcx2qa_impl_u32
vcx2qa_impl_u64
vcx2qa_impl_u8
vcx2qa_m_impl
vcx2qa_m_impl_f16
vcx2qa_m_impl_f32
vcx2qa_m_impl_s16
vcx2qa_m_impl_s32
vcx2qa_m_impl_s64
vcx2qa_m_impl_s8
vcx2qa_m_impl_u16
vcx2qa_m_impl_u32
vcx2qa_m_impl_u64
vcx2qa_m_impl_u8
vcx3_u32
vcx3a_u32
vcx3d_u64
vcx3da_u64
vcx3q_impl
vcx3q_impl_f16
vcx3q_impl_f32
vcx3q_impl_s16
vcx3q_impl_s32
vcx3q_impl_s64
vcx3q_impl_s8
vcx3q_impl_u16
vcx3q_impl_u32
vcx3q_impl_u64
vcx3q_impl_u8
vcx3q_m_impl
vcx3q_m_impl_f16
vcx3q_m_impl_f32
vcx3q_m_impl_s16
vcx3q_m_impl_s32
vcx3q_m_impl_s64
vcx3q_m_impl_s8
vcx3q_m_impl_u16
vcx3q_m_impl_u32
vcx3q_m_impl_u64
vcx3q_m_impl_u8
vcx3q_u8_impl
vcx3q_u8_impl_f16
vcx3q_u8_impl_f32
vcx3q_u8_impl_s16
vcx3q_u8_impl_s32
vcx3q_u8_impl_s64
vcx3q_u8_impl_s8
vcx3q_u8_impl_u16
vcx3q_u8_impl_u32
vcx3q_u8_impl_u64
vcx3q_u8_impl_u8
vcx3qa_impl
vcx3qa_impl_f16
vcx3qa_impl_f32
vcx3qa_impl_s16
vcx3qa_impl_s32
vcx3qa_impl_s64
vcx3qa_impl_s8
vcx3qa_impl_u16
vcx3qa_impl_u32
vcx3qa_impl_u64
vcx3qa_impl_u8
vcx3qa_m_impl
vcx3qa_m_impl_f16
vcx3qa_m_impl_f32
vcx3qa_m_impl_s16
vcx3qa_m_impl_s32
vcx3qa_m_impl_s64
vcx3qa_m_impl_s8
vcx3qa_m_impl_u16
vcx3qa_m_impl_u32
vcx3qa_m_impl_u64
vcx3qa_m_impl_u8
vreinterpretq_u8
vreinterpretq_u8_u8
#=3=S
"048<CHLPTX\
S%%49%
!#%'
JVJX
"048<CHLPTX\
!#%'
v#zko
5:W~
FFFFFF
?>??;
^^^^^^
?^>????^
???^F
`/<I4
 )<GKPUZ
"048<CHLPTX\
vvvvvv
vvovvvv
!%),/37;?
GKOSW[
_cgko
"048<CHLPTX\
!#%'
!%),/37;?
GKOSW[_cgkos
!#%'
!%),/37;?
GKOSW[_bfjnr
"048<CHLPTX\
!#%'
!%),/37;?
GKOSW[_bfjnr
((((((((((((((((((((((((((((((((
2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
"""""
?((((C
IIIIIIII
DOLO
CSc
KVe
u}
4B
Tan
.|M|
ViVpuVpuV
'77)+-
"&),048<
DHLPTX\`dhlp
"&),048<
DHLPTX\_cgko
<"""""
"048<CHLPTX\
Q     
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/%%%%%%%%
&%%&%%%%%%%%%&%%%%%%%4%&     
&9%%%%%>%%
%&%%%&%%%%&
%&%%&C%%%%%%%%%%%%%%%%%%%%%%%%%&%%%%%%%%%%%%%%%%%%%%%%&
)"""""
!#%'
/RTT
!wwff
 5:?K
!%),/37;?
GKOSW[_bfjnr
(,04;@DHLPT
!#%'
!%),/37;?
GKOSW[_bfjnr
!%),/37;?
GKOSW[_bfjnr
D99;LO;\p
 5:?K
!%),/37;?
GKOSW[_bfjnr
"048<CHLPTX\
+++
!#%'
YYYYYY
BBBB !BBB
"B#B$BBBBBBBBBB
1(B)2*B,-
.B@B
BB/AB
!%),/37;?
GKOSW[_bfjnr
%/9CMWak
 5:?K
!%),/37;?
GKOSW[_bfjnr
.W
 8 ] 
 !!F!k!
"("M"x"
%37;?EJNRVZ^
S`mz
TaVc
ry<<
YYYYYYYYYYY2
,348
3:;?
!%),/37;?
GKOSW[_bfjnr
apinotes
jvoh
MYRV
P\UV








"048<CHLPTX\
!#%'
gjgggjj
jjjjjj
]]/?
W'2WWW
okkkkkkkkkk
<<<#<<<<F#
llllldddddddddd
hhh[V
"j737
VVVVV7^C
vvv0,3
8=BGL 
 ]zb
,,,,, l
+9FFFFFFF
FFFFFFF
F<<F<
F444444444444444444444444444444444444444444444444444444444444444444444
;;;;;8888888888
#49>CJPUZ_di
S`mz
*.26=BFJNRx
'+/37;?CG
 OSW[afjnrvz~
"$&(
"8Nd
;JWk|
$:>x
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
3P>Ibbb
bbbb
bbbbbb
#######
%%%%
)L..0.6262>8F440P0R\:(((((((((((((((((((((((((H<J((((N
%%%%%%%%%%
%%% "$
#(-39?
#(-39?
@@@======
@@@======
EEEEE
EEEEE
7=CI
@FLRX^d
=====&)
7=CI
!,7BMX
!,7BM
!,7BM
\,\\\\B
*aa:JD
@FLRX^d
$P0@H
O]]]U]_
""[HwHHHH
HHHHHHHHHHH:
HHH@B
     
 !"#
-./01
"',16;@E
OTY^dinsx}
#49>CKQV[`ej
69<?
!444#'
>AENNNI
9G66
6:GG
G(((((
::G:
GGSG^::
GGG99G9<<<G9999GG
n11111
,,,,,
6666
%AAAA<A$%%%%
&&&&&#####WZ###
rux3
4477
Z*****$$$$$^a$$$
..!!!!
!!!35
%%%%%#####HJ###L
8[NN
''!!!!
!!!!!
%%%%%#####57###
!(46
)))6
#####!!!!!;=!!!
''!!!!
!!!,.
%%%%%#####68###
<?AC
EEEEEQQQQQ
BBBKBB^
''!!!!
!!!!!
%%%%%#####/1###
#222222222222
2222
chmtz
!!+-
!!!!!#####/1###
..<?
$$$$$!!!!!BE!!!
--46
%%%%%!!!!!<>!!!
#####!!!!!24!!!
**!!!!
%%%%%#####79###
#####!!!!!35!!!
%*-2*********7<AFP

w'w*4www8ww;ww>wwA
    
BWZc
88888
88888
888088
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[["[[[[
[[['[[,[[[[[[[0[[[[[[[[[
[[[[[[[4[[[[[[[[[[9[[[[[[;@E[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
[[[[[[[[[[[[J[[[[[P
,4BJW
,4<DLT
88888
88888
888088
888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
8888
888"88&8888888*888888888
8888888;8888888888?888888AEI8888888888888888888888888888888
888888888888M88888R
 08HP`
,4<DLT
(2<FP
(2<FP
"3DUfw
(2<FZP
(2<FZP
(2<FZP
(2<FP
(2<FP
(2<FZP
(2<FP
")07>ELS
 '.5<CJQ
$).38=BGLQV[`ejoty~
 *4>HVe
ADGJMPSVY\_cgkorv
````
``+`
>QQQZQ\
8!-3
%%%]
 Y/9=
+9^m~
36qjJyQ
%/90123456789abcdef
       6      :>                                                                          B           H O   S       W
  Y]22  ae  i      m tx +++++
      
       
    
     
     
      
X    
$$$\
dhl
'-17
'09W`ir{
 #(+038
":*B
eeeee2J
,/\:. 
(-39FN[
6<BHU]cp
>ADG
JMPS
!! z
(q.;q
5:!!
444
!%)-26:
3<F[PU
ggggg
#.07
>@X##KKKKKKKX
iou77~*777XZ\I^
`flIIr
III(Be7g
iou77~
EJCG
EJCG
#&)IIIIIII,III9I<IIgIIjIIIIIs
IIII
44c444
4c4D2ccccc4c
0000000000000000000000000000000000000000000000000000000000000000000000
444446c4440cccc
ccRV
e6<<<
g66k666666
q622w2{}.8
6868
2c2222
8cB%(22
+6cc
m4mF#m
4U<]aes@wEI|$
*.6]
%1IAY
<CJQ
%/9CLYfpz
!%)-03
#'*159=1
#&*.
11GGGGG1
GGGG
GGGGGG
1GGG
GGGGGGG
GGGGG
!)G+
GG11CCCCC1
CCCC
CCCCCC
1CCC
CCCCCCC
CCCCC
!)C+
CC77
44WWWWW4
WWWW
WWWWWW
4WWW
WWWWWW
WWWWW
$,W.
WW00MMMMM0
MMMM
MMMMMM
0MMM
MMMMMMM
MMMMM
 (M*
MM00MMMMM0
MMMM
MMMMMM
0MMM
MMMMMMM
MMMMM
 (M*
MM00MMMMM0
MMMM
MMMMMM
0MMM
MMMMMMM
MMMMM
 (M*
MM00MMMMM0
MMMM
MMMMMM
0MMM
MMMMMMM
MMMMM
 (M*
MM00MMMMM0
MMMM
MMMMMM
0MMM
MMMMMMM
MMMMM
 (M*
MM00MMMMM0
MMMM
MMMMMM
0MMM
MMMMMMM
MMMMM
 (M*
MM00MMMMM0
MMMM
MMMMMM
0MMM
MMMMMMM
MMMMM
 (M*
RRRRR@
5555')
    3':`
`````@``F`H
J..`P`` 
````````````
::::
#++++
(+++
"(.4:@
 &,28>
58=@C
KPUX[^cf
 >>#'*.159
:CMY
dioR
"-DO_
'*-0369<?BEHKN
QTW[^adgjnr
 "$&(
!$(,048<@DHLPT
"/QQ
FORM
4?MY
CCCC!%*1
%)-159/
1111111111
11 $(,
!%)-
ESKLNS
em{o
*[ehuzODDUN
_~~~
*;MTX
Pf""
."'k
&-4;
$M\j$
99999
TTTThTTmTr9TT>>TTwCCTTTTHT|
~~~TT~~~~c~~~YY~~~^^~

 /$22222222222'
$09D
 f+?O
 #'+/63
!l)<lHlU
3DDDDDDDD3MDDQDDDDDDDDDDDDDDDDDD3bjnr
DDDDDDDDDDDDDDDDDDDDDDDDDD
'4FNWZ
CUez
```````
````
68^`
`"%:
(+0,/P
PPPPPPP
PPPP
258N;
!*U7UG
XXXX
aaa')
R]i~~~r
3AIQZbkt}
x<Nxxxxxxg
06Lk
%3AO]en
!*2:
/22b
^[\t\ ]*#[\t\ ]*(import|include)[^"<]*(["<][^">]*[">])
     
111111
/999999999
-Bax
s/s/s/s/s/s/s/s/s/s/
'Z-n-
(6(L(
E A(A(A(r A(
 A(A(
i(i(Z!m!i(i(i(
!i(i(i(
!i(i(i(
0/)/)
0/)/)/)/)1
)M5^5q5
a&n&
(#1#{
D#M#
/(B(
C)N)Y)e)
,Pu
#)*=*
#Y*p*
$$$$
$$$$(
P$P$> Q P$P$P$d P$P$P$w 
 P$P$
 P$P$P$
$3.N.
$b.r.
k2y2
q"z"^
7-J-
(%(1(
/b&b&b&b&
T/T/T/T/T/T/T/T/T/T/T/T/
h+h+
",",!
",",f
I,I,h
I,I,
l,l,l,
l,l,l,
l,l,
l,l,l,)
-& 4 
-I ^ s 
K-s"
"K-K-K-
"K-K-K-
#'#4#A#N#
c-c-c-c-c-c-^
c-c-c-c-v
"'"3"
+/+/
c!c!c!
c!c!c!'
*D`q
#pragma-messages
#warnings
CFString-literal
IndependentClass-attribute
NSObject-attribute
absolute-value
abstract-final-class
abstract-vbase-init
address
address-of-packed-member
address-of-temporary
aggregate-return
aix-compat
align-mismatch
alloca
alloca-with-align-alignof
always-inline-coroutine
ambiguous-delete
ambiguous-ellipsis
ambiguous-macro
ambiguous-member-template
ambiguous-reversed-operator
analyzer-incompatible-plugin
anon-enum-enum-conversion
anonymous-pack-parens
apinotes
arc%arc-bridge-casts-disallowed-in-nonarc
arc-maybe-repeated-use-of-weak
arc-non-pod-memaccess
arc-performSelector-leaks
arc-repeated-use-of-weak
arc-retain-cycles
arc-unsafe-retained-assign
argument-outside-range
argument-undefined-behaviourarray-bounds
array-bounds-pointer-arithmetic
array-parameter
asm-operand-widths
assign-enum
assume
at-protocol
atimport-in-framework-header
atomic-access
atomic-alignment
atomic-implicit-seq-cst
atomic-memory-ordering
atomic-properties*atomic-property-with-user-defined-accessor
attribute-packed-for-bitfield
attribute-warning
attributes
auto-disable-vptr-sanitizer
auto-import
auto-storage-class
auto-var-idavailability
avr-rtlib-linking-quirks
backend-plugin
backslash-newline-escape
bad-function-cast
binary-literal
bind-to-temporary-copy
binding-in-condition
bit-int-extension
bitfield-constant-conversion
bitfield-enum-conversion
bitfield-width
bitwise-conditional-parentheses
bitwise-instead-of-logical
bitwise-op-parentheses
block-capture-autoreleasing
bool-conversion
bool-conversions
bool-operation*bounds-attributes-cxx-experimental-ignored$bounds-attributes-extern-array-countBbounds-attributes-implicit-conversion-single-to-explicit-indexable'bounds-attributes-init-list-side-effect+bounds-attributes-objc-experimental-ignored+bounds-safety-init-list-null-non-zero-count2bounds-safety-single-to-indexable-bounds-truncated
braced-scalar-init
branch-protection
bridge-cast builtin-assume-aligned-alignment
builtin-macro-redefined
builtin-memcpy-chk-size
builtin-requires-header
c++-compatc++0x-compat
c++0x-extensions
c++0x-narrowingc++11-compat(c++11-compat-deprecated-writable-strings
c++11-compat-pedantic*c++11-compat-reserved-user-defined-literal
c++11-extensions
c++11-extra-semi
c++11-inline-namespace
c++11-long-long
c++11-narrowing
c++14-attribute-extensions
c++14-binary-literalc++14-compat
c++14-compat-pedantic
c++14-extensions
c++17-attribute-extensionsc++17-compat
c++17-compat-mangling
c++17-compat-pedantic
c++17-extensions
c++1y-extensionsc++1z-compat
c++1z-compat-mangling
c++1z-extensions
c++20-attribute-extensionsc++20-compat
c++20-compat-pedantic
c++20-designator
c++20-extensionsc++2a-compat
c++2a-compat-pedantic
c++2a-extensions
c++2b-extensions
c++98-c++11-c++14-c++17-compat'c++98-c++11-c++14-c++17-compat-pedantic
c++98-c++11-c++14-compat!c++98-c++11-c++14-compat-pedantic
c++98-c++11-compat!c++98-c++11-compat-binary-literal
c++98-c++11-compat-pedanticc++98-compat#c++98-compat-bind-to-temporary-copy
c++98-compat-extra-semi%c++98-compat-local-type-template-args
c++98-compat-pedantic'c++98-compat-unnamed-type-template-args
c11-extensions
c2x-compat
c2x-extensions
c99-compat
c99-designator
c99-extensions#call-to-pure-virtual-from-ctor-dtor
called-once-parameter
cast-align
cast-calling-convention
cast-function-type
cast-of-sel-type
cast-qual
cast-qual-unrelated
char-align
char-subscripts
clang-cacheclang-cl-pch
class-conversion
class-varargs
cmse-union-leak
comma
comment
comments
compare-distinct-pointer-types
compile-job-cache
compile-job-cache-hit
compile-job-cache-miss
compile-job-cache-timing
completion-handler
complex-component-init
compound-token-split
compound-token-split-by-macro
compound-token-split-by-space
concepts-ts-compat
conditional-type-mismatch
conditional-uninitialized
config-macros
constant-conversion
constant-evaluated
constant-logical-operand
constexpr-not-const
consumed
conversion
conversion-null$coro-non-aligned-allocation-funciton
coroutine%coroutine-missing-unhandled-exception
covered-switch-default
cstring-format-directive
ctad-maybe-unsupported
ctor-dtor-privacy
cuda-compat
custom-atomic-properties
cxx-attribute-extension
dangling
dangling-else
dangling-fielddangling-gsl
dangling-initializer-list
darwin-sdk-settings
date-time
dealloc-in-category
debug-compression-unavailable
declaration-after-statement
defaulted-function-deleted
delegating-ctor-cycles delete-abstract-non-virtual-dtor
delete-incomplete$delete-non-abstract-non-virtual-dtor
delete-non-virtual-dtor#delimited-escape-sequence-extension
deprecate-lax-vec-conv-all
deprecated
deprecated-altivec-src-compat$deprecated-anon-enum-enum-conversion
deprecated-array-compare
deprecated-attributes
deprecated-builtins
deprecated-comma-subscript
deprecated-copy
deprecated-copy-dtor
deprecated-copy-with-dtor'deprecated-copy-with-user-provided-copy'deprecated-copy-with-user-provided-dtor
deprecated-coroutine
deprecated-declarations!deprecated-dynamic-exception-spec
deprecated-enum-compare#deprecated-enum-compare-conditional
deprecated-enum-enum-conversion deprecated-enum-float-conversion!deprecated-experimental-coroutine
deprecated-implementations
deprecated-increment-bool
deprecated-non-prototype
deprecated-objc-isa-usage%deprecated-objc-pointer-introspection5deprecated-objc-pointer-introspection-performSelector
deprecated-pragma
deprecated-register
deprecated-static-analyzer-flag
deprecated-this-capture
deprecated-type
deprecated-volatile
deprecated-writable-strings
direct-ivar-access
disabled-macro-expansion
disabled-optimizationdiscard-qual
distributed-object-modifiers
div-by-zero
division-by-zero
dll-attribute-on-redeclaration%dllexport-explicit-instantiation-decl
dllimport-static-field-def
documentation
documentation-deprecated-sync
documentation-html
documentation-pedantic
documentation-unknown-command
dollar-in-identifier-extension
double-promotion
dtor-namedtor-typedef
duplicate-decl-specifier
duplicate-enum
duplicate-method-arg
duplicate-method-match
duplicate-protocol
dynamic-class-memaccess
dynamic-exception-spec
effc++
elaborated-enum-base
elaborated-enum-class
embedded-directive
empty-body
empty-decomposition
empty-init-stmt
empty-translation-unit
encode-typeendif-labelsenum-compare
enum-compare-conditional
enum-compare-switch
enum-constexpr-conversion
enum-conversion
enum-enum-conversion
enum-float-conversion
enum-too-large
exceptions
excess-initializers
exit-time-destructors
expansion-to-defined
explicit-initialize-call
explicit-ownership-type
export-unnamed
export-using-directive
extern-c-compat
extern-initializer
extra
extra-qualification
extra-semi
extra-semi-stmtextra-tokens
final-dtor-non-final-class
final-macro
firebloom-incomplete-array firebloom-init-list-partial-null
firebloom-single-to-count
fixed-enum-extension
fixed-point-overflow
flag-enum
flexible-array-extensions
float-conversion
float-equal
float-overflow-conversion
float-zero-conversion
for-loop-analysis
format
format-extra-args
format-insufficient-args
format-invalid-specifier
format-non-iso
format-nonliteral
format-pedantic
format-security
format-type-confusion
format-y2k
format-zero-length
format=2
fortify-source
four-char-constants
frame-address
frame-larger-than
frame-larger-than=%framework-include-private-from-public
free-nonheap-object
function-def-in-objc-container
function-multiversionfuse-ld-path
future-attribute-extensions
future-compat
gcc-compat
global-constructors
global-isel
gnu-alignof-expression
gnu-anonymous-struct
gnu-array-member-paren-init
gnu-auto-type
gnu-binary-literal
gnu-case-range
gnu-complex-integer gnu-compound-literal-initializer
gnu-conditional-omitted-operand
gnu-designator
gnu-empty-initializer
gnu-empty-struct
gnu-flexible-array-initializer
gnu-flexible-array-union-member
gnu-folding-constant
gnu-imaginary-constant
gnu-include-next
gnu-inline-cpp-without-extern
gnu-label-as-value
gnu-line-marker
gnu-null-pointer-arithmetic
gnu-pointer-arith
gnu-redeclared-enum
gnu-statement-expression-gnu-statement-expression-from-macro-expansion
gnu-static-float-init$gnu-string-literal-operator-template
gnu-union-cast"gnu-variable-sized-type-not-at-end
gnu-zero-line-directive!gnu-zero-variadic-macro-arguments
gpu-maybe-wrong-sideheader-guard
header-hygiene
hip-only
hlsl-extensions
idiomatic-parentheses
ignored-attributes)ignored-availability-without-sdk-settings
ignored-optimization-argument
ignored-pragma-intrinsic
ignored-pragma-optimize
ignored-pragmas
ignored-qualifiers
ignored-reference-qualifiers
implicit
implicit-atomic-properties#implicit-const-int-float-conversion*implicit-conversion-floating-point-to-bool implicit-exception-spec-mismatch
implicit-fallthrough!implicit-fallthrough-per-function
implicit-fixed-point-conversion
implicit-float-conversion
implicit-function-declarationimplicit-int
implicit-int-conversion
implicit-int-float-conversion
implicit-retain-self
implicitly-unsigned-literal
import&import-preprocessor-directive-pedantic
inaccessible-base
include-next-absolute-path
include-next-outside-header
incompatible-exception-spec#incompatible-function-pointer-types"incompatible-library-redeclaration
incompatible-ms-struct
incompatible-pointer-types.incompatible-pointer-types-discards-qualifiers
incompatible-property-type
incompatible-sysroot'incomplete-framework-module-declaration
incomplete-implementation
incomplete-module
incomplete-setjmp-declaration
incomplete-umbrella
inconsistent-dllimport(inconsistent-missing-destructor-override
inconsistent-missing-override
increment-bool
index-store
infinite-recursion
init-self
initializer-overrides
injected-class-name
inline
inline-asm#inline-namespace-reopened-noninline
inline-new-delete"instantiation-after-specialization
int-conversion
int-conversions
int-in-bool-context
int-to-pointer-cast
int-to-void-pointer-cast
integer-overflow
interrupt-service-routine
invalid-command-line-argument
invalid-constexpr
invalid-iboutlet&invalid-initializer-from-system-header
invalid-ios-deployment-target
invalid-no-builtin-names
invalid-noreturn
invalid-offsetof invalid-or-nonexistent-directory
invalid-partial-specialization
invalid-pch
invalid-pp-token
invalid-source-encoding
invalid-token-pasteinvalid-utf8
jump-seh-finally
keyword-compat
keyword-macro
knr-promoted-parameter
language-extension-token
large-by-value-copy
liblto
linker-warnings
literal-conversion
literal-range
local-type-template-args
logical-not-parentheses
logical-op-parentheses
long-long
loop-analysis
macro-redefined
main
main-return-type
malformed-warning-check
many-braces-around-scalar-init
max-tokens
max-unsigned-zero
memset-transposed-args
memsize-comparison
method-signatures
microsoft
microsoft-abstract
microsoft-anon-tag
microsoft-cast
microsoft-charize
microsoft-comment-paste
microsoft-const-init
microsoft-cpp-macro"microsoft-default-arg-redefinition
microsoft-drectve-section
microsoft-end-of-file microsoft-enum-forward-reference
microsoft-enum-value
microsoft-exception-spec
microsoft-exists#microsoft-explicit-constructor-call
microsoft-extra-qualification
microsoft-fixed-enum
microsoft-flexible-array
microsoft-goto
microsoft-inaccessible-base
microsoft-include
microsoft-mutable-reference
microsoft-pure-definition
microsoft-redeclare-static
microsoft-sealed
microsoft-static-assert
microsoft-template
microsoft-template-shadow microsoft-union-member-reference
microsoft-unqualified-friend
microsoft-using-decl
microsoft-void-pseudo-dtor
misexpect
misleading-indentation
mismatched-new-delete
mismatched-parameter-types
mismatched-return-types
mismatched-tags
missing-braces
missing-constinit
missing-declarations
missing-exception-spec
missing-field-initializers
missing-format-attribute
missing-include-dirs
missing-method-return-type
missing-noescape
missing-noreturn
missing-prototype-for-cc
missing-prototypes
missing-selector-name
missing-sysroot
missing-variable-declarations
misspelled-assumptionmodule-build
module-conflict
module-file-config-mismatch
module-file-extension
module-import
module-import-in-extern-c
module-include-translation
module-lock"modules-ambiguous-internal-linkage
modules-import-nested-redundant
most
movemsvc-include
msvc-not-found
multichar
multiple-move-vbase
narrowing
nested-anon-types
nested-externs
new-returns-null
newline-eof
noderef
noexcept-type
non-c-typedef-for-linkage
non-gcc
non-literal-null-conversion'non-modular-include-in-framework-module
non-modular-include-in-module
non-pod-varargs
non-power-of-two-alignment
non-virtual-dtor
nonnull
nonportable-cfstrings
nonportable-include-path!nonportable-private-apinotes-path(nonportable-private-system-apinotes-path
nonportable-system-include-path!nonportable-vector-initialization
nontrivial-memaccess
nsconsumed-mismatch
nsreturns-mismatch
null-arithmetic
null-character
null-conversion
null-dereference
null-pointer-arithmetic
null-pointer-subtraction
nullability
nullability-completeness"nullability-completeness-on-arrays
nullability-declspec
nullability-extension#nullability-inferred-on-nested-type
nullable-to-nonnull-conversion+objc-autosynthesis-property-ivar-name-match
objc-bool-constant-conversion
objc-boxing
objc-circular-container
objc-cocoa-api
objc-designated-initializers
objc-dictionary-duplicate-keys
objc-flexible-array
objc-forward-class-redefinition
objc-interface-ivars
objc-literal-compare
objc-literal-conversion
objc-load-method
objc-macro-redefinition
objc-messaging-id
objc-method-access
objc-missing-property-synthesis
objc-missing-super-calls
objc-multiple-method-names"objc-noncopy-retain-block-property
objc-nonunified-exceptions#objc-property-assign-on-object-type
objc-property-implementation
objc-property-implicit-mismatch*objc-property-matches-cocoa-ownership-rule
objc-property-no-attribute
objc-property-synthesis#objc-protocol-method-implementation objc-protocol-property-synthesis
objc-protocol-qualifiers"objc-readonly-with-setter-property
objc-redundant-api-use
objc-redundant-literal-use
objc-root-class
objc-signed-char-bool/objc-signed-char-bool-implicit-float-conversion-objc-signed-char-bool-implicit-int-conversion
objc-string-compare
objc-string-concatenation
objc-unsafe-perform-selector
objc-weak-compat
old-style-cast
old-style-definition
opencl-unsupported-rgba
openmp
openmp-51-extensions
openmp-clauses
openmp-loop-form
openmp-mapping
openmp-target
option-ignored!ordered-compare-function-pointers
ossharedptr-misuse
out-of-line-declaration
out-of-scope-functionover-aligned
overflow
overlength-strings
overloaded-shift-op-parentheses
overloaded-virtual
override-init
override-module
overriding-method-mismatch
overriding-t-option
packed
padded
parentheses
parentheses-equality
partial-availability
pass
pass-analysis
pass-failed
pass-missed
pch-date-time
pedantic
pedantic-core-features
pedantic-macros
pessimizing-move
pointer-arith
pointer-bool-conversion
pointer-compare
pointer-integer-comparepointer-sign
pointer-to-enum-cast
pointer-to-int-cast
pointer-type-mismatch
poison-system-directories
potentially-direct-selector potentially-evaluated-expression
pragma-clang-attribute
pragma-once-outside-header
pragma-pack
pragma-pack-suspicious-include#pragma-system-header-outside-header
pragmas
pre-c++14-compat
pre-c++14-compat-pedantic
pre-c++17-compat
pre-c++17-compat-pedantic
pre-c++20-compat
pre-c++20-compat-pedantic
pre-c++2b-compat
pre-c++2b-compat-pedantic
pre-c2x-compat
pre-c2x-compat-pedantic
pre-openmp-51-compat&predefined-identifier-outside-function
private-extern
private-header
private-module
profile-instr-missing
profile-instr-out-of-date
profile-instr-unprofiled
property-access-dot-syntax
property-attribute-mismatch
protocol%protocol-property-synthesis-ambiguity
psabi
ptrauth-null-pointers
qualified-void-return-type"quoted-include-in-framework-header
range-loop-analysis
range-loop-bind-reference
range-loop-construct
read-only-types
readonly-iboutlet-property
receiver-expr
receiver-forward-class
redeclared-class-member
redundant-consteval-if
redundant-decls
redundant-move
redundant-parens
register
reinterpret-base-class
remark-backend-plugin
reorderreorder-ctor
reorder-init-list
reproducible-caching
requires-super-attribute
reserved-id-macro
reserved-identifier
reserved-macro-identifier
reserved-user-defined-literal
restrict-expansion
retained-language-linkage
return-stack-address
return-std-move
return-type
return-type-c-linkage
rewrite-not-bool
round-trip-cc1-args
rtti
sanitize-address
sarif-format-unstable
search-path-usage
section
selector
selector-type-mismatch
self-assign
self-assign-field
self-assign-overloaded
self-move
semicolon-before-method-body
sentinel
sequence-point
serialized-diagnostics
shadow
shadow-allshadow-field
shadow-field-in-constructor$shadow-field-in-constructor-modified
shadow-ivar
shadow-uncaptured-local
shift-count-negative
shift-count-overflow
shift-negative-value
shift-op-parentheses
shift-overflow
shift-sign-overflow
shorten-64-to-32sign-compare
sign-conversion
sign-promo
signed-enum-bitfield
signed-unsigned-wchar'single-bit-bitfield-constant-conversion
sizeof-array-argument
sizeof-array-decay
sizeof-array-div
sizeof-pointer-div
sizeof-pointer-memaccess
slash-u-filenameslh-asm-goto
sometimes-uninitialized
source-mgr
source-uses-openmp
spir-compatspirv-compat
stack-exhausted
stack-protector
static-float-init
static-in-inline$static-inline-explicit-instantiation
static-local-in-inline
static-self-init
stdlibcxx-not-found
strict-aliasing
strict-aliasing=0
strict-aliasing=1
strict-aliasing=2
strict-overflow
strict-overflow=0
strict-overflow=1
strict-overflow=2
strict-overflow=3
strict-overflow=4
strict-overflow=5"strict-potentially-direct-selector
strict-prototypes
strict-selector-match
string-compare
string-concatenation
string-conversion
string-plus-char
string-plus-int
strlcpy-strlcat-sizestrncat-size
suggest-destructor-override
suggest-override
super-class-method-mismatch
suspicious-bzero
suspicious-memaccess
swift-name-attribute
swift-newtype-attribute
switch
switch-bool
switch-default
switch-enum%sync-fetch-and-nand-semantics-changed
synth
target-clones-mixed-specifiers
tautological-bitwise-compare
tautological-compare
tautological-constant-compare&tautological-constant-in-range-compare*tautological-constant-out-of-range-compare
tautological-objc-bool-compare
tautological-overlap-compare
tautological-pointer-compare
tautological-type-limit-compare
tautological-undefined-compare'tautological-unsigned-char-zero-compare'tautological-unsigned-enum-zero-compare"tautological-unsigned-zero-compare tautological-value-range-compare
tcb-enforcement$tentative-definition-incomplete-type
thread-safety
thread-safety-analysis
thread-safety-attributes
thread-safety-beta
thread-safety-negative
thread-safety-precise
thread-safety-reference
thread-safety-verbose
trigraphs
type-limits
type-safety
typed-memory-inference-failure
typedef-redefinition
typename-missing
typeof-bitfield
unable-to-open-stats-file
unaligned-access!unaligned-qualifier-implicit-cast
unavailable-declarations
undeclared-selector
undefundef-prefix
undefined-arm-streaming
undefined-bool-conversion
undefined-func-template
undefined-inline
undefined-internal
undefined-internal-type
undefined-reinterpret-cast
undefined-var-template
underaligned-exception-object
unevaluated-expression
unguarded-availability
unguarded-availability-new
unicode
unicode-homoglyph
unicode-whitespace
unicode-zero-width
uninitialized
uninitialized-const-reference
unknown-argument
unknown-assumption
unknown-attributes
unknown-cuda-version
unknown-directives
unknown-escape-sequence
unknown-pragmas
unknown-sanitizers
unknown-warning-option
unnamed-type-template-args
unneeded-internal-declaration
unneeded-member-function
unqualified-std-cast-call
unreachable-code
unreachable-code-aggressive
unreachable-code-break
unreachable-code-fallthrough
unreachable-code-generic-assoc
unreachable-code-loop-increment
unreachable-code-return
unsafe-buffer-usage
unsequenced
unsupported-abi
unsupported-abs
unsupported-availability-guard
unsupported-cb#unsupported-dll-base-class-template
unsupported-floating-point-opt
unsupported-friend
unsupported-gpopt
unsupported-nan
unsupported-target-opt
unsupported-visibility
unusable-partial-specialization
unused
unused-argument
unused-but-set-parameter
unused-but-set-variable
unused-command-line-argument
unused-comparison
unused-const-variable
unused-exception-parameter
unused-function
unused-getter-return-valueunused-label
unused-lambda-capture
unused-local-typedef
unused-local-typedefs
unused-macros
unused-member-function
unused-parameter
unused-private-field
unused-property-ivar
unused-result
unused-templateunused-value
unused-variable
unused-volatile-lvalue
used-but-marked-unused
user-defined-literals
user-defined-warnings
varargs
variadic-macros
vec-elem-size
vector-conversion
vector-conversionsvexing-parse
visibility
vla-extension
void-pointer-to-enum-cast
void-pointer-to-int-cast
void-ptr-dereference
volatile-register-var
wasm-exception-spec
weak-template-vtablesweak-vtables
writable-strings
write-strings
xor-used-as-pow
zero-as-null-pointer-constant
zero-length-array
API notes file not found at '%0'
NSInvocation's %0 is not safe to be used with an object with ownership other than __unsafe_unretained
invalid type %0 in asm %select{input|output}1
invalid type %0 in asm input for constraint '%1'
%0 attribute cannot be applied to types
uuid attribute contains a malformed GUID
cannot open file '%0': %1
%select{pointer|reference}0 to %select{|subobject of }1%select{type_info object|string literal|temporary object|predefined '%3' variable}2 is not allowed in a template argument
'size_t' suffix for literals is a C++2b feature
only special member functions %select{|and comparison operators }0may be defaulted
only functions can have deleted definitions
duplicate '%0' declaration specifier
enumeration cannot be a template
expected %0
expected %1 after %0
method name referenced in property setter attribute must end with ':'
expected %0 or %1
expected namespace name
expected string literal %select{in %1|for diagnostic message in static_assert|for optional message in 'availability' attribute|for %select{language name|source container name|USR}1 in 'external_source_symbol' attribute}0
file '%0' modified since it was first processed
sorry, unsupported: file '%0' is too large for Clang to process
compile with '-ffixed-point' to enable fixed point types
'%0' is invalid in friend declarations
sorry, this include generates a translation unit too large for Clang to process.
integer literal is too large to be represented in any %select{signed |}0integer type
character literal with user-defined suffix cannot be used here
invalid feature combination: %0
%select{data member |non-public member function |static member function |user-declared constructor|user-declared destructor|operator |nested class }0%1 is not permitted within an interface type
numeric literal with user-defined suffix cannot be used here
invalid storage class specifier in function declarator
string literal with user-defined suffix cannot be used here
'%0' can only be used if the target supports the mfhc1 and mthc1 instructions
module '%0' is needed but has not been provided, and implicit use of module files is disabled
build a shadowed submodule '%0'
cyclic dependency in module '%0': %1
no handler registered for module format '%0'
%select{|umbrella }0header '%1' not found
could not build module '%0'
module '%0' not found
error in loading module '%0' from prebuilt module path
cannot rebuild module '%0' as it is already finalized
import of shadowed module '%0'
module '%0' %select{is incompatible with|requires}1 feature '%2'
an inline asm block cannot have an operand which is a bit-field
[rewriter] %0
nullability specifier %0 conflicts with existing specifier %1
directive '#pragma omp %0' cannot contain more than one '%1' clause%select{| with '%3' name modifier| with 'source' dependence}2
directive '#pragma omp %0' requires the '%1' clause
options %0 and %1 are set to different values
feature %0 requires support of %1 feature
%0 does not support the '%1' %select{type qualifier|storage class specifier}2
'%0' is not supported in C++ for OpenCL
option '%0' cannot be specified on this target
option '%0' cannot be specified with '%1'
option '%0' cannot be specified without '%1'
redefinition of parameter %0
%0 only allowed in __except block or filter expression
%0 only allowed in __except filter expression
%0 only allowed in __finally block
expected '__except' or '__finally' block
%select{signed |}0'size_t' literal is out of range of possible %select{signed |}0'size_t' values
unknown target ABI '%0'
unknown target CPU '%0'
unknown FP unit '%0'
unknown target triple '%0', please use -triple or -arch
ABI '%0' is not supported on CPU '%1'
ABI '%0' is not supported for '%1'
micromips is not supported for target CPU '%0'
execute only is not supported for the %0 sub-architecture
the '%0' unit is not supported with this instruction set
-mcmse is not supported for %0
hardware TLS register is not supported for the %0 sub-architecture
the %0 sub-architecture does not support unaligned accesses
this value is too large for this fixed point type
unable to make temporary file: %0
unable to rename temporary '%0' to output file '%1': '%2'
conversion between fixed point and %0 is not yet supported
no analyzer checkers or packages are associated with '%0'
'%0' can only be used with the '%1' ABI
%0 byte order mark detected in '%1', but encoding is not supported
must use '%1' tag to refer to type %0%select{| in this scope}2
'_BitInt' suffix for literals is a C2x extension
'long long' is an extension when C99 mode is not enabled
'diagnose_if' is a clang extension
'enable_if' is a clang extension
'long long' is a C++11 extension
'size_t' suffix for literals is a C++2b extension
duplicate '%0' declaration specifier
integer literal is too large to be represented in a signed integer type, interpreting as unsigned
integer literal is too large to be represented in type 'long' and is subject to undefined behavior under C++98, interpreting as 'unsigned long'; this literal will %select{have type 'long long'|be ill-formed}0 in C++11 onwards
variadic templates are a C++11 extension
duplicate '%0' declaration specifier
too many errors emitted, stopping now
also found
%select{pointer|reference}0 to %select{|subobject of }1%select{type_info object|string literal|temporary object|predefined '%3' variable}2 is not allowed in a template argument
%1 %0 is hidden by a non-type declaration of %0 here
declared here
previous case defined here
forward declaration of %0
subexpression not valid in a constant expression
to match this %0
[rewriter] %0
one possibility
#pragma entered here
previous declaration is here
previous definition is here
previous implicit declaration is here
previous use is here
use -analyzer-disable-all-checks to disable all static analyzer checkers
definition of %0 is not complete until the closing '}'
using
valid target CPU values are: %0
could not acquire lock file for module '%0': %1
timed out waiting to acquire lock file for module '%0'
private API notes file for module '%0' should be named '%0_private.apinotes', not '%1'
private API notes file for module '%0' should be named '%0_private.apinotes', not '%1'
[rewriter] call returns pointer to GC managed memory; it will become unmanaged in ARC
%0 attribute ignored
'_BitInt' suffix for literals is incompatible with C standards before C2x
conflicting nullability specifier on parameter types, %0 conflicts with existing specifier %1
conflicting nullability specifier on return types, %0 conflicts with existing specifier %1
'consteval' specifier is incompatible with C++ standards before C++20
'size_t' suffix for literals is incompatible with C++ standards before C++2b
'long long' is incompatible with C++98
variadic templates are incompatible with C++98
duplicate definition of category %1 on interface %0
duplicate '%0' declaration specifier
'%0' is ignored since it is only supported for HIP
'-mbranch-protection=' option is incompatible with the '%0' architecture
redeclaration of method parameter %0
redefinition of method parameter %0
type specifier missing, defaults to 'int'
[rewriter] %0
duplicate nullability specifier %0
integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C89; this literal will %select{have type 'long long'|be ill-formed}0 in C99 onwards
integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C++98; this literal will %select{have type 'long long'|be ill-formed}0 in C++11 onwards
%0 is a core feature in %select{OpenCL C|C++ for OpenCL}1 version %2 but not supported on this target
include location '%0' is unsafe for cross-compilation
speculative load hardening does not protect functions with asm goto
unable to protect inline asm that clobbers stack pointer against stack clash
stack nearly exhausted; compilation time may suffer, and crashes due to stack overflow are likely
ignoring the 'branch-protection' attribute because the '%0' architecture does not support it
unknown attribute %0 ignored
The default Altivec ABI on AIX is not yet supported, use '-mabi=vec-extabi' for the extended Altivec ABI
TLS model '%0' is not yet supported on AIX
checker cannot be enabled with analyzer option '%0' == %1
invalid input for checker option '%0', that expects %1
checker '%0' has no option called '%1'
invalid input for analyzer-config option '%0', that expects %1 value
analyzer-config option '%0' should contain only one '='
analyzer-config option '%0' has a key but no value
unknown analyzer-config '%0'
analyzer constraint manager 'z3' is only available if LLVM was built with -DLLVM_ENABLE_Z3_SOLVER=ON
-fobjc-arc is not supported on platforms using the legacy runtime
-fobjc-arc is not supported on versions of OS X prior to 10.6
architecture '%0' does not support '%1' execution mode
original arguments parse failed, then succeeded in round-trip
generated arguments do not match in round-trip
generated arguments parse failed in round-trip
minimum vscale must be an unsigned integer greater than 0
cmse is not compatible with %select{RWPI|ROPI}0
CPU '%0' does not support '%1' execution mode
'%0' not supported, please use -iquote instead
cannot deduce implicit triple value for -Xopenmp-target, specify triple using -Xopenmp-target=<triple>
alignment is not a power of 2 in '%0'
invalid argument '-mno-amdgpu-ieee' only allowed with relaxed NaN handling
option '%0' requires input to be LLVM bitcode
invalid argument '%0' not allowed with '%1'
invalid argument '%0' only allowed with '%1'
invalid offload arch combinations: '%0' and '%1' (for a specific processor, a feature should either exist in all offload archs, or not exist in any offload archs)
invalid target ID '%0'; format is a processor name followed by an optional colon-delimited list of features followed by an enable/disable sign (e.g., 'gfx908:sramecc+:xnack-')
-fembed-bitcode is not supported on versions of iOS prior to 6.0
cannot specify '%1' along with '%0'
cannot read randomize layout seed file '%0'
cannot read configuration file '%0'
unable to open CC_PRINT_OPTIONS file: %0
the clang compiler does not support '%0'
the clang compiler does not support '%0' for C++ on Darwin/i386
the clang compiler does not support '%0', %1
the clang compiler does not support -pg option on %select{Darwin|versions of OS X 10.9 and later}0
%0 command failed with exit code %1 (use -v to see invocation)
unable to execute command: %0
%0 command failed due to signal (use -v to see invocation)
compilation database '%0' could not be opened: %1
configuration file '%0' does not exist
configuration file '%0' cannot be found
conflicting deployment targets, both '%0' and '%1' are present in environment
unsupported CUDA gpu architecture: %0
unsupported architecture '%0' for host compilation
CUDA offload target is supported only along with --emit-llvm
GPU arch %0 is supported by CUDA versions between %1 and %2 (inclusive), but installation at %3 is %4; use '--cuda-path' to specify a different CUDA install, pass a different GPU arch with '--cuda-gpu-arch', or pass '--no-cuda-version-check'
SDK does not contain 'libarclite' at the path '%0'; try increasing the minimum deployment target
defsym must be of the form: sym=value: %0
value is not an integer: %0
no more than one option '--config' is allowed
target profile option (-T) is missing
-emit-llvm cannot be used when linking
failed to expand response file: %0
'-fopenmp-targets' must be used in conjunction with a '-fopenmp' option compatible with offloading; e.g., '-fopenmp=libomp' or '-fopenmp=libiomp5'
header file '%0' input '%1' does not match the type of prior input in api extraction; use '-x %2' to override
failed to deduce triple for target architecture '%0'; specify the triple using '-fopenmp-targets' and '-Xopenmp-target' instead.
failing because %select{environment variable 'FORCE_CLANG_DIAGNOSTICS_CRASH' is set|'-gen-reproducer' is used}0
GNUstep Objective-C runtime version %0 incompatible with target binary format
multiple inputs are not valid for header units (first extra '%0')
'--hip-path' must be specified when offloading to SPIR-V%select{| unless %1 is given}0.
HLSL code generation is unsupported for target '%0'
OpenMP target architecture '%0' pointer size is incompatible with host '%1'
--rtlib=libgcc requires --unwindlib=libgcc
passing input files is incompatible with '-fcas-include-tree'
invalid Xarch argument: '%0', options requiring arguments are unsupported
invalid -Xopenmp-target argument: '%0', options requiring arguments are unsupported
invalid arch name '%0'
invalid argument '%0' to -%1
invalid CoreFoundation Runtime ABI '%0'; must be one of 'objc', 'standalone', 'swift', 'swift-5.0', 'swift-4.2', 'swift-4.1'
invalid Darwin version number: %0
invalid argument in '%0', only integer or 'auto' is supported
invalid argument in '%0', only integers are supported
invalid profile : %0
invalid validator version : %0
If validator major version is 0, minor version must also be 0.
invalid validator version : %0
Format of validator version is "<major>.<minor>" (ex:"1.4").
'%0' does not contain a GCC installation
invalid output type '%0' for use with gcc tool
invalid integral value '%1' in '%0'
invalid linker name in argument '%0'
invalid argument '%0' to -malign-branch=; each element must be one of: %1
invalid float ABI '%0'
invalid thread pointer reading mode '%0'
OBJECT_MODE setting %0 is not recognized and is not a valid setting
OpenMP target is invalid: '%0'
invalid or unsupported offload target: '%0'
invalid OS value '%0' in '%1'
cannot use '%0' output with multiple -arch options
invalid validator version : %0
Validator version must be less than or equal to current internal version.
invalid option '%0' not of the form <from-file>;<to-file>
invalid arch name '%0', %1
invalid runtime library name in argument '%0'
invalid library name in argument '%0'
'-msve-vector-bits' is not supported without SVE enabled
invalid thread model '%0' in '%1' for this target
invalid unwind library name in argument '%0'
invalid value '%1' in '%0'
invalid value '%1' in '%0', expected one of: %2
invalid version number in '%0'
LTO requires -fuse-ld=lld
malformed sanitizer coverage allowlist: '%0'
malformed sanitizer coverage ignorelist: '%0'
malformed sanitizer ignorelist: '%0'
option '-MG' requires '-M' or '-MM'
'-fminimize-whitespace' invalid for input of type %0
missing argument to '%0'
argument to '%0' is missing (expected %1 value%s1)
missing sanitizer ignorelist: '%0'
mixed CUDA and HIP compilation is not supported
header file '%0' input type '%1' does not match type of prior input in module compilation; use '-x %2' to override
option '-fmodules-validate-once-per-build-session' requires '-fbuild-session-timestamp=<seconds since Epoch>' or '-fbuild-session-file=<file>'
%0 requires HVX, use -mhvx/-mhvx= to enable it
%0 is not supported on HVX %1
invalid value '%1' in '%0', value must be 'none' or a positive integer
option '--config' is not allowed inside configuration file
'%0': unable to use AST files with this tool
cannot find CUDA installation; provide its path via '--cuda-path', or pass '-nocudainc' to build without CUDA includes
cannot find libdevice for %0; provide path to different CUDA installation via '--cuda-path', or pass '-nocudalib' to build without linking with libdevice
cannot find HIP runtime; provide its path via '--rocm-path', or pass '-nogpuinc' to build without HIP runtime
cannot find HIP device library%select{| for %1}0; provide its path via '--hip-path' or '--hip-device-lib-path', or pass '-nogpulib' to build without HIP device library
no input files
'%0': unable to pass LLVM bit-code files to linker
'%0': unable to use module files with this tool
[no]neon is not accepted as modifier, please use [no]simd instead
cannot find ROCm device library%select{| for %1|for ABI version %1}0; provide its path via '--rocm-path' or '--rocm-device-lib-path', or pass '-nogpulib' to build without ROCm device library
no such file or directory: '%0'
no such file or directory: '%0'; did you mean '%1'?
unsupported %0 gpu architecture: %1
provided host compiler IR file '%0' is required to generate code for OpenMP target regions but cannot be found
target '%0' is not a supported OpenMP host target
bitcode library '%0' does not exist
NVPTX target requires CUDA 9.2 or above; CUDA %0 detected
no library '%0' found in the default clang lib directory or in LIBRARY_PATH; use '--libomptarget-%1-bc-path' to specify %1 bitcode library
only one offload target is supported
unknown remark serializer format: '%0'
in pattern '%1': %0
cannot use '%0' without using '%1'
cannot specify '%0%1' when compiling multiple source files
cannot specify -o when generating multiple output files
incorrect format for -preamble-bytes=N,END
environment variable CC_PRINT_HEADERS_%select{FORMAT|FILTERING}0 has invalid value %1
unsupported combination: CC_PRINT_HEADERS_FORMAT=%0 and CC_PRINT_HEADERS_FILTERING=%1
unsupported combination: -header-include-format=%0 and -header-include-filtering=%1
target '%0' does not support native pointer authentication
%0 is unsupported with RISC-V linker relaxation (-mrelax)
ROPI is not compatible with c++
embedded and GOT-based position independence are incompatible
invalid value '%1' in '%0', value must be '%2' or greater
'%0' is used without '-mstack-protector-guard-offset', and there is no default
unsupported '%0' value '%1'; use 'ios-macabi' instead
'-ftrivial-auto-var-init-stop-after=*' only accepts positive integers
'-ftrivial-auto-var-init-stop-after=*' is used without '-ftrivial-auto-var-init=zero' or '-ftrivial-auto-var-init=pattern'
unable to remove file: %0
unable to set working directory: %0
cannot determine AMDGPU architecture: %0; consider passing it via '--march'
unknown argument: '%0'
unknown argument '%0'; did you mean '%1'?
unknown '-mindirect-jump=' option '%0'
language not recognized: '%0'
unknown or ill-formed Objective-C runtime '%0'
-E or -x required when input is from standard input
use /Tc or /Tp to set input type for standard input
%0 is not supported with -fembed-bitcode
the second argument of '-fpatchable-function-entry' must be smaller than the first argument
'-mindirect-jump=%0' is unsupported with the '%1' architecture
position-independent code requires '-mabicalls'
unsupported option '%0'
unsupported option '%0' for language mode '%1'
unsupported option '%0' for target '%1'
unsupported option '%0'; did you mean '%1'?
unsupported argument '%1' to option '-%0'
unsupported runtime library '%0' for platform '%1'
static UndefinedBehaviorSanitizer runtime is not supported on darwin
invalid C++ ABI name '%0'
32-bit targets are not supported when building for Mac Catalyst
%select{C++20|Modules TS}0 modules require the -fmodules-local-submodule-visibility -cc1 option
there is no external assembler that can be used on this platform
-fobjc-weak is not supported on the current deployment target
-fobjc-weak is not supported in Objective-C garbage collection
-mharden-sls is only supported on armv7-a or later
'-fsanitize=memtag-stack' requires hardware support (+memtag). For Armv8 or Armv9, try compiling with -march=armv8a+memtag or -march=armv9a+memtag
the target architecture '%0' is not supported by the target '%1'
-ftest-module-file-extension argument '%0' is not of the required form 'blockname:major:minor:hashed:user info'
C++ ABI '%0' is not supported on target triple '%1'
generated arguments #%0 in round-trip: %1
original arguments in round-trip: %0
AddressSanitizer doesn't support linking with debug runtime libraries yet
diagnostic msg: %0
was searched for in the directory: %0
the last '/TC' or '/TP' option takes precedence over earlier instances
use '%0'%select{| or '%3'|, '%3', or '%4'|, '%3', '%4', or '%5'}2 for '%1' standard
-verify prefixes must start with a letter and contain only alphanumeric characters, hyphens, and underscores
use '--' to treat subsequent arguments as filenames
generated arguments #%0 in round-trip: %1
-O4 is equivalent to -O3
analyzer option '%0' is deprecated. This flag will be removed in %1, and passing this option will be an error.
ignoring -fapple-kext which is valid for C++ and Objective-C++ only
cannot compress debug sections (%0 not enabled)
unknown platform, assuming -mfloat-abi=%0
support for linking stdlibs for microcontroller '%0' is not implemented
no avr-libc installation can be found on the system, cannot link standard libraries
support for passing the data section address to the linker for microcontroller '%0' is not implemented
no target microcontroller specified on command line, cannot link standard libraries, please pass -mmcu=<mcu name>
standard library not linked and so no interrupt vector table or compiler runtime routines will be linked
the clang compiler does not support '%0'
compiler_rt-static.a is being deprecated, please use -fapple-link-rtlib instead. Clang will substitute -lcompiler_rt-static with libclang_rt.a
SDK settings were ignored as 'SDKSettings.json' could not be parsed
argument '%0' is deprecated, use '%1' instead
libstdc++ is deprecated; move to libc++%select{ with a minimum deployment target of %1|}0
argument '%0' requires profile-guided optimization information
argument '%0' requires profile-guided optimization information
implicitly disabling vptr sanitizer because rtti wasn't enabled
debug information option '%0' is not supported; requires DWARF-%2 but target '%1' only provides DWARF-%3
joined argument expects additional value: '%0'
option '-ffine-grained-bitfield-accesses' cannot be enabled together with a sanitizer; flag ignored
-fjmc works only for ELF; option ignored
'-fuse-ld=' taking a path is deprecated; use '--ld-path=' instead
-fglobal-isel support for the '%0' architecture is incomplete
-fglobal-isel support is incomplete for this architecture at the current optimization level
%0: '%1' input unused%select{ when '%3' is present|}2
%0: '%1' input unused in cpp mode
ignoring invalid /arch: argument '%0'; for %select{64|32}1-bit expected one of %2
%0 requires debug info. Use %1 or debug options that enable debugger's stepping function; option ignored
include path for libstdc++ headers not found; pass '-stdlib=libc++' on the command line to use the libc++ standard library instead
missing plugin argument for plugin %0 in %1
missing plugin name in %0
'%0' does not support '-%1'; flag ignored
'%0' does not support '-moutline'; flag ignored
the given MCU supports %0 hardware multiply, but '-mhwmult' is set to %1
no MCU device specified, but '-mhwmult' is set to 'auto', assuming no hardware multiply; use '-mmcu' to specify an MSP430 device, or '-mhwmult' to set the hardware multiply type explicitly
the given MCU does not support hardware multiply, but '-mhwmult' is set to %0
unable to find a Visual Studio installation; try running Clang from a developer command prompt
%0 requires HVX, use -mhvx/-mhvx= to enable it
CUDA version%0 is newer than the latest%select{| partially}1 supported version %2
the object size sanitizer has no effect at -O0, but is explicitly enabled: %0
OpenMP offloading target '%0' is similar to target '%1' already specified; will be ignored
optimization level '%0' is not supported; using '%1%2' instead
overriding '%0' option with '%1'
CUDA version %0 is only partially supported
precompiled header '%0' was ignored because '%1' is not first '-include'
joined argument treated as '%0'; did you mean '%1'?
%0: previously preprocessed input%select{ unused when '%2' is present|}1
option '%0' was ignored by the %1 toolchain, using '-fPIC'
environment variable '%0' is set, but points to invalid or nonexistent directory '%1'
diagnostic formatting in SARIF mode is currently unstable
treating '%0' input as '%1' when in C++ mode, this behavior is deprecated
unable to find %0 directory, expected to be in '%1'
unknown argument ignored in clang-cl: '%0'
unknown argument ignored in clang-cl '%0'; did you mean '%1'?
debug information option '%0' is not supported for target '%1'
float ABI '%0' is not supported by current library
ignoring '-mgpopt' option as it cannot be used with %select{|the implicit usage of }0-mabicalls
ignoring '-mlong-calls' option as it is not currently supported with %select{|the implicit usage of }0-mabicalls
optimization flag '%0' is not supported for target '%1'
ignoring '%0' option for offload arch '%1' as it is not currently supported there. Use it with an offload arch containing '%2' instead
ignoring '%0' option as it is not currently supported for target '%1'
ignoring '%0' option as it cannot be used with %select{implicit usage of|}1 -mabicalls and the N64 ABI
ignoring '-msmall-data-limit=' with -mcmodel=large for -fpic or RV64
argument unused during compilation: '%0'
'-x %0' after last input file has no effect
support for '/Yc' with more than one source file not implemented yet; flag ignored
support for '/Yc' and '/Yu' with different filenames not implemented yet; flags ignored
the flag '%0' has been deprecated and will be ignored
optimization flag '%0' is not supported
ignoring -fdiscard-value-names for LLVM Bitcode
ignoring invalid -ftabstop value '%0', using default value %1
ignoring -fverify-debuginfo-preserve-export=%0 because -fverify-debuginfo-preserve wasn't enabled
using sysroot for '%0' but targeting '%1'
invalid iOS deployment version '%0', iOS 10 is the maximum deployment target for 32-bit targets
no such sysroot directory: '%0'
'/U%0' treated as the '/U' option
/arm64EC has been overridden by specified target: %0; option ignored
ignoring '-mabs=2008' option because the '%0' architecture does not support it
ignoring '-mabs=legacy' option because the '%0' architecture does not support it
ignoring '-mcompact-branches=' option because the '%0' architecture does not support it
ignoring extension '%0' because the '%1' architecture does not support it
ignoring '-mnan=2008' option because the '%0' architecture does not support it
ignoring '-mnan=legacy' option because the '%0' architecture does not support it
invalid branch protection option '%0' in '%1'
%select{alias|ifunc}0 must point to a defined %select{variable or |}1function
AVX vector %select{return|argument}0 of type %1 without '%2' enabled changes the ABI
%0 needs target feature %1
%select{alias|ifunc}0 definition is part of a cycle
definition with same mangled name '%0' as another definition
file '%0' specified by '--extract-api-ignores=' not found
action %0 not compiled in
call to %0 declared with 'error' attribute: %1
-dependency-file requires at least one -MT or -MQ option
error in backend: %0
error opening '%0': %1
error reading '%0'
error reading stdin: %0
error writing '%0': %1
expected a clang compiler command
unable to handle compilation, expected exactly one compiler job in '%0'
'%0' is incompatible with remote caching backend
invalid value '%1' in '%0'; alignment must be a power of 2
cannot locate code-completion file %0
invalid exception model '%select{none|sjlj|seh|dwarf|wasm}0' for target '%1'
unable to find plugin '%0'
environment variable 'SOURCE_DATE_EPOCH' ('%0') must be a non-negative decimal integer <= %1
cannot link module '%0': %1
no suitable precompiled header file found in directory '%0'
could not remap from missing file '%0'
could not remap file '%0' to the contents of file '%1'
unable to create target: '%0'
unable to interface with target machine
unable to load basic block sections function list: '%0'
unable to load the CAS include-tree '%0': '%1'
unable to load PCH file
unable to load plugin '%0': '%1'
unable to open output file '%0': '%1'
initializing value is out of valid range
always_inline function %1 requires target feature '%2', but would be inlined into function %0 that is compiled without support for '%2'
header module compilation requires '-fmodules', '-std=c++20', or '-fmodules-ts'
hidden visibility cannot be applied to 'dllexport' declaration
ifunc resolver function must return a pointer
option 'ffp-eval-method' cannot be used with option %select{'fapprox-func'|'mreassociate'|'freciprocal'}0
inline asm is used in the module with -fno-gnu-inline-asm
invalid virtual filesystem overlay file '%0'
invalid stat cache file '%0'
no module named '%0' declared in module map file '%1'
no module named '%0' declared in include-tree module map '%1'
no module name provided; specify one with -fmodule-name=
virtual filesystem overlay file '%0' not found
stat cache file '%0' not found
module compilation requires '-fmodules'
cannot create includes file for module %0: %1
module header file '%0' not found
module interface compilation requires '-std=c++20' or '-fmodules-ts'
module map file '%0' not found
file '%0' specified by '-fmodules-embed-file=' not found
-fapinotes was provided without -fmodules-cache-path=<directory>
no submodule named %0 in module '%1'
no submodule named %0 in module '%1'; did you mean '%2'?
non-default visibility cannot be applied to 'dllimport' declaration
must specify system root with -isysroot when building a relocatable PCH file
test module file extension '%0' has different version (%1.%2) than expected (%3.%4)
unable to load a node from the CAS include-tree: '%0'
reference to marker '%0' is ambiguous
'%0' diagnostics %select{expected|seen}1 but not %select{seen|expected}1: %2
invalid expected %0: %1
%select{expected|'expected-no-diagnostics'}0 directive cannot follow %select{'expected-no-diagnostics' directive|other expected directives}0
invalid range following '-' in expected %0
cannot find end ('}}') of expected %0
file '%0' could not be located in expected %1
missing or invalid line number following '@' in expected %0
cannot find start of regex ('{{') in %0
cannot find start ('{{') of expected %0
no expected directives found: consider use of 'expected-no-diagnostics'
use of undefined marker '%0'
qualifier 'const' is needed for variables in address space '%0'
firebloom is supported only for C language
could not determine the original source location for %0:%1:%2
instantiated into assembly here
linking module '%0': %1
FIX-IT applied suggested code changes
FIX-IT unable to apply suggested code changes
FIX-IT unable to apply suggested code changes in a macro
FIX-IT detected an error it cannot fix
current API version is '%0', but plugin was compiled with version '%1'
macro was %select{defined|#undef'd}0 here
module imported here
module defined here
ambiguous marker '%0' is defined here
%0; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop. If the arrays will always be independent specify '#pragma clang loop vectorize(assume_safety)' before the loop or provide the '__restrict__' qualifier with the independent array arguments. Erroneous results will occur if these options are incorrectly applied!
%0; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'.
producing index data for module file '%0'
building module '%0' as '%1'
finished building module '%0'
locking '%0' to build module '%1'
%select{alias|ifunc}2 will always resolve to %0 even if weak definition of %1 is overridden
%select{alias|ifunc}1 will not be in section '%0' but in the same section as the %select{aliasee|resolver}2
misaligned atomic operation may incur significant performance penalty; the expected alignment (%0 bytes) exceeds the actual alignment (%1 bytes)
large atomic operation may incur significant performance penalty; the access size (%0 bytes) exceeds the max lock-free size (%1  bytes)
AVX vector %select{return|argument}0 of type %1 without '%2' enabled changes the ABI
-fbounds-attributes-cxx-experimental without -fbounds-attributes is ignored
-fbounds-attributes-objc-experimental without -fbounds-attributes is ignored
feature flag '%0' must start with either '+' to enable the feature or '-' to disable it; flag ignored
overriding currently unsupported use of floating point exceptions on this target
overriding currently unsupported rounding mode on this target
call to %0 declared with 'warning' attribute: %1
unable to open CC_LOG_DIAGNOSTICS file: %0 (using stderr)
unable to open CC_PRINT_HEADERS file: %0 (using stderr)
-fconcepts-ts is deprecated - use '-std=c++20' for Concepts support
stack frame size (%0) exceeds limit (%1) in '%2'
linking module '%0': %1
macro '%0' contains embedded newline; text after the newline is ignored
overriding the module target triple with %0
unable to open file %0 for serializing diagnostics (%1)
Received warning after diagnostic serialization teardown was underway: %0
unable to merge a subprocess's serialized diagnostics
unable to open statistics output file '%0': '%1'
FIX-IT detected errors it could not fix; no output will be generated
checker plugin '%0' is not compatible with this version of the analyzer
missing submodule '%0'
%select{definition|#undef}0 of configuration macro '%1' has no effect on the import of '%2'; pass '%select{-D%1=...|-U%1}0' on the command line to configure the module
module file %0 cannot be loaded due to a configuration mismatch with the current compilation
no submodule named %0 in module '%1'; using top level '%2'
%0 does not support the option '%1'
Potential performance regression from use of __builtin_expect(): Annotation was correct on %0 of profiled executions.
profile data may be incomplete: of %0 function%s0, %1 %plural{1:has|:have}1 no data
profile data may be out of date: of %0 function%s0, %1 %plural{1:has|:have}1 mismatched data that will be ignored
no profile data available for file "%0"
unknown %select{warning|remark}0 option '%1'%select{|; did you mean '%3'?}2
unknown %0 warning specifier: '%1'
file '%1' is not a valid precompiled %select{PCH|module|AST}0 file
%select{PCH|module|AST}0 file '%1' not found%select{|: %3}2
%select{PCH|module|AST}0 file '%1' is out of date and needs to be rebuilt%select{|: %3}2
file '%0' has been modified since the %select{precompiled header|module file|AST file}1 '%2' was built: %select{size|mtime|content}3 changed%select{| (was %5, now %6)}4
input is not a PCH file: '%0'
file '%0' from the precompiled header has been overridden
malformed or corrupted AST file: '%0'
malformed block record in PCH file: '%0'
unable to read PCH file %0: '%1'
module '%0' %select{in|imported by}4 AST file '%1' found in a different module map file (%2) than when the importing AST file was built (%3)
module '%0' in AST file '%1' %select{(imported by AST file '%2') |}4is not defined in any loaded module map file; maybe you need to load '%3'?
module '%0' was built in directory '%1' but now resides in directory '%2'
module '%0' %select{uses|does not use}1 additional module map '%2'%select{| not}1 used when the module was built
module '%0' is defined in both '%1' and '%2'
module file '%0' is missing its top-level submodule
AST file '%0' was not built as a module
cannot emit module %0: %select{size|mtime}1 must be explicitly specified for missing header file "%2"
instantiation of %q0 is different in different modules
%q0 from module '%1' is not present in definition of %q2%select{ in module '%4'| provided earlier}3
failed to hash content for '%0' because memory buffer cannot be retrieved
%0 is currently enabled, but was not in the PCH file
PCH file built from a different branch (%0) than the compiler (%1)
%0 was %select{disabled|enabled}1 in PCH file but is currently %select{disabled|enabled}2
%0 differs in PCH file vs. current file
definition of macro '%0' differs between the precompiled header ('%1') and the command line ('%2')
macro '%0' was %select{defined|undef'd}1 in the precompiled header but %select{undef'd|defined}1 on the command line
PCH was compiled with module cache path '%0', but the path is currently '%1'
%select{command line contains|precompiled header was built with}0 '-detailed-preprocessing-record' but %select{precompiled header was not built with it|it is not present on the command line}0
%select{AST file was|current translation unit is}0 compiled with the target feature '%1' but the %select{current translation unit is|AST file was}0 not
PCH file was compiled for the %0 '%1' but the current translation unit is being compiled for target '%2'
%select{command line contains|precompiled header was built with}0 '-undef' but %select{precompiled header was not built with it|it is not present on the command line}0
PCH file uses a newer PCH format that cannot be read
PCH file uses an older PCH format that is no longer supported
PCH file contains compiler errors
consider adding '%0' to the header search path
after modifying system headers, please delete the module cache at '%0'
this is generally caused by modules with the same name found in multiple paths
imported by %select{|module '%2' in }1'%0'
definition has no member %0
declaration of %0 does not match
please rebuild precompiled header '%0'
'%0' required by '%1'
importing module '%0'%select{| into '%3'}2 from '%1'
duplicate module file extension block name '%0'
module file '%0' was validated as a system module and is now being imported as a non-system module; any difference in diagnostic options will be ignored
%select{precompiled header|module}0 uses __DATE__ or __TIME__
backslash and newline separated by space
_Pragma takes a parenthesized string literal
illegal character encoding in character literal
illegal character encoding in string literal
unexpected character <U+%0>
character <U+%0> not allowed %select{in|at the start of}1 an identifier
character too large for enclosing character literal type
version control conflict marker in file
'defined' cannot be used as a macro name
delimited escape sequence cannot be empty
invalid digit '%0' in escape sequence
expected '{' after '\%0' escape sequence
could not find ';' after @import
unexpected extra tokens at end of @import declaration
digit separator cannot appear at %select{start|end}0 of digit sequence
embedding a #%0 directive within macro arguments is not supported
%select{hex|octal}0 escape sequence out of range
expected a module name in '__building_module' expression
exponent has no digits
builtin feature check macro requires a parenthesized identifier
header file %0 (aka '%1') cannot be imported because it is not known to be a header unit
semicolon terminating header import declaration cannot be produced by a macro
hexadecimal floating %select{constant|literal}0 requires %select{an exponent|a significand}1
\%0 used with no following hex digits
'__FLT_EVAL_METHOD__' cannot be expanded inside a scope containing '#pragma clang fp eval_method'
invalid character '%0' character in raw string delimiter; use PREFIX( )PREFIX to delimit raw string
invalid argument to convert to character
invalid digit '%0' in %select{decimal|octal|binary}1 constant
invalid suffix '%0' on %select{integer|floating|fixed-point}1 constant
'%0' is not a valid Unicode character name
source file is not valid UTF-8
failure when lexing a character literal
failure when lexing a numeric literal
failure when lexing a string literal
configuration macros are only allowed in top-level modules
conflicting re-export of module '%0' as '%1' or '%2'
header attribute '%0' specified multiple times
expected an attribute name
expected configuration macro name after ','
expected ',' after conflicting module name
expected a message describing the conflict with '%0'
only '*' can be exported from an inferred submodule
expected a feature name
expected a header name after '%0'
expected a header attribute name ('size' or 'mtime')
expected %select{module exclusion with 'exclude'|'export *'}0
expected '{' to start module '%0'
expected '{' to start inferred submodule
expected %select{library|framework}0 name as a string
expected umbrella, header, submodule, or module export
expected a module map file name
expected module declaration
expected module name
expected '}'
expected ']' to close attribute
inferred framework modules cannot be 'explicit'
'explicit' is not permitted on top-level modules
inferred submodule cannot be a framework submodule
inferred submodules require a module with an umbrella
redefinition of inferred submodule
expected integer literal as value for header attribute '%0'
expected excluded module name
no module named '%0' in '%1'
no module named '%0' visible from '%1'
no module named '%0' %select{found|in '%2'}1, parent module must be defined before the submodule
expected a module name or '*'
redefinition of module '%0'
qualified module name can only be used to define modules at the top level
only top-level modules can be re-exported as public
only submodules and framework modules may be inferred with wildcard syntax
umbrella for module '%0' already covers this directory
skipping stray token
use declarations are only allowed in top-level modules
%select{wide|Unicode}0 character literals may not contain multiple characters
Pascal string is too long
'##' cannot appear at end of macro expansion
'##' cannot appear at start of macro expansion
editor placeholder in source file
expected 'set(attr1 [attr2 ...])'
expected 'begin' or 'end'
expected 'begin' or 'end'
pasting formed '%0', an invalid preprocessing token
':' without preceding '?'
%0 must be used within a preprocessing directive
division by zero in preprocessor expression
already inside '#pragma clang arc_cf_code_audited'
already inside '#pragma clang assume_nonnull'
already inside '#pragma unsafe_buffer_usage'
duplicate macro parameter name %0
empty filename
encountered non-reproducible token, caching failed
#endif without #if
'#pragma clang arc_cf_code_audited' was not ended within this file
'#pragma clang assume_nonnull' was not ended within this file
error opening file '%0': %1
missing %1 after %0
expected comma in macro parameter list
expected end of line in preprocessor expression
expected identifier in macro parameter list
expected %select{identifier after '.' in |}0module name
expected ')' in preprocessor expression
expected value in expression
expected "FILENAME" or <FILENAME>
token is not a valid binary operator in a preprocessor subexpression
function-like macro %0 is not defined
invalid token at start of a preprocessor expression
'%0' file not found
'%0' file not found with <angled> %select{include|import}1; use "quotes" instead
'%0' file not found, did you mean '%1'?
cannot convert %0 token to an identifier
floating point literal in preprocessor expression
#import of type library is an unsupported Microsoft feature
cannot %select{#include files|import headers}0 inside '#pragma clang arc_cf_code_audited'
cannot %select{#include files|import headers}0 inside '#pragma clang assume_nonnull'
#include nested too deeply
main file cannot be included recursively when building a preamble
invalid preprocessing directive%select{|, did you mean '#%1'?}0
can only poison identifier tokens
invalid token in macro parameter list
%select{character|integer}0 literal with user-defined suffix cannot be used in preprocessor constant expression
%select{#line|GNU line marker}0 directive requires a simple digit sequence
invalid filename for #line directive
#line directive requires a positive integer argument
invalid filename for line marker directive
invalid flag line marker directive
invalid line marker flag '2': cannot pop empty include stack
line marker directive requires a positive integer argument
macro name must be an identifier
invalid #ident directive
missing '(' following __VA_OPT__
macro name missing
no module named '%0' declared in include-tree module map
missing ')' in macro parameter list
no module map available for module %0
submodule %0.%1 not declared in module map
no matching '#pragma clang module end' for this '#pragma clang module begin'
must specify '-fmodule-name=%0' to enter %select{|submodule of }1this module%select{ (current module is %3)|}2
no matching '#pragma clang module endbuild' for this '#pragma clang module build'
no matching '#pragma clang module begin' for this '#pragma clang module end'
nested parentheses not permitted in %0
C++ operator %0 (aka %1) used as a macro name
#pragma hdrstop not seen while attempting to use precompiled header
Expected 'begin' or 'end'
remainder by zero in preprocessor expression
'%select{#|#@}0' is not followed by a macro parameter
'%0' required for precompiled header not found
#include of '%0' not seen while attempting to %select{create|use}1 precompiled header
'#pragma unsafe_buffer_usage' was not ended
not currently inside '#pragma unsafe_buffer_usage'
not currently inside '#pragma clang arc_cf_code_audited'
not currently inside '#pragma clang assume_nonnull'
unterminated conditional directive
attempt to use a poisoned identifier
__VA_OPT__ cannot be nested within its own replacement tokens
no macro named %0
pragma %select{message|warning|error}0 requires parenthesized string
pragma %0 requires a parenthesized string
raw string delimiter longer than 16 characters; use PREFIX( )PREFIX to delimit raw string
differing user-defined suffixes ('%0' and '%1') in string literal concatenation
too few arguments provided to function-like macro invocation
too many arguments provided to function-like macro invocation
universal character name refers to a control character
character '%0' cannot be specified by a universal character name
incomplete universal character name
invalid universal character
module %0 does not depend on a module exporting '%1'
unsupported non-standard concatenation of string literals
unterminated function-like macro invocation
missing terminating ')' character
unterminated /* comment
raw string missing terminating delimiter )%0"
'##' cannot appear at end of __VA_OPT__ argument
'##' cannot appear at start of __VA_OPT__ argument
escaped newline between */ characters at block comment end
binary integer literals are a GNU extension
binary integer literals are a C++14 extension
use of a '#%select{<BUG IF SEEN>|elifdef|elifndef}0' directive is a C2x extension
ISO C99 requires whitespace after the macro name
charizing operator #@ is a Microsoft extension
pasting two '/' tokens into a '//' comment is a Microsoft extension
treating Ctrl-Z as end-of-file is a Microsoft extension
use of a '#%select{<BUG IF SEEN>|elifdef|elifndef}0' directive is a C++2b extension
%select{delimited|named}0 escape sequences are a %select{Clang|C++2b}1 extension
'$' in identifier
embedding a directive within macro arguments has undefined behavior
empty character constant
empty macro arguments are a C99 feature
hexadecimal floating constants are a C99 feature
hexadecimal floating literals are a C++17 feature
// comments are not allowed in this language
must specify at least one argument for '...' parameter of variadic macro
whitespace required after macro name
invalid suffix on literal; C++11 requires a space between literal and identifier
multi-line // comment
named variadic macros are a GNU extension
no newline at end of file
use of non-standard escape character '\%0'
expected 'ON' or 'OFF' or 'DEFAULT' in pragma
token pasting of ',' and __VA_ARGS__ is a GNU extension
pasting formed '%0', an invalid preprocessing token
__VA_ARGS__ can only appear in the expansion of a C99 variadic macro
__VA_OPT__ can only appear in the expansion of a variadic macro
comma operator in operand of #if
extra tokens at end of #%0 directive
this style of line directive is a GNU extension
#ident is a language extension
#import is a language extension
#include_next is a language extension
#include resolved using non-portable Microsoft search rules as: %0
C requires #line number to be less than %0, allowed as extension
#line directive with zero argument is a GNU extension
%0 macro redefined
variadic macros are a Clang extension in OpenCL
C++ operator %0 (aka %1) used as a macro name
redefining builtin macro
undefining builtin macro
#warning is a %select{C2x|C++2b}0 extension
expected end of directive in pragma
invalid suffix on literal; C++11 requires a space between literal and identifier
string literal of length %0 exceeds maximum length %1 that %select{C90|ISO C99|C++}2 compilers are required to support
extension used
treating Unicode character as whitespace
unknown escape sequence '\%0'
missing terminating %select{'|'"'}0 character
variadic macros are a C99 feature
%0 is defined here; did you mean %1?
submodule of top-level module '%0' implicitly imported here
cannot use initializer list at the beginning of a macro argument
did you mean %0 ('%2' U+%1)?
characters names in Unicode escape sequences are sensitive to case and whitespaces
expansion of macro %0 requested here
macro %0 defined here
use 'framework module' to declare module '%0'
to match this '{'
to match this ']'
previously defined here
rename '%0' to ensure it can be found by name
expanding this definition of %0
other definition of %0
did not find header '%0' in framework '%1' (loaded from '%2')
macro marked '%select{deprecated|restrict_expansion|final}0' here
entering module '%0' due to this pragma
parentheses are required around macro argument containing braced initializer list
did you mean to use '\u'?
null character(s) preserved in %select{char|string}0 literal
null character ignored
disabled expansion of recursive macro
%select{#elif|#elifdef|#elifndef}0 after #else
%select{#elif|#elifdef|#elifndef}0 without #if
#else after #else
#else without #if
the #__include_macros directive is only for internal use by -imacros
#include_next in file found relative to primary source file or found by absolute path; will search from start of include path
#include_next in primary source file; will search from start of include path
invalid string literal, ignoring final '\'
macro is not used
non-portable path to file '%0'; specified path differs in case from file name on disk
non-portable path to file '%0'; specified path differs in case from file name on disk
current file is older than dependency %0
poisoning existing macro
#pragma once in main file
#pragma system_header ignored in main file
treating #%select{include|import|include_next|__include_macros}0 as an import of module '%1'
search path used: '%0'
trigraph converted to '%0' character
trigraph ends block comment
trigraph ignored
ignored trigraph would end block comment
illegal character encoding in character literal
illegal character encoding in string literal
digit separators are incompatible with C standards before C2x
use of a '#%select{<BUG IF SEEN>|elifdef|elifndef}0' directive is incompatible with C standards before C2x
#warning is incompatible with C standards before C2x
'%0' is a keyword in C2x
%select{using this character in an identifier|starting an identifier with this character}0 is incompatible with C99
unicode literals are incompatible with C99
'%0' is a keyword in C99
character constant too long for its type
binary integer literals are incompatible with C++ standards before C++14
digit separators are incompatible with C++ standards before C++14
identifier after literal will be treated as a reserved user-defined literal suffix in C++11
identifier after literal will be treated as a user-defined literal suffix in C++11
'%0' is a keyword in C++11
unicode literals are incompatible with C++ standards before C++17
passing no argument for the '...' parameter of a variadic macro is incompatible with C++ standards before C++20
'<=>' operator is incompatible with C++ standards before C++20
hexadecimal floating literals are incompatible with C++ standards before C++17
'<=>' is a single token in C++20; add a space to avoid a change in behavior
'%0' is a keyword in C++20
use of a '#%select{<BUG IF SEEN>|elifdef|elifndef}0' directive is incompatible with C++ standards before C++2b
#warning is incompatible with C++ standards before C++2b
%select{delimited|named}0 escape sequences are incompatible with C++ standards before C++2b
empty macro arguments are incompatible with C++98
'<::' is treated as digraph '<:' (aka '[') followed by ':' in C++98
universal character name referring to a control character is incompatible with C++98
specifying character '%0' with a universal character name is incompatible with C++98
C++98 requires newline at end of file
#line number greater than 32767 is incompatible with C++98
raw string literals are incompatible with C++98
unicode literals are incompatible with C++98
variadic macros are incompatible with C++98
macro expansion producing 'defined' has undefined behavior
macro expansion producing 'defined' has undefined behavior
empty delimited universal character name; treating as '\' '%0' '{' '}'
incomplete delimited universal character name; treating as '\' '%0' '{' identifier
multi-character character constant
public framework header includes private framework header '%0'
__has_warning expected option name (e.g. "-Wundef")
%0 is used as a header guard here, followed by #define of a different macro
invalid UTF-8 in comment
whitespace recommended after macro name
skipping '%0' because module declaration of '%1' lacks the 'framework' qualifier
expected canonical name for private module '%0'
private submodule '%0' in private module map, expected top-level module
module '%0' already re-exported as '%1'
umbrella directory '%0' not found
unknown attribute '%0'
module '%0' conflicts with already-imported module '%1': %2
multi-character character constant
'/*' within block comment
no newline at end of file
include of non-modular header inside framework module '%0': '%1'
include of non-modular header inside module '%0': '%1'
ambiguous expansion of macro %0
%select{left|right}0 side of operator converted from negative value to unsigned: %1
expansion of date or time macro is not reproducible
encountered non-reproducible token, caching will be skipped
integer overflow in preprocessor expression
#pragma hdrstop filename not supported, /Fp can be used to specify precompiled header filename
invalid preprocessing directive%select{|, did you mean '#%1'?}0
%select{#line|GNU line marker}0 directive interprets number as decimal, not octal
definition of macro %0 does not match definition in precompiled header
keyword is hidden by macro definition
macro name is a reserved identifier
ignoring redefinition of Objective-C qualifier macro
%0 is not defined, evaluates to 0
%0 is not defined, evaluates to 0
missing argument to debug command '%0'
unexpected debug command '%0'
unknown module '%0'
macro %0 has been marked as deprecated%select{|: %2}1
pragma diagnostic pop could not pop, no matching push
pragma diagnostic expected 'error', 'warning', 'ignored', 'fatal', 'push', or 'pop'
pragma diagnostic expected option name (e.g. "-Wundef")
unexpected token in pragma diagnostic
unknown warning group '%0', ignored
#pragma execution_character_set expected '%0'
#pragma execution_character_set invalid value '%0', only 'UTF-8' is supported
#pragma execution_character_set expected 'push' or 'pop'
macro %0 has been marked as final and should not be %select{undefined|redefined}1
unknown pragma ignored
pragma include_alias expected '%0'
pragma include_alias expected include filename
angle-bracketed include <%0> cannot be aliased to double-quoted include "%1"
double-quoted include "%0" cannot be aliased to angle-bracketed include <%1>
pragma pop_macro could not pop '%0', no matching push_macro
macro %0 has been marked as unsafe for use in headers%select{|: %2}1
#pragma warning expected '%0'
#pragma warning expected a warning number
#pragma warning(push, level) requires a level between 0 and 4
#pragma warning expected 'push', 'pop', 'default', 'disable', 'error', 'once', 'suppress', 1, 2, 3, or 4
double-quoted include "%0" in framework header, expected angle-bracketed instead
incomplete universal character name; treating as '\' followed by identifier
\%0 used with no following hex digits; treating as '\' followed by identifier
universal character name refers to a surrogate character
universal character names are only valid in C99 or C++; treating as '\' followed by identifier
universal character names are only valid in C99 or C++
umbrella header for module '%0' does not include header '%1'
use of private header from outside its module: '%0'
treating Unicode character <U+%0> as identifier character rather than as '%1' symbol
identifier contains Unicode character <U+%0> that is invisible in some environments
interface types cannot specify '%select{private|protected}0' access
use of address-of-label extension outside of a function body
name defined in alias declaration must be an identifier
alias declaration cannot be a pack expansion
%select{partial specialization|explicit specialization|explicit instantiation}0 of alias templates is not permitted
anonymous bit-field cannot have a default member initializer
declaration of anonymous %0 must be a definition
ISO C++ only allows ':' in member enumeration declaration to introduce a fixed underlying type, not an anonymous bit-field
unknown cast annotation __bridge_retain; did you mean __bridge_retained?
argument required after attribute
duplicate asm qualifier '%0'
__asm used with no assembly instructions
cannot use %select{unicode|wide|an empty}0 string literal in 'asm'
expected 'volatile', 'inline', 'goto', or '('
@defs is not supported in Objective-C++
unexpected '@' in member specification
use of '@import' when modules are disabled
use of '@import' when C++ modules are disabled, consider using -fmodules and -fcxx-modules
attribute %0 does not support argument pack expansion
%0 attribute cannot be applied to a module import
%0 attribute cannot be applied to a module
parentheses must be omitted if %0 attribute's argument list is empty
misplaced attributes; expected attributes here
an attribute list cannot appear here
expected a platform name here
unrecognized platform name %0
expected 'introduced', 'deprecated', or 'obsoleted'
expected a platform name, e.g., 'macos'
version for '%0' already specified
'*' query has already been specified
must handle potential future platforms with '*'
redundant %0 availability change; only the last specified change will be used
%0 is not an availability stage; use 'introduced', 'deprecated', or 'obsoleted'
redeclaration of C++ built-in type 'bool'
bracket nesting level exceeded maximum of %0
brackets are not allowed here; to declare an array, place the brackets after the %select{identifier|name}0
'_Noreturn' keyword must precede function declarator
capture default must be first
template template parameter requires 'class'%select{| or 'typename'}0 after the parameter list
name defined in concept definition must be an identifier
missing return type for function %0; did you mean the constructor name %1?
missing ',' between base or member initializers
attribute %0 cannot have an argument list
attribute %0 cannot be used as an attribute pack
declaration does not declare a parameter
'%0' qualifier may not appear after the virtual specifier '%1'
unexpected end of default argument expression
'= %select{default|delete}0' is a function definition and must occur in a standalone declaration
default template argument for a template template parameter must be a class template
destructor name %0 does not refer to a template
expected a class name after '~' to name a destructor
'~' in destructor name should be after nested name specifier
duplicate 'virtual' in base specifier
class already marked '%0'
duplicate default generic association
class member already marked '%0'
cannot have both throw() and noexcept() clause on the same function
use of empty enum
a requires expression must contain at least one requirement
missing ',' between enumerators
unnamed enumeration must be a definition
unexpected end of exception specification
'#pragma omp end assumes' with no matching '#pragma omp begin assumes'
'#pragma omp end declare variant' with no matching '#pragma omp begin declare variant'
expected variable name or 'this' in lambda capture list
expected 'case' keyword before expression
expected catch
expected class name
'typename' is redundant; base classes are implicitly types
expected '::' after '__super'
expected ',' or '>' in template-parameter-list
expected ',' or ']' in lambda capture list
expected '#pragma omp end declare %select{target|variant}0'
expected '= constant-expression' or end of enumerator definition
expected '=' or another designator
expected expression
expected external declaration
expected a field designator, such as '.field = 4'
expected function body after function declarator
expected a foldable binary operator in fold expression
variable declaration in condition must have an initializer
variable declaration in condition cannot have a parenthesized initializer
expected body of lambda expression
expected '{' after base class list
expected '{' in compound literal
expected '<' after '%0'
expected '(' after '%0'
expected '(' for function-style cast or type construction
expected member name or ';' after declaration specifiers
expected member name or ';' after declaration specifiers; %0 is a keyword in Objective-C++
expected class member or base class name
expected method body
method type specifier must start with '-' or '+'
'@end' must appear in an Objective-C context
expected the name of a parameter pack
expected parentheses around type name in %0 expression
expected property name
expected ')' or ',' after '%0'
expected a qualified name after 'typename'
expected ')' after '%0'
expected selector for Objective-C method
expected HLSL Semantic identifier
expected ';' after attribute list
expected ';' after expression
expected ';' after method prototype
expected ';' after namespace name
expected ';' after '%0'
expected ';' after %0 statement
expected ';' at end of declaration list
expected ';' at end of declaration
expected ';' in 'for' statement specifier
expected ';' at end of requirement
expected an OpenMP 'directive' or 'sequence' attribute argument
expected 'this' following '*' in lambda capture list
expected statement
expected template
expected template parameter
expected %0; %1 is a keyword in Objective-C++
expected a type
expected an identifier or template-id after '::'
expected %select{identifier|unqualified-id}0
expected a version of the form 'major[.minor[.subminor]]'
expected 'while' in do/while loop
enumerations cannot be explicitly instantiated
explicit template instantiation cannot have a definition; if this definition is meant to be an explicit specialization, add '<>' after the 'template' keyword
explicit %select{specialization|instantiation}0 of %select{non-|undeclared }3template %1 %2
export declaration cannot be empty
duplicate %0 clause in an 'external_source_symbol' attribute
expected 'language', 'defined_in', 'generated_declaration', or 'USR'
extraneous closing brace ('}')
extraneous ')' after condition, expected a statement
extraneous '%0' before ';'
operators in fold expression must be the same
'co_await' modifier can only be applied to range-based for loop
for range declaration must declare a variable
range-based for loop requires type for loop variable
cannot define a type in a friend declaration
friend cannot be declared in an explicit instantiation; if this declaration is meant to be a friend declaration, remove the 'template' keyword
'friend' used outside of class
function definition does not declare parameters
function definition declared 'typedef'
function definition is not allowed here
unexpected %0 in function call; perhaps remove the %0?
function scope depth exceeded maximum of %0
meaningless '%0' on asm outside function
'module;' introducing a global module fragment can appear only at the start of the translation unit
GNU-style inline assembly is disabled
wrong argument format for hlsl attribute, use %0 instead
expected template name after 'template' keyword in nested name specifier
%0 declared as a reference to a reference
cannot cast 'super' (it isn't an expression)
module%select{| partition}0 imports cannot be in the %select{global|private}1 module fragment
imports must immediately follow the module declaration
array bound cannot be deduced from a default member initializer
initializer list cannot be used on the %select{left|right}0 hand side of operator '%1'
namespace alias cannot be inline
nested namespace definition cannot be 'inline'
invalid declaration inside %select{tbuffer|cbuffer}0
cannot use %select{dot|arrow}0 operator on a type
'%0' qualifier may not be applied to a reference
invalid %0 at end of declaration; did you mean '='?
expected ';' after top level declarator
invalid parameter name: '%0' is a keyword
C++11 only allows consecutive left square brackets when introducing an attribute
'[]' after delete interpreted as 'delete[]'; add parentheses to treat this as a lambda-expression
ellipsis in pack %select{|init-}0capture must appear %select{after|before}0 the name of the capture
multiple ellipses in pack capture
%select{'mutable'|'static'|'constexpr'|'consteval'}0 cannot appear multiple times in a lambda declarator
lambda template parameter list cannot be empty
string literal after 'operator' must be '""'
string literal after 'operator' cannot have an encoding prefix
'...' must %select{immediately precede declared identifier|be innermost component of anonymous pack declaration}0
expected %0 at end of module
@try statement without a @catch and @finally clause
C requires a comma prior to the ellipsis in a variadic function type
use 'template' keyword to treat '%0' as a dependent template name
missing '}' at end of definition of %q0
expected parameter declarator
found '<::' after a %select{template name|addrspace_cast|const_cast|dynamic_cast|reinterpret_cast|static_cast}0 which forms the digraph '<:' (aka '[') and a ':', did you mean '< ::'?
expected a module name after '%select{module|import}0'
expected ';' after module name
%select{global|private}0 module fragment cannot be exported
'__declspec' attributes are not enabled; use '-fdeclspec' or '-fms-extensions' to enable support for __declspec attributes
__declspec attributes must be an identifier or string literal
property declaration specifies '%0' accessor twice
expected name of accessor method
expected ',' or ')' at end of property accessor list
expected '=' after '%0'
putter for property must be specified as 'put', not 'set'
property declaration cannot have a default member initializer
missing 'get=' or 'put='
property does not specify a getter or a putter
expected 'get' or 'put' in property declaration
MS-style inline assembly is not available: %0
unsupported architecture '%0' for MS-style inline assembly
%select{|a template declaration|an explicit template specialization|an explicit template instantiation}0 can only %select{|declare|declare|instantiate}0 a single entity
namespaces can only be defined in global or namespace scope
parameter named %0 is missing
@%0 must be followed by a number to form an NSNumber object
unexpected token after Objective-C string
directive may only be specified in protocols only
expected '=' for Objective-C getter
expected '=' for Objective-C setter
unknown property attribute %0
expected selector for Objective-C %select{setter|getter}0
expected type parameter name
illegal interface qualifier
illegal visibility specification
missing '@end'
@implementation cannot have type parameters
postfix attributes are not allowed on Objective-C directives
postfix attributes are not allowed on Objective-C directives, place them in front of '%select{@interface|@protocol}0'
property name cannot be a bit-field
property requires fields to be named
protocol qualifiers must precede type arguments
'@end' appears where closing brace '}' is expected
prefix attribute must be followed by an interface, protocol, or implementation
expected an Objective-C directive after '@'
expected a related ObjectiveC class name, e.g., 'NSColor'
expected a class method selector with single argument, e.g., 'colorWithCGColor:'
unexpected '(', only 'to', 'link' or 'device_type' clauses expected for 'begin declare target' directive
function declaration is expected after 'declare %select{simd|variant}0' directive
unexpected '%0' clause, '%1' is specified already
only 'device_type(any)' clause is allowed with indirect clause
expected at least one %select{'to' or 'link'|'to', 'link' or 'indirect'}0 clause
%0 appears multiple times in clauses on the same declare target directive
unexpected '%0' clause, only %select{'device_type'|'to' or 'link'|'to', 'link' or 'device_type'|'device_type', 'indirect'|'to', 'link', 'device_type' or 'indirect'}1 clauses expected
unexpected clause after an implicit 'to' clause
nested OpenMP context selector contains duplicated trait '%0' in selector '%1' and set '%2' with different score
nested user conditions in OpenMP context selector not supported (yet)
expected %select{'match'|'match', 'adjust_args', or 'append_args'}0 clause on 'omp declare variant' directive
expected at least one clause on '#pragma omp %0' directive
missing ':' in %0
expected valid context selector in %0
expected '=' in iterator specifier
expected identifier specifying the name of the 'omp critical' directive
expected interop type: 'target' and/or 'targetsync'
expected ',' or ')' in '%0' %select{clause|directive}1
expected ',' after interop modifier
expected ',' or ')' after iterator specifier
expected identifier or one of the following operators: '+', '-', '*', '&', '|', '^', '&&', or '||'
'#pragma omp %0' %select{|with '%2' clause }1cannot be an immediate substatement
data-sharing attribute '%0' in '%1' clause requires OpenMP version %2 or above
missing map type
missing map type modifier
expected declarator on 'omp declare mapper' directive
illegal OpenMP user-defined mapper identifier
reserved locator 'omp_all_memory' requires 'out' or 'inout' dependency types
unexpected operation specified in 'append_args' clause, expected 'interop'
unexpected OpenMP clause '%0' in directive '#pragma omp %1'
unexpected OpenMP directive %select{|'#pragma omp %1'}0
expected an OpenMP directive
incorrect map type, expected one of 'to', 'from', 'tofrom', 'alloc', 'release', or 'delete'
incorrect map type modifier, expected one of: 'always', 'close', 'mapper'%select{|, 'present'}0%select{|, 'ompx_hold'}1
only a single match extension allowed per OpenMP context selector
^^ is a reserved operator in OpenCL
taking address of function is not allowed
virtual functions are not supported in C++ for OpenCL
out-of-line constructor for %0 cannot have template arguments
'%0' keyword not permitted with interface types
missing parentheses around the size of parameter pack %0
module partition imports must be within a module purview
expected 'auto' or 'decltype(auto)' after concept name
expression cannot be followed by a postfix %0 operator; add parentheses
duplicate attribute subject matcher '%0'
expected an attribute after '('
expected identifier that represents an attribute name
expected an attribute that is specified using the GNU, C++11 or '__declspec' syntax
expected '.' after pragma attribute namespace %0
expected 'push', 'pop', or '(' after '#pragma clang attribute'
expected an identifier that corresponds to an attribute subject rule
expected an identifier that corresponds to an attribute subject matcher sub-rule; '%0' matcher %select{does not support sub-rules|supports the following sub-rules: %2|}1
extra tokens after attribute in a '#pragma clang attribute push'
unexpected argument '%0' to '#pragma clang attribute'; expected 'push' or 'pop'
expected attribute subject set specifier 'apply_to'
namespace can only apply to 'push' or 'pop' directives
unknown attribute subject rule '%0'
%select{invalid use of|unknown}2 attribute subject matcher sub-rule '%0'; '%1' matcher %select{does not support sub-rules|supports the following sub-rules: %3}2
attribute %0 is not supported by '#pragma clang attribute'
force_cuda_host_device end pragma without matching force_cuda_host_device begin
expected '=' following '#pragma clang section %select{invalid|bss|data|rodata|text|relro}0'
pragma comment requires parenthesized identifier and optional string
unknown kind of pragma comment
pragma detect_mismatch is malformed; it requires two comma-separated string literals
expected one of [bss|data|rodata|text|relro] section kind in '#pragma %0'
expected an integer argument in '#pragma %0'
'#pragma %0' can only appear at file scope or at the start of a compound statement
pragma float_control is malformed; use 'float_control({push|pop})' or 'float_control({precise|except}, {on|off} [,push])'
unexpected argument '%0' to '#pragma clang fp %1'; expected %select{'fast' or 'on' or 'off'|'on' or 'off'|'ignore', 'maytrap' or 'strict'|'source', 'double' or 'extended'}2
%select{invalid|missing}0 option%select{ %1|}0; expected 'contract', 'reassociate' or 'exceptions'
invalid argument; expected 'enable'%select{|, 'full'}0%select{|, 'assume_safety'}1 or 'disable'
%select{invalid|missing}0 option%select{ %1|}0; expected vectorize, vectorize_width, interleave, interleave_count, unroll, unroll_count, pipeline, pipeline_initiation_interval, vectorize_predicate, or distribute
vectorize_width loop hint malformed; use vectorize_width(X, fixed) or vectorize_width(X, scalable) where X is an integer, or vectorize_width('fixed' or 'scalable')
missing argument; expected %select{an integer value|'enable'%select{|, 'full'}1%select{|, 'assume_safety'}2 or 'disable'}0
this pragma cannot appear in %0 declaration
missing argument to '#pragma %0'%select{|; expected %2}1
unexpected extra argument '%0' to '#pragma clang optimize'
unexpected argument '%0' to '#pragma clang optimize'; expected 'on' or 'off'
invalid argument; expected 'disable'
unexpected %0, expected to see one of %select{|'best_case', 'full_generality', }1'single_inheritance', 'multiple_inheritance', or 'virtual_inheritance'
expected ';' after private module fragment declaration
trailing requires clause should be placed outside parentheses
trailing return type must appear before trailing requires clause
trailing requires clause can only be used when declaring a function
expected concept name with optional arguments
requires expression in requirement body; did you intend to place it in a nested requirement? (add another 'requires' before the expression)
expected '->' before expression type requirement
varargs not allowed in requires expression
'noexcept' can only be used in a compound requirement (with '{' '}' around the expression)
a space is required between a right angle bracket and an equals sign (use '> =')
scoped enumeration requires a name
range-based 'for' statement uses ':', not '='
expected parenthesized parameter pack name in 'sizeof...' expression
static lambdas are a C++2b extension
a static lambda cannot have any captures
lambda cannot be both mutable and static
statement expression not allowed at file scope
'__super' cannot be used with a using declaration
expected a property name in @synthesize
%select{function|class|variable}0 cannot be defined in an explicit instantiation; if this declaration is meant to be a %select{function|class|variable}0 definition, remove the 'template' keyword
identifier followed by '<' indicates a class template specialization but %0 %select{does not refer to a template|refers to a function template|<unused>|refers to a variable template|<unused>|<unused>|refers to a concept}1
a static_assert declaration cannot be a template
cannot template a using %select{directive|declaration}0
'this' cannot be captured by reference
a space is required between consecutive right angle brackets (use '> >')
invalid comparison flag %0; use 'layout_compatible' or 'must_be_null'
type trait requires %0%select{| or more}1 argument%select{|s}2; have %3 argument%s3
unparsed tokens following type
typename is allowed for identifiers only
type name does not allow %select{<ERROR>|constexpr|consteval|constinit}0 specifier to be specified
type name does not allow function specifier to be specified
type name does not allow storage class to be specified
typename specifier refers to a non-type template
type name requires a specifier or qualifier
unexpected '@' in program
unexpected ':' in nested name specifier; did you mean '::'?
module declaration can only appear at the top level
attributes cannot be specified on namespace alias
attributes cannot be specified on a nested namespace definition
@implementation declaration cannot be protocol qualified
unexpected namespace scope prior to decltype
unexpected ';' before %0
'template' keyword not permitted after 'using' keyword
'template' keyword not permitted in destructor name
'template' keyword not permitted here
'%0' cannot be a part of nested name specifier; did you mean ':'?
unexpected type name %0: expected identifier
type-id cannot have a name
unknown HLSL semantic %0
unknown template name %0
parentheses are required around this expression in a requires clause
'static' may not be used without an array size
'static' may not be used with an unspecified variable length array size
module partitions are only supported for C++20 onwards
attribute with scope specifier cannot follow default scope specifier
using enum %select{requires an enum or typedef name|does not permit an elaborated enum specifier}0
'using namespace' is not allowed in classes
'%0' specifier is not allowed outside a class definition
while loop outside of a function
version number must have non-zero major, minor, or sub-minor version
ISO C++11 requires a parenthesized pack declaration to have a name
alias declarations are a C++11 extension
alias declaration in this context is a C++2b extension
%0 applied to an expression is a GNU extension
'auto' storage class specifier is not permitted in C++11, and will not be supported in future releases
'__auto_type' is a GNU extension
'_BitInt' in %select{C17 and earlier|C++}0 is a Clang extension
default member initializer for bit-field is a C++20 extension
'%0' is a C11 extension
compound literals are a C99-specific feature
'%0' is a C99 extension
variable declaration in for loop is a C99-specific feature
label at end of compound statement is a C2x extension
'_Static_assert' with no message is a C2x extension
enumeration types with a fixed underlying type are a Clang extension
ISO C++20 does not permit the 'bool' keyword after 'concept'
consteval if is a C++2b extension
constexpr if is a C++17 extension
'constexpr' on lambda expressions is a C++17 extension
ISO C++ does not allow an attribute list to appear here
enumeration types with a fixed underlying type are a C++11 extension
label at end of compound statement is a C++2b extension
'static_assert' with no message is a C++17 extension
an attribute specifier sequence in this position is a C++2b extension
'decltype(auto)' type specifier is a C++14 extension
ISO C++17 does not allow a decomposition group to be empty
%select{defaulted|deleted}0 function definitions are a C++11 extension
ISO C++17 does not allow dynamic exception specifications
reference to enumeration must use 'enum' not 'enum %select{struct|class}0'
exception specification of '...' is a Microsoft extension
ISO C requires a translation unit to contain at least one declaration
non-defining declaration of enumeration with a fixed underlying type is only permitted as a standalone declaration%select{|; missing list of enumerators?}0
commas at the end of enumerator lists are a C99-specific feature
commas at the end of enumerator lists are a C++11 extension
expected ';' at end of declaration list
explicit(bool) is a C++20 extension
extern templates are a C++11 extension
extra ';' %select{outside of a function|inside a %1|inside instance variable list|after member function definition}0
extra ';' outside of a function is a C++11 extension
pack fold expression is a C++17 extension
range-based for loop is a C++11 extension
range-based for loop initialization statements are a C++20 extension
generalized initializer lists are a C++11 extension
use of GNU address-of-label extension
use of GNU array range extension
use of GNU case range extension
use of GNU ?: conditional expression extension, omitting middle operand
use of GNU empty initializer extension
use of GNU indirect-goto extension
use of GNU 'missing =' extension in designator
use of GNU old-style field designator extension
use of GNU statement expression extension
use of GNU statement expression extension from macro expansion
access specifiers are a clang HLSL extension
type-less parameter names in function declaration
'%select{if|switch}0' initialization statements are a C++17 extension
inline namespaces are a C++11 feature
inline nested namespace definition is a C++20 extension
keyword '%0' will be made available as an identifier %select{here|for the remainder of the translation unit}1
lambda without a parameter clause is a C++2b extension
explicit template parameter list for lambdas is a C++20 extension
'abstract' keyword is a Microsoft extension
enumeration types with a fixed underlying type are a Microsoft extension
'sealed' keyword is a Microsoft extension
use of 'static_assert' without inclusion of <assert.h> is a Microsoft extension
use of multiple declarators in a single using declaration is a C++17 extension
nested namespace definition is a C++17 extension; define each namespace separately
default member initializer for non-static data member is a C++11 extension
attributes on %select{a namespace|an enumerator}0 declaration are a C++17 extension
type nullability specifier %0 is a Clang extension
specifying OpenMP directives with [[]] is an OpenMP 5.1 extension
'%0' keyword is a C++11 extension
reference qualifiers on functions are a C++11 extension
rvalue references are a C++11 extension
scoped enumerations are a C++11 extension
unknown pragma in STDC namespace
template template parameter using 'typename' is a C++17 extension
'__thread' before '%0'
default scope specifier for attributes is a C++17 extension
pack expansion of using declaration is a C++17 extension
using enum declaration is a C++20 extension
__final is a GNU extension, consider using C++11 final
use -fbracket-depth=N to increase maximum nesting level
%select{|second }0%1 token is here
use '%0' instead
comma separating Objective-C messaging arguments
or insert whitespace before ':' to use %0 as parameter name and have an empty entry in the selector
total token limit set here
did you mean to use 'typename'?
insert ',' before '...' to silence this warning
place '...' %select{immediately before declared identifier|here}0 to declare a function parameter pack
preceding '...' declares a function parameter pack
still within definition of %q0 here
introduce a parameter name to make %0 part of the selector
%select{class|protocol|category|class extension|implementation|category implementation}0 started here
the ignored tokens spans until here
the context property '%0' can be nested in the context selector '%1' which is nested in the context set '%2'; try 'match(%2={%1(%0)})'
the context selector '%0' can be nested in the context set '%1'; try 'match(%1={%0%select{|(property)}2})'
the ignored %select{set|selector|property}0 spans until here
'%0' is a context %select{set|selector|property}1 not a context %select{set|selector|property}2
context %select{set|selector|property}0 options are: %1
try 'match(%0={%1%2})'
the previous context %select{set|selector|property}0 '%1' used here
omit the namespace to add attributes to the most-recently pushed attribute group
use the GNU '__attribute__' syntax
vectorize_width loop hint malformed; use vectorize_width(X, fixed) or vectorize_width(X, scalable) where X is an integer, or vectorize_width('fixed' or 'scalable')
previous default generic association is here
previous statement is here
parentheses are required around this expression in a requires clause
'%0' casts have no effect when not using ARC
use of '@import' in framework header is discouraged, including this header requires -fmodules
attribute %0 ignored, because it is not attached to a declaration
GCC does not allow %0 attribute in this position on a function definition
'unavailable' availability overrides all other availability information
'_BitInt' is incompatible with C standards before C2x
'_Static_assert' with no message is incompatible with C standards before C2x
label at end of compound statement is incompatible with C standards before C2x
'%select{typeof|typeof_unqual}0' is incompatible with C standards before C2x
%select{%1 and |}0%2 tokens %select{introducing statement expression|terminating statement expression|introducing attribute|terminating attribute|forming pointer to member type}3 appear in different macro expansion contexts
%select{%1 and |}0%2 tokens %select{introducing statement expression|terminating statement expression|introducing attribute|terminating attribute|forming pointer to member type}3 are separated by whitespace
use of C-style parameters in Objective-C method declarations is deprecated
nvcc does not allow '__%0__' to appear after the parameter list in lambdas
'decltype(auto)' type specifier is incompatible with C++ standards before C++14
use of right-shift operator ('>>') in template argument will require parentheses in C++11
constexpr if is incompatible with C++ standards before C++17
constexpr on lambda expressions is incompatible with C++ standards before C++17
pack fold expression is incompatible with C++ standards before C++17
%select{if|switch}0 initialization statements are incompatible with C++ standards before C++17
nested namespace definition is incompatible with C++ standards before C++17
attributes on %select{a namespace|an enumerator}0 declaration are incompatible with C++ standards before C++17
'static_assert' with no message is incompatible with C++ standards before C++17
template template parameter using 'typename' is incompatible with C++ standards before C++17
default scope specifier for attributes is incompatible with C++ standards before C++17
default member initializer for bit-field is incompatible with C++ standards before C++20
explicit(bool) is incompatible with C++ standards before C++20
range-based for loop initialization statements are incompatible with C++ standards before C++20
inline nested namespace definition is incompatible with C++ standards before C++20
explicit template parameter list for lambdas is incompatible with C++ standards before C++20
use of multiple declarators in a single using declaration is incompatible with C++ standards before C++17
pack expansion using declaration is incompatible with C++ standards before C++17
using enum declaration is incompatible with C++ standards before C++20
alias declaration in this context is incompatible with C++ standards before C++2b
consteval if is incompatible with C++ standards before C++2b
an attribute specifier sequence in this position is incompatible with C++ standards before C++2b
this expression will be parsed as explicit(bool) in C++20
label at end of compound statement is incompatible with C++ standards before C++2b
static lambdas are incompatible with C++ standards before C++2b
alias declarations are incompatible with C++98
'alignas' is incompatible with C++98
alignof expressions are incompatible with C++98
C++11 attribute syntax is incompatible with C++98
'decltype' type specifier is incompatible with C++98
%select{defaulted|deleted}0 function definitions are incompatible with C++98
enumeration types with a fixed underlying type are incompatible with C++98
commas at the end of enumerator lists are incompatible with C++98
extern templates are incompatible with C++98
range-based for loop is incompatible with C++98
generalized initializer lists are incompatible with C++98
inline namespaces are incompatible with C++98
lambda expressions are incompatible with C++98
literal operators are incompatible with C++98
noexcept specifications are incompatible with C++98
noexcept expressions are incompatible with C++98
default member initializer for non-static data members is incompatible with C++98
'nullptr' is incompatible with C++98
'%0' keyword is incompatible with C++98
reference qualifiers on functions are incompatible with C++98
rvalue references are incompatible with C++98
scoped enumerations are incompatible with C++98
'static_assert' declarations are incompatible with C++98
extra ';' outside of a function is incompatible with C++98
trailing return types are incompatible with C++98
consecutive right angle brackets are incompatible with C++98 (use '> >')
add explicit braces to avoid dangling else
'for co_await' belongs to CoroutineTS instead of C++20, which is deprecated
empty initialization statement of '%select{if|switch|range-based for}0' has no effect
dynamic exception specifications are deprecated
use same version number separators '_' or '.'; as in 'major[.minor[.subminor]]'
expected a qualified name after 'typename'
'_ExtInt' is deprecated; use '_BitInt' instead
extra ';' after member function definition
GCC does not allow an attribute in this position on a function declaration
GCC does not allow variable declarations in for loop initializers before C99
the number of preprocessor source tokens (%0) exceeds this token limit (%1)
the total number of preprocessor source tokens (%0) exceeds the token limit (%1)
dependent %select{__if_not_exists|__if_exists}0 declarations are ignored
qualifiers after comma in declarator list are ignored
misleading indentation; statement is not part of the previous '%select{if|else|for|while}0'
'...' in this location creates a C-style varargs function%select{, not a function parameter pack|}0
use 'template' keyword to treat '%0' as a dependent template name
%0 used as the name of the previous parameter rather than as part of the selector
Setting the floating point evaluation method to `source` on a target without SSE is not supported.
empty expression statement has no effect; remove unnecessary ';' to silence this warning
protocol has no object type specified; defaults to qualified 'id'
specifying OpenMP directives with [[]] is incompatible with OpenMP standards before OpenMP 5.1
the context property '%0' is not valid for the context selector '%1' and the context set '%2'; property ignored
the context selector '%0' in the context set '%1' cannot have a score ('%2'); score ignored
the context selector '%0' is not valid for the context set '%1'; selector ignored
the context selector '%0' in context set '%1' requires a context property defined in parentheses; selector ignored
the context %select{set|selector|property}0 '%1' was used already in the same 'omp declare variant' directive; %select{set|selector|property}0 ignored
'%0' is not a valid context property for the context selector '%1' and the context set '%2'; property ignored
'%0' is not a valid context selector for the context set '%1'; selector ignored
'%0' is not a valid context set in a `declare variant`; set ignored
expected '%0' after the %1; '%0' assumed
expected identifier or string literal describing a context %select{set|selector|property}0; %select{set|selector|property}0 skipped
extra tokens at the end of '#pragma omp %0' are ignored
more than one 'device_type' clause is specified
interop type '%0' cannot be specified more than once
reserved locator 'omp_all_memory' cannot be specified more than once
valid %0 clauses start with %1; %select{token|tokens}2 will be ignored
%0 clause should not be followed by arguments; tokens will be ignored
expected '=' following '#pragma %select{align|options align}0' - ignored
invalid alignment option in '#pragma %select{align|options align}0' - ignored
'#pragma comment %0' ignored
expected action or ')' in '#pragma %0' - ignored
missing ':' after %0 - ignoring
missing ':' or ')' after %0 - ignoring
expected ',' in '#pragma %0'
expected identifier in '#pragma %0' - ignored
expected 'compiler', 'lib', 'user', or a string literal for the section name in '#pragma %0' - ignored
expected integer between %0 and %1 inclusive in '#pragma %2' - ignored
missing '(' after '#pragma %0' - ignoring
expected non-wide string literal in '#pragma %0'
expected %select{'enable', 'disable', 'begin' or 'end'|'disable'}0 - ignoring
expected ')' or ',' in '#pragma %0'
missing ')' after '#pragma %0' - ignoring
expected a stack label or a string literal for the section name in '#pragma %0' - ignored
expected a string literal for the section name in '#pragma %0' - ignored
expected push, pop or a string literal for the section name in '#pragma %0' - ignored
expected string literal in '#pragma %0' - ignoring
OpenCL extension %0 is core feature or supported optional core feature - ignoring
extra tokens at end of '#pragma %0' - ignored
incorrect use of #pragma clang force_cuda_host_device begin|end
'#pragma %0' is not supported on this target - ignored
'#pragma init_seg' is only supported when targeting a Microsoft environment
%0 is not a recognized builtin%select{|; consider including <intrin.h> to access non-builtin intrinsics}1
unknown action for '#pragma %0' - ignored
unexpected argument '%0' to '#pragma %1'%select{|; expected %3}2
unknown action '%1' for '#pragma %0' - ignored
missing argument to '#pragma %0'%select{|; expected %2}1
incorrect use of '#pragma fenv_access (on|off)' - ignored
incorrect use of '#pragma ms_struct on|off' - ignored
unexpected '#pragma omp ...' in program
expected 'align' following '#pragma options' - ignored
expected integer or identifier in '#pragma pack' - ignored
OpenCL extension %0 unknown or does not require pragma - ignoring
argument to '#pragma unroll' should not be in parentheses in CUDA C/C++
known but unsupported action '%1' for '#pragma %0' - ignored
unsupported OpenCL extension %0 - ignoring
expected '#pragma unused' argument to be a variable name
semicolon before method body is ignored
ignoring '%select{static|inline}0' keyword on explicit template instantiation
pragma STDC FENV_ROUND is not supported
invalid or unsupported rounding mode in '#pragma STDC FENV_ROUND' - ignored
isa trait '%0' is not known to the current target; verify the spelling or consider restricting the context selector with the 'arch' selector further
'__clang__' is a predefined macro name, not an attribute scope specifier; did you mean '_Clang' instead?
empty symbolic operand name in inline assembly string
invalid %% escape in inline assembly string
invalid operand number in inline asm string
unknown symbolic operand name in inline assembly string
unterminated symbolic operand name in inline assembly string
the experimental clang interpreter failed to evaluate an expression
cannot get %select{lower,upper}0 bound because object size is unknown
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{%4 base %plural{1:class|:classes}4|%4 virtual base %plural{1:class|:classes}4|%ordinal4 base class with type %5|%ordinal4 %select{non-virtual|virtual}5 base class %6|%ordinal4 base class %5 with %select{public|protected|private|no}6 access specifier}3
%q0 has different definitions in different modules; %select{definition in module '%2' is here|defined here}1
%q0 has different definitions in different modules; %select{definition in module '%2'|defined here}1 first difference is %select{enum that is %select{not scoped|scoped}4|enum scoped with keyword %select{struct|class}4|enum %select{without|with}4 specified type|enum with specified type %4|enum with %4 element%s4|%ordinal4 element has name %5|%ordinal4 element %5 %select{has|does not have}6 an initializer|%ordinal4 element %5 has an initializer|}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{field %4|field %4 with type %5|%select{non-|}5bitfield %4|bitfield %4 with one width expression|%select{non-|}5mutable field %4|field %4 with %select{no|an}5 initalizer|field %4 with an initializer}3
%q0 has different definitions in different modules; %select{definition in module '%2'|defined here}1 first difference is %select{return type is %4|%ordinal4 parameter with name %5|%ordinal4 parameter with type %5%select{| decayed from %7}6|%ordinal4 parameter with%select{out|}5 a default argument|%ordinal4 parameter with a default argument|function body}3
%0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{%select{method %5|constructor|destructor}4 that has %6 parameter%s6|%select{method %5|constructor|destructor}4 with %ordinal6 parameter of type %7%select{| decayed from %9}8|%select{method %5|constructor|destructor}4 with %ordinal6 parameter named %7}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{end of class|public access specifier|private access specifier|protected access specifier|static assert|field|method|type alias|typedef|data member|friend declaration|function template|method|instance variable|property}3
%q0 %select{with definition in module '%2'|defined here}1 has different definitions in different modules; first difference is this %select{||||static assert|field|method|type alias|typedef|data member|friend declaration|function template|method|instance variable|property|unexpected decl}3
%0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{%select{no super class|super class with type %5}4|instance variable '%4' access control is %select{|@private|@protected|@public|@package}5}3
%0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{return type is %4|method name %4|%select{class|instance}4 method|%select{no|'required'|'optional'}4 method control|method with %select{no designater initializer|designater initializer}4|%select{no direct|direct}4 method}3
%0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{property name %4|property %4 with type %5|%select{no|'required'|'optional'}4 property control|%select{default |}5'%select{none|readonly|getter|assign|readwrite|retain|copy|nonatomic|setter|atomic|weak|strong|unsafe_unretained|nullability|null_resettable|class|}4' property attribute}3
%0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{static assert with condition|static assert with message|static assert with %select{|no }4message|%select{method %5|constructor|destructor}4|%select{method %5|constructor|destructor}4 is %select{not deleted|deleted}6|%select{method %5|constructor|destructor}4 is %select{not defaulted|defaulted}6|%select{method %5|constructor|destructor}4 is %select{|pure }6%select{not virtual|virtual}7|%select{method %5|constructor|destructor}4 is %select{not static|static}6|%select{method %5|constructor|destructor}4 is %select{not volatile|volatile}6|%select{method %5|constructor|destructor}4 is %select{not const|const}6|%select{method %5|constructor|destructor}4 is %select{not inline|inline}6|%select{method %5|constructor|destructor}4 with %ordinal6 parameter with%select{out|}7 a default argument|%select{method %5|constructor|destructor}4 with %ordinal6 parameter with a default argument|%select{method %5|constructor|destructor}4 with %select{no |}6template arguments|%select{method %5|constructor|destructor}4 with %6 template argument%s6|%select{method %5|constructor|destructor}4 with %6 for %ordinal7 template argument|%select{method %5|constructor|destructor}4 with %select{no body|body}6|%select{method %5|constructor|destructor}4 with body|friend %select{class|function}4|friend %4|friend function %4|function template %4 with %5 template parameter%s5|function template %4 with %ordinal5 template parameter being a %select{type|non-type|template}6 template parameter|function template %4 with %ordinal5 template parameter %select{with no name|named %7}6|function template %4 with %ordinal5 template parameter with %select{no |}6default argument|function template %4 with %ordinal5 template parameter with default argument %6|function template %4 with %ordinal5 template parameter with one type|function template %4 with %ordinal5 template parameter %select{not |}6being a template parameter pack|%select{no attribute|%5}4|}3
%0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{%4 referenced %plural{1:protocol|:protocols}4|%ordinal4 referenced protocol with name %5}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{unnamed template parameter|template parameter %5|template parameter with %select{no |}4default argument|template parameter with default argument}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{%select{typedef|type alias}4 name %5|%select{typedef|type alias}4 %5 with underlying type %6}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{data member with name %4|data member %4 with type %5|data member %4 with%select{out|}5 an initializer|data member %4 with an initializer|data member %4 %select{is constexpr|is not constexpr}5}3
template parameter lists have a different number of parameters (%0 vs %1)
template parameter has different kinds in different translation units
field %0 declared with incompatible types in different translation units (%1 vs. %2)
external function %0 declared with incompatible types in different translation units (%1 vs. %2)
instance variable %0 declared with incompatible types in different translation units (%1 vs. %2)
non-type template parameter declared with incompatible types in different translation units (%0 vs. %1)
%select{class|instance}0 method %1 has a different number of parameters in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has a parameter with a different types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has incompatible result types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 is variadic in one translation unit and not variadic in another
property %0 is implemented with %select{@synthesize|@dynamic}1 in one translation but %select{@dynamic|@synthesize}1 in another translation unit
property %0 declared with incompatible types in different translation units (%1 vs. %2)
class %0 has incompatible superclasses
property %0 is synthesized to different ivars in different translation units (%1 vs. %2)
parameter kind mismatch; parameter is %select{not a|a}0 parameter pack
type %0 has incompatible definitions in different translation units
external variable %0 defined in multiple translation units
external variable %0 declared with incompatible types in different translation units (%1 vs. %2)
cannot import unsupported AST node %0
ambiguous vftable component for %0 introduced via covariant thunks; this is an inherent limitation of the ABI
%select{pointer|reference}0 to a consteval declaration is not a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 heap allocated object that has been deleted
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of subobject of|destruction of}0 member %1 of union with %select{active member %3|no active member}2 is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 mutable member %1 is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 dereferenced null pointer is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 dereferenced one-past-the-end pointer is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|reconstruction of|destruction of}0 temporary is not allowed in a constant expression outside the expression that created the temporary
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of subobject of|destruction of}0 %select{object outside its lifetime|uninitialized object}1 is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 object '%1' whose value is not known
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 element of array without known bound is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|<ERROR>|<ERROR>|<ERROR>|<ERROR>}0 volatile %select{temporary|object %2|member %2}1 is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|<ERROR>|<ERROR>|<ERROR>|<ERROR>}0 volatile-qualified type %1 is not allowed in a constant expression
cannot constant evaluate the result of adjusting alignment to %0
cannot constant evaluate whether run-time alignment is at least %0
requested alignment must be %0 or less for type %1; %2 is invalid
cannot refer to element %0 of %select{array of %2 element%plural{1:|:s}2|non-array object}1 in a constant expression
%select{alignment of|offset of the aligned pointer from}0 the base pointee object (%1 %plural{1:byte|:bytes}1) is %select{less than|not a multiple of}0 the asserted %2 %plural{1:byte|:bytes}2
value of the aligned pointer (%0) is not a multiple of the asserted %1 %plural{1:byte|:bytes}1
indeterminate value can only initialize an object of type 'unsigned char'%select{, 'char',|}1 or 'std::byte'; %0 is invalid
invalid type %0 is a %select{member|base}1 of %2
bit_cast %select{from|to}0 a %select{|type with a }1%select{union|pointer|member pointer|volatile|reference}2 %select{type|member}1 is not allowed in a constant expression
value %1 cannot be represented in type %0
constexpr bit_cast involving bit-field is not yet supported
constexpr bit_cast involving type %0 is not yet supported
in call to '%0'
constexpr evaluation hit maximum call limit
(skipping %0 call%s0 in backtrace; use -fconstexpr-backtrace-limit=0 to see all)
comparison of pointer to virtual member function %0 has unspecified value
both arms of conditional operator are unable to produce a constant expression
construction of individual component of complex number is not yet supported in constant expressions
'std::allocator<...>::deallocate' used to delete a null pointer
delete of object with dynamic type %1 through pointer to base class type %0 with non-virtual destructor
delete of pointer '%0' that does not point to a heap-allocated object
delete of pointer%select{ to subobject|}1 '%0' %select{|that does not point to complete object}1
constexpr evaluation exceeded maximum depth of %0 calls
destruction of individual component of complex number is not yet supported in constant expressions
destroying object '%0' whose lifetime has already ended
delete of pointer that has already been deleted
destruction of object that is already being destroyed
%select{pointer|reference}0 to %select{|subobject of }1heap-allocated object is not a constant expression
heap allocation performed here
reference dynamic_cast failed: %select{static type %1 of operand is a non-public base class of dynamic type %2|dynamic type %2 of operand does not have a base class of type %3|%3 is an ambiguous base class of dynamic type %2 of operand|%3 is a non-public base class of dynamic type %2 of operand}0
cannot evaluate this expression if rounding mode is dynamic
floating point arithmetic produces %select{an infinity|a NaN}0
compile time floating point arithmetic suppressed in strict evaluation modes
function parameter %0 with unknown value cannot be used in a constant expression
constexpr evaluation hit maximum heap allocation limit
in implicit initialization for inherited constructor of %0
requested alignment %0 is not a positive power of two
%select{reinterpret_cast|dynamic_cast|%select{this conversion|cast that performs the conversions of a reinterpret_cast}1|cast from %1}0 is not allowed in a constant expression%select{| in C++ standards before C++20||}0
cannot cast object of dynamic type %0 to type %1
%select{non-constexpr|undefined}0 %select{function|constructor}1 %2 cannot be used in a constant expression
constructor inherited from base class %0 cannot be used in a constant expression; derived class cannot be implicitly initialized
shift count %0 >= width of type %1 (%2 bit%s2)
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 %select{temporary|variable}1 whose %plural{8:storage duration|:lifetime}0 has ended
signed left shift discards bits
left shift of negative value %0
read of incomplete type %0 is not allowed in a constant expression
read of non-const variable %0 is not allowed in a constant expression
read of non-constexpr variable %0 is not allowed in a constant expression
read of variable %0 of non-integral, non-enumeration type %1 is not allowed in a constant expression
constant evaluation of %0 on array of type %1 is not supported; only arrays of narrow character types can be searched
constant evaluation of %0 between arrays of types %1 and %2 is not supported; only arrays of narrow character types can be compared
cannot constant evaluate '%select{memcpy|memmove}0' between objects of incomplete type %1
cannot constant evaluate '%select{memcpy|memmove}0' between objects of non-trivially-copyable type %1
%select{source|destination}2 of '%select{%select{memcpy|wmemcpy}1|%select{memmove|wmemmove}1}0' is %3
'%select{memcpy|wmemcpy}0' between overlapping memory regions
cannot constant evaluate '%select{memcpy|memmove}0' from object of type %1 to object of type %2
'%select{%select{memcpy|wmemcpy}1|%select{memmove|wmemmove}1}0' not supported: %select{size to copy (%4) is not a multiple of size of element type %3 (%5)|source is not a contiguous array of at least %4 elements of type %3|destination is not a contiguous array of at least %4 elements of type %3}2
allocation performed here was not deallocated%plural{0:|: (along with %0 other memory leak%s0)}0
modification of object of const-qualified type %0 is not allowed in a constant expression
a constant expression cannot modify an object that is visible outside that expression
negative shift count %0
dynamic memory allocation is not permitted in constant expressions until C++20
%plural{2:'delete' used to delete pointer to object allocated with 'std::allocator<...>::allocate'|:%select{non-array delete|array delete|'std::allocator<...>::deallocate'}0 used to delete pointer to %select{array object of type %2|non-array object of type %2|object allocated with 'new'}0}1
cannot allocate array; evaluated array bound %0 is negative
call to %select{placement|class-specific}0 %1
cannot allocate memory of %select{incomplete|function}0 type %1
this placement new expression is not yet supported in constant expressions
cannot allocate array; evaluated array bound %0 is too large
cannot allocate array; evaluated array bound %0 is too small to hold %1 explicitly initialized elements
cannot allocate untyped memory in a constant expression; use 'std::allocator<T>::allocate' to allocate memory of type 'T'
control reached end of constexpr function
%select{pointer|reference}0 to %select{|subobject of }1%select{temporary|%3}2 is not a constant expression
non-literal type %0 cannot be used in a constant expression
address of non-static constexpr variable %0 may differ on each invocation of the enclosing function; add 'static' to give it a constant address
cannot %select{access base class of|access derived class of|access field of|access array element of|perform pointer arithmetic on|access real component of|access imaginary component of}0 null pointer
allocated size %0 is not a multiple of size %1 of element type %2
value %0 is outside the range of representable values of type %1
dereferenced pointer past the end of %select{|subobject of }0%select{temporary|%2}1 is not a constant expression
cannot %select{access base class of|access derived class of|access field of|access array element of|ERROR|access real component of|access imaginary component of}0 pointer past the end of object
placement new would change type of storage from %0 to %1
comparison of addresses of subobjects of different base classes has unspecified value
comparison of address of base class subobject %0 of class %1 to field %2 has unspecified value
comparison of address of fields %0 and %2 of %4 with differing access specifiers (%1 vs %3) has unspecified value
comparison has unspecified value
subtracted pointers are not elements of the same array
subtraction of pointers to type %0 of zero size
%select{|||||virtual function called on|dynamic_cast applied to|typeid applied to|construction of|destruction of}0 object '%1' whose dynamic type is not constant
pseudo-destructor call is not permitted in constant expressions until C++20
pure virtual function %q0 called
control flows through the definition of a %select{static|thread_local}0 variable
constexpr evaluation hit maximum step limit; possible infinite loop?
this use of statement expressions is not supported in a constant expression
subobject declared here
temporary created here
%select{|implicit }0use of 'this' pointer is only allowed within the evaluation of a call to a 'constexpr' member function
typeid applied to expression of polymorphic type %0 is not allowed in a constant expression in C++ standards before C++20
%select{|sub}0object of type %1 is not initialized
assignment would change active union member during the initialization of a different member of the same union
indexing of array without known bound is not allowed in a constant expression
non-trivial destruction of type %0 in a constant expression is not supported
flexible array initialization is not yet supported
type %0 has unexpected layout
non-trivial destruction of lifetime-extended temporary with type %0 used in the result of a constant expression is not yet supported
array-to-pointer decay of array member without known bound is not supported
use of reference outside its lifetime is not allowed in a constant expression
initializer of %0 is not a constant expression
initializer of %0 is unknown
initializer of weak variable %0 is not considered constant because it may be different at runtime
cannot construct object of type %0 with virtual base class in a constant expression
cannot evaluate call to virtual function in a constant expression in C++ standards before C++20
comparison between unequal pointers to void has unspecified result
volatile %select{temporary created|object declared|member declared}0 here
covariant thunk required by %0
division by zero
in first definition, possible difference is here
but in '%0' found %select{%2 base %plural{1:class|:classes}2|%2 virtual base %plural{1:class|:classes}2|%ordinal2 base class with different type %3|%ordinal2 %select{non-virtual|virtual}3 base class %4|%ordinal2 base class %3 with %select{public|protected|private|no}4 access specifier}1
definition in module '%0' is here
but in '%0' found %select{enum that is %select{not scoped|scoped}2|enum scoped with keyword %select{struct|class}2|enum %select{without|with}2 specified type|enum with specified type %2|enum with %2 element%s2|%ordinal2 element has name %3|%ordinal2 element %3 %select{has|does not have}4 an initializer|%ordinal2 element %3 has different initializer|}1
but in '%0' found %select{field %2|field %2 with type %3|%select{non-|}3bitfield %2|bitfield %2 with different width expression|%select{non-|}3mutable field %2|field %2 with %select{no|an}3 initializer|field %2 with a different initializer}1
but in '%0' found %select{different return type %2|%ordinal2 parameter with name %3|%ordinal2 parameter with type %3%select{| decayed from %5}4|%ordinal2 parameter with%select{out|}3 a default argument|%ordinal2 parameter with a different default argument|a different body}1
but in '%0' found %select{%select{method %3|constructor|destructor}2 that has %4 parameter%s4|%select{method %3|constructor|destructor}2 with %ordinal4 parameter of type %5%select{| decayed from %7}6|%select{method %3|constructor|destructor}2 with %ordinal4 parameter named %5}1
but in '%0' found %select{end of class|public access specifier|private access specifier|protected access specifier|static assert|field|method|type alias|typedef|data member|friend declaration|function template|method|instance variable|property}1
but in '%0' found %select{||||different static assert|different field|different method|different type alias|different typedef|different data member|different friend declaration|different function template|method|instance variable|property|another unexpected decl}1
but in '%0' found %select{%select{no super class|super class with type %3}2|instance variable '%2' access control is %select{|@private|@protected|@public|@package}3}1
but in '%0' found %select{different return type %2|method name %2|%select{class|instance}2 method|%select{no|'required'|'optional'}2 method control|method with %select{no designater initializer|designater initializer}2|%select{no direct|direct}2 method}1
but in '%0' found %select{property name %2|property %2 with type %3|%select{no|'required'|'optional'}2 property control|no written or default attribute for property|}1
but in '%0' found %select{static assert with different condition|static assert with different message|static assert with %select{|no }2message|%select{method %3|constructor|destructor}2|%select{method %3|constructor|destructor}2 is %select{not deleted|deleted}4|%select{method %3|constructor|destructor}2 is %select{not defaulted|defaulted}4|%select{method %3|constructor|destructor}2 is %select{|pure }4%select{not virtual|virtual}5|%select{method %3|constructor|destructor}2 is %select{not static|static}4|%select{method %3|constructor|destructor}2 is %select{not volatile|volatile}4|%select{method %3|constructor|destructor}2 is %select{not const|const}4|%select{method %3|constructor|destructor}2 is %select{not inline|inline}4|%select{method %3|constructor|destructor}2 with %ordinal4 parameter with%select{out|}5 a default argument|%select{method %3|constructor|destructor}2 with %ordinal4 parameter with a different default argument|%select{method %3|constructor|destructor}2 with %select{no |}4template arguments|%select{method %3|constructor|destructor}2 with %4 template argument%s4|%select{method %3|constructor|destructor}2 with %4 for %ordinal5 template argument|%select{method %3|constructor|destructor}2 with %select{no body|body}4|%select{method %3|constructor|destructor}2 with different body|friend %select{class|function}2|friend %2|friend function %2|function template %2 with %3 template parameter%s3|function template %2 with %ordinal3 template paramter being a %select{type|non-type|template}4 template parameter|function template %2 with %ordinal3 template parameter %select{with no name|named %5}4|function template %2 with %ordinal3 template parameter with %select{no |}4default argument|function template %2 with %ordinal3 template parameter with default argument %4|function template %2 with %ordinal3 template parameter with different type|function template %2 with %ordinal3 template parameter %select{not |}4being a template parameter pack|%select{no attribute|%3}2|}1
but in '%0' found %select{%2 referenced %plural{1:protocol|:protocols}2|%ordinal2 referenced protocol with different name %3}1
but in '%0' found %select{unnamed template parameter %2|template parameter %3|template parameter with %select{no |}2default argument|template parameter with different default argument}1
but in '%0' found %select{%select{typedef|type alias}2 name %3|%select{typedef|type alias}2 %3 with different underlying type %4}1
but in '%0' found %select{data member with name %2|data member %2 with different type %3|data member %2 with%select{out|}3 an initializer|data member %2 with a different initializer|data member %2 %select{is constexpr|is not constexpr}3}1
null passed to a callee that requires a non-null argument
class has base type %0
enumerator %0 with value %1 here
field %0 has type %1 here
field has name %0 here
friend declared here
no corresponding base class here
no corresponding enumerator here
no corresponding field here
no corresponding friend here
class has %0 base %plural{1:class|:classes}0
%select{class|instance}0 method %1 also declared here
no corresponding superclass here
property %0 is implemented with %select{@synthesize|@dynamic}1 here
inherits from superclass %0 here
property is synthesized to ivar %0 here
%select{parameter|parameter pack}0 declared here
%0 is a %select{struct|interface|union|class|enum}1 here
template parameter declared here
template parameter list also declared here
declared here with type %0
%select{non-virtual|virtual}0 derivation here
in second definition, possible difference is here
unimplemented constexpr lambda feature: %0 (coming soon!)
-fsanitize-address-field-padding applied to %0
-fsanitize-address-field-padding ignored for %0 because it %select{is not C++|is packed|is a union|is trivially copyable|has trivial destructor|is standard layout|is in a ignorelisted file|is ignorelisted}1
integer value %0 is outside the valid range of values [%1, %2] for this enumeration type
overflow in expression; result is %0 with type %1
overflow in expression; result is %0 with type %1
'%0' will always evaluate to 'true' in a manifestly constant-evaluated expression
ms_struct may not produce Microsoft-compatible layouts with fundamental data types with sizes that aren't a power of two
template parameter lists have a different number of parameters (%0 vs %1)
template parameter has different kinds in different translation units
field %0 declared with incompatible types in different translation units (%1 vs. %2)
external function %0 declared with incompatible types in different translation units (%1 vs. %2)
instance variable %0 declared with incompatible types in different translation units (%1 vs. %2)
non-type template parameter declared with incompatible types in different translation units (%0 vs. %1)
%select{class|instance}0 method %1 has a different number of parameters in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has a parameter with a different types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has incompatible result types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 is variadic in one translation unit and not variadic in another
property %0 is implemented with %select{@synthesize|@dynamic}1 in one translation but %select{@dynamic|@synthesize}1 in another translation unit
property %0 declared with incompatible types in different translation units (%1 vs. %2)
class %0 has incompatible superclasses
property %0 is synthesized to different ivars in different translation units (%1 vs. %2)
parameter kind mismatch; parameter is %select{not a|a}0 parameter pack
type %0 has incompatible definitions in different translation units
external variable %0 defined in multiple translation units
external variable %0 declared with incompatible types in different translation units (%1 vs. %2)
padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%s2 to align anonymous bit-field
padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%s2 to align %4
padding size of %0 with %1 %select{byte|bit}2%s1 to alignment boundary
field %1 within %0 is less aligned than %2 and is usually due to %0 being packed, which can lead to unaligned accesses
packed attribute is unnecessary for %0
add a deprecation attribute to the declaration to silence this warning
previous command '%select{\|@}0%1' here
previous command '%select{\|@}0%1' (an alias of '\%2') here
end tag
HTML tag started here
did you mean '%0'?
previous documentation
did you mean '%0'?
previous documentation
unknown command tag name '%0'; did you mean '%1'?
'%select{\|@}0%select{class|interface|protocol|struct|union}1' command should not be used in a comment attached to a non-%select{class|interface|protocol|struct|union}2 declaration
duplicated command '%select{\|@}0%1'
empty paragraph passed to '%select{\|@}0%1' command
'%select{\|@}0%select{classdesign|coclass|dependency|helper|helperclass|helps|instancesize|ownership|performance|security|superclass}1' command should not be used in a comment attached to a non-container declaration
declaration is marked with '%select{\|@}0deprecated' command but does not have a deprecation attribute
'%select{\|@}0%select{function|functiongroup|method|methodgroup|callback}1' command should be used in a comment attached to %select{a function|a function|an Objective-C method|an Objective-C method|a pointer to function}2 declaration
HTML end tag '%0' is forbidden
HTML end tag does not match any start tag
HTML tag '%0' requires an end tag
HTML start tag '%0' closed by '%1'
HTML start tag prematurely ended, expected attribute name or '>'
expected quoted string after equals sign
'%select{\|@}0%1' command has %plural{0:no|:%2}2 word argument%s2, expected %3
parameter '%0' is already documented
unrecognized parameter passing direction, valid directions are '[in]', '[out]' and '[in,out]'
'%select{\|@}0param' command used in a comment that is not attached to a function declaration
parameter '%0' not found in the function declaration
whitespace is not allowed in parameter passing direction
'%select{\|@}0%1' command used in a comment that is attached to a %select{function returning void|constructor|destructor|method returning void}2
'%select{\|@}0%1' command used in a comment that is not attached to a function or method declaration
template parameter '%0' is already documented
'%select{\|@}0tparam' command used in a comment that is not attached to a template declaration
template parameter '%0' not found in the template declaration
unknown command tag name
'%select{\|@}0%1' command does not terminate a verbatim text block
error opening '%0': required by the CrossTU functionality
error parsing index file: '%0' line: %1 '<USR-Length>:<USR> <File-Path>' format expected
multiple definitions are found for the same key in index 
imported AST from '%0' had been generated for a different target, current: %1, imported: %2
this builtin is only available on 32-bit targets
this builtin is only available on 64-bit targets
cannot add 'abi_tag' attribute in a redeclaration
%select{return|parameter|variable|field|instance variable|synthesized instance variable}0 type %1 is an abstract class
%1 is a %select{private|protected}0 member of %3
%select{base class|inherited virtual base class}0 %1 has %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR*|}2constructor
calling a %select{private|protected}0 constructor of class %2
ISO C++11 does not allow access declarations; use using declarations instead
calling a %select{private|protected}1 destructor of class %0
base class %0 has %select{private|protected}1 destructor
exception object of type %0 has %select{private|protected}1 destructor
field of type %1 has %select{private|protected}2 destructor
instance variable of type %0 has %select{private|protected}1 destructor
temporary of type %0 has %select{private|protected}1 destructor
variable of type %1 has %select{private|protected}2 destructor
inherited virtual base class %1 has %select{private|protected}2 destructor
field of type %0 has %select{private|protected}2 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}1constructor
friend function %1 is a %select{private|protected}0 member of %3
capture of variable '%0' as type %1 calls %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}2constructor
address of overloaded function %0 is ambiguous
cannot form member pointer of type %0 without '&' and class name
address of overloaded function %0 does not match required type %1
address of overloaded function %0 cannot be converted to type %1
cannot take address of function %0 because parameter %1 has pass_object_size attribute
conflicting address space qualifiers are provided between types %0 and %1
'delete' cannot delete objects of type %0 in address space '%1'
'new' cannot allocate objects of type %0 in address space '%1'
cannot take address of function %0 because its constraints are not satisfied
cannot take address of function %0 because it has one or more non-tautological enable_if conditions
TLS model '%0' is not yet supported on AIX
alias definition of %0 after tentative definition
definition %0 cannot also be an %select{alias|ifunc}1
aliases are not supported on darwin
CUDA does not support aliases
extraneous template parameter list in alias template declaration
'align_value' attribute requires integer constant
%0 attribute cannot be applied to %select{a function parameter|a variable with 'register' storage class|a 'catch' variable|a bit-field|an enumeration}1
redeclaration has different alignment requirement (%1 vs %0)
%0 must be specified on definition if it is specified on any declaration
requested alignment is less than minimum alignment of %1 for type %0
aligned %select{allocation|deallocation}0 function of type '%1' is %select{only|not}4 available on %2%select{ %3 or newer|}4
'aligned' attribute requires integer constant
requested alignment is dependent but declaration is not dependent
requested alignment is not a power of 2
requested alignment must be %0 or smaller
requested alignment must be %0 or greater
invalid application of 'alignof' to a field of a class still being defined
allocating an object of abstract class type %0
expected initializer
ambiguous cast from base %0 to derived %1:%2
ambiguous conversion of delete expression of type %0 to a pointer
ambiguous conversion from derived class %0 to base class %1:%2
destructor of class %0 is ambiguous
constructor of %0 inherited from multiple base class subobjects
member %0 found in multiple base classes of different types
non-static member %0 found in multiple base-class subobjects of type %1:%2
ambiguous conversion from pointer to member of %select{base|derived}0 class %1 to pointer to member of %select{derived|base}0 class %2:%3
reference to %0 is ambiguous
multiple suitable %0 functions in %1
a type named %0 is hidden by a declaration in a different namespace
anonymous bit-field has negative width (%0)
anonymous bit-field cannot have qualifiers
anonymous property is not supported
anonymous %select{struct|union}0 can only contain non-static data members
member of anonymous %select{struct|union}0 redeclares %1
anonymous %select{struct|union}0 cannot contain a %select{private|protected}1 data member
functions cannot be declared in an anonymous %select{struct|union}0
static members cannot be declared in an anonymous %select{struct|union}0
types cannot be declared in an anonymous %select{struct|union}0
anonymous %select{structs|structs and classes}0 must be %select{struct or union|class}0 members
anonymous unions at namespace or global scope must be declared 'static'
anonymous union at class scope must not have a storage specifier
%select{x86|x86-64}0 'interrupt' attribute only applies to functions that have %select{a 'void' return type|only a pointer parameter optionally followed by an integer parameter|a pointer as the first parameter|a %2 type as the second parameter}1
interrupt service routine cannot be called directly
must explicitly describe intended ownership of an object array parameter
existing instance variable %1 for property %0 with %select{unsafe_unretained|assign}2 attribute must be __unsafe_unretained
cannot perform atomic operation on a pointer to type %0: type has non-trivial ownership
cannot capture __autoreleasing variable in a %select{block|lambda by copy}0
%select{__block variables|global variables|fields|instance variables}0 cannot have __autoreleasing ownership
incompatible types casting %0 to %1 with a %select{__bridge|__bridge_transfer|__bridge_retained}2 cast
cast of %select{Objective-C|block|C}0 pointer type %1 to %select{Objective-C|block|C}2 pointer type %3 cannot use %select{__bridge|__bridge_transfer|__bridge_retained}4
%select{cast|implicit conversion}0 of %select{Objective-C|block|C}1 pointer type %2 to %select{Objective-C|block|C}3 pointer type %4 requires a bridged cast
collection expression type %0 is a forward declaration
%select{implicit conversion|cast}0 of weak-unavailable object of type %1 to a __weak object of type %2
method implementation does not match its declaration
ARC forbids explicit message send of %0
ARC forbids %select{implementation|synthesis}0 of %1
ARC forbids use of %0 in a @selector
%select{|unsafe_unretained|strong|weak}1 property %0 may not also be declared %select{|__unsafe_unretained|__strong|__weak|__autoreleasing}2
%select{pointer|reference}1 to non-const type %0 with no explicit ownership
init methods must return a type related to the receiver type
method was declared as %select{an 'alloc'|a 'copy'|an 'init'|a 'new'}0 method, but its implementation doesn't match because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
no visible @interface for %0 declares the selector %1
no known %select{instance|class}1 method for selector %0
%select{implicit conversion|cast}0 of %select{%2|a non-Objective-C pointer type %2|a block pointer|an Objective-C pointer|an indirect pointer to an Objective-C pointer}1 to %3 is disallowed with ARC
multiple methods named %0 found with mismatched result, parameter type or attributes
'new' cannot allocate an array of %0 with no explicit ownership
explicit ownership qualifier on cast result has no effect
passing address of %select{non-local|non-scalar}0 object to __autoreleasing parameter for write-back
ARC forbids synthesizing a property of an Objective-C object with unspecified ownership or storage attribute
performSelector names a selector which retains the object
pseudo-destructor destroys object of type %0 with inconsistently-qualified type %1
receiver %0 for class message is a forward declaration
receiver type %0 for instance message is a forward declaration
existing instance variable %1 for strong property %0 may not be %select{|__unsafe_unretained||__weak}2
thread-local variable has non-trivial ownership: type is %0
incompatible pointer types passing retainable parameter of type %0to a CF function expecting %1 type
class is incompatible with __weak references
the result of a delegate init call must be immediately returned or assigned to 'self'
cannot create __weak reference in file using manual reference counting
dereferencing a __weak pointer is not allowed due to possible null value caused by race condition, assign it to strong variable first
cannot create __weak reference because the current deployment target does not support weak references
assignment of a weak-unavailable object to a __weak object
synthesizing __weak instance variable of type %0, which does not support weak references
parameter may not be qualified with an address space
argument value %0 is outside the valid range [%1, %2]
argument %0 value should represent a contiguous bit field
argument should be a multiple of %0
argument should be a power of 2
argument should be an 8-bit value shifted by a multiple of 8 bits
argument should be an 8-bit value shifted by a multiple of 8 bits, or in the form 0x??FF
arithmetic on pointer to interface %0, which is not a constant size for this architecture and platform
coprocessor %0 must be configured as %select{GCP|CDE}1
DSB argument value %0 is outside valid set {0-15, 16, 20, 24, 28}
DSB argument value %0 requires FEAT_XS support
invalid special register for builtin
array designator range [%0, %1] is empty
array designator value '%0' is negative
array designator cannot initialize non-array type %0
array designator index (%0) exceeds array bounds (%1)
array has %select{incomplete|sizeless}0 element type %1
cannot initialize array %diff{of type $ with array of type $|with different type of array}0,1
initializing wide char array with incompatible wide string literal
initializing wide char array with non-wide string literal
cannot initialize array %diff{of type $ with non-constant array of type $|with different type of array}0,1
array initializer must be an initializer list%select{| or string literal| or wide string literal}0
initializing 'char8_t' array with plain string literal
%select{|ISO C++20 does not permit }0initialization of char array with UTF-8 string literal%select{ is not permitted by '-fchar8_t'|}0
initializing char array with wide string literal
array size must be specified in new expression with no initializer
array of abstract class type %0
array section does not specify contiguous storage
array section does not specify length for outermost dimension
ambiguous conversion of array size expression of type %0 to an integral or enumeration type
array size expression of type %0 requires explicit conversion to type %1
array size expression has incomplete class type %0
size of array has non-integer type %0
array size expression must have integral or %select{|unscoped }0enumeration type, not %1
variable length array must be bound in function definition
star modifier used outside of function prototype
%0 used in non-outermost array type derivation
%0 used in array declarator outside of function prototype
array is too large (%0 elements)
automatic variable qualified with an%select{| invalid}0 address space
bad type for named register variable
asm operand has incomplete type %0
more than one input constraint matches the same output '%0'
register '%0' unsuitable for global register variables on this target
invalid input constraint '%0' in asm
invalid input size for constraint '%0'
invalid lvalue in asm input for constraint '%0'
invalid lvalue in asm output
invalid output constraint '%0' in asm
invalid output size for constraint '%0'
parameter references not allowed in naked functions
'this' pointer references not allowed in naked functions
reference to a %select{bit-field|vector element|global register variable}0 in asm %select{input|output}1 with a memory constraint '%2'
size of register '%0' does not match variable size
unsupported inline asm: input with type %diff{$ matching output with type $|}0,1
asm constraint has an unexpected number of alternatives: %0 vs %1
unknown register name '%0' in asm
unwind clobber can't be used with asm goto
type %0 in generic association compatible with previously specified type %1
type %0 in generic association incomplete
type %0 in generic association not an object type
type %0 in generic association is a variably modified type
use of @defs is not supported on this architecture and platform
argument to atomic builtin of type '_BitInt' is not supported
address argument to atomic builtin cannot be const-qualified (%0 invalid)
Atomic memory operand must have a power-of-two size
address argument to atomic builtin must be a pointer (%0 invalid)
address argument to atomic builtin must be a pointer to integer, floating-point or pointer (%0 invalid)
address argument to atomic builtin must be a pointer to integer or pointer (%0 invalid)
address argument to atomic builtin must be a pointer to 1,2,4,8 or 16 byte type (%0 invalid)
address argument to load or store exclusive builtin must be a pointer to 1,2,4 or 8 byte type (%0 invalid)
atomic %select{load|store}0 requires runtime support that is not available for this target
synchronization scope argument to atomic operation is invalid
address argument to atomic operation must be a pointer to _Atomic type (%0 invalid)
address argument to atomic operation must be a pointer to %select{|atomic }0integer (%1 invalid)
address argument to atomic operation must be a pointer to %select{|atomic }0integer or pointer (%1 invalid)
address argument to atomic operation must be a pointer to %select{|atomic }0integer, pointer or supported floating point type (%1 invalid)
address argument to %select{atomic|__sync}0 operation must be a pointer to a non address discriminated type (%1 invalid)
address argument to atomic operation must be a pointer to non-%select{const|constant}0 _Atomic type (%1 invalid)
address argument to atomic operation must be a pointer to non-const type (%0 invalid)
address argument to atomic operation must be a pointer to a trivially-copyable type (%0 invalid)
atomic property of reference type %0 cannot have non-trivial assignment operator
_Atomic cannot be applied to %select{incomplete |array |function |reference |atomic |qualified |sizeless ||integer }0type %1 %select{|||||||which is not trivially copyable|}0
%0 attribute expression never produces a constant expression
the type %0 is already explicitly ownership-qualified
%0 attribute can only be applied to a %select{function|method}1 with an error parameter
%0 attribute with '%1' convention can only be applied to a %select{function|method}2 returning %select{an integral type|a pointer}3
tls_model must be "global-dynamic", "local-dynamic", "initial-exec" or "local-exec"
function type may not be qualified with an address space
multiple address spaces specified for type
address space is negative
address space is larger than the maximum supported (%0)
requested alignment must be %0 bytes or smaller
%0 attribute argument is invalid: %select{max must be 0 since min is 0|min must not be greater than max}1
%0 attribute must be greater than 0
%0 attribute requires parameter %1 to be %select{int or bool|an integer constant|a string|an identifier|a constant expression|a builtin function}2
%0 attribute parameter %1 is out of bounds
%0 attribute parameter %1 is out of bounds: %plural{0:no parameters to index into|1:can only be 1, since there is one parameter|:must be between 1 and %2}2
%0 attribute requires integer constant between %1 and %2 inclusive
%0 attribute requires %select{int or bool|an integer constant|a string|an identifier}1
%0 attribute requires an integer type argument
%0 attribute requires a pointer type argument
'__clang_arm_builtin_alias' attribute can only be applied to an ARM builtin
%0 is only supported when '-msve-vector-bits=<bits>' is specified with a value of 128, 256, 512, 1024 or 2048.
'__clang_arm_mve_strict_polymorphism' attribute can only be applied to an MVE/NEON vector type
Neon vector size must be 64 or 128 bits
invalid SVE vector size '%0', must match value set by '-msve-vector-bits' ('%1')
%0 attribute references parameter %1, but the function %2 has only %3 parameters
%0 attribute can only be applied to a ARM, HLSL or RISC-V builtin
'cleanup' argument %select{|%1 |%1 }0is not a %select{||single }0function
'cleanup' function %0 parameter has %diff{type $ which is incompatible with type $|incompatible type}1,2
'cleanup' function %0 must take 1 parameter
'__declspec(dllexport)' cannot be applied to more than one default constructor in %0
attribute %q0 cannot be applied to a deleted function
lambda cannot be declared %0
attribute %q0 cannot be applied to member of %q1 class
%q0 must have external linkage when declared %q1
redeclaration of %q0 cannot add %q1 attribute
%q0 cannot be thread local when declared %q1
definition of dllimport data
dllimport cannot be applied to non-inline function definition
cannot define non-inline dllimport template specialization
definition of dllimport static field not allowed
%0 attribute argument may only refer to a function parameter of integer type
%select{a reference type|an array type|a non-vector or non-vectorizable scalar type}0 is an invalid argument to attribute %1
invalid argument expression to firebloom attribute
'_BitInt' vector element width must be %select{a power of 2|at least as wide as 'CHAR_BIT'}0
%0 attribute is invalid for the implicit this argument
invalid matrix element type %0
%0 attribute cannot be applied to a declaration
vector size not an integral multiple of component size
%0 attribute applied to non-SVE type %1
invalid vector element type %0
%0 attribute does not appear on the first declaration
multiple garbage collection attributes specified for type
%0 attribute has no effect on defaulted or deleted functions
%0 attribute is permitted on definitions only
empty %0 cannot be composed with named ones
%0 attribute cannot be applied to non-static member functions
%0 attribute cannot be used with pointers to members
function type with %0 attribute must have C linkage
%0 attribute is not supported in %select{C|C++|Objective-C}1
%0 attribute is not supported on '%1'
%0 attribute can only be applied once per parameter
attribute only applies to output parameters
redeclaration of %0 must %select{not |}1have the 'overloadable' attribute
at most one overload for a given name may lack the 'overloadable' attribute
'overloadable' function %0 must have a prototype
%0 attribute parameter types do not match: parameter %1 of function %2 has type %3, but parameter %4 of function %5 has type %6
%0 attribute only applies to%select{| constant}1 pointer arguments
argument %0 to 'preferred_name' attribute is not a typedef for a specialization of %1
'regparm' parameter must be between 0 and %0 inclusive
'regparm' is not valid on this platform
attribute %0 is supported in the OpenCL version %1%select{| onwards}2
%0 attribute requires a %select{positive|non-negative}1 integral compile time constant expression
argument to %select{'code_seg'|'section'}1 attribute is not valid for this target: %0
'selectany' can only be applied to data items with external linkage
'sentinel' parameter 1 less than zero
'sentinel' parameter 2 not 0 or 1
%0 size too large
%0 attribute cannot be applied to sizeless type %1
'symbol_metadata_footnote' attributes must use section names that are between 1 and 9 characters long, excluding the leading underscores.
%0 attribute takes at least %1 argument%s1
%0 attribute takes no more than %1 argument%s1
%0 attribute is not supported on targets missing %1; specify an appropriate -march= or -mcpu=
the vecreturn attribute can only be used on a POD (plain old data) class or structure (i.e. no virtual functions)
the vecreturn attribute can only be used on a class or structure with one member, which must be a vector
weak declaration cannot have internal linkage
weakref declaration of %0 must be in a global context
weakref declaration must have internal linkage
weakref declaration of %0 must also have an alias attribute
%0 attribute only applies to %select{functions|unions|variables and functions|functions and methods|functions, methods and blocks|functions, methods, and parameters|variables|variables and fields|variables, data members and tag types|types and namespaces|variables, functions and classes|kernel functions|non-K&R-style functions}1
%0 attribute only applies to %1
%0 attribute %plural{0:takes no arguments|1:takes one argument|:requires exactly %1 arguments}1
%0 attribute references function %1, which %plural{0:takes no arguments|1:takes one argument|:takes exactly %2 arguments}2
zero %0 size
%0 and %1 attributes are not compatible
cannot pass bit-field as __auto_type initializer in C
%select{'auto'|'decltype(auto)'|'__auto_type'|template arguments}0 deduced as %1 in declaration of %2 and deduced as %3 in declaration of %4
functional-style cast to %0 has incompatible initializer of type %1
initializer for functional-style cast to %0 contains multiple expressions
initializer for functional-style cast to %0 is empty
cannot deduce actual type for %1 from %select{parenthesized|nested}0 initializer list
cannot deduce return type %0 from returned value of type %1
'%select{auto|decltype(auto)}0' in return type deduced as %1 here but deduced as %2 in earlier return statement
cannot deduce return type %0 for function with no return statements
cannot deduce return type from initializer list
cannot deduce return type %0 from omitted return expression
function %0 with deduced return type cannot be used before it is defined
function with deduced return type cannot be virtual
deduced conflicting types %diff{($ vs $) |}0,1for initializer list element type
cannot use __auto_type with initializer list in C
'auto' return without trailing return type; deduced return types are a C++14 extension
new expression for type %0 contains multiple constructor arguments
new expression for type %0 has incompatible constructor argument of type %1
new expression for type %0 requires a constructor argument
%select{function with deduced return type|declaration with trailing return type}0 must be the only declaration in its group
%select{'auto'|'decltype(auto)'|'__auto_type'|use of %select{class template|function template|variable template|alias template|template template parameter|concept|template}2 %3 requires template arguments; argument deduction}0 not allowed %select{in function prototype|in non-static struct member|in struct member|in non-static union member|in union member|in non-static class member|in interface member|in exception declaration|in template parameter until C++17|in block literal|in template argument|in typedef|in type alias|in function return type|in conversion function type|here|in lambda parameter|in type allocated by 'new'|in K&R-style function parameter|in template parameter|in friend declaration|in function prototype that is not a function declaration|in requires expression parameter}1
'auto' variable template instantiation is not allowed
variable %0 with type %1 has incompatible initializer of type %2
cannot deduce actual type for variable %0 with type %1 from initializer list
initializer for variable %0 with type %1 contains multiple expressions
initializer for variable %0 with type %1 is empty
cannot deduce type for variable %1 with type %2 from %select{parenthesized|nested}0 initializer list
declaration of variable %0 with deduced type %1 requires an initializer
variable %0 declared with deduced type %1 cannot appear in its own initializer
return type of 'await_suspend' is required to be 'void' or 'bool' (have %0)
%0 is an incomplete type
property implementation must have its declaration in the category %0
%select{const_cast||||C-style cast|functional-style cast|}0 to %2, which is not a reference, pointer-to-object, or pointer-to-data-member
address of overloaded function %0 cannot be cast to type %1
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|addrspace_cast}0 from %1 to %2 converts between mismatching address spaces
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from bit-field lvalue to reference type %2
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|addrspace_cast}0 from %1 to %2 is not allowed
cannot %select{||reinterpret_cast||C-style cast||}0 from member pointer type %1 to member pointer type %2 of different size
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2 casts away qualifiers
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|addrspace_cast}0 from rvalue to reference type %2
%select{||reinterpret_cast||C-style cast||}0 from scalar %1 to vector %2 of different size
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2, which are not related by inheritance, is not allowed
%select{||reinterpret_cast||C-style cast||}0 from vector %1 to scalar %2 of different size
%select{||reinterpret_cast||C-style cast||}0 from vector %1 to vector %2 of different size
%0 is not a class type
%0 is not polymorphic
cannot use dynamic_cast to convert from %0 to %1
invalid target type %0 for dynamic_cast; target type must be a reference or pointer type to a defined class
%0 cannot be used as the type of a kernel parameter
cannot cast from lvalue of type %1 to rvalue reference type %2; types are not compatible
left hand operand to %0 must be a %select{|pointer to }1class compatible with the right hand operand, but is %2
right hand operand to %0 has non-pointer-to-member type %1
function multiversioning doesn't support %select{feature|architecture}0 '%1'
cannot allocate %select{function|reference}1 type %0 with new
%0 cannot be the name of a parameter
parameter name cannot have template arguments
property implementation must be in a class or category implementation
property implementation must have its declaration in interface %0 or one of its extensions
bad receiver type %0
reinterpret_cast cannot resolve overloaded function %0 to type %1
reinterpret_cast of a %0 to %1 needs its address, which is not allowed
cast from pointer to smaller type %2 loses information
cannot cast from rvalue of type %1 to rvalue reference type %2; types are not compatible
cannot cast from type %1 to member pointer type %2
address of overloaded function %0 cannot be static_cast to type %1
cannot cast from type %1 to pointer type %2
%0 cannot be the name of a variable or data member
base class %0 has a flexible array member
unions cannot have base classes
base class initializer %0 names both a direct base class and an inherited virtual base class
constructor initializer %0 does not name a class
base specifier must name a class
%0 attribute cannot be applied to a base specifier
binding %0 cannot appear in the initializer of its own decomposition declaration
__builtin_bit_cast %select{source|destination}0 type must be trivially copyable
__builtin_bit_cast source size does not equal destination size (%0 vs %1)
%select{signed|unsigned}0 _BitInt must have a bit size of at least %select{2|1}0
%select{signed|unsigned}0 _BitInt of bit sizes greater than %1 not supported
bit-field %0 has negative width (%1)
named bit-field %0 has zero width
%select{bit-field %1|anonymous bit-field}0 is too wide (%2 bits)
width of%select{ anonymous|}0 bit-field%select{| %1}0 (%2 bits) exceeds the %select{width|size}3 of its type (%4 bit%s4)
variable is not assignable (missing __block type specifier)
declaration of block scope identifier with linkage cannot have an initializer
__block attribute not allowed, only allowed on local variables
__block attribute not allowed on declaration with a variably modified type
non-void block should return a value
block cannot return %select{array|function}0 type %1
blocks support disabled - compile with -fblocks or %select{pick a deployment target that supports them|for OpenCL C 2.0 or OpenCL C 3.0 with __opencl_c_device_enqueue feature}0
reference to non-static member function must be called%select{|; did you mean to call it with no arguments?}0
%select{string|character|boolean|numeric}0 literal must be prefixed by '@' in a collection
'break' statement not in loop or switch statement
__builtin_btf_type_id argument %0 not a constant
first argument to __builtin_annotation must be an integer
second argument to __builtin_annotation must be a non-wide string constant
this builtin is not supported on the requested cpu, please specify -mcpu=%0 or newer
definition of builtin function %0
builtin functions must be directly called
function-style cast to a builtin type can only take one argument
%ordinal0 argument must be a %select{vector, integer or floating point type|matrix|pointer to a valid matrix element type|signed integer or floating point type|vector type|floating point type|vector of integers}1 (was %2)
%select{non-pointer|function pointer|void pointer}0 argument to '__builtin_launder' is not allowed
argument to __builtin_longjmp must be a constant 1
__builtin_longjmp is not supported for the current target
matrix types extension is disabled. Pass -fenable-matrix to enable it
%0 dimension is outside the allowed range [1, %1]
the pointee of the 2nd argument must match the element type of the 1st argument (%0 != %1)
%0 argument must be a constant unsigned integer expression
cannot store matrix to read-only pointer
stride must be greater or equal to the number of rows
unsupported signature for %q0
call to '%select{__builtin_operator_new|__builtin_operator_delete}0' selects non-usual %select{allocation|deallocation}0 function
cannot redeclare builtin function %0
'%0' is only available in %1
__builtin_setjmp is not supported for the current target
builtin is not supported on this target
this builtin is only available on x86-64 and aarch64 targets
%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature, not permitted in C++
calling %0 with incomplete return type %1
argument type %0 is incomplete
calling function with incomplete return type %0
declaring overloaded %0 as 'static' is a C++2b extension
'callback' attribute argument %0 is not a known function parameter
'callback' attribute specifies invalid callback callee
multiple 'callback' attributes specified
'callback' attribute specifies no callback callee
'callback' attribute callee may not be variadic
'callback' attribute callee does not have function type
'callback' argument at position %0 references unavailable implicit 'this'
'called_once' attribute only applies to function-like parameters
cannot find suitable %select{getter|setter}0 for property %1
cannot form a pointer-to-member to member %0 of reference type %1
cannot pass non-trivial C object of type %0 by value to variadic %select{function|block|method|constructor}1
cannot pass object with interface type %0 by value through variadic %select{function|block|method|constructor}1
cannot pass object with interface type %1 by value to variadic %select{function|block|method|constructor}2; expected type from format string was %3
cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2
cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
capture host variable %0 by reference in device or host device lambda function
capturing a structured binding is not yet supported in OpenMP
__block variable %0 cannot be captured in a %select{lambda expression|captured statement}1
non-local lambda expression cannot have a capture-default
%0 in capture list does not name a variable
%0 can appear only once in a capture list
%0 cannot be captured because it does not have automatic storage duration
by-copy capture of value of abstract type %0
by-copy capture of variable %0 with %select{incomplete|sizeless}1 type %2
%select{function|parameter}0 declared '[[carries_dependency]]' after its first declaration
'[[carries_dependency]]' attribute only allowed on parameter in a function declaration or lambda
'case' statement not in switch statement
cannot type-cast from __bf16
casting from randomized structure pointer type %0 to %1
operand of type %0 cannot be cast to a pointer type
pointer cannot be cast to type %0
cannot type cast @selector expression
cannot type-cast to __bf16
cannot catch incomplete type %0
cannot catch pointer to incomplete type %0
cannot catch reference to incomplete type %0
@catch parameter is not a pointer to an interface type
cannot catch exceptions by rvalue reference
cannot catch %select{|reference to }0sizeless type %1
cannot catch variably modified type %0
cannot define %select{category|class extension}0 for undefined class %1
property declared in category %0 cannot be implemented in class implementation
function declared '%0' here was previously declared %select{'%2'|without calling convention}1
parameter %0 must have a complete type to use function %1 with the %2 calling convention
function with no prototype cannot use the %0 calling convention
variadic function cannot use %0 calling convention
CFString literal is not a string constant
circular inheritance between %0 and %1
cannot declare class extension for %0 after class implementation
base %0 is marked '%select{final|sealed}1'
property %0 is a class property; did you mean to access it with class '%1'?
%0 redeclared with '%1' access
'objc_class_stub' attribute cannot be specified on a class that does not have the 'objc_subclassing_restricted' attribute
property follows Cocoa naming convention for returning 'owned' objects
the type %0 is not a pointer to a fast-enumerable object
type of machine mode does not support base vector types
compound literal in function scope may not be qualified with an address space
%select{block pointer|pointer|reference}0 to function type %select{%2 |}1cannot have '%3' qualifier
concept declarations may only appear in global or namespace scope
extraneous template parameter list in concept definition
concept cannot have associated constraints
concept template parameter list must have at least one parameter; explicit specialization of concepts is not allowed
conditional expression returns %select{values with incompatible nested pointer types|functions with incompatible firebloom attributes}2%diff{ $ and $|}0,1
operands to conditional of types%diff{ $ and $|}0,1 are incompatible in ARC mode
conditional expression is ambiguous; %diff{$ can be converted to $ and vice versa|types can be convert to each other}0,1
conditional expression is ambiguous; %diff{$ and $|types}0,1 can be converted to several common types
cannot mix vectors and extended vectors in a vector conditional
vector condition type %0 and result type %1 do not have elements of the same size
GNU vector conditional operand cannot be %select{void|a throw expression}0
vector operands to the vector conditional must be the same type %diff{($ and $)|}0,1}
enumeration type %0 is not allowed in a vector conditional
vector condition type %0 and result type %1 do not have the same number of elements
%select{left|right}1 operand to ? is void, but %select{right|left}1 operand is of type %0
CUDA special function '%0' must have scalar return type
conflicting types for alias %0
conflicting option '-fcoro-aligned-allocation' and '-fno-aligned-allocation'
conflicting code segment specifiers
instance variable %0 has conflicting bit-field width
conflicting instance variable names: %0 vs %1
instance variable %0 has conflicting type%diff{: $ vs $|}1,2
virtual function %0 has different attributes %diff{($) than the function it overrides (which has $)|than the function it overrides}1,2
virtual function %0 has different calling convention attributes %diff{($) than the function it overrides (which has calling convention $)|than the function it overrides}1,2
conflicting super class name %0
conflicting types for %0
argument to %0 must be a constant integer
consteval function %0 cannot override a non-consteval function
statement not allowed in %select{constexpr|consteval}1 %select{function|constructor}0
no return statement in %select{constexpr|consteval}0 function
destructor cannot be declared %select{<ERROR>|constexpr|consteval|constinit}0
destructor cannot be declared %select{<ERROR>|constexpr|consteval|constinit}0 because %select{data member %2|base class %3}1 does not have a constexpr destructor
constexpr if condition is not a constant expression
variable of non-literal type %1 cannot be defined in a constexpr %select{function|constructor}0 before C++2b
'main' is not allowed to be declared %select{constexpr|consteval}0
%select{constexpr|consteval}2 %select{function|constructor}1's %ordinal0 parameter type %3 is not a literal type
%select{constexpr|consteval}0 function's return type %1 is not a literal type
%select{non-constexpr|constexpr|consteval}1 declaration of %0 follows %select{non-constexpr|constexpr|consteval}2 declaration
non-void %select{constexpr|consteval}1 function %0 should return a value
declaration of constexpr static data member %0 requires an initializer
%select{class|struct|interface|union|enum}0 cannot be marked %select{<ERROR>|constexpr|consteval|constinit}1
constexpr variable cannot have non-literal type %0
constexpr variable %0 must have constant destruction
constexpr variable %0 must be initialized by a constant expression
virtual function cannot be constexpr
constexpr %select{member function|constructor}0 not allowed in %select{struct|interface|class}1 with virtual base %plural{1:class|:classes}2
variably-modified type %0 cannot be used in a constexpr %select{function|constructor}1
%select{<ERROR>|constexpr|consteval|constinit}0 can only be used in %select{|variable and function|function|variable}0 declarations
'constinit' specifier added after initialization of variable
local variable cannot be declared 'constinit'
non-templated function cannot have a requires clause
virtual function cannot have a requires clause
copy constructor must pass its first argument by reference
constructor cannot be declared '%0'
constructor cannot be redeclared
constructor cannot have a return type
class extension has no primary class
cannot jump from this continue statement to the loop increment; jump bypasses initialization of loop condition variable
'continue' statement not in loop statement
conversion function must be a non-static member function
conversion function cannot be redeclared
conversion function cannot have a return type
conversion function cannot convert to an array type
conversion function cannot convert to a function type
conversion function cannot be variadic
cannot specify any part of a return type in the declaration of a conversion function%select{; put the complete type after 'operator'|; use a typedef to declare a conversion to %1|; use an alias template to declare a conversion to %1|}0
conversion function cannot have any parameters
first two arguments to __builtin_convertvector must have the same number of elements
first argument to __builtin_convertvector must be a vector
second argument to __builtin_convertvector must be a vector type
'&' must precede a capture when the capture default is '='
std::coroutine_handle must have a member named '%0'
'%1' cannot be used in %select{a constructor|a destructor|the 'main' function|a constexpr function|a function with a deduced return type|a varargs function|a consteval function}0
Objective-C methods as coroutines are not yet supported
'%0' cannot be used outside a function
the expression 'co_await __promise.final_suspend()' is required to be non-throwing
%0: 'get_return_object_on_allocation_failure()' must be a static member function
the coroutine promise type %0 declares both 'return_value' and 'return_void'
%0 is required to have a non-throwing noexcept specification when the promise type declares 'get_return_object_on_allocation_failure()'
this function cannot be a coroutine: %0 is an incomplete type
%0 is required to declare the member 'unhandled_exception()'
this function cannot be a coroutine: missing definition of specialization %0
'%0' cannot be used in an unevaluated context
unable to find %select{'::operator new(size_t, nothrow_t)'|'::operator new(size_t, align_val_t, nothrow_t)'}1 for %0
'operator new' provided by %0 is not usable with the function signature of %1
'%0' cannot be used in the handler of a try block
return type of virtual function %3 is not covariant with the return type of the function it overrides (ambiguous conversion from derived class %0 to base class %1:%2)
invalid covariant return for virtual function: %1 is a %select{private|protected}2 base class of %0
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is incomplete)
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is not derived from %2)
return type of virtual function %0 is not covariant with the return type of the function it overrides (class type %1 is more qualified than class type %2
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 has different qualifiers than %2)
'cpu_dispatch' function redeclared with different CPUs
multiple 'cpu_specific' functions cannot specify the same CPU: %0
%select{constructor|destructor}1 %0 must not return void expression
illegal device builtin %select{surface|texture}0 reference class template %1 declared here
illegal device builtin %select{surface|texture}0 reference type %1 declared here
cannot use '%0' in %select{__device__|__global__|__host__|__host__ __device__}1 function
__shared__ variable %0 cannot be 'extern'
__shared__ local variables not allowed in %select{__device__|__global__|__host__|__host__ __device__}0 functions
__constant__, __device__, and __managed__ are not allowed on non-static local variables
%select{__device__|__global__|__host__|__host__ __device__}0 function %1 cannot overload %select{__device__|__global__|__host__|__host__ __device__}2 function %3
constexpr function %0 without __host__ or __device__ attributes cannot overload __device__ function with same signature.  Add a __host__ attribute, or build with -fno-cuda-host-device-constexpr.
cannot use variable-length arrays in %select{__device__|__global__|__host__|__host__ __device__}0 functions
module name '%0' specified on command line does not match name of module
%select{reference|backing array for 'std::initializer_list'}2 %select{|subobject of }1member %0 %select{binds to|is}2 a temporary object whose lifetime would be shorter than the lifetime of the constructed object
dealloc return type must be correctly specified as 'void' under ARC, instead of %0
GNU decimal type extension not supported
%0 attribute cannot be applied to a statement
'%0' declared as an array with a negative size
declarator requires an identifier
'__declspec(thread)' applied to variable that already has a thread-local storage specifier
'decltype(auto)' cannot be combined with other type specifiers
cannot form %select{pointer to|reference to|array of}0 'decltype(auto)'
'decltype(auto)' can only be used as a return type in a function declaration
cannot deduce 'decltype(auto)' from initializer list
'decltype(auto)' not allowed here
'decltype' cannot be used to name a declaration
cannot decompose members of ambiguous base class %1 of %0:%2
cannot decompose class type %0 because it has an anonymous %select{struct|union}1 member
decomposition declaration not permitted in this context
cannot decompose members of inaccessible base class %1 of %0
cannot decompose %select{private|protected}0 member %1 of %3
cannot decompose lambda closure type
cannot decompose class type %1: %select{its base classes %2 and|both it and its base class}0 %3 have non-static data members
decomposition declaration must be the only declaration in its group
decomposition declaration cannot be declared with parentheses
decomposition declaration %0 requires an initializer
decomposition declaration cannot be declared %plural{1:'%1'|:with '%1' specifiers}0
cannot decompose this type; 'std::tuple_element<%0>::type' does not name a type
cannot decompose this type; 'std::tuple_size<%0>::value' is not a valid integral constant expression
decomposition declaration template not supported
decomposition declaration cannot be declared with type %0; declared type must be 'auto' or reference to 'auto'
cannot decompose %select{union|non-class, non-array}1 type %2
type %0 decomposes into %3 %plural{1:element|:elements}2, but %select{%plural{0:no|:only %1}1|%1}4 %plural{1:name was|:names were}1 provided
cannot decrement expression of type bool
cannot %select{form pointer to|form reference to|form array of|form function returning|use parentheses when declaring variable with}0 deduced class template specialization type
ambiguous deduction for template arguments of %0
no viable constructor or deduction guide for deduction of template arguments of %0
class template argument deduction for %0 selected a deleted constructor
class template argument deduction for %0 selected an explicit %select{constructor|deduction guide}1 for copy-list-initialization
template %0 has no definition and no %select{|viable }1deduction guides for deduction of template arguments
%select{<error>|function template|variable template|alias template|template template parameter|concept|template}0 %1 requires template arguments; argument deduction only allowed for class templates
deduced non-type template argument does not have the same type as the corresponding template parameter%diff{ ($ vs $)|}0,1
deduced return types are a C++14 extension
typename specifier refers to %select{class template|function template|variable template|alias template|template template parameter|template}0; argument deduction not allowed here
deduced type %1 of deduction guide is not %select{|written as }2a specialization of template %0
deduction guide cannot have a function definition
deduction guide cannot be declared '%0'
cannot specify deduction guide for %select{<error>|function template|variable template|alias template|template template parameter|concept|dependent template name}0 %1
deduction guide declaration without trailing return type
redeclaration of deduction guide
deduction guide cannot be %select{explicitly instantiated|explicitly specialized}0
deduction guide template contains %select{a template parameter|template parameters}0 that cannot be deduced
cannot specify any part of a return type in the declaration of a deduction guide
deduction guide has different access from the corresponding member template
deduction guide must be declared in the same scope as template %q0
exception specifications of %select{return|argument}0 types differ
default template argument in a class template partial specialization
addition of default argument on redeclaration makes this constructor a %select{default|copy|move}0 constructor
default initialization of an object of const type %0%select{| without a user-provided default constructor}1
default member initializer for %0 uses itself
default member initializer for %1 needed within definition of enclosing class %0 outside of member functions
'default' statement not in switch statement
return type of defaulted 'operator<=>' cannot be deduced because three-way comparison for %select{|member|base class}0 %1 has a deduced return type and is not yet defined
deduced return type for defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator must be 'auto', not %1
defaulted member %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator must be const-qualified
%select{<ERROR>|equality|three-way|equality|relational}0 comparison operator is not a friend of %select{|incomplete class }1%2
%select{non-member|member}0 %select{<ERROR>|equality|three-way|equality|relational}1 comparison operator comparison operator must have %select{2|1}0 parameters
invalid parameter type for defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator; found %1, expected %2%select{| or %4}3
parameters for defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator must have the same type%diff{ (found $ vs $)|}1,2
invalid parameter type for non-member defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator; found %1, expected class or reference to a constant class
return type for defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator must be 'bool', not %1
comparison operator template cannot be defaulted
the parameter for an explicitly-defaulted copy assignment operator must be an lvalue reference type
the parameter for this explicitly-defaulted copy %select{constructor|assignment operator}0 is const, but a member or base requires it to be non-const
the parameter for an explicitly-defaulted move %select{constructor|assignment operator}0 may not be const
an explicitly-defaulted %select{|copy |move }0constructor cannot have default arguments
an explicitly-defaulted %select{copy|move}0 assignment operator may not have 'const'%select{, 'constexpr'|}1 or 'volatile' qualifiers
explicitly-defaulted %select{copy|move}0 assignment operator must return %1
an explicitly-defaulted %select{|copy |move }0constructor cannot be variadic
the parameter for an explicitly-defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 may not be volatile
definition of explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}0
definition of implicitly declared %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}1
delegating constructors are permitted only in C++11
an initializer for a delegating constructor must appear alone
converting delete expression from type %0 to type %1 invokes an explicit conversion function
deleting incomplete class type %0; no conversions to pointer type
cannot delete expression of type %0
deleted definition must be first declaration
attempt to use a deleted function
constructor inherited by %0 from base class %1 is implicitly deleted
'main' is not allowed to be deleted
deleted function %0 cannot override a non-deleted function
typename specifier refers to %select{class template|function template|variable template|alias template|template template parameter|template}0 member in %1; argument deduction not allowed here
no candidate function template was found for dependent friend function template specialization
nested name specifier for a declaration cannot depend on a template parameter
type of specialized non-type template argument depends on a template parameter of the partial specialization
%select{declaration|definition}0 of %select{struct|interface|union|class|enum}1 in a dependent scope
non-type template argument specializes a template parameter with dependent type %0
dereference operator in '%select{__counted_by|__sized_by}0' is only allowed for function parameters
dereference of pointer to incomplete type %0
'objc_designated_initializer' attribute only applies to init methods of interface or class extension declarations
designator in initializer for %select{scalar|indivisible sizeless}0 type %1
designator into flexible array member subobject
%select{no_destroy|always_destroy}0 attribute can only be applied to a variable with static or thread storage duration
destroying operator delete can have only an optional size and optional alignment parameter
destructor cannot be declared '%0'
identifier %0 in object destruction expression does not name the type %1 of the object being destroyed
identifier %0 in object destruction expression does not name a type
destructor type %0 in object destruction expression does not match the type %1 of the object being destroyed
expected the class name after '~' to name the enclosing class
identifier %0 after '~' in destructor name does not name a type
destructor must be a non-static member function
destructor cannot be redeclared
destructor cannot have a return type
destructor cannot be declared as a template
destructor cannot be variadic
destructor cannot have any parameters
invalid diagnostic type for 'diagnose_if'; use "error" or "warning" instead
conflicting asm label
declaration of %0 has a different language linkage
conflicting pass_object_size attributes on parameters
virtual function %0 has a different return type %diff{($) than the function it overrides (which has return type $)|than the function it overrides}1,2
dimension expression does not evaluate to a constant unsigned int
@selector expression formed with direct selector %0
attribute %0 cannot appear more than once on a declaration
exception specifications are not allowed beyond a single level of indirection
cannot cast %select{private|protected}2 base class %1 to %0
reference to %select{destructor|pseudo-destructor}0 must be called%select{|; did you mean to call it with no arguments?}1
reimplementation of category %1 for class %0
reimplementation of class %0
base class %0 specified more than once as a direct base class
duplicate case value '%0'
duplicate case value: '%0' and '%1' both equal '%2'
duplicate interface definition for class %0
instance variable is already declared
synthesized properties %0 and %1 both claim instance variable %2
duplicate member %0
duplicate declaration of method %0
property has a previous declaration
multiple vtable pointer authentication policies on %0
dynamic property cannot have instance variable specification
dynamic initialization is not supported for __device__, __constant__, __shared__, and __managed__ variables.
catch-all handler must come last
ISO C requires a named parameter before '...'
only function and template parameters can be parameter packs
scalar initializer cannot be empty
initializer for sizeless type %0 cannot be empty
non-integral type %0 is an invalid underlying type
mode %0 is not supported for enumeration types
enumeration previously declared with %select{non|}0fixed underlying type
enumeration previously declared as %select{un|}0scoped
enumeration redeclared with different underlying type %0 (was %1)
enumerator %0 does not exist in instantiation of %1
enumerator value is not representable in the underlying type %0
enumerator value %0 is not representable in the underlying type %1
the event_t type can only be used with __private address space qualifier
exception specification of %0 uses itself
exception specifications are not allowed in %select{typedefs|type aliases}0
exception specification needed for member of incomplete class %0
exception specification is not available until end of class definition
cannot use '%0' with exceptions disabled
excess elements in %select{array|vector|scalar|union|struct}0 initializer
excess elements in initializer for indivisible sizeless type %0
excess elements in char array initializer
expected an 'allocator' clause inside of the target region; provide an 'allocator' clause or use 'requires' directive with the 'dynamic_allocators' clause
expected an allocator expression inside of the target region; provide an allocator expression or use 'requires' directive with the 'dynamic_allocators' clause
expected a callable expression as %ordinal0 argument to %1, found %2
%0 is not a class%select{ or namespace|, namespace, or enumeration}1
kernel must have void return type
expected pointer to struct as %ordinal0 argument to %1, found %2
partial ordering for explicit instantiation of %0 is ambiguous
explicit instantiation cannot be 'constexpr'
explicit instantiation refers to static data member %q0 that is not an instantiation
explicit instantiation declaration (with 'extern') follows explicit instantiation definition (without 'extern')
explicit instantiation has dependent template arguments
duplicate explicit instantiation of %0
explicit instantiation of %0 in class scope
explicit instantiation cannot be 'inline'
explicit instantiation declaration of %0 with internal linkage
explicit instantiation refers to member function %q0 that is not an instantiation
explicit instantiation of %0 must occur at global scope
explicit instantiation of non-templated type %0
explicit instantiation of %0 does not refer to a function template, variable template, member function, member class, or static data member
explicit instantiation of typedef %0
explicit instantiation of %0 not in a namespace enclosing %1
explicit instantiation declaration requires a name
explicit instantiation cannot have a storage class
explicit instantiation of undefined function template %0
explicit instantiation of undefined %select{member class|member function|static data member}0 %1 of class template %2
explicit instantiation of undefined variable template %q0
explicit instantiation of %q0 must occur in namespace %1
explicit instantiation of %q0 must specify a template argument list
'explicit' can only be applied to a constructor or conversion function
'explicit' can only appear on non-static member functions
'explicit' can only be specified inside the class definition
explicit specialization has extraneous, inconsistent storage class '%select{none|extern|static|__private_extern__|auto|register}0'
export declaration cannot be used in a private module fragment
inline function not defined%select{| before the private module fragment}0
declaration of %0 with internal linkage cannot be exported
%select{empty|static_assert|asm}0 declaration cannot be exported
cannot export %0 as it is not at namespace scope
export declaration can only be used within a module interface unit%select{ after the module declaration|}0
module partition implementations cannot be exported
using declaration referring to %1 with %select{internal|module|unknown}0 linkage cannot be exported
export declaration appears within anonymous namespace
export declaration appears within another export declaration
%select{case value|enumerator value|non-type template argument|array size|explicit specifier argument|noexcept specifier argument}0 is not a constant expression
expression is not an %select{integer|integral}0 constant expression
expression is not a string literal
vector component access exceeds type %0
illegal vector component name '%0'
declaration of %1 %select{with C language linkage|in global scope}0 conflicts with declaration %select{in global scope|with C language linkage}0
extern declaration of %0 follows non-extern declaration
non-void block does not return a value
fallthrough annotation does not directly precede switch label
fallthrough annotation is outside switch statement
%0 attribute is only allowed on empty statements
field %0 declared as a function
field designator cannot initialize a %select{non-struct, non-union|non-class}0 type %1
field designator %0 does not refer to a non-static data member
field designator %0 does not refer to any field in type %1
field designator %0 does not refer to any field in type %1; did you mean %2?
field has %select{incomplete|sizeless}0 type %1
data member instantiated with function type %0
field may not be qualified with an address space
filter expression has non-integral type %0
declaration of %0 overrides a '%select{final|sealed}1' function
%0 cannot be set as a default pointer attribute
parameter of array type %0 decays to a __single pointer, and will not allow arithmetic
address argument to atomic arithmetic operation must be a pointer to '__unsafe_indexable' pointer (%0 invalid)
atomic operation on '%select{__indexable|__bidi_indexable|__counted_by|__sized_by|__ended_by}0' pointer is not yet supported
_Atomic on '%select{__indexable|__bidi_indexable|__counted_by|__sized_by|__ended_by|__terminated_by}0' pointer is not yet supported
passing %select{'__counted_by'|'__sized_by'|'__ended_by'|end}0 pointer as __auto_type initializer is not yet supported
parameter '%0' with '%select{__counted_by|__sized_by|__ended_by}1' attribute depending on an indirect count is implicitly read-only and cannot be passed as an indirect argument
arrays with an explicit size decay to counted pointers and cannot also have a count attribute
pointer cannot be '%0' and '__%select{bidi_indexable|indexable}1' at the same time
pointer cannot have count and range at the same time
pointer cannot have more than one %select{bound|type|count|end}0 attribute
cannot apply '__counted_by' attribute to %0 because %1 has unknown size%select{|; did you mean to use '__sized_by' instead?}2
cannot reference '%0' after it is changed during consecutive assignments
not allowed to change out parameter used as dependent count expression of other parameter
not allowed to change out parameter with dependent count
assignments to dependent variables should not have side effects between them
external count of a pointer cannot be used with inline assembly
argument of '%select{__counted_by|__sized_by|__ended_by}0' attribute cannot refer to declaration of a different lifetime
argument of '%select{__counted_by|__sized_by|__ended_by}0' attribute cannot refer to declaration from a different scope
initalizer for %select{count|size|'__counted_by' pointer|'__sized_by' pointer|'__ended_by' pointer|end pointer}0 with side effects is not supported yet
compound assignment on dynamic bound pointer type %0 with side effects is not supported yet;instead, use seperate assignment and binary expressions
%select{negative|positive}0 pointer arithmetic on %select{'__counted_by' |'__sized_by' ||end }1pointer%select{|| that starts the '__ended_by' chain|}1 always traps
conflicting '%select{__counted_by|__sized_by|__ended_by|__terminated_by}0' attribute with the previous %select{function|variable}1 declaration
argument of '%select{__counted_by|__sized_by}0' attribute can only reference function with 'const' attribute
argument of function call '%0' in '__counted_by' attribute is not a constant expression
end-pointer must be '__single'
variable %0 cannot be used in multiple '%select{__counted_by|__sized_by|__ended_by}1' attributes
Firebloom forbids arithmetic on pointers to types with a flexible array member
flexible array member is initialized without a count
flexible array member is initialized with %0 element%select{|s}2, but count value is initialized to %1
'__unsafe_forge_%select{bidi_indexable|single|terminated_by}0' requires a pointer, array or integer address argument
'__unsafe_forge_bidi_indexable' requires an integer size argument
negative %select{address|size}0 argument to '__unsafe_forge_%select{bidi_indexable|single|terminated_by}1'
function pointers cannot be indexable
pointer with '%select{__counted_by|__sized_by|__ended_by}0' and the argument of the attribute must be defined in the same translation unit
incompatible count expression (%0) vs. (%1) in argument to function
type of %0, %1, is incompatible with parameter of type %2
incompatible dynamic count pointer argument to parameter of type %0
passing%select{| address of}1 %0 referred to by '%select{__counted_by|__sized_by}2' to a parameter that is not referred to by the same attribute
%select{%diff{assigning to $ from incompatible type $|assigning type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1|}2 is an unsafe operation; use '__unsafe_terminated_by_from_indexable()' or '__unsafe_forge_terminated_by()' to perform this conversion
'__terminated_by' pointer converted from a string literal must be NUL-terminated
%select{%diff{assigning to $ from incompatible type $|assigning type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1|}2 that discards '__terminated_by' attribute is not allowed
pointers with incompatible terminators %select{%diff{assigning to $ from incompatible type $|assigning type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1|}2
%select{%diff{assigning to $ from incompatible type $|assigning type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1|}2 requires a linear search for the terminator; use '__terminated_by_to_indexable()' to perform this conversion explicitly
cannot convert single pointer to incomplete type %0 to indexable pointer %1; consider making the destination '__single' to perform this conversion
incrementing '%0' without updating '%1' always traps
incrementing '%0' always traps
decremented indexable pointer '%0' is out of bounds
array subscript with a negative index on indexable pointer '%0' is out of bounds
%select{|implicitly }0initializing negative %select{count|size}1 for %select{'__counted_by'|'__sized_by'}1 pointer%select{| field}3 %2
cannot initialize %select{'__counted_by'|'__sized_by'}0 pointer field %1 with %select{count|size}0 %2 which is larger than the actual %select{count|size}0 of the field initializer '%3'
local dependent count decl should be declared side by side to its dependent pointer
attribute %0 is not allowed for local variables with external storage
accessing %select{'%select{__counted_by|__sized_by|__ended_by}0' pointer member|member referred to by '__ended_by'}1 using %select{an object|a pointer}2 with side effects is not yet supported; store '%3' into a local variable first
base of member reference is a null pointer
incompatible pointer types assigning %0 with an expression with mismatching size attributes %1
assignment to %select{%2 |}3'%0' requires corresponding assignment to %select{|%2 }3'%1'; add self assignment '%1 = %1' if the value has not changed
multiple consecutive assignments to a %select{dynamic count|dynamic count pointer|ranged pointer}0 %1 must be simplified; keep only one of the assignments
negative count expression
%0 attribute on nested pointer type is only allowed on indirect parameters
%0 is not allowed for nested pointers
cannot extract the %select{lower|upper}0 bound of %1 because %select{it is not a pointer|it has no bounds specification|its bounds are not contained within the pointer}2
assignment to '%0' requires an immediately preceding assignment to '%1'; add self assignment '%1 = %1' if the value has not changed
local variable %0 must be declared right next to its dependent decl
non-pointer to safe pointer conversion is not allowed with firebloom; use '__unsafe_forge_single' or '__unsafe_forge_bidi_indexable'
array subscript on %select{single|'__terminated_by'}0 pointer '%1' %select{must use a constant index of 0 to be in bounds|is not allowed}0
pointer with bounds cannot be used with inline assembly
Pointer authentication is currently unsupported on indexable pointers
parameter '%0' with '%select{__counted_by|__sized_by}1' attribute depending on an indirect count is implicitly read-only
parameter '%0' %select{with '__ended_by' attribute depending on an indirect end pointer|referred to by an indirect '__ended_by' pointer}1 is implicitly read-only
attribute %0 is only allowed for struct fields or function parameters
pointer arithmetic on single pointer '%0' is out of bounds%select{|; consider adding '__counted_by' to '%2'}1
%0 cannot apply to arrays: use 'counted_by' instead
cannot take address of pointer without explicit bounds
variable referred to by '%select{__counted_by|__sized_by|__ended_by}0' cannot be pointed to by any other variable; exception is when the variable is passed as a compatible argument to a function
pointer with '%select{__counted_by|__sized_by|__ended_by}0' cannot be pointed to by any other variable; exception is when the variable is passed as a compatible argument to a function
'__terminated_by' attribute cannot be applied to empty arrays
pointee types of the pointer and pointer to terminator arguments must be the same
pointee type of the pointer argument must be an integer or a pointer
pointer to terminator argument must be a pointer (%0 invalid)
pointer argument must be a safe pointer (%0 invalid)
incomplete array '%0' with '__terminated_by' attribute must be initialized with at least one element
%select{array|pointer}0 cannot have more than one '__terminated_by' attribute
pointer arithmetic on '__terminated_by' pointer '%0' can only increase the value by one
cannot decrement '__terminated_by' pointer '%0'
terminator in array '%0' must be a compile-time constant
array '%0' with '__terminated_by' attribute is initialized with an incorrect terminator (expected: %1; got %2)
terminator value is not a constant expression
pointer argument must be a '__terminated_by' pointer (%0 invalid)
pointer argument must be terminated by %0 (got %1)
%select{array|pointer}0 '%1' with '__terminated_by' attribute must be initialized
%select{element|pointee}0 type of %select{array|pointer}0 with '__terminated_by' attribute must be an integer or a pointer
array '%0' with '__terminated_by' attribute must be initialized with a string literal or an initializer list
'__terminated_by' attribute currently can be applied only to '__single' pointers
'__terminated_by' attribute can be applied to pointers, constant-length arrays or incomplete arrays
%0 inside typedef is only allowed for function type
conversion from pointer type %0 to a counted pointer of %1 elements never succeeds
conversion from pointer type %0 with pointee of size %1 to sized pointer type with greater size %2 never succeeds
%select{%diff{assigning to $ from incompatible type $|assigning type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1|}2 casts away '__unsafe_indexable' qualifier; use '__unsafe_forge_single' or '__unsafe_forge_bidi_indexable' to perform this conversion
taking the address of an incomplete __counted_by array is not yet supported
passing%select{| address of}1 %0 as an indirect parameter; must also pass %2 %select{|or its address }3because the type of %select{%0|%2}4, %5, refers to %select{%2|%0}4
void pointers must use a byte count attribute instead of an item count
first argument to __builtin_call_with_static_chain must not be a block call
first argument to __builtin_call_with_static_chain must not be a builtin call
first argument to __builtin_call_with_static_chain must be a non-member call expression
first argument to __builtin_call_with_static_chain must not be a pseudo-destructor call
first argument to 'va_arg' is of type %0 and not 'va_list'
ARC forbids flexible array members with retainable object type
flexible array member %0 not allowed in otherwise empty %select{struct|interface|union|class|enum}1
flexible array member %0 of type %1 with non-trivial destruction
initialization of flexible array member is not allowed
flexible array requires brace-enclosed initializer
Firebloom forbids passing %0 by copy because it has a flexible array member
flexible array member %0 with type %1 is not at the end of %select{struct|interface|union|class|enum}2
flexible array member %0 in a union is not allowed
flexible array member %0 not allowed in %select{struct|interface|union|class|enum}1 which has a virtual base class
expression not permitted as operand of fold expression
unary fold expression has empty expansion for operator '%0' with no fallback value
instantiating fold expression with %0 arguments exceeded expression nesting limit of %1
binary fold expression has unexpanded parameter packs in both operands
for range declaration must declare a variable
cannot use type %0 as a range
invalid range expression of type %0; did you mean to dereference it with '*'?
cannot use incomplete type %0 as a range
invalid range expression of type %0; no viable '%select{begin|end}1' function available
cannot use type %0 as an iterator
loop variable %0 may not be declared %select{'extern'|'static'|'__private_extern__'|'auto'|'register'|'constexpr'|'thread_local'}1
format attribute cannot specify the implicit this argument as the format string
format argument not a string type
function does not return %0
strftime format attribute requires 3rd parameter to be 0
ISO C++ forbids forward references to 'enum' types
attempting to use the forward class %0 as superclass of %1
explicit qualification required to use member %0 from dependent base class
member %0 used before its declaration
friend declaration of %0 does not match any declaration in %1
friend declaration specifying a default argument must be a definition
friend declaration specifying a default argument must be the only declaration
friend function cannot be defined in a local class
friends cannot be members of the declaring class
'friend' must appear first in a non-function declaration
incomplete result type %0 in function definition
function cannot return %select{array|function}0 type %1
function cannot return qualified void type %0
function declared with %0 attribute was previously declared without the %0 attribute
functions may not be declared with 'cmse_nonsecure_call' attribute
%0 marked 'override' but does not override any member functions
type %0 of function parameter pack does not contain any unexpanded parameter packs
argument must be a function
function template partial specialization is not allowed
function template specialization %0 ambiguously refers to more than one function template; explicitly specify%select{| additional}1 template arguments to identify a particular function template
no function template matches function template specialization %0
weak attribute declared on a __strong type property in GC mode
controlling expression type %0 compatible with %1 generic association types
controlling expression type %0 not compatible with any generic association type
__builtin_get_vtable_pointer requires an argument of%select{| polymorphic}0 class pointer type, but %1 %select{was provided|has no virtual methods}0
__builtin_get_vtable_pointer requires an argument with a complete type, but %0 is incomplete
no getter method for read from property
call to global function %0 not configured
cannot jump from this goto statement to its label
cannot jump from this goto statement to label %0 inside an inline assembly block
half precision constant requires cl_khr_fp16
invalid argument: symbol must be a device-side function or global variable
attribute %0 is unsupported in %select{Pixel|Vertex|Geometry|Hull|Domain|Compute|Library|RayGeneration|Intersection|AnyHit|ClosestHit|Miss|Callable|Mesh|Amplification|Invalid}1 shaders, requires %2
%0 attribute parameters do not match the previous declaration
invalid space specifier '%0' used; expected 'space' followed by an integer, like space1
initializer priorities are not supported in HLSL
missing numthreads attribute for %0 shader entry
semantic annotations must be present for all parameters of an entry function or patch constant function
argument '%select{X|Y|Z}0' to numthreads attribute cannot exceed %1
total number of threads cannot exceed %0
the '%select{&|*|->}0' operator is unsupported in HLSL
%select{pointers|references}0 are unsupported in HLSL
register number should be an integer
invalid resource class specifier '%0' used; expected 'b', 's', 't', or 'u'
type argument of iboutletcollection attribute cannot be a builtin type
invalid type %0 as argument of iboutletcollection attribute
ambiguous conversion from type %0 to an integral or unscoped enumeration type
integral constant expression requires explicit conversion from %0 to %1
integral constant expression has incomplete class type %0
%select{integer|integral}1 constant expression must have %select{integer|integral or unscoped enumeration}1 type, not %0
integer constant expression evaluates to value %0 that cannot be represented in a %1-bit %select{signed|unsigned}2 integer type
a parameter list without types is only allowed in a function definition
illegal operation on Objective-C container subscripting
'%0' declared as array of %1
'%0' declared as array of functions of type %1
'%0' declared as array of references of type %1
'%0' does not point into a class
'%0' declared as a member pointer to a reference of type %1
'%0' declared as a member pointer to void
'%0' declared as a pointer to a reference of type %1
illegal initializer (only variables can be initialized)
illegal initializer type %0
Objective-C message has incomplete result type %0
illegal qualifiers on @catch parameter
%select{anonymous struct|union}0 member %1 has a non-trivial %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2
imaginary types are not supported
implicit conversion from %0 to %1 is not permitted in C++
cannot declare implementation of a class declared with the 'objc_class_stub' attribute
std::nothrow was not found; include <new> before defining a coroutine which uses get_return_object_on_allocation_failure()
initializer for aggregate with no elements requires explicit braces
implicit instantiation of undefined member %0
cannot %select{use builtin operator '<=>'|default 'operator<=>'}1 because type '%0' was not found; include <compare>
%0 type was not found; include <coroutine> before defining a coroutine; include <experimental/coroutine> if your version of libcxx is less than 14.0
this function cannot be a coroutine: %0 is not a class
this function cannot be a coroutine: %q0 has no member named 'promise_type'
cannot deduce type of initializer list because std::initializer_list was not found; include <initializer_list>
static data member of type %0 must be initialized out of line
in-class initializer for static data member of type %0 requires 'constexpr' specifier
non-const static data member must be initialized out of line
in-class initializer for static data member is not a constant expression
static const volatile data member must be initialized out of line
attribute %0 is already applied with different arguments
target exception specification is not superset of source
conversion between pointers to functions with incompatible firebloom attributes
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2
API notes replacement type %0 has a different size from original type %1
incompatible vector types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
base class has incomplete type
enumeration %0 is incomplete
%select{|pointer to |reference to }0incomplete type %1 is not allowed in exception specification
member access into incomplete type %0
incomplete type %0 named in nested name specifier
incomplete type in call to object of type %0
incomplete receiver type %0
cannot synthesize property %0 with incomplete type %1
incomplete type %0 where a complete type is required
'@encode' of incomplete type %0
incomplete type %0 used in type trait expression
cannot set vtable pointer authentication on an incomplete type %0
'typeid' of incomplete type %0
inconsistent number of instance variables specified
defaulted definition of %select{%select{<ERROR>|equality|three-way|equality|relational}1 comparison operator|three-way comparison operator}0 cannot be declared %select{constexpr|consteval}2 because %select{it|the corresponding implicit 'operator=='}0 invokes a non-constexpr comparison function
defaulted declaration of %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 cannot be consteval because implicit definition is not constexpr
defaulted definition of %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 is not constexpr
number of elements must be either one or match the size of the vector
cannot %select{decrement|increment}0 expression of enum type %1
cannot jump from this %select{indirect|asm}0 goto statement to one of its possible targets
indirect goto in function with no address-of-label expressions
cannot deduce type for lambda capture %0 from initializer of type %2
cannot deduce type for lambda capture %0 from initializer list
initializer for lambda capture %0 contains multiple expressions
initializer missing for lambda capture %0
cannot deduce type for lambda capture %1 from %select{parenthesized|nested}0 initializer list
cannot initialize %select{a variable|a parameter|template parameter|return object|statement expression result|an exception object|a member subobject|an array element|a new value|a value|a base class|a constructor delegation|a vector element|a block element|a block element|a complex element|a lambda capture|a compound literal initializer|a related result|a parameter of CF audited function}0 %diff{of type $ with an %select{rvalue|lvalue}2 of type $|with an %select{rvalue|lvalue}2 of incompatible type}1,3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%5 vs %6)|: different exception specifications}4
initializer element is not a compile-time constant
cannot create object of function type %0
initialization of incomplete type %0
%select{|non-aggregate }0type %1 cannot be initialized with an initializer list
init methods must return an object pointer type, not %0
initialization of non-aggregate type %0 with an initializer list
cannot initialize Objective-C class type %0
can only use 'init_priority' attribute on file-scope definitions of objects of class type
reference member of type %0 uninitialized
initializer would partially override prior initialization of object of type %1 with non-trivial destruction
initializer-string for char array is too long
inline declaration of %0 follows non-inline definition
inline declaration of %0 not allowed in block scope
'main' is not allowed to be declared inline
non-inline namespace cannot be reopened as inline
'inline' can only appear on functions%select{| and non-local variables}0
invalid block pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
integer sequences must have integral element type
integer sequences must have non-negative sequence length
%plural{[0,2]:must use a qualified name when declaring|3:cannot declare}0 a %select{constructor|destructor|conversion operator|deduction guide}0 as a friend
invalid address discrimination mode %0
invalid use of a cast in a inline asm context requiring an lvalue: remove the cast or build with -fheinous-gnu-extensions
value '%0' out of range for constraint '%1'
invalid reinterpretation: sizes of %0 and %1 must match
invalid authentication key %0
interface type cannot inherit from %select{struct|non-public interface|class}0 %1
invalid or misplaced branch protection specification '%0'
collection element of type %0 is not an Objective-C object
'_Complex %0' is invalid
call to consteval function %q0 is not a constant expression
%0 cannot be declared consteval
cannot take address of consteval function %0 outside of an immediate invocation
%select{function parameter|typedef}0 cannot be %select{<ERROR>|constexpr|consteval|constinit}1
non-static data member cannot be constexpr%select{; did you intend to make it %select{const|static}0?|}1
constexpr variable declaration must be a definition
invalid conversion between ext-vector type %0 and %1
conversion between matrix type %0 and incompatible type %1 is not allowed
conversion between matrix types%diff{ $ and $|}0,1 of different size is not allowed
invalid conversion between vector type %0 and integer type %1 of different size
invalid conversion between vector type %0 and scalar type %1
invalid conversion between vector type%diff{ $ and $|}0,1 of different size
invalid cpu name for builtin
invalid option '%0' for %select{cpu_specific|cpu_dispatch}1
invalid cpu feature string for builtin
invalid custom discrimination
count expression %select{on struct field|in function declaration}0 may only reference %select{other fields of the same struct|parameters of that function}0
cannot use %0 on union fields
cannot combine with previous '%0' declaration specifier
invalid declaration specifier in template non-type parameter
definition or redeclaration of %0 cannot name the global scope
definition or redeclaration of %0 not allowed inside a block
definition or redeclaration of %0 not allowed inside a function
cannot define or redeclare %0 here because namespace %1 does not enclose namespace %2
invalid extra discrimination selection %0
cannot create a non-constant pointer to member function
invalid use of incomplete type %0
mask type size must be between 1-byte and 8-bytes
invalid use of member %0 in static member function
incompatible constant for this __builtin_neon function
invalid use of non-static data member %0
%0 is not a valid literal type for NSNumber
invalid PCS type
'__pixel' must be preceded by '__vector'.  '%0' declaration specifier not allowed here
%0 is not a valid property name (accessing an object of type %1)
invalid protocol qualifiers on non-ObjC type
'%0' qualifier is not allowed on a constructor
'%0' qualifier is not allowed on a destructor
%select{non-member function|static member function|deduction guide}0 %select{of type %2 |}1cannot have '%3' qualifier
receiver type %0 is not an Objective-C class
'super' is only valid in a method body
'_Sat' specifier is only valid on '_Fract' or '_Accum', not '%0'
'%0' cannot be signed or unsigned
invalid use of '__super', this keyword can only be used inside class or member function scope
invalid use of 'this' outside of a non-static member function
'%0' is only allowed on variable declarations
the %0 type cannot be used to declare a program scope variable
invalid application of __builtin_xnu_type_%select{signature|summary}0 to %select{variable array}1 type %2
an array type is not allowed here
a function type is not allowed here
type %2 of %select{explicit instantiation|explicit specialization|partial specialization|redeclaration}0 of %1 does not match expected type %3
cannot use '%0' with '__vector bool'
use of '__int128' with '__vector bool' requires VSX support enabled (on POWER10 or later)
cannot combine with previous '%0' declaration specifier. '__vector' must be first
use of 'double' with '__vector' requires VSX support to be enabled (available on POWER7 or later)
cannot use 'float' with '__vector'
use of '__int128' with '__vector' requires extended Altivec support (available on POWER8 or later)
cannot use 'long' with '__vector'
cannot use 'long double' with '__vector'
use of 'long long' with '__vector' requires VSX support (available on POWER7 or later) to be enabled
'%select{|short|long|long long}0 %1' is invalid
property %0 not found on object of type %1; did you mean to access instance variable %2?
property %0 attempting to use instance variable %1 declared in super class %2
instance variables cannot be of reference type
instance variable %0 accessed in class method
kernel call to non-global function %0
kernel function %0 must be a free function or static member function
kernel function type %0 must have void return type
pointer arguments to kernel functions must reside in '__global', '__constant' or '__local' address space
unnamed variable cannot be implicitly captured in a lambda expression
lambda expression in default argument cannot capture any entity
variable %0 with flexible array member cannot be captured in a lambda expression
cannot assign to a variable captured by copy in a non-mutable lambda
variable %0 cannot be implicitly captured in a lambda with no capture-default specified
a lambda expression may not appear inside of a constant expression
a lambda expression cannot appear in this context
incomplete result type %0 in lambda expression
cannot deduce lambda return type from initializer list
lambda expression in an unevaluated operand
string literal in language linkage specifier cannot have an encoding-prefix
unknown linkage language
cannot apply asm label to %select{variable|function}0 after its first use
'lifetimebound' attribute cannot be applied to a %select{constructor|destructor}0
'lifetimebound' attribute cannot be applied; %select{static |non-}0member function has no implicit object parameter
cannot initialize %select{non-class|reference}0 type %1 with a parenthesized initializer list
non-template literal operator must have one or two parameters
literal operator cannot have a default argument
literal operator must have C++ linkage
non-namespace scope '%0' cannot have a literal operator member
parameter of literal operator must have type 'unsigned long long', 'long double', 'char', 'wchar_t', 'char16_t', 'char32_t', or 'const char *'
literal operator %0 must be in a namespace or global scope
invalid literal operator parameter type %0, did you mean %1?
template parameter list for literal operator must be either 'char...' or 'typename T, T...'
literal operator template cannot have any parameters
second argument to __builtin_load_member_function_pointer must be the address of a C++ member function: for example '&Foo::func', or null
first argument to __builtin_load_member_function_pointer must have C++ class type
variable with 'loader_uninitialized' attribute cannot have an initializer
variable %0 cannot be declared both 'extern' and with the 'loader_uninitialized' attribute
redeclaration cannot add 'loader_uninitialized' attribute
variable with 'loader_uninitialized' attribute must have a trivial default constructor
'__local' variable cannot have an initializer
%select{non-const|volatile}0 lvalue reference to type %1 cannot bind to an initializer list temporary
%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a temporary of type $|cannot bind to incompatible temporary}1,2
%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a value of unrelated type $|cannot bind to a value of unrelated type}1,2
rvalue reference %diff{to type $ cannot bind to lvalue of type $|cannot bind to incompatible lvalue}0,1
%select{unknown|unsupported}0 machine mode %1
%select{first|second|third|fourth}0 parameter of 'main' (%select{argument count|argument array|environment|platform-specific data}0) must be of type %1
main cannot be declared as global variable
'main' must return 'int'
too many parameters (%0) for 'main': must be 0, 2, or 3
%0 cannot be a template
'%select{make_unsigned|make_signed}0' is only compatible with non-%select{bool|_BitInt(1)}1 integers and enum types, but was given %2%select{| whose underlying type is %4}3
std::coroutine_handle isn't a class template
std::coroutine_traits isn't a class template
std::initializer_list must be a class template with a single type parameter
std::nothrow must be a valid variable declaration
single subscript expressions are not allowed for matrix values
matrix %select{row|column}0 index is not an integer
matrix %select{row|column}0 index is outside the allowed range [0, %1)
matrix row and column subscripts cannot be separated by any expression
comma expressions are not allowed as indices in matrix subscript expressions
non-void block does not return a value in all control paths
member initializer %0 does not name a non-static data member or base class
initializer %0 does not name a non-static data member or base class; did you mean the %select{base class|member}1 %2?
call to non-static member function without an object argument
out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1
out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1; did you mean %3?
return type of out-of-line definition of %q0 differs from that in the declaration
out-of-line definition of %0 from class %1 without definition
extra qualification on member %0
'this' argument to member function %0 has type %1, but function is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}2
'this' argument to member function %0 is an %select{lvalue|rvalue}1, but function has %select{non-const lvalue|rvalue}2 ref-qualifier
cannot initialize object parameter of type %0 with an expression of type %1
initializer on function does not look like a pure-specifier
member %0 has the same name as its class
no member %0 in %1; it has not yet been instantiated
non-friend class member %0 cannot have a qualified name
class member cannot be redeclared
multiple overloads of %0 instantiate to the same signature %1
base of member reference is a function; perhaps you meant to call it%select{| with no arguments}0?
member %0 cannot have template arguments
member pointer refers into non-class type %0
conversion from pointer to member of class %0 to pointer to member of class %1 via virtual base %2 is not allowed
member pointer has incomplete base type %0
at least one argument of MTE builtin function must be a pointer (%0, %1 invalid)
%0 argument of MTE builtin function must be an integer type (%1 invalid)
%0 argument of MTE builtin function must be a pointer (%1 invalid)
%0 argument of MTE builtin function must be a null or a pointer (%1 invalid)
messaging a Class with a method that is possibly direct
messaging super with a direct method
messaging unqualified id with a method that is possibly direct
kernel functions cannot be class members
%select{instance|class}1 method %0 not found ; did you mean %2?
this builtin requires 'dsp' ASE, please use -mdsp
this builtin requires 'dsp r2' ASE, please use -mdspr2
this builtin requires 'msa' ASE, please use -mmsa
derived class must specify the same code segment as its base classes
overriding virtual function must specify the same code segment as its overridden function
exception specification in declaration does not match previous declaration
exception specification in explicit instantiation does not match instantiated one
inheritance model does not match %select{definition|previous declaration}0
declaration of %0 in %select{the global module|module %2}1 follows declaration in %select{the global module|module %4}3
uuid does not match previous declaration
visibility does not match previous declaration
instance variables may not be placed in %select{categories|class extension}0
missing actual type specifier for pipe
%select{string|numeric}0 literal must be prefixed by '@'
missing custom discrimination
%select{constructor for %1 must explicitly initialize the|implicit default constructor for %1 must explicitly initialize the|cannot use constructor inherited from base class %4;}0 %select{base class|member}2 %3 %select{which|which|of %1}0 does not have a default constructor
%0 is missing exception specification '%1'
missing context for method declaration
missing '[' at start of message send expression
missing context for property implementation declaration
property implementation in a category with no category declaration
synthesized property %0 must either be named the same as a compatible instance variable or must explicitly name an instance variable
a type specifier is required for all declarations
conflicting mixed use of std and std::experimental namespaces for coroutine components
cannot use %select{C++ 'try'|Objective-C '@try'}0 in the same function as SEH '__try'
mode attribute only supported for integer and floating-point types
type of machine mode does not match type of base type
'module' declaration found while building header unit
'module' declaration found while building module from module map
module declaration must occur at the start of the translation unit
missing 'export module' declaration in module interface unit
missing 'module' declaration at end of global module fragment introduced here
@import of module '%0' in implementation of '%1'; use #import
import of module '%0' appears within %1
missing 'export' specifier in module declaration while building module interface
definition of module '%0' is not available; use -fmodule-file= to specify path to precompiled module interface
%select{local variable|parameter|typedef}0 %1 cannot be declared __module_private__
local %select{struct|interface|union|class|enum}0 cannot be declared __module_private__
%select{template|partial|member}0 specialization cannot be declared __module_private__
translation unit contains multiple module declarations
redefinition of module '%0'
import of module '%0' appears within same top-level module '%1'
import of module '%0' appears within its own %select{interface|implementation}1
%select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from module '%2' before it is required
%select{missing '#include'|missing '#include %3'}2; %select{||default argument of |explicit specialization of |partial specialization of }0%1 must be %select{declared|defined|defined|declared|declared}0 before it is used
%select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from one of the following modules before it is required:%2
'__leave' statement not in __try block
'__builtin_ms_va_start' used in System V ABI function
arguments to __annotation must be wide string constants
multiple initializations given for base %0
multiple coupled declarations in a firebloom attribute are not supported yet
multiple default labels in one switch
virtual function %q0 has more than one final overrider in %1
multiple initializations given for non-static member %0
initializing multiple members of union
function declaration cannot become a multiversioned function after first usage
multiversioned function declaration has a different %select{calling convention|return type|constexpr specification|inline specification|linkage|language linkage}0
attribute '%select{|target|cpu_specific|cpu_dispatch|target_clones}0' multiversioning cannot be combined with attribute %1
attribute '%select{|target|cpu_specific|cpu_dispatch|target_clones}0' multiversioned functions do not yet support %select{function templates|virtual functions|deduced return types|constructors|destructors|deleted functions|defaulted functions|constexpr functions|consteval function|lambdas}1
multiversioned function redeclarations require identical target attributes
multiversioned function must have a prototype
'main' cannot be a multiversioned function
function multiversioning is not supported on the current target
function declaration is missing %select{'target'|'cpu_specific' or 'cpu_dispatch'}0 attribute in a multiversioned function
multiversioning attributes cannot be combined
cannot perform a tail call to function%select{| %1}0 because it uses an incompatible calling convention
%0 attribute cannot be used from %select{a block|an Objective-C function|this context}1
%select{non-member|static member|non-static member}0 function cannot perform a tail call to %select{non-member|static member|non-static member|pointer-to-member}1 function%select{| %3}2
cannot perform a tail call to function%select{| %1}0 because its signature is incompatible with the calling function
%0 attribute requires that the return value is the result of a function call
%0 attribute requires that both caller and callee functions have a prototype
tail call requires that the return value, all parameters, and any temporaries created by the expression are trivially destructible
%0 attribute may not be used with variadic functions
cannot perform a tail call from this return statement
cannot perform a tail call %select{from|to}0 a %select{constructor|destructor}1
'mutable' and 'const' cannot be mixed
'mutable' cannot be applied to functions
'mutable' can only be applied to member variables
'mutable' cannot be applied to references
no matching %0 function for non-allocating placement new expression; include <new>
you need to include <typeinfo> before using the 'typeid' operator
%select{%diff{assigning to $ from $|assigning to incompatible nested pointer type}0,1|%diff{passing $ to parameter of incompatible nested pointer type $|passing to parameter of incompatible nested pointer type}0,1|%diff{returning $ from a function with result of incompatible nested pointer type $|returning from function with return of incompatible nested pointer type}0,1|%diff{converting $ to incompatible nested pointer type $|converting between incompatible nested pointer types}0,1|%diff{initializing $ with an expression of incompatible nested pointer type $|initializing with expression of incompatible nested pointer type}0,1|%diff{sending $ to parameter of incompatible nested pointer type $|sending to parameter of incompatible nested pointer type}0,1|%diff{casting $ to incompatible nested pointer type $|casting between incompatible nested pointer types}0,1}2; use explicit cast to perform this conversion
lookup of %0 in member access expression is ambiguous
%0 cannot appear before '::' because it is not a class%select{ or namespace|, namespace, or enumeration}1; did you mean ':'?
type %0 cannot be used prior to '::' because it has no members
%select{call to non-static member function|use of non-static data member}0 %2 of %1 from nested type %3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers in nested pointer types
nested redefinition of %0
'abi_tag' %0 missing in original declaration
array 'new' cannot have initialization arguments
only the first dimension of an allocated array may have dynamic size
cannot allocate array of 'auto'
cannot determine allocated array size from initializer
allocation of %select{incomplete|sizeless}0 type %1
no %select{getter|setter}0 defined for property %1
invalid use of '__super', %0 has no base classes
declaration does not declare anything
cannot specify a default vtable pointer authentication %select{key|address discrimination mode|discriminator}0 with no default set
use of dynamic_cast requires -frtti
no matching function found in local scope
no matching function %0 found in local scope; did you mean %3?
no member named %0 in %1
no member named %0 in %1; did you mean to use '->' instead of '.'?
no member named %0 in %1; did you mean %select{|simply }2%3?
no template named %0 in %1
no template named %0 in %1; did you mean %select{|simply }2%3?
cannot find interface declaration for %0
expression is not assignable
no suitable member %0 in %1
no @interface declaration found in class messaging of %0
no template named %0
no template named %0; did you mean %1?
use of typeid requires -frtti
no viable destructor found for class %0
a getter method is needed to perform a compound assignment on a property
no getter method %1 for %select{increment|decrement}0 of property
non-ASM statement in naked function is not supported
atomic constraint must be of type 'bool' (found %0)
anonymous non-C-compatible type given name for linkage purposes by %select{typedef|alias}0 declaration after its linkage was computed; add a tag name here to establish linkage prior to definition
substitution into constraint expression resulted in a non-constant expression
non-consteval function %0 cannot override a consteval function
non-deleted function %0 cannot override a deleted function
a randomized struct can only be initialized with a designated initializer
non-extern declaration of %0 follows extern declaration
defaulting %select{this %select{<ERROR>|equality|three-way|equality|relational}1 comparison operator|the corresponding implicit 'operator==' for this defaulted 'operator<=>'}0 would delete it after its first declaration
declaration of non-local variable in 'for' loop
cannot set vtable pointer authentication on monomorphic type %0
non-static declaration of %0 follows static declaration
member %0 of %1 is not a template; did you mean %select{|simply }2%3?
%0 does not name a template but is followed by template arguments
%0 does not name a template but is followed by template arguments; did you mean %1?
non-thread-local declaration of %0 follows thread-local declaration
cannot set vtable pointer authentication on %0 which is a subclass of polymorphic type %1
cannot %select{use type %1 for a function/method parameter|use type %1 for function/method return|default-initialize an object of type %1|declare an automatic variable of type %1|copy-initialize an object of type %1|assign to a variable of type %1|construct an automatic compound literal of type %1|capture a variable of type %1|cannot use volatile type %1 where it causes an lvalue-to-rvalue conversion}3 since it %select{contains|is}2 a union that is non-trivial to %select{default-initialize|destruct|copy}0
template argument / label address difference / what did you expect?
non-type template argument refers to subobject '%0'
sorry, non-type template argument of type %0 is not yet supported
qualified name refers into a specialization of %select{function|variable}0 template %1
non-type template parameter %0 with type %1 has incompatible initializer of type %2
non-variable declaration in 'for' loop
%0 is not virtual and cannot be declared pure
block pointer to non-function type is invalid
non-static data member defined out-of-line
address argument to nontemporal builtin must be a pointer (%0 invalid)
address argument to nontemporal builtin must be a pointer to integer, float, pointer, or a vector of such types (%0 invalid)
block declared 'noreturn' should not return
lambda declared 'noreturn' should not return
'_Noreturn' can only appear on functions
%select{assignment to readonly property|no setter method %1 for assignment to property}0
%select{%select{increment|decrement}1 of readonly property|no setter method %2 for %select{increment|decrement}1 of property}0
cannot specialize a %select{dependent template|template template parameter}0
type %0 is not a direct or virtual base of %1
call to function %0 that is neither visible in the template definition nor found by argument-dependent lookup
anonymous bit-field has non-integral type %0
bit-field %0 has non-integral type %1
no %select{struct|interface|union|class|enum}0 named %1 in %2
%0 attribute only applies to %select{Objective-C object|pointer|pointer-to-CF-pointer}1 parameters
overriding method has mismatched ns_consumed attribute on its parameter
domain argument %select{|%1 }0does not refer to global constant
domain argument %0 does not point to an NSString or CFString constant
'NSObject' attribute is for pointer types only
overriding method has mismatched ns_returns_%select{not_retained|retained}0 attributes
nullability keyword %0 cannot be applied to multi-level pointer type %1
nullability specifier %0 cannot be applied to non-pointer type %1
array of interface %0 is invalid (probably should be an array of pointers)
parameter of %0 attribute must be a single name of an Objective-C %select{class|protocol}1
attribute %0 can only be applied to @protocol definitions, not forward declarations
parameter of %0 attribute must be 'id' when used on a typedef
'objc_bridge(id)' is only allowed on structs and typedefs of void pointers
could not find Objective-C class %0 to convert %1 to %2
%0 must be name of an Objective-C class to be able to convert %1 to %2
%0 must be explicitly converted to %1; use %select{%objcclass2|%objcinstance2}3 method for this conversion
CF object of type %0 is bridged to %1, which is not an Objective-C class
Objective-C declarations may only appear in global scope
%select{|direct }0%select{method|property}1 declaration conflicts with previous %select{|direct }2declaration of %select{method|property}1 %3
direct property cannot be @dynamic
direct method was declared in %select{the primary interface|an extension|a category}0 but is implemented in %select{the primary interface|a category|a different category}1
direct method implementation was previously declared not direct
methods that %select{override superclass methods|implement protocol requirements}0 cannot be direct
'objc_direct' attribute cannot be applied to %select{methods|properties}0 declared in an Objective-C protocol
%select{category %1|class extension}0 cannot conform to protocol %2 because of direct members declared in interface %3
cannot use '%0' with Objective-C exceptions disabled
initialization statement is not supported when iterating over Objective-C collection
illegal type %0 used in a boxed expression
incomplete type %0 used in a boxed expression
Objective-C index expression has incomplete class type %0
method for accessing %select{dictionary|array}1 element must have Objective-C object return type instead of %0
'__kindof' specifier cannot be applied to non-object type %0
'__kindof' type specifier must precede the declarator
literal construction method %0 has incompatible signature
%select{an array|a dictionary|a numeric literal|a boxed expression|}0 literal can only be used at file scope if %select{its contents are all also constant literals|its contents are all also constant literals and its keys are string literals|constant|constant}0
%0 %select{parameter|return}1 type is unsupported; support for vector types for this target is introduced in %2
indexing expression is invalid because subscript type %0 has multiple type conversion functions
cannot use a protocol declared 'objc_non_runtime_protocol' in a @protocol expression
non-trivially copyable type %0 cannot be used in a boxed expression
ObjectiveC object of type %0 is bridged to %1, which is not valid CF object
cannot assign to class object (%0 invalid)
cannot catch an Objective-C object by value
cannot override a method that is declared direct by a superclass
%select{extension|category}0 of non-parameterized class %1 cannot have type parameters
forward declaration of non-parameterized class %0 cannot have type parameters
class %0 previously declared with type parameters
objc_precise_lifetime only applies to retainable types; type here is %0
property attributes '%0' and '%1' are mutually exclusive
property with '%0' attribute must be of object type
objc_root_class attribute may only be specified on a root class declaration
cannot implement a category for class %0 that is only visible via the Objective-C runtime
cannot implement subclass %0 of a superclass %1 that is only visible via the Objective-C runtime
%select{dictionary|array}1 subscript base type %0 is not an Objective-C object
method object parameter type %0 is not object type
method index parameter type %0 is not integral type
method key parameter type %0 is not object type
expected method to %select{read|write}1 %select{dictionary|array}2 element not found on object of type %0
cannot assign to this %select{dictionary|array}1 because assigning method's 2nd parameter of type %0 is not an Objective-C pointer type
indexing expression is invalid because subscript type %0 is not an Objective-C pointer
indexing expression is invalid because subscript type %0 is not an integral or Objective-C pointer type
@synchronized requires an Objective-C object type (%0 invalid)
@throw requires an Objective-C object type (%0 invalid)
type argument %0 does not satisfy the bound (%1) of type parameter %2
type argument %0 cannot explicitly specify nullability
no type or protocol named %0
type argument %0 must be a pointer (requires a '*')
type argument %0 is neither an Objective-C object nor a block type
type argument %0 cannot be qualified with '%1'
angle brackets contain both a %select{type|protocol}0 (%1) and a %select{protocol|type}0 (%2)
type arguments cannot be applied to non-class type %0
type arguments cannot be applied to non-parameterized class %0
type arguments cannot be applied to already-specialized class type %0
too %select{many|few}0 type arguments for class %1 (have %2, expected %3)
%select{forward class declaration|class definition|category|extension}0 has too %select{few|many}1 type parameters (expected %2, have %3)
type bound %0 for type parameter %1 conflicts with %select{implicit|previous}2 bound %3%select{for type parameter %5|}4
type parameter %0 bound %1 cannot explicitly specify nullability
missing type bound %0 for type parameter %1 in %select{@interface|@class}2
missing '*' in type bound %0 for type parameter %1
type bound %0 for type parameter %1 is not an Objective-C pointer type
type bound %1 for type parameter %0 cannot be qualified with '%2'
redeclaration of type parameter %0
%select{in|co|contra}0variant type parameter %1 conflicts with previous %select{in|co|contra}2variant type parameter %3
cannot declare variable inside @interface or @protocol
field %0 with variable sized type %1 is not at the end of class
interface type %1 cannot be %select{returned|passed}0 by value; did you forget * in %1?
offsetof requires array type, %0 invalid
cannot compute offset of bit-field %0
invalid application of 'offsetof' to a field of a virtual base
offsetof of incomplete type %0
offsetof requires struct, union, or class type, %0 invalid
'adjust_arg' argument %0 used in multiple clauses
argument of aligned clause should be array%select{ or pointer|, pointer, reference to array or reference to pointer}1, not %0
allocator must be specified in the 'uses_allocators' clause
allocators used in 'uses_allocators' clause cannot appear in other data-sharing or data-mapping attribute clauses
ambiguous conversion from type %0 to an integral or unscoped enumeration type
'append_args' is not allowed with varargs functions
expected pointer, array, reference to pointer, or reference to array in 'is_device_ptr clause'
OpenMP array section is not allowed here
OpenMP array shaping operation is not allowed here
expected at least one 'to' clause or 'from' clause specified to '#pragma omp target update'
the statement for 'atomic capture' must be a compound statement of form '{v = x; x binop= expr;}', '{x binop= expr; v = x;}', '{v = x; x = x binop expr;}', '{v = x; x = expr binop x;}', '{x = x binop expr; v = x;}', '{x = expr binop x; v = x;}' or '{v = x; x = expr;}', '{v = x; x++;}', '{v = x; ++x;}', '{++x; v = x;}', '{x++; v = x;}', '{v = x; x--;}', '{v = x; --x;}', '{--x; v = x;}', '{x--; v = x;}' where x is an lvalue expression with scalar type
the statement for 'atomic capture' must be an expression statement of form 'v = ++x;', 'v = --x;', 'v = x++;', 'v = x--;', 'v = x binop= expr;', 'v = x = x binop expr' or 'v = x = expr binop x', where x and v are both lvalue expressions with scalar type
the statement for 'atomic compare' must be a compound statement of form '{x = expr ordop x ? expr : x;}', '{x = x ordop expr? expr : x;}', '{x = x == e ? d : x;}', '{x = e == x ? d : x;}', or 'if(expr ordop x) {x = expr;}', 'if(x ordop expr) {x = expr;}', 'if(x == e) {x = d;}', 'if(e == x) {x = d;}' where 'x' is an lvalue expression with scalar type, 'expr', 'e', and 'd' are expressions with scalar type, and 'ordop' is one of '<' or '>'.
the statement for 'atomic compare capture' must be a compound statement of form '{v = x; cond-up-stmt}', ''{cond-up-stmt v = x;}', '{if(x == e) {x = d;} else {v = x;}}', '{r = x == e; if(r) {x = d;}}', or '{r = x == e; if(r) {x = d;} else {v = x;}}', where 'cond-update-stmt' can have one of the following forms: 'if(expr ordop x) {x = expr;}', 'if(x ordop expr) {x = expr;}', 'if(x == e) {x = d;}', or 'if(e == x) {x = d;}' where 'x', 'r', and 'v' are lvalue expressions with scalar type, 'expr', 'e', and 'd' are expressions with scalar type, and 'ordop' is one of '<' or '>'.
directive '#pragma omp atomic%select{ %0|}1' cannot be used with '%2' clause
the statement for 'atomic' must be an expression statement of form '++x;', '--x;', 'x++;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an lvalue expression with scalar type
the statement for 'atomic read' must be an expression statement of form 'v = x;', where v and x are both lvalue expressions with scalar type
directive '#pragma omp atomic' cannot contain more than one 'read', 'write', 'update', 'capture', or 'compare' clause
the statement for 'atomic update' must be an expression statement of form '++x;', '--x;', 'x++;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an lvalue expression with scalar type
the statement for 'atomic write' must be an expression statement of form 'x = expr;', where x is a lvalue expression with scalar type
bit fields cannot be used to specify storage in a '%0' clause
the host cannot update a declare target variable that is not externally visible.
arguments of OpenMP clause '%0' with bitwise operators cannot be of floating type
arguments of OpenMP clause '%0' for 'min' or 'max' must be of %select{scalar|arithmetic}1 type
'%0' clause requires 'dispatch' context selector
'%0' and '%1' clause are mutually exclusive and may not appear on the same directive
const-qualified list item cannot be %0
const-qualified variable without mutable fields cannot be %0
const-qualified variable cannot be %0
constructs with the same name must have a 'hint' clause with the same value
redefinition of user-defined mapper for type %0 with name %1
only variable %0 is allowed in map clauses of this 'omp declare mapper' directive
redefinition of user-defined reduction for type %0
%0 must not appear in both clauses 'to' and 'link'
function with '#pragma omp declare variant' has a different %select{calling convention|return type|constexpr specification|inline specification|storage class|linkage}0
'#pragma omp declare variant' does not support %select{function templates|virtual functions|deduced return types|constructors|destructors|deleted functions|defaulted functions|constexpr functions|consteval function}0
'#pragma omp declare variant' is not compatible with any target-specific attributes
variant in '#pragma omp declare variant' with type %0 is incompatible with type %1%select{| with appended arguments}2
function with '#pragma omp declare variant' must have a prototype when 'append_args' is used
variant in '#pragma omp declare variant' is the same as the base function
the user condition in the OpenMP context selector needs to be constant; %0 is not
variable %0 must have explicitly specified data sharing attributes, data mapping attributes, or in an is_device_ptr clause
'depend' clauses cannot be mixed with '%0' clause
expected iterator specification as depend modifier
expected%select{| %1}0 loop iteration variable
expected '+' or '-' operation
'depend(%select{source|sink:vec}0)' clause%select{|s}0 cannot be mixed with 'depend(%select{sink:vec|source}0)' clause%select{s|}0
depend modifier cannot be used with 'sink' or 'source' depend type
unexpected expression: number of expressions is larger than the number of associated loops
zero-length array section is not allowed in 'depend' clause
expected depobj expression
exactly one of 'depend', 'destroy', or 'update' clauses is expected
Device clause with ancestor device-modifier used without specifying 'requires reverse_offload'
'device_type(%0)' does not match previously specified 'device_type(%1)' for the same declaration
'%0' region encountered before requires directive with '%1' clause
statement after '#pragma omp dispatch' must be a direct call to a target function or an assignment to one
same map type modifier has been specified more than once
same motion modifier has been specified more than once
expected access to data field
expected addressable lvalue expression, array element%select{ or array section|, array section or array shaping expression}0%select{| of non 'omp_depend_t' type}1
expected constant sized array of 'omp_alloctrait_t' elements, not %0
expected variable name as a base of the array %select{subscript|section}0
expected a reference to an integer-typed parameter
expected expression containing only member accesses and/or array sections based on named variables
expected lvalue expression%select{ of 'omp_depend_t' type, not %1|}0
expected one of the predefined allocators for the variables with the static storage: 'omp_default_mem_alloc', 'omp_large_cap_mem_alloc', 'omp_const_mem_alloc', 'omp_high_bw_mem_alloc', 'omp_low_lat_mem_alloc', 'omp_cgroup_mem_alloc', 'omp_pteam_mem_alloc' or 'omp_thread_mem_alloc'
the referenced item is not found in any private clause on the same directive
expected a reference to a parameter specified in a 'uniform' clause
%0 is not a global variable, static local variable or static data member
%0 is not a global variable, static local variable or static data member; did you mean %1
expected variable name%select{| or data member of current class}0
expected variable name%select{|, data member of current class}0, array element or array section
expected variable%select{| or static data member|, static data member, or non-static data member of current class}0 of type '%1'
expression requires explicit conversion from %0 to %1
a firstprivate variable with incomplete type %0
'flush' directive with memory order clause '%0' cannot have the list
'#pragma omp declare %select{simd|variant}0' can only be applied to functions
function name is not allowed in 'link' clause
arguments of '#pragma omp %0' must have %select{global storage|static storage duration}1
the name of the construct must be specified in presence of 'hint' clause
'%0' type not found; include <omp.h>
the list item must appear in 'reduction' clause with the 'inscan' modifier of the parent directive
expression has incomplete class type %0
expected 'reduction' clause with the 'inscan' modifier
instantiation of '%0' not supported yet
'depend' clause requires the 'targetsync' interop type
prefer_list item must be a string literal or constant integral expression
'omp_interop_t' must be defined when 'append_args' clause is used; include <omp.h>
interop variable %0 used in multiple action clauses
expected%select{| non-const}0 variable of type 'omp_interop_t'
interop variable must be of type 'omp_interop_t'
invalid 'this' expression on 'map' clause
%select{map type '%1' is not allowed|map type must be specified}0 for '#pragma omp %2'
map type modifier '%0' is not allowed for '#pragma omp %1'
cannot find a valid user-defined mapper for type %0 with name %1
'#pragma omp %0' directive must appear only in file scope
%0 used in declare target directive is not a variable or a function name
expected loop invariant expression
expected loop invariant expression or '<invariant1> * %0 + <invariant2>' kind of expression
expected integral or pointer type as the iterator-type, not %0
iterator step expression %0 evaluates to 0
iterator step expression %0 is not the integral expression
OpenMP iterator is not allowed here
variable captured in declare target region must appear in a to clause
expected list item of scalar type in 'lastprivate' clause with 'conditional' modifier
a lastprivate variable with incomplete type %0
only loop iteration variables are allowed in 'lastprivate' clause in 'omp %0' directives
only loop iteration variables are allowed in 'linear' clause in distribute directives
argument of a linear clause should be of integral or pointer type, not %0
a linear variable with incomplete type %0
'linear' clause cannot be specified along with 'ordered' clause with a parameter
variable with local storage in initial value of threadprivate variable
'%0' statement cannot be used in OpenMP for loop
could not calculate number of iterations calling 'operator-' with upper and lower loop bounds
increment expression must cause %0 to %select{decrease|increase}1 on each iteration of OpenMP for loop
condition of OpenMP for loop must be a relational comparison ('<', '<=', '>', %select{or '>='|'>=', or '!='}0) of loop variable %1
increment clause of OpenMP for loop must perform simple addition or subtraction on loop variable %0
initialization clause of OpenMP for loop is not in canonical form ('var = init' or 'T var = init')
loop iteration variable in the associated loop of 'omp %1' directive may not be %0, predetermined as %2
variable must be of integer or %select{pointer|random access iterator}0 type
variable already marked as mapped in current construct
mapper type must be of struct, union or class type
multiple array elements associated with the same variable are not allowed in map clauses of the same construct
argument to '%0' clause must be a %select{non-negative|strictly positive}1 integer value
expected at least one %0 clause for '#pragma omp %1'
variable %0 must have explicitly specified data sharing attributes
no more 'if' clause is allowed
expected addressable lvalue in '%0' clause
expected expression with a pointer to a complete type as a base of an array shaping operation
non-predefined allocator must have traits specified
%select{statement after '#pragma omp %1' must be a for loop|expected %2 for loops after '#pragma omp %1'%select{|, but found only %4}3}0
expression must have integral or unscoped enumeration type, not %0
unable to resolve declare reduction construct for type %0
variable can appear only once in OpenMP '%0' clause
variable can appear only once in OpenMP 'target update' construct
at most one defaultmap clause for each variable-category can appear on the directive
'ordered' directive %select{without any clauses|with 'threads' clause}0 cannot be closely nested inside ordered region with specified parameter
'ordered' directive with 'depend' clause cannot be closely nested inside ordered region without specified parameter
'ordered' clause with a parameter can not be specified in '#pragma omp %0' directive
original storage of expression in data environment is shared but data environment do not fully contain mapped expression storage
orphaned 'omp %0' directives are prohibited; perhaps you forget to enclose the directive into a %select{|||target |teams|for, simd, for simd, parallel for, or parallel for simd }1region?
%select{orphaned 'omp section' directives are prohibited, it|'omp section' directive}0 must be closely nested to a sections region%select{|, not a %1 region}0
argument of a reduction clause of a %0 construct must not appear in a firstprivate clause on a task construct
the statement for '#pragma omp parallel sections' must be a compound statement
statement in 'omp parallel sections' directive must be enclosed into a section region
expected reference to one of the parameters of function %0%select{| or 'this'}1
parent region for 'omp %select{cancellation point|cancel}0' construct cannot be nowait
parent region for 'omp %select{cancellation point|cancel}0' construct cannot be ordered
pointer cannot be mapped along with a section derived from itself
predefined allocator cannot have traits specified
a private variable with incomplete type %0
region cannot be%select{| closely}0 nested inside '%1' region%select{|; perhaps you forget to enclose 'omp %3' directive into a parallel region?|; perhaps you forget to enclose 'omp %3' directive into a for or a parallel for region with 'ordered' clause?|; perhaps you forget to enclose 'omp %3' directive into a target region?|; perhaps you forget to enclose 'omp %3' directive into a teams region?|; perhaps you forget to enclose 'omp %3' directive into a for, simd, for simd, parallel for, or parallel for simd region?}2
OpenMP constructs may not be nested inside an atomic region
cannot nest 'critical' regions having the same name %0
OpenMP constructs may not be nested inside a simd region%select{| except for ordered simd, simd, scan, or atomic directive}0
list item of type %0 is not valid for specified reduction operation: unable to provide default initialization value
in_reduction variable must have the same reduction operation as in a task_reduction clause
reduction variables may not be accessed in an explicit task
a reduction list item with incomplete type %0
expected addressable reduction item for the task-based directives
the inscan reduction list item must appear as a list item in an 'inclusive' or 'exclusive' clause on an inner 'omp scan' directive
argument of OpenMP clause '%0' must reference the same object in all threads
'reduction' clause with 'task' modifier allowed only on non-simd parallel or worksharing constructs
cannot generate code for reduction on %select{|array section, which requires a }0variable length array
'reduction' clause cannot be used with 'nogroup' clause
reduction type cannot be %select{qualified with 'const', 'volatile' or 'restrict'|a function|a reference|an array}0 type
arguments of '#pragma omp %0' cannot be of reference type %1
directive must be at file or namespace scope
%0 variable must be %1
Only one %0 clause can appear on a requires directive in a single translation unit
same pointer dereferenced in multiple different ways in map clause expressions
exactly one of 'inclusive' or 'exclusive' clauses is expected
'nonmonotonic' modifier can only be specified with 'dynamic' or 'guided' schedule kind
section of pointer to function type %0
section of pointer to incomplete type %0
section length is evaluated to a negative value %0
section length is unspecified and cannot be inferred because subscripted value is %select{not an array|an array of unknown bound}0
array section must be a subset of the original array
section stride is evaluated to a non-positive value %0
the statement for '#pragma omp sections' must be a compound statement
statement in 'omp sections' directive must be enclosed into a section region
exactly one '%0' directive must appear in the loop body of an enclosing directive
directive '#pragma omp %0' cannot contain more than one %select{'seq_cst', 'relaxed', |}1'acq_rel', 'acquire' or 'release' clause
array shaping dimension is evaluated to a non-positive value %0
'%0' statement cannot be used in OpenMP simd region
'%0' clause with '%1' modifier cannot be specified if an 'ordered' clause is specified
the 'copyprivate' clause must not be used with the 'nowait' clause
single declaration is expected after 'declare %select{simd|variant}0' directive
the loop %select{initializer|condition}0 expression depends on the current loop control variable
target construct with nested teams region contains statements outside of the teams construct
'mutexinoutset' modifier not allowed in 'depend' clause on 'taskwait' directive
threadprivate variables are not allowed in '%0' clause
threadprivate variables cannot be used in target constructs
threadprivate variable with incomplete type %0
array section %select{lower bound|length}0 is not an integer
subscripted value is not an array or pointer
array shaping operation dimension is not an integer
expected %0 in OpenMP clause '%1'
modifier '%0' cannot be used along with modifier '%1'
mapping of union members is not allowed
incorrect reduction identifier, expected one of '+', '-', '*', '&', '|', '^', '&&', '||', 'min' or 'max' or declare reduction for type %0
expected%select{| one of}0 %1 directive name modifier%select{|s}0
loop to be fully unrolled must have a constant trip count
%select{a variable|a parameter|'this'}0 cannot appear in more than one %1 clause
expected pointer or reference to pointer in 'use_device_ptr' clause
expected variable of the '%0' type%select{|, not %2}1
'#pragma omp %0' must appear in the scope of the %q1 variable declaration
variable %0 cannot be threadprivate because it is %select{thread-local|a global named register variable}1
'#pragma omp %0' must precede all references to variable %q1
%0 variable cannot be in a %1 clause in '#pragma omp %2' directive
arguments of OpenMP clause '%0' in '#pragma omp %2' directive cannot be of variably-modified type %1
one of 'for', 'parallel', 'sections' or 'taskgroup' is expected
expected an integer or a pointer type of the outer loop counter '%0' for non-rectangular nests
function with 'device_type(%0)' is not available on %select{device|host}1
%0 variable cannot be %1
directive name modifier '%0' is not allowed for '#pragma omp %1'
'inscan' modifier can be used only in 'omp for', 'omp simd', 'omp for simd', 'omp parallel for', or 'omp parallel for simd' directive
expected %select{'val' modifier|one of 'ref', val' or 'uval' modifiers}0
variable of non-reference type %0 can be used only with 'val' modifier, but used with '%1'
the parameter of the 'ordered' clause must be greater than or equal to the parameter of the 'collapse' clause
the value of 'simdlen' parameter must be less than or equal to the value of the 'safelen' parameter
only %select{'omp_priv' or 'omp_orig'|'omp_in' or 'omp_out'}0 variables are allowed in %select{initializer|combiner}0 expression
access specifier can only have annotation attributes
only constructors take base initializers
only enumeration types have underlying types
variables in the %0 address space can only be declared in the outermost scope of a kernel function
atomic variable can be %select{assigned|initialized}0 to a variable only in global address space
bit-fields are not supported in OpenCL
cannot refer to a block inside block
the __block storage type is not permitted
illegal call to %0, expected %1 argument type
invalid number of arguments to function: %0
first argument to %0 must be a pipe type
invalid pipe access modifier (expecting %0)
invalid argument type to function %0 (expecting %1 having %2)
invalid argument %0 to function: %1, expecting a generic pointer argument
cannot cast non-zero value '%0' to 'event_t'
casting to type %0 is not allowed
variable in constant address space must be initialized
blocks with parameters are not accepted in this prototype of enqueue_kernel call
blocks used in enqueue_kernel call are expected to have parameters of type 'local void*'
illegal call to enqueue_kernel, incorrect argument types
illegal call to enqueue_kernel, parameter needs to be specified as integer type
mismatch in number of block parameters and local size arguments passed
vector component access has invalid length %0.  Supported: 1,2,3,4,8,16.
invalid block variable declaration - using 'extern' storage class is disallowed
%select{pointers|references}0 to functions are not allowed
%select{non-kernel function|function scope}0 variable cannot be declared in %1 address space
%select{program scope|static local|extern}0 variable must reside in %1 address space
declaring variable of type %0 is not allowed
%select{loading directly from|assigning directly to}0 pointer to type %1 requires cl_khr_fp16. Use vector data %select{load|store}0 builtin functions instead
implicit conversions between vector types (%0 and %1) are not permitted
access qualifier can only be used for pipe and image type
invalid block variable declaration - must be %select{const qualified|initialized}0
declaring function parameter of type %0 is not allowed%select{; did you forget * ?|}1
access qualifier %0 can not be used for %1 %select{|prior to OpenCL C version 2.0 or in version 3.0 and without __opencl_c_read_write_images feature}2
declaring function return value of type %0 is not allowed %select{; did you forget * ?|}1
array of %0 type is invalid in OpenCL
attribute %0 can only be applied to an OpenCL kernel function
multiple access qualifiers
%select{function|kernel}0 cannot be called 'main'
global sampler requires a const or constant address space qualifier
pointer to type %0 is invalid in OpenCL
kernel parameter cannot be declared as a pointer to a pointer
use of %select{type|declaration}0 %1 requires %2 support
return value cannot be qualified with address space
scalar operand type has greater rank than the type of the vector element. (%0 and %1)
invalid application of '%0' to a void type
taking address of a capture is not allowed
block type cannot be used as expression in ternary expression in OpenCL
type %0 can only be used as a function parameter in OpenCL
%0 type %1 not found; include the base header with -finclude-default-header
the %0 type cannot be used to declare a structure or union field
invalid prototype, variadic arguments are not allowed in OpenCL
variable length arrays are not supported in OpenCL
use of placement new requires explicit declaration
invalid application of '__builtin_omp_required_simd_align' to an expression, only type is allowed
variable length arrays are not supported in OpenMP tasking regions with 'untied' clause
circular pointer delegation detected
use of 'operator->' on type %0 would invoke a sequence of more than %1 'operator->' calls
%0 cannot take a dependent type as first parameter; use %1 instead
first parameter of %0 must have type %1
parameter of %0 cannot have a default argument
%0 cannot be declared inside a namespace
%0 cannot be declared static in global scope
%0 cannot have a dependent return type; use %1 instead
%0 must return type %1
%0 template must have at least two parameters
%0 must have at least one parameter
%0 cannot take a dependent type as first parameter; use size_t (%1) instead
%0 takes type size_t (%1) as first parameter
parameter of overloaded %0 cannot have a default argument
overloaded %0 must be a %select{unary|binary|unary or binary}2 operator (has %1 parameter%s1)
overloaded %0 must be a non-static member function
overloaded %0 must have at least one parameter of class or enumeration type
parameter of overloaded post-%select{increment|decrement}1 operator must have type 'int' (not %0)
overloaded %0 cannot be a static member function
overloaded %0 cannot be variadic
os_log() argument %0 is too big (%1 bytes, max %2)
os_log() format argument is not a string constant
defaulting this %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 would delete it after its first declaration
qualified reference to %0 is a constructor name rather than a %select{template name|type}1 in this context
__builtin_mul_overflow does not support 'signed _BitInt' operands of more than %0 bits
operand argument to overflow builtin must be an integer (%0 invalid)
result argument to overflow builtin must be a pointer to a non-const integer (%0 invalid)
exception specification of overriding function is more lax than base version
call to %0 is ambiguous
ambiguous conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2
call to constructor of %0 is ambiguous
call to member function %0 is ambiguous
call to object of type %0 is ambiguous
use of overloaded operator '%0' is ambiguous (with operand types %1 and %2)
use of overloaded operator '%0' is ambiguous (operand type %1)
call to subscript operator of type %0 is ambiguous
call to deleted function %0
object of type %0 cannot be compared because its %1 is implicitly deleted
%select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2 uses deleted function
call to deleted constructor of %0
call to deleted member function %0
call to deleted function call operator in type %0
overload resolution selected deleted operator '%0'
call to implicitly-deleted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}0 of %1
object of type %0 cannot be %select{constructed|copied|moved|assigned|assigned|destroyed}1 because its %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 is implicitly deleted
functions that differ only in their return type cannot be overloaded
cannot convert %1 to %2 without a conversion operator
type %0 does not provide a %select{subscript|call}1 operator
no matching conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2
no matching function for call to %0
no matching constructor for initialization of %0
no matching literal operator for call to %0%select{| with argument of type %2| with arguments of types %2 and %3}1%select{| or 'const char *'}4%select{|, and no matching literal operator template}5
no matching member function for call to %0
no matching function for call to object of type %0
no viable overloaded '%0'
no viable overloaded operator[] for type %0
return type %0 of selected 'operator==' function for rewritten '%1' comparison is not 'bool'
static and non-static member functions with the same parameter types cannot be overloaded
reference to %select{overloaded|multiversioned}1 function could not be resolved; did you mean to call it%select{| with no arguments}0?
'ownership_returns' attribute index does not match; here it is %0
%0 attribute only applies to %select{pointer|integer}1 arguments
pack expansion contains parameter packs %0 and %1 that have different lengths (%2 vs. %3)
pack expansion contains parameter pack %0 that has a different length (%1 vs. %2) from outer parameter packs
pack expansion contains parameter pack %0 that has a different length (at least %1 vs. %2) from outer parameter packs
pack expansion for initialization of member %0
pack expansion does not contain any unexpanded parameter packs
C does not support default arguments
default arguments cannot be added to an out-of-line definition of a member of a %select{class template|class template partial specialization|nested class in a template}0
missing default argument on parameter
missing default argument on parameter %0
default arguments can only be specified for parameters in a function declaration
parameter pack cannot have a default argument
redefinition of default argument
default argument references local variable %0 of enclosing function
default argument references parameter %0
default argument references 'this'
default arguments cannot be added to a function template that has already been declared
argument may not have 'void' type
a lambda parameter cannot shadow an explicitly captured entity
%select{parameters|function return value}0 cannot have __fp16 type; did you forget * ?
cannot parenthesize the name of a method when forming a member pointer
%select{class|variable}0 template partial specialization does not specialize any template argument; to %select{declare|define}1 the primary template, remove the template argument list
partial specialization of %0 does not use any of its template parameters
ambiguous partial specializations of %0
class template partial specialization %0 cannot be redeclared
partial specialization cannot be declared as a friend
deduced type %0 does not satisfy %1
'new' expression with placement arguments refers to non-placement 'operator delete'
call to pointer to member function of type %0 drops '%1' qualifier%s2
pointer-to-member function type %0 can only be called on an %select{rvalue|lvalue}1
invalid use of pointer to member type after %select{.*|->*}0
this builtin is only valid on POWER%0 or later CPUs
this builtin requires ABI -mabi=%0
this builtin requires HTM to be enabled
this builtin requires VSX to be enabled
expected a 'float' or 'double' for the first argument
invalid use of PPC MMA type
'#pragma alloc_text' is applicable only to functions with C linkage
'#pragma alloc_text' is applicable only to functions
'#pragma clang attribute' attribute with no matching '#pragma clang attribute push'
attribute %0 can't be applied to %1
negated attribute subject matcher sub-rule '%0' contradicts sub-rule '%1'
redundant attribute subject matcher sub-rule '%0'; '%1' already matches those declarations
unterminated '#pragma clang attribute push' at end of file
'#pragma clang attribute %select{%1.|}0pop' with no matching '#pragma clang attribute %select{%1.|}0push'
'#pragma %0' can only appear at file scope
'#pragma float_control(except, on)' is illegal when precise is disabled
'#pragma float_control(precise, off)' is illegal when except is enabled
'#pragma float_control(precise, off)' is illegal when fenv_access is enabled
'#pragma float_control push/pop' can only appear at file or namespace scope or within a language linkage specification
'#pragma STDC FENV_ACCESS ON' is illegal when precise is disabled
%select{incompatible|duplicate}0 directives '%1' and '%2'
invalid argument of type %0; expected an integer type
%select{invalid value '%0'; must be positive|value '%0' is too large}1
expected a for, while, or do-while loop to follow '%0'
mac68k alignment pragma is not supported on this target
specifying an identifier within `#pragma pack` is not supported on this target
expected #pragma pack parameter to be '1', '2', '4', '8', or '16'
#pragma visibility pop with no matching #pragma visibility push
#pragma visibility push with no matching #pragma visibility pop
argument to #pragma section is not valid for this target: %0
__builtin_preserve_enum_value argument %0 invalid
__builtin_preserve_enum_value argument %0 not a constant
__builtin_preserve_field_info argument %0 not a constant
__builtin_preserve_field_info argument %0 not a field access
__builtin_preserve_type_info argument %0 invalid
__builtin_preserve_type_info argument %0 not a constant
instance variable %0 is private
private module fragment declaration with no preceding module declaration
private module fragment in module implementation unit
private module fragment redefined
probability argument to __builtin_expect_with_probability must be constant floating-point expression
probability argument to __builtin_expect_with_probability is outside the range [0.0, 1.0]
type of property %0 (%1) does not match type of accessor %2 (%3)
property %0 found on object of type %1; did you mean to access it with the "." operator?
use of Objective-C property in function nested in Objective-C container not supported, move function outside its container
property %0 is already implemented
property %0 has a variably modified type
type of property %0 (%1) does not match type of instance variable %2 (%3)
property access is using %0 method which is unavailable
property %0 refers to an incomplete Objective-C class %1 (with no @interface available)
property %0 not found on object of type %1
property %0 cannot be found in forward class object %1
property %0 not found on object of type %1; did you mean %2?
synthesized properties %0 and %1 both claim setter %2 - use of this setter will cause unexpected behavior
property cannot have array or function type %0
instance variable %0 is protected
protocol has circular dependency
property %select{of type %1|with attribute '%1'|without attribute '%1'|with getter %1|with setter %1}0 was selected for synthesis
object expression of non-scalar type %0 cannot be used in a pseudo-destructor expression
call to pseudo-destructor cannot have any arguments
%0 does not refer to a type name in pseudo-destructor expression; expected the name of type %1
the type of object expression %diff{($) does not match the type being destroyed ($)|does not match the type being destroyed}0,1 in pseudo-destructor expression
address discrimination flag for __ptrauth must be 0 or 1; value is %0
argument to %select{__ptrauth|ptrauth_struct}0 must be an integer constant expression
discriminator argument to ptrauth_sign_constant must be a constant integer, the address of the global variable where the result will be stored, or a blend of the two
argument to ptrauth_sign_constant must refer to a global variable or function
pointer authentication is disabled for the current target
this target does not support pointer authentication
empty __ptrauth authentication option
extra discriminator for %select{__ptrauth|ptrauth_struct}2 must be between 0 and %1; value is %0
%select{static locals|globals}0 with authenticated null values are currently unsupported
%0 does not identify a valid pointer authentication key for the current target
invalid character in __ptrauth options
missing comma between __ptrauth options
attribute ptrauth_struct cannot be used on class %0 or its subclasses because it is a dynamic class
__ptrauth options must be a string of comma separated flags, found %0
%0 qualifier must take between 1 and 4 arguments
cast types may not be qualified with __ptrauth; type is %0
%select{return types|parameter types|properties}2 may not be qualified with %select{__ptrauth|__ptrauth_restricted_intptr}1; type is %0
__ptrauth qualifier may only be applied to pointer types; type here is %0
type %0 is already %1-qualified
signed pointer types may not be qualified with __ptrauth(ptrauth_key_none); type is %0
repeated __ptrauth authentication %select{mode|option}0
__ptrauth_restricted_intptr qualifier may only be applied to pointer sized integer types; type here is %0
argument must be a string literal%select{| of char type}0
argument to '__builtin_ptrauth_type_discriminator' isn't a record type
%0 is signed differently from the previous declaration
cannot pass undiscriminated type %0 to '__builtin_ptrauth_type_discriminator'
unknown __ptrauth authentication option %0
%select{signed value|extra discriminator|blended pointer|blended integer}0 must have %select{pointer|integer|pointer or integer}1 type; type here is %2
friend declaration cannot have a pure-specifier
exception declarator cannot be qualified
friend function definition cannot be qualified with '%0'
friend declaration of %0 does not match any declaration in %1
type operand %0 of 'typeid' cannot have '%1' qualifier
qualified member access refers to a member in %0
%q0 is not a member of class %1
%select{property|instance variable}0 access cannot be qualified with '%1'
@catch parameter declarator cannot be qualified
parameter declarator cannot be qualified
typedef declarator cannot be qualified
cannot build range expression with array function parameter %0 since parameter with array type %1 is treated as pointer type %2
assigning to 'readonly' return result of an Objective-C message not allowed
invalid type %0 to %1 operator
%select{struct|union}0 kernel parameters may not contain pointers
recursive evaluation of default argument
trying to recursively use %0 as superclass of %1
redeclaration of %0 with a different type%diff{: $ vs $|}1,2
cannot export redeclaration %0 here since the previous declaration %select{is not exported|has internal linkage|has module linkage}1
redefinition of %0
redefinition of concept %0 with different template parameters or requirements
redefinition of %0 as different kind of symbol
redefinition of %0 as an alias for a different namespace
redefinition of %0 with a different type%diff{: $ vs $|}1,2
%select{typedef|type alias|type alias template}0 redefinition with different types%diff{ ($ vs $)|}1,2
redefinition of a 'extern inline' function %0 is not supported in %select{C99 mode|C++}1
redefinition of enumerator %0
redefinition of label %0
redefinition of %select{typedef|type alias}0 for variably-modified type %1
cannot refer to declaration with an array type inside block
reference to %select{__device__|__global__|__host__|__host__ __device__}0 %select{function|variable}1 %2 in %select{__device__|__global__|__host__|__host__ __device__}3 function
reference to %select{__device__|__global__|__host__|__host__ __device__}0 function %1 in global initializer
cannot refer to declaration of structure variable with flexible array member inside block
reference initialization of type %0 with initializer of type %1 is ambiguous
%0 does not refer to a value
ref-qualifier '%select{&&|&}0' is not allowed on a constructor
ref-qualifier '%select{&&|&}0' is not allowed on a destructor
cannot overload a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}0 with a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}1
cannot refer to declaration with a variably modified type inside block
binding reference %diff{of type $ to value of type $|to value}0,1 %select{drops %3 qualifier%plural{1:|2:|4:|:s}4|changes address space|not permitted due to incompatible qualifiers}2
reference %diff{to %select{type|incomplete type}1 $ could not bind to an %select{rvalue|lvalue}2 of type $|could not bind to %select{rvalue|lvalue}2 of incompatible type}0,3
reference to type %0 cannot bind to an initializer list
reference of type %0 cannot bind to a temporary object because of address space mismatch
%select{non-const|volatile}0 reference cannot bind to bit-field%select{| %1}2
%select{non-const|volatile}0 reference cannot bind to matrix element
%select{non-const|volatile}0 reference cannot bind to vector element
'&' cannot precede a capture when the capture default is '&'
reference cannot be initialized with multiple values
pipes packet types cannot be of reference type
invalid reference to function %0: constraints not satisfied
reference to local %select{variable|binding}1 %0 declared in enclosing %select{%3|block literal|lambda expression|context}2
cannot form a reference to 'void'
declaration of reference variable %0 requires an initializer
reference to type %0 requires an initializer
function declared with regparm(%0) attribute was previously declared %plural{0:without the regparm|:with the regparm(%1)}1 attribute
%0 attribute cannot be repeated
variable does not have a constant initializer
default arguments not allowed for parameters of a requires expression
constraint variable %0 cannot be used in an evaluated context
cannot subclass a class that was declared with the 'objc_subclassing_restricted' attribute
returning block that lives on the local stack
@throw (rethrow) used outside of a @catch block
void block should not return a value
cannot return from %0
return in the catch of a function try block of a constructor is illegal
return statement not allowed in coroutine; did you mean 'co_return'?
%select{void function|void method|constructor|destructor}1 %0 must not return a value
LMUL argument must be in the range [0,3] or [5,7]
builtin requires%select{| at least one of the following extensions to be enabled}0: %1
%0 cannot use 'super' because it is a root class
argument should be the value 90 or 270
argument should be the value 0, 90, 180 or 270
rvalue reference type %0 is not allowed in exception specification
sampler_t variable required - got %0
sampler_t initialization requires 32-bit integer, not %0
second argument to __builtin_call_with_static_chain must be of pointer type
second argument to 'va_arg' is of abstract type %0
second argument to 'va_arg' is of incomplete type %0
%0 causes a section type conflict with %1
cannot use SEH '__try' in a coroutine when C++ exceptions are enabled
cannot use SEH '__try' in blocks, captured regions, or Obj-C method decls
SEH '__try' is not supported on this target
chosen constructor is explicit in copy-initialization
selector element of type %0 cannot be a constant lvalue expression
selector element is not a valid lvalue
selector element type %0 is not a valid object
type of setter must be void
%select{'#pragma clang fp eval_method'|option 'ffp-eval-method'}0 cannot be used with %select{option 'fapprox-func'|option 'mreassociate'|option 'freciprocal'|option 'ffp-eval-method'|'#pragma clang fp reassociate'}1
initialization is not supported for __shared__ variables.
requested shift is a vector of type %0 but the first operand is not a vector (%1)
index for __builtin_shufflevector must be less than the total number of vector elements
index for __builtin_shufflevector must be a constant integer
%select{|reference to }0sizeless type %1 is not allowed in exception specification
non-local variable with sizeless type %0
invalid application of '%0' to a function type
invalid application of '%0' to %select{an incomplete|sizeless}1 type %2
invalid application of '%select{sizeof|alignof|typeof|typeof_unqual}0' to bit-field
application of '%select{alignof|sizeof}1' to interface %0 is not supported on this architecture and platform
%0 does not refer to the name of a parameter pack
%0 does not refer to the name of a parameter pack; did you mean %1?
function declared '%0' was previously declared '%1' with different SME function attributes
argument to 'operator<=>' %select{cannot be narrowed from type %1 to %2|evaluates to %1, which cannot be narrowed to type %2}0
specialization of member %q0 does not specialize an instantiated member
explicit specialization of %0 after instantiation
cannot reference member of primary template because deduced class template specialization %0 is %select{instantiated from a partial|an explicit}1 specialization
cannot specialize %select{|(with 'template<>') }0a member of an unspecialized template
forward declaration of %select{class|struct|interface|union|enum}0 cannot have a nested name specifier
static assertion expression is not an integral constant expression
static assertion failed%select{: %1|}0
static assertion failed due to requirement '%0'%select{: %2|}1
function declared in block scope cannot have 'static' storage class
static data member %0 not allowed in anonymous %select{struct|interface|union|class|enum}1
static data member %0 not allowed in local %select{struct|interface|union|class|enum}2 %1
static data member %0 already has an initializer
cannot cast %0 to %1 via virtual base %2
variables in function scope cannot be declared static
the 'static' modifier for the array size is not legal in new expressions
kernel functions cannot be declared static
'main' is not allowed to be declared static
static declaration of %0 follows non-static declaration
static member %0 cannot be a bit-field
'static' can only be specified inside the class definition
'static' member function %0 overrides a virtual function in a base class
interface type cannot be statically allocated
standard library implementation of %0 is not supported; %select{member '%2' does not have expected form|member '%2' is missing|the type is not trivially copyable|the type does not have the expected form}1
'std::source_location::__impl' must be standard-layout and have only two 'const char *' fields '_M_file_name' and '_M_function_name', and two integral fields '_M_line' and '_M_column'
'std::source_location::__impl' was not found; it must be defined before '__builtin_source_location' is called
unsupported standard library implementation: 'std::%0' is not a class template
default %select{argument|non-type template argument}0 may not use a GNU statement expression
static data member definition cannot specify a storage class
@catch parameter cannot have storage specifier '%0'
storage class specified for a member declaration
impossible constraint in asm: can't store value into a register
existing instance variable %1 for strong property %0 may not be __weak
subscript of pointer to function type %0
subscript of pointer to %select{incomplete|sizeless}0 type %1
subscript requires size of interface %0, which is not constant for this architecture and platform
subscript of svbool_t is not allowed
use of '__super' inside a lambda is unsupported
'%0' parameter must have pointer%select{| to unqualified pointer}1 type; type here is %2
'swift_async' completion handler parameter must have block type returning 'void', type here is %0
%0 attribute with 'nonnull_error' convention can only be applied to a %select{function|method}1 with a completion handler with an error parameter
%0 attribute with '%1' convention must have an integral-typed parameter in completion handler at index %2, type here is %3
%0 attribute must be applied to a %select{function|method}1 annotated with non-'none' attribute 'swift_async'
first argument to 'swift_async' must be either 'none', 'swift_private', or 'not_swift_private'
'swift_error_result' parameter must follow 'swift_context' parameter
'swift_indirect_result' parameters must be first parameters of function
'%0' parameter can only be used with swiftcall%select{ or swiftasynccall|}1 calling convention%select{|s}1
switch condition type %0 requires explicit conversion to %1
switch condition has incomplete class type %0
cannot jump from switch statement to this case label
multiple conversions from switch condition type %0 to an integral or enumeration type
types with 'sycl_special_class' attribute must have one and only one '__init' method defined
@synthesize not allowed in a category's implementation
@synthesize not allowed on a class property %0
synthesized property with variable size type %0 requires an existing instance variable
cannot synthesize weak property in file using manual reference counting
cannot synthesize weak property because the current deployment target does not support weak references
invalid transaction abort code
definition of type %0 conflicts with %select{typedef|type alias}1 of the same name
%select{type tag|argument}0 index %1 is greater than the number of arguments specified
implicit declaration introduced by elaborated type conflicts with a %select{non-struct type|non-class type|non-union type|non-enum type|typedef|type alias|template|type alias template|template template argument}0 of the same name
%select{non-struct type|non-class type|non-union type|non-enum type|typedef|type alias|template|type alias template|template template argument}1 %0 cannot be referenced with a %select{struct|interface|union|class|enum}2 specifier
friend type templates must use an elaborated type
'target_clones' attribute does not match previous declaration
'target_clones' multiversioning requires a default target
%0 requires %select{|%2 bit size}1 %3 %select{|return }4type support, but target '%5' does not support it
attributes '%0("%2")' and '%1("%2")' are mutually exclusive
ambiguous constructor call when %select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1
%select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1 invokes deleted constructor
copying a temporary object of incomplete type %0
no viable constructor %select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1
address taken in non-type template argument for template parameter of reference type %0
deduced incomplete pack %0 for template parameter %1
non-type template argument refers to non-static data member %0
constraints not satisfied for %select{class template|function template|variable template|alias template|template template parameter|template}0 %1%2
%select{too few|too many}0 template arguments for %select{class template|function template|variable template|alias template|template template parameter|concept|template}1 %2
sorry, non-type template argument of pointer-to-member type %1 that refers to member %q0 of a different class is not supported yet
non-type template argument refers to non-static member function %0
template argument for non-type template parameter must be an expression
template argument for template template parameter must be a class template%select{| or type alias template}0
template argument for template type parameter must be a type
template argument for template type parameter must be a type; did you forget 'typename'?
non-type template parameter of reference type %diff{$ cannot bind to template argument of type $|cannot bind to template of incompatible argument type}0,1
template argument for non-type template parameter is treated as function type %0
non-type template argument of type %0 is not a constant expression
non-type template argument for template parameter of pointer type %0 must have its address taken
non-type template argument of type %0 cannot be converted to a value of type %1
non-type template argument does not refer to any declaration
non-type template argument of type %0 is not an integral constant expression
non-type template argument of type %0 must have an integral or enumeration type
non-type template argument does not refer to an object or function
non-type template argument is not a pointer to member constant
template argument does not refer to a class or alias template, or template template parameter
non-type template argument refers to %select{function|object}0 %1 that does not have linkage
template argument is the type of an unresolved overloaded function
reference binding of non-type template parameter %diff{of type $ to template argument of type $|to template argument}0,1 ignores qualifiers
non-type template argument of reference type %0 is not an object
template template argument has different template parameters than its corresponding template template parameter
non-type template argument refers to thread-local object
null non-type template argument must be cast to template parameter type %0
null non-type template argument of type %0 does not match template parameter of type %1
requires clause differs in template redeclaration
type constraint differs in template redeclaration
pack expansion used as argument for non-pack parameter of %select{alias template|concept}0
template name refers to non-type template %0
templates cannot be declared inside of a local class
%select{implicit|explicit}0 instantiation of undefined template %1
%select{implicit|explicit}0 instantiation of template %1 within its own definition
kernel functions cannot be used in a template declaration, instantiation or specialization
missing 'template' keyword prior to dependent template name '%0%1'
'%0%1' instantiated to a class template, not a function template
%0%select{| following the 'template' keyword}1 cannot refer to a dependent template
%0%select{| following the 'template' keyword}1 does not refer to a template
templates must have C++ linkage
member %0 declared as a template
extraneous 'template<>' in declaration of member %0
use of %select{class template|function template|variable template|alias template|template template parameter|concept|template}0 %1 requires template arguments
a non-type template parameter cannot have type %0 before C++20
a non-type template parameter cannot have type %0
template non-type parameter has a different type %0 in template %select{|template parameter }1redeclaration
non-type template parameter has incomplete type %0
non-type template parameter has non-literal type %0
type %0 of non-type template parameter is not a structural type
non-type template parameter has rvalue reference type %0
templates can only be declared in namespace or class scope
template parameter default argument is inconsistent with previous definition
template parameter missing a default argument
template parameter redefines default argument
template parameter has a different kind in template %select{|template parameter }0redeclaration
%select{too few|too many}0 template parameters in template %select{|template parameter }1redeclaration
template parameter list matching the non-templated nested type %0 should be empty ('template<>')
template parameter pack cannot have a default argument
template parameter pack must be the last template parameter
declaration of %0 shadows template parameter
default template argument not permitted on a friend template
cannot add a default template argument to the definition of a member of a class template
%select{template type|non-type template|template template}0 parameter%select{| pack}1 conflicts with previous %select{template type|non-type template|template template}0 parameter%select{ pack|}1
nested name specifier '%0' for declaration does not refer into a class, class template or class template partial specialization
recursive template instantiation exceeded maximum depth of %0
cannot declare an explicit specialization in a friend
explicit specialization of %0 in function scope
default argument not permitted on an explicit %select{instantiation|specialization}0 of function %1
extraneous template parameter list in template specialization or out-of-line template definition
template specialization declaration cannot be a friend
template specialization requires 'template<>'
template specialization or definition requires a template parameter list corresponding to the nested type %0
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 must occur at global scope
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 not in %select{a namespace enclosing %2|class %2 or an enclosing namespace}3
can only provide an explicit specialization for a class template, function template, variable template, or a member function, static data member, %select{or member class|member class, or member enumeration}0 of a class template
extraneous 'template<>' in declaration of %0 %1
template template argument %0 is more constrained than template template parameter %1
template template parameter must have its own template parameters
a typedef cannot be a template
cannot declare a class template with no name
extraneous 'template<>' in declaration of variable %0
tentative definition has type %0 that is never completed
'this' cannot be %select{implicitly |}0captured in this context
'this' cannot be%select{| implicitly}0 used in a static member function declaration
initializer for thread-local variable must be a constant expression
'%0' variables must have global storage
thread-local declaration of %0 follows non-thread-local declaration
type of thread-local variable has non-trivial destruction
thread-local declaration of %0 with %select{static|dynamic}1 initialization follows declaration with %select{dynamic|static}1 initialization
thread-local storage is not supported for the current target
three-way comparison between vectors is not supported
cannot throw an object of abstract type %0
cannot throw object of incomplete type %0
cannot throw pointer to object of incomplete type %0
cannot throw object of sizeless type %0
alignment (%0) of thread-local variable %1 is greater than the maximum supported alignment (%2) for a thread-local variable on this target
typed memory inference is not enabled (-ftyped-memory-operations)
%select{untyped|typed}0 memory operation %1 %select{cannot be a variadic function|cannot be an instance method|must have a prototype|must be a function}2
invalid parameter type for inference at index %0. %1 is not an integer type
the typed_memory_operations attribute can only be applied to functions
typed memory operation %0 has multiple overloads
typed memory operation %0 has incompatible type (%diff{$ vs $|}1,2)
only one element declaration is allowed
deduction guide cannot have a requires clause
trailing return type may not be nested within parentheses
function with trailing return type must specify return type 'auto', not %0
%0 requires more than 1 template argument; provide the remaining arguments explicitly to use it here
concept named in type constraint is not a type concept
%0 cannot be defined in a type alias template
%0 cannot be defined in a condition
%0 cannot be defined in an enumeration
types may not be defined in a for range declaration
%0 cannot be defined in a parameter type
%0 cannot be defined in the result type of a function
%0 cannot be defined in a type specifier
type of property %0 in class extension does not match property type in primary class
a parameter pack may not be accessed at an out of bounds index
'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression
'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression that can be represented by a 64 bit integer
%0 is not supported on this target
address of %select{bit-field|vector element|property expression|register variable|matrix element}0 requested
taking the address of a destructor
taking the address of a temporary object of type %0
conversion %diff{from $ to $|between types}0,1 is ambiguous
variable declared with 'objc_externally_retained' cannot be modified in ARC
cannot assign to 'self' outside of a method in the init family
cannot assign to 'self' in a class method
arithmetic on a pointer to %select{an incomplete|sizeless}0 type %1
fast enumeration variables cannot be modified in ARC by default; declare the variable __strong to allow this
array type %0 is not assignable
%select{cannot assign to return value because function %1 returns a const value|cannot assign to variable %1 with const-qualified type %2|cannot assign to %select{non-|}1static data member %2 with const-qualified type %3|cannot assign to non-static data member within const member function %1|cannot assign to %select{variable %2|non-static data member %2|lvalue}1 with %select{|nested }3const-qualified data member %4|read-only variable is not assignable}0
value of type %0 is not contextually convertible to 'bool'
arguments are of different types%diff{ ($ vs $)|}0,1
ordered compare requires two args of floating point type%diff{ ($ and $)|}0,1
floating point classification requires argument of floating point type (passed in %0)
called object type %0 is not a function or function pointer
argument type %0 is not a real floating point type
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, at least argument %1 must be specified
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2; did you mean %3?
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, single argument %1 was not specified
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most single argument %1, have %2 arguments
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2; did you mean %3?
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected single argument %1, have %2 arguments
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
cast to incomplete type %0
cast to union type from type %0 not present in union
'__builtin_choose_expr' requires a constant expression
comparison of distinct block types%diff{ ($ and $)|}0,1
comparison of distinct pointer types%diff{ ($ and $)|}0,1
equality comparison between function pointer and void pointer (%0 and %1)
comparison between pointer and integer (%0 and %1)
used type %0 where integer or floating point type is required
used type %0 where floating point type is not allowed
used type %0 where arithmetic or pointer type is required
incompatible operand types%diff{ ($ and $)|}0,1
non-pointer operand type %0 incompatible with %select{NULL|nullptr}1
__ptrauth qualification mismatch%diff{ ($ and $)|}0,1
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%5 vs %6)|: different exception specifications}4
incompatible block pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
incompatible function pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between pointers to integer types %select{with different sign|where one is of the unique plain 'char' type and the other is not}3
incompatible integer to pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer to integer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between void pointer and function pointer
value of type %0 is not implicitly convertible to %1
conversion from %0 to %1 is not allowed in a converted constant expression
conversion from %0 to %1 in converted constant expression would bind reference to a temporary
variable has incomplete type %0
conversion function %diff{from $ to $|between types}0,1 invokes a deleted function
vector is not assignable (contains duplicate components)
invalid operand of type %0 where floating, complex or a vector of such types is required
used type %0 where integer is required
operand of type %0 where arithmetic or pointer type is required
expression is not assignable
fields must have a constant size: 'variable length array in structure' extension will never be supported
cannot %select{decrement|increment}1 value of type %0
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes address space of pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes address space of nested pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes retain/release properties of pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes pointer-authentication of pointee type
definition of variable with array type needs an explicit size or an initializer
incomplete definition of type %0
incomplete type %0 is not assignable
indirection requires pointer operand (%0 invalid)
cannot take the address of an rvalue of type %0
extra '&' taking address of overloaded function
invalid operands to binary expression (%0 and %1)
pointer to function type %0 may not be 'restrict' qualified
restrict requires a pointer or reference (%0 is invalid)
restrict requires a pointer or reference
instance variables must have a constant size
logical expression with vector %select{type %1 and non-vector type %2|types %1 and %2}0 is only supported in C++
assignment to cast is illegal, lvalue casts are not supported
member reference type %0 is not a pointer
%0 does not have a member named %1
%0 does not have a member named %1; did you mean %2?
member reference base type %0 is not a structure or union
member reference type %0 is %select{a|not a}1 pointer; did you mean to use '%select{->|.}1'?
cannot refer to type member %0 in %1 with '%select{.|->}2'
cannot refer to member %0 in %1 with '%select{.|->}2'
%diff{return type $ must match previous return type $|return type must match previous return type}0,1 when %select{block literal|lambda expression}2 has unspecified explicit return type
array size is negative
non-object type %0 is not assignable
no viable conversion%select{%diff{ from $ to $|}1,2|%diff{ from returned value of type $ to function return type $|}1,2}0
no viable conversion%diff{ from $ to incomplete type $|}0,1
%select{comparison between %diff{ ($ and $)|}0,1|arithmetic operation with operands of type %diff{ ($ and $)|}0,1|conditional operator with the second and third operands of type %diff{ ($ and $)|}0,1}2 which are pointers to non-overlapping address spaces
ordered comparison of function pointers (%0 and %1)
ordered comparison between pointer and zero (%0 and %1)
arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2
arithmetic on%select{ a|}0 pointer%select{|s}0 to void
illegal storage class on file-scoped variable
illegal storage class on function
statement requires expression of integer type (%0 invalid)
statement requires expression of scalar type (%0 invalid)
%diff{$ and $ are not pointers to compatible types|pointers to incompatible types}0,1
array subscript is not an integer
subscripted value is not an array, pointer, or vector
cannot combine fixed-length and sizeless SVE vectors in expression, result is ambiguous (%0 and %1)
cannot combine GNU and SVE vectors in expression, result is ambiguous (%0 and %1)
three-way comparison between pointer and zero
invalid argument type %0 to unary expression
vector operands do not have the same number of elements (%0 and %1)
cannot convert between vector values of different size (%0 and %1)
cannot convert between %select{scalar|vector}0 type %1 and vector type %2 as implicit conversion would cause truncation
cannot convert between vector and non-scalar values (%0 and %1)
zero-length arrays are not permitted in %select{C++|SYCL device code}0
__type_descriptor_t must be a 64bit enum type when using typed operator new
typed allocation of over aligned types is not supported
unsupported: anonymous type given name for linkage purposes by %select{typedef|alias}0 declaration after its linkage was computed; add a tag name here to establish linkage prior to definition
typedef member %0 cannot be a bit-field
typedef name must be an identifier
missing 'typename' prior to dependent type name '%0%1'
missing 'typename' prior to dependent type template name '%0%1'
no type named %0 in %1
no type named 'type' in %0; 'enable_if' cannot be used to disable this declaration
failed requirement '%0'; 'enable_if' cannot be used to disable this declaration
typename specifier refers to non-type member %0 in %1
typename specifier refers to non-type %0
typename specifier refers to a dependent using declaration for a value %0 in %1
%0 is unavailable
%0 is unavailable in ARC
%0 is unavailable: %1
%0 has unknown return type; cast the call to its declared return type
no known method %select{%objcinstance1|%objcclass1}0; cast the message send to the method's return type
%0 has unknown type; cast it to its declared type to use it
declaration of %0 is missing in %1 class
undeclared identifier %0 in destructor name
use of undeclared label %0
definition of class %0 must be available to use Objective-C %select{array literals|dictionary literals|numeric literals|boxed expressions|string literals}1
cannot find protocol declaration for %0
cannot find protocol declaration for %0; did you mean %1?
use of undeclared %0
use of undeclared %0; did you mean %1?
use of undeclared identifier %0
use of undeclared identifier %0; did you mean %1?
cannot find interface declaration for %0
cannot find interface declaration for %0; did you mean %1?
cannot find interface declaration for %0, superclass of %1
cannot find interface declaration for %0, superclass of %1; did you mean %2?
inline variable %q0 is not defined
%select{function|variable}0 %q1 is used but not defined in this translation unit, and cannot be defined in any other translation unit because its type does not have linkage
cannot determine underlying type of incomplete enumeration type %0
%select{expression|base type|declaration type|data member type|bit-field size|static assertion|fixed underlying type|enumerator value|using declaration|friend declaration|qualifier|initializer|default argument|non-type template parameter type|exception type|partial specialization|__if_exists name|__if_not_exists name|lambda|block|type constraint|requirement|requires clause}0 contains%plural{0: an|:}1 unexpanded parameter pack%plural{0:|1: %2|2:s %2 and %3|:s %2, %3, ...}1
friends can only be classes or functions
unexpected interface name %0: expected expression
unexpected namespace name %0: expected expression
unexpected type name %0: expected expression
cannot define the implicit copy assignment operator for %0, because non-static %select{reference|const}1 member %2 cannot use copy assignment operator
%select{constructor for %1|implicit default constructor for %1|cannot use constructor inherited from %1:}0 must explicitly initialize the %select{reference|const}2 member %3
unions cannot be base classes
union member %0 has reference type %1
the address of a declaration with unknown type can only be cast to a pointer type
address-of operator cannot be applied to a call to a function with unknown return type
function %0 with unknown type must be given a function type
variable %0 with unknown type cannot be given a function type
no type named %0 in %1; did you mean %select{|simply }2%3?
unknown receiver %0; did you mean %1?
unknown %select{type|class}1 name %0; did you mean %2?
unknown type name %0
unknown type name %0; did you mean %1?
must explicitly qualify name of member function when taking its address
constrained placeholder types other than simple 'auto' on non-type template parameters not supported yet
call to unsupported expression with unknown type
%0 has unknown type, which is not supported for this kind of declaration
unsupported expression with unknown type
cannot cast %0 to its %select{private|protected}2 base class %1
illegal redeclaration of property in class extension %0 (attribute must be 'readwrite', while its primary must be 'readonly')
illegal redeclaration of 'readwrite' property in class extension %0 (perhaps you intended this to be a 'readwrite' redeclaration of a 'readonly' public property?)
use of default argument to function %0 that is declared later in class %1
reference to unresolved using declaration
taking address of non-addressable standard library function
use of %0 with tag type that does not match previous declaration
using declaration cannot refer to class member
using declaration cannot refer to a namespace
target of using declaration conflicts with declaration already in scope
declaration conflicts with target of using declaration already in scope
using declaration cannot refer to a constructor
%0 is not a direct base of %1, cannot inherit constructors
using declaration cannot refer to a destructor
cannot befriend target of using declaration
using declaration refers to its own class
using declaration refers into '%0', which is not a base class of %1
using declaration in class refers into '%0', which is not a class
redeclaration of using declaration
using declaration pack expansion at block scope produces multiple values
using declaration cannot refer to a template specialization
dependent using declaration resolved to type without 'typename'
no namespace named %0 in %1; did you mean %select{|simply }2%3?
no namespace named %0; did you mean %1?
redeclaration of using-enum declaration
using-enum cannot name a dependent type
%0 is not an enumerated type
'using_if_exists' attribute cannot be applied to an inheriting constructor
%select{|member}0 using declaration %1 instantiates to an empty pack
using declaration requires a qualified name
'typename' keyword used on a non-type
cannot call operator __uuidof on a type with multiple GUIDs
cannot call operator __uuidof on a type with no GUID
CUDA device code does not support va_arg
'va_start' cannot be used in a captured statement
'va_start' used in function with fixed args
'va_start' cannot be used outside a function
'va_start' used in %select{System V|Win64}0 ABI function
array types cannot be value-initialized
variable template partial specialization %0 cannot be redefined
no variable template matches%select{| partial}0 specialization
no variable template matches specialization; did you mean to use %0 as function template instead?
%select{variable|static data member}0 instantiated with function type %1
variable-sized object may not be initialized
'new' cannot allocate object of variably modified type %0
non-type template parameter of variably modified type %0
variably modified type %0 cannot be used as a template argument
'typeid' of variably modified type %0
CUDA device code does not support variadic functions
first two arguments to %0 must have the same type
first two arguments to %0 must be vectors
'vec_step' requires built-in scalar or vector type, %0 invalid
%select{too many|too few}0 elements in vector initialization (expected %1 elements, have %2)
unions cannot have virtual functions
second argument to __builtin_virtual_member_address must be the address of a virtual C++ member function: for example '&Foo::func'
'virtual' cannot be specified on member function templates
first argument to __builtin_virtual_member_address must have a type deriving from class where second argument was defined
first argument to __builtin_virtual_member_address must have C++ class type
'virtual' can only appear on non-static member functions
'virtual' can only be specified inside the class definition
variable length array declaration cannot have 'extern' linkage
variable length array declaration cannot have 'static' storage duration
variable length array declaration not allowed at file scope
variable length array cannot be formed during template argument deduction
variable length arrays are not supported for %select{the current target|'%1'}0
variably modified type declaration cannot have 'extern' linkage
variably modified type declaration not allowed at file scope
function declaration cannot have variably modified type
'void' must be the first and only parameter if specified
'void' as parameter must not have type qualifiers
argument %0 to %1 must be a 2-bit unsigned literal (i.e. 0, 1, 2 or 3)
existing instance variable %1 for __weak property %0 must be __weak
sampler type cannot be used with the __local and __global address space qualifiers
invalid rounding argument
scale argument must be 1, 2, 4, or 8
tile arguments must refer to different tiles
%0 attribute can only be applied to a typedef or a field declaration
%0 attribute can only be applied to non-record types
invalid type signature semantic kind %1
%0 attribute can only be applied once per declaration
semantics kind '%1' repeated more than once
%0 calling convention is not supported %select{for this target|on variadic function|on constructor/destructor|on builtin function}1
duplicate use of asm operand name "%0"
asm-specifier for input or output variable conflicts with asm clobber list
overloaded %0 cannot have %select{no|a defaulted|more than one}1 parameter before C++2b
use of function template name with no prior declaration in function call with explicit template arguments is a C++20 extension
initializer for aggregate is not a compile-time constant
anonymous types declared in an anonymous %select{struct|union}0 are an extension
types declared in an anonymous %select{struct|union}0 are a Microsoft extension
anonymous %select{struct|union}0 cannot be '%1'
anonymous unions are a C11 extension
initialization of an array %diff{of type $ from a compound literal of type $|from a compound literal}0,1 is a GNU extension
parenthesized initialization of a member array is a GNU extension
implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is a C++11 extension
ISO C++ standards before C++17 do not allow new expression for type %0 to use list-initialization
'auto' type specifier is a C++11 extension
ISO C++ does not allow %select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2 because it casts away qualifiers, even though the source and destination types are unrelated
anonymous structs are a C11 extension
%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature
flexible array members are a C99 feature
'trivial_abi' cannot be applied to %0
captured structured bindings are a C++20 extension
cast between pointer-to-function and pointer-to-object is an extension
%select{case value|enumerator value|non-type template argument|array size|explicit specifier argument|noexcept specifier argument}0 %select{cannot be narrowed from type %2 to %3|evaluates to %2, which cannot be narrowed to type %3}1
complex initialization specifying real and imaginary components is an extension
use of this statement in a constexpr %select{function|constructor}0 is a C++14 extension
use of this statement in a constexpr %select{function|constructor}0 is a C++20 extension
use of this statement in a constexpr %select{function|constructor}0 is a C++2b extension
multiple return statements in constexpr function is a C++14 extension
constexpr constructor that does not initialize all members is a C++20 extension
%select{constexpr|consteval}1 %select{function|constructor}0 never produces a constant expression
function try block in constexpr %select{function|constructor}0 is a C++20 extension
variable declaration in a constexpr %select{function|constructor}0 is a C++14 extension
uninitialized variable in a constexpr %select{function|constructor}0 is a C++20 extension
definition of a %select{static|thread_local}1 variable in a constexpr %select{function|constructor}0 is a C++2b extension
type definition in a constexpr %select{function|constructor}0 is a C++14 extension
constexpr union constructor that does not initialize any member is a C++20 extension
'constinit' specifier missing on initializing declaration of %0
use of the %0 attribute is a C++14 extension
use of the %0 attribute is a C++17 extension
use of the %0 attribute is a C++20 extension
designated initializers are a C++20 extension
decomposition declarations are a C++17 extension
ISO C++17 does not permit structured binding declaration in a condition
decomposition declaration declared %plural{1:'%1'|:with '%1' specifiers}0 is a C++20 extension
default initialization of an object of const type %0%select{| without a user-provided default constructor}1 is a Microsoft extension
defaulted comparison operators are a C++20 extension
cannot delete expression with pointer-to-'void' type %0
ISO C++11 does not allow conversion from string literal to %0
designated initializers are a C99 feature
array designators are a C99 extension
brace elision for designated initializer is a C99 extension
mixture of designated and non-designated initializers in the same initializer list is a C99 extension
nested designators are a C99 extension
ISO C++ requires field designators to be specified in declaration order; field %1 will be initialized after field %0
destructor cannot be declared using a %select{typedef|type alias}1 %0 of the class name
ISO C++ considers this destructor name lookup to be ambiguous
ISO C++ requires the name after '::~' to be found in the same scope as the name before '::~'
empty %select{struct|union}0 is a GNU extension
befriending enumeration type %0 is a C++11 extension
enumeration values exceed range of largest integer
ISO C restricts enumerator values to range of 'int' (%0 is too %select{small|large}1)
incremented enumerator value %0 is not representable in the largest integer type
enumerator value is not representable in the underlying type %0
explicit capture of 'this' with a capture default of '=' is a C++20 extension
ambiguous use of internal linkage declaration %0 defined in multiple modules
excess elements in %select{array|vector|scalar|union|struct}0 initializer
excess elements in initializer for indivisible sizeless type %0
excess elements in char array initializer
explicit conversion functions are a C++11 extension
duplicate explicit instantiation of %0 ignored as a Microsoft extension
qualifier in explicit instantiation of %q0 requires a template-id (a typedef is not permitted)
explicit specialization cannot have a storage class
ISO C++20 does not permit %select{an empty|a static_assert}0 declaration to appear in an export block
ISO C++20 does not permit a declaration that does not introduce any names to be exported
ISO C++20 does not permit using directive to be exported
expression is not an %select{integer|integral}0 constant expression; folding it to a constant is a GNU extension
flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a GNU extension
flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a Microsoft extension
%0 may not be used as an array element due to flexible array member
%0 may not be nested in a struct due to flexible array member
flexible array initialization is a GNU extension
flexible array member %0 in a union is a GNU extension
flexible array member %0 in a union is a Microsoft extension
'begin' and 'end' returning different types (%0 and %1) is a C++17 extension
ISO C forbids forward references to 'enum' types
redeclaration of already-defined enum %0 is a GNU extension
use of member %0 found via unqualified lookup into dependent bases of class templates is a Microsoft extension
use of member %0 before its declaration is a Microsoft extension
complex numbers are an extension in a freestanding C99 implementation
unqualified friend declaration referring to type outside of the nearest enclosing namespace is a Microsoft extension; add a nested name specifier
anonymous structs are a GNU extension
arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2 is a GNU extension
subscript of a pointer to void is a GNU extension
arithmetic on%select{ a|}0 pointer%select{|s}0 to void is a GNU extension
jump from this goto statement to its label is a Microsoft extension
imaginary constants are a GNU extension
function previously declared with an %select{explicit|implicit}0 exception specification redeclared with an %select{implicit|explicit}0 exception specification
call to undeclared function %0; ISO C99 and later do not support implicit function declarations
implicitly declaring library function '%0' with type %1
call to undeclared library function '%0' with type %1; ISO C99 and later do not support implicit function declarations
missing 'typename' prior to dependent type name %0%1; implicit 'typename' is a C++20 extension
in-class initializer for static data member of type %0 is a GNU extension
in-class initializer for static data member of type %0 requires 'constexpr' specifier
in-class initializer for static data member is not a constant expression; folding it to a constant is a GNU extension
%select{|pointer to |reference to }0incomplete type %1 is not allowed in exception specification
ISO C++17 does not allow incrementing expression of type bool
initialized lambda captures are a C++14 extension
initialized lambda pack captures are a C++20 extension
constant expression evaluates to %0 which cannot be narrowed to type %1
type %0 cannot be narrowed to %1 in initializer list
non-constant-expression cannot be narrowed from type %0 to %1 in initializer list
initializer %select{partially |}0overrides prior initialization of this subobject
initializer-string for char array is too long
inline variables are a C++17 extension
ISO C does not support '~' for complex conjugation of %0
complex integer types are a GNU extension
ISO C does not support '++'/'--' on complex integer type %0
static %select{function|variable}0 %1 is used in an inline function with external linkage
static %select{function|variable}0 %1 is used in an inline function with external linkage
return type of 'main' is not 'int'
ISO C++ does not allow 'main' to be used by a program
too many braces around %select{scalar |}0initializer
class member cannot be redeclared
exception specification in declaration does not match previous declaration
exception specification in explicit instantiation does not match instantiated one
%0 is missing exception specification '%1'
type specifier missing, defaults to 'int'; ISO C99 and later do not support implicit int
mixing declarations and code is a C99 extension
import of C++ module '%0' appears within extern "C" language linkage specification
redundant #include of module '%0' appears within %1
accessing inaccessible direct base %0 of %1 is a Microsoft extension
anonymous %select{structs|unions}0 are a Microsoft extension
static_cast between pointer-to-function and pointer-to-object is a Microsoft extension
using the undeclared type %0 as a default template argument is a Microsoft extension
non-type template argument containing a dereference operation is a Microsoft extension
explicit constructor calls are a Microsoft extension
forward references to 'enum' types are a Microsoft extension
implicit conversion between pointer-to-function and pointer-to-object is a Microsoft extension
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 not in %select{a namespace enclosing %2|class %2 or an enclosing namespace}3 is a Microsoft extension
template argument for template type parameter must be a type; omitted 'typename' is a Microsoft extension
using declaration referring to inaccessible member '%0' (which refers to accessible member '%1') is a Microsoft compatibility extension
'mutable' on a reference type is a Microsoft extension
lookup of %0 in member access expression is ambiguous; using member of %1
use of enumeration in a nested name specifier is a C++11 extension
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers in nested pointer types
when type is in parentheses, array cannot have dynamic size
declaration does not declare anything
%select{struct|union}0 without named members is a GNU extension
anonymous non-C-compatible type given name for linkage purposes by %select{typedef|alias}0 declaration; add a tag name here
non-class friend type %0 is a C++11 extension
'main' is not allowed to be declared _Noreturn
offset of on non-POD type %0
offset of on non-standard-layout type %0
initialization clause of OpenMP for loop is not in canonical form ('var = init' or 'T var = init')
Clang permits use of type 'double' regardless pragma if 'cl_khr_fp64' is supported
vector component name '%0' is a feature from OpenCL version 3.0 onwards
replacement function %0 cannot be declared 'inline'
declaring overloaded %0 as 'static' is a C++2b extension
out-of-line declaration of a member must be a definition
ISO C++ specifies that qualified reference to %0 is a constructor name rather than a %select{template name|type}1 in this context, despite preceding %select{'typename'|'template'}2 keyword
exception specification of overriding function is more lax than base version
ISO C++20 considers use of overloaded operator '%0' (with operand types %1 and %2) to be ambiguous despite there being a unique best viable function%select{ with non-reversed arguments|}3
ISO C++20 requires return type of selected 'operator==' function for rewritten '%1' comparison to be 'bool', not %0
redefinition of default argument
parameter %0 was not declared, defaults to 'int'; ISO C99 and later do not support implicit int
%diff{promoted type $ of K&R function parameter is not compatible with the parameter type $|promoted type of K&R function parameter is not compatible with parameter type}0,1 declared in a previous prototype
omitting the parameter name in a function definition is a C2x extension
%select{class|variable}0 template partial specialization is not more specialized than the primary template
%select{class|variable}0 template partial specialization contains %select{a template parameter|template parameters}1 that cannot be deduced; this partial specialization will never be used
plain '_Complex' requires a type specifier; assuming '_Complex double'
invoking a pointer to a 'const &' member function on an rvalue is a C++20 extension
predefined identifier is only valid inside function
pseudo-destructors on type void are a Microsoft extension
function definition with pure-specifier is a Microsoft extension
qualified destructor name only found in lexical scope; omit the qualifier to find this type name by unqualified lookup
redefinition of typedef %0 is a C11 feature
ISO C++17 does not allow 'register' storage class specifier
friend function %0 retaining previous language linkage is an extension
%select{void function|void method|constructor|destructor}1 %0 should not return a value
void %select{function|method|block}1 %0 should not return void expression
non-void %select{function|method}1 %0 should return a value
C++98 requires an accessible copy constructor for class %2 when binding a reference to a temporary; was %select{private|protected}0
no viable constructor %select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1; C++98 requires a copy constructor when binding a reference to a temporary
invalid application of '%0' to a function type
invalid application of '%0' to a void type
'%0' is not permitted on a declaration of a type
capture of '*this' by copy is a C++17 extension
static data member %0 in union is a C++11 extension
redeclaring non-static %0 as static is a Microsoft extension
'static' can only be specified inside the class definition
string literal operator templates are a GNU extension
ISO C90 does not allow subscripting non-lvalue array
overloaded %0 with %select{no|a defaulted|more than one}1 parameter is a C++2b extension
address non-type template argument cannot be surrounded by parentheses
template argument uses local type %0
non-type template argument referring to %select{function|object}0 %1 with internal linkage is a C++11 extension
template argument uses unnamed type
'template' keyword outside of a template
declaration of %0 shadows template parameter
default template arguments for a function template are a C++11 extension
taking the address of a temporary object of type %0
ISO C forbids taking the address of an expression of type 'void'
method parameter type %diff{$ does not match super class method parameter type $|does not match super class method parameter type}0,1
C99 forbids casting nonscalar type %0 to the same type
cast to union type is a GNU extension
pointer comparisons before C11 need to be between two complete or two incomplete types; %0 is %select{|in}2complete and %1 is %select{|in}3complete
comparison of distinct pointer types%diff{ ($ and $)|}0,1
equality comparison between function pointer and void pointer (%0 and %1)
comparison between pointer and integer (%0 and %1)
incompatible operand types (%0 and %1)
pointer type mismatch%diff{ ($ and $)|}0,1
C99 forbids conditional expressions with only one void side
pointer/integer type mismatch in conditional expression%diff{ ($ and $)|}0,1
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers
incompatible function pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between pointers to integer types %select{with different sign|where one is of the unique plain 'char' type and the other is not}3
incompatible integer to pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer to integer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between void pointer and function pointer
tentative definition of variable with internal linkage has incomplete non-array type %0
ISO C does not allow indirection on operand of type %0
ISO C++ does not allow indirection on operand of type %0
ordered comparison of function pointers (%0 and %1)
ordered comparison between pointer and zero (%0 and %1) is an extension
ordered comparison between pointer and integer (%0 and %1)
zero size arrays are an extension
typedef requires a name
missing 'typename' prior to dependent type name '%0%1'
'typename' occurs outside of a template
use of undeclared identifier %0; unqualified lookup into dependent bases of class template %1 is a Microsoft extension
ISO C++ requires a definition in this translation unit for %select{function|variable}0 %q1 because its type does not have linkage
unelaborated friend declaration is a C++11 extension; specify '%select{struct|interface|union|class|enum}0' to befriend %1
union member %0 has reference type %1, which is a Microsoft extension
unqualified base initializer of class templates is a Microsoft extension
use of out-of-scope declaration of %0%select{| whose type is not compatible with that of an implicit declaration}1
using declaration naming a scoped enumerator is a C++20 extension
using directive refers to implicitly-defined namespace 'std'
field %0 with variable sized type %1 not at the end of a struct or class is a GNU extension
variable templates are a C++14 extension
'main' is not allowed to be declared variadic
variable length arrays are a C99 feature
variable length array folded to constant array as an extension
'%0' cannot be signed or unsigned
declaration does not introduce any names to be exported
constrained by %select{|implicitly }1%select{private|protected}0 inheritance here
%select{|implicitly }1declared %select{private|protected}0 here
protected %select{constructor|destructor}0 can only be used to %select{construct|destroy}0 a base class subobject
must name member using the type of the current context %0
can only access this member on an object of type %0
add stubs for missing protocol requirements
add a '@synthesize' directive
add a pair of parentheses to declare a variable
candidate function made ineligible by enable_if
declared with %0 attribute here
allocated with 'new%select{[]|}0' here
lookup in the object type %0 refers here
lookup from the current scope refers here
similar constraint expressions not considered equivalent; constraint expressions cannot be considered equivalent unless they originate from the same concept
similar constraint expression here
candidate found by name lookup is %q0
inherited from base class %0 here
member found by ambiguous name lookup
member type %0 found by ambiguous name lookup
because of ambiguity in conversion %diff{of $ to $|between types}0,1
anonymous namespace begins here
use __bridge to convert directly (no change in ownership)
use %select{__bridge_retained|CFBridgingRetain call}1 to make an ARC object available as a +1 %0
use %select{__bridge_transfer|CFBridgingRelease call}1 to transfer ownership of a +1 %0 into ARC
use __bridge with C-style cast to convert directly (no change in ownership)
use __bridge_retained with C-style cast to make an ARC object available as a +1 %0
use __bridge_transfer with C-style cast to transfer ownership of a +1 %0 into ARC
field has non-trivial ownership qualification
declaration uses type that is ill-formed in ARC
declaration in interface is not in the '%select{alloc|copy|init|new}0' family because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
init method must return a type related to its receiver type
declaration in interface
block will be retained by %select{the captured object|an object strongly retained by the captured object}0
also accessed here
declaration uses __weak, but ARC is disabled
declaration uses __weak, which the current deployment target does not support
array %0 declared here
add 'u8' prefix to form a 'char8_t' string literal
conversion to %select{integral|enumeration}0 type %1 declared here
constraint '%0' is already present here
use constraint modifier "%0"
type %0 is incomplete
%select{and|because}0 '%1' evaluated to false
%select{and|because}0 '%1' (%2 %3 %4) evaluated to false
setter and getter must both be synthesized, or both be user defined, or the property must be nonatomic
attribute is here
annotating the 'if %select{constexpr|consteval}0' statement here
annotating the infinite loop here
previous %select{unmarked |}0overload of function is here
property should be changed to be readwrite
%0 has been explicitly marked %select{unavailable|deleted|deprecated}1 here
return type of 'await_ready' is required to be contextually convertible to 'bool'
explicitly cast the pointer to silence this warning
base class %0 specified here
bit-field is declared here
did you mean to use __block %0?
in call to printing function with arguments '(%0)' while dumping struct
called by %0
previous call is here%select{; set to nil to indicate it cannot be called afterwards|}0
%0 declared here
callee declares array parameter as static here
'trivial_abi' is disallowed on %0 because %select{its copy constructors and move constructors are all deleted|it is polymorphic|it has a base of a non-trivial class type|it has a virtual base|it has a __weak field|it has a field of a non-trivial class type|it has an address-discriminated __ptrauth field}1
declaration missing '[[carries_dependency]]' attribute is here
cast one or both operands to int to silence this warning
cast expression to void to silence warning
%select{category|class extension}0 conforms to protocol %1 which defines method %2
consider making the bitfield type %select{unsigned|signed}0
consider defining %0 with the '%1' calling convention
while checking constraint satisfaction for class template partial specialization '%0' required here
while checking constraint satisfaction for function '%0' required here
while checking constraint satisfaction for template '%0' required here
while checking constraint satisfaction for variable template partial specialization '%0' required here
class is declared here
explicitly declare getter %objcinstance0 with '%1' to return an 'unowned' object
parameter of the 'collapse' clause
in defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator for %1 first required here
compatible type %0 specified here
place parentheses around the string literal to silence warning
%select{and|because}0 '%1' evaluated to false
while checking the satisfaction of concept '%0' requested here
place parentheses around the assignment to silence this warning
use '==' to turn this assignment into an equality comparison
use '!=' to turn this compound assignment into an inequality comparison
conflicting attribute is here
conflicting prototype is here
conflicting %0 here
previous return statement is here
member not initialized by constructor
%select{data member %1|base class %2}0 declared here
virtual base class declared here
add the %select{'require_constant_initialization' attribute|'constinit' specifier}0 to the initializing declaration here
variable declared constinit here
while calculating associated constraint of template '%0' here
constraint depends on a previously diagnosed expression
while substituting template arguments into constraint expression here
type conversion function declared here
use 'static' to give inline function %0 internal linkage
must be declared with 'noexcept'
call to %0 implicitly required by coroutine function here
call to 'await_transform' implicitly required by 'co_await' here
call to '%select{initial_suspend|final_suspend}0' implicitly required by the %select{initial suspend point|final suspend point}0
conflicting __device__ function declared here
const variable cannot be emitted on device side due to dynamic initialization
the %select{1st|2nd|3rd}1 template parameter of %0 needs to be %select{a type|an integer or enum value}2
%0 needs to have exactly %1 template parameters
%0 needs to be instantiated from a class template with proper template arguments
host variable declared here
candidate template ignored: target attributes do not match
remove 'u8' prefix to avoid a change of behavior; Clang encodes unprefixed narrow string literals as UTF-8
annotate %select{%1|anonymous %1}0 with an availability attribute to silence this warning
this declaration is not a prototype; add %select{'void'|parameter declarations}0 to make it %select{a prototype for a zero-parameter function|one}0
declare the parameter __strong or capture a __block __strong variable to keep values alive across autorelease pools
function is a coroutine due to use of '%0' here
declared %select{'returns_nonnull'|'nonnull'}0 here
required by %select{'require_constant_initialization' attribute|'constinit' specifier}0 here
during template argument deduction for %select{class|variable}0 template %select{partial specialization |}1%2 %3
deduction guide declared %0 by intervening access specifier
member template declared %0 here
in instantiation of default argument for '%0' required here
default argument declared here
in instantiation of default function argument expression for '%0' required here
default member initializer declared here
defaulted %0 is implicitly deleted because implied %select{|'==' |'<' }1comparison %select{|for member %3 |for base class %3 }2is ambiguous
defaulted %0 is implicitly deleted because it would invoke a deleted comparison function%select{| for member %2| for base class %2}1
return type of defaulted 'operator<=>' cannot be deduced because return type %2 of three-way comparison for %select{|member|base class}0 %1 is not a standard comparison category type
selected 'operator<=>' for %select{|member|base class}0 %1 declared here
%select{|member|base class}0 %1 declared here
defaulted %0 is implicitly deleted because it would invoke a %select{private|protected}3 %4%select{ member of %6| member of %6 to compare member %2| to compare base class %2}1
defaulted %0 is implicitly deleted because there is no viable %select{three-way comparison function|'operator=='}1 for %select{|member |base class }2%3
three-way comparison cannot be synthesized because there is no viable function for %select{'=='|'<'}0 comparison
non-constexpr comparison function would be used to compare %select{|member %1|base class %1}0
non-constexpr comparison function declared here
defaulted %0 is implicitly deleted because this non-rewritten comparison function would be the best match for the comparison
defaulted %0 is implicitly deleted because a builtin comparison function using this conversion would be the best match for the comparison
defaulted %0 is implicitly deleted because class %1 has a reference member
defaulted %0 is implicitly deleted because %2 is a %select{union-like class|union}1 with variant members
%0 defined here
conversion to pointer type %0
qualify call to silence this warning
%select{copy|move}0 assignment operator of %1 is implicitly deleted because field %2 is of %select{reference|const-qualified}4 type %3
copy constructor of %0 is implicitly deleted because field %1 is of rvalue reference type %2
copy %select{constructor|assignment operator}0 is implicitly deleted because %1 has a user-declared move %select{constructor|assignment operator}2
%select{default constructor of|constructor inherited by}0 %1 is implicitly deleted because all %select{data members|data members of an anonymous union member}2 are const-qualified
%select{default constructor of|constructor inherited by}0 %1 is implicitly deleted because field %2 of %select{reference|const-qualified}4 type %3 would not be initialized
virtual destructor requires an unambiguous, accessible 'operator delete'
%select{default constructor of|copy constructor of|move constructor of|copy assignment operator of|move assignment operator of|destructor of|constructor inherited by}0 %1 is implicitly deleted because %select{base class %3|%select{||||variant }4field %3}2 %select{has %select{no|a deleted|multiple|an inaccessible|a non-trivial}4 %select{%select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|%select{default|corresponding|default|default|default}4 constructor}0|destructor}5%select{||s||}4|is an ObjC pointer|has an address-discriminated ptrauth qualifier}6
function is implicitly deleted because its declared type does not match the type of an implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0
candidate ignored: %select{not a function template|not a member of the enclosing namespace; did you mean to explicitly qualify the specialization?}0
must qualify identifier to find this declaration in dependent base class
template parameter is used in default argument declared here
add an explicit capture of 'this' to capture '*this' by reference
first non-designated initializer is here
non-type declaration found by destructor name lookup
type %0 found by destructor name lookup
direct member declared here
direct method %0 declared here
due to %0 being dllexported%select{|; try compiling in C++11 mode}1
asm operand name "%0" first referenced here
element %0 also has value %1
put the semicolon on a separate line to silence this warning
remove parentheses to declare a variable
change this ',' to a ';' to call %0
replace parentheses with an initializer to declare a variable
using declaration annotated with 'using_if_exists' here
type was declared read-only here
jump enters lifetime of block which captures a destructible C++ object
jump enters lifetime of block which captures a C struct that is non-trivial to destroy
jump enters lifetime of block which strongly captures a variable
jump enters lifetime of block which weakly captures a variable
jump enters lifetime of a compound literal that is non-trivial to destruct
%0 declared here
enum %0 was explicitly specialized here
remove extraneous parentheses around the comparison to silence this warning
use '=' to turn this equality comparison into an assignment
declared here%select{ in module '%1'|}0
place parentheses around comparison expression to evaluate it first
in evaluation of exception specification for %q0 needed here
jump exits scope of __block variable
jump exits lifetime of block which captures a destructible C++ object
jump exits lifetime of block which captures a C struct that is non-trivial to destroy
jump exits lifetime of block which strongly captures a variable
jump exits lifetime of block which weakly captures a variable
jump exits scope of variable with __attribute__((cleanup))
jump exits lifetime of a compound literal that is non-trivial to destruct
jump exits catch block
jump exits try block
jump exits scope of variable with non-trivial destructor
jump exits autoreleasepool block
jump exits @catch block
jump exits @finally block
jump exits scope of __strong variable
jump exits @synchronized block
jump exits @try block
jump exits scope of __weak variable
jump exits __except block
jump exits __finally block
jump exits __try block
jump exits scope of lifetime-extended temporary with non-trivial destructor
explicit %select{constructor|deduction guide}0 declared here
explicit instantiation candidate function %q0 template here %1
explicit instantiation definition is here
explicit instantiation refers here
while substituting explicitly-specified template arguments into function template %0 %1
'template<>' header not required for explicitly-specialized class %0 declared here
export block begins here
expression evaluates to '%0 %1 %2'
%select{and|because}0 type constraint '%1' was not satisfied:
%select{and|because}0 %1 does not satisfy %2:
%select{and|because}0 '%1' would be invalid: %2
%select{and|because}0 '%1' would be invalid
%select{and|because}0 '%1' may throw an exception
%select{and|because}0 '%1' would be invalid: %2
%select{and|because}0 '%1' would be invalid
extern "C" language linkage specification begins here
declared %select{in global scope|with C language linkage}0 here
did you forget ';'?
field designator refers here
add missing switch cases
mark %0 as '%select{final|sealed}1' to silence this warning
final overrider of %q0 in %1
add '__%select{counted|sized}0_by(%2)' to '%1'
add a count attribute within the declarator brackets or convert the parameter to a pointer with a count or size attribute
'%0' has been assigned here
casting %0 to %1 will not be allowed in the future; consider replacing '__unsafe_indexable' by a safe pointer
previously assigned here
remove '&' to get address as %0 instead of %1
cast to %0 first to keep bounds of %1
silence by making the destination '__single'
initialized flexible array member %0 is here
selected '%select{begin|end}0' %select{function|template }1%2 with iterator type %3
in implicit call to 'operator%select{!=|*|++}0' for iterator of type %1
member is not a candidate because range type %0 has no '%select{end|begin}1' member
did you mean to use '%0'?
treat the string as an argument to avoid this
format string is defined here
forward declaration of class here
%0 is not defined, but forward declared here; conversion would be valid if it was derived from %1
forward declaration of template entity is here
found near match '%0'
from 'diagnose_if' attribute on %0:
add enclosing parentheses to perform a function-style cast
did you mean %0?
while substituting deduced template arguments into function template %0 %1
in instantiation of function template specialization %q0 requested here
function template %q0 matches specialization %1
suffix with parentheses to turn this into a function call
prefix with the address-of operator to silence this warning
or because setter is declared here, but no getter method %0 is found
add 'module;' to the start of the file to introduce a global module fragment
inline assembly label %0 declared here
guarded_by declared here
hidden overloaded virtual function %q0 declared here%select{|: different classes%diff{ ($ vs $)|}2,3|: different number of parameters (%2 vs %3)|: type mismatch at %ordinal2 parameter%diff{ ($ vs $)|}3,4|: different return type%diff{ ($ vs $)|}2,3|: different qualifiers (%2 vs %3)|: different exception specifications}1
type declaration hidden
declaration hides type
conversion to %select{integral|enumeration}0 type %1 declared here
field of illegal %select{type|pointer type}0 %1 declared here
class implementation is declared here
when implemented by class %0
while checking implicit 'delete this' for virtual destructor
implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 inferred target collision: call to both %select{__device__|__global__|__host__|__host__ __device__}1 and %select{__device__|__global__|__host__|__host__ __device__}2 members
%0 is an implicit parameter
explicitly defaulted function was implicitly deleted here
in implicit initialization of binding declaration %0
add 'constexpr'
while declaring the corresponding implicit 'operator==' for this defaulted 'operator<=>'
while declaring the implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 for %0
when looking up '%select{begin|end}0' function for range expression of type %1
in implicit initialization of %select{array element %1 with omitted initializer|field %1 with omitted initializer|trailing array elements in runtime-sized array new}0
in initialization of temporary of type %0 created to list-initialize this reference
include the header <%0> or explicitly provide a declaration for '%1'
conformance of forward class %0 to protocol %1 can not be confirmed
possible target of %select{indirect|asm}0 goto statement
consider using __builtin_trap() or qualifying pointer with 'volatile'
use '|=' to turn this inequality comparison into an or-assignment
insert an explicit cast to silence this issue
initializing field %0 with default member initializer
%select{field|base class}0 %1 will be initialized after %select{field|base}2 %3
insert 'break;' to avoid fall-through
insert '%0;' to silence this warning
add an explicit instantiation declaration to suppress this warning if %q0 is explicitly instantiated in another translation unit
(skipping %0 context%s0 in backtrace; use -ftemplate-backtrace-limit=0 to see all)
%select{implicit|explicit}0 instantiation first required here
it delegates to
instance variable is declared here
%select{implicitly |}2captured%select{| by reference}3%select{%select{ due to use|}2 here| via initialization of lambda capture %0}1
lambda expression begins here
default capture by %select{value|reference}0
explicitly capture 'this'
implicit capture of lambda object due to conversion to block pointer here
capture %0 by %select{value|reference}1
%select{%select{reference|'std::initializer_list'}0 member|member with %select{reference|'std::initializer_list'}0 subobject}1 declared here
local declaration nearly matches
type of %ordinal0 parameter of local declaration does not match definition%diff{ ($ vs $)|}1,2
%select{via initialization of|binding reference}0 variable %select{%2 |}1here
the other acquisition of %0 '%1' is here
%0 acquired here
use '%0' for a bitwise operation
remove constant to silence this warning
add parentheses after the '!' to evaluate the %select{comparison|bitwise operator}0 first
add parentheses around left hand side expression to silence this warning
%select{decremented|incremented}0 here
change return type to 'int'
remove '_Noreturn'
member is declared here
member %0 declared here
member declaration does not match because it %select{is|is not}0 const qualified
member declaration nearly matches
type of %ordinal0 parameter of member declaration does not match definition%diff{ ($ vs $)|}1,2
member %0 first declared here
'->' applied to return value of the operator->() declared here
in %select{implicit|defaulted}0 %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 for %2 first required here
explicitly cast the argument to size_t to silence this warning
did you mean to compare the result of %0 instead?
method %0 declared here
compiler has implicitly changed method %0 return type
method %0 is used for the forward class
passing byval argument %0 with potentially incompatible alignment here
%0 begins here
function multiversioning caused by this declaration
target function has calling convention %1 (expected %0)
%0 declared here
add 'void' to the parameter list to turn an old-style K&R function declaration into a prototype
target function %select{is a member of different class%diff{ (expected $ but has $)|}1,2|has different number of parameters (expected %1 but has %2)|has type mismatch at %ordinal3 parameter%diff{ (expected $ but has $)|}1,2|has different return type%diff{ ($ expected but has $)|}1,2}0
target %select{constructor|destructor}0 is declared here
namespace %0 defined here
consider using vld1_%0%1() to initialize a vector from memory, or vcreate_%0%1() to initialize from an integer constant
consider using vld1q_%0%1() to initialize a vector from memory, or vcombine_%0%1(vcreate_%0%1(), vcreate_%0%1()) to initialize from integer constants
while checking the satisfaction of nested requirement requested here
%select{and|because}0 '%1' would be invalid: %2
%select{and|because}0 '%1' would be invalid
next field declaration is here
next %select{instance variable declaration|synthesized instance variable}0 is here
type is not C-compatible due to this %select{base class|default member initializer|lambda expression|friend declaration|member declaration}0
non-deducible template parameter %0
not-yet-instantiated member is declared here
%0 is not literal because it has base class %1 of non-literal type
%0 is not literal because it has data member %1 of %select{non-literal|volatile}3 type %2
incomplete type %0 is not a literal type
lambda closure types are non-literal types before C++17
%0 is not literal because it is not an aggregate and has no constexpr constructors other than copy or move constructors
%0 is not literal because its destructor is not constexpr
%0 is not literal because it has a non-trivial destructor
%0 is not literal because it has a user-provided destructor
%select{struct|interface|class}0 with virtual base %plural{1:class|:classes}1 is not a literal type
non-template declaration found by name lookup
%select{%2 has subobjects that are|%3 has type %2 that is}0 non-trivial to %select{default-initialize|destruct|copy}1
non-usual %0 declared here
non-templated declaration is here
because it has a default argument
because field %0 has an initializer
field is non-trivial to %select{copy|default-initialize}0
because type %0 has a virtual %select{member function|base class}1
because no %select{<<ERROR>>|constructor|constructor|assignment operator|assignment operator|<<ERROR>>}2 can be used to %select{<<ERROR>>|copy|move|copy|move|<<ERROR>>}2 %select{base class|field|an object}0 of type %3
because %select{base class of |field of |}0type %1 has no default constructor
because type %0 has a member with %select{no|no|__strong|__weak|__autoreleasing}1 ownership
because its parameter is %diff{of type $, not $|of the wrong type}2,3
because the function selected to %select{construct|copy|move|copy|move|destroy}2 %select{base class|field}0 of type %1 is not trivial
because %select{base class of |field of |}0type %1 has a user-provided %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2
because it is a variadic function
destructor for %0 is not trivial because it is virtual
%0 should be declared prior to the call site%select{| or in %2| or in an associated namespace of one of its arguments}1
add 'export' here if this is intended to be a module interface unit
%0 is not a structural type because it has a mutable non-static data member
%0 is not a structural type because it has a %select{non-static data member|base class}1 that is not public
%0 is not a structural type because it has a non-static data member of rvalue reference type
%0 is not a structural type because it has a %select{non-static data member|base class}1 of non-structural type %2
previous equal key is here
insert '%select{_Nonnull|_Nullable|_Null_unspecified}0' if the %select{pointer|block pointer|member pointer|array parameter}1 %select{should never be null|may be null|should not declare nullability}0
%0 specified here
use nullability type specifier %0 to affect the innermost pointer type of %1
%0 declared here
method marked as designated initializer of the class here
use 'isEqual:' instead
%select{first|second|third}0 parameter has unexpected type %1 (should be %2)
method returns unexpected type %0 (should be an object type)
add a super class to fix this problem
type parameter %0 declared here
method %0 that returns %1 declared here
%select{expected assignment expression|expected compound statement|expected exactly two expression statements|expected in right hand side of the first expression}0
%select{expected compound statement|expected exactly one expression statement|expected assignment statement|expected conditional operator|expect result value to be at false expression|expect binary operator in conditional expression|expect '<', '>' or '==' as order operator|expect comparison in a form of 'x == e', 'e == x', 'x ordop expr', or 'expr ordop x'|expect lvalue for result value|expect scalar value|expect integer value|unexpected 'else' statement|expect '==' operator|expect an assignment statement 'v = x'|expect a 'if' statement|expect no more than two statements|expect a compound statement|expect 'else' statement|expect a form 'r = x == e; if (r) ...'}0
%select{expected an expression statement|expected built-in assignment operator|expected expression of scalar type|expected lvalue expression}0
%select{expected an expression statement|expected built-in binary or unary operator|expected unary decrement/increment operation|expected expression of scalar type|expected assignment expression|expected built-in binary operator|expected one of '+', '*', '-', '/', '&', '^', '%|', '<<', or '>>' built-in operations|expected in right hand side of expression}0
as specified in %select{'collapse'|'ordered'|'collapse' and 'ordered'}0 clause%select{||s}0
conversion to %select{integral|enumeration}0 type %1 declared here
%select{|previous }0'hint' clause with value '%1'
%select{|previous }0directive with no 'hint' clause specified
explicit data sharing attribute requested here
explicit data sharing attribute, data mapping attribute, or is_device_ptr clause requested here
'%0' directive found here
jump exits scope of OpenMP structured block
defined as %0
memory order clause '%0' is specified here
implicitly determined as %0
expected length on mapping of 'this' array section expression to be '1'
expected lower bound on mapping of 'this' array section expression to be '0' or not specified
expected 'this' subscript expression on map clause to be 'this[0]'
loop step is expected to be %select{negative|positive}0 due to this condition
marked as 'declare variant' here
marked as 'device_type(%0)' here
%select{statement|directive}0 outside teams construct here
nested teams construct here
'nowait' clause is here
'ordered' clause%select{| with specified parameter}0
predefined trait '%0' used here
%select{static data member is predetermined as shared|variable with static storage duration is predetermined as shared|loop iteration variable is predetermined as private|loop iteration variable is predetermined as linear|loop iteration variable is predetermined as lastprivate|constant variable is predetermined as shared|global variable is predetermined as shared|non-shared variable in a task construct is predetermined as firstprivate|variable with automatic storage duration is predetermined as private}0%select{|; perhaps you forget to enclose 'omp %2' directive into a parallel or another task region?}1
previous allocator is specified here
'%0' clause is specified here
previous 'critical' region starts here
previous '%0' directive used here
'reduction' clause with 'inscan' modifier is used here
'%0' clause used here
previous clause with directive name modifier specified here
previously marked as task_reduction with different reduction operation
jump bypasses OpenMP structured block
previously referenced here
'%0' previously encountered here
%0 clause previously used here
predetermined as a firstprivate in a task construct here
previously declared '%0' here
use -foperator-arrow-depth=N to increase 'operator->' limit
'operator->' declared here produces an object of type %0
(skipping %0 'operator->'%s0 in backtrace)
parameter of overridden method is annotated with __attribute__((noescape))
overridden method is here
overridden virtual function is here
mark 'operator==' as const or add a matching 'operator!=' to resolve the ambiguity
ambiguous candidate function with reversed arguments
ambiguity is between a regular call to this operator and a call with the argument order reversed
candidate function with non-reversed arguments
built-in candidate %0
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %3}1%select{| has different class%diff{ (expected $ but has $)|}5,6| has different number of parameters (expected %5 but has %6)| has type mismatch at %ordinal5 parameter%diff{ (expected $ but has $)|}6,7| has different return type%diff{ ($ expected but has $)|}5,6| has different qualifiers (expected %5 but found %6)| has different exception specification}4
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: requires%select{ at least| at most|}3 %4 argument%s4, but %5 %plural{1:was|:were}5 provided
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %select{requires at least|allows at most single|requires single}3 argument %4, but %plural{0:no|:%5}5 arguments were provided
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: cannot %select{pass pointer to|bind reference in}5 %3 %select{as a pointer to|to object in}5 %4 in %ordinal6 argument
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: 'this' object is in %3, but method expects object in %4
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: cannot implicitly convert argument %diff{of type $ to $|type to parameter type}3,4 for %select{%ordinal6 argument|object argument}5 under ARC
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: cannot %select{convert from|convert from|bind}3 %select{base class pointer|superclass|base class object of type}3 %4 to %select{derived class pointer|subclass|derived class reference}3 %5 for %ordinal6 argument
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: no known conversion %diff{from $ to $|from argument type to parameter type}3,4 for %select{%ordinal6 argument|object argument}5%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}7
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: cannot convert argument of incomplete type %diff{$ to $|to parameter type}3,4 for %select{%ordinal6 argument|object argument}5%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}7
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %ordinal5 argument (%3) would lose %select{const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}4 qualifier%select{||s||s|s|s}4
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: 'this' argument has type %3, but method is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}4
candidate template ignored: failed template argument deduction
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %select{%ordinal7|'this'}6 argument (%3) has %select{no|__weak|__strong}4 ownership, but parameter has %select{no|__weak|__strong}5 ownership
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %select{cannot convert initializer list|too few initializers in list|too many initializers in list}7 argument to %4
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: no overload of %4 matching %3 for %ordinal5 argument
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %select{%ordinal7|'this'}6 argument (%3) has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}4 ownership, but parameter has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}5 ownership
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %ordinal8 argument (%3) has %select{no ptrauth|%5}4 qualifier, but parameter has %select{no ptrauth|%7}6 qualifier
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: call to %select{__device__|__global__|__host__|__host__ __device__|invalid}3 function from %select{__device__|__global__|__host__|__host__ __device__|invalid}4 function
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %ordinal5 argument (%3) would lose __unaligned qualifier
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: expects an %select{lvalue|rvalue}5 for %select{%ordinal4 argument|object argument}3
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: constraints not satisfied
candidate template ignored: deduced type %diff{$ of %select{|element of }4%ordinal0 parameter does not match adjusted type $ of %select{|element of }4argument|of %select{|element of }4%ordinal0 parameter does not match adjusted type of %select{|element of }4argument}1,2%3
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 has been %select{explicitly made unavailable|explicitly deleted|implicitly deleted}3
candidate template ignored: disabled by %0%1
candidate disabled: %0
candidate template ignored: requirement '%0' was not satisfied%1
explicit %select{constructor|conversion function|deduction guide}0 is not a candidate%select{| (explicit specifier evaluates to true)}1
candidate template ignored: invalid explicitly-specified argument for template parameter %0
candidate template ignored: invalid explicitly-specified argument for %ordinal0 template parameter
candidate address cannot be taken because parameter %0 has pass_object_size attribute
candidate %select{constructor|template}0 ignored: instantiation %select{takes|would take}0 its own class type by value
candidate constructor ignored: cannot be used to construct an object in address space %0
candidate template ignored: couldn't infer template argument %0
candidate template ignored: deduced too few arguments for expanded pack %0; no argument for %ordinal1 expanded parameter in deduced argument pack %2
candidate template ignored: deduced %select{conflicting types|conflicting values|conflicting templates|packs of different lengths}0 for parameter %1%diff{ ($ vs. $)|}2,3
candidate template ignored: deduced values %diff{of conflicting types for parameter %0 (%1 of type $ vs. %3 of type $)|%1 and %3 of conflicting types for parameter %0}2,4
constructor from base class %0 inherited here
candidate %select{constructor|template}0 ignored: inherited constructor cannot be used to %select{copy|move}1 object
candidate template ignored: substitution exceeded maximum template instantiation depth
candidate template ignored: could not match %diff{$ against $|types}0,1
candidate template ignored: could not match %q0 against %q1
candidate template ignored: substitution failure%0%1
candidate template ignored: cannot deduce a type for %0 that would make %2 equal %1
candidate template ignored: constraints not satisfied%0
conversion candidate of type %0
remaining %0 candidate%s0 omitted; pass -fshow-overloads=all to show them
declared with index %0 here
passing argument to parameter here
while substituting into concept arguments here; substitution failures not allowed in concept arguments
passing argument to parameter %0 here
parameter pack %0 declared here
parameter of type %0 is declared here
%0 has been marked as being introduced in %1 %2 here, but the deployment target is %1 %3
partial specialization matches %0
inline function performs a conversion which is forbidden in ARC
pointer %0 declared here
pointer '%0' declared here
possible target for call
when applied to this declaration
'#pragma clang attribute push' regions ends here
previous '#pragma pack' directive that modifies alignment is here
did you intend to use '#pragma pack (pop)' instead of '#pragma pack()'?
place parentheses around the %0 expression to evaluate it first
place parentheses around the '?:' expression to evaluate it first
place parentheses around the '%0' expression to silence this warning
previous module declaration is here
previously defined here
module loaded from '%0'
previous declaration of class template partial specialization %0 is here
previously declared '%1' here
previous attribute is here
%0 is a builtin with type %1
%0 declared here
previously declared as %0 here
for type %0
previous explicit instantiation is here
previous initialization for field %0 is here
previous initialization %select{|with side effects }0is here%select{| (side effects will not occur at run time)}0
previous inheritance model specified here
previously defined as an alias for %0
previous declaration of %0 is here
previous template specialization is here
previous uuid specified here
did you mean to call the %0 method?
while substituting prior template arguments into %select{non-type|template}0 template parameter%1 %2
use __attribute__((visibility("hidden"))) attribute instead
private module fragment begins here
property %0 is declared %select{deprecated|unavailable|partial}1 here
property declared here
property synthesized here
jump bypasses setup of __block variable
jump bypasses initialization of variable with __attribute__((cleanup))
jump enters controlled statement of consteval if
jump enters controlled statement of constexpr if
jump bypasses initialization of catch block
jump bypasses initialization of try block
jump enters controlled statement of if available
jump bypasses initialization of variable of non-trivial C struct type
jump bypasses auto release push of @autoreleasepool block
jump bypasses initialization of @catch block
jump enters Objective-C fast enumeration loop
jump bypasses initialization of @finally block
jump bypasses initialization of __strong variable
jump bypasses initialization of @synchronized block
jump bypasses initialization of @try block
jump bypasses initialization of __weak variable
jump bypasses initialization of __except block
jump bypasses initialization of __finally block
jump bypasses initialization of __try block
jump bypasses variable initialization
jump bypasses initialization of non-POD variable
jump bypasses variable with a non-trivial destructor
jump bypasses initialization of variable length array
jump bypasses initialization of VLA type alias
jump bypasses initialization of VLA typedef
protocol is declared here
protocol %0 has no definition
protocol method is here
it could also be property %select{of type %1|without attribute '%1'|with attribute '%1'|with getter %1|with setter %1}0 declared here
previous __ptrauth authentication %select{mode|option}0
%0 is incomplete
cannot take an address of a virtual member function if its return or argument types are incomplete
qualified call to %0::%1 is treated as a virtual call to %1 due to -fapple-kext
unimplemented pure virtual method %0 in %1
add a variable name to declare a %0 initialized with %1
receiver is instance of class declared here
receiver expression is here
receiver is treated with 'id' type for purpose of method lookup
default argument used here
'%0' included multiple times, additional include site here
'%0' included multiple times, additional include site in header from module '%1'
%select{reference|pointer}0 member declared here
%select{const|reference}0 member %1 will never be initialized
%0 returns a reference
class template declared here
use 'static_cast' to adjust the pointer correctly while %select{upcasting|downcasting}0
%select{overridden|current}0 method is explicitly declared 'instancetype'%select{| and is expected to return an instance of its class type}0
%select{overridden|current}0 method is part of the '%select{|alloc|copy|init|mutableCopy|new|autorelease|dealloc|finalize|release|retain|retainCount|self}1' method family%select{| and is expected to return an instance of its class type}0
%select{class|instance}0 method %1 is assumed to return an instance of its receiver type (%2)
overridden method returns an instance of its class type
remove the call to '%0' since unsigned values cannot be negative
remove call to max function and unsigned zero argument
remove std::move call here
remove parentheses to silence this warning
use function '%0' instead
replace 'default' with 'delete'
while rewriting comparison as call to 'operator<=>' declared here
repeated RISC-V 'interrupt' attribute is here
pass -fsafe-buffer-usage-suggestions to receive code hardening suggestions
%select{function|method|block}0 has been explicitly marked sentinel here
declared here
if you supply your own aligned allocation functions, use -faligned-allocation to silence this diagnostic
%select{and|because}0 %1 does not satisfy %2
attempt to specialize declaration here
explicitly specialized declaration is here
declare 'static' if the %select{variable|function}0 is not intended to be used outside of this translation unit
use array indexing to silence this warning
change size argument to be the size of the destination
change the argument to be the free space in the destination buffer minus the terminating null byte
did you mean %select{struct|interface|class}0 here?
because substituted constraint expression is ill-formed%0
add a deduction guide to suppress this warning
class with specified objc_requires_property_definitions attribute is declared here
surrounding namespace with visibility attribute ends here
surrounding namespace with visibility attribute starts here
parenthesize the second argument to silence
%select{parenthesize the third argument|cast the second argument to 'int'}0 to silence
conversion to %select{integral|enumeration}0 type %1
tail call required by %0 attribute here
non-type template argument refers to %select{function|object}0 here
non-type template argument refers here
template argument refers to function template %0, here
class template %0 was explicitly specialized here
in instantiation of template class %q0 requested here
class template %0 was instantiated here
template is declared here
%select{function template|class template|variable template|type alias template|template template parameter}0 %1 declared here
while checking a default template argument used here
in instantiation of enumeration %q0 requested here
in instantiation of exception specification for %0 requested here
declared as a non-template here
in instantiation of member class %q0 requested here
in instantiation of member function %q0 requested here
template non-type parameter has a different type %0 in template argument
previous non-type template parameter with type %0 is here
in instantiation of default member initializer %q0 requested here
template parameter has a different kind in template argument
template parameter is declared here
%select{too few|too many}0 template parameters in template template argument
previous default template argument defined here
previous default template argument defined in module %0
previous %select{template type|non-type template|template template}0 parameter%select{| pack}1 declared here
%select{template type|non-type template|template template}0 parameter%select{| pack}1 does not match %select{template type|non-type template|template template}0 parameter%select{ pack|}1 in template argument
previous template %select{declaration|template parameter}0 is here
use -ftemplate-depth=N to increase recursive template instantiation depth
in instantiation of requirement here
in instantiation of requirement parameters here
in instantiation of static data member %q0 requested here
in instantiation of template type alias %0 requested here
unnamed type used in template argument was declared here
in instantiation of variable template specialization %q0 requested here
thread warning in function %0
%select{destructor|deallocator}0 has a %select{non-throwing|implicit non-throwing}1 exception specification
function declared non-throwing here
required alignment of type %0 (%1 bytes) is larger than the supported alignment of C++ exception objects on this target (%2 bytes)
rewrite target here
%select{alignment|size}0 of first field is %1 bits
%0 is incomplete
%select{and|because}0 '%1' would be invalid: %2
%select{and|because}0 '%1' would be invalid
%select{function %1 which returns const-qualified type %2 declared here|variable %1 declared const here|%select{non-|}1static data member %2 declared const here|member function %q1 is declared const here|%select{|nested }1data member %2 declared const here}0
%select{first|second}0 operand was implicitly converted to type %1
did you mean to use '.' instead?
type is given name %0 for linkage purposes by this %select{typedef|alias}1 declaration
referenced member %0 is declared here
referenced %0 is declared here
enclose %0 in %select{an @available|a __builtin_available}1 check to silence this warning
remove the %select{'%1' if its condition|condition if it}0 is always %select{false|true}2
during field initialization in %select{this|the implicit default}0 constructor
uninitialized reference member is here
%select{uninitialized use occurs|variable is captured by block}0 here
%0 released here
%select{declaration|definition|default argument declared|explicit specialization declared|partial specialization declared}0 here is not %select{visible|reachable|reachable|reachable|reachable|reachable}0
silence by adding parentheses to mark code as explicitly dead
used%select{| in pointer arithmetic| in buffer access}0 here
change type of '%0' to '%select{std::span|std::array|std::span::iterator}1' to preserve bounds information
unguarded header; consider using #ifdef guards or #pragma once
use non-reference type %0
use reference type %0 to prevent copying
use 'thread_local' to allow this
use non-reference type %0 to make construction explicit or type %1 to prevent copying
used here
used in initialization here
implicit default constructor suppressed by user-declared constructor
%select{|previous }0using declaration
use %select{an alias declaration|a typedef declaration|a reference|a const variable|a constexpr variable}0 instead
conflicting declaration
target of using declaration
%select{|previous }0using-enum declaration
add 'typename' to treat this using declaration as a type
in value-initialization of type %0 here
variable %0 is declared here
variable %0 is%select{| explicitly}1 captured here
initialize the variable %0 to silence this warning
previous declaration of variable template partial specialization is here
%select{%1 is a virtual base class of base class %2 declared here|virtual base class %1 declared here}0
variable length arrays are not supported for the current target
which delegates to
detected while default synthesizing properties in class implementation
widen this field to %0 bits to store all values of %1
within field of type %0 declared here
replace expression with '%0' %select{|or use 'xor' instead of '^' }1to silence this warning
non-virtual member function marked '%0' hides virtual member %select{function|functions}1
only virtual member functions can be marked '%0'
absolute value function %0 given an argument of type %1 but has parameter of type %2 which may cause truncation of value
abstract class is marked '%select{final|sealed}0'
initializer for virtual base class %0 of abstract class %1 will never be used
access declarations are deprecated; use using declarations instead
type of property %0 does not match type of accessor %1
acquiring %0 '%1' requires negative capability '%2'
%0 '%1' must be acquired before '%2'
Cycle in acquired_before/after dependencies, starting with '%0'
operator '%0' has lower precedence than '%1'; '%1' will be evaluated first
reference cannot be bound to dereferenced null pointer in well-defined C++ code; pointer may be assumed to always convert to true
reference cannot be bound to dereferenced null pointer in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0
requested alignment is less than minimum alignment of %1 for type %0
%select{aligning a value|the result of checking whether a value is aligned}0 to 1 byte is %select{a no-op|always true}0
requested alignment is not a power of 2
use of function %0 is discouraged; there is no way to check for failure but failure may still occur, resulting in a possibly exploitable security vulnerability
second argument to __builtin_alloca_with_align is supposed to be in bits
this coroutine may be split into pieces; not every piece is guaranteed to be inlined
multiple suitable %0 functions for %1; no 'operator delete' function will be invoked if initialization throws an exception
interrupt service routine should only call a function with attribute 'no_caller_saved_registers'
ARC %select{unused|__unsafe_unretained|__strong|__weak|__autoreleasing}0 lifetime qualifier on return type is ignored
assigning %select{array literal|dictionary literal|numeric literal|boxed expression|<should not happen>|block literal}0 to a weak %select{property|variable}1; object will be released after assignment
%select{destination for|source of}0 this %1 call is a pointer to ownership-qualified type %2
performSelector may cause a leak because its selector is unknown
weak %select{variable|property|implicit property|instance variable}0 %1 may be accessed multiple times in this %select{function|method|block|lambda}2 and may be unpredictably set to nil; assign to a strong variable to keep the object alive
weak %select{variable|property|implicit property|instance variable}0 %1 is accessed multiple times in this %select{function|method|block|lambda}2 but may be unpredictably set to nil; assign to a strong variable to keep the object alive
capturing %0 strongly in this block is likely to lead to a retain cycle
assigning retained object to %select{weak|unsafe_unretained}0 %select{property|variable}1; object will be released after assignment
assigning retained object to unsafe property; object will be released after assignment
method parameter of type %0 with no explicit ownership
argument value %0 is outside the valid range [%1, %2]
argument value %0 will result in undefined behaviour
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 %select{floating-point|enumeration}1 type %2 %plural{2:with|4:from|:and}0 %select{enumeration|floating-point}1 type %3
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 %select{floating-point|enumeration}1 type %2 %plural{2:with|4:from|:and}0 %select{enumeration|floating-point}1 type %3 is deprecated
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated
call to function without interrupt attribute could clobber interruptee's VFP registers
array index %0 is past the end of the array (which contains %1 element%s2)
array index %0 refers past the last possible element for an array in %1-bit address space containing %2-bit (%3-byte) elements (max possible %4 element%s5)
array index %0 is before the beginning of the array
ignored asm label '%0' on automatic variable
value size does not match register size specified by the constraint and modifier
requested alignment must be %0 bytes or smaller; maximum alignment assumed
unknown assumption string '%0'; attribute is potentially ignored
unknown assumption string '%0' may be misspelled; attribute is potentially ignored, did you mean '%1'?
the argument to %0 has side effects that will be discarded
%select{@available|__builtin_available}0 does not guard availability here; use if (%select{@available|__builtin_available}0) instead
specifying 'uuid' as an ATL attribute is deprecated; use __declspec instead
implicit use of sequentially-consistent atomic may incur stronger memory barriers than necessary
accessing a member of an atomic structure or union is undefined behavior
memory order argument to atomic operation is invalid
writable atomic property %0 cannot pair a synthesized %select{getter|setter}1 with a user defined %select{getter|setter}2
@protocol is using a forward protocol declaration of %0
'abi_tag' attribute on %select{non-inline|anonymous}0 namespace ignored
consumed analysis attribute is attached to member of class %0 which isn't marked as consumable
%0 attribute cannot be applied to this declaration
%0 attribute cannot be applied to a %select{function|method}1 with no parameters
%0 attribute argument must be a string literal specifying a Swift function name
%0 attribute for getter must not have any parameters besides 'self:'
%0 attribute has invalid identifier for the %select{base|context|parameter}1 name
%0 attribute is missing parameter label clause
%0 attribute cannot specify more than one 'self:' parameter
too %select{few|many}0 parameters in the signature specified by the %1 attribute (expected %2; got %3)
%0 attribute for setter must have one parameter for new value
%0 attribute for 'subscript' getter cannot have a 'newValue:' parameter
%0 attribute for 'subscript' must %select{be a getter or setter|have at least one parameter|have a 'self:' parameter}1
%0 attribute for 'subscript' setter cannot have multiple 'newValue:' parameters
%0 attribute for 'subscript' setter must have a 'newValue:' parameter
multiple identical address spaces specified for type
attribute %0 after definition is ignored
%0 attribute parameter %1 is negative and will be ignored
builtin call has undefined behaviour when called from a %0 function
'cmse_nonsecure_entry' cannot be applied to functions with internal linkage
propagating dll attribute to %select{already instantiated|explicitly specialized}0 base class template without dll attribute is not supported
redeclaration of %q0 should not add %q1 attribute
explicit instantiation declaration should not be 'dllexport'
'dllexport' attribute ignored on explicit instantiation definition
definition of dllimport static field
attribute %0 has no effect when annotating an 'if %select{constexpr|consteval}1' statement
attribute %0 has no effect when annotating an infinite loop
%0 attribute can only be applied to instance variables or properties
%0 attribute ignored for field of type %1
%0 attribute is ignored because there exists no call expression inside the statement
%0 attribute ignored on inline function
%0 attribute ignored on a non-definition declaration
'%0' attribute cannot be specified on a definition
'%0' is not a valid builtin name for %1
'noescape' attribute ignored on parameter of non-pointer type %0
'nonnull' attribute applied to function with no pointer arguments
'nonnull' attribute when used on parameters takes no arguments
%0 attribute ignored when parsing type
'packed' attribute was ignored on bit-fields with single-byte alignment in older versions of GCC and Clang
%0 attribute only applies to a pointer or reference (%1 is invalid)
%0 attribute only applies to%select{| constant}1 pointer arguments
attribute declaration must precede definition
target does not support 'protected' visibility; using 'default'
%0 attribute only applies to return values that are pointers
%0 attribute only applies to return values that are pointers or references
#pragma %0(".drectve") has undefined behavior, use #pragma comment(linker, ...) instead
section attribute is specified on redeclared variable
'sentinel' attribute requires named arguments
'sentinel' attribute only supported for variadic %select{functions|blocks}0
%0 attribute argument not supported: %1
%0 attribute argument '%1' not supported on a global variable
unknown visibility %0
attribute %0 cannot be applied to %select{functions|Objective-C method}1 without return value
__weak attribute cannot be specified on a field declaration
__weak attribute cannot be specified on an automatic variable when ARC is not enabled
%0 attribute only applies to %select{functions|unions|variables and functions|functions and methods|functions, methods and blocks|functions, methods, and parameters|variables|variables and fields|variables, data members and tag types|types and namespaces|variables, functions and classes|kernel functions|non-K&R-style functions}1
%0 attribute only applies to %1
conflicting attributes %0 are ignored
property is assumed atomic when auto-synthesizing the property
readonly IBOutlet property %0 when auto-synthesized may not work correctly with 'nib' loader
'auto' storage class specifier is redundant and incompatible with C++11
auto property synthesis will not synthesize property %0 declared in protocol %1
'auto' deduced as 'id' in declaration of %0
auto property synthesis will not synthesize property %0; it will be implemented by its superclass, use @dynamic to acknowledge intention
autosynthesized property %0 will use %select{|synthesized}1 instance variable %2, not existing instance variable %3
Fuchsia API Level prohibits specifying a minor or sub-minor version
ignoring availability attribute %select{on '+load' method|with constructor attribute|with destructor attribute}0
only 'unavailable' and 'deprecated' are supported for Swift availability
unknown platform %0 in availability macro
feature cannot be %select{introduced|deprecated|obsoleted}0 in %1 version %2 before it was %select{introduced|deprecated|obsoleted}3 in version %4; attribute ignored
%select{reinterpret_cast|C-style cast}0 from %1 to %2 changes address space of nested pointers
cast from function call of type %0 to non-matching type %1
receiver type %0 is not 'id' or interface pointer, consider casting it to 'id'
base class %0 is uninitialized when used here to access %q1
binding reference member %0 to stack allocated %select{variable|parameter}2 %1
binding dereferenced null pointer to reference has undefined behavior
bit-field %0 is not wide enough to store all enumerators of %1
width of bit-field %0 (%1 bits) exceeds the width of its type; value will be truncated to %2 bit%s2
use of bitwise '%0' with boolean operands
bitwise negation of a boolean expression%select{;| always evaluates to 'true';}0 did you mean logical negation?
'%0' within '%1'
block captures an autoreleasing out-parameter, which may result in use-after-free bugs
attribute %0 ignored, because it cannot be applied to omitted return type
'%0' qualifier on omitted return type %1 has no effect
switch condition has boolean value
braces around %select{scalar |}0initializer
'break' is bound to loop, GCC binds it to switch
'%0' will always overflow; destination buffer has size %1, but size argument is %2
use of unknown builtin %0
call to pure virtual member function %0 has undefined behavior; overrides of %0 in subclasses are not available in the %select{constructor|destructor}1 of %2
too %select{few|many}0 arguments in call to %1
%0 parameter marked 'called_once' is called twice
%select{|captured }1%0 parameter marked 'called_once' is never called
%0 parameter marked 'called_once' is never %select{used|called}1 when %select{taking true branch|taking false branch|handling this case|none of the cases applies|entering the loop|skipping the loop|taking one of the branches}2
cannot pass object of %select{non-POD|non-trivial}0 type %1 through variadic %select{function|block|method|constructor}2; call will abort at runtime
cannot resolve lock expression
empty case range specified
overflow converting case value to switch condition type (%0 to %1)
cast from %0 to %1 increases required alignment from %2 to %3
cast between incompatible calling conventions '%0' and '%1'; calls through this pointer may abort at runtime
cast %diff{from $ to $ |}0,1converts to incompatible function type
nonnull %select{function call|parameter}0 '%1' will evaluate to 'true' on first encounter
cast of type %0 to %1 is deprecated; use sel_getName instead
cast from %0 to %1 drops %select{const and volatile qualifiers|const qualifier|volatile qualifier}2
cast from %0 to %1 must have all intermediate pointers const qualified to be safe
category is implementing a method which will also be implemented by its primary class
function with no prototype cannot use the %0 calling convention
%0 calling convention is not supported %select{for this target|on variadic function|on constructor/destructor|on builtin function}1
cannot refer to a non-static member from the handler of a %select{constructor|destructor}0 function try block
input conversion stopped due to an input byte that does not belong to the input codeset UTF-8
%select{class|category}0 %1 does not conform to protocol%plural{1: %3|2:s %3 and %4|3:s %3, %4 and %5|:s %3, %4, %5, ...}2
class method %objcclass0 not found (return type defaults to 'id')
class method %objcclass0 not found (return type defaults to 'id'); did you mean %objcclass2?
GCC does not allow the 'cleanup' attribute argument to be anything other than a simple identifier
passing union across security boundary via %select{parameter %1|return value}0 may leak information
property follows Cocoa naming convention for returning 'owned' objects
collection expression type %0 may not respond to %1
possible misuse of comma operator here
%select{self-|array }0comparison always evaluates to %select{a constant|true|false|'std::strong_ordering::equal'}1
bitwise comparison always evaluates to %select{false|true}0
bitwise or with non-zero value always evaluates to true
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated
comparison of different enumeration types in switch statement%diff{ ($ and $)|}0,1
completion handler is called twice
%select{|captured }1completion handler is never called
completion handler is never %select{used|called}1 when %select{taking true branch|taking false branch|handling this case|none of the cases applies|entering the loop|skipping the loop|taking one of the branches}2
suspicious concatenation of string literals in an array initialization; did you mean to separate the elements with a comma?
concatenated NSString literal for an NSArray expression - possibly missing a comma
using the result of an assignment as a condition without parentheses
using the result of an assignment as a condition without parentheses
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated
conflicting distributed object modifiers on parameter type in declaration of %0
conflicting parameter types in declaration of %0%diff{: $ vs $|}1,2
conflicting distributed object modifiers on return type in declaration of %0
conflicting return type in declaration of %0%diff{: $ vs $|}1,2
conflicting variadic declaration of method and its implementation
conflicting distributed object modifiers on parameter type in implementation of %0
conflicting parameter types in implementation of %0%diff{: $ vs $|}1,2
conflicting distributed object modifiers on return type in implementation of %0
conflicting return type in implementation of %0%diff{: $ vs $|}1,2
conflicting variadic declaration of method and its implementation
consteval if is always true in an %select{unevaluated|immediate}0 context
conversion function converting %0 to its base class %1 will never be used
conversion function converting %0 to itself will never be used
conversion function converting %0 to %1 will never be used
return type of 'coroutine_handle<>::address should be 'void*' (have %0) in order to get capability with existing async C API.
%0 is required to declare the member 'unhandled_exception()' when exceptions are enabled
%select{destination for|source of|first operand of|second operand of}0 this %1 call is a pointer to record %2 that is not trivial to %select{primitive-default-initialize|primitive-copy}3
%0 may not intend to support class template argument deduction
constructor parameter %0 shadows the field %1 of %2
use of this statement in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
multiple return statements in constexpr function is incompatible with C++ standards before C++14
constexpr function with no return statements is incompatible with C++ standards before C++14
variable declaration in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
type definition in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
return type deduction is incompatible with C++ standards before C++14
generic lambdas are incompatible with C++11
initialized lambda captures are incompatible with C++ standards before C++14
variable templates are incompatible with C++ standards before C++14
attribute %0 ignored, because it cannot be applied to a type
class template argument deduction is incompatible with C++ standards before C++17%select{|; for compatibility, use explicit type name %1}0
'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior
decomposition declarations are incompatible with C++ standards before C++17
inline variables are incompatible with C++ standards before C++17
by value capture of '*this' is incompatible with C++ standards before C++17
non-type template parameters declared with %0 are incompatible with C++ standards before C++17
use of function template name with no prior function template declaration in function call with explicit template arguments is incompatible with C++ standards before C++20
captured structured bindings are incompatible with C++ standards before C++20
use of this statement in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++20
constexpr constructor that does not initialize all members is incompatible with C++ standards before C++20
function try block in constexpr %select{function|constructor}0 is incompatible with C++ standards before C++20
uninitialized variable in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++20
constexpr union constructor that does not initialize any member is incompatible with C++ standards before C++20
virtual constexpr functions are incompatible with C++ standards before C++20
decomposition declaration declared %plural{1:'%1'|:with '%1' specifiers}0 is incompatible with C++ standards before C++20
defaulted comparison operators are incompatible with C++ standards before C++20
explicitly defaulting this %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 with a type different from the implicit type is incompatible with C++ standards before C++20
designated initializers are incompatible with C++ standards before C++20
explicit capture of 'this' with a capture default of '=' is incompatible with C++ standards before C++20
mangled name of %0 will change in C++17 due to non-throwing exception specification in function signature
use of implicit 'typename' is incompatible with C++ standards before C++20
initialized lambda capture packs are incompatible with C++ standards before C++20
%select{default construction|assignment}0 of lambda is incompatible with C++ standards before C++20
invoking a pointer to a 'const &' member function on an rvalue is incompatible with C++ standards before C++20
non-type template parameter of type %0 is incompatible with C++ standards before C++20
'char8_t' type specifier is incompatible with C++ standards before C++20
member using declaration naming a non-member enumerator is incompatible with C++ standards before C++20
member using declaration naming non-class '%0' enumerator is incompatible with C++ standards before C++20
using declaration naming a scoped enumerator is incompatible with C++ standards before C++20
aggregate initialization of type %0 with user-declared constructors is incompatible with C++20
'auto' as a functional-style cast is incompatible with C++ standards before C++2b
use of this statement in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++2b
definition of a %select{static variable|thread_local variable|variable of non-literal type}1 in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++2b
'constinit' specifier is incompatible with C++ standards before C++20
taking address of non-addressable standard library function is incompatible with C++20
type of UTF-8 string literal will change from array of const char to array of const char8_t in C++20
implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is incompatible with C++98
'auto' type specifier is incompatible with C++98
cast between pointer-to-function and pointer-to-object is incompatible with C++98
'constexpr' specifier is incompatible with C++98
constructor call from initializer list is incompatible with C++98
delegating constructors are incompatible with C++98
scalar initialized from empty initializer list is incompatible with C++98
initializing %0 from an empty initializer list is incompatible with C++98
befriending enumeration type %0 is incompatible with C++98
enumeration type in nested name specifier is incompatible with C++98
explicit conversion functions are incompatible with C++98
friend declaration naming a member of the declaring class is incompatible with C++98
jump from this goto statement to its label is incompatible with C++98
jump from this %select{indirect|asm}0 goto statement to one of its possible targets is incompatible with C++98
initialization of initializer_list object is incompatible with C++98
use of non-static data member %0 in an unevaluated context is incompatible with C++98
non-class friend type %0 is incompatible with C++98
%select{anonymous struct|union}0 member %1 with a non-trivial %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2 is incompatible with C++98
passing object of trivial but non-POD type %0 through variadic %select{function|block|method|constructor}1 is incompatible with C++98
reference initialized from initializer list is incompatible with C++98
substitution failure due to access control is incompatible with C++98
static data member %0 in union is incompatible with C++98
jump from switch statement to this case label is incompatible with C++98
%select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}1 of type %2 when binding a reference to a temporary would %select{invoke an inaccessible constructor|find no viable constructor|find ambiguous constructors|invoke a deleted constructor}0 in C++98
redundant parentheses surrounding address non-type template argument are incompatible with C++98
local type %0 as template argument is incompatible with C++98
use of null pointer as non-type template argument is incompatible with C++98
non-type template argument referring to %select{function|object}0 %1 with internal linkage is incompatible with C++98
unnamed type as template argument is incompatible with C++98
use of 'template' keyword outside of a template is incompatible with C++98
default template arguments for a function template are incompatible with C++98
use of 'typename' outside of a template is incompatible with C++98
befriending %1 without '%select{struct|interface|union|class|enum}0' keyword is incompatible with C++98
'%0' type specifier is incompatible with C++98
inheriting constructors are incompatible with C++98
ms_struct may not produce Microsoft-compatible layouts for classes with base classes or virtual functions
object backing the pointer will be destroyed at the end of the full-expression
initializing pointer member %0 to point to a temporary object whose lifetime is shorter than the lifetime of the constructed object
%select{reference|backing array for 'std::initializer_list'}2 %select{|subobject of }1member %0 %select{binds to|is}2 a temporary object whose lifetime is shorter than the lifetime of the constructed object
%select{temporary %select{whose address is used as value of|%select{|implicitly }2bound to}4 %select{%select{|reference }4member of local variable|local %select{variable|reference}4}1|array backing %select{initializer list subobject of local variable|local initializer list}1}0 %select{%3 |}2will be destroyed at the end of the full-expression
-dealloc is being overridden in a category
declaration of %0 will not be visible outside of this function
declaration shadows a %select{local variable|variable in %2|static data member of %2|field of %2|typedef in %2|type alias in %2|structured binding}1
declaration shadows a %select{local variable|variable in %2|static data member of %2|field of %2|typedef in %2|type alias in %2|structured binding}1
ignoring __declspec(allocator) because the function return type %0 is not a pointer or reference type
attribute %0 is ignored, place it after "%select{class|struct|interface|union|enum}1" to apply attribute to type declaration
exception specifications of %select{return|argument}0 types differ
%plural{1:enumeration value %1 not explicitly handled in switch|2:enumeration values %1 and %2 not explicitly handled in switch|3:enumeration values %1, %2, and %3 not explicitly handled in switch|:%0 enumeration values not explicitly handled in switch: %1, %2, %3...}0
atomic by default property %0 has a user defined %select{getter|setter}1 (property should be marked 'atomic' if this is intended)
explicitly defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator is implicitly deleted
explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 is implicitly deleted
constructor for %0 creates a delegation cycle
%select{delete|destructor}0 called on %1 that is abstract but has non-virtual destructor
'delete' applied to a pointer-to-array type %0 treated as 'delete[]'
deleting pointer to incomplete type %0 may cause undefined behavior
%select{delete|destructor}0 called on non-final %1 that has virtual functions but non-virtual destructor
comparison between two arrays is deprecated; to compare array addresses, use unary '+' to decay operands to pointers
%0 is deprecated
Current handling of vector bool and vector pixel types in this context are deprecated. The default behaviour will soon change to that implied by the '-altivec-compat=xl' option
'deprecated' attribute on anonymous namespace ignored
builtin %0 is deprecated; use %1 instead
top-level comma expression in array subscript is deprecated in C++20 and unsupported in C++2b
compound assignment to object of volatile-qualified type %0 is deprecated
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-declared copy %select{assignment operator|constructor}1
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-declared destructor
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-provided copy %select{assignment operator|constructor}1
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-provided destructor
support for std::experimental::%0 will be removed in LLVM 15; use std::%0 instead
implementing deprecated %select{method|class|category}0
%0 may be deprecated because the receiver type is unknown
%0 currently has no effect on a using declaration
%select{decrement|increment}0 of object of volatile-qualified type %1 is deprecated
Implicit conversion between vector types ('%0' and '%1') is deprecated. In the future, the behavior implied by '-fno-lax-vector-conversions' will be the default.
%0 is deprecated: %1
the '[[_Noreturn]]' attribute spelling is deprecated in C2x; use '[[noreturn]]' instead
out-of-line definition of constexpr static data member is redundant in C++17 and is deprecated
'register' storage class specifier is deprecated and incompatible with C++17
use of result of assignment to object of volatile-qualified type %0 is deprecated
conversion from string literal to %0 is deprecated
implicit capture of 'this' with a capture default of '=' is deprecated
volatile-qualified parameter type %0 is deprecated
volatile-qualified return type %0 is deprecated
volatile qualifier in structured binding declaration is deprecated
dereferencing %0; was declared with a 'noderef' type
dereferencing expression marked as 'noderef'
explicit call to +initialize results in duplicate call to +initialize
instance variable %0 is being directly accessed
explicit call to [super initialize] should only be in implementation of +initialize
body of cpu_dispatch function will be ignored
expression does not compute the number of elements in this array; element type is %0, not %1
'%0' will return the size of the pointer, not the array itself
%q0 redeclared inline; %1 attribute ignored
double precision constant requires %select{cl_khr_fp64|cl_khr_fp64 and __opencl_c_fp64}0, casting to single precision
acquiring %0 '%1' that is already held
attribute %0 is already applied with different arguments
attribute %0 is already applied
duplicate code segment specifiers
element %0 has been implicitly assigned %1 which another element has been assigned
multiple declarations of method %0 found and ignored
duplicate protocol definition of %0 is ignored
%select{destination for|source of|first operand of|second operand of}0 this %1 call is a pointer to %select{|class containing a }2dynamic class %3; vtable pointer will be %select{overwritten|copied|moved|compared}4
for loop has empty body
format string is empty
if statement has empty body
empty parentheses interpreted as a function declaration
range-based for loop has empty body
switch statement has empty body
while loop has empty body
converting the enum constant to a boolean
overflow in enumeration value
equality comparison with extraneous parentheses
exception of type %0 will be caught by earlier handler
declaration requires an exit-time destructor
expecting %0 '%1' to be held at start of each loop
expecting %0 '%1' to be held at the end of function
explicit instantiation of %0 that occurs after an explicit specialization has no effect
explicit instantiation cannot be 'inline'
explicit instantiation of %0 must occur at global scope
explicit instantiation of %0 not in a namespace enclosing %1
explicit instantiation of %q0 must occur in namespace %1
'extern' variable has an initializer
non-void coroutine does not return a value
non-void function does not return a value
non-void lambda does not return a value
function declared 'noreturn' should not return
field %0 is uninitialized when used here
class with destructor marked '%select{final|sealed}0' cannot be inherited from
array with '%select{__counted_by|__sized_by}0' and the argument of the attribute should be defined in the same translation unit
%select{%diff{assigning to%select{ __indexable| __bidi_indexable|}3 type $ from%select{ __single|}4 type $|assigning%select{ __indexable| __bidi_indexable|}3 type from%select{ __single|}4 type}0,1|%diff{passing%select{ __single|}4 type $ to parameter of%select{ __indexable| __bidi_indexable|}3 type $|passing%select{ __single|}4 type to parameter of%select{ __indexable| __bidi_indexable|}3 type}0,1|%diff{returning%select{ __single|}4 type $ from a function with%select{ __indexable| __bidi_indexable|}3 result type $|returning%select{ __single|}4 type from a function with%select{ __indexable| __bidi_indexable|}3 result type}0,1|%diff{converting%select{ __single|}4 type $ to%select{ __indexable| __bidi_indexable|}3 type $|converting%select{ __single|}4 type to%select{ __indexable| __bidi_indexable|}3 type}0,1|%diff{initializing%select{ __indexable| __bidi_indexable|}3 type $ with an expression of%select{ __single|}4 type $|initializing%select{ __indexable| __bidi_indexable|}3 type with an expression of%select{ __single|}4 type}0,1|%diff{sending%select{ __single|}4 type $ to parameter of%select{ __indexable| __bidi_indexable|}3 type $|sending%select{ __single|}4 type to parameter of%select{ __indexable| __bidi_indexable|}3 type}0,1|%diff{casting%select{ __single|}4 type $ to%select{ __indexable| __bidi_indexable|}3 type $|casting%select{ __single|}4 type to%select{ __indexable| __bidi_indexable|}3 type}0,1|}2 results in %select{an __indexable|a __bidi_indexable}5 pointer that will trap if a non-zero offset is dereferenced%select{|. consider adding '__counted_by' to '%7'}6
%select{|implicit }0zero-initialization of %select{'__counted_by'|'__sized_by'}1 pointer%select{| field}3 %2 with non-zero %select{count|size}1 never succeeds
%select{|implicitly }0initializing field %1 of type %2 to NULL while '%3' is initialized with a value rarely succeeds
accessing elements of an unannotated incomplete array always fails at runtime
casting %0 to %1 creates a '%select{__indexable|__bidi_indexable}2' pointer %select{with bounds containing only one %3|with zero length due to %3 having unknown size)}4
initializer %0 has a side effect; this may lead to an unexpected result because the evaluation order of initialization list expressions is indeterminate
conversion from pointer type %0 to a %select{counted|sized}1 pointer type with an unrelated length rarely succeeds
enumeration value %0 is out of range of flags in enumeration type %1
floating-point comparison is always %select{true|false}0; constant cannot be represented exactly in type %1
magnitude of floating-point constant too large for type %0; maximum is %1
magnitude of floating-point constant too small for type %0; minimum is %1
comparing floating point with == or != is unsafe
'begin' and 'end' returning different types (%0 and %1) is incompatible with C++ standards before C++17
loop variable %0 %diff{of type $ binds to a temporary constructed from type $|binds to a temporary constructed from a different type}1,2
loop variable %0 creates a copy from type %1
loop variable %0 binds to a temporary value produced by a range of type %1
using '%%P' format specifier without precision
%select{values of type|enum values with underlying type}2 '%0' should not be used as format arguments; add an explicit cast to %1 instead
%select{values of type|enum values with underlying type}2 '%0' should not be used as format arguments; add an explicit cast to %1 instead
using '%0' format specifier, but argument has boolean value
format specifies type %0 but the argument has %select{type|underlying type}2 %1
format specifies type %0 but the argument has %select{type|underlying type}2 %1
format specifies type %0 but the argument has %select{type|underlying type}2 %1
using '%0' format specifier annotation outside of os_log()/os_trace()
invalid conversion specifier '%0'
invalid position specified for %select{field width|field precision}0
cannot mix positional and non-positional arguments in format string
'%0' %select{length modifier|conversion specifier}1 is not supported by ISO C
using length modifier '%0' with conversion specifier '%1' is not supported by ISO C
positional arguments are not supported by ISO C
format string is not a string literal
format string is not a string literal (potentially insecure)
length modifier '%0' results in undefined behavior or no effect with '%1' conversion specifier
format string should not be a wide string
position arguments in format strings start counting at 1 (not 0)
'%0' may overflow; destination buffer in argument %1 has size %2, but the corresponding specifier may require size %3
'%0' will always overflow; destination buffer has size %1, but format string expands to at least %2
'%0' will always overflow; destination buffer has size %1, but size argument is %2
'%0' size argument is too large; destination buffer has size %1, but size argument is %2
'%0' will always overflow; destination buffer has size %1, but the source string has length %2 (including NUL byte)
redefinition of forward class %0 of a typedef name of an object type is ignored
calling '%0' with a nonzero argument is unsafe
attempt to call %0 on non-heap %select{object %2|object: block expression|object: lambda-to-function-pointer conversion}1
cannot call function '%1' while %0 '%2' is held
calling function %1 requires holding %0 %select{'%2'|'%2' exclusively}3
calling function %1 requires holding %0 %select{'%2'|'%2' exclusively}3
calling function %0 requires negative capability '%1'
instantiation of function %q0 required here, but no definition is available
attribute is ignored on this statement as it only applies to functions; use '%0' on statements
function definition inside an Objective-C container is deprecated
statement attribute %0 has higher precedence than function attribute '%select{always_inline|flatten|noinline}1'
Objective-C GC does not allow weak variables on the stack
GCC does not allow the %0 attribute to be written on a type
GCC requires a function with the %0 attribute to be variadic
declaration requires a global constructor
declaration requires a global destructor
'gnu_inline' attribute requires function to be marked 'inline', attribute ignored
'gnu_inline' attribute without 'extern' in C++ treated as externally available, this changed in Clang 10
arithmetic on a null pointer treated as a cast from integer to pointer is a GNU extension
passing variable %1 by reference requires holding %0 %select{'%2'|'%2' exclusively}3
%select{instance variable|property}2 with %0 attribute must be an object type (invalid %1)
IBOutletCollection properties should be copy/strong and not assign
assigning %select{field|instance variable}0 to itself
inheritance model ignored on %select{primary template|partial specialization}0
'objc_externally_retained' can only be applied to local variables %select{of retainable type|with strong ownership}0
implicit cast from type %0 to type %1 drops __unaligned qualifier
implicit truncation from %2 to bit-field changes value from %0 to %1
initialization of pointer of type %0 to null from a constant boolean expression
implicit conversion discards imaginary component: %0 to %1
implicit conversion from constant value %0 to 'BOOL'; the only well defined values for 'BOOL' are YES and NO
implicit conversion from enumeration type %0 to different enumeration type %1
implicit conversion increases floating-point precision: %0 to %1
implicit conversion from %0 cannot fit within the range of values for %1
implicit conversion turns floating-point number into integer: %0 to %1
implicit conversion loses floating-point precision: %0 to %1
implicit conversion when assigning computation result loses floating-point precision: %0 to %1
implicit conversion from %0 to %1 changes value from %2 to %3
implicit conversion of out of range value from %0 to %1 is undefined
implicit conversion from %0 to %1 changes non-zero value from %2 to %3
implicit conversion from floating-point type %0 to 'BOOL'
implicit conversion turns floating-point number into bool: %0 to %1
higher order bits are zeroes after implicit conversion
implicit conversion from integral type %0 to 'BOOL'
implicit conversion loses integer precision: %0 to %1
implicit conversion from %0 to %1 may lose precision
implicit conversion from %2 to %3 changes value from %0 to %1
implicit conversion loses integer precision: %0 to %1
implicit conversion from %2 to %3 changes value from %0 to %1
implicit conversion changes signedness: %0 to %1
operand of ? changes signedness: %0 to %1
implicit conversion from %0 to %1 changes value from %2 to %3
implicit conversion of out of range value from %0 to %1 is undefined
the resulting value is always non-negative after implicit conversion
implicit conversion of %select{NULL|nullptr}0 constant to %1
implicit boolean conversion of Objective-C object literal always evaluates to true
address of%select{| function| array}0 '%1' will always evaluate to 'true'
implicit truncation from %2 to a one-bit wide bit-field changes value from %0 to %1
implicit conversion turns string literal into bool: %0 to %1
implicit conversion turns vector to scalar: %0 to %1
class property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this class implementation
class property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category
default assign attribute on property %0 which implements NSCopying protocol is not appropriate with -fobjc-gc[-only]
property is assumed atomic by default
declaration of built-in function '%0' requires the declaration of the 'jmp_buf' type, commonly provided in the header <setjmp.h>.
declaration of built-in function '%1' requires inclusion of the header <%0>
implicit declaration of function %0
block implicitly retains 'self'; explicitly mention 'self' to indicate this is intended behavior
import %select{module|name}0 cannot be applied to a function with a definition
direct base %0 is inaccessible due to ambiguity:%1
target exception specification is not superset of source
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2
incompatible vector types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
encoding of %0 type is incomplete because %1 component has unknown encoding
argument %0 of type %1 with mismatched bound
%0 overrides a destructor but is not marked 'override'
%0 overrides a member function but is not marked 'override'
incrementing expression of type bool is deprecated and incompatible with C++17
'objc_independent_class' attribute may be put on a typedef only; attribute is ignored
indirection of non-volatile null pointer will be deleted, not trap
all paths through this function will call itself
constant expression evaluates to %0 which cannot be narrowed to type %1 in C++11
type %0 cannot be narrowed to %1 in initializer list in C++11
non-constant-expression cannot be narrowed from type %0 to %1 in initializer list in C++11
initializing pointer member %0 with the stack address of %select{variable|parameter}2 %1
%select{field|base class}0 %1 will be initialized after %select{field|base}2 %3
initializer %select{partially |}0overrides prior initialization of this subobject
inline namespace reopened as a non-inline namespace
instance method %objcinstance0 not found (return type defaults to 'id')
instance method %objcinstance0 not found (return type defaults to 'id'); did you mean %objcinstance2?
instance method %0 found instead of class method %1
cast to %1 from smaller integer type %0
cast to %1 from smaller integer type %0
converting the result of '?:' with integer constants to a boolean always evaluates to 'true'
'internal_linkage' attribute on a non-static local variable is ignored
%select{MIPS|MSP430|RISC-V}0 'interrupt' attribute only applies to functions that have %select{no parameters|a 'void' return type}1
invalid use of a cast in an inline asm context requiring an lvalue: accepted due to -fheinous-gnu-extensions, but clang may remove support for this in the future
invalid constructor from class in system header, should not be explicit
local declaration of %0 hides instance variable
declaration of instance variables in the interface is deprecated
jump out of __finally block has undefined behavior
ignored 'inline' attribute on kernel function %0
kernel function %0 is a member function; this may not be accepted by nvcc
converting the result of '<<' to a boolean always evaluates to %select{false|true}0
converting the result of '<<' to a boolean; did you mean '(%0) != 0'?
first argument to __builtin_load_member_function_pointer must have a type deriving from class where second argument was defined
second argument to __builtin_load_member_function_pointer must be the address of a C++ member function: for example '&Foo::func', not null
%0 '%1' is acquired exclusively and shared in the same scope
%0 '%1' is not held on every path through here
'&&' within '||'
use of logical '%0' with constant operand
logical not is only applied to the left hand side of this %select{comparison|bitwise operator}0
'%0' is bound to current loop, GCC binds it to the enclosing loop
state of variable '%0' must match at the entry and exit of loop
only one parameter on 'main' declaration
variable named 'main' with external linkage has undefined behavior
bool literal returned from 'main'
taking the max of %select{a value and unsigned zero|unsigned zero and a value}0 is always equal to the other value
capture host side class data member by this pointer in device or host device lambda function may result in invalid memory access if this pointer is not accessible on device side
non-void coroutine does not return a value in all control paths
non-void function does not return a value in all control paths
non-void lambda does not return a value in all control paths
variable %0 may be uninitialized when %select{used here|captured by block}1
%0 may not respond to %1
extra qualification on member %0
size argument in %0 call is a comparison
messaging unqualified id
'mig_server_routine' attribute only applies to routines that return a kern_return_t
availability does not match previous declaration
%select{|overriding }4method %select{introduced after|deprecated before|obsoleted before}0 %select{the protocol method it implements|overridden method}4 on %1 (%2 vs. %3)
%select{|overriding }1method cannot be unavailable on %0 when %select{the protocol method it implements|its overridden method}1 is available
'delete%select{|[]}0' applied to a pointer that was allocated with 'new%select{[]|}0'; did you mean 'delete%select{[]|}0'?
import %select{module|name}0 (%1) does not match the import %select{module|name}0 (%2) of the previous declaration
nullability specifier %0 conflicts with existing specifier %1
%select{codeseg|section}0 does not match previous declaration
use of OSPtr outside of a return type
suggest braces around initialization of subobject
%plural{1:enumeration value %1 not handled in switch|2:enumeration values %1 and %2 not handled in switch|3:enumeration values %1, %2, and %3 not handled in switch|:%0 enumeration values not handled in switch: %1, %2, %3...}0
no case matching constant switch condition '%0'
auto property synthesis is synthesizing property not explicitly synthesized
missing field %0 initializer
format string missing
method has no return type specified; defaults to 'id'
no previous prototype for function %0
%0 availability is ignored without a valid 'SDKSettings.json' in the SDK
missing sentinel in %select{function call|method dispatch|block call}0
no previous extern declaration for non-static variable %0
mixing declarations and code is incompatible with standards before C99
comparison of integers of different signs: %0 and %1
modifying constructor parameter %0 that shadows a field of %1
multiple methods named %0 found
several methods with selector %0 of mismatched types are found for the @selector expression
CPU list contains duplicate entries; attribute ignored
extra qualification on member %0
vector initializers are not compatible with NEON intrinsics in big endian mode
array backing %select{initializer list subobject of the allocated object|the allocated initializer list}0 will be destroyed at the end of the full-expression
temporary bound to reference member of allocated object will be destroyed at the end of the full-expression
auto property synthesis will not synthesize property %0 because it is 'readwrite' but it will be synthesized 'readonly' via another property
auto property synthesis will not synthesize property %0 because it cannot share an ivar with another synthesized property
%select{struct|interface|union|class|enum}0 %1 does not declare any constructor to initialize its non-modifiable members
dynamic_cast will not work since RTTI data is disabled by %select{-fno-rtti-data|/GR-}0
typeid will not work since RTTI data is disabled by %select{-fno-rtti-data|/GR-}0
enums in the Microsoft ABI are signed integers by default; consider giving the enum %0 an unsigned underlying type to make this code portable
%0 '%1' is still held at the end of function
'nocf_check' attribute ignored; use -fcf-protection to enable the attribute
'noderef' can only be used on an array or pointer type
casting to dereferenceable pointer removes 'noderef' attribute
under -fcoro-aligned-allocation, the non-aligned allocation function for the promise type %0 has higher precedence than the global aligned allocation function
conflicting parameter types in declaration of %0: %1 vs %2
conflicting parameter types in implementation of %0: %1 vs %2
conflicting return type in declaration of %0: %1 vs %2
conflicting return type in implementation of %0: %1 vs %2
expression which evaluates to zero treated as a null pointer constant of type %0
cannot pass %select{non-POD|non-trivial}0 object of type %1 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
a function %select{declaration|definition}0 without a prototype is deprecated in all versions of C %select{and is not supported in C2x|and is treated as a zero-parameter prototype in C2x, conflicting with a %select{previous|subsequent}2 %select{declaration|definition}3}1
%0 has virtual functions but non-virtual destructor
comparison of nonnull %select{function call|parameter}0 '%1' %select{not |}2equal to a null pointer is '%select{true|false}2' on first encounter
function %0 declared 'noreturn' should not return
not a Doxygen trailing comment
use of unary operator that may be intended as compound assignment (%0=)
not enough variable arguments in %0 declaration to fit a sentinel
case value not in enumerated type %0
integer constant not in range of enumerated type %0
alignment of 16 bytes for a struct member is not binary compatible with IBM XL C/C++ for AIX 16.1.0 or older
'nothrow' attribute conflicts with exception specification; attribute ignored
%0 attribute only applies to %select{Objective-C object|pointer|pointer-to-CF-pointer|pointer/reference-to-OSObject-pointer}1 parameters
%0 attribute only applies to %select{functions|methods|properties}1 that return %select{an Objective-C object|a pointer|a non-retainable pointer}2
overriding method has mismatched ns_consumed attribute on its parameter
duplicate key in dictionary literal
'NSObject' attribute may be put on a typedef only; attribute is ignored
overriding method has mismatched ns_returns_%select{not_retained|retained}0 attributes
null passed to a callee that requires a non-null argument
use of NULL in arithmetic operation
comparison between NULL and non-pointer %select{(%1 and NULL)|(NULL and %1)}0
comparison of %select{address of|function|array}0 '%1' %select{not |}2equal to a null pointer is always %select{true|false}2
synthesized setter %0 for null_resettable property %1 does not handle nil
null returned from %select{function|method}0 that requires a non-null return value
nullability specifier %0 cannot be applied to non-pointer type %1; did you mean to apply the specifier to the %select{pointer|block pointer|member pointer|function pointer|member function pointer}2?
inferring '_Nonnull' for pointer type within %select{array|reference}0 is deprecated
implicit conversion from nullable pointer %0 to non-nullable pointer type %1
%select{pointer|block pointer|member pointer}0 is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified)
array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified)
string is ill-formed as UTF-8 and will become a null %0 when boxed
using %0 directive in %select{NSString|CFString}1 which is being passed as a formatting argument to the formatting %select{method|CFfunction}2
adding %0 to %1 might cause circular dependency in container
object of type %0 is not compatible with %select{array element type|dictionary key type|dictionary value type}1 %2
designated initializer missing a 'super' call to a designated initializer of the super class
designated initializer invoked a non-designated initializer
designated initializer should only invoke a designated initializer on 'super'
%0 attribute isn't implemented by this Objective-C runtime
direct attribute on property %0 ignored (not implemented by this Objective-C runtime)
method override for the designated initializer of the superclass %objcinstance0 not found
%0 bridges to %1, not %2
%0 cannot bridge to %1
assignment to Objective-C's isa is deprecated in favor of object_setClass()
direct access to Objective-C's isa is deprecated in favor of object_getClass()
direct comparison of %select{an array literal|a dictionary literal|a numeric literal|a boxed expression|}0 has undefined behavior
'+load' is called at app startup and can increase launch time; consider using '+initialize' instead
method possibly missing a [super %0] call
cannot catch an exception thrown with @throw in C++ in the non-unified exception model
bitmasking for introspection of Objective-C object pointers is strongly discouraged
bitmasking for introspection of Objective-C object pointers is strongly discouraged
objc_precise_lifetime is not meaningful for %select{__unsafe_unretained|__autoreleasing}0 objects
'assign' property of object type may become a dangling reference; consider using 'unsafe_unretained'
'copy' attribute must be specified for the block property when -fobjc-gc-only is specified
default property attribute 'assign' not appropriate for object
no 'assign', 'retain', or 'copy' attribute is specified - 'assign' is assumed
retain'ed block property does not copy the block - use copy attribute instead
setter cannot be specified for a readonly property
using %0 with a literal is redundant
parameterized class %0 already conforms to the protocols listed; did you forget a '*'?
%0 attribute cannot be applied to %select{methods in protocols|dealloc}1
class %0 defined without specifying a base class
convenience initializer missing a 'self' call to another initializer
convenience initializer should not invoke an initializer on 'super'
direct comparison of a string literal has undefined behavior
'objc_direct' attribute is ignored as 'objc_suppress_direct' attribute is applied
'objc_suppress_direct' attribute is ignored
%0 is incompatible with selectors that return a %select{struct|union|vector}1 type
the meaning of __weak has changed in manual reference-counting
%0 was declared with __weak, but __weak is ignored in files using manual reference counting
ignoring __weak in file using manual reference counting
use of old-style cast
aligned clause will be ignored because the requested alignment is not a power of 2
allocator with the 'thread' trait access has unspecified behavior on '%0' directive
declaration marked as declare target after first use, it may lead to incorrect results
'#pragma omp declare variant' cannot be applied to the function that was defined already; the original function might be used
'#pragma omp declare variant' cannot be applied for function after first usage; the original function might be used
variant function in '#pragma omp declare variant' is itself marked as '#pragma omp declare variant'
score expressions in the OpenMP context selector need to be constant; %0 is not and will be ignored
zero linear step (%0 %select{|and other variables in clause }1should probably be const)
OpenMP loop iteration variable cannot have more than 64 bits size and will be narrowed
OpenMP only allows an ordered construct with the simd clause nested in a simd construct
Type %0 is not trivially copyable and not guaranteed to be mapped correctly
declaration is not declared in any declare target region
array section %select{lower bound|length}0 is of type 'char'
expected '#pragma omp end declare target' at end of file to match '#pragma omp %0'
allocate directive specifies %select{default|'%1'}0 allocator while previously used %select{default|'%3'}2
class implementation may not have super class
%0 attribute is deprecated and ignored in %1
passing non-generic address space pointer to %0 may cause dynamic conversion affecting performance
%0 should not return a null pointer unless it is declared 'throw()'%select{| or 'noexcept'}1
os_log() '%%n' format specifier is not allowed
result of comparison of %select{constant %0|true|false}1 with %select{expression of type %2|boolean expression}3 is always %4
type %0 requires %1 bytes of alignment and the default allocator only guarantees %2 bytes
overloaded operator %select{>>|<<}0 has higher precedence than comparison operator
%q0 hides overloaded virtual %select{function|functions}1
parameter of overriding method should be annotated with __attribute__((noescape))
passing %0-byte aligned argument to %1-byte aligned parameter %2%select{| of %4}3 may result in an unaligned pointer access
parameter '%0' not in expected state when the function returns: expected '%1', observed '%2'
argument not in expected state; expected '%0', observed '%1'
%0 is a large (%1 bytes) pass-by-value argument; pass it by reference instead ?
parentheses were disambiguated as a function declaration
parentheses were disambiguated as redundant parentheses around declaration of variable named %0
passing object of class type %0 through variadic %select{function|block|method|constructor}1%select{|; did you mean to call '%3'?}2
moving a temporary object prevents copy elision
moving a local object in a return statement prevents copy elision
taking the absolute value of %select{pointer|function|array}0 type %1 is suspicious
performing pointer arithmetic on a null pointer has undefined behavior%select{| if the offset is nonzero}0
comparing a pointer to a null character constant; did you mean to compare to %select{NULL|(void *)0}0?
dereference of type %1 that was reinterpret_cast from type %0 has undefined behavior
performing pointer subtraction with a null pointer %select{has|may have}0 undefined behavior
cast to smaller integer type %1 from %0
cast to smaller integer type %1 from %0
@selector expression formed with potentially direct selector %0
#pragma align(packed) may not be compatible with objects generated with AIX XL C/C++
unused attribute %0 in '#pragma clang attribute push' region
#pragma options align=reset failed: %0
expected #pragma pack parameter to be '1', '2', '4', '8', or '16'
the current #pragma pack alignment value is modified in the included file
unterminated '#pragma pack (push, ...)' at end of file
non-default #pragma pack value changes the alignment of struct or union members in the included file
specifying both a name and alignment to 'pop' is undefined
value of #pragma pack(show) == %0
#pragma %0(pop, ...) failed: %1
only variables can be arguments to '#pragma unused'
undeclared variable %0 used as an argument for '#pragma unused'
operator '?:' has lower precedence than '%0'; '%0' will be evaluated first
%0 has lower precedence than %1; %1 will be evaluated first
operator '?:' has lower precedence than '%0'; '%0' will be evaluated first
object format flags cannot be used with '%0' conversion specifier
'%select{*|.*}0' specified field %select{width|precision}0 is missing a matching 'int' argument
field %select{width|precision}0 should have type %1, but argument has type %2
data argument not used by format string
missing object format flag
format string contains '\0' within the string body
format string is not null-terminated
flag '%0' is ignored when flag '%1' is present
incomplete format specifier
more '%%' conversions than data arguments
'%0' is not a valid object format flag
'%%n' specifier not supported on this platform
flag '%0' results in undefined behavior with '%1' conversion specifier
%select{field width|precision}0 used with '%1' conversion specifier, resulting in undefined behavior
data argument position '%0' exceeds the number of data arguments (%1)
use of __private_extern__ on a declaration may not produce external symbol private to the linkage unit and is deprecated
property %0 not found on object of type %1; did you mean to access property %2?
property attribute in class extension does not match the primary class
'%1' attribute on property %0 does not match the property inherited from %2
property declared as returning non-retained objects; getter returning retained objects
primary property declaration is implicitly strong while redeclaration in class extension is weak
property access is using %0 method which is deprecated
getter name mismatch between property redeclaration (%1) and its original declaration (%0)
property type %0 is incompatible with type %1 inherited from %2
property %select{of type %1|with attribute '%1'|without attribute '%1'|with getter %1|with setter %1}0 was selected for synthesis
passing the value that %1 points to by reference requires holding %0 %select{'%2'|'%2' exclusively}3
the pointer incremented by %0 refers past the end of the array (that contains %1 element%s2)
the pointer incremented by %0 refers past the last possible element for an array in %1-bit address space containing %2-bit (%3-byte) elements (max possible %4 element%s5)
the pointer decremented by %0 refers before the beginning of the array
'objc_independent_class' attribute may be put on Objective-C object pointer type only; attribute is ignored
authenticating a null pointer will almost certainly trap
signing a null pointer will yield a non-null pointer
'%0' type qualifier%s1 on return type %plural{1:has|:have}1 no effect
attribute 'readonly' of property %0 restricts attribute 'readwrite' of property inherited from %1
receiver %0 is a forward class and corresponding @interface may not exist
receiver type %0 for instance message is a forward declaration
incompatible redeclaration of library function %0
%q0 redeclared without %1 attribute: previous %1 ignored
%q0 redeclared without 'dllimport' attribute: 'dllexport' attribute added
#pragma redefine_extname is applicable to external C declarations only; not applied to %select{function|variable}0 %1
redefinition of %0 will not be visible outside of this function
variable %0 is %select{decremented|incremented}1 both in the loop header and in the loop body
redundant move in return statement
redundant parentheses surrounding declarator
reference %0 is not yet bound to a value when used here
'register' storage specifier on @catch parameter will be ignored
'reinterpret_cast' %select{from|to}3 class %0 %select{to|from}3 its %select{virtual base|base at non-zero offset}2 %1 behaves differently from 'static_cast'
method is expected to return an instance of its class type %diff{$, but is declared to return $|, but is declared to return different type}0,1
protocol method is expected to return an instance of the implementing class, but is declared to return %0
%select{remainder|division}0 by zero is undefined
'require_constant_initialization' attribute added after initialization of variable
identifier %0 is reserved because %select{<ERROR>|it starts with '_' at global scope|it starts with '_' and has C language linkage|it starts with '__'|it starts with '_' followed by a capital letter|it contains '__'}1
returning address of label, which is local
returning %select{address of|reference to}0 local temporary object
%select{address of|reference to}0 stack memory associated with %select{local variable|parameter}2 %1 returned
manual %0 of an OSSharedPtr is error-prone
non-void %select{function|method}1 %0 should return a value
return state set for an unconsumable type '%0'
return value not in expected state; expected '%0', observed '%1'
return value of %0 is a large (%1 bytes) pass-by-value object; pass it by reference instead ?
%0 has C-linkage specified, but returns user-defined type %1 which is incompatible with C
%0 has C-linkage specified, but returns incomplete type %1 which could be incompatible with C
repeated RISC-V 'interrupt' attribute
instance method %0 is being used on 'Class' which is not in the root class
sampler initializer has invalid %0 bits
zero field width in scanf format string is unused
no closing ']' for '%%[' in scanf format string
second argument to 'va_start' is not the last named parameter
second argument to 'va_arg' is of promotable type %0; this va_arg has undefined behavior because arguments will be promoted to %1
second argument to 'va_arg' is of non-POD type %0
second argument to 'va_arg' is of ARC ownership-qualified type %0
explicitly assigning value of variable of type %0 to itself%select{|; did you mean to assign to member %2?}1
explicitly assigning value of variable of type %0 to itself%select{|; did you mean to assign to member %2?}1
explicitly moving variable of type %0 to itself%select{|; did you mean to move to member %2?}1
property %0 requires method %1 to be defined - use @synthesize, @dynamic or provide a method implementation in this class implementation
property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category
%select{parameter|non-static data member}3 %0 %select{|of %1 }3shadows member inherited from type %2
shift count >= width of type
shifting a negative signed value is undefined
shift count is negative
signed shift result (%0) requires %1 bits to represent, but %2 only has %3 bits
signed shift result (%0) sets the sign bit of the shift expression's type (%1) and becomes negative
expression with side effects will be evaluated despite being used as an operand to 'typeid'
expression with side effects has no effect in an unevaluated context
signed bit-field %0 needs an extra bit to represent the largest positive enumerators of %1
sizeof on pointer operation will return size of %0 instead of %1
sizeof on array function parameter will return size of %0 instead of %1
'%0' call operates on objects of type %1 while the size is based on a different type %2
did you mean to %select{dereference the argument to 'sizeof' (and multiply it by the number of elements)|remove the addressof in the argument to 'sizeof' (and multiply it by the number of elements)|provide an explicit length}0?
argument to 'sizeof' in %0 call is the same pointer type %1 as the %select{destination|source}2; expected %3 or an explicit length
initializer order does not match the declaration order
variable %0 is %select{used|captured}1 uninitialized whenever %select{'%3' condition is %select{true|false}4|'%3' loop %select{is entered|exits because its condition is false}4|'%3' loop %select{condition is true|exits because its condition is false}4|switch %3 is taken|its declaration is reached|%3 is called}2
'%0' ignored on this declaration
array argument is too small; %select{contains %0 elements|is of size %0}2, callee requires at least %1
non-constant static local variable in inline function may be different in different files
'main' should not be declared static
static variable %0 is suspiciously used within its own initialization
multiple methods named %0 found
@selector expression formed with potentially direct selector %0
a %select{function|block}0 declaration without a prototype is deprecated %select{in all versions of C|}0
passing arguments to %select{a function|%1}0 without a prototype is deprecated in all versions of C and is not supported in C2x
adding %0 to a string pointer does not append to the string
adding %0 to a string does not append to the string
result of comparison against %select{a string literal|@encode}0 is unspecified (use an explicit string comparison function instead)
size argument in %0 call appears to be size of the source; expected the size of the destination
the value of the size argument in 'strncat' is too large, might lead to a buffer overflow
size argument in 'strncat' call appears to be size of the source
the value of the size argument to 'strncat' is wrong
%2 defined as %select{a struct|an interface|a class}0%select{| template}1 here but previously declared as %select{a struct|an interface|a class}3%select{| template}1; this is valid, but may result in linker errors under the Microsoft C++ ABI
%select{struct|interface|class}0%select{| template}1 %2 was previously declared as a %select{struct|interface|class}3%select{| template}1; this is valid, but may result in linker errors under the Microsoft C++ ABI
subtraction of pointers to type %0 of zero size has undefined behavior
array subscript is of type 'char'
%0 overrides a destructor but is not marked 'override'
%0 overrides a member function but is not marked 'override'
block could be declared with attribute 'noreturn'
%select{function|method}0 %1 could be declared with attribute 'noreturn'
field %0 can overwrite instance variable %1 with variable sized type %2 in superclass %3
'size' argument to bzero is '0'
%select{'size' argument to memset is '0'|setting buffer to a 'sizeof' expression}0; did you mean to transpose the last two arguments?
'swift_newtype' attribute may be put on a typedef only; attribute is ignored
template parameter of a function template with the 'sycl_kernel' attribute cannot be a non-type template parameter
function template with 'sycl_kernel' attribute must have a single parameter
'sycl_kernel' attribute only applies to a function template with at least two template parameters
function template with 'sycl_kernel' attribute must have a 'void' return type
the semantics of this intrinsic changed with GCC version 4.4 - the newer semantics are provided here
taking address of packed member %0 of class or structure %q1 may result in an unaligned pointer value
version list contains duplicate entries
mixing 'target_clones' specifier mechanisms is permitted for GCC compatibility; use a comma separated sequence of string literals, or a string literal containing a comma-separated list of versions
result of comparison of %select{constant %0|true|false}1 with %select{expression of type %2|boolean expression}3 is always %4
result of comparison of constant %0 with expression of type 'BOOL' is always %1, as the only well defined values for 'BOOL' are YES and NO
result of comparison of %select{%4|%1-bit %select{signed|unsigned}2 value}0 %3 %select{%1-bit %select{signed|unsigned}2 value|%4}0 is always %5
result of comparison %select{%3|%1}0 %2 %select{%1|%3}0 is always %4
overlapping comparisons always evaluate to %select{false|true}0
calling %0 is a violation of trusted computing base '%1'
non-type template argument with value '%0' converted to '%1' for unsigned template parameter of type %2
non-type template argument value '%0' truncated to '%1' for template parameter of type %2
exported templates are unsupported
dependent nested name specifier '%0' for friend template declaration is not supported; ignoring this friend declaration
dependent nested name specifier '%0' for friend class declaration is not supported; turning off access control for %1
extraneous template parameter list in template specialization
tentative array definition assumed to have one element
'this' pointer cannot be null in well-defined C++ code; pointer may be assumed to always convert to true
'this' pointer cannot be null in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0
%0 attribute requires arguments whose type is annotated with 'capability' attribute; type here is %1
%0 attribute can only be applied in a context annotated with 'capability' attribute
%0 only applies to pointer types; type here is %1
ignoring %0 attribute because its argument is invalid
%0 attribute without capability arguments refers to 'this', but %1 isn't annotated with 'capability' or 'scoped_lockable' attribute
%0 attribute without capability arguments can only be applied to non-static methods of a class
thread safety beta warning
thread safety verbose warning
%0 has a non-throwing exception specification but can still throw
underaligned exception object thrown
could not infer allocation type in call to '%0'
%select{alignment|size}0 of field %1 (%2 bits) does not match the %select{alignment|size}0 of the first field in transparent union; transparent_union attribute ignored
first field of a transparent union cannot have %select{floating point|vector}0 type %1; transparent_union attribute ignored
transparent_union attribute can only be applied to a union definition; attribute ignored
transparent union definition must contain at least one field; transparent_union attribute ignored
applying attribute %0 to a declaration is deprecated; apply it to the type instead
'%0' only applies to %select{function|pointer|Objective-C object or block pointer}1 types; type here is %2
specified %0 type tag requires a null pointer
argument type %0 doesn't match specified %1 type tag %select{that requires %3|}2
this type tag was not designed to be used with this function
'%0' qualifier on function type %1 has no effect
'%0' qualifier on function type %1 has unspecified behavior
ordered comparison of function pointers (%0 and %1)
'%0' qualifier on reference type %1 has no effect
vector operands do not have the same elements sizes (%0 and %1)
invalid application of '%select{typeof|typeof_unqual}0' to bit-field
unannotated fall-through between switch labels
unannotated fall-through between switch labels in partly-annotated function
implementing unavailable method
%0 may be unavailable because the receiver type is unknown
undeclared selector %0
undeclared selector %0; did you mean %1?
cannot find interface declaration for %0
cannot find interface declaration for %0; did you mean %1?
method definition for %0 not found
cannot find protocol definition for %0
inline function %q0 is not defined
%select{function|variable}0 %q1 has internal linkage but is not defined
reinterpret_cast from %0 to %1 has undefined behavior
%0 is only available on %1 %2 or newer
%0 is only available on %1 %2 or newer
__declspec attribute %0 is not supported
method %0 in protocol %1 not implemented
no method with selector %0 is implemented in this translation unit
block pointer variable %0 is %select{uninitialized|null}1 when captured by block
variable %0 is uninitialized when passed as a const reference argument here
variable %0 is uninitialized when used within its own initialization
reference %0 is not yet bound to a value when used within its own initialization
variable %0 is uninitialized when %select{used here|captured by block}1
unknown sanitizer '%0' ignored
releasing %0 '%1' that was not held
releasing %0 '%1' using %select{shared|exclusive}2 access, expected %select{shared|exclusive}3 access
%select{function|variable}0 %1 is not needed and will not be emitted
member function %0 is not needed and will not be emitted
'static' function %0 declared in header file should be declared 'static inline'
unqualified call to '%0'
code will never be executed
due to lvalue conversion of the controlling expression, association of type %0 will never be selected because it is %select{of array type|qualified}1
'break' will never be executed
default label in switch which covers all enumeration values
fallthrough annotation in unreachable code
loop will run at most once (loop increment never executed)
'return' will never be executed
%select{unsafe pointer operation|unsafe pointer arithmetic|unsafe buffer access|function introduces unsafe buffer manipulation}0
%0 is an %select{unsafe pointer used for buffer access|unsafe buffer that does not perform bounds checks}1
multiple unsequenced modifications to %0
unsequenced modification and access to %0
taking the absolute value of unsigned type %0 has no effect
result of comparison of %select{%3|unsigned expression}0 %2 %select{unsigned expression|%3}0 is always %4
assigning value of signed enum type %1 to unsigned bit-field %0; negative enumerators of enum %1 will be converted to positive values
result of comparison of %select{%3|char expression}0 %2 %select{char expression|%3}0 is always %4, since char is interpreted as unsigned
result of comparison of %select{%3|unsigned enum expression}0 %2 %select{unsigned enum expression|%3}0 is always %4
unsupported branch protection specification '%0'
sorry, lifetime extension of %select{temporary|backing array of initializer list}0 created by aggregate initialization using default member initializer is not supported; lifetime of %select{temporary|backing array}0 will end at the end of the full-expression
%select{unsupported|duplicate|unknown}0%select{| CPU| tune CPU}1 '%2' in the '%select{target|target_clones}3' attribute string; '%select{target|target_clones}3' attribute ignored
parameter %0 set but not used
variable %0 set but not used
ignoring return value of function declared with %0 attribute
left operand of comma operator has no effect
%select{equality|inequality|relational|three-way}0 comparison result unused
unused variable %0
ignoring temporary created by a constructor declared with %0 attribute
ignoring temporary created by a constructor declared with %0 attribute: %1
container access result unused - container access should not be used for side effects
unused exception parameter %0
expression result unused
unused function %0
unused label %0
lambda capture %0 is not %select{used|required to be captured for this use}1
unused %select{typedef|type alias}0 %1
unused member function %0
unused parameter %0
private field %0 is not used
ivar %0 which backs the property is not referenced in this property's accessor
property access result unused - getters should not be used for side effects
ignoring return value of function declared with %0 attribute
ignoring return value of function declared with %0 attribute: %1
'[[%select{nodiscard|gnu::warn_unused_result}0]]' attribute ignored when applied to a typedef; consider using '__attribute__((warn_unused_result))' or '[[clang::warn_unused_result]]' instead
unused %select{function|variable}0 template %1
unused variable %0
expression result unused; should this cast be to 'void'?
expression result unused; assign into a variable to force a volatile load
invalid invocation of method '%0' on object '%1' while it is in the '%2' state
invalid invocation of method '%0' on a temporary object while it is in the '%1' state
%0 was marked unused but was used
user-defined literal suffixes not starting with '_' are reserved%select{; no literal will invoke this operator|}0
using namespace directive in global context in header
passing %select{an object that undergoes default argument promotion|an object of reference type|a parameter declared with the 'register' keyword}0 to 'va_start' has undefined behavior
object of type %0 cannot be placed in read-only memory
%select{reading|writing}1 the value pointed to by %0 requires holding %select{any mutex|any mutex exclusively}1
%select{reading|writing}3 the value pointed to by %1 requires holding %0 %select{'%2'|'%2' exclusively}3
%select{reading|writing}3 the value pointed to by %1 requires holding %0 %select{'%2'|'%2' exclusively}3
instantiation of variable %q0 required here, but no definition is available
%select{reading|writing}1 variable %0 requires holding %select{any mutex|any mutex exclusively}1
%select{reading|writing}3 variable %1 requires holding %0 %select{'%2'|'%2' exclusively}3
%select{reading|writing}3 variable %1 requires holding %0 %select{'%2'|'%2' exclusively}3
field %0 with variable sized type %1 is not visible to subclasses and can conflict with their instance variables
variable%select{s| %1|s %1 and %2|s %1, %2, and %3|s %1, %2, %3, and %4}0 used in loop condition not modified in loop body
defaulted move assignment operator of %0 will move assign virtual base class %1 multiple times
Use of 'long' with '__vector' is deprecated
specifying vector types with the 'mode' attribute is deprecated; use the 'vector_size' attribute instead
variable length array used
cast to smaller integer type %1 from %0
cast to smaller integer type %1 from %0
dynamic exception specifications with types are currently ignored in wasm
weak identifier %0 never declared
an already-declared variable is made a weak_import declaration %0
this warning is no longer in use and will be removed in the next release
%0 has no out-of-line virtual method definitions; its vtable will be emitted in every translation unit
using %select{integer|floating point|complex}1 absolute value function %0 when argument is of %select{integer|floating point|complex}2 type
result of '%0' is %1; did you mean exponentiation?
result of '%0' is %1; did you mean '%2'?
result of '%0' is %1; did you mean '%2' (%3)?
zero as null pointer constant
%select{|empty }0%select{struct|union}1 has size 0 in C, %select{size 1|non-zero size}2 in C++
%select{|empty }0%select{struct|union}1 has size 0 in C, %select{size 1|non-zero size}2 in C++
%0 is only available on %1 %2 and %3 %4 or newer
the selected methods are already implemented
method %0 cannot be renamed because it overrides a method declared in a system framework
no %select{implementation file|@implementation declaration}0 for the selected %select{declaration|@interface}0 %1; please add one and run the refactoring action again
the selected code is not a part of a function's / method's body
the selected expression can't be extracted
the selected expression is too simple to extract
refactoring action can't be initiated without a selection
the provided selection does not overlap with the AST nodes of interest
there is no symbol at the given location
%0 is a builtin function that cannot be renamed
%0 is declared in a %1 file; rename can be initiated in a %1 file only
%0 cannot be renamed because it is declared in a system header
ActionCache cannot be initialized from '%0' on disk (check -fcas-path)
CAS cannot be initialized from '%0' on disk (check -fcas-path): %1
caching backend error: %0
caching failed because the output can be non-deterministic
CAS cannot load module with key '%0' from %1: %2
CAS cannot parse include-tree-id '%0'
CAS cannot parse root-id '%0' specified by -fcas-fs
CAS cannot parse root-id '%0' for module '%1'
Failed to establish connection with depscan daemon: %0
CAS-based dependency scan failed: %0
CAS filesystem cannot be initialized from root-id '%0' specified by -fcas-fs
CAS filesystem cannot set working directory to '%0' specified by -fcas-fs-working-directory
CAS missing expected include-tree '%0'
CAS missing expected root-id '%0'
failed to store to CAS: %0
clang-cache cannot find compiler binary %0
clang-cache failed to execute compiler: %0
missing compiler command for clang-cache
missing arguments for dep-scanning server mode
plugin CAS cannot be initialized from '%0': %1
compile job cache backend did not find output '%0' for key '%1' (output ID: '%2')
compile job cache hit for '%0' => '%1'
compile job cache miss for '%0'
compile job cache miss for '%0' (result not found: '%1')
compile job cache skipped for '%0'
compile job cache backend key query time: %0
compile job cache backend key update time: %0
compile job cache backend load artifacts time: %0
compile job cache backend store artifacts time: %0
compile job dependency scanning time: %0
caching disabled because %0
=@C##))
F#&&&,,
WZ//
[)1?[GO[[[
+4-444)
"""$(,
!$'*-0369<?BEHKNQTWZ]`cfilor
?LLLLLL2)
LLLBE,
//////
//////
//%%
///////////
%//%%%
%///
//""
/*/*/
%1%%%.1.%%
"%(
3xE]
A&5P;
_DRnZnUnnnnnnx
 %/9
OO#OO0@
@@@@@
bMB7,!
$*09?D
;>AD
ehknqtwz}
behk
+.147:=@CFILORUX[^adgkoswz}
 $'*-048<@CG
?CGKO
"%(+.258;>ADGJMQTX\_cfilptwz}
UY]a
#&)-03`````````69<?BEHKNRUY]
#&*-048;>AEHKOR]]]]]]]]]]]]]]]]]]]]]]]]]VZ]]]]]]]]]]]]]]^
Q[T[[[X 
    
$/;GS
#6####8
()^$|*+?.[]\{}
cc+G
``(B
coh()^$|+?[]\{}
GZe
KKNNKKK
#NNKN'N*NKNKK
-NK0N3N7N:N=N@NKKKDNH
22$2
''''''''''''
555555
$$$$/$>
                                                                                
FvBB
4:@9?IVZ
4:@9?IVZ
[0;30m
[0;31m
[0;32m
[0;33m
[0;34m
[0;35m
[0;36m
[0;37m
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;40m
[0;41m
[0;42m
[0;43m
[0;44m
[0;45m
[0;46m
[0;47m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
LLVM_DISABLE_SYMBOLIZATION
LLVM_SYMBOLIZER_PATH
#/####1
.A[m
@EK_
__builtin_neon___a32_vcvt_bf16_f32
V8ScV16Sci
bf16
__builtin_neon___a64_vcvtq_low_bf16_f32
V16ScV16Sci
__builtin_neon_splat_lane_bf16
V8ScV8ScIii
__builtin_neon_splat_lane_v
__builtin_neon_splat_laneq_bf16
V8ScV16ScIii
__builtin_neon_splat_laneq_v
__builtin_neon_splatq_lane_bf16
V16ScV8ScIii
__builtin_neon_splatq_lane_v
__builtin_neon_splatq_laneq_bf16
V16ScV16ScIii
__builtin_neon_splatq_laneq_v
__builtin_neon_vabd_f16
V8ScV8ScV8Sci
fullfp16
__builtin_neon_vabd_v
__builtin_neon_vabdd_f64
__builtin_neon_vabdq_f16
V16ScV16ScV16Sci
__builtin_neon_vabdq_v
__builtin_neon_vabds_f32
__builtin_neon_vabs_f16
V8ScV8Sci
__builtin_neon_vabs_v
__builtin_neon_vabsd_s64
WiWi
__builtin_neon_vabsq_f16
__builtin_neon_vabsq_v
__builtin_neon_vadd_v
__builtin_neon_vaddd_s64
WiWiWi
__builtin_neon_vaddd_u64
UWiUWiUWi
__builtin_neon_vaddhn_v
V8ScV16ScV16Sci
__builtin_neon_vaddlv_s16
iV4s
__builtin_neon_vaddlv_s32
WiV2i
__builtin_neon_vaddlv_s8
sV8Sc
__builtin_neon_vaddlv_u16
UiV4Us
__builtin_neon_vaddlv_u32
UWiV2Ui
__builtin_neon_vaddlv_u8
UsV8Uc
__builtin_neon_vaddlvq_s16
iV8s
__builtin_neon_vaddlvq_s32
WiV4i
__builtin_neon_vaddlvq_s8
sV16Sc
__builtin_neon_vaddlvq_u16
UiV8Us
__builtin_neon_vaddlvq_u32
UWiV4Ui
__builtin_neon_vaddlvq_u8
UsV16Uc
__builtin_neon_vaddq_p128
ULLLiULLLiULLLi
__builtin_neon_vaddq_v
__builtin_neon_vaddv_f32
fV2f
__builtin_neon_vaddv_s16
sV4s
__builtin_neon_vaddv_s32
iV2i
__builtin_neon_vaddv_s8
ScV8Sc
__builtin_neon_vaddv_u16
UsV4Us
__builtin_neon_vaddv_u32
UiV2Ui
__builtin_neon_vaddv_u8
UcV8Uc
__builtin_neon_vaddvq_f32
fV4f
__builtin_neon_vaddvq_f64
dV2d
__builtin_neon_vaddvq_s16
sV8s
__builtin_neon_vaddvq_s32
iV4i
__builtin_neon_vaddvq_s64
WiV2Wi
__builtin_neon_vaddvq_s8
ScV16Sc
__builtin_neon_vaddvq_u16
UsV8Us
__builtin_neon_vaddvq_u32
UiV4Ui
__builtin_neon_vaddvq_u64
UWiV2UWi
__builtin_neon_vaddvq_u8
UcV16Uc
__builtin_neon_vaesdq_u8
__builtin_neon_vaeseq_u8
__builtin_neon_vaesimcq_u8
__builtin_neon_vaesmcq_u8
__builtin_neon_vbcaxq_s16
V16ScV16ScV16ScV16Sci
sha3
__builtin_neon_vbcaxq_s32
__builtin_neon_vbcaxq_s64
__builtin_neon_vbcaxq_s8
__builtin_neon_vbcaxq_u16
__builtin_neon_vbcaxq_u32
__builtin_neon_vbcaxq_u64
__builtin_neon_vbcaxq_u8
__builtin_neon_vbfdot_f32
V8ScV8ScV8ScV8Sci
__builtin_neon_vbfdotq_f32
__builtin_neon_vbfmlalbq_f32
__builtin_neon_vbfmlaltq_f32
__builtin_neon_vbfmmlaq_f32
__builtin_neon_vbsl_f16
__builtin_neon_vbsl_v
__builtin_neon_vbslq_f16
__builtin_neon_vbslq_v
__builtin_neon_vcadd_rot270_f16
__builtin_neon_vcadd_rot270_v
__builtin_neon_vcadd_rot90_f16
__builtin_neon_vcadd_rot90_v
__builtin_neon_vcaddq_rot270_f16
__builtin_neon_vcaddq_rot270_v
__builtin_neon_vcaddq_rot90_f16
__builtin_neon_vcaddq_rot90_v
__builtin_neon_vcage_f16
__builtin_neon_vcage_v
__builtin_neon_vcaged_f64
UWidd
__builtin_neon_vcageq_f16
__builtin_neon_vcageq_v
__builtin_neon_vcages_f32
Uiff
__builtin_neon_vcagt_f16
__builtin_neon_vcagt_v
__builtin_neon_vcagtd_f64
__builtin_neon_vcagtq_f16
__builtin_neon_vcagtq_v
__builtin_neon_vcagts_f32
__builtin_neon_vcale_f16
__builtin_neon_vcale_v
__builtin_neon_vcaled_f64
__builtin_neon_vcaleq_f16
__builtin_neon_vcaleq_v
__builtin_neon_vcales_f32
__builtin_neon_vcalt_f16
__builtin_neon_vcalt_v
__builtin_neon_vcaltd_f64
__builtin_neon_vcaltq_f16
__builtin_neon_vcaltq_v
__builtin_neon_vcalts_f32
__builtin_neon_vceqd_f64
__builtin_neon_vceqd_s64
UWiWiWi
__builtin_neon_vceqd_u64
__builtin_neon_vceqs_f32
__builtin_neon_vceqz_f16
__builtin_neon_vceqz_v
__builtin_neon_vceqzd_f64
UWid
__builtin_neon_vceqzd_s64
UWiWi
__builtin_neon_vceqzd_u64
UWiUWi
__builtin_neon_vceqzq_f16
__builtin_neon_vceqzq_v
__builtin_neon_vceqzs_f32
__builtin_neon_vcged_f64
__builtin_neon_vcged_s64
__builtin_neon_vcged_u64
__builtin_neon_vcges_f32
__builtin_neon_vcgez_f16
__builtin_neon_vcgez_v
__builtin_neon_vcgezd_f64
__builtin_neon_vcgezd_s64
__builtin_neon_vcgezq_f16
__builtin_neon_vcgezq_v
__builtin_neon_vcgezs_f32
__builtin_neon_vcgtd_f64
__builtin_neon_vcgtd_s64
__builtin_neon_vcgtd_u64
__builtin_neon_vcgts_f32
__builtin_neon_vcgtz_f16
__builtin_neon_vcgtz_v
__builtin_neon_vcgtzd_f64
__builtin_neon_vcgtzd_s64
__builtin_neon_vcgtzq_f16
__builtin_neon_vcgtzq_v
__builtin_neon_vcgtzs_f32
__builtin_neon_vcled_f64
__builtin_neon_vcled_s64
__builtin_neon_vcled_u64
__builtin_neon_vcles_f32
__builtin_neon_vclez_f16
__builtin_neon_vclez_v
__builtin_neon_vclezd_f64
__builtin_neon_vclezd_s64
__builtin_neon_vclezq_f16
__builtin_neon_vclezq_v
__builtin_neon_vclezs_f32
__builtin_neon_vcls_v
__builtin_neon_vclsq_v
__builtin_neon_vcltd_f64
__builtin_neon_vcltd_s64
__builtin_neon_vcltd_u64
__builtin_neon_vclts_f32
__builtin_neon_vcltz_f16
__builtin_neon_vcltz_v
__builtin_neon_vcltzd_f64
__builtin_neon_vcltzd_s64
__builtin_neon_vcltzq_f16
__builtin_neon_vcltzq_v
__builtin_neon_vcltzs_f32
__builtin_neon_vclz_v
__builtin_neon_vclzq_v
__builtin_neon_vcmla_f16
__builtin_neon_vcmla_rot180_f16
__builtin_neon_vcmla_rot180_v
__builtin_neon_vcmla_rot270_f16
__builtin_neon_vcmla_rot270_v
__builtin_neon_vcmla_rot90_f16
__builtin_neon_vcmla_rot90_v
__builtin_neon_vcmla_v
__builtin_neon_vcmlaq_f16
__builtin_neon_vcmlaq_rot180_f16
__builtin_neon_vcmlaq_rot180_v
__builtin_neon_vcmlaq_rot270_f16
__builtin_neon_vcmlaq_rot270_v
__builtin_neon_vcmlaq_rot90_f16
__builtin_neon_vcmlaq_rot90_v
__builtin_neon_vcmlaq_v
__builtin_neon_vcnt_v
__builtin_neon_vcntq_v
__builtin_neon_vcvt_f16_f32
__builtin_neon_vcvt_f16_s16
__builtin_neon_vcvt_f16_u16
__builtin_neon_vcvt_f32_f16
V16ScV8Sci
__builtin_neon_vcvt_f32_f64
__builtin_neon_vcvt_f32_v
__builtin_neon_vcvt_f64_f32
__builtin_neon_vcvt_f64_v
__builtin_neon_vcvt_n_f16_s16
__builtin_neon_vcvt_n_f16_u16
__builtin_neon_vcvt_n_f32_v
__builtin_neon_vcvt_n_f64_v
__builtin_neon_vcvt_n_s16_f16
__builtin_neon_vcvt_n_s32_v
__builtin_neon_vcvt_n_s64_v
__builtin_neon_vcvt_n_u16_f16
__builtin_neon_vcvt_n_u32_v
__builtin_neon_vcvt_n_u64_v
__builtin_neon_vcvt_s16_f16
__builtin_neon_vcvt_s32_v
__builtin_neon_vcvt_s64_v
__builtin_neon_vcvt_u16_f16
__builtin_neon_vcvt_u32_v
__builtin_neon_vcvt_u64_v
__builtin_neon_vcvta_s16_f16
__builtin_neon_vcvta_s32_v
__builtin_neon_vcvta_s64_v
__builtin_neon_vcvta_u16_f16
__builtin_neon_vcvta_u32_v
__builtin_neon_vcvta_u64_v
__builtin_neon_vcvtad_s64_f64
__builtin_neon_vcvtad_u64_f64
__builtin_neon_vcvtaq_s16_f16
__builtin_neon_vcvtaq_s32_v
__builtin_neon_vcvtaq_s64_v
__builtin_neon_vcvtaq_u16_f16
__builtin_neon_vcvtaq_u32_v
__builtin_neon_vcvtaq_u64_v
__builtin_neon_vcvtas_s32_f32
__builtin_neon_vcvtas_u32_f32
__builtin_neon_vcvtd_f64_s64
__builtin_neon_vcvtd_f64_u64
dUWi
__builtin_neon_vcvtd_n_f64_s64
dWiIi
__builtin_neon_vcvtd_n_f64_u64
dUWiIi
__builtin_neon_vcvtd_n_s64_f64
WidIi
__builtin_neon_vcvtd_n_u64_f64
UWidIi
__builtin_neon_vcvtd_s64_f64
__builtin_neon_vcvtd_u64_f64
__builtin_neon_vcvth_bf16_f32
__builtin_neon_vcvtm_s16_f16
__builtin_neon_vcvtm_s32_v
__builtin_neon_vcvtm_s64_v
__builtin_neon_vcvtm_u16_f16
__builtin_neon_vcvtm_u32_v
__builtin_neon_vcvtm_u64_v
__builtin_neon_vcvtmd_s64_f64
__builtin_neon_vcvtmd_u64_f64
__builtin_neon_vcvtmq_s16_f16
__builtin_neon_vcvtmq_s32_v
__builtin_neon_vcvtmq_s64_v
__builtin_neon_vcvtmq_u16_f16
__builtin_neon_vcvtmq_u32_v
__builtin_neon_vcvtmq_u64_v
__builtin_neon_vcvtms_s32_f32
__builtin_neon_vcvtms_u32_f32
__builtin_neon_vcvtn_s16_f16
__builtin_neon_vcvtn_s32_v
__builtin_neon_vcvtn_s64_v
__builtin_neon_vcvtn_u16_f16
__builtin_neon_vcvtn_u32_v
__builtin_neon_vcvtn_u64_v
__builtin_neon_vcvtnd_s64_f64
__builtin_neon_vcvtnd_u64_f64
__builtin_neon_vcvtnq_s16_f16
__builtin_neon_vcvtnq_s32_v
__builtin_neon_vcvtnq_s64_v
__builtin_neon_vcvtnq_u16_f16
__builtin_neon_vcvtnq_u32_v
__builtin_neon_vcvtnq_u64_v
__builtin_neon_vcvtns_s32_f32
__builtin_neon_vcvtns_u32_f32
__builtin_neon_vcvtp_s16_f16
__builtin_neon_vcvtp_s32_v
__builtin_neon_vcvtp_s64_v
__builtin_neon_vcvtp_u16_f16
__builtin_neon_vcvtp_u32_v
__builtin_neon_vcvtp_u64_v
__builtin_neon_vcvtpd_s64_f64
__builtin_neon_vcvtpd_u64_f64
__builtin_neon_vcvtpq_s16_f16
__builtin_neon_vcvtpq_s32_v
__builtin_neon_vcvtpq_s64_v
__builtin_neon_vcvtpq_u16_f16
__builtin_neon_vcvtpq_u32_v
__builtin_neon_vcvtpq_u64_v
__builtin_neon_vcvtps_s32_f32
__builtin_neon_vcvtps_u32_f32
__builtin_neon_vcvtq_f16_s16
__builtin_neon_vcvtq_f16_u16
__builtin_neon_vcvtq_f32_v
__builtin_neon_vcvtq_f64_v
__builtin_neon_vcvtq_high_bf16_f32
__builtin_neon_vcvtq_n_f16_s16
__builtin_neon_vcvtq_n_f16_u16
__builtin_neon_vcvtq_n_f32_v
__builtin_neon_vcvtq_n_f64_v
__builtin_neon_vcvtq_n_s16_f16
__builtin_neon_vcvtq_n_s32_v
__builtin_neon_vcvtq_n_s64_v
__builtin_neon_vcvtq_n_u16_f16
__builtin_neon_vcvtq_n_u32_v
__builtin_neon_vcvtq_n_u64_v
__builtin_neon_vcvtq_s16_f16
__builtin_neon_vcvtq_s32_v
__builtin_neon_vcvtq_s64_v
__builtin_neon_vcvtq_u16_f16
__builtin_neon_vcvtq_u32_v
__builtin_neon_vcvtq_u64_v
__builtin_neon_vcvts_f32_s32
__builtin_neon_vcvts_f32_u32
__builtin_neon_vcvts_n_f32_s32
fiIi
__builtin_neon_vcvts_n_f32_u32
fUiIi
__builtin_neon_vcvts_n_s32_f32
ifIi
__builtin_neon_vcvts_n_u32_f32
UifIi
__builtin_neon_vcvts_s32_f32
__builtin_neon_vcvts_u32_f32
__builtin_neon_vcvtx_f32_v
__builtin_neon_vcvtxd_f32_f64
__builtin_neon_vdot_s32
dotprod
__builtin_neon_vdot_u32
__builtin_neon_vdotq_s32
__builtin_neon_vdotq_u32
__builtin_neon_vdupb_lane_i8
UcV8ScIi
__builtin_neon_vdupb_laneq_i8
UcV16ScIi
__builtin_neon_vdupd_lane_f64
dV1dIi
__builtin_neon_vdupd_lane_i64
UWiV1WiIi
__builtin_neon_vdupd_laneq_f64
dV2dIi
__builtin_neon_vdupd_laneq_i64
UWiV2WiIi
__builtin_neon_vduph_lane_bf16
yV4yIi
__builtin_neon_vduph_lane_f16
hV4hIi
__builtin_neon_vduph_lane_i16
UsV4sIi
__builtin_neon_vduph_laneq_bf16
yV8yIi
__builtin_neon_vduph_laneq_f16
hV8hIi
__builtin_neon_vduph_laneq_i16
UsV8sIi
__builtin_neon_vdups_lane_f32
fV2fIi
__builtin_neon_vdups_lane_i32
UiV2iIi
__builtin_neon_vdups_laneq_f32
fV4fIi
__builtin_neon_vdups_laneq_i32
UiV4iIi
__builtin_neon_veor3q_s16
__builtin_neon_veor3q_s32
__builtin_neon_veor3q_s64
__builtin_neon_veor3q_s8
__builtin_neon_veor3q_u16
__builtin_neon_veor3q_u32
__builtin_neon_veor3q_u64
__builtin_neon_veor3q_u8
__builtin_neon_vext_f16
V8ScV8ScV8ScIii
__builtin_neon_vext_v
__builtin_neon_vextq_f16
V16ScV16ScV16ScIii
__builtin_neon_vextq_v
__builtin_neon_vfma_f16
__builtin_neon_vfma_lane_f16
V8ScV8ScV8ScV8ScIii
__builtin_neon_vfma_lane_v
__builtin_neon_vfma_laneq_f16
V8ScV8ScV8ScV16ScIii
__builtin_neon_vfma_laneq_v
__builtin_neon_vfma_v
__builtin_neon_vfmad_lane_f64
dddV1dIi
__builtin_neon_vfmad_laneq_f64
dddV2dIi
__builtin_neon_vfmah_lane_f16
hhhV4hIi
__builtin_neon_vfmah_laneq_f16
hhhV8hIi
__builtin_neon_vfmaq_f16
__builtin_neon_vfmaq_lane_f16
V16ScV16ScV16ScV8ScIii
__builtin_neon_vfmaq_lane_v
__builtin_neon_vfmaq_laneq_f16
V16ScV16ScV16ScV16ScIii
__builtin_neon_vfmaq_laneq_v
__builtin_neon_vfmaq_v
__builtin_neon_vfmas_lane_f32
fffV2fIi
__builtin_neon_vfmas_laneq_f32
fffV4fIi
__builtin_neon_vfmlal_high_f16
fp16fml
__builtin_neon_vfmlal_low_f16
__builtin_neon_vfmlalq_high_f16
__builtin_neon_vfmlalq_low_f16
__builtin_neon_vfmlsl_high_f16
__builtin_neon_vfmlsl_low_f16
__builtin_neon_vfmlslq_high_f16
__builtin_neon_vfmlslq_low_f16
__builtin_neon_vget_lane_bf16
__builtin_neon_vget_lane_f32
__builtin_neon_vget_lane_f64
__builtin_neon_vget_lane_i16
__builtin_neon_vget_lane_i32
__builtin_neon_vget_lane_i64
__builtin_neon_vget_lane_i8
__builtin_neon_vgetq_lane_bf16
__builtin_neon_vgetq_lane_f32
__builtin_neon_vgetq_lane_f64
__builtin_neon_vgetq_lane_i16
__builtin_neon_vgetq_lane_i32
__builtin_neon_vgetq_lane_i64
__builtin_neon_vgetq_lane_i8
__builtin_neon_vhadd_v
__builtin_neon_vhaddq_v
__builtin_neon_vhsub_v
__builtin_neon_vhsubq_v
__builtin_neon_vld1_bf16
V8ScvC*i
__builtin_neon_vld1_bf16_x2
vv*vC*i
__builtin_neon_vld1_bf16_x3
__builtin_neon_vld1_bf16_x4
__builtin_neon_vld1_dup_bf16
__builtin_neon_vld1_dup_v
__builtin_neon_vld1_lane_bf16
V8ScvC*V8ScIii
__builtin_neon_vld1_lane_v
__builtin_neon_vld1_v
__builtin_neon_vld1_x2_v
__builtin_neon_vld1_x3_v
__builtin_neon_vld1_x4_v
__builtin_neon_vld1q_bf16
V16ScvC*i
__builtin_neon_vld1q_bf16_x2
__builtin_neon_vld1q_bf16_x3
__builtin_neon_vld1q_bf16_x4
__builtin_neon_vld1q_dup_bf16
__builtin_neon_vld1q_dup_v
__builtin_neon_vld1q_lane_bf16
V16ScvC*V16ScIii
__builtin_neon_vld1q_lane_v
__builtin_neon_vld1q_v
__builtin_neon_vld1q_x2_v
__builtin_neon_vld1q_x3_v
__builtin_neon_vld1q_x4_v
__builtin_neon_vld2_bf16
__builtin_neon_vld2_dup_bf16
__builtin_neon_vld2_dup_v
__builtin_neon_vld2_lane_bf16
vv*vC*V8ScV8ScIii
__builtin_neon_vld2_lane_v
__builtin_neon_vld2_v
__builtin_neon_vld2q_bf16
__builtin_neon_vld2q_dup_bf16
__builtin_neon_vld2q_dup_v
__builtin_neon_vld2q_lane_bf16
vv*vC*V16ScV16ScIii
__builtin_neon_vld2q_lane_v
__builtin_neon_vld2q_v
__builtin_neon_vld3_bf16
__builtin_neon_vld3_dup_bf16
__builtin_neon_vld3_dup_v
__builtin_neon_vld3_lane_bf16
vv*vC*V8ScV8ScV8ScIii
__builtin_neon_vld3_lane_v
__builtin_neon_vld3_v
__builtin_neon_vld3q_bf16
__builtin_neon_vld3q_dup_bf16
__builtin_neon_vld3q_dup_v
__builtin_neon_vld3q_lane_bf16
vv*vC*V16ScV16ScV16ScIii
__builtin_neon_vld3q_lane_v
__builtin_neon_vld3q_v
__builtin_neon_vld4_bf16
__builtin_neon_vld4_dup_bf16
__builtin_neon_vld4_dup_v
__builtin_neon_vld4_lane_bf16
vv*vC*V8ScV8ScV8ScV8ScIii
__builtin_neon_vld4_lane_v
__builtin_neon_vld4_v
__builtin_neon_vld4q_bf16
__builtin_neon_vld4q_dup_bf16
__builtin_neon_vld4q_dup_v
__builtin_neon_vld4q_lane_bf16
vv*vC*V16ScV16ScV16ScV16ScIii
__builtin_neon_vld4q_lane_v
__builtin_neon_vld4q_v
__builtin_neon_vldrq_p128
ULLLivC*
__builtin_neon_vmax_f16
__builtin_neon_vmax_v
__builtin_neon_vmaxnm_f16
__builtin_neon_vmaxnm_v
__builtin_neon_vmaxnmq_f16
__builtin_neon_vmaxnmq_v
__builtin_neon_vmaxnmv_f16
hV8Sc
__builtin_neon_vmaxnmv_f32
__builtin_neon_vmaxnmvq_f16
hV16Sc
__builtin_neon_vmaxnmvq_f32
__builtin_neon_vmaxnmvq_f64
__builtin_neon_vmaxq_f16
__builtin_neon_vmaxq_v
__builtin_neon_vmaxv_f16
__builtin_neon_vmaxv_f32
__builtin_neon_vmaxv_s16
__builtin_neon_vmaxv_s32
__builtin_neon_vmaxv_s8
__builtin_neon_vmaxv_u16
__builtin_neon_vmaxv_u32
__builtin_neon_vmaxv_u8
__builtin_neon_vmaxvq_f16
__builtin_neon_vmaxvq_f32
__builtin_neon_vmaxvq_f64
__builtin_neon_vmaxvq_s16
__builtin_neon_vmaxvq_s32
__builtin_neon_vmaxvq_s8
__builtin_neon_vmaxvq_u16
__builtin_neon_vmaxvq_u32
__builtin_neon_vmaxvq_u8
__builtin_neon_vmin_f16
__builtin_neon_vmin_v
__builtin_neon_vminnm_f16
__builtin_neon_vminnm_v
__builtin_neon_vminnmq_f16
__builtin_neon_vminnmq_v
__builtin_neon_vminnmv_f16
__builtin_neon_vminnmv_f32
__builtin_neon_vminnmvq_f16
__builtin_neon_vminnmvq_f32
__builtin_neon_vminnmvq_f64
__builtin_neon_vminq_f16
__builtin_neon_vminq_v
__builtin_neon_vminv_f16
__builtin_neon_vminv_f32
__builtin_neon_vminv_s16
__builtin_neon_vminv_s32
__builtin_neon_vminv_s8
__builtin_neon_vminv_u16
__builtin_neon_vminv_u32
__builtin_neon_vminv_u8
__builtin_neon_vminvq_f16
__builtin_neon_vminvq_f32
__builtin_neon_vminvq_f64
__builtin_neon_vminvq_s16
__builtin_neon_vminvq_s32
__builtin_neon_vminvq_s8
__builtin_neon_vminvq_u16
__builtin_neon_vminvq_u32
__builtin_neon_vminvq_u8
__builtin_neon_vmmlaq_s32
i8mm
__builtin_neon_vmmlaq_u32
__builtin_neon_vmovl_v
__builtin_neon_vmovn_v
__builtin_neon_vmul_lane_v
__builtin_neon_vmul_laneq_v
V8ScV8ScV16ScIii
__builtin_neon_vmul_n_f64
V1dV1dd
__builtin_neon_vmul_v
__builtin_neon_vmull_p64
ULLLiUWiUWi
__builtin_neon_vmull_v
V16ScV8ScV8Sci
__builtin_neon_vmulq_v
__builtin_neon_vmulx_f16
__builtin_neon_vmulx_v
__builtin_neon_vmulxd_f64
__builtin_neon_vmulxh_lane_f16
hhV4hIi
__builtin_neon_vmulxh_laneq_f16
hhV8hIi
__builtin_neon_vmulxq_f16
__builtin_neon_vmulxq_v
__builtin_neon_vmulxs_f32
__builtin_neon_vnegd_s64
__builtin_neon_vpadal_v
__builtin_neon_vpadalq_v
__builtin_neon_vpadd_f16
__builtin_neon_vpadd_v
__builtin_neon_vpaddd_f64
__builtin_neon_vpaddd_s64
__builtin_neon_vpaddd_u64
__builtin_neon_vpaddl_v
__builtin_neon_vpaddlq_v
__builtin_neon_vpaddq_f16
__builtin_neon_vpaddq_v
__builtin_neon_vpadds_f32
__builtin_neon_vpmax_f16
__builtin_neon_vpmax_v
__builtin_neon_vpmaxnm_f16
__builtin_neon_vpmaxnm_v
__builtin_neon_vpmaxnmq_f16
__builtin_neon_vpmaxnmq_v
__builtin_neon_vpmaxnmqd_f64
__builtin_neon_vpmaxnms_f32
__builtin_neon_vpmaxq_f16
__builtin_neon_vpmaxq_v
__builtin_neon_vpmaxqd_f64
__builtin_neon_vpmaxs_f32
__builtin_neon_vpmin_f16
__builtin_neon_vpmin_v
__builtin_neon_vpminnm_f16
__builtin_neon_vpminnm_v
__builtin_neon_vpminnmq_f16
__builtin_neon_vpminnmq_v
__builtin_neon_vpminnmqd_f64
__builtin_neon_vpminnms_f32
__builtin_neon_vpminq_f16
__builtin_neon_vpminq_v
__builtin_neon_vpminqd_f64
__builtin_neon_vpmins_f32
__builtin_neon_vqabs_v
__builtin_neon_vqabsb_s8
ScSc
__builtin_neon_vqabsd_s64
__builtin_neon_vqabsh_s16
__builtin_neon_vqabsq_v
__builtin_neon_vqabss_s32
__builtin_neon_vqadd_v
__builtin_neon_vqaddb_s8
ScScSc
__builtin_neon_vqaddb_u8
UcUcUc
__builtin_neon_vqaddd_s64
__builtin_neon_vqaddd_u64
__builtin_neon_vqaddh_s16
__builtin_neon_vqaddh_u16
UsUsUs
__builtin_neon_vqaddq_v
__builtin_neon_vqadds_s32
__builtin_neon_vqadds_u32
UiUiUi
__builtin_neon_vqdmlal_v
V16ScV16ScV8ScV8Sci
__builtin_neon_vqdmlalh_lane_s16
iisV4sIi
__builtin_neon_vqdmlalh_laneq_s16
iisV8sIi
__builtin_neon_vqdmlalh_s16
iiss
__builtin_neon_vqdmlals_lane_s32
WiWiiV2iIi
__builtin_neon_vqdmlals_laneq_s32
WiWiiV4iIi
__builtin_neon_vqdmlals_s32
WiWiii
__builtin_neon_vqdmlsl_v
__builtin_neon_vqdmlslh_lane_s16
__builtin_neon_vqdmlslh_laneq_s16
__builtin_neon_vqdmlslh_s16
__builtin_neon_vqdmlsls_lane_s32
__builtin_neon_vqdmlsls_laneq_s32
__builtin_neon_vqdmlsls_s32
__builtin_neon_vqdmulh_lane_v
__builtin_neon_vqdmulh_laneq_v
__builtin_neon_vqdmulh_v
__builtin_neon_vqdmulhh_s16
__builtin_neon_vqdmulhq_lane_v
V16ScV16ScV8ScIii
__builtin_neon_vqdmulhq_laneq_v
__builtin_neon_vqdmulhq_v
__builtin_neon_vqdmulhs_s32
__builtin_neon_vqdmull_v
__builtin_neon_vqdmullh_s16
__builtin_neon_vqdmulls_s32
Wiii
__builtin_neon_vqmovn_v
__builtin_neon_vqmovnd_s64
__builtin_neon_vqmovnd_u64
UiUWi
__builtin_neon_vqmovnh_s16
__builtin_neon_vqmovnh_u16
UcUs
__builtin_neon_vqmovns_s32
__builtin_neon_vqmovns_u32
UsUi
__builtin_neon_vqmovun_v
__builtin_neon_vqmovund_s64
UiWi
__builtin_neon_vqmovunh_s16
__builtin_neon_vqmovuns_s32
__builtin_neon_vqneg_v
__builtin_neon_vqnegb_s8
__builtin_neon_vqnegd_s64
__builtin_neon_vqnegh_s16
__builtin_neon_vqnegq_v
__builtin_neon_vqnegs_s32
__builtin_neon_vqrdmlah_v
__builtin_neon_vqrdmlahh_s16
ssss
__builtin_neon_vqrdmlahq_v
__builtin_neon_vqrdmlahs_s32
iiii
__builtin_neon_vqrdmlsh_v
__builtin_neon_vqrdmlshh_s16
__builtin_neon_vqrdmlshq_v
__builtin_neon_vqrdmlshs_s32
__builtin_neon_vqrdmulh_lane_v
__builtin_neon_vqrdmulh_laneq_v
__builtin_neon_vqrdmulh_v
__builtin_neon_vqrdmulhh_s16
__builtin_neon_vqrdmulhq_lane_v
__builtin_neon_vqrdmulhq_laneq_v
__builtin_neon_vqrdmulhq_v
__builtin_neon_vqrdmulhs_s32
__builtin_neon_vqrshl_v
__builtin_neon_vqrshlb_s8
__builtin_neon_vqrshlb_u8
UcUcSc
__builtin_neon_vqrshld_s64
__builtin_neon_vqrshld_u64
UWiUWiWi
__builtin_neon_vqrshlh_s16
__builtin_neon_vqrshlh_u16
UsUss
__builtin_neon_vqrshlq_v
__builtin_neon_vqrshls_s32
__builtin_neon_vqrshls_u32
UiUii
__builtin_neon_vqrshrn_n_v
__builtin_neon_vqrshrnd_n_s64
iWiIi
__builtin_neon_vqrshrnd_n_u64
UiUWiIi
__builtin_neon_vqrshrnh_n_s16
ScsIi
__builtin_neon_vqrshrnh_n_u16
UcUsIi
__builtin_neon_vqrshrns_n_s32
siIi
__builtin_neon_vqrshrns_n_u32
UsUiIi
__builtin_neon_vqrshrun_n_v
__builtin_neon_vqrshrund_n_s64
__builtin_neon_vqrshrunh_n_s16
__builtin_neon_vqrshruns_n_s32
__builtin_neon_vqshl_n_v
__builtin_neon_vqshl_v
__builtin_neon_vqshlb_n_s8
ScScIi
__builtin_neon_vqshlb_n_u8
UcUcIi
__builtin_neon_vqshlb_s8
__builtin_neon_vqshlb_u8
__builtin_neon_vqshld_n_s64
WiWiIi
__builtin_neon_vqshld_n_u64
UWiUWiIi
__builtin_neon_vqshld_s64
__builtin_neon_vqshld_u64
__builtin_neon_vqshlh_n_s16
ssIi
__builtin_neon_vqshlh_n_u16
UsUsIi
__builtin_neon_vqshlh_s16
__builtin_neon_vqshlh_u16
__builtin_neon_vqshlq_n_v
__builtin_neon_vqshlq_v
__builtin_neon_vqshls_n_s32
iiIi
__builtin_neon_vqshls_n_u32
UiUiIi
__builtin_neon_vqshls_s32
__builtin_neon_vqshls_u32
__builtin_neon_vqshlu_n_v
__builtin_neon_vqshlub_n_s8
__builtin_neon_vqshlud_n_s64
__builtin_neon_vqshluh_n_s16
__builtin_neon_vqshluq_n_v
__builtin_neon_vqshlus_n_s32
__builtin_neon_vqshrn_n_v
__builtin_neon_vqshrnd_n_s64
__builtin_neon_vqshrnd_n_u64
__builtin_neon_vqshrnh_n_s16
__builtin_neon_vqshrnh_n_u16
__builtin_neon_vqshrns_n_s32
__builtin_neon_vqshrns_n_u32
__builtin_neon_vqshrun_n_v
__builtin_neon_vqshrund_n_s64
__builtin_neon_vqshrunh_n_s16
__builtin_neon_vqshruns_n_s32
__builtin_neon_vqsub_v
__builtin_neon_vqsubb_s8
__builtin_neon_vqsubb_u8
__builtin_neon_vqsubd_s64
__builtin_neon_vqsubd_u64
__builtin_neon_vqsubh_s16
__builtin_neon_vqsubh_u16
__builtin_neon_vqsubq_v
__builtin_neon_vqsubs_s32
__builtin_neon_vqsubs_u32
__builtin_neon_vqtbl1_v
V8ScV16ScV8Sci
__builtin_neon_vqtbl1q_v
__builtin_neon_vqtbl2_v
V8ScV16ScV16ScV8Sci
__builtin_neon_vqtbl2q_v
__builtin_neon_vqtbl3_v
V8ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbl3q_v
V16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vqtbl4_v
V8ScV16ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbl4q_v
V16ScV16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vqtbx1_v
V8ScV8ScV16ScV8Sci
__builtin_neon_vqtbx1q_v
__builtin_neon_vqtbx2_v
V8ScV8ScV16ScV16ScV8Sci
__builtin_neon_vqtbx2q_v
__builtin_neon_vqtbx3_v
V8ScV8ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbx3q_v
__builtin_neon_vqtbx4_v
V8ScV8ScV16ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbx4q_v
V16ScV16ScV16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vraddhn_v
__builtin_neon_vrax1q_u64
__builtin_neon_vrbit_v
__builtin_neon_vrbitq_v
__builtin_neon_vrecpe_f16
__builtin_neon_vrecpe_v
__builtin_neon_vrecped_f64
__builtin_neon_vrecpeq_f16
__builtin_neon_vrecpeq_v
__builtin_neon_vrecpes_f32
__builtin_neon_vrecps_f16
__builtin_neon_vrecps_v
__builtin_neon_vrecpsd_f64
__builtin_neon_vrecpsq_f16
__builtin_neon_vrecpsq_v
__builtin_neon_vrecpss_f32
__builtin_neon_vrecpxd_f64
__builtin_neon_vrecpxs_f32
__builtin_neon_vrhadd_v
__builtin_neon_vrhaddq_v
__builtin_neon_vrnd32x_v
__builtin_neon_vrnd32xq_v
__builtin_neon_vrnd32z_v
__builtin_neon_vrnd32zq_v
__builtin_neon_vrnd64x_v
__builtin_neon_vrnd64xq_v
__builtin_neon_vrnd64z_v
__builtin_neon_vrnd64zq_v
__builtin_neon_vrnd_f16
__builtin_neon_vrnd_v
__builtin_neon_vrnda_f16
__builtin_neon_vrnda_v
__builtin_neon_vrndaq_f16
__builtin_neon_vrndaq_v
__builtin_neon_vrndi_f16
__builtin_neon_vrndi_v
__builtin_neon_vrndiq_f16
__builtin_neon_vrndiq_v
__builtin_neon_vrndm_f16
__builtin_neon_vrndm_v
__builtin_neon_vrndmq_f16
__builtin_neon_vrndmq_v
__builtin_neon_vrndn_f16
__builtin_neon_vrndn_v
__builtin_neon_vrndnq_f16
__builtin_neon_vrndnq_v
__builtin_neon_vrndns_f32
__builtin_neon_vrndp_f16
__builtin_neon_vrndp_v
__builtin_neon_vrndpq_f16
__builtin_neon_vrndpq_v
__builtin_neon_vrndq_f16
__builtin_neon_vrndq_v
__builtin_neon_vrndx_f16
__builtin_neon_vrndx_v
__builtin_neon_vrndxq_f16
__builtin_neon_vrndxq_v
__builtin_neon_vrshl_v
__builtin_neon_vrshld_s64
__builtin_neon_vrshld_u64
__builtin_neon_vrshlq_v
__builtin_neon_vrshr_n_v
__builtin_neon_vrshrd_n_s64
__builtin_neon_vrshrd_n_u64
__builtin_neon_vrshrn_n_v
__builtin_neon_vrshrq_n_v
__builtin_neon_vrsqrte_f16
__builtin_neon_vrsqrte_v
__builtin_neon_vrsqrted_f64
__builtin_neon_vrsqrteq_f16
__builtin_neon_vrsqrteq_v
__builtin_neon_vrsqrtes_f32
__builtin_neon_vrsqrts_f16
__builtin_neon_vrsqrts_v
__builtin_neon_vrsqrtsd_f64
__builtin_neon_vrsqrtsq_f16
__builtin_neon_vrsqrtsq_v
__builtin_neon_vrsqrtss_f32
__builtin_neon_vrsra_n_v
__builtin_neon_vrsrad_n_s64
WiWiWiIi
__builtin_neon_vrsrad_n_u64
UWiUWiUWiIi
__builtin_neon_vrsraq_n_v
__builtin_neon_vrsubhn_v
__builtin_neon_vset_lane_bf16
V4yyV4yIi
__builtin_neon_vset_lane_f32
V2ffV2fIi
__builtin_neon_vset_lane_f64
V1ddV1dIi
__builtin_neon_vset_lane_i16
V4ssV4sIi
__builtin_neon_vset_lane_i32
V2iiV2iIi
__builtin_neon_vset_lane_i64
V1WiWiV1WiIi
__builtin_neon_vset_lane_i8
V8ScScV8ScIi
__builtin_neon_vsetq_lane_bf16
V8yyV8yIi
__builtin_neon_vsetq_lane_f32
V4ffV4fIi
__builtin_neon_vsetq_lane_f64
V2ddV2dIi
__builtin_neon_vsetq_lane_i16
V8ssV8sIi
__builtin_neon_vsetq_lane_i32
V4iiV4iIi
__builtin_neon_vsetq_lane_i64
V2WiWiV2WiIi
__builtin_neon_vsetq_lane_i8
V16ScScV16ScIi
__builtin_neon_vsha1cq_u32
V4iV4UiUiV4Ui
__builtin_neon_vsha1h_u32
UiUi
__builtin_neon_vsha1mq_u32
__builtin_neon_vsha1pq_u32
__builtin_neon_vsha1su0q_u32
__builtin_neon_vsha1su1q_u32
__builtin_neon_vsha256h2q_u32
__builtin_neon_vsha256hq_u32
__builtin_neon_vsha256su0q_u32
__builtin_neon_vsha256su1q_u32
__builtin_neon_vsha512h2q_u64
__builtin_neon_vsha512hq_u64
__builtin_neon_vsha512su0q_u64
__builtin_neon_vsha512su1q_u64
__builtin_neon_vshl_n_v
__builtin_neon_vshl_v
__builtin_neon_vshld_n_s64
__builtin_neon_vshld_n_u64
__builtin_neon_vshld_s64
__builtin_neon_vshld_u64
__builtin_neon_vshll_n_v
__builtin_neon_vshlq_n_v
__builtin_neon_vshlq_v
__builtin_neon_vshr_n_v
__builtin_neon_vshrd_n_s64
__builtin_neon_vshrd_n_u64
__builtin_neon_vshrn_n_v
__builtin_neon_vshrq_n_v
__builtin_neon_vsli_n_v
__builtin_neon_vslid_n_s64
__builtin_neon_vslid_n_u64
__builtin_neon_vsliq_n_v
__builtin_neon_vsm3partw1q_u32
__builtin_neon_vsm3partw2q_u32
__builtin_neon_vsm3ss1q_u32
__builtin_neon_vsm3tt1aq_u32
__builtin_neon_vsm3tt1bq_u32
__builtin_neon_vsm3tt2aq_u32
__builtin_neon_vsm3tt2bq_u32
__builtin_neon_vsm4ekeyq_u32
__builtin_neon_vsm4eq_u32
__builtin_neon_vsqadd_v
__builtin_neon_vsqaddb_u8
__builtin_neon_vsqaddd_u64
__builtin_neon_vsqaddh_u16
__builtin_neon_vsqaddq_v
__builtin_neon_vsqadds_u32
__builtin_neon_vsqrt_f16
__builtin_neon_vsqrt_v
__builtin_neon_vsqrtq_f16
__builtin_neon_vsqrtq_v
__builtin_neon_vsra_n_v
__builtin_neon_vsrad_n_s64
__builtin_neon_vsrad_n_u64
__builtin_neon_vsraq_n_v
__builtin_neon_vsri_n_v
__builtin_neon_vsrid_n_s64
__builtin_neon_vsrid_n_u64
__builtin_neon_vsriq_n_v
__builtin_neon_vst1_bf16
vv*V8Sci
__builtin_neon_vst1_bf16_x2
vv*V8ScV8Sci
__builtin_neon_vst1_bf16_x3
vv*V8ScV8ScV8Sci
__builtin_neon_vst1_bf16_x4
vv*V8ScV8ScV8ScV8Sci
__builtin_neon_vst1_lane_bf16
vv*V8ScIii
__builtin_neon_vst1_lane_v
__builtin_neon_vst1_v
__builtin_neon_vst1_x2_v
__builtin_neon_vst1_x3_v
__builtin_neon_vst1_x4_v
__builtin_neon_vst1q_bf16
vv*V16Sci
__builtin_neon_vst1q_bf16_x2
vv*V16ScV16Sci
__builtin_neon_vst1q_bf16_x3
vv*V16ScV16ScV16Sci
__builtin_neon_vst1q_bf16_x4
vv*V16ScV16ScV16ScV16Sci
__builtin_neon_vst1q_lane_bf16
vv*V16ScIii
__builtin_neon_vst1q_lane_v
__builtin_neon_vst1q_v
__builtin_neon_vst1q_x2_v
__builtin_neon_vst1q_x3_v
__builtin_neon_vst1q_x4_v
__builtin_neon_vst2_bf16
__builtin_neon_vst2_lane_bf16
vv*V8ScV8ScIii
__builtin_neon_vst2_lane_v
__builtin_neon_vst2_v
__builtin_neon_vst2q_bf16
__builtin_neon_vst2q_lane_bf16
vv*V16ScV16ScIii
__builtin_neon_vst2q_lane_v
__builtin_neon_vst2q_v
__builtin_neon_vst3_bf16
__builtin_neon_vst3_lane_bf16
vv*V8ScV8ScV8ScIii
__builtin_neon_vst3_lane_v
__builtin_neon_vst3_v
__builtin_neon_vst3q_bf16
__builtin_neon_vst3q_lane_bf16
vv*V16ScV16ScV16ScIii
__builtin_neon_vst3q_lane_v
__builtin_neon_vst3q_v
__builtin_neon_vst4_bf16
__builtin_neon_vst4_lane_bf16
vv*V8ScV8ScV8ScV8ScIii
__builtin_neon_vst4_lane_v
__builtin_neon_vst4_v
__builtin_neon_vst4q_bf16
__builtin_neon_vst4q_lane_bf16
vv*V16ScV16ScV16ScV16ScIii
__builtin_neon_vst4q_lane_v
__builtin_neon_vst4q_v
__builtin_neon_vstrq_p128
vv*ULLLi
__builtin_neon_vsubd_s64
__builtin_neon_vsubd_u64
__builtin_neon_vsubhn_v
__builtin_neon_vtbl1_v
__builtin_neon_vtbl2_v
__builtin_neon_vtbl3_v
V8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtbl4_v
V8ScV8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtbx1_v
__builtin_neon_vtbx2_v
__builtin_neon_vtbx3_v
__builtin_neon_vtbx4_v
V8ScV8ScV8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtrn_f16
__builtin_neon_vtrn_v
__builtin_neon_vtrnq_f16
__builtin_neon_vtrnq_v
__builtin_neon_vtst_v
__builtin_neon_vtstd_s64
__builtin_neon_vtstd_u64
__builtin_neon_vtstq_v
__builtin_neon_vuqadd_v
__builtin_neon_vuqaddb_s8
ScScUc
__builtin_neon_vuqaddd_s64
WiWiUWi
__builtin_neon_vuqaddh_s16
ssUs
__builtin_neon_vuqaddq_v
__builtin_neon_vuqadds_s32
iiUi
__builtin_neon_vusdot_s32
__builtin_neon_vusdotq_s32
__builtin_neon_vusmmlaq_s32
__builtin_neon_vuzp_f16
__builtin_neon_vuzp_v
__builtin_neon_vuzpq_f16
__builtin_neon_vuzpq_v
__builtin_neon_vxarq_u64
__builtin_neon_vzip_f16
__builtin_neon_vzip_v
__builtin_neon_vzipq_f16
__builtin_neon_vzipq_v
__builtin_neon_vabdh_f16
__builtin_neon_vabsh_f16
__builtin_neon_vaddh_f16
__builtin_neon_vcageh_f16
Ushh
__builtin_neon_vcagth_f16
__builtin_neon_vcaleh_f16
__builtin_neon_vcalth_f16
__builtin_neon_vceqh_f16
__builtin_neon_vceqzh_f16
__builtin_neon_vcgeh_f16
__builtin_neon_vcgezh_f16
__builtin_neon_vcgth_f16
__builtin_neon_vcgtzh_f16
__builtin_neon_vcleh_f16
__builtin_neon_vclezh_f16
__builtin_neon_vclth_f16
__builtin_neon_vcltzh_f16
__builtin_neon_vcvtah_s16_f16
__builtin_neon_vcvtah_s32_f16
__builtin_neon_vcvtah_s64_f16
__builtin_neon_vcvtah_u16_f16
__builtin_neon_vcvtah_u32_f16
__builtin_neon_vcvtah_u64_f16
UWih
__builtin_neon_vcvth_f16_s16
__builtin_neon_vcvth_f16_s32
__builtin_neon_vcvth_f16_s64
__builtin_neon_vcvth_f16_u16
__builtin_neon_vcvth_f16_u32
__builtin_neon_vcvth_f16_u64
hUWi
__builtin_neon_vcvth_n_f16_s16
hsIi
__builtin_neon_vcvth_n_f16_s32
hiIi
__builtin_neon_vcvth_n_f16_s64
hWiIi
__builtin_neon_vcvth_n_f16_u16
hUsIi
__builtin_neon_vcvth_n_f16_u32
hUiIi
__builtin_neon_vcvth_n_f16_u64
hUWiIi
__builtin_neon_vcvth_n_s16_f16
shIi
__builtin_neon_vcvth_n_s32_f16
ihIi
__builtin_neon_vcvth_n_s64_f16
WihIi
__builtin_neon_vcvth_n_u16_f16
UshIi
__builtin_neon_vcvth_n_u32_f16
UihIi
__builtin_neon_vcvth_n_u64_f16
UWihIi
__builtin_neon_vcvth_s16_f16
__builtin_neon_vcvth_s32_f16
__builtin_neon_vcvth_s64_f16
__builtin_neon_vcvth_u16_f16
__builtin_neon_vcvth_u32_f16
__builtin_neon_vcvth_u64_f16
__builtin_neon_vcvtmh_s16_f16
__builtin_neon_vcvtmh_s32_f16
__builtin_neon_vcvtmh_s64_f16
__builtin_neon_vcvtmh_u16_f16
__builtin_neon_vcvtmh_u32_f16
__builtin_neon_vcvtmh_u64_f16
__builtin_neon_vcvtnh_s16_f16
__builtin_neon_vcvtnh_s32_f16
__builtin_neon_vcvtnh_s64_f16
__builtin_neon_vcvtnh_u16_f16
__builtin_neon_vcvtnh_u32_f16
__builtin_neon_vcvtnh_u64_f16
__builtin_neon_vcvtph_s16_f16
__builtin_neon_vcvtph_s32_f16
__builtin_neon_vcvtph_s64_f16
__builtin_neon_vcvtph_u16_f16
__builtin_neon_vcvtph_u32_f16
__builtin_neon_vcvtph_u64_f16
__builtin_neon_vdivh_f16
__builtin_neon_vfmah_f16
hhhh
__builtin_neon_vfmsh_f16
__builtin_neon_vmaxh_f16
__builtin_neon_vmaxnmh_f16
__builtin_neon_vminh_f16
__builtin_neon_vminnmh_f16
__builtin_neon_vmulh_f16
__builtin_neon_vmulxh_f16
__builtin_neon_vnegh_f16
__builtin_neon_vrecpeh_f16
__builtin_neon_vrecpsh_f16
__builtin_neon_vrecpxh_f16
__builtin_neon_vrndah_f16
__builtin_neon_vrndh_f16
__builtin_neon_vrndih_f16
__builtin_neon_vrndmh_f16
__builtin_neon_vrndnh_f16
__builtin_neon_vrndph_f16
__builtin_neon_vrndxh_f16
__builtin_neon_vrsqrteh_f16
__builtin_neon_vrsqrtsh_f16
__builtin_neon_vsqrth_f16
__builtin_neon_vsubh_f16
__builtin_sve_svaba_n_s16
q8sq8sq8ss
__builtin_sve_svaba_n_s32
q4iq4iq4ii
__builtin_sve_svaba_n_s64
q2Wiq2Wiq2WiWi
__builtin_sve_svaba_n_s8
q16Scq16Scq16ScSc
__builtin_sve_svaba_n_u16
q8Usq8Usq8UsUs
__builtin_sve_svaba_n_u32
q4Uiq4Uiq4UiUi
__builtin_sve_svaba_n_u64
q2UWiq2UWiq2UWiUWi
__builtin_sve_svaba_n_u8
q16Ucq16Ucq16UcUc
__builtin_sve_svaba_s16
q8sq8sq8sq8s
__builtin_sve_svaba_s32
q4iq4iq4iq4i
__builtin_sve_svaba_s64
q2Wiq2Wiq2Wiq2Wi
__builtin_sve_svaba_s8
q16Scq16Scq16Scq16Sc
__builtin_sve_svaba_u16
q8Usq8Usq8Usq8Us
__builtin_sve_svaba_u32
q4Uiq4Uiq4Uiq4Ui
__builtin_sve_svaba_u64
q2UWiq2UWiq2UWiq2UWi
__builtin_sve_svaba_u8
q16Ucq16Ucq16Ucq16Uc
__builtin_sve_svabalb_n_s16
q8sq8sq16ScSc
__builtin_sve_svabalb_n_s32
q4iq4iq8ss
__builtin_sve_svabalb_n_s64
q2Wiq2Wiq4ii
__builtin_sve_svabalb_n_u16
q8Usq8Usq16UcUc
__builtin_sve_svabalb_n_u32
q4Uiq4Uiq8UsUs
__builtin_sve_svabalb_n_u64
q2UWiq2UWiq4UiUi
__builtin_sve_svabalb_s16
q8sq8sq16Scq16Sc
__builtin_sve_svabalb_s32
q4iq4iq8sq8s
__builtin_sve_svabalb_s64
q2Wiq2Wiq4iq4i
__builtin_sve_svabalb_u16
q8Usq8Usq16Ucq16Uc
__builtin_sve_svabalb_u32
q4Uiq4Uiq8Usq8Us
__builtin_sve_svabalb_u64
q2UWiq2UWiq4Uiq4Ui
__builtin_sve_svabalt_n_s16
__builtin_sve_svabalt_n_s32
__builtin_sve_svabalt_n_s64
__builtin_sve_svabalt_n_u16
__builtin_sve_svabalt_n_u32
__builtin_sve_svabalt_n_u64
__builtin_sve_svabalt_s16
__builtin_sve_svabalt_s32
__builtin_sve_svabalt_s64
__builtin_sve_svabalt_u16
__builtin_sve_svabalt_u32
__builtin_sve_svabalt_u64
__builtin_sve_svabd_f16_m
q8hq16bq8hq8h
__builtin_sve_svabd_f16_x
__builtin_sve_svabd_f16_z
__builtin_sve_svabd_f32_m
q4fq16bq4fq4f
__builtin_sve_svabd_f32_x
__builtin_sve_svabd_f32_z
__builtin_sve_svabd_f64_m
q2dq16bq2dq2d
__builtin_sve_svabd_f64_x
__builtin_sve_svabd_f64_z
__builtin_sve_svabd_n_f16_m
q8hq16bq8hh
__builtin_sve_svabd_n_f16_x
__builtin_sve_svabd_n_f16_z
__builtin_sve_svabd_n_f32_m
q4fq16bq4ff
__builtin_sve_svabd_n_f32_x
__builtin_sve_svabd_n_f32_z
__builtin_sve_svabd_n_f64_m
q2dq16bq2dd
__builtin_sve_svabd_n_f64_x
__builtin_sve_svabd_n_f64_z
__builtin_sve_svabd_n_s16_m
q8sq16bq8ss
__builtin_sve_svabd_n_s16_x
__builtin_sve_svabd_n_s16_z
__builtin_sve_svabd_n_s32_m
q4iq16bq4ii
__builtin_sve_svabd_n_s32_x
__builtin_sve_svabd_n_s32_z
__builtin_sve_svabd_n_s64_m
q2Wiq16bq2WiWi
__builtin_sve_svabd_n_s64_x
__builtin_sve_svabd_n_s64_z
__builtin_sve_svabd_n_s8_m
q16Scq16bq16ScSc
__builtin_sve_svabd_n_s8_x
__builtin_sve_svabd_n_s8_z
__builtin_sve_svabd_n_u16_m
q8Usq16bq8UsUs
__builtin_sve_svabd_n_u16_x
__builtin_sve_svabd_n_u16_z
__builtin_sve_svabd_n_u32_m
q4Uiq16bq4UiUi
__builtin_sve_svabd_n_u32_x
__builtin_sve_svabd_n_u32_z
__builtin_sve_svabd_n_u64_m
q2UWiq16bq2UWiUWi
__builtin_sve_svabd_n_u64_x
__builtin_sve_svabd_n_u64_z
__builtin_sve_svabd_n_u8_m
q16Ucq16bq16UcUc
__builtin_sve_svabd_n_u8_x
__builtin_sve_svabd_n_u8_z
__builtin_sve_svabd_s16_m
q8sq16bq8sq8s
__builtin_sve_svabd_s16_x
__builtin_sve_svabd_s16_z
__builtin_sve_svabd_s32_m
q4iq16bq4iq4i
__builtin_sve_svabd_s32_x
__builtin_sve_svabd_s32_z
__builtin_sve_svabd_s64_m
q2Wiq16bq2Wiq2Wi
__builtin_sve_svabd_s64_x
__builtin_sve_svabd_s64_z
__builtin_sve_svabd_s8_m
q16Scq16bq16Scq16Sc
__builtin_sve_svabd_s8_x
__builtin_sve_svabd_s8_z
__builtin_sve_svabd_u16_m
q8Usq16bq8Usq8Us
__builtin_sve_svabd_u16_x
__builtin_sve_svabd_u16_z
__builtin_sve_svabd_u32_m
q4Uiq16bq4Uiq4Ui
__builtin_sve_svabd_u32_x
__builtin_sve_svabd_u32_z
__builtin_sve_svabd_u64_m
q2UWiq16bq2UWiq2UWi
__builtin_sve_svabd_u64_x
__builtin_sve_svabd_u64_z
__builtin_sve_svabd_u8_m
q16Ucq16bq16Ucq16Uc
__builtin_sve_svabd_u8_x
__builtin_sve_svabd_u8_z
__builtin_sve_svabdlb_n_s16
q8sq16ScSc
__builtin_sve_svabdlb_n_s32
q4iq8ss
__builtin_sve_svabdlb_n_s64
q2Wiq4ii
__builtin_sve_svabdlb_n_u16
q8Usq16UcUc
__builtin_sve_svabdlb_n_u32
q4Uiq8UsUs
__builtin_sve_svabdlb_n_u64
q2UWiq4UiUi
__builtin_sve_svabdlb_s16
q8sq16Scq16Sc
__builtin_sve_svabdlb_s32
q4iq8sq8s
__builtin_sve_svabdlb_s64
q2Wiq4iq4i
__builtin_sve_svabdlb_u16
q8Usq16Ucq16Uc
__builtin_sve_svabdlb_u32
q4Uiq8Usq8Us
__builtin_sve_svabdlb_u64
q2UWiq4Uiq4Ui
__builtin_sve_svabdlt_n_s16
__builtin_sve_svabdlt_n_s32
__builtin_sve_svabdlt_n_s64
__builtin_sve_svabdlt_n_u16
__builtin_sve_svabdlt_n_u32
__builtin_sve_svabdlt_n_u64
__builtin_sve_svabdlt_s16
__builtin_sve_svabdlt_s32
__builtin_sve_svabdlt_s64
__builtin_sve_svabdlt_u16
__builtin_sve_svabdlt_u32
__builtin_sve_svabdlt_u64
__builtin_sve_svabs_f16_m
q8hq8hq16bq8h
__builtin_sve_svabs_f16_x
q8hq16bq8h
__builtin_sve_svabs_f16_z
__builtin_sve_svabs_f32_m
q4fq4fq16bq4f
__builtin_sve_svabs_f32_x
q4fq16bq4f
__builtin_sve_svabs_f32_z
__builtin_sve_svabs_f64_m
q2dq2dq16bq2d
__builtin_sve_svabs_f64_x
q2dq16bq2d
__builtin_sve_svabs_f64_z
__builtin_sve_svabs_s16_m
q8sq8sq16bq8s
__builtin_sve_svabs_s16_x
q8sq16bq8s
__builtin_sve_svabs_s16_z
__builtin_sve_svabs_s32_m
q4iq4iq16bq4i
__builtin_sve_svabs_s32_x
q4iq16bq4i
__builtin_sve_svabs_s32_z
__builtin_sve_svabs_s64_m
q2Wiq2Wiq16bq2Wi
__builtin_sve_svabs_s64_x
q2Wiq16bq2Wi
__builtin_sve_svabs_s64_z
__builtin_sve_svabs_s8_m
q16Scq16Scq16bq16Sc
__builtin_sve_svabs_s8_x
q16Scq16bq16Sc
__builtin_sve_svabs_s8_z
__builtin_sve_svacge_f16
q16bq16bq8hq8h
__builtin_sve_svacge_f32
q16bq16bq4fq4f
__builtin_sve_svacge_f64
q16bq16bq2dq2d
__builtin_sve_svacge_n_f16
q16bq16bq8hh
__builtin_sve_svacge_n_f32
q16bq16bq4ff
__builtin_sve_svacge_n_f64
q16bq16bq2dd
__builtin_sve_svacgt_f16
__builtin_sve_svacgt_f32
__builtin_sve_svacgt_f64
__builtin_sve_svacgt_n_f16
__builtin_sve_svacgt_n_f32
__builtin_sve_svacgt_n_f64
__builtin_sve_svacle_f16
__builtin_sve_svacle_f32
__builtin_sve_svacle_f64
__builtin_sve_svacle_n_f16
__builtin_sve_svacle_n_f32
__builtin_sve_svacle_n_f64
__builtin_sve_svaclt_f16
__builtin_sve_svaclt_f32
__builtin_sve_svaclt_f64
__builtin_sve_svaclt_n_f16
__builtin_sve_svaclt_n_f32
__builtin_sve_svaclt_n_f64
__builtin_sve_svadalp_s16_m
q8sq16bq8sq16Sc
__builtin_sve_svadalp_s16_x
__builtin_sve_svadalp_s16_z
__builtin_sve_svadalp_s32_m
q4iq16bq4iq8s
__builtin_sve_svadalp_s32_x
__builtin_sve_svadalp_s32_z
__builtin_sve_svadalp_s64_m
q2Wiq16bq2Wiq4i
__builtin_sve_svadalp_s64_x
__builtin_sve_svadalp_s64_z
__builtin_sve_svadalp_u16_m
q8Usq16bq8Usq16Uc
__builtin_sve_svadalp_u16_x
__builtin_sve_svadalp_u16_z
__builtin_sve_svadalp_u32_m
q4Uiq16bq4Uiq8Us
__builtin_sve_svadalp_u32_x
__builtin_sve_svadalp_u32_z
__builtin_sve_svadalp_u64_m
q2UWiq16bq2UWiq4Ui
__builtin_sve_svadalp_u64_x
__builtin_sve_svadalp_u64_z
__builtin_sve_svadclb_n_u32
__builtin_sve_svadclb_n_u64
__builtin_sve_svadclb_u32
__builtin_sve_svadclb_u64
__builtin_sve_svadclt_n_u32
__builtin_sve_svadclt_n_u64
__builtin_sve_svadclt_u32
__builtin_sve_svadclt_u64
__builtin_sve_svadd_f16_m
__builtin_sve_svadd_f16_x
__builtin_sve_svadd_f16_z
__builtin_sve_svadd_f32_m
__builtin_sve_svadd_f32_x
__builtin_sve_svadd_f32_z
__builtin_sve_svadd_f64_m
__builtin_sve_svadd_f64_x
__builtin_sve_svadd_f64_z
__builtin_sve_svadd_n_f16_m
__builtin_sve_svadd_n_f16_x
__builtin_sve_svadd_n_f16_z
__builtin_sve_svadd_n_f32_m
__builtin_sve_svadd_n_f32_x
__builtin_sve_svadd_n_f32_z
__builtin_sve_svadd_n_f64_m
__builtin_sve_svadd_n_f64_x
__builtin_sve_svadd_n_f64_z
__builtin_sve_svadd_n_s16_m
__builtin_sve_svadd_n_s16_x
__builtin_sve_svadd_n_s16_z
__builtin_sve_svadd_n_s32_m
__builtin_sve_svadd_n_s32_x
__builtin_sve_svadd_n_s32_z
__builtin_sve_svadd_n_s64_m
__builtin_sve_svadd_n_s64_x
__builtin_sve_svadd_n_s64_z
__builtin_sve_svadd_n_s8_m
__builtin_sve_svadd_n_s8_x
__builtin_sve_svadd_n_s8_z
__builtin_sve_svadd_n_u16_m
__builtin_sve_svadd_n_u16_x
__builtin_sve_svadd_n_u16_z
__builtin_sve_svadd_n_u32_m
__builtin_sve_svadd_n_u32_x
__builtin_sve_svadd_n_u32_z
__builtin_sve_svadd_n_u64_m
__builtin_sve_svadd_n_u64_x
__builtin_sve_svadd_n_u64_z
__builtin_sve_svadd_n_u8_m
__builtin_sve_svadd_n_u8_x
__builtin_sve_svadd_n_u8_z
__builtin_sve_svadd_s16_m
__builtin_sve_svadd_s16_x
__builtin_sve_svadd_s16_z
__builtin_sve_svadd_s32_m
__builtin_sve_svadd_s32_x
__builtin_sve_svadd_s32_z
__builtin_sve_svadd_s64_m
__builtin_sve_svadd_s64_x
__builtin_sve_svadd_s64_z
__builtin_sve_svadd_s8_m
__builtin_sve_svadd_s8_x
__builtin_sve_svadd_s8_z
__builtin_sve_svadd_u16_m
__builtin_sve_svadd_u16_x
__builtin_sve_svadd_u16_z
__builtin_sve_svadd_u32_m
__builtin_sve_svadd_u32_x
__builtin_sve_svadd_u32_z
__builtin_sve_svadd_u64_m
__builtin_sve_svadd_u64_x
__builtin_sve_svadd_u64_z
__builtin_sve_svadd_u8_m
__builtin_sve_svadd_u8_x
__builtin_sve_svadd_u8_z
__builtin_sve_svadda_f16
hq16bhq8h
__builtin_sve_svadda_f32
fq16bfq4f
__builtin_sve_svadda_f64
dq16bdq2d
__builtin_sve_svaddhnb_n_s16
q16Scq8ss
__builtin_sve_svaddhnb_n_s32
q8sq4ii
__builtin_sve_svaddhnb_n_s64
q4iq2WiWi
__builtin_sve_svaddhnb_n_u16
q16Ucq8UsUs
__builtin_sve_svaddhnb_n_u32
q8Usq4UiUi
__builtin_sve_svaddhnb_n_u64
q4Uiq2UWiUWi
__builtin_sve_svaddhnb_s16
q16Scq8sq8s
__builtin_sve_svaddhnb_s32
q8sq4iq4i
__builtin_sve_svaddhnb_s64
q4iq2Wiq2Wi
__builtin_sve_svaddhnb_u16
q16Ucq8Usq8Us
__builtin_sve_svaddhnb_u32
q8Usq4Uiq4Ui
__builtin_sve_svaddhnb_u64
q4Uiq2UWiq2UWi
__builtin_sve_svaddhnt_n_s16
q16Scq16Scq8ss
__builtin_sve_svaddhnt_n_s32
q8sq8sq4ii
__builtin_sve_svaddhnt_n_s64
q4iq4iq2WiWi
__builtin_sve_svaddhnt_n_u16
q16Ucq16Ucq8UsUs
__builtin_sve_svaddhnt_n_u32
q8Usq8Usq4UiUi
__builtin_sve_svaddhnt_n_u64
q4Uiq4Uiq2UWiUWi
__builtin_sve_svaddhnt_s16
q16Scq16Scq8sq8s
__builtin_sve_svaddhnt_s32
q8sq8sq4iq4i
__builtin_sve_svaddhnt_s64
q4iq4iq2Wiq2Wi
__builtin_sve_svaddhnt_u16
q16Ucq16Ucq8Usq8Us
__builtin_sve_svaddhnt_u32
q8Usq8Usq4Uiq4Ui
__builtin_sve_svaddhnt_u64
q4Uiq4Uiq2UWiq2UWi
__builtin_sve_svaddlb_n_s16
__builtin_sve_svaddlb_n_s32
__builtin_sve_svaddlb_n_s64
__builtin_sve_svaddlb_n_u16
__builtin_sve_svaddlb_n_u32
__builtin_sve_svaddlb_n_u64
__builtin_sve_svaddlb_s16
__builtin_sve_svaddlb_s32
__builtin_sve_svaddlb_s64
__builtin_sve_svaddlb_u16
__builtin_sve_svaddlb_u32
__builtin_sve_svaddlb_u64
__builtin_sve_svaddlbt_n_s16
__builtin_sve_svaddlbt_n_s32
__builtin_sve_svaddlbt_n_s64
__builtin_sve_svaddlbt_s16
__builtin_sve_svaddlbt_s32
__builtin_sve_svaddlbt_s64
__builtin_sve_svaddlt_n_s16
__builtin_sve_svaddlt_n_s32
__builtin_sve_svaddlt_n_s64
__builtin_sve_svaddlt_n_u16
__builtin_sve_svaddlt_n_u32
__builtin_sve_svaddlt_n_u64
__builtin_sve_svaddlt_s16
__builtin_sve_svaddlt_s32
__builtin_sve_svaddlt_s64
__builtin_sve_svaddlt_u16
__builtin_sve_svaddlt_u32
__builtin_sve_svaddlt_u64
__builtin_sve_svaddp_f16_m
__builtin_sve_svaddp_f16_x
__builtin_sve_svaddp_f32_m
__builtin_sve_svaddp_f32_x
__builtin_sve_svaddp_f64_m
__builtin_sve_svaddp_f64_x
__builtin_sve_svaddp_s16_m
__builtin_sve_svaddp_s16_x
__builtin_sve_svaddp_s32_m
__builtin_sve_svaddp_s32_x
__builtin_sve_svaddp_s64_m
__builtin_sve_svaddp_s64_x
__builtin_sve_svaddp_s8_m
__builtin_sve_svaddp_s8_x
__builtin_sve_svaddp_u16_m
__builtin_sve_svaddp_u16_x
__builtin_sve_svaddp_u32_m
__builtin_sve_svaddp_u32_x
__builtin_sve_svaddp_u64_m
__builtin_sve_svaddp_u64_x
__builtin_sve_svaddp_u8_m
__builtin_sve_svaddp_u8_x
__builtin_sve_svaddv_f16
hq16bq8h
__builtin_sve_svaddv_f32
fq16bq4f
__builtin_sve_svaddv_f64
dq16bq2d
__builtin_sve_svaddv_s16
Wiq16bq8s
__builtin_sve_svaddv_s32
Wiq16bq4i
__builtin_sve_svaddv_s64
Wiq16bq2Wi
__builtin_sve_svaddv_s8
Wiq16bq16Sc
__builtin_sve_svaddv_u16
UWiq16bq8Us
__builtin_sve_svaddv_u32
UWiq16bq4Ui
__builtin_sve_svaddv_u64
UWiq16bq2UWi
__builtin_sve_svaddv_u8
UWiq16bq16Uc
__builtin_sve_svaddwb_n_s16
q8sq8sSc
__builtin_sve_svaddwb_n_s32
q4iq4is
__builtin_sve_svaddwb_n_s64
q2Wiq2Wii
__builtin_sve_svaddwb_n_u16
q8Usq8UsUc
__builtin_sve_svaddwb_n_u32
q4Uiq4UiUs
__builtin_sve_svaddwb_n_u64
q2UWiq2UWiUi
__builtin_sve_svaddwb_s16
q8sq8sq16Sc
__builtin_sve_svaddwb_s32
q4iq4iq8s
__builtin_sve_svaddwb_s64
q2Wiq2Wiq4i
__builtin_sve_svaddwb_u16
q8Usq8Usq16Uc
__builtin_sve_svaddwb_u32
q4Uiq4Uiq8Us
__builtin_sve_svaddwb_u64
q2UWiq2UWiq4Ui
__builtin_sve_svaddwt_n_s16
__builtin_sve_svaddwt_n_s32
__builtin_sve_svaddwt_n_s64
__builtin_sve_svaddwt_n_u16
__builtin_sve_svaddwt_n_u32
__builtin_sve_svaddwt_n_u64
__builtin_sve_svaddwt_s16
__builtin_sve_svaddwt_s32
__builtin_sve_svaddwt_s64
__builtin_sve_svaddwt_u16
__builtin_sve_svaddwt_u32
__builtin_sve_svaddwt_u64
__builtin_sve_svadrb_u32base_s32offset
q4Uiq4Uiq4i
__builtin_sve_svadrb_u32base_u32offset
q4Uiq4Uiq4Ui
__builtin_sve_svadrb_u64base_s64offset
q2UWiq2UWiq2Wi
__builtin_sve_svadrb_u64base_u64offset
q2UWiq2UWiq2UWi
__builtin_sve_svadrd_u32base_s32index
__builtin_sve_svadrd_u32base_u32index
__builtin_sve_svadrd_u64base_s64index
__builtin_sve_svadrd_u64base_u64index
__builtin_sve_svadrh_u32base_s32index
__builtin_sve_svadrh_u32base_u32index
__builtin_sve_svadrh_u64base_s64index
__builtin_sve_svadrh_u64base_u64index
__builtin_sve_svadrw_u32base_s32index
__builtin_sve_svadrw_u32base_u32index
__builtin_sve_svadrw_u64base_s64index
__builtin_sve_svadrw_u64base_u64index
__builtin_sve_svaesd_u8
q16Ucq16Ucq16Uc
__builtin_sve_svaese_u8
__builtin_sve_svaesimc_u8
q16Ucq16Uc
__builtin_sve_svaesmc_u8
__builtin_sve_svand_b_z
q16bq16bq16bq16b
__builtin_sve_svand_n_s16_m
__builtin_sve_svand_n_s16_x
__builtin_sve_svand_n_s16_z
__builtin_sve_svand_n_s32_m
__builtin_sve_svand_n_s32_x
__builtin_sve_svand_n_s32_z
__builtin_sve_svand_n_s64_m
__builtin_sve_svand_n_s64_x
__builtin_sve_svand_n_s64_z
__builtin_sve_svand_n_s8_m
__builtin_sve_svand_n_s8_x
__builtin_sve_svand_n_s8_z
__builtin_sve_svand_n_u16_m
__builtin_sve_svand_n_u16_x
__builtin_sve_svand_n_u16_z
__builtin_sve_svand_n_u32_m
__builtin_sve_svand_n_u32_x
__builtin_sve_svand_n_u32_z
__builtin_sve_svand_n_u64_m
__builtin_sve_svand_n_u64_x
__builtin_sve_svand_n_u64_z
__builtin_sve_svand_n_u8_m
__builtin_sve_svand_n_u8_x
__builtin_sve_svand_n_u8_z
__builtin_sve_svand_s16_m
__builtin_sve_svand_s16_x
__builtin_sve_svand_s16_z
__builtin_sve_svand_s32_m
__builtin_sve_svand_s32_x
__builtin_sve_svand_s32_z
__builtin_sve_svand_s64_m
__builtin_sve_svand_s64_x
__builtin_sve_svand_s64_z
__builtin_sve_svand_s8_m
__builtin_sve_svand_s8_x
__builtin_sve_svand_s8_z
__builtin_sve_svand_u16_m
__builtin_sve_svand_u16_x
__builtin_sve_svand_u16_z
__builtin_sve_svand_u32_m
__builtin_sve_svand_u32_x
__builtin_sve_svand_u32_z
__builtin_sve_svand_u64_m
__builtin_sve_svand_u64_x
__builtin_sve_svand_u64_z
__builtin_sve_svand_u8_m
__builtin_sve_svand_u8_x
__builtin_sve_svand_u8_z
__builtin_sve_svandv_s16
sq16bq8s
__builtin_sve_svandv_s32
iq16bq4i
__builtin_sve_svandv_s64
__builtin_sve_svandv_s8
Scq16bq16Sc
__builtin_sve_svandv_u16
Usq16bq8Us
__builtin_sve_svandv_u32
Uiq16bq4Ui
__builtin_sve_svandv_u64
__builtin_sve_svandv_u8
Ucq16bq16Uc
__builtin_sve_svasr_n_s16_m
q8sq16bq8sUs
__builtin_sve_svasr_n_s16_x
__builtin_sve_svasr_n_s16_z
__builtin_sve_svasr_n_s32_m
q4iq16bq4iUi
__builtin_sve_svasr_n_s32_x
__builtin_sve_svasr_n_s32_z
__builtin_sve_svasr_n_s64_m
q2Wiq16bq2WiUWi
__builtin_sve_svasr_n_s64_x
__builtin_sve_svasr_n_s64_z
__builtin_sve_svasr_n_s8_m
q16Scq16bq16ScUc
__builtin_sve_svasr_n_s8_x
__builtin_sve_svasr_n_s8_z
__builtin_sve_svasr_s16_m
q8sq16bq8sq8Us
__builtin_sve_svasr_s16_x
__builtin_sve_svasr_s16_z
__builtin_sve_svasr_s32_m
q4iq16bq4iq4Ui
__builtin_sve_svasr_s32_x
__builtin_sve_svasr_s32_z
__builtin_sve_svasr_s64_m
q2Wiq16bq2Wiq2UWi
__builtin_sve_svasr_s64_x
__builtin_sve_svasr_s64_z
__builtin_sve_svasr_s8_m
q16Scq16bq16Scq16Uc
__builtin_sve_svasr_s8_x
__builtin_sve_svasr_s8_z
__builtin_sve_svasr_wide_n_s16_m
q8sq16bq8sUWi
__builtin_sve_svasr_wide_n_s16_x
__builtin_sve_svasr_wide_n_s16_z
__builtin_sve_svasr_wide_n_s32_m
q4iq16bq4iUWi
__builtin_sve_svasr_wide_n_s32_x
__builtin_sve_svasr_wide_n_s32_z
__builtin_sve_svasr_wide_n_s8_m
q16Scq16bq16ScUWi
__builtin_sve_svasr_wide_n_s8_x
__builtin_sve_svasr_wide_n_s8_z
__builtin_sve_svasr_wide_s16_m
q8sq16bq8sq2UWi
__builtin_sve_svasr_wide_s16_x
__builtin_sve_svasr_wide_s16_z
__builtin_sve_svasr_wide_s32_m
q4iq16bq4iq2UWi
__builtin_sve_svasr_wide_s32_x
__builtin_sve_svasr_wide_s32_z
__builtin_sve_svasr_wide_s8_m
q16Scq16bq16Scq2UWi
__builtin_sve_svasr_wide_s8_x
__builtin_sve_svasr_wide_s8_z
__builtin_sve_svasrd_n_s16_m
q8sq16bq8sIUWi
__builtin_sve_svasrd_n_s16_x
__builtin_sve_svasrd_n_s16_z
__builtin_sve_svasrd_n_s32_m
q4iq16bq4iIUWi
__builtin_sve_svasrd_n_s32_x
__builtin_sve_svasrd_n_s32_z
__builtin_sve_svasrd_n_s64_m
q2Wiq16bq2WiIUWi
__builtin_sve_svasrd_n_s64_x
__builtin_sve_svasrd_n_s64_z
__builtin_sve_svasrd_n_s8_m
q16Scq16bq16ScIUWi
__builtin_sve_svasrd_n_s8_x
__builtin_sve_svasrd_n_s8_z
__builtin_sve_svbcax_n_s16
__builtin_sve_svbcax_n_s32
__builtin_sve_svbcax_n_s64
__builtin_sve_svbcax_n_s8
__builtin_sve_svbcax_n_u16
__builtin_sve_svbcax_n_u32
__builtin_sve_svbcax_n_u64
__builtin_sve_svbcax_n_u8
__builtin_sve_svbcax_s16
__builtin_sve_svbcax_s32
__builtin_sve_svbcax_s64
__builtin_sve_svbcax_s8
__builtin_sve_svbcax_u16
__builtin_sve_svbcax_u32
__builtin_sve_svbcax_u64
__builtin_sve_svbcax_u8
__builtin_sve_svbdep_n_u16
q8Usq8UsUs
__builtin_sve_svbdep_n_u32
q4Uiq4UiUi
__builtin_sve_svbdep_n_u64
q2UWiq2UWiUWi
__builtin_sve_svbdep_n_u8
q16Ucq16UcUc
__builtin_sve_svbdep_u16
q8Usq8Usq8Us
__builtin_sve_svbdep_u32
__builtin_sve_svbdep_u64
__builtin_sve_svbdep_u8
__builtin_sve_svbext_n_u16
__builtin_sve_svbext_n_u32
__builtin_sve_svbext_n_u64
__builtin_sve_svbext_n_u8
__builtin_sve_svbext_u16
__builtin_sve_svbext_u32
__builtin_sve_svbext_u64
__builtin_sve_svbext_u8
__builtin_sve_svbfdot_f32
q4fq4fq8yq8y
__builtin_sve_svbfdot_lane_f32
q4fq4fq8yq8yUWi
__builtin_sve_svbfdot_n_f32
q4fq4fq8yy
__builtin_sve_svbfmlalb_f32
__builtin_sve_svbfmlalb_lane_f32
__builtin_sve_svbfmlalb_n_f32
__builtin_sve_svbfmlalt_f32
__builtin_sve_svbfmlalt_lane_f32
__builtin_sve_svbfmlalt_n_f32
__builtin_sve_svbfmmla_f32
__builtin_sve_svbgrp_n_u16
__builtin_sve_svbgrp_n_u32
__builtin_sve_svbgrp_n_u64
__builtin_sve_svbgrp_n_u8
__builtin_sve_svbgrp_u16
__builtin_sve_svbgrp_u32
__builtin_sve_svbgrp_u64
__builtin_sve_svbgrp_u8
__builtin_sve_svbic_b_z
__builtin_sve_svbic_n_s16_m
__builtin_sve_svbic_n_s16_x
__builtin_sve_svbic_n_s16_z
__builtin_sve_svbic_n_s32_m
__builtin_sve_svbic_n_s32_x
__builtin_sve_svbic_n_s32_z
__builtin_sve_svbic_n_s64_m
__builtin_sve_svbic_n_s64_x
__builtin_sve_svbic_n_s64_z
__builtin_sve_svbic_n_s8_m
__builtin_sve_svbic_n_s8_x
__builtin_sve_svbic_n_s8_z
__builtin_sve_svbic_n_u16_m
__builtin_sve_svbic_n_u16_x
__builtin_sve_svbic_n_u16_z
__builtin_sve_svbic_n_u32_m
__builtin_sve_svbic_n_u32_x
__builtin_sve_svbic_n_u32_z
__builtin_sve_svbic_n_u64_m
__builtin_sve_svbic_n_u64_x
__builtin_sve_svbic_n_u64_z
__builtin_sve_svbic_n_u8_m
__builtin_sve_svbic_n_u8_x
__builtin_sve_svbic_n_u8_z
__builtin_sve_svbic_s16_m
__builtin_sve_svbic_s16_x
__builtin_sve_svbic_s16_z
__builtin_sve_svbic_s32_m
__builtin_sve_svbic_s32_x
__builtin_sve_svbic_s32_z
__builtin_sve_svbic_s64_m
__builtin_sve_svbic_s64_x
__builtin_sve_svbic_s64_z
__builtin_sve_svbic_s8_m
__builtin_sve_svbic_s8_x
__builtin_sve_svbic_s8_z
__builtin_sve_svbic_u16_m
__builtin_sve_svbic_u16_x
__builtin_sve_svbic_u16_z
__builtin_sve_svbic_u32_m
__builtin_sve_svbic_u32_x
__builtin_sve_svbic_u32_z
__builtin_sve_svbic_u64_m
__builtin_sve_svbic_u64_x
__builtin_sve_svbic_u64_z
__builtin_sve_svbic_u8_m
__builtin_sve_svbic_u8_x
__builtin_sve_svbic_u8_z
__builtin_sve_svbrka_b_m
__builtin_sve_svbrka_b_z
q16bq16bq16b
__builtin_sve_svbrkb_b_m
__builtin_sve_svbrkb_b_z
__builtin_sve_svbrkn_b_z
__builtin_sve_svbrkpa_b_z
__builtin_sve_svbrkpb_b_z
__builtin_sve_svbsl1n_n_s16
__builtin_sve_svbsl1n_n_s32
__builtin_sve_svbsl1n_n_s64
__builtin_sve_svbsl1n_n_s8
__builtin_sve_svbsl1n_n_u16
__builtin_sve_svbsl1n_n_u32
__builtin_sve_svbsl1n_n_u64
__builtin_sve_svbsl1n_n_u8
__builtin_sve_svbsl1n_s16
__builtin_sve_svbsl1n_s32
__builtin_sve_svbsl1n_s64
__builtin_sve_svbsl1n_s8
webassembly
__builtin_sve_svbsl1n_u16
__builtin_sve_svbsl1n_u32
__builtin_sve_svbsl1n_u64
__builtin_sve_svbsl1n_u8
__builtin_sve_svbsl2n_n_s16
__builtin_sve_svbsl2n_n_s32
__builtin_sve_svbsl2n_n_s64
__builtin_sve_svbsl2n_n_s8
__builtin_sve_svbsl2n_n_u16
__builtin_sve_svbsl2n_n_u32
__builtin_sve_svbsl2n_n_u64
__builtin_sve_svbsl2n_n_u8
__builtin_sve_svbsl2n_s16
__builtin_sve_svbsl2n_s32
__builtin_sve_svbsl2n_s64
__builtin_sve_svbsl2n_s8
__builtin_sve_svbsl2n_u16
__builtin_sve_svbsl2n_u32
__builtin_sve_svbsl2n_u64
__builtin_sve_svbsl2n_u8
__builtin_sve_svbsl_n_s16
__builtin_sve_svbsl_n_s32
__builtin_sve_svbsl_n_s64
__builtin_sve_svbsl_n_s8
__builtin_sve_svbsl_n_u16
__builtin_sve_svbsl_n_u32
__builtin_sve_svbsl_n_u64
__builtin_sve_svbsl_n_u8
__builtin_sve_svbsl_s16
__builtin_sve_svbsl_s32
__builtin_sve_svbsl_s64
__builtin_sve_svbsl_s8
__builtin_sve_svbsl_u16
__builtin_sve_svbsl_u32
__builtin_sve_svbsl_u64
__builtin_sve_svbsl_u8
__builtin_sve_svcadd_f16_m
q8hq16bq8hq8hIUWi
__builtin_sve_svcadd_f16_x
__builtin_sve_svcadd_f16_z
__builtin_sve_svcadd_f32_m
q4fq16bq4fq4fIUWi
__builtin_sve_svcadd_f32_x
__builtin_sve_svcadd_f32_z
__builtin_sve_svcadd_f64_m
q2dq16bq2dq2dIUWi
__builtin_sve_svcadd_f64_x
__builtin_sve_svcadd_f64_z
__builtin_sve_svcadd_s16
q8sq8sq8sIUWi
__builtin_sve_svcadd_s32
q4iq4iq4iIUWi
__builtin_sve_svcadd_s64
q2Wiq2Wiq2WiIUWi
__builtin_sve_svcadd_s8
q16Scq16Scq16ScIUWi
__builtin_sve_svcadd_u16
q8Usq8Usq8UsIUWi
__builtin_sve_svcadd_u32
q4Uiq4Uiq4UiIUWi
__builtin_sve_svcadd_u64
q2UWiq2UWiq2UWiIUWi
__builtin_sve_svcadd_u8
q16Ucq16Ucq16UcIUWi
__builtin_sve_svcdot_lane_s32
q4iq4iq16Scq16ScIUWiIUWi
__builtin_sve_svcdot_lane_s64
q2Wiq2Wiq8sq8sIUWiIUWi
__builtin_sve_svcdot_s32
q4iq4iq16Scq16ScIUWi
__builtin_sve_svcdot_s64
q2Wiq2Wiq8sq8sIUWi
__builtin_sve_svclasta_bf16
q8yq16bq8yq8y
__builtin_sve_svclasta_f16
__builtin_sve_svclasta_f32
__builtin_sve_svclasta_f64
__builtin_sve_svclasta_n_bf16
yq16byq8y
__builtin_sve_svclasta_n_f16
__builtin_sve_svclasta_n_f32
__builtin_sve_svclasta_n_f64
__builtin_sve_svclasta_n_s16
sq16bsq8s
__builtin_sve_svclasta_n_s32
iq16biq4i
__builtin_sve_svclasta_n_s64
Wiq16bWiq2Wi
__builtin_sve_svclasta_n_s8
Scq16bScq16Sc
__builtin_sve_svclasta_n_u16
Usq16bUsq8Us
__builtin_sve_svclasta_n_u32
Uiq16bUiq4Ui
__builtin_sve_svclasta_n_u64
UWiq16bUWiq2UWi
__builtin_sve_svclasta_n_u8
Ucq16bUcq16Uc
__builtin_sve_svclasta_s16
__builtin_sve_svclasta_s32
__builtin_sve_svclasta_s64
__builtin_sve_svclasta_s8
__builtin_sve_svclasta_u16
__builtin_sve_svclasta_u32
__builtin_sve_svclasta_u64
__builtin_sve_svclasta_u8
__builtin_sve_svclastb_bf16
__builtin_sve_svclastb_f16
__builtin_sve_svclastb_f32
__builtin_sve_svclastb_f64
__builtin_sve_svclastb_n_bf16
__builtin_sve_svclastb_n_f16
__builtin_sve_svclastb_n_f32
__builtin_sve_svclastb_n_f64
__builtin_sve_svclastb_n_s16
__builtin_sve_svclastb_n_s32
__builtin_sve_svclastb_n_s64
__builtin_sve_svclastb_n_s8
__builtin_sve_svclastb_n_u16
__builtin_sve_svclastb_n_u32
__builtin_sve_svclastb_n_u64
__builtin_sve_svclastb_n_u8
__builtin_sve_svclastb_s16
__builtin_sve_svclastb_s32
__builtin_sve_svclastb_s64
__builtin_sve_svclastb_s8
__builtin_sve_svclastb_u16
__builtin_sve_svclastb_u32
__builtin_sve_svclastb_u64
__builtin_sve_svclastb_u8
__builtin_sve_svcls_s16_m
q8Usq8Usq16bq8s
__builtin_sve_svcls_s16_x
q8Usq16bq8s
__builtin_sve_svcls_s16_z
__builtin_sve_svcls_s32_m
q4Uiq4Uiq16bq4i
__builtin_sve_svcls_s32_x
q4Uiq16bq4i
__builtin_sve_svcls_s32_z
__builtin_sve_svcls_s64_m
q2UWiq2UWiq16bq2Wi
__builtin_sve_svcls_s64_x
q2UWiq16bq2Wi
__builtin_sve_svcls_s64_z
__builtin_sve_svcls_s8_m
q16Ucq16Ucq16bq16Sc
__builtin_sve_svcls_s8_x
q16Ucq16bq16Sc
__builtin_sve_svcls_s8_z
__builtin_sve_svclz_s16_m
__builtin_sve_svclz_s16_x
__builtin_sve_svclz_s16_z
__builtin_sve_svclz_s32_m
__builtin_sve_svclz_s32_x
__builtin_sve_svclz_s32_z
__builtin_sve_svclz_s64_m
__builtin_sve_svclz_s64_x
__builtin_sve_svclz_s64_z
__builtin_sve_svclz_s8_m
__builtin_sve_svclz_s8_x
__builtin_sve_svclz_s8_z
__builtin_sve_svclz_u16_m
q8Usq8Usq16bq8Us
__builtin_sve_svclz_u16_x
q8Usq16bq8Us
__builtin_sve_svclz_u16_z
__builtin_sve_svclz_u32_m
q4Uiq4Uiq16bq4Ui
__builtin_sve_svclz_u32_x
q4Uiq16bq4Ui
__builtin_sve_svclz_u32_z
__builtin_sve_svclz_u64_m
q2UWiq2UWiq16bq2UWi
__builtin_sve_svclz_u64_x
q2UWiq16bq2UWi
__builtin_sve_svclz_u64_z
__builtin_sve_svclz_u8_m
q16Ucq16Ucq16bq16Uc
__builtin_sve_svclz_u8_x
q16Ucq16bq16Uc
__builtin_sve_svclz_u8_z
__builtin_sve_svcmla_f16_m
q8hq16bq8hq8hq8hIUWi
__builtin_sve_svcmla_f16_x
__builtin_sve_svcmla_f16_z
__builtin_sve_svcmla_f32_m
q4fq16bq4fq4fq4fIUWi
__builtin_sve_svcmla_f32_x
__builtin_sve_svcmla_f32_z
__builtin_sve_svcmla_f64_m
q2dq16bq2dq2dq2dIUWi
__builtin_sve_svcmla_f64_x
__builtin_sve_svcmla_f64_z
__builtin_sve_svcmla_lane_f16
q8hq8hq8hq8hIUWiIUWi
__builtin_sve_svcmla_lane_f32
q4fq4fq4fq4fIUWiIUWi
__builtin_sve_svcmla_lane_s16
q8sq8sq8sq8sIUWiIUWi
__builtin_sve_svcmla_lane_s32
q4iq4iq4iq4iIUWiIUWi
__builtin_sve_svcmla_lane_u16
q8Usq8Usq8Usq8UsIUWiIUWi
__builtin_sve_svcmla_lane_u32
q4Uiq4Uiq4Uiq4UiIUWiIUWi
__builtin_sve_svcmla_s16
q8sq8sq8sq8sIUWi
__builtin_sve_svcmla_s32
q4iq4iq4iq4iIUWi
__builtin_sve_svcmla_s64
q2Wiq2Wiq2Wiq2WiIUWi
__builtin_sve_svcmla_s8
q16Scq16Scq16Scq16ScIUWi
__builtin_sve_svcmla_u16
q8Usq8Usq8Usq8UsIUWi
__builtin_sve_svcmla_u32
q4Uiq4Uiq4Uiq4UiIUWi
__builtin_sve_svcmla_u64
q2UWiq2UWiq2UWiq2UWiIUWi
__builtin_sve_svcmla_u8
q16Ucq16Ucq16Ucq16UcIUWi
__builtin_sve_svcmpeq_f16
__builtin_sve_svcmpeq_f32
__builtin_sve_svcmpeq_f64
__builtin_sve_svcmpeq_n_f16
__builtin_sve_svcmpeq_n_f32
__builtin_sve_svcmpeq_n_f64
__builtin_sve_svcmpeq_n_s16
q16bq16bq8ss
__builtin_sve_svcmpeq_n_s32
q16bq16bq4ii
__builtin_sve_svcmpeq_n_s64
q16bq16bq2WiWi
__builtin_sve_svcmpeq_n_s8
q16bq16bq16ScSc
__builtin_sve_svcmpeq_n_u16
q16bq16bq8UsUs
__builtin_sve_svcmpeq_n_u32
q16bq16bq4UiUi
__builtin_sve_svcmpeq_n_u64
q16bq16bq2UWiUWi
__builtin_sve_svcmpeq_n_u8
q16bq16bq16UcUc
__builtin_sve_svcmpeq_s16
q16bq16bq8sq8s
__builtin_sve_svcmpeq_s32
q16bq16bq4iq4i
__builtin_sve_svcmpeq_s64
q16bq16bq2Wiq2Wi
__builtin_sve_svcmpeq_s8
q16bq16bq16Scq16Sc
__builtin_sve_svcmpeq_u16
q16bq16bq8Usq8Us
__builtin_sve_svcmpeq_u32
q16bq16bq4Uiq4Ui
__builtin_sve_svcmpeq_u64
q16bq16bq2UWiq2UWi
__builtin_sve_svcmpeq_u8
q16bq16bq16Ucq16Uc
__builtin_sve_svcmpeq_wide_n_s16
q16bq16bq8sWi
__builtin_sve_svcmpeq_wide_n_s32
q16bq16bq4iWi
__builtin_sve_svcmpeq_wide_n_s8
q16bq16bq16ScWi
__builtin_sve_svcmpeq_wide_s16
q16bq16bq8sq2Wi
__builtin_sve_svcmpeq_wide_s32
q16bq16bq4iq2Wi
__builtin_sve_svcmpeq_wide_s8
q16bq16bq16Scq2Wi
__builtin_sve_svcmpge_f16
__builtin_sve_svcmpge_f32
__builtin_sve_svcmpge_f64
__builtin_sve_svcmpge_n_f16
__builtin_sve_svcmpge_n_f32
__builtin_sve_svcmpge_n_f64
__builtin_sve_svcmpge_n_s16
__builtin_sve_svcmpge_n_s32
__builtin_sve_svcmpge_n_s64
__builtin_sve_svcmpge_n_s8
__builtin_sve_svcmpge_n_u16
__builtin_sve_svcmpge_n_u32
__builtin_sve_svcmpge_n_u64
__builtin_sve_svcmpge_n_u8
__builtin_sve_svcmpge_s16
__builtin_sve_svcmpge_s32
__builtin_sve_svcmpge_s64
__builtin_sve_svcmpge_s8
__builtin_sve_svcmpge_u16
__builtin_sve_svcmpge_u32
__builtin_sve_svcmpge_u64
__builtin_sve_svcmpge_u8
__builtin_sve_svcmpge_wide_n_s16
__builtin_sve_svcmpge_wide_n_s32
__builtin_sve_svcmpge_wide_n_s8
__builtin_sve_svcmpge_wide_n_u16
q16bq16bq8UsUWi
__builtin_sve_svcmpge_wide_n_u32
q16bq16bq4UiUWi
__builtin_sve_svcmpge_wide_n_u8
q16bq16bq16UcUWi
__builtin_sve_svcmpge_wide_s16
__builtin_sve_svcmpge_wide_s32
__builtin_sve_svcmpge_wide_s8
__builtin_sve_svcmpge_wide_u16
q16bq16bq8Usq2UWi
__builtin_sve_svcmpge_wide_u32
q16bq16bq4Uiq2UWi
__builtin_sve_svcmpge_wide_u8
q16bq16bq16Ucq2UWi
__builtin_sve_svcmpgt_f16
__builtin_sve_svcmpgt_f32
__builtin_sve_svcmpgt_f64
__builtin_sve_svcmpgt_n_f16
__builtin_sve_svcmpgt_n_f32
__builtin_sve_svcmpgt_n_f64
__builtin_sve_svcmpgt_n_s16
__builtin_sve_svcmpgt_n_s32
__builtin_sve_svcmpgt_n_s64
__builtin_sve_svcmpgt_n_s8
__builtin_sve_svcmpgt_n_u16
__builtin_sve_svcmpgt_n_u32
__builtin_sve_svcmpgt_n_u64
__builtin_sve_svcmpgt_n_u8
__builtin_sve_svcmpgt_s16
__builtin_sve_svcmpgt_s32
__builtin_sve_svcmpgt_s64
__builtin_sve_svcmpgt_s8
__builtin_sve_svcmpgt_u16
__builtin_sve_svcmpgt_u32
__builtin_sve_svcmpgt_u64
__builtin_sve_svcmpgt_u8
__builtin_sve_svcmpgt_wide_n_s16
__builtin_sve_svcmpgt_wide_n_s32
__builtin_sve_svcmpgt_wide_n_s8
__builtin_sve_svcmpgt_wide_n_u16
__builtin_sve_svcmpgt_wide_n_u32
__builtin_sve_svcmpgt_wide_n_u8
__builtin_sve_svcmpgt_wide_s16
__builtin_sve_svcmpgt_wide_s32
__builtin_sve_svcmpgt_wide_s8
__builtin_sve_svcmpgt_wide_u16
__builtin_sve_svcmpgt_wide_u32
__builtin_sve_svcmpgt_wide_u8
__builtin_sve_svcmple_f16
__builtin_sve_svcmple_f32
__builtin_sve_svcmple_f64
__builtin_sve_svcmple_n_f16
__builtin_sve_svcmple_n_f32
__builtin_sve_svcmple_n_f64
__builtin_sve_svcmple_n_s16
__builtin_sve_svcmple_n_s32
__builtin_sve_svcmple_n_s64
__builtin_sve_svcmple_n_s8
__builtin_sve_svcmple_n_u16
__builtin_sve_svcmple_n_u32
__builtin_sve_svcmple_n_u64
__builtin_sve_svcmple_n_u8
__builtin_sve_svcmple_s16
__builtin_sve_svcmple_s32
__builtin_sve_svcmple_s64
__builtin_sve_svcmple_s8
__builtin_sve_svcmple_u16
__builtin_sve_svcmple_u32
__builtin_sve_svcmple_u64
__builtin_sve_svcmple_u8
__builtin_sve_svcmple_wide_n_s16
__builtin_sve_svcmple_wide_n_s32
__builtin_sve_svcmple_wide_n_s8
__builtin_sve_svcmple_wide_n_u16
__builtin_sve_svcmple_wide_n_u32
__builtin_sve_svcmple_wide_n_u8
__builtin_sve_svcmple_wide_s16
__builtin_sve_svcmple_wide_s32
__builtin_sve_svcmple_wide_s8
__builtin_sve_svcmple_wide_u16
__builtin_sve_svcmple_wide_u32
__builtin_sve_svcmple_wide_u8
__builtin_sve_svcmplt_f16
__builtin_sve_svcmplt_f32
__builtin_sve_svcmplt_f64
__builtin_sve_svcmplt_n_f16
__builtin_sve_svcmplt_n_f32
__builtin_sve_svcmplt_n_f64
__builtin_sve_svcmplt_n_s16
__builtin_sve_svcmplt_n_s32
__builtin_sve_svcmplt_n_s64
__builtin_sve_svcmplt_n_s8
__builtin_sve_svcmplt_n_u16
__builtin_sve_svcmplt_n_u32
__builtin_sve_svcmplt_n_u64
__builtin_sve_svcmplt_n_u8
__builtin_sve_svcmplt_s16
__builtin_sve_svcmplt_s32
__builtin_sve_svcmplt_s64
__builtin_sve_svcmplt_s8
__builtin_sve_svcmplt_u16
__builtin_sve_svcmplt_u32
__builtin_sve_svcmplt_u64
__builtin_sve_svcmplt_u8
__builtin_sve_svcmplt_wide_n_s16
__builtin_sve_svcmplt_wide_n_s32
__builtin_sve_svcmplt_wide_n_s8
__builtin_sve_svcmplt_wide_n_u16
__builtin_sve_svcmplt_wide_n_u32
__builtin_sve_svcmplt_wide_n_u8
__builtin_sve_svcmplt_wide_s16
__builtin_sve_svcmplt_wide_s32
__builtin_sve_svcmplt_wide_s8
__builtin_sve_svcmplt_wide_u16
__builtin_sve_svcmplt_wide_u32
__builtin_sve_svcmplt_wide_u8
__builtin_sve_svcmpne_f16
__builtin_sve_svcmpne_f32
__builtin_sve_svcmpne_f64
__builtin_sve_svcmpne_n_f16
__builtin_sve_svcmpne_n_f32
__builtin_sve_svcmpne_n_f64
__builtin_sve_svcmpne_n_s16
__builtin_sve_svcmpne_n_s32
__builtin_sve_svcmpne_n_s64
__builtin_sve_svcmpne_n_s8
__builtin_sve_svcmpne_n_u16
__builtin_sve_svcmpne_n_u32
__builtin_sve_svcmpne_n_u64
__builtin_sve_svcmpne_n_u8
__builtin_sve_svcmpne_s16
__builtin_sve_svcmpne_s32
__builtin_sve_svcmpne_s64
__builtin_sve_svcmpne_s8
__builtin_sve_svcmpne_u16
__builtin_sve_svcmpne_u32
__builtin_sve_svcmpne_u64
__builtin_sve_svcmpne_u8
__builtin_sve_svcmpne_wide_n_s16
__builtin_sve_svcmpne_wide_n_s32
__builtin_sve_svcmpne_wide_n_s8
__builtin_sve_svcmpne_wide_s16
__builtin_sve_svcmpne_wide_s32
__builtin_sve_svcmpne_wide_s8
__builtin_sve_svcmpuo_f16
__builtin_sve_svcmpuo_f32
__builtin_sve_svcmpuo_f64
__builtin_sve_svcmpuo_n_f16
__builtin_sve_svcmpuo_n_f32
__builtin_sve_svcmpuo_n_f64
__builtin_sve_svcnot_s16_m
__builtin_sve_svcnot_s16_x
__builtin_sve_svcnot_s16_z
__builtin_sve_svcnot_s32_m
__builtin_sve_svcnot_s32_x
__builtin_sve_svcnot_s32_z
__builtin_sve_svcnot_s64_m
__builtin_sve_svcnot_s64_x
__builtin_sve_svcnot_s64_z
__builtin_sve_svcnot_s8_m
__builtin_sve_svcnot_s8_x
__builtin_sve_svcnot_s8_z
__builtin_sve_svcnot_u16_m
__builtin_sve_svcnot_u16_x
__builtin_sve_svcnot_u16_z
__builtin_sve_svcnot_u32_m
__builtin_sve_svcnot_u32_x
__builtin_sve_svcnot_u32_z
__builtin_sve_svcnot_u64_m
__builtin_sve_svcnot_u64_x
__builtin_sve_svcnot_u64_z
__builtin_sve_svcnot_u8_m
__builtin_sve_svcnot_u8_x
__builtin_sve_svcnot_u8_z
__builtin_sve_svcnt_bf16_m
q8Usq8Usq16bq8y
__builtin_sve_svcnt_bf16_x
q8Usq16bq8y
__builtin_sve_svcnt_bf16_z
__builtin_sve_svcnt_f16_m
q8Usq8Usq16bq8h
__builtin_sve_svcnt_f16_x
q8Usq16bq8h
__builtin_sve_svcnt_f16_z
__builtin_sve_svcnt_f32_m
q4Uiq4Uiq16bq4f
__builtin_sve_svcnt_f32_x
q4Uiq16bq4f
__builtin_sve_svcnt_f32_z
__builtin_sve_svcnt_f64_m
q2UWiq2UWiq16bq2d
__builtin_sve_svcnt_f64_x
q2UWiq16bq2d
__builtin_sve_svcnt_f64_z
__builtin_sve_svcnt_s16_m
__builtin_sve_svcnt_s16_x
__builtin_sve_svcnt_s16_z
__builtin_sve_svcnt_s32_m
__builtin_sve_svcnt_s32_x
__builtin_sve_svcnt_s32_z
__builtin_sve_svcnt_s64_m
__builtin_sve_svcnt_s64_x
__builtin_sve_svcnt_s64_z
__builtin_sve_svcnt_s8_m
__builtin_sve_svcnt_s8_x
__builtin_sve_svcnt_s8_z
__builtin_sve_svcnt_u16_m
__builtin_sve_svcnt_u16_x
__builtin_sve_svcnt_u16_z
__builtin_sve_svcnt_u32_m
__builtin_sve_svcnt_u32_x
__builtin_sve_svcnt_u32_z
__builtin_sve_svcnt_u64_m
__builtin_sve_svcnt_u64_x
__builtin_sve_svcnt_u64_z
__builtin_sve_svcnt_u8_m
__builtin_sve_svcnt_u8_x
__builtin_sve_svcnt_u8_z
__builtin_sve_svcntb
UWiv
__builtin_sve_svcntb_pat
UWiIi
__builtin_sve_svcntd
__builtin_sve_svcntd_pat
__builtin_sve_svcnth
__builtin_sve_svcnth_pat
__builtin_sve_svcntp_b16
UWiq16bq16b
__builtin_sve_svcntp_b32
__builtin_sve_svcntp_b64
__builtin_sve_svcntp_b8
__builtin_sve_svcntw
__builtin_sve_svcntw_pat
__builtin_sve_svcompact_f32
__builtin_sve_svcompact_f64
__builtin_sve_svcompact_s32
__builtin_sve_svcompact_s64
__builtin_sve_svcompact_u32
__builtin_sve_svcompact_u64
__builtin_sve_svcreate2_bf16
q16yq8yq8y
__builtin_sve_svcreate2_f16
q16hq8hq8h
__builtin_sve_svcreate2_f32
q8fq4fq4f
__builtin_sve_svcreate2_f64
q4dq2dq2d
__builtin_sve_svcreate2_s16
q16sq8sq8s
__builtin_sve_svcreate2_s32
q8iq4iq4i
__builtin_sve_svcreate2_s64
q4Wiq2Wiq2Wi
__builtin_sve_svcreate2_s8
q32Scq16Scq16Sc
__builtin_sve_svcreate2_u16
q16Usq8Usq8Us
__builtin_sve_svcreate2_u32
q8Uiq4Uiq4Ui
__builtin_sve_svcreate2_u64
q4UWiq2UWiq2UWi
__builtin_sve_svcreate2_u8
q32Ucq16Ucq16Uc
__builtin_sve_svcreate3_bf16
q24yq8yq8yq8y
__builtin_sve_svcreate3_f16
q24hq8hq8hq8h
__builtin_sve_svcreate3_f32
q12fq4fq4fq4f
__builtin_sve_svcreate3_f64
q6dq2dq2dq2d
__builtin_sve_svcreate3_s16
q24sq8sq8sq8s
__builtin_sve_svcreate3_s32
q12iq4iq4iq4i
__builtin_sve_svcreate3_s64
q6Wiq2Wiq2Wiq2Wi
__builtin_sve_svcreate3_s8
q48Scq16Scq16Scq16Sc
__builtin_sve_svcreate3_u16
q24Usq8Usq8Usq8Us
__builtin_sve_svcreate3_u32
q12Uiq4Uiq4Uiq4Ui
__builtin_sve_svcreate3_u64
q6UWiq2UWiq2UWiq2UWi
__builtin_sve_svcreate3_u8
q48Ucq16Ucq16Ucq16Uc
__builtin_sve_svcreate4_bf16
q32yq8yq8yq8yq8y
__builtin_sve_svcreate4_f16
q32hq8hq8hq8hq8h
__builtin_sve_svcreate4_f32
q16fq4fq4fq4fq4f
__builtin_sve_svcreate4_f64
q8dq2dq2dq2dq2d
__builtin_sve_svcreate4_s16
q32sq8sq8sq8sq8s
__builtin_sve_svcreate4_s32
q16iq4iq4iq4iq4i
__builtin_sve_svcreate4_s64
q8Wiq2Wiq2Wiq2Wiq2Wi
__builtin_sve_svcreate4_s8
q64Scq16Scq16Scq16Scq16Sc
__builtin_sve_svcreate4_u16
q32Usq8Usq8Usq8Usq8Us
__builtin_sve_svcreate4_u32
q16Uiq4Uiq4Uiq4Uiq4Ui
__builtin_sve_svcreate4_u64
q8UWiq2UWiq2UWiq2UWiq2UWi
__builtin_sve_svcreate4_u8
q64Ucq16Ucq16Ucq16Ucq16Uc
__builtin_sve_svcvt_bf16_f32_m
q8yq8yq16bq4f
__builtin_sve_svcvt_bf16_f32_x
q8yq16bq4f
__builtin_sve_svcvt_bf16_f32_z
__builtin_sve_svcvt_f16_f32_m
q8hq8hq16bq4f
__builtin_sve_svcvt_f16_f32_x
q8hq16bq4f
__builtin_sve_svcvt_f16_f32_z
__builtin_sve_svcvt_f16_f64_m
q8hq8hq16bq2d
__builtin_sve_svcvt_f16_f64_x
q8hq16bq2d
__builtin_sve_svcvt_f16_f64_z
__builtin_sve_svcvt_f16_s16_m
q8hq8hq16bq8s
__builtin_sve_svcvt_f16_s16_x
q8hq16bq8s
__builtin_sve_svcvt_f16_s16_z
__builtin_sve_svcvt_f16_s32_m
q8hq8hq16bq4i
__builtin_sve_svcvt_f16_s32_x
q8hq16bq4i
__builtin_sve_svcvt_f16_s32_z
__builtin_sve_svcvt_f16_s64_m
q8hq8hq16bq2Wi
__builtin_sve_svcvt_f16_s64_x
q8hq16bq2Wi
__builtin_sve_svcvt_f16_s64_z
__builtin_sve_svcvt_f16_u16_m
q8hq8hq16bq8Us
__builtin_sve_svcvt_f16_u16_x
q8hq16bq8Us
__builtin_sve_svcvt_f16_u16_z
__builtin_sve_svcvt_f16_u32_m
q8hq8hq16bq4Ui
__builtin_sve_svcvt_f16_u32_x
q8hq16bq4Ui
__builtin_sve_svcvt_f16_u32_z
__builtin_sve_svcvt_f16_u64_m
q8hq8hq16bq2UWi
__builtin_sve_svcvt_f16_u64_x
q8hq16bq2UWi
__builtin_sve_svcvt_f16_u64_z
__builtin_sve_svcvt_f32_f16_m
q4fq4fq16bq8h
__builtin_sve_svcvt_f32_f16_x
q4fq16bq8h
__builtin_sve_svcvt_f32_f16_z
__builtin_sve_svcvt_f32_f64_m
q4fq4fq16bq2d
__builtin_sve_svcvt_f32_f64_x
q4fq16bq2d
__builtin_sve_svcvt_f32_f64_z
__builtin_sve_svcvt_f32_s32_m
q4fq4fq16bq4i
__builtin_sve_svcvt_f32_s32_x
q4fq16bq4i
__builtin_sve_svcvt_f32_s32_z
__builtin_sve_svcvt_f32_s64_m
q4fq4fq16bq2Wi
__builtin_sve_svcvt_f32_s64_x
q4fq16bq2Wi
__builtin_sve_svcvt_f32_s64_z
__builtin_sve_svcvt_f32_u32_m
q4fq4fq16bq4Ui
__builtin_sve_svcvt_f32_u32_x
q4fq16bq4Ui
__builtin_sve_svcvt_f32_u32_z
__builtin_sve_svcvt_f32_u64_m
q4fq4fq16bq2UWi
__builtin_sve_svcvt_f32_u64_x
q4fq16bq2UWi
__builtin_sve_svcvt_f32_u64_z
__builtin_sve_svcvt_f64_f16_m
q2dq2dq16bq8h
__builtin_sve_svcvt_f64_f16_x
q2dq16bq8h
__builtin_sve_svcvt_f64_f16_z
__builtin_sve_svcvt_f64_f32_m
q2dq2dq16bq4f
__builtin_sve_svcvt_f64_f32_x
q2dq16bq4f
__builtin_sve_svcvt_f64_f32_z
__builtin_sve_svcvt_f64_s32_m
q2dq2dq16bq4i
__builtin_sve_svcvt_f64_s32_x
q2dq16bq4i
__builtin_sve_svcvt_f64_s32_z
__builtin_sve_svcvt_f64_s64_m
q2dq2dq16bq2Wi
__builtin_sve_svcvt_f64_s64_x
q2dq16bq2Wi
__builtin_sve_svcvt_f64_s64_z
__builtin_sve_svcvt_f64_u32_m
q2dq2dq16bq4Ui
__builtin_sve_svcvt_f64_u32_x
q2dq16bq4Ui
__builtin_sve_svcvt_f64_u32_z
__builtin_sve_svcvt_f64_u64_m
q2dq2dq16bq2UWi
__builtin_sve_svcvt_f64_u64_x
q2dq16bq2UWi
__builtin_sve_svcvt_f64_u64_z
__builtin_sve_svcvt_s16_f16_m
q8sq8sq16bq8h
__builtin_sve_svcvt_s16_f16_x
q8sq16bq8h
__builtin_sve_svcvt_s16_f16_z
__builtin_sve_svcvt_s32_f16_m
q4iq4iq16bq8h
__builtin_sve_svcvt_s32_f16_x
q4iq16bq8h
__builtin_sve_svcvt_s32_f16_z
__builtin_sve_svcvt_s32_f32_m
q4iq4iq16bq4f
__builtin_sve_svcvt_s32_f32_x
q4iq16bq4f
__builtin_sve_svcvt_s32_f32_z
__builtin_sve_svcvt_s32_f64_m
q4iq4iq16bq2d
__builtin_sve_svcvt_s32_f64_x
q4iq16bq2d
__builtin_sve_svcvt_s32_f64_z
__builtin_sve_svcvt_s64_f16_m
q2Wiq2Wiq16bq8h
__builtin_sve_svcvt_s64_f16_x
q2Wiq16bq8h
__builtin_sve_svcvt_s64_f16_z
__builtin_sve_svcvt_s64_f32_m
q2Wiq2Wiq16bq4f
__builtin_sve_svcvt_s64_f32_x
q2Wiq16bq4f
__builtin_sve_svcvt_s64_f32_z
__builtin_sve_svcvt_s64_f64_m
q2Wiq2Wiq16bq2d
__builtin_sve_svcvt_s64_f64_x
q2Wiq16bq2d
__builtin_sve_svcvt_s64_f64_z
__builtin_sve_svcvt_u16_f16_m
__builtin_sve_svcvt_u16_f16_x
__builtin_sve_svcvt_u16_f16_z
__builtin_sve_svcvt_u32_f16_m
q4Uiq4Uiq16bq8h
__builtin_sve_svcvt_u32_f16_x
q4Uiq16bq8h
__builtin_sve_svcvt_u32_f16_z
__builtin_sve_svcvt_u32_f32_m
__builtin_sve_svcvt_u32_f32_x
__builtin_sve_svcvt_u32_f32_z
__builtin_sve_svcvt_u32_f64_m
q4Uiq4Uiq16bq2d
__builtin_sve_svcvt_u32_f64_x
q4Uiq16bq2d
__builtin_sve_svcvt_u32_f64_z
__builtin_sve_svcvt_u64_f16_m
q2UWiq2UWiq16bq8h
__builtin_sve_svcvt_u64_f16_x
q2UWiq16bq8h
__builtin_sve_svcvt_u64_f16_z
__builtin_sve_svcvt_u64_f32_m
q2UWiq2UWiq16bq4f
__builtin_sve_svcvt_u64_f32_x
q2UWiq16bq4f
__builtin_sve_svcvt_u64_f32_z
__builtin_sve_svcvt_u64_f64_m
__builtin_sve_svcvt_u64_f64_x
__builtin_sve_svcvt_u64_f64_z
__builtin_sve_svcvtlt_f32_f16_m
__builtin_sve_svcvtlt_f32_f16_x
__builtin_sve_svcvtlt_f64_f32_m
__builtin_sve_svcvtlt_f64_f32_x
__builtin_sve_svcvtnt_bf16_f32_m
__builtin_sve_svcvtnt_f16_f32_m
__builtin_sve_svcvtnt_f32_f64_m
__builtin_sve_svcvtx_f32_f64_m
__builtin_sve_svcvtx_f32_f64_x
__builtin_sve_svcvtx_f32_f64_z
__builtin_sve_svcvtxnt_f32_f64_m
__builtin_sve_svdiv_f16_m
__builtin_sve_svdiv_f16_x
__builtin_sve_svdiv_f16_z
__builtin_sve_svdiv_f32_m
__builtin_sve_svdiv_f32_x
__builtin_sve_svdiv_f32_z
__builtin_sve_svdiv_f64_m
__builtin_sve_svdiv_f64_x
__builtin_sve_svdiv_f64_z
__builtin_sve_svdiv_n_f16_m
__builtin_sve_svdiv_n_f16_x
__builtin_sve_svdiv_n_f16_z
__builtin_sve_svdiv_n_f32_m
__builtin_sve_svdiv_n_f32_x
__builtin_sve_svdiv_n_f32_z
__builtin_sve_svdiv_n_f64_m
__builtin_sve_svdiv_n_f64_x
__builtin_sve_svdiv_n_f64_z
__builtin_sve_svdiv_n_s32_m
__builtin_sve_svdiv_n_s32_x
__builtin_sve_svdiv_n_s32_z
__builtin_sve_svdiv_n_s64_m
__builtin_sve_svdiv_n_s64_x
__builtin_sve_svdiv_n_s64_z
__builtin_sve_svdiv_n_u32_m
__builtin_sve_svdiv_n_u32_x
__builtin_sve_svdiv_n_u32_z
__builtin_sve_svdiv_n_u64_m
__builtin_sve_svdiv_n_u64_x
__builtin_sve_svdiv_n_u64_z
__builtin_sve_svdiv_s32_m
__builtin_sve_svdiv_s32_x
__builtin_sve_svdiv_s32_z
__builtin_sve_svdiv_s64_m
__builtin_sve_svdiv_s64_x
__builtin_sve_svdiv_s64_z
__builtin_sve_svdiv_u32_m
__builtin_sve_svdiv_u32_x
__builtin_sve_svdiv_u32_z
__builtin_sve_svdiv_u64_m
__builtin_sve_svdiv_u64_x
__builtin_sve_svdiv_u64_z
__builtin_sve_svdivr_f16_m
__builtin_sve_svdivr_f16_x
__builtin_sve_svdivr_f16_z
__builtin_sve_svdivr_f32_m
__builtin_sve_svdivr_f32_x
__builtin_sve_svdivr_f32_z
__builtin_sve_svdivr_f64_m
__builtin_sve_svdivr_f64_x
__builtin_sve_svdivr_f64_z
__builtin_sve_svdivr_n_f16_m
__builtin_sve_svdivr_n_f16_x
__builtin_sve_svdivr_n_f16_z
__builtin_sve_svdivr_n_f32_m
__builtin_sve_svdivr_n_f32_x
__builtin_sve_svdivr_n_f32_z
__builtin_sve_svdivr_n_f64_m
__builtin_sve_svdivr_n_f64_x
__builtin_sve_svdivr_n_f64_z
__builtin_sve_svdivr_n_s32_m
__builtin_sve_svdivr_n_s32_x
__builtin_sve_svdivr_n_s32_z
__builtin_sve_svdivr_n_s64_m
__builtin_sve_svdivr_n_s64_x
__builtin_sve_svdivr_n_s64_z
__builtin_sve_svdivr_n_u32_m
__builtin_sve_svdivr_n_u32_x
__builtin_sve_svdivr_n_u32_z
__builtin_sve_svdivr_n_u64_m
__builtin_sve_svdivr_n_u64_x
__builtin_sve_svdivr_n_u64_z
__builtin_sve_svdivr_s32_m
__builtin_sve_svdivr_s32_x
__builtin_sve_svdivr_s32_z
__builtin_sve_svdivr_s64_m
__builtin_sve_svdivr_s64_x
__builtin_sve_svdivr_s64_z
__builtin_sve_svdivr_u32_m
__builtin_sve_svdivr_u32_x
__builtin_sve_svdivr_u32_z
__builtin_sve_svdivr_u64_m
__builtin_sve_svdivr_u64_x
__builtin_sve_svdivr_u64_z
__builtin_sve_svdot_lane_s32
__builtin_sve_svdot_lane_s64
__builtin_sve_svdot_lane_u32
q4Uiq4Uiq16Ucq16UcIUWi
__builtin_sve_svdot_lane_u64
q2UWiq2UWiq8Usq8UsIUWi
__builtin_sve_svdot_n_s32
q4iq4iq16ScSc
__builtin_sve_svdot_n_s64
q2Wiq2Wiq8ss
__builtin_sve_svdot_n_u32
q4Uiq4Uiq16UcUc
__builtin_sve_svdot_n_u64
q2UWiq2UWiq8UsUs
__builtin_sve_svdot_s32
q4iq4iq16Scq16Sc
__builtin_sve_svdot_s64
q2Wiq2Wiq8sq8s
__builtin_sve_svdot_u32
q4Uiq4Uiq16Ucq16Uc
__builtin_sve_svdot_u64
q2UWiq2UWiq8Usq8Us
__builtin_sve_svdup_lane_bf16
q8yq8yUs
__builtin_sve_svdup_lane_f16
q8hq8hUs
__builtin_sve_svdup_lane_f32
q4fq4fUi
__builtin_sve_svdup_lane_f64
q2dq2dUWi
__builtin_sve_svdup_lane_s16
q8sq8sUs
__builtin_sve_svdup_lane_s32
q4iq4iUi
__builtin_sve_svdup_lane_s64
q2Wiq2WiUWi
__builtin_sve_svdup_lane_s8
q16Scq16ScUc
__builtin_sve_svdup_lane_u16
__builtin_sve_svdup_lane_u32
__builtin_sve_svdup_lane_u64
__builtin_sve_svdup_lane_u8
__builtin_sve_svdup_n_b16
q16bb
__builtin_sve_svdup_n_b32
__builtin_sve_svdup_n_b64
__builtin_sve_svdup_n_b8
__builtin_sve_svdup_n_bf16
q8yy
__builtin_sve_svdup_n_bf16_m
q8yq8yq16by
__builtin_sve_svdup_n_bf16_x
q8yq16by
__builtin_sve_svdup_n_bf16_z
__builtin_sve_svdup_n_f16
q8hh
__builtin_sve_svdup_n_f16_m
q8hq8hq16bh
__builtin_sve_svdup_n_f16_x
q8hq16bh
__builtin_sve_svdup_n_f16_z
__builtin_sve_svdup_n_f32
q4ff
__builtin_sve_svdup_n_f32_m
q4fq4fq16bf
__builtin_sve_svdup_n_f32_x
q4fq16bf
__builtin_sve_svdup_n_f32_z
__builtin_sve_svdup_n_f64
q2dd
__builtin_sve_svdup_n_f64_m
q2dq2dq16bd
__builtin_sve_svdup_n_f64_x
q2dq16bd
__builtin_sve_svdup_n_f64_z
__builtin_sve_svdup_n_s16
q8ss
__builtin_sve_svdup_n_s16_m
q8sq8sq16bs
__builtin_sve_svdup_n_s16_x
q8sq16bs
__builtin_sve_svdup_n_s16_z
__builtin_sve_svdup_n_s32
q4ii
__builtin_sve_svdup_n_s32_m
q4iq4iq16bi
__builtin_sve_svdup_n_s32_x
q4iq16bi
__builtin_sve_svdup_n_s32_z
__builtin_sve_svdup_n_s64
q2WiWi
__builtin_sve_svdup_n_s64_m
q2Wiq2Wiq16bWi
__builtin_sve_svdup_n_s64_x
q2Wiq16bWi
__builtin_sve_svdup_n_s64_z
__builtin_sve_svdup_n_s8
q16ScSc
__builtin_sve_svdup_n_s8_m
q16Scq16Scq16bSc
__builtin_sve_svdup_n_s8_x
q16Scq16bSc
__builtin_sve_svdup_n_s8_z
__builtin_sve_svdup_n_u16
q8UsUs
__builtin_sve_svdup_n_u16_m
q8Usq8Usq16bUs
__builtin_sve_svdup_n_u16_x
q8Usq16bUs
__builtin_sve_svdup_n_u16_z
__builtin_sve_svdup_n_u32
q4UiUi
__builtin_sve_svdup_n_u32_m
q4Uiq4Uiq16bUi
__builtin_sve_svdup_n_u32_x
q4Uiq16bUi
__builtin_sve_svdup_n_u32_z
__builtin_sve_svdup_n_u64
q2UWiUWi
__builtin_sve_svdup_n_u64_m
q2UWiq2UWiq16bUWi
__builtin_sve_svdup_n_u64_x
q2UWiq16bUWi
__builtin_sve_svdup_n_u64_z
__builtin_sve_svdup_n_u8
q16UcUc
__builtin_sve_svdup_n_u8_m
q16Ucq16Ucq16bUc
__builtin_sve_svdup_n_u8_x
q16Ucq16bUc
__builtin_sve_svdup_n_u8_z
__builtin_sve_svdupq_lane_bf16
q8yq8yUWi
__builtin_sve_svdupq_lane_f16
q8hq8hUWi
__builtin_sve_svdupq_lane_f32
q4fq4fUWi
__builtin_sve_svdupq_lane_f64
__builtin_sve_svdupq_lane_s16
q8sq8sUWi
__builtin_sve_svdupq_lane_s32
q4iq4iUWi
__builtin_sve_svdupq_lane_s64
__builtin_sve_svdupq_lane_s8
q16Scq16ScUWi
__builtin_sve_svdupq_lane_u16
q8Usq8UsUWi
__builtin_sve_svdupq_lane_u32
q4Uiq4UiUWi
__builtin_sve_svdupq_lane_u64
__builtin_sve_svdupq_lane_u8
q16Ucq16UcUWi
__builtin_sve_svdupq_n_b16
q16bbbbbbbbb
__builtin_sve_svdupq_n_b32
q16bbbbb
__builtin_sve_svdupq_n_b64
q16bbb
__builtin_sve_svdupq_n_b8
q16bbbbbbbbbbbbbbbbb
__builtin_sve_svdupq_n_bf16
q8yyyyyyyyy
__builtin_sve_svdupq_n_f16
q8hhhhhhhhh
__builtin_sve_svdupq_n_f32
q4fffff
__builtin_sve_svdupq_n_f64
q2ddd
__builtin_sve_svdupq_n_s16
q8sssssssss
__builtin_sve_svdupq_n_s32
q4iiiii
__builtin_sve_svdupq_n_s64
q2WiWiWi
__builtin_sve_svdupq_n_s8
q16ScScScScScScScScScScScScScScScScSc
__builtin_sve_svdupq_n_u16
q8UsUsUsUsUsUsUsUsUs
__builtin_sve_svdupq_n_u32
q4UiUiUiUiUi
__builtin_sve_svdupq_n_u64
q2UWiUWiUWi
__builtin_sve_svdupq_n_u8
q16UcUcUcUcUcUcUcUcUcUcUcUcUcUcUcUcUc
  </array>
__builtin_sve_sveor3_n_s16
__builtin_sve_sveor3_n_s32
__builtin_sve_sveor3_n_s64
__builtin_sve_sveor3_n_s8
__builtin_sve_sveor3_n_u16
__builtin_sve_sveor3_n_u32
__builtin_sve_sveor3_n_u64
__builtin_sve_sveor3_n_u8
__builtin_sve_sveor3_s16
__builtin_sve_sveor3_s32
__builtin_sve_sveor3_s64
__builtin_sve_sveor3_s8
__builtin_sve_sveor3_u16
__builtin_sve_sveor3_u32
__builtin_sve_sveor3_u64
__builtin_sve_sveor3_u8
__builtin_sve_sveor_b_z
__builtin_sve_sveor_n_s16_m
__builtin_sve_sveor_n_s16_x
__builtin_sve_sveor_n_s16_z
__builtin_sve_sveor_n_s32_m
__builtin_sve_sveor_n_s32_x
__builtin_sve_sveor_n_s32_z
__builtin_sve_sveor_n_s64_m
__builtin_sve_sveor_n_s64_x
__builtin_sve_sveor_n_s64_z
__builtin_sve_sveor_n_s8_m
__builtin_sve_sveor_n_s8_x
__builtin_sve_sveor_n_s8_z
__builtin_sve_sveor_n_u16_m
__builtin_sve_sveor_n_u16_x
__builtin_sve_sveor_n_u16_z
__builtin_sve_sveor_n_u32_m
__builtin_sve_sveor_n_u32_x
__builtin_sve_sveor_n_u32_z
__builtin_sve_sveor_n_u64_m
__builtin_sve_sveor_n_u64_x
__builtin_sve_sveor_n_u64_z
__builtin_sve_sveor_n_u8_m
__builtin_sve_sveor_n_u8_x
__builtin_sve_sveor_n_u8_z
__builtin_sve_sveor_s16_m
__builtin_sve_sveor_s16_x
__builtin_sve_sveor_s16_z
__builtin_sve_sveor_s32_m
__builtin_sve_sveor_s32_x
__builtin_sve_sveor_s32_z
__builtin_sve_sveor_s64_m
__builtin_sve_sveor_s64_x
__builtin_sve_sveor_s64_z
__builtin_sve_sveor_s8_m
__builtin_sve_sveor_s8_x
__builtin_sve_sveor_s8_z
__builtin_sve_sveor_u16_m
__builtin_sve_sveor_u16_x
__builtin_sve_sveor_u16_z
__builtin_sve_sveor_u32_m
__builtin_sve_sveor_u32_x
__builtin_sve_sveor_u32_z
__builtin_sve_sveor_u64_m
__builtin_sve_sveor_u64_x
__builtin_sve_sveor_u64_z
__builtin_sve_sveor_u8_m
__builtin_sve_sveor_u8_x
__builtin_sve_sveor_u8_z
__builtin_sve_sveorbt_n_s16
__builtin_sve_sveorbt_n_s32
__builtin_sve_sveorbt_n_s64
__builtin_sve_sveorbt_n_s8
__builtin_sve_sveorbt_n_u16
__builtin_sve_sveorbt_n_u32
__builtin_sve_sveorbt_n_u64
__builtin_sve_sveorbt_n_u8
__builtin_sve_sveorbt_s16
__builtin_sve_sveorbt_s32
__builtin_sve_sveorbt_s64
__builtin_sve_sveorbt_s8
__builtin_sve_sveorbt_u16
__builtin_sve_sveorbt_u32
__builtin_sve_sveorbt_u64
__builtin_sve_sveorbt_u8
__builtin_sve_sveortb_n_s16
__builtin_sve_sveortb_n_s32
__builtin_sve_sveortb_n_s64
__builtin_sve_sveortb_n_s8
__builtin_sve_sveortb_n_u16
__builtin_sve_sveortb_n_u32
__builtin_sve_sveortb_n_u64
__builtin_sve_sveortb_n_u8
__builtin_sve_sveortb_s16
__builtin_sve_sveortb_s32
__builtin_sve_sveortb_s64
__builtin_sve_sveortb_s8
__builtin_sve_sveortb_u16
__builtin_sve_sveortb_u32
__builtin_sve_sveortb_u64
__builtin_sve_sveortb_u8
__builtin_sve_sveorv_s16
__builtin_sve_sveorv_s32
__builtin_sve_sveorv_s64
__builtin_sve_sveorv_s8
__builtin_sve_sveorv_u16
__builtin_sve_sveorv_u32
__builtin_sve_sveorv_u64
__builtin_sve_sveorv_u8
__builtin_sve_svexpa_f16
q8hq8Us
__builtin_sve_svexpa_f32
q4fq4Ui
__builtin_sve_svexpa_f64
q2dq2UWi
__builtin_sve_svext_bf16
q8yq8yq8yIUWi
__builtin_sve_svext_f16
q8hq8hq8hIUWi
__builtin_sve_svext_f32
q4fq4fq4fIUWi
__builtin_sve_svext_f64
q2dq2dq2dIUWi
__builtin_sve_svext_s16
__builtin_sve_svext_s32
__builtin_sve_svext_s64
__builtin_sve_svext_s8
__builtin_sve_svext_u16
__builtin_sve_svext_u32
__builtin_sve_svext_u64
__builtin_sve_svext_u8
__builtin_sve_svextb_s16_m
__builtin_sve_svextb_s16_x
__builtin_sve_svextb_s16_z
__builtin_sve_svextb_s32_m
__builtin_sve_svextb_s32_x
__builtin_sve_svextb_s32_z
__builtin_sve_svextb_s64_m
__builtin_sve_svextb_s64_x
__builtin_sve_svextb_s64_z
__builtin_sve_svextb_u16_m
__builtin_sve_svextb_u16_x
__builtin_sve_svextb_u16_z
__builtin_sve_svextb_u32_m
__builtin_sve_svextb_u32_x
__builtin_sve_svextb_u32_z
__builtin_sve_svextb_u64_m
__builtin_sve_svextb_u64_x
__builtin_sve_svextb_u64_z
__builtin_sve_svexth_s32_m
__builtin_sve_svexth_s32_x
__builtin_sve_svexth_s32_z
__builtin_sve_svexth_s64_m
__builtin_sve_svexth_s64_x
__builtin_sve_svexth_s64_z
__builtin_sve_svexth_u32_m
__builtin_sve_svexth_u32_x
__builtin_sve_svexth_u32_z
__builtin_sve_svexth_u64_m
__builtin_sve_svexth_u64_x
__builtin_sve_svexth_u64_z
__builtin_sve_svextw_s64_m
__builtin_sve_svextw_s64_x
__builtin_sve_svextw_s64_z
__builtin_sve_svextw_u64_m
__builtin_sve_svextw_u64_x
__builtin_sve_svextw_u64_z
__builtin_sve_svget2_bf16
q8yq16yIUWi
__builtin_sve_svget2_f16
q8hq16hIUWi
__builtin_sve_svget2_f32
q4fq8fIUWi
__builtin_sve_svget2_f64
q2dq4dIUWi
__builtin_sve_svget2_s16
q8sq16sIUWi
__builtin_sve_svget2_s32
q4iq8iIUWi
__builtin_sve_svget2_s64
q2Wiq4WiIUWi
__builtin_sve_svget2_s8
q16Scq32ScIUWi
__builtin_sve_svget2_u16
q8Usq16UsIUWi
__builtin_sve_svget2_u32
q4Uiq8UiIUWi
__builtin_sve_svget2_u64
q2UWiq4UWiIUWi
__builtin_sve_svget2_u8
q16Ucq32UcIUWi
__builtin_sve_svget3_bf16
q8yq24yIUWi
__builtin_sve_svget3_f16
q8hq24hIUWi
__builtin_sve_svget3_f32
q4fq12fIUWi
__builtin_sve_svget3_f64
q2dq6dIUWi
__builtin_sve_svget3_s16
q8sq24sIUWi
__builtin_sve_svget3_s32
q4iq12iIUWi
__builtin_sve_svget3_s64
q2Wiq6WiIUWi
__builtin_sve_svget3_s8
q16Scq48ScIUWi
__builtin_sve_svget3_u16
q8Usq24UsIUWi
__builtin_sve_svget3_u32
q4Uiq12UiIUWi
__builtin_sve_svget3_u64
q2UWiq6UWiIUWi
__builtin_sve_svget3_u8
q16Ucq48UcIUWi
__builtin_sve_svget4_bf16
q8yq32yIUWi
__builtin_sve_svget4_f16
q8hq32hIUWi
__builtin_sve_svget4_f32
q4fq16fIUWi
__builtin_sve_svget4_f64
q2dq8dIUWi
__builtin_sve_svget4_s16
q8sq32sIUWi
__builtin_sve_svget4_s32
q4iq16iIUWi
__builtin_sve_svget4_s64
q2Wiq8WiIUWi
__builtin_sve_svget4_s8
q16Scq64ScIUWi
__builtin_sve_svget4_u16
q8Usq32UsIUWi
__builtin_sve_svget4_u32
q4Uiq16UiIUWi
__builtin_sve_svget4_u64
q2UWiq8UWiIUWi
__builtin_sve_svget4_u8
q16Ucq64UcIUWi
__builtin_sve_svhadd_n_s16_m
__builtin_sve_svhadd_n_s16_x
__builtin_sve_svhadd_n_s16_z
__builtin_sve_svhadd_n_s32_m
__builtin_sve_svhadd_n_s32_x
__builtin_sve_svhadd_n_s32_z
__builtin_sve_svhadd_n_s64_m
__builtin_sve_svhadd_n_s64_x
__builtin_sve_svhadd_n_s64_z
__builtin_sve_svhadd_n_s8_m
__builtin_sve_svhadd_n_s8_x
__builtin_sve_svhadd_n_s8_z
__builtin_sve_svhadd_n_u16_m
__builtin_sve_svhadd_n_u16_x
__builtin_sve_svhadd_n_u16_z
__builtin_sve_svhadd_n_u32_m
__builtin_sve_svhadd_n_u32_x
__builtin_sve_svhadd_n_u32_z
__builtin_sve_svhadd_n_u64_m
__builtin_sve_svhadd_n_u64_x
__builtin_sve_svhadd_n_u64_z
__builtin_sve_svhadd_n_u8_m
__builtin_sve_svhadd_n_u8_x
__builtin_sve_svhadd_n_u8_z
__builtin_sve_svhadd_s16_m
__builtin_sve_svhadd_s16_x
__builtin_sve_svhadd_s16_z
__builtin_sve_svhadd_s32_m
__builtin_sve_svhadd_s32_x
__builtin_sve_svhadd_s32_z
__builtin_sve_svhadd_s64_m
__builtin_sve_svhadd_s64_x
__builtin_sve_svhadd_s64_z
__builtin_sve_svhadd_s8_m
__builtin_sve_svhadd_s8_x
__builtin_sve_svhadd_s8_z
__builtin_sve_svhadd_u16_m
__builtin_sve_svhadd_u16_x
__builtin_sve_svhadd_u16_z
__builtin_sve_svhadd_u32_m
__builtin_sve_svhadd_u32_x
__builtin_sve_svhadd_u32_z
__builtin_sve_svhadd_u64_m
__builtin_sve_svhadd_u64_x
__builtin_sve_svhadd_u64_z
__builtin_sve_svhadd_u8_m
__builtin_sve_svhadd_u8_x
__builtin_sve_svhadd_u8_z
__builtin_sve_svhistcnt_s32_z
q4Uiq16bq4iq4i
__builtin_sve_svhistcnt_s64_z
q2UWiq16bq2Wiq2Wi
__builtin_sve_svhistcnt_u32_z
__builtin_sve_svhistcnt_u64_z
__builtin_sve_svhistseg_s8
q16Ucq16Scq16Sc
__builtin_sve_svhistseg_u8
__builtin_sve_svhsub_n_s16_m
__builtin_sve_svhsub_n_s16_x
__builtin_sve_svhsub_n_s16_z
__builtin_sve_svhsub_n_s32_m
__builtin_sve_svhsub_n_s32_x
__builtin_sve_svhsub_n_s32_z
__builtin_sve_svhsub_n_s64_m
__builtin_sve_svhsub_n_s64_x
__builtin_sve_svhsub_n_s64_z
__builtin_sve_svhsub_n_s8_m
__builtin_sve_svhsub_n_s8_x
__builtin_sve_svhsub_n_s8_z
__builtin_sve_svhsub_n_u16_m
__builtin_sve_svhsub_n_u16_x
__builtin_sve_svhsub_n_u16_z
__builtin_sve_svhsub_n_u32_m
__builtin_sve_svhsub_n_u32_x
__builtin_sve_svhsub_n_u32_z
__builtin_sve_svhsub_n_u64_m
__builtin_sve_svhsub_n_u64_x
__builtin_sve_svhsub_n_u64_z
__builtin_sve_svhsub_n_u8_m
__builtin_sve_svhsub_n_u8_x
__builtin_sve_svhsub_n_u8_z
__builtin_sve_svhsub_s16_m
__builtin_sve_svhsub_s16_x
__builtin_sve_svhsub_s16_z
__builtin_sve_svhsub_s32_m
__builtin_sve_svhsub_s32_x
__builtin_sve_svhsub_s32_z
__builtin_sve_svhsub_s64_m
__builtin_sve_svhsub_s64_x
__builtin_sve_svhsub_s64_z
__builtin_sve_svhsub_s8_m
__builtin_sve_svhsub_s8_x
__builtin_sve_svhsub_s8_z
__builtin_sve_svhsub_u16_m
__builtin_sve_svhsub_u16_x
__builtin_sve_svhsub_u16_z
__builtin_sve_svhsub_u32_m
__builtin_sve_svhsub_u32_x
__builtin_sve_svhsub_u32_z
__builtin_sve_svhsub_u64_m
__builtin_sve_svhsub_u64_x
__builtin_sve_svhsub_u64_z
__builtin_sve_svhsub_u8_m
__builtin_sve_svhsub_u8_x
__builtin_sve_svhsub_u8_z
__builtin_sve_svhsubr_n_s16_m
__builtin_sve_svhsubr_n_s16_x
__builtin_sve_svhsubr_n_s16_z
__builtin_sve_svhsubr_n_s32_m
__builtin_sve_svhsubr_n_s32_x
__builtin_sve_svhsubr_n_s32_z
__builtin_sve_svhsubr_n_s64_m
__builtin_sve_svhsubr_n_s64_x
__builtin_sve_svhsubr_n_s64_z
__builtin_sve_svhsubr_n_s8_m
__builtin_sve_svhsubr_n_s8_x
__builtin_sve_svhsubr_n_s8_z
__builtin_sve_svhsubr_n_u16_m
__builtin_sve_svhsubr_n_u16_x
__builtin_sve_svhsubr_n_u16_z
__builtin_sve_svhsubr_n_u32_m
__builtin_sve_svhsubr_n_u32_x
__builtin_sve_svhsubr_n_u32_z
__builtin_sve_svhsubr_n_u64_m
__builtin_sve_svhsubr_n_u64_x
__builtin_sve_svhsubr_n_u64_z
__builtin_sve_svhsubr_n_u8_m
__builtin_sve_svhsubr_n_u8_x
__builtin_sve_svhsubr_n_u8_z
__builtin_sve_svhsubr_s16_m
__builtin_sve_svhsubr_s16_x
__builtin_sve_svhsubr_s16_z
__builtin_sve_svhsubr_s32_m
__builtin_sve_svhsubr_s32_x
__builtin_sve_svhsubr_s32_z
__builtin_sve_svhsubr_s64_m
__builtin_sve_svhsubr_s64_x
__builtin_sve_svhsubr_s64_z
__builtin_sve_svhsubr_s8_m
__builtin_sve_svhsubr_s8_x
__builtin_sve_svhsubr_s8_z
__builtin_sve_svhsubr_u16_m
__builtin_sve_svhsubr_u16_x
__builtin_sve_svhsubr_u16_z
__builtin_sve_svhsubr_u32_m
__builtin_sve_svhsubr_u32_x
__builtin_sve_svhsubr_u32_z
__builtin_sve_svhsubr_u64_m
__builtin_sve_svhsubr_u64_x
__builtin_sve_svhsubr_u64_z
__builtin_sve_svhsubr_u8_m
__builtin_sve_svhsubr_u8_x
__builtin_sve_svhsubr_u8_z
__builtin_sve_svindex_s16
q8sss
__builtin_sve_svindex_s32
q4iii
__builtin_sve_svindex_s64
__builtin_sve_svindex_s8
q16ScScSc
__builtin_sve_svindex_u16
q8UsUsUs
__builtin_sve_svindex_u32
q4UiUiUi
__builtin_sve_svindex_u64
__builtin_sve_svindex_u8
q16UcUcUc
__builtin_sve_svinsr_n_bf16
q8yq8yy
__builtin_sve_svinsr_n_f16
q8hq8hh
__builtin_sve_svinsr_n_f32
q4fq4ff
__builtin_sve_svinsr_n_f64
q2dq2dd
__builtin_sve_svinsr_n_s16
q8sq8ss
__builtin_sve_svinsr_n_s32
q4iq4ii
__builtin_sve_svinsr_n_s64
q2Wiq2WiWi
__builtin_sve_svinsr_n_s8
q16Scq16ScSc
__builtin_sve_svinsr_n_u16
__builtin_sve_svinsr_n_u32
__builtin_sve_svinsr_n_u64
__builtin_sve_svinsr_n_u8
__builtin_sve_svlasta_bf16
yq16bq8y
__builtin_sve_svlasta_f16
__builtin_sve_svlasta_f32
__builtin_sve_svlasta_f64
__builtin_sve_svlasta_s16
__builtin_sve_svlasta_s32
__builtin_sve_svlasta_s64
__builtin_sve_svlasta_s8
__builtin_sve_svlasta_u16
__builtin_sve_svlasta_u32
__builtin_sve_svlasta_u64
__builtin_sve_svlasta_u8
__builtin_sve_svlastb_bf16
__builtin_sve_svlastb_f16
__builtin_sve_svlastb_f32
__builtin_sve_svlastb_f64
__builtin_sve_svlastb_s16
__builtin_sve_svlastb_s32
__builtin_sve_svlastb_s64
__builtin_sve_svlastb_s8
__builtin_sve_svlastb_u16
__builtin_sve_svlastb_u32
__builtin_sve_svlastb_u64
__builtin_sve_svlastb_u8
__builtin_sve_svld1_bf16
q8yq16byC*
__builtin_sve_svld1_f16
q8hq16bhC*
__builtin_sve_svld1_f32
q4fq16bfC*
__builtin_sve_svld1_f64
q2dq16bdC*
__builtin_sve_svld1_gather_s32index_f32
q4fq16bfC*q4i
__builtin_sve_svld1_gather_s32index_s32
q4iq16bSiC*q4i
__builtin_sve_svld1_gather_s32index_u32
q4Uiq16bUiC*q4i
__builtin_sve_svld1_gather_s32offset_f32
__builtin_sve_svld1_gather_s32offset_s32
__builtin_sve_svld1_gather_s32offset_u32
__builtin_sve_svld1_gather_s64index_f64
q2dq16bdC*q2Wi
__builtin_sve_svld1_gather_s64index_s64
q2Wiq16bSWiC*q2Wi
__builtin_sve_svld1_gather_s64index_u64
q2UWiq16bUWiC*q2Wi
__builtin_sve_svld1_gather_s64offset_f64
__builtin_sve_svld1_gather_s64offset_s64
__builtin_sve_svld1_gather_s64offset_u64
__builtin_sve_svld1_gather_u32base_f32
__builtin_sve_svld1_gather_u32base_index_f32
q4fq16bq4UiWi
__builtin_sve_svld1_gather_u32base_index_s32
q4iq16bq4UiWi
__builtin_sve_svld1_gather_u32base_index_u32
q4Uiq16bq4UiWi
__builtin_sve_svld1_gather_u32base_offset_f32
__builtin_sve_svld1_gather_u32base_offset_s32
__builtin_sve_svld1_gather_u32base_offset_u32
__builtin_sve_svld1_gather_u32base_s32
q4iq16bq4Ui
__builtin_sve_svld1_gather_u32base_u32
__builtin_sve_svld1_gather_u32index_f32
q4fq16bfC*q4Ui
__builtin_sve_svld1_gather_u32index_s32
q4iq16bSiC*q4Ui
__builtin_sve_svld1_gather_u32index_u32
q4Uiq16bUiC*q4Ui
__builtin_sve_svld1_gather_u32offset_f32
__builtin_sve_svld1_gather_u32offset_s32
__builtin_sve_svld1_gather_u32offset_u32
__builtin_sve_svld1_gather_u64base_f64
__builtin_sve_svld1_gather_u64base_index_f64
q2dq16bq2UWiWi
__builtin_sve_svld1_gather_u64base_index_s64
q2Wiq16bq2UWiWi
__builtin_sve_svld1_gather_u64base_index_u64
q2UWiq16bq2UWiWi
__builtin_sve_svld1_gather_u64base_offset_f64
__builtin_sve_svld1_gather_u64base_offset_s64
__builtin_sve_svld1_gather_u64base_offset_u64
__builtin_sve_svld1_gather_u64base_s64
q2Wiq16bq2UWi
__builtin_sve_svld1_gather_u64base_u64
__builtin_sve_svld1_gather_u64index_f64
q2dq16bdC*q2UWi
__builtin_sve_svld1_gather_u64index_s64
q2Wiq16bSWiC*q2UWi
__builtin_sve_svld1_gather_u64index_u64
q2UWiq16bUWiC*q2UWi
__builtin_sve_svld1_gather_u64offset_f64
__builtin_sve_svld1_gather_u64offset_s64
__builtin_sve_svld1_gather_u64offset_u64
__builtin_sve_svld1_s16
q8sq16bSsC*
__builtin_sve_svld1_s32
q4iq16bSiC*
__builtin_sve_svld1_s64
q2Wiq16bSWiC*
__builtin_sve_svld1_s8
q16Scq16bScC*
__builtin_sve_svld1_u16
q8Usq16bUsC*
__builtin_sve_svld1_u32
q4Uiq16bUiC*
Apply modifications and produces temporary files that conform to ARC
__builtin_sve_svld1_u64
q2UWiq16bUWiC*
__builtin_sve_svld1_u8
q16Ucq16bUcC*
__builtin_sve_svld1_vnum_bf16
q8yq16byC*Wi
__builtin_sve_svld1_vnum_f16
q8hq16bhC*Wi
__builtin_sve_svld1_vnum_f32
q4fq16bfC*Wi
__builtin_sve_svld1_vnum_f64
q2dq16bdC*Wi
__builtin_sve_svld1_vnum_s16
q8sq16bSsC*Wi
__builtin_sve_svld1_vnum_s32
q4iq16bSiC*Wi
__builtin_sve_svld1_vnum_s64
q2Wiq16bSWiC*Wi
__builtin_sve_svld1_vnum_s8
q16Scq16bScC*Wi
__builtin_sve_svld1_vnum_u16
q8Usq16bUsC*Wi
__builtin_sve_svld1_vnum_u32
q4Uiq16bUiC*Wi
__builtin_sve_svld1_vnum_u64
q2UWiq16bUWiC*Wi
__builtin_sve_svld1_vnum_u8
q16Ucq16bUcC*Wi
__builtin_sve_svld1b_s8_x2
q32ScQScC*
__builtin_sve_svld1b_s8_x4
q64ScQScC*
__builtin_sve_svld1b_u8_x2
q32UcQUcC*
__builtin_sve_svld1b_u8_x4
q64UcQUcC*
__builtin_sve_svld1b_vnum_s8_x2
q32ScQScC*Wi
__builtin_sve_svld1b_vnum_s8_x4
q64ScQScC*Wi
__builtin_sve_svld1b_vnum_u8_x2
q32UcQUcC*Wi
__builtin_sve_svld1b_vnum_u8_x4
q64UcQUcC*Wi
__builtin_sve_svld1d_f64_x2
q4dQdC*
__builtin_sve_svld1d_f64_x4
q8dQdC*
__builtin_sve_svld1d_s64_x2
q4WiQSWiC*
__builtin_sve_svld1d_s64_x4
q8WiQSWiC*
__builtin_sve_svld1d_u64_x2
q4UWiQUWiC*
__builtin_sve_svld1d_u64_x4
q8UWiQUWiC*
__builtin_sve_svld1d_vnum_f64_x2
q4dQdC*Wi
__builtin_sve_svld1d_vnum_f64_x4
q8dQdC*Wi
__builtin_sve_svld1d_vnum_s64_x2
q4WiQSWiC*Wi
__builtin_sve_svld1d_vnum_s64_x4
q8WiQSWiC*Wi
__builtin_sve_svld1d_vnum_u64_x2
q4UWiQUWiC*Wi
__builtin_sve_svld1d_vnum_u64_x4
q8UWiQUWiC*Wi
__builtin_sve_svld1h_bf16_x2
q16yQyC*
__builtin_sve_svld1h_bf16_x4
q32yQyC*
__builtin_sve_svld1h_f16_x2
q16hQhC*
__builtin_sve_svld1h_f16_x4
q32hQhC*
__builtin_sve_svld1h_s16_x2
q16sQSsC*
__builtin_sve_svld1h_s16_x4
q32sQSsC*
__builtin_sve_svld1h_u16_x2
q16UsQUsC*
__builtin_sve_svld1h_u16_x4
q32UsQUsC*
__builtin_sve_svld1h_vnum_bf16_x2
q16yQyC*Wi
__builtin_sve_svld1h_vnum_bf16_x4
q32yQyC*Wi
__builtin_sve_svld1h_vnum_f16_x2
q16hQhC*Wi
__builtin_sve_svld1h_vnum_f16_x4
q32hQhC*Wi
__builtin_sve_svld1h_vnum_s16_x2
q16sQSsC*Wi
__builtin_sve_svld1h_vnum_s16_x4
q32sQSsC*Wi
__builtin_sve_svld1h_vnum_u16_x2
q16UsQUsC*Wi
__builtin_sve_svld1h_vnum_u16_x4
q32UsQUsC*Wi
__builtin_sve_svld1ro_bf16
__builtin_sve_svld1ro_f16
__builtin_sve_svld1ro_f32
__builtin_sve_svld1ro_f64
__builtin_sve_svld1ro_s16
__builtin_sve_svld1ro_s32
__builtin_sve_svld1ro_s64
__builtin_sve_svld1ro_s8
__builtin_sve_svld1ro_u16
__builtin_sve_svld1ro_u32
__builtin_sve_svld1ro_u64
__builtin_sve_svld1ro_u8
__builtin_sve_svld1rq_bf16
__builtin_sve_svld1rq_f16
__builtin_sve_svld1rq_f32
__builtin_sve_svld1rq_f64
__builtin_sve_svld1rq_s16
__builtin_sve_svld1rq_s32
__builtin_sve_svld1rq_s64
__builtin_sve_svld1rq_s8
__builtin_sve_svld1rq_u16
__builtin_sve_svld1rq_u32
__builtin_sve_svld1rq_u64
__builtin_sve_svld1rq_u8
__builtin_sve_svld1sb_gather_s32offset_s32
q4iq16bScC*q4i
__builtin_sve_svld1sb_gather_s32offset_u32
q4Uiq16bScC*q4i
__builtin_sve_svld1sb_gather_s64offset_s64
q2Wiq16bScC*q2Wi
__builtin_sve_svld1sb_gather_s64offset_u64
q2UWiq16bScC*q2Wi
__builtin_sve_svld1sb_gather_u32base_offset_s32
__builtin_sve_svld1sb_gather_u32base_offset_u32
__builtin_sve_svld1sb_gather_u32base_s32
__builtin_sve_svld1sb_gather_u32base_u32
__builtin_sve_svld1sb_gather_u32offset_s32
q4iq16bScC*q4Ui
__builtin_sve_svld1sb_gather_u32offset_u32
q4Uiq16bScC*q4Ui
__builtin_sve_svld1sb_gather_u64base_offset_s64
__builtin_sve_svld1sb_gather_u64base_offset_u64
__builtin_sve_svld1sb_gather_u64base_s64
__builtin_sve_svld1sb_gather_u64base_u64
__builtin_sve_svld1sb_gather_u64offset_s64
q2Wiq16bScC*q2UWi
__builtin_sve_svld1sb_gather_u64offset_u64
q2UWiq16bScC*q2UWi
__builtin_sve_svld1sb_s16
q8sq16bScC*
__builtin_sve_svld1sb_s32
q4iq16bScC*
__builtin_sve_svld1sb_s64
q2Wiq16bScC*
__builtin_sve_svld1sb_u16
q8Usq16bScC*
__builtin_sve_svld1sb_u32
q4Uiq16bScC*
__builtin_sve_svld1sb_u64
q2UWiq16bScC*
__builtin_sve_svld1sb_vnum_s16
q8sq16bScC*Wi
__builtin_sve_svld1sb_vnum_s32
q4iq16bScC*Wi
__builtin_sve_svld1sb_vnum_s64
q2Wiq16bScC*Wi
__builtin_sve_svld1sb_vnum_u16
q8Usq16bScC*Wi
__builtin_sve_svld1sb_vnum_u32
q4Uiq16bScC*Wi
__builtin_sve_svld1sb_vnum_u64
q2UWiq16bScC*Wi
__builtin_sve_svld1sh_gather_s32index_s32
q4iq16bSsC*q4i
__builtin_sve_svld1sh_gather_s32index_u32
q4Uiq16bSsC*q4i
__builtin_sve_svld1sh_gather_s32offset_s32
__builtin_sve_svld1sh_gather_s32offset_u32
__builtin_sve_svld1sh_gather_s64index_s64
q2Wiq16bSsC*q2Wi
__builtin_sve_svld1sh_gather_s64index_u64
q2UWiq16bSsC*q2Wi
__builtin_sve_svld1sh_gather_s64offset_s64
__builtin_sve_svld1sh_gather_s64offset_u64
__builtin_sve_svld1sh_gather_u32base_index_s32
__builtin_sve_svld1sh_gather_u32base_index_u32
__builtin_sve_svld1sh_gather_u32base_offset_s32
__builtin_sve_svld1sh_gather_u32base_offset_u32
__builtin_sve_svld1sh_gather_u32base_s32
__builtin_sve_svld1sh_gather_u32base_u32
__builtin_sve_svld1sh_gather_u32index_s32
q4iq16bSsC*q4Ui
__builtin_sve_svld1sh_gather_u32index_u32
q4Uiq16bSsC*q4Ui
__builtin_sve_svld1sh_gather_u32offset_s32
__builtin_sve_svld1sh_gather_u32offset_u32
__builtin_sve_svld1sh_gather_u64base_index_s64
__builtin_sve_svld1sh_gather_u64base_index_u64
__builtin_sve_svld1sh_gather_u64base_offset_s64
__builtin_sve_svld1sh_gather_u64base_offset_u64
__builtin_sve_svld1sh_gather_u64base_s64
__builtin_sve_svld1sh_gather_u64base_u64
__builtin_sve_svld1sh_gather_u64index_s64
q2Wiq16bSsC*q2UWi
__builtin_sve_svld1sh_gather_u64index_u64
q2UWiq16bSsC*q2UWi
__builtin_sve_svld1sh_gather_u64offset_s64
__builtin_sve_svld1sh_gather_u64offset_u64
__builtin_sve_svld1sh_s32
q4iq16bSsC*
__builtin_sve_svld1sh_s64
q2Wiq16bSsC*
__builtin_sve_svld1sh_u32
q4Uiq16bSsC*
__builtin_sve_svld1sh_u64
q2UWiq16bSsC*
__builtin_sve_svld1sh_vnum_s32
q4iq16bSsC*Wi
__builtin_sve_svld1sh_vnum_s64
q2Wiq16bSsC*Wi
__builtin_sve_svld1sh_vnum_u32
q4Uiq16bSsC*Wi
__builtin_sve_svld1sh_vnum_u64
q2UWiq16bSsC*Wi
__builtin_sve_svld1sw_gather_s64index_s64
q2Wiq16bSiC*q2Wi
__builtin_sve_svld1sw_gather_s64index_u64
q2UWiq16bSiC*q2Wi
__builtin_sve_svld1sw_gather_s64offset_s64
__builtin_sve_svld1sw_gather_s64offset_u64
__builtin_sve_svld1sw_gather_u64base_index_s64
__builtin_sve_svld1sw_gather_u64base_index_u64
__builtin_sve_svld1sw_gather_u64base_offset_s64
__builtin_sve_svld1sw_gather_u64base_offset_u64
__builtin_sve_svld1sw_gather_u64base_s64
__builtin_sve_svld1sw_gather_u64base_u64
__builtin_sve_svld1sw_gather_u64index_s64
q2Wiq16bSiC*q2UWi
__builtin_sve_svld1sw_gather_u64index_u64
q2UWiq16bSiC*q2UWi
__builtin_sve_svld1sw_gather_u64offset_s64
__builtin_sve_svld1sw_gather_u64offset_u64
__builtin_sve_svld1sw_s64
q2Wiq16bSiC*
__builtin_sve_svld1sw_u64
q2UWiq16bSiC*
__builtin_sve_svld1sw_vnum_s64
q2Wiq16bSiC*Wi
__builtin_sve_svld1sw_vnum_u64
q2UWiq16bSiC*Wi
__builtin_sve_svld1ub_gather_s32offset_s32
q4iq16bUcC*q4i
__builtin_sve_svld1ub_gather_s32offset_u32
q4Uiq16bUcC*q4i
__builtin_sve_svld1ub_gather_s64offset_s64
q2Wiq16bUcC*q2Wi
__builtin_sve_svld1ub_gather_s64offset_u64
q2UWiq16bUcC*q2Wi
__builtin_sve_svld1ub_gather_u32base_offset_s32
__builtin_sve_svld1ub_gather_u32base_offset_u32
__builtin_sve_svld1ub_gather_u32base_s32
__builtin_sve_svld1ub_gather_u32base_u32
__builtin_sve_svld1ub_gather_u32offset_s32
q4iq16bUcC*q4Ui
__builtin_sve_svld1ub_gather_u32offset_u32
q4Uiq16bUcC*q4Ui
__builtin_sve_svld1ub_gather_u64base_offset_s64
__builtin_sve_svld1ub_gather_u64base_offset_u64
__builtin_sve_svld1ub_gather_u64base_s64
__builtin_sve_svld1ub_gather_u64base_u64
__builtin_sve_svld1ub_gather_u64offset_s64
q2Wiq16bUcC*q2UWi
__builtin_sve_svld1ub_gather_u64offset_u64
q2UWiq16bUcC*q2UWi
__builtin_sve_svld1ub_s16
q8sq16bUcC*
__builtin_sve_svld1ub_s32
q4iq16bUcC*
__builtin_sve_svld1ub_s64
q2Wiq16bUcC*
__builtin_sve_svld1ub_u16
q8Usq16bUcC*
__builtin_sve_svld1ub_u32
q4Uiq16bUcC*
__builtin_sve_svld1ub_u64
q2UWiq16bUcC*
__builtin_sve_svld1ub_vnum_s16
q8sq16bUcC*Wi
__builtin_sve_svld1ub_vnum_s32
q4iq16bUcC*Wi
__builtin_sve_svld1ub_vnum_s64
q2Wiq16bUcC*Wi
__builtin_sve_svld1ub_vnum_u16
q8Usq16bUcC*Wi
__builtin_sve_svld1ub_vnum_u32
q4Uiq16bUcC*Wi
__builtin_sve_svld1ub_vnum_u64
q2UWiq16bUcC*Wi
__builtin_sve_svld1uh_gather_s32index_s32
q4iq16bUsC*q4i
__builtin_sve_svld1uh_gather_s32index_u32
q4Uiq16bUsC*q4i
__builtin_sve_svld1uh_gather_s32offset_s32
__builtin_sve_svld1uh_gather_s32offset_u32
__builtin_sve_svld1uh_gather_s64index_s64
q2Wiq16bUsC*q2Wi
__builtin_sve_svld1uh_gather_s64index_u64
q2UWiq16bUsC*q2Wi
__builtin_sve_svld1uh_gather_s64offset_s64
__builtin_sve_svld1uh_gather_s64offset_u64
__builtin_sve_svld1uh_gather_u32base_index_s32
__builtin_sve_svld1uh_gather_u32base_index_u32
__builtin_sve_svld1uh_gather_u32base_offset_s32
__builtin_sve_svld1uh_gather_u32base_offset_u32
__builtin_sve_svld1uh_gather_u32base_s32
__builtin_sve_svld1uh_gather_u32base_u32
__builtin_sve_svld1uh_gather_u32index_s32
q4iq16bUsC*q4Ui
__builtin_sve_svld1uh_gather_u32index_u32
q4Uiq16bUsC*q4Ui
__builtin_sve_svld1uh_gather_u32offset_s32
__builtin_sve_svld1uh_gather_u32offset_u32
__builtin_sve_svld1uh_gather_u64base_index_s64
__builtin_sve_svld1uh_gather_u64base_index_u64
__builtin_sve_svld1uh_gather_u64base_offset_s64
__builtin_sve_svld1uh_gather_u64base_offset_u64
__builtin_sve_svld1uh_gather_u64base_s64
__builtin_sve_svld1uh_gather_u64base_u64
__builtin_sve_svld1uh_gather_u64index_s64
q2Wiq16bUsC*q2UWi
__builtin_sve_svld1uh_gather_u64index_u64
q2UWiq16bUsC*q2UWi
__builtin_sve_svld1uh_gather_u64offset_s64
__builtin_sve_svld1uh_gather_u64offset_u64
__builtin_sve_svld1uh_s32
q4iq16bUsC*
__builtin_sve_svld1uh_s64
q2Wiq16bUsC*
__builtin_sve_svld1uh_u32
q4Uiq16bUsC*
__builtin_sve_svld1uh_u64
q2UWiq16bUsC*
__builtin_sve_svld1uh_vnum_s32
q4iq16bUsC*Wi
__builtin_sve_svld1uh_vnum_s64
q2Wiq16bUsC*Wi
__builtin_sve_svld1uh_vnum_u32
q4Uiq16bUsC*Wi
__builtin_sve_svld1uh_vnum_u64
q2UWiq16bUsC*Wi
__builtin_sve_svld1uw_gather_s64index_s64
q2Wiq16bUiC*q2Wi
__builtin_sve_svld1uw_gather_s64index_u64
q2UWiq16bUiC*q2Wi
__builtin_sve_svld1uw_gather_s64offset_s64
__builtin_sve_svld1uw_gather_s64offset_u64
__builtin_sve_svld1uw_gather_u64base_index_s64
__builtin_sve_svld1uw_gather_u64base_index_u64
__builtin_sve_svld1uw_gather_u64base_offset_s64
__builtin_sve_svld1uw_gather_u64base_offset_u64
__builtin_sve_svld1uw_gather_u64base_s64
__builtin_sve_svld1uw_gather_u64base_u64
__builtin_sve_svld1uw_gather_u64index_s64
q2Wiq16bUiC*q2UWi
__builtin_sve_svld1uw_gather_u64index_u64
q2UWiq16bUiC*q2UWi
__builtin_sve_svld1uw_gather_u64offset_s64
__builtin_sve_svld1uw_gather_u64offset_u64
__builtin_sve_svld1uw_s64
q2Wiq16bUiC*
__builtin_sve_svld1uw_u64
q2UWiq16bUiC*
__builtin_sve_svld1uw_vnum_s64
q2Wiq16bUiC*Wi
__builtin_sve_svld1uw_vnum_u64
q2UWiq16bUiC*Wi
__builtin_sve_svld1w_f32_x2
q8fQfC*
__builtin_sve_svld1w_f32_x4
q16fQfC*
__builtin_sve_svld1w_s32_x2
q8iQSiC*
__builtin_sve_svld1w_s32_x4
q16iQSiC*
__builtin_sve_svld1w_u32_x2
q8UiQUiC*
__builtin_sve_svld1w_u32_x4
q16UiQUiC*
__builtin_sve_svld1w_vnum_f32_x2
q8fQfC*Wi
__builtin_sve_svld1w_vnum_f32_x4
q16fQfC*Wi
__builtin_sve_svld1w_vnum_s32_x2
q8iQSiC*Wi
__builtin_sve_svld1w_vnum_s32_x4
q16iQSiC*Wi
__builtin_sve_svld1w_vnum_u32_x2
q8UiQUiC*Wi
Enable the old style PARAMETER statement
__builtin_sve_svld1w_vnum_u32_x4
q16UiQUiC*Wi
__builtin_sve_svld2_bf16
q16yq16byC*
__builtin_sve_svld2_f16
q16hq16bhC*
__builtin_sve_svld2_f32
q8fq16bfC*
__builtin_sve_svld2_f64
q4dq16bdC*
__builtin_sve_svld2_s16
q16sq16bSsC*
__builtin_sve_svld2_s32
q8iq16bSiC*
__builtin_sve_svld2_s64
q4Wiq16bSWiC*
__builtin_sve_svld2_s8
q32Scq16bScC*
__builtin_sve_svld2_u16
q16Usq16bUsC*
__builtin_sve_svld2_u32
q8Uiq16bUiC*
__builtin_sve_svld2_u64
q4UWiq16bUWiC*
__builtin_sve_svld2_u8
q32Ucq16bUcC*
__builtin_sve_svld2_vnum_bf16
q16yq16byC*Wi
__builtin_sve_svld2_vnum_f16
q16hq16bhC*Wi
__builtin_sve_svld2_vnum_f32
q8fq16bfC*Wi
__builtin_sve_svld2_vnum_f64
q4dq16bdC*Wi
__builtin_sve_svld2_vnum_s16
q16sq16bSsC*Wi
__builtin_sve_svld2_vnum_s32
q8iq16bSiC*Wi
__builtin_sve_svld2_vnum_s64
q4Wiq16bSWiC*Wi
__builtin_sve_svld2_vnum_s8
q32Scq16bScC*Wi
__builtin_sve_svld2_vnum_u16
q16Usq16bUsC*Wi
__builtin_sve_svld2_vnum_u32
q8Uiq16bUiC*Wi
__builtin_sve_svld2_vnum_u64
q4UWiq16bUWiC*Wi
__builtin_sve_svld2_vnum_u8
q32Ucq16bUcC*Wi
__builtin_sve_svld3_bf16
q24yq16byC*
__builtin_sve_svld3_f16
q24hq16bhC*
__builtin_sve_svld3_f32
q12fq16bfC*
__builtin_sve_svld3_f64
q6dq16bdC*
__builtin_sve_svld3_s16
q24sq16bSsC*
__builtin_sve_svld3_s32
q12iq16bSiC*
__builtin_sve_svld3_s64
q6Wiq16bSWiC*
__builtin_sve_svld3_s8
q48Scq16bScC*
__builtin_sve_svld3_u16
Accept non-standard constructs supported by the Borland compiler
q24Usq16bUsC*
__builtin_sve_svld3_u32
q12Uiq16bUiC*
__builtin_sve_svld3_u64
q6UWiq16bUWiC*
__builtin_sve_svld3_u8
q48Ucq16bUcC*
__builtin_sve_svld3_vnum_bf16
q24yq16byC*Wi
__builtin_sve_svld3_vnum_f16
q24hq16bhC*Wi
__builtin_sve_svld3_vnum_f32
q12fq16bfC*Wi
__builtin_sve_svld3_vnum_f64
q6dq16bdC*Wi
__builtin_sve_svld3_vnum_s16
q24sq16bSsC*Wi
__builtin_sve_svld3_vnum_s32
q12iq16bSiC*Wi
__builtin_sve_svld3_vnum_s64
q6Wiq16bSWiC*Wi
__builtin_sve_svld3_vnum_s8
q48Scq16bScC*Wi
__builtin_sve_svld3_vnum_u16
q24Usq16bUsC*Wi
__builtin_sve_svld3_vnum_u32
q12Uiq16bUiC*Wi
__builtin_sve_svld3_vnum_u64
q6UWiq16bUWiC*Wi
__builtin_sve_svld3_vnum_u8
q48Ucq16bUcC*Wi
__builtin_sve_svld4_bf16
q32yq16byC*
__builtin_sve_svld4_f16
-fcall-saved-x18
q32hq16bhC*
__builtin_sve_svld4_f32
q16fq16bfC*
__builtin_sve_svld4_f64
q8dq16bdC*
__builtin_sve_svld4_s16
q32sq16bSsC*
__builtin_sve_svld4_s32
q16iq16bSiC*
__builtin_sve_svld4_s64
q8Wiq16bSWiC*
__builtin_sve_svld4_s8
q64Scq16bScC*
__builtin_sve_svld4_u16
q32Usq16bUsC*
__builtin_sve_svld4_u32
q16Uiq16bUiC*
Path to a persistent on-disk backing store for the builtin CAS. '-fcas-path=auto' chooses a path in the user's system cache.
__builtin_sve_svld4_u64
q8UWiq16bUWiC*
__builtin_sve_svld4_u8
q64Ucq16bUcC*
__builtin_sve_svld4_vnum_bf16
q32yq16byC*Wi
__builtin_sve_svld4_vnum_f16
q32hq16bhC*Wi
__builtin_sve_svld4_vnum_f32
return,branch,full,none
q16fq16bfC*Wi
__builtin_sve_svld4_vnum_f64
q8dq16bdC*Wi
__builtin_sve_svld4_vnum_s16
q32sq16bSsC*Wi
-fchar8_t
__builtin_sve_svld4_vnum_s32
q16iq16bSiC*Wi
__builtin_sve_svld4_vnum_s64
-fcheck=
q8Wiq16bSWiC*Wi
__builtin_sve_svld4_vnum_s8
<major>.<minor>,latest
q64Scq16bScC*Wi
__builtin_sve_svld4_vnum_u16
-fcolor-diagnostics
q32Usq16bUsC*Wi
-fcomment-block-commands=
__builtin_sve_svld4_vnum_u32
-fcommon
q16Uiq16bUiC*Wi
-fcompatibility-qualified-id-block-type-checking
__builtin_sve_svld4_vnum_u64
-fcompilation-caching-service-path
q8UWiq16bUWiC*Wi
-fcompile-resource=
__builtin_sve_svld4_vnum_u8
Require member pointer base types to be complete if they would be significant under the Microsoft ABI
q64Ucq16bUcC*Wi
Enable C++ Extensions for Concepts. (deprecated - use -std=c++2a)
__builtin_sve_svldff1_bf16
Use a const qualified type for string literals in C and ObjC
__builtin_sve_svldff1_f16
-fconstant-cfstrings
__builtin_sve_svldff1_f32
-fconstant-double-number-class=
__builtin_sve_svldff1_f64
-fconstant-integer-number-class=
__builtin_sve_svldff1_gather_s32index_f32
-fconstant-string-class
__builtin_sve_svldff1_gather_s32index_s32
<class name>
__builtin_sve_svldff1_gather_s32index_u32
-fconstexpr-backtrace-limit
__builtin_sve_svldff1_gather_s32offset_f32
-fconstexpr-depth=
__builtin_sve_svldff1_gather_s32offset_s32
Maximum depth of recursive constexpr function calls
__builtin_sve_svldff1_gather_s32offset_u32
-fconstexpr-steps
-lbundle1.o
bad bind info (bad opcode value 0x
Load the named plugin (dynamic shared object)
__builtin_sve_reinterpret_u32_f16
 Unroll
Name Index @ {0:x}: Name {1} ({2}) is not associated with any entries.
__builtin_riscv_sm3p1
__builtin_wasm_nearest_f32x4
DWARF64
q4iq4i
__builtin_sve_reinterpret_u32_u64
clang::matrix_type
gnu::may_alias
__builtin_HEXAGON_V6_vadd_qf16
__builtin_sve_svrev_s32
ppc32
__builtin_rvv_vzext_vf4_tumu
zksh
iV16Sc
__builtin_ia32_ptwrite64
DWARF32
>; invalid mangling?
__builtin_sve_svnmla_n_f16_z
__builtin_sve_svstnt1_s32
__builtin_sve_reinterpret_u32_u32
<Static analyzer group>
-ffixed-a0
gfx11-insts
__builtin_arm_mve_vqdmullbq_m_s16
__builtin_arm_mve_vqmovntq_m_s32
 in pointer: 0x
__builtin_HEXAGON_S2_vzxthw
__builtin_HEXAGON_V6_vadd_hf_hf_128B
__builtin_arm_mve_vqdmlsdhxq_s32
-mfp64
vs63
__builtin_rvv_vfslide1up_vf_tamu
__builtin_rvv_vzext_vf4_tu
__builtin_riscv_sm3p0
__NEC__
__builtin_wasm_bitselect
V2dV2dV2dIiV2dUc
__builtin_ia32_selectpd_512
__builtin_ia32_tdpbf16ps
DW_IDX_type_hash
' as a <
__builtin_sve_svlsl_s32_m
__builtin_sve_svmla_s8_m
__builtin_sve_svnmla_n_f16_x
__builtin_sve_svqinch_pat_n_u64
q8sq8s
__builtin_sve_svsqrshru_u16_x4
__builtin_sve_svstnt1_s16
__builtin_sve_svundef2_f64
__builtin_sve_reinterpret_u32_u16
-apple-
__builtin_ia32_rsqrtph256_mask
E2sii
__builtin_arm_mve_vcvtq_m_n_f32_s32
__builtin_arm_mve_vminq_u8
__builtin_arm_mve_vqmovntq_m_s16
__builtin_HEXAGON_F2_sffma_lib
__builtin_HEXAGON_S2_vzxtbh
__builtin_HEXAGON_V6_vmpybus_acc_128B
__builtin_HEXAGON_V6_vadd_hf_hf
attiny417
attiny804
attiny806
attiny807
attiny816
V2LLiV2LLiV2LLiIUi
mips2
ULLiV16UcUi
vs62
__builtin_rvv_vmsne_vx
__builtin_rvv_vnclip_wx_tumu
__builtin_rvv_vfslide1up_vf_tama
__builtin_rvv_vlsseg5e32_v_tamu
__builtin_rvv_vzext_vf4_ta
__builtin_riscv_sm4ks
__builtin_ve_vl_vfmkwlenan_mvml
__builtin_ve_vl_vrminswlstzx_vvvl
__ve__
__builtin_ia32_minps256
V16fV16fV16fIi
__builtin_ia32_rangepd128_mask
__builtin_ia32_getmantps512_mask
V4dUcV4dV4d
__builtin_ia32_tdpbuud
annot_header_unit
DW_OP_LLVM_entry_value
DW_IDX_parent
-10e60
Could not demangle '
lvi-load-hardening
__builtin_sve_svldnt1_gather_s64offset_u64
__builtin_sve_svlsl_s16_z
__builtin_sve_svmax_u32_z
__builtin_sve_svmla_s64_z
__builtin_sve_svmsb_u32_x
__builtin_sve_svnmla_n_f16_m
__builtin_sve_svqadd_n_s64_x
__builtin_sve_svqinch_pat_n_u32
__builtin_sve_svqshlu_n_s8_z
__builtin_sve_svrev_s16
q16Ucq16bq16UcIUWi
__builtin_sve_svsqrshru_u16_x2
__builtin_sve_svst1h_scatter_s64offset_u64
__builtin_sve_svstnt1_f64
__builtin_sve_svsublbt_s32
q8fv
__builtin_sve_svwhilelt_b8_s64
q4Uiq16Uc
 __attribute__((import_name
-vfp4d16sp
__builtin_amdgcn_wmma_f32_16x16x16_bf16_w32
v152
Extract API information
__builtin_arm_mve_vaddq_m_n_f16
__builtin_arm_mve_vcmpeqq_m_n_f32
__builtin_arm_mve_vcvtq_m_n_f16_u16
__builtin_arm_mve_vidupq_x_n_u32
__builtin_arm_mve_vminq_u32
__builtin_arm_mve_vmulq_m_n_s32
__builtin_arm_mve_vqdmlahq_m_n_s8
__builtin_arm_mve_vqmovnbq_u32
[0x%08x, 0x%08x) 
DW_SECT_INFO
 extends past end of trie data
BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB not allowed in lazy bind table for opcode at: 0x
assembler
Turn on -fdepscan=auto.
__builtin_HEXAGON_A2_svsubh
__builtin_HEXAGON_F2_sffma
__builtin_HEXAGON_M2_vmac2s_s0
__builtin_HEXAGON_S2_vtrunowh
__builtin_HEXAGON_V6_vaslw_128B
V32iV32iV16ii
__builtin_HEXAGON_V6_vunpackh
__builtin_HEXAGON_V6_vadd_hf_128B
Enable additional debug output
__mc68060__
__builtin_msa_fmul_w
__builtin_msa_sldi_d
-mfp32
__nvvm_f2tf32_rna
__nvvm_ldg_ul
V16ScV8SsV8Ss
__builtin_altivec_vcntmbb
__builtin_tresume
vs61
__iso_volatile_load8
__builtin_rvv_vsoxseg3ei64_v
__builtin_rvv_vmsne_vv_mu
__builtin_rvv_vwmulsu_vx_tumu
__builtin_rvv_vnclip_wx_tu
__builtin_rvv_vfwmsac_vf_tama
__builtin_rvv_vfslide1up_vf_tuma
__builtin_rvv_vlseg6e8ff_v_tu
__builtin_rvv_vlsseg5e32_v_tama
__builtin_rvv_vnot_v_tamu
__builtin_rvv_vzext_vf2_tamu
zksed
arch11
__builtin_ve_vl_vpcnt_vvvl
__builtin_ve_vl_vfmads_vvvvvl
__builtin_ve_vl_vfmkwlenan_mvl
__builtin_ve_vl_pvfmksgenan_MvMl
__builtin_ve_vl_vrmaxsllst_vvl
__ve
__builtin_ia32_cmplepd
__builtin_ia32_minpd256
__builtin_ia32_gatherd_d256
__builtin_ia32_minps512
__builtin_ia32_maxss_round_mask
__builtin_ia32_cvtuqq2ps128_mask
__builtin_ia32_psrlq512
__builtin_ia32_getmantpd512_mask
V32xV32xV32xUiIi
__builtin_ia32_selectpd_256
__builtin_ia32_tdpbusd
__is_const
annot_module_end
__builtin_omp_required_simd_align
DW_AT_LLVM_include_path
DW_OP_LLVM_tag_offset
UNUSED7
DW_IDX_die_offset
-perfmon
arm,thumb
+10e60
unable to decode LEB128 at offset 0x%8.8llx: %s
myriad
dxcontainer
lvi-cfi
__builtin_sve_svldff1uh_gather_s64offset_u64
__builtin_sve_svldnt1_gather_s64offset_s64
__builtin_sve_svldnt1sw_gather_u64base_s64
__builtin_sve_svlsl_s16_x
__builtin_sve_svmad_n_f64_z
__builtin_sve_svmax_u32_x
__builtin_sve_svmin_u64_x
__builtin_sve_svmla_s64_x
__builtin_sve_svmls_u32_z
__builtin_sve_svmsb_u32_m
__builtin_sve_svmulh_u8_m
__builtin_sve_svnmla_f64_z
q16bQIUWi
__builtin_sve_svqadd_n_s64_m
__builtin_sve_svqdecp_n_u64_b64
__builtin_sve_svqinch_pat_n_s64
__builtin_sve_svqrshl_s8_z
__builtin_sve_svqshlu_n_s8_x
__builtin_sve_svqsubr_u8_m
__builtin_sve_svrev_f64
__builtin_sve_svrinta_f64_z
__builtin_sve_svrshr_n_u8_m
q32Ucq32UcIUWiq16Uc
__builtin_sve_svsqadd_u8_z
vq16bSi*Wiq4i
__builtin_sve_svst1h_scatter_s64offset_s64
vq16bUWi*q4UWi
__builtin_sve_svstnt1_f32
__builtin_sve_svstnt1w_scatter_s64index_s64
__builtin_sve_svsublbt_s16
__builtin_sve_svtbl2_s64
__builtin_sve_svundef2_f32
__builtin_sve_svusdot_lane_s32
__builtin_sve_svwhilelt_b8_s32
__builtin_sve_reinterpret_s16_s8
__builtin_sve_reinterpret_u32_u8
PREPROCESSOR_OPTIONS
__builtin_ia32_rdgsbase64
Add C++ implicit destructors to CFGs for all analyses
-code-completion-patterns
/d1PP
Use the LLVM representation for assembler and object files
__builtin_ia32_rdgsbase32
__builtin_amdgcn_cvt_f32_bf8
v151
 VectorizeWidth
 UnrollCount
 UnrollAndJam
<pseudo-object type>
iLLUiv*
__builtin_arm_mve_vaddq_m_f32
__builtin_arm_mve_vbrsrq_m_n_s8
__builtin_arm_mve_vcmpeqq_m_n_f16
__builtin_arm_mve_vcmpneq_m_n_u16
__builtin_arm_mve_vcvtq_m_n_f16_s16
__builtin_arm_mve_vfmaq_f32
__builtin_arm_mve_vidupq_x_n_u16
__builtin_arm_mve_vldrwq_gather_base_u32
__builtin_arm_mve_vminq_u16
__builtin_arm_mve_vmlsldavaq_p_s32
__builtin_arm_mve_vmulq_m_n_s16
__builtin_arm_mve_vorrq_s16
__builtin_arm_mve_vqdmladhxq_s32
__builtin_arm_mve_vqmovnbq_u16
cu + 0x%llx
Index Signature         
<NULL>
Name Index @ {0:x}: Entry @ {1:x} references a non-existing DIE @ {2:x}.
X86_64_RELOC_SUBTRACTOR
) in export trie data at node: 0x
for BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED missing preceding BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM for opcode at: 0x
export_off field plus export_size field of 
__thiscall
-fdebug-module-writer
__AVR_ATxmega128A3__
vr31
__builtin_HEXAGON_L2_loadrd_pcr
__builtin_HEXAGON_A2_svnavgh
iLLiIi
__builtin_HEXAGON_F2_sffixupr
__builtin_HEXAGON_M2_mpy_rnd_lh_s1
__builtin_HEXAGON_M2_vmac2es_s1
__builtin_HEXAGON_S2_asr_r_p_and
__builtin_HEXAGON_S2_vtrunohb
__builtin_HEXAGON_V6_pred_and_n
__builtin_HEXAGON_V6_vaslw
__builtin_HEXAGON_V6_veqb_or
__builtin_HEXAGON_V6_vmpybus_acc
__builtin_HEXAGON_V6_vrmpybusi_acc_128B
__builtin_HEXAGON_V6_vunpackb_128B
__builtin_HEXAGON_V6_vaslh_acc
__builtin_HEXAGON_V6_vadd_hf
-mcrbits
-mcrc32
__mc68060
V16UcV16UcV16UcV16Uc
__builtin_msa_ctcmsa
__builtin_msa_fmsub_d
__builtin_msa_max_s_b
V4iV4iV4iIUi
__mips_single_float
__OCTEON__
__nvvm_add_rn_ftz_f
__nvvm_f2bf16_rz_relu
LiLiD*Li
UiUiC*
__dmma_m8n8k4_ld_a
__builtin_ppc_mfmsr
__builtin_altivec_vpkshss
__builtin_altivec_vupklsh
__builtin_altivec_vexpandqm
__builtin_vsx_xvcmpgtdp_p
__builtin_tendall
__POWERPC__
__fmadds
vs60
vlseg5e32_v
__builtin_rvv_vloxseg2ei8_v_tama
__builtin_rvv_vssseg7e64_v
__builtin_rvv_vsoxseg2ei64_v_m
__builtin_rvv_vadc_vxm_ta
__builtin_rvv_vmsne_vv_ma
__builtin_rvv_vmul_vv_tumu
__builtin_rvv_vwmulsu_vx_tu
__builtin_rvv_vssubu_vv_ta
__builtin_rvv_vnclip_wx_ta
__builtin_rvv_vfmacc_vv_tumu
__builtin_rvv_vfwmsac_vf_tuma
__builtin_rvv_vfmerge_vfm_ta
__builtin_rvv_vfslide1up_vf_tumu
__builtin_rvv_vlseg4e16_v_tamu
__builtin_rvv_vlseg6e8ff_v_ta
__builtin_rvv_vlseg6e64ff_v_tuma
__builtin_rvv_vlsseg5e32_v_tuma
__builtin_rvv_vluxseg4ei16_v_tamu
__builtin_rvv_vnot_v_tama
__builtin_rvv_vfncvt_x_f_w_tumu
__builtin_rvv_vzext_vf2_tama
LiLiLiIUc
gr740
V8UsV8UsV8UsIii*
arch10
__builtin_ve_vl_pvsubs_vvvvl
__builtin_ve_vl_vcmpswzx_vsvl
__builtin_ve_vl_vpcnt_vvl
__builtin_ve_vl_pvfadd_vvvvl
__builtin_ve_vl_vfmads_vvvvl
__builtin_ve_vl_vcvtwdsx_vvmvl
__builtin_ve_vl_vfmkwgenan_mvml
__builtin_ve_vl_vfmksnum_mvml
__builtin_ve_vl_vrmaxslfst_vvvl
__linux__
__builtin_wasm_fma_f64x2
__builtin_ve_vl_vfmkdge_mvml
__SIZEOF_FLOAT128__
V8cV4sV4s
__builtin_ia32_cmpltpd
__builtin_ia32_psrawi128
__builtin_ia32_maxps256
V32cV32cV32cIi
V4iV4iiC*V4iV4iIc
V2OiV8s
__builtin_ia32_cvtpd2udq512_mask
vv*UsV16iV16iIi
__builtin_ia32_subss_round_mask
vv*UcV2OiV2dIi
__builtin_ia32_cvttps2uqq256_mask
__builtin_ia32_vcomiss
__builtin_ia32_psrld512
__builtin_ia32_pmovsqb256mem_mask
__builtin_ia32_getmantps256_mask
__builtin_ia32_expandloaddf512_mask
__builtin_ia32_getexpph512_mask
__builtin_ia32_vcvtuqq2ph128_mask
V2dUcV2dV2d
__builtin_ia32_wrfsbase64
__builtin_ia32_tdpbsud
thread_local
__is_member_pointer
plusplus
annot_module_begin
vec_step
DW_AT_const_value
DW_AT_HP_opt_flags
DW_AT_BORLAND_closure
DW_OP_lit12
DW_OP_LLVM_fragment
DW_LNS_copy
UNUSED6
DW_IDX_type_unit
sve2-aes
pmuv3
fp.dp
+ras
-pacbti
fpuv3_df
10e60
no null terminated string at offset 0x%llx
standard user-level extension
-objcmt-migrate-readwrite-property
In the report, sort the timers in each group in wall clock time order
macho
'external-contents': "
retpoline-indirect-branches
retpoline-indirect-calls
right-curly-bracket
Cannot dup2
__builtin_sve_svldff1sh_gather_u64index_u64
__builtin_sve_svldff1uh_gather_s64offset_s64
__builtin_sve_svldnf1_vnum_s32
__builtin_sve_svldnt1_gather_s64offset_f64
__builtin_sve_svldnt1d_vnum_s64_x2
__builtin_sve_svldnt1sw_gather_u64base_offset_u64
__builtin_sve_svldnt1w_vnum_s32_x2
__builtin_sve_svlsl_s16_m
__builtin_sve_svlsr_n_u16_x
__builtin_sve_svmad_n_f64_x
__builtin_sve_svmad_u8_z
__builtin_sve_svmax_u32_m
__builtin_sve_svmaxv_u32
__builtin_sve_svmin_u64_m
__builtin_sve_svminv_u8
__builtin_sve_svmla_s64_m
__builtin_sve_svmls_f32_x
__builtin_sve_svmls_u32_x
__builtin_sve_svmovlt_s16
__builtin_sve_svmsb_u16_z
__builtin_sve_svmul_s32_z
__builtin_sve_svmulh_u64_z
__builtin_sve_svnbsl_n_u64
__builtin_sve_svnmla_f64_x
__builtin_sve_svnot_u64_x
__builtin_sve_svpext_lane_c16
__builtin_sve_svprfh_gather_s32index
__builtin_sve_svqadd_n_s64
__builtin_sve_svqdecb_n_s64
__builtin_sve_svqdecp_n_u64_b32
__builtin_sve_svqdmlslbt_s32
__builtin_sve_svqinch_pat_n_s32
__builtin_sve_svqrdmlah_s16
__builtin_sve_svqrshl_s8_x
q4Uiq4Uiq2WiIUWi
q16Ucq16bq16ScIUWi
__builtin_sve_svqsub_s8_m
__builtin_sve_svqsubr_u64_z
__builtin_sve_svrax1_u64
__builtin_sve_svrev_f32
__builtin_sve_svrevh_u64_x
__builtin_sve_svrinta_f64_x
__builtin_sve_svrshl_n_s8_m
__builtin_sve_svrshr_n_u64_z
__builtin_sve_svscale_f16_m
__builtin_sve_svset2_u8
__builtin_sve_svshllt_n_s32
__builtin_sve_svsqadd_u8_x
vq16bq4UiWiq4f
__builtin_sve_svst1_vnum_s32
vQSc*Wiq32Sc
vq16bUs*q2Wiq2UWi
vQSi*q16i
__builtin_sve_svst2_u64
vq16bSWi*Wiq6Wi
__builtin_sve_svstnt1_f16
__builtin_sve_svstnt1b_scatter_u64base_s64
__builtin_sve_svstnt1w_s32_x4
__builtin_sve_svsub_s16_m
__builtin_sve_svsublbt_n_s64
__builtin_sve_svsubr_s16_z
q4iq8iq4Ui
__builtin_sve_svtrn1_s16
q16hv
__builtin_sve_svundef4_u8
__builtin_sve_svuqadd_s8_z
q16bii
__builtin_sve_svwhilelt_b64_u64
__builtin_sve_svzip1_u8
q16Scq2d
__builtin_sve_reinterpret_s64_f16
q4Uiq2SWi
Multiple errors
Set dep-scanner to produce the include tree
function
/external:env:
overload
Include comments from within macros in preprocessed output
OpenCL only. Treat double precision floating-point constant as single precision constant.
-code-completion-macros
--cuda-compile-host-device
Color Options
-error-on-deserialized-decl
__builtin_HEXAGON_V6_vnavgb
__builtin_amdgcn_rsq_clamp
__builtin_amdgcn_cvt_pk_i16
V2hV2h*1V2h
V8fV16hV16hV8f
V4iiiV4iIiIiIi
__builtin_amdgcn_smfmac_f32_32x32x32_fp8_fp8
v150
v216
v242
ObjCInterface
<bound member function type>
__builtin_arm_smlatt
__builtin_arm_strexd
__builtin_arm_mve_vabavq_s32
__builtin_arm_mve_vaddq_m_f16
__builtin_arm_mve_vaddvq_s8
__builtin_arm_mve_vbrsrq_m_n_s32
__builtin_arm_mve_vcaddq_rot90_x_s8
__builtin_arm_mve_vcmpeqq_m_f32
__builtin_arm_mve_vcmpgtq_s16
__builtin_arm_mve_vcmpneq_m_n_s8
__builtin_arm_mve_vctp8q_m
__builtin_arm_mve_vcvtq_m_f32_u32
__builtin_arm_mve_vdupq_m_n_s32
__builtin_arm_mve_vfmaq_f16
__builtin_arm_mve_vhcaddq_rot270_s16
__builtin_arm_mve_vidupq_wb_u8
__builtin_arm_mve_vldrbq_gather_offset_z_u16
__builtin_arm_mve_vldrwq_gather_base_s32
__builtin_arm_mve_vmaxq_s32
__builtin_arm_mve_vminq_s8
__builtin_arm_mve_vmlaldavaxq_p_s32
__builtin_arm_mve_vmlsldavaq_p_s16
__builtin_arm_mve_vmulhq_u16
__builtin_arm_mve_vmulq_m_n_f32
__builtin_arm_mve_vmvnq_x_n_u32
__builtin_arm_mve_vorrq_n_u32
__builtin_arm_mve_vqdmladhq_m_s8
__builtin_arm_mve_vqdmladhxq_s16
__builtin_arm_mve_vqmovnbq_s32
read past end of table when reading %s encoding at offset 0x%llx
 .debug_str[0x%0*llx] = 
__builtin_arm_mve_vqshlq_m_n_u32
TYPES
+secure-plt
 and the compile unit has no line table
No atoms: failed to read HashData.
Name Index @ {0:x}: Verifying indexes of type units is not currently supported.
-flimited-precision=
LC_SEGMENT
LC_SUB_CLIENT
X86_64_RELOC_BRANCH
If the argument is the name of a command in the process tree, share state based on its PID. E.g., -fdepscan -fdepscan-share=ninja will search for 'ninja' in the process tree and share state based on its PID if found. See also -fdepscan-share-stop.
x86_64h-apple-darwin
ppc64-apple-darwin
for BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB 
__builtin_arm_mve_vmaxq
 starts past end of file
swift_attr
dataoff field plus datasize field of 
lazy_bind_off field plus lazy_bind_size field of 
 which is a x86_EXCEPTION_STATE64 flavor in 
reloff field of section 
-fcuda-is-device
__AVR_ATmega164P__
__AVR_ATmega16HVA2__
__AVR_ATxmega64A1U__
__AVR_ATmega4808__
vr30
v11:8
__builtin_HEXAGON_L2_loadri_pcr
__builtin_HEXAGON_A2_addsat
__builtin_HEXAGON_A2_svavghs
__builtin_HEXAGON_A2_vnavghr
__builtin_HEXAGON_A4_vcmpbgti
__builtin_HEXAGON_C4_cmpneq
__builtin_HEXAGON_F2_sffixupn
__builtin_HEXAGON_M2_mmaculs_rs1
__builtin_HEXAGON_M2_mpy_rnd_lh_s0
__builtin_HEXAGON_M2_mpyu_acc_ll_s1
__builtin_HEXAGON_M2_vmac2es_s0
__builtin_HEXAGON_M4_xor_andn
__builtin_HEXAGON_S2_asr_r_p_acc
__builtin_HEXAGON_S2_lsr_i_r_acc
__builtin_HEXAGON_S2_vtrunewh
__builtin_HEXAGON_S6_vtrunehb_ppp
V128bV128bV128b
__builtin_HEXAGON_V6_vaddhsat_128B
__builtin_HEXAGON_V6_vaslhv_128B
__builtin_HEXAGON_V6_vdealh
V128bV128bV32iV32i
__builtin_HEXAGON_V6_vgtw_or
V64iV32ii
__builtin_HEXAGON_V6_vmpyowh_sacc
V32iV32iV32iiUIi
__builtin_HEXAGON_V6_vsubb
__builtin_HEXAGON_V6_vunpackb
__builtin_HEXAGON_V6_vasrhbsat_128B
__builtin_HEXAGON_V6_vabsb_sat_128B
__builtin_HEXAGON_V6_vprefixqb
__builtin_HEXAGON_V6_vabs_sf_128B
Reserve the d2 register (M68k only)
_tama
-fno-temp-file
mc68060
__builtin_mips_lbux
__builtin_msa_adds_s_d
__builtin_msa_binsl_b
V16ScV16ScISi
LLiV2ULLiIUi
__builtin_msa_fcule_w
__builtin_msa_fmsub_w
__builtin_msa_ilvev_w
__builtin_msa_max_a_d
__builtin_msa_mulr_q_h
__builtin_msa_sldi_w
__builtin_msa_subs_s_h
__mips_soft_float
_MIPS_ARCH_
__nvvm_mulhi_ui
__nvvm_cos_approx_f
__nvvm_rsqrt_approx_d
__nvvm_d2i_lo
__nvvm_f2bf16_rz
__nvvm_membar_gl
__nvvm_atom_add_gen_l
__nvvm_atom_sys_min_gen_ull
__nvvm_ldg_ui
__hmma_m8n32k16_ld_a
__imma_m8n8k32_st_c_i32
65001
UWiUWiUWiUWIi
__builtin_ppc_mftbu
__builtin_altivec_vctsxs
V16UcV8UsV8Us
__builtin_altivec_vcmpgtuq_p
__builtin_altivec_vupklpx
__builtin_altivec_vctzw
__builtin_altivec_vexpanddm
V16UcV16UcULLiIi
__builtin_vsx_xvcmpgtsp
V4fV2d
__builtin_tsr
__builtin_mma_pmxvi16ger2s
__powerpc__
-mrop-protect
__maddhdu
__builtin_fma
-mno-vsx
vs59
-analyzer-tidy-checker=bugprone-infinite-loop
__builtin_rvv_vloxseg2ei16_v_tama
__builtin_rvv_vloxseg6ei32_v_tumu
__builtin_rvv_vloxseg2ei8_v_tuma
__builtin_rvv_vsseg2e64_v
__builtin_rvv_vssseg6e64_v_m
__builtin_rvv_vloxei8_v_tama
__builtin_rvv_vsoxseg2ei64_v
__builtin_rvv_vwadd_vx_tama
__builtin_rvv_vadc_vvm_tu
__builtin_rvv_vsrl_vv_tumu
__builtin_rvv_vmsne_vv_tumu
__builtin_rvv_vsuxei16_v
__builtin_rvv_vmul_vv_tu
__builtin_rvv_vdiv_vv_tama
__builtin_rvv_vwmulsu_vx_ta
__builtin_rvv_vwmaccu_vx_tama
__builtin_rvv_vsadd_vx_tamu
__builtin_rvv_vasub_vv_tama
__builtin_rvv_vnclip_wv_tamu
__builtin_rvv_vfwadd_wv_tama
__builtin_rvv_vfmacc_vv_ta
__builtin_rvv_vfnmadd_vf_tu
__builtin_rvv_vfwmsac_vf_tumu
__builtin_rvv_vfsgnjx_vv_tumu
__builtin_rvv_vmfge_vf_mu
__builtin_rvv_vfredusum_vs_tu
__builtin_rvv_vfslide1up_vf_tu
__builtin_rvv_vle64ff_v_tu
__builtin_rvv_vlseg4e16_v_tama
__builtin_rvv_vlseg8e32_v_tuma
__builtin_rvv_vlseg5e8ff_v_tamu
__builtin_rvv_vlseg2e32ff_v_tamu
__builtin_rvv_vlseg6e64ff_v_tumu
__builtin_rvv_vlsseg2e8_v_tu
__builtin_rvv_vlsseg5e32_v_tumu
__builtin_rvv_vlsseg8e64_v_tuma
__builtin_rvv_vluxseg4ei16_v_tama
__builtin_rvv_vluxseg8ei32_v_tuma
__builtin_rvv_vnot_v_tuma
__builtin_rvv_vfcvt_rtz_x_f_v_ta
__builtin_rvv_vfncvt_x_f_w_tu
__builtin_rvv_vfwcvt_xu_f_v_ta
__builtin_rvv_vzext_vf2_tuma
__builtin_riscv_sha512sum1r_32
__builtin_riscv_sm4ed
leon4
__builtin_s390_vceqfs
V2SLLiV4SiV4SiV2SLLi
__builtin_s390_vfaehs
__builtin_s390_vfchdbs
arch9
__builtin_ve_vl_lvm_mmss
__builtin_ve_vl_pvaddu_vsvvl
__builtin_ve_vl_pvsubs_vvvl
V256dV256dUiUi
__builtin_ve_vl_vcmpswzx_vvvvl
__builtin_ve_vl_vand_vvvl
V256dV256dV512bV256dUi
__builtin_ve_vl_vslawzx_vvvvl
__builtin_ve_vl_pvfadd_vvvl
__builtin_ve_vl_vfcmps_vvvvl
V256dV256ddV256dV256bV256dUi
__builtin_ve_vl_vfnmads_vvvvvl
__builtin_ve_vl_vcvtwdsx_vvvl
__builtin_ve_vl_vex_vvmvl
__builtin_ve_vl_vfmkwgenan_mvl
__builtin_ve_vl_pvfmkwne_MvMl
__builtin_ve_vl_vfmksnum_mvl
__builtin_ve_vl_pvfmksupgenan_mvl
__builtin_ve_vl_vrmaxslfst_vvl
vV256dV256dLUiLUiV256bUi
__builtin_ve_vl_svob
__builtin_wasm_avgr_u_i16x8
__builtin_wasm_fms_f32x4
__builtin_ve_vl_pvfmkwne_Mvl
__seg_gs
__AVX512BF16__
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16
xsavec
zmm4
__builtin_ia32_pfrsqrt
__builtin_ia32_packsswb
mmx,ssse3
__builtin_ia32_cmpeqpd
_mm_sfence
__builtin_ia32_psrlqi128
__builtin_ia32_crc32si
__builtin_ia32_maxpd256
__builtin_ia32_roundps256
__builtin_ia32_palignr256
V4iV4iV4iIi
__builtin_ia32_gatherd_d
__builtin_ia32_lwpins32
__builtin_ia32_vphaddwq
__rdtsc
__builtin_ia32_cvtps2udq512_mask
__builtin_ia32_vpdpwssd256
__builtin_ia32_scattersiv16si
__builtin_ia32_packsswb512
__builtin_ia32_mulss_round_mask
__builtin_ia32_cvtps2udq128_mask
__builtin_ia32_scatterdiv2df
__builtin_ia32_vpshldd512
__builtin_ia32_cvttps2uqq128_mask
__builtin_ia32_prorq128
iV2dV2dIiIi
__builtin_ia32_storedquqi256_mask
__builtin_ia32_psrav8di
UcV4i
V16cV4OiV16cUc
__builtin_ia32_pmovdb128mem_mask
__builtin_ia32_getmantps128_mask
__builtin_ia32_kortestcdi
__builtin_ia32_expandqi512_mask
__builtin_ia32_vp2intersect_q_256
__builtin_ia32_getexpph256_mask
__builtin_ia32_vcvttph2w512_mask
V8OiV8xV8OiUcIi
__builtin_ia32_vfmaddcph512_mask3
__builtin_ia32_selectpd_128
__builtin_ia32_aesencwide128kl_u8
__builtin_ia32_wrfsbase32
__builtin_ia32_directstore_u64
vIUcIUcIUc
struct
static_assert
__has_trivial_constructor
__is_member_function_pointer
__bridge_transfer
plus
annot_pragma_fenv_access_ms
annot_module_include
__builtin_tmo_get_type_descriptor
number of bits must be a byte width multiple
DW_TAG_MIPS_loop
DW_AT_comp_dir
DW_AT_endianity
DW_AT_HP_prof_version_id
DW_AT_SUN_profile_id
DW_AT_BORLAND_Delphi_frameptr
DW_FORM_strx4
DW_OP_lit11
DW_OP_breg12
DW_OP_LLVM_convert
DW_LANG_ObjC
DW_LNS_extended_op
DW_CFA_GNU_args_size
UNUSED5
DW_IDX_compile_unit
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789._
8.4-A
-sve2
-mops
-fp-armv8d16
arm1136j-s
-hwdiv
+v8.4a
pacbti
ulong
e804d
-fpuv3_sf
-smart
-7e10
offset 0x%llx is beyond the end of data at 0x%zx
invocation function for block in 
zicboz
non-standard user-level extension
Disable sanitizer coverage instrumentation for modules and functions that match the provided special case list, even the allowed ones
rv64gc
sort-timers
coreclr
spirv32v1.0
goff
'type': 'file',
Use colors in output (default=autodetect)
znver3
retpoline-external-thunk
-fuse-ld
invalid version format
right-brace
output
__builtin_sve_svldff1_vnum_f16
__builtin_sve_svldff1sb_u64
__builtin_sve_svldff1sh_gather_u64index_s64
__builtin_sve_svldff1ub_gather_s64offset_u64
__builtin_sve_svldff1uh_gather_s64index_u64
__builtin_sve_svldff1uw_gather_s64offset_u64
__builtin_sve_svldnf1_vnum_s16
__builtin_sve_svldnf1ub_s32
__builtin_sve_svldnt1_gather_s64index_u64
__builtin_sve_svldnt1_u16
__builtin_sve_svldnt1d_vnum_f64_x4
__builtin_sve_svldnt1sb_gather_u64offset_s64
__builtin_sve_svldnt1sw_gather_u64base_offset_s64
__builtin_sve_svldnt1uh_gather_u64base_index_s64
__builtin_sve_svldnt1w_vnum_f32_x4
__builtin_sve_svlogb_f32_x
__builtin_sve_svlsl_n_u8_z
__builtin_sve_svlsl_wide_n_u16_x
__builtin_sve_svlsr_n_u16_m
__builtin_sve_svlsr_wide_u16_m
q2dq16bq2dq2dd
__builtin_sve_svmad_n_u8_z
__builtin_sve_svmad_u8_x
__builtin_sve_svmax_n_s8_m
__builtin_sve_svmax_u16_z
__builtin_sve_svmaxnmv_f32
__builtin_sve_svmaxv_u16
__builtin_sve_svmin_n_s8_z
__builtin_sve_svmin_u32_z
__builtin_sve_svminp_f16_m
__builtin_sve_svminv_u64
__builtin_sve_svmla_n_s16_x
__builtin_sve_svmla_s32_z
__builtin_sve_svmlalb_n_u16
__builtin_sve_svmls_f32_m
__builtin_sve_svmls_n_s8_m
__builtin_sve_svmls_u32_m
__builtin_sve_svmlslt_n_f32
q2UWiq4Ui
__builtin_sve_svmsb_n_s64_z
__builtin_sve_svmsb_u16_x
__builtin_sve_svmul_n_f64_m
__builtin_sve_svmul_s32_x
__builtin_sve_svmulh_n_u16_x
__builtin_sve_svmulh_u64_x
__builtin_sve_svmullt_n_u64
__builtin_sve_svnbsl_n_u32
__builtin_sve_svnmad_f16_x
__builtin_sve_svnmla_f64_m
__builtin_sve_svnmsb_f64_x
__builtin_sve_svnot_u64_m
__builtin_sve_svorr_s16_x
__builtin_sve_svorv_u8
__builtin_sve_svpnext_b8
__builtin_sve_svprfh
__builtin_sve_svptrue_c16
__builtin_sve_svqadd_n_s32_z
__builtin_sve_svqadd_s64
iiIUWi
__builtin_sve_svqdech_n_u32
UWiUWiq16b
__builtin_sve_svqdmlalb_n_s16
__builtin_sve_svqdmlslbt_s16
__builtin_sve_svqdmullt_n_s32
__builtin_sve_svqinch_n_u64
__builtin_sve_svqincw_pat_n_s64
__builtin_sve_svqrdmlah_n_s8
__builtin_sve_svqrshl_n_s64_m
__builtin_sve_svqrshl_s8_m
q8sq4iIUWi
__builtin_sve_svqrshrunt_n_s64
__builtin_sve_svqshl_s64_x
__builtin_sve_svqshlu_n_s8_m
__builtin_sve_svqsub_n_s8_m
__builtin_sve_svqsub_s8
__builtin_sve_svqsubr_n_u16_x
__builtin_sve_svqsubr_u64_x
q4Uiq2Wi
__builtin_sve_svrax1_s64
__builtin_sve_svrecpe_f64
__builtin_sve_svrev_f16
__builtin_sve_svrevd_s16_z
__builtin_sve_svrevh_u64_m
__builtin_sve_svrhadd_s16_m
__builtin_sve_svrinta_f64_m
__builtin_sve_svrintp_f32_x
__builtin_sve_svrshl_n_s64_z
__builtin_sve_svrshl_u32_z
__builtin_sve_svrshr_n_u64_x
__builtin_sve_svrsubhnb_n_s16
__builtin_sve_svsbclt_u64
__builtin_sve_svsel_f64
q4UWiq4UWiIUWiq2UWi
q8dq8dIUWiq2d
__builtin_sve_svshllt_n_s16
__builtin_sve_svsplice_s32
__builtin_sve_svsqadd_u8_m
vq16bf*q4f
__builtin_sve_svst1_scatter_u32base_index_f32
__builtin_sve_svst1_scatter_u64base_s64
vq16bSs*Wiq8s
__builtin_sve_svst1b_scatter_u32base_offset_u32
__builtin_sve_svst1b_vnum_s8_x2
vQSWi*Wiq8Wi
__builtin_sve_svst1h_scatter_s64index_u64
vq16bUs*q2UWi
__builtin_sve_svst1w_s32_x4
vQSi*Wiq8i
vq16bUi*q8Ui
vq16bf*q12f
__builtin_sve_svst3_vnum_s64
vq16bUWi*q8UWi
__builtin_sve_svstnt1_bf16
__builtin_sve_svstnt1_scatter_u64index_u64
__builtin_sve_svstnt1b_scatter_u64base_offset_u64
__builtin_sve_svstnt1h_scatter_u32base_index_s32
__builtin_sve_svstnt1w_s32_x2
__builtin_sve_svsub_n_f16_x
__builtin_sve_svsub_n_u8_z
__builtin_sve_svsubhnb_s64
__builtin_sve_svsublbt_n_s32
__builtin_sve_svsubr_n_f32_m
__builtin_sve_svsubr_s16_x
__builtin_sve_svsubwb_u32
__builtin_sve_svtbl2_s32
__builtin_sve_svtbx_bf16
__builtin_sve_svtrn1_f64
__builtin_sve_svtrn2_u16
__builtin_sve_svundef2_f16
__builtin_sve_svundef3_s8
q8UWiv
__builtin_sve_svunpkhi_u64
__builtin_sve_svuqadd_s8_x
__builtin_sve_svuzp1q_u32
__builtin_sve_svwhilege_b16_s32
__builtin_sve_svwhilegt_b8_s64
__builtin_sve_svwhilelt_b64_u32
__builtin_sve_svwhilewr_s32
__builtin_sve_svzip1_u64
__builtin_sve_svzip2q_f64
__builtin_sve_reinterpret_s8_f64
__builtin_sve_reinterpret_s32_u8
q2SWiq2UWi
__builtin_sve_reinterpret_u16_s16
__builtin_sve_reinterpret_u32_s64
Hello from 
deprecated
once
/constexpr:
<stdin>
User directory for configuration files
Disable caret diagnostics but keep column info
-dump-coverage-mapping
-dwarf-explicit-import
mainpage
--CLASSPATH
Dump code-completion information at a location
-cpp
Ignore environment variables to detect CUDA installation
Retain macro definitions in /E mode
-fwhole-file
static
OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
Disable adding the optnone attribute to functions at O0
startuml
version
Set the mode for address space map based mangling; OpenCL testing purposes only
Aligned allocation/deallocation functions are unavailable
-emit-fir
-emit-merged-ifs
Enable linker job to emit a static library.
Accept a PCH file that was created with compiler errors
-fzero-call-used-regs=
s119
-fbuild-session-timestamp=
-fcall-saved-x12
Allow using blocks with parameters of more specific type than the type system guarantees when a parameter is qualified id
-Wno-extra-semi-stmt
__builtin_amdgcn_ds_gws_sema_p
__builtin_amdgcn_rsqf
__builtin_amdgcn_sicmp
E2Usff
__builtin_amdgcn_div_fixuph
__builtin_amdgcn_global_atomic_fadd_v2f16
__builtin_amdgcn_sdot2
__builtin_amdgcn_wmma_f32_16x16x16_f16_w32
__builtin_r600_implicitarg_ptr
__builtin_amdgcn_mfma_i32_4x4x4i8
V4fWiWiV4fIiIiIi
__builtin_amdgcn_smfmac_f32_32x32x32_fp8_bf8
v120
v149
v184
v215
v248
s120
hidecallgraph
  Base preprocessed entity ID: 
MemberPointer
a150
long _Fract
<overloaded function type>
Specify where to find the compiled intrinsic modules
+fp-armv8d16sp
__ARM_FEATURE_SIMD32
__builtin_arm_smlatb
__builtin_arm_shsax
LLUiv*
__builtin_arm_cmse_TT
__builtin_arm_mve_vabavq_s16
__builtin_arm_mve_vabsq_m_f32
__builtin_arm_mve_vaddq_f32
__builtin_arm_mve_vaddq_x_n_s16
__builtin_arm_mve_vaddvq_s32
__builtin_arm_mve_vbicq_m_n_s16
__builtin_arm_mve_vbrsrq_m_n_s16
__builtin_arm_mve_vcaddq_rot270_s8
__builtin_arm_mve_vcaddq_rot90_x_s32
__builtin_arm_mve_vcmlaq_f32
__builtin_arm_mve_vcmpeqq_m_f16
__builtin_arm_mve_vcmpgeq_m_n_f32
__builtin_arm_mve_vcmpgtq_n_s8
__builtin_arm_mve_vcmpleq_s16
__builtin_arm_mve_vcmpneq_m_n_s32
__builtin_arm_mve_vcmulq_rot180_x_f32
__builtin_arm_mve_vctp8q
__builtin_arm_mve_vcvtnq_m_u16_f16
__builtin_arm_mve_vcvtq_m_f32_s32
__builtin_arm_mve_vcvtq_x_n_u16_f16
__builtin_arm_mve_vdupq_m_n_s16
__builtin_arm_mve_vdwdupq_wb_u8
__builtin_arm_mve_veorq_x_u8
__builtin_arm_mve_vhaddq_m_s32
__builtin_arm_mve_vhcaddq_rot270_m_s8
__builtin_arm_mve_vhsubq_n_u8
__builtin_arm_mve_vidupq_wb_u32
__builtin_arm_mve_vld1q_z_f32
__builtin_arm_mve_vldrbq_gather_offset_z_s8
__builtin_arm_mve_vldrhq_gather_offset_f16
__builtin_arm_mve_vldrwq_gather_base_f32
__builtin_arm_mve_vmaxaq_s8
__builtin_arm_mve_vmaxq_s16
__builtin_arm_mve_vminavq_s16
__builtin_arm_mve_vminq_s32
__builtin_arm_mve_vmladavaxq_p_s32
__builtin_arm_mve_vmlaldavaxq_p_s16
__builtin_arm_mve_vmlasq_m_n_u8
__builtin_arm_mve_vmlsdavxq_s8
__builtin_arm_mve_vmovltq_s8
__builtin_arm_mve_vmulhq_s8
__builtin_arm_mve_vmullbq_poly_x_p8
__builtin_arm_mve_vmulq_m_n_f16
__builtin_arm_mve_vmulq_x_n_u16
__builtin_arm_mve_vmvnq_x_n_u16
__builtin_arm_mve_vornq_s16
__builtin_arm_mve_vorrq_n_u16
__builtin_arm_mve_vqaddq_m_n_s32
__builtin_arm_mve_vqdmladhxq_m_s8
__builtin_arm_mve_vqdmulhq_m_s8
__builtin_arm_mve_vqmovnbq_s16
preserve_most
0x%0*llx 
__builtin_arm_mve_vqmovntq_u16
 0x%02x
<0x%8.8x> 
power6
  Constant pool offset = 0x%x, has %lld CU vectors:
pwr10
LINE
-mpower8
Compilation unit root DIE is not a unit DIE: 
__builtin_arm_mve_vreinterpretq_u64_s16
DIE address ranges are not contained in its parent's ranges:
-fno-rounding-math
NameIndex @ {0:x}: Abbreviation {1:x}: {2} uses an unexpected form {3} (expected form class {4}).
__builtin_arm_mve_vrshrq_m_n_u8
-ffile-prefix-map=
load command 
 has incorrect cmdsize
__builtin_arm_mve_vshrnbq_m_n_s32
sub_library_command
clang::opencl_generic
no LC_ID_DYLIB load command in dynamic library filetype
Disable linker dead stripping of globals in AddressSanitizer
ARM64_RELOC_GOT_LOAD_PAGE21
gnu::packed
Mach-O 64-bit unknown
__ptrauth_restricted_intptr
arm64_32
-bnso
) for opcode at: 0x
for BIND_OPCODE_DO_BIND missing preceding BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM for opcode at: 0x
__builtin_arm_mve_vmaxnmq_x
returns_nonnull
 page size 
__builtin_arm_mve_vorrq_m
gnu::stdcall
stroff field plus strsize field of LC_SYMTAB command 
indirect table
 command
Add directory to QUOTE include search path
featuresStr
 count not x86_FLOAT_STATE_COUNT for flavor number 
 which is a x86_THREAD_STATE64 flavor in 
two level hints
 not past the headers of the file
-fcrash-diagnostics=
__AVR_ATtiny841__
__AVR_ATmega48P__
__AVR_ATmega164A__
__AVR_ATmega328PB__
__AVR_ATmega16HVA__
__AVR_ATmega128RFR2__
__AVR_ATxmega64A1__
__AVR_ATtiny204__
__AVR_ATmega3209__
vr19
vr29
r7:6
v7:4
__builtin_brev_std
__builtin_HEXAGON_L2_loadrh_pcr
V32iV16iLLi
__builtin_HEXAGON_A2_addpsat
__builtin_HEXAGON_A2_orir
__builtin_HEXAGON_A2_svavgh
__builtin_HEXAGON_A2_vavgubr
__builtin_HEXAGON_A2_vnavghcr
__builtin_HEXAGON_A4_cmpbgtu
__builtin_HEXAGON_A4_vcmpbgt
__builtin_HEXAGON_C2_cmpgtp
__builtin_HEXAGON_C4_cmplteui
__builtin_HEXAGON_F2_conv_sf2uw
__builtin_HEXAGON_F2_sffixupd
__builtin_HEXAGON_M2_cnacs_s1
__builtin_HEXAGON_M2_mmaculs_rs0
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s1
__builtin_HEXAGON_M2_mpy_rnd_hl_s1
__builtin_HEXAGON_M2_mpyd_hl_s0
__builtin_HEXAGON_M2_mpyu_acc_ll_s0
__builtin_HEXAGON_M2_mpyud_ll_s0
__builtin_HEXAGON_M2_vmac2es
__builtin_HEXAGON_M4_and_xor
__builtin_HEXAGON_M4_xor_and
__builtin_HEXAGON_S2_asl_r_p_acc
__builtin_HEXAGON_S2_asr_r_p
__builtin_HEXAGON_S2_extractup
__builtin_HEXAGON_S2_lsr_i_r
__builtin_HEXAGON_S2_tableidxh_goodsyntax
__builtin_HEXAGON_S2_vtrunehb
__builtin_HEXAGON_S4_vxsubaddh
__builtin_HEXAGON_S6_vsplatrbp
__builtin_HEXAGON_M7_wcmpyiw_rnd
__builtin_HEXAGON_V6_pred_and_128B
__builtin_HEXAGON_V6_vabsdiffw
__builtin_HEXAGON_V6_vaddhsat
V16iV16iV16ii
__builtin_HEXAGON_V6_vaslhv
__builtin_HEXAGON_V6_vassignp_128B
__builtin_HEXAGON_V6_vdealb4w_128B
__builtin_HEXAGON_V6_vdmpyhisat_acc_128B
__builtin_HEXAGON_V6_veqb_and_128B
__builtin_HEXAGON_V6_vgth_or
__builtin_HEXAGON_V6_vgtw_and_128B
__builtin_HEXAGON_V6_vmaxub
__builtin_HEXAGON_V6_vmpybus_128B
__builtin_HEXAGON_V6_vmpyieoh
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc_128B
__builtin_HEXAGON_V6_vor
__builtin_HEXAGON_V6_vrmpybusi_acc
__builtin_HEXAGON_V6_vrsadubi
__builtin_HEXAGON_V6_vshufoh_128B
__builtin_HEXAGON_V6_vsubuhw
__builtin_HEXAGON_V6_vtmpyhb_acc_128B
__builtin_HEXAGON_V6_vaddbsat_dv_128B
__builtin_HEXAGON_V6_vasrhbsat
__builtin_HEXAGON_V6_vmpauhb_acc_128B
__builtin_HEXAGON_V6_vabsb_sat
__builtin_HEXAGON_V6_vgathermhwq
__builtin_HEXAGON_V6_vnavgb_128B
__builtin_HEXAGON_V6_vscattermwq
__builtin_HEXAGON_V6_vabs_sf
Prints debug information for the new pass manager
_tam
.system_framework
-fmodule-header=
$ft6
__loongarch__
__mc68040__
V2sV2si
__builtin_mips_cmpu_eq_qb
__builtin_mips_bposge32
__builtin_mips_mulsa_w_ph
__builtin_msa_adds_s_w
__builtin_msa_asub_u_b
V2ULLiV2ULLiIUi
__builtin_msa_bnegi_h
__builtin_msa_ceqi_b
__builtin_msa_clt_s_b
__builtin_msa_copy_u_d
__builtin_msa_dpadd_u_d
__builtin_msa_fcueq_d
__builtin_msa_ffql_w
__builtin_msa_fmin_a_d
__builtin_msa_fsune_w
__builtin_msa_ilvev_h
__builtin_msa_ld_h
__builtin_msa_max_a_w
__builtin_msa_min_u_b
__builtin_msa_mul_q_w
__builtin_msa_pcnt_w
V8sV8sV8sIUi
__builtin_msa_srar_d
__builtin_msa_subs_s_b
V4iV4iV4iV4i
__mips_hard_float
_MIPS_ARCH_OCTEONP
__nvvm_fmin_ftz_xorsign_abs_f16
__nvvm_fmax_nan_f16
__nvvm_mulhi_i
__nvvm_sad_ui
__nvvm_cos_approx_ftz_f
__nvvm_fma_rp_d
__nvvm_rsqrt_approx_f
__nvvm_i2d_rp
__nvvm_ull2f_rn
__nvvm_f2bf16_rn_relu
__nvvm_shfl_sync_bfly_i32
__nvvm_membar_cta
V4fiiii
__nvvm_atom_sys_add_gen_i
__nvvm_atom_sys_max_gen_ui
__nvvm_atom_cta_min_gen_ull
__nvvm_atom_cta_xor_gen_ll
UsUsC*
__nvvm_ldg_ui4
__hmma_m32n8k16_st_c_f32
(sm_72|sm_75|sm_80|sm_86|sm_87|sm_89|sm_90),(ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74|ptx75|ptx76|ptx77|ptx78)
__imma_m8n8k32_mma_u4
__nvvm_cp_async_wait_all
_MSVC_LANG
_MSVC_EXECUTION_CHARACTER_SET
__builtin_ppc_lwarx
__builtin_ppc_rdlam
__builtin_ppc_load4r
__builtin_ppc_dcbtt
__builtin_altivec_vaddcuq
V4fV4UiIi
__builtin_altivec_vmsumuhm
__builtin_altivec_vpkuhus
__builtin_altivec_vcmpeqfp
iiV1SLLLiV1SLLLi
V2LLiV2LLiV2ULLi
__builtin_altivec_vupklsb
iiV2ULLiV2ULLi
__builtin_altivec_vctzh
V4SiV8Ss
__builtin_altivec_vexpandwm
ULLiV1ULLLiIi
__builtin_altivec_vinsd
vV4iSLLivC*
__builtin_vsx_xvcmpgtdp
V16UcV16Uci
__builtin_vsx_xvcvdpsp
__builtin_vsx_xxblendvd
__builtin_trechkpt
ULLiV1LLLii
__builtin_mma_pmxvi16ger2
__builtin_mma_xvf64gernp
_ARCH_PPC
_ARCH_PWR10
-mpaired-vector-memops
__fetch_and_swap
__maddhd
__vncipher
__fmadd
__frip
-mpower10-vector
vs31
vs58
Generate branches with extended addressability, usually via indirect jumps.
__builtin_rvv_vwaddu_vv_ta
__builtin_rvv_vloxseg5ei8_v_tumu
__builtin_rvv_vloxseg2ei16_v_tuma
__builtin_rvv_vloxseg8ei16_v_ta
__builtin_rvv_vloxseg6ei32_v_tu
__builtin_rvv_vloxseg4ei64_v_tumu
__builtin_rvv_vloxseg2ei8_v_tumu
__builtin_rvv_vsseg3e16_v
__builtin_rvv_vsseg8e32_v_m
__builtin_rvv_vssseg5e16_v
__builtin_rvv_vssseg6e64_v
__builtin_rvv_vsuxseg3ei32_v
__builtin_rvv_vloxei8_v_tuma
__builtin_rvv_vsoxseg8ei8_v
__builtin_rvv_vsoxseg8ei32_v_m
__builtin_rvv_vrsub_vx_tumu
__builtin_rvv_vwadd_vx_tuma
__builtin_rvv_vwadd_wv_ta
__builtin_rvv_vadc_vvm_ta
__builtin_rvv_vxor_vx_ta
__builtin_rvv_vsrl_vv_tu
__builtin_rvv_vnsrl_wx_tama
__builtin_rvv_vmsne_vv
__builtin_rvv_vmsle_vx
__builtin_rvv_vse8_v_m
__builtin_rvv_vmin_vx_ta
__builtin_rvv_vmul_vv_ta
__builtin_rvv_vmulhu_vx_tama
__builtin_rvv_vdiv_vv_tuma
__builtin_rvv_vwmul_vv_ta
__builtin_rvv_vwmulsu_vv_tamu
__builtin_rvv_vmadd_vv_tumu
__builtin_rvv_vwmaccu_vx_tuma
__builtin_rvv_vmerge_vvm_ta
__builtin_rvv_vsadd_vx_tama
__builtin_rvv_vaaddu_vx_tumu
__builtin_rvv_vasub_vv_tuma
__builtin_rvv_vssra_vv_ta
__builtin_rvv_vnclip_wv_tama
__builtin_rvv_vfrsub_vf_tama
__builtin_rvv_vfwadd_wv_tuma
__builtin_rvv_vfdiv_vv_ta
__builtin_rvv_vfmacc_vv_tu
__builtin_rvv_vfmsac_vf_tama
__builtin_rvv_vfnmadd_vv_tamu
__builtin_rvv_vfwmacc_vv_tumu
__builtin_rvv_vfwmsac_vf_ta
__builtin_rvv_vfmax_vf_ta
__builtin_rvv_vfsgnjx_vv_tu
__builtin_rvv_vmflt_vv
__builtin_rvv_vmfge_vf_ma
__builtin_rvv_vredand_vs_tum
__builtin_rvv_vfredmin_vs_tam
__builtin_rvv_vid_v_tamu
__builtin_rvv_vfslide1up_vf_ta
__builtin_rvv_vrgatherei16_vv_tamu
__builtin_rvv_vle64ff_v_ta
__builtin_rvv_vlseg6e8_v_tuma
__builtin_rvv_vlseg4e16_v_tuma
__builtin_rvv_vlseg3e32_v_tu
__builtin_rvv_vlseg8e32_v_tumu
__builtin_rvv_vlseg6e64_v_tamu
__builtin_rvv_vlseg5e8ff_v_tama
__builtin_rvv_vlseg4e16ff_v_tuma
__builtin_rvv_vlseg2e32ff_v_tama
__builtin_rvv_vlseg8e32ff_v_tu
__builtin_rvv_vlseg6e64ff_v_tu
__builtin_rvv_vlsseg4e8_v_tamu
__builtin_rvv_vlsseg2e8_v_ta
__builtin_rvv_vlsseg7e16_v_tuma
__builtin_rvv_vlsseg5e32_v_tu
__builtin_rvv_vlsseg3e64_v_tu
__builtin_rvv_vlsseg8e64_v_tumu
__builtin_rvv_vluxseg6ei8_v_tuma
__builtin_rvv_vluxseg4ei16_v_tuma
__builtin_rvv_vluxseg3ei32_v_tu
__builtin_rvv_vluxseg8ei32_v_tumu
__builtin_rvv_vluxseg6ei64_v_tamu
__builtin_rvv_vnot_v_tumu
__builtin_rvv_vse16_v
__builtin_rvv_vfcvt_f_xu_v_tamu
__builtin_rvv_vfncvt_f_x_w_ta
__builtin_rvv_vfncvt_x_f_w_ta
__builtin_rvv_vfwcvt_f_f_v_tama
__builtin_rvv_vfwcvt_x_f_v_tamu
__builtin_rvv_vsetvli
__builtin_rvv_vzext_vf2_tumu
zbkb,32bit
__builtin_riscv_sha512sum0r_32
__builtin_riscv_sha512sum1_64
__ma2155
ma2100
gr712rc
__builtin_s390_vuplb
V8SsV8SsV8Ssi*
__builtin_s390_verllh
__builtin_s390_vmaef
__builtin_s390_vsq
V8UsV8UsV8UsIi
__builtin_s390_vfenezb
V2SLLiV2dV2di*
__builtin_s390_vfmasb
arch8
zEC12
__builtin_ve_vl_vldl2dzx_vssvl
__builtin_ve_vl_vst2dnc_vssml
fV256dUi
__builtin_ve_vl_pvbrd_vsl
__builtin_ve_vl_pvaddu_vsvl
V256dLiV256dV256bV256dUi
__builtin_ve_vl_vsubswzx_vsvmvl
__builtin_ve_vl_vmulswzx_vsvvl
__builtin_ve_vl_vdivuw_vvsl
__builtin_ve_vl_vdivsl_vvsl
__builtin_ve_vl_vcmpswzx_vvvl
__builtin_ve_vl_pvmaxs_vvvMvl
__builtin_ve_vl_vminsl_vsvmvl
__builtin_ve_vl_pvxor_vsvl
__builtin_ve_vl_pvldz_vvMvl
__builtin_ve_vl_vsll_vvvl
__builtin_ve_vl_vslawzx_vvvl
__builtin_ve_vl_pvsra_vvsvl
V256dfV256dV256bV256dUi
__builtin_ve_vl_vfmuls_vsvvl
__builtin_ve_vl_vfcmps_vvvl
__builtin_ve_vl_vfmind_vsvvl
__builtin_ve_vl_vfmadd_vvsvmvl
__builtin_ve_vl_vfmsbd_vvsvvl
__builtin_ve_vl_vfnmads_vvvvl
__builtin_ve_vl_vfnmsbs_vvvvmvl
__builtin_ve_vl_vcvtwdsx_vvl
__builtin_ve_vl_vcvtldrz_vvvl
__builtin_ve_vl_vcp_vvmvl
__builtin_ve_vl_vfmkleqnan_mvml
__builtin_ve_vl_vfmkweqnan_mvml
__builtin_ve_vl_pvfmkwupnan_mvml
__builtin_ve_vl_vfmksle_mvml
__builtin_ve_vl_pvfmksupge_mvl
__builtin_ve_vl_pvfmkslogenan_mvl
__builtin_ve_vl_vgt_vvssmvl
__builtin_ve_vl_vsc_vvssml
__builtin_ve_vl_eqvm_MMM
__builtin_ve_vl_fencec_s
__builtin_wasm_trunc_saturate_u_i64_f32
__builtin_wasm_avgr_u_i8x16
__builtin_wasm_extadd_pairwise_i16x8_u_i32x4
__builtin_wasm_shuffle_i8x16
iV2LLi
__builtin_wasm_min_f64x2
relaxed-simd
c++-allocator-inlining
display-ctu-progress
track-conditions
__SEG_FS
znver1
__AVX512VNNI__
__MOVDIRI__
__MMX__
fsgsbase
westmere
xmm20
zmm3
__builtin_cpu_is
__builtin_ia32_pfrcpit2
__builtin_ia32_psubusw
__builtin_ia32_psradi
__builtin_ia32_cvtps2pi
V8cV8c
__builtin_ia32_comisdle
__builtin_ia32_maxss
sV8sIi
__builtin_ia32_sfence
V4fV4fV2d
__builtin_ia32_psrldi128
__builtin_ia32_ptestz128
__builtin_ia32_crc32hi
__builtin_ia32_vgf2p8affineinvqb_v32qi
__builtin_ia32_haddps256
V4iV8iIi
__builtin_ia32_roundpd256
__builtin_ia32_maskloadpd256
__builtin_ia32_packusdw256
__builtin_ia32_pshuflw256
__builtin_ia32_pblendd128
__builtin_ia32_psrav8si
V4OiV4OiOiC*V4OiV4OiIc
__builtin_ia32_xrstors
__builtin_ia32_slwpcb
__builtin_ia32_vfmaddps512_maskz
__builtin_ia32_vphaddwd
__builtin_ia32_vpcomub
__builtin_ia32_rcp28ss_round_mask
__builtin_ia32_cvtpd2dq512_mask
__builtin_ia32_storedqusi512_mask
__builtin_ia32_vpdpwssd128
V4iV4ivC*V4iUcIi
vv*UcV8iV8OiIi
__builtin_ia32_cmpw128_mask
V32sV16iV16i
V32cV32c
__builtin_ia32_divss_round_mask
V8iV8iV8iUc
V4iV4dV4iUc
V32cV32cC*V32cUi
V8fV8fV8fV8fUc
__builtin_ia32_vpermi2vard256
__builtin_ia32_vpshldd256
__builtin_ia32_vpshrdw128
__builtin_ia32_cvttps2qq256_mask
__builtin_ia32_cvtqq2ps512_mask
__builtin_ia32_prord256
__builtin_ia32_psraw512
__builtin_ia32_vcomisd
V2dV2dV2dV2OiIiUc
__builtin_ia32_storedquqi128_mask
__builtin_ia32_vcvttsd2usi32
__builtin_ia32_psrav16si
__builtin_ia32_sqrtss_round_mask
__builtin_ia32_cvtd2mask128
__builtin_ia32_pmovsqd512mem_mask
__builtin_ia32_pmovsqb256_mask
__builtin_ia32_pmovusdb256_mask
__builtin_ia32_pmovwb128mem_mask
V2dV4dIiV2dUc
__builtin_ia32_getmantpd256_mask
UcV8fIiUc
__builtin_ia32_kortestzsi
__builtin_ia32_kmovw
__builtin_ia32_expandhi512_mask
__builtin_ia32_cvtsi2ss32
vV8OiV8OiUc*Uc*
__builtin_ia32_maxsh_round_mask
__builtin_ia32_getexpph128_mask
UsV16xIiUs
__builtin_ia32_vcvttph2w256_mask
__builtin_ia32_vcvtph2udq512_mask
__builtin_ia32_vcvtph2qq512_mask
__builtin_ia32_vcvtph2psx512_mask
__builtin_ia32_vfmaddcph512_maskz
__builtin_ia32_selectw_256
V16fUsV16fV16f
__builtin_ia32_reduce_fmul_ph512
__builtin_ia32_aesdec256kl_u8
WiWiD*
__builtin_ia32_lwpval64
__builtin_ia32_vcvttsh2usi64
__builtin_ia32_tdpbssd
-frandom-seed=
-nostdinc++
static
false
nullptr
__extension__
__has_trivial_copy
__remove_pointer
__is_member_object_pointer
__generic
__bridge
starequal
hash
annot_pragma_fenv_access
annot_pragma_riscv
__is_fundamental
__builtin_ptrauth_struct_disc
__builtin_tmo_get_type_data
not a number, or does not fit in an unsigned int
cl::location(x) specified more than once!
DW_TAG_namelist
DW_TAG_immutable_type
DW_TAG_GHS_namespace
DW_AT_common_reference
DW_AT_priority
DW_AT_object_pointer
DW_AT_call_data_location
DW_AT_HP_opt_level
DW_AT_GNU_tail_call
DW_AT_SUN_memop_type_ref
DW_AT_GNU_numerator
DW_AT_BORLAND_Delphi_return
DW_FORM_string
DW_FORM_strx3
DW_OP_minus
DW_OP_lit10
DW_OP_reg12
DW_OP_breg11
DW_OP_call_frame_cfa
DW_OP_GNU_const_index
DW_END_default
DW_LANG_PLI
DW_CC_pass_by_reference
DW_ORD_col_major
DW_MACRO_define_strx
DW_CFA_AARCH64_negate_ra_state
DW_APPLE_PROPERTY_readwrite
OTHER
NULL
R_TOCL
Invalid abbrev number
carmel
+predres
armv8.4-a
sve2
ls64
mops
v8.7a
-vfp4sp
fpv5-dp-d16
arm926ej-s
cortex-m35p
-hwdiv-arm
armv6-m
8.4-A
8-M.Mainline
fp16
-cdecp7
Invalid character in exponent
ck803tr1
ck803ftr3
ck804efht
c810
c810t
fpuv3_sf
dspe60
+smart
+7e10
-nodefaultlib:vcomp.lib
reference temporary for 
____Z
/dev/urandom
zicbom
standard supervisor-level extension
-fno-diagnostics-use-presumed-location
gfx909
cedar
rv64imac
Enable -time-passes memory tracking (this may be slow)
s390x
emscripten
code16
mesh
sparc64
CJK COMPATIBILITY IDEOGRAPH-
'use-external-name' is not supported for 'directory' entries
'contents': [
color
yonah
icelake-server
znver2
mwaitx
avxvnni
Enable use of builtin functions
out of range number
eight
vertical-line
.0.0
input
Missing SDKContentRoot
__builtin_sve_svldff1_gather_u64base_u64
__builtin_sve_svldff1_vnum_bf16
__builtin_sve_svldff1sb_gather_u32base_offset_u32
__builtin_sve_svldff1sb_u32
__builtin_sve_svldff1sh_gather_u32base_index_u32
__builtin_sve_svldff1sh_gather_u64base_u64
__builtin_sve_svldff1sw_gather_u64base_index_u64
__builtin_sve_svldff1ub_gather_s64offset_s64
__builtin_sve_svldff1ub_u16
__builtin_sve_svldff1uh_gather_s64index_s64
__builtin_sve_svldff1uh_gather_u64base_u64
__builtin_sve_svldff1uw_gather_s64offset_s64
__builtin_sve_svldnf1_f16
__builtin_sve_svldnf1_vnum_f64
__builtin_sve_svldnf1sb_vnum_u16
__builtin_sve_svldnf1ub_s16
__builtin_sve_svldnf1uh_vnum_s64
__builtin_sve_svldnt1_gather_s64index_s64
__builtin_sve_svldnt1_gather_u64base_index_u64
__builtin_sve_svldnt1_s8
__builtin_sve_svldnt1b_s8_x2
__builtin_sve_svldnt1d_vnum_f64_x2
__builtin_sve_svldnt1h_vnum_s16_x2
__builtin_sve_svldnt1sb_gather_u64base_u64
__builtin_sve_svldnt1sh_gather_u64base_offset_s64
__builtin_sve_svldnt1sw_gather_u64base_index_u64
__builtin_sve_svldnt1ub_gather_u64base_s64
__builtin_sve_svldnt1uh_gather_u32offset_u32
__builtin_sve_svldnt1uw_gather_u64base_offset_s64
__builtin_sve_svldnt1w_vnum_f32_x2
__builtin_sve_svlen_s64
__builtin_sve_svlogb_f32_m
__builtin_sve_svlsl_n_s8_z
__builtin_sve_svlsl_n_u8_x
__builtin_sve_svlsl_u64_x
q8Usq16bq8UsUWi
__builtin_sve_svlsl_wide_s8_m
__builtin_sve_svlsl_wide_u8_z
__builtin_sve_svlsr_u32_z
__builtin_sve_svlsr_wide_n_u8_z
__builtin_sve_svmad_f32_z
__builtin_sve_svmad_n_f64_m
__builtin_sve_svmad_n_s8_z
__builtin_sve_svmad_n_u8_x
__builtin_sve_svmad_s8_z
q16Ucq16bq16Ucq16Ucq16Uc
__builtin_sve_svmax_n_f16_z
__builtin_sve_svmax_n_s64_z
__builtin_sve_svmax_s16_x
__builtin_sve_svmax_u16_x
__builtin_sve_svmaxnm_n_f16_m
__builtin_sve_svmaxnmv_f16
__builtin_sve_svmaxp_u16_m
__builtin_sve_svmaxv_s8
__builtin_sve_svmin_n_f32_x
__builtin_sve_svmin_n_s8_x
__builtin_sve_svmin_s32_m
__builtin_sve_svmin_u32_x
__builtin_sve_svminnm_n_f16_z
__builtin_sve_svminnmv_f64
__builtin_sve_svminp_u32_m
__builtin_sve_svminv_u32
__builtin_sve_svmla_lane_s16
__builtin_sve_svmla_n_s16_m
__builtin_sve_svmla_n_u32_z
__builtin_sve_svmla_s32_x
q4fq4fq8hq8h
__builtin_sve_svmlalb_n_s64
__builtin_sve_svmlalt_n_s16
__builtin_sve_svmls_f16_z
__builtin_sve_svmls_n_f16_z
__builtin_sve_svmls_n_s64_z
__builtin_sve_svmls_s16_x
__builtin_sve_svmls_u16_z
__builtin_sve_svmlslb_n_s64
__builtin_sve_svmlslt_lane_u64
q2dq2dq2dq2d
__builtin_sve_svmovlb_u64
__builtin_sve_svmsb_n_f16_x
__builtin_sve_svmsb_n_s64_x
__builtin_sve_svmsb_s16_m
__builtin_sve_svmsb_u16_m
__builtin_sve_svmul_f64_z
__builtin_sve_svmul_n_f32_z
__builtin_sve_svmul_n_u16_x
__builtin_sve_svmul_s32_m
__builtin_sve_svmul_u8_m
__builtin_sve_svmulh_n_u16_m
__builtin_sve_svmulh_s32_z
__builtin_sve_svmulh_u64_m
__builtin_sve_svmullb_n_u64
__builtin_sve_svmullt_n_u32
__builtin_sve_svmulx_n_f16_m
__builtin_sve_svnbsl_n_u16
__builtin_sve_svneg_f64_m
__builtin_sve_svnmad_f16_m
__builtin_sve_svnmad_n_f64_z
__builtin_sve_svnmla_f32_z
__builtin_sve_svnmls_n_f16_m
__builtin_sve_svnmsb_f64_m
__builtin_sve_svnot_s32_m
__builtin_sve_svnot_u32_z
__builtin_sve_svorr_n_s8_m
__builtin_sve_svorr_s16_m
__builtin_sve_svorr_u32_z
__builtin_sve_svorv_u64
__builtin_sve_svpmullb_pair_u8
__builtin_sve_svpnext_b64
vq16bq2UWiWiIi
__builtin_sve_svprfd_vnum
__builtin_sve_svprfw_gather_u64base_index
__builtin_sve_svptrue_b8
__builtin_sve_svqabs_s64_m
__builtin_sve_svqadd_n_s32_x
__builtin_sve_svqadd_n_u64_x
__builtin_sve_svqadd_s32_z
__builtin_sve_svqadd_u32_x
__builtin_sve_svqdecb_n_s32
__builtin_sve_svqdecd_n_u32
__builtin_sve_svqdech_n_s64
__builtin_sve_svqdecp_n_s32_b32
__builtin_sve_svqdecp_n_u64_b16
__builtin_sve_svqdecw_n_u32
__builtin_sve_svqdmlalb_lane_s64
__builtin_sve_svqdmlalt_n_s64
__builtin_sve_svqdmlslbt_n_s64
__builtin_sve_svqdmulh_n_s8
__builtin_sve_svqdmullt_n_s16
__builtin_sve_svqincd_n_u64
__builtin_sve_svqinch_n_u32
__builtin_sve_svqincp_n_u32_b8
__builtin_sve_svqincw_pat_n_s32
__builtin_sve_svqneg_s8_m
__builtin_sve_svqrdmlah_n_s64
__builtin_sve_svqrdmulh_lane_s32
__builtin_sve_svqrshl_n_s32_z
__builtin_sve_svqrshl_n_u64_z
__builtin_sve_svqrshl_s64_z
__builtin_sve_svqrshl_u8_z
__builtin_sve_svqrshrnb_n_s32
q16Ucq16Ucq8UsIUWi
q8Usq8Usq4iIUWi
__builtin_sve_svqshl_n_u32_m
__builtin_sve_svqshl_s64_m
__builtin_sve_svqshl_u8_z
__builtin_sve_svqshlu_n_s64_z
__builtin_sve_svqshrunt_n_s16
__builtin_sve_svqsub_n_s8
__builtin_sve_svqsub_n_u8_m
__builtin_sve_svqsub_s64_z
__builtin_sve_svqsub_u8_m
__builtin_sve_svqsubr_n_u16_m
__builtin_sve_svqsubr_s32_z
__builtin_sve_svqsubr_u64_m
q16Scq16Scq8s
__builtin_sve_svqxtunb_s64
__builtin_sve_svraddhnb_u16
__builtin_sve_svraddhnt_u64
__builtin_sve_svrbit_u32_m
q4fq4f
__builtin_sve_svrecpx_f32_z
q8yq8y
__builtin_sve_svrevb_s32_x
__builtin_sve_svrevd_s16_x
__builtin_sve_svrevd_u64_m
__builtin_sve_svrevh_u32_z
__builtin_sve_svrhadd_n_s64_z
__builtin_sve_svrhadd_n_u8_z
__builtin_sve_svrhadd_u32_x
__builtin_sve_svrinta_f32_z
__builtin_sve_svrintm_f64_m
__builtin_sve_svrintp_f32_m
__builtin_sve_svrintz_f16_z
__builtin_sve_svrshl_n_s64_x
__builtin_sve_svrshl_s16_x
__builtin_sve_svrshl_u32_x
__builtin_sve_svrshr_n_s8_m
q2UWiq16bq2UWiIUWi
__builtin_sve_svrsqrte_f32
__builtin_sve_svrsra_n_u8
__builtin_sve_svrsubhnt_n_u32
__builtin_sve_svsbclt_u32
__builtin_sve_svscale_n_f32_m
__builtin_sve_svsel_f32
q4dq4dIUWiq2d
__builtin_sve_svset2_u64
q48Scq48ScIUWiq16Sc
__builtin_sve_svset4_f64
q64Ucq64UcIUWiq16Uc
q2UWiq4UiIUWi
__builtin_sve_svshrnt_n_u64
__builtin_sve_svsplice_s16
__builtin_sve_svsqadd_n_u8_m
__builtin_sve_svsqadd_u64_z
__builtin_sve_svsra_n_u32
__builtin_sve_svst1_f32
vq16bUi*q4iq4Ui
vq16bq4Uiq4f
__builtin_sve_svst1_scatter_u32index_u32
__builtin_sve_svst1_scatter_u64base_offset_u64
vq16bUi*q4Ui
__builtin_sve_svst1_vnum_s16
vq16bSc*q4i
__builtin_sve_svst1b_scatter_u32base_offset_s32
vq16bUc*q8Us
vq16bSc*Wiq2Wi
vQd*q8d
__builtin_sve_svst1d_vnum_s64_x4
vQSs*q32s
vq16bSs*q2Wiq2Wi
__builtin_sve_svst1h_scatter_u64base_offset_u64
__builtin_sve_svst1h_u64
vq16bSs*Wiq2Wi
vQSi*q8i
vq16bSi*q2UWiq2Wi
__builtin_sve_svst1w_vnum_s32_x2
vq16bf*q8f
__builtin_sve_svst2_u32
vq16bSWi*Wiq4Wi
__builtin_sve_svst3_f32
vq16bUWi*q6UWi
vq16bSi*Wiq12i
vq16bf*q16f
__builtin_sve_svst4_u64
vq16bSWi*Wiq8Wi
vq16bUc*Wiq64Uc
__builtin_sve_svstnt1_scatter_u32base_s32
__builtin_sve_svstnt1_scatter_u64index_s64
__builtin_sve_svstnt1_vnum_u16
__builtin_sve_svstnt1b_scatter_u64base_offset_s64
__builtin_sve_svstnt1d_vnum_f64_x2
__builtin_sve_svstnt1h_scatter_s64offset_u64
__builtin_sve_svstnt1h_scatter_u64offset_s64
__builtin_sve_svstnt1w_f32_x4
__builtin_sve_svstnt1w_vnum_f32_x2
__builtin_sve_svsub_n_f16_m
__builtin_sve_svsub_n_s64_z
__builtin_sve_svsub_n_u8_x
__builtin_sve_svsub_u32_x
__builtin_sve_svsubhnb_s32
__builtin_sve_svsublb_n_s16
__builtin_sve_svsublbt_n_s16
__builtin_sve_svsubltb_n_s64
__builtin_sve_svsubr_n_f16_z
__builtin_sve_svsubr_n_s8_x
__builtin_sve_svsubr_s16_m
__builtin_sve_svsubr_u64_m
__builtin_sve_svsubwb_u16
__builtin_sve_svsudot_n_s32
q8sq16sq8Us
__builtin_sve_svtbl_f32
__builtin_sve_svtbl_u8
__builtin_sve_svtbx_u16
__builtin_sve_svtrn1_f32
__builtin_sve_svtrn1q_u16
__builtin_sve_svtrn2_s8
__builtin_sve_svtsmul_f16
q16yv
__builtin_sve_svundef2_u8
q6Wiv
__builtin_sve_svundef4_f64
__builtin_sve_svundef4_u64
__builtin_sve_svundef_s8
__builtin_sve_svunpkhi_u32
__builtin_sve_svuqadd_n_s64_z
__builtin_sve_svuqadd_s8_m
__builtin_sve_svuzp1_s32
__builtin_sve_svuzp1q_u16
__builtin_sve_svuzp2_u32
__builtin_sve_svuzp2q_u8
__builtin_sve_svwhilege_b8_s64
__builtin_sve_svwhilegt_b8_s32
__builtin_sve_svwhilele_b8_s64
__builtin_sve_svwhilelt_b64_s64
q16bSWiC*SWiC*
__builtin_sve_svwhilewr_s16
__builtin_sve_svxar_n_u8
__builtin_sve_svzip1_u32
__builtin_sve_svzip2_b8
__builtin_sve_svzip2q_f32
__builtin_sve_reinterpret_s8_u8
q16Scq4f
__builtin_sve_reinterpret_s16_f16
q4Siq2SWi
__builtin_sve_reinterpret_s64_s8
__builtin_sve_reinterpret_s64_u64
__builtin_sve_reinterpret_u8_u8
q8Usq16Sc
q8Usq4f
q4Uiq4Si
warning: 
-include:__asan_seh_interceptor
Unterminated VBR
Malformed block at top-level of diagnostics
SrcRange
dontinclude
q4Uiq16Sc
example
Give global types 'default' visibility and global functions and variables 'hidden' visibility by default
duplicated %s '%s'
-dump-tokens
hideinitializer
-disable-llvm-optzns
Don't run the LLVM IR verifier pass
Print include directives in -E mode in addition to normal output
include a detailed record of preprocessing actions
-fno-objc-encode-cxx-class-template-spec
Select underlying type for wchar_t
char,short,int
-fweb
gfx90a
param
--cuda-gpu-arch=
protocol
Emit coverage data to this filename.
relatesalso
<W (with value) group>
--compile
endsecreflist
short
OpenCL only. Allow use of less precise MAD computations in the generated binary.
-cl-std=
-cl-unsafe-math-optimizations
templatefield
-ccc-objcmt-migrate
-cfg-add-implicit-dtors
-chain-include
Accept a PCM file that was created with compiler errors
InMemoryFileSystem
-falign-jumps=
Rename failed: 
-defaultlib:oldnames
Enable -Wsystem-headers
--end-no-unused-arguments
Emit error if a specific declaration is deserialized from PCH, for testing
Set runtime encoding, supports only UTF-8
Generate pre-compiled module file from a module map
x86-64
Generate Interface Stub Files.
Disable ODR hash checking for protocols
-fxray-selected-function-group=
When using -fxray-function-groups, select which group of functions to instrument. Valid range is 0 to fxray-function-groups - 1
s104
Make the x14 register call-saved (AArch64 only)
-fc++-static-destructors
-fbracket-depth
Make the x8 register call-saved (AArch64 only)
-fcas-fs
-fcas-plugin-path
Enable cf-protection in 'full' mode
-fcoarray=
llvm-symbolizer
-ras
DECL_STATIC_ASSERT
__builtin_amdgcn_ds_gws_sema_br
__builtin_amdgcn_div_fmasf
__builtin_amdgcn_rsq
WUiWUiWUiIi
__builtin_amdgcn_ds_fminf
__builtin_amdgcn_cvt_pknorm_u16
__builtin_amdgcn_buffer_wbinvl1_vol
fUiUiUiUi
__builtin_amdgcn_mov_dpp
ff*1f
__builtin_amdgcn_flat_atomic_fadd_v2bf16
fV2sV2sfIb
UiUiUiUiUiIbIb
V4UiWUifV4fV4hV4hV4Ui
__builtin_amdgcn_wmma_bf16_16x16x16_bf16_w64
__builtin_amdgcn_endpgm
V4fffV4fIiIiIi
V16iiiV16iIiIiIi
V4fV4sV4sV4fIiIiIi
__builtin_amdgcn_mfma_f32_16x16x32_bf8_bf8
__builtin_amdgcn_smfmac_f32_32x32x16_bf16
__builtin_amdgcn_smfmac_f32_32x32x32_bf8_fp8
v104
v119
v136
v148
v168
v183
v200
v214
v232
v247
vcc_hi
-dump-raw-tokens
-fasm
-fastf
Adjusted
Decltype
DeducedTemplateSpecialization
FunctionProto
a126
Record
Vector
unsigned short _Accum
unsigned long _Accum
_Sat unsigned short _Fract
+tpidr-el3
-fextdirs=
8_2A
aapcs-linux
+fp-armv8sp
__ARM_ARCH_7A__
__thumb2__
__ARM_FEATURE_BTI
__builtin_arm_smlabt
__builtin_arm_uadd8
__builtin_arm_shasx
__builtin_arm_smlad
__builtin_arm_ldrexd
__builtin_arm_cdp
UiUiLLUi
__builtin_arm_mve_srshr
__builtin_arm_mve_vabavq_p_u8
__builtin_arm_mve_vabdq_s32
__builtin_arm_mve_vabsq_m_f16
__builtin_arm_mve_vadcq_m_s32
__builtin_arm_mve_vaddq_f16
__builtin_arm_mve_vaddq_n_s16
__builtin_arm_mve_vaddq_x_n_f32
__builtin_arm_mve_vaddvaq_p_u32
__builtin_arm_mve_vaddvq_s16
__builtin_arm_mve_vandq_s8
__builtin_arm_mve_vbicq_m_f32
__builtin_arm_mve_vbicq_s8
__builtin_arm_mve_vbrsrq_m_n_f32
__builtin_arm_mve_vbrsrq_x_n_s8
__builtin_arm_mve_vcaddq_rot270_s32
__builtin_arm_mve_vcaddq_rot90_m_s16
__builtin_arm_mve_vcaddq_rot90_x_s16
__builtin_arm_mve_vclzq_m_u16
__builtin_arm_mve_vcmlaq_f16
__builtin_arm_mve_vcmpcsq_m_n_u32
__builtin_arm_mve_vcmpeqq_f32
__builtin_arm_mve_vcmpeqq_n_s32
__builtin_arm_mve_vcmpgeq_m_n_f16
__builtin_arm_mve_vcmpgtq_f32
__builtin_arm_mve_vcmpgtq_n_s32
__builtin_arm_mve_vcmpleq_f32
__builtin_arm_mve_vcmpleq_n_s8
__builtin_arm_mve_vcmpltq_n_f32
__builtin_arm_mve_vcmpneq_m_n_s16
__builtin_arm_mve_vcmpneq_n_u8
__builtin_arm_mve_vcmulq_rot180_x_f16
__builtin_arm_mve_vcreateq_f32
__builtin_arm_mve_vctp64q_m
__builtin_arm_mve_vcvtbq_m_f32_f16
__builtin_arm_mve_vcvtnq_m_s32_f32
__builtin_arm_mve_vcvtpq_u16_f16
__builtin_arm_mve_vcvtq_m_f16_u16
__builtin_arm_mve_vcvtq_n_u16_f16
__builtin_arm_mve_vcvtq_x_n_s32_f32
__builtin_arm_mve_vddupq_m_wb_u8
__builtin_arm_mve_vdupq_m_n_f32
__builtin_arm_mve_vdupq_x_n_s32
__builtin_arm_mve_vdwdupq_wb_u32
__builtin_arm_mve_veorq_m_u8
__builtin_arm_mve_veorq_x_u32
__builtin_arm_mve_vgetq_lane_f32
__builtin_arm_mve_vhaddq_m_s16
__builtin_arm_mve_vhaddq_u8
__builtin_arm_mve_vhcaddq_rot270_m_s32
__builtin_arm_mve_vhsubq_m_n_s32
__builtin_arm_mve_vhsubq_n_u32
__builtin_arm_mve_vhsubq_x_u16
__builtin_arm_mve_vidupq_wb_u16
__builtin_arm_mve_viwdupq_wb_u8
__builtin_arm_mve_vld1q_z_f16
__builtin_arm_mve_vld4q_f32
__builtin_arm_mve_vldrbq_gather_offset_z_s32
__builtin_arm_mve_vldrdq_gather_base_u64
__builtin_arm_mve_vldrhq_f16
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_s16
__builtin_arm_mve_vldrwq_f32
__builtin_arm_mve_vldrwq_gather_shifted_offset_f32
__builtin_arm_mve_vmaxaq_s32
__builtin_arm_mve_vmaxnmq_f32
__builtin_arm_mve_vmaxq_m_u8
__builtin_arm_mve_vmaxvq_p_u8
__builtin_arm_mve_vminavq_p_s8
__builtin_arm_mve_vminnmq_x_f32
__builtin_arm_mve_vminq_s16
__builtin_arm_mve_vminvq_u16
__builtin_arm_mve_vmladavaxq_p_s16
__builtin_arm_mve_vmladavq_u8
__builtin_arm_mve_vmlaldavaq_u32
__builtin_arm_mve_vmlaq_m_n_s32
__builtin_arm_mve_vmlasq_m_n_u32
__builtin_arm_mve_vmlsdavaxq_s16
__builtin_arm_mve_vmlsdavxq_s32
__builtin_arm_mve_vmovlbq_m_s8
__builtin_arm_mve_vmovltq_s16
__builtin_arm_mve_vmovntq_m_s32
__builtin_arm_mve_vmulhq_s32
__builtin_arm_mve_vmullbq_int_s32
__builtin_arm_mve_vmullbq_poly_x_p16
__builtin_arm_mve_vmulltq_int_x_u16
__builtin_arm_mve_vmulq_m_f32
__builtin_arm_mve_vmulq_n_u16
__builtin_arm_mve_vmulq_x_n_s8
__builtin_arm_mve_vmvnq_m_u16
__builtin_arm_mve_vmvnq_x_n_s32
__builtin_arm_mve_vnegq_s8
__builtin_arm_mve_vornq_m_u8
__builtin_arm_mve_vorrq_m_f16
__builtin_arm_mve_vorrq_n_s32
__builtin_arm_mve_vpselq_f32
__builtin_arm_mve_vqaddq_m_n_s16
__builtin_arm_mve_vqaddq_n_u8
__builtin_arm_mve_vqdmladhxq_m_s32
__builtin_arm_mve_vqdmlsdhq_m_s32
__builtin_arm_mve_vqdmulhq_m_s32
__builtin_arm_mve_vqdmulltq_m_n_s32
__builtin_arm_mve_vqmovnbq_m_u32
-rtm
 - constant: 
, unit_offset = 
%08llx %04llx %04llx
__builtin_arm_mve_vqdmulltq_s16
<decoding error>
__builtin_arm_mve_vqrdmlashq_m_n_s8
<0x%llx> 
__builtin_arm_mve_vqrshlq_n_u32
DW_FORM(0x%4.4x)
 is beyond .debug_str bounds
  Address area offset = 0x%x, has %lld entries:
__builtin_arm_mve_vqshlq_m_u32
 => 0x%08llx
Show header includes and nesting depth
ABBREV
ppc64le
%5u 0x%016llx 
section offset exceeds section size
The 16 bit unit header version is not valid.
         original: {0}
    reconstituted: {1}
Call site entry nested within inlined subroutine:
Verifying 
.debug_tu_index
-idirafter
 with an invalid file index 
lp64
.debug_line[
].dir_idx contains an invalid index: 
Bucket[%d] has invalid hash index: %u.
InstanceMethod
NameIndex @ {0:x}: Abbreviation {1:x}: {2} uses an unknown form: {3}.
NameIndex @ {0:x}: Abbreviation {1:x} contains an unknown index attribute: {2}.
__builtin_arm_mve_vrshrntq_m_n_s32
-Av8plus
-fdebug-macro
__builtin_arm_mve_vshlcq_m_u8
universal header architecture: 
-transactional-execution
LC_DYLD_EXPORTS_TRIE
objc_runtime_name
LC_LOAD_UPWARD_DYLIB
more than one LC_SOURCE_VERSION command
LC_SUB_UMBRELLA
--include-prefix=
LC_ROUTINES_64 command 
LC_BUILD_VERSION and some LC_VERSION_MIN load command also found
iextdefsym in LC_DYSYMTAB load command extends past the end of the symbol table
__builtin_arm_mve_vstrbq_u8
X86_64_RELOC_SIGNED
optnone
ARM_THUMB_32BIT_BRANCH
ARM64_RELOC_BRANCH26
PPC_RELOC_LO16_SECTDIFF
Requested symbol index is out of range.
Mach-O 32-bit ppc
-index-ignore-macros
xscale
thumbv7em-apple-darwin
__builtin_arm_mve_vcmlaq_m
pt_guarded_var
 (max 
Use <path> as the output path for this compilation unit in the index unit file
for REBASE_OPCODE_ADD_ADDR_IMM_SCALED 
bad rebase info (bad opcode value 0x
for BIND_OPCODE_SET_DYLIB_SPECIAL_IMM unknown special ordinal: 
XDim
__builtin_arm_mve_vqdmulhq_s16
bad bind sub-obcode of BIND_OPCODE_THREADED (bad sub-opcode value 0x
__builtin_arm_mve_vmlasq_m
 symbol offset extends past end: 
gnu::section
%s: expected directory 'Contents/Resources/DWARF' in dSYM bundle
standalone_debug
__builtin_arm_mve_vqrshruntq
) of LC_SYMTAB command 
__builtin_arm_mve_vreinterpretq_f32
struct dylib_module_64
Disable features of coverage instrumentation for Sanitizers
-export-dynamic
__builtin_arm_mve_vsbcq
lazy_bind_off field of 
__builtin_arm_mve_vstrdq_scatter_base_wb
the LC_BUILD_VERSION, command 
 LC_LINKER_OPTION string #
.offset field extends past the end of the load command
 count not x86_THREAD_STATE_COUNT for flavor number 
thin,full
MustBeNull
 for 
Found HIP installation: 
__builtin_arm_cde_vcx3qa_impl_u16
+wavefrontsize64
File too small to be a Mach-O universal file
__AVR_AT90S2333__
__AVR_ATtiny2313A__
__AVR_ATtiny461A__
__AVR_ATA6617C__
__AVR_ATmega48PB__
__AVR_ATA5782__
__AVR_ATmega163__
__AVR_ATmega32A__
__AVR_ATmega328P__
__AVR_ATmega644PA__
__AVR_ATmega644RFR2__
__AVR_ATmega64M1__
__AVR_ATmega128RFA1__
__AVR_ATxmega32C4__
__AVR_ATxmega64D4__
__AVR_ATxmega256D3__
__AVR_ATtiny402__
__AVR_ATtiny816__
__AVR_ATmega3208__
__AVR_ATmega4809__
fr19
vr18
vr28
__HEXAGON_V69__
r5:4
c13:12
v5:4
v3:0
__builtin_brev_ldb
Uc*Uc*Uc*iIi
__builtin_circ_stb
__builtin_HEXAGON_L2_loadruh_pcr
__builtin_HEXAGON_prefetch
__builtin_HEXAGON_V6_vrmpybub_rtt
__builtin_HEXAGON_A2_add
__builtin_HEXAGON_A2_addp
__builtin_HEXAGON_A2_max
__builtin_HEXAGON_A2_or
__builtin_HEXAGON_A2_subh_h16_sat_lh
__builtin_HEXAGON_A2_svadduhs
__builtin_HEXAGON_A2_vabsh
__builtin_HEXAGON_A2_vavgub
__builtin_HEXAGON_A2_vcmpwgtu
__builtin_HEXAGON_A2_vnavgh
__builtin_HEXAGON_A2_vsubws
__builtin_HEXAGON_A4_cmpbgti
__builtin_HEXAGON_A4_ornp
iLLiUIi
__builtin_HEXAGON_A4_vrminw
__builtin_HEXAGON_C2_cmpgti
__builtin_HEXAGON_C2_orn
__builtin_HEXAGON_C4_cmplteu
LLid
__builtin_HEXAGON_F2_conv_sf2ud_chop
__builtin_HEXAGON_F2_dfcmpuo
__builtin_HEXAGON_F2_sfcmpuo
__builtin_HEXAGON_M2_cmacr_s0
__builtin_HEXAGON_M2_cnacs_s0
__builtin_HEXAGON_M2_macsin
__builtin_HEXAGON_M2_mmacuhs_s1
__builtin_HEXAGON_M2_mmpyul_rs1
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s0
__builtin_HEXAGON_M2_mpy_nac_lh_s1
__builtin_HEXAGON_M2_mpy_rnd_hl_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s1
__builtin_HEXAGON_M2_mpyd_hh_s1
__builtin_HEXAGON_M2_mpyd_rnd_hl_s0
__builtin_HEXAGON_M2_mpyu_acc_lh_s1
__builtin_HEXAGON_M2_mpyu_nac_ll_s1
__builtin_HEXAGON_M2_mpyud_lh_s1
__builtin_HEXAGON_M2_vcmac_s0_sat_i
__builtin_HEXAGON_M2_vmac2
__builtin_HEXAGON_M2_vrcmacr_s0
__builtin_HEXAGON_M4_and_or
__builtin_HEXAGON_M4_or_andn
__builtin_HEXAGON_M4_vrmpyoh_s1
__builtin_HEXAGON_S2_asl_i_p_acc
__builtin_HEXAGON_S2_asl_r_p
__builtin_HEXAGON_S2_asr_i_p_nac
__builtin_HEXAGON_S2_asr_i_vw
__builtin_HEXAGON_S2_cl0p
__builtin_HEXAGON_S2_extractu_rp
__builtin_HEXAGON_S2_lsl_r_p_or
__builtin_HEXAGON_S2_lsr_i_p_xacc
__builtin_HEXAGON_S2_lsr_r_r_nac
__builtin_HEXAGON_S2_tableidxd_goodsyntax
__builtin_HEXAGON_S2_vsathub_nopack
__builtin_HEXAGON_S2_vsxthw
__builtin_HEXAGON_S4_or_andi
__builtin_HEXAGON_S4_vxaddsubw
__builtin_HEXAGON_S6_rol_i_p
__builtin_HEXAGON_M6_vabsdiffub
__builtin_HEXAGON_F2_dfmin
__builtin_HEXAGON_M7_wcmpyiw
__builtin_HEXAGON_V6_extractw_128B
V64bV64bV64b
__builtin_HEXAGON_V6_vS32b_nqpred_ai
__builtin_HEXAGON_V6_vabsdiffuh_128B
V64iV64iV64i
__builtin_HEXAGON_V6_vaddhq_128B
__builtin_HEXAGON_V6_vadduhsat_dv_128B
__builtin_HEXAGON_V6_valignb
V32iV32iV128bi
V32iV32ii
__builtin_HEXAGON_V6_vasrw_128B
__builtin_HEXAGON_V6_vassignp
__builtin_HEXAGON_V6_vavgwrnd
__builtin_HEXAGON_V6_vdealb4w
__builtin_HEXAGON_V6_vdmpybus_dv_acc_128B
V16iV16iV32ii
__builtin_HEXAGON_V6_vdmpyhvsat_acc
V64bV64bV16iV16i
__builtin_HEXAGON_V6_veqw_or
__builtin_HEXAGON_V6_vgth_and_128B
__builtin_HEXAGON_V6_vgtuh_or
__builtin_HEXAGON_V6_vgtw_and
__builtin_HEXAGON_V6_vlsrwv
__builtin_HEXAGON_V6_vmaxh_128B
__builtin_HEXAGON_V6_vmpabus_acc
V32iV16ii
__builtin_HEXAGON_V6_vmpyhsat_acc
__builtin_HEXAGON_V6_vmpyhvsrs_128B
__builtin_HEXAGON_V6_vmpyiowh
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc
__builtin_HEXAGON_V6_vmpyuhv_acc
__builtin_HEXAGON_V6_vnot_128B
__builtin_HEXAGON_V6_vpackwuh_sat
V64iV64iiUIi
__builtin_HEXAGON_V6_vrmpyubi_acc
__builtin_HEXAGON_V6_vroundwuh_128B
__builtin_HEXAGON_V6_vshuffb
__builtin_HEXAGON_V6_vshufoh
__builtin_HEXAGON_V6_vsubhsat
__builtin_HEXAGON_V6_vsubuhsat_dv_128B
__builtin_HEXAGON_V6_vswap_128B
__builtin_HEXAGON_V6_vtmpyhb_acc
__builtin_HEXAGON_V6_vzh
__builtin_HEXAGON_V6_vaddbsat_dv
__builtin_HEXAGON_V6_vadduhw_acc_128B
__builtin_HEXAGON_V6_vandvqv_128B
__builtin_HEXAGON_V6_vlutvwh_nm_128B
__builtin_HEXAGON_V6_vmpauhb_acc
__builtin_HEXAGON_V6_vsubbsat_128B
__builtin_HEXAGON_V6_vabsb_128B
__builtin_HEXAGON_V6_vavguwrnd
vv*iiV64i
__builtin_HEXAGON_V6_vmpahhsat
__builtin_HEXAGON_V6_vscattermhq_128B
__builtin_HEXAGON_V6_vscattermw_add_128B
__builtin_HEXAGON_V6_vsatdw
V64iV64iV64iUIi
__builtin_HEXAGON_V6_vabs_hf_128B
stack allocation size must be non-zero
-fcuda-rdc
-fdefault-inline
__builtin_HEXAGON_V6_vconv_sf_qf32_128B
_tum
include_alias
attiny1617
Change diagnostic formatting to match IDE and command line tools
__LANAI_V11__
$r28
$ft5
$fs6
$fs7
__mc68040
__builtin_mips_addq_s_w
__builtin_mips_preceq_w_phl
__builtin_mips_shll_ph
__builtin_mips_maq_s_w_phl
__builtin_mips_dpsq_sa_l_w
__builtin_mips_extp
__builtin_mips_mthlip
__builtin_mips_cmpgdu_eq_qb
__builtin_mips_mulq_s_w
__builtin_mips_subuh_r_qb
__builtin_msa_adds_s_h
V2LLiV2LLiV2LLi
__builtin_msa_asub_s_d
__builtin_msa_aver_u_b
__builtin_msa_bclri_d
__builtin_msa_binsr_h
__builtin_msa_bnegi_b
__builtin_msa_bset_w
__builtin_msa_ceq_d
__builtin_msa_cle_u_w
V2SLLiV2ULLiIUi
__builtin_msa_copy_s_b
iV4UiIUi
__builtin_msa_dotp_u_h
V4UiV4UiV8UsV8Us
__builtin_msa_fceq_w
__builtin_msa_fcueq_w
__builtin_msa_fexp2_d
V2dV2ULLi
__builtin_msa_flog2_d
__builtin_msa_fmin_a_w
__builtin_msa_fsne_w
__builtin_msa_fsun_d
__builtin_msa_ftrunc_u_w
__builtin_msa_ilvev_b
__builtin_msa_insert_h
V16Scv*Ii
__builtin_msa_madd_q_h
__builtin_msa_max_a_h
__builtin_msa_maxi_u_b
__builtin_msa_min_s_d
__builtin_msa_mod_u_b
__builtin_msa_mul_q_h
__builtin_msa_nlzc_d
__builtin_msa_pcnt_h
__builtin_msa_shf_w
__builtin_msa_sldi_h
V2LLiV2LLiUi
__builtin_msa_srar_w
__builtin_msa_srlr_d
__builtin_msa_str_w
__builtin_msa_subsuu_s_h
__builtin_msa_vshf_w
_MIPS_ISA_MIPS32
__ABICALLS__
_MIPS_ARCH
Turn off loop unroller
__nvvm_read_ptx_sreg_lanemask_gt
(sm_86|sm_87|sm_89|sm_90),(ptx72|ptx73|ptx74|ptx75|ptx76|ptx77|ptx78)
__nvvm_fmin_bf16x2
__nvvm_fmax_ftz_f16
__nvvm_fmax_xorsign_abs_bf16
__nvvm_fmax_d
__nvvm_mul24_ui
__nvvm_sad_i
__nvvm_saturate_ftz_f
__nvvm_sin_approx_f
UsUsUsUs
__nvvm_fma_rm_d
__nvvm_sqrt_rn_f
__nvvm_rsqrt_approx_ftz_f
__nvvm_d2f_rm_ftz
__nvvm_i2d_rm
__nvvm_f2ui_rz_ftz
__nvvm_lohi_i2d
__nvvm_f2ull_rm
__nvvm_ll2f_rp
__nvvm_f2h_rn
ZUsf
__nvvm_barrier_sync_cnt
__nvvm_shfl_sync_up_f32
(sm_70|sm_72|sm_75|sm_80|sm_86|sm_87|sm_89|sm_90),(ptx60|ptx61|ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74|ptx75|ptx76|ptx77|ptx78)
__nvvm_redux_sync_or
__nvvm_mbarrier_arrive_noComplete_shared
__builtin_ptx_read_image2Dfi_
viiiffff
sm_60|sm_61|sm_62|sm_70|sm_72|sm_75|sm_80|sm_86|sm_87|sm_89|sm_90
__nvvm_atom_sub_gen_ll
__nvvm_atom_cta_max_gen_ui
__nvvm_atom_cta_min_gen_i
__nvvm_atom_min_gen_ull
__nvvm_atom_or_gen_i
__nvvm_atom_xor_gen_ll
__nvvm_ldg_c
__nvvm_ldg_us
__nvvm_ldg_i2
E2UiE2UiC*
vi*iC*UiIi
__hmma_m32n8k16_st_c_f16
__hmma_m32n8k16_mma_f32f32
__imma_m16n16k16_ld_a_s8
__imma_m8n32k16_ld_a_s8
__imma_m8n8k32_mma_s4
__mma_tf32_m16n16k8_ld_a
__nvvm_cp_async_wait_group
__MSVCRT__
_HAS_CHAR16_T_LANGUAGE_SUPPORT
_INTEGRAL_MAX_BITS
__builtin_ppc_dcbtst
__builtin_ppc_fsqrt
LiLiD*
__builtin_ppc_trap
vIivC*
__builtin_ppc_mulhdu
UsUs*
vUIiUi
__builtin_ppc_dcbtstt
__builtin_ppc_minfe
V1ULLLiV1ULLLiV1ULLLiV1ULLLi
__builtin_altivec_vsubecuq
__builtin_altivec_vcfux
__builtin_altivec_lvebx
V4SiV16ScV16UcV4Si
__builtin_altivec_vmulouw
V8sV4UiV4Ui
__builtin_altivec_vperm_4si
__builtin_altivec_vcmpequd
V4iV4SiV4Si
__builtin_altivec_vcmpgtsq_p
__builtin_altivec_vminuh
__builtin_altivec_vrld
V4UiV16UcV4Ui
V2LLiV4i
__builtin_altivec_vcmpnew_p
__builtin_altivec_vcmpgtud_p
__builtin_altivec_crypto_vcipher
__builtin_altivec_vctzb
__builtin_altivec_vpopcntw
__builtin_altivec_vextsh2w
__builtin_altivec_vdiveuw
__builtin_altivec_vexpandhm
V1ULLLiULLi
__builtin_altivec_vgnb
__builtin_altivec_vinswrx
V16UcV16UcUiIi
__builtin_altivec_vextddvrx
__builtin_vsx_stxvw4x_be
__builtin_vsx_xsmindp
__builtin_vsx_xvcmpgesp_p
__builtin_vsx_xvnmaddadp
__builtin_vsx_xxgenpcvbm
V4SiV2d
V4fV2ULLi
V2ULLiV2ULLiV2ULLiV2ULLiIi
__builtin_vsx_xxblendvw
__builtin_ppc_rsqrtf
__builtin_treclaim
__builtin_divde
__builtin_unpack_vector_int128
__builtin_vsx_disassemble_pair
__builtin_mma_pmxvi8ger4
__builtin_mma_xvf16ger2np
__builtin_mma_xvf64gerpn
+power8-vector
__ppc__
__STRUCT_PARM_ALIGN__
_ARCH_PWR9
__POWER10_VECTOR__
-mcpu=pwr10
__iospace_sync
__fetch_and_orlp
__fcfud
__mulhwu
__mtfsfi
__vcipherlast
__builtin_clz
__dcbf
__builtin_rotateleft64
__frins
__test_data_class
-mpower9-vector
vs15
vs30
vs47
vs57
Objective-C dispatch method to use
ft10
__riscv_atomic
__builtin_rvv_vadd_vv_tamu
__builtin_rvv_vlse32_v_tama
__builtin_rvv_vloxseg5ei8_v_tu
__builtin_rvv_vlse64_v_ta
__builtin_rvv_vloxseg2ei16_v_tumu
__builtin_rvv_vloxseg5ei16_v_tumu
__builtin_rvv_vloxseg7ei16_v_tamu
__builtin_rvv_vloxseg3ei32_v_tama
__builtin_rvv_vloxseg6ei32_v_ta
__builtin_rvv_vsse16_v
__builtin_rvv_vloxseg4ei64_v_tu
__builtin_rvv_vloxseg7ei64_v_ta
__builtin_rvv_vloxseg2ei8_v_tu
__builtin_rvv_vluxei16_v_tumu
__builtin_rvv_vsseg2e16_v_m
__builtin_rvv_vsseg8e16_v
__builtin_rvv_vsseg8e32_v
__builtin_rvv_vssseg4e8_v
__builtin_rvv_vssseg4e16_v_m
__builtin_rvv_vssseg6e32_v
__builtin_rvv_vssseg5e64_v_m
__builtin_rvv_vsuxseg2ei16_v
__builtin_rvv_vsuxseg2ei32_v_m
__builtin_rvv_vsuxseg4ei64_v
__builtin_rvv_vloxei8_v_tumu
__builtin_rvv_vsoxseg3ei8_v
__builtin_rvv_vloxei64_v_tamu
__builtin_rvv_vsoxseg2ei32_v
__builtin_rvv_vsoxseg8ei32_v
__builtin_rvv_vadd_vx_tama
__builtin_rvv_vrsub_vx_tu
__builtin_rvv_vwsubu_vx_ta
__builtin_rvv_vwadd_vx_tumu
__builtin_rvv_vwaddu_wx_tumu
__builtin_rvv_vwsubu_wx_tamu
__builtin_rvv_vwsub_wv_tama
__builtin_rvv_vwcvt_x_x_v_tamu
__builtin_rvv_vand_vv_tumu
__builtin_rvv_vxor_vv_tamu
__builtin_rvv_vor_vx_tama
__builtin_rvv_vsrl_vv_ta
__builtin_rvv_vsra_vx_ta
__builtin_rvv_vnsrl_wx_tuma
__builtin_rvv_vncvt_x_x_w_tumu
__builtin_rvv_vmseq_vx_mu
__builtin_rvv_vmslt_vx
__builtin_rvv_vmsle_vv_mu
__builtin_rvv_vmsgt_vx
__builtin_rvv_vse8_v
__builtin_rvv_vminu_vv_tumu
__builtin_rvv_vmin_vv_tamu
__builtin_rvv_vmaxu_vx_tama
__builtin_rvv_vmax_vx_tamu
__builtin_rvv_vmulh_vx_ta
__builtin_rvv_vmulhu_vx_tuma
__builtin_rvv_vdivu_vv_ta
__builtin_rvv_vdiv_vv_tumu
__builtin_rvv_vremu_vx_tumu
__builtin_rvv_vrem_vx_tamu
__builtin_rvv_vwmulu_vv_tama
__builtin_rvv_vwmulsu_vv_tama
__builtin_rvv_vnmsac_vv_tu
__builtin_rvv_vmadd_vv_ta
__builtin_rvv_vnmsub_vx_tu
__builtin_rvv_vwmaccu_vx_tumu
__builtin_rvv_vwmaccsu_vv_tumu
__builtin_rvv_vwmaccus_vx_tamu
__builtin_rvv_vsaddu_vx_tumu
__builtin_rvv_vsadd_vx_tuma
__builtin_rvv_vssub_vv_tama
__builtin_rvv_vaaddu_vx_tu
__builtin_rvv_vasubu_vv_ta
__builtin_rvv_vasub_vv_tumu
__builtin_rvv_vsmul_vx_tumu
__builtin_rvv_vssrl_vx_tamu
__builtin_rvv_vnclipu_wv_tama
__builtin_rvv_vnclip_wv_tuma
__builtin_rvv_vfsub_vv_ta
__builtin_rvv_vfrsub_vf_tuma
__builtin_rvv_vfwsub_vv_tumu
__builtin_rvv_vfwadd_wv_tumu
__builtin_rvv_vfwsub_wf_tumu
__builtin_rvv_vfmul_vf_tamu
__builtin_rvv_vfrdiv_vf_tama
__builtin_rvv_vfwmul_vf_tamu
__builtin_rvv_vfnmacc_vf_tu
__builtin_rvv_vfmsac_vf_tuma
__builtin_rvv_vfmadd_vv_tumu
__builtin_rvv_vfnmadd_vv_tama
__builtin_rvv_vfmsub_vf_tama
__builtin_rvv_vfwmacc_vv_ta
__builtin_rvv_vfwnmacc_vf_tu
__builtin_rvv_vfwmsac_vf_tu
__builtin_rvv_vfmin_vv_tumu
__builtin_rvv_vfmax_vv_tamu
__builtin_rvv_vfsgnj_vf_tama
__builtin_rvv_vfsgnjx_vv_ta
__builtin_rvv_vmfeq_vv
__builtin_rvv_vmfne_vf_mu
__builtin_rvv_vmfgt_vv
__builtin_rvv_vmfge_vf_tumu
__builtin_rvv_vredmax_vs_tumu
__builtin_rvv_vredand_vs_tumu
__builtin_rvv_vwredsum_vs_tam
__builtin_rvv_vfredmin_vs_tum
__builtin_rvv_vfwredosum_vs_ta
__builtin_rvv_vid_v_tama
__builtin_rvv_vslidedown_vx_ta
__builtin_rvv_vslide1up_vx_tamu
__builtin_rvv_vrgather_vv_tu
__builtin_rvv_vrgatherei16_vv_tama
__builtin_rvv_vlseg2e8_v_tuma
__builtin_rvv_vle32ff_v_tamu
__builtin_rvv_vlseg4e8_v_tamu
__builtin_rvv_vlseg6e8_v_tumu
__builtin_rvv_vlseg2e16_v_tu
__builtin_rvv_vlseg4e16_v_tumu
__builtin_rvv_vlseg7e16_v_tuma
__builtin_rvv_vlseg3e32_v_ta
__builtin_rvv_vlseg5e32_v_tamu
__builtin_rvv_vlseg8e32_v_tu
__builtin_rvv_vlseg4e64_v_tu
__builtin_rvv_vlseg6e64_v_tama
__builtin_rvv_vlseg3e8ff_v_tuma
__builtin_rvv_vlseg5e8ff_v_tuma
__builtin_rvv_vlseg8e8ff_v_tamu
__builtin_rvv_vlseg4e16ff_v_tumu
__builtin_rvv_vlseg7e16ff_v_tu
__builtin_rvv_vlseg2e32ff_v_tuma
__builtin_rvv_vlseg5e32ff_v_tuma
__builtin_rvv_vlseg8e32ff_v_ta
__builtin_rvv_vlseg3e64ff_v_tamu
__builtin_rvv_vlseg6e64ff_v_ta
__builtin_rvv_vlseg2e8ff_v_tu
__builtin_rvv_vlsseg4e8_v_tama
__builtin_rvv_vlsseg7e8_v_tuma
__builtin_rvv_vlsseg2e16_v_tamu
__builtin_rvv_vlsseg4e16_v_tamu
__builtin_rvv_vlsseg7e16_v_tumu
__builtin_rvv_vlsseg3e32_v_tu
__builtin_rvv_vlsseg5e32_v_ta
__builtin_rvv_vlsseg7e32_v_tuma
__builtin_rvv_vlsseg3e64_v_ta
__builtin_rvv_vlsseg5e64_v_tamu
__builtin_rvv_vlsseg8e64_v_tu
__builtin_rvv_vluxseg3ei8_v_tamu
__builtin_rvv_vluxseg6ei8_v_tumu
__builtin_rvv_vluxseg2ei16_v_tu
__builtin_rvv_vluxseg4ei16_v_tumu
__builtin_rvv_vluxseg7ei16_v_tuma
__builtin_rvv_vluxseg3ei32_v_ta
__builtin_rvv_vluxseg5ei32_v_tamu
__builtin_rvv_vluxseg8ei32_v_tu
__builtin_rvv_vluxseg4ei64_v_tu
__builtin_rvv_vluxseg6ei64_v_tama
__builtin_rvv_vlse8_v_tu
__builtin_rvv_vnot_v_tu
__builtin_rvv_vle16_v_tumu
__builtin_rvv_vle64_v_tamu
__builtin_rvv_vfclass_v_tumu
__builtin_rvv_vfcvt_f_xu_v_tama
__builtin_rvv_vfcvt_x_f_v_tama
__builtin_rvv_vfncvt_f_f_w_tamu
__builtin_rvv_vfncvt_rod_f_f_w_tama
__builtin_rvv_vfncvt_rtz_xu_f_w_tamu
__builtin_rvv_vfrsqrt7_v_ta
__builtin_rvv_vfwcvt_f_f_v_tuma
__builtin_rvv_vfwcvt_rtz_x_f_v_tumu
__builtin_rvv_vfwcvt_x_f_v_tama
__builtin_rvv_vmsbf_m
__builtin_rvv_vreinterpret_v
__builtin_rvv_vsext_vf8_ta
__builtin_rvv_vzext_vf2_tu
__builtin_riscv_clz_64
__builtin_riscv_zip_32
__builtin_riscv_aes32esmi_32
__builtin_riscv_sha512sig1l_32
__builtin_riscv_sha512sum0_64
SPIRV64
__ma2150
__sparcv9__
niagara4
at697e
ut699
__builtin_s390_vpksg
__builtin_s390_vuphf
__builtin_s390_vaccf
__builtin_s390_vceqhs
__builtin_s390_vcksm
__builtin_s390_verllb
V8UsV16UcV16UcV8Us
__builtin_s390_vmaeh
__builtin_s390_vmeb
__builtin_s390_vpopctg
V4UiV16UcV16Uc
__builtin_s390_vfaeh
V8UsV8UsV8Usi*
__builtin_s390_vfenefs
__builtin_s390_vstrcbs
__builtin_s390_vfcedbs
__builtin_s390_vfmaxdb
__builtin_s390_vflpsb
__builtin_s390_vstrszh
systemz
z196
__TCELE_V1__
__builtin_ve_vl_vldlzx_vssvl
__builtin_ve_vl_vldl2dzx_vssl
__builtin_ve_vl_vstunc_vssml
__builtin_ve_vl_vst2dnc_vssl
__builtin_ve_vl_vstl2dnc_vssml
__builtin_ve_vl_lvss_svs
__builtin_ve_vl_vbrdl_vsvl
V256diV256bV256dUi
__builtin_ve_vl_vaddul_vsvl
__builtin_ve_vl_pvaddu_vvvvl
__builtin_ve_vl_vaddswzx_vsvvl
__builtin_ve_vl_vaddsl_vsvmvl
__builtin_ve_vl_pvsubu_vsvvl
__builtin_ve_vl_vsubswzx_vvvmvl
__builtin_ve_vl_vmulul_vsvmvl
__builtin_ve_vl_vmulswzx_vsvl
__builtin_ve_vl_vdivul_vsvvl
V256dV256dLUiV256bV256dUi
__builtin_ve_vl_vdivswzx_vsvmvl
__builtin_ve_vl_vdivsl_vsvmvl
__builtin_ve_vl_vcmpuw_vvvmvl
__builtin_ve_vl_vcmpswsx_vsvmvl
__builtin_ve_vl_vmaxswsx_vvvl
__builtin_ve_vl_pvmaxs_vsvvl
__builtin_ve_vl_pvmins_vsvl
__builtin_ve_vl_vminsl_vvvmvl
__builtin_ve_vl_vor_vvvmvl
__builtin_ve_vl_pvxor_vvvvl
__builtin_ve_vl_vldz_vvl
__builtin_ve_vl_pvldz_vvvl
__builtin_ve_vl_pvbrvlo_vvmvl
__builtin_ve_vl_pvseq_vvl
__builtin_ve_vl_vsrl_vvsvl
__builtin_ve_vl_vslawsx_vvsmvl
__builtin_ve_vl_vslal_vvsmvl
__builtin_ve_vl_pvsra_vvsl
__builtin_ve_vl_vfaddd_vvvvl
__builtin_ve_vl_vfadds_vsvmvl
__builtin_ve_vl_vfsubs_vsvmvl
__builtin_ve_vl_vfmuls_vsvl
__builtin_ve_vl_vfdivs_vvvvl
__builtin_ve_vl_vfcmpd_vsvmvl
__builtin_ve_vl_vfmaxd_vsvmvl
__builtin_ve_vl_vfmind_vsvl
__builtin_ve_vl_vfmadd_vvvvvl
V256ddV256dV256dV256bV256dUi
__builtin_ve_vl_pvfmad_vsvvvl
__builtin_ve_vl_vfmsbd_vvsvl
__builtin_ve_vl_pvfmsb_vsvvvl
__builtin_ve_vl_vfnmadd_vvsvmvl
__builtin_ve_vl_pvfnmad_vvsvMvl
__builtin_ve_vl_vfnmsbs_vvsvvl
__builtin_ve_vl_pvrcp_vvl
__builtin_ve_vl_pvrsqrtnex_vvvl
__builtin_ve_vl_vcvtwszx_vvl
__builtin_ve_vl_vcvtldrz_vvl
__builtin_ve_vl_vmrg_vvvmvl
V256dV256dV256dLUiV256dUi
__builtin_ve_vl_vfmkleq_mvml
__builtin_ve_vl_vfmkleqnan_mvl
__builtin_ve_vl_vfmkwle_mvml
__builtin_ve_vl_vfmkweqnan_mvl
__builtin_ve_vl_pvfmkwupeq_mvml
__builtin_ve_vl_pvfmkwlonan_mvml
__builtin_ve_vl_pvfmkwupeqnan_mvml
__builtin_ve_vl_pvfmkwlt_MvMl
__builtin_ve_vl_pvfmkwnenan_MvMl
__builtin_ve_vl_vfmkdge_mvl
__builtin_ve_vl_vfmkdgenan_mvml
__builtin_ve_vl_vfmksle_mvl
__builtin_ve_vl_pvfmksupgt_mvl
__builtin_ve_vl_pvfmksloge_mvl
__builtin_ve_vl_pvfmksupgtnan_mvl
__builtin_ve_vl_pvfmksupeqnan_mvml
__builtin_ve_vl_pvfmksge_MvMl
__builtin_ve_vl_pvfmksgenan_Mvl
__builtin_ve_vl_vrmaxswlstsx_vvl
__builtin_ve_vl_vrminswlstzx_vvl
__builtin_ve_vl_vfrmindlst_vvl
V256dV256dLUiLUiV256bUi
__builtin_ve_vl_vgtlsx_vvssmvl
vV256dV256dLUiLUiUi
__builtin_ve_vl_vscl_vvssml
__builtin_ve_vl_eqvm_mmm
LUiLUiLUiLUi
__builtin_ve_vl_fencem_s
__builtin_wasm_memory_atomic_notify
__builtin_wasm_trunc_saturate_s_i64_f32
V4iV4i
__builtin_wasm_max_u_i32x4
__builtin_wasm_all_true_i64x2
__builtin_wasm_pmax_f32x4
__builtin_wasm_trunc_saturate_s_i32x4_f32x4
__builtin_wasm_fma_f32x4
LUiV256bUi
-fno-assume-sane-operator-new
__builtin_wasm_relaxed_min_f64x2
+avx512bf16
+cx8
+rdpru
+serialize
__SEG_GS
__tune_lakemont__
bdver4
__PRFCHW__
__AVX512VPOPCNTDQ__
__XSAVEC__
__WAITPKG__
__AVX512F__
__3dNOW__
avx512bw
fma4
rdseed
waitpkg
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+movbe
silvermont
st(7)
ymm4
xmm19
ymm20
zmm2
zmm20
tmm4
r11b
bcC*
__builtin_ia32_pf2id
__builtin_ia32_pfrcpit1
vcC*i
__builtin_ia32_psubusb
__builtin_ia32_psrld
__builtin_ia32_psrawi
__builtin_ia32_maskmovq
mmx,sse
__builtin_ia32_vec_ext_v4hi
__builtin_ia32_pabsb
__builtin_ia32_psignb
__builtin_ia32_comisdlt
__builtin_ia32_cmpnleps
__builtin_ia32_minss
__builtin_ia32_minsd
__builtin_ia32_vec_ext_v8hi
V8sV16cV16c
nV:128:
V4iV4iIi
__builtin_ia32_cvtsd2ss
__builtin_ia32_psrlw128
__builtin_ia32_psrlwi128
V8sV8sV8sIi
V2dV2dV2dIc
__builtin_ia32_pcmpestrm128
__builtin_ia32_crc32qi
__builtin_ia32_aesimc128
__builtin_ia32_vgf2p8affineinvqb_v16qi
__builtin_ia32_pclmulqdq256
__builtin_ia32_hsubpd256
__builtin_ia32_shufpd256
__builtin_ia32_vextractf128_si256
V4dV4dIi
__builtin_ia32_rcpps256
iV4OiV4Oi
V4fV4fC*V4i
__builtin_ia32_vec_ext_v8si
__builtin_ia32_packuswb256
V16sV32cV32c
V8iV8iIi
__builtin_ia32_psllqi256
__builtin_ia32_psrlq256
__builtin_ia32_maskloadd
__builtin_ia32_psllv2di
__builtin_ia32_gatherd_ps256
__builtin_ia32_gatherq_q256
__builtin_ia32_rdrand32_step
__builtin_ia32_xsaveopt
__builtin_ia32_addcarryx_u32
__builtin_ia32_llwpcb
__builtin_ia32_vfmaddsd3
V16fV16fV16fV16fUsIi
__builtin_ia32_vpmacssdd
V2OiV16c
__builtin_ia32_vprotq
__builtin_ia32_vpshaq
V8fV8fV8fV8iIc
__builtin_ia32_rdtsc
V8dV8dV8dUc
__builtin_ia32_rcp28sd_round_mask
UcV4fV4fIiUc
__builtin_ia32_cvtps2dq512_mask
__builtin_ia32_pmuludq512
vOi*V8OiUc
__builtin_ia32_alignq128
__builtin_ia32_vpdpbusds512
V4iV4ivC*V2OiUcIi
__builtin_ia32_gather3siv4si
V16iV16ivC*V16iUsIi
__builtin_ia32_scattersiv8di
__builtin_ia32_scatterpfqpd
UcV2OiV2OiIiUc
__builtin_ia32_cmpw512_mask
__builtin_ia32_packssdw512
V8OiV8Oi
__builtin_ia32_vpopcntb_256
__builtin_ia32_addpd512
__builtin_ia32_addss_round_mask
__builtin_ia32_compresshi128_mask
__builtin_ia32_compresssi256_mask
vV32c*V32cUi
__builtin_ia32_cvtpd2udq256_mask
__builtin_ia32_expandqi256_mask
__builtin_ia32_expandloadqi256_mask
__builtin_ia32_getexpps256_mask
__builtin_ia32_scalefps256_mask
vv*UcV4iV2dIi
__builtin_ia32_vpermi2vard128
__builtin_ia32_vpermi2varq256
__builtin_ia32_vpshldd128
__builtin_ia32_vpshldvw512
__builtin_ia32_vpshrdq512
__builtin_ia32_cvtps2qq256_mask
__builtin_ia32_cvttps2qq128_mask
__builtin_ia32_reducess_mask
V8dV8OiV8dUcIi
__builtin_ia32_prolq512
__builtin_ia32_prord128
__builtin_ia32_psllv16hi
__builtin_ia32_psravq256
__builtin_ia32_movdqa32store128_mask
__builtin_ia32_vpmadd52luq256
V2dV2dV2dV2OiIiUcIi
__builtin_ia32_fixupimmpd128_mask
__builtin_ia32_loadaps256_mask
__builtin_ia32_storedquhi256_mask
__builtin_ia32_rcp14pd256_mask
__builtin_ia32_vcvttsd2si32
__builtin_ia32_psraqi512
__builtin_ia32_psraq512
V2OiV2OiV2OiV2OiIiUc
__builtin_ia32_sqrtsd_round_mask
V8OiUc
V16sUs
__builtin_ia32_pmovsdb512_mask
V8iV8OiV8iUc
__builtin_ia32_pmovswb256mem_mask
vV16c*V2OiUc
__builtin_ia32_pmovsqw256mem_mask
__builtin_ia32_pmovuswb128mem_mask
__builtin_ia32_pmovusqw128mem_mask
__builtin_ia32_pmovdb128_mask
__builtin_ia32_pmovqw128mem_mask
__builtin_ia32_extractf64x2_256_mask
V8dV8dV4dIi
__builtin_ia32_getmantpd128_mask
__builtin_ia32_permvarsf512
__builtin_ia32_fpclassps256_mask
__builtin_ia32_kandnhi
iUiUi
__builtin_ia32_kxorqi
__builtin_ia32_kmovb
__builtin_ia32_compresshi512_mask
__builtin_ia32_expanddi512_mask
__builtin_ia32_vcvtph2ps_mask
V4fV4fV2dV4fUcIi
__builtin_ia32_cvtneps2bf16_128_mask
__builtin_ia32_vp2intersect_q_512
__builtin_ia32_mulph512
__builtin_ia32_subsh_round_mask
__builtin_ia32_rcpph256_mask
V32xV32xIiV32xUiIi
V8xV8xV8xIiV8xUcIi
__builtin_ia32_fpclassph256_mask
__builtin_ia32_vcvtsh2ss_round_mask
__builtin_ia32_vcvttph2w128_mask
__builtin_ia32_vcvtuw2ph128_mask
V8UiV8xV8UiUc
__builtin_ia32_vcvttph2dq512_mask
V4OiV8xV4OiUc
__builtin_ia32_vcvttph2uqq256_mask
V8fV8xV8fUc
__builtin_ia32_vfmaddsubph256
__builtin_ia32_vfmaddcph512_mask
__builtin_ia32_vfmulcsh_mask
V8sUcV8sV8s
__builtin_ia32_selectq_128
__builtin_ia32_selectps_512
dV8d
__builtin_ia32_reduce_fmul_ps512
__builtin_ia32_ptwrite32
__builtin_ia32_aesdec128kl_u8
__emulu
WiWiD*Wi
OiV2d
__builtin_ia32_addcarryx_u64
UcUOiUiIUi
__builtin_ia32_cvtsi2ss64
__builtin_ia32_vcvttsh2si64
__builtin_ia32_tilestored64_internal
vIUcv*z
Disable code coverage analysis
-fno-odr-hash-protocols
enum
sizeof
_Static_assert
export
typename
noexcept
_Sat
__builtin_va_arg
__is_sealed
__has_trivial_assign
__is_trivially_assignable
__remove_extent
__is_integral
__is_pointer
__builtin_tmo_get_type_data
__private
image2d_msaa_depth_t
half
__try
unknown
utf16_string_literal
star
lesslessequal
comma
annot_overload_set
annot_pragma_fp_contract
annot_pragma_attribute
cl_khr_gl_msaa_sharing
__is_trivially_relocatable
__is_rvalue_reference
__is_convertible_to
__builtin_ptrauth_struct_key
__builtin_xnu_type_summary
none
Unknown function pointer alignment type in datalayout string
Invalid address space, must be a 24-bit integer
' in -pass-remarks: 
Import constant global variables with references
DW_TAG_common_inclusion
DW_TAG_friend
DW_TAG_unspecified_type
DW_TAG_skeleton_unit
DW_TAG_SUN_indirect_inheritance
DW_TAG_LLVM_annotation
DW_AT_name
DW_AT_string_length
DW_AT_base_types
DW_AT_namelist_item
DW_AT_ranges
DW_AT_explicit
DW_AT_dwo_id
DW_AT_call_target_clobbered
DW_AT_MIPS_software_pipeline_depth
DW_AT_HP_pass_by_reference
DW_AT_GHS_rso
DW_AT_GNU_call_site_target_clobbered
DW_AT_SUN_alignment
DW_AT_SUN_func_offset
DW_AT_SUN_c_vla
DW_AT_GNAT_descriptive_type
DW_AT_BORLAND_property_write
DW_AT_BORLAND_Delphi_ABI
DW_AT_APPLE_omit_frame_ptr
DW_FORM_data8
DW_FORM_exprloc
DW_FORM_strx2
DW_OP_const4u
DW_OP_div
DW_OP_le
DW_OP_lit9
DW_OP_lit28
DW_OP_reg11
DW_OP_reg28
DW_OP_breg10
DW_OP_breg28
DW_OP_form_tls_address
DW_OP_HP_fltconst4
DW_OP_GNU_addr_index
DW_ATE_unsigned_fixed
DW_DS_trailing_separate
DW_VIRTUALITY_pure_virtual
DW_LANG_Fortran95
DW_LANG_Dylan
DW_CC_nocall
DW_CC_LLVM_IntelOclBicc
DW_ORD_row_major
DW_MACINFO_define
DW_MACRO_import_sup
DW_RLE_offset_pair
DW_CFA_GNU_window_save
DW_CFA_def_cfa
DW_APPLE_PROPERTY_assign
DW_UT_split_compile
FUNCTION
STATIC
Unknown
R_TLS
R_TOCU
Abbrev record with no operands
neoverse-512tvb
apple-s4
a64fx
+fullfp16
+perfmon
+v8.3a
+v9a
-crc
-sve
ssbs
-tme
-hbc
v8.6-a
v8-m.base
vfp3
fp5-dp-d16
arm9tdmi
arm1022e
cortex-a12
cortex-m33
cortex-a710
neoverse-v1
swift
+v6kz
7E-M
armv8.4-a
armv9.1-a
armv8-m.main
vfpv3xd
cdecp3
cdecp7
Exponent has no digits
 (includes alignment, etc)
ck803fh
ck803hr3
ck803ehr2
ck803ftr2
ck803seft
ck804eft
ck807
ck810ft
ck860fv
-fpuv3_hf
-float7e60
-dsp1e2
+java
smart
istack
-3e3r2
7e10
-objcmt-migrate-designated-init
sizeof 
<char, std::char_traits<char>
guard variable for 
Text after end of document
%s name missing after '%s'
zhinxmin
zve64f
non-standard supervisor-level extension
Enable migration to add protocol conformance on classes
-objcmt-migrate-readonly-property
Build with asserts or with -DLLVM_FORCE_ENABLE_STATS
-ffrontend-optimize
gfx602
gfx802
gfx908
gfx1101
rv770
rv32imafc
Enable migration to annotate property with NS_RETURNS_INNER_POINTER
track-memory
hsail
powerpc64le
spirv64
arm64e
elfiamcu
openbsd
android
musleabihf
callable
i786
mipsn32r6el
coff
-Ofast
NUSHU CHARACTER-
overlay-relative
missing key 'contents' or 'external-contents'
/usr/include/c++
remark: 
avx512dq
c3-2
westmere
rocketlake
athlon64
znver1
clzero
movdiri
avx512fp16
Enable gep instruction tracing in sanitizer coverage
Unrecognized escape code
Unexpected token
                
invalid number
asterisk
seven
low-line
left-curly-bracket
out of memory
*** unknown regexp error code ***
-darwin
/var/tmp/
' for 
projectName
__builtin_sve_svldff1_gather_u32base_s32
__builtin_sve_svldff1_gather_u64base_f64
__builtin_sve_svldff1_gather_u64base_s64
__builtin_sve_svldff1_s32
__builtin_sve_svldff1_u8
__builtin_sve_svldff1_vnum_u32
__builtin_sve_svldff1sb_gather_u32base_offset_s32
__builtin_sve_svldff1sb_gather_u64base_u64
__builtin_sve_svldff1sb_u16
__builtin_sve_svldff1sh_gather_s32index_u32
__builtin_sve_svldff1sh_gather_u32base_index_s32
__builtin_sve_svldff1sh_gather_u32offset_u32
__builtin_sve_svldff1sh_gather_u64base_s64
__builtin_sve_svldff1sh_vnum_s64
__builtin_sve_svldff1sw_gather_u64base_index_s64
__builtin_sve_svldff1sw_gather_u64offset_u64
__builtin_sve_svldff1ub_gather_s32offset_u32
__builtin_sve_svldff1ub_gather_u64base_offset_u64
__builtin_sve_svldff1ub_s64
__builtin_sve_svldff1ub_vnum_u64
__builtin_sve_svldff1uh_gather_s32offset_u32
__builtin_sve_svldff1uh_gather_u32index_u32
__builtin_sve_svldff1uh_gather_u64base_s64
__builtin_sve_svldff1uh_u64
__builtin_sve_svldff1uw_gather_s64index_u64
__builtin_sve_svldff1uw_gather_u64index_u64
__builtin_sve_svldnf1_bf16
__builtin_sve_svldnf1_u32
__builtin_sve_svldnf1_vnum_f32
__builtin_sve_svldnf1sb_s32
__builtin_sve_svldnf1sb_vnum_s64
__builtin_sve_svldnf1sh_vnum_s64
__builtin_sve_svldnf1sw_vnum_u64
__builtin_sve_svldnf1ub_vnum_u16
__builtin_sve_svldnf1uh_vnum_s32
__builtin_sve_svldnt1_f16
__builtin_sve_svldnt1_gather_s64index_f64
__builtin_sve_svldnt1_gather_u32base_s32
__builtin_sve_svldnt1_gather_u64base_index_s64
__builtin_sve_svldnt1_gather_u64index_u64
__builtin_sve_svldnt1_s64
__builtin_sve_svldnt1_vnum_s16
__builtin_sve_svldnt1_vnum_u8
__builtin_sve_svldnt1d_f64_x2
__builtin_sve_svldnt1d_u64_x4
__builtin_sve_svldnt1h_s16_x2
__builtin_sve_svldnt1h_vnum_f16_x4
__builtin_sve_svldnt1sb_gather_u32base_s32
__builtin_sve_svldnt1sb_gather_u64base_s64
__builtin_sve_svldnt1sh_gather_u32base_offset_s32
__builtin_sve_svldnt1sh_gather_u64base_index_u64
__builtin_sve_svldnt1sw_gather_s64index_s64
__builtin_sve_svldnt1sw_gather_u64base_index_s64
__builtin_sve_svldnt1ub_gather_u32base_offset_s32
__builtin_sve_svldnt1ub_gather_u64base_offset_u64
__builtin_sve_svldnt1uh_gather_u32base_index_s32
__builtin_sve_svldnt1uh_gather_u32offset_s32
__builtin_sve_svldnt1uh_gather_u64offset_s64
__builtin_sve_svldnt1uw_gather_u64base_index_u64
__builtin_sve_svldnt1w_f32_x2
__builtin_sve_svldnt1w_u32_x4
__builtin_sve_svlen_f32
UWiq4i
__builtin_sve_svlen_u64
__builtin_sve_svlogb_f16_z
__builtin_sve_svlsl_n_s32_m
__builtin_sve_svlsl_n_s8_x
__builtin_sve_svlsl_n_u64_x
__builtin_sve_svlsl_n_u8_m
__builtin_sve_svlsl_s8_z
__builtin_sve_svlsl_u64_m
__builtin_sve_svlsl_wide_n_s32_m
__builtin_sve_svlsl_wide_n_u16_m
__builtin_sve_svlsl_wide_n_u8_x
__builtin_sve_svlsl_wide_s32_z
q4Uiq16bq4Uiq2UWi
__builtin_sve_svlsl_wide_u8_x
__builtin_sve_svlsr_n_u8_m
__builtin_sve_svlsr_u32_x
__builtin_sve_svlsr_wide_n_u16_x
__builtin_sve_svlsr_wide_n_u8_x
__builtin_sve_svlsr_wide_u8_z
__builtin_sve_svmad_f32_x
__builtin_sve_svmad_n_f16_z
__builtin_sve_svmad_n_f32_z
__builtin_sve_svmad_n_s32_z
__builtin_sve_svmad_n_s8_x
__builtin_sve_svmad_n_u32_z
q16Ucq16bq16Ucq16UcUc
__builtin_sve_svmad_s32_z
__builtin_sve_svmad_s8_x
__builtin_sve_svmad_u32_z
__builtin_sve_svmad_u8_m
__builtin_sve_svmax_f32_m
__builtin_sve_svmax_n_f16_x
__builtin_sve_svmax_n_s16_x
__builtin_sve_svmax_n_s64_x
__builtin_sve_svmax_n_u32_z
__builtin_sve_svmax_s16_m
__builtin_sve_svmax_s8_m
__builtin_sve_svmax_u16_m
__builtin_sve_svmaxnm_f16_x
__builtin_sve_svmaxnm_f64_z
__builtin_sve_svmaxnm_n_f64_z
__builtin_sve_svmaxnmp_f64_x
__builtin_sve_svmaxp_s16_m
__builtin_sve_svmaxp_s8_x
__builtin_sve_svmaxv_f16
__builtin_sve_svmaxv_s64
__builtin_sve_svmin_f32_z
__builtin_sve_svmin_n_f32_m
__builtin_sve_svmin_n_s32_m
__builtin_sve_svmin_n_s8_m
__builtin_sve_svmin_n_u64_x
__builtin_sve_svmin_s16_z
__builtin_sve_svmin_s8_z
__builtin_sve_svmin_u32_m
__builtin_sve_svminnm_f32_m
__builtin_sve_svminnm_n_f16_x
__builtin_sve_svminnmp_f16_x
__builtin_sve_svminnmv_f32
__builtin_sve_svminp_s32_m
__builtin_sve_svminp_u16_x
__builtin_sve_svminv_f64
__builtin_sve_svminv_u16
__builtin_sve_svmla_f64_x
q2dq2dq2dq2dIUWi
__builtin_sve_svmla_n_f16_z
__builtin_sve_svmla_n_f64_z
__builtin_sve_svmla_n_s8_m
__builtin_sve_svmla_n_u32_x
__builtin_sve_svmla_s16_x
__builtin_sve_svmla_s32_m
__builtin_sve_svmla_u32_z
__builtin_sve_svmlalb_f32
q4Uiq4Uiq8Usq8UsIUWi
__builtin_sve_svmlalb_n_s32
__builtin_sve_svmlalb_u64
__builtin_sve_svmlalt_n_f32
__builtin_sve_svmlalt_s64
__builtin_sve_svmls_f16_x
__builtin_sve_svmls_lane_s16
__builtin_sve_svmls_n_f16_x
__builtin_sve_svmls_n_s16_x
__builtin_sve_svmls_n_s64_x
__builtin_sve_svmls_n_u32_z
__builtin_sve_svmls_s16_m
__builtin_sve_svmls_s8_m
__builtin_sve_svmls_u16_x
__builtin_sve_svmlslb_lane_f32
__builtin_sve_svmlslb_n_s32
__builtin_sve_svmlslb_u32
__builtin_sve_svmlslt_lane_u32
__builtin_sve_svmlslt_s32
__builtin_sve_svmmla_f64
__builtin_sve_svmovlb_s64
q4Uiq8Us
__builtin_sve_svmsb_f16_z
__builtin_sve_svmsb_n_f16_m
__builtin_sve_svmsb_n_s16_m
__builtin_sve_svmsb_n_s64_m
__builtin_sve_svmsb_n_u32_x
__builtin_sve_svmsb_n_u8_z
__builtin_sve_svmsb_s64_z
__builtin_sve_svmsb_s8_z
__builtin_sve_svmul_f16_m
__builtin_sve_svmul_f64_x
__builtin_sve_svmul_lane_u32
__builtin_sve_svmul_n_f32_x
__builtin_sve_svmul_n_s32_z
__builtin_sve_svmul_n_u16_m
__builtin_sve_svmul_n_u8_m
__builtin_sve_svmul_s16_z
__builtin_sve_svmul_u16_x
__builtin_sve_svmul_u64_z
__builtin_sve_svmulh_n_s32_z
__builtin_sve_svmulh_n_s8_z
__builtin_sve_svmulh_n_u8_m
__builtin_sve_svmulh_s32_x
__builtin_sve_svmulh_u16_x
__builtin_sve_svmulh_u32_z
q4Uiq8Usq8UsIUWi
__builtin_sve_svmullb_n_u32
__builtin_sve_svmullt_lane_s64
__builtin_sve_svmullt_n_u16
__builtin_sve_svmulx_f16_x
__builtin_sve_svmulx_f64_z
__builtin_sve_svmulx_n_f64_z
__builtin_sve_svnbsl_n_s8
__builtin_sve_svnbsl_u64
__builtin_sve_svneg_f32_z
__builtin_sve_svneg_s32_z
__builtin_sve_svneg_s8_z
__builtin_sve_svnmad_n_f16_m
__builtin_sve_svnmad_n_f64_x
__builtin_sve_svnmla_f32_m
__builtin_sve_svnmla_f32_x
__builtin_sve_svnmls_f16_x
__builtin_sve_svnmls_f64_z
__builtin_sve_svnmls_n_f64_z
__builtin_sve_svnmsb_f32_z
__builtin_sve_svnmsb_n_f64_m
__builtin_sve_svnot_s16_z
__builtin_sve_svnot_s8_z
__builtin_sve_svnot_u32_x
__builtin_sve_svorr_n_s16_x
__builtin_sve_svorr_n_s64_z
__builtin_sve_svorr_n_u32_z
__builtin_sve_svorr_n_u8_z
__builtin_sve_svorr_s8_m
__builtin_sve_svorr_u32_x
__builtin_sve_svorv_s32
__builtin_sve_svorv_u32
__builtin_sve_svpmul_u8
__builtin_sve_svpmullb_pair_u64
__builtin_sve_svpmullt_pair_u32
__builtin_sve_svpnext_b32
vq16bq4UiIi
__builtin_sve_svprfb_gather_u64base_offset
__builtin_sve_svprfd_gather_u32base
__builtin_sve_svprfd_gather_u64index
__builtin_sve_svprfh_vnum
__builtin_sve_svprfw_gather_u64base
__builtin_sve_svptest_any
__builtin_sve_svptrue_b64
__builtin_sve_svptrue_pat_b64
__builtin_sve_svqabs_s32_z
__builtin_sve_svqadd_n_s16_x
__builtin_sve_svqadd_n_s32_m
__builtin_sve_svqadd_n_u16_x
__builtin_sve_svqadd_n_u64_m
__builtin_sve_svqadd_s16_m
__builtin_sve_svqadd_s32_x
__builtin_sve_svqadd_s8_x
__builtin_sve_svqadd_u32_m
__builtin_sve_svqadd_u8_x
__builtin_sve_svqcadd_s8
__builtin_sve_svqdecb_pat_n_s64
__builtin_sve_svqdecd_n_s64
__builtin_sve_svqdecd_pat_u64
__builtin_sve_svqdech_n_s32
__builtin_sve_svqdech_pat_u16
iiq16b
__builtin_sve_svqdecp_n_u32_b16
__builtin_sve_svqdecp_n_u32_b8
__builtin_sve_svqdecp_u16
__builtin_sve_svqdecw_n_s64
__builtin_sve_svqdecw_pat_u32
__builtin_sve_svqdmlalb_lane_s32
__builtin_sve_svqdmlalbt_n_s64
__builtin_sve_svqdmlalt_n_s32
__builtin_sve_svqdmlslb_n_s64
__builtin_sve_svqdmlslbt_n_s32
__builtin_sve_svqdmlslt_s32
__builtin_sve_svqdmulh_n_s64
__builtin_sve_svqdmullb_n_s32
__builtin_sve_svqdmullt_lane_s64
__builtin_sve_svqincb_n_u64
__builtin_sve_svqincd_n_u32
__builtin_sve_svqincd_u64
__builtin_sve_svqinch_n_s64
__builtin_sve_svqincp_n_s32_b8
__builtin_sve_svqincp_n_u32_b64
__builtin_sve_svqincp_u16
__builtin_sve_svqincw_n_u64
__builtin_sve_svqneg_s16_x
__builtin_sve_svqneg_s64_z
__builtin_sve_svqrdcmlah_s8
__builtin_sve_svqrdmlah_n_s32
__builtin_sve_svqrdmlsh_n_s32
__builtin_sve_svqrdmulh_lane_s16
__builtin_sve_svqrdmulh_s64
__builtin_sve_svqrshl_n_s32_x
__builtin_sve_svqrshl_n_u16_x
__builtin_sve_svqrshl_n_u64_x
__builtin_sve_svqrshl_s32_m
__builtin_sve_svqrshl_s64_x
__builtin_sve_svqrshl_u32_z
__builtin_sve_svqrshl_u8_x
q8Usq8UiIUWi
q16Scq8sIUWi
q4Uiq2UWiIUWi
__builtin_sve_svqrshrnt_n_u16
q8Usq4iIUWi
__builtin_sve_svqrshrunt_n_s32
__builtin_sve_svqshl_n_s64_x
__builtin_sve_svqshl_n_u16_z
__builtin_sve_svqshl_n_u8_z
__builtin_sve_svqshl_s32_z
__builtin_sve_svqshl_u32_m
__builtin_sve_svqshl_u8_x
__builtin_sve_svqshlu_n_s32_z
__builtin_sve_svqshlu_n_s64_x
__builtin_sve_svqshrnt_n_s32
__builtin_sve_svqshrunb_n_s64
__builtin_sve_svqsub_n_s32_m
__builtin_sve_svqsub_n_s64_z
__builtin_sve_svqsub_n_u32_m
__builtin_sve_svqsub_n_u8
__builtin_sve_svqsub_s32_m
__builtin_sve_svqsub_s64_x
__builtin_sve_svqsub_u32_m
__builtin_sve_svqsub_u8
__builtin_sve_svqsubr_n_s32_z
__builtin_sve_svqsubr_n_s8_z
__builtin_sve_svqsubr_n_u8_m
__builtin_sve_svqsubr_s32_x
__builtin_sve_svqsubr_u16_x
__builtin_sve_svqsubr_u32_z
q4iq2Wi
__builtin_sve_svqxtnt_s16
q8Usq8Usq4Ui
q8Usq4i
__builtin_sve_svraddhnb_n_s32
__builtin_sve_svraddhnb_s64
__builtin_sve_svraddhnt_n_u64
__builtin_sve_svraddhnt_u32
__builtin_sve_svrbit_s64_x
__builtin_sve_svrbit_u16_z
__builtin_sve_svrbit_u8_z
__builtin_sve_svrecpe_f32
q4fq4fq4f
__builtin_sve_svrecpx_f32_x
__builtin_sve_svrev_bf16
-ftemplate-backtrace-limit=
q4Uiq4Ui
__builtin_sve_svrevb_s32_m
__builtin_sve_svrevb_u32_m
__builtin_sve_svrevd_s16_m
__builtin_sve_svrevd_s8_x
__builtin_sve_svrevd_u32_z
__builtin_sve_svrevh_s32_z
__builtin_sve_svrevh_u32_x
__builtin_sve_svrhadd_n_s16_m
__builtin_sve_svrhadd_n_s64_x
__builtin_sve_svrhadd_n_u32_x
__builtin_sve_svrhadd_n_u8_x
__builtin_sve_svrhadd_s64_z
__builtin_sve_svrhadd_u32_m
__builtin_sve_svrinta_f16_m
__builtin_sve_svrinta_f32_x
__builtin_sve_svrinti_f64_x
__builtin_sve_svrintm_f32_z
__builtin_sve_svrintn_f32_z
__builtin_sve_svrintp_f16_z
__builtin_sve_svrintx_f32_m
__builtin_sve_svrintz_f16_x
__builtin_sve_svrshl_n_s16_x
__builtin_sve_svrshl_n_s64_m
__builtin_sve_svrshl_n_u32_z
__builtin_sve_svrshl_s16_m
__builtin_sve_svrshl_s8_m
__builtin_sve_svrshl_u32_m
__builtin_sve_svrshr_n_s16_x
__builtin_sve_svrshr_n_s64_z
q4Uiq16bq4UiIUWi
__builtin_sve_svrshr_n_u64_m
__builtin_sve_svrshrnb_n_u64
__builtin_sve_svrsqrte_f16
__builtin_sve_svrsra_n_s16
__builtin_sve_svrsra_n_u64
__builtin_sve_svrsubhnb_s64
__builtin_sve_svrsubhnt_n_u16
__builtin_sve_svsbclb_n_u32
__builtin_sve_svsbclt_n_u64
__builtin_sve_svscale_f64_m
__builtin_sve_svscale_n_f16_z
__builtin_sve_svsclamp_s16
__builtin_sve_svsel_f16
__builtin_sve_svsel_u8
__builtin_sve_svset2_f64
q32Scq32ScIUWiq16Sc
q8Uiq8UiIUWiq4Ui
q6dq6dIUWiq2d
__builtin_sve_svset3_s8
q48Ucq48UcIUWiq16Uc
q16fq16fIUWiq4f
q64Scq64ScIUWiq16Sc
__builtin_sve_svset4_u8
q2Wiq4iIUWi
__builtin_sve_svshllb_n_u64
__builtin_sve_svshrnb_n_u16
__builtin_sve_svshrnt_n_u32
__builtin_sve_svsli_n_u8
__builtin_sve_svsplice_f64
__builtin_sve_svsqadd_n_u16_x
__builtin_sve_svsqadd_n_u64_z
__builtin_sve_svsqadd_u32_z
__builtin_sve_svsqadd_u64_x
__builtin_sve_svsqrt_f64_m
__builtin_sve_svsra_n_u16
__builtin_sve_svsri_n_u32
vq16bh*q8h
vq16bSWi*q2Wi
__builtin_sve_svst1_scatter_s32index_u32
__builtin_sve_svst1_scatter_s64index_u64
__builtin_sve_svst1_scatter_u32base_f32
__builtin_sve_svst1_scatter_u32base_s32
vq16bSi*q4Uiq4i
vq16bq2UWiWiq2d
__builtin_sve_svst1_scatter_u64base_offset_s64
__builtin_sve_svst1_scatter_u64index_u64
__builtin_sve_svst1_u32
vq16bh*Wiq8h
vq16bd*Wiq2d
vq16bUi*Wiq4Ui
__builtin_sve_svst1b_s32
vq16bSc*q4iq4i
vq16bUc*q2Wiq2UWi
__builtin_sve_svst1b_scatter_u64base_offset_u64
__builtin_sve_svst1b_u16
vQUc*q64Uc
__builtin_sve_svst1b_vnum_s64
vq16bUc*Wiq2UWi
__builtin_sve_svst1d_f64_x4
vQUWi*q8UWi
vQSWi*Wiq4Wi
vQy*q32y
__builtin_sve_svst1h_s16_x4
vq16bUs*q4iq4Ui
__builtin_sve_svst1h_scatter_s64index_s64
vq16bSs*q4Uiq4i
__builtin_sve_svst1h_scatter_u64base_offset_s64
__builtin_sve_svst1h_scatter_u64offset_u64
vq16bUs*q4Ui
vQh*Wiq32h
__builtin_sve_svst1h_vnum_s64
vq16bUs*Wiq2UWi
__builtin_sve_svst1w_s32_x2
__builtin_sve_svst1w_scatter_s64offset_u64
__builtin_sve_svst1w_scatter_u64index_s64
vQUi*q16Ui
vQf*Wiq16f
vQUi*Wiq16Ui
__builtin_sve_svst2_f32
vq16bSWi*q4Wi
vq16bUs*q16Us
vq16bf*Wiq8f
__builtin_sve_svst2_vnum_s64
vq16bUWi*Wiq4UWi
vq16bh*q24h
vq16bSWi*q6Wi
__builtin_sve_svst3_u64
vq16bf*Wiq12f
__builtin_sve_svst3_vnum_s32
vq16bUWi*Wiq6UWi
__builtin_sve_svst4_f32
vq16bSWi*q8Wi
vq16bUi*q16Ui
vq16bf*Wiq16f
__builtin_sve_svst4_vnum_s64
vq16bUWi*Wiq8UWi
__builtin_sve_svst4_vnum_u8
__builtin_sve_svstnt1_scatter_s64offset_u64
__builtin_sve_svstnt1_scatter_u32base_offset_u32
__builtin_sve_svstnt1_scatter_u64base_index_u64
__builtin_sve_svstnt1_scatter_u64index_f64
__builtin_sve_svstnt1_vnum_bf16
__builtin_sve_svstnt1_vnum_s8
__builtin_sve_svstnt1b_scatter_u32base_offset_s32
__builtin_sve_svstnt1b_scatter_u32offset_u32
__builtin_sve_svstnt1b_vnum_u8_x2
__builtin_sve_svstnt1d_u64_x4
__builtin_sve_svstnt1h_f16_x2
__builtin_sve_svstnt1h_scatter_s64offset_s64
__builtin_sve_svstnt1h_scatter_u64base_index_s64
__builtin_sve_svstnt1h_scatter_u64index_u64
__builtin_sve_svstnt1h_vnum_s16_x2
__builtin_sve_svstnt1w_f32_x2
__builtin_sve_svstnt1w_scatter_u64base_s64
__builtin_sve_svstnt1w_u32_x4
__builtin_sve_svsub_f16_z
__builtin_sve_svsub_f64_z
__builtin_sve_svsub_n_s16_m
__builtin_sve_svsub_n_s64_x
__builtin_sve_svsub_n_u32_x
__builtin_sve_svsub_n_u8_m
__builtin_sve_svsub_s64_z
__builtin_sve_svsub_u32_m
__builtin_sve_svsubhnb_n_s16
__builtin_sve_svsubhnb_s16
__builtin_sve_svsubhnt_n_u32
__builtin_sve_svsubhnt_u64
__builtin_sve_svsublb_s64
__builtin_sve_svsublb_u64
__builtin_sve_svsublt_s16
__builtin_sve_svsubltb_n_s32
__builtin_sve_svsubr_f32_x
__builtin_sve_svsubr_n_f16_x
__builtin_sve_svsubr_n_s16_z
__builtin_sve_svsubr_n_s8_m
__builtin_sve_svsubr_n_u64_m
__builtin_sve_svsubr_n_u8_z
__builtin_sve_svsubr_s8_x
__builtin_sve_svsubr_u32_z
__builtin_sve_svsubwb_n_s64
__builtin_sve_svsubwb_s64
__builtin_sve_svsubwt_s16
q4iq4iq16Scq16UcIUWi
__builtin_sve_svtbl2_f32
__builtin_sve_svtbl2_s16
__builtin_sve_svtbl2_u64
q8hq8hq8Us
__builtin_sve_svtbl_s64
__builtin_sve_svtbl_u64
__builtin_sve_svtbx_s16
q16Scq16Scq16Scq16Uc
__builtin_sve_svtrn1_b32
__builtin_sve_svtrn1_f16
__builtin_sve_svtrn1q_bf16
__builtin_sve_svtrn1q_s8
__builtin_sve_svtrn2_bf16
__builtin_sve_svtrn2_s64
__builtin_sve_svtrn2q_s16
__builtin_sve_svtrn2q_u8
__builtin_sve_svuclamp_u64
__builtin_sve_svundef2_bf16
__builtin_sve_svundef2_s8
q4UWiv
__builtin_sve_svundef3_f64
__builtin_sve_svundef3_s64
__builtin_sve_svundef3_u8
q16fv
__builtin_sve_svundef4_s8
q16Uiv
__builtin_sve_svundef_f64
q2Wiv
__builtin_sve_svundef_u8
__builtin_sve_svunpkhi_u16
__builtin_sve_svuqadd_n_s16_m
__builtin_sve_svuqadd_n_s64_x
__builtin_sve_svuqadd_s32_x
__builtin_sve_svuqadd_s64_z
__builtin_sve_svuzp1_b32
__builtin_sve_svuzp1_s16
__builtin_sve_svuzp1q_f16
__builtin_sve_svuzp1q_s8
__builtin_sve_svuzp2_f16
__builtin_sve_svuzp2_u16
__builtin_sve_svuzp2q_s32
__builtin_sve_svuzp2q_u64
__builtin_sve_svwhilege_b32_s64
__builtin_sve_svwhilege_b8_s32
__builtin_sve_svwhilegt_b32_s64
__builtin_sve_svwhilegt_b64_u64
__builtin_sve_svwhilele_b32_s64
__builtin_sve_svwhilele_b8_s32
__builtin_sve_svwhilelt_b32_s64
__builtin_sve_svwhilelt_b64_s32
q16bfC*fC*
__builtin_sve_svwhilerw_s64
q16bUWiC*UWiC*
__builtin_sve_svwhilewr_f64
vq16b
__builtin_sve_svxar_n_u64
__builtin_sve_svzip1_f64
__builtin_sve_svzip1_u16
__builtin_sve_svzip1q_s8
__builtin_sve_svzip2_b64
__builtin_sve_svzip2_s8
__builtin_sve_svzip2q_f16
__builtin_sve_svzip2q_u8
q16Scq2SWi
__builtin_sve_reinterpret_s8_f16
__builtin_sve_reinterpret_s8_f32
__builtin_sve_reinterpret_s16_u8
q8Ssq2UWi
__builtin_sve_reinterpret_s32_s8
__builtin_sve_reinterpret_s32_s64
__builtin_sve_reinterpret_s32_f16
q4Siq2d
__builtin_sve_reinterpret_s64_u8
q2SWiq4Ui
__builtin_sve_reinterpret_u8_s8
q16Ucq2SWi
__builtin_sve_reinterpret_u8_bf16
__builtin_sve_reinterpret_u16_s8
__builtin_sve_reinterpret_u16_u32
__builtin_sve_reinterpret_u16_f32
__builtin_sve_reinterpret_u32_s32
The visibility for dllimport external declarations [-fvisibility-from-dllstorageclass]
In file included from 
+istack
Failed reading rec code: %s
stack-size
Malformed Diagnostic block
date
clang.serialized_diags
atomic_write_error: 
discussion
Meta
suppress
<integer>
V32sV16fV16f
endif
Set exception handling model
-fsanitize-coverage-allowlist=
-dumpversion
-dylib_file
-fno-non-call-exceptions
helperclass
--driver-mode=
Dump the coverage mapping records, for testing
-dump-deserialized-decls
htmlonly
idlexcept
<CompileOnly group>
<R (with value) group>
implements
-disable-free
Supplied regexp was blank
: Mismatched cache file version
endlatexonly
Expected 'kind mangled_name mangled_name', found '
The version of darwin target variant SDK used for compilation
Generate code for an additional runtime variant of the deployment target
-dead_strip
gdb,lldb,sce,dbx
--define-macro=
Generate instrumented code to collect context sensitive execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
-finit-local-zero
-fno-objc-convert-messages-to-runtime-calls
device-cuda
Include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
--cuda-path=
An ID for compilation unit, which should be the same for the same compilation unit but different for different compilation units. It is used to externalize device-side static variables for single source offloading languages CUDA and HIP so that they can be accessed by the host code of the same compilation unit.
 for appending!
Four-byte version string for gcov files.
Enable predefined and command line preprocessor macros
--cuda-device-only
-compress-debug-sections
--config=
--constant-cfstrings
return
<T group>
-compatibility_version
/clang:
--classpath
-client_name
<file>:<line>:<column>
since
-cl-strict-aliasing
cygnus
OpenCL only. Disables all standard includes containing non-native compiler types and functions.
subsubsection
OpenCL only. Allow denormals to be flushed to zero.
-cl-finite-math-only
OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
throws
Emit Windows Control Flow Guard tables only (no checks)
spirv32v1.1
Dump list of actions to perform
HANGUL JUNGSEONG O-E
-ccc-arcmt-modify
Name for native GCC compiler
-falign-loops=
-faligned-new
Treat editor placeholders as valid source code
Accept a PCH file that was created with a different modules cache path
Follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
target,no,yes
-faggressive-function-elimination
Don't instrument functions with loops unless they also meet the minimum function size
device-openmp
/external:
--extdirs=
Add dirs in env var <var> to include search path with warnings suppressed
Add directory to include search path with warnings suppressed
-exception-model
pentium4
Just run preprocessor, no output (for timings)
Generate pre-compiled header file
/enable-16bit-types
Enable analyzing function argument and return types for mandatory definedness
Build the parse tree, then lower it to MLIR
llvm.vfs.output
Build ASTs and convert to LLVM, discarding output
-emit-ast
-emit-header-module
Generate C++20 header units from header files
-fasynchronous-unwind-tables
Output assembly code file during compilation
-fbackslash
-fblas-matmul-limit=
Enable the 'blocks' language feature
-finline-max-stacksize=
arm9e
[:>:]]
-faltivec-src-compat=
-faltivec
-fapinotes-cache-path=
Does nothing; API notes are no longer cached separately from modules
-fapinotes-swift-version=
Enable external API notes support
-fapple-kext-vtable-mitigation
Use Apple's kernel extensions ABI
Force linking the clang builtins runtime library
Make the x13 register call-saved (AArch64 only)
callgraph
Disable replaying a cached compile job
-fbracket-depth=
-fbranch-target-identification
Time when the current build session started
Load the clang builtins module map file.
REG_EESCAPE
-fcaret-diagnostics-max-lines
values-Xa.o
apple-a7
lipo
TERM
-fclasspath=
-fconst-strings
pthread_attr_setstacksize failed
-nostdinc
-java
enum
__builtin_amdgcn_s_memtime
__builtin_amdgcn_s_waitcnt
__builtin_amdgcn_iglp_opt
__builtin_amdgcn_ds_gws_sema_v
__builtin_amdgcn_atomic_dec32
ddddb
__builtin_amdgcn_trig_preopf
__builtin_amdgcn_sqrtf
__builtin_amdgcn_frexp_mantf
__builtin_amdgcn_class
__builtin_amdgcn_s_incperflevel
__builtin_amdgcn_uicmpl
__builtin_amdgcn_ds_swizzle
ff*3fIiIiIb
__builtin_amdgcn_sbfe
E2sff
__builtin_amdgcn_sad_u16
ci-insts
__builtin_amdgcn_interp_p2_f16
__builtin_amdgcn_interp_mov
s-memrealtime
__builtin_amdgcn_fmed3h
__builtin_amdgcn_global_atomic_fadd_f32
dd*3d
V2hV2h*0V2h
dot7-insts
__builtin_amdgcn_fdot2_f32_bf16
__builtin_amdgcn_udot4
__builtin_amdgcn_permlane16
V4UiUifV4fV4hV4hV4Ui
__builtin_amdgcn_image_bvh_intersect_ray_lh
__builtin_amdgcn_wmma_i32_16x16x16_iu4_w32
V8hV16hV16hV8hIb
__builtin_amdgcn_s_sendmsg_rtnl
__builtin_amdgcn_read_exec_hi
__builtin_r600_recipsqrt_ieee
__builtin_amdgcn_mfma_f32_4x4x1f32
V4fV4hV4hV4fIiIiIi
__builtin_amdgcn_mfma_i32_16x16x4i8
V4fV2sV2sV4fIiIiIi
__builtin_amdgcn_mfma_f32_4x4x4bf16_1k
V4iWiWiV4iIiIiIi
V16fV2fV2fV16fIiIiIi
__builtin_amdgcn_mfma_f32_32x32x16_fp8_bf8
V4fV4sV8sV4fiIiIi
__builtin_amdgcn_smfmac_f32_16x16x64_bf8_fp8
V16fV2iV4iV16fiIiIi
__builtin_amdgcn_cvt_sr_bf8_f32
v103
v112
v118
v128
v135
v144
v147
v160
v167
v176
v182
v192
v199
v208
v213
v224
v231
v240
v246
s103
s112
s118
exec
vcc_lo
headerfile
--driver-mode=cl
__interface
  Number of selectors: 
IncompleteArray
Complex
a106
FunctionNoProto
signature mismatch
DependentSizedMatrix
native
SubstTemplateTypeParm
/GL-
UnresolvedUsing
a174
unsigned short
short _Accum
a206
march=
_Sat short _Accum
a246
+reserve-x30
-fdepscan-share-identifier=
blink
8_1A
9_1A
apcs-gnu
+vfp3d16sp
+vfp4d16
+cdecp7
__ARM_ARCH_7K__
__ARM_PCS_VFP
__thumb__
__ARM_FEATURE_MVE
__ARM_FEATURE_PAUTH
__builtin_arm_qsub
__builtin_arm_smlabb
__builtin_arm_uxtb16
__builtin_arm_ssub8
__builtin_arm_qadd16
__builtin_arm_shadd16
__builtin_arm_uhsax
__builtin_arm_usub16
__builtin_arm_smlsldx
__builtin_arm_smusdx
__builtin_arm_ldcl
__builtin_arm_stc2l
__builtin_arm_mrc2
__builtin_arm_mrrc2
vcC*LLUi
__builtin_arm_mve_sqshll
__builtin_arm_mve_urshrl
__builtin_arm_mve_vabavq_p_u32
__builtin_arm_mve_vabdq_m_f32
__builtin_arm_mve_vabdq_s16
__builtin_arm_mve_vabdq_x_s32
__builtin_arm_mve_vabsq_f32
__builtin_arm_mve_vabsq_x_f32
__builtin_arm_mve_vadciq_u32
__builtin_arm_mve_vaddlvq_p_s32
__builtin_arm_mve_vaddlvq_u32
__builtin_arm_mve_vaddq_m_s16
__builtin_arm_mve_vaddq_n_f32
__builtin_arm_mve_vaddq_s8
__builtin_arm_mve_vaddq_x_n_f16
__builtin_arm_mve_vaddq_x_s8
__builtin_arm_mve_vaddvaq_p_u16
__builtin_arm_mve_vaddvq_p_s16
__builtin_arm_mve_vaddvq_p_u8
__builtin_arm_mve_vandq_m_s16
__builtin_arm_mve_vandq_s32
__builtin_arm_mve_vandq_x_s8
__builtin_arm_mve_vbicq_m_f16
__builtin_arm_mve_vbicq_m_u32
__builtin_arm_mve_vbicq_s32
__builtin_arm_mve_vbicq_x_s8
__builtin_arm_mve_vbrsrq_m_n_f16
__builtin_arm_mve_vbrsrq_n_s8
__builtin_arm_mve_vbrsrq_x_n_s32
__builtin_arm_mve_vcaddq_rot270_m_s16
__builtin_arm_mve_vcaddq_rot270_s16
__builtin_arm_mve_vcaddq_rot270_x_s8
__builtin_arm_mve_vcaddq_rot90_m_f32
__builtin_arm_mve_vcaddq_rot90_s8
__builtin_arm_mve_vcaddq_rot90_x_f32
__builtin_arm_mve_vclsq_s32
__builtin_arm_mve_vclzq_m_s8
__builtin_arm_mve_vclzq_u8
__builtin_arm_mve_vclzq_x_u8
__builtin_arm_mve_vcmlaq_rot270_f32
__builtin_arm_mve_vcmpcsq_m_n_u16
__builtin_arm_mve_vcmpcsq_u16
__builtin_arm_mve_vcmpeqq_f16
__builtin_arm_mve_vcmpeqq_m_s32
__builtin_arm_mve_vcmpeqq_n_s16
__builtin_arm_mve_vcmpeqq_u16
__builtin_arm_mve_vcmpgeq_m_f32
__builtin_arm_mve_vcmpgeq_n_f32
__builtin_arm_mve_vcmpgtq_f16
__builtin_arm_mve_vcmpgtq_m_s16
__builtin_arm_mve_vcmpgtq_n_s16
__builtin_arm_mve_vcmphiq_m_u8
__builtin_arm_mve_vcmpleq_f16
__builtin_arm_mve_vcmpleq_m_s16
__builtin_arm_mve_vcmpleq_n_s32
__builtin_arm_mve_vcmpltq_m_n_f32
__builtin_arm_mve_vcmpltq_n_f16
__builtin_arm_mve_vcmpneq_f32
__builtin_arm_mve_vcmpneq_m_n_f32
__builtin_arm_mve_vcmpneq_m_u8
__builtin_arm_mve_vcmpneq_n_u32
__builtin_arm_mve_vcmulq_f32
__builtin_arm_mve_vcmulq_rot180_m_f32
__builtin_arm_mve_vcmulq_rot90_f32
__builtin_arm_mve_vcreateq_f16
__builtin_arm_mve_vcreateq_u8
__builtin_arm_mve_vctp64q
__builtin_arm_mve_vcvtaq_u32_f32
__builtin_arm_mve_vcvtbq_m_f16_f32
__builtin_arm_mve_vcvtmq_u16_f16
__builtin_arm_mve_vcvtnq_m_s16_f16
__builtin_arm_mve_vcvtnq_x_u16_f16
__builtin_arm_mve_vcvtpq_s32_f32
__builtin_arm_mve_vcvtq_f32_s32
__builtin_arm_mve_vcvtq_m_f16_s16
__builtin_arm_mve_vcvtq_m_u16_f16
__builtin_arm_mve_vcvtq_n_s32_f32
__builtin_arm_mve_vcvtq_x_f32_s32
__builtin_arm_mve_vcvtq_x_n_s16_f16
__builtin_arm_mve_vcvttq_m_f16_f32
__builtin_arm_mve_vddupq_m_wb_u32
__builtin_arm_mve_vddupq_x_n_u32
__builtin_arm_mve_vdupq_m_n_f16
__builtin_arm_mve_vdupq_n_s32
__builtin_arm_mve_vdupq_x_n_s16
__builtin_arm_mve_vdwdupq_m_wb_u16
__builtin_arm_mve_vdwdupq_wb_u16
__builtin_arm_mve_veorq_f32
__builtin_arm_mve_veorq_m_u32
__builtin_arm_mve_veorq_x_f32
__builtin_arm_mve_veorq_x_u16
__builtin_arm_mve_vfmasq_m_n_f32
__builtin_arm_mve_vgetq_lane_f16
__builtin_arm_mve_vgetq_lane_u8
__builtin_arm_mve_vhaddq_m_n_u8
__builtin_arm_mve_vhaddq_n_u16
__builtin_arm_mve_vhaddq_u32
__builtin_arm_mve_vhaddq_x_s32
__builtin_arm_mve_vhcaddq_rot270_m_s16
__builtin_arm_mve_vhcaddq_rot90_m_s8
__builtin_arm_mve_vhsubq_m_n_s16
__builtin_arm_mve_vhsubq_m_u16
__builtin_arm_mve_vhsubq_n_u16
__builtin_arm_mve_vhsubq_x_n_s32
__builtin_arm_mve_vhsubq_x_s8
__builtin_arm_mve_vidupq_m_wb_u8
__builtin_arm_mve_vidupq_n_u8
__builtin_arm_mve_viwdupq_m_wb_u16
__builtin_arm_mve_viwdupq_wb_u32
__builtin_arm_mve_vld1q_f32
__builtin_arm_mve_vld1q_u8
__builtin_arm_mve_vld2q_f32
__builtin_arm_mve_vld4q_f16
__builtin_arm_mve_vldrbq_gather_offset_s32
__builtin_arm_mve_vldrbq_gather_offset_z_s16
__builtin_arm_mve_vldrbq_u8
__builtin_arm_mve_vldrdq_gather_base_s64
__builtin_arm_mve_vldrdq_gather_offset_u64
__builtin_arm_mve_vldrdq_gather_shifted_offset_z_u64
__builtin_arm_mve_vldrhq_gather_offset_z_u16
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_f16
__builtin_arm_mve_vldrhq_z_f16
__builtin_arm_mve_vldrhq_z_u32
__builtin_arm_mve_vldrwq_gather_base_z_s32
__builtin_arm_mve_vldrwq_gather_offset_z_u32
__builtin_arm_mve_vldrwq_z_f32
__builtin_arm_mve_vmaxaq_s16
__builtin_arm_mve_vmaxnmaq_f32
__builtin_arm_mve_vmaxnmq_f16
__builtin_arm_mve_vmaxnmvq_p_f32
__builtin_arm_mve_vmaxq_m_u32
__builtin_arm_mve_vmaxq_x_u16
__builtin_arm_mve_vmaxvq_p_u32
__builtin_arm_mve_vminaq_m_s32
__builtin_arm_mve_vminavq_p_s32
__builtin_arm_mve_vminnmavq_f32
__builtin_arm_mve_vminnmq_x_f16
__builtin_arm_mve_vminq_m_u16
__builtin_arm_mve_vminq_m_u8
__builtin_arm_mve_vminvq_p_s32
__builtin_arm_mve_vminvq_s8
__builtin_arm_mve_vmladavaq_p_u8
__builtin_arm_mve_vmladavaq_u8
__builtin_arm_mve_vmladavq_p_u16
__builtin_arm_mve_vmladavq_u32
__builtin_arm_mve_vmlaldavaq_p_s32
__builtin_arm_mve_vmlaldavaq_u16
__builtin_arm_mve_vmlaldavq_s32
__builtin_arm_mve_vmlaq_m_n_s16
__builtin_arm_mve_vmlaq_n_u16
__builtin_arm_mve_vmlasq_m_n_u16
__builtin_arm_mve_vmlsdavaq_p_s32
__builtin_arm_mve_vmlsdavaxq_p_s8
__builtin_arm_mve_vmlsdavq_s8
__builtin_arm_mve_vmlsdavxq_s16
__builtin_arm_mve_vmlsldavq_p_s32
__builtin_arm_mve_vmovlbq_m_s16
__builtin_arm_mve_vmovlbq_x_s8
__builtin_arm_mve_vmovltq_m_u8
__builtin_arm_mve_vmovnbq_m_s32
__builtin_arm_mve_vmovntq_m_s16
__builtin_arm_mve_vmulhq_m_s32
__builtin_arm_mve_vmulhq_s16
__builtin_arm_mve_vmulhq_x_u8
__builtin_arm_mve_vmullbq_int_s16
__builtin_arm_mve_vmullbq_int_x_u16
__builtin_arm_mve_vmullbq_poly_p8
__builtin_arm_mve_vmulltq_int_s32
__builtin_arm_mve_vmulltq_int_x_s8
__builtin_arm_mve_vmulltq_poly_x_p8
__builtin_arm_mve_vmulq_m_f16
__builtin_arm_mve_vmulq_m_u16
__builtin_arm_mve_vmulq_n_s8
__builtin_arm_mve_vmulq_u8
__builtin_arm_mve_vmulq_x_n_s32
__builtin_arm_mve_vmulq_x_u8
__builtin_arm_mve_vmvnq_m_s8
__builtin_arm_mve_vmvnq_s32
__builtin_arm_mve_vmvnq_x_n_s16
__builtin_arm_mve_vnegq_f32
__builtin_arm_mve_vnegq_s32
__builtin_arm_mve_vornq_m_f16
__builtin_arm_mve_vornq_m_u32
__builtin_arm_mve_vornq_x_s16
__builtin_arm_mve_vorrq_f32
__builtin_arm_mve_vorrq_m_s8
__builtin_arm_mve_vorrq_n_s16
__builtin_arm_mve_vorrq_x_s16
__builtin_arm_mve_vpselq_f16
__builtin_arm_mve_vpselq_u8
__builtin_arm_mve_vqabsq_s8
__builtin_arm_mve_vqaddq_m_u16
__builtin_arm_mve_vqaddq_n_u32
__builtin_arm_mve_vqdmladhq_m_s32
__builtin_arm_mve_vqdmladhxq_m_s16
__builtin_arm_mve_vqdmlahq_n_s8
__builtin_arm_mve_vqdmlashq_m_n_s16
__builtin_arm_mve_vqdmlsdhq_m_s16
__builtin_arm_mve_vqdmlsdhxq_s16
__builtin_arm_mve_vqdmulhq_m_s16
__builtin_arm_mve_vqdmullbq_m_n_s32
__builtin_arm_mve_vqdmulltq_m_n_s16
__builtin_arm_mve_vqmovnbq_m_s32
__builtin_arm_mve_vqmovnbq_m_u16
 - import offset: 0x%0*llx
name lookup table at offset 0x%llx parsing failed: %s
__builtin_arm_mve_vqdmulhq_s32
__builtin_arm_mve_vqdmullbq_m_n_s16
invalid range list entry at offset 0x%llx
8548
unknown rnglists encoding 0x%x at offset 0x%llx
0x%8.8llx: 
            
__builtin_arm_mve_vqrdmladhq_m_s16
musttail
gnu::no_instrument_function
__builtin_arm_mve_vqrdmlahq_n_s32
0x%08llx)
power4
<unresolved>
power5
__builtin_arm_mve_vqrshlq_m_n_u32
pwr5x
indexed (0x%x) loclist = 
__builtin_arm_mve_vqrshrntq_m_n_s16
 uses index 
__builtin_arm_mve_vqrshruntq_m_n_s16
    {0}: offset = {1:x8}, type_offset = {2:x8}, type_signature = {3:x16}
pwr7
      String name: %s, CU vector index: %d
parsing %s table at offset 0x%llx: %s
%s table at offset 0x%llx
__builtin_arm_mve_vqshrntq_m_n_u16
: Type Unit:
gnu::no_address_safety_analysis
INFO
__builtin_arm_mve_vqsubq_m_u32
__builtin_arm_mve_vqsubq_s16
__builtin_arm_mve_vreinterpretq_f16_s32
__builtin_arm_mve_vreinterpretq_f32_s16
, which is too large
DWARF unit at offset 0x%8.8llx
+spe
The length for this unit is too large for the .debug_info provided.
__builtin_arm_mve_vreinterpretq_u16_f16
gnu::no_sanitize_thread
__builtin_arm_mve_vreinterpretq_u32_s32
Skeleton compilation unit has children.
+reserve-x19
Verifying unit: 
Add directory to SYSTEM framework search path, absolute paths are relative to -isysroot
.debug_cu_index
__builtin_arm_mve_vrev64q_s32
DW_AT_stmt_list offset is beyond .debug_line bounds: 
not_tail_called
 that points to DIE with incompatible tag 
ilp32d
-imacros
__builtin_arm_mve_vrmulhq_m_u8
rv32imafdc
rv32imac
Section is too small to fit a section header.
RelatedClass
Add <dir> to system include search path, as if in %INCLUDE%
Bucket {0} of Name Index @ {1:x} contains invalid value {2}. Valid range is [0, {3}].
__builtin_arm_mve_vrshlq_m_n_u16
__builtin_arm_mve_vrshlq_s32
-Av8
Verifying .debug_names...
DW_SECT_MACRO
__builtin_arm_mve_vsbciq_u32
DW_SECT_MACINFO
unsupported compression type (
The end of the file was unexpectedly encountered
+soft-float
__builtin_arm_mve_vshllbq_x_n_s8
+transactional-execution
data in code info
code signing RDs data
LC_DYLD_INFO_ONLY
__builtin_arm_mve_vshlq_r_u8
LC_UUID command 
__builtin_arm_mve_vshlq_x_n_u8
LC_REEXPORT_DYLIB
AVX512F
LC_VERSION_MIN_IPHONEOS
__builtin_arm_mve_vshrq_n_u16
LC_ENCRYPTION_INFO_64 command 
LC_SUB_LIBRARY
__generic
more than one LC_ROUTINES and or LC_ROUTINES_64 command
__builtin_arm_mve_vst1q_u8
 for cmd value of: 
--include-with-prefix
__builtin_arm_mve_vstrbq_s32
-flto-jobs=
GENERIC_RELOC_LOCAL_SECTDIFF
znver2
X86_64_RELOC_UNSIGNED
opencl_unroll_hint
ARM_RELOC_VANILLA
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_u32
ARM_THUMB_RELOC_BR22
__builtin_arm_mve_vstrwq_scatter_offset_f32
clang::ownership_takes
ARM64_RELOC_TLVP_LOAD_PAGEOFF12
PPC_RELOC_LO14
PPC_RELOC_JBSR
__builtin_arm_mve_vsubq_x_n_f32
Mach-O arm64 (ILP32)
+lvi-cfi
Mach-O 64-bit ppc64
gsl::Pointer
gnu::regcall
armv5e-apple-darwin
__builtin_arm_mve_vabsq_m
armv6m
Record the codegen name for symbols
__builtin_arm_mve_vclzq_m
flags 
__builtin_arm_mve_vcmphiq
dylib ordinal of re-export 
__builtin_arm_mve_vcmulq_rot90_m
/fno-sanitize-address-vcasan-lib
-index-record-codegen-name
node is not an export node in export trie data at node: 0x
-bpD:0x20000000
__builtin_arm_mve_vhsubq
clang::release_shared_capability
clang::unlock_function
BIND_OPCODE_SET_DYLIB_SPECIAL_IMM not allowed in weak bind table for opcode at: 0x
__builtin_arm_mve_vld1q
__builtin_arm_mve_vldrhq_gather_shifted_offset
-bcdtors:all:0:s
__builtin_arm_mve_vqdmulhq_m_n_s8
section
at BIND_SUBOPCODE_THREADED_APPLY (incorrect ordinal table size, count of previous BIND_OPCODE_DO_BIND opcodes don't match count in previous BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB at BIND_SUBOPCODE_THREADED_APPLY at: 0x
att,intel
 bad segOffset, not 8-byte aligned
__builtin_arm_mve_vmlaldavaxq_p
missing preceding *_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB
bad chained fixups: unknown version: 
bad chained fixups: import #
-inline-asm=
bad chained fixups: segment start 
__builtin_arm_mve_vmvnq_x
 extends past section data
Contents
-internal-isystem
__swift5_builtin
__swift5_mpenum
__builtin_arm_mve_vqrdmulhq_m
struct nlist_64
clang::swiftasynccall
__builtin_arm_mve_vqshruntq
 LC_DYSYMTAB cmdsize too small
aix::Assembler
modtaboff field of LC_DYSYMTAB command 
Add directory to the internal system include search path; these are assumed to not be user-provided and are used to model system and standard headers' paths.
indirectsymoff field plus nindirectsyms field times sizeof(uint32_t) of LC_DYSYMTAB command 
__builtin_arm_mve_vrndnq_x
more than one 
__builtin_arm_mve_vrshlq
dyld bind info
/lib/ld-ananas.so
dyld weak bind info
Section
__builtin_arm_mve_vst4q
offset field of LC_NOTE command 
more than two LC_BUILD_VERSION load commands
ananas::Linker
cryptoff field of 
_Nullable_result
.offset field too small, not past the end of the 
Cannot use SPACK package 
__builtin_arm_cde_vcx1qa_m_u64
 due to multiple installations for the same version
 count not x86_THREAD_STATE64_COUNT for flavor number 
MatchingCType
 count not ARM_THREAD_STATE64_COUNT for flavor number 
__builtin_arm_cde_vcx2q_u8_u16
) load command 
/.hipVersion
malformed sleb128, extends past end
-iwithprefix
__builtin_arm_cde_vcx3q_u8_impl_s64
-shared
 filesize field in 
-iwithsysroot
ROCm installation search path
__flash2
avrxmega1
__AVR_AT90S2323__
__AVR_AT90S8515__
__AVR_ATtiny2313__
__AVR_ATtiny25__
__AVR_ATtiny461__
__AVR_AT43USB355__
__AVR_ATA5505__
__AVR_ATmega8A__
__AVR_ATmega48PA__
__AVR_ATmega8HVA__
__AVR_ATA5702M322__
__AVR_ATA8210__
__AVR_ATmega162__
__AVR_ATmega168P__
__AVR_ATmega32__
__AVR_ATmega325P__
__AVR_ATmega328__
__AVR_ATmega3290PA__
__AVR_ATmega644P__
__AVR_ATmega6450A__
__AVR_ATmega64RFR2__
__AVR_AT90CAN64__
__AVR_ATmega32M1__
__AVR_AT000__
__AVR_ATmega1284P__
__AVR_ATmega2564RFR2__
__AVR_ATxmega32C3__
__AVR_ATxmega64A4U__
__AVR_ATxmega64D3__
__AVR_ATxmega192A3U__
__AVR_ATxmega256C3__
__AVR_ATtiny9__
__AVR_ATtiny202__
__AVR_ATtiny1607__
__AVR_ATtiny416__
__AVR_ATtiny1626__
__AVR_ATmega1609__
-fno-sanitize-thread-atomics
probe
__CSKY_VDSPV2__
fr11
fr18
fr27
vr11
vr17
vr27
--libomptarget-amdgcn-bc-path=
__HEXAGON_V62__
__HEXAGON_V67__
hexagonv69
audio
r3:2
r23:22
c11:10
c29:28
p3:0
pktcounthi
v3:2
v21:20
v31:30
__builtin_brev_ldd
v*Us*CUs*iC
__builtin_circ_ldh
__builtin_circ_ldub
c*Cc*iiC
__builtin_circ_sthhi
__builtin_HEXAGON_L2_loadrd_pci
__builtin_HEXAGON_L2_loadrb_pcr
vv*IiiLLivC*
vv*iLLivC*
__builtin_HEXAGON_V6_vmaskedstorentq
__builtin_HEXAGON_V6_vmaskedstorentnq_128B
__builtin_HEXAGON_V6_vrmpyub_rtt
__builtin_HEXAGON_A2_abssat
__builtin_HEXAGON_A2_addh_h16_sat_ll
__builtin_HEXAGON_A2_addi
__builtin_HEXAGON_A2_combine_hh
LLiii
__builtin_HEXAGON_A2_minu
__builtin_HEXAGON_A2_notp
__builtin_HEXAGON_A2_satuh
__builtin_HEXAGON_A2_subh_h16_sat_hl
iIii
__builtin_HEXAGON_A2_svaddhs
__builtin_HEXAGON_A2_tfrih
__builtin_HEXAGON_A2_vaddubs
__builtin_HEXAGON_A2_vavghr
__builtin_HEXAGON_A2_vcmpbeq
__builtin_HEXAGON_A2_vcmpwgt
__builtin_HEXAGON_A2_vminb
__builtin_HEXAGON_A2_vminw
__builtin_HEXAGON_A2_vrsadub_acc
__builtin_HEXAGON_A2_vsubw
__builtin_HEXAGON_A4_bitspliti
__builtin_HEXAGON_A4_cmpbgt
__builtin_HEXAGON_A4_combineir
__builtin_HEXAGON_A4_orn
__builtin_HEXAGON_A4_round_rr_sat
__builtin_HEXAGON_A4_vcmpbeqi
__builtin_HEXAGON_A4_vrmaxh
__builtin_HEXAGON_A4_vrminuw
__builtin_HEXAGON_C2_bitsset
__builtin_HEXAGON_C2_cmpgt
__builtin_HEXAGON_C2_muxii
__builtin_HEXAGON_C2_or
__builtin_HEXAGON_C4_and_and
__builtin_HEXAGON_C4_cmpltei
__builtin_HEXAGON_C4_or_andn
__builtin_HEXAGON_F2_conv_df2d
__builtin_HEXAGON_F2_conv_df2w_chop
__builtin_HEXAGON_F2_conv_sf2ud
__builtin_HEXAGON_F2_conv_w2df
__builtin_HEXAGON_F2_dfcmpgt
__builtin_HEXAGON_F2_sfcmpgt
__builtin_HEXAGON_F2_sfmax
LLiLLiii
__builtin_HEXAGON_M2_cmpyrs_s1
__builtin_HEXAGON_M2_cmpysc_s1
__builtin_HEXAGON_M2_dpmpyuu_nac_s0
__builtin_HEXAGON_M2_maci
__builtin_HEXAGON_M2_mmacls_rs1
__builtin_HEXAGON_M2_mmacuhs_s0
__builtin_HEXAGON_M2_mmpyl_rs1
__builtin_HEXAGON_M2_mmpyul_rs0
__builtin_HEXAGON_M2_mpy_acc_lh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s1
__builtin_HEXAGON_M2_mpy_lh_s1
__builtin_HEXAGON_M2_mpy_nac_lh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s1
__builtin_HEXAGON_M2_mpy_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_sat_lh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s0
__builtin_HEXAGON_M2_mpyd_acc_hl_s0
__builtin_HEXAGON_M2_mpyd_hh_s0
__builtin_HEXAGON_M2_mpyd_nac_hl_s0
__builtin_HEXAGON_M2_mpyd_rnd_hh_s1
__builtin_HEXAGON_M2_mpysu_up
__builtin_HEXAGON_M2_mpyu_acc_lh_s0
__builtin_HEXAGON_M2_mpyu_ll_s1
__builtin_HEXAGON_M2_mpyu_nac_ll_s0
__builtin_HEXAGON_M2_mpyud_acc_ll_s0
__builtin_HEXAGON_M2_mpyud_lh_s0
__builtin_HEXAGON_M2_mpyud_nac_ll_s0
__builtin_HEXAGON_M2_vabsdiffw
__builtin_HEXAGON_M2_vdmpyrs_s0
__builtin_HEXAGON_M2_vdmpys_s1
__builtin_HEXAGON_M2_vmpy2s_s1
__builtin_HEXAGON_M2_vrcmaci_s0c
LLiLLii
__builtin_HEXAGON_M4_and_andn
__builtin_HEXAGON_M4_mpyri_addr
__builtin_HEXAGON_M4_or_and
__builtin_HEXAGON_M4_vrmpyeh_acc_s1
__builtin_HEXAGON_M4_vrmpyoh_s0
__builtin_HEXAGON_M5_vmpybuu
LLiLLiUIi
__builtin_HEXAGON_S2_asl_i_r_and
__builtin_HEXAGON_S2_asl_i_vw
__builtin_HEXAGON_S2_asl_r_r_nac
__builtin_HEXAGON_S2_asr_i_p_and
__builtin_HEXAGON_S2_asr_i_r_or
__builtin_HEXAGON_S2_asr_i_vh
__builtin_HEXAGON_S2_asr_r_r_or
__builtin_HEXAGON_S2_cl0
__builtin_HEXAGON_S2_ct0
iiUIiUIi
LLiLLiLLiUIiUIi
__builtin_HEXAGON_S2_lsl_r_p_nac
__builtin_HEXAGON_S2_lsl_r_vw
__builtin_HEXAGON_S2_lsr_i_p_or
__builtin_HEXAGON_S2_lsr_r_p_acc
__builtin_HEXAGON_S2_lsr_r_r_and
__builtin_HEXAGON_S2_shuffeb
__builtin_HEXAGON_S2_tableidxb_goodsyntax
__builtin_HEXAGON_S2_vcnegh
__builtin_HEXAGON_S2_vsathub
__builtin_HEXAGON_S2_vsplicerb
__builtin_HEXAGON_S2_vsxtbh
__builtin_HEXAGON_S4_clbpnorm
__builtin_HEXAGON_S4_ntstbit_r
__builtin_HEXAGON_S4_subi_lsr_ri
__builtin_HEXAGON_S4_vxaddsubhr
__builtin_HEXAGON_Y2_dccleaninva
vv*LLi
__builtin_HEXAGON_S6_rol_i_r_acc
__builtin_HEXAGON_M6_vabsdiffb
__builtin_HEXAGON_S2_mask
v67|v68|v69
__builtin_HEXAGON_M7_dcmpyiwc_acc
__builtin_HEXAGON_M7_vdmpy_acc
v68|v69
iV16ii
__builtin_HEXAGON_V6_lvsplatw
__builtin_HEXAGON_V6_pred_and
__builtin_HEXAGON_V6_pred_or_n
__builtin_HEXAGON_V6_pred_xor_128B
__builtin_HEXAGON_V6_vabsdiffh
__builtin_HEXAGON_V6_vabsdiffuh
__builtin_HEXAGON_V6_vabsw
__builtin_HEXAGON_V6_vaddb_dv_128B
__builtin_HEXAGON_V6_vaddh_128B
__builtin_HEXAGON_V6_vaddhq
__builtin_HEXAGON_V6_vaddubh_128B
__builtin_HEXAGON_V6_vadduhsat_dv
__builtin_HEXAGON_V6_vaddwnq_128B
__builtin_HEXAGON_V6_vaddwsat_dv_128B
__builtin_HEXAGON_V6_vand_128B
__builtin_HEXAGON_V6_vandqrt_acc_128B
V128bV128bV32ii
__builtin_HEXAGON_V6_vaslh_128B
__builtin_HEXAGON_V6_vasrhbrndsat_128B
__builtin_HEXAGON_V6_vasrw
__builtin_HEXAGON_V6_vasrwhsat_128B
__builtin_HEXAGON_V6_vassign_128B
__builtin_HEXAGON_V6_vavgubrnd
__builtin_HEXAGON_V6_vavgw_128B
__builtin_HEXAGON_V6_vd0
__builtin_HEXAGON_V6_vdealb_128B
__builtin_HEXAGON_V6_vdmpybus
__builtin_HEXAGON_V6_vdmpybus_dv_acc
__builtin_HEXAGON_V6_vdmpyhb_dv_acc
__builtin_HEXAGON_V6_vdmpyhisat_acc
__builtin_HEXAGON_V6_vdmpyhsuisat_acc
__builtin_HEXAGON_V6_vdmpyhvsat_128B
__builtin_HEXAGON_V6_veqb
__builtin_HEXAGON_V6_veqb_and
__builtin_HEXAGON_V6_veqh_or
__builtin_HEXAGON_V6_veqw_and_128B
__builtin_HEXAGON_V6_vgtb_or
__builtin_HEXAGON_V6_vgth_and
__builtin_HEXAGON_V6_vgtub_or
__builtin_HEXAGON_V6_vgtuh_and_128B
__builtin_HEXAGON_V6_vgtuw_or
__builtin_HEXAGON_V6_vgtw_128B
__builtin_HEXAGON_V6_vlalignbi
__builtin_HEXAGON_V6_vlsrw_128B
__builtin_HEXAGON_V6_vlutvwh
__builtin_HEXAGON_V6_vmaxh
__builtin_HEXAGON_V6_vminub
__builtin_HEXAGON_V6_vmpabus_128B
__builtin_HEXAGON_V6_vmpahb_acc
__builtin_HEXAGON_V6_vmpybus
__builtin_HEXAGON_V6_vmpybv
__builtin_HEXAGON_V6_vmpyh_128B
__builtin_HEXAGON_V6_vmpyhus_acc
__builtin_HEXAGON_V6_vmpyhvsrs
__builtin_HEXAGON_V6_vmpyih
__builtin_HEXAGON_V6_vmpyihb_acc_128B
__builtin_HEXAGON_V6_vmpyiwh_acc
__builtin_HEXAGON_V6_vmpyowh_rnd_128B
__builtin_HEXAGON_V6_vmpyubv_acc
__builtin_HEXAGON_V6_vmpyuhv_128B
__builtin_HEXAGON_V6_vnavgw
__builtin_HEXAGON_V6_vnot
__builtin_HEXAGON_V6_vpackhub_sat
__builtin_HEXAGON_V6_vpackwh_sat_128B
__builtin_HEXAGON_V6_vrmpybus_acc
__builtin_HEXAGON_V6_vrmpybusi_128B
__builtin_HEXAGON_V6_vrmpybv_acc
__builtin_HEXAGON_V6_vrmpyubi_128B
__builtin_HEXAGON_V6_vroundhb
__builtin_HEXAGON_V6_vroundwuh
__builtin_HEXAGON_V6_vsb
__builtin_HEXAGON_V6_vshufeh_128B
__builtin_HEXAGON_V6_vshuffvdd
__builtin_HEXAGON_V6_vshufoeh_128B
__builtin_HEXAGON_V6_vsubh
__builtin_HEXAGON_V6_vsubhq_128B
__builtin_HEXAGON_V6_vsububsat
__builtin_HEXAGON_V6_vsubuhsat_dv
__builtin_HEXAGON_V6_vsubwq
V32iV64bV16iV16i
__builtin_HEXAGON_V6_vtmpybus_acc
__builtin_HEXAGON_V6_vtmpyhb_128B
__builtin_HEXAGON_V6_vunpackub
__builtin_HEXAGON_V6_vzb_128B
__builtin_HEXAGON_V6_pred_scalar2v2_128B
__builtin_HEXAGON_V6_vaddbsat_128B
__builtin_HEXAGON_V6_vaddclbw_128B
__builtin_HEXAGON_V6_vadduhw_acc
__builtin_HEXAGON_V6_vandnqrt_acc_128B
__builtin_HEXAGON_V6_vandvqv
__builtin_HEXAGON_V6_vlutvvb_nm_128B
__builtin_HEXAGON_V6_vlutvwh_nm
V64iV32iV32iUIi
__builtin_HEXAGON_V6_vmpauhb_128B
__builtin_HEXAGON_V6_vmpyowh_64_acc_128B
__builtin_HEXAGON_V6_vsubbsat
__builtin_HEXAGON_V6_vsubuwsat_128B
hvxv65|hvxv66|hvxv67|hvxv68|hvxv69
__builtin_HEXAGON_V6_vasruwuhsat
__builtin_HEXAGON_V6_vavguw_128B
vv*iiV32i
__builtin_HEXAGON_V6_vgathermhw_128B
__builtin_HEXAGON_V6_vlut4
__builtin_HEXAGON_V6_vmpabuu_acc_128B
__builtin_HEXAGON_V6_vmpyh_acc
__builtin_HEXAGON_V6_vmpyuhe_acc_128B
__builtin_HEXAGON_V6_vscattermh
vV64biiV16iV16i
__builtin_HEXAGON_V6_vscattermhwq
__builtin_HEXAGON_V6_vscattermw_add
__builtin_HEXAGON_V6_vasr_into_128B
__builtin_HEXAGON_V6_v6mpyhubs10_128B
__builtin_HEXAGON_V6_vabs_hf
Allow use of CRC instructions (ARM/Mips only)
V16iV16iV16iV64b
parent function id not introduced by .cv_func_id or .cv_inline_site_id
__builtin_HEXAGON_V6_vrotr
fdatasync
Symbol name with unsupported characters
    (none)
__builtin_HEXAGON_V6_vadd_sf_128B
scanf
Specify CU wavefront execution mode (AMDGPU only)
export
__builtin_HEXAGON_V6_vfneg_sf_128B
attiny1606
self
NumIncluded
__builtin_HEXAGON_V6_vmpy_qf32_sf_128B
-fdebug-pass-structure
__builtin_HEXAGON_V6_vmpy_sf_hf_acc_128B
__lanai__
$r12
$r20
$r27
$fa6
$ft4
$ft14
$fs5
march=rv64imafdc
__mc68010
mc68040
Do not emit code to make initialization of local statics thread safe
__builtin_mips_addq_s_ph
__builtin_mips_msubu
V2sV2s
__builtin_mips_precrq_rs_ph_w
__builtin_mips_preceu_ph_qbl
__builtin_mips_shrl_qb
V2sV4ScV2s
LLiLLiV2sV2s
LLiLLiV4ScV4Sc
__builtin_mips_dpaq_sa_l_w
__builtin_mips_cmp_eq_ph
__builtin_mips_extr_r_w
__builtin_mips_repl_qb
__builtin_mips_pick_ph
__builtin_mips_addqh_w
__builtin_mips_balign
__builtin_mips_dpsx_w_ph
__builtin_mips_mulq_s_ph
__builtin_mips_shrl_ph
__builtin_mips_subuh_qb
V2SLLiV2SLLiV2SLLi
__builtin_msa_adds_s_b
V2ULLiV2ULLiV2ULLi
__builtin_msa_addv_d
V2LLiV2LLiIUi
__builtin_msa_asub_s_w
__builtin_msa_ave_u_b
__builtin_msa_aver_s_d
__builtin_msa_bclri_b
V4UiV4UiIUi
V16UcV16UcV16UcIUi
__builtin_msa_binsr_b
__builtin_msa_bmnzi_b
__builtin_msa_bneg_d
iV4Ui
__builtin_msa_bset_h
__builtin_msa_bz_w
__builtin_msa_ceq_w
__builtin_msa_cle_s_b
V8SsV8UsV8Us
__builtin_msa_clei_u_b
__builtin_msa_clei_u_d
__builtin_msa_clti_s_b
__builtin_msa_clti_u_d
__builtin_msa_copy_u_b
__builtin_msa_copy_u_w
__builtin_msa_div_u_w
V2SLLiV4SiV4Si
__builtin_msa_dpadd_s_w
__builtin_msa_dpadd_u_w
__builtin_msa_fadd_w
V2LLiV2dV2d
__builtin_msa_fclt_w
__builtin_msa_fcor_d
__builtin_msa_fdiv_w
V4fV4fV4i
__builtin_msa_ffint_s_w
__builtin_msa_ffint_u_d
__builtin_msa_fill_h
V4fV4f
__builtin_msa_fmax_a_w
__builtin_msa_fmin_d
__builtin_msa_fsaf_w
__builtin_msa_fslt_d
__builtin_msa_fsueq_w
__builtin_msa_fsun_w
__builtin_msa_ftint_u_d
__builtin_msa_ftrunc_s_d
__builtin_msa_hsub_s_h
__builtin_msa_hsub_u_d
__builtin_msa_ilvod_w
V16ScV16ScIUii
__builtin_msa_insve_h
__builtin_msa_ld_b
__builtin_msa_ldi_b
V2LLiIi
__builtin_msa_maddv_h
__builtin_msa_max_a_b
__builtin_msa_maxi_s_b
V2SLLiV2SLLiIi
__builtin_msa_min_a_b
__builtin_msa_min_s_w
__builtin_msa_mini_u_b
__builtin_msa_mod_s_d
__builtin_msa_msubr_q_h
__builtin_msa_msubv_d
V8SsV8Ss
__builtin_msa_nlzc_w
__builtin_msa_pckev_w
__builtin_msa_pcnt_b
__builtin_msa_sat_s_d
__builtin_msa_shf_h
V2LLiV2LLiV2LLiUi
V16cV16cV16cIUi
__builtin_msa_slli_d
__builtin_msa_splat_d
__builtin_msa_sra_d
__builtin_msa_srar_h
__builtin_msa_srl_d
__builtin_msa_srlr_w
vV8Ssv*Ii
__builtin_msa_str_d
V16UcV16UcV16Sc
__builtin_msa_subsuu_s_b
__builtin_msa_subvi_h
V8sV8sV8sV8s
MIPSEB
_MIPS_ISA
__mips_n32
__mips_abicalls
__mips_dsp
_MIPS_SZLONG
-fmodules-cache-path=
__nvvm_read_ptx_sreg_ctaid_z
__nvvm_read_ptx_sreg_nwarpid
__nvvm_read_ptx_sreg_lanemask_ge
__nvvm_prmt
__nvvm_fmin_xorsign_abs_f16
__nvvm_fmin_xorsign_abs_f16x2
__nvvm_fmin_nan_xorsign_abs_bf16
__nvvm_fmin_ftz_nan_f
__nvvm_fmax_f16
__nvvm_fmax_nan_f16x2
__nvvm_fmax_nan_bf16
__nvvm_fmax_nan_f
__nvvm_fmax_ftz_nan_xorsign_abs_f
__nvvm_mul_rm_f
__nvvm_mul24_i
__nvvm_div_rm_f
__nvvm_div_rp_d
__nvvm_fabs_f
__nvvm_trunc_d
__nvvm_ex2_approx_f16x2
__nvvm_sin_approx_ftz_f
__nvvm_fma_rn_f16x2
__nvvm_fma_rn_bf16
__nvvm_fma_rz_f
__nvvm_fma_rz_d
__nvvm_rcp_rp_f
__nvvm_sqrt_rn_ftz_f
__nvvm_sqrt_approx_f
__nvvm_sqrt_rp_d
__nvvm_add_rn_d
__nvvm_d2f_rz
__nvvm_d2ui_rn
__nvvm_i2d_rz
__nvvm_f2i_rz_ftz
__nvvm_f2ui_rn
__nvvm_i2f_rm
__nvvm_ui2f_rp
__nvvm_f2ll_rp_ftz
__nvvm_f2ull_rm_ftz
ULLid
__nvvm_ll2f_rm
__nvvm_ll2d_rp
__nvvm_ff2f16x2_rn_relu
__nvvm_f2bf16_rn
ptx60|ptx61|ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74|ptx75|ptx76|ptx77|ptx78
__nvvm_barrier_sync
__nvvm_shfl_idx_i32
__nvvm_shfl_sync_up_i32
__nvvm_match_any_sync_i32
__nvvm_redux_sync_min
__nvvm_redux_sync_xor
__nvvm_mbarrier_inval_shared
WiWi*i
__nvvm_mbarrier_test_wait_shared
vUc*Uczi
V4fiiiiii
__builtin_ptx_write_image2Df_
__builtin_ptx_get_image_channel_data_typei_
__nvvm_atom_cta_add_gen_i
__nvvm_atom_cta_add_gen_f
__nvvm_atom_sub_gen_l
__nvvm_atom_cta_xchg_gen_ll
UiUiD*Ui
__nvvm_atom_max_gen_ll
__nvvm_atom_min_gen_i
__nvvm_atom_min_gen_ul
__nvvm_atom_sys_min_gen_ll
__nvvm_atom_cta_and_gen_i
__nvvm_atom_sys_and_gen_ll
__nvvm_atom_sys_or_gen_ll
__nvvm_atom_sys_xor_gen_l
__nvvm_atom_cta_cas_gen_l
__nvvm_compiler_warn
__nvvm_ldg_ll
UcUcC*
__nvvm_ldg_c2
E4sE4sC*
__nvvm_ldg_uc4
__nvvm_ldg_ui2
__nvvm_ldg_d2
__hmma_m16n16k16_ld_a
vf*f*UiIi
__hmma_m32n8k16_ld_c_f32
__hmma_m16n16k16_mma_f32f16
__hmma_m32n8k16_mma_f32f16
__bmma_m8n8k128_ld_b_b1
__bmma_m8n8k128_st_c_i32
__imma_m32n8k16_ld_a_s8
__imma_m32n8k16_st_c_i32
__imma_m8n8k32_ld_a_s4
__imma_m8n8k32_ld_c
__mma_bf16_m16n16k16_ld_b
__mma_bf16_m32n8k16_mma_f32
__nvvm_cp_async_mbarrier_arrive_noinc_shared
__nvvm_cp_async_commit_group
e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64
vsuxseg6ei16_v
__ENVIRONMENT_OS_VERSION_MIN_REQUIRED__
__MINGW64__
_M_FP_FAST
_MSC_BUILD
_KERNEL_MODE
vsuxseg4ei64_v
__builtin_ppc_iospace_lwsync
__builtin_ppc_dcbt
__builtin_ppc_frip
__builtin_ppc_frsqrtes
__builtin_ppc_fetch_and_and
__builtin_ppc_ldarx
__builtin_ppc_sthcx
viiIUi
__builtin_ppc_fctiwz
__builtin_ppc_alignx
__builtin_ppc_swdivs
LLiLiLi
__builtin_ppc_rlwnm
__builtin_ppc_load2r
__builtin_ppc_store8r
__builtin_ppc_mtfsf
__builtin_ppc_fnmadds
__builtin_ppc_fres
__builtin_ppc_addex
ffff.
__builtin_altivec_vaddsbs
__builtin_altivec_vaddeuqm
__builtin_altivec_vsubsbs
__builtin_altivec_vsubcuq
__builtin_altivec_vavguh
V4fV4SiIi
__builtin_altivec_dstt
__builtin_altivec_lvxl
__builtin_altivec_lvsr
__builtin_altivec_vmsummbm
__builtin_altivec_vmuleuh
__builtin_altivec_vmulosh
__builtin_altivec_vmsumcud
__builtin_altivec_vpkpx
V8UsV4SiV4Si
__builtin_altivec_vpkudum
vV8sLiv*
__builtin_altivec_vcmpequw
V16cV16ScV16Sc
__builtin_altivec_vcmpgtsw
V1LLLiV1ULLLiV1ULLLi
iiV1ULLLiV1LLLi
__builtin_altivec_vmaxsd
__builtin_altivec_vminsh
__builtin_altivec_vrefp
V4iV4iV4Ui
__builtin_altivec_vsr
__builtin_altivec_vsum4ubs
__builtin_altivec_vupkhpx
__builtin_altivec_vupkhsw
iiV8sV8s
__builtin_altivec_vcmpneh_p
__builtin_altivec_vcmpgtuh_p
__builtin_altivec_vcmpgtsd_p
__builtin_altivec_crypto_vsbox
V2ULLiV2ULLiIiIi
__builtin_altivec_vclzb
__builtin_altivec_vclzd
SiV16Uc
__builtin_altivec_vpopcnth
__builtin_altivec_vrldmi
V2SLLiV16Sc
UiV16Uc
__builtin_altivec_vdivesw
__builtin_altivec_vmulhsd
__builtin_altivec_vexpandbm
V16UcULLi
__builtin_altivec_mtvsrqm
__builtin_altivec_vstribr_p
__builtin_altivec_vcfuged
__builtin_altivec_vinsblx
V4UiV4UiUiUi
V8UsV8UsUiV8Us
__builtin_altivec_vinsw
__builtin_altivec_vextduhvlx
V2ULLiV2ULLiV2ULLiUi
__builtin_vsx_lxvw4x_be
vV2dSLLivC*
V16UcCc*Ii
__builtin_vsx_xvminsp
iiV2dV2d
__builtin_vsx_xvcmpgedp_p
__builtin_vsx_xvrdpiz
__builtin_vsx_xvmulsp
__builtin_vsx_xvsqrtdp
__builtin_vsx_xvabsdp
V2dV2ULLiV2ULLi
__builtin_vsx_xvcvdpsxws
__builtin_vsx_xvcvuxwdp
__builtin_vsx_xvcvuxdsp
__builtin_vsx_xvtstdcsp
__builtin_vsx_xxeval
iV2d
__builtin_vsx_xxblendvh
__builtin_fmaf128_round_to_odd
LLdLLdULLi
__builtin_tabortdci
__builtin_tcheck
vLUi
__builtin_divweu
__builtin_unpack_longdouble
__builtin_darn_32
__builtin_mma_stxvp
__builtin_vsx_assemble_pair
__builtin_mma_xvi16ger2
__builtin_mma_pmxvi4ger8
__builtin_mma_xvi16ger2spp
__builtin_mma_xvf16ger2pn
__builtin_mma_xvf32gernp
__builtin_mma_xvf64gerpp
__builtin_mma_xvbf16ger2pp
__builtin_mma_pmxvbf16ger2nn
+isa-v206-instructions
+quadword-atomics
_CALL_ELF
__LONGDOUBLE64
_ARCH_PWR4
_ARCH_PWR8
__NO_FPRS__
__ROP_PROTECT__
-mfloat128
-mprefixed
__poppar4
__sync
__compare_and_swap
__fetch_and_or
__stwcx
__fcfid
__cmprb
__mulhw
__store2r
__mtfsf
__fre
__vcipher
__divwe
__cntlz4
__cnttz8
__darn_raw
__popcnt4
__rotatel8
__mtmsr
__frin
__fsqrt
__compare_exp_eq
__builtin_minfe
-mdirect-move
vs14
vs23
vs29
vs39
vs46
vs55
vs56
Enable support for the C++ Modules TS
__riscv_float_abi_soft
__riscv_muldiv
zve32x
__builtin_rvv_vadd_vv_tama
__builtin_rvv_vluxei8_v_tumu
__builtin_rvv_vlse32_v_tuma
__builtin_rvv_vloxseg4ei8_v_ta
__builtin_rvv_vloxseg5ei8_v_ta
__builtin_rvv_vloxseg6ei8_v_tama
__builtin_rvv_vloxseg7ei8_v_tamu
__builtin_rvv_vloxseg8ei8_v_tumu
__builtin_rvv_vloxseg2ei16_v_tu
__builtin_rvv_vloxseg4ei16_v_ta
__builtin_rvv_vloxseg5ei16_v_tu
__builtin_rvv_vloxseg6ei16_v_tama
__builtin_rvv_vloxseg7ei16_v_tama
__builtin_rvv_vloxseg2ei32_v_tumu
__builtin_rvv_vloxseg3ei32_v_tuma
__builtin_rvv_vloxseg5ei32_v_ta
__builtin_rvv_vloxseg5ei32_v_tamu
__builtin_rvv_vloxseg7ei32_v_tama
__builtin_rvv_vloxseg8ei32_v_tamu
__builtin_rvv_vloxseg3ei64_v_ta
__builtin_rvv_vloxseg4ei64_v_ta
__builtin_rvv_vloxseg5ei64_v_tama
__builtin_rvv_vloxseg6ei64_v_tamu
__builtin_rvv_vloxseg8ei64_v_tumu
__builtin_rvv_vloxseg2ei8_v_ta
__builtin_rvv_vluxei64_v_tama
__builtin_rvv_vluxei16_v_tu
__builtin_rvv_vsseg6e8_v
__builtin_rvv_vsseg2e16_v
__builtin_rvv_vluxei32_v_ta
__builtin_rvv_vsseg7e16_v_m
__builtin_rvv_vsseg5e32_v
__builtin_rvv_vsseg7e32_v_m
__builtin_rvv_vsseg6e64_v
__builtin_rvv_vssseg3e8_v_m
__builtin_rvv_vssseg8e8_v
__builtin_rvv_vssseg4e16_v
__builtin_rvv_vssseg2e32_v
__builtin_rvv_vssseg5e32_v_m
__builtin_rvv_vssseg3e64_v
__builtin_rvv_vssseg5e64_v
__builtin_rvv_vsuxseg5ei8_v
__builtin_rvv_vsuxseg8ei8_v_m
__builtin_rvv_vsuxseg6ei16_v
__builtin_rvv_vsuxseg2ei32_v
__builtin_rvv_vsuxseg7ei32_v
__builtin_rvv_vsuxseg3ei64_v_m
__builtin_rvv_vsuxseg8ei64_v
__builtin_rvv_vloxei8_v_tu
__builtin_rvv_vloxei32_v_ta
__builtin_rvv_vsoxseg2ei8_v_m
__builtin_rvv_vsoxseg7ei8_v
__builtin_rvv_vloxei64_v_tama
__builtin_rvv_vsoxseg5ei16_v
__builtin_rvv_vsoxseg8ei16_v_m
__builtin_rvv_vsoxseg6ei32_v
__builtin_rvv_vsoxseg7ei32_v_m
__builtin_rvv_vsoxseg7ei64_v
__builtin_rvv_vadd_vx_tuma
__builtin_rvv_vsub_vx_ta
__builtin_rvv_vrsub_vx_ta
__builtin_rvv_vwaddu_vx_tama
__builtin_rvv_vwsubu_vv_tamu
__builtin_rvv_vwadd_vv_tumu
__builtin_rvv_vwadd_vx_tu
__builtin_rvv_vwsub_vx_ta
__builtin_rvv_vwaddu_wx_tu
__builtin_rvv_vwsubu_wv_tama
__builtin_rvv_vwsubu_wx_tama
__builtin_rvv_vwadd_wx_tumu
__builtin_rvv_vwsub_wv_tuma
__builtin_rvv_vwcvt_x_x_v_ta
__builtin_rvv_vwcvt_x_x_v_tama
__builtin_rvv_vmadc_vv
__builtin_rvv_vand_vv_tu
__builtin_rvv_vand_vx_tama
__builtin_rvv_vxor_vv_tama
__builtin_rvv_vor_vv_tumu
__builtin_rvv_vor_vx_tuma
__builtin_rvv_vsll_vx_ta
__builtin_rvv_vsll_vx_tamu
__builtin_rvv_vsrl_vx_tama
__builtin_rvv_vsra_vv_tamu
__builtin_rvv_vnsrl_wv_tumu
__builtin_rvv_vnsrl_wx_tumu
__builtin_rvv_vnsra_wx_ta
__builtin_rvv_vncvt_x_x_w_tu
__builtin_rvv_vmseq_vx
__builtin_rvv_vmseq_vx_ma
__builtin_rvv_vmsltu_vx
__builtin_rvv_vmslt_vv_mu
__builtin_rvv_vmsleu_vx
__builtin_rvv_vmsle_vv_ma
__builtin_rvv_vmsgtu_vx
__builtin_rvv_vmsgt_vv_mu
__builtin_rvv_vwaddu_wv_ta
__builtin_rvv_vwaddu_wv_tamu
__builtin_rvv_vmsge_vv_ma
__builtin_rvv_vminu_vv_tu
__builtin_rvv_vminu_vx_tama
__builtin_rvv_vmin_vv_tama
__builtin_rvv_vmaxu_vv_tumu
__builtin_rvv_vmaxu_vx_tuma
__builtin_rvv_vmax_vx_ta
__builtin_rvv_vmax_vx_tama
__builtin_rvv_vmul_vx_tama
__builtin_rvv_vmulh_vv_tamu
__builtin_rvv_vmulhu_vv_tumu
__builtin_rvv_vmulhu_vx_tumu
__builtin_rvv_vsuxei32_v
__builtin_rvv_vmulhsu_vx_tamu
__builtin_rvv_vdivu_vx_tumu
__builtin_rvv_vdiv_vv_tu
__builtin_rvv_vremu_vv_ta
__builtin_rvv_vremu_vx_tu
__builtin_rvv_vrem_vv_tama
__builtin_rvv_vrem_vx_tama
__builtin_rvv_vwmul_vx_tumu
__builtin_rvv_vwmulu_vv_tuma
__builtin_rvv_vwmulsu_vv_ta
__builtin_rvv_vwmulsu_vv_tuma
__builtin_rvv_vmacc_vv_tama
__builtin_rvv_vmacc_vx_tamu
__builtin_rvv_vnmsac_vx_tu
__builtin_rvv_vmadd_vv_tu
__builtin_rvv_vmadd_vx_tama
__builtin_rvv_vnmsub_vv_tamu
__builtin_rvv_vwmaccu_vv_tumu
__builtin_rvv_vwmaccu_vx_ta
__builtin_rvv_vwmacc_vx_tu
__builtin_rvv_vwmaccsu_vv_ta
__builtin_rvv_vwmaccsu_vx_tama
__builtin_rvv_vwmaccus_vx_tama
__builtin_rvv_vsaddu_vv_ta
__builtin_rvv_vsaddu_vx_tu
__builtin_rvv_vsadd_vv_tama
__builtin_rvv_vsadd_vx_tumu
__builtin_rvv_vssubu_vx_tumu
__builtin_rvv_vssub_vv_tuma
__builtin_rvv_vaaddu_vv_ta
__builtin_rvv_vaaddu_vx_ta
__builtin_rvv_vaadd_vv_tama
__builtin_rvv_vaadd_vx_tamu
__builtin_rvv_vasubu_vx_tumu
__builtin_rvv_vasub_vv_tu
__builtin_rvv_vsmul_vv_ta
__builtin_rvv_vsmul_vx_tu
__builtin_rvv_vssrl_vv_tama
__builtin_rvv_vssrl_vx_tama
__builtin_rvv_vssra_vx_tumu
__builtin_rvv_vnclipu_wv_tuma
__builtin_rvv_vnclip_wv_ta
__builtin_rvv_vnclip_wv_tumu
__builtin_rvv_vfadd_vv_tama
__builtin_rvv_vfadd_vf_tamu
__builtin_rvv_vfsub_vf_tumu
__builtin_rvv_vfrsub_vf_tumu
__builtin_rvv_vfwadd_vf_ta
__builtin_rvv_vfwsub_vv_tu
__builtin_rvv_vfwsub_vf_tumu
__builtin_rvv_vfwadd_wv_tu
__builtin_rvv_vfwsub_wv_ta
__builtin_rvv_vfwsub_wf_tu
__builtin_rvv_vfmul_vv_tama
__builtin_rvv_vfmul_vf_tama
__builtin_rvv_vfdiv_vf_tumu
__builtin_rvv_vfrdiv_vf_tuma
__builtin_rvv_vfwmul_vf_ta
__builtin_rvv_vfwmul_vf_tama
__builtin_rvv_vfmacc_vf_tama
__builtin_rvv_vfnmacc_vv_tamu
__builtin_rvv_vfmsac_vv_tumu
__builtin_rvv_vfmsac_vf_tumu
__builtin_rvv_vfnmsac_vf_tu
__builtin_rvv_vfmadd_vv_ta
__builtin_rvv_vfmadd_vf_tama
__builtin_rvv_vfnmadd_vv_tuma
__builtin_rvv_vfmsub_vv_tumu
__builtin_rvv_vfmsub_vf_tuma
__builtin_rvv_vfnmsub_vf_tu
__builtin_rvv_vfwmacc_vv_tu
__builtin_rvv_vfwmacc_vf_tama
__builtin_rvv_vfwnmacc_vv_tamu
__builtin_rvv_vfwmsac_vv_tumu
__builtin_rvv_vfwmsac_vv_tamu
__builtin_rvv_vfwnmsac_vf_tu
__builtin_rvv_vfmin_vv_tu
__builtin_rvv_vfmin_vf_tama
__builtin_rvv_vfmax_vv_tama
__builtin_rvv_vfsgnj_vv_tumu
__builtin_rvv_vfsgnj_vf_tuma
__builtin_rvv_vfsgnjn_vf_ta
__builtin_rvv_vfsgnjn_vf_tamu
__builtin_rvv_vfsgnjx_vf_tama
__builtin_rvv_vfabs_v_tamu
__builtin_rvv_vmfne_vv
__builtin_rvv_vmfne_vf_ma
__builtin_rvv_vmfle_vv
__builtin_rvv_vmfle_vf_mu
__builtin_rvv_vmfge_vv
__builtin_rvv_vmfge_vf
__builtin_rvv_vredsum_vs_tam
__builtin_rvv_vredmax_vs_ta
__builtin_rvv_vredmin_vs_tu
__builtin_rvv_vredand_vs_ta
__builtin_rvv_vredxor_vs_ta
__builtin_rvv_vwredsum_vs_tum
__builtin_rvv_vfredmax_vs_tumu
__builtin_rvv_vfredmin_vs_tumu
__builtin_rvv_vfredosum_vs_tum
__builtin_rvv_vfwredosum_vs_tu
__builtin_rvv_viota_m_tuma
__builtin_rvv_vid_v_tuma
__builtin_rvv_vfmv_s_x_ta
__builtin_rvv_vslidedown_vx_tu
__builtin_rvv_vslide1up_vx_tuma
__builtin_rvv_vslide1up_vx_tama
__builtin_rvv_vslide1down_vx_tamu
__builtin_rvv_vrgather_vv_ta
__builtin_rvv_vrgather_vx_tuma
__builtin_rvv_vrgatherei16_vv_tuma
__builtin_rvv_vsoxei16_v_m
__builtin_rvv_vlseg2e8_v_tumu
__builtin_rvv_vle16ff_v_tamu
__builtin_rvv_vle32ff_v_tama
__builtin_rvv_vlseg3e8_v_tuma
__builtin_rvv_vlseg4e8_v_tama
__builtin_rvv_vle8_v_tu
__builtin_rvv_vlseg6e8_v_tu
__builtin_rvv_vlseg7e8_v_tamu
__builtin_rvv_vlseg2e16_v_ta
__builtin_rvv_vlseg3e16_v_tuma
__builtin_rvv_vlseg4e16_v_tu
__builtin_rvv_vlseg6e16_v_tu
__builtin_rvv_vlseg7e16_v_tumu
__builtin_rvv_vlseg8e16_v_tamu
__builtin_rvv_vlseg2e32_v_tamu
__builtin_rvv_vlseg4e32_v_tuma
__builtin_rvv_vlseg5e32_v_tama
__builtin_rvv_vlseg7e32_v_tu
__builtin_rvv_vlseg8e32_v_ta
__builtin_rvv_vlseg2e64_v_tamu
__builtin_rvv_vlseg4e64_v_ta
__builtin_rvv_vlseg5e64_v_tuma
__builtin_rvv_vlseg6e64_v_tuma
__builtin_rvv_vlseg8e64_v_tu
__builtin_rvv_vlseg3e8ff_v_tumu
__builtin_rvv_vlseg4e8ff_v_tamu
__builtin_rvv_vlseg5e8ff_v_tumu
__builtin_rvv_vlseg7e8ff_v_tuma
__builtin_rvv_vlseg8e8ff_v_tama
__builtin_rvv_vlseg3e16ff_v_tu
__builtin_rvv_vlseg4e16ff_v_tu
__builtin_rvv_vlseg5e16ff_v_tamu
__builtin_rvv_vlseg7e16ff_v_ta
__builtin_rvv_vlseg8e16ff_v_tuma
__builtin_rvv_vlseg2e32ff_v_tumu
__builtin_rvv_vlseg4e32ff_v_tu
__builtin_rvv_vlseg5e32ff_v_tumu
__builtin_rvv_vlseg6e32ff_v_tamu
__builtin_rvv_vlseg7e32ff_v_tamu
__builtin_rvv_vlseg2e64ff_v_tuma
__builtin_rvv_vlseg3e64ff_v_tama
__builtin_rvv_vlseg5e64ff_v_tu
__builtin_rvv_vlseg5e64ff_v_tamu
__builtin_rvv_vlseg7e64ff_v_tamu
__builtin_rvv_vlseg2e8ff_v_ta
__builtin_rvv_vlsseg3e8_v_tuma
__builtin_rvv_vlsseg4e8_v_tuma
__builtin_rvv_vlsseg6e8_v_tu
__builtin_rvv_vlsseg7e8_v_tumu
__builtin_rvv_vlsseg8e8_v_tamu
__builtin_rvv_vlsseg2e16_v_tama
__builtin_rvv_vlsseg3e16_v_tuma
__builtin_rvv_vlsseg4e16_v_tama
__builtin_rvv_vlsseg6e16_v_tu
__builtin_rvv_vlsseg7e16_v_tu
__builtin_rvv_vlsseg8e16_v_tamu
__builtin_rvv_vlsseg3e32_v_ta
__builtin_rvv_vlsseg4e32_v_tuma
__builtin_rvv_vlsseg4e32_v_tamu
__builtin_rvv_vlsseg6e32_v_tu
__builtin_rvv_vlsseg7e32_v_tumu
__builtin_rvv_vlsseg8e32_v_tamu
__builtin_rvv_vlsseg2e64_v_tamu
__builtin_rvv_vlsseg4e64_v_tuma
__builtin_rvv_vlsseg5e64_v_tama
__builtin_rvv_vlsseg7e64_v_tu
__builtin_rvv_vlsseg8e64_v_ta
__builtin_rvv_vle8ff_v_tamu
__builtin_rvv_vluxseg3ei8_v_tama
__builtin_rvv_vluxseg5ei8_v_tu
__builtin_rvv_vluxseg6ei8_v_tu
__builtin_rvv_vluxseg7ei8_v_tamu
__builtin_rvv_vluxseg2ei16_v_ta
__builtin_rvv_vluxseg3ei16_v_tuma
__builtin_rvv_vluxseg4ei16_v_tu
__builtin_rvv_vluxseg6ei16_v_tu
__builtin_rvv_vluxseg7ei16_v_tumu
__builtin_rvv_vluxseg8ei16_v_tamu
__builtin_rvv_vluxseg2ei32_v_tamu
__builtin_rvv_vluxseg4ei32_v_tuma
__builtin_rvv_vluxseg5ei32_v_tama
__builtin_rvv_vluxseg7ei32_v_tu
__builtin_rvv_vluxseg8ei32_v_ta
__builtin_rvv_vluxseg2ei64_v_tamu
__builtin_rvv_vluxseg4ei64_v_ta
__builtin_rvv_vluxseg5ei64_v_tuma
__builtin_rvv_vluxseg6ei64_v_tuma
__builtin_rvv_vluxseg8ei64_v_tu
__builtin_rvv_vlse8_v_ta
__builtin_rvv_vneg_v_tuma
__builtin_rvv_vnot_v_ta
__builtin_rvv_vwcvtu_x_x_v_ta
__builtin_rvv_vle16_v_tu
__builtin_rvv_vle32_v_tama
__builtin_rvv_vle64_v_tama
__builtin_rvv_vlse16_v_tumu
__builtin_rvv_vfclass_v_tu
__builtin_rvv_vfcvt_f_x_v_tama
__builtin_rvv_vfcvt_f_xu_v_tuma
__builtin_rvv_vfcvt_rtz_xu_f_v_tumu
__builtin_rvv_vfcvt_x_f_v_tuma
__builtin_rvv_vfirst_m
__builtin_rvv_vfncvt_f_f_w_tama
__builtin_rvv_vfncvt_f_xu_w_tumu
__builtin_rvv_vfncvt_rod_f_f_w_tuma
__builtin_rvv_vfncvt_rtz_xu_f_w_ta
__builtin_rvv_vfncvt_rtz_xu_f_w_tama
__builtin_rvv_vfncvt_xu_f_w_tama
__builtin_rvv_vfrec7_v_tamu
__builtin_rvv_vfsqrt_v_tumu
__builtin_rvv_vfwcvt_f_f_v_tumu
__builtin_rvv_vfwcvt_f_xu_v_ta
__builtin_rvv_vfwcvt_rtz_x_f_v_tu
__builtin_rvv_vfwcvt_rtz_xu_f_v_tama
__builtin_rvv_vfwcvt_x_f_v_tuma
__builtin_rvv_vlmul_trunc_v
__builtin_rvv_vmorn_mm
__builtin_rvv_vmsif_m_mu
__builtin_rvv_vmxor_mm
__builtin_rvv_vsext_vf2_tama
__builtin_rvv_vsext_vf4_tamu
__builtin_rvv_vzext_vf2_ta
Disable the generation of 4-operand madd.s, madd.d and related instructions.
__builtin_rvv_vzext_vf8_tama
__builtin_riscv_clz_32
zbkb
__builtin_riscv_aes64dsm_64
zkne,32bit
__builtin_riscv_sha256sum1
__builtin_riscv_sha512sig1h_32
__builtin_riscv_sha512sig1_64
-mno-micromips
SPIRV32
SOFT_FLOAT
__ma2100
__ma2x5x__
__sparc64__
tsc701
niagara3
ma2480
leon2
leon3
UivC*Ii
__builtin_s390_vpdi
V8SsV4SiV4Sii*
V8UsV4UiV4Uii*
__builtin_s390_vuphh
V2ULLiV4Ui
__builtin_s390_vacch
__builtin_s390_vavglb
V16ScV16ScV16Sci*
__builtin_s390_vchlbs
V2SLLiV2ULLiV2ULLii*
__builtin_s390_vctzg
__builtin_s390_verimg
__builtin_s390_verllvf
__builtin_s390_vgfmab
__builtin_s390_vmahf
V8SsV16ScV16ScV8Ss
__builtin_s390_vmaloh
__builtin_s390_vmlhf
__builtin_s390_vmof
__builtin_s390_vpopctf
__builtin_s390_vsl
__builtin_s390_vsumb
__builtin_s390_vtm
V16UcV16UcV16UcIii*
__builtin_s390_vfaezhs
__builtin_s390_vfeehs
__builtin_s390_vfeezf
__builtin_s390_vfenef
V16UcV16Uci*
__builtin_s390_vstrcb
__builtin_s390_vstrczb
__builtin_s390_vstrczfs
__builtin_s390_vfsqdb
V16UcV2ULLiV2ULLiV16UcIi
__builtin_s390_vfchesbs
__builtin_s390_vflnsb
__builtin_s390_vsrd
__builtin_s390_vstrszb
__builtin_s390_vcrnfs
__builtin_s390_vcnf
__VX__
__TCELE__
__builtin_ve_vl_insert_vm512l
__builtin_ve_vl_vldu_vssvl
__builtin_ve_vl_vldlzx_vssl
__builtin_ve_vl_vldu2d_vssvl
__builtin_ve_vl_vldl2dsxnc_vssvl
__builtin_ve_vl_vstnc_vssml
__builtin_ve_vl_vstunc_vssl
__builtin_ve_vl_vstlnc_vssml
__builtin_ve_vl_vst2d_vssml
__builtin_ve_vl_vstu2dnc_vssml
__builtin_ve_vl_vstl2dnc_vssl
__builtin_ve_vl_lsv_vvss
dV256dUi
__builtin_ve_vl_vbrdd_vsl
V256dLiUi
__builtin_ve_vl_vbrds_vsmvl
__builtin_ve_vl_vbrdw_vsmvl
__builtin_ve_vl_vmv_vsvvl
V256dV256dV256dV256dUi
__builtin_ve_vl_vadduw_vvvvl
__builtin_ve_vl_pvaddu_vvvl
__builtin_ve_vl_vaddswsx_vsvvl
__builtin_ve_vl_vaddswzx_vsvl
__builtin_ve_vl_pvadds_vsvMvl
__builtin_ve_vl_vaddsl_vvvmvl
__builtin_ve_vl_vsubuw_vvvvl
__builtin_ve_vl_pvsubu_vsvl
__builtin_ve_vl_vsubswsx_vsvmvl
__builtin_ve_vl_vsubswzx_vsvvl
__builtin_ve_vl_vsubsl_vsvvl
__builtin_ve_vl_vmulul_vvvmvl
__builtin_ve_vl_vmulswsx_vvvvl
__builtin_ve_vl_vmulswzx_vvvvl
__builtin_ve_vl_vmulsl_vsvmvl
__builtin_ve_vl_vdivul_vsvl
__builtin_ve_vl_vdivuw_vsvmvl
__builtin_ve_vl_vdivul_vvsmvl
__builtin_ve_vl_vdivswsx_vsvvl
__builtin_ve_vl_vdivswzx_vvvmvl
__builtin_ve_vl_vdivswzx_vvsvl
__builtin_ve_vl_vdivsl_vvvmvl
__builtin_ve_vl_vcmpul_vsvl
__builtin_ve_vl_vcmpuw_vsvvl
__builtin_ve_vl_vcmpswsx_vvvl
__builtin_ve_vl_vcmpswsx_vvvmvl
__builtin_ve_vl_pvcmps_vvvMvl
__builtin_ve_vl_vcmpsl_vsvmvl
__builtin_ve_vl_vmaxswzx_vsvl
__builtin_ve_vl_pvmaxs_vsvl
__builtin_ve_vl_vminswzx_vvvl
__builtin_ve_vl_pvmins_vvvvl
__builtin_ve_vl_vmaxsl_vvvmvl
__builtin_ve_vl_vminsl_vsvvl
__builtin_ve_vl_pvand_vsvl
__builtin_ve_vl_vor_vsvvl
__builtin_ve_vl_vxor_vvvl
__builtin_ve_vl_pvxor_vvvl
__builtin_ve_vl_veqv_vvvmvl
__builtin_ve_vl_pveqv_vsvMvl
__builtin_ve_vl_pvldzup_vvl
__builtin_ve_vl_pvldz_vvl
__builtin_ve_vl_pvpcnt_vvl
__builtin_ve_vl_pvbrvlo_vvvl
V256dUi
__builtin_ve_vl_pvseq_vl
__builtin_ve_vl_pvsll_vvsl
__builtin_ve_vl_vsrl_vvsl
__builtin_ve_vl_pvsrl_vvsMvl
__builtin_ve_vl_vslawsx_vvvmvl
__builtin_ve_vl_pvsla_vvsvl
__builtin_ve_vl_vslal_vvvmvl
__builtin_ve_vl_vsrawzx_vvvvl
__builtin_ve_vl_pvsra_vvvvl
__builtin_ve_vl_vsral_vvsmvl
__builtin_ve_vl_vfaddd_vvvl
__builtin_ve_vl_vfadds_vvvvl
__builtin_ve_vl_vfadds_vvvmvl
__builtin_ve_vl_vfsubd_vsvvl
__builtin_ve_vl_vfsubs_vvvmvl
__builtin_ve_vl_vfmuld_vvvvl
__builtin_ve_vl_vfmuls_vvvvl
__builtin_ve_vl_pvfmul_vsvMvl
__builtin_ve_vl_vfdivs_vvvl
__builtin_ve_vl_vfsqrts_vvvl
__builtin_ve_vl_vfcmpd_vvvmvl
__builtin_ve_vl_pvfcmp_vsvvl
__builtin_ve_vl_vfmaxd_vvvmvl
__builtin_ve_vl_pvfmax_vvvvl
__builtin_ve_vl_vfmind_vvvvl
__builtin_ve_vl_vfmins_vsvmvl
__builtin_ve_vl_vfmadd_vvvvl
V256dV256ddV256dV256dUi
__builtin_ve_vl_vfmadd_vsvvmvl
__builtin_ve_vl_vfmads_vvvvmvl
__builtin_ve_vl_pvfmad_vsvvl
V256dLUiV256dV256dV512bV256dUi
__builtin_ve_vl_vfmsbd_vsvvvl
__builtin_ve_vl_vfmsbs_vvsvl
__builtin_ve_vl_pvfmsb_vsvvl
__builtin_ve_vl_vfnmadd_vsvvl
__builtin_ve_vl_vfnmadd_vsvvmvl
__builtin_ve_vl_pvfnmad_vvvvl
__builtin_ve_vl_pvfnmad_vsvvMvl
__builtin_ve_vl_vfnmsbd_vsvvmvl
__builtin_ve_vl_vfnmsbs_vvsvl
__builtin_ve_vl_pvfnmsb_vvsvvl
__builtin_ve_vl_vrcps_vvvl
__builtin_ve_vl_vrsqrtdnex_vvl
__builtin_ve_vl_pvrsqrtnex_vvl
__builtin_ve_vl_vcvtwdzxrz_vvvl
__builtin_ve_vl_vcvtwssxrz_vvmvl
__builtin_ve_vl_pvcvtws_vvMvl
__builtin_ve_vl_vcvtld_vvmvl
__builtin_ve_vl_vcvtdl_vvl
V256dV256dV256dV256bUi
V256dUiV256dV512bUi
__builtin_ve_vl_vshf_vvvsvl
V256bV256dUi
__builtin_ve_vl_vfmkleq_mvl
__builtin_ve_vl_vfmklnan_mvml
__builtin_ve_vl_vfmklnenan_mvml
__builtin_ve_vl_vfmkwlt_mvml
__builtin_ve_vl_vfmkwle_mvl
__builtin_ve_vl_vfmkwltnan_mvml
__builtin_ve_vl_vfmkwnenan_mvml
__builtin_ve_vl_pvfmkwuplt_mvml
__builtin_ve_vl_pvfmkwloeq_mvml
__builtin_ve_vl_pvfmkwuple_mvml
__builtin_ve_vl_pvfmkwupnan_mvl
__builtin_ve_vl_pvfmkwupltnan_mvml
__builtin_ve_vl_pvfmkwloeqnan_mvml
__builtin_ve_vl_pvfmkwuplenan_mvml
__builtin_ve_vl_pvfmkwlt_Mvl
__builtin_ve_vl_pvfmkwnum_MvMl
__builtin_ve_vl_pvfmkwnenan_Mvl
__builtin_ve_vl_vfmkdgt_mvml
__builtin_ve_vl_vfmkdeq_mvml
__builtin_ve_vl_vfmkdgtnan_mvml
__builtin_ve_vl_vfmkdgenan_mvl
__builtin_ve_vl_vfmksne_mvml
__builtin_ve_vl_vfmksge_mvml
__builtin_ve_vl_vfmksnenan_mvml
__builtin_ve_vl_pvfmkslogt_mvl
__builtin_ve_vl_pvfmksupne_mvl
__builtin_ve_vl_pvfmksupeq_mvml
__builtin_ve_vl_pvfmksupnum_mvl
__builtin_ve_vl_pvfmkslogtnan_mvl
__builtin_ve_vl_pvfmksupnenan_mvl
__builtin_ve_vl_pvfmksloeqnan_mvml
__builtin_ve_vl_pvfmksgt_MvMl
__builtin_ve_vl_pvfmksge_Mvl
__builtin_ve_vl_pvfmksgtnan_MvMl
__builtin_ve_vl_pvfmkseqnan_MvMl
__builtin_ve_vl_vsuml_vvl
__builtin_ve_vl_vrmaxswfstsx_vvvl
__builtin_ve_vl_vrminswlstsx_vvl
__builtin_ve_vl_vrminswfstzx_vvvl
__builtin_ve_vl_vfrmaxdlst_vvl
__builtin_ve_vl_vfrmindfst_vvvl
__builtin_ve_vl_vror_vvl
__builtin_ve_vl_vgt_vvssml
__builtin_ve_vl_vgtu_vvssmvl
__builtin_ve_vl_vgtlsx_vvssml
__builtin_ve_vl_vgtlzx_vvssmvl
__builtin_ve_vl_vsc_vvssl
__builtin_ve_vl_vscu_vvssml
__builtin_ve_vl_vscl_vvssl
V256bV256bV256b
__builtin_ve_vl_xorm_MMM
__builtin_ve_vl_tscr_ssss
__builtin_ve_vl_fencei
OMPCaptureClause
__builtin_wasm_throw
iLLi*LLiLLi
__builtin_wasm_trunc_s_i64_f64
__builtin_wasm_trunc_saturate_u_i32_f64
__builtin_wasm_add_sat_u_i16x8
__builtin_wasm_abs_i32x4
__builtin_wasm_min_u_i16x8
__builtin_wasm_max_s_i32x4
__builtin_wasm_all_true_i32x4
UiV8s
__builtin_wasm_bitmask_i64x2
__builtin_wasm_pmin_f32x4
__builtin_wasm_ceil_f64x2
__builtin_wasm_sqrt_f64x2
__builtin_wasm_narrow_u_i16x8_i32x4
__builtin_wasm_trunc_sat_u_zero_f64x2_i32x4
__builtin_ve_vl_vscu_vvssl
suppress-c++-stdlib
stable-report-filename
OMPNowaitClause
c++-shared_ptr-inlining
expand-macros
Don't assume that C++'s global operator new can't alias any pointer
xsave
+avx512vnni
+avx512vbmi
+sgx
+clflushopt
+rdpid
+ptwrite
+avxvnni
__code_model_
__x86_64h__
__tune_pentium2__
corei7
__tune_athlon_sse__
bdver3
__LAHF_SAHF__
__RTM__
__FMA4__
__AVX512CD__
__AVX512VBMI__
__XSAVEOPT__
__PREFETCHWT1__
__CLDEMOTE__
__AMXINT8__
__RETPOLINE__
__SSE2_MATH__
__3dNOW_A__
avx512vpopcntdq
avx512bitalg
cldemote
movdir64b
rdrnd
wbnoinvd
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+adx,+mpx
prescott
{st(1)}
st(6)
xmm4
xmm12
ymm3
ymm12
xmm18
xmm28
ymm19
ymm28
zmm1
zmm12
zmm19
zmm28
bnd0
tmm3
r11w
r14w
__builtin_cpu_supports
ncV:64:
__builtin_ia32_pfcmpgt
V2fV2f
__builtin_ia32_pf2iw
_mm_prefetch
__builtin_ia32_paddusb
__builtin_ia32_psubsw
__builtin_ia32_por
__builtin_ia32_psrlw
__builtin_ia32_psllqi
__builtin_ia32_psrlqi
__builtin_ia32_punpcklwd
__builtin_ia32_pcmpgtd
V4sssss
V4fV4fV2i
__builtin_ia32_pminub
V4sV4sIc
V2dV2i
__builtin_ia32_psubq
__builtin_ia32_phaddw
__builtin_ia32_psignw
__builtin_ia32_ucomieq
__builtin_ia32_comisdeq
__builtin_ia32_ucomisdge
__builtin_ia32_cmpnltps
__builtin_ia32_cmpnless
__builtin_ia32_maxps
__builtin_ia32_cmplesd
__builtin_ia32_maxpd
__builtin_ia32_packuswb128
__builtin_ia32_vec_ext_v4sf
__builtin_ia32_hsubpd
__builtin_ia32_pmaddubsw128
xmmintrin.h
__builtin_ia32_movmskps
__builtin_ia32_maskmovdqu
__builtin_ia32_pshufd
__builtin_ia32_shufpd
__builtin_ia32_cvttsd2si
__builtin_ia32_mfence
__builtin_ia32_psrad128
V8sV8si
V2OiV2Oii
__builtin_ia32_lddqu
__builtin_ia32_pblendw128
V4fV4fIi
__builtin_ia32_dppd
cV16cIi
iV16cV16cIc
__builtin_ia32_pcmpistriz128
__builtin_ia32_pcmpestriz128
__builtin_ia32_movntsd
__builtin_ia32_aesdeclast128
avx512f,vaes
__builtin_ia32_aesdeclast512
__builtin_ia32_vgf2p8affineqb_v64qi
V2OiV2OiV2OiIc
V8fV8fV8f
__builtin_ia32_hsubps256
__builtin_ia32_blendpd256
V8fV8fV8fV8f
__builtin_ia32_cmpps256
V4fV8fIi
__builtin_ia32_cvttps2dq256
__builtin_ia32_vpermilpd256
V8iV8iV4iIi
__builtin_ia32_rsqrtps256
iV4dV4d
__builtin_ia32_ptestz256
__builtin_ia32_vzeroupper
__builtin_ia32_maskloadps
__builtin_ia32_maskstorepd256
sV16sIi
__builtin_ia32_mpsadbw256
V16sV8iV8i
__builtin_ia32_phaddw256
__builtin_ia32_pmaddubsw256
__builtin_ia32_pmulhuw256
__builtin_ia32_pshufd256
__builtin_ia32_psllw256
V8iV8iV4i
__builtin_ia32_psrldqi256_byteshift
__builtin_ia32_psrlqi256
__builtin_ia32_extract128i256
V4OiV4OiC*V4Oi
__builtin_ia32_maskstored
__builtin_ia32_psllv4di
__builtin_ia32_gatherd_pd256
V4fV4ffC*V4iV4fIc
__builtin_ia32_gatherd_q256
V2OiV2OiOiC*V2OiV2OiIc
__builtin_ia32_vcvtps2ph256
UiUs*
_xgetbv
vUiUWi
vUiv*
__builtin_ia32_wbnoinvd
__builtin_ia32_tzcnt_u16
__builtin_ia32_bextri_u32
__builtin_ia32_sha1msg2
__builtin_ia32_vfmaddss3
__builtin_ia32_vfmaddsubpd256
__builtin_ia32_vfmaddps512_mask
__builtin_ia32_vfmaddsubps512_maskz
__builtin_ia32_vpmacswd
__builtin_ia32_vpmadcswd
__builtin_ia32_vphaddbq
__builtin_ia32_vphaddudq
__builtin_ia32_vprotd
__builtin_ia32_vpshlb
__builtin_ia32_vpshad
__builtin_ia32_vpcomq
__builtin_ia32_vpermil2ps256
__builtin_ia32_xend
UOii
V8dV8dIi
__builtin_ia32_rsqrt14pd512_mask
V8dV8dV8dUcIi
__builtin_ia32_rcp14ps512_mask
__builtin_ia32_cvttpd2dq512_mask
__builtin_ia32_cmpps128_mask
V16fV16fIiV16fUsIi
V8dV8dIiV8dUcIi
__builtin_ia32_cvtpd2ps512_mask
V8OiV16iV16i
__builtin_ia32_loadaps512_mask
__builtin_ia32_storedqudi512_mask
__builtin_ia32_storeaps512_mask
__builtin_ia32_alignd256
avx512vl,avx512vnni|avxvnni
__builtin_ia32_vpdpbusds256
V2OiV2OivC*V2OiUcIi
__builtin_ia32_gather3div4si
V2OiV2OivC*V4iUcIi
V4fV4fvC*V4iUcIi
V16fV16fvC*V16iUsIi
__builtin_ia32_gathersiv16si
vv*UsV16iV16fIi
vv*UcV8OiV8fIi
vUsV16ivC*IiIi
vUsV16iv*IiIi
UOiUOi
__builtin_ia32_cmpq128_mask
__builtin_ia32_cmpw256_mask
UcV8OiV8OiIiUc
__builtin_ia32_ucmpq256_mask
__builtin_ia32_ucmpw512_mask
__builtin_ia32_vpconflictdi_128
__builtin_ia32_vpconflictdi_512
__builtin_ia32_vpopcntq_256
__builtin_ia32_vpopcntw_128
UsV16cV16cUs
__builtin_ia32_pmulhw512
__builtin_ia32_pmaddubsw512
V16iV32sV32s
__builtin_ia32_compressdf128_mask
V4OiV4OiV4OiUc
V32cV32cV32cUi
V4iV4iV4iUc
vV4Oi*V4OiUc
__builtin_ia32_compressstoreqi256_mask
vV8i*V8iUc
__builtin_ia32_cvtpd2udq128_mask
__builtin_ia32_cvttps2udq256_mask
__builtin_ia32_expandqi128_mask
V4OiV4OiC*V4OiUc
V16cV16cC*V16cUs
V8iV8iC*V8iUc
__builtin_ia32_getexpps128_mask
V8fV8fIiV8fUc
__builtin_ia32_scalefps128_mask
vv*UcV2OiV4fIi
__builtin_ia32_scattersiv2df
vv*UcV4iV4fIi
vv*UcV8iV8iIi
__builtin_ia32_vpermi2varps128
V2OiV2OiV2OiV2Oi
V64cV64cV64cV64c
V32sV32sV32sV32s
__builtin_ia32_vpshldvd128
__builtin_ia32_vpshldvw256
__builtin_ia32_vpshrdvw256
__builtin_ia32_vpshrdq256
V2OiV2dV2OiUc
V2OiV4fV2OiUc
__builtin_ia32_cvttpd2uqq128_mask
__builtin_ia32_cvttpd2uqq256_mask
V2dV2dV2dV2dUcIiIi
__builtin_ia32_reducesd_mask
__builtin_ia32_cvtpd2qq512_mask
__builtin_ia32_cvtqq2pd512_mask
__builtin_ia32_rangepd512_mask
V16iV16iIi
__builtin_ia32_prord512
__builtin_ia32_prolvq256
__builtin_ia32_pshufhw512
V32sV32si
__builtin_ia32_psrlv8hi
__builtin_ia32_psravq128
__builtin_ia32_movdqa32load512_mask
vV8Oi*V8OiUc
__builtin_ia32_vpmadd52luq512
__builtin_ia32_vpmadd52luq128
V64cV64cC*V64cUOi
__builtin_ia32_fixupimmsd_mask
V2dV2dV2dIiV2dUcIi
__builtin_ia32_loaddquqi256_mask
__builtin_ia32_fixupimmps256_mask
__builtin_ia32_loadss128_mask
__builtin_ia32_loadups256_mask
__builtin_ia32_storedquhi128_mask
__builtin_ia32_storedqudi256_mask
__builtin_ia32_rcp14pd128_mask
iV2dIi
UiV4fIi
V16fV16fV16i
__builtin_ia32_psradi512
V8OiV8OiV2Oi
__builtin_ia32_psrad512
__builtin_ia32_pternlogq512_maskz
__builtin_ia32_pternlogq128_mask
__builtin_ia32_shuf_i64x2
__builtin_ia32_shuf_i64x2_256
V64cUOi
__builtin_ia32_cvtmask2q512
V16cUs
__builtin_ia32_cvtmask2w256
__builtin_ia32_cvtmask2q128
UcV4Oi
__builtin_ia32_pmovsdw512mem_mask
__builtin_ia32_pmovsqd512_mask
__builtin_ia32_pmovsdb128mem_mask
vV16c*V8iUc
__builtin_ia32_pmovsdw256mem_mask
__builtin_ia32_pmovsqb128mem_mask
__builtin_ia32_pmovsqd256mem_mask
V8sV4OiV8sUc
__builtin_ia32_pmovusqb512mem_mask
__builtin_ia32_pmovusdb128mem_mask
__builtin_ia32_pmovusqb128mem_mask
__builtin_ia32_pmovusqw128_mask
__builtin_ia32_pmovqb512_mask
__builtin_ia32_pmovqw512mem_mask
__builtin_ia32_pmovqb128_mask
__builtin_ia32_pmovqw128_mask
V8iV16iIiV8iUc
V4OiV8OiIiV4OiUc
V16fV16fV8fIi
__builtin_ia32_insertf64x4
V16fV16fV4fIi
V16iV16iV4iIi
__builtin_ia32_vfmaddsd3_mask3
__builtin_ia32_permvardi512
__builtin_ia32_permvardi256
UcV4fIiUc
__builtin_ia32_kaddhi
__builtin_ia32_kandnqi
iUcUc
__builtin_ia32_kortestcsi
__builtin_ia32_ktestzsi
__builtin_ia32_kxnordi
__builtin_ia32_kshiftlisi
__builtin_ia32_kshiftridi
V16sV32cV32cIi
V8OiV8OiV8OiUc
UcV2dV2dIiUcIi
__builtin_ia32_expanddf512_mask
__builtin_ia32_cvtps2pd512_mask
__builtin_ia32_compressstoresi512_mask
__builtin_ia32_cvtw2mask512
__builtin_ia32_cvtsd2ss_round_mask
__builtin_ia32_vpmultishiftqb256
__builtin_ia32_dpbf16ps_256
vV8iV8iUc*Uc*
__builtin_ia32_subph512
V8xV8xV8x
__builtin_ia32_maxph128
__builtin_ia32_mulsh_round_mask
__builtin_ia32_cmpsh_mask
V8xV8xV8xUc
V8xV8xIiV8xUc
__builtin_ia32_getmantph512_mask
__builtin_ia32_rndscaleph_256_mask
__builtin_ia32_getmantsh_round_mask
__builtin_ia32_sqrtph256
UcV8xIiUc
__builtin_ia32_vcvtpd2ph512_mask
V8dV8xV8dUcIi
__builtin_ia32_vcvtph2w128_mask
V32sV32xV32sUiIi
V8UsV8xV8UsUc
__builtin_ia32_vcvttph2uw512_mask
__builtin_ia32_vcvtph2dq256_mask
__builtin_ia32_vcvtph2udq256_mask
__builtin_ia32_vcvtudq2ph128_mask
__builtin_ia32_vcvttph2dq256_mask
__builtin_ia32_vcvtqq2ph512_mask
__builtin_ia32_vcvtph2qq256_mask
__builtin_ia32_vcvtph2uqq256_mask
__builtin_ia32_vcvttph2uqq128_mask
__builtin_ia32_vcvtsi2sh
__builtin_ia32_vcvtph2psx256_mask
__builtin_ia32_vfmaddph
__builtin_ia32_vfmaddsubph
__builtin_ia32_vfmaddsh3_mask3
__builtin_ia32_vfmaddcph256_maskz
__builtin_ia32_vfmaddcsh_mask
__builtin_ia32_vfcmaddcsh_round_mask3
__builtin_ia32_selectb_128
__builtin_ia32_selectw_128
__builtin_ia32_selectd_512
V32xUiV32xV32x
__builtin_ia32_selectps_256
V8fUcV8fV8f
ffV16f
__builtin_ia32_reduce_fmax_pd512
xV8x
__builtin_ia32_reduce_fmul_pd512
UcUiUiUi
vv*vC*
UiUiV2Oiv*
__builtin_ia32_aesenc256kl_u8
__builtin_ia32_xresldtrk
__readfsword
__readgsqword
__shiftright128
__builtin_ia32_cvtsd2si64
OiV4OiIi
__builtin_ia32_rdfsbase64
__builtin_ia32_xrstors64
__builtin_ia32_wrussq
__builtin_ia32_tzcnt_u64
__builtin_ia32_lwpins64
__builtin_ia32_vcvtss2usi64
V2dV2dOiIi
__builtin_ia32_vcvtsh2usi64
V8xV8xOiIi
__builtin_ia32_tileloadd64_internal
__builtin_ia32_tdpbuud_internal
__builtin_ia32_tilezero
__builtin_ia32_tilestored64
Always emit a debug frame section
case
else
_BitInt
signed
_Alignas
_Noreturn
bool
explicit
public
alignof
decltype
concept
_Fract
__builtin_offsetof
__builtin_types_compatible_p
__FUNCTION__
__is_interface_class
__has_nothrow_move_assign
__has_nothrow_constructor
__is_empty
__is_trivial
__decay
__remove_cvref
__is_nullptr
__is_floating_point
__is_fundamental
__is_compound
__private_extern__
__builtin_xnu_types_compatible
__vectorcall
__constant
image1d_array_t
image2d_array_msaa_t
__builtin_omp_required_simd_align
__bf16
_Nullable_result
__uuidof
__virtual_inheritance
__unknown_anytype
wide_char_constant
utf8_string_literal
period
ampequal
exclaimequal
lessequal
pipepipe
equalequal
greatergreatergreater
annot_non_type_dependent
annot_pragma_dump
annot_pragma_redefine_extname
annot_pragma_openmp
annot_pragma_fp
 __attribute__((not_tail_called
__has_trivial_destructor
__is_literal
__has_unique_object_representations
__is_integral
__is_lvalue_reference
__is_const
__is_base_of
__is_trivially_constructible
__builtin_ptrauth_type_discriminator
__builtin_xnu_type_signature
LLVM 15.0.0
typed
ompx_no_call_asm
Missing alignment specification in datalayout string
Alignment is neither 0 nor a power of 2
Trailing separator in datalayout string
Expected token before separator in datalayout string
Invalid regular expression '
Maximum size for the name of non-global values.
import-constants-with-refs
Deref attributes and metadata infer facts at definition only
DW_TAG_string_type
DW_TAG_common_block
DW_TAG_access_declaration
DW_TAG_file_type
DW_TAG_variant_part
DW_TAG_imported_module
DW_TAG_coarray_type
DW_TAG_call_site_parameter
DW_TAG_GNU_formal_parameter_pack
DW_TAG_SUN_union_template
DW_TAG_SUN_fortran_vax_structure
DW_TAG_ALTIUM_rom
DW_TAG_PGI_interface_block
DW_AT_location
DW_AT_language
DW_AT_import
DW_AT_return_addr
DW_AT_artificial
DW_AT_discr_list
DW_AT_macro_info
DW_AT_vtable_elem_location
DW_AT_extension
DW_AT_small
DW_AT_threads_scaled
DW_AT_enum_class
DW_AT_rnglists_base
DW_AT_call_return_pc
DW_AT_call_target
DW_AT_GHS_namespace_alias
DW_AT_MIPS_loop_unroll_factor
DW_AT_MIPS_ptr_dopetype
DW_AT_HP_raw_data_ptr
DW_AT_HP_widened_byte_size
DW_AT_GHS_frames
DW_AT_body_end
DW_AT_GNU_call_site_target
DW_AT_GNU_ranges_base
DW_AT_SUN_template
DW_AT_SUN_vtable_abi
DW_AT_SUN_omp_child_func
DW_AT_SUN_link_name
DW_AT_SUN_f90_assumed_shape_array
DW_AT_SUN_f90_use_only
DW_AT_use_GNAT_descriptive_type
DW_AT_UPC_threads_scaled
DW_AT_BORLAND_property_read
DW_AT_BORLAND_Delphi_constructor
DW_AT_BORLAND_Delphi_interface
DW_AT_LLVM_ptrauth_isa_pointer
DW_AT_APPLE_runtime_class
DW_AT_APPLE_sdk
DW_FORM_data4
DW_FORM_ref_addr
DW_FORM_sec_offset
DW_FORM_line_strp
DW_FORM_strx1
DW_FORM_GNU_strp_alt
DW_OP_const2s
DW_OP_over
DW_OP_and
DW_OP_shl
DW_OP_gt
DW_OP_lit4
DW_OP_lit8
DW_OP_lit20
DW_OP_lit27
DW_OP_reg4
DW_OP_reg10
DW_OP_reg20
DW_OP_reg27
DW_OP_breg4
DW_OP_breg9
DW_OP_breg20
DW_OP_breg27
DW_OP_deref_size
DW_OP_call_ref
DW_OP_const_type
DW_OP_HP_is_value
DW_OP_APPLE_uninit
DW_OP_PGI_omp_thread_num
DW_ATE_signed_char
DW_ATE_signed_fixed
DW_ATE_HP_floathpintel
DW_DS_leading_separate
DW_DEFAULTED_no
DW_VIRTUALITY_virtual
DW_LANG_Fortran90
DW_LANG_Ada95
DW_LANG_Haskell
DW_LANG_Julia
DW_LANG_BORLAND_Delphi
DW_CC_program
DW_CC_BORLAND_msreturn
DW_CC_LLVM_AAPCS_VFP
DW_CC_GDB_IBM_OpenCL
DW_INL_declared_inlined
DW_LNS_fixed_advance_pc
DW_LNE_set_discriminator
DW_MACRO_start_file
DW_MACRO_undef_sup
DW_MACRO_GNU_transparent_include
DW_RLE_startx_length
DW_LLE_offset_pair
DW_CFA_MIPS_advance_loc8
DW_CFA_advance_loc4
DW_CFA_restore_state
DW_CFA_val_offset
DW_APPLE_PROPERTY_getter
DW_APPLE_PROPERTY_unsafe_unretained
DW_UT_skeleton
DW_ATOM_ext_types
VARIABLE
EXTERNAL
 __attribute__((selectany
R_TRLA
R_RBR
R_TLSML
Emit a section containing remark diagnostics metadata. By default, this is enabled for the following formats: yaml-strtab, bitstream.
Fixed or VBR abbrev record with size > MaxChunkData
cortex-a72
cortex-a710
neoverse-n2
apple-a11
apple-m2
thunderx2t99
tsv110
+crypto
+neon
+sve2-sha3
+ssbs
+pauth
+mops
+v8.1a
8.3-A
armv8.7-a
9.3-A
sha3
-dotprod
profile
sve2p1
-mte
i8mm
-sme2
Controls the semantics of floating-point calculations.
v8.3a
v8.6a
v9-a
v8m.base
-vfp3d16
-vfp4d16
vfpv2
fp4-sp-d16
fpv5-sp-d16
strongarm110
arm9
arm1020e
cortex-m0
cortex-a9
cortex-r8
cortex-m23
cortex-a72
cortex-a78c
exynos-m4
exynos-m5
xscale
armv5te
+v7ve
armv7e-m
armv8.2-a
+v8.3a
8.7-A
+v9a
+v9.3a
+v8m.base
+v7s
vfpv3-d16-fp16
crypto-neon-fp-armv8
idiv
cdecp0
-cdecp2
-cdecp5
-cdecp6
String has no digits
Invalid trailing hexadecimal fraction!
Bytes wasted: 
*no default*
<CFGDIR>
-D__MSP430i
zlib error: Z_DATA_ERROR
e802t
ck803f
ck803eft
ck803hr2
ck803fr3
ck803ehr1
ck803efr1
ck803ftr1
s803t
ck803sef
ck804eh
ck804ft
ck805f
i805f
ck810e
ck810t
ck810efv
ck860v
fdivdu
fpuv3_hf
float1e3
+float7e60
+pushpop
+dsp1e2
-dsp_silan
java
doloop
-high-registers
+vdspv2
-soft-tp
-stack-size
-vdspv1
+3e3r2
+mp1e2
-mp1e2
Generalize pointers in CFI indirect call type signature checks
LLVM ERROR: out of memory
operator?
%LaL
typeinfo for 
non-virtual thunk to 
 [enable_if:
Expected object key
Invalid JSON value (number?)
Enable migration to modern ObjC literals
standard user-level extension not given in canonical order '%c'
%s not given in canonical order '%s'
zve64d
zhinx
zihintntl
zksed
zmmul
zvl4096b
zve64x
experimental extension requires explicit version number `
 for extension '
Collect control flow of function
SmallVector capacity unable to grow. Already at maximum size 
-fsanitize-coverage-ignorelist=
malformed regex in line 
Statistics are disabled.  
/Fe:
sifive-e76
sifive-7-series
verde
gfx703
carrizo
tongapro
gfx906
gfx1030
gfx1100
rs880
rv740
barts
rv32imac
-fsanitize-coverage-inline-8bit-counters
%.*e
Miscellaneous Ungrouped Timers
  %7.4f (%5.1f%%)
armeb
hsail64
mips64
powerpc64
shave
spirv32
i386
arm64ec
ananas
driverkit
linux
netbsd
sepos
shadermodel
gnueabihf
musleabi
compute
miss
arm7tdmi
mipsallegrex
mips64r6el
spirv64v1.2
xcoff
Create a table of coverage-instrumented PCs
KHITAN SMALL SCRIPT CHARACTER-
use-external-names
unknown key
entry already has 'contents' or 'external-contents'
  'case-sensitive': '
'name': "
Only compile for the offloading host.
OnlyIfDifferent
note: 
--offload-host-only
avx512bw
avx512vpopcntdq
avx512vp2intersect
pentium-mmx
pentium-m
atom
corei7
skylake
icelake-client
k6-2
btver1
bdver4
64bit
clwb
invpcid
movdir64b
rdrnd
shstk
xsave
hreset
-fno-dollar-ok
,:?[]{}
Unrecognized character while tokenizing.
tag:yaml.org,2002:
Already encountered a tag for this node!
unknown node kind
invalid boolean
IO failure on output stream: 
punct
form-feed
quotation-mark
right-parenthesis
solidus
commercial-at
underscore
left-brace
invalid character class
parentheses not balanced
REG_ESPACE
invalid argument to regex routine
apple-m1
hw.physicalcpu
TEMP
TEMPDIR
" doesn't exist!
Cannot open file '
/usr/bin/ld
too many signal callbacks already registered
SDKContentRoot should be an array
__builtin_sve_svldff1_gather_s64offset_u64
__builtin_sve_svldff1_gather_u32base_index_u32
__builtin_sve_svldff1_gather_u32base_offset_u32
__builtin_sve_svldff1_gather_u32index_u32
__builtin_sve_svldff1_gather_u32offset_u32
__builtin_sve_svldff1_gather_u64base_offset_f64
__builtin_sve_svldff1_gather_u64base_offset_u64
__builtin_sve_svldff1_gather_u64offset_f64
__builtin_sve_svldff1_s16
__builtin_sve_svldff1_u32
__builtin_sve_svldff1_u64
__builtin_sve_svldff1_vnum_s32
__builtin_sve_svldff1_vnum_u16
__builtin_sve_svldff1sb_gather_s32offset_u32
__builtin_sve_svldff1sb_gather_s64offset_u64
__builtin_sve_svldff1sb_gather_u32offset_u32
__builtin_sve_svldff1sb_gather_u64base_s64
__builtin_sve_svldff1sb_s32
__builtin_sve_svldff1sb_s64
__builtin_sve_svldff1sb_vnum_u16
__builtin_sve_svldff1sh_gather_s32index_s32
__builtin_sve_svldff1sh_gather_s64index_u64
__builtin_sve_svldff1sh_gather_s64offset_u64
__builtin_sve_svldff1sh_gather_u32base_u32
__builtin_sve_svldff1sh_gather_u32offset_s32
__builtin_sve_svldff1sh_gather_u64base_offset_u64
-fsanitize-hwaddress-experimental-aliasing
__builtin_sve_svldff1sh_s64
__builtin_sve_svldff1sh_vnum_s32
__builtin_sve_svldff1sw_gather_s64index_u64
__builtin_sve_svldff1sw_gather_s64offset_u64
__builtin_sve_svldff1sw_gather_u64base_u64
__builtin_sve_svldff1sw_gather_u64offset_s64
__builtin_sve_svldff1sw_vnum_u64
__builtin_sve_svldff1ub_gather_s32offset_s32
__builtin_sve_svldff1ub_gather_u32base_u32
__builtin_sve_svldff1ub_gather_u64base_offset_s64
__builtin_sve_svldff1ub_gather_u64offset_u64
__builtin_sve_svldff1ub_s32
__builtin_sve_svldff1ub_vnum_s32
__builtin_sve_svldff1ub_vnum_u32
__builtin_sve_svldff1uh_gather_s32offset_s32
-fsanitize-link-c++-runtime
__builtin_sve_svldff1uh_gather_u32base_offset_u32
__builtin_sve_svldff1uh_gather_u32index_s32
__builtin_sve_svldff1uh_gather_u64base_index_u64
__builtin_sve_svldff1uh_gather_u64base_offset_u64
__builtin_sve_svldff1uh_gather_u64offset_u64
__builtin_sve_svldff1uh_u32
__builtin_sve_svldff1uh_vnum_u64
__builtin_sve_svldff1uw_gather_s64index_s64
__builtin_sve_svldff1uw_gather_u64base_offset_u64
__builtin_sve_svldff1uw_gather_u64index_s64
__builtin_sve_svldff1uw_u64
__builtin_sve_svldff1uw_vnum_u64
__builtin_sve_svldnf1_s32
__builtin_sve_svldnf1_u16
__builtin_sve_svldnf1_vnum_f16
-fsanitize-memory-track-origins=
__builtin_sve_svldnf1_vnum_u32
__builtin_sve_svldnf1sb_s16
__builtin_sve_svldnf1sb_u64
__builtin_sve_svldnf1sb_vnum_s32
__builtin_sve_svldnf1sh_s64
__builtin_sve_svldnf1sh_vnum_s32
__builtin_sve_svldnf1sw_u64
__builtin_sve_svldnf1sw_vnum_s64
__builtin_sve_svldnf1ub_u64
__builtin_sve_svldnf1ub_vnum_s64
__builtin_sve_svldnf1uh_s64
__builtin_sve_svldnf1uh_u64
__builtin_sve_svldnf1uw_u64
__builtin_sve_svldnt1_bf16
__builtin_sve_svldnt1_f64
Enable use-after-destroy detection in MemorySanitizer
__builtin_sve_svldnt1_gather_u32base_index_u32
__builtin_sve_svldnt1_gather_u32base_offset_u32
__builtin_sve_svldnt1_gather_u32offset_u32
__builtin_sve_svldnt1_gather_u64base_index_f64
__builtin_sve_svldnt1_gather_u64base_s64
__builtin_sve_svldnt1_gather_u64index_s64
__builtin_sve_svldnt1_s16
__builtin_sve_svldnt1_s32
__builtin_sve_svldnt1_vnum_bf16
__builtin_sve_svldnt1_vnum_f64
__builtin_sve_svldnt1_vnum_u16
__builtin_sve_svldnt1_vnum_u64
__builtin_sve_svldnt1b_vnum_s8_x2
__builtin_sve_svldnt1b_vnum_u8_x4
__builtin_sve_svldnt1d_u64_x2
-fsanitize-recover=
__builtin_sve_svldnt1h_bf16_x2
__builtin_sve_svldnt1h_f16_x4
__builtin_sve_svldnt1h_vnum_bf16_x2
__builtin_sve_svldnt1h_vnum_f16_x2
__builtin_sve_svldnt1sb_gather_s64offset_s64
__builtin_sve_svldnt1sb_gather_u32base_offset_u32
__builtin_sve_svldnt1sb_gather_u64base_offset_s64
__builtin_sve_svldnt1sb_gather_u64base_offset_u64
__builtin_sve_svldnt1sh_gather_s64offset_s64
__builtin_sve_svldnt1sh_gather_u32base_index_u32
__builtin_sve_svldnt1sh_gather_u32offset_s32
__builtin_sve_svldnt1sh_gather_u64base_index_s64
__builtin_sve_svldnt1sh_gather_u64index_s64
__builtin_sve_svldnt1sh_gather_u64offset_u64
__builtin_sve_svldnt1sw_gather_s64offset_u64
Enable sanitizer statistics gathering.
__builtin_sve_svldnt1sw_gather_u64offset_s64
__builtin_sve_svldnt1ub_gather_s64offset_u64
__builtin_sve_svldnt1ub_gather_u32offset_s32
__builtin_sve_svldnt1ub_gather_u64base_offset_s64
__builtin_sve_svldnt1uh_gather_s64index_s64
__builtin_sve_svldnt1uh_gather_s64offset_u64
__builtin_sve_svldnt1uh_gather_u32base_s32
__builtin_sve_svldnt1uh_gather_u32base_u32
__builtin_sve_svldnt1uh_gather_u64base_s64
__builtin_sve_svldnt1uh_gather_u64index_u64
__builtin_sve_svldnt1uw_gather_s64offset_s64
__builtin_sve_svldnt1uw_gather_u64base_index_s64
__builtin_sve_svldnt1uw_gather_u64index_s64
__builtin_sve_svldnt1uw_gather_u64offset_u64
__builtin_sve_svldnt1w_u32_x2
Path to system ignorelist file for sanitizers
__builtin_sve_svlen_bf16
UWiq8h
__builtin_sve_svlen_s16
__builtin_sve_svlen_s32
__builtin_sve_svlen_u16
UWiq4Ui
__builtin_sve_svlogb_f16_m
__builtin_sve_svlogb_f16_x
__builtin_sve_svlogb_f64_z
__builtin_sve_svlsl_n_s16_z
__builtin_sve_svlsl_n_s64_x
__builtin_sve_svlsl_n_s8_m
__builtin_sve_svlsl_n_u32_m
__builtin_sve_svlsl_n_u64_m
__builtin_sve_svlsl_n_u64_z
Enable function entry/exit instrumentation in ThreadSanitizer (default)
__builtin_sve_svlsl_s64_x
__builtin_sve_svlsl_s8_x
__builtin_sve_svlsl_u32_m
__builtin_sve_svlsl_u32_z
__builtin_sve_svlsl_u8_z
__builtin_sve_svlsl_wide_n_s16_z
__builtin_sve_svlsl_wide_n_s8_x
__builtin_sve_svlsl_wide_n_s8_z
__builtin_sve_svlsl_wide_n_u32_x
q16Ucq16bq16UcUWi
__builtin_sve_svlsl_wide_s16_z
__builtin_sve_svlsl_wide_s32_x
q8Usq16bq8Usq2UWi
__builtin_sve_svlsl_wide_u32_m
q16Ucq16bq16Ucq2UWi
Enable trapping for specified sanitizers
__builtin_sve_svlsr_n_u32_z
__builtin_sve_svlsr_n_u64_z
__builtin_sve_svlsr_u16_x
__builtin_sve_svlsr_u32_m
__builtin_sve_svlsr_u8_m
__builtin_sve_svlsr_wide_n_u16_m
__builtin_sve_svlsr_wide_n_u32_z
__builtin_sve_svlsr_wide_n_u8_m
__builtin_sve_svlsr_wide_u32_x
__builtin_sve_svlsr_wide_u8_x
__builtin_sve_svmad_f16_z
q4fq16bq4fq4fq4f
__builtin_sve_svmad_f64_z
__builtin_sve_svmad_n_f16_x
__builtin_sve_svmad_n_f32_x
Strip (or keep only, if negative) a given number of path components when emitting check metadata.
__builtin_sve_svmad_n_s16_z
__builtin_sve_svmad_n_s32_x
__builtin_sve_svmad_n_s64_z
q16Scq16bq16Scq16ScSc
__builtin_sve_svmad_n_u16_z
__builtin_sve_svmad_n_u32_x
__builtin_sve_svmad_n_u64_z
__builtin_sve_svmad_n_u8_m
__builtin_sve_svmad_s16_z
__builtin_sve_svmad_s32_x
__builtin_sve_svmad_s64_z
q16Scq16bq16Scq16Scq16Sc
__builtin_sve_svmad_u16_z
__builtin_sve_svmad_u32_x
__builtin_sve_svmad_u64_z
Enable AddressSanitizer
__builtin_sve_svmatch_u8
__builtin_sve_svmax_f16_z
__builtin_sve_svmax_f64_x
__builtin_sve_svmax_n_f16_m
__builtin_sve_svmax_n_f64_m
__builtin_sve_svmax_n_s16_m
__builtin_sve_svmax_n_s32_z
__builtin_sve_svmax_n_s64_m
__builtin_sve_svmax_n_u16_x
__builtin_sve_svmax_n_u32_x
__builtin_sve_svmax_n_u8_m
__builtin_sve_svmax_n_u8_z
__builtin_sve_svmax_s32_z
__builtin_sve_svmax_s64_z
__builtin_sve_svmax_s8_z
-fsave-optimization-record=
__builtin_sve_svmax_u8_m
__builtin_sve_svmaxnm_f16_m
__builtin_sve_svmaxnm_f32_z
__builtin_sve_svmaxnm_f64_x
__builtin_sve_svmaxnm_n_f32_x
__builtin_sve_svmaxnm_n_f64_x
__builtin_sve_svmaxnmp_f32_x
__builtin_sve_svmaxnmp_f64_m
__builtin_sve_svmaxp_f32_m
__builtin_sve_svmaxp_f64_x
__builtin_sve_svmaxp_s64_m
__builtin_sve_svmaxp_s8_m
__builtin_sve_svmaxp_u64_m
__builtin_sve_svmaxp_u8_x
__builtin_sve_svmaxv_s32
Generate a YAML optimization record file
__builtin_sve_svmin_f16_x
__builtin_sve_svmin_f32_x
__builtin_sve_svmin_n_f16_m
__builtin_sve_svmin_n_f16_z
__builtin_sve_svmin_n_f64_z
__builtin_sve_svmin_n_s16_z
__builtin_sve_svmin_n_s64_x
__builtin_sve_svmin_n_s64_z
__builtin_sve_svmin_n_u32_m
__builtin_sve_svmin_n_u64_m
__builtin_sve_svmin_n_u8_z
__builtin_sve_svmin_s16_x
__builtin_sve_svmin_s64_x
__builtin_sve_svmin_s8_x
__builtin_sve_svmin_u16_z
-fsecond-underscore
__builtin_sve_svmin_u8_z
__builtin_sve_svminnm_f16_z
__builtin_sve_svminnm_f64_x
__builtin_sve_svminnm_n_f16_m
__builtin_sve_svminnm_n_f64_m
__builtin_sve_svminnmp_f16_m
__builtin_sve_svminnmp_f64_x
__builtin_sve_svminnmv_f16
__builtin_sve_svminp_f64_m
__builtin_sve_svminp_s16_x
__builtin_sve_svminp_s8_m
__builtin_sve_svminp_u16_m
__builtin_sve_svminp_u8_m
__builtin_sve_svminv_f32
__builtin_sve_svminv_s8
-fsemantic-interposition
__builtin_sve_svmla_f32_m
__builtin_sve_svmla_f64_m
__builtin_sve_svmla_lane_f32
__builtin_sve_svmla_lane_f64
__builtin_sve_svmla_lane_u32
__builtin_sve_svmla_n_f16_x
__builtin_sve_svmla_n_f64_m
__builtin_sve_svmla_n_f64_x
__builtin_sve_svmla_n_s32_z
__builtin_sve_svmla_n_s64_z
__builtin_sve_svmla_n_u16_x
__builtin_sve_svmla_n_u32_m
__builtin_sve_svmla_n_u8_m
__builtin_sve_svmla_s16_m
__builtin_sve_svmla_s16_z
Force wchar_t to be a short unsigned int
__builtin_sve_svmla_u16_x
__builtin_sve_svmla_u32_x
__builtin_sve_svmla_u8_m
__builtin_sve_svmla_u8_z
q4iq4iq8sq8sIUWi
__builtin_sve_svmlalb_lane_u32
q4fq4fq8hh
__builtin_sve_svmlalb_n_s16
__builtin_sve_svmlalb_s32
__builtin_sve_svmlalb_u32
__builtin_sve_svmlalt_lane_s64
__builtin_sve_svmlalt_lane_u64
__builtin_sve_svmlalt_n_u32
__builtin_sve_svmlalt_s32
__builtin_sve_svmls_f16_m
best,all
__builtin_sve_svmls_f64_z
__builtin_sve_svmls_lane_f64
__builtin_sve_svmls_lane_u32
__builtin_sve_svmls_n_f16_m
__builtin_sve_svmls_n_f64_m
__builtin_sve_svmls_n_s16_m
__builtin_sve_svmls_n_s32_z
__builtin_sve_svmls_n_s64_m
__builtin_sve_svmls_n_u16_x
__builtin_sve_svmls_n_u32_x
__builtin_sve_svmls_n_u8_m
__builtin_sve_svmls_n_u8_z
__builtin_sve_svmls_s32_z
__builtin_sve_svmls_s64_z
__builtin_sve_svmls_u16_m
-fsign-zero
__builtin_sve_svmls_u8_m
__builtin_sve_svmlslb_f32
__builtin_sve_svmlslb_lane_u64
__builtin_sve_svmlslb_n_s16
__builtin_sve_svmlslb_s16
__builtin_sve_svmlslb_u16
__builtin_sve_svmlslt_lane_s32
__builtin_sve_svmlslt_lane_s64
__builtin_sve_svmlslt_n_u16
__builtin_sve_svmlslt_s16
__builtin_sve_svmlslt_u64
q4fq4fq4fq4f
__builtin_sve_svmovlb_s16
q4iq8s
__builtin_sve_svmovlb_u32
-fsigned-char
__builtin_sve_svmovlt_u32
__builtin_sve_svmsb_f16_x
__builtin_sve_svmsb_f64_m
__builtin_sve_svmsb_f64_z
__builtin_sve_svmsb_n_f32_z
__builtin_sve_svmsb_n_f64_z
__builtin_sve_svmsb_n_s32_x
__builtin_sve_svmsb_n_s32_z
__builtin_sve_svmsb_n_u16_m
__builtin_sve_svmsb_n_u32_m
__builtin_sve_svmsb_n_u64_z
__builtin_sve_svmsb_n_u8_x
__builtin_sve_svmsb_s32_x
__builtin_sve_svmsb_s64_x
__builtin_sve_svmsb_s8_x
-fsigned-zeros
__builtin_sve_svmsb_u64_z
__builtin_sve_svmsb_u8_z
__builtin_sve_svmul_f32_x
__builtin_sve_svmul_f64_m
__builtin_sve_svmul_lane_s16
__builtin_sve_svmul_lane_u16
__builtin_sve_svmul_n_f16_z
__builtin_sve_svmul_n_f32_m
__builtin_sve_svmul_n_s16_x
__builtin_sve_svmul_n_s32_x
__builtin_sve_svmul_n_s8_m
__builtin_sve_svmul_n_s8_z
__builtin_sve_svmul_n_u32_z
__builtin_sve_svmul_n_u64_z
__builtin_sve_svmul_s16_x
-fsjlj-exceptions
__builtin_sve_svmul_s8_m
__builtin_sve_svmul_u16_m
__builtin_sve_svmul_u32_z
__builtin_sve_svmul_u64_x
__builtin_sve_svmulh_n_s16_x
__builtin_sve_svmulh_n_s32_x
__builtin_sve_svmulh_n_s8_m
__builtin_sve_svmulh_n_s8_x
__builtin_sve_svmulh_n_u32_z
__builtin_sve_svmulh_n_u64_z
__builtin_sve_svmulh_s16_x
__builtin_sve_svmulh_s32_m
__builtin_sve_svmulh_s8_m
__builtin_sve_svmulh_u16_m
__builtin_sve_svmulh_u32_x
Enable the superword-level parallelism vectorization passes
q4iq8sq8sIUWi
__builtin_sve_svmullb_lane_u32
__builtin_sve_svmullb_n_s32
__builtin_sve_svmullb_n_u16
__builtin_sve_svmullb_u16
__builtin_sve_svmullt_lane_s32
__builtin_sve_svmullt_n_s32
__builtin_sve_svmullt_n_s64
__builtin_sve_svmullt_u16
__builtin_sve_svmulx_f16_m
__builtin_sve_svmulx_f32_z
__builtin_sve_svmulx_f64_x
__builtin_sve_svmulx_n_f32_x
__builtin_sve_svmulx_n_f64_x
__builtin_sve_svnbsl_n_s64
-fspell-checking-limit=
__builtin_sve_svnbsl_s64
__builtin_sve_svnbsl_u32
__builtin_sve_svneg_f16_z
__builtin_sve_svneg_f32_x
__builtin_sve_svneg_s16_x
__builtin_sve_svneg_s32_x
__builtin_sve_svneg_s8_m
__builtin_sve_svneg_s8_x
__builtin_sve_svnmad_f32_z
__builtin_sve_svnmad_f64_z
__builtin_sve_svnmad_n_f32_x
__builtin_sve_svnmad_n_f64_m
__builtin_sve_svnmatch_u8
__builtin_sve_svnmla_f16_z
-fdelayed-template-parsing
-fsplit-cold-code
__builtin_sve_svnmla_n_f64_m
__builtin_sve_svnmls_f16_m
__builtin_sve_svnmls_f32_z
__builtin_sve_svnmls_f64_x
__builtin_sve_svnmls_n_f32_x
__builtin_sve_svnmls_n_f64_x
__builtin_sve_svnmsb_f32_m
__builtin_sve_svnmsb_f32_x
__builtin_sve_svnmsb_n_f16_z
__builtin_sve_svnmsb_n_f32_z
__builtin_sve_svnot_b_z
__builtin_sve_svnot_s16_x
__builtin_sve_svnot_s64_x
__builtin_sve_svnot_s8_x
__builtin_sve_svnot_u32_m
-fsplit-lto-unit
__builtin_sve_svnot_u8_z
__builtin_sve_svorr_n_s16_m
__builtin_sve_svorr_n_s32_z
__builtin_sve_svorr_n_s64_x
__builtin_sve_svorr_n_u16_x
__builtin_sve_svorr_n_u32_x
__builtin_sve_svorr_n_u8_m
__builtin_sve_svorr_n_u8_x
__builtin_sve_svorr_s32_z
__builtin_sve_svorr_s64_z
__builtin_sve_svorr_u16_x
__builtin_sve_svorr_u32_m
__builtin_sve_svorr_u8_m
__builtin_sve_svorv_s16
__builtin_sve_svorv_u16
-fsplit-stack
__builtin_sve_svpfalse_b
__builtin_sve_svpmul_n_u8
__builtin_sve_svpmullb_pair_n_u64
__builtin_sve_svpmullb_pair_u32
__builtin_sve_svpmullt_n_u64
__builtin_sve_svpmullt_pair_n_u8
__builtin_sve_svpmullt_u64
__builtin_sve_svpnext_b16
vq16bvC*q4iIi
__builtin_sve_svprfb_gather_u32base
vq16bvC*q4UiIi
vq16bq2UWiIi
vq16bvC*WiIi
__builtin_sve_svprfd_gather_s64index
__builtin_sve_svprfd_gather_u64base_index
Enable stack checking
__builtin_sve_svprfh_gather_u32index
__builtin_sve_svprfh_gather_u64index
__builtin_sve_svprfw_gather_u32base
__builtin_sve_svprfw_gather_u32index
q16bq16bq16bi
__builtin_sve_svpsel_b8
__builtin_sve_svptrue_b16
__builtin_sve_svptrue_b32
__builtin_sve_svptrue_c8
__builtin_sve_svptrue_pat_b32
__builtin_sve_svqabs_s16_z
__builtin_sve_svqabs_s32_x
__builtin_sve_svqabs_s8_x
__builtin_sve_svqadd_n_s16_m
__builtin_sve_svqadd_n_s32
Enable stack protectors for all functions
__builtin_sve_svqadd_n_s8_x
__builtin_sve_svqadd_n_u16_m
__builtin_sve_svqadd_n_u32_x
__builtin_sve_svqadd_n_u64
__builtin_sve_svqadd_n_u8_x
q8sq8sq8s
q4iq4iq4i
__builtin_sve_svqadd_s32_m
__builtin_sve_svqadd_s64_z
__builtin_sve_svqadd_s8_m
__builtin_sve_svqadd_u16_x
__builtin_sve_svqadd_u32
__builtin_sve_svqadd_u64_x
__builtin_sve_svqadd_u8_m
__builtin_sve_svqcadd_s64
Enable stack protectors for some functions vulnerable to stack smashing. This uses a loose heuristic which considers functions vulnerable if they contain a char (or 8bit integer) array or constant sized calls to alloca , which are of greater size than ssp-buffer-size (default: 8 bytes). All variable sized calls to alloca are considered vulnerable. A function with a stack protector has a guard value added to the stack frame that is checked on function exit. The guard value must be positioned in the stack frame such that a buffer overflow from a vulnerable variable will overwrite the guard value before overwriting the function's return address. The reference stack guard value is stored in a global variable.
__builtin_sve_svqdecb_n_u64
iiIiIUWi
__builtin_sve_svqdecb_pat_n_u64
__builtin_sve_svqdecd_n_s32
__builtin_sve_svqdecd_pat_n_u32
q2Wiq2WiIiIUWi
__builtin_sve_svqdecd_u64
q2UWiq2UWiIUWi
__builtin_sve_svqdech_pat_n_u32
q8sq8sIiIUWi
__builtin_sve_svqdech_u16
__builtin_sve_svqdecp_n_s32_b16
WiWiq16b
__builtin_sve_svqdecp_n_s64_b8
__builtin_sve_svqdecp_n_u32_b64
Emit .su file containing information on function stack sizes
__builtin_sve_svqdecp_s32
q2Wiq2Wiq16b
__builtin_sve_svqdecp_u64
__builtin_sve_svqdecw_n_s32
__builtin_sve_svqdecw_pat_n_u32
q4iq4iIiIUWi
__builtin_sve_svqdecw_u32
q4Uiq4UiIUWi
__builtin_sve_svqdmlalb_s32
__builtin_sve_svqdmlalbt_n_s32
__builtin_sve_svqdmlalt_lane_s32
__builtin_sve_svqdmlalt_n_s16
__builtin_sve_svqdmlslb_lane_s32
__builtin_sve_svqdmlslb_n_s32
__builtin_sve_svqdmlslbt_n_s16
-fstrict-aliasing
__builtin_sve_svqdmlslt_n_s16
__builtin_sve_svqdmlslt_s16
__builtin_sve_svqdmulh_lane_s64
__builtin_sve_svqdmulh_n_s32
__builtin_sve_svqdmulh_s8
__builtin_sve_svqdmullb_n_s16
__builtin_sve_svqdmullb_s64
__builtin_sve_svqdmullt_lane_s32
__builtin_sve_svqdmullt_s64
__builtin_sve_svqincb_n_u32
__builtin_sve_svqincb_pat_n_u64
__builtin_sve_svqincd_n_s64
__builtin_sve_svqincd_pat_n_u64
__builtin_sve_svqincd_s64
__builtin_sve_svqinch_n_s32
Enable optimizations based on the strict definition of flexible arrays
__builtin_sve_svqinch_u16
__builtin_sve_svqincp_n_s32_b64
__builtin_sve_svqincp_n_s64_b8
__builtin_sve_svqincp_n_u32_b32
__builtin_sve_svqincp_n_u64_b8
__builtin_sve_svqincp_s64
__builtin_sve_svqincw_n_s64
__builtin_sve_svqincw_n_u32
__builtin_sve_svqincw_pat_u32
__builtin_sve_svqneg_s16_m
__builtin_sve_svqneg_s32_z
__builtin_sve_svqneg_s64_x
__builtin_sve_svqrdcmlah_lane_s32
__builtin_sve_svqrdcmlah_s64
__builtin_sve_svqrdmlah_n_s16
Assume that overflowing float-to-int casts are undefined (default)
__builtin_sve_svqrdmlsh_lane_s16
__builtin_sve_svqrdmlsh_n_s16
__builtin_sve_svqrdmlsh_s32
__builtin_sve_svqrdmlsh_s8
__builtin_sve_svqrdmulh_n_s64
__builtin_sve_svqrdmulh_s32
__builtin_sve_svqrshl_n_s16_z
__builtin_sve_svqrshl_n_s32_m
__builtin_sve_svqrshl_n_s8_x
q8Usq16bq8Uss
__builtin_sve_svqrshl_n_u32_x
__builtin_sve_svqrshl_n_u64_m
__builtin_sve_svqrshl_n_u8_z
__builtin_sve_svqrshl_s16_z
__builtin_sve_svqrshl_s64_m
Enable optimizations based on the strict rules for overwriting polymorphic C++ objects
__builtin_sve_svqrshl_u16_z
__builtin_sve_svqrshl_u32_x
__builtin_sve_svqrshl_u64_z
q16Ucq16bq16Ucq16Sc
q8sq8WiIUWi
__builtin_sve_svqrshr_u16_x2
q16Ucq16UiIUWi
__builtin_sve_svqrshrnb_n_s16
q16Ucq8UsIUWi
__builtin_sve_svqrshrnb_n_u64
q8sq8sq4iIUWi
q4iq4iq2WiIUWi
q4Uiq4Uiq2UWiIUWi
__builtin_sve_svqrshrunb_n_s32
q16Ucq16Ucq8sIUWi
-fswift-async-fp=
__builtin_sve_svqshl_n_s32_m
__builtin_sve_svqshl_n_s64_m
__builtin_sve_svqshl_n_s8_z
__builtin_sve_svqshl_n_u16_x
__builtin_sve_svqshl_n_u64_x
__builtin_sve_svqshl_n_u8_x
__builtin_sve_svqshl_s32_m
__builtin_sve_svqshl_s32_x
__builtin_sve_svqshl_s8_z
__builtin_sve_svqshl_u16_z
__builtin_sve_svqshl_u64_x
__builtin_sve_svqshl_u8_m
__builtin_sve_svqshlu_n_s16_z
__builtin_sve_svqshlu_n_s32_x
q2UWiq16bq2WiIUWi
Generate code for SYCL device.
__builtin_sve_svqshrnb_n_u16
__builtin_sve_svqshrnt_n_s16
__builtin_sve_svqshrnt_n_u64
__builtin_sve_svqshrunb_n_s32
__builtin_sve_svqsub_n_s16_m
__builtin_sve_svqsub_n_s32
__builtin_sve_svqsub_n_s64_m
__builtin_sve_svqsub_n_s64_x
__builtin_sve_svqsub_n_u16_m
__builtin_sve_svqsub_n_u32
__builtin_sve_svqsub_n_u64_m
__builtin_sve_svqsub_n_u64_z
__builtin_sve_svqsub_s16_m
__builtin_sve_svqsub_s32
__builtin_sve_svqsub_s64_m
Enables SYCL kernels compilation for device
__builtin_sve_svqsub_u16_m
__builtin_sve_svqsub_u32
__builtin_sve_svqsub_u64_m
__builtin_sve_svqsub_u64_z
__builtin_sve_svqsubr_n_s16_x
__builtin_sve_svqsubr_n_s32_x
__builtin_sve_svqsubr_n_s8_m
__builtin_sve_svqsubr_n_s8_x
__builtin_sve_svqsubr_n_u32_z
__builtin_sve_svqsubr_n_u64_z
__builtin_sve_svqsubr_s16_x
__builtin_sve_svqsubr_s32_m
__builtin_sve_svqsubr_s8_m
__builtin_sve_svqsubr_u16_m
__builtin_sve_svqsubr_u32_x
-fsystem-module
q16Scq8s
__builtin_sve_svqxtnb_s64
q8Usq4Ui
q4Uiq2UWi
q4iq4iq2Wi
__builtin_sve_svqxtnt_u32
q16Ucq8s
__builtin_sve_svqxtunb_s32
q8Usq8Usq4i
__builtin_sve_svraddhnb_n_s16
__builtin_sve_svraddhnb_n_u64
__builtin_sve_svraddhnb_s32
__builtin_sve_svraddhnt_n_s32
__builtin_sve_svraddhnt_n_u32
__builtin_sve_svraddhnt_u16
-ftabstop
__builtin_sve_svrbit_s32_m
__builtin_sve_svrbit_s64_m
__builtin_sve_svrbit_s8_z
__builtin_sve_svrbit_u16_x
__builtin_sve_svrbit_u64_x
__builtin_sve_svrbit_u8_x
__builtin_sve_svrecpe_f16
q8hq8h
__builtin_sve_svrecpe_u32_z
__builtin_sve_svrecps_f32
__builtin_sve_svrecpx_f16_x
__builtin_sve_svrecpx_f32_m
__builtin_sve_svrev_b16
__builtin_sve_svrev_b8
-fdenormal-fp-math-f32=
-fno-ident
q16Scq16Sc
__builtin_sve_svrev_u32
__builtin_sve_svrevb_s16_m
__builtin_sve_svrevb_s16_z
__builtin_sve_svrevb_s64_z
__builtin_sve_svrevb_u16_z
__builtin_sve_svrevb_u64_x
__builtin_sve_svrevb_u64_z
__builtin_sve_svrevd_s64_m
__builtin_sve_svrevd_s8_m
__builtin_sve_svrevd_u16_z
__builtin_sve_svrevd_u32_x
__builtin_sve_svrevd_u8_x
__builtin_sve_svrevh_s32_x
__builtin_sve_svrevh_u32_m
-ftemplate-depth=
__builtin_sve_svrevw_s64_z
__builtin_sve_svrevw_u64_z
__builtin_sve_svrhadd_n_s32_x
__builtin_sve_svrhadd_n_s64_m
__builtin_sve_svrhadd_n_u16_m
__builtin_sve_svrhadd_n_u32_m
__builtin_sve_svrhadd_n_u64_z
__builtin_sve_svrhadd_n_u8_m
__builtin_sve_svrhadd_s32_x
__builtin_sve_svrhadd_s64_x
__builtin_sve_svrhadd_u16_m
__builtin_sve_svrhadd_u16_z
__builtin_sve_svrhadd_u64_z
__builtin_sve_svrhadd_u8_z
__builtin_sve_svrinta_f32_m
-ftest-coverage
__builtin_sve_svrinti_f32_m
__builtin_sve_svrinti_f64_m
__builtin_sve_svrintm_f16_z
__builtin_sve_svrintm_f32_x
__builtin_sve_svrintn_f16_x
__builtin_sve_svrintn_f32_x
__builtin_sve_svrintp_f16_m
__builtin_sve_svrintp_f16_x
__builtin_sve_svrintp_f64_z
__builtin_sve_svrintx_f16_z
__builtin_sve_svrintx_f64_x
__builtin_sve_svrintz_f16_m
__builtin_sve_svrintz_f64_m
__builtin_sve_svrshl_n_s16_m
__builtin_sve_svrshl_n_s32_z
Write minimized bitcode to <file> for the ThinLTO thin link only
__builtin_sve_svrshl_n_u16_x
__builtin_sve_svrshl_n_u32_x
__builtin_sve_svrshl_n_u8_m
__builtin_sve_svrshl_n_u8_z
__builtin_sve_svrshl_s32_z
__builtin_sve_svrshl_s64_z
__builtin_sve_svrshl_u16_x
__builtin_sve_svrshl_u16_z
__builtin_sve_svrshl_u8_m
__builtin_sve_svrshr_n_s16_m
__builtin_sve_svrshr_n_s32_z
__builtin_sve_svrshr_n_s64_x
q8Usq16bq8UsIUWi
__builtin_sve_svrshr_n_u32_m
__builtin_sve_svrshr_n_u32_z
-ftime-report=
__builtin_sve_svrshrnb_n_s32
__builtin_sve_svrshrnb_n_u32
__builtin_sve_svrshrnt_n_u16
__builtin_sve_svrshrnt_n_u64
__builtin_sve_svrsqrte_u32_z
__builtin_sve_svrsqrts_f64
__builtin_sve_svrsra_n_u16
__builtin_sve_svrsra_n_u32
__builtin_sve_svrsubhnb_n_u32
__builtin_sve_svrsubhnb_s32
__builtin_sve_svrsubhnt_n_s16
__builtin_sve_svrsubhnt_n_s64
__builtin_sve_svrsubhnt_s64
__builtin_sve_svrsubhnt_u64
__builtin_sve_svsbclt_n_u32
-ftime-trace-granularity=
__builtin_sve_svscale_f32_m
__builtin_sve_svscale_f32_z
__builtin_sve_svscale_n_f16_m
__builtin_sve_svscale_n_f16_x
__builtin_sve_svscale_n_f64_m
__builtin_sve_svscale_n_f64_z
__builtin_sve_svsel_b
__builtin_sve_svsel_bf16
__builtin_sve_svsel_s8
__builtin_sve_svsel_u64
q16hq16hIUWiq8h
q8fq8fIUWiq4f
q8iq8iIUWiq4i
__builtin_sve_svset2_s8
__builtin_sve_svset2_u32
-ftime-trace
q24hq24hIUWiq8h
__builtin_sve_svset3_f64
q12iq12iIUWiq4i
q6Wiq6WiIUWiq2Wi
q12Uiq12UiIUWiq4Ui
__builtin_sve_svset3_u8
q32hq32hIUWiq8h
__builtin_sve_svset4_f32
q16iq16iIUWiq4i
__builtin_sve_svset4_s8
q16Uiq16UiIUWiq4Ui
q8UWiq8UWiIUWiq2UWi
q8sq16ScIUWi
__builtin_sve_svshllb_n_s64
q4Uiq8UsIUWi
-ftls-model
__builtin_sve_svshllt_n_u64
__builtin_sve_svshrnb_n_s64
__builtin_sve_svshrnt_n_s32
__builtin_sve_svshrnt_n_u16
__builtin_sve_svsli_n_s8
__builtin_sve_svsli_n_u64
__builtin_sve_svsplice_f16
__builtin_sve_svsplice_f32
__builtin_sve_svsplice_u32
__builtin_sve_svsqadd_n_u16_m
__builtin_sve_svsqadd_n_u32_z
__builtin_sve_svsqadd_n_u64_x
__builtin_sve_svsqadd_u16_x
__builtin_sve_svsqadd_u32_x
__builtin_sve_svsqadd_u64_m
-ftrap-function=
__builtin_sve_svsqrt_f16_z
__builtin_sve_svsqrt_f32_z
__builtin_sve_svsra_n_s32
__builtin_sve_svsra_n_s8
__builtin_sve_svsri_n_s32
__builtin_sve_svsri_n_u16
vq16by*q8y
__builtin_sve_svst1_f16
vq16bSs*q8s
__builtin_sve_svst1_s64
vq16bf*q4iq4f
vq16bSi*q4iq4i
__builtin_sve_svst1_scatter_s64index_f64
vq16bSWi*q2Wiq2Wi
__builtin_sve_svst1_scatter_s64offset_u64
Specify the function to be called on overflow
vq16bq4UiWiq4Ui
__builtin_sve_svst1_scatter_u32base_offset_u32
__builtin_sve_svst1_scatter_u32index_f32
__builtin_sve_svst1_scatter_u32index_s32
__builtin_sve_svst1_scatter_u32offset_u32
__builtin_sve_svst1_scatter_u64base_index_f64
vq16bq2UWiWiq2UWi
__builtin_sve_svst1_scatter_u64base_offset_f64
__builtin_sve_svst1_scatter_u64index_f64
vq16bSWi*q2UWiq2Wi
__builtin_sve_svst1_scatter_u64offset_u64
vq16bUs*q8Us
vq16bUc*q16Uc
__builtin_sve_svst1_vnum_f16
__builtin_sve_svst1_vnum_f64
Trap on integer overflow
vq16bSc*Wiq16Sc
__builtin_sve_svst1_vnum_u32
vq16bUc*Wiq16Uc
vq16bSc*q8s
vQSc*q32Sc
__builtin_sve_svst1b_scatter_s32offset_s32
vq16bSc*q2Wiq2Wi
__builtin_sve_svst1b_scatter_s64offset_u64
vq16bSc*q4Uiq4i
__builtin_sve_svst1b_scatter_u64base_offset_s64
vq16bSc*q2UWiq2Wi
vq16bUc*q2UWiq2UWi
vq16bUc*q2UWi
__builtin_sve_svst1b_u8_x4
vq16bSc*Wiq4i
-ftree-ter
vq16bUc*Wiq8Us
__builtin_sve_svst1b_vnum_u64
vQUc*Wiq64Uc
vQd*q4d
vQSWi*q8Wi
__builtin_sve_svst1d_u64_x4
vQd*Wiq8d
__builtin_sve_svst1d_vnum_s64_x2
vQUWi*Wiq8UWi
__builtin_sve_svst1h_bf16_x4
vQh*q32h
vQSs*q16s
vq16bSs*q2Wi
__builtin_sve_svst1h_scatter_s32index_u32
__builtin_sve_svst1h_scatter_s32offset_u32
-ftrigraphs
__builtin_sve_svst1h_scatter_u32base_offset_u32
__builtin_sve_svst1h_scatter_u32index_s32
__builtin_sve_svst1h_scatter_u32offset_u32
__builtin_sve_svst1h_scatter_u64base_index_u64
vq16bSs*q2UWiq2Wi
__builtin_sve_svst1h_scatter_u64offset_s64
vQUs*q32Us
__builtin_sve_svst1h_u32
vQy*Wiq32y
__builtin_sve_svst1h_vnum_f16_x4
vQSs*Wiq32s
vq16bSs*Wiq4i
vQUs*Wiq32Us
__builtin_sve_svst1h_vnum_u64
vQf*q16f
-ftrivial-auto-var-init-skip-non-pod
vq16bSi*q2Wiq2Wi
__builtin_sve_svst1w_scatter_s64offset_s64
__builtin_sve_svst1w_scatter_u64base_offset_u64
__builtin_sve_svst1w_scatter_u64base_u64
__builtin_sve_svst1w_scatter_u64offset_u64
__builtin_sve_svst1w_u32_x4
vQf*Wiq8f
__builtin_sve_svst1w_vnum_f32_x4
vq16bSi*Wiq2Wi
__builtin_sve_svst1w_vnum_u32_x4
vq16by*q16y
vq16bh*q16h
vq16bSs*q16s
__builtin_sve_svst2_s64
__builtin_sve_svst2_u16
-ftrivial-auto-var-init-skip-stl
vq16by*Wiq16y
__builtin_sve_svst2_vnum_f32
vq16bSs*Wiq16s
vq16bSi*Wiq8i
vq16bUs*Wiq16Us
__builtin_sve_svst2_vnum_u64
vq16by*q24y
__builtin_sve_svst3_f16
vq16bSs*q24s
__builtin_sve_svst3_s64
vq16bUs*q24Us
vq16bUi*q12Ui
vq16by*Wiq24y
__builtin_sve_svst3_vnum_f32
vq16bSs*Wiq24s
-ftrivial-auto-var-init=
vq16bUs*Wiq24Us
__builtin_sve_svst3_vnum_u64
vq16by*q32y
vq16bh*q32h
vq16bSs*q32s
__builtin_sve_svst4_s64
vq16bUs*q32Us
__builtin_sve_svst4_u32
vq16by*Wiq32y
__builtin_sve_svst4_vnum_f32
vq16bSs*Wiq32s
vq16bSi*Wiq16i
vq16bUs*Wiq32Us
__builtin_sve_svst4_vnum_u64
Defines the __DEPRECATED macro
Zero initialize only first N bytes of each stack variable; 0 value turns off the limit.
__builtin_sve_svstnt1_scatter_s64index_s64
__builtin_sve_svstnt1_scatter_s64offset_s64
__builtin_sve_svstnt1_scatter_u32base_index_u32
__builtin_sve_svstnt1_scatter_u32base_offset_s32
__builtin_sve_svstnt1_scatter_u32offset_u32
__builtin_sve_svstnt1_scatter_u64base_index_s64
__builtin_sve_svstnt1_scatter_u64base_s64
__builtin_sve_svstnt1_scatter_u64base_u64
__builtin_sve_svstnt1_u16
__builtin_sve_svstnt1_u8
__builtin_sve_svstnt1_vnum_s16
__builtin_sve_svstnt1_vnum_s64
__builtin_sve_svstnt1b_s8_x2
__builtin_sve_svstnt1b_scatter_s64offset_u64
__builtin_sve_svstnt1b_scatter_u32offset_s32
-ftyped-cxx-new-delete
__builtin_sve_svstnt1b_u8_x2
__builtin_sve_svstnt1b_vnum_s8_x4
__builtin_sve_svstnt1d_s64_x2
__builtin_sve_svstnt1d_u64_x2
__builtin_sve_svstnt1d_vnum_u64_x2
__builtin_sve_svstnt1h_bf16_x4
__builtin_sve_svstnt1h_scatter_s64index_s64
__builtin_sve_svstnt1h_scatter_s64index_u64
__builtin_sve_svstnt1h_scatter_u32base_s32
__builtin_sve_svstnt1h_scatter_u32offset_u32
__builtin_sve_svstnt1h_scatter_u64base_s64
__builtin_sve_svstnt1h_scatter_u64index_s64
__builtin_sve_svstnt1h_vnum_bf16_x2
__builtin_sve_svstnt1h_vnum_f16_x4
__builtin_sve_svstnt1h_vnum_u16_x4
-ftyped-memory-operations
__builtin_sve_svstnt1w_scatter_u64base_index_s64
__builtin_sve_svstnt1w_scatter_u64base_offset_u64
__builtin_sve_svstnt1w_scatter_u64offset_s64
__builtin_sve_svstnt1w_u32_x2
__builtin_sve_svstnt1w_vnum_u32_x2
__builtin_sve_svsub_f16_x
__builtin_sve_svsub_f64_m
__builtin_sve_svsub_f64_x
__builtin_sve_svsub_n_f32_z
__builtin_sve_svsub_n_f64_z
__builtin_sve_svsub_n_s32_x
__builtin_sve_svsub_n_s64_m
__builtin_sve_svsub_n_u16_m
__builtin_sve_svsub_n_u32_m
__builtin_sve_svsub_n_u64_z
-funique-basic-block-section-names
__builtin_sve_svsub_s32_x
__builtin_sve_svsub_s64_x
__builtin_sve_svsub_u16_m
__builtin_sve_svsub_u16_z
__builtin_sve_svsub_u64_z
__builtin_sve_svsub_u8_z
__builtin_sve_svsubhnb_n_u32
__builtin_sve_svsubhnb_n_u64
__builtin_sve_svsubhnt_n_s16
__builtin_sve_svsubhnt_n_u16
__builtin_sve_svsubhnt_s64
__builtin_sve_svsubhnt_u32
__builtin_sve_svsublb_n_u32
__builtin_sve_svsublb_s32
__builtin_sve_svsublb_u32
-funique-section-names
__builtin_sve_svsublt_n_s64
__builtin_sve_svsublt_n_u64
__builtin_sve_svsublt_u32
__builtin_sve_svsubltb_n_s16
__builtin_sve_svsubr_f16_m
__builtin_sve_svsubr_f32_m
__builtin_sve_svsubr_f64_z
__builtin_sve_svsubr_n_f16_m
__builtin_sve_svsubr_n_f64_x
__builtin_sve_svsubr_n_s16_x
__builtin_sve_svsubr_n_s64_m
__builtin_sve_svsubr_n_s64_z
__builtin_sve_svsubr_n_u16_z
__builtin_sve_svsubr_n_u32_z
__builtin_sve_svsubr_n_u8_x
-funroll-all-loops
__builtin_sve_svsubr_s64_m
__builtin_sve_svsubr_s8_m
__builtin_sve_svsubr_u16_z
__builtin_sve_svsubr_u32_x
__builtin_sve_svsubr_u8_x
__builtin_sve_svsubwb_n_s32
__builtin_sve_svsubwb_s16
__builtin_sve_svsubwb_s32
__builtin_sve_svsubwt_n_s64
__builtin_sve_svsubwt_n_u64
__builtin_sve_svsubwt_u32
__builtin_sve_svsudot_lane_s32
__builtin_sve_svtbl2_bf16
q8hq16hq8Us
q2dq4dq2UWi
-funsafe-math-optimizations
__builtin_sve_svtbl2_u16
q4Uiq8Uiq4Ui
__builtin_sve_svtbl_bf16
__builtin_sve_svtbl_f16
__builtin_sve_svtbl_s16
q4iq4iq4Ui
__builtin_sve_svtbl_u16
__builtin_sve_svtbl_u32
__builtin_sve_svtbx_f32
q2dq2dq2dq2UWi
__builtin_sve_svtbx_s64
__builtin_sve_svtbx_s8
__builtin_sve_svtmad_f16
__builtin_sve_svtrn1_b16
q8yq8yq8y
-funwind-tables=
__builtin_sve_svtrn1_u16
__builtin_sve_svtrn1_u8
__builtin_sve_svtrn1q_s16
__builtin_sve_svtrn1q_s64
__builtin_sve_svtrn2_b16
__builtin_sve_svtrn2_b8
__builtin_sve_svtrn2_s16
__builtin_sve_svtrn2_s32
__builtin_sve_svtrn2q_bf16
__builtin_sve_svtrn2q_f64
__builtin_sve_svtrn2q_u16
__builtin_sve_svtrn2q_u64
__builtin_sve_svtssel_f32
__builtin_sve_svuclamp_u32
__builtin_sve_svuclamp_u8
Use constructor homing if we are using limited debug info already
__builtin_sve_svundef2_s32
q4Wiv
__builtin_sve_svundef2_u32
__builtin_sve_svundef2_u64
__builtin_sve_svundef3_f16
q12fv
__builtin_sve_svundef3_s32
q12iv
__builtin_sve_svundef3_u32
q6UWiv
__builtin_sve_svundef4_f16
__builtin_sve_svundef4_f32
__builtin_sve_svundef4_s32
q8Wiv
__builtin_sve_svundef4_u32
-fuse-init-array
__builtin_sve_svundef_f16
q4fv
__builtin_sve_svundef_s32
__builtin_sve_svundef_s64
__builtin_sve_svundef_u32
q2UWiv
__builtin_sve_svunpkhi_s32
__builtin_sve_svunpkhi_s64
__builtin_sve_svunpklo_s64
__builtin_sve_svunpklo_u64
__builtin_sve_svuqadd_n_s32_x
__builtin_sve_svuqadd_n_s64_m
__builtin_sve_svuqadd_s16_m
__builtin_sve_svuqadd_s32_m
__builtin_sve_svuqadd_s64_x
-fuse-linker-plugin
__builtin_sve_svusdot_s32
__builtin_sve_svuzp1_b16
__builtin_sve_svuzp1_f16
__builtin_sve_svuzp1_f64
__builtin_sve_svuzp1_u32
__builtin_sve_svuzp1q_bf16
__builtin_sve_svuzp1q_s32
__builtin_sve_svuzp1q_s64
__builtin_sve_svuzp2_b32
__builtin_sve_svuzp2_bf16
__builtin_sve_svuzp2_s32
__builtin_sve_svuzp2_s8
__builtin_sve_svuzp2q_f16
__builtin_sve_svuzp2q_s16
__builtin_sve_svuzp2q_u32
-fvalidate-ast-input-files-content
q16bUiUi
__builtin_sve_svwhilege_b32_s32
__builtin_sve_svwhilege_b64_s64
__builtin_sve_svwhilege_b64_u64
__builtin_sve_svwhilegt_b16_s64
__builtin_sve_svwhilegt_b32_s32
__builtin_sve_svwhilegt_b64_s64
__builtin_sve_svwhilegt_b64_u32
__builtin_sve_svwhilele_b16_s64
__builtin_sve_svwhilele_b32_s32
__builtin_sve_svwhilele_b64_s64
__builtin_sve_svwhilele_b64_u64
__builtin_sve_svwhilelt_b16_s64
__builtin_sve_svwhilelt_b32_s32
__builtin_sve_svwhilelt_b32_u64
Use the given vector functions library
q16byC*yC*
__builtin_sve_svwhilerw_f32
q16bSsC*SsC*
q16bSiC*SiC*
q16bUsC*UsC*
__builtin_sve_svwhilerw_u64
__builtin_sve_svwhilewr_f16
__builtin_sve_svwhilewr_f32
__builtin_sve_svwhilewr_u32
__builtin_sve_svwrffr
__builtin_sve_svxar_n_s8
__builtin_sve_svxar_n_u32
__builtin_sve_svzip1_b8
__builtin_sve_svzip1_f32
__builtin_sve_svzip1_s8
Enable the loop vectorization passes
__builtin_sve_svzip1q_f64
__builtin_sve_svzip1q_s64
__builtin_sve_svzip1q_u8
__builtin_sve_svzip2_b32
__builtin_sve_svzip2_f64
__builtin_sve_svzip2_s64
__builtin_sve_svzip2_u8
__builtin_sve_svzip2q_bf16
__builtin_sve_svzip2q_s8
__builtin_sve_svzip2q_u64
__builtin_sve_reinterpret_s8_s32
__builtin_sve_reinterpret_s8_s64
__builtin_sve_reinterpret_s8_u32
q16Scq2UWi
q16Scq8y
Export debug info (by testing original Debug Info) failures into specified (JSON) file (should be abs path as we use append mode to insert new JSON objects).
__builtin_sve_reinterpret_s16_s32
q8Ssq2SWi
__builtin_sve_reinterpret_s16_u32
__builtin_sve_reinterpret_s16_u64
__builtin_sve_reinterpret_s16_f32
q8Ssq2d
__builtin_sve_reinterpret_s32_s32
q4Siq4Si
__builtin_sve_reinterpret_s32_u32
q4Siq2UWi
__builtin_sve_reinterpret_s32_f32
__builtin_sve_reinterpret_s32_f64
__builtin_sve_reinterpret_s64_s32
q2SWiq2SWi
__builtin_sve_reinterpret_s64_u32
Enables dead virtual function elimination optimization. Requires -flto=full
__builtin_sve_reinterpret_s64_f32
q2SWiq2d
__builtin_sve_reinterpret_u8_s32
__builtin_sve_reinterpret_u8_s64
__builtin_sve_reinterpret_u8_u64
q16Ucq8h
__builtin_sve_reinterpret_u8_f64
q16Ucq2d
__builtin_sve_reinterpret_u16_s64
__builtin_sve_reinterpret_u16_u16
q8Usq8h
q8Usq8y
q4Uiq8Ss
-fno-modulo-sched-allow-regmoves
In module '
-vdspv2
-fvisibility-externs-nodllstorageclass=
@catch(
const
The visibility for external declarations without an explicit DLL dllstorageclass [-fvisibility-from-dllstorageclass]
apply global symbol visibility to external declarations without an explicit visibility
No version provided in diagnostics
copydoc
-fvisibility-from-dllstorageclass
Invalid diagnostics signature
Malformed sub-block in a diagnostic
-fno-diagnostics-fixit-info
Set the visibility of symbols in the generated code from their DLL storage class
unexpected end of data at offset 0x%zx while reading [0x%llx, 0x%llx)
Invalid encoding
diafile
-fvisibility-global-new-delete-hidden
Diag
CatName
docbookonly
Give global C++ operator new and delete declarations hidden visibility
typeid 
fatal
enddot
-fvisibility-inlines-hidden-static-local-var
vfs.yaml
elseif
When -fvisibility-inlines-hidden is enabled, static variables in inline C++ member functions will also be given hidden visibility by default
x86_64-nacl/lib
%.*g
&lt;
-fvisibility-inlines-hidden
Expected : after object key
-ehcontguard
.lock
Define macro
<macro[=value]>
Program arguments: 
-fvisibility-ms-compat
Generate debug info with external references to clang modules or precompiled headers
--dyld-prefix=
-findirect-virtual-calls
OPTIONS_BLOCK
The string to embed in the Dwarf debug flags record.
-D_HAS_STATIC_RTTI=0
emit the CAS identifier for the tree instead of the full -cc1
Run preprocessor, dump internal rep of tokens
-dsym-dir
hiderefs
moviCompile
-discard-value-names
Discard value names in LLVM IR
/GF-
zvl8192b
NestedRequirement
 UnrollAndJamCount
 PipelineDisabled
-noSPrefixing
Disable any #pragma clang __debug that can lead to crashing behavior. This is meant for testing.
Allocation failed
<dir>
moviAsm
Disable column and caret diagnostics
latexinclude
-defsym
Filename to write DOT-formatted header dependencies to
Add dependent library
-diagnostic-log-file
Use WebAssembly style exceptions
-fwchar-type=
Enable migration to modern ObjC readonly property
manonly
sparc-myriad-rtems
memberof
-debug-info-kind=
-debug-info-macro
--debug=
endmsc
shave::Linker
namespace
/d2FastFail
gfx810
assembler
elf_x86_64_nacl
-cxx-isystem
Include comments in preprocessed output
endparblock
-cuid=
palm
Enable device-side debug info generation. Disables ptxas optimizations.
post
-lpnacl_legacy
Error opening info-output-file '
--cuda-feature=
property
   ---Wall Time---
-coverage-version=
-coverage
unknown
-coverage-data-file=
-coverage-notes-file=
relatedalso
--config
kalimba
System directory for configuration files
remarks
arm-nacl/lib
-compiler-options-dump
-compress-debug-sections=
-fpuv3_df
sparc
default_key
mipsel-nacl/lib
--config-system-dir=
mipsel-nacl/usr/lib
freebsd
-code-completion-at=
--CLASSPATH=
Clear the Clang AST before running backend code generation
showrefby
arm-nacl/usr/include
-cl-uniform-work-group-size
OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable.
skipline
wasi
input
offload
OpenCL only. This option disables all optimizations. By default optimizations are enabled.
subpage
x86_64-nacl/include/c++/v1
OpenCL only. Generate kernel argument metadata.
-cl-no-signed-zeros
tableofcontents
-cl-fp32-correctly-rounded-divide-sqrt
amplification
OpenCL only. Enable or disable OpenCL extensions/optional features. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
/textblock
armelf_nbsd_eabi
Emit Windows Control Flow Guard tables and checks
Include and chain a header file after turning it into PCH
tparam
mipsallegrexel
clang-offload-bundler
-ccc-print-phases
-ccc-
armelfb_nbsd_eabihf
-ccc-install-dir
verbatim
-ccc-gcc-name
=/usr/lib/i386
weakgroup
=/usr/lib/eabi
xmlinclude
-cfguard-no-checks
--comments
-faligned-new=
-fall-intrinsics
=/usr/lib/o32
-falign-functions=
-falign-jumps
Emit an address-significance table
'contents' is not supported for 'directory-remap' entries
=/usr/lib
<new>
-ffunction-attribute-list
Disable ODR hash checking for interfaces
+cdecp3
--extract-api-ignores=
Ignore warnings from system headers (default)
/external:W2
/external:I
avx512cd
-extend-lifetimes=
/usr/libexec/ld.so
dwarf,sjlj,seh,wasm
/experimental:
pentiumpro
-debug
Disable linemarker output and preprocess to stdout
-lc++abi_p
--encoding=
Start emitting warnings for unused driver arguments
-enable-noundef-analysis
tigerlake
Emit pristine LLVM IR from the frontend by not running any LLVM passes at all.Same as -S + -emit-llvm + -disable-llvm-passes.
--dependent-lib=
Generate pre-compiled module file from a C++ module interface
-emit-obj
btver2
  File *
Preserve order of LLVM use-lists when serializing
SceDbgUBSanitizer_stub_weak
Output input source as HTML
-emit-llvm-bc
-emit-header-unit
pconfig
-emit-codegen-only
SceThreadSanitizer_nosubmission_stub_weak
tsxldtrk
<major.minor>
-fblocks-runtime-optional
xsavec
-fbacktrace
-fbinutils-version=
/../../
-fauto-profile
-fautolink
/favor
-fasync-exceptions
 system libraries
Allow certain math function calls to be replaced with an approximately equivalent calculation
-fdepscan-prefix-map-toolchain=
i805
%02X
[:<:]]
<version>
Enable module-based external API notes support
-fansi-escape-codes
SCE_PROSPERO_SDK_DIR
_start
-lto-thin-debug-options=
Make the x10 register call-saved (AArch64 only)
PScpu::Linker
-fc++-abi=
-fcache-compile-job
-fbuiltin-module-map
nine
-fbuild-session-file=
libclang_rt.profile-x86_64_nosubmission.a
-fapprox-func
REG_0x%x
Configure the frontend to use a CAS include tree.
REG_NOMATCH
-fcaret-diagnostics
Make the x18 register call-saved (AArch64 only)
-fcall-saved-x9
-fcas-plugin-option
Path to a shared library implementing the LLVM CAS plugin API.
<pathname>
Instrument control-flow architecture protection
backend
linker
values-xpg4.o
<I/i group>
-fcf-runtime-abi=
-objcmt-atomic-property
solaris::Assembler
<R group>
solaris::Linker
-w64-mingw32
pthread_attr_init failed
-to-binary
<g group>
projectWithError
-fconvert=
__builtin_amdgcn_workgroup_id_x
__builtin_amdgcn_workitem_id_x
__builtin_amdgcn_workgroup_size_x
__builtin_amdgcn_grid_size_y
__builtin_amdgcn_mbcnt_lo
__builtin_amdgcn_s_setreg
__builtin_amdgcn_s_getpc
__builtin_amdgcn_wave_barrier
vIiIiIi
vUiUi
__builtin_amdgcn_ds_gws_barrier
__builtin_amdgcn_atomic_inc32
UWiUWiD*UWiUicC*
__builtin_amdgcn_div_scalef
__builtin_amdgcn_div_fmas
__builtin_amdgcn_div_fixupf
__builtin_amdgcn_sqrt
--gcc-toolchain=
__builtin_amdgcn_log_clampf
__builtin_amdgcn_frexp_mant
__builtin_amdgcn_fractf
UiUiUiUi
__builtin_amdgcn_cubesc
__builtin_amdgcn_s_sleep
__builtin_amdgcn_uicmp
WUiUiUiIi
__builtin_amdgcn_fcmp
WUiffIi
__builtin_amdgcn_readlane
__builtin_amdgcn_ds_faddf
__builtin_amdgcn_ds_consume
__builtin_amdgcn_ubfe
__builtin_amdgcn_cvt_pknorm_i16
-gcodeview
UifUiUi
__builtin_amdgcn_sad_hi_u8
__builtin_amdgcn_mqsad_u32_u8
__builtin_amdgcn_s_dcache_inv_vol
flat-address-space
ffUiUibUi
__builtin_amdgcn_interp_p2
fffUiUiUi
__builtin_amdgcn_rsqh
__builtin_amdgcn_ldexph
__builtin_amdgcn_classh
__builtin_amdgcn_s_memrealtime
iiiIiIiIiIb
__builtin_amdgcn_perm
gfx90a-insts
-gdbx
dd*0d
__builtin_amdgcn_ds_atomic_fadd_f64
ff*0f
__builtin_amdgcn_flat_atomic_fadd_v2f16
__builtin_amdgcn_ds_atomic_fadd_v2bf16
fV2hV2hfIb
__builtin_amdgcn_fdot2_bf16_bf16
sV2sV2ss
UiV2UsV2UsUiIb
dot1-insts
__builtin_amdgcn_sdot8
__builtin_amdgcn_sudot8
UiUiIUi
__builtin_amdgcn_image_bvh_intersect_ray_h
V4UiWUifV4fV4fV4fV4Ui
Generate source-level debug information with dwarf version 3
__builtin_amdgcn_wmma_bf16_16x16x16_bf16_w32
V8iIbV4iIbV4iV8iIb
__builtin_amdgcn_wmma_f32_16x16x16_bf16_w64
__builtin_amdgcn_wmma_f16_16x16x16_f16_w64
__builtin_amdgcn_wmma_i32_16x16x16_iu4_w64
UiUIi
__builtin_amdgcn_read_exec
__builtin_amdgcn_read_exec_lo
__builtin_r600_read_tgid_z
__builtin_r600_read_tidig_z
mai-insts
V16fffV16fIiIiIi
V32fV4hV4hV32fIiIiIi
__builtin_amdgcn_mfma_f32_4x4x4f16
V32iiiV32iIiIiIi
Generate source-level debug information with dwarf version 5
V32fV2sV2sV32fIiIiIi
__builtin_amdgcn_mfma_f32_4x4x2bf16
V32fV4sV4sV32fIiIiIi
V16fV4sV4sV16fIiIiIi
V4dddV4dIiIiIi
__builtin_amdgcn_mfma_i32_16x16x32_i8
V4fV2fV2fV4fIiIiIi
__builtin_amdgcn_mfma_f32_32x32x4_xf32
__builtin_amdgcn_mfma_f32_16x16x32_fp8_fp8
__builtin_amdgcn_mfma_f32_32x32x16_bf8_fp8
__builtin_amdgcn_smfmac_f32_32x32x16_f16
__builtin_amdgcn_smfmac_f32_16x16x32_bf16
__builtin_amdgcn_smfmac_i32_32x32x32_i8
V4fV2iV4iV4fiIiIi
__builtin_amdgcn_smfmac_f32_32x32x32_bf8_bf8
-gdwarf64
__builtin_amdgcn_cvt_pk_f32_fp8
__builtin_amdgcn_cvt_pk_fp8_f32
v100
v102
v108
v111
v116
v117
v124
v127
v132
v134
v140
v143
v146
-gen-cdb-fragment-path
v156
v159
v164
v166
v172
v175
v180
v181
v188
v191
v196
v198
v204
v207
v212
-gen-reproducer
v220
v223
v228
v230
v236
v239
v244
v245
v252
v255
Disable string pooling
s100
s102
s108
s111
s116
s117
s124
s127
flat_scratch
exec_hi
-ggdb0
-ggdb
v238
Type index local -> global map
 BS_Notinbranch
class
enum
DependentSizedArray
-fexperimental-strict-floating-point
BTFTagAttributed
Builtin
Auto
-ggnu-pubnames
linker
-ginline-line-tables
Elaborated
i686
MacroQualified
ConstantMatrix
armhf
-gline-directives-only
SubstTemplateTypeParmPack
/* DISABLES CODE */ (
TypeOf
Typedef
 average variables per function.
apple-a7
ValueTerminated
-gline-tables-only
unsigned char
__fp16
long double
unsigned _Accum
Use internal machine object code emitter.
_Fract
-glldb
unsigned long _Fract
a234
_Sat unsigned _Fract
__attribute__((fallthrough))
char8_t
<unknown type>
-fdebug-dump-symbols
/Gm-
__write_only image1d_t
e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
E-m:e-p:32:32-Fi8-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
8_6A
aapcs16
+thumb-mode
+vfp3sp
+vfp4d16sp
+vfp4
+hwdiv-arm
+cdecp0
__arm__
__ARM_32BIT_STATE
__ARM_PCS
__XSCALE__
__THUMBEL__
__ARM_VFPV2__
__ARM_FPV5__
__ARM_FEATURE_DSP
__ARM_FEATURE_QBIT
__builtin_arm_smultt
__builtin_arm_qadd
UiiUi
-gno-gnu-pubnames
__builtin_arm_usat16
__builtin_arm_uxtab16
__builtin_arm_sadd8
__builtin_arm_shsub8
__builtin_arm_uqsub8
__builtin_arm_usada8
__builtin_arm_sadd16
__builtin_arm_sasx
__builtin_arm_uadd16
__builtin_arm_uhasx
__builtin_arm_uqsax
__builtin_arm_usax
__builtin_arm_smlaldx
__builtin_arm_smlsld
__builtin_arm_smusd
-gno-record-command-line
__builtin_arm_vcvtr_d
vUIiUIivC*
vUIiUIiv*
__builtin_arm_stc2
vUIiUIiUiUIiUIiUIi
UiUIiUIiUIiUIiUIi
__builtin_arm_mrrc
LLUiUIiUIiUIi
__builtin_arm_cmse_TTAT
LLUicC*
__builtin_arm_mve_sqrshrl
__builtin_arm_mve_sqshl
__builtin_arm_mve_uqrshll_sat48
__builtin_arm_mve_urshr
__builtin_arm_mve_vabavq_p_u16
-gno-split-dwarf
__builtin_arm_mve_vabavq_u8
__builtin_arm_mve_vabdq_m_f16
__builtin_arm_mve_vabdq_m_u16
__builtin_arm_mve_vabdq_m_u8
__builtin_arm_mve_vabdq_u8
__builtin_arm_mve_vabdq_x_s16
__builtin_arm_mve_vabdq_x_u8
__builtin_arm_mve_vabsq_f16
__builtin_arm_mve_vabsq_s16
__builtin_arm_mve_vabsq_x_f16
__builtin_arm_mve_vadciq_m_s32
__builtin_arm_mve_vadciq_s32
__builtin_arm_mve_vaddlvaq_p_s32
__builtin_arm_mve_vaddlvaq_u32
__builtin_arm_mve_vaddlvq_s32
--gpu-instrument-lib=
__builtin_arm_mve_vaddq_m_n_s8
__builtin_arm_mve_vaddq_m_n_u8
__builtin_arm_mve_vaddq_m_u32
__builtin_arm_mve_vaddq_n_f16
__builtin_arm_mve_vaddq_n_u32
__builtin_arm_mve_vaddq_s32
__builtin_arm_mve_vaddq_x_f16
__builtin_arm_mve_vaddq_x_f32
__builtin_arm_mve_vaddq_x_n_u32
__builtin_arm_mve_vaddq_x_s32
__builtin_arm_mve_vaddvaq_p_s16
__builtin_arm_mve_vaddvaq_p_s8
__builtin_arm_mve_vaddvaq_s8
__builtin_arm_mve_vaddvaq_u8
__builtin_arm_mve_vaddvq_p_u32
--gpu-use-aux-triple-only
__builtin_arm_mve_vandq_f16
__builtin_arm_mve_vandq_m_f32
__builtin_arm_mve_vandq_m_u32
__builtin_arm_mve_vandq_s16
__builtin_arm_mve_vandq_x_f16
__builtin_arm_mve_vandq_x_s32
__builtin_arm_mve_vbicq_f16
__builtin_arm_mve_vbicq_f32
__builtin_arm_mve_vbicq_m_s16
__builtin_arm_mve_vbicq_m_u16
__builtin_arm_mve_vbicq_n_u16
__builtin_arm_mve_vbicq_s16
__builtin_arm_mve_vbicq_x_f16
__builtin_arm_mve_vbicq_x_s32
__builtin_arm_mve_vbicq_x_u8
Do not emit RTTI data
__builtin_arm_mve_vbrsrq_n_f16
__builtin_arm_mve_vbrsrq_n_s32
__builtin_arm_mve_vbrsrq_x_n_f16
__builtin_arm_mve_vbrsrq_x_n_s16
__builtin_arm_mve_vcaddq_rot270_f16
__builtin_arm_mve_vcaddq_rot270_m_f32
__builtin_arm_mve_vcaddq_rot270_m_u32
__builtin_arm_mve_vcaddq_rot270_m_u8
__builtin_arm_mve_vcaddq_rot270_x_f16
__builtin_arm_mve_vcaddq_rot270_x_s32
__builtin_arm_mve_vcaddq_rot90_f16
__builtin_arm_mve_vcaddq_rot90_m_f16
__builtin_arm_mve_vcaddq_rot90_m_u32
__builtin_arm_mve_vcaddq_rot90_s32
__builtin_arm_mve_vcaddq_rot90_x_f16
Set __regcall as a default calling convention
__builtin_arm_mve_vclsq_m_s16
__builtin_arm_mve_vclsq_s16
__builtin_arm_mve_vclsq_x_s8
__builtin_arm_mve_vclzq_m_s32
__builtin_arm_mve_vclzq_s32
__builtin_arm_mve_vclzq_u32
__builtin_arm_mve_vclzq_x_u16
__builtin_arm_mve_vclzq_x_u32
__builtin_arm_mve_vcmlaq_rot180_f32
__builtin_arm_mve_vcmlaq_rot270_f16
__builtin_arm_mve_vcmlaq_rot90_f32
__builtin_arm_mve_vcmlaq_rot90_m_f32
__builtin_arm_mve_vcmpcsq_m_u8
__builtin_arm_mve_vcmpcsq_n_u8
__builtin_arm_mve_vcmpcsq_u8
Emit RTTI data (default)
__builtin_arm_mve_vcmpeqq_m_n_u16
__builtin_arm_mve_vcmpeqq_m_s16
__builtin_arm_mve_vcmpeqq_m_u8
__builtin_arm_mve_vcmpeqq_n_f32
__builtin_arm_mve_vcmpeqq_n_u8
__builtin_arm_mve_vcmpeqq_s8
__builtin_arm_mve_vcmpgeq_f32
__builtin_arm_mve_vcmpgeq_m_f16
__builtin_arm_mve_vcmpgeq_m_s16
__builtin_arm_mve_vcmpgeq_n_f16
__builtin_arm_mve_vcmpgeq_s16
__builtin_arm_mve_vcmpgeq_s8
__builtin_arm_mve_vcmpgtq_m_n_f32
__builtin_arm_mve_vcmpgtq_m_n_s8
__builtin_arm_mve_vcmpgtq_n_f32
Disable buffer security check
__builtin_arm_mve_vcmphiq_m_n_u32
__builtin_arm_mve_vcmphiq_m_u32
__builtin_arm_mve_vcmphiq_u16
__builtin_arm_mve_vcmphiq_u8
__builtin_arm_mve_vcmpleq_m_n_f32
__builtin_arm_mve_vcmpleq_m_n_s8
__builtin_arm_mve_vcmpleq_n_f32
__builtin_arm_mve_vcmpleq_n_s16
__builtin_arm_mve_vcmpltq_f32
__builtin_arm_mve_vcmpltq_m_n_f16
__builtin_arm_mve_vcmpltq_m_s16
__builtin_arm_mve_vcmpltq_m_s8
__builtin_arm_mve_vcmpltq_s16
__builtin_arm_mve_vcmpneq_f16
__builtin_arm_mve_vcmpneq_m_n_f16
simple,mangled
__builtin_arm_mve_vcmpneq_m_s32
__builtin_arm_mve_vcmpneq_m_u32
__builtin_arm_mve_vcmpneq_n_s32
__builtin_arm_mve_vcmpneq_n_u16
__builtin_arm_mve_vcmpneq_u16
__builtin_arm_mve_vcmulq_f16
__builtin_arm_mve_vcmulq_rot180_f32
__builtin_arm_mve_vcmulq_rot180_m_f16
__builtin_arm_mve_vcmulq_rot270_m_f32
__builtin_arm_mve_vcmulq_rot90_f16
__builtin_arm_mve_vcmulq_rot90_x_f32
__builtin_arm_mve_vcmulq_x_f32
__builtin_arm_mve_vcreateq_s8
__builtin_arm_mve_vcreateq_u64
__builtin_arm_mve_vctp32q_m
split,single
__builtin_arm_mve_vcvtaq_m_u32_f32
__builtin_arm_mve_vcvtaq_u16_f16
__builtin_arm_mve_vcvtaq_x_u32_f32
__builtin_arm_mve_vcvtbq_f32_f16
__builtin_arm_mve_vcvtmq_m_u16_f16
__builtin_arm_mve_vcvtmq_s32_f32
__builtin_arm_mve_vcvtmq_x_u16_f16
__builtin_arm_mve_vcvtmq_x_u32_f32
__builtin_arm_mve_vcvtnq_u16_f16
__builtin_arm_mve_vcvtnq_x_s32_f32
__builtin_arm_mve_vcvtpq_m_u16_f16
__builtin_arm_mve_vcvtpq_s16_f16
__builtin_arm_mve_vcvtpq_x_u16_f16
__builtin_arm_mve_vcvtq_f16_u16
__builtin_arm_mve_vcvtq_f32_u32
-gstabs
__builtin_arm_mve_vcvtq_m_n_u16_f16
__builtin_arm_mve_vcvtq_m_s32_f32
__builtin_arm_mve_vcvtq_n_f32_s32
__builtin_arm_mve_vcvtq_n_s16_f16
__builtin_arm_mve_vcvtq_u16_f16
__builtin_arm_mve_vcvtq_x_f16_u16
__builtin_arm_mve_vcvtq_x_n_f32_s32
__builtin_arm_mve_vcvtq_x_n_f32_u32
__builtin_arm_mve_vcvtq_x_u16_f16
__builtin_arm_mve_vcvttq_f32_f16
__builtin_arm_mve_vddupq_m_n_u32
__builtin_arm_mve_vddupq_m_wb_u16
__builtin_arm_mve_vddupq_wb_u16
__builtin_arm_mve_vddupq_x_n_u16
__builtin_arm_mve_vddupq_x_wb_u8
__builtin_arm_mve_vdupq_m_n_u8
__builtin_arm_mve_vdupq_n_s16
__builtin_arm_mve_vdupq_n_u8
__builtin_arm_mve_vdupq_x_n_f32
__builtin_arm_mve_vdupq_x_n_u8
__builtin_arm_mve_vdwdupq_m_n_u8
__builtin_arm_mve_vdwdupq_n_u32
__builtin_arm_mve_vdwdupq_n_u8
__builtin_arm_mve_vdwdupq_x_wb_u16
__builtin_arm_mve_veorq_f16
__builtin_arm_mve_veorq_m_s32
__builtin_arm_mve_veorq_m_u16
__builtin_arm_mve_veorq_u16
__builtin_arm_mve_veorq_x_f16
__builtin_arm_mve_veorq_x_s8
__builtin_arm_mve_vfmaq_m_n_f32
__builtin_arm_mve_vfmasq_m_n_f16
__builtin_arm_mve_vfmsq_f32
__builtin_arm_mve_vfmsq_m_f32
__builtin_arm_mve_vgetq_lane_s8
__builtin_arm_mve_vgetq_lane_u64
__builtin_arm_mve_vhaddq_m_n_u16
__builtin_arm_mve_vhaddq_m_n_u32
__builtin_arm_mve_vhaddq_m_u8
__builtin_arm_mve_vhaddq_n_s8
__builtin_arm_mve_vhaddq_s32
__builtin_arm_mve_vhaddq_u16
__builtin_arm_mve_vhaddq_x_n_u16
__builtin_arm_mve_vhaddq_x_s16
__builtin_arm_mve_vhaddq_x_u8
-gvms
__builtin_arm_mve_vhcaddq_rot270_x_s32
__builtin_arm_mve_vhcaddq_rot90_m_s32
__builtin_arm_mve_vhcaddq_rot90_x_s16
__builtin_arm_mve_vhcaddq_rot90_x_s8
__builtin_arm_mve_vhsubq_m_n_u8
__builtin_arm_mve_vhsubq_m_s8
__builtin_arm_mve_vhsubq_n_s32
__builtin_arm_mve_vhsubq_n_s8
__builtin_arm_mve_vhsubq_u16
__builtin_arm_mve_vhsubq_x_n_s16
__builtin_arm_mve_vhsubq_x_n_u8
__builtin_arm_mve_vhsubq_x_s32
__builtin_arm_mve_vidupq_m_n_u32
__builtin_arm_mve_vidupq_m_wb_u32
__builtin_arm_mve_vidupq_n_u32
Do not put each data item in its own section (default)
__builtin_arm_mve_vidupq_x_wb_u8
__builtin_arm_mve_viwdupq_m_n_u8
__builtin_arm_mve_viwdupq_n_u32
__builtin_arm_mve_viwdupq_wb_u16
__builtin_arm_mve_viwdupq_x_wb_u16
__builtin_arm_mve_vld1q_f16
__builtin_arm_mve_vld1q_u16
__builtin_arm_mve_vld1q_u32
__builtin_arm_mve_vld1q_z_u16
__builtin_arm_mve_vld2q_f16
__builtin_arm_mve_vld2q_u16
__builtin_arm_mve_vld2q_u8
__builtin_arm_mve_vld4q_u16
__builtin_arm_mve_vldrbq_gather_offset_s16
__builtin_arm_mve_vldrbq_gather_offset_u8
Deprecated (like not passing /EH)
__builtin_arm_mve_vldrbq_s32
__builtin_arm_mve_vldrbq_u32
__builtin_arm_mve_vldrbq_z_u16
__builtin_arm_mve_vldrbq_z_u8
__builtin_arm_mve_vldrdq_gather_base_wb_z_u64
__builtin_arm_mve_vldrdq_gather_offset_s64
__builtin_arm_mve_vldrdq_gather_shifted_offset_u64
__builtin_arm_mve_vldrdq_gather_shifted_offset_z_s64
__builtin_arm_mve_vldrhq_gather_offset_u32
__builtin_arm_mve_vldrhq_gather_offset_z_s32
__builtin_arm_mve_vldrhq_gather_shifted_offset_s32
__builtin_arm_mve_vldrhq_gather_shifted_offset_u32
__builtin_arm_mve_vldrhq_s16
__builtin_arm_mve_vldrhq_u32
__builtin_arm_mve_vldrhq_z_u16
/Gy-
__builtin_arm_mve_vldrwq_gather_base_wb_z_f32
__builtin_arm_mve_vldrwq_gather_base_z_f32
__builtin_arm_mve_vldrwq_gather_offset_u32
__builtin_arm_mve_vldrwq_gather_offset_z_s32
__builtin_arm_mve_vldrwq_gather_shifted_offset_z_s32
__builtin_arm_mve_vldrwq_u32
__builtin_arm_mve_vmaxaq_m_s32
__builtin_arm_mve_vmaxaq_m_s8
__builtin_arm_mve_vmaxavq_s16
__builtin_arm_mve_vmaxnmaq_f16
__builtin_arm_mve_vmaxnmavq_f32
__builtin_arm_mve_vmaxnmavq_p_f32
__builtin_arm_mve_vmaxnmq_x_f32
__builtin_arm_mve_vmaxnmvq_p_f16
__builtin_arm_mve_vmaxq_m_u16
-gz=
__builtin_arm_mve_vmaxq_u8
__builtin_arm_mve_vmaxq_x_s8
__builtin_arm_mve_vmaxvq_p_s32
__builtin_arm_mve_vmaxvq_p_u16
__builtin_arm_mve_vmaxvq_u16
__builtin_arm_mve_vminaq_m_s16
__builtin_arm_mve_vminaq_s8
__builtin_arm_mve_vminavq_p_s16
__builtin_arm_mve_vminnmaq_f32
__builtin_arm_mve_vminnmavq_f16
__builtin_arm_mve_vminnmq_f32
__builtin_arm_mve_vminnmq_m_f32
__builtin_arm_mve_vminnmvq_p_f32
__builtin_arm_mve_vminq_m_s8
__builtin_arm_mve_vminq_m_u32
__builtin_arm_mve_vminq_x_u16
__builtin_arm_mve_vminvq_p_s16
__builtin_arm_mve_vminvq_p_u8
__builtin_arm_mve_vminvq_s32
__builtin_arm_mve_vmladavaq_p_s32
__builtin_arm_mve_vmladavaq_p_u32
__builtin_arm_mve_vmladavaq_u16
__builtin_arm_mve_vmladavaq_u32
__builtin_arm_mve_vmladavaxq_s8
__builtin_arm_mve_vmladavq_p_s8
__builtin_arm_mve_vmladavq_s32
__builtin_arm_mve_vmladavq_u16
__builtin_arm_mve_vmladavxq_s16
__builtin_arm_mve_vmlaldavaq_p_s16
__builtin_arm_mve_vmlaldavaq_s32
__builtin_arm_mve_vmlaldavq_p_s32
__builtin_arm_mve_vmlaldavq_s16
__builtin_arm_mve_vmlaldavxq_p_s32
__builtin_arm_mve_vmlaldavxq_s32
__builtin_arm_mve_vmlaq_m_n_u8
__builtin_arm_mve_vmlaq_n_s8
__builtin_arm_mve_vmlasq_m_n_s32
__builtin_arm_mve_vmlasq_m_n_s8
__builtin_arm_mve_vmlasq_n_u16
__builtin_arm_mve_vmlsdavaq_p_s16
__builtin_arm_mve_vmlsdavaq_s8
__builtin_arm_mve_vmlsdavaxq_p_s32
__builtin_arm_mve_vmlsdavq_p_s32
__builtin_arm_mve_vmlsdavq_s32
__builtin_arm_mve_vmlsdavxq_p_s8
-header-include-filtering=
__builtin_arm_mve_vmlsldavaxq_p_s32
__builtin_arm_mve_vmlsldavq_p_s16
__builtin_arm_mve_vmlsldavxq_p_s32
__builtin_arm_mve_vmlsldavxq_s32
__builtin_arm_mve_vmovlbq_s8
__builtin_arm_mve_vmovlbq_x_s16
__builtin_arm_mve_vmovltq_m_s8
__builtin_arm_mve_vmovltq_m_u16
__builtin_arm_mve_vmovltq_x_s8
__builtin_arm_mve_vmovnbq_m_s16
__builtin_arm_mve_vmovnbq_s32
__builtin_arm_mve_vmovnbq_u32
__builtin_arm_mve_vmovntq_s32
__builtin_arm_mve_vmulhq_m_s16
__builtin_arm_mve_vmulhq_m_u8
set format in which header info is emitted
__builtin_arm_mve_vmulhq_x_s32
__builtin_arm_mve_vmulhq_x_u32
__builtin_arm_mve_vmullbq_int_m_u16
__builtin_arm_mve_vmullbq_int_m_u8
__builtin_arm_mve_vmullbq_int_u8
__builtin_arm_mve_vmullbq_int_x_s8
__builtin_arm_mve_vmullbq_poly_m_p8
__builtin_arm_mve_vmullbq_poly_p16
__builtin_arm_mve_vmulltq_int_m_u16
__builtin_arm_mve_vmulltq_int_s16
__builtin_arm_mve_vmulltq_int_u8
__builtin_arm_mve_vmulltq_int_x_s32
__builtin_arm_mve_vmulltq_poly_m_p8
__builtin_arm_mve_vmulltq_poly_x_p16
__builtin_arm_mve_vmulq_f32
/headerUnit:angle
__builtin_arm_mve_vmulq_m_n_u8
__builtin_arm_mve_vmulq_m_s8
__builtin_arm_mve_vmulq_n_f32
__builtin_arm_mve_vmulq_n_s32
__builtin_arm_mve_vmulq_s32
__builtin_arm_mve_vmulq_u32
__builtin_arm_mve_vmulq_x_n_f32
__builtin_arm_mve_vmulq_x_n_s16
__builtin_arm_mve_vmulq_x_s32
__builtin_arm_mve_vmulq_x_u32
__builtin_arm_mve_vmvnq_m_n_u32
__builtin_arm_mve_vmvnq_m_s32
__builtin_arm_mve_vmvnq_n_s32
__builtin_arm_mve_vmvnq_s16
__builtin_arm_mve_vmvnq_u8
Display help for hidden options
__builtin_arm_mve_vmvnq_x_u16
__builtin_arm_mve_vnegq_f16
__builtin_arm_mve_vnegq_m_s32
__builtin_arm_mve_vnegq_s16
__builtin_arm_mve_vnegq_x_s32
__builtin_arm_mve_vornq_f32
__builtin_arm_mve_vornq_m_s8
__builtin_arm_mve_vornq_m_u16
__builtin_arm_mve_vornq_u32
__builtin_arm_mve_vornq_x_f32
__builtin_arm_mve_vornq_x_u32
__builtin_arm_mve_vorrq_f16
__builtin_arm_mve_vorrq_m_n_u16
__builtin_arm_mve_vorrq_m_s32
__builtin_arm_mve_vorrq_m_u8
--hip-device-lib-path=
__builtin_arm_mve_vorrq_u32
__builtin_arm_mve_vorrq_x_f32
__builtin_arm_mve_vorrq_x_u32
__builtin_arm_mve_vpnot
__builtin_arm_mve_vpselq_s8
__builtin_arm_mve_vpselq_u64
__builtin_arm_mve_vqabsq_s16
__builtin_arm_mve_vqabsq_s32
__builtin_arm_mve_vqaddq_m_n_u8
__builtin_arm_mve_vqaddq_m_s8
__builtin_arm_mve_vqaddq_n_s32
__builtin_arm_mve_vqaddq_n_u16
__builtin_arm_mve_vqaddq_u16
__builtin_arm_mve_vqdmladhq_m_s16
__builtin_arm_mve_vqdmladhq_s8
Link clang-offload-bundler bundles for HIP
__builtin_arm_mve_vqdmlahq_m_n_s32
__builtin_arm_mve_vqdmlahq_n_s32
__builtin_arm_mve_vqdmlashq_n_s16
__builtin_arm_mve_vqdmlashq_n_s8
__builtin_arm_mve_vqdmlsdhq_s8
__builtin_arm_mve_vqdmlsdhxq_m_s8
__builtin_arm_mve_vqdmulhq_m_n_s32
__builtin_arm_mve_vqdmullbq_n_s32
__builtin_arm_mve_vqdmullbq_s32
__builtin_arm_mve_vqdmulltq_n_s32
__builtin_arm_mve_vqmovnbq_m_s16
-fdepscan-share-stop=
HIP version in the format of major.minor.patch
Unable to resolve location list offset pair: Base address not defined
, flags = 0x%02hhx
 filenum: 
7400
macro header: version = 0x%04hx
, debug_line_offset = 0x%0*llx
0x%08llx:
 - lineno: 
__builtin_arm_mve_vqdmlsdhq_m_s8
path to a pass plugin for HIP to SPIR-V passes.
length = 
__builtin_arm_mve_vqdmulhq_n_s16
%-8s
range list at offset 0x%llx
ns_returns_autoreleased
%08llx %016llx %016llx
Entry point name for hlsl
%08llx <End of list>
Loclist table not found
naked
NULL
__builtin_arm_mve_vqnegq_m_s8
HLSL only. Disables all standard includes containing non-native compiler types and functions.
DW_APPLE_PROPERTY_0x%llx
e5500
__builtin_arm_mve_vqrdmlahq_m_n_s16
<empty>
0x%08llx -> 
nocommon
 <invalid base_type ref: 0x%llx>
/hotpatch
__builtin_arm_mve_vqrdmulhq_m_n_s16
Use INTEGER(KIND=8) for the result type in size-related intrinsics
pwr4
__builtin_arm_mve_vqrshlq_m_n_s16
%2.2x 
cu + 0x%4.4x
cu + 0x%8.8llx
indexed (0x%x) rangelist = 
__builtin_arm_mve_vqrshrnbq_n_s16
Invalid form for string attribute
Unsupported form for string attribute
no_builtin
power6x
 offset 
  Types CU list offset = {0:x}, has {1} entries:
-ffat-lto-objects
  Symbol table offset = 0x%x, size = %lld, filled slots:
    %d: Name offset = 0x%x, CU vector offset = 0x%x
gnu::nodebug
Create hotpatchable image
pwr9
Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path
unrecognised %s table version %hu in table at offset 0x%llx
gnu::noreturn
__builtin_arm_mve_vqshrnbq_n_u16
, length = 
powerpc64
clang::noinline
Add directory to the API notes search path referenced by module name
__builtin_arm_mve_vqdmulltq_m_s32
-flax-vector-conversions=
STR_OFFSETS
MACRO
__builtin_arm_mve_vqsubq_n_s8
----- ------------------
Include API notes file
__builtin_arm_mve_vreinterpretq_f16_u32
no_stack_protector
-fno-repack-arrays
__builtin_arm_mve_vreinterpretq_s16_s8
__builtin_arm_mve_vreinterpretq_s16_u8
__builtin_arm_mve_vreinterpretq_s64_s16
insufficient space for 32 bit header prefix
Enable builtin #include directories even when -nostdinc is used before or after -ibuiltininc. Using -nobuiltininc after the option disables it
Units[%d] - start offset: 0x%08llx 
__builtin_arm_mve_vreinterpretq_s8_u16
The offset into the .debug_abbrev section is not valid.
The address size is unsupported.
Simplified template DW_AT_name could not be reconstituted:
+reserve-x16
Compilation unit without DIE.
Add directory to AFTER include search path
) do not match.
clang::os_consumes_this
Subprogram with call site entry has no DW_AT_call attribute:
 attributes.
+reserve-x29
clang::os_returns_retained
-fno-ropi
-ibuiltininc
overlapping index entries for entries {0:x16} and {1:x16} for column {2}
clang::os_returns_retained_on_zero
__builtin_arm_mve_vrev64q_m_u16
DW_AT_ranges offset is beyond 
DIE has invalid DW_AT_ranges encoding:
-save-restore
DIE contains invalid DWARF expression:
Add directory to SYSTEM framework search path
__builtin_arm_mve_vrhaddq_m_u16
-fno-ripa
 with incompatible tag 
objc_class_stub
DIE with tag 
objc_complete_definition
-fno-rtlib-add-rpath
-iframeworkwithsysroot
__builtin_arm_mve_vrmlsldavhaq_s32
-flax-vector-conversions
two compile unit DIEs, 
, have the same DW_AT_stmt_list section offset:
__builtin_arm_mve_vrmulhq_x_s32
clang::objc_exception
Verifying .debug_line...
-image_base
 with invalid encoding
__builtin_arm_mve_vrndpq_f32
Hash[%d] has invalid HashData offset: 0x%08llx.
-Av9a
 of DIE[
-fdepscan-share=
-fno-rtti-data
--imacros=
Name Index @ {0:x} does not contain a hash table.
-Av9d
__builtin_arm_mve_vrshlq_n_u16
NameIndex @ {0:x}: Abbreviation {1:x}: DW_IDX_type_hash uses an unexpected form {2} (should be {3}).
clang::objc_class_stub
objc_non_runtime_protocol
NameIndex @ {0:x}: Abbreviation {1:x} contains multiple {2} attributes.
--include-barrier
Name Index @ {0:x}: Unable to get string associated with name {1}.
Name Index @ {0:x}: Entry @ {1:x} contains an invalid CU index ({2}).
Unknown DW_SECT value 0
clang::objc_requires_property_definitions
DW_SECT_STR_OFFSETS
__builtin_arm_mve_vrshrq_x_n_u8
DW_SECT_TYPES
--include-directory-after
DW_SECT_LOC
-Av8plusd
__builtin_arm_mve_vsetq_lane_u32
__builtin_arm_mve_vshlcq_m_s32
Invalid data was encountered while parsing the file
objc_runtime_visible
Invalid section index
--include-directory
load commands extend past the end of the file
Disable generation of RTTI data
Mach-O headers
__read_only
LC_DATA_IN_CODE
__builtin_arm_mve_vshlq_m_s32
-vector
Include precompiled header file
LC_DYLD_INFO
__builtin_arm_mve_vshlq_r_s32
LC_CODE_SIGNATURE
LC_DYLD_CHAINED_FIXUPS
chained fixups
AVX2
LC_SEGMENT_64
--include-prefix
LC_LAZY_LOAD_DYLIB
clang::opencl_global
LC_LOAD_DYLINKER
LC_DYLD_ENVIRONMENT
__builtin_arm_mve_vshrntq_n_s32
-include-pch
more than one LC_MAIN command
--include-with-prefix-after
skylake-avx512
__local
LC_ENCRYPTION_INFO command 
sub_umbrella
 LC_SUB_LIBRARY cmdsize too small
__builtin_arm_mve_vsriq_n_u8
 LC_SUB_CLIENT cmdsize too small
--include-with-prefix-before
LC_ROUTINES command 
-fno-safe-buffer-usage-suggestions
LC_UNIXTHREAD
more than one LC_UNIXTHREAD command
core-avx2
clang::overloadable
-fno-sanitize-address-outline-instrumentation
--include-with-prefix-after=
__builtin_arm_mve_vstrbq_p_u16
iextdefsym plus nextdefsym in LC_DYSYMTAB load command extends past the end of the symbol table
iundefsym in LC_DYSYMTAB load command extends past the end of the symbol table
__builtin_arm_mve_vstrbq_scatter_offset_u32
__LLVM
clang::param_typestate
Unknown
-include
__builtin_arm_mve_vst4q_u8
__builtin_arm_mve_vstrhq_s32
X86_64_RELOC_GOT
i486
X86_64_RELOC_TLV
--include-with-prefix=
ARM_RELOC_PAIR
Make the next included directory (-I or -F) an indexer header map
ARM_RELOC_BR24
-ffile-reproducible
ARM_RELOC_HALF_SECTDIFF
ARM64_RELOC_UNSIGNED
__builtin_arm_mve_vstrwq_scatter_base_wb_p_s32
ARM64_RELOC_PAGE21
ARM64_RELOC_PAGEOFF12
Ignore macros during indexing
ARM64_RELOC_TLVP_LOAD_PAGE21
__builtin_arm_mve_vsubq_m_u16
+ssse3
+retpoline-indirect-calls
clang::pass_object_size
+retpoline-indirect-branches
PPC_RELOC_LOCAL_SECTDIFF
Ignore symbols from imported pcm modules
Mach-O arm
clang::preserve_all
getSymbolIndex() called with no symbol table symbol
Mach-O 64-bit x86-64
Mach-O arm64
__builtin_arm_mve_vuninitializedq_polymorphic_u8
x86_64-apple-darwin
Ignore symbols from system headers
armv5e
Disable poisoning array cookies when using custom operator new[] in AddressSanitizer
armv6
armv6-apple-darwin
-sse
clang::enforce_read_only_placement
Use the target's platform-specific path separator character when expanding the __FILE__ macro
-fno-sanitize-address-use-odr-indicator
arm64e-apple-darwin
arm64_32-apple-darwin
ppc-apple-darwin
-many
 too big and extends past end of trie data
__builtin_arm_mve_vcmpgeq_m
 in flags: 0x
Enable indexing with the specified data store path
__builtin_arm_mve_vcmulq_m
release_handle
__builtin_arm_mve_vcmulq_rot270
address 
 where actual size was: 0x
byte for count of childern in export trie data at node: 0x
-fdepscan=
__builtin_arm_mve_vcvtq_m
 back to node: 0x
clang::requires_shared_capability
for REBASE_OPCODE_DO_REBASE_ULEB_TIMES 
for REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB 
__builtin_arm_mve_vhcaddq_rot90_m
BIND_OPCODE_SET_DYLIB_ORDINAL_IMM not allowed in weak bind table for opcode at: 0x
for BIND_OPCODE_SET_DYLIB_ORDINAL_IMM bad library ordinal: 
-init-only
for BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB bad library ordinal: 
__builtin_arm_mve_viwdupq_u8
for BIND_OPCODE_SET_TYPE_IMM bad bind type: 
for BIND_OPCODE_ADD_ADDR_ULEB 
__builtin_arm_mve_vldrdq_gather_shifted_offset
-ffine-grained-bitfield-accesses
for BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB missing preceding BIND_OPCODE_SET_DYLIB_ORDINAL_* for opcode at: 0x
-init
BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED not allowed in lazy bind table for opcode at: 0x
for BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED missing preceding BIND_OPCODE_SET_DYLIB_ORDINAL_* for opcode at: 0x
clang::shared_locks_required
malloc
for BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB 
__builtin_arm_mve_vminnmvq_p
-fno-sanitize-blacklist
--export-symbols
__builtin_arm_mve_vmladavxq_p
 bad ordinal: 0x
Only execute frontend initialization
 is past end of the same page)
NewState
speculative_load_hardening
-integrated-as
 extends past end 
__builtin_arm_mve_vmovnbq_m
 overlaps with chained fixups header
bad chained fixups: seg_info_offset 
 starts past end 
picking up libstdc++ headers is unimplemented on AIX
bad chained fixups: chain starts section 
-internal-externc-isystem
bad chained fixups: chain start 
swiftasynccall
__builtin_arm_mve_vqdmlahq_m
__builtin_arm_mve_vqdmlsdhq_m
Enable LTO in 'full' mode
-fno-sanitize-coverage=
__swift5_assocty
__builtin_arm_mve_vqdmulltq_m
__builtin_arm_mve_vqrdmlahq_m
__builtin_arm_mve_vqrdmlsdhq_m
Structure read out-of-range
 LC_SYMTAB cmdsize too small
 extends past the end of the file
-iprefix
symoff field plus nsyms field times sizeof(
crt0.o
__builtin_arm_mve_vqshrntq
string table
, overlaps 
clang::swift_indirect_result
more than one LC_DYSYMTAB command
-iquote
table of contents
__builtin_arm_mve_vrev64q_m
modtaboff field plus nmodtab field times sizeof(
indirectsymoff field of LC_DYSYMTAB command 
swiftcall
__builtin_arm_mve_vrndaq
local relocation table
-isysroot
 cmdsize too small
gnu::tls_model
dataoff field of 
-flto=
bind_off field plus bind_size field of 
target_clones
weak_bind_off field plus weak_bind_size field of 
-isystem-after
__builtin_arm_mve_vshlltq
__builtin_arm_mve_vshlq_x_n
export_off field of 
-fno-sanitize-hwaddress-experimental-aliasing
 library name extends past the end of the load command
more than one LC_VERSION_MIN_MACOSX, LC_VERSION_MIN_IPHONEOS, LC_VERSION_MIN_TVOS or LC_VERSION_MIN_WATCHOS command
Model
-isystem
 LC_BUILD_VERSION_COMMAND has incorrect cmdsize
__builtin_arm_mve_vstrwq_p
 LC_RPATH path.offset field extends past the end of the load command
 LC_RPATH library name extends past the end of the load command
__builtin_arm_cde_cx1a
__builtin_arm_cde_cx2a
thiscall
-ivfsoverlay
 does not match number of strings
__builtin_arm_cde_vcx1q_m_f32
 count not x86_THREAD_STATE32_COUNT for flavor number 
 unknown flavor (
) for flavor number 
Add directory to SYSTEM include search path
 x86_THREAD_STATE extends past end of command in 
-ivfsstatcache
 x86_EXCEPTION_STATE extends past end of command in 
__builtin_arm_cde_vcx2q_m_impl_u64
 count not x86_EXCEPTION_STATE64_COUNT for flavor number 
ROCM_PATH
 ARM_THREAD_STATE extends past end of command in 
Overlay the virtual filesystem described by file over the real file system
 ARM_THREAD_STATE64 extends past end of command in 
-iwithprefixbefore
unknown cputype (
use_handle
__builtin_arm_cde_vcx3q_impl_s64
gnu::used
uleb128 too big for uint64
__builtin_arm_cde_vcx3q_m_impl_s16
-flto
__builtin_arm_cde_vcx3q_u8_impl_f16
offset field of section 
 less than the segment's vmaddr
addr field plus size of section 
vecreturn
 fileoff field plus filesize field in 
__ldrexd
-fdepscan
Disable detection of uninitialized parameters and return values
Add directory to SYSTEM include search path, absolute paths are relative to -isysroot
__flash
__attribute__((address_space(2)))
__flash4
__attribute__((address_space(6)))
__AVR_ATtiny15__
__AVR_AT90S2313__
__AVR_AT86RF401__
__AVR_AT90S4434__
__AVR_ATA6616c__
__AVR_ATtiny13A__
__AVR_ATtiny44__
__AVR_ATtiny84A__
__AVR_ATtiny261A__
__AVR_ATtiny441__
__AVR_ATtiny43U__
__AVR_ATtiny828__
__AVR_ATtiny167__
__AVR_AT90USB162__
__AVR_ATmega32U2__
__AVR_ATA6289__
__AVR_ATmega48__
__AVR_ATmega48A__
__AVR_ATmega88PA__
__AVR_ATmega8535__
__AVR_AT90PWM3__
__AVR_AT90PWM81__
__AVR_ATA5795__
__AVR_ATA6614Q__
__AVR_ATmega161__
Add directory to include search path
__AVR_ATmega165P__
__AVR_ATmega168A__
__AVR_ATmega169A__
__AVR_ATmega169PA__
__AVR_ATmega324PA__
__AVR_ATmega325A__
__AVR_ATmega3250P__
__AVR_ATmega3250PA__
__AVR_ATmega329PA__
__AVR_ATmega3290P__
__AVR_ATmega640__
__AVR_ATmega644A__
__AVR_ATmega649__
__AVR_ATmega6450__
__AVR_ATmega6490P__
__AVR_ATmega32HVBREVB__
__AVR_AT90CAN32__
__AVR_ATmega32C1__
__AVR_ATmega16M1__
__AVR_AT90USB646__
__AVR_AT94K__
__AVR_ATmega1281__
__AVR_ATmega1284__
__AVR_AT90USB1287__
__AVR_ATmega256RFR2__
__AVR_ATxmega16D4__
__AVR_ATxmega32A4U__
__AVR_ATxmega16E5__
__AVR_ATxmega64A3U__
__AVR_ATxmega64C3__
/kernel-
__AVR_ATxmega128C3__
__AVR_ATxmega192A3__
__AVR_ATxmega256A3U__
__AVR_ATxmega256A3BU__
__AVR_ATxmega128A1U__
__AVR_ATtiny5__
__AVR_ATtiny102__
__AVR_ATtiny104__
__AVR_ATtiny406__
__AVR_ATtiny807__
__AVR_ATtiny414__
__AVR_ATtiny1614__
__AVR_ATtiny817__
__AVR_ATtiny1624__
__AVR_ATmega1608__
Require math functions to indicate errors by setting errno
-lazy_framework
weak-symbols
__BPF__
__CSKYABI__
__CSKY_DSPV2__
__CSKY_3E3R1__
fr10
fr15
fr17
fr23
fr26
fr31
svbr
vr10
vr15
vr16
vr23
vr26
Disable function entry/exit instrumentation in ThreadSanitizer
DIRECTX
__QDSP6_V5__
__HEXAGON_V55__
hexagonv62
hexagonv66
hexagonv67
hexagonv68
__HVX_ARCH__
__HVXDBL__
+hvxv
r1:0
r15:14
r21:20
r31:30
--library-directory=
c5:4
c9:8
c21:20
c27:26
upcyclehi
pktcountlo
pktcount
v1:0
v13:12
v19:18
v29:28
/link
v27:24
v5|v55|v60|v62|v65|v66|v67|v68|v69
__builtin_brev_ldh
__builtin_brev_lduh
__builtin_circ_ldd
i*i*i*iIi
__builtin_circ_ldb
c*c*c*iIi
__builtin_brev_sth
__builtin_brev_stb
i*i*iiIi
s*s*iiIi
__builtin_HEXAGON_L2_loadrb_pci
__builtin_HEXAGON_L2_loadri_pci
iv*ivC*
-load
__builtin_HEXAGON_S2_storerh_pci
__builtin_HEXAGON_S2_storerd_pci
__builtin_HEXAGON_S2_storerf_pcr
__builtin_HEXAGON_S2_storerd_pcr
__builtin_HEXAGON_V6_vmaskedstoreq
__builtin_HEXAGON_V6_vmaskedstorenq
__builtin_HEXAGON_V6_vmaskedstorenq_128B
__builtin_HEXAGON_V6_vmaskedstorentq_128B
__builtin_HEXAGON_V6_vrmpybub_rtt_acc
V64iV64iV32iLLi
__builtin_HEXAGON_A2_abs
LLiLLi
__builtin_HEXAGON_A2_addh_h16_ll
__builtin_HEXAGON_A2_addh_h16_sat_lh
__builtin_HEXAGON_A2_addh_l16_sat_ll
-m16
__builtin_HEXAGON_A2_andir
__builtin_HEXAGON_A2_asrh
__builtin_HEXAGON_A2_combineii
__builtin_HEXAGON_A2_combinew
__builtin_HEXAGON_A2_maxup
__builtin_HEXAGON_A2_minp
__builtin_HEXAGON_A2_negsat
__builtin_HEXAGON_A2_not
__builtin_HEXAGON_A2_sat
__builtin_HEXAGON_A2_satub
__builtin_HEXAGON_A2_subh_h16_lh
__builtin_HEXAGON_A2_subh_h16_sat_hh
__builtin_HEXAGON_A2_subh_l16_sat_hl
__builtin_HEXAGON_A2_subri
__builtin_HEXAGON_A2_svaddh
-m64
__builtin_HEXAGON_A2_sxtb
__builtin_HEXAGON_A2_tfr
__builtin_HEXAGON_A2_tfrpi
__builtin_HEXAGON_A2_tfrsi
__builtin_HEXAGON_A2_vaddb_map
__builtin_HEXAGON_A2_vaddub
__builtin_HEXAGON_A2_vavgh
__builtin_HEXAGON_A2_vavghcr
__builtin_HEXAGON_A2_vavguwr
__builtin_HEXAGON_A2_vavgwr
__builtin_HEXAGON_A2_vcmphgt
__builtin_HEXAGON_A2_vcmpweq
__builtin_HEXAGON_A2_vmaxub
__builtin_HEXAGON_A2_vmaxw
__builtin_HEXAGON_A2_vminuw
-m68030
__builtin_HEXAGON_A2_vraddub
__builtin_HEXAGON_A2_vrsadub
__builtin_HEXAGON_A2_vsubub
__builtin_HEXAGON_A2_vsubuhs
__builtin_HEXAGON_A2_zxth
__builtin_HEXAGON_A4_bitsplit
__builtin_HEXAGON_A4_cmpbeq
__builtin_HEXAGON_A4_cmpbeqi
__builtin_HEXAGON_A4_cmphgt
__builtin_HEXAGON_A4_cmphgtui
__builtin_HEXAGON_A4_cround_ri
__builtin_HEXAGON_A4_modwrapu
__builtin_HEXAGON_A4_rcmpneqi
__builtin_HEXAGON_A4_round_rr
__builtin_HEXAGON_A4_vcmpbeq_any
-mabi=ieeelongdouble
__builtin_HEXAGON_A4_vcmphgtui
__builtin_HEXAGON_A4_vcmpwgtui
__builtin_HEXAGON_A4_vrmaxw
__builtin_HEXAGON_A4_vrminuh
__builtin_HEXAGON_C2_andn
__builtin_HEXAGON_C2_bitsclri
__builtin_HEXAGON_C2_cmpgei
__builtin_HEXAGON_C2_cmpgeui
__builtin_HEXAGON_C2_cmplt
__builtin_HEXAGON_C2_mux
__builtin_HEXAGON_C2_muxri
__builtin_HEXAGON_C2_not
__builtin_HEXAGON_C2_vitpack
__builtin_HEXAGON_C2_xor
__builtin_HEXAGON_C4_cmplte
-mabi=vec-default
__builtin_HEXAGON_C4_nbitsclr
__builtin_HEXAGON_C4_or_and
dLLi
fLLi
__builtin_HEXAGON_F2_conv_df2ud_chop
__builtin_HEXAGON_F2_conv_df2w
__builtin_HEXAGON_F2_conv_sf2df
__builtin_HEXAGON_F2_conv_ud2df
__builtin_HEXAGON_F2_conv_uw2sf
__builtin_HEXAGON_F2_dfcmpeq
__builtin_HEXAGON_F2_dfcmpge
__builtin_HEXAGON_F2_sfadd
__builtin_HEXAGON_F2_sfcmpeq
__builtin_HEXAGON_F2_sfcmpge
-mabi=
__builtin_HEXAGON_F2_sffms_lib
__builtin_HEXAGON_F2_sfimm_p
__builtin_HEXAGON_M2_acci
__builtin_HEXAGON_M2_cmaci_s0
__builtin_HEXAGON_M2_cmacsc_s1
__builtin_HEXAGON_M2_cmpyrs_s0
__builtin_HEXAGON_M2_cmpys_s1
__builtin_HEXAGON_M2_cmpysc_s0
__builtin_HEXAGON_M2_dpmpyss_nac_s0
__builtin_HEXAGON_M2_dpmpyuu_acc_s0
__builtin_HEXAGON_M2_hmmpyh_s1
__builtin_HEXAGON_M2_hmmpyl_s1
__builtin_HEXAGON_M2_mmachs_rs1
__builtin_HEXAGON_M2_mmacls_rs0
__builtin_HEXAGON_M2_mmacuhs_rs1
-Mach
__builtin_HEXAGON_M2_mmpyh_rs1
__builtin_HEXAGON_M2_mmpyl_rs0
__builtin_HEXAGON_M2_mmpyuh_rs1
__builtin_HEXAGON_M2_mmpyuh_s1
__builtin_HEXAGON_M2_mpy_acc_hh_s1
__builtin_HEXAGON_M2_mpy_acc_lh_s0
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s0
__builtin_HEXAGON_M2_mpy_hh_s1
__builtin_HEXAGON_M2_mpy_lh_s0
__builtin_HEXAGON_M2_mpy_nac_hh_s1
__builtin_HEXAGON_M2_mpy_nac_hl_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s0
__builtin_HEXAGON_M2_mpy_rnd_hh_s0
Main file name to use for debug info and source if missing
__builtin_HEXAGON_M2_mpy_sat_hh_s1
__builtin_HEXAGON_M2_mpy_sat_lh_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_up_s1
__builtin_HEXAGON_M2_mpyd_acc_hh_s1
__builtin_HEXAGON_M2_mpyd_acc_ll_s0
__builtin_HEXAGON_M2_mpyd_acc_ll_s1
__builtin_HEXAGON_M2_mpyd_ll_s0
__builtin_HEXAGON_M2_mpyd_nac_hh_s1
__builtin_HEXAGON_M2_mpyd_nac_ll_s0
__builtin_HEXAGON_M2_mpyd_rnd_hh_s0
__builtin_HEXAGON_M2_mpyd_rnd_ll_s0
__builtin_HEXAGON_M2_mpysmi
__builtin_HEXAGON_M2_mpyu_acc_hl_s1
Specify the boundary's size to align branches
__builtin_HEXAGON_M2_mpyu_hl_s1
__builtin_HEXAGON_M2_mpyu_ll_s0
__builtin_HEXAGON_M2_mpyu_nac_hl_s1
__builtin_HEXAGON_M2_mpyu_nac_lh_s1
__builtin_HEXAGON_M2_mpyud_acc_hl_s0
__builtin_HEXAGON_M2_mpyud_acc_lh_s1
__builtin_HEXAGON_M2_mpyud_hl_s0
__builtin_HEXAGON_M2_mpyud_hl_s1
__builtin_HEXAGON_M2_mpyud_nac_hl_s0
__builtin_HEXAGON_M2_mpyud_nac_lh_s1
__builtin_HEXAGON_M2_naccii
__builtin_HEXAGON_M2_vabsdiffh
__builtin_HEXAGON_M2_vcmpy_s1_sat_i
__builtin_HEXAGON_M2_vdmacs_s1
__builtin_HEXAGON_M2_vdmpys_s0
Align doubles to two words in structs (x86 only)
__builtin_HEXAGON_M2_vmpy2es_s0
__builtin_HEXAGON_M2_vmpy2s_s0pack
__builtin_HEXAGON_M2_vraddh
__builtin_HEXAGON_M2_vrcmaci_s0
__builtin_HEXAGON_M2_vrcmpyr_s0
__builtin_HEXAGON_M2_vrcmpys_s1
__builtin_HEXAGON_M2_xor_xacc
__builtin_HEXAGON_M4_and_and
__builtin_HEXAGON_M4_cmpyr_whc
iUIiiUIi
iUIiii
__builtin_HEXAGON_M4_nac_up_s1_sat
__builtin_HEXAGON_M4_pmpyw_acc
__builtin_HEXAGON_M4_vrmpyeh_acc_s0
__builtin_HEXAGON_M4_vrmpyoh_acc_s1
-maltivec
__builtin_HEXAGON_M5_vdmpybsu
__builtin_HEXAGON_M5_vmpybsu
__builtin_HEXAGON_M5_vrmpybuu
__builtin_HEXAGON_S2_asl_i_p
__builtin_HEXAGON_S2_asl_i_p_or
__builtin_HEXAGON_S2_asl_i_r_acc
__builtin_HEXAGON_S2_asl_i_r_xacc
__builtin_HEXAGON_S2_asl_i_vh
__builtin_HEXAGON_S2_asl_r_p_xor
__builtin_HEXAGON_S2_asl_r_r_and
__builtin_HEXAGON_S2_asl_r_vw
__builtin_HEXAGON_S2_asr_i_p_acc
__builtin_HEXAGON_S2_asr_i_r
__builtin_HEXAGON_S2_asr_i_r_nac
__builtin_HEXAGON_S2_asr_i_svw_trun
-mamx-int8
__builtin_HEXAGON_S2_asr_r_r
__builtin_HEXAGON_S2_asr_r_r_nac
__builtin_HEXAGON_S2_asr_r_vw
__builtin_HEXAGON_S2_brevp
__builtin_HEXAGON_S2_clbnorm
__builtin_HEXAGON_S2_clrbit_r
__builtin_HEXAGON_S2_deinterleave
__builtin_HEXAGON_S2_extractu
iiiUIiUIi
__builtin_HEXAGON_S2_insertp
__builtin_HEXAGON_S2_lsl_r_p
__builtin_HEXAGON_S2_lsl_r_p_and
__builtin_HEXAGON_S2_lsl_r_r_and
__builtin_HEXAGON_S2_lsl_r_vh
__builtin_HEXAGON_S2_lsr_i_p_nac
-march=
__builtin_HEXAGON_S2_lsr_i_r_xacc
__builtin_HEXAGON_S2_lsr_r_p
__builtin_HEXAGON_S2_lsr_r_p_xor
__builtin_HEXAGON_S2_lsr_r_r_acc
__builtin_HEXAGON_S2_packhl
__builtin_HEXAGON_S2_setbit_r
__builtin_HEXAGON_S2_svsathb
__builtin_HEXAGON_S2_svsathub
__builtin_HEXAGON_S2_tstbit_i
__builtin_HEXAGON_S2_valignrb
__builtin_HEXAGON_S2_vrndpackwhs
__builtin_HEXAGON_S2_vsathb_nopack
__builtin_HEXAGON_S2_vsatwuh_nopack
__builtin_HEXAGON_S2_vspliceib
-fdiagnostics-color=
Make assembler warnings fatal
__builtin_HEXAGON_S4_andi_asl_ri
__builtin_HEXAGON_S4_clbpaddi
__builtin_HEXAGON_S4_extractp_rp
__builtin_HEXAGON_S4_ntstbit_i
__builtin_HEXAGON_S4_ori_lsr_ri
__builtin_HEXAGON_S4_subi_asl_ri
LLiLLiLLiiUIi
__builtin_HEXAGON_S4_vxaddsubh
__builtin_HEXAGON_S5_asrhub_sat
__builtin_HEXAGON_Y2_dccleana
__builtin_HEXAGON_Y4_l2fetch
__builtin_HEXAGON_Y5_l2fetch
__builtin_HEXAGON_S6_rol_i_p_nac
__builtin_HEXAGON_S6_rol_i_r
__builtin_HEXAGON_S6_rol_i_r_xacc
-mavx2
__builtin_HEXAGON_F2_dfadd
__builtin_HEXAGON_M2_mnaci
__builtin_HEXAGON_A7_croundd_rr
__builtin_HEXAGON_F2_dfmax
__builtin_HEXAGON_F2_dfmpyll
__builtin_HEXAGON_M7_dcmpyiwc
__builtin_HEXAGON_M7_dcmpyrwc_acc
__builtin_HEXAGON_M7_vdmpy
__builtin_HEXAGON_M7_wcmpyrw_rnd
__builtin_HEXAGON_Y6_dmlink
__builtin_HEXAGON_Y6_dmstart
__builtin_HEXAGON_V6_extractw
__builtin_HEXAGON_V6_hi_128B
__builtin_HEXAGON_V6_lo_128B
V32ii
-mavx512cd
__builtin_HEXAGON_V6_pred_not_128B
__builtin_HEXAGON_V6_pred_or_128B
__builtin_HEXAGON_V6_pred_scalar2_128B
__builtin_HEXAGON_V6_pred_xor
__builtin_HEXAGON_V6_vS32b_nt_qpred_ai
__builtin_HEXAGON_V6_vS32b_qpred_ai_128B
__builtin_HEXAGON_V6_vabsdiffub
__builtin_HEXAGON_V6_vabsdiffub_128B
__builtin_HEXAGON_V6_vabsh_128B
__builtin_HEXAGON_V6_vabsh_sat_128B
__builtin_HEXAGON_V6_vaddb
__builtin_HEXAGON_V6_vaddb_dv
V32iV128bV32iV32i
__builtin_HEXAGON_V6_vaddh
__builtin_HEXAGON_V6_vaddhnq_128B
-mavx512f
V32iV16iV16i
__builtin_HEXAGON_V6_vaddubh
__builtin_HEXAGON_V6_vaddubsat_dv_128B
__builtin_HEXAGON_V6_vadduhsat_128B
__builtin_HEXAGON_V6_vaddw_128B
__builtin_HEXAGON_V6_vaddwnq
__builtin_HEXAGON_V6_vaddwsat_128B
__builtin_HEXAGON_V6_vaddwsat_dv
V16iV16iV16iUIi
__builtin_HEXAGON_V6_vand
V32iV128bi
V16iV16iV64bi
V128bV32ii
__builtin_HEXAGON_V6_vandvrt_acc_128B
V16iV16ii
-mavx512vbmi
__builtin_HEXAGON_V6_vaslwv_128B
__builtin_HEXAGON_V6_vasrhbrndsat
__builtin_HEXAGON_V6_vasrhubsat_128B
__builtin_HEXAGON_V6_vasrhv_128B
__builtin_HEXAGON_V6_vasrwh_128B
__builtin_HEXAGON_V6_vasrwhsat
__builtin_HEXAGON_V6_vasrwv_128B
__builtin_HEXAGON_V6_vassign
__builtin_HEXAGON_V6_vavghrnd
__builtin_HEXAGON_V6_vavgub_128B
__builtin_HEXAGON_V6_vavguhrnd
__builtin_HEXAGON_V6_vavgw
__builtin_HEXAGON_V6_vcl0w
__builtin_HEXAGON_V6_vcombine_128B
__builtin_HEXAGON_V6_vdealb
-mavx512vpopcntdq
__builtin_HEXAGON_V6_vdealvdd_128B
__builtin_HEXAGON_V6_vdelta_128B
__builtin_HEXAGON_V6_vdmpybus_dv
V64iV64ii
__builtin_HEXAGON_V6_vdmpyhb_acc
__builtin_HEXAGON_V6_vdmpyhb_dv_128B
__builtin_HEXAGON_V6_vdmpyhisat_128B
V32iV64ii
__builtin_HEXAGON_V6_vdmpyhsat_acc
__builtin_HEXAGON_V6_vdmpyhsuisat_128B
__builtin_HEXAGON_V6_vdmpyhsusat_acc
__builtin_HEXAGON_V6_vdmpyhvsat
__builtin_HEXAGON_V6_vdsaduh
__builtin_HEXAGON_V6_vdsaduh_acc_128B
V128bV32iV32i
Link stack frames through backchain on System Z
__builtin_HEXAGON_V6_veqh
__builtin_HEXAGON_V6_veqh_and_128B
__builtin_HEXAGON_V6_veqw
__builtin_HEXAGON_V6_veqw_and
__builtin_HEXAGON_V6_vgtb
__builtin_HEXAGON_V6_vgtb_and_128B
__builtin_HEXAGON_V6_vgth
__builtin_HEXAGON_V6_vgth_128B
__builtin_HEXAGON_V6_vgtub
__builtin_HEXAGON_V6_vgtub_and_128B
__builtin_HEXAGON_V6_vgtuh
__builtin_HEXAGON_V6_vgtuh_and
__builtin_HEXAGON_V6_vgtuw
__builtin_HEXAGON_V6_vgtuw_and_128B
__builtin_HEXAGON_V6_vgtw
-mbranch-likely
__builtin_HEXAGON_V6_vinsertwr
__builtin_HEXAGON_V6_vlalignb_128B
__builtin_HEXAGON_V6_vlsrhv
__builtin_HEXAGON_V6_vlsrw
__builtin_HEXAGON_V6_vlutvvb_oracc
V32iV32iV32iV32ii
__builtin_HEXAGON_V6_vlutvwh_oracc_128B
V64iV64iV32iV32ii
__builtin_HEXAGON_V6_vmaxw
__builtin_HEXAGON_V6_vminh_128B
__builtin_HEXAGON_V6_vminw
__builtin_HEXAGON_V6_vmpabus
__builtin_HEXAGON_V6_vmpabuuv
__builtin_HEXAGON_V6_vmpahb_128B
__builtin_HEXAGON_V6_vmpahb_acc_128B
-mbranches-within-32B-boundaries
__builtin_HEXAGON_V6_vmpybusv_acc
V64iV64iV32iV32i
__builtin_HEXAGON_V6_vmpyewuh
__builtin_HEXAGON_V6_vmpyh
__builtin_HEXAGON_V6_vmpyhss
__builtin_HEXAGON_V6_vmpyhus_128B
__builtin_HEXAGON_V6_vmpyhv_acc
__builtin_HEXAGON_V6_vmpyhv_acc_128B
__builtin_HEXAGON_V6_vmpyiewuh
__builtin_HEXAGON_V6_vmpyiewuh_acc_128B
__builtin_HEXAGON_V6_vmpyihb
__builtin_HEXAGON_V6_vmpyihb_acc
__builtin_HEXAGON_V6_vmpyiwb_acc
__builtin_HEXAGON_V6_vmpyiwh_128B
__builtin_HEXAGON_V6_vmpyowh_rnd
-mcheck-zero-division
__builtin_HEXAGON_V6_vmpyub_acc
__builtin_HEXAGON_V6_vmpyubv_128B
__builtin_HEXAGON_V6_vmpyuh_acc
__builtin_HEXAGON_V6_vmpyuhv
__builtin_HEXAGON_V6_vnavgh
__builtin_HEXAGON_V6_vnavgub_128B
__builtin_HEXAGON_V6_vnormamtw
__builtin_HEXAGON_V6_vnormamtw_128B
__builtin_HEXAGON_V6_vpackeh
__builtin_HEXAGON_V6_vpackhb_sat_128B
__builtin_HEXAGON_V6_vpackoh
__builtin_HEXAGON_V6_vpackwh_sat
__builtin_HEXAGON_V6_vrdelta
__builtin_HEXAGON_V6_vrmpybus_128B
V32iV32iiUIi
-mclzero
__builtin_HEXAGON_V6_vrmpybusv_acc
__builtin_HEXAGON_V6_vrmpybv_128B
__builtin_HEXAGON_V6_vrmpyub_acc
__builtin_HEXAGON_V6_vrmpyubi
__builtin_HEXAGON_V6_vrmpyubv_acc
__builtin_HEXAGON_V6_vror_128B
__builtin_HEXAGON_V6_vroundwh
__builtin_HEXAGON_V6_vroundwh_128B
__builtin_HEXAGON_V6_vsathub
__builtin_HEXAGON_V6_vsatwh_128B
__builtin_HEXAGON_V6_vsh
__builtin_HEXAGON_V6_vshufeh
__builtin_HEXAGON_V6_vshuffh
__builtin_HEXAGON_V6_vshuffob_128B
__builtin_HEXAGON_V6_vshufoeh
Equivalent to -mcmodel=small, compatible with RISC-V gcc.
__builtin_HEXAGON_V6_vsubbnq
__builtin_HEXAGON_V6_vsubbq_128B
__builtin_HEXAGON_V6_vsubhnq
__builtin_HEXAGON_V6_vsubhq
__builtin_HEXAGON_V6_vsubhw
__builtin_HEXAGON_V6_vsububh_128B
__builtin_HEXAGON_V6_vsubuhsat
__builtin_HEXAGON_V6_vsubuhsat_128B
__builtin_HEXAGON_V6_vsubw_dv
__builtin_HEXAGON_V6_vsubwnq_128B
__builtin_HEXAGON_V6_vsubwsat_dv
__builtin_HEXAGON_V6_vswap
__builtin_HEXAGON_V6_vtmpyb_acc
__builtin_HEXAGON_V6_vtmpybus_128B
__builtin_HEXAGON_V6_vtmpyhb
Allow use of CMSE (Armv8-M Security Extensions)
__builtin_HEXAGON_V6_vunpackob_128B
__builtin_HEXAGON_V6_vunpackoh_128B
__builtin_HEXAGON_V6_vxor
__builtin_HEXAGON_V6_vzb
__builtin_HEXAGON_V6_lvsplatb_128B
__builtin_HEXAGON_V6_pred_scalar2v2
__builtin_HEXAGON_V6_shuffeqw_128B
__builtin_HEXAGON_V6_vaddbsat
V32iV32iV32iv*
__builtin_HEXAGON_V6_vaddclbw
__builtin_HEXAGON_V6_vaddubh_acc_128B
__builtin_HEXAGON_V6_vaddububb_sat_128B
__builtin_HEXAGON_V6_vadduwsat_dv_128B
__builtin_HEXAGON_V6_vandnqrt_acc
V32iV128bV32i
Specify code object ABI version. Defaults to 4. (AMDGPU only)
__builtin_HEXAGON_V6_vasrwuhrndsat_128B
__builtin_HEXAGON_V6_vlutvvb_nm
V32iV32iV32iV32iUIi
__builtin_HEXAGON_V6_vlutvvbi_128B
V64iV64iV32iV32iUIi
__builtin_HEXAGON_V6_vlutvwhi_128B
__builtin_HEXAGON_V6_vminb_128B
__builtin_HEXAGON_V6_vmpauhb
__builtin_HEXAGON_V6_vmpyiwub_128B
__builtin_HEXAGON_V6_vmpyowh_64_acc
__builtin_HEXAGON_V6_vrounduwuh_128B
__builtin_HEXAGON_V6_vsatuwuh_128B
__builtin_HEXAGON_V6_vsubcarry_128B
__builtin_HEXAGON_V6_vsubuwsat
__builtin_HEXAGON_V6_vabsb
-mconstant-cfstrings
__builtin_HEXAGON_V6_vasruhubrndsat
__builtin_HEXAGON_V6_vasruhubsat_128B
__builtin_HEXAGON_V6_vavgbrnd
__builtin_HEXAGON_V6_vavguw
V64i
__builtin_HEXAGON_V6_vgathermh_128B
vv*V128biiV32i
__builtin_HEXAGON_V6_vgathermhw
__builtin_HEXAGON_V6_vgathermw
__builtin_HEXAGON_V6_vgathermwq_128B
__builtin_HEXAGON_V6_vmpabuu
__builtin_HEXAGON_V6_vmpabuu_acc
__builtin_HEXAGON_V6_vmpauhuhsat
__builtin_HEXAGON_V6_vmpsuhuhsat_128B
__builtin_HEXAGON_V6_vmpyuhe_acc
-mcpu=
__builtin_HEXAGON_V6_vprefixqh
__builtin_HEXAGON_V6_vprefixqw_128B
__builtin_HEXAGON_V6_vscattermh_add
__builtin_HEXAGON_V6_vscattermhq
__builtin_HEXAGON_V6_vscattermhw_128B
__builtin_HEXAGON_V6_vscattermhw_add_128B
__builtin_HEXAGON_V6_vscattermw
__builtin_HEXAGON_V6_vscattermw_128B
hvxv66|hvxv67|hvxv68|hvxv69
__builtin_HEXAGON_V6_vasr_into
__builtin_HEXAGON_V6_vsatdw_128B
hvxv68|hvxv69
__builtin_HEXAGON_V6_v6mpyvubs10
__builtin_HEXAGON_V6_v6mpyvubs10_vxx_128B
-fdiagnostics-format
-fno-strict-vtable-pointers
__builtin_HEXAGON_V6_vaddcarrysat
thread_stack_pcs
__builtin_HEXAGON_V6_vrotr_128B
inaddr6_loopback
__builtin_HEXAGON_V6_vaddcarrysat_128B
NSString
_end
-mcumode
is_path_xcrun_shim
atmega809
__builtin_HEXAGON_V6_vadd_qf16_128B
__builtin_HEXAGON_V6_vadd_qf32_128B
vbool
-mcx16
atmega3209
"{0}"
#include {0}
setjmp.h
attiny1604
pop_macro
/MDd
 files tracked.
-mdarwin-stkchk-strong-link
fpmath=
branch-protection
file-search
__builtin_HEXAGON_V6_vmpy_qf32_mix_hf_128B
Number of attempted #includes.
-fcoverage-compilation-dir=
-mdebug-pass
Number of #includes skipped due to the multi-include optimization.
NumFrameworkLookups
zcmn_err
$r11
$r16
$r19
$r24
$r26
$zero
$fa2
$fa5
$ft2
$ft3
$ft10
$ft13
$fs2
$fs4
-mdouble-float
-n8:16:32
mc68000
mc68010
__mc68020__
__mc68030__
<kind>
__builtin_mips_subu_qb
V2sV2sV2s
__builtin_mips_maddu
__builtin_mips_msub
__builtin_mips_modsub
__builtin_mips_absq_s_ph
__builtin_mips_precrqu_s_qb_ph
V2sii
V2sV4Sc
__builtin_mips_precequ_ph_qbra
__builtin_mips_shll_qb
V4ScV4Sci
__builtin_mips_shll_s_w
__builtin_mips_muleu_s_ph_qbl
iV2sV2s
__builtin_mips_mulsaq_s_w_ph
__builtin_mips_mult
__builtin_mips_dpau_h_qbl
__builtin_mips_dpaq_s_w_ph
__builtin_mips_dpsq_s_w_ph
__builtin_mips_cmpgu_eq_qb
__builtin_mips_cmpgu_le_qb
__builtin_mips_extr_s_h
__builtin_mips_extr_rs_w
__builtin_mips_rddsp
__builtin_mips_packrl_ph
__builtin_mips_pick_qb
Write a depfile containing user and system headers
__builtin_mips_absq_s_qb
__builtin_mips_addqh_r_ph
__builtin_mips_adduh_qb
__builtin_mips_append
__builtin_mips_dps_w_ph
__builtin_mips_dpax_w_ph
__builtin_mips_mul_s_ph
__builtin_mips_mulq_rs_w
__builtin_mips_precr_sra_r_ph_w
__builtin_mips_shra_r_qb
__builtin_mips_subqh_r_w
__builtin_mips_subu_s_ph
V8SsV8SsV8Ss
__builtin_msa_add_a_d
__builtin_msa_adds_a_d
Set EABI type. Default depends on triple)
V8UsV8UsV8Us
__builtin_msa_adds_u_d
V8sV8sV8s
V4iV4iV4i
V8sV8sIUi
__builtin_msa_addvi_d
__builtin_msa_asub_s_b
__builtin_msa_asub_s_h
__builtin_msa_ave_s_b
__builtin_msa_ave_s_d
__builtin_msa_aver_s_b
__builtin_msa_aver_s_w
__builtin_msa_bclr_b
__builtin_msa_bclr_d
__builtin_msa_bclri_w
Place constants in the .rodata section instead of the .sdata section even if they meet the -G <size> threshold (MIPS)
V4UiV4UiV4UiV4Ui
__builtin_msa_binsli_b
V4UiV4UiV4UiIUi
V2ULLiV2ULLiV2ULLiIUi
__builtin_msa_binsri_h
__builtin_msa_bmnz_v
__builtin_msa_bneg_h
__builtin_msa_bneg_w
iV16Uc
__builtin_msa_bnz_w
__builtin_msa_bsel_v
__builtin_msa_bset_b
__builtin_msa_bseti_w
__builtin_msa_bz_h
__builtin_msa_ceq_h
Allow optimization to assume there are no infinities.
V4SiV4SiISi
__builtin_msa_cfcmsa
__builtin_msa_cle_u_b
__builtin_msa_cle_u_h
__builtin_msa_clei_s_b
__builtin_msa_clei_s_d
__builtin_msa_clei_u_w
V4SiV4UiIUi
__builtin_msa_clt_u_b
__builtin_msa_clt_u_d
__builtin_msa_clti_u_b
__builtin_msa_clti_u_w
__builtin_msa_copy_s_w
LLiV2SLLiIUi
iV8UsIUi
Allow unsafe floating-point math optimizations which may decrease precision
__builtin_msa_div_s_w
__builtin_msa_div_u_h
__builtin_msa_dotp_s_w
__builtin_msa_dotp_s_d
__builtin_msa_dotp_u_d
V8SsV8SsV16ScV16Sc
__builtin_msa_dpadd_u_h
V8UsV8UsV16UcV16Uc
__builtin_msa_dpsub_s_d
__builtin_msa_dpsub_u_d
__builtin_msa_fcaf_w
__builtin_msa_fcaf_d
__builtin_msa_fclass_d
__builtin_msa_fcle_d
__builtin_msa_fcor_w
Execution model (WebAssembly only)
__builtin_msa_fcun_w
__builtin_msa_fcune_d
__builtin_msa_fexdo_w
__builtin_msa_fexp2_w
__builtin_msa_fexupl_d
__builtin_msa_fexupr_d
__builtin_msa_ffint_u_w
V4fV4Ui
__builtin_msa_ffqr_w
V16Sci
__builtin_msa_fill_d
__builtin_msa_flog2_w
__builtin_msa_fmadd_d
__builtin_msa_fmax_d
__builtin_msa_fmin_w
-mextended-const
__builtin_msa_frcp_w
__builtin_msa_frsqrt_d
__builtin_msa_fsle_w
__builtin_msa_fslt_w
__builtin_msa_fsqrt_w
__builtin_msa_fsub_d
__builtin_msa_fsult_w
__builtin_msa_fsult_d
__builtin_msa_ftint_s_d
V4UiV4f
__builtin_msa_ftq_w
__builtin_msa_ftrunc_s_w
__builtin_msa_hadd_s_d
__builtin_msa_hadd_u_d
__builtin_msa_hsub_u_w
-mfancy-math-387
__builtin_msa_ilvl_w
__builtin_msa_ilvod_h
__builtin_msa_ilvr_w
__builtin_msa_insert_b
__builtin_msa_insert_d
V16ScV16ScIUiV16Sc
__builtin_msa_insve_d
V2SLLiV2SLLiIUiV2SLLi
__builtin_msa_ld_d
__builtin_msa_ldr_w
__builtin_msa_ldi_w
__builtin_msa_ldi_d
__builtin_msa_maddr_q_h
V16ScV16ScV16ScV16Sc
V2SLLiV2SLLiV2SLLiV2SLLi
-mfix-cmse-cve-2021-35465
__builtin_msa_max_u_b
__builtin_msa_max_u_d
__builtin_msa_maxi_s_w
__builtin_msa_maxi_s_d
__builtin_msa_maxi_u_w
V2ULLiV2ULLiIi
__builtin_msa_min_s_b
__builtin_msa_min_s_h
__builtin_msa_mini_s_b
__builtin_msa_mini_s_d
__builtin_msa_mod_s_b
__builtin_msa_mod_s_w
__builtin_msa_move_v
__builtin_msa_msub_q_w
__builtin_msa_msubv_w
-mfix-cortex-a57-aes-1742098
__builtin_msa_mulv_w
__builtin_msa_nloc_h
V2SLLiV2SLLi
__builtin_msa_nlzc_h
__builtin_msa_or_v
__builtin_msa_pckev_h
__builtin_msa_pckod_w
__builtin_msa_pckod_d
__builtin_msa_sat_s_h
V4SiV4SiIUi
__builtin_msa_sat_u_w
__builtin_msa_shf_b
V8sV8sV8sUi
__builtin_msa_sld_d
__builtin_msa_sldi_b
-mfix4300
__builtin_msa_sll_d
__builtin_msa_slli_w
V8sV8sUi
V4iV4iUi
__builtin_msa_splati_d
__builtin_msa_sra_w
__builtin_msa_srai_d
__builtin_msa_srar_b
__builtin_msa_srari_d
__builtin_msa_srl_w
__builtin_msa_srli_d
__builtin_msa_srlr_h
__builtin_msa_srlri_d
__builtin_msa_st_h
vV2SLLiv*Ii
The float ABI to use
__builtin_msa_subs_u_h
__builtin_msa_subsus_u_b
V4UiV4UiV4Si
V2ULLiV2ULLiV2SLLi
__builtin_msa_subv_h
__builtin_msa_subvi_b
V16cV16cV16cV16c
__builtin_msa_vshf_h
__builtin_msa_xori_b
mips5
__mips__
__mips
__mips_isa_rev
_MIPS_SIM
_ABI64
-mfp32
__mips_micromips
__mips_dsp_rev
_MIPS_SZPTR
_MIPS_SZINT
Reserve the d7 register (M68k only)
 directives found:
__nvvm_read_ptx_sreg_ntid_z
__nvvm_read_ptx_sreg_ctaid_y
__nvvm_read_ptx_sreg_nctaid_z
__nvvm_read_ptx_sreg_warpid
__nvvm_read_ptx_sreg_lanemask_eq
__nvvm_read_ptx_sreg_lanemask_lt
__nvvm_read_ptx_sreg_pm0
__nvvm_read_ptx_sreg_pm3
__nvvm_fmin_nan_f16
__nvvm_fmin_ftz_nan_f16
V2hV2hV2h
__nvvm_fmin_ftz_nan_f16x2
__nvvm_fmin_bf16
__nvvm_fmin_xorsign_abs_bf16
__nvvm_fmin_nan_xorsign_abs_bf16x2
__nvvm_fmin_nan_f
__nvvm_fmin_ftz_nan_xorsign_abs_f
__nvvm_fmin_d
__nvvm_fmax_nan_xorsign_abs_f16
__nvvm_fmax_ftz_f16x2
__nvvm_fmax_nan_xorsign_abs_f16x2
__nvvm_fmax_bf16
__nvvm_fmax_xorsign_abs_bf16x2
__nvvm_fmax_ftz_f
__nvvm_fmax_nan_xorsign_abs_f
-mfpu=
__nvvm_mul_rn_f
__nvvm_mul_rm_ftz_f
__nvvm_mul_rz_d
__nvvm_mul_rp_d
__nvvm_div_rn_f
__nvvm_div_rm_ftz_f
__nvvm_div_rz_d
__nvvm_div_rm_d
__nvvm_ceil_ftz_f
__nvvm_fabs_ftz_f
__nvvm_round_d
__nvvm_trunc_f
__nvvm_ex2_approx_f
(sm_75|sm_80|sm_86|sm_87|sm_89|sm_90),(ptx70|ptx71|ptx72|ptx73|ptx74|ptx75|ptx76|ptx77|ptx78)
__nvvm_lg2_approx_d
Select the frame chain model used to emit frame records (Arm only).
__nvvm_fma_rn_sat_f16
__nvvm_fma_rn_ftz_relu_f16
__nvvm_fma_rn_ftz_sat_f16x2
__nvvm_fma_rn_ftz_relu_f16x2
__nvvm_fma_rn_relu_bf16x2
__nvvm_fma_rz_ftz_f
__nvvm_fma_rp_f
__nvvm_fma_rn_d
__nvvm_rcp_rz_f
__nvvm_rcp_rp_ftz_f
__nvvm_rcp_rp_d
__nvvm_rcp_approx_ftz_d
__nvvm_sqrt_rm_f
__nvvm_sqrt_approx_ftz_f
__nvvm_sqrt_rm_d
all,non-leaf,none
__nvvm_add_rm_ftz_f
__nvvm_add_rp_f
__nvvm_d2f_rn_ftz
__nvvm_d2f_rz_ftz
__nvvm_d2i_rn
__nvvm_d2i_rp
__nvvm_d2ui_rp
__nvvm_i2d_rn
__nvvm_ui2d_rm
__nvvm_f2i_rn
__nvvm_f2i_rp_ftz
__nvvm_f2ui_rn_ftz
__nvvm_f2ui_rp_ftz
__nvvm_i2f_rz
__nvvm_ui2f_rm
keep,thunk-extern
__nvvm_f2ll_rz_ftz
__nvvm_f2ll_rm
__nvvm_f2ull_rn
__nvvm_f2ull_rz
__nvvm_d2ll_rz
__nvvm_d2ull_rn
__nvvm_ll2f_rn
__nvvm_ll2f_rz
__nvvm_ull2f_rp
__nvvm_ll2d_rm
__nvvm_ull2d_rm
__nvvm_f2h_rn_ftz
__nvvm_ff2bf16x2_rz
V2hff
__nvvm_ff2f16x2_rz_relu
-mgeneral-regs-only
__nvvm_bitcast_ll2d
UiUiUii
__nvvm_bar0_or
__nvvm_bar_warp_sync
__nvvm_shfl_up_i32
__nvvm_shfl_bfly_f32
__nvvm_shfl_sync_down_f32
fUifii
__nvvm_vote_all
__nvvm_vote_ballot
__nvvm_vote_uni_sync
UiUib
UiUiUii*
__nvvm_redux_sync_add
__nvvm_redux_sync_and
-mglibc
__nvvm_mbarrier_init_shared
vWi*
__nvvm_mbarrier_arrive_shared
__nvvm_mbarrier_arrive_noComplete
__nvvm_mbarrier_arrive_drop_noComplete
bWi*Wi
vUc*Uc*zi
__nvvm_memset
V4iiiii
__builtin_ptx_read_image3Dfi_
V4iiiiiii
V4iiiffff
viiiUiUiUiUi
__builtin_ptx_get_image_widthi_
iiD*i
Use GP relative accesses for symbols known to be in a small data section (MIPS)
__nvvm_atom_cta_add_gen_ll
ffD*f
__nvvm_atom_cta_add_gen_d
__nvvm_atom_sub_gen_i
__nvvm_atom_xchg_gen_l
__nvvm_atom_xchg_gen_ll
__nvvm_atom_sys_max_gen_i
__nvvm_atom_max_gen_ui
__nvvm_atom_max_gen_ul
__nvvm_atom_sys_max_gen_ul
ULLiULLiD*ULLi
__nvvm_atom_sys_max_gen_ull
__nvvm_atom_sys_min_gen_ui
__nvvm_atom_sys_min_gen_l
__nvvm_atom_cta_min_gen_ll
__nvvm_atom_dec_gen_ui
__nvvm_atom_and_gen_i
__nvvm_atom_sys_and_gen_l
__nvvm_atom_cta_and_gen_ll
__nvvm_atom_cta_or_gen_l
__nvvm_atom_cta_or_gen_ll
__nvvm_atom_xor_gen_l
__nvvm_atom_cta_xor_gen_l
__nvvm_atom_cta_cas_gen_i
LiLiD*LiLi
__nvvm_atom_sys_cas_gen_ll
vcC*4
__nvvm_ldg_i
LiLiC*
__nvvm_ldg_uc
Select straight-line speculation hardening scope (ARM/AArch64/X86 only). <arg> must be: all, none, retbr(ARM/AArch64), blr(ARM/AArch64), comdat(ARM/AArch64), nocomdat(ARM/AArch64), return(X86), indirect-jmp(X86)
__nvvm_ldg_f
ddC*
__nvvm_ldg_s2
__nvvm_ldg_s4
__nvvm_ldg_ll2
E2UcE2UcC*
__nvvm_ldg_us4
E4UsE4UsC*
__nvvm_ldg_f2
E4fE4fC*
__nvvm_isspacep_global
__nvvm_isspacep_shared
vf*fC*UiIi
__hmma_m16n16k16_st_c_f32
__hmma_m32n8k16_ld_c_f16
Enable Hexagon HVX IEEE floating-point
__hmma_m8n32k16_st_c_f16
vi*iC*iC*iC*IiIi
__hmma_m16n16k16_mma_f16f32
__hmma_m32n8k16_mma_f16f16
__hmma_m8n32k16_mma_f32f32
(sm_75|sm_80|sm_86|sm_87|sm_89|sm_90),(ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74|ptx75|ptx76|ptx77|ptx78)
(sm_80|sm_86|sm_87|sm_89|sm_90),(ptx71|ptx72|ptx73|ptx74|ptx75|ptx76|ptx77|ptx78)
__bmma_m8n8k128_mma_xor_popc_b1
__imma_m16n16k16_ld_c
__imma_m16n16k16_st_c_i32
__imma_m32n8k16_ld_c
__imma_m32n8k16_mma_u8
__imma_m8n32k16_ld_c
__imma_m8n32k16_st_c_i32
__imma_m8n8k32_ld_b_u4
-mhvx-qfloat
__dmma_m8n8k4_st_c_f64
__mma_bf16_m16n16k16_ld_a
__mma_bf16_m8n32k16_mma_f32
__mma_bf16_m32n8k16_ld_b
__mma_tf32_m16n16k8_mma_f32
__nvvm_cp_async_mbarrier_arrive_noinc
__nvvm_cp_async_ca_shared_global_16
__nvvm_cp_async_cg_shared_global_16
ZUiZUi
e-p:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64
__NVPTX__
-fmodules-embed-file=
-fptrauth-block-descriptor-pointers
__STATIC__
__ENVIRONMENT_WATCH_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
WIN32
WIN64
__BOOL_DEFINED
_M_FP_EXCEPT
_MSC_VER
_MSC_FULL_VER
_RVALUE_REFERENCES_SUPPORTED
_ISO_VOLATILE
-plugin-arg-
__pnacl__
__builtin_ppc_eieio
__builtin_ppc_lwsync
vvC*
__builtin_ppc_dcbst
__builtin_ppc_frim
__builtin_ppc_frins
__builtin_ppc_fsel
__builtin_ppc_frsqrte
__builtin_ppc_compare_and_swaplp
__builtin_ppc_fetch_and_addlp
__builtin_ppc_fetch_and_swap
__builtin_ppc_fetch_and_swaplp
ccD*
__builtin_ppc_stwcx
__builtin_ppc_tdw
__builtin_ppc_tw
__builtin_ppc_fcfud
__builtin_ppc_fctiw
__builtin_ppc_swdivs_nochk
Optimize fcf-protection=branch/full (requires LTO).
__builtin_ppc_compare_exp_eq
__builtin_ppc_swdiv
__builtin_ppc_setb
__builtin_ppc_mulhd
__builtin_ppc_maddhd
__builtin_ppc_maddld
__builtin_ppc_rldimi
ULLiULLiULLiIUiIULLi
__builtin_ppc_store2r
vUiUi*
__builtin_ppc_mtfsb0
__builtin_ppc_mtfsb1
ddULLi
__builtin_ppc_fnmadd
__builtin_ppc_fre
Not emit the visibility attribute for asm in AIX OS or give all symbols 'unspecified' visibility in XCOFF object file
__builtin_ppc_mtspr
viC*d
__builtin_ppc_maxfl
__builtin_ppc_maxfs
__builtin_ppc_fnabss
__builtin_altivec_vaddcuw
__builtin_altivec_vaddsws
__builtin_altivec_vadduws
V1ULLLiV16UcV16Uc
__builtin_altivec_vaddecuq_c
__builtin_altivec_vsubsws
__builtin_altivec_vsubeuqm
__builtin_altivec_vsubecuq_c
__builtin_altivec_vavgsh
__builtin_altivec_vcfsx
Migrate source code
__builtin_altivec_dss
vvC*iUIi
__builtin_altivec_vrfim
V4iLivC*
__builtin_altivec_lvewx
V16cUcvC*
__builtin_altivec_vmsumubm
V4UiV16UcV16UcV4Ui
__builtin_altivec_vmsumuhs
__builtin_altivec_vmulesb
__builtin_altivec_vmuloub
__builtin_altivec_vmulouh
__builtin_altivec_vmulesd
__builtin_altivec_vmulosd
__builtin_altivec_vnmsubfp
-mincremental-linker-compatible
V8SsV4SiV4Si
__builtin_altivec_vpkswus
V4UiV2SLLiV2SLLi
V4UiV2ULLiV2ULLi
__builtin_altivec_stvxl
__builtin_altivec_stvehx
__builtin_altivec_vcmpequb
__builtin_altivec_vcmpequh
__builtin_altivec_vcmpnezb
__builtin_altivec_vcmpgtsb
V8sV8SsV8Ss
V8sV8UsV8Us
__builtin_altivec_vcmpgtud
__builtin_altivec_vcmpequq
__builtin_altivec_vcmpequq_p
-mindirect-jump=
__builtin_altivec_vmaxsh
__builtin_altivec_vmaxuw
V8Us
__builtin_altivec_vminub
__builtin_altivec_vminud
vV4i
V8sV8sV8Us
__builtin_altivec_vrlw
__builtin_altivec_vslo
__builtin_altivec_vsraw
__builtin_altivec_vsubcuw
V4SiV16ScV4Si
__builtin_altivec_vsumsws
V8sV16c
V4iV8s
-minvpcid
__builtin_altivec_vcmpgefp_p
__builtin_altivec_vcmpequh_p
iiV2LLiV2LLi
__builtin_altivec_vcmpneb_p
__builtin_altivec_vcmpgtub_p
iiV8SsV8Ss
__builtin_altivec_vcmpgtuw_p
iiV4UiV4Ui
__builtin_altivec_vbpermq
V2ULLiV2ULLiV16Uc
__builtin_altivec_crypto_vshasigmaw
__builtin_altivec_crypto_vshasigmad
__builtin_altivec_crypto_vpmsumb
__builtin_altivec_crypto_vpmsumd
V4UiV4Ui
-miphoneos-version-min=
__builtin_ppc_bcdsub
__builtin_altivec_vclzlsbb
__builtin_altivec_vprtybq
__builtin_altivec_vpopcntb
__builtin_altivec_vabsduw
__builtin_altivec_vrlwmi
V4SiV16Sc
__builtin_altivec_vextsb2d
V2SLLiV4Si
__builtin_altivec_vextractbm
UiV2ULLi
UiV1ULLLi
V1SLLLiV1SLLLiV1SLLLi
__builtin_altivec_vmulhuw
__builtin_altivec_vmulhud
Equivalent to -march=mips1
ULLiV4UiUi
__builtin_altivec_mtvsrbm
V4UiULLi
V2ULLiULLi
__builtin_altivec_vstribl
__builtin_altivec_vstrihl
iiV8s
__builtin_altivec_vstrihl_p
__builtin_altivec_vclzdm
__builtin_altivec_vsrdbi
V8UsV8UsUiUi
__builtin_altivec_vinswlx
__builtin_altivec_vinsbvlx
__builtin_altivec_vinshvlx
__builtin_altivec_vinswvrx
Equivalent to -march=mips32r2
V16UcV16UcULLiiC
__builtin_altivec_vextdubvrx
V2ULLiV4UiV4UiUi
__builtin_altivec_vextddvlx
V2dLivC*
V2dSLLivC*
__builtin_vsx_stxvw4x
__builtin_vsx_stxvd2x_be
__builtin_vsx_stxvl
__builtin_vsx_ldrmb
__builtin_vsx_xvmaxsp
__builtin_vsx_xvmindp
__builtin_vsx_xvrspip
__builtin_vsx_xvcmpeqdp_p
__builtin_vsx_xvcmpgesp
Equivalent to -march=mips32r5
__builtin_vsx_xvrdpi
__builtin_vsx_xvrspic
__builtin_vsx_xvmsubadp
__builtin_vsx_xvmuldp
__builtin_vsx_xvredp
__builtin_vsx_xvrsqrtesp
__builtin_vsx_xvcpsgnsp
__builtin_vsx_xvabssp
V4UiV4Uii
__builtin_vsx_xviexpdp
__builtin_vsx_xvxexpsp
__builtin_vsx_xvxsigsp
V2SLLiV4f
__builtin_vsx_xvcvsxwdp
V4fV2SLLi
Equivalent to -march=mips32
__builtin_vsx_xvcvspbf16
V2ULLiV2dIi
V2ULLiV16UcIi
__builtin_vsx_xxsldwi
iV2dV2d
__builtin_vsx_xvtsqrtdp
V16UcV16UcV16UcV16UcIi
__builtin_vsx_xxblendvb
LLdLLdLLd
__builtin_divf128_round_to_odd
__builtin_vsx_scalar_extract_expq
__builtin_vsx_scalar_insert_exp_qp
__builtin_tbegin
__builtin_tabortdc
__builtin_tabortwci
Equivalent to -march=mips4
__builtin_get_texasru
__builtin_set_texasr
__builtin_ttest
SiSiSi
__builtin_pextd
__builtin_cnttzdm
__builtin_darn
__builtin_darn_raw
__builtin_readflm
__builtin_mma_lxvp
__builtin_mma_build_acc
__builtin_vsx_stxvp
__builtin_mma_xxmfacc
__builtin_mma_xvi8ger4
__builtin_mma_xvf64ger
Equivalent to -march=mips64r2
__builtin_mma_xvi4ger8pp
__builtin_mma_xvi16ger2pp
__builtin_mma_pmxvi16ger2pp
__builtin_mma_xvf16ger2pp
__builtin_mma_pmxvf16ger2np
__builtin_mma_xvf32gerpn
__builtin_mma_pmxvf32gernp
__builtin_mma_pmxvf32gernn
__builtin_mma_pmxvf64gernp
__builtin_mma_pmxvbf16ger2
__builtin_mma_pmxvbf16ger2pp
__builtin_mma_pmxvbf16ger2np
+power10-vector
+privileged
+isa-v31-instructions
Equivalent to -march=mips64r5
__PPC
_BIG_ENDIAN
__LONGDOUBLE128
__LONG_DOUBLE_IBM128__
_ARCH_PPCSQ
_ARCH_604
_ARCH_PWR6X
_ARCH_PWR7
__VEC__
__SPE__
__HTM__
__MMA__
crbits
+prefixed
Equivalent to -march=mips64
float128
spe_acc
-fdiagnostics-show-category=
-mkernel
__popcntb
__isync
__iospace_lwsync
__dcbt
__icbt
__fetch_and_and
__fetch_and_andlp
__lharx
__stdcx
__tw
__trapd
__fctiwz
__cmpeqb
__mulhdu
Limit float precision to the given value
__rldimi
__load8r
__extract_sig
__mtfsb1
__fnmadd
__fnmsubs
__alloca
__builtin_alloca
__vpmsumd
__divde
__bcopy
__bpermd
__builtin_complex
__builtin_ctz
__darn_32
Link and internalize needed symbols from the given bitcode file before performing optimizations.
__labs
__builtin_llabs
__readflm
__builtin_rotateleft32
__dcbtstt
__mfmsr
__frim
__frims
__fsel
__frsqrtes
__compare_exp_uo
__compare_exp_gt
__fnabss
__builtin_maxfs
-mpower8-vector
-mllvm
vs11
vs13
vs19
vs22
vs27
vs28
vs35
vs38
vs43
vs45
vs51
vs54
-fdiagnostics-show-category
Reserve the x12 register (AArch64/RISC-V only)
-mlong-calls
fs10
__riscv_cmodel_medlow
__riscv_float_abi_double
zmmul
__riscv_div
__riscv_v_min_vlen
__riscv_compressed
__builtin_rvv_vadd_vv_tumu
__builtin_rvv_vadd_vv_tuma
__builtin_rvv_vwaddu_vv_tama
__builtin_rvv_vluxei8_v_tu
__builtin_rvv_vlse32_v_ta
__builtin_rvv_vlse32_v_tumu
__builtin_rvv_vloxseg3ei8_v_tumu
__builtin_rvv_vloxseg3ei8_v_tamu
__builtin_rvv_vloxseg4ei8_v_tama
__builtin_rvv_vloxseg4ei8_v_tamu
__builtin_rvv_vloxseg6ei8_v_ta
__builtin_rvv_vloxseg6ei8_v_tuma
__builtin_rvv_vloxseg7ei8_v_tumu
__builtin_rvv_vloxseg7ei8_v_tama
__builtin_rvv_vlse64_v_tama
__builtin_rvv_vloxseg8ei8_v_tu
__builtin_rvv_vloxseg2ei16_v_ta
-mlongcall
__builtin_rvv_vloxseg3ei16_v_tumu
__builtin_rvv_vloxseg3ei16_v_tamu
__builtin_rvv_vloxseg4ei16_v_tama
__builtin_rvv_vloxseg5ei16_v_ta
__builtin_rvv_vloxseg6ei16_v_ta
__builtin_rvv_vloxseg6ei16_v_tuma
__builtin_rvv_vloxseg7ei16_v_tumu
__builtin_rvv_vloxseg7ei16_v_tuma
__builtin_rvv_vloxseg8ei16_v_tama
__builtin_rvv_vloxseg2ei32_v_tu
__builtin_rvv_vloxseg3ei32_v_ta
__builtin_rvv_vloxseg3ei32_v_tumu
__builtin_rvv_vloxseg4ei32_v_tumu
__builtin_rvv_vloxseg4ei32_v_tamu
__builtin_rvv_vloxseg5ei32_v_tama
Enable all mitigations for Load Value Injection (LVI)
__builtin_rvv_vloxseg7ei32_v_ta
__builtin_rvv_vloxseg7ei32_v_tuma
__builtin_rvv_vloxseg8ei32_v_tumu
__builtin_rvv_vloxseg8ei32_v_tama
__builtin_rvv_vloxseg2ei64_v_tumu
__builtin_rvv_vloxseg2ei64_v_tamu
__builtin_rvv_vloxseg3ei64_v_tama
__builtin_rvv_vloxseg3ei64_v_tamu
__builtin_rvv_vloxseg5ei64_v_ta
__builtin_rvv_vloxseg5ei64_v_tuma
__builtin_rvv_vloxseg6ei64_v_tumu
__builtin_rvv_vloxseg6ei64_v_tama
__builtin_rvv_vloxseg7ei64_v_tama
__builtin_rvv_vloxseg8ei64_v_tu
__builtin_rvv_vloxseg8ei64_v_tamu
Set macOS deployment target
__builtin_rvv_vluxei64_v_ta
__builtin_rvv_vluxei64_v_tuma
__builtin_rvv_vsseg3e8_v
__builtin_rvv_vluxei16_v_ta
__builtin_rvv_vsseg4e8_v
__builtin_rvv_vsseg5e8_v_m
__builtin_rvv_vsseg8e8_v
__builtin_rvv_vsseg8e8_v_m
__builtin_rvv_vsseg5e16_v
__builtin_rvv_vsseg6e16_v_m
__builtin_rvv_vluxei32_v_tama
__builtin_rvv_vsseg7e16_v
__builtin_rvv_vsseg3e32_v
__builtin_rvv_vsseg4e32_v_m
__builtin_rvv_vsseg7e32_v
-mmark-bti-property
__builtin_rvv_vsseg4e64_v
__builtin_rvv_vsseg5e64_v_m
__builtin_rvv_vsseg8e64_v
__builtin_rvv_vssseg3e8_v
__builtin_rvv_vssseg6e8_v
__builtin_rvv_vssseg7e8_v_m
__builtin_rvv_vssseg3e16_v
__builtin_rvv_vssseg3e16_v_m
__builtin_rvv_vssseg7e16_v
__builtin_rvv_vssseg8e16_v_m
__builtin_rvv_vssseg4e32_v
__builtin_rvv_vssseg5e32_v
__builtin_rvv_vssseg8e32_v
__builtin_rvv_vssseg2e64_v_m
__builtin_rvv_vssseg4e64_v_m
Write a depfile containing user headers
__builtin_rvv_vsuxseg3ei8_v
__builtin_rvv_vsuxseg4ei8_v_m
__builtin_rvv_vsuxseg7ei8_v
__builtin_rvv_vsuxseg8ei8_v
__builtin_rvv_vsuxseg4ei16_v
__builtin_rvv_vsuxseg5ei16_v_m
__builtin_rvv_vsuxseg8ei16_v
__builtin_rvv_vsuxseg8ei16_v_m
__builtin_rvv_vsuxseg5ei32_v
__builtin_rvv_vsuxseg6ei32_v_m
__builtin_rvv_vsuxseg2ei64_v
__builtin_rvv_vsuxseg3ei64_v
__builtin_rvv_vsuxseg6ei64_v
__builtin_rvv_vsuxseg7ei64_v_m
__builtin_rvv_vloxei8_v_ta
-mmfocrf
__builtin_rvv_vloxei16_v_tumu
__builtin_rvv_vloxei16_v_tamu
__builtin_rvv_vloxei32_v_tama
__builtin_rvv_vsoxseg2ei8_v
__builtin_rvv_vsoxseg5ei8_v
__builtin_rvv_vsoxseg6ei8_v_m
__builtin_rvv_vloxei64_v_tumu
__builtin_rvv_vloxei64_v_tuma
__builtin_rvv_vsoxseg3ei16_v
__builtin_rvv_vsoxseg4ei16_v_m
__builtin_rvv_vsoxseg7ei16_v
__builtin_rvv_vsoxseg8ei16_v
__builtin_rvv_vsoxseg4ei32_v
__builtin_rvv_vsoxseg5ei32_v_m
__builtin_rvv_vsoxseg7ei32_v
-mmma
__builtin_rvv_vsoxseg5ei64_v
__builtin_rvv_vsoxseg6ei64_v_m
__builtin_rvv_vadd_vx_ta
__builtin_rvv_vadd_vx_tumu
__builtin_rvv_vsub_vv_tumu
__builtin_rvv_vsub_vv_tamu
__builtin_rvv_vsub_vx_tama
__builtin_rvv_vsub_vx_tamu
__builtin_rvv_vwaddu_vx_ta
__builtin_rvv_vwaddu_vx_tuma
__builtin_rvv_vwsubu_vv_tumu
__builtin_rvv_vwsubu_vv_tama
__builtin_rvv_vwsubu_vx_tama
__builtin_rvv_vwadd_vv_tu
__builtin_rvv_vwadd_vx_ta
-mmovdiri
__builtin_rvv_vwsub_vv_tumu
__builtin_rvv_vwsub_vv_tamu
__builtin_rvv_vwsub_vx_tama
__builtin_rvv_vwaddu_wx_ta
__builtin_rvv_vwsubu_wv_ta
__builtin_rvv_vwsubu_wv_tuma
__builtin_rvv_vwsubu_wx_tumu
__builtin_rvv_vwsubu_wx_tuma
__builtin_rvv_vwadd_wv_tama
__builtin_rvv_vwadd_wx_tu
__builtin_rvv_vwsub_wv_ta
__builtin_rvv_vwsub_wv_tumu
__builtin_rvv_vwsub_wx_tumu
__builtin_rvv_vwsub_wx_tamu
__builtin_rvv_vwcvt_x_x_v_tuma
-mmsa
__builtin_rvv_vsbc_vxm_ta
__builtin_rvv_vmadc_vxm
__builtin_rvv_vmsbc_vv
__builtin_rvv_vand_vv_ta
__builtin_rvv_vand_vx_ta
__builtin_rvv_vand_vx_tuma
__builtin_rvv_vxor_vv_tumu
__builtin_rvv_vxor_vv_tuma
__builtin_rvv_vxor_vx_tama
__builtin_rvv_vor_vv_tu
__builtin_rvv_vor_vx_ta
__builtin_rvv_vor_vx_tumu
__builtin_rvv_vsll_vv_tumu
__builtin_rvv_vsll_vv_tamu
__builtin_rvv_vsll_vx_tama
-mmultivalue
__builtin_rvv_vsrl_vx_ta
__builtin_rvv_vsrl_vx_tuma
__builtin_rvv_vsra_vv_tumu
__builtin_rvv_vsra_vv_tama
__builtin_rvv_vsra_vx_tama
__builtin_rvv_vnsrl_wv_tu
__builtin_rvv_vnsrl_wx_ta
__builtin_rvv_vnsrl_wx_tu
__builtin_rvv_vnsra_wv_tumu
__builtin_rvv_vnsra_wv_tamu
__builtin_rvv_vnsra_wx_tama
__builtin_rvv_vncvt_x_x_w_ta
__builtin_rvv_vmseq_vv
__builtin_rvv_vmseq_vv_mu
__builtin_rvv_vmseq_vx_tumu
Like -MMD, but also implies -E and writes to stdout by default
__builtin_rvv_vmsltu_vv
__builtin_rvv_vmsltu_vv_mu
__builtin_rvv_vmslt_vv
__builtin_rvv_vmslt_vv_ma
__builtin_rvv_vmsleu_vv
__builtin_rvv_vmsleu_vv_mu
__builtin_rvv_vmsle_vv
__builtin_rvv_vmsle_vv_tumu
__builtin_rvv_vmsgtu_vv
__builtin_rvv_vmsgtu_vv_mu
__builtin_rvv_vmsgt_vv
__builtin_rvv_vmsgt_vv_ma
__builtin_rvv_vmsgeu_vv
__builtin_rvv_vmsgeu_vv_mu
__builtin_rvv_vwaddu_wv_tama
-mno-80387
__builtin_rvv_vmsgeu_vx_ma
__builtin_rvv_vmsge_vv_tumu
__builtin_rvv_vmsge_vx_ma
__builtin_rvv_vminu_vv_ta
__builtin_rvv_vminu_vx_ta
__builtin_rvv_vminu_vx_tuma
__builtin_rvv_vmin_vv_tumu
__builtin_rvv_vmin_vv_tuma
__builtin_rvv_vmin_vx_tama
__builtin_rvv_vmaxu_vv_tu
__builtin_rvv_vmaxu_vx_ta
__builtin_rvv_vmaxu_vx_tumu
__builtin_rvv_vmax_vv_tumu
__builtin_rvv_vmax_vv_tamu
__builtin_rvv_vmax_vx_tuma
-mno-aes
__builtin_rvv_vmul_vx_ta
__builtin_rvv_vmul_vx_tuma
__builtin_rvv_vmulh_vv_tumu
__builtin_rvv_vmulh_vv_tama
__builtin_rvv_vmulh_vx_tama
__builtin_rvv_vmulhu_vv_tu
__builtin_rvv_vmulhu_vx_ta
__builtin_rvv_vmulhu_vx_tu
__builtin_rvv_vmulhsu_vv_tumu
__builtin_rvv_vmulhsu_vv_tamu
__builtin_rvv_vmulhsu_vx_tumu
__builtin_rvv_vmulhsu_vx_tama
__builtin_rvv_vdivu_vv_tama
__builtin_rvv_vdivu_vx_tu
__builtin_rvv_vdiv_vv_ta
-mno-amx-int8
__builtin_rvv_vdiv_vx_tumu
__builtin_rvv_vdiv_vx_tamu
__builtin_rvv_vremu_vv_tama
__builtin_rvv_vremu_vx_ta
__builtin_rvv_vrem_vv_ta
__builtin_rvv_vrem_vv_tuma
__builtin_rvv_vrem_vx_tumu
__builtin_rvv_vrem_vx_tuma
__builtin_rvv_vwmul_vv_tama
__builtin_rvv_vwmul_vx_tu
__builtin_rvv_vwmulu_vv_ta
__builtin_rvv_vwmulu_vv_tumu
__builtin_rvv_vwmulu_vx_tumu
__builtin_rvv_vwmulu_vx_tamu
__builtin_rvv_vwmulsu_vv_tumu
-mno-avx512bf16
__builtin_rvv_vmacc_vv_tu
__builtin_rvv_vmacc_vv_tuma
__builtin_rvv_vmacc_vx_tumu
__builtin_rvv_vmacc_vx_tama
__builtin_rvv_vnmsac_vv_tama
__builtin_rvv_vsuxei8_v_m
__builtin_rvv_vnmsac_vx_tama
__builtin_rvv_vnmsac_vx_tamu
__builtin_rvv_vmadd_vx_tu
__builtin_rvv_vmadd_vx_tuma
__builtin_rvv_vnmsub_vv_tumu
__builtin_rvv_vnmsub_vv_tama
__builtin_rvv_vnmsub_vx_tama
__builtin_rvv_vwmaccu_vv_ta
__builtin_rvv_vwmaccu_vx_tu
-mno-avx512dq
__builtin_rvv_vwmacc_vv_tumu
__builtin_rvv_vwmacc_vv_tamu
__builtin_rvv_vwmacc_vx_tama
__builtin_rvv_vwmaccsu_vv_tu
__builtin_rvv_vwmaccsu_vx_tu
__builtin_rvv_vwmaccsu_vx_tuma
__builtin_rvv_vwmaccus_vx_tumu
__builtin_rvv_vwmaccus_vx_tuma
__builtin_rvv_vmv_v_v_ta
__builtin_rvv_vmv_v_x_tu
__builtin_rvv_vsaddu_vv_tama
__builtin_rvv_vsaddu_vx_ta
__builtin_rvv_vsadd_vv_ta
__builtin_rvv_vsadd_vv_tuma
__builtin_rvv_vsadd_vx_tu
-mno-avx512ifma
__builtin_rvv_vssubu_vv_tama
__builtin_rvv_vssubu_vx_tu
__builtin_rvv_vssub_vv_ta
__builtin_rvv_vssub_vv_tumu
__builtin_rvv_vssub_vx_tumu
__builtin_rvv_vssub_vx_tamu
__builtin_rvv_vaaddu_vv_tama
__builtin_rvv_vaaddu_vv_tamu
__builtin_rvv_vaadd_vv_ta
__builtin_rvv_vaadd_vv_tuma
__builtin_rvv_vaadd_vx_tumu
__builtin_rvv_vaadd_vx_tama
__builtin_rvv_vasubu_vv_tama
__builtin_rvv_vasubu_vx_tu
__builtin_rvv_vasub_vv_ta
-mno-avx512vl
__builtin_rvv_vasub_vx_tumu
__builtin_rvv_vasub_vx_tamu
__builtin_rvv_vsmul_vv_tama
__builtin_rvv_vsmul_vx_ta
__builtin_rvv_vssrl_vv_ta
__builtin_rvv_vssrl_vv_tuma
__builtin_rvv_vssrl_vx_tumu
__builtin_rvv_vssrl_vx_tuma
__builtin_rvv_vssra_vv_tama
__builtin_rvv_vssra_vx_tu
__builtin_rvv_vnclipu_wv_ta
__builtin_rvv_vnclipu_wv_tumu
__builtin_rvv_vnclipu_wx_tumu
__builtin_rvv_vnclipu_wx_tamu
__builtin_rvv_vnclip_wv_tu
-mno-avxvnni
__builtin_rvv_vfadd_vv_ta
__builtin_rvv_vfadd_vv_tuma
__builtin_rvv_vfadd_vf_tumu
__builtin_rvv_vfadd_vf_tama
__builtin_rvv_vfsub_vv_tama
__builtin_rvv_vfsub_vf_tu
__builtin_rvv_vfrsub_vf_ta
__builtin_rvv_vfrsub_vf_tu
__builtin_rvv_vfwadd_vv_tumu
__builtin_rvv_vfwadd_vv_tamu
__builtin_rvv_vfwadd_vf_tama
__builtin_rvv_vfwsub_vv_ta
__builtin_rvv_vsuxei64_v
__builtin_rvv_vfwsub_vf_tu
__builtin_rvv_vfwadd_wv_ta
-mno-bmi
__builtin_rvv_vfwadd_wf_tumu
__builtin_rvv_vfwadd_wf_tamu
__builtin_rvv_vfwsub_wv_tama
__builtin_rvv_vfwsub_wf_ta
__builtin_rvv_vfmul_vv_ta
__builtin_rvv_vfmul_vv_tuma
__builtin_rvv_vfmul_vf_tumu
__builtin_rvv_vfmul_vf_tuma
__builtin_rvv_vfdiv_vv_tama
__builtin_rvv_vfdiv_vf_tu
__builtin_rvv_vfrdiv_vf_ta
__builtin_rvv_vfrdiv_vf_tumu
__builtin_rvv_vfwmul_vv_tumu
__builtin_rvv_vfwmul_vv_tamu
__builtin_rvv_vfwmul_vf_tuma
-mno-bulk-memory
__builtin_rvv_vfmacc_vf_tu
__builtin_rvv_vfmacc_vf_tuma
__builtin_rvv_vfnmacc_vv_tumu
__builtin_rvv_vfnmacc_vv_tama
__builtin_rvv_vfnmacc_vf_tama
__builtin_rvv_vfmsac_vv_ta
__builtin_rvv_vfmsac_vf_tu
__builtin_rvv_vfmsac_vf_ta
__builtin_rvv_vfnmsac_vv_tumu
__builtin_rvv_vfnmsac_vv_tamu
__builtin_rvv_vfnmsac_vf_tama
__builtin_rvv_vfmadd_vv_tu
__builtin_rvv_vfmadd_vf_tu
__builtin_rvv_vfmadd_vf_tuma
__builtin_rvv_vfnmadd_vv_tumu
-mno-clwb
__builtin_rvv_vfnmadd_vf_tama
__builtin_rvv_vfmsub_vv_ta
__builtin_rvv_vfmsub_vf_tu
__builtin_rvv_vfmsub_vf_tumu
__builtin_rvv_vfnmsub_vv_tumu
__builtin_rvv_vfnmsub_vv_tamu
__builtin_rvv_vfnmsub_vf_tama
__builtin_rvv_vfnmsub_vf_tamu
__builtin_rvv_vfwmacc_vf_tu
__builtin_rvv_vfwmacc_vf_tuma
__builtin_rvv_vfwnmacc_vv_tumu
__builtin_rvv_vfwnmacc_vv_tama
__builtin_rvv_vfwnmacc_vf_tama
__builtin_rvv_vfwmsac_vv_ta
__builtin_rvv_vfwmsac_vv_tama
Legacy option to specify code object ABI V2 (AMDGPU only)
__builtin_rvv_vfwnmsac_vv_tumu
__builtin_rvv_vfwnmsac_vv_tamu
__builtin_rvv_vfwnmsac_vf_tama
__builtin_rvv_vfmin_vv_ta
__builtin_rvv_vfmin_vf_ta
__builtin_rvv_vfmin_vf_tuma
__builtin_rvv_vfmax_vv_tumu
__builtin_rvv_vfmax_vv_tuma
__builtin_rvv_vfmax_vf_tama
__builtin_rvv_vfsgnj_vv_tu
__builtin_rvv_vfsgnj_vf_ta
__builtin_rvv_vfsgnj_vf_tumu
__builtin_rvv_vfsgnjn_vv_tumu
__builtin_rvv_vfsgnjn_vv_tamu
__builtin_rvv_vfsgnjn_vf_tama
-mno-crbits
__builtin_rvv_vfsgnjx_vf_ta
__builtin_rvv_vfsgnjx_vf_tuma
__builtin_rvv_vfabs_v_tumu
__builtin_rvv_vfabs_v_tama
__builtin_rvv_vmfeq_vf
__builtin_rvv_vmfeq_vf_mu
__builtin_rvv_vmfne_vf
__builtin_rvv_vmfne_vf_tumu
__builtin_rvv_vmflt_vf
__builtin_rvv_vmflt_vf_mu
__builtin_rvv_vmfle_vf
__builtin_rvv_vmfle_vf_ma
__builtin_rvv_vmfgt_vf
__builtin_rvv_vmfgt_vf_mu
__builtin_rvv_vmfge_vv_mu
-mno-crypto
__builtin_rvv_vredsum_vs_tu
__builtin_rvv_vredsum_vs_tum
__builtin_rvv_vredmaxu_vs_tum
__builtin_rvv_vredmax_vs_tu
__builtin_rvv_vredminu_vs_ta
__builtin_rvv_vredminu_vs_tam
__builtin_rvv_vredmin_vs_tam
__builtin_rvv_vredand_vs_tu
__builtin_rvv_vredor_vs_tumu
__builtin_rvv_vredxor_vs_tu
__builtin_rvv_vwredsum_vs_tu
__builtin_rvv_vwredsum_vs_tumu
__builtin_rvv_vwredsumu_vs_tum
__builtin_rvv_vfredmax_vs_ta
__builtin_rvv_vfredmin_vs_ta
-mno-default-build-attributes
__builtin_rvv_vfredusum_vs_tam
__builtin_rvv_vfredosum_vs_tumu
__builtin_rvv_vfwredusum_vs_tumu
__builtin_rvv_vfwredusum_vs_tam
__builtin_rvv_vmnot_m
__builtin_rvv_viota_m_tumu
__builtin_rvv_vid_v_tu
__builtin_rvv_vid_v_tumu
__builtin_rvv_vfmv_f_s
__builtin_rvv_vfmv_s_x_tu
__builtin_rvv_vslideup_vx_tuma
__builtin_rvv_vslideup_vx_tamu
__builtin_rvv_vslidedown_vx_tamu
__builtin_rvv_vslide1up_vx_tumu
Display include stacks for diagnostic notes
-mno-embedded-data
__builtin_rvv_vslide1down_vx_tu
__builtin_rvv_vslide1down_vx_tama
__builtin_rvv_vfslide1down_vf_tuma
__builtin_rvv_vfslide1down_vf_tamu
__builtin_rvv_vrgather_vv_tamu
__builtin_rvv_vrgather_vx_tumu
__builtin_rvv_vrgatherei16_vv_tu
__builtin_rvv_vrgatherei16_vv_tumu
__builtin_rvv_vset_v
__builtin_rvv_vsoxei16_v
__builtin_rvv_vsoxei64_v_m
__builtin_rvv_vlseg2e8_v_tu
__builtin_rvv_vle16ff_v_tu
__builtin_rvv_vle16ff_v_tama
__builtin_rvv_vle32ff_v_tuma
-mno-execute-only
__builtin_rvv_vle64ff_v_tamu
__builtin_rvv_vlseg3e8_v_tumu
__builtin_rvv_vlseg4e8_v_tu
__builtin_rvv_vlseg4e8_v_tuma
__builtin_rvv_vlseg5e8_v_tuma
__builtin_rvv_vle8_v_ta
__builtin_rvv_vle8_v_tamu
__builtin_rvv_vlseg6e8_v_ta
__builtin_rvv_vlseg7e8_v_tu
__builtin_rvv_vlseg7e8_v_tama
__builtin_rvv_vlseg8e8_v_tuma
__builtin_rvv_vlseg8e8_v_tamu
__builtin_rvv_vlseg2e16_v_tamu
__builtin_rvv_vlseg3e16_v_tumu
__builtin_rvv_vlseg4e16_v_ta
Do not assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
__builtin_rvv_vlseg5e16_v_tuma
__builtin_rvv_vlseg6e16_v_ta
__builtin_rvv_vlseg6e16_v_tamu
__builtin_rvv_vlseg7e16_v_tu
__builtin_rvv_vlseg8e16_v_tu
__builtin_rvv_vlseg8e16_v_tama
__builtin_rvv_vlseg2e32_v_tuma
__builtin_rvv_vlseg2e32_v_tama
__builtin_rvv_vlseg3e32_v_tamu
__builtin_rvv_vlseg4e32_v_tumu
__builtin_rvv_vlseg5e32_v_tu
__builtin_rvv_vlseg5e32_v_tuma
__builtin_rvv_vlseg6e32_v_tuma
__builtin_rvv_vlseg7e32_v_ta
__builtin_rvv_vlseg7e32_v_tamu
-mno-fix-cortex-a53-835769
__builtin_rvv_vlseg2e64_v_tu
__builtin_rvv_vlseg2e64_v_tama
__builtin_rvv_vlseg3e64_v_tuma
__builtin_rvv_vlseg3e64_v_tamu
__builtin_rvv_vlseg4e64_v_tamu
__builtin_rvv_vlseg5e64_v_tumu
__builtin_rvv_vlseg6e64_v_tu
__builtin_rvv_vlseg6e64_v_tumu
__builtin_rvv_vlseg7e64_v_tuma
__builtin_rvv_vlseg8e64_v_ta
__builtin_rvv_vlseg8e64_v_tamu
__builtin_rvv_vlseg3e8ff_v_tu
__builtin_rvv_vlseg4e8ff_v_tu
__builtin_rvv_vlseg4e8ff_v_tama
__builtin_rvv_vlseg5e8ff_v_tu
-mno-fix-cortex-a72-aes-1655431
__builtin_rvv_vlseg6e8ff_v_tamu
__builtin_rvv_vlseg7e8ff_v_tumu
__builtin_rvv_vlseg8e8ff_v_tu
__builtin_rvv_vlseg8e8ff_v_tuma
__builtin_rvv_vlseg2e16ff_v_tuma
__builtin_rvv_vlseg3e16ff_v_ta
__builtin_rvv_vlseg3e16ff_v_tamu
__builtin_rvv_vlseg4e16ff_v_ta
__builtin_rvv_vlseg5e16ff_v_tu
__builtin_rvv_vlseg5e16ff_v_tama
__builtin_rvv_vlseg6e16ff_v_tuma
__builtin_rvv_vlseg6e16ff_v_tamu
__builtin_rvv_vlseg7e16ff_v_tamu
__builtin_rvv_vlseg8e16ff_v_tumu
__builtin_rvv_vlseg2e32ff_v_tu
-mno-fma
__builtin_rvv_vlseg3e32ff_v_tuma
__builtin_rvv_vlseg4e32ff_v_ta
__builtin_rvv_vlseg4e32ff_v_tamu
__builtin_rvv_vlseg5e32ff_v_tu
__builtin_rvv_vlseg6e32ff_v_tu
__builtin_rvv_vlseg6e32ff_v_tama
__builtin_rvv_vlseg7e32ff_v_tuma
__builtin_rvv_vlseg7e32ff_v_tama
__builtin_rvv_vlseg8e32ff_v_tamu
__builtin_rvv_vlseg2e64ff_v_tumu
__builtin_rvv_vlseg3e64ff_v_tu
__builtin_rvv_vlseg3e64ff_v_tuma
__builtin_rvv_vlseg4e64ff_v_tuma
__builtin_rvv_vlseg5e64ff_v_ta
__builtin_rvv_vlseg5e64ff_v_tama
-mno-fxsr
__builtin_rvv_vlseg7e64ff_v_tu
__builtin_rvv_vlseg7e64ff_v_tama
__builtin_rvv_vlseg8e64ff_v_tuma
__builtin_rvv_vlseg8e64ff_v_tamu
__builtin_rvv_vlseg2e8ff_v_tamu
__builtin_rvv_vlsseg3e8_v_tumu
__builtin_rvv_vlsseg4e8_v_tu
__builtin_rvv_vlsseg4e8_v_tumu
__builtin_rvv_vlsseg5e8_v_tuma
__builtin_rvv_vlsseg6e8_v_ta
__builtin_rvv_vlsseg6e8_v_tamu
__builtin_rvv_vlsseg7e8_v_tu
__builtin_rvv_vlsseg8e8_v_tu
__builtin_rvv_vlsseg8e8_v_tama
__builtin_rvv_vlsseg2e16_v_tuma
Disable merging of globals
__builtin_rvv_vlsseg2e8_v_tamu
__builtin_rvv_vlsseg3e16_v_tumu
__builtin_rvv_vlsseg4e16_v_tu
__builtin_rvv_vlsseg4e16_v_tuma
__builtin_rvv_vlsseg5e16_v_tuma
__builtin_rvv_vlsseg6e16_v_ta
__builtin_rvv_vlsseg6e16_v_tamu
__builtin_rvv_vlsseg7e16_v_ta
__builtin_rvv_vlsseg8e16_v_tu
__builtin_rvv_vlsseg8e16_v_tama
__builtin_rvv_vlsseg2e32_v_tuma
__builtin_rvv_vlsseg2e32_v_tamu
__builtin_rvv_vlsseg3e32_v_tamu
__builtin_rvv_vlsseg4e32_v_tumu
__builtin_rvv_vlsseg4e32_v_tama
-mno-htm
__builtin_rvv_vluxseg2ei8_v_tuma
__builtin_rvv_vlsseg6e32_v_ta
__builtin_rvv_vlsseg6e32_v_tamu
__builtin_rvv_vlsseg7e32_v_tu
__builtin_rvv_vlsseg8e32_v_tu
__builtin_rvv_vlsseg8e32_v_tama
__builtin_rvv_vlsseg2e64_v_tuma
__builtin_rvv_vlsseg2e64_v_tama
__builtin_rvv_vlsseg3e64_v_tamu
__builtin_rvv_vlsseg4e64_v_tumu
__builtin_rvv_vlsseg5e64_v_tu
__builtin_rvv_vlsseg5e64_v_tuma
__builtin_rvv_vlsseg6e64_v_tuma
__builtin_rvv_vlsseg7e64_v_ta
__builtin_rvv_vlsseg7e64_v_tamu
Disable Hexagon HVX QFloat instructions
__builtin_rvv_vle8ff_v_tu
__builtin_rvv_vle8ff_v_tama
__builtin_rvv_vluxseg3ei8_v_tu
__builtin_rvv_vluxseg3ei8_v_tuma
__builtin_rvv_vluxseg4ei8_v_tuma
__builtin_rvv_vluxseg5ei8_v_ta
__builtin_rvv_vluxseg5ei8_v_tamu
__builtin_rvv_vluxseg6ei8_v_ta
__builtin_rvv_vluxseg7ei8_v_tu
__builtin_rvv_vluxseg7ei8_v_tama
__builtin_rvv_vluxseg8ei8_v_tuma
__builtin_rvv_vluxseg8ei8_v_tamu
__builtin_rvv_vluxseg2ei16_v_tamu
__builtin_rvv_vluxseg3ei16_v_tumu
__builtin_rvv_vluxseg4ei16_v_ta
-mno-implicit-float
__builtin_rvv_vluxseg5ei16_v_tuma
__builtin_rvv_vluxseg6ei16_v_ta
__builtin_rvv_vluxseg6ei16_v_tamu
__builtin_rvv_vluxseg7ei16_v_tu
__builtin_rvv_vluxseg8ei16_v_tu
__builtin_rvv_vluxseg8ei16_v_tama
__builtin_rvv_vluxseg2ei32_v_tuma
__builtin_rvv_vluxseg2ei32_v_tama
__builtin_rvv_vluxseg3ei32_v_tamu
__builtin_rvv_vluxseg4ei32_v_tumu
__builtin_rvv_vluxseg5ei32_v_tu
__builtin_rvv_vluxseg5ei32_v_tuma
__builtin_rvv_vluxseg6ei32_v_tuma
__builtin_rvv_vluxseg7ei32_v_ta
__builtin_rvv_vluxseg7ei32_v_tamu
-mno-incremental-linker-compatible
__builtin_rvv_vluxseg2ei64_v_tu
__builtin_rvv_vluxseg2ei64_v_tama
__builtin_rvv_vluxseg3ei64_v_tuma
__builtin_rvv_vluxseg3ei64_v_tamu
__builtin_rvv_vluxseg4ei64_v_tamu
__builtin_rvv_vluxseg5ei64_v_tumu
__builtin_rvv_vluxseg6ei64_v_tu
__builtin_rvv_vluxseg6ei64_v_tumu
__builtin_rvv_vluxseg7ei64_v_tuma
__builtin_rvv_vluxseg8ei64_v_ta
__builtin_rvv_vluxseg8ei64_v_tamu
__builtin_rvv_vssseg2e8_v_m
__builtin_rvv_vlse8_v_tamu
__builtin_rvv_vneg_v_tumu
__builtin_rvv_vneg_v_tamu
-mno-invpcid
__builtin_rvv_vfneg_v_tumu
__builtin_rvv_vfneg_v_tamu
__builtin_rvv_vwcvtu_x_x_v_tama
__builtin_rvv_vle16_v_ta
__builtin_rvv_vle32_v_ta
__builtin_rvv_vle32_v_tuma
__builtin_rvv_vle64_v_tumu
__builtin_rvv_vle64_v_tuma
__builtin_rvv_vse64_v
__builtin_rvv_vlse16_v_tu
__builtin_rvv_vcpop_m
__builtin_rvv_vfclass_v_ta
__builtin_rvv_vfcvt_f_x_v_ta
__builtin_rvv_vfcvt_f_x_v_tuma
__builtin_rvv_vfcvt_f_xu_v_tumu
-mno-local-sdata
__builtin_rvv_vfcvt_rtz_x_f_v_tama
__builtin_rvv_vfcvt_rtz_xu_f_v_tu
__builtin_rvv_vfcvt_x_f_v_ta
__builtin_rvv_vfcvt_x_f_v_tumu
__builtin_rvv_vfcvt_xu_f_v_tumu
__builtin_rvv_vfcvt_xu_f_v_tamu
__builtin_rvv_vfncvt_f_f_w_tumu
__builtin_rvv_vfncvt_f_f_w_tuma
__builtin_rvv_vfncvt_f_x_w_tama
__builtin_rvv_vfncvt_f_xu_w_tu
__builtin_rvv_vfncvt_rod_f_f_w_ta
__builtin_rvv_vfncvt_rod_f_f_w_tumu
__builtin_rvv_vfncvt_rtz_x_f_w_tumu
__builtin_rvv_vfncvt_rtz_x_f_w_tamu
__builtin_rvv_vfncvt_rtz_xu_f_w_tuma
-mno-longcall
__builtin_rvv_vfncvt_xu_f_w_ta
__builtin_rvv_vfncvt_xu_f_w_tuma
__builtin_rvv_vfrec7_v_tumu
__builtin_rvv_vfrec7_v_tama
__builtin_rvv_vfrsqrt7_v_tama
__builtin_rvv_vfsqrt_v_tu
__builtin_rvv_vfwcvt_f_f_v_ta
__builtin_rvv_vfwcvt_f_f_v_tu
__builtin_rvv_vfwcvt_f_x_v_tumu
__builtin_rvv_vfwcvt_f_x_v_tamu
__builtin_rvv_vfwcvt_f_xu_v_tama
__builtin_rvv_vfwcvt_rtz_x_f_v_ta
__builtin_rvv_vfwcvt_rtz_xu_f_v_ta
__builtin_rvv_vfwcvt_rtz_xu_f_v_tuma
__builtin_rvv_vfwcvt_x_f_v_tumu
Disable mitigations for Load Value Injection (LVI)
__builtin_rvv_vfwcvt_xu_f_v_tama
__builtin_rvv_vlmul_ext_v
__builtin_rvv_vmnand_mm
__builtin_rvv_vmor_mm
__builtin_rvv_vmset_m
__builtin_rvv_vmsif_m_ma
__builtin_rvv_vmsof_m_mu
__builtin_rvv_vmxnor_mm
__builtin_rvv_vsext_vf2_ta
__builtin_rvv_vsext_vf2_tuma
__builtin_rvv_vsext_vf4_tumu
__builtin_rvv_vsext_vf4_tama
__builtin_rvv_vsext_vf8_tama
__builtin_rvv_vundefined
Print a template comparison tree for differing templates
--for-linker=
__builtin_rvv_vzext_vf8_ta
__builtin_rvv_vzext_vf8_tuma
zbb,64bit
LiLiLi
__builtin_riscv_clmulr
__builtin_riscv_brev8
LiLi
zknd,32bit
zknd,64bit
zknd|zkne,64bit
__builtin_riscv_aes32esi_32
__builtin_riscv_sha256sig0
__builtin_riscv_sha256sum0
__builtin_riscv_sha512sig0l_32
-mno-mfocrf
zknh,64bit
-fdigraphs
--force-link
SPIRV
ObjCInterfaceTypeLoc
sparc
__sparc_v8__
__leon__
__ma2085
__ma2x5x
__myriad2
__arch64__
f934
sparclet
niagara
niagara2
ma2455
ma2085
myriad2.1
myriad2.3
at697f
TypeLoc
__builtin_tx_assist
__builtin_s390_lcbb
V16ScUivC*
__builtin_s390_vperm
V16ScV8SsV8Ssi*
__builtin_s390_vpksfs
__builtin_s390_vpklshs
__builtin_s390_vpklsfs
__builtin_s390_vuphb
V8SsV16Sc
V8UsV16Uc
__builtin_s390_vuplhf
__builtin_s390_vaq
__builtin_s390_vaccb
__builtin_s390_vavgb
__builtin_s390_vavgg
__builtin_s390_vceqbs
Do not set the default structure layout to be compatible with the Microsoft compiler standard
__builtin_s390_vchbs
__builtin_s390_vchgs
__builtin_s390_vchlfs
__builtin_s390_vchlgs
__builtin_s390_vclzg
__builtin_s390_vctzf
__builtin_s390_verimf
V4UiV4UiV4UiV4UiIi
__builtin_s390_verllg
__builtin_s390_verllvh
__builtin_s390_vgfmf
V16UcV2ULLiV2ULLi
__builtin_s390_vgfmag
__builtin_s390_vmahh
__builtin_s390_vmaeb
Disable MT ASE (MIPS only)
__builtin_s390_vmaob
__builtin_s390_vmalob
__builtin_s390_vmhf
__builtin_s390_vmlhh
__builtin_s390_vmleh
__builtin_s390_vmoh
__builtin_s390_vpopctb
__builtin_s390_vpopcth
__builtin_s390_vscbih
__builtin_s390_vscbiq
__builtin_s390_vsrab
__builtin_s390_vsrlb
__builtin_s390_vsumgf
__builtin_s390_vsumqg
__builtin_s390_vfaebs
-mno-neg-immediates
V4UiV4UiV4UiIii*
__builtin_s390_vfaezh
__builtin_s390_vfeebs
__builtin_s390_vfeeh
__builtin_s390_vfeezb
__builtin_s390_vfeezhs
__builtin_s390_vfeneh
__builtin_s390_vfenehs
__builtin_s390_vfenezf
__builtin_s390_vistrbs
__builtin_s390_vistrf
V4UiV4Uii*
V8UsV8UsV8UsV8UsIii*
V4UiV4UiV4UiV4UiIii*
__builtin_s390_vstrczf
Disable generation of new-value jumps
__builtin_s390_vflndb
__builtin_s390_vfmsdb
__builtin_s390_vstrl
__builtin_s390_vmslg
__builtin_s390_vfnmsdb
__builtin_s390_vfchsbs
V4fV4fV4fIi
__builtin_s390_vfminsb
__builtin_s390_vfsqsb
__builtin_s390_vsld
V16UcV8UsV8UsV16Uci*
V16UcV4UiV4UiV16Uci*
__builtin_s390_vlbrg
__builtin_s390_vclfnls
__builtin_s390_vcfn
Disable odd single-precision floating point registers
__s390__
__ARCH__
10304
-mno-omit-leaf-frame-pointer
tcele
OMPDeclareReductionDecl
V256bV512b
V512bV512bV256b
V256dLUivC*V256dUi
__builtin_ve_vl_vldu_vssl
__builtin_ve_vl_vldlsx_vssvl
__builtin_ve_vl_vldlsxnc_vssvl
__builtin_ve_vl_vld2d_vssvl
__builtin_ve_vl_vldu2d_vssl
__builtin_ve_vl_vldl2dsx_vssvl
__builtin_ve_vl_vldl2dsxnc_vssl
vV256dLUiv*Ui
__builtin_ve_vl_vstnc_vssl
__builtin_ve_vl_vstncot_vssml
__builtin_ve_vl_vstu_vssml
__builtin_ve_vl_vstuncot_vssml
__builtin_ve_vl_vstlnc_vssl
__builtin_ve_vl_vstlncot_vssml
__builtin_ve_vl_vst2d_vssl
__builtin_ve_vl_vst2dncot_vssml
__builtin_ve_vl_vstu2dnc_vssl
__builtin_ve_vl_vstu2dncot_vssml
__builtin_ve_vl_vstl2d_vssml
__builtin_ve_vl_vstl2dncot_vssml
__builtin_ve_vl_pfchvnc_ssl
__builtin_ve_vl_lvsd_svs
Disable generation of instruction packets
__builtin_ve_vl_svm_sms
LUiV512bLUi
__builtin_ve_vl_vbrdd_vsmvl
__builtin_ve_vl_vbrdl_vsl
__builtin_ve_vl_vbrds_vsl
V256dfV256dUi
__builtin_ve_vl_vbrdw_vsvl
V256diV256dUi
__builtin_ve_vl_pvbrd_vsMvl
V256dUiV256dUi
__builtin_ve_vl_vaddul_vvvl
__builtin_ve_vl_vaddul_vvvvl
V256dV256dV256dV256bV256dUi
__builtin_ve_vl_vadduw_vvvl
__builtin_ve_vl_vadduw_vsvmvl
-mno-pconfig
V256dLUiV256dV512bV256dUi
__builtin_ve_vl_vaddswsx_vsvl
V256diV256dV256bV256dUi
__builtin_ve_vl_vaddswzx_vvvvl
__builtin_ve_vl_pvadds_vvvvl
__builtin_ve_vl_pvadds_vvvMvl
__builtin_ve_vl_vaddsl_vsvvl
V256dLiV256dV256dUi
__builtin_ve_vl_vsubul_vsvvl
__builtin_ve_vl_vsubuw_vvvl
__builtin_ve_vl_vsubuw_vsvmvl
__builtin_ve_vl_pvsubu_vvvvl
__builtin_ve_vl_vsubswsx_vvvvl
__builtin_ve_vl_vsubswsx_vvvmvl
__builtin_ve_vl_vsubswzx_vsvl
-mno-popcnt
__builtin_ve_vl_pvsubs_vsvMvl
__builtin_ve_vl_vsubsl_vsvl
__builtin_ve_vl_vmulul_vvvvl
__builtin_ve_vl_vmulul_vsvvl
__builtin_ve_vl_vmuluw_vsvvl
__builtin_ve_vl_vmulswsx_vvvl
__builtin_ve_vl_vmulswsx_vsvmvl
__builtin_ve_vl_vmulswzx_vvvl
__builtin_ve_vl_vmulsl_vvvvl
__builtin_ve_vl_vmulsl_vvvmvl
__builtin_ve_vl_vmulslw_vsvvl
__builtin_ve_vl_vdivul_vvvvl
__builtin_ve_vl_vdivuw_vvvvl
__builtin_ve_vl_vdivuw_vvvmvl
V256dV256dLUiV256dUi
-mno-prefetchwt1
V256dV256dUiV256bV256dUi
__builtin_ve_vl_vdivswsx_vsvl
__builtin_ve_vl_vdivswzx_vvvvl
__builtin_ve_vl_vdivswzx_vsvvl
V256dV256diV256dUi
__builtin_ve_vl_vdivswzx_vvsl
__builtin_ve_vl_vdivsl_vsvl
__builtin_ve_vl_vdivsl_vsvvl
__builtin_ve_vl_vdivsl_vvsmvl
__builtin_ve_vl_vcmpul_vvvvl
__builtin_ve_vl_vcmpuw_vvvl
__builtin_ve_vl_vcmpuw_vsvl
__builtin_ve_vl_pvcmpu_vsvl
__builtin_ve_vl_pvcmpu_vsvMvl
__builtin_ve_vl_vcmpswsx_vsvvl
-mno-pure-code
__builtin_ve_vl_pvcmps_vvvl
__builtin_ve_vl_pvcmps_vsvvl
__builtin_ve_vl_vcmpsl_vsvl
__builtin_ve_vl_vcmpsl_vvvmvl
__builtin_ve_vl_vmaxswsx_vvvmvl
__builtin_ve_vl_vmaxswzx_vvvvl
__builtin_ve_vl_pvmaxs_vvvl
__builtin_ve_vl_pvmaxs_vvvvl
__builtin_ve_vl_vminswsx_vsvl
__builtin_ve_vl_vminswsx_vsvmvl
__builtin_ve_vl_vminswzx_vvvmvl
__builtin_ve_vl_pvmins_vvvl
__builtin_ve_vl_vmaxsl_vvvl
__builtin_ve_vl_vmaxsl_vsvvl
__builtin_ve_vl_vminsl_vsvl
-mno-rdseed
__builtin_ve_vl_vand_vvvmvl
__builtin_ve_vl_pvand_vvvvl
__builtin_ve_vl_vor_vvvl
__builtin_ve_vl_vor_vsvl
__builtin_ve_vl_pvor_vsvl
__builtin_ve_vl_pvor_vsvMvl
__builtin_ve_vl_vxor_vvvmvl
__builtin_ve_vl_vxor_vsvmvl
__builtin_ve_vl_veqv_vvvl
__builtin_ve_vl_veqv_vsvvl
__builtin_ve_vl_pveqv_vsvl
__builtin_ve_vl_pveqv_vvvMvl
V256dV256dV256bV256dUi
__builtin_ve_vl_pvldzlo_vvmvl
__builtin_ve_vl_pvldzup_vvmvl
-mno-relax-pic-calls
__builtin_ve_vl_pvpcntlo_vvmvl
__builtin_ve_vl_pvpcntup_vvmvl
__builtin_ve_vl_vbrv_vvvl
__builtin_ve_vl_pvbrvlo_vvl
__builtin_ve_vl_pvbrv_vvl
__builtin_ve_vl_vseq_vl
__builtin_ve_vl_pvsequp_vl
__builtin_ve_vl_pvsequp_vvl
__builtin_ve_vl_vsll_vvvmvl
__builtin_ve_vl_pvsll_vvvvl
V256dV256dLUiV512bV256dUi
__builtin_ve_vl_vsrl_vvvvl
__builtin_ve_vl_pvsrl_vvvvl
__builtin_ve_vl_pvsrl_vvvMvl
__builtin_ve_vl_vslawsx_vvsvl
Disable linker relaxation
__builtin_ve_vl_vslawzx_vvsmvl
__builtin_ve_vl_pvsla_vvsl
__builtin_ve_vl_vslal_vvvvl
__builtin_ve_vl_vslal_vvsvl
__builtin_ve_vl_vsrawsx_vvsvl
__builtin_ve_vl_vsrawzx_vvvl
__builtin_ve_vl_vsrawzx_vvsmvl
__builtin_ve_vl_pvsra_vvvl
__builtin_ve_vl_vsral_vvvvl
__builtin_ve_vl_vsral_vvvmvl
V256dV256dLUiLUiV256dUi
V256dV256dLUiLUiV256bV256dUi
__builtin_ve_vl_vfaddd_vvvmvl
__builtin_ve_vl_vfadds_vvvl
V256dfV256dV256dUi
-mno-retpoline
__builtin_ve_vl_pvfadd_vsvMvl
__builtin_ve_vl_vfsubd_vsvl
__builtin_ve_vl_vfsubs_vvvvl
__builtin_ve_vl_vfsubs_vsvvl
__builtin_ve_vl_pvfsub_vsvvl
__builtin_ve_vl_vfmuld_vvvl
__builtin_ve_vl_vfmuld_vsvmvl
__builtin_ve_vl_vfmuls_vvvl
__builtin_ve_vl_pvfmul_vvvvl
__builtin_ve_vl_pvfmul_vvvMvl
__builtin_ve_vl_vfdivd_vsvvl
__builtin_ve_vl_vfdivd_vsvmvl
__builtin_ve_vl_vfdivs_vsvmvl
__builtin_ve_vl_vfsqrts_vvl
__builtin_ve_vl_vfcmpd_vsvvl
-mno-save-restore
__builtin_ve_vl_vfcmps_vsvmvl
__builtin_ve_vl_pvfcmp_vsvl
__builtin_ve_vl_vfmaxd_vvvvl
__builtin_ve_vl_vfmaxd_vsvvl
__builtin_ve_vl_vfmaxs_vsvvl
__builtin_ve_vl_pvfmax_vvvl
__builtin_ve_vl_pvfmax_vsvMvl
__builtin_ve_vl_vfmind_vvvl
__builtin_ve_vl_vfmins_vvvvl
__builtin_ve_vl_vfmins_vvvmvl
__builtin_ve_vl_pvfmin_vsvvl
__builtin_ve_vl_pvfmin_vsvMvl
V256ddV256dV256dV256dUi
__builtin_ve_vl_vfmadd_vvsvvl
V256dV256dV256dV256dV256bV256dUi
Disable speculative execution side effect suppression (SESES)
__builtin_ve_vl_vfmads_vvsvl
V256dV256dfV256dV256dUi
V256dV256dfV256dV256bV256dUi
__builtin_ve_vl_pvfmad_vvvvvl
V256dV256dLUiV256dV256dUi
__builtin_ve_vl_pvfmad_vsvvMvl
__builtin_ve_vl_vfmsbd_vvvvvl
__builtin_ve_vl_vfmsbd_vsvvl
__builtin_ve_vl_vfmsbs_vvvvl
__builtin_ve_vl_vfmsbs_vsvvvl
__builtin_ve_vl_vfmsbs_vvsvmvl
__builtin_ve_vl_pvfmsb_vvvvvl
__builtin_ve_vl_pvfmsb_vsvvMvl
__builtin_ve_vl_vfnmadd_vvvvvl
__builtin_ve_vl_vfnmadd_vvvvmvl
-mno-sign-ext
__builtin_ve_vl_vfnmads_vvsvvl
__builtin_ve_vl_vfnmads_vvsvmvl
__builtin_ve_vl_pvfnmad_vvsvl
__builtin_ve_vl_pvfnmad_vvvvMvl
__builtin_ve_vl_vfnmsbd_vsvvvl
__builtin_ve_vl_vfnmsbd_vvvvmvl
__builtin_ve_vl_vfnmsbs_vsvvl
__builtin_ve_vl_vfnmsbs_vsvvvl
__builtin_ve_vl_pvfnmsb_vvvvvl
__builtin_ve_vl_pvfnmsb_vvsvl
__builtin_ve_vl_vrcpd_vvl
__builtin_ve_vl_vrcps_vvl
__builtin_ve_vl_vrsqrts_vvl
__builtin_ve_vl_pvrsqrt_vvvl
__builtin_ve_vl_vrsqrtsnex_vvvl
-mno-speculative-load-hardening
__builtin_ve_vl_vcvtwdzx_vvl
__builtin_ve_vl_vcvtwdzxrz_vvl
__builtin_ve_vl_vcvtwssx_vvmvl
__builtin_ve_vl_vcvtwssxrz_vvvl
__builtin_ve_vl_vcvtwszxrz_vvvl
__builtin_ve_vl_pvcvtws_vvvl
__builtin_ve_vl_vcvtld_vvl
__builtin_ve_vl_vcvtld_vvvl
__builtin_ve_vl_vcvtsw_vvl
__builtin_ve_vl_pvcvtsw_vvvl
__builtin_ve_vl_vcvtsd_vvl
__builtin_ve_vl_vmrg_vvvml
__builtin_ve_vl_vmrgw_vvvMl
__builtin_ve_vl_vmrgw_vsvMl
V256dV256dV256dLUiUi
-mno-sse4.1
__builtin_ve_vl_pvfmkat_Ml
__builtin_ve_vl_vfmklgt_mvl
__builtin_ve_vl_vfmkllt_mvml
__builtin_ve_vl_vfmklne_mvml
__builtin_ve_vl_vfmklle_mvml
__builtin_ve_vl_vfmklnan_mvl
__builtin_ve_vl_vfmklltnan_mvml
__builtin_ve_vl_vfmklnenan_mvl
__builtin_ve_vl_vfmkllenan_mvml
__builtin_ve_vl_vfmkwlt_mvl
__builtin_ve_vl_vfmkweq_mvml
__builtin_ve_vl_vfmkwge_mvml
__builtin_ve_vl_vfmkwnan_mvml
__builtin_ve_vl_vfmkwltnan_mvl
__builtin_ve_vl_vfmkwnenan_mvl
-mno-sse
__builtin_ve_vl_pvfmkwupgt_mvml
__builtin_ve_vl_pvfmkwlolt_mvml
__builtin_ve_vl_pvfmkwupne_mvml
__builtin_ve_vl_pvfmkwupeq_mvl
__builtin_ve_vl_pvfmkwupge_mvml
__builtin_ve_vl_pvfmkwlole_mvml
__builtin_ve_vl_pvfmkwupnum_mvml
__builtin_ve_vl_pvfmkwlonan_mvl
__builtin_ve_vl_pvfmkwupgtnan_mvml
__builtin_ve_vl_pvfmkwloltnan_mvml
__builtin_ve_vl_pvfmkwupnenan_mvml
__builtin_ve_vl_pvfmkwupeqnan_mvl
__builtin_ve_vl_pvfmkwupgenan_mvml
__builtin_ve_vl_pvfmkwlolenan_mvml
V512bV256dV512bUi
-mno-stackrealign
__builtin_ve_vl_pvfmkwge_MvMl
__builtin_ve_vl_pvfmkwnum_Mvl
__builtin_ve_vl_pvfmkwgtnan_MvMl
__builtin_ve_vl_pvfmkwltnan_MvMl
__builtin_ve_vl_pvfmkwgenan_MvMl
__builtin_ve_vl_vfmkdgt_mvl
__builtin_ve_vl_vfmkdne_mvml
__builtin_ve_vl_vfmkdeq_mvl
__builtin_ve_vl_vfmkdnum_mvml
__builtin_ve_vl_vfmkdgtnan_mvl
__builtin_ve_vl_vfmkdnenan_mvml
__builtin_ve_vl_vfmkdeqnan_mvml
__builtin_ve_vl_vfmksgt_mvml
__builtin_ve_vl_vfmksne_mvl
__builtin_ve_vl_vfmksge_mvl
Disable threadgroup split execution mode (AMDGPU only)
__builtin_ve_vl_vfmksgtnan_mvml
__builtin_ve_vl_vfmksnenan_mvl
__builtin_ve_vl_vfmksgenan_mvml
__builtin_ve_vl_vfmkslenan_mvml
__builtin_ve_vl_pvfmksuplt_mvl
__builtin_ve_vl_pvfmkslone_mvl
__builtin_ve_vl_pvfmksupeq_mvl
__builtin_ve_vl_pvfmksloeq_mvml
__builtin_ve_vl_pvfmksuple_mvl
__builtin_ve_vl_pvfmkslonum_mvl
__builtin_ve_vl_pvfmksupnan_mvl
__builtin_ve_vl_pvfmksupnan_mvml
__builtin_ve_vl_pvfmksupltnan_mvl
__builtin_ve_vl_pvfmkslonenan_mvl
__builtin_ve_vl_pvfmksupeqnan_mvl
-mno-tsxldtrk
__builtin_ve_vl_pvfmksuplenan_mvl
__builtin_ve_vl_pvfmksgt_Mvl
__builtin_ve_vl_pvfmksne_MvMl
__builtin_ve_vl_pvfmkseq_MvMl
__builtin_ve_vl_pvfmksnum_MvMl
__builtin_ve_vl_pvfmksgtnan_Mvl
__builtin_ve_vl_pvfmksnenan_MvMl
__builtin_ve_vl_pvfmkseqnan_Mvl
__builtin_ve_vl_vsumwsx_vvml
__builtin_ve_vl_vsumwzx_vvml
__builtin_ve_vl_vfsums_vvl
__builtin_ve_vl_vrmaxswfstsx_vvl
__builtin_ve_vl_vrmaxswlstzx_vvl
__builtin_ve_vl_vrminswfstsx_vvvl
__builtin_ve_vl_vrminswfstzx_vvl
-mno-unaligned-access
__builtin_ve_vl_vrminsllst_vvl
__builtin_ve_vl_vfrmaxdfst_vvvl
__builtin_ve_vl_vfrmaxslst_vvl
__builtin_ve_vl_vfrmindfst_vvl
__builtin_ve_vl_vfrminslst_vvl
__builtin_ve_vl_vrand_vvml
__builtin_ve_vl_vgt_vvssl
__builtin_ve_vl_vgt_vvssvl
__builtin_ve_vl_vgtnc_vvssmvl
__builtin_ve_vl_vgtu_vvssml
__builtin_ve_vl_vgtunc_vvssmvl
__builtin_ve_vl_vgtlsx_vvssvl
__builtin_ve_vl_vgtlsxnc_vvssmvl
__builtin_ve_vl_vgtlzx_vvssml
__builtin_ve_vl_vgtlzxnc_vvssmvl
-mno-virt
__builtin_ve_vl_vscot_vvssml
__builtin_ve_vl_vscuot_vvssml
__builtin_ve_vl_vscuncot_vvssml
__builtin_ve_vl_vsclot_vvssml
__builtin_ve_vl_andm_mmm
__builtin_ve_vl_orm_MMM
__builtin_ve_vl_xorm_mmm
V256bV256b
__builtin_ve_vl_pcvm_sml
LUiLUiLUi
vLUiLUiLUi
LUiLUiUi
-fno-asm
0x4000
-no_new_main
bulk-memory
__builtin_wasm_min_f32
__builtin_wasm_max_f64
__builtin_wasm_memory_atomic_wait32
__builtin_wasm_memory_atomic_wait64
__builtin_wasm_trunc_s_i32_f64
__builtin_wasm_trunc_u_i64_f32
__builtin_wasm_trunc_saturate_u_i32_f32
__builtin_wasm_trunc_saturate_s_i32_f64
simd128
__builtin_wasm_add_sat_s_i16x8
__builtin_wasm_sub_sat_u_i16x8
__builtin_wasm_abs_i16x8
__builtin_wasm_min_u_i8x16
__builtin_wasm_min_s_i16x8
__builtin_wasm_min_u_i32x4
Specify wavefront size 32 mode (AMDGPU only)
V8sV16Sc
__builtin_wasm_all_true_i16x8
__builtin_wasm_bitmask_i16x8
UiV4i
__builtin_wasm_min_f32x4
__builtin_wasm_max_f32x4
__builtin_wasm_ceil_f32x4
__builtin_wasm_dot_s_i32x4_i16x8
__builtin_wasm_sqrt_f32x4
__builtin_wasm_narrow_u_i8x16_i16x8
V8sV4iV4i
V4iV2d
-mno-xgot
__builtin_wasm_min_s_i32x4
UiV2LLi
__builtin_wasm_floor_f64x2
cfg-conditional-static-initializers
__builtin_wasm_trunc_saturate_u_i32x4_f32x4
V8UsV4iV4i
-ffixed-x2
avoid-suppressing-null-argument-paths
suppress-inlined-defensive-checks
eagerly-assume
-mno-xsavec
--hash-style=gnu
-fd-lines-as-comments
Reserve the x2 register (AArch64/RISC-V only)
OMPPrivateClause
popcnt
-xsave
+gfni
+avx512vpopcntdq
+avx512dq
+avx512vl
+sha
+movbe
+xsavec
+pku
+clzero
+cldemote
+waitpkg
+pconfig
+amx-bf16
+amx-tile
+x87
__GCC_ASM_FLAG_OUTPUTS__
__x86_64h
Disallow use of CRC instructions (ARM only)
__pentium_mmx__
__tune_pentium3__
goldmont
tremont
__tune_k6_3__
__athlon_sse__
bdver1
bdver2
__AES__
__VPCLMULQDQ__
__BMI__
__POPCNT__
__LWP__
__XOP__
__GFNI__
-mnop-mcount
__AVX512DQ__
__AVX512VL__
__SHA__
__XSAVE__
__CLWB__
__SGX__
__RDPID__
__RDPRU__
__INVPCID__
__AMXTILE__
__TSXLDTRK__
__CRC32__
__SSE4_1__
__SSE2__
_M_IX86_FP
-mnvs
amx-int8
avx512cd
avx512fp16
avx512dq
avx512ifma
bmi2
enqcmd
f16c
movdiri
ptwrite
rdpru
shstk
sse4a
vpclmulqdq
-module-dependency-dir
ivybridge
cannonlake
+cmov,+mmx,+sse,+sse2
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt,+f16c,+avx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512f,+adx,+avx512er,+avx512pf,+avx512cd
pentium-mmx
pentium-m
{dx}
{st}
st(3)
st(5)
frame
xmm3
xmm7
-module-file-deps
xmm8
xmm11
ymm0
ymm2
ymm8
ymm11
xmm16
xmm17
xmm24
xmm27
ymm16
ymm18
ymm24
ymm27
zmm0
-module-suffix
zmm8
zmm11
zmm16
zmm18
zmm24
zmm27
tmm0
tmm2
Omit frame pointer setup for leaf functions
r10w
r11d
r13d
r14d
r15b
__builtin_cpu_init
__builtin_ia32_undef256
__builtin_ia32_undef512
__builtin_ia32_femms
V8cV8cV8c
__builtin_ia32_pfadd
__builtin_ia32_pfcmpge
__builtin_ia32_pfrcp
-moutline
__builtin_ia32_pi2fd
V4sV4sV4s
__builtin_ia32_pswapdsf
V2iV2i
__builtin_ia32_paddd
__builtin_ia32_paddsw
__builtin_ia32_psubd
__builtin_ia32_psubsb
V2iV4sV4s
__builtin_ia32_pandn
__builtin_ia32_pslld
__builtin_ia32_psllq
__builtin_ia32_psllwi
V2iV2ii
__builtin_ia32_psrldi
-mpackets
__builtin_ia32_punpckhbw
__builtin_ia32_punpcklbw
__builtin_ia32_pcmpeqd
__builtin_ia32_pcmpgtw
vV1Oi*V1Oi
__builtin_ia32_vec_init_v4hi
iV2ii
__builtin_ia32_cvtpi2ps
__builtin_ia32_pavgw
__builtin_ia32_pminsw
__builtin_ia32_psadbw
__builtin_ia32_pshufw
__builtin_ia32_cvtpd2pi
__builtin_ia32_cvtpi2pd
V1OiV2iV2i
-mpaired-vector-memops
__builtin_ia32_palignr
__builtin_ia32_phaddsw
__builtin_ia32_pmaddubsw
__builtin_ia32_pshufb
__builtin_ia32_comile
__builtin_ia32_comineq
__builtin_ia32_ucomige
__builtin_ia32_ucomineq
__builtin_ia32_ucomisdeq
__builtin_ia32_ucomisdgt
__builtin_ia32_cmpleps
__builtin_ia32_cmpneqps
__builtin_ia32_cmpless
__builtin_ia32_cmpnltss
__builtin_ia32_minps
-mpcrel
__builtin_ia32_cmpnlepd
__builtin_ia32_cmpltsd
__builtin_ia32_cmpnlesd
__builtin_ia32_minpd
__builtin_ia32_pavgw128
__builtin_ia32_packssdw128
__builtin_ia32_vec_ext_v4si
iV4iIi
__builtin_ia32_addsubpd
__builtin_ia32_hsubps
__builtin_ia32_phsubw128
__builtin_ia32_phsubsw128
__builtin_ia32_psignw128
_mm_setcsr
__builtin_ia32_cvttss2si
-mpower10-vector
__builtin_ia32_rsqrtss
__builtin_ia32_shufps
iV16c
vi*i
__builtin_ia32_psadbw128
__builtin_ia32_sqrtsd
__builtin_ia32_cvttpd2dq
__builtin_ia32_cvtsd2si
_mm_clflush
_mm_lfence
__builtin_ia32_pmuludq128
__builtin_ia32_psraw128
__builtin_ia32_psllw128
__builtin_ia32_psllwi128
__builtin_ia32_psllqi128
Specifies preferred vector width for auto-vectorization. Defaults to 'none' which allows target specific decisions.
V2OiV2OiIi
__builtin_ia32_mwait
__builtin_ia32_insertps128
__builtin_ia32_pblendvb128
__builtin_ia32_blendvps
__builtin_ia32_roundps
V2dV2dIi
__builtin_ia32_dpps
__builtin_ia32_mpsadbw128
__builtin_ia32_vec_ext_v16qi
V4iV4iiIi
__builtin_ia32_pcmpistri128
__builtin_ia32_pcmpistria128
__builtin_ia32_pcmpistris128
__builtin_ia32_pcmpestris128
-mprivileged
V2OiV2OiV16c
__builtin_ia32_insertq
__builtin_ia32_aesenc128
__builtin_ia32_aesdec128
__builtin_ia32_aesenc256
V8OiV8OiV8Oi
__builtin_ia32_aesdec512
__builtin_ia32_aesdeclast256
V64cV64cV64cIc
__builtin_ia32_vgf2p8affineqb_v32qi
__builtin_ia32_vgf2p8mulb_v64qi
__builtin_ia32_pclmulqdq128
avx512f,vpclmulqdq
__builtin_ia32_addsubps256
__builtin_ia32_haddpd256
Create phony target for each dependency (other than main file)
__builtin_ia32_vpermilvarpd256
V8fV8fV8i
__builtin_ia32_blendvpd256
__builtin_ia32_blendvps256
__builtin_ia32_cmppd
__builtin_ia32_cmpps
V2dV4dIi
__builtin_ia32_vextractf128_ps256
V8iV8f
__builtin_ia32_cvtpd2dq256
V8iV8iV8iIi
__builtin_ia32_vpermilps
V4dV4dV2dIi
__builtin_ia32_vinsertf128_si256
V8fV8f
__builtin_ia32_vtestzps
__builtin_ia32_vtestzpd256
iV8fV8f
__builtin_ia32_vtestnzcps256
iV4d
__builtin_ia32_vzeroall
__builtin_ia32_maskloadpd
V2dV2dC*V2Oi
__builtin_ia32_maskstorepd
vV4f*V4iV4f
__builtin_ia32_vec_ext_v32qi
__builtin_ia32_vec_ext_v16hi
__builtin_ia32_vec_set_v16hi
V8iV8iiIi
__builtin_ia32_packssdw256
-mrdrnd
__builtin_ia32_pblendvb256
V16sV16sV16sIi
__builtin_ia32_phsubw256
__builtin_ia32_phsubsw256
iV32c
__builtin_ia32_pmulhrsw256
V4OiV32cV32c
__builtin_ia32_pshufb256
__builtin_ia32_psignw256
V16sV16si
__builtin_ia32_pslldi256
__builtin_ia32_pslld256
__builtin_ia32_psrawi256
__builtin_ia32_psrad256
__builtin_ia32_psrld256
-mrecip=
__builtin_ia32_permvarsf256
__builtin_ia32_permdi256
__builtin_ia32_maskloadd256
__builtin_ia32_maskloadq256
__builtin_ia32_maskstored256
vV4Oi*V4OiV4Oi
__builtin_ia32_psllv8si
__builtin_ia32_psllv4si
__builtin_ia32_psrlv4di
V2dV2ddC*V4iV2dIc
__builtin_ia32_gatherq_pd256
__builtin_ia32_gatherd_ps
__builtin_ia32_gatherq_ps256
V2OiV2OiOiC*V4iV2OiIc
__builtin_ia32_gatherq_q
-mred-zone
__builtin_ia32_gatherq_d256
V8sV4fIi
__builtin_ia32_vcvtph2ps256
__builtin_ia32_rdrand16_step
vv*UOi
UOiUi
vUiUOi
_xsetbv
__builtin_ia32_rdsspd
__builtin_ia32_wrssd
__builtin_ia32_clflushopt
__builtin_ia32_wbinvd
__builtin_ia32_rdseed32_step
__builtin_ia32_bextr_u32
__builtin_ia32_pext_si
Limit the number of registers available for integer arguments
__builtin_ia32_sha1rnds4
__builtin_ia32_sha1msg1
__builtin_ia32_vfmaddps
__builtin_ia32_vfmaddpd
__builtin_ia32_vfmaddsubpd
__builtin_ia32_vfmaddsubps256
__builtin_ia32_vfmaddpd512_mask3
__builtin_ia32_vfmsubpd512_mask3
__builtin_ia32_vfmaddsubpd512_maskz
__builtin_ia32_vfmaddsubps512_mask
__builtin_ia32_vpmacsww
V4iV8sV8sV4i
__builtin_ia32_vpmacsdql
__builtin_ia32_vpmadcsswd
V4iV16c
Produce relaxation hints for linkers to try optimizing PIC call sequences into direct calls (MIPS only)
__builtin_ia32_vphaddubd
__builtin_ia32_vphadduwq
__builtin_ia32_vpperm
__builtin_ia32_vprotw
V8sV8sIc
__builtin_ia32_vprotqi
__builtin_ia32_vpshab
__builtin_ia32_vpshaw
__builtin_ia32_vpcomuq
__builtin_ia32_vpcomd
V4dV4dV4dV4OiIc
V4fV4fV4fV4iIc
__builtin_ia32_vfrczpd
__builtin_ia32_xbegin
__builtin_ia32_rdpmc
-mrelax
__builtin_ia32_rdpru
__builtin_ia32_sqrtpd512
V2dV2dV2dV2dUc
V4fV4fV4fV4fUc
V2dV2dV2dV2dUcIi
__builtin_ia32_rsqrt28pd_mask
__builtin_ia32_rcp14ss_mask
__builtin_ia32_rcp14pd512_mask
__builtin_ia32_exp2ps_mask
__builtin_ia32_cvttps2udq512_mask
UsV16fV16fIiUsIi
UcV8fV8fIiUc
UcV4dV4dIiUc
__builtin_ia32_rndscaleps_mask
__builtin_ia32_rndscalepd_mask
static,pic,ropi,rwpi,ropi-rwpi,dynamic-no-pic
__builtin_ia32_maxpd512
__builtin_ia32_cvtudq2ps512_mask
__builtin_ia32_vcvtph2ps512_mask
__builtin_ia32_pmuldq512
__builtin_ia32_loaddqudi512_mask
V16ffC*V16fUs
__builtin_ia32_loadapd512_mask
V8dV8dC*V8dUc
__builtin_ia32_storeapd512_mask
vf*V16fUs
__builtin_ia32_alignd512
__builtin_ia32_alignd128
V4dV8dIiV4dUc
__builtin_ia32_vpdpbusd128
__builtin_ia32_vpdpbusds128
-mretpoline
__builtin_ia32_vpdpwssds512
__builtin_ia32_gather3div2di
V4OiV4OivC*V4OiUcIi
V4fV4fvC*V2OiUcIi
V4iV4ivC*V4OiUcIi
__builtin_ia32_gather3siv2di
V4OiV4OivC*V4iUcIi
__builtin_ia32_gather3siv4sf
V8iV8ivC*V8iUcIi
__builtin_ia32_gathersiv16sf
V8fV8fvC*V8OiUcIi
V8OiV8OivC*V8iUcIi
V8iV8ivC*V8OiUcIi
__builtin_ia32_scattersiv16sf
__builtin_ia32_scatterdiv16sf
-mrtm
vv*UcV8OiV8iIi
__builtin_ia32_gatherpfdps
__builtin_ia32_scatterpfdpd
__builtin_ia32_scatterpfdps
UcUc
__builtin_ia32_knotdi
__builtin_ia32_cmpd128_mask
UcV4iV4iIiUc
__builtin_ia32_cmpd256_mask
UcV4OiV4OiIiUc
__builtin_ia32_cmpd512_mask
__builtin_ia32_cmpq512_mask
__builtin_ia32_ucmpq128_mask
__builtin_ia32_ucmpd256_mask
__builtin_ia32_ucmpq512_mask
-msave-temp-labels
__builtin_ia32_pavgb512
__builtin_ia32_pshufb512
__builtin_ia32_vpconflictsi_128
V8iV8i
__builtin_ia32_vpopcntd_128
__builtin_ia32_vpopcntd_256
V16cV16c
avx512vl,avx512bitalg
V64cV64c
__builtin_ia32_vpshufbitqmb128_mask
UOiV64cV64cUOi
__builtin_ia32_pmulhuw512
__builtin_ia32_mulpd512
__builtin_ia32_subps512
__builtin_ia32_pmaddwd512
-mseses
__builtin_ia32_mulsd_round_mask
__builtin_ia32_minsd_round_mask
__builtin_ia32_compressdi128_mask
__builtin_ia32_compressdi256_mask
V16sV16sV16sUs
__builtin_ia32_compressqi256_mask
V8fV8fV8fUc
__builtin_ia32_compresssi128_mask
vV4d*V4dUc
__builtin_ia32_compressstoredi256_mask
vV16s*V16sUs
vV16c*V16cUs
vV8f*V8fUc
__builtin_ia32_compressstoresi256_mask
V4fV2dV4fUc
-mshstk
__builtin_ia32_cvttpd2dq128_mask
__builtin_ia32_cvttps2udq128_mask
__builtin_ia32_expanddi256_mask
__builtin_ia32_expandhi256_mask
V4dV4dC*V4dUc
__builtin_ia32_expandloaddi256_mask
V16sV16sC*V16sUs
__builtin_ia32_expandloadqi128_mask
V8fV8fC*V8fUc
__builtin_ia32_expandloadsi256_mask
__builtin_ia32_expandsi256_mask
__builtin_ia32_getexppd256_mask
V4dV4dIiV4dUc
__builtin_ia32_rndscaleps_256_mask
V4dV4dV4dV4dUc
-msign-return-address=
vv*UcV4OiV4dIi
__builtin_ia32_scatterdiv4sf
vv*UcV4OiV4fIi
vv*UcV4OiV4iIi
vv*UcV4iV4dIi
__builtin_ia32_scattersiv4sf
vv*UcV8iV8fIi
__builtin_ia32_scattersiv8si
__builtin_ia32_vpermi2varpd256
V8dV8dV8OiV8d
__builtin_ia32_vpermi2varps512
__builtin_ia32_vpermi2varq128
__builtin_ia32_vpermi2varqi128
__builtin_ia32_vpermi2varqi512
__builtin_ia32_vpermi2varhi512
-msim
__builtin_ia32_vpshldw128
V32sV32sV32sIi
__builtin_ia32_vpshldvq256
__builtin_ia32_vpshldvw128
__builtin_ia32_vpshrdvq128
__builtin_ia32_vpshrdvw128
__builtin_ia32_vpshrdd512
__builtin_ia32_vpshrdq128
V32cV32sV32cUi
__builtin_ia32_cvtpd2qq128_mask
__builtin_ia32_cvtpd2uqq128_mask
__builtin_ia32_cvtps2qq128_mask
__builtin_ia32_cvtqq2ps128_mask
__builtin_ia32_cvttpd2qq256_mask
-fdump-fortran-optimized
-msmall-data-limit=
V4fV4fV4fIiV4fUc
__builtin_ia32_rangesd128_round_mask
__builtin_ia32_reducepd256_mask
__builtin_ia32_reduceps256_mask
V16cV16sV16cUs
__builtin_ia32_pmovwb128_mask
V8OiV8fV8OiUcIi
__builtin_ia32_cvtps2uqq512_mask
__builtin_ia32_cvttps2qq512_mask
__builtin_ia32_cvtuqq2ps512_mask
__builtin_ia32_reducepd512_mask
__builtin_ia32_prold512
__builtin_ia32_prolq128
__builtin_ia32_prolvq512
__builtin_ia32_prolvq128
-msoft-float
__builtin_ia32_prorvd128
__builtin_ia32_prorvq256
__builtin_ia32_psllw512
__builtin_ia32_psllwi512
__builtin_ia32_psllqi512
__builtin_ia32_psrlv16hi
__builtin_ia32_psrav16hi
__builtin_ia32_psrav8hi
__builtin_ia32_pslldqi512_byteshift
__builtin_ia32_movdqa32load256_mask
__builtin_ia32_movdqa64load512_mask
__builtin_ia32_movdqa64store512_mask
__builtin_ia32_movdqa64load256_mask
__builtin_ia32_vpmadd52huq512
__builtin_ia32_vpmadd52huq256
-msse2
__builtin_ia32_kunpcksi
__builtin_ia32_loaddquqi512_mask
__builtin_ia32_fixupimmps512_mask
__builtin_ia32_fixupimmps512_maskz
__builtin_ia32_fixupimmss_maskz
__builtin_ia32_getmantsd_round_mask
__builtin_ia32_loaddquhi256_mask
__builtin_ia32_loaddquqi128_mask
__builtin_ia32_fixupimmpd256_maskz
__builtin_ia32_fixupimmps128_maskz
__builtin_ia32_loadsd128_mask
__builtin_ia32_loadaps128_mask
__builtin_ia32_loaddqusi256_mask
__builtin_ia32_loadups128_mask
vV64c*V64cUOi
-msse4a
__builtin_ia32_storeaps128_mask
__builtin_ia32_storedqudi128_mask
__builtin_ia32_storeupd256_mask
__builtin_ia32_storeups256_mask
__builtin_ia32_vplzcntd_256
__builtin_ia32_vcvtsd2si32
iV4fIi
__builtin_ia32_vcvtss2usi32
__builtin_ia32_vpermilps512
__builtin_ia32_vpermilvarps512
__builtin_ia32_scalefps512_mask
__builtin_ia32_scalefss_round_mask
__builtin_ia32_psraqi256
__builtin_ia32_psllq512
__builtin_ia32_psllv8di
-mstack-alignment=
V16iV16iV16iV16iIiUs
V8OiV8OiV8OiV8OiIiUc
__builtin_ia32_pternlogd256_mask
__builtin_ia32_pternlogd256_maskz
__builtin_ia32_pternlogq256_maskz
__builtin_ia32_shuf_i32x4
__builtin_ia32_shuf_f64x2_256
__builtin_ia32_shuf_i32x4_256
__builtin_ia32_rsqrt14ps256_mask
__builtin_ia32_cvtmask2b512
UsV16i
V16iUs
UsV16c
__builtin_ia32_cvtmask2b128
V8sUc
-mstack-probe-size=
__builtin_ia32_cvtmask2d128
V8iUc
__builtin_ia32_cvtq2mask128
__builtin_ia32_cvtq2mask256
__builtin_ia32_pmovswb512mem_mask
V16sV16iV16sUs
__builtin_ia32_pmovsqb512mem_mask
vV16c*V8OiUc
__builtin_ia32_pmovsqw512mem_mask
V16cV4iV16cUc
__builtin_ia32_pmovsdb256_mask
__builtin_ia32_pmovsdb256mem_mask
__builtin_ia32_pmovsdw128mem_mask
V8sV8iV8sUc
V16cV2OiV16cUc
-mstack-protector-guard-reg=
__builtin_ia32_pmovsqd128mem_mask
V4iV4OiV4iUc
__builtin_ia32_pmovsqw128mem_mask
__builtin_ia32_pmovsqw256_mask
__builtin_ia32_pmovuswb512mem_mask
__builtin_ia32_pmovusqb512_mask
__builtin_ia32_pmovusqw512mem_mask
__builtin_ia32_pmovusdb128_mask
__builtin_ia32_pmovusdw128mem_mask
__builtin_ia32_pmovusqb128_mask
__builtin_ia32_pmovusqd128mem_mask
__builtin_ia32_pmovusqd256mem_mask
__builtin_ia32_pmovdb512mem_mask
__builtin_ia32_pmovdw512mem_mask
__builtin_ia32_pmovqw512_mask
-mstack-protector-guard=
__builtin_ia32_pmovdw128_mask
__builtin_ia32_pmovdw256mem_mask
__builtin_ia32_pmovqd128_mask
__builtin_ia32_pmovqd256mem_mask
V8fV16fIiV8fUc
__builtin_ia32_extracti32x8_mask
V4iV16iIiV4iUc
__builtin_ia32_extracti64x4_mask
V4fV8fIiV4fUc
__builtin_ia32_insertf32x8
V16iV16iV8iIi
V8OiV8OiV2OiIi
__builtin_ia32_inserti64x2_256
__builtin_ia32_insertf32x4
__builtin_ia32_inserti32x4
-mstrict-align
__builtin_ia32_vfmaddss3_maskz
__builtin_ia32_vfmaddsd3_maskz
__builtin_ia32_permdi512
__builtin_ia32_permvardf512
__builtin_ia32_permvarqi256
__builtin_ia32_permvardf256
UcV4dIiUc
__builtin_ia32_fpclassps128_mask
UcV8dIiUc
__builtin_ia32_kaddqi
__builtin_ia32_kandhi
__builtin_ia32_kanddi
__builtin_ia32_korhi
__builtin_ia32_kortestcqi
__builtin_ia32_kortestzhi
-msvr4-struct-return
__builtin_ia32_ktestzqi
__builtin_ia32_ktestcsi
__builtin_ia32_kxnorqi
__builtin_ia32_kxnorsi
__builtin_ia32_kshiftliqi
UsUsIUi
__builtin_ia32_kshiftrihi
__builtin_ia32_kshiftrisi
V64cV64cV64cIi
__builtin_ia32_dbpsadbw256
V8OiV64cV64c
__builtin_ia32_compressdi512_mask
__builtin_ia32_compresssf512_mask
__builtin_ia32_cmpsd_mask
__builtin_ia32_pshufd512
-mtail-call
__builtin_ia32_expandloadsf512_mask
__builtin_ia32_expandsi512_mask
__builtin_ia32_compressstorehi512_mask
__builtin_ia32_compressstoresf512_mask
__builtin_ia32_vcvtps2ph_mask
V8sV8fIiV8sUc
__builtin_ia32_cvtw2mask256
UsV16s
__builtin_ia32_cvtusi2ss32
__builtin_ia32_vpmultishiftqb128
__builtin_ia32_cvtne2ps2bf16_256
__builtin_ia32_cvtne2ps2bf16_512
__builtin_ia32_cvtneps2bf16_512_mask
V4fV4fV4iV4i
__builtin_ia32_cvtsbf162ss_32
/MTd
vV2OiV2OiUc*Uc*
__builtin_ia32_vp2intersect_d_256
iV8xV8xIiIi
V32xV32xV32xIi
__builtin_ia32_minph256
__builtin_ia32_minph128
V8xV8xV8xV8xUcIi
__builtin_ia32_divsh_round_mask
__builtin_ia32_cmpph256_mask
UcV8xV8xIiUc
__builtin_ia32_storesh128_mask
__builtin_ia32_rcpph128_mask
__builtin_ia32_rsqrtph128_mask
__builtin_ia32_getmantph128_mask
V16xV16xIiV16xUs
-mthread-model
V16xV16xV16xV16xUs
__builtin_ia32_rndscaleph_128_mask
__builtin_ia32_reduceph512_mask
__builtin_ia32_rsqrtsh_mask
V8xV8xV8xV8xUcIiIi
V8xV8x
__builtin_ia32_sqrtsh_round_mask
__builtin_ia32_fpclassph128_mask
__builtin_ia32_vcvtpd2ph128_mask
V8xV4dV8xUc
__builtin_ia32_vcvtph2pd256_mask
__builtin_ia32_vcvtph2pd512_mask
__builtin_ia32_vcvtsd2sh_round_mask
V2dV2dV8xV2dUcIi
__builtin_ia32_vcvtph2w512_mask
-mthumb
V16xV16sV16xUs
__builtin_ia32_vcvtph2uw128_mask
V32UsV32xV32UsUiIi
__builtin_ia32_vcvttph2uw256_mask
__builtin_ia32_vcvtuw2ph512_mask
V4iV8xV4iUc
__builtin_ia32_vcvtph2udq128_mask
V4UiV8xV4UiUc
__builtin_ia32_vcvtdq2ph256_mask
V16xV16iV16xUsIi
__builtin_ia32_vcvtudq2ph512_mask
__builtin_ia32_vcvttph2dq128_mask
__builtin_ia32_vcvtqq2ph128_mask
V8xV4OiV8xUc
V2OiV8xV2OiUc
Specify bit size of immediate TLS offsets (AArch64 ELF only): 12 (for 4KB) | 24 (for 16MB, default) | 32 (for 4GB) | 48 (for 256TB, needs -mcmodel=large)
__builtin_ia32_vcvtuqq2ph512_mask
V2UOiV8xV2UOiUc
__builtin_ia32_vcvttph2qq128_mask
__builtin_ia32_vcvttph2qq512_mask
__builtin_ia32_vcvtsh2usi32
V8xV8xUiIi
__builtin_ia32_vcvtph2psx128_mask
V4fV8xV4fUc
__builtin_ia32_vcvtps2phx256_mask
V16xV16fV16xUsIi
__builtin_ia32_vfmaddph512_mask
__builtin_ia32_vfmaddph512_maskz
__builtin_ia32_vfmsubaddph512_mask3
__builtin_ia32_vfmaddsh3_maskz
__builtin_ia32_vfmaddcph256_mask
-mtp
__builtin_ia32_vfcmaddcph256_maskz
__builtin_ia32_vfcmaddcph512_mask3
__builtin_ia32_vfmaddcsh_round_mask
__builtin_ia32_vfcmaddcsh_round_mask
__builtin_ia32_vfmulcph512_mask
__builtin_ia32_vfcmulcph512_mask
__builtin_ia32_selectb_512
V64cUOiV64cV64c
__builtin_ia32_selectd_128
V8iUcV8iV8i
__builtin_ia32_selectph_256
__builtin_ia32_selectph_512
__builtin_ia32_selectq_512
V4fUcV4fV4f
Dump record layout information with canonical field types
-mtune=
__builtin_ia32_selectsd_128
__builtin_ia32_reduce_fadd_ps512
xxV16x
xxV8x
xV32x
__builtin_ia32_reduce_fmax_ph128
__builtin_ia32_reduce_fmin_ph256
__builtin_ia32_reduce_fmin_ph128
__builtin_ia32_mwaitx
__builtin_ia32_umwait
__builtin_ia32_directstore_u32
__builtin_ia32_movdir64b
__builtin_ia32_enqcmds
__builtin_ia32_encodekey128_u32
UcV2Oi*V2OivC*
__builtin_ia32_aesdecwide128kl_u8
__builtin_ia32_xsusldtrk
__cpuidex
__emul
__int2c
__readfsbyte
__readgsword
__readgsdword
ULLiULLiULLiULLi*
ULLiULLiULLiUc
__builtin_ia32_cvtss2si64
__builtin_ia32_cvttss2si64
__builtin_ia32_vec_set_v2di
__builtin_ia32_vec_ext_v4di
__builtin_ia32_rdfsbase32
-muclibc
__builtin_ia32_fxsave64
__builtin_ia32_xsaveopt64
__builtin_ia32_rdsspq
vUOiv*
UiUOi*
__builtin_ia32_bextr_u64
__builtin_ia32_bextri_u64
UOiUOiIUOi
__builtin_ia32_vcvtsd2usi64
OiV4fIi
__builtin_ia32_vcvttss2si64
__builtin_ia32_cvtsi2sd64
__builtin_ia32_cvtusi2ss64
OiV8xIi
__builtin_ia32_vcvtsi642sh
-multiply_defined
__builtin_ia32_tile_loadconfig_internal
V256iUsUsUsV256iV256iV256i
__builtin_ia32_tdpbusd_internal
__builtin_ia32_tdpbf16ps_internal
__builtin_ia32_tilerelease
__builtin_ia32_tileloaddt164
-fdump-record-layouts-complete
Allow memory accesses to be unaligned (AArch32/AArch64 only)
200704
__XS1B__
break
default
double
goto
_ExtInt
short
-mv60
unsigned
while
_Complex
_Imaginary
__objc_no
delete
dynamic_cast
protected
this
true
wchar_t
alignas
constexpr
-mv67t
module
constinit
typeof
_Accum
__null
__builtin_choose_expr
__builtin_COLUMN
__builtin_source_location
__int128
__thread
__FUNCSIG__
L__FUNCSIG__
__is_nothrow_assignable
__is_assignable
__has_nothrow_copy
-mvaes
__is_aggregate
__is_convertible_to
__is_pod
__is_standard_layout
__has_unique_object_representations
__add_rvalue_reference
__remove_const
__remove_cv
__underlying_type
__is_unbounded_array
__is_lvalue_expr
__is_arithmetic
__is_function
__is_rvalue_reference
__is_scalar
Specify the vscale maximum. Defaults to the vector length agnostic value of "0". (AArch64 only)
__is_same
__array_extent
__builtin_ptrauth_struct_disc
__builtin_xnu_type_summary
__stdcall
__regcall
__global
__local
__read_write
image1d_t
image2d_depth_t
image2d_msaa_t
addrspace_cast
tbuffer
__bool
-mvx
__contravariant
_Nullable
__sptr
__w64
__if_exists
__multiple_inheritance
__builtin_available
__builtin_sycl_unique_stable_name
identifier
char_constant
string_literal
header_name
l_paren
r_brace
ampamp
-mwaitpkg
minusminus
exclaim
percentequal
lessless
greaterequal
caretequal
semi
equal
arrowstar
lesslessless
annot_template_id
annot_non_type_undeclared
annot_pragma_vis
annot_pragma_captured
annot_pragma_weakalias
-mwatchos-version-min=
annot_pragma_ms_vtordisp
annot_attr_openmp
annot_pragma_loop_hint
-mwatchsimulator-version-min=
/etc/env.d/gcc
__has_trivial_move_assign
__has_nothrow_constructor
__has_trivial_constructor
__is_class
__is_final
__is_trivial
__is_union
__is_scoped_enum
__is_floating_point
__is_function
__is_reference
__is_pointer
__is_member_pointer
__builtin_types_compatible_p
__is_assignable
__is_convertible
__is_nothrow_constructible
alignof
__alignof
-fno-cuda-rdc
 __attribute__((os_consumed
-Rno-
function-entry
function-exit
ompx_spmd_amenable
Use llvm.dbg.addr for all local variables
Pointer ABI alignment must be a power of 2
Sized aggregate specification in datalayout string
Invalid preferred alignment, must be a 16bit integer
Zero width native integer type in datalayout string
Unknown mangling in datalayout string
Preferred alignment cannot be less than the ABI alignment
-mxop
Enable adding flow sensitive discriminators
Enable optimization analysis remarks from passes whose name match the given regular expression
#       HIP Object Generator
-header-include-format=
Use opaque pointers
Propagate attributes in index
running pass 
use-dereferenceable-at-point-semantics
DW_TAG_formal_parameter
DW_TAG_member
DW_TAG_compile_unit
DW_TAG_union_type
DW_TAG_variant
DW_TAG_ptr_to_member_type
DW_TAG_with_stmt
DW_TAG_constant
DW_TAG_enumerator
DW_TAG_template_type_parameter
DW_TAG_try_block
DW_TAG_restrict_type
DW_TAG_namespace
DW_TAG_shared_type
DW_TAG_template_alias
DW_TAG_call_site
DW_TAG_GNU_BINCL
DW_TAG_GNU_template_parameter_pack
DW_TAG_SUN_function_template
DW_TAG_SUN_struct_template
DW_TAG_SUN_rtti_descriptor
DW_TAG_SUN_f90_interface
DW_TAG_ALTIUM_mwa_circ_type
DW_TAG_ALTIUM_rev_carry_type
DW_TAG_UPC_shared_type
DW_TAG_PGI_kanji_type
DW_TAG_BORLAND_Delphi_set
DW_AT_sibling
DW_AT_bit_size
DW_AT_high_pc
DW_AT_visibility
-no-canonical-prefixes
DW_AT_is_optional
DW_AT_prototyped
DW_AT_abstract_origin
DW_AT_address_class
DW_AT_decl_column
DW_AT_declaration
DW_AT_friend
DW_AT_identifier_case
DW_AT_type
DW_AT_virtuality
DW_AT_byte_stride
DW_AT_use_UTF8
DW_AT_call_line
DW_AT_decimal_scale
DW_AT_mutable
-no-code-completion-globals
DW_AT_signature
DW_AT_const_expr
DW_AT_rank
DW_AT_addr_base
DW_AT_macros
DW_AT_call_all_tail_calls
DW_AT_call_pc
DW_AT_call_tail_call
DW_AT_export_symbols
DW_AT_loclists_base
DW_AT_MIPS_loop_begin
DW_AT_MIPS_epilog_begin
DW_AT_MIPS_clone_origin
DW_AT_MIPS_stride_elem
DW_AT_MIPS_assumed_size
-no-cpp-precomp
DW_AT_HP_linkage_name
DW_AT_HP_unit_size
DW_AT_DW_AT_INTEL_other_endian
DW_AT_GHS_frsm
DW_AT_src_info
DW_AT_body_begin
DW_AT_GNU_call_site_value
DW_AT_GNU_call_site_data_value
DW_AT_GNU_macros
DW_AT_GNU_dwo_id
DW_AT_GNU_discriminator
DW_AT_GNU_entry_view
DW_AT_SUN_vbase
DW_AT_SUN_browser_file
DW_AT_SUN_omp_tpriv_addr
--no-cuda-noopt-device-debug
DW_AT_SUN_original_name
DW_AT_SUN_part_link_name
DW_AT_SUN_90_pointer
DW_AT_SUN_f90_allocatable
DW_AT_SUN_dtor_state_initial
DW_AT_SUN_import_by_lname
DW_AT_SUN_fortran_based
DW_AT_ALTIUM_loclist
DW_AT_GO_key
DW_AT_GO_runtime_type
DW_AT_PGI_lbase
DW_AT_PGI_lstride
DW_AT_BORLAND_Delphi_unit
DW_AT_BORLAND_Delphi_metaclass
DW_AT_BORLAND_Delphi_anonymous_method
Disable loading default configuration files
DW_AT_LLVM_ptrauth_key
DW_AT_LLVM_apinotes
DW_AT_APPLE_isa
DW_AT_APPLE_major_runtime_vers
DW_AT_APPLE_property_attribute
DW_AT_APPLE_objc_direct
DW_FORM_block4
DW_FORM_data2
DW_FORM_flag
DW_FORM_udata
DW_FORM_ref8
DW_FORM_indirect
DW_FORM_addrx
DW_FORM_data16
DW_FORM_ref_sup8
Disable analyzing function argument and return types for mandatory definedness
DW_FORM_addrx4
DW_FORM_GNU_ref_alt
DW_OP_const1u
DW_OP_const2u
DW_OP_constu
DW_OP_drop
DW_OP_xderef
DW_OP_abs
DW_OP_not
DW_OP_plus_uconst
DW_OP_bra
DW_OP_ge
DW_OP_lit0
DW_OP_lit3
DW_OP_lit7
Do not bundle output files of HIP device compilation
DW_OP_lit16
DW_OP_lit19
DW_OP_lit24
DW_OP_lit26
DW_OP_reg0
DW_OP_reg3
DW_OP_reg8
DW_OP_reg9
DW_OP_reg16
DW_OP_reg19
DW_OP_reg24
DW_OP_reg26
DW_OP_breg0
DW_OP_breg3
DW_OP_breg8
-no-implicit-sme
DW_OP_breg16
DW_OP_breg19
DW_OP_breg24
DW_OP_breg26
DW_OP_regx
DW_OP_piece
DW_OP_call2
DW_OP_call4
DW_OP_implicit_pointer
DW_OP_entry_value
DW_OP_convert
DW_OP_GNU_push_tls_address
DW_OP_HP_tls
DW_OP_WASM_location_int
DW_OP_GNU_entry_value
--no-line-commands
DW_ATE_boolean
DW_ATE_signed
DW_ATE_packed_decimal
DW_ATE_edited
DW_ATE_ASCII
DW_ATE_HP_complex_float128
DW_DS_leading_overpunch
DW_DS_trailing_overpunch
DW_END_hi_user
DW_ACCESS_private
DW_VIS_exported
DW_VIRTUALITY_none
DW_LANG_C_plus_plus
DW_LANG_Fortran77
DW_LANG_C99
Remove CUDA/HIP offloading device architecture (e.g. sm_35, gfx906) from the list of devices to compile for. 'all' resets the list to its default value.
DW_LANG_Python
DW_LANG_Modula3
DW_LANG_Rust
DW_LANG_Swift
DW_LANG_RenderScript
DW_LANG_GOOGLE_RenderScript
DW_ID_case_insensitive
DW_CC_normal
DW_CC_BORLAND_safecall
DW_CC_BORLAND_msfastcall
DW_CC_LLVM_Win64
DW_CC_LLVM_AAPCS
DW_CC_LLVM_PreserveMost
DW_CC_LLVM_SwiftTail
DW_INL_declared_not_inlined
Disable opaque pointers
DW_LNS_set_column
DW_LNS_const_add_pc
DW_LNE_end_sequence
DW_LNE_define_file
DW_MACINFO_vendor_ext
DW_MACRO_undef
DW_MACRO_import
DW_MACRO_define_sup
DW_MACRO_GNU_start_file
DW_MACRO_GNU_undef_indirect
DW_RLE_end_of_list
DW_RLE_startx_endx
DW_LLE_end_of_list
DW_LLE_startx_length
DW_LLE_start_length
-no-round-trip-args
DW_CFA_restore
DW_CFA_advance_loc2
DW_CFA_same_value
DW_CFA_remember_state
DW_CFA_expression
DW_CFA_def_cfa_offset_sf
DW_CFA_LLVM_def_aspace_cfa_sf
DW_APPLE_PROPERTY_readonly
DW_APPLE_PROPERTY_setter
DW_APPLE_PROPERTY_strong
DW_UT_compile
DW_UT_partial
DW_ATOM_cu_offset
DW_ATOM_qual_name_hash
TYPE
The compilation directory to embed in the debug info
Disallow __declspec as a keyword
-no-struct-path-tbaa
powerpc-sf
R_NEG
R_TRL
R_BA
R_RBA
R_TLSM
ld-linux-armhf.so.3
pass cc1 options to depscan afterwards
Size is not plausible
Blob ends too soon
ld-linux-loongarch-
cortex-a510
cortex-a65ae
cortex-a76ae
cortex-a78c
cortex-x2
neoverse-n1
apple-a7
apple-a10
apple-a15
apple-m1
exynos-m5
kryo
thunderxt81
thunderxt83
+rdm
+aes
+fp-armv8
+sve
+sve2-sm4
+rand
+mte
+f64mm
+brbe
+sme-i16i64
+hbc
8.1-A
armv8.3-a
-nocudainc
+v8.5a
+v8.6a
8.8-A
armv9-a
armv9.2-a
armv9.3-a
+v8r
none
crypto
-sm4
dotprod
fp16
-fp16fml
-ras
-nofixprebinding
sve2-sha3
-sve2-bitperm
memtag
predres
-bf16
f64mm
-f64mm
pauth
-flagm
sme-i16i64
sme2
-fdwarf-exceptions
windows
v6-m
v7-a
v7em
v8.1a
v8.2-a
v8.5a
v8.5-a
v9.2-a
v9.3-a
v8.1-m.main
-vfp3
-vfp4
/nologo
-d32
maverick
vfp2
vfp3-d16
vfpv4-d16
fpv4-dp-d16
fp5-sp-d16
generic
strongarm
arm7tdmi-s
arm720t
arm940t
arm1020t
arm10e
-noprofilelib
arm1176jz-s
arm1156t2f-s
cortex-a5
cortex-a8
cortex-r4
cortex-r7
cortex-m4
cortex-m7
cortex-a35
cortex-a57
cortex-a76ae
cortex-a78
neoverse-n2
exynos-m3
iwmmxt
Disable standard #include directories for the C++ standard library
aapcs-linux
armv5t
armv6
armv6k
+v6t2
armv6kz
armv7-m
+v7m
+v8a
+v8.1a
8.3-A
-nostdlib
armv8.6-a
armv8.7-a
+v8.8a
9.2-A
9.3-A
armv8-m.base
8-M.Baseline
+v8.1m.main
none
vfpv3-fp16
fp-armv8-fullfp16-sp-d16
neon-fp-armv8
mve.fp
Don't automatically start assembly file with a text section
-i8mm
-lob
-cdecp1
+cdecp2
+cdecp4
+cdecp5
+cdecp6
Significand has no digits
Invalid string length
e+00
16bit
Bytes allocated: 
-%%%%%%.
>...
' value invalid for ullong argument!
' registered more than once!
Cannot specify more than one option with cl::ConsumeAfter!
zlib error: Z_STREAM_ERROR
+fpuv3_df
ck802
e802
ck803h
ck803ht
ck803eht
ck803ft
ck803r3
ck803hr1
ck803htr2
ck803fr2
ck803er1
ck803er3
ck803etr3
ck803ehtr3
ck803efhr2
ck803efhr3
ck803efhtr1
s803
ck803st
ck803sf
ck804ht
ck804e
ck804efh
Inline functions as deemed beneficial by the compiler
e804df
ck805e
ck805ft
c807
r807f
ck810
ck810f
ck810tv
ck810fv
ck860
c860
fpuv2_sf
-fpuv2_sf
-fpuv2_df
-fpuv3_hi
Add directory to the ObjC SYSTEM include search path
-floate1
-float1e2
+float3e4
float7e60
multiple_stld
pushpop
-edsp
dsp1e2
+dspv2
+dsp_silan
trust
-trust
-cache
-nvic
+high-registers
Make migration to 'atomic' properties
vdsp2e60f
vdspv2
-hard-tp
+soft-tp
+constpool
+stack-size
vdspv1
+vdspv1
-2e3
+3e3r1
3e3r2
mp1e2
-ffreestanding
-guard:ehcont-
Do not include fixit information in diagnostics
line 
failed_to_rename_temp_file
 complex
operator co_await
operator.
template<
_GLOBAL__N
string literal
VTT for 
thread-local initialization routine for 
virtual thunk to 
construction vtable for 
endcond
Invalid JSON value (null?)
Expected , or ] after array element
Unterminated string
Invalid \u escape sequence
failed to remove lockfile 
EXTERNAL_INCLUDE
Stack dump:
string must begin with rv32{i,e,g} or rv64{i,g}
invalid extension prefix '
zfinx
zve32f
zvfh
zfhmin
ilp32e
lp64
zihintpause
zbkx
zknh
zvl256b
zvl2048b
zvl65536b
Enable migration to modern ObjC property
Failed to parse major version number for extension '
requires '-menable-experimental-extensions' for experimental extension '
' (this compiler supports 
-disable-llvm-passes
-objcmt-migrate-protocol-conformance
 [ (
/diasdkdir
malformed section 
Invalid cache file
line
' have both been used in prior remappings. Move this remapping earlier in the file.
Set the default double precision kind to an 8 byte wide type
generic-rv64
sifive-e21
sifive-e34
sifive-s76
rocket
tahiti
pitcairn
kaveri
gfx702
bonaire
gfx801
fiji
gfx805
gfx902
gfx904
gfx1010
gfx1013
gfx1034
gfx1036
rv630
rs780
rv710
rv730
juniper
sumo2
turks
rv32imc
--cuda-host-only
   --User+System--
  --- Name ---
.sys
misc
        -----     
pure
amdil64
csky
hexagon
le64
m68k
msp430
nvptx
renderscript32
riscv64
spir64
spir
thumbeb
wasm64
mipsisa32r6el
mipsisa64r6el
amdpal
darwin
dragonfly
hermit
kfreebsd
minix
nacl
solaris
xros
-object-file-name=
gnueabi
msvc
musl
vertex
domain
anyhit
closesthit
mipsn32
cortex-a7
strongarm
powerpcspe
mipseb
mipsn32el
spirv32v1.4
spirv64v1.1
spirv64v1.5
Apply modifications and produces temporary files to migrate to modern ObjC syntax
Disable optimization
TANGUT IDEOGRAPH-
Enable C++17 aligned allocation functions
 -> '
expected root node
 CWD
case-sensitive
expected integer
expected valid redirect kind
use-external-name
unknown value for 'type'
fallback
  'version': 0,
  'roots': [
'type': 'directory',
-fsanitize-coverage-trace-bb
 (exists)
ImplyCreateDirectories
output has open proxy
error: 
warning: 
--extra-warnings
ssse3
avx2
avx512vl
avx512vbmi
avx5124fmaps
avx512vnni
avx512bf16
winchip2
pentium
pentium3
pentium3m
nocona
bonnell
goldmont-plus
nehalem
core-avx-i
broadwell
cooperlake
cannonlake
athlon-xp
athlon-4
athlon64-sse3
barcelona
bdver3
x86-64-v4
3dnowa
amx-tile
clflushopt
enqcmd
fxsr
lzcnt
movbe
prfchw
rdpru
serialize
vzeroupper
xsaves
Place each function in its own section
Cannot consume non-ascii characters
Found unexpected ':' while scanning a plain scalar
Expected a line break after block scalar header
-?:,[]{}#&*!|>'"%@`
tag:yaml.org,2002:null
tag:yaml.org,2002:seq
Unexpected token. Expected Key, Flow Entry, or Flow Mapping End.
Expected , between entries!
Already encountered an anchor for this node!
not a sequence
unknown bit value
Map value must not be empty
false
-fapple-link-rtlib
cntrl
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~ 
xdigit
backspace
exclamation-mark
ampersand
left-parenthesis
hyphen-minus
slash
four
five
less-than-sign
question-mark
right-square-bracket
circumflex-accent
grave-accent
invalid regular expression
REG_ECTYPE
invalid backreference number
REG_EPAREN
invalid repetition count(s)
invalid character range
empty (sub)expression
REG_INVARG
-opt-record-passes
swift
apple-a10
apple-a13
values-xpg6.o
0123456789abcdef
.cache
COLUMNS
Error waiting for child process
Executable "
/dev/null
Cannot posix_spawn_file_actions_addopen
 + %tu
-fconstant-string-class=
pthread_attr_destroy failed
Missing PublicSDKContentRoot
__builtin_sve_svldff1_gather_s64index_s64
__builtin_sve_svldff1_gather_s64offset_f64
__builtin_sve_svldff1_gather_s64offset_s64
__builtin_sve_svldff1_gather_u32base_index_f32
__builtin_sve_svldff1_gather_u32base_index_s32
__builtin_sve_svldff1_gather_u32base_offset_s32
SPIRV::Linker
__builtin_sve_svldff1_gather_u32index_f32
__builtin_sve_svldff1_gather_u32index_s32
__builtin_sve_svldff1_gather_u32offset_s32
SPIR-V::Translator
__builtin_sve_svldff1_gather_u64base_index_s64
__builtin_sve_svldff1_gather_u64base_index_u64
__builtin_sve_svldff1_gather_u64base_offset_s64
/opt/nec/ve/bin
__builtin_sve_svldff1_gather_u64index_s64
__builtin_sve_svldff1_gather_u64index_u64
__builtin_sve_svldff1_gather_u64offset_u64
NCC_C_INCLUDE_PATH
__builtin_sve_svldff1_s8
__builtin_sve_svldff1_u16
-fsanitize-coverage=
NCC_CPLUS_INCLUDE_PATH
__builtin_sve_svldff1_vnum_f64
__builtin_sve_svldff1_vnum_s16
__builtin_sve_svldff1_vnum_s8
__builtin_sve_svldff1_vnum_u8
__builtin_sve_svldff1sb_gather_s32offset_s32
__builtin_sve_svldff1sb_gather_s64offset_s64
wasm32
__builtin_sve_svldff1sb_gather_u32base_u32
__builtin_sve_svldff1sb_gather_u32offset_s32
__builtin_sve_svldff1sb_gather_u64base_offset_u64
crt1-reactor.o
__builtin_sve_svldff1sb_gather_u64offset_u64
__builtin_sve_svldff1sb_s16
-fsanitize-hwaddress-abi=
--shared-memory
__builtin_sve_svldff1sb_vnum_s32
__builtin_sve_svldff1sb_vnum_s64
__builtin_sve_svldff1sb_vnum_u64
-mno-atomics
__builtin_sve_svldff1sh_gather_s32offset_u32
__builtin_sve_svldff1sh_gather_s64index_s64
__builtin_sve_svldff1sh_gather_s64offset_s64
-mno-mutable-globals
__builtin_sve_svldff1sh_gather_u32base_offset_u32
__builtin_sve_svldff1sh_gather_u32base_s32
__builtin_sve_svldff1sh_gather_u32index_u32
+atomics
__builtin_sve_svldff1sh_gather_u64base_index_u64
__builtin_sve_svldff1sh_gather_u64base_offset_s64
-fno-dump-parse-tree
+mutable-globals
__builtin_sve_svldff1sh_gather_u64offset_u64
__builtin_sve_svldff1sh_s32
__builtin_sve_svldff1sh_u64
-fPIC
__builtin_sve_svldff1sh_vnum_u64
__builtin_sve_svldff1sw_gather_s64index_s64
__builtin_sve_svldff1sw_gather_s64offset_s64
-mno-exception-handling
__builtin_sve_svldff1sw_gather_u64base_offset_u64
__builtin_sve_svldff1sw_gather_u64base_s64
__builtin_sve_svldff1sw_gather_u64index_u64
-mllvm -enable-emscripten-cxx-exceptions
__builtin_sve_svldff1sw_u64
__builtin_sve_svldff1sw_vnum_s64
-fsanitize-ignorelist=
-wasm-enable-eh
__builtin_sve_svldff1ub_gather_u32base_offset_u32
__builtin_sve_svldff1ub_gather_u32base_s32
__builtin_sve_svldff1ub_gather_u32offset_u32
-mllvm -emscripten-cxx-exceptions-allowed
__builtin_sve_svldff1ub_gather_u64base_u64
__builtin_sve_svldff1ub_gather_u64offset_s64
__builtin_sve_svldff1ub_s16
:noinline
__builtin_sve_svldff1ub_u64
__builtin_sve_svldff1ub_vnum_s16
__builtin_sve_svldff1ub_vnum_u16
-mllvm -enable-emscripten-sjlj
__builtin_sve_svldff1uh_gather_s32index_u32
/llvm-lto/1500.0.12git
-fno-dwarf2-cfi-asm
wasm::Linker
__builtin_sve_svldff1uh_gather_u32base_index_u32
__builtin_sve_svldff1uh_gather_u32base_offset_s32
__builtin_sve_svldff1uh_gather_u32base_u32
-fverbose-asm
__builtin_sve_svldff1uh_gather_u32offset_u32
__builtin_sve_svldff1uh_gather_u64base_index_s64
__builtin_sve_svldff1uh_gather_u64base_offset_s64
XCC_C_INCLUDE_PATH
__builtin_sve_svldff1uh_gather_u64index_u64
__builtin_sve_svldff1uh_gather_u64offset_s64
__builtin_sve_svldff1uh_s64
XCore::Assembler
__builtin_sve_svldff1uh_vnum_s64
__builtin_sve_svldff1uh_vnum_u32
-fsanitize-memory-param-retval
XCore::Linker
__builtin_sve_svldff1uw_gather_u64base_index_u64
__builtin_sve_svldff1uw_gather_u64base_offset_s64
__builtin_sve_svldff1uw_gather_u64base_u64
--input-format=IFS
__builtin_sve_svldff1uw_gather_u64offset_u64
__builtin_sve_svldff1uw_s64
__builtin_sve_svldff1uw_vnum_s64
--output-format=IFS
__builtin_sve_svldnf1_f64
__builtin_sve_svldnf1_s16
__builtin_sve_svldnf1_s8
.ifso
__builtin_sve_svldnf1_u8
__builtin_sve_svldnf1_vnum_bf16
Disable C++ copy constructor elision
__builtin_sve_svldnf1_vnum_s8
__builtin_sve_svldnf1_vnum_u16
__builtin_sve_svldnf1_vnum_u8
__builtin_sve_svldnf1sb_u16
__builtin_sve_svldnf1sb_u32
__builtin_sve_svldnf1sb_vnum_s16
__builtin_sve_svldnf1sb_vnum_u64
__builtin_sve_svldnf1sh_s32
__builtin_sve_svldnf1sh_u64
__builtin_sve_svldnf1sh_vnum_u64
__builtin_sve_svldnf1sw_s64
-fsanitize-memory-track-origins
__builtin_sve_svldnf1ub_u16
__builtin_sve_svldnf1ub_u32
__builtin_sve_svldnf1ub_vnum_s32
__builtin_sve_svldnf1ub_vnum_u64
__builtin_sve_svldnf1uh_s32
__builtin_sve_svldnf1uh_u32
clcpp
__builtin_sve_svldnf1uh_vnum_u64
__builtin_sve_svldnf1uw_s64
__builtin_sve_svldnf1uw_vnum_u64
__builtin_sve_svldnt1_f32
Do not elide types when printing diagnostics
__builtin_sve_svldnt1_gather_u32base_index_f32
__builtin_sve_svldnt1_gather_u32base_index_s32
__builtin_sve_svldnt1_gather_u32base_offset_s32
__builtin_sve_svldnt1_gather_u32offset_f32
__builtin_sve_svldnt1_gather_u32offset_s32
__builtin_sve_svldnt1_gather_u64base_f64
__builtin_sve_svldnt1_gather_u64base_offset_s64
__builtin_sve_svldnt1_gather_u64base_offset_u64
__builtin_sve_svldnt1_gather_u64index_f64
__builtin_sve_svldnt1_gather_u64offset_s64
__builtin_sve_svldnt1_gather_u64offset_u64
Set default MTE mode to 'sync' (default) or 'async'
__builtin_sve_svldnt1_u64
__builtin_sve_svldnt1_u8
__builtin_sve_svldnt1_vnum_f32
__builtin_sve_svldnt1_vnum_s64
__builtin_sve_svldnt1_vnum_s8
__builtin_sve_svldnt1_vnum_u32
__builtin_sve_svldnt1b_u8_x2
__builtin_sve_svldnt1b_u8_x4
__builtin_sve_svldnt1b_vnum_u8_x2
__builtin_sve_svldnt1d_s64_x2
__builtin_sve_svldnt1d_s64_x4
-fno-eliminate-unused-debug-types
__builtin_sve_svldnt1d_vnum_u64_x2
__builtin_sve_svldnt1d_vnum_u64_x4
__builtin_sve_svldnt1h_f16_x2
cppm
__builtin_sve_svldnt1h_u16_x2
__builtin_sve_svldnt1h_u16_x4
__builtin_sve_svldnt1h_vnum_bf16_x4
cpp-output
__builtin_sve_svldnt1h_vnum_u16_x2
__builtin_sve_svldnt1h_vnum_u16_x4
__builtin_sve_svldnt1sb_gather_u32base_offset_s32
cuda
__builtin_sve_svldnt1sb_gather_u32offset_s32
__builtin_sve_svldnt1sb_gather_u32offset_u32
-fsanitize-recover
objective-c-cpp-output
__builtin_sve_svldnt1sh_gather_s64index_s64
__builtin_sve_svldnt1sh_gather_s64index_u64
__builtin_sve_svldnt1sh_gather_u32base_index_s32
objective-c
__builtin_sve_svldnt1sh_gather_u32base_s32
__builtin_sve_svldnt1sh_gather_u32base_u32
__builtin_sve_svldnt1sh_gather_u32offset_u32
objective-c++-cpp-output
__builtin_sve_svldnt1sh_gather_u64base_s64
__builtin_sve_svldnt1sh_gather_u64base_u64
__builtin_sve_svldnt1sh_gather_u64offset_s64
objective-c++
__builtin_sve_svldnt1sw_gather_s64offset_s64
renderscript
-fno-emulated-tls
c-header-cpp-output
__builtin_sve_svldnt1sw_gather_u64index_s64
__builtin_sve_svldnt1sw_gather_u64index_u64
__builtin_sve_svldnt1ub_gather_s64offset_s64
cl-header
__builtin_sve_svldnt1ub_gather_u32base_s32
__builtin_sve_svldnt1ub_gather_u32base_u32
__builtin_sve_svldnt1ub_gather_u32offset_u32
objective-c-header
__builtin_sve_svldnt1ub_gather_u64offset_s64
__builtin_sve_svldnt1ub_gather_u64offset_u64
__builtin_sve_svldnt1uh_gather_s64offset_s64
c++-header
__builtin_sve_svldnt1uh_gather_u32base_offset_s32
__builtin_sve_svldnt1uh_gather_u32base_offset_u32
Alias for -fsanitize-system-ignorelist=
c++-header-unit-header
__builtin_sve_svldnt1uh_gather_u64base_offset_s64
__builtin_sve_svldnt1uh_gather_u64base_offset_u64
__builtin_sve_svldnt1uh_gather_u64index_s64
c++-user-header
__builtin_sve_svldnt1uw_gather_s64index_s64
__builtin_sve_svldnt1uw_gather_s64index_u64
__builtin_sve_svldnt1uw_gather_s64offset_u64
objective-c++-header
__builtin_sve_svldnt1uw_gather_u64base_s64
__builtin_sve_svldnt1uw_gather_u64base_u64
__builtin_sve_svldnt1uw_gather_u64offset_s64
c++-module-cpp-output
__builtin_sve_svldnt1w_s32_x2
__builtin_sve_svldnt1w_s32_x4
-fno-exceptions
assembler
__builtin_sve_svldnt1w_vnum_u32_x2
__builtin_sve_svldnt1w_vnum_u32_x4
__builtin_sve_svlen_f16
f95-cpp-input
__builtin_sve_svlen_f64
UWiq2d
UWiq8s
__builtin_sve_svlen_s8
UWiq16Sc
__builtin_sve_svlen_u32
lto-bc
__builtin_sve_svlen_u8
UWiq16Uc
Enable atomic operations instrumentation in ThreadSanitizer (default)
header-unit
__builtin_sve_svlogb_f64_m
__builtin_sve_svlogb_f64_x
__builtin_sve_svlsl_n_s16_x
rewritten-objc
__builtin_sve_svlsl_n_s32_z
__builtin_sve_svlsl_n_s64_m
__builtin_sve_svlsl_n_s64_z
remap
__builtin_sve_svlsl_n_u16_x
__builtin_sve_svlsl_n_u16_z
__builtin_sve_svlsl_n_u32_z
object
Set the default integer kind to an 8 byte wide type
treelang
-fno-expensive-optimizations
image
__builtin_sve_svlsl_s32_z
__builtin_sve_svlsl_s64_m
__builtin_sve_svlsl_s8_m
dSYM
__builtin_sve_svlsl_u16_x
__builtin_sve_svlsl_u16_z
__builtin_sve_svlsl_u32_x
__builtin_sve_svlsl_u8_m
__builtin_sve_svlsl_u8_x
__builtin_sve_svlsl_wide_n_s16_x
fatbin
__builtin_sve_svlsl_wide_n_s32_z
__builtin_sve_svlsl_wide_n_s8_m
Enable memory access instrumentation in ThreadSanitizer (default)
hipfb
__builtin_sve_svlsl_wide_n_u32_m
q4Uiq16bq4UiUWi
__builtin_sve_svlsl_wide_n_u8_m
json
__builtin_sve_svlsl_wide_s16_m
__builtin_sve_svlsl_wide_s16_x
__builtin_sve_svlsl_wide_s32_m
response-file
__builtin_sve_svlsl_wide_s8_z
__builtin_sve_svlsl_wide_u16_m
__builtin_sve_svlsl_wide_u16_z
 on 
__builtin_sve_svlsl_wide_u32_z
__builtin_sve_svlsl_wide_u8_m
-fno-experimental-library
function-exit
__builtin_sve_svlsr_n_u32_m
__builtin_sve_svlsr_n_u32_x
__builtin_sve_svlsr_n_u64_x
-fxray-modes=
__builtin_sve_svlsr_n_u8_z
__builtin_sve_svlsr_u16_m
__builtin_sve_svlsr_u16_z
__builtin_sve_svlsr_u64_x
__builtin_sve_svlsr_u64_z
__builtin_sve_svlsr_u8_z
__builtin_sve_svlsr_wide_n_u32_m
__builtin_sve_svlsr_wide_n_u32_x
Enable trapping for all sanitizers
__builtin_sve_svlsr_wide_u16_z
__builtin_sve_svlsr_wide_u32_m
__builtin_sve_svlsr_wide_u8_m
q8hq16bq8hq8hq8h
__builtin_sve_svmad_f16_x
__builtin_sve_svmad_f32_m
Hostx86
q2dq16bq2dq2dq2d
__builtin_sve_svmad_f64_x
q8hq16bq8hq8hh
q4fq16bq4fq4ff
Tools
Do not use the experimental C++ class ABI for classes with virtual tables
VCToolsInstallDir
q8sq16bq8sq8ss
__builtin_sve_svmad_n_s16_x
q4iq16bq4iq4ii
PATH
q2Wiq16bq2Wiq2WiWi
__builtin_sve_svmad_n_s64_x
__builtin_sve_svmad_n_s8_m
x86chk
q8Usq16bq8Usq8UsUs
__builtin_sve_svmad_n_u16_x
q4Uiq16bq4Uiq4UiUi
amd64chk
q2UWiq16bq2UWiq2UWiUWi
__builtin_sve_svmad_n_u64_x
-fsanitize-undefined-trap-on-error
Windows Kits
q8sq16bq8sq8sq8s
__builtin_sve_svmad_s16_x
q4iq16bq4iq4iq4i
STATISTICS:
q2Wiq16bq2Wiq2Wiq2Wi
__builtin_sve_svmad_s64_x
__builtin_sve_svmad_s8_m
<unknown> parser at unknown location
q8Usq16bq8Usq8Usq8Us
__builtin_sve_svmad_u16_x
q4Uiq16bq4Uiq4Uiq4Ui
: unknown current parser token
q2UWiq16bq2UWiq2UWiq2UWi
__builtin_sve_svmad_u64_x
Disable emitting metadata for binary analysis sanitizers
__builtin_sve_svmatch_s8
__builtin_sve_svmatch_u16
__builtin_sve_svmax_f16_x
decltype
__builtin_sve_svmax_f32_z
__builtin_sve_svmax_f64_m
__builtin_sve_svmax_f64_z
__builtin_sve_svmax_n_f32_x
__builtin_sve_svmax_n_f32_z
__builtin_sve_svmax_n_f64_z
property
__builtin_sve_svmax_n_s32_m
__builtin_sve_svmax_n_s32_x
Turn on runtime checks for various forms of undefined or suspicious behavior. See user manual for available checks
__declspec
__builtin_sve_svmax_n_s8_z
__builtin_sve_svmax_n_u16_m
__builtin_sve_svmax_n_u32_m
macos_app_extension
__builtin_sve_svmax_n_u64_x
__builtin_sve_svmax_n_u64_z
__builtin_sve_svmax_n_u8_x
replacement
__builtin_sve_svmax_s32_m
__builtin_sve_svmax_s32_x
__builtin_sve_svmax_s64_x
generated_declaration
__builtin_sve_svmax_s8_x
_Noreturn 
-fno-external-blas
__builtin_sve_svmax_u64_x
__builtin_sve_svmax_u64_z
__builtin_sve_svmax_u8_z
union
__builtin_sve_svmaxnm_f32_m
__builtin_sve_svmaxnm_f32_x
__builtin_sve_svmaxnm_f64_m
__interface
__builtin_sve_svmaxnm_n_f16_z
__builtin_sve_svmaxnm_n_f32_m
__builtin_sve_svmaxnm_n_f64_m
parsing struct/union body
__builtin_sve_svmaxnmp_f16_x
__builtin_sve_svmaxnmp_f32_m
<format>
volatile
__builtin_sve_svmaxp_f16_m
__builtin_sve_svmaxp_f16_x
__builtin_sve_svmaxp_f64_m
type name
__builtin_sve_svmaxp_s32_m
__builtin_sve_svmaxp_s32_x
__builtin_sve_svmaxp_s64_x
acquire_shared_capability
__builtin_sve_svmaxp_u32_m
__builtin_sve_svmaxp_u32_x
__builtin_sve_svmaxp_u8_m
shared_lock_function
__builtin_sve_svmaxv_f64
__builtin_sve_svmaxv_s16
-fno-fast-math
acquired_before
__builtin_sve_svmaxv_u8
__builtin_sve_svmin_f16_m
__builtin_sve_svmin_f32_m
assert_shared_capability
__builtin_sve_svmin_f64_x
__builtin_sve_svmin_f64_z
__builtin_sve_svmin_n_f16_x
assert_shared_lock
__builtin_sve_svmin_n_f64_m
__builtin_sve_svmin_n_f64_x
__builtin_sve_svmin_n_s16_x
exclusive_trylock_function
__builtin_sve_svmin_n_s32_z
__builtin_sve_svmin_n_s64_m
-fschedule-insns2
lock_returned
__builtin_sve_svmin_n_u16_x
__builtin_sve_svmin_n_u16_z
__builtin_sve_svmin_n_u32_z
pt_guarded_by
__builtin_sve_svmin_n_u8_m
__builtin_sve_svmin_n_u8_x
__builtin_sve_svmin_s16_m
release_shared_capability
__builtin_sve_svmin_s32_z
__builtin_sve_svmin_s64_m
__builtin_sve_svmin_s8_m
unlock_function
__builtin_sve_svmin_u16_x
requires_capability
-fno-file-reproducible
exclusive_locks_required
__builtin_sve_svmin_u8_m
__builtin_sve_svmin_u8_x
__builtin_sve_svminnm_f16_x
shared_locks_required
__builtin_sve_svminnm_f32_z
__builtin_sve_svminnm_f64_m
__builtin_sve_svminnm_f64_z
try_acquire_capability
__builtin_sve_svminnm_n_f32_x
__builtin_sve_svminnm_n_f32_z
__builtin_sve_svminnm_n_f64_z
callback
__builtin_sve_svminnmp_f32_x
__builtin_sve_svminnmp_f64_m
-fseh-exceptions
Owner
__builtin_sve_svminp_f32_m
__builtin_sve_svminp_f32_x
__builtin_sve_svminp_s16_m
preferred_name
__builtin_sve_svminp_s64_m
__builtin_sve_svminp_s64_x
__builtin_sve_svminp_s8_x
cpu_dispatch
__builtin_sve_svminp_u64_m
__builtin_sve_svminp_u64_x
__builtin_sve_svminv_f16
interrupt
__builtin_sve_svminv_s32
__builtin_sve_svminv_s64
-fno-fine-grained-bitfield-accesses
pointer_with_type_tag
__builtin_sve_svmla_f16_x
__builtin_sve_svmla_f16_z
__builtin_sve_svmla_f32_z
availability
__builtin_sve_svmla_lane_f16
q8hq8hq8hq8hIUWi
q4fq4fq4fq4fIUWi
clang_builtin_alias
__builtin_sve_svmla_lane_s64
__builtin_sve_svmla_lane_u16
__builtin_sve_svmla_n_f16_m
callable_when
__builtin_sve_svmla_n_f32_x
__builtin_sve_svmla_n_f32_z
Allocate to an enum type only as many bytes as it needs for the declared range of possible values
enum_extensibility
__builtin_sve_svmla_n_s32_m
__builtin_sve_svmla_n_s32_x
__builtin_sve_svmla_n_s64_x
function_return
__builtin_sve_svmla_n_s8_z
__builtin_sve_svmla_n_u16_m
__builtin_sve_svmla_n_u16_z
loop
__builtin_sve_svmla_n_u64_x
__builtin_sve_svmla_n_u64_z
__builtin_sve_svmla_n_u8_z
nounroll
Set the default real kind to an 8 byte wide type
unroll_and_jam
-fno-finite-loops
nounroll_and_jam
__builtin_sve_svmla_s8_z
__builtin_sve_svmla_u16_m
__builtin_sve_svmla_u32_m
ns_error_domain
__builtin_sve_svmla_u64_x
__builtin_sve_svmla_u64_z
__builtin_sve_svmla_u8_x
declare target
q4fq4fq8hq8hIUWi
__builtin_sve_svmlalb_lane_s32
q2Wiq2Wiq4iq4iIUWi
objc_bridge_mutable
q2UWiq2UWiq4Uiq4UiIUWi
__builtin_sve_svmlalb_n_f32
-fshow-overloads=
objc_gc
__builtin_sve_svmlalb_n_u64
__builtin_sve_svmlalb_s16
__builtin_sve_svmlalb_u16
objc_ownership
__builtin_sve_svmlalt_lane_f32
__builtin_sve_svmlalt_lane_s32
__builtin_sve_svmlalt_lane_u32
ownership_returns
__builtin_sve_svmlalt_n_s64
__builtin_sve_svmlalt_n_u16
__builtin_sve_svmlalt_s16
param_typestate
__builtin_sve_svmlalt_u32
__builtin_sve_svmlalt_u64
-fno-finite-math-only
return_typestate
__builtin_sve_svmls_f64_m
__builtin_sve_svmls_f64_x
__builtin_sve_svmls_lane_f32
swift_async
__builtin_sve_svmls_lane_s64
__builtin_sve_svmls_lane_u16
__builtin_sve_svmls_lane_u64
swift_error
__builtin_sve_svmls_n_f32_x
__builtin_sve_svmls_n_f32_z
__builtin_sve_svmls_n_f64_z
swift_wrapper
__builtin_sve_svmls_n_s32_m
__builtin_sve_svmls_n_s32_x
Show skipped includes in -H output.
type_tag_for_datatype
__builtin_sve_svmls_n_s8_z
__builtin_sve_svmls_n_u16_m
__builtin_sve_svmls_n_u32_m
ptrauth_vtable_pointer
__builtin_sve_svmls_n_u64_x
__builtin_sve_svmls_n_u64_z
__builtin_sve_svmls_n_u8_x
xnu_usage_semantics
__builtin_sve_svmls_s32_m
__builtin_sve_svmls_s32_x
__builtin_sve_svmls_s64_x
annotate
__builtin_sve_svmls_s8_z
annotate_type
Disable fixed point types
__builtin_sve_svmls_u64_x
__builtin_sve_svmls_u64_z
__builtin_sve_svmls_u8_z
tvOS
__builtin_sve_svmlslb_lane_s64
__builtin_sve_svmlslb_lane_u32
__builtin_sve_svmlslb_n_f32
bridgeOS
__builtin_sve_svmlslb_n_u32
__builtin_sve_svmlslb_n_u64
__builtin_sve_svmlslb_s64
ios_app_extension
__builtin_sve_svmlslt_f32
__builtin_sve_svmlslt_lane_f32
-fsignaling-nans
tvOSApplicationExtension
__builtin_sve_svmlslt_n_s32
__builtin_sve_svmlslt_n_s64
__builtin_sve_svmlslt_n_u64
watchOSApplicationExtension
__builtin_sve_svmlslt_u16
__builtin_sve_svmlslt_u32
__builtin_sve_svmmla_f32
macCatalyst
__builtin_sve_svmmla_u32
__builtin_sve_svmov_b_z
__builtin_sve_svmovlb_s32
macCatalystApplicationExtension
__builtin_sve_svmovlb_u16
q8Usq16Uc
-fno-for-scope
xros_app_extension
__builtin_sve_svmovlt_s64
__builtin_sve_svmovlt_u16
__builtin_sve_svmsb_f16_m
visionOSApplicationExtension
__builtin_sve_svmsb_f32_x
__builtin_sve_svmsb_f32_z
__builtin_sve_svmsb_f64_x
shadermodel
__builtin_sve_svmsb_n_f32_m
__builtin_sve_svmsb_n_f32_x
__builtin_sve_svmsb_n_f64_x
__builtin_sve_svmsb_n_s16_z
__builtin_sve_svmsb_n_s32_m
-fsigned-wchar
namespace 
__builtin_sve_svmsb_n_s8_x
__builtin_sve_svmsb_n_s8_z
__builtin_sve_svmsb_n_u16_z
parsing namespace
__builtin_sve_svmsb_n_u64_m
__builtin_sve_svmsb_n_u64_x
__builtin_sve_svmsb_n_u8_m
attributes list
__builtin_sve_svmsb_s16_z
__builtin_sve_svmsb_s32_m
__builtin_sve_svmsb_s64_m
alias declaration
__builtin_sve_svmsb_s8_m
_Static_assert
-fno-force-emit-vtables
final
__builtin_sve_svmsb_u64_m
__builtin_sve_svmsb_u64_x
__builtin_sve_svmsb_u8_x
sealed
__builtin_sve_svmul_f16_z
__builtin_sve_svmul_f32_m
__builtin_sve_svmul_f32_z
override
__builtin_sve_svmul_lane_f32
__builtin_sve_svmul_lane_f64
__builtin_sve_svmul_lane_s64
__builtin_sve_svmul_n_f16_m
__builtin_sve_svmul_n_f16_x
-fsized-deallocation
access declaration
__builtin_sve_svmul_n_f64_z
__builtin_sve_svmul_n_s16_m
__builtin_sve_svmul_n_s32_m
parsing struct/union/class body
__builtin_sve_svmul_n_s64_x
__builtin_sve_svmul_n_s64_z
__builtin_sve_svmul_n_s8_x
throw
__builtin_sve_svmul_n_u32_m
__builtin_sve_svmul_n_u32_x
__builtin_sve_svmul_n_u64_x
__gnu__
__builtin_sve_svmul_n_u8_z
__builtin_sve_svmul_s16_m
Disable support for int128_t type
nodiscard
__builtin_sve_svmul_s64_x
__builtin_sve_svmul_s64_z
__builtin_sve_svmul_s8_z
<anonymous>
__builtin_sve_svmul_u32_m
__builtin_sve_svmul_u32_x
__builtin_sve_svmul_u64_m
__is_aggregate
__builtin_sve_svmul_u8_z
__builtin_sve_svmulh_n_s16_m
__builtin_sve_svmulh_n_s32_m
__is_array
__builtin_sve_svmulh_n_s64_x
__builtin_sve_svmulh_n_s64_z
-fslp-vectorize-aggressive
__is_base_of
__builtin_sve_svmulh_n_u32_m
__builtin_sve_svmulh_n_u32_x
__builtin_sve_svmulh_n_u64_x
__is_class
__builtin_sve_svmulh_n_u8_z
__builtin_sve_svmulh_s16_m
__builtin_sve_svmulh_s16_z
__is_compound
__builtin_sve_svmulh_s64_x
__builtin_sve_svmulh_s64_z
__builtin_sve_svmulh_s8_z
__is_constructible
__builtin_sve_svmulh_u32_m
__is_convertible
-fno-frontend-optimize
__is_convertible_to
__builtin_sve_svmulh_u8_z
__builtin_sve_svmullb_lane_s32
q2Wiq4iq4iIUWi
__is_empty
q2UWiq4Uiq4UiIUWi
__builtin_sve_svmullb_n_s16
__builtin_sve_svmullb_n_s64
__is_floating_point
__builtin_sve_svmullb_s32
__builtin_sve_svmullb_s64
__builtin_sve_svmullb_u64
__is_function
__builtin_sve_svmullt_lane_u64
__builtin_sve_svmullt_n_s16
Enable small block descriptors
__is_integral
__builtin_sve_svmullt_s32
__builtin_sve_svmullt_s64
__builtin_sve_svmullt_u64
__is_literal
__builtin_sve_svmulx_f32_m
__builtin_sve_svmulx_f32_x
__builtin_sve_svmulx_f64_m
__is_lvalue_reference
__builtin_sve_svmulx_n_f16_z
__builtin_sve_svmulx_n_f32_m
__builtin_sve_svmulx_n_f64_m
__is_member_object_pointer
__builtin_sve_svnbsl_n_s16
__builtin_sve_svnbsl_n_s32
-fno-function-sections
__is_nothrow_assignable
__builtin_sve_svnbsl_s16
__builtin_sve_svnbsl_s32
__builtin_sve_svnbsl_u16
__is_nothrow_destructible
__builtin_sve_svneg_f16_m
__builtin_sve_svneg_f16_x
__builtin_sve_svneg_f32_m
__is_object
__builtin_sve_svneg_f64_z
__builtin_sve_svneg_s16_m
__builtin_sve_svneg_s32_m
__is_pointer
__builtin_sve_svneg_s64_x
__builtin_sve_svneg_s64_z
Set the maximum number of times to perform spell checking on unrecognized identifiers (0 = no limit).
__is_reference
__builtin_sve_svnmad_f32_m
__builtin_sve_svnmad_f32_x
__builtin_sve_svnmad_f64_x
__is_rvalue_expr
__builtin_sve_svnmad_n_f16_z
__builtin_sve_svnmad_n_f32_m
__builtin_sve_svnmad_n_f32_z
__is_same
__builtin_sve_svnmatch_s8
__builtin_sve_svnmatch_u16
__builtin_sve_svnmla_f16_x
__is_scoped_enum
Dump symbols and the parse tree after the semantic checks
__is_sealed
-fno-gcse-las
__is_signed
__builtin_sve_svnmla_n_f32_x
__builtin_sve_svnmla_n_f32_z
__builtin_sve_svnmla_n_f64_z
__is_trivial
__builtin_sve_svnmls_f32_m
__builtin_sve_svnmls_f32_x
__builtin_sve_svnmls_f64_m
__is_trivially_constructible
__builtin_sve_svnmls_n_f16_z
__builtin_sve_svnmls_n_f32_m
__builtin_sve_svnmls_n_f64_m
__is_unbounded_array
__builtin_sve_svnmsb_f16_x
__builtin_sve_svnmsb_f16_z
-fsplit-dwarf-inlining
__is_unsigned
__builtin_sve_svnmsb_n_f16_m
__builtin_sve_svnmsb_n_f16_x
__builtin_sve_svnmsb_n_f32_x
__is_volatile
__builtin_sve_svnmsb_n_f64_z
__builtin_sve_svnor_b_z
__builtin_sve_svnot_s16_m
RTT_JOIN(__, add_pointer)
__builtin_sve_svnot_s32_z
__builtin_sve_svnot_s64_m
__builtin_sve_svnot_s8_m
RTT_JOIN(__, decay)
__builtin_sve_svnot_u16_x
__builtin_sve_svnot_u16_z
-fno-gcse
RTT_JOIN(__, make_unsigned)
__builtin_sve_svnot_u8_m
__builtin_sve_svnot_u8_x
__builtin_sve_svorr_b_z
RTT_JOIN(__, remove_const)
__builtin_sve_svorr_n_s32_m
__builtin_sve_svorr_n_s32_x
__builtin_sve_svorr_n_s64_m
RTT_JOIN(__, remove_cvref)
__builtin_sve_svorr_n_s8_z
__builtin_sve_svorr_n_u16_m
__builtin_sve_svorr_n_u32_m
RTT_JOIN(__, remove_pointer)
__builtin_sve_svorr_n_u64_x
__builtin_sve_svorr_n_u64_z
-fsplit-machine-functions
RTT_JOIN(__, remove_restrict)
__builtin_sve_svorr_s32_m
__builtin_sve_svorr_s32_x
__builtin_sve_svorr_s64_x
RTT_JOIN(__, underlying_type)
__builtin_sve_svorr_s8_z
__builtin_sve_svorr_u16_m
__builtin_sve_svorr_u16_z
__bridge_retained
__builtin_sve_svorr_u64_x
__builtin_sve_svorr_u64_z
__builtin_sve_svorr_u8_z
android
__builtin_sve_svorv_s8
Android
Generic block helpers don't use extended layout
Fuchsia
__builtin_sve_svpext_lane_c64
__builtin_sve_svpext_lane_c8
__builtin_sve_svpfirst_b
macOS (App Extension)
__builtin_sve_svpmullb_n_u64
__builtin_sve_svpmullb_pair_n_u32
__builtin_sve_svpmullb_pair_n_u8
watchOS (App Extension)
__builtin_sve_svpmullb_u64
__builtin_sve_svpmullt_n_u16
__builtin_sve_svpmullt_pair_n_u64
visionOS (App Extension)
__builtin_sve_svpmullt_pair_u8
__builtin_sve_svpmullt_u16
-fstack-arrays
HLSL ShaderModel
vq16bvC*Ii
__builtin_sve_svprfb_gather_s32offset
vq16bvC*q2WiIi
template 
vq16bq4UiWiIi
__builtin_sve_svprfb_gather_u32offset
__builtin_sve_svprfb_gather_u64base
addrspace_cast
vq16bvC*q2UWiIi
__builtin_sve_svprfb_vnum
__builtin_sve_svprfd_gather_s32index
dynamic_cast
__builtin_sve_svprfd_gather_u32index
__builtin_sve_svprfd_gather_u64base
Don't use generic block helpers for copying/destroying blocks
static_cast
__builtin_sve_svprfh_gather_u32base
__builtin_sve_svprfh_gather_u32base_index
__builtin_sve_svprfh_gather_u64base_index
typeid
__builtin_sve_svprfw_gather_s32index
__builtin_sve_svprfw_gather_s64index
__builtin_sve_svprfw_gather_u32base_index
operator 
__builtin_sve_svprfw_vnum
__builtin_sve_svpsel_b16
__builtin_sve_svpsel_b64
__builtin_sve_svptest_first
__builtin_sve_svptest_last
Enable stack clash protection
requires
__builtin_sve_svptrue_c32
__builtin_sve_svptrue_c64
q16bIi
Allocation failed
__builtin_sve_svqabs_s16_m
__builtin_sve_svqabs_s16_x
__builtin_sve_svqabs_s32_m
space
__builtin_sve_svqabs_s64_z
__builtin_sve_svqabs_s8_m
__builtin_sve_svqadd_n_s16
@class
__builtin_sve_svqadd_n_s16_z
Disables the global instruction selector
assign
__builtin_sve_svqadd_n_s8
__builtin_sve_svqadd_n_s8_m
__builtin_sve_svqadd_n_u16
readwrite
__builtin_sve_svqadd_n_u32
__builtin_sve_svqadd_n_u32_m
__builtin_sve_svqadd_n_u32_z
strong
__builtin_sve_svqadd_n_u8
__builtin_sve_svqadd_n_u8_m
__builtin_sve_svqadd_s16
nonatomic
__builtin_sve_svqadd_s16_z
__builtin_sve_svqadd_s32
Enable stack protectors for some functions vulnerable to stack smashing. Compared to -fstack-protector, this uses a stronger heuristic that includes functions containing arrays of any size (and any type), as well as any calls to alloca or the taking of an address from a local variable
nonnull
__builtin_sve_svqadd_s64_m
__builtin_sve_svqadd_s64_x
q16Scq16Scq16Sc
null_unspecified
__builtin_sve_svqadd_u16
__builtin_sve_svqadd_u16_m
__builtin_sve_svqadd_u16_z
direct
__builtin_sve_svqadd_u64
__builtin_sve_svqadd_u64_m
__builtin_sve_svqadd_u8
@protocol
__builtin_sve_svqcadd_s16
__builtin_sve_svqcadd_s32
Disable GNU style inline asm
@synthesize
__builtin_sve_svqdecb_n_u32
UiUiIUWi
__builtin_sve_svqdecb_pat_n_s32
@throw
__builtin_sve_svqdecb_pat_n_u32
UiUiIiIUWi
UWiUWiIiIUWi
@catch clause
__builtin_sve_svqdecd_pat_n_s32
__builtin_sve_svqdecd_pat_n_s64
__builtin_sve_svqdecd_pat_s64
__builtin_sve_svqdecd_s64
q2Wiq2WiIUWi
Emit section containing metadata on function stack sizes
autoreleasepool
__builtin_sve_svqdech_pat_n_s32
__builtin_sve_svqdech_pat_n_s64
__builtin_sve_svqdech_pat_s16
@selector
__builtin_sve_svqdech_s16
q8sq8sIUWi
q8Usq8UsIUWi
'initializer'
__builtin_sve_svqdecp_n_s32_b8
__builtin_sve_svqdecp_n_s64_b16
__builtin_sve_svqdecp_n_s64_b64
(<property-name>)
__builtin_sve_svqdecp_n_u32_b32
<property-name>
-fno-gnu89-inline
user condition
__builtin_sve_svqdecp_s16
q8sq8sq16b
__builtin_sve_svqdecp_s64
<invalid>
__builtin_sve_svqdecp_u32
q4Uiq4Uiq16b
q2UWiq2UWiq16b
'=' that follows the context set name "
__builtin_sve_svqdecw_pat_n_s32
__builtin_sve_svqdecw_pat_n_s64
__builtin_sve_svqdecw_pat_s32
interop
__builtin_sve_svqdecw_s32
q4iq4iIUWi
Emit full debug info for all types used by the program
omp_
__builtin_sve_svqdmlalb_n_s64
__builtin_sve_svqdmlalb_s16
__builtin_sve_svqdmlalbt_n_s16
when clause
__builtin_sve_svqdmlalbt_s32
__builtin_sve_svqdmlalbt_s64
__builtin_sve_svqdmlalt_lane_s64
uses_allocator
__builtin_sve_svqdmlalt_s32
__builtin_sve_svqdmlalt_s64
__builtin_sve_svqdmlslb_n_s16
targetsync
__builtin_sve_svqdmlslb_s32
__builtin_sve_svqdmlslb_s64
-fno-gpu-allow-device-init
interop types
__builtin_sve_svqdmlslt_lane_s32
__builtin_sve_svqdmlslt_lane_s64
__builtin_sve_svqdmlslt_n_s64
schedule modifier
__builtin_sve_svqdmulh_lane_s16
__builtin_sve_svqdmulh_lane_s32
__builtin_sve_svqdmulh_n_s16
mapper
__builtin_sve_svqdmulh_s32
__builtin_sve_svqdmulh_s64
__builtin_sve_svqdmullb_lane_s64
reduction identifier
__builtin_sve_svqdmullb_s16
__builtin_sve_svqdmullb_s32
Enable optimizations based on the strict definition of an enum's value range
motion modifier
__builtin_sve_svqdmullt_s16
__builtin_sve_svqdmullt_s32
__builtin_sve_svqincb_n_s64
simdlen
__builtin_sve_svqincb_pat_n_s64
__builtin_sve_svqincb_pat_n_u32
__builtin_sve_svqincd_n_s32
score expression
__builtin_sve_svqincd_pat_n_s64
__builtin_sve_svqincd_pat_n_u32
__builtin_sve_svqincd_pat_u64
ext_
-fdelete-null-pointer-checks
absent
-fno-gpu-defer-diag
contains
__builtin_sve_svqinch_pat_u16
__builtin_sve_svqinch_s16
__builtin_sve_svqincp_n_s32_b32
no_openmp
__builtin_sve_svqincp_n_s64_b32
__builtin_sve_svqincp_n_s64_b64
__builtin_sve_svqincp_n_u32_b16
no_parallelism
__builtin_sve_svqincp_n_u64_b32
__builtin_sve_svqincp_n_u64_b64
__builtin_sve_svqincp_s32
__builtin_sve_svqincp_u64
__builtin_sve_svqincw_n_s32
0,1,2
reduction
__builtin_sve_svqincw_pat_n_u64
__builtin_sve_svqincw_pat_s32
__builtin_sve_svqincw_u32
begin
__builtin_sve_svqneg_s32_m
__builtin_sve_svqneg_s32_x
__builtin_sve_svqneg_s64_m
OPENCL
__builtin_sve_svqneg_s8_z
__builtin_sve_svqrdcmlah_lane_s16
__builtin_sve_svqrdcmlah_s32
data_seg
__builtin_sve_svqrdmlah_lane_s32
__builtin_sve_svqrdmlah_lane_s64
-fno-gpu-exclude-wrong-side-overloads
const_seg
__builtin_sve_svqrdmlah_s64
__builtin_sve_svqrdmlah_s8
__builtin_sve_svqrdmlsh_lane_s64
section
__builtin_sve_svqrdmlsh_n_s8
__builtin_sve_svqrdmlsh_s16
__builtin_sve_svqrdmlsh_s64
function
__builtin_sve_svqrdmulh_n_s16
__builtin_sve_svqrdmulh_n_s32
__builtin_sve_svqrdmulh_s16
optimize
__builtin_sve_svqrshl_n_s16_m
__builtin_sve_svqrshl_n_s16_x
-fstrict-return
write
__builtin_sve_svqrshl_n_s64_z
__builtin_sve_svqrshl_n_s8_m
__builtin_sve_svqrshl_n_u16_m
nopage
__builtin_sve_svqrshl_n_u32_m
q4Uiq16bq4Uii
__builtin_sve_svqrshl_n_u32_z
discard
q16Ucq16bq16UcSc
__builtin_sve_svqrshl_n_u8_x
__builtin_sve_svqrshl_s16_x
push
__builtin_sve_svqrshl_s32_z
-fno-gpu-flush-denormals-to-zero
compiler
q8Usq16bq8Usq8s
__builtin_sve_svqrshl_u16_x
q4Uiq16bq4Uiq4i
".CRT$XCL"
q2UWiq16bq2UWiq2Wi
__builtin_sve_svqrshl_u64_x
__builtin_sve_svqrshl_u8_m
distribute
q8sq8iIUWi
__builtin_sve_svqrshr_s16_x4
q16Scq16iIUWi
vectorize
q8Usq8UWiIUWi
__builtin_sve_svqrshr_u8_x4
-fsuppress-conflicting-types
vectorize_predicate
q4iq2WiIUWi
__builtin_sve_svqrshrnb_n_u16
q8Usq4UiIUWi
vectorize_width
q16Scq16Scq8sIUWi
__builtin_sve_svqrshrnt_n_s32
__builtin_sve_svqrshrnt_n_s64
q8Usq8Usq4UiIUWi
__builtin_sve_svqrshrnt_n_u64
q16Ucq8sIUWi
__attribute__((
q4Uiq2WiIUWi
__builtin_sve_svqrshrunt_n_s16
-fno-gpu-sanitize
apply_to
__builtin_sve_svqshl_n_s16_x
__builtin_sve_svqshl_n_s16_z
__builtin_sve_svqshl_n_s32_z
'on' or 'off'
__builtin_sve_svqshl_n_s8_m
__builtin_sve_svqshl_n_s8_x
__builtin_sve_svqshl_n_u16_m
field
__builtin_sve_svqshl_n_u32_z
__builtin_sve_svqshl_n_u64_m
__builtin_sve_svqshl_n_u8_m
'is_member'
__builtin_sve_svqshl_s16_x
__builtin_sve_svqshl_s16_z
auto,always,never
'unless(is_union)'
__builtin_sve_svqshl_s8_m
__builtin_sve_svqshl_s8_x
__builtin_sve_svqshl_u16_x
'is_thread_local', 'is_global', 'is_local', 'is_parameter', 'unless(is_parameter)'
__builtin_sve_svqshl_u32_z
__builtin_sve_svqshl_u64_m
__builtin_sve_svqshl_u64_z
align
q8Usq16bq8sIUWi
__builtin_sve_svqshlu_n_s16_x
q4Uiq16bq4iIUWi
packed
__builtin_sve_svqshlu_n_s64_m
mac68k
Don't specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
pack
__builtin_sve_svqshrnb_n_s32
__builtin_sve_svqshrnb_n_s64
__builtin_sve_svqshrnb_n_u64
unused
__builtin_sve_svqshrnt_n_u16
__builtin_sve_svqshrnt_n_u32
__builtin_sve_svqshrunb_n_s16
FP_CONTRACT
__builtin_sve_svqshrunt_n_s64
__builtin_sve_svqsub_n_s16
__builtin_sve_svqsub_n_s16_z
FENV_ROUND
__builtin_sve_svqsub_n_s32_z
__builtin_sve_svqsub_n_s64
SYCL host compilation
FE_TONEAREST
__builtin_sve_svqsub_n_s8_z
__builtin_sve_svqsub_n_u16
__builtin_sve_svqsub_n_u16_z
FE_DOWNWARD
__builtin_sve_svqsub_n_u32_z
__builtin_sve_svqsub_n_u64
__builtin_sve_svqsub_n_u64_x
FE_DYNAMIC
__builtin_sve_svqsub_n_u8_z
__builtin_sve_svqsub_s16
__builtin_sve_svqsub_s16_z
CX_LIMITED_RANGE
__builtin_sve_svqsub_s32_z
__builtin_sve_svqsub_s64
Don't specify that kernel argument names are preserved (HIP only)
pragma clang section
__builtin_sve_svqsub_s8_z
__builtin_sve_svqsub_u16
__builtin_sve_svqsub_u16_z
OPENCL EXTENSION
__builtin_sve_svqsub_u32_z
__builtin_sve_svqsub_u64
__builtin_sve_svqsub_u64_x
pragma comment
__builtin_sve_svqsub_u8_z
__builtin_sve_svqsubr_n_s16_m
__builtin_sve_svqsubr_n_s32_m
except
__builtin_sve_svqsubr_n_s64_x
__builtin_sve_svqsubr_n_s64_z
-fsyntax-only
pragma detect_mismatch
__builtin_sve_svqsubr_n_u32_m
__builtin_sve_svqsubr_n_u32_x
__builtin_sve_svqsubr_n_u64_x
full_generality
__builtin_sve_svqsubr_n_u8_z
__builtin_sve_svqsubr_s16_m
__builtin_sve_svqsubr_s16_z
runtime_checks
__builtin_sve_svqsubr_s64_x
__builtin_sve_svqsubr_s64_z
__builtin_sve_svqsubr_s8_z
fenv_access
__builtin_sve_svqsubr_u32_m
force_cuda_host_device
Don't use new kernel launching API for HIP
clang optimize
__builtin_sve_svqsubr_u8_z
__builtin_sve_svqxtnb_s16
q8sq4i
unroll_count
q16Ucq8Us
__builtin_sve_svqxtnb_u32
__builtin_sve_svqxtnb_u64
clang loop
q8sq8sq4i
__builtin_sve_svqxtnt_s64
q16Ucq16Ucq8Us
contract
q4Uiq4Uiq2UWi
__builtin_sve_svqxtunb_s16
eval_method
q16Ucq16Ucq8s
__builtin_sve_svqxtunt_s32
q4Uiq4Uiq2Wi
clang attribute
__builtin_sve_svraddhnb_n_u16
__builtin_sve_svraddhnb_n_u32
__builtin_sve_svraddhnb_s16
clang max_tokens_here
__builtin_sve_svraddhnb_u64
__builtin_sve_svraddhnt_n_s16
__builtin_sve_svraddhnt_n_u16
clang max_tokens_total
__builtin_sve_svraddhnt_s32
__builtin_sve_svraddhnt_s64
-fno-honor-infinities
'intrinsic'
__builtin_sve_svrbit_s16_x
__builtin_sve_svrbit_s16_z
__builtin_sve_svrbit_s32_z
'vector'
__builtin_sve_svrbit_s8_m
__builtin_sve_svrbit_s8_x
__builtin_sve_svrbit_u16_m
do/while
__builtin_sve_svrbit_u32_z
__builtin_sve_svrbit_u64_m
__builtin_sve_svrbit_u8_m
continue
__builtin_sve_svrdffr_z
q16bq16b
-ftarget-variant-availability-checks
co_return
__builtin_sve_svrecpe_u32_m
__builtin_sve_svrecpe_u32_x
q8hq8hq8h
__leave
q2dq2dq2d
__builtin_sve_svrecpx_f16_m
__builtin_sve_svrecpx_f16_z
STDC FENV_ACCESS
__builtin_sve_svrecpx_f64_x
__builtin_sve_svrecpx_f64_z
__builtin_sve_svrev_b64
'case'
Dump the parse tree (skips the semantic checks)
'default'
-fhalf-no-semantic-interposition
in compound statement ('{}')
q2Wiq2Wi
__builtin_sve_svrev_s8
q8Usq8Us
consteval
q2UWiq2UWi
__builtin_sve_svrev_u8
__builtin_sve_svrevb_s16_x
switch
__builtin_sve_svrevb_s64_m
__builtin_sve_svrevb_s64_x
__builtin_sve_svrevb_u16_x
'do'
__builtin_sve_svrevb_u32_z
__builtin_sve_svrevb_u64_m
Set the maximum number of entries to print in a template instantiation backtrace (0 = no limit).
InternalPragmaState
__builtin_sve_svrevd_s32_x
__builtin_sve_svrevd_s32_z
__builtin_sve_svrevd_s64_z
target MC unavailable
__builtin_sve_svrevd_u16_m
__builtin_sve_svrevd_u16_x
__builtin_sve_svrevd_u32_m
target ASM parser unavailable
__builtin_sve_svrevd_u64_z
__builtin_sve_svrevd_u8_m
__builtin_sve_svrevh_s32_m
volatile
__builtin_sve_svrevh_s64_x
__builtin_sve_svrevh_s64_z
-fno-implicit-module-maps
goto
__builtin_sve_svrevw_s64_m
__builtin_sve_svrevw_s64_x
__builtin_sve_svrevw_u64_x
__builtin_sve_svrhadd_n_s16_z
__builtin_sve_svrhadd_n_s32_m
__builtin_sve_svrhadd_n_s32_z
ParseTemplate
__builtin_sve_svrhadd_n_s8_x
__builtin_sve_svrhadd_n_s8_z
__builtin_sve_svrhadd_n_u16_z
typename
__builtin_sve_svrhadd_n_u64_m
__builtin_sve_svrhadd_n_u64_x
Maximum depth of recursive template instantiation
__builtin_sve_svrhadd_s16_z
__builtin_sve_svrhadd_s32_m
__builtin_sve_svrhadd_s64_m
__except
__builtin_sve_svrhadd_s8_x
__builtin_sve_svrhadd_s8_z
__builtin_sve_svrhadd_u16_x
__builtin_sve_svrhadd_u64_m
__builtin_sve_svrhadd_u64_x
__builtin_sve_svrhadd_u8_x
oneway
__builtin_sve_svrinta_f16_z
bycopy
-fno-implicit-modules
byref
__builtin_sve_svrinti_f16_x
__builtin_sve_svrinti_f16_z
__builtin_sve_svrinti_f32_z
pixel
__builtin_sve_svrintm_f16_m
__builtin_sve_svrintm_f16_x
__builtin_sve_svrintm_f32_m
__exception_info
__builtin_sve_svrintm_f64_z
__builtin_sve_svrintn_f16_m
__builtin_sve_svrintn_f32_m
_exception_code
__builtin_sve_svrintn_f64_x
__builtin_sve_svrintn_f64_z
introduce a module file extension for testing purposes. The argument is parsed as blockname:major:minor:hashed:user info
GetExceptionCode
__builtin_sve_svrintp_f64_m
__builtin_sve_svrintp_f64_x
__builtin_sve_svrintx_f16_x
__abnormal_termination
__builtin_sve_svrintx_f32_z
__builtin_sve_svrintx_f64_m
__builtin_sve_svrintx_f64_z
import
__builtin_sve_svrintz_f32_x
__builtin_sve_svrintz_f32_z
__builtin_sve_svrintz_f64_z
top-level asm block
__builtin_sve_svrshl_n_s32_m
__builtin_sve_svrshl_n_s32_x
-fno-implicit-templates
__if_exists
__builtin_sve_svrshl_n_s8_z
__builtin_sve_svrshl_n_u16_m
__builtin_sve_svrshl_n_u32_m
cannot get default cache directory
__builtin_sve_svrshl_n_u64_x
__builtin_sve_svrshl_n_u64_z
__builtin_sve_svrshl_n_u8_x
Submodule: 
__builtin_sve_svrshl_s32_m
__builtin_sve_svrshl_s32_x
__builtin_sve_svrshl_s64_x
(Module) 
__builtin_sve_svrshl_s8_z
__builtin_sve_svrshl_u16_m
Perform ThinLTO importing using provided function summary index
 (explicit)
__builtin_sve_svrshl_u64_x
__builtin_sve_svrshl_u64_z
__builtin_sve_svrshl_u8_z
 (system)
__builtin_sve_svrshr_n_s32_m
__builtin_sve_svrshr_n_s32_x
__builtin_sve_svrshr_n_s64_m
  module *
__builtin_sve_svrshr_n_s8_z
__builtin_sve_svrshr_n_u16_m
__builtin_sve_svrshr_n_u16_z
export *
__builtin_sve_svrshr_n_u32_x
(PCH) 
Don't emit in-descriptor block flags
Module Map:
__builtin_sve_svrshr_n_u8_z
__builtin_sve_svrshrnb_n_s16
__builtin_sve_svrshrnb_n_u16
filename not part of include tree list
__builtin_sve_svrshrnt_n_s32
__builtin_sve_svrshrnt_n_s64
__builtin_sve_svrshrnt_n_u32
export 
__builtin_sve_svrsqrte_u32_m
__builtin_sve_svrsqrte_u32_x
__builtin_sve_svrsqrts_f32
file '%s' changed during build; include-tree contents changed from %s to %s
__builtin_sve_svrsra_n_s64
__builtin_sve_svrsra_n_s8
per-pass,per-pass-run
' (new='
__builtin_sve_svrsubhnb_n_s64
__builtin_sve_svrsubhnb_n_u16
__builtin_sve_svrsubhnb_s16
__builtin_sve_svrsubhnb_u32
__builtin_sve_svrsubhnb_u64
__builtin_sve_svrsubhnt_n_s32
wrong size for cas-id hash '
__builtin_sve_svrsubhnt_s16
__builtin_sve_svrsubhnt_s32
__builtin_sve_svrsubhnt_u32
llvmcas://
__builtin_sve_svsbclb_u32
__builtin_sve_svsbclb_u64
-fno-inline-functions-called-once
corrupt object '
__builtin_sve_svscale_f16_x
__builtin_sve_svscale_f16_z
__builtin_sve_svscale_f32_x
llvm.cas.builtin.v2[
__builtin_sve_svscale_f64_x
__builtin_sve_svscale_f64_z
q8hq16bq8hs
cannot get reference to root FS
__builtin_sve_svscale_n_f32_x
__builtin_sve_svscale_n_f32_z
__builtin_sve_svscale_n_f64_x
__builtin_sve_svsclamp_s64
__builtin_sve_svsclamp_s8
-ftime-trace=
root-bits=
__builtin_sve_svsel_s32
__builtin_sve_svsel_s64
__builtin_sve_svsel_u32
q16yq16yIUWiq8y
__builtin_sve_svset2_f16
__builtin_sve_svset2_f32
root
q16sq16sIUWiq8s
__builtin_sve_svset2_s32
q4Wiq4WiIUWiq2Wi
 num-slots=
q16Usq16UsIUWiq8Us
- index=
-fno-inline-limit
content=
q24yq24yIUWiq8y
__builtin_sve_svset3_f16
q12fq12fIUWiq4f
index: 
q24sq24sIUWiq8s
__builtin_sve_svset3_s32
__builtin_sve_svset3_s64
missing object '
q24Usq24UsIUWiq8Us
__builtin_sve_svset3_u32
q6UWiq6UWiIUWiq2UWi
unknown object '
q32yq32yIUWiq8y
__builtin_sve_svset4_f16
-ftls-model=
invalid value for %s: expected integer
q32sq32sIUWiq8s
__builtin_sve_svset4_s32
q8Wiq8WiIUWiq2Wi
index:
q32Usq32UsIUWiq8Us
__builtin_sve_svset4_u32
__builtin_sve_svset4_u64
- addr=
__builtin_sve_svshllb_n_s16
q4iq8sIUWi
 data=
q8Usq16UcIUWi
__builtin_sve_svshllb_n_u32
-fno-inline
 end=
__builtin_sve_svshllt_n_u16
__builtin_sve_svshllt_n_u32
__builtin_sve_svshrnb_n_s32
.%%%%%%
__builtin_sve_svshrnb_n_u64
__builtin_sve_svshrnt_n_s16
__builtin_sve_svshrnt_n_s64
.data
__builtin_sve_svsli_n_s32
__builtin_sve_svsli_n_s64
__builtin_sve_svsli_n_u32
.leaf
__builtin_sve_svsm4ekey_u32
__builtin_sve_svsplice_bf16
-ftrap-function-returns
index
__builtin_sve_svsplice_s8
__builtin_sve_svsplice_u16
__builtin_sve_svsplice_u8
llvm.cas.data
__builtin_sve_svsqadd_n_u32_m
__builtin_sve_svsqadd_n_u32_x
__builtin_sve_svsqadd_n_u64_m
unknown          
__builtin_sve_svsqadd_n_u8_z
__builtin_sve_svsqadd_u16_m
__builtin_sve_svsqadd_u32_m
standalone-data  
-fdepfile-entry=
standalone-leaf  
-fno-integrated-as
standalone-leaf+0
__builtin_sve_svsqrt_f16_m
__builtin_sve_svsqrt_f16_x
__builtin_sve_svsqrt_f32_x
root bits
__builtin_sve_svsqrt_f64_z
__builtin_sve_svsra_n_s16
__builtin_sve_svsra_n_s64
hash size
__builtin_sve_svsra_n_u8
__builtin_sve_svsri_n_s16
__builtin_sve_svsri_n_s8
 (not byte-aligned)
__builtin_sve_svsri_n_u8
__builtin_sve_svst1_bf16
-ftrapping-math
table kind
vq16bd*q2d
__builtin_sve_svst1_s16
vq16bSi*q4i
unsupported flags: 
vq16bSc*q16Sc
__builtin_sve_svst1_scatter_s32index_f32
__builtin_sve_svst1_scatter_s32index_s32
 hash-size=
__builtin_sve_svst1_scatter_s32offset_s32
__builtin_sve_svst1_scatter_s32offset_u32
__builtin_sve_svst1_scatter_s64index_s64
records
__builtin_sve_svst1_scatter_s64offset_f64
__builtin_sve_svst1_scatter_s64offset_s64
-fno-integrated-cc1
 addr=
vq16bq4UiWiq4i
__builtin_sve_svst1_scatter_u32base_index_u32
__builtin_sve_svst1_scatter_u32base_offset_s32
 subtrie=
__builtin_sve_svst1_scatter_u32base_u32
vq16bq4Uiq4Ui
vq16bf*q4Uiq4f
invalid 
__builtin_sve_svst1_scatter_u32offset_f32
__builtin_sve_svst1_scatter_u32offset_s32
vq16bq2UWiq2d
vq16bq2UWiWiq2Wi
__builtin_sve_svst1_scatter_u64base_index_u64
-ftrapv-handler
database: bad magic
__builtin_sve_svst1_scatter_u64base_u64
vq16bq2UWiq2UWi
__builtin_sve_svst1_scatter_u64index_s64
database: corrupt bump-ptr
__builtin_sve_svst1_scatter_u64offset_f64
__builtin_sve_svst1_scatter_u64offset_s64
__builtin_sve_svst1_u16
 (expected: 
vq16bUWi*q2UWi
__builtin_sve_svst1_u8
vq16by*Wiq8y
table name collision '
vq16bf*Wiq4f
cannot add new table '
-fno-integrated-objemitter
' to existing root '
vq16bSWi*Wiq2Wi
__builtin_sve_svst1_vnum_s8
vq16bUs*Wiq8Us
, got: 
vq16bUWi*Wiq2UWi
__builtin_sve_svst1_vnum_u8
__builtin_sve_svst1b_s16
vq16bSc*q2Wi
__builtin_sve_svst1b_s8_x2
vQSc*q64Sc
llcas_actioncache_get_for_digest
vq16bUc*q4iq4Ui
__builtin_sve_svst1b_scatter_s64offset_s64
-ftree-salias
llcas_actioncache_put_for_digest
__builtin_sve_svst1b_scatter_u32base_u32
__builtin_sve_svst1b_scatter_u32offset_s32
vq16bUc*q4Uiq4Ui
llcas_cas_contains_object
__builtin_sve_svst1b_scatter_u64base_u64
__builtin_sve_svst1b_scatter_u64offset_s64
__builtin_sve_svst1b_scatter_u64offset_u64
llcas_cas_create
vq16bUc*q4Ui
__builtin_sve_svst1b_u64
vQUc*q32Uc
llcas_cas_dispose
vq16bSc*Wiq8s
__builtin_sve_svst1b_vnum_s32
-fno-ipa-cp
llcas_cas_get_hash_schema_name
vQSc*Wiq64Sc
__builtin_sve_svst1b_vnum_u16
vq16bUc*Wiq4Ui
llcas_cas_get_objectid
vQUc*Wiq32Uc
__builtin_sve_svst1b_vnum_u8_x4
__builtin_sve_svst1d_f64_x2
llcas_cas_load_object
vQSWi*q4Wi
__builtin_sve_svst1d_s64_x4
vQUWi*q4UWi
llcas_cas_load_object_async
vQd*Wiq4d
__builtin_sve_svst1d_vnum_f64_x4
-ftree-vectorize
llcas_cas_options_create
vQUWi*Wiq4UWi
__builtin_sve_svst1d_vnum_u64_x4
vQy*q16y
llcas_cas_options_dispose
vQh*q16h
__builtin_sve_svst1h_f16_x4
__builtin_sve_svst1h_s16_x2
llcas_cas_options_set_client_version
vq16bSs*q4i
__builtin_sve_svst1h_s64
vq16bSs*q4iq4i
llcas_cas_options_set_ondisk_path
__builtin_sve_svst1h_scatter_s32offset_s32
failed symbol 'llcas_cas_options_set_ondisk_path' lookup
-fno-jmc
llcas_cas_options_set_option
__builtin_sve_svst1h_scatter_u32base_index_u32
__builtin_sve_svst1h_scatter_u32base_offset_s32
__builtin_sve_svst1h_scatter_u32base_u32
llcas_cas_store_object
vq16bUs*q4Uiq4Ui
__builtin_sve_svst1h_scatter_u32offset_s32
__builtin_sve_svst1h_scatter_u64base_index_s64
llcas_digest_parse
__builtin_sve_svst1h_scatter_u64base_u64
__builtin_sve_svst1h_scatter_u64index_s64
vq16bUs*q2UWiq2UWi
llcas_digest_print
vQUs*q16Us
__builtin_sve_svst1h_u16_x4
-ftrivial-auto-var-init-skip-cpp-obj
llcas_get_plugin_version
vQy*Wiq16y
__builtin_sve_svst1h_vnum_bf16_x4
vQh*Wiq16h
llcas_loaded_object_get_data
vQSs*Wiq16s
__builtin_sve_svst1h_vnum_s16_x4
__builtin_sve_svst1h_vnum_s32
llcas_loaded_object_get_refs
vQUs*Wiq16Us
__builtin_sve_svst1h_vnum_u16_x4
vq16bUs*Wiq4Ui
llcas_object_refs_get_count
vQf*q8f
__builtin_sve_svst1w_f32_x4
Do not use jump tables for lowering switches
llcas_object_refs_get_id
vq16bSi*q2Wi
__builtin_sve_svst1w_scatter_s64index_s64
vq16bUi*q2Wiq2UWi
llcas_objectid_get_digest
__builtin_sve_svst1w_scatter_u64base_index_u64
__builtin_sve_svst1w_scatter_u64base_offset_s64
__builtin_sve_svst1w_scatter_u64base_s64
llcas_string_dispose
vq16bUi*q2UWiq2UWi
__builtin_sve_svst1w_scatter_u64offset_s64
vQUi*q8Ui
error loading '
vq16bUi*q2UWi
__builtin_sve_svst1w_vnum_f32_x2
-ftrivial-auto-var-init-skip-non-ptr-array
not a tree object
vQSi*Wiq16i
__builtin_sve_svst1w_vnum_s64
vQUi*Wiq8Ui
lock
vq16bUi*Wiq2UWi
__builtin_sve_svst2_bf16
__builtin_sve_svst2_f16
unexpected directory 
vq16bd*q4d
__builtin_sve_svst2_s16
vq16bSi*q8i
vq16bSc*q32Sc
-fno-keep-static-consts
 -> 
vq16bUc*q32Uc
__builtin_sve_svst2_vnum_bf16
vq16bh*Wiq16h
file
vq16bd*Wiq4d
__builtin_sve_svst2_vnum_s16
__builtin_sve_svst2_vnum_s32
syml
vq16bSc*Wiq32Sc
__builtin_sve_svst2_vnum_u16
vq16bUi*Wiq8Ui
vq16bUc*Wiq32Uc
__builtin_sve_svst3_bf16
-ftrivial-auto-var-init-stop-after=
USAGE: 
vq16bd*q6d
__builtin_sve_svst3_s16
vq16bSi*q12i
 <value>
vq16bSc*q48Sc
__builtin_sve_svst3_u16
__builtin_sve_svst3_u32
Expected lexical block
vq16bUc*q48Uc
__builtin_sve_svst3_vnum_bf16
vq16bh*Wiq24h
malformed block record in AST file
vq16bd*Wiq6d
__builtin_sve_svst3_vnum_s16
-fno-knr-functions
incorrectly-formatted source location entry in AST file
vq16bSc*Wiq48Sc
__builtin_sve_svst3_vnum_u16
vq16bUi*Wiq12Ui
could not find file '
vq16bUc*Wiq48Uc
__builtin_sve_svst4_bf16
__builtin_sve_svst4_f16
missing or unloadable module cache key
vq16bd*q8d
__builtin_sve_svst4_s16
vq16bSi*q16i
duplicate TYPE_OFFSET record in AST file
vq16bSc*q64Sc
__builtin_sve_svst4_u16
uninitialized,zero,pattern
duplicate IDENTIFIER_OFFSET record in AST file
vq16bUc*q64Uc
__builtin_sve_svst4_vnum_bf16
vq16bh*Wiq32h
invalid weak identifiers record
vq16bd*Wiq8d
__builtin_sve_svst4_vnum_s16
__builtin_sve_svst4_vnum_s32
Multiple SOURCE_LOCATION_PRELOADS records in AST file
vq16bSc*Wiq64Sc
__builtin_sve_svst4_vnum_u16
vq16bUi*Wiq16Ui
Invalid existing PendingInstantiations
Dump the parse tree
Invalid PENDING_IMPLICIT_INSTANTIATIONS block
-fno-lax-vector-conversions
Invalid SEMA_DECL_REFS block
__builtin_sve_svstnt1_s8
__builtin_sve_svstnt1_scatter_s64index_f64
__builtin_sve_svstnt1_scatter_s64offset_f64
duplicate OBJC_CATEGORIES_MAP record in AST file
__builtin_sve_svstnt1_scatter_u32base_index_f32
__builtin_sve_svstnt1_scatter_u32base_index_s32
__builtin_sve_svstnt1_scatter_u32base_offset_f32
invalid undefined-but-used record
__builtin_sve_svstnt1_scatter_u32offset_f32
__builtin_sve_svstnt1_scatter_u32offset_s32
__builtin_sve_svstnt1_scatter_u64base_index_f64
invalid pragma optimize record
__builtin_sve_svstnt1_scatter_u64base_offset_s64
__builtin_sve_svstnt1_scatter_u64base_offset_u64
Default type visibility
invalid pragma pointers to members record
__builtin_sve_svstnt1_scatter_u64offset_s64
__builtin_sve_svstnt1_scatter_u64offset_u64
__builtin_sve_svstnt1_u64
invalid pragma pack record
__builtin_sve_svstnt1_vnum_f32
__builtin_sve_svstnt1_vnum_f64
__builtin_sve_svstnt1_vnum_s32
SourceLocation remap refers to unknown module, cannot find 
__builtin_sve_svstnt1_vnum_u64
__builtin_sve_svstnt1_vnum_u8
__builtin_sve_svstnt1b_scatter_s64offset_s64
invalid record at top-level of AST file
__builtin_sve_svstnt1b_scatter_u32base_s32
__builtin_sve_svstnt1b_scatter_u32base_u32
-fno-limit-debug-info
FILE type is NULL
__builtin_sve_svstnt1b_scatter_u64offset_s64
__builtin_sve_svstnt1b_scatter_u64offset_u64
__builtin_sve_svstnt1b_vnum_s8_x2
jmp_buf type is NULL
__builtin_sve_svstnt1d_f64_x2
__builtin_sve_svstnt1d_f64_x4
__builtin_sve_svstnt1d_s64_x4
sigjmp_buf type is NULL
__builtin_sve_svstnt1d_vnum_s64_x2
__builtin_sve_svstnt1d_vnum_s64_x4
__builtin_sve_svstnt1h_bf16_x2
submodule metadata record should be at beginning of block
__builtin_sve_svstnt1h_s16_x2
__builtin_sve_svstnt1h_s16_x4
-ftyped-memory-operations-experimental
too many submodules
__builtin_sve_svstnt1h_scatter_u32base_offset_s32
__builtin_sve_svstnt1h_scatter_u32base_offset_u32
__builtin_sve_svstnt1h_scatter_u32offset_s32
Unexpected code for type
__builtin_sve_svstnt1h_scatter_u64base_offset_s64
__builtin_sve_svstnt1h_scatter_u64base_offset_u64
__builtin_sve_svstnt1h_scatter_u64base_u64
malformed AST file: missing C++ base specifiers
__builtin_sve_svstnt1h_u16_x2
__builtin_sve_svstnt1h_u16_x4
__builtin_sve_svstnt1h_vnum_f16_x2
Corrupted AST file
__builtin_sve_svstnt1h_vnum_u16_x2
*** AST File Statistics:
-fno-lto-unit
  %u/%u source location entries read (%f%%)
__builtin_sve_svstnt1w_scatter_s64offset_s64
__builtin_sve_svstnt1w_scatter_s64offset_u64
__builtin_sve_svstnt1w_scatter_u64base_offset_s64
  %u/%u declarations read (%f%%)
__builtin_sve_svstnt1w_scatter_u64index_s64
__builtin_sve_svstnt1w_scatter_u64index_u64
__builtin_sve_svstnt1w_scatter_u64offset_u64
  %u/%u macros read (%f%%)
__builtin_sve_svstnt1w_vnum_s32_x2
__builtin_sve_svstnt1w_vnum_s32_x4
__builtin_sve_svsub_f16_m
  %u/%u statements read (%f%%)
__builtin_sve_svsub_f32_x
__builtin_sve_svsub_f32_z
default alignment for functions
  %u/%u visible declcontexts read (%f%%)
__builtin_sve_svsub_n_f32_m
__builtin_sve_svsub_n_f32_x
__builtin_sve_svsub_n_f64_x
  %u/%u method pool lookups succeeded (%f%%)
__builtin_sve_svsub_n_s16_z
__builtin_sve_svsub_n_s32_m
__builtin_sve_svsub_n_s32_z
  %u / %u identifier table lookups succeeded (%f%%)
__builtin_sve_svsub_n_s8_x
__builtin_sve_svsub_n_s8_z
__builtin_sve_svsub_n_u16_z
Global bit offset map
__builtin_sve_svsub_n_u64_m
__builtin_sve_svsub_n_u64_x
Disable LTO mode (default)
Global type map
__builtin_sve_svsub_s16_z
__builtin_sve_svsub_s32_m
__builtin_sve_svsub_s64_m
Global identifier map
__builtin_sve_svsub_s8_x
__builtin_sve_svsub_s8_z
__builtin_sve_svsub_u16_x
Global submodule map
__builtin_sve_svsub_u64_m
__builtin_sve_svsub_u64_x
__builtin_sve_svsub_u8_x
Global preprocessed entity map
__builtin_sve_svsubhnb_n_s64
__builtin_sve_svsubhnb_n_u16
-funique-internal-linkage-names
no identifier table in AST file
__builtin_sve_svsubhnb_u32
__builtin_sve_svsubhnb_u64
__builtin_sve_svsubhnt_n_s64
submodule ID out of range in AST file
__builtin_sve_svsubhnt_s16
__builtin_sve_svsubhnt_s32
__builtin_sve_svsubhnt_u16
__builtin_sve_svsublb_n_s64
__builtin_sve_svsublb_n_u16
__builtin_sve_svsublb_s16
__builtin_sve_svsublb_u16
Disable implicit builtin knowledge of math functions
Microsoft Visual C++ full compatibility mode
__builtin_sve_svsublt_n_s16
__builtin_sve_svsublt_n_s32
__builtin_sve_svsublt_n_u32
Microsoft C++ extensions
__builtin_sve_svsublt_s64
__builtin_sve_svsublt_u16
__builtin_sve_svsublt_u64
Borland extensions
__builtin_sve_svsubltb_s32
__builtin_sve_svsubltb_s64
__builtin_sve_svsubr_f16_z
C++14
__builtin_sve_svsubr_f64_m
__builtin_sve_svsubr_f64_x
-funknown-anytype
C++20
__builtin_sve_svsubr_n_f32_z
__builtin_sve_svsubr_n_f64_m
__builtin_sve_svsubr_n_s16_m
Objective-C App Extension
__builtin_sve_svsubr_n_s32_x
__builtin_sve_svsubr_n_s32_z
__builtin_sve_svsubr_n_s64_x
'//' comments
__builtin_sve_svsubr_n_u16_m
__builtin_sve_svsubr_n_u16_x
__builtin_sve_svsubr_n_u32_x
half keyword
__builtin_sve_svsubr_n_u64_z
__builtin_sve_svsubr_n_u8_m
-fno-max-identifier-length
char8_t keyword
__builtin_sve_svsubr_s32_x
__builtin_sve_svsubr_s32_z
__builtin_sve_svsubr_s64_z
__declspec keyword
__builtin_sve_svsubr_u16_m
__builtin_sve_svsubr_u16_x
__builtin_sve_svsubr_u32_m
GNU keywords
__builtin_sve_svsubr_u64_z
__builtin_sve_svsubr_u8_m
__builtin_sve_svsubwb_n_s16
require function types to have a prototype
__builtin_sve_svsubwb_n_u32
__builtin_sve_svsubwb_n_u64
Turn on loop unroller
C++ operator name keywords
__builtin_sve_svsubwt_n_s16
__builtin_sve_svsubwt_n_s32
__builtin_sve_svsubwt_n_u32
writable string support
__builtin_sve_svsubwt_s64
__builtin_sve_svsubwt_u16
__builtin_sve_svsubwt_u64
lax vector conversions
__builtin_sve_svsudot_s32
q4iq4iq16Scq16Uc
__builtin_sve_svtbl2_f16
Assume convergent functions
__builtin_sve_svtbl2_f64
AltiVec-style vector initializers
-fno-memory-profile
System z vector extensions
__builtin_sve_svtbl2_s8
q16Scq32Scq16Uc
__builtin_sve_svtbl2_u32
Objective-C exceptions
__builtin_sve_svtbl2_u8
q16Ucq32Ucq16Uc
q8yq8yq8Us
C/C++ EH Asynch exceptions
__builtin_sve_svtbl_f64
q2dq2dq2UWi
__builtin_sve_svtbl_s32
Assume extern C functions don't unwind
__builtin_sve_svtbl_s8
q16Scq16Scq16Uc
-funsigned-char
run-time type information
__builtin_sve_svtbx_f16
q8hq8hq8hq8Us
__builtin_sve_svtbx_f64
Microsoft-compatible structure layout
__builtin_sve_svtbx_s32
q4iq4iq4iq4Ui
q2Wiq2Wiq2Wiq2UWi
freestanding implementation
__builtin_sve_svtbx_u64
__builtin_sve_svtbx_u8
__builtin_sve_svtmad_f64
disable math builtin functions
__builtin_sve_svtrn1_b8
__builtin_sve_svtrn1_bf16
-fno-merge-all-constants
C++20 coroutines
__builtin_sve_svtrn1_s64
__builtin_sve_svtrn1_s8
__builtin_sve_svtrn1_u64
dllexported classes dllexport inline methods
__builtin_sve_svtrn1q_f32
__builtin_sve_svtrn1q_f64
__builtin_sve_svtrn1q_s32
pointer authentication intrinsics
__builtin_sve_svtrn1q_u64
__builtin_sve_svtrn1q_u8
__builtin_sve_svtrn2_b64
return pointer authentication
__builtin_sve_svtrn2_f32
__builtin_sve_svtrn2_f64
-funwind-tables
pointer authentication failure traps
__builtin_sve_svtrn2_u64
__builtin_sve_svtrn2_u8
__builtin_sve_svtrn2q_f32
incorporate type discrimination in authenticated vtable pointers
__builtin_sve_svtrn2q_s64
__builtin_sve_svtrn2q_s8
__builtin_sve_svtrn2q_u32
authentication of SEL fields of ObjC interfaces
__builtin_sve_svtsmul_f64
__builtin_sve_svtssel_f16
__builtin_sve_svuclamp_u16
pre- and post-authentication masking for Objective-C isa pointer
Specify the path to the daemon to be used. Clang will use the daemon specified, rather than try to spawn its own based on parent processes.
software emulation of pointer authentication
-fno-merge-constants
pointer authentication ABI version
__builtin_sve_svundef2_s16
q16sv
__builtin_sve_svundef2_s64
controls whether the pointer auth abi version should be encoded in the IR
__builtin_sve_svundef2_u16
q16Usv
q8Uiv
class_ro_t pointer authentication
__builtin_sve_svundef3_bf16
q24yv
__builtin_sve_svundef3_f32
enable unstable and experimental library features
__builtin_sve_svundef3_s16
q24sv
Method to generate ID's for compilation units for single source offloading languages CUDA and HIP: 'hash' (ID's generated by hashing file path and command line options) | 'random' (ID's generated as random numbers) | 'none' (disabled). Default is 'hash'. This option will be overridden by option '-cuid=[ID]' if it is specified.
Preserve expressions in AST when encountering errors
__builtin_sve_svundef3_u16
q24Usv
__builtin_sve_svundef3_u64
POSIX thread support
__builtin_sve_svundef4_bf16
q32yv
q32hv
errno in math functions
__builtin_sve_svundef4_s16
q32sv
__builtin_sve_svundef4_s64
C++ Modules TS syntax
__builtin_sve_svundef4_u16
q32Usv
-fno-module-file-deps
require declaration of module uses
__builtin_sve_svundef_bf16
q8yv
__builtin_sve_svundef_f32
local submodule visibility
__builtin_sve_svundef_s16
q8sv
q4iv
enable ODR hash checking for attributes
__builtin_sve_svundef_u16
q8Usv
__builtin_sve_svundef_u64
disable ODR hash checking for interfaces
__builtin_sve_svunpkhi_b
__builtin_sve_svunpkhi_s16
-fuse-line-directives
disable ODR hash checking for records
__builtin_sve_svunpklo_s16
__builtin_sve_svunpklo_s32
__builtin_sve_svunpklo_u32
disable ODR hash checking for ivars
__builtin_sve_svuqadd_n_s16_z
__builtin_sve_svuqadd_n_s32_m
__builtin_sve_svuqadd_n_s32_z
__OPTIMIZE__ predefined macro
__builtin_sve_svuqadd_n_s8_x
__builtin_sve_svuqadd_n_s8_z
__builtin_sve_svuqadd_s16_z
__STATIC__ predefined macro (as opposed to __DYNAMIC__)
__builtin_sve_svuqadd_s64_m
default struct packing maximum alignment
-fno-module-private
default maximum alignment for types
__builtin_sve_svusdot_n_s32
q4iq4iq16UcSc
__builtin_sve_svusmmla_s32
width of double
__builtin_sve_svuzp1_b8
__builtin_sve_svuzp1_bf16
__builtin_sve_svuzp1_f32
use IEEE 754 quadruple-precision for long double
__builtin_sve_svuzp1_s8
__builtin_sve_svuzp1_u16
__builtin_sve_svuzp1_u8
Use 16-byte atomic lock free semantics
__builtin_sve_svuzp1q_f64
__builtin_sve_svuzp1q_s16
Use register sized accesses to bit-fields, when possible.
is pie
__builtin_sve_svuzp1q_u8
__builtin_sve_svuzp2_b16
__builtin_sve_svuzp2_b8
Read-write position independence
__builtin_sve_svuzp2_f64
__builtin_sve_svuzp2_s16
__builtin_sve_svuzp2_s64
__NO_INLINE__ predefined macro
__builtin_sve_svuzp2_u8
__builtin_sve_svuzp2q_bf16
__builtin_sve_svuzp2q_f64
fast FP math optimizations, and __FAST_MATH__ predefined macro
__builtin_sve_svuzp2q_s8
__builtin_sve_svuzp2q_u16
-fno-modules-error-recovery
Unsafe Floating Point Math
q16bWiWi
__builtin_sve_svwhilege_b16_u32
q16bUWiUWi
signed char
__builtin_sve_svwhilege_b32_u64
__builtin_sve_svwhilege_b64_s32
__builtin_sve_svwhilege_b64_u32
signed or unsigned wchar_t
__builtin_sve_svwhilege_b8_u64
__builtin_sve_svwhilegt_b16_s32
__builtin_sve_svwhilegt_b16_u64
default calling convention
__builtin_sve_svwhilegt_b32_u64
__builtin_sve_svwhilegt_b64_s32
-fvariable-expansion-in-unroller
OpenCL C version
__builtin_sve_svwhilegt_b8_u64
__builtin_sve_svwhilele_b16_s32
__builtin_sve_svwhilele_b16_u64
OpenCL generic keyword
__builtin_sve_svwhilele_b32_u64
__builtin_sve_svwhilele_b64_s32
__builtin_sve_svwhilele_b64_u32
Native half type support
__builtin_sve_svwhilele_b8_u64
__builtin_sve_svwhilelt_b16_s32
__builtin_sve_svwhilelt_b16_u64
OpenMP support and version of OpenMP (31, 40 or 45)
__builtin_sve_svwhilelt_b32_u32
Enable all Clang extensions for OpenMP directives and clauses
-fno-modules-global-index
Use SIMD only OpenMP support.
__builtin_sve_svwhilelt_b8_u64
__builtin_sve_svwhilerw_bf16
q16bhC*hC*
Generate code only for OpenMP target device
q16bdC*dC*
__builtin_sve_svwhilerw_s16
__builtin_sve_svwhilerw_s32
Use the experimental OpenMP-IR-Builder codegen path.
q16bScC*ScC*
__builtin_sve_svwhilerw_u16
q16bUiC*UiC*
Number of blocks per SM for CUDA devices.
q16bUcC*UcC*
__builtin_sve_svwhilewr_bf16
-fvect-cost-model
Enable debugging in the OpenMP offloading device RTL
__builtin_sve_svwhilewr_s8
__builtin_sve_svwhilewr_u16
__builtin_sve_svwhilewr_u8
Assume work-shared loops do not have more iterations than participating threads.
__builtin_sve_svxar_n_s32
__builtin_sve_svxar_n_s64
__builtin_sve_svxar_n_u16
Assume that no thread in a parallel region will modify an ICV.
__builtin_sve_svzip1_b32
__builtin_sve_svzip1_b64
__builtin_sve_svzip1_f16
Assert that offloading is mandatory and do not create a host fallback.
__builtin_sve_svzip1_s32
__builtin_sve_svzip1_s64
-fno-modules-local-submodule-visibility
HLSL Version
__builtin_sve_svzip1q_f16
__builtin_sve_svzip1q_f32
__builtin_sve_svzip1q_s32
allowing variadic functions in CUDA device code
__builtin_sve_svzip1q_u32
__builtin_sve_svzip1q_u64
__builtin_sve_svzip2_b16
using approximate transcendental functions
__builtin_sve_svzip2_f16
__builtin_sve_svzip2_f32
__builtin_sve_svzip2_s32
allowing device side global init functions for HIP
__builtin_sve_svzip2_u32
__builtin_sve_svzip2_u64
Generate verbose assembly output
defer host/device related diagnostic messages for CUDA/HIP
__builtin_sve_svzip2q_s32
__builtin_sve_svzip2q_s64
__builtin_sve_svzip2q_u32
use the new driver for generating offloading code.
__builtin_sve_reinterpret_s8_s16
q16Scq8Ss
q16Scq4Si
SYCL host compilation
__builtin_sve_reinterpret_s8_u16
q16Scq8Us
__builtin_sve_reinterpret_s8_u64
Use new kernel launching API for HIP
__builtin_sve_reinterpret_s8_bf16
sized deallocation
-fno-modules-share-filemanager
aligned allocation
__builtin_sve_reinterpret_s16_s16
q8Ssq8Ss
__builtin_sve_reinterpret_s16_s64
maximum alignment guaranteed by '::operator new(size_t)'
__builtin_sve_reinterpret_s16_u16
q8Ssq8Us
q8Ssq4Ui
constant Objective-C literals
__builtin_sve_reinterpret_s16_bf16
q8Ssq8y
__builtin_sve_reinterpret_s16_f64
no constant array literals
__builtin_sve_reinterpret_s32_s16
q4Siq8Ss
Enable Debug Info Metadata preservation testing in optimizations.
hidden visibility for global operator new and delete declaration
__builtin_sve_reinterpret_s32_u16
q4Siq8Us
__builtin_sve_reinterpret_s32_u64
Treats throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
__builtin_sve_reinterpret_s32_bf16
q4Siq8y
q4Siq4f
OpenCL fast relaxed math
__builtin_sve_reinterpret_s64_s16
q2SWiq8Ss
__builtin_sve_reinterpret_s64_s64
bit-field type alignment
__builtin_sve_reinterpret_s64_u16
q2SWiq8Us
-fno-modules-validate-system-headers
Objective-C automated reference counting
__builtin_sve_reinterpret_s64_bf16
q2SWiq8y
__builtin_sve_reinterpret_s64_f64
Objective-C __weak in ARC and MRC files
__builtin_sve_reinterpret_u8_s16
q16Ucq8Ss
q16Ucq4Si
Subscripting support in legacy ObjectiveC runtime
__builtin_sve_reinterpret_u8_u32
q16Ucq4Ui
__builtin_sve_reinterpret_u8_f16
Control-Flow Branch Protection enabled
__builtin_sve_reinterpret_u8_f32
q16Ucq4f
The visibility for dllexport definitions [-fvisibility-from-dllstorageclass]
OpenCL address space map mangling mode
__builtin_sve_reinterpret_u16_s32
q8Usq4Si
__builtin_sve_reinterpret_u16_u8
Declare OpenCL builtin functions
q8Usq2UWi
__builtin_sve_reinterpret_u16_f16
__builtin_sve_reinterpret_u16_bf16
Require member pointer base types to be complete at the point where the type's inheritance model would be determined under the Microsoft ABI
q8Usq2d
__builtin_sve_reinterpret_u32_s8
__builtin_sve_reinterpret_u32_s16
default visibility for functions and variables [-fvisibility]
Run instrumented parse and dump the parsing log
default visibility for types [-ftype-visibility]
Emit in-descriptor block flags
missing source expression
-lSceDbgJmc
visibility for functions and variables with dllexport annotations [-fvisibility-from-dllstorageclass]
-doloop
visibility for functions and variables without an explicit DLL storage class [-fvisibility-from-dllstorageclass]
-incremental:no
visibility for external declarations with dllimport annotations [-fvisibility-from-dllstorageclass]
coclass
visibility for external declarations without an explicit DLL storage class [-fvisibility-from-dllstorageclass]
-include:___asan_seh_interceptor
stack protector mode
Read extension block message: %s
stack checking
-fno-modulo-sched
controls whether to use strong linking for darwin stack checking (x86 only)
trivial automatic variable initialization
do not auto-initialize objects initialized by a C++ constructor
-guard:cf
stop trivial automatic variable initialization after the specified number of instances. Must be greater than 0.
Malformed Diagnostic record
Zero initialize only first N bytes of each stack variable.
-guard:cf-
3e3r3
do not auto-initialize non-POD objects
-guard:ehcont
do not auto-initialize variables in STL namespace
Failed to open diagnostics file
Generic error occurred while handling a record
do not auto-initialize arrays other than arrays of pointers
-fno-ms-compatibility
signed integer overflow handling
dependency
Thread Model
details
Microsoft Visual C/C++ Version
SourceFileContents
How many vtordisps to insert
Apple gcc-compatible #pragma pack handling
decimal64
IBM XL #pragma pack handling
-defaultlib:libomp.lib
retain documentation comments from system headers in the AST
Version
use external API notes
-fno-ms-extensions
compilation involves pch
controls how aggressive is ASan field padding (0: none, 1:least aggressive, 2: more aggressive)
link
ARM Security extensions support
#pragma 
controls whether to do XRay instrumentation
lld-link
controls whether to always emit intrinsic calls to __xray_customevent(...) builtin.
, std::allocator<char>
controls whether to always emit intrinsic calls to __xray_typedevent(...) builtin.
link.exe
whether to emit all vtables
</integer>
version of Clang that we should attempt to be ABI-compatible with
-fno-new-infallible
Default alignment for functions
CASFS_ROOT_ID
Default alignment for loops
&apos;
fixed point types
unsigned fixed point types having one extra padding bit
Register C++ static destructors
avx512fp16,avx512vl
Enable or disable the builtin matrix type
Rely on strict definition of flexible arrays
failed to obtain absolute path for 
Max number of tokens per TU or 0
INCLUDE
enable noescape optimized blocks
Scope of return address signing
Key used for return address signing
Branch-target enforcement enabled
Speculative load hardening enabled
-dylinker_install_name
Use an ABI-incompatible v-table layout that uses relative references
shared
Minimum vscale value
file
Maximum vscale value
invalid standard user-level extension '%c'
Controls how scalar integer arguments are extended in calls to unprototyped and varargs functions
CAS_INCLUDE_TREE_ID
Fuchsia API level
cppwinrt
Typed Memory Operations Callsite Rewriting
Generate explicit import from anonymous namespace to containing scope
Use typed variants of C++ new() and delete()
-dumpspecs
Allow CWG1423
zvfh requires zfh, zfhmin, zhinx or zhinxmin extension to also be specified
Revert f50d1aca992864d7edd65a449f5368b53727752a and return id for [self alloc]
visualstudio::Linker
Revert 4257857bf8a508b56f73f61bdf941194913bac92 and do not infer +new availability
Dump declarations that are deserialized from PCH, for testing
Revert dafc3106d2069b806a10e072306a2196f1cda585 and do not emit -Wformat
Revert 5741d19f046f24450ebda3a421a8ce49043ad2b8 and do not emit -Wformat
Revert 7ae1b4a0ce9c7f269cf3069e41496a78e3f28d49 and allow static members in anon unions
-DMYRIAD2
Revert 7ae1b4a0ce9c7f269cf3069e41496a78e3f28d49 and allow static members in local structs
-dump-depscan-tree=
Revert 878a24ee244a24c39d1c57e9af2e88c621f7cce9 and give some implicit member expressions dependent type
/doc
Revert part of c90e198107431f64b73686bdce31c293e3380ac7
zvl32b
Revert 536b0ee40ab97f2878dc124a321cf9108ee3d233 and don't check nullptr arithmetic
-no6thSlotCompression
Disable 89b1a463a531dbdb18aa3516d7b8fd7482d1d3a0
      <key>line</key>
Disable (part of) 96c899449b61b866b583560a49c4627f561336fc
Print macro definitions in -E mode instead of normal output
Disable a4a60ad51dd58da2c15ef505d5fe527ef3fecd89
%*llu %-*s - %s
Disable ccc4d83cda16bea1d9dfd0967dc7d2cfb24b8e75
/*implicit*/
rdar://67765582
-darwin-target-variant-triple
Disable (part of) 552c6c232872
-disable-llvm-verifier
rdar://72363517
rdar://72823399
Disable lifetime-markers emission even when optimizations are enabled
rdar://81325777
Disable freeing of memory on exit
rdar://81712146
SmallVector unable to grow. Requested capacity (
Disable ObjCConstantLiterals in projects that do not handle it
Path to the DIA SDK
Suppress conflicting type errors from mismatching declarations
invariant
module features
/diagnostics:classic
target Objective-C runtime
block command names
target ABI
-lrtemsbsp
target CPU
--dependent-lib=
tune CPU
Don't try to avoid heapifying local blocks
-Wsystem-headers
-dependency-dot
-Werror
maninclude
-Weverything -Werror
-dependency-file
-Werror=
Apply given attribute to all functions
--debug
malformed uleb128, extends past end
/../sparc-myriad-rtems/lib
uleb128 too big for uint64
methodgroup
Cursor should always be able to go back, failed: 
+64bit
could not decompress embedded file contents: 
-debug-forward-template-params
AST record has invalid code
movicompile
could not get buffer for file '
Emit complete descriptions of template parameters in forward declarations
Timestamp file
-darwin-target-variant
file too small to contain AST file magic
file doesn't start with AST file magic
nacl-arm-macros.s
clang diagnostic
nosubgrouping
jumping
Specify the darwin target variant triple
reading code
header-module-precompiler
analyzer
ASTReader::readDeclRecord failed reading decl code: 
armelf_nacl
attempt to read a C++ base-specifier record as a declaration
/d1reportAllClassLayout
attempt to read a C++ ctor initializer record as a declaration
Do not discard comments when preprocessing
ASTReader::loadDeclUpdateRecords failed jumping: 
gfx1102
ASTReader::loadDeclUpdateRecords failed reading code: 
mipselelf_nacl
ASTReader::loadDeclUpdateRecords failed reading rec code: 
-current_version
ASTReader::loadPendingDeclChain failed jumping: 
rv610
ASTReader::loadPendingDeclChain failed reading code: 
Dump record layout information
ASTReader::loadPendingDeclChain failed reading rec code: 
-lnacl
ASTReader::readDeclRecord failed 
CUDA installation path
CONTROL_BLOCK
--cuda-include-ptx=
METADATA
x86_64-nacl/lib32
MODULE_NAME
privatesection
MODULE_DIRECTORY
Compile CUDA code for device only
MODULE_MAP_FILE
Compile CUDA code for host only. Has no effect on non-CUDA compilations.
IMPORTS
-Wno-implicit-int-float-conversion
ORIGINAL_FILE
x86_64-nacl/bin
ORIGINAL_FILE_ID
 [-ferror-limit=]
INPUT_FILE_OFFSETS
-ffuchsia-api-level=
MODULE_CACHE_KEY
aarch64_32
LANGUAGE_OPTIONS
Compile CUDA code for both host and device (default). Has no effect on non-CUDA compilations.
TARGET_OPTIONS
x86_64-nacl
HEADER_SEARCH_OPTIONS
none,zlib,zstd
Specify configuration file
-dwarf-debug-flags
The string to embed in the Dwarf debug AT_producer record.
-fdepscan-prefix-map-sdk=
-finit-character=
Disable use of builtin functions
INPUT_FILES_BLOCK
powerpc
INPUT_FILE
arm-nacl/usr/lib
INPUT_FILE_HASH
migrator
compiler
AST_BLOCK
DWARF debug sections compression type
TYPE_OFFSET
-iwithprefix
DECL_OFFSET
Include code patterns in code-completion results
IDENTIFIER_OFFSET
-combine
IDENTIFIER_TABLE
Include brief documentation comments in code-completion results.
EAGERLY_DESERIALIZED_DECLS
spirv
MODULAR_CODEGEN_DECLS
mipsel-nacl
SPECIAL_TYPES
/clr
STATISTICS
cuda
TENTATIVE_DEFINITIONS
--comments-in-macros
SELECTOR_OFFSETS
x86_64-nacl/include
METHOD_POOL
-clear-ast-before-backend
PP_COUNTER_VALUE
Vendor specific clang features
SOURCE_LOCATION_OFFSETS
SOURCE_LOCATION_PRELOADS
x86_64-nacl/usr/include
EXT_VECTOR_DECLS
-objcmt-allowlist-dir-path=
UNUSED_FILESCOPED_DECLS
-clang-vendor-feature=
PPD_ENTITIES_OFFSETS
+float1e3
VTABLE_USES
arm-nacl/include/c++/v1
REFERENCED_SELECTOR_POOL
OpenCL language standard to compile for.
TU_UPDATE_LEXICAL
-cl-no-stdinc
SEMA_DECL_REFS
muslx32
WEAK_UNDECLARED_IDENTIFIERS
mipsel-nacl/include/c++/v1
PENDING_IMPLICIT_INSTANTIATIONS
-cl-kernel-arg-info
UPDATE_VISIBLE
library
DECL_UPDATE_OFFSETS
cl,CL,cl1.0,CL1.0,cl1.1,CL1.1,cl1.2,CL1.2,cl2.0,CL2.0,cl3.0,CL3.0,clc++,CLC++,clc++1.0,CLC++1.0,clc++2021,CLC++2021
DECL_UPDATES
/libexec/ld.elf_so
CUDA_SPECIAL_DECL_REFS
OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
HEADER_SEARCH_TABLE
-cl-denorms-are-zero
FP_PRAGMA_OPTIONS
i886
OPENCL_EXTENSIONS
armelf_nbsd_eabihf
OPENCL_EXTENSION_TYPES
-fsanitize-coverage-inline-bool-flag
OPENCL_EXTENSION_DECLS
<file>
DELEGATING_CTORS
-Wno-reorder-init-list
KNOWN_NAMESPACES
armelfb_nbsd_eabi
MODULE_OFFSET_MAP
SOURCE_MANAGER_LINE_TABLE
Show bindings of tools to actions
OBJC_CATEGORIES_MAP
armelfb_nbsd
FILE_SORTED_DECLS
verbinclude
IMPORTED_MODULES
<gcc-path>
OBJC_CATEGORIES
MACRO_OFFSET
-fno-direct-access-external-data
INTERESTING_IDENTIFIERS
-fallow-unsupported
UNDEFINED_BUT_USED
-fallow-pcm-with-compiler-errors
LATE_PARSED_TEMPLATE
-fallow-pch-with-different-modules-cache-path
OPTIMIZE_PRAGMA_OPTIONS
-fallow-pch-with-compiler-errors
MSSTRUCT_PRAGMA_OPTIONS
=/usr/lib/eabihf
POINTERS_TO_MEMBERS_PRAGMA_OPTIONS
elf32ppc_nbsd
UNUSED_LOCAL_TYPEDEF_NAME_CANDIDATES
+multiple_stld
DELETE_EXPRS_TO_ANALYZE
  (frontend)
CUDA_PRAGMA_FORCE_HOST_DEVICE_DEPTH
-falign-loops
PP_CONDITIONAL_STACK
-faligned-allocation
DECLS_TO_CHECK_FOR_DEFERRED_DIAGS
-falign-labels
PP_INCLUDED_FILES
redirecting-with
PP_ASSUME_NONNULL_LOC
=/usr/lib/64
SOURCE_MANAGER_BLOCK
-falign-commons
SM_SLOC_FILE_ENTRY
duplicate key '
SM_SLOC_BUFFER_ENTRY
=/usr/lib/powerpc
SM_SLOC_BUFFER_BLOB
=/usr/lib/sparc
SM_SLOC_BUFFER_BLOB_COMPRESSED
-faddrsig
SM_SLOC_EXPANSION_ENTRY
-faapcs-bitfield-width
PREPROCESSOR_BLOCK
Follows the AAPCS standard that all volatile bit-field write generates at least one load. (ARM only).
PP_MACRO_DIRECTIVE_HISTORY
CRLF
PP_MACRO_FUNCTION_LIKE
PP_MACRO_OBJECT_LIKE
-finline-hint-functions
PP_MODULE_MACRO
 __attribute__((import_module
PP_TOKEN
/usr/include/g++
SUBMODULE_BLOCK
cmov
SUBMODULE_METADATA
/external:W4
SUBMODULE_DEFINITION
sse4.1
SUBMODULE_UMBRELLA_HEADER
netbsd::Assembler
SUBMODULE_HEADER
/external:W0
SUBMODULE_TOPHEADER
avx512f
SUBMODULE_UMBRELLA_DIR
Entry point name
SUBMODULE_IMPORTS
__start
SUBMODULE_AFFECTING_MODULES
<var>
SUBMODULE_EXPORTS
/exportHeader
SUBMODULE_REQUIRES
i386
SUBMODULE_EXCLUDED_HEADER
-nopie
SUBMODULE_LINK_LIBRARY
The exception model
SUBMODULE_CONFIG_MACRO
-exported_symbols_list
SUBMODULE_CONFLICT
 (directive at 
SUBMODULE_PRIVATE_HEADER
/usr/lib
SUBMODULE_TEXTUAL_HEADER
/errorReport
SUBMODULE_PRIVATE_TEXTUAL_HEADER
-Eonly
SUBMODULE_INITIALIZERS
sandybridge
SUBMODULE_EXPORT_AS
/usr/lib/libcompiler_rt.a
COMMENTS_BLOCK
-enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang
COMMENTS_RAW_COMMENT
skylake-avx512
COMMENTS_DECL_TO_COMMENT
-exception-model=
DECLTYPES_BLOCK
openbsd::Linker
TYPE_EXT_QUAL
Enable 16-bit types and disable min precision types.Available in HLSL 2018 and shader model 6.2.
TYPE_COMPLEX
-emit-pch
TYPE_POINTER
athlon-fx
TYPE_BLOCK_POINTER
TYPE_LVALUE_REFERENCE
-emit-module-interface
TYPE_RVALUE_REFERENCE
Emit native object files
TYPE_MEMBER_POINTER
TYPE_CONSTANT_ARRAY
TYPE_INCOMPLETE_ARRAY
Generate Interface Stub Files, emit merged text not binary.
TYPE_VARIABLE_ARRAY
-emit-llvm-only
TYPE_VECTOR
cx16
TYPE_EXT_VECTOR
SceDbgAddressSanitizer_stub_weak
TYPE_FUNCTION_NO_PROTO
-emit-html
TYPE_FUNCTION_PROTO
TYPE_TYPEDEF
-emit-mlir
TYPE_TYPEOF_EXPR
SceAddressSanitizer_nosubmission_stub_weak
TYPE_TYPEOF
Generate pre-compiled module file from a set of header files
TYPE_RECORD
-fborland-extensions
TYPE_ENUM
verify-pch
TYPE_OBJC_INTERFACE
TYPE_OBJC_OBJECT_POINTER
-Brepro
-wholearchive:
TYPE_DECLTYPE
-fbootclasspath=
TYPE_ELABORATED
all,labels,none,list=
TYPE_SUBST_TEMPLATE_TYPE_PARM
TYPE_UNRESOLVED_USING
Produced object files can use all ELF features supported by this binutils version and newer. If -fno-integrated-as is specified, the generated assembly will consider GNU as support. 'none' means that all ELF features can be used, regardless of binutils support. Defaults to 2.26.
TYPE_INJECTED_CLASS_NAME
<file or dir/>
TYPE_OBJC_OBJECT
TYPE_TEMPLATE_TYPE_PARM
target/include
TYPE_TEMPLATE_SPECIALIZATION
TYPE_DEPENDENT_NAME
Can only iterate over the stream once
TYPE_DEPENDENT_TEMPLATE_SPECIALIZATION
-fauto-profile-accurate
TYPE_DEPENDENT_SIZED_ARRAY
target/lib
TYPE_PAREN
-fauto-profile=
TYPE_MACRO_QUALIFIED
-fsanitize-coverage-trace-loads
TYPE_PACK_EXPANSION
-fassociative-math
TYPE_ATTRIBUTED
-fvisibility-dllexport=protected
TYPE_SUBST_TEMPLATE_TYPE_PARM_PACK
Dump the pre-fir parse tree
TYPE_AUTO
-fassume-sane-operator-new
TYPE_UNARY_TRANSFORM
rdseed
TYPE_ATOMIC
-fapple-pragma-pack
TYPE_DECAYED
Restrict code to those available for App Extensions
TYPE_ADJUSTED
-fapple-kext
TYPE_OBJC_TYPE_PARAM
RISCV::Linker
LOCAL_REDECLARATIONS
DECL_TYPEDEF
Specify the Swift version to use when filtering API notes
DECL_TYPEALIAS
!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
DECL_ENUM
-fapply-global-visibility-to-externs
DECL_RECORD
DECL_ENUM_CONSTANT
-fapinotes-modules
DECL_FUNCTION
mixed,gcc,xl
DECL_OBJC_METHOD
carriage-return
DECL_OBJC_INTERFACE
-fcall-saved-x15
DECL_OBJC_PROTOCOL
-fcall-saved-x14
DECL_OBJC_IVAR
Source-level compatibility for Altivec vectors (for PowerPC targets). This includes results of vector comparison (scalar for 'xl', vector for 'gcc') as well as behavior when initializing with a scalar (splatting for 'xl', element zero only for 'gcc'). For 'mixed', the compatibility is as 'gcc' for 'vector bool/vector pixel' and as 'xl' for other types. Current default is 'mixed'.
DECL_OBJC_AT_DEFS_FIELD
minix::Linker
DECL_OBJC_CATEGORY
PScpu::Assembler
DECL_OBJC_CATEGORY_IMPL
Make the x12 register call-saved (AArch64 only)
DECL_OBJC_IMPLEMENTATION
-fcache-disable-replay
DECL_OBJC_COMPATIBLE_ALIAS
plus-sign
DECL_OBJC_PROPERTY
orbis-
DECL_OBJC_PROPERTY_IMPL
-fbuiltin
DECL_FIELD
DECL_MS_PROPERTY
-fcall-saved-x13
DECL_VAR
prospero-
DECL_IMPLICIT_PARAM
<time since Epoch in seconds>
DECL_PARM_VAR
-fbranch-count-reg
DECL_FILE_SCOPE_ASM
dsymutil
DECL_BLOCK
tilde
DECL_CONTEXT_LEXICAL
elrw
DECL_CONTEXT_VISIBLE
Maximum nesting level for parentheses, brackets, and braces
DECL_NAMESPACE
-fno-deprecated-macro
DECL_NAMESPACE_ALIAS
DECL_USING
Configure the filesystem to read from the provided CAS tree. See also -fcas-builtin-path for loading a tree.
DECL_USING_SHADOW
-fcaller-saves
DECL_USING_DIRECTIVE
REG_BADRPT
DECL_UNRESOLVED_USING_VALUE
DECL_UNRESOLVED_USING_TYPENAME
warn
regex
DECL_LINKAGE_SPEC
Make the x9 register call-saved (AArch64 only)
DECL_CXX_RECORD
<Preprocessor group>
DECL_CXX_METHOD
values-Xc.o
DECL_CXX_CONSTRUCTOR
-fsanitize-coverage-trace-stores
DECL_CXX_DESTRUCTOR
DECL_CXX_CONVERSION
-lkernel32
DECL_ACCESS_SPEC
-fcheck-new
DECL_FRIEND
Enable C++ builtin type char8_t
DECL_FRIEND_TEMPLATE
DECL_CLASS_TEMPLATE
address_discrimination
DECL_CLASS_TEMPLATE_SPECIALIZATION
Treat each comma separated argument in <arg> as a documentation comment block command
DECL_CLASS_TEMPLATE_PARTIAL_SPECIALIZATION
<LongDouble group>
DECL_VAR_TEMPLATE
-fcomplete-member-pointers
DECL_VAR_TEMPLATE_SPECIALIZATION
<I group>
DECL_VAR_TEMPLATE_PARTIAL_SPECIALIZATION
Disable '[[]]' attributes in all C and C++ language modes
DECL_FUNCTION_TEMPLATE
 [-Werror
DECL_TEMPLATE_TYPE_PARM
-fconcepts-ts
DECL_NON_TYPE_TEMPLATE_PARM
armv4t
DECL_TEMPLATE_TEMPLATE_PARM
-fclang-abi-compat=
DECL_CONCEPT
Alias for -fsanitize-ignorelist=
DECL_REQUIRES_EXPR_BODY
Missing RuntimeRoot
DECL_TYPE_ALIAS_TEMPLATE
-fno-openmp-cuda-mode
__builtin_amdgcn_implicitarg_ptr
__builtin_amdgcn_queue_ptr
__builtin_amdgcn_workgroup_id_y
__builtin_amdgcn_workgroup_id_z
__builtin_amdgcn_workitem_id_z
DECL_INDIRECTFIELD
__builtin_amdgcn_workgroup_size_z
__builtin_amdgcn_grid_size_x
__builtin_amdgcn_mbcnt_hi
DECL_EXPANDED_TEMPLATE_TEMPLATE_PARM_PACK
__builtin_amdgcn_s_getreg
UiIi
vIiUi
DECL_IMPORT
__builtin_amdgcn_s_sendmsghalt
__builtin_amdgcn_s_barrier
__builtin_amdgcn_sched_group_barrier
DECL_EMPTY
__builtin_amdgcn_buffer_wbinvl1
__builtin_amdgcn_ds_gws_init
--gcc-install-dir=
DECL_OMP_CAPTUREDEXPR
vUicC*
__builtin_amdgcn_groupstaticsize
__builtin_amdgcn_atomic_inc64
DECL_PRAGMA_DETECT_MISMATCH
__builtin_amdgcn_div_scale
dddbb*
fffbb*
DECL_OMP_ALLOCATE
__builtin_amdgcn_div_fixup
dddd
__builtin_amdgcn_trig_preop
PREPROCESSOR_DETAIL_BLOCK
__builtin_amdgcn_rcp
__builtin_amdgcn_rcpf
Disable all Clang extensions for OpenMP directives and clauses
PPD_MACRO_DEFINITION
__builtin_amdgcn_sinf
__builtin_amdgcn_cosf
__builtin_amdgcn_ldexpf
EXTENSION_BLOCK
__builtin_amdgcn_frexp_expf
__builtin_amdgcn_fract
__builtin_amdgcn_lerp
UNHASHED_CONTROL_BLOCK
__builtin_amdgcn_cubeid
__builtin_amdgcn_cubema
AST_BLOCK_HASH
__builtin_amdgcn_s_setprio
-gcodeview-ghash
HEADER_SEARCH_PATHS
__builtin_amdgcn_sicmpl
WUiWiWiIi
__builtin_amdgcn_fcmpf
DIAG_PRAGMA_MAPPINGS
__builtin_amdgcn_ds_bpermute
__builtin_amdgcn_readfirstlane
__builtin_amdgcn_fmed3f
STMT_STOP
__builtin_amdgcn_ds_append
ii*3
__builtin_amdgcn_alignbyte
STMT_REF_PTR
E2hff
STMT_NULL
-fno-openmp-new-driver
STMT_COMPOUND
E2UsUiUi
__builtin_amdgcn_cvt_pk_u8_f32
__builtin_amdgcn_msad_u8
STMT_DEFAULT
WUiWUiUiWUi
__builtin_amdgcn_mqsad_pk_u16_u8
V4UiWUiUiV4Ui
STMT_ATTRIBUTED
__builtin_amdgcn_is_shared
bvC*0
__builtin_amdgcn_interp_p1_f16
STMT_SWITCH
__builtin_amdgcn_interp_p1
ffUiUiUi
-gcoff
STMT_DO
__builtin_amdgcn_rcph
__builtin_amdgcn_sqrth
__builtin_amdgcn_cosh
STMT_GOTO
__builtin_amdgcn_frexp_exph
__builtin_amdgcn_fracth
STMT_CONTINUE
__builtin_amdgcn_update_dpp
gfx8-insts
STMT_RETURN
__builtin_amdgcn_global_atomic_fadd_f64
dd*1d
-fno-openmp-optimistic-collapse
STMT_GCCASM
__builtin_amdgcn_global_atomic_fmax_f64
__builtin_amdgcn_flat_atomic_fadd_f64
__builtin_amdgcn_flat_atomic_fmax_f64
EXPR_PREDEFINED
ff*3f
__builtin_amdgcn_flat_atomic_fadd_f32
gfx940-insts
EXPR_INTEGER_LITERAL
__builtin_amdgcn_global_atomic_fadd_v2bf16
V2sV2s*1V2s
__builtin_amdgcn_fdot2
EXPR_FLOATING_LITERAL
hV2hV2hh
dot8-insts
Generate source-level debug information with dwarf version 2
EXPR_STRING_LITERAL
dot2-insts
__builtin_amdgcn_udot2
SiSiSiSiIb
EXPR_PAREN
__builtin_amdgcn_sudot4
iIbiIbiiIb
__builtin_amdgcn_udot8
EXPR_UNARY_OPERATOR
__builtin_amdgcn_permlanex16
__builtin_amdgcn_mov_dpp8
V4UiUifV4fV4fV4fV4Ui
EXPR_ARRAY_SUBSCRIPT
__builtin_amdgcn_image_bvh_intersect_ray_l
EXPR_CALL
-fno-openmp-target-debug
EXPR_MEMBER
__builtin_amdgcn_wmma_f16_16x16x16_f16_w32
V16hV16hV16hV16hIb
__builtin_amdgcn_wmma_i32_16x16x16_iu8_w32
EXPR_COMPOUND_ASSIGN_OPERATOR
__builtin_amdgcn_wmma_f32_16x16x16_f16_w64
V4fV16hV16hV4f
V4fV16sV16sV4f
EXPR_IMPLICIT_CAST
__builtin_amdgcn_wmma_i32_16x16x16_iu8_w64
V4iIbV4iIbV4iV4iIb
__builtin_amdgcn_s_sendmsg_rtn
EXPR_COMPOUND_LITERAL
__builtin_amdgcn_ds_bvh_stack_rtn
V2UiUiUiV4UiIi
Generate source-level debug information with dwarf version 4
EXPR_INIT_LIST
__builtin_r600_read_tgid_x
__builtin_r600_read_tgid_y
__builtin_r600_read_tidig_y
EXPR_DESIGNATED_INIT_UPDATE
__builtin_amdgcn_mfma_f32_32x32x1f32
V32fffV32fIiIiIi
__builtin_amdgcn_mfma_f32_16x16x1f32
EXPR_NO_INIT
__builtin_amdgcn_mfma_f32_16x16x4f32
__builtin_amdgcn_mfma_f32_32x32x4f16
V16fV4hV4hV16fIiIiIi
EXPR_ADDR_LABEL
__builtin_amdgcn_mfma_f32_16x16x16f16
__builtin_amdgcn_mfma_i32_32x32x4i8
-fno-openmp
EXPR_CHOOSE
__builtin_amdgcn_mfma_i32_16x16x16i8
__builtin_amdgcn_mfma_f32_32x32x2bf16
V16fV2sV2sV16fIiIiIi
EXPR_SHUFFLE_VECTOR
__builtin_amdgcn_mfma_f32_16x16x8bf16
__builtin_amdgcn_mfma_f32_32x32x4bf16_1k
__builtin_amdgcn_mfma_f32_16x16x4bf16_1k
EXPR_GENERIC_SELECTION
__builtin_amdgcn_mfma_f32_16x16x16bf16_1k
__builtin_amdgcn_mfma_f64_16x16x4f64
ddddIiIiIi
EXPR_OBJC_BOXED_EXPRESSION
V16iWiWiV16iIiIiIi
__builtin_amdgcn_mfma_f32_16x16x8_xf32
-gdwarf32
EXPR_OBJC_DICTIONARY_LITERAL
__builtin_amdgcn_mfma_f32_16x16x32_bf8_fp8
__builtin_amdgcn_mfma_f32_16x16x32_fp8_bf8
V16fWiWiV16fIiIiIi
EXPR_OBJC_SELECTOR_EXPR
__builtin_amdgcn_smfmac_f32_16x16x32_f16
V4fV4hV8hV4fiIiIi
V16fV4hV8hV16fiIiIi
EXPR_OBJC_IVAR_REF_EXPR
__builtin_amdgcn_smfmac_i32_16x16x64_i8
V4iV2iV4iV4iiIiIi
__builtin_amdgcn_smfmac_f32_16x16x64_bf8_bf8
EXPR_OBJC_KVC_REF_EXPR
__builtin_amdgcn_smfmac_f32_16x16x64_fp8_fp8
EXPR_OBJC_MESSAGE_EXPR
Do not treat C++ operator name keywords as synonyms for operators
STMT_OBJC_FOR_COLLECTION
__builtin_amdgcn_cvt_pk_f32_bf8
V2fiIb
iffiIb
STMT_OBJC_FINALLY
__builtin_amdgcn_cvt_sr_fp8_f32
STMT_OBJC_AT_SYNCHRONIZED
EXPR_OBJC_BOOL_LITERAL
-gdwarf
STMT_CXX_TRY
EXPR_CXX_OPERATOR_CALL
EXPR_CXX_REWRITTEN_BINARY_OPERATOR
EXPR_CXX_TEMPORARY_OBJECT
Disable tail call optimization, keeping the call stack accurate
EXPR_CXX_DYNAMIC_CAST
EXPR_CXX_CONST_CAST
v101
EXPR_CXX_FUNCTIONAL_CAST
v106
v107
v110
EXPR_CXX_STD_INITIALIZER_LIST
v114
v115
-gembed-source
EXPR_CXX_NULL_PTR_LITERAL
v122
v123
v126
EXPR_CXX_TYPEID_TYPE
v130
v131
v133
EXPR_CXX_THROW
v138
v139
v142
EXPR_CXX_DEFAULT_INIT
v145
EXPR_CXX_BIND_TEMPORARY
-fno-pack-struct
EXPR_CXX_SCALAR_VALUE_INIT
v154
v155
v158
EXPR_CXX_DELETE
v162
v163
v165
EXPR_EXPR_WITH_CLEANUPS
v170
v171
v174
EXPR_CXX_DEPENDENT_SCOPE_DECL_REF
v178
v179
-gen-reproducer=
EXPR_CXX_UNRESOLVED_MEMBER
v186
v187
v190
EXPR_CXX_EXPRESSION_TRAIT
v194
v195
v197
EXPR_OPAQUE_VALUE
v202
v203
v206
EXPR_TYPE_TRAIT
v210
v211
-fno-pascal-strings
EXPR_PACK_EXPANSION
v218
v219
v222
EXPR_SUBST_NON_TYPE_TEMPLATE_PARM
v226
v227
v229
EXPR_FUNCTION_PARM_PACK
v234
v235
EXPR_CUDA_KERNEL_CALL
v243
EXPR_CXX_UUIDOF_TYPE
v250
v251
v254
serializing
Module LoadIndex
expected signature BCGI
*** Global Module Index Statistics:
  %u / %u identifier lookups succeeded (%f%%)
Do not generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
LFS error
failed writing index
s101
' failed: 
s106
s107
s110
expected signature CPCH
s114
s115
Module WriteIndex
s122
s123
s126
INDEX_METADATA
exec_lo
IDENTIFIER_INDEX
flat_scratch_hi
  Imports: 
Do not generate debug info for types in an object file built from this PCH and do not generate them elsewhere
Source location offset local -> global map
  Number of identifiers: 
  Base macro ID: 
Macro ID local -> global map
-ggdb2
  Number of submodules: 
  Base selector ID: 
Selector ID local -> global map
  Number of preprocessed entities: 
<old>=<new>
Preprocessed entity ID local -> global map
-fno-pch-timestamp
  Base type index: 
 Vectorize
  Base source location offset: 
  Number of macros: 
 defaulted_is_deleted
clang-gcc
typename
  Number of decls: 
struct
offload bundler
union
Submodule ID local -> global map
    
-ggdb3
Decayed
module file not found
ConstantArray
could not read module signature
Run cc1 in-process
  Number of types: 
clang-offload-bundler
*** Analysis Based Warnings Stats:
Offload::Linker
  Base decl ID: 
DependentAddressSpace
 w/o CFGs).
DependentBitInt
DependentVector
-fno-peel-loops
 CFG blocks built.
a110
module file out of date
DynamicRangePointer
 max CFG blocks per function.
InjectedClassName
a118
a122
 variables analyzed.
 BS_Inbranch
.clang-scan
ObjCObjectPointer
 max variables per function.
ObjCObject
Pipe
 average block visits per function.
-fintegrated-objemitter
apple-m1
 average CFG blocks per function.
RValueReference
TemplateSpecialization
apple-s4
apple-a12
UnaryTransform
a170
Using
fallthrough
a166
[[fallthrough]]
-fno-PIC
[[clang::fallthrough]]
long long
generic
 max block visits per function.
Emit debug line info directives only
-march=
-fno-permissive
ExtVector
Enables experimental strict floating point in LLVM.
short _Fract
armv8-a
a214
unsigned short _Fract
a218
a222
_Sat _Accum
_Sat short _Fract
unsigned _Fract
Paren
 block visits.
<dependent type>
a254
-fno-PIE
-fcuda-flush-denormals-to-zero
+harden-sls-blr
ilink1
e-m:w-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S128
E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
E-m:o-p:32:32-Fi8-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
e-m:o-p:32:32-Fi8-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
8M_BASE
8_4A
8_5A
8_8A
COMPLETION: 
9_3A
8M_MAIN
8_1M_MAIN
InBase
thumb-mode
-thumb-mode
+vfp2
+vfp3d16
+vfp4sp
-gno-codeview-ghash
 (requires fix-it:
+fp-armv8d16
+hwdiv
+mve.fp
+neonfp
-neonfp
__arm
OVERLOAD: 
__ARM_ARCH_ISA_ARM
__ARM_ARCH_ISA_THUMB
__ARM_EABI__
volatile
__ARM_ROPI
__ARM_RWPI
-gno-embed-source
unaligned
__APCS_32__
__VFP_FP__
__ARM_VFPV4__
typedef
__ARM_FEATURE_CDE_COPROC
__ARM_FEATURE_CMSE
__ARM_FEATURE_SAT
static
__builtin_arm_smulbt
__builtin_arm_smultb
__builtin_arm_smulwt
register
__builtin_arm_ssat
__builtin_arm_usat
-fno-prebuilt-implicit-modules
mutable
__builtin_arm_smlawt
__builtin_arm_ssat16
__builtin_arm_sxtb16
thread_local
__builtin_arm_qadd8
__builtin_arm_qsub8
__builtin_arm_shadd8
short
__builtin_arm_uhsub8
__builtin_arm_uqadd8
__builtin_arm_usad8
long long
__builtin_arm_qsax
__builtin_arm_qsub16
Don't emit inline line tables.
complex
__builtin_arm_ssax
__builtin_arm_ssub16
__builtin_arm_uhadd16
unsigned
__builtin_arm_uqadd16
__builtin_arm_uqasx
__builtin_arm_uqsub16
char
__builtin_arm_smlald
LLiiiLLi
__builtin_arm_smlsdx
wchar_t
__builtin_arm_smuadx
char8_t
-fno-preserve-as-comments
char16_t
__builtin_arm_set_fpscr
__builtin_arm_vcvtr_f
__builtin_arm_ldc
__builtin_arm_ldc2l
__builtin_arm_stc
__builtin_arm_stcl
_BitInt
__builtin_arm_cdp2
__builtin_arm_mcr
__builtin_arm_mrc
float
vUIiUIiLLUiUIi
__builtin_arm_mcrr2
-gno-reproducible
_Accum
__builtin_arm_cmse_TTT
__builtin_arm_cmse_TTA
vvC*UiUi
_Float16
__builtin_arm_mve_lsll
__builtin_arm_mve_sqrshr
__builtin_arm_mve_sqrshrl_sat48
__ibm128
__builtin_arm_mve_uqrshl
__builtin_arm_mve_uqrshll
__builtin_arm_mve_uqshll
_Bool
__builtin_arm_mve_vabavq_p_s32
__builtin_arm_mve_vabavq_p_s8
-fno-printf
_Decimal64
__builtin_arm_mve_vabavq_u16
__builtin_arm_mve_vabavq_u32
__builtin_arm_mve_vabdq_f32
enum
__builtin_arm_mve_vabdq_m_s32
__builtin_arm_mve_vabdq_m_s8
__builtin_arm_mve_vabdq_m_u32
union
__builtin_arm_mve_vabdq_u16
__builtin_arm_mve_vabdq_u32
__builtin_arm_mve_vabdq_x_f32
__interface
__builtin_arm_mve_vabdq_x_u16
__builtin_arm_mve_vabdq_x_u32
--gpu-bundle-output
typeof
__builtin_arm_mve_vabsq_m_s32
__builtin_arm_mve_vabsq_m_s8
__builtin_arm_mve_vabsq_s8
__auto_type
__builtin_arm_mve_vabsq_x_s32
__builtin_arm_mve_vabsq_x_s8
__builtin_arm_mve_vadciq_m_u32
decltype(auto)
__builtin_arm_mve_vadcq_s32
__builtin_arm_mve_vadcq_u32
__builtin_arm_mve_vaddlvaq_s32
__add_pointer
__builtin_arm_mve_vaddlvq_p_u32
__add_rvalue_reference
-fno-profile-correction
__decay
__builtin_arm_mve_vaddq_m_n_s16
__builtin_arm_mve_vaddq_m_n_s32
__builtin_arm_mve_vaddq_m_n_u32
__make_unsigned
__builtin_arm_mve_vaddq_m_s8
__builtin_arm_mve_vaddq_m_u16
__builtin_arm_mve_vaddq_m_u8
__remove_const
__builtin_arm_mve_vaddq_n_s8
__builtin_arm_mve_vaddq_n_u16
__builtin_arm_mve_vaddq_s16
__remove_cvref
__builtin_arm_mve_vaddq_u32
__builtin_arm_mve_vaddq_u8
--gpu-max-threads-per-block=
__remove_pointer
__builtin_arm_mve_vaddq_x_n_s8
__builtin_arm_mve_vaddq_x_n_u16
__builtin_arm_mve_vaddq_x_s16
__remove_restrict
__builtin_arm_mve_vaddq_x_u32
__builtin_arm_mve_vaddq_x_u8
__builtin_arm_mve_vaddvaq_p_s32
__underlying_type
__builtin_arm_mve_vaddvaq_s16
__builtin_arm_mve_vaddvaq_s32
__builtin_arm_mve_vaddvaq_u32
_Atomic
__builtin_arm_mve_vaddvq_p_s8
__builtin_arm_mve_vaddvq_p_u16
-fno-profile-generate
image1d_t
__builtin_arm_mve_vaddvq_u32
__builtin_arm_mve_vaddvq_u8
__builtin_arm_mve_vandq_m_f16
image1d_buffer_t
__builtin_arm_mve_vandq_m_s8
__builtin_arm_mve_vandq_m_u16
__builtin_arm_mve_vandq_m_u8
image2d_array_t
__builtin_arm_mve_vandq_u32
__builtin_arm_mve_vandq_u8
__builtin_arm_mve_vandq_x_s16
image2d_array_depth_t
__builtin_arm_mve_vandq_x_u32
__builtin_arm_mve_vandq_x_u8
-gpubnames
image2d_array_msaa_t
__builtin_arm_mve_vbicq_m_n_u16
__builtin_arm_mve_vbicq_m_n_u32
__builtin_arm_mve_vbicq_m_s8
image2d_array_msaa_depth_t
__builtin_arm_mve_vbicq_n_s16
__builtin_arm_mve_vbicq_n_s32
__builtin_arm_mve_vbicq_n_u32
(error)
__builtin_arm_mve_vbicq_u32
__builtin_arm_mve_vbicq_u8
__builtin_arm_mve_vbicq_x_s16
consteval
__builtin_arm_mve_vbicq_x_u32
constinit
-fno-profile-instr-generate
__unaligned
__builtin_arm_mve_vbrsrq_m_n_u32
__builtin_arm_mve_vbrsrq_m_n_u8
__builtin_arm_mve_vbrsrq_n_s16
_Sat
__builtin_arm_mve_vbrsrq_n_u32
__builtin_arm_mve_vbrsrq_n_u8
__builtin_arm_mve_vbrsrq_x_n_f32
__forceinline
__builtin_arm_mve_vbrsrq_x_n_u32
__builtin_arm_mve_vbrsrq_x_n_u8
__builtin_arm_mve_vcaddq_rot270_m_f16
explicit
__builtin_arm_mve_vcaddq_rot270_m_s8
__builtin_arm_mve_vcaddq_rot270_m_u16
-grecord-gcc-switches
friend
__builtin_arm_mve_vcaddq_rot270_u32
__builtin_arm_mve_vcaddq_rot270_u8
__builtin_arm_mve_vcaddq_rot270_x_s16
__builtin_arm_mve_vcaddq_rot270_x_u32
__builtin_arm_mve_vcaddq_rot270_x_u8
__builtin_arm_mve_vcaddq_rot90_f32
__pixel
__builtin_arm_mve_vcaddq_rot90_m_s8
__builtin_arm_mve_vcaddq_rot90_m_u16
__builtin_arm_mve_vcaddq_rot90_s16
arch12
__builtin_arm_mve_vcaddq_rot90_u32
__builtin_arm_mve_vcaddq_rot90_u8
Disable using instrumentation data for profile-guided optimization
final
__builtin_arm_mve_vcaddq_rot90_x_u32
__builtin_arm_mve_vcaddq_rot90_x_u8
__builtin_arm_mve_vclsq_m_s8
sealed
__builtin_arm_mve_vclsq_x_s16
__builtin_arm_mve_vclsq_x_s32
__builtin_arm_mve_vclzq_m_s16
__builtin_arm_mve_vclzq_m_u8
__builtin_arm_mve_vclzq_s16
__builtin_arm_mve_vclzq_u16
element
__builtin_arm_mve_vclzq_x_s32
__builtin_arm_mve_vclzq_x_s8
Tune debug info to be reproducible.
Resource
__builtin_arm_mve_vcmlaq_m_f32
__builtin_arm_mve_vcmlaq_rot180_f16
__builtin_arm_mve_vcmlaq_rot180_m_f32
element_type
__builtin_arm_mve_vcmlaq_rot270_m_f32
__builtin_arm_mve_vcmlaq_rot90_f16
__builtin_arm_mve_vcmlaq_rot90_m_f16
__builtin_hlsl_create_handle
__builtin_arm_mve_vcmpcsq_m_u16
__builtin_arm_mve_vcmpcsq_m_u32
__builtin_arm_mve_vcmpcsq_n_u32
aarch64_far_address_space
__builtin_arm_mve_vcmpcsq_u32
clang::aarch64_far_address_space
-fno-profile-sample-accurate
aarch64_sve_pcs
__builtin_arm_mve_vcmpeqq_m_n_s32
__builtin_arm_mve_vcmpeqq_m_n_s8
__builtin_arm_mve_vcmpeqq_m_n_u8
aarch64_vector_pcs
__builtin_arm_mve_vcmpeqq_m_u16
__builtin_arm_mve_vcmpeqq_m_u32
__builtin_arm_mve_vcmpeqq_n_f16
amdgpu_flat_work_group_size
__builtin_arm_mve_vcmpeqq_n_u16
__builtin_arm_mve_vcmpeqq_n_u32
__builtin_arm_mve_vcmpeqq_s32
__builtin_arm_mve_vcmpeqq_u8
__builtin_arm_mve_vcmpgeq_f16
Set __fastcall as a default calling convention
amdgpu_kernel
__builtin_arm_mve_vcmpgeq_m_n_s32
__builtin_arm_mve_vcmpgeq_m_n_s8
__builtin_arm_mve_vcmpgeq_m_s8
amdgpu_num_sgpr
__builtin_arm_mve_vcmpgeq_n_s32
__builtin_arm_mve_vcmpgeq_n_s8
__builtin_arm_mve_vcmpgeq_s32
NumSGPR
__builtin_arm_mve_vcmpgtq_m_f32
__builtin_arm_mve_vcmpgtq_m_n_f16
__builtin_arm_mve_vcmpgtq_m_n_s32
clang::amdgpu_num_vgpr
__builtin_arm_mve_vcmpgtq_m_s8
__builtin_arm_mve_vcmpgtq_n_f16
-fno-profile-use
amdgpu_waves_per_eu
__builtin_arm_mve_vcmpgtq_s8
__builtin_arm_mve_vcmphiq_m_n_u16
__builtin_arm_mve_vcmphiq_m_u16
gnu::interrupt
__builtin_arm_mve_vcmphiq_n_u32
__builtin_arm_mve_vcmphiq_n_u8
__builtin_arm_mve_vcmphiq_u32
signal
__builtin_arm_mve_vcmpleq_m_f32
__builtin_arm_mve_vcmpleq_m_n_f16
__builtin_arm_mve_vcmpleq_m_n_s32
abi_tag
__builtin_arm_mve_vcmpleq_m_s8
__builtin_arm_mve_vcmpleq_n_f16
-gsimple-template-names=
Tags...
__builtin_arm_mve_vcmpleq_s8
__builtin_arm_mve_vcmpltq_f16
__builtin_arm_mve_vcmpltq_m_f32
clang::acquire_shared_capability
__builtin_arm_mve_vcmpltq_m_n_s32
__builtin_arm_mve_vcmpltq_m_n_s8
__builtin_arm_mve_vcmpltq_m_s32
acquire_handle
__builtin_arm_mve_vcmpltq_n_s32
__builtin_arm_mve_vcmpltq_n_s8
__builtin_arm_mve_vcmpltq_s8
HandleType
__builtin_arm_mve_vcmpneq_m_f32
address_space
-fno-profile
clang::address_space
__builtin_arm_mve_vcmpneq_m_n_u8
__builtin_arm_mve_vcmpneq_m_s16
__builtin_arm_mve_vcmpneq_m_u16
alias
__builtin_arm_mve_vcmpneq_n_f32
__builtin_arm_mve_vcmpneq_n_s16
__builtin_arm_mve_vcmpneq_n_s8
Aliasee
__builtin_arm_mve_vcmpneq_s32
__builtin_arm_mve_vcmpneq_s8
__builtin_arm_mve_vcmpneq_u8
Alignment
__builtin_arm_mve_vcmulq_m_f32
__builtin_arm_mve_vcmulq_rot180_f16
-gsplit-dwarf=
gnu::aligned
__builtin_arm_mve_vcmulq_rot270_f32
__builtin_arm_mve_vcmulq_rot270_m_f16
__builtin_arm_mve_vcmulq_rot270_x_f32
_Alignas
__builtin_arm_mve_vcmulq_rot90_m_f32
__builtin_arm_mve_vcmulq_rot90_x_f16
__builtin_arm_mve_vcmulq_x_f16
gnu::alloc_align
__builtin_arm_mve_vcreateq_s32
__builtin_arm_mve_vcreateq_s64
__builtin_arm_mve_vcreateq_u32
alloc_size
__builtin_arm_mve_vctp16q_m
__builtin_arm_mve_vctp32q
-fno-pseudo-probe-for-profiling
ElemSizeParam
__builtin_arm_mve_vcvtaq_m_s32_f32
__builtin_arm_mve_vcvtaq_m_u16_f16
__builtin_arm_mve_vcvtaq_s32_f32
always_destroy
__builtin_arm_mve_vcvtaq_x_s32_f32
__builtin_arm_mve_vcvtaq_x_u16_f16
__builtin_arm_mve_vcvtbq_f16_f32
always_inline
__builtin_arm_mve_vcvtmq_m_s16_f16
__builtin_arm_mve_vcvtmq_m_s32_f32
__builtin_arm_mve_vcvtmq_s16_f16
clang::always_inline
__builtin_arm_mve_vcvtmq_x_s16_f16
__builtin_arm_mve_vcvtmq_x_s32_f32
-gsrc-hash=
analyzer_noreturn
__builtin_arm_mve_vcvtnq_s16_f16
__builtin_arm_mve_vcvtnq_s32_f32
__builtin_arm_mve_vcvtnq_x_s16_f16
clang::analyzer_suppress
__builtin_arm_mve_vcvtpq_m_s16_f16
__builtin_arm_mve_vcvtpq_m_s32_f32
__builtin_arm_mve_vcvtpq_m_u32_f32
clang::annotate
__builtin_arm_mve_vcvtpq_x_s16_f16
__builtin_arm_mve_vcvtpq_x_s32_f32
__builtin_arm_mve_vcvtq_f16_s16
clang::annotate_type
-fdepscan-share-parent=
no_caller_saved_registers
-fno-ptrauth-abi-version
gnu::no_caller_saved_registers
__builtin_arm_mve_vcvtq_m_n_s16_f16
__builtin_arm_mve_vcvtq_m_n_s32_f32
__builtin_arm_mve_vcvtq_m_s16_f16
gnu::nocf_check
__builtin_arm_mve_vcvtq_n_f16_s16
__builtin_arm_mve_vcvtq_n_f16_u16
__builtin_arm_mve_vcvtq_n_f32_u32
clang::objc_arc_weak_reference_unavailable
__builtin_arm_mve_vcvtq_s16_f16
__builtin_arm_mve_vcvtq_s32_f32
__builtin_arm_mve_vcvtq_x_f16_s16
clang::pointer_with_type_tag
__builtin_arm_mve_vcvtq_x_n_f16_s16
__builtin_arm_mve_vcvtq_x_n_f16_u16
ArgumentIdx
__builtin_arm_mve_vcvtq_x_s16_f16
__builtin_arm_mve_vcvtq_x_s32_f32
__builtin_arm_mve_vcvttq_f16_f32
clang::__clang_arm_builtin_alias
__builtin_arm_mve_vcvttq_x_f32_f16
__builtin_arm_mve_vddupq_m_n_u16
__builtin_arm_mve_vddupq_m_n_u8
arm_locally_streaming
__builtin_arm_mve_vddupq_n_u32
__builtin_arm_mve_vddupq_n_u8
__builtin_arm_mve_vddupq_wb_u8
clang::__clang_arm_mve_strict_polymorphism
__builtin_arm_mve_vddupq_x_wb_u16
__builtin_arm_mve_vddupq_x_wb_u32
-fno-ptrauth-auth-traps
arm_preserves_za
__builtin_arm_mve_vdupq_m_n_u16
__builtin_arm_mve_vdupq_m_n_u32
__builtin_arm_mve_vdupq_n_f32
arm_streaming
__builtin_arm_mve_vdupq_n_u16
__builtin_arm_mve_vdupq_n_u32
__builtin_arm_mve_vdupq_x_n_f16
arm_sve_vector_bits
__builtin_arm_mve_vdupq_x_n_u16
__builtin_arm_mve_vdupq_x_n_u32
__builtin_arm_mve_vdwdupq_m_n_u32
artificial
__builtin_arm_mve_vdwdupq_m_wb_u8
__builtin_arm_mve_vdwdupq_n_u16
Set stack probe size (default 4096)
clang::assert_capability
__builtin_arm_mve_vdwdupq_x_n_u32
__builtin_arm_mve_vdwdupq_x_n_u8
__builtin_arm_mve_vdwdupq_x_wb_u8
assume_aligned
__builtin_arm_mve_veorq_m_f32
__builtin_arm_mve_veorq_m_s16
__builtin_arm_mve_veorq_m_s8
Offset
__builtin_arm_mve_veorq_s32
__builtin_arm_mve_veorq_s8
__builtin_arm_mve_veorq_u8
clang::assume
__builtin_arm_mve_veorq_x_s32
Assumption
-fno-ptrauth-calls
clang::availability
__builtin_arm_mve_vfmaq_m_f32
__builtin_arm_mve_vfmaq_m_n_f16
__builtin_arm_mve_vfmaq_n_f32
preserve_access_index
__builtin_arm_mve_vfmasq_n_f32
__builtin_arm_mve_vfmsq_f16
__builtin_arm_mve_vfmsq_m_f16
btf_decl_tag
__builtin_arm_mve_vgetq_lane_s32
__builtin_arm_mve_vgetq_lane_s64
__builtin_arm_mve_vgetq_lane_u32
BTFDeclTag
__builtin_arm_mve_vhaddq_m_n_s32
__builtin_arm_mve_vhaddq_m_n_s8
Enable Control Flow Guard with /guard:cf, or only the table with /guard:cf,nochecks. Enable EH Continuation Guard with /guard:ehcont
clang::btf_type_tag
__builtin_arm_mve_vhaddq_m_u16
__builtin_arm_mve_vhaddq_m_u32
__builtin_arm_mve_vhaddq_n_s32
clang::blocks
__builtin_arm_mve_vhaddq_n_u8
__builtin_arm_mve_vhaddq_s16
__builtin_arm_mve_vhaddq_s8
clang::builtin_alias
__builtin_arm_mve_vhaddq_x_n_s32
__builtin_arm_mve_vhaddq_x_n_s8
__builtin_arm_mve_vhaddq_x_n_u8
__cdecl
__builtin_arm_mve_vhaddq_x_u16
__builtin_arm_mve_vhaddq_x_u32
-fno-ptrauth-indirect-gotos
cf_audited_transfer
__builtin_arm_mve_vhcaddq_rot270_s8
__builtin_arm_mve_vhcaddq_rot270_x_s16
__builtin_arm_mve_vhcaddq_rot90_m_s16
cf_consumed
__builtin_arm_mve_vhcaddq_rot90_s32
__builtin_arm_mve_vhcaddq_rot90_s8
__builtin_arm_mve_vhcaddq_rot90_x_s32
clang::guard
__builtin_arm_mve_vhsubq_m_n_u16
__builtin_arm_mve_vhsubq_m_n_u32
__builtin_arm_mve_vhsubq_m_s32
cfi_canonical_jump_table
__builtin_arm_mve_vhsubq_m_u8
__builtin_arm_mve_vhsubq_n_s16
Set __vectorcall as a default calling convention
cf_returns_not_retained
__builtin_arm_mve_vhsubq_s32
__builtin_arm_mve_vhsubq_s8
__builtin_arm_mve_vhsubq_u8
cf_returns_retained
__builtin_arm_mve_vhsubq_x_n_u16
__builtin_arm_mve_vhsubq_x_n_u32
__builtin_arm_mve_vhsubq_x_s16
cf_unknown_transfer
__builtin_arm_mve_vhsubq_x_u8
__builtin_arm_mve_vidupq_m_n_u16
__builtin_arm_mve_vidupq_m_wb_u16
clang::cpu_dispatch
__builtin_arm_mve_vidupq_n_u16
Cpus...
-fno-ptrauth-kernel-abi-version
clang::cpu_specific
__builtin_arm_mve_vidupq_x_wb_u16
__builtin_arm_mve_vidupq_x_wb_u32
__builtin_arm_mve_viwdupq_m_n_u32
__constant__
__builtin_arm_mve_viwdupq_m_wb_u8
__builtin_arm_mve_viwdupq_n_u16
__builtin_arm_mve_viwdupq_n_u8
__device__
__builtin_arm_mve_viwdupq_x_n_u32
__builtin_arm_mve_viwdupq_x_n_u8
__builtin_arm_mve_viwdupq_x_wb_u8
__device_builtin_surface_type__
__builtin_arm_mve_vld1q_s32
__builtin_arm_mve_vld1q_s8
Put each data item in its own section
__device_builtin_texture_type__
__builtin_arm_mve_vld1q_z_s32
__builtin_arm_mve_vld1q_z_s8
__builtin_arm_mve_vld1q_z_u8
host
__builtin_arm_mve_vld2q_s32
__builtin_arm_mve_vld2q_s8
__builtin_arm_mve_vld2q_u32
launch_bounds
__builtin_arm_mve_vld4q_s32
__builtin_arm_mve_vld4q_s8
__builtin_arm_mve_vld4q_u8
MaxThreads
__builtin_arm_mve_vldrbq_gather_offset_u16
__builtin_arm_mve_vldrbq_gather_offset_u32
-fno-ptrauth-objc-class-ro
__shared__
__builtin_arm_mve_vldrbq_gather_offset_z_u8
__builtin_arm_mve_vldrbq_s16
__builtin_arm_mve_vldrbq_u16
_Noreturn
__builtin_arm_mve_vldrbq_z_s32
__builtin_arm_mve_vldrbq_z_s8
__builtin_arm_mve_vldrbq_z_u32
CallableStates...
__builtin_arm_mve_vldrdq_gather_base_wb_u64
__builtin_arm_mve_vldrdq_gather_base_wb_z_s64
__builtin_arm_mve_vldrdq_gather_base_z_u64
Encoding...
__builtin_arm_mve_vldrdq_gather_offset_z_u64
__builtin_arm_mve_vldrdq_gather_shifted_offset_s64
clang::called_once
__builtin_arm_mve_vldrhq_gather_offset_s32
__builtin_arm_mve_vldrhq_gather_offset_u16
__builtin_arm_mve_vldrhq_gather_offset_z_s16
clang::capability
__builtin_arm_mve_vldrhq_gather_shifted_offset_f16
__builtin_arm_mve_vldrhq_gather_shifted_offset_s16
__builtin_arm_mve_vldrhq_gather_shifted_offset_u16
clang::shared_capability
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_u16
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_u32
__builtin_arm_mve_vldrhq_u16
carries_dependency
__builtin_arm_mve_vldrhq_z_s32
cleanup
-fno-ptrauth-objc-isa
gnu::cleanup
__builtin_arm_mve_vldrwq_gather_base_wb_s32
__builtin_arm_mve_vldrwq_gather_base_wb_u32
__builtin_arm_mve_vldrwq_gather_base_wb_z_u32
cmse_nonsecure_call
__builtin_arm_mve_vldrwq_gather_offset_f32
__builtin_arm_mve_vldrwq_gather_offset_s32
__builtin_arm_mve_vldrwq_gather_offset_z_f32
code_seg
__builtin_arm_mve_vldrwq_gather_shifted_offset_u32
__builtin_arm_mve_vldrwq_gather_shifted_offset_z_f32
__builtin_arm_mve_vldrwq_s32
gnu::cold
__builtin_arm_mve_vldrwq_z_u32
__builtin_arm_mve_vmaxaq_m_s16
gnu::const
__builtin_arm_mve_vmaxavq_p_s32
__builtin_arm_mve_vmaxavq_p_s8
__builtin_arm_mve_vmaxavq_s8
gnu::__const
__builtin_arm_mve_vmaxnmaq_m_f32
__builtin_arm_mve_vmaxnmavq_f16
__builtin_arm_mve_vmaxnmavq_p_f16
require_constant_initialization
__builtin_arm_mve_vmaxnmq_m_f32
__builtin_arm_mve_vmaxnmq_x_f16
__builtin_arm_mve_vmaxnmvq_f32
gnu::constructor
__builtin_arm_mve_vmaxq_m_s32
__builtin_arm_mve_vmaxq_m_s8
-fno-ptrauth-soft
clang::consumable
__builtin_arm_mve_vmaxq_u16
__builtin_arm_mve_vmaxq_u32
__builtin_arm_mve_vmaxq_x_s32
consumable_auto_cast_state
__builtin_arm_mve_vmaxq_x_u8
__builtin_arm_mve_vmaxvq_p_s16
__builtin_arm_mve_vmaxvq_p_s8
consumable_set_state_on_read
__builtin_arm_mve_vmaxvq_s32
__builtin_arm_mve_vmaxvq_s8
__builtin_arm_mve_vmaxvq_u8
convergent
__builtin_arm_mve_vminaq_s16
__builtin_arm_mve_vminaq_s32
dllexport
__builtin_arm_mve_vminavq_s8
__builtin_arm_mve_vminnmaq_f16
__builtin_arm_mve_vminnmaq_m_f32
dllimport
__builtin_arm_mve_vminnmavq_p_f32
__builtin_arm_mve_vminnmq_f16
__builtin_arm_mve_vminnmq_m_f16
IsDeref
__builtin_arm_mve_vminnmvq_f32
__builtin_arm_mve_vminnmvq_p_f16
__builtin_arm_mve_vminq_m_s32
DependerLevels...
-fdepscan-share-parent
gnu::deprecated
-fno-ptrauth-vtable-pointer-type-discrimination
Message
__builtin_arm_mve_vminq_x_s32
__builtin_arm_mve_vminq_x_s8
__builtin_arm_mve_vminq_x_u8
destructor
__builtin_arm_mve_vminvq_p_u16
__builtin_arm_mve_vminvq_p_u32
__builtin_arm_mve_vminvq_s16
diagnose_as_builtin
__builtin_arm_mve_vminvq_u8
__builtin_arm_mve_vmladavaq_p_s16
__builtin_arm_mve_vmladavaq_p_u16
Function
__builtin_arm_mve_vmladavaq_s32
__builtin_arm_mve_vmladavaq_s8
Put objects of at most <size> bytes into small data section (MIPS / Hexagon)
Cond
__builtin_arm_mve_vmladavaxq_s16
__builtin_arm_mve_vmladavaxq_s32
__builtin_arm_mve_vmladavq_p_s32
disable_sanitizer_instrumentation
__builtin_arm_mve_vmladavq_p_u8
__builtin_arm_mve_vmladavq_s16
__builtin_arm_mve_vmladavq_s8
disable_tail_calls
__builtin_arm_mve_vmladavxq_p_s32
__builtin_arm_mve_vmladavxq_p_s8
__builtin_arm_mve_vmladavxq_s8
empty_bases
__builtin_arm_mve_vmlaldavaq_p_u32
__builtin_arm_mve_vmlaldavaq_s16
-fno-real-4-real-10
clang::enforce_tcb
__builtin_arm_mve_vmlaldavaxq_s32
__builtin_arm_mve_vmlaldavq_p_s16
__builtin_arm_mve_vmlaldavq_p_u32
enforce_tcb_leaf
__builtin_arm_mve_vmlaldavq_u32
__builtin_arm_mve_vmlaldavxq_p_s16
__builtin_arm_mve_vmlaldavxq_s16
clang::enum_extensibility
__builtin_arm_mve_vmlaq_m_n_u16
__builtin_arm_mve_vmlaq_m_n_u32
__builtin_arm_mve_vmlaq_n_s32
gnu::error
__builtin_arm_mve_vmlaq_n_u8
__builtin_arm_mve_vmlasq_m_n_s16
-header-include-file
UserDiagnostic
__builtin_arm_mve_vmlasq_n_s32
__builtin_arm_mve_vmlasq_n_s8
__builtin_arm_mve_vmlasq_n_u8
clang::exclude_from_explicit_instantiation
__builtin_arm_mve_vmlsdavaq_s16
__builtin_arm_mve_vmlsdavaq_s32
__builtin_arm_mve_vmlsdavaxq_p_s16
ext_vector_type
__builtin_arm_mve_vmlsdavaxq_s8
__builtin_arm_mve_vmlsdavq_p_s16
__builtin_arm_mve_vmlsdavq_s16
external_source_symbol
__builtin_arm_mve_vmlsdavxq_p_s32
clang::external_source_symbol
-fno-real-4-real-8
definedIn
__builtin_arm_mve_vmlsldavaq_s32
__builtin_arm_mve_vmlsldavaxq_p_s16
__builtin_arm_mve_vmlsldavaxq_s32
clang::fallthrough
__builtin_arm_mve_vmlsldavq_s32
__builtin_arm_mve_vmlsldavxq_p_s16
__builtin_arm_mve_vmlsldavxq_s16
gnu::fastcall
__builtin_arm_mve_vmovlbq_m_u8
__builtin_arm_mve_vmovlbq_s16
__builtin_arm_mve_vmovlbq_u8
_fastcall
__builtin_arm_mve_vmovlbq_x_u8
__builtin_arm_mve_vmovltq_m_s16
none,only-direct-system
clang::flag_enum
__builtin_arm_mve_vmovltq_u8
__builtin_arm_mve_vmovltq_x_s16
__builtin_arm_mve_vmovltq_x_u8
gnu::flatten
__builtin_arm_mve_vmovnbq_m_u32
__builtin_arm_mve_vmovnbq_s16
__builtin_arm_mve_vmovnbq_u16
FormatIdx
__builtin_arm_mve_vmovntq_m_u32
__builtin_arm_mve_vmovntq_s16
__builtin_arm_mve_vmovntq_u32
format_arg
__builtin_arm_mve_vmulhq_m_u16
__builtin_arm_mve_vmulhq_m_u32
-fno-real-8-real-16
gnu::function_return
__builtin_arm_mve_vmulhq_u8
__builtin_arm_mve_vmulhq_x_s16
__builtin_arm_mve_vmulhq_x_u16
gnu_inline
__builtin_arm_mve_vmullbq_int_m_s32
__builtin_arm_mve_vmullbq_int_m_s8
__builtin_arm_mve_vmullbq_int_m_u32
__builtin_arm_mve_vmullbq_int_u16
__builtin_arm_mve_vmullbq_int_u32
__builtin_arm_mve_vmullbq_int_x_s32
clang::guarded_var
__builtin_arm_mve_vmullbq_int_x_u8
__builtin_arm_mve_vmullbq_poly_m_p16
/headerName:
__managed__
__builtin_arm_mve_vmulltq_int_m_s32
__builtin_arm_mve_vmulltq_int_m_s8
__builtin_arm_mve_vmulltq_int_m_u8
__builtin_arm_mve_vmulltq_int_u16
__builtin_arm_mve_vmulltq_int_u32
__builtin_arm_mve_vmulltq_int_x_s16
__builtin_arm_mve_vmulltq_int_x_u8
__builtin_arm_mve_vmulltq_poly_m_p16
__builtin_arm_mve_vmulltq_poly_p8
ResourceShape
__builtin_arm_mve_vmulq_f16
Slot
-fno-realloc-lhs
Space
__builtin_arm_mve_vmulq_m_n_u16
__builtin_arm_mve_vmulq_m_n_u32
__builtin_arm_mve_vmulq_m_s32
__builtin_arm_mve_vmulq_m_u8
__builtin_arm_mve_vmulq_n_f16
__builtin_arm_mve_vmulq_n_s16
ibaction
__builtin_arm_mve_vmulq_n_u8
__builtin_arm_mve_vmulq_s16
__builtin_arm_mve_vmulq_u16
iboutlet
__builtin_arm_mve_vmulq_x_f32
__builtin_arm_mve_vmulq_x_n_f16
/headerUnit
clang::iboutletcollection
__builtin_arm_mve_vmulq_x_n_u8
__builtin_arm_mve_vmulq_x_s16
__builtin_arm_mve_vmulq_x_u16
ifunc
__builtin_arm_mve_vmvnq_m_n_s32
__builtin_arm_mve_vmvnq_m_n_u16
__builtin_arm_mve_vmvnq_m_s16
Resolver
__builtin_arm_mve_vmvnq_m_u8
__builtin_arm_mve_vmvnq_n_s16
__builtin_arm_mve_vmvnq_n_u32
gnu::init_priority
__builtin_arm_mve_vmvnq_u16
__builtin_arm_mve_vmvnq_u32
-fno-record-command-line
clang::intel_ocl_bicc
__builtin_arm_mve_vmvnq_x_s32
__builtin_arm_mve_vmvnq_x_s8
__builtin_arm_mve_vmvnq_x_u8
clang::internal_linkage
__builtin_arm_mve_vnegq_m_f32
__builtin_arm_mve_vnegq_m_s16
__builtin_arm_mve_vnegq_m_s8
clang::lto_visibility_public
__builtin_arm_mve_vnegq_x_f32
__builtin_arm_mve_vnegq_x_s16
__builtin_arm_mve_vornq_f16
leaf
__builtin_arm_mve_vornq_m_s16
__builtin_arm_mve_vornq_m_s32
-help
lifetimebound
__builtin_arm_mve_vornq_s8
__builtin_arm_mve_vornq_u16
__builtin_arm_mve_vornq_x_f16
likely
__builtin_arm_mve_vornq_x_s8
__builtin_arm_mve_vornq_x_u16
__builtin_arm_mve_vornq_x_u8
loader_uninitialized
__builtin_arm_mve_vorrq_m_n_s16
__builtin_arm_mve_vorrq_m_n_s32
__builtin_arm_mve_vorrq_m_s16
lockable
__builtin_arm_mve_vorrq_m_u32
clang::loop
-fno-recovery-ast-type
Option
__builtin_arm_mve_vorrq_s8
__builtin_arm_mve_vorrq_u16
__builtin_arm_mve_vorrq_x_f16
Value
__builtin_arm_mve_vorrq_x_s8
__builtin_arm_mve_vorrq_x_u16
__builtin_arm_mve_vorrq_x_u8
clang::mig_server_routine
__builtin_arm_mve_vpselq_s32
__builtin_arm_mve_vpselq_s64
__builtin_arm_mve_vpselq_u32
gnu::ms_abi
__builtin_arm_mve_vqabsq_m_s32
__builtin_arm_mve_vqabsq_m_s8
HIP device library
__single_inheritance
__builtin_arm_mve_vqaddq_m_n_u16
__builtin_arm_mve_vqaddq_m_n_u32
__builtin_arm_mve_vqaddq_m_s32
__virtual_inheritance
__builtin_arm_mve_vqaddq_m_u8
__builtin_arm_mve_vqaddq_n_s16
__builtin_arm_mve_vqaddq_n_s8
novtable
__builtin_arm_mve_vqaddq_s32
__builtin_arm_mve_vqaddq_s8
__builtin_arm_mve_vqaddq_u8
matrix_type
__builtin_arm_mve_vqdmladhq_s16
__builtin_arm_mve_vqdmladhq_s32
-fno-recursive
NumRows
__builtin_arm_mve_vqdmladhxq_s8
__builtin_arm_mve_vqdmlahq_m_n_s16
__builtin_arm_mve_vqdmlahq_n_s16
may_alias
__builtin_arm_mve_vqdmlashq_m_n_s32
__builtin_arm_mve_vqdmlashq_m_n_s8
__builtin_arm_mve_vqdmlashq_n_s32
maybe_undef
__builtin_arm_mve_vqdmlsdhq_s16
__builtin_arm_mve_vqdmlsdhq_s32
__builtin_arm_mve_vqdmlsdhxq_m_s32
gnu::micromips
__builtin_arm_mve_vqdmlsdhxq_s8
__builtin_arm_mve_vqdmulhq_m_n_s16
HIP runtime installation path, used for finding HIP version and adding HIP include path.
clang::minsize
__builtin_arm_mve_vqdmulhq_n_s32
__builtin_arm_mve_vqdmulhq_n_s8
__builtin_arm_mve_vqdmulhq_s8
clang::min_vector_width
__builtin_arm_mve_vqdmullbq_m_s32
__builtin_arm_mve_vqdmullbq_n_s16
__builtin_arm_mve_vqdmullbq_s16
gnu::mips16
__builtin_arm_mve_vqdmulltq_n_s16
__builtin_arm_mve_vqdmulltq_s32
gnu::long_call
Emit extra debug info to make sample profile more accurate
Dump the cooked character stream in -E mode
gnu::far
          => 
Enable support for generating executables (experimental)
pwr3
gnu::short_call
 macro: 
 string: 
NumColumns
__builtin_arm_mve_vqaddq_u32
gnu::near
<default>
--hip-path=
Macro contribution of the unit not found
Mode
opcode_operands_table is not supported
clang::maybe_undef
name lookup table at offset 0x%llx does not have a complete header: %s
clang::musttail
name lookup table at offset 0x%llx has a terminator at offset 0x%llx before the expected end at 0x%llx
7450
Offset     Linkage  Kind     Name
clang::ns_consumed
Offset     Name
min_vector_width
clang::ns_consumes_self
__builtin_arm_mve_vqdmlsdhxq_m_s16
VectorWidth
invalid range list offset 0x%llx
%08llx %08llx %08llx
Don't use atexit or __cxa_atexit to register global destructors
--hip-version=
ns_returns_not_retained
__builtin_arm_mve_vqdmulltq_m_s16
e500
long_call
ns_returns_retained
Unsupported %s encoding: %s
__builtin_arm_mve_vqmovunbq_s16
near
 [%u] %c
Abbreviation code not found in 'debug_abbrev' class for code: 
--hipspv-pass-plugin=
 (0x%8.8llx)
neon_polyvector_type
 [{0}]
gnu::mode
e500mc
neon_vector_type
decoding address ranges: %s
-fno-register-global-dtors-with-atexit
 0x0
noalias
 0x%llx
ns_consumed
__builtin_arm_mve_vqrdmladhq_s32
clang::no_builtin
 %s%+lld
power3
ns_consumes_self
 %02x
-hlsl-entry
gnu::nocommon
-fno-relaxed-template-template-args
nodebug
indexed (%8.8x) address = 
clang::ns_returns_autoreleased
indexed (%8.8x) + 0x%x address = 
noderef
0x%*.*llx
__builtin_arm_mve_vqrdmulhq_n_s8
0x%08x
no_destroy
__builtin_arm_mve_vqrdmlsdhxq_m_s8
clang::ns_returns_retained
<invalid dwarf unit>
noduplicate
pwr5
__builtin_arm_mve_vqrshlq_s8
<alt 0x%llx>
clang::neon_polyvector_type
noescape
-fno-regs-graph
DW_FORM_indirect
__noinline__
 => {
clang::neon_vector_type
pwr6
gnu::noinline
API limitation - string extraction not available without a DWARFUnit
/homeparams
, but the referenced string
no_instrument_function
__builtin_arm_mve_vqrshrntq_n_s16
BuiltinNames...
-fno-reorder-blocks
nomerge
__builtin_arm_mve_vqshlq_m_n_s16
pwr6x
    %d: Offset = 0x%llx, Length = 0x%llx
nomicromips
    Low/High address = [0x%llx, 0x%llx) (Size: 0x%llx), CU id = %d
-flat_namespace
__builtin_arm_mve_vqshlq_m_s16
nomips16
  CU list offset = 0x%x, has %lld entries:
pwr8
<error parsing>
no_profile_instrument_function
  Version = 
__builtin_arm_mve_vqshlq_r_u32
%s table at offset 0x%llx has too small length (0x%llx) to contain a complete header
no_randomize_layout
section is not large enough to contain a %s table of length 0x%llx at offset 0x%llx
__builtin_arm_mve_vqshlq_s8
clang::noescape
offsets: [
0x%0*llx
powerpc
clang::no_destroy
clang::no_sanitize
, type_signature = 
noinline
name = '
no_address_safety_analysis
__builtin_arm_mve_vqshrunbq_n_s16
, name = '
-fno-reroll-loops
no_sanitize_address
ppc64
__builtin_arm_mve_vqsubq_m_n_s8
version = %u, units = %u, slots = %u
no_sanitize_thread
LOCLISTS
powerpc64le
clang::nomerge
no_sanitize_memory
, type_offset = 
<type unit can't be parsed!>
RNGLISTS
no_speculative_load_hardening
 Unknown: %-15u
-mpower7
gnu::nomips16
no_split_stack
__builtin_arm_mve_vqshruntq_n_s16
 ------------------------
gnu::no_profile_instrument_function
DW_FORM_strx used without a valid string offsets table
DW_FORM_strx uses index 
-mpower9
DWARF unit at 0x%8.8llx cannot be parsed:
safebuffers
DWARF type unit from offset 0x%8.8llx incl. to offset 0x%8.8llx excl. has its relocated type_offset 0x%8.8llx pointing past the unit end
no_sanitize
insufficient space for 64 bit header prefix
clang::no_thread_safety_analysis
-mpower10
Stop looking for the command named by -fdepscan-share if a process with the name of the provided argument is found first. Also blocks -fdepscan-share=parent if the parent has this name. E.g., -fdepscan -fdepscan-share=ninja -fdepscan-share-stop=cmake looks for 'ninja' and 'cmake' in the process tree; if 'ninja' is found first, state is shared based on ninja's PID; if 'cmake' is found first, state is not shared.
-fno-rewrite-includes
gnu::nothrow
-ffile-compilation-dir=
Enable implicit vector bit-casts
invalid length
nouwtable
The unit type encoding is not valid.
gnu::no_sanitize_address
+reserve-x8
gnu::nonnull
32 bit contribution referenced from a 64 bit unit
-iapinotes-path
 has DW_CHILDREN_yes but DIE has no children: 
clang::not_tail_called
__builtin_arm_mve_vreinterpretq_u16_s64
clang::no_sanitize_memory
Compilation unit type (
clang::os_consumed
__builtin_arm_mve_vreinterpretq_u32_u64
+reserve-x17
clang::no_speculative_load_hardening
) and root DIE (
Call site entry not nested within a valid subprogram:
-fno-rewrite-imports
gnu::no_split_stack
clang::os_returns_not_retained
Verifying .debug_abbrev...
__builtin_arm_mve_vrev16q_m_s8
clang::no_stack_protector
Section is empty.
os_returns_retained_on_non_zero
__builtin_arm_mve_vreinterpretq_u8_s8
clang::os_returns_retained_on_non_zero
no_thread_safety_analysis
no_unique_address
DIE has overlapping ranges in DW_AT_ranges attribute: 
DIEs have overlapping address ranges:
+save-restore
__builtin_arm_mve_vrev32q_m_s16
clang::objc_boxable
{0:x8}
clang::nouwtable
 bounds: 
BridgedType
DIE has invalid DW_AT_stmt_list encoding:
__builtin_arm_mve_vrev64q_x_s32
__builtin_arm_mve_vrev64q_x_u8
clang::objc_bridge_related
 has 
os_consumed
DIE has 
ClassMethod
ilp32
__builtin_arm_mve_vrhaddq_u8
os_consumes_this
 (valid values are [
+reserve-x31
__builtin_arm_mve_vrmlaldavhaq_p_u32
os_returns_not_retained
 (the file table in the prologue is empty)
 that references a file with index 
lp64d
clang::objc_designated_initializer
 CU offset 
ilp32e
 is invalid (must be less than CU size of 
clang::objc_direct
] was not able to be parsed for CU:
rv32e
os_returns_retained_on_zero
clang::objc_direct_members
__builtin_arm_mve_vrmlaldavhq_u32
__builtin_arm_mve_vrmulhq_u16
clang::objc_bridge
].prologue.file_names[
__builtin_arm_mve_vrndmq_f32
__builtin_arm_mve_vrndmq_x_f32
clang::objc_protocol_requires_explicit_implementation
DWARF type unit at offset 0x%8.8llx has its relocated type_offset 0x%8.8llx pointing inside the header
rv64imac
Unsupported form: failed to read HashData.
clang::objc_bridge_mutable
clang::objc_externally_retained
__builtin_arm_mve_vrndpq_x_f32
%s Bucket[%d] Hash[%d] = 0x%08x Str[%u] = 0x%08llx DIE[%d] = 0x%08llx is not a valid DIE offset for "%s".
Kind
 in accelerator table does not match Tag 
__builtin_arm_mve_vrndq_m_f32
Tag 
clang::objc_independent_class
Name Index @ {0:x} does not index any CU
__kindof
-Av9
clang::objc_method_family
CU @ {0:x} not covered by any Name Index
-Av9b
Name Index @ {0:x}: Bucket {1} is not empty but points to a mismatched hash value {2:x} (belonging to bucket {3}).
NSObject
Name Index @ {0:x}: String ({1}) at index {2} hashes to {3:x}, but the Name Index hash is {4:x}
objc_direct
Name Index @ {0:x} references a CU @ {1:x}, but this CU is already indexed by Name Index @ {2:x}
objc_nonlazy_class
__builtin_arm_mve_vrhaddq_x_u16
objc_direct_members
reference
NameIndex @ {0:x}: Abbreviation {1:x} references an unknown tag: {2}.
Include macros from file before parsing
__builtin_arm_mve_vrshrnbq_n_s32
clang::objc_ownership
Name Index @ {0:x} references a non-existing CU @ {1:x}
os_returns_retained
objc_protocol_requires_explicit_implementation
clang::objc_precise_lifetime
-Asparclite
__builtin_arm_mve_vrshrq_n_u16
clang::objc_gc
DW_SECT_ABBREV
DW_SECT_LOCLISTS
/imsvc
DW_SECT_LINE
clang::objc_requires_super
DW_SECT_RNGLISTS
objc_independent_class
-fno-rtti
clang::objc_returns_inner_pointer
__builtin_arm_mve_vrndxq_x_f32
-Av8plusb
Name Index @ {0:x}: Name {1} ({2}): {3}
clang::objc_root_class
corrupted compressed section header
Family
llvm.object
clang::objc_runtime_name
The file was not recognized as a valid object file
-Aleon
clang::NSObject
No object file for requested architecture
String table must end with a null terminator
-imultilib
__builtin_arm_mve_vshllbq_n_s8
objc_subclassing_restricted
Section has been stripped from the object file
clang::objc_non_runtime_protocol
's cputype does not match object file's mach header
objc_suppress_direct
__builtin_arm_mve_vshlltq_n_s8
objc_precise_lifetime
 cmdsize not a multiple of 8
 cmdsize not a multiple of 4
__builtin_arm_mve_vshlltq_x_n_s8
split info data
__write_only
LC_DYLIB_CODE_SIGN_DRS
write_only
-fno-rwpi
objc_returns_inner_pointer
__read_write
-flogical-abbreviations
code signature data
__constant
export trie
objc_root_class
sandybridge
clang::opencl_constant
__builtin_arm_mve_vshlq_m_u8
--include-directory=
more than one LC_UUID command
opencl_generic
__builtin_arm_mve_vshlq_u16
MetadataName
LC_LOAD_DYLIB
__global
__builtin_arm_mve_vshlq_x_u16
haswell
clang::objc_runtime_visible
LC_LOAD_WEAK_DYLIB
LC_ID_DYLINKER
Disable generation of rtti information
__builtin_arm_mve_vshrntq_m_n_s32
clang::objc_subclassing_restricted
clang::opencl_global_device
LC_VERSION_MIN_MACOSX
clang::opencl_global_host
LC_MAIN command 
AVX512
-fno-sanitize-address-globals-dead-stripping
SubGroupSize
__builtin_arm_mve_vshrq_x_n_s32
__builtin_arm_mve_vshrq_x_n_u8
read_write
LC_ENCRYPTION_INFO
sub_umbrella_command
__builtin_arm_mve_vsliq_n_u8
__builtin_arm_mve_vsriq_m_n_u16
read_only
clang::opencl_local
pentium3
sub_library
opencl_constant
__private
__builtin_arm_mve_vst1q_p_f32
sub_client_command
clang::opencl_private
SSE2
__builtin_arm_mve_vst1q_p_u16
client
UnrollHint
more than one LC_ROUTINES_64 and or LC_ROUTINES command
pentium4
opencl_global
clang::optnone
LC_THREAD
__builtin_arm_mve_vst2q_u8
opencl_global_device
 is obsolete and not supported
MH_SIM_SUPPORT files only support LC_BUILD_VERSION and LC_VERSION_MIN_MACOSX load commands
gsl::Owner
__builtin_arm_mve_vst2q_s32
DerefType
ilocalsym plus nlocalsym in LC_DYSYMTAB load command extends past the end of the symbol table
nehalem
ilocalsym in LC_DYSYMTAB load command extends past the end of the symbol table
opencl_global_host
clang::ownership_returns
core2
bad library ordinal: 
Module
__swift_ast
yonah
nosvm
bad string index: 
GENERIC_RELOC_TLV
__builtin_arm_mve_vstrdq_scatter_offset_u64
__builtin_arm_mve_vstrdq_scatter_shifted_offset_u64
pascal
contains LC_DYSYMTAB load command without a LC_SYMTAB load command
x86-64
X86_64_RELOC_GOT_LOAD
opencl_private
__pascal
__builtin_arm_mve_vstrhq_scatter_offset_p_s32
X86_64_RELOC_SIGNED_1
pass_object_size
X86_64_RELOC_SIGNED_4
__builtin_arm_mve_vstrhq_scatter_offset_s32
X86_64_RELOC_SIGNED_2
pass_dynamic_object_size
-rdrnd
overloadable
-fno-sanitize-address-poison-custom-array-cookie
patchable_function_entry
__builtin_arm_mve_vstrhq_scatter_shifted_offset_u32
-pclmul
ARM_RELOC_PB_LA_PTR
Count
ARM_RELOC_HALF
Controls the backend parallelism of -flto=thin (default of 0 means the number of threads will be derived from the number of CPUs detected)
__builtin_arm_mve_vstrwq_scatter_base_s32
ARM64_RELOC_SUBTRACTOR
-fsgsbase
ARM_RELOC_LOCAL_SECTDIFF
clang::ownership_holds
__ptrauth
--include=
ARM64_RELOC_GOT_LOAD_PAGEOFF12
ARM64_RELOC_POINTER_TO_GOT
__builtin_arm_mve_vstrwq_scatter_shifted_offset_p_s32
PPC_RELOC_LO16
ExtraDiscriminator
+sse4.2
__builtin_arm_mve_vsubq_n_f32
PPC_RELOC_HA16
ptrauth_struct
PPC_RELOC_HA16_SECTDIFF
__builtin_arm_mve_vsubq_u8
PPC_RELOC_LO14_SECTDIFF
Discriminator
__builtin_arm_mve_vsubq_s32
clang::preferred_name
-fno-sanitize-address-use-after-scope
TypedefType
-flto-unit
+lvi-load-hardening
gnu::patchable_function_entry
Mach-O 32-bit i386
Mach-O 32-bit unknown
__builtin_arm_mve_vsubq_x_u8
__builtin_arm_mve_vuninitializedq_polymorphic_f32
clang::pass_dynamic_object_size
clang::preserve_most
+seses
i386-apple-darwin
gnu::pcs
clang::pt_guarded_var
__builtin_arm_mve_vuninitializedq_s8
armv4t
__ptr64
-x87
__builtin_arm_mve_vuninitializedq_u8
armv4t-apple-darwin
gnu::pure
xscale-apple-darwin
-mmx
AddressDiscriminated
gnu::randomize_layout
__builtin_arm_mve_vadcq_m
__builtin_arm_mve_vaddlvq_p
clang::ptrauth_struct
cortex-m0
cortex-m3
armv7m
__builtin_arm_mve_vbicq
__regcall
penryn
-a64
arm64-apple-darwin
preserve_all
gnu::regparm
-index-ignore-system-symbols
export info size 
reinitializes
export info size: 0x
__builtin_arm_mve_vcmpcsq
 in export trie data at node: 0x
clang::release_capability
unsupported exported symbol kind: 
__ptr32
clang::release_generic_capability
__builtin_arm_mve_vcaddq_rot90_x
ARM_RELOC_SECTDIFF
pure
import name of re-export in export trie data at node: 0x
 starts past end of trie data
-bM:SRE
Disable use-after-scope detection in AddressSanitizer
reqd_work_group_size
inconsistent export info size: 0x
randomize_layout
-bnoentry
YDim
-fdebug-measure-parse-tree
ZDim
resolver of stub and resolver 
clang::requires_capability
-bdbg:namedsects:ss
__builtin_arm_mve_vddupq_u8
NumParams
loop in childern in export trie data at node: 0x
for REBASE_OPCODE_DO_REBASE_IMM_TIMES 
-index-store-path
__builtin_arm_mve_vhaddq_x
restrict
for REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB 
-b64
__builtin_arm_mve_vcvtq_x_n
clang::reinitializes
gnu::malloc
Disable ODR indicator globals
BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB not allowed in weak bind table for opcode at: 0x
clang::return_typestate
-bpT:0x100000000
__builtin_arm_mve_vidupq_x_u8
for BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB 
gnu::returns_nonnull
for BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM symbol name extends past opcodes for opcode at: 0x
-bpD:0x110000000
crti.o
gnu::returns_twice
 for child #
child node offset 
for BIND_OPCODE_DO_BIND 
sycl_kernel
for BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB missing preceding BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM for opcode at: 0x
Use public LTO visibility for classes in std and stdext namespaces
-fno-sanitize-cfi-canonical-jump-tables
sycl_special_class
edge sub-string in export trie data at node: 0x
/llvm-nm
for BIND_OPCODE_ADD_ADDR_ULEB (after adding ULEB) 
scoped_lockable
for BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED 
<path>
clang::exclusive_locks_required
for BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB missing preceding BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM for opcode at: 0x
for BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB 
__builtin_arm_mve_vminnmq
for BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB missing preceding BIND_OPCODE_SET_DYLIB_ORDINAL_* for opcode at: 0x
allocate
for BIND_SUBOPCODE_THREADED_APPLY 
for BIND_SUBOPCODE_THREADED_APPLY for opcode at: 0x
gnu::retain
gnu::selectany
__builtin_arm_mve_vmaxnmavq
enforce_read_only_placement
bad bind info (for BIND_SUBOPCODE_THREADED_APPLY for opcode at: 0x
gnu::sentinel
__builtin_arm_mve_vmladavaxq_p
returns_twice
 at address: 0x
NullPos
 is past end of segment)
-bE:
__sptr
 offset to next pointer in the chain after one at address: 0x
clang::sycl_kernel
__builtin_arm_mve_vmlsdavaxq_p
-fno-sanitize-cfi-cross-dso
clang::sycl_special_class
clang::speculative_load_hardening
__builtin_arm_mve_vmovlbq_x
bad chained fixups: image starts end 
clang::standalone_debug
 bad library ordinal: 
clang::scoped_lockable
ppc_wrappers
__stdcall
-flto=auto
__builtin_arm_mve_vmullbq_poly_x
 chain_start index 
strict_gs_check
__builtin_arm_mve_vmullbq_int
sentinel
 extends past end of file
clang::swift_async
__builtin_arm_mve_vornq
opt/IBM/openxlCSDK
Sentinel
pointer format 
-install_name
__builtin_arm_mve_vqdmladhq_m
swift_async_context
Unrecognized MachO magic number
-D__LIBC_NO_CPP_MATH_OVERLOADS__
Resources
clang::swift_async_error
Use separate accesses for consecutive bitfield runs with legal widths and alignments.
DWARF
clang::set_typestate
HandlerParamIdx
%s: no objects found in dSYM bundle
linking libstdc++ unimplemented on AIX
__swift5_fieldmd
__swift5_reflstr
__swift5_proto
_stdcall
truncated or malformed object (
swift_bridge
 with size less than 8 bytes
gcrt0_64.o
gsl::suppress
swift_bridged_typedef
load command 0 extends past the end all load commands in the file
Disable control flow integrity (CFI) checks for cross-DSO calls.
mcrt0_64.o
clang::swiftcall
struct nlist
Add directory to the internal system include search path with implicit extern "C" semantics; these are assumed to not be user-provided and are used to model system and standard headers' paths.
symbol table
clang::swift_context
stroff field of LC_SYMTAB command 
clang::swift_async_context
__builtin_arm_mve_vqshlq_n
clang::swift_error_result
 with a size of 
crt0_64.o
Convention
 at offset 
-flto=jobserver
swift_name
func,bb,edge,indirect-calls,trace-bb,trace-cmp,trace-div,trace-gep,8bit-counters,trace-pc,trace-pc-guard,no-prune,inline-8bit-counters,inline-bool-flag
swift_async_name
NewtypeKind
__builtin_arm_mve_vrev32q
tocoff field plus ntoc field times sizeof(struct dylib_table_of_contents) of LC_DYSYMTAB command 
swift_private
struct dylib_module
Attribute
__builtin_arm_mve_vrmlsldavhaxq
clang::symbol_metadata_footnote
tocoff field of LC_DYSYMTAB command 
--sysroot=
extreloff field of LC_DYSYMTAB command 
Metadata
extreloff field plus nextrel field times sizeof(struct relocation_info) of LC_DYSYMTAB command 
locreloff field plus nlocrel field times sizeof(struct relocation_info) of LC_DYSYMTAB command 
swift_error_result
gnu::sysv_abi
__builtin_arm_mve_vreinterpretq_u8
__builtin_arm_mve_vrndxq_m
swift_indirect_result
 command 
Set the -iwithprefix/-iwithprefixbefore prefix
-Bshareable
rebase_off field plus rebase_size field of 
gnu::target
bind_off field of 
-dynamic-linker
swift_objc_members
dyld rebase info
weak_bind_off field of 
__builtin_arm_mve_vshllbq_m
Disable aliasing mode in HWAddressSanitizer
featuresStrs...
LC_DYSYMTAB command 
crtbeginS.o
dyld lazy bind info
symbol_metadata_footnote
TestState
__builtin_arm_mve_vshrntq_m
LC_ID_DYLIB load command in non-dynamic library file type
gnu::thiscall
 name.offset field too small, not past the end of the dylib_command struct
 name.offset field extends past the end of the load command
crtendS.o
_thiscall
 LC_NOTE has incorrect cmdsize
Set the system root directory (usually /)
size field plus offset field of LC_NOTE command 
clang::transparent_stepping
crtn.o
__builtin_arm_mve_vstrhq_scatter_offset_p
LC_NOTE data
gnu::transparent_union
 LC_RPATH path.offset field too small, not past the end of the rpath_command struct
ananas::Assembler
__builtin_arm_mve_vuninitializedq
clang::trivial_abi
more than one LC_ENCRYPTION_INFO and or LC_ENCRYPTION_INFO_64 command
cryptoff field plus cryptsize field of 
clang::test_typestate
clang::try_acquire_shared_capability
 LC_LINKER_OPTION cmdsize too small
Don't use ignorelist file for sanitizers
clang::type_tag_for_datatype
SPACK package 
__builtin_arm_cde_vcx1a_u32
 LC_LINKER_OPTION string count 
LayoutCompatible
 count in 
 not found at 
__builtin_arm_cde_vcx1qa_m_s64
clang::type_visibility
 is not NULL terminated
trivial_abi
 which is a x86_THREAD_STATE flavor in 
typed_memory_operation
 at 
__builtin_arm_cde_vcx1qa_u64
__builtin_arm_cde_vcx2q_m_impl_f16
RewriteTarget
Add directory to end of the SYSTEM include search path
 x86_THREAD_STATE64 extends past end of command in 
__uptr
Assume all loops are finite.
__builtin_arm_cde_vcx2q_s64
 x86_EXCEPTION_STATE64 extends past end of command in 
clang::uninitialized
 which is a ARM_THREAD_STATE flavor in 
__builtin_arm_cde_vcx2q_u64
 count not ARM_THREAD_STATE_COUNT for flavor number 
clang::unlikely
 which is a ARM_THREAD_STATE64 flavor in 
/opt/rocm
-fno-sanitize-link-runtime
clang::unsafe_buffer_usage
 which is a PPC_THREAD_STATE flavor in 
amdgcn
InferredParameterIdx
 PPC_THREAD_STATE extends past end of command in 
__builtin_arm_cde_vcx2qa_m_impl_u16
-fno-sanitize-link-c++-runtime
unlikely
 extends past the end all load commands in the file
malformed uleb128, extends past end
__builtin_arm_cde_vcx3q_impl_u64
Malformed MachO file.
clang::using_if_exists
sleb128 too big for int64
the mach header extends past the end of the file
unsafe_buffer_usage
clang::ptrauth_vtable_pointer
 which is a x86_FLOAT_STATE flavor in 
cuda_wrappers
 for the number of sections
gnu::unused
ExtraDiscrimination
__builtin_arm_cde_vcx3qa_m_impl_s64
Guid
reloff field plus nreloc field times sizeof(struct relocation_info) of section 
 fileoff field in 
-fno-sanitize-memory-param-retval
section relocation entries
TypeHint
 greater than vmsize field
AddressDiscrimination
clang::vectorcall
__vectorcall
MachOUniversalBinary::ObjectForArch::getAsObjectFile() called when Parent is a nullptr
_vectorcall
_MoveFromCoprocessor2
) offset 
__AVR__
__AVR_TINY__
__flash1
NumBytes
__flash3
__attribute__((address_space(4)))
__flash5
warn_unused
__AVR_ATtiny11__
__AVR_ATtiny12__
__AVR_ATtiny28__
clang::warn_unused_result
__AVR_ATtiny22__
__AVR_ATtiny26__
__AVR_AT90S4433__
gnu::warn_unused_result
__AVR_AT90S8535__
__AVR_ATA5272__
__AVR_ATtiny13__
weak_import
__AVR_ATtiny24A__
__AVR_ATtiny4313__
__AVR_ATtiny84__
weakref
__AVR_ATtiny85__
__AVR_ATtiny261__
os,virtual
export_name
__AVR_ATtiny861A__
__AVR_ATtiny87__
__AVR_ATtiny88__
ExportName
__AVR_ATmega103__
__AVR_AT43USB320__
__AVR_AT90USB82__
clang::import_module
__AVR_ATmega8U2__
__AVR_ATmega16U2__
__AVR_ATmega8__
import_name
__AVR_ATA6286__
__AVR_ATA6612C__
Add directory to the end of the list of include search paths
ImportName
__AVR_ATmega88A__
__AVR_ATmega88P__
__AVR_ATmega8515__
force_align_arg_pointer
__AVR_AT90PWM2__
__AVR_AT90PWM2B__
__AVR_AT90PWM3B__
xray_always_instrument
__AVR_ATA5790N__
__AVR_ATA5791__
__AVR_ATA6613C__
xray_never_instrument
__AVR_ATmega16__
__AVR_ATmega16A__
Disable use-after-destroy detection in MemorySanitizer
xray_log_args
__AVR_ATmega165__
__AVR_ATmega165A__
__AVR_ATmega168__
ArgumentCount
__AVR_ATmega168PB__
__AVR_ATmega169__
__AVR_ATmega169P__
Semantics...
__AVR_ATmega324A__
__AVR_ATmega324P__
__AVR_ATmega325__
ZeroCallUsedRegs
__AVR_ATmega3250__
__AVR_ATmega3250A__
Disable just-my-code debugging (default)
kernel functions
__AVR_ATmega329A__
__AVR_ATmega329P__
__AVR_ATmega3290A__
structs, variables, functions, and namespaces
__AVR_ATmega64__
__AVR_ATmega64A__
__AVR_ATmega644__
non-static data members and global variables
__AVR_ATmega645A__
__AVR_ATmega645P__
__AVR_ATmega649P__
variables and typedefs
__AVR_ATmega6490__
__AVR_ATmega6490A__
-fno-sanitize-recover=
variables
__AVR_ATmega16HVBREVB__
__AVR_ATmega32HVB__
__AVR_ATmega64HVE2__
variables and statements
__AVR_AT90PWM216__
__AVR_AT90PWM316__
__AVR_ATmega64C1__
Objective-C interfaces
__AVR_ATmega32U4__
__AVR_ATmega32U6__
__AVR_AT90SCR100__
inline functions
__AVR_ATmega128A__
__AVR_ATmega1280__
Make char type unsigned
functions and Objective-C methods
__AVR_AT90CAN128__
__AVR_AT90USB1286__
__AVR_ATmega2561__
structs, unions, and classes
__AVR_ATxmega16A4U__
__AVR_ATxmega16C4__
__AVR_ATxmega32A4__
parameters
__AVR_ATxmega32D4__
__AVR_ATxmega32E5__
__AVR_ATxmega64A3__
classes
__AVR_ATxmega64B3__
Objective-C methods, functions, and function pointers
-fno-sanitize-recover
structs, unions, classes, and typedefs
__AVR_ATxmega128B1__
__AVR_ATxmega128B3__
__AVR_ATxmega128D4__
local variables
__AVR_ATxmega192D3__
__AVR_ATxmega256A3__
__AVR_ATxmega256A3B__
functions, variables, classes, and Objective-C interfaces
__AVR_ATxmega384D3__
__AVR_ATxmega128A1__
__AVR_ATtiny4__
functions, Objective-C methods, and Objective-C properties
__AVR_ATtiny20__
__AVR_ATtiny40__
--language=
variables, functions, and classes
__AVR_ATtiny804__
__AVR_ATtiny1604__
__AVR_ATtiny1606__
Objective-C methods, blocks, and non-K&R-style functions
__AVR_ATtiny412__
__AVR_ATtiny214__
__AVR_ATtiny814__
global functions
__AVR_ATtiny3216__
__AVR_ATtiny417__
__AVR_ATtiny3217__
cbuffer/tbuffer and external global variables
__AVR_ATmega808__
__AVR_ATmega809__
Disable sanitizer statistics gathering.
Objective-C instance methods
-ffixed-a1
parameters and implicit object parameters
functions, Objective-C methods, and blocks
__builtin_btf_type_id
__builtin_preserve_type_info
__builtin_preserve_enum_value
__bpf__
allowed-clients
__ckcore__
__CKCORE__
__cskyLE__
typedefs, functions, function pointers, Objective-C methods, and variables
__CSKY_VDSP64__
__CSKY_VDSP128__
functions, methods, and parameters
functions, Objective-C methods, Objective-C properties, and parameters
fr13
fr14
fr16
Objective-C protocols
fr21
fr22
fr25
Objective-C interfaces and Objective-C implementation declarations
fr29
fr30
Create debug DLL
Objective-C interfaces and Objective-C protocols
parameters and typedefs
class templates
variables with non-local storage, functions, and Objective-C methods
vr13
vr14
Create DLL
function templates
vr21
vr22
vr25
tag types, typedefs, Objective-C interfaces, and Objective-C protocols
-fmax-array-constructor=
functions, Objective-C methods, Objective-C interfaces, and Objective-C properties
hexadecimal
hexagonv5
__HEXAGON_ARCH__
hexagonv55
named declarations, types, and value declarations
hexagonv60
__HEXAGON_V60__
__QDSP6_V60__
Objective-C methods, enums, structs, unions, classes, functions, function pointers, and typedefs
__HEXAGON_V65__
auto:
hexagonv67t
__HEXAGON_V67T__
__HEXAGON_V68__
__va_list_tag
hvx-length64b
__HVX__
hvx-length128b
__uint128_t
__HEXAGON_PHYSICAL_SLOTS__
long-calls
--libomptarget-nvptx-bc-path=
Class
r11:10
r13:12
r19:18
__NSConstantString
r27:26
r29:28
size_t
event_t
Disable memory access instrumentation in ThreadSanitizer
queue_t
atomic_int
c1:0
c3:2
c7:6
atomic_float
c17:16
c19:18
c25:24
atomic_half
--linker-option=
atomic_long
upcyclelo
framekey
__builtin_ms_va_list
utimerhi
upcycle
utimer
v9:8
v11:10
v17:16
 SFINAE diagnostics trapped.
v25:24
v27:26
Disable trapping for specified sanitizers
PerformPendingInstantiations
v19:16
v23:20
__builtin_SI_to_SXTHI_asrh
///<
__builtin_brev_ldw
v*i*Ci*iC
v*s*Cs*iC
__builtin_brev_ldub
v*Uc*CUc*iC
__builtin_circ_ldw
bool
__builtin_circ_lduh
Us*Us*Us*iIi
<options>
atomic_intptr_t
__builtin_brev_stw
i*Ci*iiC
__builtin_brev_sthhi
atomic_ptrdiff_t
LLi*LLi*LLiiIi
__builtin_circ_stw
__builtin_circ_sth
Source
__builtin_HEXAGON_L2_loadrub_pci
iv*IiivC*
__builtin_HEXAGON_L2_loadrh_pci
basic_string
__builtin_HEXAGON_L2_loadrub_pcr
deque
Disable trapping for all sanitizers
forward_list
__builtin_HEXAGON_S2_storerb_pci
vv*IiiivC*
__builtin_HEXAGON_S2_storeri_pci
vv*iivC*
__builtin_HEXAGON_S2_storerh_pcr
__builtin_HEXAGON_S2_storeri_pcr
multimap
LLiLLiLLi
v62|v65|v66|v67|v68|v69
hvxv60|hvxv62|hvxv65|hvxv66|hvxv67|hvxv68|hvxv69
queue
__builtin_HEXAGON_V6_vmaskedstoreq_128B
vV128bv*V32i
Add directory to library search path
unordered_set
__builtin_HEXAGON_V6_vrmpybub_rtt_128B
V64iV32iLLi
__builtin_HEXAGON_V6_vrmpybub_rtt_acc_128B
unordered_multiset
__builtin_HEXAGON_V6_vrmpyub_rtt_acc
__builtin_HEXAGON_V6_vrmpyub_rtt_acc_128B
__builtin_HEXAGON_A2_absp
const_iterator
__builtin_HEXAGON_A2_addh_h16_hl
__builtin_HEXAGON_A2_addh_h16_lh
__builtin_HEXAGON_A2_addh_h16_sat_hl
const_reverse_iterator
__builtin_HEXAGON_A2_addh_l16_ll
__builtin_HEXAGON_A2_addh_l16_sat_hl
-fno-sanitize=
unique_ptr
LLiiLLi
__builtin_HEXAGON_A2_and
__builtin_HEXAGON_A2_aslh
reference_wrapper
__builtin_HEXAGON_A2_combine_lh
__builtin_HEXAGON_A2_combine_ll
LLiIiIi
stack empty
__builtin_HEXAGON_A2_maxu
Uiii
__builtin_HEXAGON_A2_min
strict_gs_check
__builtin_HEXAGON_A2_neg
__builtin_HEXAGON_A2_negp
-m3dnowa
optimize
__builtin_HEXAGON_A2_roundsat
iLLi
__builtin_HEXAGON_A2_sath
, and 
__builtin_HEXAGON_A2_subh_h16_hh
__builtin_HEXAGON_A2_subh_h16_hl
__builtin_HEXAGON_A2_subh_h16_ll
NS_OPTIONS
__builtin_HEXAGON_A2_subh_l16_hl
__builtin_HEXAGON_A2_subh_l16_ll
__builtin_HEXAGON_A2_subp
SWIFT_OPTIONS
__builtin_HEXAGON_A2_subsat
<API Notes>
-fno-schedule-insns2
_app_extension
__builtin_HEXAGON_A2_svsubuhs
__builtin_HEXAGON_A2_swiz
__builtin_HEXAGON_A2_sxtw
API_AVAILABLE
__builtin_HEXAGON_A2_tfril
__builtin_HEXAGON_A2_tfrp
LLiIi
z/OS
__builtin_HEXAGON_A2_vabsw
__builtin_HEXAGON_A2_vabswsat
__builtin_HEXAGON_A2_vaddhs
__builtin_HEXAGON_A2_vaddw
__builtin_HEXAGON_A2_vaddws
-m68010
@available
__builtin_HEXAGON_A2_vavguhr
__builtin_HEXAGON_A2_vavguw
__builtin_HEXAGON_A2_vavgwcr
, *)) {
__builtin_HEXAGON_A2_vcmpbgtu
__builtin_HEXAGON_A2_vcmpheq
__builtin_HEXAGON_A2_vcmphgtu
// Fallback on earlier versions
__builtin_HEXAGON_A2_vmaxb
__builtin_HEXAGON_A2_vmaxh
__builtin_HEXAGON_A2_vmaxuw
matrix element
__builtin_HEXAGON_A2_vminub
__builtin_HEXAGON_A2_vminuh
-fno-second-underscore
container subscripting expression
__builtin_HEXAGON_A2_vnavgwcr
__builtin_HEXAGON_A2_vnavgwr
LLiLLiLLiLLi
__builtin_return_address
__builtin_HEXAGON_A2_vsubh
__builtin_HEXAGON_A2_vsubhs
__builtin_HEXAGON_A2_vsububs
__builtin_HEXAGON_A2_xorp
__builtin_HEXAGON_A2_zxtb
__builtin_HEXAGON_A4_andnp
extdiv
__builtin_HEXAGON_A4_boundscheck
iiLLi
-m68060
bpermd
__builtin_HEXAGON_A4_cmpheq
__builtin_HEXAGON_A4_cmpheqi
__builtin_HEXAGON_A4_cmphgtu
__builtin_HEXAGON_A4_combineri
LLiiIi
__builtin_HEXAGON_A4_cround_rr
__builtin_HEXAGON_A4_rcmpeqi
__builtin_HEXAGON_A4_rcmpneq
__builtin_HEXAGON_A4_round_ri_sat
isa-v207-instructions
iLLii
isa-v206-instructions
-fno-semantic-interposition
W256SLiW256C*
__builtin_HEXAGON_A4_vcmpheqi
__builtin_HEXAGON_A4_vcmphgti
__builtin_HEXAGON_A4_vcmpwgti
vW256*VV
__builtin_HEXAGON_A4_vrmaxuh
__builtin_HEXAGON_A4_vrmaxuw
__builtin_HEXAGON_A4_vrminh
vW512*VVVV
__builtin_HEXAGON_C2_all8
__builtin_HEXAGON_C2_and
__builtin_HEXAGON_C2_bitsclr
vW512*
__builtin_HEXAGON_C2_cmpeqi
__builtin_HEXAGON_C2_cmpeqp
-mabi=quadword-atomics
vW512*W256V
__builtin_HEXAGON_C2_cmpgtui
__builtin_HEXAGON_C2_cmpgtup
__builtin_HEXAGON_C2_mask
vW512*VVi15i15i15
__builtin_HEXAGON_C2_muxir
iiiIi
iiIii
vW512*VVi15i15
__builtin_HEXAGON_C2_tfrpr
__builtin_HEXAGON_C2_tfrrp
LLiiLLiLLi
64bit
__builtin_HEXAGON_C4_and_or
__builtin_HEXAGON_C4_and_orn
-fno-short-wchar
RV32
__builtin_HEXAGON_C4_fastcorner9
__builtin_HEXAGON_C4_fastcorner9_not
__builtin_HEXAGON_C4_nbitsset
_Float16
__builtin_HEXAGON_C4_or_orn
__builtin_HEXAGON_F2_conv_d2df
__builtin_HEXAGON_F2_conv_d2sf
first
__builtin_HEXAGON_F2_conv_df2sf
__builtin_HEXAGON_F2_conv_df2ud
__builtin_HEXAGON_F2_conv_df2uw_chop
spsel
LLif
__builtin_HEXAGON_F2_conv_sf2d_chop
-mabi=vec-extabi
daifclr
__builtin_HEXAGON_F2_conv_sf2w
__builtin_HEXAGON_F2_conv_sf2w_chop
__builtin_HEXAGON_F2_conv_uw2df
__builtin_HEXAGON_F2_dfclass
idUIi
dUIi
__builtin_HEXAGON_F2_dfimm_p
ifUIi
printf
-fdiagnostics-absolute-paths
printf0
-fno-show-column
NSString
ffffi
__builtin_HEXAGON_F2_sffms
fUIi
strftime
__builtin_HEXAGON_F2_sfmpy
__builtin_HEXAGON_F2_sfsub
__builtin_HEXAGON_M2_accii
kprintf
__builtin_HEXAGON_M2_cmacs_s1
__builtin_HEXAGON_M2_cmacsc_s0
__builtin_HEXAGON_M2_cmpyr_s0
vcmn_err
__builtin_HEXAGON_M2_cmpyrsc_s1
__builtin_HEXAGON_M2_cmpys_s0
Enable SVR4-style position-independent code (Mips only)
freebsd_kprintf
__builtin_HEXAGON_M2_cnacsc_s1
__builtin_HEXAGON_M2_dpmpyss_acc_s0
__builtin_HEXAGON_M2_dpmpyss_s0
os_log
ULLiii
__builtin_HEXAGON_M2_hmmpyh_rs1
__builtin_HEXAGON_M2_hmmpyl_rs1
__builtin_HEXAGON_M2_macsip
__builtin_HEXAGON_M2_mmachs_rs0
__builtin_HEXAGON_M2_mmachs_s1
__builtin_HEXAGON_M2_mmacls_s1
__builtin_HEXAGON_M2_mmacuhs_rs0
-fno-show-source-location
) - 
__builtin_HEXAGON_M2_mmaculs_s1
__builtin_HEXAGON_M2_mmpyh_rs0
__builtin_HEXAGON_M2_mmpyh_s1
) - 1
__builtin_HEXAGON_M2_mmpyl_s1
__builtin_HEXAGON_M2_mmpyuh_rs0
__builtin_HEXAGON_M2_mmpyuh_s0
release
__builtin_HEXAGON_M2_mmpyul_s1
__builtin_HEXAGON_M2_mpy_acc_hh_s0
__builtin_HEXAGON_M2_mpy_acc_hl_s1
__builtin_HEXAGON_M2_mpy_acc_ll_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s0
-maes
%s%s
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s1
__builtin_HEXAGON_M2_mpy_hh_s0
__builtin_HEXAGON_M2_mpy_hl_s1
__builtin_HEXAGON_M2_mpy_ll_s1
__builtin_HEXAGON_M2_mpy_nac_hh_s0
__builtin_HEXAGON_M2_mpy_nac_hl_s0
: %zu 
__builtin_HEXAGON_M2_mpy_nac_ll_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s1
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s1
-fno-sign-zero
%hhu
__builtin_HEXAGON_M2_mpy_rnd_ll_s1
__builtin_HEXAGON_M2_mpy_sat_hh_s0
__builtin_HEXAGON_M2_mpy_sat_hl_s1
__builtin_HEXAGON_M2_mpy_sat_ll_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s0
sensitive
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s1
__builtin_HEXAGON_M2_mpy_up
__builtin_HEXAGON_M2_mpyd_acc_hh_s0
'kernel_enqueue_flags_t' (i.e. uint)
__builtin_HEXAGON_M2_mpyd_acc_lh_s0
__builtin_HEXAGON_M2_mpyd_acc_lh_s1
Return all structs in memory (PPC32 only)
'ndrange_t'
__builtin_HEXAGON_M2_mpyd_lh_s0
__builtin_HEXAGON_M2_mpyd_lh_s1
__builtin_HEXAGON_M2_mpyd_nac_hh_s0
streaming or locally streaming
__builtin_HEXAGON_M2_mpyd_nac_lh_s0
__builtin_HEXAGON_M2_mpyd_nac_lh_s1
__builtin_HEXAGON_M2_mpyd_nac_ll_s1
non-streaming
__builtin_HEXAGON_M2_mpyd_rnd_lh_s0
__builtin_HEXAGON_M2_mpyd_rnd_lh_s1
__builtin_HEXAGON_M2_mpyi
value
__builtin_HEXAGON_M2_mpyu_acc_hh_s1
__builtin_HEXAGON_M2_mpyu_acc_hl_s0
-fno-signaling-nans
__builtin_HEXAGON_M2_mpyu_hh_s1
__builtin_HEXAGON_M2_mpyu_hl_s0
__builtin_HEXAGON_M2_mpyu_lh_s1
__builtin_HEXAGON_M2_mpyu_nac_hh_s1
__builtin_HEXAGON_M2_mpyu_nac_hl_s0
__builtin_HEXAGON_M2_mpyu_nac_lh_s0
__builtin_HEXAGON_M2_mpyud_acc_hh_s0
__builtin_HEXAGON_M2_mpyud_acc_hh_s1
__builtin_HEXAGON_M2_mpyud_acc_lh_s0
unichar
__builtin_HEXAGON_M2_mpyud_hh_s0
__builtin_HEXAGON_M2_mpyud_hh_s1
Specify types of branches to align
SInt32
__builtin_HEXAGON_M2_mpyud_nac_hh_s0
__builtin_HEXAGON_M2_mpyud_nac_hh_s1
__builtin_HEXAGON_M2_mpyud_nac_lh_s0
c_str()
__builtin_HEXAGON_M2_mpyui
__builtin_HEXAGON_M2_nacci
__builtin_HEXAGON_M2_subacc
cstdlib
__builtin_HEXAGON_M2_vcmpy_s0_sat_i
__builtin_HEXAGON_M2_vcmpy_s0_sat_r
__builtin_HEXAGON_M2_vdmacs_s0
(size_t)(
__builtin_HEXAGON_M2_vdmpyrs_s1
char is unsigned
__builtin_HEXAGON_M2_vmac2su_s0
__builtin_HEXAGON_M2_vmac2su_s1
__builtin_HEXAGON_M2_vmpy2s_s0
'std::strong_ordering::equal'
__builtin_HEXAGON_M2_vmpy2su_s0
__builtin_HEXAGON_M2_vmpy2su_s1
__builtin_HEXAGON_M2_vradduh
'std::strong_ordering::greater'
__builtin_HEXAGON_M2_vrcmpyi_s0
__builtin_HEXAGON_M2_vrcmpyi_s0c
__builtin_HEXAGON_M2_vrcmpys_acc_s1
, ...
__builtin_HEXAGON_M2_vrmac_s0
__builtin_HEXAGON_M2_vrmpy_s0
-malign-jumps=
__builtin_HEXAGON_M4_cmpyi_whc
__builtin_HEXAGON_M4_cmpyr_wh
__builtin_HEXAGON_M4_mpyri_addi
operator
iiUIii
__builtin_HEXAGON_M4_mpyrr_addi
__builtin_HEXAGON_M4_mpyrr_addr
else if
__builtin_HEXAGON_M4_or_xor
__builtin_HEXAGON_M4_pmpyw
__builtin_HEXAGON_M4_vpmpyh_acc
template
__builtin_HEXAGON_M4_vrmpyeh_s1
__builtin_HEXAGON_M4_vrmpyoh_acc_s0
Use an unsigned type for wchar_t
delete[]
__builtin_HEXAGON_M4_xor_xacc
__builtin_HEXAGON_M5_vdmacbsu
__builtin_HEXAGON_M5_vmacbuu
__builtin_HEXAGON_M5_vrmacbuu
__builtin_HEXAGON_M5_vrmpybsu
__builtin_HEXAGON_S2_addasl_rrri
__builtin_HEXAGON_S2_asl_i_p_and
__builtin_HEXAGON_S2_asl_i_p_nac
__builtin_HEXAGON_S2_asl_i_r
__builtin_HEXAGON_S2_asl_i_r_or
__builtin_HEXAGON_S2_asl_i_r_sat
Sets the IEEE bit in the expected default floating point  mode register. Floating point opcodes that support exception flag gathering quiet and propagate signaling NaN inputs per IEEE 754-2008. This option changes the ABI. (AMDGPU only)
__builtin_HEXAGON_S2_asl_r_p_nac
__builtin_HEXAGON_S2_asl_r_p_or
__builtin_HEXAGON_S2_asl_r_r_acc
__builtin_HEXAGON_S2_asl_r_r_sat
__builtin_HEXAGON_S2_asl_r_vh
__builtin_HEXAGON_S2_asr_i_p
__builtin_HEXAGON_S2_asr_i_p_rnd
__builtin_HEXAGON_S2_asr_i_p_rnd_goodsyntax
__builtin_HEXAGON_S2_asr_i_r_and
__builtin_HEXAGON_S2_asr_i_r_rnd_goodsyntax
Allow optimizations that ignore the sign of floating point zeros
__builtin_HEXAGON_S2_asr_r_p_or
__builtin_HEXAGON_S2_asr_r_p_xor
__builtin_HEXAGON_S2_asr_r_r_and
__builtin_HEXAGON_S2_asr_r_svw_trun
__builtin_HEXAGON_S2_asr_r_vh
__builtin_HEXAGON_S2_brev
__builtin_HEXAGON_S2_cl1p
__builtin_HEXAGON_S2_clb
__builtin_HEXAGON_S2_clrbit_i
__builtin_HEXAGON_S2_ct1
__builtin_HEXAGON_S2_ct1p
-mappletvos-version-min=
method
__builtin_HEXAGON_S2_extractup_rp
__builtin_HEXAGON_S2_insert
iiiLLi
sender
__builtin_HEXAGON_S2_interleave
__builtin_HEXAGON_S2_lfsp
__builtin_HEXAGON_S2_lsl_r_p_acc
ifdef
__builtin_HEXAGON_S2_lsl_r_r
__builtin_HEXAGON_S2_lsl_r_r_acc
__builtin_HEXAGON_S2_lsl_r_r_or
ifndef
__builtin_HEXAGON_S2_lsr_i_p_acc
__builtin_HEXAGON_S2_lsr_i_p_and
-fno-sized-deallocation
elifdef
__builtin_HEXAGON_S2_lsr_i_r_nac
__builtin_HEXAGON_S2_lsr_i_r_or
__builtin_HEXAGON_S2_lsr_i_vw
endif
__builtin_HEXAGON_S2_lsr_r_p_nac
__builtin_HEXAGON_S2_lsr_r_p_or
__builtin_HEXAGON_S2_lsr_r_r
args
__builtin_HEXAGON_S2_lsr_r_vh
__builtin_HEXAGON_S2_lsr_r_vw
__builtin_HEXAGON_S2_setbit_i
number
__builtin_HEXAGON_S2_shuffob
__builtin_HEXAGON_S2_shuffoh
-masm=
pragma
__builtin_HEXAGON_S2_togglebit_i
__builtin_HEXAGON_S2_togglebit_r
__builtin_HEXAGON_S2_valignib
defined
__builtin_HEXAGON_S2_vrcnegh
__builtin_HEXAGON_S2_vrndpackwh
__builtin_HEXAGON_S2_vsathb
operator+
__builtin_HEXAGON_S2_vsatwh_nopack
__builtin_HEXAGON_S2_vsatwuh
__builtin_HEXAGON_S2_vsplatrh
operator*
-fdebug-pass-arguments
operator/
-fno-slp-vectorize
operator%
__builtin_HEXAGON_S4_addi_asl_ri
__builtin_HEXAGON_S4_addi_lsr_ri
__builtin_HEXAGON_S4_clbaddi
operator&
__builtin_HEXAGON_S4_extract_rp
__builtin_HEXAGON_S4_extractp
__builtin_HEXAGON_S4_lsli
operator~
__builtin_HEXAGON_S4_or_ori
__builtin_HEXAGON_S4_ori_asl_ri
__builtin_HEXAGON_S4_subaddi
operator=
LLiLLiiUIi
__builtin_HEXAGON_S4_vrcrotate_acc
Make assembler not emit warnings
operator>
__builtin_HEXAGON_S4_vxsubaddw
__builtin_HEXAGON_S5_asrhub_rnd_sat_goodsyntax
__builtin_HEXAGON_S5_vasrhrnd_goodsyntax
operator-=
__builtin_HEXAGON_Y2_dcinva
__builtin_HEXAGON_Y2_dczeroa
vv*i
operator/=
__builtin_HEXAGON_S6_rol_i_p_acc
__builtin_HEXAGON_S6_rol_i_p_and
__builtin_HEXAGON_S6_rol_i_p_xacc
operator^=
__builtin_HEXAGON_S6_rol_i_r_nac
__builtin_HEXAGON_S6_rol_i_r_or
-fno-spec-constr-count
operator|=
__builtin_HEXAGON_A6_vcmpbeq_notany
v65|v66|v67|v68|v69
__builtin_HEXAGON_F2_dfsub
operator>>
__builtin_HEXAGON_A7_clip
__builtin_HEXAGON_A7_croundd_ri
__builtin_HEXAGON_A7_vclip
operator>>=
__builtin_HEXAGON_F2_dfmpyhh
__builtin_HEXAGON_F2_dfmpylh
__builtin_HEXAGON_M7_dcmpyiw_acc
operator!=
__builtin_HEXAGON_M7_dcmpyrw_acc
__builtin_HEXAGON_M7_dcmpyrwc
-mavx512bitalg
operator>=
__builtin_HEXAGON_M7_wcmpyiwc_rnd
__builtin_HEXAGON_M7_wcmpyrw
__builtin_HEXAGON_M7_wcmpyrwc_rnd
operator&&
__builtin_HEXAGON_Y6_dmpoll
__builtin_HEXAGON_Y6_dmresume
__builtin_HEXAGON_Y6_dmwait
operator++
__builtin_HEXAGON_V6_hi
V16iV32i
__builtin_HEXAGON_V6_lo
operator,
__builtin_HEXAGON_V6_lvsplatw_128B
operator->*
Disable spell-checking
operator->
__builtin_HEXAGON_V6_pred_not
V64bV64b
__builtin_HEXAGON_V6_pred_or
operator new
__builtin_HEXAGON_V6_pred_scalar2
V64bi
V128bi
operator new[]
__builtin_HEXAGON_V6_vS32b_nt_nqpred_ai
__builtin_HEXAGON_V6_vS32b_nt_nqpred_ai_128B
__builtin_HEXAGON_V6_vS32b_qpred_ai
operator()
__builtin_HEXAGON_V6_vabsdiffh_128B
V32iV32iV32i
-mavx512er
template<...> class
__builtin_HEXAGON_V6_vabsh
V16iV16i
__builtin_HEXAGON_V6_vabsh_sat
 volatile
__builtin_HEXAGON_V6_vabsw_sat
__builtin_HEXAGON_V6_vabsw_sat_128B
__builtin_HEXAGON_V6_vaddb_128B
(...)
V16iV64bV16iV16i
__builtin_HEXAGON_V6_vaddbnq_128B
__builtin_HEXAGON_V6_vaddbq_128B
__builtin_HEXAGON_V6_vaddh_dv_128B
__builtin_HEXAGON_V6_vaddhnq
Disable splitting of cold code when optimizing.
out 
__builtin_HEXAGON_V6_vaddhsat_dv_128B
__builtin_HEXAGON_V6_vaddhw
V64iV32iV32i
byref 
__builtin_HEXAGON_V6_vaddubsat_128B
__builtin_HEXAGON_V6_vaddubsat_dv
__builtin_HEXAGON_V6_vadduhsat
nonnull 
__builtin_HEXAGON_V6_vadduhw_128B
__builtin_HEXAGON_V6_vaddw
__builtin_HEXAGON_V6_vaddw_dv_128B
null_unspecified 
__builtin_HEXAGON_V6_vaddwq_128B
__builtin_HEXAGON_V6_vaddwsat
-mavx512pf
, NULL
V32iV32iV32ii
__builtin_HEXAGON_V6_valignbi
V32iV32iV32iUIi
concept
V16iV64bi
__builtin_HEXAGON_V6_vandqrt_128B
__builtin_HEXAGON_V6_vandqrt_acc
declarations
V64bV16ii
__builtin_HEXAGON_V6_vandvrt_128B
V64bV64bV16ii
string-literal
__builtin_HEXAGON_V6_vaslh
declaration
-fno-split-lto-unit
using
__builtin_HEXAGON_V6_vaslw_acc_128B
__builtin_HEXAGON_V6_vaslwv
__builtin_HEXAGON_V6_vasrh_128B
using typename
__builtin_HEXAGON_V6_vasrhubrndsat_128B
__builtin_HEXAGON_V6_vasrhubsat
__builtin_HEXAGON_V6_vasrhv
cases
__builtin_HEXAGON_V6_vasrw_acc_128B
__builtin_HEXAGON_V6_vasrwh
__builtin_HEXAGON_V6_vasrwhrndsat_128B
init-expression
__builtin_HEXAGON_V6_vasrwuhsat_128B
__builtin_HEXAGON_V6_vasrwv
-mavx512vnni
range-declaration
__builtin_HEXAGON_V6_vavgh
__builtin_HEXAGON_V6_vavgh_128B
__builtin_HEXAGON_V6_vavgub
return true
__builtin_HEXAGON_V6_vavguh
__builtin_HEXAGON_V6_vavguh_128B
__builtin_HEXAGON_V6_vavguhrnd_128B
return nullptr
__builtin_HEXAGON_V6_vcl0h
__builtin_HEXAGON_V6_vcl0h_128B
__builtin_HEXAGON_V6_vcombine
__bridge
__builtin_HEXAGON_V6_vd0_128B
V32i
Disable late function splitting using profile information (x86 ELF)
Objective-C type
__builtin_HEXAGON_V6_vdealvdd
V32iV16iV16ii
__builtin_HEXAGON_V6_vdelta
std::type_info
__builtin_HEXAGON_V6_vdmpybus_acc
__builtin_HEXAGON_V6_vdmpybus_acc_128B
__builtin_HEXAGON_V6_vdmpybus_dv_128B
expression-or-type
__builtin_HEXAGON_V6_vdmpyhb
__builtin_HEXAGON_V6_vdmpyhb_128B
__builtin_HEXAGON_V6_vdmpyhb_dv
size
__builtin_HEXAGON_V6_vdmpyhisat
V16iV32ii
-mavx
std::nullptr_t
__builtin_HEXAGON_V6_vdmpyhsat
__builtin_HEXAGON_V6_vdmpyhsat_128B
__builtin_HEXAGON_V6_vdmpyhsuisat
sizeof...
__builtin_HEXAGON_V6_vdmpyhsusat
__builtin_HEXAGON_V6_vdmpyhsusat_128B
__builtin_HEXAGON_V6_vdmpyhsusat_acc_128B
__builtin_HEXAGON_V6_vdmpyhvsat_acc_128B
V32iV32iV32iV32i
__builtin_HEXAGON_V6_vdsaduh_acc
sizeof
__builtin_HEXAGON_V6_veqb_128B
typedef
Wouldn't use segmented stack
static_assert
__builtin_HEXAGON_V6_veqb_xor
__builtin_HEXAGON_V6_veqb_xor_128B
__builtin_HEXAGON_V6_veqh_and
thread_local
__builtin_HEXAGON_V6_veqh_xor
__builtin_HEXAGON_V6_veqh_xor_128B
__builtin_HEXAGON_V6_veqw_128B
mutable
__builtin_HEXAGON_V6_veqw_xor
__builtin_HEXAGON_V6_veqw_xor_128B
__builtin_HEXAGON_V6_vgtb_and
__PRETTY_FUNCTION__
__builtin_HEXAGON_V6_vgtb_xor
__builtin_HEXAGON_V6_vgtb_xor_128B
-mbmi2
__func__
__builtin_HEXAGON_V6_vgth_xor
__builtin_HEXAGON_V6_vgth_xor_128B
__builtin_HEXAGON_V6_vgtub_and
parameter
__builtin_HEXAGON_V6_vgtub_xor
__builtin_HEXAGON_V6_vgtub_xor_128B
__builtin_HEXAGON_V6_vgtuh_128B
__unaligned
__builtin_HEXAGON_V6_vgtuh_xor
__builtin_HEXAGON_V6_vgtuh_xor_128B
__builtin_HEXAGON_V6_vgtuw_and
signed
__builtin_HEXAGON_V6_vgtuw_xor
__builtin_HEXAGON_V6_vgtuw_xor_128B
-fno-stack-check
float
__builtin_HEXAGON_V6_vgtw_xor
__builtin_HEXAGON_V6_vgtw_xor_128B
__builtin_HEXAGON_V6_vlalignb
_Imaginary
__builtin_HEXAGON_V6_vlsrh
__builtin_HEXAGON_V6_vlsrh_128B
__builtin_HEXAGON_V6_vlsrhv_128B
char16_t
__builtin_HEXAGON_V6_vlutvvb
__builtin_HEXAGON_V6_vlutvvb_128B
__builtin_HEXAGON_V6_vlutvvb_oracc_128B
__auto_type
__builtin_HEXAGON_V6_vlutvwh_oracc
V32iV32iV16iV16ii
Enforce targets of indirect branches and function returns
@end
__builtin_HEXAGON_V6_vmaxuh
__builtin_HEXAGON_V6_vmaxuh_128B
__builtin_HEXAGON_V6_vminh
@property
__builtin_HEXAGON_V6_vminuh
__builtin_HEXAGON_V6_vminuh_128B
__builtin_HEXAGON_V6_vminw_128B
required
__builtin_HEXAGON_V6_vmpabusv
__builtin_HEXAGON_V6_vmpabusv_128B
__builtin_HEXAGON_V6_vmpahb
@interface
-fdiagnostics-fixit-info
protocol
-fno-stack-clash-protection
@implementation
__builtin_HEXAGON_V6_vmpybusv
__builtin_HEXAGON_V6_vmpybusv_128B
__builtin_HEXAGON_V6_vmpybusv_acc_128B
compatibility_alias
__builtin_HEXAGON_V6_vmpybv_acc
__builtin_HEXAGON_V6_vmpybv_acc_128B
__builtin_HEXAGON_V6_vmpyewuh_128B
@private
__builtin_HEXAGON_V6_vmpyhsrs
__builtin_HEXAGON_V6_vmpyhsrs_128B
__builtin_HEXAGON_V6_vmpyhus
@public
__builtin_HEXAGON_V6_vmpyhv
__builtin_HEXAGON_V6_vmpyhv_128B
-mbridgeos-version-min=
@try
__builtin_HEXAGON_V6_vmpyiewh_acc
__builtin_HEXAGON_V6_vmpyiewh_acc_128B
__builtin_HEXAGON_V6_vmpyiewuh_acc
@finally
__builtin_HEXAGON_V6_vmpyih_acc
__builtin_HEXAGON_V6_vmpyih_acc_128B
__builtin_HEXAGON_V6_vmpyihb_128B
synchronized
__builtin_HEXAGON_V6_vmpyiwb
__builtin_HEXAGON_V6_vmpyiwb_128B
__builtin_HEXAGON_V6_vmpyiwh
const char[]
__builtin_HEXAGON_V6_vmpyowh
__builtin_HEXAGON_V6_vmpyowh_128B
-fno-stack-protector
type-name
__builtin_HEXAGON_V6_vmpyub
__builtin_HEXAGON_V6_vmpyub_128B
__builtin_HEXAGON_V6_vmpyubv
protocol-name
__builtin_HEXAGON_V6_vmpyuh
__builtin_HEXAGON_V6_vmpyuh_128B
__builtin_HEXAGON_V6_vmpyuh_acc_128B
__builtin_HEXAGON_V6_vmux
__builtin_HEXAGON_V6_vmux_128B
__builtin_HEXAGON_V6_vnavgub
__builtin_HEXAGON_V6_vnormamth
__builtin_HEXAGON_V6_vnormamth_128B
-mclflushopt
NSDictionary *
__builtin_HEXAGON_V6_vpackeb
__builtin_HEXAGON_V6_vpackeb_128B
__builtin_HEXAGON_V6_vpackhb_sat
__builtin_HEXAGON_V6_vpackob
__builtin_HEXAGON_V6_vpackob_128B
__builtin_HEXAGON_V6_vpackoh_128B
__builtin_HEXAGON_V6_vpopcounth
__builtin_HEXAGON_V6_vpopcounth_128B
__builtin_HEXAGON_V6_vrmpybus
copyWithZone
__builtin_HEXAGON_V6_vrmpybusi
mutableCopy
-fno-stack-size-section
mutableCopyWithZone
__builtin_HEXAGON_V6_vrmpybusv
__builtin_HEXAGON_V6_vrmpybusv_128B
__builtin_HEXAGON_V6_vrmpybv
replacementObjectFromCoder
__builtin_HEXAGON_V6_vrmpyub
__builtin_HEXAGON_V6_vrmpyub_128B
__builtin_HEXAGON_V6_vrmpyub_acc_128B
superclass
__builtin_HEXAGON_V6_vrmpyubv
__builtin_HEXAGON_V6_vrmpyubv_128B
__builtin_HEXAGON_V6_vror
allocWithZone
__builtin_HEXAGON_V6_vroundhub
__builtin_HEXAGON_V6_vroundhub_128B
Equivalent to -mcmodel=medium, compatible with RISC-V gcc.
__interface <anonymous>
__builtin_HEXAGON_V6_vrsadubi_acc
__builtin_HEXAGON_V6_vrsadubi_acc_128B
__builtin_HEXAGON_V6_vsatwh
union <anonymous>
__builtin_HEXAGON_V6_vsb_128B
V64iV32i
__builtin_HEXAGON_V6_vsh_128B
__builtin_HEXAGON_V6_vshuffeb
__builtin_HEXAGON_V6_vshuffeb_128B
__builtin_HEXAGON_V6_vshuffob
NSMutableArray
__builtin_HEXAGON_V6_vshufoeb
__builtin_HEXAGON_V6_vshufoeb_128B
Limit debug information produced to reduce size of debug binary
NSMutableSet
__builtin_HEXAGON_V6_vsubb_dv
__builtin_HEXAGON_V6_vsubb_dv_128B
__builtin_HEXAGON_V6_vsubbq
countOf
__builtin_HEXAGON_V6_vsubh_dv
__builtin_HEXAGON_V6_vsubh_dv_128B
__builtin_HEXAGON_V6_vsubhnq_128B
AtIndex
__builtin_HEXAGON_V6_vsubhsat_dv
__builtin_HEXAGON_V6_vsubhsat_dv_128B
__builtin_HEXAGON_V6_vsububh
NSIndexSet *
__builtin_HEXAGON_V6_vsububsat_dv
__builtin_HEXAGON_V6_vsububsat_dv_128B
-mcmpb
object-type
__builtin_HEXAGON_V6_vsubw
__builtin_HEXAGON_V6_vsubw_128B
__builtin_HEXAGON_V6_vsubwnq
buffer
__builtin_HEXAGON_V6_vsubwsat
__builtin_HEXAGON_V6_vsubwsat_128B
__builtin_HEXAGON_V6_vsubwsat_dv_128B
NSRange
__builtin_HEXAGON_V6_vtmpyb
__builtin_HEXAGON_V6_vtmpyb_128B
__builtin_HEXAGON_V6_vtmpybus
insertObject
__builtin_HEXAGON_V6_vtmpybus_acc_128B
insertObject:
-fno-strict-aliasing
object
__builtin_HEXAGON_V6_vunpackob
V32iV32iV16i
__builtin_HEXAGON_V6_vunpackoh
atIndexes
__builtin_HEXAGON_V6_vunpackuh
__builtin_HEXAGON_V6_vunpackuh_128B
__builtin_HEXAGON_V6_vxor_128B
removeObjectFrom
__builtin_HEXAGON_V6_lvsplatb
hvxv62|hvxv65|hvxv66|hvxv67|hvxv68|hvxv69
__builtin_HEXAGON_V6_lvsplath_128B
withObject
__builtin_HEXAGON_V6_shuffeqh_128B
__builtin_HEXAGON_V6_shuffeqw
Legacy option to specify code object ABI V3 (AMDGPU only)
replace
V16iV16iV16iv*
__builtin_HEXAGON_V6_vaddcarry_128B
__builtin_HEXAGON_V6_vaddclbh_128B
enumeratorOf
__builtin_HEXAGON_V6_vaddhw_acc_128B
__builtin_HEXAGON_V6_vaddubh_acc
__builtin_HEXAGON_V6_vaddububb_sat
memberOf
__builtin_HEXAGON_V6_vadduwsat_128B
__builtin_HEXAGON_V6_vadduwsat_dv
__builtin_HEXAGON_V6_vandnqrt_128B
NSSet *
V16iV64bV16i
__builtin_HEXAGON_V6_vandvnqv_128B
-fno-strict-float-cast-overflow
intersect
__builtin_HEXAGON_V6_vasruwuhrndsat_128B
__builtin_HEXAGON_V6_vasrwuhrndsat
__builtin_HEXAGON_V6_vlsrb_128B
NSSet<NSString *> *
V16iV16iV16iV16iUIi
__builtin_HEXAGON_V6_vlutvvb_oracci_128B
__builtin_HEXAGON_V6_vlutvvbi
.inc
V32iV32iV16iV16iUIi
__builtin_HEXAGON_V6_vlutvwh_oracci_128B
V32iV16iV16iUIi
initial_suspend
__builtin_HEXAGON_V6_vmaxb_128B
__builtin_HEXAGON_V6_vminb
-mcompact-branches=
co_await
__builtin_HEXAGON_V6_vmpyewuh_64_128B
__builtin_HEXAGON_V6_vmpyiwub
__builtin_HEXAGON_V6_vmpyiwub_acc_128B
co_yield
__builtin_HEXAGON_V6_vrounduhub_128B
__builtin_HEXAGON_V6_vrounduwuh
__builtin_HEXAGON_V6_vsatuwuh
co_return
__builtin_HEXAGON_V6_vsubbsat_dv_128B
__builtin_HEXAGON_V6_vsubcarry
__builtin_HEXAGON_V6_vsubububb_sat_128B
return_void
__builtin_HEXAGON_V6_vsubuwsat_dv_128B
get_return_object_on_allocation_failure
-fno-strict-modules-decluse
unhandled_exception
__builtin_HEXAGON_V6_vasrh_acc
__builtin_HEXAGON_V6_vasrh_acc_128B
__builtin_HEXAGON_V6_vasruhubsat
coroutine_traits
__builtin_HEXAGON_V6_vavgb
__builtin_HEXAGON_V6_vavgb_128B
__builtin_HEXAGON_V6_vavgbrnd_128B
promise_type
__builtin_HEXAGON_V6_vdd0
__builtin_HEXAGON_V6_vdd0_128B
vv*iiV16i
await_suspend
vv*V64biiV16i
__builtin_HEXAGON_V6_vgathermhq_128B
Enable emitting complete constructors and destructors as aliases when possible
from_address
__builtin_HEXAGON_V6_vgathermhwq_128B
vv*V128biiV64i
__builtin_HEXAGON_V6_vgathermwq
std::coroutine_handle
__builtin_HEXAGON_V6_vlut4_128B
V32iV32iLLi
__builtin_HEXAGON_V6_vmpabuu_128B
hipConfigureCall
__builtin_HEXAGON_V6_vmpahhsat_128B
V32iV32iV32iLLi
__builtin_HEXAGON_V6_vmpsuhuhsat
cudaConfigureCall
__builtin_HEXAGON_V6_vmpyuhe
__builtin_HEXAGON_V6_vmpyuhe_128B
-fno-strict-return
'ns_returns_retained'
__builtin_HEXAGON_V6_vprefixqb_128B
V32iV128b
__builtin_HEXAGON_V6_vprefixqw
global or constant
__builtin_HEXAGON_V6_vscattermh_128B
viiV32iV32i
__builtin_HEXAGON_V6_vscattermh_add_128B
constexpr 
__builtin_HEXAGON_V6_vscattermhw
viiV32iV16i
__builtin_HEXAGON_V6_vscattermhw_add
ntohl
__builtin_HEXAGON_V6_vscattermhwq_128B
vV128biiV64iV32i
V32iV32iV32iV128b
os_variant_has_internal_diagnostic
__builtin_HEXAGON_V6_v6mpyhubs10
_NSGetExecutablePath
__builtin_HEXAGON_V6_v6mpyhubs10_vxx_128B
V64iV64iV64iV64iUIi
__builtin_HEXAGON_V6_v6mpyvubs10_vxx
H5T_patch_vlen_file
CGSSetDebugOptions
[<name>=]<file>
CGSGetDebugOptions
Unhandled storage-mapping class for .data csect.
unsupported directive in streamer
line_table_start
this directive must appear between .cfi_startproc and .cfi_endproc directives
starting new .cfi frame before finishing the previous one
Not all chained regions terminated!
printf
viiV16iV16i
vV128biiV32iV32i
vV64biiV32iV16i
Unhandled storage-mapping class for .rodata csect.
htonl
qsort
End of a chained region outside a chained region!
Specify the mapping of module name to precompiled module file, or load a module file if name is omitted.
symbol '
.seh_* directives are not supported on this target
os_variant_has_internal_diagnostics
register save offset is not 8 byte aligned
If present, PushMachFrame must be the first UOP
DWARF64 Mark
emitXCOFFExceptDirective is only supported on XCOFF targets
bad_alloc
atmega808
Set level of crash diagnostic reporting, (option: off, compiler, all)
Unable to find target for this triple (no targets are registered)
__type_descriptor_t
  Registered Targets:
CGSCreateShadowCacheDebugInfo
stdio.h
atmega1608
inaddr6_any
ucontext.h
-fno-sycl
-mcrypto
__attribute__((require_constant_initialization))
__builtin_HEXAGON_V6_v6mpyvubs10_128B
atmega4808
-fno-struct-path-tbaa
uintptr_t
<{0}>
<global>
atmega4809
__builtin_HEXAGON_V6_vfmin_sf_128B
push_macro
tune=
__builtin_HEXAGON_V6_vfmax_sf_128B
[[clang::require_constant_initialization]]
*** HeaderSearch Stats:
'minsize'
ptrdiff_t
 subframework lookups.
'dllimport'
.framework
__builtin_HEXAGON_V6_vmpy_qf16_hf_128B
-fmodule-format=
PrivateHeaders/
Modules
Disables SYCL kernels compilation for device
'ns_returns_retained'
'signal'
'export_name'
-fno-target-variant-availability-checks
pointer
<no message provided>
printf0
NumMultiIncludeFileOptzn
strfmon
attiny1624
cmn_err
/usr/lib/avr
le64
$r10
os_trace
$r14
$r15
$r18
gcc_diag
$r22
$r23
$r25
gcc_cxxdiag
$r30
$r31
NSAttributedString
Mapping between default visibility and export
__CFString
non-member functions
$fa0
$fa1
$fa4
Compute, Amplification, Mesh or Library
$ft0
$ft1
-mdirect-move
space0
$ft8
$ft9
$ft12
mutex
$fs0
$fs1
$fs3
nonzero_argument
-fno-threadsafe-statics
>>>>>>>
-p:32:16:32
-i8:8:8-i16:16:16-i32:16:32
__m68k__
__mc68000__
const &
mc68020
__mc68020
__mc68030
__restrict
-ffixed-d4
experimental
V4ScV4ScV4Sc
__builtin_mips_addu_s_qb
__builtin_mips_addq_ph
initializer_list
__builtin_mips_subq_s_ph
__builtin_mips_madd
LLiLLiUiUi
auto &
__builtin_mips_addsc
__builtin_mips_addwc
iV4Sc
'const char *'
__builtin_mips_precrq_qb_ph
V4ScV2sV2s
__builtin_mips_precrq_ph_w
tuple_element
__builtin_mips_preceq_w_phr
__builtin_mips_precequ_ph_qbl
__builtin_mips_precequ_ph_qbla
__builtin_mips_preceu_ph_qbla
__builtin_mips_preceu_ph_qbra
-mdspr2
__builtin_memcpy
__builtin_mips_shra_ph
__builtin_mips_shra_r_ph
__builtin_mips_shilo
__builtin_mips_mulq_rs_ph
__builtin_mips_muleq_s_w_phl
__builtin_mips_muleq_s_w_phr
 : NSObject 
__builtin_mips_maq_sa_w_phl
__builtin_mips_maq_sa_w_phr
LLiUiUi
__covariant
__builtin_mips_dpsu_h_qbl
__builtin_mips_dpsu_h_qbr
-mdynamic-no-pic
__builtin_mips_cmpu_lt_qb
__builtin_mips_cmpu_le_qb
__builtin_mips_cmpgu_lt_qb
NSProxy
__builtin_mips_cmp_lt_ph
__builtin_mips_cmp_le_ph
__builtin_mips_extr_w
macOS 10.11
__builtin_mips_wrdsp
viIi
__builtin_mips_bitrev
pair
__builtin_mips_repl_ph
V2si
-fno-trap-function-returns
throw(
__builtin_mips_lhx
__builtin_mips_lwx
__builtin_mips_addqh_ph
__attribute__((nothrow))
__builtin_mips_addu_ph
__builtin_mips_addu_s_ph
__builtin_mips_adduh_r_qb
(void*) 0
__builtin_mips_cmpgdu_le_qb
__builtin_mips_dpa_w_ph
__builtin_mips_dpaqx_sa_w_ph
object_getClass(
__builtin_mips_dpsqx_sa_w_ph
__builtin_mips_mul_ph
Use DLL run-time
__builtin_mips_precr_sra_ph_w
V2siiIi
__builtin_mips_shra_qb
less_equal
__builtin_mips_subqh_r_ph
__builtin_mips_subqh_w
__builtin_mips_subu_ph
greater_equal
V16ScV16ScV16Sc
__builtin_msa_add_a_h
V4SiV4SiV4Si
(void)(
__builtin_msa_adds_a_h
__builtin_msa_adds_a_w
-fno-trapping-math
object_setClass(
V16UcV16UcV16Uc
__builtin_msa_adds_u_h
V4UiV4UiV4Ui
(vector of 
V16cV16cV16c
__builtin_msa_addv_h
__builtin_msa_addv_w
' values)
V16cV16cIUi
__builtin_msa_addvi_h
V4iV4iIUi
 isEqual:
__builtin_msa_andi_b
V16UcV16UcIUi
-mefpu2
performSelector
__builtin_msa_asub_u_w
__builtin_msa_asub_u_d
__builtin_msa_ave_s_w
__builtin_msa_ave_u_w
__builtin_msa_ave_u_d
__builtin_msa_aver_s_h
1LL << 
__builtin_msa_aver_u_w
__builtin_msa_aver_u_d
__builtin_msa_bclr_w
V8UsV8UsIUi
0xA ^ 
-fno-tree-salias
__real
V8UsV8UsV8UsV8Us
__builtin_msa_binsl_w
V2ULLiV2ULLiV2ULLiV2ULLi
source_location
V8UsV8UsV8UsIUi
__builtin_msa_binsli_w
__builtin_msa_binsli_d
_M_file_name
__builtin_msa_binsr_d
__builtin_msa_binsri_b
__builtin_msa_binsri_d
_M_line
__builtin_msa_bmzi_b
__builtin_msa_bneg_b
Enable use of experimental RISC-V extensions.
operator""
__builtin_msa_bnegi_d
__builtin_msa_bnz_b
iV8Us
default new
iV2ULLi
__builtin_msa_bnz_v
__builtin_msa_bseli_b
__builtin_operator_delete
__builtin_msa_bseti_b
__builtin_msa_bseti_h
__builtin_msa_bz_b
expr-type
__builtin_msa_bz_v
__builtin_msa_ceq_b
-fno-tree-ter
V8SsV8SsISi
__builtin_msa_ceqi_w
V2SLLiV2SLLiISi
even
__builtin_msa_cle_s_w
__builtin_msa_cle_s_d
V16ScV16UcV16Uc
NSConstantString
__builtin_msa_cle_u_d
V2SLLiV2ULLiV2ULLi
__builtin_msa_clei_s_w
valueWithBytes
__builtin_msa_clei_u_h
V8SsV8UsIUi
Allow optimization to assume there are no NaNs.
bytes
__builtin_msa_clt_s_w
__builtin_msa_clt_s_d
__builtin_msa_clt_u_w
integral
__builtin_msa_clti_s_w
__builtin_msa_clti_s_d
__builtin_msa_clti_u_h
NSCopying
__builtin_msa_copy_s_h
iV8SsIUi
__builtin_msa_copy_s_d
CFBridgingRelease
__builtin_msa_copy_u_h
CFBridgingRelease 
-fno-tree-vectorize
__bridge_transfer 
__builtin_msa_div_s_b
__builtin_msa_div_s_h
__builtin_msa_div_u_b
__bridge 
__builtin_msa_dotp_s_h
V8SsV16ScV16Sc
V4SiV8SsV8Ss
__bridge_retained 
__builtin_msa_dotp_u_w
V4UiV8UsV8Us
__builtin_msa_dpadd_s_h
 = {}
__builtin_msa_dpadd_s_d
V2SLLiV2SLLiV4SiV4Si
-mexception-handling
'\0'
__builtin_msa_dpsub_s_h
__builtin_msa_dpsub_s_w
__builtin_msa_dpsub_u_w
u'\0'
__builtin_msa_fadd_d
V2dV2dV2d
V4iV4fV4f
Filter Mode
__builtin_msa_fclass_w
V4iV4f
__builtin_msa_fcle_w
__builtin_msa_fcne_w
__builtin_msa_fcne_d
-fno-trigraphs
__builtin_msa_fcult_w
__builtin_msa_fcult_d
__builtin_msa_fcune_w
cbegin
__builtin_msa_fexdo_h
V8hV4fV4f
V4fV2dV2d
rend
__builtin_msa_fexupl_w
V4fV8h
__builtin_msa_fexupr_w
crend
__builtin_msa_ffint_s_d
V2dV2SLLi
-mexecute-only
find
__builtin_msa_ffql_d
V2dV4Si
__builtin_msa_fill_b
lower_bound
__builtin_msa_fill_w
V4Sii
V2SLLiLLi
front
__builtin_msa_fmadd_w
V4fV4fV4fV4f
__builtin_msa_fmax_w
__builtin_msa_fmax_a_d
-fno-typed-cxx-new-delete
any_cast
__builtin_msa_frint_w
__builtin_msa_frint_d
__builtin_msa_frsqrt_w
__builtin_msa_fseq_w
__builtin_msa_fseq_d
__builtin_msa_fsle_d
__invoke
__builtin_msa_fsor_w
__builtin_msa_fsor_d
__builtin_msa_fsub_w
        
__builtin_msa_fsule_w
__builtin_msa_fsule_d
Assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
__make_integer_seq
__builtin_msa_ftint_s_w
V4SiV4f
__builtin_msa_ftint_u_w
__builtin_msa_ftq_h
V4UiV4fV4f
V2ULLiV2dV2d
__builtin_msa_hadd_s_h
__builtin_msa_hadd_s_w
__builtin_msa_hadd_u_w
__builtin_msa_hsub_s_d
__builtin_msa_hsub_u_h
-fno-typed-memory-operations-experimental
__builtin_msa_ilvl_b
__builtin_msa_ilvl_h
__builtin_msa_ilvod_b
__builtin_msa_ilvr_b
__builtin_msa_ilvr_h
__builtin_msa_ilvr_d
__builtin_msa_insert_w
V4SiV4SiIUii
__builtin_msa_insve_b
tomic_compare_exchange_weak_explicit
__builtin_msa_insve_w
V4SiV4SiIUiV4Si
Insert calls to fentry at function entry (x86/SystemZ only)
sub_group_clustered_reduce_logical_
__builtin_msa_ld_w
V4Siv*Ii
__builtin_msa_ldr_d
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_add __opencl_c_ext_fp16_global_atomic_add
__builtin_msa_ldi_h
V8sIi
V4iIi
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_min_max __opencl_c_ext_fp16_global_atomic_min_max
__builtin_msa_madd_q_w
V4SiV4SiV4SiV4Si
__builtin_msa_maddv_b
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_load_store
__builtin_msa_maddv_d
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_min_max
-fno-typed-memory-operations
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_add
__builtin_msa_max_s_w
__builtin_msa_max_s_d
__builtin_msa_max_u_w
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_min_max
__builtin_msa_maxi_s_h
V8SsV8SsIi
V4SiV4SiIi
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_min_max __opencl_c_ext_fp32_global_atomic_min_max
__builtin_msa_maxi_u_h
V8UsV8UsIi
__builtin_msa_maxi_u_d
cl_ext_float_atomics __opencl_c_ext_fp32_global_atomic_min_max
__builtin_msa_min_a_w
__builtin_msa_min_a_d
-mfix-cortex-a53-835769
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_min_max
__builtin_msa_min_u_w
__builtin_msa_min_u_d
__builtin_msa_mini_s_w
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_min_max __opencl_c_ext_fp64_global_atomic_min_max
__builtin_msa_mini_u_w
__builtin_msa_mini_u_d
__builtin_msa_mod_s_h
cl_ext_float_atomics __opencl_c_ext_fp64_global_atomic_min_max
__builtin_msa_mod_u_w
__builtin_msa_mod_u_d
__builtin_msa_msub_q_h
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_min_max
__builtin_msa_msubv_b
__builtin_msa_msubv_h
-fno-unique-basic-block-section-names
cl_khr_subgroup_ballot
__builtin_msa_mulv_b
__builtin_msa_mulv_h
__builtin_msa_nloc_b
cl_khr_subgroup_extended_types
V4SiV4Si
__builtin_msa_nloc_d
__builtin_msa_nlzc_b
cl_khr_subgroup_non_uniform_vote
__builtin_msa_nori_b
V16UcV16cIUi
__builtin_msa_pckev_b
cl_khr_subgroup_shuffle_relative
__builtin_msa_pckod_b
__builtin_msa_pckod_h
-mfix-cortex-a72-aes-1655431
__opencl_c_named_address_space_builtins
__builtin_msa_sat_s_b
V16ScV16ScIUi
__builtin_msa_sat_s_w
__opencl_c_integer_dot_product_input_4x8bit
__builtin_msa_sat_u_b
__builtin_msa_sat_u_h
__builtin_msa_sat_u_d
cl_khr_subgroup_rotate
V16cV16cV16cUi
__builtin_msa_sld_h
V4iV4iV4iUi
__opencl_c_generic_address_space __opencl_c_atomic_scope_device
Prevent optimization remarks from being output if they do not have at least this profile count. Use 'auto' to apply the threshold from profile summary
__opencl_c_named_address_space_builtins __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
-fno-unique-section-names
__opencl_c_named_address_space_builtins __opencl_c_atomic_scope_device
__builtin_msa_sll_h
__builtin_msa_sll_w
__builtin_msa_slli_h
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_load_store __opencl_c_atomic_scope_device
V16cV16cUi
__builtin_msa_splat_h
__builtin_msa_splat_w
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_add __opencl_c_atomic_scope_device
__builtin_msa_splati_h
__builtin_msa_splati_w
__builtin_msa_sra_h
cl_ext_float_atomics __opencl_c_ext_fp32_global_atomic_add __opencl_c_atomic_scope_device
__builtin_msa_srai_h
__builtin_msa_srai_w
soft,softfp,hard
cl_ext_float_atomics __opencl_c_ext_fp64_global_atomic_add __opencl_c_atomic_scope_device
__builtin_msa_srari_h
__builtin_msa_srari_w
__builtin_msa_srl_h
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_min_max __opencl_c_atomic_scope_device
__builtin_msa_srli_h
__builtin_msa_srli_w
__builtin_msa_srlr_b
cl_ext_float_atomics __opencl_c_ext_fp32_global_atomic_min_max __opencl_c_atomic_scope_device
__builtin_msa_srlri_h
__builtin_msa_srlri_w
vV16Scv*Ii
cl_ext_float_atomics __opencl_c_ext_fp64_global_atomic_min_max __opencl_c_atomic_scope_device
vV4Siv*Ii
__builtin_msa_st_d
-fno-unit-at-a-time
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_load_store __opencl_c_atomic_scope_device
__builtin_msa_subs_s_d
__builtin_msa_subs_u_b
__builtin_msa_subs_u_d
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_add __opencl_c_atomic_scope_device
V8UsV8UsV8Ss
__builtin_msa_subsus_u_w
__builtin_msa_subsus_u_d
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_add __opencl_c_atomic_scope_device
__builtin_msa_subsuu_s_d
__builtin_msa_subv_b
__builtin_msa_subv_d
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_add __opencl_c_atomic_scope_device
__builtin_msa_subvi_d
__builtin_msa_vshf_b
-mfma4
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_min_max __opencl_c_atomic_scope_device
V2LLiV2LLiV2LLiV2LLi
__builtin_msa_xor_v
mips4
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_min_max __opencl_c_atomic_scope_device
MIPSEL
_MIPSEL
_mips
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_min_max __opencl_c_atomic_scope_device
__mips64__
_MIPS_ISA_MIPS64
_ABIO32
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_load_store __opencl_c_ext_fp16_local_atomic_load_store __opencl_c_atomic_scope_device
__mips_n64
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_add __opencl_c_ext_fp16_global_atomic_add __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
-fno-unroll-loops
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_add __opencl_c_ext_fp16_global_atomic_add __opencl_c_atomic_scope_device
_MIPS_FPSET
__mips16
__mips_abs2008
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_add __opencl_c_ext_fp32_global_atomic_add __opencl_c_atomic_scope_device
__mips_msa
__mips_no_madd4
Use 32-bit floating point registers (MIPS only)
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_add __opencl_c_ext_fp64_global_atomic_add __opencl_c_atomic_scope_device
<value>
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_min_max __opencl_c_ext_fp16_global_atomic_min_max __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_min_max __opencl_c_ext_fp16_global_atomic_min_max __opencl_c_atomic_scope_device
__nvvm_read_ptx_sreg_tid_z
__nvvm_read_ptx_sreg_ntid_x
__nvvm_read_ptx_sreg_ntid_y
__nvvm_read_ptx_sreg_ctaid_x
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_min_max __opencl_c_ext_fp32_global_atomic_min_max __opencl_c_atomic_scope_device
__nvvm_read_ptx_sreg_nctaid_x
__nvvm_read_ptx_sreg_nctaid_y
__nvvm_read_ptx_sreg_laneid
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_min_max __opencl_c_ext_fp64_global_atomic_min_max __opencl_c_atomic_scope_device
__nvvm_read_ptx_sreg_nsmid
__nvvm_read_ptx_sreg_gridid
__nvvm_read_ptx_sreg_lanemask_le
cl_mem_fence_flags
__nvvm_read_ptx_sreg_clock64
__nvvm_read_ptx_sreg_pm2
memory_scope
(sm_80|sm_86|sm_87|sm_89|sm_90),(ptx70|ptx71|ptx72|ptx73|ptx74|ptx75|ptx76|ptx77|ptx78)
__nvvm_fmin_ftz_f16
-mfpmath=
retain (or strong)
__nvvm_fmin_ftz_nan_xorsign_abs_f16
__nvvm_fmin_f16x2
__nvvm_fmin_nan_f16x2
__nvvm_fmin_nan_xorsign_abs_f16x2
__nvvm_fmin_ftz_nan_xorsign_abs_f16x2
__nvvm_fmin_nan_bf16
(nonatomic) 
__nvvm_fmin_nan_bf16x2
__nvvm_fmin_xorsign_abs_bf16x2
__nvvm_fmin_ftz_f
requires
__nvvm_fmin_ftz_xorsign_abs_f
__nvvm_fmin_nan_xorsign_abs_f
Which unit to use for fp math
.bound_tid.
__nvvm_fmax_xorsign_abs_f16
__nvvm_fmax_ftz_xorsign_abs_f16
__nvvm_fmax_f16x2
.privates.
__nvvm_fmax_xorsign_abs_f16x2
__nvvm_fmax_ftz_xorsign_abs_f16x2
__nvvm_fmax_ftz_nan_xorsign_abs_f16x2
.task_t.
__nvvm_fmax_bf16x2
__nvvm_fmax_nan_bf16x2
__nvvm_fmax_f
.ub.
__nvvm_fmax_xorsign_abs_f
__nvvm_fmax_ftz_xorsign_abs_f
-fno-unsigned-char
.liter.
__nvvm_mulhi_ull
__nvvm_mul_rn_ftz_f
__nvvm_mul_rz_f
.previous.lb.
__nvvm_mul_rp_f
__nvvm_mul_rn_d
__nvvm_mul_rm_d
omp_interop_t
__nvvm_div_approx_f
__nvvm_div_rn_ftz_f
__nvvm_div_rz_f
ordered
__nvvm_div_rp_f
__nvvm_div_rn_d
Avoid FPU mode dependent operations when used with the O32 ABI
'map', 'use_device_ptr', or 'use_device_addr'
__nvvm_floor_f
__nvvm_floor_d
__nvvm_ceil_d
.floor_
__nvvm_round_ftz_f
__nvvm_round_f
__nvvm_trunc_ftz_f
.tile_
__nvvm_saturate_d
__nvvm_ex2_approx_ftz_f
__nvvm_ex2_approx_f16
.unrolled.iv.
__nvvm_lg2_approx_ftz_f
__nvvm_lg2_approx_f
-fno-unwind-tables
.unroll_inner.tripcount.
(sm_53|sm_60|sm_61|sm_62|sm_70|sm_72|sm_75|sm_80|sm_86|sm_87|sm_89|sm_90),(ptx42|ptx60|ptx61|ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74|ptx75|ptx76|ptx77|ptx78)
__nvvm_fma_rn_ftz_f16
__nvvm_fma_rn_relu_f16
'init', 'use', 'destroy', or 'nowait'
__nvvm_fma_rn_ftz_f16x2
__nvvm_fma_rn_sat_f16x2
__nvvm_fma_rn_relu_f16x2
.lastprivate.src
__nvvm_fma_rn_bf16x2
ZUiZUiZUiZUi
__nvvm_fma_rn_f
.linear.start
__nvvm_fma_rm_f
__nvvm_fma_rp_ftz_f
-mframe-pointer=
.copyin.src
__nvvm_rcp_rn_f
__nvvm_rcp_rz_ftz_f
__nvvm_rcp_rm_f
threadprivate or private in the enclosing context
__nvvm_rcp_rz_d
__nvvm_rcp_rm_d
__nvvm_rcp_approx_ftz_f
.copyprivate.dst
__nvvm_sqrt_rz_f
__nvvm_sqrt_rm_ftz_f
__nvvm_sqrt_rp_f
depend modifier(iterator) or 
__nvvm_sqrt_rz_d
omp_in
Don't use constructor homing for debug info
omp_out
__nvvm_add_rz_ftz_f
__nvvm_add_rz_f
__nvvm_add_rp_ftz_f
omp_orig
__nvvm_add_rm_d
__nvvm_add_rp_d
__nvvm_d2f_rn
dist_schedule
__nvvm_d2f_rp_ftz
__nvvm_d2f_rp
__nvvm_d2i_rm
'alloc', 'from', 'to', 'tofrom', 'firstprivate', 'none', 'default'
__nvvm_d2ui_rz
__nvvm_d2ui_rm
-mfunction-return=
.devptr.temp
__nvvm_ui2d_rz
__nvvm_f2i_rn_ftz
Distance
__nvvm_f2i_rm_ftz
__nvvm_f2i_rm
__nvvm_f2i_rp
.stop
__nvvm_f2ui_rm_ftz
__nvvm_f2ui_rm
__nvvm_i2f_rn
LoopVar
__nvvm_ui2f_rn
__nvvm_ui2f_rz
Don't use __cxa_atexit for calling destructors
 or 
__nvvm_f2ll_rn_ftz
__nvvm_f2ll_rn
__nvvm_f2ll_rm_ftz
.omp.lb
__nvvm_f2ull_rn_ftz
ULLif
__nvvm_f2ull_rz_ftz
.omp.is_last
__nvvm_f2ull_rp
__nvvm_d2ll_rn
__nvvm_d2ll_rp
.omp.comb.lb
__nvvm_d2ull_rm
__nvvm_d2ull_rp
.omp.iv
__nvvm_ull2f_rz
__nvvm_ull2f_rm
__nvvm_ll2d_rz
.reduction.lhs
dULLi
__nvvm_ull2d_rz
__nvvm_ull2d_rp
omp_depend_t
ZUiff
__nvvm_ff2bf16x2_rn_relu
__nvvm_ff2f16x2_rn
__nvvm_ff2f16x2_rz
'enable_if'
Use .ctors/.dtors instead of .init_array/.fini_array
objectForKeyedSubscript
__nvvm_bitcast_f2i
__nvvm_bitcast_i2f
__nvvm_fns
setObject
__nvvm_bar0_popc
__nvvm_bar0_and
__nvvm_bar_sync
atIndexedSubscript
__nvvm_shfl_down_f32
ffii
__nvvm_shfl_bfly_i32
zve64d
__nvvm_shfl_sync_down_i32
iUiiii
-mgfni
vadd_vv
__nvvm_shfl_sync_idx_i32
__nvvm_shfl_sync_idx_f32
__nvvm_vote_uni
vluxei8_v
bUib
__nvvm_vote_any_sync
__nvvm_vote_ballot_sync
vloxseg3ei8_v
UiUiWi
__nvvm_match_all_sync_i32p
UiUiWii*
vloxseg5ei8_v
__nvvm_redux_sync_umin
__nvvm_redux_sync_umax
-fno-use-linker-plugin
vloxseg7ei8_v
__nvvm_mbarrier_init
vWi*i
__nvvm_mbarrier_inval
vloxseg8ei8_v
__nvvm_mbarrier_arrive
WiWi*
WiWi*3
vloxseg3ei16_v
__nvvm_mbarrier_arrive_drop
__nvvm_mbarrier_arrive_drop_shared
__nvvm_mbarrier_test_wait
vloxseg5ei16_v
__nvvm_mbarrier_pending_count
__nvvm_memcpy
Enable merging of globals
vloxseg7ei16_v
V4fiiff
__builtin_ptx_read_image2Dii_
V4iiiff
vloxseg2ei32_v
V4fiiffff
__builtin_ptx_read_image3Dii_
__builtin_ptx_read_image3Dif_
vloxseg4ei32_v
viiiiiii
__builtin_ptx_write_image2Dui_
__builtin_ptx_get_image_heighti_
vloxseg6ei32_v
__nvvm_atom_add_gen_i
vloxseg7ei32_v
Disable validation of precompiled headers
vloxseg8ei32_v
__nvvm_atom_sys_add_gen_l
__nvvm_atom_add_gen_ll
__nvvm_atom_add_gen_f
vloxseg2ei64_v
__nvvm_atom_add_gen_d
ddD*d
__nvvm_atom_sys_add_gen_d
vloxseg4ei64_v
__nvvm_atom_cta_xchg_gen_i
__nvvm_atom_sys_xchg_gen_i
__nvvm_atom_sys_xchg_gen_l
vloxseg6ei64_v
__nvvm_atom_max_gen_i
__nvvm_atom_cta_max_gen_i
Enable or disable Control Flow Guard checks and guard tables emission
vloxseg8ei64_v
__nvvm_atom_cta_max_gen_l
__nvvm_atom_sys_max_gen_l
__nvvm_atom_cta_max_gen_ul
vsse32_v
__nvvm_atom_sys_max_gen_ll
__nvvm_atom_max_gen_ull
__nvvm_atom_cta_max_gen_ull
vsse64_v
__nvvm_atom_min_gen_ui
__nvvm_atom_cta_min_gen_ui
__nvvm_atom_cta_min_gen_l
vluxei16_v
__nvvm_atom_sys_min_gen_ul
__nvvm_atom_min_gen_ll
-fno-variable-expansion-in-unroller
vsseg5e8_v
__nvvm_atom_cta_inc_gen_ui
__nvvm_atom_sys_inc_gen_ui
__nvvm_atom_sys_dec_gen_ui
vsseg7e8_v
__nvvm_atom_and_gen_l
__nvvm_atom_cta_and_gen_l
__nvvm_atom_and_gen_ll
vsseg2e16_v
__nvvm_atom_sys_or_gen_i
__nvvm_atom_or_gen_l
__nvvm_atom_or_gen_ll
vsseg4e16_v
__nvvm_atom_cta_xor_gen_i
__nvvm_atom_sys_xor_gen_i
-mhard-float
vsseg6e16_v
__nvvm_atom_cas_gen_i
iiD*ii
__nvvm_atom_cas_gen_l
vsseg7e16_v
__nvvm_atom_cas_gen_ll
__nvvm_atom_cta_cas_gen_ll
__nvvm_compiler_error
vsseg2e32_v
__nvvm_ldg_s
ssC*
__nvvm_ldg_l
vsseg4e32_v
LLiLLiC*
vsseg5e32_v
-fno-vectorize
vsseg6e32_v
__nvvm_ldg_ull
ULLiULLiC*
__nvvm_ldg_d
vsseg8e32_v
__nvvm_ldg_c4
E4cE4cC*
E2sE2sC*
vsseg3e64_v
__nvvm_ldg_i4
E4iE4iC*
__nvvm_ldg_uc2
vsseg5e64_v
__nvvm_ldg_us2
E2UsE2UsC*
-mhtm
vsseg7e64_v
__nvvm_ldg_ull2
E2ULLiE2ULLiC*
__nvvm_ldg_f4
vssseg3e8_v
__nvvm_isspacep_const
bvC*
__nvvm_isspacep_local
vssseg5e8_v
__hmma_m16n16k16_ld_c_f16
__hmma_m16n16k16_ld_c_f32
vi*i*UiIi
vssseg7e8_v
(sm_70|sm_72|sm_75|sm_80|sm_86|sm_87|sm_89|sm_90),(ptx61|ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74|ptx75|ptx76|ptx77|ptx78)
__hmma_m32n8k16_ld_b
-fno-virtual-function-elimination
vssseg2e16_v
__hmma_m8n32k16_ld_c_f16
__hmma_m8n32k16_ld_c_f32
__hmma_m16n16k16_mma_f16f16
vssseg4e16_v
__hmma_m16n16k16_mma_f32f32
vf*iC*iC*fC*IiIi
vi*iC*iC*fC*IiIi
vssseg6e16_v
__hmma_m8n32k16_mma_f16f16
__hmma_m8n32k16_mma_f32f16
__bmma_m8n8k128_ld_a_b1
vssseg8e16_v
__bmma_m8n8k128_mma_and_popc_b1
vi*iC*iC*iC*Ii
Set Hexagon Vector Length
vssseg3e32_v
__imma_m16n16k16_ld_b_s8
__imma_m16n16k16_ld_b_u8
__imma_m16n16k16_mma_u8
vssseg5e32_v
__imma_m32n8k16_ld_b_s8
__imma_m32n8k16_ld_b_u8
__imma_m32n8k16_mma_s8
vssseg7e32_v
__imma_m8n32k16_ld_b_s8
__imma_m8n32k16_ld_b_u8
__imma_m8n32k16_mma_u8
vssseg2e64_v
__imma_m8n8k32_ld_b_s4
vssseg3e64_v
-fno-visibility-inlines-hidden-static-local-var
vssseg4e64_v
__dmma_m8n8k4_ld_b
__dmma_m8n8k4_ld_c
vd*dC*dC*dC*IiIi
vssseg6e64_v
__mma_bf16_m8n32k16_ld_a
__mma_bf16_m8n32k16_ld_b
__mma_bf16_m32n8k16_ld_a
vssseg8e64_v
__mma_tf32_m16n16k8_ld_c
__mma_m16n16k8_st_c_f32
__nvvm_cp_async_mbarrier_arrive_shared
vsuxseg4ei8_v
vv*3vC*1
__nvvm_cp_async_ca_shared_global_8
-mhvx=
vsuxseg6ei8_v
UsUs
__nvvm_abs_bf16x2
__nvvm_neg_bf16x2
vsuxseg8ei8_v
__PTX__
vsuxseg3ei16_v
vsuxseg4ei16_v
-ffixed-point
vsuxseg5ei16_v
-mhvx
6000
__PTRAUTH_INTRINSICS__
__ptrauth_abi_version__
__ENVIRONMENT_TV_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_BRIDGE_OS_VERSION_MIN_REQUIRED__
vsuxseg2ei32_v
_WIN32
_WIN64
WINNT
vsuxseg4ei32_v
_CPPRTTI
_CPPUNWIND
_M_FP_CONTRACT
vsuxseg6ei32_v
_M_FP_STRICT
-mhwdiv=
vsuxseg8ei32_v
_MSC_EXTENSIONS
_RVALUE_REFERENCES_V2_SUPPORTED
_NATIVE_NULLPTR_SUPPORTED
vsuxseg3ei64_v
--mhwdiv
__builtin_casinl
__builtin_ppc_poppar4
__builtin_ppc_poppar8
iULLi
__builtin_ppc_isync
vsuxseg7ei64_v
__builtin_ppc_iospace_sync
__builtin_ppc_dcbfl
__builtin_ppc_dcbflp
vsuxseg2ei8_v
__builtin_ppc_icbt
__builtin_ppc_fric
__builtin_ppc_frin
vloxei16_v
__builtin_ppc_friz
__builtin_ppc_frizs
__builtin_ppc_fsels
vsoxseg2ei8_v
__builtin_ppc_compare_and_swap
iiD*i*i
__builtin_ppc_fetch_and_add
vsoxseg4ei8_v
__builtin_ppc_fetch_and_or
__builtin_ppc_fetch_and_orlp
Use Intel MCU ABI
vsoxseg6ei8_v
__builtin_ppc_lharx
__builtin_ppc_lbarx
iLiD*Li
vloxei64_v
__builtin_ppc_stbcx
icD*i
vLLiLLiIUi
vsoxseg2ei16_v
__builtin_ppc_fcfid
__builtin_ppc_fctidz
vsoxseg4ei16_v
__builtin_ppc_fctuwz
__builtin_ppc_swdiv_nochk
-fno-whole-file
vsoxseg6ei16_v
__builtin_ppc_compare_exp_lt
__builtin_ppc_compare_exp_gt
idIi
vsoxseg8ei16_v
__builtin_ppc_cmprb
iCIiii
__builtin_ppc_cmpb
vsoxseg3ei32_v
__builtin_ppc_mulhw
__builtin_ppc_mulhwu
ULLiULLiULLiULLi
vsoxseg5ei32_v
__builtin_ppc_rlwimi
UiUiUiIUiIUi
-mieee-rnd-near
vsoxseg7ei32_v
__builtin_ppc_load8r
ULLiULLi*
__builtin_ppc_store4r
vsoxseg2ei64_v
__builtin_ppc_extract_exp
__builtin_ppc_extract_sig
vUIi
vsoxseg4ei64_v
vUIiUIi
__builtin_ppc_insert_exp
__builtin_ppc_fmsubs
vsoxseg6ei64_v
__builtin_ppc_fnmsubs
vsoxseg7ei64_v
-fno-whole-program
vsoxseg8ei64_v
ULiIi
__builtin_ppc_mtmsr
__builtin_ppc_stfiw
vsub_vv
__builtin_ppc_maxfe
LdLdLdLd.
dddd.
vrsub_vx
__builtin_ppc_minfs
__builtin_ppc_fnabs
ULLi
vwsubu_vv
__builtin_altivec_vaddshs
__builtin_altivec_vadduhs
Run the migrator
vwadd_vv
__builtin_altivec_vaddecuq
__builtin_altivec_vadduqm
__builtin_altivec_vaddcuq_c
vwsub_vv
__builtin_altivec_vsubshs
__builtin_altivec_vsubuhs
__builtin_altivec_vsubuws
vwaddu_wx
__builtin_altivec_vsubeuqm_c
__builtin_altivec_vsubcuq_c
__builtin_altivec_vavgub
vwsubu_wx
__builtin_altivec_vavguw
__builtin_altivec_vrfip
-fno-wrapv
vwadd_wx
__builtin_altivec_vctuxs
V4UiV4fIi
__builtin_altivec_dst
vwsub_wx
__builtin_altivec_dststt
__builtin_altivec_vexptefp
__builtin_altivec_lvx
vwcvt_x
__builtin_altivec_lvehx
V8sLivC*
__builtin_altivec_lvsl
vadc_vxm
__builtin_altivec_vmhaddshs
__builtin_altivec_vmhraddshs
-mimplicit-it=
vsbc_vxm
__builtin_altivec_vmsumshm
V4SiV8SsV8SsV4Si
__builtin_altivec_vmuleub
vmadc_vxm
__builtin_altivec_vmuleuw
__builtin_altivec_vmulesw
__builtin_altivec_vmulosb
vmadc_vx
__builtin_altivec_vmuleud
V1ULLLiV2ULLiV2ULLi
__builtin_altivec_vmuloud
vmsbc_vxm
V1ULLLiV2ULLiV2ULLiV1ULLLi
vmsbc_vv
-fno-xor-operator
vmsbc_vx
V8UsV4UiV4Ui
__builtin_altivec_vpkswss
V16UcV8SsV8Ss
vand_vx
V4SiV2SLLiV2SLLi
__builtin_altivec_vpksdus
__builtin_altivec_vpkudus
vxor_vx
__builtin_altivec_stvx
vV4iLiv*
vV16cLiv*
vor_vx
__builtin_altivec_vcmpbfp
__builtin_altivec_vcmpgefp
-mindirect-branch-cs-prefix
vsll_vx
__builtin_altivec_vcmpneh
__builtin_altivec_vcmpnew
__builtin_altivec_vcmpnezw
vsrl_vx
V16cV16UcV16Uc
__builtin_altivec_vcmpgtsh
__builtin_altivec_vcmpgtuh
vsra_vx
V4iV4UiV4Ui
__builtin_altivec_vcmpgtsd
__builtin_altivec_vcmpgtfp
vnsrl_wx
V1LLLiV1SLLLiV1SLLLi
__builtin_altivec_vcmpgtuq
-fno-xray-always-emit-typedevents
vnsra_wx
__builtin_altivec_vmaxsb
__builtin_altivec_vmaxub
__builtin_altivec_vmaxsw
vncvt_x
__builtin_altivec_vmaxfp
__builtin_altivec_mfvscr
__builtin_altivec_vminsb
vmseq_vx
__builtin_altivec_vminuw
__builtin_altivec_vminsd
__builtin_altivec_mtvscr
vmsne_vx
V16cV16cV16Uc
__builtin_altivec_vrlh
-minline-all-stringops
vmsltu_vx
V4iV4iV4iV4Ui
__builtin_altivec_vsl
__builtin_altivec_vsrah
vmslt_vx
__builtin_altivec_vrfin
__builtin_altivec_vrsqrtefp
__builtin_altivec_vsum4sbs
vmsleu_vx
V4SiV8SsV4Si
__builtin_altivec_vsum2sws
__builtin_altivec_vupkhsb
vmsle_vx
__builtin_altivec_vupkhsh
vmsgtu_vv
Omit function index section at the expense of single-function patching performance
vmsgtu_vx
__builtin_altivec_vcmpbfp_p
iiV4fV4f
iiV16cV16c
vmsgt_vx
iiV4iV4i
__builtin_altivec_vcmpequd_p
__builtin_altivec_vcmpeqfp_p
vwaddu_wv
__builtin_altivec_vcmpgtsb_p
iiV16ScV16Sc
__builtin_altivec_vcmpgtsh_p
vsuxei16_v
__builtin_altivec_vcmpgtsw_p
iiV4SiV4Si
-mios-version-min=
vmsge_vv
__builtin_altivec_vgbbd
V16UcV16Uc
__builtin_altivec_vbpermd
vminu_vv
__builtin_altivec_crypto_vpermxor
__builtin_altivec_crypto_vpermxor_be
V4UiV4UiIiIi
vmin_vv
__builtin_altivec_crypto_vncipher
__builtin_altivec_crypto_vncipherlast
__builtin_altivec_crypto_vpmsumw
vmaxu_vv
V8UsV8Us
__builtin_altivec_vclzw
-fno-xray-instrument
vmax_vv
__builtin_ppc_bcdadd
V16UcV16UcV16UcIi
__builtin_ppc_bcdsub_p
vmul_vv
__builtin_altivec_vprtybw
__builtin_altivec_vprtybd
V1ULLLiV1ULLLi
vmulh_vv
__builtin_altivec_vabsdub
__builtin_altivec_vabsduh
__builtin_altivec_vsrv
vmulhu_vv
__builtin_altivec_vrldnm
__builtin_altivec_vextsb2w
-mips16
vmulhsu_vv
V2SLLiV8Ss
__builtin_altivec_vextsw2d
V1SLLLiV2SLLi
vmulhsu_vx
__builtin_altivec_vextractwm
__builtin_altivec_vextractdm
__builtin_altivec_vextractqm
vdivu_vx
__builtin_altivec_vdiveud
__builtin_altivec_vdivesq
__builtin_altivec_vmulhsw
vdiv_vx
-fdiagnostics-print-source-range-info
vremu_vv
Don't place zero initialized data in BSS
vremu_vx
ULLiV8UsUi
__builtin_altivec_vcntmbw
ULLiV2ULLiUi
vrem_vx
V8UsULLi
__builtin_altivec_mtvsrwm
__builtin_altivec_mtvsrdm
vwmul_vx
__builtin_altivec_vpextd
__builtin_altivec_vstribr
V8sV8s
vwmulu_vx
__builtin_altivec_vstribl_p
__builtin_altivec_vstrihr_p
Equivalent to -march=mips2
vwmulsu_vx
V16UcV16UcUi
__builtin_altivec_vclrrb
__builtin_altivec_vsldbi
vmacc_vx
__builtin_altivec_vinsbrx
__builtin_altivec_vinshlx
__builtin_altivec_vinshrx
vsuxei8_v
V2ULLiV2ULLiULLiULLi
__builtin_altivec_vinsdrx
__builtin_altivec_vinsbvrx
vmadd_vv
__builtin_altivec_vinswvlx
V4UiV4UiUiV4Ui
-fno_modules-validate-input-files-content
vnmsub_vv
V16UcV16UcUiiC
__builtin_altivec_vinsd_elt
V2ULLiV16UcV16UcUi
vwmaccu_vv
__builtin_altivec_vextduhvrx
__builtin_altivec_vextduwvlx
__builtin_altivec_vextduwvrx
vwmacc_vv
__builtin_altivec_vrlqnm
__builtin_vsx_lxvd2x
__builtin_vsx_lxvd2x_be
vwmaccsu_vv
__builtin_vsx_stxvd2x
vV2dLiv*
Equivalent to -march=mips32r3
vwmaccus_vx
V4ivC*ULLi
__builtin_vsx_lxvll
__builtin_vsx_stxvll
vmerge_vxm
vCc*IiV16Uc
__builtin_vsx_xvmaxdp
__builtin_vsx_xsmaxdp
vmv_v
__builtin_vsx_xvdivsp
__builtin_vsx_xvrdpip
__builtin_vsx_xvcmpeqsp
vsaddu_vv
__builtin_vsx_xvcmpgedp
vsaddu_vx
-fnon-call-exceptions
vsadd_vv
__builtin_vsx_xvrdpim
__builtin_vsx_xvrspim
__builtin_vsx_xvrdpic
vssubu_vv
__builtin_vsx_xvmaddadp
__builtin_vsx_xvmaddasp
__builtin_vsx_xvmsubasp
vssub_vv
__builtin_vsx_xvnmsubadp
__builtin_vsx_xvnmsubasp
__builtin_vsx_xvrsqrtedp
vaaddu_vv
__builtin_vsx_xxleqv
__builtin_vsx_xvcpsgndp
Equivalent to -march=mips32r6
vaadd_vv
V8UsV8Usi
__builtin_vsx_xxgenpcvwm
V2ULLiV2ULLii
vasubu_vv
V4fV4UiV4Ui
__builtin_vsx_xvxexpdp
__builtin_vsx_xvxsigdp
vasub_vv
V4UiV2d
__builtin_vsx_xvcvspsxds
V2ULLiV4f
vsmul_vv
__builtin_vsx_xvcvspdp
__builtin_vsx_xvcvsxdsp
-fnoopenmp-use-tls
vssrl_vv
__builtin_vsx_xvcvhpsp
V4fV8Us
__builtin_vsx_xvtstdcdp
vssra_vv
V16UcV4UiV16UcIi
__builtin_vsx_extractuword
__builtin_vsx_xxpermdi
vnclipu_wv
iV16UcUi
__builtin_vsx_xvtdivdp
iV4fV4f
vnclip_wv
iV4f
__builtin_vsx_xxpermx
Equivalent to -march=mips3
vfadd_vv
LLdLLd
__builtin_addf128_round_to_odd
__builtin_mulf128_round_to_odd
vfsub_vv
__builtin_truncf128_round_to_odd
dLLd
ULLiLLd
vfrsub_vf
__builtin_ppc_recipdivf
__builtin_ppc_recipdivd
__builtin_tabort
vfwadd_vf
__builtin_tabortwc
vfwsub_vv
-fobjc-abi-version=
vsuxei64_v
__builtin_get_texasr
__builtin_get_tfiar
vfwadd_wv
__builtin_set_tfhar
__builtin_set_tfiar
__builtin_divwe
vfwsub_wv
__builtin_bpermd
__builtin_pdepd
__builtin_cntlzdm
vfmul_vv
__builtin_pack_longdouble
Lddd
Equivalent to -march=mips5
vfdiv_vv
V1LLLiULLiULLi
__builtin_setrnd
__builtin_dcbf
vfrdiv_vf
__builtin_mma_disassemble_pair
__builtin_vsx_build_pair
__builtin_vsx_lxvp
vfwmul_vf
__builtin_mma_disassemble_acc
__builtin_mma_xxmtacc
__builtin_mma_xvi4ger8
vfmacc_vf
__builtin_mma_xvf16ger2
__builtin_mma_xvf32ger
Objective-C++ Automatic Reference Counting standard library kind
vfnmacc_vf
__builtin_mma_pmxvf32ger
__builtin_mma_pmxvf64ger
__builtin_mma_xvi8ger4spp
vfmsac_vf
__builtin_mma_pmxvi8ger4pp
__builtin_mma_pmxvi8ger4spp
__builtin_mma_pmxvi16ger2spp
vfnmsac_vf
__builtin_mma_pmxvf16ger2pp
__builtin_mma_pmxvf16ger2pn
__builtin_mma_xvf32gerpp
vfmadd_vf
__builtin_mma_pmxvf32gerpp
__builtin_mma_pmxvf32gerpn
Equivalent to -march=mips64r3
vfnmadd_vf
__builtin_mma_pmxvf64gerpp
__builtin_mma_pmxvf64gerpn
__builtin_mma_xvbf16ger2
vfmsub_vf
__builtin_mma_xvbf16ger2np
__builtin_mma_xvbf16ger2nn
__builtin_mma_pmxvbf16ger2pn
vfnmsub_vf
+float128
+power9-vector
+mma
vfwmacc_vf
+isa-v30-instructions
vfwnmacc_vv
-fobjc-arc-exceptions
vfwnmacc_vf
__PPC64__
__THW_PPC__
_LITTLE_ENDIAN
vfwmsac_vf
__NATURAL_ALIGNMENT__
__LONG_DOUBLE_128__
__LONG_DOUBLE_IEEE128__
vfwnmsac_vf
_ARCH_
_ARCH_PPCGR
_ARCH_603
vfmin_vf
_ARCH_PWR5X
_ARCH_PWR6
Equivalent to -march=mips64r6
vfmax_vf
__NO_LWSYNC__
_ARCH_PWR_FUTURE
__ALTIVEC__
vfsgnj_vf
__POWER8_VECTOR__
__CRYPTO__
__POWER9_VECTOR__
vfsgnjn_vf
__HAVE_BSWAP__
direct-move
privileged
vfsgnjx_vf
-mpcrel
-mcpu=pwr10 -mprefixed
-fobjc-arc
vmfeq_vv
pcrelative-memops
prefix-instrs
vmfne_vv
vmflt_vv
vmfle_vv
vmfgt_vv
vmfge_vv
vfmerge_vfm
vrsave
vscr
vfmv_v
-fdebug-ranges-base-address
vredsum_vs
-fobjc-atdefs
vredmaxu_vs
vredminu_vs
__eieio
__iospace_eieio
__lwsync
vredand_vs
__dcbflp
__dcbst
__dcbz
vredxor_vs
__fetch_and_add
__fetch_and_addlp
-mldc1-sdc1
vwredsumu_vs
__ldarx
__lwarx
__stfiw
vfredmin_vs
__stbcx
__tdw
__trap
vfredosum_vs
__fctidz
__fctiw
__fctuwz
vfwredosum_vs
__cmpb
__mulhd
Try to avoid heapifying local blocks
viota_m
__rlwnm
__rlwimi
__load4r
vmv_x_s
__store8r
__extract_exp
__mtfsb0
vmv_s_x
__fmsub
__fmsubs
__fnmsub
vfmv_f_s
__swdiv_nochk
__swdivs_nochk
Link the given bitcode file before performing optimizations.
vfmv_s_f
__vpermxor
__vpmsumb
__vpmsumw
vfmv_s_x
__divweu
__alignx
bcopy
vslidedown_vx
__builtin_clzll
__cmplx
__cnttz4
vfslide1up_vf
__darn
vsse8_v
-fobjc-constant-literals
vslide1down_vx
__abs
__builtin_abs
__llabs
vrgather_vv
__popcnt8
__builtin_popcountll
__rotatel4
vrgatherei16_vv
__setflm
__setrnd
__mftbu
vget_v
__mtspr
__fric
-mlinker-version=
vsoxei8_v
__friz
__frizs
__frsqrte
vsoxei32_v
__addex
__cmplxl
__compare_exp_lt
vlseg2e8_v
__swdivs
__fnabs
__builtin_maxfl
vle32ff_v
__builtin_minfs
-vsx
-fobjc-disable-direct-methods-for-testing
vlseg3e8_v
vlseg5e8_v
vs10
vs12
vlseg6e8_v
vs17
vs18
vs21
vlseg8e8_v
vs25
vs26
-mlocal-sdata
vlseg3e16_v
vs33
vs34
vs37
vlseg5e16_v
vs41
vs42
vs44
vlseg7e16_v
vs49
vs50
vs53
vlseg2e32_v
Enable C++ exceptions
vlseg3e32_v
-fobjc-dispatch-method=
vlseg4e32_v
Print diagnostic category
vlseg8e32_v
vlseg3e64_v
fs11
vlseg5e64_v
__riscv
__riscv_xlen
__riscv_float_abi_single
vlseg7e64_v
__riscv_arch_test
__riscv_
__riscv_mul
vlseg3e8ff_v
__riscv_fdiv
__riscv_fsqrt
__riscv_v_elen_fp
vlseg5e8ff_v
__builtin_rvv_vadd_vv_ta
__builtin_rvv_vadd_vv_tu
-mlong-double-64
vlseg7e8ff_v
__builtin_rvv_vwaddu_vv_tumu
__builtin_rvv_vwaddu_vv_tuma
__builtin_rvv_vluxei8_v_ta
vlseg2e16ff_v
__builtin_rvv_vluxei8_v_tama
__builtin_rvv_vluxei8_v_tamu
__builtin_rvv_vlse32_v_tu
vlseg4e16ff_v
__builtin_rvv_vloxseg3ei8_v_ta
__builtin_rvv_vloxseg3ei8_v_tu
__builtin_rvv_vloxseg3ei8_v_tama
vlseg6e16ff_v
__builtin_rvv_vloxseg4ei8_v_tumu
__builtin_rvv_vloxseg4ei8_v_tuma
-mlong-double-80
vlseg8e16ff_v
__builtin_rvv_vloxseg5ei8_v_tama
__builtin_rvv_vloxseg5ei8_v_tamu
__builtin_rvv_vloxseg6ei8_v_tumu
vlseg3e32ff_v
__builtin_rvv_vloxseg7ei8_v_ta
__builtin_rvv_vloxseg7ei8_v_tu
__builtin_rvv_vloxseg7ei8_v_tuma
vlseg5e32ff_v
__builtin_rvv_vlse64_v_tumu
__builtin_rvv_vlse64_v_tuma
__builtin_rvv_vloxseg8ei8_v_ta
vlseg7e32ff_v
__builtin_rvv_vloxseg8ei8_v_tama
__builtin_rvv_vloxseg8ei8_v_tamu
Fully encode c++ class template specialization
vlseg2e64ff_v
__builtin_rvv_vloxseg3ei16_v_ta
__builtin_rvv_vloxseg3ei16_v_tu
__builtin_rvv_vloxseg3ei16_v_tama
vlseg4e64ff_v
__builtin_rvv_vloxseg4ei16_v_tumu
__builtin_rvv_vloxseg4ei16_v_tuma
__builtin_rvv_vloxseg4ei16_v_tamu
vlseg6e64ff_v
__builtin_rvv_vloxseg5ei16_v_tama
__builtin_rvv_vloxseg5ei16_v_tamu
__builtin_rvv_vloxseg6ei16_v_tumu
vlseg8e64ff_v
__builtin_rvv_vloxseg7ei16_v_ta
__builtin_rvv_vloxseg7ei16_v_tu
Enable only control-flow mitigations for Load Value Injection (LVI)
vlsseg3e8_v
__builtin_rvv_vloxseg8ei16_v_tumu
__builtin_rvv_vloxseg8ei16_v_tuma
__builtin_rvv_vloxseg2ei32_v_ta
vlsseg5e8_v
__builtin_rvv_vloxseg2ei32_v_tama
__builtin_rvv_vloxseg2ei32_v_tamu
__builtin_rvv_vloxseg3ei32_v_tu
vlsseg7e8_v
__builtin_rvv_vloxseg4ei32_v_ta
__builtin_rvv_vloxseg4ei32_v_tu
__builtin_rvv_vloxseg4ei32_v_tama
vlsseg2e16_v
__builtin_rvv_vloxseg5ei32_v_tumu
__builtin_rvv_vloxseg5ei32_v_tuma
Enable Objective-C exceptions
vlsseg3e16_v
__builtin_rvv_vloxseg6ei32_v_tama
__builtin_rvv_vloxseg6ei32_v_tamu
__builtin_rvv_vloxseg7ei32_v_tumu
vlsseg5e16_v
__builtin_rvv_vloxseg8ei32_v_ta
__builtin_rvv_vloxseg8ei32_v_tu
__builtin_rvv_vloxseg8ei32_v_tuma
vlsseg7e16_v
__builtin_rvv_vloxseg2ei64_v_ta
__builtin_rvv_vloxseg2ei64_v_tu
__builtin_rvv_vloxseg2ei64_v_tama
vlsseg2e32_v
__builtin_rvv_vloxseg3ei64_v_tumu
__builtin_rvv_vloxseg3ei64_v_tuma
-mlzcnt
vlsseg4e32_v
__builtin_rvv_vloxseg4ei64_v_tama
__builtin_rvv_vloxseg4ei64_v_tamu
__builtin_rvv_vloxseg5ei64_v_tumu
vluxseg2ei8_v
__builtin_rvv_vloxseg6ei64_v_ta
__builtin_rvv_vloxseg6ei64_v_tu
__builtin_rvv_vloxseg6ei64_v_tuma
vlsseg7e32_v
__builtin_rvv_vloxseg7ei64_v_tumu
__builtin_rvv_vloxseg7ei64_v_tuma
__builtin_rvv_vloxseg8ei64_v_ta
vlsseg2e64_v
__builtin_rvv_vloxseg8ei64_v_tama
vlsseg3e64_v
Use GC exclusively for Objective-C related memory management
vlsseg4e64_v
__builtin_rvv_vsse32_v
__builtin_rvv_vsse32_v_m
__builtin_rvv_vluxei64_v_tumu
vlsseg6e64_v
__builtin_rvv_vsse64_v
__builtin_rvv_vsse64_v_m
__builtin_rvv_vsseg3e8_v_m
vlsseg8e64_v
__builtin_rvv_vluxei16_v_tama
__builtin_rvv_vluxei16_v_tamu
__builtin_rvv_vsseg5e8_v
vsseg2e8_v
__builtin_rvv_vsseg7e8_v
__builtin_rvv_vsseg7e8_v_m
-mmadd4
vluxseg4ei8_v
__builtin_rvv_vsseg4e16_v
__builtin_rvv_vsseg4e16_v_m
__builtin_rvv_vsseg6e16_v
vluxseg6ei8_v
__builtin_rvv_vluxei32_v_tumu
__builtin_rvv_vluxei32_v_tuma
__builtin_rvv_vluxei32_v_tamu
vluxseg8ei8_v
__builtin_rvv_vsseg2e32_v
__builtin_rvv_vsseg2e32_v_m
__builtin_rvv_vsseg4e32_v
vluxseg3ei16_v
__builtin_rvv_vsseg6e32_v
__builtin_rvv_vsseg6e32_v_m
Enable Objective-C garbage collection
vluxseg5ei16_v
__builtin_rvv_vsseg3e64_v
__builtin_rvv_vsseg3e64_v_m
__builtin_rvv_vsseg5e64_v
vluxseg7ei16_v
__builtin_rvv_vsseg7e64_v
__builtin_rvv_vsseg7e64_v_m
__builtin_rvv_vsseg8e64_v_m
vluxseg2ei32_v
__builtin_rvv_vssseg5e8_v
__builtin_rvv_vssseg5e8_v_m
__builtin_rvv_vssseg7e8_v
vluxseg4ei32_v
__builtin_rvv_vssseg2e16_v
__builtin_rvv_vssseg2e16_v_m
-mmcu=
vluxseg6ei32_v
__builtin_rvv_vssseg6e16_v
__builtin_rvv_vssseg6e16_v_m
__builtin_rvv_vssseg8e16_v
vluxseg8ei32_v
__builtin_rvv_vssseg3e32_v
__builtin_rvv_vssseg3e32_v_m
__builtin_rvv_vssseg4e32_v_m
vluxseg3ei64_v
__builtin_rvv_vssseg7e32_v
__builtin_rvv_vssseg7e32_v_m
__builtin_rvv_vssseg2e64_v
vluxseg5ei64_v
__builtin_rvv_vssseg4e64_v
vluxseg6ei64_v
-fobjc-legacy-dispatch
vluxseg7ei64_v
__builtin_rvv_vssseg8e64_v
__builtin_rvv_vssseg8e64_v_m
__builtin_rvv_vsuxseg4ei8_v
vssseg2e8_v
__builtin_rvv_vsuxseg6ei8_v
__builtin_rvv_vsuxseg6ei8_v_m
__builtin_rvv_vsuxseg7ei8_v_m
vneg_v
__builtin_rvv_vsuxseg3ei16_v
__builtin_rvv_vsuxseg3ei16_v_m
__builtin_rvv_vsuxseg5ei16_v
vmmv_m
__builtin_rvv_vsuxseg7ei16_v
__builtin_rvv_vsuxseg7ei16_v_m
Enable generation of memop instructions
vwcvtu_x_x_v
__builtin_rvv_vsuxseg4ei32_v
__builtin_rvv_vsuxseg4ei32_v_m
__builtin_rvv_vsuxseg6ei32_v
vle16_v
__builtin_rvv_vsuxseg8ei32_v
__builtin_rvv_vsuxseg8ei32_v_m
__builtin_rvv_vsuxseg2ei64_v_m
vle64_v
__builtin_rvv_vsuxseg5ei64_v
__builtin_rvv_vsuxseg5ei64_v_m
__builtin_rvv_vsuxseg7ei64_v
vse32_v
__builtin_rvv_vsuxseg2ei8_v
__builtin_rvv_vsuxseg2ei8_v_m
-fobjc-msgsend-selector-stubs
vlse16_v
__builtin_rvv_vloxei16_v_ta
__builtin_rvv_vloxei16_v_tu
__builtin_rvv_vloxei16_v_tama
vfclass_v
__builtin_rvv_vloxei32_v_tumu
__builtin_rvv_vloxei32_v_tuma
__builtin_rvv_vloxei32_v_tamu
vfcvt_f
__builtin_rvv_vsoxseg4ei8_v
__builtin_rvv_vsoxseg4ei8_v_m
__builtin_rvv_vsoxseg6ei8_v
vfcvt_rtz_x_f_v
__builtin_rvv_vloxei64_v_ta
__builtin_rvv_vloxei64_v_tu
-mmlir
vfcvt_rtz_xu_f_v
__builtin_rvv_vsoxseg2ei16_v
__builtin_rvv_vsoxseg2ei16_v_m
__builtin_rvv_vsoxseg4ei16_v
vfcvt_x_f_v
__builtin_rvv_vsoxseg6ei16_v
__builtin_rvv_vsoxseg6ei16_v_m
__builtin_rvv_vsoxseg7ei16_v_m
vfcvt_xu_f_v
__builtin_rvv_vsoxseg3ei32_v
__builtin_rvv_vsoxseg3ei32_v_m
__builtin_rvv_vsoxseg5ei32_v
vfirst_m
__builtin_rvv_vsoxseg6ei32_v_m
vfncvt_f_f_w
-fobjc-nonfragile-abi-version=
vfncvt_f
__builtin_rvv_vsoxseg4ei64_v
__builtin_rvv_vsoxseg4ei64_v_m
__builtin_rvv_vsoxseg6ei64_v
vfncvt_f_xu_w
__builtin_rvv_vsoxseg8ei64_v
__builtin_rvv_vsoxseg8ei64_v_m
__builtin_rvv_vadd_vx_tu
vfncvt_rod_f
__builtin_rvv_vsub_vv_ta
__builtin_rvv_vsub_vv_tu
__builtin_rvv_vsub_vv_tama
vfncvt_rtz_x
__builtin_rvv_vsub_vx_tumu
__builtin_rvv_vsub_vx_tuma
-mmovbe
vfncvt_rtz_xu
__builtin_rvv_vrsub_vx_tama
__builtin_rvv_vrsub_vx_tamu
__builtin_rvv_vwaddu_vx_tumu
vfncvt_x
__builtin_rvv_vwsubu_vv_ta
__builtin_rvv_vwsubu_vv_tu
__builtin_rvv_vwsubu_vv_tuma
vfncvt_xu
__builtin_rvv_vwsubu_vx_tumu
__builtin_rvv_vwsubu_vx_tuma
__builtin_rvv_vwadd_vv_ta
vfrsqrt7_v
__builtin_rvv_vwadd_vv_tama
__builtin_rvv_vwadd_vv_tamu
-fobjc-relative-method-lists
vfwcvt_f_f_v
__builtin_rvv_vwsub_vv_ta
__builtin_rvv_vwsub_vv_tu
__builtin_rvv_vwsub_vv_tama
vfwcvt_f_x_v
__builtin_rvv_vwsub_vx_tumu
__builtin_rvv_vwsub_vx_tuma
__builtin_rvv_vwsub_vx_tamu
vfwcvt_rtz_x_f_v
__builtin_rvv_vwaddu_wx_tama
__builtin_rvv_vwaddu_wx_tamu
__builtin_rvv_vwsubu_wv_tumu
vfwcvt_rtz_xu_f_v
__builtin_rvv_vwsubu_wx_ta
__builtin_rvv_vwsubu_wx_tu
-mms-bitfields
vfwcvt_x_f_v
__builtin_rvv_vwadd_wv_tumu
__builtin_rvv_vwadd_wv_tuma
__builtin_rvv_vwadd_wx_ta
vfwcvt_xu_f_v
__builtin_rvv_vwadd_wx_tama
__builtin_rvv_vwadd_wx_tamu
__builtin_rvv_vwsub_wv_tu
vlm_v
__builtin_rvv_vwsub_wx_ta
__builtin_rvv_vwsub_wx_tu
__builtin_rvv_vwsub_wx_tama
vlmul_ext
__builtin_rvv_vwcvt_x_x_v_tumu
vlmul_trunc_v
-fobjc-runtime-has-weak
vlmul_trunc
__builtin_rvv_vsbc_vvm_ta
__builtin_rvv_vsbc_vvm_tu
__builtin_rvv_vmadc_vvm
vmandn_mm
__builtin_rvv_vmsbc_vvm
__builtin_rvv_vmsbc_vxm
__builtin_rvv_vmsbc_vx
vmnand_mm
__builtin_rvv_vand_vv_tama
__builtin_rvv_vand_vv_tamu
__builtin_rvv_vand_vx_tumu
vmor_mm
__builtin_rvv_vxor_vv_ta
__builtin_rvv_vxor_vv_tu
-mmt
vmsbf_m
__builtin_rvv_vxor_vx_tumu
__builtin_rvv_vxor_vx_tuma
__builtin_rvv_vor_vv_ta
vmsif_m
__builtin_rvv_vor_vv_tama
__builtin_rvv_vor_vv_tamu
__builtin_rvv_vor_vx_tu
vmxnor_mm
__builtin_rvv_vsll_vv_ta
__builtin_rvv_vsll_vv_tu
__builtin_rvv_vsll_vv_tama
vreinterpret_v
__builtin_rvv_vsll_vx_tumu
__builtin_rvv_vsll_vx_tuma
-fobjc-runtime=
vsext_vf4
__builtin_rvv_vsrl_vv_tama
__builtin_rvv_vsrl_vv_tamu
__builtin_rvv_vsrl_vx_tumu
vsm_v
__builtin_rvv_vsra_vv_ta
__builtin_rvv_vsra_vv_tu
__builtin_rvv_vsra_vv_tuma
vzext_vf2
__builtin_rvv_vsra_vx_tumu
__builtin_rvv_vsra_vx_tuma
__builtin_rvv_vnsrl_wv_ta
vzext_vf8
__builtin_rvv_vnsrl_wv_tama
__builtin_rvv_vnsrl_wv_tamu
-mmwaitx
UNREFERENCED_PARAMETER
__builtin_rvv_vnsra_wv_ta
__builtin_rvv_vnsra_wv_tu
__builtin_rvv_vnsra_wv_tama
continue
__builtin_rvv_vnsra_wx_tumu
__builtin_rvv_vnsra_wx_tuma
__builtin_rvv_vnsra_wx_tamu
count
__builtin_rvv_vncvt_x_x_w_tama
__builtin_rvv_vncvt_x_x_w_tamu
__builtin_rvv_vmseq_vv_ma
__begin
-fdiagnostics-show-hotness
__end
-fobjc-sender-dependent-dispatch
literal
__builtin_rvv_vmsne_vx_ma
__builtin_rvv_vmsne_vx_mu
__builtin_rvv_vmsltu_vv_ma
'__try'
__builtin_rvv_vmsltu_vx_ma
__builtin_rvv_vmsltu_vx_mu
__builtin_rvv_vmslt_vv_tumu
'try'
__builtin_rvv_vmslt_vx_ma
__builtin_rvv_vmslt_vx_mu
__builtin_rvv_vmsleu_vv_ma
__context
__builtin_rvv_vmsleu_vx_ma
__builtin_rvv_vmsleu_vx_mu
-mno-3dnowa
Objective-C @finally statement
__builtin_rvv_vmsle_vx_ma
__builtin_rvv_vmsle_vx_mu
__builtin_rvv_vmsgtu_vv_ma
unwind
__builtin_rvv_vmsgtu_vx_ma
__builtin_rvv_vmsgtu_vx_mu
__builtin_rvv_vmsgt_vv_tumu
[[clang::always_inline]]
__builtin_rvv_vmsgt_vx_ma
__builtin_rvv_vmsgt_vx_mu
__builtin_rvv_vmsgeu_vv_ma
template 
__builtin_rvv_vwaddu_wv_tumu
__builtin_rvv_vwaddu_wv_tuma
Allow Objective-C array and dictionary subscripting in legacy runtime
[with 
__builtin_rvv_vmsgeu_vx
__builtin_rvv_vmsgeu_vx_tumu
__builtin_rvv_vmsge_vv
(anonymous)
__builtin_rvv_vmsge_vx
__builtin_rvv_vmsge_vx_tumu
__builtin_rvv_vmsge_vx_mu
instantiating class definition
__builtin_rvv_vminu_vv_tama
__builtin_rvv_vminu_vv_tamu
__builtin_rvv_vminu_vx_tumu
instantiating default member init
__builtin_rvv_vmin_vv_ta
__builtin_rvv_vmin_vv_tu
Disable SVR4-style position-independent code (Mips only)
InstantiateFunction
__builtin_rvv_vmin_vx_tumu
__builtin_rvv_vmin_vx_tuma
__builtin_rvv_vmaxu_vv_ta
instantiating variable initializer
__builtin_rvv_vmaxu_vv_tama
__builtin_rvv_vmaxu_vv_tamu
__builtin_rvv_vmaxu_vx_tu
matrix
__builtin_rvv_vmax_vv_ta
__builtin_rvv_vmax_vv_tu
__builtin_rvv_vmax_vv_tama
matrix column
__builtin_rvv_vmax_vx_tumu
_Nonnull
Enable ARC-style weak references in Objective-C
_Nullable
__builtin_rvv_vmul_vv_tama
__builtin_rvv_vmul_vv_tamu
__builtin_rvv_vmul_vx_tumu
_Null_unspecified
__builtin_rvv_vmulh_vv_ta
__builtin_rvv_vmulh_vv_tu
__builtin_rvv_vmulh_vv_tuma
__builtin_rvv_vmulh_vx_tumu
__builtin_rvv_vmulh_vx_tuma
__builtin_rvv_vmulhu_vv_ta
__bf16
__builtin_rvv_vmulhu_vv_tama
__builtin_rvv_vmulhu_vv_tamu
-mno-amdgpu-ieee
__float128
__builtin_rvv_vmulhsu_vv_ta
__builtin_rvv_vmulhsu_vv_tu
__builtin_rvv_vmulhsu_vv_tama
cl_khr_3d_image_writes and __opencl_c_3d_image_writes
__builtin_rvv_vmulhsu_vx_ta
__builtin_rvv_vmulhsu_vx_tu
__builtin_rvv_vmulhsu_vx_tuma
autoreleasing
__builtin_rvv_vdivu_vv_tumu
__builtin_rvv_vdivu_vv_tuma
__builtin_rvv_vdivu_vx_ta
'neon' or 'mve'
__builtin_rvv_vdivu_vx_tama
__builtin_rvv_vdivu_vx_tamu
Enable ODR hash checking for attributes 
isa-pointer
__builtin_rvv_vdiv_vx_ta
__builtin_rvv_vdiv_vx_tu
__builtin_rvv_vdiv_vx_tama
'__ptr32'
__builtin_rvv_vremu_vv_tumu
__builtin_rvv_vremu_vv_tuma
__builtin_rvv_vremu_vv_tamu
'__sptr'
__builtin_rvv_vremu_vx_tama
__builtin_rvv_vremu_vx_tamu
__builtin_rvv_vrem_vv_tumu
'static'
__builtin_rvv_vrem_vx_ta
__builtin_rvv_vrem_vx_tu
-mno-atomics
'address_space'
__builtin_rvv_vwmul_vv_tumu
__builtin_rvv_vwmul_vv_tuma
__builtin_rvv_vwmul_vx_ta
_private
__builtin_rvv_vwmul_vx_tama
__builtin_rvv_vwmul_vx_tamu
__builtin_rvv_vwmulu_vv_tu
_private.
__builtin_rvv_vwmulu_vx_ta
__builtin_rvv_vwmulu_vx_tu
__builtin_rvv_vwmulu_vx_tama
IDENTIFIER_BLOCK
__builtin_rvv_vwmulsu_vv_tu
IDENTIFIER_DATA
Set LTO mode for offload compilation
OBJC_CONTEXT_BLOCK
__builtin_rvv_vwmulsu_vx_tama
__builtin_rvv_vwmulsu_vx_tamu
__builtin_rvv_vmacc_vv_tumu
OBJC_PROPERTY_BLOCK
__builtin_rvv_vmacc_vx_tu
__builtin_rvv_vmacc_vx_ta
__builtin_rvv_vmacc_vx_tuma
OBJC_METHOD_BLOCK
__builtin_rvv_vnmsac_vv_tumu
__builtin_rvv_vnmsac_vv_tuma
__builtin_rvv_vsuxei8_v
OBJC_SELECTOR_BLOCK
__builtin_rvv_vnmsac_vx_tumu
__builtin_rvv_vnmsac_vx_tuma
-mno-avx512bw
GLOBAL_VARIABLE_BLOCK
__builtin_rvv_vmadd_vv_tama
__builtin_rvv_vmadd_vv_tamu
__builtin_rvv_vmadd_vx_tumu
GLOBAL_FUNCTION_BLOCK
__builtin_rvv_vnmsub_vv_tu
__builtin_rvv_vnmsub_vv_ta
__builtin_rvv_vnmsub_vv_tuma
Availability
__builtin_rvv_vnmsub_vx_tumu
__builtin_rvv_vnmsub_vx_tuma
__builtin_rvv_vwmaccu_vv_tu
SwiftInferImportAsMember
__builtin_rvv_vwmaccu_vv_tama
__builtin_rvv_vwmaccu_vv_tamu
Enable LTO in 'full' mode for offload compilation
__builtin_rvv_vwmacc_vv_tu
__builtin_rvv_vwmacc_vv_ta
__builtin_rvv_vwmacc_vv_tama
nonswift
__builtin_rvv_vwmacc_vx_tumu
__builtin_rvv_vwmacc_vx_tuma
__builtin_rvv_vwmacc_vx_tamu
<none>
__builtin_rvv_vwmaccsu_vv_tama
__builtin_rvv_vwmaccsu_vv_tamu
__builtin_rvv_vwmaccsu_vx_tumu
Protocols
__builtin_rvv_vwmaccus_vx_tu
__builtin_rvv_vwmaccus_vx_ta
-mno-avx512fp16
Globals
__builtin_rvv_vmerge_vxm_ta
__builtin_rvv_vmerge_vxm_tu
__builtin_rvv_vmv_v_x_ta
Tags
__builtin_rvv_vsaddu_vv_tumu
__builtin_rvv_vsaddu_vv_tuma
__builtin_rvv_vsaddu_vv_tamu
AuditedForNullability
__builtin_rvv_vsaddu_vx_tama
__builtin_rvv_vsaddu_vx_tamu
__builtin_rvv_vsadd_vv_tumu
SwiftName
__builtin_rvv_vsadd_vx_ta
SwiftBridge
-fopenacc
NSErrorDomain
__builtin_rvv_vssubu_vv_tumu
__builtin_rvv_vssubu_vv_tuma
__builtin_rvv_vssubu_vx_ta
SwiftObjCMembers
__builtin_rvv_vssubu_vx_tama
__builtin_rvv_vssubu_vx_tamu
__builtin_rvv_vssub_vv_tu
Properties
__builtin_rvv_vssub_vx_ta
__builtin_rvv_vssub_vx_tu
__builtin_rvv_vssub_vx_tama
MethodKind
__builtin_rvv_vaaddu_vv_tumu
__builtin_rvv_vaaddu_vv_tuma
-mno-avx512vbmi2
Nullability
__builtin_rvv_vaaddu_vx_tama
__builtin_rvv_vaaddu_vx_tamu
__builtin_rvv_vaadd_vv_tumu
RetainCountConvention
__builtin_rvv_vaadd_vx_ta
__builtin_rvv_vaadd_vx_tu
__builtin_rvv_vaadd_vx_tuma
DesignatedInit
__builtin_rvv_vasubu_vv_tumu
__builtin_rvv_vasubu_vv_tuma
__builtin_rvv_vasubu_vx_ta
SuppressDirect
__builtin_rvv_vasubu_vx_tama
__builtin_rvv_vasubu_vx_tamu
-fopenmp-assume-no-nested-parallelism
Instance
__builtin_rvv_vasub_vx_ta
__builtin_rvv_vasub_vx_tu
__builtin_rvv_vasub_vx_tama
NoEscape
__builtin_rvv_vsmul_vv_tumu
__builtin_rvv_vsmul_vv_tuma
__builtin_rvv_vsmul_vv_tamu
Optional
__builtin_rvv_vsmul_vx_tama
__builtin_rvv_vsmul_vx_tamu
__builtin_rvv_vssrl_vv_tumu
NullableResult
__builtin_rvv_vssrl_vx_ta
__builtin_rvv_vssrl_vx_tu
-mno-avx512vp2intersect
__builtin_rvv_vssra_vv_tumu
__builtin_rvv_vssra_vv_tuma
__builtin_rvv_vssra_vx_ta
__builtin_rvv_vssra_vx_tama
__builtin_rvv_vssra_vx_tamu
__builtin_rvv_vnclipu_wv_tu
CFReturnsNotRetained
__builtin_rvv_vnclipu_wx_ta
__builtin_rvv_vnclipu_wx_tu
__builtin_rvv_vnclipu_wx_tama
NSReturnsNotRetained
-fdiagnostics-show-location=
-fopenmp-assume-no-thread-state
__builtin_rvv_vnclip_wx_tama
__builtin_rvv_vnclip_wx_tamu
__builtin_rvv_vfadd_vv_tumu
SwiftImportAsAccessors
__builtin_rvv_vfadd_vf_ta
__builtin_rvv_vfadd_vf_tu
__builtin_rvv_vfadd_vf_tuma
FlagEnum
__builtin_rvv_vfsub_vv_tumu
__builtin_rvv_vfsub_vv_tuma
__builtin_rvv_vfsub_vf_ta
open
__builtin_rvv_vfsub_vf_tama
__builtin_rvv_vfsub_vf_tamu
-mno-backchain
CFEnum
__builtin_rvv_vfwadd_vv_ta
__builtin_rvv_vfwadd_vv_tu
__builtin_rvv_vfwadd_vv_tama
CFOptions
__builtin_rvv_vfwadd_vf_tumu
__builtin_rvv_vfwadd_vf_tuma
__builtin_rvv_vfwadd_vf_tamu
CFClosedEnum
__builtin_rvv_vfwsub_vv_tama
__builtin_rvv_vfwsub_vv_tamu
__builtin_rvv_vfwsub_vf_ta
SwiftWrapper
__builtin_rvv_vfwsub_vf_tama
__builtin_rvv_vfwsub_vf_tamu
-fopenmp-assume-teams-oversubscription
multiple definitions of protocol '
__builtin_rvv_vfwadd_wf_ta
__builtin_rvv_vfwadd_wf_tu
__builtin_rvv_vfwadd_wf_tama
multiple definitions of global function '
__builtin_rvv_vfwsub_wv_tumu
__builtin_rvv_vfwsub_wv_tuma
__builtin_rvv_vfwsub_wv_tamu
multiple definitions Of tag '
__builtin_rvv_vfwsub_wf_tama
__builtin_rvv_vfwsub_wf_tamu
__builtin_rvv_vfmul_vv_tumu
cannot mix EnumKind and FlagEnum (for 
__builtin_rvv_vfmul_vf_ta
__builtin_rvv_vfmul_vf_tu
-mno-bti-at-return-twice
duplicate definition of method '
__builtin_rvv_vfdiv_vv_tumu
__builtin_rvv_vfdiv_vv_tuma
__builtin_rvv_vfdiv_vf_ta
duplicate definition of instance property '
__builtin_rvv_vfdiv_vf_tama
__builtin_rvv_vfdiv_vf_tamu
__builtin_rvv_vfrdiv_vf_tu
selector 
__builtin_rvv_vfwmul_vv_ta
__builtin_rvv_vfwmul_vv_tu
__builtin_rvv_vfwmul_vv_tama
'FactoryAsInit' is no longer valid; use 'SwiftName' instead
__builtin_rvv_vfwmul_vf_tumu
availability message for available API '
-fopenmp-cuda-blocks-per-sm=
' will not be used
__builtin_rvv_vfmacc_vv_tama
__builtin_rvv_vfmacc_vv_tamu
__builtin_rvv_vfmacc_vf_tumu
 does not fit
__builtin_rvv_vfnmacc_vv_tu
__builtin_rvv_vfnmacc_vv_ta
__builtin_rvv_vfnmacc_vv_tuma
<#code#>
break;
__builtin_rvv_vfnmacc_vf_tumu
__builtin_rvv_vfnmacc_vf_tuma
__builtin_rvv_vfmsac_vv_tu
dispatch_sync
__builtin_rvv_vfmsac_vv_tama
__builtin_rvv_vfmsac_vv_tamu
-mno-cldemote
libcxx03 std::call_once implementation, skipping.
__builtin_rvv_vfnmsac_vv_tu
__builtin_rvv_vfnmsac_vv_ta
__builtin_rvv_vfnmsac_vv_tama
__state_
__builtin_rvv_vfnmsac_vf_tumu
__builtin_rvv_vfnmsac_vf_tuma
__builtin_rvv_vfnmsac_vf_tamu
completionHandler
__builtin_rvv_vfmadd_vv_tama
__builtin_rvv_vfmadd_vv_tamu
__builtin_rvv_vfmadd_vf_tumu
withCompletionHandler
__builtin_rvv_vfnmadd_vv_tu
__builtin_rvv_vfnmadd_vv_ta
-fopenmp-cuda-number-of-sm=
completionBlock
__builtin_rvv_vfnmadd_vf_tumu
__builtin_rvv_vfnmadd_vf_tuma
__builtin_rvv_vfmsub_vv_tu
replyTo
__builtin_rvv_vfmsub_vv_tama
__builtin_rvv_vfmsub_vv_tamu
__builtin_rvv_vfmsub_vf_ta
withReplyTo
__builtin_rvv_vfnmsub_vv_tu
__builtin_rvv_vfnmsub_vv_ta
__builtin_rvv_vfnmsub_vv_tama
WithCompletion
__builtin_rvv_vfnmsub_vf_tumu
__builtin_rvv_vfnmsub_vf_tuma
-mno-cmpb
WithReplyTo
__builtin_rvv_vfwmacc_vv_tama
__builtin_rvv_vfwmacc_vv_tamu
__builtin_rvv_vfwmacc_vf_tumu
cancel
__builtin_rvv_vfwnmacc_vv_tu
__builtin_rvv_vfwnmacc_vv_ta
__builtin_rvv_vfwnmacc_vv_tuma
done
__builtin_rvv_vfwnmacc_vf_tumu
__builtin_rvv_vfwnmacc_vf_tuma
__builtin_rvv_vfwmsac_vv_tu
success
__builtin_rvv_vfwmsac_vv_tuma
dispatch_async
-fopenmp-enable-irbuilder
dispatch_async_and_wait
__builtin_rvv_vfwnmsac_vv_tu
__builtin_rvv_vfwnmsac_vv_ta
__builtin_rvv_vfwnmsac_vv_tama
dispatch_sync
__builtin_rvv_vfwnmsac_vf_tumu
__builtin_rvv_vfwnmsac_vf_tuma
__builtin_rvv_vfwnmsac_vf_tamu
dispatch_barrier_async
__builtin_rvv_vfmin_vv_tama
__builtin_rvv_vfmin_vv_tamu
__builtin_rvv_vfmin_vf_tumu
dispatch_barrier_sync
__builtin_rvv_vfmax_vv_ta
__builtin_rvv_vfmax_vv_tu
-mno-constructor-aliases
__builtin_rvv_vfmax_vf_tumu
__builtin_rvv_vfmax_vf_tuma
__builtin_rvv_vfsgnj_vv_ta
catch (
__builtin_rvv_vfsgnj_vv_tama
__builtin_rvv_vfsgnj_vv_tamu
__builtin_rvv_vfsgnj_vf_tu
for (
__builtin_rvv_vfsgnjn_vv_ta
__builtin_rvv_vfsgnjn_vv_tu
__builtin_rvv_vfsgnjn_vv_tama
goto *
__builtin_rvv_vfsgnjn_vf_tumu
__builtin_rvv_vfsgnjn_vf_tuma
-fopenmp-extensions
__builtin_rvv_vfsgnjx_vv_tama
__builtin_rvv_vfsgnjx_vv_tamu
__builtin_rvv_vfsgnjx_vf_tumu
unconsumed
__builtin_rvv_vfabs_v_ta
__builtin_rvv_vfabs_v_tu
__builtin_rvv_vfabs_v_tuma
raise
__builtin_rvv_vmfeq_vv_ma
__builtin_rvv_vmfeq_vv_mu
__builtin_rvv_vmfeq_vf_ma
format
__builtin_rvv_vmfne_vv_ma
__builtin_rvv_vmfne_vv_mu
-mno-crc
__builtin_rvv_vmflt_vv_ma
__builtin_rvv_vmflt_vv_mu
__builtin_rvv_vmflt_vf_ma
#undefined
__builtin_rvv_vmfle_vv_ma
__builtin_rvv_vmfle_vv_mu
__builtin_rvv_vmfle_vf_tumu
#vref
__builtin_rvv_vmfgt_vv_ma
__builtin_rvv_vmfgt_vv_mu
__builtin_rvv_vmfgt_vf_ma
__builtin_rvv_vmfge_vv_ma
-fopenmp-host-ir-file-path
new 
__builtin_rvv_vfmv_v_f_ta
__builtin_rvv_vfmv_v_f_tu
__builtin_rvv_vredsum_vs_tumu
cast[
__builtin_rvv_vredmaxu_vs_ta
__builtin_rvv_vredmaxu_vs_tumu
__builtin_rvv_vredmaxu_vs_tam
truncNum
__builtin_rvv_vredmax_vs_tam
__builtin_rvv_vredminu_vs_tu
__builtin_rvv_vredminu_vs_tum
toInt
__builtin_rvv_vredmin_vs_tumu
__builtin_rvv_vredmin_vs_tum
Specify WGP wavefront execution mode (AMDGPU only)
__builtin_rvv_vredor_vs_tu
__builtin_rvv_vredor_vs_ta
__builtin_rvv_vredor_vs_tam
__builtin_rvv_vredxor_vs_tum
__builtin_rvv_vredxor_vs_tam
__builtin_rvv_vwredsum_vs_ta
let 
__builtin_rvv_vwredsumu_vs_ta
__builtin_rvv_vwredsumu_vs_tumu
__builtin_rvv_vfredmax_vs_tu
phi(
__builtin_rvv_vfredmax_vs_tam
__builtin_rvv_vfredmin_vs_tu
-fopenmp-implicit-rpath
BB_null
__builtin_rvv_vfredusum_vs_tumu
__builtin_rvv_vfredusum_vs_tum
__builtin_rvv_vfredosum_vs_ta
__builtin_rvv_vfwredusum_vs_tu
__builtin_rvv_vfwredusum_vs_ta
__builtin_rvv_vfwredusum_vs_tum
__builtin_rvv_vfwredosum_vs_tum
__builtin_rvv_vfwredosum_vs_tam
__builtin_rvv_viota_m_tu
 else 
__builtin_rvv_viota_m_tamu
__builtin_rvv_vid_v_ta
-mno-dspr2
#lit
__builtin_rvv_vmv_s_x_tu
__builtin_rvv_vmv_s_x_ta
__builtin_rvv_vfmv_s_f_ta
__builtin_rvv_vslideup_vx_ta
__builtin_rvv_vslideup_vx_tumu
__builtin_rvv_vslideup_vx_tama
__builtin_rvv_vslidedown_vx_tuma
__builtin_rvv_vslidedown_vx_tama
__builtin_rvv_vslide1up_vx_tu
-fdebug-unparse-no-sema
-fopenmp-is-device
__builtin_rvv_vsse8_v_m
__builtin_rvv_vslide1down_vx_ta
__builtin_rvv_vslide1down_vx_tuma
__builtin_rvv_vfslide1down_vf_tu
__builtin_rvv_vfslide1down_vf_tumu
__builtin_rvv_vfslide1down_vf_tama
__builtin_rvv_vrgather_vv_tuma
__builtin_rvv_vrgather_vv_tama
__builtin_rvv_vrgather_vx_tu
__builtin_rvv_vrgather_vx_tamu
__builtin_rvv_vrgatherei16_vv_ta
-mno-enqcmd
__builtin_rvv_vcompress_vm_ta
__builtin_rvv_vget_v
__builtin_rvv_vsoxei8_v_m
__builtin_rvv_vsoxei32_v_m
__builtin_rvv_vsoxei64_v
__builtin_rvv_vlseg2e8_v_ta
__builtin_rvv_vlseg2e8_v_tamu
__builtin_rvv_vle16ff_v_ta
__builtin_rvv_vle16ff_v_tuma
Decrement
__builtin_rvv_vle32ff_v_tu
__builtin_rvv_vle32ff_v_tumu
-fopenmp-new-driver
PointerArithmetic
__builtin_rvv_vle64ff_v_tuma
__builtin_rvv_vle64ff_v_tama
__builtin_rvv_vlseg3e8_v_tu
ULCArraySubscript
__builtin_rvv_vlseg3e8_v_tamu
__builtin_rvv_vlseg4e8_v_ta
__builtin_rvv_vlseg4e8_v_tumu
UPCAddressofArraySubscript
__builtin_rvv_vlseg5e8_v_tu
__builtin_rvv_vlseg5e8_v_tumu
__builtin_rvv_vlseg5e8_v_tamu
PointerCtxAccess
__builtin_rvv_vle8_v_tuma
__builtin_rvv_vle8_v_tama
-mno-extended-const
any_ds
__builtin_rvv_vlseg6e8_v_tamu
__builtin_rvv_vlseg7e8_v_ta
__builtin_rvv_vlseg7e8_v_tuma
BaseDRE
__builtin_rvv_vlseg8e8_v_tu
__builtin_rvv_vlseg8e8_v_tumu
__builtin_rvv_vlseg8e8_v_tama
AddressofArraySubscriptUnderUPC
__builtin_rvv_vlseg2e16_v_tuma
__builtin_rvv_vlseg2e16_v_tama
__builtin_rvv_vlseg3e16_v_tu
DerefOp
__builtin_rvv_vlseg3e16_v_tamu
ParenExpr
-fopenmp-offload-mandatory
AddOp
__builtin_rvv_vlseg5e16_v_tu
__builtin_rvv_vlseg5e16_v_tumu
__builtin_rvv_vlseg5e16_v_tamu
PtrAccess
__builtin_rvv_vlseg6e16_v_tuma
__builtin_rvv_vlseg6e16_v_tama
__builtin_rvv_vlseg7e16_v_ta
ptrAddPtr
__builtin_rvv_vlseg7e16_v_tamu
__builtin_rvv_vlseg8e16_v_ta
__builtin_rvv_vlseg8e16_v_tuma
std::span<
__builtin_rvv_vlseg2e32_v_tu
__builtin_rvv_vlseg2e32_v_tumu
-mno-fix-cmse-cve-2021-35465
__builtin_rvv_vlseg3e32_v_tuma
__builtin_rvv_vlseg3e32_v_tama
__builtin_rvv_vlseg4e32_v_tu
, <# size #>)
__builtin_rvv_vlseg4e32_v_tamu
__builtin_rvv_vlseg5e32_v_ta
__builtin_rvv_vlseg5e32_v_tumu
placeholder
__builtin_rvv_vlseg6e32_v_tu
__builtin_rvv_vlseg6e32_v_tumu
__builtin_rvv_vlseg6e32_v_tamu
span
__builtin_rvv_vlseg7e32_v_tuma
__builtin_rvv_vlseg7e32_v_tama
-fopenmp-optimistic-collapse
void()
__builtin_rvv_vlseg8e32_v_tamu
__builtin_rvv_vlseg2e64_v_ta
__builtin_rvv_vlseg2e64_v_tuma
<uninitialized>
__builtin_rvv_vlseg3e64_v_tu
__builtin_rvv_vlseg3e64_v_tumu
__builtin_rvv_vlseg3e64_v_tama
(char*)
__builtin_rvv_vlseg4e64_v_tuma
__builtin_rvv_vlseg4e64_v_tama
__builtin_rvv_vlseg5e64_v_tu
__builtin_rvv_vlseg5e64_v_tamu
__builtin_rvv_vlseg6e64_v_ta
-mno-fix-cortex-a57-aes-1742098
...}
__builtin_rvv_vlseg7e64_v_tu
__builtin_rvv_vlseg7e64_v_tumu
__builtin_rvv_vlseg7e64_v_tamu
__builtin_rvv_vlseg8e64_v_tuma
__builtin_rvv_vlseg8e64_v_tama
__builtin_rvv_vlseg3e8ff_v_ta
__builtin_rvv_vlseg3e8ff_v_tamu
__builtin_rvv_vlseg4e8ff_v_ta
__builtin_rvv_vlseg4e8ff_v_tuma
__builtin_rvv_vlseg5e8ff_v_ta
-fopenmp-simd
;{}#@
__builtin_rvv_vlseg6e8ff_v_tuma
__builtin_rvv_vlseg6e8ff_v_tama
__builtin_rvv_vlseg7e8ff_v_tu
 types total.
__builtin_rvv_vlseg7e8ff_v_tamu
__builtin_rvv_vlseg8e8ff_v_ta
__builtin_rvv_vlseg8e8ff_v_tumu
 types, 
__builtin_rvv_vlseg2e16ff_v_tu
__builtin_rvv_vlseg2e16ff_v_tumu
__builtin_rvv_vlseg2e16ff_v_tamu
 bytes)
__builtin_rvv_vlseg3e16ff_v_tuma
__builtin_rvv_vlseg3e16ff_v_tama
-mno-float128
ConstantArray
__builtin_rvv_vlseg4e16ff_v_tamu
__builtin_rvv_vlseg5e16ff_v_ta
__builtin_rvv_vlseg5e16ff_v_tuma
IncompleteArray
__builtin_rvv_vlseg6e16ff_v_tu
__builtin_rvv_vlseg6e16ff_v_tumu
__builtin_rvv_vlseg6e16ff_v_tama
Atomic
__builtin_rvv_vlseg7e16ff_v_tuma
__builtin_rvv_vlseg7e16ff_v_tama
__builtin_rvv_vlseg8e16ff_v_tu
BTFTagAttributed
__builtin_rvv_vlseg8e16ff_v_tamu
__builtin_rvv_vlseg2e32ff_v_ta
-fopenmp-target-debug=
BlockPointer
__builtin_rvv_vlseg3e32ff_v_tu
__builtin_rvv_vlseg3e32ff_v_tumu
__builtin_rvv_vlseg3e32ff_v_tamu
Complex
__builtin_rvv_vlseg4e32ff_v_tuma
__builtin_rvv_vlseg4e32ff_v_tama
__builtin_rvv_vlseg5e32ff_v_ta
Auto
__builtin_rvv_vlseg5e32ff_v_tamu
__builtin_rvv_vlseg6e32ff_v_ta
__builtin_rvv_vlseg6e32ff_v_tuma
DependentAddressSpace
__builtin_rvv_vlseg7e32ff_v_tu
__builtin_rvv_vlseg7e32ff_v_tumu
-mno-fprnd
DependentName
__builtin_rvv_vlseg8e32ff_v_tuma
__builtin_rvv_vlseg8e32ff_v_tama
__builtin_rvv_vlseg2e64ff_v_tu
DependentTemplateSpecialization
__builtin_rvv_vlseg2e64ff_v_tamu
__builtin_rvv_vlseg3e64ff_v_ta
__builtin_rvv_vlseg3e64ff_v_tumu
DynamicCountPointer
__builtin_rvv_vlseg4e64ff_v_tu
__builtin_rvv_vlseg4e64ff_v_tumu
__builtin_rvv_vlseg4e64ff_v_tamu
Elaborated
__builtin_rvv_vlseg5e64ff_v_tuma
FunctionNoProto
Enable debugging in the OpenMP offloading device RTL
FunctionProto
__builtin_rvv_vlseg6e64ff_v_tamu
__builtin_rvv_vlseg7e64ff_v_ta
__builtin_rvv_vlseg7e64ff_v_tuma
MacroQualified
__builtin_rvv_vlseg8e64ff_v_tu
__builtin_rvv_vlseg8e64ff_v_tumu
__builtin_rvv_vlseg8e64ff_v_tama
DependentSizedMatrix
__builtin_rvv_vlseg2e8ff_v_tuma
__builtin_rvv_vlseg2e8ff_v_tama
__builtin_rvv_vlsseg3e8_v_tu
ObjCObjectPointer
__builtin_rvv_vlsseg3e8_v_tamu
__builtin_rvv_vlsseg4e8_v_ta
-mno-ginv
ObjCInterface
__builtin_rvv_vlsseg5e8_v_tu
__builtin_rvv_vlsseg5e8_v_tumu
__builtin_rvv_vlsseg5e8_v_tamu
PackExpansion
__builtin_rvv_vlsseg6e8_v_tuma
__builtin_rvv_vlsseg6e8_v_tama
__builtin_rvv_vlsseg7e8_v_ta
Pipe
__builtin_rvv_vlsseg7e8_v_tamu
__builtin_rvv_vlsseg8e8_v_ta
__builtin_rvv_vlsseg8e8_v_tuma
RValueReference
__builtin_rvv_vlsseg2e16_v_tu
__builtin_rvv_vlsseg2e16_v_tumu
-fopenmp-targets=
SubstTemplateTypeParm
__builtin_rvv_vlsseg2e8_v_tuma
__builtin_rvv_vlsseg2e8_v_tama
__builtin_rvv_vlsseg3e16_v_tu
Record
__builtin_rvv_vlsseg3e16_v_tamu
__builtin_rvv_vlsseg4e16_v_ta
__builtin_rvv_vlsseg4e16_v_tumu
TemplateTypeParm
__builtin_rvv_vlsseg5e16_v_tu
__builtin_rvv_vlsseg5e16_v_tumu
__builtin_rvv_vlsseg5e16_v_tamu
TypeOf
__builtin_rvv_vlsseg6e16_v_tuma
__builtin_rvv_vlsseg6e16_v_tama
Do not use GP relative accesses for symbols known to be in a small data section (MIPS)
UnaryTransform
__builtin_rvv_vlsseg7e16_v_tamu
__builtin_rvv_vlsseg8e16_v_ta
__builtin_rvv_vlsseg8e16_v_tuma
Using
__builtin_rvv_vlsseg2e32_v_tu
__builtin_rvv_vlsseg2e32_v_tumu
__builtin_rvv_vlsseg2e32_v_tama
Vector
__builtin_rvv_vlsseg3e32_v_tuma
__builtin_rvv_vlsseg3e32_v_tama
__builtin_rvv_vlsseg4e32_v_tu
Total bytes = 
Print option name with mappable diagnostics
 implicit default constructors created
-fopenmp-use-tls
 implicit copy constructors created
__builtin_rvv_vluxseg2ei8_v_tu
__builtin_rvv_vluxseg2ei8_v_tumu
__builtin_rvv_vluxseg2ei8_v_tamu
 implicit copy assignment operators created
__builtin_rvv_vlsseg6e32_v_tuma
__builtin_rvv_vlsseg6e32_v_tama
__builtin_rvv_vlsseg7e32_v_ta
 implicit destructors created
__builtin_rvv_vlsseg7e32_v_tamu
__builtin_rvv_vlsseg8e32_v_ta
__builtin_rvv_vlsseg8e32_v_tuma
__uint128_t
__builtin_rvv_vlsseg2e64_v_tu
__builtin_rvv_vlsseg2e64_v_tumu
Disable Hexagon HVX IEEE floating-point
__NSConstantString_tag
__builtin_rvv_vlsseg3e64_v_tuma
__builtin_rvv_vlsseg3e64_v_tama
__builtin_rvv_vlsseg4e64_v_tu
__builtin_rvv_vlsseg4e64_v_tamu
__builtin_rvv_vlsseg5e64_v_ta
__builtin_rvv_vlsseg5e64_v_tumu
_swift_rc
__builtin_rvv_vlsseg6e64_v_tu
__builtin_rvv_vlsseg6e64_v_tumu
__builtin_rvv_vlsseg6e64_v_tamu
objc_super
__builtin_rvv_vlsseg7e64_v_tuma
__builtin_rvv_vlsseg7e64_v_tama
Set OpenMP version (e.g. 45 for OpenMP 4.5, 50 for OpenMP 5.0). Default value is 50.
instancetype
__builtin_rvv_vlsseg8e64_v_tamu
__builtin_rvv_vle8ff_v_ta
__builtin_rvv_vle8ff_v_tuma
__builtin_rvv_vsseg2e8_v_m
__builtin_rvv_vluxseg3ei8_v_ta
__builtin_rvv_vluxseg3ei8_v_tumu
objc_object
__builtin_rvv_vluxseg4ei8_v_tu
__builtin_rvv_vluxseg4ei8_v_tumu
__builtin_rvv_vluxseg4ei8_v_tamu
__builtin_rvv_vluxseg5ei8_v_tuma
__builtin_rvv_vluxseg5ei8_v_tama
Disable Hexagon Vector eXtensions
{objc_class=}
__builtin_rvv_vluxseg6ei8_v_tamu
__builtin_rvv_vluxseg7ei8_v_ta
__builtin_rvv_vluxseg7ei8_v_tuma
__builtin_rvv_vluxseg8ei8_v_tu
__builtin_rvv_vluxseg8ei8_v_tumu
__builtin_rvv_vluxseg8ei8_v_tama
__builtin_rvv_vluxseg2ei16_v_tuma
__builtin_rvv_vluxseg2ei16_v_tama
__builtin_rvv_vluxseg3ei16_v_tu
Class
__builtin_rvv_vluxseg3ei16_v_tamu
Protocol
-fopenmp
sse2
__builtin_rvv_vluxseg5ei16_v_tu
__builtin_rvv_vluxseg5ei16_v_tumu
__builtin_rvv_vluxseg5ei16_v_tamu
__make_integer_seq
__builtin_rvv_vluxseg6ei16_v_tuma
__builtin_rvv_vluxseg6ei16_v_tama
__builtin_rvv_vluxseg7ei16_v_ta
__builtin_rvv_vluxseg7ei16_v_tamu
__builtin_rvv_vluxseg8ei16_v_ta
__builtin_rvv_vluxseg8ei16_v_tuma
<objc_object>
__builtin_rvv_vluxseg2ei32_v_tu
__builtin_rvv_vluxseg2ei32_v_tumu
-mno-implicit-sme
__builtin_rvv_vluxseg3ei32_v_tuma
__builtin_rvv_vluxseg3ei32_v_tama
__builtin_rvv_vluxseg4ei32_v_tu
__builtin_rvv_vluxseg4ei32_v_tamu
__builtin_rvv_vluxseg5ei32_v_ta
__builtin_rvv_vluxseg5ei32_v_tumu
__builtin_rvv_vluxseg6ei32_v_tu
__builtin_rvv_vluxseg6ei32_v_tumu
__builtin_rvv_vluxseg6ei32_v_tamu
__builtin_rvv_vluxseg7ei32_v_tuma
__builtin_rvv_vluxseg7ei32_v_tama
-foperator-arrow-depth=
cannot yet @encode type %0
__builtin_rvv_vluxseg8ei32_v_tamu
__builtin_rvv_vluxseg2ei64_v_ta
__builtin_rvv_vluxseg2ei64_v_tuma
__builtin_rvv_vluxseg3ei64_v_tu
__builtin_rvv_vluxseg3ei64_v_tumu
__builtin_rvv_vluxseg3ei64_v_tama
__gr_top
__builtin_rvv_vluxseg4ei64_v_tuma
__builtin_rvv_vluxseg4ei64_v_tama
__builtin_rvv_vluxseg5ei64_v_tu
__gr_offs
__builtin_rvv_vluxseg5ei64_v_tamu
__builtin_rvv_vluxseg6ei64_v_ta
-mno-inline-all-stringops
__builtin_rvv_vluxseg7ei64_v_tu
__builtin_rvv_vluxseg7ei64_v_tumu
__builtin_rvv_vluxseg7ei64_v_tamu
overflow_arg_area
__builtin_rvv_vluxseg8ei64_v_tuma
__builtin_rvv_vluxseg8ei64_v_tama
__builtin_rvv_vssseg2e8_v
gp_offset
__builtin_rvv_vlse8_v_tuma
__builtin_rvv_vlse8_v_tama
__builtin_rvv_vneg_v_tu
__ap
__builtin_rvv_vneg_v_tama
__gpr
Maximum number of 'operator->'s to call for a member access
__fpr
__builtin_rvv_vfneg_v_ta
__builtin_rvv_vfneg_v_tu
__builtin_rvv_vfneg_v_tama
__reg_save_area
__builtin_rvv_vwcvtu_x_x_v_tumu
__builtin_rvv_vwcvtu_x_x_v_tuma
__builtin_rvv_vwcvtu_x_x_v_tamu
__saved_reg_area_end_pointer
__builtin_rvv_vle16_v_tama
__builtin_rvv_vle16_v_tamu
__builtin_rvv_vle32_v_tumu
__builtin_ms_va_list
__builtin_rvv_vle64_v_ta
__builtin_rvv_vle64_v_tu
-mno-kl
address space
__builtin_rvv_vse32_v
__builtin_rvv_vse32_v_m
__builtin_rvv_vlse16_v_ta
the global namespace
__builtin_rvv_vlse16_v_tama
__builtin_rvv_vlse16_v_tamu
__builtin_rvv_vcpop_m_m
block literal
__builtin_rvv_vfclass_v_tama
__builtin_rvv_vfclass_v_tamu
__builtin_rvv_vfcvt_f_x_v_tumu
method 
__builtin_rvv_vfcvt_f_xu_v_ta
__builtin_rvv_vfcvt_f_xu_v_tu
-foptimization-record-file=
' (aka '
__builtin_rvv_vfcvt_rtz_x_f_v_tumu
__builtin_rvv_vfcvt_rtz_x_f_v_tuma
__builtin_rvv_vfcvt_rtz_xu_f_v_ta
' (vector of 
__builtin_rvv_vfcvt_rtz_xu_f_v_tama
__builtin_rvv_vfcvt_rtz_xu_f_v_tamu
__builtin_rvv_vfcvt_x_f_v_tu
(no argument)
__builtin_rvv_vfcvt_xu_f_v_ta
__builtin_rvv_vfcvt_xu_f_v_tu
__builtin_rvv_vfcvt_xu_f_v_tama
 != 
__builtin_rvv_vfncvt_f_f_w_ta
__builtin_rvv_vfncvt_f_f_w_tu
-mno-long-calls
(default) template 
__builtin_rvv_vfncvt_f_x_w_tumu
__builtin_rvv_vfncvt_f_x_w_tuma
__builtin_rvv_vfncvt_f_xu_w_ta
[template 
__builtin_rvv_vfncvt_f_xu_w_tama
__builtin_rvv_vfncvt_f_xu_w_tamu
__builtin_rvv_vfncvt_rod_f_f_w_tu
(no qualifiers) 
__builtin_rvv_vfncvt_rtz_x_f_w_ta
__builtin_rvv_vfncvt_rtz_x_f_w_tu
__builtin_rvv_vfncvt_rtz_x_f_w_tama
(no qualifiers)
__builtin_rvv_vfncvt_rtz_xu_f_w_tumu
-foptimization-record-passes=
 * ...]
__builtin_rvv_vfncvt_x_f_w_tama
__builtin_rvv_vfncvt_x_f_w_tamu
__builtin_rvv_vfncvt_xu_f_w_tumu
previous
__builtin_rvv_vfrec7_v_ta
__builtin_rvv_vfrec7_v_tu
__builtin_rvv_vfrec7_v_tuma
inner
__builtin_rvv_vfrsqrt7_v_tumu
__builtin_rvv_vfrsqrt7_v_tuma
__builtin_rvv_vfsqrt_v_ta
<None>
__builtin_rvv_vfsqrt_v_tama
__builtin_rvv_vfsqrt_v_tamu
Disable control-flow mitigations for Load Value Injection (LVI)
TemplateArgumentLoc
__builtin_rvv_vfwcvt_f_x_v_ta
__builtin_rvv_vfwcvt_f_x_v_tu
__builtin_rvv_vfwcvt_f_x_v_tama
TemplateName
__builtin_rvv_vfwcvt_f_xu_v_tumu
__builtin_rvv_vfwcvt_f_xu_v_tuma
__builtin_rvv_vfwcvt_f_xu_v_tamu
QualType
__builtin_rvv_vfwcvt_rtz_x_f_v_tama
__builtin_rvv_vfwcvt_rtz_x_f_v_tamu
__builtin_rvv_vfwcvt_rtz_xu_f_v_tumu
AdjustedTypeLoc
__builtin_rvv_vfwcvt_x_f_v_ta
__builtin_rvv_vfwcvt_x_f_v_tu
<regex>
ArrayTypeLoc
__builtin_rvv_vfwcvt_xu_f_v_tumu
__builtin_rvv_vfwcvt_xu_f_v_tuma
__builtin_rvv_vlm_v
DependentSizedArrayTypeLoc
__builtin_rvv_vmandn_mm
__builtin_rvv_vmclr_m
__builtin_rvv_vmnor_mm
VariableArrayTypeLoc
__builtin_rvv_vmsbf_m_ma
__builtin_rvv_vmsbf_m_mu
__builtin_rvv_vmsif_m_tumu
AttributedTypeLoc
__builtin_rvv_vmsof_m_tumu
__builtin_rvv_vmsof_m_ma
-mno-lzcnt
BitIntTypeLoc
__builtin_rvv_vsetvlimax
zIzIz
__builtin_rvv_vsext_vf2_tumu
BuiltinTypeLoc
__builtin_rvv_vsext_vf4_ta
__builtin_rvv_vsext_vf4_tu
__builtin_rvv_vsext_vf4_tuma
DecltypeTypeLoc
__builtin_rvv_vsext_vf8_tumu
__builtin_rvv_vsext_vf8_tuma
__builtin_rvv_vsm_v
AutoTypeLoc
-fdebug-unparse-with-symbols
DeducedTemplateSpecializationTypeLoc
-fnew-infallible
DependentAddressSpaceTypeLoc
__builtin_rvv_vzext_vf4_tama
__builtin_rvv_vzext_vf4_tamu
__builtin_rvv_vzext_vf8_tumu
DependentNameTypeLoc
__builtin_riscv_orc_b_32
ZiZi
__builtin_riscv_orc_b_64
DependentTemplateSpecializationTypeLoc
__builtin_riscv_ctz_64
__builtin_riscv_clmul
__builtin_riscv_clmulh
DynamicBoundPointerTypeLoc
zbkx
__builtin_riscv_xperm8
Disable generation of memop instructions
DynamicRangePointerTypeLoc
__builtin_riscv_aes32dsi_32
ZiZiZiIUc
__builtin_riscv_aes64ds_64
FunctionTypeLoc
__builtin_riscv_aes64ks1i_64
WiWiIUi
__builtin_riscv_aes64ks2_64
FunctionProtoTypeLoc
zkne,64bit
__builtin_riscv_aes64esm_64
__builtin_riscv_sha256sig1
MacroQualifiedTypeLoc
ZiZiZi
zknh,32bit
--force-link=
ConstantMatrixTypeLoc
__builtin_riscv_sha512sig0_64
DependentSizedMatrixTypeLoc
Unparse and stop.
MemberPointerTypeLoc
-fnext-runtime
ObjCObjectPointerTypeLoc
SPIR32
SPIR64
+ptx63
ParenTypeLoc
PointerTypeLoc
LValueReferenceTypeLoc
SubstTemplateTypeParmPackTypeLoc
__sparcv8__
__sparc_v9__
-mno-mmx
TagTypeLoc
__ma2455
__ma2080
__ma2485
RecordTypeLoc
__ma2x8x__
__myriad2__
__sparcv9
TemplateTypeParmTypeLoc
supersparc
sparclite
sparclite86x
TypeOfTypeLoc
ultrasparc
ultrasparc3
-mno-movdir64b
UnaryTransformTypeLoc
ma2155
ma2450
ma2080
UsingTypeLoc
ma2x8x
myriad2
myriad2.2
VectorTypeLoc
-fno-aapcs-bitfield-width
ExtVectorTypeLoc
ppc603
__builtin_tbeginc
__builtin_tx_nesting_depth
vULi*ULi
CXXCtorInitializer
V16ScvC*Ii
__builtin_s390_vll
vV16ScUiv*
Decl
__builtin_s390_vpksh
__builtin_s390_vpkshs
__builtin_s390_vpksf
BlockDecl
V4SiV2SLLiV2SLLii*
__builtin_s390_vpklsh
__builtin_s390_vpklsf
ClassScopeFunctionSpecializationDecl
__builtin_s390_vpklsgs
V4UiV2ULLiV2ULLii*
-mno-mpx
ExportDecl
__builtin_s390_vuplf
__builtin_s390_vuplhb
V4UiV8Us
FileScopeAsmDecl
__builtin_s390_vupllh
__builtin_s390_vupllf
__builtin_s390_vacq
FriendTemplateDecl
__builtin_s390_vaccq
__builtin_s390_vacccq
__builtin_s390_vavgf
LifetimeExtendedTemporaryDecl
__builtin_s390_vavglf
__builtin_s390_vavglg
Generate instrumented code to collect order file into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
NamedDecl
__builtin_s390_vceqgs
V2SLLiV2SLLiV2SLLii*
__builtin_s390_vchfs
UsingDecl
__builtin_s390_vchlhs
V8SsV8UsV8Usi*
V4SiV4UiV4Uii*
HLSLBufferDecl
__builtin_s390_vclzh
__builtin_s390_vclzf
__builtin_s390_vctzh
NamespaceDecl
__builtin_s390_verimh
V8UsV8UsV8UsV8UsIi
Disable MSA ASE (MIPS only)
ObjCCompatibleAliasDecl
__builtin_s390_verllf
V4UiV4UiUi
__builtin_s390_verllvb
ObjCCategoryDecl
__builtin_s390_vgfmb
__builtin_s390_vgfmh
__builtin_s390_vgfmg
ObjCCategoryImplDecl
__builtin_s390_vgfmaf
V2ULLiV4UiV4UiV2ULLi
__builtin_s390_vmahb
ObjCInterfaceDecl
__builtin_s390_vmalhh
__builtin_s390_vmalhf
-foverride-record-layout=
ObjCMethodDecl
__builtin_s390_vmaleh
__builtin_s390_vmalef
__builtin_s390_vmaof
TemplateDecl
__builtin_s390_vmhb
__builtin_s390_vmhh
__builtin_s390_vmlhb
ConceptDecl
__builtin_s390_vmef
__builtin_s390_vmleb
__builtin_s390_vmob
ClassTemplateDecl
__builtin_s390_vmloh
__builtin_s390_vmlof
-mno-mutable-globals
TypeAliasTemplateDecl
__builtin_s390_vsbiq
__builtin_s390_vscbib
__builtin_s390_vscbig
TemplateTemplateParmDecl
__builtin_s390_vsldb
__builtin_s390_vsra
__builtin_s390_vsrl
TagDecl
__builtin_s390_vsumgh
V2ULLiV8UsV8Us
V16UcV4UiV4Ui
RecordDecl
__builtin_s390_vfaeb
CXXRecordDecl
ClassTemplateSpecializationDecl
V4UiV4UiV4UiIi
__builtin_s390_vfaefs
__builtin_s390_vfaezbs
TemplateTypeParmDecl
__builtin_s390_vfaezfs
__builtin_s390_vfeeb
V16UcV16UcV16Uci*
ObjCTypeParamDecl
__builtin_s390_vfeefs
V4UiV4UiV4Uii*
__builtin_s390_vfeezh
TypedefDecl
__builtin_s390_vfeneb
__builtin_s390_vfenebs
-mno-nontrapping-fptoint
UnresolvedUsingIfExistsDecl
__builtin_s390_vfenezh
__builtin_s390_vfenezhs
__builtin_s390_vistrb
UsingPackDecl
__builtin_s390_vistrhs
V8UsV8Usi*
__builtin_s390_vistrfs
ConstructorUsingShadowDecl
__builtin_s390_vstrch
__builtin_s390_vstrchs
__builtin_s390_vstrcfs
BindingDecl
__builtin_s390_vstrczh
__builtin_s390_vstrczhs
Set output object file (with /c)
FieldDecl
__builtin_s390_vfidb
V2dV2dIiIi
__builtin_s390_vfmadb
ObjCIvarDecl
V2SLLiV2dIii*
__builtin_s390_vlrl
__builtin_s390_vbperm
CXXDeductionGuideDecl
__builtin_s390_vfmindb
__builtin_s390_vfnmadb
V4SiV4fV4fi*
CXXConstructorDecl
V4fV4fIiIi
__builtin_s390_vfmaxsb
Disable generation of new-value stores
CXXDestructorDecl
__builtin_s390_vfnmasb
__builtin_s390_vfnmssb
V4SiV4fIii*
NonTypeTemplateParmDecl
V16UcV16UcV16UcV16Uci*
__builtin_s390_vstrsh
__builtin_s390_vstrsf
DecompositionDecl
__builtin_s390_vlbrh
__builtin_s390_vlbrf
V4fV8UsIi
OMPCapturedExprDecl
V8UsV4fV4fIi
ParmVarDecl
/fp:except-
VarTemplateSpecializationDecl
arch13
arch14
__zarch__
EnumConstantDecl
-fdirect-access-external-data
IndirectFieldDecl
/fp:except
MSGuidDecl
__TCE__
__TCE_V1__
-export_dynamic
ULifC*fC*
ULifC*
__builtin_ve_vl_extract_vm512u
__builtin_ve_vl_insert_vm512u
UnnamedGlobalConstantDecl
V256dLUivC*Ui
__builtin_ve_vl_vld_vssvl
__builtin_ve_vl_vldnc_vssvl
OMPAllocateDecl
__builtin_ve_vl_vldunc_vssvl
__builtin_ve_vl_vldlsx_vssl
__builtin_ve_vl_vldlsxnc_vssl
OMPThreadPrivateDecl
__builtin_ve_vl_vldlzxnc_vssvl
__builtin_ve_vl_vld2d_vssl
__builtin_ve_vl_vld2dnc_vssvl
PragmaCommentDecl
__builtin_ve_vl_vldu2dnc_vssvl
__builtin_ve_vl_vldl2dsx_vssl
-mno-outline
RequiresExprBodyDecl
__builtin_ve_vl_vldl2dzxnc_vssvl
__builtin_ve_vl_vst_vssl
vV256dLUiv*V256bUi
TranslationUnitDecl
__builtin_ve_vl_vstot_vssml
__builtin_ve_vl_vstncot_vssl
__builtin_ve_vl_vstu_vssl
AsmStmt
__builtin_ve_vl_vstuot_vssml
__builtin_ve_vl_vstuncot_vssl
__builtin_ve_vl_vstl_vssml
MSAsmStmt
__builtin_ve_vl_vstlot_vssml
__builtin_ve_vl_vstlncot_vssl
-mno-packed-stack
CXXCatchStmt
__builtin_ve_vl_vst2dot_vssml
__builtin_ve_vl_vst2dncot_vssl
__builtin_ve_vl_vstu2d_vssml
CXXTryStmt
__builtin_ve_vl_vstu2dot_vssml
__builtin_ve_vl_vstu2dncot_vssl
__builtin_ve_vl_vstl2d_vssl
CompoundStmt
__builtin_ve_vl_vstl2dot_vssml
__builtin_ve_vl_vstl2dncot_vssl
vLivC*Ui
CoreturnStmt
__builtin_ve_vl_lvsl_svs
LUiV256dUi
/fp:strict
DeclStmt
__builtin_ve_vl_lvm_MMss
V512bV512bLUiLUi
__builtin_ve_vl_svm_sMs
ForStmt
__builtin_ve_vl_vbrdd_vsvl
V256ddV256dUi
V256ddV256bV256dUi
IfStmt
__builtin_ve_vl_vbrdl_vsmvl
V256dLiV256bV256dUi
__builtin_ve_vl_vbrds_vsvl
MSDependentExistsStmt
__builtin_ve_vl_vbrdw_vsl
V256diUi
-mno-pascal-strings
OMPCanonicalLoop
__builtin_ve_vl_pvbrd_vsvl
V256dLUiV256dUi
__builtin_ve_vl_vmv_vsvl
OMPAtomicDirective
__builtin_ve_vl_vmv_vsvmvl
V256dUiV256dV256bV256dUi
V256dV256dV256dUi
OMPCancelDirective
V256dLUiV256dV256dUi
__builtin_ve_vl_vaddul_vvvmvl
V256dLUiV256dV256bV256dUi
OMPCriticalDirective
__builtin_ve_vl_vadduw_vsvvl
__builtin_ve_vl_vadduw_vvvmvl
-fpack-struct=
OMPDispatchDirective
V256dV256dV256dV512bV256dUi
__builtin_ve_vl_pvaddu_vsvMvl
__builtin_ve_vl_vaddswsx_vvvvl
OMPInteropDirective
__builtin_ve_vl_vaddswsx_vvvmvl
__builtin_ve_vl_vaddswsx_vsvmvl
__builtin_ve_vl_vaddswzx_vvvl
OMPLoopDirective
__builtin_ve_vl_vaddswzx_vsvmvl
__builtin_ve_vl_pvadds_vvvl
__builtin_ve_vl_pvadds_vsvvl
OMPDistributeParallelForDirective
__builtin_ve_vl_vaddsl_vvvvl
__builtin_ve_vl_vaddsl_vsvl
-mno-pku
OMPDistributeSimdDirective
__builtin_ve_vl_vsubul_vvvvl
__builtin_ve_vl_vsubul_vsvl
__builtin_ve_vl_vsubul_vsvmvl
OMPForSimdDirective
__builtin_ve_vl_vsubuw_vsvvl
__builtin_ve_vl_vsubuw_vvvmvl
__builtin_ve_vl_pvsubu_vvvl
OMPMaskedTaskLoopDirective
__builtin_ve_vl_pvsubu_vsvMvl
__builtin_ve_vl_vsubswsx_vvvl
__builtin_ve_vl_vsubswsx_vsvvl
OMPMasterTaskLoopDirective
__builtin_ve_vl_vsubswzx_vvvvl
OMPMasterTaskLoopSimdDirective
-fpack-struct
OMPParallelForDirective
__builtin_ve_vl_pvsubs_vsvvl
__builtin_ve_vl_pvsubs_vvvMvl
__builtin_ve_vl_vsubsl_vvvvl
OMPParallelGenericLoopDirective
__builtin_ve_vl_vsubsl_vsvmvl
__builtin_ve_vl_vmulul_vvvl
__builtin_ve_vl_vmulul_vsvl
OMPParallelMaskedTaskLoopSimdDirective
__builtin_ve_vl_vmuluw_vvvvl
__builtin_ve_vl_vmuluw_vsvl
__builtin_ve_vl_vmuluw_vsvmvl
OMPParallelMasterTaskLoopSimdDirective
__builtin_ve_vl_vmulswsx_vsvvl
__builtin_ve_vl_vmulswsx_vvvmvl
-mno-power8-vector
OMPTargetParallelForSimdDirective
__builtin_ve_vl_vmulswzx_vsvmvl
__builtin_ve_vl_vmulsl_vvvl
__builtin_ve_vl_vmulsl_vsvvl
OMPTargetSimdDirective
__builtin_ve_vl_vmulslw_vvvvl
__builtin_ve_vl_vmulslw_vsvl
__builtin_ve_vl_vdivul_vvvl
OMPTargetTeamsDistributeParallelForDirective
__builtin_ve_vl_vdivul_vsvmvl
__builtin_ve_vl_vdivuw_vvvl
__builtin_ve_vl_vdivuw_vsvvl
OMPTargetTeamsDistributeSimdDirective
V256dV256dLUiUi
__builtin_ve_vl_vdivul_vvsvl
Force each unsigned fixed point type to have an extra bit of padding to align their scales with those of signed fixed point types
OMPTaskLoopDirective
V256dV256dUiV256dUi
__builtin_ve_vl_vdivuw_vvsmvl
__builtin_ve_vl_vdivswsx_vvvvl
OMPTeamsDistributeDirective
__builtin_ve_vl_vdivswsx_vsvmvl
__builtin_ve_vl_vdivswzx_vvvl
__builtin_ve_vl_vdivswzx_vsvl
OMPTeamsDistributeParallelForSimdDirective
V256dV256diUi
__builtin_ve_vl_vdivswsx_vvsvl
V256dV256diV256bV256dUi
OMPTeamsGenericLoopDirective
__builtin_ve_vl_vdivsl_vvvl
__builtin_ve_vl_vdivsl_vvvvl
-mno-prfchw
OMPTileDirective
__builtin_ve_vl_vdivsl_vvsvl
V256dV256dLiV256dUi
__builtin_ve_vl_vcmpul_vvvl
OMPMaskedDirective
__builtin_ve_vl_vcmpul_vvvmvl
__builtin_ve_vl_vcmpul_vsvmvl
__builtin_ve_vl_vcmpuw_vvvvl
OMPMetaDirective
__builtin_ve_vl_pvcmpu_vvvl
__builtin_ve_vl_pvcmpu_vvvvl
__builtin_ve_vl_pvcmpu_vvvMvl
OMPParallelDirective
__builtin_ve_vl_vcmpswsx_vsvl
OMPParallelMaskedDirective
-fpascal-strings
OMPParallelMasterDirective
__builtin_ve_vl_vcmpswzx_vvvmvl
__builtin_ve_vl_vcmpswzx_vsvmvl
__builtin_ve_vl_pvcmps_vsvl
OMPScanDirective
__builtin_ve_vl_vcmpsl_vvvl
__builtin_ve_vl_vcmpsl_vvvvl
__builtin_ve_vl_vcmpsl_vsvvl
OMPSectionsDirective
__builtin_ve_vl_vmaxswsx_vsvl
__builtin_ve_vl_vmaxswsx_vsvvl
__builtin_ve_vl_vmaxswzx_vvvl
OMPTargetDataDirective
__builtin_ve_vl_vmaxswzx_vvvmvl
__builtin_ve_vl_vmaxswzx_vsvmvl
-mno-rdpru
OMPTargetEnterDataDirective
__builtin_ve_vl_vminswsx_vvvl
__builtin_ve_vl_vminswsx_vvvvl
__builtin_ve_vl_vminswsx_vvvmvl
OMPTargetParallelDirective
__builtin_ve_vl_vminswzx_vsvl
__builtin_ve_vl_vminswzx_vsvvl
__builtin_ve_vl_vminswzx_vsvmvl
OMPTargetTeamsDirective
__builtin_ve_vl_pvmins_vvvMvl
__builtin_ve_vl_pvmins_vsvMvl
__builtin_ve_vl_vmaxsl_vsvl
OMPTaskDirective
__builtin_ve_vl_vminsl_vvvl
__builtin_ve_vl_vminsl_vvvvl
-fpass-by-value-is-noalias
OMPTaskwaitDirective
__builtin_ve_vl_vand_vsvl
__builtin_ve_vl_vand_vsvvl
__builtin_ve_vl_pvand_vvvl
OMPTeamsDirective
__builtin_ve_vl_pvand_vvvMvl
__builtin_ve_vl_pvand_vsvMvl
__builtin_ve_vl_vor_vvvvl
ObjCAtFinallyStmt
__builtin_ve_vl_pvor_vvvl
__builtin_ve_vl_pvor_vvvvl
__builtin_ve_vl_pvor_vvvMvl
ObjCAtThrowStmt
__builtin_ve_vl_vxor_vsvl
__builtin_ve_vl_vxor_vsvvl
-mno-reference-types
ObjCAutoreleasePoolStmt
__builtin_ve_vl_pvxor_vvvMvl
__builtin_ve_vl_pvxor_vsvMvl
__builtin_ve_vl_veqv_vsvl
ReturnStmt
__builtin_ve_vl_pveqv_vvvl
__builtin_ve_vl_pveqv_vvvvl
__builtin_ve_vl_pveqv_vsvvl
SEHFinallyStmt
__builtin_ve_vl_vldz_vvvl
__builtin_ve_vl_vldz_vvmvl
__builtin_ve_vl_pvldzlo_vvvl
SEHTryStmt
__builtin_ve_vl_pvldzup_vvvl
SwitchCase
-fpass-plugin=
CaseStmt
__builtin_ve_vl_pvpcntlo_vvl
__builtin_ve_vl_pvpcntlo_vvvl
__builtin_ve_vl_pvpcntup_vvvl
SwitchStmt
__builtin_ve_vl_pvpcnt_vvMvl
__builtin_ve_vl_vbrv_vvl
__builtin_ve_vl_vbrv_vvmvl
AttributedStmt
__builtin_ve_vl_pvbrvup_vvvl
__builtin_ve_vl_pvbrvup_vvmvl
__builtin_ve_vl_pvbrv_vvMvl
AbstractConditionalOperator
__builtin_ve_vl_pvseqlo_vl
__builtin_ve_vl_pvseqlo_vvl
-mno-relaxed-simd
ConditionalOperator
__builtin_ve_vl_vsll_vvsl
__builtin_ve_vl_vsll_vvsvl
__builtin_ve_vl_pvsll_vvvl
ArrayInitIndexExpr
__builtin_ve_vl_pvsll_vvvMvl
__builtin_ve_vl_pvsll_vvsMvl
__builtin_ve_vl_vsrl_vvvl
ArraySubscriptExpr
__builtin_ve_vl_vsrl_vvsmvl
__builtin_ve_vl_pvsrl_vvvl
__builtin_ve_vl_pvsrl_vvsvl
AsTypeExpr
__builtin_ve_vl_vslawsx_vvvvl
__builtin_ve_vl_vslawsx_vvsl
<dsopath>
AtomicExpr
__builtin_ve_vl_vslawzx_vvsvl
__builtin_ve_vl_vslawzx_vvvmvl
__builtin_ve_vl_pvsla_vvvvl
CompoundAssignOperator
__builtin_ve_vl_pvsla_vvsMvl
__builtin_ve_vl_vslal_vvvl
__builtin_ve_vl_vslal_vvsl
BoundsCheckExpr
__builtin_ve_vl_vsrawsx_vvvvl
__builtin_ve_vl_vsrawsx_vvsl
__builtin_ve_vl_vsrawsx_vvsmvl
CXXBoolLiteralExpr
__builtin_ve_vl_vsrawzx_vvsvl
__builtin_ve_vl_vsrawzx_vvvmvl
Allow generation of complex IT blocks.
CXXTemporaryObjectExpr
__builtin_ve_vl_pvsra_vvsMvl
__builtin_ve_vl_vsral_vvvl
__builtin_ve_vl_vsral_vvsvl
CXXDefaultInitExpr
V256dV256dLUiLUiUi
__builtin_ve_vl_vsfa_vvssvl
__builtin_ve_vl_vsfa_vvssmvl
CXXDependentScopeMemberExpr
__builtin_ve_vl_vfaddd_vsvvl
V256ddV256dV256dUi
V256ddV256dV256bV256dUi
CXXInheritedCtorInitExpr
__builtin_ve_vl_vfadds_vsvvl
CXXNewExpr
Generate M NOPs before function entry
CXXNoexceptExpr
__builtin_ve_vl_pvfadd_vsvvl
__builtin_ve_vl_pvfadd_vvvMvl
__builtin_ve_vl_vfsubd_vvvvl
CXXPseudoDestructorExpr
__builtin_ve_vl_vfsubd_vsvmvl
__builtin_ve_vl_vfsubs_vvvl
__builtin_ve_vl_vfsubs_vsvl
CXXScalarValueInitExpr
__builtin_ve_vl_pvfsub_vvvvl
__builtin_ve_vl_pvfsub_vsvl
__builtin_ve_vl_pvfsub_vsvMvl
CXXThisExpr
__builtin_ve_vl_vfmuld_vsvvl
__builtin_ve_vl_vfmuld_vvvmvl
-mno-rtm
CXXTypeidExpr
__builtin_ve_vl_vfmuls_vsvmvl
__builtin_ve_vl_pvfmul_vvvl
__builtin_ve_vl_pvfmul_vsvvl
CXXUuidofExpr
__builtin_ve_vl_vfdivd_vvvvl
__builtin_ve_vl_vfdivd_vsvl
__builtin_ve_vl_vfdivd_vvvmvl
CUDAKernelCallExpr
__builtin_ve_vl_vfdivs_vsvvl
__builtin_ve_vl_vfdivs_vvvmvl
__builtin_ve_vl_vfsqrtd_vvvl
CXXOperatorCallExpr
__builtin_ve_vl_vfcmpd_vvvvl
__builtin_ve_vl_vfcmpd_vsvl
-fpatchable-function-entry=
CastExpr
__builtin_ve_vl_vfcmps_vsvvl
__builtin_ve_vl_vfcmps_vvvmvl
__builtin_ve_vl_pvfcmp_vvvvl
BuiltinBitCastExpr
__builtin_ve_vl_pvfcmp_vsvMvl
__builtin_ve_vl_vfmaxd_vvvl
__builtin_ve_vl_vfmaxd_vsvl
CXXFunctionalCastExpr
__builtin_ve_vl_vfmaxs_vvvvl
__builtin_ve_vl_vfmaxs_vsvl
__builtin_ve_vl_vfmaxs_vsvmvl
CXXAddrspaceCastExpr
__builtin_ve_vl_pvfmax_vsvvl
__builtin_ve_vl_pvfmax_vvvMvl
-mno-serialize
CXXDynamicCastExpr
__builtin_ve_vl_vfmind_vsvmvl
__builtin_ve_vl_vfmins_vvvl
__builtin_ve_vl_vfmins_vsvvl
CXXStaticCastExpr
__builtin_ve_vl_pvfmin_vvvvl
__builtin_ve_vl_pvfmin_vsvl
__builtin_ve_vl_pvfmin_vvvMvl
ImplicitCastExpr
__builtin_ve_vl_vfmadd_vsvvl
__builtin_ve_vl_vfmadd_vsvvvl
V256dV256ddV256dUi
ChooseExpr
__builtin_ve_vl_vfmadd_vvvvmvl
CompoundLiteralExpr
<N,M>
ConceptSpecializationExpr
__builtin_ve_vl_vfmads_vsvvvl
V256dfV256dV256dV256dUi
__builtin_ve_vl_vfmads_vvsvvl
CoroutineSuspendExpr
V256dfV256dV256dV256bV256dUi
__builtin_ve_vl_vfmads_vvsvmvl
__builtin_ve_vl_pvfmad_vvvvl
CoyieldExpr
__builtin_ve_vl_pvfmad_vvsvl
__builtin_ve_vl_pvfmad_vvsvvl
V256dV256dV256dV256dV512bV256dUi
DependentCoawaitExpr
V256dV256dLUiV256dV512bV256dUi
__builtin_ve_vl_vfmsbd_vvvvl
-mno-sha
DesignatedInitExpr
__builtin_ve_vl_vfmsbd_vsvvmvl
__builtin_ve_vl_vfmsbd_vvsvmvl
__builtin_ve_vl_vfmsbs_vsvvl
ExpressionTraitExpr
__builtin_ve_vl_vfmsbs_vvvvmvl
__builtin_ve_vl_vfmsbs_vsvvmvl
__builtin_ve_vl_pvfmsb_vvvvl
FirebloomPointerPromotionExpr
__builtin_ve_vl_pvfmsb_vvsvvl
__builtin_ve_vl_pvfmsb_vvvvMvl
__builtin_ve_vl_vfnmadd_vvvvl
FloatingLiteral
__builtin_ve_vl_vfnmadd_vvsvl
__builtin_ve_vl_vfnmadd_vvsvvl
Override the default ABI to return all structs on the stack
FullExpr
__builtin_ve_vl_vfnmads_vsvvvl
__builtin_ve_vl_vfnmads_vvsvl
__builtin_ve_vl_vfnmads_vsvvmvl
ExprWithCleanups
__builtin_ve_vl_pvfnmad_vsvvl
__builtin_ve_vl_pvfnmad_vsvvvl
__builtin_ve_vl_pvfnmad_vvsvvl
GNUNullExpr
__builtin_ve_vl_vfnmsbd_vvvvvl
__builtin_ve_vl_vfnmsbd_vsvvl
__builtin_ve_vl_vfnmsbd_vvsvvl
GetBoundExpr
__builtin_ve_vl_vfnmsbs_vvvvl
__builtin_ve_vl_vfnmsbs_vvvvvl
-mno-skip-rax-setup
ImplicitValueInitExpr
__builtin_ve_vl_vfnmsbs_vvsvmvl
__builtin_ve_vl_pvfnmsb_vvvvl
__builtin_ve_vl_pvfnmsb_vsvvvl
IntegerLiteral
__builtin_ve_vl_pvfnmsb_vsvvMvl
__builtin_ve_vl_pvfnmsb_vvsvMvl
__builtin_ve_vl_vrcpd_vvvl
MSPropertyRefExpr
__builtin_ve_vl_vrsqrtd_vvl
__builtin_ve_vl_vrsqrtd_vvvl
__builtin_ve_vl_pvrsqrt_vvl
MaterializeSequenceExpr
__builtin_ve_vl_vrsqrtsnex_vvl
MaterializeTemporaryExpr
Generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
MatrixSubscriptExpr
__builtin_ve_vl_vcvtwdsxrz_vvvl
__builtin_ve_vl_vcvtwdsxrz_vvmvl
__builtin_ve_vl_vcvtwdzx_vvmvl
NoInitExpr
__builtin_ve_vl_vcvtwssx_vvl
__builtin_ve_vl_vcvtwssx_vvvl
__builtin_ve_vl_vcvtwssxrz_vvl
OMPArrayShapingExpr
__builtin_ve_vl_vcvtwszx_vvmvl
__builtin_ve_vl_vcvtwszxrz_vvl
__builtin_ve_vl_pvcvtws_vvl
ObjCAvailabilityCheckExpr
__builtin_ve_vl_pvcvtwsrz_vvvl
__builtin_ve_vl_pvcvtwsrz_vvMvl
-mno-sse2
ObjCEncodeExpr
__builtin_ve_vl_vcvtdw_vvl
__builtin_ve_vl_vcvtdw_vvvl
__builtin_ve_vl_pvcvtsw_vvl
ObjCIsaExpr
__builtin_ve_vl_vcvtds_vvl
__builtin_ve_vl_vcvtds_vvvl
__builtin_ve_vl_vcvtsd_vvvl
ObjCMessageExpr
V256dLUiV256dV256bUi
__builtin_ve_vl_vmrg_vsvmvl
__builtin_ve_vl_vmrgw_vvvMvl
ObjCArrayLiteral
V256dUiV256dV512bV256dUi
__builtin_ve_vl_vshf_vvvsl
Generate debug info for types in an object file built from this PCH and do not generate them elsewhere
ObjCDictionaryLiteral
V256bUi
__builtin_ve_vl_vfmklaf_ml
__builtin_ve_vl_pvfmkaf_Ml
ObjCPropertyRefExpr
V256bV256dV256bUi
__builtin_ve_vl_vfmkllt_mvl
__builtin_ve_vl_vfmklne_mvl
ObjCSelectorExpr
__builtin_ve_vl_vfmklge_mvml
__builtin_ve_vl_vfmklle_mvl
__builtin_ve_vl_vfmklnum_mvml
OffsetOfExpr
__builtin_ve_vl_vfmklgtnan_mvml
__builtin_ve_vl_vfmklltnan_mvl
-mno-sse4a
OverloadExpr
__builtin_ve_vl_vfmklgenan_mvml
__builtin_ve_vl_vfmkllenan_mvl
__builtin_ve_vl_vfmkwgt_mvml
UnresolvedMemberExpr
__builtin_ve_vl_vfmkwne_mvml
__builtin_ve_vl_vfmkweq_mvl
__builtin_ve_vl_vfmkwge_mvl
ParenExpr
__builtin_ve_vl_vfmkwnum_mvml
__builtin_ve_vl_vfmkwnan_mvl
__builtin_ve_vl_vfmkwgtnan_mvml
PredefinedBoundsCheckExpr
-fdisable-module-hash
PredefinedExpr
Instantiate templates already while building a PCH
PseudoObjectExpr
__builtin_ve_vl_pvfmkwupgt_mvl
__builtin_ve_vl_pvfmkwlogt_mvml
__builtin_ve_vl_pvfmkwuplt_mvl
RequiresExpr
__builtin_ve_vl_pvfmkwupne_mvl
__builtin_ve_vl_pvfmkwlone_mvml
__builtin_ve_vl_pvfmkwloeq_mvl
ShuffleVectorExpr
__builtin_ve_vl_pvfmkwupge_mvl
__builtin_ve_vl_pvfmkwloge_mvml
__builtin_ve_vl_pvfmkwuple_mvl
SourceLocExpr
__builtin_ve_vl_pvfmkwupnum_mvl
__builtin_ve_vl_pvfmkwlonum_mvml
-mno-stack-arg-probe
StringLiteral
__builtin_ve_vl_pvfmkwupgtnan_mvl
__builtin_ve_vl_pvfmkwlogtnan_mvml
__builtin_ve_vl_pvfmkwupltnan_mvl
SubstNonTypeTemplateParmPackExpr
__builtin_ve_vl_pvfmkwupnenan_mvl
__builtin_ve_vl_pvfmkwlonenan_mvml
__builtin_ve_vl_pvfmkwloeqnan_mvl
TerminatedByToIndexableExpr
__builtin_ve_vl_pvfmkwupgenan_mvl
__builtin_ve_vl_pvfmkwlogenan_mvml
__builtin_ve_vl_pvfmkwuplenan_mvl
TypoExpr
V512bV256dUi
__builtin_ve_vl_pvfmkwgt_MvMl
-fpch-validate-input-files-content
UnaryOperator
__builtin_ve_vl_pvfmkweq_MvMl
__builtin_ve_vl_pvfmkwge_Mvl
__builtin_ve_vl_pvfmkwle_MvMl
LabelStmt
__builtin_ve_vl_pvfmkwnan_MvMl
__builtin_ve_vl_pvfmkwgtnan_Mvl
__builtin_ve_vl_pvfmkwltnan_Mvl
Type
__builtin_ve_vl_pvfmkweqnan_MvMl
__builtin_ve_vl_pvfmkwgenan_Mvl
__builtin_ve_vl_pvfmkwlenan_MvMl
DecayedType
__builtin_ve_vl_vfmkdlt_mvml
__builtin_ve_vl_vfmkdne_mvl
-mno-tbm
ConstantArrayType
__builtin_ve_vl_vfmkdle_mvml
__builtin_ve_vl_vfmkdnum_mvl
__builtin_ve_vl_vfmkdnan_mvml
IncompleteArrayType
__builtin_ve_vl_vfmkdltnan_mvml
__builtin_ve_vl_vfmkdnenan_mvl
__builtin_ve_vl_vfmkdeqnan_mvl
AtomicType
__builtin_ve_vl_vfmkdlenan_mvml
__builtin_ve_vl_vfmksgt_mvl
__builtin_ve_vl_vfmkslt_mvml
BTFTagAttributedType
__builtin_ve_vl_vfmkseq_mvml
BitIntType
-fpeel-loops
BlockPointerType
__builtin_ve_vl_vfmksnan_mvml
__builtin_ve_vl_vfmksgtnan_mvl
__builtin_ve_vl_vfmksltnan_mvml
ComplexType
__builtin_ve_vl_vfmkseqnan_mvml
__builtin_ve_vl_vfmksgenan_mvl
__builtin_ve_vl_vfmkslenan_mvl
DeducedType
__builtin_ve_vl_pvfmksupgt_mvml
__builtin_ve_vl_pvfmkslolt_mvl
__builtin_ve_vl_pvfmksuplt_mvml
DeducedTemplateSpecializationType
__builtin_ve_vl_pvfmksupne_mvml
__builtin_ve_vl_pvfmksloeq_mvl
-mno-tls-direct-seg-refs
DependentBitIntType
__builtin_ve_vl_pvfmksupge_mvml
__builtin_ve_vl_pvfmkslole_mvl
__builtin_ve_vl_pvfmksuple_mvml
DependentSizedExtVectorType
__builtin_ve_vl_pvfmksupnum_mvml
__builtin_ve_vl_pvfmkslonan_mvl
__builtin_ve_vl_pvfmkslonan_mvml
DependentVectorType
__builtin_ve_vl_pvfmksupgtnan_mvml
__builtin_ve_vl_pvfmksloltnan_mvl
__builtin_ve_vl_pvfmksupltnan_mvml
DynamicCountPointerType
__builtin_ve_vl_pvfmksupnenan_mvml
__builtin_ve_vl_pvfmksloeqnan_mvl
-fPIC
ElaboratedType
__builtin_ve_vl_pvfmksupgenan_mvml
__builtin_ve_vl_pvfmkslolenan_mvl
__builtin_ve_vl_pvfmksuplenan_mvml
FunctionNoProtoType
__builtin_ve_vl_pvfmkslt_MvMl
__builtin_ve_vl_pvfmksne_Mvl
__builtin_ve_vl_pvfmkseq_Mvl
InjectedClassNameType
__builtin_ve_vl_pvfmksle_MvMl
__builtin_ve_vl_pvfmksnum_Mvl
__builtin_ve_vl_pvfmksnan_MvMl
MatrixType
__builtin_ve_vl_pvfmksltnan_MvMl
__builtin_ve_vl_pvfmksnenan_Mvl
Don't perform type checking of the assembly code (wasm only)
DependentSizedMatrixType
__builtin_ve_vl_pvfmkslenan_MvMl
__builtin_ve_vl_vsumwsx_vvl
__builtin_ve_vl_vsumwzx_vvl
ObjCObjectPointerType
__builtin_ve_vl_vfsumd_vvl
__builtin_ve_vl_vfsumd_vvml
__builtin_ve_vl_vfsums_vvml
ObjCInterfaceType
__builtin_ve_vl_vrmaxswfstzx_vvl
__builtin_ve_vl_vrmaxswfstzx_vvvl
__builtin_ve_vl_vrminswfstsx_vvl
PackExpansionType
__builtin_ve_vl_vrminswlstsx_vvvl
ParenType
-fPIE
PipeType
__builtin_ve_vl_vrminslfst_vvl
__builtin_ve_vl_vrminslfst_vvvl
__builtin_ve_vl_vfrmaxdfst_vvl
ReferenceType
__builtin_ve_vl_vfrmaxsfst_vvl
__builtin_ve_vl_vfrmaxsfst_vvvl
__builtin_ve_vl_vfrmaxslst_vvvl
RValueReferenceType
__builtin_ve_vl_vfrminsfst_vvl
__builtin_ve_vl_vfrminsfst_vvvl
__builtin_ve_vl_vrand_vvl
SubstTemplateTypeParmType
__builtin_ve_vl_vrxor_vvl
__builtin_ve_vl_vrxor_vvml
-mno-unsafe-fp-atomics
EnumType
__builtin_ve_vl_vgtnc_vvssvl
__builtin_ve_vl_vgtnc_vvssml
__builtin_ve_vl_vgtu_vvssvl
TemplateSpecializationType
__builtin_ve_vl_vgtunc_vvssvl
__builtin_ve_vl_vgtunc_vvssml
__builtin_ve_vl_vgtlsx_vvssl
TypeOfExprType
__builtin_ve_vl_vgtlsxnc_vvssvl
__builtin_ve_vl_vgtlsxnc_vvssml
__builtin_ve_vl_vgtlzx_vvssvl
TypedefType
__builtin_ve_vl_vgtlzxnc_vvssvl
__builtin_ve_vl_vgtlzxnc_vvssml
-fplt
UnresolvedUsingType
__builtin_ve_vl_vscnc_vvssml
__builtin_ve_vl_vscot_vvssl
__builtin_ve_vl_vscncot_vvssml
ValueTerminatedType
__builtin_ve_vl_vscunc_vvssml
__builtin_ve_vl_vscuot_vvssl
__builtin_ve_vl_vscuncot_vvssl
ExtVectorType
__builtin_ve_vl_vsclnc_vvssml
__builtin_ve_vl_vsclot_vvssl
__builtin_ve_vl_vsclncot_vvssml
OMPAcqRelClause
V512bV512bV512b
__builtin_ve_vl_orm_mmm
-mno-vsx
OMPAffinityClause
__builtin_ve_vl_nndm_MMM
__builtin_ve_vl_negm_mm
V512bV512b
OMPAlignedClause
__builtin_ve_vl_tovm_sml
__builtin_ve_vl_lcr_sss
__builtin_ve_vl_scr_sss
OMPAllocatorClause
__builtin_ve_vl_fidcr_sss
OMPAtomicDefaultMemOrderClause
Reserve the x29 register (AArch64/RISC-V only)
OMPBindClause
-mno-vzeroupper
zIiz
__builtin_wasm_tls_size
__builtin_wasm_tls_base
__builtin_wasm_min_f64
OMPCopyprivateClause
exception-handling
__builtin_wasm_rethrow
ii*iLLi
OMPDefaultClause
__builtin_wasm_trunc_s_i32_f32
__builtin_wasm_trunc_u_i32_f32
__builtin_wasm_trunc_s_i64_f32
OMPDependClause
__builtin_wasm_trunc_saturate_s_i32_f32
nontrapping-fptoint
-mno-warn-nonportable-cfstrings
OMPDestroyClause
__builtin_wasm_trunc_saturate_u_i64_f64
__builtin_wasm_swizzle_i8x16
__builtin_wasm_add_sat_u_i8x16
OMPDeviceClause
__builtin_wasm_sub_sat_u_i8x16
__builtin_wasm_sub_sat_s_i16x8
__builtin_wasm_abs_i8x16
OMPDynamicAllocatorsClause
V2LLiV2LLi
__builtin_wasm_min_s_i8x16
__builtin_wasm_max_u_i8x16
OMPFilterClause
__builtin_wasm_max_u_i16x8
-fplugin=
OMPFirstprivateClause
__builtin_wasm_q15mulr_sat_s_i16x8
__builtin_wasm_extadd_pairwise_i8x16_s_i16x8
__builtin_wasm_extadd_pairwise_i16x8_s_i32x4
OMPFromClause
V16ScV16ScV16ScIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
__builtin_wasm_any_true_v128
__builtin_wasm_all_true_i8x16
OMPGrainsizeClause
__builtin_wasm_bitmask_i8x16
UiV16Sc
__builtin_wasm_bitmask_i32x4
OMPHintClause
OMPIfClause
__builtin_wasm_abs_f32x4
__builtin_wasm_abs_f64x2
-mno-widekl
OMPInReductionClause
__builtin_wasm_pmin_f64x2
__builtin_wasm_pmax_f64x2
__builtin_wasm_trunc_f32x4
OMPInitClause
__builtin_wasm_trunc_f64x2
__builtin_wasm_nearest_f64x2
V4iV8sV8s
OMPLastprivateClause
__builtin_wasm_narrow_s_i8x16_i16x8
V16ScV8sV8s
__builtin_wasm_narrow_s_i16x8_i32x4
OMPMapClause
__builtin_wasm_trunc_sat_s_zero_f64x2_i32x4
OMPMergeableClause
-fprebuilt-implicit-modules
OMPNogroupClause
experimental-enable-naive-ctu-analysis
OMPNocontextClause
objc-inlining
-lcrt1.10.6.o
report-in-main-source-file
OMPNovariantsClause
c++-container-inlining
crosscheck-with-z3
/usr/libexec/ld-elf.so.2
OMPNumTeamsClause
__builtin_wasm_fms_f64x2
suppress-null-return-paths
__builtin_wasm_laneselect_i64x2
OMPOrderClause
c++-temp-dtor-inlining
notes-as-events
aggressive-binary-operation-simplification
OMPOrderedClause
-fcs-profile-generate=
OMPPartialClause
-fdollar-ok
OMPPriorityClause
crt1.o
sse4.2
-popcnt
OMPReadClause
crc32
sse4.1
+avx512cd
OMPRelaxedClause
+avx512fp16
+avx512pf
+avx512bw
OMPReverseOffloadClause
+avx512ifma
+avx512vp2intersect
+shstk
OMPScheduleClause
+xsave
+xsaveopt
+mwaitx
OMPSharedClause
+wbnoinvd
+prefetchwt1
-mno-zvector
OMPSimdlenClause
+retpoline-external-thunk
+sahf
+movdir64b
OMPTaskReductionClause
+enqcmd
+hreset
+amx-int8
OMPThreadsClause
+uintr
+crc32
avx512f
OMPUnifiedAddressClause
__amd64
__x86_64
-fprefetch-loop-arrays
OMPUntiedClause
__seg_fs
__attribute__((address_space(257)))
pentium
OMPUseClause
atom
goldmont_plus
OMPUseDevicePtrClause
__tune_k6_2__
__k6_3__
athlon
OMPWriteClause
amdfam10
btver1
Mark the file as not needing an executable stack
AddressSpaceAttr
geode
__NO_MATH_INLINES
__PCLMUL__
ArmMveStrictPolymorphismAttr
__RDRND__
__FSGSBASE__
__BMI2__
ArmPreservesZAAttr
__ADX__
__TBM__
__MOVBE__
ArmStreamingAttr
__FMA__
__F16C__
-fpreserve-vec3-type
BTFTypeTagAttr
__AVX512FP16__
__AVX512PF__
__AVX512BW__
NoDerefAttr
__AVX512IFMA__
__AVX512VP2INTERSECT__
__FXSR__
ObjCInertUnsafeUnretainedAttr
__PKU__
__CLFLUSHOPT__
__SHSTK__
OpenCLConstantAddressSpaceAttr
__KL__
__WIDEKL__
-mnvj
OpenCLGlobalAddressSpaceAttr
__PCONFIG__
__PTWRITE__
__HRESET__
OpenCLGlobalHostAddressSpaceAttr
__AVXVNNI__
__SERIALIZE__
__UINTR__
OpenCLPrivateAddressSpaceAttr
__AVX__
__SSE4_2__
__SSE3__
Ptr32Attr
__SSE_MATH__
Ptr64Attr
-fprintf
PtrAutoAttrAttr
3dnowa
amx-bf16
avx2
SPtrAttr
avx512bf16
avx512er
avx512pf
TypeNullUnspecifiedAttr
avx512vbmi
avx512vbmi2
TypeNullableResultAttr
clwb
clzero
-modd-spreg
XnuUsageSemanticsAttr
gfni
invpcid
lzcnt
LikelyAttr
pclmul
rdpid
OpenCLUnrollHintAttr
serialize
ssse3
UnlikelyAttr
uintr
vaes
Save subprocess statistics to the given file
AnalyzerSuppressAttr
xsaveopt
pentium_iii
skylake
NoMergeAttr
+cmov,+mmx
+cmov,+mmx,+sse
+cmov,+mmx,+sse,+sse2,+sse3
AArch64VectorPcsAttr
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt,+avx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+adx
AcquireHandleAttr
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512dq,+avx512f,+adx,+avx512ifma,+avx512cd,+avx512bw,+avx512vl,+avx512vbmi
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512f,+adx,+avx512er,+avx512pf,+avx512cd,+avx5124fmaps,+avx5124vnniw,+avx512vpopcntdq
-module-dir
CDeclAttr
{bx}
{cx}
{di}
IntelOclBiccAttr
st(1)
st(2)
st(4)
MSABIAttr
fpcr
dirflag
xmm2
ObjCOwnershipAttr
xmm6
PascalAttr
Print subprocess statistics
PcsAttr
xmm10
PreserveMostAttr
xmm14
xmm15
ymm1
StdCallAttr
ymm6
ymm7
ymm10
SwiftCallAttr
ymm14
ymm15
-module-file-info
ThisCallAttr
xmm22
xmm23
xmm26
SwiftAsyncContextAttr
xmm30
xmm31
ymm17
SwiftErrorResultAttr
ymm22
ymm23
ymm26
AnnotateAttr
ymm30
ymm31
-fprofile-correction
CarriesDependencyAttr
zmm6
zmm7
zmm10
NonNullAttr
zmm14
zmm15
zmm17
PassObjectSizeAttr
zmm22
zmm23
zmm26
UseHandleAttr
zmm30
zmm31
<suffix>
AMDGPUFlatWorkGroupSizeAttr
AMDGPUNumVGPRAttr
bnd2
bnd3
tmm1
ARMInterruptAttr
tmm6
tmm7
AVRSignalAttr
AcquireCapabilityAttr
-fprofile-exclude-files=
AcquiredAfterAttr
AlignMac68kAttr
r10d
r10b
AlignedAttr
r12w
r12b
r13b
AllocSizeAttr
r15d
r15w
-moutline-atomics
AnalyzerNoReturnAttr
ncV:128:
ncV:256:
AnyX86NoCallerSavedRegistersAttr
__builtin_ia32_readeflags_u32
__builtin_ia32_writeeflags_u32
__builtin_ia32_pavgusb
ArgumentWithTypeTagAttr
__builtin_ia32_pfacc
V2fV2fV2f
V2iV2fV2f
ArmLocallyStreamingAttr
__builtin_ia32_pfmin
__builtin_ia32_pfmul
-fprofile-filter-files=
AsmLabelAttr
__builtin_ia32_pfsub
__builtin_ia32_pfsubr
__builtin_ia32_pmulhrw
AssertExclusiveLockAttr
__builtin_ia32_pfpnacc
__builtin_ia32_pi2fw
__builtin_ia32_pswapdsi
AssumeAlignedAttr
__builtin_ia32_paddb
__builtin_ia32_paddw
__builtin_ia32_paddsb
AvailabilityAttr
__builtin_ia32_psubb
__builtin_ia32_psubw
-mpacked-stack
BTFDeclTagAttr
__builtin_ia32_pmullw
__builtin_ia32_pmaddwd
V1OiV1OiV1Oi
BuiltinAttr
__builtin_ia32_psllw
V4sV4sV1Oi
V2iV2iV1Oi
CFAuditedTransferAttr
__builtin_ia32_psraw
__builtin_ia32_psrad
__builtin_ia32_pslldi
CFICanonicalJumpTableAttr
__builtin_ia32_psrlwi
CFReturnsNotRetainedAttr
-fprofile-function-groups=
CFReturnsRetainedAttr
V4sV2iV2i
__builtin_ia32_packuswb
__builtin_ia32_punpckhdq
CPUDispatchAttr
__builtin_ia32_pcmpeqb
__builtin_ia32_pcmpeqw
__builtin_ia32_pcmpgtb
CUDAConstantAttr
nV:64:
__builtin_ia32_movntq
V2iii
CUDADeviceBuiltinSurfaceTypeAttr
V8ccccccccc
__builtin_ia32_vec_ext_v2si
-mpad-max-prefix-size=
CUDAGlobalAttr
__builtin_ia32_cvttps2pi
__builtin_ia32_pavgb
__builtin_ia32_pmaxub
CUDAInvalidTargetAttr
iV8c
__builtin_ia32_pmulhuw
V4sV8cV8c
CUDASharedAttr
__builtin_ia32_vec_set_v4hi
V4sV4siIi
mmx,sse2
CallableWhenAttr
__builtin_ia32_paddq
__builtin_ia32_pmuludq
-fprofile-generate-sampling
CapabilityAttr
__builtin_ia32_pabsw
V4sV4s
__builtin_ia32_phaddd
CleanupAttr
__builtin_ia32_phsubsw
__builtin_ia32_phsubw
__builtin_ia32_pmulhrsw
CodeSegAttr
__builtin_ia32_comieq
__builtin_ia32_comilt
__builtin_ia32_comige
CommonAttr
__builtin_ia32_ucomile
__builtin_ia32_ucomigt
-mpclmul
ConstInitAttr
__builtin_ia32_comisdge
__builtin_ia32_comisdneq
__builtin_ia32_ucomisdle
ConsumableAttr
__builtin_ia32_cmpeqps
__builtin_ia32_cmpltps
__builtin_ia32_cmpunordps
ConsumableSetOnReadAttr
__builtin_ia32_cmpeqss
__builtin_ia32_cmpltss
__builtin_ia32_cmpneqss
DLLExportAttr
__builtin_ia32_cmpordss
DLLExportStaticLocalAttr
Generate instrumented code to collect execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
DLLImportAttr
__builtin_ia32_cmpneqpd
__builtin_ia32_cmpnltpd
__builtin_ia32_cmpeqsd
DependerDeclsAttr
__builtin_ia32_cmpneqsd
__builtin_ia32_cmpnltsd
__builtin_ia32_cmpordsd
DestructorAttr
__builtin_ia32_pmulhw128
__builtin_ia32_pavgb128
V16cV8sV8s
DiagnoseIfAttr
__builtin_ia32_vec_ext_v2di
OiV2OiIi
-mpopcntd
DisableTailCallsAttr
V8sV8ssIi
__builtin_ia32_addsubps
__builtin_ia32_haddpd
EnableIfAttr
__builtin_ia32_phaddd128
__builtin_ia32_phaddsw128
__builtin_ia32_phsubd128
EnforceTCBLeafAttr
__builtin_ia32_pshufb128
__builtin_ia32_psignb128
__builtin_ia32_ldmxcsr
ErrorAttr
_mm_getcsr
__builtin_ia32_cvtss2si
Generate instrumented code to collect execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
ExclusiveTrylockFunctionAttr
__builtin_ia32_rcpss
__builtin_ia32_rsqrtps
__builtin_ia32_sqrtss
FinalAttr
__builtin_ia32_movmskpd
__builtin_ia32_pmovmskb128
__builtin_ia32_movnti
FlattenAttr
V8sV8sIi
__builtin_ia32_pshufhw
__builtin_ia32_sqrtpd
FormatArgAttr
V2OiV2d
__builtin_ia32_cvtpd2ps
-mpower9-vector
GNUInlineAttr
__builtin_ia32_cvttps2dq
__builtin_ia32_clflush
__builtin_ia32_lfence
GuardedVarAttr
__builtin_ia32_pause
_mm_pause
V2OiV4iV4i
HLSLNumThreadsAttr
__builtin_ia32_psrlq128
V2OiV2OiV2Oi
__builtin_ia32_psllq128
HLSLResourceBindingAttr
V4iV4ii
HLSLShaderAttr
Generate instrumented code to collect execution counts into <file> (overridden by LLVM_PROFILE_FILE env var)
HotAttr
__builtin_ia32_pmaddwd128
__builtin_ia32_pslldqi128_byteshift
__builtin_ia32_monitor
IBOutletAttr
__builtin_ia32_palignr128
V16cV16cV16cIi
V4fV4fV4fIc
InitPriorityAttr
__builtin_ia32_blendps
__builtin_ia32_blendvpd
__builtin_ia32_pmuldq128
LTOVisibilityPublicAttr
__builtin_ia32_roundsd
__builtin_ia32_roundpd
-mprefixed
LeafAttr
__builtin_ia32_ptestc128
__builtin_ia32_ptestnzc128
__builtin_ia32_phminposuw128
LocksExcludedAttr
V16cV16ccIi
__builtin_ia32_vec_set_v4si
__builtin_ia32_pcmpistrm128
MIGServerRoutineAttr
__builtin_ia32_pcmpestri128
iV16ciV16ciIc
__builtin_ia32_pcmpistrio128
MSInheritanceAttr
__builtin_ia32_pcmpestric128
__builtin_ia32_pcmpestrio128
Generate instrumented code to collect execution counts into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
MSP430InterruptAttr
V2OiV2OiIcIc
__builtin_ia32_extrq
V2OiV2OiV2OiIcIc
MSVtorDispAttr
__builtin_ia32_movntss
vf*V4f
__builtin_ia32_aesenclast128
MayAliasAttr
__builtin_ia32_aeskeygenassist128
V2OiV2OiIc
__builtin_ia32_aesenc512
MicroMipsAttr
__builtin_ia32_aesenclast512
__builtin_ia32_aesdec256
-mpure-code
MinVectorWidthAttr
avx,gfni
__builtin_ia32_vgf2p8affineinvqb_v64qi
__builtin_ia32_vgf2p8affineqb_v16qi
MipsInterruptAttr
__builtin_ia32_vgf2p8mulb_v32qi
V32cV32cV32c
V64cV64cV64c
MipsShortCallAttr
__builtin_ia32_pclmulqdq512
V8OiV8OiV8OiIc
V4dV4dV4d
NSErrorDomainAttr
-fdouble-square-bracket-attributes
NSReturnsAutoreleasedAttr
Use instrumentation data for profile-guided optimization
NSReturnsNotRetainedAttr
V2dV2dV2Oi
__builtin_ia32_vpermilvarps
__builtin_ia32_vpermilvarps256
NoAliasAttr
__builtin_ia32_blendps256
V8fV8fV8fIi
V4dV4dV4dV4d
NoDebugAttr
__builtin_ia32_dpps256
V8fV8fV8fIc
V4dV4dV4dIc
NoDuplicateAttr
__builtin_ia32_cmpss
__builtin_ia32_vextractf128_pd256
-mqdsp6-compat
NoMicroMipsAttr
V4fV4d
__builtin_ia32_cvtps2dq256
V4iV4d
NoProfileFunctionAttr
__builtin_ia32_vperm2f128_ps256
__builtin_ia32_vperm2f128_si256
__builtin_ia32_vpermilpd
NoReturnAttr
V8fV8fIi
__builtin_ia32_vinsertf128_pd256
V8fV8fV4fIi
NoSpeculativeLoadHardeningAttr
V4dV4d
__builtin_ia32_sqrtps256
-fprofile-instrument-path=
NoStackProtectorAttr
__builtin_ia32_vtestcpd
__builtin_ia32_vtestnzcpd
__builtin_ia32_vtestnzcps
NoThrowAttr
__builtin_ia32_vtestnzcpd256
__builtin_ia32_vtestzps256
__builtin_ia32_vtestcps256
NoUwtableAttr
__builtin_ia32_ptestnzc256
__builtin_ia32_movmskpd256
iV8f
OMPAllocateDeclAttr
V32ccC*
nV:256:
-mrdpid
OMPDeclareTargetDeclAttr
__builtin_ia32_maskloadps256
V8fV8fC*V8i
__builtin_ia32_maskstoreps
OMPThreadPrivateDeclAttr
__builtin_ia32_maskstoreps256
vV8f*V8iV8f
cV32cIi
OSReturnsNotRetainedAttr
__builtin_ia32_vec_set_v32qi
V32cV32ccIi
__builtin_ia32_vec_set_v8si
OSReturnsRetainedOnNonZeroAttr
V32cV16sV16s
OSReturnsRetainedOnZeroAttr
Specify the profile path in PGO use compilation
ObjCBridgeAttr
__builtin_ia32_pavgw256
V16sV16sV16s
__builtin_ia32_pblendw256
ObjCBridgeRelatedAttr
V8iV8iV8i
__builtin_ia32_phaddsw256
__builtin_ia32_phsubd256
ObjCExceptionAttr
V8iV16sV16s
__builtin_ia32_pmovmskb256
V4OiV8iV8i
ObjCExternallyRetainedAttr
__builtin_ia32_pmuludq256
__builtin_ia32_psadbw256
-mreassociate
ObjCMethodFamilyAttr
__builtin_ia32_pshufhw256
__builtin_ia32_psignb256
__builtin_ia32_psllwi256
ObjCPreciseLifetimeAttr
__builtin_ia32_pslldqi256_byteshift
V4OiV4OiIi
V8iV8ii
ObjCRequiresSuperAttr
__builtin_ia32_psllq256
V4OiV4OiV2Oi
__builtin_ia32_psradi256
ObjCRootClassAttr
__builtin_ia32_psrlw256
__builtin_ia32_psrldi256
Enable PGO instrumentation
ObjCSuppressDirectPropertyAttr
__builtin_ia32_permvarsi256
__builtin_ia32_permdf256
V4OiV4OiV4OiIi
OpenCLKernelAttr
__builtin_ia32_insert128i256
V4OiV4OiV2OiIi
V8iV8iC*V8i
OverrideAttr
__builtin_ia32_maskloadq
V2OiV2OiC*V2Oi
__builtin_ia32_maskstoreq256
OwnershipAttr
__builtin_ia32_maskstoreq
vV2Oi*V2OiV2Oi
-mrecord-mcount
ParamTypestateAttr
__builtin_ia32_psrlv8si
__builtin_ia32_psrlv4si
__builtin_ia32_gatherd_pd
PointerAttr
__builtin_ia32_gatherq_pd
V2dV2ddC*V2OiV2dIc
V4dV4ddC*V4OiV4dIc
PragmaClangBSSSectionAttr
__builtin_ia32_gatherq_ps
V4fV4ffC*V2OiV4fIc
__builtin_ia32_gatherd_q
PragmaClangRelroSectionAttr
V4OiV4OiOiC*V4iV4OiIc
PragmaClangRodataSectionAttr
-fprofile-list=
PragmaClangTextSectionAttr
__builtin_ia32_gatherq_d
V4iV4iiC*V2OiV4iIc
__builtin_ia32_vcvtps2ph
PtGuardedByAttr
__builtin_ia32_vcvtph2ps
V4fV8s
V8fV8s
PureAttr
__builtin_ia32_fxsave
__builtin_ia32_xsave
__builtin_ia32_xgetbv
RandomizeLayoutAttr
immintrin.h
__builtin_ia32_xsetbv
-mregparm=
ReinitializesAttr
__builtin_ia32_xsaves
__builtin_ia32_incsspd
__builtin_ia32_rstorssp
ReqdWorkGroupSizeAttr
__builtin_ia32_setssbsy
__builtin_ia32_clrssbsy
__builtin_ia32_clwb
RestrictAttr
__builtin_ia32_subborrow_u32
__builtin_ia32_rdseed16_step
__builtin_ia32_lzcnt_u32
ReturnTypestateAttr
__builtin_ia32_bzhi_si
__builtin_ia32_pdep_si
-fprofile-remapping-file=
ReturnsTwiceAttr
__builtin_ia32_lwpval32
vUiUiIUi
__builtin_ia32_sha1nexte
SYCLSpecialClassAttr
__builtin_ia32_sha256msg1
__builtin_ia32_sha256msg2
fma|fma4
SectionAttr
__builtin_ia32_vfmaddsd
__builtin_ia32_vfmaddsubps
__builtin_ia32_vfmaddpd256
SentinelAttr
V8dV8dV8dV8dUcIi
__builtin_ia32_vfmaddpd512_maskz
(integrated-as) Relax all machine instructions
SharedTrylockFunctionAttr
__builtin_ia32_vfmsubps512_mask3
__builtin_ia32_vfmaddsubpd512_mask
__builtin_ia32_vfmsubaddpd512_mask3
StandaloneDebugAttr
__builtin_ia32_vfmsubaddps512_mask3
__builtin_ia32_vpmacssww
__builtin_ia32_vpmacsswd
StrictGuardStackCheckAttr
__builtin_ia32_vpmacssdql
V2OiV4iV4iV2Oi
__builtin_ia32_vpmacsdqh
SwiftAsyncErrorAttr
__builtin_ia32_vphaddbd
SwiftAsyncNameAttr
-fprofile-reusedist
SwiftAttrAttr
V2OiV4i
__builtin_ia32_vphaddubw
__builtin_ia32_vphadduwd
SwiftBridgedTypedefAttr
__builtin_ia32_vphsubwd
__builtin_ia32_vphsubdq
__builtin_ia32_vprotb
SwiftImportAsNonGenericAttr
V16cV16cIc
__builtin_ia32_vprotwi
V4iV4iIc
SwiftNameAttr
__builtin_ia32_vpshld
__builtin_ia32_vpshlq
Use relaxable elf relocations
SwiftPrivateAttr
V8sV8sV8sIc
__builtin_ia32_vpcomud
__builtin_ia32_vpcomw
TLSModelAttr
V2dV2dV2dV2OiIc
__builtin_ia32_vpermil2pd256
__builtin_ia32_vpermil2ps
TargetClonesAttr
__builtin_ia32_vfrczsd
__builtin_ia32_vfrczps
__builtin_ia32_vfrczpd256
TransparentSteppingAttr
__builtin_ia32_xtest
Specifies that the sample profile is accurate
TrivialABIAttr
UOiUi*
__builtin_ia32_rdpid
__builtin_ia32_wrpkru
TypeTagForDatatypeAttr
V16fV16fIi
__builtin_ia32_rsqrt14sd_mask
__builtin_ia32_rsqrt14ss_mask
TypedMemoryAttr
V16fV16fV16fUs
__builtin_ia32_rsqrt28sd_round_mask
V4fV4fV4fV4fUcIi
UninitializedAttr
V16fV16fV16fUsIi
__builtin_ia32_rcp14sd_mask
-mrelocation-model
UnusedAttr
__builtin_ia32_rcp28ps_mask
__builtin_ia32_exp2pd_mask
V16iV16fV16iUsIi
UsingIfExistsAttr
__builtin_ia32_cvttpd2udq512_mask
__builtin_ia32_cmpps512_mask
__builtin_ia32_cmpps256_mask
VTablePointerAuthenticationAttr
UcV8dV8dIiUcIi
__builtin_ia32_cmppd256_mask
UcV2dV2dIiUc
VecTypeHintAttr
-fdriver-only
VisibilityAttr
Enable sample-based profile guided optimizations
WarnUnusedAttr
V8dV8dV8dIi
__builtin_ia32_maxps512
V16fV16iV16fUsIi
WeakAttr
__builtin_ia32_vcvtps2ph512_mask
V16sV16fIiV16sUs
V16fV16sV16fUsIi
WeakRefAttr
V16iiC*V16iUs
nV:512:
__builtin_ia32_loadups512_mask
WebAssemblyImportModuleAttr
__builtin_ia32_loadupd512_mask
V8ddC*V8dUc
Disallow generation of complex IT blocks.
WorkGroupSizeHintAttr
__builtin_ia32_storeupd512_mask
vd*V8dUc
__builtin_ia32_storeups512_mask
XRayInstrumentAttr
__builtin_ia32_alignq512
V8OiV8OiV8OiIi
V16iV16iV16iIi
ZeroCallUsedRegsAttr
__builtin_ia32_alignq256
__builtin_ia32_extractf64x4_mask
V4fV16fIiV4fUc
AbiTagAttr
V8iV8iV8iV8i
__builtin_ia32_vpdpbusd512
-fprofile-selected-function-group=
AlignValueAttr
__builtin_ia32_vpdpwssds128
__builtin_ia32_vpdpwssds256
V2dV2dvC*V2OiUcIi
CalledOnceAttr
V4dV4dvC*V4OiUcIi
__builtin_ia32_gather3div4di
__builtin_ia32_gather3div4sf
InitSegAttr
V4fV4fvC*V4OiUcIi
__builtin_ia32_gather3div8si
V2dV2dvC*V4iUcIi
LoopHintAttr
V4dV4dvC*V4iUcIi
__builtin_ia32_gather3siv4di
-mrtd
NoBuiltinAttr
V8fV8fvC*V8iUcIi
__builtin_ia32_gather3siv8si
V8dV8dvC*V8iUcIi
OMPCaptureKindAttr
V8dV8dvC*V8OiUcIi
__builtin_ia32_gatherdiv16sf
__builtin_ia32_gathersiv8di
OMPReferencedVarAttr
V8OiV8OivC*V8OiUcIi
__builtin_ia32_gatherdiv16si
vv*UcV8iV8dIi
ObjCClassStubAttr
vv*UcV8OiV8dIi
ObjCDesignatedInitializerAttr
ObjCDirectAttr
vv*UcV8OiV8OiIi
__builtin_ia32_scatterdiv16si
vUcV8ivC*IiIi
ObjCNonLazyClassAttr
vUcV8OivC*IiIi
__builtin_ia32_gatherpfqps
vUcV8iv*IiIi
ObjCRuntimeNameAttr
__builtin_ia32_scatterpfqps
__builtin_ia32_knotqi
__builtin_ia32_knotsi
ObjCSuppressDirectAttr
UsV16cV16cIiUs
avx512vl,avx512bw
-msave-restore
OverloadableAttr
__builtin_ia32_cmpb256_mask
UiV32cV32cIiUi
__builtin_ia32_cmpq256_mask
SwiftObjCMembersAttr
__builtin_ia32_cmpb512_mask
UOiV64cV64cIiUOi
UsV16iV16iIiUs
SwiftVersionedRemovalAttr
__builtin_ia32_ucmpb128_mask
__builtin_ia32_ucmpd128_mask
__builtin_ia32_ucmpb256_mask
ObjCProtocolLoc
__builtin_ia32_ucmpb512_mask
__builtin_ia32_ucmpd512_mask
Set update method of profile counters
__builtin_ia32_packusdw512
__builtin_ia32_packuswb512
V32sV32sV32s
scalable
__builtin_ia32_vpconflictdi_256
V4OiV4Oi
__builtin_ia32_vpconflictsi_256
enable
__builtin_ia32_vplzcntd_512
__builtin_ia32_vplzcntq_512
__builtin_ia32_vpopcntq_128
assume_safety
__builtin_ia32_vpopcntq_512
__builtin_ia32_vpopcntb_128
-msecure-plt
V16sV16s
__builtin_ia32_vpopcntb_512
V32sV32s
#pragma unroll
UiV32cV32cUi
__builtin_ia32_vpshufbitqmb512_mask
__builtin_ia32_pmulhrsw512
#pragma nounroll_and_jam
__builtin_ia32_divpd512
__builtin_ia32_divps512
__builtin_ia32_subpd512
 simdlen(
V32sV64cV64c
 uniform
atomic,prefer-atomic,single
 aligned(
__builtin_ia32_addsd_round_mask
__builtin_ia32_divsd_round_mask
__builtin_ia32_maxsd_round_mask
 device_type(
__builtin_ia32_compressdf256_mask
V4dV4dV4dUc
V2OiV2OiV2OiUc
 indirect
avx512vl,avx512vbmi2
__builtin_ia32_compresshi256_mask
V16cV16cV16cUs
 adjust_args(nothing:
V4fV4fV4fUc
__builtin_ia32_compresssf256_mask
-msgx
 append_args(
vV2d*V2dUc
__builtin_ia32_compressstoredf256_mask
vV2Oi*V2OiUc
 [[clang::aarch64_far_address_space
vV8s*V8sUc
__builtin_ia32_compressstorehi256_mask
__builtin_ia32_compressstoreqi128_mask
 __attribute__((aarch64_sve_pcs
vV4f*V4fUc
__builtin_ia32_compressstoresf256_mask
vV4i*V4iUc
 __attribute__((aarch64_vector_pcs
V4iV2dV4iUc
__builtin_ia32_cvtpd2ps_mask
Use instrumentation data for profile-guided optimization. If pathname is a directory, it reads from <pathname>/default.profdata. Otherwise, it reads from file <pathname>.
 __attribute__((amdgpu_flat_work_group_size
__builtin_ia32_cvtps2udq256_mask
V8iV8fV8iUc
__builtin_ia32_cvttpd2udq256_mask
 __attribute__((amdgpu_kernel
__builtin_ia32_expanddf256_mask
__builtin_ia32_expanddi128_mask
__builtin_ia32_expandhi128_mask
 __attribute__((amdgpu_num_sgpr
V2dV2dC*V2dUc
__builtin_ia32_expandloaddf256_mask
V4iV2OiC*V2OiUc
 __attribute__((amdgpu_num_vgpr
V8sV8sC*V8sUc
__builtin_ia32_expandloadhi256_mask
-msign-return-address-key=
 __attribute__((amdgpu_waves_per_eu
V4fV4fC*V4fUc
__builtin_ia32_expandloadsf256_mask
V4iV4iC*V4iUc
__builtin_ia32_expandsf256_mask
__builtin_ia32_expandsi128_mask
__builtin_ia32_getexppd128_mask
V2dV2dIiV2dUc
__builtin_ia32_rndscalepd_256_mask
V4fV4fIiV4fUc
UNDEF
__builtin_ia32_scalefpd256_mask
 __attribute__((interrupt
-fprofile-values
 [[gnu::interrupt
vv*UcV2OiV2OiIi
__builtin_ia32_scatterdiv4df
vv*UcV4OiV4OiIi
 [[gnu::signal
vv*UcV2OiV4iIi
__builtin_ia32_scatterdiv8sf
__builtin_ia32_scatterdiv8si
 [[gnu::abi_tag
vv*UcV4iV2OiIi
__builtin_ia32_scattersiv4df
vv*UcV4iV4OiIi
 [[clang::acquire_capability
vv*UcV4iV4iIi
__builtin_ia32_scattersiv8sf
none,all,non-leaf
 [[clang::acquire_shared_capability
__builtin_ia32_vpermi2varpd128
V2dV2dV2OiV2d
__builtin_ia32_vpermi2varpd512
 __attribute__((shared_lock_function
__builtin_ia32_vpermi2varps256
V8fV8fV8iV8f
V16fV16fV16iV16f
acquire_shared_capability
__builtin_ia32_vpermi2varq512
V8OiV8OiV8OiV8Oi
__builtin_ia32_vpermi2varqi256
shared_lock_function
__builtin_ia32_vpermi2varhi256
V16sV16sV16sV16s
-fprotect-parens
 [[clang::acquire_handle
__builtin_ia32_vpshldq256
__builtin_ia32_vpshldq512
__builtin_ia32_vpshldw512
 __attribute__((acquired_before
__builtin_ia32_vpshldvd512
__builtin_ia32_vpshldvq128
__builtin_ia32_vpshldvq512
 [[clang::address_space
__builtin_ia32_vpshrdvd256
__builtin_ia32_vpshrdvd512
__builtin_ia32_vpshrdvq512
 [[gnu::alias
__builtin_ia32_vpshrdd128
__builtin_ia32_vpshrdd256
-mskip-rax-setup
 __attribute__((align_value
__builtin_ia32_vpshrdw512
__builtin_ia32_pmovswb512_mask
__builtin_ia32_pmovwb512_mask
 [[gnu::aligned
__builtin_ia32_cvtpd2qq256_mask
V4OiV4dV4OiUc
__builtin_ia32_cvtpd2uqq256_mask
 alignas
__builtin_ia32_cvtps2uqq128_mask
__builtin_ia32_cvtps2uqq256_mask
__builtin_ia32_cvttpd2qq128_mask
aligned
Enable special debugger support behavior
align
-fpseudo-probe-for-profiling
alignas
V4dV4dV4dIiV4dUc
__builtin_ia32_rangeps128_mask
V8fV8fV8fIiV8fUc
 __attribute__((alloc_align
V4fV4fV4fV4fUcIiIi
__builtin_ia32_reducepd128_mask
__builtin_ia32_reduceps128_mask
 __attribute__((alloc_size
V16cV8sV16cUc
__builtin_ia32_pmovswb256_mask
__builtin_ia32_pmovuswb256_mask
 __attribute__((always_destroy
__builtin_ia32_cvtpd2uqq512_mask
__builtin_ia32_cvtps2qq512_mask
-msmall-data-limit
 __attribute__((always_inline
__builtin_ia32_cvttpd2qq512_mask
__builtin_ia32_cvttpd2uqq512_mask
__builtin_ia32_cvtuqq2pd512_mask
 [[clang::always_inline
__builtin_ia32_rangeps512_mask
V16fV16fV16fIiV16fUsIi
__builtin_ia32_reduceps512_mask
always_inline
__builtin_ia32_prold128
__builtin_ia32_prold256
__builtin_ia32_prolvd512
 __attribute__((analyzer_noreturn
__builtin_ia32_prolvd128
__builtin_ia32_prolvd256
-fptrauth-abi-version=
 [[clang::analyzer_suppress
__builtin_ia32_prorvd512
__builtin_ia32_prorvq512
__builtin_ia32_prorvq128
 [[clang::annotate
__builtin_ia32_pshuflw512
__builtin_ia32_psllv32hi
V32sV32sV8s
 __attribute__((no_caller_saved_registers
__builtin_ia32_psllv8hi
__builtin_ia32_pslldi512
__builtin_ia32_psrlv32hi
 __attribute__((nocf_check
__builtin_ia32_psrlqi512
__builtin_ia32_psrav32hi
-mspeculative-load-hardening
 __attribute__((objc_arc_weak_reference_unavailable
__builtin_ia32_psrlw512
__builtin_ia32_psrlwi512
__builtin_ia32_movdqa32load128_mask
 __attribute__((argument_with_type_tag
__builtin_ia32_movdqa32store512_mask
vV16i*V16iUs
V8OiV8OiC*V8OiUc
 __attribute__((pointer_with_type_tag
__builtin_ia32_movdqa64load128_mask
V2OiV2OiC*V2OiUc
__builtin_ia32_movdqa64store256_mask
argument_with_type_tag
avx512ifma,avx512vl
pointer_with_type_tag
-fptrauth-auth-traps
 __attribute__((__clang_arm_builtin_alias
__builtin_ia32_kunpckdi
UOiUOiUOi
V32sV32sC*V32sUi
 __attribute__((arm_locally_streaming
V8dV8dV8dV8OiIiUcIi
__builtin_ia32_fixupimmpd512_maskz
V16fV16fV16fV16iIiUsIi
 [[clang::__clang_arm_mve_strict_polymorphism
__builtin_ia32_fixupimmss_mask
V4fV4fV4fV4iIiUcIi
__builtin_ia32_getexpss128_round_mask
 __attribute__((arm_preserves_za
V4fV4fV4fIiV4fUcIi
__builtin_ia32_loaddquhi128_mask
-msse4.1
 __attribute__((arm_streaming
__builtin_ia32_fixupimmpd256_mask
V4dV4dV4dV4OiIiUc
V4fV4fV4fV4iIiUc
 __attribute__((artificial
__builtin_ia32_fixupimmps256_maskz
__builtin_ia32_loadapd128_mask
__builtin_ia32_loadapd256_mask
 asm
__builtin_ia32_loaddqudi256_mask
__builtin_ia32_loaddqusi128_mask
__builtin_ia32_loadupd256_mask
__asm__
vV32s*V32sUi
__builtin_ia32_storedquqi512_mask
-fptrauth-block-descriptor-pointers
 [[clang::assert_capability
__builtin_ia32_storesd128_mask
__builtin_ia32_storeapd256_mask
__builtin_ia32_storeaps256_mask
 [[clang::assert_shared_capability
__builtin_ia32_storedqusi256_mask
__builtin_ia32_storeupd128_mask
__builtin_ia32_storeups128_mask
assert_shared_capability
__builtin_ia32_rcp14ps256_mask
__builtin_ia32_vplzcntd_128
__builtin_ia32_vplzcntq_256
 __attribute__((assert_shared_lock
UiV2dIi
__builtin_ia32_vcvtss2si32
-msse
 [[gnu::assume_aligned
__builtin_ia32_vcvttss2usi32
__builtin_ia32_vpermilpd512
V8dV8dV8Oi
 [[clang::assume
__builtin_ia32_rndscaless_round_mask
__builtin_ia32_scalefpd512_mask
__builtin_ia32_scalefsd_round_mask
, strict
__builtin_ia32_psraq256
__builtin_ia32_psraqi128
V16iV16iV4i
, deprecated=
__builtin_ia32_psllv16si
, obsoleted=
-fptrauth-calls
, unavailable
__builtin_ia32_psrlv8di
__builtin_ia32_pternlogd512_mask
__builtin_ia32_pternlogq512_mask
introduced=
V4iV4iV4iV4iIiUc
__builtin_ia32_pternlogd128_maskz
V8iV8iV8iV8iIiUc
obsoleted=
__builtin_ia32_pternlogq256_mask
V4OiV4OiV4OiV4OiIiUc
__builtin_ia32_shuf_f64x2
 [[clang::preserve_access_index
__builtin_ia32_shufps512
__builtin_ia32_shuf_f32x4_256
-mstack-arg-probe
 [[clang::btf_decl_tag
__builtin_ia32_rsqrt14pd256_mask
__builtin_ia32_rsqrt14ps128_mask
UOiV64c
 [[clang::btf_type_tag
V32sUi
__builtin_ia32_cvtd2mask512
__builtin_ia32_cvtmask2d512
 __attribute__((blocks
UcV8Oi
__builtin_ia32_cvtb2mask128
UiV32c
 [[clang::builtin_alias
V32cUi
__builtin_ia32_cvtmask2w128
-fptrauth-function-pointer-type-discrimination
builtin_alias
__builtin_ia32_cvtd2mask256
UcV8i
__builtin_ia32_cvtmask2d256
 _Noreturn
__builtin_ia32_cvtmask2q256
V4OiUc
UcV2Oi
 __attribute__((cdecl
__builtin_ia32_pmovsdb512mem_mask
vV16c*V16iUs
__builtin_ia32_pmovsdw512_mask
 __cdecl
__builtin_ia32_pmovsqb512_mask
V16cV8OiV16cUc
-mstack-protector-guard-offset=
 __attribute__((cf_audited_transfer
__builtin_ia32_pmovsqw512_mask
V8sV8OiV8sUc
__builtin_ia32_pmovsdb128_mask
 __attribute__((cf_consumed
__builtin_ia32_pmovswb128mem_mask
vV16c*V8sUc
V16cV8iV16cUc
nocf
__builtin_ia32_pmovsdw128_mask
V8sV4iV8sUc
__builtin_ia32_pmovsdw256_mask
 __attribute__((guard
__builtin_ia32_pmovsqb128_mask
 [[clang::guard
-fptrauth-indirect-gotos
 __attribute__((cfi_canonical_jump_table
__builtin_ia32_pmovsqd128_mask
V4iV2OiV4iUc
__builtin_ia32_pmovsqd256_mask
 __attribute__((cf_returns_not_retained
__builtin_ia32_pmovsqw128_mask
V8sV2OiV8sUc
vV8s*V2OiUc
 __attribute__((cf_returns_retained
__builtin_ia32_pmovusdb512_mask
__builtin_ia32_pmovusdb512mem_mask
__builtin_ia32_pmovusdw512mem_mask
 __attribute__((cf_unknown_transfer
__builtin_ia32_pmovusqd512mem_mask
__builtin_ia32_pmovusqw512_mask
-mstack-protector-guard-symbol=
 __attribute__((cpu_dispatch
__builtin_ia32_pmovuswb256mem_mask
__builtin_ia32_pmovusdw128_mask
__builtin_ia32_pmovusdw256mem_mask
 __declspec(cpu_dispatch
__builtin_ia32_pmovusqb256mem_mask
__builtin_ia32_pmovusqd128_mask
__builtin_ia32_pmovusqd256_mask
 [[clang::cpu_specific
__builtin_ia32_pmovusqw256mem_mask
__builtin_ia32_pmovdb512_mask
__builtin_ia32_pmovdw512_mask
 __attribute__((constant
__builtin_ia32_pmovqd512_mask
__builtin_ia32_pmovqd512mem_mask
-fptrauth-intrinsics
constant
__builtin_ia32_pmovdb256mem_mask
__builtin_ia32_pmovwb256mem_mask
__builtin_ia32_pmovdw256_mask
 __declspec(__device__
__builtin_ia32_pmovqb256_mask
__builtin_ia32_pmovqb256mem_mask
__builtin_ia32_pmovqd128mem_mask
 __declspec(__device_builtin_surface_type__
__builtin_ia32_pmovqw256mem_mask
__builtin_ia32_extractf32x8_mask
V2dV8dIiV2dUc
 __declspec(__device_builtin_texture_type__
V2OiV8OiIiV2OiUc
__builtin_ia32_extracti32x4_mask
-mstackrealign
 __declspec(__global__
V2OiV4OiIiV2OiUc
__builtin_ia32_extractf32x4_256_mask
V4iV8iIiV4iUc
 __attribute__((host
V8dV8dV2dIi
__builtin_ia32_inserti32x8
__builtin_ia32_inserti64x2_512
host
V8OiV8OiV4OiIi
__builtin_ia32_insertf64x2_256
__builtin_ia32_inserti32x4_256
 __declspec(__launch_bounds__
-fdump-parse-tree
 __attribute__((shared
-fptrauth-kernel-abi-version
 __declspec(__shared__
__builtin_ia32_getexpps512_mask
__builtin_ia32_vfmaddss3_mask
__builtin_ia32_vfmaddsd3_mask
 [[_Noreturn
__builtin_ia32_vfmsubss3_mask3
__builtin_ia32_permdf512
__builtin_ia32_permvarhi512
unknown
__builtin_ia32_permvarqi512
__builtin_ia32_permvarqi128
__builtin_ia32_permvarhi256
unconsumed
UcV2dIiUc
__builtin_ia32_fpclasspd256_mask
-msve-vector-bits=
 [[clang::callable_when
UsV16fIiUs
__builtin_ia32_fpclasspd512_mask
__builtin_ia32_fpclassss_mask
 [[clang::callback
__builtin_ia32_kadddi
__builtin_ia32_kandqi
__builtin_ia32_kandsi
 [[clang::called_once
__builtin_ia32_kandndi
__builtin_ia32_korqi
__builtin_ia32_kordi
 [[clang::capability
__builtin_ia32_kortestchi
iUsUs
-fptrauth-objc-class-ro
 [[clang::shared_capability
__builtin_ia32_kortestzdi
__builtin_ia32_ktestcqi
__builtin_ia32_ktestzhi
shared_capability
__builtin_ia32_ktestzdi
__builtin_ia32_kunpckhi
__builtin_ia32_kxnorhi
 [[carries_dependency
__builtin_ia32_kxorsi
__builtin_ia32_kxordi
__builtin_ia32_kshiftlihi
 [[gnu::cleanup
UOiUOiIUi
__builtin_ia32_kshiftriqi
-mt-migrate-directory
 __attribute__((cmse_nonsecure_entry
__builtin_ia32_kmovq
__builtin_ia32_palignr512
V8sV16cV16cIi
 __attribute__((cold
V32sV64cV64cIi
__builtin_ia32_psadbw512
__builtin_ia32_compressdf512_mask
 __attribute__((common
__builtin_ia32_compressqi512_mask
V64cV64cV64cUOi
V16iV16iV16iUs
 __attribute__((const
UcV4fV4fIiUcIi
 [[gnu::const
-fptrauth-objc-interface-sel
 __attribute__((__const
__builtin_ia32_expandloadhi512_mask
__builtin_ia32_expandloadqi512_mask
__builtin_ia32_expandsf512_mask
 constinit
__builtin_ia32_compressstoredf512_mask
__builtin_ia32_compressstoredi512_mask
__builtin_ia32_compressstoreqi512_mask
 [[clang::require_constant_initialization
__builtin_ia32_vcvtph2ps256_mask
V8fV8sV8fUc
__builtin_ia32_vcvtps2ph256_mask
require_constant_initialization
__builtin_ia32_cvtw2mask128
UcV8s
Set the deployment target to be the specified OS and OS version
 [[gnu::constructor
__builtin_ia32_cvtss2sd_round_mask
V2dV2dV4fV2dUcIi
__builtin_ia32_vpmultishiftqb512
 [[clang::consumable
V8sV4fV4f
avx512bf16,avx512vl
V16sV8fV8f
 [[clang::consumable_auto_cast_state
__builtin_ia32_cvtneps2bf16_256_mask
V8sV8fV8sUc
__builtin_ia32_dpbf16ps_128
 [[clang::consumable_set_state_on_read
__builtin_ia32_dpbf16ps_512
V16fV16fV16iV16i
-fptrauth-objc-isa-masking
 [[clang::convergent
avx512vp2intersect,avx512vl
__builtin_ia32_vp2intersect_q_128
vV16iV16iUs*Us*
 __attribute__((dllexport
vV4iV4iUc*Uc*
__builtin_ia32_vcomish
__builtin_ia32_addph512
 __declspec(dllimport
__builtin_ia32_maxph512
__builtin_ia32_minph512
 [[gnu::dllimport
__builtin_ia32_addsh_round_mask
-mtgsplit
__builtin_ia32_cmpph512_mask
UiV32xV32xIiUiIi
__builtin_ia32_cmpph128_mask
UcV8xV8xIiUcIi
 __declspec(deprecated
 [[deprecated
__builtin_ia32_loadsh128_mask
V8xV8xC*V8xUc
vV8x*V8xUc
 __attribute__((destructor
__builtin_ia32_rcpph512_mask
V32xV32xV32xUi
__builtin_ia32_rsqrtph512_mask
 __attribute__((diagnose_as_builtin
__builtin_ia32_getmantph256_mask
 [[clang::diagnose_as_builtin
-fptrauth-objc-isa-mode=
error
V8xV8xV8xV8xUc
__builtin_ia32_scalefph256_mask
V32xV32xV32xV32xUiIi
 __attribute__((diagnose_if
__builtin_ia32_reduceph128_mask
__builtin_ia32_reduceph256_mask
__builtin_ia32_rcpsh_mask
 [[clang::disable_sanitizer_instrumentation
__builtin_ia32_scalefsh_round_mask
__builtin_ia32_rndscalesh_round_mask
__builtin_ia32_sqrtph
 [[clang::disable_tail_calls
__builtin_ia32_sqrtph512
V32xV32xIi
posix,single
 __attribute__((enable_if
UiV32xIiUi
__builtin_ia32_fpclasssh_mask
__builtin_ia32_vcvtpd2ph256_mask
 [[clang::enforce_tcb
__builtin_ia32_vcvtph2pd128_mask
V2dV8xV2dUc
V4dV8xV4dUc
 [[clang::enforce_tcb_leaf
__builtin_ia32_vcvtss2sh_round_mask
V8xV8xV4fV8xUcIi
__builtin_ia32_vcvtsh2sd_round_mask
open
__builtin_ia32_vcvtph2w256_mask
V16sV16xV16sUs
strip,sign-and-strip,sign-and-auth
 [[clang::enum_extensibility
V8xV8sV8xUc
__builtin_ia32_vcvtw2ph256_mask
V32xV32sV32xUiIi
 [[gnu::error
V16UsV16xV16UsUs
__builtin_ia32_vcvtph2uw512_mask
__builtin_ia32_vcvttph2uw128_mask
 [[gnu::warning
__builtin_ia32_vcvtuw2ph256_mask
V16xV16UsV16xUs
__builtin_ia32_vcvtph2dq128_mask
 [[clang::exclude_from_explicit_instantiation
__builtin_ia32_vcvtph2dq512_mask
V16iV16xV16iUsIi
Enable direct TLS access through segment registers (default)
 __attribute__((external_source_symbol
__builtin_ia32_vcvtdq2ph128_mask
V8xV4iV8xUc
__builtin_ia32_vcvtdq2ph512_mask
 [[fallthrough
__builtin_ia32_vcvtudq2ph256_mask
V8xV8UiV8xUc
V16xV16UiV16xUsIi
 __attribute__((fallthrough
__builtin_ia32_vcvttph2udq256_mask
__builtin_ia32_vcvttph2udq512_mask
__builtin_ia32_vcvtqq2ph256_mask
 __attribute__((fastcall
__builtin_ia32_vcvtph2qq128_mask
 [[gnu::fastcall
Enable signing and authentication of Objective-C object's 'isa' field
 __fastcall
__builtin_ia32_vcvtuqq2ph256_mask
V8xV4UOiV8xUc
__builtin_ia32_vcvtph2uqq128_mask
final
__builtin_ia32_vcvtph2uqq512_mask
V8UOiV8xV8UOiUcIi
__builtin_ia32_vcvttph2qq256_mask
 __attribute__((flag_enum
__builtin_ia32_vcvtsh2si32
iV8xIi
__builtin_ia32_vcvtusi2sh
 __attribute__((flatten
__builtin_ia32_vcvttsh2si32
__builtin_ia32_vcvttsh2usi32
Thread pointer access method (AArch32/AArch64 only)
 __attribute__((format
__builtin_ia32_vcvtps2phx128_mask
V8xV4fV8xUc
__builtin_ia32_vcvtps2phx512_mask
 __attribute__((format_arg
__builtin_ia32_vfmaddph256
V16xV16xV16xV16x
__builtin_ia32_vfmaddph512_mask3
keep
__builtin_ia32_vfmaddsubph512_maskz
__builtin_ia32_vfmaddsubph512_mask3
__builtin_ia32_vfmaddsh3_mask
 __attribute__((function_return
__builtin_ia32_vfmaddcph128_mask
__builtin_ia32_vfmaddcph128_maskz
Enable signing and authentication of return addresses
 __attribute__((gnu_inline
__builtin_ia32_vfcmaddcph128_maskz
__builtin_ia32_vfcmaddcph256_mask
__builtin_ia32_vfcmaddcph512_maskz
 __attribute__((guarded_by
__builtin_ia32_vfcmaddcsh_mask
__builtin_ia32_vfcmaddcsh_maskz
__builtin_ia32_vfmaddcsh_round_mask3
 [[clang::guarded_var
__builtin_ia32_vfmulcph128_mask
__builtin_ia32_vfmulcph256_mask
__builtin_ia32_vfcmulcph256_mask
 __declspec(__managed__
__builtin_ia32_selectb_256
V32cUiV32cV32c
-mtsxldtrk
:register
__builtin_ia32_selectw_512
V32sUiV32sV32s
__builtin_ia32_selectd_256
pixel
__builtin_ia32_selectph_128
V8xUcV8xV8x
V16xUsV16xV16x
geometry
__builtin_ia32_selectq_256
V4OiUcV4OiV4Oi
__builtin_ia32_selectps_128
domain
Add OpenCL builtin function declarations (experimental)
compute
Enable software lowering of pointer authentication
library
__builtin_ia32_selectsh_128
__builtin_ia32_selectss_128
ddV8d
intersection
xxV32x
__builtin_ia32_reduce_fadd_ph256
__builtin_ia32_reduce_fadd_ph128
closestHit
fV16f
__builtin_ia32_reduce_fmax_ph512
xV16x
callable
__builtin_ia32_reduce_fmin_ps512
__builtin_ia32_reduce_fmin_ph512
-mtvos-simulator-version-min=
amplification
__builtin_ia32_reduce_fmul_ph128
__builtin_ia32_monitorx
__builtin_ia32_umonitor
 __attribute__((hot
__builtin_ia32_clzero
__builtin_ia32_cldemote
vUi*Ui
 __attribute__((ibaction
__builtin_ia32_enqcmd
Ucv*vC*
vV2OiV2OiV2OiUi
 __attribute__((iboutlet
UiUiV2OiV2Oiv*
__builtin_ia32_aesenc128kl_u8
Enable address discrimination of vtable pointers
 __attribute__((iboutletcollection
kl,widekl
__builtin_ia32_aesencwide256kl_u8
__builtin_ia32_serialize
 __attribute__((ifunc
_WriteBarrier
__cpuid
vi*ii
 __attribute__((init_priority
__stosb
vUc*Ucz
__ud2
#pragma init_seg
__readfsqword
__readgsbyte
 __attribute__((intel_ocl_bicc
LLiLLiLLiLLi*
_umul128
__shiftleft128
 __attribute__((internal_linkage
__builtin_ia32_writeeflags_u64
vUOi
OiV4f
 __attribute__((lto_visibility_public
__builtin_ia32_movnti64
vOi*Oi
__builtin_ia32_crc32di
 __declspec(layout_version
V4OiV4OiOiIi
 __attribute__((leaf
Enable type discrimination of vtable pointers
 [[gnu::leaf
__builtin_ia32_wrgsbase64
__builtin_ia32_fxrstor64
__builtin_ia32_xrstor64
 [[clang::lifetimebound
__builtin_ia32_xsaves64
__builtin_ia32_incsspq
__builtin_ia32_wrssq
 [[clang::likely
__builtin_ia32_subborrow_u64
__builtin_ia32_rdrand64_step
__builtin_ia32_lzcnt_u64
 [[clang::loader_uninitialized
__builtin_ia32_pdep_di
__builtin_ia32_pext_di
-multi_module
 __attribute__((locks_excluded
__builtin_ia32_vcvtsd2si64
OiV2dIi
__builtin_ia32_vcvtss2si64
vectorize_width
__builtin_ia32_vcvttsd2si64
__builtin_ia32_vcvttsd2usi64
__builtin_ia32_vcvttss2usi64
interleave_count
__builtin_ia32_cvtusi2sd64
V2dV2dUOiIi
__builtin_ia32_vcvtsh2si64
unroll_count
__builtin_ia32_vcvtusi642sh
V8xV8xUOiIi
Set pch file name (with /Yc and /Yu)
unroll_and_jam_count
__builtin_ia32_stui
__builtin_ia32_testui
vUWi
pipeline_initiation_interval
__builtin_ia32_tileloaddt164_internal
__builtin_ia32_tdpbssd_internal
__builtin_ia32_tdpbsud_internal
vectorize_predicate
__builtin_ia32_tilezero_internal
V256iUsUs
__builtin_ia32_tile_storeconfig
loop
__builtin_ia32_tileloadd64
vIUcvC*z
-framework
nounroll_and_jam
-fdeclspec
 __attribute__((mig_server_routine
 [[clang::mig_server_routine
__builtin_getps
__xcore__
 __attribute__((ms_abi
 __single_inheritance
 __virtual_inheritance
__single_inheritance
__virtual_inheritance
 __declspec(novtable
-mv55
 [[gnu::ms_struct
auto
 [[gnu::may_alias
const
continue
 [[clang::maybe_undef
float
 [[gnu::micromips
register
return
File holding the seed used by the randomize structure layout feature
 [[clang::minsize
typedef
union
volatile
 [[clang::min_vector_width
_Atomic
_Bool
_Generic
 [[gnu::mips16
__func__
__objc_yes
__ptrauth_restricted_intptr
vector=sw1
class
const_cast
-mv65
vector=hw1
mutable
namespace
private
vector=hw3
static_cast
template
throw
vector=hw5
using
virtual
inline
 __attribute__((long_call
char32_t
 [[gnu::long_call
The seed used by the randomize structure layout feature
 __attribute__((far
co_return
co_yield
consteval
long_call
char8_t
_Float16
typeof_unqual
 __attribute__((short_call
_Decimal64
_Decimal128
__attribute
 __attribute__((near
__builtin_FUNCTION
__builtin_LINE
-mv68
short_call
__ibm128
__imag
__real
 __attribute__((mode
__auto_type
__FUNCDNAME__
L__FUNCTION__
 __attribute__((musttail
__is_trivially_destructible
__is_nothrow_destructible
__is_nothrow_constructible
 __attribute__((ns_consumed
__has_trivial_move_constructor
__has_nothrow_assign
-frange-check
 __attribute__((ns_consumes_self
__has_virtual_destructor
__is_abstract
__is_class
 __attribute__((ns_error_domain
__is_final
__is_literal
__is_polymorphic
 [[clang::ns_returns_autoreleased
__is_trivially_copyable
__is_union
__add_pointer
 [[clang::ns_returns_not_retained
__make_unsigned
__remove_all_extents
-mvpclmulqdq
 [[clang::ns_returns_retained
__remove_restrict
__remove_volatile
__is_bounded_array
 [[gnu::naked
__is_referenceable
__reference_binds_to_temporary
__is_rvalue_expr
 __declspec(noalias
__is_void
__is_array
__is_lvalue_reference
 [[clang::no_builtin
__is_object
no_builtin
-freal-4-real-16
 __attribute__((nocommon
__is_signed
__is_unsigned
__array_rank
 __attribute__((nodebug
__builtin_ptrauth_type_discriminator
__builtin_ptrauth_struct_key
__builtin_xnu_type_signature
 __attribute__((noderef
__declspec
__cdecl
__thiscall
 __attribute__((no_destroy
__unaligned
__super
Specify the vscale minimum. Defaults to "1". (AArch64 only)
 __attribute__((noduplicate
__read_only
__write_only
vec_step
 __attribute__((noescape
image2d_t
image2d_array_t
image2d_array_depth_t
 __noinline__
image3d_t
pipe
cbuffer
 [[gnu::noinline
__vector
__pixel
-freal-8-real-10
 __declspec(noinline
__bridge_retain
__covariant
_Nonnull
 [[gnu::no_instrument_function
__ptr64
__ptr32
__uptr
 [[clang::nomerge
__leave
__int64
__single_inheritance
 [[gnu::nomicromips
__builtin_convertvector
__builtin_bit_cast
 [[gnu::nomips16
code_completion
comment
numeric_constant
 [[gnu::no_profile_instrument_function
utf16_char_constant
utf32_char_constant
wide_string_literal
 [[gnu::no_randomize_layout
l_square
r_square
l_brace
 [[gnu::noreturn
 __declspec(noreturn
-freal-8-real-4
 __attribute__((no_sanitize
minus
arrow
tilde
 __attribute__((no_speculative_load_hardening
slashequal
percent
less
 __attribute__((no_split_stack
greater
greatergreater
caret
 __attribute__((no_stack_protector
question
colon
-mwatch-bitcode-compatibility
 __declspec(safebuffers
hashat
periodstar
safebuffers
annot_cxxscope
annot_typename
annot_non_type
 [[clang::no_thread_safety_analysis
annot_decltype
annot_pragma_unused
annot_pragma_parser_crash
 [[gnu::nothrow
annot_pragma_align
annot_pragma_weak
-freciprocal-math
 [[no_unique_address
annot_pragma_float_control
annot_pragma_ms_pointers_to_members
annot_pragma_opencl_extension
 [[clang::nouwtable
annot_pragma_openmp_end
 __attribute__((nonnull
Don't treat unattributed constexpr functions as __host__ __device__.
 [[gnu::nonnull
-mwavefrontsize64
__is_destructible
__is_nothrow_destructible
__has_nothrow_move_assign
__has_nothrow_assign
__has_nothrow_copy
__has_trivial_copy
omp_default_mem_alloc
__is_abstract
__is_aggregate
__is_enum
omp_const_mem_alloc
__is_polymorphic
__is_standard_layout
__is_trivially_copyable
omp_low_lat_mem_alloc
__is_unbounded_array
__is_nullptr
__is_arithmetic
omp_pteam_mem_alloc
__is_void
__is_array
-mwbnoinvd
inbranch
__is_scalar
__is_compound
__is_member_function_pointer
#pragma omp declare simd
__is_signed
__is_unsigned
__is_nothrow_assignable
link
__reference_binds_to_temporary
__is_same
__is_constructible
__array_extent
sizeof
-mwindows
#pragma omp declare variant
-ffp-contract=
declare variant
/system/develop/headers/c++
clang
 version 15.0.0
 [[clang::os_consumed
-Wfatal-errors
-Wfatal-errors=
custom
function
-bundle-align=
omp_no_parallelism
 [[clang::os_returns_not_retained
use-dbg-addr
Invalid address space, must be a 24bit integer
Invalid pointer size of 0 bytes
Missing alignment specification for pointer in datalayout string
Invalid index size of 0 bytes
 __attribute__((os_returns_retained_on_non_zero
Invalid ABI alignment, must be a 16bit integer
Invalid ABI alignment, must be a power of 2
Invalid preferred alignment, must be a power of 2
 __attribute__((os_returns_retained_on_zero
Expected mangling specifier in datalayout string
Unknown mangling specifier in datalayout string
Invalid bit width, must be a 24bit integer
 __attribute__((objc_boxable
-frecovery-ast-type
 [[clang::objc_boxable
enable-fs-discriminator
Enable optimization remarks from passes whose name match the given regular expression
Enable missed optimization remarks from passes whose name match the given regular expression
pass-remarks-analysis
-mxsavec
-header-include-filtering=
 [[clang::objc_bridge_mutable
Disables inttoptr/ptrtoint roundtrip optimization
-module-file-deps
  .section .hip_fatbin, "dw"
-module-dependency-dir
NOT 
BISECT: 
 [[clang::objc_class_stub
DW_TAG_array_type
DW_TAG_entry_point
DW_TAG_enumeration_type
DW_TAG_label
DW_TAG_lexical_block
DW_TAG_reference_type
 [[clang::objc_designated_initializer
DW_TAG_subroutine_type
DW_TAG_typedef
DW_TAG_unspecified_parameters
 [[clang::objc_direct
DW_TAG_inlined_subroutine
DW_TAG_module
DW_TAG_subrange_type
 [[clang::objc_direct_members
DW_TAG_catch_block
DW_TAG_const_type
-mxsave
 [[clang::objc_exception
DW_TAG_packed_type
DW_TAG_subprogram
DW_TAG_thrown_type
 [[clang::objc_protocol_requires_explicit_implementation
DW_TAG_volatile_type
DW_TAG_dwarf_procedure
DW_TAG_interface_type
 [[clang::objc_externally_retained
DW_TAG_imported_unit
DW_TAG_condition
DW_TAG_rvalue_reference_type
 [[clang::objc_gc
DW_TAG_dynamic_type
DW_TAG_atomic_type
Preserve expressions in AST rather than dropping them when encountering semantic errors
 [[clang::objc_independent_class
DW_TAG_function_template
DW_TAG_class_template
DW_TAG_GNU_template_template_param
 __kindof
DW_TAG_GNU_call_site_parameter
DW_TAG_APPLE_property
DW_TAG_SUN_class_template
alloc
DW_TAG_SUN_memop_info
DW_TAG_SUN_omp_child_func
DW_TAG_SUN_dtor
init
DW_TAG_LLVM_ptrauth_type
DW_TAG_ALTIUM_circ_type
-new-struct-path-tbaa
DW_TAG_GHS_using_declaration
DW_TAG_GHS_template_templ_param
DW_TAG_UPC_relaxed
 [[clang::objc_method_family
DW_TAG_BORLAND_Delphi_string
DW_TAG_BORLAND_Delphi_dynamic_array
DW_TAG_BORLAND_Delphi_variant
 [[clang::NSObject
DW_AT_byte_size
DW_AT_bit_offset
DW_AT_low_pc
 [[clang::objc_nonlazy_class
DW_AT_discr_value
 __attribute__((objc_non_runtime_protocol
-freg-struct-return
 [[clang::objc_non_runtime_protocol
DW_AT_default_value
DW_AT_inline
DW_AT_producer
 [[clang::objc_ownership
DW_AT_bit_stride
DW_AT_upper_bound
DW_AT_accessibility
 [[clang::objc_precise_lifetime
DW_AT_count
DW_AT_data_member_location
DW_AT_decl_line
 [[clang::objc_requires_property_definitions
DW_AT_external
DW_AT_frame_base
-no-clear-ast-before-backend
 [[clang::objc_requires_super
DW_AT_specification
DW_AT_static_link
DW_AT_variable_parameter
 [[clang::objc_returns_inner_pointer
DW_AT_associated
DW_AT_data_location
DW_AT_entry_pc
 [[clang::objc_root_class
DW_AT_call_column
DW_AT_call_file
DW_AT_binary_scale
 [[clang::objc_runtime_name
DW_AT_digit_count
DW_AT_picture_string
-fregister-global-dtors-with-atexit
 [[clang::objc_runtime_visible
DW_AT_pure
DW_AT_recursive
DW_AT_data_bit_offset
 [[clang::objc_subclassing_restricted
DW_AT_string_length_bit_size
DW_AT_string_length_byte_size
DW_AT_str_offsets_base
 [[clang::objc_suppress_direct
DW_AT_reference
DW_AT_rvalue_reference
DW_AT_call_all_source_calls
 __read_only
DW_AT_call_origin
DW_AT_call_parameter
-no-code-completion-ns-level-decls
 __write_only
DW_AT_noreturn
DW_AT_alignment
DW_AT_defaulted
 __read_write
DW_AT_GHS_using_declaration
DW_AT_MIPS_fde
DW_AT_MIPS_tail_loop_begin
__read_only
DW_AT_MIPS_stride
DW_AT_MIPS_abstract_name
DW_AT_MIPS_stride_byte
__write_only
DW_AT_MIPS_assumed_shape_dopetype
write_only
-fregs-graph
__read_write
DW_AT_HP_cold_region_high_pc
DW_AT_HP_all_variables_modifiable
DW_AT_HP_unit_name
 __constant
DW_AT_HP_default_location
DW_AT_HP_is_result_param
DW_AT_GHS_rsm
 __attribute__((opencl_constant
DW_AT_GHS_lbrace_line
DW_AT_sf_names
DW_AT_src_coords
__constant
DW_AT_GNU_odr_signature
DW_AT_GNU_template_name
--no-cuda-include-ptx=
 __generic
DW_AT_GNU_all_call_sites
DW_AT_GNU_all_source_call_sites
DW_AT_GNU_dwo_name
 __attribute__((opencl_generic
DW_AT_GNU_pubnames
DW_AT_GNU_pubtypes
DW_AT_GNU_locviews
__generic
DW_AT_SUN_count_guarantee
DW_AT_SUN_command_line
DW_AT_SUN_language
opencl_generic
DW_AT_SUN_cf_kind
DW_AT_SUN_vtable_index
Enable C++17 relaxed template template argument matching
 global
DW_AT_SUN_obj_dir
DW_AT_SUN_obj_file
DW_AT_SUN_amd64_parmdump
 [[clang::opencl_global
DW_AT_SUN_return_with_const
DW_AT_SUN_import_by_name
DW_AT_SUN_pass_by_ref
opencl_global
DW_AT_SUN_dtor_start
DW_AT_SUN_dtor_length
DW_AT_SUN_dtor_state_deltas
 [[clang::opencl_global_device
DW_AT_SUN_is_omp_child_func
DW_AT_SUN_fortran_main_alias
Don't error out if the detected version of the CUDA install is too low for the requested CUDA gpu architecture.
 [[clang::opencl_global_host
DW_AT_GNU_bias
DW_AT_GO_kind
DW_AT_GO_embedded_field
 __kernel
DW_AT_IBM_home_location
DW_AT_IBM_alt_srcview
DW_AT_PGI_soffset
 __local
DW_AT_BORLAND_property_index
DW_AT_BORLAND_property_default
DW_AT_BORLAND_Delphi_record
 __attribute__((opencl_local
DW_AT_BORLAND_Delphi_destructor
 [[clang::opencl_local
-freorder-blocks
__local
DW_AT_LLVM_sysroot
DW_AT_LLVM_tag_offset
DW_AT_LLVM_ptrauth_extra_discriminator
opencl_local
DW_AT_APPLE_optimized
DW_AT_APPLE_flags
DW_AT_APPLE_block
 private
DW_AT_APPLE_property_getter
DW_AT_APPLE_property_setter
DW_AT_APPLE_property
 [[clang::opencl_private
DW_FORM_addr
DW_FORM_block2
Don't preserve order of LLVM use-lists when serializing
private
DW_FORM_block1
DW_FORM_data1
DW_FORM_strp
 __attribute__((opencl_unroll_hint
DW_FORM_ref2
DW_FORM_ref4
DW_FORM_ref_udata
 [[clang::optnone
DW_FORM_ref_sig8
DW_FORM_strx
DW_FORM_strp_sup
 [[clang::overloadable
DW_FORM_loclistx
DW_FORM_rnglistx
-freroll-loops
 __attribute__((ownership_holds
DW_FORM_addrx2
DW_FORM_addrx3
DW_FORM_GNU_str_index
 __attribute__((ownership_returns
DW_OP_addr
DW_OP_deref
DW_OP_const1s
 __attribute__((ownership_takes
DW_OP_const8u
DW_OP_const8s
DW_OP_dup
ownership_holds
DW_OP_swap
DW_OP_rot
Do not remove finalize method in gc mode
ownership_takes
DW_OP_mul
DW_OP_neg
DW_OP_plus
 [[gnu::packed
DW_OP_shra
DW_OP_xor
DW_OP_eq
 [[clang::param_typestate
DW_OP_ne
DW_OP_skip
DW_OP_lit2
 [[clang::pascal
DW_OP_lit6
 __pascal
-fretain-comments-from-system-headers
 _pascal
DW_OP_lit14
DW_OP_lit15
DW_OP_lit18
 [[clang::pass_object_size
DW_OP_lit22
DW_OP_lit23
DW_OP_lit25
 [[clang::pass_dynamic_object_size
DW_OP_lit30
DW_OP_lit31
DW_OP_reg2
pass_dynamic_object_size
DW_OP_reg6
DW_OP_reg7
Do not link against HIP runtime libraries
 [[gnu::patchable_function_entry
DW_OP_reg14
DW_OP_reg15
DW_OP_reg18
aapcs-vfp
DW_OP_reg22
DW_OP_reg23
DW_OP_reg25
 [[gnu::pcs
DW_OP_reg30
DW_OP_reg31
DW_OP_breg2
 __ptrauth
DW_OP_breg6
DW_OP_breg7
-frewrite-includes
__ptrauth
DW_OP_breg14
DW_OP_breg15
DW_OP_breg18
 __attribute__((ptrauth_struct
DW_OP_breg22
DW_OP_breg23
DW_OP_breg25
 __attribute__((preferred_name
DW_OP_breg30
DW_OP_breg31
DW_OP_bregx
 __attribute__((preserve_all
DW_OP_nop
DW_OP_push_object_address
-no-integrated-as
 __attribute__((preserve_most
DW_OP_implicit_value
DW_OP_stack_value
DW_OP_constx
 __attribute__((pt_guarded_by
DW_OP_deref_type
DW_OP_xderef_type
DW_OP_reinterpret
 [[clang::pt_guarded_var
DW_OP_HP_mod_range
DW_OP_HP_unmod_range
DW_OP_WASM_location
 __ptr64
-fdump-vtable-layouts
 __attribute__((pure
-fripa
 [[gnu::pure
DW_OP_LLVM_arg
DW_ATE_address
DW_ATE_float
supervisor
DW_ATE_unsigned_char
DW_ATE_imaginary_float
DW_ATE_numeric_string
 __attribute__((randomize_layout
DW_ATE_UTF
DW_ATE_UCS
DW_ATE_HP_float128
 __attribute__((enforce_read_only_placement
DW_ATE_HP_imaginary_float128
DW_DS_unsigned
Do not error on use of NSAllocateCollectable/NSReallocateCollectable
 __attribute__((regcall
DW_END_little
DW_END_lo_user
DW_ACCESS_protected
 __regcall
DW_DEFAULTED_out_of_class
DW_VIS_local
DW_VIS_qualified
 [[clang::reinitializes
DW_LANG_C
DW_LANG_Ada83
DW_LANG_Cobol85
 [[clang::release_capability
DW_LANG_Modula2
DW_LANG_Java
Generate read-only position independent code (ARM only)
 [[clang::release_shared_capability
DW_LANG_UPC
DW_LANG_D
DW_LANG_Go
 [[clang::release_generic_capability
DW_LANG_C_plus_plus_11
DW_LANG_OCaml
DW_LANG_C11
 [[clang::unlock_function
DW_LANG_Fortran03
DW_LANG_Fortran08
DW_LANG_Mips_Assembler
release_shared_capability
DW_ID_up_case
DW_ID_down_case
Don't Use the new driver for offloading compilation.
unlock_function
DW_CC_GNU_renesas_sh
DW_CC_GNU_borland_fastcall_i386
DW_CC_BORLAND_pascal
 [[clang::release_handle
DW_CC_BORLAND_fastcall
DW_CC_LLVM_vectorcall
DW_CC_LLVM_X86_64SysV
 __attribute__((reqd_work_group_size
DW_CC_LLVM_OpenCLKernel
DW_CC_LLVM_Swift
DW_CC_LLVM_X86RegCall
 [[clang::requires_capability
DW_INL_inlined
 __attribute__((exclusive_locks_required
-frtlib-add-rpath
 [[clang::exclusive_locks_required
DW_LNS_advance_line
DW_LNS_set_file
DW_LNS_set_basic_block
 [[clang::requires_shared_capability
DW_LNS_set_epilogue_begin
DW_LNS_set_isa
DW_LNE_set_address
 [[clang::shared_locks_required
DW_MACINFO_start_file
DW_MACINFO_end_file
DW_MACRO_define
exclusive_locks_required
DW_MACRO_define_strp
DW_MACRO_undef_strp
-no-pie
shared_locks_required
DW_MACRO_GNU_define
DW_MACRO_GNU_undef
DW_MACRO_GNU_define_indirect
 __attribute__((malloc
DW_MACRO_GNU_undef_indirect_alt
DW_MACRO_GNU_transparent_include_alt
DW_RLE_base_addressx
restrict
DW_RLE_start_end
DW_RLE_start_length
DW_LLE_startx_endx
 __attribute__((retain
DW_LLE_base_address
DW_LLE_start_end
-frtti-data
 __attribute__((return_typestate
DW_CFA_advance_loc
DW_CFA_offset
DW_CFA_advance_loc1
 __attribute__((returns_nonnull
DW_CFA_restore_extended
DW_CFA_undefined
DW_CFA_register
 __attribute__((returns_twice
DW_CFA_def_cfa_offset
DW_CFA_def_cfa_expression
DW_CFA_def_cfa_sf
 __sptr
DW_CFA_val_expression
DW_CFA_LLVM_def_aspace_cfa
--no-standard-includes
 [[clang::sycl_kernel
DW_APPLE_PROPERTY_copy
DW_APPLE_PROPERTY_nonatomic
DW_APPLE_PROPERTY_weak
 [[clang::sycl_special_class
DW_APPLE_PROPERTY_null_resettable
DW_APPLE_PROPERTY_class
DW_UT_type
 [[clang::scoped_lockable
DW_ATOM_null
DW_ATOM_die_offset
DW_ATOM_type_flags
 [[gnu::section
NONE
 __declspec(allocate
-frwpi
section
-fcs-profile-generate
allocate
ignore,maytrap,strict
 __declspec(selectany
Turn off struct-path aware Type Based Alias Analysis
SV3264
 [[gnu::sentinel
 [[clang::set_typestate
R_RL
R_RLA
R_TOC
 __attribute__((speculative_load_hardening
R_TCL
R_REF
R_BR
 __attribute__((standalone_debug
R_TLS_LD
R_TLS_LE
-cc1as
--no-system-header-prefix
 [[gnu::stdcall
can't enter sub block: already at end of stream
Array element type can't be an Array or a Blob
Failed to read size: 
Array element type has to be an encoding of a type
 _stdcall
<arg>
--no-undefined
cortex-a53
cortex-a55
cortex-a65
swift_private
cortex-a75
cortex-a76
cortex-a78
 __attribute__((swift_async
cortex-x1
cortex-x1c
neoverse-e1
 __attribute__((swiftasynccall
neoverse-v2
cyclone
apple-a9
 __attribute__((swift_async_context
apple-a13
apple-a14
apple-a16
nonnull_error
exynos-m3
exynos-m4
saphira
nonzero_argument
thunderx
thunderxt88
-nobuiltininc
 [[clang::swift_async_error
invalid
+lse
 __attribute__((swift_attr
+sha3
+sha2
+dotprod
 __attribute__((swift_bridged_typedef
+spe
+ras
+sve2-aes
 [[clang::swiftcall
+sve2p1
+rcpc
-nocpp
 [[clang::swift_context
+i8mm
+f32mm
+ls64
zero_result
+sme
+sme-f64f64
+sme2
 __attribute__((swift_error
armv8-a
armv8.1-a
 [[clang::swift_error_result
8.2-A
+v8.2a
-fsanitize-address-destructor=
 [[clang::swift_indirect_result
armv8.5-a
8.5-A
8.6-A
struct
+v8.7a
armv8.8-a
+v8.8a
 __attribute__((swift_newtype
9.1-A
+v9.1a
+v9.2a
swift_newtype
armv8-r
-nodefaultlibs
 __attribute__((swift_objc_members
-rdm
 __attribute__((symbol_metadata_footnote
sha2
-sha2
-aes
 __attribute__((sysv_abi
simd
-neon
fp16fml
 __attribute__((tls_model
 [[gnu::tls_model
none,global
 __attribute__((target
sve2-sm4
-sve2-sm4
sve2-bitperm
 __attribute__((target_clones
rcpc
-rcpc
-rand
 __attribute__((test_typestate
bf16
 __attribute__((thiscall
f32mm
-f32mm
Do not add include paths for CUDA/HIP and do not include the default CUDA/HIP wrapper headers
 __thiscall
brbe
-brbe
flagm
 __declspec(thread
sme-f64f64
-sme-f64f64
-sme-i16i64
 [[clang::transparent_stepping
cdecl,fastcall,stdcall,vectorcall,regcall
 __attribute__((transparent_union
-analyzer-disable-all-checks
Do not link device library for CUDA/HIP device compilation
v6s-m
 [[clang::trivial_abi
v6kz
 [[clang::try_acquire_capability
v7-m
v7e-m
 [[clang::try_acquire_shared_capability
arm64
v8-a
v8.2a
try_acquire_shared_capability
v8.4a
v8.4-a
Do not include the default HIP wrapper headers and include paths
 _Null_unspecified
v8.8a
v8.8-a
 _Nullable_result
v9.1-a
v9.2a
v9.3a
 [[clang::type_tag_for_datatype
v8-m.main
v8.1m.main
-vfp2sp
hidden
-vfp3sp
-fp16
Enable linker dead stripping of globals in AddressSanitizer
 __attribute__((type_visibility
-fp-armv8sp
+d32
thumb
 __attribute__((typed_memory_operation
fpe2
fpe3
invalid
 __uptr
vfp4
vfpv4
vfp4-d16
 [[clang::unavailable
fpv4-sp-d16
fp4-dp-d16
-nopie
 [[clang::uninitialized
neon-vfpv3
neon
arm810
 [[clang::unlikely
strongarm1110
arm7tdmi
arm710t
 [[clang::unsafe_buffer_usage
arm920t
arm922t
arm10tdmi
 __attribute__((unused
arm966e-s
arm968e-s
Always generate function calls for address sanitizer instrumentation
maybe_unused
mpcore
mpcorenovfp
arm1156t2-s
 __attribute__((use_handle
cortex-m1
sc000
cortex-a7
 __attribute__((used
cortex-a17
krait
cortex-r5
used
sc300
cortex-m3
-nostartfiles
 [[clang::using_if_exists
cortex-m85
cortex-a32
cortex-a55
[uuid
cortex-a75
cortex-a76
cortex-a77
no_authentication
cortex-x1c
neoverse-n1
cyclone
process_independent
kryo
default_address_discrimination
Enable poisoning array cookies when using custom operator new[] in AddressSanitizer
no_address_discrimination
aapcs16
apcs-gnu
armv4
default_extra_discrimination
+v4t
type_discrimination
armv5tej
5TEJ
 __attribute__((ptrauth_vtable_pointer
armv6t2
-nostdlib++
 __attribute__((vecreturn
+v6m
armv7-a
armv7ve
 __attribute__((vec_type_hint
+v7r
 [[clang::vectorcall
armv8-a
8.1-A
 _vectorcall
+v8.2a
armv8.3-a
Select the mode of detecting stack use-after-return in AddressSanitizer
 [[gnu::visibility
8.5-A
+v8.5a
+v8.6a
 [[gnu::warn_unused
armv8.8-a
8.8-A
armv9-a
 [[clang::warn_unused_result
+v9.1a
armv9.2-a
armv9.3-a
 [[gnu::warn_unused_result
+v8r
Disable standard system #include directories
warn_unused_result
armv8.1-m.main
8.1-M.Mainline
armv7s
 [[gnu::weak
+v7k
 [[clang::weak_import
fp-armv8
fp-armv8-fullfp16-d16
neon-vfpv4
 [[gnu::weakref
-dsp
 __attribute__((export_name
never,runtime,always
 [[clang::export_name
+lob
 [[clang::import_module
cdecp1
+cdecp1
cdecp2
 [[clang::import_name
-cdecp3
cdecp4
cdecp5
 __attribute__((force_align_arg_pointer
cdecp6
 [[gnu::force_align_arg_pointer
/fsanitize-address-use-after-return
 __attribute__((xray_always_instrument
Hex strings require an exponent
Invalid character in significand
 __attribute__((xray_never_instrument
-Inf
0.0E+0
Optimize for size  (like /Og     /Os /Oy /Ob2 /GF /Gy)
LLVM_DIAGNOSTIC_DIR
Bytes used: 
xray_never_instrument
 __attribute__((xray_log_args
: for the 
 __attribute__((xnu_usage_semantics
' value invalid for integer argument!
' value invalid for uint argument!
 (default: 
skip
General options
: CommandLine Error: Option '
inconsistency in registered CommandLine options
used-gpr
Enable use-after-scope detection in AddressSanitizer
--offload
zlib error: Z_MEM_ERROR
zlib error: Z_BUF_ERROR
all-gpr
+fdivdu
+fpuv3_hi
+fpuv3_sf
ck801t
e801
ck802j
 __attribute__((zero_call_used_regs
s802t
ck803
ck803t
interop(
ck803eh
ck803et
ck803efh
NoCommentKind
ck803r1
ck803r2
Disable function inlining
ParamCommandComment
ck803tr3
ck803htr1
ck803fr1
VerbatimBlockComment
ck803fhr2
ck803fhr3
ck803er2
ParagraphComment
ck803etr1
ck803etr2
ck803ehtr2
HTMLEndTagComment
ck803efr3
ck803efhr1
Only inline functions explicitly or implicitly marked inline
InlineCommandComment
ck803eftr2
ck803eftr3
ck803efhtr3
VerbatimBlockLineComment
e803t
ck803s
ck803se
[out]
ck804h
ck804t
ck804fh
ck804eht
ck804ef
-fsanitize-blacklist=
Returns 
e804f
e804ft
ck805
ck805ef
ck805et
ck805eft
ck807f
ck807ef
r807
ck810ef
ck810eft
Treat source input files as Objective-C++ inputs
ck810v
ck810ev
c810v
textblock
c810tv
c810eftv
ck860f
protectedsection
invalid
none
fpuv2_df
fpuv3_hi
abstract
-fsanitize-cfi-canonical-jump-tables
addindex
floate1
+floate1
+float1e2
anchor
-float1e3
float3e4
-float3e4
attention
+hwdiv
-hwdiv
-multiple_stld
authors
edsp
+edsp
Only modify files with a filename contained in the provided directory path
brief
-dspe60
dspv2
dsp_silan
+elrw
-elrw
+trust
callback
cache
+cache
+nvic
category
high-registers
-fsanitize-cfi-cross-dso
class
code
+vdsp2e3
-vdsp2e3
-vdsp2e60f
hard-tp
+hard-tp
soft-tp
endcode
concept
-istack
constpool
cond
+ccrt
-ccrt
Enable migration to modern ObjC
constant
copybrief
+2e3
copydetails
3e3r1
-3e3r1
copyright
+3e3r3
-3e3r3
-3e7
-fdwarf2-cfi-asm
defgroup
Enable migration to property and method annotations
can't skip block: already at end of stream
Assert that the compilation takes place in a freestanding environment
Unexpected end of file reading %u of %u bytes
A file error occurred.
Multiple errors:
LLVM ERROR: 
FixIt
output_stream_error
DiagFlag
decimal128
decimal32
docbookinclude
sizeof... 
alignof 
operator.*
enddocbookonly
'block-literal'
> typename 
dotfile
operator"" 
pixel vector[
vtable for 
else
covariant return thunk to 
thread-local wrapper routine for 
Enable migration to infer instancetype for method result type
initializer for module 
emoji
amdhip64.lib
Invalid UTF-8 sequence
[{0}:{1}, byte={2}]: {3}
Invalid JSON value (false?)
enum
Expected , or } after object property
Invalid JSON value
Invalid escape sequence
exception
extends
failed to create unique file 
failed to write to 
failed to create link 
<macro>=<value>
-objcmt-migrate-ns-macros
PLEASE submit a bug report to http://developer.apple.com/bugreporter/ and include the crash backtrace.
-dynamic
string must be lowercase
standard user-level extension 'e' requires 'rv32'
mafdcbv
unsupported standard user-level extension '%c'
extension name missing after separator '_'
unsupported %s '%s'
zve32x
functiongroup
zve32f requires f or zfinx extension to also be specified
zve64d requires d or zdinx extension to also be specified
helper
zvl*b requires v or zve* extension to also be specified
ilp32d
lp64d
helps
zawrs
ztso
Enable migration of setter/getter messages to property-dot syntax
hidecallergraph
zbkb
zbkc
zkne
hiderefby
htmlinclude
zvl64b
zvl128b
zvl1024b
endhtmlonly
zvl16384b
zvl32768b
-fsanitize-coverage-control-flow
mafdqlcbkjtpvn
minor version number missing after 'p' for extension '
multi-character extensions must be separated by underscores
image
unsupported version number 
 for experimental extension '
-fno-diagnostics-show-option
include
ingroup
Allocation failed
) is larger than maximum value for size type (
interface
Included from 
endinternal
can't open file '
malformed section header on line 
malformed regex for section 
malformed line 
/diagnostics:caret
Enable caret and column diagnostics (default)
                          ... Statistics Collected ...
sparc-myriad-rtems-ld
Allocation failed
Manglings '
' and '
--dependencies
-disable-red-zone
-fdebug-default-version=
invalid
generic-rv32
rocket-rv64
sifive-e20
sifive-e31
endmanonly
sifive-s51
sifive-s54
sifive-u74
method
-64bit
gfx600
gfx601
oland
gfx700
hawaii
mscfile
mullins
gfx704
gfx705
name
tonga
gfx803
polaris11
noop
stoney
gfx900
Enable migration to modern ObjC subscripting
note
gfx90c
gfx940
gfx1012
ownership
gfx1032
gfx1033
gfx1035
page
gfx1103
r600
r630
parblock
rv620
rv670
Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property's 'atomic' attribute
paragraph
cypress
hemlock
sumo
performance
aruba
cayman
-objcmt-returns-innerpointer-property
private
%9lld  
   ---User Time---
   --System Time--
  ---Mem---
  ---Instr---
"time.
protected
.wall
.user
.instr
public
-fno-digraphs
publicsection
i686-nacl
aarch64
aarch64_be
amdgcn
related
bpfeb
bpfel
dxil
relates
lanai
le32
loongarch64
remark
mips
mipsel
nvptx64
result
powerpcle
r600
riscv32
returns
sparcel
sparcv9
-objcxx-isystem
rtfinclude
tcele
thumb
wasm32
endrtfonly
xcore
mipsisa32r6
mipsisa64r6
secreflist
wasm
apple
amdhsa
security
cloudabi
contiki
-ObjC
seealso
fuchsia
haiku
showinitializer
macosx
mesa3d
nvcl
showrefs
rtems
bridgeos
skip
watchos
windows
-fsanitize-coverage-no-prune
snippet
eabi
eabihf
gnuabin32
struct
gnu_ilp32
itanium
macabi
subsection
simulator
pixel
hull
superclass
raygeneration
intersection
-object-file-name
template
ppc32le
ppcle
mipsr6el
test
cortex-a8
cortex-a9
arm926ej-s
throw
i986
amd64
xscaleeb
todo
mips64eb
mipsn32r6
-fsanitize-coverage-pc-table
typedef
spirv32v1.2
spirv32v1.3
spirv64v1.0
enduml
spirv64v1.4
union
Use GOT indirection to reference external data symbols
until
HANGUL SYLLABLE 
endverbatim
warning
xrefitem
xmlonly
CJK UNIFIED IDEOGRAPH-
endxmlonly
RedirectingFileSystem (UseExternalNames: 
ExternalFS:
 (UseExternalName: false)
\@"&<
process
expected mapping node
roots
expected array
'fallthrough' and 'redirecting-with' are mutually exclusive
expected mapping node for file or directory entry
external-contents
Only compile for the offloading device.
entry with relative path at the root level is not discoverable
expected boolean value
missing key '
  'use-external-names': '
  'overlay-relative': '
Preprocess to stdout
-fno-directives-only
DiscardOnSignal
AtomicWrite
output not closed
output already closed
Enable basic block tracing in sanitizer coverage
popcnt
sse2
sse3
sse4.2
fma4
bmi2
pclmul
avx512er
avx512pf
avx5124vnniw
gfni
vpclmulqdq
avx512bitalg
i486
winchip-c6
i586
i686
pentium2
--offload-new-driver
pentium4m
prescott
penryn
goldmont
tremont
corei7-avx
ivybridge
core-avx2
cascadelake
--offload=
sapphirerapids
alderlake
lakemont
athlon
athlon-tbird
athlon-mp
opteron
k8-sse3
amdfam10
bdver1
bdver2
-fsanitize-coverage-trace-div
x86-64-v2
x86-64-v3
3dnow
amx-bf16
amx-int8
cldemote
crc32
fsgsbase
widekl
/Oi-
prefetchwt1
rdpid
sahf
uintr
vaes
wbnoinvd
xsaveopt
-fsanitize-coverage-trace-gep
Place each function's basic blocks in unique sections (ELF Only)
-feliminate-unused-debug-symbols
YAML
#;/?:@&=+$,_.!~*'()[]
Expected quote at end of scalar
Got empty plain scalar
Got empty alias or anchor
A text line is less indented than the block scalar
Unknown tag handle 
tag:yaml.org,2002:str
Unexpected token in Key Value.
Unexpected token. Expected Key or Block End
Could not find closing ]!
Enable opaque pointers
missing required key '
unknown key '
expected sequence of bit values
unexpected scalar in sequence of bit values
Map key must be a scalar
invalid call
true
-fvisibility-externs-dllimport=default
alnum
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
blank
digit
graph
print
ABCDEFGHIJKLMNOPQRSTUVWXYZ
0123456789ABCDEFabcdef
alert
newline
vertical-tab
/openmp
dollar-sign
percent-sign
apostrophe
comma
hyphen
full-stop
three
-opt-record-file
colon
semicolon
greater-than-sign
backslash
reverse-solidus
circumflex
-fgcse-after-reload
-fcas-path
-opt-record-format
llvm_regexec() failed to match
REG_BADPAT
invalid collating element
trailing backslash (\)
REG_ESUBREG
brackets ([ ]) not balanced
braces not balanced
REG_BADBR
REG_ERANGE
repetition-operator operand invalid
REG_EMPTY
"can't happen" -- you found a bug
Enable PC tracing in sanitizer coverage
arm64
hw.cpufamily
apple-a8
apple-a9
apple-a12
/fcgl
Only record remark information for passes whose names match the given regular expression
HOME
TMPDIR
-zrelax=transtls
/dev/null
Child timed out but wouldn't die
Child timed out
 (core dumped)
posix_spawn failed
Couldn't fork
--optimize
Enable tracing of stores
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
 %-*s
 %#0*lx
pthread_create failed
pthread_join failed
RuntimeRoot should be an array
PublicSDKContentRoot
__builtin_sve_svldff1_gather_s64index_f64
--spirv-tools-dis
__builtin_sve_svldff1_gather_s64index_u64
__builtin_sve_svldff1_gather_u32base_f32
llvm-spirv
__builtin_sve_svldff1_gather_u32base_offset_f32
[[deprecated]]
__builtin_sve_svldff1_gather_u32base_u32
__attribute__((deprecated))
spirv-link
__builtin_sve_svldff1_gather_u32offset_f32
Optimize for speed
__builtin_sve_svldff1_gather_u64base_index_f64
anchor
/../libexec
partial_ordering
Sanitizer coverage type
weak_ordering
-output-asm-variant
strong_ordering
__builtin_sve_svldff1_gather_u64index_f64
equal
/opt/nec/ve/lib
equivalent
__builtin_sve_svldff1_gather_u64offset_s64
less
Select the asm variant index to use for output
greater
__builtin_sve_svldff1_s64
unordered
/opt/nec/ve/include
CFStringCreateWithFormat
-fno-dump-fortran-optimized
CFStringCreateWithFormatAndArguments
--output-class-directory=
CFStringAppendFormat
__builtin_sve_svldff1_vnum_f32
CFStringAppendFormatAndArguments
-ldl
(anonymous)
__builtin_sve_svldff1_vnum_s64
`anonymous namespace'
--output-class-directory
(anonymous namespace)
__builtin_sve_svldff1_vnum_u64
(anonymous 
wasm64
auto
Specify the type of coverage instrumentation for Sanitizers
extern
--output=
__private_extern__
__builtin_sve_svldff1sb_gather_u32base_s32
register
crt1-command.o
static
__builtin_sve_svldff1sb_gather_u64base_offset_s64
main
--output
wmain
__builtin_sve_svldff1sb_gather_u64offset_s64
WinMain
_initialize
wWinMain
-fno-dump-fortran-original
DllMain
field-padding
__builtin_sve_svldff1sb_vnum_s16
<deduction guide for 
wasm-opt
operator 
__builtin_sve_svldff1sb_vnum_u32
<using-directive>
Deprecated (like /Og /Oi /Ot /Oy /Ob2); use /O2
AccessSpec
__builtin_sve_svldff1sh_gather_s32offset_s32
Block
-mno-bulk-memory
Captured
Select the HWAddressSanitizer ABI to target (interceptor or platform, default interceptor). This option is currently unused.
ClassScopeFunctionSpecialization
/Oy-
Empty
__builtin_sve_svldff1sh_gather_u32base_offset_s32
Export
-mno-sign-ext
ExternCContext
__builtin_sve_svldff1sh_gather_u32index_s32
FileScopeAsm
Disable frame pointer omission (x86 only, default)
Friend
__builtin_sve_svldff1sh_gather_u64base_index_s64
FriendTemplate
+bulk-memory
Import
-fgcse-sm
LifetimeExtendedTemporary
LinkageSpec
__builtin_sve_svldff1sh_gather_u64offset_s64
Using
+sign-ext
UsingEnum
__builtin_sve_svldff1sh_u32
HLSLBuffer
Enable frame pointer omission (x86 only)
Label
__builtin_sve_svldff1sh_vnum_u32
Namespace
-fwasm-exceptions
NamespaceAlias
Enable aliasing mode in HWAddressSanitizer
ObjCCompatibleAlias
ObjCCategory
__builtin_sve_svldff1sw_gather_u64base_offset_s64
ObjCCategoryImpl
-enable-emscripten-cxx-exceptions
ObjCImplementation
__builtin_sve_svldff1sw_gather_u64index_s64
ObjCInterface
ObjCProtocol
__builtin_sve_svldff1sw_s64
ObjCMethod
+exception-handling
ObjCProperty
-fno-dwarf-directory-asm
BuiltinTemplate
Set multiple /O flags at once; e.g. '/O2y-' for '/O2 /Oy-'
Concept
__builtin_sve_svldff1ub_gather_u32base_offset_s32
ClassTemplate
-emscripten-cxx-exceptions-allowed
FunctionTemplate
__builtin_sve_svldff1ub_gather_u32offset_s32
TypeAliasTemplate
<flags>
VarTemplate
__builtin_sve_svldff1ub_gather_u64base_s64
TemplateTemplateParm
--force-attribute=
Enum
Path to ignorelist file for sanitizers
Record
CXXRecord
__builtin_sve_svldff1ub_u32
ClassTemplateSpecialization
-mllvm -wasm-enable-sjlj
ClassTemplatePartialSpecialization
__builtin_sve_svldff1ub_vnum_s64
TemplateTypeParm
Write output to <file>
ObjCTypeParam
__builtin_sve_svldff1uh_gather_s32index_s32
TypeAlias
Do not emit  debug info for defined but unused types
Typedef
-fgcse
UnresolvedUsingTypename
UnresolvedUsingIfExists
__builtin_sve_svldff1uh_gather_u32base_index_s32
UsingDirective
wasm-ld
UsingPack
__builtin_sve_svldff1uh_gather_u32base_s32
UsingShadow
Deprecated (set output file name); use /Fe or /Fe
ConstructorUsingShadow
__builtin_sve_svldff1uh_gather_u32offset_s32
Binding
Field
-fsanitize-link-runtime
ObjCAtDefsField
-pagezero_size
ObjCIvar
__builtin_sve_svldff1uh_gather_u64index_s64
Function
XCC_CPLUS_INCLUDE_PATH
CXXDeductionGuide
__builtin_sve_svldff1uh_s32
CXXMethod
--param=
CXXConstructor
__builtin_sve_svldff1uh_vnum_s32
CXXConversion
XCore-as
CXXDestructor
-fno-elide-constructors
MSProperty
--param
NonTypeTemplateParm
__builtin_sve_svldff1uw_gather_u64base_index_s64
XCore-ld
Decomposition
__builtin_sve_svldff1uw_gather_u64base_s64
ImplicitParam
-pass-exit-codes
OMPCapturedExpr
__builtin_sve_svldff1uw_gather_u64offset_s64
ParmVar
--output-format=ELF
VarTemplateSpecialization
Enable detection of uninitialized parameters and return values
VarTemplatePartialSpecialization
-pch-through-hdrstop-create
EnumConstant
__builtin_sve_svldnf1_f32
IndirectField
ifso
MSGuid
__builtin_sve_svldnf1_s64
OMPDeclareMapper
When creating a PCH, stop PCH generation after #pragma hdrstop.
OMPDeclareReduction
__builtin_sve_svldnf1_u64
TemplateParamObject
.ifs
UnnamedGlobalConstant
-fgeneric-block-helpers-use-extended-layout
UnresolvedUsingValue
-pch-through-hdrstop-use
OMPAllocate
__builtin_sve_svldnf1_vnum_s64
OMPRequires
OMPThreadPrivate
__builtin_sve_svldnf1_vnum_u64
ObjCPropertyImpl
When using a PCH, skip tokens until after a #pragma hdrstop.
PragmaComment
__builtin_sve_svldnf1sb_s64
PragmaDetectMismatch
RequiresExprBody
Enable origins tracking in MemorySanitizer
StaticAssert
-pch-through-header=
TranslationUnit
__builtin_sve_svldnf1sb_vnum_u32
*** Decl Stats:
 decls total.
__builtin_sve_svldnf1sh_u32
 AccessSpec decls, 
Stop PCH generation after including this file.  When using a PCH, skip tokens until after this file is included.
 each (
__builtin_sve_svldnf1sh_vnum_u32
 Block decls, 
 Captured decls, 
-fno-elide-type
 ClassScopeFunctionSpecialization decls, 
-pedantic-errors
 Empty decls, 
__builtin_sve_svldnf1ub_s64
 Export decls, 
 ExternCContext decls, 
__builtin_sve_svldnf1ub_vnum_s16
 FileScopeAsm decls, 
-pedantic
 Friend decls, 
__builtin_sve_svldnf1ub_vnum_u32
 FriendTemplate decls, 
 Import decls, 
-fsanitize-memory-use-after-dtor
 LifetimeExtendedTemporary decls, 
Warn on language extensions
 LinkageSpec decls, 
__builtin_sve_svldnf1uh_vnum_u32
 Using decls, 
 UsingEnum decls, 
__builtin_sve_svldnf1uw_vnum_s64
 HLSLBuffer decls, 
/permissive-
 Label decls, 
-fdefault-integer-8
 Namespace decls, 
-fembed-bitcode-marker
 NamespaceAlias decls, 
Generic block helpers use extended layout
 ObjCCompatibleAlias decls, 
Disable non conforming code from compiling (default)
 ObjCCategory decls, 
__builtin_sve_svldnt1_gather_u32base_f32
 ObjCCategoryImpl decls, 
 ObjCImplementation decls, 
__builtin_sve_svldnt1_gather_u32base_offset_f32
 ObjCInterface decls, 
/permissive
 ObjCProtocol decls, 
__builtin_sve_svldnt1_gather_u32base_u32
 ObjCMethod decls, 
 ObjCProperty decls, 
-fsanitize-memtag-mode=
 BuiltinTemplate decls, 
Enable some non conforming code to compile
 Concept decls, 
__builtin_sve_svldnt1_gather_u64base_offset_f64
 ClassTemplate decls, 
 FunctionTemplate decls, 
__builtin_sve_svldnt1_gather_u64base_u64
 TypeAliasTemplate decls, 
 VarTemplate decls, 
__builtin_sve_svldnt1_gather_u64offset_f64
 TemplateTemplateParm decls, 
 Enum decls, 
-fno-eliminate-unused-debug-symbols
 Record decls, 
Enable mcount instrumentation
 CXXRecord decls, 
__builtin_sve_svldnt1_u32
 ClassTemplateSpecialization decls, 
 ClassTemplatePartialSpecialization decls, 
__builtin_sve_svldnt1_vnum_f16
 TemplateTypeParm decls, 
-pic-is-pie
 ObjCTypeParam decls, 
__builtin_sve_svldnt1_vnum_s32
 TypeAlias decls, 
 Typedef decls, 
-fsanitize-minimal-runtime
 UnresolvedUsingTypename decls, 
File is for a position independent executable
 UnresolvedUsingIfExists decls, 
__builtin_sve_svldnt1b_s8_x4
 UsingDirective decls, 
 UsingPack decls, 
__builtin_sve_svldnt1b_vnum_s8_x4
 UsingShadow decls, 
-pic-level
 ConstructorUsingShadow decls, 
__builtin_sve_svldnt1d_f64_x4
 Binding decls, 
 Field decls, 
-fgeneric-block-helpers
 ObjCAtDefsField decls, 
Value for __PIC__
 ObjCIvar decls, 
__builtin_sve_svldnt1d_vnum_s64_x4
 Function decls, 
 CXXDeductionGuide decls, 
__builtin_sve_svldnt1h_bf16_x4
 CXXMethod decls, 
-pie
 CXXConstructor decls, 
__builtin_sve_svldnt1h_s16_x4
 CXXConversion decls, 
hlsl
 CXXDestructor decls, 
Enable recovery for specified sanitizers
 MSProperty decls, 
-pipe
 NonTypeTemplateParm decls, 
__builtin_sve_svldnt1h_vnum_s16_x4
 Var decls, 
cuda-cpp-output
 Decomposition decls, 
__builtin_sve_svldnt1sb_gather_s64offset_u64
 ImplicitParam decls, 
Use pipes between commands, when possible
 OMPCapturedExpr decls, 
__builtin_sve_svldnt1sb_gather_u32base_u32
 ParmVar decls, 
hip-cpp-output
 VarTemplateSpecialization decls, 
Emit  debug info for defined but unused types
 VarTemplatePartialSpecialization decls, 
-plugin-arg-
 EnumConstant decls, 
__builtin_sve_svldnt1sb_gather_u64offset_u64
 IndirectField decls, 
objc-cpp-output
 MSGuid decls, 
__builtin_sve_svldnt1sh_gather_s64offset_u64
 OMPDeclareMapper decls, 
<name> <arg>
 OMPDeclareReduction decls, 
__builtin_sve_svldnt1sh_gather_u32base_offset_u32
 TemplateParamObject decls, 
c++-cpp-output
 UnnamedGlobalConstant decls, 
-fsanitize-stats
 UnresolvedUsingValue decls, 
-plugin
 OMPAllocate decls, 
__builtin_sve_svldnt1sh_gather_u64base_offset_u64
 OMPRequires decls, 
objc++-cpp-output
 OMPThreadPrivate decls, 
__builtin_sve_svldnt1sh_gather_u64index_u64
 ObjCPropertyImpl decls, 
Use the named plugin action instead of the default action (use "help" to list available options)
 PragmaComment decls, 
__builtin_sve_svldnt1sw_gather_s64index_u64
 PragmaDetectMismatch decls, 
Embed placeholder LLVM IR data as a marker
 RequiresExprBody decls, 
Use generic block helpers for copying/destroying blocks
 StaticAssert decls, 
-preamble-bytes=
 TranslationUnit decls, 
__builtin_sve_svldnt1sw_gather_u64base_u64
not available on 
c-header
introduced in 
__builtin_sve_svldnt1sw_gather_u64offset_u64
obsoleted in 
Assume that the precompiled header is a precompiled preamble covering the first N bytes of the main file
first deprecated in 
__builtin_sve_svldnt1ub_gather_u32base_offset_u32
00000000-0000-0000-C000-000000000046
objective-c-header-cpp-output
00020400-0000-0000-C000-000000000046
-fsanitize-system-blacklist=
VideoFullscreenInterfaceAVKit
-prebind_all_twolevel_modules
GUID{%08x-%04hx-%04hx-
__builtin_sve_svldnt1ub_gather_u64base_u64
%02hhx
c++-header-cpp-output
unnamed-global-constant
__builtin_sve_svldnt1uh_gather_s64index_u64
__invoke
-prebind
public
__builtin_sve_svldnt1uh_gather_u32base_index_u32
private
c++-header-unit-cpp-output
protected
-fno-escaping-block-tail-calls
self
--precompile
_cmd
__builtin_sve_svldnt1uh_gather_u64base_index_u64
NSObject
c++-system-header
__builtin_sve_svldnt1uh_gather_u64base_u64
Only precompile the input
#pragma omp end declare target
__builtin_sve_svldnt1uh_gather_u64offset_u64
 ...
objective-c++-header-cpp-output
concept 
-fsanitize-system-ignorelist=
__asm (
--prefix=
friend 
__builtin_sve_svldnt1uw_gather_u64base_offset_u64
@import 
c++-module
extern "
__builtin_sve_svldnt1uw_gather_u64index_u64
using enum 
--prefix
cbuffer 
__builtin_sve_svldnt1w_f32_x4
tbuffer 
@compatibility_alias 
-fget-definition
@interface 
-preload
<<error-type>>
__builtin_sve_svldnt1w_vnum_s32_x4
__covariant 
assembler-with-cpp
__contravariant 
UWiq8y
@implementation 
--preprocess
@class 
UWiq4f
@protocol 
java
-fsanitize-thread-atomics
-print-dependency-directives-minimized-source
@required
UWiq2Wi
@optional
lto-ir
getter = 
UWiq8Us
setter = 
Print the output of the dependency directives source minimizer
__module_private__ 
UWiq2UWi
 struct
ifs-cpp
virtual 
Disable support for exception handling
--print-diagnostic-categories
typedef 
__builtin_sve_svlogb_f32_z
using typename 
plist
using namespace 
__builtin_sve_svlsl_n_s16_m
mutable 
-print-diagnostic-options
extern 
__builtin_sve_svlsl_n_s32_x
__private_extern__ 
rewritten-legacy-objc
consteval 
-fsanitize-thread-func-entry-exit
Print all of Clang's warning options
__builtin_sve_svlsl_n_u16_m
 throw(
precompiled-header
 noexcept
__builtin_sve_svlsl_n_u32_x
auto 
-print-effective-triple
 requires 
Default DWARF version to use, if a -g option caused DWARF debug info to be produced
 = 0
-fembed-bitcode=
 = delete
Get the symbol definition from <line> <start-column> <end-column>
 = default
Print the effective target triple
__thread 
__builtin_sve_svlsl_s32_x
_Thread_local 
thread_local 
__builtin_sve_svlsl_s64_z
#pragma omp declare mapper (
-print-file-name=
#pragma omp declare reduction (
__builtin_sve_svlsl_u16_m
 initializer(
dependencies
omp_priv(
-fsanitize-thread-memory-access
omp_priv = 
Print the full library path of <file>
#pragma omp allocate
__builtin_sve_svlsl_u64_z
#pragma omp requires 
cuda-fatbin
#pragma omp threadprivate
__builtin_sve_svlsl_wide_n_s16_m
@dynamic 
--print-file-name
static_assert(
__builtin_sve_svlsl_wide_n_s32_x
hip-fatbin
-fno-experimental-isel
<template param 
-print-ivar-layout
__func__
__builtin_sve_svlsl_wide_n_u16_z
__FUNCTION__
api-information
__FUNCDNAME__
__builtin_sve_svlsl_wide_n_u32_z
L__FUNCTION__
Enable Objective-C Ivar layout bitmap print trace
__PRETTY_FUNCTION__
__builtin_sve_svlsl_wide_n_u8_z
__FUNCSIG__
none
L__FUNCSIG__
-fsanitize-trap=
_block_invoke
-print-libgcc-file-name
__cdecl 
__builtin_sve_svlsl_wide_s8_x
__stdcall 
__fastcall 
__builtin_sve_svlsl_wide_u16_x
__thiscall 
Print the library path for the currently used compiler runtime library ("libgcc.a" or "libclang_rt.builtins.*.a")
__vectorcall 
__builtin_sve_svlsl_wide_u32_x
__regcall 
function-entry
top level
-fget-symbols-sources
--print-missing-file-dependencies
__builtin_sve_svlsr_n_u16_z
custom
0123456789ABCDEF
__builtin_sve_svlsr_n_u64_m
\U00
-print-multi-directory
__builtin_sve_svlsr_n_u8_x
typed
-fsanitize-trap
-print-multi-lib
__builtin_sve_svlsr_u64_m
__builtin_sve_svlsr_u8_x
-print-multi-os-directory
__real
__builtin_sve_svlsr_wide_n_u16_z
__imag
arm64
__extension__
-fno-experimental-relative-c++-abi-vtables
co_await
-print-multiarch
Dependent
__builtin_sve_svlsr_wide_u16_x
BitCast
amd64
LValueBitCast
__builtin_sve_svlsr_wide_u32_z
LValueToRValueBitCast
-print-preamble
LValueToRValue
__builtin_sve_svmad_f16_m
NoOp
Hostx64
BaseToDerived
-fsanitize-undefined-strip-path-components=
DerivedToBase
Print the "preamble" of a file, which is a candidate for implicit precompiled headers.
UncheckedDerivedToBase
__builtin_sve_svmad_f64_m
Dynamic
stdlib.h
ToUnion
__builtin_sve_svmad_n_f16_m
ArrayToPointerDecay
-print-prog-name=
FunctionToPointerDecay
__builtin_sve_svmad_n_f32_m
NullToPointer
Embed LLVM bitcode
NullToMemberPointer
Dump symbols and their source code locations
BaseToDerivedMemberPointer
Print the full program path of <name>
DerivedToBaseMemberPointer
__builtin_sve_svmad_n_s16_m
MemberPointerToBoolean
VCINSTALLDIR
ReinterpretMemberPointer
__builtin_sve_svmad_n_s32_m
UserDefinedConversion
--print-prog-name
ConstructorConversion
__builtin_sve_svmad_n_s64_m
IntegralToPointer
x86ret
PointerToIntegral
<number>
PointerToBoolean
-print-resource-dir
ToVoid
__builtin_sve_svmad_n_u16_m
MatrixCast
amd64ret
VectorSplat
__builtin_sve_svmad_n_u32_m
IntegralCast
Print the resource directory pathname
IntegralToBoolean
__builtin_sve_svmad_n_u64_m
IntegralToFloating
Host
FloatingToFixedPoint
-fno-experimental-sanitize-metadata=
FixedPointToFloating
-print-rocm-search-dirs
FixedPointCast
__builtin_sve_svmad_s16_m
FixedPointToIntegral
Frontend
IntegralToFixedPoint
__builtin_sve_svmad_s32_m
FixedPointToBoolean
Print the paths used for finding ROCm installation
FloatingToIntegral
__builtin_sve_svmad_s64_m
FloatingToBoolean
<eof> parser at end of file
BooleanToSignedIntegral
/fsanitize=address
FloatingCast
-print-runtime-dir
CPointerToObjCPointerCast
__builtin_sve_svmad_u16_m
BlockPointerToObjCPointerCast
: at annotation token
AnyPointerToBlockPointerCast
__builtin_sve_svmad_u32_m
ObjCObjectLValueCast
Print the directory pathname containing clangs runtime libraries
FloatingRealToComplex
__builtin_sve_svmad_u64_m
FloatingComplexToReal
: current parser token '
FloatingComplexToBoolean
-fglobal-isel
FloatingComplexCast
-print-search-dirs
FloatingComplexToIntegralComplex
__builtin_sve_svmatch_s16
IntegralRealToComplex
delete
IntegralComplexToReal
__builtin_sve_svmax_f16_m
IntegralComplexToBoolean
Print the paths used for finding libraries and programs
IntegralComplexCast
__builtin_sve_svmax_f32_x
IntegralComplexToFloatingComplex
attribute
ARCProduceObject
-fsanitize=
ARCConsumeObject
-print-stats
ARCReclaimReturnedObject
__builtin_sve_svmax_n_f32_m
ARCExtendBlockObject
enable_if
AtomicToNonAtomic
__builtin_sve_svmax_n_f64_x
NonAtomicToAtomic
Print performance metrics and statistics
CopyAndAutoreleaseBlockObject
__builtin_sve_svmax_n_s16_z
BuiltinFnToFnPtr
ZeroToOCLOpaqueType
-fno-extended-identifiers
AddressSpaceConversion
-print-supported-cpus
IntToOCLSampler
__builtin_sve_svmax_n_s8_x
FirebloomPointerCast
macosx_app_extension
FlexibleArrayCountDeref(BasePtr, FamPtr, Count)
__builtin_sve_svmax_n_u16_z
FlexibleArrayCountCast(BasePtr, FamPtr, Count)
Print supported cpu models for the given target (if target is not specified, it will print the supported cpus for the default target)
FlexibleArrayCountAssign(BasePtr, FamPtr, Count)
__builtin_sve_svmax_n_u64_m
message
<check>
-print-target-triple
__builtin_sve_svmax_s16_z
defined_in
__builtin_sve_svmax_s64_m
Print the normalized target triple
-fdefault-real-8
<option>
Enables the global instruction selector
-print-targets
__builtin_sve_svmax_u64_m
enum 
__builtin_sve_svmax_u8_x
Print the registered targets
__builtin_sve_svmaxnm_f16_z
struct
Generate an optimization record file in a specific format
-private_bundle
__builtin_sve_svmaxnm_n_f16_x
__interface 
__builtin_sve_svmaxnm_n_f32_z
--product-name=
__builtin_sve_svmaxnmp_f16_m
const
-fno-f2c
--profile
__builtin_sve_svmaxnmv_f64
_Atomic
__builtin_FILE
__builtin_sve_svmaxp_f32_x
__builtin_FUNCTION
-pthreads
__builtin_LINE
__builtin_sve_svmaxp_s16_x
__builtin_COLUMN
acquire_capability
__builtin_source_location
-fsave-optimization-record
-pthread
__builtin_sve_svmaxp_u16_x
even
exclusive_lock_function
__builtin_sve_svmaxp_u64_x
captures not currently allowed
Support POSIX threads in generated code
deallocate
__builtin_sve_svmaxv_f32
__builtin_is_constant_evaluated
acquired_after
std::is_constant_evaluated
-fgnu-inline-asm
<...>
--ptxas-path=
static_cast
__builtin_sve_svmaxv_u64
dynamic_cast
assert_capability
reinterpret_cast
__builtin_sve_svmin_f16_z
const_cast
Path to ptxas (used for compiling CUDA code)
addrspace_cast
__builtin_sve_svmin_f64_m
<invalid cast>
assert_exclusive_lock
__bridge
-fsched-interblock
__bridge_transfer
__bridge_retained
__builtin_sve_svmin_n_f32_z
generation counter overflowed
diagnose_if
__builtin_sve_svmin_n_s16_m
Disable linemarker output in -E mode
__builtin_sve_svmin_n_s32_x
guarded_by
-fno-fat-lto-objects
__builtin_sve_svmin_n_u16_m
locks_excluded
__builtin_sve_svmin_n_u32_x
Preprocess to file
__builtin_sve_svmin_n_u64_z
release_capability
-fschedule-insns
__builtin_sve_svmin_s32_x
release_generic_capability
__builtin_sve_svmin_s64_z
/Qfast_transcendentals
__builtin_sve_svmin_u16_m
off,all,bitcode,marker
-fgnu-keywords
/QIfist
__builtin_sve_svmin_u64_z
requires_shared_capability
__builtin_sve_svminnm_f16_m
/Qimprecise_fwaits
__builtin_sve_svminnm_f32_x
shared_trylock_function
-fsee
/QIntel-jcc-erratum
__builtin_sve_svminnm_n_f32_m
try_acquire_shared_capability
__builtin_sve_svminnm_n_f64_x
Align branches within 32-byte boundaries to mitigate the performance impact of the Intel JCC erratum.
__builtin_sve_svminnmp_f32_m
iboutletcollection
Use the host's platform-specific path separator character when expanding the __FILE__ macro
__builtin_sve_svminp_f16_x
Pointer
__builtin_sve_svminp_f64_x
Do not emit metadata containing compiler name and version
__builtin_sve_svminp_s32_x
vec_type_hint
Use SEH style exceptions
/Qpar-report
__builtin_sve_svminp_u32_x
cpu_specific
__builtin_sve_svminp_u8_x
/Qpar
__builtin_sve_svminv_s16
size_t
argument_with_type_tag
ssize_t
Allow GNU-extension keywords regardless of language standard
intmax_t
/Qsafe_fp_loads
uintmax_t
__builtin_sve_svmla_f16_m
unimplemented feature
__clang_arm_builtin_alias
missing source location
__builtin_sve_svmla_f32_x
Interpreter cannot return values
/Qspectre-load-cf
__builtin_sve_svmla_f64_z
__builtin_sve_svmla_lane_s32
<lambda
blocks
-fshort-enums
/Qspectre-load
basic_istream
guard
__builtin_sve_svmla_lane_u64
__builtin_sve_svmla_n_f32_m
/Qspectre
basic_ostream
basic_iostream
consumable
Use large-integer access for consecutive bitfield runs.
-fshort-wchar
-Qunused-arguments
char_traits
__builtin_sve_svmla_n_s16_z
U2ASI
format
__builtin_sve_svmla_n_s64_m
CLglobal
Don't emit warning for unused driver arguments
CLdevice
__builtin_sve_svmla_n_s8_x
CLhost
shader
CLlocal
CLconstant
CLprivate
/Qvec-report
__builtin_sve_svmla_n_u64_m
__builtin_sve_svmla_n_u8_x
CLgeneric
unroll
SYglobal
SYdevice
SYhost
-fdebug-dump-all
-fdefer-pop
/Qvec-
SYlocal
-fembed-bitcode
SYprivate
-fgnu-runtime
CUdevice
Disable the loop vectorization passes
CUconstant
__builtin_sve_svmla_s8_x
CUshared
mode
ptr32_sptr
__builtin_sve_svmla_u16_z
ptr32_uptr
/Qvec
ptr64
__builtin_sve_svmla_u64_m
declare simd
-fshow-column
__builtin_sve_svmlalb_lane_f32
cannot yet mangle expression type %0
objc_bridge
u8__uuidof
__builtin_sve_svmlalb_lane_s64
u8__uuidoft
Emit metadata containing compiler name and version
u8__uuidofz
__builtin_sve_svmlalb_lane_u64
?: operator with omitted middle operand cannot be mangled
objc_bridge_related
Do not assume that any loop is finite.
__builtin_sve_svmlalb_n_u32
objc_method_family
__builtin_sve_svmlalb_s64
-rdynamic
__builtin_sve_svmlalt_f32
ownership_holds
Which overload candidates to show when overload resolution fails. Defaults to 'all'
-read_only_relocs
__builtin_sve_svmlalt_n_s32
u11__alignof__
ownership_takes
cannot yet mangle __builtin_ptrauth_type_discriminator expression
__builtin_sve_svmlalt_n_u64
cannot yet mangle __builtin_xnu_type_signature expression
-record-command-line
cannot yet mangle __builtin_xnu_type_summary expression
__builtin_sve_svmlalt_u16
cannot yet mangle __builtin_tmo_get_type_data expression
cannot yet mangle __builtin_tmo_get_type_descriptor expression
Generate output compatible with the standard GNU Objective-C runtime
cannot yet mangle vec_step expression
The string to embed in the .LLVM.command.line section.
cannot yet mangle __builtin_omp_required_simd_align expression
__builtin_sve_svmls_f32_z
set_typestate
__builtin_sve_svmls_lane_f16
/reference
__builtin_sve_svmls_lane_s32
swift_async_error
-fshow-skipped-includes
ixix
-relaxed-aliasing
__builtin_sve_svmls_n_f32_m
swift_newtype
__builtin_sve_svmls_n_f64_x
Turn off Type Based Alias Analysis
__builtin_sve_svmls_n_s16_z
_SUBSTPACK_
test_typestate
v110_SUBSTPACK
-fno-fixed-point
-relocatable-pch
__builtin_sve_svmls_n_s8_x
LDnE
type_visibility
__builtin_sve_svmls_n_u16_z
Whether to build a relocatable precompiled header
__builtin_sve_svmls_n_u64_m
visibility
-fshow-source-location
-remap-file
__builtin_sve_svmls_s16_z
zero_call_used_regs
v18co_await
__builtin_sve_svmls_s64_m
v18co_yield
Replace the contents of the <from> file with the contents of the <to> file
u33__builtin_sycl_unique_stable_name
__builtin_sve_svmls_s8_x
dtdefpT
Embed LLVM IR bitcode as data
-fgnu89-inline
<from>;<to>
__builtin_sve_svmls_u64_m
macOS
__builtin_sve_svmls_u8_x
-remap
__builtin_sve_svmlslb_lane_s32
watchOS
-fsignaling-math
-reorder-cxx-includes-hack
__builtin_sve_svmlslb_n_u16
iOSApplicationExtension
__builtin_sve_svmlslb_s32
Reorder C++ include search paths. Temporary hack.
__builtin_sve_svmlslb_u64
macOSApplicationExtension
-fno-float-store
-resource-dir=
__builtin_sve_svmlslt_n_s16
tvos_app_extension
__builtin_sve_svmlslt_n_u32
-resource-dir
__builtin_sve_svmlslt_s64
watchos_app_extension
-fsigned-bitfields
The directory which holds the compiler resource files
__builtin_sve_svmmla_s32
maccatalyst
q8sq16Sc
--resource=
q2Wiq4i
maccatalyst_app_extension
Use the gnu89 inline semantics
--resource
__builtin_sve_svmovlt_s32
visionOS
__builtin_sve_svmovlt_u64
-rewrite-legacy-objc
__builtin_sve_svmsb_f32_m
12_GLOBAL__N_1
ShaderModel
char is signed
Rewrite Legacy Objective-C source to C++
Li0E
__builtin_sve_svmsb_n_f16_z
decvP
instancetype
plcvPcad
__builtin_sve_svmsb_n_f64_m
-rewrite-macros
__builtin_sve_svmsb_n_s16_x
inline 
cannot mangle this unnamed union NTTP yet
-fno-force-dwarf-frame
Expand macros without full preprocessing
__device_stub__
__builtin_sve_svmsb_n_s8_m
__regcall3__
__builtin_sve_svmsb_n_u16_x
-rewrite-objc
__builtin_sve_svmsb_n_u32_z
using-enum declaration
Use a signed type for wchar_t
U25pass_dynamic_object_size
Rewrite Objective-C source to C++
U17pass_object_size
__builtin_sve_svmsb_s16_x
using declaration
__builtin_sve_svmsb_s32_z
-rewrite-test
cannot mangle fixed point literals yet
-fembed-offload-object=
-fgnuc-version=
-fno-force-enable-int128
Rewriter playground
U7_Atomic
__builtin_sve_svmsb_u32_z
__final
U13block_pointer
__builtin_sve_svmsb_u8_m
--rocm-device-lib-path=
__builtin_sve_svmul_f16_x
abstract
-fsingle-precision-constant
11objc_object
ROCm device library path. Alternative to rocm-path.
10objc_class
__builtin_sve_svmul_lane_f16
13objc_selector
ocl_image1d_ro
__builtin_sve_svmul_lane_s32
ocl_image1d_array_ro
--rocm-path=
ocl_image1d_buffer_ro
__builtin_sve_svmul_lane_u64
ocl_image2d_ro
ocl_image2d_array_ro
ocl_image2d_depth_ro
ocl_image2d_array_depth_ro
ROCm installation path, used for finding and automatically linking required bitcode libraries.
__builtin_sve_svmul_n_f64_x
__builtin_sve_svmul_n_s16_z
ocl_image2d_msaa_ro
ParseClass
ocl_image2d_array_msaa_ro
ocl_image2d_msaa_depth_ro
ocl_image2d_array_msaa_depth_ro
-round-trip-args
__builtin_sve_svmul_n_s64_m
__builtin_sve_svmul_n_u16_z
ocl_image3d_ro
(anonymous)
ocl_image1d_wo
Enable C++14 sized global deallocation functions
ocl_image1d_array_wo
Enable command line arguments round-trip.
ocl_image1d_buffer_wo
ocl_image2d_wo
ocl_image2d_array_wo
_Clang
__builtin_sve_svmul_n_u64_m
__builtin_sve_svmul_n_u8_x
ocl_image2d_depth_wo
-Rpass-analysis=
ocl_image2d_array_depth_wo
ocl_image2d_msaa_wo
ocl_image2d_array_msaa_wo
noexcept(false)
Sets various macros to claim compatibility with the given GCC version (default is 4.2.1)
-fno-friend-injection
ocl_image2d_msaa_depth_wo
Report transformation analysis from optimization passes whose name matches the given POSIX regular expression
ocl_image2d_array_msaa_depth_wo
__builtin_sve_svmul_s64_m
ocl_image3d_wo
maybe_unused
ocl_image1d_rw
__builtin_sve_svmul_s8_x
ocl_image1d_array_rw
-Rpass-missed=
ocl_image1d_buffer_rw
__builtin_sve_svmul_u16_z
ocl_image2d_rw
__is_abstract
ocl_image2d_array_rw
Use SjLj style exceptions
ocl_image2d_depth_rw
Report missed transformations by optimization passes whose name matches the given POSIX regular expression
ocl_image2d_array_depth_rw
__builtin_sve_svmul_u8_x
ocl_image2d_msaa_rw
__is_arithmetic
ocl_image2d_array_msaa_rw
__builtin_sve_svmulh_n_s16_z
ocl_image2d_msaa_depth_rw
-Rpass=
ocl_image2d_array_msaa_depth_rw
__builtin_sve_svmulh_n_s64_m
ocl_image3d_rw
__is_assignable
11ocl_sampler
9ocl_event
12ocl_clkevent
Report transformations performed by optimization passes whose name matches the given POSIX regular expression
__builtin_sve_svmulh_n_u16_z
__builtin_sve_svmulh_n_u64_m
9ocl_queue
__is_bounded_array
13ocl_reserveid
ocl_intel_sub_group_avc_mce_payload_t
ocl_intel_sub_group_avc_ime_payload_t
-rpath
__builtin_sve_svmulh_n_u8_x
__builtin_sve_svmulh_s64_m
ocl_intel_sub_group_avc_ref_payload_t
__is_complete_type
ocl_intel_sub_group_avc_sic_payload_t
-fslp-vectorize
ocl_intel_sub_group_avc_mce_result_t
--rsp-quoting=
ocl_intel_sub_group_avc_ime_result_t
ocl_intel_sub_group_avc_ref_result_t
ocl_intel_sub_group_avc_sic_result_t
__is_const
__builtin_sve_svmulh_s8_x
__builtin_sve_svmulh_u16_z
ocl_intel_sub_group_avc_ime_result_single_reference_streamout_t
Set the rsp quoting to either 'posix', or 'windows'
ocl_intel_sub_group_avc_ime_result_dual_reference_streamout_t
ocl_intel_sub_group_avc_ime_single_reference_streamin_t
ocl_intel_sub_group_avc_ime_dual_reference_streamin_t
Embed Offloading device-side binary into host object file as a section.
-fgnu
-fgpu-allow-device-init
svint8x2_t
/RTC
svint16x2_t
__builtin_sve_svmulh_u8_x
svint32x2_t
__is_destructible
svint64x2_t
__builtin_sve_svmullb_lane_s64
svuint8x2_t
-rtlib=
svuint16x2_t
__builtin_sve_svmullb_lane_u64
svuint32x2_t
__is_enum
svuint64x2_t
-fsmall-block-descriptors
svfloat16x2_t
Compiler runtime library to use
svfloat32x2_t
__builtin_sve_svmullb_s16
svfloat64x2_t
__is_final
svbfloat16x2_t
__builtin_sve_svmullb_u32
svint8x3_t
--rtlib
svint16x3_t
__builtin_sve_svmullt_lane_u32
svint32x3_t
__is_fundamental
svint64x3_t
-fno-function-attribute-list
svuint8x3_t
svuint16x3_t
__builtin_sve_svmullt_s16
svuint32x3_t
__is_interface_class
svuint64x3_t
__builtin_sve_svmullt_u32
svfloat16x3_t
Enable the specified remark
svfloat32x3_t
__builtin_sve_svmulx_f16_z
svfloat64x3_t
__is_lvalue_expr
svbfloat16x3_t
-fspec-constr-count
svint8x4_t
<remark>
svint16x4_t
__builtin_sve_svmulx_n_f16_x
svint32x4_t
__is_member_function_pointer
svint64x4_t
__builtin_sve_svmulx_n_f32_z
svuint8x4_t
svuint16x4_t
__builtin_sve_svnand_b_z
svuint32x4_t
__is_member_pointer
svuint64x4_t
svfloat16x4_t
svfloat32x4_t
-save-stats=
__builtin_sve_svnbsl_n_u8
__builtin_sve_svnbsl_s8
svfloat64x4_t
__is_nothrow_constructible
svbfloat16x4_t
svboolx2_t
svboolx4_t
Save llvm statistics.
__builtin_sve_svnbsl_u8
__builtin_sve_svneg_f64_x
__is_nullptr
-fspell-checking-limit
-save-stats
__is_pod
__builtin_sve_svneg_s16_z
__builtin_sve_svneg_s64_m
-save-temps=
cannot mangle this dependent neon vector type yet
cannot mangle this dependent fixed-length SVE vector type yet
__is_polymorphic
-fno-gcse-after-reload
-fspell-checking
Save intermediate compilation results.
__builtin_sve_svnmad_f16_z
U8__kindof
__is_referenceable
objcproto
__builtin_sve_svnmad_f64_m
8ocl_pipe
-save-temps
u6typeof
__builtin_sve_svnmad_n_f16_x
__add_lvalue_reference
__is_rvalue_reference
__add_pointer
__add_rvalue_reference
__decay
Save intermediate compilation results
__builtin_sve_svnmatch_s16
__builtin_sve_svnmla_f16_m
__make_signed
__is_scalar
__make_unsigned
__remove_all_extents
__remove_const
-fctor-dtor-return-this
Change the C++ ABI to returning `this` pointer from constructors and non-deleting destructors. (No effect on Microsoft ABI)
/sdl-
__remove_cv
-femit-all-decls
__remove_cvref
Allow device side init function in HIP (experimental)
__remove_extent
/sdl
__remove_pointer
__builtin_sve_svnmla_n_f32_m
__remove_reference_t
__is_standard_layout
__remove_restrict
__builtin_sve_svnmla_n_f64_x
__remove_volatile
-sectalign
__underlying_type
__builtin_sve_svnmls_f16_z
Poly8
__is_trivially_assignable
Poly16
Permit splitting of cold code when optimizing (off by default).
Poly64
-sectcreate
__builtin_sve_svnmls_n_f16_x
__is_trivially_copyable
Int8
__builtin_sve_svnmls_n_f32_z
Int16
-sectobjectsymbols
Int32
__builtin_sve_svnmsb_f16_m
Int64
__is_union
Uint8
-fno-gcse-sm
Uint16
-sectorder
Uint32
__builtin_sve_svnmsb_f64_z
Uint64
__is_void
Float16
__builtin_sve_svnmsb_n_f32_m
Float32
-seg1addr
Float64
__builtin_sve_svnmsb_n_f64_x
Bfloat16
RTT_JOIN(__, add_lvalue_reference)
poly8_t
Provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF
poly16_t
-seg_addr_table_filename
poly64_t
__builtin_sve_svnot_s32_x
int8_t
RTT_JOIN(__, add_rvalue_reference)
uint8_t
__builtin_sve_svnot_s64_z
int16_t
-seg_addr_table
uint16_t
__builtin_sve_svnot_u16_m
int32_t
RTT_JOIN(__, make_signed)
uint32_t
-fgpu-default-stream=
int64_t
-segaddr
uint64_t
__builtin_sve_svnot_u64_z
float64_t
RTT_JOIN(__, remove_all_extents)
float32_t
__builtin_sve_svorn_b_z
float16_t
-segcreate
bfloat16_t
__builtin_sve_svorr_n_s16_z
__simd64_
RTT_JOIN(__, remove_cv)
__simd128_
Enables splitting of the LTO unit
__SVBfloat16_t
-seglinkedit
9__SVE_VLSI
__builtin_sve_svorr_n_s8_x
RTT_JOIN(__, remove_extent)
Ua9enable_ifI
__builtin_sve_svorr_n_u16_z
-segprot
Mangling declaration
__builtin_sve_svorr_n_u64_m
RTT_JOIN(__, remove_reference_t)
__vtptrauth
-fno-generic-block-helpers-use-extended-layout
_ZGR
-segs_read_only_addr
_ZTV
__builtin_sve_svorr_s16_z
_ZTI
RTT_JOIN(__, remove_volatile)
_ZTS
__builtin_sve_svorr_s64_m
_ZGV
-segs_read_write_addr
__cxx_global_var_init
__builtin_sve_svorr_s8_x
__dtor_
__builtin_sycl_unique_stable_name
__filt_
Enable late function splitting using profile information (x86 ELF)
__fin_
-segs_read_
_ZTT
__builtin_sve_svorr_u64_m
_ZTC
block literal parsing
_ZTH
__builtin_sve_svorr_u8_x
_ZTW
-serialize-diagnostic-file
__finalize_
__builtin_sve_svorv_s64
_ZGI
Emit all declarations, even if unused
AddressSpaceAttr
Specify default stream. The default value is 'legacy'. (HIP only)
AnnotateTypeAttr
File for serializing diagnostics in a binary format
ArmMveStrictPolymorphismAttr
__builtin_sve_svpext_lane_c32
ArmNewZAAttr
iOS (App Extension)
ArmPreservesZAAttr
q16bv
ArmSharedZAAttr
<filename>
ArmStreamingAttr
__builtin_sve_svpmullb_n_u16
ArmStreamingCompatibleAttr
tvOS (App Extension)
BTFTypeTagAttr
Use segmented stack
CmseNSCallAttr
-serialize-diagnostics
NoDerefAttr
__builtin_sve_svpmullb_u16
ObjCGCAttr
macCatalyst (App Extension)
ObjCInertUnsafeUnretainedAttr
__builtin_sve_svpmullt_pair_n_u32
ObjCKindOfAttr
Serialize compiler diagnostics to a file
OpenCLConstantAddressSpaceAttr
__builtin_sve_svpmullt_pair_u64
OpenCLGenericAddressSpaceAttr
Swift
OpenCLGlobalAddressSpaceAttr
-fno-generic-block-helpers
OpenCLGlobalDeviceAddressSpaceAttr
-setup-static-analyzer
OpenCLGlobalHostAddressSpaceAttr
__builtin_sve_svprfb
OpenCLLocalAddressSpaceAttr
OpenCLPrivateAddressSpaceAttr
__builtin_sve_svprfb_gather_s64offset
PointerAuthAttr
Set up preprocessor for static analyzer (done automatically when static analyzer is run).
Ptr32Attr
__builtin_sve_svprfb_gather_u32base_offset
Ptr64Attr
lambda expression parsing
PtrAutoAttrAttr
-fstack-check
PtrAutoNullTerminatedAttrAttr
-shared-libasan
SPtrAttr
__builtin_sve_svprfb_gather_u64offset
TypeNonNullAttr
const_cast
TypeNullUnspecifiedAttr
__builtin_sve_svprfd
TypeNullableAttr
-shared-libgcc
TypeNullableResultAttr
__builtin_sve_svprfd_gather_u32base_index
UPtrAttr
reinterpret_cast
XnuUsageSemanticsAttr
legacy,per-thread
FallThroughAttr
-shared-libsan
LikelyAttr
__builtin_sve_svprfh_gather_s64index
MustTailAttr
OpenCLUnrollHintAttr
__builtin_sve_svprfh_gather_u64base
SuppressAttr
Dynamically link the sanitizer runtime
UnlikelyAttr
__builtin_sve_svprfw
AlwaysInlineAttr
__uuidof
AnalyzerSuppressAttr
-fstack-clash-protection
NoInlineAttr
-shared
NoMergeAttr
__builtin_sve_svprfw_gather_u64index
AArch64SVEPcsAttr
AArch64VectorPcsAttr
__builtin_sve_svpsel_b32
AMDGPUKernelCallAttr
-show-encoding
AcquireHandleAttr
bq16bq16b
AnyX86NoCfCheckAttr
CDeclAttr
-fno-global-isel
FastCallAttr
Show instruction encoding information in transliterate mode
IntelOclBiccAttr
LifetimeBoundAttr
__builtin_bit_cast
MSABIAttr
__builtin_sve_svptrue_pat_b16
NSReturnsRetainedAttr
--show-includes
ObjCOwnershipAttr
__builtin_sve_svptrue_pat_b8
PascalAttr
register
PcsAttr
-fstack-protector-all
PreserveAllAttr
Print cl.exe style /showIncludes to stdout
PreserveMostAttr
__builtin_sve_svqabs_s64_x
RegCallAttr
StdCallAttr
__builtin_sve_svqabs_s8_z
SwiftAsyncCallAttr
-show-inst
SwiftCallAttr
Parse templated function definitions at the end of the translation unit
SysVABIAttr
-femit-dwarf-unwind=
ThisCallAttr
-fgpu-defer-diag
VectorCallAttr
Show internal instruction representation in transliterate mode
SwiftAsyncContextAttr
__builtin_sve_svqadd_n_s64_z
SwiftContextAttr
unsafe_unretained
SwiftErrorResultAttr
__builtin_sve_svqadd_n_s8_z
SwiftIndirectResultAttr
/showFilenames-
AnnotateAttr
__builtin_sve_svqadd_n_u16_z
CFConsumedAttr
retain
CarriesDependencyAttr
-fstack-protector-strong
NSConsumedAttr
Do not print the name of each compiled file (default)
NonNullAttr
__builtin_sve_svqadd_n_u64_z
OSConsumedAttr
copy
PassObjectSizeAttr
__builtin_sve_svqadd_n_u8_z
ReleaseHandleAttr
/showFilenames
UseHandleAttr
__builtin_sve_svqadd_s16_x
HLSLSV_GroupIndexAttr
weak
AMDGPUFlatWorkGroupSizeAttr
-fno-gnu-inline-asm
AMDGPUNumSGPRAttr
Print the name of each compiled file
AMDGPUNumVGPRAttr
q2Wiq2Wiq2Wi
AMDGPUWavesPerEUAttr
nullable
ARMInterruptAttr
__builtin_sve_svqadd_s8
AVRInterruptAttr
/showIncludes:user
AVRSignalAttr
__builtin_sve_svqadd_s8_z
AcquireCapabilityAttr
null_resettable
AcquiredAfterAttr
-fstack-protector
AcquiredBeforeAttr
Like /showIncludes but omit system headers
AlignMac68kAttr
__builtin_sve_svqadd_u32_z
AlignNaturalAttr
suppress_direct
AlignedAttr
__builtin_sve_svqadd_u64_z
AllocAlignAttr
/showIncludes
AllocSizeAttr
__builtin_sve_svqadd_u8_z
AlwaysDestroyAttr
@compatibility_alias
AnalyzerNoReturnAttr
Defer host/device related diagnostic messages for CUDA/HIP
AnyX86InterruptAttr
Print info about included files to stderr
AnyX86NoCallerSavedRegistersAttr
WiWiIUWi
ArcWeakrefUnavailableAttr
@dynamic
ArgumentWithTypeTagAttr
UWiUWiIUWi
ArmBuiltinAliasAttr
--signed-char
ArmLocallyStreamingAttr
WiWiIiIUWi
ArtificialAttr
@synchronized
AsmLabelAttr
-fstack-size-section
AssertCapabilityAttr
-single_module
AssertExclusiveLockAttr
__builtin_sve_svqdecd_n_u64
AssertSharedLockAttr
parsing Objective-C method
AssumeAlignedAttr
__builtin_sve_svqdecd_pat_n_u64
AssumptionAttr
-skip-unused-modulemap-deps
AvailabilityAttr
q2UWiq2UWiIiIUWi
BPFPreserveAccessIndexAttr
finally
BTFDeclTagAttr
-fno-gnu-keywords
BlocksAttr
Include module map files only for imported modules in dependency output
BuiltinAttr
__builtin_sve_svqdech_n_u64
C11NoReturnAttr
@encode
CFAuditedTransferAttr
__builtin_sve_svqdech_pat_n_u64
CFGuardAttr
/source-charset:
CFICanonicalJumpTableAttr
q8Usq8UsIiIUWi
CFReturnsNotRetainedAttr
initializer
CFReturnsRetainedAttr
-fstack-usage
CFUnknownTransferAttr
Set source encoding, supports only UTF-8
CPUDispatchAttr
__builtin_sve_svqdecp_n_s32_b64
CPUSpecificAttr
<selector-name>
CUDAConstantAttr
__builtin_sve_svqdecp_n_s64_b32
CUDADeviceAttr
-source-date-epoch
CUDADeviceBuiltinSurfaceTypeAttr
UiUiq16b
CUDADeviceBuiltinTextureTypeAttr
When to emit DWARF unwind (EH frame) info
CUDAGlobalAttr
-fgpu-exclude-wrong-side-overloads
CUDAHostAttr
Time to be used in __DATE__, __TIME__, and __TIMESTAMP__ macros
CUDAInvalidTargetAttr
__builtin_sve_svqdecp_n_u64_b8
CUDALaunchBoundsAttr
<condition>
CUDASharedAttr
q4iq4iq16b
CXX11NoReturnAttr
/sourceDependencies:directives
CallableWhenAttr
q8Usq8Usq16b
CallbackAttr
context set name "
CapabilityAttr
-fstandalone-debug
CapturedRecordAttr
/sourceDependencies
CleanupAttr
__builtin_sve_svqdecw_n_u64
CmseNSEntryAttr
context selectors for the context set "
CodeSegAttr
__builtin_sve_svqdecw_pat_n_u64
ColdAttr
-specs=
CommonAttr
q4Uiq4UiIiIUWi
ConstAttr
ompx_
ConstInitAttr
-fno-gnu
ConstructorAttr
-specs
ConsumableAttr
__builtin_sve_svqdmlalb_n_s32
ConsumableAutoCastAttr
'#pragma omp 
ConsumableSetOnReadAttr
__builtin_sve_svqdmlalb_s64
ConvergentAttr
-split-dwarf-file
DLLExportAttr
__builtin_sve_svqdmlalbt_s16
DLLExportStaticLocalAttr
sizes
DLLImportAttr
-fstrength-reduce
DLLImportStaticLocalAttr
Name of the split dwarf debug info file to encode in the object file
DependerDeclsAttr
__builtin_sve_svqdmlalt_s16
DeprecatedAttr
uses_allocators
DestructorAttr
__builtin_sve_svqdmlslb_lane_s64
DiagnoseAsBuiltinAttr
-split-dwarf-output
DiagnoseIfAttr
__builtin_sve_svqdmlslb_s16
DisableSanitizerInstrumentationAttr
prefer_type
DisableTailCallsAttr
Always exclude wrong side overloads in overloading resolution for CUDA/HIP
EmptyBasesAttr
File name to use for split dwarf debug info output
EnableIfAttr
__builtin_sve_svqdmlslbt_s64
EnforceTCBAttr
EnforceTCBLeafAttr
__builtin_sve_svqdmlslt_n_s32
EnumExtensibilityAttr
-stack-protector-buffer-size
ErrorAttr
__builtin_sve_svqdmlslt_s64
ExcludeFromExplicitInstantiationAttr
defaultmap modifier
ExclusiveTrylockFunctionAttr
-fstrict-enums
ExternalSourceSymbolAttr
Lower bound for a buffer to be considered for stack protection
FinalAttr
__builtin_sve_svqdmulh_s16
FlagEnumAttr
iterator
FlattenAttr
__builtin_sve_svqdmullb_lane_s32
FormatAttr
-stack-protector
FormatArgAttr
__builtin_sve_svqdmullb_n_s64
FunctionReturnThunksAttr
dependency type
GNUInlineAttr
Don't allow device side init function in HIP (experimental)
GuardedByAttr
Enable stack protectors
GuardedVarAttr
__builtin_sve_svqdmullt_n_s64
HIPManagedAttr
adjust-op
HLSLNumThreadsAttr
__builtin_sve_svqincb_n_s32
HLSLResourceAttr
0,1,2,3
HLSLResourceBindingAttr
__builtin_sve_svqincb_pat_n_s32
HLSLShaderAttr
HotAttr
-fstrict-flex-arrays=
IBActionAttr
-stack-usage-file
IBOutletAttr
__builtin_sve_svqincd_pat_n_s32
IBOutletCollectionAttr
', '
InitPriorityAttr
__builtin_sve_svqincd_pat_s64
InternalLinkageAttr
Filename (or -) to write stack usage output to
LTOVisibilityPublicAttr
-fdebug-dump-parse-tree-no-sema
LayoutVersionAttr
always,no-compact-unwind,default
LeafAttr
-fgpu-flush-denormals-to-zero
LockReturnedAttr
--start-no-unused-arguments
LocksExcludedAttr
__builtin_sve_svqinch_pat_s16
M68kInterruptAttr
holds
MIGServerRoutineAttr
__builtin_sve_svqincp_n_s32_b16
MSAllocatorAttr
Don't emit warnings about unused arguments for the following arguments
MSInheritanceAttr
__builtin_sve_svqincp_n_s64_b16
MSNoVTableAttr
no_openmp_routines
MSP430InterruptAttr
MSStructAttr
-static-define
MSVtorDispAttr
__builtin_sve_svqincp_n_u64_b16
MaxFieldAlignmentAttr
data
MayAliasAttr
__builtin_sve_svqincp_s16
MaybeUndefAttr
Should __STATIC__ be defined
MicroMipsAttr
__builtin_sve_svqincp_u32
MinSizeAttr
exit
MinVectorWidthAttr
Don't defer host/device related diagnostic messages for CUDA/HIP
Mips16Attr
-static-libgcc
MipsInterruptAttr
__builtin_sve_svqincw_pat_n_u32
MipsLongCallAttr
update
MipsShortCallAttr
__builtin_sve_svqincw_s32
NSConsumesSelfAttr
-static-libgfortran
NSErrorDomainAttr
__builtin_sve_svqneg_s16_z
NSReturnsAutoreleasedAttr
STDC
NSReturnsNotRetainedAttr
-fstrict-float-cast-overflow
NakedAttr
-static-libsan
NoAliasAttr
__builtin_sve_svqneg_s8_x
NoCommonAttr
init_seg
NoDebugAttr
__builtin_sve_svqrdcmlah_s16
NoDestroyAttr
Statically link the sanitizer runtime
NoDuplicateAttr
__builtin_sve_svqrdmlah_lane_s16
NoInstrumentFunctionAttr
bss_seg
NoMicroMipsAttr
Flush denormal floating point values to zero in CUDA/HIP device mode.
NoMips16Attr
-static-libstdc++
NoProfileFunctionAttr
__builtin_sve_svqrdmlah_s32
NoRandomizeLayoutAttr
code_seg
NoReturnAttr
__builtin_sve_svqrdmlsh_lane_s32
NoSanitizeAttr
-static-openmp
NoSpeculativeLoadHardeningAttr
__builtin_sve_svqrdmlsh_n_s64
NoSplitStackAttr
strict_gs_check
NoStackProtectorAttr
-fstrict-overflow
NoThreadSafetyAnalysisAttr
Use the static host OpenMP runtime while linking.
NoThrowAttr
__builtin_sve_svqrdmulh_lane_s64
NoUniqueAddressAttr
alloc_text
NoUwtableAttr
__builtin_sve_svqrdmulh_n_s8
NotTailCalledAttr
-static-pie
OMPAllocateDeclAttr
__builtin_sve_svqrdmulh_s8
OMPCaptureNoInitAttr
read
OMPDeclareTargetDeclAttr
Exclude wrong side overloads only if there are same side overloads in overloading resolution for CUDA/HIP
OMPDeclareVariantAttr
-static
OMPThreadPrivateDeclAttr
__builtin_sve_svqrshl_n_s64_x
OSConsumesThisAttr
execute
OSReturnsNotRetainedAttr
__builtin_sve_svqrshl_n_s8_z
OSReturnsRetainedAttr
-stats-file=
OSReturnsRetainedOnNonZeroAttr
__builtin_sve_svqrshl_n_u16_z
OSReturnsRetainedOnZeroAttr
nocache
ObjCBridgeAttr
-fstrict-vtable-pointers
ObjCBridgeMutableAttr
Filename to write statistics to
ObjCBridgeRelatedAttr
__builtin_sve_svqrshl_n_u8_m
ObjCCompleteDefinitionAttr
remove
ObjCExceptionAttr
__builtin_sve_svqrshl_s16_m
ObjCExplicitProtocolImplAttr
-std-default=
ObjCExternallyRetainedAttr
__builtin_sve_svqrshl_s32_x
ObjCIndependentClassAttr
-femulated-tls
ObjCMethodFamilyAttr
-fgpu-inline-threshold=
ObjCNSObjectAttr
/std:
ObjCPreciseLifetimeAttr
__builtin_sve_svqrshl_u16_m
ObjCRequiresPropertyDefsAttr
".CRT$XCC"
ObjCRequiresSuperAttr
__builtin_sve_svqrshl_u32_m
ObjCReturnsInnerPointerAttr
Set language version (c++14,c++17,c++20,c++latest,c11,c17)
ObjCRootClassAttr
__builtin_sve_svqrshl_u64_m
ObjCSubclassingRestrictedAttr
".CRT$XCU"
ObjCSuppressDirectPropertyAttr
-fstruct-path-tbaa
OpenCLIntelReqdSubGroupSizeAttr
Language standard to compile for
OpenCLKernelAttr
__builtin_sve_svqrshr_s16_x2
OptimizeNoneAttr
pipeline
OverrideAttr
__builtin_sve_svqrshr_s8_x4
OwnerAttr
-stdlib++-isystem
OwnershipAttr
__builtin_sve_svqrshr_u16_x4
PackedAttr
interleave
ParamTypestateAttr
-fno-gpu-rdc
PatchableFunctionEntryAttr
Use directory as the C++ standard library include path
PointerAttr
__builtin_sve_svqrshrnb_n_s64
PointerAuthStructAttr
assume_safety
PragmaClangBSSSectionAttr
__builtin_sve_svqrshrnb_n_u32
PragmaClangDataSectionAttr
-stdlib=
PragmaClangRelroSectionAttr
__builtin_sve_svqrshrnt_n_s16
PragmaClangRodataSectionAttr
fixed
PragmaClangTextSectionAttr
Ignore errors from conflicting types in function declarations
PreferredNameAttr
C++ standard library to use
PtGuardedByAttr
__builtin_sve_svqrshrnt_n_u32
PtGuardedVarAttr
unless(
PureAttr
__builtin_sve_svqrshrunb_n_s16
RISCVInterruptAttr
libc++,libstdc++,platform
RandomizeLayoutAttr
__builtin_sve_svqrshrunb_n_s64
ReadOnlyPlacementAttr
ReinitializesAttr
Inline threshold for device compilation for CUDA/HIP
ReleaseCapabilityAttr
--stdlib
ReqdWorkGroupSizeAttr
__builtin_sve_svqshl_n_s16_m
RequiresCapabilityAttr
__INTRIN_H
RestrictAttr
__builtin_sve_svqshl_n_s32_x
RetainAttr
--std
ReturnTypestateAttr
__builtin_sve_svqshl_n_s64_z
ReturnsNonNullAttr
clang loop 
ReturnsTwiceAttr
Control emission of Swift async extended frame info
SYCLKernelAttr
-sub_library
SYCLSpecialClassAttr
__builtin_sve_svqshl_n_u32_x
ScopedLockableAttr
namespace
SectionAttr
__builtin_sve_svqshl_n_u64_z
SelectAnyAttr
-sub_umbrella
SentinelAttr
__builtin_sve_svqshl_s16_m
SetTypestateAttr
'is_instance'
SharedTrylockFunctionAttr
-fno-hip-fp32-correctly-rounded-divide-sqrt
SpeculativeLoadHardeningAttr
-sycl-std=
StandaloneDebugAttr
__builtin_sve_svqshl_s64_z
StrictFPAttr
'functionType'
StrictGuardStackCheckAttr
__builtin_sve_svqshl_u16_m
SwiftAsyncAttr
SYCL language standard to compile for.
SwiftAsyncErrorAttr
__builtin_sve_svqshl_u32_x
SwiftAsyncNameAttr
any(
SwiftAttrAttr
-fsycl-is-device
SwiftBridgeAttr
2020,2017,121,1.2.1,sycl-1.2.1
SwiftBridgedTypedefAttr
__builtin_sve_svqshlu_n_s16_m
SwiftErrorAttr
options
SwiftImportAsNonGenericAttr
__builtin_sve_svqshlu_n_s32_m
SwiftImportPropertyAsAccessorsAttr
-sys-header-deps
SwiftNameAttr
Treat usage of null pointers as undefined behavior (default)
SwiftNewTypeAttr
Use emutls functions to access thread_local variables
SwiftPrivateAttr
-fgpu-rdc
SymbolMetadataFootnoteAttr
Include system headers in dependency output
TLSModelAttr
__builtin_sve_svqshrnb_n_s16
TargetAttr
ms_struct
TargetClonesAttr
__builtin_sve_svqshrnb_n_u32
TestTypestateAttr
--sysroot=
TransparentSteppingAttr
__builtin_sve_svqshrnt_n_s64
TransparentUnionAttr
redefine_extname
TrivialABIAttr
-fsycl-is-host
TryAcquireCapabilityAttr
--sysroot
TypeTagForDatatypeAttr
__builtin_sve_svqshrunt_n_s32
TypeVisibilityAttr
FENV_ACCESS
TypedMemoryAttr
__builtin_sve_svqsub_n_s16_x
UnavailableAttr
--system-header-prefix=
UninitializedAttr
__builtin_sve_svqsub_n_s32_x
UnusedAttr
FE_TOWARDZERO
UsedAttr
-fno-hip-kernel-arg-name
UsingIfExistsAttr
Treat all #include paths starting with <prefix> as including a system header.
UuidAttr
__builtin_sve_svqsub_n_s8_x
VTablePointerAuthenticationAttr
FE_UPWARD
VecReturnAttr
__builtin_sve_svqsub_n_u16_x
VecTypeHintAttr
--system-header-prefix
VisibilityAttr
__builtin_sve_svqsub_n_u32_x
WarnUnusedAttr
FE_TONEARESTFROMZERO
WarnUnusedResultAttr
-fsycl
WeakAttr
WeakImportAttr
__builtin_sve_svqsub_n_u8_x
WeakRefAttr
STDC FENV_ROUND
WebAssemblyExportNameAttr
__builtin_sve_svqsub_s16_x
WebAssemblyImportModuleAttr
Only run preprocess and compilation steps
WebAssemblyImportNameAttr
__builtin_sve_svqsub_s32_x
WorkGroupSizeHintAttr
clang section
X86ForceAlignArgPointerAttr
Generate relocatable device code, also known as separate compilation mode
XRayInstrumentAttr
XRayLogArgsAttr
__builtin_sve_svqsub_s8_x
ZeroCallUsedRegsAttr
EXTENSION
AArch64FarAddressSpaceAttr
__builtin_sve_svqsub_u16_x
AbiTagAttr
-target-abi
AliasAttr
__builtin_sve_svqsub_u32_x
AlignValueAttr
exestr
BuiltinAliasAttr
-fsymbol-partition=
CalledOnceAttr
Target a particular ABI type
IFuncAttr
__builtin_sve_svqsub_u8_x
InitSegAttr
float_control
LoaderUninitializedAttr
__builtin_sve_svqsubr_n_s16_z
LoopHintAttr
-target-cpu
ModeAttr
__builtin_sve_svqsubr_n_s64_m
NoBuiltinAttr
detect_mismatch
NoEscapeAttr
-fno-hip-new-launch-api
OMPCaptureKindAttr
Target a specific cpu type
OMPDeclareSimdDeclAttr
__builtin_sve_svqsubr_n_u16_z
OMPReferencedVarAttr
pointers_to_members
ObjCBoxableAttr
__builtin_sve_svqsubr_n_u64_m
ObjCClassStubAttr
-target-feature
ObjCDesignatedInitializerAttr
__builtin_sve_svqsubr_n_u8_x
ObjCDirectAttr
vtordisp
ObjCDirectMembersAttr
Run the preprocessor, parser and semantic analysis stages
ObjCNonLazyClassAttr
Target specific attributes
ObjCNonRuntimeProtocolAttr
__builtin_sve_svqsubr_s64_m
ObjCRuntimeNameAttr
intrinsic
ObjCRuntimeVisibleAttr
__builtin_sve_svqsubr_s8_x
ObjCSuppressDirectAttr
--target-help
OpenCLAccessAttr
__builtin_sve_svqsubr_u16_z
OverloadableAttr
-fenable-matrix
RenderScriptKernelAttr
-fgpu-sanitize
SwiftObjCMembersAttr
-target-linker-version
SwiftVersionedAttr
__builtin_sve_svqsubr_u8_x
SwiftVersionedRemovalAttr
interleave_count
ThreadAttr
__builtin_sve_svqxtnb_s32
Target linker version
kind
__builtin_sve_svqxtnb_u16
range
pipeline_initiation_interval
inherited
Build this module as a system module. Only used with -emit-module
implicit
-target-sdk-version=
type
__builtin_sve_svqxtnt_s32
lvalue
xvalue
__builtin_sve_svqxtnt_u16
prvalue
The version of target SDK used for compilation
valueCategory
__builtin_sve_svqxtnt_u64
containsErrors
reassociate
isDependent
-fno-honor-infinites
isInstantiationDependent
-target-variant
isVariablyModified
__builtin_sve_svqxtunt_s16
containsUnexpandedPack
clang fp
isImported
__builtin_sve_svqxtunt_s64
QualType
--target=
qualifiers
__builtin_sve_svraddhnb_n_s64
Decl
max_tokens_here
-ftabstop=
isImplicit
Generate code for the given target
isInvalid
__builtin_sve_svraddhnb_u32
isUsed
max_tokens_total
isReferenced
__builtin_sve_svraddhnt_n_s64
isHidden
-target
parentDeclContextId
__builtin_sve_svraddhnt_s16
TemplateArgument
riscv
fromDecl
Enable sanitizer for AMDGPU target
CXXCtorInitializer
anyInit
__builtin_sve_svrbit_s16_m
baseInit
vector
delegatingInit
__builtin_sve_svrbit_s32_x
Capture
Treat all source files as C
byref
__builtin_sve_svrbit_s64_z
nested
clang riscv intrinsic
Set the tab stop distance.
associationKind
case
__builtin_sve_svrbit_u32_x
default
goto
selected
__builtin_sve_svrbit_u64_z
TypeRequirement
Treat <file> as C source file
SimpleRequirement
__builtin_sve_svrdffr
CompoundRequirement
break
NestedRequirement
-fno-honor-nans
noexcept
-templight-dump
satisfied
q2dq2d
value
includedFrom
__builtin_sve_svrecps_f16
offset
Dump templight information to stdout
presumedFile
__builtin_sve_svrecps_f64
presumedLine
fp_contract
tokLen
Enable availability checks for the target variant platform
spellingLoc
-test-io
expansionLoc
__builtin_sve_svrecpx_f64_m
case 
qualType
__builtin_sve_svrev_b32
desugaredQualType
Run the InputOuputTest action. Use for development and testing only.
typeAliasDeclId
name
isVirtual
-fcoverage-prefix-map=
-fdenormal-fp-math=
Enable matrix data type and related builtin functions
isGenericLambda
-time
isLambda
__builtin_sve_svrev_s64
isEmpty
isAggregate
__builtin_sve_svrev_u16
isStandardLayout
Time individual commands
isTriviallyCopyable
__builtin_sve_svrev_u64
isPOD
else
isTrivial
-ftemplate-backtrace-limit
isPolymorphic
isAbstract
__builtin_sve_svrevb_s32_z
isLiteral
while
canPassInRegisters
__builtin_sve_svrevb_u16_m
hasUserDeclaredConstructor
Treat all source files as C++
hasConstexprNonCopyMoveConstructor
__builtin_sve_svrevb_u32_x
hasMutableFields
parsing function body
hasVariantMembers
-fno-implement-inlines
canConstDefaultInit
defaultCtor
__builtin_sve_svrevd_s32_m
copyCtor
parsing function try block
moveCtor
__builtin_sve_svrevd_s64_x
copyAssign
Treat <file> as C++ source file
moveAssign
__builtin_sve_svrevd_s8_z
dtor
<MS inline asm>
writtenAccess
-ftemplate-depth-
isPackExpansion
--trace-includes
decl
__builtin_sve_svrevd_u64_x
producesResult
asm operand
regParm
__builtin_sve_svrevd_u8_z
trailingReturn
-traditional-cpp
variadic
__builtin_sve_svrevh_s64_m
refQualifier
inline
exceptionSpec
Like -fno-semantic-interposition but don't use local aliases
exceptionTypes
Enable some traditional CPP emulation
throwsAny
__builtin_sve_svrevh_u64_z
conditionEvaluatesTo
unspecified
spelledAsLValue
__builtin_sve_svrevw_u64_m
sizeModifier
-traditional
indexTypeQualifiers
__builtin_sve_svrhadd_n_s16_x
attrLoc
fpsr
numElements
-ftemplate-depth
vectorKind
/translateInclude
altivec pixel
__builtin_sve_svrhadd_n_s8_m
altivec bool
template
neon poly
__builtin_sve_svrhadd_n_u16_x
fixed-length sve data vector
-trigraphs
fixed-length sve predicate vector
__builtin_sve_svrhadd_n_u32_z
transformKind
add_lvalue_reference
-fno-implicit-modules-use-lock
add_pointer
-trim-egraph
add_rvalue_reference
__builtin_sve_svrhadd_s16_x
decay
<unknown>
make_signed
__builtin_sve_svrhadd_s32_z
make_unsigned
Only show error-related paths in the analysis graph
remove_all_extents
__builtin_sve_svrhadd_s8_m
remove_const
remove_cv
-fterminated-vtables
remove_cvref
-triple=
remove_extent
__builtin_sve_svrhadd_u32_z
remove_pointer
inout
remove_reference_t
__builtin_sve_svrhadd_u8_m
remove_restrict
-triple
remove_volatile
__builtin_sve_svrinta_f16_x
underlying_type
-fencode-extended-block-signature
depth
-fheinous-gnu-extensions
isPack
Specify target triple (e.g. i686-apple-darwin9)
pack_index
__builtin_sve_svrinti_f16_m
undeduced
_Bool
typeKeyword
__builtin_sve_svrinti_f32_x
decltype(auto)
-tune-cpu
isAlias
__builtin_sve_svrinti_f64_z
templateName
_exception_info
numExpansions
-ftest-module-file-extension=
ownedTagDecl
Tune for a specific cpu type
macroName
__builtin_sve_svrintm_f64_x
isData
GetExceptionInformation
isFunction
__builtin_sve_svrintn_f16_z
mangledName
/tune:
isInline
__builtin_sve_svrintn_f64_m
originalNamespace
__exception_code
nominatedNamespace
-fno-implicit-none
aliasedNamespace
Set CPU for optimization without affecting instruction set
storageClass
__builtin_sve_svrintp_f32_z
nrvo
_abnormal_termination
modulePrivate
__builtin_sve_svrintx_f16_m
isParameterPack
-twolevel_namespace_hints
isBitfield
__builtin_sve_svrintx_f32_x
hasInClassInitializer
AbnormalTermination
explicitlyDeleted
-fthin-link-bitcode=
explicitlyDefaulted
-twolevel_namespace
deleted
__builtin_sve_svrintz_f32_m
fixedUnderlyingType
module
scopedEnumTag
__builtin_sve_svrintz_f64_x
tagUsed
completeDefinition
__builtin_sve_svrshl_n_s16_z
definitionData
'asm'
bases
-fhip-dump-offload-linker-script
bufferKind
Specify <script> as linker script
cbuffer
__builtin_sve_svrshl_n_s8_x
tbuffer
__if_not_exists
defaultArg
__builtin_sve_svrshl_n_u16_z
hasBraces
<script>
synthesized
__builtin_sve_svrshl_n_u64_m
returnType
not a IncludeTreeRoot node kind
bounded
-fthinlto-index=
variance
covariant
__builtin_sve_svrshl_s16_z
contravariant
(Module for visibility only) 
categoryDecl
__builtin_sve_svrshl_s64_m
control
Set target profile
implKind
__builtin_sve_svrshl_s8_x
propertyDecl
 (framework)
ivarDecl
-fno-in-descriptor-block-flags
capturesThis
<profile>
encodedType
__builtin_sve_svrshl_u64_m
receiverKind
 (extern_c)
classType
__builtin_sve_svrshl_u8_x
super (instance)
ps_6_0, ps_6_1, ps_6_2, ps_6_3, ps_6_4, ps_6_5, ps_6_6, ps_6_7,vs_6_0, vs_6_1, vs_6_2, vs_6_3, vs_6_4, vs_6_5, vs_6_6, vs_6_7,gs_6_0, gs_6_1, gs_6_2, gs_6_3, gs_6_4, gs_6_5, gs_6_6, gs_6_7,hs_6_0, hs_6_1, hs_6_2, hs_6_3, hs_6_4, hs_6_5, hs_6_6, hs_6_7,ds_6_0, ds_6_1, ds_6_2, ds_6_3, ds_6_4, ds_6_5, ds_6_6, ds_6_7,cs_6_0, cs_6_1, cs_6_2, cs_6_3, cs_6_4, cs_6_5, cs_6_6, cs_6_7,lib_6_3, lib_6_4, lib_6_5, lib_6_6, lib_6_7, lib_6_x,ms_6_5, ms_6_6, ms_6_7,as_6_5, as_6_6, as_6_7
superType
__builtin_sve_svrshr_n_s16_z
super (class)
  explicit module *
callReturnType
-fthreadsafe-statics
propertyKind
isSuperReceiver
__builtin_sve_svrshr_n_s8_x
isMessagingGetter
 { export * }
isMessagingSetter
__builtin_sve_svrshr_n_u16_x
subscriptKind
-umbrella
dictionary
isFreeIvar
isArrow
enable extended encoding of block type signature
-fhip-fp32-correctly-rounded-divide-sqrt
-fno-init-local-zero
__objc_yes
--undefine-macro=
__objc_no
__builtin_sve_svrshr_n_u8_x
referencedDecl
Files:
foundReferencedDecl
__builtin_sve_svrshrnb_n_s64
nonOdrUseReason
--undefine-macro
unevaluated
__builtin_sve_svrshrnt_n_s16
discarded
FileSystem
typeSourceInfo
(For new pass manager) 'per-pass': one report for each pass; 'per-pass-run': one report for each pass invocation
isPostfix
-undefined
opcode
__builtin_sve_svrsqrte_f64
canOverflow
link 
computeLHSType
__builtin_sve_svrsqrts_f16
computeResultType
-undef
referencedMemberDecl
__builtin_sve_svrsra_n_s32
isGlobal
cache poisoned for '
isArray
isPlacement
initStyle
undef all system defines
__builtin_sve_svrsubhnb_n_s32
__builtin_sve_svrsubhnb_n_u64
operatorNewDecl
' vs. existing '
operatorDeleteDecl
isArrayAsWritten
castKind
-unexported_symbols_list
__builtin_sve_svrsubhnb_u16
__builtin_sve_svrsubhnt_n_u64
conversionFunc
invalid cas-id '
isPartOfExplicitCast
-ftime-report
-unoptimized-cfg
argType
usesADL
lookups
invalid hash in cas-id '
__builtin_sve_svrsubhnt_u16
__builtin_sve_svsbclb_n_u64
labelDeclId
Generate unoptimized CFGs for all analyses
typeArg
adjustedTypeArg
resultDependent
unknown object '
Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
-fno-inline-functions
typeAsWritten
--unsigned-char
ctorType
q8hq16bq8hq8s
elidable
BLAKE3
zeroing
q4fq16bq4fq4i
hadMultipleCandidates
-unwindlib=
constructionKind
q2dq16bq2dq2Wi
complete
delegating
Minimum time granularity (in microseconds) traced by time profiler
non-virtual base
Unwind library to use
virtual base
q4fq16bq4fi
cleanupsHaveSideEffects
invalid tree '
cleanups
q2dq16bq2dWi
temp
libgcc,unwindlib,platform
extendingDecl
__builtin_sve_svsclamp_s32
storageDuration
automatic
full expression
boundToLValueRef
--user-dependencies
__builtin_sve_svsel_s16
__builtin_sve_svsel_u16
member
 subtrie-bits=
hasTemplateKeyword
hasExplicitTemplateArgs
explicitTemplateArgs
/utf-8
__builtin_sve_svset2_bf16
__builtin_sve_svset2_s16
hasInit
[no-root]
hasVar
Similar to -ftime-trace. Specify the JSON file or a directory which will contain the JSON file
hasElse
Set source and runtime encoding to UTF-8 (default)
isConstexpr
isConsteval
constevalIsNegated
subtrie=
__builtin_sve_svset2_s64
__builtin_sve_svset2_u16
isGNURange
declId
sideEntry
targetLabelDeclId
-fencoding=
-fhip-kernel-arg-name
Specify that kernel argument names are preserved (HIP only)
isCatchAll
Undefine macro <macro>
isNull
__builtin_sve_svset3_bf16
isNullptr
isExpr
__builtin_sve_svset3_f32
<invalid>
<macro>
text
__builtin_sve_svset3_s16
renderKind
.shared
normal
Turn on time profiler. Generates JSON file based on output filename.
bold
emphasized
__builtin_sve_svset3_u16
monospaced
anchor
__builtin_sve_svset3_u64
selfClosing
Undefine macro
malformed
__builtin_sve_svset4_bf16
attrs
LLVM_CAS_MAX_MAPPING_SIZE
direction
-fno-inline-small-functions
in,out
param
__builtin_sve_svset4_s16
paramIdx
on-disk-root-path: 
positions
__builtin_sve_svset4_s64
closeName
FPContractMode
__builtin_sve_svset4_u16
RoundingMath
pool:
ConstRoundingMode
global-dynamic,local-dynamic,initial-exec,local-exec
SpecifiedExceptionMode
/validate-charset-
AllowFEnvAccess
__builtin_sve_svsetffr
AllowFPReassociate
record refs=
NoHonorNaNs
__builtin_sve_svshllb_n_s32
NoHonorInfs
/validate-charset
NoSignedZero
__builtin_sve_svshllb_n_u16
AllowReciprocal
 size=
AllowApproxFunc
FPEvalMethod
fpoptions
/validator-version
__builtin_sve_svshllt_n_s64
__builtin_sve_svshrnb_n_s16
exists
OnDiskCAS: corrupt internal reference
trivial
nonTrivial
userProvided
Override validator version for module. Format: <major.minor>;Default: DXIL.dll version or current internal version
__builtin_sve_svshrnb_n_u32
__builtin_sve_svsli_n_s16
needsImplicit
unexpected user header in '
defaultedIsConstexpr
-ftracer
userDeclared
/vctoolsdir
hasConstParam
implicitHasConstParam
needsOverloadResolution
.leaf+0
__builtin_sve_svsli_n_u16
__builtin_sve_svsm4e_u32
defaultedIsDeleted
Path to the VCToolChain
irrelevant
firstRedecl
previousDecl
-fno-integer-4-integer-8
The trap function specified by -ftrap-function may return normally
isMacroArgExpansion
/vctoolsversion
__main_argc_argv
__builtin_sve_svsplice_s64
_GUID_%08x_%04x_%04x_
llvm.cas.index
__builtin_sve_svsplice_u64
For use with /winsysroot, defaults to newest found
_OBJC_CLASS_
__builtin_sve_svsqadd_n_u16_z
OBJC_CLASS_$_
 SK=
Mangling number exceeds limit (65535)
<lambda_
3U__s_GUID@@B
__builtin_sve_svsqadd_n_u8_x
__builtin_sve_svsqadd_u16_z
?A0x
datapool         
?__N
<unnamed-type-
-fdebug-dump-parse-tree
-fdeprecated-macro
Control vtordisp placement
<unnamed-enum-
-ferror-limit=
<unnamed-type-$S
-fhip-new-launch-api
-vectorize-loops
__builtin_sve_svsqrshru_u8_x4
 Offset=
__builtin_sve_svsqrt_f32_m
?__K
Run the Loop vectorization passes
__builtin_sve_svsqrt_f64_x
subtrie bits
Issue call to specified function rather than a trap instruction
-vectorize-slp
__builtin_sve_svsra_n_u64
invalid hash size: 
$$$V
__builtin_sve_svsri_n_s64
Run the SLP vectorization passes
__builtin_sve_svsri_n_u64
table not found
cannot mangle this dependent-length array yet
Disable the integrated assembler
--verbose
PEAXI@Z
__builtin_sve_svst1_f64
PAXI@Z
data size
__builtin_sve_svst1_s32
<decltype-auto>
--verify-debug-info
<auto>
__builtin_sve_svst1_s8
__pass_dynamic_object_size
hash-num-bits=
__pass_object_size
-ftrapv-handler=
__clang
Verify the binary representation of debug output
__builtin_sve_svst1_scatter_s32offset_f32
_UBitInt
 record-data-size=
vq16bd*q2Wiq2d
-verify-ignore-unexpected=
vq16bUWi*q2Wiq2UWi
bytes=
Use new kernel launching API for HIP
Ignore unexpected diagnostic messages
__builtin_sve_svst1_scatter_u32base_index_s32
addr=
__builtin_sve_svst1_scatter_u32base_offset_f32
objc_selector
-verify-ignore-unexpected
PAUocl_image1d_ro@@
vq16bq4Uiq4i
PAUocl_image1d_array_ro@@
 content=
PAUocl_image1d_buffer_ro@@
<function name>
PAUocl_image2d_ro@@
-verify-pch
PAUocl_image2d_array_ro@@
vq16bUi*q4Uiq4Ui
PAUocl_image2d_depth_ro@@
 (max: 
PAUocl_image2d_array_depth_ro@@
__builtin_sve_svst1_scatter_u64base_f64
PAUocl_image2d_msaa_ro@@
Load and verify that a pre-compiled header file is not stale
PAUocl_image2d_array_msaa_ro@@
__builtin_sve_svst1_scatter_u64base_index_s64
PAUocl_image2d_msaa_depth_ro@@
database: missing header
PAUocl_image2d_array_msaa_depth_ro@@
Spawn a separate process for each cc1
PAUocl_image3d_ro@@
-verify=
PAUocl_image1d_wo@@
vq16bq2UWiq2Wi
PAUocl_image1d_array_wo@@
database: wrong version
PAUocl_image1d_buffer_wo@@
vq16bd*q2UWiq2d
PAUocl_image2d_wo@@
Verify diagnostic output using comment directives that start with prefixes in the comma-separated sequence <prefixes>
PAUocl_image2d_array_wo@@
vq16bUWi*q2UWiq2UWi
PAUocl_image2d_depth_wo@@
mismatched 
PAUocl_image2d_array_depth_wo@@
-ftrapv
PAUocl_image2d_msaa_wo@@
<prefixes>
PAUocl_image2d_array_msaa_wo@@
__builtin_sve_svst1_u64
PAUocl_image2d_msaa_depth_wo@@
, observed: 
PAUocl_image2d_array_msaa_depth_wo@@
__builtin_sve_svst1_vnum_bf16
PAUocl_image3d_wo@@
-verify
PAUocl_image1d_rw@@
__builtin_sve_svst1_vnum_f32
PAUocl_image1d_array_rw@@
-ferror-limit
PAUocl_image1d_buffer_rw@@
-fhonor-infinites
PAUocl_image2d_rw@@
Equivalent to -verify=expected
PAUocl_image2d_array_rw@@
__builtin_sve_svst1_vnum_s64
PAUocl_image2d_depth_rw@@
expected value size of 
PAUocl_image2d_array_depth_rw@@
__builtin_sve_svst1_vnum_u16
PAUocl_image2d_msaa_rw@@
--version
PAUocl_image2d_array_msaa_rw@@
__builtin_sve_svst1_vnum_u64
PAUocl_image2d_msaa_depth_rw@@
llvm.actioncache[
PAUocl_image2d_array_msaa_depth_rw@@
-ftree-dce
PAUocl_image3d_rw@@
Print version information
__builtin_sve_svst1b_s64
ocl_sampler
actions
ocl_event
__builtin_sve_svst1b_s8_x4
ocl_clkevent
-version
ocl_queue
__builtin_sve_svst1b_scatter_s32offset_u32
ocl_reserveid
failed symbol 'llcas_actioncache_get_for_digest' lookup
Use external machine object code emitter.
_Half
Print the compiler version
$f16@
__builtin_sve_svst1b_scatter_u32base_s32
$halff@
failed symbol 'llcas_actioncache_put_for_digest' lookup
cannot mangle this built-in %0 type yet
__builtin_sve_svst1b_scatter_u32offset_u32
cannot mangle this decltype() yet
-via-file-asm
cannot mangle this 'auto' type yet
__builtin_sve_svst1b_scatter_u64base_s64
cannot mangle this deduced class template specialization type yet
failed symbol 'llcas_cas_contains_object' lookup
cannot mangle this dependent address space type yet
-ftree-slp-vectorize
cannot mangle this DependentBitInt type yet
Write assembly to file for input to assemble jobs
cannot mangle this dependent name type yet
__builtin_sve_svst1b_u32
cannot mangle this dependent-sized extended vector type yet
failed symbol 'llcas_cas_create' lookup
cannot mangle this dependent template specialization type yet
__builtin_sve_svst1b_u8_x2
cannot mangle this dependent-sized vector type yet
/vmb
$$A6
__builtin_sve_svst1b_vnum_s16
$$A8@@
failed symbol 'llcas_cas_dispose' lookup
Cannot mangle this matrix type yet
-fhonor-infinities
Cannot mangle this dependent-sized matrix type yet
Use a best-case representation method for member pointers
Autoreleasing
__builtin_sve_svst1b_vnum_s8_x4
Strong
failed symbol 'llcas_cas_get_hash_schema_name' lookup
Weak
__builtin_sve_svst1b_vnum_u32
__ObjC
/vmg
KindOf
__builtin_sve_svst1b_vnum_u8_x2
cannot mangle this pack expansion yet
failed symbol 'llcas_cas_get_objectid' lookup
ocl_pipe
-ftree-vectorizer-verbose
Use a most-general representation for member pointers
_ASCLglobal
__builtin_sve_svst1d_s64_x2
_ASCLdevice
failed symbol 'llcas_cas_load_object' lookup
_ASCLhost
__builtin_sve_svst1d_u64_x2
_ASCLlocal
/vmm
_ASCLconstant
__builtin_sve_svst1d_vnum_f64_x2
_ASCLprivate
failed symbol 'llcas_cas_load_object_async' lookup
_ASCLgeneric
-fno-ivopts
_ASCUdevice
Set the default most-general representation to multiple inheritance
_ASCUconstant
__builtin_sve_svst1d_vnum_u64_x2
_ASCUshared
failed symbol 'llcas_cas_options_create' lookup
__builtin_sve_svst1h_bf16_x2
cannot mangle this substituted parameter pack yet
/vms
cannot mangle this template specialization type yet
__builtin_sve_svst1h_f16_x2
cannot mangle this template type parameter type yet
failed symbol 'llcas_cas_options_dispose' lookup
cannot mangle this typeof(expression) yet
-ftree-vrp
cannot mangle this typeof(type) yet
Set the default most-general representation to single inheritance
cannot mangle this unary transform type yet
__builtin_sve_svst1h_s32
cannot mangle this unresolved dependent type yet
failed symbol 'llcas_cas_options_set_client_version' lookup
__m64
__builtin_sve_svst1h_scatter_s32index_s32
/vmv
__vector
Set the maximum number of errors to emit before stopping (0 = no limit).
-fhonor-nans
-fno-jump-tables
Set the default most-general representation to virtual inheritance
__builtin_sve_svst1h_scatter_u32base_index_s32
failed symbol 'llcas_cas_options_set_option' lookup
cannot mangle this template argument yet
__builtin_sve_svst1h_scatter_u32base_s32
/volatile:iso
__builtin_sve_svst1h_scatter_u32index_u32
failed symbol 'llcas_cas_store_object' lookup
Process trigraph sequences
Volatile loads and stores have standard semantics
__builtin_sve_svst1h_scatter_u64base_s64
failed symbol 'llcas_digest_parse' lookup
__builtin_sve_svst1h_scatter_u64index_u64
/volatile:ms
__builtin_sve_svst1h_u16_x2
failed symbol 'llcas_digest_print' lookup
Volatile loads and stores have acquire and release semantics
__builtin_sve_svst1h_vnum_bf16_x2
__builtin_sve_svst1h_vnum_f16_x2
failed symbol 'llcas_get_plugin_version' lookup
-vtordisp-mode=
__builtin_sve_svst1h_vnum_s16_x2
__builtin_sve_svst1h_vnum_u16_x2
failed symbol 'llcas_loaded_object_get_data' lookup
do not auto-initialize objects initialized by a C++ constructor
Control vtordisp placement on win32 targets
failed symbol 'llcas_loaded_object_get_refs' lookup
__builtin_sve_svst1h_vnum_u32
__builtin_sve_svst1w_f32_x2
failed symbol 'llcas_object_refs_get_count' lookup
-fhosted
-fno-keep-inline-functions
__builtin_sve_svst1w_s64
failed symbol 'llcas_object_refs_get_id' lookup
__builtin_sve_svst1w_scatter_s64index_u64
__builtin_sve_svst1w_scatter_u64base_index_s64
failed symbol 'llcas_objectid_get_digest' lookup
do not auto-initialize non-POD objects
Show commands to run and use verbose output
__builtin_sve_svst1w_scatter_u64index_u64
failed symbol 'llcas_string_dispose' lookup
__builtin_sve_svst1w_u32_x2
__builtin_sve_svst1w_u64
?__L
Disable all warnings
__builtin_sve_svst1w_vnum_s32_x4
__builtin_sve_svst1w_vnum_u32_x2
?__M
llvm::cas::schema::tree::v1
cannot mangle this conditional operator yet
__block_literal
__builtin_sve_svst1w_vnum_u64
__builtin_sve_svst2_f64
objectid
$$J0
do not auto-initialize arrays other than arrays of pointers
Enable -Wall
??_E
?$RT
??_R0
__builtin_sve_svst2_s32
__builtin_sve_svst2_s8
??_C@_
??__J
??_B
-fescaping-block-tail-calls
-fident
-fignore-exceptions
?$S1@
__builtin_sve_svst2_u8
@4IA
??__
__builtin_sve_svst2_vnum_f16
YAXXZ
?filt$
__builtin_sve_svst2_vnum_f64
exec
?fin$
do not auto-initialize variables in STL namespace
??_S
Enable -Wall and -Wextra
??_7
__builtin_sve_svst2_vnum_s8
tree
??_8
__builtin_sve_svst2_vnum_u32
-Wa,
?$TSS
__builtin_sve_svst2_vnum_u8
@4HA
??_K
Don't keep static const variables if unused
Pass the comma separated arguments in <arg> to the assembler
__builtin_sve_svst3_f64
_CTA
OPTIONS
__builtin_sve_svst3_s32
??_R1
-Wall
??_R2
__builtin_sve_svst3_s8
??_R3
<value>
??_R4@
Stop initializing trivial automatic stack variables after the specified number of instances
??_R4
/Wall
__super
__builtin_sve_svst3_u8
NSObject
Expected visible lookup table block
NSString
__builtin_sve_svst3_vnum_f16
NSArray
Enable -Weverything
NSMutableArray
__builtin_sve_svst3_vnum_f64
NSDictionary
source location entry ID out-of-range for AST file
NSMutableDictionary
NSNumber
NSMutableSet
--warn-=
__builtin_sve_svst3_vnum_s8
__builtin_sve_svst3_vnum_u32
NSMutableOrderedSet
unexpected number of macro tokens for a macro in AST file
NSValue
stringWithString
initWithString
--warn-
__builtin_sve_svst3_vnum_u8
__builtin_sve_svst4_f64
arrayWithArray
' referenced by AST file '
arrayWithObject
Initialize trivial automatic stack variables. Defaults to 'uninitialized'
arrayWithObjects
-WCL4
initWithArray
initWithObjects
objectAtIndex
error at end of module block in AST file
__builtin_sve_svst4_s32
__builtin_sve_svst4_s8
replaceObjectAtIndex
-Wdeprecated
addObject
atIndex
dictionaryWithDictionary
duplicate DECL_OFFSET record in AST file
Disable support for K&R C function declarations
-ftrivial-auto-var-zero-init-max-size=
dictionaryWithObject
Enable warnings for deprecated constructs and define __DEPRECATED
forKey
__builtin_sve_svst4_u8
dictionaryWithObjects
invalid special-types record
forKeys
__builtin_sve_svst4_vnum_f16
dictionaryWithObjectsAndKeys
initWithDictionary
__builtin_sve_svst4_vnum_f64
initWithObjectsAndKeys
ran out of source locations
objectForKey
setValue
numberWithChar
-weak-l
__builtin_sve_svst4_vnum_s8
__builtin_sve_svst4_vnum_u32
numberWithUnsignedChar
Invalid VTABLE_USES record
numberWithShort
numberWithUnsignedShort
numberWithInt
-fcuda-allow-variadic-functions
-fdepscan-daemon=
-weak_framework
numberWithUnsignedInt
-fexceptions
numberWithLong
Enable support for ignoring exception handling constructs
numberWithUnsignedLong
-weak_library
numberWithLongLong
__builtin_sve_svstnt1_s64
numberWithUnsignedLongLong
invalid DECL_UPDATE_OFFSETS block in AST file
numberWithFloat
__builtin_sve_svstnt1_scatter_s64index_u64
numberWithDouble
-weak_reference_mismatches
numberWithBool
__builtin_sve_svstnt1_scatter_u32base_f32
numberWithInteger
Invalid existing UndefinedButUsed
numberWithUnsignedInteger
-ftype-visibility=
initWithChar
-Wframe-larger-than=
initWithUnsignedChar
__builtin_sve_svstnt1_scatter_u32base_u32
initWithShort
duplicate MACRO_OFFSET record in AST file
initWithUnsignedShort
__builtin_sve_svstnt1_scatter_u64base_f64
initWithInt
-Wframe-larger-than
initWithUnsignedInt
__builtin_sve_svstnt1_scatter_u64base_offset_f64
initWithLong
invalid pragma ms_struct record
initWithUnsignedLong
-fno-legacy-pass-manager
initWithLongLong
-whatsloaded
initWithUnsignedLongLong
__builtin_sve_svstnt1_scatter_u64offset_f64
initWithFloat
invalid cuda pragma options record
initWithDouble
__builtin_sve_svstnt1_u32
initWithBool
-why_load
initWithInteger
__builtin_sve_svstnt1_vnum_f16
initWithUnsignedInteger
invalid pragma float control record
BOOL
default,hidden,internal,protected
NSInteger
-whyload
NSUInteger
__builtin_sve_svstnt1_vnum_u32
category '
' referenced by AST file
' on interface '
__builtin_sve_svstnt1b_s8_x4
/winsdkdir
__builtin_sve_svstnt1b_scatter_u32base_offset_u32
malformed EXTENSION_METADATA in AST file
-fignore-objc-weak
final(
Path to the Windows SDK
num_threads(
__builtin_sve_svstnt1b_scatter_u64base_u64
align(
Invalid FILE type in AST file
safelen(
__builtin_sve_svstnt1b_u8_x4
simdlen(
/winsdkversion
sizes(
__builtin_sve_svstnt1b_vnum_u8_x4
Invalid jmp_buf type in AST file
full
Enable use of typed variants of C++ new() and delete()
partial
Full version of the Windows SDK, defaults to newest found
allocator(
__builtin_sve_svstnt1d_vnum_f64_x4
collapse(
ucontext_t type is NULL
detach(
__builtin_sve_svstnt1d_vnum_u64_x4
default(
/winsysroot
proc_bind(
__builtin_sve_svstnt1h_f16_x4
unified_address
malformed module definition
unified_shared_memory
-fno-logical-abbreviations
reverse_offload
Same as "/diasdkdir <dir>/DIA SDK" /vctoolsdir <dir>/VC/Tools/MSVC/<vctoolsversion> "/winsdkdir <dir>/Windows Kits/10"
dynamic_allocators
__builtin_sve_svstnt1h_scatter_u32base_index_u32
atomic_default_mem_order(
no preprocessing record
schedule(
__builtin_sve_svstnt1h_scatter_u32base_u32
ordered
-Wl,
__builtin_sve_svstnt1h_scatter_u64base_index_u64
nowait
malformed AST file: missing C++ ctor initializers
untied
Enable Typed Memory Operations call site rewriting
nogroup
Pass the comma separated arguments in <arg> to the linker
mergeable
__builtin_sve_svstnt1h_scatter_u64offset_u64
read
declaration ID out-of-range for AST file
write
__builtin_sve_svstnt1h_vnum_bf16_x4
update
-Wlarge-by-value-copy=
capture
__builtin_sve_svstnt1h_vnum_s16_x4
compare
Enable support for exception handling
seq_cst
ignore __weak qualifiers in manual reference counting
acq_rel
-Wlarge-by-value-copy
acquire
__builtin_sve_svstnt1w_scatter_s64index_u64
release
  %u/%u types read (%f%%)
relaxed
__builtin_sve_svstnt1w_scatter_u64base_index_u64
threads
Warn if a function definition returns or accepts an object larger in bytes than a given value
simd
__builtin_sve_svstnt1w_scatter_u64base_u64
device(
  %u/%u identifiers read (%f%%)
num_teams(
-function-alignment
thread_limit(
-Wlarger-than-
priority(
__builtin_sve_svstnt1w_vnum_f32_x4
grainsize(
  %u/%u selectors read (%f%%)
num_tasks(
__builtin_sve_svstnt1w_vnum_u32_x4
hint(
-Wlarger-than=
init(
__builtin_sve_svsub_f32_m
prefer_type(
  %u/%u lexical declcontexts read (%f%%)
-fno-lto
target
__builtin_sve_svsub_n_f16_z
targetsync
  %u/%u method pool entries read (%f%%)
__builtin_sve_svsub_n_f64_m
use(
-Wno-deprecated
destroy
__builtin_sve_svsub_n_s16_x
novariants
  %u/%u method pool table lookups succeeded (%f%%)
nocontext
-funderscoring
allocate
-Wno-nonportable-cfstrings
__builtin_sve_svsub_n_s8_m
private
*** PCH/ModuleFile Remappings:
firstprivate
__builtin_sve_svsub_n_u16_x
lastprivate
-Wno-rewrite-macros
shared
__builtin_sve_svsub_n_u32_z
reduction(
Global source location entry map
task_reduction(
-filelist
in_reduction(
Silence ObjC rewriting warnings
linear
__builtin_sve_svsub_s16_x
aligned
Global declaration map
copyin
__builtin_sve_svsub_s32_z
copyprivate
-Wno-system-headers
depend(
__builtin_sve_svsub_s8_m
Global macro map
Use unique names for basic block sections (ELF Only)
omp_all_memory
-Wno-write-strings
map(
__builtin_sve_svsub_u32_z
dist_schedule(
Global selector map
defaultmap(
__builtin_sve_svsub_u8_m
use_device_ptr
-Wnonportable-cfstrings
use_device_addr
__builtin_sve_svsubhnb_n_s32
is_device_ptr
*** PCH/Modules Loaded:
has_device_addr
-fno-math-builtin
nontemporal
-working-directory=
order(
__builtin_sve_svsubhnb_u16
inclusive
no macro table in AST file
exclusive
__builtin_sve_svsubhnt_n_s32
uses_allocators(
-working-directory
affinity
__builtin_sve_svsubhnt_n_u64
filter(
selector ID out of range in AST file
bind(
Uniqueify Internal Linkage Symbol Names by appending the MD5 hash of the module path
Resolve file paths relative to the specified directory
score(
__builtin_sve_svsublb_n_s32
wint_t
__builtin_sve_svsublb_n_u64
__int32
-Wp,
__int64
intmax_t
ssize_t
-fexcess-precision=
-filetype
-fno-math-errno
unsigned __int32
Pass the comma separated arguments in <arg> to the preprocessor
unsigned __int64
__builtin_sve_svsublbt_s64
uintmax_t
Kernel mode
unsigned ptrdiff_t
__builtin_sve_svsublt_n_u16
const unichar *
/Wp64
wchar_t *
__builtin_sve_svsublt_s32
Microsoft inline asm blocks
-funit-at-a-time
--write-dependencies
__builtin_sve_svsubltb_s16
C++11
__builtin_sve_svsubr_f16_x
--write-user-dependencies
^[[:space:]]*(private|public|sensitive|mask\.[^[:space:],}]*)[[:space:]]*(,|})
__builtin_sve_svsubr_f32_z
*** Dumping AST Record Layout
C++17
Type: 
Layout: 
<ASTRecordLayout
-Wsystem-headers
__builtin_sve_svsubr_n_f32_x
__builtin_sve_svsubr_n_f64_z
  Size:
C++2b
  DataSize:
  Alignment:
  PreferredAlignment:
-Wundef-prefix=
__builtin_sve_svsubr_n_s32_m
__builtin_sve_svsubr_n_s8_z
  FieldOffsets: [
trigraphs
 (empty)
Enable parser support for the __unknown_anytype type; for testing purposes only
 vtable pointer)
Enable warnings for undefined macros with a prefix in the comma separated list <arg>
 vftable pointer)
(primary base)
(base)
bool, true, and false keywords
__builtin_sve_svsubr_n_u32_m
__builtin_sve_svsubr_n_u64_x
 vbtable pointer)
(vtordisp for vbase 
(primary virtual base)
(virtual base)
wchar_t keyword
Specify the output file type ('asm', 'null', or 'obj')
-fno-max-type-align
[sizeof=
-Wwrite-strings
, dsize=
__builtin_sve_svsubr_s32_m
, align=
__ieee128 keyword
, preferredalign=
__builtin_sve_svsubr_s64_x
/WX-
 nvsize=
__builtin_sve_svsubr_s8_z
, nvalign=
GNU extensions
, preferrednvalign=
-funroll-loops
%10lld | 
Do not treat warnings as errors (default)
__builtin_sve_svsubr_u64_x
           | 
GNU C compatibility version
__builtin_sve_svsubr_u8_z
__builtin_sve_svsubwb_n_u16
*** Stmt/Expr Stats:
digraphs
 stmts/exprs total.
    
Treat warnings as errors
__builtin_sve_svsubwb_u64
__builtin_sve_svsubwt_n_u16
Apple kext support
 each (
 bytes)
__builtin_sve_svsubwt_s32
q4iq4iq16ScUc
Total bytes = 
const-qualified string support
-funsafe-loop-optimizations
Enable the specified warning
Altivec source compatibility
q8yq16yq8Us
q4fq8fq4Ui
${:uid}
<warning>
GCCAsmStmt
MSAsmStmt
BreakStmt
-fexec-charset=
-fimplement-inlines
-fimplicit-module-maps
CXXCatchStmt
CXXForRangeStmt
q2Wiq4Wiq2UWi
CXXTryStmt
exception handling
CapturedStmt
q8Usq16Usq8Us
CompoundStmt
Suppress all warnings
ContinueStmt
q2UWiq4UWiq2UWi
CoreturnStmt
C++ exceptions
CoroutineBodyStmt
-funsigned-bitfields
DeclStmt
DoStmt
q4fq4fq4Ui
ForStmt
ignore exceptions
GotoStmt
q8sq8sq8Us
IfStmt
-Xanalyzer
IndirectGotoStmt
q2Wiq2Wiq2UWi
MSDependentExistsStmt
traditional CPP emulation
NullStmt
Disable heap memory profiling
OMPCanonicalLoop
Pass <arg> to the static analyzer
OMPAtomicDirective
q8yq8yq8yq8Us
OMPBarrierDirective
emit run-time type information data
OMPCancelDirective
q4fq4fq4fq4Ui
OMPCancellationPointDirective
-Xarch_device
OMPCriticalDirective
q8sq8sq8sq8Us
OMPDepobjDirective
Microsoft-compatible volatile loads and stores
OMPDispatchDirective
-funswitch-loops
OMPFlushDirective
Pass <arg> to the CUDA/HIP device compilation
OMPInteropDirective
__builtin_sve_svtbx_u32
OMPDistributeDirective
disable builtin functions
OMPDistributeParallelForDirective
__builtin_sve_svtmad_f32
OMPDistributeParallelForSimdDirective
-Xarch_host
OMPDistributeSimdDirective
__builtin_sve_svtrn1_b64
OMPForDirective
GNU-style inline assembly
OMPForSimdDirective
OMPGenericLoopDirective
OMPMaskedTaskLoopDirective
Pass <arg> to the CUDA/HIP host compilation
__builtin_sve_svtrn1_s32
__builtin_sve_svtrn1_u32
OMPMaskedTaskLoopSimdDirective
prefer Aligned Allocation according to P2014 Option 2
OMPMasterTaskLoopDirective
OMPMasterTaskLoopSimdDirective
OMPParallelForDirective
-Xarch_
__builtin_sve_svtrn1q_f16
__builtin_sve_svtrn1q_u32
OMPParallelForSimdDirective
C++17 relaxed matching of template template arguments
OMPParallelGenericLoopDirective
Generate unwinding tables for all functions
OMPParallelMaskedTaskLoopDirective
-Xassembler
OMPParallelMaskedTaskLoopSimdDirective
OMPParallelMasterTaskLoopDirective
OMPParallelMasterTaskLoopSimdDirective
function pointer authentication
__builtin_sve_svtrn2_b32
__builtin_sve_svtrn2_f16
OMPSimdDirective
Pass <arg> to the assembler
OMPTargetParallelForSimdDirective
OMPTargetParallelGenericLoopDirective
OMPTargetSimdDirective
indirect gotos pointer authentication
Disallow merging of constants
-fuse-ctor-homing
OMPTargetTeamsDistributeDirective
-Xclang=
OMPTargetTeamsDistributeParallelForDirective
__builtin_sve_svtrn2_u32
OMPTargetTeamsDistributeParallelForSimdDirective
incorporate address discrimination in authenticated vtable pointers
OMPTargetTeamsDistributeSimdDirective
__builtin_sve_svtrn2q_f16
OMPTargetTeamsGenericLoopDirective
Alias for -Xclang
OMPTaskLoopDirective
__builtin_sve_svtrn2q_s32
OMPTaskLoopSimdDirective
authentication mode for objc isa
OMPTeamsDistributeDirective
OMPTeamsDistributeParallelForDirective
OMPTeamsDistributeParallelForSimdDirective
-Xclang
__builtin_sve_svtsmul_f32
__builtin_sve_svtssel_f64
OMPTeamsDistributeSimdDirective
authentication key for SEL fields of ObjC interfaces
OMPTeamsGenericLoopDirective
OMPTileDirective
OMPUnrollDirective
-fdebug-dump-parsing-log
-fdepscan-include-tree
Pass <arg> to clang -cc1
OMPMaskedDirective
-fexpensive-optimizations
OMPMasterDirective
Implicitly search the file system for module map files.
OMPMetaDirective
-Xcuda-fatbinary
OMPOrderedDirective
q4dv
OMPParallelDirective
controls whether the pointer auth abi version represents a kernel ABI
OMPParallelMaskedDirective
q8iv
OMPParallelMasterDirective
Pass <arg> to fatbinary invocation
OMPParallelSectionsDirective
q32Scv
OMPScanDirective
enable signed block descriptors
OMPSectionDirective
-fuse-cuid=
OMPSectionsDirective
-Xcuda-ptxas
OMPSingleDirective
q32Ucv
OMPTargetDataDirective
Enable unstable and experimental features
OMPTargetDirective
q24hv
OMPTargetEnterDataDirective
Pass <arg> to the ptxas assembler
OMPTargetExitDataDirective
q6dv
OMPTargetParallelDirective
'[[]]' attributes extension for all language standard modes
OMPTargetParallelForDirective
-fno-minimize-whitespace
OMPTargetTeamsDirective
-Xflang
OMPTargetUpdateDirective
q48Scv
OMPTaskDirective
Preserve the type in recovery expressions
OMPTaskgroupDirective
q12Uiv
OMPTaskwaitDirective
Pass <arg> to the flang compiler
OMPTaskyieldDirective
q48Ucv
OMPTeamsDirective
blocks extension to C
ObjCAtCatchStmt
-fuse-cxa-atexit
ObjCAtFinallyStmt
-Xlinker
ObjCAtSynchronizedStmt
q8dv
ObjCAtThrowStmt
modules semantics
ObjCAtTryStmt
q16iv
ObjCAutoreleasePoolStmt
Pass <arg> to the linker
ObjCForCollectionStmt
q64Scv
ReturnStmt
C++ modules syntax
SEHExceptStmt
-fimplicit-modules-use-lock
SEHFinallyStmt
-Xmicrosoft-visualc-tools-root
SEHLeaveStmt
q64Ucv
SEHTryStmt
requiring declaration of module uses and all headers to be in modules
CaseStmt
q8hv
DefaultStmt
-Xmicrosoft-visualc-tools-version
SwitchStmt
q2dv
AttributedStmt
hash out diagnostic errors as part of the module hash
BinaryConditionalOperator
-fuse-ld=
ConditionalOperator
-Xmicrosoft-windows-sdk-root
AddrLabelExpr
q16Scv
ArrayInitIndexExpr
disable ODR hash checking for categories
ArrayInitLoopExpr
q4Uiv
ArraySubscriptExpr
-Xmicrosoft-windows-sdk-version
ArrayTypeTraitExpr
q16Ucv
AsTypeExpr
disable ODR hash checking for protocols
AssumptionExpr
-fno-module-maps
AtomicExpr
-Xoffload-linker
BinaryOperator
__builtin_sve_svunpklo_b
CompoundAssignOperator
disable ODR hash checking for properties
BlockExpr
__builtin_sve_svunpklo_u16
BoundsCheckExpr
Pass <arg> to the offload linkers or the ones idenfied by -<triple>
CXXBindTemporaryExpr
__builtin_sve_svuqadd_n_s16_x
CXXBoolLiteralExpr
disable ODR hash checking for methods
CXXConstructExpr
Use #line in preprocessed output
CXXTemporaryObjectExpr
<triple> <arg>
CXXDefaultArgExpr
__builtin_sve_svuqadd_n_s8_m
CXXDefaultInitExpr
__OPTIMIZE_SIZE__ predefined macro
CXXDeleteExpr
__builtin_sve_svuqadd_s16_x
CXXDependentScopeMemberExpr
-Xopenmp-target=
CXXFoldExpr
__builtin_sve_svuqadd_s32_z
CXXInheritedCtorInitExpr
-fexperimental-isel
CXXNewExpr
Use filesystem locks for implicit modules builds to avoid duplicating work in competing clang invocations.
CXXNoexceptExpr
Pass <arg> to the target offloading toolchain identified by <triple>.
CXXNullPtrLiteralExpr
q4iq4iq16Ucq16ScIUWi
CXXPseudoDestructorExpr
Controls if doubles should be aligned to 8 bytes (x86 only)
CXXRewrittenBinaryOperator
q4iq4iq16Ucq16Sc
CXXScalarValueInitExpr
-Xopenmp-target
CXXStdInitializerListExpr
__builtin_sve_svuzp1_b64
CXXThisExpr
width of long double
CXXThrowExpr
-fuse-register-sized-bitfield-access
CXXTypeidExpr
Pass <arg> to the target offloading toolchain.
CXXUnresolvedConstructExpr
__builtin_sve_svuzp1_s64
CXXUuidofExpr
__EXTABI__  predefined macro
CallExpr
__builtin_sve_svuzp1_u64
CUDAKernelCallExpr
-Xpreprocessor
CXXMemberCallExpr
__builtin_sve_svuzp1q_f32
CXXOperatorCallExpr
__PIC__ level
UserDefinedLiteral
-fno-modules-decluse
BuiltinBitCastExpr
Pass <arg> to the preprocessor
CStyleCastExpr
__builtin_sve_svuzp1q_u64
CXXFunctionalCastExpr
Read-only position independence
CXXAddrspaceCastExpr
__builtin_sve_svuzp2_b64
CXXConstCastExpr
CXXDynamicCastExpr
__builtin_sve_svuzp2_f32
CXXReinterpretCastExpr
GNU inline semantics
CXXStaticCastExpr
ObjCBridgedCastExpr
ImplicitCastExpr
__builtin_sve_svuzp2_u64
CharacterLiteral
__DEPRECATED predefined macro
ChooseExpr
__builtin_sve_svuzp2q_f32
CompoundLiteralExpr
Do not add %INCLUDE% to include search path
ConceptSpecializationExpr
__builtin_sve_svuzp2q_s64
ConvertVectorExpr
__FINITE_MATH_ONLY__ predefined macro
CoawaitExpr
-fimplicit-modules
CoyieldExpr
DeclRefExpr
__builtin_sve_svwhilege_b16_s64
DependentCoawaitExpr
optimizer honors parentheses when floating-point expressions are evaluated
DependentScopeDeclRefExpr
__builtin_sve_svwhilege_b16_u64
DesignatedInitExpr
Treat subsequent input files as having type <language>
DesignatedInitUpdateExpr
__builtin_sve_svwhilege_b32_u32
ExpressionTraitExpr
width of wchar_t
ExtVectorElementExpr
Compute and store the hash of input files used to build an AST. Files with mismatching mtime's are considered valid if both contents is identical
FirebloomPointerPromotionExpr
<language>
FixedPointLiteral
__builtin_sve_svwhilege_b8_u32
FloatingLiteral
member-pointer representation method
ForgePtrExpr
__builtin_sve_svwhilegt_b16_u32
ConstantExpr
ExprWithCleanups
__builtin_sve_svwhilegt_b32_u32
FunctionParmPackExpr
short enum types
GNUNullExpr
Do not automatically import modules for error recovery
GenericSelectionExpr
Disable precompiled headers, overrides /Yc and /Yu
GetBoundExpr
__builtin_sve_svwhilegt_b8_u32
ImaginaryLiteral
C++ for OpenCL version
ImplicitValueInitExpr
__builtin_sve_svwhilele_b16_u32
InitListExpr
IntegerLiteral
__builtin_sve_svwhilele_b32_u32
LambdaExpr
OpenCL pipes language constructs and built-ins
MSPropertyRefExpr
-fveclib=
MSPropertySubscriptExpr
Generate a pch file for all code up to and including <filename>
MaterializeSequenceExpr
__builtin_sve_svwhilele_b8_u32
MaterializeTemporaryExpr
Native half args and returns
MatrixSubscriptExpr
__builtin_sve_svwhilelt_b16_u32
MemberExpr
NoInitExpr
OMPArraySectionExpr
OMPArrayShapingExpr
-fexperimental-library
-fimplicit-none
Do not automatically generate or update the global module index
OMPIteratorExpr
ObjCAvailabilityCheckExpr
__builtin_sve_svwhilelt_b8_u32
ObjCBoolLiteralExpr
Use TLS for threadprivates or runtime calls
ObjCEncodeExpr
__builtin_sve_svwhilerw_f16
ObjCIndirectCopyRestoreExpr
ObjCIsaExpr
__builtin_sve_svwhilerw_f64
ObjCIvarRefExpr
Generate code for OpenMP pragmas in SIMT/SPMD mode
ObjCMessageExpr
Accelerate,libmvec,MASSV,SVML,Darwin_libsystem_m,none
ObjCArrayLiteral
Load a pch file and use it instead of all code up to and including <filename>
ObjCBoxedExpr
__builtin_sve_svwhilerw_s8
ObjCDictionaryLiteral
Number of SMs for CUDA devices.
ObjCStringLiteral
__builtin_sve_svwhilerw_u32
ObjCPropertyRefExpr
ObjCProtocolExpr
__builtin_sve_svwhilerw_u8
ObjCSelectorExpr
Number of the reduction records in the intermediate reduction buffer used for the teams reductions.
ObjCSubscriptRefExpr
OffsetOfExpr
OpaqueValueExpr
-Z-reserved-lib-cckext
__builtin_sve_svwhilewr_s64
__builtin_sve_svwhilewr_u64
UnresolvedLookupExpr
Use at most 32 bits to represent the collapsed loop nest counter.
UnresolvedMemberExpr
PackExpansionExpr
ParenListExpr
-Z-reserved-lib-stdc++
__builtin_sve_svxar_n_s16
__builtin_sve_svzip1_b16
PredefinedBoundsCheckExpr
Assume distributed loops do not have more iterations than participating teams.
PredefinedExpr
-fvectorize
PseudoObjectExpr
-Z-Xlinker-no-demangle
RecoveryExpr
RequiresExpr
SYCLUniqueStableNameExpr
Assume that no thread in a parallel region will encounter a parallel region
__builtin_sve_svzip1_bf16
__builtin_sve_svzip1_s16
ShuffleVectorExpr
SizeOfPackExpr
SourceLocExpr
StmtExpr
Indicate a build without the standard GPU libraries.
No implicit typing allowed unless overridden by IMPLICIT statements
-fno-modules-search-all
StringLiteral
Enable CodeView debug information in object files
SubstNonTypeTemplateParmExpr
__builtin_sve_svzip1q_bf16
SubstNonTypeTemplateParmPackExpr
compiling for CUDA device
TerminatedByFromIndexableExpr
__builtin_sve_svzip1q_s16
TerminatedByToIndexableExpr
TypeTraitExpr
__builtin_sve_svzip1q_u16
TypoExpr
treating unattributed constexpr functions as __host__ __device__
UnaryExprOrTypeTraitExpr
-fverbose-asm
UnaryOperator
/Zc:__cplusplus
VAArgExpr
__builtin_sve_svzip2_bf16
LabelStmt
generate relocatable device code
WhileStmt
__builtin_sve_svzip2_s16
/Zc:alignedNew-
asm 
__builtin_sve_svzip2_u16
volatile 
default max threads per block for kernel launch bounds for HIP
__asm 
break;
Disable C++17 aligned allocation functions
__builtin_sve_svzip2q_s16
__builtin_sve_svzip2q_u16
#pragma STDC FENV_ACCESS 
always exclude wrong side overloads in overloading resolution for CUDA/HIP
#pragma clang fp exceptions(
/Zc:alignedNew
__builtin_sve_reinterpret_s8_s8
q16Scq16Uc
#pragma STDC FENV_ROUND 
Generate code for SYCL device
<<<NULL STATEMENT>>>
-fverify-debuginfo-preserve-export=
<null expr>
/Zc:auto
try 
continue;
Version of the SYCL standard used
q16Scq4Ui
q16Scq8h
/Zc:char8_t-
while (
__if_exists (
__if_not_exists (
Control whether unstable and experimental library features are enabled. This option enables various library features that are either experimental (also known as TSes), or have been but are not stable yet in the selected Standard Library implementation. It is not recommended to use this option in production code, since neither ABI nor API stability are guaranteed. This is intended to provide a preview of features that will ship in the future for experimentation purposes
-fimplicit-templates
Disable sharing the FileManager when building a module implicitly
#pragma omp atomic
Disable char8_t from c++2a
#pragma omp barrier
q8Ssq16Sc
#pragma omp cancel 
aligned allocation functions are unavailable
#pragma omp cancellation point 
q8Ssq4Si
#pragma omp critical
/Zc:char8_t
#pragma omp depobj
q8Ssq16Uc
#pragma omp dispatch
no constant CoreFoundation strings
#pragma omp flush
-fverify-debuginfo-preserve
#pragma omp interop
Enable char8_t from C++2a
#pragma omp distribute
q8Ssq8h
#pragma omp distribute parallel for
no constant number literals
#pragma omp distribute parallel for simd
q8Ssq4f
#pragma omp distribute simd
/Zc:dllexportInlines-
#pragma omp for
q4Siq16Sc
#pragma omp for simd
no constant dictionary literals
#pragma omp loop
#pragma omp masked taskloop
#pragma omp masked taskloop simd
Do not dllexport/dllimport inline member functions of dllexport/import classes
q4Siq16Uc
q4Siq4Ui
#pragma omp master taskloop
check availability for target variant platform
#pragma omp master taskloop simd
#pragma omp parallel for
#pragma omp parallel for simd
/Zc:dllexportInlines
q4Siq8h
q2SWiq16Sc
#pragma omp parallel loop
treating double-precision floating point constants as single precision constants
#pragma omp parallel masked taskloop
-fvirtual-function-elimination
#pragma omp parallel masked taskloop simd
dllexport/dllimport inline member functions of dllexport/import classes (default)
#pragma omp parallel master taskloop
#pragma omp parallel master taskloop simd
#pragma omp simd
Enable experimental strict floating point
q2SWiq4Si
q2SWiq16Uc
#pragma omp target parallel for simd
/Zc:forScope
#pragma omp target parallel loop
#pragma omp target simd
#pragma omp target teams distribute
hexagon-qdsp6 backward compatibility
-fin-descriptor-block-flags
-fvisibility-dllexport=
#pragma omp target teams distribute parallel for
/Zc:inline
#pragma omp target teams distribute parallel for simd
q2SWiq8h
#pragma omp target teams distribute simd
__weak support in the ARC runtime
#pragma omp target teams loop
q2SWiq4f
#pragma omp taskloop
/Zc:rvalueCast
#pragma omp taskloop simd
q16Ucq16Sc
#pragma omp teams distribute
Ignore ARC-style __weak instead of erroring
#pragma omp teams distribute parallel for
#pragma omp teams distribute parallel for simd
#pragma omp teams distribute simd
/Zc:sizedDealloc-
__builtin_sve_reinterpret_u8_u16
q16Ucq2UWi
#pragma omp teams loop
Disable recognition of objc_direct methods
#pragma omp tile
#pragma omp unroll
#pragma omp masked
Disable C++14 sized global deallocation functions
q16Ucq8y
q8Usq8Ss
#pragma omp master
OpenCL fake address space map
#pragma omp metadirective
-fno-modules
#pragma omp ordered
/Zc:sizedDealloc
#pragma omp parallel
#pragma omp parallel masked
#pragma omp parallel master
Include default header file for OpenCL
q8Usq2SWi
__builtin_sve_reinterpret_u16_u64
#pragma omp parallel sections
/Zc:strictStrings
#pragma omp scan
#pragma omp section
#pragma omp sections
optional blocks runtime
-fvisibility-externs-dllimport=
Treat string literals as const
#pragma omp single
#pragma omp target data
#pragma omp target
__builtin_sve_reinterpret_u16_f64
Objective-C Garbage Collection mode
set the visiblity of globals from their DLL storage class [-fvisibility-from-dllstorageclass]
#pragma omp target enter data
Prefer aligned allocation for C++ Coroutines
#pragma omp target exit data
/Zc:ternary
#pragma omp target parallel
Allow variadic functions in CUDA device code.
#pragma omp target parallel for
-fexperimental-max-bitint-width=
#pragma omp target teams
remap file source paths in coverage mapping
#pragma omp target update
/Zc:threadSafeInit-
#pragma omp task
#pragma omp taskgroup
+vdsp2e60f
#pragma omp taskwait
#pragma omp taskyield
 in 
Disable thread-safe initialization of static variables
#pragma omp teams
@catch (...) { /* todo */ } 
@autoreleasepool
-objcmt-migrate-all
@synchronized (
fatal error: 
/Zc:threadSafeInit
error: 
-constpool
<<unknown expr type>>
note: 
remark: 
In included file:
__finally 
Enable thread-safe initialization of static variables
__leave;
ccrt
__try 
Enable control flow integrity (CFI) checks for cross-DSO calls.
default:
switch (
/Zc:trigraphs-
 ?: 
/Zc:twoPhase-
__builtin_astype(
__c11_atomic_init(
Unsupported diagnostics version
__c11_atomic_load(
Disable trigraphs (default)
__c11_atomic_store(
__c11_atomic_exchange(
-objcmt-migrate-annotation
__c11_atomic_compare_exchange_strong(
Malformed Metadata block
__c11_atomic_compare_exchange_weak(
/Zc:trigraphs
__c11_atomic_fetch_add(
Malformed BlockInfo block
__c11_atomic_fetch_sub(
+3e7
__c11_atomic_fetch_and(
Parse error reading diagnostics
__c11_atomic_fetch_or(
Enable trigraphs
__c11_atomic_fetch_xor(
-fdefault-double-8
__c11_atomic_fetch_nand(
-fsanitize-cfi-icall-generalize-pointers
__c11_atomic_fetch_max(
-finclude-default-header
__c11_atomic_fetch_min(
__atomic_load(
can't skip to bit %zu from %llu
__atomic_load_n(
Inconvertible error value. An error has occurred that could not be converted to a known std::error_code. Please file a bug.
__atomic_store(
Unexpected end of file reading %u of %u bits
Bitcode constructs that are not supported in diagnostics appear
__atomic_store_n(
Disable two-phase name lookup in templates (default)
__atomic_exchange(
-nodefaultlib:vcompd.lib
__atomic_exchange_n(
failed_to_create_uniq_file
__atomic_compare_exchange(
FileName
__atomic_compare_exchange_n(
/Zc:twoPhase
__atomic_fetch_add(
Allocation failed
__atomic_fetch_sub(
 imaginary
__atomic_fetch_and(
DiagInfo
__atomic_fetch_or(
Enable two-phase name lookup in templates
__atomic_fetch_xor(
noexcept 
__atomic_fetch_nand(
Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods
__atomic_add_fetch(
__atomic_sub_fetch(
/Zc:wchar_t-
__atomic_and_fetch(
-defaultlib:libiomp5md.lib
__atomic_or_fetch(
__atomic_xor_fetch(
__atomic_max_fetch(
/Zc:wchar_t
__atomic_min_fetch(
yptn
__atomic_nand_fetch(
-objcmt-migrate-instancetype
__opencl_atomic_init(
__VA_ARGS__
__opencl_atomic_load(
Enable C++ builtin type wchar_t (default)
__opencl_atomic_store(
#define 
__opencl_atomic_exchange(
template parameter object for 
__opencl_atomic_compare_exchange_strong(
__opencl_atomic_compare_exchange_weak(
/Zc:
__opencl_atomic_fetch_add(
typeinfo name for 
__opencl_atomic_fetch_sub(
Set the maximum bitwidth for _BitInt (this option is expected to be removed in the future)
__opencl_atomic_fetch_and(
Include default header file for OpenCL and HLSL
__opencl_atomic_fetch_or(
__opencl_atomic_fetch_xor(
__opencl_atomic_fetch_min(
-objcmt-migrate-literals
__opencl_atomic_fetch_max(
warning
__atomic_fetch_min(
__atomic_fetch_max(
+mabi=n64
__hip_atomic_load(
Invalid JSON value (true?)
__hip_atomic_store(
<string>
__hip_atomic_compare_exchange_weak(
/ZH:MD5
__hip_atomic_compare_exchange_strong(
V16xV16xV16xUs
__hip_atomic_exchange(
Control character in string
__hip_atomic_fetch_add(
Emit Windows EH Continuation Guard tables
__hip_atomic_fetch_and(
Use MD5 for file checksums in debug info (default)
__hip_atomic_fetch_or(
fatal error
__hip_atomic_fetch_xor(
failed to get host id
__hip_atomic_fetch_min(
</dict>
__hip_atomic_fetch_max(
/ZH:SHA1
delete 
-INF
Define <macro> to <value> (or 1 if <value> omitted)
<forwarded>
Use SHA1 for file checksums in debug info
throw 
Include
__uuidof(
+experimental-
-dynamiclib
>>>(
/ZH:SHA_256
-0123456789
first letter should be 'e', 'i' or 'g'
__builtin_bit_cast(
__builtin_choose_expr(
--dyld-prefix
__builtin_convertvector(
Use SHA256 for file checksums in debug info
co_await 
-dwarf-version=
co_yield 
Enable migration to NS_ENUM/NS_OPTIONS macros
/*base*/
-dylinker
/*updater*/
  <array>
zdinx
-dwarf-debug-producer
-objcmt-migrate-property-dot-syntax
d requires f extension to also be specified
Like /Z7
  <key>dwarf-debug-flags</key>
  <key>diagnostics</key>
&amp;
&gt;
ilp32
Lex file in raw mode and dump raw tokens
-Zlinker-input
__builtin_unsafe_forge_bidi_indexable(
winrt
__builtin_unsafe_forge_terminated_by(
Restrict sanitizer coverage instrumentation exclusively to modules and functions that match the provided special case list, except the blocked ones
__builtin_unsafe_forge_single(
-dumpmachine
__null
_Generic(
-dwarf-ext-refs
__builtin_get_pointer_
zknd
lower
Directory to output dSYM's (if any) to
upper
Do not let object file auto-link default libraries
_bound(
Set the driver mode to either 'gcc', 'g++', 'cpp', or 'cl'
-objcmt-migrate-property
/*implicit*/(
zksh
/Root/
zvl512b
zicbop
/Zo-
Ui16
 [[gnu::destructor
-fexperimental-new-constant-interpreter
-fno-exceptions
*this
ObjCNonLazyClass
 mutable
Failed to parse minor version number for extension '
/*no init*/
-disable-objc-default-synthesize-properties
iterator(
@available(...)
-disable-O0-optnone
@encode(
-ffriend-injection
->isa
.isa
Set default maximum struct packing alignment to 1
Super
-fno-diagnostics-show-note-include-stack
instancesize
-disable-lifetime-markers
Set default maximum struct packing alignment
super.
-cv:
@protocol(
@selector(
Use together with -emit-llvm to get pristine LLVM IR from the frontend by not running any LLVM passes at all
__builtin_offsetof(
<recovery-expr>(
internal
requires 
error parsing file '
/diagnostics:column
<<error-expression>>
__builtin_sycl_unique_stable_name(
-lrtemscpu
__builtin_shufflevector(
latexonly
sizeof...(
__builtin_unsafe_terminated_by_from_indexable(
__builtin_unsafe_terminated_by_to_indexable
Filename (or -) to log diagnostics to
__builtin_terminated_by_to_indexable
__alignof
-detailed-preprocessing-record
__builtin_va_arg(
(no value)
Filename (or -) to write dependency output to
(signed char)
Invalid kind, expected 'name', 'type', or 'encoding', found '
(unsigned char)
-finit-integer=
(null template argument)
Pass -z <arg> to the linker
/link
<<<NULL>>>
generic
AnnotateType
Define a value for a symbol
ArmMveStrictPolymorphism
ArmNewZA
--define-macro
ArmPreservesZA
sifive-e24
ArmSharedZA
rocket-rv32
ArmStreaming
ArmStreamingCompatible
sifive-s21
CmseNSCall
sifive-u54
NoDeref
-debugger-tuning=
ObjCGC
ObjCInertUnsafeUnretained
Emit macro debug information
ObjCKindOf
Enable migration to modern ObjC readwrite property
OpenCLConstantAddressSpace
-default-function-attr
OpenCLGenericAddressSpace
 env
OpenCLGlobalAddressSpace
hainan
OpenCLGlobalDeviceAddressSpace
gfx701
OpenCLGlobalHostAddressSpace
Print macro definitions in -E mode in addition to normal output
OpenCLLocalAddressSpace
-ivfsoverlay
OpenCLPrivateAddressSpace
PointerAuth
-objcmt-migrate-subscripting
Ptr32
kabini
Ptr64
repro-modules
PtrAutoAttr
iceland
PtrAutoNullTerminatedAttr
polaris10
SPtr
-darwin-target-variant-sdk-version=
TypeNonNull
index-store
TypeNullUnspecified
/d2Zi+
TypeNullable
Enable the experimental new constant interpreter
TypeNullableResult
/../include/c++/v1
UPtr
 Arguments passed via response file:
XnuUsageSemantics
<action group>
FallThrough
gfx1011
Likely
Compile only
MustTail
 (end of response file)
OpenCLUnrollHint
Only run preprocess, compile, and assemble steps
Suppress
-objcmt-ns-nonatomic-iosonly
Unlikely
gfx1031
AlwaysInline
 (in-process)
AnalyzerSuppress
addtogroup
NoInline
rv635
NoMerge
Add directory to the C++ SYSTEM include search path
AArch64SVEPcs
AArch64VectorPcs
elf_i386_nacl
AMDGPUKernelCall
Enable sanitizer coverage for indirect calls
AcquireHandle
AnyX86NoCfCheck
-serialize-diagnostic-file
CDecl
refitem
FastCall
redwood
IntelOclBicc
--cuda-path-ignore-env
LifetimeBound
-fdebug-compilation-dir
MSABI
--cuda-noopt-device-debug
ObjCOwnership
Ignore #line directives when displaying diagnostic locations
Pascal
caicos
-include
PreserveAll
api-extractor
PreserveMost
  Total Execution Time: %5.4f seconds (%5.4f wall clock)
RegCall
Manually specify the CUDA feature to use
StdCall
-idirafter
SwiftAsyncCall
float1e2
SwiftCall
Total
SysVABI
Native Client
ThisCall
-internal-isystem
VectorCall
mingw32
SwiftAsyncContext
.mem
SwiftContext
-cpp-precomp
SwiftErrorResult
SwiftIndirectResult
-fno-devirtualize
Annotate
-objcmt-white-list-dir-path=
CFConsumed
Emit coverage notes to this filename.
CarriesDependency
-internal-externc-isystem
NSConsumed
precompiler
clang-offload-unbundler
NonNull
amdil
OSConsumed
-coverage-data-file
PassObjectSize
-iprefix
ReleaseHandle
i686-nacl/usr/lib
UseHandle
-objcmt-whitelist-dir-path=
HLSLSV_GroupIndex
-coverage-notes-file
AMDGPUFlatWorkGroupSize
-iwithprefixbefore
AMDGPUNumSGPR
AMDGPUNumVGPR
loongarch32
AMDGPUWavesPerEU
--config-user-dir=
ARMInterrupt
AVRInterrupt
AVRSignal
Alias for -objcmt-allowlist-dir-path
AcquireCapability
mips64el
AcquiredAfter
AcquiredBefore
static-lib-linker
AlignMac68k
renderscript64
AlignNatural
Dump the compiler configuration options
Aligned
AllocAlign
-fdivdu
AllocSize
-fexperimental-new-pass-manager
AlwaysDestroy
x86_64-nacl/usr/lib
AnalyzerNoReturn
AnyX86Interrupt
AnyX86NoCallerSavedRegisters
ObjCDirectMembers
ArcWeakrefUnavailable
pointer-subtract
ArgumentWithTypeTag
ArmBuiltinAlias
Include macros in code-completion results
ArmLocallyStreaming
Add directory to the ObjC++ SYSTEM include search path
Artificial
x86_64
AsmLabel
depscan
AssertCapability
AssertExclusiveLock
AssertSharedLock
-code-completion-at
AssumeAligned
preprocessor
BPFPreserveAccessIndex
arm-nacl/bin
Blocks
Enable inline bool flag in sanitizer coverage
C11NoReturn
-code-completion-brief-comments
CFAuditedTransfer
precompiler
CFGuard
-defaultlib:libcmt
CFICanonicalJumpTable
hurd
CFUnknownTransfer
--classpath=
CPUDispatch
compiler
CPUSpecific
Pass <arg> to the clang driver
CUDAConstant
Treat source input files as Objective-C inputs
CUDADevice
CUDADeviceBuiltinSurfaceType
backend
CUDADeviceBuiltinTextureType
depscan
CUDAGlobal
tvos
CUDAHost
OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel
CUDAInvalidTarget
assembler
CUDALaunchBounds
OpenCL only. This option is added for compatibility with OpenCL 1.0.
CUDAShared
Disallow alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:'
CXX11NoReturn
i686-nacl/usr/include
CallableWhen
linker
Callback
clang-offload-packager
Capability
gnuabi64
CapturedRecord
-cl-single-precision-constant
Cleanup
ifsmerger
CmseNSEntry
-cl-opt-disable
CodeSeg
Set the output <file> for debug infos
Cold
gnux32
Common
-fsanitize-trap=undefined
Const
/subsystem:console
ConstInit
geometry
Constructor
-cl-mad-enable
Consumable
-fsanitize=function
ConsumableAutoCast
mipsel-nacl/usr/include
ConsumableSetOnRead
Disable coverage pruning (i.e. instrument all blocks/edges)
Convergent
OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
DLLExport
-mcmodel=small
DLLExportStaticLocal
ck810ftv
DLLImport
mipsr6
DLLImportStaticLocal
-cl-fast-relaxed-math
DependerDecls
-fsanitize=cfi-mfcall
Deprecated
-cl-ext=
Destructor
-object
DiagnoseAsBuiltin
arm1176jzf-s
DiagnoseIf
-fsanitize=vptr
DisableSanitizerInstrumentation
bind-arch
DisableTailCalls
EmptyBases
/cgthreads
EnableIf
-flto
EnforceTCB
-cfguard
EnforceTCBLeaf
-fexperimental-optimized-argument-temporaries
Error
NaCl::Linker
ExcludeFromExplicitInstantiation
-ffixed-x18
ExclusiveTrylockFunction
no_extra_discrimination
ExternalSourceSymbol
spirv32v1.5
Final
Flatten
-fno-sanitize-trap=
Format
atlmfc
FormatArg
Set Fuchsia API level
FunctionReturnThunks
spirv64v1.3
GNUInline
sync
GuardedBy
author
GuardedVar
HIPManaged
Simulate installation in the given directory
HLSLNumThreads
-fsanitize-memtag-mode=
HLSLResource
armelf_nbsd
HLSLResourceBinding
HLSLShader
-ccc-print-bindings
{async, sync}
IBOutletCollection
ck810etv
InitPriority
InternalLinkage
section
LTOVisibilityPublic
-fsanitize=kcfi
LayoutVersion
Apply modifications to files to conform to ARC
Leaf
--offload-arch=
LockReturned
LocksExcluded
fsanitize-minimal-runtime
M68kInterrupt
MIGServerRoutine
MSAllocator
-fallow-editor-placeholders
MSInheritance
fsanitize-trap=cfi
MSNoVTable
hwdiv
MSP430Interrupt
=/usr/lib/oabi
MSStruct
 File 
MSVtorDisp
-fsanitize-coverage=trace-pc-guard
MaxFieldAlignment
preprocessor
MayAlias
 (UseExternalName: true)
MaybeUndef
-Wno-c99-designator
MicroMips
-fsanitize-coverage=func
MinSize
N must be a power of two. Align loops to the boundary
MinVectorWidth
--offload-device-only
Mips16
RealFileSystem using 
MipsInterrupt
-fsanitize-coverage=bb
MipsLongCall
retval
MipsShortCall
version mismatch, expected 0
NSConsumesSelf
-falign-functions
NSReturnsAutoreleased
-fsanitize-coverage=edge
Naked
OverlayFileSystem
NoAlias
Enable max stack depth tracing
NoCommon
-falign-labels=
NoDebug
-fsanitize-coverage=trace-bb
NoDestroy
 _-ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789PER BODY TILTING FROM HIP JOINTS BETWEEN MIDDLE AND RING FINGERSFACE WITH SYMBOLS COVERING MOUTHLE-LINE EQUAL ABOVE GREATER-THANLE COMMA QUOTATION MARK ORNAMENTLAR SIGN WITH OVERLAID BACKSLASH BAR AT END OF HORIZONTAL STROKEWNWARDS ARROW WITH TIP LEFTWARDSLAGAB TIMES U OVER LAGAB TIMES UWO DOTS ABOVE AND TWO DOTS BELOWAND LEFTWARDS OPEN CIRCLE ARROWSFT-POINTING ANGLE QUOTATION MARKWO DOTS OVER ONE DOT PUNCTUATIONUPPER AND LOWER ONE EIGHTH BLOCKTRIANGLE-HEADED RIGHTWARDS ARROWAND MIDDLE RIGHT TO LOWER CENTRE SHADOWED WHITE RIGHTWARDS ARROWLOWER LEFT CURLY BRACKET SECTIONROFLEX CLICK WITH RETROFLEX HOOKL ARABIC LETTER TAH AND TWO DOTSRONG CENTRALIZATION STROKE BELOWOWNWARDS HARPOON WITH BARB RIGHTOWER RIGHT CURLY BRACKET SECTIONGREATER-THAN ABOVE SLANTED EQUALTOP HALF DIVIDED BY VERTICAL BARAISING BOTH HANDS IN CELEBRATION DOWNWARDS EQUILATERAL ARROWHEADUG2 OVER TUG2 TUG2 OVER TUG2 PAP DOWNWARDS TRIANGLE-HEADED ARROWLL BUT UPPER LEFT QUADRANT BLACKEN ARM ENDING IN ARROW POINTING DIFIER LETTER LABIALIZATION MARKDIC KASHMIRI INDEPENDENT SVARITARIGHT SEMICIRCLE WITH THREE DOTS CONTAINING SMALL WHITE TRIANGLE HORIZONTAL STROKES TO THE RIGHTER ARROWS CIRCLING ANTICLOCKWISEER IGI SHIR OVER SHIR UD OVER UDRONT-TILTED SHADOWED WHITE ARROWER TAB NI OVER NI DISH OVER DISHDED HIGH STOP WITH FILLED CENTRELEFTWARDS HARPOON WITH BARB DOWN KORANIC STOP SIGN ISOLATED FORMESS-THAN ABOVE DOUBLE-LINE EQUAL LEFTWARDS TRIANGLE-HEADED ARROW LETTER BYELORUSSIAN-UKRAINIAN IETALLED BLACK AND WHITE FLORETTE LOWER HALF INVERSE MEDIUM SHADERIGHTWARDS TRIANGLE-HEADED ARROWD ARROW WITH TRIANGLE ARROWHEADSHT-POINTING ANGLE QUOTATION MARKED ARABIC-INDIC DIGIT FOUR ABOVETER-THAN ABOVE DOUBLE-LINE EQUALNORMAL FACTOR SEMIDIRECT PRODUCTTICAL BAR DOUBLE RIGHT TURNSTILEE SQUARED LATIN CAPITAL LETTER PIRECT PRODUCT WITH BOTTOM CLOSEDROXIMATELY NOR ACTUALLY EQUAL TOIGHTWARDS HARPOON WITH BARB DOWNATHARVAVEDIC INDEPENDENT SVARITARIANGLE-HEADED OPEN CIRCLE ARROWINTING DOWNWARDS THEN NORTH EASTED ARABIC-INDIC DIGIT FOUR BELOWHUR KAZAKH KIRGHIZ ALEF MAKSURA THIRD WHITE RIGHT POINTING INDEXVED STEM PARAGRAPH SIGN ORNAMENTS VERTICALLY BELOW AND SMALL TAHIDE AND JOINED WITH INTERSECTIONE CONTAINING BLACK SMALL LOZENGEOF UPWARDS TRIANGLE-HEADED ARROWE-POINTED BLACK RIGHTWARDS ARROWE TO MIDDLE LEFT TO LOWER CENTRE-SHADOWED WHITE RIGHTWARDS ARROW-POINTING ANGLE BRACKET ORNAMENTSEMICIRCULAR ANTICLOCKWISE ARROWH HAMZA ABOVE WITH ALEF MAKSURA H HORIZONTAL MIDDLE BLACK STRIPEMARK WITH LEFT RIGHT ARROW ABOVESWIRL BIRGA WITH DOUBLE ORNAMENTH SUPERSCRIPT ALEF ISOLATED FORMTOM-LIGHTED RIGHTWARDS ARROWHEADVE LESS-THAN ABOVE SLANTED EQUALS AND UPWARDS OPEN CIRCLE ARROWS TORTOISE SHELL BRACKET ORNAMENT TRIANGULAR THREE QUARTERS BLOCKHAND WITH MIDDLE FINGER EXTENDEDEDIUM SHADE AND RIGHT HALF BLOCKM LEFT MEMBER OF DOUBLE VERTICALTION SIGN WITH CIRCUMFLEX ACCENTEDIUM SHADE AND LOWER HALF BLOCKARDROP-SPOKED PROPELLER ASTERISKARDS ARROW ABOVE LEFTWARDS ARROWED UPWARDS EQUILATERAL ARROWHEADARDS HARPOON WITH BARB DOWNWARDSTIMES ASH2 KU OVER HI TIMES ASH2OUBLE-LINE EQUAL ABOVE LESS-THANED COMMA QUOTATION MARK ORNAMENTONE HUNDRED THIRTY-FIVE DEGREESAISED HAND WITH FINGERS SPLAYEDLEFTWARDS EQUILATERAL ARROWHEADETALLED OUTLINED BLACK FLORETTERIGHTWARDS HARPOON WITH BARB UPRING OVER TWO RINGS PUNCTUATIONRINGS OVER ONE RING PUNCTUATIONAND MIDDLE LEFT TO LOWER CENTRETNAMESE ALTERNATE READING MARK UPWARDS HARPOON WITH BARB RIGHTIN WHITE CIRCLE IN BLACK SQUAREACK-TILTED SHADOWED WHITE ARROW CROSSING ASH OVER ASH OVER ASHINDEX THUMB CURVE THUMB INSIDEHT CENTRALIZATION STROKE BELOWDOWNWARDS AND RIGHTWARDS ARROW-HIRAGANA PROLONGED SOUND MARKAGGRAVATED INDEPENDENT SVARITAGREATER-THAN ABOVE EQUALS SIGNGHT FOUR POINTED PINWHEEL STARDOT BELOW AND THREE DOTS ABOVEEFT SEMICIRCLE WITH THREE DOTSOPEN CENTRE EIGHT POINTED STARAND JOINED BY DASH WITH SUBSETMODIFIER LETTER LEFT HALF RINGMINTON RACQUET AND SHUTTLECOCKQAF WITH LAM WITH ALEF MAKSURAMAKSURA WITH SUPERSCRIPT ALEF DIVIDED BY HORIZONTAL BAR AND HIGH-REVERSED-9 QUOTATION MARKSAD WITH LAM WITH ALEF MAKSURAEART EXCLAMATION MARK ORNAMENTON WITH RIGHTWARDS ARROW ABOVEDOWN HEAVY AND RIGHT UP LIGHTONAL INDICATOR SYMBOL LETTER DOT OVER TWO DOTS PUNCTUATION WITH REVERSED NEGATION SLASHDOWN MIDDLE THUMB INDEX CROSS DOWN INDEX THUMB HOOK MIDDLENS-SERIF INTERROBANG ORNAMENTCKED FACE WITH EXPLODING HEADEFTWARDS HARPOON WITH BARB UPOMBINING ANUSVARA ABOVE RIGHTCONTAINING BLACK SMALL CIRCLEUP HEAVY AND RIGHT DOWN LIGHT OVER RIGHTWARDS ARROW TO BARWITH RIGHTWARDS ARROW AT LEFTPUNCTUATION CHINOOK FULL STOPEXTENDED ARABIC-INDIC DIGIT TEVERSED LUNATE EPSILON SYMBOLSUPERSCRIPT ALEF INITIAL FORMSEMICIRCULAR PATH AROUND POLELIGHT FOUR POINTED BLACK CUSPEFT ARC GREATER-THAN BRACKETACE DIRECTION POSITION NOSE DOWN HEAVY AND LEFT UP LIGHTFTING POINT RIGHTWARDS ARROWEDGE-TAILED RIGHTWARDS ARROWLEFTWARDS OF DOWNWARDS ARROWUPPER CENTRE TO MIDDLE RIGHTDOUBLE ANUSVARA ANTARGOMUKHASALTIRE WITH ROUNDED CORNERSBESIDE AND JOINED WITH UNIONMONOGRAMMOS TESSERA DODEKATAUP HEAVY AND LEFT DOWN LIGHTLIQUID MEASURE FIRST SUBUNITHREE HUNDRED FIFTEEN DEGREESHADED WHITE RIGHTWARDS ARROWOUND-TIPPED RIGHTWARDS ARROWU ALAYHI WAAALIHEE WA-SALLAMASTERISKS ALIGNED VERTICALLYT LITTER IN ITS PLACE SYMBOLISMILLAH AR-RAHMAN AR-RAHEEMRECTANGULAR PATH AROUND POLEIBE SYLLABLE BOUNDARY MARKERMIDDLE RING LITTLE CONJOINEDUPWARDS AND RIGHTWARDS ARROWBRDA RNYING YIG MGO MDUN MAPPY PERSON RAISING ONE HANDBRDA RNYING YIG MGO SGAB MAFINGER COVERING CLOSED LIPSOUR BALLOON-SPOKED ASTERISKHEAD MARK WITH MOON AND SUNTALIC LATIN CAPITAL LETTER ZERO FOR ODD POWERS OF FOURCONTINUOUS UNDERLINE SYMBOL AND LEFT SEMICIRCLE ARROWSLOWER MIDDLE LEFT TO LOWER STRUMENTAL NOTATION SYMBOL-KATHAKA INDEPENDENT SVARITARIGHT ARC LESS-THAN BRACKETIDE ARC ANTICLOCKWISE ARROWCIRCLE WITH NORTHWEST ARROWIDE-HEADED RIGHTWARDS ARROWLOWER TONAL RANGE INDICATORBETWEEN TWO HORIZONTAL BARSEAVY WHITE RIGHTWARDS ARROWRIPLE VERTICAL BAR OPERATORPHARYNGEAL VOICED FRICATIVEWO DOTS BELOW AND DOT ABOVEFOUR FINGERS CONJOINED BENT-FEATHERED RIGHTWARDS ARROW BARREE WITH TWO DOTS BELOWHANDED INTERLACED PENTAGRAMLARGE EQUILATERAL ARROWHEADUPPER MIDDLE LEFT TO UPPER LIGHT CENTRALIZATION STROKEDOUBLE PRIME QUOTATION MARKDOUBLE ANGLE QUOTATION MARKTWO HUNDRED SEVENTY DEGREESWALLPLANE SHOULDER HIP MOVELESS-THAN ABOVE EQUALS SIGNEMICIRCULAR CLOCKWISE ARROW DIVIDED BY HORIZONTAL RULERIANGULAR ONE QUARTER BLOCKIMPERFECTUM CUM PROLATIONE ONE LARGE AND ONE SMALL EYEENTATION FORM FOR VERTICAL CRIPT LIGATURE ET ORNAMENTU REVERSED OVER U REVERSEDMEEM WITH HAH WITH TATWEELCAT FACE WITH SMILING EYESOORPLANE SHOULDER HIP MOVELINE FEED SEPARATOR SYMBOLMARRIED PARTNERSHIP SYMBOLUNEVEN EYES AND WAVY MOUTHRIGHT PARENTHESIS ORNAMENTMODIFIER FITZPATRICK TYPE-LLALLAHOU ALAYHE WASSALLAMRIPLE DOT PUNCTUATION MARKDROP-SHADOWED WHITE SQUARETHREE DOTS ABOVE DOWNWARDS OR APPROXIMATELY EQUAL TOSSIAN ASTROLOGICAL SYMBOL AND MIDDLE FINGERS CROSSEDCLOCKWISE ARROW WITH MINUSE ONE-WAY LEFT WAY TRAFFICIDEOGRAPHIC ITERATION MARKAND RIGHT ONE EIGHTH BLOCKLEFTWARDS OF UPWARDS ARROWJECT REPLACEMENT CHARACTERLANTED SOUTH ARROW WITH HOERSTRASS ELLIPTIC FUNCTIONDOTTED SUBSTITUTION MARKERBLE TENNIS PADDLE AND BALLALEF MAKSURA ISOLATED FORM GAD OVER GAD GAR OVER GARHTORA SKLIRON CHROMA VASISDOTTED LUNATE SIGMA SYMBOL LESS THAN THE DENOMINATORWITH LEFTWARDS ARROW ABOVEINDUSTRIAL STANDARD SYMBOLOCKED FEMALE AND MALE SIGN NEGATED WITH VERTICAL BARORTHOGONAL CROSSHATCH FILLONOMICAL SYMBOL FOR URANUSOTATED FLORAL HEART BULLETYAJURVEDIC MIDLINE SVARITA WITHIN TRIANGLE ARROWHEADSTROKE AND TWO DOTS ABOVETTED SUBSTITUTION BRACKETLEFTWARDS ARROW WITH HOOKRIGHT DIAGONAL HALF BLACKTAB OVER TAB GAR OVER GARDOUBLE CANDRABINDU VIRAMABUT NOT ACTUALLY EQUAL TODIAERESIS AND HOOK SYMBOLOLD ASSYRIAN WORD DIVIDERELD HOCKEY STICK AND BALLINVERTED EXCLAMATION MARKMULTIPLICATION SIGN BELOWLEFT PARENTHESIS ORNAMENTTERNION INTEGRAL OPERATORLOW QUILT SQUARE ORNAMENTBREVE WITH INVERTED BREVERIST CIRCLE HITTING WALL REE-HUNDRED-AND-TWENTIETHFECTIVENESS OR DISTORTION WITH DOUBLE VERTICAL BAR WITH DOUBLE GRAVE ACCENTMBINING CRYPTOGRAMMIC DOTCROSSING NORTH EAST ARROW OVER NUN LAGAR TIMES SALMEDIUM TRIANGLE ARROWHEADCAT FACE WITH CLOSED EYESOUTLINED RIGHTWARDS ARROWRANCH BANK IDENTIFICATION WITH CIRCLED ONE OVERLAYOUBLE BIRGA WITH ORNAMENTING ON THE FLOOR LAUGHINGDRY MEASURE FIRST SUBUNITONE UNDER EIGHTEEN SYMBOLNIVERSAL RECYCLING SYMBOLFFICULTY AT THE BEGINNING WITH DOUBLE MIDDLE TILDERIPLE BIRGA WITH ORNAMENTWELVE POINTED BLACK STARORIZONTAL BAR WITH NOTCHUPWARD POINTING TRIANGLEGLOTTAL STOP WITH STROKEWITH CANCELLATION STROKET BLACK RIGHTWARDS ARROWEQUAL TO OR GREATER-THANTED INTERPOLATION MARKERMALL CIRCLE TO THE RIGHTUPRIGHT RECTANGULAR ZEROHEAVY BLACK HEART BULLETDESCENDING MUSICAL NOTESARM CIRCLE HITTING WALL REVERSED NINE-LIKE BHALESMALL ARABIC LETTER TAH ISOSCELES RIGHT TRIANGLESYLLABLE REPETITION MARKBLIC ADDRESS LOUDSPEAKERTEARDROP-SPOKED ASTERISKARROW POINTING DIRECTLY OTTOM-SHADED WHITE ARROWGREATER-THAN OR EQUAL TOLICATION PROGRAM COMMANDOTTOM SHADED WHITE ARROWBUSINESS SUIT LEVITATINGDIAGONAL CROSSHATCH FILLDOWNSCALING FACTOR KIIZHBLACK LENTICULAR BRACKETSTROKE THROUGH DESCENDERINTERSECTION WITH SERIFSLINE HORIZONTAL ELLIPSISSINGLE-LINE NOT EQUAL TOPERSCRIPT ALEF MOKHASSASBERKANAN BEORC BJARKAN BING FACE WITH OPEN MOUTHWITH UPWARDS ARROW ABOVECOMPATIBILITY IDEOGRAPH- OVER TOP SQUARE BRACKETPOINTING DOWNWARDS ABOVEAND MALE AND FEMALE SIGNWO DOTS VERTICALLY ABOVE POINTING BACKHAND INDEXEYES AND HAND OVER MOUTHLY-RECYCLED PAPER SYMBOLCULINE ORDINAL INDICATORIGATURE OPEN ET ORNAMENTCONSECUTIVE EQUALS SIGNSDOUBLE HORIZONTAL STROKERIGHTWARDS THEN CURVING LARGE TRIANGLE ARROWHEADALTERNATE SECTION MARKERFINGER AND THUMB CROSSEDE PLUS A PLUS SU PLUS NAMTAVRULI CAPITAL LETTER ONE-HUNDRED-AND-SIXTIETHVOICED LARYNGEAL SPIRANTLEFT DIAGONAL HALF BLACKORAH WITH NINE BRANCHESPUNCTUATION END OF TEXTRIGHT DIAGONAL ELLIPSISIVE FINGERS SPREAD OPENGREEK SMALL LETTER IOTAWESTERN PWO KAREN TONE-RIGHT HORIZONTAL SECANTRIGHT-POINTING TRIANGLEISTED RIGHTWARDS ARROWSOVERLAPPING LOGICAL ANDOVER RIGHTWARDS HARPOON WITH HALF-CIRCLE BELOWIGHT-SHADED WHITE ARROWMITIAN CONJUGATE MATRIXRTOISE SHELL BRACKETED HREE POINTED BLACK STARSOLIDUS BINARY RELATIONHANKED RIGHTWARDS ARROWININE ORDINAL INDICATORLSCHREIBER PAUSE SYMBOLUBLE VERTICAL BAR BELOWAVOURING DELICIOUS FOODORIGINAL OF OR EQUAL TOBARBED RIGHTWARDS ARROWLEFT-SHADED WHITE ARROWDOWNWARDS THEN CURVING HT TRIFOLIATE SNOWFLAKERAISED OMISSION BRACKETARABIC LETTER TAH ABOVEESS OUTLINED WHITE STARCURRENT SYMBOL FORM TWOCLUSTER-INITIAL LETTER PA OVER PA GAR OVER GAR ROTATED NINETY DEGREESANG DEPARTING TONE MARKWO-WAY LEFT WAY TRAFFICUP SPREAD THUMB FORWARDZANTINE MUSICAL SYMBOL  CAKE WITH SWIRL DESIGN HUNDRED TWENTY-EIGHTH ASCENDING MUSICAL NOTESIDE ARC CLOCKWISE ARROW POINTING AT THE VIEWERAND WOMAN HOLDING HANDSSING DIAGONAL CROSSING CIRCUMFLEX ACCENT ABOVEREE VARIATION SELECTOR ARTY HORN AND PARTY HATDOT BELOW AND DOT ABOVEWHITE FOUR POINTED CUSPALEF MAKSURA FINAL FORMUPWARDS THEN NORTH WESTATTACHING VERTICAL OMETALGAMATION OR COPRODUCTVERTICAL BISECTING LINEP WITH EXCLAMATION MARKSHAPE WITH A DOT INSIDEWITH HORIZONTAL STROKEDOMAIN ANTIRESTRICTIONLONG HORIZONTAL STROKERECTILINEAR BLACK STARSHORT VERTICAL STROKESINVERTED SMALL V ABOVE WITH DECORATIVE COVERQUESTION MARK ORNAMENTLE BESIDE VERTICAL BARYIAKENG PUACHUE HMONG TWO HORIZONTAL STROKESINVERTED SMALL V BELOWNOT INCLUDING THE POLEUBSCRIPT SMALL LETTER ARMENIAN ETERNITY SIGNDOUBLE-LINED HEAD MARKDOUBLE VERTICAL STROKELEFT TRIANGLE OPERATORING HEAD IN SILHOUETTEPUNCTUATION KUNDDALIYAROUND A POINT OPERATOR WITH THREE DOTS ABOVEHORT HORIZONTAL STROKEWASALLAM ISOLATED FORMDOUBLE SOLIDUS OVERLAYCURLY BRACKET ORNAMENT WITH SINGLE ZAPYATAYAWITH JEEM INITIAL FORMHEXIFORM LONG ANUSVARAEAST-POINTING AIRPLANEIN DEPARTING TONE MARKUIGHUR KIRGHIZ YEH WITGREATER-THAN DIAERESISLOW PARAPHRASE BRACKETND RECORDING COPYRIGHTKEEPING STILL MOUNTAINCONSONANT SIGN MEDIAL CONSONANT MODIFIER BAR SYMBOL FOR LIGHTHOUSETRIPLE RIGHT TURNSTILEDOWN-POINTING TRIANGLE-ROTATED DIVISION SIGNUSTOMER ACCOUNT NUMBERI YFESIS TETARTIMORIONTRIPLE VERTICAL STROKEUPPER RIGHT AND LOWER REE-CIRCLE ALTERNATE ICJK UNIFIED IDEOGRAPH-RROW WITH ROUNDED HEADRIGHT-POINTING FLEURONREASE FONT SIZE SYMBOL OVER STAMPED ENVELOPEDRESSED TO THE SUBJECTSEMI-VOICED SOUND MARKMNYAM YIG GI MGO RGYANPRECEDED BY APOSTROPHEIGEL LONG-BRANCH-SOL S WITH CIRCUMFLEX ABOVESYMPTOTICALLY EQUAL TOINDIRECT QUESTION MARKDOWNWARDS ZIGZAG ARROW RIGHT ARROWHEAD ABOVEACKSLANTED SOUTH ARROWLATIN CAPITAL LETTER SWITH VOICED SOUND MARKSHORT RIGHTWARDS ARROWPERSET OF NOR EQUAL TOPOINTING UPWARDS BELOWBAR ABOVE INTERSECTIONOVER LEFTWARDS HARPOONOVER NU11 BUR OVER BUROVER SHIR BUR OVER BURUPPER ONE EIGHTH BLOCKMALE WITH STROKE SIGNBESIDE RIGHT TRIANGLETEEN POINTED ASTERISKINVERTED BRIDGE BELOWRELICT HOUSE BUILDINGOP SHADED WHITE ARROWOHAMMAD ISOLATED FORMHOUSAND MILLIONS SIGNINTERSECTION OPERATOROCAL NOTATION SYMBOL--SHAPED BAG DELIMITER-ROUND NOTEHEAD DOWN BOTTOM U-SHAPED ARROWTHICK LETTER SELECTORHORIZONTAL TABULATIONINTERSECTING LOGICAL YIG MGO TSHEG SHAD MAREVERSED FEATHER MARKOPPOSING AN PLUS NAGAMORPHOLOGICAL DIVIDERALLING DIAGONAL SLASHSIDE TO SIDE SCISSORSCTOR OR CROSS PRODUCTFINAL CONSONANT SIGN CRUCIFORM NUMBER FOURCROSSE STICK AND BALLVOICED ITERATION MARKLATTENED OPEN A ABOVEFLATTENED PARENTHESISSHORT LEFTWARDS ARROWRISING DIAGONAL SLASHTRIANGULAR HALF BLOCKDOWN HORIZONTAL HEAVYDOWN HORIZONTAL LIGHTAND VOWEL LENGTH MARKWO-CIRCLE ALTERNATE IPAP PLUS PAP PLUS LU3WO-CIRCLE NUKTA ABOVELESS-THAN OR EQUAL TOEIGHT SPOKED ASTERISKELATIONAL COMPOSITIONACUTE AND HOOK SYMBOLRATING SYSTEM COMMANDDIGRAMMOS EX DODEKATAEFT-POINTING TRIANGLELETTER SMALL CAPITAL EQUAL TO OR LESS-THANER RIGHT CORNER ANGLEINVERTED GLOTTAL STOPDELIMITER TSHEG BSTARAKIA TELOUS ICHIMATOSDOUBLE LEFT TURNSTILEEFT OPEN BOX OPERATORMIDDLE RING LITTLE ONQUADRANT CIRCULAR ARCEFT HORIZONTAL SECANTWITH INVERTED V ABOVEABOVE SHORT DOWN TACK AND SLANTED PARALLELDOWNWARDS ARROW ABOVEVERTICAL LINE OVERLAYXTRA SHORT VOWEL MARKBUT NOT EQUIVALENT TOGRUENT WITH DOT ABOVESH AMPERSAND ORNAMENTARYSTIAN FIVE HUNDREDND TELEPHONE RECEIVERARKENING OF THE LIGHTHALF TRIANGULAR COLONARD SHELL FLOPPY DISKVERY HEAVY BARB ARROWGHT OPEN BOX OPERATOR WITH VERTICAL STROKENTISTRY SYMBOL LIGHT HAND INTERIOR PRODUCTHOCKEY STICK AND PUCKGRAMMOS OKTO DODEKATA WITH SHORT RIGHT LEGTILDE OPERATOR ABOVE TOUCHING INSIDE MOUTHWITH FOUR DOTS ABOVELEFT-TO-RIGHT SECANTNIS RACQUET AND BALLARXIS KAI FTHORA VOUSINGLE DOT TONE MARKINVERSE WHITE CIRCLEINDEX RING LITTLE ONYIG MGO PHUR SHAD MASCRIPTION CHARACTER 79 OVER LAK-079 GUNUIRCLES HITTING WALL WARE-FUNCTION SYMBOLINVERTED CANDRABINDUE POINTED WHITE STARMULTIPLE PUNCTUATIONL FUNCTIONAL SYMBOL WET CULTIVATION SIGNANGE ANTIRESTRICTIONSTAR WITH MIDDLE DOTWORD REPETITION MARKAND SOUTH WEST ARROWAND SOUTH EAST ARROWAND NORTH WEST ARROWA- SHOG GI MGO RGYANAND NORTH EAST ARROWKHAMTI REDUPLICATIONSIDEWAYS NOON GHUNNAINSIDE MOUTH RELAXEDLASHING SWEAT SYMBOLLATALIZED HOOK BELOWINING OBLIQUE STROKEJUDEO-SPANISH VARIKAWITH SOROCHYA NOZHKASEPARATOR MIDDLE DOTLE WITH POPPING CORKSEPARATOR KEY SYMBOLLEFT AND LOWER RIGHTHIGH RATHA OR LOW PAHIGH TONE APOSTROPHERIGHT-POINTING ANGLERIGHT U-SHAPED ARROWOTLESS J WITH STROKEUBHAANAHU WA TAAALAABSET OF NOR EQUAL TOTHROUGH SMALL CIRCLEENARMONIOS ANTIFONIAHORIZONTAL BAR WITH RIGHT QUADRANT BLACKEVERSED ROTATED RANAEMESTVENNY ZADERZHKADOTLESS HEAD OF KHAHDOUBLE ANGLE BRACKETREAN STANDARD SYMBOLDOUBLE DOT TONE MARK BEGIN LOGOGRAM MARKHREE-DOT NUKTA ABOVEDOWN ARROWHEAD BELOWYRENAIC TWO DRACHMASCRESCENT MOON SYMBOLFOUR RAISED KNUCKLESCONSONANT SIGN HAARUPLUS GISH TIMES TAK4TRANSPOSITION MARKERGHTWARDS ARROW BELOWFORMS LIGHT VERTICALCHEMICAL SYMBOL FOR POTABLE WATER SYMBOL OVER TUR ZA OVER ZAGRA GCAN -CHAR RTAGSCHARACTER INTRODUCER WITH HORIZONTAL BARFIVE SPOKED ASTERISK OVER LAGAR GUNU SHEOVER LEFTWARDS ARROWCENTRE VERTICAL LINEFINAL CONSONANT MARKCURRENCY SYMBOL RIELCURVED ANGLE BRACKETHALF CIRCLE WITH DOTHAR2 TIMES GAL PLUS UP-POINTING TRIANGLERIGHT ANGLE WITH DOT ABOVE LEFT TRIANGLEE CONSONANT MODIFIERREVERSED ONE HUNDREDONCAVE-SIDED DIAMONDVAL WITH OVAL INSIDEIMAGE OF OR EQUAL TOONE MARK SGAW KAREN RUMAI PALAUNG TONE-5 AND DIAGONAL STROKEBETWEEN PALM FACINGSALTERNATE LAKH MARKSYMBOL FOR BEGINNERNETWORKED COMPUTERSVASTNESS OR WASTINGOVER E NUN OVER NUNSEVEN EIGHTHS BLOCKIMIDIA SEXTULA SIGNPREFIXED NASAL SIGNHURISAZ THURS THORNNE HUNDRED TWENTY PTO LOWER RIGHT FILLSH PLUS HU PLUS ASHNDRED POINTS SYMBOLFIVE FINGERS SPREADRROW NO-BREAK SPACED CIRCUMFLEX ACCENTEVEN POWERS OF FOURARENTHESIS NOTEHEADLEFT TO LOWER RIGHTLEFT POINTING INDEXQUADRUPLE CRESCENTSHEAD-SHAPED POINTERHAND COVERING MOUTHARABIC FORM SHAPINGDOWN AND HORIZONTALTWENTY-FIVE DEGREESTURNED SECTION MARKSEQUENCE INTRODUCERTURNED PADA PISELEHLEADING MCHAN RTAGSGAPPED CIRCLE ARROWTRANNO MALO POVYSHEVARIANT FORM ILIMMUTHANG LONG ANUSVARAPARAGRAPH SEPARATORCIRCLED SANS-SERIF IN CHEN SPUNGS SHADCIRCLED WHITE ARROWMOVES AGAINST CHEEKWOMEN HOLDING HANDSRY CULTIVATION SIGNLANTED EQUAL ABOVE MSHELL MOBILE PHONEFT-POINTING FLEURONA END LOGOGRAM MARKDOWN POINTING INDEXNAXIAN FIVE HUNDREDOW-9 QUOTATION MARKVARIATION INDICATORVARIANT WITH SQUARESLANTED NORTH ARROWANSPOSITION BRACKETANS-SERIF CAPITAL LILDING CONSTRUCTIONFLOORPLANE TWISTINGSTRATIAN FIFTY MNASSTRAIGHT THUMB BENTWITH YEH FINAL FORMGIBBOUS MOON SYMBOLKULL AND CROSSBONESREE-QUARTER CIRCLE RIGHT TO LOWER LEFTRAILING MCHAN RTAGSUBLE DOT WITHIN DOTOTATED ARDHAVISARGAING SHIRT WITH SASHVERSE FINAL BARLINEAHU ALAYHI WA-AALIHLF MADDA OVER MADDA AND PROSGEGRAMMENI WITH STRIKETHROUGHLUB-SPOKED ASTERISK IN A RECTANGLE BOXTIGHTLY-CLOSED EYESDENOMINATOR SIXTEENARTIAL DIFFERENTIALNORTH ARROW WITH HORIGHT MIDDLE STROKEBETWEEN MIDDLE RINGTART OF RUB EL HIZBOP SEMICIRCLE ARROWHORT STROKE OVERLAYINSIDE CIRCLE BELOWRATUM SUPER STRATUMIGATURE AYIN-DALETH LOVE YOU HAND SIGNATED TELLER MACHINE FLUTTERING IN WIND WITH VERTICAL TAIL AND RETROFLEX HOOKVERSAL INTERSECTIONISPUTED END OF AYAHUP HORIZONTAL HEAVYC DIGRAPH WITH CURLQUESTION MARK ABOVEUP HORIZONTAL LIGHTNOGRAPHIC FULL STOPITED LIABILITY SIGNET WITH WHITE CROSSVERTICAL TABULATIONURRENCY SYMBOL BAHTLEFT U-SHAPED ARROW KASKAL U GUNU DISHLOWER MIDDLE RIGHTCTLY EQUIVALENT TOSMALL RED TRIANGLE FOR SIMALUNGUN SAFORTY-FIVE DEGREESSOUL ISOLATED FORMLEFT MIDDLE STROKE AND SMASH PRODUCTQUARTER NOTE STEM TYPE A ELECTRONICSEVERSED CHELYUSTKA AND YPOGEGRAMMENICOPPER ANTIMONIATEUPPER MIDDLE RIGHTEVENTEEN FULL STOPCONTINUING OVERLAPLOSED CIRCLE ARROWBAARAKA WA-TAAALAACUP WITHOUT HANDLEDOUBLE PUNCTUATIONEAST POINTING LEAF AND NO DOTS ABOVESINGLE PUNCTUATIONERTICAL BAR VIRAMASMALL CIRCLE ABOVE OVER INVERTED SHUFIVE EIGHTHS BLOCKWEST POINTING LEAFWHITE VERTICAL BAREPIGRAPHIC LETTER FORKED PARAGRAPHOSPUNCTUATION BINDU UP ARROWHEAD BELOWABBREVIATION MARK DOWN-OUTPUT SYMBOLENTY-TWO POINT TWOENTERING TONE MARKU-SHAPED ORNAMENTSWITH STROKE SYMBOLMATHEMATICAL SPACE NOT LITTER SYMBOLUM WITH DRUMSTICKSLEFT-STEM TONE BARWITH JUSTIFICATIONHILOSOPHERS SULFURCANTILLATION SIGN VERY SMALL DIAMONDSYMMETRIC SWAPPINGHAIS LUS NTOG NTOGS PRESSED TOGETHERSEPTUPLE CRESCENTSNORMAL SUBGROUP OFARROW SHAFT WIDTH TO LOWER LEFT FILL WITH KAVYKA ABOVEJEEM ISOLATED FORMSET OVER BUILDINGSOU ALAYHE WASALLAMS INSIDE AND ABOVEOTLESS DALATH RISHIGATURE ZAYIN-YODHIRROR HORIZONTALLYKANTAJA NAASIKYAYAOUCHTONE TELEPHONE WITH FLOWING SANDBOTTOM RIGHT KASRAATIN SMALL LETTER HORIZONTALLY BELOWTILTING FROM WAISTORK ON THE DECAYEDNITE PART INTEGRALNISH VERSE DIVIDER THUMB INDEX THUMBITAN SMALL SCRIPT  WITH CROSSED-TAILHOUSANDS SEPARATOR WITH CIRCLE BELOW WITH CIRCLE ABOVEHUNDREDS UNIT MARKNINETEEN FULL STOPIX SPOKED ASTERISKINDEPENDENT VOWEL KOREAN CHARACTER OPACING CANDRABINDU SPREAD THUMB SIDEGGLY VERTICAL LINEBASELINE ROUND DOTASTED SWEET POTATOGATIVE ACKNOWLEDGEGISH CROSSING GISHTROFLEX HOOK BELOWRYUKOVAYA SVETLAYAATERRESTRIAL ALIENPERFIXED LETTER RAVARIANT FORM LIMMUYLLABLE LENGTHENERASTROLOGICAL SIGN IGSAW PUZZLE PIECEIN POSSESSION SIGNOW TONE APOSTROPHEYPTIAN HIEROGLYPH KBAR ISOLATED FORMHOLDING BACK TEARSAND LOW RIGHT RINGRIST CIRCLE FRONT NYET THYOOM TA-ROLUTLINED BLACK STARSHAN REDUPLICATIONTOP U-SHAPED ARROWNYOOGA NAAKSIKYAYAAEUM ONE PLETHRONBRACKET EXTENSIONEMICOLON UNDERBARVERAGE WITH SLASHHORIZONTAL SINGLEHORIZONTAL DOUBLETERSYLLABIC TSHEGRIATION SELECTOR-VARIANT FORM ASH9A PLUS HA PLUS DAVARIANT FORM IMINVARIANT FORM USSUEAR SCREEN SYMBOLINEAR ANNOTATION TEN THOUSAND SIGNBE WITH MERIDIANSIGHTEEN FULL STOPING POLE AND FISHABBREVIATION SIGNATHERING TOGETHERBERBER ACADEMY YAULAR MEDIUM SHADEVEE WITH UNDERBARINITIAL LETTER RAAUKAZ LAGU LOGR LIDEOGRAPHIC COMMAICTED LEFT ENTRY-IASTRE MARK ABOVEBOTTOM HALF BLACKTARTING FROM SIGNGENERIC MATERIALSCTION APPLICATIONAPLI DYO DODEKATAGREATER-THAN SIGNFINGER-POST ARROWLD PERMIC LETTER ALTERNATE NUMBER GREATER-THAN NOR CROSS PUNCTUATIONKE BOTTLE AND CUPAMBDA WITH STROKEFLICK ALTERNATINGVOCALIZATION MARKKHAH INITIAL FORMSTRAIGHT MOVEMENTCIRCLES WITH DOTSCONTOURED OUTLINEAMPHYLIAN DIGAMMALAPPING LESS-THANCONTINUATION SIGNCLOSED LITTLE YUSTRIPLE DASH ARROWCONSONANT SIGN PALAH ISOLATED FORMLAGOLITIC LETTER COMBINING NUMBER AND BLACK SQUARESFRACTION ONE HALFURNED DAMMA BELOWBRIGHTNESS SYMBOLASTERN PWO KAREN TAN ISOLATED FORMTHREE SOUND WAVESLIAN HIEROGLYPH ALHOUETTE OF JAPANTIAL ARTS UNIFORMHIRTEEN FULL STOPDENTAL PERCUSSIVEBUT RELIEVED FACEDELPHIC FIVE MNASUP AND HORIZONTALFROM SMALL CIRCLEINVERTED MCHU CANVRE TOURNOIS SIGNURNED COMMA ABOVECAL SYMBOL BOTTOMCANCELLATION MARKUP POINTING INDEXHEART-SHAPED EYESCANDRABINDU ABOVEVERY SMALL SQUAREFACING BABY CHICKSQUARED TIMES KURHAH ISOLATED FORMTONAL RANGE MARK MANENT PAPER SIGNY ON BLACK SQUAREREATIONAL VEHICLE LAGAB TIMES ASH2 LAGAR OVER LAGAR TO BLACK DIAMONDWITH NOT EQUAL TOMILITARY AIRPLANEQUAT REVERSED ESHMEEM INITIAL FORM WITH BULLET NOSE OVER ZU PLUS SARMALL WHITE CIRCLEYEH ISOLATED FORMONE EIGHTH BLOCK-0 WHEELED CHARIOT GRAVEYARD SYMBOLPINWHEEL ASTERISKRYBLION BASE SIGNRIGHT HALF CIRCLEOURTEEN FULL STOPNE EYEBROW RAISEDNEGATIVE CIRCLED MEDIUM BARB ARROW PLUS SHA3 PLUS AOWER NUMERAL SIGNWO VERTICAL DOTS NAUDIZ NYD NAUD NSIGN O WITH CROSSPRIZNAK MODIFIER NFORMATION SOURCE ALTERNATION MARKS REVOLVING LIGHT-HEIGHT LEFT HOOKSERVER EYE SYMBOL WITH TILDE ABOVEPRESSIONLESS FACEPUNCTUATION SIGN  WITH SOUND WAVESOPEN-HEADED ARROW-GAAHLAA TTUDDAAGPRECEDING SOLIDUS AND PALATAL HOOKNASALIZATION MARKWHITE PARENTHESISWHITE SHOGI PIECENG STROKE OVERLAYPLACEHOLDER MARKFLOORPLANE SPACESTRING FRETBOARDINDEPENDENT SHINFFERENCE BETWEENUPPER OVER LOWERVARIANT FORM ESHRIZONTAL ELLIPSEMIDDLE AND BELOWSTICKING OUT FARMIDDLE AND RIGHTMESTVENNY KLYUCHCOMPRESSED ARROWRISING TONE MARKFALLING DIAGONALPRECHGESANG STEMCREAMING IN FEARINES CONVERGING POSTPOSITION MENOLD TAMIL VIRAMAWITH CENTRED DOTPRECEDING SUBSETCORNER LEFTWARDSCORNER DOWNWARDSB2 TENU PLUS TABINDEX THUMB SIDESTRAIGHT STRETCHOLD WHITE CIRCLE OR THE IMAGE OF PLUS KAK PLUS ANAL DIGIT SHAPESYIR MKPARAQ MEUNPLE MEASURE RESTCONSONANT JOINERHMATULLAH ALAYHECASIAN ALBANIAN IFTEEN FULL STOP WITH BUNNY EARSSHU2 PLUS KASKALLD ASSYRIAN ONE  WITH DOT INSIDEIDED GREEK CROSS WITH HEADSTROKEHIGH SPACING DOTHOLDING TOGETHERHYPHENATION MARKANABAZAR SQUARE BOTTOM HALF RINGORIZONTAL JOINERBOLD GREEK CROSSSTERISK OPERATORPEN CENTRE CROSSVOWEL LENGTHENERWITH HAMZA ABOVEWITH HEARING AIDIMENSIONAL ANGLE SMALL ROTATIONSTRIPLE CRESCENTSLEFT HALF CIRCLEWITH LEFT UPTURN TIMES DISH TENUCH WITH UMBRELLALEFT ARROW ABOVEIGHTH NOTE STEM  TIMES GAN2 TENUTAKANA-HIRAGANA DOTTED CRESCENTSSMALL NOON ABOVESMALL CAPITAL ELRIGHT HALF BLACKUDLY CRYING FACENTAIGANA LETTER IRCLE X NOTEHEADRAYS AND DOTTED DITORIAL CORONIS AND LIGHT RIGHTEN MILLIONS SIGNIPPER-MOUTH FACE AND HEAVY RIGHTECIMAL SEPARATORWAVY HAMZA BELOWSANS-SERIF ARROWEND OF TEXT MARKRAIDO RAD REID RSTUCK-OUT TONGUEDVUMYA ZAPYATYMIRIGHT DOWN BARB LTERNATE HASANTADOWN RIGHT BARB EFORE COMPLETIONDOUBLE ZAPYATAYADOUBLE TURNSTILEREPETITION MARK-RECORD SEPARATOR CAPPED MOUNTAINISTOS DISC SIGN ULDERED OPEN BOXRESH-AYIN-DALETHIVE POINTED STARDOUBLE HEAD MARKDOUBLE DOT ABOVELOWER OVER UPPERDOUBLE CRESCENTSSITION INDICATORK PERMITTED HERERIGHT HALF BELOWVERY HEAVY SHAFTARENTHESES ABOVEO-MINOAN SIGN CM LIGHT MOON ARTAENTRE WHITE STARUP MIDDLE HINGEDQUALS SIGN BELOWUP-OUTPUT SYMBOLEVERSED VISARGA AFFRICATION MARKEVERY OTHER TIMESERIFS AT BOTTOMVIEWING CEREMONYSIGN RISING TONEWALLED ENCLOSURELIGHT BARB ARROWLIGHT AND RIGHT E PLUS GAN2 TENUUPERSCRIPT ALAPHQ WITH HOOK TAILMAGNIFYING GLASSENUMERATION SIGNUBJOINED LETTER ADIAN SYLLABICS DEWAYS U BRACKETUMBER SIGN ABOVEEPSILON UNDERBARYATHOS BASE SIGN INSERTION POINTERCURY SUBLIMATER PLUS GAN2 TENUNION WITH SERIFSSLANTED EQUAL TOLLOW PAN OF FOODBINDING BRACKETITH FINGERNAILSBAR ABOVE UNIONIDING ENCLOSURE-PIECE SWIMSUITNJOINING MACRONVERTICAL SECANTORIZONTAL COLONUSTER NOTEHEAD BLOCK DIAGONAL -NO-EVIL MONKEYTHREE DISH TENUIAMOND UNDERBARXTEEN FULL STOPINUS SIGN BELOWATA LINK ESCAPEINVERTED LAZY SNVERTED UBADAMA2 CHARIOT FRAMESALTER PAHLAVI OLIDUS OPERATORON TOP OF MODEMATINATE MYSLITEODIFIER DAMAGEDS ELEVATUS MARKS IN SILHOUETTEODO SOFT HYPHENING SYMBOL FOR OGOGRAM KHAMTI INGLE HEAD MARKNOT APPROXIMATEBENT OVER INDEXBELOW LONG DASHNOON FINAL FORMONTOUR INTEGRALBELGTHOR SYMBOLNOON WITH KASRAONJOINED HINGEDNO GOOD GESTUREIGN PALI VIRAMATAI LAING TONE-IZED WHEELCHAIRIRCUMFLEX BELOWOND PLACE MEDALIMISEOS CHRONOUIMPERFECTA RESTINVERTED STROKEYNCHRONOUS IDLERIGHT RERENGGANESIDE LESS-THANR WITH FISHHOOKERICAN FOOTBALLDESCENDING TONEDI ALLAHOU ANHUDIALYTIKA TONOSESSARON CHRONONUBLE RING BELOWDIGA AELA-PILLARIGHT HALF RINGDOING CARTWHEELEH INITIAL FORMRIGHTWARDS TICKPRISHTHAMATRA EPUT SYMBOL FOR TVIMADUR SYMBOLZERO WITH SLASH NEPOSTOYANNAYAEXPONENT SYMBOL DEYTEROU ICHOUQUADRUPLE ARROWQUADRUPLE DASH DAGESH OR MAPIQTWO WITH STROKEETIC VERSE SIGNRIGHTWARDS AND U PLUS U PLUS UULTIPLICATION XDOWNWARDS TREND AND LOWER LEFTREVERSE SOLIDUS AND BOTTOM ENDREVERSED OPEN EUMAI PALAUNG FAE ISOLATED FORME MUSICAL NOTES ALTERNATE FORME OVER INFINITYDOWN SEQUENTIALUGMENTATION DOTDOUBLE TRIANGLERECITATIVE MARKRECEPTIVE EARTHREAMY EYEBROWS  CLOUD AND RAINEFT REPEAT SIGNEFTWARDS ARROWS CORNER BRACKETHAKING PARALLELHEH MEDIAL FORM WITH DESCENDERTIP ON THE LEFTCAPITAL LETTERSHALF FILL SPACE TOUCHING INDEX WITH DIAERESIS TIMES IGI GUNUGROUP SEPARATORUR POINTED STAR THUMB STRAIGHT THROUGH CIRCLETHROWING A KISSHOUSAND STATERS-CARRIER LETTERORT EQUALS SIGNHORIZONTAL FILLBREAKING HYPHENHORIZONTAL DASHBROWS STRAIGHT OW-FALLING TONEHOOKED INDEX UP WITH RIGHT LEGOUBLE BACKSLASHTILDE DIAERESIS PLUS HI PLUS AFTER COMPLETIONFRACTION DIGIT FOUR ENCLOSURESFOUR DOTS WITH PERTHO PEORTH PPLUS SIGN BELOWFORWARD TILTING PARESTIGMENON CORNER WITH DOT OVER SIG4 SHU2FIVE-LIKE BHALE OVER MOUNTAINSHREE DOTS BELOWCLOSED BY CURVETRIANGULAR MARKRMAN PENNY SIGNPENSION RAILWAYPEN SQUARED DOTCKET CALCULATORRNAMENT STROKE-CIRCUIT-OUTPUT GEMINATION MARKGGLY LINE BELOWGHT REPEAT SIGNOWER HALF BLACKTOP RIGHT FATHAZAIN FINAL FORMVOWEL SHORTENERSTROKE NOT SIGNALMOST EQUAL TOACHES THE LIMITALIF LENGTHENERLEFT DOWN BARB ND OF PARAGRAPHLEFT HALF BELOWLEFT HAND INDEXVOWEL SEPARATORALAYHE ASSALLAMWITH RAIN DROPSMIDDLE DIAGONALWITH DOWN ARROWWHITE DOT RIGHTLETTER CAPITAL LOSED INSULAR GLEVEL TONE MARKLEVEN FULL STOPAI LAING DIGIT SSICAL BUILDINGNA DOUBLE HELIXSTERESIS SYMBOLN-ARY SUMMATIONAND PARALLEL TOSHITA PLUS GISHMURDA MAHAPRANAKTOVIK NUMERAL ST SYRIAC CROSSST QUARTER MOONLEFT HALF BLACKSHORT OVER LONGAMOUNT OF CHECKKISIM5 TIMES BISIXTEENTH NOTESNASALIZED TONE-LATION FUNCTIONAMARITAN SOURCEMARRYING MAIDENLD TAMIL SHORT LONG VOWEL SIGNLOOK OF TRIUMPHWALLPLANE SPACELMOST EQUAL TO MEEM FINAL FORMMALAKON CHROMA LONG HOOK BELOWLIGHT AND LEFT HIRD-STAGE HLIENDED MULTIMAPSMALL LETTER DOT TILDE ABOVETHREE POINTED MOTHETIC ABOVEOSITION SYMBOLAMNUC PII KUUHENNA WITH BARSTIMES OPERATOROUR OBOLS SIGNERTICAL JOINERSQUIGGLE ARROW WITH BACK YERLOWER DIAGONALMEDIUM DIAMONDTIMES SHU TENUERIAL ARAMAIC HESIVE BANDAGEERIC INDICATORREATIVE HEAVEN WITH LONG LEG-CURRENCY SIGNOTHERS CIRCLEDSMALL LETTER JDIAGONAL PATH THALAN ETHEL OTHAKA ANUDATTAEPENTHETIC YUTOOTNOTE MARKERTETARTOS ICHOSDEYTEROS ICHOSDIAGONAL MOUTHSHESHIG TIMES UNIT SEPARATORLACE OF SAJDAHBHATTIPROLU AAIGHTWARDS VANEUNION OPERATORTERMINAL MARK-IKHAYA PUTNAYATELPIECE CLOCKYOUTHFUL FOLLYONE SOUND WAVEDI ALLAAHU ANH HASER FOR VAVTHOUSANDS MARKOUSING THUNDERMRACHNOTIKHAYAUSPENSION MARKHREE-LEGGED TEUBHAYATO MUKHADOUBLE-STRUCK THOUSANDS SIGNORANGE DIAMONDBLADE SCISSORSBLACK TRIANGLEOPPOSING PIRIGTHER CHRISTMASREE-LINE STAFFRIGHT CROSSBARREH FINAL FORMAND COLD SWEATD-UP NEWSPAPERLETTER OVERLAPEMIVOWEL SIGN TWO ENCLOSURESDIRECTION FLIPFORWARD INDEX LESS-THAN NOR PLITTING APARTPPED MIDDLE UPPLETE INFINITYPLE WITH HEARTLEFTWARDS TICKMID-LEVEL TONEWITH DOT BELOWAFETY SCISSORSVRON SNOWFLAKEUP RIGHT BARB LEFTWARDS AND UNDER RELATIONFFICE BUILDINGEXTENDED BHALERING MEGAPHONETWO DOT LEADERUPPED INDEX UPSPEECH BUBBLESFATHATAN ABOVETURKIC LETTER FFED FLATBREADPROTECTED AREAAI LENGTH MARKFINAL ANUSVARALEVEN TWELFTHSLIGHTLY SMALL EXCLAMATION OHDIO MICROPHONELINE EXTENSIONCRIFICIAL WINEMENSION ORIGINCEPTER OF JOVEDASIA PNEUMATAQUINARIUS SIGNVONIC ASTERISKSMOKING SYMBOLRD PLACE MEDALCERTAINTY SIGNOVER GUD LUGALTOP HALF BLACKWITH LEFT HOOKCENTURIAL SIGNGUNU TIMES ASHGYPTOLOGICAL AROSS ON SHIELDEND OF SECTION CROSSING ESH2ALLAJALALOUHOUSIDE-DOWN FACEUAL WHEELCHAIRCOLON OPERATORUND MARK ABOVETWO WHITE DOTSWITH FATHATAN PEN MARK BELOWLITTLE SECTIONTRIANGLE WITH DOES NOT EXISTPARTMENT STOREZAH WITH MEEM PARATED SYMBOLLOTUS POSITIONGERED TREMOLO-TRANSMIT STATEPAO KAREN TONESMALL TRIANGLEGHT WITH STARSZAKAYA LANTERNSEPARATOR MARKALF TREE TRUNKREVERSED-SCHWAIRCULAR VIRAMAANGLE OPENING SHAN MEDIAL WAED SYMBOL FOR ISSION TICKETSIVE OBOLS SIGNSEL LOCOMOTIVEXO EKFONITIKONNORTH ARABIAN DUN3 GUNU GUNUOBLIQUE HYPHENVERTICAL COLONIWAZ TIR TYR TSECOND SUBUNITSURROUND FROM VERTICAL LIGHT1 OVER LAK-081VERTICAL HEAVYAROUND-PROFILEJOINED SQUARESING HANDS SIGNINOLOGICAL DOTINSERTION SIGNISED ROUND DOT AND DIAERESISIVE KEY SYMBOLINFINITY BELOWVERTICAL ABOVEOLD RESOLUTIONAU LENGTH MARKVENIENCE STOREITA PLUS GISH WORD SEPARATORBAG MEMBERSHIPINVERTED BIRGASTRONG ISOLATEINVERTED DAMMANYI ZLA NAA DAHINESE TONE YAUDATE CHRIVIWITH INTEGRAL WITH JEGOGANMARKS CHAPTERDOUBLE MUCAADSIGN AVAGRAHA WITH OVERBARUPWARDS TRENDLEFT CROSSBARVERGREEN TREEDOUBLE HYPHENHIEROGLYPHIC VEN POINT ONEMODIFIER MARKNUMERATOR ONETOP HALF RINGSSAGE WAITINGPLUS OPERATORCHRYSANTHEMUMARRED TRIDENTURNED W BELOW WITH INK PEN OF THE HORNSWITH ASTERISKBY DEFINITIONDOUBLE STROKEVERTICAL FILLCHECKER BOARDMESSENIAN TENLATERAL CLICKUPERIMPOSED XSIGN PAMUDPODFOREMENTIONEDOGOTYPE SIGN VERLAY MIDDLEITING THROUGH WITHOUT SNOWINVERTED TURNDIAERESIZED UEHU FEOH FE F DIRECTIONAL SAMYOK SANNYASMALL LETTERSK WORK SYMBOLUFFLE PRODUCTOTEHEAD BLACKUPONDIUS SIGNINVERTED FORKS KAI APOTHESS KRYZHEM ON VERTICAL BARSWAW-AYIN-RESH WITH TEE TOP BZHI MIG CAN TIMES KASKALGYA GRAM SHADHAM DIGIT ONEISH LIRA SIGNCROSSING MUSHEAVENLY EARTHMINUS SIMILARPAIRED ARROWS VARIANT FORMALL LOST SIGNPREPONDERANCEMINUS WHITE XGTER TSHEG MAFINAL SEMKATHTIRTA TUMETESMINDER RIBBONSAL PLUS TUG2OUT MIDDLE UPH-TYPE SYMBOLGIFT ENVELOPEDOTTED ZLAMA EMPHATIC TONEPPOSING LUGALCROSSING GABAYUUKALEAPINTU CROSSING KA2HAKASSIAN CHECROSSING GAN2OURTH SUBUNITPA NJI PIPAEMOBLIQUE LINE APPED PRESENTRIPLE SVARITACULATED LORRYKAPYEOUNPIEUPMOBILE PHONESMASORA CIRCLEINTEREST SIGNCRIPTION TAKEFIXED-FORM RAHERICAL ANGLENUMERIC SIGN RANKS CASKET DOUBLE CIRCLEFINAL LETTER S UP TOGETHERROTATED BIRGALVE FULL STOPVICE CONTROL ACCOMMODATIONW RING INSIDE OPPOSING KUR DIMINUTION-1TU WAS-SALAAMFICATION CARDARROW OVERLAYSIA-AUSTRALIACRIPTIONAL PARTABLE STEREOZHOU NUMERAL OLVING HEARTSUDDISA SIRRAHNTY FULL STOPIFI ROHINGYA OMAN NUMERAL FT ARROWHEAD AR WITH QUILLSTERTIUS SIGNOON NOTEHEAD NING MOVEMENTLOCATION SIGNSELECTED AREALVEOLAR CLICKSHESH PLUS KI-OFF CALENDARED PAPERCLIPSU WITH STROKECITATION MARKIOT SYLLABLE ARGOSYNTHETONGAW KAREN SHAIVE SLOW SIGNIGHT TWELFTHSIDE LOST SIGNERTION SYMBOLFROWNING FACEGAR FRACTION -OR-PLUS SIGN-PER-EM SPACERN PENTATHLONUPSILON WITH FULL SURROUNDEDIC ANUSVARAL-TYPE SYMBOLILE SEPARATORNG TERMINATOR AND SKI BOOTIMAGE BRACKETYOD YOD PATAHWO-LINE STAFFTED HAND SIGNLOSING SPIRALONAL COMPUTER HEADED ARROWRIZONTAL TAILBALL AND HOOPTROFLEX CLICKEELING PERSONER BOARD FILLRACKETS ABOVE AND YEN SIGNIRCLED INDEX YMBOL TAU RHOLOCK WITH KEYONGRATULATIONVOWEL SIGN PAVE-LINE STAFFONG-LEGGED DERIGHT HARPOONARCHAIC KOPPANINE TWELFTHSSYNDESMOS NEOONG RIGHT LEGILABIAL CLICKBASAN LETTER MELODIC QITSAEVERSED DAMMASILI PNEUMATAARLAUG SYMBOLEUROPE-AFRICAQUARTERS SIGNMAILBOX WITH BOWING DEEPLYED DOUBLE VERTE ORDER MARKANNED LEATHERLEGETOS ICHOSBOTTOM CORNERDVOECHELNAYA USHING UPWARDAMUHU ALAYNAAMALO POVYSHE USICAL LEIMMAAWELLEMET YAZAN RUPEE SIGN-ESASA DOTTEDHREE TWELFTHSBOHAIRIC KHEICIRCLE INSIDEDIC MARK SIGNOPPOSING NAGAWAVY LOW LINEMALL LETTER Z B BAR SYMBOLSTABLE SYMBOLI WITH STROKEUE OF LIBERTYMULTIOCULAR OMEDIUM SQUARERRIAGE RETURNTHIRD SUBUNITLISION SYMBOLIVE POINT ONERPENTRY PLANEWAVY OVERLINEJES SU NGA RO BAT AND BALLNAP PIZZICATOENT ARROW POIRTY-SECOND EMELY HEAVY FOLDED HANDSEMISOFT SIGNFORMING ARTSMIDDLE PIECELER CONSTANTUBSCRIPT TWOPOETRY MARK-FOUNTAIN PENNOTCHED HOOKVICTORY HANDKANA REPEAT FT RERENGGANPORT CONTROLRISTMAS TREESAZ IS ISS ISH ZIDA TENUSUR OVER SURNOTCHED TAIL LINE SYMBOLDE MARK SIGNAR DIAERESISLLE PATTERN MEDIUM SHAFTQUIRREL TAILSMALL TRIPLELL MODIFIER-DASHED ARROWDICTION SIGNETRETES SIGNNERSHIP SIGNLINKING MARKLINGING FIRENJALA GONDI QUARTER SIGNNEPOSTOYANNYNGLE BARLINEARALLELOGRAMRAFFIC LIGHTRIGHT SINGLERAH BEN YOMOMADDA ABOVE MEDARY CAMELENOS CHRONOUM NSHUT NYAMEVERING FACEDENTAL CLICK IN TRIANGLEXIRON KLASMASMILING FACEERPENDICULARIVE TWELFTHS KLYUCHEVAYADIGRAPH YORIRIAGE SYMBOLPROTOS ICHOSCROSSING NUNCROSSING LU2CROSSING KALCROSSING GI4ACUTE ACCENT OVER KISIM5FERENCE MARK OVER MIDDLEUPPER CORNERFLAG ON POSTEAGULL BELOWCRESCENT BARPOUTING FACENORTHERN TSE OVER TWO PIMETA STAVROUSECTION SIGNQUARED ARROWENARIUS SIGNAFU LEERAEWAT MONGKEUAEQLIMBS DIGITSLICKING LIPSRANCHING OUTRING OVERLAY OF ANTIMONYRIAL TRAMWAYFALLING DOTSRION CHRONONDIGRAPH KOTOFEMININE DOT ON PEDESTALING HAND FANKHAMTI TONE-BRATION MODELARGE TRIPLEKHMIMIC KHEIOID NOTEHEADOING TO MEETING OPERATORING HITTING OK HAND SIGNLARGE DOUBLETHREE HEARTSOHAZARD SIGN-DZUD RTAGS MPHASIS MARKMPTY CENTRE HREE FINGERSING ENVELOPES ABOVE SIGNLAM WITH YEHREVERSE MARKKLYUCHEVAYA BLUE DIAMONDBLOWING FACENARROW SHAFTUN WITH RAYSALTERNATING SS-THAN SIGNHIBITED SIGNLAYING CARDS WITH INDEX INTEGRATION BYSMAL WATERWDATA SQUAREBUTTON MOUSEDUG TIMES NIOTTOM HALF OLOWERED FLAGMANNAZ MAN MTHODOX CROSSSHORT RIKRIKUSEATED FACEBSCRIPT ALEFOGOGRAM NYAJRIGHT DOUBLEMONOGRAPH UKBRIDGE ABOVE WITH UPTURNROUNDED ZEROLATALIZATIONN ELEMENT OF-SIMPLIFIED IGATURE SHRIUTH-SLAVEY KSHED BARLINEREN CROSSINGEEPING SMALLYMBOL BINDU AND OPERATORBACK OF HANDBEHIND CLOUDSMALL DOUBLEONISHED FACE-SHAPED SIGNTERNATE AYININ MIDDLE UPYOUTHFULNESS AND TOP ENDLU PLUS ESH2ANG KHANG GYON US SYMBOLILLED CIRCLEVAKRAHASANYAYOD TRIANGLE AND PICTURETEARS OF JOYBAHIRGOMUKHAHYPHEN-MINUSTE SEPARATOROQ NSHUT YUMBLACK CIRCLEUGHT BALLOONDOWN HARPOONTHIC LETTER THETA SYMBOLBINING MARK -MAIL SYMBOLOPPOSING LU2INDEX MIDDLEREFACE COLONMALL SECTIONDOWN NEUTRALOPLE HUGGINGOPENING LEFTAND CRESCENTIDENTICAL TOBETWEEN LIPSMUM TIMES PAUTH ARABIAN UH PLUS GISHDOT OPERATORRCHAIC SAMPI SKEWED LEFTLEFT HARPOONTRAGRAM FOR ROLLING EYESTOP-LIGHTED LUS NOTEHEADCHARACTER-1BCHARACTER-18WIGGLY FENCECHAIR SYMBOLOVER KASKAL GREEN DRAGONGROUND SLIDEVOLTAGE SIGNPHEME JOINERTRIPLE FLAMETRIPLE DANDALEFT-LIGHTEDIRAGANA HOKANDING PERSONKAPPA SYMBOLCK-O-LANTERNRNAM BCAD MAGAW KAREN EUOUCHES THUMBEIGHTH NOTESGBY FOOTBALLNUITY SYMBOLCIRCLES AND AA AS-SALAAMCIRCLED PLUSGEBA KAREN ICIAN LETTER OUR TWELFTHSS SUBPUNCTISHAND FORMAT CALENDAR PAD WITH DAGESHDOUBLE ARROWATNAH HAFUKHULL NOTEHEADALT PAN SIGNOUGHT BUBBLEACE INTEGRALHASIS SYMBOLDOUBLE ARCH LOWER CORNERVER EQUAL TOHEAD-BANDAGEATTOOED HEADNCK CONSTANT CROSSING GUINUSOID SIGNINVERTEBRATECABBAGE-TREECENDING NODEMBELLISHMENTGUARDED AREAYAN NUMERAL UME INTEGRALNATURAL SIGNHAH WITH DALLEADING EYESALLPOINT PEN6 LONG NGGOOWITH SMALL VMING TO MEETHALF BRACKETENG DIGRAPHEDICAL MASKRIGHT GUARDRIGHT HEAVYME LONG CANUISHED FACEZZA WA JALLLOSED ENTRYMACING FACEMED RGYINGSRESPONDS TOLOTI NAGRI SMALL CLOUDE2 TIMES ANLU PLUS IGIEEZING FACELTED FLOWERULO TWO SUMLT OF CLOTHMBLER GLASSRANSMISSIONLUPOVODNAYAUG RTAGS GYRIGHT LIGHTEAVER DENE MBA BAYANNARAISED FLAGLTERNATE AALTERNATE YALOSING MARKSINGLE AND RCHAIC JNYAUBLE TONGUEE WITH VEILUETTE BREADREAKTHROUGHEN STRAIGHTSHEQEL SIGNOPPOSING IMOPPOSING ENTHAM DIGIT MUNCIA SIGNIEN MONSTERTH-THALATHATETRAFONIASMUUSIKATOANONIAN SIGN N THE VERGETENS DIGIT IL FRAGMENTILCROW SIGNILIQUA SIGNL TIMES LALL OF THREADSTEAMY ROOMSTERED SIGNRUNNING MANHREE BALUDATIEE SHEUOQHITE DRAGONHLETIC SHOEHOKHLOM ON LATIN CROSSMONOCULAR OTHREE TIMESHORA DIGIT MOVED BELOWORT BARLINERPOON ABOVEORCE SYMBOLOR OPERATORTHIRDS SIGNI TIMES BADI TIMES NUNLACKLETTER LACK SULFURIBLE-CREE YJOYOUS LAKENUMBER ZERONUMBER SIGNIPLE TONGUENTIMONY OREIRCLED TEXTKAARA POLLUNSE CHEEKS ISIGOTHIC ZTA EQUAL TOSHAAYATHIYASECOND MARKSVASTI SIGNJIHVAMULIYANITIAL IZHEIVERY TRUCKJECT SYMBOLIX TWELFTHSSYURA SASAKNIKOLSBURG NG LEFT LEGSYMBOL VIDJIMULTANEOUSIN EQUAL TOOMAN SIYAQ KTIESELSKABRYVNIA SIGNINDERGARTENSTORIC SITEINDICESIMA OLD NUBIAN SSANGKIYEOKOHINGYA YEHOF MASHFAATOF ENVELOPENBLENDED UKNYIS -KHYILND ODD SIGNND OF PIECENUSVARA ONENUN HAFUKHALETION MARKPUT MORTUUMSPEED TRAINTUNE COOKIEFGHANI SIGNFINAL SIGMALEU SATANGAFIRE ENGINERIPLE PRIMEMFON PIPAEMPOST OFFICESPIRATED FAMICAL HEARTPODCHASHIEMRISING DOTSMIDDLE BENTFOURTH ROOTRITING HANDESH DIGRAPHENTHESIZED EORGIAN NARLON SKEWED EPIDAUREAN RADITIONAL RACHMA SIGNRA SOMPENG ERCENT SIGNRIGHT-HAND RIGHT-LIGHTPHNAEK MUANQUIQUADRATEQUERED FLAGETEI MAYEK SIMILE SIGNEUNJOMNDEUQTY THOUSANDLINE FILLERTWO FINGERSRING LIQUIDHAWH HMONG GSUM -KHYILGUISED FACEROSS ACCENTOUTHERN TSETONAL MARK HAGGAR YAZHLEEP SYMBOLLEAF CLOVERHANG KHUDAMOVERSTRUCK OUNDED FACELD SCRIPT XHEATED FACEHEAVEN MARKLD POLISH OHEELED SHOELCE TSA CANOUBLE DANDAHIGH STROKEOUBLE ACUTETIGHT ACUTETRUNCATED AMIDDLE HOOKPERISPOMENIGAP FILLER-LEFT SYMBOLLEFT SINGLEGAYANUKITTATRIAN CAMELGE AT NIGHTMIDDLE STEMPARAKALESMAGENTLE WINDTRESVETLAYATRESS SIGN GHAIN WITH TRAIGHT WAWROKUTASTI ARONTHISMATAROR-BARRED GRAMMA SIGNGRAVE-ACUTELEFT DOUBLEAILLESS PHIAESHAE NYAMCK SEXTANT--OFF SYMBOLBETA SYMBOL PLUS NUNUZ PLUS MASH2AGAZ DAEG D DECORATIONUTH CORNERSAGONAL SIGNUTING WHALEBELOW RIGHT-MINUS SIGNCOMBINATIONXAGRAM FOR VYKA ABOVE VA V CHELNUCOND SCREENCONTAIN AS DIATONON DI0 FOOTSTOOLBANK SYMBOLDOUBLE AND  WRIST FLEXUSHING HANDACKED COMMABOTTOM MARKACTIVE SIGNACUTE-GRAVECHING CHICKDOUBLE SHADDOUBLE RINGDOUBLE MARKVAMAGOMUKHAWASLA ABOVE-COPPER OREWO TWELFTHS PROPORTIONDONG TSHUGSBLACK ARROWDOLLAR SIGNDOACHASHMEEAESCULAPIUSARM SPIRAL  I ZAPYATOYVISARGA ONEASE TO THE YEORINHIEUH OF FORTUNECURVED BENDXTINGUISHER OF FLOWERSARPEGGIATO DE KIKAKUI ARMS RAISEDZERO THIRDSUPADHMANIYAARAM GONDI DASH SYMBOLDALETH-RESHCROSSING URVARYS ICHOSCREDIT SIGNXESTES SIGNVE OF PEACEAWNING FACECROSSING BUUNIT DIGIT CROSSING ENCROSSING IMZIGZAG LINECROSSING PIWING NEEDLEDESK PERSONUNJO WYNN WCTION MARK CTION MARK- OVER IDIM  OVER BULUGATION SPACEATION POINT3 LONG NGGOXI RADICAL AMUSED FACEATH PRODUCTDENT EMBLEM WITH PLATEWHITE JOKER UPPER HALF WITH JACKSCCUMULATIONDYO CHRONON AND MACRONCELANDIC-YRWINKING EYECAN RGYINGSWITH GARDEN6 LONG NGGEDUATION CAP WITH DASIACARET TILDE TIMES ESH2 WITH CARON WITH COMMA WITH MAPIQCH AND LAMPCE OF PIZZA WITH TRILL WITH TITLO5 LONG MBOOBREVE BELOWUMAN FIGUREBZHI -KHYIL S ZAPYATOY SHOE STILEURRENT SIGN TACK BELOWBUMPY ABOVE WITH FLASHWE PALAUNG OUT INDEX  TIMES SHEVERAGE BOXHAAPRAANA CURLED WAWION BOTTLEASTERISCUSTAMAN SIGNASPIRATIONCURLY HAIR1 LONG MBE1 PLASTICSTIMES SIGNING-SHIFT OLING FACEC WITH DOTGUA PI MAOTOP CORNEROLON EQUALINHERENT AOUR FIFTHS WITH BASEUR YIG MGOCROSS MARKPPOPOTAMUSBA SATANGACROPHONIC HERMOMETERATRICHISMAATTY WITH OUTHERN TAOUTER JOINVEL SLIDER OVER KAD5FFICULTIESROEZENIAN FINAL HETHPRALINEAR INITIAL RAAUTOMOBILEDA SATANGAUP NEUTRALUP OR DOWNEUTRAL YERTWO THIRDSTWO SHORTSSYLLABLE MAR ECLIPSEHAN DIGIT DA PLUS HAOANDAKHIATIXTHS DISHEVERSED PED WITH DOTT AND BOLTZH DIGRAPHNTITY MARKNTO SHRINEKAI SYMBOLKA SATANGAK2 PLUS BUNUMBER TENTYPE COLON2 LONG MBOHAMZA MARKJONG TILE ISMUTH ORERING THUMBITH DIGIT IT MBAAKETF SHE-GOATYEH BARREE OF DHARMAHEAVY BEATFAHRENHEITOF HYGIEIACY MESSAGERING ABOVED KEYBOARDCAPITAL ETTAIL GLASSTING HEARTURIPIGMENTTWENTIETHSCIRCLED CAGBAKURUNENICAL TAPERCISIVENESS WITH PLUS WITH RAINPEDAL MARK-LUE KARANTRETCHED C POVODNAYAI ARCHAION SCHROEDERBLACK FLAGGAS BZUNG OPEN SHELF WITH LOW IED SHRIMPGANDA MARK PLUS SHU2IDEOGRAPH IDDLE MARK WITH PAGETHAPASCAN GOLUBCHIK ICK FIGURETHDAY CAKEHREE ABOVE WITH TAILGHT LIFTERHOOK ABOVEBOLD SHAFTBSTRUCTIONROUNDED ERORTHERN TAOSSED SHEI WITH TICKBROKEN BAROSTAL MARKHOTIC HOOKUSEL HORSEGGRAVATIONOTING STARTRESS AND GGING FACEURVED OMETTHMIKON N ZAR AMULET WITH RINGTREFACTIONRKING FACEOROME SIGNHUNGARIAN BLUE HEART RESUPINUS RGYA GRAMGREE SLASHFORMATTING WITH BELTCHAD RTAGSUPPER HOOKCH BALLOONILE FOLDEROUND OMEGAROAD OMEGACOMPONENT-COMPONENT TEMPLATIONIKRON ISONZEIRO SIGNINDU BELOWAYER BEADSYMBOL AIVAINDEX BENTOMMA BELOWPOUND SIGNGIMEL-HETHON MEDIAL FOR RECORDRUPEE MARKPOLICE CARPASSIMBANG-SHAPED HAUR CORNERSPLUS ERIN2TRIPLE DOTTESE CROSSRSI SYMBOL WITH EGGSPLUS BELOWG MUNDARI UTH OR SPYIGATURE OECHECK MARKIGATING RAOP NKAARAEGAGE CLAIMRUDIMENTA FRONT WALLTERNATIVE FTOGGOS OUCOLATE BAROON LILITHOON SELENAUR HUNDREDBELOW LEFTPLUS NAGA AB2 TIMES ENS SYMBOLABATA TREELEFT HEAVYLTIC CROSSXED BICEPSLEFT GUARDUBLE DASH SHMIRI YEHENTHUSIASM5 PLASTICSRESH BELOWEDESTRIANSLEFT SERIFACE FILLERDIATONIKI LOWER HOOKLEFT-HAND LPAPRAANA ENETRATIONMOTORCYCLEALEF LAMEDALEF WITH EEKING EYEALENT SIGNLEFT LIGHTLTERNATE URAGGISMATASSANGARAEAED FINGERSED FIGURE-MONOGRAM BRIGHT SIGNMONOFONIASA PLUS KURNGUAGE TAGA PLUS IGISSANGPIEUP AND KNIFEUNKIA SIGNMADDA MARKSELINE ESHWITH STRAWWITH SPOONM STALLION3 PLASTICSNGLICANA WLE-DELAYEDALLY MARK  AND MOUSEA TANG LAILE LETTER MONTH SIGNMONOSPACE SS OF MILKWITH WINGSEONGCHIEUMN NGGEUAETRED DRAGONLINDRICITYLOGICAL ORLIMITATION4 PLASTICSLIGHT BULBELT BUCKLELIGHT BEATNDA PA NJILHAG RTAGSNAKE BELOWRECIPITATESMILO SIGNLLOW HEARTEIGHTIETHSAEDA-PILLASPACE MARKSHARP SIGNNANGMONTHOEICH STARKNASPIRATEDRDHACANDRALEK ATTAK SGOR RTAGS DRAWINGS SMALL TAH LENDED YUSDIGIT ZERORIGHT HOOKAKKHANGYAONDU TEMPLERCHAIC KHAWO SHORTS LGIZ EOLHXLONG FINALAILED BIRDDIRGA MUREW OR MODELLONG OVER LET SYMBOLLONG TSHEGADDA WITH DOUBLE BARADAK BINDIY AND RICEQUISH QUADRHO SYMBOLSTRAL SIGNU2 PLUS BAUMAN EARTHSE-CREE SKKRYZHEVAYAEARLY FORMEARTH MARKANGKHANKHUDED PERSONUAM TSHOOJRGE SQUAREMILLE SIGNSIXTEENTHSRGE CIRCLEANDHI MARK KABA TENU2 PLUS ASHETTA-PILLAMEEM ABOVEVIE CAMERAMEL SYMBOLU CIN HAU E PLUS SUMWING HEART2 PLASTICSSTRUCTION SBUB -CHALSCAN LINE-STROM SIGNME PLUS ENEQUIHOPPERUM ROTUNDAKINDI MVOP LATE FORMNOTE WITH ANGULAR TO7 PLASTICSUP HARPOONEBENSTIMMEWHOLE NOTE AND ARROWLACK JOKERUARDEDNESSMINO TILE VIOUS PAGEST-FEEDINGST PALETTEREVERSED ISIDEWAYS IWHITE HAIR AND BREVEWHITE FLAGMALL ALEPHLANE MERGEDUOUS TREEXHEEJ CEEV6 PLASTICSLA USED AS AND ACUTEZU OVER ZUR2 PLUS SUMHANCHOLLROTATION-CAPITAL QADMA GDANHWAZ EH EHINOCEROSMETOBELUSCAPITAL ISMALL YUSMBROIDERYCAPITAL DLOND HAIRURNED GANURUZ UR UWASH TAILHARACTERSHARD SIGNMAEMGBIEEOUTH WINDOUT MOUTHBING CANE-KHYUD PAWING STARIALECT-P MUKPHRENGBITE LIPSHIMA SIMAIA SYMBOLBKHASIAN I PLUS LI TIMES UDMRACHNAYAOW KAVYKAM HE-GOAT5 CYPERUS TIMES HAMALL RINGBOTH BENTOURA SIGNHI SYMBOL TROMIKONOVER GAN2HOT SASAKSIVE FACEACE NOTE OTAL SIGNLOWER DOT5 LONG JOTIMES PAPABOVE TO BRUL SHADTIMES NA2HEADSCARFURNED AYBLVIN SIGNURLY LOOPRPORATIONCANG TE-U-AMMONIACA PLUS NAORT-TWIG-ORTH WINDZ DIGRAPHLONG TIP ADEG ADEGBO BAIMAIWITH FACE5 BATHTUBBO GYFU GOVER MUSHHREE FOR HOOK MARKHIYYAALAACARTRIDGEMARK SHADMARK CIM STAL BALLTANDSTILLVISARGAYATAKHALLUSLACKFOOT OF STIMMEIRST MARKNING SIGNAS MEMBERVINE LEAFISEN-ISENTABE SIGNL ME HANDYEH WITH ANEROSIS ODIASTOLESTEBASKETKYO TOWEROKED HEADVOETOCHIESEMICOLONNIGGAHITANIGHT OF VOCALIC RINNYIIYHESSANGSIOSVELOPMENTNIHSHVASAOKOUFISMAOKED TAILNO TELEIAATTACHED LARGEMENTVER LUGALXHAUSTIONS DIGRAPHATHAMASATLAN SIGN VERLONG AANTHAKHATKING BOOTVEUAENGAMVIGINTILE2 GARMENTJERUSALEMNVERTED RANSKRIT SANTAYALANNSERT AT NUSVARAYAKEMPHRENGAOS ICHOSK GESTUREVICE MARKNTERPRISENTESSENCEKA- SHOG NTRACTIONKAMEYTSA YEH ABOVEOCCLUSIONANG CITI ANGGEUAETKU RU KHA247 DIPTET ON BONEITRA SIGNT OF MEATY BLOSSOMKSTREPTON1 CHARIOTARM CLOCKARISTERA YEAR SIGNIVE-PULL-IVINATIONY-FOURTH ARCHAIC MY-FOURTHSSTRELNAYANDAILING WRINKLES IGH HAMZA-STACCATORTER MARKIGHTH ASHAINTBRUSHAISED DOTBEER MUGSWRY SMILEUTRA MARKSHAB CEEBRTS MEDALUURDHAJA SPIRITUS UVUZHAKKUIGN NUKTAIGN SAFHAIGN TOMPIOO DENNENAJANYALANBASE UNITIDEOGRAM NA KHONNALLABLE OM-LOW TONEICE CREAMLLABLE B0SOF PASUQ-MID TONELIVERANCELITTLE UPLISSANDO BICYCLISTBIAL SIGNXCITEMENTWORDSPACEIDEWAYS UAF PERSONAFFE FACELINE FACEYRANISMA LIGHTNINGNCLOSING OP HALF ONGER SHIPRWARI DDAALI GALI SEPTEMBERING CARD NGER ROOTING DOLLSING GLOVENG SANDAL3 PLUS ANOM SYMBOLING LANESING STONEAVE ARROWALPAPRANAINISHMENTNGUN SIGNONGSEONG ILE TILDETEH ABOVEAL RUNOUTILIPPINE ONG GRAVENFORZANDORUM CLEF-VRAKHIYA ONE THIRDONE MARK-TED PLANTALAYALAM LEFT TACK0 LONG LEVANAGARI LEFT RINGIN SQUAREON TEUAEQON GROUNDINAL NOTEINARBORASB DIGRAPHTRESVETLO APODEXIA RA OR RITREDECILEEEN WITH CHOSEONG  AND TAIL OF PAPERTUTEYASATDRAM SIGN RICKSHAWPROJECTORTUKWENTISCUBE ROOTDOWN SIGNZIR SASAKDOWN STEPCULTATIONENTRY SAWUNGLASSESUNGSEONG FEH WITH ULL BLANKED DIGIT D SALTIREUMED HEADRNEY PARAZAL SASAK AND CURLRO WIDTH CHAVIYANIDEPARTUREDUS RTAGS OF BLOOD FROM BARTRAIGHT UPENTASEMEZERO SIGNPENT SIGN GARSHUNIGITTARIUSED PLANETRCHAIC RAEMBEDDINGCRESCENDO PLUS GALFLAT SIGNCOIN SIGNEIGHT OF  PLUS GUDG IN HOLE PLUS KU3CLOSED PLUPPER DOTPPOINTED CORN FACEFOUR BENTELEGRAPH CONJOINERREAK HERE PLUS LALRDEL DKARCOMPLETEDELLOWSHIPUBSTITUTEPOSITIONSTTED STEMFROM WALLDOWN HAND PLUS TURFINAL NUNFINAL NGAREFORMED FINAL MEMUPTSTIMMEEFORMED TEFAIDRIN  PLUS ZA7 OVER BALZENE RINGPIDERY HAPLE HEART DIVIDERSRCHAIC IIUE MAEMBAPPOSITIONFISH TAILRED JOKERFACING UP OVER LUMREDNE ON  PLUS SAGEMPTY SET AND BELTZAKRYTAYAE AT LEFTETER SIGNRFUL FACE STREAMERDAD WITH DENT AND URAMAZDAAEAVY DOWNTO CORNERHAIKSUKI  SPARKLERQUADCOLONTONE MAI ERTY LINERIED FACEES AKURU EURO SIGNQUEEN OF ER BUBBLEP ELAMITEESAME DOTP DIGRAPHR PLUS RAERCIAL ATPANYANGGAETTI BALLROJECTIONETRASIMOUEBIT SIGNCHANICAL PAA-PILLAGRIK SIGNHALF SIGNQUSHSHAYAUR-DE-LISHALF NOTEHALSHELETGREATER YPADE SUITL-LAKUNATTO MARKEN NTEUM OTTAVA ING ROD XCELLENTAVY BANDDANTAJA OM NTEUMVE SASAKETA SIGN1 BARLEYING BELL OVER KGANE TREEKATAKANAKASRATANLESSER YAIYANNOIYIDDISH PRECEDESNEIFORM LESS SHANO SLASHOLLOWINGDIM GUNUSUCCEEDSUNG DASHNO THUMBDAMMATANFINAL THL POLISHETRASEMEFILE BOXNED FOODNAVIYANINCE SIGNFOR STOPBACKWARDUNDERDOTINAGARI WRINKLEDNOTE PAD LANTANGESH LOOP CURRENTCOUNCIL RDEL NAGSE WEDGEIMANSIS FLOURISHDDY BEARELEPHANTONE FOR COUNTERS OVER MULF RING AY-NIGHTOMANIAN ANS SIGNNRES TOSVERGENCEING BOWLWRITING ET SHOESSPERSIONW PRINTS OVER ZIY POPPEROMMA BARAZHAAKKUEST WINDQUINTILE KEMBANGDIT CARDLFWIDTH TTENTIONNOVEMBERSCRIPT GUNDERTIEY BEETLEUAREG YAOCK SALTEOUT BOXEVEN OF ER TRUTHUBJOINER NUTILLUYAMAKKANOCALIC M HANDLESSENTAGONPUSHPIKALEANING ARTYRIA ALLIANCESWIMMINGARSI YEHODESTONETAALUJA ERAL URNSQUEEZEDITA MFONARRIVINGOCUS OF UP TRUCKVESSEL BYBEYFILIJAVIYANIARCASITEUATRILLOEVERANCENINE OF NI ABOVEAR TSHESD BUBBLET NGGEETD CROSS QAIRTHRAARKLEAN LATION XOBOOFILIEXCHANGEAMS HORNSALT OF RILLIONSASTERN WTAR EYESEREVODKARASMIAN AST WINDEUFEUAET1 HELMETCURLICUEERDIGRISFEBRUARYOHM SIGNLA LENGARAUGHTS SANYAKA 3 ARMOURSUPERSETJUNCTIONDIFONIASATH MARKJACK OF PROSTAYAATEBOARDATE MARKATAKANA APITAL FPUN IYEK FACING PUB DAWBCURSIVE YENISEI TAI LUE RAMMA GGVOMITING ON LEFTVOLUTION OF YARNIS FORM IS WHEELIS-PILLAYESIEUNGNITIAL ZTURNED MENICIAN NG RTAGSKAIYARAAANC SIGNYER YAGHIRD MARKS OCHKOM ANTENNAMARRATANABAAFILILTRY LEGBLINEAR  RASWADITHOSCOPEBLED CAROVER BU PAKPAK EBLE SIGNABOAFILIPAIRTHRAHREE OF WO ABOVESMA SIGNCHINESE ROSHTHI CEILING  YUQ NAEBOL SIGNPALOCHKALUB SUITSHOE JOTTRI DISHOREHEAD THIOPIC LOW STOPHAGALL HLOW DOUBCANDICUSYRILLIC BINOVILEWBOY HATORM FEEDCAL DISCZWARAKAYLOZHITIERIYOOSAN-CREE TH-EM DASHOVER GA2BOT FACEGENITIVEUKEUTNDAOVER GI4I SHAKTISHKIR KATO-LEFT TICK IN BUNDANCECER BALLMON TIMEED BRICK TTUDDAG SCOTS S SATCHELDVANTAGEOTIFIED RESVETLYC SIYAQ DS-CREE  SLIDINGMIONIAN GREAT SAZAKRYTOEECH YIWNMALL AXECHATTAWAPAVIYANIMMATION EBEEFILIDUSHENNAGORAZDO HESPIAN MANDARINMANGALAMWN HEARTOT MBUAESHORT ERM ALLAAHCABLEWAYSIX DOTSA SIGN ATOWARDS 56 TURO2HOP BELLDVISVARAGLASNAYAULLS LEGROSSED OPENTAGONBRA FACEBOX TRAYME WITH HARMONICOVERRIDEHARBAHAYZWJ THAJAEN NYAMN-JOINERSNA LDANWON SIGNSIGN LAECOMBINEDDOCUMENT CEDILLATIRRUP RLOCATIVEWASH KAFCLIMBINGRED HAIRTRICOLONIGMOID SME BADGEBER POLECLOSED TV OVER MYPORROONBATBEIT FRAKTUR MEM-QOPHHAN-AKATTISMOS E-X BELOW TALENTSHALF GURE OF POO0 BRONZEEK ONKARNAMENNY 8 KANAKO PLUS DU PLUS DIOO TYPE NA METEKFRICAN D-KHIEUKHREATNESSUDAWADI TER FACELKULIZMYSOFTNESSCASSETTECK CHARTMY HOUSE AT DUSKGBASINNARSE DUNGLONG S TGARITIC BIEE FONOVER TIRLORRAINEOVER SAGOVER SHEICHAEAN BILLIONSEGORIAN  PLUS RUACKSPACE POLNAYALONG BAR-PHIEUPHSIFISTONREE MARKBEVERAGEMINGKALKOMBUVAKPAK WAMBOL B0ER THANLAMITE EAD ORETIVATE Y HEART9 CLOTHMEETORUEAVY YAKOQNDONECEMBERL SEGNODEAVOURMINIMA RDO RJE2 WOMANKYLISMAANGLED SIGN UDAN MARKKORONISERNIN AE DRINK7 NGGUAANGKUOQLAGIOS SEGMENTMARCATO3 EIGHT ISLANDXOPHONENJAEMLI9 NGGAAUM IYEKRA REPAAND END26 EYYYMERICAS KEFULASTERINGWIFRUITANDERERKUTAARU3 AREPALAK-050ST TUBEE GLASSMANCHU WIGNYANR2 GUNUMASSAGEY GREEN7 NGUANDYNAMICSEXTILEAD NECKLEUT KA BUTTONZQAPHA WO WAENLEYBALLWAZ EOHWO FOR SHIFT TWO MARKACTER TAELAENGSPRINGSLEK TOONESTED EN LEAFRAYANNALENGTH-NEQUDAAVYSOKO SOLDIERREATHY RD FACESHAKINGLIGHT XWORSHIPNAYANNARD DISK CHIKI UBUFILIAETMEUNNANCIALEL PUMPDISIMOUDIPLOUNLF FACELLYFISHEIGHT KDOFONONAHAPAKHSOV ROGLJUDIJE CER-WAED RICELAYANNAAM ALEFRESILLOALTILLOLYGISMASHORT ARAKHANGDRIL BUVOICINGLE LEAFSIDDHAMA -PHRUNIKAHITLASHES 6 NGGOOMAI SATA NAME 3 OMEGA3 MONTHDU NJAAMAAYYAA3 WHEELNG MASKUKKAKHARANGKEPENSHUETRARIETYDIARGONMUNGKAHSERPINAALLOT XDHALATHMRACHNYREREKAN3 SPICE5 NGGEEUN MEUT APLOUN3 SWORDWDRIVERALESMA GOLIAN VANESE BAIRKANVAPOURSYNAMIC POMOFO TORNADO PLOPHUHIUCHUS0 SPEARPECTIVECRACKERFLUENCEPAYEROKON FACEPAYANNA0 WHEATPOVODNYRIPPLE VAV YODOMERANGVAYANNA-WELSH IL DRUMONGONANBARREKHONG UEXCONTACTTSECHKAILLEANNCOPTIC RMUKHI PEGERMAFORKINGBUFFALOBAMBOOSIMILAR BULANCEFINAGH TIKRAMAAUNTLETOLAPUK OKRYTIEAULDRONTASHEELVEMENT-AU MARK SHAKERINNABARATH OF ATAEAN  WAAJIB OPEN-OASUTORUTTHACANVE DOT TCHFORKAY SIGNTAYANNAYMAIC LGRADUALAXIMATARY FACECHEINAPTTILIK PPROACHFINAL Y1 ARROWIBIFILITHIEUTHORCULUSIANGQI THESEOSBORZAYA-KIYEOKIC WAND-MACRONCHIEUCHGAYANNAICOPTERTRAINERBOURINGBIG YUSICYCLESCK LIMEHYAAUSHUSSYERUGHEUGHEORTIETH RAMBATPERVISEBOARDERTHKUQI ORKHON -CREE RI NTEUMGENERALI RTAGSRRECTUSBLACHKOPHUTHAOOREVMA RTHIAN CLOTHESGLAGOLI-SHIFT-COASTERTROLLEYPENGKALCOMING TRYASKAUYGHUR -THIRTYONTIEEN-TIKEUTIKHAHITUT TIME-MU-MO-OT NGOMCHEVRONTHALIYACLEAVEROT REPH WOLOSOPRENKHAIFIED EBREVIS BERRIESPLOYAN BERGINEOP MARKRISIMOUCLOSE E MUQDAMJIBWAY HEADINGCAYANNAVEW NOWSANGAN  MUOMAEHAYANNAUP MARK MENDUTP PIEETSANDHI CAP TENEULEUNGNUMBERSTYSCAPEQUARIUSJARATI T ASHESHAARKAAUP TACKYAYANNAUP STEPROGRESSSYNAGMADA FACEJAIN OMJAYANNAURATIONJECTIVESAMPHAOUP SIGNCANDRA JERAN JROKEN LQUEEZE DANESE KEUAERIURGLASSKHA YATSCOOTERESTIVAL TEDUNGOX BACKDANCINGURFACE OWILO SDAYANNAKKURUNIYA LAMPVILIK BVILLAINANGLONGANGOLATUP HAND LONSUMSUKUUDO MAELEE2 OLIVEAPEZIUM STRIDEHALANTAYAH LI YANMAR ETNAHTAKARO BANTAINS HANGUL OW ALEFSAYANNAKAYANNAOX LINECABINETISIBLE CELSIUSPURPLE PUSHPINTA MARKOVER ANS-SAJDAITALIC OCTOBEROCTAGONFATIGUEASH FROOGDIAN TAISYOUPANESE HEXAGONF SASAKOFFICEROF SOAPFAYANNAASHTRA OUT HUBPANSIOSAS SIGNYELLOW IVE OF ITON RATALL AASA VAH ARRED BD MADDAD MOUTHPALLAWAPSTICKSARDNESSOUR OF OVER DU OCLOCKARRED OHI SIGNPTHAHA  SLOWLYF DAVID5 WOOLMPLINGROCKETOSETTE6 TREEYSTICKOW TIE8 HOOUPECIALPBOARDPENCIL6 NGGERICORN7 MBEEPEAKS OTTED-7 MBUU6 HUAN SPLIT7 NDOO6 GUEI7 NGONPEPPERSICKLE AGUNG7 GUANWN BOXPALUTAWN BOW7 KAPO TIKHYPWATCHS SHOENGGONGS TENT1 WINERAKLITODHADH3 NGGAOCIETYOCENCE MURDAQAMATSQETANAOBELOSSAADIY1 GOLDNEUME  EPOCHOITIC  EQUID1 HORNRIISAP1 NDEEOGONEKOFOUNDNGBAT PUFFEDNTIIMUSAUCERNTEVMANSUZ ANOKHUKNSANAQ KAPALNOZHEKNOWMANNOR BUZHITSA LELET3 GBEEXIMIZEXO NEONIRUGU3 HEEIRACINGRAAKANYAKASHNISTER2 KPOO MELIKNIZKO 2 MBOO2 NGGUNKNOWNNTOGENOPEN PPIRIT WO OF YRENE OPITSARSENICN DASH-IEUNGOPEN D-PIEUPRSHANAN YANGRSIAN N-NISFOOPED RKAANU QATAN5 MERISHMAAMRENGTHRISEMEREMEDY-HIDET-HIEUHPICKET00-1024 MUANWRENCHON KEY4 KPEE DIPLINDA TA4 DEERNCH FR4 DARTYIN-DORBITSAX FACE1 GBOORAVEL-4 NYINOOMUUT CARETNACLESSHAYIMONOCLEWORKERYOMBO 0 NGGI0 NGGO4 NJOOPOKOJIPOMMEE4 NGEN0 NYON0 NYUNAPYRUSSWORDSGBASAQCKNESSGEADALGEDOLAARADDOSYNAFIARBUTAGGLINGKAYAH CODILESUCKEDCLOSETIYANNATRIKE APISMASURANGSURED APLI MGANGIAITABLEISSIMOISSHARISSANTARSEOSCHESS GLAZ HCHEMA TAIKHUIRINGUGNANT CHURCHIXTY PSYOUWAGHAMALIX OF TRAPLIVERTKAGHETTIGHEUAECHO CHCHIRETT NJAQITULUMITHER LAMADHLASTONFAMILYFATHA LAMEDHCUPPEDTUXEDOSSLESSTURBANCUMBERFF OF VIRIAMANCHORLAFRONEVENTHEXHALEEXISTSSTANCEEYANNAUPNAYAF CLEFLD MAPF MAREKNIFE KLITONANIMALSTROFOKILLERVILIANKEYCAPFORMEEFORTISKE PHOANUARYANGKATSTANCYKY WAYKUSHU2KTIKO STLERSKRISISSTOLI CREASECRAYONBETAN BGBIEETIMATEIDE ESHEUAEPHIBIT THAKKUC CLEFIB YAMIASMA BEFILICALATETERON IGGLESTEUWENHEISEIURNAMAIEVAN HERMESHO HOIHUMBS BLINK HIVETEBOFILIHUR PAHORT IBOWTIEBISCUSBISHOPHIMAHUTIKENOI MAIMI HOOKHINGE BURGERAUTUMNCEVITUTAU ROINHALETAUROSINSHIPGS-PA INGAATGURAMUTAMINGASHGABCHEIKHGO NGUGOBLINASSINGGORGONTOPBARTARGETGRASP ATTERYATTIC CHAMKOCHADINHAMILOILLAGETIRYAKILBOATCARIK HAMEDHHASHKAUZEIROUYANNAHE MGOUUMISHINDHI TE TSEINCUNXINAGMATE USEIN YEHBAFILICATAWACASTLEHALF HBANWA HAM AIENTIMAACINTHENIKI WBERRYDICINEAASHAEEN GHEUNGAAMWEORTHEMPUS EMASTIA-KARAUBLE XM BOARM BULLAGOGUEUAEQTUUP BOWDE DOGLIGIONLIGON SOUNAPAFFIX ERMATAUANGXIELLITELISHA AESURALITIKIDERMA LLIPOPAEMMAEEPACT DGEHOGLONG EEENTH-9 NJEE9 MUENED ICEED CAPDUCEUSME DIEWINDOWDVANCEMECHIK8 NYEN8 NYANEAHMUK8 MBEEE WAVESKAPI MADDAHMADR MUCIBLEUDARKAA HAAMEIGHTYSIXTHSDIESISDOKMAIMALGAMMALL FUGGAGEMANYA SPLIT U MBITSPADESLEVEL-ET KUTAKEUAEAJANI AK-668AILUREEUREUTEUNYAMAKABATEUAENASPITALSPATHIEU MBUESTAN AGRANTDAGGERZSEKAEIDON TELU CAPOEGL HDOTS-EGALIEGIONTINNEHAYINCANUSHATHIURINEFAAFUHASE-TUUMUFAIHUTIPPIHANNAEUAEM COATPSILIEKEETPAATOCCEPTCCOLIHADDATON AHAALUCECAKCECEKROGOMRDIONUBUTSGVANGTKAANHALQA TABSPTUNERONOSFEARNHALA TMAAUEISMACAUDACAUSEUDAATHAINU CHWVRIEENRILLAHISTIDWICHHIRIQTIGMAHIUTHRIEULEURAEEBALLOUNCEHIMELOTHAL MOODZYGOSBREW BSTERE GEEOTERI ALLOHOLARHOLAM AMPSEAGLERICEMDAIC RELAAUMMERF COWREPHAF EWEUKARARELA CAKESREIWACAKRAF SOWEESHIUGUSTREGIAURITYURTLEQAAFUEYBUSDSMANCALYAEYYALHI ROTILESCAANGHETHECKAGEET TUFLAGSPITERDEPTHGAZE-DENCEUNOO RACHYCKTIEGAMANPPAGEGAMALGALGA ICONGESH2TTOCK FUJIUNITYCHULA GORACHUTEDELTACIEUCRAIDA HAA PI RORITSIGEAN UBITODESTYTSERER-RUB KAWIDATUSTSEEBPOLI FLUTEFORCEU U UPONSEDBOATQUIRYESHE3 LACAESO E ILUTPLHAUCLIFFTRIOLGADOLCLONEZIDI FLICTEOPLEERINECLUBSERKHAPLUTAPLUTOPMUNKTSADIFSAAQPCHA EMLJAPASEQPATAKGORGIUNGBAPEAN UQUETTORSOGOGI TUEUMCTRICDLINGUBURUGULUSDKAR CEREK DEKARCHIDEMAKEZHAINCHADACUBEDEMBICCHESTZILDEENENGPEPETENJETCHIMEGHULUCROWNCHOOICHOOLGHNUTTTORUENUTOEO-EUPEN-PENANOEVAL  SARIPEITHRATERTOYORCHERYRASHATRACKENDEPTRAIFALLEY3 RA3NGENTALGARLEASE3 VEE3 WEI3-VASAMEKHLATIKNIEUN3 NDIVRIDOSENTONGUE LAYARALPHAALOG NGMANALLI AGMA 4 LEE4 LOO4 MBO4 MONNCORA4 NDO4 KPUWAQFANASHI4 TOO4 VOOSHANGSPINE32 JELENISVZMETNENOENEMKAWUAETNEGARWU3184 ABBWAAVU4 GBI2 PTEVIET NSYONKBALLNSUAEKERETNSIEEKESH22 POOKHAPHANNON2 SEEKNOBSNTXIV2 MBUK-0202 NJANUENG2 NJUKO LASUKUNNTHA KARORSAUILLAGUSLABORSEGOL3 BOO3 FOONNAN 3 HIN3 HONNINTHXING LAMDAVITAESTORMSTNUTSOLVEANGELKURONXYOOJKUSMAKWAENXW XWXTRA-L NETL-JUZ7 FUAMINDU9 WVE6 WEE9 WVA9 PU26-VASMALONWIANG9 NUNMIEUM7 GBE7 HUN7 JEEMAQAF9 NON7 MIN6 KOOMAI KMAIZESHTINMMOTHSICLE9 NDEMISRA6 RA26 SIA6 SOO9-VASMINGO9 YEE6 TA28 NWAWISAD8 RO28 FEEWINDUMEPET8 GBUMENOEMETEG8 NANSILA3MELON8 MANMEIZIWINJA8 KPOMEEMU8 KPE9 DEE7 NEN9 NDA9 MUN7 NIN9 MEN7 TWE9 KUAWIDE MADYA7-VASMI RO8-VASMETRYLOUREADULTLOMKAWATTOLOBE ACHKA5 KEEMUOY NABLA4 WOOSHAR2SHARA4 WUISHARUNADA 4-VASAEREENA POAEMAELOAN A UNAMPIREWFISHMPAREA YUE5-VASLWAY M RAMWLINESKATEMAAEHMAALA6 GBAMACUSAAMAEWBOAT5 MBI5 NDUMUHORMUCH 2-VASSHOOKMSHAEMROCKLURALAADHUAWAY IAUDAOMBIERRITOIARDS0-VASRYASOAVROSBISAHVATOROMMAEOQPENRUSH ICHONINTHUI KOIIPINGIPEHAATAF OJKI ATIYAI-RESBAARUOKARAOKEE THING1 FAN1 DWEINNA AUTHSOLD XYIZET0 DOOUTEUXVAAVU0 BEEBASA RULAIIKURUBASSATENSE-RINGIKARABENDEUTIESRUHUAIHVUSRUDAA-SIOSBEITHOPLETBACUS0 OILBALAGIMMERICRONIMMA 0 MANIMGBABHETHSUTUH0 JOO0 HEE0 HANBHADH0 GEEILVER0 GBORUMP-0 DWOILLU TEGEHOCADO2 HENORUTOARERU2 HOOYECEKJERVIOBYLAOSTERITUALHOUR HOTELITHI YSTERO KAIJANG SALADO BOXO PLAO RUASAKTAO ANGHROOMYURIISAKINNZEUMYAMOKBOOTSROWN BORZYAR AESADHEJUEUI2 KPIASAR HUMP -BEAMSURYAHUTA ASEIAJUDUL1 PEE1-VAS2 MBA2 MBEBLAKOIRACYASPER-ALAFISTLE1 YOO2 KPA1 WVIJUDGE1 TEEYENAPAPPLE1 TWOTFONZZY ULU UTTYSIKIROUTSLURRT TRSO-UHURRROIYWAAUMEAUNAHUGU URUSRPSESINKRIFYSHTAUSA UTANUTAESHYAYUKUZIZ2YUDHUNAVTURUVIYOSELFTUKISEEVZELOSEENVEDEROARVOS XEIAZETAROA YEUXTWAAXEYNVEUXVESTZATAVEUMSUABVIDAVEYZSA-IVUEQZAYNYAWNWAW ROOKSOKAZIETRUNGWDERRUISRUKUWAAKWAHAWAETTAXIRUTUTZELSEYEWULUUON SONGRUSIHEYSHEENHEEPHEROHERUHEYNHEYT2 VIHHWAHID HIINHILD2 YAHAVEHAYN2 NOHUB2HUEN2 QOHWAA2 PEHSHU2 L22 KAIANOIARA2 BU2 SOHMI 2 ROHOKEHOM HOSTHSDA3 MEFIRIFITAFFIN3 LE3 L33 KU3 MUEURI3 YU3 TAEZZO3 RI3 PA3 JOFAIBFAST3 MIFEEMFETHFEUQGORTGIDAGIEAGIR2GOALGIBAGROMGRU 3 A3FWAA3 JE3 EEGAMEGAMLGEDEGGWSGHOMGHWAKMA 1 INKOBAKOETKOKEKOKOKPEN1 HAKWAA1 GA1 DU1 DO1 DALAANKALIKAPHKCET1 KU1 KIKICKKINILFERLFIELIFULIUMLIWN028BLOLLKAKOILETILUYINORINY IPODIFATIGERIQAAIITOJOT 1 YIJEONJIIM1 VU1 SU1 SI1 SA1 RA1 QI1 POKAAFKAD31358ISI ARA3ARGIARUM7 BE7 EIAPAQAPON7 DD7 DA6 JO6 L6BAGSBALD6 LABASH6 JEBAYI6 HIBBIT6 HEATIMATYAAN X6 WU6 SE6 RU6 QA6 PO6 NAAAMU8 FO8 EN8 GU8 DU8 BO9 TU9 PA9 PI9 JA9 SE9 SI9 SO9 TA9 TOAFEL8 WE8 SU8 QEA IE8 PI8 KOA-HA8 JIALDAALTA7 JA7 VOAHAD7 ZA7 TI7 RE7 LU7 KI5 BB5 AU5 A2DZHAEAAEEEEEEENG4 ZE5 GI5 FEDGER5 FADIM2EESU5 DE4 DOEHEH4 WIEETA4 WA4 TU4 TE4 NEDEAD4 L44 KEEIPTEIRTEIWS4 FIEKAACASEBUOYBUNGCAYN5 WE5 WA5 VECHAU5 VACHEHBETH6 FUBERD6 DIBOOKBORE5 OOCWAA5 NU5 MO5 LIDAGSDAIR5 JUDDAKDDHI5 INCORE5 TOCOONHUVA5 TECRETMUINMWAA0 HOMVAT PODPLUGPLUMOPUSPOLOMUAS0 BINUUNNAG PHABNWAANAAUPHINORIIORAXOONUQASRMMU2QEF ODLEQHAU WEBMLYAQOPAO-YOOPOD0 JUMPET0 KOPRILNUNGOOTHOBATOBRO OHMNSHENHAYNGA2NSUBNNNA-ONEOXIANEO NJAMNOWCNPEANRUA-RAY-UM NCERNTOCPEEPNANANAM2PEUXOUBTPARDPAWNNTAANDAPPEEIOJOD0 NIREIARAFELUMNOJI MARULUISMARY0 PUMESOLOVO R SOFUMMFAARGU20 WI0 SAMIIMMIIN0 RA0 ZO C D0 YECIG5 UUEZ4 ECAICAHCA9UDYEIEDJAUMXUOPE80DA2D70D42RQACWIWOQDE64-0UKYZOOZJEZORQUFVOKVOYAL2VUUQARPUQQ00QIFQIGVNOQOFQOTA7A8 IZUP9E39818F0REXWI ZZEAG-72CWAU8 AXAUBIBB895-0BXGBUD550B575575B66D7POQAZUVAUAYD6-0AWX620AUJ155YOTIMNMU 14DI-IY00HOJHOXIHI18D0 E0 U0B9SJELK LJE0-0LULLFAYIT04ASUS1 XSUUJHAK00IWR1211-21-0JAHJAWJEUMAUKUGKAQSIIFOMOAYFLYTUJFAJ3 D3 IO YES-X0031CXANEOWOGHXEHEYKF14F8COIX3-0305NII2-020BGVENIBHAQXWVXWG2532DD3638G3830929171648401F1D494B4E1AL0HZP0VDC09990QWG0F3R7
NoDuplicate
redirect-only
NoInstrumentFunction
-faddress-space-map-mangling=
NoMicroMips
-fsanitize-coverage=8bit-counters
NoMips16
-faccess-control
NoProfileFunction
--offload-host-device
NoRandomizeLayout
NoReturn
-fsanitize-coverage=[func|bb|edge]
NoSanitize
-faapcs-bitfield-load
NoSpeculativeLoadHardening
NoSplitStack
Text
NoStackProtector
-fsanitize-coverage=[func|bb|edge],[trace-pc-guard|trace-pc],[control-flow]
NoThreadSafetyAnalysis
Only run the preprocessor
NoThrow
Reuse stack space around some argument temporaries
NoUniqueAddress
/__config
NoUwtable
-fsanitize=address
NotTailCalled
-lshell32
OMPAllocateDecl
-fno-discard-value-names
OMPCaptureNoInit
Comma separated list of files containing a new line separated list of API symbols to ignore when extracting API information.
OMPDeclareTargetDecl
platform
OMPDeclareVariant
OMPThreadPrivateDecl
OSConsumesThis
-D_REENTRANT
OSReturnsNotRetained
interceptor
OSReturnsRetained
 Line 
OSReturnsRetainedOnNonZero
sse4a
OSReturnsRetainedOnZero
/external:W1
ObjCBridge
-fsanitize-coverage-type=1
ObjCBridgeMutable
ObjCBridgeRelated
--offload-link
ObjCCompleteDefinition
/external:W3
ObjCException
-fsanitize-coverage-type=2
ObjCExplicitProtocolImpl
verify-debug-info
ObjCExternallyRetained
avx512ifma
ObjCIndependentClass
this,arguments,all
ObjCMethodFamily
-fsanitize-coverage-type=3
ObjCNSObject
--extdirs
ObjCPreciseLifetime
Use the new offloading linker to perform the link job.
ObjCRequiresPropertyDefs
avx512vbmi2
ObjCRequiresSuper
covered
ObjCReturnsInnerPointer
-pushpop
ObjCRootClass
ObjCSubclassingRestricted
/execution-charset:
ObjCSuppressDirectProperty
atomics
OpenCLIntelReqdSubGroupSize
 Line *
OpenCLKernel
-fsanitize-coverage-trace-cmp
OptimizeNone
netbsd::Linker
Override
-fexperimental-sanitize-metadata=
Ownership
-objc-isystem
Packed
core2
ParamTypestate
-error-on-deserialized-decl=
PatchableFunctionEntry
ubsan_standalone
PointerAuthStruct
PragmaClangBSSSection
Use the new driver for offloading compilation.
PragmaClangDataSection
silvermont
PragmaClangRelroSection
ubsan_standalone_cxx
PragmaClangRodataSection
  File 
PragmaClangTextSection
haswell
PreferredName
--encoding
PtGuardedBy
stats_client
PtGuardedVar
rcrt0.o
Pure
Enable cmp instruction tracing in sanitizer coverage
RISCVInterrupt
--entry
RandomizeLayout
stats
ReadOnlyPlacement
DIA SDK
Reinitializes
ReleaseCapability
--emit-static-lib
ReqdWorkGroupSize
__sanitizer_stats_register
RequiresCapability
/emit-pristine-llvm
Restrict
Specify comma-separated list of offloading target triples (CUDA and HIP only)
Retain
k6-3
ReturnTypestate
-fsanitize-ignorelist=
ReturnsNonNull
Make the jump table addresses canonical in the symbol table
ReturnsTwice
opteron-sse3
SYCLKernel
-emit-module
SYCLSpecialClass
-fsanitize-system-ignorelist=
ScopedLockable
invalid config
SelectAny
-fexperimental-optimized-noescape
SetTypestate
openbsd::Assembler
SharedTrylockFunction
-tsan-instrument-memory-accesses=0
SpeculativeLoadHardening
-cdecp0
StandaloneDebug
geode
StrictFP
-emit-llvm
StrictGuardStackCheck
-tsan-instrument-memintrinsics=0
SwiftAsync
-emit-llvm-uselists
SwiftAsyncError
No effect
SwiftAsyncName
SwiftAttr
-tsan-instrument-func-entry-exit=0
SwiftBridgedTypedef
callergraph
SwiftError
f16c
SwiftImportPropertyAsAccessors
-emit-interface-stubs
SwiftNewType
-tsan-instrument-atomics=0
SymbolMetadataFootnote
--dependent-lib=lib
TLSModel
Enable div instruction tracing in sanitizer coverage
Target
Build ASTs then convert to LLVM, emit .bc file
TargetClones
-hwasan-experimental-use-page-aliases=1
TestTypestate
clang-linker-wrapper
TransparentStepping
ptwrite
TransparentUnion
Generate machine code, but discard output
TrivialABI
-asan-detect-invalid-pointer-cmp
TryAcquireCapability
Emit Clang AST files for source inputs
TypeTagForDatatype
TypeVisibility
TypedMemory
-asan-detect-invalid-pointer-sub
Unavailable
Uninitialized
waitpkg
UnsafeBufferUsage
Weakly link in the blocks runtime
-fsanitize-coverage-8bit-counters
Unused
-asan-instrumentation-with-call-threshold=0
Used
-nologo
-functionpadmin
cl.exe
UsingIfExists
-fno-dllexport-inlines
Uuid
SceUBSanitizer_nosubmission_stub_weak
VTablePointerAuthentication
hwasan-abi=
VecReturn
-lSceJmc_nosubmission
VecTypeHint
WarnUnused
-fbasic-block-sections=
WarnUnusedResult
+tagged-globals
WeakImport
Specify that backslash in string introduces an escape character
WeakRef
Could not find expected : for simple key
WebAssemblyExportName
WebAssemblyImportModule
-fno-builtin-bcmp
WebAssemblyImportName
Found invalid tab character in indentation
WorkGroupSizeHint
Leading all-spaces line must be smaller than the block indent
X86ForceAlignArgPointer
XRayInstrument
-fno-builtin-memcmp
XRayLogArgs
-fautomatic
AArch64FarAddressSpace
-opaque-pointers
AbiTag
Set assembly output file name (with /FA)
Alias
-fno-builtin-strncmp
AlignValue
Null key in Key Value.
BuiltinAlias
Unexpected token. Expected Block Entry or Block End.
CalledOnce
Enable EH Asynchronous exceptions
IFunc
-fno-builtin-strcmp
InitSeg
-fast
LoaderUninitialized
not a mapping
LoopHint
-fastcp
NoBuiltin
-fno-builtin-strncasecmp
OMPCaptureKind
unknown enumerated scalar
OMPDeclareSimdDecl
unexpected scalar
OMPReferencedVar
-fasm-blocks
ObjCBoxable
-fno-builtin-strcasecmp
ObjCClassStub
-fcuda-approx-transcendentals
ObjCDesignatedInitializer
-fexperimental-relative-c++-abi-vtables
ObjCDirect
 system headers
-fno-builtin-strstr
cortex-x1
ObjCNonRuntimeProtocol
Disable OpenMP support
ObjCRuntimeName
process_dependent
ObjCRuntimeVisible
-fno-builtin-strcasestr
ObjCSuppressDirect
<W group>
Include code completion results which require small fix-its.
-disable-pragma-debug-crash
OpenCLAccess
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
Overloadable
-fvisibility-externs-nodllstorageclass=default
RenderScriptKernel
-fno-builtin-memmem
SwiftVersioned
-dspv2
SwiftVersionedRemoval
abcdefghijklmnopqrstuvwxyz
Thread
-fapinotes
Attr
asan_ignorelist.txt
 Inherited
-fvisibility-nodllstorageclass=hidden
 Implicit
/openmp:experimental
TemplateArgument
Enable mitigation for kernel v-table exploits through null pointers
 contains-errors
hwasan_ignorelist.txt
 lvalue
device-hip
 xvalue
 bitfield
Use ANSI escape codes for diagnostics
 objcproperty
memtag_ignorelist.txt
 objcsubscript
-fanalyzed-objects-for-unparse
 vectorcomponent
Enable OpenMP support with experimental SIMD support
 matrixcomponent
LocInfo Type
msan_ignorelist.txt
 sugar
 dependent
c860v
 instantiation_dependent
tsan_ignorelist.txt
 variably_modified
string
 contains_unexpanded_pack
-fsanitize-coverage-trace-pc-guard
 imported
SCE_ORBIS_SDK_DIR
QualType
dfsan_abilist.txt
 parent 
-luser32
 implicit
 used
-fcall-saved-x11
 referenced
cfi_ignorelist.txt
 invalid
-fcall-saved-x10
 constexpr
Enable OpenMP support
 consteval
number-sign
 multiversion
ubsan_ignorelist.txt
 <undeserialized declarations>
CXXCtorInitializer
period
capture
C++ ABI to use. This will override the target C++ ABI.
 byref
share
 nested
-lto-debug-options=
<<<NULL>>> OMPClause
Enable PC tracing with guard in sanitizer coverage
Try to cache full compilation job (-cc1). Ignored (for now) without -fcas-fs.
Clause
address
 <implicit>
case 
equals-sign
default
Use the last modification time of <file> as the build session timestamp
 selected
pointer-compare
<<<NULL>>> Requirement
Emit branch target identification instructions for indirect branch destinations
TypeRequirement
File name to use for YAML optimization record output
SimpleRequirement
left-square-bracket
CompoundRequirement
interface-stub-merger
 noexcept
-fsanitize-coverage-trace-pc
 satisfied
-fbounds-check
 unsatisfied
kernel-address
None
ifnot
rtfonly
Indeterminate
Use the experimental C++ class ABI for classes with virtual tables
Int 
libclang_rt.profile-x86_64.a
Float 
hwaddress
FixedPoint 
-ffpe-trap=
Vector length=
REG_EBRACK
elements
-fcas-fs-working-directory
ComplexInt 
kernel-hwaddress
ComplexFloat 
Set the maximum number of source lines to show in a caret diagnostic
LValue <todo>
The format used for serializing remarks (default: YAML)
Array size=
REG_EBRACE
Struct
memtag-stack
fields
-ffree-line-length-
Union
REG_ASSERT
-fcall-saved-x8
MemberPointer <todo>
memtag-heap
AddrLabelDiff <todo>
+dspe60
<invalid sloc>
x86_64-apple-darwin22.1.0
lib/crt0.o
memtag-globals
<M group>
apple-a11
Option to pass to the CAS plugin.
<not a builtin command>
memory
 FPContractMode=
<dir>|auto
 RoundingMath=
 ConstRoundingMode=
unspecified,standalone,objc,swift,swift-5.0,swift-4.2,swift-4.1
 SpecifiedExceptionMode=
kernel-memory
 AllowFEnvAccess=
<O group>
 AllowFPReassociate=
 NoHonorNaNs=
-%%%%%%
 NoHonorInfs=
fuzzer
 NoSignedZero=
Apply global symbol visibility to external declarations without an explicit visibility
 AllowReciprocal=
 AllowApproxFunc=
<tree>
 FPEvalMethod=
fuzzer-no-link
 Text="
aapcs
Program could not be executed
 Name="
 "\$
 RenderNormal
thread
 RenderBold
<T/e/s/t/u group>
 RenderMonospaced
-fgcse-las
 RenderEmphasized
Can't redirect stderr to stdout
 RenderAnchor
leak
 Arg[
%-2d
 Attrs: 
-fconstant-dictionary-class=
alignment
 SelfClosing
 explicitly
 implicitly
 Param="
array-bounds
 ParamIndex=
<W/R group>
 Position=<
" CloseName="
rv64
 null
bool
 type
rv32
 decl
-fdebug-dump-provenance
 nullptr
REG_ECOLLATE
 integral 
builtin
 using
-finput-charset=
 template 
__builtin_amdgcn_dispatch_ptr
 template expansion 
__builtin_amdgcn_kernarg_segment_ptr
 expr
DECL_CXX_BASE_SPECIFIERS
 pack
 has_init
DECL_CXX_CTOR_INITIALIZERS
 has_var
__builtin_amdgcn_workitem_id_y
 has_else
float-cast-overflow
 side_entry
__builtin_amdgcn_workgroup_size_y
 gnu_range
DECL_EXPANDED_NON_TYPE_TEMPLATE_PARM_PACK
 adl
__builtin_amdgcn_grid_size_z
 part_of_explicit_cast
float-divide-by-zero
 non_odr_use_unevaluated
s-memtime-inst
 non_odr_use_constant
DECL_CLASS_SCOPE_FUNCTION_SPECIALIZATION
 non_odr_use_discarded
Assume thread-local variables are defined in the executable
integer-divide-by-zero
ADL) = '
__builtin_amdgcn_s_sendmsg
 empty
DECL_OMP_THREADPRIVATE
__builtin_amdgcn_sched_barrier
 isFreeIvar
nonnull-attribute
 field 
__builtin_amdgcn_s_dcache_inv
 result_dependent
DECL_OBJC_TYPE_PARAM
postfix
-fno-openmp-extensions
prefix
nullability-arg
 cannot overflow
__builtin_amdgcn_fence
' ComputeLHSTy=
DECL_PRAGMA_COMMENT
 ComputeResultTy=
UZiUZiD*UZiUicC*
 this
nullability-assign
 functional cast to 
__builtin_amdgcn_atomic_dec64
 list
DECL_OMP_DECLARE_REDUCTION
 elidable
Use GCC installation in the specified directory. The directory ends with path components like 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Note: executables (e.g. ld) used by the compiler are not overridden by the selected GCC installation
 std::initializer_list
nullability-return
 zeroing
ffffb
 (CXXTemporary
DECL_HLSL_BUFFER
 array
ffff
 extended by 
object-size
 selector=
 class=
PPD_MACRO_EXPANSION
 super (instance)
Specify the default character set for source files
 super (class)
pointer-overflow
 catch all
__builtin_amdgcn_rsq_clampf
 Kind=MethodRef Getter="
PPD_INCLUSION_DIRECTIVE
(null)
__builtin_amdgcn_ldexp
" Setter="
returns-nonnull-attribute
 Kind=PropertyRef Property="
__builtin_amdgcn_frexp_exp
 super
EXTENSION_METADATA
 Messaging=
Specify a directory where Clang can find 'include' and 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Clang will use the GCC installation with the largest version
Getter&Setter
shift-base
Getter
__builtin_amdgcn_classf
Setter
SIGNATURE
 Kind=ArraySubscript GetterForArray="
__builtin_amdgcn_cubetc
 Kind=DictionarySubscript GetterForDictionary="
shift-exponent
" SetterForArray="
__builtin_amdgcn_s_decperflevel
" SetterForDictionary="
DIAGNOSTIC_OPTIONS
 begin 
-fno-openmp-implicit-rpath
 end 
signed-integer-overflow
 step 
WUiiiIi
 lower
FILE_SYSTEM_OPTIONS
 upper
WUiddIi
 <Unbind>
unreachable
 <Bind>
__builtin_amdgcn_ds_permute
 written as lvalue reference
<<<INVALID BUFFER>>>
 static
Emit type record hashes in a .debug$H section
 altivec
vla-bound
 altivec pixel
__builtin_amdgcn_ds_fmaxf
 altivec bool
STMT_NULL_PTR
 neon
__builtin_amdgcn_alignbit
 neon poly
vptr
 fixed-length sve data vector
__builtin_amdgcn_cvt_pkrtz
 fixed-length sve predicate vector
Emit PCs for atomic operations used by binary analysis sanitizers
 noreturn
-finstrument-function-entry-bare
 produces_result
unsigned-integer-overflow
 regparm 
__builtin_amdgcn_cvt_pk_u16
 trailing_return
STMT_CASE
 variadic
__builtin_amdgcn_sad_u8
 divergent
unsigned-shift-base
 add_lvalue_reference
__builtin_amdgcn_qsad_pk_u16_u8
 add_pointer
STMT_LABEL
 add_rvalue_reference
Generate CodeView debug information
 decay
dataflow
 make_signed
__builtin_amdgcn_ds_gws_sema_release_all
 make_unsigned
STMT_IF
 remove_all_extents
__builtin_amdgcn_is_private
 remove_const
cfi-cast-strict
 remove_cv
hffUiUibUi
 remove_cvref
STMT_WHILE
 remove_extent
Don't use the new driver for OpenMP offloading.
 remove_pointer
cfi-derived-cast
 remove_reference_t
16-bit-insts
 remove_restrict
STMT_FOR
 remove_volatile
__builtin_amdgcn_sinh
 underlying_type
cfi-icall
 depth 
__builtin_amdgcn_frexp_manth
 index 
STMT_INDIRECT_GOTO
 pack_index 
-gcolumn-info
 decltype(auto)
cfi-mfcall
 undeduced
iiIiIiIiIb
 alias
STMT_BREAK
 expansions 
__builtin_amdgcn_s_dcache_wb
 __module_private__
cfi-unrelated-cast
 definition
gfx9-insts
 inline
STMT_DECL
 virtual
Instrument function entry only, after inlining, without arguments to the instrumentation call
 pure
cfi-nvcall
 default
__builtin_amdgcn_global_atomic_fmin_f64
_delete
STMT_MSASM
 delete
__builtin_amdgcn_flat_atomic_fmin_f64
 trivial
cfi-vcall
 not_selected
__builtin_amdgcn_ds_atomic_fadd_f32
 ineligible
EXPR_DECL_REF
 noexcept-unevaluated 
-gdwarf-2
 noexcept-uninstantiated 
kcfi
 implicit-inline
V2sV2s*0V2s
 <<<NULL params x 
EXPR_FIXEDPOINT_LITERAL
V2sV2s*3V2s
 mangling 
safe-stack
 tls
__builtin_amdgcn_fdot2_f16_f16
 tls_dynamic
EXPR_IMAGINARY_LITERAL
 nrvo
-fno-openmp-simd
 cinit
shadow-call-stack
 callinit
SiV2SsV2SsSiIb
 listinit
EXPR_CHARACTER_LITERAL
 destroyed
__builtin_amdgcn_sdot4
 nothrow
implicit-unsigned-integer-truncation
UiUiUiUiIb
 openmp_standalone_directive
EXPR_PAREN_LIST
 combiner
-gdwarf-3
 initializer
implicit-signed-integer-truncation
 omp_priv = 
gfx10-insts
 omp_priv ()
EXPR_SIZEOF_ALIGN_OF
original
__builtin_amdgcn_image_bvh_intersect_ray
 typename
implicit-integer-sign-change
-fdepscan-prefix-map=
 C++
-fexperimental-sanitize-metadata=covered
 synthesize
-finstrument-functions-after-inlining
 none
objc-cast
 protected
V8fV16sV16sV8f
 public
EXPR_BINARY_OPERATOR
 package
V16sV16sV16sV16sIb
local-bounds
 covariant
V8iIbV2iIbV2iV8iIb
 contravariant
EXPR_CONDITIONAL_OPERATOR
 bounded
-gdwarf-4
 required
scudo
 optional
V8sV16sV16sV8sIb
 assign
EXPR_CSTYLE_CAST
 readwrite
V4iIbV2iIbV2iV4iIb
 retain
--linker-option=/include:
 copy
UWiUIi
 nonatomic
EXPR_EXT_VECTOR_ELEMENT
 atomic
-fno-openmp-target-new-runtime
 weak
 strong
Uc*7
 unsafe_unretained
EXPR_DESIGNATED_INIT
 direct
__builtin_r600_read_tidig_x
 captures_this
arm64e
 cbuffer
__builtin_r600_recipsqrt_ieeef
 tbuffer
EXPR_IMPLICIT_VALUE_INIT
 first 
-gdwarf-5
 prev 
arm64
towardzero
__builtin_amdgcn_mfma_f32_32x32x2f32
tonearest
EXPR_VA_ARG
upward
__builtin_amdgcn_mfma_f32_16x16x4f16
downward
arm64_32
tonearestaway
__builtin_amdgcn_mfma_f32_32x32x8f16
 AddressDiscriminated
EXPR_STMT
 Pointer
Like -finstrument-functions, but insert the calls after inlining
 Data
 AAPCS
__builtin_amdgcn_mfma_i32_32x32x8i8
 AAPCS_VFP
EXPR_GNU_NULL
 IRQ
__builtin_amdgcn_mfma_f32_16x16x2bf16
 FIQ
ppcle
 SWI
__builtin_amdgcn_mfma_f32_32x32x4bf16
 ABORT
EXPR_BLOCK
 UNDEF
-gdwarf-aranges
 Generic
ppc64
 IsPointer
__builtin_amdgcn_mfma_f32_32x32x8bf16_1k
 IsLiteralLabel
EXPR_OBJC_STRING_LITERAL
 Unavailable
__builtin_amdgcn_mfma_f64_4x4x4f64
 Strict
ppc64le
 ByRef
__builtin_amdgcn_mfma_i32_32x32x16_i8
 nocf
EXPR_OBJC_ARRAY_LITERAL
 Unknown
-fno-operator-names
 Consumed
darwin
 Unconsumed
fp8-insts
 IsDeref
EXPR_OBJC_ENCODE
 DT_Error
__builtin_amdgcn_mfma_f32_32x32x16_bf8_bf8
 DT_Warning
freebsd
 ArgDependent
__builtin_amdgcn_mfma_f32_32x32x16_fp8_fp8
 Closed
EXPR_OBJC_PROTOCOL_EXPR
 Open
Enables DWARF32 format for ELF binaries, if debug information emission is enabled.
 GeneratedDeclaration
netbsd
 Keep
V16fV4sV8sV16fiIiIi
 Extern
EXPR_OBJC_PROPERTY_REF_EXPR
 SRV
V16iV2iV4iV16iiIiIi
 UAV
openbsd
 CBuffer
__builtin_amdgcn_smfmac_f32_16x16x64_fp8_bf8
 Sampler
Emit PCs for code covered with binary analysis sanitizers
 Texture1D
-finstrument-functions
 Texture2D
sunos
 Texture2DMS
__builtin_amdgcn_cvt_f32_fp8
 Texture3D
STMT_OBJC_CATCH
 TextureCube
__builtin_amdgcn_cvt_pk_bf8_f32
 Texture1DArray
 Texture2DArray
ifiiIi
 Texture2DMSArray
STMT_OBJC_AT_TRY
 TextureCubeArray
Enables DWARF64 format for ELF binaries, if debug information emission is enabled.
 TypedBuffer
 RawBuffer
 StructuredBuffer
STMT_OBJC_AT_THROW
 CBufferKind
 SamplerKind
.obj
 TBuffer
 RTAccelerationStructure
STMT_CXX_CATCH
 FeedbackTexture2D
-fno-optimize-sibling-calls
 FeedbackTexture2DArray
 Pixel
 Vertex
STMT_CXX_FOR_RANGE
 Geometry
 Hull
 Domain
 Compute
EXPR_CXX_MEMBER_CALL
 Library
Generate source-level debug information with the default dwarf version
 RayGeneration
.dll.a
 Intersection
 AnyHit
EXPR_CXX_CONSTRUCT
 ClosestHit
 Miss
 Callable
 Mesh
EXPR_CXX_STATIC_CAST
 Amplification
Generate calls to instrument function entry and exit
 BestCase
-android
 sw0
 sw1
EXPR_CXX_REINTERPRET_CAST
 hw0
 hw1
clang_rt.
 hw2
 hw3
EXPR_CXX_ADDRSPACE_CAST
 hw4
Set __cdecl as a default calling convention
 hw5
android
 eic
v105
 OMPNullMemAlloc
EXPR_USER_DEFINED_LITERAL
 OMPDefaultMemAlloc
v109
 OMPLargeCapMemAlloc
ld64.
 OMPConstMemAlloc
v113
 OMPHighBWMemAlloc
EXPR_CXX_BOOL_LITERAL
 OMPLowLatMemAlloc
-fno-pack-derived
 OMPCGroupMemAlloc
 OMPPTeamMemAlloc
v121
 OMPThreadMemAlloc
EXPR_CXX_TYPEID_EXPR
 OMPUserDefinedMemAlloc
v125
 MT_To
libtool
 MT_Link
v129
 DT_Host
EXPR_CXX_THIS
 DT_NoHost
Embed source text in DWARF debug sections
 DT_Any
llvm-ar
 Indirect
v137
 Target_TargetSync
EXPR_CXX_DEFAULT_ARG
 Target
v141
 TargetSync
x86_64-apple-darwin22.1.0
 OMF_None
With -fdepscan, seamlessly filter the CAS filesystem to apply the given prefix, updating the command-line to match.
 OMF_alloc
-fexperimental-sanitize-metadata=
 OMF_copy
-finteger-4-integer-8
 OMF_init
x86_64h
 OMF_mutableCopy
v153
 OMF_new
EXPR_CXX_NEW
 user
v157
 supervisor
profile
 machine
v161
 None
EXPR_CXX_PSEUDO_DESTRUCTOR
 SwiftPrivate
Emit a compilation database fragment to the specified directory
 NotSwiftPrivate
-internal-isystem
 NonNullError
v169
 ZeroArgument
EXPR_CXX_DEPENDENT_SCOPE_MEMBER
 NonZeroArgument
v173
 NullResult
-internal-externc-isystem
 ZeroResult
v177
 NonZeroResult
EXPR_CXX_UNRESOLVED_CONSTRUCT
 NK_Struct
-fno-padding-on-unsigned-fixed-point
 NK_Enum
-lc++
 LayoutCompatible
v185
 MustBeNull
EXPR_CXX_UNRESOLVED_LOOKUP
 Default
v189
 Hidden
-lc++experimental
 Protected
v193
 IR_None
EXPR_CXX_NOEXCEPT
 IR_ARCForbiddenType
Emit reproducer on (option: off, crash (default), error, always)
 IR_ForbiddenWeak
-lstdc++
 IR_IgnoredWeak
v201
 IR_ARCForbiddenConversion
EXPR_BINARY_CONDITIONAL_OPERATOR
 IR_ARCInitReturnsUnrelated
v205
 IR_ARCFieldWithOwnership
 DefaultKey
v209
 NoKey
EXPR_ARRAY_TYPE_TRAIT
 ProcessDependent
-fintegrated-as
 ProcessIndependent
-lcc_kext
 DefaultAddressDiscrimination
v217
 NoAddressDiscrimination
EXPR_SIZEOF_PACK
 AddressDiscrimination
v221
 DefaultExtraDiscrimination
crtfastmath.o
 NoExtraDiscrimination
v225
 TypeDiscrimination
EXPR_SUBST_NON_TYPE_TEMPLATE_PARM_PACK
 CustomDiscrimination
Auto-generates preprocessed source files and a reproduction script
 Skip
invalid Xarch argument: '%0', not all driver options can be forwared via Xarch argument
 UsedGPRArg
v233
 UsedGPR
EXPR_MATERIALIZE_TEMPORARY
 UsedArg
v237
 Used
0123456789.
 AllGPRArg
v241
 AllGPR
EXPR_CXX_UUIDOF_EXPR
 AllArg
-fno-pch-codegen
 All
--driver-mode=g++
v249
EXPR_LAMBDA
 Interleave
v253
 InterleaveCount
clang-c++
unexpected declaration kind '
clang-cc
 PipelineInitiationInterval
 Distribute
 VectorizePredicate
 IsReplacedByActive
--driver-mode=cpp
 Enable
 Disable
Specify the type of metadata to emit for binary analysis sanitizers
 Numeric
 is_anonymous
MoveConstructor
CopyAssignment
Enable the integrated assembler
-fno-pch-debuginfo
-fno-pch-instantiate-templates
Disable inclusion of timestamp in precompiled headers
 FixedWidth
 pass_in_registers
 aggregate
clang-g++
--driver-mode=flang
 ScalableWidth
 AssumeSafety
someone else is building the index
 Full
 BS_Undefined
Module index '
-gfull
also in 
s105
cleanup 
failed getting buffer for module file
Overrides: [ 
s109
DefinitionData
 parsing_base_specifiers
 polymorphic
 abstract
s113
 lambda
 can_const_default_init
imported file "%s" not found
clang-cache
s121
 standard_layout
GLOBAL_INDEX_BLOCK
 trivially_copyable
s125
 pod
MODULE
 literal
Enable string pooling (default)
 has_user_declared_ctor
 exists
 non_trivial
 needs_implicit
--driver-mode=dxc
--driver-mode=cache
 has_constexpr_non_copy_move_ctor
flat_scratch_lo
 has_mutable_fields
Module: 
 has_variant_members
DefaultConstructor
 needs_overload_resolution
 implicit_has_const_param
-fintegrated-cc1
-ggdb1
 user_provided
 defaulted_is_constexpr
  Base identifier ID: 
CopyConstructor
 simple
clang::as
 user_declared
 has_const_param
MoveAssignment
 irrelevant
nominated 
constructed 
Identifier ID local -> global map
clang integrated assembler
IFS::Merger
llvm-ifs
target 
  Base submodule ID: 
VariableArray
Offload::Packager
Atomic
Dump provenance
Attributed
BitInt
clang-offload-packager
BlockPointer
a100
a101
DependentName
a102
a103
a104
a105
a107
a108
a109
a111
a112
a113
a114
a115
a116
a117
a119
a120
a121
a123
a124
a125
a127
a128
a129
a130
a131
a132
a133
DependentSizedExtVector
Decl ID local -> global map
DependentTemplateSpecialization
DynamicCountPointer
a134
a135
a136
a137
ObjCTypeParam
 functions analyzed (
PackExpansion
a138
a139
a140
a141
a142
a143
a144
a145
a146
a147
a148
a149
a151
a152
a153
Pointer
LValueReference
Enum
a154
a155
a156
a157
a158
a159
a160
a161
a162
a163
a164
a165
a167
a168
a169
a171
a172
a173
a175
a176
a177
a178
a179
a180
a181
a182
a183
a184
a185
TemplateTypeParm
 functions analyzed for uninitialiazed variables
TypeOfExpr
unsigned int
a186
a187
a188
a189
unsigned long
+neon
unsigned long long
a190
a191
a192
a193
a194
a195
a196
a197
unsigned __int128
a198
a199
a200
a201
_Accum
case
long _Accum
a202
a203
a204
a205
a207
a208
a209
a210
a211
a212
a213
a215
a216
a217
a219
a220
a221
a223
a224
a225
a226
a227
a228
a229
_Sat long _Accum
Emit debug line number tables only
_Sat unsigned short _Accum
-fp-armv8
_Sat unsigned _Accum
a230
a231
a232
a233
a235
a236
a237
_Sat unsigned long _Accum
_Sat _Fract
-crypto
_Sat long _Fract
a238
a239
a240
a241
a242
a243
a244
a245
a247
a248
a249
a250
a251
a252
a253
a255
dot5-insts
dot6-insts
dl-insts
gfx10-3-insts
dot3-insts
dot4-insts
-fno-pic
_Sat unsigned long _Fract
-neon
__wchar_t
<ARC unbridged cast type>
+tpidr-el2
<builtin fn type>
e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7
e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1
__AMD__
__AMDGPU__
__read_only image1d_t
__read_only image1d_array_t
__AMDGCN__
__R600__
__amdgcn_processor__
__amdgcn_target_id__
__read_only image1d_buffer_t
+tpidr-el1
__read_only image2d_t
__amdgcn_feature_
__AMDGCN_UNSAFE_FP_ATOMICS__
__HAS_FMAF__
FP_FAST_FMAF
__HAS_LDEXPF__
__HAS_FP64__
FP_FAST_FMA
__AMDGCN_WAVEFRONT_SIZE
tma_lo
tma_hi
tba_lo
tba_hi
__read_only image2d_array_t
__read_only image2d_depth_t
-fintrinsic-modules-path
__read_only image2d_array_depth_t
+harden-sls-retbr
__read_only image2d_msaa_t
Put crash-report files in <dir>
__read_only image2d_array_msaa_t
-fno-pie
__read_only image2d_msaa_depth_t
-gmlt
__read_only image2d_array_msaa_depth_t
__arc__
__read_only image3d_t
+harden-sls-nocomdat
E-m:o-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
e-m:o-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
__write_only image1d_array_t
__write_only image1d_buffer_t
__write_only image2d_t
e-m:o-p:32:32-Fi8-i64:64-a:0:32-n32-S128
__write_only image2d_array_t
__write_only image2d_depth_t
e-m:e-p:32:32-Fi8-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
__write_only image2d_array_depth_t
+crc
__write_only image2d_msaa_t
__write_only image2d_array_msaa_t
__write_only image2d_msaa_depth_t
-gmodules
__write_only image2d_array_msaa_depth_t
-crc
__write_only image3d_t
8_3A
__read_write image1d_t
PREFERRED-TYPE: 
__read_write image1d_array_t
8_7A
__read_write image1d_buffer_t
+sm4
__read_write image2d_t
9_2A
__read_write image2d_array_t
Hidden
__read_write image2d_depth_t
__read_write image2d_array_depth_t
+sha3
__read_write image2d_msaa_t
llvm.arm.gnu.eabi.mcount
__read_write image2d_array_msaa_t
Inaccessible
__read_write image2d_msaa_depth_t
+vfp2sp
__read_write image2d_array_msaa_depth_t
+sha2
__read_write image3d_t
+vfp3
<incomplete matrix index type>
Pattern : 
<OpenMP array section type>
-fno-plt
<OpenMP array shaping type>
+aes
<OpenMP iterator type>
+fp-armv8
cdecl
 to "
stdcall
+fp16
fastcall
-sm4
thiscall
+pacbti
pascal
OPENING_PAREN_LOC: 
vectorcall
-gno-column-info
ms_abi
-sha3
sysv_abi
__ARM_ARCH_
regcall
const
aapcs
__THUMB_INTERWORK__
aapcs-vfp
-sha2
aarch64_vector_pcs
__SOFTFP__
aarch64_sve_pcs
restrict
amdgpu_kernel
Use GOT indirection instead of PLT to make external function calls (x86 only)
intel_ocl_bicc
-aes
spir_function
__ARM_ARCH_EXT_IDIV__
opencl_kernel
unspecified
swiftcall
__ARM_VFPV3__
swiftasynccall
+fp16fml
preserve_most
__ARM_FEATURE_CDE
preserve_all
extern
NSObject
Restore the default behavior of not embedding source text in DWARF debug sections
NSCopying
-fp16fml
 __attribute__((nothrow))
__builtin_arm_smulbb
swift_context
auto
swift_async_context
__builtin_arm_smulwb
swift_error_result
-fullfp16
swift_indirect_result
__builtin_arm_qdbl
__private_extern__
__ptrauth(
-fipa-cp
ptrauth_key_none
+fullfp16
__builtin_arm_smlawb
__global
__thread
__local
__builtin_arm_sxtab16
__private
+crypto
__constant
__builtin_arm_sel
__generic
_Thread_local
__global_device
-gno-inline-line-tables
__global_host
+i8mm
__device__
__builtin_arm_uhadd8
__constant__
long
__shared__
__builtin_arm_usub8
__sptr __ptr32
+bf16
__uptr __ptr32
__builtin_arm_qasx
__ptr64
imaginary
__attribute__((address_space(
-fno-prefetch-loop-arrays
+hbc
NULL TYPE
__builtin_arm_shsub16
_Atomic(
signed
 btf_type_tag(
__builtin_arm_uasx
unsigned 
+mops
_BitInt(
__builtin_arm_uhsub16
_Complex 
void
decltype(
-gno-pubnames
__vector __pixel 
+strict-align
__vector __bool 
__builtin_arm_smladx
__vector 
__wchar_t
__attribute__((neon_vector_type(
__builtin_arm_smlsd
))) 
+reserve-x1
__attribute__((neon_polyvector_type(
__builtin_arm_smuad
__attribute__((__vector_size__(
-fextend-arguments=
 * sizeof(
-fivopts
)))) 
+reserve-x2
__attribute__((__arm_sve_vector_bits__(
__builtin_arm_get_fpscr
 * 8
char32_t
) * 8
 __sized_by(
+reserve-x3
 __counted_by(
__builtin_arm_ldc2
 __ended_by(
__int128
 /* __started_by(
-gno-record-gcc-switches
) */ 
+reserve-x4
 __attribute__((matrix_type(
vUIiUIiUIiUIiUIiUIi
half
read_only 
__builtin_arm_mcr2
write_only 
+reserve-x5
pipe 
__builtin_arm_mcrr
__unsafe_indexable
double
__single
Do not preserve comments in inline assembly
__indexable
+reserve-x6
__bidi_indexable
Uiv*
std::function<
_Fract
lambda
__builtin_arm_dbg
anonymous
+reserve-x7
unnamed
__builtin_arm_mve_asrl
(anonymous namespace)::
__float128
type-parameter-
-gno-simple-template-names
typeof_unqual 
+reserve-x9
typeof 
__builtin_arm_mve_srshrl
typeof_unqual(
bool
typeof(
__builtin_arm_mve_uqshl
__terminated_by(
+reserve-x10
) * 8))) 
__builtin_arm_mve_vabavq_p_s16
__counted_by(
_Decimal32
 [[clang::lifetimebound]]
-fix-only-warnings
 [[clang::annotate_type(...)]]
+reserve-x11
 __attribute__((
__builtin_arm_mve_vabavq_s8
pcs(
_Decimal128
"aapcs"
__builtin_arm_mve_vabdq_f16
"aapcs-vfp"
+reserve-x12
inteloclbicc
__builtin_arm_mve_vabdq_m_s16
 __attribute__((address_space(
class
 __attribute__((ext_vector_type(
-gno-strict-dwarf
 __attribute__((stdcall))
+reserve-x13
 __attribute__((fastcall))
__builtin_arm_mve_vabdq_s8
 __attribute__((thiscall))
struct
 __attribute__((vectorcall))
__builtin_arm_mve_vabdq_x_f16
 __attribute__((pascal))
+reserve-x14
 __attribute__((pcs("aapcs")))
__builtin_arm_mve_vabdq_x_s8
 __attribute__((pcs("aapcs-vfp")))
type-name
__attribute__((aarch64_vector_pcs))
-fno-profile-arcs
__attribute__((aarch64_sve_pcs))
+reserve-x15
__attribute__((amdgpu_kernel))
__builtin_arm_mve_vabsq_m_s16
 __attribute__((intel_ocl_bicc))
typeof_unqual
 __attribute__((ms_abi))
__builtin_arm_mve_vabsq_s32
 __attribute__((sysv_abi))
+reserve-x18
 __attribute__((regcall))
__builtin_arm_mve_vabsq_x_s16
 __attribute__((swiftcall))
(decltype)
__attribute__((swiftasynccall))
Bundle output files of HIP device compilation
 __attribute__((preserve_most))
+reserve-x20
 __attribute__((preserve_all))
__builtin_arm_mve_vadcq_m_u32
 __attribute__((noreturn))
__add_lvalue_reference
 __attribute__((cmse_nonsecure_call))
__builtin_arm_mve_vaddlvaq_p_u32
 __attribute__((ns_returns_retained))
+reserve-x21
 __attribute__((regparm (
-fdepscan-share-identifier
 __attribute__((no_caller_saved_registers))
Controls how scalar integer arguments are extended in calls to unprototyped and varargs functions
 __attribute__((nocf_check))
Apply fix-it advice only for warnings, not errors
__attribute__((ns_consumed)) 
+reserve-x22
__attribute__((noescape)) 
__builtin_arm_mve_vaddq_m_n_f32
__make_signed
 __attribute__((arm_streaming_compatible))
__builtin_arm_mve_vaddq_m_n_u16
 __attribute__((arm_streaming))
+reserve-x23
 __attribute__((arm_new_za))
__builtin_arm_mve_vaddq_m_s32
 __attribute__((arm_shared_za))
__remove_all_extents
 __attribute__((arm_preserves_za))
Instrument device library for HIP, which is a LLVM bitcode containing __cyg_profile_func_enter and __cyg_profile_func_exit
+reserve-x24
__builtin_arm_mve_vaddq_n_s32
__remove_cv
__builtin_arm_mve_vaddq_n_u8
 [scalar deleting]
+reserve-x25
VFTable indices for 
__builtin_arm_mve_vaddq_u16
 entry
__remove_extent
 entries
-fno-profile-generate-sampling
+reserve-x26
 -- accessible via 
__builtin_arm_mve_vaddq_x_n_s32
vbtable index 
__remove_reference_t
vfptr at offset 
__builtin_arm_mve_vaddq_x_n_u8
+reserve-x27
%4llu | 
__builtin_arm_mve_vaddq_x_u16
Original map
__remove_volatile
Construction vtable for ('
Default max threads per block for kernel launch bounds for HIP
+reserve-x28
) in '
__builtin_arm_mve_vaddvaq_p_u8
Vtable for '
__unknown_anytype
 entries).
__builtin_arm_mve_vaddvaq_u16
%4d | 
+call-saved-x8
vcall_offset (
__builtin_arm_mve_vaddvq_p_s32
vbase_offset (
__bf16
offset_to_top (
-fix-what-you-can
 RTTI
+call-saved-x9
 [pure]
__builtin_arm_mve_vaddvq_u16
 [deleted]
image1d_array_t
       [return adjustment: 
__builtin_arm_mve_vandq_f32
 non-virtual
+call-saved-x10
 vbase offset offset
__builtin_arm_mve_vandq_m_s32
       [this adjustment: 
image2d_t
 vcall offset offset
Prepare '-aux-triple' only without populating '-aux-target-cpu' and '-aux-target-feature'.
() [complete]
+call-saved-x11
() [deleting]
__builtin_arm_mve_vandq_u16
[unused] 
image2d_depth_t
       -- (
__builtin_arm_mve_vandq_x_f32
) vtable address --
+call-saved-x12
Virtual base offset offsets for '
__builtin_arm_mve_vandq_x_u16
Thunks for '
image2d_msaa_t
return adjustment: 
Disable generation of profile instrumentation.
       
+call-saved-x13
this adjustment: 
__builtin_arm_mve_vbicq_m_n_s32
 [complete]
image2d_msaa_depth_t
 [deleting]
__builtin_arm_mve_vbicq_m_s32
VTable indices for '
+call-saved-x14
 method: 
__builtin_arm_mve_vbicq_m_u8
VFTable for 
image3d_t
() [scalar deleting]
/GR-
Unexpected vftable component type %0 for component number %1
+call-saved-x15
' in 
__builtin_arm_mve_vbicq_u16
[return adjustment (to type '
constexpr
'): 
__builtin_arm_mve_vbicq_x_f32
vbptr at offset 
+call-saved-x18
vbase #
__builtin_arm_mve_vbicq_x_u16
 non-virtual]
32,64
[this adjustment: 
Apply fix-it advice even in the presence of unfixable errors
vtordisp at 
+no-neg-immediates
vbptr at 
__builtin_arm_mve_vbrsrq_m_n_u16
 to the left,
cl_clang_storage_class_specifiers
 vboffset at 
__builtin_arm_mve_vbrsrq_n_f32
 in the vbtable, 
+fix-cortex-a53-835769
assumes
__builtin_arm_mve_vbrsrq_n_u16
barrier
inline
begin assumes
-grecord-command-line
begin declare target
-fix-cortex-a53-835769
begin declare variant
__builtin_arm_mve_vbrsrq_x_n_u16
cancellation point
virtual
critical
__builtin_arm_mve_vcaddq_rot270_f32
declare mapper
+no-bti-at-return-twice
declare reduction
__builtin_arm_mve_vcaddq_rot270_m_s32
depobj
_Noreturn
distribute parallel do
-fno-profile-instr-use
distribute parallel do simd
+sve
distribute parallel for
__builtin_arm_mve_vcaddq_rot270_u16
distribute parallel for simd
__module_private__
distribute simd
__builtin_arm_mve_vcaddq_rot270_x_f32
do simd
+sve2
end assumes
__builtin_arm_mve_vcaddq_rot270_x_u16
end declare target
power8-vector
end declare variant
/Gregcall
end do
neon
end do simd
__builtin_arm_mve_vcaddq_rot90_m_s32
end sections
power10-vector
end single
__builtin_arm_mve_vcaddq_rot90_m_u8
end workshare
sve2
flush
__builtin_arm_mve_vcaddq_rot90_u16
for simd
override
masked taskloop
-fixit-recompile
masked taskloop simd
sve2-bitperm
master
__builtin_arm_mve_vcaddq_rot90_x_u16
master taskloop
__final
master taskloop simd
__builtin_arm_mve_vclsq_m_s32
metadirective
sve2-sha3
nothing
__builtin_arm_mve_vclsq_s8
parallel
abstract
parallel do
-greproducible
parallel do simd
sve2-aes
parallel for
__builtin_arm_mve_vclzq_m_u32
parallel for simd
__builtin_shufflevector
parallel masked
__builtin_arm_mve_vclzq_s8
parallel masked taskloop
sve2-sm4
parallel masked taskloop simd
__builtin_arm_mve_vclzq_x_s16
parallel master
element_count
parallel master taskloop
-fno-profile-reusedist
parallel master taskloop simd
-sve2
parallel sections
__builtin_arm_mve_vcmlaq_m_f16
parallel workshare
RWBuffer
sections
__builtin_arm_mve_vcmlaq_rot180_m_f16
simd
-sve2-bitperm
target data
__builtin_arm_mve_vcmlaq_rot270_m_f16
target enter data
target exit data
target parallel
-sve2-sha3
target parallel do
__builtin_arm_mve_vcmpcsq_m_n_u8
target parallel do simd
target parallel for
__builtin_arm_mve_vcmpcsq_n_u16
target parallel for simd
-sve2-aes
target simd
Share depscan daemon for Clang invocations using the same string identifier.
target teams
-fextended-identifiers
target teams distribute
Apply fix-it changes and recompile
target teams distribute parallel do
-sve2-sm4
target teams distribute parallel do simd
__builtin_arm_mve_vcmpeqq_m_n_s16
target teams distribute parallel for
clang::aarch64_sve_pcs
target teams distribute parallel for simd
__builtin_arm_mve_vcmpeqq_m_n_u32
target teams distribute simd
target update
__builtin_arm_mve_vcmpeqq_m_s8
task
clang::aarch64_vector_pcs
taskgroup
taskloop
+f32mm
taskloop simd
__builtin_arm_mve_vcmpeqq_n_s8
taskwait
clang::amdgpu_flat_work_group_size
taskyield
__builtin_arm_mve_vcmpeqq_s16
teams
cyclone
teams distribute
__builtin_arm_mve_vcmpeqq_u32
teams distribute parallel do
teams distribute parallel do simd
-fno-profile-sample-use
teams distribute parallel for
+zcm
teams distribute parallel for simd
__builtin_arm_mve_vcmpgeq_m_n_s16
teams distribute simd
clang::amdgpu_kernel
threadprivate
__builtin_arm_mve_vcmpgeq_m_s32
tile
+zcz
workshare
__builtin_arm_mve_vcmpgeq_n_s16
dispatch
clang::amdgpu_num_sgpr
masked
/GS-
parallel loop
soft
target parallel loop
__builtin_arm_mve_vcmpgtq_m_f16
target teams loop
amdgpu_num_vgpr
teams loop
__builtin_arm_mve_vcmpgtq_m_n_s16
acq_rel
armeb
acquire
__builtin_arm_mve_vcmpgtq_m_s32
adjust_args
NumVGPR
affinity
-fixit-to-temporary
append_args
atomic_default_mem_order
__builtin_arm_mve_vcmpgtq_s32
bind
clang::amdgpu_waves_per_eu
cancellation_construct_type
__builtin_arm_mve_vcmphiq_m_n_u8
capture
-mthumb
collapse
__builtin_arm_mve_vcmphiq_n_u16
compare
Interrupt
copyprivate
-gsce
copyin
thumbeb
defaultmap
__builtin_arm_mve_vcmpleq_m_f16
depend
gnu::signal
destroy
__builtin_arm_mve_vcmpleq_m_n_s16
detach
thumb
device_type
__builtin_arm_mve_vcmpleq_m_s32
dynamic_allocators
gnu::abi_tag
exclusive
-fno-profile-values
filter
hard
firstprivate
__builtin_arm_mve_vcmpleq_s32
from
clang::acquire_capability
grainsize
__builtin_arm_mve_vcmpltq_m_f16
has_device_addr
+soft-float
hint
__builtin_arm_mve_vcmpltq_m_n_s16
in_reduction
Args...
inbranch
Use simple template names in DWARF, or include the full template name with a modified prefix for validation
inclusive
+soft-float-abi
is_device_ptr
__builtin_arm_mve_vcmpltq_n_s16
lastprivate
clang::acquire_handle
linear
__builtin_arm_mve_vcmpltq_s32
match
-mfpu=
mergeable
__builtin_arm_mve_vcmpneq_m_f16
nogroup
-fexternal-blas
nowait
Apply fix-it changes to temporary files
nocontext
+read-tp-hard
nontemporal
__builtin_arm_mve_vcmpneq_m_n_u32
notinbranch
AddressSpace
novariants
__builtin_arm_mve_vcmpneq_m_s8
num_tasks
-dotprod
num_teams
__builtin_arm_mve_vcmpneq_n_f16
num_threads
gnu::alias
order
-gsimple-template-names
partial
-bf16
proc_bind
__builtin_arm_mve_vcmpneq_s16
relaxed
align_value
reverse_offload
__builtin_arm_mve_vcmpneq_u32
safelen
-mve
seq_cst
__builtin_arm_mve_vcmulq_m_f16
task_reduction
aligned
thread_limit
-fno-protect-parens
threads
-mve.fp
unified_address
__builtin_arm_mve_vcmulq_rot270_f16
unified_shared_memory
alignas
uniform
__builtin_arm_mve_vcmulq_rot270_x_f16
untied
-fpregs
use_device_addr
__builtin_arm_mve_vcmulq_rot90_m_f16
use_device_ptr
alloc_align
when
Set DWARF fission mode
threadprivate or thread local
sha2
__builtin_arm_mve_vcreateq_s16
x86_64
ParamIndex
armeb
__builtin_arm_mve_vcreateq_u16
aarch64
aarch64_be
__builtin_arm_mve_vctp16q
aarch64_32
gnu::alloc_size
-fixit=
ppcle
aapcs
ppc64
__builtin_arm_mve_vcvtaq_m_s16_f16
ppc64le
NumElemsParam
__builtin_arm_mve_vcvtaq_s16_f16
amdgcn
+aapcs-frame-chain
nvptx
__builtin_arm_mve_vcvtaq_x_s16_f16
nvptx64
clang::always_destroy
invalid
-gsplit-dwarf
construct
+aapcs-frame-chain-leaf
device
__builtin_arm_mve_vcvtbq_x_f32_f16
implementation
gnu::always_inline
user
__builtin_arm_mve_vcvtmq_m_u32_f32
target
+8msecext
teams
__builtin_arm_mve_vcvtmq_u32_f32
parallel
__forceinline
Do not emit pseudo probes for sample profiling
simd
+fix-cmse-cve-2021-35465
kind
__builtin_arm_mve_vcvtnq_m_u32_f32
arch
analyzer_suppress
vendor
__builtin_arm_mve_vcvtnq_u32_f32
extension
-fix-cmse-cve-2021-35465
condition
__builtin_arm_mve_vcvtnq_x_u32_f32
dispatch
DiagnosticIdentifiers...
md5,sha1,sha256
unified_address
+fix-cortex-a57-aes-1742098
unified_shared_memory
__builtin_arm_mve_vcvtpq_u32_f32
reverse_offload
Annotation
dynamic_allocators
__builtin_arm_mve_vcvtpq_x_u32_f32
atomic_default_mem_order
-fix-cortex-a57-aes-1742098
host
Dump symbols after the semantic analysis
nohost
-fexternc-nounwind
Apply fix-it advice creating a file with the given suffix
+long-calls
fpga
__builtin_arm_mve_vcvtq_m_n_f32_u32
nocf_check
__builtin_arm_mve_vcvtq_m_n_u32_f32
+execute-only
cray
__builtin_arm_mve_vcvtq_m_u32_f32
fujitsu
objc_arc_weak_reference_unavailable
-gstrict-dwarf
intel
__builtin_arm_mve_vcvtq_n_u32_f32
llvm
clang::argument_with_type_tag
__builtin_arm_mve_vcvtq_u32_f32
nvidia
v8m.base
__builtin_arm_mve_vcvtq_x_f32_u32
ArgumentKind
unknown
Disable Pointer Authentication ABI versioning
match_all
+reserve-r9
match_any
__builtin_arm_mve_vcvtq_x_n_u32_f32
match_none
TypeTagIdx
disable_implicit_base
__builtin_arm_mve_vcvtq_x_u32_f32
allow_templates
+no-movt
bind_to_declaration
__builtin_arm_mve_vcvttq_m_f32_f16
true
BuiltinName
false
Enable buffer security check (default)
<any, entirely target dependent>
armv7k
__builtin_arm_mve_vddupq_n_u16
__clang_arm_mve_strict_polymorphism
static-func-full-module-prefix
__builtin_arm_mve_vddupq_wb_u32
Use full module build paths in the profile counter names for static functions.
armv7s
static-func-strip-dirname-prefix
__builtin_arm_mve_vddupq_x_n_u8
Strip specified level of directory name from source path in the profile counter name for static functions.
arm_new_za
enable-name-compression
-fixit
Enable name/filename string compression
--be8
number of value profile kinds is invalid
__builtin_arm_mve_vdupq_m_n_s8
total size is not multiples of quardword
arm_shared_za
value kind is invalid
__builtin_arm_mve_vdupq_n_f16
value profile address is greater than total size
+mve
__llvm_prf_data
__builtin_arm_mve_vdupq_n_s8
__llvm_prf_cnts
arm_streaming_compatible
__llvm_prf_names
Use stack probes (default)
__llvm_prf_vals
crypto
__llvm_prf_vnds
__builtin_arm_mve_vdupq_x_n_s8
__llvm_covmap
NumBits
__llvm_covfun
__builtin_arm_mve_vdwdupq_m_n_u16
__llvm_orderfile
ck810
end of File
__builtin_arm_mve_vdwdupq_m_wb_u32
unrecognized instrumentation profile encoding format
gnu::artificial
invalid instrumentation profile data (bad magic)
-fno-ptrauth-block-descriptor-pointers
invalid instrumentation profile data (file header is corrupt)
+hard-float-abi
unsupported instrumentation profile format version
__builtin_arm_mve_vdwdupq_x_n_u16
unsupported instrumentation profile hash type
clang::assert_shared_capability
too much profile data
__builtin_arm_mve_vdwdupq_x_wb_u32
truncated profile data
+hard-float
malformed instrumentation profile data
__builtin_arm_mve_veorq_m_f16
debug info for correlation is required
gnu::assume_aligned
debug info for correlation is not necessary
-gtoggle
unable to correlate profile
+fpuv2_sf
invalid profile created. Please file a bug at: http://developer.apple.com/bugreporter/ and include the profraw files that caused this error.
__builtin_arm_mve_veorq_s16
no profile data available for function
assume
function control flow change detected (hash mismatch)
__builtin_arm_mve_veorq_u32
function basic block count change detected (counter mismatch)
+fpuv2_df
counter overflow
__builtin_arm_mve_veorq_x_s16
function value site count change detected (counter mismatch)
Assume all functions with C linkage do not unwind
failed to compress data (zlib)
Apply fix-it advice to the input source
failed to uncompress data (zlib)
+fdivdu
empty raw profile file
__builtin_arm_mve_vfmaq_m_f16
profile uses zlib compression but the profile reader was built without zlib support
priority
raw profile version mismatch
__builtin_arm_mve_vfmaq_n_f16
function name is empty
+fpuv3_hi
llvm.instrprof
__builtin_arm_mve_vfmasq_n_f16
profile data is empty
clang::preserve_access_index
memprof schema invalid
/guard:
profile-summary-contextless
+fpuv3_hf
Merge context profiles before calculating thresholds.
__builtin_arm_mve_vgetq_lane_s16
profile-summary-cutoff-hot
clang::btf_decl_tag
A count is hot if it exceeds the minimum count to reach this percentile of total counts.
__builtin_arm_mve_vgetq_lane_u16
profile-summary-cutoff-cold
+fpuv3_sf
A count is cold if it is below the minimum count to reach this percentile of total counts.
__builtin_arm_mve_vhaddq_m_n_s16
profile-summary-huge-working-set-size-threshold
btf_type_tag
The code working set size is considered huge if the number of blocks required to reach the -profile-summary-cutoff-hot percentile exceeds this count.
-fno-ptrauth-function-pointer-type-discrimination
profile-summary-large-working-set-size-threshold
+fpuv3_df
The code working set size is considered large if the number of blocks required to reach the -profile-summary-cutoff-hot percentile exceeds this count.
__builtin_arm_mve_vhaddq_m_s8
profile-summary-hot-count
BTFTypeTag
A fixed hot count that overrides the count derived from profile-summary-cutoff-hot
__builtin_arm_mve_vhaddq_n_s16
profile-summary-cold-count
ilp32d
A fixed cold count that overrides the count derived from profile-summary-cutoff-cold
__builtin_arm_mve_vhaddq_n_u32
profile-symbol-list-cutoff
Type
Cutoff value about how many symbols in profile symbol list will be used. This is very useful for performance debugging
-gused
generate-merged-base-profiles
lp64d
When generating nested context-sensitive profiles, always generate extra base profile for function with all its context profiles merged into it.
__builtin_arm_mve_vhaddq_x_n_s16
profile-isfs
gnu::cdecl
Profile uses flow sensitive discriminators
__builtin_arm_mve_vhaddq_x_n_u32
common
DW_CHILDREN_
__builtin_arm_mve_vhaddq_x_s8
_cdecl
_unknown_
m68000
__builtin_arm_mve_vhcaddq_rot270_s32
clang::cf_audited_transfer
__builtin_arm_mve_vhcaddq_rot270_x_s8
68000
__builtin_arm_mve_vhcaddq_rot90_s16
clang::cf_consumed
Section too small: cannot read header.
Section too small: cannot read buckets and hashes.
M68000
Header
__builtin_arm_mve_vhsubq_m_n_s8
Magic
Guard
Hash function
__builtin_arm_mve_vhsubq_m_s16
Bucket count
m68010
Hashes count
__builtin_arm_mve_vhsubq_m_u32
HeaderData length
clang::cfi_canonical_jump_table
Incorrectly terminated list.
-fno-ptrauth-intrinsics
Name@0x
68010
String: 0x%08llx
__builtin_arm_mve_vhsubq_s16
Data 
clang::cf_returns_not_retained
Atom[%d]: 
__builtin_arm_mve_vhsubq_u32
Error extracting the value
M68010
DIE offset base
__builtin_arm_mve_vhsubq_x_n_s8
Number of atoms
clang::cf_returns_retained
Atoms
/Gw-
Atom 
m68020
Form: 
__builtin_arm_mve_vhsubq_x_u32
Bucket 
clang::cf_unknown_transfer
EMPTY
__builtin_arm_mve_vidupq_m_n_u8
Hash 0x
68020
Invalid section offset
Share state based on the PID of the parent command if the name matches. See also -fdepscan-share-stop.
Length
CU count
Include file before parsing
Local TU count
M68020
Foreign TU count
__builtin_arm_mve_vidupq_x_n_u8
Name count
constant
Abbreviations table size
__builtin_arm_mve_viwdupq_m_n_u16
Augmentation: '
m68030
cannot read header augmentation
__builtin_arm_mve_viwdupq_m_wb_u32
Abbreviation 0x
device
Tag: {0}
{0}: {1}
68030
Incorrectly terminated abbreviation table.
__builtin_arm_mve_viwdupq_x_n_u16
Section too small: cannot read abbreviations.
device_builtin_surface_type
Duplicate abbreviation code.
__builtin_arm_mve_viwdupq_x_wb_u32
Abbrev
M68030
{0}: 
__builtin_arm_mve_vld1q_s16
Incorrectly terminated entry list.
device_builtin_texture_type
Invalid abbreviation.
Disable Pointer Authentication kernel ABI versioning
Error extracting index attribute values.
m68040
Entry @ 0x
__builtin_arm_mve_vld1q_z_s16
Name 
__global__
Hash
__builtin_arm_mve_vld1q_z_u32
Compilation Unit offsets
68040
CU[%u]: 0x%08llx
__builtin_arm_mve_vld2q_s16
Local Type Unit offsets
__host__
LocalTU[%u]: 0x%08llx
/GX-
Foreign Type Unit signatures
M68040
ForeignTU[%u]: 0x%016llx
__builtin_arm_mve_vld4q_s16
Abbreviations
__launch_bounds__
Name index is invalid
__builtin_arm_mve_vld4q_u32
Name Index @ 0x
m68060
Hash table not present
__builtin_arm_mve_vldrbq_gather_offset_s8
DW_ATOM_unknown_
MinBlocks
parsing .debug_names header at 0x%llx: %s
0x%08llx
68060
: Compile Unit:
__builtin_arm_mve_vldrbq_gather_offset_z_u32
 length = 
noreturn
0x%0*llx
__builtin_arm_mve_vldrbq_s8
, format = 
M68060
, version = 
__builtin_arm_mve_vldrbq_z_s16
0x%04x
clang::callable_when
, unit_type = 
-gxcoff
, abbr_offset = 
-hard-float
0x%04llx
__builtin_arm_mve_vldrdq_gather_base_wb_s64
 (invalid)
clang::callback
, addr_size = 
__builtin_arm_mve_vldrdq_gather_base_z_s64
0x%02x
+reserve-a0
, DWO_id = 
__builtin_arm_mve_vldrdq_gather_offset_z_s64
0x%016llx
called_once
 (next unit at 
-fno-ptrauth-objc-interface-sel
<compile unit can't be parsed!>
+reserve-a1
.dwp
__builtin_arm_mve_vldrhq_gather_offset_s16
.debug_abbrev
capability
.debug_abbrev.dwo
__builtin_arm_mve_vldrhq_gather_offset_z_f16
.debug_info
+reserve-a2
.debug_info.dwo
__builtin_arm_mve_vldrhq_gather_offset_z_u32
.debug_types
shared_capability
.debug_types.dwo
Deprecated; use /EHsc
.debug_loc
+reserve-a3
.debug_loclists
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_s32
.debug_loclists.dwo
Name
.debug_loc.dwo
__builtin_arm_mve_vldrhq_s32
.debug_frame
+reserve-a4
.eh_frame
__builtin_arm_mve_vldrhq_z_s16
.debug_macro
Set output executable file name
.debug_macro.dwo
Set preprocess output file name (with /P)
.debug_macinfo
+reserve-a5
.debug_macinfo.dwo
__builtin_arm_mve_vldrwq_gather_base_wb_f32
.debug_aranges
FunctionDecl
.debug_line
__builtin_arm_mve_vldrwq_gather_base_wb_z_s32
.debug_line.dwo
+reserve-a6
.debug_cu_index
__builtin_arm_mve_vldrwq_gather_base_z_u32
.debug_tu_index
cmse_nonsecure_entry
.debug_str
Do not put each function in its own section (default)
.debug_str.dwo
+reserve-d0
.debug_line_str
__builtin_arm_mve_vldrwq_gather_shifted_offset_s32
.debug_addr
cold
.debug_ranges
__builtin_arm_mve_vldrwq_gather_shifted_offset_z_u32
.debug_rnglists
+reserve-d1
.debug_rnglists.dwo
__builtin_arm_mve_vldrwq_z_s32
.debug_pubnames
gnu::common
.debug_pubtypes
-fno-ptrauth-returns
.debug_gnu_pubnames
+reserve-d2
.debug_gnu_pubtypes
__builtin_arm_mve_vmaxavq_p_s16
.debug_str_offsets
__const
debug_str_offsets
__builtin_arm_mve_vmaxavq_s32
.debug_str_offsets.dwo
+reserve-d3
debug_str_offsets.dwo
__builtin_arm_mve_vmaxnmaq_m_f16
.gdb_index
constinit
.apple_names
Put each function in its own section
.apple_types
+reserve-d4
.apple_namespaces
__builtin_arm_mve_vmaxnmq_m_f16
.apple_objc
clang::require_constant_initialization
.debug_names
__builtin_arm_mve_vmaxnmvq_f16
error: UUID load command is too short.
+reserve-d5
UUID: 
__builtin_arm_mve_vmaxq_m_s16
 contents:
Priority
locations
-fjmc
debug_line[
+reserve-d6
0x%8.8llx
__builtin_arm_mve_vmaxq_s8
0x%8.8llx: "
DefaultState
ranges:
__builtin_arm_mve_vmaxq_x_s16
invalid %s list offset 0x%llx
+reserve-d7
no end of list marker detected at end of %s table starting at offset 0x%llx
__builtin_arm_mve_vmaxq_x_u32
error: invalid contribution to string offsets table in section .
clang::consumable_auto_cast_state
overlapping contributions to string offsets table in section .%s.
0x%8.8llx: Gap, length = 
mips32r2
0x%8.8llx: 
__builtin_arm_mve_vmaxvq_s16
Contribution size = 
clang::consumable_set_state_on_read
, Format = 
__builtin_arm_mve_vmaxvq_u32
, Version = 
mips64r2
%0*llx 
__builtin_arm_mve_vminaq_m_s8
"%s"
clang::convergent
failed to get relocated section: 
-fno-ptrauth-vtable-pointer-address-discrimination
failed to decompress '
mips32r6
__builtin_arm_mve_vminavq_s32
debug_ranges
gnu::dllexport
debug_frame
__builtin_arm_mve_vminnmaq_m_f16
debug_info
mips64r6
Unexpected relocations for dwo section 
__builtin_arm_mve_vminnmavq_p_f16
At most two relocations per offset are supported
gnu::dllimport
failed to compute relocation: 
Set __stdcall as a default calling convention
debug_abbrev
mips32
debug_aranges
__builtin_arm_mve_vminnmvq_f16
debug_str
DependerDecls...
debug_macinfo
__builtin_arm_mve_vminq_m_s16
debug_macinfo.dwo
mips3
debug_macro.dwo
-fdebug-info-for-profiling
debug_loc
-ff2c
debug_line
Enable just-my-code debugging
debug_rnglists
mips2
debug_pubnames
__builtin_arm_mve_vminq_x_s16
debug_pubtypes
Replacement
debug_macro
__builtin_arm_mve_vminq_x_u32
failed to compute symbol address: 
failed to get symbol section: 
__builtin_arm_mve_vminvq_p_s8
unsupported reserved unit length of value 0x%8.8llx
gnu::destructor
< EMPTY >
Abbrev table for offset: 0x%8.8llx
address table at offset 0x%llx
__builtin_arm_mve_vminvq_u32
address table at offset 0x%llx contains data of size 0x%llx which is not a multiple of addr size %hhu
clang::diagnose_as_builtin
parsing address table at offset 0x%llx: %s
__builtin_arm_mve_vmladavaq_p_s8
section is not large enough to contain an address table at offset 0x%llx with a unit_length value of 0x%llx
address table at offset 0x%llx has a unit_length value of 0x%llx, which is too small to contain a complete header
__builtin_arm_mve_vmladavaq_s16
address table at offset 0x%llx has unsupported version %hu
ArgIndices...
address table at offset 0x%llx has unsupported segment selector size %hhu
-fno-range-check
address table at offset 0x%llx has address size %hhu which is different from CU address size %hhu
DWARF version is not defined in CU, assuming version 5
__builtin_arm_mve_vmladavaxq_p_s8
Address table header: 
DiagnosticType
length = 0x%0*llx
__builtin_arm_mve_vmladavq_p_s16
, version = 0x%4.4hx
, addr_size = 0x%2.2hhx
__builtin_arm_mve_vmladavq_p_u32
, seg_size = 0x%2.2hhx
clang::disable_sanitizer_instrumentation
0x%4.4llx
<size>
0x%8.8llx
mips1
0x%16.16llx
__builtin_arm_mve_vmladavxq_p_s16
Addrs: [
clang::disable_tail_calls
 has unsupported address size: 
__builtin_arm_mve_vmladavxq_s32
 (supported are 
mips4
parsing address ranges table at offset 0x%llx: %s
__builtin_arm_mve_vmlaldavaq_p_u16
the length of address range table at offset 0x%llx exceeds section size
enforce_tcb
address range table at offset 0x%llx
-fjump-tables
non-zero segment selector size in address range table at offset 0x%llx is not supported
mips5
address range table at offset 0x%llx has length that is not a multiple of the tuple size
__builtin_arm_mve_vmlaldavaxq_s16
address range table at offset 0x%llx has an insufficient length to contain any entries
TCBName
address range table at offset 0x%llx has a premature terminator entry at offset 0x%llx
__builtin_arm_mve_vmlaldavq_p_u16
address range table at offset 0x%llx is not terminated by null entry
mips32r3
Address Range Header: 
__builtin_arm_mve_vmlaldavq_u16
length = 0x%0*llx, 
clang::enforce_tcb_leaf
format = 
Generate source-level debug information
version = 0x%4.4x, 
mips32r5
cu_offset = 0x%0*llx, 
__builtin_arm_mve_vmlaq_m_n_s8
addr_size = 0x%2.2x, 
Extensibility
seg_size = 0x%2.2x
__builtin_arm_mve_vmlaq_n_s16
undefined
mips64
same
__builtin_arm_mve_vmlaq_n_u32
gnu::warning
 in addrspace
-fno-real-4-real-16
0x%llx: 
mips64r3
CFA=
__builtin_arm_mve_vmlasq_n_s16
unable to get CIE for FDE at offset 0x%llx
exclude_from_explicit_instantiation
invalid extended CFI opcode 0x%hhx
__builtin_arm_mve_vmlasq_n_u32
OT_Unset
mips64r5
OT_None
__builtin_arm_mve_vmlsdavaq_p_s8
OT_Address
SuccessValue
OT_Offset
Filename (or -) to write header include output to
OT_FactoredCodeOffset
octeon
OT_SignedFactDataOffset
__builtin_arm_mve_vmlsdavaxq_s32
OT_UnsignedFactDataOffset
NumElements
OT_Register
__builtin_arm_mve_vmlsdavq_p_s8
OT_AddressSpace
p5600
OT_Expression
__builtin_arm_mve_vmlsdavxq_p_s16
<unknown CFIProgram::OperandType>
-ffake-address-space-map
op[%u] has type %s which has no value
Use jump tables for lowering switches
op[%u] has OperandType OT_Offset which produces a signed result, call getOperandAsSigned instead
op[%u] has type OT_FactoredCodeOffset but code alignment is zero
__builtin_arm_mve_vmlsldavaq_s16
op[%u] has OperandType %s which produces an unsigned result, call getOperandAsUnsigned instead
generatedDeclaration
op[%u] has type %s but data alignment is zero
__builtin_arm_mve_vmlsldavaxq_s16
op[%u] has type OT_UnsignedFactDataOffset but data alignment is zero
+noabicalls
%s with adrress 0x%llx which must be greater than the current row address 0x%llx
__builtin_arm_mve_vmlsldavq_s16
%s encountered while parsing a CIE
gnu::fallthrough
DW_CFA_restore_state without a matching previous DW_CFA_remember_state
set the flag that enables filtering header information
%s encountered when existing rule for this register is not a constant
-noabicalls
DW_CFA opcode %#x is not supported for architecture %s
__builtin_arm_mve_vmovlbq_m_u16
%s found when CFA rule was not RegPlusOffset
__fastcall
 Unsupported 
__builtin_arm_mve_vmovlbq_u16
 operand to
-long-calls
 Opcode %x
__builtin_arm_mve_vmovlbq_x_u16
 %llx
flag_enum
 %+lld
-fno-real-8-real-10
 %lld
+xgot
 %lld*code_alignment_factor
__builtin_arm_mve_vmovltq_u16
 %lld*data_alignment_factor
flatten
 in addrspace%lld
__builtin_arm_mve_vmovltq_x_u16
%08llx
-xgot
 ZERO terminator
__builtin_arm_mve_vmovnbq_m_u16
 %0*llx
gnu::format
 CIE
-header-include-format=
  Format:                
+nan2008
WARNING: unsupported CIE version
__builtin_arm_mve_vmovntq_m_u16
  Version:               %d
FirstArg
  Augmentation:          "
__builtin_arm_mve_vmovntq_u16
  Address size:          %u
-nan2008
  Segment desc size:     %u
__builtin_arm_mve_vmulhq_m_s8
  Code alignment factor: %u
gnu::format_arg
  Data alignment factor: %d
-fkeep-inline-functions
  Return address column: %d
+abs2008
  Personality Address: %016llx
__builtin_arm_mve_vmulhq_u32
  Augmentation data:    
ThunkType
decoding the CIE opcodes into rows failed
__builtin_arm_mve_vmulhq_x_s8
 FDE cie=
-abs2008
<invalid offset>
__builtin_arm_mve_vmullbq_int_m_s16
 pc=%08llx...%08llx
gnu::gnu_inline
  Format:       
textual,json
  LSDA Address: %016llx
single-float
decoding the FDE opcodes into rows failed
__builtin_arm_mve_vmullbq_int_s8
unknown augmentation character %c in entry at 0x%llx
guarded_var
duplicate personality in entry at 0x%llx
__builtin_arm_mve_vmullbq_int_x_s16
'z' must be the first character at 0x%llx
mips16
parsing augmentation data at 0x%llx failed
__builtin_arm_mve_vmullbq_int_x_u32
parsing FDE data at 0x%llx failed due to missing CIE
managed
parsing entry instructions at 0x%llx failed
-fno-real-8-real-4
micromips
__builtin_arm_mve_vmulltq_int_m_s16
? + 
numthreads
__builtin_arm_mve_vmulltq_int_m_u32
, 0x0
__builtin_arm_mve_vmulltq_int_s8
(short)
(unsigned short)
-headerpad_max_install_names
'\\'
dspr2
'\''
__builtin_arm_mve_vmulltq_int_x_u32
'\a'
ResourceType
'\b'
__builtin_arm_mve_vmulltq_poly_p16
'\f'
'\n'
Share state based on the PID of the parent command. See also -fdepscan-share-stop.
'\r'
Use a fake address space map; OpenCL testing purposes only
'\t'
-fkeep-static-consts
'\v'
-fp64
'\x%02x'
__builtin_arm_mve_vmulq_m_n_s8
'\u%04x'
SV_GroupIndex
'\U%08x'
__builtin_arm_mve_vmulq_m_s16
const 
+fpxx
DWARF unit from offset 0x%8.8llx incl. to offset 0x%8.8llx excl. tries to read DIEs at offset 0x%8.8llx
__builtin_arm_mve_vmulq_m_u32
DWARF unit at offset 0x%8.8llx contains invalid abbreviation set offset 0x%llx
gnu::hot
DWARF unit at offset 0x%8.8llx contains invalid abbreviation %llu at offset 0x%8.8llx, valid abbreviations are %s
/headerUnit:quote
DWARF unit at offset 0x%8.8llx contains invalid FORM_* 0x%hx at offset 0x%8.8llx
+nooddspreg
Line table prologue:
__builtin_arm_mve_vmulq_n_u32
    total_length: 0x%0*llx
clang::ibaction
          format: 
__builtin_arm_mve_vmulq_s8
         version: %u
+fp64
    address_size: %u
__builtin_arm_mve_vmulq_x_f16
 seg_select_size: %u
clang::iboutlet
 prologue_length: 0x%0*llx
-fno-reciprocal-math
 min_inst_length: %u
nooddspreg
max_ops_per_inst: %u
__builtin_arm_mve_vmulq_x_n_u32
Interface
 default_is_stmt: %u
__builtin_arm_mve_vmulq_x_s8
       line_base: %i
nomadd4
      line_range: %u
__builtin_arm_mve_vmvnq_m_n_s16
     opcode_base: %u
gnu::ifunc
standard_opcode_lengths[{0}] = {1}
--help-hidden
include_directories[%3u] = 
file_names[%3u]:
__builtin_arm_mve_vmvnq_m_u32
           name: 
init_priority
      dir_index: %llu
__builtin_arm_mve_vmvnq_n_u16
   md5_checksum: 
       mod_time: 0x%8.8llx
__builtin_arm_mve_vmvnq_s8
         length: 0x%8.8llx
intel_ocl_bicc
         source: 
Keep static const variables if unused
parsing line table prologue at offset 0x%8.8llx: unsupported version %hu
virt
parsing line table prologue at offset 0x%8.8llx found opcode base of 0. Assuming no standard opcodes
__builtin_arm_mve_vmvnq_x_s16
parsing line table prologue at offset 0x%8.8llx: %s
internal_linkage
parsing line table prologue at 0x%8.8llx found an invalid directory or file table description at 0x%8.8llx
__builtin_arm_mve_vmvnq_x_u32
unknown data in line table prologue at offset 0x%8.8llx: parsing ended (at offset 0x%8.8llx) before reaching the prologue end at offset 0x%8.8llx
ginv
Address            Line   Column File   ISA Discriminator Flags
__builtin_arm_mve_vnegq_m_f16
------------------ ------ ------ ------ --- ------------- -------------
lto_visibility_public
0x%16.16llx %6u %6u
/HELP
 %6u %3u %13u 
hazard
 is_stmt
__builtin_arm_mve_vnegq_x_f16
 basic_block
layout_version
 prologue_end
__builtin_arm_mve_vnegq_x_s8
 epilogue_begin
+use-indirect-jump-hazard
 end_sequence
__builtin_arm_mve_vornq_m_f32
offset 0x%8.8llx is not a valid debug line section offset
gnu::leaf
line table program at offset 0x%8.8llx contains a %s opcode at offset 0x%8.8llx, but the prologue maximum_operations_per_instruction value is %hhd, which is unsupported. Assuming a value of 1 instead
-fno-record-gcc-switches
line table program at offset 0x%8.8llx contains a %s opcode at offset 0x%8.8llx, but the prologue minimum_instruction_length value is 0, which prevents any address advancing
line table program at offset 0x%8.8llx contains a %s opcode at offset 0x%8.8llx, but the prologue line_range value is 0. The address and line will not be adjusted
__builtin_arm_mve_vornq_s32
line table program with offset 0x%8.8llx has length 0x%8.8llx but only 0x%8.8llx bytes are available
clang::lifetimebound
0x%08.08llx: 
__builtin_arm_mve_vornq_u8
%02.02hhx 
Badly formed extended line op (length 0)
__builtin_arm_mve_vornq_x_s32
mismatching address size at offset 0x%8.8llx expected 0x%2.2hhx found 0x%2.2llx
clang::likely
address size 0x%2.2llx of DW_LNE_set_address opcode at offset 0x%8.8llx is unsupported
/help
, dir=
, mod_time=
__builtin_arm_mve_vorrq_m_f32
(0x%16.16llx)
clang::loader_uninitialized
, length=
__builtin_arm_mve_vorrq_m_n_u32
Unrecognized extended op 0x%02.02hhx
 length %llx
__builtin_arm_mve_vorrq_m_u16
unexpected line op length at offset 0x%8.8llx expected 0x%2.2llx found 0x%2.2llx
-ffast-math
 (<parsing error>
-flang-experimental-exec
 %2.2hhx
 (0x%16.16llx)
__builtin_arm_mve_vorrq_s32
 (0x%4.4hx)
State
Unrecognized standard opcode
__builtin_arm_mve_vorrq_u8
 (operands: 
603e
0x%16.16llx
__builtin_arm_mve_vorrq_x_s32
address += 
mig_server_routine
,  line += 
--hip-device-lib=
last sequence in debug line table at offset 0x%8.8llx is not terminated
603ev
failed to parse directory entry because extracting the form value failed
__builtin_arm_mve_vpselq_s16
failed to parse directory entry because skipping the form value failed
ms_abi
failed to parse file entry because extracting the form value failed
__builtin_arm_mve_vpselq_u16
failed to parse file entry because the MD5 hash is invalid
failed to parse entry content descriptors: %s
__builtin_arm_mve_vqabsq_m_s16
failed to parse entry content descriptions because no path was found
allocator
include directories table was not null terminated before the end of the prologue
-fno-recovery-ast
file names table was not null terminated before the end of the prologue
604e
special
__builtin_arm_mve_vqaddq_m_n_s8
__multiple_inheritance
__builtin_arm_mve_vqaddq_m_s16
__builtin_arm_mve_vqaddq_m_u32
__unspecified_inheritance
LLE of kind %x not supported
--hip-link
%-*s(
Invalid dump range
__builtin_arm_mve_vqaddq_s16
unable to resolve indirect address %u for: %s
gnu::ms_struct
minsize
, unit_size = 
-fno-reformat
0x%8.8llx:
-fcuda-include-gpubinary
 [%s%*c
Allow aggressive, lossy floating-point optimizations
<End of list>
-flarge-sizes
dead code
 => 
__builtin_arm_mve_vqmovntq_m_u16
__builtin_arm_mve_vqmovntq_m_u32
__builtin_arm_mve_vqmovntq_s16
__builtin_arm_mve_vqmovntq_s32
__builtin_arm_mve_vqmovntq_u32
__builtin_arm_mve_vqmovunbq_m_s16
__builtin_arm_mve_vqmovunbq_m_s32
__builtin_arm_mve_vqmovunbq_s32
__builtin_arm_mve_vqmovuntq_m_s16
__builtin_arm_mve_vqmovuntq_m_s32
__builtin_arm_mve_vqmovuntq_s16
__builtin_arm_mve_vqmovuntq_s32
__builtin_arm_mve_vqnegq_m_s16
__builtin_arm_mve_vqnegq_m_s32
__builtin_arm_mve_vqnegq_s16
__builtin_arm_mve_vqnegq_s32
__builtin_arm_mve_vqnegq_s8
__builtin_arm_mve_vqrdmladhq_m_s32
__builtin_arm_mve_vqrdmladhq_m_s8
__builtin_arm_mve_vqrdmladhq_s16
__builtin_arm_mve_vqrdmladhq_s8
__builtin_arm_mve_vqrdmladhxq_m_s16
__builtin_arm_mve_vqrdmladhxq_m_s32
__builtin_arm_mve_vqrdmladhxq_m_s8
__builtin_arm_mve_vqrdmladhxq_s16
__builtin_arm_mve_vqrdmladhxq_s32
__builtin_arm_mve_vqrdmladhxq_s8
__builtin_arm_mve_vqrdmlahq_m_n_s32
__builtin_arm_mve_vqrdmlahq_m_n_s8
__builtin_arm_mve_vqrdmlahq_n_s16
__builtin_arm_mve_vqrdmlahq_n_s8
__builtin_arm_mve_vqrdmlashq_m_n_s16
__builtin_arm_mve_vqrdmlashq_m_n_s32
__builtin_arm_mve_vqrdmlashq_n_s16
__builtin_arm_mve_vqrdmlashq_n_s32
__builtin_arm_mve_vqrdmlashq_n_s8
__builtin_arm_mve_vqrdmlsdhq_m_s16
__builtin_arm_mve_vqrdmlsdhq_m_s32
__builtin_arm_mve_vqrdmlsdhq_m_s8
__builtin_arm_mve_vqrdmlsdhq_s16
No %s
short_call
__builtin_arm_mve_vqrdmlsdhq_s32
__builtin_arm_mve_vqrdmlsdhq_s8
__builtin_arm_mve_vqrdmlsdhxq_m_s16
__builtin_arm_mve_vqrdmlsdhxq_m_s32
__builtin_arm_mve_vqrdmlsdhxq_s16
__builtin_arm_mve_vqrdmlsdhxq_s32
__builtin_arm_mve_vqrdmlsdhxq_s8
__builtin_arm_mve_vqrdmulhq_m_n_s32
__builtin_arm_mve_vqrdmulhq_m_n_s8
__builtin_arm_mve_vqrdmulhq_m_s16
__builtin_arm_mve_vqrdmulhq_m_s32
__builtin_arm_mve_vqrdmulhq_m_s8
__builtin_arm_mve_vqrdmulhq_n_s16
__builtin_arm_mve_vqrdmulhq_n_s32
__builtin_arm_mve_vqrdmulhq_s16
__builtin_arm_mve_vqrdmulhq_s32
__builtin_arm_mve_vqrdmulhq_s8
__builtin_arm_mve_vqrshlq_m_n_s32
__builtin_arm_mve_vqrshlq_m_n_s8
__builtin_arm_mve_vqrshlq_m_n_u16
__builtin_arm_mve_vqrshlq_m_n_u8
__builtin_arm_mve_vqrshlq_m_s16
__builtin_arm_mve_vqrshlq_m_s32
__builtin_arm_mve_vqrshlq_m_s8
__builtin_arm_mve_vqrshlq_m_u16
__builtin_arm_mve_vqrshlq_m_u32
__builtin_arm_mve_vqrshlq_m_u8
ErrorDomain
 [%llu]
<0x%2.2x> 
clang::ns_returns_not_retained
<0x%4.4x> 
 .debug_line_str[0x%0*llx] = 
/hlsl-no-stdinc
indexed (%8.8x) string = 
power5x
alt indirect string, offset: 0x%llx
__builtin_arm_mve_vqrshlq_n_s16
__builtin_arm_mve_vqrshlq_n_s32
__builtin_arm_mve_vqrshlq_n_s8
__builtin_arm_mve_vqrshlq_n_u16
__builtin_arm_mve_vqrshlq_n_u8
__builtin_arm_mve_vqrshlq_s16
__builtin_arm_mve_vqrshlq_s32
__builtin_arm_mve_vqrshlq_u16
__builtin_arm_mve_vqrshlq_u32
__builtin_arm_mve_vqrshlq_u8
__builtin_arm_mve_vqrshrnbq_m_n_s16
__builtin_arm_mve_vqrshrnbq_m_n_s32
__builtin_arm_mve_vqrshrnbq_m_n_u16
__builtin_arm_mve_vqrshrnbq_m_n_u32
__builtin_arm_mve_vqrshrnbq_n_s32
__builtin_arm_mve_vqrshrnbq_n_u16
__builtin_arm_mve_vqrshrnbq_n_u32
__builtin_arm_mve_vqrshrntq_m_n_s32
__builtin_arm_mve_vqrshrntq_m_n_u16
__builtin_arm_mve_vqrshrntq_m_n_u32
__builtin_arm_mve_vqrshrntq_n_s32
__builtin_arm_mve_vqrshrntq_n_u16
__builtin_arm_mve_vqrshrntq_n_u32
__builtin_arm_mve_vqrshrunbq_m_n_s16
__builtin_arm_mve_vqrshrunbq_m_n_s32
__builtin_arm_mve_vqrshrunbq_n_s16
__builtin_arm_mve_vqrshrunbq_n_s32
__builtin_arm_mve_vqrshruntq_m_n_s32
__builtin_arm_mve_vqrshruntq_n_s16
__builtin_arm_mve_vqrshruntq_n_s32
__builtin_arm_mve_vqshlq_m_n_s32
__builtin_arm_mve_vqshlq_m_n_s8
__builtin_arm_mve_vqshlq_m_n_u16
__builtin_arm_mve_vqshlq_m_n_u8
__builtin_arm_mve_vqshlq_m_r_s16
__builtin_arm_mve_vqshlq_m_r_s32
__builtin_arm_mve_vqshlq_m_r_s8
__builtin_arm_mve_vqshlq_m_r_u16
__builtin_arm_mve_vqshlq_m_r_u32
__builtin_arm_mve_vqshlq_m_r_u8
__builtin_arm_mve_vqshlq_m_s32
__builtin_arm_mve_vqshlq_m_s8
__builtin_arm_mve_vqshlq_m_u16
__builtin_arm_mve_vqshlq_m_u8
__builtin_arm_mve_vqshlq_n_s16
__builtin_arm_mve_vqshlq_n_s32
cu + 0x%2.2x
gnu::naked
    %d(0x%x): 
__builtin_arm_mve_vqshlq_n_s8
__builtin_arm_mve_vqshlq_n_u16
__builtin_arm_mve_vqshlq_n_u32
__builtin_arm_mve_vqshlq_n_u8
__builtin_arm_mve_vqshlq_r_s16
__builtin_arm_mve_vqshlq_r_s32
__builtin_arm_mve_vqshlq_r_s8
__builtin_arm_mve_vqshlq_r_u16
__builtin_arm_mve_vqshlq_r_u8
__builtin_arm_mve_vqshlq_s16
__builtin_arm_mve_vqshlq_s32
__builtin_arm_mve_vqshlq_u16
__builtin_arm_mve_vqshlq_u32
__builtin_arm_mve_vqshlq_u8
0x%x 
clang::noderef
__builtin_arm_mve_vqshluq_m_n_s16
__builtin_arm_mve_vqshluq_m_n_s32
__builtin_arm_mve_vqshluq_m_n_s8
__builtin_arm_mve_vqshluq_n_s16
__builtin_arm_mve_vqshluq_n_s32
__builtin_arm_mve_vqshluq_n_s8
__builtin_arm_mve_vqshrnbq_m_n_s16
__builtin_arm_mve_vqshrnbq_m_n_s32
%s table at offset 0x%llx has unsupported segment selector size %hhu
clang::noduplicate
%s table at offset 0x%llx has more offset entries (%u) than there is space for
-fno-rename-registers
%s list header: length = 0x%0*llx
future
, version = 0x%4.4hx, addr_size = 0x%2.2hhx, seg_size = 0x%2.2hhx, offset_entry_count = 0x%8.8x
__builtin_arm_mve_vqshrnbq_m_n_u16
__builtin_arm_mve_vqshrnbq_m_n_u32
__builtin_arm_mve_vqshrnbq_n_s16
__builtin_arm_mve_vqshrnbq_n_s32
__builtin_arm_mve_vqshrnbq_n_u32
__builtin_arm_mve_vqshrntq_m_n_s16
__builtin_arm_mve_vqshrntq_m_n_s32
__builtin_arm_mve_vqshrntq_m_n_u32
__builtin_arm_mve_vqshrntq_n_s16
__builtin_arm_mve_vqshrntq_n_s32
__builtin_arm_mve_vqshrntq_n_u16
__builtin_arm_mve_vqshrntq_n_u32
__builtin_arm_mve_vqshrunbq_m_n_s16
__builtin_arm_mve_vqshrunbq_m_n_s32
__builtin_arm_mve_vqshrunbq_n_s32
__builtin_arm_mve_vqshruntq_m_n_s16
__builtin_arm_mve_vqshruntq_m_n_s32
__builtin_arm_mve_vqshruntq_n_s32
__builtin_arm_mve_vqsubq_m_n_s16
__builtin_arm_mve_vqsubq_m_n_s32
__builtin_arm_mve_vqsubq_m_n_u16
__builtin_arm_mve_vqsubq_m_n_u32
__builtin_arm_mve_vqsubq_m_n_u8
__builtin_arm_mve_vqsubq_m_s16
__builtin_arm_mve_vqsubq_m_s32
__builtin_arm_mve_vqsubq_m_s8
__builtin_arm_mve_vqsubq_m_u16
__builtin_arm_mve_vqsubq_m_u8
__builtin_arm_mve_vqsubq_n_s16
__builtin_arm_mve_vqsubq_n_s32
__builtin_arm_mve_vqsubq_n_u16
__builtin_arm_mve_vqsubq_n_u32
__builtin_arm_mve_vqsubq_n_u8
__builtin_arm_mve_vqsubq_s32
__builtin_arm_mve_vqsubq_s8
__builtin_arm_mve_vqsubq_u16
__builtin_arm_mve_vqsubq_u32
__builtin_arm_mve_vqsubq_u8
__builtin_arm_mve_vreinterpretq_f16_f32
__builtin_arm_mve_vreinterpretq_f16_s16
__builtin_arm_mve_vreinterpretq_f16_s64
__builtin_arm_mve_vreinterpretq_f16_s8
__builtin_arm_mve_vreinterpretq_f16_u16
__builtin_arm_mve_vreinterpretq_f16_u64
__builtin_arm_mve_vreinterpretq_f16_u8
__builtin_arm_mve_vreinterpretq_f32_f16
__builtin_arm_mve_vreinterpretq_f32_s32
__builtin_arm_mve_vreinterpretq_f32_s64
__builtin_arm_mve_vreinterpretq_f32_s8
__builtin_arm_mve_vreinterpretq_f32_u16
__builtin_arm_mve_vreinterpretq_f32_u32
__builtin_arm_mve_vreinterpretq_f32_u64
__builtin_arm_mve_vreinterpretq_f32_u8
gnu::nomicromips
MACINFO
__builtin_arm_mve_vreinterpretq_s16_f16
__builtin_arm_mve_vreinterpretq_s16_f32
__builtin_arm_mve_vreinterpretq_s16_s32
__builtin_arm_mve_vreinterpretq_s16_s64
__builtin_arm_mve_vreinterpretq_s16_u16
__builtin_arm_mve_vreinterpretq_s16_u32
__builtin_arm_mve_vreinterpretq_s16_u64
__builtin_arm_mve_vreinterpretq_s32_f16
__builtin_arm_mve_vreinterpretq_s32_f32
__builtin_arm_mve_vreinterpretq_s32_s16
__builtin_arm_mve_vreinterpretq_s32_s64
__builtin_arm_mve_vreinterpretq_s32_s8
__builtin_arm_mve_vreinterpretq_s32_u16
__builtin_arm_mve_vreinterpretq_s32_u32
DWARF unit from offset 0x%8.8llx incl. to offset  0x%8.8llx excl. extends past section size 0x%8.8zx
gnu::no_randomize_layout
DWARF unit at offset 0x%8.8llx has unsupported version %hu, supported are 2-%u
invalid reference to or invalid content in .debug_str_offsets[.dwo]: 
-iapinotes-modules
invalid range list table index %d (possibly missing the entire range list table)
-many
No unit DIE
__builtin_arm_mve_vreinterpretq_s32_u64
__builtin_arm_mve_vreinterpretq_s32_u8
__builtin_arm_mve_vreinterpretq_s64_f16
__builtin_arm_mve_vreinterpretq_s64_f32
__builtin_arm_mve_vreinterpretq_s64_s32
__builtin_arm_mve_vreinterpretq_s64_s8
__builtin_arm_mve_vreinterpretq_s64_u16
__builtin_arm_mve_vreinterpretq_s64_u32
__builtin_arm_mve_vreinterpretq_s64_u64
__builtin_arm_mve_vreinterpretq_s64_u8
__builtin_arm_mve_vreinterpretq_s8_f16
__builtin_arm_mve_vreinterpretq_s8_f32
__builtin_arm_mve_vreinterpretq_s8_s16
__builtin_arm_mve_vreinterpretq_s8_s32
__builtin_arm_mve_vreinterpretq_s8_s64
__builtin_arm_mve_vreinterpretq_s8_u32
__builtin_arm_mve_vreinterpretq_s8_u64
__builtin_arm_mve_vreinterpretq_s8_u8
__builtin_arm_mve_vreinterpretq_u16_f32
__builtin_arm_mve_vreinterpretq_u16_s16
__builtin_arm_mve_vreinterpretq_u16_s32
__builtin_arm_mve_vreinterpretq_u16_s8
__builtin_arm_mve_vreinterpretq_u16_u32
__builtin_arm_mve_vreinterpretq_u16_u64
__builtin_arm_mve_vreinterpretq_u16_u8
__builtin_arm_mve_vreinterpretq_u32_f16
__builtin_arm_mve_vreinterpretq_u32_f32
__builtin_arm_mve_vreinterpretq_u32_s16
__builtin_arm_mve_vreinterpretq_u32_s64
__builtin_arm_mve_vreinterpretq_u32_s8
__builtin_arm_mve_vreinterpretq_u32_u16
__builtin_arm_mve_vreinterpretq_u32_u8
__builtin_arm_mve_vreinterpretq_u64_f16
__builtin_arm_mve_vreinterpretq_u64_f32
__builtin_arm_mve_vreinterpretq_u64_s32
__builtin_arm_mve_vreinterpretq_u64_s64
__builtin_arm_mve_vreinterpretq_u64_s8
__builtin_arm_mve_vreinterpretq_u64_u16
__builtin_arm_mve_vreinterpretq_u64_u32
__builtin_arm_mve_vreinterpretq_u64_u8
__builtin_arm_mve_vreinterpretq_u8_f16
length exceeds section size
Sanitizers...
__builtin_arm_mve_vreinterpretq_u8_f32
__builtin_arm_mve_vreinterpretq_u8_s16
__builtin_arm_mve_vreinterpretq_u8_s32
__builtin_arm_mve_vreinterpretq_u8_s64
__builtin_arm_mve_vreinterpretq_u8_u16
__builtin_arm_mve_vreinterpretq_u8_u32
__builtin_arm_mve_vreinterpretq_u8_u64
__builtin_arm_mve_vrev16q_m_u8
__builtin_arm_mve_vrev16q_s8
__builtin_arm_mve_vrev16q_u8
__builtin_arm_mve_vrev16q_x_s8
__builtin_arm_mve_vrev16q_x_u8
__builtin_arm_mve_vrev32q_f16
__builtin_arm_mve_vrev32q_m_f16
__builtin_arm_mve_vrev32q_m_s8
__builtin_arm_mve_vrev32q_m_u16
__builtin_arm_mve_vrev32q_m_u8
__builtin_arm_mve_vrev32q_s16
__builtin_arm_mve_vrev32q_s8
__builtin_arm_mve_vrev32q_u16
__builtin_arm_mve_vrev32q_u8
Abbreviation declaration contains multiple 
+relax
Verifying .debug_info Unit Header Chain...
__builtin_arm_mve_vrev32q_x_f16
__builtin_arm_mve_vrev32q_x_s16
__builtin_arm_mve_vrev32q_x_s8
__builtin_arm_mve_vrev32q_x_u16
__builtin_arm_mve_vrev32q_x_u8
__builtin_arm_mve_vrev64q_f16
__builtin_arm_mve_vrev64q_f32
__builtin_arm_mve_vrev64q_m_f16
Verifying .debug_types Unit Header Chain...
nothrow
Verifying non-dwo Units...
none,integer,all
Verifying dwo Units...
-relax
Invalid address range 
__builtin_arm_mve_vrev64q_m_f32
__builtin_arm_mve_vrev64q_m_s16
__builtin_arm_mve_vrev64q_m_s32
__builtin_arm_mve_vrev64q_m_s8
__builtin_arm_mve_vrev64q_m_u32
__builtin_arm_mve_vrev64q_m_u8
__builtin_arm_mve_vrev64q_s16
__builtin_arm_mve_vrev64q_s8
__builtin_arm_mve_vrev64q_u16
__builtin_arm_mve_vrev64q_u32
__builtin_arm_mve_vrev64q_u8
__builtin_arm_mve_vrev64q_x_f16
__builtin_arm_mve_vrev64q_x_f32
__builtin_arm_mve_vrev64q_x_s16
__builtin_arm_mve_vrev64q_x_s8
__builtin_arm_mve_vrev64q_x_u16
__builtin_arm_mve_vrev64q_x_u32
__builtin_arm_mve_vrhaddq_m_s16
__builtin_arm_mve_vrhaddq_m_s32
__builtin_arm_mve_vrhaddq_m_s8
__builtin_arm_mve_vrhaddq_m_u32
__builtin_arm_mve_vrhaddq_m_u8
__builtin_arm_mve_vrhaddq_s16
__builtin_arm_mve_vrhaddq_s32
__builtin_arm_mve_vrhaddq_s8
__builtin_arm_mve_vrhaddq_u16
__builtin_arm_mve_vrhaddq_u32
__builtin_arm_mve_vrhaddq_x_s16
__builtin_arm_mve_vrhaddq_x_s32
__builtin_arm_mve_vrhaddq_x_s8
__builtin_arm_mve_vrhaddq_x_u32
__builtin_arm_mve_vrhaddq_x_u8
__builtin_arm_mve_vrmlaldavhaq_p_s32
__builtin_arm_mve_vrmlaldavhaq_s32
__builtin_arm_mve_vrmlaldavhaq_u32
__builtin_arm_mve_vrmlaldavhaxq_p_s32
__builtin_arm_mve_vrmlaldavhaxq_s32
__builtin_arm_mve_vrmlaldavhq_p_s32
__builtin_arm_mve_vrmlaldavhq_p_u32
__builtin_arm_mve_vrmlaldavhq_s32
__builtin_arm_mve_vrmlaldavhxq_p_s32
__builtin_arm_mve_vrmlaldavhxq_s32
__builtin_arm_mve_vrmlsldavhaq_p_s32
__builtin_arm_mve_vrmlsldavhaxq_p_s32
__builtin_arm_mve_vrmlsldavhaxq_s32
__builtin_arm_mve_vrmlsldavhq_p_s32
DW_FORM_ref_addr offset beyond .debug_info bounds:
__builtin_arm_mve_vrmlsldavhq_s32
__builtin_arm_mve_vrmlsldavhxq_p_s32
__builtin_arm_mve_vrmlsldavhxq_s32
__builtin_arm_mve_vrmulhq_m_s16
__builtin_arm_mve_vrmulhq_m_s32
__builtin_arm_mve_vrmulhq_m_s8
__builtin_arm_mve_vrmulhq_m_u16
__builtin_arm_mve_vrmulhq_m_u32
__builtin_arm_mve_vrmulhq_s16
__builtin_arm_mve_vrmulhq_s32
__builtin_arm_mve_vrmulhq_s8
__builtin_arm_mve_vrmulhq_u32
__builtin_arm_mve_vrmulhq_u8
__builtin_arm_mve_vrmulhq_x_s16
__builtin_arm_mve_vrmulhq_x_s8
__builtin_arm_mve_vrmulhq_x_u16
__builtin_arm_mve_vrmulhq_x_u32
__builtin_arm_mve_vrmulhq_x_u8
__builtin_arm_mve_vrndaq_f16
__builtin_arm_mve_vrndaq_f32
__builtin_arm_mve_vrndaq_m_f16
invalid DIE reference 
The compilation directory to embed in the debug info and coverage mapping.
. Offset is in between DIEs:
] is a duplicate of file_names[
objc_boxable
] row[
-iframework
] decreases in address from previous row:
rv64imafdc
__builtin_arm_mve_vrndaq_m_f32
__builtin_arm_mve_vrndaq_x_f16
__builtin_arm_mve_vrndaq_x_f32
__builtin_arm_mve_vrndmq_f16
__builtin_arm_mve_vrndmq_m_f16
__builtin_arm_mve_vrndmq_m_f32
__builtin_arm_mve_vrndmq_x_f16
__builtin_arm_mve_vrndnq_f16
__builtin_arm_mve_vrndnq_f32
__builtin_arm_mve_vrndnq_m_f16
__builtin_arm_mve_vrndnq_m_f32
__builtin_arm_mve_vrndnq_x_f16
__builtin_arm_mve_vrndnq_x_f32
__builtin_arm_mve_vrndpq_f16
__builtin_arm_mve_vrndpq_m_f16
__builtin_arm_mve_vrndpq_m_f32
__builtin_arm_mve_vrndpq_x_f16
__builtin_arm_mve_vrndq_f16
__builtin_arm_mve_vrndq_f32
__builtin_arm_mve_vrndq_m_f16
__builtin_arm_mve_vrndq_x_f16
__builtin_arm_mve_vrndq_x_f32
__builtin_arm_mve_vrndxq_f16
__builtin_arm_mve_vrndxq_f32
__builtin_arm_mve_vrndxq_m_f16
__builtin_arm_mve_vrndxq_m_f32
__builtin_arm_mve_vrndxq_x_f16
__builtin_arm_mve_vrshlq_m_n_s16
__builtin_arm_mve_vrshlq_m_n_s32
__builtin_arm_mve_vrshlq_m_n_s8
__builtin_arm_mve_vrshlq_m_n_u32
__builtin_arm_mve_vrshlq_m_n_u8
__builtin_arm_mve_vrshlq_m_s16
__builtin_arm_mve_vrshlq_m_s32
__builtin_arm_mve_vrshlq_m_s8
__builtin_arm_mve_vrshlq_m_u16
__builtin_arm_mve_vrshlq_m_u32
__builtin_arm_mve_vrshlq_m_u8
__builtin_arm_mve_vrshlq_n_s16
__builtin_arm_mve_vrshlq_n_s32
__builtin_arm_mve_vrshlq_n_s8
__builtin_arm_mve_vrshlq_n_u32
__builtin_arm_mve_vrshlq_n_u8
__builtin_arm_mve_vrshlq_s16
__builtin_arm_mve_vrshlq_s8
__builtin_arm_mve_vrshlq_u16
__builtin_arm_mve_vrshlq_u32
__builtin_arm_mve_vrshlq_u8
__builtin_arm_mve_vrshlq_x_s16
__builtin_arm_mve_vrshlq_x_s32
__builtin_arm_mve_vrshlq_x_s8
__builtin_arm_mve_vrshlq_x_u16
__builtin_arm_mve_vrshlq_x_u32
__builtin_arm_mve_vrshlq_x_u8
__builtin_arm_mve_vrshrnbq_m_n_s16
] has invalid file index 
objc_designated_initializer
Name Index @ {0:x}: Name table entries [{1}, {2}] are not covered by the hash table.
-flimit-debug-info
__builtin_arm_mve_vrshrnbq_m_n_s32
__builtin_arm_mve_vrshrnbq_m_n_u16
__builtin_arm_mve_vrshrnbq_m_n_u32
__builtin_arm_mve_vrshrnbq_n_s16
__builtin_arm_mve_vrshrnbq_n_u16
__builtin_arm_mve_vrshrnbq_n_u32
__builtin_arm_mve_vrshrntq_m_n_s16
__builtin_arm_mve_vrshrntq_m_n_u16
__builtin_arm_mve_vrshrntq_m_n_u32
__builtin_arm_mve_vrshrntq_n_s16
__builtin_arm_mve_vrshrntq_n_s32
__builtin_arm_mve_vrshrntq_n_u16
__builtin_arm_mve_vrshrntq_n_u32
__builtin_arm_mve_vrshrq_m_n_s16
NameIndex @ {0:x}: Indexing multiple compile units and abbreviation {1:x} has no {2} attribute.
objc_exception
NameIndex @ {0:x}: Abbreviation {1:x} has no {2} attribute.
Name Index @ {0:x}: Entry @ {1:x}: mismatched CU of DIE @ {2:x}: index - {3:x}; debug_info - {4:x}.
Do not add -rpath with architecture-specific resource directory to the linker flags
Name Index @ {0:x}: Entry @ {1:x}: mismatched Tag of DIE @ {2:x}: index - {3}; debug_info - {4}.
-Asparclet
Name Index @ {0:x}: Entry @ {1:x}: mismatched Name of DIE @ {2:x}: index - {3}; debug_info - {4}.
__builtin_arm_mve_vrshrq_m_n_s32
__builtin_arm_mve_vrshrq_m_n_s8
__builtin_arm_mve_vrshrq_m_n_u16
__builtin_arm_mve_vrshrq_m_n_u32
__builtin_arm_mve_vrshrq_n_s16
__builtin_arm_mve_vrshrq_n_s32
__builtin_arm_mve_vrshrq_n_s8
__builtin_arm_mve_vrshrq_n_u32
__builtin_arm_mve_vrshrq_n_u8
__builtin_arm_mve_vrshrq_x_n_s16
__builtin_arm_mve_vrshrq_x_n_s32
__builtin_arm_mve_vrshrq_x_n_s8
__builtin_arm_mve_vrshrq_x_n_u16
__builtin_arm_mve_vrshrq_x_n_u32
__builtin_arm_mve_vsbciq_m_s32
__builtin_arm_mve_vsbciq_m_u32
__builtin_arm_mve_vsbciq_s32
__builtin_arm_mve_vsbcq_m_s32
__builtin_arm_mve_vsbcq_m_u32
__builtin_arm_mve_vsbcq_s32
__builtin_arm_mve_vsbcq_u32
__builtin_arm_mve_vsetq_lane_f16
__builtin_arm_mve_vsetq_lane_f32
__builtin_arm_mve_vsetq_lane_s16
__builtin_arm_mve_vsetq_lane_s32
__builtin_arm_mve_vsetq_lane_s64
__builtin_arm_mve_vsetq_lane_s8
__builtin_arm_mve_vsetq_lane_u16
__builtin_arm_mve_vsetq_lane_u64
__builtin_arm_mve_vsetq_lane_u8
__builtin_arm_mve_vshlcq_m_s16
__builtin_arm_mve_vshlcq_m_s8
__builtin_arm_mve_vshlcq_m_u16
__builtin_arm_mve_vshlcq_m_u32
__builtin_arm_mve_vshlcq_s16
__builtin_arm_mve_vshlcq_s32
__builtin_arm_mve_vshlcq_s8
__builtin_arm_mve_vshlcq_u16
__builtin_arm_mve_vshlcq_u32
__builtin_arm_mve_vshlcq_u8
__builtin_arm_mve_vshllbq_m_n_s16
Name Index @ {0:x}: Entry for DIE @ {1:x} ({2}) with name {3} missing.
objc_externally_retained
__builtin_arm_mve_vshllbq_m_n_s8
__builtin_arm_mve_vshllbq_m_n_u16
__builtin_arm_mve_vshllbq_m_n_u8
__builtin_arm_mve_vshllbq_n_s16
__builtin_arm_mve_vshllbq_n_u16
__builtin_arm_mve_vshllbq_n_u8
__builtin_arm_mve_vshllbq_x_n_s16
__builtin_arm_mve_vshllbq_x_n_u16
__builtin_arm_mve_vshllbq_x_n_u8
__builtin_arm_mve_vshlltq_m_n_s16
__builtin_arm_mve_vshlltq_m_n_s8
__builtin_arm_mve_vshlltq_m_n_u16
__builtin_arm_mve_vshlltq_m_n_u8
__builtin_arm_mve_vshlltq_n_s16
__builtin_arm_mve_vshlltq_n_u16
__builtin_arm_mve_vshlltq_n_u8
__builtin_arm_mve_vshlltq_x_n_s16
__builtin_arm_mve_vshlltq_x_n_u16
__builtin_arm_mve_vshlltq_x_n_u8
__builtin_arm_mve_vshlq_m_n_s16
Bitcode section not found in object file
clang::objc_nonlazy_class
Invalid symbol index
__builtin_arm_mve_vshlq_m_n_s32
__builtin_arm_mve_vshlq_m_n_s8
__builtin_arm_mve_vshlq_m_n_u16
__builtin_arm_mve_vshlq_m_n_u32
__builtin_arm_mve_vshlq_m_n_u8
__builtin_arm_mve_vshlq_m_r_s16
__builtin_arm_mve_vshlq_m_r_s32
__builtin_arm_mve_vshlq_m_r_s8
LC_LINKER_OPTIMIZATION_HINT
objc_requires_property_definitions
linker optimization hints
--include-directory-after=
LC_FUNCTION_STARTS
+vector
function starts data
__builtin_arm_mve_vshlq_m_r_u16
__builtin_arm_mve_vshlq_m_r_u32
__builtin_arm_mve_vshlq_m_r_u8
__builtin_arm_mve_vshlq_m_s16
__builtin_arm_mve_vshlq_m_s8
__builtin_arm_mve_vshlq_m_u16
__builtin_arm_mve_vshlq_m_u32
__builtin_arm_mve_vshlq_n_s16
__builtin_arm_mve_vshlq_n_s32
__builtin_arm_mve_vshlq_n_s8
__builtin_arm_mve_vshlq_n_u16
__builtin_arm_mve_vshlq_n_u32
__builtin_arm_mve_vshlq_n_u8
__builtin_arm_mve_vshlq_r_s16
__builtin_arm_mve_vshlq_r_s8
__builtin_arm_mve_vshlq_r_u16
__builtin_arm_mve_vshlq_r_u32
__builtin_arm_mve_vshlq_s16
__builtin_arm_mve_vshlq_s32
__builtin_arm_mve_vshlq_s8
__builtin_arm_mve_vshlq_u32
__builtin_arm_mve_vshlq_u8
__builtin_arm_mve_vshlq_x_n_s16
__builtin_arm_mve_vshlq_x_n_s32
__builtin_arm_mve_vshlq_x_n_s8
__builtin_arm_mve_vshlq_x_n_u16
__builtin_arm_mve_vshlq_x_n_u32
__builtin_arm_mve_vshlq_x_s16
__builtin_arm_mve_vshlq_x_s32
__builtin_arm_mve_vshlq_x_s8
__builtin_arm_mve_vshlq_x_u32
__builtin_arm_mve_vshlq_x_u8
__builtin_arm_mve_vshrnbq_m_n_s16
__builtin_arm_mve_vshrnbq_m_n_u16
__builtin_arm_mve_vshrnbq_m_n_u32
__builtin_arm_mve_vshrnbq_n_s16
__builtin_arm_mve_vshrnbq_n_s32
__builtin_arm_mve_vshrnbq_n_u16
__builtin_arm_mve_vshrnbq_n_u32
__builtin_arm_mve_vshrntq_m_n_s16
__builtin_arm_mve_vshrntq_m_n_u16
__builtin_arm_mve_vshrntq_m_n_u32
__builtin_arm_mve_vshrntq_n_s16
__builtin_arm_mve_vshrntq_n_u16
__builtin_arm_mve_vshrntq_n_u32
__builtin_arm_mve_vshrq_m_n_s16
LC_SEGMENT_SPLIT_INFO
objc_requires_super
LC_VERSION_MIN_TVOS
__builtin_arm_mve_vshrq_m_n_s32
__builtin_arm_mve_vshrq_m_n_s8
__builtin_arm_mve_vshrq_m_n_u16
__builtin_arm_mve_vshrq_m_n_u32
__builtin_arm_mve_vshrq_m_n_u8
__builtin_arm_mve_vshrq_n_s16
__builtin_arm_mve_vshrq_n_s32
__builtin_arm_mve_vshrq_n_s8
__builtin_arm_mve_vshrq_n_u32
__builtin_arm_mve_vshrq_n_u8
__builtin_arm_mve_vshrq_x_n_s16
__builtin_arm_mve_vshrq_x_n_s8
__builtin_arm_mve_vshrq_x_n_u16
__builtin_arm_mve_vshrq_x_n_u32
__builtin_arm_mve_vsliq_m_n_s16
__builtin_arm_mve_vsliq_m_n_s32
__builtin_arm_mve_vsliq_m_n_s8
__builtin_arm_mve_vsliq_m_n_u16
__builtin_arm_mve_vsliq_m_n_u32
__builtin_arm_mve_vsliq_m_n_u8
__builtin_arm_mve_vsliq_n_s16
LC_VERSION_MIN_WATCHOS
clang::objc_suppress_direct
LC_SOURCE_VERSION command 
LC_ENCRYPTION_INFO_64
remap file source paths in debug info, predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
 LC_SUB_FRAMEWORK cmdsize too small
Enable logical abbreviations
LC_SUB_FRAMEWORK
IA32
sub_framework_command
__builtin_arm_mve_vsliq_n_s32
__builtin_arm_mve_vsliq_n_s8
__builtin_arm_mve_vsliq_n_u16
__builtin_arm_mve_vsliq_n_u32
__builtin_arm_mve_vsriq_m_n_s16
__builtin_arm_mve_vsriq_m_n_s32
__builtin_arm_mve_vsriq_m_n_s8
__builtin_arm_mve_vsriq_m_n_u32
__builtin_arm_mve_vsriq_m_n_u8
__builtin_arm_mve_vsriq_n_s16
__builtin_arm_mve_vsriq_n_s32
__builtin_arm_mve_vsriq_n_s8
__builtin_arm_mve_vsriq_n_u16
__builtin_arm_mve_vsriq_n_u32
__builtin_arm_mve_vst1q_f16
__builtin_arm_mve_vst1q_f32
__builtin_arm_mve_vst1q_p_f16
__builtin_arm_mve_vst1q_p_s16
__builtin_arm_mve_vst1q_p_s32
__builtin_arm_mve_vst1q_p_s8
__builtin_arm_mve_vst1q_p_u32
__builtin_arm_mve_vst1q_p_u8
__builtin_arm_mve_vst1q_s16
__builtin_arm_mve_vst1q_s32
__builtin_arm_mve_vst1q_s8
__builtin_arm_mve_vst1q_u16
__builtin_arm_mve_vst1q_u32
__builtin_arm_mve_vst2q_f16
__builtin_arm_mve_vst2q_f32
__builtin_arm_mve_vst2q_s16
__builtin_arm_mve_vst2q_s8
__builtin_arm_mve_vst2q_u16
__builtin_arm_mve_vst2q_u32
__builtin_arm_mve_vst4q_f16
__builtin_arm_mve_vst4q_f32
__builtin_arm_mve_vst4q_s16
__builtin_arm_mve_vst4q_s32
__builtin_arm_mve_vst4q_s8
__builtin_arm_mve_vst4q_u16
__builtin_arm_mve_vst4q_u32
__builtin_arm_mve_vstrbq_p_s16
__builtin_arm_mve_vstrbq_p_s32
__builtin_arm_mve_vstrbq_p_s8
__builtin_arm_mve_vstrbq_p_u32
__builtin_arm_mve_vstrbq_p_u8
__builtin_arm_mve_vstrbq_s16
__builtin_arm_mve_vstrbq_s8
__builtin_arm_mve_vstrbq_scatter_offset_p_s16
__builtin_arm_mve_vstrbq_scatter_offset_p_s32
__builtin_arm_mve_vstrbq_scatter_offset_p_s8
__builtin_arm_mve_vstrbq_scatter_offset_p_u16
__builtin_arm_mve_vstrbq_scatter_offset_p_u32
__builtin_arm_mve_vstrbq_scatter_offset_p_u8
 LC_SUB_UMBRELLA cmdsize too small
intel_reqd_sub_group_size
iundefsym plus nundefsym in LC_DYSYMTAB load  command extends past the end of the symbol table
bad section index: 
__builtin_arm_mve_vstrbq_scatter_offset_s16
__builtin_arm_mve_vstrbq_scatter_offset_s32
__builtin_arm_mve_vstrbq_scatter_offset_s8
__builtin_arm_mve_vstrbq_scatter_offset_u16
__builtin_arm_mve_vstrbq_scatter_offset_u8
__builtin_arm_mve_vstrbq_u16
__builtin_arm_mve_vstrbq_u32
__builtin_arm_mve_vstrdq_scatter_base_p_s64
__builtin_arm_mve_vstrdq_scatter_base_p_u64
__builtin_arm_mve_vstrdq_scatter_base_s64
__builtin_arm_mve_vstrdq_scatter_base_u64
__builtin_arm_mve_vstrdq_scatter_base_wb_p_s64
__builtin_arm_mve_vstrdq_scatter_base_wb_p_u64
__builtin_arm_mve_vstrdq_scatter_base_wb_s64
 for symbol at index 
__kernel
opencl_local
GENERIC_RELOC_VANILLA
--include-with-prefix-before=
GENERIC_RELOC_PAIR
btver2
GENERIC_RELOC_SECTDIFF
__builtin_arm_mve_vstrdq_scatter_base_wb_u64
__builtin_arm_mve_vstrdq_scatter_offset_p_s64
__builtin_arm_mve_vstrdq_scatter_offset_p_u64
__builtin_arm_mve_vstrdq_scatter_offset_s64
__builtin_arm_mve_vstrdq_scatter_shifted_offset_p_s64
__builtin_arm_mve_vstrdq_scatter_shifted_offset_p_u64
__builtin_arm_mve_vstrdq_scatter_shifted_offset_s64
__builtin_arm_mve_vstrhq_f16
__builtin_arm_mve_vstrhq_p_f16
__builtin_arm_mve_vstrhq_p_s16
__builtin_arm_mve_vstrhq_p_s32
__builtin_arm_mve_vstrhq_p_u16
__builtin_arm_mve_vstrhq_p_u32
__builtin_arm_mve_vstrhq_s16
__builtin_arm_mve_vstrhq_scatter_offset_f16
__builtin_arm_mve_vstrhq_scatter_offset_p_f16
__builtin_arm_mve_vstrhq_scatter_offset_p_s16
__builtin_arm_mve_vstrhq_scatter_offset_p_u16
__builtin_arm_mve_vstrhq_scatter_offset_p_u32
__builtin_arm_mve_vstrhq_scatter_offset_s16
__builtin_arm_mve_vstrhq_scatter_offset_u16
__builtin_arm_mve_vstrhq_scatter_offset_u32
__builtin_arm_mve_vstrhq_scatter_shifted_offset_f16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_f16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_s16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_s32
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_u16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_s16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_s32
__builtin_arm_mve_vstrhq_scatter_shifted_offset_u16
__builtin_arm_mve_vstrhq_u16
__builtin_arm_mve_vstrhq_u32
__builtin_arm_mve_vstrwq_f32
__builtin_arm_mve_vstrwq_p_f32
__builtin_arm_mve_vstrwq_p_s32
__builtin_arm_mve_vstrwq_p_u32
__builtin_arm_mve_vstrwq_s32
__builtin_arm_mve_vstrwq_scatter_base_f32
__builtin_arm_mve_vstrwq_scatter_base_p_f32
__builtin_arm_mve_vstrwq_scatter_base_p_s32
__builtin_arm_mve_vstrwq_scatter_base_p_u32
__builtin_arm_mve_vstrwq_scatter_base_u32
__builtin_arm_mve_vstrwq_scatter_base_wb_f32
__builtin_arm_mve_vstrwq_scatter_base_wb_p_f32
__builtin_arm_mve_vstrwq_scatter_base_wb_p_u32
__builtin_arm_mve_vstrwq_scatter_base_wb_s32
__builtin_arm_mve_vstrwq_scatter_base_wb_u32
__builtin_arm_mve_vstrwq_scatter_offset_p_f32
__builtin_arm_mve_vstrwq_scatter_offset_p_s32
__builtin_arm_mve_vstrwq_scatter_offset_p_u32
__builtin_arm_mve_vstrwq_scatter_offset_s32
__builtin_arm_mve_vstrwq_scatter_offset_u32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_f32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_p_f32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_p_u32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_s32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_u32
GENERIC_RELOC_PB_LA_PTR
__builtin_arm_mve_vstrwq_u32
__builtin_arm_mve_vsubq_f16
__builtin_arm_mve_vsubq_f32
__builtin_arm_mve_vsubq_m_f16
ARM64_RELOC_ADDEND
+popcnt
ARM64_RELOC_AUTHENTICATED_POINTER
__builtin_arm_mve_vsubq_m_f32
__builtin_arm_mve_vsubq_m_n_f16
__builtin_arm_mve_vsubq_m_n_f32
__builtin_arm_mve_vsubq_m_n_s16
__builtin_arm_mve_vsubq_m_n_s32
__builtin_arm_mve_vsubq_m_n_s8
__builtin_arm_mve_vsubq_m_n_u16
__builtin_arm_mve_vsubq_m_n_u32
PPC_RELOC_VANILLA
ParamState
PPC_RELOC_PAIR
Use default code inlining logic for the address sanitizer
PPC_RELOC_BR14
+cx16
PPC_RELOC_BR24
__builtin_arm_mve_vsubq_m_n_u8
__builtin_arm_mve_vsubq_m_s16
__builtin_arm_mve_vsubq_m_s32
__builtin_arm_mve_vsubq_m_s8
__builtin_arm_mve_vsubq_m_u32
__builtin_arm_mve_vsubq_m_u8
__builtin_arm_mve_vsubq_n_f16
__builtin_arm_mve_vsubq_n_s16
__builtin_arm_mve_vsubq_n_s32
__builtin_arm_mve_vsubq_n_s8
__builtin_arm_mve_vsubq_n_u16
__builtin_arm_mve_vsubq_n_u32
__builtin_arm_mve_vsubq_n_u8
__builtin_arm_mve_vsubq_s16
__builtin_arm_mve_vsubq_s8
__builtin_arm_mve_vsubq_u16
__builtin_arm_mve_vsubq_u32
__builtin_arm_mve_vsubq_x_f16
__builtin_arm_mve_vsubq_x_f32
__builtin_arm_mve_vsubq_x_n_f16
__builtin_arm_mve_vsubq_x_n_s16
__builtin_arm_mve_vsubq_x_n_s32
__builtin_arm_mve_vsubq_x_n_s8
__builtin_arm_mve_vsubq_x_n_u16
__builtin_arm_mve_vsubq_x_n_u32
__builtin_arm_mve_vsubq_x_n_u8
__builtin_arm_mve_vsubq_x_s16
__builtin_arm_mve_vsubq_x_s32
__builtin_arm_mve_vsubq_x_s8
__builtin_arm_mve_vsubq_x_u16
__builtin_arm_mve_vsubq_x_u32
__builtin_arm_mve_vuninitializedq_f16
__builtin_arm_mve_vuninitializedq_f32
__builtin_arm_mve_vuninitializedq_polymorphic_f16
__builtin_arm_mve_vuninitializedq_polymorphic_s16
__builtin_arm_mve_vuninitializedq_polymorphic_s32
__builtin_arm_mve_vuninitializedq_polymorphic_s64
__builtin_arm_mve_vuninitializedq_polymorphic_s8
__builtin_arm_mve_vuninitializedq_polymorphic_u16
__builtin_arm_mve_vuninitializedq_polymorphic_u32
__builtin_arm_mve_vuninitializedq_polymorphic_u64
__builtin_arm_mve_vuninitializedq_s16
__builtin_arm_mve_vuninitializedq_s32
__builtin_arm_mve_vuninitializedq_s64
__builtin_arm_mve_vuninitializedq_u16
__builtin_arm_mve_vuninitializedq_u32
__builtin_arm_mve_vuninitializedq_u64
__builtin_arm_mve_vabavq_p
__builtin_arm_mve_vabavq
__builtin_arm_mve_vabdq
__builtin_arm_mve_vabdq_m
__builtin_arm_mve_vabdq_x
__builtin_arm_mve_vabsq
__builtin_arm_mve_vabsq_x
__builtin_arm_mve_vadciq_m
__builtin_arm_mve_vadciq
__builtin_arm_mve_vadcq
__builtin_arm_mve_vaddlvaq_p
__builtin_arm_mve_vaddlvaq
__builtin_arm_mve_vaddlvq
__builtin_arm_mve_vaddq
__builtin_arm_mve_vaddq_m
__builtin_arm_mve_vaddq_x
__builtin_arm_mve_vaddvaq_p
__builtin_arm_mve_vaddvaq
__builtin_arm_mve_vaddvq_p
PPC_RELOC_HI16
clang::pascal
PPC_RELOC_SECTDIFF
_pascal
PPC_RELOC_PB_LA_PTR
-index-header-map
PPC_RELOC_HI16_SECTDIFF
armv6m-apple-darwin
AuthenticationMode
armv7
-index-ignore-pcms
armv7-apple-darwin
+harden-sls-ijmp
cortex-m4
__builtin_arm_mve_vaddvq
__builtin_arm_mve_vandq
__builtin_arm_mve_vandq_m
__builtin_arm_mve_vandq_x
__builtin_arm_mve_vbicq_m
__builtin_arm_mve_vbicq_m_n
__builtin_arm_mve_vbicq_x
armv7em
cortex-a7
+harden-sls-ret
armv7k-apple-darwin
__builtin_arm_mve_vbrsrq_m
__builtin_arm_mve_vbrsrq
__builtin_arm_mve_vbrsrq_x
__builtin_arm_mve_vcaddq_rot270
__builtin_arm_mve_vcaddq_rot270_m
__builtin_arm_mve_vcaddq_rot270_x
__builtin_arm_mve_vcaddq_rot90
__builtin_arm_mve_vcaddq_rot90_m
__builtin_arm_mve_vclsq_m
__builtin_arm_mve_vclsq
__builtin_arm_mve_vclsq_x
__builtin_arm_mve_vclzq
__builtin_arm_mve_vclzq_x
__builtin_arm_mve_vcmlaq
__builtin_arm_mve_vcmlaq_rot180
__builtin_arm_mve_vcmlaq_rot180_m
__builtin_arm_mve_vcmlaq_rot270
__builtin_arm_mve_vcmlaq_rot270_m
__builtin_arm_mve_vcmlaq_rot90
__builtin_arm_mve_vcmlaq_rot90_m
__builtin_arm_mve_vcmpcsq_m
__builtin_arm_mve_vcmpeqq
__builtin_arm_mve_vcmpeqq_m
__builtin_arm_mve_vcmpgeq
__builtin_arm_mve_vcmpgtq
__builtin_arm_mve_vcmpgtq_m
__builtin_arm_mve_vcmphiq_m
__builtin_arm_mve_vcmpleq
__builtin_arm_mve_vcmpleq_m
__builtin_arm_mve_vcmpltq
__builtin_arm_mve_vcmpltq_m
__builtin_arm_mve_vcmpneq
__builtin_arm_mve_vcmpneq_m
__builtin_arm_mve_vcmulq
__builtin_arm_mve_vcmulq_rot180
__builtin_arm_mve_vcmulq_rot180_m
__builtin_arm_mve_vcmulq_rot180_x
__builtin_arm_mve_vcmulq_rot270_m
__builtin_arm_mve_vcmulq_rot270_x
__builtin_arm_mve_vcmulq_rot90
__builtin_arm_mve_vcmulq_rot90_x
__builtin_arm_mve_vcmulq_x
__builtin_arm_mve_vcvtaq_m
__builtin_arm_mve_vcvtmq_m
__builtin_arm_mve_vcvtnq_m
__builtin_arm_mve_vcvtpq_m
__builtin_arm_mve_vcvtq
__builtin_arm_mve_vcvtq_m_n
__builtin_arm_mve_vcvtq_n
__builtin_arm_mve_vcvtq_x
__builtin_arm_mve_vddupq_m
__builtin_arm_mve_vddupq_u16
__builtin_arm_mve_vddupq_u32
__builtin_arm_mve_vddupq_x_u16
__builtin_arm_mve_vddupq_x_u32
__builtin_arm_mve_vddupq_x_u8
__builtin_arm_mve_vdupq_m
__builtin_arm_mve_vdwdupq_m
__builtin_arm_mve_vdwdupq_u16
__builtin_arm_mve_vdwdupq_u32
Emit IR to support LTO unit features (CFI, whole program vtable opt)
thumbv7m-apple-darwin
-a32
armv7s-apple-darwin
-flto-visibility-public-std
out of range bind ordinal 
-b32
 (num entries: 
__builtin_arm_mve_vdwdupq_u8
__builtin_arm_mve_vdwdupq_x_u16
__builtin_arm_mve_vdwdupq_x_u32
__builtin_arm_mve_vdwdupq_x_u8
regparm
for REBASE_OPCODE_SET_TYPE_IMM bad bind type: 
__builtin_arm_mve_veorq
__builtin_arm_mve_veorq_m
__builtin_arm_mve_veorq_x
__builtin_arm_mve_vfmaq
 for opcode at: 0x
-bpT:0x10000000
for REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB 
__builtin_arm_mve_vfmaq_m
__builtin_arm_mve_vfmasq_m
__builtin_arm_mve_vfmasq
__builtin_arm_mve_vfmsq
__builtin_arm_mve_vfmsq_m
__builtin_arm_mve_vgetq_lane
__builtin_arm_mve_vhaddq_m
__builtin_arm_mve_vhaddq
__builtin_arm_mve_vhcaddq_rot270_m
__builtin_arm_mve_vhcaddq_rot270
__builtin_arm_mve_vhcaddq_rot270_x
__builtin_arm_mve_vhcaddq_rot90
__builtin_arm_mve_vhcaddq_rot90_x
__builtin_arm_mve_vhsubq_m
__builtin_arm_mve_vhsubq_x
__builtin_arm_mve_vidupq_m
__builtin_arm_mve_vidupq_u16
__builtin_arm_mve_vidupq_u32
__builtin_arm_mve_vidupq_u8
__builtin_arm_mve_vidupq_x_u16
__builtin_arm_mve_vidupq_x_u32
__builtin_arm_mve_viwdupq_m
__builtin_arm_mve_viwdupq_u16
__builtin_arm_mve_viwdupq_u32
__builtin_arm_mve_viwdupq_x_u16
__builtin_arm_mve_viwdupq_x_u32
__builtin_arm_mve_viwdupq_x_u8
__builtin_arm_mve_vld1q_z
__builtin_arm_mve_vld2q
__builtin_arm_mve_vld4q
__builtin_arm_mve_vldrbq_gather_offset
__builtin_arm_mve_vldrbq_gather_offset_z
__builtin_arm_mve_vldrdq_gather_offset
__builtin_arm_mve_vldrdq_gather_offset_z
__builtin_arm_mve_vldrdq_gather_shifted_offset_z
__builtin_arm_mve_vldrhq_gather_offset
__builtin_arm_mve_vldrhq_gather_offset_z
__builtin_arm_mve_vldrhq_gather_shifted_offset_z
__builtin_arm_mve_vldrwq_gather_offset
__builtin_arm_mve_vldrwq_gather_offset_z
__builtin_arm_mve_vldrwq_gather_shifted_offset
__builtin_arm_mve_vldrwq_gather_shifted_offset_z
__builtin_arm_mve_vmaxaq_m
__builtin_arm_mve_vmaxaq
__builtin_arm_mve_vmaxavq_p
__builtin_arm_mve_vmaxavq
__builtin_arm_mve_vmaxnmaq
__builtin_arm_mve_vmaxnmaq_m
__builtin_arm_mve_vmaxnmavq_p
__builtin_arm_mve_vmaxnmq
__builtin_arm_mve_vmaxnmq_m
__builtin_arm_mve_vmaxnmvq
__builtin_arm_mve_vmaxnmvq_p
__builtin_arm_mve_vmaxq_m
__builtin_arm_mve_vmaxq_x
__builtin_arm_mve_vmaxvq_p
__builtin_arm_mve_vmaxvq
__builtin_arm_mve_vminaq_m
__builtin_arm_mve_vminaq
__builtin_arm_mve_vminavq_p
__builtin_arm_mve_vminavq
for REBASE_OPCODE_ADD_ADDR_ULEB 
clang::release_handle
for BIND_OPCODE_SET_ADDEND_SLEB 
-index-unit-output-path
for BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB 
for BIND_OPCODE_DO_BIND missing preceding BIND_OPCODE_SET_DYLIB_ORDINAL_* for opcode at: 0x
crti_64.o
at BIND_OPCODE_DO_BIND (incorrect ordinal table size, number of BIND_OPCODE_DO_BIND opcodes exceed the count in previous BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB) at BIND_OPCODE_DO_BIND at: 0x
Incorporate CUDA device-side binary into host object file.
BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB not allowed in lazy bind table for opcode at: 0x
for BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB  (count value) 
CreateExportList
for BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB (skip value) 
__builtin_arm_mve_vminnmaq
__builtin_arm_mve_vminnmaq_m
__builtin_arm_mve_vminnmavq
__builtin_arm_mve_vminnmavq_p
__builtin_arm_mve_vminnmq_m
__builtin_arm_mve_vminnmq_x
__builtin_arm_mve_vminnmvq
__builtin_arm_mve_vminq_m
__builtin_arm_mve_vminq
__builtin_arm_mve_vminq_x
__builtin_arm_mve_vminvq_p
__builtin_arm_mve_vminvq
__builtin_arm_mve_vmladavaq_p
__builtin_arm_mve_vmladavaq
__builtin_arm_mve_vmladavaxq
__builtin_arm_mve_vmladavq_p
__builtin_arm_mve_vmladavq
__builtin_arm_mve_vmladavxq
__builtin_arm_mve_vmlaldavaq_p
__builtin_arm_mve_vmlaldavaq
__builtin_arm_mve_vmlaldavaxq
__builtin_arm_mve_vmlaldavq_p
__builtin_arm_mve_vmlaldavq
__builtin_arm_mve_vmlaldavxq_p
__builtin_arm_mve_vmlaldavxq
__builtin_arm_mve_vmlaq_m
__builtin_arm_mve_vmlaq
__builtin_arm_mve_vmlasq
__builtin_arm_mve_vmlsdavaq_p
__builtin_arm_mve_vmlsdavaq
__builtin_arm_mve_vmlsdavaxq
__builtin_arm_mve_vmlsdavq_p
__builtin_arm_mve_vmlsdavq
bad segIndex (too large)
-lpthreads
bad offset, extends beyond section boundary
__builtin_arm_mve_vmlsdavxq_p
__builtin_arm_mve_vmlsdavxq
__builtin_arm_mve_vmlsldavaq_p
__builtin_arm_mve_vmlsldavaq
__builtin_arm_mve_vmlsldavaxq_p
__builtin_arm_mve_vmlsldavaxq
__builtin_arm_mve_vmlsldavq_p
__builtin_arm_mve_vmlsldavq
bad offset, not in section
bad chained fixups: unknown imports format: 
bad chained fixups: image starts offset 
__builtin_arm_mve_vmlsldavxq_p
__builtin_arm_mve_vmlsldavxq
__builtin_arm_mve_vmovlbq_m
__builtin_arm_mve_vmovlbq
__builtin_arm_mve_vmovltq_m
__builtin_arm_mve_vmovltq
__builtin_arm_mve_vmovltq_x
__builtin_arm_mve_vmovnbq
__builtin_arm_mve_vmovntq_m
__builtin_arm_mve_vmovntq
__builtin_arm_mve_vmulhq_m
__builtin_arm_mve_vmulhq
__builtin_arm_mve_vmulhq_x
__builtin_arm_mve_vmullbq_int_m
__builtin_arm_mve_vmullbq_int_x
__builtin_arm_mve_vmullbq_poly_m
__builtin_arm_mve_vmullbq_poly
__builtin_arm_mve_vmulltq_int_m
__builtin_arm_mve_vmulltq_int
__builtin_arm_mve_vmulltq_int_x
 is invalid
/usr/include
 pointer format 
__builtin_arm_mve_vmulltq_poly_m
__builtin_arm_mve_vmulltq_poly
__builtin_arm_mve_vmulltq_poly_x
__builtin_arm_mve_vmulq
__builtin_arm_mve_vmulq_m
__builtin_arm_mve_vmulq_x
__builtin_arm_mve_vmvnq_m
__builtin_arm_mve_vmvnq
__builtin_arm_mve_vnegq
__builtin_arm_mve_vnegq_m
__builtin_arm_mve_vnegq_x
__builtin_arm_mve_vornq_m
__builtin_arm_mve_vornq_x
__builtin_arm_mve_vorrq
__builtin_arm_mve_vorrq_m_n
__builtin_arm_mve_vorrq_x
__builtin_arm_mve_vpselq
__builtin_arm_mve_vqabsq_m
__builtin_arm_mve_vqabsq
__builtin_arm_mve_vqaddq_m
__builtin_arm_mve_vqaddq
__builtin_arm_mve_vqdmladhq
__builtin_arm_mve_vqdmladhxq_m
__builtin_arm_mve_vqdmladhxq
__builtin_arm_mve_vqdmlahq
__builtin_arm_mve_vqdmlashq_m
__builtin_arm_mve_vqdmlashq
__builtin_arm_mve_vqdmlsdhq
__builtin_arm_mve_vqdmlsdhxq_m
__builtin_arm_mve_vqdmlsdhxq
__builtin_arm_mve_vqdmulhq_m
__builtin_arm_mve_vqdmulhq
__builtin_arm_mve_vqdmullbq_m
__builtin_arm_mve_vqdmullbq
__builtin_arm_mve_vqdmulltq
__builtin_arm_mve_vqmovnbq_m
__builtin_arm_mve_vqmovnbq
 page_start index 
selectany
 extends past seg_info size 
Do not make the jump table addresses canonical in the symbol table
__builtin_arm_mve_vqmovntq_m
__builtin_arm_mve_vqmovntq
__builtin_arm_mve_vqmovunbq_m
__builtin_arm_mve_vqmovunbq
__swift5_capture
-lc++abi
__swift5_typeref
__builtin_arm_mve_vqmovuntq_m
__builtin_arm_mve_vqmovuntq
__builtin_arm_mve_vqnegq_m
__builtin_arm_mve_vqnegq
__builtin_arm_mve_vqrdmladhq_m
__builtin_arm_mve_vqrdmladhq
__builtin_arm_mve_vqrdmladhxq_m
__builtin_arm_mve_vqrdmladhxq
__builtin_arm_mve_vqrdmlahq
__builtin_arm_mve_vqrdmlashq_m
__builtin_arm_mve_vqrdmlashq
__builtin_arm_mve_vqrdmlsdhq
__builtin_arm_mve_vqrdmlsdhxq_m
__builtin_arm_mve_vqrdmlsdhxq
__builtin_arm_mve_vqrdmulhq
__builtin_arm_mve_vqrshlq_m_n
__builtin_arm_mve_vqrshlq_m
__builtin_arm_mve_vqrshlq
__builtin_arm_mve_vqrshrnbq_m
__builtin_arm_mve_vqrshrnbq
__builtin_arm_mve_vqrshrntq_m
-interface-stub-version=
__swift5_protos
gcrt0.o
__swift5_acfuncs
more than one LC_SYMTAB command
mcrt0.o
LC_SYMTAB command 
__builtin_arm_mve_vqrshrntq
__builtin_arm_mve_vqrshrunbq_m
__builtin_arm_mve_vqrshrunbq
__builtin_arm_mve_vqrshruntq_m
__builtin_arm_mve_vqshlq_m_n
__builtin_arm_mve_vqshlq_m_r
__builtin_arm_mve_vqshlq_m
__builtin_arm_mve_vqshlq_r
__builtin_arm_mve_vqshlq
__builtin_arm_mve_vqshluq_m
__builtin_arm_mve_vqshluq
__builtin_arm_mve_vqshrnbq_m
__builtin_arm_mve_vqshrnbq
__builtin_arm_mve_vqshrntq_m
__builtin_arm_mve_vqshrunbq_m
__builtin_arm_mve_vqshrunbq
__builtin_arm_mve_vqshruntq_m
__builtin_arm_mve_vqsubq_m
__builtin_arm_mve_vqsubq
__builtin_arm_mve_vreinterpretq_f16
__builtin_arm_mve_vreinterpretq_s16
__builtin_arm_mve_vreinterpretq_s32
__builtin_arm_mve_vreinterpretq_s64
__builtin_arm_mve_vreinterpretq_s8
__builtin_arm_mve_vreinterpretq_u16
__builtin_arm_mve_vreinterpretq_u32
__builtin_arm_mve_vreinterpretq_u64
__builtin_arm_mve_vrev16q_m
__builtin_arm_mve_vrev16q
__builtin_arm_mve_vrev16q_x
__builtin_arm_mve_vrev32q_m
__builtin_arm_mve_vrev32q_x
__builtin_arm_mve_vrev64q
__builtin_arm_mve_vrev64q_x
__builtin_arm_mve_vrhaddq_m
__builtin_arm_mve_vrhaddq
__builtin_arm_mve_vrhaddq_x
__builtin_arm_mve_vrmlaldavhaq_p
__builtin_arm_mve_vrmlaldavhaq
__builtin_arm_mve_vrmlaldavhaxq_p
symoff field of LC_SYMTAB command 
CompletionHandlerIndex
aix::Linker
) of LC_DYSYMTAB command 
__builtin_arm_mve_vrmlaldavhaxq
__builtin_arm_mve_vrmlaldavhq_p
__builtin_arm_mve_vrmlaldavhq
__builtin_arm_mve_vrmlaldavhxq_p
module table
SwiftType
extrefsymoff field of LC_DYSYMTAB command 
__builtin_arm_mve_vrmlaldavhxq
__builtin_arm_mve_vrmlsldavhaq_p
__builtin_arm_mve_vrmlsldavhaq
__builtin_arm_mve_vrmlsldavhaxq_p
__builtin_arm_mve_vrmlsldavhq_p
__builtin_arm_mve_vrmlsldavhq
__builtin_arm_mve_vrmlsldavhxq_p
__builtin_arm_mve_vrmlsldavhxq
__builtin_arm_mve_vrmulhq_m
__builtin_arm_mve_vrmulhq
__builtin_arm_mve_vrmulhq_x
__builtin_arm_mve_vrndaq_m
__builtin_arm_mve_vrndaq_x
__builtin_arm_mve_vrndmq
extrefsymoff field plus nextrefsyms field times sizeof(struct dylib_reference) of LC_DYSYMTAB command 
linker
reference table
swift_context
external relocation table
__builtin_arm_mve_vrndmq_m
__builtin_arm_mve_vrndmq_x
__builtin_arm_mve_vrndnq
__builtin_arm_mve_vrndnq_m
__builtin_arm_mve_vrndpq
__builtin_arm_mve_vrndpq_m
__builtin_arm_mve_vrndpq_x
__builtin_arm_mve_vrndq
__builtin_arm_mve_vrndq_m
__builtin_arm_mve_vrndq_x
__builtin_arm_mve_vrndxq
__builtin_arm_mve_vrndxq_x
__builtin_arm_mve_vrshlq_m_n
__builtin_arm_mve_vrshlq_m
__builtin_arm_mve_vrshlq_x
__builtin_arm_mve_vrshrnbq_m
__builtin_arm_mve_vrshrnbq
__builtin_arm_mve_vrshrntq_m
__builtin_arm_mve_vrshrntq
__builtin_arm_mve_vrshrq_m
__builtin_arm_mve_vrshrq
__builtin_arm_mve_vrshrq_x
__builtin_arm_mve_vsbciq_m
__builtin_arm_mve_vsbciq
__builtin_arm_mve_vsbcq_m
__builtin_arm_mve_vsetq_lane
__builtin_arm_mve_vshlcq_m
__builtin_arm_mve_vshlcq
__builtin_arm_mve_vshllbq
__builtin_arm_mve_vshllbq_x
__builtin_arm_mve_vshlltq_m
__builtin_arm_mve_vshlltq_x
__builtin_arm_mve_vshlq_m_n
__builtin_arm_mve_vshlq_m_r
__builtin_arm_mve_vshlq_m
__builtin_arm_mve_vshlq_n
__builtin_arm_mve_vshlq_r
__builtin_arm_mve_vshlq
__builtin_arm_mve_vshlq_x
__builtin_arm_mve_vshrnbq_m
__builtin_arm_mve_vshrnbq
__builtin_arm_mve_vshrntq
__builtin_arm_mve_vshrq_m
__builtin_arm_mve_vshrq
locreloff field of LC_DYSYMTAB command 
-Bstatic
more than one LC_DYLD_INFO and or LC_DYLD_INFO_ONLY command
Scan for dependencies ahead of compiling, generating a pruned CAS tree to send to -fcas-fs. Values are 'auto', 'daemon' (see -fdepscan-share and -fdepscan-share-parent), 'inline', or 'off' (default).
rebase_off field of 
-ffinite-loops
dyld export info
crtbegin.o
LC_ID_DYLIB
__builtin_arm_mve_vshrq_x
__builtin_arm_mve_vsliq_m
__builtin_arm_mve_vsliq
__builtin_arm_mve_vsriq_m
__builtin_arm_mve_vsriq
__builtin_arm_mve_vst1q
__builtin_arm_mve_vst1q_p
__builtin_arm_mve_vst2q
__builtin_arm_mve_vstrbq_p
__builtin_arm_mve_vstrbq
__builtin_arm_mve_vstrbq_scatter_offset_p
more than one LC_ID_DYLIB command
sysv_abi
tls_model
 name.offset field too small, not past the end of the dylinker_command struct
__builtin_arm_mve_vstrbq_scatter_offset
__builtin_arm_mve_vstrdq_scatter_base_p
__builtin_arm_mve_vstrdq_scatter_base
__builtin_arm_mve_vstrdq_scatter_base_wb_p
__builtin_arm_mve_vstrdq_scatter_offset_p
__builtin_arm_mve_vstrdq_scatter_offset
__builtin_arm_mve_vstrdq_scatter_shifted_offset_p
__builtin_arm_mve_vstrdq_scatter_shifted_offset
__builtin_arm_mve_vstrhq
__builtin_arm_mve_vstrhq_p
__builtin_arm_mve_vstrhq_scatter_offset
__builtin_arm_mve_vstrhq_scatter_shifted_offset
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p
__builtin_arm_mve_vstrwq
__builtin_arm_mve_vstrwq_scatter_base
__builtin_arm_mve_vstrwq_scatter_base_p
__builtin_arm_mve_vstrwq_scatter_base_wb
 dyld name extends past the end of the load command
crtend.o
, platform value is not allowed when the mach header flag MH_SIM_SUPPORT is set
__builtin_arm_mve_vstrwq_scatter_base_wb_p
__builtin_arm_mve_vstrwq_scatter_offset
__builtin_arm_mve_vstrwq_scatter_offset_p
__builtin_arm_mve_vstrwq_scatter_shifted_offset
__builtin_arm_mve_vstrwq_scatter_shifted_offset_p
__builtin_arm_mve_vsubq
__builtin_arm_mve_vsubq_m
__builtin_arm_mve_vsubq_x
__builtin_arm_cde_cx1
__builtin_arm_cde_cx1d
__builtin_arm_cde_cx1da
__builtin_arm_cde_cx2
__builtin_arm_cde_cx2d
__builtin_arm_cde_cx2da
__builtin_arm_cde_cx3
__builtin_arm_cde_cx3a
__builtin_arm_cde_cx3d
__builtin_arm_cde_cx3da
__builtin_arm_cde_vcx1_u32
__builtin_arm_cde_vcx1d_u64
__builtin_arm_cde_vcx1da_u64
__builtin_arm_cde_vcx1q_m_f16
__builtin_arm_cde_vcx1q_m_s16
__builtin_arm_cde_vcx1q_m_s32
__builtin_arm_cde_vcx1q_m_s64
the two LC_BUILD_VERSION load commands are not for the platforms MACOS and MACCATALYST
gnu::target_clones
 LC_RPATH cmdsize too small
Set LTO mode
 name extends past the end of the load command
__builtin_arm_cde_vcx1q_m_s8
__builtin_arm_cde_vcx1q_m_u16
__builtin_arm_cde_vcx1q_m_u32
__builtin_arm_cde_vcx1q_m_u64
__builtin_arm_cde_vcx1q_m_u8
__builtin_arm_cde_vcx1q_u8
__builtin_arm_cde_vcx1qa_f16
__builtin_arm_cde_vcx1qa_f32
flavor in 
transparent_stepping
 extends past end of command
-fno-sanitize-ignorelist
__builtin_arm_cde_vcx1qa_m_f16
__builtin_arm_cde_vcx1qa_m_f32
__builtin_arm_cde_vcx1qa_m_s16
__builtin_arm_cde_vcx1qa_m_s32
__builtin_arm_cde_vcx1qa_m_s8
__builtin_arm_cde_vcx1qa_m_u16
__builtin_arm_cde_vcx1qa_m_u32
__builtin_arm_cde_vcx1qa_m_u8
__builtin_arm_cde_vcx1qa_s16
__builtin_arm_cde_vcx1qa_s32
__builtin_arm_cde_vcx1qa_s64
__builtin_arm_cde_vcx1qa_s8
__builtin_arm_cde_vcx1qa_u16
__builtin_arm_cde_vcx1qa_u32
__builtin_arm_cde_vcx1qa_u8
__builtin_arm_cde_vcx2_u32
__builtin_arm_cde_vcx2a_u32
 which is a x86_THREAD_STATE32 flavor in 
transparent_union
 x86_THREAD_STATE32 extends past end of command in 
clang::try_acquire_capability
 x86_FLOAT_STATE extends past end of command in 
__builtin_arm_cde_vcx2d_u64
__builtin_arm_cde_vcx2da_u64
__builtin_arm_cde_vcx2q_f16
__builtin_arm_cde_vcx2q_f32
__builtin_arm_cde_vcx2q_m_impl_f32
__builtin_arm_cde_vcx2q_m_impl_s16
__builtin_arm_cde_vcx2q_m_impl_s32
__builtin_arm_cde_vcx2q_m_impl_s64
__builtin_arm_cde_vcx2q_m_impl_s8
__builtin_arm_cde_vcx2q_m_impl_u16
__builtin_arm_cde_vcx2q_m_impl_u32
__builtin_arm_cde_vcx2q_m_impl_u8
__builtin_arm_cde_vcx2q_s16
__builtin_arm_cde_vcx2q_s32
__builtin_arm_cde_vcx2q_s8
__builtin_arm_cde_vcx2q_u16
__builtin_arm_cde_vcx2q_u32
__builtin_arm_cde_vcx2q_u8
__builtin_arm_cde_vcx2q_u8_f16
__builtin_arm_cde_vcx2q_u8_f32
__builtin_arm_cde_vcx2q_u8_s16
__builtin_arm_cde_vcx2q_u8_s32
__builtin_arm_cde_vcx2q_u8_s64
__builtin_arm_cde_vcx2q_u8_s8
__builtin_arm_cde_vcx2q_u8_u32
__builtin_arm_cde_vcx2q_u8_u64
__builtin_arm_cde_vcx2q_u8_u8
 count not x86_EXCEPTION_STATE_COUNT for flavor number 
 which is a x86_EXCEPTION_STATE flavor in 
Visibility
 count not ARM_EXCEPTION_STATE64_COUNT for flavor number 
__builtin_arm_cde_vcx2qa_impl_f16
__builtin_arm_cde_vcx2qa_impl_f32
__builtin_arm_cde_vcx2qa_impl_s16
__builtin_arm_cde_vcx2qa_impl_s32
 which is a ARM_EXCEPTION_STATE64 flavor in 
HIP_DEVICE_LIB_PATH
 ARM_EXCEPTION_STATE64 extends past end of command in 
__builtin_arm_cde_vcx2qa_impl_s64
__builtin_arm_cde_vcx2qa_impl_s8
__builtin_arm_cde_vcx2qa_impl_u16
__builtin_arm_cde_vcx2qa_impl_u32
__builtin_arm_cde_vcx2qa_impl_u64
__builtin_arm_cde_vcx2qa_impl_u8
__builtin_arm_cde_vcx2qa_m_impl_f16
__builtin_arm_cde_vcx2qa_m_impl_f32
__builtin_arm_cde_vcx2qa_m_impl_s16
__builtin_arm_cde_vcx2qa_m_impl_s32
__builtin_arm_cde_vcx2qa_m_impl_s64
__builtin_arm_cde_vcx2qa_m_impl_s8
__builtin_arm_cde_vcx2qa_m_impl_u32
__builtin_arm_cde_vcx2qa_m_impl_u64
__builtin_arm_cde_vcx2qa_m_impl_u8
 count not PPC_THREAD_STATE_COUNT for flavor number 
clang::typed_memory_operation
 command can't be checked
 LC_TWOLEVEL_HINTS has incorrect cmdsize
__builtin_arm_cde_vcx3_u32
__builtin_arm_cde_vcx3a_u32
__builtin_arm_cde_vcx3d_u64
__builtin_arm_cde_vcx3da_u64
__builtin_arm_cde_vcx3q_impl_f16
__builtin_arm_cde_vcx3q_impl_f32
__builtin_arm_cde_vcx3q_impl_s16
__builtin_arm_cde_vcx3q_impl_s32
__builtin_arm_cde_vcx3q_impl_s8
__builtin_arm_cde_vcx3q_impl_u16
__builtin_arm_cde_vcx3q_impl_u32
__builtin_arm_cde_vcx3q_impl_u8
__builtin_arm_cde_vcx3q_m_impl_f16
__builtin_arm_cde_vcx3q_m_impl_f32
__builtin_arm_cde_vcx3q_m_impl_s32
__builtin_arm_cde_vcx3q_m_impl_s64
__builtin_arm_cde_vcx3q_m_impl_s8
__builtin_arm_cde_vcx3q_m_impl_u16
__builtin_arm_cde_vcx3q_m_impl_u32
__builtin_arm_cde_vcx3q_m_impl_u64
__builtin_arm_cde_vcx3q_m_impl_u8
__builtin_arm_cde_vcx3q_u8_impl_f32
__builtin_arm_cde_vcx3q_u8_impl_s16
__builtin_arm_cde_vcx3q_u8_impl_s32
__builtin_arm_cde_vcx3q_u8_impl_s8
__builtin_arm_cde_vcx3q_u8_impl_u16
__builtin_arm_cde_vcx3q_u8_impl_u32
more than one LC_TWOLEVEL_HINTS command
clang::unavailable
offset field of LC_TWOLEVEL_HINTS command 
Use the stat data cached in file instead of doing filesystem syscalls. See clang-stat-cache utility.
offset field plus nhints times sizeof(struct twolevel_hint) field of LC_TWOLEVEL_HINTS command 
, version 
 inconsistent cmdsize in 
offset field plus size field of section 
__builtin_arm_cde_vcx3q_u8_impl_u64
__builtin_arm_cde_vcx3q_u8_impl_u8
__builtin_arm_cde_vcx3qa_impl_f16
__builtin_arm_cde_vcx3qa_impl_f32
__builtin_arm_cde_vcx3qa_impl_s16
__builtin_arm_cde_vcx3qa_impl_s32
__builtin_arm_cde_vcx3qa_impl_s64
__builtin_arm_cde_vcx3qa_impl_s8
__builtin_arm_cde_vcx3qa_impl_u32
__builtin_arm_cde_vcx3qa_impl_u64
__builtin_arm_cde_vcx3qa_impl_u8
size field of section 
clang::use_handle
 greater than the segment
Set directory to include search path with prefix
addr field of section 
__clang_hip_runtime_wrapper.h
using_if_exists
 greater than than the segment's vmaddr plus vmsize
__builtin_arm_cde_vcx3qa_m_impl_f16
__builtin_arm_cde_vcx3qa_m_impl_f32
__builtin_arm_cde_vcx3qa_m_impl_s16
__builtin_arm_cde_vcx3qa_m_impl_s32
__builtin_arm_cde_vcx3qa_m_impl_s8
__builtin_arm_cde_vcx3qa_m_impl_u16
__builtin_arm_cde_vcx3qa_m_impl_u32
__builtin_arm_cde_vcx3qa_m_impl_u64
__builtin_arm_cde_vcx3qa_m_impl_u8
__builtin_arm_cde_vreinterpretq_u8_u8
vIUiC
WiWiCD*
_MoveFromCoprocessor
UiIUiIUiIUiIUiIUi
_MoveToCoprocessor
vUiIUiIUiIUiIUiIUi
_MoveToCoprocessor2
section contents
contains zero architecture types
CustomDiscriminationValue
bad magic number
Set directory to SYSTEM include search path with prefix
fat_arch
CL1.2
 structs would extend past the end of the file
clang::vecreturn
offset plus size of cputype (
__ARMEL__
__ARMEB__
__ARM_BIG_ENDIAN
_M_ARM_NT
_M_ARMT
_M_ARM
_M_THUMB
_M_ARM_FP
_ARM_
armv7
__RENDERSCRIPT__
) cpusubtype (
-fvisibility=hidden
) extends past the end of the file
Measure the parse tree
align (2^
-ffinite-math-only
) too large for cputype (
-fmacro-backtrace-limit=
) (maximum 2^
-mlink-builtin-bitcode
offset: 
Enable support for the C++ Coroutines TS
 for cputype (
-fmacro-backtrace-limit
) not aligned on it's alignment (2^
-fno-sanitize-memory-track-origins
cputype (
vector_size
__AVR
 overlaps universal headers
gnu::vector_size
contains two of the same architecture (cputype (
__attribute__((address_space(1)))
) at offset 
 (Spack 
, overlaps cputype (
__attribute__((address_space(3)))
Unknown architecture named: 
gnu::visibility
fat file does not contain 
__attribute__((address_space(5)))
truncated or malformed fat file (
amdgpu::Linker
Invalid signature
__AVR_AT90S1200__
Invalid version
gnu::warn_unused
Cannot handle one of the minidump streams
-iworkdir=
Duplicate stream type
ld.lld
Unexpected EOF
__AVR_AT90S2343__
invalid e_shentsize in ELF header: 
warn_unused_result
section header table goes past the end of the file: e_shoff = 0x
__AVR_AT90S4414__
invalid number of sections specified in the NULL section's sh_size field (
/../bin
invalid section header table offset (e_shoff = 0x
__AVR_AT90c8534__
) or invalid number of sections specified in the first section header's sh_size field (0x
gnu::weak
section table goes past the end of file
When looking up file, use the working directory provided by the operating system, or by the virtual file system.
invalid section index: 
/libclang_rt.
__imp_
__AVR_ATtiny24__
: relocations with offset 0x
clang::weak_import
 and size 0x
__AVR_ATtiny44A__
 go past the end of the file
entry with offset 0x
__AVR_ATtiny45__
 in a string table with size 0x
gnu::weakref
Disable origins tracking in MemorySanitizer
: section data with offset 0x
--gc-sections
 goes past the end of the file
__AVR_ATtiny861__
aix5coff64-rs6000
clang::export_name
aixcoff-rs6000
__AVR_ATtiny48__
the section index (
) is invalid
__AVR_AT76C711__
: string table with offset 0x
import_module
: section headers with offset 0x
: symbol table with offset 0x
/lib/
csect symbol "
__AVR_ATA664251__
" with index 
ImportModule
 contains no auxiliary entry
__AVR_ATtiny1634__
a csect auxiliary entry has not been found for symbol "
-Tdata=0x
Unimplemented Debug Name
__AVR_ATA6285__
i386
clang::import_name
x86_64
-fno-sanitize-memory-use-after-dtor
x86_64h
--start-group
armv4t
__AVR_ATmega88__
armv6
work_group_size_hint
armv5
__AVR_ATmega88PB__
armv7
-l:crt
armv7s
__AVR_AT90PWM1__
armv7k
gnu::force_align_arg_pointer
armv6m
armv7m
-lgcc
armv7em
__AVR_ATA5790__
arm64
clang::xray_always_instrument
arm64e
__AVR_ATA5831__
arm64_32
arm64v8
__AVR_ATA8510__
unknown
clang::xray_never_instrument
[(empty)]
Set the maximum number of entries to print in a macro expansion backtrace (0 = no limit).
 (for architecture 
--end-group
file: 
__AVR_ATmega164PA__
 does not contain architecture: 
clang::xray_log_args
install names do not match
__AVR_ATmega165PA__
current versions do not match
avr-ld
compatibility versions do not match
__AVR_ATmega168PA__
swift ABI versions do not match
clang::xnu_usage_semantics
two level namespace flags do not match
/JMC-
application extension safe flags do not match
cannot remove last architecture slice '
__AVR_ATmega323__
tapi_tbd_version
gnu::zero_call_used_regs
main_library
__AVR_ATmega324PB__
libraries
/avr
target_info
__AVR_ATmega325PA__
targets
global variables
min_deployment
-fno-sanitize-minimal-runtime
attributes
AVR::Linker
install_names
__AVR_ATmega329__
current_versions
functions
compatibility_versions
__AVR_ATmega3290__
swift_abi
at90s1200
__AVR_ATmega406__
parent_umbrellas
functions, typedefs, and parameters
allowable_clients
/JMC
clients
avr1
reexported_libraries
__AVR_ATmega645__
names
functions and global variables
exported_symbols
__AVR_ATmega649A__
reexported_symbols
attiny11
undefined_symbols
__AVR_ATmega6450P__
objc_eh_type
non-K&R-style functions
objc_ivar
-fmacro-prefix-map=
rpaths
attiny12
paths
__AVR_ATmega16HVB__
relinked_libraries
functions and statements
{0:2}
__AVR_ATmega64HVE__
 section
attiny15
missing 
__AVR_AT90PWM161__
 information
functions and function pointers
flat_namespace
not_app_extension_safe
attiny28
__AVR_ATmega16U4__
__AVR_AT90USB647__
unknown
at90s2313
macOS
__AVR_ATmega128__
xrOS
Objective-C methods and functions
xrOS Simulator
Disable recovery for specified sanitizers
tiny-stack
tvOS
__AVR_ATmega1284RFR2__
watchOS
named declarations
bridgeOS
__AVR_ATmega2560__
macCatalyst
avr2
iOS Simulator
__AVR_ATxmega16A4__
tvOS Simulator
variables, functions, structs, unions, classes, non-static data members, and typedefs
watchOS Simulator
-keep_private_externs
DriverKit
at90s2323
sepOS
__AVR_ATxmega32D3__
macos
functions and variables
__AVR_ATxmega8E5__
tvos
at90s2333
watchos
__AVR_ATxmega64B1__
bridgeos
Reserve the a0 register (M68k only)
driverkit
remap file source paths in predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
sepos
at90s2343
darwin
__AVR_ATxmega128A3U__
xros
parameters, Objective-C methods, and functions
-simulator
__AVR_ATxmega128D3__
-macabi
at90s4433
xros-simulator
__AVR_ATxmega192C3__
ios-simulator
functions and classes
tvos-simulator
/kernel
watchos-simulator
attiny22
__AVR_ATxmega384C3__
-apple-
non-static data members and variables
no such architecture
__AVR_ATxmega128A4U__
unsupported file type
attiny26
!tapi-tbd-v3
__AVR_ATtiny10__
!tapi-tbd-v2
functions, Objective-C methods, and global variables
!tapi-tbd
-fno-sanitize-stats
!tapi-tbd-v1
at90s4414
tag:yaml.org,2002:map
__AVR_ATtiny404__
tbd-version
empty statements
uuids
__AVR_ATtiny806__
current-version
at90s4434
compatibility-version
__AVR_ATtiny212__
swift-abi-version
Objective-C methods and non-K&R-style functions
parent-umbrella
--language
allowable-clients
at90s8515
reexported-libraries
__AVR_ATtiny1616__
exports
structs
reexports
__AVR_ATtiny1617__
undefineds
at90c8534
unparsable target
__AVR_ATtiny1627__
unknown architecture
parameters and global variables
unknown platform
-fmath-errno
symbols
at90s8535
objc-classes
-fdevirtualize-speculatively
objc-eh-types
-lazy_library
objc-ivars
attiny13
__builtin_preserve_field_info
thread-local-symbols
LUi.
archs
variables, enums, typedefs, and non-static data members
swift-version
avr25/tiny-stack
objc-constraint
return statements
__csky__
__CSKY__
re-exports
Objective-C methods
weak-def-symbols
__cskyabi__
weak-ref-symbols
avr25
none
__CSKY_VDSPV2_F__
retain_release
non-bit-field non-static data members
retain_release_for_simulator
--ld-path=
retain_release_or_gc
attiny13a
zippered
non-static member functions
macosx
attiny2313
watchos
fr12
tvos
Objective-C implementation declarations, Objective-C interfaces, and Objective-C containers
bridgeos
/LDd
maccatalyst
attiny2313a
driverkit
fr20
invalid platform
variables, functions, blocks, and Objective-C methods
unknown platform
fr24
attiny24
fr28
Objective-C methods and Objective-C properties
Disable atomic operations instrumentation in ThreadSanitizer
invalid Swift ABI version.
attiny24a
invalid sign in float literal
invalid hexadecimal floating-point constant: expected at least one significand digit
Objective-C properties
invalid hexadecimal floating-point constant: expected exponent part 'p'
invalid hexadecimal floating-point constant: expected at least one exponent digit
attiny25
unterminated comment
 number
'for', 'while', and 'do' statements
invalid hexadecimal number
invalid binary number
attiny261
invalid usage of character literals
unterminated string constant
non-static non-const member functions
unterminated single quote
single quote way too long
attiny261a
invalid usage of string literals
vr12
invalid character in input
functions and parameters
got_hi
-fno-sanitize-thread-func-entry-exit
got_lo
at86rf401
vr20
higher
functions, global variables, Objective-C methods, and Objective-C properties
highest
vr24
tlsgd
ata5272
binary
Reserve the a1 register (M68k only)
octal
ata6616c
decimal
thread-local variables
__qdsp6__
__hexagon__
base-
__HEXAGON_V5__
missing expression
variables, non-static data members, types, enums, enumerators, labels, non-static data members, Objective-C methods, functions, and function pointers
Recursive use of '
__QDSP6_ARCH__
redefinition of '
attiny4313
invalid assignment to '
__QDSP6_V55__
invalid reassignment of non-absolute variable '
structs, unions, classes, and enums
Need to implement createSPIRVAsmParser for SPIRV format.
Path to libomptarget-amdgcn bitcode library
.set
attiny44
.equ
hexagonv65
.equiv
variables and functions
.ascii
__HEXAGON_V66__
.asciz
attiny44a
.string
.byte
:auto
.short
--libomptarget-amdgpu-bc-path=
.value
attiny84
.2byte
.long
__int128_t
.int
__HVX_LENGTH__
.4byte
attiny84a
.quad
__HEXAGON_AUDIO__
.8byte
.octa
-fno-sanitize-thread-memory-access
.single
attiny45
.float
r9:8
.double
Protocol
.align
r17:16
.align32
attiny85
.balign
r25:24
.balignw
type_info
.balignl
Path to libomptarget-nvptx bitcode library
.p2align
attiny441
.p2alignw
.p2alignl
sampler_t
.org
.fill
attiny461
.zero
.extern
clk_event_t
.globl
-fmax-errors=
.global
attiny461a
.lazy_reference
.no_dead_strip
reserve_id_t
.symbol_resolver
.private_extern
attiny841
.reference
.weak_definition
atomic_uint
.weak_reference
--library-directory
.weak_def_can_be_hidden
attiny861
.cold
c15:14
.comm
atomic_flag
.common
c23:22
.lcomm
attiny861a
.abort
c31:30
.include
atomic_double
.incbin
-fno-sanitize-trap=
.code16
attiny87
.code16gcc
.rept
atomic_ulong
.rep
framelimit
.irp
attiny43u
.irpc
utimerlo
.endr
__builtin_va_list
.bundle_align_mode
Add linker option
.bundle_lock
attiny48
.bundle_unlock
v7:6
*** Semantic Analysis Stats:
.ifeq
v15:14
.ifge
attiny88
.ifgt
v23:22
.ifle
nullptr
.iflt
-fmax-identifier-length
.ifne
attiny828
.ifb
v15:12
.ifnb
'weak'
.ifc
v31:28
.ifeqs
at43usb355
.ifnc
v*LLi*CLLi*iC
.ifnes
/**<
.ifdef
Forward options to the linker
.ifndef
avr3
.ifnotdef
v*Sc*CSc*iC
.elseif
super
.else
LLi*LLi*LLi*iIi
.end
at76c711
.endif
s*s*s*iIi
.skip
atomic_size_t
.space
-fno-sanitize-trap
.file
atmega103
.line
LLi*CLLi*LLiiC
.loc
atomic_uintptr_t
.stabs
s*Cs*iiC
.cv_file
avr31
.cv_func_id
__builtin_circ_std
.cv_loc
expression
.cv_linetable
.cv_inline_linetable
at43usb320
.cv_inline_site_id
c*c*iiIi
.cv_def_range
array
.cv_string
__builtin_HEXAGON_L2_loadruh_pci
.cv_stringtable
attiny167
.cv_filechecksums
LLiv*IiivC*
.cv_filechecksumoffset
-ffixed-a2
.cv_fpo_data
-fmax-stack-var-size=
.sleb128
avr35
.uleb128
LLiv*ivC*
.cfi_sections
list
.cfi_startproc
__builtin_HEXAGON_S2_storerf_pci
.cfi_endproc
at90usb82
.cfi_def_cfa
__builtin_HEXAGON_S2_storerb_pcr
.cfi_def_cfa_offset
multiset
.cfi_adjust_cfa_offset
.cfi_def_cfa_register
at90usb162
.cfi_llvm_def_aspace_cfa
__builtin_HEXAGON_A6_vminub_RdP
.cfi_offset
priority_queue
.cfi_rel_offset
vV64bv*V16i
.cfi_personality
ata5505
.cfi_lsda
__builtin_HEXAGON_V6_vmaskedstorentnq
.cfi_remember_state
stack
.cfi_restore_state
-fno-sanitize-undefined-trap-on-error
.cfi_same_value
ata6617c
.cfi_restore
hvxv65
.cfi_escape
unordered_map
.cfi_return_column
V32iV32iV16iLLi
.cfi_signal_frame
ata664251
.cfi_undefined
__builtin_HEXAGON_V6_vrmpyub_rtt_128B
.cfi_register
unordered_multimap
.cfi_window_save
.cfi_b_key_frame
atmega8u2
.cfi_mte_tagged_frame
__builtin_HEXAGON_A2_addh_h16_hh
.macros_on
reverse_iterator
.macros_off
__builtin_HEXAGON_A2_addh_h16_sat_hh
.macro
atmega16u2
.exitm
__builtin_HEXAGON_A2_addh_l16_hl
.endm
basic_regex
.endmacro
-fmax-subrecord-length=
.purgem
atmega32u2
.err
__builtin_HEXAGON_A2_addsp
.error
basic_string_view
.warning
__builtin_HEXAGON_A2_andp
.altmacro
attiny1634
.noaltmacro
__builtin_HEXAGON_A2_combine_hl
.reloc
regex_iterator
-m32
.dc.a
atmega8
.dc.b
__builtin_HEXAGON_A2_maxp
.dc.d
vtordisp
.dc.l
ULLiLLiLLi
.dc.s
avr4
.dc.w
__builtin_HEXAGON_A2_minup
.dc.x
alloc_text
.dcb
-fno-save-optimization-record
.dcb.b
ata6289
.dcb.d
__builtin_HEXAGON_A2_orp
.dcb.l
function
.dcb.s
__builtin_HEXAGON_A2_satb
.dcb.w
atmega8a
.dcb.x
__builtin_HEXAGON_A2_sub
CF_OPTIONS
.ds.b
-m3dnow
.ds.d
ata6285
.ds.l
__builtin_HEXAGON_A2_subh_h16_sat_ll
.ds.p
OBJC_OPTIONS
.ds.s
__builtin_HEXAGON_A2_subh_l16_sat_ll
.ds.w
ata6286
.ds.x
-fdevirtualize
.print
Reserve the a2 register (M68k only)
.addrsig
-fmax-tokens=
.addrsig_sym
ata6612c
.pseudoprobe
__builtin_HEXAGON_A2_svsubhs
.lto_discard
load
.lto_set_conditional
__builtin_HEXAGON_A2_sxth
frame_ptr_rel
atmega48
subfield_reg
iiUIi
reg_rel
API_AVAILABLE(
unexpected token at start of statement
-m68000
invalid use of pseudo-symbol '.' as a label
atmega48a
 not currently supported for this target
__builtin_HEXAGON_A2_vabshsat
unknown directive
init
__emit
__builtin_HEXAGON_A2_vaddh
expected comma
atmega48pa
expected string parameter for '.ifeqs' directive
__builtin_HEXAGON_A2_vadduhs
expected string parameter for '.ifnes' directive
if (
expected comma after first string for '.ifeqs' directive
-fno-schedule-insns
expected comma after first string for '.ifnes' directive
atmega48pb
expected identifier after '.ifdef'
__builtin_HEXAGON_A2_vavguh
Encountered a .elseif that doesn't follow an .if or  an .elseif
__builtin_available
Encountered a .else that doesn't follow  an .if or an .elseif
__builtin_HEXAGON_A2_vavgw
Encountered a .endif that doesn't follow an .if or .else
atmega48p
expected identifier
iLLiLLi
macros cannot be nested more than 
} else {
 levels deep.
-m68020
 Use -asm-macro-max-nesting-depth to increase this limit.
atmega88
.endmacro
__builtin_HEXAGON_A2_vconj
<instantiation>
vector element
invalid argument identifier for formal argument
__builtin_HEXAGON_A2_vmaxuh
expected '=' after formal parameter identifier
atmega88a
cannot mix positional and keyword arguments
__builtin_HEXAGON_A2_vminh
expected absolute expression
property expression
parameter named '
Max total number of preprocessed tokens for -Wmax-tokens.
' does not exist for macro '
atmega88p
missing value for required parameter '
__builtin_HEXAGON_A2_vnavgw
' in macro '
    
too many positional arguments
__builtin_HEXAGON_A2_vraddub_acc
unexpected token in macro instantiation
atmega88pa
unbalanced parentheses in macro argument
__builtin_HEXAGON_A2_vsubb_map
Wrong number of arguments
__builtin_frame_address
out of range literal value
-m68040
unknown token in expression
atmega88pb
unexpected token in directive
__builtin_HEXAGON_A2_xor
infinity
__builtin_HEXAGON_A4_andn
atmega8515
invalid floating point literal
LLiiUIi
p2align directive with no operand(s) is ignored
invalid alignment value
-fno-see
alignment must be a power of 2
atmega8535
alignment must be smaller than 2**32
__builtin_HEXAGON_A4_cmpbgtui
alignment directive can never be satisfied in this many bytes, ignoring maximum bytes expression
isa-v31-instructions
maximum bytes expression exceeds alignment and has no effect
__builtin_HEXAGON_A4_cmphgti
'.fill' directive with negative size has no effect
atmega8hva
'.fill' directive with size greater than 8 has been truncated to 8
LLiIii
'.fill' directive pattern has been truncated to 32-bits
isa-v30-instructions
non-local symbol required
-m80387
unable to emit symbol attribute
at90pwm1
expected identifier in directive
__builtin_HEXAGON_A4_rcmpeq
alignment not supported on this target
power9-vector
size must be non-negative
__builtin_HEXAGON_A4_round_ri
invalid symbol redefinition
at90pwm2
.abort detected. Assembly stopping.
__builtin_HEXAGON_A4_tlbmatch
.abort '
-ffixed-a3
' detected. Assembly stopping.
-fmax-type-align=
expected string in '.include' directive
at90pwm2b
unexpected token in '.include' directive
__builtin_HEXAGON_A4_vcmpbgtui
Could not find include file '
vW256SLiW256*
expected string in '.incbin' directive
__builtin_HEXAGON_A4_vcmpweqi
skip is negative
at90pwm3
Could not find incbin file '
LLiLLiLLii
negative count has no effect
vv*W256*
unexpected token in '
Use IEEE 754 quadruple-precision for long double
' directive
at90pwm3b
Count is negative
__builtin_HEXAGON_A5_vaddhubs
no matching '.endr' in definition
vv*W512*
unexpected token in '.endr' directive
__builtin_HEXAGON_C2_any8
.endr
at90pwm81
expected identifier in '.irp' directive
__builtin_HEXAGON_C2_cmpeq
expected identifier in '.irpc' directive
vW512*VV
unexpected token in '.irpc' directive
-fno-short-enums
unmatched '.endr' directive
ata5702m322
invalid bundle alignment size (expected between 0 and 30)
__builtin_HEXAGON_C2_cmpgtu
invalid option for '.bundle_lock' directive
vW512*VVi15i15i255
negative file number
__builtin_HEXAGON_C2_cmpltu
explicit path specified, but no file number
avr5
unexpected token in '.file' directive
iiIiIi
MD5 checksum specified, but no file number
vW512*VVi15i15i3
source specified, but no file number
Enable quadword atomics ABI on AIX (AIX PPC64 only). Uses lqarx/stqcx. instructions.
inconsistent use of MD5 checksums
ata5782
unexpected token in '.line' directive
__builtin_HEXAGON_C2_pxfer_map
unexpected token in '.loc' directive
vW512*W256Vi15i3
file number less than one in '.loc' directive
__builtin_HEXAGON_C2_vmux
unassigned file number in '.loc' directive
ata5790
line number less than zero in '.loc' directive
__builtin_HEXAGON_C4_and_andn
column position less than zero in '.loc' directive
RV64
is_stmt value not 0 or 1
Specify the maximum alignment to enforce on pointers lacking an explicit alignment
is_stmt value not the constant value of 0 or 1
ata5790n
isa number less than zero
__builtin_HEXAGON_C4_cmpneqi
isa number not a constant value
'this'
unknown sub-directive in '.loc' directive
__builtin_HEXAGON_C4_nbitsclri
unsupported directive '.stabs'
ata5791
expected file number in '.cv_file' directive
__builtin_HEXAGON_C4_or_or
file number less than one
half
unexpected token in '.cv_file' directive
Enable the default Altivec ABI on AIX (AIX only). Uses only volatile vector registers.
expected checksum kind in '.cv_file' directive
ata5795
file number already allocated
__builtin_HEXAGON_F2_conv_df2d_chop
function id already allocated
second
expected function id in '
__builtin_HEXAGON_F2_conv_df2uw
expected function id within range [0, UINT_MAX)
ata5831
expected 'within' identifier in '.cv_inline_site_id' directive
__builtin_HEXAGON_F2_conv_sf2d
expected 'inlined_at' identifier in '.cv_inline_site_id' directive
daifset
expected line number after 'inlined_at'
Force wchar_t to be an unsigned int
expected integer in '
ata6613c
file number less than one in '
__builtin_HEXAGON_F2_conv_sf2uw_chop
unassigned file number in '
line number less than zero in '.cv_loc' directive
__builtin_HEXAGON_F2_conv_ud2sf
column position less than zero in '.cv_loc' directive
ata6614q
unexpected token in '.cv_loc' directive
__builtin_HEXAGON_F2_conv_w2sf
unknown sub-directive in '.cv_loc' directive
paired-vector-memops
expected SourceField in '.cv_inline_linetable' directive
Enable the extended Altivec ABI on AIX (AIX only). Uses volatile and nonvolatile vector registers
File id less than zero in '.cv_inline_linetable' directive
ata8210
expected SourceLineNum in '.cv_inline_linetable' directive
__builtin_HEXAGON_F2_dfimm_n
Line number less than zero in '.cv_inline_linetable' directive
scanf
expected comma before def_range type in .cv_def_range directive
__builtin_HEXAGON_F2_sfclass
expected def_range type in directive
ata8510
expected comma before register number in .cv_def_range directive
Enable debug messages while writing module files
expected register number
Reserve the a3 register (M68k only)
expected comma before offset in .cv_def_range directive
-fmemory-profile=
expected offset value
atmega16
expected register value
__builtin_HEXAGON_F2_sffma_sc
expected comma before flag value in .cv_def_range directive
CFString
expected flag value
__builtin_HEXAGON_F2_sfimm_n
expected comma before base pointer offset in .cv_def_range directive
atmega16a
expected base pointer offset value
__builtin_HEXAGON_F2_sfmin
unexpected def_range type in .cv_def_range directive
strfmon
expected symbol name
-mabicalls
expected .eh_frame or .debug_frame
atmega161
unexpected token
__builtin_HEXAGON_M2_cmacs_s0
unsupported encoding.
cmn_err
expected identifier in '.macro' directive
__builtin_HEXAGON_M2_cmpyi_s0
vararg parameter '
atmega162
' should be the last parameter
__builtin_HEXAGON_M2_cmpyrsc_s0
macro '
zcmn_err
' has multiple parameters named '
Do not include column number on diagnostics
missing parameter qualifier for '
atmega163
 is not a valid parameter qualifier for '
__builtin_HEXAGON_M2_cnacsc_s0
pointless default value for required parameter '
os_trace
no matching '.endmacro' in definition
__builtin_HEXAGON_M2_dpmpyss_rnd_s0
' is already defined
atmega164a
macro defined with named parameters which are not used in macro body, possible positional parameter found in body which will have no effect
__builtin_HEXAGON_M2_dpmpyuu_s0
unexpected '
c_str
' in file, no current macro definition
-mabs=
expected identifier in '.purgem' directive
atmega164p
' is not defined
iiiUIi
.err encountered
std::abs
.error directive invoked in source file
__builtin_HEXAGON_M2_mmachs_s0
.error argument must be a string
atmega164pa
.warning directive invoked in source file
__builtin_HEXAGON_M2_mmacls_s0
.warning argument must be a string
sizeof(
expected relocation name
Enable heap memory profiling and dump results into <directory>
expression must be relocatable
atmega165
' directive with negative repeat count has no effect
__builtin_HEXAGON_M2_mmaculs_s0
literal value out of range for directive
strlen(
expected double quoted string after .print
__builtin_HEXAGON_M2_mmpyh_s0
unexpected token in '.pseudoprobe' directive
atmega165a
unexpected expression in _emit
__builtin_HEXAGON_M2_mmpyl_s0
unexpected expression in align
'super'
literal value not a power of two greater then zero
-madx
parsed instruction: [
atmega165p
unmatched .ifs or .elses
__builtin_HEXAGON_M2_mmpyul_s0
unassigned file number: 
taggedRelease
 for .file directives
__builtin_HEXAGON_M2_mpy_acc_hl_s0
assembler local symbol '
atmega165pa
' not defined
__builtin_HEXAGON_M2_mpy_acc_ll_s0
directional label undefined
column
 * $$
Do not include source location information with diagnostics
offset 
atmega168
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s0
 + $$
__builtin_HEXAGON_M2_mpy_hl_s0
byte ptr 
atmega168a
word ptr 
__builtin_HEXAGON_M2_mpy_ll_s0
dword ptr 
%s%s %s 
qword ptr 
-main-file-name
xword ptr 
atmega168p
xmmword ptr 
__builtin_HEXAGON_M2_mpy_nac_ll_s0
ymmword ptr 
.even
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s0
while in macro instantiation
atmega168pa
expected string
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s0
unexpected backslash at end of string
-ffixed-a4
invalid hexadecimal escape sequence
-fmemory-profile
invalid octal escape sequence (out of range)
atmega168pb
invalid escape sequence (unrecognized character)
__builtin_HEXAGON_M2_mpy_rnd_ll_s0
unexpected symbol modifier following '@'
%hhd
invalid variant '
__builtin_HEXAGON_M2_mpy_sat_hl_s0
invalid modifier '
atmega169
' (no symbols present)
__builtin_HEXAGON_M2_mpy_sat_ll_s0
invalid variant on expression '
' (already modified)
-maix-struct-return
invalid token in expression
atmega169a
expected symbol variant after '@'
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s0
expected a symbol reference
cl_khr_subgroups or __opencl_c_subgroups
unexpected modifier on variable reference
__builtin_HEXAGON_M2_mpy_up_s1_sat
cannot use . as current PC
atmega169p
brackets expression not supported on this target
__builtin_HEXAGON_M2_mpyd_acc_hl_s1
expected '(' after operator
ndrange_t
expected ')'
-fno-signaling-math
expected ']' in brackets expression
atmega169pa
expected section directive before assembly directive
__builtin_HEXAGON_M2_mpyd_hl_s1
The HLASM Label has to be an Identifier
 ? YES : NO
Cannot have just a label for an HLASM inline asm statement
__builtin_HEXAGON_M2_mpyd_ll_s1
.text
atmega32
.bss
__builtin_HEXAGON_M2_mpyd_nac_hl_s1
.section
streaming compatible
.def
-malign-branch-boundary=
.scl
atmega32a
.type
__builtin_HEXAGON_M2_mpyd_rnd_hl_s1
.endef
localizedStringForKey
.secrel32
__builtin_HEXAGON_M2_mpyd_rnd_ll_s1
.symidx
atmega323
.safeseh
__builtin_HEXAGON_M2_mpyu_acc_hh_s0
.secidx
table
.linkonce
Enable heap memory profiling
.rva
atmega324a
.weak
__builtin_HEXAGON_M2_mpyu_hh_s0
.cg_profile
%02x
.seh_proc
__builtin_HEXAGON_M2_mpyu_lh_s0
.seh_endproc
atmega324p
.seh_endfunclet
__builtin_HEXAGON_M2_mpyu_nac_hh_s0
.seh_startchained
%04x
.seh_endchained
-malign-branch=
.seh_handler
atmega324pa
.seh_handlerdata
__builtin_HEXAGON_M2_mpyu_up
.seh_stackalloc
%08x
.seh_endprologue
__builtin_HEXAGON_M2_mpyud_acc_hl_s1
unexpected token in section switching directive
atmega324pb
expected string in directive
__builtin_HEXAGON_M2_mpyud_acc_ll_s1
expected comdat type such as 'discard' or 'largest' after protection bits
NSUInteger
expected comma in directive
-fno-signed-char
conflicting section flags 'b' and 'd'.
atmega325
unknown flag
__builtin_HEXAGON_M2_mpyud_ll_s1
one_only
UInt32
same_size
__builtin_HEXAGON_M2_mpyud_nac_hl_s1
same_contents
atmega325a
associative
__builtin_HEXAGON_M2_mpyud_nac_ll_s1
largest
.c_str()
newest
-malign-double
unrecognized COMDAT type '
atmega325p
invalid '.secrel32' directive offset, can't be less than zero or greater than std::numeric_limits<uint32_t>::max()
__builtin_HEXAGON_M2_vcmac_s0_sat_r
cannot make section associative with .linkonce
cmath
section '
__builtin_HEXAGON_M2_vcmpy_s1_sat_r
' is already linkonce
atmega325pa
 in directive
Print absolute paths in diagnostics
invalid '.rva' directive offset, can't be less than -2147483648 or greater than 2147483647
Reserve the a4 register (M68k only)
you must specify one or both of @unwind or @except
-fmerge-all-constants
a handler attribute must begin with '@' or '%'
atmega3250
expected @unwind or @except
__builtin_HEXAGON_M2_vmac2s_s1
.alt_entry
.desc
__builtin_HEXAGON_M2_vmpy2es_s1
.indirect_symbol
atmega3250a
.lsym
__builtin_HEXAGON_M2_vmpy2s_s1pack
.subsections_via_symbols
'std::strong_ordering::less'
.dump
-malign-functions=
.load
atmega3250p
.pushsection
__builtin_HEXAGON_M2_vrcmacr_s0c
.popsection
.previous
__builtin_HEXAGON_M2_vrcmpyr_s0c
.secure_log_unique
atmega3250pa
.secure_log_reset
__builtin_HEXAGON_M2_vrcmpys_s1rp
.tbss
 override
.zerofill
-fno-signed-wchar
.data_region
atmega328
.end_data_region
__builtin_HEXAGON_M4_cmpyi_wh
.const
final
.const_data
__builtin_HEXAGON_M4_mac_up_s1_sat
.constructor
atmega328p
.cstring
__builtin_HEXAGON_M4_mpyri_addr_u2
.destructor
override
.dyld
-malign-loops=
.fvmlib_init0
atmega328pb
.fvmlib_init1
__builtin_HEXAGON_M4_or_or
.lazy_symbol_pointer
condition
.linker_option
__builtin_HEXAGON_M4_vpmpyh
.literal16
atmega329
.literal4
__builtin_HEXAGON_M4_vrmpyeh_s0
.literal8
new[]
.mod_init_func
Allow merging of constants
.mod_term_func
atmega329a
.non_lazy_symbol_pointer
__builtin_HEXAGON_M4_xor_or
.thread_local_variable_pointer
.objc_cat_cls_meth
__builtin_HEXAGON_M5_vmacbsu
.objc_cat_inst_meth
atmega329p
.objc_category
__builtin_HEXAGON_M5_vrmacbsu
.objc_class
.objc_class_names
-mamdgpu-ieee
.objc_class_vars
atmega329pa
.objc_cls_meth
LLiLLiLLiUIi
.objc_cls_refs
.objc_inst_meth
__builtin_HEXAGON_S2_asl_i_p_xacc
.objc_instance_vars
atmega3290
.objc_message_refs
__builtin_HEXAGON_S2_asl_i_r_nac
.objc_meta_class
.objc_meth_var_names
-fno-signed-zeros
.objc_meth_var_types
atmega3290a
.objc_module_info
__builtin_HEXAGON_S2_asl_r_p_and
.objc_protocol
.objc_selector_strs
__builtin_HEXAGON_S2_asl_r_r
.objc_string_object
atmega3290p
.objc_symbols
__builtin_HEXAGON_S2_asl_r_r_or
.picsymbol_stub
.static_const
-mamx-bf16
.static_data
atmega3290pa
.symbol_stub
__builtin_HEXAGON_S2_asr_i_p_or
.tdata
.thread_init_func
__builtin_HEXAGON_S2_asr_i_r_acc
.tlv
atmega406
.ident
__builtin_HEXAGON_S2_asr_i_r_rnd
.bridgeos_version_min
-ffixed-a5
.watchos_version_min
-fmerge-constants
.tvos_version_min
atmega64
.ios_version_min
__builtin_HEXAGON_S2_asr_r_p_nac
.macosx_version_min
.build_version
__builtin_HEXAGON_S2_asr_r_r_acc
.ptrauth_abi_version
atmega64a
.ptrauth_kernel_abi_version
__builtin_HEXAGON_S2_asr_r_r_sat
.alt_entry must preceed symbol definition
unexpected token in '.desc' directive
-mamx-tile
indirect symbol not in a symbol pointer or stub section
atmega640
expected identifier in .indirect_symbol directive
__builtin_HEXAGON_S2_cl1
non-local symbol required in directive
unable to emit indirect symbol attribute for: 
__builtin_HEXAGON_S2_clbp
unexpected token in '.indirect_symbol' directive
atmega644
unexpected token in '.lsym' directive
__builtin_HEXAGON_S2_ct0p
directive '.lsym' is unsupported
co_await
unexpected token in '.subsections_via_symbols' directive
-fno-single-precision-constant
expected string in '.dump' or '.load' directive
atmega644a
unexpected token in '.dump' or '.load' directive
LLiLLiUIiUIi
ignoring directive .dump for now
selector
ignoring directive .load for now
__builtin_HEXAGON_S2_insert_rp
expected identifier after '.section' directive
atmega644p
unexpected token in '.section' directive
__builtin_HEXAGON_S2_insertp_rp
__textcoal_nt
statements
__text
-mappletvsimulator-version-min=
__const_coal
atmega644pa
__datacoal_nt
__builtin_HEXAGON_S2_lsl_r_p_xor
__data
macro
section "
__builtin_HEXAGON_S2_lsl_r_r_nac
" is deprecated
atmega645
change section name to "
__builtin_HEXAGON_S2_lsr_i_p
.popsection without corresponding .pushsection
elif
.previous without corresponding .section
-fmerge-functions
unexpected token in '.secure_log_unique' directive
atmega645a
.secure_log_unique specified multiple times
__builtin_HEXAGON_S2_lsr_i_r_and
.secure_log_unique used but AS_SECURE_LOG_FILE environment variable unset.
elifndef
can't open secure log file: 
__builtin_HEXAGON_S2_lsr_i_vh
unexpected token in '.secure_log_reset' directive
atmega645p
unexpected token in '.tbss' directive
__builtin_HEXAGON_S2_lsr_r_p_and
invalid '.tbss' directive size, can't be less thanzero
header
invalid '.tbss' alignment, can't be lessthan zero
-marm
__thread_bss
atmega649
expected segment name after '.zerofill' directive
__builtin_HEXAGON_S2_lsr_r_r_or
expected section name after comma in '.zerofill' directive
undef
unexpected token in '.zerofill' directive
__builtin_HEXAGON_S2_parityp
invalid '.zerofill' directive size, can't be less than zero
atmega649a
invalid '.zerofill' directive alignment, can't be less than zero
__builtin_HEXAGON_S2_shuffeh
expected region type after '.data_region' directive
filename
unknown region type in '.data_region' directive
-fno-slp-vectorize-aggressive
unexpected token in '.end_data_region' directive
atmega649p
__bss
__builtin_HEXAGON_S2_tableidxw_goodsyntax
__constructor
include_next
__cstring
__builtin_HEXAGON_S2_tstbit_r
__destructor
atmega6450
__dyld
__builtin_HEXAGON_S2_vcrotate
__fvmlib_init0
ApplicationExtension
__fvmlib_init1
-massembler-fatal-warnings
__la_symbol_ptr
atmega6450a
expected string in '
__builtin_HEXAGON_S2_vsatwh
__literal16
operator-
__literal4
__builtin_HEXAGON_S2_vsplatrb
__literal8
atmega6450p
__mod_init_func
Generate code for CUDA device
__mod_term_func
Reserve the a5 register (M68k only)
__nl_symbol_ptr
Permit merging of identical functions when optimizing.
__thread_ptr
atmega6490
__cat_cls_meth
__builtin_HEXAGON_S4_addaddi
__cat_inst_meth
operator^
__category
__builtin_HEXAGON_S4_andi_lsr_ri
__class
atmega6490a
__class_vars
__builtin_HEXAGON_S4_extract
__cls_meth
operator|
__cls_refs
-massembler-no-warn
__inst_meth
atmega6490p
__instance_vars
__builtin_HEXAGON_S4_or_andix
__message_refs
operator!
__meta_class
__builtin_HEXAGON_S4_parity
__protocol
atmega64rfr2
__selector_strs
__builtin_HEXAGON_S4_vrcrotate
__string_object
operator<
__symbols
-fno-small-block-descriptors
__picsymbol_stub
atmega644rfr2
__static_const
__builtin_HEXAGON_S4_vxsubaddhr
__static_data
operator+=
__symbol_stub
__builtin_HEXAGON_S5_popcountp
__thread_data
atmega16hva
__thread_init
__builtin_HEXAGON_Y2_dcfetch
__thread_vars
operator*=
-matomics
invalid OS update specifier, comma expected
atmega16hva2
OS update
v60|v62|v65|v66|v67|v68|v69
 major version number, integer expected
operator%=
 major version number
__builtin_HEXAGON_S6_rol_i_p_or
 minor version number required, comma expected
atmega16hvb
 minor version number, integer expected
__builtin_HEXAGON_S6_rol_i_r_and
 minor version number
operator&=
 version number, integer expected
-fmessage-length=
 version number
atmega16hvbrevb
__builtin_HEXAGON_S6_vtrunohb_ppp
SDK subminor
operator<<
 used while targeting 
v66|v67|v68|v69
overriding previous version directive
atmega32hvb
previous definition is here
iUIiUIi
 in '
operator<<=
platform name expected
-mavx512bf16
unknown platform name
atmega32hvbrevb
version number required, comma expected
__builtin_HEXAGON_F2_dfmpyfix
 in '.build_version' directive
operator==
expected integer version in '.ptrauth_abi_version' directive
__builtin_HEXAGON_M7_dcmpyiw
invalid ptrauth ABI version number
atmega64hve
 in '.ptrauth_abi_version' directive
__builtin_HEXAGON_M7_dcmpyrw
expected integer version in '.ptrauth_kernel_abi_version' directive
operator<=
invalid ptrauth kernel ABI version number
-fno-spell-checking
 in '.ptrauth_kernel_abi_version' directive
atmega64hve2
.rodata
__builtin_HEXAGON_M7_wcmpyiwc
.data.rel
operator<=>
.data.rel.ro
__builtin_HEXAGON_M7_wcmpyrwc
.size
at90can32
.symver
__builtin_HEXAGON_Y6_dmpause
.version
operator||
.weakref
-mavx512bw
.local
at90can64
.protected
iV32ii
.internal
operator--
.hidden
V32iV64i
.subsection
at90pwm161
.fini_array
V16ii
.preinit_array
-ffixed-a6
Section cannot specifiy a group name while also acting as a member of the last group
Format message diagnostics so that they fit within N columns
Mergeable section must specify the type
at90pwm216
Group section must specify the type
__builtin_HEXAGON_V6_pred_and_n_128B
.note
operatorco_await
init_array
V128bV128b
fini_array
at90pwm316
preinit_array
__builtin_HEXAGON_V6_pred_or_n_128B
nobits
operator delete
progbits
-mavx512dq
llvm_odrtab
atmega32c1
llvm_linker_options
__builtin_HEXAGON_V6_vS32b_nqpred_ai_128B
llvm_call_graph_profile
operator delete[]
llvm_dependent_libraries
__builtin_HEXAGON_V6_vS32b_nt_qpred_ai_128B
llvm_sympart
atmega64c1
llvm_bb_addr_map
V16iV16iV16i
llvm_offloading
operator[]
unknown section type
-fno-split-cold-code
changed section type for 
atmega16m1
, expected: 0x
__builtin_HEXAGON_V6_vabsdiffw_128B
changed section flags for 
 const
changed section entsize for 
V32iV32i
, expected: 
atmega32m1
DWARF2 only supports one section per compilation unit
__builtin_HEXAGON_V6_vabsw_128B
expected '@<type>', '%<type>' or "<type>"
 restrict
expected '%<type>' or "<type>"
-mavx512fp16
expected the entry size
atmega64m1
entry size must be positive
__builtin_HEXAGON_V6_vaddbnq
expected group name
(void)
invalid group name
__builtin_HEXAGON_V6_vaddbq
invalid linkage
atmega16u4
Linkage must be 'comdat'
__builtin_HEXAGON_V6_vaddh_dv
expected linked-to symbol
inout 
invalid linked-to symbol
-fminimize-whitespace
linked-to symbol is not in a section: 
atmega32u4
expected 'unique'
__builtin_HEXAGON_V6_vaddhsat_dv
expected commma
bycopy 
unique id must be positive
__builtin_HEXAGON_V6_vaddhw_128B
unique id is too large
atmega32u6
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '%<type>' or "<type>"
__builtin_HEXAGON_V6_vaddubsat
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '@<type>', '%<type>' or "<type>"
oneway 
expected symbol type in directive
-mavx512ifma
unsupported attribute in '.type' directive
at90usb646
unexpected token in '.type' directive
__builtin_HEXAGON_V6_vadduhw
unexpected token in '.ident' directive
nullable 
expected a comma
__builtin_HEXAGON_V6_vaddw_dv
expected a '@' in the name
at90usb647
__builtin_HEXAGON_V6_vaddwq
expected 'remove'
, nil
unexpected token in '.version' directive
-fno-split-dwarf-inlining
asm-macro-max-nesting-depth
at90scr100
The maximum nesting depth allowed for assembly macros.
__builtin_HEXAGON_V6_valignb_128B
expected newline
, (void*)0
unexpected token
__builtin_HEXAGON_V6_valignbi_128B
expected integer count in '.cg_profile' directive
at94k
expected string in directive, instead got: 
__builtin_HEXAGON_V6_vandqrt
identifier
Only data sections can be passive
-mavx512vbmi2
Expected 
m3000
, instead got: 
__builtin_HEXAGON_V6_vandvrt
.size directive ignored for function symbols
using namespace
Expected label after .type directive, got: 
__builtin_HEXAGON_V6_vandvrt_acc
Expected label,@type declaration, got: 
atmega128
Unknown WASM symbol type: 
-fdiagnostics-color
Reserve the a6 register (M68k only)
.csect
Minimize whitespace when emitting preprocessor output
XCOFFAsmParser directive not yet supported!
avr51
expected assembly-time absolute expression
__builtin_HEXAGON_V6_vaslw_acc
invalid number of bytes
qualifier
invalid .org offset '
__builtin_HEXAGON_V6_vasrh
' (at offset '
atmega128a
Fragment can't be larger than a bundle size
__builtin_HEXAGON_V6_vasrhubrndsat
Padding cannot exceed 255 bytes
catch
<stdin>
-mavx512vl
checksum_offset
atmega1280
__builtin_HEXAGON_V6_vasrw_acc
Cannot initialize MC for non-Windows COFF object files.
init-statement
Cannot initialize MC for unknown object file format.
__builtin_HEXAGON_V6_vasrwhrndsat
atmega1281
._Renamed..
__builtin_HEXAGON_V6_vasrwuhsat
_Renamed..
inc-expression
invalid symbol name from source
-fno-split-machine-functions
section's multiply symbols policy does not match
atmega1284
.section
V64iV64i
inconsistent use of embedded source
range-expression
__builtin_HEXAGON_V6_vavghrnd_128B
0x%02llx
atmega1284p
<<invalid>>
__builtin_HEXAGON_V6_vavgubrnd_128B
DTPOFF
return false
DTPREL
-mavx512vp2intersect
atmega128rfa1
GOTOFF
__builtin_HEXAGON_V6_vavgwrnd_128B
GOTREL
label
PCREL
__builtin_HEXAGON_V6_vcl0w_128B
GOTPCREL
atmega128rfr2
GOTPCREL_NORELAX
V16i
GOTTPOFF
__bridge_transfer
INDNTPOFF
-fmodule-feature
NTPOFF
atmega1284rfr2
GOTNTPOFF
__builtin_HEXAGON_V6_vdealh_128B
CF type
TLSGD
V64iV32iV32ii
TLSLD
at90can128
TLSLDM
__builtin_HEXAGON_V6_vdmpybus_128B
TPOFF
typeid
TPREL
-mavxvnni
tlscall
at90usb1286
tlsdesc
V64iV64iV64ii
TLVP
expressions
TLVPPAGE
__builtin_HEXAGON_V6_vdmpyhb_acc_128B
TLVPPAGEOFF
at90usb1287
PAGE
__builtin_HEXAGON_V6_vdmpyhb_dv_acc_128B
PAGEOFF
void
GOTPAGE
-fno-split-stack
GOTPAGEOFF
atmega2560
SECREL32
V32iV32iV64ii
SIZE
alignof
WEAKREF
__builtin_HEXAGON_V6_vdmpyhsat_acc_128B
ABS8
avr6
PLTOFF
__builtin_HEXAGON_V6_vdmpyhsuisat_acc_128B
GOT_PREL
parameter-pack
target1
-mbackchain
target2
atmega2561
prel31
V16iV16iV16iV16i
sbrel
_Alignof
tlsldo
__builtin_HEXAGON_V6_vdsaduh_128B
tlsdescseq
atmega256rfr2
V64bV16iV16i
-ffixed-d0
hlo8
Enable <feature> in module map requires declarations
diff8
atmega2564rfr2
diff16
__builtin_HEXAGON_V6_veqb_or_128B
diff32
constexpr
__builtin_HEXAGON_V6_veqh_128B
attiny4
high
__builtin_HEXAGON_V6_veqh_or_128B
higha
friend
highera
-mbig-endian
highesta
avrtiny
got@l
__builtin_HEXAGON_V6_veqw_or_128B
got@h
inline
got@ha
__builtin_HEXAGON_V6_vgtb_128B
tocbase
attiny5
__builtin_HEXAGON_V6_vgtb_or_128B
toc@l
__FUNCTION__
toc@h
-fno-stack-arrays
toc@ha
attiny9
dtpmod
__builtin_HEXAGON_V6_vgth_or_128B
tprel@l
!#!NAME_GOES_HERE!#!
tprel@h
__builtin_HEXAGON_V6_vgtub_128B
tprel@ha
attiny10
tprel@high
__builtin_HEXAGON_V6_vgtub_or_128B
tprel@higha
body
tprel@higher
-mbmi
tprel@highera
attiny20
tprel@highest
__builtin_HEXAGON_V6_vgtuh_or_128B
tprel@highesta
long
dtprel@l
__builtin_HEXAGON_V6_vgtuw_128B
dtprel@h
attiny40
dtprel@ha
__builtin_HEXAGON_V6_vgtuw_or_128B
dtprel@high
unsigned
dtprel@higha
<feature>
dtprel@higher
attiny102
dtprel@highera
__builtin_HEXAGON_V6_vgtw_or_128B
dtprel@highest
_Complex
dtprel@highesta
__builtin_HEXAGON_V6_vinsertwr_128B
got@tprel
attiny104
got@tprel@l
__builtin_HEXAGON_V6_vlalignbi_128B
got@tprel@h
wchar_t
got@tprel@ha
-mbranch-protection=
got@dtprel
atxmega16a4
got@dtprel@l
__builtin_HEXAGON_V6_vlsrwv_128B
got@dtprel@h
char32_t
got@dtprel@ha
V16iV16iV16iV16ii
got@tlsgd
avrxmega2
got@tlsgd@l
__builtin_HEXAGON_V6_vlutvwh_128B
got@tlsgd@h
typeof
got@tlsgd@ha
Disable stack checking
atxmega16a4u
got@tlsld
__builtin_HEXAGON_V6_vmaxub_128B
got@tlsld@l
synthesize
got@tlsld@h
__builtin_HEXAGON_V6_vmaxw_128B
got@tlsld@ha
atxmega16c4
got@pcrel
__builtin_HEXAGON_V6_vminub_128B
got@tlsgd@pcrel
@required
got@tlsld@pcrel
-mbranch-target-enforce
got@tprel@pcrel
atxmega16d4
tls@pcrel
__builtin_HEXAGON_V6_vmpabus_acc_128B
tlsld
@optional
notoc
__builtin_HEXAGON_V6_vmpabuuv_128B
IMGREL
atxmega32a4
LO16
-fdebug-pass-manager
HI16
Reserve the d0 register (M68k only)
GPREL
-fmodule-file-cache-key
GDGOT
atxmega32a4u
LDGOT
V64iV64iV32ii
GDPLT
implementation
LDPLT
V32iV32iV16iV16i
atxmega32c3
IEGOT
__builtin_HEXAGON_V6_vmpybv_128B
TYPEINDEX
@import
MBREL
Align selected branches (fused, jcc, jmp) within 32-byte boundary
TLSREL
atxmega32c4
TBREL
__builtin_HEXAGON_V6_vmpyhsat_acc_128B
GOT@TLS
@protected
gotpcrel32@lo
__builtin_HEXAGON_V6_vmpyhss_128B
gotpcrel32@hi
atxmega32d3
rel32@lo
__builtin_HEXAGON_V6_vmpyhus_acc_128B
rel32@hi
@package
rel64
Disable stack clash protection
abs32@lo
atxmega32d4
abs32@hi
__builtin_HEXAGON_V6_vmpyieoh_128B
pc_hi
@catch
pc_lo
__builtin_HEXAGON_V6_vmpyiewuh_128B
gotoff_hi
atxmega32e5
gotoff_lo
__builtin_HEXAGON_V6_vmpyih_128B
plt_hi
@throw
plt_lo
-mbulk-memory
tls_gd_hi
atxmega16e5
tls_gd_lo
__builtin_HEXAGON_V6_vmpyiowh_128B
tpoff_hi
char[]
tpoff_lo
__builtin_HEXAGON_V6_vmpyiwb_acc_128B
ntpoff
atxmega8e5
__builtin_HEXAGON_V6_vmpyiwh_acc_128B
typeindex
encode
unable to evaluate offset for variable '
Make the module with the given compile job cache key available as if it were at <path>. This option may be combined with -fmodule-file= to import the module. The module must have previously been built with -fcache-compile-job.
unable to evaluate offset to undefined symbol '
atxmega64a3
__eh_frame
__builtin_HEXAGON_V6_vmpyowh_sacc_128B
__ustring
Protocol *
__common
__builtin_HEXAGON_V6_vmpyub_acc_128B
__llvm_addrsig
avrxmega4
__gcc_except_tab
__builtin_HEXAGON_V6_vmpyubv_acc_128B
__LD
NSString *
__compact_unwind
-mcldemote
__DWARF
atxmega64a3u
__debug_names
__builtin_HEXAGON_V6_vmpyuhv_acc_128B
debug_names_begin
NSArray *
__apple_names
__builtin_HEXAGON_V6_vnavgh_128B
names_begin
atxmega64a4u
__apple_objc
__builtin_HEXAGON_V6_vnavgw_128B
objc_begin
objects, ...
__apple_namespac
Disable the use of stack protectors
namespac_begin
atxmega64b1
__apple_types
__builtin_HEXAGON_V6_vor_128B
types_begin
__debug_abbrev
__builtin_HEXAGON_V6_vpackeh_128B
section_abbrev
atxmega64b3
__debug_info
__builtin_HEXAGON_V6_vpackhub_sat_128B
section_info
object, ...
__debug_line
-mclwb
section_line
atxmega64c3
__debug_line_str
__builtin_HEXAGON_V6_vpackwuh_sat_128B
section_line_str
autorelease
__debug_frame
__builtin_HEXAGON_V6_vrdelta_128B
__debug_pubnames
atxmega64d3
__debug_pubtypes
__builtin_HEXAGON_V6_vrmpybus_acc_128B
__debug_gnu_pubn
-ffixed-d1
__debug_gnu_pubt
<path> <key>
__debug_str
atxmega64d4
info_string
V64iV64iV64iiUIi
__debug_str_offs
awakeFromCoder
section_str_off
__builtin_HEXAGON_V6_vrmpybusv_acc_128B
__debug_addr
atxmega64a1
__debug_loc
__builtin_HEXAGON_V6_vrmpybv_acc_128B
section_debug_loc
classForCoder
__debug_loclists
-mcmodel=medany
__debug_aranges
avrxmega5
__debug_ranges
__builtin_HEXAGON_V6_vrmpyubi_acc_128B
debug_range
alloc
__debug_rnglists
__builtin_HEXAGON_V6_vrmpyubv_acc_128B
__debug_macinfo
atxmega64a1u
__debug_macro
__builtin_HEXAGON_V6_vroundhb_128B
__debug_inlined
struct <anonymous>
__debug_cu_index
-fno-standalone-debug
__debug_tu_index
atxmega128a3
__LLVM_STACKMAPS
__builtin_HEXAGON_V6_vrsadubi_128B
__llvm_stackmaps
class <anonymous>
__LLVM_FAULTMAPS
__builtin_HEXAGON_V6_vsathub_128B
__llvm_faultmaps
avrxmega6
__remarks
V32iV16i
.bss
enum <anonymous>
.text
-mcmodel=medlow
.rodata.cst4
atxmega128a3u
.rodata.cst8
__builtin_HEXAGON_V6_vshuffb_128B
.rodata.cst16
BOOL
.rodata.cst32
__builtin_HEXAGON_V6_vshuffh_128B
.gcc_except_table
atxmega128b1
.llvm_stackmaps
__builtin_HEXAGON_V6_vshuffvdd_128B
.llvm_faultmaps
NSArray
.stack_sizes
-fmodule-file-deps
.pseudo_probe
atxmega128b3
.pseudo_probe_desc
__builtin_HEXAGON_V6_vsubb_128B
.ppa1
NSSet
.rdata
__builtin_HEXAGON_V6_vsubbnq_128B
.debug$S
atxmega128c3
.debug$T
__builtin_HEXAGON_V6_vsubh_128B
.debug$H
objectIn
section_debug_loclists
-mcmodel=
section_info_dwo
atxmega128d3
section_types_dwo
__builtin_HEXAGON_V6_vsubhsat_128B
section_abbrev_dwo
AtIndexes
skel_string
__builtin_HEXAGON_V6_vsubhw_128B
skel_loc
atxmega128d4
section_str_off_dwo
__builtin_HEXAGON_V6_vsububsat_128B
addr_sec
indexes
.drectve
-fno-strength-reduce
.pdata
atxmega192a3
.xdata
__builtin_HEXAGON_V6_vsubuhw_128B
.sxdata
.gehcont$y
__builtin_HEXAGON_V6_vsubw_dv_128B
.gfids$y
atxmega192a3u
.giats$y
__builtin_HEXAGON_V6_vsubwq_128B
.gljmp$y
range:
.tls$
-mcmse
.rodata.gcc_except_table
atxmega192c3
.rodata.8
V64iV128bV32iV32i
.rodata.16
inRange
.eh_info_table
__builtin_HEXAGON_V6_vtmpyb_acc_128B
.dwabrev
atxmega192d3
.dwinfo
-fdiagnostics-format=
.dwline
Reserve the d1 register (M68k only)
.dwframe
-fmodule-file-home-is-cwd
.dwpbnms
atxmega256a3
.dwpbtyp
__builtin_HEXAGON_V6_vunpackh_128B
.dwstr
insert
.dwloc
V64iV64iV32i
.dwarnge
atxmega256a3u
.dwrnges
__builtin_HEXAGON_V6_vunpackub_128B
.dwmac
atIndexes:
DXBC
-mcode-object-v3
.section
atxmega256a3b
.linkonce
__builtin_HEXAGON_V6_vzh_128B
IMAGE_SCN_CNT_UNINITIALIZED_DATA
replaceObjectIn
,#alloc
__builtin_HEXAGON_V6_lvsplath
,#execinstr
atxmega256a3bu
,#write
__builtin_HEXAGON_V6_shuffeqh
,#exclude
withObject:
,#tls
-fno-strict-enums
0x7000001e
atxmega256c3
llvm_bb_addr_map_v0
__builtin_HEXAGON_V6_vaddcarry
unsupported type 0x
with
 for section 
__builtin_HEXAGON_V6_vaddclbh
,comdat
atxmega256d3
,unique,
__builtin_HEXAGON_V6_vaddhw_acc
.subsection
NSEnumerator *
SHT_NOBITS
-mcode-object-version=
0123456789_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
atxmega384c3
,none,
__builtin_HEXAGON_V6_vadduwsat
mach-o section specifier requires a segment and section separated by a comma
Object
mach-o section specifier requires a section whose length is between 1 and 16 characters
__builtin_HEXAGON_V6_vandnqrt
mach-o section specifier uses an unknown section type
atxmega384d3
mach-o section specifier of type 'symbol_stubs' requires a size specifier
__builtin_HEXAGON_V6_vandvnqv
mach-o section specifier has invalid attribute
objects
mach-o section specifier cannot have a stub size specified because it does not have type 'symbol_stubs'
Use the current working directory as the base directory of compiled module files.
mach-o section specifier has a malformed stub size
atxmega128a1
regular
__builtin_HEXAGON_V6_vasruwuhrndsat
S_REGULAR
keyPathsForValuesAffecting
zerofill
__builtin_HEXAGON_V6_vlsrb
S_ZEROFILL
avrxmega7
cstring_literals
__builtin_HEXAGON_V6_vlutvvb_oracci
S_CSTRING_LITERALS
automaticallyNotifiesObserversOf
4byte_literals
none,2,3,4,5
S_4BYTE_LITERALS
atxmega128a1u
8byte_literals
__builtin_HEXAGON_V6_vlutvwh_oracci
S_8BYTE_LITERALS
__promise
literal_pointers
__builtin_HEXAGON_V6_vlutvwhi
S_LITERAL_POINTERS
atxmega128a4u
non_lazy_symbol_pointers
__builtin_HEXAGON_V6_vmaxb
S_NON_LAZY_SYMBOL_POINTERS
final_suspend
lazy_symbol_pointers
Relax language rules and try to match the behavior of the target's native float-to-int conversion instructions
S_LAZY_SYMBOL_POINTERS
attiny202
symbol_stubs
__builtin_HEXAGON_V6_vmpyewuh_64
S_SYMBOL_STUBS
await_transform
mod_init_funcs
__builtin_HEXAGON_V6_vmpyiwub_acc
S_MOD_INIT_FUNC_POINTERS
avrxmega3/short-calls
mod_term_funcs
__builtin_HEXAGON_V6_vrounduhub
S_MOD_TERM_FUNC_POINTERS
yield_value
coalesced
-mconsole
S_COALESCED
avrxmega3
S_GB_ZEROFILL
__builtin_HEXAGON_V6_vsubbsat_dv
interposing
return_value
S_INTERPOSING
__builtin_HEXAGON_V6_vsubububb_sat
16byte_literals
attiny204
S_16BYTE_LITERALS
__builtin_HEXAGON_V6_vsubuwsat_dv
S_DTRACE_DOF
-ffixed-d2
S_LAZY_DYLIB_SYMBOL_POINTERS
-fmodule-file=
thread_local_regular
attiny212
S_THREAD_LOCAL_REGULAR
__builtin_HEXAGON_V6_vaslh_acc_128B
thread_local_zerofill
get_return_object
S_THREAD_LOCAL_ZEROFILL
__builtin_HEXAGON_V6_vasruhubrndsat_128B
thread_local_variables
attiny214
S_THREAD_LOCAL_VARIABLES
__builtin_HEXAGON_V6_vasruwuhsat_128B
thread_local_variable_pointers
std::coroutine_traits
S_THREAD_LOCAL_VARIABLE_POINTERS
-mconstructor-aliases
thread_local_init_function_pointers
attiny402
S_THREAD_LOCAL_INIT_FUNCTION_POINTERS
__builtin_HEXAGON_V6_vavguwrnd_128B
S_INIT_FUNC_OFFSETS
await_ready
pure_instructions
__builtin_HEXAGON_V6_vgathermh
S_ATTR_PURE_INSTRUCTIONS
attiny404
no_toc
__builtin_HEXAGON_V6_vgathermhq
S_ATTR_NO_TOC
await_resume
strip_static_syms
-fno-strict-overflow
S_ATTR_STRIP_STATIC_SYMS
attiny406
no_dead_strip
vv*V64biiV32i
S_ATTR_NO_DEAD_STRIP
coroutine_handle
live_support
__builtin_HEXAGON_V6_vgathermw_128B
S_ATTR_LIVE_SUPPORT
attiny412
self_modifying_code
V16iV16iLLi
S_ATTR_SELF_MODIFYING_CODE
__hipPushCallConfiguration
S_ATTR_DEBUG
-mcpu=?
S_ATTR_SOME_INSTRUCTIONS
attiny414
S_ATTR_EXT_RELOC
V16iV16iV16iLLi
S_ATTR_LOC_RELOC
__cudaPushCallConfiguration
.csect 
__builtin_HEXAGON_V6_vmpauhuhsat_128B
Unhandled storage-mapping class for .text csect
attiny416
__builtin_HEXAGON_V6_vmpyh_acc_128B
Unhandled storage-mapping class for .tdata csect.
typename 
.toc
.dwsect 
V16iV64b
0x%x
static 
Printing for this SectionKind is unimplemented.
__builtin_HEXAGON_V6_vprefixqh_128B
  int 
.seh_ directive must appear within an active frame
viiV64iV32i
Starting a function before ending the previous one!
Chained unwind areas can't have handlers!
Don't treat control flow paths that fall off the end of a non-void function as unreachable
Don't know what kind of handler this is!
attiny814
frame register and offset can be set at most once
offset is not a multiple of 16
frame offset must be less than or equal to 240
stack allocation size is not a multiple of 8
__builtin_HEXAGON_V6_vscattermwq_128B
-mcrc
EmitRawText called on an MCStreamer that doesn't support it (target backend is likely missing an AsmStreamer implementation)
attiny817
Unfinished frame!
__builtin_HEXAGON_V6_v6mpyhubs10_vxx
__builtin_HEXAGON_V6_vadd_qf16_mix
__builtin_HEXAGON_V6_vadd_qf16_mix_128B
__builtin_HEXAGON_V6_vadd_qf32
__builtin_HEXAGON_V6_vadd_qf32_mix
__builtin_HEXAGON_V6_vadd_qf32_mix_128B
__builtin_HEXAGON_V6_vadd_sf
__builtin_HEXAGON_V6_vadd_sf_hf
__builtin_HEXAGON_V6_vadd_sf_hf_128B
__builtin_HEXAGON_V6_vadd_sf_sf
__builtin_HEXAGON_V6_vadd_sf_sf_128B
__builtin_HEXAGON_V6_vassign_fp
__builtin_HEXAGON_V6_vassign_fp_128B
__builtin_HEXAGON_V6_vconv_hf_qf16
atmega1609
__rvv_
__builtin_HEXAGON_V6_vconv_hf_qf16_128B
__builtin_HEXAGON_V6_vconv_hf_qf32
__builtin_HEXAGON_V6_vconv_hf_qf32_128B
__builtin_HEXAGON_V6_vconv_sf_qf32
__builtin_HEXAGON_V6_vcvt_b_hf
__builtin_HEXAGON_V6_vcvt_b_hf_128B
__builtin_HEXAGON_V6_vcvt_h_hf
uint
AXAuditIsQueue
atmega3208
__builtin_HEXAGON_V6_vcvt_h_hf_128B
__builtin_HEXAGON_V6_vcvt_hf_b
__builtin_HEXAGON_V6_vcvt_hf_b_128B
__builtin_HEXAGON_V6_vcvt_hf_h
__builtin_HEXAGON_V6_vcvt_hf_h_128B
__builtin_HEXAGON_V6_vcvt_hf_sf
__builtin_HEXAGON_V6_vcvt_hf_sf_128B
__builtin_HEXAGON_V6_vcvt_hf_ub
__builtin_HEXAGON_V6_vcvt_hf_ub_128B
__builtin_HEXAGON_V6_vcvt_hf_uh
__builtin_HEXAGON_V6_vcvt_hf_uh_128B
__builtin_HEXAGON_V6_vcvt_sf_hf
_tumu
align_val_t
_tamu
__builtin_HEXAGON_V6_vcvt_sf_hf_128B
__builtin_HEXAGON_V6_vcvt_ub_hf
__builtin_HEXAGON_V6_vcvt_ub_hf_128B
__builtin_HEXAGON_V6_vcvt_uh_hf
__builtin_HEXAGON_V6_vcvt_uh_hf_128B
__builtin_HEXAGON_V6_vdmpy_sf_hf
__builtin_HEXAGON_V6_vdmpy_sf_hf_128B
__builtin_HEXAGON_V6_vdmpy_sf_hf_acc
__builtin_HEXAGON_V6_vdmpy_sf_hf_acc_128B
__builtin_HEXAGON_V6_vfmax_hf
__builtin_HEXAGON_V6_vfmax_hf_128B
__builtin_HEXAGON_V6_vfmax_sf
__builtin_HEXAGON_V6_vfmin_hf
__builtin_HEXAGON_V6_vfmin_hf_128B
__builtin_HEXAGON_V6_vfmin_sf
__builtin_HEXAGON_V6_vfneg_hf
__builtin_HEXAGON_V6_vfneg_hf_128B
__builtin_HEXAGON_V6_vfneg_sf
__builtin_HEXAGON_V6_vgthf
__builtin_HEXAGON_V6_vgthf_128B
__builtin_HEXAGON_V6_vgthf_and
__builtin_HEXAGON_V6_vgthf_and_128B
__builtin_HEXAGON_V6_vgthf_or
__builtin_HEXAGON_V6_vgthf_or_128B
__builtin_HEXAGON_V6_vgthf_xor
__builtin_HEXAGON_V6_vgthf_xor_128B
__builtin_HEXAGON_V6_vgtsf
__builtin_HEXAGON_V6_vgtsf_128B
__builtin_HEXAGON_V6_vgtsf_and
_tuma
 #import/#pragma once files.
intptr_t
 #include/#include_next/#import.
__builtin_HEXAGON_V6_vgtsf_and_128B
__builtin_HEXAGON_V6_vgtsf_or
__builtin_HEXAGON_V6_vgtsf_or_128B
__builtin_HEXAGON_V6_vgtsf_xor
    
attiny1607
 #includes skipped due to the multi-include optimization.
__builtin_HEXAGON_V6_vgtsf_xor_128B
__builtin_HEXAGON_V6_vmax_hf
__builtin_HEXAGON_V6_vmax_hf_128B
__builtin_HEXAGON_V6_vmax_sf
__builtin_HEXAGON_V6_vmax_sf_128B
__builtin_HEXAGON_V6_vmin_hf
__builtin_HEXAGON_V6_vmin_hf_128B
__builtin_HEXAGON_V6_vmin_sf
 framework lookups.
attiny1614
Private
__builtin_HEXAGON_V6_vmin_sf_128B
__builtin_HEXAGON_V6_vmpy_hf_hf
__builtin_HEXAGON_V6_vmpy_hf_hf_128B
__builtin_HEXAGON_V6_vmpy_hf_hf_acc
__builtin_HEXAGON_V6_vmpy_hf_hf_acc_128B
__builtin_HEXAGON_V6_vmpy_qf16
__builtin_HEXAGON_V6_vmpy_qf16_128B
__builtin_HEXAGON_V6_vmpy_qf16_hf
__builtin_HEXAGON_V6_vmpy_qf16_mix_hf
__builtin_HEXAGON_V6_vmpy_qf16_mix_hf_128B
__builtin_HEXAGON_V6_vmpy_qf32
__builtin_HEXAGON_V6_vmpy_qf32_128B
__builtin_HEXAGON_V6_vmpy_qf32_hf
__builtin_HEXAGON_V6_vmpy_qf32_hf_128B
__builtin_HEXAGON_V6_vmpy_qf32_mix_hf
__builtin_HEXAGON_V6_vmpy_qf32_qf16
__builtin_HEXAGON_V6_vmpy_qf32_qf16_128B
__builtin_HEXAGON_V6_vmpy_qf32_sf
__builtin_HEXAGON_V6_vmpy_sf_hf
__builtin_HEXAGON_V6_vmpy_sf_hf_128B
__builtin_HEXAGON_V6_vmpy_sf_hf_acc
__builtin_HEXAGON_V6_vmpy_sf_sf
__builtin_HEXAGON_V6_vmpy_sf_sf_128B
__builtin_HEXAGON_V6_vsub_hf
__builtin_HEXAGON_V6_vsub_hf_128B
__builtin_HEXAGON_V6_vsub_hf_hf
__builtin_HEXAGON_V6_vsub_hf_hf_128B
__builtin_HEXAGON_V6_vsub_qf16
Headers/
attiny1616
Frameworks/
Number of framework lookups.
Use DLL debug run-time
NumSubFrameworkLookups
attiny1626
Number of subframework lookups.
__builtin_HEXAGON_V6_vsub_qf16_128B
__builtin_HEXAGON_V6_vsub_qf16_mix
__builtin_HEXAGON_V6_vsub_qf16_mix_128B
__builtin_HEXAGON_V6_vsub_qf32
/System/DriverKit/System/Library/Frameworks
'interrupt'
/usr/lib/gcc
__builtin_HEXAGON_V6_vsub_qf32_128B
__builtin_HEXAGON_V6_vsub_qf32_mix
__builtin_HEXAGON_V6_vsub_qf32_mix_128B
__builtin_HEXAGON_V6_vsub_sf
i686-pc-cygwin
attiny1627
4.7.3
__builtin_HEXAGON_V6_vsub_sf_128B
__builtin_HEXAGON_V6_vsub_sf_hf
__builtin_HEXAGON_V6_vsub_sf_hf_128B
__builtin_HEXAGON_V6_vsub_sf_sf
__builtin_HEXAGON_V6_vsub_sf_sf_128B
__builtin_HEXAGON_V6_vasrvuhubrndsat
V16iV32iV16i
hvxv69
__builtin_HEXAGON_V6_vasrvuhubrndsat_128B
V32iV64iV32i
__builtin_HEXAGON_V6_vasrvuhubsat
__builtin_HEXAGON_V6_vasrvuhubsat_128B
__builtin_HEXAGON_V6_vasrvwuhrndsat
__builtin_HEXAGON_V6_vasrvwuhrndsat_128B
__builtin_HEXAGON_V6_vasrvwuhsat
__builtin_HEXAGON_V6_vasrvwuhsat_128B
__builtin_HEXAGON_V6_vmpyuhvs
__builtin_HEXAGON_V6_vmpyuhvs_128B
hvxv
4.5.3
-ffixed-d3
4.3.4
Select the container format for clang modules and PCH. Supported options are 'raw' and 'obj'.
4.3.2
attiny3216
/usr/include/c++/5.0
Set endian conversion of data for unformatted files
/usr/gnu/include/c++/4.4.3
-fcrash-diagnostics
/include/c++
-fcuda-short-ptr
/include/c++/backward
attiny3217
../../..
Reserve the d3 register (M68k only)
/boot/system/non-packaged/develop/headers
/usr/avr
/boot/system/develop/headers/os
/boot/system/develop/headers/os/app
vcmn_err
/boot/system/develop/headers/os/arch
-mdefault-build-attributes
/boot/system/develop/headers/os/device
/boot/system/develop/headers/os/drivers
/boot/system/develop/headers/os/game
kprintf
/boot/system/develop/headers/os/interface
/boot/system/develop/headers/os/kernel
freebsd_kprintf
/boot/system/develop/headers/os/locale
/boot/system/develop/headers/os/mail
../lib/clang-runtimes
/boot/system/develop/headers/os/media
$r13
/boot/system/develop/headers/os/midi
os_log
/boot/system/develop/headers/os/midi2
$r17
/boot/system/develop/headers/os/net
-lsupc++
/boot/system/develop/headers/os/opengl
$r21
/boot/system/develop/headers/os/storage
gcc_cdiag
/boot/system/develop/headers/os/support
-mdefault-visibility-export-mapping=
/boot/system/develop/headers/os/translation
-lunwind
/boot/system/develop/headers/os/add-ons/graphics
$r29
/boot/system/develop/headers/os/add-ons/input_server
gcc_tdiag
/boot/system/develop/headers/os/add-ons/mail_daemon
/boot/system/develop/headers/os/add-ons/registrar
+march=rv64imac
/boot/system/develop/headers/os/add-ons/screen_saver
/boot/system/develop/headers/os/add-ons/tracker
NSMutableString
/boot/system/develop/headers/os/be_apps/Deskbar
Directly create compilation output files. This may lead to incorrect incremental builds if the compiler crashes
/boot/system/develop/headers/os/be_apps/NetPositive
+mabi=lp64
/boot/system/develop/headers/os/be_apps/Tracker
/boot/system/develop/headers/3rdparty
string type
/boot/system/develop/headers/bsd
/boot/system/develop/headers/glibc
/rv64imafdc/lp64d
/boot/system/develop/headers/posix
/boot/system/develop/headers
functions, classes, or enumerations
/usr/include/w32api
none,explicit,all
SCE_ORBIS_SDK_DIR
+march=rv64imafdc
SCE_PROSPERO_SDK_DIR
/target/include
__declspec(thread)
/target/include_common
$fa3
removed duplicate -I C++ includes
+mabi=lp64d
changed -I to -isystem for C include
$fa7
reordered C includes after C++ includes
Compute
#include "..." search starts here:
-fno-test-coverage
#include <...> search starts here:
rv64imafdc
 (framework directory)
$ft7
 (headermap)
memtag
End of search list.
$ft11
ignoring duplicate directory "
rv64imac
  as it is a non-system directory that duplicates 
$ft15
a system directory
zero_argument
-mdll
ident
march=rv64imac
Build a C++20 Header Unit from a header that should be found in the user (fmodule-header=user) or system (fmodule-header=system) search path.
<<<<
sealed
-m:e
 sealed
-a:0:16-S16
 final
__mc68000
lp64
__mc68010__
 const &
mc68030
mabi=lp64
clang,msvc,vi,sarif,SARIF
-mdouble=
lp64d
MSP430
__MSP430__
Allocation failed
__builtin_mips_addu_qb
MacroInfo 
std::
 builtin
__builtin_mips_subu_s_qb
 disabled
mabi=lp64d
 allow_redefinitions_without_warning
__builtin_mips_subq_ph
 warn_if_unused
using 
 header_guard
Force double to be <n> bits
    #define <macro>
+march=rv32imac
DefMacroDirective
__builtin_mips_subq_s_w
UndefMacroDirective
constexpr auto 
VisibilityMacroDirective
__builtin_mips_raddu_w_qb
 from_pch
+mabi=ilp32
.framework
__builtin_mips_absq_s_w
<global>
tuple_size
<private>
/rv32i/ilp32
config_macros
iV2s
conflict
exclude
__builtin_mips_precequ_ph_qbr
export_as
+march=rv32i
contents
__builtin_mips_preceu_ph_qbr
framework 
__builtin_objc_memmove_collectable
module 
-fno-tls-model
mtime
/rv32im/ilp32
framework module
__builtin_mips_shll_s_ph
exhaustive
extern_c
__builtin_mips_shra_r_w
no_undeclared_includes
+march=rv32im
swift_infer_import_as_member
__builtin_mips_muleu_s_ph_qbr
_ExtInt
_Generic
-mdsp
_Thread_local
/rv32iac/ilp32
co_yield
__builtin_mips_maq_s_w_phr
typeof_unqual
category
_Sat
__builtin_mips_multu
_Decimal32
+march=rv32iac
_Decimal64
__builtin_mips_dpau_h_qbr
_Decimal128
__contravariant
__attribute
-fno-tracer
__builtin_choose_expr
/rv32imafc/ilp32f
__builtin_offsetof
vV4ScV4Sc
__builtin_FILE
forwardInvocation
__builtin_FUNCTION
iV4ScV4Sc
__builtin_LINE
+march=rv32imafc
__builtin_COLUMN
vV2sV2s
__builtin_source_location
length
__builtin_types_compatible_p
__builtin_va_arg
+mabi=ilp32f
__extension__
__builtin_mips_extpdp
__label__
iOS 9
__thread
__builtin_mips_insv
__FUNCDNAME__
rv32i
__FUNCSIG__
V4Sci
L__FUNCTION__
throw()
L__FUNCSIG__
-fmodule-header
__is_trivially_destructible
rv32im
__has_nothrow_move_assign
iv*i
__has_trivial_move_assign
noexcept(
__has_trivial_move_constructor
V4ScV4Sc
__has_nothrow_assign
rv32imafc
__has_nothrow_copy
__builtin_mips_addqh_r_w
__has_nothrow_constructor
NULL
__has_trivial_assign
__has_trivial_copy
march=rv32i
__has_trivial_constructor
__builtin_mips_cmpgdu_lt_qb
__has_trivial_destructor
object_getClass
__has_virtual_destructor
__builtin_mips_dpaqx_s_w_ph
__is_literal_type
march=rv32im
__has_unique_object_representations
__builtin_mips_dpsqx_s_w_ph
__is_trivially_relocatable
__builtin_trap
__reference_binds_to_temporary
The trap function specified by -ftrap-function never returns
__array_rank
rv32iac
__array_extent
__builtin_mips_precr_qb_ph
__is_same_as
(void *)0
__module_private__
__builtin_mips_prepend
__builtin_ptrauth_type_discriminator
march=rv32iac
__builtin_ptrauth_struct_key
__builtin_mips_subqh_ph
__builtin_ptrauth_struct_disc
greater
__builtin_xnu_type_signature
-meabi
__builtin_xnu_type_summary
rv32imac
__builtin_xnu_types_compatible
__builtin_msa_add_a_b
__builtin_tmo_get_type_data
static_cast<void>(
__builtin_tmo_get_type_descriptor
__builtin_msa_add_a_w
__builtin_astype
march=rv32imac
vec_step
__builtin_msa_adds_a_b
image1d_t
object_setClass
image1d_array_t
Build a C++20 Header Unit from a header.
image1d_buffer_t
march=rv32imafc
image2d_t
__builtin_msa_adds_u_b
image2d_array_t
BOOL
image2d_depth_t
__builtin_msa_adds_u_w
image2d_array_depth_t
ilp32
image2d_msaa_t
__builtin_msa_addv_b
image2d_array_msaa_t
image2d_msaa_depth_t
default,4,5,gnu
image2d_array_msaa_depth_t
mabi=ilp32
image3d_t
__builtin_msa_addvi_b
pipe
__builtin_omp_required_simd_align
__builtin_msa_addvi_w
__bool
ilp32f
__bridge_retain
__builtin_msa_and_v
__alignof__
isEqual
__asm
-fno-tree-dce
__attribute__
mabi=ilp32f
__complex
__builtin_msa_asub_u_h
__complex__
__const__
__builtin_msa_ave_s_h
__decltype
baremetal::Linker
__imag__
__builtin_msa_ave_u_h
__inline
1 << 
__inline__
-membedded-data
__nullptr
baremetal
__real__
__builtin_msa_aver_u_h
__restrict__
0x2 ^ 
__signed
__builtin_msa_bclr_h
__signed__
__typeof
__builtin_msa_bclri_h
__typeof__
Reserve the d4 register (M68k only)
__volatile
-fmodule-implementation-of
__volatile__
openmp_wrappers
__w64
__builtin_msa_binsl_h
__uuidof
__imag
__try
__builtin_msa_binsl_d
__finally
__clang_openmp_device_functions.h
__int8
__builtin_msa_binsli_h
__int16
__impl
__builtin_alignof
-menable-experimental-extensions
_asm
-pch-through-hdrstop-
_alignof
__builtin_msa_binsr_w
_declspec
_M_function_name
_finally
__builtin_msa_binsri_w
_forceinline
create
_inline
__builtin_msa_bmz_v
_int8
_M_column
_int16
-fno-tree-slp-vectorize
_int32
_int64
__builtin_msa_bnegi_w
_leave
'size_t'
_multiple_inheritance
__builtin_msa_bnz_h
_ptr32
.dummy
_ptr64
__builtin_msa_bnz_d
_restrict
default delete
_try
-menable-no-infs
_unaligned
_uptr
__builtin_msa_bset_d
_uuidof
__builtin_operator_new
_virtual_inheritance
__builtin_msa_bseti_d
_w64
CPATH
__builtin_convertvector
__builtin_msa_bz_d
__char16_t
, this
__char32_t
-fmodule-map-file-home-is-cwd
__unknown_anytype
-c-isystem
excluded
__builtin_msa_ceqi_h
Darwin
__builtin_msa_ceqi_d
IOKit
C_INCLUDE_PATH
__builtin_msa_cle_s_h
__public_macro
__private_macro
-menable-no-nans
_ATFILE_SOURCE
-cxx-isystem
_BSD_SOURCE
V4SiV4UiV4Ui
_CRT_NONSTDC_NO_WARNINGS
stringWithUTF8String
_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES
__builtin_msa_clei_s_h
_CRT_SECURE_NO_WARNINGS
CPLUS_INCLUDE_PATH
_FILE_OFFSET_BITS
V16ScV16UcIUi
_FORTIFY_SOURCE
objCType
_GLIBCXX_ASSERTIONS
-fno-tree-vectorizer-verbose
_GLIBCXX_CONCEPT_CHECKS
-objc-isystem
_GLIBCXX_DEBUG
__builtin_msa_clt_s_h
_GLIBCXX_DEBUG_PEDANTIC
_GLIBCXX_PARALLEL
__builtin_msa_clt_u_h
_GLIBCXX_PARALLEL_ASSERTIONS
OBJC_INCLUDE_PATH
_GLIBCXX_SANITIZE_VECTOR
__builtin_msa_clti_s_h
_GLIBCXX_USE_CXX11_ABI
keys
_GLIBCXX_USE_DEPRECATED
-menable-unsafe-fp-math
_GNU_SOURCE
-objcxx-isystem
_ISOC11_SOURCE
iV16ScIUi
_ISOC95_SOURCE
respondsToSelector
_ISOC99_SOURCE
iV4SiIUi
_LARGEFILE64_SOURCE
OBJCPLUS_INCLUDE_PATH
_POSIX_C_SOURCE
iV16UcIUi
_REENTRANT
-ffixed-d5
_SVID_SOURCE
Use the current working directory as the home directory of module maps specified by -fmodule-map-file=<FILE>
_THREAD_SAFE
SOURCE_DATE_EPOCH
_XOPEN_SOURCE
vIii
_XOPEN_SOURCE_EXTENDED
CFBridgingRetain
__STDCPP_WANT_MATH_SPEC_FUNCS__
__builtin_msa_div_s_d
__STDC_FORMAT_MACROS
-source-date-epoch
boost
__builtin_msa_div_u_d
assert.h
CFBridgingRetain 
complex.h
-menqcmd
ctype.h
-arm-global-merge=false
errno.h
V8UsV16UcV16Uc
fenv.h
float.h
V2ULLiV4UiV4Ui
inttypes.h
-arm-global-merge=true
iso646.h
V4SiV4SiV8SsV8Ss
limits.h
locale.h
-fno-tree-vrp
math.h
-aarch64-enable-global-merge=false
signal.h
V2ULLiV2ULLiV4UiV4Ui
stdalign.h
L'\0'
stdarg.h
__builtin_msa_dpsub_u_h
stdatomic.h
-aarch64-enable-global-merge=true
stdbool.h
V4fV4fV4f
stddef.h
U'\0'
stdint.h
-mexec-model=
stdlib.h
scalable
stdnoreturn.h
__builtin_msa_fceq_d
string.h
Addressing Mode
tgmath.h
V2LLiV2d
threads.h
-mno-ldc1-sdc1
time.h
__builtin_msa_fclt_d
uchar.h
wchar.h
-fmodule-map-file=
wctype.h
-mno-check-zero-division
cassert
__builtin_msa_fcule_d
ccomplex
rbegin
cctype
__builtin_msa_fcun_d
cerrno
-mfix4300
cfenv
__builtin_msa_fdiv_d
cfloat
crbegin
cinttypes
command,reactor
ciso646
-mips-ssection-threshold=
climits
V2dV2dV2LLi
clocale
cend
csetjmp
V2dV4f
csignal
cstdalign
V4fV4Si
cstdarg
c_str
cstdbool
Do not process trigraph sequences
cstddef
-mgpopt
cstdint
V4fV8Ss
cstdio
equal_range
cstring
__builtin_msa_ffqr_d
ctgmath
-mlocal-sdata=1
ctime
V8Ssi
cuchar
upper_bound
cwchar
Disallow generation of data access to code sections (ARM only)
cwctype
-mlocal-sdata=0
algorithm
V2dV2d
fstream
back
functional
V2dV2dV2dV2d
locale
-mextern-sdata=1
scoped_allocator
-fdiagnostics-hotness-threshold=
tuple
Reserve the d5 register (M68k only)
type_traits
Load this module map file
bitset
-mextern-sdata=0
shared_mutex
__builtin_msa_fmul_d
chrono
static_cast<
iomanip
__builtin_msa_frcp_d
sstream
-membedded-data=1
typeinfo
__builtin_msa_fsaf_d
codecvt
'this'
complex
-mextern-sdata
iosfwd
-membedded-data=0
numeric
__builtin_msa_fsne_d
stdexcept
lookup results for 
condition_variable
__builtin_msa_fsqrt_d
iostream
-mips-compact-branches=
ostream
__builtin_msa_fsueq_d
streambuf
[...]
utility
Disable use of typed variants of C++ new() and delete()
istream
-mips-jalr-reloc=0
exception
__builtin_msa_fsune_d
strstream
__type_pack_element
limits
V2SLLiV2d
ratio
elfv2
system_error
V2ULLiV2d
aio.h
arpa/inet.h
-mf16c
cpio.h
elfv1
dirent.h
__builtin_msa_ftrunc_u_d
dlfcn.h
fcntl.h
__builtin_msa_hadd_u_h
fmtmsg.h
ibmlongdouble
fnmatch.h
__builtin_msa_hsub_s_w
ftw.h
glob.h
-fmodule-maps
grp.h
altivec
iconv.h
__builtin_msa_ilvev_d
langinfo.h
libgen.h
__builtin_msa_ilvl_d
monetary.h
-mpacked-stack -mbackchain -mhard-float
mqueue.h
__builtin_msa_ilvod_d
ndbm.h
net/if.h
-mfentry
netdb.h
-x86-asm-syntax=
netinet/in.h
V8SsV8SsIUii
netinet/tcp.h
atomic_flag_test_and_set_explicit
nl_types.h
V2SLLiV2SLLiIUiLLi
poll.h
-x86-asm-syntax=intel
pthread.h
V8SsV8SsIUiV8Ss
pwd.h
ub_group_clustered_reduce_logical_or
regex.h
Disable Typed Memory Operations call site rewriting
sched.h
-mstack-alignment=4
search.h
V8Ssv*Ii
semaphore.h
tomic_compare_exchange_strong_explicit
spawn.h
V2SLLiv*Ii
strings.h
-Wreturn-type
stropts.h
V16cIi
sys/ipc.h
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_load_store __opencl_c_ext_fp16_local_atomic_load_store
sys/mman.h
-mfix-and-continue
sys/msg.h
-hexagon-small-data-threshold=
sys/resource.h
V8SsV8SsV8SsV8Ss
sys/select.h
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_add
sys/sem.h
__builtin_msa_maddr_q_w
sys/shm.h
-enable-hexagon-ieee-rnd-near
sys/socket.h
__builtin_msa_maddv_w
sys/stat.h
-ffixed-d6
sys/statvfs.h
-fmodule-name=
sys/time.h
-machine-sink-split=0
sys/times.h
__builtin_msa_max_s_h
sys/types.h
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_load_store
sys/uio.h
__builtin_msa_max_u_h
sys/un.h
{ "directory": "
sys/utsname.h
V16ScV16ScIi
sys/wait.h
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_add __opencl_c_ext_fp32_global_atomic_add
syslog.h
Work around VLLDM erratum CVE-2021-35465 (ARM only)
tar.h
, "file": "
termios.h
V16UcV16UcIi
trace.h
cl_ext_float_atomics __opencl_c_ext_fp32_global_atomic_add
ulimit.h
V4UiV4UiIi
unistd.h
, "output": "
utime.h
__builtin_msa_min_a_h
utmpx.h
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_add
wordexp.h
-fno-underscoring
'defined'
, "arguments": ["
 to 
__builtin_msa_min_u_h
MacroState 
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_add __opencl_c_ext_fp64_global_atomic_add
 ambiguous
__builtin_msa_mini_s_h
 overrides
 ModuleMacro 
__builtin_msa_mini_u_h
 undef
cl_ext_float_atomics __opencl_c_ext_fp64_global_atomic_add
 active
Workaround Cortex-A53 erratum 835769 (AArch64 only)
 overridden
__LINE__
__builtin_msa_mod_u_h
__FILE__
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_add
__DATE__
V16ScV16Sc
__TIME__
, "-o", "
__COUNTER__
__builtin_msa_msubr_q_w
_Pragma
cl_khr_extended_bit_ops
__FLT_EVAL_METHOD__
Specify the name of the module to build
__has_cpp_attribute
--target=
__BASE_FILE__
__builtin_msa_mulr_q_w
__INCLUDE_LEVEL__
cl_khr_subgroup_clustered_reduce
__TIMESTAMP__
__builtin_msa_mulv_d
__identifier
"]},
__pragma
__builtin_msa_nloc_w
__FILE_NAME__
cl_khr_subgroup_non_uniform_arithmetic
__has_feature
Work around Cortex-A57 Erratum 1742098 (ARM only)
__has_extension
.%%%%.json
__has_builtin
__builtin_msa_nor_v
__has_attribute
cl_khr_subgroup_shuffle
__has_c_attribute
__builtin_msa_ori_b
__has_declspec_attribute
CLANG_MODULE_CACHE_PATH
__has_include
__builtin_msa_pckev_d
__has_include_next
__opencl_subgroup_builtins
__has_warning
-fno-unique-internal-linkage-names
__is_identifier
clang
__is_target_arch
__builtin_msa_pcnt_d
__is_target_vendor
__opencl_c_work_group_collective_functions
__is_target_os
V8SsV8SsIUi
__is_target_environment
extract-api
__has_target_variant
V2SLLiV2SLLiIUi
__is_target_variant_os
__opencl_c_integer_dot_product_input_4x8bit_packed
__is_target_variant_environment
Work around Cortex-A72 Erratum 1655431 (ARM only)
__building_module
C++ for IAMCU
__MODULE__
__builtin_msa_sld_b
??? ??? ?? ??:??:?? ????
__opencl_c_generic_address_space __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
__builtin_msa_sld_w
-cc1depscan
-fdebug-pre-fir-tree
Reserve the d6 register (M68k only)
-fmodule-private
-cc1-args
__builtin_msa_sll_b
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_load_store __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
__builtin_msa_slli_b
-target-sdk-version=
__builtin_msa_splat_b
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_add __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
"%s %2d %4d"
-mfloat-abi=
??? ?? ????
-sycl-std=2020
"%02d:%02d:%02d"
__builtin_msa_splati_b
??:??:??
cl_ext_float_atomics __opencl_c_ext_fp32_global_atomic_add __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
assume_nonnull
__builtin_msa_sra_b
attribute_availability_with_message
-Wspir-compat
attribute_availability_app_extension
__builtin_msa_srai_b
attribute_availability_with_version_underscores
cl_ext_float_atomics __opencl_c_ext_fp64_global_atomic_add __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
attribute_availability_with_strict
Don't use unique names for text and data sections
attribute_availability_with_replacement
-analyze
attribute_availability_in_templates
__builtin_msa_srari_b
attribute_cf_returns_not_retained
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_min_max __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
attribute_cf_returns_on_parameters
__builtin_msa_srl_b
attribute_deprecated_with_message
-migrate
attribute_deprecated_with_replacement
__builtin_msa_srli_b
attribute_ns_returns_not_retained
cl_ext_float_atomics __opencl_c_ext_fp32_global_atomic_min_max __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
attribute_unavailable_with_message
-mfloat-abi
attribute_symbol_metadata_footnote
-Eonly
ptrauth_qualifier_authentication_mode
__builtin_msa_srlri_b
ptrauth_restricted_intptr_qualifier
cl_ext_float_atomics __opencl_c_ext_fp64_global_atomic_min_max __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
ptrauth_vtable_pointer_address_discrimination
__builtin_msa_st_b
ptrauth_vtable_pointer_type_discrimination
ptrauth_member_function_pointer_type_discrimination
__builtin_msa_st_w
ptrauth_function_pointer_type_discrimination
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_load_store __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
objc_default_synthesize_properties
-fmodule-related-to-pch
arc_cf_code_audited
-fdirectives-only
cxx_decltype_incomplete_return_types
__builtin_msa_subs_s_w
cxx_default_function_template_args
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_add __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
cxx_reference_qualified_functions
__builtin_msa_subs_u_w
pragma_clang_attribute_namespaces
-emit-obj
pragma_clang_attribute_external_declaration
__builtin_msa_subsus_u_h
statement_attributes_with_gnu_syntax
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_add __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
cxx_attributes_on_using_declarations
-mfloat128
__builtin_unsafe_forge_bidi_indexable
-emit-header-module
__builtin_unsafe_forge_terminated_by
__builtin_msa_subsuu_s_w
__builtin_get_pointer_lower_bound
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_add __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
__builtin_get_pointer_upper_bound
__builtin_msa_subv_w
'__has_warning'
-emit-module-interface
unknown-unknown-
__builtin_msa_subvi_w
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_min_max __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
clang
-fno-unroll-all-loops
pragma hdrstop
-emit-header-unit
__builtin_msa_vshf_d
region
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_min_max __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
endregion
mips3
pragma once
-emit-pch
pragma message
_MIPSEB
pragma warning
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_min_max __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
pragma error
-mfma
system_header
-verify-pch
dependency
__mips64
diagnostic
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_load_store __opencl_c_ext_fp16_local_atomic_load_store __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
pragma diagnostic
__mips_o32
crash
-extract-api
pragma crash
_ABIN32
#pragma clang __debug llvm_fatal_error
-ffixed-d7
 imported 
Mark module as related to a PCH
via pragma 
-emit-llvm
__mips_fpr
pragma clang __debug captured
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_add __opencl_c_ext_fp32_global_atomic_add __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
 visible 
__mips_nan2008
#pragma clang deprecated
-emit-llvm-bc
restrict_expansion
__mips_dspr2
#pragma clang restrict_expansion
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_add __opencl_c_ext_fp64_global_atomic_add __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
execution_character_set
Use 32-bit pointers for accessing const/local/shared address spaces
pragma execution_character_set
-emit-interface-stubs
UTF-8
Dump the pre-FIR tree
__VA_OPT__
-mfp64
*** Preprocessor Stats:
-interface-stub-version=
__nvvm_read_ptx_sreg_tid_x
__nvvm_read_ptx_sreg_tid_y
 #define.
__nvvm_read_ptx_sreg_tid_w
 #undef.
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_min_max __opencl_c_ext_fp32_global_atomic_min_max __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
  #include/#include_next/#import:
__nvvm_read_ptx_sreg_ntid_w
 source files entered.
 max include stack depth
__nvvm_read_ptx_sreg_ctaid_w
 #if/#ifndef/#ifdef.
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_min_max __opencl_c_ext_fp64_global_atomic_min_max __opencl_c_atomic_order_seq_cst __opencl_c_atomic_scope_device
 #else/#elif/#elifdef/#elifndef.
__nvvm_read_ptx_sreg_nctaid_w
 #endif.
-module-file-info
 #pragma.
__nvvm_read_ptx_sreg_smid
 #if/#ifndef#ifdef regions skipped
clk_profiling_info
 obj/fn/builtin macros expanded, 
Use 64-bit floating point registers (MIPS only)
 on the fast path.
-rewrite-objc
 token paste (##) operations performed, 
__nvvm_read_ptx_sreg_clock
Preprocessor Memory: 
memory_order
B total
__nvvm_read_ptx_sreg_pm1
  BumpPtr: 
-fno-gpu-rdc
  Macro Expanded Tokens: 
__nvvm_fmin_f16
  Predefines Buffer: 
objc_super
  Macros: 
-fno-unsafe-loop-optimizations
  #pragma push_macro Info: 
-flto=
  Poison Reasons: 
__nvvm_fmin_nan_xorsign_abs_f16
  Comment Handlers: 
@synthesize 
<scratch space>
__nvvm_fmin_ftz_f16x2
__gnu__
__nvvm_fmin_ftz_xorsign_abs_f16x2
nonatomic, 
_Clang
-mfpmath
clang
-fembed-bitcode=marker
block
ZUiZUiZUi
enum
__attribute__((objc_method_family(none)))
enum_constant
__nvvm_fmin_f
field
-DUNICODE
function
__nvvm_fmin_xorsign_abs_f
function(is_member)
.global_tid.
namespace
-fno-unsafe-math-optimizations
objc_category
-analyzer-config-compatibility-mode=true
objc_implementation
__nvvm_fmax_ftz_nan_f16
objc_interface
.part_id.
objc_method
__nvvm_fmax_ftz_nan_xorsign_abs_f16
objc_method(is_instance)
-mabi=vec-default
objc_property
__nvvm_fmax_ftz_nan_f16x2
objc_protocol
.copy_fn.
record
-mfprnd
record(unless(is_union))
-maix-struct-return
hasType
__nvvm_fmax_nan_xorsign_abs_bf16
hasType(functionType)
.lb.
type_alias
__nvvm_fmax_nan_xorsign_abs_bf16x2
variable
-msvr4-struct-return
variable(is_thread_local)
__nvvm_fmax_ftz_nan_f
variable(is_global)
.st.
variable(is_local)
Specify the module cache path
variable(is_parameter)
-fpcc-struct-return
variable(unless(is_parameter))
__nvvm_mulhi_ll
.reductions.
_clang_arm_mve_strict_polymorphism
__nvvm_mul_rz_ftz_f
xclude_from_explicit_instantiation
-freg-struct-return
bjc_arc_weak_reference_unavailable
__nvvm_mul_rp_ftz_f
lang::consumable_set_state_on_read
.previous.ub.
nu::no_profile_instrument_function
-mfpxx
-fdefault-calling-conv=stdcall
__nvvm_div_approx_ftz_f
scan
not a builtin function
__nvvm_div_rz_ftz_f
__builtin_atan2
-enable-matrix
__nvvm_div_rp_ftz_f
'map' or 'use_device_ptr'
__builtin_atan2f
-fno-unswitch-loops
-mframe-pointer=none
__builtin_atan2l
__nvvm_floor_ftz_f
LdLdLd
'map'
__builtin_atan2f128
__nvvm_ceil_f
LLdLLdLLd
-mframe-pointer=non-leaf
__builtin_abs
__nvvm_fabs_d
.iv.
-mframe-chain=
__builtin_copysign
-mframe-pointer=all
__builtin_copysignf
__nvvm_saturate_f
__builtin_copysignf16
#pragma omp unroll full
__nvvm_ex2_approx_d
__builtin_copysignl
-enable-loop-distribute
__builtin_copysignf128
V2hV2h
__builtin_fabs
.unroll_inner.iv.
-fmodules-codegen
__builtin_fabsf
-loop-distribute-mem
__nvvm_fma_rn_f16
__builtin_fabsl
schedule
LdLd
__nvvm_fma_rn_ftz_sat_f16
__builtin_fabsf16
-extra-vectorizer-passes
V2hV2hV2hV2h
__builtin_fabsf128
.firstprivate.temp
LLdLLd
none,aapcs,aapcs+leaf
__builtin_fmod
-fextend-arguments=64
__builtin_fmodf
__nvvm_fma_rn_relu_bf16
__builtin_fmodf16
.lastprivate.dst
__builtin_fmodl
__nvvm_fma_rn_ftz_f
__builtin_fmodf128
-no-integrated-as
__builtin_frexp
__nvvm_fma_rm_ftz_f
ddi*
.linear.step
-fno-use-ctor-homing
__builtin_frexpf
Structure
ffi*
__nvvm_rcp_rn_ftz_f
__builtin_frexpl
.copyin.dst
LdLdi*
__nvvm_rcp_rm_ftz_f
__builtin_frexpf128
Arguments
LLdLLdi*
__nvvm_rcp_rn_d
__builtin_huge_val
.copyprivate.src
Specify which frame pointers to retain.
-funwind-tables=2
__builtin_huge_valf
__nvvm_sqrt_rz_ftz_f
'source' or 'sink'
__builtin_huge_vall
__nvvm_sqrt_rp_ftz_f
-funwind-tables=1
__builtin_huge_valf16
__nvvm_sqrt_rn_d
-ffixed-form
__builtin_huge_valf128
Generate code for uses of this module that assumes an explicit object file will be built for the module
-aux-target-cpu
__builtin_inf
__nvvm_add_rn_f
__builtin_inff
omp_priv
__builtin_infl
__nvvm_add_rm_f
__builtin_inff16
kernel
__builtin_inff128
__nvvm_add_rz_d
__builtin_labs
omp_event_handle_t
LiLi
-mfsgsbase
-mcmodel=large
__builtin_llabs
__nvvm_d2f_rm
LLiLLi
'scalar', 'aggregate', 'pointer'
__builtin_ldexp
__nvvm_d2i_rz
-treat-scalable-fixed-error-as-warning
__builtin_ldexpf
'alloc', 'from', 'to', 'tofrom', 'firstprivate', 'none', 'default', 'present'
__builtin_ldexpl
-fno-use-cxa-atexit
LdLdi
__builtin_ldexpf128
__nvvm_ui2d_rn
LLdLLdi
omp_allocator_handle_t
__builtin_modf
__nvvm_ui2d_rp
ddd*
please use -maltivec and include altivec.h explicitly
__builtin_modff
__nvvm_f2i_rz
fff*
.start
__builtin_modfl
Replace returns with jumps to ``__x86_return_thunk`` (x86 only, error otherwise)
LdLdLd*
please use -mno-altivec
__builtin_modff128
__nvvm_f2ui_rz
LLdLLdLLd*
.step
__builtin_nan
__nvvm_f2ui_rp
dcC*
-crash-diagnostics-dir=
__nvvm_i2f_rp
__builtin_nanf
Logical
fcC*
-fmodules-debuginfo
__builtin_nanl
CLANG_PROJECT_INDEX_PATH
LdcC*
__nvvm_d2i_hi
__builtin_nanf16
$ompvariant
xcC*
__nvvm_f2ll_rz
__builtin_nanf128
GCC_TREAT_WARNINGS_AS_ERRORS
LLdcC*
__nvvm_f2ll_rp
__builtin_nans
.omp.ub
__builtin_nansf
-mfxsr
__builtin_nansl
__builtin_nansf16
__nvvm_f2ull_rp_ftz
__builtin_nansf128
.omp.stride
__builtin_powi
__nvvm_d2ll_rm
__builtin_powif
-Wno-error
__builtin_powil
__nvvm_d2ull_rz
__builtin_pow
.omp.comb.ub
__builtin_powf
-fno-use-init-array
__builtin_powf16
-std=c++98
__builtin_powl
fULLi
__builtin_powf128
.capture_expr.
__builtin_acos
__nvvm_ll2d_rn
__builtin_acosf
-std=c89
__builtin_acosl
__nvvm_ull2d_rn
__builtin_acosf128
.task_red.
__builtin_acosh
Write depfile output from -MMD, -MD, -MM, or -M to <file>
__builtin_acoshf
-Wlarge-by-value-copy=64
__builtin_acoshl
__nvvm_ff2bf16x2_rn
__builtin_acoshf128
omp_alloctrait_t
__builtin_asin
__nvvm_ff2bf16x2_rz_relu
__builtin_asinf
-fno-constant-nsnumber-literals
__builtin_asinl
-fdiagnostics-misexpect-tolerance=
__builtin_asinf128
Process source files in fixed form
__builtin_asinh
Generate debug info for types in an object file built from this module and do not generate them elsewhere
__builtin_asinhf
-fno-constant-nsarray-literals
__builtin_asinhl
ZUif
__builtin_asinhf128
objectAtIndexedSubscript
__builtin_atan
__nvvm_bitcast_d2ll
__builtin_atanf
-fno-constant-nsdictionary-literals
__builtin_atanl
__syncthreads
__builtin_atanf128
forKeyedSubscript
__builtin_atanh
Generate code which only uses the general purpose registers (AArch64/x86 only)
__builtin_atanhf
-fconstant-array-class
__builtin_atanhl
__nvvm_shfl_down_i32
__builtin_atanhf128
zve32f
__builtin_cbrt
__nvvm_shfl_up_f32
__builtin_cbrtf
-fconstant-dictionary-class
__builtin_cbrtl
__nvvm_shfl_idx_f32
__builtin_cbrtf128
experimental-zvfh
__builtin_ceil
-fno-use-line-directives
__builtin_ceilf
-fconstant-integer-number-class
__builtin_ceilf16
__nvvm_shfl_sync_bfly_f32
__builtin_ceill
vwaddu_vv
__builtin_ceilf128
__nvvm_vote_any
__builtin_cos
-fconstant-float-number-class
__builtin_cosf
__nvvm_vote_all_sync
__builtin_cosf16
vlse32_v
__builtin_cosh
-mginv
__builtin_coshf
-fconstant-double-number-class
__builtin_coshl
__nvvm_match_any_sync_i64
__builtin_coshf128
vloxseg4ei8_v
__builtin_cosl
__nvvm_match_all_sync_i64p
__builtin_cosf128
__builtin_erf
__nvvm_redux_sync_max
__builtin_erff
vloxseg6ei8_v
__builtin_erfl
-fmodules-decluse
__builtin_erff128
__builtin_erfc
__nvvm_membar_sys
__builtin_erfcf
vlse64_v
__builtin_erfcl
vWi*3i
__builtin_erfcf128
__builtin_exp
vWi*3
__builtin_expf
vloxseg2ei16_v
__builtin_expf16
-mglobal-merge
__builtin_expl
-frandomize-layout-seed=
__builtin_expf128
WiWi*3i
__builtin_exp2
vloxseg4ei16_v
__builtin_exp2f
__nvvm_mbarrier_arrive_drop_noComplete_shared
__builtin_exp2f16
-frandomize-layout-seed-file=
__builtin_exp2l
bWi*3Wi
__builtin_exp2f128
vloxseg6ei16_v
__builtin_expm1
-fno-validate-pch
__builtin_expm1f
-ftype-visibility=default
__builtin_expm1l
__builtin_ptx_read_image2Dff_
__builtin_expm1f128
vloxseg8ei16_v
__builtin_fdim
__builtin_ptx_read_image2Dif_
__builtin_fdimf
-fvisibility=protected
__builtin_fdiml
__builtin_ptx_read_image3Dff_
__builtin_fdimf128
vloxseg3ei32_v
__builtin_floor
-mgpopt
__builtin_floorf
-mignore-xcoff-visibility
__builtin_floorf16
__builtin_ptx_write_image2Di_
__builtin_floorl
vloxseg5ei32_v
__builtin_floorf128
__builtin_ptx_get_image_depthi_
__builtin_fma
-fopenmp
dddd
__builtin_ptx_get_image_channel_orderi_
__builtin_fmaf
-ffixed-line-length-
ffff
Require declaration of modules used within a module
__builtin_fmaf16
-fnoopenmp-use-tls
hhhh
__nvvm_atom_cta_add_gen_l
__builtin_fmal
vsse16_v
LdLdLdLd
__nvvm_atom_sys_add_gen_ll
__builtin_fmaf128
-fopenmp-cuda-mode
LLdLLdLLdLLd
__nvvm_atom_sys_add_gen_f
__builtin_fmax
vloxseg3ei64_v
__builtin_fmaxf
-mguard=
__builtin_fmaxf16
-fopenmp-target-debug
__builtin_fmaxl
__nvvm_atom_xchg_gen_i
__builtin_fmaxf128
vloxseg5ei64_v
__builtin_fmin
__nvvm_atom_cta_xchg_gen_l
__builtin_fminf
-fopenmp-assume-teams-oversubscription
__builtin_fminf16
__nvvm_atom_sys_xchg_gen_ll
__builtin_fminl
vloxseg7ei64_v
__builtin_fminf128
-fno-var-tracking
__builtin_hypot
-fopenmp-assume-threads-oversubscription
__builtin_hypotf
__nvvm_atom_max_gen_l
__builtin_hypotl
vloxseg2ei8_v
__builtin_hypotf128
ULiULiD*ULi
__builtin_ilogb
-ftrapv-handler
__nvvm_atom_cta_max_gen_ll
__builtin_ilogbf
vluxei64_v
none,cf,cf-nochecks
__builtin_ilogbl
-fwrapv
__nvvm_atom_sys_min_gen_i
__builtin_ilogbf128
vsseg3e8_v
iLLd
__nvvm_atom_min_gen_l
__builtin_lgamma
-mstack-probe-size=0
__builtin_lgammaf
__nvvm_atom_cta_min_gen_ul
__builtin_lgammal
vsseg4e8_v
__builtin_lgammaf128
-fmodules-disable-diagnostic-validation
__builtin_llrint
-arm-restrict-it
LLid
__nvvm_atom_inc_gen_ui
__builtin_llrintf
vsseg6e8_v
LLif
__nvvm_atom_cta_dec_gen_ui
__builtin_llrintl
-arm-default-it
LLiLd
__nvvm_atom_sys_and_gen_i
__builtin_llrintf128
vsseg8e8_v
LLiLLd
Add missing headers to depfile
__builtin_llround
-fcf-protection=
__builtin_llroundf
__nvvm_atom_cta_or_gen_i
__builtin_llroundl
vsseg3e16_v
__builtin_llroundf128
__nvvm_atom_sys_or_gen_l
__builtin_log
SampleUse with PGO options
__builtin_log10
__nvvm_atom_xor_gen_i
__builtin_log10f
vsseg5e16_v
__builtin_log10f16
-fno-vect-cost-model
__builtin_log10l
-fblocks
__builtin_log10f128
__nvvm_atom_sys_xor_gen_ll
__builtin_log1p
vluxei32_v
__builtin_log1pf
__nvvm_atom_sys_cas_gen_i
__builtin_log1pl
-fgnuc-version=
__builtin_log1pf128
__nvvm_atom_sys_cas_gen_l
__builtin_log2
vsseg8e16_v
__builtin_log2f
-mharden-sls=
__builtin_log2f16
-fms-compatibility-version=
__builtin_log2l
ccC*
__builtin_log2f128
vsseg3e32_v
__builtin_logb
iiC*
__builtin_logbf
__builtin_logbl
Prevent misexpect diagnostics from being output if the profile counts are within N% of the expected. 
__builtin_logbf128
-ffixed-line-length=
__builtin_logf
Disable validation of the diagnostic options when loading the module
__builtin_logf16
-std=c11
__builtin_logl
ULiULiC*
__builtin_logf128
vsseg7e32_v
__builtin_lrint
ffC*
__builtin_lrintf
E2cE2cC*
vsseg2e64_v
__builtin_lrintl
-mhreset
LiLd
-std=c17
__builtin_lrintf128
E2iE2iC*
LiLLd
vsseg4e64_v
__builtin_lround
E2LLiE2LLiC*
__builtin_lroundf
-std=c++14
__builtin_lroundl
E4UcE4UcC*
__builtin_lroundf128
vsseg6e64_v
__builtin_nearbyint
-fno-verbose-asm
__builtin_nearbyintf
-std=c++17
__builtin_nearbyintl
E4UiE4UiC*
__builtin_nearbyintf128
vsseg8e64_v
__builtin_nextafter
E2fE2fC*
__builtin_nextafterf
-std=c++20
__builtin_nextafterl
E2dE2dC*
__builtin_nextafterf128
vssseg4e8_v
__builtin_nexttoward
-mhvx-ieee-fp
ddLd
-std=c++2b
__builtin_nexttowardf
__hmma_m16n16k16_ld_b
ffLd
vssseg6e8_v
__builtin_nexttowardl
__hmma_m16n16k16_st_c_f16
__builtin_nexttowardf128
-std=c++11
__builtin_remainder
__hmma_m32n8k16_ld_a
__builtin_remainderf
vssseg8e8_v
__builtin_remainderl
-fmodules-embed-all-files
__builtin_remainderf128
-exception-model=sjlj
__builtin_remquo
__hmma_m8n32k16_ld_b
dddi*
vssseg3e16_v
__builtin_remquof
__hmma_m8n32k16_st_c_f32
fffi*
-exception-model=seh
__builtin_remquol
vf*iC*iC*iC*IiIi
LdLdLdi*
vssseg5e16_v
__builtin_remquof128
-mhvx-length=
LLdLLdLLdi*
-exception-model=dwarf
__builtin_rint
__hmma_m32n8k16_mma_f16f32
__builtin_rintf
vssseg7e16_v
__builtin_rintf16
__hmma_m8n32k16_mma_f16f32
__builtin_rintl
-exception-model=wasm
__builtin_rintf128
__bmma_m8n8k128_ld_c
__builtin_round
vssseg2e32_v
__builtin_roundf
-fno-visibility-from-dllstorageclass
__builtin_roundf16
-fpack-struct=1
__builtin_roundl
__imma_m16n16k16_ld_a_u8
__builtin_roundf128
vssseg4e32_v
__builtin_scalbln
__imma_m16n16k16_mma_s8
ddLi
-fmax-type-align=16
__builtin_scalblnf
__imma_m32n8k16_ld_a_u8
ffLi
vssseg6e32_v
__builtin_scalblnl
64B,128B
LdLdLi
__builtin_scalblnf128
__imma_m8n32k16_ld_a_u8
LLdLLdLi
vssseg8e32_v
__builtin_scalbn
__imma_m8n32k16_mma_s8
__builtin_scalbnf
-fptrauth-intrinsics
__builtin_scalbnl
__imma_m8n8k32_ld_a_u4
__builtin_scalbnf128
Use <value> as character line width in fixed mode
__builtin_sin
Embed the contents of all files read by this compilation into the produced module file.
__builtin_sinf
-fptrauth-calls
__builtin_sinf16
vd*dC*UiIi
__builtin_sinh
vssseg5e64_v
__builtin_sinhf
__dmma_m8n8k4_mma_f64
__builtin_sinhl
-fptrauth-returns
__builtin_sinhf128
__mma_bf16_m16n16k16_mma_f32
__builtin_sinl
vssseg7e64_v
__builtin_sinf128
Enable Hexagon HVX QFloat instructions
__builtin_sqrt
-fptrauth-indirect-gotos
__builtin_sqrtf
__mma_tf32_m16n16k8_ld_b
__builtin_sqrtf16
vsuxseg3ei8_v
__builtin_sqrtl
__nvvm_cp_async_mbarrier_arrive
__builtin_sqrtf128
-fptrauth-auth-traps
__builtin_tan
__nvvm_cp_async_ca_shared_global_4
__builtin_tanf
vsuxseg5ei8_v
__builtin_tanh
Disables -fvisibility-inlines-hidden-static-local-var (this is the default on non-darwin targets)
__builtin_tanhf
-fptrauth-vtable-pointer-address-discrimination
__builtin_tanhl
__nvvm_abs_bf16
__builtin_tanhf128
vsuxseg7ei8_v
__builtin_tanl
__nvvm_neg_bf16
__builtin_tanf128
-fptrauth-vtable-pointer-type-discrimination
__builtin_tgamma
e-i64:64-i128:128-v16:16-v32:32-n16:32:64
__builtin_tgammaf
vsuxseg2ei16_v
__builtin_tgammal
Enable Hexagon Vector eXtensions
__builtin_tgammaf128
-fptrauth-objc-interface-sel
__builtin_trunc
__builtin_truncf
-fdebug-prefix-map=
__builtin_truncl
-fdiagnostics-parseable-fixits
__builtin_truncf128
-fptrauth-soft
__builtin_truncf16
-fno-visibility-inlines-hidden
__builtin_flt_rounds
__APPLE_CC__
__APPLE__
vsuxseg7ei16_v
__builtin_cabs
__DYNAMIC__
vsuxseg8ei16_v
__builtin_cabsf
__ENVIRONMENT_DRIVERKIT_VERSION_MIN_REQUIRED__
-fptrauth-function-pointer-type-discrimination
__builtin_cabsl
__APPLE_SEPOS__
LdXLd
vsuxseg3ei32_v
__builtin_cacos
--mhwdiv=
XdXd
-fptrauth-objc-class-ro
__builtin_cacosf
__MINGW32__
XfXf
vsuxseg5ei32_v
__builtin_cacosh
_CHAR_UNSIGNED
__builtin_cacoshf
-ftyped-memory-operations
__builtin_cacoshl
_M_FP_PRECISE
XLdXLd
vsuxseg7ei32_v
__builtin_cacosl
-fno-wchar
__builtin_carg
utf-8
__builtin_cargf
202004L
__builtin_cargl
vsuxseg2ei64_v
__builtin_casin
Embed the contents of the specified file into the module file being compiled.
__builtin_casinf
-load
__builtin_casinh
Disable C++ builtin type wchar_t
__builtin_casinhf
__le32__
__builtin_casinhl
vsuxseg5ei64_v
__builtin_ppc_popcntb
ULiULi
__builtin_catan
__builtin_catanf
vsuxseg6ei64_v
__builtin_catanh
__builtin_ppc_iospace_eieio
__builtin_catanhf
-finclude-default-header
__builtin_catanhl
__builtin_ppc_sync
__builtin_catanl
vsuxseg8ei64_v
__builtin_ccos
-mhwmult=
__builtin_ccosf
-disable-llvm-optzns
__builtin_ccosl
__builtin_ppc_dcbz
__builtin_ccosh
vloxei8_v
__builtin_ccoshf
__builtin_ppc_frims
__builtin_ccoshl
__builtin_cexp
__builtin_ppc_frips
__builtin_cexpf
vloxei32_v
__builtin_cexpl
-miamcu
__builtin_cimag
__builtin_cimagf
__builtin_ppc_fsqrts
__builtin_cimagl
vsoxseg3ei8_v
__builtin_conj
iLiD*Li*Li
__builtin_conjf
-inline-threshold=
__builtin_conjl
__builtin_ppc_fetch_and_andlp
__builtin_clog
vsoxseg5ei8_v
__builtin_clogf
-fno-web
__builtin_clogl
-fopenmp-is-device
__builtin_cproj
iiD*
__builtin_cprojf
vsoxseg7ei8_v
__builtin_cprojl
__builtin_ppc_stdcx
__builtin_cpow
-fopenmp-host-ir-file-path
XdXdXd
isD*s
__builtin_cpowf
vsoxseg8ei8_v
XfXfXf
-mibt-seal
__builtin_cpowl
-fopenmp-targets=
XLdXLdXLd
__builtin_ppc_trapd
__builtin_creal
vsoxseg3ei16_v
__builtin_crealf
__builtin_ppc_fctid
__builtin_creall
-flto=full
__builtin_csin
__builtin_ppc_fctudz
__builtin_csinf
vsoxseg5ei16_v
__builtin_csinl
-fmodules-hash-content
__builtin_csinh
-fno-whole-program-vtables
__builtin_csinhf
__builtin_ppc_compare_exp_uo
__builtin_csinhl
vsoxseg7ei16_v
__builtin_csqrt
__builtin_ppc_test_data_class
__builtin_csqrtf
-fno-split-lto-unit
__builtin_csqrtl
__builtin_ppc_cmpeqb
__builtin_ctan
vsoxseg2ei32_v
__builtin_ctanf
-mieee-fp
__builtin_ctanl
-fsanitize=cfi
__builtin_ctanh
ULLiULiULi
__builtin_ctanhf
vsoxseg4ei32_v
__builtin_ctanhl
__builtin_ppc_maddhdu
__builtin_complex
-global-isel=1
UiUiUiIUi
vsoxseg6ei32_v
__builtin_isgreater
-fno-whole-program-vtables
-global-isel-abort=2
Fnct
UiUi*
__builtin_isgreaterequal
vsoxseg8ei32_v
__builtin_isless
vUiUs*
__builtin_islessequal
-global-isel=0
__builtin_islessgreater
vULLiULLi*
__builtin_isunordered
vsoxseg3ei64_v
__builtin_fpclassify
-mignore-xcoff-visibility
iiiiii.
AARCH64_ALWAYS_ENABLE_GLOBAL_ISEL
__builtin_isfinite
__builtin_ppc_mtfsfi
__builtin_isinf
vsoxseg5ei64_v
__builtin_isinf_sign
__builtin_ppc_fmsub
__builtin_isnan
-global-isel
__builtin_isnormal
__builtin_ppc_fnmsub
__builtin_signbit
Enable fixed point types
__builtin_signbitf
Enable hashing the content of a module file
__builtin_signbitl
-global-isel-abort=0
__builtin_canonicalize
__builtin_ppc_mfspr
__builtin_canonicalizef
vadd_vx
__builtin_canonicalizef16
vIiULi
__builtin_canonicalizel
-forder-file-instrumentation
__builtin_clzs
LLiLLiLLiCIi
vsub_vx
__builtin_clz
--migrate
-enable-order-file-instrumentation
__builtin_clzl
__builtin_ppc_minfl
iULi
vwaddu_vx
__builtin_clzll
__builtin_ppc_get_timebase
iULLi
+outline-atomics
__builtin_ctzs
__builtin_altivec_vaddubs
__builtin_ctz
vwsubu_vx
__builtin_ctzl
-fno-working-directory
__builtin_ctzll
-outline-atomics
__builtin_ffs
V1ULLLiV1ULLLiV1ULLLi
__builtin_ffsl
vwadd_vx
__builtin_altivec_vaddeuqm_c
__builtin_ffsll
-D__GCC_HAVE_DWARF2_CFI_ASM=1
iLLi
__builtin_altivec_vsububs
__builtin_parity
vwsub_vx
__builtin_parityl
-migrate
__builtin_parityll
__builtin_popcount
__builtin_altivec_vsubuqm
__builtin_popcountl
vwsubu_wv
__builtin_popcountll
__builtin_altivec_vavgsb
__builtin_clrsb
-fomit-frame-pointer
__builtin_clrsbl
__builtin_altivec_vavgsw
__builtin_clrsbll
vwadd_wv
__builtin_bswap16
-fmodules-hash-error-diagnostics
UsUs
clang frontend
__builtin_bswap32
V4SiV4fIi
UZiUZi
vwsub_wv
__builtin_bswap64
__builtin_altivec_dssall
UWiUWi
-fobjc-runtime=
__builtin_bitreverse8
__builtin_altivec_dstst
UcUc
vwcvt_x_x_v
__builtin_bitreverse16
-mimplicit-float
__builtin_bitreverse32
--show-includes
__builtin_bitreverse64
V16cLivC*
__builtin_rotateleft8
vadc_vvm
UcUcUc
__builtin_altivec_vlogefp
__builtin_rotateleft16
/JMC
UsUsUs
__builtin_altivec_vmaddfp
__builtin_rotateleft32
vsbc_vvm
UZiUZiUZi
-fno-xl-pragma-pack
__builtin_rotateleft64
'/Zi', '/Z7'
UWiUWiUWi
V4UiV8UsV8UsV4Ui
__builtin_rotateright8
vmadc_vvm
__builtin_rotateright16
__builtin_altivec_vmsumshs
__builtin_rotateright32
/arch:
__builtin_rotateright64
__builtin_altivec_vmulesh
__builtin_calloc
vmadc_vv
v*zz
-mimplicit-sme
/kernel
__builtin_constant_p
__builtin_altivec_vmulosw
nctu
vmsbc_vvm
__builtin_classify_type
V1SLLLiV2SLLiV2SLLi
__builtin___CFStringMakeConstantString
FC*cC*
Print fix-its in machine parseable form
__builtin___NSStringMakeConstantString
-ffixed-r19
__builtin_va_start
Use a separate module cache for modules compiled with conflicting -Werror options
-fms-memptr-rep=single
__builtin_altivec_vpkuwus
__builtin_va_end
vand_vv
__builtin_altivec_vpkshus
__builtin_va_copy
-fms-memptr-rep=multiple
__builtin_altivec_vpksdss
__builtin_stdarg_start
vxor_vv
__builtin_assume_aligned
(integrated-as) Emit an object file which can be used with an incremental linker
v*vC*z.
-fms-memptr-rep=virtual
__builtin_bcmp
V4iV4iV4iV16Uc
ivC*vC*z
vor_vv
__builtin_bcopy
__builtin_altivec_stvebx
vv*v*z
-fdefault-calling-conv=cdecl
__builtin_bzero
__builtin_altivec_stvewx
vv*z
vsll_vv
__builtin_fprintf
-fno-xray-always-emit-customevents
iP*cC*.
-fdefault-calling-conv=fastcall
Fp:1:
__builtin_altivec_vcmpneb
__builtin_free
vsrl_vv
__builtin_altivec_vcmpnezh
__builtin_malloc
-fdefault-calling-conv=vectorcall
__builtin_altivec_vcmpgtub
__builtin_memchr
vsra_vv
v*vC*iz
Add cs prefix to call and jmp to indirect thunk
__builtin_memcmp
-fdefault-calling-conv=regcall
__builtin_memcpy
__builtin_altivec_vcmpgtuw
v*v*vC*z
vnsrl_wv
__builtin_memcpy_inline
V2LLiV2ULLiV2ULLi
vv*vC*Iz
__builtin_memmove
__builtin_altivec_vcmpgtsq
__builtin_mempcpy
vnsra_wv
__builtin_memset
-fmodules-ignore-macro=
v*v*iz
cf,nochecks
__builtin_memset_inline
iiV1ULLLiV1ULLLi
vv*iIz
vncvt_x_x_w
__builtin_printf
__builtin_altivec_vmaxuh
icC*.
ehcont
Fp:0:
__builtin_altivec_vmaxud
__builtin_stpcpy
vmseq_vv
c*c*cC*
Change indirect jump instructions to inhibit speculation
__builtin_stpncpy
c*c*cC*z
__builtin_altivec_vminsw
__builtin_strcasecmp
vmsne_vv
icC*cC*
__builtin_altivec_vminfp
__builtin_strcat
ehcont-
__builtin_strchr
__builtin_altivec_vrlb
c*cC*i
vmsltu_vv
__builtin_strcmp
-fno-xray-function-index
__builtin_strcpy
__builtin_strcspn
__builtin_altivec_vsel_4si
zcC*cC*
vmslt_vv
__builtin_strdup
__builtin_altivec_vsrab
c*cC*
arm64e
__builtin_strlen
__builtin_altivec_vsro
zcC*
vmsleu_vv
__builtin_strncasecmp
-minvariant-function-descriptors
icC*cC*z
-fptrauth-abi-version=
__builtin_strncat
__builtin_altivec_vsum4shs
__builtin_strncmp
vmsle_vv
__builtin_strncpy
__builtin_altivec_vrfiz
__builtin_strndup
-fptrauth-kernel-abi-version
c*cC*z
V4UiV8s
__builtin_strpbrk
Reserve register r19 (Hexagon only)
c*cC*cC*
Ignore the definition of the given macro when building and loading modules
__builtin_strrchr
-cc1as
__builtin_strspn
__builtin_altivec_vupklsw
__builtin_strstr
vmsgt_vv
__builtin_wcschr
__builtin_altivec_vcmpequb_p
w*wC*w
-filetype
__builtin_wcscmp
__builtin_altivec_vcmpequw_p
iwC*wC*
vmsgeu_vv
__builtin_wcslen
-mios-simulator-version-min=
zwC*
-dwarf-debug-producer
__builtin_wcsncmp
__builtin_altivec_vcmpned_p
iwC*wC*z
vse8_v
__builtin_wmemchr
iiV16UcV16Uc
w*wC*wz
-arm-add-build-attributes
__builtin_wmemcmp
iiV8UsV8Us
__builtin_wmemcpy
vmsgeu_vx
w*w*wC*z
-fno-xray-ignore-loops
__builtin_wmemmove
-aarch64-mark-bti-property
__builtin_realloc
__builtin_altivec_vcmpgtfp_p
v*v*z
vmsge_vx
__builtin_return_address
V2ULLiV16UcV16Uc
v*IUi
-type=
__builtin_extract_return_addr
V2ULLiV2ULLi
v*v*
vminu_vx
__builtin_frame_address
Set iOS deployment target
__builtin___clear_cache
-targets=
vc*c*
__builtin_altivec_crypto_vcipherlast
__builtin_setjmp
vmin_vx
iv**
__builtin_altivec_crypto_vpmsumh
-output=
__builtin_longjmp
__builtin_altivec_vclzh
vv**i
vmaxu_vx
-fmodules-local-submodule-visibility
__builtin_unwind_init
-input=
__builtin_altivec_vctzd
vmax_vx
__builtin_eh_return_data_regno
__builtin_ppc_bcdadd_p
-unbundle
__builtin_snprintf
__builtin_altivec_vctzlsbb
ic*zcC*.
vmul_vx
nFp:2:
-miphonesimulator-version-min=
__builtin_sprintf
-allow-missing-bundles
ic*cC*.
__builtin_altivec_vpopcntd
nFP:1:
vmulh_vx
__builtin_vsnprintf
__builtin_altivec_vslv
ic*zcC*a
file=
nFP:2:
__builtin_altivec_vrlwnm
__builtin_vsprintf
vmulhu_vx
ic*cC*a
-fno-zero-initialized-in-bss
__builtin_thread_pointer
triple=
__builtin_altivec_vextsh2d
__builtin_launder
vsuxei32_v
__builtin_is_constant_evaluated
__builtin_altivec_vextsd2q
arch=
__builtin_get_vtable_pointer
__builtin_altivec_vextracthm
vdivu_vv
__builtin_eh_return
-mips1
vzv*
kind=
__builtin_frob_return_addr
__builtin_altivec_vdivesd
__builtin_dwarf_cfa
vdiv_vv
__builtin_init_dwarf_reg_size_table
__builtin_altivec_vdiveuq
__builtin_dwarf_sp_column
feature=
remap file source paths in debug info
__builtin_extend_pointer
-ffixed-r9
ULLiv*
name visibility rules across submodules of the same top-level module
__builtin_object_size
--image=
zvC*i
__builtin_altivec_vcntmbh
vrem_vv
__builtin_dynamic_object_size
__builtin_altivec_vcntmbd
__builtin___memcpy_chk
--cuda-path=
v*v*vC*zz
__builtin_altivec_mtvsrhm
__builtin___memccpy_chk
vwmul_vv
v*v*vC*izz
-mips2
__builtin___memmove_chk
--opt-level=O
__builtin___mempcpy_chk
__builtin_altivec_vpdepd
__builtin___memset_chk
vwmulu_vv
v*v*izz
__builtin_altivec_vstrihr
__builtin___stpcpy_chk
--host-triple=
__builtin___strcat_chk
iiV16Uc
__builtin___strcpy_chk
vwmulsu_vv
__builtin___strlcat_chk
-fno-zvector
zc*cC*zz
--wrapper-verbose
__builtin___strlcpy_chk
__builtin_altivec_vclrlb
__builtin___strncat_chk
vmacc_vv
c*c*cC*zz
__builtin_altivec_vctzdm
__builtin___strncpy_chk
--device-debug
__builtin___stpncpy_chk
V16UcV16UcUiUi
__builtin___snprintf_chk
vnmsac_vv
ic*zizcC*.
-mips32r2
Fp:4:
--ptxas-args=
__builtin___sprintf_chk
__builtin_altivec_vinsdlx
ic*izcC*.
vnmsac_vx
Fp:3:
V16UcV16UcUiV16Uc
__builtin___vsnprintf_chk
--offload-opt=-pass-remarks=
ic*zizcC*a
__builtin_altivec_vinshvrx
FP:4:
vmadd_vx
__builtin___vsprintf_chk
-fmodules-prune-after=
ic*izcC*a
--offload-opt=-pass-remarks-missed=
FP:3:
__builtin_altivec_vinsw_elt
__builtin___fprintf_chk
vnmsub_vx
iP*icC*.
__builtin_altivec_vextdubvlx
Fp:2:
--offload-opt=-pass-remarks-analysis=
__builtin___printf_chk
V2ULLiV8UsV8UsUi
iicC*.
vwmaccu_vx
__builtin___vfprintf_chk
-mips32r3
iP*icC*a
--save-temps
FP:2:
__builtin_altivec_vrlqmi
__builtin___vprintf_chk
vwmacc_vx
iicC*a
__builtin_vsx_lxvw4x
FP:1:
--device-linker=
__builtin_unpredictable
V4iSLLivC*
__builtin_expect
vwmaccsu_vx
LiLiLi
-fno_pch-validate-input-files-content
__builtin_expect_with_probability
--linker-path=
LiLiLid
__builtin_vsx_lxvl
__builtin_prefetch
vmerge_vvm
vvC*.
vV4iv*ULLi
__builtin_readcyclecounter
clang-linker-wrapper
ULLi
__builtin_vsx_strmb
__builtin_trap
vmv_v_v
-mips32r5
__builtin_debugtrap
/E, /P or /EP
__builtin_unreachable
__builtin_vsx_xvdivdp
__builtin_shufflevector
vmv_v_x
__builtin_convertvector
__builtin_vsx_xvcmpeqdp
__builtin_alloca
-fmacro-prefix-map=
__builtin_alloca_uninitialized
__builtin_vsx_xvcmpeqsp_p
__builtin_alloca_with_align
Reserve the r9 register (ARM only)
v*zIz
Specify the interval (in seconds) after which a module file will be considered unused
__builtin_alloca_with_align_uninitialized
-fcoverage-prefix-map=
__builtin_call_with_static_chain
__builtin_vsx_xvcmpgtsp_p
__builtin_elementwise_abs
vsadd_vx
__builtin_elementwise_max
__builtin_vsx_xvrspi
__builtin_elementwise_min
b-key
__builtin_elementwise_ceil
__builtin_vsx_xvrspiz
__builtin_elementwise_floor
vssubu_vx
__builtin_elementwise_roundeven
-mips32r6
__builtin_elementwise_trunc
-msign-return-address=
__builtin_elementwise_add_sat
__builtin_vsx_xvnmaddasp
__builtin_elementwise_sub_sat
vssub_vx
__builtin_reduce_max
__builtin_vsx_xvresp
__builtin_reduce_min
-msign-return-address-key=
__builtin_reduce_xor
__builtin_vsx_xvsqrtsp
__builtin_reduce_or
vaaddu_vx
__builtin_reduce_and
-fnoopenmp-relocatable-target
__builtin_reduce_add
-Wunaligned-access
__builtin_reduce_mul
__builtin_vsx_xxgenpcvhm
__builtin_matrix_transpose
vaadd_vx
__builtin_vsx_xxgenpcvdm
__builtin_matrix_column_major_load
-aux-target-feature
__builtin_matrix_column_major_store
__builtin_vsx_xviexpsp
__sync_fetch_and_add
vasubu_vx
-mips32
__sync_fetch_and_add_1
darwinpcs
ccD*c.
__builtin_vsx_xvcvdpuxws
__sync_fetch_and_add_2
vasub_vx
ssD*s.
__builtin_vsx_xvcvspuxds
__sync_fetch_and_add_4
iiD*i.
V2dV4Ui
__sync_fetch_and_add_8
vsmul_vx
LLiLLiD*LLi.
<seconds>
__sync_fetch_and_add_16
+use-tcc-in-div
LLLiLLLiD*LLLi.
__builtin_vsx_xvcvsphp
__sync_fetch_and_sub
vssrl_vx
__sync_fetch_and_sub_1
__builtin_vsx_xvcvbf16spn
__sync_fetch_and_sub_2
-use-tcc-in-div
__sync_fetch_and_sub_4
__builtin_vsx_insertword
__sync_fetch_and_sub_8
vssra_vx
__sync_fetch_and_sub_16
-mips3
__sync_fetch_and_or
-soft-float
__sync_fetch_and_or_1
__builtin_vsx_xvtlsbb
__sync_fetch_and_or_2
vnclipu_wx
__sync_fetch_and_or_4
__builtin_vsx_xvtdivsp
__sync_fetch_and_or_8
+mips1
__sync_fetch_and_or_16
__builtin_vsx_xvtsqrtsp
__sync_fetch_and_and
vnclip_wx
__sync_fetch_and_and_1
-fnoxray-link-deps
+mips2
__sync_fetch_and_and_2
__builtin_sqrtf128_round_to_odd
__sync_fetch_and_and_4
vfadd_vf
__sync_fetch_and_and_8
__builtin_subf128_round_to_odd
__sync_fetch_and_and_16
+mips3
__sync_fetch_and_xor
LLdLLdLLdLLd
__sync_fetch_and_xor_1
vfsub_vf
__sync_fetch_and_xor_2
-mips4
__sync_fetch_and_xor_4
+mips4
__sync_fetch_and_xor_8
__builtin_ppc_rsqrtd
__sync_fetch_and_xor_16
vfwadd_vv
__sync_fetch_and_nand
__builtin_tend
__sync_fetch_and_nand_1
+mips5
__sync_fetch_and_nand_2
Print source range spans in numeric form
__sync_fetch_and_nand_4
-ffixed-x10
__sync_fetch_and_nand_8
-fmodules-prune-interval=
__sync_fetch_and_nand_16
+mips32
__sync_add_and_fetch
__builtin_tsuspend
__sync_add_and_fetch_1
vfwsub_vf
__sync_add_and_fetch_2
__builtin_get_tfhar
__sync_add_and_fetch_4
+mips32r2
__sync_add_and_fetch_8
__builtin_set_texasru
__sync_add_and_fetch_16
vfwadd_wf
__sync_sub_and_fetch
-mips5
__sync_sub_and_fetch_1
+mips32r3
__sync_sub_and_fetch_2
__builtin_divdeu
__sync_sub_and_fetch_4
vfwsub_wf
__sync_sub_and_fetch_8
__builtin_cfuged
__sync_sub_and_fetch_16
+mips32r5
__sync_or_and_fetch
dLdIi
__sync_or_and_fetch_1
vfmul_vf
__sync_or_and_fetch_2
-fobjc-arc-cxxlib=
__sync_or_and_fetch_4
+mips32r6
__sync_or_and_fetch_8
__builtin_pack_vector_int128
__sync_or_and_fetch_16
vfdiv_vf
__sync_and_and_fetch
__builtin_setflm
__sync_and_and_fetch_1
+mips64
__sync_and_and_fetch_2
__builtin_mma_assemble_pair
__sync_and_and_fetch_4
vfwmul_vv
__sync_and_and_fetch_8
-mips64r2
__sync_and_and_fetch_16
+mips64r2
__sync_xor_and_fetch
__builtin_mma_assemble_acc
__sync_xor_and_fetch_1
vfmacc_vv
__sync_xor_and_fetch_2
__builtin_mma_xxsetaccz
__sync_xor_and_fetch_4
+mips64r3
__sync_xor_and_fetch_8
__builtin_mma_xvi16ger2s
__sync_xor_and_fetch_16
vfnmacc_vv
__sync_nand_and_fetch
Specify the interval (in seconds) between attempts to prune the module cache
__sync_nand_and_fetch_1
+mips64r5
__sync_nand_and_fetch_2
__builtin_mma_pmxvf16ger2
__sync_nand_and_fetch_4
vfmsac_vv
__sync_nand_and_fetch_8
__builtin_mma_xvi8ger4pp
__sync_nand_and_fetch_16
+mips64r6
__sync_bool_compare_and_swap
__builtin_mma_pmxvi4ger8pp
__sync_bool_compare_and_swap_1
vfnmsac_vv
bcD*cc.
-mips64r3
__sync_bool_compare_and_swap_2
-force_cpusubtype_ALL
bsD*ss.
__builtin_mma_xvf16ger2nn
__sync_bool_compare_and_swap_4
vfmadd_vv
biD*ii.
__builtin_mma_pmxvf16ger2nn
__sync_bool_compare_and_swap_8
--compress-debug-sections
bLLiD*LLiLLi.
__builtin_mma_xvf32gernn
__sync_bool_compare_and_swap_16
vfnmadd_vv
bLLLiD*LLLiLLLi.
libc++,libstdc++,none
__sync_val_compare_and_swap
-march
__sync_val_compare_and_swap_1
__builtin_mma_xvf64gernn
ccD*cc.
vfmsub_vv
__sync_val_compare_and_swap_2
__builtin_mma_pmxvf64gernn
ssD*ss.
AS_SECURE_LOG_FILE
__sync_val_compare_and_swap_4
__builtin_mma_xvbf16ger2pn
iiD*ii.
vfnmsub_vv
__sync_val_compare_and_swap_8
-mips64r5
LLiLLiD*LLiLLi.
-arm-implicit-it=
__sync_val_compare_and_swap_16
+direct-move
LLLiLLLiD*LLLiLLLi.
vfwmacc_vv
__sync_lock_test_and_set
+paired-vector-memops
__sync_lock_test_and_set_1
-ffp-model=
__sync_lock_test_and_set_2
+isa-v207-instructions
__sync_lock_test_and_set_4
Reserve the x10 register (AArch64/RISC-V only)
__sync_lock_test_and_set_8
-fmodules-search-all
__sync_lock_test_and_set_16
-Ofast
__sync_lock_release
__ppc64__
__sync_lock_release_1
vfwmsac_vv
vcD*.
__powerpc
__sync_lock_release_2
-ftrapping-math
vsD*.
_CALL_LINUX
__sync_lock_release_4
vfwnmsac_vv
viD*.
-mips64r6
__sync_lock_release_8
-fno-trapping-math
vLLiD*.
__sync_lock_release_16
vfmin_vv
vLLLiD*.
_ARCH_440
__sync_swap
-ffp-model=strict
__sync_swap_1
_ARCH_PWR5
__sync_swap_2
vfmax_vv
__sync_swap_4
Use EH-safe code when synthesizing retains and releases in -fobjc-arc
__sync_swap_8
-fdenormal-fp-math=
__sync_swap_16
_ARCH_A2
__c11_atomic_init
vfsgnj_vv
__c11_atomic_load
10206
__c11_atomic_store
-fdenormal-fp-math-f32=
__c11_atomic_exchange
__VSX__
__c11_atomic_compare_exchange_strong
vfsgnjn_vv
__c11_atomic_compare_exchange_weak
-mips64
__c11_atomic_fetch_add
-ffp-contract=
__c11_atomic_fetch_sub
__PCREL__
__c11_atomic_fetch_and
vfsgnjx_vv
__c11_atomic_fetch_or
rop-protect
__c11_atomic_fetch_xor
-fno-rounding-math
__c11_atomic_fetch_nand
-mmma
__c11_atomic_fetch_max
vfabs_v
__c11_atomic_fetch_min
Search even non-imported modules to resolve references
__c11_atomic_thread_fence
-ffp-contract=fast
-mprivileged
__c11_atomic_signal_fence
vmfeq_vf
__c11_atomic_is_lock_free
efpu2
-ffp-model=fast
__atomic_load
__atomic_load_n
vmfne_vf
__atomic_store
-misel
__atomic_store_n
__atomic_exchange
__atomic_exchange_n
vmflt_vf
__atomic_compare_exchange
__atomic_compare_exchange_n
divd
__atomic_fetch_add
__atomic_fetch_sub
vmfle_vf
__atomic_fetch_and
Synthesize retain and release calls for Objective-C pointers
__atomic_fetch_or
divf
__atomic_fetch_xor
__atomic_fetch_nand
vmfgt_vf
__atomic_add_fetch
__atomic_sub_fetch
divh
__atomic_and_fetch
__atomic_or_fetch
vmfge_vf
__atomic_xor_fetch
Write a compilation database entry per input
__atomic_max_fetch
vec-divd
__atomic_min_fetch
__atomic_nand_fetch
vfmv_v_f
__atomic_test_and_set
spefscr
bvD*i
vec-divf
__atomic_clear
-fcxx-exceptions
vvD*i
-ffixed-x11
__atomic_thread_fence
-fmodules-strict-context-hash
__atomic_signal_fence
vec-divh
__atomic_always_lock_free
bzvCD*
vredmax_vs
__atomic_is_lock_free
__opencl_atomic_init
sqrtd
__opencl_atomic_load
__poppar8
__opencl_atomic_store
vredmin_vs
__opencl_atomic_exchange
-mkl
__opencl_atomic_compare_exchange_strong
sqrtf
__opencl_atomic_compare_exchange_weak
__dcbfl
__opencl_atomic_fetch_add
vredor_vs
__opencl_atomic_fetch_sub
__dcbtst
__opencl_atomic_fetch_and
sqrth
__opencl_atomic_fetch_or
__compare_and_swaplp
__opencl_atomic_fetch_xor
vwredsum_vs
__opencl_atomic_fetch_min
-fobjc-avoid-heapify-local-blocks
__opencl_atomic_fetch_max
vec-sqrtd
__atomic_fetch_min
__fetch_and_swaplp
__atomic_fetch_max
vfredmax_vs
__hip_atomic_load
__lbarx
__hip_atomic_store
vec-sqrtf
__hip_atomic_compare_exchange_weak
__sthcx
__hip_atomic_compare_exchange_strong
vfredusum_vs
__hip_atomic_exchange
-mlimit-float-precision
__hip_atomic_fetch_add
vec-sqrth
__hip_atomic_fetch_and
__fctid
__hip_atomic_fetch_or
vfwredusum_vs
__hip_atomic_fetch_xor
__fctudz
__hip_atomic_fetch_min
c++-cpp-output
__hip_atomic_fetch_max
__setb
__sync_synchronize
vmnot_m
__sync_fetch_and_min
Enable hashing of all compiler options that could impact the semantics of a module in an implicit build
iiD*i
-analyzer-checker=core
__sync_fetch_and_max
__maddld
__sync_fetch_and_umin
vid_v
UiUiD*Ui
__load2r
__sync_fetch_and_umax
-analyzer-checker=apiModeling
__builtin_abort
__store4r
vmv_x
__builtin_index
-mlink-bitcode-file
__builtin_rindex
-analyzer-checker=unix
__warn_memset_zero_len
__insert_exp
vmv_s
_alloca
__fnmadds
__annotation
-analyzer-checker=unix.API
wC*.
__fres
__assume
vfmv_f
-fobjc-call-cxx-cdtors
_bittest
-analyzer-checker=unix.Malloc
UcNiC*Ni
__vncipherlast
_bittestandcomplement
vfmv_s
UcNi*Ni
__vpmsumh
_bittestandreset
-analyzer-checker=unix.MallocSizeof
_bittestandset
__divdeu
_bittest64
vslideup_vx
UcWiC*Wi
-mlink-builtin-bitcode
_bittestandcomplement64
-analyzer-checker=unix.MismatchedDeallocator
UcWi*Wi
__cntlz8
_bittestandreset64
vslide1up_vx
_bittestandset64
__cmplxf
_byteswap_ushort
-analyzer-checker=unix.cstring.BadSizeArg
__builtin_ctzll
stdlib.h
Reserve the x11 register (AArch64/RISC-V only)
_byteswap_ulong
-fmodules-strict-decluse
UNiUNi
-analyzer-checker=unix.cstring.NullArg
_byteswap_uint64
__builtin_fmaf
ULLiULLi
vfslide1down_vf
__debugbreak
__builtin_labs
__exception_code
-analyzer-disable-checker=unix.API
__builtin_popcount
_exception_code
vrgather_vx
__exception_info
-mlink-cuda-bitcode
_exception_info
-analyzer-disable-checker=unix.Vfork
__abnormal_termination
__rdlam
_abnormal_termination
vcompress_vm
__GetExceptionInfo
__dcbtt
-analyzer-checker=osx
zntu
__mfspr
_InterlockedAnd8
vset_v
ccD*c
-fobjc-convert-messages-to-runtime-calls
_InterlockedAnd16
-analyzer-checker=security.insecureAPI.decodeValueOfObjCType
ssD*s
__frips
_InterlockedAnd
vsoxei16_v
NiNiD*Ni
__fsels
_InterlockedCompareExchange8
-analyzer-checker=fuchsia
ccD*cc
__fsqrts
_InterlockedCompareExchange16
vsoxei64_v
ssD*ss
-mlittle-endian
_InterlockedCompareExchange
-analyzer-checker=deadcode
NiNiD*NiNi
__swdiv
_InterlockedCompareExchange64
vle16ff_v
LLiLLiD*LLiLLi
__builtin_maxfe
_InterlockedCompareExchangePointer
-analyzer-checker=cplusplus
v*v*D*v*v*
__builtin_minfl
_InterlockedCompareExchangePointer_nf
vle64ff_v
_InterlockedDecrement16
Like -fmodules-decluse but requires all headers to be in modules
ssD*
-analyzer-checker=security.insecureAPI.UncheckedReturn
_InterlockedDecrement
NiNiD*
vlseg4e8_v
_InterlockedExchange
_InterlockedExchange8
-analyzer-checker=security.insecureAPI.getpw
_InterlockedExchange16
_InterlockedExchangeAdd8
vle8_v
_InterlockedExchangeAdd16
Additional arguments to forward to LLVM's option processing
_InterlockedExchangeAdd
-analyzer-checker=security.insecureAPI.gets
_InterlockedExchangePointer
vs16
v*v*D*v*
vlseg7e8_v
_InterlockedExchangeSub8
vs20
_InterlockedExchangeSub16
-analyzer-checker=security.insecureAPI.mktemp
_InterlockedExchangeSub
vs24
_InterlockedIncrement16
vlseg2e16_v
_InterlockedIncrement
Ignore attribute objc_direct so that direct methods can be tested
_InterlockedOr8
-analyzer-checker=security.insecureAPI.mkstemp
_InterlockedOr16
vs32
_InterlockedOr
vlseg4e16_v
_InterlockedXor8
vs36
_InterlockedXor16
-analyzer-checker=security.insecureAPI.vfork
_InterlockedXor
vs40
_interlockedbittestandreset
vlseg6e16_v
UcNiD*Ni
Extend the -G behaviour to object local data (MIPS)
_interlockedbittestandreset64
-analyzer-checker=nullability.NullPassedToNonnull
UcWiD*Wi
vs48
_interlockedbittestandreset_acq
vlseg8e16_v
_interlockedbittestandreset_nf
vs52
_interlockedbittestandreset_rel
-analyzer-checker=nullability.NullReturnedFromNonnull
_interlockedbittestandset
Enable crash diagnostic reporting (default)
_interlockedbittestandset64
-ffixed-x12
_interlockedbittestandset_acq
-fmodules-ts
_interlockedbittestandset_nf
-analyzer-tidy-checker=bugprone-assert-side-effect
_interlockedbittestandset_rel
Use DWARF base address selection entries in .debug_ranges
ccCD*
__iso_volatile_load16
vlseg6e32_v
ssCD*
__iso_volatile_load32
vlseg7e32_v
iiCD*
__iso_volatile_load64
-analyzer-tidy-checker=bugprone-move-forwarding-reference
LLiLLiCD*
__iso_volatile_store8
vlseg2e64_v
vcD*c
__iso_volatile_store16
-analyzer-output
vsD*s
__iso_volatile_store32
vlseg4e64_v
viD*i
-mlong-double-128
__iso_volatile_store64
-static
vLLiD*LLi
ft11
__noop
vlseg6e64_v
__lzcnt16
__riscv_cmodel_medany
__lzcnt
-fmodule-format=obj
UiUi
__riscv_abi_rve
__lzcnt64
vlseg8e64_v
__popcnt16
Force long double to be 128 bits
__popcnt
-gdwarf-5
__popcnt64
__riscv_flen
_ReturnAddress
vlseg4e8ff_v
_rotl8
__riscv_v_elen
_rotl16
-gpubnames
UsUsUc
__riscv_vector
_rotl
vlseg6e8ff_v
UiUii
legacy,non-legacy,mixed
_lrotl
-ggnu-pubnames
UNiUNii
__builtin_rvv_vwaddu_vv_tu
_rotl64
vlseg8e8ff_v
UWiUWii
__builtin_rvv_vwaddu_vv_tamu
_rotr8
-gsimple-template-names=simple
_rotr16
__builtin_rvv_vluxei8_v_tuma
_rotr
vlseg3e16ff_v
_lrotr
Force long double to be 64 bits
_rotr64
-generate-arange-section
__va_start
__builtin_rvv_vlse32_v_tamu
vc**.
vlseg5e16ff_v
__fastfail
__builtin_rvv_vloxseg3ei8_v_tuma
-generate-type-units
_setjmpex
__builtin_rvv_vloxseg4ei8_v_tu
vlseg7e16ff_v
-fobjc-encode-cxx-class-template-spec
setjmpex.h
-fprofile-instrument=clang
va_start
__builtin_rvv_vloxseg5ei8_v_tuma
vlseg2e32ff_v
stdarg.h
__builtin_rvv_vloxseg6ei8_v_tu
va_end
profile
va_copy
__builtin_rvv_vloxseg6ei8_v_tamu
abort
vlseg4e32ff_v
Force long double to be 80 bits, padded to 128 bits for storage
calloc
-fprofile-instrument=llvm
exit
__builtin_rvv_vlse64_v_tu
_Exit
vlseg6e32ff_v
malloc
__builtin_rvv_vlse64_v_tamu
realloc
-fprofile-instrument=csllvm
free
__builtin_rvv_vloxseg8ei8_v_tuma
strtod
vlseg8e32ff_v
dcC*c**
-fmodules-user-build-path
strtof
default_%m.profraw
fcC*c**
__builtin_rvv_vloxseg2ei16_v_tamu
strtold
vlseg3e64ff_v
LdcC*c**
__builtin_rvv_vloxseg3ei16_v_tuma
strtol
default.profdata
LicC*c**i
__builtin_rvv_vloxseg4ei16_v_tu
strtoll
vlseg5e64ff_v
LLicC*c**i
-mlvi-cfi
strtoul
--coverage
ULicC*c**i
__builtin_rvv_vloxseg5ei16_v_tuma
strtoull
vlseg7e64ff_v
ULLicC*c**i
__builtin_rvv_vloxseg6ei16_v_tu
aligned_alloc
atomic
memcpy
__builtin_rvv_vloxseg6ei16_v_tamu
string.h
vlseg2e8ff_v
memcmp
-fobjc-exceptions
memmove
-fprofile-update=atomic
strcpy
__builtin_rvv_vloxseg8ei16_v_tu
strncpy
vlsseg4e8_v
strcmp
__builtin_rvv_vloxseg8ei16_v_tamu
strncmp
gcno
strcat
__builtin_rvv_vloxseg2ei32_v_tuma
strncat
vlsseg6e8_v
strxfrm
-mlvi-hardening
zc*cC*z
gcda
memchr
__builtin_rvv_vloxseg3ei32_v_tamu
strchr
vlsseg8e8_v
strcspn
__builtin_rvv_vloxseg4ei32_v_tuma
strpbrk
-arcmt-action=check
strrchr
__builtin_rvv_vloxseg5ei32_v_tu
strspn
vlsseg2e8_v
strstr
Specify the module user build path
strtok
-arcmt-action=modify
memset
__builtin_rvv_vloxseg6ei32_v_tuma
strerror
vlsseg4e16_v
__builtin_rvv_vloxseg7ei32_v_tu
strlen
-arcmt-action=migrate
printf
__builtin_rvv_vloxseg7ei32_v_tamu
fp:0:
vlsseg6e16_v
stdio.h
-mlwp
fprintf
-ccc-arcmt-migrate
fp:1:
__builtin_rvv_vsse16_v_m
snprintf
vlsseg8e16_v
fp:2:
__builtin_rvv_vloxseg2ei64_v_tuma
sprintf
environment
vprintf
__builtin_rvv_vloxseg3ei64_v_tu
icC*a
vlsseg3e32_v
fP:0:
-fobjc-gc-only
vfprintf
-fdebug-prefix-map=
iP*cC*a
__builtin_rvv_vloxseg4ei64_v_tuma
fP:1:
vlsseg5e32_v
vsnprintf
__builtin_rvv_vloxseg5ei64_v_tu
fP:2:
vsprintf
__builtin_rvv_vloxseg5ei64_v_tamu
scanf
vlsseg6e32_v
icC*R.
-mmacos-version-min=
fs:0:
tls global
fscanf
__builtin_rvv_vloxseg7ei64_v_tu
iP*RcC*R.
vlsseg8e32_v
fs:1:
__builtin_rvv_vloxseg7ei64_v_tamu
sscanf
-mstack-protector-guard=tls
icC*RcC*R.
__builtin_rvv_vloxseg8ei64_v_tuma
vscanf
-ffixed-x13
icC*Ra
-fmodules-validate-input-files-content
fS:0:
sysreg global
vfscanf
__builtin_rvv_vloxseg2ei8_v_tamu
iP*RcC*Ra
vlsseg5e64_v
fS:1:
__builtin_rvv_vluxei64_v_tu
vsscanf
icC*RcC*Ra
__builtin_rvv_vluxei64_v_tamu
fopen
vlsseg7e64_v
P*cC*cC*
-mmacosx-version-min=
fread
fs gs
zv*zzP*
__builtin_rvv_vluxei16_v_tuma
fwrite
vle8ff_v
zvC*zzP*
__builtin_rvv_vsseg4e8_v_m
isalnum
legal symbol name
__builtin_rvv_vsseg6e8_v_m
ctype.h
vluxseg3ei8_v
isalpha
-fobjc-gc
isblank
-cl-std=
iscntrl
__builtin_rvv_vsseg3e16_v_m
isdigit
vluxseg5ei8_v
isgraph
__builtin_rvv_vsseg5e16_v_m
islower
-fdeclare-opencl-builtins
isprint
__builtin_rvv_vluxei32_v_tu
ispunct
vluxseg7ei8_v
isspace
Enable the generation of 4-operand madd.s, madd.d and related instructions.
isupper
-fno-builtin
isxdigit
__builtin_rvv_vsseg8e16_v_m
tolower
vluxseg2ei16_v
toupper
__builtin_rvv_vsseg3e32_v_m
wcschr
-fwchar-type=short
wchar.h
__builtin_rvv_vsseg5e32_v_m
wcscmp
vluxseg4ei16_v
wcslen
Validate PCM input files based on content if mtime differs
wcsncmp
-fwchar-type=int
wmemchr
__builtin_rvv_vsseg2e64_v_m
wmemcmp
vluxseg6ei16_v
wmemcpy
__builtin_rvv_vsseg4e64_v_m
wmemmove
-fsigned-wchar
setjmp
__builtin_rvv_vsseg6e64_v_m
setjmp.h
vluxseg8ei16_v
longjmp
Add .note.gnu.property with BTI to assembly files (AArch64 only)
-D_DEBUG
__builtin_rvv_vssseg4e8_v_m
alloca
vluxseg3ei32_v
memalign
__builtin_rvv_vssseg6e8_v_m
malloc.h
-D_MT
memccpy
__builtin_rvv_vssseg8e8_v_m
v*v*vC*iz
vluxseg5ei32_v
mempcpy
-fobjc-infer-related-result-type
stpcpy
-D_DLL
stpncpy
__builtin_rvv_vssseg5e16_v_m
strdup
vluxseg7ei32_v
strndup
__builtin_rvv_vssseg7e16_v_m
index
--dependent-lib=msvcrt
strings.h
__builtin_rvv_vssseg2e32_v_m
rindex
vluxseg2ei64_v
bzero
-MMD
bcmp
--dependent-lib=msvcrtd
strcasecmp
__builtin_rvv_vssseg6e32_v_m
strncasecmp
vluxseg4ei64_v
_exit
__builtin_rvv_vssseg8e32_v_m
unistd.h
--dependent-lib=libcmt
vfork
__builtin_rvv_vssseg3e64_v_m
Reserve the x13 register (AArch64/RISC-V only)
pthread_create
-fmodules-validate-once-per-build-session
fC<2,3>
--dependent-lib=libcmtd
pthread.h
__builtin_rvv_vssseg7e64_v_m
_setjmp
vluxseg8ei64_v
__sigsetjmp
__builtin_rvv_vsuxseg3ei8_v_m
iSJi
-D_VC_NODEFAULTLIB
sigsetjmp
__builtin_rvv_vsuxseg5ei8_v_m
savectx
vlse8_v
getcontext
-mmemops
--dependent-lib=oldnames
_longjmp
__builtin_rvv_vsuxseg2ei16_v_m
siglongjmp
vnot_v
vSJi
__builtin_rvv_vsuxseg4ei16_v_m
strlcpy
.cache
strlcat
__builtin_rvv_vsuxseg6ei16_v_m
objc_msgSend
vfneg_v
GGH.
-fobjc-link-runtime
objc/message.h
modules
objc_msgSend_fpret
__builtin_rvv_vsuxseg3ei32_v_m
LdGH.
vwcvtu_x
objc_msgSend_fp2ret
__builtin_rvv_vsuxseg5ei32_v_m
XLdGH.
-fprebuilt-module-path=
objc_msgSend_stret
__builtin_rvv_vsuxseg7ei32_v_m
vGH.
vle32_v
objc_msgSendSuper
-mmfcrf
GM*H.
-fbuild-session-timestamp
objc_msgSendSuper_stret
__builtin_rvv_vsuxseg4ei64_v_m
vM*H.
vse16_v
objc_getClass
__builtin_rvv_vsuxseg6ei64_v_m
GcC*
-fobjc-dispatch-method=mixed
objc/runtime.h
__builtin_rvv_vsuxseg8ei64_v_m
objc_getMetaClass
vse64_v
objc_enumerationMutation
Don't verify input files for the modules if the module has been successfully validated or loaded during this build session
-fobjc-dispatch-method=non-legacy
objc_read_weak
__builtin_rvv_vloxei8_v_tamu
vcpop_m
objc/objc-auto.h
__builtin_rvv_vloxei16_v_tuma
objc_assign_weak
-fobjc-subscripting-legacy-runtime
GGG*
__builtin_rvv_vloxei32_v_tu
objc_assign_ivar
vfcvt_f_x_v
GGGY
-mmicromips
objc_assign_global
-fobjc-arc-cxxlib=libc++
objc_assign_strongCast
__builtin_rvv_vsoxseg3ei8_v_m
objc_exception_extract
vfcvt_f_xu_v
__builtin_rvv_vsoxseg5ei8_v_m
objc/objc-exception.h
-fobjc-arc-cxxlib=libstdc++
objc_exception_try_enter
__builtin_rvv_vsoxseg7ei8_v_m
objc_exception_try_exit
vfcvt_rtz_x
objc_exception_match
-fobjc-new-property
ignore_mrc_weak
objc_exception_throw
__builtin_rvv_vsoxseg8ei8_v_m
objc_sync_enter
vfcvt_rtz_xu
__builtin_rvv_vsoxseg3ei16_v_m
objc/objc-sync.h
-fignore-objc-weak
objc_sync_exit
__builtin_rvv_vsoxseg5ei16_v_m
__builtin_objc_memmove_collectable
vfcvt_x
NSLog
Additional arguments to forward to MLIR's option processing
-fobjc-relative-method-lists
Foundation/NSObjCRuntime.h
__builtin_rvv_vsoxseg2ei32_v_m
NSLogv
vfcvt_xu
__builtin_rvv_vsoxseg4ei32_v_m
atan2
-fsmall-block-descriptors
none,id,name
math.h
-ffixed-x14
atan2f
-fmodules-validate-system-headers
atan2l
-fno-diagnostics-show-note-include-stack
__builtin_rvv_vsoxseg3ei64_v_m
labs
vfncvt_f_x_w
llabs
__builtin_rvv_vsoxseg5ei64_v_m
copysign
-fcolor-diagnostics
copysignf
__builtin_rvv_vsoxseg7ei64_v_m
copysignl
vfncvt_rod_f_f_w
fabs
-mmmx
fabsf
-mprefer-vector-width=none
fabsl
__builtin_rvv_vadd_vx_tamu
finite
vfncvt_rtz_x_f_w
finitef
__builtin_rvv_vsub_vv_tuma
finitel
-foptimization-record-file
__finite
__builtin_rvv_vsub_vx_tu
__finitef
vfncvt_rtz_xu_f_w
__finitel
-fobjc-nonfragile-abi
fmod
opt.
fmodf
__builtin_rvv_vrsub_vx_tuma
fmodl
vfncvt_x_f_w
frexp
__builtin_rvv_vwaddu_vx_tu
frexpf
-opt-record-passes
frexpl
__builtin_rvv_vwaddu_vx_tamu
ldexp
vfncvt_xu_f_w
ldexpf
-mmovdir64b
ldexpl
-opt-record-format
modf
__builtin_rvv_vwsubu_vx_tu
modff
vfrec7_v
modfl
__builtin_rvv_vwsubu_vx_tamu
--amdhsa-code-object-version=
__builtin_rvv_vwadd_vv_tuma
nanf
vfsqrt_v
nanl
Validate the system headers that a module depends on when loading the module
powf
__builtin_rvv_vwadd_vx_tamu
powl
vfwcvt_f
acos
__builtin_rvv_vwsub_vv_tuma
acosf
-debug-info-kind=line-directives-only
acosl
__builtin_rvv_vwsub_vx_tu
acosh
vfwcvt_f_xu_v
acoshf
-mmpx
acoshl
-debug-info-kind=line-tables-only
asin
__builtin_rvv_vwaddu_wx_tuma
asinf
vfwcvt_rtz_x
asinl
__builtin_rvv_vwsubu_wv_tu
asinh
-debug-info-kind=constructor
asinhf
__builtin_rvv_vwsubu_wv_tamu
asinhl
vfwcvt_rtz_xu
atan
Enable relative method lists
atanf
-debug-info-kind=limited
atanl
__builtin_rvv_vwadd_wv_tu
atanh
vfwcvt_x
atanhf
__builtin_rvv_vwadd_wv_tamu
atanhl
-debug-info-kind=standalone
cbrt
__builtin_rvv_vwadd_wx_tuma
cbrtf
vfwcvt_xu
cbrtl
Set the default structure layout to be compatible with the Microsoft compiler standard
ceil
-debug-info-kind=unused-types
ceilf
__builtin_rvv_vwsub_wv_tamu
ceill
vlmul_ext_v
__builtin_rvv_vwsub_wx_tuma
cosf
-debugger-tuning=gdb
cosl
__builtin_rvv_vwcvt_x_x_v_tu
cosh
Reserve the x14 register (AArch64/RISC-V only)
coshf
-fmodules
coshl
-debugger-tuning=lldb
__builtin_rvv_vadc_vxm_tu
erff
vmand_mm
erfl
__builtin_rvv_vsbc_vxm_tu
erfc
-debugger-tuning=sce
erfcf
__builtin_rvv_vmadc_vx
erfcl
vmclr_m
Enable MSA ASE (MIPS only)
expf
-debugger-tuning=dbx
expl
__builtin_rvv_vand_vv_tuma
exp2
vmnor_mm
exp2f
__builtin_rvv_vand_vx_tu
exp2l
DWARFv3 or greater
expm1
__builtin_rvv_vand_vx_tamu
expm1f
vmorn_mm
expm1l
The target Objective-C runtime supports ARC weak operations
fdim
64 bit architecture
fdimf
__builtin_rvv_vxor_vx_tu
fdiml
vmset_m
floor
__builtin_rvv_vxor_vx_tamu
floorf
ELF platforms
floorl
__builtin_rvv_vor_vv_tuma
vmsof_m
fmaf
Enable MT ASE (MIPS only)
fmal
--compress-debug-sections=none
fmax
__builtin_rvv_vor_vx_tamu
fmaxf
vmxor_mm
fmaxl
__builtin_rvv_vsll_vv_tuma
fmin
--compress-debug-sections=
fminf
__builtin_rvv_vsll_vx_tu
fminl
vsext_vf2
hypot
Enable the 'modules' language feature
hypotf
--no-dynamic-linker
hypotl
__builtin_rvv_vsrl_vv_tuma
ilogb
vsext_vf8
ilogbf
__builtin_rvv_vsrl_vx_tu
ilogbl
-pie
lgamma
__builtin_rvv_vsrl_vx_tamu
lgammaf
vundefined
lgammal
-mmutable-globals
llrint
-zrelro
llrintf
__builtin_rvv_vsra_vx_tu
llrintl
vzext_vf4
llround
__builtin_rvv_vsra_vx_tamu
llroundf
--eh-frame-hdr
llroundl
__builtin_rvv_vnsrl_wv_tuma
__builtin_rvv_
logf
Specify the target Objective-C runtime kind and version
logl
-lcompiler_rt
log10
__builtin_rvv_vnsrl_wx_tamu
log10f
break
log10l
__builtin_rvv_vnsra_wv_tuma
log1p
include/c++/v1
log1pf
__builtin_rvv_vnsra_wx_tu
log1pl
countByEnumeratingWithState
log2
log2f
cloudabi::Linker
log2l
__builtin_rvv_vncvt_x_x_w_tuma
logb
__range
logbf
__builtin_rvv_vmseq_vv_tumu
logbl
LIBRARY_PATH
lrint
-fdebug-types-section
lrintf
-ffixed-x15
lrintl
-fmodulo-sched-allow-regmoves
lround
--compress-debug-sections=
lroundf
__builtin_rvv_vmsne_vx_tumu
lroundl
@try
nearbyint
__builtin_rvv_vmsltu_vv_tumu
nearbyintf
pwr7
nearbyintl
__builtin_rvv_vmsltu_vx_tumu
nextafter
@throw
nextafterf
-mnan=
nextafterl
ppc64le
nexttoward
__builtin_rvv_vmslt_vx_tumu
nexttowardf
'@try'
nexttowardl
__builtin_rvv_vmsleu_vv_tumu
remainder
hexagon
remainderf
__builtin_rvv_vmsleu_vx_tumu
remainderl
default captured statement
remquo
-fobjc-subscripting-legacy-runtime
remquof
-bplugin:
remquol
__builtin_rvv_vmsle_vx_tumu
rint
OpenMP region
__builtin_rvv_vmsgtu_vv_tumu
rintf
/libLTO
rintl
__builtin_rvv_vmsgtu_vx_tumu
round
__MSASMLABEL_.${:uid}__
roundf
-mno-3dnow
roundl
/LLVMgold
scalbln
__builtin_rvv_vmsgt_vx_tumu
scalblnf
[[clang::noinline]]
scalblnl
__builtin_rvv_vmsgeu_vv_tumu
scalbn
-plugin
scalbnf
__builtin_rvv_vwaddu_wv_tu
scalbnl
valarray
-fmodulo-sched
sinf
/../lib
sinl
__builtin_rvv_vsuxei16_v_m
sinh
template<> 
sinhf
__builtin_rvv_vmsgeu_vx_mu
sinhl
-bplugin_opt:
sqrt
__builtin_rvv_vmsge_vv_mu
sqrtf
InstantiateClass
sqrtl
-mno-abicalls
-plugin-opt=
tanf
__builtin_rvv_vminu_vv_tuma
tanl
instantiating enum definition
tanh
__builtin_rvv_vminu_vx_tu
tanhf
-mcpu=
tanhl
__builtin_rvv_vminu_vx_tamu
tgamma
cannot instantiate %0 yet
tgammaf
-fobjc-weak
tgammal
mcpu=
trunc
__builtin_rvv_vmin_vx_tu
truncf
instantiating function definition
truncl
__builtin_rvv_vmin_vx_tamu
cabs
complex.h
__builtin_rvv_vmaxu_vv_tuma
cabsf
instantiating variable definition
cabsl
-mno-adx
cacos
dwo_dir=
cacosf
__builtin_rvv_vmaxu_vx_tamu
cacosl
matrix row
cacosh
__builtin_rvv_vmax_vv_tuma
cacoshf
_dwo
cacoshl
__builtin_rvv_vmax_vx_tu
carg
Reserve the x15 register (AArch64/RISC-V only)
cargf
-fms-compatibility-version=
cargl
thinlto
casin
__builtin_rvv_vmul_vv_tuma
casinf
_Nullable_result
casinl
__builtin_rvv_vmul_vx_tu
casinh
jobs=
casinhf
__builtin_rvv_vmul_vx_tamu
casinhl
NSError
catan
-mno-altivec
catanf
-debugger-tune=lldb
catanl
__builtin_rvv_vmulh_vx_tu
catanh
_BitInt
catanhf
__builtin_rvv_vmulh_vx_tamu
catanhl
-debugger-tune=sce
ccos
__builtin_rvv_vmulhu_vv_tuma
ccosf
cl_khr_fp64 and __opencl_c_fp64
ccosl
-fodr-hash-attributes
ccosh
-debugger-tune=dbx
ccoshf
__builtin_rvv_vmulhu_vx_tamu
ccoshl
__ibm128
cexp
__builtin_rvv_vmulhsu_vv_tuma
cexpf
-debugger-tune=gdb
cexpl
__builtin_rvv_vsuxei32_v_m
cimag
__kindof 
cimagf
-mno-amx-bf16
cimagl
-function-sections=1
conj
__builtin_rvv_vdivu_vv_tu
conjf
conjl
__builtin_rvv_vdivu_vv_tamu
clog
-function-sections=0
clogf
__builtin_rvv_vdivu_vx_tuma
clogl
'sve'
cproj
Dot-separated value representing the Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
cprojf
-data-sections=1
cprojl
__builtin_rvv_vdiv_vv_tamu
cpow
authenticates-null-values
cpowf
__builtin_rvv_vdiv_vx_tuma
cpowl
-data-sections=0
creal
__builtin_rvv_vremu_vv_tu
crealf
'__ptr64'
creall
-mno-amx-tile
csin
-split-machine-functions
csinf
__builtin_rvv_vremu_vx_tuma
csinl
'__uptr'
csinh
__builtin_rvv_vrem_vv_tu
csinhf
sample-profile=
csinhl
__builtin_rvv_vrem_vv_tamu
csqrt
type qualifier
csqrtf
-foffload-lto=
csqrtl
cs-profile-generate
ctan
__builtin_rvv_vwmul_vv_tu
ctanf
Loading API notes from 
ctanl
__builtin_rvv_vwmul_vv_tamu
ctanh
cs-profile-path=
ctanhf
__builtin_rvv_vwmul_vx_tuma
ctanhl
APINotes
__sinpi
-mno-avx2
__sinpif
cs-profile-path=default_%m.profraw
__cospi
__builtin_rvv_vwmulu_vv_tamu
__cospif
APINotes.
__tanpi
__builtin_rvv_vwmulu_vx_tuma
__tanpif
-enable-jmc-instrument
__exp10
Enable profile hotness information in diagnostic line
__exp10f
-ffixed-x16
_Block_object_assign
-fms-compatibility
vv*vC*iC
stats-file=
Blocks.h
__builtin_rvv_vwmulsu_vx_tuma
_Block_object_dispose
OBJC_CONTEXT_ID_DATA
vvC*iC
__builtin_rvv_vmacc_vv_ta
addressof
-rpath
v*v&
__builtin_rvv_vmacc_vv_tamu
zfncTh
OBJC_PROPERTY_DATA
memory
-mno-avx512bitalg
__addressof
-Bstatic
zfncT
__builtin_rvv_vnmsac_vv_ta
as_const
OBJC_METHOD_DATA
v&v&
__builtin_rvv_vnmsac_vv_tamu
utility
-lomp
forward
__builtin_rvv_vnmsac_vx_ta
move
OBJC_SELECTOR_DATA
move_if_noexcept
-foffload-lto
__builtin_annotation
-lgomp
__builtin_assume
__builtin_rvv_vmadd_vv_tuma
__builtin_addcb
GLOBAL_VARIABLE_DATA
UcUcCUcCUcCUc*
__builtin_rvv_vmadd_vx_ta
__builtin_addcs
-liomp5
UsUsCUsCUsCUs*
__builtin_rvv_vmadd_vx_tamu
__builtin_addc
GLOBAL_FUNCTION_DATA
UiUiCUiCUiCUi*
-mno-avx512cd
__builtin_addcl
-Bdynamic
ULiULiCULiCULiCULi*
__builtin_rvv_vnmsub_vx_ta
__builtin_addcll
AvailabilityMsg
ULLiULLiCULLiCULLiCULLi*
__builtin_rvv_vnmsub_vx_tamu
__builtin_subcb
-lrt
__builtin_subcs
__builtin_rvv_vwmaccu_vv_tuma
__builtin_subc
SwiftVersions
__builtin_subcl
Enable full Microsoft Visual C++ compatibility
__builtin_subcll
-lomptarget
__builtin_add_overflow
__builtin_rvv_vwmaccu_vx_tamu
TVOS
__builtin_sub_overflow
__builtin_rvv_vwmacc_vv_tuma
__builtin_mul_overflow
-lomptarget.devicertl
__builtin_uadd_overflow
__builtin_rvv_vwmacc_vx_ta
bUiCUiCUi*
available
__builtin_uaddl_overflow
-mno-avx512er
bULiCULiCULi*
Fortran_main.lib
__builtin_uaddll_overflow
__builtin_rvv_vwmaccsu_vv_tuma
bULLiCULLiCULLi*
Classes
__builtin_usub_overflow
__builtin_rvv_vwmaccsu_vx_ta
__builtin_usubl_overflow
FortranRuntime.lib
__builtin_usubll_overflow
__builtin_rvv_vwmaccsu_vx_tamu
__builtin_umul_overflow
Functions
__builtin_umull_overflow
-fomit-frame-pointer
__builtin_umulll_overflow
FortranDecimal.lib
__builtin_sadd_overflow
__builtin_rvv_vmerge_vvm_tu
bSiCSiCSi*
Enumerators
__builtin_saddl_overflow
__builtin_rvv_vmv_v_v_tu
bSLiCSLiCSLi*
-lFortran_main
__builtin_saddll_overflow
__builtin_rvv_vsaddu_vv_tu
bSLLiCSLLiCSLLi*
Typedefs
__builtin_ssub_overflow
-mno-avx512f
__builtin_ssubl_overflow
-lFortranRuntime
__builtin_ssubll_overflow
__builtin_rvv_vsaddu_vx_tuma
__builtin_smul_overflow
SwiftPrivate
__builtin_smull_overflow
__builtin_rvv_vsadd_vv_tu
__builtin_smulll_overflow
-lFortranDecimal
__builtin_addressof
__builtin_rvv_vsadd_vv_tamu
__builtin_function_start
Reserve the x16 register (AArch64/RISC-V only)
__builtin_operator_new
-fms-extensions
-libpath:
__builtin_operator_delete
__builtin_rvv_vssubu_vv_tu
__builtin_char_memchr
SwiftImportAsNonGeneric
c*cC*iz
__builtin_rvv_vssubu_vv_tamu
__builtin_dump_struct
-zignore
__builtin_preserve_access_index
__builtin_rvv_vssubu_vx_tuma
__builtin_is_aligned
Methods
bvC*z
-mno-avx512pf
__builtin_align_up
-zrecord
v*vC*z
__builtin_rvv_vssub_vv_tamu
__builtin_align_down
Selector
__builtin___get_unsafe_stack_start
__builtin_rvv_vssub_vx_tuma
__builtin___get_unsafe_stack_bottom
--as-needed
__builtin___get_unsafe_stack_top
__builtin_rvv_vaaddu_vv_tu
__builtin___get_unsafe_stack_ptr
Parameters
__builtin_nontemporal_store
Enable OpenACC
__builtin_nontemporal_load
--no-as-needed
__builtin_coro_resume
__builtin_rvv_vaaddu_vx_tuma
__builtin_coro_destroy
NullabilityOfRet
__builtin_coro_done
__builtin_rvv_vaadd_vv_tu
-lpthread
__builtin_coro_promise
__builtin_rvv_vaadd_vv_tamu
v*v*IiIb
FactoryAsInit
__builtin_coro_size
-mno-avx512vbmi
__builtin_coro_align
__builtin_rvv_vasubu_vv_tu
__builtin_coro_frame
Required
__builtin_coro_noop
__builtin_rvv_vasubu_vv_tamu
__builtin_coro_free
-ldl
__builtin_coro_id
__builtin_rvv_vasubu_vx_tuma
v*Iiv*v*v*
ResultType
__builtin_coro_alloc
Accept some non-standard constructs supported by the Microsoft compiler
__builtin_coro_begin
-lexecinfo
__builtin_coro_end
__builtin_rvv_vasub_vv_tamu
bv*Ib
Position
__builtin_coro_suspend
__builtin_rvv_vasub_vx_tuma
-lresolv
__builtin_ptrauth_strip
__builtin_rvv_vsmul_vv_tu
v*v*i
Nonnull
__builtin_ptrauth_blend_discriminator
-mno-avx512vnni
zv*i
fuzzer_interceptors
__builtin_ptrauth_sign_constant
__builtin_rvv_vsmul_vx_tuma
v*v*iv*
Unspecified
__builtin_ptrauth_sign_unauthenticated
__builtin_rvv_vssrl_vv_tu
__builtin_ptrauth_sign_generic_data
zv*v*
__builtin_rvv_vssrl_vv_tamu
__builtin_ptrauth_auth_and_resign
Scalar
v*v*iv*iv*
Assert no nested parallel regions in the GPU
__builtin_ptrauth_auth
--export-dynamic
__builtin_ptrauth_string_discriminator
__builtin_rvv_vssra_vv_tu
__builtin_virtual_member_address
v*v*v*
__builtin_rvv_vssra_vv_tamu
__builtin_load_member_function_pointer
--export-dynamic-symbol=__cfi_check
read_pipe
__builtin_rvv_vssra_vx_tuma
write_pipe
CFReturnsRetained
reserve_read_pipe
-mno-avx512vpopcntdq
reserve_write_pipe
-fsanitize=memtag*
commit_write_pipe
__builtin_rvv_vnclipu_wv_tamu
commit_read_pipe
NSReturnsRetained
sub_group_reserve_read_pipe
__builtin_rvv_vnclipu_wx_tuma
sub_group_reserve_write_pipe
--android-memtag-mode=
sub_group_commit_read_pipe
Place debug types in their own section (ELF Only)
sub_group_commit_write_pipe
-ffixed-x17
work_group_reserve_read_pipe
-fms-hotpatch
work_group_reserve_write_pipe
--android-memtag-heap
work_group_commit_read_pipe
__builtin_rvv_vnclip_wx_tuma
work_group_commit_write_pipe
PropertyKind
get_pipe_num_packets
__builtin_rvv_vfadd_vv_tu
--android-memtag-stack
get_pipe_max_packets
__builtin_rvv_vfadd_vv_tamu
enqueue_kernel
EnumExtensibility
get_kernel_work_group_size
-mno-avx
get_kernel_preferred_work_group_size_multiple
-whole-archive
get_kernel_max_sub_group_size_for_ndrange
__builtin_rvv_vfsub_vv_tu
get_kernel_sub_group_count_for_ndrange
EnumKind
to_global
__builtin_rvv_vfsub_vv_tamu
to_local
xray
to_private
__builtin_rvv_vfsub_vf_tuma
__builtin_store_half
closed
vdh*
Assert no thread in a parallel region modifies an ICV
__builtin_store_halff
-no-whole-archive
vfh*
__builtin_rvv_vfrsub_vf_tamu
__builtin_load_half
NSEnum
dhC*
__builtin_rvv_vfwadd_vv_tuma
__builtin_load_halff
--extract-dwo
fhC*
__builtin_rvv_vfwadd_vf_tu
__builtin_os_log_format_buffer_size
NSOptions
zcC*.
-mno-bmi2
p:0:nut
--strip-dwo
__builtin_os_log_format
__builtin_rvv_vfwsub_vv_tuma
v*v*cC*.
NSClosedEnum
p:0:nt
__builtin_rvv_vsuxei64_v_m
__builtin_get_device_side_mangled_name
objcopy
cC*.
__builtin_rvv_vfwsub_vf_tuma
multiple definitions of class '
__builtin_hlsl_wave_active_count_bits
Ensure that all functions can be hotpatched at runtime
static
__builtin_hlsl_create_handle
__builtin_rvv_vfwadd_wv_tamu
v*Uc
multiple definitions of global variable '
__xray_customevent
__builtin_rvv_vfwadd_wf_tuma
vcC*z
__xray_typedevent
__builtin_rvv_vfwsub_wv_tu
vzcC*z
multiple definitions of enumerator '
__builtin_ms_va_start
-mno-branch-likely
vc*&.
dynamic-no-pic
__builtin_ms_va_end
__builtin_rvv_vfwsub_wf_tuma
vc*&
cannot mix EnumKind and EnumExtensibility (for 
__builtin_ms_va_copy
__builtin_rvv_vfmul_vv_tu
vc*&c*&
ropi
__arithmetic_fence
__builtin_rvv_vfmul_vv_tamu
__builtin_tmo_get_id
multiple definitions of typedef '
zvC*
-fopenmp-assume-threads-oversubscription
rwpi
__builtin_tmo_get_size
__builtin_rvv_vfdiv_vv_tu
__builtin_tmo_get_flags
__builtin_tmo_get_version
__builtin_rvv_vfdiv_vv_tamu
__builtin_tmo_get_alignment
ropi-rwpi
__builtin_tmo_get_xnu_description
__builtin_rvv_vfdiv_vf_tuma
cC*vC*
duplicate definition of class property '
__builtin_tmo_get_json_description
Do not add a BTI instruction after a setjmp or other return-twice construct (Arm/AArch64 only)
__builtin_rvv_vfrdiv_vf_tamu
is missing a ':' at the end
__builtin_rvv_vfwmul_vv_tuma
__builtin_rvv_vfwmul_vf_tu
10.0
Reserve the x17 register (AArch64/RISC-V only)
10.1
-fms-kernel
10.2
-KPIC
11.0
__builtin_rvv_vfmacc_vv_tuma
11.1
nullability info for 
11.2
__builtin_rvv_vfmacc_vf_ta
11.3
MSVC
11.4
__builtin_rvv_vfmacc_vf_tamu
11.5
  <#code#>
11.6
-mno-check-zero-division
11.7
-x86-branches-within-32B-boundaries
11.8
__builtin_rvv_vfnmacc_vf_ta
call_once
unknown
__builtin_rvv_vfnmacc_vf_tamu
sm_20
-x86-align-branch-boundary=
compute_20
__builtin_rvv_vfmsac_vv_tuma
sm_21
dispatch_once
sm_30
-fopenmp-cuda-mode
compute_30
call
sm_32
__builtin_rvv_vfmsac_vf_tamu
compute_32
unknown std::call_once implementation, skipping.
sm_35
__builtin_rvv_vfnmsac_vv_tuma
compute_35
indirect
sm_37
__builtin_rvv_vfnmsac_vf_ta
compute_37
_M_once
sm_50
-mno-clflushopt
compute_50
fused, jcc, jmp, call, ret, indirect
sm_52
__builtin_rvv_vfmadd_vv_tuma
compute_52
completion
sm_53
__builtin_rvv_vfmadd_vf_ta
compute_53
-x86-align-branch=
sm_60
__builtin_rvv_vfmadd_vf_tamu
compute_60
withCompletion
sm_61
-fms-memptr-rep=
compute_61
-x86-pad-max-prefix-size=
sm_62
__builtin_rvv_vfnmadd_vf_ta
compute_62
withCompletionBlock
sm_70
__builtin_rvv_vfnmadd_vf_tamu
compute_70
/libdevice
sm_72
__builtin_rvv_vfmsub_vv_tuma
compute_72
reply
sm_75
-mno-clzero
compute_75
/libbc-
sm_80
__builtin_rvv_vfmsub_vf_tamu
compute_80
WithCompletionHandler
sm_86
__builtin_rvv_vfnmsub_vv_tuma
compute_86
/lib
sm_87
__builtin_rvv_vfnmsub_vf_ta
compute_87
WithCompletionBlock
sm_89
-fopenmp-cuda-teams-reduction-recs-num=
compute_89
nvptx
sm_90
__builtin_rvv_vfwmacc_vv_tuma
compute_90
WithReply
gfx600
__builtin_rvv_vfwmacc_vf_ta
compute_amdgcn
/libdevice/
gfx601
__builtin_rvv_vfwmacc_vf_tamu
gfx602
shouldCall
gfx700
-mno-code-object-v3
gfx701
libbc-
gfx702
__builtin_rvv_vfwnmacc_vf_ta
gfx703
gfx704
__builtin_rvv_vfwnmacc_vf_tamu
gfx705
gfx801
-fdiagnostics-show-note-include-stack
gfx802
-ffixed-x18
gfx803
single,multiple,virtual
gfx805
-type=a
gfx810
__builtin_rvv_vfwmsac_vf_tamu
gfx900
dispatch_after
gfx902
__builtin_rvv_vfwnmsac_vv_tuma
gfx904
clang-offload-bundler
gfx906
__builtin_rvv_vfwnmsac_vf_ta
gfx908
dispatch_once
gfx909
-mno-constant-cfstrings
gfx90a
-hip-openmp-compatible
gfx90c
__builtin_rvv_vfmin_vv_tuma
gfx940
dispatch_barrier_async_and_wait
gfx1010
__builtin_rvv_vfmin_vf_tu
gfx1011
cudart
gfx1012
__builtin_rvv_vfmin_vf_tamu
gfx1013
gfx1030
Use the experimental OpenMP-IR-Builder codegen path.
gfx1031
gfx1032
__builtin_rvv_vfmax_vf_tu
gfx1033
 ... 
gfx1034
__builtin_rvv_vfmax_vf_tamu
gfx1035
gcc_s
gfx1036
__builtin_rvv_vfsgnj_vv_tuma
gfx1100
__except (
gfx1101
Disable emitting complete constructors and destructors as aliases when possible
gfx1102
pthread
gfx1103
__builtin_rvv_vfsgnj_vf_tamu
generic
MaximumDeploymentTarget
__builtin_rvv_vfsgnjn_vv_tuma
VersionMap
hip_hcc
macOS_iOSMac
__builtin_rvv_vfsgnjn_vf_tu
iOSMac_macOS
SDKSettings.json
-fms-omit-default-lib
invalid SDKSettings.json
-mno-code-object-v3
'nonnull'
__builtin_rvv_vfsgnjx_vv_tuma
'_Nonnull'
'nullable'
__builtin_rvv_vfsgnjx_vf_tu
'_Nullable'
-mcode-object-version=2
'null_unspecified'
__builtin_rvv_vfsgnjx_vf_tamu
'_Null_unspecified'
consumed
_Nullable_result
-mno-crc32
diagnostic state at 
-mcode-object-v3
<unknown 
__builtin_rvv_vmfeq_vv_tumu
 pragma
NSException
 no-error
__builtin_rvv_vmfeq_vf_tumu
 no-fatal
-mcode-object-version=3
 overruled
__builtin_rvv_vmfne_vv_tumu
<can't format argument>
arguments
File 
Enable all Clang extensions for OpenMP directives and clauses
 <FileID 
-enable-machine-outliner
__builtin_rvv_vmflt_vv_tumu
 has_local_transitions
#null
: state 
__builtin_rvv_vmflt_vf_tumu
-enable-machine-outliner=never
__builtin_rvv_vmfle_vv_tumu
#ptr
Disallow use of CRC instructions (Mips only)
Lexical or Preprocessor Issue
amdgpu
Semantic Issue
__builtin_rvv_vmfgt_vv_tumu
Lambda Issue
#lit
Parse Issue
__builtin_rvv_vmfgt_vf_tumu
ARC Semantic Issue
libomptarget-
ARC and @properties
__builtin_rvv_vmfge_vv_tumu
ARC Casting Rules
Reserve the x18 register (AArch64/RISC-V only)
ARC Parse Issue
-fms-runtime-lib=
ARC Weak References
rv630
ARC Restrictions
__builtin_rvv_vfmerge_vfm_tu
OpenMP Issue
 := 
Inline Assembly Issue
__builtin_rvv_vredsum_vs_ta
AST Deserialization Issue
rv635
Firebloom Pointer Attributes Issue
__builtin_rvv_vredmaxu_vs_tu
Modules Issue
extendNum
Coroutines Issue
-mno-cumode
Concepts Issue
r600
Dependency Directive Source Scanner Issue
__builtin_rvv_vredmax_vs_tum
Backend Issue
toFloat
SourceMgr Reported Issue
__builtin_rvv_vredminu_vs_tumu
Refactoring Continuation Issue
rv610
API Notes Issue
__builtin_rvv_vredmin_vs_ta
Related Result Type Issue
objToPtr
Rename Issue
Path to the IR file produced by the frontend for the host.
AST Serialization Issue
rv620
Nullability Issue
__builtin_rvv_vredand_vs_tam
Generics Issue
CFG {
User-Defined Issue
__builtin_rvv_vredor_vs_tum
Refactoring Invocation Issue
rs780
VTable ABI Issue
__builtin_rvv_vredxor_vs_tumu
Value Conversion Issue
 BB_
Documentation Issue
-mno-cx16
ARC Retain Cycle
rs880
Deprecations
__builtin_rvv_vwredsumu_vs_tu
Format String Issue
let _x
Cocoa API Issue
__builtin_rvv_vwredsumu_vs_tam
#pragma message Directive
rv740
Instrumentation Issue
__builtin_rvv_vfredmax_vs_tum
Unused Entity Issue
goto 
The warning is issued if the number of pre-processor tokens exceeds
the token limit, which can be set in three ways:
1. As a limit at a specific point in a file, using the ``clang max_tokens_here``
   pragma:
   .. code-block: c++
      #pragma clang max_tokens_here 1234
2. As a per-translation unit limit, using the ``-fmax-tokens=`` command-line
   flag:
   .. code-block: console
      clang -c a.cpp -fmax-tokens=1234
3. As a per-translation unit limit using the ``clang max_tokens_total`` pragma,
   which works like and overrides the ``-fmax-tokens=`` flag:
   .. code-block: c++
      #pragma clang max_tokens_total 1234
These limits can be helpful in limiting code growth through included files.
Setting a token limit of zero means no limit.
Note that the warning is disabled by default, so -Wmax-tokens must be used
in addition with the pragmas or -fmax-tokens flag to get any warnings.
Select Windows run-time library
__is_lvalue_expr
rv770
__is_rvalue_expr
__builtin_rvv_vfredusum_vs_ta
*** File Manager Stats:
branch (
 real files found, 
__builtin_rvv_vfredosum_vs_tu
 real dirs found.
palm
 virtual files found, 
__builtin_rvv_vfredosum_vs_tam
 virtual dirs found.
return 
 dir lookups, 
-mno-direct-move
 dir cache misses.
cedar
 file lookups, 
__builtin_rvv_vfwredosum_vs_tumu
 file cache misses.
) then 
NumDirLookups
__builtin_rvv_viota_m_ta
Number of directory lookups.
sumo
NumDirCacheMisses
__builtin_rvv_viota_m_tama
Number of directory cache misses.
NumFileLookups
Set rpath on OpenMP executables
Number of file lookups.
sumo2
NumFileCacheMisses
__builtin_rvv_vmv_x_s
Number of file cache misses.
wildcard
delete
__builtin_rvv_vfmv_s_f_tu
hemlock
__builtin_rvv_vslideup_vx_tu
and_eq
bitand
-mno-dsp
bitor
cypress
compl
__builtin_rvv_vslidedown_vx_tumu
not_eq
or_eq
__builtin_rvv_vslide1up_vx_ta
xor_eq
aruba
co_await
-fcxx-modules
_Nonnull
-ffixed-x19
_Nullable
static,static_dbg,dll,dll_dbg
_Nullable_result
cayman
_Null_unspecified
__builtin_rvv_vsse8_v
not_keyword
defs
__builtin_rvv_vslide1down_vx_tumu
__ieee128
-pass-remarks=
__builtin_rvv_vfslide1down_vf_ta
*** Identifier Table Stats:
# Identifiers:   %d
Do not place constants in the .rodata section instead of the .sdata if they meet the -G <size> threshold (MIPS)
# Empty Buckets: %d
-pass-remarks-missed=
Hash density (#identifiers per bucket): %f
__builtin_rvv_vrgather_vv_tumu
Ave identifier length: %f
Max identifier length: %d
__builtin_rvv_vrgather_vx_ta
<null selector>
-pass-remarks-analysis=
__builtin_rvv_vrgather_vx_tama
dealloc
finalize
Generate code only for an OpenMP target device.
retainCount
opt-remarks-filename=
initialize
__builtin_rvv_vcompress_vm_tu
performSelectorInBackground
performSelectorOnMainThread
__builtin_rvv_vsoxei8_v
stringByAppendingFormat
.opt.ld.
stringWithFormat
__builtin_rvv_vsoxei32_v
new[]
-mno-exception-handling
delete[]
opt-remarks-passes=
__builtin_rvv_vlseg2e8_v_tama
Increment
__builtin_rvv_vle16ff_v_tumu
opt-remarks-format=
__builtin_rvv_vle32ff_v_ta
ArraySubscript
-fms-volatile
opt-remarks-with-hotness
__builtin_rvv_vle64ff_v_tumu
UnsafeBufferUsageAttr
__builtin_rvv_vlseg3e8_v_ta
opt-remarks-hotness-threshold=
__builtin_rvv_vlseg3e8_v_tama
PointerDereference
Allow generation of data access to code sections (ARM only)
asan
__builtin_rvv_vlseg5e8_v_ta
DerefSimplePtrArithFixable
__builtin_rvv_vlseg5e8_v_tama
asan-preinit
__builtin_rvv_vle8_v_tumu
any_dre
Use the new driver for OpenMP offloading.
memprof
__builtin_rvv_vlseg6e8_v_tama
ArraySubscriptUnderULC
__builtin_rvv_vlseg7e8_v_tumu
memprof-preinit
__builtin_rvv_vlseg8e8_v_ta
-mno-extern-sdata
ubsan_minimal
__builtin_rvv_vlseg2e16_v_tumu
.data() + 
__builtin_rvv_vlseg3e16_v_ta
scudo_minimal
__builtin_rvv_vlseg3e16_v_tama
Reserve the x19 register (AArch64/RISC-V only)
-fmsc-version=
tsan
nonnull
__builtin_rvv_vlseg5e16_v_ta
nullable
null_unspecified
__builtin_rvv_vlseg5e16_v_tama
C++ for OpenCL
hwasan_aliases
OpenCL C
__builtin_rvv_vlseg6e16_v_tumu
 version 
ptrAdd
getLangStandardForKind() on unspecified kind
-mno-f16c
hwasan
iso9899:199409
__builtin_rvv_vlseg7e16_v_tama
gnu89
call_expr
__builtin_rvv_vlseg8e16_v_tumu
gnu99
hwasan-preinit
__builtin_rvv_vlseg2e32_v_ta
gnu11
[[clang::unsafe_buffer_usage]] 
Do not create a host fallback if offloading to the device fails.
gnu17
asan_static
__builtin_rvv_vlseg3e32_v_tumu
gnu2x
  return 
c++98
__builtin_rvv_vlseg4e32_v_ta
gnu++98
asan_cxx
c++11
__builtin_rvv_vlseg4e32_v_tama
gnu++11
c++14
Don't work around VLLDM erratum CVE-2021-35465 (ARM only)
gnu++14
memprof_cxx
c++17
__builtin_rvv_vlseg6e32_v_ta
gnu++17
c++20
__builtin_rvv_vlseg6e32_v_tama
gnu++20
hwasan_aliases_cxx
c++2b
__builtin_rvv_vlseg7e32_v_tumu
gnu++2b
typeid(
cl1.0
Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
cl1.1
hwasan_cxx
cl1.2
__builtin_rvv_vlseg8e32_v_tama
cl2.0
<out of lifetime>
cl3.0
__builtin_rvv_vlseg2e64_v_tumu
clc++1.0
dfsan
clc++2021
__builtin_rvv_vlseg3e64_v_ta
cuda
Don't workaround Cortex-A53 erratum 835769 (AArch64 only)
hlsl
lsan
hlsl2015
__builtin_rvv_vlseg4e64_v_tumu
hlsl2016
{*new 
hlsl2017
__builtin_rvv_vlseg5e64_v_ta
hlsl2018
msan
hlsl2021
__builtin_rvv_vlseg5e64_v_tama
hlsl202x
 + 1
ISO C 1990
-fopenmp-relocatable-target
ISO C 1990 with amendment 1
msan_cxx
ISO C 1990 with GNU extensions
__builtin_rvv_vlseg7e64_v_ta
ISO C 1999
ISO C 1999 with GNU extensions
__builtin_rvv_vlseg7e64_v_tama
ISO C 2011
tsan_cxx
ISO C 2011 with GNU extensions
__builtin_rvv_vlseg8e64_v_tumu
ISO C 2017
ISO C 2017 with GNU extensions
Don't work around Cortex-A57 Erratum 1742098 (ARM only)
Working Draft for ISO C2x
safestack
Working Draft for ISO C2x with GNU extensions
__builtin_rvv_vlseg3e8ff_v_tama
ISO C++ 1998 with amendments
ISO C++ 1998 with amendments and GNU extensions
__builtin_rvv_vlseg4e8ff_v_tumu
ISO C++ 2011 with amendments
__safestack_init
ISO C++ 2011 with amendments and GNU extensions
-fdiagnostics-show-option
ISO C++ 2014 with amendments
-ffixed-x1
ISO C++ 2014 with amendments and GNU extensions
-fmudflapth
ISO C++ 2017 with amendments
ISO C++ 2017 with amendments and GNU extensions
__builtin_rvv_vlseg6e8ff_v_tumu
ISO C++ 2020 DIS
*** AST Context Stats:
ISO C++ 2020 DIS with GNU extensions
__builtin_rvv_vlseg7e8ff_v_ta
Working draft for ISO C++ 2023 DIS
cfi_diag
Working draft for ISO C++ 2023 DIS with GNU extensions
__builtin_rvv_vlseg7e8ff_v_tama
OpenCL 1.0
Adjusted
OpenCL 1.1
Don't work around Cortex-A72 Erratum 1655431 (ARM only)
OpenCL 1.2
scudo_cxx_minimal
OpenCL 2.0
__builtin_rvv_vlseg2e16ff_v_ta
OpenCL 3.0
 each 
C++ for OpenCL 1.0
__builtin_rvv_vlseg2e16ff_v_tama
C++ for OpenCL 2021
scudo_cxx
NVIDIA CUDA(tm)
__builtin_rvv_vlseg3e16ff_v_tumu
Decayed
High Level Shader Language
Emit OpenMP code only for SIMD-based constructs.
High Level Shader Language 2015
--whole-archive
High Level Shader Language 2016
__builtin_rvv_vlseg4e16ff_v_tama
High Level Shader Language 2017
DependentSizedArray
High Level Shader Language 2018
__builtin_rvv_vlseg5e16ff_v_tumu
High Level Shader Language 2021
--no-whole-archive
High Level Shader Language 202x
__builtin_rvv_vlseg6e16ff_v_ta
VariableArray
explicit 
-mno-fma4
 [system]
.syms
 [extern_c]
__builtin_rvv_vlseg7e16ff_v_tumu
 [swift_infer_import_as_member]
Attributed
umbrella header "
__builtin_rvv_vlseg8e16ff_v_ta
umbrella "
--dynamic-list=
config_macros 
__builtin_rvv_vlseg8e16ff_v_tama
[exhaustive]
BitInt
textual 
-fmudflap
private 
.dwo
private textual 
__builtin_rvv_vlseg3e32ff_v_ta
exclude 
Builtin
header "
__builtin_rvv_vlseg3e32ff_v_tama
" { size 
-lgcc_eh
 mtime 
__builtin_rvv_vlseg4e32ff_v_tumu
Decltype
 size 
-mno-fp-ret-in-387
import 
-lgcc_s
use 
__builtin_rvv_vlseg5e32ff_v_tama
conflict 
DeducedTemplateSpecialization
module * {
__builtin_rvv_vlseg6e32ff_v_tumu
macosx
-l:libunwind.a
macosx-fragile
__builtin_rvv_vlseg7e32ff_v_ta
DependentBitInt
watchos
-fopenmp-target-debug
bridgeos
-l:libunwind.dll.a
gnustep
__builtin_rvv_vlseg8e32ff_v_tumu
DependentSizedExtVector
objfw
__builtin_rvv_vlseg2e64ff_v_ta
cl_khr_fp64
-l:libunwind.so
cl_khr_3d_image_writes
__builtin_rvv_vlseg2e64ff_v_tama
__opencl_c_pipes
DependentVector
__opencl_c_generic_address_space
-mno-fsgsbase
__opencl_c_3d_image_writes
-mllvm
__opencl_c_device_enqueue
__builtin_rvv_vlseg4e64ff_v_ta
__opencl_c_read_write_images
DynamicRangePointer
__opencl_c_program_scope_global_variables
__builtin_rvv_vlseg4e64ff_v_tama
__opencl_c_fp64
--32
__opencl_c_images
__builtin_rvv_vlseg5e64ff_v_tumu
close
Reserve the x1 register (AArch64/RISC-V only)
spread
primary
--64
guided
__builtin_rvv_vlseg6e64ff_v_tama
monotonic
InjectedClassName
nonmonotonic
__builtin_rvv_vlseg7e64ff_v_tumu
mutexinoutset
--strip-all
sink
__builtin_rvv_vlseg8e64ff_v_ta
inoutset
ConstantMatrix
outallmemory
-mno-gfni
inoutallmemory
thumb2pe
__builtin_rvv_vlseg2e8ff_v_tumu
MemberPointer
uval
__builtin_rvv_vlsseg3e8_v_ta
tofrom
arm64pe
present
__builtin_rvv_vlsseg3e8_v_tama
ompx_hold
ObjCObject
scalar
-fopenmp-target-new-runtime
aggregate
i386pe
nohost
__builtin_rvv_vlsseg5e8_v_ta
conditional
ObjCTypeParam
concurrent
__builtin_rvv_vlsseg5e8_v_tama
ancestor
i386pep
device_num
__builtin_rvv_vlsseg6e8_v_tumu
inscan
Paren
need_device_ptr
-mno-global-merge
type
_DllMainCRTStartup
__builtin_rvv_vlsseg7e8_v_tama
shift
LValueReference
undefined-trap
__builtin_rvv_vlsseg8e8_v_tumu
implicit-integer-truncation
_DllMainCRTStartup@12
implicit-integer-arithmetic-value-change
__builtin_rvv_vlsseg2e16_v_ta
implicit-conversion
SubstTemplateTypeParmPack
bounds
-fnative-half-arguments-and-returns
none
-Bdynamic
global
__builtin_rvv_vlsseg2e8_v_tumu
invalid
Enum
always
__builtin_rvv_vlsseg3e16_v_ta
runtime
--enable-auto-image-base
never
__builtin_rvv_vlsseg3e16_v_tama
resultFile
TemplateSpecialization
text/plain
-mno-gpopt
--entry
artifactLocation
__builtin_rvv_vlsseg5e16_v_ta
tool
TypeOfExpr
enabled
__builtin_rvv_vlsseg5e16_v_tama
level
mainCRTStartup
rank
__builtin_rvv_vlsseg6e16_v_tumu
fullDescription
Typedef
defaultConfiguration
Specify comma-separated list of triples OpenMP offloading targets to be supported
helpUri
--allow-multiple-definition
driver
__builtin_rvv_vlsseg7e16_v_tama
rules
UnresolvedUsing
artifacts
__builtin_rvv_vlsseg8e16_v_tumu
location
--out-implib
roles
__builtin_rvv_vlsseg2e32_v_ta
mimeType
ValueTerminated
threadFlows
-mno-hreset
fullName
-lmsvcrt
en-US
__builtin_rvv_vlsseg3e32_v_tumu
informationUri
ExtVector
https://clang.llvm.org/docs/UsersManual.html
__builtin_rvv_vlsseg4e32_v_ta
results
asan_dll_thunk
columnKind
Unparse and stop (skips the semantic checks)
unicodeCodePoints
-ffixed-x20
ruleIndex
Use the native __fp16 type for arguments and returns (and skip ABI-specific lowering)
ruleId
asan_dynamic
codeFlows
__builtin_rvv_vluxseg2ei8_v_ta
$schema
 implicit move constructors created
runs
__builtin_rvv_vluxseg2ei8_v_tama
file://
asan_dynamic_runtime_thunk
-._~:@!$&'()*+,;=
__builtin_rvv_vlsseg6e32_v_tumu
startLine
 implicit move assignment operators created
startColumn
-mno-hvx-ieee-fp
endColumn
--undefined
endLine
__builtin_rvv_vlsseg7e32_v_tama
physicalLocation
__int128_t
importance
__builtin_rvv_vlsseg8e32_v_tumu
important
___asan_seh_interceptor
essential
__builtin_rvv_vlsseg2e64_v_ta
unimportant
_GUID
<invalid loc>
-fopenmp-version=
<invalid>
__asan_seh_interceptor
 <Spelling=
__builtin_rvv_vlsseg3e64_v_tumu
flags
UTF-32 (BE)
__builtin_rvv_vlsseg4e64_v_ta
UTF-32 (LE)
/usr/local/include
UTF-16 (BE)
__builtin_rvv_vlsseg4e64_v_tama
UTF-16 (LE)
_cfisa
UTF-7
-mno-hvx-qfloat
UTF-1
/usr/include/c++/v1
UTF-EBCDIC
__builtin_rvv_vlsseg6e64_v_ta
SCSU
_ptr
BOCU-1
__builtin_rvv_vlsseg6e64_v_tama
GB-18030
CrossWindows::Linker
__builtin_rvv_vlsseg7e64_v_tumu
<<<INVALID BUFFER>>
reserved
<<<<<INVALID SOURCE LOCATION>>>>>
-fnative-half-type
<<<<INVALID BUFFER>>>>
CrossWindows::Assembler
<invalid loc>
__builtin_rvv_vlsseg8e64_v_tama
<invalid buffer>
*** Source Manager Stats:
__builtin_rvv_vle8ff_v_tumu
 files mapped, 
/../
 mem buffers mapped.
__builtin_rvv_vsseg2e8_v
 local SLocEntry's allocated (
objc_class
 bytes of capacity), 
-mno-hvx
B of Sloc address space used.
/bin
 loaded SLocEntries allocated, 
__builtin_rvv_vluxseg4ei8_v_ta
 bytes of files mapped, 
 files with line #'s computed, 
__builtin_rvv_vluxseg4ei8_v_tama
 files with macro args computed.
sys-include
FileID scans: 
__builtin_rvv_vluxseg5ei8_v_tumu
 linear, 
{objc_object=}
 binary.
-fopenmp=
sramecc
/include/c++/
xnack
__builtin_rvv_vluxseg6ei8_v_tama
mcount
"_vptr$
cf-protection=branch
__builtin_rvv_vluxseg7ei8_v_tumu
cf-protection=return
cskyelf
signed char
__builtin_rvv_vluxseg8ei8_v_ta
unsigned char
short
-mno-iamcu
unsigned short
crtbegin
__builtin_rvv_vluxseg2ei16_v_tumu
unsigned int
long int
__builtin_rvv_vluxseg3ei16_v_ta
long unsigned int
crtend
long long int
__builtin_rvv_vluxseg3ei16_v_tama
long long unsigned int
Reserve the x20 register (AArch64/RISC-V only)
Use the native half type for __fp16 instead of promoting to float
-lsemi
__builtin_rvv_vluxseg5ei16_v_ta
a prior #pragma section
__builtin_rvv_vluxseg5ei16_v_tama
-lnosys
__builtin_rvv_vluxseg6ei16_v_tumu
__type_pack_element
Don't generate implicit floating point instructions
CSKY::Linker
__builtin_rvv_vluxseg7ei16_v_tama
__tune_
__builtin_rvv_vluxseg8ei16_v_tumu
__declspec(a)
__attribute__((a))
__builtin_rvv_vluxseg2ei32_v_ta
__attribute__((__
__))
Parse OpenMP pragmas and generate parallel code.
e-m:e-p:32:32-i1:8:32-i8:8:32-i16:16:32-i32:32:32-f32:32:32-i64:32-f64:32-a:0:32-n32
e-m:e-p:32:32-i1:8:32-i8:8:32-i16:16:32-i64:32-f64:32-a:0:32-n32
__builtin_rvv_vluxseg3ei32_v_tumu
e-m:e-p:32:32:32-a:0-n16:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f32:32:32-f64:64:64-v32:32:32-v64:64:64-v512:512:512-v1024:1024:1024-v2048:2048:2048
E-m:e-p:32:32-i64:64-a:0:32-n32-S64
__builtin_rvv_vluxseg4ei32_v_ta
u6__bf16
/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v
__builtin_rvv_vluxseg4ei32_v_tama
__CloudABI__
__ELF__
Don't generate implicit SME instructions or mode switches
__STDC_ISO_10646__
ptxas
201206L
__builtin_rvv_vluxseg6ei32_v_ta
e-P1-p:16:8-i8:8-i16:8-i32:8-i64:8-f32:8-f64:8-n8-a:8
DF16_
E-m:e-p:64:64-i64:64-i128:128-n32:64-S128
__builtin_rvv_vluxseg6ei32_v_tama
e-m:e-p:64:64-i64:64-i128:128-n32:64-S128
/usr/local/cuda
e-m:e-p:16:16-i32:16-i64:16-f32:16-f64:16-a:8-n8:16-S16
__builtin_rvv_vluxseg7ei32_v_tumu
e-m:e-v128:32-v16:16-v32:32-v96:32-n8:16:32:64-S128
<anonymous_record>
E-m:o-p:32:32-f64:32:64-n32
-fnested-functions
mcount
/usr/local/cuda-
E-m:a-p:32:32-i64:64-n32
__builtin_rvv_vluxseg8ei32_v_tama
e-m:e-p:32:32-i64:64-n32
__va_list
E-m:e-p:32:32-i64:64-n32
__builtin_rvv_vluxseg2ei64_v_tumu
u9__ieee128
/usr/lib/cuda
__builtin_rvv_vluxseg3ei64_v_ta
__stack
power7
(integrated-as) Emit an object file which cannot be used with an incremental linker
power8
/nvvm/libdevice
pwr8
__builtin_rvv_vluxseg4ei64_v_tumu
power9
__vr_top
pwr9
__builtin_rvv_vluxseg5ei64_v_ta
power10
/lib64
pwr10
__builtin_rvv_vluxseg5ei64_v_tama
__TEXT,__StaticInit,regular,pure_instructions
__vr_offs
_IBMR2
-foperator-arrow-depth
_POWER
/include/cuda.h
__THW_BIG_ENDIAN__
__builtin_rvv_vluxseg7ei64_v_ta
_AIX
__TOS_AIX__
__builtin_rvv_vluxseg7ei64_v_tama
__HOS_AIX__
/libdevice.10.bc
__STDC_NO_ATOMICS__
__builtin_rvv_vluxseg8ei64_v_tumu
__STDC_NO_THREADS__
reg_save_area
__EXTABI__
-mno-invariant-function-descriptors
_AIX32
sm_20
_AIX41
__builtin_rvv_vlse8_v_tumu
_AIX43
fp_offset
_AIX50
__builtin_rvv_vneg_v_ta
_AIX51
sm_21
_AIX52
-fdiagnostics-show-template-tree
_AIX53
-ffixed-x21
_AIX61
-fnew-alignment=
_AIX71
sm_32
_AIX72
__builtin_rvv_vmmv_m
_AIX73
__overflow_arg_area
_LONG_LONG
__builtin_rvv_vfneg_v_tuma
__64BIT__
sm_30
_WCHAR_T
__builtin_rvv_vwcvtu_x_x_v_tu
E-m:o-i64:64-n32:64
__current_saved_reg_area_pointer
E-m:a-i64:64-n32:64
-mno-isel
e-m:e-i64:64-n32:64
sm_50
E-m:e-i64:64-n32:64
__builtin_rvv_vle16_v_tuma
-S128-v256:256:256-v512:512:512
__overflow_area_pointer
quadword-atomics
__builtin_rvv_vle32_v_tu
e-m:e-p:32:32-i64:64-n32-S128
sm_52
_mcount
__builtin_rvv_vle32_v_tamu
e-m:e-p:64:64-i64:64-i128:128-n64-S128
 address space
E-m:e-p:32:32-i64:64-f128:64-n32-S64
-foperator-names
e-m:e-p:32:32-i64:64-f128:64-n32-S64
sm_53
E-m:e-i64:64-n32:64-S128
__builtin_rvv_vse16_v_m
E-m:l-i1:8:16-i8:8:16-i64:64-f128:64-v128:64-a:8:16-n32:64
unqualified
E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-v128:64-a:8:16-n32:64
__builtin_rvv_vse64_v_m
E-p:32:32:32-i1:8:8-i8:8:32-i16:16:32-i32:32:32-i64:32:32-f32:32:32-f64:32:32-v64:32:32-v128:32:32-v256:32:32-v512:32:32-v1024:32:32-a0:0:32-n32
sm_60
e-p:32:32:32-i1:8:8-i8:8:32-i16:16:32-i32:32:32-i64:32:32-f32:32:32-f64:32:32-v64:32:32-v128:32:32-v256:32:32-v512:32:32-v1024:32:32-a0:0:32-n32
__builtin_rvv_vlse16_v_tuma
e-m:o-p:32:32-p270:32:32-p271:32:32-p272:64:64-f64:32:64-f80:128-n8:16:32-S128
the global scope
e-m:o-p:32:32-p270:32:32-p271:32:32-p272:64:64-f64:32:64-f80:32-n8:16:32-S128
-mno-ldc1-sdc1
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-f64:32:64-f80:32-n8:16:32-S128
sm_61
__builtin_rvv_vfclass_v_tuma
lambda expression
__builtin_rvv_vfcvt_f_x_v_tu
sm_62
__builtin_rvv_vfcvt_f_x_v_tamu
function 
Specifies the largest alignment guaranteed by '::operator new(size_t)'
xmm0
sm_35
__builtin_rvv_vfcvt_rtz_x_f_v_tu
~{dirflag},~{fpsr},~{flags}
values
avx512
__builtin_rvv_vfcvt_rtz_x_f_v_tamu
sm_37
no-mmx
__builtin_rvv_vfcvt_rtz_xu_f_v_tuma
avx512f
__Ananas__
Do not extend the -G behaviour to object local data (MIPS)
.text.startup
__clang_cuda_runtime_wrapper.h
linux
__builtin_rvv_vfcvt_x_f_v_tamu
__ANDROID__
(default) 
__ANDROID_MIN_SDK_VERSION__
__builtin_rvv_vfcvt_xu_f_v_tuma
__ANDROID_API__
Found CUDA installation: 
__gnu_linux__
__builtin_rvv_vfirst_m_m
__FLOAT128__
[(default) 
__mcount
Specify the output name of the file containing the optimization remarks. Implies -fsave-optimization-record. On Darwin platforms, this cannot be used with multiple -arch <arch> options.
__NetBSD__
, version 
__unix__
__builtin_rvv_vfncvt_f_x_w_tu
__OpenBSD__
[(default) template 
__FreeBSD_kernel__
__builtin_rvv_vfncvt_f_x_w_tamu
__GLIBC__
__minix
__builtin_rvv_vfncvt_f_xu_w_tuma
_EM_WSIZE
 aka 
_EM_PSIZE
Restore the default behaviour of not generating long calls
_EM_SSIZE
-m64
_EM_LSIZE
__builtin_rvv_vfncvt_rod_f_f_w_tamu
_EM_FSIZE
_EM_DSIZE
__builtin_rvv_vfncvt_rtz_x_f_w_tuma
e-m:x-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:32-n8:16:32-a:0:32-S32
-m32
_X86_
__builtin_rvv_vfncvt_rtz_xu_f_w_tu
__CYGWIN__
Reserve the x21 register (AArch64/RISC-V only)
__CYGWIN32__
<align>
e-m:x
--dont-merge-basicblocks
e-m:e
__builtin_rvv_vfncvt_x_f_w_tuma
-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-
inherited from
f80:128
__builtin_rvv_vfncvt_xu_f_w_tu
f80:32
--return-at-end
-n8:16:32-a:0:32-S32
__builtin_rvv_vfncvt_xu_f_w_tamu
_M_IX86
 hidden
-mno-lvi-cfi
__HAIKU__
__INTEL__
__builtin_rvv_vfrsqrt7_v_tu
__rtems__
array_filler
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:32-f64:32-f128:32-n8:16:32-a:0:32-S32
__builtin_rvv_vfrsqrt7_v_tamu
__iamcu
-lineinfo
__iamcu__
__builtin_rvv_vfsqrt_v_tuma
__GNU__
TemplateArgument
__gnu_hurd__
Only include passes which match a specified regular expression in the generated optimization record (by default, include all passes)
__MACH__
--gpu-name
e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128
__builtin_rvv_vfwcvt_f_f_v_tamu
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128
LambdaCapture
e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128
__builtin_rvv_vfwcvt_f_x_v_tuma
e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128
--output-file
cx16
__builtin_rvv_vfwcvt_f_xu_v_tu
NestedNameSpecifierLoc
__x86_64__
-mno-lvi-hardening
__CYGWIN64__
_M_X64
__builtin_rvv_vfwcvt_rtz_x_f_v_tuma
_M_AMD64
QualifiedTypeLoc
.mcount
__builtin_rvv_vfwcvt_rtz_xu_f_v_tu
__FreeBSD__
--options-file
__FreeBSD_cc_version
__builtin_rvv_vfwcvt_rtz_xu_f_v_tamu
900001
DecayedTypeLoc
__KPRINTF_ATTRIBUTE__
-fnew-alignment
__SCE__
--cuda
__ORBIS__
__builtin_rvv_vfwcvt_xu_f_v_tu
__PROSPERO__
ConstantArrayTypeLoc
e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024
__builtin_rvv_vfwcvt_xu_f_v_tamu
e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024
e-m:e-p:32:32-p10:8:8-p20:8:8-i64:64-f128:64-n32:64-S128-ni:1:10:20
__builtin_rvv_vmand_mm
e-m:e-p:32:32-p10:8:8-p20:8:8-i64:64-n32:64-S128-ni:1:10:20
IncompleteArrayTypeLoc
__wasi__
-mno-lwp
e-m:e-p:64:64-p10:8:8-p20:8:8-i64:64-f128:64-n32:64-S128-ni:1:10:20
e-m:e-p:64:64-p10:8:8-p20:8:8-i64:64-n32:64-S128-ni:1:10:20
__builtin_rvv_vmsbf_m_tumu
e-m:e-p:32:32-i1:32-i8:8-i16:16-i32:32-i64:64-f16:16-f32:32-f64:64-n8:16:32:64
AtomicTypeLoc
e-m:e-S32-p:32:32-i32:32:32-i64:32:32-f32:32:32-f64:32:32-v64:32:32-v128:32:32-a:0:32-Fi32-n32
__builtin_rvv_vmsif_m
abiv2
--create
__STDC_MB_MIGHT_NEQ_WC__
__builtin_rvv_vmsof_m
__Fuchsia__
BTFTagAttributedTypeLoc
__Fuchsia_API_level__
-foptimize-sibling-calls
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-n8:16:32-S128
--image=profile=
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-n8:16:32:64-S128
zzIzIz
e-p:32:32-i64:64
BlockPointerTypeLoc
__native_client__
__builtin_rvv_vsext_vf2_tu
~{$1}
,file=
cnmips
__builtin_rvv_vsext_vf2_tamu
cnmipsp
ComplexTypeLoc
+dsp
-mno-madd4
m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64
fatbinary
m:e-p:32:32-i8:8:32-i16:16:32-i64:64-n32:64-S128
__builtin_rvv_vsext_vf8_tu
m:e-i8:8:32-i16:16:32-i64:64-n32:64-S128
DeducedTypeLoc
__builtin_rvv_vsext_vf8_tamu
+ptx42
Enable modules for C++
-ffixed-x22
-fcray-pointer
+ptx78
__builtin_rvv_vzext_vf4_tuma
DependentBitIntTypeLoc
__builtin_rvv_vzext_vf8_tu
+ptx77
__builtin_rvv_vzext_vf8_tamu
DependentSizedExtVectorTypeLoc
-mno-memops
+ptx76
__builtin_riscv_ctz_32
DependentVectorTypeLoc
zbc|zbkc
+ptx75
__builtin_riscv_xperm4
DynamicCountPointerTypeLoc
--for-linker
+ptx74
__builtin_riscv_unzip_32
ElaboratedTypeLoc
__builtin_riscv_aes32dsmi_32
+ptx73
__builtin_riscv_aes64im_64
FunctionNoProtoTypeLoc
-mno-mfcrf
+ptx72
__builtin_riscv_aes64es_64
InjectedClassNameTypeLoc
zknh
+ptx71
__builtin_riscv_sha512sig0h_32
MatrixTypeLoc
Enable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
+ptx70
The compilation directory to embed in the coverage mapping.
-fcreate-profile
+ptx65
Reserve the x22 register (AArch64/RISC-V only)
+ptx64
$f10
SPIR
$f11
ObjCObjectTypeLoc
$f12
-mno-mips16
$f13
$f14
$f15
ObjCTypeParamTypeLoc
$f16
$f17
PackExpansionTypeLoc
$f18
$f19
+ptx61
$f20
$f21
PipeTypeLoc
$f22
$f23
+ptx60
$f24
$f25
ReferenceTypeLoc
$f26
-mno-mma
$f27
cubin
$f28
$f29
RValueReferenceTypeLoc
$f30
$f31
-enable-memcpyopt-without-libcalls
$fcc0
__sparcv8
$fcc1
SubstTemplateTypeParmTypeLoc
$fcc2
-force_cpusubtype_ALL
$fcc3
--nvptx-short-ptr
$fcc4
__ma2450
$fcc5
EnumTypeLoc
$fcc6
__ma2480
$fcc7
define
$ac1hi
__ma2x8x
$ac1lo
TemplateSpecializationTypeLoc
$ac2hi
-mno-movbe
$ac2lo
CUDA_VERSION
$ac3hi
$ac3lo
TypeOfExprTypeLoc
hypersparc
NVPTX::Assembler
TypedefTypeLoc
-force_flat_namespace
NVPTX::Linker
ma2150
UnresolvedUsingTypeLoc
ma2x5x
$w10
ma2485
$w11
ValueTerminatedTypeLoc
$w12
-mno-movdiri
$w13
ppc601
$w14
-ffixed-x23
$w15
-force_load
$w16
-mno-movt
$w17
$w18
__builtin_tbegin_nofloat
$w19
CXXBaseSpecifier
$w20
__builtin_non_tx_store
$w21
ppc604
$w22
__builtin_s390_vlbb
$w23
NestedNameSpecifier
$w24
__builtin_s390_vstl
$w25
ppc604e
$w26
V2ULLiV2ULLiV2ULLiIi
$w27
AccessSpecDecl
$w28
Disallow use of movt/movw pairs (ARM only)
$w29
ppc750
$w30
__builtin_s390_vpksgs
$w31
CapturedDecl
$msair
V16UcV8UsV8Usi*
$msacsr
ppc7400
$msaaccess
__builtin_s390_vpklsg
$msasave
EmptyDecl
$msamodify
-forder-file-instrumentation
$msarequest
ppc7450
$msamap
__builtin_s390_vuplhw
$msaunmap
ExternCContextDecl
__builtin_s390_vuplhh
ppc970
__builtin_s390_vupllb
FriendDecl
-mno-ms-bitfields
ppc64
__builtin_s390_vaccg
ImportDecl
__builtin_s390_vavgh
i386
__builtin_s390_vavglh
LinkageSpecDecl
Do not follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
i486
V4SiV4SiV4Sii*
BaseUsingDecl
__builtin_s390_vchhs
i486SX
V16ScV16UcV16Uci*
UsingEnumDecl
-mno-msa
i586
__builtin_s390_vclzb
LabelDecl
__builtin_s390_vctzb
i686
__builtin_s390_verimb
NamespaceAliasDecl
-foutput-class-dir=
pentium
V8UsV8UsUi
ObjCContainerDecl
E-m:e-p:32:32-i64:64-n32:64
V2ULLiV2ULLiUi
__PPC__
pentpro
__PPU__
__builtin_s390_verllvg
__CELLOS_LV2__
ObjCImplDecl
__LP32__
-mno-mt
_ARCH_PPC64
pentIIm3
__powerpc64__
__builtin_s390_vgfmah
ObjCImplementationDecl
__svr4__
V16UcV2ULLiV2ULLiV16Uc
__SVR4
pentIIm5
__builtin_s390_vmalhb
__C99FEATURES__
ObjCProtocolDecl
_LARGEFILE_SOURCE
-fno-access-control
__EXTENSIONS__
pentium4
__builtin_s390_vmaleb
ObjCPropertyDecl
transactional-execution
__builtin_s390_vmaoh
vector-enhancements-1
x86_64
vector-enhancements-2
__builtin_s390_vmalof
nnp-assist
BuiltinTemplateDecl
_OPEN_DEFAULT
-mno-multivalue
_UNIX03_WITHDRAWN
x86_64h
__370__
__builtin_s390_vmeh
__BFP__
RedeclarableTemplateDecl
__BOOL__
__builtin_s390_vmlef
__LONGNAME__
__MVS__
__builtin_s390_vmlob
__THW_370__
FunctionTemplateDecl
__TOS_390__
Override record layouts with those in the given file
__TOS_MVS__
armv4t
__XPLINK__
__builtin_s390_vsbcbiq
__DLL__
VarTemplateDecl
_MI_BUILTIN
__builtin_s390_vscbif
_EXT
armv5
__DragonFly__
__builtin_s390_vslb
__DragonFly_cc_version
TypeDecl
100001
-mno-mwaitx
__tune_i386__
armv6
__EMSCRIPTEN__
__builtin_s390_vsumh
__EMSCRIPTEN_PTHREADS__
EnumDecl
e-m:e-i64:64-n32:64-S128-v64:64:64-v128:64:64-v256:64:64-v512:64:64-v1024:64:64-v2048:64:64-v4096:64:64-v8192:64:64-v16384:64:64
__builtin_s390_vsumqf
armv6m
iV16UcV16Uc
Reserve the x23 register (AArch64/RISC-V only)
Disable C++ access control
armv7
__builtin_s390_vfaef
ClassTemplatePartialSpecializationDecl
__builtin_s390_vfaezb
armv7em
__builtin_s390_vfaezf
sx10
TypedefNameDecl
sx11
Disallow converting instructions with negative immediates to their negation or inversion.
sx12
armv7k
sx13
__builtin_s390_vfeef
sx14
TypeAliasDecl
sx15
__builtin_s390_vfeezbs
sx16
armv7m
sx17
__builtin_s390_vfeezfs
sx18
UnresolvedUsingTypenameDecl
sx19
Output object file
sx20
armv7s
sx21
__builtin_s390_vfenezbs
sx22
UsingDirectiveDecl
sx23
__builtin_s390_vfenezfs
sx24
xscale
sx25
__builtin_s390_vistrh
sx26
UsingShadowDecl
sx27
-mno-nvj
sx28
arm64
sx29
V16UcV16UcV16UcV16UcIii*
sx30
ValueDecl
sx31
__builtin_s390_vstrcf
sx32
arm64e
sx33
__builtin_s390_vstrczbs
sx34
DeclaratorDecl
sx35
-fno-addrsig
sx36
arm64_32
sx37
__builtin_s390_vfchedbs
sx38
ObjCAtDefsFieldDecl
sx39
__builtin_s390_vflpdb
sx40
r600
sx41
__builtin_s390_vftcidb
sx42
FunctionDecl
sx43
-mno-nvs
sx44
amdgcn
sx45
V2dV2dV2dIi
sx46
CXXMethodDecl
sx47
__builtin_s390_vfcesbs
sx48
nvptx
sx49
__builtin_s390_vfisb
sx50
CXXConversionDecl
sx51
/fp:contract
sx52
nvptx64
sx53
__builtin_s390_vfmssb
sx54
MSPropertyDecl
sx55
__builtin_s390_vftcisb
sx56
amdil
sx57
__builtin_s390_vstrsb
sx58
VarDecl
sx59
-mno-odd-spreg
sx60
spir
sx61
__builtin_s390_vstrszf
sx62
ImplicitParamDecl
sx63
__builtin_s390_vclfnhs
Enable alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:' (default)
-ffixed-x24
Don't emit an address-significance table
--gstabs
arch12
outer
VarTemplatePartialSpecializationDecl
__s390x__
-arch
-fdebug-unparse
Reserve the x24 register (AArch64/RISC-V only)
-fno-aggressive-function-elimination
-demangle
info
OMPDeclareMapperDecl
-mno-outline-atomics
__builtin_ve_vl_pack_f32p
__builtin_ve_vl_pack_f32a
TemplateParamObjectDecl
__builtin_ve_vl_extract_vm512l
-application_extension
__builtin_ve_vl_vld_vssl
UnresolvedUsingValueDecl
__builtin_ve_vl_vldnc_vssl
-object_path_lto
__builtin_ve_vl_vldunc_vssl
OMPRequiresDecl
Don't generate local calls to out-of-line atomic operations
libLTO.dylib
__builtin_ve_vl_vldlzxnc_vssl
ObjCPropertyImplDecl
__builtin_ve_vl_vld2dnc_vssl
-lto_library
__builtin_ve_vl_vldu2dnc_vssl
PragmaDetectMismatchDecl
/fp:fast
-no_deduplicate
__builtin_ve_vl_vldl2dzxnc_vssl
StaticAssertDecl
__builtin_ve_vl_vst_vssml
-dynamic
__builtin_ve_vl_vstot_vssl
Stmt
Disable function outlining (AArch64 only)
-dylib
__builtin_ve_vl_vstuot_vssl
GCCAsmStmt
__builtin_ve_vl_vstl_vssl
-dylib_compatibility_version
__builtin_ve_vl_vstlot_vssl
BreakStmt
/fp:precise
-dylib_current_version
__builtin_ve_vl_vst2dot_vssl
CXXForRangeStmt
__builtin_ve_vl_vstu2d_vssl
-dylib_install_name
__builtin_ve_vl_vstu2dot_vssl
CapturedStmt
-mno-packets
mips
-no_pie
aarch64
__builtin_ve_vl_vstl2dot_vssl
applearm64
ContinueStmt
itanium
__builtin_ve_vl_pfchv_ssl
-fsuppress-conflicting-types
-bitcode_bundle
-fcuda-approx-transcendentals
V256dV256dUiLUi
-sycl-std=
CoroutineBodyStmt
-fsycl-is-host
-fno-align-commons
-fsycl-is-device
-bitcode_process_mode
-fno-cuda-host-device-constexpr
V256bV256bLUiLUi
-fcuda-allow-variadic-functions
DoStmt
-fcuda-is-device
LUiV256bLUi
-fexperimental-max-bitint-width=
-syslibroot
-fcompatibility-qualified-id-block-type-checking
V256ddUi
-fno-signed-wchar
GotoStmt
-fwchar-type=
-mno-paired-vector-memops
-fdefault-calling-conv=
touch
-fnative-half-arguments-and-returns
V256dLiV256dUi
-fnative-half-type
IndirectGotoStmt
-vtordisp-mode=
V256dfUi
-fdeprecated-macro
-enable-machine-outliner
-fdebugger-objc-literal
V256dfV256bV256dUi
-fdebugger-cast-result-to-id
NullStmt
-fdebugger-support
-fpack-derived
-funknown-anytype
-enable-linkonceodr-outlining
-faddress-space-map-mangling=
V256dLUiUi
-ffake-address-space-map
OMPExecutableDirective
-fno-bitfield-type-align
V256dLUiV512bV256dUi
-fconst-strings
-enable-machine-outliner=never
-fbracket-depth
V256dUiV256dV256dUi
-fconstexpr-steps
OMPBarrierDirective
-fconstexpr-depth
-mno-pclmul
-foperator-arrow-depth
-lto-stats-file=
-ftemplate-depth
__builtin_ve_vl_vaddul_vsvvl
-fapply-global-visibility-to-externs
OMPCancellationPointDirective
-ftype-visibility=
__builtin_ve_vl_vaddul_vsvmvl
-stack-protector
-ObjC
-static-define
__builtin_ve_vl_vadduw_vsvl
-fhalf-no-semantic-interposition
OMPDepobjDirective
-function-alignment
-fno-align-functions
-fencode-extended-block-signature
-lsystem_pthread
-disable-objc-default-synthesize-properties
__builtin_ve_vl_pvaddu_vvvMvl
-fconstant-string-class
OMPFlushDirective
-fno-wchar
__builtin_ve_vl_vaddswsx_vvvl
-fexternc-nounwind
-framework
-fblocks-runtime-optional
V256diV256dV256dUi
-pic-is-pie
OMPLoopBasedDirective
-pic-level
-mno-pcrel
-faligned-alloc-unavailable
Foundation
-building-pch-with-obj
__builtin_ve_vl_vaddswzx_vvvmvl
-fdump-record-layouts
OMPDistributeDirective
-fdump-record-layouts-complete
__builtin_ve_vl_pvadds_vsvl
-fdump-record-layouts-canonical
-lobjc
-fdump-record-layouts-simple
__builtin_ve_vl_vaddsl_vvvl
-fno-recovery-ast-type
OMPDistributeParallelForSimdDirective
-fno-recovery-ast
Specify the default maximum struct packing alignment
-fno-odr-hash-methods
-arch_multiple
-fno-odr-hash-ivars
__builtin_ve_vl_vsubul_vvvl
-fno-odr-hash-properties
OMPForDirective
-fno-odr-hash-records
__builtin_ve_vl_vsubul_vvvmvl
-fno-odr-hash-protocols
-final_output
-fno-odr-hash-interfaces
__builtin_ve_vl_vsubuw_vsvl
-fno-odr-hash-categories
OMPGenericLoopDirective
-fodr-hash-attributes
-mno-popcntd
-fmodules-hash-error-diagnostics
-allow_stack_execute
-fmodules-debuginfo
__builtin_ve_vl_pvsubu_vvvMvl
-fmodules-codegen
OMPMaskedTaskLoopSimdDirective
-fno-modules-local-submodule-visibility
__builtin_ve_vl_vsubswsx_vsvl
-fmodules-local-submodule-visibility
-threads=
-fmodule-feature
__builtin_ve_vl_vsubswzx_vvvl
-fno-modules-error-recovery
-ffixed-x25
-fno-dllexport-inlines
-fno-align-jumps
-mbranch-target-enforce
-filelist
-mabi=ieeelongdouble
__builtin_ve_vl_pvsubs_vsvl
-mreassociate
OMPParallelForSimdDirective
-menable-no-nans
__builtin_ve_vl_vsubsl_vvvl
-menable-no-infs
ZERO_AR_DATE
-fdump-vtable-layouts
__builtin_ve_vl_vsubsl_vvvmvl
-fno-math-builtin
OMPParallelMaskedTaskLoopDirective
-fpadding-on-unsigned-fixed-point
-mno-power10-vector
-fsemantic-interposition
-no_warning_for_no_symbols
-fexperimental-optimized-noescape
__builtin_ve_vl_vmuluw_vvvl
-faltivec-src-compat=
OMPParallelMasterTaskLoopDirective
-traditional-cpp
__builtin_ve_vl_vmuluw_vvvmvl
-pthread
-create
-print-ivar-layout
__builtin_ve_vl_vmulswsx_vsvl
-nogpulib
OMPSimdDirective
-fzvector
-fpadding-on-unsigned-fixed-point
-mabi=quadword-atomics
-output
-mabi=vec-extabi
__builtin_ve_vl_vmulswzx_vvvmvl
-mvscale-max=
OMPTargetParallelGenericLoopDirective
-mvscale-min=
__builtin_ve_vl_vmulsl_vsvl
-mcmse
lipo
-mthread-model
__builtin_ve_vl_vmulslw_vvvl
-mms-bitfields
OMPTargetTeamsDistributeDirective
-ffuchsia-api-level=
-mno-power9-vector
-mdarwin-stkchk-strong-link
dsymutil
-malign-double
__builtin_ve_vl_vdivul_vvvmvl
-mdouble=
OMPTargetTeamsDistributeParallelForSimdDirective
-mqdsp6-compat
__builtin_ve_vl_vdivuw_vsvl
-fenable-matrix
--verify
-fwritable-strings
__builtin_ve_vl_vdivul_vvsl
-fnew-infallible
OMPTargetTeamsGenericLoopDirective
-mdefault-visibility-export-mapping=
-fno-align-labels
-fvisibility-global-new-delete-hidden
--debug-info
-fvisibility-inlines-hidden-static-local-var
__builtin_ve_vl_vdivuw_vvsvl
-fvisibility-inlines-hidden
OMPTaskLoopSimdDirective
-fvisibility-externs-nodllstorageclass=
__builtin_ve_vl_vdivswsx_vvvl
-fvisibility-externs-dllimport=
--eh-frame
-fvisibility-nodllstorageclass=
__builtin_ve_vl_vdivswsx_vvvmvl
-fvisibility-dllexport=
OMPTeamsDistributeParallelForDirective
-fvisibility-from-dllstorageclass
-mno-prefixed
-fno-threadsafe-statics
--quiet
-Wlarge-by-value-copy=
__builtin_ve_vl_vdivswsx_vvsl
-ftrivial-auto-var-init-skip-non-ptr-array
OMPTeamsDistributeSimdDirective
-ftrivial-auto-var-init-skip-stl
__builtin_ve_vl_vdivswsx_vvsmvl
-ftrivial-auto-var-init-skip-non-pod
dwarfdump
-ftrivial-auto-var-init-skip-cpp-obj
__builtin_ve_vl_vdivswzx_vvsmvl
-ftrivial-auto-var-zero-init-max-size=
OMPLoopTransformationDirective
-ftrivial-auto-var-init-stop-after=
-fparse-all-comments
-ftrivial-auto-var-init=
arm64-apple-
-fstack-check
V256dV256dLiUi
-fno-signed-char
OMPUnrollDirective
-fno-spell-checking
V256dV256dLiV256bV256dUi
-fno-char8_t
array-bounds-pointer-arithmetic
-fchar8_t
__builtin_ve_vl_vcmpul_vsvvl
-fshort-enums
OMPMasterDirective
-fno-rtti-data
-mno-ptwrite
-frwpi
builtin-memcpy-chk-size
-fropi
__builtin_ve_vl_vcmpuw_vsvmvl
-fpascal-strings
OMPOrderedDirective
-fmax-type-align=
__builtin_ve_vl_pvcmpu_vsvvl
-fpack-struct=
conditional-uninitialized
--offload-new-driver
__builtin_ve_vl_vcmpswsx_vvvvl
-fopenmp-optimistic-collapse
Reserve the x25 register (AArch64/RISC-V only)
-fopenmp-offload-mandatory
-fno-align-loops
-fopenmp-assume-no-nested-parallelism
empty-body
-fopenmp-assume-no-thread-state
__builtin_ve_vl_vcmpswzx_vsvvl
-fno-openmp-extensions
OMPParallelSectionsDirective
-fobjc-disable-direct-methods-for-testing
__builtin_ve_vl_pvcmps_vvvvl
-fno-objc-infer-related-result-type
format-security
-fnew-alignment=
__builtin_ve_vl_pvcmps_vsvMvl
-fno-aligned-allocation
OMPSectionDirective
-faligned-allocation
-mno-rdpid
-fsized-deallocation
implicit-int-conversion
-frelaxed-template-template-args
__builtin_ve_vl_vmaxswsx_vvvvl
-fapplication-extension
OMPSingleDirective
-fobjc-exceptions
__builtin_ve_vl_vmaxswsx_vsvmvl
-fobjc-encode-cxx-class-template-spec
memset-transposed-args
-fno-operator-names
__builtin_ve_vl_vmaxswzx_vsvvl
-fno-digraphs
OMPTargetDirective
-fdigraphs
Recognize and construct Pascal-style string literals
-fno-knr-functions
return-stack-address
-fretain-comments-from-system-headers
__builtin_ve_vl_pvmaxs_vsvMvl
-fno-implicit-modules
OMPTargetExitDataDirective
-fmodules-search-all
__builtin_ve_vl_vminswsx_vsvvl
-fmodules-decluse
shadow
-fmodules-strict-decluse
__builtin_ve_vl_vminswzx_vvvvl
-fmodule-name=
OMPTargetParallelForDirective
-fmodules-ts
-mno-rdrnd
-fpch-instantiate-templates
shorten-64-to-32
-fno-declspec
__builtin_ve_vl_pvmins_vsvvl
-fdeclspec
OMPTargetUpdateDirective
-fms-kernel
__builtin_ve_vl_vmaxsl_vvvvl
-fms-memptr-rep=
sign-conversion
-fdelayed-template-parsing
__builtin_ve_vl_vmaxsl_vsvmvl
-fms-volatile
OMPTaskgroupDirective
-fasm-blocks
-fno-aligned-allocation
-fms-extensions
sizeof-array-argument
-fms-compatibility
__builtin_ve_vl_vand_vvvvl
-flax-vector-conversions=
OMPTaskyieldDirective
-fxray-always-emit-typedevents
__builtin_ve_vl_vand_vsvmvl
-fxray-always-emit-customevents
sizeof-array-decay
-fxray-attr-list=
__builtin_ve_vl_pvand_vsvvl
-fxray-never-instrument=
ObjCAtCatchStmt
-fxray-always-instrument=
-mno-red-zone
-fxray-instrument
sizeof-pointer-memaccess
-fexperimental-strict-floating-point
__builtin_ve_vl_vor_vsvmvl
-fheinous-gnu-extensions
ObjCAtSynchronizedStmt
-fgnu89-inline
__builtin_ve_vl_pvor_vsvvl
-fno-gnu-keywords
unused-result
-fgnu-keywords
__builtin_ve_vl_vxor_vvvvl
-ffreestanding
ObjCAtTryStmt
-fprotect-parens
Allows assuming by-value parameters do not alias any other value. Has no effect on non-trivially-copyable classes in C++.
-frounding-math
-fno-signed-zeros
__builtin_ve_vl_pvxor_vsvvl
-ffinite-math-only
ObjCForCollectionStmt
-fapprox-func
__builtin_ve_vl_veqv_vvvvl
-freciprocal-math
-Wno-error=
-fsanitize-address-field-padding=
__builtin_ve_vl_veqv_vsvmvl
-fno-c++-static-destructors
SEHExceptStmt
-ffixed-point
-mno-relax-all
-fextend-arguments=
-Wdeprecated-objc-isa-usage
-fmath-errno
V256dV256dUi
-menable-unsafe-fp-math
SEHLeaveStmt
-ffast-math
__builtin_ve_vl_pvldzlo_vvl
-ffp-exception-behavior=
-Werror=deprecated-objc-isa-usage
-ffp-eval-method=
Don't use GOT indirection to reference external data symbols
-fignore-exceptions
-ffixed-x26
-exception-model
-fno-aligned-new
-fexceptions
-Werror=implicit-function-declaration
-femit-all-decls
__builtin_ve_vl_vpcnt_vvmvl
-fno-elide-constructors
DefaultStmt
-fno-dollars-in-identifiers
__builtin_ve_vl_pvpcntup_vvl
-fdollars-in-identifiers
-fptrauth-objc-isa-mode=sign-and-strip
-fcxx-modules
__builtin_ve_vl_pvpcnt_vvvl
-fno-cxx-modules
ValueStmt
-fasync-exceptions
Do not produce relaxation hints for linkers to try optimizing PIC call sequences into direct calls (MIPS only)
-fcxx-exceptions
-fexperimental-new-constant-interpreter
__builtin_ve_vl_pvbrvup_vvl
-fconstant-double-number-class=
Expr
-fconstant-float-number-class=
__builtin_ve_vl_pvbrv_vvvl
-fconstant-integer-number-class=
-force_load
-fconstant-dictionary-class=
__builtin_ve_vl_vseq_vvl
-fconstant-array-class=
BinaryConditionalOperator
-fno-constant-cfstrings
Load pass plugin from a dynamic shared object file (only with new pass manager).
-fcf-runtime-abi=
libarclite_
-fcomplete-member-pointers
__builtin_ve_vl_vsll_vvvvl
-fparse-all-comments
AddrLabelExpr
-fcomment-block-commands=
__builtin_ve_vl_vsll_vvsmvl
-fborland-extensions
watchsimulator
-ftyped-cxx-new-delete
__builtin_ve_vl_pvsll_vvsvl
-ftyped-memory-operations-experimental
ArrayInitLoopExpr
-ftarget-variant-availability-checks
-mno-relax
-fapinotes-modules
appletvsimulator
-fapinotes
__builtin_ve_vl_vsrl_vvvmvl
-fprofile-list=
ArrayTypeTraitExpr
-fno-gnu-inline-asm
__builtin_ve_vl_pvsrl_vvsl
-fexperimental-library
appletvos
-fcoro-aligned-allocation
__builtin_ve_vl_vslawsx_vvvl
-fcoroutines-ts
AssumptionExpr
-fno-double-square-bracket-attributes
-fno-all-intrinsics
-fdouble-square-bracket-attributes
iphonesimulator
-fxl-pragma-pack
__builtin_ve_vl_vslawzx_vvsl
-fapple-pragma-pack
BinaryOperator
-fstrict-flex-arrays=
__builtin_ve_vl_pvsla_vvvl
-fapple-kext
iphoneos
-fallow-editor-placeholders
__builtin_ve_vl_pvsla_vvvMvl
-fno-access-control
BlockExpr
-fmax-tokens=
-mno-restrict-it
-cuid=
libclang_rt.
--gpu-max-threads-per-block=
__builtin_ve_vl_vsrawsx_vvvl
-fgpu-exclude-wrong-side-overloads
CXXBindTemporaryExpr
-fgpu-defer-diag
__builtin_ve_vl_vsrawsx_vvvmvl
-fgpu-allow-device-init
_dynamic.dylib
-fhip-new-launch-api
__builtin_ve_vl_vsrawzx_vvsl
-fgpu-default-stream=
CXXConstructExpr
-fgpu-rdc
-fpatchable-function-entry-offset=
-cl-no-signed-zeros
macho_embedded
-cl-fast-relaxed-math
__builtin_ve_vl_pvsra_vvvMvl
-cl-unsafe-math-optimizations
CXXDefaultArgExpr
-cl-finite-math-only
__builtin_ve_vl_vsral_vvsl
-cl-single-precision-constant
-rpath
__builtin_ve_vl_vsfa_vvssl
-verify=
CXXDeleteExpr
-Wno-rewrite-macros
-mno-retpoline-external-thunk
-fcaret-diagnostics-max-lines
@executable_path
-fspell-checking-limit
__builtin_ve_vl_vfaddd_vsvl
-fconstexpr-backtrace-limit
CXXFoldExpr
-ftemplate-backtrace-limit
__builtin_ve_vl_vfaddd_vsvmvl
-fmacro-backtrace-limit
MacOSX
-ferror-limit
__builtin_ve_vl_vfadds_vsvl
-ftabstop
Reserve the x26 register (AArch64/RISC-V only)
-fno-diagnostics-use-presumed-location
-fno-allow-editor-placeholders
-fdiagnostics-show-category
iPhone
-fdiagnostics-format
__builtin_ve_vl_pvfadd_vsvl
CXXNullPtrLiteralExpr
-pedantic
__builtin_ve_vl_vfsubd_vvvl
-pedantic-errors
AppleTV
-fno-show-source-location
__builtin_ve_vl_vfsubd_vvvmvl
-fno-show-column
CXXRewrittenBinaryOperator
-fshow-overloads=
-mno-rtd
-fdiagnostics-absolute-paths
Watch
-fmessage-length=
__builtin_ve_vl_pvfsub_vvvl
-fno-elide-type
CXXStdInitializerListExpr
-fsafe-buffer-usage-suggestions
__builtin_ve_vl_pvfsub_vvvMvl
-fdiagnostics-show-template-tree
DriverKit
-fdiagnostics-show-note-include-stack
__builtin_ve_vl_vfmuld_vsvl
-fno-diagnostics-show-option
CXXThrowExpr
-fdiagnostics-print-source-range-info
-fdiagnostics-parseable-fixits
Bridge
-fno-diagnostics-fixit-info
__builtin_ve_vl_vfmuls_vvvmvl
-fansi-escape-codes
CXXUnresolvedConstructExpr
-fno-caret-diagnostics
__builtin_ve_vl_pvfmul_vsvl
-Wundef-prefix=
-fcas-plugin-option
__builtin_ve_vl_vfdivd_vvvl
-fcas-plugin-path
CallExpr
-fcas-path
-mno-sahf
Not an integer: %s
SepOS
__builtin_ve_vl_vfdivs_vsvl
Error in reading profile %0: %1
CXXMemberCallExpr
RootID does not exist
__builtin_ve_vl_vfsqrtd_vvl
iossim
positive-zero
__builtin_ve_vl_vfcmpd_vvvl
preserve-sign
UserDefinedLiteral
ieee
-fno-altivec
-fdebug-pass-manager
tvossim
-fcuda-include-gpubinary
__builtin_ve_vl_vfcmps_vsvl
-fexperimental-optimized-argument-temporaries
ExplicitCastExpr
-fpass-by-value-is-noalias
__builtin_ve_vl_pvfcmp_vvvl
-fpreserve-vec3-type
watchossim
-stack-protector-buffer-size
__builtin_ve_vl_pvfcmp_vvvMvl
-fobjc-dispatch-method=
CStyleCastExpr
-split-dwarf-file
Disable using library calls for save and restore
-split-dwarf-output
xros
-main-file-name
__builtin_ve_vl_vfmaxs_vvvl
-opt-record-file
CXXNamedCastExpr
-emit-llvm-uselists
__builtin_ve_vl_vfmaxs_vvvmvl
-discard-value-names
xrossim
-no-opaque-pointers
__builtin_ve_vl_pvfmax_vsvl
-no-enable-noundef-analysis
CXXConstCastExpr
-clear-ast-before-backend
Generate M NOPs before function entry and N-M NOPs after function entry
-fctor-dtor-return-this
___gcov_dump
-ehcontguard
__builtin_ve_vl_vfmind_vvvmvl
-cfguard
CXXReinterpretCastExpr
-cfguard-no-checks
__builtin_ve_vl_vfmins_vsvl
-fwarn-stack-size=
___gcov_reset
-fverify-debuginfo-preserve-export=
__builtin_ve_vl_pvfmin_vvvl
-fverify-debuginfo-preserve
ObjCBridgedCastExpr
-flto-unit
-mno-seses
-flto-visibility-public-std
_writeout_fn_list
-fprofile-instrument-use-path=
V256dV256dV256dV256dV256dUi
-fprofile-instrument-path=
CharacterLiteral
-fprofile-instrument=
__builtin_ve_vl_vfmadd_vvsvl
-fpatchable-function-entry-offset=
_reset_fn_list
-fexperimental-sanitize-metadata=atomics
-fdirectives-only
-fexperimental-sanitize-metadata=covered
-ffixed-x27
-fsanitize-coverage-trace-stores
-fno-analyzed-objects-for-unparse
-fsanitize-coverage-trace-loads
___llvm_profile_filename
-fsanitize-coverage-stack-depth
__builtin_ve_vl_vfmads_vsvvl
-fsanitize-coverage-no-prune
ConvertVectorExpr
-fsanitize-coverage-trace-pc-guard
V256dV256dfV256dUi
-fsanitize-coverage-trace-pc
___llvm_profile_raw_version
-fsanitize-coverage-control-flow
__builtin_ve_vl_vfmads_vsvvmvl
-fsanitize-coverage-pc-table
CoawaitExpr
-fsanitize-coverage-inline-bool-flag
-mno-sgx
-fsanitize-coverage-inline-8bit-counters
ubsan
-fsanitize-coverage-8bit-counters
V256dLUiV256dV256dV256dUi
-fsanitize-coverage-trace-gep
DeclRefExpr
-fsanitize-coverage-trace-div
__builtin_ve_vl_pvfmad_vvvvMvl
-fsanitize-coverage-trace-cmp
xray
-fsanitize-coverage-trace-bb
__builtin_ve_vl_pvfmad_vvsvMvl
-fsanitize-coverage-indirect-calls
DependentScopeDeclRefExpr
-fsanitize-coverage-type=
-fpcc-struct-return
--linker-option=
xray-basic
-fapple-kext-vtable-mitigation
__builtin_ve_vl_vfmsbd_vvvvmvl
--dependent-lib=
DesignatedInitUpdateExpr
-vectorize-slp
__builtin_ve_vl_vfmsbs_vvvvvl
-vectorize-loops
xray-fdr
-mconstructor-aliases
__builtin_ve_vl_vfmsbs_vvsvvl
-funwind-tables=
ExtVectorElementExpr
-msmall-data-limit
-mno-shstk
-mregparm
-lSystem
-mlimit-float-precision
__builtin_ve_vl_pvfmsb_vvsvl
-mfloat-abi
FixedPointLiteral
-mframe-pointer=
__builtin_ve_vl_pvfmsb_vvsvMvl
-mdebug-pass
-lgcc_s.1
-no-struct-path-tbaa
__builtin_ve_vl_vfnmadd_vsvvvl
-relaxed-aliasing
ForgePtrExpr
-fuse-register-sized-bitfield-access
Do not use the analyzed objects when unparsing
-dump-coverage-mapping
/XcodeDefault.xctoolchain/usr/include
-coverage-notes-file
__builtin_ve_vl_vfnmads_vsvvl
-coverage-data-file
ConstantExpr
-fmerge-functions
__builtin_ve_vl_vfnmads_vvvvmvl
-no-implicit-sme
backward
-no-implicit-float
__builtin_ve_vl_pvfnmad_vvvvvl
-fforbid-guard-variables
FunctionParmPackExpr
-debug-forward-template-params
-mno-simd128
-dwarf-explicit-import
ignoring nonexistent directory "
-dwarf-ext-refs
__builtin_ve_vl_vfnmsbd_vvvvl
-disable-red-zone
GenericSelectionExpr
-disable-O0-optnone
__builtin_ve_vl_vfnmsbd_vvsvl
-disable-lifetime-markers
4.2.1
-disable-llvm-passes
__builtin_ve_vl_vfnmsbd_vvsvmvl
-disable-llvm-verifier
ImaginaryLiteral
-as-secure-log-file
-fpch-codegen
-mno-type-check
powerpc-apple-darwin10
-msave-temp-labels
__builtin_ve_vl_vfnmsbs_vsvvmvl
--mrelax-relocations
InitListExpr
-massembler-fatal-warnings
__builtin_ve_vl_pvfnmsb_vsvvl
-massembler-no-warn
4.0.0
-mnoexecstack
__builtin_ve_vl_pvfnmsb_vvvvMvl
-compress-debug-sections=
LambdaExpr
-record-command-line
-mno-soft-float
-extend-lifetimes=
i686-apple-darwin10
-dwarf-debug-flags
__builtin_ve_vl_pvrcp_vvvl
-debugger-tuning=
MSPropertySubscriptExpr
-dwarf-version=
__builtin_ve_vl_vrsqrts_vvvl
-default-function-attr
i686-apple-darwin8
-debug-info-macro
__builtin_ve_vl_vrsqrtdnex_vvvl
-mrelocation-model
Reserve the x27 register (AArch64/RISC-V only)
-fno-integrated-as
-fno-apinotes-modules
arm-apple-darwin10
-object-file-name=
__builtin_ve_vl_vcvtwdsxrz_vvl
-mpacked-stack
MemberExpr
-mrecord-mcount
__builtin_ve_vl_vcvtwdzx_vvvl
-mnop-mcount
-mfentry
__builtin_ve_vl_vcvtwdzxrz_vvmvl
-mstack-protector-guard-reg=
OMPArraySectionExpr
-mstack-protector-guard-symbol=
-mno-spe
-mstack-protector-guard-offset=
-mstack-protector-guard=
__builtin_ve_vl_vcvtwszx_vvvl
-mprefer-vector-width=
OMPIteratorExpr
-mrecip=
__builtin_ve_vl_vcvtwszxrz_vvmvl
-msoft-float
arm64-apple-darwin10
-mincremental-linker-compatible
__builtin_ve_vl_pvcvtwsrz_vvl
-mrelax-all
ObjCBoolLiteralExpr
-mbackchain
-fpch-debuginfo
-mno-amdgpu-ieee
iOS 7
-fno-aapcs-bitfield-width
__builtin_ve_vl_vcvtldrz_vvmvl
-faapcs-bitfield-load
ObjCIndirectCopyRestoreExpr
-mspeculative-load-hardening
__builtin_ve_vl_vcvtsw_vvvl
-mno-tls-direct-seg-refs
OS X 10.9
-mno-stack-arg-probe
__builtin_ve_vl_vcvtdl_vvvl
-mstack-probe-size=
ObjCIvarRefExpr
-mstack-alignment=
-mno-sse3
-mstackrealign
libstdc++.dylib
-mskip-rax-setup
__builtin_ve_vl_vmrg_vsvml
-mtls-size=
ObjCObjectLiteral
-inline-asm=
V256dV256dV256dV512bUi
-gembed-source
libstdc++.6.dylib
-gsrc-hash=
__builtin_ve_vl_vmrgw_vsvMvl
-gno-column-info
ObjCBoxedExpr
-gstrict-dwarf
Disable module-based external API notes support
-greproducible
/usr/lib/libstdc++.dylib
-gno-inline-line-tables
__builtin_ve_vl_vfmklat_ml
-gcodeview-ghash
ObjCStringLiteral
-gcodeview
V512bUi
-gdwarf64
/usr/lib/libstdc++.6.dylib
-femit-dwarf-unwind=
__builtin_ve_vl_vfmklgt_mvml
-fforce-dwarf-frame
ObjCProtocolExpr
-fsplit-dwarf-inlining
-mno-sse4.2
-fdebug-ranges-base-address
libclang_rt.cc_kext_watchos.a
-fzero-call-used-regs=
__builtin_ve_vl_vfmklge_mvl
-fno-strict-return
ObjCSubscriptRefExpr
-fsplit-machine-functions
__builtin_ve_vl_vfmklnum_mvl
-fno-unique-section-names
libclang_rt.cc_kext_tvos.a
-funique-internal-linkage-names
__builtin_ve_vl_vfmklgtnan_mvl
-funique-basic-block-section-names
OpaqueValueExpr
-stack-usage-file
-fpch-instantiate-templates
-fstack-size-section
libclang_rt.cc_kext_bridgeos.a
-fdata-sections
__builtin_ve_vl_vfmklgenan_mvl
-fbasic-block-sections=
UnresolvedLookupExpr
-ffunction-sections
__builtin_ve_vl_vfmkwgt_mvl
-fno-zero-initialized-in-bss
libclang_rt.cc_kext_ios.a
-fvirtual-function-elimination
__builtin_ve_vl_vfmkwne_mvl
-fforce-emit-vtables
PackExpansionExpr
-fsplit-lto-unit
-mno-sse4
-fwhole-program-vtables
libclang_rt.cc_kext_
-fno-use-init-array
__builtin_ve_vl_vfmkwnum_mvl
-fregister-global-dtors-with-atexit
ParenListExpr
-freroll-loops
__builtin_ve_vl_vfmkwgtnan_mvl
-ftrap-function-returns
libclang_rt.cc_kext.a
-ftrap-function=
-fdebugger-cast-result-to-id
-ftls-model=
-ffixed-x28
-ftime-report=
-fno-apinotes
-ftime-report
pentium2
-fstrict-vtable-pointers
__builtin_ve_vl_pvfmkwlogt_mvl
-fstrict-enums
RecoveryExpr
-fstack-clash-protection
__builtin_ve_vl_pvfmkwlolt_mvl
-fsplit-stack
pentiumpro
-fno-preserve-as-comments
__builtin_ve_vl_pvfmkwlone_mvl
-fpass-plugin=
SYCLUniqueStableNameExpr
-fno-plt
-mno-ssse3
-fms-hotpatch
armv5tej
-fpatchable-function-entry=
__builtin_ve_vl_pvfmkwloge_mvl
-fno-escaping-block-tail-calls
SizeOfPackExpr
-fno-optimize-sibling-calls
__builtin_ve_vl_pvfmkwlole_mvl
-fobjc-avoid-heapify-local-blocks
armv6k
-fgeneric-block-helpers-use-extended-layout
__builtin_ve_vl_pvfmkwlonum_mvl
-fgeneric-block-helpers
StmtExpr
-fin-descriptor-block-flags
-fpch-preprocess
-fobjc-arc-exceptions
armv7a
-fobjc-msgsend-selector-stubs
__builtin_ve_vl_pvfmkwlogtnan_mvl
-fno-objc-convert-messages-to-runtime-calls
SubstNonTypeTemplateParmExpr
-fno-verbose-asm
__builtin_ve_vl_pvfmkwloltnan_mvl
-fno-use-cxa-atexit
_pic
-fveclib=
__builtin_ve_vl_pvfmkwlonenan_mvl
-fno-assume-sane-operator-new
TerminatedByFromIndexableExpr
-fmerge-all-constants
Disable stack probes which are enabled by default
-fthin-link-bitcode=
_static
-ffine-grained-bitfield-accesses
__builtin_ve_vl_pvfmkwlogenan_mvl
-fxray-selected-function-group=
TypeTraitExpr
-fxray-function-groups=
__builtin_ve_vl_pvfmkwlolenan_mvl
-fno-xray-function-index
-fno-builtin-malloc
-fxray-ignore-loops
__builtin_ve_vl_pvfmkwgt_Mvl
-fxray-instruction-threshold=
UnaryExprOrTypeTraitExpr
-mindirect-branch-cs-prefix
Disable external API notes support
-mfunction-return=
-darwin-target-variant-sdk-version=
-finstrument-function-entry-bare
__builtin_ve_vl_pvfmkweq_Mvl
-finstrument-functions-after-inlining
VAArgExpr
-finstrument-functions
__builtin_ve_vl_pvfmkwle_Mvl
-fjmc
-fdepfile-entry=
-finline-max-stacksize=
__builtin_ve_vl_pvfmkwnan_Mvl
-frewrite-map-file=
WhileStmt
-fno-delete-null-pointer-checks
-mno-tail-call
-fno-strict-float-cast-overflow
RC_DEBUG_OPTIONS
-fsanitize-undefined-strip-path-components=
__builtin_ve_vl_pvfmkweqnan_Mvl
-fsanitize-stats
AdjustedType
-fsanitize-cfi-canonical-jump-tables
__builtin_ve_vl_pvfmkwlenan_Mvl
-fsanitize-cfi-icall-generalize-pointers
RC_DEBUG_PREFIX_MAP
-fsanitize-cfi-cross-dso
__builtin_ve_vl_vfmkdlt_mvl
-fsanitize-minimal-runtime
ArrayType
-fno-sanitize-memory-param-retval
Validate PCH input files based on content if mtime differs
-fsanitize-address-destructor=
-watchos_version_min
-fsanitize-address-use-odr-indicator
__builtin_ve_vl_vfmkdle_mvl
-fsanitize-address-globals-dead-stripping
DependentSizedArrayType
-fsanitize-address-poison-custom-array-cookie
__builtin_ve_vl_vfmkdnan_mvl
-fsanitize-address-use-after-return=
-watchos_simulator_version_min
-fsanitize-address-use-after-scope
__builtin_ve_vl_vfmkdltnan_mvl
-fsanitize-memory-use-after-dtor
VariableArrayType
-fsanitize-memory-track-origins=
-mno-tgsplit
-fsanitize-coverage-ignorelist=
-tvos_version_min
-fsanitize-coverage-allowlist=
__builtin_ve_vl_vfmkdlenan_mvl
-fsymbol-partition=
AttributedType
-fkeep-static-consts
__builtin_ve_vl_vfmkslt_mvl
-fno-jump-tables
-tvos_simulator_version_min
-femulated-tls
__builtin_ve_vl_vfmkseq_mvl
-fno-dwarf-directory-asm
Reserve the x28 register (AArch64/RISC-V only)
-fcommon
-fno-apple-pragma-pack
-faddrsig
-bridgeos_version_min
-fswift-async-fp=
__builtin_ve_vl_vfmksnan_mvl
-fprofile-selected-function-group=
BuiltinType
-fprofile-function-groups=
__builtin_ve_vl_vfmksltnan_mvl
-fpseudo-probe-for-profiling
-driverkit_version_min
-fprofile-update=
__builtin_ve_vl_vfmkseqnan_mvl
-fprofile-exclude-files=
DecltypeType
-fprofile-filter-files=
-mno-thumb
-ftest-coverage
-ios_simulator_version_min
-fprofile-arcs
__builtin_ve_vl_pvfmkslogt_mvml
-fprofile-remapping-file=
AutoType
-fdebug-info-for-profiling
__builtin_ve_vl_pvfmkslolt_mvml
-fcoverage-compilation-dir=
-iphoneos_version_min
-fdebug-compilation-dir=
__builtin_ve_vl_pvfmkslone_mvml
-fprofile-sample-accurate
DependentAddressSpaceType
-fprofile-sample-use=
-fpermissive
-mwatch-bitcode-compatibility
-maccatalyst_version_min
sycl-1.2.1
__builtin_ve_vl_pvfmksloge_mvml
1.2.1
DependentNameType
__builtin_ve_vl_pvfmkslole_mvml
2017
-macosx_version_min
2020
__builtin_ve_vl_pvfmkslonum_mvml
DependentTemplateSpecializationType
short
Disable direct TLS access through segment registers
char
-lcrt0.o
regcall
__builtin_ve_vl_pvfmkslogtnan_mvml
vectorcall
DynamicBoundPointerType
stdcall
__builtin_ve_vl_pvfmksloltnan_mvml
fastcall
crt3.o
cdecl
__builtin_ve_vl_pvfmkslonenan_mvml
DynamicRangePointerType
-fno-application-extension
non-legacy
tsan_tvos_dynamic
libstdc++
__builtin_ve_vl_pvfmkslogenan_mvml
libc++
FunctionType
migrate
__builtin_ve_vl_pvfmkslolenan_mvml
modify
tsan_ios_dynamic
check
__builtin_ve_vl_pvfmkslt_Mvl
FunctionProtoType
SARIF
-mno-type-check
sarif
-lto-pass-remarks-output
__builtin_ve_vl_pvfmksle_Mvl
msvc
MacroQualifiedType
only-direct-system
__builtin_ve_vl_pvfmksnan_Mvl
textual
.opt.
csllvm
__builtin_ve_vl_pvfmksltnan_Mvl
llvm
ConstantMatrixType
zstd
-fpic
zlib
-lto-pass-remarks-filter=
arguments
__builtin_ve_vl_pvfmkslenan_Mvl
this
MemberPointerType
V256dV256dV256bUi
-lto-pass-remarks-format=
lldb
__builtin_ve_vl_vsuml_vvml
ObjCObjectType
dynamic-no-pic
-mno-uintr
ropi-rwpi
-lto-pass-remarks-with-hotness
rwpi
__builtin_ve_vl_vrmaxswlstsx_vvvl
ropi
ObjCTypeParamType
__builtin_ve_vl_vrmaxswlstzx_vvvl
static
-lto-pass-remarks-hotness-threshold=
Disable the module hash
-ffixed-x29
mixed
-fno-approx-func
libsystem_pthread
__builtin_ve_vl_vrmaxsllst_vvvl
PointerType
__builtin_ve_vl_vrminsllst_vvvl
posix
libsystem_kernel
intel
__builtin_ve_vl_vfrmaxdlst_vvvl
LValueReferenceType
sha256
Force all memory accesses to be aligned (AArch32/AArch64 only)
sha1
libkxld
__builtin_ve_vl_vfrmindlst_vvvl
no-compact-unwind
SubstTemplateTypeParmPackType
all-arg
__builtin_ve_vl_vfrminslst_vvvl
all-gpr
libsystem_platform
all-gpr-arg
__builtin_ve_vl_vror_vvml
used
TagType
used-arg
-fpie
used-gpr
darwin::Lipo
used-gpr-arg
__builtin_ve_vl_vgtnc_vvssl
skip
RecordType
explicit
__builtin_ve_vl_vgtu_vvssl
hidden
darwin::Dsymutil
default
__builtin_ve_vl_vgtunc_vvssl
local-exec
TemplateTypeParmType
initial-exec
-mno-vaes
local-dynamic
darwin::VerifyDebug
pattern
__builtin_ve_vl_vgtlsxnc_vvssl
zero
TypeOfType
uninitialized
__builtin_ve_vl_vgtlzx_vvssl
best
darwin::Linker
Darwin_libsystem_m
__builtin_ve_vl_vgtlzxnc_vvssl
SVML
UnaryTransformType
MASSV
-fno-asm-blocks
libmvec
darwin::StaticLibTool
Accelerate
__builtin_ve_vl_vscnc_vvssl
virtual
UsingType
multiple
__builtin_ve_vl_vscncot_vvssl
single
static-lib-linker
integer
__builtin_ve_vl_vscunc_vvssl
global
VectorType
runtime
-mno-vpclmulqdq
darwin::Assembler
__builtin_ve_vl_vsclnc_vvssl
strict
OMPClause
maytrap
__builtin_ve_vl_vsclncot_vvssl
ignore
Toolchains/XcodeDefault.xctoolchain/usr
extended
__builtin_ve_vl_andm_MMM
double
OMPAcquireClause
source
-fplugin-arg-
wasm
.app/Contents/Developer
__builtin_ve_vl_nndm_mmm
sjlj
OMPAlignClause
dwarf
__builtin_ve_vl_negm_MM
swift-4.1
-exported_symbols_list
swift-4.2
__builtin_ve_vl_lzvm_sml
swift-5.0
OMPAllocateClause
swift
-mno-vx
objc
-exported_symbol
unspecified
-fd-lines-as-code
never
Enable casting unknown expression results to id
always
-fdiscard-value-names
marker
-sectalign
bitcode
Pass <arg> to plugin <name>
__builtin_wasm_memory_size
__builtin_wasm_memory_grow
per-thread
OMPCollapseClause
legacy
__builtin_wasm_tls_align
-fembed-bitcode=
OMPCompareClause
-fembed-offload-object=
__builtin_wasm_max_f32
-fno-autolink
WatchOS
-falign-loops=
vIUiv*
-fhip-kernel-arg-name
OMPCopyinClause
-fno-hip-fp32-correctly-rounded-divide-sqrt
-mno-waitpkg
-cl-uniform-work-group-size
BridgeOS
-cl-fp32-correctly-rounded-divide-sqrt
Uii*Ui
-cl-mad-enable
OMPDefaultmapClause
-cl-kernel-arg-info
__builtin_wasm_trunc_u_i32_f64
-platform_version
silence-checkers
__builtin_wasm_trunc_u_i64_f64
exploration_strategy
OMPDepobjClause
c++-inlining
<name>-<arg>
model-path
-simulator
ctu-invocation-list
__builtin_wasm_trunc_saturate_s_i64_f64
ctu-index-name
OMPDetachClause
ctu-dir
__builtin_wasm_add_sat_s_i8x16
region-store-small-array-limit
mac catalyst
region-store-small-struct-limit
__builtin_wasm_sub_sat_s_i8x16
ctu-phase1-inlining
OMPDistScheduleClause
ctu-max-nodes-min
-mno-wavefrontsize64
ctu-max-nodes-pct
-ldylib1.o
max-nodes
__builtin_wasm_abs_i64x2
max-inlinable-size
OMPExclusiveClause
max-times-inline-large
__builtin_wasm_max_s_i8x16
max-symbol-complexity
-ldylib1.10.5.o
min-cfg-size-treat-functions-as-large
__builtin_wasm_max_s_i16x8
graph-trim-interval
OMPFinalClause
ipa-always-inline-size
-fno-associative-math
ctu-import-threshold
ctu-import-cpp-threshold
__builtin_wasm_popcnt_i8x16
ignore-flex-generated-files
OMPFlushClause
ignore-bison-generated-files
__builtin_wasm_extadd_pairwise_i8x16_u_i16x8
assume-controlled-environment
-lgcrt0.o
support-symbolic-integer-casts
consider-single-element-arrays-as-flexible-array-members
OMPFullClause
display-checker-name
-mno-wbnoinvd
apply-fixits
-lgcrt1.o
-lcrt1.o
track-conditions-debug
OMPHasDeviceAddrClause
__builtin_wasm_max_f64x2
widen-loops
OMPInclusiveClause
inline-lambdas
__builtin_wasm_floor_f32x4
elide-constructors
-lcrt1.3.1.o
-lcrt1.10.5.o
OMPIsDevicePtrClause
add-pop-up-notes
-mno-x87
serialize-stats
prune-paths
OMPLinearClause
verbose-report-filename
faux-bodies
unroll-loops
V16UcV8sV8s
__builtin_wasm_laneselect_i8x16
__builtin_wasm_laneselect_i16x8
__builtin_wasm_laneselect_i32x4
__builtin_wasm_relaxed_swizzle_i8x16
__builtin_wasm_relaxed_min_f32x4
__builtin_wasm_relaxed_max_f32x4
__builtin_wasm_relaxed_max_f64x2
__builtin_wasm_relaxed_trunc_s_i32x4_f32x4
__builtin_wasm_relaxed_trunc_u_i32x4_f32x4
__builtin_wasm_relaxed_trunc_s_zero_i32x4_f64x2
__builtin_wasm_relaxed_trunc_u_zero_i32x4_f64x2
__builtin_wasm_relaxed_q15mulr_s_i16x8
__builtin_wasm_dot_i8x16_i7x16_s_i16x8
OMPNontemporalClause
c++-stdlib-inlining
-mno-xop
c++-template-inlining
--enable-new-dtags
cfg-expand-default-aggr-inits
V8sV16ScV16Sc
__builtin_wasm_dot_i8x16_i7x16_add_s_i32x4
V4iV16ScV16ScV4i
__builtin_wasm_relaxed_dot_bf16x8_add_f32_f32x4
cfg-scopes
OMPNumTasksClause
cfg-rich-constructors
V4fV8UsV8UsV4f
sign-ext
mutable-globals
cfg-loopexit
elf_i386
cfg-lifetime
tail-call
__wasm_simd128__
__wasm_relaxed_simd__
__wasm_nontrapping_fptoint__
__wasm_sign_ext__
__wasm_exception_handling__
__wasm_bulk_memory__
__wasm_atomics__
__wasm_mutable_globals__
__wasm_multivalue__
__wasm_tail_call__
__wasm_reference_types__
__wasm_extended_const__
bleeding-edge
-tail-call
+reference-types
-reference-types
+extended-const
-extended-const
wasm32
wasm64
generic
cfg-temporary-dtors
OMPNumThreadsClause
cfg-implicit-dtors
Look up implicit modules in the prebuilt module path
mode
gcrt1.o
-cc1
Assume functions may be convergent
a_key
-fcoro-aligned-allocation
-fcoverage-mapping
-fdefault-calling-conv
Scrt1.o
-fdebugger-objc-literal
clc++
-fprebuilt-module-path=
gnu++03
-mno-xsaveopt
c++03
gnu18
sse2
iso9899:2018
OMPProcBindClause
iso9899:2017
-L/usr/lib/gcc80
iso9899:2011
-crc32
iso9899:1999
OMPReductionClause
gnu90
-mno-xsaves
iso9899:1990
/usr/lib/gcc80
+avx512er
-fsanitize=
OMPReleaseClause
+disableObjCConstantLiterals
+avx512bitalg
+thisNoNullAttr
-lpthread
+thisNoAlignAttr
+avx512vbmi2
+revertcff6dda604cb
OMPSafelenClause
+revert09abecef7bbf
-mno-xsave
+disablePtrauthPacError
-lgcc_pic
+enableAggressiveVLAFolding
+fxsr
-enableObjCImplicitClassTypeCoercion
OMPSeqCstClause
+enableObjCImplicitClassTypeCoercion
+xsaves
-legacyAvailabilityTempWorkaround
--as-needed
+legacyAvailabilityTempWorkaround
+clwb
-enableObjCNumericLiteralWithoutAt
OMPSIMDClause
+enableObjCNumericLiteralWithoutAt
Specify the prebuilt module path
+useNonPrimaryObjCCategoryDecl
--no-as-needed
-zeroInitializeGlobalsBeforeEvaluating
+widekl
+zeroInitializeGlobalsBeforeEvaluating
OMPSizesClause
+disableOVEimplicitConv
+movdiri
-disableNullSanitizerCheckForPointerSanitizer
dragonfly::Assembler
+disableNullSanitizerCheckForPointerSanitizer
+invpcid
+fixedEnumsInClassScopeCXX98
OMPThreadLimitClause
-disableNonDependentMemberExprInCurrentInstantiation
-mnocrc
+disableNonDependentMemberExprInCurrentInstantiation
dragonfly::Linker
+disableNeonImmediateRangeCheck
+tsxldtrk
+allowStaticMemberInLocalRecord
OMPToClause
-allowStaticMemberInAnonymousUnion
+mmx
+allowStaticMemberInAnonymousUnion
-fc1
+allowFormatBooleanCheck
__amd64__
-allowFormatVoidPointerWithStringSpecifier
OMPUnifiedSharedMemoryClause
+allowFormatVoidPointerWithStringSpecifier
-fno-async-exceptions
-disableInferNewAvailabilityFromInit
-emit-ast
+disableInferNewAvailabilityFromInit
__attribute__((address_space(256)))
-messageToSelfInClassMethodIdReturnType
OMPUpdateClause
+messageToSelfInClassMethodIdReturnType
__tune_pentium_mmx__
+nullptrToBoolConversion
flang-new
b_key
nocona
non-leaf
OMPUseDeviceAddrClause
latest
-mnoexecstack
15.0
flang frontend
14.0
__k6_2__
12.0
OMPUsesAllocatorsClause
11.0
-mabi
Attr
-fpreserve-as-comments
fast-honor-pragmas
znver3
AnnotateTypeAttr
__VAES__
fast
__LZCNT__
-verify-ignore-unexpected=
ArmNewZAAttr
-mnontrapping-fptoint
no-pass-missed
no-pass-analysis
__RDSEED__
no-pass
ArmSharedZAAttr
__MWAITX__
remark
-mfpu=vfp
note
__SSE4A__
expected
ArmStreamingCompatibleAttr
-fsanitize-trap=
-fno-asynchronous-unwind-tables
-fsanitize-recover=
-mfpu=softvfp
-fdiagnostics-misexpect-tolerance=
__AVX512ER__
-fdiagnostics-hotness-threshold=
CmseNSCallAttr
-fdiagnostics-show-hotness
__AVX512BITALG__
global-dynamic
-meabi=5
large
__AVX512VBMI2__
keep
ObjCGCAttr
-fxray-instrumentation-bundle=
Generate mcount/__fentry__ calls as nops. To activate they need to be patched in.
-x ir
-matpcs
none
__XSAVES__
ObjCKindOfAttr
auto
__WBNOINVD__
pass-analysis
--debug-prefix-map
pass-missed
__CLZERO__
pass
OpenCLGenericAddressSpaceAttr
thunk-extern
Preserve 3-component vector type
branch
/libexec/ld-elf.so.1
return
__MOVDIR64B__
memprof.profraw
OpenCLGlobalDeviceAddressSpaceAttr
__ENQCMD__
thin
--hash-style=both
full
__AMXBF16__
per-pass-run
OpenCLLocalAddressSpaceAttr
mangled
Enable generation of new-value jumps
simple
elf_i386_fbsd
__AVX2__
PointerAuthAttr
unused-types
__SSSE3__
standalone
elf32ppc_fbsd
limited
__SSE__
constructor
-ffixed-x30
line-directives-only
-fno-auto-profile-accurate
line-tables-only
elf32lppc
3dnow
imported module
PtrAutoNullTerminatedAttrAttr
missing main output
amx-tile
result module doesn't exist in CAS
elf32btsmip_fbsd
no such entry in action cache; expected compile:
avx512vnni
Module Compile
TypeNonNullAttr
LLBUILD_TASK_ID
Enable generation of new-value stores
module.modulemap
elf32ltsmip_fbsd
module.private.modulemap
avx512vl
module.map
TypeNullableAttr
module_private.map
avx512vp2intersect
__inferred_module.map
elf32btsmipn32_fbsd
modules.idx
clflushopt
.timestamp
UPtrAttr
.pcm
-fproc-stat-report=
modules.timestamp
elf64btsmip_fbsd
fxsr
_Private
FallThroughAttr
 -> 
Module Load
elf32ltsmipn32_fbsd
Loading 
mwaitx
loading.
MustTailAttr
Preloading 
Enable odd single-precision floating point registers
preloading.
elf64ltsmip_fbsd
Reading modules
reading_modules
SuppressAttr
sse3
 when compiling for 
elf32lriscv
 when compiling for host
tsxldtrk
 generated
AlwaysInlineAttr
 error
-fno-auto-profile
 and 
elf64lriscv
xsaves
 warning
NoInlineAttr
 default target 
broadwell
clang -cc1 version 15.0.0
crtbeginT.o
Clang front-end timer
+cmov
Clang front-end time report
AArch64SVEPcsAttr
Directory to dump module dependencies to
-lm_p
llvm::cas::schema::compile_job_result::v1
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt
not a compile job result
AMDGPUKernelCallAttr
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2
-lgcc_p
expected blob for entry 
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512dq,+avx512f,+adx,+avx512cd,+avx512bw,+avx512vl,+clwb
AnyX86NoCfCheckAttr
cas object is not a valid cache key
-fproc-stat-report
computation
-lgcc_eh_p
expected cache key to be a CAS tree; got 
{ax}
unknown module format
FastCallAttr
.pch-final
{si}
.pch
-lpthread_p
LIBCLANG_DISABLE_PCH_VALIDATION
LifetimeBoundAttr
--- %u translation units
Put MODULE files in <dir>
+++ %u translation units
-lc_p
LIBCLANG_OBJTRACKING
argp
LIBCLANG_TIMING
NSReturnsRetainedAttr
xmm1
@UUV@
/usr/lib32/crt1.o
@MG@
xmm5
Reserve the x30 register (AArch64/RISC-V only)
-fno-autolink
/usr/lib32
@FT@
@FI@
PreserveAllAttr
@UUT@
xmm9
/usr/include/c++/4.2
@CT@
xmm13
@NA@
RegCallAttr
Include module files in dependency output
-lc++_p
ymm5
@UD@
SwiftAsyncCallAttr
objc(ext)
ymm9
-lstdc++_p
ymm13
SysVABIAttr
-fprofile-arcs
freebsd::Assembler
xmm21
VectorCallAttr
xmm25
@BT@__ibm128
freebsd::Linker
@BT@__bf16
xmm29
@BT@SatULongFract
SwiftContextAttr
@BT@SatUFract
Provide information about a particular module file
@BT@SatUShortFract
@BT@SatLongFract
ymm21
@BT@SatFract
SwiftIndirectResultAttr
@BT@SatShortFract
ymm25
@BT@SatULongAccum
max-page-size=4096
@BT@SatUAccum
ymm29
@BT@SatUShortAccum
CFConsumedAttr
@BT@SatLongAccum
Disable generation of linker directives for automatic library linking
@BT@SatAccum
@BT@SatShortAccum
zmm5
@BT@ULongFract
NSConsumedAttr
@BT@UFract
zmm9
@BT@UShortFract
rodynamic
@BT@LongFract
zmm13
@BT@Fract
OSConsumedAttr
@BT@ShortFract
Use <suffix> as the suffix for module files (the default value is `.mod`)
@BT@ULongAccum
separate-loadable-segments
@BT@UAccum
zmm21
@BT@UShortAccum
ReleaseHandleAttr
@BT@LongAccum
zmm25
@BT@Accum
@BT@ShortAccum
zmm29
__rvv_bool64_t
HLSLSV_GroupIndexAttr
__rvv_bool32_t
-fprofile-dir=
__rvv_bool16_t
--pack-dyn-relocs=relr
__rvv_bool8_t
__rvv_bool4_t
AMDGPUNumSGPRAttr
__rvv_bool2_t
__rvv_bool1_t
__rvv_float64m8_t
bnd1
__rvv_float64m4_t
AMDGPUWavesPerEUAttr
__rvv_float64m2_t
-momit-leaf-frame-pointer
__rvv_float64m1_t
__rvv_float32m8_t
tmm5
__rvv_float32m4_t
AVRInterruptAttr
__rvv_float32m2_t
__rvv_float32m1_t
--build-id
__rvv_float32mf2_t
-fdollars-in-identifiers
__rvv_float16m8_t
-ffixed-x31
__rvv_float16m4_t
-fno-automatic
__rvv_float16m2_t
--execute-only
__rvv_float16m1_t
__rvv_float16mf2_t
AcquiredBeforeAttr
__rvv_float16mf4_t
__rvv_uint64m8_t
--fix-cortex-a53-843419
__rvv_uint64m4_t
__rvv_uint64m2_t
AlignNaturalAttr
__rvv_uint64m1_t
-moslib=
__rvv_int64m8_t
asan/
__rvv_int64m4_t
r12d
__rvv_int64m2_t
AllocAlignAttr
__rvv_int64m1_t
r13w
__rvv_uint32m8_t
hwasan/
__rvv_uint32m4_t
r14b
__rvv_uint32m2_t
AlwaysDestroyAttr
__rvv_uint32m1_t
Instrument only functions from files where names don't match all the regexes separated by a semi-colon
__rvv_uint32mf2_t
tsan/
__rvv_int32m8_t
__builtin_ia32_undef128
__rvv_int32m4_t
AnyX86InterruptAttr
__rvv_int32m2_t
__rvv_int32m1_t
ld.so.1
__rvv_int32mf2_t
ncV:512:
__rvv_uint16m8_t
ArcWeakrefUnavailableAttr
__rvv_uint16m4_t
Generate local calls to out-of-line atomic operations
__rvv_uint16m2_t
--push-state
__rvv_uint16m1_t
V2iV2f
__rvv_uint16mf2_t
ArmBuiltinAliasAttr
__rvv_uint16mf4_t
__builtin_ia32_pfcmpeq
__rvv_int16m8_t
--pop-state
__rvv_int16m4_t
__builtin_ia32_pfmax
__rvv_int16m2_t
ArtificialAttr
__rvv_int16m1_t
Implies the SAVE attribute for non-automatic local objects in subprograms unless RECURSIVE
__rvv_int16mf2_t
--wrap=pthread_create
__rvv_int16mf4_t
__builtin_ia32_pfrsqit1
__rvv_uint8m8_t
AssertCapabilityAttr
__rvv_uint8m4_t
V2fV2i
__rvv_uint8m2_t
noexcept
__rvv_uint8m1_t
__builtin_ia32_pfnacc
__rvv_uint8mf2_t
AssertSharedLockAttr
__rvv_uint8mf4_t
Enable function outlining (AArch64 only)
__rvv_uint8mf8_t
+fno-exceptions
__rvv_int8m8_t
__builtin_ia32_emms
__rvv_int8m4_t
AssumptionAttr
__rvv_int8m2_t
V2iV2iV2i
__rvv_int8m1_t
+fsanitize=address
__rvv_int8mf2_t
__builtin_ia32_paddusw
__rvv_int8mf4_t
BPFPreserveAccessIndexAttr
__rvv_int8mf8_t
Instrument only functions from files where names match any regex separated by a semi-colon
__vector_pair
asan+noexcept
__vector_quad
__builtin_ia32_pmulhw
__SVCount_t
BlocksAttr
__clang_svboolx4_t
__builtin_ia32_pand
__clang_svboolx2_t
+fsanitize=hwaddress
__SVBool_t
__builtin_ia32_pxor
__clang_svbfloat16x4_t
C11NoReturnAttr
__clang_svfloat64x4_t
Use packed stack layout (SystemZ only).
__clang_svfloat32x4_t
hwasan+noexcept
__clang_svfloat16x4_t
__builtin_ia32_psrlq
__clang_svuint64x4_t
CFGuardAttr
__clang_svuint32x4_t
V4sV4si
__clang_svuint16x4_t
relative-vtables
__clang_svuint8x4_t
V1OiV1Oii
__clang_svint64x4_t
Reserve the x31 register (AArch64/RISC-V only)
__clang_svint32x4_t
-fno-backslash
__clang_svint16x4_t
+fexperimental-relative-c++-abi-vtables
__clang_svint8x4_t
__builtin_ia32_packssdw
__clang_svbfloat16x3_t
CFUnknownTransferAttr
__clang_svfloat64x3_t
__builtin_ia32_punpckhwd
__clang_svfloat32x3_t
relative-vtables+noexcept
__clang_svfloat16x3_t
__builtin_ia32_punpckldq
__clang_svuint64x3_t
CPUSpecificAttr
__clang_svuint32x3_t
Enable generation of instruction packets
__clang_svuint16x3_t
relative-vtables+asan
__clang_svuint8x3_t
vV8cV8cc*
__clang_svint64x3_t
CUDADeviceAttr
__clang_svint32x3_t
__builtin_ia32_vec_init_v2si
__clang_svint16x3_t
relative-vtables+asan+noexcept
__clang_svint8x3_t
__builtin_ia32_vec_init_v8qi
__clang_svbfloat16x2_t
CUDADeviceBuiltinTextureTypeAttr
__clang_svfloat64x2_t
Partition functions into N groups and select only functions in group i to be instrumented using -fprofile-selected-function-group
__clang_svfloat32x2_t
relative-vtables+hwasan
__clang_svfloat16x2_t
V2iV4f
__clang_svuint64x2_t
CUDAHostAttr
__clang_svuint32x2_t
__builtin_ia32_pmaxsw
__clang_svuint16x2_t
relative-vtables+hwasan+noexcept
__clang_svuint8x2_t
__builtin_ia32_pmovmskb
__clang_svint64x2_t
CUDALaunchBoundsAttr
__clang_svint32x2_t
Specify maximum number of prefixes to use for padding
__clang_svint16x2_t
compat
__clang_svint8x2_t
iV4sIi
__SVBFloat16_t
CXX11NoReturnAttr
__SVFloat64_t
V2iV2d
__SVFloat32_t
+fc++-abi=itanium
__SVFloat16_t
__builtin_ia32_cvttpd2pi
__SVUint64_t
CallbackAttr
__SVUint32_t
-fno-backtrace
__SVUint16_t
fexceptions
__SVUint8_t
__builtin_ia32_pabsd
__SVInt64_t
CapturedRecordAttr
__SVInt32_t
V8cV8cV8cIc
__SVInt16_t
fsanitize=address
__SVInt8_t
__builtin_ia32_phsubd
@BT@OCLSampler
CmseNSEntryAttr
@BT@OCLReserveID
-mpascal-strings
@BT@OCLQueue
fsanitize=hwaddress
@BT@OCLClkEvent
__builtin_ia32_psignd
@BT@OCLEvent
ColdAttr
intel_sub_group_avc_ime_dual_reference_streamin_t
__builtin_ia32_comigt
intel_sub_group_avc_ime_single_reference_streamin_t
fexperimental-relative-c++-abi-vtables
intel_sub_group_avc_ime_result_dual_reference_streamout_t
__builtin_ia32_ucomilt
intel_sub_group_avc_ime_result_single_reference_streamout_t
ConstAttr
intel_sub_group_avc_sic_result_t
-fprofile-generate=
intel_sub_group_avc_ref_result_t
fc++-abi=itanium
intel_sub_group_avc_ime_result_t
__builtin_ia32_comisdgt
intel_sub_group_avc_mce_result_t
ConstructorAttr
intel_sub_group_avc_sic_payload_t
__builtin_ia32_ucomisdlt
intel_sub_group_avc_ref_payload_t
fuchsia::Linker
intel_sub_group_avc_ime_payload_t
__builtin_ia32_ucomisdneq
intel_sub_group_avc_mce_payload_t
ConsumableAutoCastAttr
-mpconfig
rcsD
image3d
__builtin_ia32_cmpordps
image2d_array_msaa_depth
ConvergentAttr
image2d_msaa_depth
__builtin_ia32_cmpunordss
image2d_array_msaa
rcrt1.o
image2d_msaa
Allow '$' in identifiers
image2d_array_depth
-ffixed-x3
image2d_depth
-fno-bitfield-type-align
image2d_array
max-page-size=0x4000000
image2d
__builtin_ia32_cmpunordpd
image1d_buffer
DLLImportStaticLocalAttr
image1d_array
__builtin_ia32_cmpordpd
image1d
crtbegin_so.o
__builtin_ia32_cmpunordsd
DeprecatedAttr
@BT@
-mpku
crtbegin_static.o
@CM@
__builtin_ia32_maxsd
objc(pl)
DiagnoseAsBuiltinAttr
__builtin_ia32_packsswb128
(py)
crtbegin_dynamic.o
(cpy)
__builtin_ia32_pmulhuw128
(cm)
DisableSanitizerInstrumentationAttr
(im)
-fprofile-generate
objc(cy)
-Bsymbolic
objc(cs)
__builtin_ia32_vec_set_v8hi
requested address out of bound
EmptyBasesAttr
vmaddr is encrypted
__builtin_ia32_haddps
Unsupported ObjC Runtime
-latomic
Method list extends out of the range
__builtin_ia32_phaddw128
Symtab extends out of the range
EnforceTCBAttr
__module_info is not a multiple of objc_module_t size
-mpopcnt
string out of bound
-lgloss
Expect to read a none zero length string
__builtin_ia32_pmulhrsw128
Data extends pass the end of the section
EnumExtensibilityAttr
requested address not in section
__builtin_ia32_psignd128
ObjC Image Info section is too small
-lsoftfp
__objc_methname
__builtin_ia32_stmxcsr
__objc_const
ExcludeFromExplicitInstantiationAttr
__objc_selrefs
Ignore bit-field types when aligning structures
objc protocol section size is not a multiple of pointer size
crtend_so.o
__protocol_list
__builtin_ia32_rcpps
__objc_protolist
ExternalSourceSymbolAttr
objc category section size is not a multiple of pointer size
__builtin_ia32_sqrtps
__category_list
crtend_android.o
__objc_catlist
vV16cV16cc*
objc class section size is not a multiple of pointer size
FlagEnumAttr
__class_list
-mpower8-vector
__objc_classlist
--x32
__TEXT
__builtin_ia32_pshuflw
__DATA
FormatAttr
__DATA_CONST
V2OiV16cV16c
__OBJC2
-mppc
__module_info
__builtin_ia32_cvtpd2dq
__OBJC
FunctionReturnThunksAttr
Unknown future swift version
-fprofile-instr-generate=
5.0 or later
-mbig-endian
4.1/4.2
__builtin_ia32_cvtps2dq
GuardedByAttr
emmintrin.h
-mlittle-endian
_mm_mfence
HIPManagedAttr
-mprefer-vector-width=
-mppc64
#EncryptedString#
__builtin_ia32_psrld128
.hxx
HLSLResourceAttr
.hpp
__builtin_ia32_pslld128
-mfpu=neon
__builtin_ia32_pslldi128
Reserve the x3 register (AArch64/RISC-V only)
/System/Library/PrivateFrameworks/
-fno-blocks
(ObjC Class EH) 
-mfpu=crypto-neon-fp-armv8
(ObjC Class) 
__builtin_ia32_psradi128
(ObjC IVar) 
IBActionAttr
(tlv) 
__builtin_ia32_psrldqi128_byteshift
(weak-ref) 
-mfloat-abi=soft
(weak-def) 
V16ccC*
.tmp
IBOutletCollectionAttr
-%%%%%%%%
-mprefetchwt1
unsupported file type
-mfloat-abi=softfp
_OBJC_IVAR_$_
__builtin_ia32_blendpd
_OBJC_EHTYPE_$_
InternalLinkageAttr
_OBJC_METACLASS_$_
__builtin_ia32_packusdw128
_OBJC_CLASS_$_
-mfloat-abi=hard
.objc_class_name_
__builtin_ia32_roundss
LayoutVersionAttr
.framework
-fprofile-instr-generate
__objc_imageinfo
-mno-shared
unknown/unsupported architecture
iV2OiV2Oi
unknown/unsupported platform
LockReturnedAttr
Requested architectures don't exist
V16cV16cV16cIc
sepos
-call_nonpic
driverkit
__builtin_ia32_vec_set_v16qi
macos
M68kInterruptAttr
/(.+)\.framework/(.+)?Headers/(.+)
-mprfchw
/System/DriverKit/
-mnan=2008
/System/iOSSupport/
V16cV16ciV16ciIc
MSAllocatorAttr
__builtin_ia32_pcmpistric128
(.+)/(.+)\.framework/
-mfpxx
__builtin_ia32_pcmpestria128
headers
MSNoVTableAttr
unsupported version
-fno-borland-extensions
invalid version number
-no-mips16
required field 'version' not specified
__builtin_ia32_extrqi
not a JSON object
MSStructAttr
expect a JSON object
__builtin_ia32_insertqi
swiftCompatibilityHeader
-mmsa
required field 'path' not specified
vd*V2d
unsupported header type
MaxFieldAlignmentAttr
required field 'type' not specified
-mptwrite
___Z
V2OiV2Oi
swift_demangle
MaybeUndefAttr
/usr/lib/swift/libswiftCore.dylib
V4OiV4OiV4Oi
tbd-v5
/crtbegin.o
tbd-v4
__builtin_ia32_aesenclast256
tbd-v3
MinSizeAttr
tbd-v2
-fprofile-instr-use=
tbd-v1
mach-o dynamic library stub
V32cV32cV32cIc
mach-o dynamic library
Mips16Attr
mach-o bundle
avx512bw,gfni
__builtin_ia32_vgf2p8mulb_v16qi
 (spi)
MipsLongCallAttr
mips32
V4OiV4OiV4OiIc
NSConsumesSelfAttr
  access: 
__builtin_ia32_addsubpd256
  linkage: 
march=mips32
USR: 
Enable special debugger support for Objective-C subscripting and literals
  availability: 
-ffixed-x4
-fno-bounds-check
  loc: 
mips32r2
  kind: 
__builtin_ia32_vpermilvarpd
  isThreadLocalValue: 
NakedAttr
  isWeakDefined: 
V4dV4dV4Oi
type defs:
mips32r3
objective-c protocols:
V4dV4dV4dIi
  interfaceName: 
NoCommonAttr
objective-c categories:
  instance variables:
mips32r5
  properties:
__builtin_ia32_shufps256
  methods:
NoDestroyAttr
  protocols:
__builtin_ia32_cmppd256
  categories:
march=mips32r2
  hasExceptionAttribute: 
__builtin_ia32_cmpsd
  superClassName: 
NoInstrumentFunctionAttr
objective-c interfaces:
-fprofile-instr-use
none
mips32r6
package
__builtin_ia32_cvtpd2ps256
public
NoMips16Attr
protected
__builtin_ia32_cvttpd2dq256
private
march=mips32r6
    access: 
__builtin_ia32_vperm2f128_pd256
    setter name: 
NoRandomizeLayoutAttr
    getter name: 
Enable hexagon-qdsp6 backward compatibility
 class
mips64
 dynamic
__builtin_ia32_vpermilps256
 readonly
NoSanitizeAttr
    attributes:
__builtin_ia32_vinsertf128_ps256
    isDynamic: 
march=mips64
    isOptional: 
__builtin_ia32_sqrtpd256
instance
NoSplitStackAttr
    kind: 
-fno-branch-count-reg
  constants:
mips64r2
- name: 
__builtin_ia32_vtestzpd
enums:
NoThreadSafetyAnalysisAttr
  - name: 
__builtin_ia32_vtestcps
globals:
mips64r3
swiftABI
__builtin_ia32_vtestcpd256
Input triple is not expected
NoUniqueAddressAttr
binaryInfo
Specify name of main file output to quote in depfile
potentiallyDefinedSelectors
mips64r5
potentially defined selector is not string
__builtin_ia32_ptestc256
reexportedLibrary is not string
NotTailCalledAttr
reexportedLibraries
__builtin_ia32_movmskps256
allowableClient is not string
octeon+
allowableClients
__builtin_ia32_lddqu256
appExtensionSafe
OMPCaptureNoInitAttr
twoLevelNamespace
-fprofile-instrument-use-path=
parentUmbrella
march=mips64r2
uuid
V4dV4dC*V4Oi
missing install name
OMPDeclareVariantAttr
installName
vV2d*V2OiV2d
expected compatibilityVersion
mips64r6
compatibilityVersion
vV4d*V4OiV4d
expected currentVersion
OSConsumesThisAttr
currentVersion
-mrdpru
un-expected filetype: 
march=mips64r6
invalid
iV8iIi
bundle
OSReturnsRetainedAttr
stub
V16sV16ssIi
expected filetype
mmicromips
type
__builtin_ia32_packsswb256
enum constant should be an object
Reserve the x4 register (AArch64/RISC-V only)
constants
-fno-branch-target-identification
ivar should be an object
muclibc
ivars
__builtin_ia32_pavgb256
cannot find setter
ObjCBridgeMutableAttr
setter
V32cV32cV32cV32c
cannot find getter
mnan=2008
getter
__builtin_ia32_phaddd256
property should be an object
ObjCCompleteDefinitionAttr
properties
-mrdseed
optional
mabi=n32
method should be an object
__builtin_ia32_pmaddwd256
classMethods
ObjCExplicitProtocolImplAttr
instanceMethods
__builtin_ia32_pmuldq256
conformed protocol should be a string
mabi=n64
Expect to be JSON Object
__builtin_ia32_pmulhw256
ObjCIndependentClassAttr
Unknown access control 
-fprofile-instrument=
package
msoft-float
protected
V16sV16sIi
accessControl
ObjCNSObjectAttr
Unknown property attr 
__builtin_ia32_psignd256
class
mhard-float
dynamic
V16sV16sV8s
readonly
ObjCRequiresPropertyDefsAttr
attribute should be string
Allow reassociation transformations for floating-point instructions
attr
threadLocalValue
V4OiV4Oii
weakReferenced
ObjCReturnsInnerPointerAttr
weakDefined
__builtin_ia32_psraw256
Unknown Linkage 
external
__builtin_ia32_psrlwi256
internal
ObjCSubclassingRestrictedAttr
re-exported
-fno-builtin-
exported
/../../..
linkage
__builtin_ia32_pblendd256
Unknown GVKind 
OpenCLIntelReqdSubGroupSizeAttr
variable
__builtin_ia32_permti256
function
0.0.0
kind
V2OiV4OiIi
Unknown access 
OptimizeNoneAttr
private
-mrecip
public
/gcc-cross
access
V4iV4iC*V4i
malformed obsoleted version
OwnerAttr
malformed deprecated version
vV8i*V8iV8i
malformed introduced version
Found candidate GCC installation: 
SPIAvailable
vV4i*V4iV4i
unconditionallyDeprecated
PackedAttr
unavailable
none,clang,llvm,csllvm
obsoleted
Selected GCC installation: 
deprecated
__builtin_ia32_psrav4si
introduced
PatchableFunctionEntryAttr
__builtin_ia32_psrlv2di
line
Candidate multilib: 
file
V4dV4ddC*V4iV4dIc
missing name in json api object
PointerAuthStructAttr
typedefs
Generate a __mcount_loc section entry for each __fentry__ call.
enums
Selected multilib: 
protocols
V8fV8ffC*V8iV8fIc
interfaces
PragmaClangDataSectionAttr
globals
V4fV4ffC*V4OiV4fIc
project
/usr/gcc
interface
Enable '[[]]' attributes in all C and C++ language modes
categories
-ffixed-x5
hasException
Disable implicit builtin knowledge of a specific function
super
/opt/rh
V8iV8iiC*V8iV8iIc
PreferredNameAttr
</plist>
V4iV4iiC*V4OiV4iIc
</array>
/opt/rh/
<array>
V8sV8fIi
<plist version="1.0">
PtGuardedVarAttr
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-mreference-types
<?xml version="1.0" encoding="UTF-8"?>
/root/usr
truncating current version '%0' to fit in 32-bit space used by old mach-o format
__builtin_ia32_fxrstor
violations found for %0
RISCVInterruptAttr
snapshot options are deprecated and will be ignored.
__builtin_ia32_xrstor
skipping framework '%0': %1
/usr
skipping file '%0': %1
UWiUi
SDKDB map has poison entry for %select{class|category|protocol}0 '%1'
ReadOnlyPlacementAttr
new API ObjC selector '%0' in %select{class|category|protocol}1 '%2' in '%3' for target '%4'
Filename defining the list of functions/files to instrument
new API objc %select{class|category|protocol}0 '%1' in '%2' for target '%3'
aarch64-none-linux-gnu
new API %select{symbol|global variable|function}0 '%1' in '%2' for target '%3'
__builtin_ia32_xsavec
new API %select{enum|enum constant|typedef}0 '%1' for target '%2'
ReleaseCapabilityAttr
new %select{frontend API|library '%2'}0 from project '%1' for target '%3'
__builtin_ia32_saveprevssp
missing ObjC protocol '%0' from binary interface
aarch64-linux-gnu
missing ObjC property '%0' in %select{class|category|protocol}1 '%2' from binary interface
__builtin_ia32_wrussd
missing ObjC method '%0' in %select{class|category|protocol}1 '%2' from binary interface
RequiresCapabilityAttr
missing ObjC interface '%0' from binary interface
-mregparm
missing ObjC category '%0(%1)' from binary interface
aarch64-redhat-linux
missing symbol '%0' from binary interface
UcUcUiUiUi*
updating '%0': %1 in %2
RetainAttr
duplicated typedef '%0' inside SDKDB
__builtin_ia32_lzcnt_u16
duplicated ObjC interface '%0' inside SDKDB
aarch64-suse-linux
duplicated ObjC category '%0(%1)' inside SDKDB
__builtin_ia32_tzcnt_u32
duplicated symbol '%0' inside SDKDB
ReturnsNonNullAttr
duplicated enum '%0' inside SDKDB
-fno-builtin
conflicting superclass for objc class '%0': '%1' is not the same as '%2'
aarch64_be-none-linux-gnu
conflict ObjC protocol definition '%0' inside SDKDB
UcUiUiIUi
conflicting install name '%0' from project '%1' and '%2'
SYCLKernelAttr
conflicting declaration for exported symbol '%0'
V4iV4iV4iIc
conflicting availability info for %0: %1 is not the same as %2
aarch64_be-linux-gnu
runpath search paths missing from %0: '%1'
__builtin_ia32_sha256rnds2
runpath search paths do not match: '%0' (provided) vs '%1' (found)
ScopedLockableAttr
reexport_install_name is deprecated, use reexport_framework reexport_l or reexport_library
-mrelax-all
platform specific option for deployment target '%0' is deprecated, use -mtargetos.
arm-linux-gnueabi
no-uuids is deprecated and will be ignored.
__builtin_ia32_vfmaddss
no such %select{public|private}0 umbrella header file: '%1'
SelectAnyAttr
no such %select{public|private}0 pre-include header file: '%1'
__builtin_ia32_vfmaddps256
no such %select{public|private}0 header file: '%1'
arm-linux-gnueabihf
no such excluded %select{public|private}0 header file: '%1'
__builtin_ia32_vfmaddpd512_mask
set-installapi-flag is deprecated and will be ignored.
SetTypestateAttr
no declaration was found for exported symbol '%0' in dynamic library
Use the remappings described in <file> to match the profile data against names in the program
glob '%0' did not match any header file
armv7hl-redhat-linux-gnueabi
could not generate information about '%0' for 32bit injection.
__builtin_ia32_vfmaddps512_mask3
ignoring the Versions directory within framework because it contains no parsable files: '%0'
SpeculativeLoadHardeningAttr
ignoring broken symlink '%0'
__builtin_ia32_vfmaddsubpd512_mask3
Auto zippering was requested, output will be zippered
armv6hl-suse-linux-gnueabi
%0 has incompatible definitions
__builtin_ia32_vfmaddsubps512_mask3
%0 is missing from target %1 but required for target %2
StrictFPAttr
-mrelax-pic-calls
variable %0 has type %1 here
armv7hl-suse-linux-gnueabi
%0 is defined to type %1 here
__builtin_ia32_vpmacsdd
for target %0
SwiftAsyncAttr
return value has type %0 here
__builtin_ia32_vpmacssdqh
%0 conforms to protocol %1
armeb-linux-gnueabi
property %0 has type %1 here
__builtin_ia32_vphaddbw
property %0 has attribute here
Reserve the x5 register (AArch64/RISC-V only)
%0 has property %1 here
Disable implicit builtin knowledge of functions
parameter has type %0 here
armeb-linux-gnueabihf
interface %0 has no corresponding super class here
__builtin_ia32_vphadddq
%0 has no corresponding protocol here
SwiftBridgeAttr
%0 has no corresponding property here
__builtin_ia32_vphaddubq
no corresponding parameter here
armebv7hl-redhat-linux-gnueabi
%0 has no corresponding method here
__builtin_ia32_vphsubbw
%0 has no corresponding ivar here
SwiftErrorAttr
%0 has method %1 here
--mrelax-relocations
%0 has ivar %1 here
csky-linux-gnuabiv2
interface %0 has super class %1 here
__builtin_ia32_vprotbi
interface %0 has type %1 here
SwiftImportPropertyAsAccessorsAttr
interface %0 has inconsistent super class here
__builtin_ia32_vprotdi
field %0 has type %1 here
csky-linux-uclibcabiv2
field has name %0 here
__builtin_ia32_vpshlw
%0 has no corresponding field here
SwiftNewTypeAttr
bit field %0 has width %1 here
-fprofile-sample-accurate
field %0 %select{is not|is}1 bit field here
csky-elf-noneabiv2
%0 has field %1 here
__builtin_ia32_vpcomuw
enumerator %0 with value %1 here
SymbolMetadataFootnoteAttr
enum has type %0 here
__builtin_ia32_vpcomb
declaration has name %0 here
x86_64-linux-gnu
base class %0 %select{is not|is}1 virtual here
__builtin_ia32_vpermil2pd
%0 has %1 base class(es) here
TargetAttr
base class %0 has access specifier '%select{public|protected|private|none}1' here
-mrelaxed-simd
%0 has base class %1 here
x86_64-unknown-linux-gnu
vendor '%0' is not supported: '%1'
__builtin_ia32_vfrczss
os '%0' is not supported: '%1'
TestTypestateAttr
unsupported file type
__builtin_ia32_vfrczps256
environment '%0' is not supported: '%1'
x86_64-pc-linux-gnu
architecture '%0' is not supported: '%1'
__builtin_ia32_xabort
swift generated text based file doesn't have symbol '%0', but found in dynamic library
TransparentUnionAttr
dynamic library doesn't have symbol '%0', but found in swift interface
-fno-c++-static-destructors
regression for ObjC selector '%0' in %select{class|category|protocol}1 '%2' in '%3' for target '%4': %5
x86_64-redhat-linux6E
regression for ObjC %select{class|category|protocol}0 '%1' in '%2' for target '%3': %4
__builtin_ia32_rdtscp
missing target '%0'
TryAcquireCapabilityAttr
missing objc %select{class|category|protocol}0 '%1' in '%2' for target '%3'
__builtin_ia32_rdpkru
missing %select{symbol|global variable|function}0 '%1' in '%2' for target '%3'
x86_64-redhat-linux
missing %select{enum|enum constant|typedef}0 '%1' for target '%2'
__builtin_ia32_sqrtps512
API info missing binary info for target '%0'
TypeVisibilityAttr
missing %select{frontend API|library '%2'}0 from project '%1' for target '%3'
Enable linker relaxation
regression for API '%0' in '%1' for target '%2': %3
x86_64-suse-linux
regression for %select{enum|enum constant|typedef}0 '%1' for target '%2': %3
__builtin_ia32_rsqrt14ps512_mask
relinked libraries missing from %0: '%1'
UnavailableAttr
relinked libraries do not match: '%0' (provided) vs '%1' (found)
__builtin_ia32_rsqrt28ss_round_mask
re-exported library missing from %0: '%1'
x86_64-manbo-linux-gnu
re-exported libraries do not match: '%0' (provided) vs '%1' (found)
__builtin_ia32_rsqrt28ps_mask
%0 in '%1' does not match '%2'
UnsafeBufferUsageAttr
platform does not match: '%0' (provided) vs '%1' (found)
-fprofile-sample-use=
parsing of all headers disabled
x86_64-slackware-linux
parent umbrella missing from %0: '%1'
__builtin_ia32_rcp28pd_mask
parent umbrella does not match: '%0' (provided) vs '%1' (found)
UsedAttr
only one target can be specified
__builtin_ia32_cvttps2dq512_mask
only one architecture can be specified '%0'
x86_64-unknown-linux
dynamic library '%0' doesn't have all the required architectures
V8iV8dV8iUcIi
input '%0' is not a dynamic library
UuidAttr
flat namespace libraries are not supported
The relocation model to use
no target specified: add --target=<triple>
x86_64-amazon-linux
no such %select{public|private|project}1 umbrella header file: '%0'
__builtin_ia32_cmppd512_mask
no such symbols file: '%0'
VecReturnAttr
no such %select{public|private|project}1 header file: '%0'
__builtin_ia32_cmppd128_mask
no output file specified
x86_64-linux-gnux32
no matching target found for target variant '%0'
-fdebugger-support
no install name specified: add -install_name <path>
-ffixed-x6
no framework/dynamic library found
Disable C++ static destructor registration
input '%0' is not a directory
x86_64-pc-linux-gnux32
no deployment target specified
__builtin_ia32_minpd512
no architecture specified: add -arch <architecture>
WarnUnusedResultAttr
 more than one framework/dynamic library found
__builtin_ia32_cvtdq2ps512_mask
virtual filesystem overlay file '%0' not found
/libx32
no such sysroot directory: '%0'
V8fV8dV8fUcIi
unable to merge '%0': '%1'
WeakImportAttr
declaration has external linkage, but dynamic library doesn't have symbol '%0'
-mrestrict-it
declaration has external linkage, but symbol has internal linkage in dynamic library '%0'
/lib32
invalid virtual filesystem overlay file '%0'
__builtin_ia32_loaddqusi512_mask
cannot parse allowlist file %0: %1
WebAssemblyExportNameAttr
invalid platform name '%0'
V8OiOiC*V8OiUc
invalid input file: '%0'
i586-linux-gnu
invalid current version '%0'
V16fV16fC*V16fUs
invalid compatibility version '%0'
WebAssemblyImportNameAttr
install_name does not match: '%0' (provided) vs '%1' (found)
-fprofile-sample-use
inlining is not supported for output file type '%0'
i686-linux-gnu
no declaration found for exported symbol '%0' in dynamic library
vi*V16iUs
declaration '%0' is %select{weak defined|thread local}1, but symbol is not in dynamic library
X86ForceAlignArgPointerAttr
symbol exported in dynamic library, but marked hidden in declaration '%0'
vV8d*V8dUc
declaration '%0' is marked %select{available|unavailable}1, but symbol is %select{not |}2exported in dynamic library
i686-pc-linux-gnu
cannot infer '%0', please specify with option '%1'
vV16f*V16fUs
expected only one input file
XRayLogArgsAttr
dynamic library symbol '%0' is %select{weak defined|thread local}1, but it's declaration is not
-mretpoline-external-thunk
current_version does not match: '%0' (provided) vs '%1' (found)
i386-redhat-linux6E
compatibility_version does not match: '%0' (provided) vs '%1' (found)
V2OiV2OiV2OiIi
cannot write file '%0': %1
AArch64FarAddressSpaceAttr
cannot read file '%0': %1
__builtin_ia32_extractf32x4_mask
cannot open file '%0': %1
i686-redhat-linux
cannot generate text-based stub file
__builtin_ia32_vpdpbusd256
cannot generate SDKDB: '%0'
AliasAttr
cannot find re-exported library '%0'
-fno-cache-compile-job
cannot find any public (usr/include) or private (usr/local/include) header directory: '%0'
i386-redhat-linux
cannot find %0: %1
__builtin_ia32_vpdpwssd512
cannot create directory '%0': %1
BuiltinAliasAttr
cannot convert '%0' to a text-based stub file
__builtin_ia32_gather3div2df
architectures do not match: '%0' (provided) vs '%1' (found)
i586-suse-linux
ApplicationExtensionSafe flag does not match: '%0' (provided) vs '%1' (found)
__builtin_ia32_gather3div4df
allowable client missing from %0: '%1'
IFuncAttr
allowable clients do not match: '%0' (provided) vs '%1' (found)
-mrop-protect
%0: '%1'
i686-montavista-linux
__builtin_ia32_gather3div8sf
LoaderUninitializedAttr
-iquote
__builtin_ia32_gather3siv2df
Note: the reproducer is intended to help users to debug the issue under a more familiar context using clang.
i686-gnu
,sh}
__builtin_ia32_gather3siv4df
ModeAttr
Partition functions into N groups using -fprofile-function-groups and select only functions in group i to be instrumented. The valid range is 0 to N-1 inclusive
Cannot create temporary file for clang reproducer
loongarch64-linux-gnu
/tmp/tapi_include_headers-%%%%%%
__builtin_ia32_gather3siv8sf
NoEscapeAttr
clang Invocation:
__builtin_ia32_gathersiv8df
-xobjective-c++
loongarch64-unknown-linux-gnu
-xobjective-c
__builtin_ia32_gatherdiv8df
-xc++
OMPDeclareSimdDeclAttr
Make StdCall calling convention the default
Project
m68k-linux-gnu
Private
__builtin_ia32_gatherdiv8di
Public
ObjCBoxableAttr
__builtin_ia32_scattersiv8df
m68k-unknown-linux-gnu
__builtin_ia32_scatterdiv8df
#import 
Reserve the x6 register (AArch64/RISC-V only)
#include 
-fno-cache-disable-replay
/* the next header is configured with pre-includes. It might be include-what-you-use violation. Can it be removed? */
m68k-suse-linux
__builtin_ia32_scatterdiv8di
ObjCDirectMembersAttr
.cpp
__builtin_ia32_gatherpfdpd
/libo32
-stdlib=libc++
__builtin_ia32_gatherpfqpd
-iframework /System/Library/PrivateFrameworks
ObjCNonRuntimeProtocolAttr
-isystem
-msahf
-iframework
mips-linux-gnu
-D__clang_tapi__=1
vUcV8Oiv*IiIi
-fobjc-weak
ObjCRuntimeVisibleAttr
-fobjc-arc
__builtin_ia32_knothi
-fmodules-validate-system-headers
mips-mti-linux
-fmodules-cache-path=
__builtin_ia32_cmpb128_mask
-fmodules
OpenCLAccessAttr
-fvisibility=
-fprofile-update=
-fno-rtti
mips-mti-linux-gnu
-frtti
UcV8sV8sIiUc
-std=
RenderScriptKernelAttr
-resource-dir
UcV8iV8iIiUc
-fsyntax-only
mips-img-linux-gnu
 Headers:
UsV16sV16sIiUs
tapi_include_headers
SwiftVersionedAttr
 (tapi-1500.0.12.6)
Enable using library calls for save and restore
TAPI version 15.0.0
mipsisa32r6-linux-gnu
Apple 
UiV32sV32sIiUi
ThreadAttr
bridge-objc-class
__builtin_ia32_ucmpw128_mask
ignore-objc-class
mipsel-linux-gnu
framework
__builtin_ia32_ucmpw256_mask
/usr/lib/
/System/Library/PrivateFrameworks
-fno-caller-saves
mipsisa32r6el-linux-gnu
.map
V64cV32sV32s
/include
, scalable
output path is not a directory
__builtin_ia32_pavgw512
output path is empty
mips64-linux-gnu
Unsupported version
avx512cd,avx512vl
fixed
version
Save temporary labels in the symbol table. Note this may change .s semantics and shouldn't generally be used on compiler-generated code.
mips64-linux-gnuabi64
Note: the paths in the reproducer might need to be adjusted.
__builtin_ia32_vpconflictsi_512
Note: the reproducer is intended to help users to debug the issue under a more familiar context using swift.
full
avx512vpopcntdq,avx512vl
Note: a reproducer of the error is written to: "
mipsisa64r6-linux-gnu
__builtin_ia32_vpopcntd_512
disable
Cannot create temporary file for swift reproducer
<method>
-%%%%%%.sh
mipsisa64r6-linux-gnuabi64
__builtin_ia32_vpopcntw_256
#pragma nounroll
iOSSupport
__builtin_ia32_vpopcntw_512
-module-cache-path
mips64el-linux-gnu
-vfsoverlay
__builtin_ia32_vpshufbitqmb256_mask
-module-name
-sdk
-mserialize
ModuleCache
mips64el-linux-gnuabi64
API is not a JSON Object
__builtin_ia32_addps512
cannot open swift-api-extract output file
#pragma unroll_and_jam
'swift-api-extract' invocation failed:
__builtin_ia32_mulps512
swift-api-extract: 
mipsisa64r6el-linux-gnu
json
Only run the driver.
swiftapi
-ffixed-x7
unable to find 'swift-api-extract' in PATH
-fno-caret-diagnostics
cannot find 'swift-api-extract' in toolchain directory. Looking for 'swift-api-extract' in PATH instead.
mipsisa64r6el-linux-gnuabi64
swift-api-extract
__builtin_ia32_minss_round_mask
_TAPI_TEST_SWIFT_API_EXTRACT
 linear(
cannot create vfs file
__builtin_ia32_subsd_round_mask
yaml
mips64-linux-gnuabin32
vfsoverlay
V2dV2dV2dUc
-%%%%%%
 indirect(
tapi_includes
Enable speculative execution side effect suppression (SESES). Includes LVI control flow integrity mitigations
/System/iOSSupport/System/Library/PrivateFrameworks
mipsisa64r6-linux-gnuabin32
/System/iOSSupport/System/Library/Frameworks
V8sV8sV8sUc
/System/iOSSupport/usr/local/include
 match(
/System/iOSSupport/usr/include
__builtin_ia32_compressqi128_mask
Library
mips64el-linux-gnuabin32
System
__builtin_ia32_compresssf128_mask
include
 adjust_args(need_device_ptr:
-fprofile-use=
machine
mipsisa64r6el-linux-gnuabin32
__builtin_ia32_compressstoredf128_mask
x86_64
 __attribute__((aarch64_far_address_space
i386
__builtin_ia32_compressstoredi128_mask
arm64
msp430-elf
__builtin_ia32_compressstorehi128_mask
-diagnostic-log-file
-Xclang
-msha
simulator
powerpc-linux-gnu
Simulator
__builtin_ia32_compressstoresf128_mask
19.0
 [[clang::aarch64_sve_pcs
13.0
__builtin_ia32_compressstoresi128_mask
RC_ARCHS
powerpc-unknown-linux-gnu
binary file doesn't exist
__builtin_ia32_cvtpd2dq128_mask
Failed to scan header interface
 [[clang::aarch64_vector_pcs
partial.sdkdb
-fno-char8_t
private.sdkdb
powerpc-linux-gnuspe
public.sdkdb
V4iV4fV4iUc
--action=
 [[clang::amdgpu_flat_work_group_size
SDKDBAction
__builtin_ia32_cvttpd2udq128_mask
--sdk-content-root
powerpc64-suse-linux
SDKContentRoot
__builtin_ia32_expanddf128_mask
--runtime-root
 [[clang::amdgpu_kernel
RuntimeRoot
-msign-ext
RC_MIN_VERSION_OPTION
powerpc-montavista-linuxspe
TAPI_SDKDB_FORCE_ERROR
__builtin_ia32_expandloaddf128_mask
linker.reexport
 [[clang::amdgpu_num_sgpr
File does not exist
__builtin_ia32_expandloaddi128_mask
See 'tapi <command> --help' to read more about a specific command.
powerpcle-linux-gnu
Experimental Commands:
  sdkdb         Generate SDKDB from SDKContent
  api-verify    Compare interfaces between frameworks
__builtin_ia32_expandloadhi128_mask
USAGE: tapi [--version][--help]
       tapi <command> [<args>]
Commands:
  archive     Merge or thin text-based stub files
  stubify     Create a text-based stub file from a library
  installapi  Create a text-based stub file by scanning the header files
  reexport    Create a linker reexport file by scanning the header files
 [[clang::amdgpu_num_vgpr
OVERVIEW: 
-fprofile-use
api-verify
powerpcle-unknown-linux-gnu
sdkdb
__builtin_ia32_expandloadsf128_mask
reexport
 [[clang::amdgpu_waves_per_eu
installapi
__builtin_ia32_expandloadsi128_mask
stubify
powerpcle-linux-musl
archive
__builtin_ia32_expandsf128_mask
RC_BUILDIT
a_key,b_key
RC_XBS
powerpc64-linux-gnu
.conf
__builtin_ia32_rndscalepd_128_mask
config
ABORT
local
__builtin_ia32_rndscaleps_128_mask
15.0.0
powerpc64-unknown-linux-gnu
__builtin_ia32_scalefpd128_mask
RC_ProjectName
Reserve the x7 register (AArch64/RISC-V only)
XROS_DEPLOYMENT_TARGET
Disable C++ builtin type char8_t
DRIVERKIT_DEPLOYMENT_TARGET
ppc64-redhat-linux
BRIDGEOS_DEPLOYMENT_TARGET
__builtin_ia32_scatterdiv2di
WATCHOS_DEPLOYMENT_TARGET
 __attribute__((signal
TVOS_DEPLOYMENT_TARGET
__builtin_ia32_scatterdiv4di
IPHONEOS_DEPLOYMENT_TARGET
powerpc64le-linux-gnu
MACOSX_DEPLOYMENT_TARGET
__builtin_ia32_scatterdiv4si
tapi
 __attribute__((abi_tag
Select return address signing scope
powerpc64le-unknown-linux-gnu
diag.plist
__builtin_ia32_scattersiv2di
RC_PROJECT_COMPILATION_PLATFORM
 __attribute__((acquire_capability
SDKDB
__builtin_ia32_scattersiv4di
LD_TRACE_FILE
powerpc64le-none-linux-gnu
XBS_TAPI_SDKDB_OUTPUT_PATH
__builtin_ia32_scattersiv4si
EquivalentTypes
 __attribute__((acquire_shared_capability
TAPI_API_VERIFY_ERROR_AS_WARNING
-fprofile
env TAPI_OUTPUT_FILE_TYPE
powerpc64le-suse-linux
TAPI_OUTPUT_FILE_TYPE
__builtin_ia32_vpermi2vard512
TAPI_DELETE_INPUT_FILE
 __attribute__((exclusive_lock_function
c++14
V4dV4dV4OiV4d
objective-c++
ppc64le-redhat-linux
V4fV4fV4iV4f
unknown-apple-
acquire_capability
/System/Library/Frameworks
-msimd128
/Library/Frameworks
riscv32-unknown-linux-gnu
/usr/local/lib
V4OiV4OiV4OiV4Oi
/usr/lib
exclusive_lock_function
SDKROOT
avx512vbmi,avx512vl
LD_APPLICATION_EXTENSION_SAFE
riscv32-linux-gnu
LD_NO_ENCRYPT
__builtin_ia32_vpermi2varhi128
 __attribute__((acquire_handle
-fno-check-array-temporaries
riscv32-unknown-elf
binary file
__builtin_ia32_vpshldq128
tapi option
 __attribute__((acquired_after
invalid alias list
__builtin_ia32_vpshldw256
unable to find 'clang' in PATH
riscv64-unknown-linux-gnu
cannot find 'clang' in toolchain directory. Looking for 'clang' in PATH instead.
__builtin_ia32_vpshldvd256
clang
 __attribute__((address_space
_TAPI_TEST_CLANG
-msingle-float
'clang' invocation failed:
riscv64-linux-gnu
unable to read file
__builtin_ia32_vpshrdvd128
unable to create temporary stderr file
 __attribute__((alias
__builtin_ia32_vpshrdvq256
stderr
riscv64-unknown-elf
__builtin_ia32_vpshrdvw512
(No spelling)
-isysroot
Determines whether the optimizer honors parentheses when floating-point expressions are evaluated
-fcoverage-mapping
sparc-linux-gnu
-fprofile-instr-generate
__builtin_ia32_vpshrdw256
-dynamiclib
 __attribute__((aligned
-target
__builtin_ia32_pmovuswb512_mask
static int foo() { return 0; }
sparcv8-linux-gnu
cannot open input file
avx512vl,avx512dq
unable to create temporary output file
 __declspec(align
dylib
Skip setting up RAX register when passing variable arguments (x86 only)
libcodecoverage
sparc64-linux-gnu
unable to create temporary input file
V4OiV4fV4OiUc
code_coverage
 _Alignas
V4fV2OiV4fUc
LinkerAutoZipperList.txt
sparcv9-linux-gnu
AppleInternal
-fdata-sections
.partial.sdkdb
-ffixed-x8
.tbd
-fno-check-new
triple:
s390x-linux-gnu
frontend
__builtin_ia32_rangepd256_mask
/include/
_Alignas
could not read alias list
__builtin_ia32_rangeps256_mask
could not generate coverage symbols
s390x-unknown-linux-gnu
/org.llvm.clang.tapi/ModuleCache
__builtin_ia32_rangess128_round_mask
-Wprivate-extern
 [[gnu::alloc_align
re-exported framework
Put global and static data smaller than the limit into a special section
.framework/
s390x-ibm-linux-gnu
re-exported library
__builtin_ia32_pmovswb128_mask
.dylib
 [[gnu::alloc_size
__builtin_ia32_pmovuswb128_mask
macabi
s390x-suse-linux
apple
V8OiV8dV8OiUcIi
()^$|+.[]\{}
 [[clang::always_destroy
not a glob
Emit pseudo probes for sample profiling
([^/]*)
s390x-redhat-linux
(([^/]*(/|$))*)
V8fV8OiV8fUcIi
 [[gnu::always_inline
__builtin_ia32_cvttps2uqq512_mask
sparc-sun-solaris2.11
<language>
V8dV8dV8dIiV8dUcIi
Treat subsequent input files as having type <language>
 __forceinline
-msmall-data-threshold=
-Xplatform_
sparc-sun-solaris2.12
<arg>
V8OiV8OiIi
Pass <arg> to the clang parser
__forceinline
-Xparser
__builtin_ia32_prolq256
-Xarch_
sparcv9-sun-solaris2.11
-watchos_version_min
__builtin_ia32_prorq512
-watchos_simulator_version_min
 __attribute__((analyzer_suppress
Verbose output, show scan content and driver options
-fno-color-diagnostics
sparcv9-sun-solaris2.12
Display the version
__builtin_ia32_prorq256
-version
 __attribute__((annotate
Verify all symbols from swift interface exist in dynamic library.
__builtin_ia32_prorvd256
-verify-swift
i386-pc-solaris2.11
Specify the severity and extend of the validation. Valid modes are ErrorsOnly, ErrorsAndWarnings, and Pedantic.
V32sV32sIi
--verify-mode=
 [[clang::annotate_type
Verify that the specified <architecture> is present in the file.
Use software floating point
--verify-arch
i386-pc-solaris2.12
Verify the API of zippered frameworks
avx512bw,avx512vl
--verify-api
 [[gnu::no_caller_saved_registers
Skip external headers for API verification of zippered frameworks
V8OiV8Oii
--verify-api-skip-external-headers
x86_64-pc-solaris2.11
Emit API Verification errors as warnings
__builtin_ia32_psrldi512
--verify-api-error-as-warning
 [[gnu::nocf_check
Verify the specified dynamic library/framework against the headers
Pointer Authentication ABI version
-verify-against
x86_64-pc-solaris2.12
--verify-against=
__builtin_ia32_psrawi512
Undefine macro
 [[clang::objc_arc_weak_reference_unavailable
__builtin_ia32_psrldqi512_byteshift
<framework_name>
aarch64-linux-android
Specifies that the dylib being linked is re-exported through an umbrella framework of the specified name.
V16iV16iC*V16iUs
-umbrella
 [[clang::argument_with_type_tag
Logs each dylib tapi loads. Useful for debugging problems with search paths where the wrong library is loaded.
-mspe
arm-linux-androideabi
-tvos_version_min
__builtin_ia32_movdqa32store256_mask
-tvos_simulator_version_min
 [[clang::pointer_with_type_tag
-target
__builtin_ia32_movdqa64store128_mask
Generate code for the given target
mipsel-linux-android
--target=
__builtin_ia32_vpmadd52huq128
-target-variant
Reserve the x8 register (AArch64/RISC-V only)
Generate code for the given target variant
Disable colors in diagnostics
--target-variant=
mips64el-linux-android
Ignore symbols in verification against headers from specified file path for swift generated file.
iV4fV4fIiIi
-swift-installapi-interface
 [[clang::__clang_arm_builtin_alias
Language standard to compile for
__builtin_ia32_loaddquhi512_mask
-std=
i686-linux-android
Force creation of a snapshot
__builtin_ia32_fixupimmpd512_mask
--snapshot
 __attribute__((__clang_arm_mve_strict_polymorphism
Set the installapi flag in the text-based stub file
-msse3
--set-installapi-flag
x86_64-linux-android
Serialize compiler diagnostics to a file
__builtin_ia32_fixupimmsd_maskz
-serialize-diagnostics
 __attribute__((arm_new_za
--sdk
__builtin_ia32_getexpsd128_round_mask
Write SDKDB output to path
gcc/
-sdkdb-output-dir
__builtin_ia32_getmantss_round_mask
<SDKContentRoot>
 __attribute__((arm_shared_za
Path to SDKContentRoot
Enable traps on authentication failures
--sdk-content-root
../..
<RuntimeRoot>
__builtin_ia32_fixupimmpd128_maskz
Path to RuntimeRoot
 __attribute__((arm_streaming_compatible
--runtime-root
__builtin_ia32_fixupimmps128_mask
Add path to the runpath search path list for the dynamic library being created.
gcc-cross/
-rpath
V8fV8fV8fV8iIiUc
Remove the specified <architecture>.
 [[gnu::artificial
--remove
-msse4.2
Add relinked library.
/../
-relinked_library
__builtin_ia32_loaddqudi128_mask
-reexport_library
 __asm__
Re-export the specified internal "install path" (LC_ID_DYLIB)
__builtin_ia32_loadupd128_mask
-reexport_install_name
/config-
Re-export the specified framework
__builtin_ia32_storedquhi512_mask
-reexport_framework
 __attribute__((assert_capability
Re-export the specified library
-fno-common
-reexport-l
/usr/lib/gcc/
Specify the public umbrella header location
__builtin_ia32_storeapd128_mask
-public-umbrella-header
 __attribute__((assert_shared_capability
--public-umbrella-header=
__builtin_ia32_storess128_mask
<PublicSDKContentRoot>
/bin
Path to PublicSDKContentRoot
__builtin_ia32_storedqusi128_mask
--public-sdk-content-root
assert_capability
Enable public header scanning
-msse4
-public-headers
/lib/../
<name>
__builtin_ia32_rcp14ps128_mask
Specify the product name
 __attribute__((assert_exclusive_lock
--product-name=
__builtin_ia32_vplzcntq_128
Specify the private umbrella header location
/../include
-private-umbrella-header
__builtin_ia32_vcvtsd2usi32
--private-umbrella-header=
 __attribute__((assume_aligned
Enable private header scanning
enable signing block descriptors
-private-headers
/backward
--print-after=
__builtin_ia32_vcvttss2si32
<filelist>
 __attribute__((assume
Partial SDKDB filelist path
__builtin_ia32_vpermilvarpd512
--partial-sdkdb-list
/gcc/
Write output to <file>
__builtin_ia32_rndscalesd_round_mask
 __attribute__((availability
--output
-mssse3
Treat source input files as Objective-C inputs
/../include/c++/
-ObjC
__builtin_ia32_psraq128
Treat source input files as Objective-C++ inputs
, introduced=
-ObjC++
__builtin_ia32_pslld512
--no-verify-api
/include/g++-v
--no-verify-api-skip-external-headers
-fdump-fortran-original
Don't record the UUIDs from the library in the text-based stub file
-ffixed-x9
--no-uuids
Compile common globals like normal definitions
Disable public header scanning
elf_iamcu
-no-public-headers
__builtin_ia32_psrlv16si
Disable private header scanning
 [[clang::availability
-no-private-headers
__builtin_ia32_pternlogd512_maskz
Don't infer include paths based on the provided/found header files
aarch64linux
--no-infer-include-paths
__builtin_ia32_pternlogd128_mask
-mwatchos-version-min=
deprecated=
-mwatchos-simulator-version-min=
Set the stack alignment
-mtvos-version-min=
aarch64linuxb
-mtvos-simulator-version-min=
__builtin_ia32_pternlogq128_maskz
Set the deployment target to be the specified platform and OS version
 __attribute__((preserve_access_index
-mtargetos=
__builtin_ia32_shuf_f32x4
-mmacosx-version-min=
armelfb_linux_eabi
-mmacos-version-min=
__builtin_ia32_shufpd512
-miphoneos-version-min=
 __attribute__((btf_decl_tag
-mios-version-min=
Enable signing and authentication of all indirect calls
-mios-simulator-version-min=
armelf_linux_eabi
Merge the input files.
__builtin_ia32_rsqrt14pd128_mask
--merge
 __attribute__((btf_type_tag
-mbridgeos-version-min=
__builtin_ia32_cvtb2mask512
-macosx_version_min
m68kelf
Add directory to the library search path
__builtin_ia32_cvtmask2w512
byref
List the exported symbols.
Enable stack probes
--list-symbols
elf32ppclinux
Add directory to include search path
__builtin_ia32_cvtq2mask512
 [[clang::blocks
Overlay the virtual filesystem described by file over the real file system
__builtin_ia32_cvtb2mask256
-ivfsoverlay
elf32ppc
Add directory to SYSTEM include search path
__builtin_ia32_cvtmask2b256
-isystem
 __attribute__((clang_builtin_alias
<dir>
-fno-complete-member-pointers
Set the system root directory (usually /)
elf32lppclinux
-isysroot
avx512dq,avx512vl
Add directory to QUOTE include search path
clang_builtin_alias
-iquote
V4iUc
-ios_version_min
elf64ppc
-ios_simulator_version_min
V2OiUc
installapi SDKDB input directory (default to output directory)
_Noreturn
--installapi-sdkdb-path
Set the stack probe size
Sets an internal "install path" (LC_ID_DYLIB) in a dynamic library
elf64lppc
-install_name
V16cV16iV16cUs
Inline private frameworks
 [[gnu::cdecl
--inline-private-frameworks
vV32c*V32sUi
List the architectures in the input file
elf32_sparc
--info
vV16s*V16iUs
Infer include paths based on the provided/found header files
 _cdecl
--infer-include-paths
Enabling type discrimination on C function pointers
Add directory to SYSTEM framework search path
elf64_sparc
-iframework
vV8i*V8OiUc
Display this help message
 [[clang::cf_audited_transfer
-help
vV8s*V8OiUc
-help-hidden
elf32loongarch
Add directory to framework include search path
vV16c*V4iUc
 [[clang::cf_consumed
Set the default symbol visibility for all global declarations
Use the given offset for addressing the stack-protector guard
-fvisibility=
elf64loongarch
-frtti
vV16c*V16sUs
Add extra symbols for InstallAPI that are created by code coverage.
 __declspec(guard
-fprofile-instr-generate
vV8s*V4iUc
Enable ARC-style weak references in Objective-C
elf32btsmip
-fobjc-weak
vV8s*V8iUc
Synthesize retain and release calls for Objective-C pointers
Reserve the x9 register (AArch64/RISC-V only)
-fobjc-arc
Do not require member pointer base types to be complete if they would be significant under the Microsoft ABI
Disable generation of rtti information
elf32ltsmip
-fno-rtti
vV16c*V4OiUc
-fno-application-extension
 [[clang::cfi_canonical_jump_table
Enable the 'modules' language feature
vV4i*V2OiUc
-fmodules
elf32btsmipn32
Validate the system headers that a module depends on when loading the module
vV4i*V4OiUc
-fmodules-validate-system-headers
 [[clang::cf_returns_not_retained
<directory>
Use the given reg for addressing the stack-protector guard
Specify the module cache path
elf64btsmip
-fmodules-cache-path=
vV8s*V4OiUc
Specify the output file type (tbd-v1, tbd-v2, tbd-v3, or tbd-v4)
 [[clang::cf_returns_retained
--filetype=
__builtin_ia32_pmovusdw512_mask
-filelist
elf32ltsmipn32
Specifies the <path> to a file that contains a list of headers to parse.
__builtin_ia32_pmovusqd512_mask
--filelist=
 [[clang::cf_unknown_transfer
Enable signing and authentication of indirect goto targets
Set the maximum number of errors to emit before stopping (0 = no limit).
elf64ltsmip
-ferror-limit
__builtin_ia32_pmovusdb256mem_mask
Restrict code to those available for App Extensions
 [[clang::cpu_dispatch
-fapplication-extension
__builtin_ia32_pmovusdw256_mask
Extract the specified <architecture>.
elf64_s390
--extract
__builtin_ia32_pmovusqb256_mask
Add additional public header location for parsing
 __attribute__((cpu_specific
-extra-public-header
Use the given symbol for addressing the stack-protector guard
--extra-public-header=
elf32_x86_64
Add additional project header location for parsing
__builtin_ia32_pmovusqw256_mask
-extra-project-header
 __declspec(cpu_specific
--extra-project-header=
__builtin_ia32_pmovwb512mem_mask
Add additional private header location for parsing
elf_x86_64
-extra-private-header
__builtin_ia32_pmovqb512mem_mask
--extra-private-header=
 __declspec(__constant__
Exclude public header from parsing
-fno-const-strings
-exclude-public-header
elf64ve
--exclude-public-header=
__builtin_ia32_pmovdb256_mask
Exclude project header from parsing
 __attribute__((device
-exclude-project-header
__builtin_ia32_pmovdw128mem_mask
--exclude-project-header=
cskyelf_linux
<glob>
__builtin_ia32_pmovqb128mem_mask
Exclude private header from parsing
 __attribute__((device_builtin_surface_type
-exclude-private-header
Use the given guard (global, tls) for addressing the stack-protector guard
--exclude-private-header=
krait
Define macro
__builtin_ia32_pmovqw256_mask
 __attribute__((device_builtin_texture_type
-dynamiclib
__builtin_ia32_extractf64x2_512_mask
Scan only Frameworks and UNIX libs
-mcpu=cortex-a15
-dylibs-only
__builtin_ia32_extracti64x2_512_mask
Specify dSYM path.
 __attribute__((global
--dSYM=
Enable pointer-authentication intrinsics
Write diagnostics to <file>
kryo
--diagnostics-file=
__builtin_ia32_extracti64x2_256_mask
Demangle C++ symbols when printing warnings and errors
global
--demangle
__builtin_ia32_extracti32x4_256_mask
Delete private frameworks from the SDK
-mcpu=cortex-a57
--delete-private-frameworks
__builtin_ia32_insertf64x2_512
Delete input file on success
 __declspec(__host__
--delete-input-file
Force realign the stack at entry to every function
Specifies the current version number of the library
/mips-r2
-current_version
__builtin_ia32_inserti64x4
<file>
 __attribute__((launch_bounds
Read configuration from <file>
__builtin_ia32_insertf32x4_256
--config-file=
+march=mips32r2
Specifies the compatibility version number of the library
-fdeclare-opencl-builtins
-compatibility_version
-ffloat-store
-bridgeos_version_min
Don't use a const qualified type for string literals in C and ObjC
<architecture>
/mips-r6
Specify the architecture to build for
__builtin_ia32_getexppd512_mask
-arch
 [[noreturn
Restricts what can link against the dynamic library being created
__builtin_ia32_vfmaddss3_mask3
-allowable_client
+march=mips32r6
Allow merges of the same architecture.
__builtin_ia32_vfmsubsd3_mask3
--allow-arch-merges
noreturn
<path>
Force all memory accesses to be aligned (same as mno-unaligned-access)
Specify the path to a file containing a list of symbol aliases
+march=mips32
-alias_list
__builtin_ia32_permvarsi512
scan-interface,gen-public,gen-private,all
consumed
Set SDKDB generation option: 'scan-interface', 'gen-public', 'gen-private' or 'all'
__builtin_ia32_permvarhi128
-action=
+march=mips64r6
<unknown>
__builtin_ia32_fpclasspd128_mask
<input>
 __attribute__((callable_when
Enable Pointer Authentication kernel ABI version
/Versions/
/32/mips-r1
usr/lib/swift
__builtin_ia32_fpclassps512_mask
System/Library/PrivateFrameworks
 __attribute__((callback
System/Library/Frameworks
__builtin_ia32_fpclasssd_mask
usr/local/lib
/mips-r1
usr/lib
__builtin_ia32_kaddsi
.framework
 __attribute__((called_once
PrivateFrameworks
Specify the size in bits of an SVE vector register. Defaults to the vector length agnostic value of "scalable". (AArch64 only)
System/Library
/32/mips-r2
/System/Cryptexes/OS/System/iOSSupport
__builtin_ia32_kandnsi
/System/Cryptexes/OS
 __attribute__((capability
Library/Apple
__builtin_ia32_korsi
/System/DriverKit
/32/mips-r6
/System/iOSSupport
__builtin_ia32_kortestzqi
Versions
 __attribute__((shared_capability
Frameworks
-fno-constant-cfstrings
Modules
PrivateHeaders
iUOiUOi
Headers
capability
IOKit.framework
__builtin_ia32_ktestchi
Kernel.framework
/mips-r2-hard-musl
System/Library/PrivateFrameworks/
__builtin_ia32_ktestcdi
System/Library/Frameworks/
 __attribute__((carries_dependency
Return small structs in registers (PPC32 only)
usr/local/include
usr/include
__builtin_ia32_kxorhi
use-split-header-dir
 __attribute__((cleanup
sdk-mask
UcUcIUi
root-mask
/mipsel-r2-hard-musl
iosmac-umbrella-only
__builtin_ia32_kshiftlidi
zippered
 __attribute__((cmse_nonsecure_call
iosmac
Enable signing and authentication for ObjC class_ro pointers
language-std
excludes
__builtin_ia32_kmovd
pre-includes
 __declspec(code_seg
umbrella
__builtin_ia32_dbpsadbw128
clang-extra-args
/../sysroot
use-overlay
__builtin_ia32_dbpsadbw512
private-header
 [[gnu::cold
public-header
Directory for temporary files produced during ARC or ObjC migration
install-name
/mips32
name
V32sV32sV32sUi
invalid macro
 [[gnu::common
__builtin_ia32_compresssi512_mask
+m32
objective-cxx
__builtin_ia32_cmpss_mask
objective-c
-ffor-scope
Disable creation of CodeFoundation-type constant strings
-mmicromips
invalid packed version string.
__builtin_ia32_expandloaddi512_mask
bridgeos
 [[gnu::__const
tvos
__builtin_ia32_expandloadsi512_mask
watchos
/micromips
V8dV8fV8dUcIi
macosx
 __attribute__((require_constant_initialization
unknown
-mtargetos=
projects
+mmicromips
macros
V4fV8sV4fUc
public-dylibs
constinit
framework-paths
V8sV4fIiV8sUc
include-paths
/mips64r2
language
UiV32s
sdk-root
 __attribute__((constructor
sdk-version
Enable signing and authentication of Objective-C object's 'SEL' fields
sdk-platform
+m64
tapi-configuration-v1
V4fV4fiIi
malformed file
 __attribute__((consumable
invalid input file
V4fV4fUiIi
+march=mips64r2
__builtin_ia32_cvtne2ps2bf16_128
 __attribute__((consumable_auto_cast_state
-mtbm
file doesn't have architecture '
/mips64
Architectures: 
V8sV4fV8sUc
0123456789
 __attribute__((consumable_set_state_on_read
0123456789abcdefABCDEF
V16sV16fV16sUs
-march=mips64r2
01234567
V8fV8fV8iV8i
false
 __attribute__((convergent
true
-fno-constant-nsarray-literals
NULL
/mips16
null
vV4OiV4OiUc*Uc*
-?:\,[]{}#&*!|>'"%@`
 __declspec(dllexport
path
__builtin_ia32_vp2intersect_d_512
frameworks
+mips16
includes
__builtin_ia32_vp2intersect_d_128
sysroot
 [[gnu::dllexport
target
Use static debug run-time
diag-style
/uclibc
allowlist
__builtin_ia32_divph512
diag-depth
 __attribute__((dllimport
compare-private-headers
V16xV16xV16x
no-cascading-diags
+muclibc
missing-api
__builtin_ia32_maxph256
skip-external
 __attribute__((deprecated
variant
pre- and post-authentication masking mode of objective-c isa pointers
base
__builtin_ia32_minsh_round_mask
[_]?Private\.h
 [[gnu::deprecated
UsV16xV16xIiUs
error
Enable threadgroup split execution mode (AMDGPU only)
-mabi=n32
  <key>main-file</key>
<dict>
-fdump-record-layouts-canonical
    </dict>
ignored
-fforbid-guard-variables
-fno-diagnostics-show-hotness
Disable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
-fno-objc-arc-exceptions
-fno-objc-arc
      <key>WarningOption</key>
</string>
Disable creation of CodeFoundation-type constant initializer `NSArray`s from array literals
Enable frequency counters in sanitizer coverage
Give inline C++ member functions hidden visibility by default
-fvisibility-nodllstorageclass=
The visibility for definitions without an explicit DLL export class [-fvisibility-from-dllstorageclass]
-fvisibility=
Set the default symbol visibility for all global definitions
      <key>ID</key>
/sof
      <key>message</key>
__builtin_ia32_scalefph128_mask
      <key>column</key>
warning
__builtin_ia32_scalefph512_mask
      <key>filename</key>
+msoft-float
      
__builtin_ia32_rndscaleph_mask
      <key>level</key>
 __attribute__((disable_sanitizer_instrumentation
    <dict>
&quot;
The thread model to use. Defaults to 'posix')
FieldOffsets: [
/nan2008
align=
__builtin_ia32_getexpsh128_round_mask
sizeof=
 __attribute__((disable_tail_calls
Alignment:
__builtin_ia32_reducesh_mask
 Size:
+mnan=2008
union 
V16xV16x
class 
 __declspec(empty_bases
struct 
Authentication mode for ObjC isa field. Full auth if unspecified
*** Dumping AST Record Layout
/mips64/mips16
__builtin_ia32_fpclassph512_mask
#__include_macros "
 __attribute__((enforce_tcb
V8xV2dV8xUc
/mips64r2/mips16
#undef 
V8xV8dV8xUcIi
HIP_API_PER_THREAD_DEFAULT_STREAM
 __attribute__((enforce_tcb_leaf
__HIP_DEVICE_COMPILE__
-mthreads
__HIP_MEMORY_SCOPE_SYSTEM
/micromips/mips16
__HIP_MEMORY_SCOPE_AGENT
V4fV4fV8xV4fUcIi
__HIP_MEMORY_SCOPE_WORKGROUP
closed
__HIP_MEMORY_SCOPE_WAVEFRONT
V8xV8xV2dV8xUcIi
__HIP_MEMORY_SCOPE_SINGLETHREAD
/micromips/64
__HIPCC__
V8sV8xV8sUc
__HIP__
 __attribute__((enum_extensibility
__CUDA__
-fno-constant-nsdictionary-literals
__CLANG_RDC__
/mips32/64
__ASSEMBLER__
__builtin_ia32_vcvtw2ph128_mask
202001
 __attribute__((error
SYCL_LANGUAGE_VERSION
__builtin_ia32_vcvtw2ph512_mask
CL_SYCL_LANGUAGE_VERSION
^/64
__ENDIAN_LITTLE__
__builtin_ia32_vcvtph2uw256_mask
CL_VERSION_3_0
 __attribute__((warning
CL_VERSION_2_0
-mtls-direct-seg-refs
CL_VERSION_1_2
/mips16/64
CL_VERSION_1_1
V8xV8UsV8xUc
CL_VERSION_1_0
 __attribute__((exclude_from_explicit_instantiation
V32xV32UsV32xUiIi
.*sof/nan2008
V8iV8xV8iUc
 __attribute__((exclusive_trylock_function
__OPENCL_C_VERSION__
-fptrauth-objc-isa
__CL_CPP_VERSION_2021__
/mips-r2-hard
__CL_CPP_VERSION_1_0__
V16UiV16xV16UiUsIi
202100
 [[clang::external_source_symbol
V8xV8iV8xUc
__OPENCL_CPP_VERSION__
-muclibc
__OBJC__
V8xV4UiV8xUc
__STDC_UTF_32__
 [[clang::fallthrough
__STDC_UTF_16__
-mtls-size=
__STDCPP_THREADS__
/mips-r2-soft
__STDCPP_DEFAULT_NEW_ALIGNMENT__
__builtin_ia32_vcvttph2udq128_mask
201103L
 [[gnu::fallthrough
201402L
V8xV2OiV8xUc
202002L
/mipsel-r2-hard
202101L
V8xV8OiV8xUcIi
__cplusplus
Emit an error if a C++ static local initializer would need a guard variable
199409L
Disable creation of CodeFoundation-type constant initializer `NSDictionary`s from dictionary literals
199901L
/mipsel-r2-soft
201112L
V8xV2UOiV8xUc
201710L
 _fastcall
202000L
V8xV8UOiV8xUcIi
__STDC_VERSION__
/mips-r2-hard-nan2008
__STDC_HOSTED__
V4UOiV8xV4UOiUc
__STDC__
sealed
__SHADER_TARGET_MINOR
-mtp=
__SHADER_TARGET_MAJOR
/mipsel-r2-hard-nan2008
__SHADER_TARGET_STAGE
__builtin_ia32_vcvttph2uqq512_mask
__SHADER_STAGE_LIBRARY
 [[clang::flag_enum
__SHADER_STAGE_MESH
UiV8xIi
__SHADER_STAGE_AMPLIFICATION
/mips-r2-hard-nan2008-uclibc
__SHADER_STAGE_COMPUTE
V8xV8xiIi
__SHADER_STAGE_DOMAIN
 [[gnu::flatten
__SHADER_STAGE_HULL
-fptrauth-returns
__SHADER_STAGE_GEOMETRY
/mipsel-r2-hard-nan2008-uclibc
__SHADER_STAGE_PIXEL
V16fV16xV16fUsIi
__SHADER_STAGE_VERTEX
 [[gnu::format
__HLSL_ENABLE_16_BIT
V8xV8fV8xUc
__HLSL_VERSION
/mips-r2-hard-uclibc
__hlsl_clang
V8xV8xV8xV8x
 _Tp> {
 [[gnu::format_arg
struct __is_scalar<__attribute__((objc_ownership(autoreleasing)))
soft,cp15,el0,el1,el2,el3
struct __is_scalar<__attribute__((objc_ownership(weak))) _Tp> {
/mipsel-r2-hard-uclibc
__builtin_ia32_vfmaddsubph512_mask
  typedef __false_type __type;
thunk-extern
  enum { __value = 0 };
__builtin_ia32_vfmsubph512_mask3
struct __is_scalar<__attribute__((objc_ownership(strong))) _Tp> {
/micromipsel-r2-hard-nan2008
template<typename _Tp>
__builtin_ia32_vfmsubsh3_mask3
template<typename _Tp> struct __is_scalar;
 [[gnu::function_return
struct __false_type;
-fno-constant-nsnumber-literals
struct __true_type;
/micromipsel-r2-soft
namespace std {
__builtin_ia32_vfcmaddcph128_mask
_GLIBCXX_PREDEFINED_OBJC_ARC_IS_SCALAR
 [[gnu::gnu_inline
POINTER_LOCK_FREE
__builtin_ia32_vfcmaddcph512_mask
LLONG_LOCK_FREE
-mabi=n64
LONG_LOCK_FREE
__builtin_ia32_vfmaddcsh_maskz
INT_LOCK_FREE
 __attribute__((guarded_var
SHORT_LOCK_FREE
Mode for reading thread pointer
WCHAR_T_LOCK_FREE
+mabi=n32
CHAR32_T_LOCK_FREE
__builtin_ia32_vfcmulcsh_mask
CHAR16_T_LOCK_FREE
 __attribute__((managed
CHAR8_T_LOCK_FREE
__builtin_ia32_vfcmulcph128_mask
CHAR_LOCK_FREE
/../../../../sysroot/uclibc/usr/include
BOOL_LOCK_FREE
V16cUsV16cV16c
__UINT_FAST
[numthreads
__INT_FAST
-fptrauth-soft
__UINT_LEAST
/../../../../sysroot/usr/include
__INT_LEAST
V16sUsV16sV16s
_C_SUFFIX__
:SV_GroupIndex
_TYPE__
V4iUcV4iV4i
__UINT
/../../../../sysroot
__INT
V16iUsV16iV16i
MIN__
vertex
MIN_EXP__
-mtune=?
/../usr/include
V2OiUcV2OiV2Oi
MIN_10_EXP__
hull
MAX__
V8OiUcV8OiV8Oi
MAX_EXP__
/../../../../mips-mti-linux-gnu/lib
MAX_10_EXP__
Place each data in its own section
MANT_DIG__
-fforce-addr
HAS_QUIET_NAN__
Disable creation of CodeFoundation-type constant initializer `NSNumber`s from number literals
HAS_INFINITY__
/mips64r6
EPSILON__
V8dUcV8dV8d
DECIMAL_DIG__
raygeneration
DIG__
__builtin_ia32_reduce_fadd_pd512
HAS_DENORM__
/mips-r6-hard
DENORM_MIN__
__builtin_ia32_reduce_fadd_ph512
1.18973149535723176508575932662800702e+4932
anyHit
1.79769313486231580793728971405301e+308
Only supported on AArch64, PowerPC, RISC-V, SystemZ, and X86
1.18973149535723176502e+4932
/mips-r6-soft
1.7976931348623157e+308
__builtin_ia32_reduce_fmax_ps512
3.40282347e+38
miss
6.5504e+4
__builtin_ia32_reduce_fmax_ph256
3.36210314311209350626267781732175260e-4932
/mipsel-r6-hard
2.00416836000897277799610805135016e-292
__builtin_ia32_reduce_fmin_pd512
3.36210314311209350626e-4932
mesh
2.2250738585072014e-308
-fptrauth-vtable-pointer-address-discrimination
1.17549435e-38
/mipsel-r6-soft
6.103515625e-5
__builtin_ia32_reduce_fmul_ph256
1.92592994438723585305597794258492732e-34
[shader
1.08420217248550443401e-19
vUiUiUi
2.2204460492503131e-16
/micromips-r6-hard
1.19209290e-7
__builtin_ia32_tpause
9.765625e-4
 [[gnu::hot
6.47517511943802511092443895822764655e-4966
-mtvos-version-min=
4.94065645841246544176568792868221e-324
/micromips-r6-soft
3.64519953188247460253e-4951
__builtin_ia32_invpcid
4.9406564584124654e-324
 [[clang::ibaction
1.40129846e-45
__builtin_ia32_loadiwkey
5.9604644775390625e-8
/micromipsel-r6-hard
__builtin_ia32_encodekey256_u32
_FMT
 [[clang::iboutlet
ouxX
-fno-coro-aligned-allocation
/micromipsel-r6-soft
_WIDTH__
UcV2Oi*V2OiC*vC*
_MAX__
 [[clang::iboutletcollection
__cpp_coroutines
__builtin_ia32_aesdecwide256kl_u8
__cpp_impl_destroying_delete
/../../../../mips-img-linux-gnu/lib
201811L
_ReadBarrier
__cpp_char8_t
 [[gnu::ifunc
__cpp_named_character_escapes
Specify name of main file output in depfile
202207L
-mips16
__cpp_static_call_operator
ULLiUiUi
__cpp_multidimensional_subscript
 [[gnu::init_priority
202106L
__cpp_if_consteval
/soft-float
__cpp_size_t_suffix
__readfsdword
202011L
init_seg
__cpp_implicit_move
-fptrauth-vtable-pointer-type-discrimination
__cpp_using_enum
/micromips/nan2008
__cpp_impl_three_way_comparison
_mul128
__cpp_designated_initializers
 [[clang::intel_ocl_bicc
201902L
__faststorefence
__cpp_impl_coroutine
/mips16/nan2008
__cpp_constinit
__builtin_ia32_readeflags_u64
__cpp_constexpr_dynamic_alloc
 [[clang::internal_linkage
201806L
Use static run-time
__cpp_conditional_explicit
/mips16.*/64
__cpp_concepts
__builtin_ia32_cvttsd2si64
__cpp_template_template_args
 [[clang::lto_visibility_public
__cpp_aligned_new
V2OiV2OiOiIi
__cpp_nontype_template_parameter_auto
/micromips.*/64
__cpp_guaranteed_copy_elision
__builtin_ia32_vec_set_v4di
__cpp_fold_expressions
-fforce-dwarf-frame
__cpp_nontype_template_args
-fno-coroutines-ts
__cpp_structured_bindings
/n32
__cpp_aggregate_bases
__builtin_ia32_wrgsbase32
201611L
 __attribute__((lifetimebound
__cpp_variadic_using
__builtin_ia32_xsave64
__cpp_nested_namespace_definitions
/../../../../mips-linux-gnu/libc/uclibc/usr/include
__cpp_enumerator_attributes
__builtin_ia32_xsavec64
__cpp_namespace_attributes
 [[likely
__cpp_template_auto
-muintr
201703L
/../../../../mips-linux-gnu/libc/usr/include
__cpp_deduction_guides
UcUcUOiUOiUOi*
__cpp_if_constexpr
 __attribute__((loader_uninitialized
__cpp_capture_star_this
__builtin_ia32_rdseed64_step
201510L
/armv7-a
__cpp_noexcept_function_type
__builtin_ia32_bzhi_di
201606L
 __attribute__((lock_returned
__cpp_inline_variables
__cpp_hex_float
+march=armv7-a
__cpp_sized_deallocation
vUOiUiIUi
__cpp_variable_templates
vectorize
__cpp_aggregate_nsdmi
UOiV2dIi
__cpp_return_type_deduction
/thumb
__cpp_decltype_auto
UOiV4fIi
201707L
interleave
__cpp_generic_lambdas
-multiply_defined_unused
201803L
-march=armv7-a
__cpp_init_captures
V4fV4fOiIi
201309L
unroll
__cpp_digit_separators
V4fV4fUOiIi
__cpp_binary_literals
+mthumb
__cpp_threadsafe_static_init
UOiV8xIi
__cpp_alias_templates
unroll_and_jam
__cpp_ref_qualifiers
-fno-coverage-mapping
201511L
/armv7-a/thumb
__cpp_inheriting_constructors
__builtin_ia32_clui
__cpp_nsdmi
pipeline
200604L
__builtin_ia32_senduipi
__cpp_delegating_constructors
march=armv7-a
200806L
V256iUsUsvC*z
__cpp_initializer_lists
distribute
__cpp_variadic_templates
-munaligned-access
200610L
mthumb
__cpp_rvalue_references
vUsUsv*zV256i
__cpp_attributes
#pragma clang loop
200707L
__builtin_ia32_tile_loadconfig
__cpp_decltype
hard-fp
200410
201411L
nounroll
__cpp_static_assert
Generate instrumented code to collect context sensitive execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
200907
soft-fp
__cpp_range_based_for
-fdebug-compilation-dir=
201711L
-municode
__cpp_constexpr_in_decltype
march=ck801
__builtin_bitrev
__builtin_getid
201304L
__builtin_setps
201603L
march=ck802
201907L
202110L
 [[gnu::ms_abi
__cpp_constexpr
200907L
 __declspec(allocator
__cpp_lambdas
200809L
march=ck803
__cpp_user_defined_literals
__cpp_unicode_literals
 __multiple_inheritance
200710L
-munsafe-fp-atomics
__cpp_raw_strings
march=ck804
200704L
__cpp_unicode_characters
 __unspecified_inheritance
__cpp_exceptions
199711L
march=ck805
__cpp_rtti
__multiple_inheritance
__GLIBCXX_BITSIZE_INT_N_0
Enable unsafe floating point atomic instructions (AMDGPU only)
__int128
march=ck807
__GLIBCXX_TYPE_INT_N_0
__IMAGE_SUPPORT__
__unspecified_inheritance
__SYCL_DEVICE_ONLY__
__CLANG_CUDA_APPROX_TRANSCENDENTALS__
march=ck810
__CUDA_ARCH__
201811
 __attribute__((ms_struct
202111
-frandomize-layout-seed-file=
202011
march=ck810v
201511
201307
 __attribute__((may_alias
201107
_OPENMP
march=ck860
__APPLE_EMBEDDED_SIMULATOR__
char
_Nullable
 __attribute__((maybe_undef
__nullable
-mv5
_Null_unspecified
march=ck860v
__null_unspecified
extern
_Nonnull
 __attribute__((micromips
__nonnull
__attribute__((objc_ownership(none)))
/hard-fp
__attribute__((objc_ownership(autoreleasing)))
long
__attribute__((objc_ownership(strong)))
 __attribute__((minsize
__attribute__((objc_ownership(weak)))
-fno-crash-diagnostics
__unsafe_unretained
+hard-fp
__autoreleasing
switch
__attribute__((objc_gc(strong)))
 __attribute__((min_vector_width
__strong
void
__attribute__((objc_gc(weak)))
/soft-fp
__weak
_Alignof
__FAST_RELAXED_MATH__
 __attribute__((mips16
__clang_analyzer__
-mv62
__SSP_ALL__
+soft-fp
__SSP_STRONG__
_Thread_local
__SSP__
vector=sw0
__LDBL_DECIMAL_DIG__
__ptrauth
__DECIMAL_DIG__
+soft
__FLT_RADIX__
catch
__pie__
vector=hw0
__PIE__
-frandomize-layout-seed=
__pic__
/ck801
__PIC__
friend
__NO_INLINE__
vector=hw2
__GCC_ATOMIC_
operator
__CLANG_ATOMIC_
+march=ck801
__GCC_ATOMIC_TEST_AND_SET_TRUEVAL
reinterpret_cast
__GNUC_STDC_INLINE__
vector=hw4
__GNUC_GNU_INLINE__
-mv66
__FINITE_MATH_ONLY__
/ck802
__NO_MATH_ERRNO__
typeid
__USER_LABEL_PREFIX__
__WINT_UNSIGNED__
restrict
__WCHAR_UNSIGNED__
+march=ck802
__CHAR_UNSIGNED__
char16_t
__BIGGEST_ALIGNMENT__
-fforce-emit-vtables
__POINTER_WIDTH__
Disable auto-generation of preprocessed source files and a script for reproduction during a clang crash
/ck803
LDBL
co_await
 [[gnu::far
import
+march=ck803
requires
FLT16
__UINTPTR_TYPE__
-mv67
__CHAR32_TYPE__
+march=ck804
__CHAR16_TYPE__
_Decimal32
__SIG_ATOMIC
 [[gnu::short_call
__WINT_TYPE__
__alignof
__WCHAR_TYPE__
/ck805
__SIZE_TYPE__
__builtin_FILE
__INTPTR_TYPE__
 [[gnu::near
__PTRDIFF_TYPE__
<seed>
__UINTMAX_C_SUFFIX__
+march=ck805
__UINTMAX_TYPE__
__float128
__INTMAX_C_SUFFIX__
near
__INTMAX_TYPE__
__label__
__SIZEOF_INT128__
/ck807
__SIZEOF_WINT_T__
__PRETTY_FUNCTION__
__SIZEOF_WCHAR_T__
 [[gnu::mode
__SIZEOF_SIZE_T__
-mv69
__SIZEOF_PTRDIFF_T__
+march=ck807
__SIZEOF_SHORT__
__is_destructible
__SIZEOF_POINTER__
 [[clang::musttail
__SIZEOF_LONG_LONG__
__is_constructible
__SIZEOF_LONG_DOUBLE__
+march=ck810
__SIZEOF_LONG__
__has_trivial_move_assign
__SIZEOF_INT__
 [[clang::ns_consumed
__SIZEOF_FLOAT__
-fno-cray-pointer
__SIZEOF_DOUBLE__
/ck810v
__UINTPTR
__has_trivial_destructor
__INTPTR
 [[clang::ns_consumes_self
__PTRDIFF
__is_base_of
__UINTMAX
+march=ck810v
__SIZE
__is_enum
__INTMAX
 __attribute__((ns_returns_autoreleased
__WINT
-mvirt
__WCHAR
/ck860
__LONG_LONG_MAX__
__is_trivially_constructible
__LONG_MAX__
 __attribute__((ns_returns_not_retained
__INT_MAX__
__add_lvalue_reference
__SHRT_MAX__
+march=ck860
__SCHAR_MAX__
__make_signed
__BITINT_MAXWIDTH__
 __attribute__((ns_returns_retained
__LLONG_WIDTH__
-freal-4-real-10
__LONG_WIDTH__
/ck860v
__INT_WIDTH__
__remove_reference_t
__SHRT_WIDTH__
 __attribute__((naked
__BOOL_WIDTH__
__is_trivially_relocatable
__CHAR_BIT__
+march=ck860v
__ILP32__
__is_scoped_enum
_ILP32
 __declspec(naked
__LP64__
-mvscale-max=
_LP64
/big
__LITTLE_ENDIAN__
__is_complete_type
__BIG_ENDIAN__
 __attribute__((no_builtin
__BYTE_ORDER__
__is_reference
3412
lib32/ilp32
__ORDER_PDP_ENDIAN__
Dump record layout information for all complete types
4321
Emits more virtual tables to improve devirtualization
__ORDER_BIG_ENDIAN__
-fno-cuda-approx-transcendentals
1234
lib32/ilp32f
__ORDER_LITTLE_ENDIAN__
__is_volatile
__FAST_MATH__
 [[gnu::nocommon
__OPTIMIZE_SIZE__
__is_convertible
__OPTIMIZE__
lib32/ilp32d
"UTF-16"
__module_private__
"UTF-32"
 [[gnu::nodebug
__clang_wide_literal_encoding__
-mvscale-min=
"UTF-8"
+mabi=ilp32d
__clang_literal_encoding__
__builtin_tmo_get_type_descriptor
_NATIVE_WCHAR_T_DEFINED
 [[clang::noderef
_WCHAR_T_DEFINED
__fastcall
extern
lib64/lp64
__private_extern__
__forceinline
__DEPRECATED
 [[clang::no_destroy
__ARM_DWARF_EH__
-freal-4-real-8
__SEH__
lib64/lp64f
__USING_SJLJ_EXCEPTIONS__
__kernel
__GXX_RTTI
 [[clang::noduplicate
__EXCEPTIONS
__builtin_astype
__BLOCKS__
+mabi=lp64f
__attribute__((__blocks__(byref)))
image1d_buffer_t
__block
 [[clang::noescape
__PASCAL_STRINGS__
-mvsx
OBJC_NEW_PROPERTIES
lib64/lp64d
__CONSTANT_CFSTRINGS__
image2d_array_msaa_depth_t
__OBJC_BOOL_IS_BOOL
 __attribute__((noinline
IB_DESIGNABLE
__noinline__
IBInspectable
ilp32d
void)__attribute__((ibaction)
__pascal
IBAction
 [[clang::noinline
__attribute__((iboutletcollection(ClassName)))
Don't use approximate transcendental functions
IBOutletCollection(ClassName)
mabi=ilp32d
__attribute__((iboutlet))
__bridge_retained
IBOutlet
 __attribute__((no_instrument_function
__OBJFW_RUNTIME_ABI__
__kindof
mabi=lp64f
__OBJC_GNUSTEP_RUNTIME_ABI__
_Null_unspecified
__NEXT_RUNTIME__
 __attribute__((nomerge
__OBJC_GC__
-mvzeroupper
OBJC_ZEROCOST_EXCEPTIONS
+march=
__OBJC2__
__finally
__GXX_EXPERIMENTAL_CXX0X__
 __attribute__((nomicromips
__STRICT_ANSI__
__if_not_exists
__VERSION__
+mabi=
__PRAGMA_REDEFINE_EXTNAME
__interface
__OPENCL_MEMORY_SCOPE_SUB_GROUP
 __attribute__((nomips16
__OPENCL_MEMORY_SCOPE_ALL_SVM_DEVICES
-freal-8-real-16
__OPENCL_MEMORY_SCOPE_DEVICE
mabi=
__OPENCL_MEMORY_SCOPE_WORK_GROUP
__OPENCL_MEMORY_SCOPE_WORK_ITEM
 __attribute__((no_profile_instrument_function
__ATOMIC_SEQ_CST
raw_identifier
__ATOMIC_ACQ_REL
/../../../../riscv64-unknown-elf/lib
__ATOMIC_RELEASE
utf8_char_constant
__ATOMIC_ACQUIRE
 __attribute__((no_randomize_layout
__ATOMIC_CONSUME
Use NMake/Jom format for the depfile
__ATOMIC_RELAXED
/../../../../riscv32-unknown-elf/lib
__GXX_WEAK__
utf32_string_literal
__GNUG__
 __attribute__((noreturn
1002
r_paren
__GXX_ABI_VERSION
/430
__GNUC_PATCHLEVEL__
ellipsis
__GNUC_MINOR__
-fforce-enable-int128
__GNUC__
-fno-cuda-flush-denormals-to-zero
"15.0.0 
-exceptions
__clang_version__
plusequal
__clang_patchlevel__
 [[clang::no_sanitize
__clang_minor__
minusequal
/430/exceptions
__clang_major__
slash
__clang__
 [[clang::no_speculative_load_hardening
__llvm__
-mwarn-nonportable-cfstrings
#define 
+exceptions
# 1 "<built-in>" 2
spaceship
# 1 "<command line>" 1
 [[gnu::no_split_stack
# 1 "<built-in>" 3
greatergreaterequal
__opencl_c_int64
exceptions
__opencl_c_images
pipeequal
__opencl_c_fp64
 [[clang::no_stack_protector
__opencl_c_program_scope_global_variables
-frealloc-lhs
__opencl_c_read_write_images
/amd64
__opencl_c_device_enqueue
hashhash
__opencl_c_3d_image_writes
no_stack_protector
__opencl_c_subgroups
coloncolon
__opencl_c_atomic_order_seq_cst
/sparcv9
__opencl_c_atomic_order_acq_rel
caretcaret
__opencl_c_generic_address_space
 __attribute__((no_thread_safety_analysis
__opencl_c_pipes
-mwatchos-simulator-version-min=
cl_intel_device_side_avc_motion_estimation
-mx32
cl_intel_subgroups_short
annot_primary_expr
cl_intel_subgroups
 __attribute__((nothrow
cl_arm_integer_dot_product_accumulate_saturate_int8
annot_pragma_pack
cl_arm_integer_dot_product_accumulate_int16
/x32
cl_arm_integer_dot_product_accumulate_int8
annot_pragma_msstruct
cl_arm_integer_dot_product_int8
 __declspec(nothrow
cl_amd_media_ops2
-fno-cuda-host-device-constexpr
cl_amd_media_ops
+mx32
__cl_clang_bitfields
annot_pragma_fenv_round
__cl_clang_non_portable_kernel_param_types
 __attribute__((nouwtable
__cl_clang_variadic_functions
annot_pragma_ms_pragma
__cl_clang_function_pointers
/libgcc.a
cl_clang_storage_class_specifiers
Allow __declspec as a keyword
cl_khr_subgroups
-fdump-record-layouts-simple
cl_khr_srgb_image_writes
Enable support for int128_t type
cl_khr_mipmap_image_writes
mx32
cl_khr_mipmap_image
Allow division operations to be reassociated
__is_interface_class
__is_sealed
cl_khr_depth_images
__is_trivially_destructible
cles_khr_int64
 [[clang::not_tail_called
cl_khr_3d_image_writes
__has_trivial_move_constructor
cl_khr_int64_extended_atomics
omp_null_allocator
cl_khr_int64_base_atomics
__has_trivial_assign
cl_khr_fp16
gcc::Preprocessor
cl_khr_fp64
__has_virtual_destructor
cl_khr_local_int32_extended_atomics
omp_large_cap_mem_alloc
cl_khr_local_int32_base_atomics
__is_empty
cl_khr_global_int32_extended_atomics
gcc preprocessor
cl_khr_global_int32_base_atomics
__is_pod
cl_khr_byte_addressable_store
omp_high_bw_mem_alloc
failed to find or infer submodule '
Specify wavefront size 64 mode (AMDGPU only)
failed to find module '
gcc::Compiler
Note: including file:
__is_bounded_array
hlsl
omp_cgroup_mem_alloc
__is_referenceable
gcc frontend
__is_complete_type
omp_thread_mem_alloc
-frecord-command-line
clcpp
GNU::Assembler
__is_object
notinbranch
__is_member_object_pointer
cppm
gcc::Linker
__is_volatile
-mwidekl
linker (via gcc)
__is_trivially_assignable
nohost
__builtin_xnu_types_compatible
/c++/
__array_rank
#pragma omp declare target
unknown module format
-frecord-gcc-switches
/system/develop/headers/c++/v1
2.1.0
Dump record layout information in a simple form used for testing
https://docs.oasis-open.org/sarif/sarif/v2.1.0/cos02/schemas/sarif-schema-2.1.0.json
-frecord-marker=
%0 was deserialized
-mx32
tapi-1500.0.12.6
PCH DECL: 
Apple 
.hpp
-type=o
no-format
 __attribute__((os_consumes_this
#include "
 [[clang::os_consumes_this
#import "
-mx87
extern "C" {
 __attribute__((os_returns_not_retained
omp_no_openmp
omp_no_openmp_routines
STATISTICS FOR '
-targets=host-x86_64-unknown-linux
<PCH>
 __attribute__((os_returns_retained
-fmodule-file-cache-key
Address space 0 can never be non-integral
Missing size specification for pointer in datalayout string
while building module '
 [[clang::os_returns_retained
' imported from 
Pointer preferred alignment must be a power of 2
in module '
in file included from 
ABI alignment specification must be >0 for non-aggregate types
 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
 [[clang::os_returns_retained_on_non_zero
(skipping 
-mxgot
expanded from macro '
-input=/dev/null
expanded from here
Unexpected trailing characters after mangling specifier in datalayout string
header_
 [[clang::os_returns_retained_on_zero
Unknown specifier in datalayout string
mcin
-fno-cuda-short-ptr
 [ shape="box", label="
hipfb
digraph "dependencies" {
 __attribute__((objc_bridge
 #${}^!
pass-remarks
<built-in>
pass-remarks-missed
 [[clang::objc_bridge
Preserve the type for recovery expressions when possible
 __attribute__((objc_bridge_mutable
non-global-value-max-name-size
# *** Automatically generated by Clang ***
disable-i2p-p2i-opt
-header-include-file
opaque-pointers
 __attribute__((objc_bridge_related
-skip-unused-modulemap-deps
propagate-attrs
-mxsaveopt
-sys-header-deps
 [[clang::objc_bridge_related
opt-bisect-limit
Maximum optimization to perform
-dependency-dot
 __attribute__((objc_class_stub
-dependency-file
  .protected __hip_fatbin
DW_TAG_null
DW_TAG_class_type
 __attribute__((objc_complete_definition
DW_TAG_imported_declaration
-fshow-skipped-includes
 __attribute__((objc_designated_initializer
DW_TAG_pointer_type
-fminimize-whitespace
  .type __hip_fatbin,@object
-fuse-line-directives
DW_TAG_structure_type
-frewrite-includes
 __attribute__((objc_direct
-frewrite-imports
-mxsaves
  .section .hip_fatbin,"a",@progbits
DW_TAG_inheritance
 __attribute__((objc_direct_members
DW_TAG_set_type
-disable-pragma-debug-crash
  .globl __hip_fatbin
-setup-static-analyzer
DW_TAG_base_type
-detailed-preprocessing-record
 __attribute__((objc_exception
-dump-deserialized-decls
-frecovery-ast
-fallow-pch-with-different-modules-cache-path
  .p2align 
-fallow-pch-with-compiler-errors
DW_TAG_namelist_item
-fno-validate-pch
 __attribute__((objc_protocol_requires_explicit_implementation
-fobjc-arc-cxxlib=
DW_TAG_template_value_parameter
-pch-through-hdrstop-create
__hip_fatbin:
-pch-through-header=
DW_TAG_variable
-undef
 __attribute__((objc_externally_retained
-include-pch
-mzvector
-imacros
  .incbin 
hlsl.h
DW_TAG_partial_unit
opencl-c.h
 __attribute__((objc_gc
opencl-c-base.h
DW_TAG_type_unit
-reorder-cxx-includes-hack
--filetype=obj
-fmodules-strict-context-hash
DW_TAG_generic_subrange
-fmodules-hash-content
 __attribute__((objc_independent_class
-fdisable-module-hash
-fno-cxx-exceptions
-nostdsysteminc
llvm-mc
-fmodule-format=
DW_TAG_format_label
-fmodule-file-home-is-cwd
 __unsafe_unretained
-fmodule-map-file-home-is-cwd
DW_TAG_GNU_EINCL
-nostdinc++
llvm-link
-nobuiltininc
DW_TAG_GNU_call_site
-fimplicit-module-maps
none
-fvalidate-ast-input-files-content
Like -MD, but also implies -E and writes to stdout by default
-fmodules-disable-diagnostic-validation
-flavor
-fmodules-validate-once-per-build-session
DW_TAG_SUN_codeflags
-fbuild-session-timestamp=
copy
-fmodules-prune-after=
DW_TAG_SUN_dtor_info
-fmodules-prune-interval=
--no-undefined
-fprebuilt-implicit-modules
DW_TAG_SUN_hi
-fmodules-user-build-path
mutableCopy
/validator-version
-frecursive
-mfpmath
-plugin-opt=-amdgpu-internalize-symbols
-target-linker-version
DW_TAG_GHS_using_namespace
-triple
 __attribute__((objc_method_family
-darwin-target-variant-triple
DW_TAG_UPC_strict_type
-target-abi
-plugin-opt=-mattr=
-target-feature
DW_TAG_BORLAND_property
-tune-cpu
 __attribute__((NSObject
-target-cpu
Enable enhanced struct-path aware Type Based Alias Analysis
-munsafe-fp-atomics
-plugin-opt=-force-import-all
-mcode-object-version=
DW_AT_ordering
-meabi
 __attribute__((objc_nonlazy_class
-mcmodel=
DW_AT_stmt_list
-fforce-enable-int128
-save-temps
-fcuda-short-ptr
DW_AT_discr
-cl-ext=
Form fused FP ops (e.g. FMAs): fast (fuses across statements disregarding pragmas) | on (only fuses in the same statement unless dictated by pragmas) | off (never fuses) | fast-honor-pragmas (fuses across statements unless diectated by pragmas). Default is 'fast' for CUDA, 'fast-honor-pragmas' for HIP, and 'on' otherwise.
-fcompilation-caching-service-path
-fno-cxx-modules
-fcache-disable-replay
-amdgpu-internalize-symbols
-fcache-compile-job
DW_AT_containing_type
-fcas-include-tree
 __attribute__((objc_ownership
-fdepscan-prefix-map=
DW_AT_lower_bound
-fno-modules-share-filemanager
-mlink-bitcode-file
-fallow-pcm-with-compiler-errors
DW_AT_start_scope
-version
 __attribute__((objc_precise_lifetime
-fno-pch-timestamp
Use relative paths for invoking subcommands
-foverride-record-layout=
AMDGPU address sanitizer runtime library (asanrtl) is not found. Please install ROCm device library which supports address sanitizer
-fixit-to-temporary
DW_AT_calling_convention
-fixit-recompile
 __attribute__((objc_requires_property_definitions
-fix-only-warnings
DW_AT_decl_file
-fix-what-you-can
xnack
-stats-file=
DW_AT_encoding
-print-stats
 __attribute__((objc_requires_super
-arcmt-action=
Override the default ABI to return small structs in registers
-mt-migrate-directory
xnack+
-ast-dump-lookups
DW_AT_segment
-ast-dump-decl-types
 __attribute__((objc_returns_inner_pointer
-fno-implicit-modules-use-lock
DW_AT_use_location
-fmodules-embed-all-files
AMDGCN::Linker
-fmodules-embed-file=
DW_AT_allocated
-fno-modules-global-index
 __attribute__((objc_root_class
-ast-dump-filter
Don't clear the Clang AST before running backend code generation
-add-plugin
amdgcn-link
-disable-free
DW_AT_trampoline
-code-completion-with-fixits
 __attribute__((objc_runtime_name
-code-completion-brief-comments
DW_AT_description
-no-code-completion-ns-level-decls
-no-code-completion-globals
DW_AT_decimal_sign
-code-completion-patterns
 __attribute__((objc_runtime_visible
-code-completion-macros
Disable modules for C++
-aux-triple
-load-pass-plugin
-ast-merge
DW_AT_elemental
-print-supported-cpus
 __attribute__((objc_subclassing_restricted
-mllvm
DW_AT_main_subprogram
-relocatable-pch
-passes=hip-post-link-passes
-help
DW_AT_linkage_name
-ftime-trace=
 __attribute__((objc_suppress_direct
-ftime-trace-granularity=
Do not include global declarations in code-completion results.
-ftime-trace
-fno-temp-file
DW_AT_dwo_name
-fmodule-map-file=
 suppress_direct
--extract-api-ignores=
DW_AT_call_all_calls
--product-name=
--spirv-max-version=1.1
-index-ignore-pcms
DW_AT_call_value
-index-ignore-macros
 read_only
-index-unit-output-path
Use atexit or __cxa_atexit to register global destructors
-index-record-codegen-name
--spirv-ext=+all
-index-ignore-system-symbols
DW_AT_call_data_value
-index-store-path
 write_only
-objcmt-allowlist-dir-path=
DW_AT_deleted
-objcmt-migrate-designated-init
-vectorize-loops=false
-objcmt-ns-nonatomic-iosonly
DW_AT_GHS_using_namespace
-objcmt-returns-innerpointer-property
 read_write
-objcmt-atomic-property
Do not include declarations inside namespaces (incl. global namespace) in the code-completion results.
-objcmt-migrate-protocol-conformance
-vectorize-slp=false
-objcmt-migrate-ns-macros
DW_AT_MIPS_linkage_name
-objcmt-migrate-instancetype
read_only
-objcmt-migrate-annotation
DW_AT_MIPS_has_inlines
-objcmt-migrate-property-dot-syntax
'-nogpuinc'
-objcmt-migrate-readwrite-property
DW_AT_MIPS_allocatable_dopetype
-objcmt-migrate-readonly-property
fast,on,off,fast-honor-pragmas
-objcmt-migrate-all
-fno-d-lines-as-code
-objcmt-migrate-property
hip-device-lib
-objcmt-migrate-subscripting
DW_AT_HP_cold_region_low_pc
-objcmt-migrate-literals
read_write
-arcmt-migrate-emit-errors
DW_AT_HP_prof_flags
-arcmt-migrate-report-output
hipspv-
-analyzer-werror
DW_AT_HP_definition_points
-analyzer-config-compatibility-mode
 constant
-analyzer-checker-option-help-developer
--no-cuda-gpu-arch=
-analyzer-checker-option-help-alpha
' target
-analyzer-checker-option-help
DW_AT_GHS_subcpu
-analyzer-list-enabled-checkers
 [[clang::opencl_constant
-analyzer-config-help
DW_AT_mac_info
-analyzer-checker-help-developer
libLLVMHipSpvPasses.so
-analyzer-checker-help-alpha
DW_AT_GNU_vector
-analyzer-checker-help
opencl_constant
-analyzer-disable-all-checks
-frelaxed-template-template-args
-analyzer-stats
HIPSPV::Linker
-analyzer-max-loop
DW_AT_GNU_all_tail_call_sites
-analyzer-disable-retry-exhausted
 generic
-analyzer-inline-max-stack-depth
DW_AT_GNU_deleted
-analyzer-dump-egraph
hipspv-link
-analyzer-viz-egraph-graphviz
DW_AT_GNU_addr_base
-trim-egraph
 [[clang::opencl_generic
-analyze-function
Do not include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
-analyzer-display-progress
auto-vectorization
-analyzer-opt-analyze-headers
DW_AT_SUN_vtable
-unoptimized-cfg
generic
-no-finalize-removal
DW_AT_SUN_compile_options
-no-ns-alloc-error
--arch=hexagon
-fcas-fs-working-directory
DW_AT_SUN_func_offsets
-fcas-fs
 __global
-working-directory
-fno-d-lines-as-comments
-hlsl-entry
-filetype=obj
__CET__=3
DW_AT_SUN_memop_signature
__CET__=2
 __attribute__((opencl_global
__CET__=1
DW_AT_SUN_hwcprof_signature
sign-and-auth
-mcpu=hexagon
sign-and-strip
DW_AT_SUN_pass_with_const
strip
__global
-fptrauth-objc-isa-mode=sign-and-auth
--no-cuda-version-check
main
-mhvx-ieee-fp
<module-includes>
DW_AT_SUN_return_value_ptr
<stdin>
 __attribute__((opencl_global_device
DW_AT_SUN_dtor_state_final
-gpsize=
assembler-with-cpp
DW_AT_SUN_namelist_spec
hlsl
 __attribute__((opencl_global_host
renderscript
-frename-registers
/../target
cuda
DW_AT_GNU_denominator
clcpp
 __attribute__((intel_reqd_sub_group_size
-user
DW_AT_GO_elem
-system
-header-unit
DW_AT_IBM_wsa_addr
-header
 kernel
precompiled-header
--no-default-config
-module-map
-cpp-output
DW_AT_BORLAND_property_implements
ObjC migration
 local
ARC migration
DW_AT_BORLAND_Delphi_class
-emit-module
/hexagon/lib
-fsystem-module
-fdump-record-layouts
Must specify a valid interface stub format type, ie: -interface-stub-version=ifs-v1
-ffp-eval-method=
 is deprecated.
-fno-data-sections
Invalid interface stub format: 
+reserved-r19
ifs-v1
DW_AT_LLVM_config_macros
alpha.webkit
local
DW_AT_LLVM_ptrauth_address_discriminated
valist
-hexagon-autohvx
alpha.osx
DW_AT_LLVM_ptrauth_authenticates_null_values
alpha.llvm
 __private
core.builtin
-no-emit-llvm-uselists
alpha.osx.cocoa.localizability
/hexagon/include
optin.performance
DW_AT_APPLE_property_name
deadcode
 __attribute__((opencl_private
optin.osx.cocoa
DW_AT_APPLE_objc_complete_type
optin.cplusplus
/hexagon/include/c++/v1
alpha.nondeterminism
DW_AT_APPLE_origin
alpha.security.cert.env
__private
alpha.deadcode
-frepack-arrays
alpha.fuchsia
/hexagon/include/c++
alpha.security.cert.pos
DW_FORM_block
optin
opencl_private
core
DW_FORM_sdata
apiModeling
hexagonv60
osx.coreFoundation
DW_FORM_ref1
unix
 __attribute__((optnone
alpha.apiModeling
-no-enable-noundef-analysis
security.insecureAPI
optin.mpi
DW_FORM_flag_present
alpha.core
 __attribute__((overloadable
alpha.unix
DW_FORM_ref_sup4
security
hvx-length
alpha.security
DW_FORM_implicit_const
optin.osx
 [[gsl::Owner
optin.osx.cocoa.localizability
-fno-debug-info-for-profiling
osx.cocoa
osx.coreFoundation.containers
DW_FORM_addrx1
cplusplus
 [[clang::ownership_holds
alpha.security.cert
DW_FORM_GNU_addr_index
alpha.osx.cocoa
128b
alpha.cplusplus
DW_FORM_LLVM_addrx_offset
alpha.security.taint
 [[clang::ownership_returns
webkit
-no-finalize-removal
apiModeling.google
apiModeling.llvm
DW_OP_const4s
core.uninitialized
 [[clang::ownership_takes
unix.cstring
DW_OP_consts
optin.portability
nullability
DW_OP_pick
debug
ownership_returns
alpha
Turn on loop reroller
alpha.clone
alpha.unix.cstring
DW_OP_mod
security.insecureAPI.vfork
 __attribute__((packed
security.insecureAPI.strcpy
DW_OP_or
security.insecureAPI.rand
security.insecureAPI.mktemp
DW_OP_shr
security.insecureAPI.mkstemp
 __attribute__((param_typestate
security.insecureAPI.gets
--no-gpu-bundle-output
security.insecureAPI.getpw
-march=hexagon
security.insecureAPI.decodeValueOfObjCType
DW_OP_lt
security.insecureAPI.bzero
 __attribute__((pascal
security.insecureAPI.bcopy
DW_OP_lit1
security.insecureAPI.bcmp
-call_shared
cplusplus.VirtualCallModeling
DW_OP_lit5
optin.cplusplus.VirtualCall
Specifies the evaluation method to use for floating-point arithmetic.
unix.Vfork
-fno-debug-macro
osx.cocoa.VariadicMethodTypes
-dynamic-linker=/lib/ld-musl-hexagon.so.1
valist.ValistBase
DW_OP_lit13
core.VLASize
 __attribute__((pass_object_size
valist.Unterminated
DW_OP_lit17
alpha.deadcode.UnreachableCode
/usr/lib/crt1.o
optin.portability.UnixAPI
DW_OP_lit21
unix.API
 __attribute__((pass_dynamic_object_size
optin.cplusplus.UninitializedObject
-no-hip-rt
valist.Uninitialized
/usr/lib/crti.o
core.uninitialized.NewArraySize
DW_OP_lit29
core.uninitialized.Assign
pass_object_size
core.uninitialized.ArraySubscript
DW_OP_reg1
core.UndefinedBinaryOperatorResult
-lclang_rt.builtins-hexagon
core.uninitialized.CapturedBlockVariable
DW_OP_reg5
core.uninitialized.Branch
 __attribute__((patchable_function_entry
alpha.webkit.UncountedLocalVarsChecker
-frewrite-imports
webkit.UncountedLambdaCapturesChecker
hexagon/lib
alpha.webkit.UncountedCallArgsChecker
DW_OP_reg13
security.insecureAPI.UncheckedReturn
aapcs
apiModeling.TrustReturnsNonnull
DW_OP_reg17
apiModeling.TrustNonnull
/crt0_standalone.o
debug.DumpTraversal
DW_OP_reg21
alpha.core.TestAfterDivZero
 __attribute__((pcs
debug.TaintTest
-no-implicit-float
cplusplus.StringChecker
/crt0.o
debug.StreamTester
DW_OP_reg29
alpha.unix.Stream
 [[gsl::Pointer
debug.StdCLibraryFunctionsTester
DW_OP_breg1
apiModeling.StdCLibraryFunctions
/initS.o
alpha.unix.StdCLibraryFunctionArgs
DW_OP_breg5
core.StackAddressEscape
 __ptrauth_restricted_intptr
core.StackAddrEscapeBase
Do not emit macro debug information
alpha.core.StackAddressAsyncEscape
/init.o
cplusplus.SmartPtrModeling
DW_OP_breg13
alpha.cplusplus.SmartPtr
__ptrauth_restricted_intptr
alpha.core.SizeofPtr
DW_OP_breg17
alpha.unix.SimpleStream
/finiS.o
security.insecureAPI.SecuritySyntaxChecker
DW_OP_breg21
alpha.cplusplus.STLAlgorithmModeling
 [[clang::ptrauth_struct
osx.cocoa.RunLoopAutoreleaseLeak
Don't generate implicit SME instructions or mode switch
apiModeling.llvm.ReturnValue
/fini.o
core.uninitialized.UndefReturn
DW_OP_breg29
alpha.security.ReturnPtrRange
 [[clang::preferred_name
osx.cocoa.RetainCount
DW_OP_fbreg
osx.cocoa.RetainCountBase
hexagon::Assembler
debug.ReportStmts
DW_OP_xderef_size
webkit.RefCntblBaseVirtualDtor
 [[clang::preserve_all
alpha.security.cert.pos.34c
-frewrite-map-file=
cplusplus.PureVirtualCall
hexagon-as
alpha.unix.PthreadLock
DW_OP_bit_piece
alpha.core.PthreadLockBase
 [[clang::preserve_most
debug.DumpPostDominators
DW_OP_addrx
alpha.core.PointerSub
hexagon::Linker
alpha.nondeterminism.PointerSorting
DW_OP_regval_type
alpha.nondeterminism.PointerIteration
 __attribute__((pt_guarded_var
alpha.core.PointerArithm
-no-integrated-cpp
alpha.osx.cocoa.localizability.PluralMisuseChecker
hexagon-ld
cplusplus.PlacementNew
DW_OP_HP_fltconst8
optin.performance.Padding
 __ptr32
osx.cocoa.UnusedIvars
DW_OP_INTEL_bit_piece
osx.cocoa.SuperDealloc
hexagon-link
osx.cocoa.MissingSuperCall
-fdefault-calling-conv=
osx.cocoa.SelfInit
source,double,extended
osx.ObjCProperty
-fno-debug-pass-manager
osx.cocoa.NonNilReturnValue
osx.cocoa.IncompatibleMethodTypes
DW_OP_LLVM_implicit_pointer
osx.cocoa.Loops
user
osx.cocoa.ObjCGenerics
DW_ATE_complex_float
osx.cocoa.Dealloc
osx.coreFoundation.containers.OutOfBounds
DW_ATE_unsigned
osx.coreFoundation.containers.PointerSizedValues
machine
osx.cocoa.AtSync
-no-ns-alloc-error
osx.OSObjectRetainCount
optin.osx.OSObjectCStyleCast
DW_ATE_decimal_float
osx.NumberObjectConversion
 [[gnu::randomize_layout
nullability.NullableReturnedFromNonnull
DW_ATE_HP_complex_float
nullability.NullablePassedToNonnull
nullability.NullableDereferenced
DW_ATE_HP_imaginary_float90
nullability.NullabilityBase
 [[clang::enforce_read_only_placement
nullability.NullReturnedFromNonnull
-fropi
nullability.NullPassedToNonnull
/lib/i386-gnu
core.NonnilStringConstants
DW_END_big
core.NonNullParamChecker
 [[gnu::regcall
optin.osx.cocoa.localizability.NonLocalizedStringChecker
DW_ACCESS_public
webkit.NoUncountedMemberChecker
i386-gnu
core.builtin.NoReturnFunctions
DW_DEFAULTED_in_class
osx.cocoa.NilArg
 __attribute__((reinitializes
cplusplus.NewDeleteLeaks
--no-offload-arch=
cplusplus.NewDelete
/usr/lib/../
osx.NSOrCFErrorDerefChecker
DW_LANG_C89
osx.cocoa.NSError
 __attribute__((release_capability
osx.cocoa.NSAutoreleasePool
DW_LANG_Cobol74
cplusplus.Move
/lib/ld.so
alpha.security.MmapWriteExec
DW_LANG_Pascal83
alpha.osx.cocoa.MissingInvalidationMethod
 __attribute__((release_shared_capability
alpha.cplusplus.MismatchedIterator
Disables debug printing for the new pass manager
unix.MismatchedDeallocator
/usr/include/
unix.MallocSizeof
DW_LANG_ObjC_plus_plus
alpha.security.MallocOverflow
 __attribute__((release_generic_capability
unix.Malloc
DW_LANG_OpenCL
osx.API
lib32
osx.SecKeychainAPI
DW_LANG_C_plus_plus_03
optin.mpi.MPI-Checker
 __attribute__((unlock_function
osx.MIG
--no-offload-new-driver
debug.DumpLiveVars
lib64
debug.DumpLiveExprs
DW_LANG_C_plus_plus_14
alpha.llvm.Conventions
release_capability
alpha.osx.cocoa.IvarInvalidationModeling
DW_LANG_BLISS
alpha.cplusplus.IteratorRange
GNU::Linker
alpha.cplusplus.IteratorModeling
DW_ID_case_sensitive
alpha.cplusplus.InvalidatedIterator
release_generic_capability
alpha.security.cert.env.InvalidPtr
-frounding-math
alpha.osx.cocoa.InstanceVariableInvalidation
i386-linux-gnu
cplusplus.InnerPointer
DW_CC_pass_by_value
alpha.core.IdenticalExpr
 __attribute__((release_handle
alpha.security.taint.TaintPropagation
DW_CC_BORLAND_stdcall
apiModeling.google.GTest
mipsisa64r6
optin.performance.GCDAntipattern
DW_CC_BORLAND_thiscall
alpha.fuchsia.Lock
 __attribute__((kernel
fuchsia.HandleChecker
-no-opaque-pointers
security.FloatLoopCounter
-linux-
alpha.core.FixedAddr
DW_CC_LLVM_SpirFunction
debug.ExprInspection
 __attribute__((requires_capability
debug.ViewExplodedGraph
DW_CC_LLVM_PreserveAll
debug.ErrnoTest
gnuabin32
apiModeling.Errno
DW_INL_not_inlined
alpha.unix.Errno
-ffp-exception-behavior=
alpha.cplusplus.EnumCastOutOfRange
-fno-debug-ranges-base-address
optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
gnuabi64
core.DynamicTypePropagation
DW_LNS_advance_pc
alpha.core.DynamicTypeChecker
 __attribute__((requires_shared_capability
unix.DynamicMemoryModeling
DW_LNS_negate_stmt
debug.DumpDominators
/lib/mips64-linux-gnu
core.DivideZero
DW_LNS_set_prologue_end
alpha.osx.cocoa.DirectIvarAssignment
 __attribute__((shared_locks_required
core.NullDereference
-no-pedantic
security.insecureAPI.DeprecatedOrUnsafeBufferHandling
mipsisa64r6el
alpha.cplusplus.DeleteWithNonVirtualDtor
DW_MACINFO_undef
debug.DebugIteratorModeling
requires_capability
debug.DebugContainerModeling
DW_MACINFO_invalid
deadcode.DeadStores
mips64el
valist.CopyToSelf
DW_MACRO_end_file
alpha.core.Conversion
requires_shared_capability
debug.DumpControlDependencies
Add -rpath with architecture-specific resource directory to the linker flags
alpha.cplusplus.ContainerModeling
/lib/mips64el-linux-gnu
debug.ConfigDumper
DW_MACRO_undef_strx
alpha.clone.CloneChecker
 __declspec(restrict
osx.cocoa.ClassRelease
DW_MACRO_GNU_end_file
alpha.unix.Chroot
/lib/powerpc-linux-gnuspe
apiModeling.llvm.CastValue
DW_MACRO_GNU_define_indirect_alt
alpha.core.CastToStruct
 [[gnu::malloc
alpha.core.CastSize
-no-pthread
debug.ViewCallGraph
relro
debug.DumpCallGraph
DW_RLE_base_address
debug.DumpCalls
malloc
core.CallAndMessageModeling
DW_LLE_base_addressx
core.CallAndMessage
opt/rh/
cplusplus.SelfAssignment
DW_LLE_default_location
alpha.unix.cstring.UninitializedRead
 [[gnu::retain
unix.cstring.BadSizeArg
-fno-debug-types-section
alpha.unix.cstring.OutOfBounds
libo32
unix.cstring.NullArg
DW_CFA_nop
alpha.unix.cstring.NotNullTerminated
 [[clang::return_typestate
unix.cstring.CStringModeling
DW_CFA_set_loc
alpha.unix.cstring.BufferOverlap
/usr/libo32
osx.coreFoundation.CFRetainRelease
DW_CFA_offset_extended
osx.coreFoundation.CFNumber
 [[gnu::returns_nonnull
debug.ViewCFG
Disable command line arguments round-trip.
debug.DumpCFG
/lib/..
osx.coreFoundation.CFError
DW_CFA_def_cfa_register
alpha.core.C11Lock
 [[gnu::returns_twice
core.builtin.BuiltinFunctions
DW_CFA_offset_extended_sf
alpha.core.BoolAssignment
/usr/lib/..
alpha.unix.BlockInCriticalSection
DW_CFA_val_offset_sf
osx.cocoa.AutoreleaseWrite
 __attribute__((sycl_kernel
alpha.security.ArrayBoundV2
-frtti
alpha.security.ArrayBound
/../lib/libc++.so
debug.Stats
DW_APPLE_PROPERTY_retain
debug.AnalysisOrder
 __attribute__((sycl_special_class
an unsigned
DW_APPLE_PROPERTY_atomic
a boolean
/../../../../
a filename
DW_APPLE_PROPERTY_nullability
'track-conditions' to also be enabled
 __attribute__((scoped_lockable
--no-standard-libraries
dynamic-bifurcate
/libc
inlining
DW_UT_split_type
unexplored_first_queue
 __attribute__((section
destructors
DW_ATOM_die_tag
invocations.yaml
/system/bin/linker64
externalDefMap.txt
Dump the layouts of all vtables that will be emitted in a translation unit
small
Specifies the exception behavior of floating-point operations.
deep
-fno-declspec
block
/system/bin/linker
statement
Generate coverage mapping to enable code coverage analysis
text-minimal
Set default calling convention
text
-fdwarf-directory-asm
sarif-html
plist-html
Generate read-write position independent code (ARM only)
plist-multi-file
plist
html-single-file
 [[gnu::selectany
SV64
range
 __attribute__((sentinel
HLSL
LLVM IR
/lib/ld-musl-
 __attribute__((set_typestate
RenderScript
--no-system-header-prefix=
CUDA
.so.1
C++ for OpenCL
R_POS
OpenCL
 __attribute__((shared_trylock_function
Objective-C++
R_REL
ld-linux-aarch64.so.1
Objective-C
R_GL
 [[clang::speculative_load_hardening
microsoft
Treat all #include paths starting with <prefix> as not including a system header.
fuchsia
ld-linux-aarch64_be.so.1
-ccc-arcmt-migrate
R_TLS_IE
Check for ARC migration issues that need manual handling
 [[clang::standalone_debug
-cc1
-ccc-arcmt-check
 __attribute__((stdcall
remarks-section
ld-linux.so.3
can't read more than %zu at a time, trying to read %u
can't enter sub-block: current code size is 0
-cc1-args
Abbreviation starts with an Array or a Blob
Use absolute paths for invoking subcommands (default)
 __stdcall
-canonical-prefixes
Array op not second to last
-c-isystem
Add directory to the C SYSTEM include search path
<directory>
-fno-default-inline
 __declspec(strict_gs_check
cortex-a34
cortex-a35
Pass -b <arg> to the linker on AIX
 [[gsl::suppress
cortex-a57
<prefix>
ld-uClibc-mipsn8.so.0
Search $prefix$file for executables, libraries, and data files. If $prefix is a directory, search $prefix/$file
cortex-a73
not_swift_private
-bundle
cortex-a77
-bundle_loader
ld-uClibc.so.0
This compilation is part of building a PCH with corresponding object file.
cortex-r82
-building-pch-with-obj
 [[clang::swift_async
/Bt+
--no-warnings
ld-musl-mipsel.so.1
Do not write current time into COFF output (breaks link.exe /incremental)
neoverse-v1
/Brepro
 [[clang::swiftasynccall
Write current time into COFF output (default)
apple-a8
/Brepro-
ld-musl-mips.so.1
--bootclasspath
apple-a12
--bootclasspath=
 [[clang::swift_async_context
/bigobj
-bind_at_load
-no_dead_strip_inits_and_terms
ld-linux-mipsn8.so.1
apple-s5
/await
zero_argument
/await:
falkor
Auxiliary target triple.
ld64.so.2
-aux-triple
thunderx3t110
Target specific auxiliary attributes
 __attribute__((swift_async_error
Target a specific auxiliary cpu type
-aux-target-feature
-fsafe-buffer-usage-suggestions
ld64.so.1
-aux-target-cpu
ampere1
--autocomplete=
 __attribute__((swift_async_name
Build ASTs and view them with GraphViz
+crc
-ast-view
ld-linux-riscv32-
Build ASTs and then pretty-print them
+sm4
-ast-print
 __attribute__((swift_bridge
Merge the given AST file into the translation unit being compiled.
<ast file>
Disable builtin #include directories
ld-linux-riscv64-
-ast-merge
+fp16fml
Build ASTs and print the list of declaration node qualified names
 __attribute__((swiftcall
-ast-list
+sve2
Build ASTs and then debug dump them
ld-linux.so.2
-ast-dump
+sve2-bitperm
Build ASTs and then debug dump them in the specified format. Supported formats include: default, json
 __attribute__((swift_context
Build ASTs and then debug dump their name lookup tables
-ast-dump=
Display suggestions to update code associated with -Wunsafe-buffer-usage warnings
libx32
-ast-dump-lookups
+bf16
<dump_filter>
null_result
Use with -ast-dump or -ast-print to dump/print only AST declaration nodes having a certain substring in a qualified name. Use -ast-list to list all filterable declaration node names.
+tme
-ast-dump-filter
ld-linux-x32.so.2
-ast-dump-filter=
+flagm
Include declaration types in AST dumps
nonzero_result
Build ASTs and then debug dump them, forcing deserialization
-ast-dump-decl-types
Disable predefined and command line preprocessor macros
ld-linux-x86-64.so.2
-ast-dump-all
Build ASTs and then debug dump them in the specified format, forcing deserialization. Supported formats include: default, json
 __attribute__((swift_error_result
-ast-dump-all=
+v8a
--assert
/opt/nec/ve/lib/ld-linux-ve.so.1
--assert=
armv8.2-a
--assemble
 __attribute__((swift_indirect_result
-as-secure-log-file
Emit .secure_log_unique directives to this filename.
-fno-defer-pop
/usr/
Set build target to arm64ec
+v8.4a
/arm64EC
 __attribute__((swift_name
Output path for the plist report
armv8.6-a
-arcmt-migrate-report-output
/../include/c++
Emit ARC errors even if the migrator can fix them
8.7-A
-arcmt-migrate-emit-errors
enum
The ARC migration action to take
check,modify,migrate
-nocudalib
/../include/g++
-arcmt-action=
armv9.1-a
-arch
 __attribute__((swift_wrapper
-arch_only
9.2-A
-arch_errors_fatal
-lamdhip64
Set architecture for code generation
+v9.3a
/arch:
swift_wrapper
Run static analysis engine
-ansi
Set destructor type used in ASan instrumentation
libr6
-analyze
-lse
Run the static analyzer
 __attribute__((swift_private
--analyze
-crypto
Emit analyzer results as errors rather than warnings
libr2
-analyzer-werror
-sha3
Display exploded graph using GraphViz
 [[clang::symbol_metadata_footnote
Add clang-tidy check string (enable, -disable, comma-separated)
-analyzer-viz-egraph-graphviz
-nodriverkitlib
GNU::StaticLibTool
-analyzer-tidy-checker
-fp-armv8
-analyzer-tidy-checker=
 [[gnu::sysv_abi
Print internal analyzer statistics.
-fullfp16
-analyzer-stats
__llvm_profile_runtime
Source Code Analysis - Dead Symbol Removal Frequency
-spe
Source Code Analysis - Output Options
-analyzer-purge=
-analyzer-purge
-ffp-model=
-fno-delayed-template-parsing
/c++/v1
-analyzer-output
-sve2-aes
Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
 [[gnu::target
--analyzer-output
-sve2-sha3
-analyzer-output=
-lmingwthrd
Force the static analyzer to analyze functions defined in header files
-sve2p1
-analyzer-opt-analyze-headers
 [[gnu::target_clones
The maximum number of times the analyzer will go through a loop
--analyzer-no-default-checks
-nogpuinc
-lmingw32
-analyzer-max-loop
-ssbs
Display the list of enabled analyzer checkers
 [[clang::test_typestate
-analyzer-list-enabled-checkers
-predres
Specify the function selection heuristic used during inlining
-lmoldname
-analyzer-inlining-mode
-i8mm
-analyzer-inlining-mode=
 [[gnu::thiscall
-analyzer-inline-max-stack-depth
Bound on stack depth while inlining (4 by default)
-fsanitize-address-field-padding=
-lmingwex
-analyzer-inline-max-stack-depth=
-ls64
Dump exploded graph to the specified file
 _thiscall
-analyzer-dump-egraph
-pauth
-analyzer-dump-egraph=
ucrt
Emit verbose output about the analyzer's progress
-sme
-analyzer-display-progress
 __attribute__((transparent_stepping
-analyzer-disable-retry-exhausted
Do not re-analyze paths leading to exhausted nodes with a different strategy (may decrease code coverage)
-nogpulib
--subsystem
Disable all static analyzer checks
-analyzer-disable-checker=
-analyzer-disable-checker
Choose analyzer checkers to disable
-fdebug-compilation-dir
Disable delayed template parsing
Level of field padding for AddressSanitizer
 [[gnu::transparent_union
v5te
Source Code Analysis - Symbolic Constraint Engines
 __attribute__((trivial_abi
-analyzer-constraints
v6sm
-analyzer-constraints=
console
Choose analyzer options to enable
v6zk
-analyzer-config
 __attribute__((try_acquire_capability
Display the list of -analyzer-config options. These are meant for development purposes only!
v7hl
-analyzer-config-help
--dll
true,false
v7-r
Don't emit errors on invalid analyzer-config inputs
 __attribute__((try_acquire_shared_capability
-analyzer-config-compatibility-mode=
-analyzer-config-compatibility-mode
-nohipwrapperinc
--shared
Choose analyzer checkers to enable
aarch64
-analyzer-checker=
try_acquire_capability
Display the list of checker and package options
v8.1-a
-analyzer-checker-option-help
Display the list of checker and package options meant for development purposes only
v8.3-a
-analyzer-checker-option-help-developer
 _Nonnull
-analyzer-checker-option-help-alpha
Display the list of in development checker and package options. These are NOT considered safe, they are unstable and will emit incorrect reports. Enable ONLY FOR DEVELOPMENT purposes
-fsanitize-address-globals-dead-stripping
DllMainCRTStartup
Display the list of analyzer checkers that are available
v8.7-a
-analyzer-checker-help
 _Nullable
Display the list of developer-only checkers such as modeling and debug checkers
v8-r
-analyzer-checker-help-developer
--no-guard-cf
Display the list of in development analyzer checkers. These are NOT considered safe, they are unstable and will emit incorrect reports. Enable ONLY FOR DEVELOPMENT purposes
v9.1a
-analyzer-checker-help-alpha
 __attribute__((type_tag_for_datatype
Run analysis on specific function (for C++ include parameters in name)
/analyze-
-nolibc
--guard-cf
-analyze-function
v8m.main
-analyze-function=
default
Tool used for detecting AMD GPU arch in the system.
-vfp2
--amdgpu-arch-tool=
.exe
-allowable_client
-vfp3d16sp
-all_load
protected
--all-warnings
-fno-delete-null-pointer-checks
dllcrt2.o
<name>
-fp-armv8d16sp
Use the named plugin action in addition to the default action
 [[clang::type_visibility
-add-plugin
crt2u.o
Display available options
 [[clang::typed_memory_operation
-###
Print (but do not run) the commands to run for this compilation
-nomultidefs
crt2.o
<unknown>
vfpv3
<input>
 __attribute__((unavailable
<u group>
vfpv3-d16
<SYCL group>
gcrt2.o
<reserved libs group>
vfpv4-sp-d16
<pedantic group>
 __attribute__((uninitialized
<x86 features group>
<opencl group>
-fsanitize-address-outline-instrumentation
-lssp_nonshared
<wasm features group>
fpv5-d16
<wasm driver features group>
 [[unlikely
<riscv features group>
arm8
<ppc features group>
-lssp
<mips features group>
strongarm1100
<m68k features group>
 __attribute__((unsafe_buffer_usage
<hexagon features group>
<m libc group>
-noprebind
-lomp
<arm features group>
arm920
<amdgpu features group>
 [[maybe_unused
<aarch64 features group>
ep9312
<m group>
-liomp5md
DRIVER OPTIONS
arm946e-s
<clang driver internal options>
 [[gnu::unused
<clang debug/development internal options>
DEBUG/DEVELOPMENT OPTIONS
Do not treat usage of null pointers as undefined behavior
-lgomp
<clang internal options>
arm1136jf-s
<i group>
unused
<ggdbN group>
arm1176jzf-s
<gfortran group>
-lgmon
<g flags group>
cortex-m0plus
<gTune group>
 [[clang::use_handle
<f (clang-only) group>
<gN group>
-noseglinkedit
--require-defined
<f group>
cortex-a15
dxc compatibility options
 [[gnu::used
<clang-dxc options>
cortex-r4f
<d group>
-lgdi32
<clang ignored m group>
cortex-r52
<clang legacy flags>
 __attribute__((using_if_exists
<clang ignored f group>
<clang_ignored_gcc_optimization_f_Group>
-fsanitize-address-poison-custom-array-cookie
-lcomdlg32
<clang i group>
cortex-m55
<clang-cl ignored options>
 __declspec(uuid
<clang-cl compile-only options>
cortex-a53
CL.EXE COMPATIBILITY OPTIONS
-ladvapi32
<clang-cl options>
cortex-a73
--std=
</M group>
</volatile group>
+v5e
-std=
custom_discrimination
c89,c90,iso9899:1990,iso9899:199409,gnu89,gnu90,c99,iso9899:1999,c9x,iso9899:199x,gnu99,gnu9x,c11,iso9899:2011,c1x,iso9899:201x,gnu11,gnu1x,c17,iso9899:2017,c18,iso9899:2018,gnu17,gnu18,c2x,gnu2x,c++98,c++03,gnu++98,gnu++03,c++11,c++0x,gnu++11,gnu++0x,c++14,c++1y,gnu++14,gnu++1y,c++17,c++1z,gnu++17,gnu++1z,c++20,c++2a,gnu++20,gnu++2a,c++2b,gnu++2b,cl1.0,cl,cl1.1,cl1.2,cl2.0,cl3.0,clc++1.0,clc++,clc++2021,CL,CL1.1,CL1.2,CL2.0,CL3.0,CLC++,CLC++1.0,CLC++2021,cuda,hip,hlsl,hlsl2015,hlsl2016,hlsl2017,hlsl2018,hlsl2021,hlsl202x,
-analyzer-checker
mingw/lib
debug.AnalysisOrder,debug.Stats,alpha.security.ArrayBound,alpha.security.ArrayBoundV2,osx.cocoa.AutoreleaseWrite,alpha.unix.BlockInCriticalSection,alpha.core.BoolAssignment,core.builtin.BuiltinFunctions,alpha.core.C11Lock,osx.coreFoundation.CFError,debug.DumpCFG,debug.ViewCFG,osx.coreFoundation.CFNumber,osx.coreFoundation.CFRetainRelease,alpha.unix.cstring.BufferOverlap,unix.cstring.CStringModeling,alpha.unix.cstring.NotNullTerminated,unix.cstring.NullArg,alpha.unix.cstring.OutOfBounds,unix.cstring.BadSizeArg,alpha.unix.cstring.UninitializedRead,cplusplus.SelfAssignment,core.CallAndMessage,core.CallAndMessageModeling,debug.DumpCalls,debug.DumpCallGraph,debug.ViewCallGraph,alpha.core.CastSize,alpha.core.CastToStruct,apiModeling.llvm.CastValue,alpha.unix.Chroot,osx.cocoa.ClassRelease,alpha.clone.CloneChecker,debug.ConfigDumper,alpha.cplusplus.ContainerModeling,debug.DumpControlDependencies,alpha.core.Conversion,valist.CopyToSelf,deadcode.DeadStores,debug.DebugContainerModeling,debug.DebugIteratorModeling,alpha.cplusplus.DeleteWithNonVirtualDtor,security.insecureAPI.DeprecatedOrUnsafeBufferHandling,core.NullDereference,alpha.osx.cocoa.DirectIvarAssignment,core.DivideZero,debug.DumpDominators,unix.DynamicMemoryModeling,alpha.core.DynamicTypeChecker,core.DynamicTypePropagation,optin.osx.cocoa.localizability.EmptyLocalizationContextChecker,alpha.cplusplus.EnumCastOutOfRange,alpha.unix.Errno,apiModeling.Errno,debug.ErrnoTest,debug.ViewExplodedGraph,debug.ExprInspection,alpha.core.FixedAddr,security.FloatLoopCounter,fuchsia.HandleChecker,alpha.fuchsia.Lock,optin.performance.GCDAntipattern,apiModeling.google.GTest,alpha.security.taint.TaintPropagation,alpha.core.IdenticalExpr,cplusplus.InnerPointer,alpha.osx.cocoa.InstanceVariableInvalidation,alpha.security.cert.env.InvalidPtr,alpha.cplusplus.InvalidatedIterator,alpha.cplusplus.IteratorModeling,alpha.cplusplus.IteratorRange,alpha.osx.cocoa.IvarInvalidationModeling,alpha.llvm.Conventions,debug.DumpLiveExprs,debug.DumpLiveVars,osx.MIG,optin.mpi.MPI-Checker,osx.SecKeychainAPI,osx.API,unix.Malloc,alpha.security.MallocOverflow,unix.MallocSizeof,unix.MismatchedDeallocator,alpha.cplusplus.MismatchedIterator,alpha.osx.cocoa.MissingInvalidationMethod,alpha.security.MmapWriteExec,cplusplus.Move,osx.cocoa.NSAutoreleasePool,osx.cocoa.NSError,osx.NSOrCFErrorDerefChecker,cplusplus.NewDelete,cplusplus.NewDeleteLeaks,osx.cocoa.NilArg,core.builtin.NoReturnFunctions,webkit.NoUncountedMemberChecker,optin.osx.cocoa.localizability.NonLocalizedStringChecker,core.NonNullParamChecker,core.NonnilStringConstants,nullability.NullPassedToNonnull,nullability.NullReturnedFromNonnull,nullability.NullabilityBase,nullability.NullableDereferenced,nullability.NullablePassedToNonnull,nullability.NullableReturnedFromNonnull,osx.NumberObjectConversion,optin.osx.OSObjectCStyleCast,osx.OSObjectRetainCount,osx.cocoa.AtSync,osx.coreFoundation.containers.PointerSizedValues,osx.coreFoundation.containers.OutOfBounds,osx.cocoa.Dealloc,osx.cocoa.ObjCGenerics,osx.cocoa.Loops,osx.cocoa.IncompatibleMethodTypes,osx.cocoa.NonNilReturnValue,osx.ObjCProperty,osx.cocoa.SelfInit,osx.cocoa.MissingSuperCall,osx.cocoa.SuperDealloc,osx.cocoa.UnusedIvars,optin.performance.Padding,cplusplus.PlacementNew,alpha.osx.cocoa.localizability.PluralMisuseChecker,alpha.core.PointerArithm,alpha.nondeterminism.PointerIteration,alpha.nondeterminism.PointerSorting,alpha.core.PointerSub,debug.DumpPostDominators,alpha.core.PthreadLockBase,alpha.unix.PthreadLock,cplusplus.PureVirtualCall,alpha.security.cert.pos.34c,webkit.RefCntblBaseVirtualDtor,debug.ReportStmts,osx.cocoa.RetainCountBase,osx.cocoa.RetainCount,alpha.security.ReturnPtrRange,core.uninitialized.UndefReturn,apiModeling.llvm.ReturnValue,osx.cocoa.RunLoopAutoreleaseLeak,alpha.cplusplus.STLAlgorithmModeling,security.insecureAPI.SecuritySyntaxChecker,alpha.unix.SimpleStream,alpha.core.SizeofPtr,alpha.cplusplus.SmartPtr,cplusplus.SmartPtrModeling,alpha.core.StackAddressAsyncEscape,core.StackAddrEscapeBase,core.StackAddressEscape,alpha.unix.StdCLibraryFunctionArgs,apiModeling.StdCLibraryFunctions,debug.StdCLibraryFunctionsTester,alpha.unix.Stream,debug.StreamTester,cplusplus.StringChecker,debug.TaintTest,alpha.core.TestAfterDivZero,debug.DumpTraversal,apiModeling.TrustNonnull,apiModeling.TrustReturnsNonnull,security.insecureAPI.UncheckedReturn,alpha.webkit.UncountedCallArgsChecker,webkit.UncountedLambdaCapturesChecker,alpha.webkit.UncountedLocalVarsChecker,core.uninitialized.Branch,core.uninitialized.CapturedBlockVariable,core.UndefinedBinaryOperatorResult,core.uninitialized.ArraySubscript,core.uninitialized.Assign,core.uninitialized.NewArraySize,valist.Uninitialized,optin.cplusplus.UninitializedObject,unix.API,optin.portability.UnixAPI,alpha.deadcode.UnreachableCode,valist.Unterminated,core.VLASize,valist.ValistBase,osx.cocoa.VariadicMethodTypes,unix.Vfork,optin.cplusplus.VirtualCall,cplusplus.VirtualCallModeling,security.insecureAPI.bcmp,security.insecureAPI.bcopy,security.insecureAPI.bzero,security.insecureAPI.decodeValueOfObjCType,security.insecureAPI.getpw,security.insecureAPI.gets,security.insecureAPI.mkstemp,security.insecureAPI.mktemp,security.insecureAPI.rand,security.insecureAPI.strcpy,security.insecureAPI.vfork,alpha.unix.cstring,alpha.clone,alpha,debug,nullability,optin.portability,unix.cstring,core.uninitialized,apiModeling.llvm,apiModeling.google,webkit,alpha.security.taint,alpha.cplusplus,alpha.osx.cocoa,alpha.security.cert,cplusplus,osx.coreFoundation.containers,osx.cocoa,optin.osx.cocoa.localizability,optin.osx,alpha.security,security,alpha.unix,alpha.core,optin.mpi,security.insecureAPI,alpha.apiModeling,unix,osx.coreFoundation,apiModeling,core,optin,alpha.security.cert.pos,alpha.fuchsia,alpha.deadcode,alpha.security.cert.env,alpha.nondeterminism,optin.cplusplus,fuchsia,optin.osx.cocoa,deadcode,optin.performance,alpha.osx.cocoa.localizability,core.builtin,alpha.llvm,alpha.osx,valist,osx,llvm,alpha.webkit,
-code-completion-with-fixits
disable the default synthesis of Objective-C properties
Do not emit code that uses the red zone.
-extract-api
-faligned-alloc-unavailable
-falternative-parameter-statement
Enable Apple gcc-compatible #pragma pack handling
-fapplication-extension
-fblocks
Make the x11 register call-saved (AArch64 only)
Make the x15 register call-saved (AArch64 only)
Working directory for -fcas-fs (if not the root).
-fcas-include-tree
<name>=<value>
-fcf-protection=
-fcf-protection
-fcheck-array-temporaries
Attempt to match the ABI of Clang <version>
Enable colors in diagnostics
Place uninitialized global variables in a common block
Specify the socket path for connecting to a remote caching service
-fconstant-array-class=
-fconstant-float-number-class=
Specify the class to use for constant Objective-C string objects.
-fconstexpr-backtrace-limit=
Set the maximum number of entries to print in a constexpr evaluation backtrace (0 = no limit).
-fconstexpr-depth
-fconstexpr-steps=
Maximum number of steps in constexpr function evaluation
-fconvergent-functions
-fcoroutines-ts
-fcrash-diagnostics-dir=
Use approximate transcendental functions
-fdebug-dump-pft
With -fdepscan, auto-detect the SDK path on-disk and remap it to the given path (see -fdepscan-prefix-map=).
With -fdepscan, auto-detect the toolchain path on-disk and remap it to the given path (see -fdepscan-prefix-map=).
+v6k
 [[clang::ptrauth_vtable_pointer
ERROR: Cannot lock file 
-fsanitize-address-use-after-return=
/sys-root/mingw/lib
, mem=
, user=
 [[clang::vecreturn
%.3f
/sys-root/mingw/include
, total=
armv7-r
output=
 __attribute__((vectorcall
random
-nostdlibinc
.lib
g++-v
+v7em
(nothing)
 __vectorcall
(input arg)
armv8.1-a
-w64-mingw32-gcc
8.2-A
 __attribute__((visibility
Undefines the __DEPRECATED macro
mingw32-gcc
armv8.5-a
 __attribute__((warn_unused
8.6-A
MinGW::Assemble
+v8.7a
-Wno-
 [[nodiscard
-Wno-error=bitwise-instead-of-logical
-nostdsysteminc
-Wno-error=unqualified-std-cast-call
MinGW::Linker
-Wno-error=return-type
9.1-A
-Wno-error=unused-but-set-parameter
 __attribute__((warn_unused_result
-Wno-error=shadow
+v9.2a
-Wno-error=unused-but-set-variable
i386
-Wno-error=tautological-constant-compare
armv8-r
-Wno-error=objc-signed-char-bool-implicit-int-conversion
nodiscard
-Wno-error=incompatible-pointer-types
<mode>
-Wno-error=implicit-function-declaration
i586
-Wno-error=typeof-bitfield
+v8m.main
-Wno-error=array-parameter
 __attribute__((weak
-Wno-error=unsafe-buffer-usage
iwmmxt2
-Wno-error=incompatible-function-pointer-types
i686
-Wno-error=deprecated
armv7k
-Wno-error=int-conversion
 __attribute__((weak_import
-Wno-error=unreachable-code
-Wno-error=deprecated-non-prototype
armv7
-Wno-error=strict-prototypes
vfpv3xd-fp16
-Wno-gnu-folding-constant
 __attribute__((weakref
-Wno-reserved-identifier
neon-fp16
-Wno-elaborated-enum-base
-lCompilerRT-Generic
-Wno-enum-float-conversion
softvfp
-Wno-enum-enum-conversion
-ffree-form
-Wno-implicit-fallthrough
-fno-depscan-share
-Wno-quoted-include-in-framework-header
-L/usr/pkg/compiler-rt/lib
-Wno-final-dtor-non-final-class
-Wno-misleading-indentation
minix::Assembler
 __attribute__((work_group_size_hint
i586
-cdecp4
-miamcu
-hwmult16
OBJECT_MODE
Use DWARF style exceptions
-felide-constructors
-feliminate-unused-debug-types
-fexperimental-sanitize-metadata=atomics
hurd
Process source files in free form
-ffunction-sections
-finit-logical=
-finit-real=
-finline-functions-called-once
-finline-functions
Inline suitable functions
Inline functions which are (explicitly or implicitly) marked inline
-finline-limit=
-finline-limit
Suppress inlining of functions whose stack size exceeds the given value
-finline-small-functions
-finline
-pc-gnu
Turn off -fdepscan-share and -fdepscan-share-parent.
-unknown-gnu
-hwmult32
amdgcn-amd-amdhsa
String contains multiple dots
nvptx-nvidia-cuda
 [[clang::xray_always_instrument
nvptx64-nvidia-cuda
+Inf
clang-dxc
-hwmultf5
clang-cl
Invalid string
clang-cpp
 [[clang::xray_never_instrument
clang++
-fsanitize-address-use-after-scope
xray_always_instrument
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
Number of memory regions: 
.out
Computing output path
+hwmult16
Could not convert UTF16 to UTF8
CLANG_CRASH_DIAGNOSTICS_DIR
 option: 
a.out
 [[clang::xray_log_args
a.exe
32bit
], outputs: [
' is invalid value for boolean argument! Try 0 or 1
], output: 
 [[clang::xnu_usage_semantics
", inputs: [
 - "
+hwmult32
= *cannot print option value*
thinLTO on AIX
used-gpr-arg
Building compilation jobs
Optimize for speed (like /Og /Oi /Ot /Oy /Ob2 /GF /Gy)
Constructing phase actions
+hwmultf5
--no-offload-arch
-fno-depscan
--offload-arch
used-arg
LLVM was not built with LLVM_ENABLE_ZSTD or did not find zstd at build time
Allocation failed
Building compilation actions
all-gpr-arg
-D__
+fpuv2_sf
+fpuv2_df
Building universal build actions
+fpuv3_hf
libgcc.a
all-arg
builtins
ck801
libraries: =
programs: =
ck802t
User configuration file directory: 
crtbegin_no_eh.o
System configuration file directory: 
s802
Configuration file: 
 [[gnu::zero_call_used_regs
InstalledDir: 
/Ob0
Thread model: 
-lcrt
Target: 
ck803e
flang-new
target,targetsync
{0} [options] file...
ck803ef
system
-lsim
user
ck803efht
c++latest
BlockCommandComment
c++2a
-fsanitize-address-use-odr-indicator
c++2b
--undefined=__crt0_call_exit
c++20
ck803tr2
-clang-vendor-feature=+thisNoNullAttr
TParamCommandComment
-clang-vendor-feature=+thisNoAlignAttr
ck803htr3
-clang-vendor-feature=+revert09abecef7bbf
crtend_no_eh.o
-clang-vendor-feature=+enableAggressiveVLAFolding
ck803fhr1
-disable-aligned-alloc-awareness=1
VerbatimLineComment
-Xlinker
/Ob1
-clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation
--relax
-clang-vendor-feature=+disableNeonImmediateRangeCheck
ck803ehr3
-clang-vendor-feature=+messageToSelfInClassMethodIdReturnType
FullComment
COMPILER_PATH
ck803ehtr1
Compilation construction
MSP430::Linker
.cfg
ck803efr2
/invalid/
HTMLStartTagComment
CLANG_NO_DEFAULT_CONFIG
Enable ODR indicator globals to avoid false ODR violation reports in partially sanitized programs at the cost of an increase in binary size
-fopenmp
msp430-elf-ld
1021
ck803eftr1
-MMD
TextComment
ck803efhtr2
--no-demangle
-lmul_16
-Xclang 
e803
Command line argument parsing
[in]
flang
/Ob2
-lmul_32
ck804
[in,out]
raring
ck804f
precise
-lmul_f5
/etc/lsb-release
ck804et
/usr/lib/os-release
/etc/os-release
-fno-devirtualize-speculatively
/etc/gentoo-release
-lmul_none
/etc/SuSE-release
e804dt
/etc/debian_version
release 5
e804dft
release 6
-Tmsp430-sim.ld
release 7
ck805t
/etc/redhat-release
-ObjC++
openmp
cuda
ck807e
link
-openmp
c807f
-hip
-cuda
ck810et
host
-out:
nvic
<XX>
-dll
<U+>
+doloop
     
cite
  ...
-fno-diagnostics-color
Do not discard value names in LLVM IR
-fno-dollars-in-identifiers
Disallow '$' in identifiers
-fno-double-square-bracket-attributes
-fno-objc-avoid-heapify-local-blocks
-fno-objc-exceptions
-fno-objc-infer-related-result-type
do not infer Objective-C related result type based on method family
-fno-objc-legacy-dispatch
-fno-objc-msgsend-selector-stubs
-fno-objc-nonfragile-abi
-fno-objc-relative-method-lists
-fno-objc-weak
-fno-odr-hash-categories
Disable ODR hash checking for categories
-fno-odr-hash-interfaces
-fno-odr-hash-ivars
Disable ODR hash checking for ivars
-fno-odr-hash-methods
Disable ODR hash checking for methods
-fno-odr-hash-properties
Disable ODR hash checking for properties
-fno-odr-hash-records
Disable ODR hash checking for records
-fno-offload-lto
Disable LTO mode (default) for offload compilation
-fno-omit-frame-pointer
-fno-openmp-assume-teams-oversubscription
-fno-openmp-assume-threads-oversubscription
-fsanitize-coverage-indirect-calls
Enable inline 8-bit counters in sanitizer coverage
-fsanitize-coverage-stack-depth
Enable tracing of loads
-fsanitize-coverage-type=
-fwarn-stack-size=
-fwasm-exceptions
-fwhole-program-vtables
Enables whole-program vtable optimization. Requires -flto
-fwhole-program
-fwrapv
Treat signed integer overflow as two's complement
-fwritable-strings
Store string literals as writable data
-fxl-pragma-pack
Enable IBM XL #pragma pack handling
-fxor-operator
Enable .XOR. as a synonym of .NEQV.
-fxray-always-emit-customevents
Always emit __xray_customevent(...) calls even if the containing function is not always instrumented
-fxray-always-emit-typedevents
Always emit __xray_typedevent(...) calls even if the containing function is not always instrumented
-fxray-always-instrument=
DEPRECATED: Filename defining the whitelist for imbuing the 'always instrument' XRay attribute.
-fxray-attr-list=
Filename defining the list of functions/types for imbuing XRay attributes.
-fxray-function-groups=
Only instrument 1 of N groups
-fxray-function-index
-fxray-ignore-loops
-fxray-instruction-threshold=
Sets the minimum function size to instrument with XRay
-fxray-instrumentation-bundle=
Select which XRay instrumentation points to emit. Options: all, none, function-entry, function-exit, function, custom. Default is 'all'.  'function' includes both 'function-entry' and 'function-exit'.
-fxray-instrument
Generate XRay instrumentation sleds on function entry and exit
-fxray-link-deps
Tells clang to add the link dependencies for XRay.
-fxray-modes=
List of modes to link in by default into XRay instrumented binaries.
-fxray-never-instrument=
DEPRECATED: Filename defining the whitelist for imbuing the 'never instrument' XRay attribute.
Clear call-used registers upon function return (AArch64/x86 only)
skip,used-gpr-arg,used-gpr,used-arg,used,all-gpr-arg,all-gpr,all-arg,all
-fzero-initialized-in-bss
-fzvector
Enable System z vector language extension
Add directory to framework include search path
CUDA offloading device architecture (e.g. sm_35), or HIP offloading target ID in the form of a device architecture followed by target ID features delimited by a colon. Each target ID feature is a pre-defined string followed by a plus or minus sign (e.g. gfx908:xnack+:sramecc-).  May be specified more than once.
/openmp-
--optimize=
Optimize for size
-implib:
vdsp2e3
fix-it:"
classdesign
While building module '
q4Uiq8h
__builtin_sve_reinterpret_u32_bf16
q4Uiq8y
__builtin_sve_reinterpret_u32_f32
q4Uiq4f
__builtin_sve_reinterpret_u32_f64
q4Uiq2d
__builtin_sve_reinterpret_u64_s8
q2UWiq16Sc
__builtin_sve_reinterpret_u64_s16
q2UWiq8Ss
__builtin_sve_reinterpret_u64_s32
q2UWiq4Si
__builtin_sve_reinterpret_u64_s64
q2UWiq2SWi
__builtin_sve_reinterpret_u64_u8
q2UWiq16Uc
__builtin_sve_reinterpret_u64_u16
q2UWiq8Us
__builtin_sve_reinterpret_u64_u32
__builtin_sve_reinterpret_u64_u64
__builtin_sve_reinterpret_u64_f16
q2UWiq8h
__builtin_sve_reinterpret_u64_bf16
q2UWiq8y
__builtin_sve_reinterpret_u64_f32
q2UWiq4f
__builtin_sve_reinterpret_u64_f64
q2UWiq2d
__builtin_sve_reinterpret_f16_s8
q8hq16Sc
__builtin_sve_reinterpret_f16_s16
q8hq8Ss
__builtin_sve_reinterpret_f16_s32
q8hq4Si
__builtin_sve_reinterpret_f16_s64
q8hq2SWi
__builtin_sve_reinterpret_f16_u8
q8hq16Uc
__builtin_sve_reinterpret_f16_u16
__builtin_sve_reinterpret_f16_u32
q8hq4Ui
__builtin_sve_reinterpret_f16_u64
q8hq2UWi
__builtin_sve_reinterpret_f16_f16
__builtin_sve_reinterpret_f16_bf16
q8hq8y
__builtin_sve_reinterpret_f16_f32
q8hq4f
__builtin_sve_reinterpret_f16_f64
q8hq2d
__builtin_sve_reinterpret_bf16_s8
q8yq16Sc
__builtin_sve_reinterpret_bf16_s16
q8yq8Ss
__builtin_sve_reinterpret_bf16_s32
q8yq4Si
__builtin_sve_reinterpret_bf16_s64
q8yq2SWi
__builtin_sve_reinterpret_bf16_u8
q8yq16Uc
__builtin_sve_reinterpret_bf16_u16
q8yq8Us
__builtin_sve_reinterpret_bf16_u32
q8yq4Ui
__builtin_sve_reinterpret_bf16_u64
q8yq2UWi
__builtin_sve_reinterpret_bf16_f16
q8yq8h
__builtin_sve_reinterpret_bf16_bf16
__builtin_sve_reinterpret_bf16_f32
q8yq4f
__builtin_sve_reinterpret_bf16_f64
q8yq2d
__builtin_sve_reinterpret_f32_s8
q4fq16Sc
__builtin_sve_reinterpret_f32_s16
q4fq8Ss
__builtin_sve_reinterpret_f32_s32
q4fq4Si
__builtin_sve_reinterpret_f32_s64
q4fq2SWi
__builtin_sve_reinterpret_f32_u8
q4fq16Uc
__builtin_sve_reinterpret_f32_u16
q4fq8Us
__builtin_sve_reinterpret_f32_u32
__builtin_sve_reinterpret_f32_u64
q4fq2UWi
__builtin_sve_reinterpret_f32_f16
q4fq8h
__builtin_sve_reinterpret_f32_bf16
q4fq8y
__builtin_sve_reinterpret_f32_f32
__builtin_sve_reinterpret_f32_f64
q4fq2d
__builtin_sve_reinterpret_f64_s8
q2dq16Sc
__builtin_sve_reinterpret_f64_s16
q2dq8Ss
__builtin_sve_reinterpret_f64_s32
q2dq4Si
__builtin_sve_reinterpret_f64_s64
q2dq2SWi
__builtin_sve_reinterpret_f64_u8
q2dq16Uc
__builtin_sve_reinterpret_f64_u16
q2dq8Us
__builtin_sve_reinterpret_f64_u32
q2dq4Ui
__builtin_sve_reinterpret_f64_u64
__builtin_sve_reinterpret_f64_f16
q2dq8h
__builtin_sve_reinterpret_f64_bf16
q2dq8y
__builtin_sve_reinterpret_f64_f32
q2dq4f
__builtin_sve_reinterpret_f64_f64
__builtin_sve_svget_neonq_s8
V16Scq16Sc
__builtin_sve_svget_neonq_s16
V8sq8s
__builtin_sve_svget_neonq_s32
V4iq4i
__builtin_sve_svget_neonq_s64
V2Wiq2Wi
__builtin_sve_svget_neonq_u8
V16Ucq16Uc
__builtin_sve_svget_neonq_u16
V16Usq16Us
__builtin_sve_svget_neonq_u32
V4Uiq4Ui
__builtin_sve_svget_neonq_u64
V2UWiq2UWi
__builtin_sve_svget_neonq_f16
V8hq8h
__builtin_sve_svget_neonq_f32
V4fq4f
__builtin_sve_svget_neonq_f64
V2dq2d
__builtin_sve_svget_neonq_bf16
V8yq8y
__builtin_sve_svset_neonq_s8
q16Scq16ScV16Sc
__builtin_sve_svset_neonq_s16
q8sq8sV8s
__builtin_sve_svset_neonq_s32
q4iq4iV4i
__builtin_sve_svset_neonq_s64
q2Wiq2WiV2Wi
__builtin_sve_svset_neonq_u8
q16Ucq16UcV16Uc
__builtin_sve_svset_neonq_u16
q8Usq8UsV8s
__builtin_sve_svset_neonq_u32
q4Uiq4UiV4Ui
__builtin_sve_svset_neonq_u64
q2UWiq2UWiV2UWi
__builtin_sve_svset_neonq_f16
q8hq8hV8h
__builtin_sve_svset_neonq_f32
q4fq4fV4f
__builtin_sve_svset_neonq_f64
q2dq2dV2d
__builtin_sve_svset_neonq_bf16
q8yq8yV8y
__builtin_sve_svdup_neonq_s8
q16ScV16Sc
__builtin_sve_svdup_neonq_s16
q8sV8s
__builtin_sve_svdup_neonq_s32
q4iV4i
__builtin_sve_svdup_neonq_s64
__builtin_sve_svdup_neonq_u8
q16UcV16Uc
__builtin_sve_svdup_neonq_u16
q8UsV8Us
__builtin_sve_svdup_neonq_u32
q4UiV4Ui
__builtin_sve_svdup_neonq_u64
q2UWiV2UWi
__builtin_sve_svdup_neonq_f16
q8hV8h
__builtin_sve_svdup_neonq_f32
q4fV4f
__builtin_sve_svdup_neonq_f64
q2dV2d
__builtin_sve_svdup_neonq_bf16
q8yV8y
__builtin_sme___arm_in_streaming_mode
__builtin_sme_svaddha_za32_s32
vIUWiq16bq16bq4i
__builtin_sme_svaddha_za32_u32
vIUWiq16bq16bq4Ui
__builtin_sme_svaddha_za64_s64
vIUWiq16bq16bq2Wi
__builtin_sme_svaddha_za64_u64
vIUWiq16bq16bq2UWi
__builtin_sme_svaddva_za32_s32
__builtin_sme_svaddva_za32_u32
__builtin_sme_svaddva_za64_s64
__builtin_sme_svaddva_za64_u64
__builtin_sme_svcntsb
__builtin_sme_svcntsd
__builtin_sme_svcntsh
__builtin_sme_svcntsw
__builtin_sme_svld1_hor_vnum_za128
vIUWiUiIUWiq16bvC*Wi
__builtin_sme_svld1_hor_vnum_za16
__builtin_sme_svld1_hor_vnum_za32
__builtin_sme_svld1_hor_vnum_za64
__builtin_sme_svld1_hor_vnum_za8
__builtin_sme_svld1_hor_za128
vIUWiUiIUWiq16bvC*
__builtin_sme_svld1_hor_za16
__builtin_sme_svld1_hor_za32
__builtin_sme_svld1_hor_za64
__builtin_sme_svld1_hor_za8
__builtin_sme_svld1_ver_vnum_za128
__builtin_sme_svld1_ver_vnum_za16
__builtin_sme_svld1_ver_vnum_za32
__builtin_sme_svld1_ver_vnum_za64
__builtin_sme_svld1_ver_vnum_za8
__builtin_sme_svld1_ver_za128
__builtin_sme_svld1_ver_za16
__builtin_sme_svld1_ver_za32
__builtin_sme_svld1_ver_za64
__builtin_sme_svld1_ver_za8
__builtin_sme_svldr_vnum_za
vUiIUWiq16bvC*
__builtin_sme_svmla_lane_za32_f32_vg1x2
vUiIUWiq8fq4fIUWi
__builtin_sme_svmla_lane_za32_f32_vg1x4
vUiIUWiq16fq4fIUWi
__builtin_sme_svmla_lane_za64_f64_vg1x2
vUiIUWiq4dq2dIUWi
__builtin_sme_svmla_lane_za64_f64_vg1x4
vUiIUWiq8dq2dIUWi
__builtin_sme_svmla_single_za32_f32_vg1x2
vUiIUWiq8fq4f
__builtin_sme_svmla_single_za32_f32_vg1x4
vUiIUWiq16fq4f
__builtin_sme_svmla_single_za64_f64_vg1x2
vUiIUWiq4dq2d
__builtin_sme_svmla_single_za64_f64_vg1x4
vUiIUWiq8dq2d
__builtin_sme_svmla_za32_f32_vg1x2
vUiIUWiq8fq8f
__builtin_sme_svmla_za32_f32_vg1x4
vUiIUWiq16fq16f
__builtin_sme_svmla_za64_f64_vg1x2
vUiIUWiq4dq4d
__builtin_sme_svmla_za64_f64_vg1x4
vUiIUWiq8dq8d
__builtin_sme_svmlal_lane_za32_bf16_vg2x1
vUiIUWiq8yq8yIUWi
__builtin_sme_svmlal_lane_za32_bf16_vg2x2
vUiIUWiq16yq8yIUWi
__builtin_sme_svmlal_lane_za32_bf16_vg2x4
vUiIUWiq32yq8yIUWi
__builtin_sme_svmlal_lane_za32_f16_vg2x1
vUiIUWiq8hq8hIUWi
__builtin_sme_svmlal_lane_za32_f16_vg2x2
vUiIUWiq16hq8hIUWi
__builtin_sme_svmlal_lane_za32_f16_vg2x4
vUiIUWiq32hq8hIUWi
__builtin_sme_svmlal_lane_za32_s16_vg2x1
vUiIUWiq8sq8sIUWi
__builtin_sme_svmlal_lane_za32_s16_vg2x2
vUiIUWiq16sq8sIUWi
__builtin_sme_svmlal_lane_za32_s16_vg2x4
vUiIUWiq32sq8sIUWi
__builtin_sme_svmlal_lane_za32_u16_vg2x1
vUiIUWiq8Usq8UsIUWi
__builtin_sme_svmlal_lane_za32_u16_vg2x2
vUiIUWiq16Usq8UsIUWi
__builtin_sme_svmlal_lane_za32_u16_vg2x4
vUiIUWiq32Usq8UsIUWi
__builtin_sme_svmlal_single_za32_bf16_vg2x1
vUiIUWiq8yq8y
__builtin_sme_svmlal_single_za32_bf16_vg2x2
vUiIUWiq16yq8y
__builtin_sme_svmlal_single_za32_bf16_vg2x4
vUiIUWiq32yq8y
__builtin_sme_svmlal_single_za32_f16_vg2x1
vUiIUWiq8hq8h
__builtin_sme_svmlal_single_za32_f16_vg2x2
vUiIUWiq16hq8h
__builtin_sme_svmlal_single_za32_f16_vg2x4
vUiIUWiq32hq8h
__builtin_sme_svmlal_single_za32_s16_vg2x1
vUiIUWiq8sq8s
__builtin_sme_svmlal_single_za32_s16_vg2x2
vUiIUWiq16sq8s
__builtin_sme_svmlal_single_za32_s16_vg2x4
vUiIUWiq32sq8s
__builtin_sme_svmlal_single_za32_u16_vg2x1
vUiIUWiq8Usq8Us
__builtin_sme_svmlal_single_za32_u16_vg2x2
vUiIUWiq16Usq8Us
__builtin_sme_svmlal_single_za32_u16_vg2x4
vUiIUWiq32Usq8Us
__builtin_sme_svmlal_za32_bf16_vg2x2
vUiIUWiq16yq16y
__builtin_sme_svmlal_za32_bf16_vg2x4
vUiIUWiq32yq32y
__builtin_sme_svmlal_za32_f16_vg2x2
vUiIUWiq16hq16h
__builtin_sme_svmlal_za32_f16_vg2x4
vUiIUWiq32hq32h
__builtin_sme_svmlal_za32_s16_vg2x2
vUiIUWiq16sq16s
__builtin_sme_svmlal_za32_s16_vg2x4
vUiIUWiq32sq32s
__builtin_sme_svmlal_za32_u16_vg2x2
vUiIUWiq16Usq16Us
__builtin_sme_svmlal_za32_u16_vg2x4
vUiIUWiq32Usq32Us
__builtin_sme_svmls_lane_za32_f32_vg1x2
__builtin_sme_svmls_lane_za32_f32_vg1x4
__builtin_sme_svmls_lane_za64_f64_vg1x2
__builtin_sme_svmls_lane_za64_f64_vg1x4
__builtin_sme_svmls_single_za32_f32_vg1x2
__builtin_sme_svmls_single_za32_f32_vg1x4
__builtin_sme_svmls_single_za64_f64_vg1x2
__builtin_sme_svmls_single_za64_f64_vg1x4
__builtin_sme_svmls_za32_f32_vg1x2
__builtin_sme_svmls_za32_f32_vg1x4
__builtin_sme_svmls_za64_f64_vg1x2
__builtin_sme_svmls_za64_f64_vg1x4
__builtin_sme_svmlsl_lane_za32_bf16_vg2x1
__builtin_sme_svmlsl_lane_za32_bf16_vg2x2
__builtin_sme_svmlsl_lane_za32_bf16_vg2x4
__builtin_sme_svmlsl_lane_za32_f16_vg2x1
__builtin_sme_svmlsl_lane_za32_f16_vg2x2
__builtin_sme_svmlsl_lane_za32_f16_vg2x4
__builtin_sme_svmlsl_lane_za32_s16_vg2x1
__builtin_sme_svmlsl_lane_za32_s16_vg2x2
__builtin_sme_svmlsl_lane_za32_s16_vg2x4
__builtin_sme_svmlsl_lane_za32_u16_vg2x1
__builtin_sme_svmlsl_lane_za32_u16_vg2x2
__builtin_sme_svmlsl_lane_za32_u16_vg2x4
__builtin_sme_svmlsl_single_za32_bf16_vg2x1
__builtin_sme_svmlsl_single_za32_bf16_vg2x2
__builtin_sme_svmlsl_single_za32_bf16_vg2x4
__builtin_sme_svmlsl_single_za32_f16_vg2x1
__builtin_sme_svmlsl_single_za32_f16_vg2x2
__builtin_sme_svmlsl_single_za32_f16_vg2x4
__builtin_sme_svmlsl_single_za32_s16_vg2x1
__builtin_sme_svmlsl_single_za32_s16_vg2x2
__builtin_sme_svmlsl_single_za32_s16_vg2x4
__builtin_sme_svmlsl_single_za32_u16_vg2x1
__builtin_sme_svmlsl_single_za32_u16_vg2x2
__builtin_sme_svmlsl_single_za32_u16_vg2x4
__builtin_sme_svmlsl_za32_bf16_vg2x2
__builtin_sme_svmlsl_za32_bf16_vg2x4
__builtin_sme_svmlsl_za32_f16_vg2x2
__builtin_sme_svmlsl_za32_f16_vg2x4
__builtin_sme_svmlsl_za32_s16_vg2x2
__builtin_sme_svmlsl_za32_s16_vg2x4
__builtin_sme_svmlsl_za32_u16_vg2x2
__builtin_sme_svmlsl_za32_u16_vg2x4
__builtin_sme_svmopa_za32_bf16
vIUWiq16bq16bq8yq8y
__builtin_sme_svmopa_za32_f16
vIUWiq16bq16bq8hq8h
__builtin_sme_svmopa_za32_f32
vIUWiq16bq16bq4fq4f
__builtin_sme_svmopa_za32_s8
vIUWiq16bq16bq16Scq16Sc
__builtin_sme_svmopa_za32_u8
vIUWiq16bq16bq16Ucq16Uc
__builtin_sme_svmopa_za64_f64
vIUWiq16bq16bq2dq2d
__builtin_sme_svmopa_za64_s16
vIUWiq16bq16bq8sq8s
__builtin_sme_svmopa_za64_u16
vIUWiq16bq16bq8Usq8Us
__builtin_sme_svmops_za32_bf16
__builtin_sme_svmops_za32_f16
__builtin_sme_svmops_za32_f32
__builtin_sme_svmops_za32_s8
__builtin_sme_svmops_za32_u8
__builtin_sme_svmops_za64_f64
__builtin_sme_svmops_za64_s16
__builtin_sme_svmops_za64_u16
__builtin_sme_svread_hor_za128_bf16_m
q8yq8yq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_f16_m
q8hq8hq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_f32_m
q4fq4fq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_f64_m
q2dq2dq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_s16_m
q8sq8sq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_s32_m
q4iq4iq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_s64_m
q2Wiq2Wiq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_s8_m
q16Scq16Scq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_u16_m
q8Usq8Usq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_u32_m
q4Uiq4Uiq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_u64_m
q2UWiq2UWiq16bIUWiUiIUWi
__builtin_sme_svread_hor_za128_u8_m
q16Ucq16Ucq16bIUWiUiIUWi
__builtin_sme_svread_hor_za16_bf16_m
__builtin_sme_svread_hor_za16_bf16_vg2
q16yUiIUWi
__builtin_sme_svread_hor_za16_bf16_vg4
q32yUiIUWi
__builtin_sme_svread_hor_za16_f16_m
__builtin_sme_svread_hor_za16_f16_vg2
q16hUiIUWi
__builtin_sme_svread_hor_za16_f16_vg4
q32hUiIUWi
__builtin_sme_svread_hor_za16_s16_m
__builtin_sme_svread_hor_za16_s16_vg2
q16sUiIUWi
__builtin_sme_svread_hor_za16_s16_vg4
q32sUiIUWi
__builtin_sme_svread_hor_za16_u16_m
__builtin_sme_svread_hor_za16_u16_vg2
q16UsUiIUWi
__builtin_sme_svread_hor_za16_u16_vg4
q32UsUiIUWi
__builtin_sme_svread_hor_za32_f32_m
__builtin_sme_svread_hor_za32_f32_vg2
q8fUiIUWi
__builtin_sme_svread_hor_za32_f32_vg4
q16fUiIUWi
__builtin_sme_svread_hor_za32_s32_m
__builtin_sme_svread_hor_za32_s32_vg2
q8iUiIUWi
__builtin_sme_svread_hor_za32_s32_vg4
q16iUiIUWi
__builtin_sme_svread_hor_za32_u32_m
__builtin_sme_svread_hor_za32_u32_vg2
q8UiUiIUWi
__builtin_sme_svread_hor_za32_u32_vg4
q16UiUiIUWi
__builtin_sme_svread_hor_za64_f64_m
__builtin_sme_svread_hor_za64_f64_vg2
q4dUiIUWi
__builtin_sme_svread_hor_za64_f64_vg4
q8dUiIUWi
__builtin_sme_svread_hor_za64_s64_m
__builtin_sme_svread_hor_za64_s64_vg2
q4WiUiIUWi
__builtin_sme_svread_hor_za64_s64_vg4
q8WiUiIUWi
__builtin_sme_svread_hor_za64_u64_m
__builtin_sme_svread_hor_za64_u64_vg2
q4UWiUiIUWi
__builtin_sme_svread_hor_za64_u64_vg4
q8UWiUiIUWi
__builtin_sme_svread_hor_za8_s8_m
__builtin_sme_svread_hor_za8_s8_vg2
q32ScUiIUWi
__builtin_sme_svread_hor_za8_s8_vg4
q64ScUiIUWi
__builtin_sme_svread_hor_za8_u8_m
__builtin_sme_svread_hor_za8_u8_vg2
q32UcUiIUWi
__builtin_sme_svread_hor_za8_u8_vg4
q64UcUiIUWi
__builtin_sme_svread_ver_za128_bf16_m
__builtin_sme_svread_ver_za128_f16_m
__builtin_sme_svread_ver_za128_f32_m
__builtin_sme_svread_ver_za128_f64_m
__builtin_sme_svread_ver_za128_s16_m
__builtin_sme_svread_ver_za128_s32_m
__builtin_sme_svread_ver_za128_s64_m
__builtin_sme_svread_ver_za128_s8_m
__builtin_sme_svread_ver_za128_u16_m
__builtin_sme_svread_ver_za128_u32_m
__builtin_sme_svread_ver_za128_u64_m
__builtin_sme_svread_ver_za128_u8_m
__builtin_sme_svread_ver_za16_bf16_m
__builtin_sme_svread_ver_za16_bf16_vg2
__builtin_sme_svread_ver_za16_bf16_vg4
__builtin_sme_svread_ver_za16_f16_m
__builtin_sme_svread_ver_za16_f16_vg2
__builtin_sme_svread_ver_za16_f16_vg4
__builtin_sme_svread_ver_za16_s16_m
__builtin_sme_svread_ver_za16_s16_vg2
__builtin_sme_svread_ver_za16_s16_vg4
__builtin_sme_svread_ver_za16_u16_m
__builtin_sme_svread_ver_za16_u16_vg2
__builtin_sme_svread_ver_za16_u16_vg4
__builtin_sme_svread_ver_za32_f32_m
__builtin_sme_svread_ver_za32_f32_vg2
__builtin_sme_svread_ver_za32_f32_vg4
__builtin_sme_svread_ver_za32_s32_m
__builtin_sme_svread_ver_za32_s32_vg2
__builtin_sme_svread_ver_za32_s32_vg4
__builtin_sme_svread_ver_za32_u32_m
__builtin_sme_svread_ver_za32_u32_vg2
__builtin_sme_svread_ver_za32_u32_vg4
__builtin_sme_svread_ver_za64_f64_m
__builtin_sme_svread_ver_za64_f64_vg2
__builtin_sme_svread_ver_za64_f64_vg4
__builtin_sme_svread_ver_za64_s64_m
__builtin_sme_svread_ver_za64_s64_vg2
__builtin_sme_svread_ver_za64_s64_vg4
__builtin_sme_svread_ver_za64_u64_m
__builtin_sme_svread_ver_za64_u64_vg2
__builtin_sme_svread_ver_za64_u64_vg4
__builtin_sme_svread_ver_za8_s8_m
__builtin_sme_svread_ver_za8_s8_vg2
__builtin_sme_svread_ver_za8_s8_vg4
__builtin_sme_svread_ver_za8_u8_m
__builtin_sme_svread_ver_za8_u8_vg2
__builtin_sme_svread_ver_za8_u8_vg4
__builtin_sme_svread_za64_f64_vg1x2
__builtin_sme_svread_za64_f64_vg1x4
__builtin_sme_svread_za64_s64_vg1x2
__builtin_sme_svread_za64_s64_vg1x4
__builtin_sme_svread_za64_u64_vg1x2
__builtin_sme_svread_za64_u64_vg1x4
__builtin_sme_svst1_hor_vnum_za128
vIUWiUiIUWiq16bv*Wi
__builtin_sme_svst1_hor_vnum_za16
__builtin_sme_svst1_hor_vnum_za32
__builtin_sme_svst1_hor_vnum_za64
__builtin_sme_svst1_hor_vnum_za8
__builtin_sme_svst1_hor_za128
vIUWiUiIUWiq16bv*
__builtin_sme_svst1_hor_za16
__builtin_sme_svst1_hor_za32
__builtin_sme_svst1_hor_za64
__builtin_sme_svst1_hor_za8
__builtin_sme_svst1_ver_vnum_za128
__builtin_sme_svst1_ver_vnum_za16
__builtin_sme_svst1_ver_vnum_za32
__builtin_sme_svst1_ver_vnum_za64
__builtin_sme_svst1_ver_vnum_za8
__builtin_sme_svst1_ver_za128
__builtin_sme_svst1_ver_za16
__builtin_sme_svst1_ver_za32
__builtin_sme_svst1_ver_za64
__builtin_sme_svst1_ver_za8
__builtin_sme_svstr_vnum_za
vUiIUWiq16bv*
__builtin_sme_svsumopa_za32_s8
__builtin_sme_svsumopa_za64_s16
__builtin_sme_svsumops_za32_s8
__builtin_sme_svsumops_za64_s16
__builtin_sme_svusmopa_za32_u8
__builtin_sme_svusmopa_za64_u16
__builtin_sme_svusmops_za32_u8
__builtin_sme_svusmops_za64_u16
__builtin_sme_svwrite_hor_za128_bf16_m
vIUWiUiIUWiq16bq8y
__builtin_sme_svwrite_hor_za128_f16_m
vIUWiUiIUWiq16bq8h
__builtin_sme_svwrite_hor_za128_f32_m
vIUWiUiIUWiq16bq4f
__builtin_sme_svwrite_hor_za128_f64_m
vIUWiUiIUWiq16bq2d
__builtin_sme_svwrite_hor_za128_s16_m
vIUWiUiIUWiq16bq8s
__builtin_sme_svwrite_hor_za128_s32_m
vIUWiUiIUWiq16bq4i
__builtin_sme_svwrite_hor_za128_s64_m
vIUWiUiIUWiq16bq2Wi
__builtin_sme_svwrite_hor_za128_s8_m
vIUWiUiIUWiq16bq16Sc
__builtin_sme_svwrite_hor_za128_u16_m
vIUWiUiIUWiq16bq8Us
__builtin_sme_svwrite_hor_za128_u32_m
vIUWiUiIUWiq16bq4Ui
__builtin_sme_svwrite_hor_za128_u64_m
vIUWiUiIUWiq16bq2UWi
__builtin_sme_svwrite_hor_za128_u8_m
vIUWiUiIUWiq16bq16Uc
__builtin_sme_svwrite_hor_za16_bf16_m
__builtin_sme_svwrite_hor_za16_bf16_vg2
vUiIUWiq16y
__builtin_sme_svwrite_hor_za16_bf16_vg4
vUiIUWiq32y
__builtin_sme_svwrite_hor_za16_f16_m
__builtin_sme_svwrite_hor_za16_f16_vg2
vUiIUWiq16h
__builtin_sme_svwrite_hor_za16_f16_vg4
vUiIUWiq32h
__builtin_sme_svwrite_hor_za16_s16_m
__builtin_sme_svwrite_hor_za16_s16_vg2
vUiIUWiq16s
__builtin_sme_svwrite_hor_za16_s16_vg4
vUiIUWiq32s
__builtin_sme_svwrite_hor_za16_u16_m
__builtin_sme_svwrite_hor_za16_u16_vg2
vUiIUWiq16Us
__builtin_sme_svwrite_hor_za16_u16_vg4
vUiIUWiq32Us
__builtin_sme_svwrite_hor_za32_f32_m
__builtin_sme_svwrite_hor_za32_f32_vg2
vUiIUWiq8f
__builtin_sme_svwrite_hor_za32_f32_vg4
vUiIUWiq16f
__builtin_sme_svwrite_hor_za32_s32_m
__builtin_sme_svwrite_hor_za32_s32_vg2
vUiIUWiq8i
__builtin_sme_svwrite_hor_za32_s32_vg4
vUiIUWiq16i
__builtin_sme_svwrite_hor_za32_u32_m
__builtin_sme_svwrite_hor_za32_u32_vg2
vUiIUWiq8Ui
__builtin_sme_svwrite_hor_za32_u32_vg4
vUiIUWiq16Ui
__builtin_sme_svwrite_hor_za64_f64_m
__builtin_sme_svwrite_hor_za64_f64_vg2
vUiIUWiq4d
__builtin_sme_svwrite_hor_za64_f64_vg4
vUiIUWiq8d
__builtin_sme_svwrite_hor_za64_s64_m
__builtin_sme_svwrite_hor_za64_s64_vg2
vUiIUWiq4Wi
__builtin_sme_svwrite_hor_za64_s64_vg4
vUiIUWiq8Wi
__builtin_sme_svwrite_hor_za64_u64_m
__builtin_sme_svwrite_hor_za64_u64_vg2
vUiIUWiq4UWi
__builtin_sme_svwrite_hor_za64_u64_vg4
vUiIUWiq8UWi
__builtin_sme_svwrite_hor_za8_s8_m
__builtin_sme_svwrite_hor_za8_s8_vg2
vUiIUWiq32Sc
__builtin_sme_svwrite_hor_za8_s8_vg4
vUiIUWiq64Sc
__builtin_sme_svwrite_hor_za8_u8_m
__builtin_sme_svwrite_hor_za8_u8_vg2
vUiIUWiq32Uc
__builtin_sme_svwrite_hor_za8_u8_vg4
vUiIUWiq64Uc
__builtin_sme_svwrite_ver_za128_bf16_m
__builtin_sme_svwrite_ver_za128_f16_m
__builtin_sme_svwrite_ver_za128_f32_m
__builtin_sme_svwrite_ver_za128_f64_m
__builtin_sme_svwrite_ver_za128_s16_m
__builtin_sme_svwrite_ver_za128_s32_m
__builtin_sme_svwrite_ver_za128_s64_m
__builtin_sme_svwrite_ver_za128_s8_m
__builtin_sme_svwrite_ver_za128_u16_m
__builtin_sme_svwrite_ver_za128_u32_m
__builtin_sme_svwrite_ver_za128_u64_m
__builtin_sme_svwrite_ver_za128_u8_m
__builtin_sme_svwrite_ver_za16_bf16_m
__builtin_sme_svwrite_ver_za16_bf16_vg2
__builtin_sme_svwrite_ver_za16_bf16_vg4
__builtin_sme_svwrite_ver_za16_f16_m
__builtin_sme_svwrite_ver_za16_f16_vg2
__builtin_sme_svwrite_ver_za16_f16_vg4
__builtin_sme_svwrite_ver_za16_s16_m
__builtin_sme_svwrite_ver_za16_s16_vg2
__builtin_sme_svwrite_ver_za16_s16_vg4
__builtin_sme_svwrite_ver_za16_u16_m
__builtin_sme_svwrite_ver_za16_u16_vg2
__builtin_sme_svwrite_ver_za16_u16_vg4
__builtin_sme_svwrite_ver_za32_f32_m
__builtin_sme_svwrite_ver_za32_f32_vg2
__builtin_sme_svwrite_ver_za32_f32_vg4
__builtin_sme_svwrite_ver_za32_s32_m
__builtin_sme_svwrite_ver_za32_s32_vg2
__builtin_sme_svwrite_ver_za32_s32_vg4
__builtin_sme_svwrite_ver_za32_u32_m
__builtin_sme_svwrite_ver_za32_u32_vg2
__builtin_sme_svwrite_ver_za32_u32_vg4
__builtin_sme_svwrite_ver_za64_f64_m
__builtin_sme_svwrite_ver_za64_f64_vg2
__builtin_sme_svwrite_ver_za64_f64_vg4
__builtin_sme_svwrite_ver_za64_s64_m
__builtin_sme_svwrite_ver_za64_s64_vg2
__builtin_sme_svwrite_ver_za64_s64_vg4
__builtin_sme_svwrite_ver_za64_u64_m
__builtin_sme_svwrite_ver_za64_u64_vg2
__builtin_sme_svwrite_ver_za64_u64_vg4
__builtin_sme_svwrite_ver_za8_s8_m
__builtin_sme_svwrite_ver_za8_s8_vg2
__builtin_sme_svwrite_ver_za8_s8_vg4
__builtin_sme_svwrite_ver_za8_u8_m
__builtin_sme_svwrite_ver_za8_u8_vg2
__builtin_sme_svwrite_ver_za8_u8_vg4
__builtin_sme_svwrite_za64_f64_vg1x2
__builtin_sme_svwrite_za64_f64_vg1x4
__builtin_sme_svwrite_za64_s64_vg1x2
__builtin_sme_svwrite_za64_s64_vg1x4
__builtin_sme_svwrite_za64_u64_vg1x2
__builtin_sme_svwrite_za64_u64_vg1x4
__builtin_sme_svzero_mask_za
vIUWi
__clear_cache
vv*v*
__builtin_arm_ldrex
__builtin_arm_ldaex
__builtin_arm_strex
__builtin_arm_stlex
__builtin_arm_clrex
__builtin_arm_rbit
__builtin_arm_rbit64
WUiWUi
__builtin_arm_cls
UiZUi
__builtin_arm_cls64
UiWUi
__builtin_arm_nop
__builtin_arm_yield
__builtin_arm_wfe
__builtin_arm_wfi
__builtin_arm_sev
__builtin_arm_sevl
__builtin_arm_crc32b
UiUiUc
__builtin_arm_crc32cb
__builtin_arm_crc32h
UiUiUs
__builtin_arm_crc32ch
__builtin_arm_crc32w
__builtin_arm_crc32cw
__builtin_arm_crc32d
UiUiWUi
__builtin_arm_crc32cd
__builtin_arm_irg
v*v*Ui
__builtin_arm_addg
__builtin_arm_gmi
Uiv*Ui
__builtin_arm_ldg
v*v*
__builtin_arm_stg
__builtin_arm_subp
Uiv*v*
__builtin_arm_mops_memset_tag
v*v*iz
__builtin_arm_dmb
__builtin_arm_dsb
__builtin_arm_isb
__builtin_arm_jcvt
v8.3a
__builtin_arm_prefetch
vvC*UiUiUiUi
__builtin_arm_rsr
UicC*
__builtin_arm_rsr64
WUicC*
__builtin_arm_rsrp
v*cC*
__builtin_arm_wsr
vcC*Ui
__builtin_arm_wsr64
vcC*WUi
__builtin_arm_wsrp
vcC*vC*
__dmb
__dsb
__isb
__yield
__wfe
__wfi
__sev
__sevl
__builtin_sponentry
__builtin_arm_tstart
__builtin_arm_tcommit
__builtin_arm_tcancel
vWUIi
__builtin_arm_ttest
__builtin_arm_rint32zf
v8.5a
__builtin_arm_rint32z
__builtin_arm_rint64zf
__builtin_arm_rint64z
__builtin_arm_rint32xf
__builtin_arm_rint32x
__builtin_arm_rint64xf
__builtin_arm_rint64x
__builtin_arm_rndr
iWUi*
rand
__builtin_arm_rndrrs
__builtin_arm_ld64b
vvC*WUi*
ls64
__builtin_arm_st64b
vv*WUiC*
__builtin_arm_st64bv
WUiv*WUiC*
__builtin_arm_st64bv0
_BitScanForward
UcUNi*UNi
intrin.h
_BitScanReverse
_BitScanForward64
UcUNi*ULLi
_BitScanReverse64
_InterlockedAdd
NiNiD*Ni
_InterlockedAnd64
LLiLLiD*LLi
_InterlockedDecrement64
LLiLLiD*
_InterlockedExchange64
_InterlockedExchangeAdd64
_InterlockedExchangeSub64
_InterlockedIncrement64
_InterlockedOr64
_InterlockedXor64
_InterlockedExchangeAdd_acq
_InterlockedExchangeAdd_rel
_InterlockedExchangeAdd_nf
_InterlockedExchangeAdd8_acq
ccD*c
_InterlockedExchangeAdd8_rel
_InterlockedExchangeAdd8_nf
_InterlockedExchangeAdd16_acq
ssD*s
_InterlockedExchangeAdd16_rel
_InterlockedExchangeAdd16_nf
_InterlockedExchangeAdd64_acq
_InterlockedExchangeAdd64_rel
_InterlockedExchangeAdd64_nf
_InterlockedExchange8_acq
_InterlockedExchange8_nf
_InterlockedExchange8_rel
_InterlockedExchange16_acq
_InterlockedExchange16_nf
_InterlockedExchange16_rel
_InterlockedExchange_acq
_InterlockedExchange_nf
_InterlockedExchange_rel
_InterlockedExchange64_acq
_InterlockedExchange64_nf
_InterlockedExchange64_rel
_InterlockedCompareExchange8_acq
ccD*cc
_InterlockedCompareExchange8_nf
_InterlockedCompareExchange8_rel
_InterlockedCompareExchange16_acq
ssD*ss
_InterlockedCompareExchange16_nf
_InterlockedCompareExchange16_rel
_InterlockedCompareExchange_acq
NiNiD*NiNi
_InterlockedCompareExchange_nf
_InterlockedCompareExchange_rel
_InterlockedCompareExchange64_acq
LLiLLiD*LLiLLi
_InterlockedCompareExchange64_nf
_InterlockedCompareExchange64_rel
_InterlockedCompareExchange128
UcLLiD*LLiLLiLLi*
_InterlockedCompareExchange128_acq
_InterlockedCompareExchange128_nf
_InterlockedCompareExchange128_rel
_InterlockedOr8_acq
_InterlockedOr8_nf
_InterlockedOr8_rel
_InterlockedOr16_acq
_InterlockedOr16_nf
_InterlockedOr16_rel
_InterlockedOr_acq
_InterlockedOr_nf
_InterlockedOr_rel
_InterlockedOr64_acq
_InterlockedOr64_nf
_InterlockedOr64_rel
_InterlockedXor8_acq
_InterlockedXor8_nf
_InterlockedXor8_rel
_InterlockedXor16_acq
_InterlockedXor16_nf
_InterlockedXor16_rel
_InterlockedXor_acq
_InterlockedXor_nf
_InterlockedXor_rel
_InterlockedXor64_acq
_InterlockedXor64_nf
_InterlockedXor64_rel
_InterlockedAnd8_acq
_InterlockedAnd8_nf
_InterlockedAnd8_rel
_InterlockedAnd16_acq
_InterlockedAnd16_nf
_InterlockedAnd16_rel
_InterlockedAnd_acq
_InterlockedAnd_nf
_InterlockedAnd_rel
_InterlockedAnd64_acq
_InterlockedAnd64_nf
_InterlockedAnd64_rel
_InterlockedIncrement16_acq
ssD*
_InterlockedIncrement16_nf
_InterlockedIncrement16_rel
_InterlockedIncrement_acq
NiNiD*
_InterlockedIncrement_nf
_InterlockedIncrement_rel
_InterlockedIncrement64_acq
_InterlockedIncrement64_nf
_InterlockedIncrement64_rel
_InterlockedDecrement16_acq
_InterlockedDecrement16_nf
_InterlockedDecrement16_rel
_InterlockedDecrement_acq
_InterlockedDecrement_nf
_InterlockedDecrement_rel
_InterlockedDecrement64_acq
_InterlockedDecrement64_nf
_InterlockedDecrement64_rel
_ReadWriteBarrier
__getReg
ULLii
_ReadStatusReg
LLii
_WriteStatusReg
viLLi
_AddressOfReturnAddress
__mulh
SLLiSLLiSLLi
__umulh
ULLiULLiULLi
__break
__writex18byte
vUNiUc
__writex18word
vUNiUs
__writex18dword
vUNiUNi
__writex18qword
vUNiULLi
__readx18byte
UcUNi
__readx18word
UsUNi
__readx18dword
UNiUNi
__readx18qword
ULLiUNi
_mcount
__ARM_FEATURE_QRDMX
__ARM_FEATURE_ATOMICS
__ARM_FEATURE_CRC32
__ARM_ARCH_8_3__
__ARM_FEATURE_COMPLEX
__ARM_FEATURE_JCVT
__ARM_ARCH_8_4__
__ARM_FEATURE_FRINT
__ARM_ARCH_8_5__
__ARM_ARCH_8_6__
__ARM_ARCH_8_7__
__ARM_ARCH_8_8__
__ARM_ARCH_9_0__
__ARM_ARCH_9_1__
__ARM_ARCH_9_2__
__ARM_ARCH_9_3__
__aarch64__
__AARCH64_CMODEL_
__ARM_ACLE
__ARM_ARCH
__ARM_ARCH_PROFILE
__ARM_64BIT_STATE
__ARM_PCS_AAPCS64
__ARM_ARCH_ISA_A64
__ARM_FEATURE_CLZ
__ARM_FEATURE_FMA
__ARM_FEATURE_LDREX
__ARM_FEATURE_IDIV
__ARM_FEATURE_DIV
__ARM_FEATURE_NUMERIC_MAXMIN
__ARM_FEATURE_DIRECTED_ROUNDING
__ARM_ALIGN_MAX_STACK_PWR
__ARM_FP
__ARM_FP16_FORMAT_IEEE
__ARM_FP16_ARGS
__ARM_FP_FAST
__ARM_SIZEOF_WCHAR_T
__ARM_SIZEOF_MINIMAL_ENUM
__ARM_NEON
__ARM_NEON_FP
__ARM_FEATURE_SVE
__ARM_NEON_SVE_BRIDGE
__ARM_FEATURE_SVE2
__ARM_FEATURE_SVE2_AES
__ARM_FEATURE_SVE2_BITPERM
__ARM_FEATURE_SVE2_SHA3
__ARM_FEATURE_SVE2_SM4
__ARM_FEATURE_SME
__ARM_FEATURE_SME_I64I64
__ARM_FEATURE_SME2
__ARM_FEATURE_RCPC
__ARM_FEATURE_CRYPTO
__ARM_FEATURE_AES
__ARM_FEATURE_SHA2
__ARM_FEATURE_SHA3
__ARM_FEATURE_SHA512
__ARM_FEATURE_SM3
__ARM_FEATURE_SM4
__ARM_FEATURE_UNALIGNED
__ARM_FEATURE_FP16_VECTOR_ARITHMETIC
__ARM_FEATURE_FP16_SCALAR_ARITHMETIC
__ARM_FEATURE_DOTPROD
__ARM_FEATURE_MEMORY_TAGGING
__ARM_FEATURE_TME
__ARM_FEATURE_MATMUL_INT8
__ARM_FEATURE_BF16
__ARM_FEATURE_BF16_VECTOR_ARITHMETIC
__ARM_BF16_FORMAT_ALTERNATIVE
__ARM_FEATURE_BF16_SCALAR_ARITHMETIC
__ARM_FEATURE_SVE_BF16
__ARM_FEATURE_SVE_MATMUL_FP64
__ARM_FEATURE_SVE_MATMUL_FP32
__ARM_FEATURE_SVE_MATMUL_INT8
__ARM_FEATURE_FP16_FML
__ARM_FEATURE_PAC_DEFAULT
__ARM_FEATURE_BTI_DEFAULT
__ARM_FEATURE_LS64
__ARM_FEATURE_RNG
__ARM_FEATURE_MOPS
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8
__FP_FAST_FMA
__FP_FAST_FMAF
__ARM_FEATURE_SVE_VECTOR_OPERATORS
__ARM_FEATURE_SVE_BITS
aarch64
f64mm
f32mm
sme2
+dotprod
cpu=
e-m:o-p:32:32-i64:64-i128:128-n32:64-S128
e-m:o-i64:64-i128:128-n32:64-S128
e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128
__AARCH64EL__
__AARCH64EB__
__AARCH_BIG_ENDIAN
__ARM_BIG_ENDIAN
E-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128
e-m:w-p:64:64-i32:32-i64:64-i128:128-n32:64-S128
_M_ARM64
__AARCH64_SIMD__
__ARM64_ARCH_8_32__
__ARM64_ARCH_8__
__ARM_NEON__
__REGISTER_PREFIX__
__arm64
__arm64__
__arm64e__
__RENDERSCRIPT__
aV,m
F,C
Epr@
"jU7
#mGs/
@%uQO
i@)0T=
1E5L@+,T9
1@,F
M@,p
-AD 
@.$W)
@2)G
4`OdC
@6gB
7|RLt
D/G@7
;xKo
<+C\
<qG58
@=$Dm!
RNZ@>E
~@?3
@@EB
@@[F
9@@q
L@B4
@B@G
BvR+z
C@D?K@CLF
CXQV
@E#E
;@Hw
@IMB
J#QW(
JsMz
E(y@K
NaNn]
@OuL
@P8B
@R{C
TUG3
_8Mx
x@V+
0YEiL
(@Vk
W)SBF@W;
k@Xh
[WNt
^xHVa
\ G3
@\JC
@^BF
EF@^
@_9O
_EM&
XCFF
@cVC
@e_E
fuRJ|@f{G
@gfG
J)Gi
0@hv
XQS=
@lLJ
M{@mlK
oNFv
@oTKo
~@uo
RI\@v
uyKo
wlCh
@xnF
xzNs
z-B)
zWB2
zoB08
{AG*
@}tG
~GIV
@~MB
:@~c
Nm)@~
 EF
HFU-
Ob6@
O0Oj
T?]@
8D[
O-l@
G V@
iqQQr@
F)S@
WEA.@
uiJR
t)C?h@
qD{I@
`E>q
E1X@
AQE+
SEQ@
MzV@
9E?M@
SGK
DaI@
HB9<
B9<@
Ob'@
0GTo@
1HQU
0F7^
HQPb
71I8
GTo@
u9Ch
P]2@
PB08
yB08
"B08
o0QU
RAG3
RPOb
A#$C
A#bD
wA#~
A$rB
A')B
A(J#
NA1i
5xKo
7"Nq
74Nta
M0E'^A8
5A;uE
I~!AI
AVFI
JAVx
aGV)AY
D5KAZ
)QQaA[
hA^-
^CD"q
A_NE
,Ad*
e(T>
AePD[
PZBAe
)Ak:G
kFCE
Al^G
lAn*
Ao&G
rAvR
Ax[B
A},
MA}N
E@<A
U8SA
=B&QA
0I9(
xC]j
xXG}
3XO0
DqJo
0HDB
9F`K
)LRq
J_rA
OjLA
M;NA
NI8A
N!0A
9!D[A
5!QO
zAB-A
bB-A
DGK
^YA
;G!y
QM}bB
B6F
KQgB
VHVaB
$IHK
vB"a
B"yC
rB#}
E27B$
&aD"q
B&QB&
B'dE
,B+VG
,B+c
,B,'
,B-EG
,B-m
.PDd
!aDd
$aDb
=B4#
B4eC
B4}D
5'OgmB5E
B6+I
;xM{@B;~
=WFw.
G7qB>
CxO_
K0E+
A7F+
sPMz
PC?zBE
lBHf
q9Ch
BP9F
lBPQ
BQ5H
,BQS
RtJ8
BTBJu8
U1I-m
X"Od
X(LRqBX4P_r
7BXRE
VBXd
BXzE
BZ$D
B["H
B`EHm
[B`]
NB`u
Ba&I
BaxD
bcSB
b{D[Bb
cG"BcOB
*Bg
$BgV
`NI8
lBh7I
BhUP
oBhy
kBiC
mzI@2
uBo&
BoxF
;`I4$
y) Bye&
|xH<
O)E'
D:tB
EOCB
hU2
`@B#
y1G3
iC/S
0H"C
7B&Q
[D!1
H/8B
&C&QB
$iDb
m!BeB
F'B
XD.`
D.`B
IAuB
^Nh@
POh?B
;aGjb
FfB
CUE
GjbC
$IMkZC
21F/
PG9E
(C6;
P\bC
>C w
He3C 
7!E-
D.`C"
"2E-
"FF-
D.`C"
lC#6
#TE-
#^D.`C#hC
F?6C#
C$"C.a
lC$P
xC.a
%:D.`C%F
lC%v
JsMC%
JsMC%
&6F-
&pEQ
JsMC&
(@G;
*YI)
C*_I)
C*kI)
C*wI)
,(Cu
3C0#
kC;CF
<\G!y
kC>d
CBoD)
EcCl
CEoD
LhI;M
M'E<
'CRK
,CV6
29F/
kCY8
.CYrI
.CY~I
/C[%
C[1F 
}C[RF 
}C[p
lC]>
lC]\
lC]t
lC^ZC
^fC.aC^v
D.`C^
JsMC_
_XEQ
C_hD.`
C.aC_
oC``
lCa
`D.`
aNEQ
a|C.aCa
Cf3Q
VCfW
CzKCi
l,&ClH
l|"Cl
kCmnEA
CnBG:
CoeE
otF;
CpyF
ZiEw
VCsN
VCsZ
yCt>
KaD)
kCy2F
kCy>G
kCz7
C|]F
C|iL
EFC}?
C}WC
kC}{F
~*G~
$xGZ5
NJsMC
CUC
GLC
SD!C
`C.aC
FkmC
L{tC
lM~s
YFs{C
Iu9C
