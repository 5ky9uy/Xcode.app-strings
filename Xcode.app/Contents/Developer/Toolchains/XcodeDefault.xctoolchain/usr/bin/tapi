.objc_class_name_
_OBJC_METACLASS_$_
-?:\,[]{}#&*!|>'"%@`
onfiguration-v1
--- !tapi-config
PrivateFrameworks
generate-api-tests
ErrorsAndWarningText-based Stubs Tool
/System/iOSSupport
/System/DriverKit
s/OS
/System/Cryptexerary/Frameworks//System/Library/
neratedAccessorsCoreDataGenerate
nternalPrivate.hAvailabilityInte
__objc_imageinfo--- !tapi-tbd-v1
--- !tapi-tbd-v2--- !tapi-tbd-v3#EncryptedString#
odulemap
module.private.mmodule_private.map
only
line-directives-line-tables-onlya
fast-honor-pragmas
html-single-fileplist-multi-fileerimental-ifs-v1experimental-ifserimental-ifs-v2l-elf-v1
experimental-yami-elf-v1
experimental-tapprecompiled-header
assembler-with-cpp
-no-round-trip-a
/usr/local/include
DISTRIB_CODENAME=
se Linux
Red Hat EnterpriScientific LinuxulatorBridge_iOSCoreSimulatorBridate
MobileSoftwareUpTextureConverter
zlib
-fdump-record-layouts
full
marker
integer
none
undefined
address
local-exec
4096
medium
small
mips1
mips2
mips32r2
mips32r3
mips32r5
mips32r6
mips32
mips3
mips4
mips5
mips64r2
mips64r3
mips64r5
mips64r6
mips64
hexagonv55
hexagonv5
hexagonv60
hexagonv62
hexagonv65
hexagonv66
hexagonv67t
hexagonv67
hexagonv68
no-invalid-source-encoding
invalid-source-encoding
everything
no-error
error
error=c++11-compat-deprecated-writable-strings
-iwithprefixbefore
-externc-isystem-internal-extern-internal-isystem
file
-header-include--index-store-path
ules-cache-path=-fmodules-cache-otes-cache-path=-fapinotes-cache
inline-bool-flagters
inline-8bit-coun
ze64_off
oclc_wavefrontsivefrontsize64_onrounded_sqrt_offoclc_correctly_r_rounded_sqrt_onoclc_daz_opt_offc_finite_only_onoclc_finite_onlyc_unsafe_math_onoclc_unsafe_math_off
oclc_isa_versionHIP_VERSION_MAJOR
HIP_VERSION_MINOHIP_VERSION_PATCH
r-passes
-extra-vectorize5
ssp-buffer-size=t-header
-finclude-defaultzns
-disable-llvm-op--fatal-warningse_cpusubtype_ALL-force_cpusubtypsections
-compress-debug---compress-debugions=yes
-relocations=yes--nocompress-deb-nocompress-debu-compilation-dirion-dir=
atic
-lcompiler_rt-st/usr/lib/system/
.xctoolchain/usrandLineTools/usr/CommandLineTool/XcodeDefault.xc
AppleTVSimulator
msp430i2xxgeneric
-wasm-enable-sjlj
-emscripten-sjlj-enable-emscript
-fxray-instrument
-fxray-instruction-threshold=
try_acquire_sharquire_capabilitytry_acquire_capauires_capabilityrequires_capabiltrylock_functionexclusive_trylocneric_capabilityrelease_generic_requires_shared_t_exclusive_lockassert_exclusived_locks_requiredshared_locks_reqpability
assert_shared_carequired
exclusive_locks_assert_capability
tion
shared_lock_funcve_lock_functionexclusive_lock_fshared_trylock_facquire_shared_crelease_shared_cacquire_capability
assert_shared_lock
release_capabiliownership_returnswift_async_error
nounroll_and_jamreturn_typestateenum_extensibiliobjc_method_family
ng_builtin_aliasclang_builtin_alc_bridge_mutableobjc_bridge_mutac_bridge_relatedobjc_bridge_rela_usage_semanticsxnu_usage_semantrm_builtin_alias__clang_arm_builer_with_type_tagpointer_with_typtag_for_datatypetype_tag_for_datnt_with_type_tagargument_with_tymemory_operationtyped_memory_opeh_vtable_pointerptrauth_vtable_phared_capabilityiboutletcollection
layout_compatible
icationExtensioniOSMacApplicatiosion
iosmac_app_extenmacCatalystAppliwatchOSApplicatixtension
tvOSApplicationEmacOSApplicationiOSApplicationEx
st_app_extensionmaccatalyst_app_os_app_extensionwatchos_app_extetvos_app_extensimacos_app_extensios_app_extension
null_unspecifiedunsafe_unretained
c_implementationobjc_implementatZERO
FE_TONEARESTFROMtual_inheritancevirtual_inheritaance
multiple_inheritsingle_inheritance
tiation_intervalpipeline_initiatinterleave_counttorize_predicatevectorize_predic
erationWithBlockaddOperationWith_ptr
intrusive_shared
tObjectFromCoderreplacementObjecableCopyWithZonemutableCopyWithZ2
ATED_INITIALIZERNS_DESIGNATED_INF
keConstantString__CFStringMakeCo
branch-protection=
tmo_posix_memalign
tmo_aligned_allono_sanitize_thread
no_sanitize_memory
sanitize_addressno_sanitize_addr_safety_analysisno_address_safet
asrl
lsll
sqrshr
sqrshrl
sqrshrl_sat48
sqshl
sqshll
srshr
srshrl
uqrshl
uqrshll
uqrshll_sat48
uqshl
uqshll
urshr
urshrl
vabavq_p
vabavq_p_s16
vabavq_p_s32
vabavq_p_s8
vabavq_p_u16
vabavq_p_u32
vabavq_p_u8
vabavq
vabavq_s16
vabavq_s32
vabavq_s8
vabavq_u16
vabavq_u32
vabavq_u8
vabdq
vabdq_f16
vabdq_f32
vabdq_m
vabdq_m_f16
vabdq_m_f32
vabdq_m_s16
vabdq_m_s32
vabdq_m_s8
vabdq_m_u16
vabdq_m_u32
vabdq_m_u8
vabdq_s16
vabdq_s32
vabdq_s8
vabdq_u16
vabdq_u32
vabdq_u8
vabdq_x
vabdq_x_f16
vabdq_x_f32
vabdq_x_s16
vabdq_x_s32
vabdq_x_s8
vabdq_x_u16
vabdq_x_u32
vabdq_x_u8
vabsq
vabsq_f16
vabsq_f32
vabsq_m
vabsq_m_f16
vabsq_m_f32
vabsq_m_s16
vabsq_m_s32
vabsq_m_s8
vabsq_s16
vabsq_s32
vabsq_s8
vabsq_x
vabsq_x_f16
vabsq_x_f32
vabsq_x_s16
vabsq_x_s32
vabsq_x_s8
vadciq_m
vadciq_m_s32
vadciq_m_u32
vadciq
vadciq_s32
vadciq_u32
vadcq_m
vadcq_m_s32
vadcq_m_u32
vadcq
vadcq_s32
vadcq_u32
vaddlvaq_p
vaddlvaq_p_s32
vaddlvaq_p_u32
vaddlvaq
vaddlvaq_s32
vaddlvaq_u32
vaddlvq_p
vaddlvq_p_s32
vaddlvq_p_u32
vaddlvq
vaddlvq_s32
vaddlvq_u32
vaddq
vaddq_f16
vaddq_f32
vaddq_m
vaddq_m_f16
vaddq_m_f32
vaddq_m_n_f16
vaddq_m_n_f32
vaddq_m_n_s16
vaddq_m_n_s32
vaddq_m_n_s8
vaddq_m_n_u16
vaddq_m_n_u32
vaddq_m_n_u8
vaddq_m_s16
vaddq_m_s32
vaddq_m_s8
vaddq_m_u16
vaddq_m_u32
vaddq_m_u8
vaddq_n_f16
vaddq_n_f32
vaddq_n_s16
vaddq_n_s32
vaddq_n_s8
vaddq_n_u16
vaddq_n_u32
vaddq_n_u8
vaddq_s16
vaddq_s32
vaddq_s8
vaddq_u16
vaddq_u32
vaddq_u8
vaddq_x
vaddq_x_f16
vaddq_x_f32
vaddq_x_n_f16
vaddq_x_n_f32
vaddq_x_n_s16
vaddq_x_n_s32
vaddq_x_n_s8
vaddq_x_n_u16
vaddq_x_n_u32
vaddq_x_n_u8
vaddq_x_s16
vaddq_x_s32
vaddq_x_s8
vaddq_x_u16
vaddq_x_u32
vaddq_x_u8
vaddvaq_p
vaddvaq_p_s16
vaddvaq_p_s32
vaddvaq_p_s8
vaddvaq_p_u16
vaddvaq_p_u32
vaddvaq_p_u8
vaddvaq
vaddvaq_s16
vaddvaq_s32
vaddvaq_s8
vaddvaq_u16
vaddvaq_u32
vaddvaq_u8
vaddvq_p
vaddvq_p_s16
vaddvq_p_s32
vaddvq_p_s8
vaddvq_p_u16
vaddvq_p_u32
vaddvq_p_u8
vaddvq
vaddvq_s16
vaddvq_s32
vaddvq_s8
vaddvq_u16
vaddvq_u32
vaddvq_u8
vandq
vandq_f16
vandq_f32
vandq_m
vandq_m_f16
vandq_m_f32
vandq_m_s16
vandq_m_s32
vandq_m_s8
vandq_m_u16
vandq_m_u32
vandq_m_u8
vandq_s16
vandq_s32
vandq_s8
vandq_u16
vandq_u32
vandq_u8
vandq_x
vandq_x_f16
vandq_x_f32
vandq_x_s16
vandq_x_s32
vandq_x_s8
vandq_x_u16
vandq_x_u32
vandq_x_u8
vbicq
vbicq_f16
vbicq_f32
vbicq_m
vbicq_m_f16
vbicq_m_f32
vbicq_m_n
vbicq_m_n_s16
vbicq_m_n_s32
vbicq_m_n_u16
vbicq_m_n_u32
vbicq_m_s16
vbicq_m_s32
vbicq_m_s8
vbicq_m_u16
vbicq_m_u32
vbicq_m_u8
vbicq_n_s16
vbicq_n_s32
vbicq_n_u16
vbicq_n_u32
vbicq_s16
vbicq_s32
vbicq_s8
vbicq_u16
vbicq_u32
vbicq_u8
vbicq_x
vbicq_x_f16
vbicq_x_f32
vbicq_x_s16
vbicq_x_s32
vbicq_x_s8
vbicq_x_u16
vbicq_x_u32
vbicq_x_u8
vbrsrq_m
vbrsrq_m_n_f16
vbrsrq_m_n_f32
vbrsrq_m_n_s16
vbrsrq_m_n_s32
vbrsrq_m_n_s8
vbrsrq_m_n_u16
vbrsrq_m_n_u32
vbrsrq_m_n_u8
vbrsrq
vbrsrq_n_f16
vbrsrq_n_f32
vbrsrq_n_s16
vbrsrq_n_s32
vbrsrq_n_s8
vbrsrq_n_u16
vbrsrq_n_u32
vbrsrq_n_u8
vbrsrq_x
vbrsrq_x_n_f16
vbrsrq_x_n_f32
vbrsrq_x_n_s16
vbrsrq_x_n_s32
vbrsrq_x_n_s8
vbrsrq_x_n_u16
vbrsrq_x_n_u32
vbrsrq_x_n_u8
vcaddq_rot270
vcaddq_rot270_f16
vcaddq_rot270_f32
vcaddq_rot270_m
vcaddq_rot270_m_f16
vcaddq_rot270_m_f32
vcaddq_rot270_m_s16
vcaddq_rot270_m_s32
vcaddq_rot270_m_s8
vcaddq_rot270_m_u16
vcaddq_rot270_m_u32
vcaddq_rot270_m_u8
vcaddq_rot270_s16
vcaddq_rot270_s32
vcaddq_rot270_s8
vcaddq_rot270_u16
vcaddq_rot270_u32
vcaddq_rot270_u8
vcaddq_rot270_x
vcaddq_rot270_x_f16
vcaddq_rot270_x_f32
vcaddq_rot270_x_s16
vcaddq_rot270_x_s32
vcaddq_rot270_x_s8
vcaddq_rot270_x_u16
vcaddq_rot270_x_u32
vcaddq_rot270_x_u8
vcaddq_rot90
vcaddq_rot90_f16
vcaddq_rot90_f32
vcaddq_rot90_m
vcaddq_rot90_m_f16
vcaddq_rot90_m_f32
vcaddq_rot90_m_s16
vcaddq_rot90_m_s32
vcaddq_rot90_m_s8
vcaddq_rot90_m_u16
vcaddq_rot90_m_u32
vcaddq_rot90_m_u8
vcaddq_rot90_s16
vcaddq_rot90_s32
vcaddq_rot90_s8
vcaddq_rot90_u16
vcaddq_rot90_u32
vcaddq_rot90_u8
vcaddq_rot90_x
vcaddq_rot90_x_f16
vcaddq_rot90_x_f32
vcaddq_rot90_x_s16
vcaddq_rot90_x_s32
vcaddq_rot90_x_s8
vcaddq_rot90_x_u16
vcaddq_rot90_x_u32
vcaddq_rot90_x_u8
vclsq_m
vclsq_m_s16
vclsq_m_s32
vclsq_m_s8
vclsq
vclsq_s16
vclsq_s32
vclsq_s8
vclsq_x
vclsq_x_s16
vclsq_x_s32
vclsq_x_s8
vclzq_m
vclzq_m_s16
vclzq_m_s32
vclzq_m_s8
vclzq_m_u16
vclzq_m_u32
vclzq_m_u8
vclzq
vclzq_s16
vclzq_s32
vclzq_s8
vclzq_u16
vclzq_u32
vclzq_u8
vclzq_x
vclzq_x_s16
vclzq_x_s32
vclzq_x_s8
vclzq_x_u16
vclzq_x_u32
vclzq_x_u8
vcmlaq
vcmlaq_f16
vcmlaq_f32
vcmlaq_m
vcmlaq_m_f16
vcmlaq_m_f32
vcmlaq_rot180
vcmlaq_rot180_f16
vcmlaq_rot180_f32
vcmlaq_rot180_m
vcmlaq_rot180_m_f16
vcmlaq_rot180_m_f32
vcmlaq_rot270
vcmlaq_rot270_f16
vcmlaq_rot270_f32
vcmlaq_rot270_m
vcmlaq_rot270_m_f16
vcmlaq_rot270_m_f32
vcmlaq_rot90
vcmlaq_rot90_f16
vcmlaq_rot90_f32
vcmlaq_rot90_m
vcmlaq_rot90_m_f16
vcmlaq_rot90_m_f32
vcmpcsq_m
vcmpcsq_m_n_u16
vcmpcsq_m_n_u32
vcmpcsq_m_n_u8
vcmpcsq_m_u16
vcmpcsq_m_u32
vcmpcsq_m_u8
vcmpcsq
vcmpcsq_n_u16
vcmpcsq_n_u32
vcmpcsq_n_u8
vcmpcsq_u16
vcmpcsq_u32
vcmpcsq_u8
vcmpeqq
vcmpeqq_f16
vcmpeqq_f32
vcmpeqq_m
vcmpeqq_m_f16
vcmpeqq_m_f32
vcmpeqq_m_n_f16
vcmpeqq_m_n_f32
vcmpeqq_m_n_s16
vcmpeqq_m_n_s32
vcmpeqq_m_n_s8
vcmpeqq_m_n_u16
vcmpeqq_m_n_u32
vcmpeqq_m_n_u8
vcmpeqq_m_s16
vcmpeqq_m_s32
vcmpeqq_m_s8
vcmpeqq_m_u16
vcmpeqq_m_u32
vcmpeqq_m_u8
vcmpeqq_n_f16
vcmpeqq_n_f32
vcmpeqq_n_s16
vcmpeqq_n_s32
vcmpeqq_n_s8
vcmpeqq_n_u16
vcmpeqq_n_u32
vcmpeqq_n_u8
vcmpeqq_s16
vcmpeqq_s32
vcmpeqq_s8
vcmpeqq_u16
vcmpeqq_u32
vcmpeqq_u8
vcmpgeq
vcmpgeq_f16
vcmpgeq_f32
vcmpgeq_m
vcmpgeq_m_f16
vcmpgeq_m_f32
vcmpgeq_m_n_f16
vcmpgeq_m_n_f32
vcmpgeq_m_n_s16
vcmpgeq_m_n_s32
vcmpgeq_m_n_s8
vcmpgeq_m_s16
vcmpgeq_m_s32
vcmpgeq_m_s8
vcmpgeq_n_f16
vcmpgeq_n_f32
vcmpgeq_n_s16
vcmpgeq_n_s32
vcmpgeq_n_s8
vcmpgeq_s16
vcmpgeq_s32
vcmpgeq_s8
vcmpgtq
vcmpgtq_f16
vcmpgtq_f32
vcmpgtq_m
vcmpgtq_m_f16
vcmpgtq_m_f32
vcmpgtq_m_n_f16
vcmpgtq_m_n_f32
vcmpgtq_m_n_s16
vcmpgtq_m_n_s32
vcmpgtq_m_n_s8
vcmpgtq_m_s16
vcmpgtq_m_s32
vcmpgtq_m_s8
vcmpgtq_n_f16
vcmpgtq_n_f32
vcmpgtq_n_s16
vcmpgtq_n_s32
vcmpgtq_n_s8
vcmpgtq_s16
vcmpgtq_s32
vcmpgtq_s8
vcmphiq_m
vcmphiq_m_n_u16
vcmphiq_m_n_u32
vcmphiq_m_n_u8
vcmphiq_m_u16
vcmphiq_m_u32
vcmphiq_m_u8
vcmphiq
vcmphiq_n_u16
vcmphiq_n_u32
vcmphiq_n_u8
vcmphiq_u16
vcmphiq_u32
vcmphiq_u8
vcmpleq
vcmpleq_f16
vcmpleq_f32
vcmpleq_m
vcmpleq_m_f16
vcmpleq_m_f32
vcmpleq_m_n_f16
vcmpleq_m_n_f32
vcmpleq_m_n_s16
vcmpleq_m_n_s32
vcmpleq_m_n_s8
vcmpleq_m_s16
vcmpleq_m_s32
vcmpleq_m_s8
vcmpleq_n_f16
vcmpleq_n_f32
vcmpleq_n_s16
vcmpleq_n_s32
vcmpleq_n_s8
vcmpleq_s16
vcmpleq_s32
vcmpleq_s8
vcmpltq
vcmpltq_f16
vcmpltq_f32
vcmpltq_m
vcmpltq_m_f16
vcmpltq_m_f32
vcmpltq_m_n_f16
vcmpltq_m_n_f32
vcmpltq_m_n_s16
vcmpltq_m_n_s32
vcmpltq_m_n_s8
vcmpltq_m_s16
vcmpltq_m_s32
vcmpltq_m_s8
vcmpltq_n_f16
vcmpltq_n_f32
vcmpltq_n_s16
vcmpltq_n_s32
vcmpltq_n_s8
vcmpltq_s16
vcmpltq_s32
vcmpltq_s8
vcmpneq
vcmpneq_f16
vcmpneq_f32
vcmpneq_m
vcmpneq_m_f16
vcmpneq_m_f32
vcmpneq_m_n_f16
vcmpneq_m_n_f32
vcmpneq_m_n_s16
vcmpneq_m_n_s32
vcmpneq_m_n_s8
vcmpneq_m_n_u16
vcmpneq_m_n_u32
vcmpneq_m_n_u8
vcmpneq_m_s16
vcmpneq_m_s32
vcmpneq_m_s8
vcmpneq_m_u16
vcmpneq_m_u32
vcmpneq_m_u8
vcmpneq_n_f16
vcmpneq_n_f32
vcmpneq_n_s16
vcmpneq_n_s32
vcmpneq_n_s8
vcmpneq_n_u16
vcmpneq_n_u32
vcmpneq_n_u8
vcmpneq_s16
vcmpneq_s32
vcmpneq_s8
vcmpneq_u16
vcmpneq_u32
vcmpneq_u8
vcmulq
vcmulq_f16
vcmulq_f32
vcmulq_m
vcmulq_m_f16
vcmulq_m_f32
vcmulq_rot180
vcmulq_rot180_f16
vcmulq_rot180_f32
vcmulq_rot180_m
vcmulq_rot180_m_f16
vcmulq_rot180_m_f32
vcmulq_rot180_x
vcmulq_rot180_x_f16
vcmulq_rot180_x_f32
vcmulq_rot270
vcmulq_rot270_f16
vcmulq_rot270_f32
vcmulq_rot270_m
vcmulq_rot270_m_f16
vcmulq_rot270_m_f32
vcmulq_rot270_x
vcmulq_rot270_x_f16
vcmulq_rot270_x_f32
vcmulq_rot90
vcmulq_rot90_f16
vcmulq_rot90_f32
vcmulq_rot90_m
vcmulq_rot90_m_f16
vcmulq_rot90_m_f32
vcmulq_rot90_x
vcmulq_rot90_x_f16
vcmulq_rot90_x_f32
vcmulq_x
vcmulq_x_f16
vcmulq_x_f32
vcreateq_f16
vcreateq_f32
vcreateq_s16
vcreateq_s32
vcreateq_s64
vcreateq_s8
vcreateq_u16
vcreateq_u32
vcreateq_u64
vcreateq_u8
vctp16q
vctp16q_m
vctp32q
vctp32q_m
vctp64q
vctp64q_m
vctp8q
vctp8q_m
vcvtaq_m
vcvtaq_m_s16_f16
vcvtaq_m_s32_f32
vcvtaq_m_u16_f16
vcvtaq_m_u32_f32
vcvtaq_s16_f16
vcvtaq_s32_f32
vcvtaq_u16_f16
vcvtaq_u32_f32
vcvtaq_x_s16_f16
vcvtaq_x_s32_f32
vcvtaq_x_u16_f16
vcvtaq_x_u32_f32
vcvtbq_f16_f32
vcvtbq_f32_f16
vcvtbq_m_f16_f32
vcvtbq_m_f32_f16
vcvtbq_x_f32_f16
vcvtmq_m
vcvtmq_m_s16_f16
vcvtmq_m_s32_f32
vcvtmq_m_u16_f16
vcvtmq_m_u32_f32
vcvtmq_s16_f16
vcvtmq_s32_f32
vcvtmq_u16_f16
vcvtmq_u32_f32
vcvtmq_x_s16_f16
vcvtmq_x_s32_f32
vcvtmq_x_u16_f16
vcvtmq_x_u32_f32
vcvtnq_m
vcvtnq_m_s16_f16
vcvtnq_m_s32_f32
vcvtnq_m_u16_f16
vcvtnq_m_u32_f32
vcvtnq_s16_f16
vcvtnq_s32_f32
vcvtnq_u16_f16
vcvtnq_u32_f32
vcvtnq_x_s16_f16
vcvtnq_x_s32_f32
vcvtnq_x_u16_f16
vcvtnq_x_u32_f32
vcvtpq_m
vcvtpq_m_s16_f16
vcvtpq_m_s32_f32
vcvtpq_m_u16_f16
vcvtpq_m_u32_f32
vcvtpq_s16_f16
vcvtpq_s32_f32
vcvtpq_u16_f16
vcvtpq_u32_f32
vcvtpq_x_s16_f16
vcvtpq_x_s32_f32
vcvtpq_x_u16_f16
vcvtpq_x_u32_f32
vcvtq
vcvtq_f16_s16
vcvtq_f16_u16
vcvtq_f32_s32
vcvtq_f32_u32
vcvtq_m
vcvtq_m_f16_s16
vcvtq_m_f16_u16
vcvtq_m_f32_s32
vcvtq_m_f32_u32
vcvtq_m_n
vcvtq_m_n_f16_s16
vcvtq_m_n_f16_u16
vcvtq_m_n_f32_s32
vcvtq_m_n_f32_u32
vcvtq_m_n_s16_f16
vcvtq_m_n_s32_f32
vcvtq_m_n_u16_f16
vcvtq_m_n_u32_f32
vcvtq_m_s16_f16
vcvtq_m_s32_f32
vcvtq_m_u16_f16
vcvtq_m_u32_f32
vcvtq_n
vcvtq_n_f16_s16
vcvtq_n_f16_u16
vcvtq_n_f32_s32
vcvtq_n_f32_u32
vcvtq_n_s16_f16
vcvtq_n_s32_f32
vcvtq_n_u16_f16
vcvtq_n_u32_f32
vcvtq_s16_f16
vcvtq_s32_f32
vcvtq_u16_f16
vcvtq_u32_f32
vcvtq_x
vcvtq_x_f16_s16
vcvtq_x_f16_u16
vcvtq_x_f32_s32
vcvtq_x_f32_u32
vcvtq_x_n
vcvtq_x_n_f16_s16
vcvtq_x_n_f16_u16
vcvtq_x_n_f32_s32
vcvtq_x_n_f32_u32
vcvtq_x_n_s16_f16
vcvtq_x_n_s32_f32
vcvtq_x_n_u16_f16
vcvtq_x_n_u32_f32
vcvtq_x_s16_f16
vcvtq_x_s32_f32
vcvtq_x_u16_f16
vcvtq_x_u32_f32
vcvttq_f16_f32
vcvttq_f32_f16
vcvttq_m_f16_f32
vcvttq_m_f32_f16
vcvttq_x_f32_f16
vddupq_m
vddupq_m_n_u16
vddupq_m_n_u32
vddupq_m_n_u8
vddupq_m_wb_u16
vddupq_m_wb_u32
vddupq_m_wb_u8
vddupq_u16
vddupq_n_u16
vddupq_u32
vddupq_n_u32
vddupq_u8
vddupq_n_u8
vddupq_wb_u16
vddupq_wb_u32
vddupq_wb_u8
vddupq_x_u16
vddupq_x_n_u16
vddupq_x_u32
vddupq_x_n_u32
vddupq_x_u8
vddupq_x_n_u8
vddupq_x_wb_u16
vddupq_x_wb_u32
vddupq_x_wb_u8
vdupq_m
vdupq_m_n_f16
vdupq_m_n_f32
vdupq_m_n_s16
vdupq_m_n_s32
vdupq_m_n_s8
vdupq_m_n_u16
vdupq_m_n_u32
vdupq_m_n_u8
vdupq_n_f16
vdupq_n_f32
vdupq_n_s16
vdupq_n_s32
vdupq_n_s8
vdupq_n_u16
vdupq_n_u32
vdupq_n_u8
vdupq_x_n_f16
vdupq_x_n_f32
vdupq_x_n_s16
vdupq_x_n_s32
vdupq_x_n_s8
vdupq_x_n_u16
vdupq_x_n_u32
vdupq_x_n_u8
vdwdupq_m
vdwdupq_m_n_u16
vdwdupq_m_n_u32
vdwdupq_m_n_u8
vdwdupq_m_wb_u16
vdwdupq_m_wb_u32
vdwdupq_m_wb_u8
vdwdupq_u16
vdwdupq_n_u16
vdwdupq_u32
vdwdupq_n_u32
vdwdupq_u8
vdwdupq_n_u8
vdwdupq_wb_u16
vdwdupq_wb_u32
vdwdupq_wb_u8
vdwdupq_x_u16
vdwdupq_x_n_u16
vdwdupq_x_u32
vdwdupq_x_n_u32
vdwdupq_x_u8
vdwdupq_x_n_u8
vdwdupq_x_wb_u16
vdwdupq_x_wb_u32
vdwdupq_x_wb_u8
veorq
veorq_f16
veorq_f32
veorq_m
veorq_m_f16
veorq_m_f32
veorq_m_s16
veorq_m_s32
veorq_m_s8
veorq_m_u16
veorq_m_u32
veorq_m_u8
veorq_s16
veorq_s32
veorq_s8
veorq_u16
veorq_u32
veorq_u8
veorq_x
veorq_x_f16
veorq_x_f32
veorq_x_s16
veorq_x_s32
veorq_x_s8
veorq_x_u16
veorq_x_u32
veorq_x_u8
vfmaq
vfmaq_f16
vfmaq_f32
vfmaq_m
vfmaq_m_f16
vfmaq_m_f32
vfmaq_m_n_f16
vfmaq_m_n_f32
vfmaq_n_f16
vfmaq_n_f32
vfmasq_m
vfmasq_m_n_f16
vfmasq_m_n_f32
vfmasq
vfmasq_n_f16
vfmasq_n_f32
vfmsq
vfmsq_f16
vfmsq_f32
vfmsq_m
vfmsq_m_f16
vfmsq_m_f32
vgetq_lane
vgetq_lane_f16
vgetq_lane_f32
vgetq_lane_s16
vgetq_lane_s32
vgetq_lane_s64
vgetq_lane_s8
vgetq_lane_u16
vgetq_lane_u32
vgetq_lane_u64
vgetq_lane_u8
vhaddq_m
vhaddq_m_n_s16
vhaddq_m_n_s32
vhaddq_m_n_s8
vhaddq_m_n_u16
vhaddq_m_n_u32
vhaddq_m_n_u8
vhaddq_m_s16
vhaddq_m_s32
vhaddq_m_s8
vhaddq_m_u16
vhaddq_m_u32
vhaddq_m_u8
vhaddq
vhaddq_n_s16
vhaddq_n_s32
vhaddq_n_s8
vhaddq_n_u16
vhaddq_n_u32
vhaddq_n_u8
vhaddq_s16
vhaddq_s32
vhaddq_s8
vhaddq_u16
vhaddq_u32
vhaddq_u8
vhaddq_x
vhaddq_x_n_s16
vhaddq_x_n_s32
vhaddq_x_n_s8
vhaddq_x_n_u16
vhaddq_x_n_u32
vhaddq_x_n_u8
vhaddq_x_s16
vhaddq_x_s32
vhaddq_x_s8
vhaddq_x_u16
vhaddq_x_u32
vhaddq_x_u8
vhcaddq_rot270_m
vhcaddq_rot270_m_s16
vhcaddq_rot270_m_s32
vhcaddq_rot270_m_s8
vhcaddq_rot270
vhcaddq_rot270_s16
vhcaddq_rot270_s32
vhcaddq_rot270_s8
vhcaddq_rot270_x
vhcaddq_rot270_x_s16
vhcaddq_rot270_x_s32
vhcaddq_rot270_x_s8
vhcaddq_rot90_m
vhcaddq_rot90_m_s16
vhcaddq_rot90_m_s32
vhcaddq_rot90_m_s8
vhcaddq_rot90
vhcaddq_rot90_s16
vhcaddq_rot90_s32
vhcaddq_rot90_s8
vhcaddq_rot90_x
vhcaddq_rot90_x_s16
vhcaddq_rot90_x_s32
vhcaddq_rot90_x_s8
vhsubq_m
vhsubq_m_n_s16
vhsubq_m_n_s32
vhsubq_m_n_s8
vhsubq_m_n_u16
vhsubq_m_n_u32
vhsubq_m_n_u8
vhsubq_m_s16
vhsubq_m_s32
vhsubq_m_s8
vhsubq_m_u16
vhsubq_m_u32
vhsubq_m_u8
vhsubq
vhsubq_n_s16
vhsubq_n_s32
vhsubq_n_s8
vhsubq_n_u16
vhsubq_n_u32
vhsubq_n_u8
vhsubq_s16
vhsubq_s32
vhsubq_s8
vhsubq_u16
vhsubq_u32
vhsubq_u8
vhsubq_x
vhsubq_x_n_s16
vhsubq_x_n_s32
vhsubq_x_n_s8
vhsubq_x_n_u16
vhsubq_x_n_u32
vhsubq_x_n_u8
vhsubq_x_s16
vhsubq_x_s32
vhsubq_x_s8
vhsubq_x_u16
vhsubq_x_u32
vhsubq_x_u8
vidupq_m
vidupq_m_n_u16
vidupq_m_n_u32
vidupq_m_n_u8
vidupq_m_wb_u16
vidupq_m_wb_u32
vidupq_m_wb_u8
vidupq_u16
vidupq_n_u16
vidupq_u32
vidupq_n_u32
vidupq_u8
vidupq_n_u8
vidupq_wb_u16
vidupq_wb_u32
vidupq_wb_u8
vidupq_x_u16
vidupq_x_n_u16
vidupq_x_u32
vidupq_x_n_u32
vidupq_x_u8
vidupq_x_n_u8
vidupq_x_wb_u16
vidupq_x_wb_u32
vidupq_x_wb_u8
viwdupq_m
viwdupq_m_n_u16
viwdupq_m_n_u32
viwdupq_m_n_u8
viwdupq_m_wb_u16
viwdupq_m_wb_u32
viwdupq_m_wb_u8
viwdupq_u16
viwdupq_n_u16
viwdupq_u32
viwdupq_n_u32
viwdupq_u8
viwdupq_n_u8
viwdupq_wb_u16
viwdupq_wb_u32
viwdupq_wb_u8
viwdupq_x_u16
viwdupq_x_n_u16
viwdupq_x_u32
viwdupq_x_n_u32
viwdupq_x_u8
viwdupq_x_n_u8
viwdupq_x_wb_u16
viwdupq_x_wb_u32
viwdupq_x_wb_u8
vld1q
vld1q_f16
vld1q_f32
vld1q_s16
vld1q_s32
vld1q_s8
vld1q_u16
vld1q_u32
vld1q_u8
vld1q_z
vld1q_z_f16
vld1q_z_f32
vld1q_z_s16
vld1q_z_s32
vld1q_z_s8
vld1q_z_u16
vld1q_z_u32
vld1q_z_u8
vld2q
vld2q_f16
vld2q_f32
vld2q_s16
vld2q_s32
vld2q_s8
vld2q_u16
vld2q_u32
vld2q_u8
vld4q
vld4q_f16
vld4q_f32
vld4q_s16
vld4q_s32
vld4q_s8
vld4q_u16
vld4q_u32
vld4q_u8
vldrbq_gather_offset
vldrbq_gather_offset_s16
vldrbq_gather_offset_s32
vldrbq_gather_offset_s8
vldrbq_gather_offset_u16
vldrbq_gather_offset_u32
vldrbq_gather_offset_u8
vldrbq_gather_offset_z
vldrbq_gather_offset_z_s16
vldrbq_gather_offset_z_s32
vldrbq_gather_offset_z_s8
vldrbq_gather_offset_z_u16
vldrbq_gather_offset_z_u32
vldrbq_gather_offset_z_u8
vldrbq_s16
vldrbq_s32
vldrbq_s8
vldrbq_u16
vldrbq_u32
vldrbq_u8
vldrbq_z_s16
vldrbq_z_s32
vldrbq_z_s8
vldrbq_z_u16
vldrbq_z_u32
vldrbq_z_u8
vldrdq_gather_base_s64
vldrdq_gather_base_u64
vldrdq_gather_base_wb_s64
vldrdq_gather_base_wb_u64
vldrdq_gather_base_wb_z_s64
vldrdq_gather_base_wb_z_u64
vldrdq_gather_base_z_s64
vldrdq_gather_base_z_u64
vldrdq_gather_offset
vldrdq_gather_offset_s64
vldrdq_gather_offset_u64
vldrdq_gather_offset_z
vldrdq_gather_offset_z_s64
vldrdq_gather_offset_z_u64
vldrdq_gather_shifted_offset
vldrdq_gather_shifted_offset_s64
vldrdq_gather_shifted_offset_u64
vldrdq_gather_shifted_offset_z
vldrdq_gather_shifted_offset_z_s64
vldrdq_gather_shifted_offset_z_u64
vldrhq_f16
vldrhq_gather_offset
vldrhq_gather_offset_f16
vldrhq_gather_offset_s16
vldrhq_gather_offset_s32
vldrhq_gather_offset_u16
vldrhq_gather_offset_u32
vldrhq_gather_offset_z
vldrhq_gather_offset_z_f16
vldrhq_gather_offset_z_s16
vldrhq_gather_offset_z_s32
vldrhq_gather_offset_z_u16
vldrhq_gather_offset_z_u32
vldrhq_gather_shifted_offset
vldrhq_gather_shifted_offset_f16
vldrhq_gather_shifted_offset_s16
vldrhq_gather_shifted_offset_s32
vldrhq_gather_shifted_offset_u16
vldrhq_gather_shifted_offset_u32
vldrhq_gather_shifted_offset_z
vldrhq_gather_shifted_offset_z_f16
vldrhq_gather_shifted_offset_z_s16
vldrhq_gather_shifted_offset_z_s32
vldrhq_gather_shifted_offset_z_u16
vldrhq_gather_shifted_offset_z_u32
vldrhq_s16
vldrhq_s32
vldrhq_u16
vldrhq_u32
vldrhq_z_f16
vldrhq_z_s16
vldrhq_z_s32
vldrhq_z_u16
vldrhq_z_u32
vldrwq_f32
vldrwq_gather_base_f32
vldrwq_gather_base_s32
vldrwq_gather_base_u32
vldrwq_gather_base_wb_f32
vldrwq_gather_base_wb_s32
vldrwq_gather_base_wb_u32
vldrwq_gather_base_wb_z_f32
vldrwq_gather_base_wb_z_s32
vldrwq_gather_base_wb_z_u32
vldrwq_gather_base_z_f32
vldrwq_gather_base_z_s32
vldrwq_gather_base_z_u32
vldrwq_gather_offset
vldrwq_gather_offset_f32
vldrwq_gather_offset_s32
vldrwq_gather_offset_u32
vldrwq_gather_offset_z
vldrwq_gather_offset_z_f32
vldrwq_gather_offset_z_s32
vldrwq_gather_offset_z_u32
vldrwq_gather_shifted_offset
vldrwq_gather_shifted_offset_f32
vldrwq_gather_shifted_offset_s32
vldrwq_gather_shifted_offset_u32
vldrwq_gather_shifted_offset_z
vldrwq_gather_shifted_offset_z_f32
vldrwq_gather_shifted_offset_z_s32
vldrwq_gather_shifted_offset_z_u32
vldrwq_s32
vldrwq_u32
vldrwq_z_f32
vldrwq_z_s32
vldrwq_z_u32
vmaxaq_m
vmaxaq_m_s16
vmaxaq_m_s32
vmaxaq_m_s8
vmaxaq
vmaxaq_s16
vmaxaq_s32
vmaxaq_s8
vmaxavq_p
vmaxavq_p_s16
vmaxavq_p_s32
vmaxavq_p_s8
vmaxavq
vmaxavq_s16
vmaxavq_s32
vmaxavq_s8
vmaxnmaq
vmaxnmaq_f16
vmaxnmaq_f32
vmaxnmaq_m
vmaxnmaq_m_f16
vmaxnmaq_m_f32
vmaxnmavq
vmaxnmavq_f16
vmaxnmavq_f32
vmaxnmavq_p
vmaxnmavq_p_f16
vmaxnmavq_p_f32
vmaxnmq
vmaxnmq_f16
vmaxnmq_f32
vmaxnmq_m
vmaxnmq_m_f16
vmaxnmq_m_f32
vmaxnmq_x
vmaxnmq_x_f16
vmaxnmq_x_f32
vmaxnmvq
vmaxnmvq_f16
vmaxnmvq_f32
vmaxnmvq_p
vmaxnmvq_p_f16
vmaxnmvq_p_f32
vmaxq_m
vmaxq_m_s16
vmaxq_m_s32
vmaxq_m_s8
vmaxq_m_u16
vmaxq_m_u32
vmaxq_m_u8
vmaxq
vmaxq_s16
vmaxq_s32
vmaxq_s8
vmaxq_u16
vmaxq_u32
vmaxq_u8
vmaxq_x
vmaxq_x_s16
vmaxq_x_s32
vmaxq_x_s8
vmaxq_x_u16
vmaxq_x_u32
vmaxq_x_u8
vmaxvq_p
vmaxvq_p_s16
vmaxvq_p_s32
vmaxvq_p_s8
vmaxvq_p_u16
vmaxvq_p_u32
vmaxvq_p_u8
vmaxvq
vmaxvq_s16
vmaxvq_s32
vmaxvq_s8
vmaxvq_u16
vmaxvq_u32
vmaxvq_u8
vminaq_m
vminaq_m_s16
vminaq_m_s32
vminaq_m_s8
vminaq
vminaq_s16
vminaq_s32
vminaq_s8
vminavq_p
vminavq_p_s16
vminavq_p_s32
vminavq_p_s8
vminavq
vminavq_s16
vminavq_s32
vminavq_s8
vminnmaq
vminnmaq_f16
vminnmaq_f32
vminnmaq_m
vminnmaq_m_f16
vminnmaq_m_f32
vminnmavq
vminnmavq_f16
vminnmavq_f32
vminnmavq_p
vminnmavq_p_f16
vminnmavq_p_f32
vminnmq
vminnmq_f16
vminnmq_f32
vminnmq_m
vminnmq_m_f16
vminnmq_m_f32
vminnmq_x
vminnmq_x_f16
vminnmq_x_f32
vminnmvq
vminnmvq_f16
vminnmvq_f32
vminnmvq_p
vminnmvq_p_f16
vminnmvq_p_f32
vminq_m
vminq_m_s16
vminq_m_s32
vminq_m_s8
vminq_m_u16
vminq_m_u32
vminq_m_u8
vminq
vminq_s16
vminq_s32
vminq_s8
vminq_u16
vminq_u32
vminq_u8
vminq_x
vminq_x_s16
vminq_x_s32
vminq_x_s8
vminq_x_u16
vminq_x_u32
vminq_x_u8
vminvq_p
vminvq_p_s16
vminvq_p_s32
vminvq_p_s8
vminvq_p_u16
vminvq_p_u32
vminvq_p_u8
vminvq
vminvq_s16
vminvq_s32
vminvq_s8
vminvq_u16
vminvq_u32
vminvq_u8
vmladavaq_p
vmladavaq_p_s16
vmladavaq_p_s32
vmladavaq_p_s8
vmladavaq_p_u16
vmladavaq_p_u32
vmladavaq_p_u8
vmladavaq
vmladavaq_s16
vmladavaq_s32
vmladavaq_s8
vmladavaq_u16
vmladavaq_u32
vmladavaq_u8
vmladavaxq_p
vmladavaxq_p_s16
vmladavaxq_p_s32
vmladavaxq_p_s8
vmladavaxq
vmladavaxq_s16
vmladavaxq_s32
vmladavaxq_s8
vmladavq_p
vmladavq_p_s16
vmladavq_p_s32
vmladavq_p_s8
vmladavq_p_u16
vmladavq_p_u32
vmladavq_p_u8
vmladavq
vmladavq_s16
vmladavq_s32
vmladavq_s8
vmladavq_u16
vmladavq_u32
vmladavq_u8
vmladavxq_p
vmladavxq_p_s16
vmladavxq_p_s32
vmladavxq_p_s8
vmladavxq
vmladavxq_s16
vmladavxq_s32
vmladavxq_s8
vmlaldavaq_p
vmlaldavaq_p_s16
vmlaldavaq_p_s32
vmlaldavaq_p_u16
vmlaldavaq_p_u32
vmlaldavaq
vmlaldavaq_s16
vmlaldavaq_s32
vmlaldavaq_u16
vmlaldavaq_u32
vmlaldavaxq_p
vmlaldavaxq_p_s16
vmlaldavaxq_p_s32
vmlaldavaxq
vmlaldavaxq_s16
vmlaldavaxq_s32
vmlaldavq_p
vmlaldavq_p_s16
vmlaldavq_p_s32
vmlaldavq_p_u16
vmlaldavq_p_u32
vmlaldavq
vmlaldavq_s16
vmlaldavq_s32
vmlaldavq_u16
vmlaldavq_u32
vmlaldavxq_p
vmlaldavxq_p_s16
vmlaldavxq_p_s32
vmlaldavxq
vmlaldavxq_s16
vmlaldavxq_s32
vmlaq_m
vmlaq_m_n_s16
vmlaq_m_n_s32
vmlaq_m_n_s8
vmlaq_m_n_u16
vmlaq_m_n_u32
vmlaq_m_n_u8
vmlaq
vmlaq_n_s16
vmlaq_n_s32
vmlaq_n_s8
vmlaq_n_u16
vmlaq_n_u32
vmlaq_n_u8
vmlasq_m
vmlasq_m_n_s16
vmlasq_m_n_s32
vmlasq_m_n_s8
vmlasq_m_n_u16
vmlasq_m_n_u32
vmlasq_m_n_u8
vmlasq
vmlasq_n_s16
vmlasq_n_s32
vmlasq_n_s8
vmlasq_n_u16
vmlasq_n_u32
vmlasq_n_u8
vmlsdavaq_p
vmlsdavaq_p_s16
vmlsdavaq_p_s32
vmlsdavaq_p_s8
vmlsdavaq
vmlsdavaq_s16
vmlsdavaq_s32
vmlsdavaq_s8
vmlsdavaxq_p
vmlsdavaxq_p_s16
vmlsdavaxq_p_s32
vmlsdavaxq_p_s8
vmlsdavaxq
vmlsdavaxq_s16
vmlsdavaxq_s32
vmlsdavaxq_s8
vmlsdavq_p
vmlsdavq_p_s16
vmlsdavq_p_s32
vmlsdavq_p_s8
vmlsdavq
vmlsdavq_s16
vmlsdavq_s32
vmlsdavq_s8
vmlsdavxq_p
vmlsdavxq_p_s16
vmlsdavxq_p_s32
vmlsdavxq_p_s8
vmlsdavxq
vmlsdavxq_s16
vmlsdavxq_s32
vmlsdavxq_s8
vmlsldavaq_p
vmlsldavaq_p_s16
vmlsldavaq_p_s32
vmlsldavaq
vmlsldavaq_s16
vmlsldavaq_s32
vmlsldavaxq_p
vmlsldavaxq_p_s16
vmlsldavaxq_p_s32
vmlsldavaxq
vmlsldavaxq_s16
vmlsldavaxq_s32
vmlsldavq_p
vmlsldavq_p_s16
vmlsldavq_p_s32
vmlsldavq
vmlsldavq_s16
vmlsldavq_s32
vmlsldavxq_p
vmlsldavxq_p_s16
vmlsldavxq_p_s32
vmlsldavxq
vmlsldavxq_s16
vmlsldavxq_s32
vmovlbq_m
vmovlbq_m_s16
vmovlbq_m_s8
vmovlbq_m_u16
vmovlbq_m_u8
vmovlbq
vmovlbq_s16
vmovlbq_s8
vmovlbq_u16
vmovlbq_u8
vmovlbq_x
vmovlbq_x_s16
vmovlbq_x_s8
vmovlbq_x_u16
vmovlbq_x_u8
vmovltq_m
vmovltq_m_s16
vmovltq_m_s8
vmovltq_m_u16
vmovltq_m_u8
vmovltq
vmovltq_s16
vmovltq_s8
vmovltq_u16
vmovltq_u8
vmovltq_x
vmovltq_x_s16
vmovltq_x_s8
vmovltq_x_u16
vmovltq_x_u8
vmovnbq_m
vmovnbq_m_s16
vmovnbq_m_s32
vmovnbq_m_u16
vmovnbq_m_u32
vmovnbq
vmovnbq_s16
vmovnbq_s32
vmovnbq_u16
vmovnbq_u32
vmovntq_m
vmovntq_m_s16
vmovntq_m_s32
vmovntq_m_u16
vmovntq_m_u32
vmovntq
vmovntq_s16
vmovntq_s32
vmovntq_u16
vmovntq_u32
vmulhq_m
vmulhq_m_s16
vmulhq_m_s32
vmulhq_m_s8
vmulhq_m_u16
vmulhq_m_u32
vmulhq_m_u8
vmulhq
vmulhq_s16
vmulhq_s32
vmulhq_s8
vmulhq_u16
vmulhq_u32
vmulhq_u8
vmulhq_x
vmulhq_x_s16
vmulhq_x_s32
vmulhq_x_s8
vmulhq_x_u16
vmulhq_x_u32
vmulhq_x_u8
vmullbq_int_m
vmullbq_int_m_s16
vmullbq_int_m_s32
vmullbq_int_m_s8
vmullbq_int_m_u16
vmullbq_int_m_u32
vmullbq_int_m_u8
vmullbq_int
vmullbq_int_s16
vmullbq_int_s32
vmullbq_int_s8
vmullbq_int_u16
vmullbq_int_u32
vmullbq_int_u8
vmullbq_int_x
vmullbq_int_x_s16
vmullbq_int_x_s32
vmullbq_int_x_s8
vmullbq_int_x_u16
vmullbq_int_x_u32
vmullbq_int_x_u8
vmullbq_poly_m
vmullbq_poly_m_p16
vmullbq_poly_m_p8
vmullbq_poly
vmullbq_poly_p16
vmullbq_poly_p8
vmullbq_poly_x
vmullbq_poly_x_p16
vmullbq_poly_x_p8
vmulltq_int_m
vmulltq_int_m_s16
vmulltq_int_m_s32
vmulltq_int_m_s8
vmulltq_int_m_u16
vmulltq_int_m_u32
vmulltq_int_m_u8
vmulltq_int
vmulltq_int_s16
vmulltq_int_s32
vmulltq_int_s8
vmulltq_int_u16
vmulltq_int_u32
vmulltq_int_u8
vmulltq_int_x
vmulltq_int_x_s16
vmulltq_int_x_s32
vmulltq_int_x_s8
vmulltq_int_x_u16
vmulltq_int_x_u32
vmulltq_int_x_u8
vmulltq_poly_m
vmulltq_poly_m_p16
vmulltq_poly_m_p8
vmulltq_poly
vmulltq_poly_p16
vmulltq_poly_p8
vmulltq_poly_x
vmulltq_poly_x_p16
vmulltq_poly_x_p8
vmulq
vmulq_f16
vmulq_f32
vmulq_m
vmulq_m_f16
vmulq_m_f32
vmulq_m_n_f16
vmulq_m_n_f32
vmulq_m_n_s16
vmulq_m_n_s32
vmulq_m_n_s8
vmulq_m_n_u16
vmulq_m_n_u32
vmulq_m_n_u8
vmulq_m_s16
vmulq_m_s32
vmulq_m_s8
vmulq_m_u16
vmulq_m_u32
vmulq_m_u8
vmulq_n_f16
vmulq_n_f32
vmulq_n_s16
vmulq_n_s32
vmulq_n_s8
vmulq_n_u16
vmulq_n_u32
vmulq_n_u8
vmulq_s16
vmulq_s32
vmulq_s8
vmulq_u16
vmulq_u32
vmulq_u8
vmulq_x
vmulq_x_f16
vmulq_x_f32
vmulq_x_n_f16
vmulq_x_n_f32
vmulq_x_n_s16
vmulq_x_n_s32
vmulq_x_n_s8
vmulq_x_n_u16
vmulq_x_n_u32
vmulq_x_n_u8
vmulq_x_s16
vmulq_x_s32
vmulq_x_s8
vmulq_x_u16
vmulq_x_u32
vmulq_x_u8
vmvnq_m
vmvnq_m_n_s16
vmvnq_m_n_s32
vmvnq_m_n_u16
vmvnq_m_n_u32
vmvnq_m_s16
vmvnq_m_s32
vmvnq_m_s8
vmvnq_m_u16
vmvnq_m_u32
vmvnq_m_u8
vmvnq_n_s16
vmvnq_n_s32
vmvnq_n_u16
vmvnq_n_u32
vmvnq
vmvnq_s16
vmvnq_s32
vmvnq_s8
vmvnq_u16
vmvnq_u32
vmvnq_u8
vmvnq_x_n_s16
vmvnq_x_n_s32
vmvnq_x_n_u16
vmvnq_x_n_u32
vmvnq_x
vmvnq_x_s16
vmvnq_x_s32
vmvnq_x_s8
vmvnq_x_u16
vmvnq_x_u32
vmvnq_x_u8
vnegq
vnegq_f16
vnegq_f32
vnegq_m
vnegq_m_f16
vnegq_m_f32
vnegq_m_s16
vnegq_m_s32
vnegq_m_s8
vnegq_s16
vnegq_s32
vnegq_s8
vnegq_x
vnegq_x_f16
vnegq_x_f32
vnegq_x_s16
vnegq_x_s32
vnegq_x_s8
vornq
vornq_f16
vornq_f32
vornq_m
vornq_m_f16
vornq_m_f32
vornq_m_s16
vornq_m_s32
vornq_m_s8
vornq_m_u16
vornq_m_u32
vornq_m_u8
vornq_s16
vornq_s32
vornq_s8
vornq_u16
vornq_u32
vornq_u8
vornq_x
vornq_x_f16
vornq_x_f32
vornq_x_s16
vornq_x_s32
vornq_x_s8
vornq_x_u16
vornq_x_u32
vornq_x_u8
vorrq
vorrq_f16
vorrq_f32
vorrq_m
vorrq_m_f16
vorrq_m_f32
vorrq_m_n
vorrq_m_n_s16
vorrq_m_n_s32
vorrq_m_n_u16
vorrq_m_n_u32
vorrq_m_s16
vorrq_m_s32
vorrq_m_s8
vorrq_m_u16
vorrq_m_u32
vorrq_m_u8
vorrq_n_s16
vorrq_n_s32
vorrq_n_u16
vorrq_n_u32
vorrq_s16
vorrq_s32
vorrq_s8
vorrq_u16
vorrq_u32
vorrq_u8
vorrq_x
vorrq_x_f16
vorrq_x_f32
vorrq_x_s16
vorrq_x_s32
vorrq_x_s8
vorrq_x_u16
vorrq_x_u32
vorrq_x_u8
vpnot
vpselq
vpselq_f16
vpselq_f32
vpselq_s16
vpselq_s32
vpselq_s64
vpselq_s8
vpselq_u16
vpselq_u32
vpselq_u64
vpselq_u8
vqabsq_m
vqabsq_m_s16
vqabsq_m_s32
vqabsq_m_s8
vqabsq
vqabsq_s16
vqabsq_s32
vqabsq_s8
vqaddq_m
vqaddq_m_n_s16
vqaddq_m_n_s32
vqaddq_m_n_s8
vqaddq_m_n_u16
vqaddq_m_n_u32
vqaddq_m_n_u8
vqaddq_m_s16
vqaddq_m_s32
vqaddq_m_s8
vqaddq_m_u16
vqaddq_m_u32
vqaddq_m_u8
vqaddq
vqaddq_n_s16
vqaddq_n_s32
vqaddq_n_s8
vqaddq_n_u16
vqaddq_n_u32
vqaddq_n_u8
vqaddq_s16
vqaddq_s32
vqaddq_s8
vqaddq_u16
vqaddq_u32
vqaddq_u8
vqdmladhq_m
vqdmladhq_m_s16
vqdmladhq_m_s32
vqdmladhq_m_s8
vqdmladhq
vqdmladhq_s16
vqdmladhq_s32
vqdmladhq_s8
vqdmladhxq_m
vqdmladhxq_m_s16
vqdmladhxq_m_s32
vqdmladhxq_m_s8
vqdmladhxq
vqdmladhxq_s16
vqdmladhxq_s32
vqdmladhxq_s8
vqdmlahq_m
vqdmlahq_m_n_s16
vqdmlahq_m_n_s32
vqdmlahq_m_n_s8
vqdmlahq
vqdmlahq_n_s16
vqdmlahq_n_s32
vqdmlahq_n_s8
vqdmlashq_m
vqdmlashq_m_n_s16
vqdmlashq_m_n_s32
vqdmlashq_m_n_s8
vqdmlashq
vqdmlashq_n_s16
vqdmlashq_n_s32
vqdmlashq_n_s8
vqdmlsdhq_m
vqdmlsdhq_m_s16
vqdmlsdhq_m_s32
vqdmlsdhq_m_s8
vqdmlsdhq
vqdmlsdhq_s16
vqdmlsdhq_s32
vqdmlsdhq_s8
vqdmlsdhxq_m
vqdmlsdhxq_m_s16
vqdmlsdhxq_m_s32
vqdmlsdhxq_m_s8
vqdmlsdhxq
vqdmlsdhxq_s16
vqdmlsdhxq_s32
vqdmlsdhxq_s8
vqdmulhq_m
vqdmulhq_m_n_s16
vqdmulhq_m_n_s32
vqdmulhq_m_n_s8
vqdmulhq_m_s16
vqdmulhq_m_s32
vqdmulhq_m_s8
vqdmulhq
vqdmulhq_n_s16
vqdmulhq_n_s32
vqdmulhq_n_s8
vqdmulhq_s16
vqdmulhq_s32
vqdmulhq_s8
vqdmullbq_m
vqdmullbq_m_n_s16
vqdmullbq_m_n_s32
vqdmullbq_m_s16
vqdmullbq_m_s32
vqdmullbq
vqdmullbq_n_s16
vqdmullbq_n_s32
vqdmullbq_s16
vqdmullbq_s32
vqdmulltq_m
vqdmulltq_m_n_s16
vqdmulltq_m_n_s32
vqdmulltq_m_s16
vqdmulltq_m_s32
vqdmulltq
vqdmulltq_n_s16
vqdmulltq_n_s32
vqdmulltq_s16
vqdmulltq_s32
vqmovnbq_m
vqmovnbq_m_s16
vqmovnbq_m_s32
vqmovnbq_m_u16
vqmovnbq_m_u32
vqmovnbq
vqmovnbq_s16
vqmovnbq_s32
vqmovnbq_u16
vqmovnbq_u32
vqmovntq_m
vqmovntq_m_s16
vqmovntq_m_s32
vqmovntq_m_u16
vqmovntq_m_u32
vqmovntq
vqmovntq_s16
vqmovntq_s32
vqmovntq_u16
vqmovntq_u32
vqmovunbq_m
vqmovunbq_m_s16
vqmovunbq_m_s32
vqmovunbq
vqmovunbq_s16
vqmovunbq_s32
vqmovuntq_m
vqmovuntq_m_s16
vqmovuntq_m_s32
vqmovuntq
vqmovuntq_s16
vqmovuntq_s32
vqnegq_m
vqnegq_m_s16
vqnegq_m_s32
vqnegq_m_s8
vqnegq
vqnegq_s16
vqnegq_s32
vqnegq_s8
vqrdmladhq_m
vqrdmladhq_m_s16
vqrdmladhq_m_s32
vqrdmladhq_m_s8
vqrdmladhq
vqrdmladhq_s16
vqrdmladhq_s32
vqrdmladhq_s8
vqrdmladhxq_m
vqrdmladhxq_m_s16
vqrdmladhxq_m_s32
vqrdmladhxq_m_s8
vqrdmladhxq
vqrdmladhxq_s16
vqrdmladhxq_s32
vqrdmladhxq_s8
vqrdmlahq_m
vqrdmlahq_m_n_s16
vqrdmlahq_m_n_s32
vqrdmlahq_m_n_s8
vqrdmlahq
vqrdmlahq_n_s16
vqrdmlahq_n_s32
vqrdmlahq_n_s8
vqrdmlashq_m
vqrdmlashq_m_n_s16
vqrdmlashq_m_n_s32
vqrdmlashq_m_n_s8
vqrdmlashq
vqrdmlashq_n_s16
vqrdmlashq_n_s32
vqrdmlashq_n_s8
vqrdmlsdhq_m
vqrdmlsdhq_m_s16
vqrdmlsdhq_m_s32
vqrdmlsdhq_m_s8
vqrdmlsdhq
vqrdmlsdhq_s16
vqrdmlsdhq_s32
vqrdmlsdhq_s8
vqrdmlsdhxq_m
vqrdmlsdhxq_m_s16
vqrdmlsdhxq_m_s32
vqrdmlsdhxq_m_s8
vqrdmlsdhxq
vqrdmlsdhxq_s16
vqrdmlsdhxq_s32
vqrdmlsdhxq_s8
vqrdmulhq_m
vqrdmulhq_m_n_s16
vqrdmulhq_m_n_s32
vqrdmulhq_m_n_s8
vqrdmulhq_m_s16
vqrdmulhq_m_s32
vqrdmulhq_m_s8
vqrdmulhq
vqrdmulhq_n_s16
vqrdmulhq_n_s32
vqrdmulhq_n_s8
vqrdmulhq_s16
vqrdmulhq_s32
vqrdmulhq_s8
vqrshlq_m_n
vqrshlq_m_n_s16
vqrshlq_m_n_s32
vqrshlq_m_n_s8
vqrshlq_m_n_u16
vqrshlq_m_n_u32
vqrshlq_m_n_u8
vqrshlq_m
vqrshlq_m_s16
vqrshlq_m_s32
vqrshlq_m_s8
vqrshlq_m_u16
vqrshlq_m_u32
vqrshlq_m_u8
vqrshlq
vqrshlq_n_s16
vqrshlq_n_s32
vqrshlq_n_s8
vqrshlq_n_u16
vqrshlq_n_u32
vqrshlq_n_u8
vqrshlq_s16
vqrshlq_s32
vqrshlq_s8
vqrshlq_u16
vqrshlq_u32
vqrshlq_u8
vqrshrnbq_m
vqrshrnbq_m_n_s16
vqrshrnbq_m_n_s32
vqrshrnbq_m_n_u16
vqrshrnbq_m_n_u32
vqrshrnbq
vqrshrnbq_n_s16
vqrshrnbq_n_s32
vqrshrnbq_n_u16
vqrshrnbq_n_u32
vqrshrntq_m
vqrshrntq_m_n_s16
vqrshrntq_m_n_s32
vqrshrntq_m_n_u16
vqrshrntq_m_n_u32
vqrshrntq
vqrshrntq_n_s16
vqrshrntq_n_s32
vqrshrntq_n_u16
vqrshrntq_n_u32
vqrshrunbq_m
vqrshrunbq_m_n_s16
vqrshrunbq_m_n_s32
vqrshrunbq
vqrshrunbq_n_s16
vqrshrunbq_n_s32
vqrshruntq_m
vqrshruntq_m_n_s16
vqrshruntq_m_n_s32
vqrshruntq
vqrshruntq_n_s16
vqrshruntq_n_s32
vqshlq_m_n
vqshlq_m_n_s16
vqshlq_m_n_s32
vqshlq_m_n_s8
vqshlq_m_n_u16
vqshlq_m_n_u32
vqshlq_m_n_u8
vqshlq_m_r
vqshlq_m_r_s16
vqshlq_m_r_s32
vqshlq_m_r_s8
vqshlq_m_r_u16
vqshlq_m_r_u32
vqshlq_m_r_u8
vqshlq_m
vqshlq_m_s16
vqshlq_m_s32
vqshlq_m_s8
vqshlq_m_u16
vqshlq_m_u32
vqshlq_m_u8
vqshlq_n
vqshlq_n_s16
vqshlq_n_s32
vqshlq_n_s8
vqshlq_n_u16
vqshlq_n_u32
vqshlq_n_u8
vqshlq_r
vqshlq_r_s16
vqshlq_r_s32
vqshlq_r_s8
vqshlq_r_u16
vqshlq_r_u32
vqshlq_r_u8
vqshlq
vqshlq_s16
vqshlq_s32
vqshlq_s8
vqshlq_u16
vqshlq_u32
vqshlq_u8
vqshluq_m
vqshluq_m_n_s16
vqshluq_m_n_s32
vqshluq_m_n_s8
vqshluq
vqshluq_n_s16
vqshluq_n_s32
vqshluq_n_s8
vqshrnbq_m
vqshrnbq_m_n_s16
vqshrnbq_m_n_s32
vqshrnbq_m_n_u16
vqshrnbq_m_n_u32
vqshrnbq
vqshrnbq_n_s16
vqshrnbq_n_s32
vqshrnbq_n_u16
vqshrnbq_n_u32
vqshrntq_m
vqshrntq_m_n_s16
vqshrntq_m_n_s32
vqshrntq_m_n_u16
vqshrntq_m_n_u32
vqshrntq
vqshrntq_n_s16
vqshrntq_n_s32
vqshrntq_n_u16
vqshrntq_n_u32
vqshrunbq_m
vqshrunbq_m_n_s16
vqshrunbq_m_n_s32
vqshrunbq
vqshrunbq_n_s16
vqshrunbq_n_s32
vqshruntq_m
vqshruntq_m_n_s16
vqshruntq_m_n_s32
vqshruntq
vqshruntq_n_s16
vqshruntq_n_s32
vqsubq_m
vqsubq_m_n_s16
vqsubq_m_n_s32
vqsubq_m_n_s8
vqsubq_m_n_u16
vqsubq_m_n_u32
vqsubq_m_n_u8
vqsubq_m_s16
vqsubq_m_s32
vqsubq_m_s8
vqsubq_m_u16
vqsubq_m_u32
vqsubq_m_u8
vqsubq
vqsubq_n_s16
vqsubq_n_s32
vqsubq_n_s8
vqsubq_n_u16
vqsubq_n_u32
vqsubq_n_u8
vqsubq_s16
vqsubq_s32
vqsubq_s8
vqsubq_u16
vqsubq_u32
vqsubq_u8
vreinterpretq_f16
vreinterpretq_f16_f32
vreinterpretq_f16_s16
vreinterpretq_f16_s32
vreinterpretq_f16_s64
vreinterpretq_f16_s8
vreinterpretq_f16_u16
vreinterpretq_f16_u32
vreinterpretq_f16_u64
vreinterpretq_f16_u8
vreinterpretq_f32
vreinterpretq_f32_f16
vreinterpretq_f32_s16
vreinterpretq_f32_s32
vreinterpretq_f32_s64
vreinterpretq_f32_s8
vreinterpretq_f32_u16
vreinterpretq_f32_u32
vreinterpretq_f32_u64
vreinterpretq_f32_u8
vreinterpretq_s16
vreinterpretq_s16_f16
vreinterpretq_s16_f32
vreinterpretq_s16_s32
vreinterpretq_s16_s64
vreinterpretq_s16_s8
vreinterpretq_s16_u16
vreinterpretq_s16_u32
vreinterpretq_s16_u64
vreinterpretq_s16_u8
vreinterpretq_s32
vreinterpretq_s32_f16
vreinterpretq_s32_f32
vreinterpretq_s32_s16
vreinterpretq_s32_s64
vreinterpretq_s32_s8
vreinterpretq_s32_u16
vreinterpretq_s32_u32
vreinterpretq_s32_u64
vreinterpretq_s32_u8
vreinterpretq_s64
vreinterpretq_s64_f16
vreinterpretq_s64_f32
vreinterpretq_s64_s16
vreinterpretq_s64_s32
vreinterpretq_s64_s8
vreinterpretq_s64_u16
vreinterpretq_s64_u32
vreinterpretq_s64_u64
vreinterpretq_s64_u8
vreinterpretq_s8
vreinterpretq_s8_f16
vreinterpretq_s8_f32
vreinterpretq_s8_s16
vreinterpretq_s8_s32
vreinterpretq_s8_s64
vreinterpretq_s8_u16
vreinterpretq_s8_u32
vreinterpretq_s8_u64
vreinterpretq_s8_u8
vreinterpretq_u16
vreinterpretq_u16_f16
vreinterpretq_u16_f32
vreinterpretq_u16_s16
vreinterpretq_u16_s32
vreinterpretq_u16_s64
vreinterpretq_u16_s8
vreinterpretq_u16_u32
vreinterpretq_u16_u64
vreinterpretq_u16_u8
vreinterpretq_u32
vreinterpretq_u32_f16
vreinterpretq_u32_f32
vreinterpretq_u32_s16
vreinterpretq_u32_s32
vreinterpretq_u32_s64
vreinterpretq_u32_s8
vreinterpretq_u32_u16
vreinterpretq_u32_u64
vreinterpretq_u32_u8
vreinterpretq_u64
vreinterpretq_u64_f16
vreinterpretq_u64_f32
vreinterpretq_u64_s16
vreinterpretq_u64_s32
vreinterpretq_u64_s64
vreinterpretq_u64_s8
vreinterpretq_u64_u16
vreinterpretq_u64_u32
vreinterpretq_u64_u8
vreinterpretq_u8
vreinterpretq_u8_f16
vreinterpretq_u8_f32
vreinterpretq_u8_s16
vreinterpretq_u8_s32
vreinterpretq_u8_s64
vreinterpretq_u8_s8
vreinterpretq_u8_u16
vreinterpretq_u8_u32
vreinterpretq_u8_u64
vrev16q_m
vrev16q_m_s8
vrev16q_m_u8
vrev16q
vrev16q_s8
vrev16q_u8
vrev16q_x
vrev16q_x_s8
vrev16q_x_u8
vrev32q
vrev32q_f16
vrev32q_m
vrev32q_m_f16
vrev32q_m_s16
vrev32q_m_s8
vrev32q_m_u16
vrev32q_m_u8
vrev32q_s16
vrev32q_s8
vrev32q_u16
vrev32q_u8
vrev32q_x
vrev32q_x_f16
vrev32q_x_s16
vrev32q_x_s8
vrev32q_x_u16
vrev32q_x_u8
vrev64q
vrev64q_f16
vrev64q_f32
vrev64q_m
vrev64q_m_f16
vrev64q_m_f32
vrev64q_m_s16
vrev64q_m_s32
vrev64q_m_s8
vrev64q_m_u16
vrev64q_m_u32
vrev64q_m_u8
vrev64q_s16
vrev64q_s32
vrev64q_s8
vrev64q_u16
vrev64q_u32
vrev64q_u8
vrev64q_x
vrev64q_x_f16
vrev64q_x_f32
vrev64q_x_s16
vrev64q_x_s32
vrev64q_x_s8
vrev64q_x_u16
vrev64q_x_u32
vrev64q_x_u8
vrhaddq_m
vrhaddq_m_s16
vrhaddq_m_s32
vrhaddq_m_s8
vrhaddq_m_u16
vrhaddq_m_u32
vrhaddq_m_u8
vrhaddq
vrhaddq_s16
vrhaddq_s32
vrhaddq_s8
vrhaddq_u16
vrhaddq_u32
vrhaddq_u8
vrhaddq_x
vrhaddq_x_s16
vrhaddq_x_s32
vrhaddq_x_s8
vrhaddq_x_u16
vrhaddq_x_u32
vrhaddq_x_u8
vrmlaldavhaq_p
vrmlaldavhaq_p_s32
vrmlaldavhaq_p_u32
vrmlaldavhaq
vrmlaldavhaq_s32
vrmlaldavhaq_u32
vrmlaldavhaxq_p
vrmlaldavhaxq_p_s32
vrmlaldavhaxq
vrmlaldavhaxq_s32
vrmlaldavhq_p
vrmlaldavhq_p_s32
vrmlaldavhq_p_u32
vrmlaldavhq
vrmlaldavhq_s32
vrmlaldavhq_u32
vrmlaldavhxq_p
vrmlaldavhxq_p_s32
vrmlaldavhxq
vrmlaldavhxq_s32
vrmlsldavhaq_p
vrmlsldavhaq_p_s32
vrmlsldavhaq
vrmlsldavhaq_s32
vrmlsldavhaxq_p
vrmlsldavhaxq_p_s32
vrmlsldavhaxq
vrmlsldavhaxq_s32
vrmlsldavhq_p
vrmlsldavhq_p_s32
vrmlsldavhq
vrmlsldavhq_s32
vrmlsldavhxq_p
vrmlsldavhxq_p_s32
vrmlsldavhxq
vrmlsldavhxq_s32
vrmulhq_m
vrmulhq_m_s16
vrmulhq_m_s32
vrmulhq_m_s8
vrmulhq_m_u16
vrmulhq_m_u32
vrmulhq_m_u8
vrmulhq
vrmulhq_s16
vrmulhq_s32
vrmulhq_s8
vrmulhq_u16
vrmulhq_u32
vrmulhq_u8
vrmulhq_x
vrmulhq_x_s16
vrmulhq_x_s32
vrmulhq_x_s8
vrmulhq_x_u16
vrmulhq_x_u32
vrmulhq_x_u8
vrndaq
vrndaq_f16
vrndaq_f32
vrndaq_m
vrndaq_m_f16
vrndaq_m_f32
vrndaq_x
vrndaq_x_f16
vrndaq_x_f32
vrndmq
vrndmq_f16
vrndmq_f32
vrndmq_m
vrndmq_m_f16
vrndmq_m_f32
vrndmq_x
vrndmq_x_f16
vrndmq_x_f32
vrndnq
vrndnq_f16
vrndnq_f32
vrndnq_m
vrndnq_m_f16
vrndnq_m_f32
vrndnq_x
vrndnq_x_f16
vrndnq_x_f32
vrndpq
vrndpq_f16
vrndpq_f32
vrndpq_m
vrndpq_m_f16
vrndpq_m_f32
vrndpq_x
vrndpq_x_f16
vrndpq_x_f32
vrndq
vrndq_f16
vrndq_f32
vrndq_m
vrndq_m_f16
vrndq_m_f32
vrndq_x
vrndq_x_f16
vrndq_x_f32
vrndxq
vrndxq_f16
vrndxq_f32
vrndxq_m
vrndxq_m_f16
vrndxq_m_f32
vrndxq_x
vrndxq_x_f16
vrndxq_x_f32
vrshlq_m_n
vrshlq_m_n_s16
vrshlq_m_n_s32
vrshlq_m_n_s8
vrshlq_m_n_u16
vrshlq_m_n_u32
vrshlq_m_n_u8
vrshlq_m
vrshlq_m_s16
vrshlq_m_s32
vrshlq_m_s8
vrshlq_m_u16
vrshlq_m_u32
vrshlq_m_u8
vrshlq
vrshlq_n_s16
vrshlq_n_s32
vrshlq_n_s8
vrshlq_n_u16
vrshlq_n_u32
vrshlq_n_u8
vrshlq_s16
vrshlq_s32
vrshlq_s8
vrshlq_u16
vrshlq_u32
vrshlq_u8
vrshlq_x
vrshlq_x_s16
vrshlq_x_s32
vrshlq_x_s8
vrshlq_x_u16
vrshlq_x_u32
vrshlq_x_u8
vrshrnbq_m
vrshrnbq_m_n_s16
vrshrnbq_m_n_s32
vrshrnbq_m_n_u16
vrshrnbq_m_n_u32
vrshrnbq
vrshrnbq_n_s16
vrshrnbq_n_s32
vrshrnbq_n_u16
vrshrnbq_n_u32
vrshrntq_m
vrshrntq_m_n_s16
vrshrntq_m_n_s32
vrshrntq_m_n_u16
vrshrntq_m_n_u32
vrshrntq
vrshrntq_n_s16
vrshrntq_n_s32
vrshrntq_n_u16
vrshrntq_n_u32
vrshrq_m
vrshrq_m_n_s16
vrshrq_m_n_s32
vrshrq_m_n_s8
vrshrq_m_n_u16
vrshrq_m_n_u32
vrshrq_m_n_u8
vrshrq
vrshrq_n_s16
vrshrq_n_s32
vrshrq_n_s8
vrshrq_n_u16
vrshrq_n_u32
vrshrq_n_u8
vrshrq_x
vrshrq_x_n_s16
vrshrq_x_n_s32
vrshrq_x_n_s8
vrshrq_x_n_u16
vrshrq_x_n_u32
vrshrq_x_n_u8
vsbciq_m
vsbciq_m_s32
vsbciq_m_u32
vsbciq
vsbciq_s32
vsbciq_u32
vsbcq_m
vsbcq_m_s32
vsbcq_m_u32
vsbcq
vsbcq_s32
vsbcq_u32
vsetq_lane
vsetq_lane_f16
vsetq_lane_f32
vsetq_lane_s16
vsetq_lane_s32
vsetq_lane_s64
vsetq_lane_s8
vsetq_lane_u16
vsetq_lane_u32
vsetq_lane_u64
vsetq_lane_u8
vshlcq_m
vshlcq_m_s16
vshlcq_m_s32
vshlcq_m_s8
vshlcq_m_u16
vshlcq_m_u32
vshlcq_m_u8
vshlcq
vshlcq_s16
vshlcq_s32
vshlcq_s8
vshlcq_u16
vshlcq_u32
vshlcq_u8
vshllbq_m
vshllbq_m_n_s16
vshllbq_m_n_s8
vshllbq_m_n_u16
vshllbq_m_n_u8
vshllbq
vshllbq_n_s16
vshllbq_n_s8
vshllbq_n_u16
vshllbq_n_u8
vshllbq_x
vshllbq_x_n_s16
vshllbq_x_n_s8
vshllbq_x_n_u16
vshllbq_x_n_u8
vshlltq_m
vshlltq_m_n_s16
vshlltq_m_n_s8
vshlltq_m_n_u16
vshlltq_m_n_u8
vshlltq
vshlltq_n_s16
vshlltq_n_s8
vshlltq_n_u16
vshlltq_n_u8
vshlltq_x
vshlltq_x_n_s16
vshlltq_x_n_s8
vshlltq_x_n_u16
vshlltq_x_n_u8
vshlq_m_n
vshlq_m_n_s16
vshlq_m_n_s32
vshlq_m_n_s8
vshlq_m_n_u16
vshlq_m_n_u32
vshlq_m_n_u8
vshlq_m_r
vshlq_m_r_s16
vshlq_m_r_s32
vshlq_m_r_s8
vshlq_m_r_u16
vshlq_m_r_u32
vshlq_m_r_u8
vshlq_m
vshlq_m_s16
vshlq_m_s32
vshlq_m_s8
vshlq_m_u16
vshlq_m_u32
vshlq_m_u8
vshlq_n
vshlq_n_s16
vshlq_n_s32
vshlq_n_s8
vshlq_n_u16
vshlq_n_u32
vshlq_n_u8
vshlq_r
vshlq_r_s16
vshlq_r_s32
vshlq_r_s8
vshlq_r_u16
vshlq_r_u32
vshlq_r_u8
vshlq
vshlq_s16
vshlq_s32
vshlq_s8
vshlq_u16
vshlq_u32
vshlq_u8
vshlq_x_n
vshlq_x_n_s16
vshlq_x_n_s32
vshlq_x_n_s8
vshlq_x_n_u16
vshlq_x_n_u32
vshlq_x_n_u8
vshlq_x
vshlq_x_s16
vshlq_x_s32
vshlq_x_s8
vshlq_x_u16
vshlq_x_u32
vshlq_x_u8
vshrnbq_m
vshrnbq_m_n_s16
vshrnbq_m_n_s32
vshrnbq_m_n_u16
vshrnbq_m_n_u32
vshrnbq
vshrnbq_n_s16
vshrnbq_n_s32
vshrnbq_n_u16
vshrnbq_n_u32
vshrntq_m
vshrntq_m_n_s16
vshrntq_m_n_s32
vshrntq_m_n_u16
vshrntq_m_n_u32
vshrntq
vshrntq_n_s16
vshrntq_n_s32
vshrntq_n_u16
vshrntq_n_u32
vshrq_m
vshrq_m_n_s16
vshrq_m_n_s32
vshrq_m_n_s8
vshrq_m_n_u16
vshrq_m_n_u32
vshrq_m_n_u8
vshrq
vshrq_n_s16
vshrq_n_s32
vshrq_n_s8
vshrq_n_u16
vshrq_n_u32
vshrq_n_u8
vshrq_x
vshrq_x_n_s16
vshrq_x_n_s32
vshrq_x_n_s8
vshrq_x_n_u16
vshrq_x_n_u32
vshrq_x_n_u8
vsliq_m
vsliq_m_n_s16
vsliq_m_n_s32
vsliq_m_n_s8
vsliq_m_n_u16
vsliq_m_n_u32
vsliq_m_n_u8
vsliq
vsliq_n_s16
vsliq_n_s32
vsliq_n_s8
vsliq_n_u16
vsliq_n_u32
vsliq_n_u8
vsriq_m
vsriq_m_n_s16
vsriq_m_n_s32
vsriq_m_n_s8
vsriq_m_n_u16
vsriq_m_n_u32
vsriq_m_n_u8
vsriq
vsriq_n_s16
vsriq_n_s32
vsriq_n_s8
vsriq_n_u16
vsriq_n_u32
vsriq_n_u8
vst1q
vst1q_f16
vst1q_f32
vst1q_p
vst1q_p_f16
vst1q_p_f32
vst1q_p_s16
vst1q_p_s32
vst1q_p_s8
vst1q_p_u16
vst1q_p_u32
vst1q_p_u8
vst1q_s16
vst1q_s32
vst1q_s8
vst1q_u16
vst1q_u32
vst1q_u8
vst2q
vst2q_f16
vst2q_f32
vst2q_s16
vst2q_s32
vst2q_s8
vst2q_u16
vst2q_u32
vst2q_u8
vst4q
vst4q_f16
vst4q_f32
vst4q_s16
vst4q_s32
vst4q_s8
vst4q_u16
vst4q_u32
vst4q_u8
vstrbq_p
vstrbq_p_s16
vstrbq_p_s32
vstrbq_p_s8
vstrbq_p_u16
vstrbq_p_u32
vstrbq_p_u8
vstrbq
vstrbq_s16
vstrbq_s32
vstrbq_s8
vstrbq_scatter_offset_p
vstrbq_scatter_offset_p_s16
vstrbq_scatter_offset_p_s32
vstrbq_scatter_offset_p_s8
vstrbq_scatter_offset_p_u16
vstrbq_scatter_offset_p_u32
vstrbq_scatter_offset_p_u8
vstrbq_scatter_offset
vstrbq_scatter_offset_s16
vstrbq_scatter_offset_s32
vstrbq_scatter_offset_s8
vstrbq_scatter_offset_u16
vstrbq_scatter_offset_u32
vstrbq_scatter_offset_u8
vstrbq_u16
vstrbq_u32
vstrbq_u8
vstrdq_scatter_base_p
vstrdq_scatter_base_p_s64
vstrdq_scatter_base_p_u64
vstrdq_scatter_base
vstrdq_scatter_base_s64
vstrdq_scatter_base_u64
vstrdq_scatter_base_wb_p
vstrdq_scatter_base_wb_p_s64
vstrdq_scatter_base_wb_p_u64
vstrdq_scatter_base_wb
vstrdq_scatter_base_wb_s64
vstrdq_scatter_base_wb_u64
vstrdq_scatter_offset_p
vstrdq_scatter_offset_p_s64
vstrdq_scatter_offset_p_u64
vstrdq_scatter_offset
vstrdq_scatter_offset_s64
vstrdq_scatter_offset_u64
vstrdq_scatter_shifted_offset_p
vstrdq_scatter_shifted_offset_p_s64
vstrdq_scatter_shifted_offset_p_u64
vstrdq_scatter_shifted_offset
vstrdq_scatter_shifted_offset_s64
vstrdq_scatter_shifted_offset_u64
vstrhq
vstrhq_f16
vstrhq_p
vstrhq_p_f16
vstrhq_p_s16
vstrhq_p_s32
vstrhq_p_u16
vstrhq_p_u32
vstrhq_s16
vstrhq_s32
vstrhq_scatter_offset
vstrhq_scatter_offset_f16
vstrhq_scatter_offset_p
vstrhq_scatter_offset_p_f16
vstrhq_scatter_offset_p_s16
vstrhq_scatter_offset_p_s32
vstrhq_scatter_offset_p_u16
vstrhq_scatter_offset_p_u32
vstrhq_scatter_offset_s16
vstrhq_scatter_offset_s32
vstrhq_scatter_offset_u16
vstrhq_scatter_offset_u32
vstrhq_scatter_shifted_offset
vstrhq_scatter_shifted_offset_f16
vstrhq_scatter_shifted_offset_p
vstrhq_scatter_shifted_offset_p_f16
vstrhq_scatter_shifted_offset_p_s16
vstrhq_scatter_shifted_offset_p_s32
vstrhq_scatter_shifted_offset_p_u16
vstrhq_scatter_shifted_offset_p_u32
vstrhq_scatter_shifted_offset_s16
vstrhq_scatter_shifted_offset_s32
vstrhq_scatter_shifted_offset_u16
vstrhq_scatter_shifted_offset_u32
vstrhq_u16
vstrhq_u32
vstrwq
vstrwq_f32
vstrwq_p
vstrwq_p_f32
vstrwq_p_s32
vstrwq_p_u32
vstrwq_s32
vstrwq_scatter_base
vstrwq_scatter_base_f32
vstrwq_scatter_base_p
vstrwq_scatter_base_p_f32
vstrwq_scatter_base_p_s32
vstrwq_scatter_base_p_u32
vstrwq_scatter_base_s32
vstrwq_scatter_base_u32
vstrwq_scatter_base_wb
vstrwq_scatter_base_wb_f32
vstrwq_scatter_base_wb_p
vstrwq_scatter_base_wb_p_f32
vstrwq_scatter_base_wb_p_s32
vstrwq_scatter_base_wb_p_u32
vstrwq_scatter_base_wb_s32
vstrwq_scatter_base_wb_u32
vstrwq_scatter_offset
vstrwq_scatter_offset_f32
vstrwq_scatter_offset_p
vstrwq_scatter_offset_p_f32
vstrwq_scatter_offset_p_s32
vstrwq_scatter_offset_p_u32
vstrwq_scatter_offset_s32
vstrwq_scatter_offset_u32
vstrwq_scatter_shifted_offset
vstrwq_scatter_shifted_offset_f32
vstrwq_scatter_shifted_offset_p
vstrwq_scatter_shifted_offset_p_f32
vstrwq_scatter_shifted_offset_p_s32
vstrwq_scatter_shifted_offset_p_u32
vstrwq_scatter_shifted_offset_s32
vstrwq_scatter_shifted_offset_u32
vstrwq_u32
vsubq
vsubq_f16
vsubq_f32
vsubq_m
vsubq_m_f16
vsubq_m_f32
vsubq_m_n_f16
vsubq_m_n_f32
vsubq_m_n_s16
vsubq_m_n_s32
vsubq_m_n_s8
vsubq_m_n_u16
vsubq_m_n_u32
vsubq_m_n_u8
vsubq_m_s16
vsubq_m_s32
vsubq_m_s8
vsubq_m_u16
vsubq_m_u32
vsubq_m_u8
vsubq_n_f16
vsubq_n_f32
vsubq_n_s16
vsubq_n_s32
vsubq_n_s8
vsubq_n_u16
vsubq_n_u32
vsubq_n_u8
vsubq_s16
vsubq_s32
vsubq_s8
vsubq_u16
vsubq_u32
vsubq_u8
vsubq_x
vsubq_x_f16
vsubq_x_f32
vsubq_x_n_f16
vsubq_x_n_f32
vsubq_x_n_s16
vsubq_x_n_s32
vsubq_x_n_s8
vsubq_x_n_u16
vsubq_x_n_u32
vsubq_x_n_u8
vsubq_x_s16
vsubq_x_s32
vsubq_x_s8
vsubq_x_u16
vsubq_x_u32
vsubq_x_u8
vuninitializedq_f16
vuninitializedq_f32
vuninitializedq
vuninitializedq_polymorphic_f16
vuninitializedq_polymorphic_f32
vuninitializedq_polymorphic_s16
vuninitializedq_polymorphic_s32
vuninitializedq_polymorphic_s64
vuninitializedq_polymorphic_s8
vuninitializedq_polymorphic_u16
vuninitializedq_polymorphic_u32
vuninitializedq_polymorphic_u64
vuninitializedq_polymorphic_u8
vuninitializedq_s16
vuninitializedq_s32
vuninitializedq_s64
vuninitializedq_s8
vuninitializedq_u16
vuninitializedq_u32
vuninitializedq_u64
vuninitializedq_u8
cx1a
cx1d
cx1da
cx2a
cx2d
cx2da
cx3a
cx3d
cx3da
vcx1_u32
vcx1a_u32
vcx1d_u64
vcx1da_u64
vcx1q_m
vcx1q_m_f16
vcx1q_m_f32
vcx1q_m_s16
vcx1q_m_s32
vcx1q_m_s64
vcx1q_m_s8
vcx1q_m_u16
vcx1q_m_u32
vcx1q_m_u64
vcx1q_m_u8
vcx1q_u8
vcx1qa
vcx1qa_f16
vcx1qa_f32
vcx1qa_m
vcx1qa_m_f16
vcx1qa_m_f32
vcx1qa_m_s16
vcx1qa_m_s32
vcx1qa_m_s64
vcx1qa_m_s8
vcx1qa_m_u16
vcx1qa_m_u32
vcx1qa_m_u64
vcx1qa_m_u8
vcx1qa_s16
vcx1qa_s32
vcx1qa_s64
vcx1qa_s8
vcx1qa_u16
vcx1qa_u32
vcx1qa_u64
vcx1qa_u8
vcx2_u32
vcx2a_u32
vcx2d_u64
vcx2da_u64
vcx2q
vcx2q_f16
vcx2q_f32
vcx2q_m_impl
vcx2q_m_impl_f16
vcx2q_m_impl_f32
vcx2q_m_impl_s16
vcx2q_m_impl_s32
vcx2q_m_impl_s64
vcx2q_m_impl_s8
vcx2q_m_impl_u16
vcx2q_m_impl_u32
vcx2q_m_impl_u64
vcx2q_m_impl_u8
vcx2q_s16
vcx2q_s32
vcx2q_s64
vcx2q_s8
vcx2q_u16
vcx2q_u32
vcx2q_u64
vcx2q_u8
vcx2q_u8_f16
vcx2q_u8_f32
vcx2q_u8_s16
vcx2q_u8_s32
vcx2q_u8_s64
vcx2q_u8_s8
vcx2q_u8_u16
vcx2q_u8_u32
vcx2q_u8_u64
vcx2q_u8_u8
vcx2qa_impl
vcx2qa_impl_f16
vcx2qa_impl_f32
vcx2qa_impl_s16
vcx2qa_impl_s32
vcx2qa_impl_s64
vcx2qa_impl_s8
vcx2qa_impl_u16
vcx2qa_impl_u32
vcx2qa_impl_u64
vcx2qa_impl_u8
vcx2qa_m_impl
vcx2qa_m_impl_f16
vcx2qa_m_impl_f32
vcx2qa_m_impl_s16
vcx2qa_m_impl_s32
vcx2qa_m_impl_s64
vcx2qa_m_impl_s8
vcx2qa_m_impl_u16
vcx2qa_m_impl_u32
vcx2qa_m_impl_u64
vcx2qa_m_impl_u8
vcx3_u32
vcx3a_u32
vcx3d_u64
vcx3da_u64
vcx3q_impl
vcx3q_impl_f16
vcx3q_impl_f32
vcx3q_impl_s16
vcx3q_impl_s32
vcx3q_impl_s64
vcx3q_impl_s8
vcx3q_impl_u16
vcx3q_impl_u32
vcx3q_impl_u64
vcx3q_impl_u8
vcx3q_m_impl
vcx3q_m_impl_f16
vcx3q_m_impl_f32
vcx3q_m_impl_s16
vcx3q_m_impl_s32
vcx3q_m_impl_s64
vcx3q_m_impl_s8
vcx3q_m_impl_u16
vcx3q_m_impl_u32
vcx3q_m_impl_u64
vcx3q_m_impl_u8
vcx3q_u8_impl
vcx3q_u8_impl_f16
vcx3q_u8_impl_f32
vcx3q_u8_impl_s16
vcx3q_u8_impl_s32
vcx3q_u8_impl_s64
vcx3q_u8_impl_s8
vcx3q_u8_impl_u16
vcx3q_u8_impl_u32
vcx3q_u8_impl_u64
vcx3q_u8_impl_u8
vcx3qa_impl
vcx3qa_impl_f16
vcx3qa_impl_f32
vcx3qa_impl_s16
vcx3qa_impl_s32
vcx3qa_impl_s64
vcx3qa_impl_s8
vcx3qa_impl_u16
vcx3qa_impl_u32
vcx3qa_impl_u64
vcx3qa_impl_u8
vcx3qa_m_impl
vcx3qa_m_impl_f16
vcx3qa_m_impl_f32
vcx3qa_m_impl_s16
vcx3qa_m_impl_s32
vcx3qa_m_impl_s64
vcx3qa_m_impl_s8
vcx3qa_m_impl_u16
vcx3qa_m_impl_u32
vcx3qa_m_impl_u64
vcx3qa_m_impl_u8
vreinterpretq_u8
vreinterpretq_u8_u8
on_uniform_scan_sub_group_non_unnclusive_logicalxclusive_logicalusive_logical_oroup_non_uniform_ub_group_non_unieduce_logical_or_uniform_reduce_lustered_reduce_ub_group_cluster_exchange_strongtomic_compare_exstered_reduce_orx8packed_uu_uintot_acc_sat_4x8paoup_strided_copysync_work_group_allot_bit_extracc_sat_4x8packed_t_profiling_infoapture_event_prore_exchange_weakhannel_data_typemage_channel_datd_num_sub_groupsnqueued_num_sub_ballot_bit_countub_group_ballot_g_clear_explicittomic_flag_clearunsigned
itfield_extract_p_inverse_ballotub_group_inversee_num_mip_levelset_image_num_mip_ushort16_sat_rtonvert_ushort16_xchange_explicitmage_channel_ordnqueued_local_size
d_extract_signedoup_shuffle_downub_group_shuffleub_group_local_iax_sub_group_siz_work_item_fencetomic_work_item_ork_group_reduceroup_shuffle_xorb_group_shuffle_ser_event_statust_user_event_stamage_num_samplesuint
ot_4x8packed_uu_c_store_explicitomic_store_expli_work_group_copyync_work_group_c_group_broadcastork_group_broadcic_load_explicittomic_load_expliub_group_broadcast
s_valid_reserve_id
et_local_linear_ork_group_barriestorea_half16_rtait_group_events
CONCEPT_REQUIRES
ates-null-valuesauthenticates-nuestricted_intptr__ptrauth_restri
apinotes
icCompareAndSwapOSAtomicCompareAobjc_atomicCompa
not_swift_privatnonzero_argumentcess_independentprocess_independno_authenticatioprocess_dependens_discriminationaddress_discrimino_address_discrdefault_address_m_discriminationcustom_discrimine_discriminationtype_discriminata_discriminationno_extra_discrimdefault_extra_di
troying_delete_tdestroying_delet
nstant_evaluatedis_constant_eval
0123456789abcdef
er taskloop simdparallel master ute parallel forteams distributetaskloop
for simd
target parallel parallel do simdtarget exit data declare variantend declare variget parallel forarallel for simddistribute paral distribute simdtarget teams disbute parallel dodeclare reductioparallel for simparallel sectiontarget enter data
cancellation point
end declare target
parallel workshado
begin declare varget
begin declare tasimd
master taskloop ed_shared_memoryunified_shared_mdynamic_allocators
em_order
atomic_default_m
le_implicit_basedisable_implicitarget dependent><any, entirely t
__swift5_fieldmd__swift5_assocty__swift5_builtin__swift5_capture__swift5_typeref__swift5_reflstr__swift5_acfuncs
watchossimulator
llvm_bb_addr_mapibraries
llvm_dependent_lll_graph_profilellvm_call_graph_m_linker_optionsllvm_linker_optignu_unique_objecndirect_functiongnu_indirect_fun
watchos-simulato
0E@B
__include_macrosmodule.modulemap////////////////A
iple_inheritance__multiple_inherafe_forge_single__builtin_unsafeype_get_metadata__builtin_tmo_tystructor
__has_trivial_de__has_virtual_deow_constructible__is_nothrow_conr_object_pointer__is_member_objexnu_type_summaryray_msaa_depth_timage2d_array_ms__is_destructibl__is_literal_typ__underlying_typ__bridge_transfe__bridge_retaine_Null_unspecifie__builtin_alignof
__unknown_anytyplass
__is_interface_csign
__has_nothrow_as__has_trivial_asyout
__is_standard_laaa_t
th_t
image2d_msaa_dep__single_inheritmove_constructornds_to_temporary__reference_bindtypes_compatiblethrow_assignable__is_nothrow_assivially_copyablein_convertvector__builtin_converRETTY_FUNCTION____PRETTY_FUNCTIOs_convertible_tos_floating_point__is_floating_pos_member_pointer__is_member_poinuiltin_available__builtin_availarow_destructible__is_nothrow_deshrow_move_assign__has_nothrow_movial_move_assignhrow_constructorvial_constructor__has_trivial_coially_assignable__is_trivially_apes_compatible_p__builtin_types_ly_constructiblefunction_pointer__is_member_funcu_type_signature__builtin_offsetof
__builtin_FUNCTION
__is_constructible
__is_complete_type
__private_extern__
__module_private__builtin_bit_caltin_choose_expr__builtin_chooselvalue_reference__is_lvalue_refervalue_reference__is_rvalue_refe2d_array_depth_timage2d_array_de__virtual_inherireinterpret_cast__builtin_COLUMN__builtin_va_arg__is_polymorphic__is_lvalue_expr__is_rvalue_expr__is_fundamental__builtin_astypeimage1d_buffer_t_Nullable_resultlly_destructible__is_trivially_dimport_as_memberswift_infer_impoeclared_includesno_undeclared_in
nsafe_unretained__unsafe_unretai
address_sanitizee_load_hardeningspeculative_loadns_consumes_selfattribute_ns_conobjc_ivar_unusedattribute_objc_iunused_on_fieldsattribute_unuseddiagnose_if_objcattribute_diagnoafety_attributesc_thread_safety__ext_vector_typeattribute_ext_vereturns_retainedattribute_cf_retattribute_ns_retbute_ns_consumedbute_cf_consumedattribute_cf_conbility_driverkitattribute_availaability_bridgeoslability_watchosute_availabilityute_overloadableattribute_overlonalyzer_noreturnattribute_analyzvailability_tvoscoverage_sanitizhavior_sanitizerundefined_behaviailability_swiftjc_method_familyattribute_objc_mmemtag_sanitizerddress_sanitizerhwaddress_sanitidataflow_sanitizptrauth_intrinsics
memory_sanitizerthread_sanitizer_nullable_resultnullability_nulllized_swift_namegeneralized_swifrator_attributesenumerator_attribility_on_arraysnullability_on_aptrauth_qualifie_masking
ptrauth_objc_isahod_list_pointerptrauth_objc_metlock_descriptorsptrauth_signed_bc_signable_classptrauth_objc_sigjc_interface_selptrauth_objc_intsa_authenticatesh_objc_isa_signsh_indirect_gotosptrauth_indirect_objc_isa_stripsobjc_instancetypalifier_manglingobjc_protocol_qu_explicit_atomicobjc_property_exc_nonfragile_abiobjc_nonfragile_alue_expressionsobjc_boxed_nsvaloxed_expressionsobjc_boxed_expreliterals
objc_dictionary_c_array_literalsobjc_array_literobjc_subscripting
e_id_on_typedefsobjc_bridge_id_o_cf_code_auditedarc_cf_code_audic_class_propertyobjc_class_propeonstant_literalsobjc_constant_lienerics_varianceobjc_generics_vaxx_static_assertobjc_cxx_static_sert
objc_c_static_asions
c_generic_selecttrol
cxx_override_concxx_static_assercxx_strong_enumscxx_implicit_moves
zed_initializerscxx_generalized_pe_template_argscxx_local_type_tversions
cxx_explicit_coneleted_functionscxx_deleted_funcnline_namespacescxx_inline_namesvalue_referencescxx_rvalue_refering_constructorscxx_delegating_ccxx_inheriting_caulted_functionscxx_defaulted_fu_string_literalscxx_raw_string_l_string_builtinscxx_constexpr_st_alias_templatescxx_alias_templas_control_sfinaecxx_access_contratic_member_initcxx_nonstatic_meriadic_templatescxx_variadic_temcxx_user_literalestricted_unionscxx_unrestrictedrals
cxx_unicode_lite_trailing_returncxx_trailing_ret_aggregate_nsdmicxx_aggregate_ns_binary_literalscxx_binary_liter_generic_lambdascxx_generic_lambcxx_thread_localriable_templatescxx_variable_temn_type_deductioncxx_return_type_elaxed_constexprcxx_relaxed_conscxx_decltype_auto
cxx_init_capturehas_nothrow_copyhas_trivial_copyhas_nothrow_assihas_trivial_assitual_conversionscxx_contextual_cis_standard_layout
is_convertible_tis_constructibleivial_destructorhas_trivial_destrtual_destructorhas_virtual_desthas_nothrow_conshas_trivial_consis_trivially_copis_trivially_conis_trivially_ass_relative_vtablecxx_abi_relativeshadow_call_stack
oadable_unmarkedoverloadable_unm_scalar_divisionmatrix_types_scaoto_with_outputsgnu_asm_goto_witiant_environment__is_target_variarget_variant_osiant
__has_target_varrget_environment__is_target_envi__is_target_archype_pack_element__type_pack_elem__make_integer_seq
__is_target_vendor
llvm_fatal_errorllvm_unreachable
no_caller_saved_no_instrument_fuon_entry
patchable_functiforce_align_arg_warn_unused_result
transparent_unioanalyzer_suppresaarch64_vector_paarch64_far_addros_returns_retaiobjc_designated_objc_subclassingno_speculative_lized
loader_uninitialneon_polyvector_ible
objc_runtime_visrect
objc_suppress_divice
opencl_global_deexternal_source_objc_independentxray_always_instobjc_returns_inndisable_tail_calls
mig_server_routine
no_stack_protectobjc_nonlazy_class
opencl_global_hoswift_error_resuenforce_tcb_leafinternal_linkagemin_vector_widthneon_vector_typeos_consumes_thispass_object_sizecf_returns_not_rrns_autoreleasedns_returns_autorns_returns_not_ros_returns_not_rmp_table
cfi_canonical_juretained
objc_externally_ect_size
pass_dynamic_objfootnote
symbol_metadata_audited_transfercf_audited_transcf_returns_retaiunknown_transfercf_unknown_transns_returns_retaic_direct_membersobjc_direct_membc_requires_superobjc_requires_suft_async_contextswift_async_contobjc_runtime_nampreserve_access_isibility_publiclto_visibility_pprecise_lifetimeobjc_precise_lifswift_indirect_rnever_instrumentxray_never_instrno_thread_safetyruntime_protocolobjc_non_runtimegpu_waves_per_euamdgpu_waves_peramdgpu_flat_workshared_capabilitconsumable_auto_require_constantstandalone_debugcarries_dependency
no_unique_addresn_surface_type__n_texture_type____cudart_builtinanalyzer_noreturtin_surface_typedevice_builtin_stin_texture_typedevice_builtin_t_sve_vector_bitsarm_sve_vector_be_nonsecure_callcmse_nonsecure_cntry
cmse_nonsecure_ed_sub_group_sizeintel_reqd_sub_gopencl_unroll_hifinition
objc_complete_deswift_async_name_bridged_typedefswift_bridged_tysize
reqd_work_group_hint
work_group_size_swift_objc_memberetained_on_zero_returns_retainessing_restrictedubclassing_restrated_initializeresignated_initiapeculative_load_ns_inner_pointerbjc_returns_inneprotocol
bjc_non_runtime_analysis
o_thread_safety_ss_space
arch64_far_addrein_alias
_clang_arm_builtnu::no_address_setadata_footnoteymbol_metadata_famic_object_sizeass_dynamic_objeernally_retainedbjc_externally_rnical_jump_tablefi_canonical_jum_saved_registersnu::no_caller_sarns_not_retaineds_returns_not_ref_returns_not_ree_function_entrynu::patchable_fulways_instrumentray_always_instryped_memory_opertrauth_vtable_pondependent_classbjc_independent_al_source_symbolxternal_source_srgument_with_typlign_arg_pointernu::force_align_ment
ray_never_instrutype
ype_tag_for_datasult
wift_indirect_rerve_access_indexeserve_access_ininter_with_type_time
bjc_precise_lifeblic
to_visibility_putrument_functionnu::no_instrumenencl_global_devi_polyvector_typeeon_polyvector_ter_uninitializedoader_uninitialinu_usage_semantiwift_async_context
s_returns_retained
wift_error_resulencl_global_hostig_server_routinboutletcollectionum_extensibilitisable_tail_callarch64_vector_pcnu::no_sanitize_wift_async_errornalyzer_suppressarn_unused_resulo_sanitize_threaransparent_unionnu::transparent_:returns_nonnullnu::returns_nonnt_initializationequire_constant_ined_on_non_zerory_acquire_shareo_speculative_lo_work_group_sizemdgpu_flat_work_uires_shared_capease_generic_cap_auto_cast_stateonsumable_auto_celease_shared_caquire_shared_capar_address_spacerch64_far_addrese_locks_requiredxclusive_locks_rssert_shared_capped_memory_operality
y_acquire_capabi_indirect_resultift_indirect_resared_locks_requiequires_capabilimdgpu_waves_per_eu
elease_capabilitrch64_vector_pcsrries_dependencyo_unique_address__device_builtin__launch_bounds_no_profile_instret_state_on_readconsumable_set_so_address_safetyxclusive_trylockhread_safety_anaaller_saved_regioup_size
ntel_reqd_sub_grchable_function_s_dynamic_objectxternally_retainomplete_definitihared_trylock_fuorce_align_arg_pxclusive_lock_fuo_instrument_funlock
ssert_exclusive__group_size_hintork_group_size_hed_lock_functionhared_lock_functeqd_work_group_s_nonsecure_entrymse_nonsecure_en_sanitize_addresse_nonsecure_call
ang_builtin_aliam_sve_vector_bitdgpu_waves_per_eu
arries_dependencsert_shared_lockfied_inheritance__unspecified_in
#pragma-messages
#warnings
CFString-literal
IndependentClass-attribute
NSObject-attribute
absolute-value
abstract-final-class
abstract-vbase-init
address
address-of-packed-member
address-of-temporary
aggregate-return
aix-compat
align-mismatch
alloca
alloca-with-align-alignof
ambiguous-delete
ambiguous-ellipsis
ambiguous-macro
ambiguous-member-template
ambiguous-reversed-operator
analyzer-incompatible-plugin
anon-enum-enum-conversion
anonymous-pack-parens
apinotes
arc%arc-bridge-casts-disallowed-in-nonarc
arc-maybe-repeated-use-of-weak
arc-non-pod-memaccess
arc-performSelector-leaks
arc-repeated-use-of-weak
arc-retain-cycles
arc-unsafe-retained-assign
argument-outside-range
argument-undefined-behaviourarray-bounds
array-bounds-pointer-arithmetic
asm-operand-widths
assign-enum
assume
at-protocol
atimport-in-framework-header
atomic-alignment
atomic-implicit-seq-cst
atomic-memory-ordering
atomic-properties*atomic-property-with-user-defined-accessor
attribute-packed-for-bitfield
attribute-warning
attributes
auto-disable-vptr-sanitizer
auto-import
auto-storage-class
auto-var-idavailability
avr-rtlib-linking-quirks
backend-plugin
backslash-newline-escape
bad-function-cast
binary-literal
bind-to-temporary-copy
binding-in-condition
bitfield-constant-conversion
bitfield-enum-conversion
bitfield-width
bitwise-conditional-parentheses
bitwise-instead-of-logical
bitwise-op-parentheses
block-capture-autoreleasing
bool-conversion
bool-conversions
bool-operation*bounds-attributes-cxx-experimental-ignored$bounds-attributes-extern-array-count'bounds-attributes-init-list-side-effect
braced-scalar-init
bridge-cast builtin-assume-aligned-alignment
builtin-macro-redefined
builtin-memcpy-chk-size
builtin-requires-header
c++-compatc++0x-compat
c++0x-extensions
c++0x-narrowingc++11-compat(c++11-compat-deprecated-writable-strings
c++11-compat-pedantic*c++11-compat-reserved-user-defined-literal
c++11-extensions
c++11-extra-semi
c++11-inline-namespace
c++11-long-long
c++11-narrowing
c++14-binary-literalc++14-compat
c++14-compat-pedantic
c++14-extensionsc++17-compat
c++17-compat-mangling
c++17-compat-pedantic
c++17-extensions
c++1y-extensionsc++1z-compat
c++1z-compat-mangling
c++1z-extensionsc++20-compat
c++20-compat-pedantic
c++20-designator
c++20-extensionsc++2a-compat
c++2a-compat-pedantic
c++2a-extensions
c++2b-extensions
c++98-c++11-c++14-c++17-compat'c++98-c++11-c++14-c++17-compat-pedantic
c++98-c++11-c++14-compat!c++98-c++11-c++14-compat-pedantic
c++98-c++11-compat!c++98-c++11-compat-binary-literal
c++98-c++11-compat-pedanticc++98-compat#c++98-compat-bind-to-temporary-copy
c++98-compat-extra-semi%c++98-compat-local-type-template-args
c++98-compat-pedantic'c++98-compat-unnamed-type-template-args
c11-extensions
c2x-extensions
c99-compat
c99-designator
c99-extensions#call-to-pure-virtual-from-ctor-dtor
called-once-parameter
cast-align
cast-calling-convention
cast-function-type
cast-of-sel-type
cast-qual
cast-qual-unrelated
char-align
char-subscriptsclang-cl-pch
class-conversion
class-varargs
cmse-union-leak
comma
comment
comments
compare-distinct-pointer-types
completion-handler
complex-component-init
compound-token-split
compound-token-split-by-macro
compound-token-split-by-space
concepts-ts-compat
conditional-type-mismatch
conditional-uninitialized
config-macros
constant-conversion
constant-evaluated
constant-logical-operand
constexpr-not-const
consumed
conversion
conversion-null
coroutine%coroutine-missing-unhandled-exception
covered-switch-default
cstring-format-directive
ctad-maybe-unsupported
ctor-dtor-privacy
cuda-compat
custom-atomic-properties
cxx-attribute-extension
dangling
dangling-else
dangling-fielddangling-gsl
dangling-initializer-list
darwin-sdk-settings
date-time
dealloc-in-category
debug-compression-unavailable
declaration-after-statement
defaulted-function-deleted
delegating-ctor-cycles delete-abstract-non-virtual-dtor
delete-incomplete$delete-non-abstract-non-virtual-dtor
delete-non-virtual-dtor#delimited-escape-sequence-extension
deprecated
deprecated-altivec-src-compat$deprecated-anon-enum-enum-conversion
deprecated-array-compare
deprecated-attributes
deprecated-comma-subscript
deprecated-copy
deprecated-copy-dtor
deprecated-copy-with-dtor'deprecated-copy-with-user-provided-copy'deprecated-copy-with-user-provided-dtor
deprecated-declarations!deprecated-dynamic-exception-spec
deprecated-enum-compare#deprecated-enum-compare-conditional
deprecated-enum-enum-conversion deprecated-enum-float-conversion
deprecated-implementations
deprecated-increment-bool
deprecated-objc-isa-usage%deprecated-objc-pointer-introspection5deprecated-objc-pointer-introspection-performSelector
deprecated-pragma
deprecated-register
deprecated-this-capture
deprecated-volatile
deprecated-writable-strings
direct-ivar-access
disabled-macro-expansion
disabled-optimizationdiscard-qual
distributed-object-modifiers
div-by-zero
division-by-zero
dll-attribute-on-redeclaration%dllexport-explicit-instantiation-decl
dllimport-static-field-def
documentation
documentation-deprecated-sync
documentation-html
documentation-pedantic
documentation-unknown-command
dollar-in-identifier-extension
double-promotion
dtor-namedtor-typedef
duplicate-decl-specifier
duplicate-enum
duplicate-method-arg
duplicate-method-match
duplicate-protocol
dynamic-class-memaccess
dynamic-exception-spec
effc++
elaborated-enum-base
elaborated-enum-class
embedded-directive
empty-body
empty-decomposition
empty-init-stmt
empty-translation-unit
encode-typeendif-labelsenum-compare
enum-compare-conditional
enum-compare-switch
enum-conversion
enum-enum-conversion
enum-float-conversion
enum-too-large
exceptions
excess-initializers
exit-time-destructors
expansion-to-defined
explicit-initialize-call
explicit-ownership-type
export-unnamed
export-using-directive
extern-c-compat
extern-initializer
extra
extra-qualification
extra-semi
extra-semi-stmtextra-tokens
final-dtor-non-final-class
final-macro
firebloom-incomplete-array firebloom-init-list-partial-null
firebloom-single-to-count
fixed-enum-extension
fixed-point-overflow
flag-enum
flexible-array-extensions
float-conversion
float-equal
float-overflow-conversion
float-zero-conversion
for-loop-analysis
format
format-extra-args
format-insufficient-args
format-invalid-specifier
format-non-iso
format-nonliteral
format-pedantic
format-security
format-type-confusion
format-y2k
format-zero-length
format=2
fortify-source
four-char-constants
frame-address
frame-larger-than
frame-larger-than=%framework-include-private-from-public
free-nonheap-object
function-def-in-objc-container
function-multiversionfuse-ld-path
future-compat
gcc-compat
global-constructors
global-isel
gnu-alignof-expression
gnu-anonymous-struct
gnu-array-member-paren-init
gnu-auto-type
gnu-binary-literal
gnu-case-range
gnu-complex-integer gnu-compound-literal-initializer
gnu-conditional-omitted-operand
gnu-designator
gnu-empty-initializer
gnu-empty-struct
gnu-flexible-array-initializer
gnu-flexible-array-union-member
gnu-folding-constant
gnu-imaginary-constant
gnu-include-next
gnu-inline-cpp-without-extern
gnu-label-as-value
gnu-redeclared-enum
gnu-statement-expression
gnu-static-float-init$gnu-string-literal-operator-template
gnu-union-cast"gnu-variable-sized-type-not-at-end
gnu-zero-line-directive!gnu-zero-variadic-macro-arguments
gpu-maybe-wrong-sideheader-guard
header-hygiene
hip-only
idiomatic-parentheses
ignored-attributes)ignored-availability-without-sdk-settings
ignored-optimization-argument
ignored-pragma-intrinsic
ignored-pragma-optimize
ignored-pragmas
ignored-qualifiers
ignored-reference-qualifiers
implicit
implicit-atomic-properties#implicit-const-int-float-conversion*implicit-conversion-floating-point-to-bool implicit-exception-spec-mismatch
implicit-fallthrough!implicit-fallthrough-per-function
implicit-fixed-point-conversion
implicit-float-conversion
implicit-function-declarationimplicit-int
implicit-int-conversion
implicit-int-float-conversion
implicit-retain-self
implicitly-unsigned-literal
import&import-preprocessor-directive-pedantic
inaccessible-base
include-next-absolute-path
include-next-outside-header
incompatible-exception-spec#incompatible-function-pointer-types"incompatible-library-redeclaration
incompatible-ms-struct
incompatible-pointer-types.incompatible-pointer-types-discards-qualifiers
incompatible-property-type
incompatible-sysroot'incomplete-framework-module-declaration
incomplete-implementation
incomplete-module
incomplete-setjmp-declaration
incomplete-umbrella
inconsistent-dllimport(inconsistent-missing-destructor-override
inconsistent-missing-override
increment-bool
index-store
infinite-recursion
init-self
initializer-overrides
injected-class-name
inline
inline-asm#inline-namespace-reopened-noninline
inline-new-delete"instantiation-after-specialization
int-conversion
int-conversions
int-in-bool-context
int-to-pointer-cast
int-to-void-pointer-cast
integer-overflow
interrupt-service-routine
invalid-command-line-argument
invalid-constexpr
invalid-iboutlet&invalid-initializer-from-system-header
invalid-ios-deployment-target
invalid-no-builtin-names
invalid-noreturn
invalid-offsetof invalid-or-nonexistent-directory
invalid-partial-specialization
invalid-pch
invalid-pp-token
invalid-source-encoding
invalid-token-paste
jump-seh-finally
keyword-compat
keyword-macro
knr-promoted-parameter
language-extension-token
large-by-value-copy
liblto
linker-warnings
literal-conversion
literal-range
local-type-template-args
logical-not-parentheses
logical-op-parentheses
long-long
loop-analysis
macro-redefined
main
main-return-type
malformed-warning-check
many-braces-around-scalar-init
max-tokens
max-unsigned-zero
memset-transposed-args
memsize-comparison
method-signatures
microsoft
microsoft-abstract
microsoft-anon-tag
microsoft-cast
microsoft-charize
microsoft-comment-paste
microsoft-const-init
microsoft-cpp-macro"microsoft-default-arg-redefinition
microsoft-drectve-section
microsoft-end-of-file microsoft-enum-forward-reference
microsoft-enum-value
microsoft-exception-spec
microsoft-exists#microsoft-explicit-constructor-call
microsoft-extra-qualification
microsoft-fixed-enum
microsoft-flexible-array
microsoft-goto
microsoft-inaccessible-base
microsoft-include
microsoft-mutable-reference
microsoft-pure-definition
microsoft-redeclare-static
microsoft-sealed
microsoft-static-assert
microsoft-template
microsoft-template-shadow microsoft-union-member-reference
microsoft-unqualified-friend
microsoft-using-decl
microsoft-void-pseudo-dtor
misleading-indentation
mismatched-new-delete
mismatched-parameter-types
mismatched-return-types
mismatched-tags
missing-braces
missing-constinit
missing-declarations
missing-exception-spec
missing-field-initializers
missing-format-attribute
missing-include-dirs
missing-method-return-type
missing-noescape
missing-noreturn
missing-prototype-for-cc
missing-prototypes
missing-selector-name
missing-sysroot
missing-variable-declarations
misspelled-assumptionmodule-build
module-conflict
module-file-config-mismatch
module-file-extension
module-import
module-import-in-extern-c
module-lock"modules-ambiguous-internal-linkage
modules-import-nested-redundant
most
movemsvc-include
msvc-not-found
multichar
multiple-move-vbase
narrowing
nested-anon-types
nested-externs
new-returns-null
newline-eof
noderef
noexcept-type
non-c-typedef-for-linkage
non-gcc
non-literal-null-conversion'non-modular-include-in-framework-module
non-modular-include-in-module
non-pod-varargs
non-power-of-two-alignment
non-virtual-dtor
nonnull
nonportable-cfstrings
nonportable-include-path!nonportable-private-apinotes-path(nonportable-private-system-apinotes-path
nonportable-system-include-path!nonportable-vector-initialization
nontrivial-memaccess
nsconsumed-mismatch
nsreturns-mismatch
null-arithmetic
null-character
null-conversion
null-dereference
null-pointer-arithmetic
null-pointer-subtraction
nullability
nullability-completeness"nullability-completeness-on-arrays
nullability-declspec
nullability-extension#nullability-inferred-on-nested-type
nullable-to-nonnull-conversion+objc-autosynthesis-property-ivar-name-match
objc-bool-constant-conversion
objc-boxing
objc-circular-container
objc-cocoa-api
objc-designated-initializers
objc-dictionary-duplicate-keys
objc-flexible-array
objc-forward-class-redefinition
objc-interface-ivars
objc-literal-compare
objc-literal-conversion
objc-load-method
objc-macro-redefinition
objc-messaging-id
objc-method-access
objc-missing-property-synthesis
objc-missing-super-calls
objc-multiple-method-names"objc-noncopy-retain-block-property
objc-nonunified-exceptions#objc-property-assign-on-object-type
objc-property-implementation
objc-property-implicit-mismatch*objc-property-matches-cocoa-ownership-rule
objc-property-no-attribute
objc-property-synthesis#objc-protocol-method-implementation objc-protocol-property-synthesis
objc-protocol-qualifiers"objc-readonly-with-setter-property
objc-redundant-api-use
objc-redundant-literal-use
objc-root-class
objc-signed-char-bool/objc-signed-char-bool-implicit-float-conversion-objc-signed-char-bool-implicit-int-conversion
objc-string-compare
objc-string-concatenation
objc-unsafe-perform-selector
objc-weak-compat
old-style-cast
old-style-definition
opencl-unsupported-rgba
openmp
openmp-51-extensions
openmp-clauses
openmp-loop-form
openmp-mapping
openmp-target
option-ignored!ordered-compare-function-pointers
ossharedptr-misuse
out-of-line-declaration
out-of-scope-functionover-aligned
overflow
overlength-strings
overloaded-shift-op-parentheses
overloaded-virtual
override-init
override-module
overriding-method-mismatch
overriding-t-option
packed
padded
parentheses
parentheses-equality
partial-availability
pass
pass-analysis
pass-failed
pass-missed
pch-date-time
pedantic
pedantic-core-features
pedantic-macros
pessimizing-move
pointer-arith
pointer-bool-conversion
pointer-compare
pointer-integer-comparepointer-sign
pointer-to-enum-cast
pointer-to-int-cast
pointer-type-mismatch
poison-system-directories
potentially-direct-selector potentially-evaluated-expression
pragma-clang-attribute
pragma-once-outside-header
pragma-pack
pragma-pack-suspicious-include#pragma-system-header-outside-header
pragmas
pre-c++14-compat
pre-c++14-compat-pedantic
pre-c++17-compat
pre-c++17-compat-pedantic
pre-c++20-compat
pre-c++20-compat-pedantic
pre-c++2b-compat
pre-c++2b-compat-pedantic
pre-c2x-compat
pre-c2x-compat-pedantic
pre-openmp-51-compat&predefined-identifier-outside-function
private-extern
private-header
private-module
profile-instr-missing
profile-instr-out-of-date
profile-instr-unprofiled
property-access-dot-syntax
property-attribute-mismatch
protocol%protocol-property-synthesis-ambiguity
psabi
ptrauth-null-pointers
qualified-void-return-type"quoted-include-in-framework-header
range-loop-analysis
range-loop-bind-reference
range-loop-construct
readonly-iboutlet-property
receiver-expr
receiver-forward-class
redeclared-class-member
redundant-consteval-if
redundant-decls
redundant-move
redundant-parens
register
reinterpret-base-class
remark-backend-plugin
reorderreorder-ctor
reorder-init-list
requires-super-attribute
reserved-id-macro
reserved-identifier
reserved-macro-identifier
reserved-user-defined-literal
restrict-expansion
retained-language-linkage
return-stack-address
return-std-move
return-type
return-type-c-linkage
rewrite-not-bool
round-trip-cc1-args
rtti
sanitize-address
search-path-usage
section
selector
selector-type-mismatch
self-assign
self-assign-field
self-assign-overloaded
self-move
semicolon-before-method-body
sentinel
sequence-point
serialized-diagnostics
shadow
shadow-allshadow-field
shadow-field-in-constructor$shadow-field-in-constructor-modified
shadow-ivar
shadow-uncaptured-local
shift-count-negative
shift-count-overflow
shift-negative-value
shift-op-parentheses
shift-overflow
shift-sign-overflow
shorten-64-to-32sign-compare
sign-conversion
sign-promo
signed-enum-bitfield
signed-unsigned-wchar
sizeof-array-argument
sizeof-array-decay
sizeof-array-div
sizeof-pointer-div
sizeof-pointer-memaccess
slash-u-filenameslh-asm-goto
sometimes-uninitialized
source-mgr
source-uses-openmp
spir-compat
stack-exhausted
stack-protector
static-float-init
static-in-inline$static-inline-explicit-instantiation
static-local-in-inline
static-self-init
stdlibcxx-not-found
strict-aliasing
strict-aliasing=0
strict-aliasing=1
strict-aliasing=2
strict-overflow
strict-overflow=0
strict-overflow=1
strict-overflow=2
strict-overflow=3
strict-overflow=4
strict-overflow=5"strict-potentially-direct-selector
strict-prototypes
strict-selector-match
string-compare
string-concatenation
string-conversion
string-plus-char
string-plus-int
strlcpy-strlcat-sizestrncat-size
suggest-destructor-override
suggest-override
super-class-method-mismatch
suspicious-bzero
suspicious-memaccess
swift-name-attribute
swift-newtype-attribute
switch
switch-bool
switch-default
switch-enum%sync-fetch-and-nand-semantics-changed
synth
tautological-bitwise-compare
tautological-compare
tautological-constant-compare&tautological-constant-in-range-compare*tautological-constant-out-of-range-compare
tautological-objc-bool-compare
tautological-overlap-compare
tautological-pointer-compare
tautological-type-limit-compare
tautological-undefined-compare'tautological-unsigned-char-zero-compare'tautological-unsigned-enum-zero-compare"tautological-unsigned-zero-compare tautological-value-range-compare
tcb-enforcement$tentative-definition-incomplete-type
thread-safety
thread-safety-analysis
thread-safety-attributes
thread-safety-beta
thread-safety-negative
thread-safety-precise
thread-safety-reference
thread-safety-verbose
trigraphs
type-limits
type-safety
typedef-redefinition
typename-missing
unable-to-open-stats-file
unavailable-declarations
undeclared-selector
undefundef-prefix
undefined-bool-conversion
undefined-func-template
undefined-inline
undefined-internal
undefined-internal-type
undefined-reinterpret-cast
undefined-var-template
underaligned-exception-object
unevaluated-expression
unguarded-availability
unguarded-availability-new
unicode
unicode-homoglyph
unicode-whitespace
unicode-zero-width
uninitialized
uninitialized-const-reference
unknown-argument
unknown-assumption
unknown-attributes
unknown-cuda-version
unknown-escape-sequence
unknown-pragmas
unknown-sanitizers
unknown-warning-option
unnamed-type-template-args
unneeded-internal-declaration
unneeded-member-function
unreachable-code
unreachable-code-aggressive
unreachable-code-break
unreachable-code-fallthrough
unreachable-code-loop-increment
unreachable-code-return
unsequenced
unsupported-abs
unsupported-availability-guard
unsupported-cb#unsupported-dll-base-class-template
unsupported-floating-point-opt
unsupported-friend
unsupported-gpopt
unsupported-nan
unsupported-target-opt
unsupported-visibility
unusable-partial-specialization
unused
unused-argument
unused-but-set-parameter
unused-but-set-variable
unused-command-line-argument
unused-comparison
unused-const-variable
unused-exception-parameter
unused-function
unused-getter-return-valueunused-label
unused-lambda-capture
unused-local-typedef
unused-local-typedefs
unused-macros
unused-member-function
unused-parameter
unused-private-field
unused-property-ivar
unused-result
unused-templateunused-value
unused-variable
unused-volatile-lvalue
used-but-marked-unused
user-defined-literals
user-defined-warnings
varargs
variadic-macros
vec-elem-size
vector-conversion
vector-conversionsvexing-parse
visibility
vla-extension
void-pointer-to-enum-cast
void-pointer-to-int-cast
void-ptr-dereference
volatile-register-var
wasm-exception-spec
weak-template-vtablesweak-vtables
writable-strings
write-strings
xor-used-as-pow
zero-as-null-pointer-constant
zero-length-array
API notes file not found at '%0'
NSInvocation's %0 is not safe to be used with an object with ownership other than __unsafe_unretained
invalid type %0 in asm %select{input|output}1
invalid type %0 in asm input for constraint '%1'
%0 attribute cannot be applied to types
uuid attribute contains a malformed GUID
cannot open file '%0': %1
%select{pointer|reference}0 to %select{|subobject of }1%select{type_info object|string literal|temporary object|predefined '%3' variable}2 is not allowed in a template argument
'size_t' suffix for literals is a C++2b feature
only special member functions %select{|and comparison operators }0may be defaulted
only functions can have deleted definitions
duplicate '%0' declaration specifier
enumeration cannot be a template
expected %0
expected %1 after %0
method name referenced in property setter attribute must end with ':'
expected %0 or %1
expected namespace name
expected string literal %select{in %1|for diagnostic message in static_assert|for optional message in 'availability' attribute|for %select{language|source container}1 name in 'external_source_symbol' attribute}0
file '%0' modified since it was first processed
sorry, unsupported: file '%0' is too large for Clang to process
compile with '-ffixed-point' to enable fixed point types
'%0' is invalid in friend declarations
sorry, this include generates a translation unit too large for Clang to process.
integer literal is too large to be represented in any %select{signed |}0integer type
character literal with user-defined suffix cannot be used here
invalid feature combination: %0
%select{data member |non-public member function |static member function |user-declared constructor|user-declared destructor|operator |nested class }0%1 is not permitted within an interface type
numeric literal with user-defined suffix cannot be used here
invalid storage class specifier in function declarator
string literal with user-defined suffix cannot be used here
'%0' can only be used if the target supports the mfhc1 and mthc1 instructions
module '%0' is needed but has not been provided, and implicit use of module files is disabled
build a shadowed submodule '%0'
cyclic dependency in module '%0': %1
no handler registered for module format '%0'
%select{|umbrella }0header '%1' not found
could not build module '%0'
module '%0' not found
error in loading module '%0' from prebuilt module path
cannot rebuild module '%0' as it is already finalized
import of shadowed module '%0'
module '%0' %select{is incompatible with|requires}1 feature '%2'
[rewriter] %0
nullability specifier %0 conflicts with existing specifier %1
directive '#pragma omp %0' cannot contain more than one '%1' clause%select{| with '%3' name modifier| with 'source' dependence}2
directive '#pragma omp %0' requires the '%1' clause
options %0 and %1 are set to different values
feature %0 requires support of %1 feature
%0 does not support the '%1' %select{type qualifier|storage class specifier}2
'%0' is not supported in C++ for OpenCL
option '%0' cannot be specified on this target
option '%0' cannot be specified with '%1'
option '%0' cannot be specified without '%1'
redefinition of parameter %0
%0 only allowed in __except block or filter expression
%0 only allowed in __except filter expression
%0 only allowed in __finally block
expected '__except' or '__finally' block
%select{signed |}0'size_t' literal is out of range of possible %select{signed |}0'size_t' values
unknown target ABI '%0'
unknown target CPU '%0'
unknown FP unit '%0'
unknown target triple '%0', please use -triple or -arch
ABI '%0' is not supported on CPU '%1'
ABI '%0' is not supported for '%1'
micromips is not supported for target CPU '%0'
execute only is not supported for the %0 sub-architecture
the '%0' unit is not supported with this instruction set
-mcmse is not supported for %0
the %0 sub-architecture does not support unaligned accesses
this value is too large for this fixed point type
unable to make temporary file: %0
unable to rename temporary '%0' to output file '%1': '%2'
conversion between fixed point and %0 is not yet supported
no analyzer checkers or packages are associated with '%0'
'%0' can only be used with the '%1' ABI
%0 byte order mark detected in '%1', but encoding is not supported
must use '%1' tag to refer to type %0%select{| in this scope}2
'long long' is an extension when C99 mode is not enabled
'diagnose_if' is a clang extension
'enable_if' is a clang extension
'long long' is a C++11 extension
'size_t' suffix for literals is a C++2b extension
duplicate '%0' declaration specifier
integer literal is too large to be represented in a signed integer type, interpreting as unsigned
integer literal is too large to be represented in type 'long' and is subject to undefined behavior under C++98, interpreting as 'unsigned long'; this literal will %select{have type 'long long'|be ill-formed}0 in C++11 onwards
variadic templates are a C++11 extension
duplicate '%0' declaration specifier
too many errors emitted, stopping now
also found
%select{pointer|reference}0 to %select{|subobject of }1%select{type_info object|string literal|temporary object|predefined '%3' variable}2 is not allowed in a template argument
%1 %0 is hidden by a non-type declaration of %0 here
declared here
previous case defined here
forward declaration of %0
subexpression not valid in a constant expression
to match this %0
[rewriter] %0
one possibility
#pragma entered here
previous declaration is here
previous definition is here
previous implicit declaration is here
previous use is here
use -analyzer-disable-all-checks to disable all static analyzer checkers
definition of %0 is not complete until the closing '}'
using
valid target CPU values are: %0
could not acquire lock file for module '%0': %1
timed out waiting to acquire lock file for module '%0'
private API notes file for module '%0' should be named '%0_private.apinotes', not '%1'
private API notes file for module '%0' should be named '%0_private.apinotes', not '%1'
[rewriter] call returns pointer to GC managed memory; it will become unmanaged in ARC
conflicting nullability specifier on parameter types, %0 conflicts with existing specifier %1
conflicting nullability specifier on return types, %0 conflicts with existing specifier %1
'consteval' specifier is incompatible with C++ standards before C++20
'size_t' suffix for literals is incompatible with C++ standards before C++2b
'long long' is incompatible with C++98
variadic templates are incompatible with C++98
duplicate definition of category %1 on interface %0
duplicate '%0' declaration specifier
'%0' is ignored since it is only supported for HIP
redeclaration of method parameter %0
redefinition of method parameter %0
[rewriter] %0
duplicate nullability specifier %0
integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C89; this literal will %select{have type 'long long'|be ill-formed}0 in C99 onwards
integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C++98; this literal will %select{have type 'long long'|be ill-formed}0 in C++11 onwards
%0 is a core feature in %select{OpenCL C|C++ for OpenCL}1 version %2 but not supported on this target
include location '%0' is unsafe for cross-compilation
Speculative load hardening does not protect functions with asm goto
Unable to protect inline asm that clobbers stack pointer against stack clash
stack nearly exhausted; compilation time may suffer, and crashes due to stack overflow are likely
unknown attribute %0 ignored
The default Altivec ABI on AIX is not yet supported, use '-mabi=vec-extabi' for the extended Altivec ABI
TLS model '%0' is not yet supported on AIX
checker cannot be enabled with analyzer option '%0' == %1
invalid input for checker option '%0', that expects %1
checker '%0' has no option called '%1'
invalid input for analyzer-config option '%0', that expects %1 value
analyzer-config option '%0' should contain only one '='
analyzer-config option '%0' has a key but no value
unknown analyzer-config '%0'
-fobjc-arc is not supported on platforms using the legacy runtime
-fobjc-arc is not supported on versions of OS X prior to 10.6
architecture '%0' does not support '%1' execution mode
original arguments parse failed, then succeeded in round-trip
generated arguments do not match in round-trip
generated arguments parse failed in round-trip
cmse is not compatible with %select{RWPI|ROPI}0
CPU '%0' does not support '%1' execution mode
'%0' not supported, please use -iquote instead
cannot deduce implicit triple value for -Xopenmp-target, specify triple using -Xopenmp-target=<triple>
alignment is not a power of 2 in '%0'
invalid argument '-mno-amdgpu-ieee' only allowed with relaxed NaN handling
option '%0' requires input to be LLVM bitcode
invalid argument '%0' not allowed with '%1'
invalid argument '%0' only allowed with '%1'
invalid offload arch combinations: '%0' and '%1' (for a specific processor, a feature should either exist in all offload archs, or not exist in any offload archs)
invalid target ID '%0'; format is a processor name followed by an optional colon-delimited list of features followed by an enable/disable sign (e.g., 'gfx908:sramecc+:xnack-')
-fembed-bitcode is not supported on versions of iOS prior to 6.0
cannot specify '%1' along with '%0'
cannot read configuration file '%0'
unable to open CC_PRINT_OPTIONS file: %0
the clang compiler does not support '%0'
the clang compiler does not support '%0' for C++ on Darwin/i386
the clang compiler does not support '%0', %1
the clang compiler does not support -pg option on %select{Darwin|versions of OS X 10.9 and later}0
%0 command failed with exit code %1 (use -v to see invocation)
unable to execute command: %0
%0 command failed due to signal (use -v to see invocation)
compilation database '%0' could not be opened: %1
configuration file '%0' does not exist
configuration file '%0' cannot be found
conflicting deployment targets, both '%0' and '%1' are present in environment
unsupported CUDA gpu architecture: %0
unsupported architecture '%0' for host compilation
GPU arch %0 is supported by CUDA versions between %1 and %2 (inclusive), but installation at %3 is %4; use '--cuda-path' to specify a different CUDA install, pass a different GPU arch with '--cuda-gpu-arch', or pass '--no-cuda-version-check'
OpenMP target device debugging enabled with incompatible runtime
defsym must be of the form: sym=value: %0
value is not an integer: %0
no more than one option '--config' is allowed
-emit-llvm cannot be used when linking
'-fopenmp-targets' must be used in conjunction with a '-fopenmp' option compatible with offloading; e.g., '-fopenmp=libomp' or '-fopenmp=libiomp5'
header file '%0' input '%1' does not match the type of prior input in api extraction; use '-x %2' to override
failing because %select{environment variable 'FORCE_CLANG_DIAGNOSTICS_CRASH' is set|'-gen-reproducer' is used}0
GNUstep Objective-C runtime version %0 incompatible with target binary format
OpenMP target architecture '%0' pointer size is incompatible with host '%1'
--rtlib=libgcc requires --unwindlib=libgcc
invalid Xarch argument: '%0', options requiring arguments are unsupported
invalid -Xopenmp-target argument: '%0', options requiring arguments are unsupported
invalid arch name '%0'
invalid argument '%0' to -%1
invalid CoreFoundation Runtime ABI '%0'; must be one of 'objc', 'standalone', 'swift', 'swift-5.0', 'swift-4.2', 'swift-4.1'
invalid Darwin version number: %0
invalid argument in '%0', only integer or 'auto' is supported
invalid output type '%0' for use with gcc tool
-mhvx-length is not supported without a -mhvx/-mhvx= flag
invalid integral value '%1' in '%0'
invalid deployment target for -stdlib=libc++ (requires %0 or later)
invalid linker name in argument '%0'
invalid argument '%0' to -malign-branch=; each element must be one of: %1
invalid float ABI '%0'
invalid thread pointer reading mode '%0'
OBJECT_MODE setting %0 is not recognized and is not a valid setting
OpenMP target is invalid: '%0'
invalid OS value '%0' in '%1'
cannot use '%0' output with multiple -arch options
invalid option '%0' not of the form <from-file>;<to-file>
invalid arch name '%0', %1
invalid arch name '%0', %1 '%2'
invalid runtime library name in argument '%0'
invalid library name in argument '%0'
'-msve-vector-bits' is not supported without SVE enabled
invalid thread model '%0' in '%1' for this target
invalid unwind library name in argument '%0'
invalid value '%1' in '%0'
invalid value '%1' in '%0', expected one of: %2
invalid version number in '%0'
LTO requires -fuse-ld=lld
malformed sanitizer coverage ignorelist: '%0'
malformed sanitizer coverage whitelist: '%0'
malformed sanitizer ignorelist: '%0'
option '-MG' requires '-M' or '-MM'
'-fminimize-whitespace' invalid for input of type %0
missing argument to '%0'
argument to '%0' is missing (expected %1 value%s1)
mixed CUDA and HIP compilation is not supported
header file '%0' input type '%1' does not match type of prior input in module compilation; use '-x %2' to override
option '-fmodules-validate-once-per-build-session' requires '-fbuild-session-timestamp=<seconds since Epoch>' or '-fbuild-session-file=<file>'
invalid value '%1' in '%0', value must be 'none' or a positive integer
option '--config' is not allowed inside configuration file
'%0': unable to use AST files with this tool
cannot find CUDA installation; provide its path via '--cuda-path', or pass '-nocudainc' to build without CUDA includes
cannot find libdevice for %0; provide path to different CUDA installation via '--cuda-path', or pass '-nocudalib' to build without linking with libdevice
cannot find HIP runtime; provide its path via '--rocm-path', or pass '-nogpuinc' to build without HIP runtime
no input files
'%0': unable to pass LLVM bit-code files to linker
'%0': unable to use module files with this tool
[no]neon is not accepted as modifier, please use [no]simd instead
cannot find ROCm device library%select{| for %1}0; provide its path via '--rocm-path' or '--rocm-device-lib-path', or pass '-nogpulib' to build without ROCm device library
no such file or directory: '%0'
no such file or directory: '%0'; did you mean '%1'?
provided host compiler IR file '%0' is required to generate code for OpenMP target regions but cannot be found
target '%0' is not a supported OpenMP host target
bitcode library '%0' does not exist
NVPTX target requires CUDA 9.2 or above; CUDA %0 detected
no library '%0' found in the default clang lib directory or in LIBRARY_PATH; use '--libomptarget-%1-bc-path' to specify %1 bitcode library
unknown remark serializer format: '%0'
in pattern '%1': %0
cannot specify '%0%1' when compiling multiple source files
cannot specify -o when generating multiple output files
incorrect format for -preamble-bytes=N,END
target '%0' does not support native pointer authentication
ROPI is not compatible with c++
embedded and GOT-based position independence are incompatible
invalid value '%1' in '%0', value must be '%2' or greater
unsupported '-target-variant' value '%0'; use 'ios-macabi' instead
'-ftrivial-auto-var-init-stop-after=*' only accepts positive integers
'-ftrivial-auto-var-init-stop-after=*' is used without '-ftrivial-auto-var-init=zero' or '-ftrivial-auto-var-init=pattern'
'-ftrivial-auto-var-init=zero' hasn't been enabled; enable it at your own peril for benchmarking purpose only with '-enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang'
unable to remove file: %0
unable to set working directory: %0
cannot determine AMDGPU architecture: %0; consider passing it via '--march'
unknown argument: '%0'
unknown argument '%0'; did you mean '%1'?
unknown '-mindirect-jump=' option '%0'
language not recognized: '%0'
unknown or ill-formed Objective-C runtime '%0'
-E or -x required when input is from standard input
use /Tc or /Tp to set input type for standard input
%0 is not supported with -fembed-bitcode
the second argument of '-fpatchable-function-entry' must be smaller than the first argument
'-mindirect-jump=%0' is unsupported with the '%1' architecture
unsupported value '%0' for -linker option
position-independent code requires '-mabicalls'
unsupported option '%0'
unsupported option '%0' for language mode '%1'
unsupported option '%0' for target '%1'
unsupported option '%0'; did you mean '%1'?
unsupported argument '%1' to option '%0'
unsupported runtime library '%0' for platform '%1'
unsupported use of internal gcc -Z option '%0'
invalid branch protection option '%0' in '%1'
invalid C++ ABI name '%0'
32-bit targets are not supported when building for Mac Catalyst
invalid sls hardening option '%0' in '%1'
there is no external assembler that can be used on this platform
-fobjc-weak is not supported on the current deployment target
-fobjc-weak is not supported in Objective-C garbage collection
-mharden-sls is only supported on armv7-a or later
'-fsanitize=memtag' requires hardware support (+memtag)
the target architecture '%0' is not supported by the target '%1'
-ftest-module-file-extension argument '%0' is not of the required form 'blockname:major:minor:hashed:user info'
C++ ABI '%0' is not supported on target triple '%1'
generated arguments #%0 in round-trip: %1
original arguments in round-trip: %0
AddressSanitizer doesn't support linking with debug runtime libraries yet
diagnostic msg: %0
was searched for in the directory: %0
the last '/TC' or '/TP' option takes precedence over earlier instances
use '%0'%select{| or '%3'|, '%3', or '%4'|, '%3', '%4', or '%5'}2 for '%1' standard
-verify prefixes must start with a letter and contain only alphanumeric characters, hyphens, and underscores
use '--' to treat subsequent arguments as filenames
generated arguments #%0 in round-trip: %1
-O4 is equivalent to -O3
ignoring -fapple-kext which is valid for C++ and Objective-C++ only
cannot compress debug sections (zlib not installed)
unknown platform, assuming -mfloat-abi=%0
support for linking stdlibs for microcontroller '%0' is not implemented
no avr-gcc installation can be found on the system, cannot link standard libraries
no avr-libc installation can be found on the system, cannot link standard libraries
support for passing the data section address to the linker for microcontroller '%0' is not implemented
no target microcontroller specified on command line, cannot link standard libraries, please pass -mmcu=<mcu name>
standard library not linked and so no interrupt vector table or compiler runtime routines will be linked
the clang compiler does not support '%0'
compiler_rt-static.a is being deprecated, please use -fapple-link-rtlib instead. Clang will substitute -lcompiler_rt-static with libclang_rt.a
SDK settings were ignored as 'SDKSettings.json' could not be parsed
argument '%0' is deprecated, use '%1' instead
libstdc++ is deprecated; move to libc++%select{ with a minimum deployment target of %1|}0
argument '%0' requires profile-guided optimization information
implicitly disabling vptr sanitizer because rtti wasn't enabled
debug information option '%0' is not supported; requires DWARF-%2 but target '%1' only provides DWARF-%3
joined argument expects additional value: '%0'
option '-ffine-grained-bitfield-accesses' cannot be enabled together with a sanitizer; flag ignored
'-fuse-ld=' taking a path is deprecated; use '--ld-path=' instead
-fglobal-isel support for the '%0' architecture is incomplete
-fglobal-isel support is incomplete for this architecture at the current optimization level
%0: '%1' input unused%select{ when '%3' is present|}2
%0: '%1' input unused in cpp mode
ignoring invalid /arch: argument '%0'; for %select{64|32}1-bit expected one of %2
include path for libstdc++ headers not found; pass '-stdlib=libc++' on the command line to use the libc++ standard library instead
'%0' does not support '-moutline-atomics'; flag ignored
'%0' does not support '-moutline'; flag ignored
the given MCU supports %0 hardware multiply, but '-mhwmult' is set to %1
no MCU device specified, but '-mhwmult' is set to 'auto', assuming no hardware multiply; use '-mmcu' to specify an MSP430 device, or '-mhwmult' to set the hardware multiply type explicitly
the given MCU does not support hardware multiply, but '-mhwmult' is set to %0
unable to find a Visual Studio installation; try running Clang from a developer command prompt
CUDA version%0 is newer than the latest%select{| partially}1 supported version %2
the object size sanitizer has no effect at -O0, but is explicitly enabled: %0
OpenMP offloading target '%0' is similar to target '%1' already specified; will be ignored
optimization level '%0' is not supported; using '%1%2' instead
overriding '%0' option with '%1'
CUDA version %0 is only partially supported
precompiled header '%0' was ignored because '%1' is not first '-include'
%0: previously preprocessed input%select{ unused when '%2' is present|}1
option '%0' was ignored by the PS4 toolchain, using '-fPIC'
environment variable SCE_ORBIS_SDK_DIR is set, but points to invalid or nonexistent directory '%0'
treating '%0' input as '%1' when in C++ mode, this behavior is deprecated
unable to find %0 directory, expected to be in '%1'
unknown argument ignored in clang-cl: '%0'
unknown argument ignored in clang-cl '%0'; did you mean '%1'?
debug information option '%0' is not supported for target '%1'
ignoring '-mgpopt' option as it cannot be used with %select{|the implicit usage of }0-mabicalls
ignoring '-mlong-calls' option as it is not currently supported with %select{|the implicit usage of }0-mabicalls
optimization flag '%0' is not supported for target '%1'
ignoring '%0' option as it cannot be used with %select{implicit usage of|}1 -mabicalls and the N64 ABI
ignoring '-msmall-data-limit=' with -mcmodel=large for -fpic or RV64
argument unused during compilation: '%0'
auto-vectorization requires HVX, use -mhvx to enable it
support for '/Yc' with more than one source file not implemented yet; flag ignored
support for '/Yc' and '/Yu' with different filenames not implemented yet; flags ignored
the flag '%0' has been deprecated and will be ignored
optimization flag '%0' is not supported
ignoring -fdiscard-value-names for LLVM Bitcode
ignoring invalid -ftabstop value '%0', using default value %1
ignoring -fverify-debuginfo-preserve-export=%0 because -fverify-debuginfo-preserve wasn't enabled
using sysroot for '%0' but targeting '%1'
invalid iOS deployment version '%0', iOS 10 is the maximum deployment target for 32-bit targets
no such sysroot directory: '%0'
'/U%0' treated as the '/U' option
ignoring '-mabs=2008' option because the '%0' architecture does not support it
ignoring '-mabs=legacy' option because the '%0' architecture does not support it
ignoring '-mcompact-branches=' option because the '%0' architecture does not support it
ignoring extension '%0' because the '%1' architecture does not support it
ignoring '-mnan=2008' option because the '%0' architecture does not support it
ignoring '-mnan=legacy' option because the '%0' architecture does not support it
%select{alias|ifunc}0 must point to a defined %select{variable or |}1function
AVX vector %select{return|argument}0 of type %1 without '%2' enabled changes the ABI
%0 needs target feature %1
%select{alias|ifunc}0 definition is part of a cycle
definition with same mangled name '%0' as another definition
action %0 not compiled in
call to %0 declared with 'error' attribute: %1
-dependency-file requires at least one -MT or -MQ option
error in backend: %0
error opening '%0': %1
error reading '%0'
error reading stdin: %0
expected a clang compiler command
unable to handle compilation, expected exactly one compiler job in '%0'
invalid value '%1' in '%0'; alignment must be a power of 2
cannot locate code-completion file %0
invalid exception model '%select{none|sjlj|seh|dwarf|wasm}0' for target '%1'
unable to find plugin '%0'
cannot link module '%0': %1
no suitable precompiled header file found in directory '%0'
could not remap from missing file '%0'
could not remap file '%0' to the contents of file '%1'
unable to create target: '%0'
unable to interface with target machine
unable to load basic block sections function list: '%0'
unable to load PCH file
unable to load plugin '%0': '%1'
unable to open output file '%0': '%1'
initializing value is out of valid range
always_inline function %1 requires target feature '%2', but would be inlined into function %0 that is compiled without support for '%2'
header module compilation requires '-fmodules', '-std=c++20', or '-fmodules-ts'
ifunc resolver function must return a pointer
inline asm is used in the module with -fno-gnu-inline-asm
invalid virtual filesystem overlay file '%0'
no module named '%0' declared in module map file '%1'
no module name provided; specify one with -fmodule-name=
virtual filesystem overlay file '%0' not found
module compilation requires '-fmodules'
cannot create includes file for module %0: %1
module header file '%0' not found
module interface compilation requires '-std=c++20' or '-fmodules-ts'
module map file '%0' not found
file '%0' specified by '-fmodules-embed-file=' not found
-fapinotes was provided without -fmodules-cache-path=<directory>
no submodule named %0 in module '%1'
no submodule named %0 in module '%1'; did you mean '%2'?
must specify system root with -isysroot when building a relocatable PCH file
test module file extension '%0' has different version (%1.%2) than expected (%3.%4)
reference to marker '%0' is ambiguous
'%0' diagnostics %select{expected|seen}1 but not %select{seen|expected}1: %2
invalid expected %0: %1
%select{expected|'expected-no-diagnostics'}0 directive cannot follow %select{'expected-no-diagnostics' directive|other expected directives}0
invalid range following '-' in expected %0
cannot find end ('}}') of expected %0
file '%0' could not be located in expected %1
missing or invalid line number following '@' in expected %0
cannot find start of regex ('{{') in %0
cannot find start ('{{') of expected %0
no expected directives found: consider use of 'expected-no-diagnostics'
use of undefined marker '%0'
qualifier 'const' is needed for variables in address space '%0'
firebloom is supported only for C language
could not determine the original source location for %0:%1:%2
instantiated into assembly here
linking module '%0': %1
FIX-IT applied suggested code changes
FIX-IT unable to apply suggested code changes
FIX-IT unable to apply suggested code changes in a macro
FIX-IT detected an error it cannot fix
current API version is '%0', but plugin was compiled with version '%1'
macro was %select{defined|#undef'd}0 here
module imported here
module defined here
ambiguous marker '%0' is defined here
%0; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop. If the arrays will always be independent specify '#pragma clang loop vectorize(assume_safety)' before the loop or provide the '__restrict__' qualifier with the independent array arguments. Erroneous results will occur if these options are incorrectly applied!
%0; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'.
producing index data for module file '%0'
building module '%0' as '%1'
finished building module '%0'
locking '%0' to build module '%1'
%select{alias|ifunc}2 will always resolve to %0 even if weak definition of %1 is overridden
%select{alias|ifunc}1 will not be in section '%0' but in the same section as the %select{aliasee|resolver}2
misaligned atomic operation may incur significant performance penalty; the expected alignment (%0 bytes) exceeds the actual alignment (%1 bytes)
large atomic operation may incur significant performance penalty; the access size (%0 bytes) exceeds the max lock-free size (%1  bytes)
AVX vector %select{return|argument}0 of type %1 without '%2' enabled changes the ABI
-fbounds-attributes-cxx-experimental without -fbounds-attributes is ignored
overriding currently unsupported use of floating point exceptions on this target
overriding currently unsupported rounding mode on this target
call to %0 declared with 'warning' attribute: %1
unable to open CC_LOG_DIAGNOSTICS file: %0 (using stderr)
unable to open CC_PRINT_HEADERS file: %0 (using stderr)
-fconcepts-ts is deprecated - use '-std=c++20' for Concepts support
stack frame size (%0) exceeds limit (%1) in '%2'
linking module '%0': %1
macro '%0' contains embedded newline; text after the newline is ignored
overriding the module target triple with %0
unable to open file %0 for serializing diagnostics (%1)
Received warning after diagnostic serialization teardown was underway: %0
unable to merge a subprocess's serialized diagnostics
unable to open statistics output file '%0': '%1'
FIX-IT detected errors it could not fix; no output will be generated
checker plugin '%0' is not compatible with this version of the analyzer
missing submodule '%0'
%select{definition|#undef}0 of configuration macro '%1' has no effect on the import of '%2'; pass '%select{-D%1=...|-U%1}0' on the command line to configure the module
module file %0 cannot be loaded due to a configuration mismatch with the current compilation
no submodule named %0 in module '%1'; using top level '%2'
%0 does not support the option '%1'
profile data may be incomplete: of %0 function%s0, %1 %plural{1:has|:have}1 no data
profile data may be out of date: of %0 function%s0, %1 %plural{1:has|:have}1 mismatched data that will be ignored
no profile data available for file "%0"
unknown %select{warning|remark}0 option '%1'%select{|; did you mean '%3'?}2
unknown %0 warning specifier: '%1'
file '%1' is not a valid precompiled %select{PCH|module|AST}0 file
%select{PCH|module|AST}0 file '%1' not found%select{|: %3}2
%select{PCH|module|AST}0 file '%1' is out of date and needs to be rebuilt%select{|: %3}2
file '%0' has been modified since the %select{precompiled header|module file|AST file}1 '%2' was built: %select{size|mtime|content}3 changed%select{| (was %5, now %6)}4
input is not a PCH file: '%0'
file '%0' from the precompiled header has been overridden
malformed or corrupted AST file: '%0'
malformed block record in PCH file: '%0'
unable to read PCH file %0: '%1'
module '%0' %select{in|imported by}4 AST file '%1' found in a different module map file (%2) than when the importing AST file was built (%3)
module '%0' in AST file '%1' %select{(imported by AST file '%2') |}4is not defined in any loaded module map file; maybe you need to load '%3'?
module '%0' was built in directory '%1' but now resides in directory '%2'
module '%0' %select{uses|does not use}1 additional module map '%2'%select{| not}1 used when the module was built
module '%0' is defined in both '%1' and '%2'
module file '%0' is missing its top-level submodule
AST file '%0' was not built as a module
cannot emit module %0: %select{size|mtime}1 must be explicitly specified for missing header file "%2"
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{%4 base %plural{1:class|:classes}4|%4 virtual base %plural{1:class|:classes}4|%ordinal4 base class with type %5|%ordinal4 %select{non-virtual|virtual}5 base class %6|%ordinal4 base class %5 with %select{public|protected|private|no}6 access specifier}3
%q0 has different definitions in different modules; %select{definition in module '%2' is here|defined here}1
instantiation of %q0 is different in different modules
%q0 has different definitions in different modules; %select{definition in module '%2'|defined here}1 first difference is %select{enum that is %select{not scoped|scoped}4|enum scoped with keyword %select{struct|class}4|enum %select{without|with}4 specified type|enum with specified type %4|enum with %4 element%s4|%ordinal4 element has name %5|%ordinal4 element %5 %select{has|does not have}6 an initilizer|%ordinal4 element %5 has an initializer|}3
%q0 has different definitions in different modules; %select{definition in module '%2'|defined here}1 first difference is %select{return type is %4|%ordinal4 parameter with name %5|%ordinal4 parameter with type %5%select{| decayed from %7}6|%ordinal4 parameter with%select{out|}5 a default argument|%ordinal4 parameter with a default argument|function body}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{end of class|public access specifier|private access specifier|protected access specifier|static assert|field|method|type alias|typedef|data member|friend declaration|function template|method|instance variable|property}3
%0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{static assert with condition|static assert with message|static assert with %select{|no }4message|field %4|field %4 with type %5|%select{non-|}5bitfield %4|bitfield %4 with one width expression|%select{non-|}5mutable field %4|field %4 with %select{no|an}5 initalizer|field %4 with an initializer|%select{method %5|constructor|destructor}4|%select{method %5|constructor|destructor}4 is %select{not deleted|deleted}6|%select{method %5|constructor|destructor}4 is %select{not defaulted|defaulted}6|%select{method %5|constructor|destructor}4 is %select{|pure }6%select{not virtual|virtual}7|%select{method %5|constructor|destructor}4 is %select{not static|static}6|%select{method %5|constructor|destructor}4 is %select{not volatile|volatile}6|%select{method %5|constructor|destructor}4 is %select{not const|const}6|%select{method %5|constructor|destructor}4 is %select{not inline|inline}6|%select{method %5|constructor|destructor}4 that has %6 parameter%s6|%select{method %5|constructor|destructor}4 with %ordinal6 parameter of type %7%select{| decayed from %9}8|%select{method %5|constructor|destructor}4 with %ordinal6 parameter named %7|%select{method %5|constructor|destructor}4 with %ordinal6 parameter with%select{out|}7 a default argument|%select{method %5|constructor|destructor}4 with %ordinal6 parameter with a default argument|%select{method %5|constructor|destructor}4 with %select{no |}6template arguments|%select{method %5|constructor|destructor}4 with %6 template argument%s6|%select{method %5|constructor|destructor}4 with %6 for %ordinal7 template argument|%select{method %5|constructor|destructor}4 with %select{no body|body}6|%select{method %5|constructor|destructor}4 with body|%select{typedef|type alias}4 name %5|%select{typedef|type alias}4 %5 with underlying type %6|data member with name %4|data member %4 with type %5|data member %4 with%select{out|}5 an initializer|data member %4 with an initializer|data member %4 %select{is constexpr|is not constexpr}5|friend %select{class|function}4|friend %4|friend function %4|function template %4 with %5 template parameter%s5|function template %4 with %ordinal5 template parameter being a %select{type|non-type|template}6 template parameter|function template %4 with %ordinal5 template parameter %select{with no name|named %7}6|function template %4 with %ordinal5 template parameter with %select{no |}6default argument|function template %4 with %ordinal5 template parameter with default argument %6|function template %4 with %ordinal5 template parameter with one type|function template %4 with %ordinal5 template parameter %select{not |}6being a template parameter pack|return type is %4|method name %4|%select{class|instance}4 method|method with %select{no designater initializer|designater initializer}4|%select{no direct|direct}4 method|instance variable '%4' access control is %select{|@private|@protected|@public|@package}5|property name %4|property %4 with type %5|%select{default |}5'%select{none|readonly|getter|assign|readwrite|retain|copy|nonatomic|setter|atomic|weak|strong|unsafe_unretained|nullability|null_resettable|class|}4' property attribute|%select{no|'required'|'optional'}4 %select{property|method}5 control|with %ordinal4 protocol named %5|%select{no attribute|%5}4|}3
%q0 %select{with definition in module '%2'|defined here}1 has different definitions in different modules; first difference is this %select{||||static assert|field|method|type alias|typedef|data member|friend declaration|unexpected decl|method|instance variable|property}3
%q0 from module '%1' is not present in definition of %q2%select{ in module '%4'| provided earlier}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{%select{no super class|super class with type %5}4|%4 referenced %plural{1:protocol|:protocols}4|}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{unnamed template parameter|template parameter %4|template parameter with %select{no |}4default argument|template parameter with default argument}3
failed to hash content for '%0' because memory buffer cannot be retrieved
%0 is currently enabled, but was not in the PCH file
PCH file built from a different branch (%0) than the compiler (%1)
%0 was %select{disabled|enabled}1 in PCH file but is currently %select{disabled|enabled}2
%0 differs in PCH file vs. current file
definition of macro '%0' differs between the precompiled header ('%1') and the command line ('%2')
macro '%0' was %select{defined|undef'd}1 in the precompiled header but %select{undef'd|defined}1 on the command line
PCH was compiled with module cache path '%0', but the path is currently '%1'
%select{command line contains|precompiled header was built with}0 '-detailed-preprocessing-record' but %select{precompiled header was not built with it|it is not present on the command line}0
%select{AST file was|current translation unit is}0 compiled with the target feature '%1' but the %select{current translation unit is|AST file was}0 not
PCH file was compiled for the %0 '%1' but the current translation unit is being compiled for target '%2'
%select{command line contains|precompiled header was built with}0 '-undef' but %select{precompiled header was not built with it|it is not present on the command line}0
PCH file uses a newer PCH format that cannot be read
PCH file uses an older PCH format that is no longer supported
PCH file contains compiler errors
in first definition, possible difference is here
consider adding '%0' to the header search path
after modifying system headers, please delete the module cache at '%0'
this is generally caused by modules with the same name found in multiple paths
imported by %select{|module '%2' in }1'%0'
but in '%0' found %select{%2 base %plural{1:class|:classes}2|%2 virtual base %plural{1:class|:classes}2|%ordinal2 base class with different type %3|%ordinal2 %select{non-virtual|virtual}3 base class %4|%ordinal2 base class %3 with %select{public|protected|private|no}4 access specifier}1
definition in module '%0' is here
but in '%0' found %select{enum that is %select{not scoped|scoped}2|enum scoped with keyword %select{struct|class}2|enum %select{without|with}2 specified type|enum with specified type %2|enum with %2 element%s2|%ordinal2 element has name %3|%ordinal2 element %3 %select{has|does not have}4 an initializer|%ordinal2 element %3 has different initializer|}1
but in '%0' found %select{different return type %2|%ordinal2 parameter with name %3|%ordinal2 parameter with type %3%select{| decayed from %5}4|%ordinal2 parameter with%select{out|}3 a default argument|%ordinal2 parameter with a different default argument|a different body}1
but in '%0' found %select{end of class|public access specifier|private access specifier|protected access specifier|static assert|field|method|type alias|typedef|data member|friend declaration|function template|method|instance variable|property}1
but in '%0' found %select{static assert with different condition|static assert with different message|static assert with %select{|no }2message|field %2|field %2 with type %3|%select{non-|}3bitfield %2|bitfield %2 with different width expression|%select{non-|}3mutable field %2|field %2 with %select{no|an}3 initializer|field %2 with a different initializer|%select{method %3|constructor|destructor}2|%select{method %3|constructor|destructor}2 is %select{not deleted|deleted}4|%select{method %3|constructor|destructor}2 is %select{not defaulted|defaulted}4|%select{method %3|constructor|destructor}2 is %select{|pure }4%select{not virtual|virtual}5|%select{method %3|constructor|destructor}2 is %select{not static|static}4|%select{method %3|constructor|destructor}2 is %select{not volatile|volatile}4|%select{method %3|constructor|destructor}2 is %select{not const|const}4|%select{method %3|constructor|destructor}2 is %select{not inline|inline}4|%select{method %3|constructor|destructor}2 that has %4 parameter%s4|%select{method %3|constructor|destructor}2 with %ordinal4 parameter of type %5%select{| decayed from %7}6|%select{method %3|constructor|destructor}2 with %ordinal4 parameter named %5|%select{method %3|constructor|destructor}2 with %ordinal4 parameter with%select{out|}5 a default argument|%select{method %3|constructor|destructor}2 with %ordinal4 parameter with a different default argument|%select{method %3|constructor|destructor}2 with %select{no |}4template arguments|%select{method %3|constructor|destructor}2 with %4 template argument%s4|%select{method %3|constructor|destructor}2 with %4 for %ordinal5 template argument|%select{method %3|constructor|destructor}2 with %select{no body|body}4|%select{method %3|constructor|destructor}2 with different body|%select{typedef|type alias}2 name %3|%select{typedef|type alias}2 %3 with different underlying type %4|data member with name %2|data member %2 with different type %3|data member %2 with%select{out|}3 an initializer|data member %2 with a different initializer|data member %2 %select{is constexpr|is not constexpr}3|friend %select{class|function}2|friend %2|friend function %2|function template %2 with %3 template parameter%s3|function template %2 with %ordinal3 template paramter being a %select{type|non-type|template}4 template parameter|function template %2 with %ordinal3 template parameter %select{with no name|named %5}4|function template %2 with %ordinal3 template parameter with %select{no |}4default argument|function template %2 with %ordinal3 template parameter with default argument %4|function template %2 with %ordinal3 template parameter with different type|function template %2 with %ordinal3 template parameter %select{not |}4being a template parameter pack|different return type %2|method name %2|%select{class|instance}2 method|method with %select{no designater initializer|designater initializer}2|%select{no direct|direct}2 method|instance variable '%2' access control is %select{|@private|@protected|@public|@package}3|property name %2|property %2 with type %3|no written or default attribute for property|%select{no|'required'|'optional'}2 %select{property|method}3 control|with %ordinal2 protocol named %3|%select{no attribute|%3}2|}1
but in '%0' found %select{||||different static assert|different field|different method|different type alias|different typedef|different data member|different friend declaration|another unexpected decl|method|instance variable|property}1
definition has no member %0
but in '%0' found %select{%select{no super class|super class with type %3}2|%2 referenced %plural{1:protocol|:protocols}2|}1
declaration of %0 does not match
but in '%0' found %select{unnamed template parameter %2|template parameter %2|template parameter with %select{no |}2default argument|template parameter with different default argument}1
please rebuild precompiled header '%0'
'%0' required by '%1'
in second definition, possible difference is here
importing module '%0'%select{| into '%3'}2 from '%1'
duplicate module file extension block name '%0'
module file '%0' was validated as a system module and is now being imported as a non-system module; any difference in diagnostic options will be ignored
%select{precompiled header|module}0 uses __DATE__ or __TIME__
backslash and newline separated by space
_Pragma takes a parenthesized string literal
illegal character encoding in character literal
illegal character encoding in string literal
unexpected character <U+%0>
character <U+%0> not allowed %select{in|at the start of}1 an identifier
character too large for enclosing character literal type
version control conflict marker in file
'defined' cannot be used as a macro name
delimited escape sequence cannot be empty
invalid digit '%0' in escape sequence
expected '{' after '\%0' escape sequence
could not find ';' after @import
unexpected extra tokens at end of @import declaration
digit separator cannot appear at %select{start|end}0 of digit sequence
embedding a #%0 directive within macro arguments is not supported
%select{hex|octal}0 escape sequence out of range
expected a module name in '__building_module' expression
exponent has no digits
builtin feature check macro requires a parenthesized identifier
header file %0 (aka '%1') cannot be imported because it is not known to be a header unit
semicolon terminating header import declaration cannot be produced by a macro
hexadecimal floating %select{constant|literal}0 requires %select{an exponent|a significand}1
\%0 used with no following hex digits
invalid character '%0' character in raw string delimiter; use PREFIX( )PREFIX to delimit raw string
invalid argument to convert to character
invalid digit '%0' in %select{decimal|octal|binary}1 constant
invalid suffix '%0' on %select{integer|floating|fixed-point}1 constant
source file is not valid UTF-8
failure when lexing a string
configuration macros are only allowed in top-level modules
conflicting re-export of module '%0' as '%1' or '%2'
header attribute '%0' specified multiple times
expected an attribute name
expected configuration macro name after ','
expected ',' after conflicting module name
expected a message describing the conflict with '%0'
only '*' can be exported from an inferred submodule
expected a feature name
expected a header name after '%0'
expected a header attribute name ('size' or 'mtime')
expected %select{module exclusion with 'exclude'|'export *'}0
expected '{' to start module '%0'
expected '{' to start inferred submodule
expected %select{library|framework}0 name as a string
expected umbrella, header, submodule, or module export
expected a module map file name
expected module declaration
expected module name
expected '}'
expected ']' to close attribute
inferred framework modules cannot be 'explicit'
'explicit' is not permitted on top-level modules
inferred submodule cannot be a framework submodule
inferred submodules require a module with an umbrella
redefinition of inferred submodule
expected integer literal as value for header attribute '%0'
expected excluded module name
no module named '%0' in '%1'
no module named '%0' visible from '%1'
no module named '%0' %select{found|in '%2'}1, parent module must be defined before the submodule
expected a module name or '*'
redefinition of module '%0'
qualified module name can only be used to define modules at the top level
only top-level modules can be re-exported as public
only submodules and framework modules may be inferred with wildcard syntax
umbrella for module '%0' already covers this directory
skipping stray token
use declarations are only allowed in top-level modules
%select{wide|Unicode}0 character literals may not contain multiple characters
Pascal string is too long
'##' cannot appear at end of macro expansion
'##' cannot appear at start of macro expansion
editor placeholder in source file
expected 'set(attr1 [attr2 ...])'
expected 'begin' or 'end'
expected 'begin' or 'end'
pasting formed '%0', an invalid preprocessing token
':' without preceding '?'
%0 must be used within a preprocessing directive
division by zero in preprocessor expression
already inside '#pragma clang arc_cf_code_audited'
already inside '#pragma clang assume_nonnull'
duplicate macro parameter name %0
empty filename
#endif without #if
'#pragma clang arc_cf_code_audited' was not ended within this file
'#pragma clang assume_nonnull' was not ended within this file
error opening file '%0': %1
missing %1 after %0
expected comma in macro parameter list
expected end of line in preprocessor expression
expected identifier in macro parameter list
expected %select{identifier after '.' in |}0module name
expected ')' in preprocessor expression
expected value in expression
expected "FILENAME" or <FILENAME>
token is not a valid binary operator in a preprocessor subexpression
function-like macro %0 is not defined
invalid token at start of a preprocessor expression
'%0' file not found
'%0' file not found with <angled> %select{include|import}1; use "quotes" instead
'%0' file not found, did you mean '%1'?
cannot convert %0 token to an identifier
floating point literal in preprocessor expression
#import of type library is an unsupported Microsoft feature
cannot %select{#include files|import headers}0 inside '#pragma clang arc_cf_code_audited'
cannot %select{#include files|import headers}0 inside '#pragma clang assume_nonnull'
#include nested too deeply
main file cannot be included recursively when building a preamble
invalid preprocessing directive
can only poison identifier tokens
invalid token in macro parameter list
%select{character|integer}0 literal with user-defined suffix cannot be used in preprocessor constant expression
%select{#line|GNU line marker}0 directive requires a simple digit sequence
invalid filename for #line directive
#line directive requires a positive integer argument
invalid filename for line marker directive
invalid flag line marker directive
invalid line marker flag '2': cannot pop empty include stack
line marker directive requires a positive integer argument
macro name must be an identifier
invalid #ident directive
missing '(' following __VA_OPT__
macro name missing
missing ')' in macro parameter list
no module map available for module %0
submodule %0.%1 not declared in module map
no matching '#pragma clang module end' for this '#pragma clang module begin'
must specify '-fmodule-name=%0' to enter %select{|submodule of }1this module%select{ (current module is %3)|}2
no matching '#pragma clang module endbuild' for this '#pragma clang module build'
no matching '#pragma clang module begin' for this '#pragma clang module end'
nested parentheses not permitted in %0
C++ operator %0 (aka %1) used as a macro name
#pragma hdrstop not seen while attempting to use precompiled header
remainder by zero in preprocessor expression
'%select{#|#@}0' is not followed by a macro parameter
'%0' required for precompiled header not found
#include of '%0' not seen while attempting to %select{create|use}1 precompiled header
not currently inside '#pragma clang arc_cf_code_audited'
not currently inside '#pragma clang assume_nonnull'
unterminated conditional directive
attempt to use a poisoned identifier
__VA_OPT__ cannot be nested within its own replacement tokens
no macro named %0
'#pragma clang include_instead' cannot be used outside of system headers
header '%0' is an implementation detail; #include %select{'%2'|either '%2' or '%3'|one of %2}1 instead
pragma %select{message|warning|error}0 requires parenthesized string
pragma %0 requires a parenthesized string
raw string delimiter longer than 16 characters; use PREFIX( )PREFIX to delimit raw string
differing user-defined suffixes ('%0' and '%1') in string literal concatenation
too few arguments provided to function-like macro invocation
too many arguments provided to function-like macro invocation
universal character name refers to a control character
character '%0' cannot be specified by a universal character name
incomplete universal character name
invalid universal character
module %0 does not depend on a module exporting '%1'
unsupported non-standard concatenation of string literals
unterminated function-like macro invocation
missing terminating ')' character
unterminated /* comment
raw string missing terminating delimiter )%0"
'##' cannot appear at end of __VA_OPT__ argument
'##' cannot appear at start of __VA_OPT__ argument
escaped newline between */ characters at block comment end
binary integer literals are a GNU extension
binary integer literals are a C++14 extension
ISO C99 requires whitespace after the macro name
charizing operator #@ is a Microsoft extension
pasting two '/' tokens into a '//' comment is a Microsoft extension
treating Ctrl-Z as end-of-file is a Microsoft extension
delimited escape sequences are a Clang extension
'$' in identifier
embedding a directive within macro arguments has undefined behavior
empty character constant
empty macro arguments are a C99 feature
hexadecimal floating constants are a C99 feature
hexadecimal floating literals are a C++17 feature
// comments are not allowed in this language
must specify at least one argument for '...' parameter of variadic macro
whitespace required after macro name
invalid suffix on literal; C++11 requires a space between literal and identifier
multi-line // comment
named variadic macros are a GNU extension
no newline at end of file
use of non-standard escape character '\%0'
expected 'ON' or 'OFF' or 'DEFAULT' in pragma
token pasting of ',' and __VA_ARGS__ is a GNU extension
pasting formed '%0', an invalid preprocessing token
__VA_ARGS__ can only appear in the expansion of a C99 variadic macro
__VA_OPT__ can only appear in the expansion of a variadic macro
comma operator in operand of #if
extra tokens at end of #%0 directive
#ident is a language extension
#import is a language extension
#include_next is a language extension
#include resolved using non-portable Microsoft search rules as: %0
C requires #line number to be less than %0, allowed as extension
#line directive with zero argument is a GNU extension
%0 macro redefined
variadic macros are a Clang extension in OpenCL
C++ operator %0 (aka %1) used as a macro name
redefining builtin macro
undefining builtin macro
#warning is a language extension
expected end of directive in pragma
invalid suffix on literal; C++11 requires a space between literal and identifier
string literal of length %0 exceeds maximum length %1 that %select{C90|ISO C99|C++}2 compilers are required to support
extension used
treating Unicode character as whitespace
unknown escape sequence '\%0'
missing terminating %select{'|'"'}0 character
variadic macros are a C99 feature
%0 is defined here; did you mean %1?
submodule of top-level module '%0' implicitly imported here
cannot use initializer list at the beginning of a macro argument
expansion of macro %0 requested here
macro %0 defined here
use 'framework module' to declare module '%0'
to match this '{'
to match this ']'
previously defined here
rename '%0' to ensure it can be found by name
expanding this definition of %0
other definition of %0
did not find header '%0' in framework '%1' (loaded from '%2')
macro marked '%select{deprecated|restrict_expansion|final}0' here
entering module '%0' due to this pragma
parentheses are required around macro argument containing braced initializer list
did you mean to use '\u'?
null character(s) preserved in %select{char|string}0 literal
null character ignored
disabled expansion of recursive macro
%select{#elif|#elifdef|#elifndef}0 after #else
%select{#elif|#elifdef|#elifndef}0 without #if
#else after #else
#else without #if
the #__include_macros directive is only for internal use by -imacros
#include_next in file found relative to primary source file or found by absolute path; will search from start of include path
#include_next in primary source file; will search from start of include path
invalid string literal, ignoring final '\'
macro is not used
non-portable path to file '%0'; specified path differs in case from file name on disk
non-portable path to file '%0'; specified path differs in case from file name on disk
current file is older than dependency %0
poisoning existing macro
#pragma once in main file
#pragma system_header ignored in main file
search path used: '%0'
trigraph converted to '%0' character
trigraph ends block comment
trigraph ignored
ignored trigraph would end block comment
treating #%select{include|import|include_next|__include_macros}0 as an import of module '%1'
illegal character encoding in character literal
illegal character encoding in string literal
digit separators are incompatible with C standards before C2x
%select{using this character in an identifier|starting an identifier with this character}0 is incompatible with C99
unicode literals are incompatible with C99
character constant too long for its type
binary integer literals are incompatible with C++ standards before C++14
digit separators are incompatible with C++ standards before C++14
identifier after literal will be treated as a reserved user-defined literal suffix in C++11
identifier after literal will be treated as a user-defined literal suffix in C++11
'%0' is a keyword in C++11
unicode literals are incompatible with C++ standards before C++17
passing no argument for the '...' parameter of a variadic macro is incompatible with C++ standards before C++20
'<=>' operator is incompatible with C++ standards before C++20
hexadecimal floating literals are incompatible with C++ standards before C++17
'<=>' is a single token in C++20; add a space to avoid a change in behavior
'%0' is a keyword in C++20
empty macro arguments are incompatible with C++98
'<::' is treated as digraph '<:' (aka '[') followed by ':' in C++98
universal character name referring to a control character is incompatible with C++98
specifying character '%0' with a universal character name is incompatible with C++98
C++98 requires newline at end of file
#line number greater than 32767 is incompatible with C++98
raw string literals are incompatible with C++98
unicode literals are incompatible with C++98
variadic macros are incompatible with C++98
macro expansion producing 'defined' has undefined behavior
macro expansion producing 'defined' has undefined behavior
empty delimited universal character name; treating as '\' 'u' '{' '}'
incomplete delimited universal character name; treating as '\' 'u' '{' identifier
multi-character character constant
public framework header includes private framework header '%0'
__has_warning expected option name (e.g. "-Wundef")
%0 is used as a header guard here, followed by #define of a different macro
whitespace recommended after macro name
skipping '%0' because module declaration of '%1' lacks the 'framework' qualifier
expected canonical name for private module '%0'
private submodule '%0' in private module map, expected top-level module
module '%0' already re-exported as '%1'
umbrella directory '%0' not found
unknown attribute '%0'
module '%0' conflicts with already-imported module '%1': %2
multi-character character constant
'/*' within block comment
no newline at end of file
include of non-modular header inside framework module '%0': '%1'
include of non-modular header inside module '%0': '%1'
ambiguous expansion of macro %0
%select{left|right}0 side of operator converted from negative value to unsigned: %1
expansion of date or time macro is not reproducible
integer overflow in preprocessor expression
#pragma hdrstop filename not supported, /Fp can be used to specify precompiled header filename
%select{#line|GNU line marker}0 directive interprets number as decimal, not octal
definition of macro %0 does not match definition in precompiled header
keyword is hidden by macro definition
macro name is a reserved identifier
ignoring redefinition of Objective-C qualifier macro
%0 is not defined, evaluates to 0
%0 is not defined, evaluates to 0
missing argument to debug command '%0'
unexpected debug command '%0'
unknown module '%0'
macro %0 has been marked as deprecated%select{|: %2}1
pragma diagnostic pop could not pop, no matching push
pragma diagnostic expected 'error', 'warning', 'ignored', 'fatal', 'push', or 'pop'
pragma diagnostic expected option name (e.g. "-Wundef")
unexpected token in pragma diagnostic
unknown warning group '%0', ignored
#pragma execution_character_set expected '%0'
#pragma execution_character_set invalid value '%0', only 'UTF-8' is supported
#pragma execution_character_set expected 'push' or 'pop'
macro %0 has been marked as final and should not be %select{undefined|redefined}1
unknown pragma ignored
pragma include_alias expected '%0'
pragma include_alias expected include filename
angle-bracketed include <%0> cannot be aliased to double-quoted include "%1"
double-quoted include "%0" cannot be aliased to angle-bracketed include <%1>
pragma pop_macro could not pop '%0', no matching push_macro
macro %0 has been marked as unsafe for use in headers%select{|: %2}1
#pragma warning expected '%0'
#pragma warning expected a warning number
#pragma warning(push, level) requires a level between 0 and 4
#pragma warning expected 'push', 'pop', 'default', 'disable', 'error', 'once', 'suppress', 1, 2, 3, or 4
double-quoted include "%0" in framework header, expected angle-bracketed instead
incomplete universal character name; treating as '\' followed by identifier
\%0 used with no following hex digits; treating as '\' followed by identifier
universal character name refers to a surrogate character
universal character names are only valid in C99 or C++; treating as '\' followed by identifier
universal character names are only valid in C99 or C++
umbrella header for module '%0' does not include header '%1'
use of private header from outside its module: '%0'
treating Unicode character <U+%0> as identifier character rather than as '%1' symbol
identifier contains Unicode character <U+%0> that is invisible in some environments
interface types cannot specify '%select{private|protected}0' access
use of address-of-label extension outside of a function body
name defined in alias declaration must be an identifier
alias declaration cannot be a pack expansion
%select{partial specialization|explicit specialization|explicit instantiation}0 of alias templates is not permitted
anonymous bit-field cannot have a default member initializer
declaration of anonymous %0 must be a definition
ISO C++ only allows ':' in member enumeration declaration to introduce a fixed underlying type, not an anonymous bit-field
unknown cast annotation __bridge_retain; did you mean __bridge_retained?
argument required after attribute
duplicate asm qualifier '%0'
__asm used with no assembly instructions
cannot use %select{unicode|wide|an empty}0 string literal in 'asm'
expected 'volatile', 'inline', 'goto', or '('
@defs is not supported in Objective-C++
unexpected '@' in member specification
use of '@import' when modules are disabled
use of '@import' when C++ modules are disabled, consider using -fmodules and -fcxx-modules
%0 attribute cannot be applied to a module import
%0 attribute cannot be applied to a module
parentheses must be omitted if %0 attribute's argument list is empty
misplaced attributes; expected attributes here
an attribute list cannot appear here
expected a platform name here
unrecognized platform name %0
expected 'introduced', 'deprecated', or 'obsoleted'
expected a platform name, e.g., 'macos'
version for '%0' already specified
'*' query has already been specified
must handle potential future platforms with '*'
redundant %0 availability change; only the last specified change will be used
%0 is not an availability stage; use 'introduced', 'deprecated', or 'obsoleted'
redeclaration of C++ built-in type 'bool'
bracket nesting level exceeded maximum of %0
brackets are not allowed here; to declare an array, place the brackets after the %select{identifier|name}0
'_Noreturn' keyword must precede function declarator
capture default must be first
template template parameter requires 'class'%select{| or 'typename'}0 after the parameter list
name defined in concept definition must be an identifier
missing return type for function %0; did you mean the constructor name %1?
missing ',' between base or member initializers
attribute %0 cannot have an argument list
attribute %0 cannot be used as an attribute pack
declaration does not declare a parameter
'%0' qualifier may not appear after the virtual specifier '%1'
unexpected end of default argument expression
'= %select{default|delete}0' is a function definition and must occur in a standalone declaration
default template argument for a template template parameter must be a class template
destructor name %0 does not refer to a template
expected a class name after '~' to name a destructor
'~' in destructor name should be after nested name specifier
duplicate 'virtual' in base specifier
class already marked '%0'
duplicate default generic association
class member already marked '%0'
cannot have both throw() and noexcept() clause on the same function
use of empty enum
a requires expression must contain at least one requirement
missing ',' between enumerators
unnamed enumeration must be a definition
unexpected end of exception specification
'#pragma omp end assumes' with no matching '#pragma omp begin assumes'
'#pragma omp end declare variant' with no matching '#pragma omp begin declare variant'
expected variable name or 'this' in lambda capture list
expected 'case' keyword before expression
expected catch
expected class name
'typename' is redundant; base classes are implicitly types
expected '::' after '__super'
expected ',' or '>' in template-parameter-list
expected ',' or ']' in lambda capture list
expected '#pragma omp end declare %select{target|variant}0'
expected '= constant-expression' or end of enumerator definition
expected '=' or another designator
expected expression
expected external declaration
expected a field designator, such as '.field = 4'
expected function body after function declarator
expected a foldable binary operator in fold expression
variable declaration in condition must have an initializer
variable declaration in condition cannot have a parenthesized initializer
expected body of lambda expression
expected '{' after base class list
expected '{' in compound literal
expected '<' after '%0'
expected '(' after '%0'
expected '(' for function-style cast or type construction
expected member name or ';' after declaration specifiers
expected member name or ';' after declaration specifiers; %0 is a keyword in Objective-C++
expected class member or base class name
expected method body
method type specifier must start with '-' or '+'
'@end' must appear in an Objective-C context
expected the name of a parameter pack
expected parentheses around type name in %0 expression
expected property name
expected ')' or ',' after '%0'
expected a qualified name after 'typename'
expected ')' after '%0'
expected selector for Objective-C method
expected ';' after attribute list
expected ';' after expression
expected ';' after method prototype
expected ';' after namespace name
expected ';' after static_assert
expected ';' after %0 statement
expected ';' at end of declaration list
expected ';' at end of declaration
expected ';' in 'for' statement specifier
expected ';' at end of requirement
expected an OpenMP 'directive' or 'sequence' attribute argument
expected 'this' following '*' in lambda capture list
expected statement
expected template
expected template parameter
expected %0; %1 is a keyword in Objective-C++
expected a type
expected an identifier or template-id after '::'
expected %select{identifier|unqualified-id}0
expected a version of the form 'major[.minor[.subminor]]'
expected 'while' in do/while loop
enumerations cannot be explicitly instantiated
explicit template instantiation cannot have a definition; if this definition is meant to be an explicit specialization, add '<>' after the 'template' keyword
explicit %select{specialization|instantiation}0 of %select{non-|undeclared }3template %1 %2
export declaration cannot be empty
duplicate %0 clause in an 'external_source_symbol' attribute
expected 'language', 'defined_in', or 'generated_declaration'
extraneous closing brace ('}')
extraneous ')' after condition, expected a statement
extraneous '%0' before ';'
operators in fold expression must be the same
'co_await' modifier can only be applied to range-based for loop
for range declaration must declare a variable
range-based for loop requires type for loop variable
cannot define a type in a friend declaration
friend cannot be declared in an explicit instantiation; if this declaration is meant to be a friend declaration, remove the 'template' keyword
'friend' used outside of class
function definition does not declare parameters
function definition declared 'typedef'
function definition is not allowed here
unexpected %0 in function call; perhaps remove the %0?
function scope depth exceeded maximum of %0
meaningless '%0' on asm outside function
'module;' introducing a global module fragment can appear only at the start of the translation unit
GNU-style inline assembly is disabled
expected template name after 'template' keyword in nested name specifier
%0 declared as a reference to a reference
cannot cast 'super' (it isn't an expression)
array bound cannot be deduced from a default member initializer
initializer list cannot be used on the %select{left|right}0 hand side of operator '%1'
namespace alias cannot be inline
nested namespace definition cannot be 'inline'
cannot use %select{dot|arrow}0 operator on a type
'%0' qualifier may not be applied to a reference
invalid %0 at end of declaration; did you mean '='?
expected ';' after top level declarator
invalid parameter name: '%0' is a keyword
C++11 only allows consecutive left square brackets when introducing an attribute
label at end of compound statement: expected statement
'[]' after delete interpreted as 'delete[]'; add parentheses to treat this as a lambda-expression
ellipsis in pack %select{|init-}0capture must appear %select{after|before}0 the name of the capture
multiple ellipses in pack capture
%select{'mutable'|'constexpr'|'consteval'}0 cannot appear multiple times in a lambda declarator
lambda template parameter list cannot be empty
string literal after 'operator' must be '""'
string literal after 'operator' cannot have an encoding prefix
'...' must %select{immediately precede declared identifier|be innermost component of anonymous pack declaration}0
expected %0 at end of module
@try statement without a @catch and @finally clause
C requires a comma prior to the ellipsis in a variadic function type
use 'template' keyword to treat '%0' as a dependent template name
missing '}' at end of definition of %q0
expected parameter declarator
found '<::' after a %select{template name|addrspace_cast|const_cast|dynamic_cast|reinterpret_cast|static_cast}0 which forms the digraph '<:' (aka '[') and a ':', did you mean '< ::'?
expected a module name after '%select{module|import}0'
expected ';' after module name
%select{global|private}0 module fragment cannot be exported
'__declspec' attributes are not enabled; use '-fdeclspec' or '-fms-extensions' to enable support for __declspec attributes
__declspec attributes must be an identifier or string literal
property declaration specifies '%0' accessor twice
expected name of accessor method
expected ',' or ')' at end of property accessor list
expected '=' after '%0'
putter for property must be specified as 'put', not 'set'
property declaration cannot have a default member initializer
missing 'get=' or 'put='
property does not specify a getter or a putter
expected 'get' or 'put' in property declaration
MS-style inline assembly is not available: %0
unsupported architecture '%0' for MS-style inline assembly
%select{|a template declaration|an explicit template specialization|an explicit template instantiation}0 can only %select{|declare|declare|instantiate}0 a single entity
namespaces can only be defined in global or namespace scope
parameter named %0 is missing
@%0 must be followed by a number to form an NSNumber object
unexpected token after Objective-C string
directive may only be specified in protocols only
expected '=' for Objective-C getter
expected '=' for Objective-C setter
unknown property attribute %0
expected selector for Objective-C %select{setter|getter}0
expected type parameter name
illegal interface qualifier
illegal visibility specification
missing '@end'
@implementation cannot have type parameters
postfix attributes are not allowed on Objective-C directives
postfix attributes are not allowed on Objective-C directives, place them in front of '%select{@interface|@protocol}0'
property name cannot be a bit-field
property requires fields to be named
protocol qualifiers must precede type arguments
'@end' appears where closing brace '}' is expected
prefix attribute must be followed by an interface, protocol, or implementation
expected an Objective-C directive after '@'
expected a related ObjectiveC class name, e.g., 'NSColor'
expected a class method selector with single argument, e.g., 'colorWithCGColor:'
unexpected '(', only 'to', 'link' or 'device_type' clauses expected for 'begin declare target' directive
function declaration is expected after 'declare %select{simd|variant}0' directive
unexpected '%0' clause, '%1' is specified already
expected at least one 'to' or 'link' clause
%0 appears multiple times in clauses on the same declare target directive
unexpected '%0' clause, only %select{'device_type'|'to' or 'link'|'to', 'link' or 'device_type'}1 clauses expected
unexpected clause after an implicit 'to' clause
nested OpenMP context selector contains duplicated trait '%0' in selector '%1' and set '%2' with different score
nested user conditions in OpenMP context selector not supported (yet)
expected %select{'match'|'match', 'adjust_args', or 'append_args'}0 clause on 'omp declare variant' directive
expected at least one clause on '#pragma omp %0' directive
missing ':' in %0
expected valid context selector in %0
expected '=' in iterator specifier
expected identifier specifying the name of the 'omp critical' directive
expected interop type: 'target' and/or 'targetsync'
expected ',' or ')' in '%0' %select{clause|directive}1
expected ',' after interop modifier
expected ',' or ')' after iterator specifier
expected identifier or one of the following operators: '+', '-', '*', '&', '|', '^', '&&', or '||'
'#pragma omp %0' %select{|with '%2' clause }1cannot be an immediate substatement
data-sharing attribute '%0' in '%1' clause requires OpenMP version %2 or above
missing map type
missing map type modifier
expected declarator on 'omp declare mapper' directive
illegal OpenMP user-defined mapper identifier
unexpected operation specified in 'append_args' clause, expected 'interop'
unexpected OpenMP clause '%0' in directive '#pragma omp %1'
unexpected OpenMP directive %select{|'#pragma omp %1'}0
expected an OpenMP directive
incorrect map type, expected one of 'to', 'from', 'tofrom', 'alloc', 'release', or 'delete'
incorrect map type modifier, expected one of: 'always', 'close', 'mapper'%select{|, 'present'}0%select{|, 'ompx_hold'}1
only a single match extension allowed per OpenMP context selector
^^ is a reserved operator in OpenCL
taking address of function is not allowed
virtual functions are not supported in C++ for OpenCL
out-of-line constructor for %0 cannot have template arguments
'%0' keyword not permitted with interface types
missing parentheses around the size of parameter pack %0
expected 'auto' or 'decltype(auto)' after concept name
expression cannot be followed by a postfix %0 operator; add parentheses
duplicate attribute subject matcher '%0'
expected an attribute after '('
expected identifier that represents an attribute name
expected an attribute that is specified using the GNU, C++11 or '__declspec' syntax
expected '.' after pragma attribute namespace %0
expected 'push', 'pop', or '(' after '#pragma clang attribute'
expected an identifier that corresponds to an attribute subject rule
expected an identifier that corresponds to an attribute subject matcher sub-rule; '%0' matcher %select{does not support sub-rules|supports the following sub-rules: %2|}1
extra tokens after attribute in a '#pragma clang attribute push'
unexpected argument '%0' to '#pragma clang attribute'; expected 'push' or 'pop'
expected attribute subject set specifier 'apply_to'
namespace can only apply to 'push' or 'pop' directives
unknown attribute subject rule '%0'
%select{invalid use of|unknown}2 attribute subject matcher sub-rule '%0'; '%1' matcher %select{does not support sub-rules|supports the following sub-rules: %3}2
attribute %0 is not supported by '#pragma clang attribute'
force_cuda_host_device end pragma without matching force_cuda_host_device begin
expected '=' following '#pragma clang section %select{invalid|bss|data|rodata|text|relro}0'
pragma comment requires parenthesized identifier and optional string
unknown kind of pragma comment
pragma detect_mismatch is malformed; it requires two comma-separated string literals
expected one of [bss|data|rodata|text|relro] section kind in '#pragma %0'
expected an integer argument in '#pragma %0'
'#pragma %0' can only appear at file scope or at the start of a compound statement
pragma float_control is malformed; use 'float_control({push|pop})' or 'float_control({precise|except}, {on|off} [,push])'
unexpected argument '%0' to '#pragma clang fp %1'; expected %select{'fast' or 'on' or 'off'|'on' or 'off'|'ignore', 'maytrap' or 'strict'}2
%select{invalid|missing}0 option%select{ %1|}0; expected 'contract', 'reassociate' or 'exceptions'
invalid argument; expected 'enable'%select{|, 'full'}0%select{|, 'assume_safety'}1 or 'disable'
%select{invalid|missing}0 option%select{ %1|}0; expected vectorize, vectorize_width, interleave, interleave_count, unroll, unroll_count, pipeline, pipeline_initiation_interval, vectorize_predicate, or distribute
vectorize_width loop hint malformed; use vectorize_width(X, fixed) or vectorize_width(X, scalable) where X is an integer, or vectorize_width('fixed' or 'scalable')
missing argument; expected %select{an integer value|'enable'%select{|, 'full'}1%select{|, 'assume_safety'}2 or 'disable'}0
this pragma cannot appear in %0 declaration
missing argument to '#pragma %0'%select{|; expected %2}1
unexpected extra argument '%0' to '#pragma clang optimize'
unexpected argument '%0' to '#pragma clang optimize'; expected 'on' or 'off'
invalid argument; expected 'disable'
unexpected %0, expected to see one of %select{|'best_case', 'full_generality', }1'single_inheritance', 'multiple_inheritance', or 'virtual_inheritance'
expected ';' after private module fragment declaration
trailing requires clause should be placed outside parentheses
trailing return type must appear before trailing requires clause
trailing requires clause can only be used when declaring a function
expected concept name with optional arguments
requires expression in requirement body; did you intend to place it in a nested requirement? (add another 'requires' before the expression)
expected '->' before expression type requirement
varargs not allowed in requires expression
'noexcept' can only be used in a compound requirement (with '{' '}' around the expression)
a space is required between a right angle bracket and an equals sign (use '> =')
scoped enumeration requires a name
range-based 'for' statement uses ':', not '='
expected parenthesized parameter pack name in 'sizeof...' expression
statement expression not allowed at file scope
'__super' cannot be used with a using declaration
expected a property name in @synthesize
%select{function|class|variable}0 cannot be defined in an explicit instantiation; if this declaration is meant to be a %select{function|class|variable}0 definition, remove the 'template' keyword
identifier followed by '<' indicates a class template specialization but %0 %select{does not refer to a template|refers to a function template|<unused>|refers to a variable template|<unused>|refers to a concept}1
a static_assert declaration cannot be a template
cannot template a using %select{directive|declaration}0
'this' cannot be captured by reference
a space is required between consecutive right angle brackets (use '> >')
invalid comparison flag %0; use 'layout_compatible' or 'must_be_null'
type trait requires %0%select{| or more}1 argument%select{|s}2; have %3 argument%s3
unparsed tokens following type
typename is allowed for identifiers only
type name does not allow %select{<ERROR>|constexpr|consteval|constinit}0 specifier to be specified
type name does not allow function specifier to be specified
type name does not allow storage class to be specified
typename specifier refers to a non-type template
type name requires a specifier or qualifier
unexpected '@' in program
unexpected ':' in nested name specifier; did you mean '::'?
module declaration can only appear at the top level
attributes cannot be specified on namespace alias
attributes cannot be specified on a nested namespace definition
@implementation declaration cannot be protocol qualified
unexpected namespace scope prior to decltype
unexpected ';' before %0
'template' keyword not permitted after 'using' keyword
'template' keyword not permitted in destructor name
'template' keyword not permitted here
'%0' cannot be a part of nested name specifier; did you mean ':'?
unexpected type name %0: expected identifier
type-id cannot have a name
unknown template name %0
parentheses are required around this expression in a requires clause
'static' may not be used without an array size
'static' may not be used with an unspecified variable length array size
sorry, module partitions are not yet supported
attribute with scope specifier cannot follow default scope specifier
'using namespace' is not allowed in classes
'%0' specifier is not allowed outside a class definition
version number must have non-zero major, minor, or sub-minor version
ISO C++11 requires a parenthesized pack declaration to have a name
alias declarations are a C++11 extension
alias declaration in this context is a C++2b extension
%0 applied to an expression is a GNU extension
'auto' storage class specifier is not permitted in C++11, and will not be supported in future releases
'__auto_type' is a GNU extension
default member initializer for bit-field is a C++20 extension
'%0' is a C11 extension
compound literals are a C99-specific feature
'%0' is a C99 extension
variable declaration in for loop is a C99-specific feature
'_Static_assert' with no message is a C2x extension
enumeration types with a fixed underlying type are a Clang extension
ISO C++20 does not permit the 'bool' keyword after 'concept'
consteval if is a C++2b extension
constexpr if is a C++17 extension
'constexpr' on lambda expressions is a C++17 extension
ISO C++ does not allow an attribute list to appear here
enumeration types with a fixed underlying type are a C++11 extension
'static_assert' with no message is a C++17 extension
an attribute specifier sequence in this position is a C++2b extension
'decltype(auto)' type specifier is a C++14 extension
ISO C++17 does not allow a decomposition group to be empty
%select{defaulted|deleted}0 function definitions are a C++11 extension
ISO C++17 does not allow dynamic exception specifications
reference to enumeration must use 'enum' not 'enum %select{struct|class}0'
exception specification of '...' is a Microsoft extension
ISO C requires a translation unit to contain at least one declaration
non-defining declaration of enumeration with a fixed underlying type is only permitted as a standalone declaration%select{|; missing list of enumerators?}0
commas at the end of enumerator lists are a C99-specific feature
commas at the end of enumerator lists are a C++11 extension
expected ';' at end of declaration list
explicit(bool) is a C++20 extension
extern templates are a C++11 extension
extra ';' %select{outside of a function|inside a %1|inside instance variable list|after member function definition}0
extra ';' outside of a function is a C++11 extension
pack fold expression is a C++17 extension
range-based for loop is a C++11 extension
range-based for loop initialization statements are a C++20 extension
generalized initializer lists are a C++11 extension
use of GNU address-of-label extension
use of GNU array range extension
use of GNU case range extension
use of GNU ?: conditional expression extension, omitting middle operand
use of GNU empty initializer extension
use of GNU indirect-goto extension
use of GNU 'missing =' extension in designator
use of GNU old-style field designator extension
use of GNU statement expression extension
type-less parameter names in function declaration
'%select{if|switch}0' initialization statements are a C++17 extension
inline namespaces are a C++11 feature
inline nested namespace definition is a C++20 extension
keyword '%0' will be made available as an identifier %select{here|for the remainder of the translation unit}1
lambda without a parameter clause is a C++2b extension
explicit template parameter list for lambdas is a C++20 extension
'abstract' keyword is a Microsoft extension
enumeration types with a fixed underlying type are a Microsoft extension
'sealed' keyword is a Microsoft extension
use of 'static_assert' without inclusion of <assert.h> is a Microsoft extension
use of multiple declarators in a single using declaration is a C++17 extension
nested namespace definition is a C++17 extension; define each namespace separately
default member initializer for non-static data member is a C++11 extension
attributes on %select{a namespace|an enumerator}0 declaration are a C++17 extension
type nullability specifier %0 is a Clang extension
specifying OpenMP directives with [[]] is an OpenMP 5.1 extension
'%0' keyword is a C++11 extension
reference qualifiers on functions are a C++11 extension
rvalue references are a C++11 extension
scoped enumerations are a C++11 extension
unknown pragma in STDC namespace
template template parameter using 'typename' is a C++17 extension
'__thread' before '%0'
default scope specifier for attributes is a C++17 extension
pack expansion of using declaration is a C++17 extension
using enum declaration is a C++20 extension
__final is a GNU extension, consider using C++11 final
use -fbracket-depth=N to increase maximum nesting level
%select{|second }0%1 token is here
use '%0' instead
comma separating Objective-C messaging arguments
or insert whitespace before ':' to use %0 as parameter name and have an empty entry in the selector
total token limit set here
did you mean to use 'typename'?
insert ',' before '...' to silence this warning
place '...' %select{immediately before declared identifier|here}0 to declare a function parameter pack
preceding '...' declares a function parameter pack
still within definition of %q0 here
introduce a parameter name to make %0 part of the selector
%select{class|protocol|category|class extension|implementation|category implementation}0 started here
the ignored tokens spans until here
the context property '%0' can be nested in the context selector '%1' which is nested in the context set '%2'; try 'match(%2={%1(%0)})'
the context selector '%0' can be nested in the context set '%1'; try 'match(%1={%0%select{|(property)}2})'
the ignored %select{set|selector|property}0 spans until here
'%0' is a context %select{set|selector|property}1 not a context %select{set|selector|property}2
context %select{set|selector|property}0 options are: %1
try 'match(%0={%1%2})'
the previous context %select{set|selector|property}0 '%1' used here
omit the namespace to add attributes to the most-recently pushed attribute group
use the GNU '__attribute__' syntax
vectorize_width loop hint malformed; use vectorize_width(X, fixed) or vectorize_width(X, scalable) where X is an integer, or vectorize_width('fixed' or 'scalable')
previous default generic association is here
previous statement is here
parentheses are required around this expression in a requires clause
'%0' casts have no effect when not using ARC
use of '@import' in framework header is discouraged, including this header requires -fmodules
attribute %0 ignored, because it is not attached to a declaration
GCC does not allow %0 attribute in this position on a function definition
'unavailable' availability overrides all other availability information
'_Static_assert' with no message is incompatible with C standards before C2x
%select{%1 and |}0%2 tokens %select{introducing statement expression|terminating statement expression|introducing attribute|terminating attribute|forming pointer to member type}3 appear in different macro expansion contexts
%select{%1 and |}0%2 tokens %select{introducing statement expression|terminating statement expression|introducing attribute|terminating attribute|forming pointer to member type}3 are separated by whitespace
use of C-style parameters in Objective-C method declarations is deprecated
nvcc does not allow '__%0__' to appear after '()' in lambdas
'decltype(auto)' type specifier is incompatible with C++ standards before C++14
use of right-shift operator ('>>') in template argument will require parentheses in C++11
constexpr if is incompatible with C++ standards before C++17
constexpr on lambda expressions is incompatible with C++ standards before C++17
pack fold expression is incompatible with C++ standards before C++17
%select{if|switch}0 initialization statements are incompatible with C++ standards before C++17
nested namespace definition is incompatible with C++ standards before C++17
attributes on %select{a namespace|an enumerator}0 declaration are incompatible with C++ standards before C++17
'static_assert' with no message is incompatible with C++ standards before C++17
template template parameter using 'typename' is incompatible with C++ standards before C++17
default scope specifier for attributes is incompatible with C++ standards before C++17
default member initializer for bit-field is incompatible with C++ standards before C++20
explicit(bool) is incompatible with C++ standards before C++20
range-based for loop initialization statements are incompatible with C++ standards before C++20
inline nested namespace definition is incompatible with C++ standards before C++20
explicit template parameter list for lambdas is incompatible with C++ standards before C++20
use of multiple declarators in a single using declaration is incompatible with C++ standards before C++17
pack expansion using declaration is incompatible with C++ standards before C++17
using enum declaration is incompatible with C++ standards before C++20
alias declaration in this context is incompatible with C++ standards before C++2b
consteval if is incompatible with C++ standards before C++2b
an attribute specifier sequence in this position is incompatible with C++ standards before C++2b
this expression will be parsed as explicit(bool) in C++20
alias declarations are incompatible with C++98
'alignas' is incompatible with C++98
alignof expressions are incompatible with C++98
C++11 attribute syntax is incompatible with C++98
'decltype' type specifier is incompatible with C++98
%select{defaulted|deleted}0 function definitions are incompatible with C++98
enumeration types with a fixed underlying type are incompatible with C++98
commas at the end of enumerator lists are incompatible with C++98
extern templates are incompatible with C++98
range-based for loop is incompatible with C++98
generalized initializer lists are incompatible with C++98
inline namespaces are incompatible with C++98
lambda expressions are incompatible with C++98
literal operators are incompatible with C++98
noexcept specifications are incompatible with C++98
noexcept expressions are incompatible with C++98
default member initializer for non-static data members is incompatible with C++98
'nullptr' is incompatible with C++98
'%0' keyword is incompatible with C++98
reference qualifiers on functions are incompatible with C++98
rvalue references are incompatible with C++98
scoped enumerations are incompatible with C++98
static_assert declarations are incompatible with C++98
extra ';' outside of a function is incompatible with C++98
trailing return types are incompatible with C++98
consecutive right angle brackets are incompatible with C++98 (use '> >')
add explicit braces to avoid dangling else
empty initialization statement of '%select{if|switch|range-based for}0' has no effect
dynamic exception specifications are deprecated
use same version number separators '_' or '.'; as in 'major[.minor[.subminor]]'
expected a qualified name after 'typename'
extra ';' after member function definition
GCC does not allow an attribute in this position on a function declaration
GCC does not allow variable declarations in for loop initializers before C99
the number of preprocessor source tokens (%0) exceeds this token limit (%1)
the total number of preprocessor source tokens (%0) exceeds the token limit (%1)
dependent %select{__if_not_exists|__if_exists}0 declarations are ignored
qualifiers after comma in declarator list are ignored
misleading indentation; statement is not part of the previous '%select{if|else|for|while}0'
'...' in this location creates a C-style varargs function%select{, not a function parameter pack|}0
use 'template' keyword to treat '%0' as a dependent template name
%0 used as the name of the previous parameter rather than as part of the selector
empty expression statement has no effect; remove unnecessary ';' to silence this warning
protocol has no object type specified; defaults to qualified 'id'
specifying OpenMP directives with [[]] is incompatible with OpenMP standards before OpenMP 5.1
the context property '%0' is not valid for the context selector '%1' and the context set '%2'; property ignored
the context selector '%0' in the context set '%1' cannot have a score ('%2'); score ignored
the context selector '%0' is not valid for the context set '%1'; selector ignored
the context selector '%0' in context set '%1' requires a context property defined in parentheses; selector ignored
the context %select{set|selector|property}0 '%1' was used already in the same 'omp declare variant' directive; %select{set|selector|property}0 ignored
'%0' is not a valid context property for the context selector '%1' and the context set '%2'; property ignored
'%0' is not a valid context selector for the context set '%1'; selector ignored
'%0' is not a valid context set in a `declare variant`; set ignored
expected '%0' after the %1; '%0' assumed
expected identifier or string literal describing a context %select{set|selector|property}0; %select{set|selector|property}0 skipped
extra tokens at the end of '#pragma omp %0' are ignored
more than one 'device_type' clause is specified
interop type '%0' cannot be specified more than once
valid %0 clauses start with %1; %select{token|tokens}2 will be ignored
%0 clause should not be followed by arguments; tokens will be ignored
expected '=' following '#pragma %select{align|options align}0' - ignored
invalid alignment option in '#pragma %select{align|options align}0' - ignored
'#pragma comment %0' ignored
expected action or ')' in '#pragma %0' - ignored
missing ':' after %0 - ignoring
missing ':' or ')' after %0 - ignoring
expected ',' in '#pragma %0'
expected identifier in '#pragma %0' - ignored
expected 'compiler', 'lib', 'user', or a string literal for the section name in '#pragma %0' - ignored
expected integer between %0 and %1 inclusive in '#pragma %2' - ignored
missing '(' after '#pragma %0' - ignoring
expected non-wide string literal in '#pragma %0'
expected %select{'enable', 'disable', 'begin' or 'end'|'disable'}0 - ignoring
expected ')' or ',' in '#pragma %0'
missing ')' after '#pragma %0' - ignoring
expected a stack label or a string literal for the section name in '#pragma %0' - ignored
expected a string literal for the section name in '#pragma %0' - ignored
expected push, pop or a string literal for the section name in '#pragma %0' - ignored
expected string literal in '#pragma %0' - ignoring
OpenCL extension %0 is core feature or supported optional core feature - ignoring
extra tokens at end of '#pragma %0' - ignored
incorrect use of #pragma clang force_cuda_host_device begin|end
'#pragma %0' is not supported on this target - ignored
'#pragma init_seg' is only supported when targeting a Microsoft environment
%0 is not a recognized builtin%select{|; consider including <intrin.h> to access non-builtin intrinsics}1
unknown action for '#pragma %0' - ignored
unexpected argument '%0' to '#pragma %1'%select{|; expected %3}2
unknown action '%1' for '#pragma %0' - ignored
missing argument to '#pragma %0'%select{|; expected %2}1
incorrect use of '#pragma fenv_access (on|off)' - ignored
incorrect use of '#pragma ms_struct on|off' - ignored
unexpected '#pragma omp ...' in program
'#pragma optimize' is not supported
expected 'align' following '#pragma options' - ignored
expected integer or identifier in '#pragma pack' - ignored
unknown OpenCL extension %0 - ignoring
argument to '#pragma unroll' should not be in parentheses in CUDA C/C++
known but unsupported action '%1' for '#pragma %0' - ignored
unsupported OpenCL extension %0 - ignoring
expected '#pragma unused' argument to be a variable name
semicolon before method body is ignored
ignoring '%select{static|inline}0' keyword on explicit template instantiation
pragma STDC FENV_ROUND is not supported
invalid or unsupported rounding mode in '#pragma STDC FENV_ROUND' - ignored
isa trait '%0' is not known to the current target; verify the spelling or consider restricting the context selector with the 'arch' selector further
'__clang__' is a predefined macro name, not an attribute scope specifier; did you mean '_Clang' instead?
empty symbolic operand name in inline assembly string
invalid %% escape in inline assembly string
invalid operand number in inline asm string
unknown symbolic operand name in inline assembly string
unterminated symbolic operand name in inline assembly string
the experimental clang interpreter failed to evaluate an expression
cannot get %select{lower,upper}0 bound because object size is unknown
template parameter lists have a different number of parameters (%0 vs %1)
template parameter has different kinds in different translation units
field %0 declared with incompatible types in different translation units (%1 vs. %2)
external function %0 declared with incompatible types in different translation units (%1 vs. %2)
instance variable %0 declared with incompatible types in different translation units (%1 vs. %2)
non-type template parameter declared with incompatible types in different translation units (%0 vs. %1)
%select{class|instance}0 method %1 has a different number of parameters in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has a parameter with a different types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has incompatible result types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 is variadic in one translation unit and not variadic in another
property %0 is implemented with %select{@synthesize|@dynamic}1 in one translation but %select{@dynamic|@synthesize}1 in another translation unit
property %0 declared with incompatible types in different translation units (%1 vs. %2)
class %0 has incompatible superclasses
property %0 is synthesized to different ivars in different translation units (%1 vs. %2)
parameter kind mismatch; parameter is %select{not a|a}0 parameter pack
type %0 has incompatible definitions in different translation units
external variable %0 defined in multiple translation units
external variable %0 declared with incompatible types in different translation units (%1 vs. %2)
cannot import unsupported AST node %0
ambiguous vftable component for %0 introduced via covariant thunks; this is an inherent limitation of the ABI
%select{pointer|reference}0 to a consteval declaration is not a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 heap allocated object that has been deleted
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of subobject of|destruction of}0 member %1 of union with %select{active member %3|no active member}2 is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 mutable member %1 is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 dereferenced null pointer is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 dereferenced one-past-the-end pointer is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|reconstruction of|destruction of}0 temporary is not allowed in a constant expression outside the expression that created the temporary
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of subobject of|destruction of}0 %select{object outside its lifetime|uninitialized object}1 is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 object '%1' whose value is not known
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 element of array without known bound is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|<ERROR>|<ERROR>|<ERROR>|<ERROR>}0 volatile %select{temporary|object %2|member %2}1 is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|<ERROR>|<ERROR>|<ERROR>|<ERROR>}0 volatile-qualified type %1 is not allowed in a constant expression
cannot constant evaluate the result of adjusting alignment to %0
cannot constant evaluate whether run-time alignment is at least %0
requested alignment must be %0 or less for type %1; %2 is invalid
cannot refer to element %0 of %select{array of %2 element%plural{1:|:s}2|non-array object}1 in a constant expression
%select{alignment of|offset of the aligned pointer from}0 the base pointee object (%1 %plural{1:byte|:bytes}1) is %select{less than|not a multiple of}0 the asserted %2 %plural{1:byte|:bytes}2
value of the aligned pointer (%0) is not a multiple of the asserted %1 %plural{1:byte|:bytes}1
indeterminate value can only initialize an object of type 'unsigned char'%select{, 'char',|}1 or 'std::byte'; %0 is invalid
invalid type %0 is a %select{member|base}1 of %2
bit_cast %select{from|to}0 a %select{|type with a }1%select{union|pointer|member pointer|volatile|reference}2 %select{type|member}1 is not allowed in a constant expression
value %1 cannot be represented in type %0
constexpr bit_cast involving bit-field is not yet supported
constexpr bit_cast involving type %0 is not yet supported
in call to '%0'
constexpr evaluation hit maximum call limit
(skipping %0 call%s0 in backtrace; use -fconstexpr-backtrace-limit=0 to see all)
comparison of pointer to virtual member function %0 has unspecified value
both arms of conditional operator are unable to produce a constant expression
construction of individual component of complex number is not yet supported in constant expressions
'std::allocator<...>::deallocate' used to delete a null pointer
delete of object with dynamic type %1 through pointer to base class type %0 with non-virtual destructor
delete of pointer '%0' that does not point to a heap-allocated object
delete of pointer%select{ to subobject|}1 '%0' %select{|that does not point to complete object}1
constexpr evaluation exceeded maximum depth of %0 calls
destruction of individual component of complex number is not yet supported in constant expressions
destroying object '%0' whose lifetime has already ended
delete of pointer that has already been deleted
destruction of object that is already being destroyed
%select{pointer|reference}0 to %select{|subobject of }1heap-allocated object is not a constant expression
heap allocation performed here
reference dynamic_cast failed: %select{static type %1 of operand is a non-public base class of dynamic type %2|dynamic type %2 of operand does not have a base class of type %3|%3 is an ambiguous base class of dynamic type %2 of operand|%3 is a non-public base class of dynamic type %2 of operand}0
cannot evaluate this expression if rounding mode is dynamic
floating point arithmetic produces %select{an infinity|a NaN}0
compile time floating point arithmetic suppressed in strict evaluation modes
function parameter %0 with unknown value cannot be used in a constant expression
constexpr evaluation hit maximum heap allocation limit
in implicit initialization for inherited constructor of %0
requested alignment %0 is not a positive power of two
%select{reinterpret_cast|dynamic_cast|cast that performs the conversions of a reinterpret_cast|cast from %1}0 is not allowed in a constant expression%select{| in C++ standards before C++20||}0
cannot cast object of dynamic type %0 to type %1
%select{non-constexpr|undefined}0 %select{function|constructor}1 %2 cannot be used in a constant expression
constructor inherited from base class %0 cannot be used in a constant expression; derived class cannot be implicitly initialized
shift count %0 >= width of type %1 (%2 bit%s2)
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 %select{temporary|variable}1 whose %plural{8:storage duration|:lifetime}0 has ended
signed left shift discards bits
left shift of negative value %0
read of incomplete type %0 is not allowed in a constant expression
read of non-const variable %0 is not allowed in a constant expression
read of non-constexpr variable %0 is not allowed in a constant expression
read of variable %0 of non-integral, non-enumeration type %1 is not allowed in a constant expression
constant evaluation of %0 on array of type %1 is not supported; only arrays of narrow character types can be searched
constant evaluation of %0 between arrays of types %1 and %2 is not supported; only arrays of narrow character types can be compared
cannot constant evaluate '%select{memcpy|memmove}0' between objects of incomplete type %1
cannot constant evaluate '%select{memcpy|memmove}0' between objects of non-trivially-copyable type %1
%select{source|destination}2 of '%select{%select{memcpy|wmemcpy}1|%select{memmove|wmemmove}1}0' is %3
'%select{memcpy|wmemcpy}0' between overlapping memory regions
cannot constant evaluate '%select{memcpy|memmove}0' from object of type %1 to object of type %2
'%select{%select{memcpy|wmemcpy}1|%select{memmove|wmemmove}1}0' not supported: %select{size to copy (%4) is not a multiple of size of element type %3 (%5)|source is not a contiguous array of at least %4 elements of type %3|destination is not a contiguous array of at least %4 elements of type %3}2
allocation performed here was not deallocated%plural{0:|: (along with %0 other memory leak%s0)}0
modification of object of const-qualified type %0 is not allowed in a constant expression
a constant expression cannot modify an object that is visible outside that expression
negative shift count %0
dynamic memory allocation is not permitted in constant expressions until C++20
%plural{2:'delete' used to delete pointer to object allocated with 'std::allocator<...>::allocate'|:%select{non-array delete|array delete|'std::allocator<...>::deallocate'}0 used to delete pointer to %select{array object of type %2|non-array object of type %2|object allocated with 'new'}0}1
cannot allocate array; evaluated array bound %0 is negative
call to %select{placement|class-specific}0 %1
cannot allocate memory of %select{incomplete|function}0 type %1
this placement new expression is not yet supported in constant expressions
cannot allocate array; evaluated array bound %0 is too large
cannot allocate array; evaluated array bound %0 is too small to hold %1 explicitly initialized elements
cannot allocate untyped memory in a constant expression; use 'std::allocator<T>::allocate' to allocate memory of type 'T'
control reached end of constexpr function
%select{pointer|reference}0 to %select{|subobject of }1%select{temporary|%3}2 is not a constant expression
non-literal type %0 cannot be used in a constant expression
address of non-static constexpr variable %0 may differ on each invocation of the enclosing function; add 'static' to give it a constant address
cannot %select{access base class of|access derived class of|access field of|access array element of|perform pointer arithmetic on|access real component of|access imaginary component of}0 null pointer
allocated size %0 is not a multiple of size %1 of element type %2
value %0 is outside the range of representable values of type %1
dereferenced pointer past the end of %select{|subobject of }0%select{temporary|%2}1 is not a constant expression
cannot %select{access base class of|access derived class of|access field of|access array element of|ERROR|access real component of|access imaginary component of}0 pointer past the end of object
placement new would change type of storage from %0 to %1
comparison of addresses of subobjects of different base classes has unspecified value
comparison of address of base class subobject %0 of class %1 to field %2 has unspecified value
comparison of address of fields %0 and %2 of %4 with differing access specifiers (%1 vs %3) has unspecified value
comparison has unspecified value
subtracted pointers are not elements of the same array
subtraction of pointers to type %0 of zero size
%select{|||||virtual function called on|dynamic_cast applied to|typeid applied to|construction of|destruction of}0 object '%1' whose dynamic type is not constant
pseudo-destructor call is not permitted in constant expressions until C++20
pure virtual function %q0 called
constexpr evaluation hit maximum step limit; possible infinite loop?
this use of statement expressions is not supported in a constant expression
subobject declared here
temporary created here
%select{|implicit }0use of 'this' pointer is only allowed within the evaluation of a call to a 'constexpr' member function
typeid applied to expression of polymorphic type %0 is not allowed in a constant expression in C++ standards before C++20
%select{|sub}0object of type %1 is not initialized
assignment would change active union member during the initialization of a different member of the same union
indexing of array without known bound is not allowed in a constant expression
non-trivial destruction of type %0 in a constant expression is not supported
type %0 has unexpected layout
non-trivial destruction of lifetime-extended temporary with type %0 used in the result of a constant expression is not yet supported
array-to-pointer decay of array member without known bound is not supported
use of reference outside its lifetime is not allowed in a constant expression
initializer of %0 is not a constant expression
initializer of %0 is unknown
initializer of weak variable %0 is not considered constant because it may be different at runtime
cannot construct object of type %0 with virtual base class in a constant expression
cannot evaluate call to virtual function in a constant expression in C++ standards before C++20
comparison between unequal pointers to void has unspecified result
volatile %select{temporary created|object declared|member declared}0 here
covariant thunk required by %0
division by zero
null passed to a callee that requires a non-null argument
class has base type %0
bit-field %0 with type %1 and length %2 here
enumerator %0 with value %1 here
field %0 has type %1 here
field has name %0 here
friend declared here
no corresponding base class here
no corresponding enumerator here
no corresponding field here
no corresponding friend here
field %0 is not a bit-field
class has %0 base %plural{1:class|:classes}0
%select{class|instance}0 method %1 also declared here
no corresponding superclass here
property %0 is implemented with %select{@synthesize|@dynamic}1 here
inherits from superclass %0 here
property is synthesized to ivar %0 here
%select{parameter|parameter pack}0 declared here
%0 is a %select{struct|interface|union|class|enum}1 here
template parameter declared here
template parameter list also declared here
declared here with type %0
%select{non-virtual|virtual}0 derivation here
unimplemented constexpr lambda feature: %0 (coming soon!)
-fsanitize-address-field-padding applied to %0
-fsanitize-address-field-padding ignored for %0 because it %select{is not C++|is packed|is a union|is trivially copyable|has trivial destructor|is standard layout|is in a blacklisted file|is blacklisted}1
overflow in expression; result is %0 with type %1
overflow in expression; result is %0 with type %1
'%0' will always evaluate to 'true' in a manifestly constant-evaluated expression
ms_struct may not produce Microsoft-compatible layouts with fundamental data types with sizes that aren't a power of two
template parameter lists have a different number of parameters (%0 vs %1)
template parameter has different kinds in different translation units
field %0 declared with incompatible types in different translation units (%1 vs. %2)
external function %0 declared with incompatible types in different translation units (%1 vs. %2)
instance variable %0 declared with incompatible types in different translation units (%1 vs. %2)
non-type template parameter declared with incompatible types in different translation units (%0 vs. %1)
%select{class|instance}0 method %1 has a different number of parameters in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has a parameter with a different types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has incompatible result types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 is variadic in one translation unit and not variadic in another
property %0 is implemented with %select{@synthesize|@dynamic}1 in one translation but %select{@dynamic|@synthesize}1 in another translation unit
property %0 declared with incompatible types in different translation units (%1 vs. %2)
class %0 has incompatible superclasses
property %0 is synthesized to different ivars in different translation units (%1 vs. %2)
parameter kind mismatch; parameter is %select{not a|a}0 parameter pack
type %0 has incompatible definitions in different translation units
external variable %0 defined in multiple translation units
external variable %0 declared with incompatible types in different translation units (%1 vs. %2)
padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%s2 to align anonymous bit-field
padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%s2 to align %4
padding size of %0 with %1 %select{byte|bit}2%s1 to alignment boundary
packed attribute is unnecessary for %0
add a deprecation attribute to the declaration to silence this warning
previous command '%select{\|@}0%1' here
previous command '%select{\|@}0%1' (an alias of '\%2') here
end tag
HTML tag started here
did you mean '%0'?
previous documentation
did you mean '%0'?
previous documentation
unknown command tag name '%0'; did you mean '%1'?
'%select{\|@}0%select{class|interface|protocol|struct|union}1' command should not be used in a comment attached to a non-%select{class|interface|protocol|struct|union}2 declaration
duplicated command '%select{\|@}0%1'
empty paragraph passed to '%select{\|@}0%1' command
'%select{\|@}0%select{classdesign|coclass|dependency|helper|helperclass|helps|instancesize|ownership|performance|security|superclass}1' command should not be used in a comment attached to a non-container declaration
declaration is marked with '%select{\|@}0deprecated' command but does not have a deprecation attribute
'%select{\|@}0%select{function|functiongroup|method|methodgroup|callback}1' command should be used in a comment attached to %select{a function|a function|an Objective-C method|an Objective-C method|a pointer to function}2 declaration
HTML end tag '%0' is forbidden
HTML end tag does not match any start tag
HTML tag '%0' requires an end tag
HTML start tag '%0' closed by '%1'
HTML start tag prematurely ended, expected attribute name or '>'
expected quoted string after equals sign
'%select{\|@}0%1' command does not have a valid word argument
parameter '%0' is already documented
unrecognized parameter passing direction, valid directions are '[in]', '[out]' and '[in,out]'
'%select{\|@}0param' command used in a comment that is not attached to a function declaration
parameter '%0' not found in the function declaration
whitespace is not allowed in parameter passing direction
'%select{\|@}0%1' command used in a comment that is attached to a %select{function returning void|constructor|destructor|method returning void}2
'%select{\|@}0%1' command used in a comment that is not attached to a function or method declaration
template parameter '%0' is already documented
'%select{\|@}0tparam' command used in a comment that is not attached to a template declaration
template parameter '%0' not found in the template declaration
unknown command tag name
'%select{\|@}0%1' command does not terminate a verbatim text block
error opening '%0': required by the CrossTU functionality
error parsing index file: '%0' line: %1 'UniqueID filename' format expected
multiple definitions are found for the same key in index 
imported AST from '%0' had been generated for a different target, current: %1, imported: %2
this builtin is only available on 32-bit targets
this builtin is only available on 64-bit targets
cannot add 'abi_tag' attribute in a redeclaration
%select{return|parameter|variable|field|instance variable|synthesized instance variable}0 type %1 is an abstract class
%1 is a %select{private|protected}0 member of %3
%select{base class|inherited virtual base class}0 %1 has %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR*|}2constructor
calling a %select{private|protected}0 constructor of class %2
ISO C++11 does not allow access declarations; use using declarations instead
calling a %select{private|protected}1 destructor of class %0
base class %0 has %select{private|protected}1 destructor
exception object of type %0 has %select{private|protected}1 destructor
field of type %1 has %select{private|protected}2 destructor
instance variable of type %0 has %select{private|protected}1 destructor
temporary of type %0 has %select{private|protected}1 destructor
variable of type %1 has %select{private|protected}2 destructor
inherited virtual base class %1 has %select{private|protected}2 destructor
field of type %0 has %select{private|protected}2 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}1constructor
friend function %1 is a %select{private|protected}0 member of %3
capture of variable '%0' as type %1 calls %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}2constructor
address of overloaded function %0 is ambiguous
cannot form member pointer of type %0 without '&' and class name
address of overloaded function %0 does not match required type %1
address of overloaded function %0 cannot be converted to type %1
cannot take address of function %0 because parameter %1 has pass_object_size attribute
conflicting address space qualifiers are provided between types %0 and %1
'delete' cannot delete objects of type %0 in address space '%1'
'new' cannot allocate objects of type %0 in address space '%1'
cannot take address of function %0 because its constraints are not satisfied
cannot take address of function %0 because it has one or more non-tautological enable_if conditions
TLS model '%0' is not yet supported on AIX
alias definition of %0 after tentative definition
definition %0 cannot also be an %select{alias|ifunc}1
aliases are not supported on darwin
CUDA does not support aliases
extraneous template parameter list in alias template declaration
'align_value' attribute requires integer constant
%0 attribute cannot be applied to a %select{function parameter|variable with 'register' storage class|'catch' variable|bit-field}1
redeclaration has different alignment requirement (%1 vs %0)
%0 must be specified on definition if it is specified on any declaration
requested alignment is less than minimum alignment of %1 for type %0
aligned %select{allocation|deallocation}0 function of type '%1' is %select{only|not}4 available on %2%select{ %3 or newer|}4
'aligned' attribute requires integer constant
requested alignment is dependent but declaration is not dependent
requested alignment is not a power of 2
requested alignment must be %0 or smaller
requested alignment must be %0 or greater
invalid application of 'alignof' to a field of a class still being defined
allocating an object of abstract class type %0
expected initializer
ambiguous cast from base %0 to derived %1:%2
ambiguous conversion of delete expression of type %0 to a pointer
ambiguous conversion from derived class %0 to base class %1:%2
constructor of %0 inherited from multiple base class subobjects
member %0 found in multiple base classes of different types
non-static member %0 found in multiple base-class subobjects of type %1:%2
ambiguous conversion from pointer to member of %select{base|derived}0 class %1 to pointer to member of %select{derived|base}0 class %2:%3
reference to %0 is ambiguous
multiple suitable %0 functions in %1
a type named %0 is hidden by a declaration in a different namespace
anonymous bit-field has negative width (%0)
anonymous bit-field cannot have qualifiers
anonymous property is not supported
anonymous %select{struct|union}0 can only contain non-static data members
member of anonymous %select{struct|union}0 redeclares %1
anonymous %select{struct|union}0 cannot contain a %select{private|protected}1 data member
functions cannot be declared in an anonymous %select{struct|union}0
static members cannot be declared in an anonymous %select{struct|union}0
types cannot be declared in an anonymous %select{struct|union}0
anonymous %select{structs|structs and classes}0 must be %select{struct or union|class}0 members
anonymous unions at namespace or global scope must be declared 'static'
anonymous union at class scope must not have a storage specifier
%select{x86|x86-64}0 'interrupt' attribute only applies to functions that have %select{a 'void' return type|only a pointer parameter optionally followed by an integer parameter|a pointer as the first parameter|a %2 type as the second parameter}1
interrupt service routine cannot be called directly
must explicitly describe intended ownership of an object array parameter
existing instance variable %1 for property %0 with %select{unsafe_unretained|assign}2 attribute must be __unsafe_unretained
cannot perform atomic operation on a pointer to type %0: type has non-trivial ownership
cannot capture __autoreleasing variable in a %select{block|lambda by copy}0
%select{__block variables|global variables|fields|instance variables}0 cannot have __autoreleasing ownership
incompatible types casting %0 to %1 with a %select{__bridge|__bridge_transfer|__bridge_retained}2 cast
cast of %select{Objective-C|block|C}0 pointer type %1 to %select{Objective-C|block|C}2 pointer type %3 cannot use %select{__bridge|__bridge_transfer|__bridge_retained}4
%select{cast|implicit conversion}0 of %select{Objective-C|block|C}1 pointer type %2 to %select{Objective-C|block|C}3 pointer type %4 requires a bridged cast
collection expression type %0 is a forward declaration
%select{implicit conversion|cast}0 of weak-unavailable object of type %1 to a __weak object of type %2
method implementation does not match its declaration
ARC forbids explicit message send of %0
ARC forbids %select{implementation|synthesis}0 of %1
ARC forbids use of %0 in a @selector
%select{|unsafe_unretained|strong|weak}1 property %0 may not also be declared %select{|__unsafe_unretained|__strong|__weak|__autoreleasing}2
%select{pointer|reference}1 to non-const type %0 with no explicit ownership
init methods must return a type related to the receiver type
method was declared as %select{an 'alloc'|a 'copy'|an 'init'|a 'new'}0 method, but its implementation doesn't match because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
no visible @interface for %0 declares the selector %1
no known %select{instance|class}1 method for selector %0
%select{implicit conversion|cast}0 of %select{%2|a non-Objective-C pointer type %2|a block pointer|an Objective-C pointer|an indirect pointer to an Objective-C pointer}1 to %3 is disallowed with ARC
multiple methods named %0 found with mismatched result, parameter type or attributes
'new' cannot allocate an array of %0 with no explicit ownership
explicit ownership qualifier on cast result has no effect
passing address of %select{non-local|non-scalar}0 object to __autoreleasing parameter for write-back
ARC forbids synthesizing a property of an Objective-C object with unspecified ownership or storage attribute
performSelector names a selector which retains the object
pseudo-destructor destroys object of type %0 with inconsistently-qualified type %1
receiver %0 for class message is a forward declaration
receiver type %0 for instance message is a forward declaration
existing instance variable %1 for strong property %0 may not be %select{|__unsafe_unretained||__weak}2
thread-local variable has non-trivial ownership: type is %0
incompatible pointer types passing retainable parameter of type %0to a CF function expecting %1 type
class is incompatible with __weak references
the result of a delegate init call must be immediately returned or assigned to 'self'
cannot create __weak reference in file using manual reference counting
dereferencing a __weak pointer is not allowed due to possible null value caused by race condition, assign it to strong variable first
cannot create __weak reference because the current deployment target does not support weak references
assignment of a weak-unavailable object to a __weak object
synthesizing __weak instance variable of type %0, which does not support weak references
parameter may not be qualified with an address space
argument value %0 is outside the valid range [%1, %2]
argument %0 value should represent a contiguous bit field
argument should be a multiple of %0
argument should be a power of 2
argument should be an 8-bit value shifted by a multiple of 8 bits
argument should be an 8-bit value shifted by a multiple of 8 bits, or in the form 0x??FF
arithmetic on pointer to interface %0, which is not a constant size for this architecture and platform
coprocessor %0 must be configured as %select{GCP|CDE}1
invalid special register for builtin
array designator range [%0, %1] is empty
array designator value '%0' is negative
array designator cannot initialize non-array type %0
array designator index (%0) exceeds array bounds (%1)
array has %select{incomplete|sizeless}0 element type %1
cannot initialize array %diff{of type $ with array of type $|with different type of array}0,1
initializing wide char array with incompatible wide string literal
initializing wide char array with non-wide string literal
cannot initialize array %diff{of type $ with non-constant array of type $|with different type of array}0,1
array initializer must be an initializer list%select{| or string literal| or wide string literal}0
initializing 'char8_t' array with plain string literal
%select{|ISO C++20 does not permit }0initialization of char array with UTF-8 string literal%select{ is not permitted by '-fchar8_t'|}0
initializing char array with wide string literal
array size must be specified in new expression with no initializer
array of abstract class type %0
array section does not specify contiguous storage
array section does not specify length for outermost dimension
ambiguous conversion of array size expression of type %0 to an integral or enumeration type
array size expression of type %0 requires explicit conversion to type %1
array size expression has incomplete class type %0
size of array has non-integer type %0
array size expression must have integral or %select{|unscoped }0enumeration type, not %1
variable length array must be bound in function definition
star modifier used outside of function prototype
%0 used in non-outermost array type derivation
%0 used in array declarator outside of function prototype
array is too large (%0 elements)
automatic variable qualified with an%select{| invalid}0 address space
bad type for named register variable
asm operand has incomplete type %0
more than one input constraint matches the same output '%0'
register '%0' unsuitable for global register variables on this target
invalid input constraint '%0' in asm
invalid input size for constraint '%0'
invalid lvalue in asm input for constraint '%0'
invalid lvalue in asm output
invalid output constraint '%0' in asm
invalid output size for constraint '%0'
parameter references not allowed in naked functions
'this' pointer references not allowed in naked functions
reference to a %select{bit-field|vector element|global register variable}0 in asm %select{input|output}1 with a memory constraint '%2'
size of register '%0' does not match variable size
unsupported inline asm: input with type %diff{$ matching output with type $|}0,1
asm constraint has an unexpected number of alternatives: %0 vs %1
unknown register name '%0' in asm
unwind clobber can't be used with asm goto
type %0 in generic association compatible with previously specified type %1
type %0 in generic association incomplete
type %0 in generic association not an object type
type %0 in generic association is a variably modified type
use of @defs is not supported on this architecture and platform
address argument to atomic builtin cannot be const-qualified (%0 invalid)
argument to atomic builtin of type '_ExtInt' is not supported
Atomic memory operand must have a power-of-two size
address argument to atomic builtin must be a pointer (%0 invalid)
address argument to atomic builtin must be a pointer to integer, floating-point or pointer (%0 invalid)
address argument to atomic builtin must be a pointer to integer or pointer (%0 invalid)
address argument to atomic builtin must be a pointer to 1,2,4,8 or 16 byte type (%0 invalid)
address argument to load or store exclusive builtin must be a pointer to 1,2,4 or 8 byte type (%0 invalid)
atomic %select{load|store}0 requires runtime support that is not available for this target
synchronization scope argument to atomic operation is invalid
address argument to atomic operation must be a pointer to _Atomic type (%0 invalid)
address argument to atomic operation must be a pointer to %select{|atomic }0integer (%1 invalid)
address argument to atomic operation must be a pointer to %select{|atomic }0integer or pointer (%1 invalid)
address argument to atomic operation must be a pointer to %select{|atomic }0integer, pointer or supported floating point type (%1 invalid)
address argument to %select{atomic|__sync}0 operation must be a pointer to a non address discriminated type (%1 invalid)
address argument to atomic operation must be a pointer to non-%select{const|constant}0 _Atomic type (%1 invalid)
address argument to atomic operation must be a pointer to non-const type (%0 invalid)
address argument to atomic operation must be a pointer to a trivially-copyable type (%0 invalid)
atomic property of reference type %0 cannot have non-trivial assignment operator
_Atomic cannot be applied to %select{incomplete |array |function |reference |atomic |qualified |sizeless ||integer }0type %1 %select{|||||||which is not trivially copyable|}0
%0 attribute expression never produces a constant expression
the type %0 is already explicitly ownership-qualified
%0 attribute can only be applied to a %select{function|method}1 with an error parameter
%0 attribute with '%1' convention can only be applied to a %select{function|method}2 returning %select{an integral type|a pointer}3
tls_model must be "global-dynamic", "local-dynamic", "initial-exec" or "local-exec"
function type may not be qualified with an address space
multiple address spaces specified for type
address space is negative
address space is larger than the maximum supported (%0)
requested alignment must be %0 bytes or smaller
%0 attribute argument is invalid: %select{max must be 0 since min is 0|min must not be greater than max}1
%0 attribute must be greater than 0
%0 attribute requires parameter %1 to be %select{int or bool|an integer constant|a string|an identifier|a constant expression}2
%0 attribute parameter %1 is out of bounds
%0 attribute parameter %1 is out of bounds: %plural{0:no parameters to index into|1:can only be 1, since there is one parameter|:must be between 1 and %2}2
%0 attribute requires integer constant between %1 and %2 inclusive
%0 attribute requires %select{int or bool|an integer constant|a string|an identifier}1
%0 attribute requires an integer type argument
%0 attribute requires a pointer type argument
'__clang_arm_builtin_alias' attribute can only be applied to an ARM builtin
%0 is only supported when '-msve-vector-bits=<bits>' is specified with a value of 128, 256, 512, 1024 or 2048.
'__clang_arm_mve_strict_polymorphism' attribute can only be applied to an MVE/NEON vector type
Neon vector size must be 64 or 128 bits
invalid SVE vector size '%0', must match value set by '-msve-vector-bits' ('%1')
%0 attribute can only be applied to a ARM or RISC-V builtin
'cleanup' argument %select{|%1 |%1 }0is not a %select{||single }0function
'cleanup' function %0 parameter has %diff{type $ which is incompatible with type $|incompatible type}1,2
'cleanup' function %0 must take 1 parameter
'__declspec(dllexport)' cannot be applied to more than one default constructor in %0
attribute %q0 cannot be applied to a deleted function
lambda cannot be declared %0
attribute %q0 cannot be applied to member of %q1 class
%q0 must have external linkage when declared %q1
redeclaration of %q0 cannot add %q1 attribute
%q0 cannot be thread local when declared %q1
definition of dllimport data
dllimport cannot be applied to non-inline function definition
definition of dllimport static field not allowed
%0 attribute argument may only refer to a function parameter of integer type
%select{a reference type|an array type|a non-vector or non-vectorizable scalar type}0 is an invalid argument to attribute %1
invalid argument expression to firebloom attribute
%0 attribute is invalid for the implicit this argument
invalid matrix element type %0
vector size not an integral multiple of component size
%0 attribute applied to non-SVE type %1
invalid vector element type %0
%0 attribute does not appear on the first declaration
multiple garbage collection attributes specified for type
%0 attribute has no effect on defaulted or deleted functions
%0 attribute is permitted on definitions only
empty %0 cannot be composed with named ones
%0 attribute cannot be used with pointers to members
function type with %0 attribute must have C linkage
%0 attribute is not supported in %select{C|C++|Objective-C}1
%0 attribute is not supported on '%1'
%0 attribute can only be applied once per parameter
attribute only applies to output parameters
redeclaration of %0 must %select{not |}1have the 'overloadable' attribute
at most one overload for a given name may lack the 'overloadable' attribute
'overloadable' function %0 must have a prototype
%0 attribute only applies to%select{| constant}1 pointer arguments
argument %0 to 'preferred_name' attribute is not a typedef for a specialization of %1
'regparm' parameter must be between 0 and %0 inclusive
'regparm' is not valid on this platform
attribute %0 is supported in the OpenCL version %1%select{| onwards}2
%0 attribute requires a %select{positive|non-negative}1 integral compile time constant expression
argument to %select{'code_seg'|'section'}1 attribute is not valid for this target: %0
'selectany' can only be applied to data items with external linkage
'sentinel' parameter 1 less than zero
'sentinel' parameter 2 not 0 or 1
%0 size too large
%0 attribute cannot be applied to sizeless type %1
'symbol_metadata_footnote' attributes must use section names that are between 1 and 9 characters long, excluding the leading underscores.
%0 attribute takes at least %1 argument%s1
%0 attribute takes no more than %1 argument%s1
%0 attribute is not supported on targets missing %1; specify an appropriate -march= or -mcpu=
the vecreturn attribute can only be used on a POD (plain old data) class or structure (i.e. no virtual functions)
the vecreturn attribute can only be used on a class or structure with one member, which must be a vector
weak declaration cannot have internal linkage
weakref declaration of %0 must be in a global context
weakref declaration must have internal linkage
weakref declaration of %0 must also have an alias attribute
%0 attribute only applies to %select{functions|unions|variables and functions|functions and methods|functions, methods and blocks|functions, methods, and parameters|variables|variables and fields|variables, data members and tag types|types and namespaces|variables, functions and classes|kernel functions|non-K&R-style functions}1
%0 attribute only applies to %1
%0 attribute %plural{0:takes no arguments|1:takes one argument|:requires exactly %1 arguments}1
zero %0 size
%0 and %1 attributes are not compatible
cannot pass bit-field as __auto_type initializer in C
%select{'auto'|'decltype(auto)'|'__auto_type'|template arguments}0 deduced as %1 in declaration of %2 and deduced as %3 in declaration of %4
cannot deduce return type %0 from returned value of type %1
'%select{auto|decltype(auto)}0' in return type deduced as %1 here but deduced as %2 in earlier return statement
cannot deduce return type %0 for function with no return statements
cannot deduce return type from initializer list
cannot deduce return type %0 from omitted return expression
function %0 with deduced return type cannot be used before it is defined
function with deduced return type cannot be virtual
deduced conflicting types %diff{($ vs $) |}0,1for initializer list element type
cannot use __auto_type with initializer list in C
'auto' return without trailing return type; deduced return types are a C++14 extension
new expression for type %0 contains multiple constructor arguments
new expression for type %0 has incompatible constructor argument of type %1
new expression for type %0 requires a constructor argument
%select{function with deduced return type|declaration with trailing return type}0 must be the only declaration in its group
%select{'auto'|'decltype(auto)'|'__auto_type'|use of %select{class template|function template|variable template|alias template|template template parameter|concept|template}2 %3 requires template arguments; argument deduction}0 not allowed %select{in function prototype|in non-static struct member|in struct member|in non-static union member|in union member|in non-static class member|in interface member|in exception declaration|in template parameter until C++17|in block literal|in template argument|in typedef|in type alias|in function return type|in conversion function type|here|in lambda parameter|in type allocated by 'new'|in K&R-style function parameter|in template parameter|in friend declaration|in function prototype that is not a function declaration|in requires expression parameter}1
'auto' variable template instantiation is not allowed
variable %0 with type %1 has incompatible initializer of type %2
cannot deduce actual type for variable %0 with type %1 from initializer list
initializer for variable %0 with type %1 contains multiple expressions
initializer for variable %0 with type %1 is empty
cannot deduce type for variable %1 with type %2 from %select{parenthesized|nested}0 initializer list
declaration of variable %0 with deduced type %1 requires an initializer
variable %0 declared with deduced type %1 cannot appear in its own initializer
return type of 'await_suspend' is required to be 'void' or 'bool' (have %0)
%0 is an incomplete type
property implementation must have its declaration in the category %0
%select{const_cast||||C-style cast|functional-style cast|}0 to %2, which is not a reference, pointer-to-object, or pointer-to-data-member
address of overloaded function %0 cannot be cast to type %1
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|addrspace_cast}0 from %1 to %2 converts between mismatching address spaces
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from bit-field lvalue to reference type %2
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|addrspace_cast}0 from %1 to %2 is not allowed
cannot %select{||reinterpret_cast||C-style cast||}0 from member pointer type %1 to member pointer type %2 of different size
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2 casts away qualifiers
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|addrspace_cast}0 from rvalue to reference type %2
%select{||reinterpret_cast||C-style cast||}0 from scalar %1 to vector %2 of different size
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2, which are not related by inheritance, is not allowed
%select{||reinterpret_cast||C-style cast||}0 from vector %1 to scalar %2 of different size
%select{||reinterpret_cast||C-style cast||}0 from vector %1 to vector %2 of different size
%0 is not a class type
%0 is not polymorphic
cannot use dynamic_cast to convert from %0 to %1
invalid target type %0 for dynamic_cast; target type must be a reference or pointer type to a defined class
%0 cannot be used as the type of a kernel parameter
cannot cast from lvalue of type %1 to rvalue reference type %2; types are not compatible
left hand operand to %0 must be a %select{|pointer to }1class compatible with the right hand operand, but is %2
right hand operand to %0 has non-pointer-to-member type %1
function multiversioning doesn't support %select{feature|architecture}0 '%1'
cannot allocate %select{function|reference}1 type %0 with new
%0 cannot be the name of a parameter
parameter name cannot have template arguments
property implementation must be in a class or category implementation
property implementation must have its declaration in interface %0 or one of its extensions
bad receiver type %0
reinterpret_cast cannot resolve overloaded function %0 to type %1
reinterpret_cast of a %0 to %1 needs its address, which is not allowed
cast from pointer to smaller type %2 loses information
cannot cast from rvalue of type %1 to rvalue reference type %2; types are not compatible
cannot cast from type %1 to member pointer type %2
address of overloaded function %0 cannot be static_cast to type %1
cannot cast from type %1 to pointer type %2
%0 cannot be the name of a variable or data member
base class %0 has a flexible array member
unions cannot have base classes
base class initializer %0 names both a direct base class and an inherited virtual base class
constructor initializer %0 does not name a class
base specifier must name a class
%0 attribute cannot be applied to a base specifier
binding %0 cannot appear in the initializer of its own decomposition declaration
arithmetic operation in dependent count expression is only allowed for struct fields
__builtin_bit_cast %select{source|destination}0 type must be trivially copyable
__builtin_bit_cast source size does not equal destination size (%0 vs %1)
bit-field %0 has negative width (%1)
named bit-field %0 has zero width
%select{bit-field %1|anonymous bit-field}0 is too wide (%2 bits)
width of%select{ anonymous|}0 bit-field%select{| %1}0 (%2 bits) exceeds the %select{width|size}3 of its type (%4 bit%s4)
variable is not assignable (missing __block type specifier)
'extern' variable cannot have an initializer
__block attribute not allowed, only allowed on local variables
__block attribute not allowed on declaration with a variably modified type
non-void block should return a value
block cannot return %select{array|function}0 type %1
blocks support disabled - compile with -fblocks or %select{pick a deployment target that supports them|for OpenCL 2.0}0
reference to non-static member function must be called%select{|; did you mean to call it with no arguments?}0
%select{string|character|boolean|numeric}0 literal must be prefixed by '@' in a collection
'break' statement not in loop or switch statement
__builtin_btf_type_id argument %0 not a constant
first argument to __builtin_annotation must be an integer
second argument to __builtin_annotation must be a non-wide string constant
this builtin is not supported on the requested cpu, please specify -mcpu=%0 or newer
definition of builtin function %0
builtin functions must be directly called
function-style cast to a builtin type can only take one argument
%ordinal0 argument must be a %select{vector, integer or floating point type|matrix|pointer to a valid matrix element type|signed integer or floating point type|vector type|floating point type|vector of integers}1 (was %2)
%select{non-pointer|function pointer|void pointer}0 argument to '__builtin_launder' is not allowed
argument to __builtin_longjmp must be a constant 1
__builtin_longjmp is not supported for the current target
matrix types extension is disabled. Pass -fenable-matrix to enable it
%0 dimension is outside the allowed range [1, %1]
the pointee of the 2nd argument must match the element type of the 1st argument (%0 != %1)
%0 argument must be a constant unsigned integer expression
cannot store matrix to read-only pointer
stride must be greater or equal to the number of rows
call to '%select{__builtin_operator_new|__builtin_operator_delete}0' selects non-usual %select{allocation|deallocation}0 function
cannot redeclare builtin function %0
'%0' is only available in %1
__builtin_setjmp is not supported for the current target
builtin is not supported on this target
this builtin is only available on x86-64 and aarch64 targets
%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature, not permitted in C++
calling %0 with incomplete return type %1
argument type %0 is incomplete
calling function with incomplete return type %0
'callback' attribute argument %0 is not a known function parameter
'callback' attribute specifies invalid callback callee
multiple 'callback' attributes specified
'callback' attribute specifies no callback callee
'callback' attribute callee may not be variadic
'callback' attribute callee does not have function type
'callback' argument at position %0 references unavailable implicit 'this'
'called_once' attribute only applies to function-like parameters
cannot find suitable %select{getter|setter}0 for property %1
cannot form a pointer-to-member to member %0 of reference type %1
cannot pass non-trivial C object of type %0 by value to variadic %select{function|block|method|constructor}1
cannot pass object with interface type %0 by value through variadic %select{function|block|method|constructor}1
cannot pass object with interface type %1 by value to variadic %select{function|block|method|constructor}2; expected type from format string was %3
cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2
cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
capture host variable %0 by reference in device or host device lambda function
__block variable %0 cannot be captured in a %select{lambda expression|captured statement}1
non-local lambda expression cannot have a capture-default
%0 in capture list does not name a variable
%0 can appear only once in a capture list
%0 cannot be captured because it does not have automatic storage duration
by-copy capture of value of abstract type %0
by-copy capture of variable %0 with %select{incomplete|sizeless}1 type %2
%select{function|parameter}0 declared '[[carries_dependency]]' after its first declaration
'[[carries_dependency]]' attribute only allowed on parameter in a function declaration or lambda
'case' statement not in switch statement
cannot type-cast from __bf16
operand of type %0 cannot be cast to a pointer type
pointer cannot be cast to type %0
cannot type cast @selector expression
cannot type-cast to __bf16
cannot catch incomplete type %0
cannot catch pointer to incomplete type %0
cannot catch reference to incomplete type %0
@catch parameter is not a pointer to an interface type
cannot catch exceptions by rvalue reference
cannot catch %select{|reference to }0sizeless type %1
cannot catch variably modified type %0
cannot define %select{category|class extension}0 for undefined class %1
property declared in category %0 cannot be implemented in class implementation
function declared '%0' here was previously declared %select{'%2'|without calling convention}1
parameter %0 must have a complete type to use function %1 with the %2 calling convention
function with no prototype cannot use the %0 calling convention
variadic function cannot use %0 calling convention
CFString literal is not a string constant
circular inheritance between %0 and %1
cannot declare class extension for %0 after class implementation
base %0 is marked '%select{final|sealed}1'
property %0 is a class property; did you mean to access it with class '%1'?
%0 redeclared with '%1' access
'objc_class_stub' attribute cannot be specified on a class that does not have the 'objc_subclassing_restricted' attribute
property follows Cocoa naming convention for returning 'owned' objects
the type %0 is not a pointer to a fast-enumerable object
type of machine mode does not support base vector types
compound literal in function scope may not be qualified with an address space
%select{block pointer|pointer|reference}0 to function type %select{%2 |}1cannot have '%3' qualifier
concept declarations may only appear in global or namespace scope
extraneous template parameter list in concept definition
concept cannot have associated constraints
concept template parameter list must have at least one parameter; explicit specialization of concepts is not allowed
operands to conditional of types%diff{ $ and $|}0,1 are incompatible in ARC mode
conditional expression is ambiguous; %diff{$ can be converted to $ and vice versa|types can be convert to each other}0,1
conditional expression is ambiguous; %diff{$ and $|types}0,1 can be converted to several common types
cannot mix vectors and extended vectors in a vector conditional
vector condition type %0 and result type %1 do not have elements of the same size
GNU vector conditional operand cannot be %select{void|a throw expression}0
vector operands to the vector conditional must be the same type %diff{($ and $)|}0,1}
enumeration type %0 is not allowed in a vector conditional
vector condition type %0 and result type %1 do not have the same number of elements
%select{left|right}1 operand to ? is void, but %select{right|left}1 operand is of type %0
CUDA special function '%0' must have scalar return type
conflicting types for alias %0
conflicting code segment specifiers
instance variable %0 has conflicting bit-field width
conflicting instance variable names: %0 vs %1
instance variable %0 has conflicting type%diff{: $ vs $|}1,2
virtual function %0 has different calling convention attributes %diff{($) than the function it overrides (which has calling convention $)|than the function it overrides}1,2
conflicting super class name %0
conflicting types for %0
argument to %0 must be a constant integer
consteval function %0 cannot override a non-consteval function
statement not allowed in %select{constexpr|consteval}1 %select{function|constructor}0
no return statement in %select{constexpr|consteval}0 function
destructor cannot be declared %select{<ERROR>|constexpr|consteval|constinit}0
destructor cannot be declared %select{<ERROR>|constexpr|consteval|constinit}0 because %select{data member %2|base class %3}1 does not have a constexpr destructor
constexpr if condition is not a constant expression
variable of non-literal type %1 cannot be defined in a constexpr %select{function|constructor}0
%select{static|thread_local}1 variable not permitted in a constexpr %select{function|constructor}0
'main' is not allowed to be declared %select{constexpr|consteval}0
%select{constexpr|consteval}2 %select{function|constructor}1's %ordinal0 parameter type %3 is not a literal type
%select{constexpr|consteval}0 function's return type %1 is not a literal type
%select{non-constexpr|constexpr|consteval}1 declaration of %0 follows %select{non-constexpr|constexpr|consteval}2 declaration
non-void %select{constexpr|consteval}1 function %0 should return a value
declaration of constexpr static data member %0 requires an initializer
%select{class|struct|interface|union|enum}0 cannot be marked %select{<ERROR>|constexpr|consteval|constinit}1
constexpr variable cannot have non-literal type %0
constexpr variable %0 must have constant destruction
constexpr variable %0 must be initialized by a constant expression
virtual function cannot be constexpr
constexpr %select{member function|constructor}0 not allowed in %select{struct|interface|class}1 with virtual base %plural{1:class|:classes}2
variably-modified type %0 cannot be used in a constexpr %select{function|constructor}1
%select{<ERROR>|constexpr|consteval|constinit}0 can only be used in %select{|variable and function|function|variable}0 declarations
'constinit' specifier added after initialization of variable
local variable cannot be declared 'constinit'
virtual function cannot have a requires clause
copy constructor must pass its first argument by reference
constructor cannot be declared '%0'
constructor cannot be redeclared
constructor cannot have a return type
class extension has no primary class
cannot jump from this continue statement to the loop increment; jump bypasses initialization of loop condition variable
'continue' statement not in loop statement
conversion function must be a non-static member function
conversion function cannot be redeclared
conversion function cannot have a return type
conversion function cannot convert to an array type
conversion function cannot convert to a function type
conversion function cannot be variadic
cannot specify any part of a return type in the declaration of a conversion function%select{; put the complete type after 'operator'|; use a typedef to declare a conversion to %1|; use an alias template to declare a conversion to %1|}0
conversion function cannot have any parameters
first two arguments to __builtin_convertvector must have the same number of elements
first argument to __builtin_convertvector must be a vector
second argument to __builtin_convertvector must be a vector type
'&' must precede a capture when the capture default is '='
std::experimental::coroutine_handle missing a member named '%0'
'%1' cannot be used in %select{a constructor|a destructor|the 'main' function|a constexpr function|a function with a deduced return type|a varargs function|a consteval function}0
Objective-C methods as coroutines are not yet supported
'%0' cannot be used outside a function
the expression 'co_await __promise.final_suspend()' is required to be non-throwing
%0: 'get_return_object_on_allocation_failure()' must be a static member function
the coroutine promise type %0 declares both 'return_value' and 'return_void'
%0 is required to have a non-throwing noexcept specification when the promise type declares 'get_return_object_on_allocation_failure()'
the coroutine promise type %0 must declare either 'return_value' or 'return_void'
this function cannot be a coroutine: %0 is an incomplete type
%0 is required to declare the member 'unhandled_exception()'
this function cannot be a coroutine: missing definition of specialization %0
'%0' cannot be used in an unevaluated context
'%0' cannot be used in the handler of a try block
return type of virtual function %3 is not covariant with the return type of the function it overrides (ambiguous conversion from derived class %0 to base class %1:%2)
invalid covariant return for virtual function: %1 is a %select{private|protected}2 base class of %0
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is incomplete)
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is not derived from %2)
return type of virtual function %0 is not covariant with the return type of the function it overrides (class type %1 is more qualified than class type %2
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 has different qualifiers than %2)
'cpu_dispatch' function redeclared with different CPUs
multiple 'cpu_specific' functions cannot specify the same CPU: %0
%select{constructor|destructor}1 %0 must not return void expression
illegal device builtin %select{surface|texture}0 reference class template %1 declared here
illegal device builtin %select{surface|texture}0 reference type %1 declared here
cannot use '%0' in %select{__device__|__global__|__host__|__host__ __device__}1 function
__shared__ variable %0 cannot be 'extern'
__shared__ local variables not allowed in %select{__device__|__global__|__host__|__host__ __device__}0 functions
__constant__, __device__, and __managed__ are not allowed on non-static local variables
%select{__device__|__global__|__host__|__host__ __device__}0 function %1 cannot overload %select{__device__|__global__|__host__|__host__ __device__}2 function %3
constexpr function %0 without __host__ or __device__ attributes cannot overload __device__ function with same signature.  Add a __host__ attribute, or build with -fno-cuda-host-device-constexpr.
cannot use variable-length arrays in %select{__device__|__global__|__host__|__host__ __device__}0 functions
module name '%0' specified on command line does not match name of module
%select{reference|backing array for 'std::initializer_list'}2 %select{|subobject of }1member %0 %select{binds to|is}2 a temporary object whose lifetime would be shorter than the lifetime of the constructed object
dealloc return type must be correctly specified as 'void' under ARC, instead of %0
GNU decimal type extension not supported
%0 attribute cannot be applied to a statement
'%0' declared as an array with a negative size
declarator requires an identifier
'__declspec(thread)' applied to variable that already has a thread-local storage specifier
'decltype(auto)' cannot be combined with other type specifiers
cannot form %select{pointer to|reference to|array of}0 'decltype(auto)'
'decltype(auto)' can only be used as a return type in a function declaration
cannot deduce 'decltype(auto)' from initializer list
'decltype(auto)' not allowed here
'decltype' cannot be used to name a declaration
cannot decompose members of ambiguous base class %1 of %0:%2
cannot decompose class type %0 because it has an anonymous %select{struct|union}1 member
decomposition declaration not permitted in this context
cannot decompose members of inaccessible base class %1 of %0
cannot decompose %select{private|protected}0 member %1 of %3
cannot decompose lambda closure type
cannot decompose class type %1: %select{its base classes %2 and|both it and its base class}0 %3 have non-static data members
decomposition declaration must be the only declaration in its group
decomposition declaration cannot be declared with parentheses
decomposition declaration %0 requires an initializer
decomposition declaration cannot be declared %plural{1:'%1'|:with '%1' specifiers}0
cannot decompose this type; 'std::tuple_element<%0>::type' does not name a type
cannot decompose this type; 'std::tuple_size<%0>::value' is not a valid integral constant expression
decomposition declaration template not supported
decomposition declaration cannot be declared with type %0; declared type must be 'auto' or reference to 'auto'
cannot decompose %select{union|non-class, non-array}1 type %2
type %0 decomposes into %3 %plural{1:element|:elements}2, but %select{%plural{0:no|:only %1}1|%1}4 %plural{1:name was|:names were}1 provided
cannot decrement expression of type bool
cannot %select{form pointer to|form reference to|form array of|form function returning|use parentheses when declaring variable with}0 deduced class template specialization type
ambiguous deduction for template arguments of %0
no viable constructor or deduction guide for deduction of template arguments of %0
class template argument deduction for %0 selected a deleted constructor
class template argument deduction for %0 selected an explicit %select{constructor|deduction guide}1 for copy-list-initialization
template %0 has no definition and no %select{|viable }1deduction guides for deduction of template arguments
%select{<error>|function template|variable template|alias template|template template parameter|concept|template}0 %1 requires template arguments; argument deduction only allowed for class templates
deduced non-type template argument does not have the same type as the corresponding template parameter%diff{ ($ vs $)|}0,1
deduced return types are a C++14 extension
typename specifier refers to %select{class template|function template|variable template|alias template|template template parameter|template}0; argument deduction not allowed here
deduced type %1 of deduction guide is not %select{|written as }2a specialization of template %0
deduction guide cannot have a function definition
deduction guide cannot be declared '%0'
cannot specify deduction guide for %select{<error>|function template|variable template|alias template|template template parameter|concept|dependent template name}0 %1
deduction guide declaration without trailing return type
redeclaration of deduction guide
deduction guide cannot be %select{explicitly instantiated|explicitly specialized}0
deduction guide template contains %select{a template parameter|template parameters}0 that cannot be deduced
cannot specify any part of a return type in the declaration of a deduction guide
deduction guide has different access from the corresponding member template
deduction guide must be declared in the same scope as template %q0
exception specifications of %select{return|argument}0 types differ
default template argument in a class template partial specialization
addition of default argument on redeclaration makes this constructor a %select{default|copy|move}0 constructor
default initialization of an object of const type %0%select{| without a user-provided default constructor}1
default member initializer for %0 uses itself
default member initializer for %1 needed within definition of enclosing class %0 outside of member functions
'default' statement not in switch statement
return type of defaulted 'operator<=>' cannot be deduced because three-way comparison for %select{|member|base class}0 %1 has a deduced return type and is not yet defined
deduced return type for defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator must be 'auto', not %1
defaulted member %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator must be const-qualified
%select{<ERROR>|equality|three-way|equality|relational}0 comparison operator can only be defaulted in a class definition
invalid parameter type for defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator; found %1, expected %2%select{| or %4}3
parameters for defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator must have the same type%diff{ (found $ vs $)|}1,2
return type for defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator must be 'bool', not %1
comparison operator template cannot be defaulted
the parameter for an explicitly-defaulted copy assignment operator must be an lvalue reference type
the parameter for this explicitly-defaulted copy %select{constructor|assignment operator}0 is const, but a member or base requires it to be non-const
the parameter for an explicitly-defaulted move %select{constructor|assignment operator}0 may not be const
an explicitly-defaulted %select{|copy |move }0constructor cannot have default arguments
an explicitly-defaulted %select{copy|move}0 assignment operator may not have 'const'%select{, 'constexpr'|}1 or 'volatile' qualifiers
explicitly-defaulted %select{copy|move}0 assignment operator must return %1
an explicitly-defaulted %select{|copy |move }0constructor cannot be variadic
the parameter for an explicitly-defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 may not be volatile
definition of explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}0
definition of implicitly declared %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}1
delegating constructors are permitted only in C++11
an initializer for a delegating constructor must appear alone
converting delete expression from type %0 to type %1 invokes an explicit conversion function
deleting incomplete class type %0; no conversions to pointer type
cannot delete expression of type %0
deleted definition must be first declaration
attempt to use a deleted function
constructor inherited by %0 from base class %1 is implicitly deleted
'main' is not allowed to be deleted
deleted function %0 cannot override a non-deleted function
typename specifier refers to %select{class template|function template|variable template|alias template|template template parameter|template}0 member in %1; argument deduction not allowed here
no candidate function template was found for dependent friend function template specialization
nested name specifier for a declaration cannot depend on a template parameter
type of specialized non-type template argument depends on a template parameter of the partial specialization
%select{declaration|definition}0 of %select{struct|interface|union|class|enum}1 in a dependent scope
non-type template argument specializes a template parameter with dependent type %0
dereference of pointer to incomplete type %0
'objc_designated_initializer' attribute only applies to init methods of interface or class extension declarations
designator in initializer for %select{scalar|indivisible sizeless}0 type %1
designator into flexible array member subobject
%select{no_destroy|always_destroy}0 attribute can only be applied to a variable with static or thread storage duration
destroying operator delete can have only an optional size and optional alignment parameter
destructor cannot be declared '%0'
identifier %0 in object destruction expression does not name the type %1 of the object being destroyed
identifier %0 in object destruction expression does not name a type
destructor type %0 in object destruction expression does not match the type %1 of the object being destroyed
expected the class name after '~' to name the enclosing class
identifier %0 after '~' in destructor name does not name a type
destructor must be a non-static member function
destructor cannot be redeclared
destructor cannot have a return type
destructor cannot be declared as a template
destructor cannot be variadic
destructor cannot have any parameters
invalid diagnostic type for 'diagnose_if'; use "error" or "warning" instead
conflicting asm label
declaration of %0 has a different language linkage
conflicting pass_object_size attributes on parameters
virtual function %0 has a different return type %diff{($) than the function it overrides (which has return type $)|than the function it overrides}1,2
dimension expression does not evaluate to a constant unsigned int
@selector expression formed with direct selector %0
exception specifications are not allowed beyond a single level of indirection
cannot cast %select{private|protected}2 base class %1 to %0
reference to %select{destructor|pseudo-destructor}0 must be called%select{|; did you mean to call it with no arguments?}1
reimplementation of category %1 for class %0
reimplementation of class %0
base class %0 specified more than once as a direct base class
duplicate case value '%0'
duplicate case value: '%0' and '%1' both equal '%2'
duplicate interface definition for class %0
instance variable is already declared
synthesized properties %0 and %1 both claim instance variable %2
duplicate member %0
duplicate declaration of method %0
property has a previous declaration
multiple vtable pointer authentication policies on %0
dynamic property cannot have instance variable specification
dynamic initialization is not supported for __device__, __constant__, __shared__, and __managed__ variables.
catch-all handler must come last
ISO C requires a named parameter before '...'
only function and template parameters can be parameter packs
scalar initializer cannot be empty
initializer for sizeless type %0 cannot be empty
non-integral type %0 is an invalid underlying type
mode %0 is not supported for enumeration types
enumeration previously declared with %select{non|}0fixed underlying type
enumeration previously declared as %select{un|}0scoped
enumeration redeclared with different underlying type %0 (was %1)
enumerator %0 does not exist in instantiation of %1
enumerator value is not representable in the underlying type %0
enumerator value %0 is not representable in the underlying type %1
the event_t type can only be used with __private address space qualifier
exception specification of %0 uses itself
exception specifications are not allowed in %select{typedefs|type aliases}0
exception specification needed for member of incomplete class %0
exception specification is not available until end of class definition
cannot use '%0' with exceptions disabled
excess elements in %select{array|vector|scalar|union|struct}0 initializer
excess elements in initializer for indivisible sizeless type %0
excess elements in char array initializer
expected an 'allocator' clause inside of the target region; provide an 'allocator' clause or use 'requires' directive with the 'dynamic_allocators' clause
expected an allocator expression inside of the target region; provide an allocator expression or use 'requires' directive with the 'dynamic_allocators' clause
%0 is not a class%select{ or namespace|, namespace, or enumeration}1
kernel must have void return type
partial ordering for explicit instantiation of %0 is ambiguous
explicit instantiation cannot be 'constexpr'
explicit instantiation refers to static data member %q0 that is not an instantiation
explicit instantiation declaration (with 'extern') follows explicit instantiation definition (without 'extern')
explicit instantiation has dependent template arguments
duplicate explicit instantiation of %0
explicit instantiation of %0 in class scope
explicit instantiation cannot be 'inline'
explicit instantiation declaration of %0 with internal linkage
explicit instantiation refers to member function %q0 that is not an instantiation
explicit instantiation of %0 must occur at global scope
explicit instantiation of non-templated type %0
explicit instantiation of %0 does not refer to a function template, variable template, member function, member class, or static data member
explicit instantiation of typedef %0
explicit instantiation of %0 not in a namespace enclosing %1
explicit instantiation declaration requires a name
explicit instantiation cannot have a storage class
explicit instantiation of undefined function template %0
explicit instantiation of undefined %select{member class|member function|static data member}0 %1 of class template %2
explicit instantiation of undefined variable template %q0
explicit instantiation of %q0 must occur in namespace %1
explicit instantiation of %q0 must specify a template argument list
'explicit' can only be applied to a constructor or conversion function
'explicit' can only appear on non-static member functions
'explicit' can only be specified inside the class definition
explicit specialization has extraneous, inconsistent storage class '%select{none|extern|static|__private_extern__|auto|register}0'
export declaration cannot be used in a private module fragment
declaration of %0 with internal linkage cannot be exported
%select{empty|static_assert|asm}0 declaration cannot be exported
export declaration can only be used within a module interface unit%select{ after the module declaration|}0
using declaration referring to %0 with internal linkage cannot be exported
export declaration appears within anonymous namespace
export declaration appears within another export declaration
%select{case value|enumerator value|non-type template argument|array size|explicit specifier argument|noexcept specifier argument}0 is not a constant expression
expression is not an %select{integer|integral}0 constant expression
expression is not a string literal
%select{signed|unsigned}0 _ExtInt must have a bit size of at least %select{2|1}0
%select{signed|unsigned}0 _ExtInt of bit sizes greater than %1 not supported
vector component access exceeds type %0
illegal vector component name '%0'
declaration of %1 %select{with C language linkage|in global scope}0 conflicts with declaration %select{in global scope|with C language linkage}0
extern declaration of %0 follows non-extern declaration
non-void block does not return a value
fallthrough annotation does not directly precede switch label
fallthrough annotation is outside switch statement
%0 attribute is only allowed on empty statements
field %0 declared as a function
field designator cannot initialize a %select{non-struct, non-union|non-class}0 type %1
field designator %0 does not refer to a non-static data member
field designator %0 does not refer to any field in type %1
field designator %0 does not refer to any field in type %1; did you mean %2?
field has %select{incomplete|sizeless}0 type %1
data member instantiated with function type %0
field may not be qualified with an address space
filter expression has non-integral type %0
declaration of %0 overrides a '%select{final|sealed}1' function
%0 cannot be set as a default pointer attribute
parameter of array type %0 decays to a __single pointer, and will not allow arithmetic
address argument to atomic arithmetic operation must be a pointer to '__unsafe_indexable' pointer (%0 invalid)
atomic operation on '%select{__indexable|__bidi_indexable|__counted_by|__sized_by|__ended_by}0' pointer is not yet supported
_Atomic on '%select{__indexable|__bidi_indexable|__counted_by|__sized_by|__ended_by|__terminated_by}0' pointer is not yet supported
passing %select{'__counted_by'|'__sized_by'|'__ended_by'|end}0 pointer as __auto_type initializer is not yet supported
parameter '%0' with '%select{__counted_by|__sized_by}1' attribute depending on an indirect count is implicitly read-only and cannot be passed as an indirect argument
arrays with an explicit size decay to counted pointers and cannot also have a count attribute
pointer cannot be '%0' and '__%select{bidi_indexable|indexable}1' at the same time
pointer cannot have count and range at the same time
pointer cannot have more than one %select{bound|type|count|end}0 attribute
argument of '%select{__counted_by|__sized_by}0' attribute cannot refer to declaration of a different lifetime
argument of '%select{__counted_by|__sized_by}0' attribute cannot refer to declaration from a different scope
type %0 cannot have a __counted_by attribute because %1 cannot form an array
cannot reference '%0' after it is changed during consecutive assignments
not allowed to change out parameter used as dependent count expression of other parameter
not allowed to change out parameter with dependent count
assignments to dependent variables should not have side effects between them
external count of a pointer cannot be used with inline assembly
initalizer for %select{count|size|'__counted_by' pointer|'__sized_by' pointer|'__ended_by' pointer|end pointer}0 with side effects is not supported yet
compound assignment on dynamic bound pointer type %0 with side effects is not supported yet;instead, use seperate assignment and binary expressions
%select{negative|positive}0 pointer arithmetic on %select{'__counted_by' |'__sized_by' ||end }1pointer%select{|| that starts the '__ended_by' chain|}1 always traps
conflicting '%select{__counted_by|__sized_by|__ended_by|__terminated_by}0' attribute with the previous %select{function|variable}1 declaration
argument of '%select{__counted_by|__sized_by}0' attribute can only reference function with 'const' attribute
argument of function call '%0' in '__counted_by' attribute is not a constant expression
end-pointer must be '__single'
Firebloom forbids arithmetic on pointers to types with a flexible array member
flexible array member is initialized without a count
flexible array member is initialized with %0 element%select{|s}2, but count value is initialized to %1
'__unsafe_forge_%select{bidi_indexable|single}0' requires a pointer, array or integer address argument
'__unsafe_forge_bidi_indexable' requires an integer size argument
negative %select{address|size}0 argument to '__unsafe_forge_%select{bidi_indexable|single}1'
function pointers cannot be indexable
pointer with '%select{__counted_by|__sized_by}0' and the argument of the attribute must be defined in the same translation unit
incompatible count expression (%0) vs. (%1) in argument to function
incompatible dynamic count pointer argument to function argument type %0
%select{%diff{assigning to $ from incompatible type $|assigning type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1|}2 is an unsafe operation; use '__unsafe_terminated_by_from_indexable()' to perform this conversion
'__terminated_by' pointer converted from a string literal must be NUL-terminated
%select{%diff{assigning to $ from incompatible type $|assigning type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1|}2 that discards '__terminated_by' attribute is not allowed
pointers with incompatible terminators %select{%diff{assigning to $ from incompatible type $|assigning type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1|}2
%select{%diff{assigning to $ from incompatible type $|assigning type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1|}2 requires a linear search for the terminator; use '__terminated_by_to_indexable()' to perform this conversion explicitly
cannot convert single pointer to incomplete type %0 to indexable pointer %1; consider making the destination '__single' to perform this conversion
incrementing '%0' without updating '%1' always traps
incrementing '%0' always traps
decremented indexable pointer '%0' is out of bounds
array subscript with a negative index on indexable pointer '%0' is out of bounds
%select{|implicitly }0initializing negative %select{count|size}1 for %select{'__counted_by'|'__sized_by'}1 pointer field %2
%select{|implicit }0zero-initialization of %select{'__counted_by'|'__sized_by'}1 pointer field %2 with non-zero %select{count|size}1 never succeeds
cannot initialize %select{'__counted_by'|'__sized_by'}0 pointer field %1 with %select{count|size}0 %2 which is larger than the actual %select{count|size}0 of the field initializer '%3'
local dependent count decl should be declared side by side to its dependent pointer
local dependent count decl shall not be shared with other pointer decl
attribute %0 is not allowed for local variables with external storage
accessing %select{'%select{__counted_by|__sized_by|__ended_by}0' pointer member|member referred to by '__ended_by'}1 using %select{an object|a pointer}2 with side effects is not yet supported; store '%3' into a local variable first
incompatible pointer types assigning %0 with an expression with mismatching size attributes %1
assignment to %select{%2 |}3'%0' requires corresponding assignment to %select{|%2 }3'%1'; add self assignment '%1 = %1' if the value has not changed
multiple consecutive assignments to a %select{dynamic count|dynamic count pointer|ranged pointer}0 %1 must be simplified; keep only one of the assignments
negative count expression
nested dependent count pointer is only allowed for out parameters
%0 is not allowed for nested pointers
cannot extract the %select{lower|upper}0 bound of %1 because %select{it is not a pointer|it has no bounds specification|its bounds are not contained within the pointer}2
assignment to '%0' requires an immediately preceding assignment to '%1'; add self assignment '%1 = %1' if the value has not changed
local variable %0 must be declared right next to its dependent decl
non-pointer to safe pointer conversion is not allowed with firebloom; use '__unsafe_forge_single' or '__unsafe_forge_bidi_indexable'
array subscript on %select{single|'__terminated_by'}0 pointer '%1' %select{must use a constant index of 0 to be in bounds|is not allowed}0
pointer with bounds cannot be used with inline assembly
Pointer authentication is currently unsupported on indexable pointers
parameter '%0' with '%select{__counted_by|__sized_by}1' attribute depending on an indirect count is implicitly read-only
attribute %0 is only allowed for struct fields or function parameters
pointer arithmetic on single pointer '%0' is out of bounds%select{|; consider adding '__counted_by' to '%2'}1
%0 cannot apply to arrays: use 'counted_by' instead
taking address of an auto-bound variable %0 is not allowed; specify a firebloom bounds attribute (__single/__bidi_indexable/__indexable/__unsafe_indexable) to the declaration
variable used in dynamic count expression cannot escape to another variable
dynamic count pointer variable cannot escape to another variable
'__terminated_by' attribute cannot be applied to empty arrays
pointee types of the pointer and pointer to terminator arguments must be the same
pointee type of the pointer argument must be an integer or a pointer
pointer to terminator argument must be a pointer (%0 invalid)
pointer argument must be a safe pointer (%0 invalid)
incomplete array '%0' with '__terminated_by' attribute must be initialized with at least one element
%select{array|pointer}0 cannot have more than one '__terminated_by' attribute
pointer arithmetic on '__terminated_by' pointer '%0' can only increase the value by one
cannot decrement '__terminated_by' pointer '%0'
terminator in array '%0' must be a compile-time constant
array '%0' with '__terminated_by' attribute is initialized with an incorrect terminator (expected: %1; got %2)
terminator value is not a constant expression
pointer argument must be a '__terminated_by' pointer (%0 invalid)
pointer argument must be terminated by %0 (got %1)
%select{array|pointer}0 '%1' with '__terminated_by' attribute must be initialized
%select{element|pointee}0 type of %select{array|pointer}0 with '__terminated_by' attribute must be an integer or a pointer
array '%0' with '__terminated_by' attribute must be initialized with a string literal or an initializer list
'__terminated_by' attribute currently can be applied only to '__single' pointers
'__terminated_by' attribute can be applied to pointers, constant-length arrays or incomplete arrays
%0 inside typedef is only allowed for function type
'__ended_by__' is not allowed inside typedef
conversion from pointer type %0 to a counted pointer of %1 elements never succeeds
conversion from pointer type %0 with pointee of size %1 to sized pointer type with greater size %2 never succeeds
%select{%diff{assigning to $ from incompatible type $|assigning type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1|}2 casts away '__unsafe_indexable' qualifier; use '__unsafe_forge_single' or '__unsafe_forge_bidi_indexable' to perform this conversion
taking the address of an incomplete __counted_by array is not yet supported
invalid function call with unsynchronized dynamic count pointers as out parameters
void pointers must use a byte count attribute instead of an item count
first argument to __builtin_call_with_static_chain must not be a block call
first argument to __builtin_call_with_static_chain must not be a builtin call
first argument to __builtin_call_with_static_chain must be a non-member call expression
first argument to __builtin_call_with_static_chain must not be a pseudo-destructor call
first argument to 'va_arg' is of type %0 and not 'va_list'
ARC forbids flexible array members with retainable object type
flexible array member %0 not allowed in otherwise empty %select{struct|interface|union|class|enum}1
flexible array member %0 of type %1 with non-trivial destruction
initialization of flexible array member is not allowed
flexible array requires brace-enclosed initializer
Firebloom forbids passing %0 by copy because it has a flexible array member
flexible array member %0 with type %1 is not at the end of %select{struct|interface|union|class|enum}2
flexible array member %0 in a union is not allowed
flexible array member %0 not allowed in %select{struct|interface|union|class|enum}1 which has a virtual base class
expression not permitted as operand of fold expression
unary fold expression has empty expansion for operator '%0' with no fallback value
instantiating fold expression with %0 arguments exceeded expression nesting limit of %1
binary fold expression has unexpanded parameter packs in both operands
for range declaration must declare a variable
cannot use type %0 as a range
invalid range expression of type %0; did you mean to dereference it with '*'?
cannot use incomplete type %0 as a range
invalid range expression of type %0; no viable '%select{begin|end}1' function available
cannot use type %0 as an iterator
loop variable %0 may not be declared %select{'extern'|'static'|'__private_extern__'|'auto'|'register'|'constexpr'|'thread_local'}1
format attribute cannot specify the implicit this argument as the format string
format argument not %0
format attribute requires variadic function
function does not return %0
strftime format attribute requires 3rd parameter to be 0
ISO C++ forbids forward references to 'enum' types
attempting to use the forward class %0 as superclass of %1
explicit qualification required to use member %0 from dependent base class
member %0 used before its declaration
friend declaration of %0 does not match any declaration in %1
friend declaration specifying a default argument must be a definition
friend declaration specifying a default argument must be the only declaration
friend function cannot be defined in a local class
friends cannot be members of the declaring class
'friend' must appear first in a non-function declaration
incomplete result type %0 in function definition
function cannot return %select{array|function}0 type %1
function cannot return qualified void type %0
function declared with %0 attribute was previously declared without the %0 attribute
functions may not be declared with 'cmse_nonsecure_call' attribute
%0 marked 'override' but does not override any member functions
type %0 of function parameter pack does not contain any unexpanded parameter packs
function template partial specialization is not allowed
function template specialization %0 ambiguously refers to more than one function template; explicitly specify%select{| additional}1 template arguments to identify a particular function template
no function template matches function template specialization %0
weak attribute declared on a __strong type property in GC mode
controlling expression type %0 compatible with %1 generic association types
controlling expression type %0 not compatible with any generic association type
__builtin_get_vtable_pointer requires an argument of%select{| polymorphic}0 class pointer type, but %1 %select{was provided|has no virtual methods}0
__builtin_get_vtable_pointer requires an argument with a complete type, but %0 is incomplete
no getter method for read from property
call to global function %0 not configured
cannot jump from this goto statement to its label
cannot jump from this goto statement to label %0 inside an inline assembly block
half precision constant requires cl_khr_fp16
invalid argument: symbol must be a device-side function or global variable
type argument of iboutletcollection attribute cannot be a builtin type
invalid type %0 as argument of iboutletcollection attribute
ambiguous conversion from type %0 to an integral or unscoped enumeration type
integral constant expression requires explicit conversion from %0 to %1
integral constant expression has incomplete class type %0
%select{integer|integral}1 constant expression must have %select{integer|integral or unscoped enumeration}1 type, not %0
integer constant expression evaluates to value %0 that cannot be represented in a %1-bit %select{signed|unsigned}2 integer type
a parameter list without types is only allowed in a function definition
illegal operation on Objective-C container subscripting
'%0' declared as array of %1
'%0' declared as array of functions of type %1
'%0' declared as array of references of type %1
'%0' does not point into a class
'%0' declared as a member pointer to a reference of type %1
'%0' declared as a member pointer to void
'%0' declared as a pointer to a reference of type %1
illegal initializer (only variables can be initialized)
illegal initializer type %0
Objective-C message has incomplete result type %0
illegal qualifiers on @catch parameter
%select{anonymous struct|union}0 member %1 has a non-trivial %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2
imaginary types are not supported
implicit conversion from %0 to %1 is not permitted in C++
cannot declare implementation of a class declared with the 'objc_class_stub' attribute
std::nothrow was not found; include <new> before defining a coroutine which uses get_return_object_on_allocation_failure()
initializer for aggregate with no elements requires explicit braces
implicit instantiation of undefined member %0
cannot %select{use builtin operator '<=>'|default 'operator<=>'}1 because type '%0' was not found; include <compare>
%0 type was not found; include <experimental/coroutine> before defining a coroutine
this function cannot be a coroutine: %0 is not a class
this function cannot be a coroutine: %q0 has no member named 'promise_type'
cannot deduce type of initializer list because std::initializer_list was not found; include <initializer_list>
static data member of type %0 must be initialized out of line
in-class initializer for static data member of type %0 requires 'constexpr' specifier
non-const static data member must be initialized out of line
in-class initializer for static data member is not a constant expression
static const volatile data member must be initialized out of line
target exception specification is not superset of source
conversion between pointers to functions with incompatible firebloom attributes
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2
API notes replacement type %0 has a different size from original type %1
incompatible vector types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
base class has incomplete type
enumeration %0 is incomplete
%select{|pointer to |reference to }0incomplete type %1 is not allowed in exception specification
member access into incomplete type %0
incomplete type %0 named in nested name specifier
incomplete type in call to object of type %0
incomplete receiver type %0
cannot synthesize property %0 with incomplete type %1
incomplete type %0 where a complete type is required
'@encode' of incomplete type %0
incomplete type %0 used in type trait expression
cannot set vtable pointer authentication on an incomplete type %0
'typeid' of incomplete type %0
inconsistent number of instance variables specified
defaulted definition of %select{%select{<ERROR>|equality|three-way|equality|relational}1 comparison operator|three-way comparison operator}0 cannot be declared %select{constexpr|consteval}2 because %select{it|the corresponding implicit 'operator=='}0 invokes a non-constexpr comparison function
defaulted declaration of %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 cannot be consteval because implicit definition is not constexpr
defaulted definition of %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 is not constexpr
number of elements must be either one or match the size of the vector
cannot %select{decrement|increment}0 expression of enum type %1
cannot jump from this %select{indirect|asm}0 goto statement to one of its possible targets
indirect goto in function with no address-of-label expressions
cannot deduce type for lambda capture %0 from initializer of type %2
cannot deduce type for lambda capture %0 from initializer list
initializer for lambda capture %0 contains multiple expressions
initializer missing for lambda capture %0
cannot deduce type for lambda capture %1 from %select{parenthesized|nested}0 initializer list
cannot initialize %select{a variable|a parameter|template parameter|return object|statement expression result|an exception object|a member subobject|an array element|a new value|a value|a base class|a constructor delegation|a vector element|a block element|a block element|a complex element|a lambda capture|a compound literal initializer|a related result|a parameter of CF audited function}0 %diff{of type $ with an %select{rvalue|lvalue}2 of type $|with an %select{rvalue|lvalue}2 of incompatible type}1,3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%5 vs %6)|: different exception specifications}4
initializer element is not a compile-time constant
cannot create object of function type %0
initialization of incomplete type %0
%select{|non-aggregate }0type %1 cannot be initialized with an initializer list
init methods must return an object pointer type, not %0
initialization of non-aggregate type %0 with an initializer list
cannot initialize Objective-C class type %0
can only use 'init_priority' attribute on file-scope definitions of objects of class type
reference member of type %0 uninitialized
initializer would partially override prior initialization of object of type %1 with non-trivial destruction
initializer-string for char array is too long
inline declaration of %0 follows non-inline definition
inline declaration of %0 not allowed in block scope
'main' is not allowed to be declared inline
non-inline namespace cannot be reopened as inline
'inline' can only appear on functions%select{| and non-local variables}0
invalid block pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
integer sequences must have integral element type
integer sequences must have non-negative sequence length
%plural{[0,2]:must use a qualified name when declaring|3:cannot declare}0 a %select{constructor|destructor|conversion operator|deduction guide}0 as a friend
invalid address discrimination mode %0
invalid use of a cast in a inline asm context requiring an lvalue: remove the cast or build with -fheinous-gnu-extensions
value '%0' out of range for constraint '%1'
invalid reinterpretation: sizes of %0 and %1 must match
%0 attribute cannot be applied to virtual functions
invalid authentication key %0
interface type cannot inherit from %select{struct|non-public interface|class}0 %1
invalid or misplaced branch protection specification '%0'
collection element of type %0 is not an Objective-C object
'_Complex %0' is invalid
call to consteval function %q0 is not a constant expression
%0 cannot be declared consteval
cannot take address of consteval function %0 outside of an immediate invocation
%select{function parameter|typedef}0 cannot be %select{<ERROR>|constexpr|consteval|constinit}1
non-static data member cannot be constexpr%select{; did you intend to make it %select{const|static}0?|}1
constexpr variable declaration must be a definition
invalid conversion between ext-vector type %0 and %1
conversion between matrix type %0 and incompatible type %1 is not allowed
conversion between matrix types%diff{ $ and $|}0,1 of different size is not allowed
invalid conversion between vector type %0 and integer type %1 of different size
invalid conversion between vector type %0 and scalar type %1
invalid conversion between vector type%diff{ $ and $|}0,1 of different size
invalid cpu name for builtin
invalid option '%0' for %select{cpu_specific|cpu_dispatch}1
invalid cpu feature string for builtin
invalid custom discrimination
count expression %select{on struct field|in function declaration}0 may only reference %select{other fields of the same struct|parameters of that function}0
cannot use %0 on union fields
cannot combine with previous '%0' declaration specifier
invalid declaration specifier in template non-type parameter
definition or redeclaration of %0 cannot name the global scope
definition or redeclaration of %0 not allowed inside a block
definition or redeclaration of %0 not allowed inside a function
cannot define or redeclare %0 here because namespace %1 does not enclose namespace %2
invalid extra discrimination selection %0
cannot create a non-constant pointer to member function
invalid use of incomplete type %0
mask type size must be between 1-byte and 8-bytes
invalid use of member %0 in static member function
incompatible constant for this __builtin_neon function
invalid use of non-static data member %0
%0 is not a valid literal type for NSNumber
invalid PCS type
'__pixel' must be preceded by '__vector'.  '%0' declaration specifier not allowed here
%0 is not a valid property name (accessing an object of type %1)
invalid protocol qualifiers on non-ObjC type
'%0' qualifier is not allowed on a constructor
'%0' qualifier is not allowed on a destructor
%select{non-member function|static member function|deduction guide}0 %select{of type %2 |}1cannot have '%3' qualifier
receiver type %0 is not an Objective-C class
'super' is only valid in a method body
'_Sat' specifier is only valid on '_Fract' or '_Accum', not '%0'
'%0' cannot be signed or unsigned
invalid use of '__super', this keyword can only be used inside class or member function scope
invalid use of 'this' outside of a non-static member function
'%0' is only allowed on variable declarations
the %0 type cannot be used to declare a program scope variable
invalid application of __builtin_xnu_type_%select{signature|summary}0 to %select{variable array}1 type %2
an array type is not allowed here
a function type is not allowed here
type %2 of %select{explicit instantiation|explicit specialization|partial specialization|redeclaration}0 of %1 does not match expected type %3
cannot use '%0' with '__vector bool'
use of '__int128' with '__vector bool' requires VSX support enabled (on POWER10 or later)
cannot combine with previous '%0' declaration specifier. '__vector' must be first
use of 'double' with '__vector' requires VSX support to be enabled (available on POWER7 or later)
cannot use 'float' with '__vector'
use of '__int128' with '__vector' requires extended Altivec support (available on POWER8 or later)
cannot use 'long' with '__vector'
cannot use 'long double' with '__vector'
use of 'long long' with '__vector' requires VSX support (available on POWER7 or later) to be enabled
'%select{|short|long|long long}0 %1' is invalid
property %0 not found on object of type %1; did you mean to access instance variable %2?
property %0 attempting to use instance variable %1 declared in super class %2
instance variables cannot be of reference type
instance variable %0 accessed in class method
kernel call to non-global function %0
kernel function %0 must be a free function or static member function
kernel function type %0 must have void return type
pointer arguments to kernel functions must reside in '__global', '__constant' or '__local' address space
unnamed variable cannot be implicitly captured in a lambda expression
lambda expression in default argument cannot capture any entity
variable %0 with flexible array member cannot be captured in a lambda expression
cannot assign to a variable captured by copy in a non-mutable lambda
variable %0 cannot be implicitly captured in a lambda with no capture-default specified
a lambda expression may not appear inside of a constant expression
a lambda expression cannot appear in this context
incomplete result type %0 in lambda expression
cannot deduce lambda return type from initializer list
lambda expression in an unevaluated operand
string literal in language linkage specifier cannot have an encoding-prefix
unknown linkage language
cannot apply asm label to %select{variable|function}0 after its first use
'lifetimebound' attribute cannot be applied to a %select{constructor|destructor}0
'lifetimebound' attribute cannot be applied; %select{static |non-}0member function has no implicit object parameter
cannot initialize %select{non-class|reference}0 type %1 with a parenthesized initializer list
non-template literal operator must have one or two parameters
literal operator cannot have a default argument
literal operator must have C++ linkage
non-namespace scope '%0' cannot have a literal operator member
parameter of literal operator must have type 'unsigned long long', 'long double', 'char', 'wchar_t', 'char16_t', 'char32_t', or 'const char *'
literal operator %0 must be in a namespace or global scope
invalid literal operator parameter type %0, did you mean %1?
template parameter list for literal operator must be either 'char...' or 'typename T, T...'
literal operator template cannot have any parameters
second argument to __builtin_load_member_function_pointer must be the address of a C++ member function: for example '&Foo::func', or null
first argument to __builtin_load_member_function_pointer must have C++ class type
variable with 'loader_uninitialized' attribute cannot have an initializer
variable %0 cannot be declared both 'extern' and with the 'loader_uninitialized' attribute
redeclaration cannot add 'loader_uninitialized' attribute
variable with 'loader_uninitialized' attribute must have a trivial default constructor
'__local' variable cannot have an initializer
%select{non-const|volatile}0 lvalue reference to type %1 cannot bind to an initializer list temporary
%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a temporary of type $|cannot bind to incompatible temporary}1,2
%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a value of unrelated type $|cannot bind to a value of unrelated type}1,2
rvalue reference %diff{to type $ cannot bind to lvalue of type $|cannot bind to incompatible lvalue}0,1
%select{unknown|unsupported}0 machine mode %1
%select{first|second|third|fourth}0 parameter of 'main' (%select{argument count|argument array|environment|platform-specific data}0) must be of type %1
main cannot be declared as global variable
'main' must return 'int'
too many parameters (%0) for 'main': must be 0, 2, or 3
%0 cannot be a template
std::experimental::coroutine_handle must be a class template
'std::experimental::coroutine_traits' must be a class template
std::initializer_list must be a class template with a single type parameter
std::nothrow must be a valid variable declaration
single subscript expressions are not allowed for matrix values
matrix %select{row|column}0 index is not an integer
matrix %select{row|column}0 index is outside the allowed range [0, %1)
matrix row and column subscripts cannot be separated by any expression
comma expressions are not allowed as indices in matrix subscript expressions
non-void block does not return a value in all control paths
member initializer %0 does not name a non-static data member or base class
initializer %0 does not name a non-static data member or base class; did you mean the %select{base class|member}1 %2?
call to non-static member function without an object argument
out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1
out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1; did you mean %3?
return type of out-of-line definition of %q0 differs from that in the declaration
out-of-line definition of %0 from class %1 without definition
extra qualification on member %0
'this' argument to member function %0 has type %1, but function is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}2
'this' argument to member function %0 is an %select{lvalue|rvalue}1, but function has %select{non-const lvalue|rvalue}2 ref-qualifier
cannot initialize object parameter of type %0 with an expression of type %1
initializer on function does not look like a pure-specifier
member %0 has the same name as its class
no member %0 in %1; it has not yet been instantiated
non-friend class member %0 cannot have a qualified name
class member cannot be redeclared
multiple overloads of %0 instantiate to the same signature %1
base of member reference is a function; perhaps you meant to call it%select{| with no arguments}0?
member pointer refers into non-class type %0
conversion from pointer to member of class %0 to pointer to member of class %1 via virtual base %2 is not allowed
member pointer has incomplete base type %0
at least one argument of MTE builtin function must be a pointer (%0, %1 invalid)
%0 argument of MTE builtin function must be an integer type (%1 invalid)
%0 argument of MTE builtin function must be a pointer (%1 invalid)
%0 argument of MTE builtin function must be a null or a pointer (%1 invalid)
messaging a Class with a method that is possibly direct
messaging super with a direct method
messaging unqualified id with a method that is possibly direct
kernel functions cannot be class members
%select{instance|class}1 method %0 not found ; did you mean %2?
this builtin requires 'dsp' ASE, please use -mdsp
this builtin requires 'dsp r2' ASE, please use -mdspr2
this builtin requires 'msa' ASE, please use -mmsa
derived class must specify the same code segment as its base classes
overriding virtual function must specify the same code segment as its overridden function
exception specification in declaration does not match previous declaration
exception specification in explicit instantiation does not match instantiated one
inheritance model does not match %select{definition|previous declaration}0
declaration of %0 in %select{the global module|module %2}1 follows declaration in %select{the global module|module %4}3
uuid does not match previous declaration
visibility does not match previous declaration
instance variables may not be placed in %select{categories|class extension}0
missing actual type specifier for pipe
%select{string|numeric}0 literal must be prefixed by '@'
missing custom discrimination
%select{constructor for %1 must explicitly initialize the|implicit default constructor for %1 must explicitly initialize the|cannot use constructor inherited from base class %4;}0 %select{base class|member}2 %3 %select{which|which|of %1}0 does not have a default constructor
%0 is missing exception specification '%1'
missing context for method declaration
missing '[' at start of message send expression
missing context for property implementation declaration
property implementation in a category with no category declaration
synthesized property %0 must either be named the same as a compatible instance variable or must explicitly name an instance variable
C++ requires a type specifier for all declarations
cannot use %select{C++ 'try'|Objective-C '@try'}0 in the same function as SEH '__try'
mode attribute only supported for integer and floating-point types
type of machine mode does not match type of base type
'module' declaration found while building header unit
'module' declaration found while building module from module map
module declaration must occur at the start of the translation unit
missing 'export module' declaration in module interface unit
missing 'module' declaration at end of global module fragment introduced here
@import of module '%0' in implementation of '%1'; use #import
import of module '%0' appears within %1
missing 'export' specifier in module declaration while building module interface
definition of module '%0' is not available; use -fmodule-file= to specify path to precompiled module interface
%select{local variable|parameter|typedef}0 %1 cannot be declared __module_private__
local %select{struct|interface|union|class|enum}0 cannot be declared __module_private__
%select{template|partial|member}0 specialization cannot be declared __module_private__
translation unit contains multiple module declarations
redefinition of module '%0'
import of module '%0' appears within same top-level module '%1'
%select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from module '%2' before it is required
%select{missing '#include'|missing '#include %3'}2; %select{||default argument of |explicit specialization of |partial specialization of }0%1 must be %select{declared|defined|defined|declared|declared}0 before it is used
%select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from one of the following modules before it is required:%2
'__leave' statement not in __try block
'__builtin_ms_va_start' used in System V ABI function
arguments to __annotation must be wide string constants
multiple initializations given for base %0
multiple coupled declarations in a firebloom attribute are not supported yet
multiple default labels in one switch
virtual function %q0 has more than one final overrider in %1
multiple initializations given for non-static member %0
initializing multiple members of union
function declaration cannot become a multiversioned function after first usage
multiversioned function declaration has a different %select{calling convention|return type|constexpr specification|inline specification|linkage|language linkage}0
attribute '%select{target|cpu_specific|cpu_dispatch}0' multiversioning cannot be combined with attribute %1
attribute '%select{target|cpu_specific|cpu_dispatch}0' multiversioned functions do not yet support %select{function templates|virtual functions|deduced return types|constructors|destructors|deleted functions|defaulted functions|constexpr functions|consteval function}1
multiversioned function redeclarations require identical target attributes
attributes on multiversioned functions must all match, attribute %0 %select{is missing|has different arguments}1
multiversioned function must have a prototype
'main' cannot be a multiversioned function
function multiversioning is not supported on the current target
function declaration is missing %select{'target'|'cpu_specific' or 'cpu_dispatch'}0 attribute in a multiversioned function
multiversioning attributes cannot be combined
cannot perform a tail call to function%select{| %1}0 because it uses an incompatible calling convention
%0 attribute cannot be used from %select{a block|an Objective-C function|this context}1
%select{non-member|static member|non-static member}0 function cannot perform a tail call to %select{non-member|static member|non-static member|pointer-to-member}1 function%select{| %3}2
cannot perform a tail call to function%select{| %1}0 because its signature is incompatible with the calling function
%0 attribute requires that the return value is the result of a function call
%0 attribute requires that both caller and callee functions have a prototype
tail call requires that the return value, all parameters, and any temporaries created by the expression are trivially destructible
%0 attribute may not be used with variadic functions
cannot perform a tail call from this return statement
cannot perform a tail call %select{from|to}0 a %select{constructor|destructor}1
'mutable' and 'const' cannot be mixed
'mutable' cannot be applied to functions
'mutable' can only be applied to member variables
'mutable' cannot be applied to references
you need to include <guiddef.h> before using the '__uuidof' operator
no matching %0 function for non-allocating placement new expression; include <new>
you need to include <typeinfo> before using the 'typeid' operator
%select{%diff{assigning to $ from $|assigning to incompatible nested pointer type}0,1|%diff{passing $ to parameter of incompatible nested pointer type $|passing to parameter of incompatible nested pointer type}0,1|%diff{returning $ from a function with result of incompatible nested pointer type $|returning from function with return of incompatible nested pointer type}0,1|%diff{converting $ to incompatible nested pointer type $|converting between incompatible nested pointer types}0,1|%diff{initializing $ with an expression of incompatible nested pointer type $|initializing with expression of incompatible nested pointer type}0,1|%diff{sending $ to parameter of incompatible nested pointer type $|sending to parameter of incompatible nested pointer type}0,1|%diff{casting $ to incompatible nested pointer type $|casting between incompatible nested pointer types}0,1}2; use explicit cast to perform this conversion
lookup of %0 in member access expression is ambiguous
%0 cannot appear before '::' because it is not a class%select{ or namespace|, namespace, or enumeration}1; did you mean ':'?
type %0 cannot be used prior to '::' because it has no members
%select{call to non-static member function|use of non-static data member}0 %2 of %1 from nested type %3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers in nested pointer types
nested redefinition of %0
'abi_tag' %0 missing in original declaration
array 'new' cannot have initialization arguments
only the first dimension of an allocated array may have dynamic size
cannot allocate array of 'auto'
cannot determine allocated array size from initializer
allocation of %select{incomplete|sizeless}0 type %1
no %select{getter|setter}0 defined for property %1
invalid use of '__super', %0 has no base classes
declaration does not declare anything
cannot specify a default vtable pointer authentication %select{key|address discrimination mode|discriminator}0 with no default set
use of dynamic_cast requires -frtti
no matching function found in local scope
no matching function %0 found in local scope; did you mean %3?
no member named %0 in %1
no member named %0 in %1; did you mean to use '->' instead of '.'?
no member named %0 in %1; did you mean %select{|simply }2%3?
no template named %0 in %1
no template named %0 in %1; did you mean %select{|simply }2%3?
cannot find interface declaration for %0
expression is not assignable
no suitable member %0 in %1
no @interface declaration found in class messaging of %0
no template named %0
no template named %0; did you mean %1?
use of typeid requires -frtti
argument to noexcept specifier must be a constant expression
a getter method is needed to perform a compound assignment on a property
no getter method %1 for %select{increment|decrement}0 of property
non-ASM statement in naked function is not supported
atomic constraint must be of type 'bool' (found %0)
anonymous non-C-compatible type given name for linkage purposes by %select{typedef|alias}0 declaration after its linkage was computed; add a tag name here to establish linkage prior to definition
substitution into constraint expression resulted in a non-constant expression
non-consteval function %0 cannot override a consteval function
non-deleted function %0 cannot override a deleted function
non-extern declaration of %0 follows extern declaration
defaulting %select{this %select{<ERROR>|equality|three-way|equality|relational}1 comparison operator|the corresponding implicit 'operator==' for this defaulted 'operator<=>'}0 would delete it after its first declaration
declaration of non-local variable in 'for' loop
cannot set vtable pointer authentication on monomorphic type %0
non-static declaration of %0 follows static declaration
member %0 of %1 is not a template; did you mean %select{|simply }2%3?
%0 does not name a template but is followed by template arguments
%0 does not name a template but is followed by template arguments; did you mean %1?
non-thread-local declaration of %0 follows thread-local declaration
cannot set vtable pointer authentication on %0 which is a subclass of polymorphic type %1
cannot %select{use type %1 for a function/method parameter|use type %1 for function/method return|default-initialize an object of type %1|declare an automatic variable of type %1|copy-initialize an object of type %1|assign to a variable of type %1|construct an automatic compound literal of type %1|capture a variable of type %1|cannot use volatile type %1 where it causes an lvalue-to-rvalue conversion}3 since it %select{contains|is}2 a union that is non-trivial to %select{default-initialize|destruct|copy}0
template argument / label address difference / what did you expect?
non-type template argument refers to subobject '%0'
sorry, non-type template argument of type %0 is not yet supported
qualified name refers into a specialization of %select{function|variable}0 template %1
non-type template parameter %0 with type %1 has incompatible initializer of type %2
non-variable declaration in 'for' loop
%0 is not virtual and cannot be declared pure
block pointer to non-function type is invalid
non-static data member defined out-of-line
address argument to nontemporal builtin must be a pointer (%0 invalid)
address argument to nontemporal builtin must be a pointer to integer, float, pointer, or a vector of such types (%0 invalid)
block declared 'noreturn' should not return
lambda declared 'noreturn' should not return
'_Noreturn' can only appear on functions
%select{assignment to readonly property|no setter method %1 for assignment to property}0
%select{%select{increment|decrement}1 of readonly property|no setter method %2 for %select{increment|decrement}1 of property}0
cannot specialize a %select{dependent template|template template parameter}0
type %0 is not a direct or virtual base of %1
call to function %0 that is neither visible in the template definition nor found by argument-dependent lookup
anonymous bit-field has non-integral type %0
bit-field %0 has non-integral type %1
no %select{struct|interface|union|class|enum}0 named %1 in %2
%0 attribute only applies to %select{Objective-C object|pointer|pointer-to-CF-pointer}1 parameters
overriding method has mismatched ns_consumed attribute on its parameter
domain argument %select{|%1 }0does not refer to global constant
domain argument %0 does not point to an NSString or CFString constant
'NSObject' attribute is for pointer types only
overriding method has mismatched ns_returns_%select{not_retained|retained}0 attributes
nullability keyword %0 cannot be applied to multi-level pointer type %1
nullability specifier %0 cannot be applied to non-pointer type %1
array of interface %0 is invalid (probably should be an array of pointers)
parameter of %0 attribute must be a single name of an Objective-C %select{class|protocol}1
attribute %0 can only be applied to @protocol definitions, not forward declarations
parameter of %0 attribute must be 'id' when used on a typedef
'objc_bridge(id)' is only allowed on structs and typedefs of void pointers
could not find Objective-C class %0 to convert %1 to %2
%0 must be name of an Objective-C class to be able to convert %1 to %2
%0 must be explicitly converted to %1; use %select{%objcclass2|%objcinstance2}3 method for this conversion
CF object of type %0 is bridged to %1, which is not an Objective-C class
Objective-C declarations may only appear in global scope
%select{|direct }0%select{method|property}1 declaration conflicts with previous %select{|direct }2declaration of %select{method|property}1 %3
direct property cannot be @dynamic
direct method was declared in %select{the primary interface|an extension|a category}0 but is implemented in %select{the primary interface|a category|a different category}1
direct method implementation was previously declared not direct
methods that %select{override superclass methods|implement protocol requirements}0 cannot be direct
'objc_direct' attribute cannot be applied to %select{methods|properties}0 declared in an Objective-C protocol
%select{category %1|class extension}0 cannot conform to protocol %2 because of direct members declared in interface %3
cannot use '%0' with Objective-C exceptions disabled
initialization statement is not supported when iterating over Objective-C collection
illegal type %0 used in a boxed expression
incomplete type %0 used in a boxed expression
Objective-C index expression has incomplete class type %0
method for accessing %select{dictionary|array}1 element must have Objective-C object return type instead of %0
'__kindof' specifier cannot be applied to non-object type %0
'__kindof' type specifier must precede the declarator
literal construction method %0 has incompatible signature
%select{an array|a dictionary|a numeric literal|a boxed expression|}0 literal can only be used at file scope if %select{its contents are all also constant literals|its contents are all also constant literals and its keys are string literals|constant|constant}0
%0 %select{parameter|return}1 type is unsupported; support for vector types for this target is introduced in %2
indexing expression is invalid because subscript type %0 has multiple type conversion functions
cannot use a protocol declared 'objc_non_runtime_protocol' in a @protocol expression
non-trivially copyable type %0 cannot be used in a boxed expression
ObjectiveC object of type %0 is bridged to %1, which is not valid CF object
cannot assign to class object (%0 invalid)
cannot catch an Objective-C object by value
cannot override a method that is declared direct by a superclass
%select{extension|category}0 of non-parameterized class %1 cannot have type parameters
forward declaration of non-parameterized class %0 cannot have type parameters
class %0 previously declared with type parameters
objc_precise_lifetime only applies to retainable types; type here is %0
property attributes '%0' and '%1' are mutually exclusive
property with '%0' attribute must be of object type
objc_root_class attribute may only be specified on a root class declaration
cannot implement a category for class %0 that is only visible via the Objective-C runtime
cannot implement subclass %0 of a superclass %1 that is only visible via the Objective-C runtime
%select{dictionary|array}1 subscript base type %0 is not an Objective-C object
method object parameter type %0 is not object type
method index parameter type %0 is not integral type
method key parameter type %0 is not object type
expected method to %select{read|write}1 %select{dictionary|array}2 element not found on object of type %0
cannot assign to this %select{dictionary|array}1 because assigning method's 2nd parameter of type %0 is not an Objective-C pointer type
indexing expression is invalid because subscript type %0 is not an Objective-C pointer
indexing expression is invalid because subscript type %0 is not an integral or Objective-C pointer type
@synchronized requires an Objective-C object type (%0 invalid)
@throw requires an Objective-C object type (%0 invalid)
type argument %0 does not satisfy the bound (%1) of type parameter %2
type argument %0 cannot explicitly specify nullability
no type or protocol named %0
type argument %0 must be a pointer (requires a '*')
type argument %0 is neither an Objective-C object nor a block type
type argument %0 cannot be qualified with '%1'
angle brackets contain both a %select{type|protocol}0 (%1) and a %select{protocol|type}0 (%2)
type arguments cannot be applied to non-class type %0
type arguments cannot be applied to non-parameterized class %0
type arguments cannot be applied to already-specialized class type %0
too %select{many|few}0 type arguments for class %1 (have %2, expected %3)
%select{forward class declaration|class definition|category|extension}0 has too %select{few|many}1 type parameters (expected %2, have %3)
type bound %0 for type parameter %1 conflicts with %select{implicit|previous}2 bound %3%select{for type parameter %5|}4
type parameter %0 bound %1 cannot explicitly specify nullability
missing type bound %0 for type parameter %1 in %select{@interface|@class}2
missing '*' in type bound %0 for type parameter %1
type bound %0 for type parameter %1 is not an Objective-C pointer type
type bound %1 for type parameter %0 cannot be qualified with '%2'
redeclaration of type parameter %0
%select{in|co|contra}0variant type parameter %1 conflicts with previous %select{in|co|contra}2variant type parameter %3
cannot declare variable inside @interface or @protocol
field %0 with variable sized type %1 is not at the end of class
interface type %1 cannot be %select{returned|passed}0 by value; did you forget * in %1?
offsetof requires array type, %0 invalid
cannot compute offset of bit-field %0
invalid application of 'offsetof' to a field of a virtual base
offsetof of incomplete type %0
offsetof requires struct, union, or class type, %0 invalid
'adjust_arg' argument %0 used in multiple clauses
argument of aligned clause should be array%select{ or pointer|, pointer, reference to array or reference to pointer}1, not %0
allocator must be specified in the 'uses_allocators' clause
allocators used in 'uses_allocators' clause cannot appear in other data-sharing or data-mapping attribute clauses
ambiguous conversion from type %0 to an integral or unscoped enumeration type
'append_args' is not allowed with varargs functions
expected pointer, array, reference to pointer, or reference to array in 'is_device_ptr clause'
OpenMP array section is not allowed here
OpenMP array shaping operation is not allowed here
expected at least one 'to' clause or 'from' clause specified to '#pragma omp target update'
the statement for 'atomic capture' must be a compound statement of form '{v = x; x binop= expr;}', '{x binop= expr; v = x;}', '{v = x; x = x binop expr;}', '{v = x; x = expr binop x;}', '{x = x binop expr; v = x;}', '{x = expr binop x; v = x;}' or '{v = x; x = expr;}', '{v = x; x++;}', '{v = x; ++x;}', '{++x; v = x;}', '{x++; v = x;}', '{v = x; x--;}', '{v = x; --x;}', '{--x; v = x;}', '{x--; v = x;}' where x is an lvalue expression with scalar type
the statement for 'atomic capture' must be an expression statement of form 'v = ++x;', 'v = --x;', 'v = x++;', 'v = x--;', 'v = x binop= expr;', 'v = x = x binop expr' or 'v = x = expr binop x', where x and v are both lvalue expressions with scalar type
directive '#pragma omp atomic%select{ %0|}1' cannot be used with '%2' clause
the statement for 'atomic' must be an expression statement of form '++x;', '--x;', 'x++;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an lvalue expression with scalar type
the statement for 'atomic read' must be an expression statement of form 'v = x;', where v and x are both lvalue expressions with scalar type
directive '#pragma omp atomic' cannot contain more than one 'read', 'write', 'update' or 'capture' clause
the statement for 'atomic update' must be an expression statement of form '++x;', '--x;', 'x++;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an lvalue expression with scalar type
the statement for 'atomic write' must be an expression statement of form 'x = expr;', where x is a lvalue expression with scalar type
bit fields cannot be used to specify storage in a '%0' clause
arguments of OpenMP clause '%0' with bitwise operators cannot be of floating type
arguments of OpenMP clause '%0' for 'min' or 'max' must be of %select{scalar|arithmetic}1 type
'%0' clause requires 'dispatch' context selector
'%0' and '%1' clause are mutually exclusive and may not appear on the same directive
const-qualified list item cannot be %0
const-qualified variable without mutable fields cannot be %0
const-qualified variable cannot be %0
constructs with the same name must have a 'hint' clause with the same value
redefinition of user-defined mapper for type %0 with name %1
only variable %0 is allowed in map clauses of this 'omp declare mapper' directive
redefinition of user-defined reduction for type %0
%0 must not appear in both clauses 'to' and 'link'
function with '#pragma omp declare variant' has a different %select{calling convention|return type|constexpr specification|inline specification|storage class|linkage}0
'#pragma omp declare variant' does not support %select{function templates|virtual functions|deduced return types|constructors|destructors|deleted functions|defaulted functions|constexpr functions|consteval function}0
'#pragma omp declare variant' is not compatible with any target-specific attributes
variant in '#pragma omp declare variant' with type %0 is incompatible with type %1%select{| with appended arguments}2
function with '#pragma omp declare variant' must have a prototype when 'append_args' is used
the user condition in the OpenMP context selector needs to be constant; %0 is not
variable %0 must have explicitly specified data sharing attributes, data mapping attributes, or in an is_device_ptr clause
'depend' clauses cannot be mixed with '%0' clause
expected iterator specification as depend modifier
expected%select{| %1}0 loop iteration variable
expected '+' or '-' operation
'depend(%select{source|sink:vec}0)' clause%select{|s}0 cannot be mixed with 'depend(%select{sink:vec|source}0)' clause%select{s|}0
depend modifier cannot be used with 'sink' or 'source' depend type
unexpected expression: number of expressions is larger than the number of associated loops
zero-length array section is not allowed in 'depend' clause
expected depobj expression
exactly one of 'depend', 'destroy', or 'update' clauses is expected
'device_type(%0)' does not match previously specified 'device_type(%1)' for the same declaration
'%0' region encountered before requires directive with '%1' clause
statement after '#pragma omp dispatch' must be a direct call to a target function or an assignment to one
same map type modifier has been specified more than once
same motion modifier has been specified more than once
expected access to data field
expected addressable lvalue expression, array element%select{ or array section|, array section or array shaping expression}0%select{| of non 'omp_depend_t' type}1
expected constant sized array of 'omp_alloctrait_t' elements, not %0
expected variable name as a base of the array %select{subscript|section}0
expected a reference to an integer-typed parameter
expected expression containing only member accesses and/or array sections based on named variables
expected lvalue expression%select{ of 'omp_depend_t' type, not %1|}0
expected one of the predefined allocators for the variables with the static storage: 'omp_default_mem_alloc', 'omp_large_cap_mem_alloc', 'omp_const_mem_alloc', 'omp_high_bw_mem_alloc', 'omp_low_lat_mem_alloc', 'omp_cgroup_mem_alloc', 'omp_pteam_mem_alloc' or 'omp_thread_mem_alloc'
the referenced item is not found in any private clause on the same directive
expected a reference to a parameter specified in a 'uniform' clause
%0 is not a global variable, static local variable or static data member
%0 is not a global variable, static local variable or static data member; did you mean %1
expected variable name%select{| or data member of current class}0
expected variable name%select{|, data member of current class}0, array element or array section
expression requires explicit conversion from %0 to %1
a firstprivate variable with incomplete type %0
'flush' directive with memory order clause '%0' cannot have the list
'#pragma omp declare %select{simd|variant}0' can only be applied to functions
function name is not allowed in 'link' clause
arguments of '#pragma omp %0' must have %select{global storage|static storage duration}1
the name of the construct must be specified in presence of 'hint' clause
'%0' type not found; include <omp.h>
the list item must appear in 'reduction' clause with the 'inscan' modifier of the parent directive
expression has incomplete class type %0
expected 'reduction' clause with the 'inscan' modifier
instantiation of '%0' not supported yet
'depend' clause requires the 'targetsync' interop type
prefer_list item must be a string literal or constant integral expression
'omp_interop_t' must be defined when 'append_args' clause is used; include <omp.h>
interop variable %0 used in multiple action clauses
expected%select{| non-const}0 variable of type 'omp_interop_t'
interop variable must be of type 'omp_interop_t'
invalid 'this' expression on 'map' clause
%select{map type '%1' is not allowed|map type must be specified}0 for '#pragma omp %2'
map type modifier '%0' is not allowed for '#pragma omp %1'
cannot find a valid user-defined mapper for type %0 with name %1
'#pragma omp %0' directive must appear only in file scope
%0 used in declare target directive is not a variable or a function name
expected loop invariant expression
expected loop invariant expression or '<invariant1> * %0 + <invariant2>' kind of expression
expected integral or pointer type as the iterator-type, not %0
iterator step expression %0 evaluates to 0
iterator step expression %0 is not the integral expression
OpenMP iterator is not allowed here
variable captured in declare target region must appear in a to clause
expected list item of scalar type in 'lastprivate' clause with 'conditional' modifier
a lastprivate variable with incomplete type %0
only loop iteration variables are allowed in 'linear' clause in distribute directives
argument of a linear clause should be of integral or pointer type, not %0
a linear variable with incomplete type %0
'linear' clause cannot be specified along with 'ordered' clause with a parameter
variable with local storage in initial value of threadprivate variable
'%0' statement cannot be used in OpenMP for loop
could not calculate number of iterations calling 'operator-' with upper and lower loop bounds
increment expression must cause %0 to %select{decrease|increase}1 on each iteration of OpenMP for loop
condition of OpenMP for loop must be a relational comparison ('<', '<=', '>', %select{or '>='|'>=', or '!='}0) of loop variable %1
increment clause of OpenMP for loop must perform simple addition or subtraction on loop variable %0
initialization clause of OpenMP for loop is not in canonical form ('var = init' or 'T var = init')
loop iteration variable in the associated loop of 'omp %1' directive may not be %0, predetermined as %2
variable must be of integer or %select{pointer|random access iterator}0 type
variable already marked as mapped in current construct
mapper type must be of struct, union or class type
multiple array elements associated with the same variable are not allowed in map clauses of the same construct
argument to '%0' clause must be a %select{non-negative|strictly positive}1 integer value
expected at least one %0 clause for '#pragma omp %1'
variable %0 must have explicitly specified data sharing attributes
no more 'if' clause is allowed
expected addressable lvalue in '%0' clause
expected expression with a pointer to a complete type as a base of an array shaping operation
non-predefined allocator must have traits specified
%select{statement after '#pragma omp %1' must be a for loop|expected %2 for loops after '#pragma omp %1'%select{|, but found only %4}3}0
expression must have integral or unscoped enumeration type, not %0
unable to resolve declare reduction construct for type %0
variable can appear only once in OpenMP '%0' clause
variable can appear only once in OpenMP 'target update' construct
at most one defaultmap clause for each variable-category can appear on the directive
'ordered' directive %select{without any clauses|with 'threads' clause}0 cannot be closely nested inside ordered region with specified parameter
'ordered' directive with 'depend' clause cannot be closely nested inside ordered region without specified parameter
'ordered' clause with a parameter can not be specified in '#pragma omp %0' directive
original storage of expression in data environment is shared but data environment do not fully contain mapped expression storage
orphaned 'omp %0' directives are prohibited; perhaps you forget to enclose the directive into a %select{|||target |teams|for, simd, for simd, parallel for, or parallel for simd }1region?
%select{orphaned 'omp section' directives are prohibited, it|'omp section' directive}0 must be closely nested to a sections region%select{|, not a %1 region}0
argument of a reduction clause of a %0 construct must not appear in a firstprivate clause on a task construct
the statement for '#pragma omp parallel sections' must be a compound statement
statement in 'omp parallel sections' directive must be enclosed into a section region
expected reference to one of the parameters of function %0%select{| or 'this'}1
parent region for 'omp %select{cancellation point|cancel}0' construct cannot be nowait
parent region for 'omp %select{cancellation point|cancel}0' construct cannot be ordered
pointer cannot be mapped along with a section derived from itself
predefined allocator cannot have traits specified
a private variable with incomplete type %0
region cannot be%select{| closely}0 nested inside '%1' region%select{|; perhaps you forget to enclose 'omp %3' directive into a parallel region?|; perhaps you forget to enclose 'omp %3' directive into a for or a parallel for region with 'ordered' clause?|; perhaps you forget to enclose 'omp %3' directive into a target region?|; perhaps you forget to enclose 'omp %3' directive into a teams region?|; perhaps you forget to enclose 'omp %3' directive into a for, simd, for simd, parallel for, or parallel for simd region?}2
OpenMP constructs may not be nested inside an atomic region
cannot nest 'critical' regions having the same name %0
OpenMP constructs may not be nested inside a simd region%select{| except for ordered simd, simd, scan, or atomic directive}0
list item of type %0 is not valid for specified reduction operation: unable to provide default initialization value
in_reduction variable must have the same reduction operation as in a task_reduction clause
reduction variables may not be accessed in an explicit task
a reduction list item with incomplete type %0
expected addressable reduction item for the task-based directives
the inscan reduction list item must appear as a list item in an 'inclusive' or 'exclusive' clause on an inner 'omp scan' directive
argument of OpenMP clause '%0' must reference the same object in all threads
'reduction' clause with 'task' modifier allowed only on non-simd parallel or worksharing constructs
cannot generate code for reduction on %select{|array section, which requires a }0variable length array
'reduction' clause cannot be used with 'nogroup' clause
reduction type cannot be %select{qualified with 'const', 'volatile' or 'restrict'|a function|a reference|an array}0 type
arguments of '#pragma omp %0' cannot be of reference type %1
directive must be at file or namespace scope
%0 variable must be %1
Only one %0 clause can appear on a requires directive in a single translation unit
same pointer dereferenced in multiple different ways in map clause expressions
exactly one of 'inclusive' or 'exclusive' clauses is expected
'nonmonotonic' modifier can only be specified with 'dynamic' or 'guided' schedule kind
section of pointer to function type %0
section of pointer to incomplete type %0
section length is evaluated to a negative value %0
section length is unspecified and cannot be inferred because subscripted value is %select{not an array|an array of unknown bound}0
array section must be a subset of the original array
section stride is evaluated to a non-positive value %0
the statement for '#pragma omp sections' must be a compound statement
statement in 'omp sections' directive must be enclosed into a section region
exactly one '%0' directive must appear in the loop body of an enclosing directive
directive '#pragma omp %0' cannot contain more than one %select{'seq_cst', 'relaxed', |}1'acq_rel', 'acquire' or 'release' clause
array shaping dimension is evaluated to a non-positive value %0
'%0' statement cannot be used in OpenMP simd region
'%0' clause with '%1' modifier cannot be specified if an 'ordered' clause is specified
the 'copyprivate' clause must not be used with the 'nowait' clause
single declaration is expected after 'declare %select{simd|variant}0' directive
the loop %select{initializer|condition}0 expression depends on the current loop control variable
target construct with nested teams region contains statements outside of the teams construct
threadprivate variables are not allowed in '%0' clause
threadprivate variables cannot be used in target constructs
threadprivate variable with incomplete type %0
array section %select{lower bound|length}0 is not an integer
subscripted value is not an array or pointer
array shaping operation dimension is not an integer
expected %0 in OpenMP clause '%1'
modifier '%0' cannot be used along with modifier '%1'
mapping of union members is not allowed
incorrect reduction identifier, expected one of '+', '-', '*', '&', '|', '^', '&&', '||', 'min' or 'max' or declare reduction for type %0
expected%select{| one of}0 %1 directive name modifier%select{|s}0
loop to be fully unrolled must have a constant trip count
%select{a variable|a parameter|'this'}0 cannot appear in more than one %1 clause
expected pointer or reference to pointer in 'use_device_ptr' clause
expected variable of the '%0' type%select{|, not %2}1
'#pragma omp %0' must appear in the scope of the %q1 variable declaration
variable %0 cannot be threadprivate because it is %select{thread-local|a global named register variable}1
'#pragma omp %0' must precede all references to variable %q1
%0 variable cannot be in a %1 clause in '#pragma omp %2' directive
arguments of OpenMP clause '%0' in '#pragma omp %2' directive cannot be of variably-modified type %1
one of 'for', 'parallel', 'sections' or 'taskgroup' is expected
expected an integer or a pointer type of the outer loop counter '%0' for non-rectangular nests
function with 'device_type(%0)' is not available on %select{device|host}1
%0 variable cannot be %1
directive name modifier '%0' is not allowed for '#pragma omp %1'
'inscan' modifier can be used only in 'omp for', 'omp simd', 'omp for simd', 'omp parallel for', or 'omp parallel for simd' directive
expected %select{'val' modifier|one of 'ref', val' or 'uval' modifiers}0
variable of non-reference type %0 can be used only with 'val' modifier, but used with '%1'
the parameter of the 'ordered' clause must be greater than or equal to the parameter of the 'collapse' clause
the value of 'simdlen' parameter must be less than or equal to the value of the 'safelen' parameter
only %select{'omp_priv' or 'omp_orig'|'omp_in' or 'omp_out'}0 variables are allowed in %select{initializer|combiner}0 expression
access specifier can only have annotation attributes
only constructors take base initializers
only enumeration types have underlying types
variables in the %0 address space can only be declared in the outermost scope of a kernel function
atomic variable can be %select{assigned|initialized}0 to a variable only in global address space
bit-fields are not supported in OpenCL
cannot refer to a block inside block
the __block storage type is not permitted
illegal call to %0, expected %1 argument type
invalid number of arguments to function: %0
first argument to %0 must be a pipe type
invalid pipe access modifier (expecting %0)
invalid argument type to function %0 (expecting %1 having %2)
invalid argument %0 to function: %1, expecting a generic pointer argument
cannot cast non-zero value '%0' to 'event_t'
casting to type %0 is not allowed
variable in constant address space must be initialized
blocks with parameters are not accepted in this prototype of enqueue_kernel call
blocks used in enqueue_kernel call are expected to have parameters of type 'local void*'
illegal call to enqueue_kernel, incorrect argument types
illegal call to enqueue_kernel, parameter needs to be specified as integer type
mismatch in number of block parameters and local size arguments passed
vector component access has invalid length %0.  Supported: 1,2,3,4,8,16.
invalid block variable declaration - using 'extern' storage class is disallowed
%select{pointers|references}0 to functions are not allowed
%select{non-kernel function|function scope}0 variable cannot be declared in %1 address space
%select{program scope|static local|extern}0 variable must reside in %1 address space
declaring variable of type %0 is not allowed
%select{loading directly from|assigning directly to}0 pointer to type %1 requires cl_khr_fp16. Use vector data %select{load|store}0 builtin functions instead
implicit declaration of function %0 is invalid in OpenCL
implicit conversions between vector types (%0 and %1) are not permitted
access qualifier can only be used for pipe and image type
invalid block variable declaration - must be %select{const qualified|initialized}0
declaring function parameter of type %0 is not allowed%select{; did you forget * ?|}1
access qualifier %0 can not be used for %1 %select{|prior to OpenCL C version 2.0 or in version 3.0 and without __opencl_c_read_write_images feature}2
declaring function return value of type %0 is not allowed %select{; did you forget * ?|}1
array of %0 type is invalid in OpenCL
attribute %0 can only be applied to an OpenCL kernel function
multiple access qualifiers
%select{function|kernel}0 cannot be called 'main'
global sampler requires a const or constant address space qualifier
pointer to type %0 is invalid in OpenCL
kernel parameter cannot be declared as a pointer to a pointer
use of %select{type|declaration}0 %1 requires %2 support
return value cannot be qualified with address space
scalar operand type has greater rank than the type of the vector element. (%0 and %1)
invalid application of '%0' to a void type
taking address of a capture is not allowed
block type cannot be used as expression in ternary expression in OpenCL
type %0 can only be used as a function parameter in OpenCL
%0 type %1 not found; include the base header with -finclude-default-header
the %0 type cannot be used to declare a structure or union field
invalid prototype, variadic arguments are not allowed in OpenCL
variable length arrays are not supported in OpenCL
use of placement new requires explicit declaration
invalid application of '__builtin_omp_required_simd_align' to an expression, only type is allowed
circular pointer delegation detected
use of 'operator->' on type %0 would invoke a sequence of more than %1 'operator->' calls
%0 cannot take a dependent type as first parameter; use %1 instead
first parameter of %0 must have type %1
parameter of %0 cannot have a default argument
%0 cannot be declared inside a namespace
%0 cannot be declared static in global scope
%0 cannot have a dependent return type; use %1 instead
%0 must return type %1
%0 template must have at least two parameters
%0 must have at least one parameter
%0 cannot take a dependent type as first parameter; use size_t (%1) instead
%0 takes type size_t (%1) as first parameter
parameter of overloaded %0 cannot have a default argument
overloaded %0 must be a %select{unary|binary|unary or binary}2 operator (has %1 parameter%s1)
overloaded %0 must be a non-static member function
overloaded %0 must have at least one parameter of class or enumeration type
parameter of overloaded post-%select{increment|decrement}1 operator must have type 'int' (not %0)
overloaded %0 cannot be a static member function
overloaded %0 cannot be variadic
os_log() argument %0 is too big (%1 bytes, max %2)
os_log() format argument is not a string constant
defaulting this %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 would delete it after its first declaration
qualified reference to %0 is a constructor name rather than a %select{template name|type}1 in this context
__builtin_mul_overflow does not support signed _ExtInt operands of more than %0 bits
operand argument to overflow builtin must be an integer (%0 invalid)
result argument to overflow builtin must be a pointer to a non-const integer (%0 invalid)
exception specification of overriding function is more lax than base version
call to %0 is ambiguous
ambiguous conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2
call to constructor of %0 is ambiguous
call to member function %0 is ambiguous
call to object of type %0 is ambiguous
use of overloaded operator '%0' is ambiguous (with operand types %1 and %2)
use of overloaded operator '%0' is ambiguous (operand type %1)
call to deleted function %0
object of type %0 cannot be compared because its %1 is implicitly deleted
%select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2 uses deleted function
call to deleted constructor of %0
call to deleted member function %0
call to deleted function call operator in type %0
overload resolution selected deleted operator '%0'
call to implicitly-deleted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}0 of %1
object of type %0 cannot be %select{constructed|copied|moved|assigned|assigned|destroyed}1 because its %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 is implicitly deleted
functions that differ only in their return type cannot be overloaded
cannot convert %1 to %2 without a conversion operator
type %0 does not provide a %select{subscript|call}1 operator
no matching conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2
no matching function for call to %0
no matching constructor for initialization of %0
no matching literal operator for call to %0%select{| with argument of type %2| with arguments of types %2 and %3}1%select{| or 'const char *'}4%select{|, and no matching literal operator template}5
no matching member function for call to %0
no matching function for call to object of type %0
no viable overloaded '%0'
no viable overloaded operator[] for type %0
return type %0 of selected 'operator==' function for rewritten '%1' comparison is not 'bool'
static and non-static member functions with the same parameter types cannot be overloaded
reference to %select{overloaded|multiversioned}1 function could not be resolved; did you mean to call it%select{| with no arguments}0?
'ownership_returns' attribute index does not match; here it is %0
%0 attribute only applies to %select{pointer|integer}1 arguments
pack expansion contains parameter packs %0 and %1 that have different lengths (%2 vs. %3)
pack expansion contains parameter pack %0 that has a different length (%1 vs. %2) from outer parameter packs
pack expansion contains parameter pack %0 that has a different length (at least %1 vs. %2) from outer parameter packs
pack expansion for initialization of member %0
pack expansion does not contain any unexpanded parameter packs
C does not support default arguments
default arguments cannot be added to an out-of-line definition of a member of a %select{class template|class template partial specialization|nested class in a template}0
missing default argument on parameter
missing default argument on parameter %0
default arguments can only be specified for parameters in a function declaration
parameter pack cannot have a default argument
redefinition of default argument
default argument references local variable %0 of enclosing function
default argument references parameter %0
default argument references 'this'
default arguments cannot be added to a function template that has already been declared
argument may not have 'void' type
a lambda parameter cannot shadow an explicitly captured entity
%select{parameters|function return value}0 cannot have __fp16 type; did you forget * ?
cannot parenthesize the name of a method when forming a member pointer
%select{class|variable}0 template partial specialization does not specialize any template argument; to %select{declare|define}1 the primary template, remove the template argument list
partial specialization of %0 does not use any of its template parameters
ambiguous partial specializations of %0
class template partial specialization %0 cannot be redeclared
partial specialization cannot be declared as a friend
deduced type %0 does not satisfy %1
'new' expression with placement arguments refers to non-placement 'operator delete'
call to pointer to member function of type %0 drops '%1' qualifier%s2
pointer-to-member function type %0 can only be called on an %select{rvalue|lvalue}1
invalid use of pointer to member type after %select{.*|->*}0
this builtin is only valid on POWER%0 or later CPUs
this builtin requires VSX to be enabled
expected a 'float' or 'double' for the first argument
invalid use of PPC MMA type
'#pragma clang attribute' attribute with no matching '#pragma clang attribute push'
attribute %0 can't be applied to %1
negated attribute subject matcher sub-rule '%0' contradicts sub-rule '%1'
redundant attribute subject matcher sub-rule '%0'; '%1' already matches those declarations
unterminated '#pragma clang attribute push' at end of file
'#pragma clang attribute %select{%1.|}0pop' with no matching '#pragma clang attribute %select{%1.|}0push'
'#pragma float_control(except, on)' is illegal when precise is disabled
'#pragma float_control(precise, off)' is illegal when except is enabled
'#pragma float_control(precise, off)' is illegal when fenv_access is enabled
'#pragma float_control push/pop' can only appear at file or namespace scope or within a language linkage specification
'#pragma STDC FENV_ACCESS ON' is illegal when precise is disabled
%select{incompatible|duplicate}0 directives '%1' and '%2'
invalid argument of type %0; expected an integer type
%select{invalid value '%0'; must be positive|value '%0' is too large}1
expected a for, while, or do-while loop to follow '%0'
mac68k alignment pragma is not supported on this target
specifying an identifier within `#pragma pack` is not supported on this target
expected #pragma pack parameter to be '1', '2', '4', '8', or '16'
#pragma visibility pop with no matching #pragma visibility push
#pragma visibility push with no matching #pragma visibility pop
argument to #pragma section is not valid for this target: %0
__builtin_preserve_enum_value argument %0 invalid
__builtin_preserve_enum_value argument %0 not a constant
__builtin_preserve_field_info argument %0 not a constant
__builtin_preserve_field_info argument %0 not a field access
__builtin_preserve_type_info argument %0 invalid
__builtin_preserve_type_info argument %0 not a constant
instance variable %0 is private
private module fragment declaration with no preceding module declaration
private module fragment in module implementation unit
private module fragment redefined
probability argument to __builtin_expect_with_probability must be constant floating-point expression
probability argument to __builtin_expect_with_probability is outside the range [0.0, 1.0]
type of property %0 (%1) does not match type of accessor %2 (%3)
property %0 found on object of type %1; did you mean to access it with the "." operator?
use of Objective-C property in function nested in Objective-C container not supported, move function outside its container
property %0 is already implemented
property %0 has a variably modified type
type of property %0 (%1) does not match type of instance variable %2 (%3)
property access is using %0 method which is unavailable
property %0 refers to an incomplete Objective-C class %1 (with no @interface available)
property %0 not found on object of type %1
property %0 cannot be found in forward class object %1
property %0 not found on object of type %1; did you mean %2?
synthesized properties %0 and %1 both claim setter %2 - use of this setter will cause unexpected behavior
property cannot have array or function type %0
instance variable %0 is protected
protocol has circular dependency
property %select{of type %1|with attribute '%1'|without attribute '%1'|with getter %1|with setter %1}0 was selected for synthesis
object expression of non-scalar type %0 cannot be used in a pseudo-destructor expression
call to pseudo-destructor cannot have any arguments
%0 does not refer to a type name in pseudo-destructor expression; expected the name of type %1
the type of object expression %diff{($) does not match the type being destroyed ($)|does not match the type being destroyed}0,1 in pseudo-destructor expression
address discrimination flag for __ptrauth must be 0 or 1; value is %0
argument to %select{__ptrauth|ptrauth_struct}0 must be an integer constant expression
discriminator argument to ptrauth_sign_constant must be a constant integer, the address of the global variable where the result will be stored, or a blend of the two
argument to ptrauth_sign_constant must refer to a global variable or function
pointer authentication is disabled for the current target
this target does not support pointer authentication
key or discriminator of class %0 doesn't match that of base class %1
empty __ptrauth authentication option
extra discriminator for %select{__ptrauth|ptrauth_struct}2 must be between 0 and %1; value is %0
%select{static locals|globals}0 with authenticated null values are currently unsupported
%0 does not identify a valid pointer authentication key for the current target
invalid character in __ptrauth options
missing comma between __ptrauth options
attribute ptrauth_struct cannot be used on class %0 because it is a dynamic class
__ptrauth options must be a string of comma separated flags, found %0
%0 qualifier must take between 1 and 4 arguments
cast types may not be qualified with __ptrauth; type is %0
%select{return types|parameter types|properties}2 may not be qualified with %select{__ptrauth|__ptrauth_restricted_intptr}1; type is %0
__ptrauth qualifier may only be applied to pointer types; type here is %0
type %0 is already %1-qualified
repeated __ptrauth authentication %select{mode|option}0
__ptrauth_restricted_intptr qualifier may only be applied to pointer sized integer types; type here is %0
argument must be a string literal%select{| of char type}0
%0 is signed differently from the previous declaration
cannot pass undiscriminated type %0 to '__builtin_ptrauth_type_discriminator'
unknown __ptrauth authentication option %0
%select{signed value|extra discriminator|blended pointer|blended integer}0 must have %select{pointer|integer|pointer or integer}1 type; type here is %2
friend declaration cannot have a pure-specifier
exception declarator cannot be qualified
friend function definition cannot be qualified with '%0'
friend declaration of %0 does not match any declaration in %1
type operand %0 of 'typeid' cannot have '%1' qualifier
qualified member access refers to a member in %0
%q0 is not a member of class %1
%select{property|instance variable}0 access cannot be qualified with '%1'
@catch parameter declarator cannot be qualified
parameter declarator cannot be qualified
typedef declarator cannot be qualified
cannot build range expression with array function parameter %0 since parameter with array type %1 is treated as pointer type %2
assigning to 'readonly' return result of an Objective-C message not allowed
invalid type %0 to %1 operator
%select{struct|union}0 kernel parameters may not contain pointers
recursive evaluation of default argument
trying to recursively use %0 as superclass of %1
redeclaration of %0 with a different type%diff{: $ vs $|}1,2
redefinition of %0
redefinition of %0 as different kind of symbol
redefinition of %0 as an alias for a different namespace
redefinition of %0 with a different type%diff{: $ vs $|}1,2
%select{typedef|type alias|type alias template}0 redefinition with different types%diff{ ($ vs $)|}1,2
redefinition of a 'extern inline' function %0 is not supported in %select{C99 mode|C++}1
redefinition of enumerator %0
redefinition of label %0
redefinition of %select{typedef|type alias}0 for variably-modified type %1
cannot refer to declaration with an array type inside block
reference to %select{__device__|__global__|__host__|__host__ __device__}0 %select{function|variable}1 %2 in %select{__device__|__global__|__host__|__host__ __device__}3 function
reference to %select{__device__|__global__|__host__|__host__ __device__}0 function %1 in global initializer
cannot refer to declaration of structure variable with flexible array member inside block
reference initialization of type %0 with initializer of type %1 is ambiguous
%0 does not refer to a value
ref-qualifier '%select{&&|&}0' is not allowed on a constructor
ref-qualifier '%select{&&|&}0' is not allowed on a destructor
cannot overload a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}0 with a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}1
cannot refer to declaration with a variably modified type inside block
binding reference %diff{of type $ to value of type $|to value}0,1 %select{drops %3 qualifier%plural{1:|2:|4:|:s}4|changes address space|not permitted due to incompatible qualifiers}2
reference %diff{to %select{type|incomplete type}1 $ could not bind to an %select{rvalue|lvalue}2 of type $|could not bind to %select{rvalue|lvalue}2 of incompatible type}0,3
reference to type %0 cannot bind to an initializer list
reference of type %0 cannot bind to a temporary object because of address space mismatch
%select{non-const|volatile}0 reference cannot bind to bit-field%select{| %1}2
%select{non-const|volatile}0 reference cannot bind to matrix element
%select{non-const|volatile}0 reference cannot bind to vector element
'&' cannot precede a capture when the capture default is '&'
reference cannot be initialized with multiple values
pipes packet types cannot be of reference type
invalid reference to function %0: constraints not satisfied
reference to local %select{variable|binding}1 %0 declared in enclosing %select{%3|block literal|lambda expression|context}2
cannot form a reference to 'void'
declaration of reference variable %0 requires an initializer
reference to type %0 requires an initializer
function declared with regparm(%0) attribute was previously declared %plural{0:without the regparm|:with the regparm(%1)}1 attribute
%0 attribute cannot be repeated
variable does not have a constant initializer
default arguments not allowed for parameters of a requires expression
constraint variable %0 cannot be used in an evaluated context
cannot subclass a class that was declared with the 'objc_subclassing_restricted' attribute
returning block that lives on the local stack
@throw (rethrow) used outside of a @catch block
void block should not return a value
cannot return from %0
return in the catch of a function try block of a constructor is illegal
return statement not allowed in coroutine; did you mean 'co_return'?
%select{void function|void method|constructor|destructor}1 %0 must not return a value
LMUL argument must be in the range [0,3] or [5,7]
builtin requires '%0' extension support to be enabled
%0 cannot use 'super' because it is a root class
argument should be the value 90 or 270
argument should be the value 0, 90, 180 or 270
rvalue reference type %0 is not allowed in exception specification
sampler_t variable required - got %0
sampler_t initialization requires 32-bit integer, not %0
second argument to __builtin_call_with_static_chain must be of pointer type
second argument to 'va_arg' is of abstract type %0
second argument to 'va_arg' is of incomplete type %0
%0 causes a section type conflict with %1
cannot use SEH '__try' in a coroutine when C++ exceptions are enabled
cannot use SEH '__try' in blocks, captured regions, or Obj-C method decls
SEH '__try' is not supported on this target
chosen constructor is explicit in copy-initialization
selector element of type %0 cannot be a constant lvalue expression
selector element is not a valid lvalue
selector element type %0 is not a valid object
type of setter must be void
initialization is not supported for __shared__ variables.
requested shift is a vector of type %0 but the first operand is not a vector (%1)
index for __builtin_shufflevector must be less than the total number of vector elements
index for __builtin_shufflevector must be a constant integer
%select{|reference to }0sizeless type %1 is not allowed in exception specification
non-local variable with sizeless type %0
invalid application of '%0' to a function type
invalid application of '%0' to %select{an incomplete|sizeless}1 type %2
invalid application of '%select{sizeof|alignof|typeof}0' to bit-field
application of '%select{alignof|sizeof}1' to interface %0 is not supported on this architecture and platform
%0 does not refer to the name of a parameter pack
%0 does not refer to the name of a parameter pack; did you mean %1?
argument to 'operator<=>' %select{cannot be narrowed from type %1 to %2|evaluates to %1, which cannot be narrowed to type %2}0
specialization of member %q0 does not specialize an instantiated member
explicit specialization of %0 after instantiation
cannot reference member of primary template because deduced class template specialization %0 is %select{instantiated from a partial|an explicit}1 specialization
cannot specialize %select{|(with 'template<>') }0a member of an unspecialized template
forward declaration of %select{class|struct|interface|union|enum}0 cannot have a nested name specifier
static_assert expression is not an integral constant expression
static_assert failed%select{ %1|}0
static_assert failed due to requirement '%0'%select{ %2|}1
function declared in block scope cannot have 'static' storage class
static data member %0 not allowed in anonymous %select{struct|interface|union|class|enum}1
static data member %0 not allowed in local %select{struct|interface|union|class|enum}2 %1
static data member %0 already has an initializer
cannot cast %0 to %1 via virtual base %2
variables in function scope cannot be declared static
the 'static' modifier for the array size is not legal in new expressions
kernel functions cannot be declared static
'main' is not allowed to be declared static
static declaration of %0 follows non-static declaration
static member %0 cannot be a bit-field
'static' can only be specified inside the class definition
'static' member function %0 overrides a virtual function in a base class
interface type cannot be statically allocated
standard library implementation of %0 is not supported; %select{member '%2' does not have expected form|member '%2' is missing|the type is not trivially copyable|the type does not have the expected form}1
unsupported standard library implementation: 'std::%0' is not a class template
%0 attribute cannot be applied to a declaration
static data member definition cannot specify a storage class
@catch parameter cannot have storage specifier '%0'
storage class specified for a member declaration
existing instance variable %1 for strong property %0 may not be __weak
subscript of pointer to function type %0
subscript of pointer to %select{incomplete|sizeless}0 type %1
subscript requires size of interface %0, which is not constant for this architecture and platform
use of '__super' inside a lambda is unsupported
'%0' parameter must have pointer%select{| to unqualified pointer}1 type; type here is %2
'swift_async' completion handler parameter must have block type returning 'void', type here is %0
%0 attribute with 'nonnull_error' convention can only be applied to a %select{function|method}1 with a completion handler with an error parameter
%0 attribute with '%1' convention must have an integral-typed parameter in completion handler at index %2, type here is %3
%0 attribute must be applied to a %select{function|method}1 annotated with non-'none' attribute 'swift_async'
first argument to 'swift_async' must be either 'none', 'swift_private', or 'not_swift_private'
'swift_error_result' parameter must follow 'swift_context' parameter
'swift_indirect_result' parameters must be first parameters of function
'%0' parameter can only be used with swiftcall%select{ or swiftasynccall|}1 calling convention%select{|s}1
switch condition type %0 requires explicit conversion to %1
switch condition has incomplete class type %0
cannot jump from switch statement to this case label
multiple conversions from switch condition type %0 to an integral or enumeration type
@synthesize not allowed in a category's implementation
@synthesize not allowed on a class property %0
synthesized property with variable size type %0 requires an existing instance variable
cannot synthesize weak property in file using manual reference counting
cannot synthesize weak property because the current deployment target does not support weak references
invalid transaction abort code
definition of type %0 conflicts with %select{typedef|type alias}1 of the same name
%select{type tag|argument}0 index %1 is greater than the number of arguments specified
implicit declaration introduced by elaborated type conflicts with a %select{non-struct type|non-class type|non-union type|non-enum type|typedef|type alias|template|type alias template|template template argument}0 of the same name
%select{non-struct type|non-class type|non-union type|non-enum type|typedef|type alias|template|type alias template|template template argument}1 %0 cannot be referenced with a %select{struct|interface|union|class|enum}2 specifier
friend type templates must use an elaborated type
%0 requires %select{|%2 bit size}1 %3 type support, but target '%4' does not support it
attributes '%0("%2")' and '%1("%2")' are mutually exclusive
ambiguous constructor call when %select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1
%select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1 invokes deleted constructor
copying a temporary object of incomplete type %0
no viable constructor %select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1
address taken in non-type template argument for template parameter of reference type %0
deduced incomplete pack %0 for template parameter %1
non-type template argument refers to non-static data member %0
constraints not satisfied for %select{class template|function template|variable template|alias template|template template parameter|template}0 %1%2
%select{too few|too many}0 template arguments for %select{class template|function template|variable template|alias template|template template parameter|concept|template}1 %2
sorry, non-type template argument of pointer-to-member type %1 that refers to member %q0 of a different class is not supported yet
non-type template argument refers to non-static member function %0
template argument for non-type template parameter must be an expression
template argument for template template parameter must be a class template%select{| or type alias template}0
template argument for template type parameter must be a type
template argument for template type parameter must be a type; did you forget 'typename'?
non-type template parameter of reference type %diff{$ cannot bind to template argument of type $|cannot bind to template of incompatible argument type}0,1
template argument for non-type template parameter is treated as function type %0
non-type template argument of type %0 is not a constant expression
non-type template argument for template parameter of pointer type %0 must have its address taken
non-type template argument of type %0 cannot be converted to a value of type %1
non-type template argument does not refer to any declaration
non-type template argument of type %0 is not an integral constant expression
non-type template argument of type %0 must have an integral or enumeration type
non-type template argument does not refer to an object or function
non-type template argument is not a pointer to member constant
template argument does not refer to a class or alias template, or template template parameter
non-type template argument refers to %select{function|object}0 %1 that does not have linkage
template argument is the type of an unresolved overloaded function
reference binding of non-type template parameter %diff{of type $ to template argument of type $|to template argument}0,1 ignores qualifiers
non-type template argument of reference type %0 is not an object
template template argument has different template parameters than its corresponding template template parameter
non-type template argument refers to thread-local object
null non-type template argument must be cast to template parameter type %0
null non-type template argument of type %0 does not match template parameter of type %1
requires clause differs in template redeclaration
type constraint differs in template redeclaration
pack expansion used as argument for non-pack parameter of %select{alias template|concept}0
template name refers to non-type template %0
templates cannot be declared inside of a local class
%select{implicit|explicit}0 instantiation of undefined template %1
%select{implicit|explicit}0 instantiation of template %1 within its own definition
kernel functions cannot be used in a template declaration, instantiation or specialization
missing 'template' keyword prior to dependent template name '%0%1'
'%0%1' instantiated to a class template, not a function template
%0%select{| following the 'template' keyword}1 cannot refer to a dependent template
%0%select{| following the 'template' keyword}1 does not refer to a template
templates must have C++ linkage
member %0 declared as a template
extraneous 'template<>' in declaration of member %0
use of %select{class template|function template|variable template|alias template|template template parameter|concept|template}0 %1 requires template arguments
a non-type template parameter cannot have type %0 before C++20
a non-type template parameter cannot have type %0
template non-type parameter has a different type %0 in template %select{|template parameter }1redeclaration
non-type template parameter has incomplete type %0
non-type template parameter has non-literal type %0
type %0 of non-type template parameter is not a structural type
non-type template parameter has rvalue reference type %0
templates can only be declared in namespace or class scope
template parameter missing a default argument
template parameter redefines default argument
template parameter has a different kind in template %select{|template parameter }0redeclaration
%select{too few|too many}0 template parameters in template %select{|template parameter }1redeclaration
template parameter list matching the non-templated nested type %0 should be empty ('template<>')
template parameter pack cannot have a default argument
template parameter pack must be the last template parameter
declaration of %0 shadows template parameter
default template argument not permitted on a friend template
cannot add a default template argument to the definition of a member of a class template
%select{template type|non-type template|template template}0 parameter%select{| pack}1 conflicts with previous %select{template type|non-type template|template template}0 parameter%select{ pack|}1
nested name specifier '%0' for declaration does not refer into a class, class template or class template partial specialization
recursive template instantiation exceeded maximum depth of %0
cannot declare an explicit specialization in a friend
explicit specialization of %0 in function scope
default argument not permitted on an explicit %select{instantiation|specialization}0 of function %1
extraneous template parameter list in template specialization or out-of-line template definition
template specialization declaration cannot be a friend
template specialization requires 'template<>'
template specialization or definition requires a template parameter list corresponding to the nested type %0
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 must occur at global scope
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 not in %select{a namespace enclosing %2|class %2 or an enclosing namespace}3
can only provide an explicit specialization for a class template, function template, variable template, or a member function, static data member, %select{or member class|member class, or member enumeration}0 of a class template
extraneous 'template<>' in declaration of %0 %1
template template argument %0 is more constrained than template template parameter %1
template template parameter must have its own template parameters
a typedef cannot be a template
cannot declare a class template with no name
extraneous 'template<>' in declaration of variable %0
tentative definition has type %0 that is never completed
'this' cannot be %select{implicitly |}0captured in this context
'this' cannot be%select{| implicitly}0 used in a static member function declaration
initializer for thread-local variable must be a constant expression
'%0' variables must have global storage
thread-local declaration of %0 follows non-thread-local declaration
type of thread-local variable has non-trivial destruction
thread-local declaration of %0 with %select{static|dynamic}1 initialization follows declaration with %select{dynamic|static}1 initialization
thread-local storage is not supported for the current target
three-way comparison between vectors is not supported
cannot throw an object of abstract type %0
cannot throw object of incomplete type %0
cannot throw pointer to object of incomplete type %0
cannot throw object of sizeless type %0
alignment (%0) of thread-local variable %1 is greater than the maximum supported alignment (%2) for a thread-local variable on this target
only one element declaration is allowed
deduction guide cannot have a requires clause
trailing return type may not be nested within parentheses
function with trailing return type must specify return type 'auto', not %0
%0 requires more than 1 template argument; provide the remaining arguments explicitly to use it here
concept named in type constraint is not a type concept
%0 cannot be defined in a type alias template
%0 cannot be defined in a condition
%0 cannot be defined in an enumeration
types may not be defined in a for range declaration
%0 cannot be defined in a parameter type
%0 cannot be defined in the result type of a function
%0 cannot be defined in a type specifier
type of property %0 in class extension does not match property type in primary class
a parameter pack may not be accessed at an out of bounds index
'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression
'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression that can be represented by a 64 bit integer
%0 is not supported on this target
address of %select{bit-field|vector element|property expression|register variable|matrix element}0 requested
taking the address of a destructor
taking the address of a temporary object of type %0
conversion %diff{from $ to $|between types}0,1 is ambiguous
variable declared with 'objc_externally_retained' cannot be modified in ARC
cannot assign to 'self' outside of a method in the init family
cannot assign to 'self' in a class method
arithmetic on a pointer to %select{an incomplete|sizeless}0 type %1
fast enumeration variables cannot be modified in ARC by default; declare the variable __strong to allow this
array type %0 is not assignable
%select{cannot assign to return value because function %1 returns a const value|cannot assign to variable %1 with const-qualified type %2|cannot assign to %select{non-|}1static data member %2 with const-qualified type %3|cannot assign to non-static data member within const member function %1|cannot assign to %select{variable %2|non-static data member %2|lvalue}1 with %select{|nested }3const-qualified data member %4|read-only variable is not assignable}0
value of type %0 is not contextually convertible to 'bool'
arguments are of different types%diff{ ($ vs $)|}0,1
ordered compare requires two args of floating point type%diff{ ($ and $)|}0,1
floating point classification requires argument of floating point type (passed in %0)
called object type %0 is not a function or function pointer
argument type %0 is not a real floating point type
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, at least argument %1 must be specified
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2; did you mean %3?
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, single argument %1 was not specified
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most single argument %1, have %2 arguments
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2; did you mean %3?
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected single argument %1, have %2 arguments
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
cast to incomplete type %0
cast to union type from type %0 not present in union
'__builtin_choose_expr' requires a constant expression
comparison of distinct block types%diff{ ($ and $)|}0,1
comparison of distinct pointer types%diff{ ($ and $)|}0,1
equality comparison between function pointer and void pointer (%0 and %1)
comparison between pointer and integer (%0 and %1)
used type %0 where integer or floating point type is required
used type %0 where floating point type is not allowed
used type %0 where arithmetic or pointer type is required
incompatible operand types%diff{ ($ and $)|}0,1
non-pointer operand type %0 incompatible with %select{NULL|nullptr}1
__ptrauth qualification mismatch%diff{ ($ and $)|}0,1
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%5 vs %6)|: different exception specifications}4
incompatible block pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
incompatible function pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between pointers to integer types %select{with different sign|where one is of the unique plain 'char' type and the other is not}3
incompatible integer to pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer to integer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between void pointer and function pointer
value of type %0 is not implicitly convertible to %1
conversion from %0 to %1 is not allowed in a converted constant expression
conversion from %0 to %1 in converted constant expression would bind reference to a temporary
variable has incomplete type %0
conversion function %diff{from $ to $|between types}0,1 invokes a deleted function
vector is not assignable (contains duplicate components)
invalid operand of type %0 where floating, complex or a vector of such types is required
used type %0 where integer is required
operand of type %0 where arithmetic or pointer type is required
expression is not assignable
fields must have a constant size: 'variable length array in structure' extension will never be supported
cannot %select{decrement|increment}1 value of type %0
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes address space of pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes address space of nested pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes retain/release properties of pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes pointer-authentication of pointee type
definition of variable with array type needs an explicit size or an initializer
incomplete definition of type %0
incomplete type %0 is not assignable
indirection requires pointer operand (%0 invalid)
cannot take the address of an rvalue of type %0
extra '&' taking address of overloaded function
invalid operands to binary expression (%0 and %1)
pointer to function type %0 may not be 'restrict' qualified
restrict requires a pointer or reference (%0 is invalid)
restrict requires a pointer or reference
instance variables must have a constant size
logical expression with vector %select{type %1 and non-vector type %2|types %1 and %2}0 is only supported in C++
assignment to cast is illegal, lvalue casts are not supported
member reference type %0 is not a pointer
%0 does not have a member named %1
%0 does not have a member named %1; did you mean %2?
member reference base type %0 is not a structure or union
member reference type %0 is %select{a|not a}1 pointer; did you mean to use '%select{->|.}1'?
cannot refer to type member %0 in %1 with '%select{.|->}2'
cannot refer to member %0 in %1 with '%select{.|->}2'
%diff{return type $ must match previous return type $|return type must match previous return type}0,1 when %select{block literal|lambda expression}2 has unspecified explicit return type
array size is negative
non-object type %0 is not assignable
no viable conversion%select{%diff{ from $ to $|}1,2|%diff{ from returned value of type $ to function return type $|}1,2}0
no viable conversion%diff{ from $ to incomplete type $|}0,1
%select{comparison between %diff{ ($ and $)|}0,1|arithmetic operation with operands of type %diff{ ($ and $)|}0,1|conditional operator with the second and third operands of type %diff{ ($ and $)|}0,1}2 which are pointers to non-overlapping address spaces
ordered comparison of function pointers (%0 and %1)
ordered comparison between pointer and zero (%0 and %1)
arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2
arithmetic on%select{ a|}0 pointer%select{|s}0 to void
illegal storage class on file-scoped variable
illegal storage class on function
statement requires expression of integer type (%0 invalid)
statement requires expression of scalar type (%0 invalid)
%diff{$ and $ are not pointers to compatible types|pointers to incompatible types}0,1
array subscript is not an integer
subscripted value is not an array, pointer, or vector
cannot combine fixed-length and sizeless SVE vectors in expression, result is ambiguous (%0 and %1)
cannot combine GNU and SVE vectors in expression, result is ambiguous (%0 and %1)
three-way comparison between pointer and zero
invalid argument type %0 to unary expression
vector operands do not have the same number of elements (%0 and %1)
cannot convert between vector values of different size (%0 and %1)
cannot convert between %select{scalar|vector}0 type %1 and vector type %2 as implicit conversion would cause truncation
cannot convert between vector and non-scalar values (%0 and %1)
zero-length arrays are not permitted in C++
expected %0 argument%select{||s}0 for %select{tmo_malloc|tmo_calloc|tmo_realloc|tmo_aligned_alloc|tmo_posix_memalign}1 operation
invalid typed memory operation %1
invalid %select{return|parameter}0 type for %select{tmo_malloc|tmo_calloc|tmo_realloc|tmo_aligned_alloc|tmo_posix_memalign}1 operation
the typed_allocator attribute can only be applied to functions
unsupported: anonymous type given name for linkage purposes by %select{typedef|alias}0 declaration after its linkage was computed; add a tag name here to establish linkage prior to definition
typedef member %0 cannot be a bit-field
typedef name must be an identifier
missing 'typename' prior to dependent type name '%0%1'
missing 'typename' prior to dependent type template name '%0%1'
no type named %0 in %1
no type named 'type' in %0; 'enable_if' cannot be used to disable this declaration
failed requirement '%0'; 'enable_if' cannot be used to disable this declaration
typename specifier refers to non-type member %0 in %1
typename specifier refers to non-type %0
typename specifier refers to a dependent using declaration for a value %0 in %1
%0 is unavailable
%0 is unavailable in ARC
%0 is unavailable: %1
%0 has unknown return type; cast the call to its declared return type
no known method %select{%objcinstance1|%objcclass1}0; cast the message send to the method's return type
%0 has unknown type; cast it to its declared type to use it
declaration of %0 is missing in %1 class
undeclared identifier %0 in destructor name
use of undeclared label %0
definition of class %0 must be available to use Objective-C %select{array literals|dictionary literals|numeric literals|boxed expressions|string literals}1
cannot find protocol declaration for %0
cannot find protocol declaration for %0; did you mean %1?
use of undeclared %0
use of undeclared %0; did you mean %1?
use of undeclared identifier %0
use of undeclared identifier %0; did you mean %1?
cannot find interface declaration for %0
cannot find interface declaration for %0; did you mean %1?
cannot find interface declaration for %0, superclass of %1
cannot find interface declaration for %0, superclass of %1; did you mean %2?
inline variable %q0 is not defined
%select{function|variable}0 %q1 is used but not defined in this translation unit, and cannot be defined in any other translation unit because its type does not have linkage
cannot determine underlying type of incomplete enumeration type %0
%select{expression|base type|declaration type|data member type|bit-field size|static assertion|fixed underlying type|enumerator value|using declaration|friend declaration|qualifier|initializer|default argument|non-type template parameter type|exception type|partial specialization|__if_exists name|__if_not_exists name|lambda|block|type constraint|requirement|requires clause}0 contains%plural{0: an|:}1 unexpanded parameter pack%plural{0:|1: %2|2:s %2 and %3|:s %2, %3, ...}1
friends can only be classes or functions
unexpected interface name %0: expected expression
unexpected namespace name %0: expected expression
unexpected type name %0: expected expression
cannot define the implicit copy assignment operator for %0, because non-static %select{reference|const}1 member %2 cannot use copy assignment operator
%select{constructor for %1|implicit default constructor for %1|cannot use constructor inherited from %1:}0 must explicitly initialize the %select{reference|const}2 member %3
unions cannot be base classes
union member %0 has reference type %1
the address of a declaration with unknown type can only be cast to a pointer type
address-of operator cannot be applied to a call to a function with unknown return type
function %0 with unknown type must be given a function type
variable %0 with unknown type cannot be given a function type
no type named %0 in %1; did you mean %select{|simply }2%3?
unknown receiver %0; did you mean %1?
unknown %select{type|class}1 name %0; did you mean %2?
unknown type name %0
unknown type name %0; did you mean %1?
must explicitly qualify name of member function when taking its address
constrained placeholder types other than simple 'auto' on non-type template parameters not supported yet
call to unsupported expression with unknown type
%0 has unknown type, which is not supported for this kind of declaration
unsupported expression with unknown type
cannot cast %0 to its %select{private|protected}2 base class %1
illegal redeclaration of property in class extension %0 (attribute must be 'readwrite', while its primary must be 'readonly')
illegal redeclaration of 'readwrite' property in class extension %0 (perhaps you intended this to be a 'readwrite' redeclaration of a 'readonly' public property?)
use of default argument to function %0 that is declared later in class %1
reference to unresolved using declaration
use of %0 with tag type that does not match previous declaration
using declaration cannot refer to class member
using declaration cannot refer to a namespace
target of using declaration conflicts with declaration already in scope
declaration conflicts with target of using declaration already in scope
using declaration cannot refer to a constructor
%0 is not a direct base of %1, cannot inherit constructors
using declaration cannot refer to a destructor
cannot befriend target of using declaration
using declaration refers to its own class
using declaration refers into '%0', which is not a base class of %1
using declaration in class refers into '%0', which is not a class
redeclaration of using declaration
using declaration pack expansion at block scope produces multiple values
using declaration cannot refer to a template specialization
dependent using declaration resolved to type without 'typename'
no namespace named %0 in %1; did you mean %select{|simply }2%3?
no namespace named %0; did you mean %1?
redeclaration of using-enum declaration
using-enum cannot name a dependent type
'using_if_exists' attribute cannot be applied to an inheriting constructor
%select{|member}0 using declaration %1 instantiates to an empty pack
using declaration requires a qualified name
'typename' keyword used on a non-type
cannot call operator __uuidof on a type with multiple GUIDs
cannot call operator __uuidof on a type with no GUID
CUDA device code does not support va_arg
'va_start' cannot be used in a captured statement
'va_start' used in function with fixed args
'va_start' cannot be used outside a function
'va_start' used in %select{System V|Win64}0 ABI function
array types cannot be value-initialized
variable template partial specialization %0 cannot be redefined
no variable template matches%select{| partial}0 specialization
no variable template matches specialization; did you mean to use %0 as function template instead?
%select{variable|static data member}0 instantiated with function type %1
variable-sized object may not be initialized
'new' cannot allocate object of variably modified type %0
non-type template parameter of variably modified type %0
variably modified type %0 cannot be used as a template argument
'typeid' of variably modified type %0
CUDA device code does not support variadic functions
first two arguments to %0 must have the same type
first two arguments to %0 must be vectors
'vec_step' requires built-in scalar or vector type, %0 invalid
%select{too many|too few}0 elements in vector initialization (expected %1 elements, have %2)
unions cannot have virtual functions
second argument to __builtin_virtual_member_address must be the address of a virtual C++ member function: for example '&Foo::func'
'virtual' cannot be specified on member function templates
first argument to __builtin_virtual_member_address must have a type deriving from class where second argument was defined
first argument to __builtin_virtual_member_address must have C++ class type
'virtual' can only appear on non-static member functions
'virtual' can only be specified inside the class definition
variable length array declaration cannot have 'extern' linkage
variable length array declaration cannot have 'static' storage duration
variable length array declaration not allowed at file scope
variable length array cannot be formed during template argument deduction
variable length arrays are not supported for the current target
variably modified type declaration cannot have 'extern' linkage
variably modified type declaration not allowed at file scope
function declaration cannot have variably modified type
'void' must be the first and only parameter if specified
'void' as parameter must not have type qualifiers
argument %0 to %1 must be a 2-bit unsigned literal (i.e. 0, 1, 2 or 3)
existing instance variable %1 for __weak property %0 must be __weak
sampler type cannot be used with the __local and __global address space qualifiers
invalid rounding argument
scale argument must be 1, 2, 4, or 8
tile arguments must refer to different tiles
%0 attribute can only be applied to a typedef or a field declaration
%0 attribute can only be applied to non-record types
invalid type signature semantic kind %1
%0 attribute can only be applied once per declaration
semantics kind '%1' repeated more than once
%0 calling convention is not supported %select{for this target|on variadic function|on constructor/destructor|on builtin function}1
duplicate use of asm operand name "%0"
asm-specifier for input or output variable conflicts with asm clobber list
use of function template name with no prior declaration in function call with explicit template arguments is a C++20 extension
initializer for aggregate is not a compile-time constant
anonymous types declared in an anonymous %select{struct|union}0 are an extension
types declared in an anonymous %select{struct|union}0 are a Microsoft extension
anonymous %select{struct|union}0 cannot be '%1'
anonymous unions are a C11 extension
initialization of an array %diff{of type $ from a compound literal of type $|from a compound literal}0,1 is a GNU extension
parenthesized initialization of a member array is a GNU extension
implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is a C++11 extension
ISO C++ standards before C++17 do not allow new expression for type %0 to use list-initialization
'auto' type specifier is a C++11 extension
ISO C++ does not allow %select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2 because it casts away qualifiers, even though the source and destination types are unrelated
anonymous structs are a C11 extension
%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature
flexible array members are a C99 feature
'trivial_abi' cannot be applied to %0
cast between pointer-to-function and pointer-to-object is an extension
%select{case value|enumerator value|non-type template argument|array size|explicit specifier argument|noexcept specifier argument}0 %select{cannot be narrowed from type %2 to %3|evaluates to %2, which cannot be narrowed to type %3}1
complex initialization specifying real and imaginary components is an extension
use of this statement in a constexpr %select{function|constructor}0 is a C++14 extension
use of this statement in a constexpr %select{function|constructor}0 is a C++20 extension
multiple return statements in constexpr function is a C++14 extension
constexpr constructor that does not initialize all members is a C++20 extension
%select{constexpr|consteval}1 %select{function|constructor}0 never produces a constant expression
function try block in constexpr %select{function|constructor}0 is a C++20 extension
variable declaration in a constexpr %select{function|constructor}0 is a C++14 extension
uninitialized variable in a constexpr %select{function|constructor}0 is a C++20 extension
type definition in a constexpr %select{function|constructor}0 is a C++14 extension
constexpr union constructor that does not initialize any member is a C++20 extension
'constinit' specifier missing on initializing declaration of %0
use of the %0 attribute is a C++14 extension
use of the %0 attribute is a C++17 extension
use of the %0 attribute is a C++20 extension
designated initializers are a C++20 extension
decomposition declarations are a C++17 extension
ISO C++17 does not permit structured binding declaration in a condition
decomposition declaration declared %plural{1:'%1'|:with '%1' specifiers}0 is a C++20 extension
default initialization of an object of const type %0%select{| without a user-provided default constructor}1 is a Microsoft extension
defaulted comparison operators are a C++20 extension
cannot delete expression with pointer-to-'void' type %0
ISO C++11 does not allow conversion from string literal to %0
designated initializers are a C99 feature
array designators are a C99 extension
brace elision for designated initializer is a C99 extension
mixture of designated and non-designated initializers in the same initializer list is a C99 extension
nested designators are a C99 extension
ISO C++ requires field designators to be specified in declaration order; field %1 will be initialized after field %0
destructor cannot be declared using a %select{typedef|type alias}1 %0 of the class name
ISO C++ considers this destructor name lookup to be ambiguous
ISO C++ requires the name after '::~' to be found in the same scope as the name before '::~'
empty %select{struct|union}0 is a GNU extension
befriending enumeration type %0 is a C++11 extension
enumeration values exceed range of largest integer
ISO C restricts enumerator values to range of 'int' (%0 is too %select{small|large}1)
incremented enumerator value %0 is not representable in the largest integer type
enumerator value is not representable in the underlying type %0
explicit capture of 'this' with a capture default of '=' is a C++20 extension
ambiguous use of internal linkage declaration %0 defined in multiple modules
excess elements in %select{array|vector|scalar|union|struct}0 initializer
excess elements in initializer for indivisible sizeless type %0
excess elements in char array initializer
explicit conversion functions are a C++11 extension
duplicate explicit instantiation of %0 ignored as a Microsoft extension
qualifier in explicit instantiation of %q0 requires a template-id (a typedef is not permitted)
explicit specialization cannot have a storage class
ISO C++20 does not permit %select{an empty|a static_assert}0 declaration to appear in an export block
ISO C++20 does not permit a declaration that does not introduce any names to be exported
ISO C++20 does not permit using directive to be exported
expression is not an %select{integer|integral}0 constant expression; folding it to a constant is a GNU extension
flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a GNU extension
flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a Microsoft extension
%0 may not be used as an array element due to flexible array member
%0 may not be nested in a struct due to flexible array member
flexible array initialization is a GNU extension
flexible array member %0 in a union is a GNU extension
flexible array member %0 in a union is a Microsoft extension
'begin' and 'end' returning different types (%0 and %1) is a C++17 extension
ISO C forbids forward references to 'enum' types
redeclaration of already-defined enum %0 is a GNU extension
use of member %0 found via unqualified lookup into dependent bases of class templates is a Microsoft extension
use of member %0 before its declaration is a Microsoft extension
complex numbers are an extension in a freestanding C99 implementation
unqualified friend declaration referring to type outside of the nearest enclosing namespace is a Microsoft extension; add a nested name specifier
anonymous structs are a GNU extension
arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2 is a GNU extension
subscript of a pointer to void is a GNU extension
arithmetic on%select{ a|}0 pointer%select{|s}0 to void is a GNU extension
jump from this goto statement to its label is a Microsoft extension
imaginary constants are a GNU extension
function previously declared with an %select{explicit|implicit}0 exception specification redeclared with an %select{implicit|explicit}0 exception specification
implicit declaration of function %0 is invalid in C99
implicitly declaring library function '%0' with type %1
in-class initializer for static data member of type %0 is a GNU extension
in-class initializer for static data member of type %0 requires 'constexpr' specifier
in-class initializer for static data member is not a constant expression; folding it to a constant is a GNU extension
%select{|pointer to |reference to }0incomplete type %1 is not allowed in exception specification
ISO C++17 does not allow incrementing expression of type bool
initialized lambda captures are a C++14 extension
initialized lambda pack captures are a C++20 extension
constant expression evaluates to %0 which cannot be narrowed to type %1
type %0 cannot be narrowed to %1 in initializer list
non-constant-expression cannot be narrowed from type %0 to %1 in initializer list
initializer %select{partially |}0overrides prior initialization of this subobject
initializer-string for char array is too long
inline variables are a C++17 extension
ISO C does not support '~' for complex conjugation of %0
complex integer types are a GNU extension
ISO C does not support '++'/'--' on complex integer type %0
static %select{function|variable}0 %1 is used in an inline function with external linkage
static %select{function|variable}0 %1 is used in an inline function with external linkage
return type of 'main' is not 'int'
ISO C++ does not allow 'main' to be used by a program
too many braces around %select{scalar |}0initializer
class member cannot be redeclared
exception specification in declaration does not match previous declaration
exception specification in explicit instantiation does not match instantiated one
declaration specifier missing, defaulting to 'int'
%0 is missing exception specification '%1'
type specifier missing, defaults to 'int'
ISO C90 forbids mixing declarations and code
import of C++ module '%0' appears within extern "C" language linkage specification
redundant #include of module '%0' appears within %1
accessing inaccessible direct base %0 of %1 is a Microsoft extension
anonymous %select{structs|unions}0 are a Microsoft extension
static_cast between pointer-to-function and pointer-to-object is a Microsoft extension
using the undeclared type %0 as a default template argument is a Microsoft extension
non-type template argument containing a dereference operation is a Microsoft extension
explicit constructor calls are a Microsoft extension
forward references to 'enum' types are a Microsoft extension
implicit conversion between pointer-to-function and pointer-to-object is a Microsoft extension
%0 is missing exception specification '%1'
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 not in %select{a namespace enclosing %2|class %2 or an enclosing namespace}3 is a Microsoft extension
template argument for template type parameter must be a type; omitted 'typename' is a Microsoft extension
using declaration referring to inaccessible member '%0' (which refers to accessible member '%1') is a Microsoft compatibility extension
'mutable' on a reference type is a Microsoft extension
lookup of %0 in member access expression is ambiguous; using member of %1
use of enumeration in a nested name specifier is a C++11 extension
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers in nested pointer types
when type is in parentheses, array cannot have dynamic size
declaration does not declare anything
%select{struct|union}0 without named members is a GNU extension
anonymous non-C-compatible type given name for linkage purposes by %select{typedef|alias}0 declaration; add a tag name here
non-class friend type %0 is a C++11 extension
'main' is not allowed to be declared _Noreturn
offset of on non-POD type %0
offset of on non-standard-layout type %0
initialization clause of OpenMP for loop is not in canonical form ('var = init' or 'T var = init')
Clang permits use of type 'double' regardless pragma if 'cl_khr_fp64' is supported
vector component name '%0' is a feature from OpenCL version 3.0 onwards
replacement function %0 cannot be declared 'inline'
out-of-line declaration of a member must be a definition
ISO C++ specifies that qualified reference to %0 is a constructor name rather than a %select{template name|type}1 in this context, despite preceding %select{'typename'|'template'}2 keyword
exception specification of overriding function is more lax than base version
ISO C++20 considers use of overloaded operator '%0' (with operand types %1 and %2) to be ambiguous despite there being a unique best viable function%select{ with non-reversed arguments|}3
ISO C++20 requires return type of selected 'operator==' function for rewritten '%1' comparison to be 'bool', not %0
redefinition of default argument
parameter %0 was not declared, defaulting to type 'int'
%diff{promoted type $ of K&R function parameter is not compatible with the parameter type $|promoted type of K&R function parameter is not compatible with parameter type}0,1 declared in a previous prototype
omitting the parameter name in a function definition is a C2x extension
%select{class|variable}0 template partial specialization is not more specialized than the primary template
%select{class|variable}0 template partial specialization contains %select{a template parameter|template parameters}1 that cannot be deduced; this partial specialization will never be used
plain '_Complex' requires a type specifier; assuming '_Complex double'
invoking a pointer to a 'const &' member function on an rvalue is a C++20 extension
predefined identifier is only valid inside function
pseudo-destructors on type void are a Microsoft extension
function definition with pure-specifier is a Microsoft extension
qualified destructor name only found in lexical scope; omit the qualifier to find this type name by unqualified lookup
redefinition of typedef %0 is a C11 feature
ISO C++17 does not allow 'register' storage class specifier
friend function %0 retaining previous language linkage is an extension
%select{void function|void method|constructor|destructor}1 %0 should not return a value
void %select{function|method|block}1 %0 should not return void expression
non-void %select{function|method}1 %0 should return a value
C++98 requires an accessible copy constructor for class %2 when binding a reference to a temporary; was %select{private|protected}0
no viable constructor %select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1; C++98 requires a copy constructor when binding a reference to a temporary
invalid application of '%0' to a function type
invalid application of '%0' to a void type
'%0' is not permitted on a declaration of a type
capture of '*this' by copy is a C++17 extension
static data member %0 in union is a C++11 extension
redeclaring non-static %0 as static is a Microsoft extension
'static' can only be specified inside the class definition
string literal operator templates are a GNU extension
ISO C90 does not allow subscripting non-lvalue array
address non-type template argument cannot be surrounded by parentheses
template argument uses local type %0
non-type template argument referring to %select{function|object}0 %1 with internal linkage is a C++11 extension
template argument uses unnamed type
'template' keyword outside of a template
declaration of %0 shadows template parameter
default template arguments for a function template are a C++11 extension
taking the address of a temporary object of type %0
ISO C forbids taking the address of an expression of type 'void'
method parameter type %diff{$ does not match super class method parameter type $|does not match super class method parameter type}0,1
C99 forbids casting nonscalar type %0 to the same type
cast to union type is a GNU extension
pointer comparisons before C11 need to be between two complete or two incomplete types; %0 is %select{|in}2complete and %1 is %select{|in}3complete
comparison of distinct pointer types%diff{ ($ and $)|}0,1
equality comparison between function pointer and void pointer (%0 and %1)
comparison between pointer and integer (%0 and %1)
incompatible operand types (%0 and %1)
pointer type mismatch%diff{ ($ and $)|}0,1
C99 forbids conditional expressions with only one void side
pointer/integer type mismatch in conditional expression%diff{ ($ and $)|}0,1
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers
incompatible function pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between pointers to integer types %select{with different sign|where one is of the unique plain 'char' type and the other is not}3
incompatible integer to pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer to integer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between void pointer and function pointer
tentative definition of variable with internal linkage has incomplete non-array type %0
ISO C++ does not allow indirection on operand of type %0
ordered comparison of function pointers (%0 and %1)
ordered comparison between pointer and zero (%0 and %1) is an extension
ordered comparison between pointer and integer (%0 and %1)
zero size arrays are an extension
typedef requires a name
missing 'typename' prior to dependent type name '%0%1'
'typename' occurs outside of a template
use of undeclared identifier %0; unqualified lookup into dependent bases of class template %1 is a Microsoft extension
ISO C++ requires a definition in this translation unit for %select{function|variable}0 %q1 because its type does not have linkage
unelaborated friend declaration is a C++11 extension; specify '%select{struct|interface|union|class|enum}0' to befriend %1
union member %0 has reference type %1, which is a Microsoft extension
use of out-of-scope declaration of %0%select{| whose type is not compatible with that of an implicit declaration}1
member using declaration naming a non-member enumerator is a C++20 extension
using declaration naming a scoped enumerator is a C++20 extension
using directive refers to implicitly-defined namespace 'std'
field %0 with variable sized type %1 not at the end of a struct or class is a GNU extension
variable templates are a C++14 extension
'main' is not allowed to be declared variadic
variable length arrays are a C99 feature
variable length array folded to constant array as an extension
'%0' cannot be signed or unsigned
constrained by %select{|implicitly }1%select{private|protected}0 inheritance here
%select{|implicitly }1declared %select{private|protected}0 here
protected %select{constructor|destructor}0 can only be used to %select{construct|destroy}0 a base class subobject
must name member using the type of the current context %0
can only access this member on an object of type %0
add stubs for missing protocol requirements
add a '@synthesize' directive
add a pair of parentheses to declare a variable
candidate function made ineligible by enable_if
declared with %0 attribute here
allocated with 'new%select{[]|}0' here
lookup in the object type %0 refers here
lookup from the current scope refers here
similar constraint expressions not considered equivalent; constraint expressions cannot be considered equivalent unless they originate from the same concept
similar constraint expression here
candidate found by name lookup is %q0
inherited from base class %0 here
member found by ambiguous name lookup
member type %0 found by ambiguous name lookup
because of ambiguity in conversion %diff{of $ to $|between types}0,1
anonymous namespace begins here
use __bridge to convert directly (no change in ownership)
use %select{__bridge_retained|CFBridgingRetain call}1 to make an ARC object available as a +1 %0
use %select{__bridge_transfer|CFBridgingRelease call}1 to transfer ownership of a +1 %0 into ARC
use __bridge with C-style cast to convert directly (no change in ownership)
use __bridge_retained with C-style cast to make an ARC object available as a +1 %0
use __bridge_transfer with C-style cast to transfer ownership of a +1 %0 into ARC
field has non-trivial ownership qualification
declaration uses type that is ill-formed in ARC
declaration in interface is not in the '%select{alloc|copy|init|new}0' family because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
init method must return a type related to its receiver type
declaration in interface
block will be retained by %select{the captured object|an object strongly retained by the captured object}0
also accessed here
declaration uses __weak, but ARC is disabled
declaration uses __weak, which the current deployment target does not support
array %0 declared here
add 'u8' prefix to form a 'char8_t' string literal
conversion to %select{integral|enumeration}0 type %1 declared here
constraint '%0' is already present here
use constraint modifier "%0"
type %0 is incomplete
%select{and|because}0 '%1' evaluated to false
%select{and|because}0 '%1' (%2 %3 %4) evaluated to false
setter and getter must both be synthesized, or both be user defined,or the property must be nonatomic
attribute is here
annotating the 'if %select{constexpr|consteval}0' statement here
annotating the infinite loop here
previous %select{unmarked |}0overload of function is here
property should be changed to be readwrite
%0 has been explicitly marked %select{unavailable|deleted|deprecated}1 here
return type of 'await_ready' is required to be contextually convertible to 'bool'
explicitly cast the pointer to silence this warning
base class %0 specified here
bit-field is declared here
did you mean to use __block %0?
called by %0
previous call is here%select{; set to nil to indicate it cannot be called afterwards|}0
%0 declared here
callee declares array parameter as static here
'trivial_abi' is disallowed on %0 because %select{its copy constructors and move constructors are all deleted|it is polymorphic|it has a base of a non-trivial class type|it has a virtual base|it has a __weak field|it has a field of a non-trivial class type|it has an address-discriminated __ptrauth field}1
declaration missing '[[carries_dependency]]' attribute is here
cast one or both operands to int to silence this warning
cast expression to void to silence warning
%select{category|class extension}0 conforms to protocol %1 which defines method %2
consider making the bitfield type %select{unsigned|signed}0
consider defining %0 with the '%1' calling convention
while checking constraint satisfaction for class template partial specialization '%0' required here
while checking constraint satisfaction for function '%0' required here
while checking constraint satisfaction for template '%0' required here
while checking constraint satisfaction for variable template partial specialization '%0' required here
class is declared here
explicitly declare getter %objcinstance0 with '%1' to return an 'unowned' object
parameter of the 'collapse' clause
in defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator for %1 first required here
compatible type %0 specified here
place parentheses around the string literal to silence warning
%select{and|because}0 '%1' evaluated to false
while checking the satisfaction of concept '%0' requested here
place parentheses around the assignment to silence this warning
use '==' to turn this assignment into an equality comparison
use '!=' to turn this compound assignment into an inequality comparison
conflicting attribute is here
conflicting %0 here
previous return statement is here
member not initialized by constructor
%select{data member %1|base class %2}0 declared here
virtual base class declared here
add the %select{'require_constant_initialization' attribute|'constinit' specifier}0 to the initializing declaration here
variable declared constinit here
while calculating associated constraint of template '%0' here
while substituting template arguments into constraint expression here
type conversion function declared here
use 'static' to give inline function %0 internal linkage
must be declared with 'noexcept'
call to %0 implicitly required by coroutine function here
call to 'await_transform' implicitly required by 'co_await' here
call to '%select{initial_suspend|final_suspend}0' implicitly required by the %select{initial suspend point|final suspend point}0
conflicting __device__ function declared here
const variable cannot be emitted on device side due to dynamic initialization
the %select{1st|2nd|3rd}1 template parameter of %0 needs to be %select{a type|an integer or enum value}2
%0 needs to have exactly %1 template parameters
%0 needs to be instantiated from a class template with proper template arguments
host variable declared here
candidate template ignored: target attributes do not match
remove 'u8' prefix to avoid a change of behavior; Clang encodes unprefixed narrow string literals as UTF-8
annotate %select{%1|anonymous %1}0 with an availability attribute to silence this warning
this declaration is not a prototype; add %select{'void'|parameter declarations}0 to make it %select{a prototype for a zero-parameter function|one}0
declare the parameter __strong or capture a __block __strong variable to keep values alive across autorelease pools
function is a coroutine due to use of '%0' here
declared %select{'returns_nonnull'|'nonnull'}0 here
required by %select{'require_constant_initialization' attribute|'constinit' specifier}0 here
during template argument deduction for %select{class|variable}0 template %select{partial specialization |}1%2 %3
deduction guide declared %0 by intervening access specifier
member template declared %0 here
in instantiation of default argument for '%0' required here
default argument declared here
in instantiation of default function argument expression for '%0' required here
default member initializer declared here
defaulted %0 is implicitly deleted because implied %select{|'==' |'<' }1comparison %select{|for member %3 |for base class %3 }2is ambiguous
defaulted %0 is implicitly deleted because it would invoke a deleted comparison function%select{| for member %2| for base class %2}1
return type of defaulted 'operator<=>' cannot be deduced because return type %2 of three-way comparison for %select{|member|base class}0 %1 is not a standard comparison category type
selected 'operator<=>' for %select{|member|base class}0 %1 declared here
%select{|member|base class}0 %1 declared here
defaulted %0 is implicitly deleted because it would invoke a %select{private|protected}3 %4%select{ member of %6| member of %6 to compare member %2| to compare base class %2}1
defaulted %0 is implicitly deleted because there is no viable %select{three-way comparison function|'operator=='}1 for %select{|member |base class }2%3
three-way comparison cannot be synthesized because there is no viable function for %select{'=='|'<'}0 comparison
non-constexpr comparison function would be used to compare %select{|member %1|base class %1}0
non-constexpr comparison function declared here
defaulted %0 is implicitly deleted because this non-rewritten comparison function would be the best match for the comparison
defaulted %0 is implicitly deleted because a builtin comparison function using this conversion would be the best match for the comparison
defaulted %0 is implicitly deleted because class %1 has a reference member
defaulted %0 is implicitly deleted because %2 is a %select{union-like class|union}1 with variant members
%0 defined here
conversion to pointer type %0
qualify call to silence this warning
%select{copy|move}0 assignment operator of %1 is implicitly deleted because field %2 is of %select{reference|const-qualified}4 type %3
copy constructor of %0 is implicitly deleted because field %1 is of rvalue reference type %2
copy %select{constructor|assignment operator}0 is implicitly deleted because %1 has a user-declared move %select{constructor|assignment operator}2
%select{default constructor of|constructor inherited by}0 %1 is implicitly deleted because all %select{data members|data members of an anonymous union member}2 are const-qualified
%select{default constructor of|constructor inherited by}0 %1 is implicitly deleted because field %2 of %select{reference|const-qualified}4 type %3 would not be initialized
virtual destructor requires an unambiguous, accessible 'operator delete'
%select{default constructor of|copy constructor of|move constructor of|copy assignment operator of|move assignment operator of|destructor of|constructor inherited by}0 %1 is implicitly deleted because %select{base class %3|%select{||||variant }4field %3}2 %select{has %select{no|a deleted|multiple|an inaccessible|a non-trivial}4 %select{%select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|%select{default|corresponding|default|default|default}4 constructor}0|destructor}5%select{||s||}4|is an ObjC pointer|has an address-discriminated ptrauth qualifier}6
function is implicitly deleted because its declared type does not match the type of an implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0
candidate ignored: %select{not a function template|not a member of the enclosing namespace; did you mean to explicitly qualify the specialization?}0
must qualify identifier to find this declaration in dependent base class
template parameter is used in default argument declared here
add an explicit capture of 'this' to capture '*this' by reference
first non-designated initializer is here
non-type declaration found by destructor name lookup
type %0 found by destructor name lookup
direct member declared here
direct method %0 declared here
due to %0 being dllexported%select{|; try compiling in C++11 mode}1
asm operand name "%0" first referenced here
element %0 also has value %1
put the semicolon on a separate line to silence this warning
remove parentheses to declare a variable
change this ',' to a ';' to call %0
replace parentheses with an initializer to declare a variable
using declaration annotated with 'using_if_exists' here
jump enters lifetime of block which captures a destructible C++ object
jump enters lifetime of block which captures a C struct that is non-trivial to destroy
jump enters lifetime of block which strongly captures a variable
jump enters lifetime of block which weakly captures a variable
jump enters lifetime of a compound literal that is non-trivial to destruct
%0 declared here
enum %0 was explicitly specialized here
remove extraneous parentheses around the comparison to silence this warning
use '=' to turn this equality comparison into an assignment
declared here%select{ in module '%1'|}0
place parentheses around comparison expression to evaluate it first
in evaluation of exception specification for %q0 needed here
jump exits scope of __block variable
jump exits lifetime of block which captures a destructible C++ object
jump exits lifetime of block which captures a C struct that is non-trivial to destroy
jump exits lifetime of block which strongly captures a variable
jump exits lifetime of block which weakly captures a variable
jump exits scope of variable with __attribute__((cleanup))
jump exits lifetime of a compound literal that is non-trivial to destruct
jump exits catch block
jump exits try block
jump exits scope of variable with non-trivial destructor
jump exits autoreleasepool block
jump exits @catch block
jump exits @finally block
jump exits scope of __strong variable
jump exits @synchronized block
jump exits @try block
jump exits scope of __weak variable
jump exits __except block
jump exits __finally block
jump exits __try block
jump exits scope of lifetime-extended temporary with non-trivial destructor
explicit %select{constructor|deduction guide}0 declared here
explicit instantiation candidate function %q0 template here %1
explicit instantiation definition is here
explicit instantiation refers here
explicit specialization declared here
while substituting explicitly-specified template arguments into function template %0 %1
'template<>' header not required for explicitly-specialized class %0 declared here
export block begins here
%select{and|because}0 type constraint '%1' was not satisfied:
%select{and|because}0 %1 does not satisfy %2:
%select{and|because}0 '%1' would be invalid: %2
%select{and|because}0 '%1' would be invalid
%select{and|because}0 '%1' may throw an exception
%select{and|because}0 '%1' would be invalid: %2
%select{and|because}0 '%1' would be invalid
extern "C" language linkage specification begins here
declared %select{in global scope|with C language linkage}0 here
did you forget ';'?
field designator refers here
add missing switch cases
mark %0 as '%select{final|sealed}1' to silence this warning
final overrider of %q0 in %1
add a count attribute within the declarator brackets or convert the parameter to a pointer with a count or size attribute
'%0' has been assigned here
casting %0 to %1 will not be allowed in the future; consider replacing '__unsafe_indexable' by a safe pointer
previously assigned here
remove '&' to get address as %0 instead of %1
variable '%0' is not part of out parameter to the function call while having dependency with variable '%1' which is passed as an out parameter; this may result in pointers with invalid dynamic count
initialized flexible array member %0 is here
selected '%select{begin|end}0' %select{function|template }1%2 with iterator type %3
in implicit call to 'operator%select{!=|*|++}0' for iterator of type %1
member is not a candidate because range type %0 has no '%select{end|begin}1' member
did you mean to use '%0'?
treat the string as an argument to avoid this
format string is defined here
forward declaration of class here
%0 is not defined, but forward declared here; conversion would be valid if it was derived from %1
forward declaration of template entity is here
found near match '%0'
from 'diagnose_if' attribute on %0:
add enclosing parentheses to perform a function-style cast
did you mean %0?
while substituting deduced template arguments into function template %0 %1
in instantiation of function template specialization %q0 requested here
function template %q0 matches specialization %1
suffix with parentheses to turn this into a function call
prefix with the address-of operator to silence this warning
or because setter is declared here, but no getter method %0 is found
add 'module;' to the start of the file to introduce a global module fragment
inline assembly label %0 declared here
guarded_by declared here
hidden overloaded virtual function %q0 declared here%select{|: different classes%diff{ ($ vs $)|}2,3|: different number of parameters (%2 vs %3)|: type mismatch at %ordinal2 parameter%diff{ ($ vs $)|}3,4|: different return type%diff{ ($ vs $)|}2,3|: different qualifiers (%2 vs %3)|: different exception specifications}1
type declaration hidden
declaration hides type
conversion to %select{integral|enumeration}0 type %1 declared here
field of illegal %select{type|pointer type}0 %1 declared here
class implementation is declared here
when implemented by class %0
while checking implicit 'delete this' for virtual destructor
implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 inferred target collision: call to both %select{__device__|__global__|__host__|__host__ __device__}1 and %select{__device__|__global__|__host__|__host__ __device__}2 members
%0 is an implicit parameter
explicitly defaulted function was implicitly deleted here
in implicit initialization of binding declaration %0
add 'constexpr'
while declaring the corresponding implicit 'operator==' for this defaulted 'operator<=>'
while declaring the implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 for %0
when looking up '%select{begin|end}0' function for range expression of type %1
in implicit initialization of %select{array element %1 with omitted initializer|field %1 with omitted initializer|trailing array elements in runtime-sized array new}0
in initialization of temporary of type %0 created to list-initialize this reference
include the header <%0> or explicitly provide a declaration for '%1'
conformance of forward class %0 to protocol %1 can not be confirmed
possible target of %select{indirect|asm}0 goto statement
consider using __builtin_trap() or qualifying pointer with 'volatile'
use '|=' to turn this inequality comparison into an or-assignment
insert an explicit cast to silence this issue
initializing field %0 with default member initializer
%select{field|base class}0 %1 will be initialized after %select{field|base}2 %3
insert 'break;' to avoid fall-through
insert '%0;' to silence this warning
add an explicit instantiation declaration to suppress this warning if %q0 is explicitly instantiated in another translation unit
(skipping %0 context%s0 in backtrace; use -ftemplate-backtrace-limit=0 to see all)
%select{implicit|explicit}0 instantiation first required here
it delegates to
instance variable is declared here
%select{implicitly |}2captured%select{| by reference}3%select{%select{ due to use|}2 here| via initialization of lambda capture %0}1
lambda expression begins here
default capture by %select{value|reference}0
explicitly capture 'this'
implicit capture of lambda object due to conversion to block pointer here
capture %0 by %select{value|reference}1
%select{%select{reference|'std::initializer_list'}0 member|member with %select{reference|'std::initializer_list'}0 subobject}1 declared here
local declaration nearly matches
type of %ordinal0 parameter of local declaration does not match definition%diff{ ($ vs $)|}1,2
%select{via initialization of|binding reference}0 variable %select{%2 |}1here
the other acquisition of %0 '%1' is here
%0 acquired here
use '%0' for a bitwise operation
remove constant to silence this warning
add parentheses after the '!' to evaluate the %select{comparison|bitwise operator}0 first
add parentheses around left hand side expression to silence this warning
%select{decremented|incremented}0 here
change return type to 'int'
remove '_Noreturn'
member is declared here
member %0 declared here
member declaration does not match because it %select{is|is not}0 const qualified
member declaration nearly matches
type of %ordinal0 parameter of member declaration does not match definition%diff{ ($ vs $)|}1,2
member %0 first declared here
'->' applied to return value of the operator->() declared here
in %select{implicit|defaulted}0 %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 for %2 first required here
explicitly cast the argument to size_t to silence this warning
did you mean to compare the result of %0 instead?
method %0 declared here
compiler has implicitly changed method %0 return type
method %0 is used for the forward class
%0 begins here
function multiversioning caused by this declaration
target function has calling convention %1 (expected %0)
%0 declared here
add 'void' to the parameter list to turn an old-style K&R function declaration into a prototype
target function %select{is a member of different class%diff{ (expected $ but has $)|}1,2|has different number of parameters (expected %1 but has %2)|has type mismatch at %ordinal3 parameter%diff{ (expected $ but has $)|}1,2|has different return type%diff{ ($ expected but has $)|}1,2}0
target %select{constructor|destructor}0 is declared here
namespace %0 defined here
consider using vld1_%0%1() to initialize a vector from memory, or vcreate_%0%1() to initialize from an integer constant
consider using vld1q_%0%1() to initialize a vector from memory, or vcombine_%0%1(vcreate_%0%1(), vcreate_%0%1()) to initialize from integer constants
while checking the satisfaction of nested requirement requested here
%select{and|because}0 '%1' would be invalid: %2
%select{and|because}0 '%1' would be invalid
next field declaration is here
next %select{instance variable declaration|synthesized instance variable}0 is here
type is not C-compatible due to this %select{base class|default member initializer|lambda expression|friend declaration|member declaration}0
non-deducible template parameter %0
not-yet-instantiated member is declared here
%0 is not literal because it has base class %1 of non-literal type
%0 is not literal because it has data member %1 of %select{non-literal|volatile}3 type %2
incomplete type %0 is not a literal type
lambda closure types are non-literal types before C++17
%0 is not literal because it is not an aggregate and has no constexpr constructors other than copy or move constructors
%0 is not literal because its destructor is not constexpr
%0 is not literal because it has a non-trivial destructor
%0 is not literal because it has a user-provided destructor
%select{struct|interface|class}0 with virtual base %plural{1:class|:classes}1 is not a literal type
non-template declaration found by name lookup
%select{%2 has subobjects that are|%3 has type %2 that is}0 non-trivial to %select{default-initialize|destruct|copy}1
non-usual %0 declared here
non-templated declaration is here
because it has a default argument
because field %0 has an initializer
field is non-trivial to %select{copy|default-initialize}0
because type %0 has a virtual %select{member function|base class}1
because no %select{<<ERROR>>|constructor|constructor|assignment operator|assignment operator|<<ERROR>>}2 can be used to %select{<<ERROR>>|copy|move|copy|move|<<ERROR>>}2 %select{base class|field|an object}0 of type %3
because %select{base class of |field of |}0type %1 has no default constructor
because type %0 has a member with %select{no|no|__strong|__weak|__autoreleasing}1 ownership
because its parameter is %diff{of type $, not $|of the wrong type}2,3
because the function selected to %select{construct|copy|move|copy|move|destroy}2 %select{base class|field}0 of type %1 is not trivial
because %select{base class of |field of |}0type %1 has a user-provided %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2
because it is a variadic function
destructor for %0 is not trivial because it is virtual
%0 should be declared prior to the call site%select{| or in %2| or in an associated namespace of one of its arguments}1
add 'export' here if this is intended to be a module interface unit
%0 is not a structural type because it has a mutable non-static data member
%0 is not a structural type because it has a %select{non-static data member|base class}1 that is not public
%0 is not a structural type because it has a non-static data member of rvalue reference type
%0 is not a structural type because it has a %select{non-static data member|base class}1 of non-structural type %2
previous equal key is here
insert '%select{_Nonnull|_Nullable|_Null_unspecified}0' if the %select{pointer|block pointer|member pointer|array parameter}1 %select{should never be null|may be null|should not declare nullability}0
%0 specified here
use nullability type specifier %0 to affect the innermost pointer type of %1
%0 declared here
method marked as designated initializer of the class here
use 'isEqual:' instead
%select{first|second|third}0 parameter has unexpected type %1 (should be %2)
method returns unexpected type %0 (should be an object type)
add a super class to fix this problem
type parameter %0 declared here
method %0 that returns %1 declared here
%select{expected assignment expression|expected compound statement|expected exactly two expression statements|expected in right hand side of the first expression}0
%select{expected an expression statement|expected built-in assignment operator|expected expression of scalar type|expected lvalue expression}0
%select{expected an expression statement|expected built-in binary or unary operator|expected unary decrement/increment operation|expected expression of scalar type|expected assignment expression|expected built-in binary operator|expected one of '+', '*', '-', '/', '&', '^', '%|', '<<', or '>>' built-in operations|expected in right hand side of expression}0
as specified in %select{'collapse'|'ordered'|'collapse' and 'ordered'}0 clause%select{||s}0
conversion to %select{integral|enumeration}0 type %1 declared here
%select{|previous }0'hint' clause with value '%1'
%select{|previous }0directive with no 'hint' clause specified
explicit data sharing attribute requested here
explicit data sharing attribute, data mapping attribute, or is_device_ptr clause requested here
'%0' directive found here
jump exits scope of OpenMP structured block
defined as %0
memory order clause '%0' is specified here
implicitly determined as %0
expected length on mapping of 'this' array section expression to be '1'
expected lower bound on mapping of 'this' array section expression to be '0' or not specified
expected 'this' subscript expression on map clause to be 'this[0]'
loop step is expected to be %select{negative|positive}0 due to this condition
marked as 'declare variant' here
marked as 'device_type(%0)' here
%select{statement|directive}0 outside teams construct here
nested teams construct here
'nowait' clause is here
'ordered' clause%select{| with specified parameter}0
predefined trait '%0' used here
%select{static data member is predetermined as shared|variable with static storage duration is predetermined as shared|loop iteration variable is predetermined as private|loop iteration variable is predetermined as linear|loop iteration variable is predetermined as lastprivate|constant variable is predetermined as shared|global variable is predetermined as shared|non-shared variable in a task construct is predetermined as firstprivate|variable with automatic storage duration is predetermined as private}0%select{|; perhaps you forget to enclose 'omp %2' directive into a parallel or another task region?}1
previous allocator is specified here
'%0' clause is specified here
previous 'critical' region starts here
previous '%0' directive used here
'reduction' clause with 'inscan' modifier is used here
'%0' clause used here
previous clause with directive name modifier specified here
previously marked as task_reduction with different reduction operation
jump bypasses OpenMP structured block
previously referenced here
'%0' previously encountered here
%0 clause previously used here
predetermined as a firstprivate in a task construct here
previously declared '%0' here
use -foperator-arrow-depth=N to increase 'operator->' limit
'operator->' declared here produces an object of type %0
(skipping %0 'operator->'%s0 in backtrace)
parameter of overridden method is annotated with __attribute__((noescape))
overridden method is here
overridden virtual function is here
ambiguous candidate function with reversed arguments
ambiguity is between a regular call to this operator and a call with the argument order reversed
candidate function with non-reversed arguments
built-in candidate %0
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %3}1%select{| has different class%diff{ (expected $ but has $)|}5,6| has different number of parameters (expected %5 but has %6)| has type mismatch at %ordinal5 parameter%diff{ (expected $ but has $)|}6,7| has different return type%diff{ ($ expected but has $)|}5,6| has different qualifiers (expected %5 but found %6)| has different exception specification}4
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: requires%select{ at least| at most|}3 %4 argument%s4, but %5 %plural{1:was|:were}5 provided
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %select{requires at least|allows at most single|requires single}3 argument %4, but %plural{0:no|:%5}5 arguments were provided
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: cannot %select{pass pointer to|bind reference in}5 %3 %select{as a pointer to|to object in}5 %4 in %ordinal6 argument
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: 'this' object is in %3, but method expects object in %4
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: cannot implicitly convert argument %diff{of type $ to $|type to parameter type}3,4 for %select{%ordinal6 argument|object argument}5 under ARC
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: cannot %select{convert from|convert from|bind}3 %select{base class pointer|superclass|base class object of type}3 %4 to %select{derived class pointer|subclass|derived class reference}3 %5 for %ordinal6 argument
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: no known conversion %diff{from $ to $|from argument type to parameter type}3,4 for %select{%ordinal6 argument|object argument}5%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}7
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: cannot convert argument of incomplete type %diff{$ to $|to parameter type}3,4 for %select{%ordinal6 argument|object argument}5%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}7
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %ordinal5 argument (%3) would lose %select{const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}4 qualifier%select{||s||s|s|s}4
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: 'this' argument has type %3, but method is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}4
candidate template ignored: failed template argument deduction
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %select{%ordinal7|'this'}6 argument (%3) has %select{no|__weak|__strong}4 ownership, but parameter has %select{no|__weak|__strong}5 ownership
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %select{cannot convert initializer list|too few initializers in list|too many initializers in list}7 argument to %4
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: no overload of %4 matching %3 for %ordinal5 argument
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %select{%ordinal7|'this'}6 argument (%3) has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}4 ownership, but parameter has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}5 ownership
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %ordinal8 argument (%3) has %select{no ptrauth|%5}4 qualifier, but parameter has %select{no ptrauth|%7}6 qualifier
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: call to %select{__device__|__global__|__host__|__host__ __device__|invalid}3 function from %select{__device__|__global__|__host__|__host__ __device__|invalid}4 function
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %ordinal5 argument (%3) would lose __unaligned qualifier
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: expects an %select{lvalue|rvalue}5 for %select{%ordinal4 argument|object argument}3
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: constraints not satisfied
candidate template ignored: deduced type %diff{$ of %select{|element of }4%ordinal0 parameter does not match adjusted type $ of %select{|element of }4argument|of %select{|element of }4%ordinal0 parameter does not match adjusted type of %select{|element of }4argument}1,2%3
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 has been %select{explicitly made unavailable|explicitly deleted|implicitly deleted}3
candidate template ignored: disabled by %0%1
candidate disabled: %0
candidate template ignored: requirement '%0' was not satisfied%1
explicit %select{constructor|conversion function|deduction guide}0 is not a candidate%select{| (explicit specifier evaluates to true)}1
candidate template ignored: invalid explicitly-specified argument for template parameter %0
candidate template ignored: invalid explicitly-specified argument for %ordinal0 template parameter
candidate address cannot be taken because parameter %0 has pass_object_size attribute
candidate %select{constructor|template}0 ignored: instantiation %select{takes|would take}0 its own class type by value
candidate constructor ignored: cannot be used to construct an object in address space %0
candidate template ignored: couldn't infer template argument %0
candidate template ignored: deduced too few arguments for expanded pack %0; no argument for %ordinal1 expanded parameter in deduced argument pack %2
candidate template ignored: deduced %select{conflicting types|conflicting values|conflicting templates|packs of different lengths}0 for parameter %1%diff{ ($ vs. $)|}2,3
candidate template ignored: deduced values %diff{of conflicting types for parameter %0 (%1 of type $ vs. %3 of type $)|%1 and %3 of conflicting types for parameter %0}2,4
constructor from base class %0 inherited here
candidate %select{constructor|template}0 ignored: inherited constructor cannot be used to %select{copy|move}1 object
candidate template ignored: substitution exceeded maximum template instantiation depth
candidate template ignored: could not match %diff{$ against $|types}0,1
candidate template ignored: could not match %q0 against %q1
candidate template ignored: substitution failure%0%1
candidate template ignored: cannot deduce a type for %0 that would make %2 equal %1
candidate template ignored: constraints not satisfied%0
conversion candidate of type %0
remaining %0 candidate%s0 omitted; pass -fshow-overloads=all to show them
declared with index %0 here
passing argument to parameter here
while substituting into concept arguments here; substitution failures not allowed in concept arguments
passing argument to parameter %0 here
parameter pack %0 declared here
parameter of type %0 is declared here
%0 has been marked as being introduced in %1 %2 here, but the deployment target is %1 %3
partial specialization matches %0
explicit specialization declared here
inline function performs a conversion which is forbidden in ARC
pointer %0 declared here
pointer '%0' declared here
possible target for call
when applied to this declaration
'#pragma clang attribute push' regions ends here
previous '#pragma pack' directive that modifies alignment is here
did you intend to use '#pragma pack (pop)' instead of '#pragma pack()'?
place parentheses around the %0 expression to evaluate it first
place parentheses around the '?:' expression to evaluate it first
place parentheses around the '%0' expression to silence this warning
previous module declaration is here
previously defined here
module loaded from '%0'
previous declaration of class template partial specialization %0 is here
previously declared '%1' here
previous attribute is here
%0 is a builtin with type %1
%0 declared here
for type %0
previous explicit instantiation is here
previous initialization for field %0 is here
previous initialization %select{|with side effects }0is here%select{| (side effects will not occur at run time)}0
previous inheritance model specified here
previously defined as an alias for %0
previous declaration of %0 is here
previous template specialization is here
previous uuid specified here
did you mean to call the %0 method?
while substituting prior template arguments into %select{non-type|template}0 template parameter%1 %2
use __attribute__((visibility("hidden"))) attribute instead
private module fragment begins here
property %0 is declared %select{deprecated|unavailable|partial}1 here
property declared here
property synthesized here
jump bypasses setup of __block variable
jump bypasses initialization of variable with __attribute__((cleanup))
jump enters controlled statement of consteval if
jump enters controlled statement of constexpr if
jump bypasses initialization of catch block
jump bypasses initialization of try block
jump enters controlled statement of if available
jump bypasses initialization of variable of non-trivial C struct type
jump bypasses auto release push of @autoreleasepool block
jump bypasses initialization of @catch block
jump enters Objective-C fast enumeration loop
jump bypasses initialization of @finally block
jump bypasses initialization of __strong variable
jump bypasses initialization of @synchronized block
jump bypasses initialization of @try block
jump bypasses initialization of __weak variable
jump bypasses initialization of __except block
jump bypasses initialization of __finally block
jump bypasses initialization of __try block
jump bypasses variable initialization
jump bypasses initialization of non-POD variable
jump bypasses variable with a non-trivial destructor
jump bypasses initialization of variable length array
jump bypasses initialization of VLA type alias
jump bypasses initialization of VLA typedef
protocol is declared here
protocol %0 has no definition
protocol method is here
it could also be property %select{of type %1|without attribute '%1'|with attribute '%1'|with getter %1|with setter %1}0 declared here
previous __ptrauth authentication %select{mode|option}0
%0 is incomplete
cannot take an address of a virtual member function if its return or argument types are incomplete
qualified call to %0::%1 is treated as a virtual call to %1 due to -fapple-kext
unimplemented pure virtual method %0 in %1
add a variable name to declare a %0 initialized with %1
receiver is instance of class declared here
receiver expression is here
receiver is treated with 'id' type for purpose of method lookup
default argument used here
'%0' included multiple times, additional include site here
'%0' included multiple times, additional include site in header from module '%1'
%select{reference|pointer}0 member declared here
%select{const|reference}0 member %1 will never be initialized
%0 returns a reference
class template declared here
use 'static_cast' to adjust the pointer correctly while %select{upcasting|downcasting}0
%select{overridden|current}0 method is explicitly declared 'instancetype'%select{| and is expected to return an instance of its class type}0
%select{overridden|current}0 method is part of the '%select{|alloc|copy|init|mutableCopy|new|autorelease|dealloc|finalize|release|retain|retainCount|self}1' method family%select{| and is expected to return an instance of its class type}0
%select{class|instance}0 method %1 is assumed to return an instance of its receiver type (%2)
overridden method returns an instance of its class type
remove the call to '%0' since unsigned values cannot be negative
remove call to max function and unsigned zero argument
remove std::move call here
remove parentheses to silence this warning
use function '%0' instead
while rewriting comparison as call to 'operator<=>' declared here
repeated RISC-V 'interrupt' attribute is here
%select{function|method|block}0 has been explicitly marked sentinel here
declared here
if you supply your own aligned allocation functions, use -faligned-allocation to silence this diagnostic
%select{and|because}0 %1 does not satisfy %2
attempt to specialize declaration here
explicitly specialized declaration is here
declare 'static' if the %select{variable|function}0 is not intended to be used outside of this translation unit
use array indexing to silence this warning
change size argument to be the size of the destination
change the argument to be the free space in the destination buffer minus the terminating null byte
did you mean %select{struct|interface|class}0 here?
because substituted constraint expression is ill-formed%0
add a deduction guide to suppress this warning
class with specified objc_requires_property_definitions attribute is declared here
surrounding namespace with visibility attribute ends here
surrounding namespace with visibility attribute starts here
parenthesize the second argument to silence
%select{parenthesize the third argument|cast the second argument to 'int'}0 to silence
conversion to %select{integral|enumeration}0 type %1
tail call required by %0 attribute here
non-type template argument refers to %select{function|object}0 here
non-type template argument refers here
template argument refers to function template %0, here
class template %0 was explicitly specialized here
in instantiation of template class %q0 requested here
class template %0 was instantiated here
template is declared here
%select{function template|class template|variable template|type alias template|template template parameter}0 %1 declared here
while checking a default template argument used here
in instantiation of enumeration %q0 requested here
in instantiation of exception specification for %0 requested here
declared as a non-template here
in instantiation of member class %q0 requested here
in instantiation of member function %q0 requested here
template non-type parameter has a different type %0 in template argument
previous non-type template parameter with type %0 is here
in instantiation of default member initializer %q0 requested here
template parameter has a different kind in template argument
template parameter is declared here
%select{too few|too many}0 template parameters in template template argument
previous default template argument defined here
previous %select{template type|non-type template|template template}0 parameter%select{| pack}1 declared here
%select{template type|non-type template|template template}0 parameter%select{| pack}1 does not match %select{template type|non-type template|template template}0 parameter%select{ pack|}1 in template argument
previous template %select{declaration|template parameter}0 is here
use -ftemplate-depth=N to increase recursive template instantiation depth
in instantiation of requirement here
in instantiation of static data member %q0 requested here
in instantiation of template type alias %0 requested here
unnamed type used in template argument was declared here
in instantiation of variable template specialization %q0 requested here
thread warning in function %0
%select{destructor|deallocator}0 has a %select{non-throwing|implicit non-throwing}1 exception specification
function declared non-throwing here
required alignment of type %0 (%1 bytes) is larger than the supported alignment of C++ exception objects on this target (%2 bytes)
%select{alignment|size}0 of first field is %1 bits
%0 is incomplete
%select{and|because}0 '%1' would be invalid: %2
%select{and|because}0 '%1' would be invalid
%select{function %1 which returns const-qualified type %2 declared here|variable %1 declared const here|%select{non-|}1static data member %2 declared const here|member function %q1 is declared const here|%select{|nested }1data member %2 declared const here}0
%select{first|second}0 operand was implicitly converted to type %1
did you mean to use '.' instead?
expected %select{a pointer|an integer|a pointer to pointer}0 type
type is given name %0 for linkage purposes by this %select{typedef|alias}1 declaration
referenced member %0 is declared here
referenced %0 is declared here
enclose %0 in %select{an @available|a __builtin_available}1 check to silence this warning
remove the %select{'%1' if its condition|condition if it}0 is always %select{false|true}2
during field initialization in %select{this|the implicit default}0 constructor
uninitialized reference member is here
%select{uninitialized use occurs|variable is captured by block}0 here
%0 released here
%select{declaration|definition|default argument declared|explicit specialization declared|partial specialization declared}0 here is not %select{visible|reachable|reachable|reachable|reachable|reachable}0
silence by adding parentheses to mark code as explicitly dead
unguarded header; consider using #ifdef guards or #pragma once
use non-reference type %0
use reference type %0 to prevent copying
use 'thread_local' to allow this
use non-reference type %0 to make construction explicit or type %1 to prevent copying
used here
used in initialization here
implicit default constructor suppressed by user-declared constructor
%select{|previous }0using declaration
use %select{an alias declaration|a typedef declaration|a reference|a const variable|a constexpr variable}0 instead
conflicting declaration
target of using declaration
%select{|previous }0using-enum declaration
add 'typename' to treat this using declaration as a type
in value-initialization of type %0 here
variable %0 is declared here
variable %0 is%select{| explicitly}1 captured here
initialize the variable %0 to silence this warning
previous declaration of variable template partial specialization is here
%select{%1 is a virtual base class of base class %2 declared here|virtual base class %1 declared here}0
variable length arrays are not supported for the current target
which delegates to
detected while default synthesizing properties in class implementation
widen this field to %0 bits to store all values of %1
within field of type %0 declared here
replace expression with '%0' %select{|or use 'xor' instead of '^' }1to silence this warning
non-virtual member function marked '%0' hides virtual member %select{function|functions}1
only virtual member functions can be marked '%0'
absolute value function %0 given an argument of type %1 but has parameter of type %2 which may cause truncation of value
abstract class is marked '%select{final|sealed}0'
initializer for virtual base class %0 of abstract class %1 will never be used
access declarations are deprecated; use using declarations instead
type of property %0 does not match type of accessor %1
acquiring %0 '%1' requires negative capability '%2'
%0 '%1' must be acquired before '%2'
Cycle in acquired_before/after dependencies, starting with '%0'
operator '%0' has lower precedence than '%1'; '%1' will be evaluated first
reference cannot be bound to dereferenced null pointer in well-defined C++ code; pointer may be assumed to always convert to true
reference cannot be bound to dereferenced null pointer in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0
requested alignment is less than minimum alignment of %1 for type %0
%select{aligning a value|the result of checking whether a value is aligned}0 to 1 byte is %select{a no-op|always true}0
requested alignment is not a power of 2
use of function %0 is discouraged; there is no way to check for failure but failure may still occur, resulting in a possibly exploitable security vulnerability
second argument to __builtin_alloca_with_align is supposed to be in bits
multiple suitable %0 functions for %1; no 'operator delete' function will be invoked if initialization throws an exception
interrupt service routine should only call a function with attribute 'no_caller_saved_registers'
ARC %select{unused|__unsafe_unretained|__strong|__weak|__autoreleasing}0 lifetime qualifier on return type is ignored
assigning %select{array literal|dictionary literal|numeric literal|boxed expression|<should not happen>|block literal}0 to a weak %select{property|variable}1; object will be released after assignment
%select{destination for|source of}0 this %1 call is a pointer to ownership-qualified type %2
performSelector may cause a leak because its selector is unknown
weak %select{variable|property|implicit property|instance variable}0 %1 may be accessed multiple times in this %select{function|method|block|lambda}2 and may be unpredictably set to nil; assign to a strong variable to keep the object alive
weak %select{variable|property|implicit property|instance variable}0 %1 is accessed multiple times in this %select{function|method|block|lambda}2 but may be unpredictably set to nil; assign to a strong variable to keep the object alive
capturing %0 strongly in this block is likely to lead to a retain cycle
assigning retained object to %select{weak|unsafe_unretained}0 %select{property|variable}1; object will be released after assignment
assigning retained object to unsafe property; object will be released after assignment
method parameter of type %0 with no explicit ownership
argument value %0 is outside the valid range [%1, %2]
argument value %0 will result in undefined behaviour
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 %select{floating-point|enumeration}1 type %2 %plural{2:with|4:from|:and}0 %select{enumeration|floating-point}1 type %3
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 %select{floating-point|enumeration}1 type %2 %plural{2:with|4:from|:and}0 %select{enumeration|floating-point}1 type %3 is deprecated
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated
call to function without interrupt attribute could clobber interruptee's VFP registers
array index %0 is past the end of the array (which contains %1 element%s2)
array index %0 refers past the last possible element for an array in %1-bit address space containing %2-bit (%3-byte) elements (max possible %4 element%s5)
array index %0 is before the beginning of the array
ignored asm label '%0' on automatic variable
value size does not match register size specified by the constraint and modifier
requested alignment must be %0 bytes or smaller; maximum alignment assumed
unknown assumption string '%0'; attribute is potentially ignored
unknown assumption string '%0' may be misspelled; attribute is potentially ignored, did you mean '%1'?
the argument to %0 has side effects that will be discarded
%select{@available|__builtin_available}0 does not guard availability here; use if (%select{@available|__builtin_available}0) instead
specifying 'uuid' as an ATL attribute is deprecated; use __declspec instead
implicit use of sequentially-consistent atomic may incur stronger memory barriers than necessary
memory order argument to atomic operation is invalid
writable atomic property %0 cannot pair a synthesized %select{getter|setter}1 with a user defined %select{getter|setter}2
@protocol is using a forward protocol declaration of %0
'abi_tag' attribute on %select{non-inline|anonymous}0 namespace ignored
consumed analysis attribute is attached to member of class %0 which isn't marked as consumable
%0 attribute cannot be applied to this declaration
%0 attribute cannot be applied to a %select{function|method}1 with no parameters
%0 attribute argument must be a string literal specifying a Swift function name
%0 attribute for getter must not have any parameters besides 'self:'
%0 attribute has invalid identifier for the %select{base|context|parameter}1 name
%0 attribute is missing parameter label clause
%0 attribute cannot specify more than one 'self:' parameter
too %select{few|many}0 parameters in the signature specified by the %1 attribute (expected %2; got %3)
%0 attribute for setter must have one parameter for new value
%0 attribute for 'subscript' getter cannot have a 'newValue:' parameter
%0 attribute for 'subscript' must %select{be a getter or setter|have at least one parameter|have a 'self:' parameter}1
%0 attribute for 'subscript' setter cannot have multiple 'newValue:' parameters
%0 attribute for 'subscript' setter must have a 'newValue:' parameter
multiple identical address spaces specified for type
attribute %0 after definition is ignored
%0 attribute parameter %1 is negative and will be ignored
'cmse_nonsecure_entry' cannot be applied to functions with internal linkage
propagating dll attribute to %select{already instantiated|explicitly specialized}0 base class template without dll attribute is not supported
redeclaration of %q0 should not add %q1 attribute
explicit instantiation declaration should not be 'dllexport'
'dllexport' attribute ignored on explicit instantiation definition
definition of dllimport static field
attribute %0 has no effect when annotating an 'if %select{constexpr|consteval}1' statement
attribute %0 has no effect when annotating an infinite loop
%0 attribute can only be applied to instance variables or properties
%0 attribute ignored
%0 attribute ignored for field of type %1
%0 attribute ignored on inline function
%0 attribute ignored on a non-definition declaration
'%0' attribute cannot be specified on a definition
'%0' is not a valid builtin name for %1
'noescape' attribute ignored on parameter of non-pointer type %0
'nonnull' attribute applied to function with no pointer arguments
'nonnull' attribute when used on parameters takes no arguments
%0 attribute ignored when parsing type
'packed' attribute was ignored on bit-fields with single-byte alignment in older versions of GCC and Clang
%0 attribute only applies to a pointer or reference (%1 is invalid)
%0 attribute only applies to%select{| constant}1 pointer arguments
attribute declaration must precede definition
target does not support 'protected' visibility; using 'default'
%0 attribute only applies to return values that are pointers
%0 attribute only applies to return values that are pointers or references
#pragma %0(".drectve") has undefined behavior, use #pragma comment(linker, ...) instead
section attribute is specified on redeclared variable
'sentinel' attribute requires named arguments
'sentinel' attribute only supported for variadic %select{functions|blocks}0
%0 attribute argument not supported: %1
unknown visibility %0
attribute %0 cannot be applied to %select{functions|Objective-C method}1 without return value
__weak attribute cannot be specified on a field declaration
__weak attribute cannot be specified on an automatic variable when ARC is not enabled
%0 attribute only applies to %select{functions|unions|variables and functions|functions and methods|functions, methods and blocks|functions, methods, and parameters|variables|variables and fields|variables, data members and tag types|types and namespaces|variables, functions and classes|kernel functions|non-K&R-style functions}1
%0 attribute only applies to %1
conflicting attributes %0 are ignored
property is assumed atomic when auto-synthesizing the property
readonly IBOutlet property %0 when auto-synthesized may not work correctly with 'nib' loader
'auto' storage class specifier is redundant and incompatible with C++11
auto property synthesis will not synthesize property %0 declared in protocol %1
'auto' deduced as 'id' in declaration of %0
auto property synthesis will not synthesize property %0; it will be implemented by its superclass, use @dynamic to acknowledge intention
autosynthesized property %0 will use %select{|synthesized}1 instance variable %2, not existing instance variable %3
Fuchsia API Level prohibits specifying a minor or sub-minor version
ignoring availability attribute %select{on '+load' method|with constructor attribute|with destructor attribute}0
only 'unavailable' and 'deprecated' are supported for Swift availability
unknown platform %0 in availability macro
feature cannot be %select{introduced|deprecated|obsoleted}0 in %1 version %2 before it was %select{introduced|deprecated|obsoleted}3 in version %4; attribute ignored
%select{reinterpret_cast|C-style cast}0 from %1 to %2 changes address space of nested pointers
cast from function call of type %0 to non-matching type %1
receiver type %0 is not 'id' or interface pointer, consider casting it to 'id'
base class %0 is uninitialized when used here to access %q1
binding reference member %0 to stack allocated %select{variable|parameter}2 %1
binding dereferenced null pointer to reference has undefined behavior
bit-field %0 is not wide enough to store all enumerators of %1
width of bit-field %0 (%1 bits) exceeds the width of its type; value will be truncated to %2 bit%s2
use of bitwise '%0' with boolean operands
bitwise negation of a boolean expression%select{;| always evaluates to 'true';}0 did you mean logical negation?
'%0' within '%1'
block captures an autoreleasing out-parameter, which may result in use-after-free bugs
attribute %0 ignored, because it cannot be applied to omitted return type
'%0' qualifier on omitted return type %1 has no effect
switch condition has boolean value
braces around %select{scalar |}0initializer
'break' is bound to loop, GCC binds it to switch
'%0' will always overflow; destination buffer has size %1, but size argument is %2
use of unknown builtin %0
call to pure virtual member function %0 has undefined behavior; overrides of %0 in subclasses are not available in the %select{constructor|destructor}1 of %2
too %select{few|many}0 arguments in call to %1
%0 parameter marked 'called_once' is called twice
%select{|captured }1%0 parameter marked 'called_once' is never called
%0 parameter marked 'called_once' is never %select{used|called}1 when %select{taking true branch|taking false branch|handling this case|none of the cases applies|entering the loop|skipping the loop|taking one of the branches}2
cannot pass object of %select{non-POD|non-trivial}0 type %1 through variadic %select{function|block|method|constructor}2; call will abort at runtime
cannot resolve lock expression
empty case range specified
overflow converting case value to switch condition type (%0 to %1)
cast from %0 to %1 increases required alignment from %2 to %3
cast between incompatible calling conventions '%0' and '%1'; calls through this pointer may abort at runtime
cast %diff{from $ to $ |}0,1converts to incompatible function type
nonnull %select{function call|parameter}0 '%1' will evaluate to 'true' on first encounter
cast of type %0 to %1 is deprecated; use sel_getName instead
cast from %0 to %1 drops %select{const and volatile qualifiers|const qualifier|volatile qualifier}2
cast from %0 to %1 must have all intermediate pointers const qualified to be safe
category is implementing a method which will also be implemented by its primary class
function with no prototype cannot use the %0 calling convention
%0 calling convention is not supported %select{for this target|on variadic function|on constructor/destructor|on builtin function}1
cannot refer to a non-static member from the handler of a %select{constructor|destructor}0 function try block
input conversion stopped due to an input byte that does not belong to the input codeset UTF-8
%select{class|category}0 %1 does not conform to protocol%plural{1: %3|2:s %3 and %4|3:s %3, %4 and %5|:s %3, %4, %5, ...}2
class method %objcclass0 not found (return type defaults to 'id')
class method %objcclass0 not found (return type defaults to 'id'); did you mean %objcclass2?
GCC does not allow the 'cleanup' attribute argument to be anything other than a simple identifier
passing union across security boundary via %select{parameter %1|return value}0 may leak information
property follows Cocoa naming convention for returning 'owned' objects
collection expression type %0 may not respond to %1
possible misuse of comma operator here
%select{self-|array }0comparison always evaluates to %select{a constant|true|false|'std::strong_ordering::equal'}1
bitwise comparison always evaluates to %select{false|true}0
bitwise or with non-zero value always evaluates to true
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated
comparison of different enumeration types in switch statement%diff{ ($ and $)|}0,1
completion handler is called twice
%select{|captured }1completion handler is never called
completion handler is never %select{used|called}1 when %select{taking true branch|taking false branch|handling this case|none of the cases applies|entering the loop|skipping the loop|taking one of the branches}2
suspicious concatenation of string literals in an array initialization; did you mean to separate the elements with a comma?
concatenated NSString literal for an NSArray expression - possibly missing a comma
using the result of an assignment as a condition without parentheses
using the result of an assignment as a condition without parentheses
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated
conflicting distributed object modifiers on parameter type in declaration of %0
conflicting parameter types in declaration of %0%diff{: $ vs $|}1,2
conflicting distributed object modifiers on return type in declaration of %0
conflicting return type in declaration of %0%diff{: $ vs $|}1,2
conflicting variadic declaration of method and its implementation
conflicting distributed object modifiers on parameter type in implementation of %0
conflicting parameter types in implementation of %0%diff{: $ vs $|}1,2
conflicting distributed object modifiers on return type in implementation of %0
conflicting return type in implementation of %0%diff{: $ vs $|}1,2
conflicting variadic declaration of method and its implementation
consteval if is always true in an %select{unevaluated|immediate}0 context
conversion function converting %0 to its base class %1 will never be used
conversion function converting %0 to itself will never be used
conversion function converting %0 to %1 will never be used
return type of 'coroutine_handle<>::address should be 'void*' (have %0) in order to get capability with existing async C API.
%0 is required to declare the member 'unhandled_exception()' when exceptions are enabled
%select{destination for|source of|first operand of|second operand of}0 this %1 call is a pointer to record %2 that is not trivial to %select{primitive-default-initialize|primitive-copy}3
%0 may not intend to support class template argument deduction
constructor parameter %0 shadows the field %1 of %2
use of this statement in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
multiple return statements in constexpr function is incompatible with C++ standards before C++14
constexpr function with no return statements is incompatible with C++ standards before C++14
variable declaration in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
type definition in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
return type deduction is incompatible with C++ standards before C++14
generic lambdas are incompatible with C++11
initialized lambda captures are incompatible with C++ standards before C++14
variable templates are incompatible with C++ standards before C++14
attribute %0 ignored, because it cannot be applied to a type
class template argument deduction is incompatible with C++ standards before C++17%select{|; for compatibility, use explicit type name %1}0
'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior
decomposition declarations are incompatible with C++ standards before C++17
inline variables are incompatible with C++ standards before C++17
by value capture of '*this' is incompatible with C++ standards before C++17
non-type template parameters declared with %0 are incompatible with C++ standards before C++17
use of function template name with no prior function template declaration in function call with explicit template arguments is incompatible with C++ standards before C++20
use of this statement in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++20
constexpr constructor that does not initialize all members is incompatible with C++ standards before C++20
function try block in constexpr %select{function|constructor}0 is incompatible with C++ standards before C++20
uninitialized variable in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++20
constexpr union constructor that does not initialize any member is incompatible with C++ standards before C++20
virtual constexpr functions are incompatible with C++ standards before C++20
decomposition declaration declared %plural{1:'%1'|:with '%1' specifiers}0 is incompatible with C++ standards before C++20
defaulted comparison operators are incompatible with C++ standards before C++20
explicitly defaulting this %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 with a type different from the implicit type is incompatible with C++ standards before C++20
designated initializers are incompatible with C++ standards before C++20
explicit capture of 'this' with a capture default of '=' is incompatible with C++ standards before C++20
mangled name of %0 will change in C++17 due to non-throwing exception specification in function signature
initialized lambda capture packs are incompatible with C++ standards before C++20
%select{default construction|assignment}0 of lambda is incompatible with C++ standards before C++20
invoking a pointer to a 'const &' member function on an rvalue is incompatible with C++ standards before C++20
non-type template parameter of type %0 is incompatible with C++ standards before C++20
'char8_t' type specifier is incompatible with C++ standards before C++20
member using declaration naming a non-member enumerator is incompatible with C++ standards before C++20
member using declaration naming non-class '%0' enumerator is incompatible with C++ standards before C++20
using declaration naming a scoped enumerator is incompatible with C++ standards before C++20
aggregate initialization of type %0 with user-declared constructors is incompatible with C++20
'constinit' specifier is incompatible with C++ standards before C++20
type of UTF-8 string literal will change from array of const char to array of const char8_t in C++20
implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is incompatible with C++98
'auto' type specifier is incompatible with C++98
cast between pointer-to-function and pointer-to-object is incompatible with C++98
'constexpr' specifier is incompatible with C++98
constructor call from initializer list is incompatible with C++98
delegating constructors are incompatible with C++98
scalar initialized from empty initializer list is incompatible with C++98
initializing %0 from an empty initializer list is incompatible with C++98
befriending enumeration type %0 is incompatible with C++98
enumeration type in nested name specifier is incompatible with C++98
explicit conversion functions are incompatible with C++98
friend declaration naming a member of the declaring class is incompatible with C++98
jump from this goto statement to its label is incompatible with C++98
jump from this %select{indirect|asm}0 goto statement to one of its possible targets is incompatible with C++98
initialization of initializer_list object is incompatible with C++98
use of non-static data member %0 in an unevaluated context is incompatible with C++98
non-class friend type %0 is incompatible with C++98
%select{anonymous struct|union}0 member %1 with a non-trivial %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2 is incompatible with C++98
passing object of trivial but non-POD type %0 through variadic %select{function|block|method|constructor}1 is incompatible with C++98
reference initialized from initializer list is incompatible with C++98
substitution failure due to access control is incompatible with C++98
static data member %0 in union is incompatible with C++98
jump from switch statement to this case label is incompatible with C++98
%select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}1 of type %2 when binding a reference to a temporary would %select{invoke an inaccessible constructor|find no viable constructor|find ambiguous constructors|invoke a deleted constructor}0 in C++98
redundant parentheses surrounding address non-type template argument are incompatible with C++98
local type %0 as template argument is incompatible with C++98
use of null pointer as non-type template argument is incompatible with C++98
non-type template argument referring to %select{function|object}0 %1 with internal linkage is incompatible with C++98
unnamed type as template argument is incompatible with C++98
use of 'template' keyword outside of a template is incompatible with C++98
default template arguments for a function template are incompatible with C++98
use of 'typename' outside of a template is incompatible with C++98
befriending %1 without '%select{struct|interface|union|class|enum}0' keyword is incompatible with C++98
'%0' type specifier is incompatible with C++98
inheriting constructors are incompatible with C++98
ms_struct may not produce Microsoft-compatible layouts for classes with base classes or virtual functions
object backing the pointer will be destroyed at the end of the full-expression
initializing pointer member %0 to point to a temporary object whose lifetime is shorter than the lifetime of the constructed object
%select{reference|backing array for 'std::initializer_list'}2 %select{|subobject of }1member %0 %select{binds to|is}2 a temporary object whose lifetime is shorter than the lifetime of the constructed object
%select{temporary %select{whose address is used as value of|%select{|implicitly }2bound to}4 %select{%select{|reference }4member of local variable|local %select{variable|reference}4}1|array backing %select{initializer list subobject of local variable|local initializer list}1}0 %select{%3 |}2will be destroyed at the end of the full-expression
-dealloc is being overridden in a category
declaration of %0 will not be visible outside of this function
declaration shadows a %select{local variable|variable in %2|static data member of %2|field of %2|typedef in %2|type alias in %2|structured binding}1
declaration shadows a %select{local variable|variable in %2|static data member of %2|field of %2|typedef in %2|type alias in %2|structured binding}1
ignoring __declspec(allocator) because the function return type %0 is not a pointer or reference type
attribute %0 is ignored, place it after "%select{class|struct|interface|union|enum}1" to apply attribute to type declaration
exception specifications of %select{return|argument}0 types differ
%plural{1:enumeration value %1 not explicitly handled in switch|2:enumeration values %1 and %2 not explicitly handled in switch|3:enumeration values %1, %2, and %3 not explicitly handled in switch|:%0 enumeration values not explicitly handled in switch: %1, %2, %3...}0
atomic by default property %0 has a user defined %select{getter|setter}1 (property should be marked 'atomic' if this is intended)
explicitly defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator is implicitly deleted
explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 is implicitly deleted
constructor for %0 creates a delegation cycle
%select{delete|destructor}0 called on %1 that is abstract but has non-virtual destructor
'delete' applied to a pointer-to-array type %0 treated as 'delete[]'
deleting pointer to incomplete type %0 may cause undefined behavior
%select{delete|destructor}0 called on non-final %1 that has virtual functions but non-virtual destructor
comparison between two arrays is deprecated; to compare array addresses, use unary '+' to decay operands to pointers
%0 is deprecated
Current handling of vector bool and vector pixel types in this context are deprecated. The default behaviour will soon change to that implied by the '-altivec-compat=xl' option
'deprecated' attribute on anonymous namespace ignored
top-level comma expression in array subscript is deprecated
compound assignment to object of volatile-qualified type %0 is deprecated
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-declared copy %select{assignment operator|constructor}1
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-declared destructor
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-provided copy %select{assignment operator|constructor}1
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-provided destructor
implementing deprecated %select{method|class|category}0
%0 may be deprecated because the receiver type is unknown
%0 currently has no effect on a using declaration
%select{decrement|increment}0 of object of volatile-qualified type %1 is deprecated
%0 is deprecated: %1
out-of-line definition of constexpr static data member is redundant in C++17 and is deprecated
'register' storage class specifier is deprecated and incompatible with C++17
use of result of assignment to object of volatile-qualified type %0 is deprecated
conversion from string literal to %0 is deprecated
implicit capture of 'this' with a capture default of '=' is deprecated
volatile-qualified parameter type %0 is deprecated
volatile-qualified return type %0 is deprecated
volatile qualifier in structured binding declaration is deprecated
dereferencing %0; was declared with a 'noderef' type
dereferencing expression marked as 'noderef'
explicit call to +initialize results in duplicate call to +initialize
instance variable %0 is being directly accessed
explicit call to [super initialize] should only be in implementation of +initialize
body of cpu_dispatch function will be ignored
expression does not compute the number of elements in this array; element type is %0, not %1
'%0' will return the size of the pointer, not the array itself
%q0 redeclared inline; %1 attribute ignored
double precision constant requires %select{cl_khr_fp64|cl_khr_fp64 and __opencl_c_fp64}0, casting to single precision
acquiring %0 '%1' that is already held
attribute %0 is already applied with different arguments
attribute %0 is already applied
duplicate code segment specifiers
element %0 has been implicitly assigned %1 which another element has been assigned
multiple declarations of method %0 found and ignored
duplicate protocol definition of %0 is ignored
%select{destination for|source of|first operand of|second operand of}0 this %1 call is a pointer to %select{|class containing a }2dynamic class %3; vtable pointer will be %select{overwritten|copied|moved|compared}4
for loop has empty body
format string is empty
if statement has empty body
empty parentheses interpreted as a function declaration
range-based for loop has empty body
switch statement has empty body
while loop has empty body
converting the enum constant to a boolean
overflow in enumeration value
equality comparison with extraneous parentheses
exception of type %0 will be caught by earlier handler
declaration requires an exit-time destructor
expecting %0 '%1' to be held at start of each loop
expecting %0 '%1' to be held at the end of function
explicit instantiation of %0 that occurs after an explicit specialization has no effect
explicit instantiation cannot be 'inline'
explicit instantiation of %0 must occur at global scope
explicit instantiation of %0 not in a namespace enclosing %1
explicit instantiation of %q0 must occur in namespace %1
'extern' variable has an initializer
non-void coroutine does not return a value
non-void function does not return a value
non-void lambda does not return a value
function declared 'noreturn' should not return
field %0 is uninitialized when used here
class with destructor marked '%select{final|sealed}0' cannot be inherited from
array with '%select{__counted_by|__sized_by}0' and the argument of the attribute should be defined in the same translation unit
%select{|implicitly }0initializing field %1 of type %2 to NULL while '%3' is initialized with a value rarely succeeds
accessing elements of an unannotated incomplete array always fails at runtime
initializer %0 has a side effect; this may result in an unexpected result because the evaluation order of initialization list expressions is indeterminate
conversion from pointer type %0 to a %select{counted|sized}1 pointer type with an unrelated length rarely succeeds
enumeration value %0 is out of range of flags in enumeration type %1
magnitude of floating-point constant too large for type %0; maximum is %1
magnitude of floating-point constant too small for type %0; minimum is %1
comparing floating point with == or != is unsafe
'begin' and 'end' returning different types (%0 and %1) is incompatible with C++ standards before C++17
loop variable %0 %diff{of type $ binds to a temporary constructed from type $|binds to a temporary constructed from a different type}1,2
loop variable %0 creates a copy from type %1
loop variable %0 binds to a temporary value produced by a range of type %1
using '%%P' format specifier without precision
%select{values of type|enum values with underlying type}2 '%0' should not be used as format arguments; add an explicit cast to %1 instead
%select{values of type|enum values with underlying type}2 '%0' should not be used as format arguments; add an explicit cast to %1 instead
using '%0' format specifier, but argument has boolean value
format specifies type %0 but the argument has %select{type|underlying type}2 %1
format specifies type %0 but the argument has %select{type|underlying type}2 %1
format specifies type %0 but the argument has %select{type|underlying type}2 %1
using '%0' format specifier annotation outside of os_log()/os_trace()
invalid conversion specifier '%0'
invalid position specified for %select{field width|field precision}0
cannot mix positional and non-positional arguments in format string
'%0' %select{length modifier|conversion specifier}1 is not supported by ISO C
using length modifier '%0' with conversion specifier '%1' is not supported by ISO C
positional arguments are not supported by ISO C
format string is not a string literal
format string is not a string literal (potentially insecure)
length modifier '%0' results in undefined behavior or no effect with '%1' conversion specifier
format string should not be a wide string
position arguments in format strings start counting at 1 (not 0)
'%0' will always overflow; destination buffer has size %1, but format string expands to at least %2
'%0' will always overflow; destination buffer has size %1, but size argument is %2
'%0' size argument is too large; destination buffer has size %1, but size argument is %2
'%0' will always overflow; destination buffer has size %1, but the source string has length %2 (including NUL byte)
redefinition of forward class %0 of a typedef name of an object type is ignored
calling '%0' with a nonzero argument is unsafe
attempt to call %0 on non-heap %select{object %2|object: block expression|object: lambda-to-function-pointer conversion}1
cannot call function '%1' while %0 '%2' is held
calling function %1 requires holding %0 %select{'%2'|'%2' exclusively}3
calling function %1 requires holding %0 %select{'%2'|'%2' exclusively}3
calling function %0 requires negative capability '%1'
instantiation of function %q0 required here, but no definition is available
function definition inside an Objective-C container is deprecated
Objective-C GC does not allow weak variables on the stack
GCC does not allow the %0 attribute to be written on a type
declaration requires a global constructor
declaration requires a global destructor
'gnu_inline' attribute requires function to be marked 'inline', attribute ignored
'gnu_inline' attribute without 'extern' in C++ treated as externally available, this changed in Clang 10
arithmetic on a null pointer treated as a cast from integer to pointer is a GNU extension
passing variable %1 by reference requires holding %0 %select{'%2'|'%2' exclusively}3
%select{instance variable|property}2 with %0 attribute must be an object type (invalid %1)
IBOutletCollection properties should be copy/strong and not assign
assigning %select{field|instance variable}0 to itself
inheritance model ignored on %select{primary template|partial specialization}0
'objc_externally_retained' can only be applied to local variables %select{of retainable type|with strong ownership}0
implicit truncation from %2 to bit-field changes value from %0 to %1
initialization of pointer of type %0 to null from a constant boolean expression
implicit conversion discards imaginary component: %0 to %1
implicit conversion from constant value %0 to 'BOOL'; the only well defined values for 'BOOL' are YES and NO
implicit conversion from enumeration type %0 to different enumeration type %1
implicit conversion increases floating-point precision: %0 to %1
implicit conversion from %0 cannot fit within the range of values for %1
implicit conversion turns floating-point number into integer: %0 to %1
implicit conversion loses floating-point precision: %0 to %1
implicit conversion when assigning computation result loses floating-point precision: %0 to %1
implicit conversion from %0 to %1 changes value from %2 to %3
implicit conversion of out of range value from %0 to %1 is undefined
implicit conversion from %0 to %1 changes non-zero value from %2 to %3
implicit conversion from floating-point type %0 to 'BOOL'
implicit conversion turns floating-point number into bool: %0 to %1
higher order bits are zeroes after implicit conversion
implicit conversion from integral type %0 to 'BOOL'
implicit conversion loses integer precision: %0 to %1
implicit conversion from %0 to %1 may lose precision
implicit conversion from %2 to %3 changes value from %0 to %1
implicit conversion loses integer precision: %0 to %1
implicit conversion from %2 to %3 changes value from %0 to %1
implicit conversion changes signedness: %0 to %1
operand of ? changes signedness: %0 to %1
implicit conversion from %0 to %1 changes value from %2 to %3
implicit conversion of out of range value from %0 to %1 is undefined
the resulting value is always non-negative after implicit conversion
implicit conversion of %select{NULL|nullptr}0 constant to %1
implicit boolean conversion of Objective-C object literal always evaluates to true
address of%select{| function| array}0 '%1' will always evaluate to 'true'
implicit conversion turns string literal into bool: %0 to %1
implicit conversion turns vector to scalar: %0 to %1
class property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this class implementation
class property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category
default assign attribute on property %0 which implements NSCopying protocol is not appropriate with -fobjc-gc[-only]
property is assumed atomic by default
declaration of built-in function '%0' requires the declaration of the 'jmp_buf' type, commonly provided in the header <setjmp.h>.
declaration of built-in function '%1' requires inclusion of the header <%0>
implicit declaration of function %0
block implicitly retains 'self'; explicitly mention 'self' to indicate this is intended behavior
import %select{module|name}0 cannot be applied to a function with a definition
direct base %0 is inaccessible due to ambiguity:%1
target exception specification is not superset of source
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2
incompatible vector types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
encoding of %0 type is incomplete because %1 component has unknown encoding
%0 overrides a destructor but is not marked 'override'
%0 overrides a member function but is not marked 'override'
incrementing expression of type bool is deprecated and incompatible with C++17
'objc_independent_class' attribute may be put on a typedef only; attribute is ignored
indirection of non-volatile null pointer will be deleted, not trap
all paths through this function will call itself
constant expression evaluates to %0 which cannot be narrowed to type %1 in C++11
type %0 cannot be narrowed to %1 in initializer list in C++11
non-constant-expression cannot be narrowed from type %0 to %1 in initializer list in C++11
initializing pointer member %0 with the stack address of %select{variable|parameter}2 %1
%select{field|base class}0 %1 will be initialized after %select{field|base}2 %3
initializer %select{partially |}0overrides prior initialization of this subobject
inline namespace reopened as a non-inline namespace
instance method %objcinstance0 not found (return type defaults to 'id')
instance method %objcinstance0 not found (return type defaults to 'id'); did you mean %objcinstance2?
instance method %0 found instead of class method %1
cast to %1 from smaller integer type %0
cast to %1 from smaller integer type %0
converting the result of '?:' with integer constants to a boolean always evaluates to 'true'
'internal_linkage' attribute on a non-static local variable is ignored
%select{MIPS|MSP430|RISC-V}0 'interrupt' attribute only applies to functions that have %select{no parameters|a 'void' return type}1
invalid use of a cast in an inline asm context requiring an lvalue: accepted due to -fheinous-gnu-extensions, but clang may remove support for this in the future
invalid constructor from class in system header, should not be explicit
local declaration of %0 hides instance variable
declaration of instance variables in the interface is deprecated
jump out of __finally block has undefined behavior
ignored 'inline' attribute on kernel function %0
kernel function %0 is a member function; this may not be accepted by nvcc
converting the result of '<<' to a boolean always evaluates to %select{false|true}0
converting the result of '<<' to a boolean; did you mean '(%0) != 0'?
first argument to __builtin_load_member_function_pointer must have a type deriving from class where second argument was defined
second argument to __builtin_load_member_function_pointer must be the address of a C++ member function: for example '&Foo::func', not null
%0 '%1' is acquired exclusively and shared in the same scope
%0 '%1' is not held on every path through here
'&&' within '||'
use of logical '%0' with constant operand
logical not is only applied to the left hand side of this %select{comparison|bitwise operator}0
'%0' is bound to current loop, GCC binds it to the enclosing loop
state of variable '%0' must match at the entry and exit of loop
only one parameter on 'main' declaration
variable named 'main' with external linkage has undefined behavior
bool literal returned from 'main'
taking the max of %select{a value and unsigned zero|unsigned zero and a value}0 is always equal to the other value
capture host side class data member by this pointer in device or host device lambda function may result in invalid memory access if this pointer is not accessible on device side
non-void coroutine does not return a value in all control paths
non-void function does not return a value in all control paths
non-void lambda does not return a value in all control paths
variable %0 may be uninitialized when %select{used here|captured by block}1
%0 may not respond to %1
extra qualification on member %0
size argument in %0 call is a comparison
messaging unqualified id
'mig_server_routine' attribute only applies to routines that return a kern_return_t
availability does not match previous declaration
%select{|overriding }4method %select{introduced after|deprecated before|obsoleted before}0 %select{the protocol method it implements|overridden method}4 on %1 (%2 vs. %3)
%select{|overriding }1method cannot be unavailable on %0 when %select{the protocol method it implements|its overridden method}1 is available
'delete%select{|[]}0' applied to a pointer that was allocated with 'new%select{[]|}0'; did you mean 'delete%select{[]|}0'?
import %select{module|name}0 (%1) does not match the import %select{module|name}0 (%2) of the previous declaration
nullability specifier %0 conflicts with existing specifier %1
%select{codeseg|section}0 does not match previous declaration
use of OSPtr outside of a return type
suggest braces around initialization of subobject
%plural{1:enumeration value %1 not handled in switch|2:enumeration values %1 and %2 not handled in switch|3:enumeration values %1, %2, and %3 not handled in switch|:%0 enumeration values not handled in switch: %1, %2, %3...}0
no case matching constant switch condition '%0'
auto property synthesis is synthesizing property not explicitly synthesized
missing field %0 initializer
format string missing
method has no return type specified; defaults to 'id'
no previous prototype for function %0
%0 availability is ignored without a valid 'SDKSettings.json' in the SDK
missing sentinel in %select{function call|method dispatch|block call}0
no previous extern declaration for non-static variable %0
comparison of integers of different signs: %0 and %1
modifying constructor parameter %0 that shadows a field of %1
multiple methods named %0 found
several methods with selector %0 of mismatched types are found for the @selector expression
CPU list contains duplicate entries; attribute ignored
extra qualification on member %0
vector initializers are not compatible with NEON intrinsics in big endian mode
array backing %select{initializer list subobject of the allocated object|the allocated initializer list}0 will be destroyed at the end of the full-expression
temporary bound to reference member of allocated object will be destroyed at the end of the full-expression
auto property synthesis will not synthesize property %0 because it is 'readwrite' but it will be synthesized 'readonly' via another property
auto property synthesis will not synthesize property %0 because it cannot share an ivar with another synthesized property
%select{struct|interface|union|class|enum}0 %1 does not declare any constructor to initialize its non-modifiable members
dynamic_cast will not work since RTTI data is disabled by %select{-fno-rtti-data|/GR-}0
typeid will not work since RTTI data is disabled by %select{-fno-rtti-data|/GR-}0
enums in the Microsoft ABI are signed integers by default; consider giving the enum %0 an unsigned underlying type to make this code portable
%0 '%1' is still held at the end of function
'nocf_check' attribute ignored; use -fcf-protection to enable the attribute
'noderef' can only be used on an array or pointer type
casting to dereferenceable pointer removes 'noderef' attribute
%0 attribute is ignored because there exists no call expression inside the statement
conflicting parameter types in declaration of %0: %1 vs %2
conflicting parameter types in implementation of %0: %1 vs %2
conflicting return type in declaration of %0: %1 vs %2
conflicting return type in implementation of %0: %1 vs %2
expression which evaluates to zero treated as a null pointer constant of type %0
cannot pass %select{non-POD|non-trivial}0 object of type %1 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
%0 has virtual functions but non-virtual destructor
comparison of nonnull %select{function call|parameter}0 '%1' %select{not |}2equal to a null pointer is '%select{true|false}2' on first encounter
function %0 declared 'noreturn' should not return
not a Doxygen trailing comment
use of unary operator that may be intended as compound assignment (%0=)
not enough variable arguments in %0 declaration to fit a sentinel
case value not in enumerated type %0
integer constant not in range of enumerated type %0
requesting an alignment of 16 bytes or greater for struct members is not binary compatible with AIX XL 16.1 and older
'nothrow' attribute conflicts with exception specification; attribute ignored
%0 attribute only applies to %select{Objective-C object|pointer|pointer-to-CF-pointer|pointer/reference-to-OSObject-pointer}1 parameters
%0 attribute only applies to %select{functions|methods|properties}1 that return %select{an Objective-C object|a pointer|a non-retainable pointer}2
overriding method has mismatched ns_consumed attribute on its parameter
duplicate key in dictionary literal
'NSObject' attribute may be put on a typedef only; attribute is ignored
overriding method has mismatched ns_returns_%select{not_retained|retained}0 attributes
null passed to a callee that requires a non-null argument
use of NULL in arithmetic operation
comparison between NULL and non-pointer %select{(%1 and NULL)|(NULL and %1)}0
comparison of %select{address of|function|array}0 '%1' %select{not |}2equal to a null pointer is always %select{true|false}2
synthesized setter %0 for null_resettable property %1 does not handle nil
null returned from %select{function|method}0 that requires a non-null return value
nullability specifier %0 cannot be applied to non-pointer type %1; did you mean to apply the specifier to the %select{pointer|block pointer|member pointer|function pointer|member function pointer}2?
inferring '_Nonnull' for pointer type within %select{array|reference}0 is deprecated
implicit conversion from nullable pointer %0 to non-nullable pointer type %1
%select{pointer|block pointer|member pointer}0 is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified)
array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified)
string is ill-formed as UTF-8 and will become a null %0 when boxed
using %0 directive in %select{NSString|CFString}1 which is being passed as a formatting argument to the formatting %select{method|CFfunction}2
adding %0 to %1 might cause circular dependency in container
object of type %0 is not compatible with %select{array element type|dictionary key type|dictionary value type}1 %2
designated initializer missing a 'super' call to a designated initializer of the super class
designated initializer invoked a non-designated initializer
designated initializer should only invoke a designated initializer on 'super'
%0 attribute isn't implemented by this Objective-C runtime
direct attribute on property %0 ignored (not implemented by this Objective-C runtime)
method override for the designated initializer of the superclass %objcinstance0 not found
%0 bridges to %1, not %2
%0 cannot bridge to %1
assignment to Objective-C's isa is deprecated in favor of object_setClass()
direct access to Objective-C's isa is deprecated in favor of object_getClass()
direct comparison of %select{an array literal|a dictionary literal|a numeric literal|a boxed expression|}0 has undefined behavior
'+load' is called at app startup and can increase launch time; consider using '+initialize' instead
method possibly missing a [super %0] call
cannot catch an exception thrown with @throw in C++ in the non-unified exception model
bitmasking for introspection of Objective-C object pointers is strongly discouraged
bitmasking for introspection of Objective-C object pointers is strongly discouraged
objc_precise_lifetime is not meaningful for %select{__unsafe_unretained|__autoreleasing}0 objects
'assign' property of object type may become a dangling reference; consider using 'unsafe_unretained'
'copy' attribute must be specified for the block property when -fobjc-gc-only is specified
default property attribute 'assign' not appropriate for object
no 'assign', 'retain', or 'copy' attribute is specified - 'assign' is assumed
retain'ed block property does not copy the block - use copy attribute instead
setter cannot be specified for a readonly property
using %0 with a literal is redundant
parameterized class %0 already conforms to the protocols listed; did you forget a '*'?
%0 attribute cannot be applied to %select{methods in protocols|dealloc}1
class %0 defined without specifying a base class
convenience initializer missing a 'self' call to another initializer
convenience initializer should not invoke an initializer on 'super'
direct comparison of a string literal has undefined behavior
'objc_direct' attribute is ignored as 'objc_suppress_direct' attribute is applied
'objc_suppress_direct' attribute is ignored
%0 is incompatible with selectors that return a %select{struct|union|vector}1 type
the meaning of __weak has changed in manual reference-counting
%0 was declared with __weak, but __weak is ignored in files using manual reference counting
ignoring __weak in file using manual reference counting
use of old-style cast
aligned clause will be ignored because the requested alignment is not a power of 2
allocator with the 'thread' trait access has unspecified behavior on '%0' directive
declaration marked as declare target after first use, it may lead to incorrect results
'#pragma omp declare variant' cannot be applied to the function that was defined already; the original function might be used
'#pragma omp declare variant' cannot be applied for function after first usage; the original function might be used
variant function in '#pragma omp declare variant' is itself marked as '#pragma omp declare variant'
score expressions in the OpenMP context selector need to be constant; %0 is not and will be ignored
zero linear step (%0 %select{|and other variables in clause }1should probably be const)
OpenMP loop iteration variable cannot have more than 64 bits size and will be narrowed
OpenMP only allows an ordered construct with the simd clause nested in a simd construct
Type %0 is not trivially copyable and not guaranteed to be mapped correctly
declaration is not declared in any declare target region
array section %select{lower bound|length}0 is of type 'char'
allocate directive specifies %select{default|'%1'}0 allocator while previously used %select{default|'%3'}2
class implementation may not have super class
%0 attribute is deprecated and ignored in %1
passing non-generic address space pointer to %0 may cause dynamic conversion affecting performance
%0 should not return a null pointer unless it is declared 'throw()'%select{| or 'noexcept'}1
os_log() '%%n' format specifier is not allowed
result of comparison of %select{constant %0|true|false}1 with %select{expression of type %2|boolean expression}3 is always %4
type %0 requires %1 bytes of alignment and the default allocator only guarantees %2 bytes
overloaded operator %select{>>|<<}0 has higher precedence than comparison operator
%q0 hides overloaded virtual %select{function|functions}1
parameter of overriding method should be annotated with __attribute__((noescape))
passing %0-byte aligned argument to %1-byte aligned parameter %2%select{| of %4}3 may result in an unaligned pointer access
parameter '%0' not in expected state when the function returns: expected '%1', observed '%2'
argument not in expected state; expected '%0', observed '%1'
%0 is a large (%1 bytes) pass-by-value argument; pass it by reference instead ?
parentheses were disambiguated as a function declaration
parentheses were disambiguated as redundant parentheses around declaration of variable named %0
passing object of class type %0 through variadic %select{function|block|method|constructor}1%select{|; did you mean to call '%3'?}2
moving a temporary object prevents copy elision
moving a local object in a return statement prevents copy elision
taking the absolute value of %select{pointer|function|array}0 type %1 is suspicious
performing pointer arithmetic on a null pointer has undefined behavior%select{| if the offset is nonzero}0
comparing a pointer to a null character constant; did you mean to compare to %select{NULL|(void *)0}0?
dereference of type %1 that was reinterpret_cast from type %0 has undefined behavior
performing pointer subtraction with a null pointer %select{has|may have}0 undefined behavior
cast to smaller integer type %1 from %0
cast to smaller integer type %1 from %0
@selector expression formed with potentially direct selector %0
#pragma align(packed) may not be compatible with objects generated with AIX XL C/C++
unused attribute %0 in '#pragma clang attribute push' region
#pragma options align=reset failed: %0
expected #pragma pack parameter to be '1', '2', '4', '8', or '16'
the current #pragma pack alignment value is modified in the included file
unterminated '#pragma pack (push, ...)' at end of file
non-default #pragma pack value changes the alignment of struct or union members in the included file
specifying both a name and alignment to 'pop' is undefined
value of #pragma pack(show) == %0
#pragma %0(pop, ...) failed: %1
only variables can be arguments to '#pragma unused'
undeclared variable %0 used as an argument for '#pragma unused'
operator '?:' has lower precedence than '%0'; '%0' will be evaluated first
%0 has lower precedence than %1; %1 will be evaluated first
operator '?:' has lower precedence than '%0'; '%0' will be evaluated first
object format flags cannot be used with '%0' conversion specifier
'%select{*|.*}0' specified field %select{width|precision}0 is missing a matching 'int' argument
field %select{width|precision}0 should have type %1, but argument has type %2
data argument not used by format string
missing object format flag
format string contains '\0' within the string body
format string is not null-terminated
flag '%0' is ignored when flag '%1' is present
incomplete format specifier
more '%%' conversions than data arguments
'%0' is not a valid object format flag
flag '%0' results in undefined behavior with '%1' conversion specifier
%select{field width|precision}0 used with '%1' conversion specifier, resulting in undefined behavior
data argument position '%0' exceeds the number of data arguments (%1)
use of __private_extern__ on a declaration may not produce external symbol private to the linkage unit and is deprecated
property %0 not found on object of type %1; did you mean to access property %2?
property attribute in class extension does not match the primary class
'%1' attribute on property %0 does not match the property inherited from %2
property declared as returning non-retained objects; getter returning retained objects
primary property declaration is implicitly strong while redeclaration in class extension is weak
property access is using %0 method which is deprecated
getter name mismatch between property redeclaration (%1) and its original declaration (%0)
property type %0 is incompatible with type %1 inherited from %2
property %select{of type %1|with attribute '%1'|without attribute '%1'|with getter %1|with setter %1}0 was selected for synthesis
passing the value that %1 points to by reference requires holding %0 %select{'%2'|'%2' exclusively}3
the pointer incremented by %0 refers past the end of the array (that contains %1 element%s2)
the pointer incremented by %0 refers past the last possible element for an array in %1-bit address space containing %2-bit (%3-byte) elements (max possible %4 element%s5)
the pointer decremented by %0 refers before the beginning of the array
'objc_independent_class' attribute may be put on Objective-C object pointer type only; attribute is ignored
authenticating a null pointer will almost certainly trap
signing a null pointer will yield a non-null pointer
'%0' type qualifier%s1 on return type %plural{1:has|:have}1 no effect
attribute 'readonly' of property %0 restricts attribute 'readwrite' of property inherited from %1
receiver %0 is a forward class and corresponding @interface may not exist
receiver type %0 for instance message is a forward declaration
incompatible redeclaration of library function %0
%q0 redeclared without %1 attribute: previous %1 ignored
%q0 redeclared without 'dllimport' attribute: 'dllexport' attribute added
#pragma redefine_extname is applicable to external C declarations only; not applied to %select{function|variable}0 %1
redefinition of %0 will not be visible outside of this function
variable %0 is %select{decremented|incremented}1 both in the loop header and in the loop body
redundant move in return statement
redundant parentheses surrounding declarator
reference %0 is not yet bound to a value when used here
'register' storage specifier on @catch parameter will be ignored
'reinterpret_cast' %select{from|to}3 class %0 %select{to|from}3 its %select{virtual base|base at non-zero offset}2 %1 behaves differently from 'static_cast'
method is expected to return an instance of its class type %diff{$, but is declared to return $|, but is declared to return different type}0,1
protocol method is expected to return an instance of the implementing class, but is declared to return %0
%select{remainder|division}0 by zero is undefined
'require_constant_initialization' attribute added after initialization of variable
identifier %0 is reserved because %select{<ERROR>|it starts with '_' at global scope|it starts with '_' and has C language linkage|it starts with '__'|it starts with '_' followed by a capital letter|it contains '__'}1
returning address of label, which is local
returning %select{address of|reference to}0 local temporary object
%select{address of|reference to}0 stack memory associated with %select{local variable|parameter}2 %1 returned
manual %0 of an OSSharedPtr is error-prone
non-void %select{function|method}1 %0 should return a value
return state set for an unconsumable type '%0'
return value not in expected state; expected '%0', observed '%1'
return value of %0 is a large (%1 bytes) pass-by-value object; pass it by reference instead ?
%0 has C-linkage specified, but returns user-defined type %1 which is incompatible with C
%0 has C-linkage specified, but returns incomplete type %1 which could be incompatible with C
repeated RISC-V 'interrupt' attribute
instance method %0 is being used on 'Class' which is not in the root class
sampler initializer has invalid %0 bits
zero field width in scanf format string is unused
no closing ']' for '%%[' in scanf format string
second argument to 'va_start' is not the last named parameter
second argument to 'va_arg' is of promotable type %0; this va_arg has undefined behavior because arguments will be promoted to %1
second argument to 'va_arg' is of non-POD type %0
second argument to 'va_arg' is of ARC ownership-qualified type %0
explicitly assigning value of variable of type %0 to itself
explicitly assigning value of variable of type %0 to itself
explicitly moving variable of type %0 to itself
property %0 requires method %1 to be defined - use @synthesize, @dynamic or provide a method implementation in this class implementation
property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category
%select{parameter|non-static data member}3 %0 %select{|of %1 }3shadows member inherited from type %2
shift count >= width of type
shifting a negative signed value is undefined
shift count is negative
signed shift result (%0) requires %1 bits to represent, but %2 only has %3 bits
signed shift result (%0) sets the sign bit of the shift expression's type (%1) and becomes negative
expression with side effects will be evaluated despite being used as an operand to 'typeid'
expression with side effects has no effect in an unevaluated context
signed bit-field %0 needs an extra bit to represent the largest positive enumerators of %1
sizeof on pointer operation will return size of %0 instead of %1
sizeof on array function parameter will return size of %0 instead of %1
'%0' call operates on objects of type %1 while the size is based on a different type %2
did you mean to %select{dereference the argument to 'sizeof' (and multiply it by the number of elements)|remove the addressof in the argument to 'sizeof' (and multiply it by the number of elements)|provide an explicit length}0?
argument to 'sizeof' in %0 call is the same pointer type %1 as the %select{destination|source}2; expected %3 or an explicit length
initializer order does not match the declaration order
variable %0 is %select{used|captured}1 uninitialized whenever %select{'%3' condition is %select{true|false}4|'%3' loop %select{is entered|exits because its condition is false}4|'%3' loop %select{condition is true|exits because its condition is false}4|switch %3 is taken|its declaration is reached|%3 is called}2
'%0' ignored on this declaration
array argument is too small; %select{contains %0 elements|is of size %0}2, callee requires at least %1
non-constant static local variable in inline function may be different in different files
'main' should not be declared static
static variable %0 is suspiciously used within its own initialization
multiple methods named %0 found
@selector expression formed with potentially direct selector %0
this %select{function declaration is not|block declaration is not|old-style function definition is not preceded by}0 a prototype
adding %0 to a string pointer does not append to the string
adding %0 to a string does not append to the string
result of comparison against %select{a string literal|@encode}0 is unspecified (use an explicit string comparison function instead)
size argument in %0 call appears to be size of the source; expected the size of the destination
the value of the size argument in 'strncat' is too large, might lead to a buffer overflow
size argument in 'strncat' call appears to be size of the source
the value of the size argument to 'strncat' is wrong
%2 defined as %select{a struct|an interface|a class}0%select{| template}1 here but previously declared as %select{a struct|an interface|a class}3%select{| template}1; this is valid, but may result in linker errors under the Microsoft C++ ABI
%select{struct|interface|class}0%select{| template}1 %2 was previously declared as a %select{struct|interface|class}3%select{| template}1; this is valid, but may result in linker errors under the Microsoft C++ ABI
subtraction of pointers to type %0 of zero size has undefined behavior
array subscript is of type 'char'
%0 overrides a destructor but is not marked 'override'
%0 overrides a member function but is not marked 'override'
block could be declared with attribute 'noreturn'
%select{function|method}0 %1 could be declared with attribute 'noreturn'
field %0 can overwrite instance variable %1 with variable sized type %2 in superclass %3
'size' argument to bzero is '0'
%select{'size' argument to memset is '0'|setting buffer to a 'sizeof' expression}0; did you mean to transpose the last two arguments?
'swift_newtype' attribute may be put on a typedef only; attribute is ignored
template parameter of a function template with the 'sycl_kernel' attribute cannot be a non-type template parameter
function template with 'sycl_kernel' attribute must have a single parameter
'sycl_kernel' attribute only applies to a function template with at least two template parameters
function template with 'sycl_kernel' attribute must have a 'void' return type
the semantics of this intrinsic changed with GCC version 4.4 - the newer semantics are provided here
taking address of packed member %0 of class or structure %q1 may result in an unaligned pointer value
result of comparison of %select{constant %0|true|false}1 with %select{expression of type %2|boolean expression}3 is always %4
result of comparison of constant %0 with expression of type 'BOOL' is always %1, as the only well defined values for 'BOOL' are YES and NO
result of comparison of %select{%4|%1-bit %select{signed|unsigned}2 value}0 %3 %select{%1-bit %select{signed|unsigned}2 value|%4}0 is always %5
result of comparison %select{%3|%1}0 %2 %select{%1|%3}0 is always %4
overlapping comparisons always evaluate to %select{false|true}0
calling %0 is a violation of trusted computing base '%1'
non-type template argument with value '%0' converted to '%1' for unsigned template parameter of type %2
non-type template argument value '%0' truncated to '%1' for template parameter of type %2
exported templates are unsupported
dependent nested name specifier '%0' for friend template declaration is not supported; ignoring this friend declaration
dependent nested name specifier '%0' for friend class declaration is not supported; turning off access control for %1
extraneous template parameter list in template specialization
tentative array definition assumed to have one element
'this' pointer cannot be null in well-defined C++ code; pointer may be assumed to always convert to true
'this' pointer cannot be null in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0
%0 attribute requires arguments whose type is annotated with 'capability' attribute; type here is %1
%0 attribute can only be applied in a context annotated with 'capability' attribute
%0 only applies to pointer types; type here is %1
ignoring %0 attribute because its argument is invalid
%0 attribute without capability arguments refers to 'this', but %1 isn't annotated with 'capability' or 'scoped_lockable' attribute
%0 attribute without capability arguments can only be applied to non-static methods of a class
thread safety beta warning
thread safety verbose warning
%0 has a non-throwing exception specification but can still throw
underaligned exception object thrown
%select{alignment|size}0 of field %1 (%2 bits) does not match the %select{alignment|size}0 of the first field in transparent union; transparent_union attribute ignored
first field of a transparent union cannot have %select{floating point|vector}0 type %1; transparent_union attribute ignored
transparent_union attribute can only be applied to a union definition; attribute ignored
transparent union definition must contain at least one field; transparent_union attribute ignored
'%0' only applies to %select{function|pointer|Objective-C object or block pointer}1 types; type here is %2
specified %0 type tag requires a null pointer
argument type %0 doesn't match specified %1 type tag %select{that requires %3|}2
this type tag was not designed to be used with this function
'%0' qualifier on function type %1 has no effect
'%0' qualifier on function type %1 has unspecified behavior
ordered comparison of function pointers (%0 and %1)
'%0' qualifier on reference type %1 has no effect
vector operands do not have the same elements sizes (%0 and %1)
unannotated fall-through between switch labels
unannotated fall-through between switch labels in partly-annotated function
implementing unavailable method
%0 may be unavailable because the receiver type is unknown
undeclared selector %0
undeclared selector %0; did you mean %1?
cannot find interface declaration for %0
cannot find interface declaration for %0; did you mean %1?
method definition for %0 not found
cannot find protocol definition for %0
inline function %q0 is not defined
%select{function|variable}0 %q1 has internal linkage but is not defined
reinterpret_cast from %0 to %1 has undefined behavior
%0 is only available on %1 %2 or newer
%0 is only available on %1 %2 or newer
__declspec attribute %0 is not supported
method %0 in protocol %1 not implemented
no method with selector %0 is implemented in this translation unit
block pointer variable %0 is %select{uninitialized|null}1 when captured by block
variable %0 is uninitialized when passed as a const reference argument here
variable %0 is uninitialized when used within its own initialization
reference %0 is not yet bound to a value when used within its own initialization
variable %0 is uninitialized when %select{used here|captured by block}1
isa trait '%0' is not known to the current target; verify the spelling or consider restricting the context selector with the 'arch' selector further
unknown sanitizer '%0' ignored
releasing %0 '%1' that was not held
releasing %0 '%1' using %select{shared|exclusive}2 access, expected %select{shared|exclusive}3 access
%select{function|variable}0 %1 is not needed and will not be emitted
member function %0 is not needed and will not be emitted
'static' function %0 declared in header file should be declared 'static inline'
code will never be executed
'break' will never be executed
default label in switch which covers all enumeration values
fallthrough annotation in unreachable code
loop will run at most once (loop increment never executed)
'return' will never be executed
multiple unsequenced modifications to %0
unsequenced modification and access to %0
taking the absolute value of unsigned type %0 has no effect
result of comparison of %select{%3|unsigned expression}0 %2 %select{unsigned expression|%3}0 is always %4
assigning value of signed enum type %1 to unsigned bit-field %0; negative enumerators of enum %1 will be converted to positive values
result of comparison of %select{%3|char expression}0 %2 %select{char expression|%3}0 is always %4, since char is interpreted as unsigned
result of comparison of %select{%3|unsigned enum expression}0 %2 %select{unsigned enum expression|%3}0 is always %4
sorry, lifetime extension of %select{temporary|backing array of initializer list}0 created by aggregate initialization using default member initializer is not supported; lifetime of %select{temporary|backing array}0 will end at the end of the full-expression
%select{unsupported|duplicate|unknown}0%select{| architecture| tune CPU}1 '%2' in the 'target' attribute string; 'target' attribute ignored
parameter %0 set but not used
variable %0 set but not used
ignoring return value of function declared with %0 attribute
left operand of comma operator has no effect
%select{equality|inequality|relational|three-way}0 comparison result unused
unused variable %0
ignoring temporary created by a constructor declared with %0 attribute
ignoring temporary created by a constructor declared with %0 attribute: %1
container access result unused - container access should not be used for side effects
unused exception parameter %0
expression result unused
unused function %0
unused label %0
lambda capture %0 is not %select{used|required to be captured for this use}1
unused %select{typedef|type alias}0 %1
unused member function %0
unused parameter %0
private field %0 is not used
ivar %0 which backs the property is not referenced in this property's accessor
property access result unused - getters should not be used for side effects
ignoring return value of function declared with %0 attribute
ignoring return value of function declared with %0 attribute: %1
unused %select{function|variable}0 template %1
unused variable %0
expression result unused; should this cast be to 'void'?
expression result unused; assign into a variable to force a volatile load
invalid invocation of method '%0' on object '%1' while it is in the '%2' state
invalid invocation of method '%0' on a temporary object while it is in the '%1' state
%0 was marked unused but was used
user-defined literal suffixes not starting with '_' are reserved%select{; no literal will invoke this operator|}0
using namespace directive in global context in header
passing %select{an object that undergoes default argument promotion|an object of reference type|a parameter declared with the 'register' keyword}0 to 'va_start' has undefined behavior
%select{reading|writing}1 the value pointed to by %0 requires holding %select{any mutex|any mutex exclusively}1
%select{reading|writing}3 the value pointed to by %1 requires holding %0 %select{'%2'|'%2' exclusively}3
%select{reading|writing}3 the value pointed to by %1 requires holding %0 %select{'%2'|'%2' exclusively}3
instantiation of variable %q0 required here, but no definition is available
%select{reading|writing}1 variable %0 requires holding %select{any mutex|any mutex exclusively}1
%select{reading|writing}3 variable %1 requires holding %0 %select{'%2'|'%2' exclusively}3
%select{reading|writing}3 variable %1 requires holding %0 %select{'%2'|'%2' exclusively}3
field %0 with variable sized type %1 is not visible to subclasses and can conflict with their instance variables
variable%select{s| %1|s %1 and %2|s %1, %2, and %3|s %1, %2, %3, and %4}0 used in loop condition not modified in loop body
defaulted move assignment operator of %0 will move assign virtual base class %1 multiple times
Use of 'long' with '__vector' is deprecated
specifying vector types with the 'mode' attribute is deprecated; use the 'vector_size' attribute instead
variable length array used
cast to smaller integer type %1 from %0
cast to smaller integer type %1 from %0
dynamic exception specifications with types are currently ignored in wasm
weak identifier %0 never declared
an already-declared variable is made a weak_import declaration %0
explicit template instantiation %0 will emit a vtable in every translation unit
%0 has no out-of-line virtual method definitions; its vtable will be emitted in every translation unit
using %select{integer|floating point|complex}1 absolute value function %0 when argument is of %select{integer|floating point|complex}2 type
result of '%0' is %1; did you mean exponentiation?
result of '%0' is %1; did you mean '%2'?
result of '%0' is %1; did you mean '%2' (%3)?
zero as null pointer constant
%select{|empty }0%select{struct|union}1 has size 0 in C, %select{size 1|non-zero size}2 in C++
%select{|empty }0%select{struct|union}1 has size 0 in C, %select{size 1|non-zero size}2 in C++
%0 is only available on %1 %2 and %3 %4 or newer
the selected methods are already implemented
method %0 cannot be renamed because it overrides a method declared in a system framework
no %select{implementation file|@implementation declaration}0 for the selected %select{declaration|@interface}0 %1; please add one and run the refactoring action again
the selected code is not a part of a function's / method's body
the selected expression can't be extracted
the selected expression is too simple to extract
refactoring action can't be initiated without a selection
the provided selection does not overlap with the AST nodes of interest
there is no symbol at the given location
%0 is a builtin function that cannot be renamed
%0 is declared in a %1 file; rename can be initiated in a %1 file only
%0 cannot be renamed because it is declared in a system header
StringWithFormatlocalizedStringW
eger-sign-changeimplicit-integerteger-truncationinteger-overflowsigned-integer-oonnull-attributereturns-nonnull-unsigned-integerr-divide-by-zerointeger-divide-bzero
float-divide-by-at-cast-overflowfloat-cast-overfigned-shift-baseunsigned-shift-blicit-conversionimplicit-conversnullability-assinullability-return
cfi-unrelated-canonnull-attributshadow-call-stacpointer-subtractkernel-hwaddresspointer-overflowcfi-derived-cast
206-instructionsisa-v206-instruc207-instructionsisa-v207-instrucpcrelative-memopmops
paired-vector-meisa-v30-instructisa-v31-instruct
exception-handling
trapping-fptointnontrapping-fptoavx512vp2intersect
ct-calls
retpoline-indireal-thunk
retpoline-externndirect-branchesgeneral-regs-onlcore_aes_pclmulqdq
_tsx
core_2_duo_sse4_1
atom_sse4_2_movbcore_2_duo_ssse3core_2nd_gen_avxcore_3rd_gen_avxcore_4th_gen_avxcore_5th_gen_avx_iii_no_xmm_regspentium_iii_no_x
tion-declaration-implicit-functii
C/C++ MSF 7.00
Microsoft C/C++ 
0000000000000000
()^$|*+?.[]\{}
----------------
z>()^$|+?[]\{}
use-external-namoverlay-relativeexternal-content
                                                                                
[0;30m
[0;31m
[0;32m
[0;33m
[0;34m
[0;35m
[0;36m
[0;37m
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;40m
[0;41m
[0;42m
[0;43m
[0;44m
[0;45m
[0;46m
[0;47m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
LLVM_DISABLE_SYMBOLIZATION
LLVM_SYMBOLIZER_PATH
.objc_class_name_
_OBJC_CLASS_$_
_OBJC_METACLASS_$_
_OBJC_EHTYPE_$_
_OBJC_IVAR_$_
/Root/
warning
error
[_]?Private\.h
base
variant
skip-external
missing-api
no-cascading-diags
compare-private-headers
diag-depth
allowlist
diag-style
target
sysroot
includes
frameworks
path
null
NULL
true
false
01234567
0123456789abcdefABCDEF
0123456789
Architectures: 
file doesn't have architecture '
invalid input file
malformed file
tapi-configuration-v1
sdk-platform
sdk-version
sdk-root
language
include-paths
framework-paths
public-dylibs
macros
projects
invalid macro
name
install-name
public-header
private-header
use-overlay
umbrella
pre-includes
excludes
language-std
iosmac
iosmac-umbrella-only
root-mask
sdk-mask
use-split-header-dir
usr/include
usr/local/include
System/Library/Frameworks/
System/Library/PrivateFrameworks/
Kernel.framework
IOKit.framework
Headers
PrivateHeaders
Modules
Frameworks
Versions
System/iOSSupport
System/DriverKit
Library/Apple
/System/Cryptexes/OS
/System/Cryptexes/OS/System/iOSSupport
System/Library
PrivateFrameworks
.framework
usr/lib
usr/local/lib
System/Library/Frameworks
System/Library/PrivateFrameworks
usr/lib/swift
/Versions/
<input>
<unknown>
-action=
Set SDKDB generation option: 'scan-interface', 'gen-public', 'gen-private' or 'all'
scan-interface,gen-public,gen-private,all
-alias_list
Specify the path to a file containing a list of symbol aliases
<path>
--allow-arch-merges
Allow merges of the same architecture.
-allowable_client
Restricts what can link against the dynamic library being created
-arch
Specify the architecture to build for
<architecture>
-bridgeos_version_min
-compatibility_version
Specifies the compatibility version number of the library
--config-file=
Read configuration from <file>
<file>
-current_version
Specifies the current version number of the library
--delete-input-file
Delete input file on success
--delete-private-frameworks
Delete private frameworks from the SDK
--demangle
Demangle C++ symbols when printing warnings and errors
--diagnostics-file=
Write diagnostics to <file>
-dylibs-only
Scan only Frameworks and UNIX libs
-dynamiclib
Define macro
--exclude-private-header=
-exclude-private-header
Exclude private header from parsing
<glob>
--exclude-project-header=
-exclude-project-header
Exclude project header from parsing
--exclude-public-header=
-exclude-public-header
Exclude public header from parsing
--extra-private-header=
-extra-private-header
Add additional private header location for parsing
--extra-project-header=
-extra-project-header
Add additional project header location for parsing
--extra-public-header=
-extra-public-header
Add additional public header location for parsing
--extract
Extract the specified <architecture>.
-fapplication-extension
Restrict code to those available for App Extensions
-ferror-limit
Set the maximum number of errors to emit before stopping (0 = no limit).
--filelist=
Specifies the <path> to a file that contains a list of headers to parse.
-filelist
--filetype=
Specify the output file type (tbd-v1, tbd-v2, tbd-v3, or tbd-v4)
-fmodule-map-file=
Load this module map file
-fmodule-name=
Specify the name of the module to build
<name>
-fmodules-cache-path=
Specify the module cache path
<directory>
-fmodules-validate-system-headers
Validate the system headers that a module depends on when loading the module
-fmodules
Enable the 'modules' language feature
-fno-application-extension
-fno-rtti
Disable generation of rtti information
-fobjc-arc
Synthesize retain and release calls for Objective-C pointers
-fobjc-weak
Enable ARC-style weak references in Objective-C
-fprofile-instr-generate
Add extra symbols for InstallAPI that are created by code coverage.
-frtti
-fvisibility=
Set the default symbol visibility for all global declarations
Add directory to framework include search path
-help-hidden
-help
Display this help message
-iframework
Add directory to SYSTEM framework search path
--infer-include-paths
Infer include paths based on the provided/found header files
--info
List the architectures in the input file
--inline-private-frameworks
Inline private frameworks
-install_name
Sets an internal "install path" (LC_ID_DYLIB) in a dynamic library
--installapi-sdkdb-path
installapi SDKDB input directory (default to output directory)
-ios_simulator_version_min
-ios_version_min
-iquote
Add directory to QUOTE include search path
-isysroot
Set the system root directory (usually /)
<dir>
-isystem
Add directory to SYSTEM include search path
-ivfsoverlay
Overlay the virtual filesystem described by file over the real file system
Add directory to include search path
--list-symbols
List the exported symbols.
--load-snapshot=
Specify the snapshot input directory
Add directory to the library search path
-macosx_version_min
-mbridgeos-version-min=
--merge
Merge the input files.
-mios-simulator-version-min=
-mios-version-min=
-miphoneos-version-min=
-mmacos-version-min=
-mmacosx-version-min=
-mtargetos=
Set the deployment target to be the specified platform and OS version
-mtvos-simulator-version-min=
-mtvos-version-min=
-mwatchos-simulator-version-min=
-mwatchos-version-min=
--no-infer-include-paths
Don't infer include paths based on the provided/found header files
-no-private-headers
Disable private header scanning
-no-public-headers
Disable public header scanning
--no-uuids
Don't record the UUIDs from the library in the text-based stub file
--no-verify-api-skip-external-headers
--no-verify-api
-ObjC++
Treat source input files as Objective-C++ inputs
-ObjC
Treat source input files as Objective-C inputs
--output
Write output to <file>
--partial-sdkdb-list
Partial SDKDB filelist path
<filelist>
--print-after=
-private-headers
Enable private header scanning
--private-umbrella-header=
-private-umbrella-header
Specify the private umbrella header location
--product-name=
Specify the product name
-public-headers
Enable public header scanning
--public-sdk-content-root
Path to PublicSDKContentRoot
<PublicSDKContentRoot>
--public-umbrella-header=
-public-umbrella-header
Specify the public umbrella header location
-reexport-l
Re-export the specified library
-reexport_framework
Re-export the specified framework
-reexport_install_name
Re-export the specified internal "install path" (LC_ID_DYLIB)
-reexport_library
--remove
Remove the specified <architecture>.
--runtime-root
Path to RuntimeRoot
<RuntimeRoot>
--sdk-content-root
Path to SDKContentRoot
<SDKContentRoot>
-sdkdb-output-dir
Write SDKDB output to path
--sdk
-serialize-diagnostics
Serialize compiler diagnostics to a file
--set-installapi-flag
Set the installapi flag in the text-based stub file
--snapshot-dir=
Specify the snapshot output directory
--snapshot-use-own-resource-dir
Use our own resource directory
--snapshot
Force creation of a snapshot
-std=
Language standard to compile for
-swift-installapi-interface
Ignore symbols in verification against headers from specified file path for swift generated file.
--target-variant=
Generate code for the given target variant
-target-variant
--target=
Generate code for the given target
-target
-tvos_simulator_version_min
-tvos_version_min
-umbrella
Specifies that the dylib being linked is re-exported through an umbrella framework of the specified name.
<framework_name>
Undefine macro
--verify-against=
-verify-against
Verify the specified dynamic library/framework against the headers
--verify-api-error-as-warning
Emit API Verification errors as warnings
--verify-api-skip-external-headers
Skip external headers for API verification of zippered frameworks
--verify-api
Verify the API of zippered frameworks
--verify-arch
Verify that the specified <architecture> is present in the file.
--verify-mode=
Specify the severity and extend of the validation. Valid modes are ErrorsOnly, ErrorsAndWarnings, and Pedantic.
-version
Display the version
Verbose output, show scan content and driver options
-watchos_simulator_version_min
-watchos_version_min
-Xarch_
-Xparser
Pass <arg> to the clang parser
<arg>
-Xplatform_
Treat subsequent input files as having type <language>
<language>
/org.llvm.clang.tapi/ModuleCache
frontend
public:
triple:
private:
project:
Public
Private
Project
{0:2}
error: 
Parsing 
"type": "framework",
"name": "
"architecture": "
"location": "
"umbrella_header": "
"umbrella_framework": "
"platform": "
"os_version": "
"apis": [
"type": 
"variable"
"function"
Headers/
"header_file": "
"availability": {
"introduced": "
"obsoleted": null,
"obsoleted": "
"unavailable": 
"type": "objectivec_class",
(([^/]*(/|$))*)
([^/]*)
not a glob
()^$|+.[]\{}
.dylib
re-exported library
/include/
.framework/
re-exported framework
could not read alias list
alias_list
reexport_framework
could not generate coverage symbols
code_coverage
.tbd
.partial.sdkdb
invalid alias list
AppleInternal
LinkerAutoZipperList.txt
tapi
unable to create temporary input file
libcodecoverage
dylib
unable to create temporary output file
cannot open input file
static int foo() { return 0; }
-dynamiclib
-fcoverage-mapping
stderr
unable to create temporary stderr file
unable to read file
'clang' invocation failed:
_TAPI_TEST_CLANG
clang
cannot find 'clang' in toolchain directory. Looking for 'clang' in PATH instead.
unable to find 'clang' in PATH
binary file
tapi option
TAPI_SNAPSHOT_CREATE
TAPI_USE_CC_LOG_PATH
CC_LOG_DIAGNOSTICS_FILE
.TAPI_SNAPSHOT
TAPI_SNAPSHOT_DIR
LD_NO_ENCRYPT
LD_APPLICATION_EXTENSION_SAFE
SDKROOT
/usr/lib
/usr/local/lib
/Library/Frameworks
/System/Library/Frameworks
unknown-apple-
objective-c
objective-c++
TAPI_DELETE_INPUT_FILE
TAPI_OUTPUT_FILE_TYPE
env TAPI_OUTPUT_FILE_TYPE
TAPI_API_VERIFY_ERROR_AS_WARNING
EquivalentTypes
XBS_TAPI_SDKDB_OUTPUT_PATH
LD_TRACE_FILE
SDKDB
RC_PROJECT_COMPILATION_PLATFORM
diag.plist
MACOSX_DEPLOYMENT_TARGET
IPHONEOS_DEPLOYMENT_TARGET
TVOS_DEPLOYMENT_TARGET
WATCHOS_DEPLOYMENT_TARGET
BRIDGEOS_DEPLOYMENT_TARGET
DRIVERKIT_DEPLOYMENT_TARGET
14.0.0
config
.conf
RC_XBS
RC_BUILDIT
archive
stubify
installapi
reexport
sdkdb
generate-api-tests
api-verify
extractapi
OVERVIEW: 
USAGE: tapi [--version][--help]
       tapi <command> [<args>]
Commands:
  archive     Merge or thin text-based stub files
  stubify     Create a text-based stub file from a library
  installapi  Create a text-based stub file by scanning the header files
  reexport    Create a linker reexport file by scanning the header files
Experimental Commands:
  sdkdb         Generate SDKDB from SDKContent
  api-verify    Compare interfaces between frameworks
  extractapi    Extract API information by scanning the header files
See 'tapi <command> --help' to read more about a specific command.
File does not exist
linker.reexport
TAPI_SDKDB_FORCE_ERROR
RC_MIN_VERSION_OPTION
RC_ProjectName
RuntimeRoot
--runtime-root
SDKContentRoot
--sdk-content-root
SDKDBAction
--action=
public.sdkdb
private.sdkdb
partial.sdkdb
Failed to scan header interface
binary file doesn't exist
RC_ARCHS
apple
13.0
macabi
19.0
simulator
-Xclang
arm64
i386
x86_64
machine
include
System
Library
/System/iOSSupport/usr/include
/System/iOSSupport/usr/local/include
/System/iOSSupport/System/Library/Frameworks
/System/iOSSupport/System/Library/PrivateFrameworks
/System/DriverKit/usr/include
/System/DriverKit/usr/local/include
/System/DriverKit/System/Library/Frameworks
tapi_includes
-%%%%%%
vfsoverlay
yaml
cannot create vfs file
_TAPI_TEST_SWIFT_API_EXTRACT
swift-api-extract
cannot find 'swift-api-extract' in toolchain directory. Looking for 'swift-api-extract' in PATH instead.
unable to find 'swift-api-extract' in PATH
swiftapi
json
swift-api-extract: 
'swift-api-extract' invocation failed:
cannot open swift-api-extract output file
API is not a JSON Object
-sdk
-module-name
-vfsoverlay
-module-cache-path
iOSSupport
version
Unsupported version
output path is empty
output path is not a directory
/include
.map
/System/Library/PrivateFrameworks
/usr/lib/
/tmp/tapi-snapshot
: Too many levels of symbolic links
Files
RunScript
.yaml
PLEASE submit a bug report to http://developer.apple.com/bugreporter/ and include the crash backtrace and snapshot.
********************************************************
PLEASE ATTACH THE FOLLOWING DIRECTORY TO THE BUG REPORT:
********************************************************
Snapshot written to 
no such runscript or snapshot directory
tapi-version
command
working-directory
raw-args
driver-options
archive-options
linker-options
frontend-options
diagnostics-options
tapi-options
directories
file-mapping
symlink-mapping
driver
print-version
print-help
print-help-hidden
inputs
output-path
vfs-overlay-paths
clang-executable-path
action
architecture
unknown
show-info
extract-architecture
remove-architecture
verify-architecture
merge
architectures
current-version
compatibility-version
is-dynamic-library
allowable-clients
reexported-libraries
reexported-libraries2
reexported-library-paths
reexported-frameworks
is-application-extension-safe
alias-list
platform
os-version
targets
target-variants
isysroot
system-framework-paths-with-platform
system-framework-paths
system-include-paths
quoted-include-paths
library-paths
use-rtti
use-no-rtti
visibility
enable-modules
module-cache-path
validate-system-headers
use-objc-arc
use-objc-weak
clang-extra-args
clang-resource-path
serialize-diagnostics-file
error-limit
file-list
public-umbrella-header-path
private-umbrella-header-path
extra-public-headers
extra-private-headers
extra-project-headers
exclude-public-headers
exclude-private-headers
exclude-project-headers
verify-against
verification-mode
generate-code-coverage-symbols
demangle
delete-input-file
inline-private-frameworks
delete-private-frameworks
record-uuids
set-installapi-flag
infer-include-paths
verify-api
verify-api-skip-external-headers
verify-api-error-as-warning
invalid
errors-only
errors-and-warnings
pedantic
ignore-objc-class
bridge-objc-class
Apple 
TAPI version 14.0.0
 (tapi-1400.0.11)
/usr/include/
/([^/]+)\.framework/
Block.h
Darwin
MacTypes.h
libkern
compression.h
Compression
dispatch
Dispatch
mach-o
MachO
launch.h
objc
ObjectiveC
simd
tgmath.h
dns_sd.h
dnssd
EndpointSecurity
notify.h
DarwinNotify
notify_keys.h
xcselect.h
xcselect
ProExtension
AppleArchive
__super
template
const
volatile
restrict
#define
extern
enum
@interface
@property
class
direct
nonatomic
atomic
assign
retain
strong
copy
weak
unsafe_unretained
readwrite
readonly
getter
setter
null_resettable
@protocol
typedef
struct
tapi_include_headers
 Headers:
-resource-dir
-std=
-frtti
-fno-rtti
-fvisibility=
-fmodule-name=
-fmodule-map-file=
-fobjc-weak
-D__clang_tapi__=1
-iframework
-isystem
-iframework /System/Library/PrivateFrameworks
-stdlib=libc++
.cpp
/* the next header is configured with pre-includes. It might be include-what-you-use violation. Can it be removed? */
#include 
#import 
-xc++
-xobjective-c
-xobjective-c++
clang Invocation:
/tmp/tapi_include_headers-%%%%%%
Cannot create temporary file for clang reproducer
,sh}
Note: a reproducer of the error is written to: "
Note: the reproducer is intended to help users to debug the issue under a more familiar context using clang.
Note: the paths in the reproducer might need to be adjusted.
-iquote
%0: '%1'
allowable clients do not match: '%0' (provided) vs '%1' (found)
allowable client missing from %0: '%1'
ApplicationExtensionSafe flag does not match: '%0' (provided) vs '%1' (found)
architectures do not match: '%0' (provided) vs '%1' (found)
symbol '%0' doesn't have the same availability information: '%1' (header) vs '%2' (found)
cannot convert '%0' to a text-based stub file
cannot create directory '%0': %1
cannot find %0: %1
cannot find any public (usr/include) or private (usr/local/include) header directory: '%0'
cannot find re-exported library '%0'
cannot generate SDKDB: '%0'
cannot generate text-based stub file
cannot open file '%0': %1
cannot read file '%0': %1
cannot write file '%0': %1
compatibility_version does not match: '%0' (provided) vs '%1' (found)
current_version does not match: '%0' (provided) vs '%1' (found)
dynamic library symbol '%0' is thread local, but header symbol '%1' is not
dynamic library symbol '%0' is weak defined, but header symbol '%1' is not
expected only one input file
cannot infer '%0', please specify with option '%1'
headers don't have symbol '%0'
header symbol '%0' is thread local, but dynamic library symbol '%1' is not
header symbol '%0' is weak defined, but dynamic library symbol '%1' is not
inlining is not supported for output file type '%0'
install_name does not match: '%0' (provided) vs '%1' (found)
invalid compatibility version '%0'
invalid current version '%0'
invalid input file: '%0'
invalid platform name '%0'
cannot parse allowlist file %0: %1
invalid virtual filesystem overlay file '%0'
library doesn't have symbol '%0'
unable to merge '%0': '%1'
no such sysroot directory: '%0'
virtual filesystem overlay file '%0' not found
 more than one framework/dynamic library found
no architecture specified: add -arch <architecture>
no deployment target specified
input '%0' is not a directory
no framework/dynamic library found
no install name specified: add -install_name <path>
no matching target found for target variant '%0'
no output file specified
no such %select{public|private|project}1 header file: '%0'
no such symbols file: '%0'
no such %select{public|private|project}1 umbrella header file: '%0'
no target specified: add --target=<triple>
flat namespace libraries are not supported
input '%0' is not a dynamic library
dynamic library '%0' doesn't have all the required architectures
only one architecture can be specified '%0'
only one target can be specified
parent umbrella does not match: '%0' (provided) vs '%1' (found)
parsing of all headers disabled
platform does not match: '%0' (provided) vs '%1' (found)
%0 in '%1' does not match '%2'
re-exported libraries do not match: '%0' (provided) vs '%1' (found)
re-exported library missing from %0: '%1'
regression for %select{enum|enum constant|typedef}0 '%1' for target '%2': %3
regression for API '%0' in '%1' for target '%2': %3
API info missing binary info for target '%0'
missing dylib '%0' for target '%1'
missing %select{enum|enum constant|typedef}0 '%1' for target '%2'
missing %select{symbol|global variable|function}0 '%1' in '%2' for target '%3'
missing objc %select{class|category|protocol}0 '%1' in '%2' for target '%3'
missing target '%0'
regression for ObjC %select{class|category|protocol}0 '%1' in '%2' for target '%3': %4
regression for ObjC selector '%0' in %select{class|category|protocol}1 '%2' in '%3' for target '%4': %5
architecture '%0' is not supported: '%1'
environment '%0' is not supported: '%1'
unsupported file type
os '%0' is not supported: '%1'
vendor '%0' is not supported: '%1'
%0 has base class %1 here
base class %0 has access specifier '%select{public|protected|private|none}1' here
%0 has %1 base class(es) here
base class %0 %select{is not|is}1 virtual here
declaration has name %0 here
enum has type %0 here
enumerator %0 with value %1 here
%0 has field %1 here
field %0 %select{is not|is}1 bit field here
bit field %0 has width %1 here
%0 has no corresponding field here
field has name %0 here
field %0 has type %1 here
interface %0 has inconsistent super class here
interface %0 has type %1 here
interface %0 has super class %1 here
%0 has ivar %1 here
%0 has method %1 here
%0 has no corresponding ivar here
%0 has no corresponding method here
no corresponding parameter here
%0 has no corresponding property here
%0 has no corresponding protocol here
interface %0 has no corresponding super class here
parameter has type %0 here
%0 has property %1 here
property %0 has attribute here
property %0 has type %1 here
%0 conforms to protocol %1
return value has type %0 here
for target %0
%0 is defined to type %1 here
variable %0 has type %1 here
%0 is missing from target %1 but required for target %2
%0 has incompatible definitions
Auto zippering was requested, output will be zippered
ignoring broken symlink '%0'
ignoring the Versions directory within framework because it contains no parsable files: '%0'
could not generate information about '%0' for 32bit injection.
glob '%0' did not match any header file
no such excluded %select{public|private}0 header file: '%1'
no such %select{public|private}0 header file: '%1'
no such %select{public|private}0 pre-include header file: '%1'
no such %select{public|private}0 umbrella header file: '%1'
platform specific option for deployment target '%0' is deprecated, use -mtargetos.
reexport_install_name is deprecated, use reexport_framework reexport_l or reexport_library
conflicting availability info for %0: %1 is not the same as %2
conflicting declaration for exported symbol '%0'
conflict ObjC protocol definition '%0' inside SDKDB
conflicting superclass for objc class '%0': '%1' is not the same as '%2'
duplicated enum '%0' inside SDKDB
duplicated symbol '%0' inside SDKDB
duplicated ObjC category '%0(%1)' inside SDKDB
duplicated ObjC interface '%0' inside SDKDB
duplicated typedef '%0' inside SDKDB
updating '%0': %1 in %2
missing symbol '%0' from binary interface
missing ObjC category '%0(%1)' from binary interface
missing ObjC interface '%0' from binary interface
missing ObjC method '%0' in %select{class|category|protocol}1 '%2' from binary interface
missing ObjC property '%0' in %select{class|category|protocol}1 '%2' from binary interface
missing ObjC protocol '%0' from binary interface
new API %select{enum|enum constant|typedef}0 '%1' for target '%2'
new API %select{symbol|global variable|function}0 '%1' in '%2' for target '%3'
new API objc %select{class|category|protocol}0 '%1' in '%2' for target '%3'
new API ObjC selector '%0' in %select{class|category|protocol}1 '%2' in '%3' for target '%4'
SDKDB map has poison entry for %select{class|category|protocol}0 '%1'
skipping file '%0': %1
skipping framework '%0': %1
header marked symbol '%0' as unavailable
truncating current version '%0' to fit in 32-bit space used by old mach-o format
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
</array>
</plist>
keyword
identifier
string
number
text
typeIdentifier
internalParam
externalParam
unknown
super
superUSR
superSourceModule
hasException
categories
interface
interfaceUSR
interfaceSourceModule
project
globals
interfaces
protocols
enums
typedefs
structs
missing name in json api object
file
line
introduced
deprecated
obsoleted
unavailable
unconditionallyDeprecated
SPIAvailable
malformed introduced version
malformed deprecated version
malformed obsoleted version
access
public
private
Unknown access 
kind
function
variable
Unknown GVKind 
linkage
exported
re-exported
internal
external
Unknown Linkage 
weakDefined
weakReferenced
threadLocalValue
attr
attribute should be string
dynamic
Unknown property attr 
protected
package
Unknown access control 
declName
start
Missing 'start' or 'end' in range
docComment
lines
Missing 'lines' in docComment object
Expect to be JSON Object
text
Missing 'text' in docComment line
range
Missing 'range' in docComment line
spelling
Missing 'spelling' in declaration fragment
Missing 'kind' in declaration fragment
preciseIdentifier
declarationFragments
functionSignature
returns
Expect to be a JSON Array
parameters
Expect to be a JSON Object
Missing 'name' in function signature parameter
Missing 'declarationFragments' in function signature parameter
subHeading
sourceModule
type
typeUSR
typeSourceModule
instanceMethods
classMethods
method should be an object
optional
properties
property should be an object
cannot find getter
cannot find setter
ivars
ivar should be an object
constants
enum constant should be an object
fields
struct field should be an object
expected filetype
stub
bundle
un-expected filetype: 
currentVersion
expected currentVersion
compatibilityVersion
expected compatibilityVersion
installName
missing install name
uuid
parentUmbrella
twoLevelNamespace
appExtensionSafe
allowableClients
allowableClient is not string
reexportedLibraries
reexportedLibrary is not string
potentially defined selector is not string
potentiallyDefinedSelectors
binaryInfo
Input triple is not expected
char16_t
char32_t
accessControl
swiftABI
macros:
globals:
  - name: 
enums:
- name: 
  constants:
structs:
  fields:
    kind: 
instance
    isOptional: 
    isDynamic: 
    attributes:
 readonly
 dynamic
 class
    getter name: 
    setter name: 
    access: 
private
protected
public
package
objective-c interfaces:
  superClassName: 
  superClassUSR: 
  hasExceptionAttribute: 
  categories:
  protocols:
  methods:
  properties:
  instance variables:
objective-c categories:
  interfaceName: 
objective-c protocols:
type defs:
  type USR: 
  access: 
declName: 
  isWeakDefined: 
  isThreadLocalValue: 
  kind: 
USR: 
  loc: 
  availability: 
  linkage: 
 (deprecated)
 (spi)
required field 'type' not specified
unsupported header type
required field 'path' not specified
swiftCompatibilityHeader
expect a JSON object
not a JSON object
required field 'version' not specified
invalid version number
unsupported version
headers
/(.+)\.framework/(.+)?Headers/(.+)
mach-o bundle
mach-o dynamic library
mach-o dynamic library stub
tbd-v
cannot remove last architecture slice '
install names do not match
current versions do not match
compatibility versions do not match
swift ABI versions do not match
two level namespace flags do not match
application extension safe flags do not match
installapi flags do not match
 (for architecture 
file: 
 does not contain architecture: 
macos
tvos
watchos
bridgeos
driverkit
sepos
Requested architectures don't exist
unknown/unsupported architecture
__objc_imageinfo
unsupported file type
no such architecture
!tapi-tbd-v1
tag:yaml.org,2002:map
!tapi-tbd-v2
!tapi-tbd-v3
tapi-tbd-v1
archs
uuids
flags
swift-version
swift-abi-version
objc-constraint
parent-umbrella
exports
undefineds
zippered
macosx
unknown enumerated scalar
maccatalyst
flat_namespace
not_app_extension_safe
retain_release
retain_release_for_simulator
retain_release_or_gc
allowed-clients
re-exports
symbols
objc-classes
objc-eh-types
objc-ivars
weak-def-symbols
thread-local-symbols
weak-ref-symbols
!tapi-tbd
tbd-version
reexports
ios-simulator
tvos-simulator
watchos-simulator
failed to create target
value
clients
libraries
weak-symbols
x86_64h
armv4t
armv6
armv5
armv7
armv7s
armv7k
armv6m
armv7m
armv7em
arm64_32
arm64v8
invalid packed version string.
invalid Swift ABI version.
invalid uuid string pair
objective-cxx
objcxx
/System/Library/PrivateFrameworks/
.hpp
.hxx
(weak-def) 
(weak-ref) 
(tlv) 
(ObjC Class) 
(ObjC Class EH) 
(ObjC IVar) 
#EncryptedString#
4.1/4.2
5.0 or later
Unknown future swift version
__OBJC
__module_info
__OBJC2
__DATA_CONST
__DATA
__TEXT
__objc_classlist
__class_list
objc class section size is not a multiple of pointer size
__objc_catlist
__category_list
objc category section size is not a multiple of pointer size
__objc_protolist
__protocol_list
objc protocol section size is not a multiple of pointer size
__objc_selrefs
__objc_const
__objc_methname
ObjC Image Info section is too small
requested address not in section
Data extends pass the end of the section
Expect to read a none zero length string
string out of bound
__module_info is not a multiple of objc_module_t size
Symtab extends out of the range
Method list extends out of the range
Unsupported ObjC Runtime
vmaddr is encrypted
requested address out of bound
objc(cs)
objc(cy)
(im)
(cm)
(cpy)
(py)
objc(pl)
@macro@
@CM@
objc(ext)
@UD@
@NA@
@CT@
@UUT@
@FI@
@FT@
@UUV@
LIBCLANG_TIMING
LIBCLANG_OBJTRACKING
+++ %u translation units
--- %u translation units
LIBCLANG_DISABLE_PCH_VALIDATION
.pch
.pch-final
unknown module format
Clang front-end time report
Clang front-end timer
-%%%%%%%%
.tmp
clang -cc1 version 14.0.0
 default target 
 warning
 and 
 error
 generated
 when compiling for host
 when compiling for 
reading_modules
Reading modules
preloading.
Preloading 
loading.
Loading 
 -> 
_Private
modules.timestamp
.pcm
.timestamp
modules.idx
__inferred_module.map
module_private.map
module.map
module.private.modulemap
LLBUILD_TASK_ID
line-tables-only
line-directives-only
constructor
limited
unused-types
mangled
per-pass-run
thin
memprof.profraw
return
branch
pass
pass-missed
pass-analysis
-fno-legacy-pass-manager
-x ir
-fxray-instrumentation-bundle=
global-dynamic
-fdiagnostics-show-hotness
-fsanitize-recover=
-fsanitize-trap=
expected
note
remark
undef-prefix
no-pass
no-pass-analysis
no-pass-missed
-verify-ignore-unexpected=
opencl-c-base.h
opencl-c.h
fast-honor-pragmas
11.0
12.0
latest
non-leaf
b_key
+nullptrToBoolConversion
-nullptrToBoolConversion
+messageToSelfInClassMethodIdReturnType
-messageToSelfInClassMethodIdReturnType
+disableInferNewAvailabilityFromInit
-disableInferNewAvailabilityFromInit
+allowFormatVoidPointerWithStringSpecifier
-allowFormatVoidPointerWithStringSpecifier
+allowFormatBooleanCheck
-allowFormatBooleanCheck
+allowKRDefinitionsWithoutWstrictPrototypes
-allowKRDefinitionsWithoutWstrictPrototypes
+allowStaticMemberInAnonymousUnion
-allowStaticMemberInAnonymousUnion
+allowStaticMemberInLocalRecord
-allowStaticMemberInLocalRecord
+disableNeonImmediateRangeCheck
-disableNeonImmediateRangeCheck
+disableNonDependentMemberExprInCurrentInstantiation
-disableNonDependentMemberExprInCurrentInstantiation
+fixedEnumsInClassScopeCXX98
-fixedEnumsInClassScopeCXX98
+disableNullSanitizerCheckForPointerSanitizer
-disableNullSanitizerCheckForPointerSanitizer
+disableOVEimplicitConv
-disableOVEimplicitConv
+zeroInitializeGlobalsBeforeEvaluating
-zeroInitializeGlobalsBeforeEvaluating
+useNonPrimaryObjCCategoryDecl
-useNonPrimaryObjCCategoryDecl
+enableObjCNumericLiteralWithoutAt
-enableObjCNumericLiteralWithoutAt
+legacyAvailabilityTempWorkaround
-legacyAvailabilityTempWorkaround
+enableObjCImplicitClassTypeCoercion
-enableObjCImplicitClassTypeCoercion
+enableAggressiveVLAFolding
-enableAggressiveVLAFolding
+disablePtrauthPacError
-disablePtrauthPacError
+revert09abecef7bbf
-revert09abecef7bbf
+revertcff6dda604cb
-revertcff6dda604cb
+thisNoAlignAttr
-thisNoAlignAttr
+thisNoNullAttr
-thisNoNullAttr
-fsanitize=
iso9899:1990
gnu90
iso9899:1999
iso9899:2011
iso9899:2017
iso9899:2018
gnu18
c++03
gnu++03
clc++
libamsupport
libamsupport_static_host
libDER
bridgeOSSDKBinaries
Helsinki
libauthinstall
TatsuTools
OSPersonalization
OSLicenseAgreement
AudioDSPManager
corecrypto
-fdefault-calling-conv
mode
cfg-implicit-dtors
cfg-temporary-dtors
cfg-lifetime
cfg-loopexit
cfg-rich-constructors
cfg-scopes
cfg-expand-default-aggr-inits
c++-template-inlining
c++-stdlib-inlining
c++-allocator-inlining
c++-shared_ptr-inlining
c++-temp-dtor-inlining
suppress-null-return-paths
avoid-suppressing-null-argument-paths
suppress-inlined-defensive-checks
c++-container-inlining
suppress-c++-stdlib
crosscheck-with-z3
report-in-main-source-file
stable-report-filename
verbose-report-filename
serialize-stats
objc-inlining
prune-paths
add-pop-up-notes
cfg-conditional-static-initializers
faux-bodies
elide-constructors
inline-lambdas
widen-loops
unroll-loops
notes-as-events
aggressive-binary-operation-simplification
eagerly-assume
experimental-enable-naive-ctu-analysis
expand-macros
display-ctu-progress
track-conditions
track-conditions-debug
apply-fixits
display-checker-name
support-symbolic-integer-casts
consider-single-element-arrays-as-flexible-array-members
assume-controlled-environment
ignore-bison-generated-files
ignore-flex-generated-files
ctu-import-threshold
ctu-import-cpp-threshold
ipa-always-inline-size
graph-trim-interval
min-cfg-size-treat-functions-as-large
max-symbol-complexity
max-times-inline-large
max-inlinable-size
max-nodes
region-store-small-struct-limit
ctu-dir
ctu-index-name
ctu-invocation-list
model-path
c++-inlining
exploration_strategy
silence-checkers
-cl-kernel-arg-info
-cl-mad-enable
-cl-fp32-correctly-rounded-divide-sqrt
-cl-uniform-work-group-size
-fno-hip-fp32-correctly-rounded-divide-sqrt
-fno-autolink
-fembed-bitcode=
bitcode
marker
always
never
unspecified
dwarf
sjlj
wasm
maytrap
runtime
global
integer
multiple
virtual
Accelerate
libmvec
MASSV
SVML
Darwin_libsystem_m
best
pattern
local-dynamic
initial-exec
local-exec
default
hidden
posix
mixed
lldb
this
arguments
zlib
rwpi
dynamic-no-pic
llvm
csllvm
msvc
check
modify
migrate
libc++
libstdc++
legacy
non-legacy
cdecl
fastcall
stdcall
vectorcall
regcall
char
short
2020
2017
1.2.1
sycl-1.2.1
-mwatch-bitcode-compatibility
-fprofile-sample-use=
-fprofile-sample-accurate
-fprofile-remapping-file=
-fprofile-filter-files=
-fprofile-exclude-files=
-fprofile-update=
-fpseudo-probe-for-profiling
-fswift-async-fp=
-fno-dwarf-directory-asm
-femulated-tls
-fsymbol-partition=
-fsanitize-coverage-allowlist=
-fsanitize-coverage-ignorelist=
-fsanitize-memory-track-origins=
-fsanitize-memory-use-after-dtor
-fsanitize-address-use-after-scope
-fsanitize-address-use-after-return=
-fsanitize-address-poison-custom-array-cookie
-fsanitize-address-globals-dead-stripping
-fsanitize-address-use-odr-indicator
-fsanitize-address-destructor=
-fsanitize-minimal-runtime
-fsanitize-cfi-cross-dso
-fsanitize-cfi-icall-generalize-pointers
-fsanitize-cfi-canonical-jump-tables
-fsanitize-stats
-fsanitize-undefined-strip-path-components=
-fno-strict-float-cast-overflow
-frewrite-map-file=
-finstrument-functions
-finstrument-functions-after-inlining
-finstrument-function-entry-bare
-fxray-instruction-threshold=
-fxray-ignore-loops
-fno-xray-function-index
-fxray-function-groups=
-fxray-selected-function-group=
-ffine-grained-bitfield-accesses
-fthin-link-bitcode=
-fms-volatile
-fveclib=
-fno-use-cxa-atexit
-fobjc-msgsend-selector-stubs
-fin-descriptor-block-flags
-fgeneric-block-helpers
-fgeneric-block-helpers-use-extended-layout
-fobjc-avoid-heapify-local-blocks
-fpatchable-function-entry=
-fno-preserve-as-comments
-fsplit-stack
-fstack-clash-protection
-ftime-report
-ftime-report=
-ftls-model=
-ftrap-function=
-freroll-loops
-fregister-global-dtors-with-atexit
-fno-use-init-array
-fwhole-program-vtables
-fforce-emit-vtables
-ffunction-sections
-fbasic-block-sections=
-stack-usage-file
-fsplit-machine-functions
-fno-strict-return
-fdebug-ranges-base-address
-fsplit-dwarf-inlining
-gdwarf64
-gcodeview
-gno-inline-line-tables
-gstrict-dwarf
-mtls-size=
-mstackrealign
-mstack-probe-size=
-faapcs-bitfield-load
-fno-aapcs-bitfield-width
-mno-amdgpu-ieee
-mbackchain
-msoft-float
-mprefer-vector-width=
-mstack-protector-guard=
-mstack-protector-guard-offset=
-mstack-protector-guard-reg=
-mfentry
-mnop-mcount
-mrecord-mcount
-mpacked-stack
-fno-integrated-as
-debug-info-macro
-default-function-attr
-debugger-tuning=
-extend-lifetimes=
-record-command-line
-compress-debug-sections=
--mrelax-relocations
-mrelocation-model
-disable-lifetime-markers
-disable-O0-optnone
-disable-red-zone
-dwarf-ext-refs
-dwarf-explicit-import
-fmerge-functions
-dump-coverage-mapping
-fuse-register-sized-bitfield-access
-relaxed-aliasing
-no-struct-path-tbaa
-mdebug-pass
-mframe-pointer=
-mdisable-tail-calls
-mregparm
-msmall-data-limit
-funwind-tables=
-vectorize-loops
-fapple-kext-vtable-mitigation
--linker-option=
-fsanitize-coverage-type=
-fsanitize-coverage-indirect-calls
-fsanitize-coverage-trace-bb
-fsanitize-coverage-trace-cmp
-fsanitize-coverage-trace-div
-fsanitize-coverage-trace-gep
-fsanitize-coverage-8bit-counters
-fsanitize-coverage-inline-8bit-counters
-fsanitize-coverage-inline-bool-flag
-fsanitize-coverage-pc-table
-fsanitize-coverage-trace-pc
-fsanitize-coverage-trace-pc-guard
-fsanitize-coverage-no-prune
-fsanitize-coverage-stack-depth
-fpatchable-function-entry-offset=
-fprofile-instrument=
-flto-visibility-public-std
-flto-unit
-fdebug-pass-manager
-fexperimental-debug-variable-locations
-fverify-debuginfo-preserve
-fverify-debuginfo-preserve-export=
-fwarn-stack-size=
-cfguard
-enable-noundef-analysis
-discard-value-names
-split-dwarf-output
-split-dwarf-file
-fobjc-dispatch-method=
-fpreserve-vec3-type
-fpass-by-value-is-noalias
-fexperimental-optimized-argument-temporaries
ieee
Not an integer: %s
-Wundef-prefix=
-fno-caret-diagnostics
-fdiagnostics-parseable-fixits
-fdiagnostics-print-source-range-info
-fdiagnostics-show-note-include-stack
-fdiagnostics-show-template-tree
-fno-elide-type
-fmessage-length=
-fshow-overloads=
-fno-show-column
-pedantic-errors
-fdiagnostics-show-category
-fno-diagnostics-use-presumed-location
-fmacro-backtrace-limit
-ftemplate-backtrace-limit
-fcaret-diagnostics-max-lines
-Wno-rewrite-macros
-verify=
-cl-single-precision-constant
-cl-finite-math-only
-cl-unsafe-math-optimizations
-cl-fast-relaxed-math
-cl-no-signed-zeros
-fgpu-rdc
-fgpu-allow-device-init
-fgpu-defer-diag
--gpu-max-threads-per-block=
-fmax-tokens=
-fno-access-control
-fdouble-square-bracket-attributes
-fno-double-square-bracket-attributes
-fcoroutines-ts
-fno-gnu-inline-asm
-fprofile-list=
-fapinotes-modules
-fborland-extensions
-fcomment-block-commands=
-fparse-all-comments
-fcomplete-member-pointers
-fcf-runtime-abi=
-fconstant-array-class=
-fconstant-dictionary-class=
-fconstant-integer-number-class=
-fconstant-float-number-class=
-fconstant-double-number-class=
-fexperimental-new-constant-interpreter
-fdollars-in-identifiers
-fno-elide-constructors
-femit-all-decls
-fexceptions
-exception-model
-fignore-exceptions
-ffp-exception-behavior=
-fmath-errno
-fextend-arguments=
-ffixed-point
-fsanitize-address-field-padding=
-fapprox-func
-ffinite-math-only
-fprotect-parens
-ffreestanding
-fno-gnu-keywords
-fheinous-gnu-extensions
-fexperimental-strict-floating-point
-fxray-instrument
-fxray-always-instrument=
-fxray-never-instrument=
-fxray-attr-list=
-fxray-always-emit-customevents
-fxray-always-emit-typedevents
-flax-vector-conversions=
-fms-compatibility
-fms-extensions
-fdelayed-template-parsing
-fms-memptr-rep=
-fno-declspec
-fmodules-ts
-fmodules-strict-decluse
-fmodules-decluse
-fmodules-search-all
-fdigraphs
-fno-digraphs
-fno-operator-names
-fobjc-exceptions
-fsized-deallocation
-fnew-alignment=
-fno-openmp-extensions
-fpack-struct=
-fropi
-fchar8_t
-fno-char8_t
-fstack-check
-ftrivial-auto-var-init=
-ftrivial-auto-var-zero-init-max-size=
-ftrivial-auto-var-init-skip-cpp-obj
-ftrivial-auto-var-init-skip-non-pod
-ftrivial-auto-var-init-skip-stl
-ftrivial-auto-var-init-skip-non-ptr-array
-Wlarge-by-value-copy=
-fno-threadsafe-statics
-fvisibility-from-dllstorageclass
-fvisibility-dllexport=
-fvisibility-nodllstorageclass=
-fvisibility-externs-dllimport=
-fvisibility-externs-nodllstorageclass=
-fvisibility-inlines-hidden
-fvisibility-inlines-hidden-static-local-var
-fvisibility-global-new-delete-hidden
-fnew-infallible
-fwritable-strings
-fenable-matrix
-mdouble=
-malign-double
-mdarwin-stkchk-strong-link
-ffuchsia-api-level=
-mms-bitfields
-mthread-model
-mcmse
-mvscale-min=
-mvscale-max=
-fzvector
-print-ivar-layout
-pthread
-faltivec-src-compat=
-fexperimental-optimized-noescape
-fsemantic-interposition
-fpadding-on-unsigned-fixed-point
-fdump-vtable-layouts
-menable-no-infs
-fno-dllexport-inlines
-fno-modules-error-recovery
-fmodule-feature
-fmodules-local-submodule-visibility
-fmodules-hash-error-diagnostics
-fodr-hash-attributes
-fno-odr-hash-categories
-fno-odr-hash-interfaces
-fno-odr-hash-protocols
-fno-odr-hash-records
-fno-odr-hash-properties
-fno-odr-hash-ivars
-fno-odr-hash-methods
-fno-concept-satisfaction-caching
-fno-recovery-ast
-fno-recovery-ast-type
-fdump-record-layouts-simple
-fdump-record-layouts-canonical
-fdump-record-layouts-complete
-fdump-record-layouts
-building-pch-with-obj
-faligned-alloc-unavailable
-fblocks-runtime-optional
-fno-wchar
-fconstant-string-class
-disable-objc-default-synthesize-properties
-fencode-extended-block-signature
-pic-is-pie
-stack-protector
-ftype-visibility
-fapply-global-visibility-to-externs
-ftemplate-depth
-fconstexpr-depth
-fconstexpr-steps
-fbracket-depth
-fconst-strings
-fno-bitfield-type-align
-ffake-address-space-map
-faddress-space-map-mangling=
-funknown-anytype
-fdebugger-support
-fdebugger-cast-result-to-id
-fdebugger-objc-literal
-fdeprecated-macro
-vtordisp-mode=
-fnative-half-type
-fnative-half-arguments-and-returns
-fdefault-calling-conv=
-fwchar-type=
-fcompatibility-qualified-id-block-type-checking
-fcuda-is-device
-fcuda-allow-variadic-functions
-fno-cuda-host-device-constexpr
-fsycl-is-device
-fsycl-is-host
-sycl-std=
-fcuda-approx-transcendentals
itanium
applearm64
aarch64
mips
webassembly
fuchsia
microsoft
Objective-C
Objective-C++
OpenCL
C++ for OpenCL
CUDA
RenderScript
LLVM IR
region
html-single-file
plist-multi-file
plist-html
sarif
sarif-html
text-minimal
statement
block
noredundancy
deep
externalDefMap.txt
invocations.yaml
destructors
unexplored_first_queue
inlining
dynamic-bifurcate
'track-conditions' to also be enabled
a filename
a boolean
an unsigned
debug.AnalysisOrder
debug.Stats
alpha.security.ArrayBound
alpha.security.ArrayBoundV2
osx.cocoa.AutoreleaseWrite
alpha.unix.BlockInCriticalSection
alpha.core.BoolAssignment
core.builtin.BuiltinFunctions
alpha.core.C11Lock
osx.coreFoundation.CFError
debug.DumpCFG
debug.ViewCFG
osx.coreFoundation.CFNumber
osx.coreFoundation.CFRetainRelease
alpha.unix.cstring.BufferOverlap
unix.cstring.CStringModeling
alpha.unix.cstring.NotNullTerminated
unix.cstring.NullArg
alpha.unix.cstring.OutOfBounds
unix.cstring.BadSizeArg
cplusplus.SelfAssignment
core.CallAndMessage
core.CallAndMessageModeling
debug.DumpCalls
debug.DumpCallGraph
debug.ViewCallGraph
alpha.core.CastSize
alpha.core.CastToStruct
apiModeling.llvm.CastValue
alpha.unix.Chroot
osx.cocoa.ClassRelease
alpha.clone.CloneChecker
debug.ConfigDumper
alpha.cplusplus.ContainerModeling
debug.DumpControlDependencies
alpha.core.Conversion
valist.CopyToSelf
deadcode.DeadStores
debug.DebugContainerModeling
debug.DebugIteratorModeling
alpha.cplusplus.DeleteWithNonVirtualDtor
security.insecureAPI.DeprecatedOrUnsafeBufferHandling
core.NullDereference
alpha.osx.cocoa.DirectIvarAssignment
core.DivideZero
debug.DumpDominators
unix.DynamicMemoryModeling
alpha.core.DynamicTypeChecker
core.DynamicTypePropagation
optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
alpha.cplusplus.EnumCastOutOfRange
debug.ViewExplodedGraph
debug.ExprInspection
alpha.core.FixedAddr
security.FloatLoopCounter
fuchsia.HandleChecker
alpha.fuchsia.Lock
optin.performance.GCDAntipattern
apiModeling.google.GTest
alpha.security.taint.TaintPropagation
alpha.core.IdenticalExpr
cplusplus.InnerPointer
alpha.osx.cocoa.InstanceVariableInvalidation
alpha.security.cert.env.InvalidPtr
alpha.cplusplus.InvalidatedIterator
alpha.cplusplus.IteratorModeling
alpha.cplusplus.IteratorRange
alpha.osx.cocoa.IvarInvalidationModeling
alpha.llvm.Conventions
debug.DumpLiveExprs
debug.DumpLiveVars
osx.MIG
optin.mpi.MPI-Checker
osx.SecKeychainAPI
osx.API
unix.Malloc
alpha.security.MallocOverflow
unix.MallocSizeof
unix.MismatchedDeallocator
alpha.cplusplus.MismatchedIterator
alpha.osx.cocoa.MissingInvalidationMethod
alpha.security.MmapWriteExec
cplusplus.Move
osx.cocoa.NSAutoreleasePool
osx.cocoa.NSError
osx.NSOrCFErrorDerefChecker
cplusplus.NewDelete
cplusplus.NewDeleteLeaks
osx.cocoa.NilArg
core.builtin.NoReturnFunctions
webkit.NoUncountedMemberChecker
optin.osx.cocoa.localizability.NonLocalizedStringChecker
core.NonNullParamChecker
core.NonnilStringConstants
nullability.NullPassedToNonnull
nullability.NullReturnedFromNonnull
nullability.NullabilityBase
nullability.NullableDereferenced
nullability.NullablePassedToNonnull
nullability.NullableReturnedFromNonnull
osx.NumberObjectConversion
optin.osx.OSObjectCStyleCast
osx.OSObjectRetainCount
osx.cocoa.AtSync
osx.coreFoundation.containers.PointerSizedValues
osx.coreFoundation.containers.OutOfBounds
osx.cocoa.Dealloc
osx.cocoa.ObjCGenerics
osx.cocoa.Loops
osx.cocoa.IncompatibleMethodTypes
osx.cocoa.NonNilReturnValue
osx.ObjCProperty
osx.cocoa.SelfInit
osx.cocoa.MissingSuperCall
osx.cocoa.SuperDealloc
osx.cocoa.UnusedIvars
optin.performance.Padding
cplusplus.PlacementNew
alpha.osx.cocoa.localizability.PluralMisuseChecker
alpha.core.PointerArithm
alpha.nondeterminism.PointerIteration
alpha.nondeterminism.PointerSorting
alpha.core.PointerSub
debug.DumpPostDominators
alpha.core.PthreadLockBase
alpha.unix.PthreadLock
cplusplus.PureVirtualCall
alpha.security.cert.pos.34c
webkit.RefCntblBaseVirtualDtor
debug.ReportStmts
osx.cocoa.RetainCountBase
osx.cocoa.RetainCount
alpha.security.ReturnPtrRange
core.uninitialized.UndefReturn
apiModeling.llvm.ReturnValue
osx.cocoa.RunLoopAutoreleaseLeak
alpha.cplusplus.STLAlgorithmModeling
security.insecureAPI.SecuritySyntaxChecker
alpha.unix.SimpleStream
alpha.core.SizeofPtr
alpha.cplusplus.SmartPtr
cplusplus.SmartPtrModeling
alpha.core.StackAddressAsyncEscape
core.StackAddrEscapeBase
core.StackAddressEscape
alpha.unix.StdCLibraryFunctionArgs
apiModeling.StdCLibraryFunctions
debug.StdCLibraryFunctionsTester
alpha.unix.Stream
debug.StreamTester
cplusplus.StringChecker
debug.TaintTest
alpha.core.TestAfterDivZero
debug.DumpTraversal
apiModeling.TrustNonnull
apiModeling.TrustReturnsNonnull
security.insecureAPI.UncheckedReturn
alpha.webkit.UncountedCallArgsChecker
webkit.UncountedLambdaCapturesChecker
alpha.webkit.UncountedLocalVarsChecker
core.uninitialized.Branch
core.uninitialized.CapturedBlockVariable
core.UndefinedBinaryOperatorResult
core.uninitialized.ArraySubscript
core.uninitialized.Assign
valist.Uninitialized
optin.cplusplus.UninitializedObject
unix.API
optin.portability.UnixAPI
alpha.deadcode.UnreachableCode
valist.Unterminated
core.VLASize
valist.ValistBase
osx.cocoa.VariadicMethodTypes
unix.Vfork
optin.cplusplus.VirtualCall
cplusplus.VirtualCallModeling
security.insecureAPI.bcmp
security.insecureAPI.bcopy
security.insecureAPI.bzero
security.insecureAPI.decodeValueOfObjCType
security.insecureAPI.getpw
security.insecureAPI.gets
security.insecureAPI.mkstemp
security.insecureAPI.mktemp
security.insecureAPI.rand
security.insecureAPI.strcpy
security.insecureAPI.vfork
alpha.unix.cstring
alpha.clone
alpha
debug
nullability
optin.portability
unix.cstring
core.uninitialized
apiModeling.llvm
apiModeling.google
webkit
alpha.security.taint
alpha.cplusplus
alpha.osx.cocoa
alpha.security.cert
cplusplus
osx.coreFoundation.containers
osx.cocoa
optin.osx.cocoa.localizability
optin.osx
alpha.security
security
alpha.unix
alpha.core
optin.mpi
security.insecureAPI
alpha.apiModeling
unix
osx.coreFoundation
apiModeling
core
optin
alpha.security.cert.pos
alpha.fuchsia
alpha.deadcode
alpha.security.cert.env
alpha.nondeterminism
optin.cplusplus
optin.osx.cocoa
deadcode
optin.performance
alpha.osx.cocoa.localizability
core.builtin
alpha.llvm
alpha.osx
valist
alpha.webkit
ifs-v1
Invalid interface stub format: 
 is deprecated.
Must specify a valid interface stub format type, ie: -interface-stub-version=ifs-v1
-fsystem-module
-emit-module
ARC migration
ObjC migration
-cpp-output
-module-map
-header
clcpp
cuda
renderscript
assembler-with-cpp
<stdin>
-fptrauth-objc-isa-mode=sign-and-auth
strip
sign-and-strip
sign-and-auth
__CET__=1
__CET__=2
__CET__=3
-working-directory
-no-ns-alloc-error
-no-finalize-removal
-unoptimized-cfg
-analyzer-opt-analyze-headers
-analyzer-opt-analyze-nested-blocks
-analyzer-display-progress
-analyze-function
-trim-egraph
-analyzer-viz-egraph-graphviz
-analyzer-dump-egraph
-analyzer-inline-max-stack-depth
-analyzer-disable-retry-exhausted
-analyzer-max-loop
-analyzer-stats
-analyzer-disable-all-checks
-analyzer-checker-help
-analyzer-checker-help-alpha
-analyzer-checker-help-developer
-analyzer-config-help
-analyzer-list-enabled-checkers
-analyzer-checker-option-help
-analyzer-checker-option-help-alpha
-analyzer-checker-option-help-developer
-analyzer-config-compatibility-mode
-analyzer-werror
-arcmt-migrate-report-output
-arcmt-migrate-emit-errors
-objcmt-migrate-subscripting
-objcmt-migrate-all
-objcmt-migrate-readonly-property
-objcmt-migrate-readwrite-property
-objcmt-migrate-property-dot-syntax
-objcmt-migrate-annotation
-objcmt-migrate-instancetype
-objcmt-migrate-ns-macros
-objcmt-migrate-protocol-conformance
-objcmt-atomic-property
-objcmt-returns-innerpointer-property
-objcmt-ns-nonatomic-iosonly
-objcmt-migrate-designated-init
-objcmt-whitelist-dir-path=
-index-record-codegen-name
-index-unit-output-path
-index-ignore-macros
-index-ignore-pcms
--product-name=
-fno-temp-file
-ftime-trace
-ftime-trace-granularity=
-help
-relocatable-pch
-print-supported-cpus
-ast-merge
-aux-triple
-code-completion-macros
-code-completion-patterns
-no-code-completion-globals
-no-code-completion-ns-level-decls
-code-completion-brief-comments
-code-completion-with-fixits
-add-plugin
-ast-dump-filter
-fno-modules-global-index
-fmodules-embed-file=
-fmodules-embed-all-files
-fno-implicit-modules-use-lock
-ast-dump-decl-types
-ast-dump-lookups
-mt-migrate-directory
-arcmt-action=
-print-stats
-stats-file=
-fix-what-you-can
-fix-only-warnings
-fixit-recompile
-fixit-to-temporary
-foverride-record-layout=
-fno-pch-timestamp
-version
-fallow-pcm-with-compiler-errors
-fcuda-short-ptr
-mcmodel=
-meabi
-tune-cpu
-triple
-target-abi
-target-variant-triple
-target-linker-version
-cl-ext=
-fmodules-user-build-path
-fmodules-prune-interval=
-fmodules-prune-after=
-fbuild-session-timestamp=
-fmodules-validate-once-per-build-session
-fmodules-disable-diagnostic-validation
-fvalidate-ast-input-files-content
-nobuiltininc
-nostdinc++
-fmodule-map-file-home-is-cwd
-fmodule-format=
-nostdsysteminc
-fdisable-module-hash
-fmodules-hash-content
-fmodules-strict-context-hash
-imacros
-undef
-pch-through-hdrstop-create
-fobjc-arc-cxxlib=
-fno-validate-pch
-fallow-pch-with-compiler-errors
-fallow-pch-with-different-modules-cache-path
-dump-deserialized-decls
-detailed-preprocessing-record
-setup-static-analyzer
-disable-pragma-debug-crash
-frewrite-imports
-frewrite-includes
-fuse-line-directives
-fminimize-whitespace
-fshow-skipped-includes
-dependency-file
-dependency-dot
-module-file-deps
-header-include-file
<built-in>
 #${}^!
digraph "dependencies" {
 [ shape="box", label="
header_
expanded from here
expanded from macro '
(skipping 
 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
in file included from 
in module '
' imported from 
while building module '
STATISTICS FOR '
extern "C" {
#import "
#include "
.hpp
<module-includes>
PCH DECL: 
%0 was deserialized
Note: including file:
/usr/include
/usr/local/include
ignoring nonexistent directory "
/usr/include/c++/v1
/usr/lib/gcc
i686-pc-cygwin
4.7.3
4.5.3
4.3.4
4.3.2
/usr/include/c++/5.0
/usr/gnu/include/c++/4.4.3
/include/c++
/include/c++/
/include/c++/backward
/backward
../../..
/boot/system/non-packaged/develop/headers
/boot/system/develop/headers/os
/boot/system/develop/headers/os/app
/boot/system/develop/headers/os/arch
/boot/system/develop/headers/os/device
/boot/system/develop/headers/os/drivers
/boot/system/develop/headers/os/game
/boot/system/develop/headers/os/interface
/boot/system/develop/headers/os/kernel
/boot/system/develop/headers/os/locale
/boot/system/develop/headers/os/mail
/boot/system/develop/headers/os/media
/boot/system/develop/headers/os/midi
/boot/system/develop/headers/os/midi2
/boot/system/develop/headers/os/net
/boot/system/develop/headers/os/opengl
/boot/system/develop/headers/os/storage
/boot/system/develop/headers/os/support
/boot/system/develop/headers/os/translation
/boot/system/develop/headers/os/add-ons/graphics
/boot/system/develop/headers/os/add-ons/input_server
/boot/system/develop/headers/os/add-ons/mail_daemon
/boot/system/develop/headers/os/add-ons/registrar
/boot/system/develop/headers/os/add-ons/screen_saver
/boot/system/develop/headers/os/add-ons/tracker
/boot/system/develop/headers/os/be_apps/Deskbar
/boot/system/develop/headers/os/be_apps/NetPositive
/boot/system/develop/headers/os/be_apps/Tracker
/boot/system/develop/headers/3rdparty
/boot/system/develop/headers/bsd
/boot/system/develop/headers/glibc
/boot/system/develop/headers/posix
/boot/system/develop/headers
/usr/include/w32api
SCE_ORBIS_SDK_DIR
/target/include
/target/include_common
#include "..." search starts here:
#include <...> search starts here:
 (framework directory)
 (headermap)
End of search list.
ignoring duplicate directory "
  as it is a non-system directory that duplicates 
a system directory
cl_khr_byte_addressable_store
cl_khr_global_int32_base_atomics
cl_khr_global_int32_extended_atomics
cl_khr_local_int32_base_atomics
cl_khr_local_int32_extended_atomics
cl_khr_fp64
cl_khr_fp16
cl_khr_int64_base_atomics
cl_khr_int64_extended_atomics
cl_khr_3d_image_writes
cles_khr_int64
cl_khr_depth_images
cl_khr_gl_msaa_sharing
cl_khr_mipmap_image
cl_khr_mipmap_image_writes
cl_khr_srgb_image_writes
cl_khr_subgroups
cl_clang_storage_class_specifiers
__cl_clang_function_pointers
__cl_clang_variadic_functions
__cl_clang_non_portable_kernel_param_types
__cl_clang_bitfields
cl_amd_media_ops
cl_amd_media_ops2
cl_arm_integer_dot_product_int8
cl_arm_integer_dot_product_accumulate_int8
cl_arm_integer_dot_product_accumulate_int16
cl_arm_integer_dot_product_accumulate_saturate_int8
cl_intel_subgroups
cl_intel_subgroups_short
cl_intel_device_side_avc_motion_estimation
__opencl_c_pipes
__opencl_c_generic_address_space
__opencl_c_atomic_order_acq_rel
__opencl_c_atomic_order_seq_cst
__opencl_c_subgroups
__opencl_c_3d_image_writes
__opencl_c_device_enqueue
__opencl_c_read_write_images
__opencl_c_program_scope_global_variables
__opencl_c_fp64
__opencl_c_images
__opencl_c_int64
# 1 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
#define 
__llvm__
__clang__
__clang_major__
__clang_minor__
__clang_patchlevel__
__clang_version__
"14.0.0 
__GNUC__
__GNUC_MINOR__
__GNUC_PATCHLEVEL__
__GXX_ABI_VERSION
1002
__GNUG__
__GXX_WEAK__
__ATOMIC_RELAXED
__ATOMIC_CONSUME
__ATOMIC_ACQUIRE
__ATOMIC_RELEASE
__ATOMIC_ACQ_REL
__ATOMIC_SEQ_CST
__OPENCL_MEMORY_SCOPE_WORK_ITEM
__OPENCL_MEMORY_SCOPE_WORK_GROUP
__OPENCL_MEMORY_SCOPE_DEVICE
__OPENCL_MEMORY_SCOPE_ALL_SVM_DEVICES
__OPENCL_MEMORY_SCOPE_SUB_GROUP
__PRAGMA_REDEFINE_EXTNAME
__VERSION__
__STRICT_ANSI__
__GXX_EXPERIMENTAL_CXX0X__
__OBJC2__
OBJC_ZEROCOST_EXCEPTIONS
__OBJC_GC__
__NEXT_RUNTIME__
__OBJC_GNUSTEP_RUNTIME_ABI__
__OBJFW_RUNTIME_ABI__
IBOutlet
__attribute__((iboutlet))
IBOutletCollection(ClassName)
__attribute__((iboutletcollection(ClassName)))
IBAction
void)__attribute__((ibaction)
IBInspectable
IB_DESIGNABLE
__OBJC_BOOL_IS_BOOL
__CONSTANT_CFSTRINGS__
OBJC_NEW_PROPERTIES
__PASCAL_STRINGS__
__block
__attribute__((__blocks__(byref)))
__BLOCKS__
__EXCEPTIONS
__GXX_RTTI
__USING_SJLJ_EXCEPTIONS__
__SEH__
__ARM_DWARF_EH__
__DEPRECATED
__private_extern__
_WCHAR_T_DEFINED
_NATIVE_WCHAR_T_DEFINED
__clang_literal_encoding__
"UTF-8"
__clang_wide_literal_encoding__
"UTF-32"
"UTF-16"
__OPTIMIZE__
__OPTIMIZE_SIZE__
__FAST_MATH__
__ORDER_LITTLE_ENDIAN__
1234
__ORDER_BIG_ENDIAN__
4321
__ORDER_PDP_ENDIAN__
3412
__BYTE_ORDER__
__BIG_ENDIAN__
__LITTLE_ENDIAN__
_LP64
__LP64__
_ILP32
__ILP32__
__CHAR_BIT__
__SCHAR_MAX__
__SHRT_MAX__
__INT_MAX__
__LONG_MAX__
__LONG_LONG_MAX__
__WCHAR_MAX__
__WINT_MAX__
__INTMAX_MAX__
__SIZE_MAX__
__UINTMAX_MAX__
__PTRDIFF_MAX__
__INTPTR_MAX__
__UINTPTR_MAX__
__SIZEOF_DOUBLE__
__SIZEOF_FLOAT__
__SIZEOF_INT__
__SIZEOF_LONG__
__SIZEOF_LONG_DOUBLE__
__SIZEOF_LONG_LONG__
__SIZEOF_POINTER__
__SIZEOF_SHORT__
__SIZEOF_PTRDIFF_T__
__SIZEOF_SIZE_T__
__SIZEOF_WCHAR_T__
__SIZEOF_WINT_T__
__SIZEOF_INT128__
__INTMAX_TYPE__
__INTMAX
__INTMAX_C_SUFFIX__
__UINTMAX_TYPE__
__UINTMAX
__UINTMAX_C_SUFFIX__
__INTMAX_WIDTH__
__PTRDIFF_TYPE__
__PTRDIFF
__PTRDIFF_WIDTH__
__INTPTR_TYPE__
__INTPTR
__INTPTR_WIDTH__
__SIZE_TYPE__
__SIZE
__SIZE_WIDTH__
__WCHAR_TYPE__
__WCHAR_WIDTH__
__WINT_TYPE__
__WINT_WIDTH__
__SIG_ATOMIC_WIDTH__
__SIG_ATOMIC_MAX__
__CHAR16_TYPE__
__CHAR32_TYPE__
__UINTMAX_WIDTH__
__UINTPTR_TYPE__
__UINTPTR
__UINTPTR_WIDTH__
FLT16
LDBL
__POINTER_WIDTH__
__BIGGEST_ALIGNMENT__
__CHAR_UNSIGNED__
__WCHAR_UNSIGNED__
__WINT_UNSIGNED__
__USER_LABEL_PREFIX__
__FINITE_MATH_ONLY__
__GNUC_GNU_INLINE__
__GNUC_STDC_INLINE__
__GCC_ATOMIC_TEST_AND_SET_TRUEVAL
__CLANG_ATOMIC_
__GCC_ATOMIC_
__NO_INLINE__
__PIC__
__pic__
__PIE__
__pie__
__FLT_EVAL_METHOD__
__FLT_RADIX__
__DECIMAL_DIG__
__LDBL_DECIMAL_DIG__
__SSP__
__SSP_STRONG__
__SSP_ALL__
__clang_analyzer__
__FAST_RELAXED_MATH__
__weak
__attribute__((objc_gc(weak)))
__strong
__attribute__((objc_gc(strong)))
__autoreleasing
__unsafe_unretained
__attribute__((objc_ownership(weak)))
__attribute__((objc_ownership(strong)))
__attribute__((objc_ownership(autoreleasing)))
__attribute__((objc_ownership(none)))
__nonnull
_Nonnull
__null_unspecified
_Null_unspecified
__nullable
_Nullable
__APPLE_EMBEDDED_SIMULATOR__
_OPENMP
201107
201307
201511
201811
__CUDA_ARCH__
__CLANG_CUDA_APPROX_TRANSCENDENTALS__
__SYCL_DEVICE_ONLY__
__IMAGE_SUPPORT__
__GLIBCXX_TYPE_INT_N_0
__int128
__GLIBCXX_BITSIZE_INT_N_0
__cpp_rtti
199711L
__cpp_exceptions
__cpp_unicode_characters
200704L
__cpp_raw_strings
200710L
__cpp_unicode_literals
__cpp_user_defined_literals
200809L
__cpp_lambdas
200907L
__cpp_constexpr
201907L
201603L
201304L
200704
__cpp_constexpr_in_decltype
201711L
__cpp_range_based_for
200907
__cpp_static_assert
201411L
200410
__cpp_decltype
200707L
__cpp_attributes
__cpp_rvalue_references
200610L
__cpp_variadic_templates
__cpp_initializer_lists
200806L
__cpp_delegating_constructors
200604L
__cpp_nsdmi
__cpp_inheriting_constructors
201511L
__cpp_ref_qualifiers
__cpp_alias_templates
__cpp_threadsafe_static_init
__cpp_binary_literals
__cpp_digit_separators
201309L
__cpp_init_captures
201803L
__cpp_generic_lambdas
201707L
__cpp_decltype_auto
__cpp_return_type_deduction
__cpp_aggregate_nsdmi
__cpp_variable_templates
__cpp_sized_deallocation
__cpp_hex_float
__cpp_inline_variables
201606L
__cpp_noexcept_function_type
201510L
__cpp_capture_star_this
__cpp_if_constexpr
__cpp_deduction_guides
201703L
__cpp_template_auto
__cpp_namespace_attributes
__cpp_enumerator_attributes
__cpp_nested_namespace_definitions
__cpp_variadic_using
201611L
__cpp_aggregate_bases
__cpp_structured_bindings
__cpp_nontype_template_args
__cpp_fold_expressions
__cpp_guaranteed_copy_elision
__cpp_nontype_template_parameter_auto
__cpp_aligned_new
__cpp_template_template_args
__cpp_concepts
__cpp_conditional_explicit
201806L
__cpp_constexpr_dynamic_alloc
__cpp_constinit
__cpp_designated_initializers
__cpp_impl_three_way_comparison
__cpp_using_enum
__cpp_implicit_move
202011L
__cpp_size_t_suffix
__cpp_if_consteval
202106L
__cpp_char8_t
201811L
__cpp_impl_destroying_delete
__cpp_coroutines
ouxX
_FMT
5.9604644775390625e-8
1.40129846e-45
4.9406564584124654e-324
3.64519953188247460253e-4951
4.94065645841246544176568792868221e-324
6.47517511943802511092443895822764655e-4966
9.765625e-4
1.19209290e-7
2.2204460492503131e-16
1.08420217248550443401e-19
1.92592994438723585305597794258492732e-34
6.103515625e-5
1.17549435e-38
2.2250738585072014e-308
3.36210314311209350626e-4932
2.00416836000897277799610805135016e-292
3.36210314311209350626267781732175260e-4932
6.5504e+4
3.40282347e+38
1.7976931348623157e+308
1.18973149535723176502e+4932
1.79769313486231580793728971405301e+308
1.18973149535723176508575932662800702e+4932
DENORM_MIN__
HAS_DENORM__
DIG__
DECIMAL_DIG__
EPSILON__
HAS_INFINITY__
HAS_QUIET_NAN__
MANT_DIG__
MAX_10_EXP__
MAX_EXP__
MAX__
MIN_10_EXP__
MIN_EXP__
MIN__
__INT
__UINT
_TYPE__
_C_SUFFIX__
_MAX__
__INT_LEAST
__UINT_LEAST
__INT_FAST
__UINT_FAST
BOOL_LOCK_FREE
CHAR_LOCK_FREE
CHAR8_T_LOCK_FREE
CHAR16_T_LOCK_FREE
CHAR32_T_LOCK_FREE
WCHAR_T_LOCK_FREE
SHORT_LOCK_FREE
INT_LOCK_FREE
LONG_LOCK_FREE
LLONG_LOCK_FREE
POINTER_LOCK_FREE
_GLIBCXX_PREDEFINED_OBJC_ARC_IS_SCALAR
namespace std {
struct __true_type;
struct __false_type;
template<typename _Tp> struct __is_scalar;
template<typename _Tp>
struct __is_scalar<__attribute__((objc_ownership(strong))) _Tp> {
  enum { __value = 0 };
  typedef __false_type __type;
struct __is_scalar<__attribute__((objc_ownership(weak))) _Tp> {
struct __is_scalar<__attribute__((objc_ownership(autoreleasing)))
 _Tp> {
__STDC__
__STDC_HOSTED__
__STDC_VERSION__
202000L
201710L
201112L
199901L
199409L
__cplusplus
202101L
202002L
201402L
201103L
__STDCPP_DEFAULT_NEW_ALIGNMENT__
__STDCPP_THREADS__
__STDC_UTF_16__
__STDC_UTF_32__
__OBJC__
__OPENCL_CPP_VERSION__
202100
__CL_CPP_VERSION_1_0__
__CL_CPP_VERSION_2021__
__OPENCL_C_VERSION__
CL_VERSION_1_0
CL_VERSION_1_1
CL_VERSION_1_2
CL_VERSION_2_0
CL_VERSION_3_0
__ENDIAN_LITTLE__
CL_SYCL_LANGUAGE_VERSION
SYCL_LANGUAGE_VERSION
202001
__ASSEMBLER__
__CUDA__
__HIP__
__HIPCC__
__HIP_DEVICE_COMPILE__
#undef 
#__include_macros "
*** Dumping AST Record Layout
struct 
class 
union 
 Size:
Alignment:
sizeof=
align=
FieldOffsets: [
    <dict>
      <key>level</key>
      
      <key>filename</key>
      <key>line</key>
      <key>column</key>
      <key>message</key>
      <key>ID</key>
      <key>WarningOption</key>
    </dict>
<dict>
  <key>main-file</key>
  <key>dwarf-debug-flags</key>
  <key>diagnostics</key>
  <array>
  </array>
</dict>
<string>
&amp;
&lt;
&gt;
&apos;
&quot;
</string>
ignored
fatal error
<integer>
</integer>
vfs.yaml
#define 
__VA_ARGS__
#pragma 
fatal
disable
once
suppress
Meta
Version
Diag
DiagInfo
SrcRange
CatName
DiagFlag
FileName
FixIt
Invalid encoding
Unexpected end of file reading %u of %u bits
Unexpected end of file reading %u of %u bytes
can't skip block: already at end of stream
can't skip to bit %zu from %llu
clang.serialized_diags
Failed to open diagnostics file
Invalid diagnostics signature
Parse error reading diagnostics
Malformed block at top-level of diagnostics
Malformed sub-block in a diagnostic
Malformed BlockInfo block
Malformed Metadata block
Malformed Diagnostic block
Malformed Diagnostic record
No version provided in diagnostics
Unsupported diagnostics version
Bitcode constructs that are not supported in diagnostics appear
Generic error occurred while handling a record
Hello from 
Failed reading rec code: %s
Read extension block message: %s
note: 
remark: 
warning: 
error: 
fatal error: 
In file included from 
In included file:
In module '
While building module '
fix-it:"
  ...
     
<U+>
<XX>
 [-ferror-limit=]
 [-Werror
warn
string
regex
  File *
  File 
 Line *
 Line 
 (directive at 
  (frontend)
 File 
input
bind-arch
offload
preprocessor
precompiler
header-module-precompiler
api-extractor
analyzer
migrator
compiler
backend
assembler
interface-stub-merger
linker
lipo
dsymutil
verify-debug-info
verify-pch
clang-offload-bundler
clang-offload-unbundler
clang-offload-wrapper
static-lib-linker
device-cuda
device-openmp
device-hip
host
-cuda
-hip
-openmp
cuda
openmp
/etc/redhat-release
release 7
release 6
release 5
/etc/debian_version
/etc/SuSE-release
/etc/gentoo-release
/etc/os-release
/usr/lib/os-release
/etc/lsb-release
flang
Command line argument parsing
--no-demangle
-MMD
819.6
-fopenmp
nvptx64-nvidia-cuda
nvptx-nvidia-cuda
.cfg
Compilation construction
FORCE_CLANG_DIAGNOSTICS_CRASH
COMPILER_PATH
-clang-vendor-feature=+messageToSelfInClassMethodIdReturnType
-clang-vendor-feature=+disableInferNewAvailabilityFromInit
-clang-vendor-feature=+disableNeonImmediateRangeCheck
-clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation
-Xlinker
-disable-aligned-alloc-awareness=1
-clang-vendor-feature=+enableAggressiveVLAFolding
-clang-vendor-feature=+revert09abecef7bbf
-clang-vendor-feature=+thisNoAlignAttr
-clang-vendor-feature=+thisNoNullAttr
{0} [options] file...
flang-new
Target: 
Thread model: 
InstalledDir: 
Configuration file: 
System configuration file directory: 
User configuration file directory: 
programs: =
libraries: =
builtins
libgcc.a
Building universal build actions
Building compilation actions
Constructing phase actions
Building compilation jobs
thinLTO on AIX
-wrapper
 - "
", inputs: [
], output: 
], outputs: [
a.exe
a.out
Computing output path
-%%%%%%.
.out
LLVM_DIAGNOSTIC_DIR
amdgcn-amd-amdhsa
-unknown-gnu
-pc-gnu
hurd
OBJECT_MODE
-miamcu
i586
intel
rv32
rv64
-apple-
-Wno-reorder-init-list
-Wno-implicit-int-float-conversion
-Wno-c99-designator
-Wno-final-dtor-non-final-class
-Wno-extra-semi-stmt
-Wno-misleading-indentation
-Wno-quoted-include-in-framework-header
-Wno-implicit-fallthrough
-Wno-enum-enum-conversion
-Wno-enum-float-conversion
-Wno-elaborated-enum-base
-Wno-reserved-identifier
-Wno-gnu-folding-constant
-Wno-cast-function-type
-Wno-bitwise-instead-of-logical
-Wno-error=objc-signed-char-bool-implicit-int-conversion
-Wno-error=tautological-constant-compare
-Wno-error=unused-but-set-variable
-Wno-error=shadow
-Wno-error=unused-but-set-parameter
random
(input arg)
(nothing)
output=
, total=
%.3f
, user=
, mem=
ERROR: Cannot lock file 
debug.AnalysisOrder,debug.Stats,alpha.security.ArrayBound,alpha.security.ArrayBoundV2,osx.cocoa.AutoreleaseWrite,alpha.unix.BlockInCriticalSection,alpha.core.BoolAssignment,core.builtin.BuiltinFunctions,alpha.core.C11Lock,osx.coreFoundation.CFError,debug.DumpCFG,debug.ViewCFG,osx.coreFoundation.CFNumber,osx.coreFoundation.CFRetainRelease,alpha.unix.cstring.BufferOverlap,unix.cstring.CStringModeling,alpha.unix.cstring.NotNullTerminated,unix.cstring.NullArg,alpha.unix.cstring.OutOfBounds,unix.cstring.BadSizeArg,cplusplus.SelfAssignment,core.CallAndMessage,core.CallAndMessageModeling,debug.DumpCalls,debug.DumpCallGraph,debug.ViewCallGraph,alpha.core.CastSize,alpha.core.CastToStruct,apiModeling.llvm.CastValue,alpha.unix.Chroot,osx.cocoa.ClassRelease,alpha.clone.CloneChecker,debug.ConfigDumper,alpha.cplusplus.ContainerModeling,debug.DumpControlDependencies,alpha.core.Conversion,valist.CopyToSelf,deadcode.DeadStores,debug.DebugContainerModeling,debug.DebugIteratorModeling,alpha.cplusplus.DeleteWithNonVirtualDtor,security.insecureAPI.DeprecatedOrUnsafeBufferHandling,core.NullDereference,alpha.osx.cocoa.DirectIvarAssignment,core.DivideZero,debug.DumpDominators,unix.DynamicMemoryModeling,alpha.core.DynamicTypeChecker,core.DynamicTypePropagation,optin.osx.cocoa.localizability.EmptyLocalizationContextChecker,alpha.cplusplus.EnumCastOutOfRange,debug.ViewExplodedGraph,debug.ExprInspection,alpha.core.FixedAddr,security.FloatLoopCounter,fuchsia.HandleChecker,alpha.fuchsia.Lock,optin.performance.GCDAntipattern,apiModeling.google.GTest,alpha.security.taint.TaintPropagation,alpha.core.IdenticalExpr,cplusplus.InnerPointer,alpha.osx.cocoa.InstanceVariableInvalidation,alpha.security.cert.env.InvalidPtr,alpha.cplusplus.InvalidatedIterator,alpha.cplusplus.IteratorModeling,alpha.cplusplus.IteratorRange,alpha.osx.cocoa.IvarInvalidationModeling,alpha.llvm.Conventions,debug.DumpLiveExprs,debug.DumpLiveVars,osx.MIG,optin.mpi.MPI-Checker,osx.SecKeychainAPI,osx.API,unix.Malloc,alpha.security.MallocOverflow,unix.MallocSizeof,unix.MismatchedDeallocator,alpha.cplusplus.MismatchedIterator,alpha.osx.cocoa.MissingInvalidationMethod,alpha.security.MmapWriteExec,cplusplus.Move,osx.cocoa.NSAutoreleasePool,osx.cocoa.NSError,osx.NSOrCFErrorDerefChecker,cplusplus.NewDelete,cplusplus.NewDeleteLeaks,osx.cocoa.NilArg,core.builtin.NoReturnFunctions,webkit.NoUncountedMemberChecker,optin.osx.cocoa.localizability.NonLocalizedStringChecker,core.NonNullParamChecker,core.NonnilStringConstants,nullability.NullPassedToNonnull,nullability.NullReturnedFromNonnull,nullability.NullabilityBase,nullability.NullableDereferenced,nullability.NullablePassedToNonnull,nullability.NullableReturnedFromNonnull,osx.NumberObjectConversion,optin.osx.OSObjectCStyleCast,osx.OSObjectRetainCount,osx.cocoa.AtSync,osx.coreFoundation.containers.PointerSizedValues,osx.coreFoundation.containers.OutOfBounds,osx.cocoa.Dealloc,osx.cocoa.ObjCGenerics,osx.cocoa.Loops,osx.cocoa.IncompatibleMethodTypes,osx.cocoa.NonNilReturnValue,osx.ObjCProperty,osx.cocoa.SelfInit,osx.cocoa.MissingSuperCall,osx.cocoa.SuperDealloc,osx.cocoa.UnusedIvars,optin.performance.Padding,cplusplus.PlacementNew,alpha.osx.cocoa.localizability.PluralMisuseChecker,alpha.core.PointerArithm,alpha.nondeterminism.PointerIteration,alpha.nondeterminism.PointerSorting,alpha.core.PointerSub,debug.DumpPostDominators,alpha.core.PthreadLockBase,alpha.unix.PthreadLock,cplusplus.PureVirtualCall,alpha.security.cert.pos.34c,webkit.RefCntblBaseVirtualDtor,debug.ReportStmts,osx.cocoa.RetainCountBase,osx.cocoa.RetainCount,alpha.security.ReturnPtrRange,core.uninitialized.UndefReturn,apiModeling.llvm.ReturnValue,osx.cocoa.RunLoopAutoreleaseLeak,alpha.cplusplus.STLAlgorithmModeling,security.insecureAPI.SecuritySyntaxChecker,alpha.unix.SimpleStream,alpha.core.SizeofPtr,alpha.cplusplus.SmartPtr,cplusplus.SmartPtrModeling,alpha.core.StackAddressAsyncEscape,core.StackAddrEscapeBase,core.StackAddressEscape,alpha.unix.StdCLibraryFunctionArgs,apiModeling.StdCLibraryFunctions,debug.StdCLibraryFunctionsTester,alpha.unix.Stream,debug.StreamTester,cplusplus.StringChecker,debug.TaintTest,alpha.core.TestAfterDivZero,debug.DumpTraversal,apiModeling.TrustNonnull,apiModeling.TrustReturnsNonnull,security.insecureAPI.UncheckedReturn,alpha.webkit.UncountedCallArgsChecker,webkit.UncountedLambdaCapturesChecker,alpha.webkit.UncountedLocalVarsChecker,core.uninitialized.Branch,core.uninitialized.CapturedBlockVariable,core.UndefinedBinaryOperatorResult,core.uninitialized.ArraySubscript,core.uninitialized.Assign,valist.Uninitialized,optin.cplusplus.UninitializedObject,unix.API,optin.portability.UnixAPI,alpha.deadcode.UnreachableCode,valist.Unterminated,core.VLASize,valist.ValistBase,osx.cocoa.VariadicMethodTypes,unix.Vfork,optin.cplusplus.VirtualCall,cplusplus.VirtualCallModeling,security.insecureAPI.bcmp,security.insecureAPI.bcopy,security.insecureAPI.bzero,security.insecureAPI.decodeValueOfObjCType,security.insecureAPI.getpw,security.insecureAPI.gets,security.insecureAPI.mkstemp,security.insecureAPI.mktemp,security.insecureAPI.rand,security.insecureAPI.strcpy,security.insecureAPI.vfork,alpha.unix.cstring,alpha.clone,alpha,debug,nullability,optin.portability,unix.cstring,core.uninitialized,apiModeling.llvm,apiModeling.google,webkit,alpha.security.taint,alpha.cplusplus,alpha.osx.cocoa,alpha.security.cert,cplusplus,osx.coreFoundation.containers,osx.cocoa,optin.osx.cocoa.localizability,optin.osx,alpha.security,security,alpha.unix,alpha.core,optin.mpi,security.insecureAPI,alpha.apiModeling,unix,osx.coreFoundation,apiModeling,core,optin,alpha.security.cert.pos,alpha.fuchsia,alpha.deadcode,alpha.security.cert.env,alpha.nondeterminism,optin.cplusplus,fuchsia,optin.osx.cocoa,deadcode,optin.performance,alpha.osx.cocoa.localizability,core.builtin,alpha.llvm,alpha.osx,valist,osx,llvm,alpha.webkit,
-analyzer-checker
c89,c90,iso9899:1990,iso9899:199409,gnu89,gnu90,c99,iso9899:1999,c9x,iso9899:199x,gnu99,gnu9x,c11,iso9899:2011,c1x,iso9899:201x,gnu11,gnu1x,c17,iso9899:2017,c18,iso9899:2018,gnu17,gnu18,c2x,gnu2x,c++98,c++03,gnu++98,gnu++03,c++11,c++0x,gnu++11,gnu++0x,c++14,c++1y,gnu++14,gnu++1y,c++17,c++1z,gnu++17,gnu++1z,c++20,c++2a,gnu++20,gnu++2a,c++2b,gnu++2b,cl1.0,cl,cl1.1,cl1.2,cl2.0,cl3.0,clc++1.0,clc++,clc++2021,CL,CL1.1,CL1.2,CL2.0,CL3.0,CLC++,CLC++1.0,CLC++2021,cuda,hip,
-std=
--std=
<action group>
<CompileOnly group>
<g group>
<W/R group>
<I group>
<I/i group>
<T/e/s/t/u group>
<LongDouble group>
<M group>
<O group>
<Preprocessor group>
<R group>
<R (with value) group>
<Static analyzer group>
<T group>
<W group>
<W (with value) group>
</M group>
</volatile group>
<clang-cl options>
CL.EXE COMPATIBILITY OPTIONS
<clang-cl compile-only options>
<clang-cl ignored options>
<clang i group>
<clang ignored f group>
<clang_ignored_gcc_optimization_f_Group>
<clang legacy flags>
<clang ignored m group>
<d group>
<f group>
<f (clang-only) group>
<gN group>
<gTune group>
<g flags group>
<gfortran group>
<ggdbN group>
<i group>
<clang internal options>
<clang debug/development internal options>
DEBUG/DEVELOPMENT OPTIONS
<clang driver internal options>
DRIVER OPTIONS
<m group>
<aarch64 features group>
<amdgpu features group>
<arm features group>
<hexagon features group>
<m libc group>
<m68k features group>
<mips features group>
<ppc features group>
<riscv features group>
<wasm driver features group>
<wasm features group>
<x86 features group>
<opencl group>
<pedantic group>
<reserved libs group>
<SYCL group>
<u group>
<input>
<unknown>
-###
Print (but do not run) the commands to run for this compilation
Display available options
-add-plugin
Use the named plugin action in addition to the default action
<name>
--all-warnings
-all_load
-allowable_client
--amdgpu-arch-tool=
Tool used for detecting AMD GPU arch in the system.
-analyze-function=
-analyze-function
Run analysis on specific function (for C++ include parameters in name)
/analyze-
-analyzer-checker-help-alpha
Display the list of in development analyzer checkers. These are NOT considered safe, they are unstable and will emit incorrect reports. Enable ONLY FOR DEVELOPMENT purposes
-analyzer-checker-help-developer
Display the list of developer-only checkers such as modeling and debug checkers
-analyzer-checker-help
Display the list of analyzer checkers that are available
-analyzer-checker-option-help-alpha
Display the list of in development checker and package options. These are NOT considered safe, they are unstable and will emit incorrect reports. Enable ONLY FOR DEVELOPMENT purposes
-analyzer-checker-option-help-developer
Display the list of checker and package options meant for development purposes only
-analyzer-checker-option-help
Display the list of checker and package options
-analyzer-checker=
Choose analyzer checkers to enable
-analyzer-config-compatibility-mode=
-analyzer-config-compatibility-mode
Don't emit errors on invalid analyzer-config inputs
true,false
-analyzer-config-help
Display the list of -analyzer-config options. These are meant for development purposes only!
-analyzer-config
Choose analyzer options to enable
-analyzer-constraints=
-analyzer-constraints
Source Code Analysis - Symbolic Constraint Engines
-analyzer-disable-all-checks
Disable all static analyzer checks
-analyzer-disable-checker=
-analyzer-disable-checker
Choose analyzer checkers to disable
-analyzer-disable-retry-exhausted
Do not re-analyze paths leading to exhausted nodes with a different strategy (may decrease code coverage)
-analyzer-display-progress
Emit verbose output about the analyzer's progress
-analyzer-dump-egraph=
-analyzer-dump-egraph
Dump exploded graph to the specified file
-analyzer-inline-max-stack-depth=
-analyzer-inline-max-stack-depth
Bound on stack depth while inlining (4 by default)
-analyzer-inlining-mode=
-analyzer-inlining-mode
Specify the function selection heuristic used during inlining
-analyzer-list-enabled-checkers
Display the list of enabled analyzer checkers
-analyzer-max-loop
The maximum number of times the analyzer will go through a loop
--analyzer-no-default-checks
-analyzer-opt-analyze-headers
Force the static analyzer to analyze functions defined in header files
-analyzer-opt-analyze-nested-blocks
Analyze the definitions of blocks in addition to functions
-analyzer-output=
--analyzer-output
Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
-analyzer-output
Source Code Analysis - Output Options
-analyzer-purge=
-analyzer-purge
Source Code Analysis - Dead Symbol Removal Frequency
-analyzer-stats
Print internal analyzer statistics.
-analyzer-store=
-analyzer-store
Source Code Analysis - Abstract Memory Store Models
-analyzer-tidy-checker=
-analyzer-tidy-checker
Add clang-tidy check string (enable, -disable, comma-separated)
-analyzer-viz-egraph-graphviz
Display exploded graph using GraphViz
-analyzer-werror
Emit analyzer results as errors rather than warnings
--analyze
Run the static analyzer
-analyze
Run static analysis engine
-ansi
/arch:
Set architecture for code generation
-arch_errors_fatal
-arch_only
-arch
-arcmt-action=
The ARC migration action to take
check,modify,migrate
-arcmt-migrate-emit-errors
Emit ARC errors even if the migrator can fix them
-arcmt-migrate-report-output
Output path for the plist report
--assemble
--assert=
--assert
-ast-dump-all=
Build ASTs and then debug dump them in the specified format, forcing deserialization. Supported formats include: default, json
-ast-dump-all
Build ASTs and then debug dump them, forcing deserialization
-ast-dump-decl-types
Include declaration types in AST dumps
-ast-dump-filter=
-ast-dump-filter
Use with -ast-dump or -ast-print to dump/print only AST declaration nodes having a certain substring in a qualified name. Use -ast-list to list all filterable declaration node names.
<dump_filter>
-ast-dump-lookups
Build ASTs and then debug dump their name lookup tables
-ast-dump=
Build ASTs and then debug dump them in the specified format. Supported formats include: default, json
-ast-dump
Build ASTs and then debug dump them
-ast-list
Build ASTs and print the list of declaration node qualified names
-ast-merge
Merge the given AST file into the translation unit being compiled.
<ast file>
-ast-print
Build ASTs and then pretty-print them
-ast-view
Build ASTs and view them with GraphViz
--autocomplete=
-aux-target-cpu
Target a specific auxiliary cpu type
-aux-target-feature
Target specific auxiliary attributes
-aux-triple
Auxiliary target triple.
/await:
/await
/bigobj
-bind_at_load
--bootclasspath=
--bootclasspath
/Brepro-
Write current time into COFF output (default)
/Brepro
Do not write current time into COFF output (breaks link.exe /incremental)
/Bt+
-building-pch-with-obj
This compilation is part of building a PCH with corresponding object file.
-bundle_loader
-bundle
Search $prefix/$triple-$file and $prefix$file for executables, libraries, includes, and data files used by the compiler. $prefix may or may not be a directory
<prefix>
Pass -b <arg> to the linker on AIX (only).
<arg>
-c-isystem
Add directory to the C SYSTEM include search path
<directory>
-canonical-prefixes
Use absolute paths for invoking subcommands (default)
-cc1as
-cc1
-ccc-arcmt-check
Check for ARC migration issues that need manual handling
-ccc-arcmt-migrate
Apply modifications and produces temporary files that conform to ARC
-ccc-arcmt-modify
Apply modifications to files to conform to ARC
-ccc-gcc-name
Name for native GCC compiler
<gcc-path>
-ccc-install-dir
Simulate installation in the given directory
-ccc-objcmt-migrate
Apply modifications and produces temporary files to migrate to modern ObjC syntax
-ccc-print-bindings
Show bindings of tools to actions
-ccc-print-phases
Dump list of actions to perform
-ccc-
Include comments from within macros in preprocessed output
-cfg-add-implicit-dtors
Add C++ implicit destructors to CFGs for all analyses
-cfguard-no-checks
Emit Windows Control Flow Guard tables only (no checks)
-cfguard
Emit Windows Control Flow Guard tables and checks
/cgthreads
-chain-include
Include and chain a header file after turning it into PCH
<file>
-cl-denorms-are-zero
OpenCL only. Allow denormals to be flushed to zero.
-cl-ext=
OpenCL only. Enable or disable OpenCL extensions. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
-cl-fast-relaxed-math
OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
-cl-finite-math-only
OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
-cl-fp32-correctly-rounded-divide-sqrt
OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
-cl-kernel-arg-info
OpenCL only. Generate kernel argument metadata.
-cl-mad-enable
OpenCL only. Allow use of less precise MAD computations in the generated binary.
-cl-no-signed-zeros
OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
-cl-no-stdinc
OpenCL only. Disables all standard includes containing non-native compiler types and functions.
-cl-opt-disable
OpenCL only. This option disables all optimizations. By default optimizations are enabled.
-cl-single-precision-constant
OpenCL only. Treat double precision floating-point constant as single precision constant.
-cl-std=
OpenCL language standard to compile for.
cl,CL,cl1.0,CL1.0,cl1.1,CL1.1,cl1.2,CL1.2,cl2.0,CL2.0,cl3.0,CL3.0,clc++,CLC++,clc++1.0,CLC++1.0,clc++2021,CLC++2021
-cl-strict-aliasing
OpenCL only. This option is added for compatibility with OpenCL 1.0.
-cl-uniform-work-group-size
OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel
-cl-unsafe-math-optimizations
OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable.
-clang-vendor-feature=
Vendor specific clang features
/clang:
Pass <arg> to the clang driver
--CLASSPATH=
--classpath=
--CLASSPATH
--classpath
-clear-ast-before-backend
Clear the Clang AST before running backend code generation
-client_name
/clr
-code-completion-at=
-code-completion-at
Dump code-completion information at a location
<file>:<line>:<column>
-code-completion-brief-comments
Include brief documentation comments in code-completion results.
-code-completion-macros
Include macros in code-completion results
-code-completion-patterns
Include code patterns in code-completion results
-code-completion-with-fixits
Include code completion results which require small fix-its.
-combine
--comments-in-macros
--comments
-compatibility_version
-compiler-options-dump
Dump the compiler configuration options
--compile
-compress-debug-sections=
DWARF debug sections compression type
none,zlib,zlib-gnu
-compress-debug-sections
--config-system-dir=
System directory for configuration files
--config-user-dir=
User directory for configuration files
--config
Specifies configuration file
--constant-cfstrings
/constexpr:
-coverage-data-file=
-coverage-data-file
Emit coverage data to this filename.
-coverage-notes-file=
-coverage-notes-file
Emit coverage notes to this filename.
-coverage-version=
Four-byte version string for gcov files.
-coverage
-cpp-precomp
-cpp
Enable predefined and command line preprocessor macros
--cuda-compile-host-device
Compile CUDA code for both host and device (default).  Has no effect on non-CUDA compilations.
--cuda-device-only
Compile CUDA code for device only
--cuda-gpu-arch=
--cuda-host-only
Compile CUDA code for host only.  Has no effect on non-CUDA compilations.
--cuda-include-ptx=
Include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
--cuda-noopt-device-debug
Enable device-side debug info generation. Disables ptxas optimizations.
--cuda-path-ignore-env
Ignore environment variables to detect CUDA installation
--cuda-path=
CUDA installation path
-cuid=
An ID for compilation unit, which should be the same for the same compilation unit but different for different compilation units. It is used to externalize device-side static variables for single source offloading languages CUDA and HIP so that they can be accessed by the host code of the same compilation unit.
-current_version
-cxx-isystem
Add directory to the C++ SYSTEM include search path
Include comments in preprocessed output
Do not discard comments when preprocessing
Only run preprocess, compile, and assemble steps
Compile only
/d1PP
Retain macro definitions in /E mode
/d1reportAllClassLayout
Dump record layout information
/d2FastFail
/d2Zi+
Print macro definitions in -E mode in addition to normal output
-dead_strip
-debug-forward-template-params
Emit complete descriptions of template parameters in forward declarations
-debug-info-kind=
-debug-info-macro
Emit macro debug information
--debug=
-debugger-tuning=
gdb,lldb,sce,dbx
--debug
-default-function-attr
Apply given attribute to all functions
--define-macro=
--define-macro
-defsym
Define a value for a symbol
--dependencies
-dependency-dot
Filename to write DOT-formatted header dependencies to
-dependency-file
Filename (or -) to write dependency output to
--dependent-lib=
Add dependent library
-detailed-preprocessing-record
include a detailed record of preprocessing actions
-diagnostic-log-file
Filename (or -) to log diagnostics to
/diagnostics:caret
Enable caret and column diagnostics (default)
/diagnostics:classic
Disable column and caret diagnostics
/diagnostics:column
Disable caret diagnostics but keep column info
/diasdkdir
Path to the DIA SDK
<dir>
-disable-free
Disable freeing of memory on exit
-disable-lifetime-markers
Disable lifetime-markers emission even when optimizations are enabled
-disable-llvm-optzns
-disable-llvm-passes
Use together with -emit-llvm to get pristine LLVM IR from the frontend by not running any LLVM passes at all
-disable-llvm-verifier
Don't run the LLVM IR verifier pass
-disable-O0-optnone
Disable adding the optnone attribute to functions at O0
-disable-objc-default-synthesize-properties
disable the default synthesis of Objective-C properties
-disable-pragma-debug-crash
Disable any #pragma clang __debug that can lead to crashing behavior. This is meant for testing.
-disable-red-zone
Do not emit code that uses the red zone.
-discard-value-names
Discard value names in LLVM IR
Print include directives in -E mode in addition to normal output
Print macro definitions in -E mode instead of normal output
/doc
--driver-mode=
Set the driver mode to either 'gcc', 'g++', 'cpp', or 'cl'
-dsym-dir
Directory to output dSYM's (if any) to
-dump-coverage-mapping
Dump the coverage mapping records, for testing
-dump-deserialized-decls
Dump declarations that are deserialized from PCH, for testing
-dump-raw-tokens
Lex file in raw mode and dump raw tokens
-dump-tokens
Run preprocessor, dump internal rep of tokens
-dumpmachine
-dumpspecs
-dumpversion
-dwarf-debug-flags
The string to embed in the Dwarf debug flags record.
-dwarf-debug-producer
The string to embed in the Dwarf debug AT_producer record.
-dwarf-explicit-import
Generate explicit import from anonymous namespace to containing scope
-dwarf-ext-refs
Generate debug info with external references to clang modules or precompiled headers
-dwarf-version=
--dyld-prefix=
--dyld-prefix
-dylib_file
-dylinker_install_name
-dylinker
-dynamiclib
-dynamic
Define <macro> to <value> (or 1 if <value> omitted)
<macro>=<value>
Define macro
<macro[=value]>
-ehcontguard
Emit Windows EH Continuation Guard tables
Set exception handling model
-emit-ast
Emit Clang AST files for source inputs
-emit-codegen-only
Generate machine code, but discard output
-emit-header-module
Generate pre-compiled module file from a set of header files
-emit-html
Output input source as HTML
-emit-interface-stubs
Generate Interface Stub Files.
-emit-llvm-bc
Build ASTs then convert to LLVM, emit .bc file
-emit-llvm-only
Build ASTs and convert to LLVM, discarding output
-emit-llvm-uselists
Preserve order of LLVM use-lists when serializing
-emit-llvm
Use the LLVM representation for assembler and object files
-emit-merged-ifs
Generate Interface Stub Files, emit merged text not binary.
-emit-module-interface
Generate pre-compiled module file from a C++ module interface
-emit-module
Generate pre-compiled module file from a module map
-emit-obj
Emit native object files
-emit-pch
Generate pre-compiled header file
--emit-static-lib
Enable linker job to emit a static library.
-enable-noundef-analysis
Enable analyzing function argument and return types for mandatory definedness
-enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang
Trivial automatic variable initialization to zero is only here for benchmarks, it'll eventually be removed, and I'm OK with that because I'm only using it to benchmark
--encoding=
--encoding
--entry
-Eonly
Just run preprocessor, no output (for timings)
Disable linemarker output and preprocess to stdout
-error-on-deserialized-decl=
-error-on-deserialized-decl
Emit error if a specific declaration is deserialized from PCH, for testing
/errorReport
-exception-model=
-exception-model
The exception model: dwarf|sjlj|seh|wasm
dwarf,sjlj,seh,wasm
/execution-charset:
Set runtime encoding, supports only UTF-8
/experimental:
-exported_symbols_list
/exportHeader
--extdirs=
--extdirs
-extend-lifetimes=
this,arguments,all
/external:env:
Add dirs in env var <var> to include search path with warnings suppressed
<var>
/external:I
Add directory to include search path with warnings suppressed
/external:
--extra-warnings
-extract-api
Extract API information
Only run the preprocessor
Preprocess to stdout
-faapcs-bitfield-load
Follows the AAPCS standard that all volatile bit-field write generates at least one load. (ARM only).
-faapcs-bitfield-width
Follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
-faccess-control
-faddress-space-map-mangling=
Set the mode for address space map based mangling; OpenCL testing purposes only
<yes|no|target>
target,no,yes
-faddrsig
Emit an address-significance table
-faggressive-function-elimination
-falign-commons
-falign-functions=
-falign-functions
-falign-jumps=
-falign-jumps
-falign-labels=
-falign-labels
-falign-loops=
N must be a power of two. Align loops to the boundary
-falign-loops
-faligned-alloc-unavailable
Aligned allocation/deallocation functions are unavailable
-faligned-allocation
Enable C++17 aligned allocation functions
-faligned-new=
-faligned-new
-fall-intrinsics
-fallow-editor-placeholders
Treat editor placeholders as valid source code
-fallow-half-arguments-and-returns
Allow function arguments and returns of type half
-fallow-pch-with-compiler-errors
Accept a PCH file that was created with compiler errors
-fallow-pch-with-different-modules-cache-path
Accept a PCH file that was created with a different modules cache path
-fallow-pcm-with-compiler-errors
Accept a PCM file that was created with compiler errors
-fallow-unsupported
-falternative-parameter-statement
Enable the old style PARAMETER statement
-faltivec-src-compat=
Source-level compatibility for Altivec vectors (for PowerPC targets). This includes results of vector comparison (scalar for 'xl', vector for 'gcc') as well as behavior when initializing with a scalar (splatting for 'xl', element zero only for 'gcc'). For 'mixed', the compatibility is as 'gcc' for 'vector bool/vector pixel' and as 'xl' for other types. Current default is 'mixed'.
mixed,gcc,xl
-faltivec
-fanalyzed-objects-for-unparse
-fansi-escape-codes
Use ANSI escape codes for diagnostics
-fapinotes-cache-path=
Does nothing; API notes are no longer cached separately from modules
-fapinotes-modules
Enable module-based external API notes support
-fapinotes-swift-version=
Specify the Swift version to use when filtering API notes
<version>
-fapinotes
Enable external API notes support
-fapple-kext-vtable-mitigation
Enable mitigation for kernel v-table exploits through null pointers
-fapple-kext
Use Apple's kernel extensions ABI
-fapple-link-rtlib
Force linking the clang builtins runtime library
-fapple-pragma-pack
Enable Apple gcc-compatible #pragma pack handling
-fapplication-extension
Restrict code to those available for App Extensions
-fapply-global-visibility-to-externs
Apply global symbol visibility to external declarations without an explicit visibility
-fapprox-func
Allow certain math function calls to be replaced with an approximately equivalent calculation
-fasm-blocks
-fasm
-fassociative-math
-fassume-sane-operator-new
-fastcp
-fastf
-fast
-fasync-exceptions
Enable EH Asynchronous exceptions
-fasynchronous-unwind-tables
-fauto-profile-accurate
-fauto-profile=
-fauto-profile
-fautolink
-fautomatic
/favor
Output assembly code file during compilation
Set assembly output file name (with /FA)
<file or dir/>
-fbackslash
Specify that backslash in string introduces an escape character
-fbacktrace
-fbasic-block-sections=
Place each function's basic blocks in unique sections (ELF Only) : all | labels | none | list=<file>
all,labels,none,list=
-fbinutils-version=
Produced object files can use all ELF features supported by this binutils version and newer. If -fno-integrated-as is specified, the generated assembly will consider GNU as support. 'none' means that all ELF features can be used, regardless of binutils support. Defaults to 2.26.
<major.minor>
-fblas-matmul-limit=
-fblocks-runtime-optional
Weakly link in the blocks runtime
-fblocks
Enable the 'blocks' language feature
-fbootclasspath=
-fborland-extensions
Accept non-standard constructs supported by the Borland compiler
-fbounds-check
-fbracket-depth=
-fbracket-depth
Maximum nesting level for parentheses, brackets, and braces
-fbranch-count-reg
-fbranch-target-identification
Emit branch target identification instructions for indirect branch destinations
-fbuild-session-file=
Use the last modification time of <file> as the build session timestamp
-fbuild-session-timestamp=
Time when the current build session started
<time since Epoch in seconds>
-fbuiltin-module-map
Load the clang builtins module map file.
-fbuiltin
-fc++-abi=
C++ ABI to use. This will override the target C++ ABI.
-fc++-static-destructors
-fcall-saved-x10
Make the x10 register call-saved (AArch64 only)
-fcall-saved-x11
Make the x11 register call-saved (AArch64 only)
-fcall-saved-x12
Make the x12 register call-saved (AArch64 only)
-fcall-saved-x13
Make the x13 register call-saved (AArch64 only)
-fcall-saved-x14
Make the x14 register call-saved (AArch64 only)
-fcall-saved-x15
Make the x15 register call-saved (AArch64 only)
-fcall-saved-x18
Make the x18 register call-saved (AArch64 only)
-fcall-saved-x8
Make the x8 register call-saved (AArch64 only)
-fcall-saved-x9
Make the x9 register call-saved (AArch64 only)
-fcaller-saves
-fcaret-diagnostics-max-lines
Set the maximum number of source lines to show in a caret diagnostic
-fcaret-diagnostics
-fcf-protection=
Instrument control-flow architecture protection. Options: return, branch, full, none.
return,branch,full,none
-fcf-protection
Enable cf-protection in 'full' mode
-fcf-runtime-abi=
unspecified,standalone,objc,swift,swift-5.0,swift-4.2,swift-4.1
-fchar8_t
Enable C++ builtin type char8_t
-fcheck-array-temporaries
-fcheck-new
-fcheck=
-fclang-abi-compat=
Attempt to match the ABI of Clang <version>
<major>.<minor>,latest
-fclasspath=
-fcoarray=
-fcolor-diagnostics
Enable colors in diagnostics
-fcomment-block-commands=
Treat each comma separated argument in <arg> as a documentation comment block command
-fcommon
Place uninitialized global variables in a common block
-fcompatibility-qualified-id-block-type-checking
Allow using blocks with parameters of more specific type than the type system guarantees when a parameter is qualified id
-fcompile-resource=
-fcomplete-member-pointers
Require member pointer base types to be complete if they would be significant under the Microsoft ABI
-fconcepts-ts
Enable C++ Extensions for Concepts. (deprecated - use -std=c++2a)
-fconst-strings
Use a const qualified type for string literals in C and ObjC
-fconstant-array-class=
-fconstant-cfstrings
-fconstant-dictionary-class=
-fconstant-double-number-class=
-fconstant-float-number-class=
-fconstant-integer-number-class=
-fconstant-string-class=
-fconstant-string-class
Specify the class to use for constant Objective-C string objects.
<class name>
-fconstexpr-backtrace-limit=
-fconstexpr-backtrace-limit
Set the maximum number of entries to print in a constexpr evaluation backtrace (0 = no limit).
-fconstexpr-depth=
-fconstexpr-depth
Maximum depth of recursive constexpr function calls
-fconstexpr-steps=
-fconstexpr-steps
Maximum number of steps in constexpr function evaluation
-fconvergent-functions
Assume functions may be convergent
-fconvert=
-fcoroutines-ts
Enable support for the C++ Coroutines TS
-fcoverage-mapping
Generate coverage mapping to enable code coverage analysis
-fcoverage-prefix-map=
remap file source paths in coverage mapping
-fcrash-diagnostics-dir=
Put crash-report files in <dir>
-fcray-pointer
-fcreate-profile
-fcs-profile-generate=
Generate instrumented code to collect context sensitive execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
-fcs-profile-generate
Generate instrumented code to collect context sensitive execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
-fcuda-allow-variadic-functions
Allow variadic functions in CUDA device code.
-fcuda-approx-transcendentals
Use approximate transcendental functions
-fcuda-flush-denormals-to-zero
-fcuda-include-gpubinary
Incorporate CUDA device-side binary into host object file.
-fcuda-is-device
Generate code for CUDA device
-fcuda-rdc
-fcuda-short-ptr
Use 32-bit pointers for accessing const/local/shared address spaces
-fcxx-exceptions
Enable C++ exceptions
-fcxx-modules
Enable modules for C++
-fd-lines-as-code
-fd-lines-as-comments
-fdata-sections
Place each data in its own section
-fdebug-compilation-dir=
The compilation directory to embed in the debug info
-fdebug-compilation-dir
-fdebug-default-version=
Default DWARF version to use, if a -g option caused DWARF debug info to be produced
-fdebug-dump-all
Dump symbols and the parse tree after the semantic checks
-fdebug-dump-parse-tree-no-sema
Dump the parse tree (skips the semantic checks)
-fdebug-dump-parse-tree
Dump the parse tree
-fdebug-dump-parsing-log
Run instrumented parse and dump the parsing log
-fdebug-dump-provenance
Dump provenance
-fdebug-dump-symbols
Dump symbols after the semantic analysis
-fdebug-info-for-profiling
Emit extra debug info to make sample profile more accurate
-fdebug-macro
-fdebug-measure-parse-tree
Measure the parse tree
-fdebug-module-writer
Enable debug messages while writing module files
-fdebug-pass-arguments
-fdebug-pass-manager
Prints debug information for the new pass manager
-fdebug-pass-structure
-fdebug-pre-fir-tree
Dump the pre-FIR tree
-fdebug-prefix-map=
remap file source paths in debug info
-fdebug-ranges-base-address
Use DWARF base address selection entries in .debug_ranges
-fdebug-types-section
Place debug types in their own section (ELF Only)
-fdebug-unparse-no-sema
Unparse and stop (skips the semantic checks)
-fdebug-unparse-with-symbols
Unparse and stop.
-fdebug-unparse
-fdebugger-cast-result-to-id
Enable casting unknown expression results to id
-fdebugger-objc-literal
Enable special debugger support for Objective-C subscripting and literals
-fdebugger-support
Enable special debugger support behavior
-fdeclare-opencl-builtins
Add OpenCL builtin function declarations (experimental)
-fdeclspec
Allow __declspec as a keyword
-fdefault-calling-conv=
Set default calling convention
cdecl,fastcall,stdcall,vectorcall,regcall
-fdefault-double-8
Set the default double precision kind to an 8 byte wide type
-fdefault-inline
-fdefault-integer-8
Set the default integer kind to an 8 byte wide type
-fdefault-real-8
Set the default real kind to an 8 byte wide type
-fdefer-pop
-fdelayed-template-parsing
Parse templated function definitions at the end of the translation unit
-fdelete-null-pointer-checks
Treat usage of null pointers as undefined behavior (default)
-fdenormal-fp-math-f32=
-fdenormal-fp-math=
-fdepfile-entry=
-fdeprecated-macro
Defines the __DEPRECATED macro
-fdevirtualize-speculatively
-fdevirtualize
-fdiagnostics-absolute-paths
Print absolute paths in diagnostics
-fdiagnostics-color=
-fdiagnostics-color
-fdiagnostics-fixit-info
-fdiagnostics-format=
-fdiagnostics-format
Change diagnostic formatting to match IDE and command line tools
clang,msvc,vi
-fdiagnostics-hotness-threshold=
Prevent optimization remarks from being output if they do not have at least this profile count. Use 'auto' to apply the threshold from profile summary
<value>
-fdiagnostics-parseable-fixits
Print fix-its in machine parseable form
-fdiagnostics-print-source-range-info
Print source range spans in numeric form
-fdiagnostics-show-category=
-fdiagnostics-show-category
Print diagnostic category
none,id,name
-fdiagnostics-show-hotness
Enable profile hotness information in diagnostic line
-fdiagnostics-show-location=
-fdiagnostics-show-note-include-stack
Display include stacks for diagnostic notes
-fdiagnostics-show-option
Print option name with mappable diagnostics
-fdiagnostics-show-template-tree
Print a template comparison tree for differing templates
-fdigraphs
Enable alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:' (default)
-fdirect-access-external-data
Don't use GOT indirection to reference external data symbols
-fdisable-module-hash
Disable the module hash
-fdiscard-value-names
-fdollar-ok
-fdollars-in-identifiers
Allow '$' in identifiers
-fdouble-square-bracket-attributes
Enable '[[]]' attributes in all C and C++ language modes
-fdump-fortran-optimized
-fdump-fortran-original
-fdump-parse-tree
-fdump-record-layouts-canonical
Dump record layout information with canonical field types
-fdump-record-layouts-complete
Dump record layout information for all complete types
-fdump-record-layouts-simple
Dump record layout information in a simple form used for testing
-fdump-record-layouts
-fdump-vtable-layouts
Dump the layouts of all vtables that will be emitted in a translation unit
-fdwarf-directory-asm
-fdwarf-exceptions
Use DWARF style exceptions
-fdwarf2-cfi-asm
/Fe:
-felide-constructors
-feliminate-unused-debug-symbols
-feliminate-unused-debug-types
Do not emit  debug info for defined but unused types
-fembed-bitcode-marker
Embed placeholder LLVM IR data as a marker
-fembed-bitcode=
Embed LLVM bitcode (option: off, all, bitcode, marker)
<option>
off,all,bitcode,marker
-fembed-bitcode
Embed LLVM IR bitcode as data
-femit-all-decls
Emit all declarations, even if unused
-femulated-tls
Use emutls functions to access thread_local variables
-fenable-matrix
Enable matrix data type and related builtin functions
-fencode-extended-block-signature
enable extended encoding of block type signature
-fencoding=
-ferror-limit=
-ferror-limit
Set the maximum number of errors to emit before stopping (0 = no limit).
-fescaping-block-tail-calls
-fexceptions
Enable support for exception handling
-fexcess-precision=
-fexec-charset=
-fexpensive-optimizations
-fexperimental-debug-variable-locations
Use experimental new value-tracking variable locations
-fexperimental-isel
-fexperimental-new-constant-interpreter
Enable the experimental new constant interpreter
-fexperimental-new-pass-manager
-fexperimental-optimized-argument-temporaries
Reuse stack space around some argument temporaries
-fexperimental-optimized-noescape
-fexperimental-relative-c++-abi-vtables
Use the experimental C++ class ABI for classes with virtual tables
-fexperimental-strict-floating-point
Enables experimental strict floating point in LLVM.
-fextdirs=
-fextend-arguments=
Controls how scalar integer arguments are extended in calls to unprototyped and varargs functions
32,64
-fextended-identifiers
-fexternal-blas
-fexternc-nounwind
Assume all functions with C linkage do not unwind
Set output executable file name
-ff2c
-ffake-address-space-map
Use a fake address space map; OpenCL testing purposes only
-ffast-math
Allow aggressive, lossy floating-point optimizations
-ffat-lto-objects
-ffile-compilation-dir=
The compilation directory to embed in the debug info and coverage mapping.
-ffile-prefix-map=
remap file source paths in debug info, predefined preprocessor macros and __builtin_FILE()
-ffine-grained-bitfield-accesses
Use separate accesses for consecutive bitfield runs with legal widths and alignments.
-ffinite-loops
Assume all loops are finite.
-ffinite-math-only
-ffixed-a0
Reserve the a0 register (M68k only)
-ffixed-a1
Reserve the a1 register (M68k only)
-ffixed-a2
Reserve the a2 register (M68k only)
-ffixed-a3
Reserve the a3 register (M68k only)
-ffixed-a4
Reserve the a4 register (M68k only)
-ffixed-a5
Reserve the a5 register (M68k only)
-ffixed-a6
Reserve the a6 register (M68k only)
-ffixed-d0
Reserve the d0 register (M68k only)
-ffixed-d1
Reserve the d1 register (M68k only)
-ffixed-d2
Reserve the d2 register (M68k only)
-ffixed-d3
Reserve the d3 register (M68k only)
-ffixed-d4
Reserve the d4 register (M68k only)
-ffixed-d5
Reserve the d5 register (M68k only)
-ffixed-d6
Reserve the d6 register (M68k only)
-ffixed-d7
Reserve the d7 register (M68k only)
-ffixed-form
Process source files in fixed form
-ffixed-line-length-
-ffixed-line-length=
Use <value> as character line width in fixed mode
-ffixed-point
Enable fixed point types
-ffixed-r19
Reserve register r19 (Hexagon only)
-ffixed-r9
Reserve the r9 register (ARM only)
-ffixed-x10
Reserve the x10 register (AArch64/RISC-V only)
-ffixed-x11
Reserve the x11 register (AArch64/RISC-V only)
-ffixed-x12
Reserve the x12 register (AArch64/RISC-V only)
-ffixed-x13
Reserve the x13 register (AArch64/RISC-V only)
-ffixed-x14
Reserve the x14 register (AArch64/RISC-V only)
-ffixed-x15
Reserve the x15 register (AArch64/RISC-V only)
-ffixed-x16
Reserve the x16 register (AArch64/RISC-V only)
-ffixed-x17
Reserve the x17 register (AArch64/RISC-V only)
-ffixed-x18
Reserve the x18 register (AArch64/RISC-V only)
-ffixed-x19
Reserve the x19 register (AArch64/RISC-V only)
-ffixed-x1
Reserve the x1 register (AArch64/RISC-V only)
-ffixed-x20
Reserve the x20 register (AArch64/RISC-V only)
-ffixed-x21
Reserve the x21 register (AArch64/RISC-V only)
-ffixed-x22
Reserve the x22 register (AArch64/RISC-V only)
-ffixed-x23
Reserve the x23 register (AArch64/RISC-V only)
-ffixed-x24
Reserve the x24 register (AArch64/RISC-V only)
-ffixed-x25
Reserve the x25 register (AArch64/RISC-V only)
-ffixed-x26
Reserve the x26 register (AArch64/RISC-V only)
-ffixed-x27
Reserve the x27 register (AArch64/RISC-V only)
-ffixed-x28
Reserve the x28 register (AArch64/RISC-V only)
-ffixed-x29
Reserve the x29 register (AArch64/RISC-V only)
-ffixed-x2
Reserve the x2 register (AArch64/RISC-V only)
-ffixed-x30
Reserve the x30 register (AArch64/RISC-V only)
-ffixed-x31
Reserve the x31 register (AArch64/RISC-V only)
-ffixed-x3
Reserve the x3 register (AArch64/RISC-V only)
-ffixed-x4
Reserve the x4 register (AArch64/RISC-V only)
-ffixed-x5
Reserve the x5 register (AArch64/RISC-V only)
-ffixed-x6
Reserve the x6 register (AArch64/RISC-V only)
-ffixed-x7
Reserve the x7 register (AArch64/RISC-V only)
-ffixed-x8
Reserve the x8 register (AArch64/RISC-V only)
-ffixed-x9
Reserve the x9 register (AArch64/RISC-V only)
-ffloat-store
-ffor-scope
-fforbid-guard-variables
Emit an error if a C++ static local initializer would need a guard variable
-fforce-addr
-fforce-dwarf-frame
Always emit a debug frame section
-fforce-emit-vtables
Emits more virtual tables to improve devirtualization
-fforce-enable-int128
Enable support for int128_t type
-ffp-contract=
Form fused FP ops (e.g. FMAs): fast (fuses across statements disregarding pragmas) | on (only fuses in the same statement unless dictated by pragmas) | off (never fuses) | fast-honor-pragmas (fuses across statements unless diectated by pragmas). Default is 'fast' for CUDA, 'fast-honor-pragmas' for HIP, and 'on' otherwise.
fast,on,off,fast-honor-pragmas
-ffp-exception-behavior=
Specifies the exception behavior of floating-point operations.
ignore,maytrap,strict
-ffp-model=
Controls the semantics of floating-point calculations.
-ffpe-trap=
-ffree-form
Process source files in free form
-ffree-line-length-
-ffreestanding
Assert that the compilation takes place in a freestanding environment
-ffriend-injection
-ffrontend-optimize
-ffuchsia-api-level=
Set Fuchsia API level
-ffunction-attribute-list
-ffunction-sections
Place each function in its own section
-fgcse-after-reload
-fgcse-las
-fgcse-sm
-fgcse
-fgeneric-block-helpers-use-extended-layout
Generic block helpers use extended layout
-fgeneric-block-helpers
Use generic block helpers for copying/destroying blocks
-fget-definition
Get the symbol definition from <line> <start-column> <end-column>
-fget-symbols-sources
Dump symbols and their source code locations
-fglobal-isel
Enables the global instruction selector
-fgnu-inline-asm
-fgnu-keywords
Allow GNU-extension keywords regardless of language standard
-fgnu-runtime
Generate output compatible with the standard GNU Objective-C runtime
-fgnu89-inline
Use the gnu89 inline semantics
-fgnuc-version=
Sets various macros to claim compatibility with the given GCC version (default is 4.2.1)
-fgnu
-fgpu-allow-device-init
Allow device side init function in HIP (experimental)
-fgpu-defer-diag
Defer host/device related diagnostic messages for CUDA/HIP
-fgpu-exclude-wrong-side-overloads
Always exclude wrong side overloads in overloading resolution for CUDA/HIP
-fgpu-flush-denormals-to-zero
Flush denormal floating point values to zero in CUDA/HIP device mode.
-fgpu-inline-threshold=
Inline threshold for device compilation for CUDA/HIP
-fgpu-rdc
Generate relocatable device code, also known as separate compilation mode
-fgpu-sanitize
Enable sanitizer for AMDGPU target
-fhalf-no-semantic-interposition
Like -fno-semantic-interposition but don't use local aliases
-fheinous-gnu-extensions
-fhip-dump-offload-linker-script
-fhip-fp32-correctly-rounded-divide-sqrt
Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
-fhip-new-launch-api
Use new kernel launching API for HIP
-fhonor-infinites
-fhonor-infinities
-fhonor-nans
-fhosted
-fident
-fignore-exceptions
Enable support for ignoring exception handling constructs
-fignore-objc-weak
ignore __weak qualifiers in manual reference counting
-filelist
-filetype
Specify the output file type ('asm', 'null', or 'obj')
-fimplement-inlines
-fimplicit-module-maps
Implicitly search the file system for module map files.
-fimplicit-modules-use-lock
Use filesystem locks for implicit modules builds to avoid duplicating work in competing clang invocations.
-fimplicit-modules
-fimplicit-none
No implicit typing allowed unless overridden by IMPLICIT statements
-fimplicit-templates
-fin-descriptor-block-flags
Emit in-descriptor block flags
-finclude-default-header
Include default header file for OpenCL
-findirect-virtual-calls
-finit-character=
-finit-integer=
-finit-local-zero
-finit-logical=
-finit-real=
-finline-functions-called-once
-finline-functions
Inline suitable functions
-finline-hint-functions
Inline functions which are (explicitly or implicitly) marked inline
-finline-limit=
-finline-limit
-finline-small-functions
-finline
-finput-charset=
Specify the default character set for source files
-finstrument-function-entry-bare
Instrument function entry only, after inlining, without arguments to the instrumentation call
-finstrument-functions-after-inlining
Like -finstrument-functions, but insert the calls after inlining
-finstrument-functions
Generate calls to instrument function entry and exit
-finteger-4-integer-8
-fintegrated-as
Enable the integrated assembler
-fintegrated-cc1
Run cc1 in-process
-fintrinsic-modules-path
Specify where to find the compiled intrinsic modules
-fipa-cp
-fivopts
-fix-only-warnings
Apply fix-it advice only for warnings, not errors
-fix-what-you-can
Apply fix-it advice even in the presence of unfixable errors
-fixit-recompile
Apply fix-it changes and recompile
-fixit-to-temporary
Apply fix-it changes to temporary files
-fixit=
Apply fix-it advice creating a file with the given suffix
-fixit
Apply fix-it advice to the input source
Include file before parsing
Set preprocess output file name (with /P)
-fjump-tables
Use jump tables for lowering switches
-fkeep-inline-functions
-fkeep-static-consts
Keep static const variables if unused
-flarge-sizes
Use INTEGER(KIND=8) for the result type in size-related intrinsics
-flat_namespace
-flax-vector-conversions=
Enable implicit vector bit-casts
none,integer,all
-flax-vector-conversions
-flegacy-pass-manager
Use the legacy pass manager in LLVM (deprecated, to be removed in a future release)
-flimit-debug-info
-flimited-precision=
-flogical-abbreviations
Enable logical abbreviations
-flto-jobs=
Controls the backend parallelism of -flto=thin (default of 0 means the number of threads will be derived from the number of CPUs detected)
-flto-unit
Emit IR to support LTO unit features (CFI, whole program vtable opt)
-flto-visibility-public-std
Use public LTO visibility for classes in std and stdext namespaces
-flto=auto
Enable LTO in 'full' mode
-flto=jobserver
-flto=
Set LTO mode to either 'full' or 'thin'
thin,full
-flto
-fmacro-backtrace-limit=
-fmacro-backtrace-limit
Set the maximum number of entries to print in a macro expansion backtrace (0 = no limit).
-fmacro-prefix-map=
remap file source paths in predefined preprocessor macros and __builtin_FILE()
-fmath-errno
Require math functions to indicate errors by setting errno
-fmax-array-constructor=
-fmax-errors=
-fmax-identifier-length
-fmax-stack-var-size=
-fmax-subrecord-length=
-fmax-tokens=
Max total number of preprocessed tokens for -Wmax-tokens.
-fmax-type-align=
Specify the maximum alignment to enforce on pointers lacking an explicit alignment
-fmemory-profile=
Enable heap memory profiling and dump results into <directory>
-fmemory-profile
Enable heap memory profiling
-fmerge-all-constants
Allow merging of constants
-fmerge-constants
-fmerge-functions
Permit merging of identical functions when optimizing.
-fmessage-length=
Format message diagnostics so that they fit within N columns
-fminimize-whitespace
Minimize whitespace when emitting preprocessor output
-fmodule-feature
Enable <feature> in module map requires declarations
<feature>
-fmodule-file-deps
-fmodule-file=
Specify the mapping of module name to precompiled module file, or load a module file if name is omitted.
[<name>=]<file>
-fmodule-format=
Select the container format for clang modules and PCH. Supported options are 'raw' and 'obj'.
-fmodule-implementation-of
-fmodule-map-file-home-is-cwd
Use the current working directory as the home directory of module maps specified by -fmodule-map-file=<FILE>
-fmodule-map-file=
Load this module map file
-fmodule-maps
-fmodule-name=
Specify the name of the module to build
-fmodule-private
-fmodule-related-to-pch
Mark module as related to a PCH
-fmodules-cache-path=
Specify the module cache path
-fmodules-codegen
Generate code for uses of this module that assumes an explicit object file will be built for the module
-fmodules-debuginfo
Generate debug info for types in an object file built from this module and do not generate them elsewhere
-fmodules-decluse
Require declaration of modules used within a module
-fmodules-disable-diagnostic-validation
Disable validation of the diagnostic options when loading the module
-fmodules-embed-all-files
Embed the contents of all files read by this compilation into the produced module file.
-fmodules-embed-file=
Embed the contents of the specified file into the module file being compiled.
-fmodules-hash-content
Enable hashing the content of a module file
-fmodules-hash-error-diagnostics
Use a separate module cache for modules compiled with conflicting -Werror options
-fmodules-ignore-macro=
Ignore the definition of the given macro when building and loading modules
-fmodules-local-submodule-visibility
Enforce name visibility rules across submodules of the same top-level module.
-fmodules-prune-after=
Specify the interval (in seconds) after which a module file will be considered unused
<seconds>
-fmodules-prune-interval=
Specify the interval (in seconds) between attempts to prune the module cache
-fmodules-search-all
Search even non-imported modules to resolve references
-fmodules-strict-context-hash
Enable hashing of all compiler options that could impact the semantics of a module in an implicit build
-fmodules-strict-decluse
Like -fmodules-decluse but requires all headers to be in modules
-fmodules-ts
Enable support for the C++ Modules TS
-fmodules-user-build-path
Specify the module user build path
-fmodules-validate-input-files-content
Validate PCM input files based on content if mtime differs
-fmodules-validate-once-per-build-session
Don't verify input files for the modules if the module has been successfully validated or loaded during this build session
-fmodules-validate-system-headers
Validate the system headers that a module depends on when loading the module
-fmodules
Enable the 'modules' language feature
-fmodulo-sched-allow-regmoves
-fmodulo-sched
-fms-compatibility-version=
Dot-separated value representing the Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
-fms-compatibility
Enable full Microsoft Visual C++ compatibility
-fms-extensions
Accept some non-standard constructs supported by the Microsoft compiler
-fms-memptr-rep=
single,multiple,virtual
-fms-volatile
-fmsc-version=
Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
-fmudflapth
-fmudflap
-fnative-half-arguments-and-returns
Use the native __fp16 type for arguments and returns (and skip ABI-specific lowering)
-fnative-half-type
Use the native half type for __fp16 instead of promoting to float
-fnested-functions
-fnew-alignment=
Specifies the largest alignment guaranteed by '::operator new(size_t)'
<align>
-fnew-alignment
-fnew-infallible
Treats throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
-fnext-runtime
-fno-aapcs-bitfield-width
Do not follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
-fno-access-control
Disable C++ access control
-fno-addrsig
Don't emit an address-significance table
-fno-aggressive-function-elimination
-fno-align-commons
-fno-align-functions
-fno-align-jumps
-fno-align-labels
-fno-align-loops
-fno-aligned-allocation
-fno-aligned-new
-fno-all-intrinsics
-fno-allow-editor-placeholders
-fno-altivec
-fno-analyzed-objects-for-unparse
Do not use the analyzed objects when unparsing
-fno-apinotes-modules
Disable module-based external API notes support
-fno-apinotes
Disable external API notes support
-fno-apple-pragma-pack
-fno-application-extension
-fno-approx-func
-fno-asm-blocks
-fno-asm
-fno-associative-math
-fno-assume-sane-operator-new
Don't assume that C++'s global operator new can't alias any pointer
-fno-async-exceptions
-fno-asynchronous-unwind-tables
-fno-auto-profile-accurate
-fno-auto-profile
-fno-autolink
Disable generation of linker directives for automatic library linking
-fno-automatic
-fno-backslash
-fno-backtrace
-fno-bitfield-type-align
Ignore bit-field types when aligning structures
-fno-blocks
-fno-borland-extensions
-fno-bounds-check
-fno-branch-count-reg
-fno-branch-target-identification
-fno-builtin-
Disable implicit builtin knowledge of a specific function
-fno-builtin
Disable implicit builtin knowledge of functions
-fno-c++-static-destructors
Disable C++ static destructor registration
-fno-caller-saves
-fno-caret-diagnostics
-fno-char8_t
Disable C++ builtin type char8_t
-fno-check-array-temporaries
-fno-check-new
-fno-color-diagnostics
Disable colors in diagnostics
-fno-common
Compile common globals like normal definitions
-fno-complete-member-pointers
Do not require member pointer base types to be complete if they would be significant under the Microsoft ABI
-fno-concept-satisfaction-caching
Disable satisfaction caching for C++2a Concepts.
-fno-const-strings
Don't use a const qualified type for string literals in C and ObjC
-fno-constant-cfstrings
Disable creation of CodeFoundation-type constant strings
-fno-constant-nsarray-literals
Disable creation of CodeFoundation-type constant initializer `NSArray`s from array literals
-fno-constant-nsdictionary-literals
Disable creation of CodeFoundation-type constant initializer `NSDictionary`s from dictionary literals
-fno-constant-nsnumber-literals
Disable creation of CodeFoundation-type constant initializer `NSNumber`s from number literals
-fno-coroutines-ts
-fno-coverage-mapping
Disable code coverage analysis
-fno-crash-diagnostics
Disable auto-generation of preprocessed source files and a script for reproduction during a clang crash
-fno-cray-pointer
-fno-cuda-approx-transcendentals
Don't use approximate transcendental functions
-fno-cuda-flush-denormals-to-zero
-fno-cuda-host-device-constexpr
Don't treat unattributed constexpr functions as __host__ __device__.
-fno-cuda-rdc
-fno-cuda-short-ptr
-fno-cxx-exceptions
-fno-cxx-modules
Disable modules for C++
-fno-d-lines-as-code
-fno-d-lines-as-comments
-fno-data-sections
-fno-debug-info-for-profiling
-fno-debug-macro
Do not emit macro debug information
-fno-debug-pass-manager
Disables debug printing for the new pass manager
-fno-debug-ranges-base-address
-fno-debug-types-section
-fno-declspec
Disallow __declspec as a keyword
-fno-default-inline
-fno-defer-pop
-fno-delayed-template-parsing
Disable delayed template parsing
-fno-delete-null-pointer-checks
Do not treat usage of null pointers as undefined behavior
-fno-deprecated-macro
Undefines the __DEPRECATED macro
-fno-devirtualize-speculatively
-fno-devirtualize
-fno-diagnostics-color
-fno-diagnostics-fixit-info
Do not include fixit information in diagnostics
-fno-diagnostics-show-hotness
-fno-diagnostics-show-note-include-stack
-fno-diagnostics-show-option
-fno-diagnostics-use-presumed-location
Ignore #line directives when displaying diagnostic locations
-fno-digraphs
Disallow alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:'
-fno-direct-access-external-data
Use GOT indirection to reference external data symbols
-fno-discard-value-names
Do not discard value names in LLVM IR
-fno-dllexport-inlines
-fno-dollar-ok
-fno-dollars-in-identifiers
Disallow '$' in identifiers
-fno-double-square-bracket-attributes
Disable '[[]]' attributes in all C and C++ language modes
-fno-dump-fortran-optimized
-fno-dump-fortran-original
-fno-dump-parse-tree
-fno-dwarf-directory-asm
-fno-dwarf2-cfi-asm
-fno-elide-constructors
Disable C++ copy constructor elision
-fno-elide-type
Do not elide types when printing diagnostics
-fno-eliminate-unused-debug-symbols
-fno-eliminate-unused-debug-types
Emit  debug info for defined but unused types
-fno-emulated-tls
-fno-escaping-block-tail-calls
-fno-exceptions
Disable support for exception handling
-fno-expensive-optimizations
-fno-experimental-isel
-fno-experimental-new-pass-manager
-fno-experimental-relative-c++-abi-vtables
Do not use the experimental C++ class ABI for classes with virtual tables
-fno-extended-identifiers
-fno-external-blas
-fno-f2c
-fno-fast-math
-fno-fat-lto-objects
-fno-fine-grained-bitfield-accesses
Use large-integer access for consecutive bitfield runs.
-fno-finite-loops
Do not assume that any loop is finite.
-fno-finite-math-only
-fno-fixed-point
Disable fixed point types
-fno-float-store
-fno-for-scope
-fno-force-dwarf-frame
-fno-force-emit-vtables
-fno-force-enable-int128
Disable support for int128_t type
-fno-friend-injection
-fno-frontend-optimize
-fno-function-attribute-list
-fno-function-sections
-fno-gcse-after-reload
-fno-gcse-las
-fno-gcse-sm
-fno-gcse
-fno-generic-block-helpers-use-extended-layout
Generic block helpers don't use extended layout
-fno-generic-block-helpers
Don't use generic block helpers for copying/destroying blocks
-fno-global-isel
Disables the global instruction selector
-fno-gnu-inline-asm
Disable GNU style inline asm
-fno-gnu-keywords
-fno-gnu89-inline
-fno-gnu
-fno-gpu-allow-device-init
Don't allow device side init function in HIP (experimental)
-fno-gpu-defer-diag
Don't defer host/device related diagnostic messages for CUDA/HIP
-fno-gpu-exclude-wrong-side-overloads
Exclude wrong side overloads only if there are same side overloads in overloading resolution for CUDA/HIP
-fno-gpu-flush-denormals-to-zero
-fno-gpu-rdc
-fno-gpu-sanitize
-fno-hip-fp32-correctly-rounded-divide-sqrt
Don't specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
-fno-hip-new-launch-api
Don't use new kernel launching API for HIP
-fno-honor-infinites
-fno-honor-infinities
-fno-honor-nans
-fno-ident
-fno-implement-inlines
-fno-implicit-module-maps
-fno-implicit-modules-use-lock
-fno-implicit-modules
-fno-implicit-none
-fno-implicit-templates
-fno-in-descriptor-block-flags
Don't emit in-descriptor block flags
-fno-init-local-zero
-fno-inline-functions-called-once
-fno-inline-functions
-fno-inline-limit
-fno-inline-small-functions
-fno-inline
-fno-integer-4-integer-8
-fno-integrated-as
Disable the integrated assembler
-fno-integrated-cc1
Spawn a separate process for each cc1
-fno-ipa-cp
-fno-ivopts
-fno-jump-tables
Do not use jump tables for lowering switches
-fno-keep-inline-functions
-fno-keep-static-consts
Don't keep static const variables if unused
-fno-lax-vector-conversions
-fno-legacy-pass-manager
Use the new pass manager in LLVM
-fno-limit-debug-info
-fno-logical-abbreviations
-fno-lto-unit
-fno-lto
Disable LTO mode (default)
-fno-math-builtin
Disable implicit builtin knowledge of math functions
-fno-math-errno
-fno-max-identifier-length
-fno-max-type-align
-fno-memory-profile
Disable heap memory profiling
-fno-merge-all-constants
Disallow merging of constants
-fno-merge-constants
-fno-minimize-whitespace
-fno-module-file-deps
-fno-module-maps
-fno-module-private
-fno-modules-decluse
-fno-modules-error-recovery
Do not automatically import modules for error recovery
-fno-modules-global-index
Do not automatically generate or update the global module index
-fno-modules-search-all
-fno-modules-validate-system-headers
-fno-modules
-fno-modulo-sched-allow-regmoves
-fno-modulo-sched
-fno-ms-compatibility
-fno-ms-extensions
-fno-non-call-exceptions
-fno-objc-arc-exceptions
-fno-objc-arc
-fno-objc-avoid-heapify-local-blocks
Don't try to avoid heapifying local blocks
-fno-objc-convert-messages-to-runtime-calls
-fno-objc-encode-cxx-class-template-spec
-fno-objc-exceptions
-fno-objc-infer-related-result-type
do not infer Objective-C related result type based on method family
-fno-objc-legacy-dispatch
-fno-objc-msgsend-selector-stubs
-fno-objc-nonfragile-abi
-fno-objc-relative-method-lists
-fno-objc-weak
-fno-odr-hash-categories
Disable ODR hash checking for categories
-fno-odr-hash-interfaces
Disable ODR hash checking for interfaces
-fno-odr-hash-ivars
Disable ODR hash checking for ivars
-fno-odr-hash-methods
Disable ODR hash checking for methods
-fno-odr-hash-properties
Disable ODR hash checking for properties
-fno-odr-hash-protocols
Disable ODR hash checking for protocols
-fno-odr-hash-records
Disable ODR hash checking for records
-fno-offload-lto
Disable LTO mode (default) for offload compilation
-fno-omit-frame-pointer
-fno-openmp-assume-teams-oversubscription
-fno-openmp-assume-threads-oversubscription
-fno-openmp-cuda-force-full-runtime
-fno-openmp-cuda-mode
-fno-openmp-extensions
Disable all Clang extensions for OpenMP directives and clauses
-fno-openmp-optimistic-collapse
-fno-openmp-simd
-fno-openmp-target-debug
-fno-openmp-target-new-runtime
-fno-openmp
-fno-operator-names
Do not treat C++ operator name keywords as synonyms for operators
-fno-optimize-sibling-calls
-fno-pack-derived
-fno-pack-struct
-fno-padding-on-unsigned-fixed-point
-fno-pascal-strings
-fno-pch-codegen
Do not generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
-fno-pch-debuginfo
Do not generate debug info for types in an object file built from this PCH and do not generate them elsewhere
-fno-pch-instantiate-templates
-fno-pch-timestamp
Disable inclusion of timestamp in precompiled headers
-fno-peel-loops
-fno-permissive
-fno-PIC
-fno-pic
-fno-PIE
-fno-pie
-fno-plt
Use GOT indirection instead of PLT to make external function calls (x86 only)
-fno-prebuilt-implicit-modules
-fno-prefetch-loop-arrays
-fno-preserve-as-comments
Do not preserve comments in inline assembly
-fno-printf
-fno-profile-arcs
-fno-profile-correction
-fno-profile-generate-sampling
-fno-profile-generate
Disable generation of profile instrumentation.
-fno-profile-instr-generate
-fno-profile-instr-use
Disable using instrumentation data for profile-guided optimization
-fno-profile-reusedist
-fno-profile-sample-accurate
-fno-profile-sample-use
-fno-profile-use
-fno-profile-values
-fno-profile
-fno-protect-parens
-fno-pseudo-probe-for-profiling
Do not emit pseudo probes for sample profiling
-fno-ptrauth-abi-version
Disable Pointer Authentication ABI versioning
-fno-ptrauth-auth-traps
-fno-ptrauth-block-descriptor-pointers
-fno-ptrauth-calls
-fno-ptrauth-function-pointer-type-discrimination
-fno-ptrauth-indirect-gotos
-fno-ptrauth-intrinsics
-fno-ptrauth-kernel-abi-version
Disable Pointer Authentication kernel ABI versioning
-fno-ptrauth-objc-class-ro
-fno-ptrauth-objc-interface-sel
-fno-ptrauth-objc-isa
-fno-ptrauth-returns
-fno-ptrauth-soft
-fno-ptrauth-vtable-pointer-address-discrimination
-fno-ptrauth-vtable-pointer-type-discrimination
-fno-range-check
-fno-real-4-real-10
-fno-real-4-real-16
-fno-real-4-real-8
-fno-real-8-real-10
-fno-real-8-real-16
-fno-real-8-real-4
-fno-realloc-lhs
-fno-reciprocal-math
-fno-record-command-line
-fno-record-gcc-switches
-fno-recovery-ast-type
-fno-recovery-ast
-fno-recursive
-fno-reformat
Dump the cooked character stream in -E mode
-fno-register-global-dtors-with-atexit
Don't use atexit or __cxa_atexit to register global destructors
-fno-regs-graph
-fno-relaxed-template-template-args
-fno-rename-registers
-fno-reorder-blocks
-fno-repack-arrays
-fno-reroll-loops
-fno-rewrite-imports
-fno-rewrite-includes
-fno-ripa
-fno-ropi
-fno-rounding-math
-fno-rtlib-add-rpath
Do not add -rpath with architecture-specific resource directory to the linker flags
-fno-rtti-data
Disable generation of RTTI data
-fno-rtti
Disable generation of rtti information
-fno-rwpi
-fno-sanitize-address-outline-instrumentation
Use default code inlining logic for the address sanitizer
-fno-sanitize-address-poison-custom-array-cookie
Disable poisoning array cookies when using custom operator new[] in AddressSanitizer
-fno-sanitize-address-use-after-scope
Disable use-after-scope detection in AddressSanitizer
-fno-sanitize-address-use-odr-indicator
Disable ODR indicator globals
/fno-sanitize-address-vcasan-lib
-fno-sanitize-blacklist
-fno-sanitize-cfi-canonical-jump-tables
Do not make the jump table addresses canonical in the symbol table
-fno-sanitize-cfi-cross-dso
Disable control flow integrity (CFI) checks for cross-DSO calls.
-fno-sanitize-coverage=
Disable features of coverage instrumentation for Sanitizers
func,bb,edge,indirect-calls,trace-bb,trace-cmp,trace-div,trace-gep,8bit-counters,trace-pc,trace-pc-guard,no-prune,inline-8bit-counters,inline-bool-flag
-fno-sanitize-hwaddress-experimental-aliasing
Disable aliasing mode in HWAddressSanitizer
-fno-sanitize-ignorelist
Don't use ignorelist file for sanitizers
-fno-sanitize-link-c++-runtime
-fno-sanitize-link-runtime
-fno-sanitize-memory-track-origins
Disable origins tracking in MemorySanitizer
-fno-sanitize-memory-use-after-dtor
Disable use-after-destroy detection in MemorySanitizer
-fno-sanitize-minimal-runtime
-fno-sanitize-recover=
Disable recovery for specified sanitizers
-fno-sanitize-recover
-fno-sanitize-stats
Disable sanitizer statistics gathering.
-fno-sanitize-thread-atomics
Disable atomic operations instrumentation in ThreadSanitizer
-fno-sanitize-thread-func-entry-exit
Disable function entry/exit instrumentation in ThreadSanitizer
-fno-sanitize-thread-memory-access
Disable memory access instrumentation in ThreadSanitizer
-fno-sanitize-trap=
Disable trapping for specified sanitizers
-fno-sanitize-trap
Disable trapping for all sanitizers
-fno-sanitize-undefined-trap-on-error
-fno-sanitize=
-fno-save-optimization-record
-fno-schedule-insns2
-fno-schedule-insns
-fno-second-underscore
-fno-see
-fno-semantic-interposition
-fno-short-enums
-fno-short-wchar
Force wchar_t to be an unsigned int
-fno-show-column
Do not include column number on diagnostics
-fno-show-source-location
Do not include source location information with diagnostics
-fno-sign-zero
-fno-signaling-math
-fno-signaling-nans
-fno-signed-char
char is unsigned
-fno-signed-wchar
Use an unsigned type for wchar_t
-fno-signed-zeros
Allow optimizations that ignore the sign of floating point zeros
-fno-single-precision-constant
-fno-sized-deallocation
-fno-slp-vectorize-aggressive
-fno-slp-vectorize
-fno-small-block-descriptors
-fno-spec-constr-count
-fno-spell-checking
Disable spell-checking
-fno-split-cold-code
Disable splitting of cold code when optimizing.
-fno-split-dwarf-inlining
-fno-split-lto-unit
-fno-split-machine-functions
Disable late function splitting using profile information (x86 ELF)
-fno-split-stack
Wouldn't use segmented stack
-fno-stack-arrays
-fno-stack-check
Disable stack checking
-fno-stack-clash-protection
Disable stack clash protection
-fno-stack-protector
Disable the use of stack protectors
-fno-stack-size-section
-fno-standalone-debug
Limit debug information produced to reduce size of debug binary
-fno-strength-reduce
-fno-strict-aliasing
-fno-strict-enums
-fno-strict-float-cast-overflow
Relax language rules and try to match the behavior of the target's native float-to-int conversion instructions
-fno-strict-modules-decluse
-fno-strict-overflow
-fno-strict-return
Don't treat control flow paths that fall off the end of a non-void function as unreachable
-fno-strict-vtable-pointers
-fno-struct-path-tbaa
-fno-sycl
Disables SYCL kernels compilation for device
-fno-target-variant-availability-checks
-fno-temp-file
Directly create compilation output files. This may lead to incorrect incremental builds if the compiler crashes
-fno-test-coverage
-fno-threadsafe-statics
Do not emit code to make initialization of local statics thread safe
-fno-tls-model
-fno-tracer
-fno-trapping-math
-fno-tree-dce
-fno-tree-salias
-fno-tree-slp-vectorize
-fno-tree-ter
-fno-tree-vectorizer-verbose
-fno-tree-vectorize
-fno-tree-vrp
-fno-trigraphs
Do not process trigraph sequences
-fno-underscoring
-fno-unique-basic-block-section-names
-fno-unique-internal-linkage-names
-fno-unique-section-names
Don't use unique names for text and data sections
-fno-unit-at-a-time
-fno-unroll-all-loops
-fno-unroll-loops
Turn off loop unroller
-fno-unsafe-loop-optimizations
-fno-unsafe-math-optimizations
-fno-unsigned-char
-fno-unswitch-loops
-fno-unwind-tables
-fno-use-ctor-homing
Don't use constructor homing for debug info
-fno-use-cxa-atexit
Don't use __cxa_atexit for calling destructors
-fno-use-init-array
Use .ctors/.dtors instead of .init_array/.fini_array
-fno-use-line-directives
-fno-use-linker-plugin
-fno-validate-pch
Disable validation of precompiled headers
-fno-var-tracking
-fno-variable-expansion-in-unroller
-fno-vect-cost-model
-fno-vectorize
-fno-verbose-asm
-fno-virtual-function-elimination
-fno-visibility-from-dllstorageclass
-fno-visibility-inlines-hidden-static-local-var
Disables -fvisibility-inlines-hidden-static-local-var (this is the default on non-darwin targets)
-fno-visibility-inlines-hidden
-fno-wchar
Disable C++ builtin type wchar_t
-fno-web
-fno-whole-file
-fno-whole-program-vtables
-fno-whole-program
-fno-working-directory
-fno-wrapv
-fno-xl-pragma-pack
-fno-xor-operator
-fno-xray-always-emit-customevents
-fno-xray-always-emit-typedevents
-fno-xray-function-index
Omit function index section at the expense of single-function patching performance
-fno-xray-ignore-loops
-fno-xray-instrument
-fno-zero-initialized-in-bss
Don't place zero initialized data in BSS
-fno-zvector
-fno_modules-validate-input-files-content
-fno_pch-validate-input-files-content
-fnon-call-exceptions
-fnoopenmp-relocatable-target
-fnoopenmp-use-tls
-fnoxray-link-deps
-fobjc-abi-version=
-fobjc-arc-cxxlib=
Objective-C++ Automatic Reference Counting standard library kind
libc++,libstdc++,none
-fobjc-arc-exceptions
Use EH-safe code when synthesizing retains and releases in -fobjc-arc
-fobjc-arc
Synthesize retain and release calls for Objective-C pointers
-fobjc-atdefs
-fobjc-avoid-heapify-local-blocks
Try to avoid heapifying local blocks
-fobjc-call-cxx-cdtors
-fobjc-constant-literals
-fobjc-convert-messages-to-runtime-calls
-fobjc-disable-direct-methods-for-testing
Ignore attribute objc_direct so that direct methods can be tested
-fobjc-dispatch-method=
Objective-C dispatch method to use
legacy,non-legacy,mixed
-fobjc-encode-cxx-class-template-spec
Fully encode c++ class template specialization
-fobjc-exceptions
Enable Objective-C exceptions
-fobjc-gc-only
Use GC exclusively for Objective-C related memory management
-fobjc-gc
Enable Objective-C garbage collection
-fobjc-infer-related-result-type
-fobjc-legacy-dispatch
-fobjc-link-runtime
-fobjc-msgsend-selector-stubs
-fobjc-new-property
-fobjc-nonfragile-abi-version=
-fobjc-nonfragile-abi
-fobjc-relative-method-lists
Enable relative method lists
-fobjc-runtime-has-weak
The target Objective-C runtime supports ARC weak operations
-fobjc-runtime=
Specify the target Objective-C runtime kind and version
-fobjc-sender-dependent-dispatch
-fobjc-subscripting-legacy-runtime
Allow Objective-C array and dictionary subscripting in legacy runtime
-fobjc-weak
Enable ARC-style weak references in Objective-C
-fodr-hash-attributes
Enable ODR hash checking for attributes 
-foffload-lto=
Set LTO mode to either 'full' or 'thin' for offload compilation
-foffload-lto
Enable LTO in 'full' mode for offload compilation
-fomit-frame-pointer
-fopenacc
Enable OpenACC
-fopenmp-assume-teams-oversubscription
-fopenmp-assume-threads-oversubscription
-fopenmp-cuda-blocks-per-sm=
-fopenmp-cuda-force-full-runtime
-fopenmp-cuda-mode
-fopenmp-cuda-number-of-sm=
-fopenmp-cuda-teams-reduction-recs-num=
-fopenmp-enable-irbuilder
Use the experimental OpenMP-IR-Builder codegen path.
-fopenmp-extensions
Enable all Clang extensions for OpenMP directives and clauses
-fopenmp-host-ir-file-path
Path to the IR file produced by the frontend for the host.
-fopenmp-is-device
Generate code only for an OpenMP target device.
-fopenmp-optimistic-collapse
-fopenmp-relocatable-target
-fopenmp-simd
Emit OpenMP code only for SIMD-based constructs.
-fopenmp-target-debug=
-fopenmp-target-debug
Enable debugging in the OpenMP offloading device RTL
-fopenmp-target-new-runtime
Use the new bitcode library for OpenMP offloading
-fopenmp-targets=
Specify comma-separated list of triples OpenMP offloading targets to be supported
-fopenmp-use-tls
-fopenmp-version=
-fopenmp=
-fopenmp
Parse OpenMP pragmas and generate parallel code.
-foperator-arrow-depth=
-foperator-arrow-depth
Maximum number of 'operator->'s to call for a member access
-foperator-names
-foptimization-record-file=
Specify the output name of the file containing the optimization remarks. Implies -fsave-optimization-record. On Darwin platforms, this cannot be used with multiple -arch <arch> options.
-foptimization-record-passes=
Only include passes which match a specified regular expression in the generated optimization record (by default, include all passes)
<regex>
-foptimize-sibling-calls
--for-linker=
--for-linker
--force-link=
--force-link
-force_cpusubtype_ALL
-force_flat_namespace
-force_load
-forder-file-instrumentation
Generate instrumented code to collect order file into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
-foutput-class-dir=
-foverride-record-layout=
Override record layouts with those in the given file
Set output object file (with /c)
/fp:except-
/fp:except
/fp:fast
/fp:precise
/fp:strict
-fpack-derived
-fpack-struct=
Specify the default maximum struct packing alignment
-fpack-struct
-fpadding-on-unsigned-fixed-point
Force each unsigned fixed point type to have an extra bit of padding to align their scales with those of signed fixed point types
-fparse-all-comments
-fpascal-strings
Recognize and construct Pascal-style string literals
-fpass-by-value-is-noalias
Allows assuming by-value parameters do not alias any other value. Has no effect on non-trivially-copyable classes in C++.
-fpass-plugin=
Load pass plugin from a dynamic shared object file (only with new pass manager).
<dsopath>
-fpatchable-function-entry-offset=
Generate M NOPs before function entry
-fpatchable-function-entry=
Generate M NOPs before function entry and N-M NOPs after function entry
<N,M>
-fpcc-struct-return
Override the default ABI to return all structs on the stack
-fpch-codegen
Generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
-fpch-debuginfo
Generate debug info for types in an object file built from this PCH and do not generate them elsewhere
-fpch-instantiate-templates
Instantiate templates already while building a PCH
-fpch-preprocess
-fpch-validate-input-files-content
Validate PCH input files based on content if mtime differs
-fpeel-loops
-fpermissive
-fPIC
-fpic
-fPIE
-fpie
-fplt
-fplugin=
Load the named plugin (dynamic shared object)
-fprebuilt-implicit-modules
Look up implicit modules in the prebuilt module path
-fprebuilt-module-path=
Specify the prebuilt module path
-fprefetch-loop-arrays
-fpreserve-as-comments
-fpreserve-vec3-type
Preserve 3-component vector type
-fprintf
-fproc-stat-report=
Save subprocess statistics to the given file
-fproc-stat-report
Print subprocess statistics
-fprofile-arcs
-fprofile-correction
-fprofile-dir=
-fprofile-exclude-files=
Instrument only functions from files where names don't match all the regexes separated by a semi-colon
-fprofile-filter-files=
Instrument only functions from files where names match any regex separated by a semi-colon
-fprofile-generate-sampling
-fprofile-generate=
Generate instrumented code to collect execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
-fprofile-generate
Generate instrumented code to collect execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
-fprofile-instr-generate=
Generate instrumented code to collect execution counts into <file> (overridden by LLVM_PROFILE_FILE env var)
-fprofile-instr-generate
Generate instrumented code to collect execution counts into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
-fprofile-instr-use=
Use instrumentation data for profile-guided optimization
-fprofile-instr-use
-fprofile-instrument-path=
-fprofile-instrument-use-path=
Specify the profile path in PGO use compilation
-fprofile-instrument=
Enable PGO instrumentation. The accepted value is clang, llvm, or none
none,clang,llvm,csllvm
-fprofile-list=
Filename defining the list of functions/files to instrument
-fprofile-remapping-file=
Use the remappings described in <file> to match the profile data against names in the program
-fprofile-reusedist
-fprofile-sample-accurate
Specifies that the sample profile is accurate
-fprofile-sample-use=
Enable sample-based profile guided optimizations
-fprofile-sample-use
-fprofile-update=
Set update method of profile counters (atomic,prefer-atomic,single)
<method>
atomic,prefer-atomic,single
-fprofile-use=
Use instrumentation data for profile-guided optimization. If pathname is a directory, it reads from <pathname>/default.profdata. Otherwise, it reads from file <pathname>.
<pathname>
-fprofile-use
-fprofile-values
-fprofile
-fprotect-parens
Determines whether the optimizer honors parentheses when floating-point expressions are evaluated
-fpseudo-probe-for-profiling
Emit pseudo probes for sample profiling
-fptrauth-abi-version=
Pointer Authentication ABI version
-fptrauth-auth-traps
Enable traps on authentication failures
-fptrauth-block-descriptor-pointers
enable signing block descriptors
-fptrauth-calls
Enable signing and authentication of all indirect calls
-fptrauth-function-pointer-type-discrimination
Enabling type discrimination on C function pointers
-fptrauth-indirect-gotos
Enable signing and authentication of indirect goto targets
-fptrauth-intrinsics
Enable pointer-authentication intrinsics
-fptrauth-kernel-abi-version
Enable Pointer Authentication kernel ABI version
-fptrauth-objc-class-ro
Enable signing and authentication for ObjC class_ro pointers
-fptrauth-objc-interface-sel
Enable signing and authentication of Objective-C object's 'SEL' fields
-fptrauth-objc-isa-masking
pre- and post-authentication masking mode of objective-c isa pointers
-fptrauth-objc-isa-mode=
Authentication mode for ObjC isa field. Full auth if unspecified
strip,sign-and-strip,sign-and-auth
-fptrauth-objc-isa
Enable signing and authentication of Objective-C object's 'isa' field
-fptrauth-returns
Enable signing and authentication of return addresses
-fptrauth-soft
Enable software lowering of pointer authentication
-fptrauth-vtable-pointer-address-discrimination
Enable address discrimination of vtable pointers
-fptrauth-vtable-pointer-type-discrimination
Enable type discrimination of vtable pointers
Set pch file name (with /Yc and /Yu)
-framework
-frandom-seed=
-frange-check
-freal-4-real-10
-freal-4-real-16
-freal-4-real-8
-freal-8-real-10
-freal-8-real-16
-freal-8-real-4
-frealloc-lhs
-freciprocal-math
Allow division operations to be reassociated
-frecord-command-line
-frecord-gcc-switches
-frecord-marker=
-frecovery-ast-type
Preserve the type for recovery expressions when possible
-frecovery-ast
Preserve expressions in AST rather than dropping them when encountering semantic errors
-frecursive
-freg-struct-return
Override the default ABI to return small structs in registers
-fregister-global-dtors-with-atexit
Use atexit or __cxa_atexit to register global destructors
-fregs-graph
-frelaxed-template-template-args
Enable C++17 relaxed template template argument matching
-frename-registers
-freorder-blocks
-frepack-arrays
-freroll-loops
Turn on loop reroller
-fretain-comments-from-system-headers
-frewrite-imports
-frewrite-includes
-frewrite-map-file=
-fripa
-fropi
Generate read-only position independent code (ARM only)
-frounding-math
-frtlib-add-rpath
Add -rpath with architecture-specific resource directory to the linker flags
-frtti-data
-frtti
-frwpi
Generate read-write position independent code (ARM only)
-fsanitize-address-destructor=
Set destructor type used in ASan instrumentation
none,global
-fsanitize-address-field-padding=
Level of field padding for AddressSanitizer
-fsanitize-address-globals-dead-stripping
Enable linker dead stripping of globals in AddressSanitizer
-fsanitize-address-outline-instrumentation
Always generate function calls for address sanitizer instrumentation
-fsanitize-address-poison-custom-array-cookie
Enable poisoning array cookies when using custom operator new[] in AddressSanitizer
-fsanitize-address-use-after-return=
Select the mode of detecting stack use-after-return in AddressSanitizer: never | runtime (default) | always
<mode>
never,runtime,always
/fsanitize-address-use-after-return
-fsanitize-address-use-after-scope
Enable use-after-scope detection in AddressSanitizer
-fsanitize-address-use-odr-indicator
Enable ODR indicator globals to avoid false ODR violation reports in partially sanitized programs at the cost of an increase in binary size
-fsanitize-blacklist=
Alias for -fsanitize-ignorelist=
-fsanitize-cfi-canonical-jump-tables
Make the jump table addresses canonical in the symbol table
-fsanitize-cfi-cross-dso
Enable control flow integrity (CFI) checks for cross-DSO calls.
-fsanitize-cfi-icall-generalize-pointers
Generalize pointers in CFI indirect call type signature checks
-fsanitize-coverage-8bit-counters
Enable frequency counters in sanitizer coverage
-fsanitize-coverage-allowlist=
Restrict sanitizer coverage instrumentation exclusively to modules and functions that match the provided special case list, except the blocked ones
-fsanitize-coverage-blacklist=
Deprecated, use -fsanitize-coverage-ignorelist= instead
-fsanitize-coverage-ignorelist=
Disable sanitizer coverage instrumentation for modules and functions that match the provided special case list, even the allowed ones
-fsanitize-coverage-indirect-calls
Enable sanitizer coverage for indirect calls
-fsanitize-coverage-inline-8bit-counters
Enable inline 8-bit counters in sanitizer coverage
-fsanitize-coverage-inline-bool-flag
Enable inline bool flag in sanitizer coverage
-fsanitize-coverage-no-prune
Disable coverage pruning (i.e. instrument all blocks/edges)
-fsanitize-coverage-pc-table
Create a table of coverage-instrumented PCs
-fsanitize-coverage-stack-depth
Enable max stack depth tracing
-fsanitize-coverage-trace-bb
Enable basic block tracing in sanitizer coverage
-fsanitize-coverage-trace-cmp
Enable cmp instruction tracing in sanitizer coverage
-fsanitize-coverage-trace-div
Enable div instruction tracing in sanitizer coverage
-fsanitize-coverage-trace-gep
Enable gep instruction tracing in sanitizer coverage
-fsanitize-coverage-trace-pc-guard
Enable PC tracing with guard in sanitizer coverage
-fsanitize-coverage-trace-pc
Enable PC tracing in sanitizer coverage
-fsanitize-coverage-type=
Sanitizer coverage type
-fsanitize-coverage-whitelist=
Deprecated, use -fsanitize-coverage-allowlist= instead
-fsanitize-coverage=
Specify the type of coverage instrumentation for Sanitizers
-fsanitize-hwaddress-abi=
Select the HWAddressSanitizer ABI to target (interceptor or platform, default interceptor). This option is currently unused.
-fsanitize-hwaddress-experimental-aliasing
Enable aliasing mode in HWAddressSanitizer
-fsanitize-ignorelist=
Path to ignorelist file for sanitizers
-fsanitize-link-c++-runtime
-fsanitize-link-runtime
-fsanitize-memory-track-origins=
Enable origins tracking in MemorySanitizer
-fsanitize-memory-track-origins
-fsanitize-memory-use-after-dtor
Enable use-after-destroy detection in MemorySanitizer
-fsanitize-minimal-runtime
-fsanitize-recover=
Enable recovery for specified sanitizers
-fsanitize-recover
-fsanitize-stats
Enable sanitizer statistics gathering.
-fsanitize-system-blacklist=
Alias for -fsanitize-system-ignorelist=
-fsanitize-system-ignorelist=
Path to system ignorelist file for sanitizers
-fsanitize-thread-atomics
Enable atomic operations instrumentation in ThreadSanitizer (default)
-fsanitize-thread-func-entry-exit
Enable function entry/exit instrumentation in ThreadSanitizer (default)
-fsanitize-thread-memory-access
Enable memory access instrumentation in ThreadSanitizer (default)
-fsanitize-trap=
Enable trapping for specified sanitizers
-fsanitize-trap
Enable trapping for all sanitizers
-fsanitize-undefined-strip-path-components=
Strip (or keep only, if negative) a given number of path components when emitting check metadata.
<number>
-fsanitize-undefined-trap-on-error
/fsanitize=address
Enable AddressSanitizer
-fsanitize=
Turn on runtime checks for various forms of undefined or suspicious behavior. See user manual for available checks
<check>
-fsave-optimization-record=
Generate an optimization record file in a specific format
<format>
-fsave-optimization-record
Generate a YAML optimization record file
-fsched-interblock
-fschedule-insns2
-fschedule-insns
-fsecond-underscore
-fsee
-fseh-exceptions
Use SEH style exceptions
-fsemantic-interposition
-fshort-enums
Allocate to an enum type only as many bytes as it needs for the declared range of possible values
-fshort-wchar
Force wchar_t to be a short unsigned int
-fshow-column
-fshow-overloads=
Which overload candidates to show when overload resolution fails: best|all; defaults to all
best,all
-fshow-skipped-includes
Show skipped includes in -H output.
-fshow-source-location
-fsign-zero
-fsignaling-math
-fsignaling-nans
-fsigned-bitfields
-fsigned-char
char is signed
-fsigned-wchar
Use a signed type for wchar_t
-fsigned-zeros
-fsingle-precision-constant
-fsized-deallocation
Enable C++14 sized global deallocation functions
-fsjlj-exceptions
Use SjLj style exceptions
-fslp-vectorize-aggressive
-fslp-vectorize
Enable the superword-level parallelism vectorization passes
-fsmall-block-descriptors
Enable small block descriptors
-fspec-constr-count
-fspell-checking-limit=
-fspell-checking-limit
Set the maximum number of times to perform spell checking on unrecognized identifiers (0 = no limit).
-fspell-checking
-fsplit-cold-code
Permit splitting of cold code when optimizing (off by default).
-fsplit-dwarf-inlining
Provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF
-fsplit-lto-unit
Enables splitting of the LTO unit
-fsplit-machine-functions
Enable late function splitting using profile information (x86 ELF)
-fsplit-stack
Use segmented stack
-fstack-arrays
-fstack-check
Enable stack checking
-fstack-clash-protection
Enable stack clash protection
-fstack-protector-all
Enable stack protectors for all functions
-fstack-protector-strong
Enable stack protectors for some functions vulnerable to stack smashing. Compared to -fstack-protector, this uses a stronger heuristic that includes functions containing arrays of any size (and any type), as well as any calls to alloca or the taking of an address from a local variable
-fstack-protector
Enable stack protectors for some functions vulnerable to stack smashing. This uses a loose heuristic which considers functions vulnerable if they contain a char (or 8bit integer) array or constant sized calls to alloca , which are of greater size than ssp-buffer-size (default: 8 bytes). All variable sized calls to alloca are considered vulnerable. A function with a stack protector has a guard value added to the stack frame that is checked on function exit. The guard value must be positioned in the stack frame such that a buffer overflow from a vulnerable variable will overwrite the guard value before overwriting the function's return address. The reference stack guard value is stored in a global variable.
-fstack-size-section
Emit section containing metadata on function stack sizes
-fstack-usage
Emit .su file containing information on function stack sizes
-fstandalone-debug
Emit full debug info for all types used by the program
-fstrength-reduce
-fstrict-aliasing
-fstrict-enums
Enable optimizations based on the strict definition of an enum's value range
-fstrict-float-cast-overflow
Assume that overflowing float-to-int casts are undefined (default)
-fstrict-overflow
-fstrict-return
-fstrict-vtable-pointers
Enable optimizations based on the strict rules for overwriting polymorphic C++ objects
-fstruct-path-tbaa
-fswift-async-fp=
Control emission of Swift async extended frame info (option: auto, always, never)
auto,always,never
-fsycl-is-device
Generate code for SYCL device.
-fsycl-is-host
SYCL host compilation
-fsycl
Enables SYCL kernels compilation for device
-fsymbol-partition=
-fsyntax-only
-fsystem-module
Build this module as a system module. Only used with -emit-module
-ftabstop=
-ftabstop
Set the tab stop distance.
-ftarget-variant-availability-checks
Enable availability checks for the target variant platform
-ftemplate-backtrace-limit=
-ftemplate-backtrace-limit
Set the maximum number of entries to print in a template instantiation backtrace (0 = no limit).
-ftemplate-depth-
-ftemplate-depth=
-ftemplate-depth
Maximum depth of recursive template instantiation
-fterminated-vtables
-ftest-coverage
-ftest-module-file-extension=
introduce a module file extension for testing purposes. The argument is parsed as blockname:major:minor:hashed:user info
-fthin-link-bitcode=
Write minimized bitcode to <file> for the ThinLTO thin link only
-fthinlto-index=
Perform ThinLTO importing using provided function summary index
-fthreadsafe-statics
-ftime-report=
(For new pass manager) "per-pass": one report for each pass; "per-pass-run": one report for each pass invocation
per-pass,per-pass-run
-ftime-report
-ftime-trace-granularity=
Minimum time granularity (in microseconds) traced by time profiler
-ftime-trace
Turn on time profiler. Generates JSON file based on output filename.
-ftls-model=
global-dynamic,local-dynamic,initial-exec,local-exec
-ftls-model
-ftracer
-ftrap-function=
Issue call to specified function rather than a trap instruction
-ftrapping-math
-ftrapv-handler=
Specify the function to be called on overflow
<function name>
-ftrapv-handler
-ftrapv
Trap on integer overflow
-ftree-dce
-ftree-salias
-ftree-slp-vectorize
-ftree-ter
-ftree-vectorizer-verbose
-ftree-vectorize
-ftree-vrp
-ftrigraphs
Process trigraph sequences
-ftrivial-auto-var-init-skip-cpp-obj
do not auto-initialize objects initialized by a C++ constructor
-ftrivial-auto-var-init-skip-non-pod
do not auto-initialize non-POD objects
-ftrivial-auto-var-init-skip-non-ptr-array
do not auto-initialize arrays other than arrays of pointers
-ftrivial-auto-var-init-skip-stl
do not auto-initialize variables in STL namespace
-ftrivial-auto-var-init-stop-after=
Stop initializing trivial automatic stack variables after the specified number of instances
-ftrivial-auto-var-init=
Initialize trivial automatic stack variables: uninitialized (default) | pattern
uninitialized,zero,pattern
-ftrivial-auto-var-zero-init-max-size=
Zero initialize only first N bytes of each stack variable; 0 value turns off the limit.
-ftype-visibility
Default type visibility
default,hidden,internal,protected
-function-alignment
default alignment for functions
-funderscoring
-funique-basic-block-section-names
Use unique names for basic block sections (ELF Only)
-funique-internal-linkage-names
Uniqueify Internal Linkage Symbol Names by appending the MD5 hash of the module path
-funique-section-names
-funit-at-a-time
-funknown-anytype
Enable parser support for the __unknown_anytype type; for testing purposes only
-funroll-all-loops
-funroll-loops
Turn on loop unroller
-funsafe-loop-optimizations
-funsafe-math-optimizations
-funsigned-bitfields
-funsigned-char
-funswitch-loops
-funwind-tables=
Generate unwinding tables for all functions
-funwind-tables
-fuse-ctor-homing
Use constructor homing if we are using limited debug info already
-fuse-cuid=
Method to generate ID's for compilation units for single source offloading languages CUDA and HIP: 'hash' (ID's generated by hashing file path and command line options) | 'random' (ID's generated as random numbers) | 'none' (disabled). Default is 'hash'. This option will be overridden by option '-cuid=[ID]' if it is specified.
-fuse-cxa-atexit
-fuse-init-array
-fuse-ld=
-fuse-line-directives
Use #line in preprocessed output
-fuse-linker-plugin
-fuse-register-sized-bitfield-access
Use register sized accesses to bit-fields, when possible.
-fvalidate-ast-input-files-content
Compute and store the hash of input files used to build an AST. Files with mismatching mtime's are considered valid if both contents is identical
-fvariable-expansion-in-unroller
-fveclib=
Use the given vector functions library
Accelerate,libmvec,MASSV,SVML,Darwin_libsystem_m,none
-fvect-cost-model
-fvectorize
Enable the loop vectorization passes
-fverbose-asm
Generate verbose assembly output
-fverify-debuginfo-preserve-export=
Export debug info (by testing original Debug Info) failures into specified (JSON) file (should be abs path as we use append mode to insert new JSON objects).
-fverify-debuginfo-preserve
Enable Debug Info Metadata preservation testing in optimizations.
-fvirtual-function-elimination
Enables dead virtual function elimination optimization. Requires -flto=full
-fvisibility-dllexport=
The visibility for dllexport definitions [-fvisibility-from-dllstorageclass]
-fvisibility-externs-dllimport=
The visibility for dllimport external declarations [-fvisibility-from-dllstorageclass]
-fvisibility-externs-nodllstorageclass=
The visibility for external declarations without an explicit DLL dllstorageclass [-fvisibility-from-dllstorageclass]
-fvisibility-from-dllstorageclass
Set the visibility of symbols in the generated code from their DLL storage class
-fvisibility-global-new-delete-hidden
Give global C++ operator new and delete declarations hidden visibility
-fvisibility-inlines-hidden-static-local-var
When -fvisibility-inlines-hidden is enabled, static variables in inline C++ member functions will also be given hidden visibility by default
-fvisibility-inlines-hidden
Give inline C++ member functions hidden visibility by default
-fvisibility-ms-compat
Give global types 'default' visibility and global functions and variables 'hidden' visibility by default
-fvisibility-nodllstorageclass=
The visibility for defintiions without an explicit DLL export class [-fvisibility-from-dllstorageclass]
-fvisibility=
Set the default symbol visibility for all global declarations
hidden,default
-fvisibility
Default type and symbol visibility
-fwarn-stack-size=
-fwasm-exceptions
Use WebAssembly style exceptions
-fwchar-type=
Select underlying type for wchar_t
char,short,int
-fweb
-fwhole-file
-fwhole-program-vtables
Enables whole-program vtable optimization. Requires -flto
-fwhole-program
-fwrapv
Treat signed integer overflow as two's complement
-fwritable-strings
Store string literals as writable data
-fxl-pragma-pack
Enable IBM XL #pragma pack handling
-fxor-operator
Enable .XOR. as a synonym of .NEQV.
-fxray-always-emit-customevents
Always emit __xray_customevent(...) calls even if the containing function is not always instrumented
-fxray-always-emit-typedevents
Always emit __xray_typedevent(...) calls even if the containing function is not always instrumented
-fxray-always-instrument=
DEPRECATED: Filename defining the whitelist for imbuing the 'always instrument' XRay attribute.
-fxray-attr-list=
Filename defining the list of functions/types for imbuing XRay attributes.
-fxray-function-groups=
Only instrument 1 of N groups
-fxray-function-index
-fxray-ignore-loops
Don't instrument functions with loops unless they also meet the minimum function size
-fxray-instruction-threshold=
Sets the minimum function size to instrument with XRay
-fxray-instruction-threshold
-fxray-instrumentation-bundle=
Select which XRay instrumentation points to emit. Options: all, none, function-entry, function-exit, function, custom. Default is 'all'.  'function' includes both 'function-entry' and 'function-exit'.
-fxray-instrument
Generate XRay instrumentation sleds on function entry and exit
-fxray-link-deps
Tells clang to add the link dependencies for XRay.
-fxray-modes=
List of modes to link in by default into XRay instrumented binaries.
-fxray-never-instrument=
DEPRECATED: Filename defining the whitelist for imbuing the 'never instrument' XRay attribute.
-fxray-selected-function-group=
When using -fxray-function-groups, select which group of functions to instrument. Valid range is 0 to fxray-function-groups - 1
-fzero-initialized-in-bss
-fzvector
Enable System z vector language extension
Add directory to framework include search path
Assume thread-local variables are defined in the executable
--gcc-toolchain=
Search for GCC installation in the specified directory on targets which commonly use GCC. The directory usually contains 'lib{,32,64}/gcc{,-cross}/$triple' and 'include'. If specified, sysroot is skipped for GCC detection. Note: executables (e.g. ld) used by the compiler are not overridden by the selected GCC installation
-gcodeview-ghash
Emit type record hashes in a .debug$H section
-gcodeview
Generate CodeView debug information
-gcoff
-gcolumn-info
-gdbx
-gdwarf-2
Generate source-level debug information with dwarf version 2
-gdwarf-3
Generate source-level debug information with dwarf version 3
-gdwarf-4
Generate source-level debug information with dwarf version 4
-gdwarf-5
Generate source-level debug information with dwarf version 5
-gdwarf-aranges
-gdwarf32
Enables DWARF32 format for ELF binaries, if debug information emission is enabled.
-gdwarf64
Enables DWARF64 format for ELF binaries, if debug information emission is enabled.
-gdwarf
Generate source-level debug information with the default dwarf version
Set __cdecl as a default calling convention
-gembed-source
Embed source text in DWARF debug sections
-gen-cdb-fragment-path
Emit a compilation database fragment to the specified directory
-gen-reproducer
Auto-generates preprocessed source files and a reproduction script
/GF-
Disable string pooling
-gfull
Enable string pooling (default)
-ggdb0
-ggdb1
-ggdb2
-ggdb3
-ggdb
-ggnu-pubnames
-ginline-line-tables
/GL-
-gline-directives-only
Emit debug line info directives only
-gline-tables-only
Emit debug line number tables only
-glldb
/Gm-
-gmlt
-gmodules
-gno-codeview-ghash
-gno-column-info
-gno-embed-source
Restore the default behavior of not embedding source text in DWARF debug sections
-gno-gnu-pubnames
-gno-inline-line-tables
Don't emit inline line tables.
-gno-pubnames
-gno-record-command-line
-gno-record-gcc-switches
-gno-simple-template-names
-gno-split-dwarf
-gno-strict-dwarf
--gpu-bundle-output
Bundle output files of HIP device compilation
--gpu-instrument-lib=
Instrument device library for HIP, which is a LLVM bitcode containing __cyg_profile_func_enter and __cyg_profile_func_exit
--gpu-max-threads-per-block=
Default max threads per block for kernel launch bounds for HIP
--gpu-use-aux-triple-only
Prepare '-aux-triple' only without populating '-aux-target-cpu' and '-aux-target-feature'.
-gpubnames
/GR-
Do not emit RTTI data
-grecord-command-line
-grecord-gcc-switches
/Gregcall
Set __regcall as a default calling convention
Emit RTTI data (default)
Set __fastcall as a default calling convention
/GS-
Disable buffer security check
-gsce
-gsimple-template-names=
Use simple template names in DWARF, or include the full template name with a modified prefix for validation
simple,mangled
-gsimple-template-names
-gsplit-dwarf=
Set DWARF fission mode to either 'split' or 'single'
split,single
-gsplit-dwarf
-gstabs
-gstrict-dwarf
Enable buffer security check (default)
Use stack probes (default)
Set stack probe size (default 4096)
-gtoggle
/guard:
Enable Control Flow Guard with /guard:cf, or only the table with /guard:cf,nochecks. Enable EH Continuation Guard with /guard:ehcont
-gused
-gvms
Set __vectorcall as a default calling convention
/Gw-
Do not put each data item in its own section (default)
Put each data item in its own section
/GX-
Deprecated (like not passing /EH)
-gxcoff
Deprecated; use /EHsc
/Gy-
Do not put each function in its own section (default)
Put each function in its own section
-gz=
Set __stdcall as a default calling convention
Put objects of at most <size> bytes into small data section (MIPS / Hexagon)
<size>
Generate source-level debug information
-header-include-file
Filename (or -) to write header include output to
/headerName:
-headerpad_max_install_names
/headerUnit:angle
/headerUnit:quote
/headerUnit
--help-hidden
Display help for hidden options
/HELP
-help
/help
--hip-device-lib-path=
--hip-device-lib=
HIP device library
--hip-link
Link clang-offload-bundler bundles for HIP
--hip-path=
HIP runtime installation path, used for finding HIP version and adding HIP include path.
--hip-version=
HIP version in the format of major.minor.patch
/homeparams
/hotpatch
Show header includes and nesting depth
Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path
-iapinotes-modules
Add directory to the API notes search path referenced by module name
-iapinotes-path
Include API notes file
-ibuiltininc
Enable builtin #include directories even when -nostdinc is used before or after -ibuiltininc. Using -nobuiltininc after the option disables it
-idirafter
Add directory to AFTER include search path
-iframeworkwithsysroot
Add directory to SYSTEM framework search path, absolute paths are relative to -isysroot
-iframework
Add directory to SYSTEM framework search path
--imacros=
-imacros
Include macros from file before parsing
-image_base
/imsvc
Add <dir> to system include search path, as if in %INCLUDE%
-imultilib
--include-barrier
--include-directory-after=
--include-directory-after
--include-directory=
--include-directory
-include-pch
Include precompiled header file
--include-prefix=
--include-prefix
--include-with-prefix-after=
--include-with-prefix-after
--include-with-prefix-before=
--include-with-prefix-before
--include-with-prefix=
--include-with-prefix
--include=
-include
-index-header-map
Make the next included directory (-I or -F) an indexer header map
-index-ignore-macros
Ignore macros during indexing
-index-ignore-pcms
Ignore symbols from imported pcm modules
-index-ignore-system-symbols
Ignore symbols from system headers
-index-record-codegen-name
Record the codegen name for symbols
-index-store-path
Enable indexing with the specified data store path
-index-unit-output-path
Use <path> as the output path for this compilation unit in the index unit file
<path>
-init-only
Only execute frontend initialization
-init
-install_name
-integrated-as
-interface-stub-version=
-internal-externc-isystem
Add directory to the internal system include search path with implicit extern "C" semantics; these are assumed to not be user-provided and are used to model system and standard headers' paths.
-internal-isystem
Add directory to the internal system include search path; these are assumed to not be user-provided and are used to model system and standard headers' paths.
-iprefix
Set the -iwithprefix/-iwithprefixbefore prefix
-iquote
Add directory to QUOTE include search path
-isysroot
Set the system root directory (usually /)
-isystem-after
Add directory to end of the SYSTEM include search path
-isystem
Add directory to SYSTEM include search path
-ivfsoverlay
Overlay the virtual filesystem described by file over the real file system
-iwithprefixbefore
Set directory to include search path with prefix
-iwithprefix
Set directory to SYSTEM include search path with prefix
-iwithsysroot
Add directory to SYSTEM include search path, absolute paths are relative to -isysroot
-iworkdir=
When looking up file, use the working directory provided by the operating system, or by the virtual file system.
os,virtual
Add directory to the end of the list of include search paths
Add directory to include search path
/JMC
Make char type unsigned
-keep_private_externs
/kernel-
/kernel
--language=
--language
-lazy_framework
-lazy_library
--ld-path=
/LDd
Create debug DLL
Create DLL
--libomptarget-amdgcn-bc-path=
Path to libomptarget-amdgcn bitcode library
--libomptarget-nvptx-bc-path=
Path to libomptarget-nvptx bitcode library
--library-directory=
--library-directory
--linker-option=
Add linker option
/link
Forward options to the linker
<options>
-load
Add directory to library search path
-m16
-m32
-m3dnowa
-m3dnow
-m64
-m68000
-m68010
-m68020
-m68030
-m68040
-m68060
-m80387
-mabi=ieeelongdouble
Use IEEE 754 quadruple-precision for long double
-mabi=vec-default
Enable the default Altivec ABI on AIX (AIX only). Uses only volatile vector registers.
-mabi=vec-extabi
Enable the extended Altivec ABI on AIX (AIX only). Uses volatile and nonvolatile vector registers
-mabi=
-mabicalls
Enable SVR4-style position-independent code (Mips only)
-mabs=
-Mach
-madx
-maes
-main-file-name
Main file name to use for debug info and source if missing
-maix-struct-return
Return all structs in memory (PPC32 only)
-malign-branch-boundary=
Specify the boundary's size to align branches
-malign-branch=
Specify types of branches to align
-malign-double
Align doubles to two words in structs (x86 only)
-malign-functions=
-malign-jumps=
-malign-loops=
-maltivec
-mamdgpu-ieee
Sets the IEEE bit in the expected default floating point  mode register. Floating point opcodes that support exception flag gathering quiet and propagate signaling NaN inputs per IEEE 754-2008. This option changes the ABI. (AMDGPU only)
-mamx-bf16
-mamx-int8
-mamx-tile
-mappletvos-version-min=
-mappletvsimulator-version-min=
-march=
-marm
-masm=
-massembler-fatal-warnings
Make assembler warnings fatal
-massembler-no-warn
Make assembler not emit warnings
-matomics
-mavx2
-mavx512bf16
-mavx512bitalg
-mavx512bw
-mavx512cd
-mavx512dq
-mavx512er
-mavx512fp16
-mavx512f
-mavx512ifma
-mavx512pf
-mavx512vbmi2
-mavx512vbmi
-mavx512vl
-mavx512vnni
-mavx512vp2intersect
-mavx512vpopcntdq
-mavxvnni
-mavx
-mbackchain
Link stack frames through backchain on System Z
-mbig-endian
-mbmi2
-mbmi
-mbranch-likely
-mbranch-protection=
Enforce targets of indirect branches and function returns
-mbranch-target-enforce
-mbranches-within-32B-boundaries
Align selected branches (fused, jcc, jmp) within 32-byte boundary
-mbridgeos-version-min=
-mbulk-memory
-mcheck-zero-division
-mcldemote
-mclflushopt
-mclwb
-mclzero
-mcmodel=medany
Equivalent to -mcmodel=medium, compatible with RISC-V gcc.
-mcmodel=medlow
Equivalent to -mcmodel=small, compatible with RISC-V gcc.
-mcmodel=
-mcmpb
-mcmse
Allow use of CMSE (Armv8-M Security Extensions)
-mcode-object-v3
Legacy option to specify code object ABI V3 (AMDGPU only)
-mcode-object-version=
Specify code object ABI version. Defaults to 3. (AMDGPU only)
2,3,4
-mcompact-branches=
-mconsole
-mconstant-cfstrings
-mconstructor-aliases
Emit complete constructors and destructors as aliases when possible
-mcpu=?
-mcpu=
-mcrbits
-mcrc32
-mcrc
Allow use of CRC instructions (ARM/Mips only)
-mcrypto
-mcumode
Specify CU wavefront execution mode (AMDGPU only)
-mcx16
-mdarwin-stkchk-strong-link
/MDd
Use DLL debug run-time
-mdebug-pass
Enable additional debug output
-mdefault-build-attributes
-mdirect-move
-mdisable-tail-calls
Disable tail call optimization, keeping the call stack accurate
-mdll
-mdouble-float
-mdouble=
Force double to be 32 bits or 64 bits
-mdspr2
-mdsp
-mdynamic-no-pic
Write a depfile containing user and system headers
Use DLL run-time
-meabi
Set EABI type, e.g. 4, 5 or gnu (default depends on triple)
default,4,5,gnu
-mefpu2
-membedded-data
Place constants in the .rodata section instead of the .sdata section even if they meet the -G <size> threshold (MIPS)
-menable-experimental-extensions
Enable use of experimental RISC-V extensions.
-menable-no-infs
Allow optimization to assume there are no infinities.
-menable-no-nans
Allow optimization to assume there are no NaNs.
-menable-unsafe-fp-math
Allow unsafe floating-point math optimizations which may decrease precision
-menqcmd
-mexception-handling
-mexec-model=
Execution model (WebAssembly only)
command,reactor
-mexecute-only
Disallow generation of data access to code sections (ARM only)
-mextern-sdata
Assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
-mf16c
-mfancy-math-387
-mfentry
Insert calls to fentry at function entry (x86/SystemZ only)
-mfix-and-continue
-mfix-cmse-cve-2021-35465
Work around VLLDM erratum CVE-2021-35465 (ARM only)
-mfix-cortex-a53-835769
Workaround Cortex-A53 erratum 835769 (AArch64 only)
-mfloat-abi=
soft,softfp,hard
-mfloat-abi
The float ABI to use
-mfloat128
-mfma4
-mfma
-mfp32
Use 32-bit floating point registers (MIPS only)
-mfp64
Use 64-bit floating point registers (MIPS only)
-mfpmath=
-mfpmath
Which unit to use for fp math
-mfprnd
-mfpu=
-mfpxx
Avoid FPU mode dependent operations when used with the O32 ABI
-mframe-pointer=
Specify which frame pointers to retain (all, non-leaf, none).
all,non-leaf,none
-mfsgsbase
-mfxsr
Write depfile output from -MMD, -MD, -MM, or -M to <file>
-mgeneral-regs-only
Generate code which only uses the general purpose registers (AArch64/x86 only)
-mgfni
-mginv
-mglibc
-mglobal-merge
Enable merging of globals
-mgpopt
Use GP relative accesses for symbols known to be in a small data section (MIPS)
Add missing headers to depfile
-mhard-float
-mharden-sls=
Select straight-line speculation hardening scope
-mhreset
-mhtm
-mhvx-length=
Set Hexagon Vector Length
64B,128B
-mhvx=
Enable Hexagon Vector eXtensions
-mhvx
--mhwdiv=
-mhwdiv=
--mhwdiv
-mhwmult=
-miamcu
Use Intel MCU ABI
-mieee-fp
-mieee-rnd-near
-mignore-xcoff-visibility
Not emit the visibility attribute for asm in AIX OS or give all symbols 'unspecified' visibility in XCOFF object file
--migrate
Run the migrator
-migrate
Migrate source code
-mimplicit-float
-mimplicit-it=
-mincremental-linker-compatible
(integrated-as) Emit an object file which can be used with an incremental linker
-mindirect-jump=
Change indirect jump instructions to inhibit speculation
-minline-all-stringops
-minvariant-function-descriptors
-minvpcid
-mios-simulator-version-min=
-mios-version-min=
Set iOS deployment target
-miphoneos-version-min=
-miphonesimulator-version-min=
-mips16
-mips1
Equivalent to -march=mips1
-mips2
Equivalent to -march=mips2
-mips32r2
Equivalent to -march=mips32r2
-mips32r3
Equivalent to -march=mips32r3
-mips32r5
Equivalent to -march=mips32r5
-mips32r6
Equivalent to -march=mips32r6
-mips32
Equivalent to -march=mips32
-mips3
Equivalent to -march=mips3
-mips4
Equivalent to -march=mips4
-mips5
Equivalent to -march=mips5
-mips64r2
Equivalent to -march=mips64r2
-mips64r3
Equivalent to -march=mips64r3
-mips64r5
Equivalent to -march=mips64r5
-mips64r6
Equivalent to -march=mips64r6
-mips64
Equivalent to -march=mips64
-misel
Write a compilation database entry per input
-mkernel
-mkl
-mldc1-sdc1
-mlimit-float-precision
Limit float precision to the given value
-mlink-bitcode-file
Link the given bitcode file before performing optimizations.
-mlink-builtin-bitcode
Link and internalize needed symbols from the given bitcode file before performing optimizations.
-mlink-cuda-bitcode
-mlinker-version=
-mlittle-endian
-mllvm
Additional arguments to forward to LLVM's option processing
-mlocal-sdata
Extend the -G behaviour to object local data (MIPS)
-mlong-calls
Generate branches with extended addressability, usually via indirect jumps.
-mlong-double-128
Force long double to be 128 bits
-mlong-double-64
Force long double to be 64 bits
-mlong-double-80
Force long double to be 80 bits, padded to 128 bits for storage
-mlongcall
-mlvi-cfi
Enable only control-flow mitigations for Load Value Injection (LVI)
-mlvi-hardening
Enable all mitigations for Load Value Injection (LVI)
-mlwp
-mlzcnt
-mmacos-version-min=
-mmacosx-version-min=
Set Mac OS X deployment target
-mmadd4
Enable the generation of 4-operand madd.s, madd.d and related instructions.
-mmark-bti-property
Add .note.gnu.property with BTI to assembly files (AArch64 only)
-mmcu=
-MMD
Write a depfile containing user headers
-mmemops
Enable generation of memop instructions
-mmfcrf
-mmfocrf
-mmicromips
-mmma
-mmmx
-mmovbe
-mmovdir64b
-mmovdiri
-mmpx
-mms-bitfields
Set the default structure layout to be compatible with the Microsoft compiler standard
-mmsa
Enable MSA ASE (MIPS only)
-mmt
Enable MT ASE (MIPS only)
-mmultivalue
-mmutable-globals
-mmwaitx
Like -MMD, but also implies -E and writes to stdout by default
-mnan=
-mno-3dnowa
-mno-3dnow
-mno-80387
-mno-abicalls
Disable SVR4-style position-independent code (Mips only)
-mno-adx
-mno-aes
-mno-altivec
-mno-amdgpu-ieee
-mno-amx-bf16
-mno-amx-int8
-mno-amx-tile
-mno-atomics
-mno-avx2
-mno-avx512bf16
-mno-avx512bitalg
-mno-avx512bw
-mno-avx512cd
-mno-avx512dq
-mno-avx512er
-mno-avx512fp16
-mno-avx512f
-mno-avx512ifma
-mno-avx512pf
-mno-avx512vbmi2
-mno-avx512vbmi
-mno-avx512vl
-mno-avx512vnni
-mno-avx512vp2intersect
-mno-avx512vpopcntdq
-mno-avxvnni
-mno-avx
-mno-backchain
-mno-bmi2
-mno-bmi
-mno-branch-likely
-mno-bulk-memory
-mno-check-zero-division
-mno-cldemote
-mno-clflushopt
-mno-clwb
-mno-clzero
-mno-cmpb
-mno-code-object-v3
Legacy option to specify code object ABI V2 (AMDGPU only)
-mno-constant-cfstrings
-mno-crbits
-mno-crc32
-mno-crc
Disallow use of CRC instructions (Mips only)
-mno-crypto
-mno-cumode
Specify WGP wavefront execution mode (AMDGPU only)
-mno-cx16
-mno-default-build-attributes
-mno-direct-move
-mno-dspr2
-mno-dsp
-mno-embedded-data
Do not place constants in the .rodata section instead of the .sdata if they meet the -G <size> threshold (MIPS)
-mno-enqcmd
-mno-exception-handling
-mno-execute-only
Allow generation of data access to code sections (ARM only)
-mno-extern-sdata
Do not assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
-mno-f16c
-mno-fix-cmse-cve-2021-35465
Don't work around VLLDM erratum CVE-2021-35465 (ARM only)
-mno-fix-cortex-a53-835769
Don't workaround Cortex-A53 erratum 835769 (AArch64 only)
-mno-float128
-mno-fma4
-mno-fma
-mno-fprnd
-mno-fsgsbase
-mno-fxsr
-mno-gfni
-mno-ginv
-mno-global-merge
Disable merging of globals
-mno-gpopt
Do not use GP relative accesses for symbols known to be in a small data section (MIPS)
-mno-hreset
-mno-htm
-mno-hvx
Disable Hexagon Vector eXtensions
-mno-iamcu
-mno-implicit-float
Don't generate implicit floating point instructions
-mno-incremental-linker-compatible
(integrated-as) Emit an object file which cannot be used with an incremental linker
-mno-inline-all-stringops
-mno-invariant-function-descriptors
-mno-invpcid
-mno-isel
-mno-kl
-mno-ldc1-sdc1
-mno-local-sdata
Do not extend the -G behaviour to object local data (MIPS)
-mno-long-calls
Restore the default behaviour of not generating long calls
-mno-longcall
-mno-lvi-cfi
Disable control-flow mitigations for Load Value Injection (LVI)
-mno-lvi-hardening
Disable mitigations for Load Value Injection (LVI)
-mno-lwp
-mno-lzcnt
-mno-madd4
Disable the generation of 4-operand madd.s, madd.d and related instructions.
-mno-memops
Disable generation of memop instructions
-mno-mfcrf
-mno-mfocrf
-mno-micromips
-mno-mips16
-mno-mma
-mno-mmx
-mno-movbe
-mno-movdir64b
-mno-movdiri
-mno-movt
Disallow use of movt/movw pairs (ARM only)
-mno-mpx
-mno-ms-bitfields
Do not set the default structure layout to be compatible with the Microsoft compiler standard
-mno-msa
Disable MSA ASE (MIPS only)
-mno-mt
Disable MT ASE (MIPS only)
-mno-multivalue
-mno-mutable-globals
-mno-mwaitx
-mno-neg-immediates
Disallow converting instructions with negative immediates to their negation or inversion.
-mno-nontrapping-fptoint
-mno-nvj
Disable generation of new-value jumps
-mno-nvs
Disable generation of new-value stores
-mno-odd-spreg
Disable odd single-precision floating point registers
-mno-omit-leaf-frame-pointer
-mno-outline-atomics
Don't generate local calls to out-of-line atomic operations
-mno-outline
Disable function outlining (AArch64 only)
-mno-packed-stack
-mno-packets
Disable generation of instruction packets
-mno-paired-vector-memops
-mno-pascal-strings
-mno-pclmul
-mno-pconfig
-mno-pcrel
-mno-pku
-mno-popcntd
-mno-popcnt
-mno-power10-vector
-mno-power8-vector
-mno-power9-vector
-mno-prefetchwt1
-mno-prefixed
-mno-prfchw
-mno-ptwrite
-mno-pure-code
-mno-rdpid
-mno-rdrnd
-mno-rdseed
-mno-red-zone
-mno-reference-types
-mno-relax-all
-mno-relax-pic-calls
Do not produce relaxation hints for linkers to try optimizing PIC call sequences into direct calls (MIPS only)
-mno-relaxed-simd
-mno-relax
Disable linker relaxation
-mno-restrict-it
Allow generation of deprecated IT blocks for ARMv8. It is off by default for ARMv8 Thumb mode
-mno-retpoline-external-thunk
-mno-retpoline
-mno-rtd
-mno-rtm
-mno-sahf
-mno-save-restore
Disable using library calls for save and restore
-mno-serialize
-mno-seses
Disable speculative execution side effect suppression (SESES)
-mno-sgx
-mno-sha
-mno-shstk
-mno-sign-ext
-mno-simd128
-mno-soft-float
-mno-speculative-load-hardening
-mno-spe
-mno-sse2
-mno-sse3
-mno-sse4.1
-mno-sse4.2
-mno-sse4a
-mno-sse4
-mno-sse
-mno-ssse3
-mno-stack-arg-probe
Disable stack probes which are enabled by default
-mno-stackrealign
-mno-tail-call
-mno-tbm
-mno-tgsplit
Disable threadgroup split execution mode (AMDGPU only)
-mno-thumb
-mno-tls-direct-seg-refs
Disable direct TLS access through segment registers
-mno-tsxldtrk
-mno-uintr
-mno-unaligned-access
Force all memory accesses to be aligned (AArch32/AArch64 only)
-mno-unsafe-fp-atomics
-mno-vaes
-mno-virt
-mno-vpclmulqdq
-mno-vsx
-mno-vx
-mno-vzeroupper
-mno-waitpkg
-mno-warn-nonportable-cfstrings
-mno-wavefrontsize64
Specify wavefront size 32 mode (AMDGPU only)
-mno-wbnoinvd
-mno-widekl
-mno-x87
-mno-xgot
-mno-xop
-mno-xsavec
-mno-xsaveopt
-mno-xsaves
-mno-xsave
-mno-zvector
-mnocrc
Disallow use of CRC instructions (ARM only)
-mnoexecstack
Mark the file as not needing an executable stack
-mnontrapping-fptoint
-mnop-mcount
Generate mcount/__fentry__ calls as nops. To activate they need to be patched in.
-mnvj
Enable generation of new-value jumps
-mnvs
Enable generation of new-value stores
-modd-spreg
Enable odd single-precision floating point registers
-module-dependency-dir
Directory to dump module dependencies to
-module-dir
Put MODULE files in <dir>
-module-file-deps
Include module files in dependency output
-module-file-info
Provide information about a particular module file
-module-suffix
Use <suffix> as the suffix for module files (the default value is `.mod`)
<suffix>
-momit-leaf-frame-pointer
Omit frame pointer setup for leaf functions
-moslib=
-moutline-atomics
Generate local calls to out-of-line atomic operations
-moutline
Enable function outlining (AArch64 only)
-mpacked-stack
Use packed stack layout (SystemZ only).
-mpackets
Enable generation of instruction packets
-mpad-max-prefix-size=
Specify maximum number of prefixes to use for padding
-mpaired-vector-memops
-mpascal-strings
-mpclmul
-mpconfig
-mpcrel
-mpku
-mpopcntd
-mpopcnt
-mpower10-vector
-mpower8-vector
-mpower9-vector
-mprefer-vector-width=
Specifies preferred vector width for auto-vectorization. Defaults to 'none' which allows target specific decisions.
-mprefetchwt1
-mprefixed
-mprfchw
-mprivileged
-mptwrite
-mpure-code
Create phony target for each dependency (other than main file)
-mqdsp6-compat
Enable hexagon-qdsp6 backward compatibility
Specify name of main file output to quote in depfile
-mrdpid
-mrdrnd
-mrdseed
-mreassociate
Allow reassociation transformations for floating-point instructions
-mrecip=
-mrecip
-mrecord-mcount
Generate a __mcount_loc section entry for each __fentry__ call.
-mred-zone
-mreference-types
-mregparm=
-mregparm
Limit the number of registers available for integer arguments
-mrelax-all
(integrated-as) Relax all machine instructions
-mrelax-pic-calls
Produce relaxation hints for linkers to try optimizing PIC call sequences into direct calls (MIPS only)
--mrelax-relocations
Use relaxable elf relocations
-mrelaxed-simd
-mrelax
Enable linker relaxation
-mrelocation-model
The relocation model to use
static,pic,ropi,rwpi,ropi-rwpi,dynamic-no-pic
-mrestrict-it
Disallow generation of deprecated IT blocks for ARMv8. It is on by default for ARMv8 Thumb mode.
-mretpoline-external-thunk
-mretpoline
-mrop-protect
-mrtd
Make StdCall calling convention the default
-mrtm
-msahf
-msave-restore
Enable using library calls for save and restore
-msave-temp-labels
Save temporary labels in the symbol table. Note this may change .s semantics and shouldn't generally be used on compiler-generated code.
-msecure-plt
-mserialize
-mseses
Enable speculative execution side effect suppression (SESES). Includes LVI control flow integrity mitigations
-msgx
-msha
-mshstk
-msign-ext
-msign-return-address-key=
a_key,b_key
-msign-return-address=
Select return address signing scope
none,all,non-leaf
-msimd128
-msim
-msingle-float
-msmall-data-limit=
Put global and static data smaller than the limit into a special section
-msmall-data-limit
-msmall-data-threshold=
-msoft-float
Use software floating point
-mspeculative-load-hardening
-mspe
-msse2
-msse3
-msse4.1
-msse4.2
-msse4a
-msse4
-msse
-mssse3
-mstack-alignment=
Set the stack alignment
-mstack-arg-probe
Enable stack probes
-mstack-probe-size=
Set the stack probe size
-mstack-protector-guard-offset=
Use the given offset for addressing the stack-protector guard
-mstack-protector-guard-reg=
Use the given reg for addressing the stack-protector guard
-mstack-protector-guard=
Use the given guard (global, tls) for addressing the stack-protector guard
-mstackrealign
Force realign the stack at entry to every function
-mstrict-align
Force all memory accesses to be aligned (same as mno-unaligned-access)
-msve-vector-bits=
Specify the size in bits of an SVE vector register. Defaults to the vector length agnostic value of "scalable". (AArch64 only)
-msvr4-struct-return
Return small structs in registers (PPC32 only)
-mt-migrate-directory
Directory for temporary files produced during ARC or ObjC migration
-mtail-call
-mtargetos=
Set the deployment target to be the specified OS and OS version
-mtbm
/MTd
Use static debug run-time
-mtgsplit
Enable threadgroup split execution mode (AMDGPU only)
-mthread-model
The thread model to use, e.g. posix, single (posix by default)
posix,single
-mthreads
-mthumb
-mtls-direct-seg-refs
Enable direct TLS access through segment registers (default)
-mtls-size=
Specify bit size of immediate TLS offsets (AArch64 ELF only): 12 (for 4KB) | 24 (for 16MB, default) | 32 (for 4GB) | 48 (for 256TB, needs -mcmodel=large)
-mtp=
Thread pointer access method (AArch32/AArch64 only)
soft,cp15,el0,el1,el2,el3
-mtp
Mode for reading thread pointer
-mtsxldtrk
-mtune=?
-mtune=
Only supported on X86 and RISC-V. Otherwise accepted for compatibility with GCC.
-mtvos-simulator-version-min=
-mtvos-version-min=
Specify name of main file output in depfile
Use static run-time
-muclibc
-muintr
-multi_module
-multiply_defined_unused
-multiply_defined
-munaligned-access
Allow memory accesses to be unaligned (AArch32/AArch64 only)
-municode
-munsafe-fp-atomics
Enable unsafe floating point atomic instructions (AMDGPU only)
-mv55
-mv5
-mv60
-mv62
-mv65
-mv66
-mv67t
-mv67
-mv68
-mvaes
-mvirt
-mvpclmulqdq
-mvscale-max=
Specify the vscale maximum. Defaults to the vector length agnostic value of "0". (AArch64 only)
-mvscale-min=
Specify the vscale minimum. Defaults to the vector length agnostic value of "0". (AArch64 only)
-mvsx
-mvx
-mvzeroupper
Use NMake/Jom format for the depfile
-mwaitpkg
-mwarn-nonportable-cfstrings
-mwatch-bitcode-compatibility
-mwatchos-simulator-version-min=
-mwatchos-version-min=
-mwatchsimulator-version-min=
-mwavefrontsize64
Specify wavefront size 64 mode (AMDGPU only)
-mwbnoinvd
-mwidekl
-mwindows
-mx32
-mx87
-mxgot
-mxop
-mxsavec
-mxsaveopt
-mxsaves
-mxsave
-mzvector
Like -MD, but also implies -E and writes to stdout by default
-new-struct-path-tbaa
Enable enhanced struct-path aware Type Based Alias Analysis
-no-canonical-prefixes
Use relative paths for invoking subcommands
-no-clear-ast-before-backend
Don't clear the Clang AST before running backend code generation
-no-code-completion-globals
Do not include global declarations in code-completion results.
-no-code-completion-ns-level-decls
Do not include declarations inside namespaces (incl. global namespace) in the code-completion results.
-no-cpp-precomp
--no-cuda-gpu-arch=
--no-cuda-include-ptx=
Do not include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
--no-cuda-noopt-device-debug
--no-cuda-version-check
Don't error out if the detected version of the CUDA install is too low for the requested CUDA gpu architecture.
-no-emit-llvm-uselists
Don't preserve order of LLVM use-lists when serializing
-no-finalize-removal
Do not remove finalize method in gc mode
--no-gpu-bundle-output
Do not bundle output files of HIP device compilation
-no-implicit-float
-no-integrated-as
-no-integrated-cpp
--no-line-commands
-no-ns-alloc-error
Do not error on use of NSAllocateCollectable/NSReallocateCollectable
--no-offload-arch=
Remove CUDA/HIP offloading device architecture (e.g. sm_35, gfx906) from the list of devices to compile for. 'all' resets the list to its default value.
-no-pedantic
-no-pie
-no-pthread
-no-round-trip-args
Disable command line arguments round-trip.
--no-standard-includes
--no-standard-libraries
-no-struct-path-tbaa
Turn off struct-path aware Type Based Alias Analysis
--no-system-header-prefix=
Treat all #include paths starting with <prefix> as not including a system header.
--no-system-header-prefix
--no-undefined
--no-warnings
-no_dead_strip_inits_and_terms
-nobuiltininc
Disable builtin #include directories
-nocpp
Disable predefined and command line preprocessor macros
-nocudainc
-nocudalib
-nodefaultlibs
-nodriverkitlib
-nofixprebinding
-nogpuinc
Do not add include paths for CUDA/HIP and do not include the default CUDA/HIP wrapper headers
-nogpulib
Do not link device library for CUDA/HIP device compilation
-nolibc
/nologo
-nomultidefs
-nopie
-noprebind
-noprofilelib
-noseglinkedit
-nostartfiles
-nostdinc++
Disable standard #include directories for the C++ standard library
-nostdinc
-nostdlib++
-nostdlibinc
-nostdlib
-nostdsysteminc
Disable standard system #include directories
Don't automatically start assembly file with a text section
Optimize for size  (like /Og     /Os /Oy /Ob2 /GF /Gy)
Optimize for speed (like /Og /Oi /Ot /Oy /Ob2 /GF /Gy)
/Ob0
Disable function inlining
/Ob1
Only inline functions explicitly or implicitly marked inline
/Ob2
Inline functions as deemed beneficial by the compiler
-ObjC++
Treat source input files as Objective-C++ inputs
-objc-isystem
Add directory to the ObjC SYSTEM include search path
-objcmt-atomic-property
Make migration to 'atomic' properties
-objcmt-migrate-all
Enable migration to modern ObjC
-objcmt-migrate-annotation
Enable migration to property and method annotations
-objcmt-migrate-designated-init
Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods
-objcmt-migrate-instancetype
Enable migration to infer instancetype for method result type
-objcmt-migrate-literals
Enable migration to modern ObjC literals
-objcmt-migrate-ns-macros
Enable migration to NS_ENUM/NS_OPTIONS macros
-objcmt-migrate-property-dot-syntax
Enable migration of setter/getter messages to property-dot syntax
-objcmt-migrate-property
Enable migration to modern ObjC property
-objcmt-migrate-protocol-conformance
Enable migration to add protocol conformance on classes
-objcmt-migrate-readonly-property
Enable migration to modern ObjC readonly property
-objcmt-migrate-readwrite-property
Enable migration to modern ObjC readwrite property
-objcmt-migrate-subscripting
Enable migration to modern ObjC subscripting
-objcmt-ns-nonatomic-iosonly
Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property's 'atomic' attribute
-objcmt-returns-innerpointer-property
Enable migration to annotate property with NS_RETURNS_INNER_POINTER
-objcmt-white-list-dir-path=
-objcmt-whitelist-dir-path=
Only modify files with a filename contained in the provided directory path
-objcxx-isystem
Add directory to the ObjC++ SYSTEM include search path
-ObjC
Treat source input files as Objective-C inputs
-object
Disable optimization
-Ofast
--offload-arch=
CUDA offloading device architecture (e.g. sm_35), or HIP offloading target ID in the form of a device architecture followed by target ID features delimited by a colon. Each target ID feature is a pre-defined string followed by a plus or minus sign (e.g. gfx908:xnack+:sramecc-).  May be specified more than once.
No effect
/Oi-
Disable use of builtin functions
Enable use of builtin functions
/openmp-
Disable OpenMP support
/openmp:experimental
Enable OpenMP support with experimental SIMD support
/openmp
Enable OpenMP support
-opt-record-file
File name to use for YAML optimization record output
-opt-record-format
The format used for serializing remarks (default: YAML)
-opt-record-passes
Only record remark information for passes whose names match the given regular expression
--optimize=
--optimize
Optimize for size
Optimize for speed
-output-asm-variant
Select the asm variant index to use for output
--output-class-directory=
--output-class-directory
--output=
--output
Deprecated (like /Og /Oi /Ot /Oy /Ob2); use /O2
/Oy-
Disable frame pointer omission (x86 only, default)
Enable frame pointer omission (x86 only)
Set multiple /O flags at once; e.g. '/O2y-' for '/O2 /Oy-'
<flags>
Write output to <file>
Deprecated (set output file name); use /Fe or /Fe
-pagezero_size
--param=
--param
-pass-exit-codes
-pch-through-hdrstop-create
When creating a PCH, stop PCH generation after #pragma hdrstop.
-pch-through-hdrstop-use
When using a PCH, skip tokens until after a #pragma hdrstop.
-pch-through-header=
Stop PCH generation after including this file.  When using a PCH, skip tokens until after this file is included.
-pedantic-errors
-pedantic
Warn on language extensions
/permissive-
Disable non conforming code from compiling (default)
/permissive
Enable some non conforming code to compile
Enable mcount instrumentation
-pic-is-pie
File is for a position independent executable
-pic-level
Value for __PIC__
-pie
-pipe
Use pipes between commands, when possible
-plugin-arg-
Pass <arg> to plugin <name>
<name> <arg>
-plugin
Use the named plugin action instead of the default action (use "help" to list available options)
-preamble-bytes=
Assume that the precompiled header is a precompiled preamble covering the first N bytes of the main file
-prebind_all_twolevel_modules
-prebind
--precompile
Only precompile the input
--prefix=
--prefix
-preload
--preprocess
-print-dependency-directives-minimized-source
Print the output of the dependency directives source minimizer
--print-diagnostic-categories
-print-effective-triple
Print the effective target triple
-print-file-name=
Print the full library path of <file>
--print-file-name
-print-ivar-layout
Enable Objective-C Ivar layout bitmap print trace
-print-libgcc-file-name
Print the library path for the currently used compiler runtime library ("libgcc.a" or "libclang_rt.builtins.*.a")
--print-missing-file-dependencies
-print-multi-directory
-print-multi-lib
-print-multi-os-directory
-print-multiarch
Print the multiarch target triple
-print-preamble
Print the "preamble" of a file, which is a candidate for implicit precompiled headers.
-print-prog-name=
Print the full program path of <name>
--print-prog-name
-print-resource-dir
Print the resource directory pathname
-print-rocm-search-dirs
Print the paths used for finding ROCm installation
-print-runtime-dir
Print the directory pathname containing clangs runtime libraries
-print-search-dirs
Print the paths used for finding libraries and programs
-print-stats
Print performance metrics and statistics
-print-supported-cpus
Print supported cpu models for the given target (if target is not specified, it will print the supported cpus for the default target)
-print-target-triple
Print the normalized target triple
-print-targets
Print the registered targets
-private_bundle
--product-name=
--profile-blocks
--profile
-pthreads
-pthread
Support POSIX threads in generated code
--ptxas-path=
Path to ptxas (used for compiling CUDA code)
Disable linemarker output in -E mode
Preprocess to file
/Qfast_transcendentals
/QIfist
/Qimprecise_fwaits
/QIntel-jcc-erratum
Align branches within 32-byte boundaries to mitigate the performance impact of the Intel JCC erratum.
Do not emit metadata containing compiler name and version
/Qpar-report
/Qpar
/Qsafe_fp_loads
/Qspectre-load-cf
/Qspectre-load
/Qspectre
-Qunused-arguments
Don't emit warning for unused driver arguments
/Qvec-report
/Qvec-
Disable the loop vectorization passes
/Qvec
Emit metadata containing compiler name and version
-rdynamic
-read_only_relocs
-record-command-line
The string to embed in the .LLVM.command.line section.
/reference
-relaxed-aliasing
Turn off Type Based Alias Analysis
-relocatable-pch
Whether to build a relocatable precompiled header
-remap-file
Replace the contents of the <from> file with the contents of the <to> file
<from>;<to>
-remap
-remove-preceeding-explicit-module-build-incompatible-options
Removes any arguments before this one that would be incompatible with explicitly building a module. This includes things like -o and input files. This option can be used to append arguments to convert a build of a translation unit with implicit modules into an explicit build of a specific module.
-resource-dir=
-resource-dir
The directory which holds the compiler resource files
--resource=
--resource
-rewrite-legacy-objc
Rewrite Legacy Objective-C source to C++
-rewrite-macros
Expand macros without full preprocessing
-rewrite-objc
Rewrite Objective-C source to C++
-rewrite-test
Rewriter playground
--rocm-device-lib-path=
ROCm device library path. Alternative to rocm-path.
--rocm-path=
ROCm installation path, used for finding and automatically linking required bitcode libraries.
-round-trip-args
Enable command line arguments round-trip.
-Rpass-analysis=
Report transformation analysis from optimization passes whose name matches the given POSIX regular expression
-Rpass-missed=
Report missed transformations by optimization passes whose name matches the given POSIX regular expression
-Rpass=
Report transformations performed by optimization passes whose name matches the given POSIX regular expression
-rpath
--rsp-quoting=
Set the rsp quoting to either 'posix', or 'windows'
/RTC
-rtlib=
Compiler runtime library to use
--rtlib
Enable the specified remark
<remark>
-save-stats=
Save llvm statistics.
-save-stats
-save-temps=
Save intermediate compilation results.
-save-temps
Save intermediate compilation results
/sdl-
/sdl
-sectalign
-sectcreate
-sectobjectsymbols
-sectorder
-seg1addr
-seg_addr_table_filename
-seg_addr_table
-segaddr
-segcreate
-seglinkedit
-segprot
-segs_read_only_addr
-segs_read_write_addr
-segs_read_
-serialize-diagnostic-file
File for serializing diagnostics in a binary format
<filename>
-serialize-diagnostics
Serialize compiler diagnostics to a file
-setup-static-analyzer
Set up preprocessor for static analyzer (done automatically when static analyzer is run).
-shared-libasan
-shared-libgcc
-shared-libsan
Dynamically link the sanitizer runtime
-shared
-show-encoding
Show instruction encoding information in transliterate mode
--show-includes
Print cl.exe style /showIncludes to stdout
-show-inst
Show internal instruction representation in transliterate mode
/showFilenames-
Do not print the name of each compiled file (default)
/showFilenames
Print the name of each compiled file
/showIncludes:user
Like /showIncludes but omit system headers
/showIncludes
Print info about included files to stderr
--signed-char
-single_module
-skip-unused-modulemap-deps
Include module map files only for imported modules in dependency output
/source-charset:
Set source encoding, supports only UTF-8
/sourceDependencies:directives
/sourceDependencies
-specs=
-specs
-split-dwarf-file
Name of the split dwarf debug info file to encode in the object file
-split-dwarf-output
File name to use for split dwarf debug info output
-stack-protector-buffer-size
Lower bound for a buffer to be considered for stack protection
-stack-protector
Enable stack protectors
0,1,2,3
-stack-usage-file
Filename (or -) to write stack usage output to
-static-define
Should __STATIC__ be defined
-static-libgcc
-static-libgfortran
-static-libsan
Statically link the sanitizer runtime
-static-libstdc++
-static-openmp
Use the static host OpenMP runtime while linking.
-static-pie
-static
-stats-file=
Filename to write statistics to
-std-default=
/std:
Set language version (c++14,c++17,c++20,c++latest,c11,c17)
Language standard to compile for
-stdlib++-isystem
Use directory as the C++ standard library include path
-stdlib=
C++ standard library to use
libc++,libstdc++,platform
--stdlib
--std
-sub_library
-sub_umbrella
-sycl-std=
SYCL language standard to compile for.
2020,2017,121,1.2.1,sycl-1.2.1
-sys-header-deps
Include system headers in dependency output
--sysroot=
--sysroot
--system-header-prefix=
Treat all #include paths starting with <prefix> as including a system header.
--system-header-prefix
Only run preprocess and compilation steps
-target-abi
Target a particular ABI type
-target-cpu
Target a specific cpu type
-target-feature
Target specific attributes
--target-help
-target-linker-version
Target linker version
-target-sdk-version=
The version of target SDK used for compilation
-target-variant-sdk-version=
The version of target variant SDK used for compilation
-target-variant-triple
Specify the target variant triple
-target-variant
Generate code that may run on a particular variant of the deployment target
--target=
Generate code for the given target
-target
-Tbss
Set starting address of BSS to <addr>
<addr>
Treat all source files as C
Treat <file> as C source file
-Tdata
Set starting address of DATA to <addr>
-templight-dump
Dump templight information to stdout
-test-io
Run the InputOuputTest action. Use for development and testing only.
-time
Time individual commands
Treat all source files as C++
Treat <file> as C++ source file
--trace-includes
-traditional-cpp
Enable some traditional CPP emulation
-traditional
/translateInclude
-trigraphs
-trim-egraph
Only show error-related paths in the analysis graph
-triple=
-triple
Specify target triple (e.g. i686-apple-darwin9)
-Ttext
Set starting address of TEXT to <addr>
-tune-cpu
Tune for a specific cpu type
/tune:
Set CPU for optimization without affecting instruction set
-twolevel_namespace_hints
-twolevel_namespace
Specify <script> as linker script
<script>
-umbrella
--undefine-macro=
--undefine-macro
-undefined
-undef
undef all system defines
-unexported_symbols_list
-unoptimized-cfg
Generate unoptimized CFGs for all analyses
--unsigned-char
-unwindlib=
Unwind library to use
libgcc,unwindlib,platform
--user-dependencies
/utf-8
Set source and runtime encoding to UTF-8 (default)
Undefine macro <macro>
<macro>
Undefine macro
/validate-charset-
/validate-charset
/vctoolsdir
Path to the VCToolChain
/vctoolsversion
For use with /winsysroot, defaults to newest found
Control vtordisp placement
-vectorize-loops
Run the Loop vectorization passes
-vectorize-slp
Run the SLP vectorization passes
--verbose
--verify-debug-info
Verify the binary representation of debug output
-verify-ignore-unexpected=
Ignore unexpected diagnostic messages
-verify-ignore-unexpected
-verify-pch
Load and verify that a pre-compiled header file is not stale
-verify=
Verify diagnostic output using comment directives that start with prefixes in the comma-separated sequence <prefixes>
<prefixes>
-verify
Equivalent to -verify=expected
--version
Print version information
-version
Print the compiler version
-via-file-asm
Write assembly to file for input to assemble jobs
/vmb
Use a best-case representation method for member pointers
/vmg
Use a most-general representation for member pointers
/vmm
Set the default most-general representation to multiple inheritance
/vms
Set the default most-general representation to single inheritance
/vmv
Set the default most-general representation to virtual inheritance
/volatile:iso
Volatile loads and stores have standard semantics
/volatile:ms
Volatile loads and stores have acquire and release semantics
-vtordisp-mode=
Control vtordisp placement on win32 targets
Show commands to run and use verbose output
Disable all warnings
Enable -Wall
Enable -Wall and -Wextra
-Wa,
Pass the comma separated arguments in <arg> to the assembler
-Wall
/Wall
Enable -Weverything
--warn-=
--warn-
-WCL4
-Wdeprecated
Enable warnings for deprecated constructs and define __DEPRECATED
-weak-l
-weak_framework
-weak_library
-weak_reference_mismatches
-Wframe-larger-than=
-Wframe-larger-than
-whatsloaded
-why_load
-whyload
/winsdkdir
Path to the Windows SDK
/winsdkversion
Full version of the Windows SDK, defaults to newest found
/winsysroot
Same as "/diasdkdir <dir>/DIA SDK" /vctoolsdir <dir>/VC/Tools/MSVC/<vctoolsversion> "/winsdkdir <dir>/Windows Kits/10"
-Wl,
Pass the comma separated arguments in <arg> to the linker
-Wlarge-by-value-copy=
-Wlarge-by-value-copy
Warn if a function definition returns or accepts an object larger in bytes than a given value
-Wlarger-than-
-Wlarger-than=
-Wno-deprecated
-Wno-nonportable-cfstrings
-Wno-rewrite-macros
Silence ObjC rewriting warnings
-Wno-write-strings
-Wnonportable-cfstrings
-working-directory=
-working-directory
Resolve file paths relative to the specified directory
-Wp,
Pass the comma separated arguments in <arg> to the preprocessor
/Wp64
--write-dependencies
--write-user-dependencies
-Wundef-prefix=
Enable warnings for undefined macros with a prefix in the comma separated list <arg>
-Wwrite-strings
/WX-
Do not treat warnings as errors (default)
Treat warnings as errors
Enable the specified warning
<warning>
Suppress all warnings
-Xanalyzer
Pass <arg> to the static analyzer
-Xarch_device
Pass <arg> to the CUDA/HIP device compilation
-Xarch_host
Pass <arg> to the CUDA/HIP host compilation
-Xarch_
-Xassembler
Pass <arg> to the assembler
-Xclang
Pass <arg> to the clang compiler
-Xcuda-fatbinary
Pass <arg> to fatbinary invocation
-Xcuda-ptxas
Pass <arg> to the ptxas assembler
-Xflang
Pass <arg> to the flang compiler
-Xlinker
Pass <arg> to the linker
-Xopenmp-target=
Pass <arg> to the target offloading toolchain identified by <triple>.
<triple> <arg>
-Xopenmp-target
Pass <arg> to the target offloading toolchain.
-Xpreprocessor
Pass <arg> to the preprocessor
Do not add %INCLUDE% to include search path
Treat subsequent input files as having type <language>
<language>
Disable precompiled headers, overrides /Yc and /Yu
Generate a pch file for all code up to and including <filename>
Load a pch file and use it instead of all code up to and including <filename>
-Z-reserved-lib-cckext
-Z-reserved-lib-stdc++
-Z-Xlinker-no-demangle
Enable CodeView debug information in object files
/Zc:__cplusplus
/Zc:alignedNew-
Disable C++17 aligned allocation functions
/Zc:alignedNew
/Zc:auto
/Zc:char8_t-
Disable char8_t from c++2a
/Zc:char8_t
Enable char8_t from C++2a
/Zc:dllexportInlines-
Do not dllexport/dllimport inline member functions of dllexport/import classes
/Zc:dllexportInlines
dllexport/dllimport inline member functions of dllexport/import classes (default)
/Zc:forScope
/Zc:inline
/Zc:rvalueCast
/Zc:sizedDealloc-
Disable C++14 sized global deallocation functions
/Zc:sizedDealloc
/Zc:strictStrings
Treat string literals as const
/Zc:ternary
/Zc:threadSafeInit-
Disable thread-safe initialization of static variables
/Zc:threadSafeInit
Enable thread-safe initialization of static variables
/Zc:trigraphs-
Disable trigraphs (default)
/Zc:trigraphs
Enable trigraphs
/Zc:twoPhase-
Disable two-phase name lookup in templates (default)
/Zc:twoPhase
Enable two-phase name lookup in templates
/Zc:wchar_t
/Zc:
/ZH:MD5
/ZH:SHA1
/ZH:SHA_256
Like /Z7
-Zlinker-input
Do not let object file auto-link default libraries
/Zo-
Set default maximum struct packing alignment to 1
Set default maximum struct packing alignment
Syntax-check only
Pass -z <arg> to the linker
-ivfsoverlay
repro-modules
index-store
 Arguments passed via response file:
 (end of response file)
 (in-process)
-serialize-diagnostic-file
preprocessor
precompiler
compiler
backend
assembler
linker
ifsmerger
-fsanitize-trap=undefined
-fsanitize=cfi-mfcall
-fsanitize=vptr
-flto
-ffixed-x18
-fno-sanitize-trap=
fsanitize-minimal-runtime
fsanitize-trap=cfi
-fsanitize-coverage=trace-pc-guard
-fsanitize-coverage=func
-fsanitize-coverage=bb
-fsanitize-coverage=edge
-fsanitize-coverage=trace-bb
-fsanitize-coverage=8bit-counters
-fsanitize-coverage=[func|bb|edge]
-fsanitize-coverage=[func|bb|edge],[trace-pc-guard|trace-pc]
-fsanitize=address
interceptor
-fsanitize-coverage-type=1
-fsanitize-coverage-type=2
-fsanitize-coverage-type=3
ubsan_standalone
ubsan_standalone_cxx
stats_client
stats
__sanitizer_stats_register
-fsanitize-ignorelist=
-fsanitize-system-ignorelist=
-tsan-instrument-memory-accesses=0
-tsan-instrument-memintrinsics=0
-tsan-instrument-func-entry-exit=0
-tsan-instrument-atomics=0
-hwasan-experimental-use-page-aliases=1
-asan-detect-invalid-pointer-cmp
-asan-detect-invalid-pointer-sub
-asan-instrumentation-with-call-threshold=0
hwasan-abi=
+tagged-globals
-fno-builtin-bcmp
-fno-builtin-memcmp
-fno-builtin-strncmp
-fno-builtin-strcmp
-fno-builtin-strncasecmp
-fno-builtin-strcasecmp
-fno-builtin-strstr
-fno-builtin-strcasestr
-fno-builtin-memmem
-fsanitize-trap
asan_ignorelist.txt
hwasan_ignorelist.txt
memtag_ignorelist.txt
msan_ignorelist.txt
tsan_ignorelist.txt
dfsan_abilist.txt
cfi_ignorelist.txt
ubsan_ignorelist.txt
share
address
pointer-compare
pointer-subtract
kernel-address
hwaddress
kernel-hwaddress
memtag
memory
kernel-memory
fuzzer
fuzzer-no-link
thread
leak
alignment
array-bounds
bool
builtin
float-cast-overflow
float-divide-by-zero
integer-divide-by-zero
nonnull-attribute
nullability-arg
nullability-assign
nullability-return
object-size
pointer-overflow
returns-nonnull-attribute
shift-base
shift-exponent
signed-integer-overflow
unreachable
vla-bound
vptr
unsigned-integer-overflow
unsigned-shift-base
dataflow
cfi-cast-strict
cfi-derived-cast
cfi-icall
cfi-mfcall
cfi-unrelated-cast
cfi-nvcall
cfi-vcall
safe-stack
shadow-call-stack
implicit-unsigned-integer-truncation
implicit-signed-integer-truncation
implicit-integer-sign-change
objc-cast
local-bounds
scudo
--linker-option=/include:
+mte
arm64e
arm64
arm64_32
ppcle
ppc64
ppc64le
darwin
freebsd
netbsd
openbsd
sunos
.obj
.lib
.dll.a
-android
clang_rt.
ld64.
libtool
llvm-ar
x86_64-apple-darwin20.1.0
profile
-internal-isystem
-internal-externc-isystem
-lc++
-lstdc++
-lcc_kext
crtfastmath.o
invalid Xarch argument: '%0', not all driver options can be forwared via Xarch argument
0123456789.
clang++
--driver-mode=g++
clang-c++
clang-cc
clang-cpp
--driver-mode=cpp
clang-g++
clang-gcc
clang-cl
--driver-mode=cl
--driver-mode=flang
clang::as
clang integrated assembler
IFS::Merger
llvm-ifs
offload bundler
clang-offload-bundler
offload wrapper
clang-offload-wrapper
armhf
i686
apple-m1
apple-s4
apple-a12
apple-a7
+neon
+reserve-x30
-fp-armv8
-crypto
-neon
+tpidr-el3
+tpidr-el2
+tpidr-el1
+harden-sls-retbr
+harden-sls-blr
+harden-sls-nocomdat
+crc
-crc
+fp16fml
+v8.4a
+fullfp16
-fp16fml
+crypto
+v8.5a
+v9a
+v9.1a
+v9.2a
-sm4
-sha3
-sha2
-aes
+sm4
+sha3
+sha2
+aes
+v8.2a
+v8.3a
+v8.6a
+v8.7a
+i8mm
+bf16
+sve2
+strict-align
+reserve-x1
+reserve-x2
+reserve-x3
+reserve-x4
+reserve-x5
+reserve-x6
+reserve-x7
+reserve-x9
+reserve-x10
+reserve-x11
+reserve-x12
+reserve-x13
+reserve-x14
+reserve-x15
+reserve-x18
+reserve-x20
+reserve-x21
+reserve-x22
+reserve-x23
+reserve-x24
+reserve-x25
+reserve-x26
+reserve-x27
+reserve-x28
+call-saved-x8
+call-saved-x9
+call-saved-x10
+call-saved-x11
+call-saved-x12
+call-saved-x13
+call-saved-x14
+call-saved-x15
+call-saved-x18
+no-neg-immediates
neon
+f32mm
lightning
cyclone
vortex
+zcm
+zcz
-mcpu=
armeb
-mthumb
thumbeb
hard
+soft-float-abi
-mfpu=
+read-tp-hard
native
-dotprod
-bf16
-mve
-mve.fp
-fpregs
sha2
+8msecext
+fix-cmse-cve-2021-35465
-fix-cmse-cve-2021-35465
+long-calls
+execute-only
v8m.base
+reserve-r9
+no-movt
--be8
+mve
crypto
common
m68000
68000
M68000
m68010
68010
M68010
m68020
68020
M68020
m68030
68030
M68030
m68040
68040
M68040
m68060
68060
M68060
-hard-float
+reserve-a0
+reserve-a1
+reserve-a2
+reserve-a3
+reserve-a4
+reserve-a5
+reserve-a6
+reserve-d0
+reserve-d1
+reserve-d2
+reserve-d3
+reserve-d4
+reserve-d5
+reserve-d6
+reserve-d7
mips32r2
mips64r2
mips32r6
mips64r6
mips32
mips3
mips2
mips1
mips4
mips5
mips32r3
mips32r5
mips64
mips64r3
mips64r5
octeon
p5600
+noabicalls
-noabicalls
-long-calls
+xgot
-xgot
+nan2008
-nan2008
+abs2008
-abs2008
single-float
mips16
micromips
dspr2
-fp64
+fpxx
+nooddspreg
+fp64
nooddspreg
nomadd4
virt
ginv
hazard
+use-indirect-jump-hazard
603e
603ev
604e
pwr3
7400
7450
8548
e500
e500mc
e5500
power3
power4
pwr4
power5
pwr5
power5x
pwr5x
power6
pwr6
power6x
pwr6x
pwr7
pwr8
pwr9
pwr10
future
powerpc
powerpc64
ppc64
powerpc64le
ppc64le
-mpower7
-mpower8
-mpower9
-mpower10
-many
+spe
-hard-float
+secure-plt
+reserve-x8
+reserve-x16
+reserve-x17
+reserve-x19
+reserve-x29
+reserve-x31
+relax
-relax
+save-restore
-save-restore
ilp32d
ilp32e
ilp32
lp64d
lp64
rv32e
rv32imafdc
rv64imafdc
rv32imac
rv64imac
-Av9a
-Av9
-Av9b
-Av9d
-Av8
-Asparclite
-Asparclet
-Av8plus
-Av8plusb
-Av8plusd
-Aleon
+soft-float
generic
+transactional-execution
-transactional-execution
+vector
-vector
sandybridge
AVX2
haswell
AVX512F
AVX512
skylake-avx512
IA32
pentium3
SSE2
pentium4
core-avx2
penryn
nehalem
core2
yonah
btver2
x86-64
i486
-rdrnd
-pclmul
-rtm
-fsgsbase
+sse4.2
+popcnt
+cx16
+ssse3
+retpoline-indirect-calls
+retpoline-indirect-branches
+lvi-load-hardening
+lvi-cfi
+seses
-x87
-mmx
-sse
-a32
-a64
-many
-bnso
-bM:SRE
-bnoentry
-bdbg:namedsects
-b32
-bpT:0x10000000
-bpD:0x20000000
-b64
-bpT:0x100000000
-bpD:0x110000000
crti.o
crti_64.o
-bcdtors:all:0:s
-lpthreads
picking up libstdc++ headers is unimplemented on AIX
opt/IBM/openxlCSDK
-D__LIBC_NO_CPP_MATH_OVERLOADS__
linking libstdc++ unimplemented on AIX
-lc++abi
gcrt0.o
gcrt0_64.o
mcrt0.o
mcrt0_64.o
crt0.o
crt0_64.o
aix::Assembler
assembler
aix::Linker
linker
-Bstatic
-export-dynamic
-Bshareable
-dynamic-linker
/lib/ld-ananas.so
crtbeginS.o
crtbegin.o
crtendS.o
crtend.o
crtn.o
ananas::Assembler
ananas::Linker
SPACK package 
 not found at 
Cannot use SPACK package 
 at 
 due to multiple installations for the same version
ROCM_PATH
/opt/rocm
/opt
/opt/
HIP_DEVICE_LIB_PATH
amdgcn
/.hipVersion
Found HIP installation: 
, version 
cuda_wrappers
__clang_hip_runtime_wrapper.h
-shared
+wavefrontsize64
CL1.2
ROCm installation search path
 (Spack 
amdgpu::Linker
ld.lld
-mlink-builtin-bitcode
at90s1200
avr1
attiny11
attiny12
attiny15
attiny28
at90s2313
tiny-stack
avr2
at90s2323
at90s2333
at90s2343
at90s4433
attiny22
attiny26
at90s4414
at90s4434
at90s8515
at90c8534
at90s8535
attiny13
avr25/tiny-stack
avr25
attiny13a
attiny2313
attiny2313a
attiny24
attiny24a
attiny25
attiny261
attiny261a
at86rf401
ata5272
attiny4313
attiny44
attiny44a
attiny84
attiny84a
attiny45
attiny85
attiny441
attiny461
attiny461a
attiny841
attiny861
attiny861a
attiny87
attiny43u
attiny48
attiny88
attiny828
at43usb355
avr3
at76c711
atmega103
avr31
at43usb320
attiny167
avr35
at90usb82
at90usb162
ata5505
atmega8u2
atmega16u2
atmega32u2
attiny1634
atmega8
avr4
ata6289
atmega8a
ata6285
ata6286
atmega48
atmega48a
atmega48pa
atmega48pb
atmega48p
atmega88
atmega88a
atmega88p
atmega88pa
atmega88pb
atmega8515
atmega8535
atmega8hva
at90pwm1
at90pwm2
at90pwm2b
at90pwm3
at90pwm3b
at90pwm81
ata5790
avr5
ata5795
atmega16
atmega16a
atmega161
atmega162
atmega163
atmega164a
atmega164p
atmega164pa
atmega165
atmega165a
atmega165p
atmega165pa
atmega168
atmega168a
atmega168p
atmega168pa
atmega168pb
atmega169
atmega169a
atmega169p
atmega169pa
atmega32
atmega32a
atmega323
atmega324a
atmega324p
atmega324pa
atmega325
atmega325a
atmega325p
atmega325pa
atmega3250
atmega3250a
atmega3250p
atmega3250pa
atmega328
atmega328p
atmega329
atmega329a
atmega329p
atmega329pa
atmega3290
atmega3290a
atmega3290p
atmega3290pa
atmega406
atmega64
atmega64a
atmega640
atmega644
atmega644a
atmega644p
atmega644pa
atmega645
atmega645a
atmega645p
atmega649
atmega649a
atmega649p
atmega6450
atmega6450a
atmega6450p
atmega6490
atmega6490a
atmega6490p
atmega64rfr2
atmega644rfr2
atmega16hva
atmega16hva2
atmega16hvb
atmega16hvbrevb
atmega32hvb
atmega32hvbrevb
atmega64hve
at90can32
at90can64
at90pwm161
at90pwm216
at90pwm316
atmega32c1
atmega64c1
atmega16m1
atmega32m1
atmega64m1
atmega16u4
atmega32u4
atmega32u6
at90usb646
at90usb647
at90scr100
at94k
m3000
atmega128
avr51
atmega128a
atmega1280
atmega1281
atmega1284
atmega1284p
atmega128rfa1
atmega128rfr2
atmega1284rfr2
at90can128
at90usb1286
at90usb1287
atmega2560
avr6
atmega2561
atmega256rfr2
atmega2564rfr2
attiny4
avrtiny
attiny5
attiny9
attiny10
attiny20
attiny40
atxmega16a4
avrxmega2
atxmega16a4u
atxmega16c4
atxmega16d4
atxmega32a4
atxmega32a4u
atxmega32c4
atxmega32d4
atxmega32e5
atxmega16e5
atxmega8e5
atxmega64a3u
avrxmega4
atxmega64a4u
atxmega64b1
atxmega64b3
atxmega64c3
atxmega64d3
atxmega64d4
atxmega64a1
avrxmega5
atxmega64a1u
atxmega128a3
avrxmega6
atxmega128a3u
atxmega128b1
atxmega128b3
atxmega128c3
atxmega128d3
atxmega128d4
atxmega192a3
atxmega192a3u
atxmega192c3
atxmega192d3
atxmega256a3
atxmega256a3u
atxmega256a3b
atxmega256a3bu
atxmega256c3
atxmega256d3
atxmega384c3
atxmega384d3
atxmega128a1
avrxmega7
atxmega128a1u
atxmega128a4u
/../bin
/lib/
--gc-sections
-Tdata=0x
--start-group
-l:crt
-lgcc
--end-group
/avr
/../avr
AVR::Linker
avr-ld
/usr/avr
/usr/lib/avr
libclang_rt.builtins-
baremetal
../lib/clang-runtimes
-lsupc++
-lunwind
-lclang_rt.builtins-
+march=rv64imac
+mabi=lp64
/rv64imafdc/lp64d
+march=rv64imafdc
+mabi=lp64d
rv64imafdc
rv64imac
march=rv64imac
march=rv64imafdc
lp64
mabi=lp64
lp64d
mabi=lp64d
+march=rv32imac
+mabi=ilp32
/rv32i/ilp32
+march=rv32i
/rv32im/ilp32
+march=rv32im
/rv32iac/ilp32
+march=rv32iac
/rv32imafc/ilp32f
+march=rv32imafc
+mabi=ilp32f
rv32i
rv32im
rv32imafc
march=rv32i
march=rv32im
rv32iac
march=rv32iac
rv32imac
march=rv32imac
march=rv32imafc
ilp32
mabi=ilp32
ilp32f
mabi=ilp32f
baremetal::Linker
-skip-unused-modulemap-deps
-sys-header-deps
openmp_wrappers
-internal-isystem
-include
__clang_openmp_device_functions.h
-fpch-instantiate-templates
-include-pch
-pch-through-hdrstop-
create
-pch-through-header=
.dummy
-isysroot
CPATH
-c-isystem
C_INCLUDE_PATH
-cxx-isystem
CPLUS_INCLUDE_PATH
-objc-isystem
OBJC_INCLUDE_PATH
-objcxx-isystem
OBJCPLUS_INCLUDE_PATH
-mfloat-abi
soft
-mllvm
-arm-global-merge=false
-arm-global-merge=true
-no-implicit-float
-fallow-half-arguments-and-returns
-aarch64-fix-cortex-a53-835769=1
-aarch64-fix-cortex-a53-835769=0
-aarch64-enable-global-merge=false
-aarch64-enable-global-merge=true
none
a_key
-msign-return-address=
-msign-return-address-key=
-mbranch-target-enforce
scalable
native
-mno-ldc1-sdc1
-mno-check-zero-division
-mips-ssection-threshold=
-mgpopt
-mlocal-sdata=1
-mlocal-sdata=0
-mextern-sdata=1
-mextern-sdata=0
-membedded-data=1
-membedded-data=0
-mips-compact-branches=
-mips-jalr-reloc=0
elfv2
elfv1
altivec
-mabi=ieeelongdouble
-mpacked-stack -mbackchain -mhard-float
-mno-tls-direct-seg-refs
-x86-asm-syntax=
-x86-asm-syntax=intel
-mstack-alignment=4
generic
-mqdsp6-compat
-Wreturn-type
-hexagon-small-data-threshold=
-fshort-enums
-enable-hexagon-ieee-rnd-near
-machine-sink-split=0
-target-cpu
-fvisibility
{ "directory": "
, "file": "
, "output": "
, "arguments": ["
--sysroot=
--target=
"]},
.%%%%.json
clang
ModuleCache
extract-api
C++ for IAMCU
-cc1
-target-sdk-version=
-sycl-std=2020
-Wspir-compat
-analyze
-migrate
-Eonly
-emit-obj
-fsyntax-only
-emit-header-module
-emit-module-interface
-emit-pch
-verify-pch
-extract-api
-emit-llvm
-emit-llvm-bc
-emit-interface-stubs
-interface-stub-version=
-module-file-info
-rewrite-objc
-emit-llvm-uselists
-flto=
full
-disable-llvm-passes
-fembed-bitcode=marker
-disable-free
-clear-ast-before-backend
-disable-llvm-verifier
-main-file-name
-static-define
-DUNICODE
-analyzer-config-compatibility-mode=true
-function-alignment
-falign-loops=
-pic-level
-frwpi
-fhalf-no-semantic-interposition
-fmerge-all-constants
-fno-delete-null-pointer-checks
-mabi=vec-extabi
-mabi=vec-default
-fno-jump-tables
-maix-struct-return
-msvr4-struct-return
-fpcc-struct-return
-freg-struct-return
-fdefault-calling-conv=stdcall
-enable-matrix
-mframe-pointer=none
-mframe-pointer=non-leaf
-mframe-pointer=all
-fno-zero-initialized-in-bss
-enable-loop-distribute
-loop-distribute-mem
-extra-vectorizer-passes
-fstrict-enums
-fallow-editor-placeholders
-fstrict-vtable-pointers
-fno-escaping-block-tail-calls
-fextend-arguments=64
-fno-verbose-asm
-no-integrated-as
Structure
Arguments
-mconstructor-aliases
-fforbid-guard-variables
-fno-plt
-funwind-tables=2
-funwind-tables=1
-aux-target-cpu
small
kernel
large
-mcmodel=large
-treat-scalable-fixed-error-as-warning
please use -maltivec and include altivec.h explicitly
please use -mno-altivec
-diagnostic-log-file
-crash-diagnostics-dir=
-fdata-sections
-fno-unique-section-names
-funique-internal-linkage-names
-funique-basic-block-section-names
CLANG_PROJECT_INDEX_PATH
-index-store-path
-index-ignore-system-symbols
-Wno-
-pedantic
GCC_TREAT_WARNINGS_AS_ERRORS
-Wno-error
-std=c++98
-std=c89
-std=c++14
-std=c++11
-fgnu-keywords
-foperator-arrow-depth
-Wlarge-by-value-copy=64
standalone
swift
swift-5.0
swift-4.2
swift-4.1
-ftarget-variant-availability-checks
-fno-constant-nsnumber-literals
-fno-constant-nsarray-literals
-fno-constant-nsdictionary-literals
-fconstant-array-class
-fconstant-dictionary-class
-fconstant-integer-number-class
-fconstant-float-number-class
-fconstant-double-number-class
-ftabstop
-fstack-size-section
-ferror-limit
-fconstexpr-backtrace-limit
-fspell-checking-limit
-mignore-xcoff-visibility
-fopenmp
-fnoopenmp-use-tls
-fopenmp-optimistic-collapse
-fopenmp-cuda-mode
-fopenmp-target-new-runtime
-fopenmp-target-debug
-fopenmp-cuda-force-full-runtime
-fopenmp-assume-teams-oversubscription
-fopenmp-assume-threads-oversubscription
-fapple-kext
-ftrapv-handler
-fwrapv
-mspeculative-load-hardening
-mstack-alignment=
-mstack-probe-size=0
-mno-stack-arg-probe
-arm-restrict-it
-arm-no-restrict-it
-fhip-new-launch-api
-fgpu-exclude-wrong-side-overloads
-fcf-protection=
SampleUse with PGO options
-fno-assume-sane-operator-new
-fapinotes
-fblocks
-fgnuc-version=
-fms-compatibility-version=
-std=c11
-std=c17
-std=c++17
c++20
-std=c++20
c++latest
-std=c++2b
-fdeclspec
-fgnu89-inline
-fno-inline
c++2a
-fmodules-codegen
-fmodules-debuginfo
-fobjc-encode-cxx-class-template-spec
-fapplication-extension
-exception-model=sjlj
-exception-model=seh
-exception-model=dwarf
-exception-model=wasm
-frelaxed-template-template-args
-fno-aligned-allocation
-faligned-allocation
-fno-constant-cfstrings
-fpascal-strings
-fpack-struct=1
-fmax-type-align=
-fmax-type-align=16
-fcommon
-fptrauth-intrinsics
-fptrauth-calls
-fptrauth-returns
-fptrauth-indirect-gotos
-fptrauth-auth-traps
-fptrauth-vtable-pointer-address-discrimination
-fptrauth-vtable-pointer-type-discrimination
-fptrauth-objc-interface-sel
-fptrauth-soft
-fptrauth-block-descriptor-pointers
-fptrauth-function-pointer-type-discrimination
-fptrauth-objc-class-ro
utf-8
-fasm-blocks
-vectorize-slp
-fno-dollars-in-identifiers
-fapple-pragma-pack
-fxl-pragma-pack
-traditional-cpp
-fretain-comments-from-system-headers
-load
-fpass-plugin=
-finclude-default-header
-disable-llvm-optzns
-dwarf-debug-flags
-fcuda-include-gpubinary
-cuid=
-inline-threshold=
-fopenmp-is-device
-fopenmp-host-ir-file-path
-munsafe-fp-atomics
-fopenmp-targets=
-fvirtual-function-elimination
-flto=full
-fno-whole-program-vtables
-fno-split-lto-unit
-fsanitize=cfi
-fsplit-lto-unit
-global-isel=1
-global-isel-abort=2
-global-isel=0
AARCH64_ALWAYS_ENABLE_GLOBAL_ISEL
-global-isel
-global-isel-abort=0
-forder-file-instrumentation
-enable-order-file-instrumentation
-fforce-enable-int128
-fkeep-static-consts
-fno-c++-static-destructors
-target-feature
+outline-atomics
-outline-atomics
-faddrsig
-D__GCC_HAVE_DWARF2_CFI_ASM=1
-fomit-frame-pointer
clang frontend
-fobjc-runtime=
-D_DEBUG
-D_MT
-D_DLL
--dependent-lib=msvcrt
--dependent-lib=msvcrtd
--dependent-lib=libcmt
--dependent-lib=libcmtd
-D_VC_NODEFAULTLIB
--dependent-lib=oldnames
--show-includes
-fno-rtti-data
-fcxx-exceptions
-fexternc-nounwind
-fms-memptr-rep=single
-fms-memptr-rep=multiple
-fms-memptr-rep=virtual
-fdefault-calling-conv=cdecl
-fdefault-calling-conv=fastcall
-fdefault-calling-conv=vectorcall
-fdefault-calling-conv=regcall
-fdiagnostics-format
cf,nochecks
-cfguard-no-checks
ehcont
-ehcontguard
ehcont-
arm64e
-fptrauth-abi-version=
-fptrauth-kernel-abi-version
-cc1as
-filetype
-dwarf-debug-producer
-arm-add-build-attributes
-aarch64-mark-bti-property
-type=
-targets=
-march=
-outputs=
-inputs=
-unbundle
-allow-missing-bundles
-target
/E, /P or /EP
-fmacro-prefix-map=
-fcoverage-prefix-map=
-aux-target-feature
darwinpcs
aapcs
-mrelax-all
-mincremental-linker-compatible
+use-tcc-in-div
-use-tcc-in-div
+soft-float
-soft-float
+mips1
+mips2
+mips3
+mips4
+mips5
+mips32
+mips32r2
+mips32r3
+mips32r5
+mips32r6
+mips64
+mips64r2
+mips64r3
+mips64r5
+mips64r6
-force_cpusubtype_ALL
-msave-temp-labels
-massembler-fatal-warnings
-massembler-no-warn
--noexecstack
--compress-debug-sections
-march
-fdebug-compilation-dir
-fdebug-compilation-dir=
-mnoexecstack
thumb
-arm-implicit-it=
-mlimit-float-precision
fast
-ffp-model=
-Ofast
strict
-ftrapping-math
ignore
-fno-trapping-math
-ffp-model=strict
-menable-no-nans
-menable-unsafe-fp-math
-fno-signed-zeros
-mreassociate
-freciprocal-math
-fdenormal-fp-math=
-fdenormal-fp-math-f32=
-ffp-contract=
-fno-rounding-math
-frounding-math
-ffast-math
-ffp-contract=fast
-ffp-model=fast
-mfpmath
preserve-sign
positive-zero
-mrecip=
divd
divf
vec-divd
vec-divf
sqrtd
sqrtf
vec-sqrtd
vec-sqrtf
c++-cpp-output
-analyzer-store=region
-analyzer-checker=core
-analyzer-checker=apiModeling
-analyzer-checker=unix
-analyzer-checker=unix.API
-analyzer-checker=unix.Malloc
-analyzer-checker=unix.MallocSizeof
-analyzer-checker=unix.MismatchedDeallocator
-analyzer-checker=unix.cstring.BadSizeArg
-analyzer-checker=unix.cstring.NullArg
-analyzer-disable-checker=unix.API
-analyzer-disable-checker=unix.Vfork
-analyzer-checker=osx
-analyzer-checker=security.insecureAPI.decodeValueOfObjCType
-analyzer-checker=fuchsia
-analyzer-checker=deadcode
-analyzer-checker=cplusplus
-analyzer-checker=security.insecureAPI.UncheckedReturn
-analyzer-checker=security.insecureAPI.getpw
-analyzer-checker=security.insecureAPI.gets
-analyzer-checker=security.insecureAPI.mktemp
-analyzer-checker=security.insecureAPI.mkstemp
-analyzer-checker=security.insecureAPI.vfork
-analyzer-checker=nullability.NullPassedToNonnull
-analyzer-checker=nullability.NullReturnedFromNonnull
-analyzer-tidy-checker=bugprone-assert-side-effect
-analyzer-tidy-checker=bugprone-infinite-loop
-analyzer-tidy-checker=bugprone-move-forwarding-reference
-analyzer-output
plist
-static
static
ropi
ropi-rwpi
-fdebug-info-for-profiling
-gno-column-info
-fmodule-format=obj
-gdwarf-5
-gembed-source
-gcodeview-ghash
-gpubnames
-ggnu-pubnames
-gsimple-template-names=simple
simple
-gsimple-template-names=mangled
-generate-arange-section
-fforce-dwarf-frame
-generate-type-units
-debug-forward-template-params
-fprofile-instrument-path=
-fprofile-instrument=clang
--dependent-lib=
profile
-fprofile-instrument=llvm
-fprofile-instrument=csllvm
default_%m.profraw
-fprofile-instrument-use-path=
default.profdata
-ftest-coverage
-fprofile-arcs
-fprofile-instr-generate
--coverage
-fprofile-update=atomic
single
gcno
-coverage-notes-file
gcda
-coverage-data-file
-arcmt-action=check
-arcmt-action=modify
-arcmt-action=migrate
-ccc-arcmt-migrate
-objcmt-migrate-literals
-objcmt-migrate-property
environment
-fdebug-prefix-map=
-stack-protector-buffer-size
tls global
sysreg global
fs gs
uninitialized
zero
-ftrivial-auto-var-init-stop-after=
-cl-std=
-fdeclare-opencl-builtins
-fno-builtin
-fno-builtin-
-fno-math-builtin
-fno-signed-char
-fwchar-type=short
-fno-signed-wchar
-fwchar-type=int
-fsigned-wchar
-fmodules
-fno-cxx-modules
-fimplicit-module-maps
-fno-implicit-modules
.cache
modules
-fmodules-cache-path=
-fprebuilt-module-path=
-fprebuilt-implicit-modules
module.modulemap
-module-dependency-dir
-fbuild-session-timestamp
-fmodules-validate-system-headers
-fobjc-dispatch-method=mixed
-fobjc-dispatch-method=non-legacy
-fobjc-subscripting-legacy-runtime
-fobjc-arc
-fobjc-arc-cxxlib=libc++
-fobjc-arc-cxxlib=libstdc++
-fobjc-arc-exceptions
-fno-objc-convert-messages-to-runtime-calls
-fno-objc-infer-related-result-type
ignore_mrc_weak
-fignore-objc-weak
-fobjc-relative-method-lists
-fsmall-block-descriptors
-fobjc-disable-direct-methods-for-testing
local
-fasync-exceptions
-fno-diagnostics-fixit-info
-fno-diagnostics-show-option
-fdiagnostics-hotness-threshold=
-fno-diagnostics-show-note-include-stack
auto
-fdiagnostics-color=
-fcolor-diagnostics
-fansi-escape-codes
-fno-show-source-location
-fdiagnostics-absolute-paths
-fno-spell-checking
-mprefer-vector-width=none
-foptimization-record-file
-opt-record-file
opt.
-opt-record-passes
-opt-record-format
--amdhsa-code-object-version=
-debug-info-kind=line-directives-only
-debug-info-kind=line-tables-only
-debug-info-kind=constructor
-debug-info-kind=limited
-debug-info-kind=standalone
-debug-info-kind=unused-types
-dwarf-version=
-debugger-tuning=gdb
-debugger-tuning=lldb
-debugger-tuning=sce
-debugger-tuning=dbx
DWARFv3 or greater
64 bit architecture
ELF platforms
--compress-debug-sections=none
zlib-gnu
--compress-debug-sections=
--no-dynamic-linker
-pie
-zrelro
--eh-frame-hdr
-lcompiler_rt
include/c++/v1
cloudabi::Linker
LIBRARY_PATH
--compress-debug-sections=
pwr7
ppc64le
hexagon
-plugin
/../lib/LLVMgold
-plugin-opt=mcpu=
-plugin-opt=O
-plugin-opt=dwo_dir=
_dwo
-plugin-opt=thinlto
-plugin-opt=jobs=
-plugin-opt=-debugger-tune=lldb
-plugin-opt=-debugger-tune=sce
-plugin-opt=-debugger-tune=dbx
-plugin-opt=-debugger-tune=gdb
-plugin-opt=-function-sections
-plugin-opt=-data-sections
-plugin-opt=sample-profile=
-plugin-opt=cs-profile-generate
-plugin-opt=cs-profile-path=
-plugin-opt=cs-profile-path=default_%m.profraw
-plugin-opt=legacy-pass-manager
-plugin-opt=new-pass-manager
-plugin-opt=stats-file=
-rpath
-Bstatic
-lomp
-lgomp
-liomp5
-Bdynamic
-lrt
-lomptarget
-lpthread
-ldl
-lexecinfo
fuzzer_interceptors
--export-dynamic
--export-dynamic-symbol=__cfi_check
-whole-archive
xray
-no-whole-archive
--extract-dwo
--strip-dwo
objcopy
-KPIC
builtins
MSVC
-x86-branches-within-32B-boundaries
-x86-align-branch-boundary=
call
fused, jcc, jmp, call, ret, indirect
-x86-align-branch=
-x86-pad-max-prefix-size=
/libdevice
/libbc-
/lib
nvptx
/libdevice/lib
libbc-
-type=a
clang-offload-bundler
cudart
gcc_s
pthread
hip_hcc
-mno-code-object-v3
-mcode-object-version=2
-mcode-object-v3
-mcode-object-version=3
-enable-machine-outliner
-enable-machine-outliner=never
libomptarget-
rv630
rv635
r600
rv610
rv620
rs780
rs880
rv740
rv770
palm
cedar
sumo
sumo2
hemlock
cypress
aruba
cayman
--plugin-opt=-pass-remarks=
--plugin-opt=-pass-remarks-missed=
--plugin-opt=-pass-remarks-analysis=
--plugin-opt=opt-remarks-filename=
.opt.ld.
--plugin-opt=opt-remarks-passes=
--plugin-opt=opt-remarks-format=
--plugin-opt=opt-remarks-with-hotness
--plugin-opt=opt-remarks-hotness-threshold=
-zignore
-zrecord
--as-needed
--no-as-needed
asan
asan-preinit
memprof
memprof-preinit
ubsan_minimal
scudo_minimal
tsan
hwasan_aliases
hwasan
asan_cxx
memprof_cxx
hwasan_aliases_cxx
hwasan_cxx
dfsan
lsan
msan
msan_cxx
tsan_cxx
safestack
__safestack_init
cfi_diag
scudo_cxx_minimal
scudo_cxx
--whole-archive
--no-whole-archive
.syms
--dynamic-list=
.dwo
-lgcc_eh
-lgcc_s
-l:libunwind.a
-l:libunwind.dll.a
-l:libunwind.so
-lgcc
-plugin-opt=
-mllvm
--32
--64
--strip-all
thumb2pe
arm64pe
i386pe
i386pep
_DllMainCRTStartup
_DllMainCRTStartup@12
-Bdynamic
--enable-auto-image-base
--entry
mainCRTStartup
--allow-multiple-definition
--out-implib
-lmsvcrt
asan_dll_thunk
asan_dynamic
asan_dynamic_runtime_thunk
--undefined
___asan_seh_interceptor
__asan_seh_interceptor
CrossWindows::Linker
CrossWindows::Assembler
/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v
ptxas
/usr/local/cuda
/usr/local/cuda-
/usr/lib/cuda
/bin
/nvvm/libdevice
/lib64
/include/cuda.h
/libdevice.10.bc
sm_20
sm_21
sm_32
sm_30
sm_50
sm_52
sm_53
sm_60
sm_61
sm_62
sm_35
sm_37
__clang_cuda_runtime_wrapper.h
Found CUDA installation: 
, version 
-m64
-m32
--dont-merge-basicblocks
--return-at-end
-lineinfo
--gpu-name
--output-file
--options-file
--cuda
--create
--image=profile=
,file=
fatbinary
-arch
--nvlink-path=
nvlink
clang-nvlink-wrapper
cubin
-enable-memcpyopt-without-libcalls
+ptx74
+ptx73
+ptx72
+ptx71
+ptx70
+ptx65
+ptx64
+ptx63
+ptx61
+ptx60
+ptx42
--nvptx-short-ptr
new-nvptx-
nvptx-
define
CUDA_VERSION
NVPTX::Assembler
NVPTX::OpenMPLinker
NVPTX::Linker
ppc601
ppc603
ppc604
ppc604e
ppc750
ppc7400
ppc7450
ppc970
i486SX
pentium
pentpro
pentIIm3
pentIIm5
xscale
nvptx64
amdil
spir
--gstabs
-demangle
-export_dynamic
-application_extension
thinlto
-object_path_lto
libLTO.dylib
-lto_library
-no_deduplicate
-dynamic
-dylib
-dylib_compatibility_version
-dylib_current_version
-dylib_install_name
-no_pie
-bitcode_bundle
-bitcode_process_mode
-syslibroot
touch
-enable-machine-outliner
-enable-linkonceodr-outlining
-enable-machine-outliner=never
-lto-stats-file=
-ObjC
-lsystem_pthread
-framework
Foundation
-lobjc
-arch_multiple
-final_output
-allow_stack_execute
-threads=
-filelist
-no_warning_for_no_symbols
-create
-output
lipo
dsymutil
--verify
--debug-info
--eh-frame
--quiet
dwarfdump
array-bounds-pointer-arithmetic
builtin-memcpy-chk-size
conditional-uninitialized
empty-body
format-security
implicit-int-conversion
memset-transposed-args
return-stack-address
shadow
shorten-64-to-32
sign-conversion
sizeof-array-argument
sizeof-array-decay
sizeof-pointer-memaccess
unused-result
-Wno-error=
-Wdeprecated-objc-isa-usage
-Werror=deprecated-objc-isa-usage
-Werror=implicit-function-declaration
-fptrauth-objc-isa-mode=sign-and-strip
Toolchains/XcodeDefault.xctoolchain/usr
-force_load
libarclite_
watchsimulator
appletvsimulator
appletvos
iphonesimulator
iphoneos
libclang_rt.
_dynamic.dylib
macho_embedded
-rpath
@executable_path
MacOSX
iPhone
AppleTV
Watch
Bridge
DriverKit
SepOS
iossim
tvossim
watchossim
___gcov_dump
___gcov_reset
_writeout_fn_list
_reset_fn_list
___llvm_profile_filename
___llvm_profile_raw_version
_lprofDirMode
/usr/appleinternal/lib/sanitizers
/usr/local/lib/sanitizers
ubsan
xray
xray-basic
xray-fdr
-lSystem
-lgcc_s.1
/XcodeDefault.xctoolchain/usr/include
backward
4.2.1
powerpc-apple-darwin10
4.0.0
i686-apple-darwin10
i686-apple-darwin8
arm-apple-darwin10
arm64-apple-darwin10
iOS 7
OS X 10.9
libstdc++.dylib
libstdc++.6.dylib
/usr/lib/libstdc++.dylib
/usr/lib/libstdc++.6.dylib
libclang_rt.cc_kext_watchos.a
libclang_rt.cc_kext_tvos.a
libclang_rt.cc_kext_bridgeos.a
libclang_rt.cc_kext_ios.a
libclang_rt.cc_kext.a
pentium2
pentiumpro
armv5tej
armv6k
armv7a
_pic
_static
-fno-builtin-malloc
-target-variant-sdk-version=
-fdepfile-entry=
iOS 5.0
OS X 10.7
RC_DEBUG_OPTIONS
RC_DEBUG_PREFIX_MAP
-watchos_version_min
-watchos_simulator_version_min
-tvos_version_min
-tvos_simulator_version_min
-bridgeos_version_min
-driverkit_version_min
-ios_simulator_version_min
-iphoneos_version_min
-maccatalyst_version_min
-macosx_version_min
-lcrt0.o
crt3.o
tsan_tvos_dynamic
tsan_ios_dynamic
-lto-pass-remarks-output
.opt.
-lto-pass-remarks-filter=
-lto-pass-remarks-format=
-lto-pass-remarks-with-hotness
-lto-pass-remarks-hotness-threshold=
libsystem_pthread
libsystem_kernel
libkxld
libsystem_platform
darwin::Lipo
darwin::Dsymutil
darwin::VerifyDebug
darwin::Linker
darwin::StaticLibTool
static-lib-linker
darwin::Assembler
.app/Contents/Developer
-exported_symbols_list
-exported_symbol
-sectalign
0x4000
WatchOS
BridgeOS
-platform_version
-simulator
mac catalyst
-ldylib1.o
-ldylib1.10.5.o
-lbundle1.o
-lgcrt0.o
-lgcrt1.o
-no_new_main
-lcrt1.o
-lcrt1.3.1.o
-lcrt1.10.5.o
-lcrt1.10.6.o
/usr/libexec/ld-elf.so.2
--hash-style=gnu
--enable-new-dtags
elf_i386
gcrt1.o
Scrt1.o
crt1.o
-L/usr/lib/gcc80
/usr/lib/gcc80
-lpthread
-lgcc_pic
--no-as-needed
/../lib
dragonfly::Assembler
dragonfly::Linker
-fc1
-emit-ast
flang-new
flang frontend
-mabi
-mfpu=vfp
-mfpu=softvfp
-meabi=5
-matpcs
--debug-prefix-map
/libexec/ld-elf.so.1
--hash-style=both
elf_i386_fbsd
elf32ppc_fbsd
elf32lppc
elf32btsmip_fbsd
elf32ltsmip_fbsd
elf32btsmipn32_fbsd
elf64btsmip_fbsd
elf32ltsmipn32_fbsd
elf64ltsmip_fbsd
elf32lriscv
elf64lriscv
crtbeginT.o
-lm_p
-lgcc_p
-lgcc_eh_p
-lpthread_p
-lc_p
/usr/lib32/crt1.o
/usr/lib32
/usr/include/c++/4.2
-lc++_p
-lstdc++_p
freebsd::Assembler
freebsd::Linker
max-page-size=4096
rodynamic
separate-loadable-segments
--pack-dyn-relocs=relr
--build-id
asan/
hwasan/
tsan/
ld.so.1
--push-state
--pop-state
--wrap=pthread_create
noexcept
+fno-exceptions
+fsanitize=address
asan+noexcept
+fsanitize=hwaddress
hwasan+noexcept
relative-vtables
+fexperimental-relative-c++-abi-vtables
relative-vtables+noexcept
relative-vtables+asan
relative-vtables+asan+noexcept
relative-vtables+hwasan
relative-vtables+hwasan+noexcept
compat
+fc++-abi=itanium
fexceptions
fsanitize=address
fsanitize=hwaddress
fexperimental-relative-c++-abi-vtables
fc++-abi=itanium
fuchsia::Linker
rcsD
noexecstack
cortex-a53
--fix-cortex-a53-843419
--warn-shared-textrel
rcrt1.o
max-page-size=0x4000000
crtbegin
crtbegin_so.o
crtbegin_static.o
crtbegin_dynamic.o
-lgloss
-lsoftfp
crtend
crtend_so.o
crtend_android.o
--x32
-mppc
-mbig-endian
-mlittle-endian
-mppc64
-mfpu=neon
-mfpu=crypto-neon-fp-armv8
-mfloat-abi=soft
-mfloat-abi=softfp
-mfloat-abi=hard
-mno-shared
-call_nonpic
-mnan=2008
-mfpxx
-no-mips16
-mmsa
/crtbegin.o
march=mips32
march=mips32r2
mips32r6
march=mips32r6
march=mips64
octeon+
march=mips64r2
mips64r6
march=mips64r6
mmicromips
muclibc
mnan=2008
mabi=n32
mabi=n64
msoft-float
mhard-float
0.0.0
/gcc
/gcc-cross
Found candidate GCC installation: 
Selected GCC installation: 
Candidate multilib: 
Selected multilib: 
/usr/gcc
/lib/gcc
/opt/rh/gcc-toolset-10/root/usr
/opt/rh/devtoolset-10/root/usr
/opt/rh/devtoolset-9/root/usr
/opt/rh/devtoolset-8/root/usr
/opt/rh/devtoolset-7/root/usr
/opt/rh/devtoolset-6/root/usr
/opt/rh/devtoolset-4/root/usr
/opt/rh/devtoolset-3/root/usr
/opt/rh/devtoolset-2/root/usr
/usr
aarch64-none-linux-gnu
aarch64-linux-gnu
aarch64-redhat-linux
aarch64-suse-linux
aarch64_be-none-linux-gnu
aarch64_be-linux-gnu
arm-linux-gnueabi
arm-linux-gnueabihf
armv7hl-redhat-linux-gnueabi
armv6hl-suse-linux-gnueabi
armv7hl-suse-linux-gnueabi
armeb-linux-gnueabi
armeb-linux-gnueabihf
armebv7hl-redhat-linux-gnueabi
x86_64-linux-gnu
x86_64-unknown-linux-gnu
x86_64-pc-linux-gnu
x86_64-redhat-linux6E
x86_64-redhat-linux
x86_64-suse-linux
x86_64-manbo-linux-gnu
x86_64-slackware-linux
x86_64-unknown-linux
x86_64-amazon-linux
x86_64-linux-gnux32
x86_64-pc-linux-gnux32
/libx32
/lib32
i586-linux-gnu
i686-linux-gnu
i686-pc-linux-gnu
i386-redhat-linux6E
i686-redhat-linux
i386-redhat-linux
i586-suse-linux
i686-montavista-linux
i686-gnu
m68k-linux-gnu
m68k-unknown-linux-gnu
m68k-suse-linux
mips-linux-gnu
mips-mti-linux
mips-mti-linux-gnu
mips-img-linux-gnu
mipsisa32r6-linux-gnu
mipsel-linux-gnu
mipsisa32r6el-linux-gnu
mips64-linux-gnu
mips64-linux-gnuabi64
mipsisa64r6-linux-gnu
mipsisa64r6-linux-gnuabi64
mips64el-linux-gnu
mips64el-linux-gnuabi64
mipsisa64r6el-linux-gnu
mipsisa64r6el-linux-gnuabi64
mips64-linux-gnuabin32
mipsisa64r6-linux-gnuabin32
mips64el-linux-gnuabin32
mipsisa64r6el-linux-gnuabin32
msp430-elf
powerpc-linux-gnu
powerpc-unknown-linux-gnu
powerpc-linux-gnuspe
powerpc64-suse-linux
powerpc-montavista-linuxspe
powerpcle-linux-gnu
powerpcle-unknown-linux-gnu
powerpcle-linux-musl
powerpc64-linux-gnu
powerpc64-unknown-linux-gnu
ppc64-redhat-linux
powerpc64le-linux-gnu
powerpc64le-unknown-linux-gnu
powerpc64le-none-linux-gnu
powerpc64le-suse-linux
ppc64le-redhat-linux
riscv32-unknown-linux-gnu
riscv32-linux-gnu
riscv32-unknown-elf
riscv64-unknown-linux-gnu
riscv64-linux-gnu
riscv64-unknown-elf
sparc-linux-gnu
sparcv8-linux-gnu
sparc64-linux-gnu
sparcv9-linux-gnu
s390x-linux-gnu
s390x-unknown-linux-gnu
s390x-ibm-linux-gnu
s390x-suse-linux
s390x-redhat-linux
sparc-sun-solaris2.11
sparc-sun-solaris2.12
sparcv9-sun-solaris2.11
sparcv9-sun-solaris2.12
i386-pc-solaris2.11
i386-pc-solaris2.12
x86_64-pc-solaris2.11
x86_64-pc-solaris2.12
aarch64-linux-android
arm-linux-androideabi
mipsel-linux-android
mips64el-linux-android
i686-linux-android
x86_64-linux-android
gcc/
../..
gcc-cross/
/../
/config-
/usr/lib/gcc/
/../../..
/bin
/lib/../
/../include
/../include/c++/
/include/g++-v
elf_iamcu
aarch64linux
aarch64linuxb
armelfb_linux_eabi
armelf_linux_eabi
m68kelf
elf32ppclinux
elf32ppc
elf32lppclinux
elf64ppc
elf64lppc
elf32_sparc
elf64_sparc
elf32btsmip
elf32ltsmip
elf32btsmipn32
elf64btsmip
elf32ltsmipn32
elf64ltsmip
elf64_s390
elf32_x86_64
elf_x86_64
elf64ve
krait
-mcpu=cortex-a15
kryo
-mcpu=cortex-a57
/mips-r2
+march=mips32r2
/mips-r6
+march=mips32r6
+march=mips32
+march=mips64r6
/32/mips-r1
/mips-r1
/32/mips-r2
/32/mips-r6
/mips-r2-hard-musl
/mipsel-r2-hard-musl
/../sysroot
/mips32
+m32
-mmicromips
/micromips
+mmicromips
/mips64r2
+m64
+march=mips64r2
/mips64
-march=mips64r2
/mips16
+mips16
/uclibc
+muclibc
+mabi=n64
-mabi=n32
/sof
+msoft-float
/nan2008
+mnan=2008
/mips64/mips16
/mips64r2/mips16
/micromips/mips16
/micromips/64
/mips32/64
^/64
/mips16/64
.*sof/nan2008
/mips-r2-hard
-muclibc
/mips-r2-soft
/mipsel-r2-hard
/mipsel-r2-soft
/mips-r2-hard-nan2008
/mipsel-r2-hard-nan2008
/mips-r2-hard-nan2008-uclibc
/mipsel-r2-hard-nan2008-uclibc
/mips-r2-hard-uclibc
/mipsel-r2-hard-uclibc
/micromipsel-r2-hard-nan2008
/micromipsel-r2-soft
-mabi=n64
+mabi=n32
/../../../../sysroot/uclibc/usr/include
/../../../../sysroot/usr/include
/../../../../sysroot
/../usr/include
/../../../../mips-mti-linux-gnu/lib
/mips64r6
/mips-r6-hard
/mips-r6-soft
/mipsel-r6-hard
/mipsel-r6-soft
/micromips-r6-hard
/micromips-r6-soft
/micromipsel-r6-hard
/micromipsel-r6-soft
/../../../../mips-img-linux-gnu/lib
-mips16
/soft-float
/micromips/nan2008
/mips16/nan2008
/mips16.*/64
/micromips.*/64
/n32
/../../../../mips-linux-gnu/libc/uclibc/usr/include
/../../../../mips-linux-gnu/libc/usr/include
/armv7-a
+march=armv7-a
/thumb
-march=armv7-a
+mthumb
/armv7-a/thumb
march=armv7-a
mthumb
lib32/ilp32
lib32/ilp32f
lib32/ilp32d
+mabi=ilp32d
lib64/lp64
lib64/lp64f
+mabi=lp64f
lib64/lp64d
ilp32d
mabi=ilp32d
lp64f
mabi=lp64f
+march=
+mabi=
march=
mabi=
/../../../../riscv64-unknown-elf/lib
/../../../../riscv32-unknown-elf/lib
/430
-exceptions
/430/exceptions
+exceptions
exceptions
/amd64
/sparcv9
-mx32
/x32
+mx32
/libgcc.a
mx32
/etc/env.d/gcc
gcc::Preprocessor
gcc preprocessor
gcc::Compiler
gcc frontend
GNU::Assembler
gcc::Linker
linker (via gcc)
/c++/
/system/develop/headers/c++/v1
/system/develop/headers/c++
-flavor
--no-undefined
-plugin-opt=-amdgpu-internalize-symbols
-plugin-opt=-mattr=
-plugin-opt=-force-import-all
-plugin-opt=
-save-temps
-type=o
-bundle-align=
-targets=host-x86_64-unknown-linux
-inputs=/dev/null
-amdgcn-amd-amdhsa--
.mcin
.hipfb
mcin
hipfb
#       HIP Object Generator
# *** Automatically generated by Clang ***
  .protected __hip_fatbin
  .type __hip_fatbin,@object
  .section .hip_fatbin,"a",@progbits
  .globl __hip_fatbin
  .p2align 
__hip_fatbin:
  .incbin "
--filetype=obj
llvm-mc
-amdgpu-internalize-symbols
AMDGPU address sanitizer runtime library (asanrtl) is not found. Please install ROCm device library which supports address sanitizer
xnack
'-fgpu-sanitize' is not compatible with offload arch '%0'. Use an offload arch without 'xnack-' instead
AMDGCN::Linker
amdgcn-link
-mlink-bitcode-file
--arch=hexagon
-filetype=obj
-mcpu=hexagon
-gpsize=
/../target
/hexagon/lib
/G0/pic
+reserved-r19
-hexagon-autohvx
/hexagon/include
/hexagon/include/c++/v1
/hexagon/include/c++
hexagonv60
+hvx
+hvx-length
128b
-march=hexagon
-call_shared
-dynamic-linker=/lib/ld-musl-hexagon.so.1
/usr/lib/crt1.o
/usr/lib/crti.o
-lclang_rt.builtins-hexagon
hexagon/lib
/crt0_standalone.o
/crt0.o
/pic
/initS.o
/init.o
/finiS.o
/fini.o
hexagon::Assembler
hexagon-as
hexagon::Linker
hexagon-ld
hexagon-link
/lib/i386-gnu
i386-gnu
/../lib/
/../
/usr/lib/../
/lib/ld.so
lib32
lib64
GNU::Linker
i386-linux-gnu
mipsisa64r6
-linux-
gnuabin32
gnuabi64
/lib/mips64-linux-gnu
mipsisa64r6el
mips64el
/lib/mips64el-linux-gnu
/lib/powerpc-linux-gnuspe
relro
opt/rh/
/usr/
/../../../../
/libc
/system/bin/linker64
/system/bin/linker
/lib/ld-musl-
.so.1
ld-linux-aarch64.so.1
ld-linux-aarch64_be.so.1
ld-linux-armhf.so.3
ld-linux.so.3
ld-uClibc-mipsn8.so.0
ld-uClibc.so.0
ld-musl-mipsel.so.1
ld-musl-mips.so.1
ld-linux-mipsn8.so.1
ld64.so.2
ld64.so.1
ld-linux-riscv32-
ld-linux-riscv64-
ld-linux.so.2
libx32
ld-linux-x32.so.2
ld-linux-x86-64.so.2
/opt/nec/ve/lib/ld-linux-ve.so.1
/../include/c++
/../include/g++
libr6
libr2
GNU::StaticLibTool
__llvm_profile_runtime
/c++/v1
-lmingwthrd
-lmingw32
-lmoldname
-lmingwex
ucrt
--subsystem
windows
console
--dll
--shared
DllMainCRTStartup
.exe
dllcrt2.o
crt2u.o
crt2.o
gcrt2.o
windowsapp
-lssp_nonshared
-lssp
-lomp
-liomp5md
-lgomp
-lgmon
--require-defined
-lgdi32
-lcomdlg32
-ladvapi32
-lshell32
-luser32
-lkernel32
-w64-mingw32
mingw32
-w64-mingw32-gcc
mingw32-gcc
/sys-root/mingw/lib
/sys-root/mingw/include
MinGW::Assemble
MinGW::Linker
-lCompilerRT-Generic
-L/usr/pkg/compiler-rt/lib
minix::Assembler
minix::Linker
-hwmult16
-hwmult32
-hwmultf5
16bit
+hwmult16
32bit
+hwmult32
+hwmultf5
-D__MSP430i
-D__
crtbegin_no_eh.o
-lcrt
-lsim
--undefined=__crt0_call_exit
-lnosys
crtend_no_eh.o
--relax
MSP430::Linker
msp430-elf-ld
-lmul_16
-lmul_32
-lmul_f5
-lmul_none
-Tmsp430-sim.ld
-out:
-defaultlib:libcmt
-defaultlib:oldnames
DIA SDK
-libpath:
atlmfc
-nologo
-debug
-Brepro
-dll
-implib:
-wholearchive:
-incremental:no
-include:___asan_seh_interceptor
-include:__asan_seh_interceptor
-guard:cf
-guard:cf-
-guard:ehcont
-guard:ehcont-
-nodefaultlib:vcomp.lib
-nodefaultlib:vcompd.lib
-defaultlib:libomp.lib
-defaultlib:libiomp5md.lib
link
lld-link
link.exe
cl.exe
Hostx64
Hostx86
stdlib.h
INCLUDE
EXTERNAL_INCLUDE
Include
shared
winrt
-D_HAS_STATIC_RTTI=0
amd64
Tools
MSVC
VCToolsInstallDir
VCINSTALLDIR
PATH
x86ret
x86chk
amd64ret
amd64chk
Host
visualstudio::Linker
Windows Kits
-fno-exceptions
-DMYRIAD2
moviCompile
-no6thSlotCompression
-cv:
-noSPrefixing
moviAsm
-lrtemscpu
-lrtemsbsp
sparc-myriad-rtems-ld
myriad
sparc-myriad-rtems
/../sparc-myriad-rtems/lib
/../include/c++/v1
movicompile
shave::Linker
nacl-arm-macros.s
elf_i386_nacl
armelf_nacl
elf_x86_64_nacl
mipselelf_nacl
Native Client
-lnacl
-lpnacl_legacy
x86_64-nacl/lib32
i686-nacl/usr/lib
x86_64-nacl/bin
i686-nacl
x86_64-nacl/lib
x86_64-nacl/usr/lib
x86_64-nacl
arm-nacl/lib
arm-nacl/usr/lib
arm-nacl/bin
arm-nacl
mipsel-nacl/lib
mipsel-nacl/usr/lib
mipsel-nacl
i686-nacl/usr/include
x86_64-nacl/include
arm-nacl/usr/include
x86_64-nacl/usr/include
mipsel-nacl/usr/include
arm-nacl/include/c++/v1
x86_64-nacl/include/c++/v1
mipsel-nacl/include/c++/v1
NaCl::Linker
/libexec/ld.elf_so
armelf_nbsd_eabi
armelf_nbsd_eabihf
armelf_nbsd
armelfb_nbsd_eabi
armelfb_nbsd_eabihf
armelfb_nbsd
elf32ppc_nbsd
=/usr/lib/i386
=/usr/lib/eabi
=/usr/lib/eabihf
=/usr/lib/oabi
=/usr/lib/o32
=/usr/lib/64
=/usr/lib/powerpc
=/usr/lib/sparc
=/usr/lib
/usr/include/c++
/__config
/usr/include/g++
-D_REENTRANT
netbsd::Assembler
netbsd::Linker
__start
/usr/libexec/ld.so
-nopie
rcrt0.o
-lc++abi_p
/usr/lib/libcompiler_rt.a
openbsd::Assembler
openbsd::Linker
--dependent-lib=libclang_rt.profile-x86_64.a
orbis-as
--dependent-lib=libSceDbgUBSanitizer_stub_weak.a
--dependent-lib=libSceDbgAddressSanitizer_stub_weak.a
--oformat=so
-fuse-ld
orbis-ld
/../../
target/include
PS4 system headers
target/lib
PS4 system libraries
-fvisibility-dllexport=protected
-fvisibility-nodllstorageclass=hidden
-fvisibility-externs-dllimport=default
-fvisibility-externs-nodllstorageclass=default
-lSceDbgUBSanitizer_stub_weak
-lSceDbgAddressSanitizer_stub_weak
PS4cpu::Assemble
PS4cpu::Link
lib/crt0.o
RISCV::Linker
_start
values-Xa.o
values-Xc.o
values-xpg6.o
values-xpg4.o
solaris::Assembler
solaris::Linker
/usr/bin/ld
/../libexec
/opt/nec/ve/bin
/opt/nec/ve/lib
NCC_C_INCLUDE_PATH
/opt/nec/ve/include
NCC_CPLUS_INCLUDE_PATH
-ldl
wasm64
wasm32
crt1-command.o
crt1-reactor.o
_initialize
--shared-memory
wasm-opt
-mno-atomics
-mno-bulk-memory
-mno-mutable-globals
-mno-sign-ext
+atomics
+bulk-memory
+mutable-globals
+sign-ext
-fPIC
-fwasm-exceptions
-mno-exception-handling
-enable-emscripten-cxx-exceptions
-mllvm -enable-emscripten-cxx-exceptions
+exception-handling
-wasm-enable-eh
-emscripten-cxx-exceptions-allowed
-mllvm -emscripten-cxx-exceptions-allowed
--force-attribute=
:noinline
-mllvm -wasm-enable-sjlj
-mllvm -enable-emscripten-sjlj
/include/c++/v1
/llvm-lto/1400.0.11git
wasm::Linker
wasm-ld
-fverbose-asm
XCC_C_INCLUDE_PATH
XCC_CPLUS_INCLUDE_PATH
XCore::Assembler
XCore-as
XCore::Linker
XCore-ld
ppc_wrappers
--input-format=IFS
--output-format=ELF
--output-format=IFS
ifso
.ifso
.ifs
clcpp
cppm
cpp-output
cuda-cpp-output
cuda
hip-cpp-output
objective-c-cpp-output
objc-cpp-output
objective-c
c++-cpp-output
objective-c++-cpp-output
objc++-cpp-output
objective-c++
renderscript
c-header-cpp-output
c-header
cl-header
objective-c-header-cpp-output
objective-c-header
c++-header-cpp-output
c++-header
objective-c++-header-cpp-output
objective-c++-header
c++-module
c++-module-cpp-output
assembler
assembler-with-cpp
f95-cpp-input
java
lto-ir
lto-bc
ifs-cpp
plist
rewritten-objc
rewritten-legacy-objc
remap
precompiled-header
object
treelang
image
dSYM
dependencies
cuda-fatbin
fatbin
hip-fatbin
hipfb
api-information
json
none
 on 
function-entry
function-exit
custom
-fxray-modes=
typed
STATISTICS:
<eof> parser at end of file
<unknown> parser at unknown location
: at annotation token
: unknown current parser token
: current parser token '
delete
decltype
attribute
enable_if
property
__declspec
macosx_app_extension
macos_app_extension
message
replacement
defined_in
generated_declaration
_Noreturn 
enum 
union
__interface
__interface 
parsing struct/union body
_Atomic
type name
acquire_capability
acquire_shared_capability
exclusive_lock_function
shared_lock_function
acquired_after
acquired_before
assert_capability
assert_shared_capability
assert_exclusive_lock
assert_shared_lock
diagnose_if
exclusive_trylock_function
guarded_by
lock_returned
locks_excluded
pt_guarded_by
release_capability
release_shared_capability
release_generic_capability
unlock_function
requires_capability
exclusive_locks_required
requires_shared_capability
shared_locks_required
shared_trylock_function
try_acquire_capability
try_acquire_shared_capability
callback
iboutletcollection
Owner
Pointer
preferred_name
vec_type_hint
interrupt
argument_with_type_tag
pointer_with_type_tag
__clang_arm_builtin_alias
availability
blocks
clang_builtin_alias
guard
callable_when
consumable
enum_extensibility
format
loop
unroll
nounroll
unroll_and_jam
nounroll_and_jam
ns_error_domain
declare simd
declare target
objc_bridge
objc_bridge_mutable
objc_bridge_related
objc_gc
objc_method_family
objc_ownership
ownership_holds
ownership_returns
ownership_takes
param_typestate
return_typestate
set_typestate
swift_async
swift_async_error
swift_error
swift_newtype
swift_wrapper
test_typestate
type_tag_for_datatype
type_visibility
typed_memory_operation
ptrauth_vtable_pointer
xnu_usage_semantics
cpu_dispatch
cpu_specific
macOS
tvOS
watchOS
bridgeOS
iOSApplicationExtension
ios_app_extension
macOSApplicationExtension
tvOSApplicationExtension
tvos_app_extension
watchOSApplicationExtension
watchos_app_extension
macCatalyst
macCatalystApplicationExtension
maccatalyst_app_extension
instancetype
inline 
namespace 
parsing namespace
using-enum declaration
attributes list
using declaration
alias declaration
_Static_assert
__underlying_type
final
__final
sealed
abstract
override
access declaration
parsing struct/union/class body
(anonymous)
throw
_Clang
__gnu__
, ""
noexcept(false)
nodiscard
maybe_unused
__is_abstract
__is_aggregate
__is_arithmetic
__is_array
__is_assignable
__is_base_of
__is_class
__is_complete_type
__is_compound
__is_const
__is_constructible
__is_convertible
__is_convertible_to
__is_destructible
__is_empty
__is_enum
__is_floating_point
__is_final
__is_function
__is_fundamental
__is_integral
__is_interface_class
__is_literal
__is_lvalue_expr
__is_lvalue_reference
__is_member_function_pointer
__is_member_object_pointer
__is_member_pointer
__is_nothrow_assignable
__is_nothrow_constructible
__is_nothrow_destructible
__is_object
__is_pod
__is_pointer
__is_polymorphic
__is_reference
__is_rvalue_expr
__is_rvalue_reference
__is_same
__is_scalar
__is_sealed
__is_signed
__is_standard_layout
__is_trivial
__is_trivially_assignable
__is_trivially_constructible
__is_trivially_copyable
__is_union
__is_unsigned
__is_void
__is_volatile
__builtin_sycl_unique_stable_name
__bridge_retained
block literal parsing
__builtin_unsafe_forge_bidi_indexable
__builtin_unsafe_forge_single
__builtin_get_pointer_lower_bound
__builtin_get_pointer_upper_bound
__builtin_unsafe_terminated_by_to_indexable
__builtin_terminated_by_to_indexable
__builtin_unsafe_terminated_by_from_indexable
android
Android
Fuchsia
iOS (App Extension)
macOS (App Extension)
tvOS (App Extension)
watchOS (App Extension)
macCatalyst (App Extension)
Swift
template 
lambda expression parsing
addrspace_cast
const_cast
dynamic_cast
reinterpret_cast
static_cast
typeid
__uuidof
operator 
requires
__builtin_bit_cast
< ::
Allocation failed
@class
@end
@end
nonnull
nullable
null_unspecified
suppress_direct
@compatibility_alias
@synthesize
@dynamic
@throw
@synchronized
@catch clause
parsing Objective-C method
finally
autoreleasepool
@encode
@selector
initializer
'initializer'
<selector-name>
(<property-name>)
<property-name>
user condition
<condition>
<invalid>
context set name "
'=' that follows the context set name "
context selectors for the context set "
interop
ompx_
omp_
'#pragma omp 
when clause
sizes
uses_allocator
uses_allocators
prefer_type
interop types
schedule modifier
defaultmap modifier
mapper
iterator
reduction identifier
dependency type
motion modifier
adjust-op
score expression
targetsync
', '
ext_
absent
contains
holds
no_openmp
no_openmp_routines
no_parallelism
data
exit
begin
STDC
OPENCL
init_seg
data_seg
bss_seg
const_seg
code_seg
section
discard
remove
push
compiler
".CRT$XCC"
".CRT$XCL"
user
".CRT$XCU"
distribute
enable
assume_safety
fixed
unless(
__attribute__((
apply_to
clang loop 
field
namespace
'is_member'
'functionType'
'unless(is_union)'
'is_thread_local', 'is_global', 'is_local', 'is_parameter', 'unless(is_parameter)'
'is_instance'
any(
align
options
packed
mac68k
pack
ms_struct
unused
redefine_extname
FP_CONTRACT
FENV_ACCESS
FENV_ROUND
STDC FENV_ROUND
CX_LIMITED_RANGE
clang section
pragma clang section
EXTENSION
OPENCL EXTENSION
comment
exestr
pragma comment
float_control
detect_mismatch
pragma detect_mismatch
pointers_to_members
full_generality
vtordisp
runtime_checks
intrinsic
__INTRIN_H
optimize
'on' or 'off'
fenv_access
force_cuda_host_device
clang optimize
clang loop
clang fp
clang attribute
max_tokens_here
clang max_tokens_here
max_tokens_total
clang max_tokens_total
do/while
goto
continue
break
co_return
__leave
fp_contract
STDC FENV_ACCESS
case 
'case'
'default'
in compound statement ('{}')
consteval
else
switch
while
'do'
auto &&
parsing function body
InternalPragmaState
parsing function try block
target MC unavailable
<MS inline asm>
target ASM parser unavailable
asm operand
volatile
inline
goto
unspecified
fpsr
mxcsr
template
typename
__except
inout
oneway
bycopy
byref
vector
_Bool
pixel
_exception_info
__exception_info
GetExceptionInformation
_exception_code
__exception_code
GetExceptionCode
_abnormal_termination
__abnormal_termination
AbnormalTermination
import
module
top-level asm block
'asm'
__if_exists
__if_not_exists
USAGE: 
OPTIONS
 <value>
<value>
Expected lexical block
Expected visible lookup table block
malformed block record in AST file
source location entry ID out-of-range for AST file
incorrectly-formatted source location entry in AST file
unexpected number of macro tokens for a macro in AST file
could not find file '
' referenced by AST file '
error at end of module block in AST file
duplicate TYPE_OFFSET record in AST file
duplicate DECL_OFFSET record in AST file
duplicate IDENTIFIER_OFFSET record in AST file
invalid special-types record
invalid weak identifiers record
ran out of source locations
Multiple SOURCE_LOCATION_PRELOADS records in AST file
Invalid VTABLE_USES record
Invalid existing PendingInstantiations
Invalid PENDING_IMPLICIT_INSTANTIATIONS block
Invalid SEMA_DECL_REFS block
invalid DECL_UPDATE_OFFSETS block in AST file
duplicate OBJC_CATEGORIES_MAP record in AST file
Invalid existing UndefinedButUsed
invalid undefined-but-used record
duplicate MACRO_OFFSET record in AST file
invalid pragma optimize record
invalid pragma ms_struct record
invalid pragma pointers to members record
invalid cuda pragma options record
invalid pragma pack record
invalid pragma float control record
SourceLocation remap refers to unknown module, cannot find 
' referenced by AST file
invalid record at top-level of AST file
malformed EXTENSION_METADATA in AST file
FILE type is NULL
Invalid FILE type in AST file
jmp_buf type is NULL
Invalid jmp_buf type in AST file
sigjmp_buf type is NULL
ucontext_t type is NULL
submodule metadata record should be at beginning of block
malformed module definition
too many submodules
no preprocessing record
Unexpected code for type
malformed AST file: missing C++ ctor initializers
malformed AST file: missing C++ base specifiers
declaration ID out-of-range for AST file
Corrupted AST file
*** AST File Statistics:
  %u/%u source location entries read (%f%%)
  %u/%u types read (%f%%)
  %u/%u declarations read (%f%%)
  %u/%u identifiers read (%f%%)
  %u/%u macros read (%f%%)
  %u/%u selectors read (%f%%)
  %u/%u statements read (%f%%)
  %u/%u lexical declcontexts read (%f%%)
  %u/%u visible declcontexts read (%f%%)
  %u/%u method pool entries read (%f%%)
  %u/%u method pool lookups succeeded (%f%%)
  %u/%u method pool table lookups succeeded (%f%%)
  %u / %u identifier table lookups succeeded (%f%%)
*** PCH/ModuleFile Remappings:
Global bit offset map
Global source location entry map
Global type map
Global declaration map
Global identifier map
Global macro map
Global submodule map
Global selector map
Global preprocessed entity map
*** PCH/Modules Loaded:
no identifier table in AST file
no macro table in AST file
submodule ID out of range in AST file
selector ID out of range in AST file
Microsoft Visual C++ full compatibility mode
Microsoft C++ extensions
Microsoft inline asm blocks
Borland extensions
C++11
C++14
C++17
C++20
C++2b
Objective-C App Extension
trigraphs
'//' comments
bool, true, and false keywords
half keyword
wchar_t keyword
char8_t keyword
__ieee128 keyword
__declspec keyword
GNU extensions
GNU keywords
GNU C compatibility version
digraphs
C++ operator name keywords
Apple kext support
writable string support
const-qualified string support
lax vector conversions
Altivec source compatibility
Assume convergent functions
AltiVec-style vector initializers
System z vector extensions
exception handling
Objective-C exceptions
C++ exceptions
C/C++ EH Asynch exceptions
ignore exceptions
Assume extern C functions don't unwind
traditional CPP emulation
run-time type information
emit run-time type information data
Microsoft-compatible structure layout
freestanding implementation
disable builtin functions
disable math builtin functions
GNU-style inline assembly
C++20 coroutines
dllexported classes dllexport inline methods
C++17 relaxed matching of template template arguments
pointer authentication intrinsics
function pointer authentication
return pointer authentication
indirect gotos pointer authentication
pointer authentication failure traps
incorporate address discrimination in authenticated vtable pointers
incorporate type discrimination in authenticated vtable pointers
authentication mode for objc isa
authentication of SEL fields of ObjC interfaces
authentication key for SEL fields of ObjC interfaces
pre- and post-authentication masking for Objective-C isa pointer
software emulation of pointer authentication
pointer authentication ABI version
controls whether the pointer auth abi version represents a kernel ABI
controls whether the pointer auth abi version should be encoded in the IR
enable signed block descriptors
class_ro_t pointer authentication
'[[]]' attributes extension for all language standard modes
Preserve expressions in AST when encountering errors
Preserve the type in recovery expressions
POSIX thread support
blocks extension to C
errno in math functions
modules semantics
C++ Modules TS syntax
C++ modules syntax
require declaration of module uses
requiring declaration of module uses and all headers to be in modules
local submodule visibility
hash out diagnostic errors as part of the module hash
enable ODR hash checking for attributes
disable ODR hash checking for categories
disable ODR hash checking for interfaces
disable ODR hash checking for protocols
disable ODR hash checking for records
disable ODR hash checking for properties
disable ODR hash checking for ivars
disable ODR hash checking for methods
__OPTIMIZE__ predefined macro
__OPTIMIZE_SIZE__ predefined macro
__STATIC__ predefined macro (as opposed to __DYNAMIC__)
default struct packing maximum alignment
default maximum alignment for types
Controls if doubles should be aligned to 8 bytes (x86 only)
width of double
width of long double
use IEEE 754 quadruple-precision for long double
__EXTABI__  predefined macro
__PIC__ level
is pie
Read-only position independence
Read-write position independence
GNU inline semantics
__NO_INLINE__ predefined macro
__DEPRECATED predefined macro
fast FP math optimizations, and __FAST_MATH__ predefined macro
__FINITE_MATH_ONLY__ predefined macro
Unsafe Floating Point Math
optimizer honors parentheses when floating-point expressions are evaluated
signed char
width of wchar_t
signed or unsigned wchar_t
member-pointer representation method
default calling convention
short enum types
OpenCL C version
C++ for OpenCL version
OpenCL generic keyword
OpenCL pipes language constructs and built-ins
Native half type support
Native half args and returns
half args and returns
OpenMP support and version of OpenMP (31, 40 or 45)
Enable all Clang extensions for OpenMP directives and clauses
Use SIMD only OpenMP support.
Use TLS for threadprivates or runtime calls
Generate code only for OpenMP target device
Generate code for OpenMP pragmas in SIMT/SPMD mode
Use the experimental OpenMP-IR-Builder codegen path.
Force to use full runtime in all constructs when offloading to CUDA devices
Number of SMs for CUDA devices.
Number of blocks per SM for CUDA devices.
Number of the reduction records in the intermediate reduction buffer used for the teams reductions.
Use the new bitcode library for OpenMP offloading
Enable debugging in the OpenMP offloading device RTL
Use at most 32 bits to represent the collapsed loop nest counter.
Assume work-shared loops do not have more iterations than participating threads.
Assume distributed loops do not have more iterations than participating teams.
compiling for CUDA device
allowing variadic functions in CUDA device code
treating unattributed constexpr functions as __host__ __device__
using approximate transcendental functions
generate relocatable device code
allowing device side global init functions for HIP
default max threads per block for kernel launch bounds for HIP
defer host/device related diagnostic messages for CUDA/HIP
always exclude wrong side overloads in overloading resolution for CUDA/HIP
Generate code for SYCL device
SYCL host compilation
Version of the SYCL standard used
Use new kernel launching API for HIP
sized deallocation
aligned allocation
aligned allocation functions are unavailable
maximum alignment guaranteed by '::operator new(size_t)'
enable satisfaction caching for C++20 Concepts
no constant CoreFoundation strings
constant Objective-C literals
no constant number literals
no constant array literals
no constant dictionary literals
hidden visibility for global operator new and delete declaration
check availability for target variant platform
Treats throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
treating double-precision floating point constants as single precision constants
OpenCL fast relaxed math
Enable experimental strict floating point
bit-field type alignment
hexagon-qdsp6 backward compatibility
Objective-C automated reference counting
__weak support in the ARC runtime
Objective-C __weak in ARC and MRC files
Ignore ARC-style __weak instead of erroring
Subscripting support in legacy ObjectiveC runtime
Disable recognition of objc_direct methods
Control-Flow Branch Protection enabled
OpenCL fake address space map
OpenCL address space map mangling mode
Include default header file for OpenCL
Declare OpenCL builtin functions
optional blocks runtime
Require member pointer base types to be complete at the point where the type's inheritance model would be determined under the Microsoft ABI
Objective-C Garbage Collection mode
default visibility for functions and variables [-fvisibility]
default visibility for types [-ftype-visibility]
apply global symbol visibility to external declarations without an explicit visibility
set the visiblity of globals from their DLL storage class [-fvisibility-from-dllstorageclass]
visibility for functions and variables with dllexport annotations [-fvisibility-from-dllstorageclass]
visibility for functions and variables without an explicit DLL storage class [-fvisibility-from-dllstorageclass]
visibility for external declarations with dllimport annotations [-fvisibility-from-dllstorageclass]
visibility for external declarations without an explicit DLL storage class [-fvisibility-from-dllstorageclass]
stack protector mode
stack checking
controls whether to use strong linking for darwin stack checking (x86 only)
trivial automatic variable initialization
stop trivial automatic variable initialization after the specified number of instances. Must be greater than 0.
Zero initialize only first N bytes of each stack variable.
do not auto-initialize objects initialized by a C++ constructor
do not auto-initialize non-POD objects
do not auto-initialize variables in STL namespace
do not auto-initialize arrays other than arrays of pointers
signed integer overflow handling
Thread Model
Microsoft Visual C/C++ Version
How many vtordisps to insert
Apple gcc-compatible #pragma pack handling
IBM XL #pragma pack handling
retain documentation comments from system headers in the AST
use external API notes
compilation involves pch
controls how aggressive is ASan field padding (0: none, 1:least aggressive, 2: more aggressive)
ARM Security extensions support
controls whether to do XRay instrumentation
controls whether to always emit intrinsic calls to __xray_customevent(...) builtin.
controls whether to always emit intrinsic calls to __xray_typedevent(...) builtin.
whether to emit all vtables
version of Clang that we should attempt to be ABI-compatible with
Default alignment for functions
Default alignment for loops
fixed point types
unsigned fixed point types having one extra padding bit
Register C++ static destructors
Enable or disable the builtin matrix type
Max number of tokens per TU or 0
enable noescape optimized blocks
Scope of return address signing
Key used for return address signing
Branch-target enforcement enabled
Speculative load hardening enabled
Use an ABI-incompatible v-table layout that uses relative references
Minimum vscale value
Maximum vscale value
Controls how scalar integer arguments are extended in calls to unprototyped and varargs functions
Fuchsia API level
Allow CWG1423
Revert f50d1aca992864d7edd65a449f5368b53727752a and return id for [self alloc]
Revert 4257857bf8a508b56f73f61bdf941194913bac92 and do not infer +new availability
Revert dafc3106d2069b806a10e072306a2196f1cda585 and do not emit -Wformat
Revert 5741d19f046f24450ebda3a421a8ce49043ad2b8 and do not emit -Wformat
Revert 2f26bc5542705c390bf17af2fdfc31e056147ea9 and do not emit -Wstrict-prototypes
Revert 7ae1b4a0ce9c7f269cf3069e41496a78e3f28d49 and allow static members in anon unions
Revert 7ae1b4a0ce9c7f269cf3069e41496a78e3f28d49 and allow static members in local structs
Revert 878a24ee244a24c39d1c57e9af2e88c621f7cce9 and give some implicit member expressions dependent type
Revert part of c90e198107431f64b73686bdce31c293e3380ac7
Revert 536b0ee40ab97f2878dc124a321cf9108ee3d233 and don't check nullptr arithmetic
Disable 89b1a463a531dbdb18aa3516d7b8fd7482d1d3a0
Disable (part of) 96c899449b61b866b583560a49c4627f561336fc
Disable a4a60ad51dd58da2c15ef505d5fe527ef3fecd89
Disable ccc4d83cda16bea1d9dfd0967dc7d2cfb24b8e75
rdar://67765582
Disable (part of) 552c6c232872
rdar://72363517
rdar://72823399
rdar://81325777
rdar://81712146
module features
target Objective-C runtime
block command names
target ABI
target CPU
tune CPU
-Wsystem-headers
-Werror
-Weverything -Werror
-Werror=
malformed uleb128, extends past end
uleb128 too big for uint64
Cursor should always be able to go back, failed: 
could not decompress embedded file contents: 
AST record has invalid code
could not get buffer for file '
Timestamp file
file too small to contain AST file magic
file doesn't start with AST file magic
clang diagnostic
category '
' on interface '
jumping
reading code
ASTReader::readDeclRecord failed reading decl code: 
attempt to read a C++ base-specifier record as a declaration
attempt to read a C++ ctor initializer record as a declaration
ASTReader::loadDeclUpdateRecords failed jumping: 
ASTReader::loadDeclUpdateRecords failed reading code: 
ASTReader::loadDeclUpdateRecords failed reading rec code: 
ASTReader::loadPendingDeclChain failed jumping: 
ASTReader::loadPendingDeclChain failed reading code: 
ASTReader::loadPendingDeclChain failed reading rec code: 
ASTReader::readDeclRecord failed 
CONTROL_BLOCK
METADATA
MODULE_NAME
MODULE_DIRECTORY
MODULE_MAP_FILE
IMPORTS
ORIGINAL_FILE
ORIGINAL_PCH_DIR
ORIGINAL_FILE_ID
INPUT_FILE_OFFSETS
OPTIONS_BLOCK
LANGUAGE_OPTIONS
TARGET_OPTIONS
HEADER_SEARCH_OPTIONS
PREPROCESSOR_OPTIONS
INPUT_FILES_BLOCK
INPUT_FILE
INPUT_FILE_HASH
AST_BLOCK
TYPE_OFFSET
DECL_OFFSET
IDENTIFIER_OFFSET
IDENTIFIER_TABLE
EAGERLY_DESERIALIZED_DECLS
MODULAR_CODEGEN_DECLS
SPECIAL_TYPES
STATISTICS
TENTATIVE_DEFINITIONS
SELECTOR_OFFSETS
METHOD_POOL
PP_COUNTER_VALUE
SOURCE_LOCATION_OFFSETS
SOURCE_LOCATION_PRELOADS
EXT_VECTOR_DECLS
UNUSED_FILESCOPED_DECLS
PPD_ENTITIES_OFFSETS
VTABLE_USES
REFERENCED_SELECTOR_POOL
TU_UPDATE_LEXICAL
SEMA_DECL_REFS
WEAK_UNDECLARED_IDENTIFIERS
PENDING_IMPLICIT_INSTANTIATIONS
UPDATE_VISIBLE
DECL_UPDATE_OFFSETS
DECL_UPDATES
CUDA_SPECIAL_DECL_REFS
HEADER_SEARCH_TABLE
FP_PRAGMA_OPTIONS
OPENCL_EXTENSIONS
OPENCL_EXTENSION_TYPES
OPENCL_EXTENSION_DECLS
DELEGATING_CTORS
KNOWN_NAMESPACES
MODULE_OFFSET_MAP
SOURCE_MANAGER_LINE_TABLE
OBJC_CATEGORIES_MAP
FILE_SORTED_DECLS
IMPORTED_MODULES
OBJC_CATEGORIES
MACRO_OFFSET
INTERESTING_IDENTIFIERS
UNDEFINED_BUT_USED
LATE_PARSED_TEMPLATE
OPTIMIZE_PRAGMA_OPTIONS
MSSTRUCT_PRAGMA_OPTIONS
POINTERS_TO_MEMBERS_PRAGMA_OPTIONS
UNUSED_LOCAL_TYPEDEF_NAME_CANDIDATES
DELETE_EXPRS_TO_ANALYZE
CUDA_PRAGMA_FORCE_HOST_DEVICE_DEPTH
PP_CONDITIONAL_STACK
DECLS_TO_CHECK_FOR_DEFERRED_DIAGS
SOURCE_MANAGER_BLOCK
SM_SLOC_FILE_ENTRY
SM_SLOC_BUFFER_ENTRY
SM_SLOC_BUFFER_BLOB
SM_SLOC_BUFFER_BLOB_COMPRESSED
SM_SLOC_EXPANSION_ENTRY
PREPROCESSOR_BLOCK
PP_MACRO_DIRECTIVE_HISTORY
PP_MACRO_FUNCTION_LIKE
PP_MACRO_OBJECT_LIKE
PP_MODULE_MACRO
PP_TOKEN
SUBMODULE_BLOCK
SUBMODULE_METADATA
SUBMODULE_DEFINITION
SUBMODULE_UMBRELLA_HEADER
SUBMODULE_HEADER
SUBMODULE_TOPHEADER
SUBMODULE_UMBRELLA_DIR
SUBMODULE_IMPORTS
SUBMODULE_EXPORTS
SUBMODULE_REQUIRES
SUBMODULE_EXCLUDED_HEADER
SUBMODULE_LINK_LIBRARY
SUBMODULE_CONFIG_MACRO
SUBMODULE_CONFLICT
SUBMODULE_PRIVATE_HEADER
SUBMODULE_TEXTUAL_HEADER
SUBMODULE_PRIVATE_TEXTUAL_HEADER
SUBMODULE_INITIALIZERS
SUBMODULE_EXPORT_AS
COMMENTS_BLOCK
COMMENTS_RAW_COMMENT
COMMENTS_DECL_TO_COMMENT
DECLTYPES_BLOCK
TYPE_EXT_QUAL
TYPE_COMPLEX
TYPE_POINTER
TYPE_BLOCK_POINTER
TYPE_LVALUE_REFERENCE
TYPE_RVALUE_REFERENCE
TYPE_MEMBER_POINTER
TYPE_CONSTANT_ARRAY
TYPE_INCOMPLETE_ARRAY
TYPE_VARIABLE_ARRAY
TYPE_VECTOR
TYPE_EXT_VECTOR
TYPE_FUNCTION_NO_PROTO
TYPE_FUNCTION_PROTO
TYPE_TYPEDEF
TYPE_TYPEOF_EXPR
TYPE_TYPEOF
TYPE_RECORD
TYPE_ENUM
TYPE_OBJC_INTERFACE
TYPE_OBJC_OBJECT_POINTER
TYPE_DECLTYPE
TYPE_ELABORATED
TYPE_SUBST_TEMPLATE_TYPE_PARM
TYPE_UNRESOLVED_USING
TYPE_INJECTED_CLASS_NAME
TYPE_OBJC_OBJECT
TYPE_TEMPLATE_TYPE_PARM
TYPE_TEMPLATE_SPECIALIZATION
TYPE_DEPENDENT_NAME
TYPE_DEPENDENT_TEMPLATE_SPECIALIZATION
TYPE_DEPENDENT_SIZED_ARRAY
TYPE_PAREN
TYPE_MACRO_QUALIFIED
TYPE_PACK_EXPANSION
TYPE_ATTRIBUTED
TYPE_SUBST_TEMPLATE_TYPE_PARM_PACK
TYPE_AUTO
TYPE_UNARY_TRANSFORM
TYPE_ATOMIC
TYPE_DECAYED
TYPE_ADJUSTED
TYPE_OBJC_TYPE_PARAM
LOCAL_REDECLARATIONS
DECL_TYPEDEF
DECL_TYPEALIAS
DECL_ENUM
DECL_RECORD
DECL_ENUM_CONSTANT
DECL_FUNCTION
DECL_OBJC_METHOD
DECL_OBJC_INTERFACE
DECL_OBJC_PROTOCOL
DECL_OBJC_IVAR
DECL_OBJC_AT_DEFS_FIELD
DECL_OBJC_CATEGORY
DECL_OBJC_CATEGORY_IMPL
DECL_OBJC_IMPLEMENTATION
DECL_OBJC_COMPATIBLE_ALIAS
DECL_OBJC_PROPERTY
DECL_OBJC_PROPERTY_IMPL
DECL_FIELD
DECL_MS_PROPERTY
DECL_VAR
DECL_IMPLICIT_PARAM
DECL_PARM_VAR
DECL_FILE_SCOPE_ASM
DECL_BLOCK
DECL_CONTEXT_LEXICAL
DECL_CONTEXT_VISIBLE
DECL_NAMESPACE
DECL_NAMESPACE_ALIAS
DECL_USING
DECL_USING_SHADOW
DECL_USING_DIRECTIVE
DECL_UNRESOLVED_USING_VALUE
DECL_UNRESOLVED_USING_TYPENAME
DECL_LINKAGE_SPEC
DECL_CXX_RECORD
DECL_CXX_METHOD
DECL_CXX_CONSTRUCTOR
DECL_CXX_DESTRUCTOR
DECL_CXX_CONVERSION
DECL_ACCESS_SPEC
DECL_FRIEND
DECL_FRIEND_TEMPLATE
DECL_CLASS_TEMPLATE
DECL_CLASS_TEMPLATE_SPECIALIZATION
DECL_CLASS_TEMPLATE_PARTIAL_SPECIALIZATION
DECL_VAR_TEMPLATE
DECL_VAR_TEMPLATE_SPECIALIZATION
DECL_VAR_TEMPLATE_PARTIAL_SPECIALIZATION
DECL_FUNCTION_TEMPLATE
DECL_TEMPLATE_TYPE_PARM
DECL_NON_TYPE_TEMPLATE_PARM
DECL_TEMPLATE_TEMPLATE_PARM
DECL_CONCEPT
DECL_REQUIRES_EXPR_BODY
DECL_TYPE_ALIAS_TEMPLATE
DECL_STATIC_ASSERT
DECL_CXX_BASE_SPECIFIERS
DECL_CXX_CTOR_INITIALIZERS
DECL_INDIRECTFIELD
DECL_EXPANDED_NON_TYPE_TEMPLATE_PARM_PACK
DECL_EXPANDED_TEMPLATE_TEMPLATE_PARM_PACK
DECL_CLASS_SCOPE_FUNCTION_SPECIALIZATION
DECL_IMPORT
DECL_OMP_THREADPRIVATE
DECL_EMPTY
DECL_OBJC_TYPE_PARAM
DECL_OMP_CAPTUREDEXPR
DECL_PRAGMA_COMMENT
DECL_PRAGMA_DETECT_MISMATCH
DECL_OMP_DECLARE_REDUCTION
DECL_OMP_ALLOCATE
PREPROCESSOR_DETAIL_BLOCK
PPD_MACRO_EXPANSION
PPD_MACRO_DEFINITION
PPD_INCLUSION_DIRECTIVE
EXTENSION_BLOCK
EXTENSION_METADATA
UNHASHED_CONTROL_BLOCK
SIGNATURE
AST_BLOCK_HASH
DIAGNOSTIC_OPTIONS
HEADER_SEARCH_PATHS
FILE_SYSTEM_OPTIONS
DIAG_PRAGMA_MAPPINGS
<<<INVALID BUFFER>>>
STMT_STOP
STMT_NULL_PTR
STMT_REF_PTR
STMT_NULL
STMT_COMPOUND
STMT_CASE
STMT_DEFAULT
STMT_LABEL
STMT_ATTRIBUTED
STMT_IF
STMT_SWITCH
STMT_WHILE
STMT_DO
STMT_FOR
STMT_GOTO
STMT_INDIRECT_GOTO
STMT_CONTINUE
STMT_BREAK
STMT_RETURN
STMT_DECL
STMT_GCCASM
STMT_MSASM
EXPR_PREDEFINED
EXPR_DECL_REF
EXPR_INTEGER_LITERAL
EXPR_FIXEDPOINT_LITERAL
EXPR_FLOATING_LITERAL
EXPR_IMAGINARY_LITERAL
EXPR_STRING_LITERAL
EXPR_CHARACTER_LITERAL
EXPR_PAREN
EXPR_PAREN_LIST
EXPR_UNARY_OPERATOR
EXPR_SIZEOF_ALIGN_OF
EXPR_ARRAY_SUBSCRIPT
EXPR_CALL
EXPR_MEMBER
EXPR_BINARY_OPERATOR
EXPR_COMPOUND_ASSIGN_OPERATOR
EXPR_CONDITIONAL_OPERATOR
EXPR_IMPLICIT_CAST
EXPR_CSTYLE_CAST
EXPR_COMPOUND_LITERAL
EXPR_EXT_VECTOR_ELEMENT
EXPR_INIT_LIST
EXPR_DESIGNATED_INIT
EXPR_DESIGNATED_INIT_UPDATE
EXPR_IMPLICIT_VALUE_INIT
EXPR_NO_INIT
EXPR_VA_ARG
EXPR_ADDR_LABEL
EXPR_STMT
EXPR_CHOOSE
EXPR_GNU_NULL
EXPR_SHUFFLE_VECTOR
EXPR_BLOCK
EXPR_GENERIC_SELECTION
EXPR_OBJC_STRING_LITERAL
EXPR_OBJC_BOXED_EXPRESSION
EXPR_OBJC_ARRAY_LITERAL
EXPR_OBJC_DICTIONARY_LITERAL
EXPR_OBJC_ENCODE
EXPR_OBJC_SELECTOR_EXPR
EXPR_OBJC_PROTOCOL_EXPR
EXPR_OBJC_IVAR_REF_EXPR
EXPR_OBJC_PROPERTY_REF_EXPR
EXPR_OBJC_KVC_REF_EXPR
EXPR_OBJC_MESSAGE_EXPR
STMT_OBJC_FOR_COLLECTION
STMT_OBJC_CATCH
STMT_OBJC_FINALLY
STMT_OBJC_AT_TRY
STMT_OBJC_AT_SYNCHRONIZED
STMT_OBJC_AT_THROW
EXPR_OBJC_BOOL_LITERAL
STMT_CXX_CATCH
STMT_CXX_TRY
STMT_CXX_FOR_RANGE
EXPR_CXX_OPERATOR_CALL
EXPR_CXX_MEMBER_CALL
EXPR_CXX_REWRITTEN_BINARY_OPERATOR
EXPR_CXX_CONSTRUCT
EXPR_CXX_TEMPORARY_OBJECT
EXPR_CXX_STATIC_CAST
EXPR_CXX_DYNAMIC_CAST
EXPR_CXX_REINTERPRET_CAST
EXPR_CXX_CONST_CAST
EXPR_CXX_ADDRSPACE_CAST
EXPR_CXX_FUNCTIONAL_CAST
EXPR_USER_DEFINED_LITERAL
EXPR_CXX_STD_INITIALIZER_LIST
EXPR_CXX_BOOL_LITERAL
EXPR_CXX_NULL_PTR_LITERAL
EXPR_CXX_TYPEID_EXPR
EXPR_CXX_TYPEID_TYPE
EXPR_CXX_THIS
EXPR_CXX_THROW
EXPR_CXX_DEFAULT_ARG
EXPR_CXX_DEFAULT_INIT
EXPR_CXX_BIND_TEMPORARY
EXPR_CXX_SCALAR_VALUE_INIT
EXPR_CXX_NEW
EXPR_CXX_DELETE
EXPR_CXX_PSEUDO_DESTRUCTOR
EXPR_EXPR_WITH_CLEANUPS
EXPR_CXX_DEPENDENT_SCOPE_MEMBER
EXPR_CXX_DEPENDENT_SCOPE_DECL_REF
EXPR_CXX_UNRESOLVED_CONSTRUCT
EXPR_CXX_UNRESOLVED_MEMBER
EXPR_CXX_UNRESOLVED_LOOKUP
EXPR_CXX_EXPRESSION_TRAIT
EXPR_CXX_NOEXCEPT
EXPR_OPAQUE_VALUE
EXPR_BINARY_CONDITIONAL_OPERATOR
EXPR_TYPE_TRAIT
EXPR_ARRAY_TYPE_TRAIT
EXPR_PACK_EXPANSION
EXPR_SIZEOF_PACK
EXPR_SUBST_NON_TYPE_TEMPLATE_PARM
EXPR_SUBST_NON_TYPE_TEMPLATE_PARM_PACK
EXPR_FUNCTION_PARM_PACK
EXPR_MATERIALIZE_TEMPORARY
EXPR_CUDA_KERNEL_CALL
EXPR_CXX_UUIDOF_EXPR
EXPR_CXX_UUIDOF_TYPE
EXPR_LAMBDA
serializing
unexpected declaration kind '
expected signature BCGI
*** Global Module Index Statistics:
  %u / %u identifier lookups succeeded (%f%%)
LFS error
someone else is building the index
failed writing index
Module index '
' failed: 
failed getting buffer for module file
expected signature CPCH
imported file "%s" not found
GLOBAL_INDEX_BLOCK
INDEX_METADATA
MODULE
IDENTIFIER_INDEX
Module: 
  Imports: 
  Base source location offset: 
Source location offset local -> global map
  Base identifier ID: 
  Number of identifiers: 
Identifier ID local -> global map
  Base macro ID: 
  Number of macros: 
Macro ID local -> global map
  Base submodule ID: 
  Number of submodules: 
Submodule ID local -> global map
  Base selector ID: 
  Number of selectors: 
Selector ID local -> global map
  Base preprocessed entity ID: 
  Number of preprocessed entities: 
Preprocessed entity ID local -> global map
  Base type index: 
  Number of types: 
Type index local -> global map
  Base decl ID: 
  Number of decls: 
Decl ID local -> global map
    
module file out of date
module file not found
signature mismatch
could not read module signature
*** Analysis Based Warnings Stats:
 functions analyzed (
 w/o CFGs).
 CFG blocks built.
 average CFG blocks per function.
 max CFG blocks per function.
 functions analyzed for uninitialiazed variables
 variables analyzed.
 average variables per function.
 max variables per function.
 block visits.
 average block visits per function.
 max block visits per function.
/* DISABLES CODE */ (
case
__block 
break; 
fallthrough
[[fallthrough]]
[[clang::fallthrough]]
__attribute__((fallthrough))
PREFERRED-TYPE: 
COMPLETION: 
Hidden
InBase
Inaccessible
Pattern : 
 (requires fix-it:
 to "
OPENING_PAREN_LOC: 
OVERLOAD: 
const
volatile
restrict
unaligned
unspecified
typedef
extern
static
auto
register
__private_extern__
mutable
__thread
thread_local
_Thread_local
short
long
long long
imaginary
complex
signed
unsigned
void
char
__wchar_t
wchar_t
char8_t
char16_t
char32_t
__int128
_ExtInt
half
float
double
_Accum
_Fract
_Float16
__float128
__ibm128
bool
_Bool
_Decimal32
_Decimal64
_Decimal128
enum
class
union
struct
__interface
type-name
typeof
__auto_type
(decltype)
decltype(auto)
__underlying_type
__unknown_anytype
_Atomic
__bf16
image1d_t
image1d_array_t
image1d_buffer_t
image2d_t
image2d_array_t
image2d_depth_t
image2d_array_depth_t
image2d_msaa_t
image2d_array_msaa_t
image2d_msaa_depth_t
image2d_array_msaa_depth_t
image3d_t
(error)
constexpr
consteval
constinit
__unaligned
cl_clang_storage_class_specifiers
_Sat
inline
__forceinline
virtual
explicit
_Noreturn
friend
__module_private__
power8-vector
__pixel
power10-vector
arch12
 double
override
final
__final
sealed
abstract
__builtin_shufflevector
aarch64_far_address_space
clang::aarch64_far_address_space
global variables
aarch64_vector_pcs
clang::aarch64_vector_pcs
amdgpu_flat_work_group_size
clang::amdgpu_flat_work_group_size
kernel functions
amdgpu_num_sgpr
clang::amdgpu_num_sgpr
NumSGPR
amdgpu_num_vgpr
clang::amdgpu_num_vgpr
NumVGPR
amdgpu_waves_per_eu
clang::amdgpu_waves_per_eu
gnu::interrupt
Interrupt
signal
gnu::signal
functions
abi_tag
gnu::abi_tag
Tags...
structs, variables, functions, and namespaces
clang::acquire_capability
clang::acquire_shared_capability
Args...
acquire_handle
clang::acquire_handle
HandleType
functions, typedefs, and parameters
non-static data members and global variables
address_space
clang::address_space
AddressSpace
alias
gnu::alias
Aliasee
functions and global variables
align_value
Alignment
variables and typedefs
aligned
gnu::aligned
alignas
_Alignas
alloc_align
gnu::alloc_align
ParamIndex
non-K&R-style functions
alloc_size
gnu::alloc_size
ElemSizeParam
NumElemsParam
always_destroy
clang::always_destroy
variables
always_inline
gnu::always_inline
__forceinline
analyzer_noreturn
analyzer_suppress
clang::analyzer_suppress
DiagnosticIdentifiers...
variables and statements
annotate
clang::annotate
Annotation
no_caller_saved_registers
gnu::no_caller_saved_registers
nocf_check
gnu::nocf_check
functions and function pointers
objc_arc_weak_reference_unavailable
clang::objc_arc_weak_reference_unavailable
Objective-C interfaces
clang::argument_with_type_tag
clang::pointer_with_type_tag
ArgumentKind
ArgumentIdx
TypeTagIdx
clang::__clang_arm_builtin_alias
BuiltinName
__clang_arm_mve_strict_polymorphism
clang::__clang_arm_mve_strict_polymorphism
arm_sve_vector_bits
NumBits
artificial
gnu::artificial
inline functions
clang::assert_capability
clang::assert_shared_capability
assume_aligned
gnu::assume_aligned
Offset
Objective-C methods and functions
assume
clang::assume
Assumption
functions and Objective-C methods
clang::availability
priority
named declarations
preserve_access_index
clang::preserve_access_index
structs, unions, and classes
btf_decl_tag
clang::btf_decl_tag
BTFDeclTag
variables, functions, structs, unions, classes, non-static data members, and typedefs
clang::blocks
Type
clang::builtin_alias
gnu::cdecl
__cdecl
_cdecl
cf_audited_transfer
clang::cf_audited_transfer
cf_consumed
clang::cf_consumed
Guard
cfi_canonical_jump_table
clang::cfi_canonical_jump_table
cf_returns_not_retained
clang::cf_returns_not_retained
cf_returns_retained
clang::cf_returns_retained
cf_unknown_transfer
clang::cf_unknown_transfer
clang::cpu_dispatch
Cpus...
clang::cpu_specific
constant
__constant__
device
__device__
functions and variables
device_builtin_surface_type
__device_builtin_surface_type__
classes
device_builtin_texture_type
__device_builtin_texture_type__
__global__
host
__host__
launch_bounds
__launch_bounds__
MaxThreads
MinBlocks
Objective-C methods, functions, and function pointers
__shared__
noreturn
clang::callable_when
CallableStates...
clang::callback
Encoding...
called_once
clang::called_once
capability
clang::capability
shared_capability
clang::shared_capability
Name
structs, unions, classes, and typedefs
carries_dependency
parameters, Objective-C methods, and functions
cleanup
gnu::cleanup
FunctionDecl
local variables
cmse_nonsecure_call
cmse_nonsecure_entry
code_seg
functions and classes
cold
gnu::cold
gnu::common
gnu::const
__const
gnu::__const
constinit
require_constant_initialization
clang::require_constant_initialization
gnu::constructor
Priority
clang::consumable
DefaultState
consumable_auto_cast_state
clang::consumable_auto_cast_state
consumable_set_state_on_read
clang::consumable_set_state_on_read
convergent
clang::convergent
dllexport
gnu::dllexport
functions, variables, classes, and Objective-C interfaces
dllimport
gnu::dllimport
IsDeref
DependerDecls...
DependerLevels...
non-static data members and variables
gnu::deprecated
Message
Replacement
destructor
gnu::destructor
Cond
DiagnosticType
functions, Objective-C methods, and Objective-C properties
disable_sanitizer_instrumentation
clang::disable_sanitizer_instrumentation
functions, Objective-C methods, and global variables
disable_tail_calls
clang::disable_tail_calls
empty_bases
enforce_tcb
clang::enforce_tcb
TCBName
enforce_tcb_leaf
clang::enforce_tcb_leaf
clang::enum_extensibility
Extensibility
gnu::error
gnu::warning
UserDiagnostic
exclude_from_explicit_instantiation
clang::exclude_from_explicit_instantiation
variables, functions, and classes
SuccessValue
ext_vector_type
NumElements
external_source_symbol
clang::external_source_symbol
definedIn
generatedDeclaration
clang::fallthrough
gnu::fallthrough
empty statements
gnu::fastcall
__fastcall
_fastcall
flag_enum
clang::flag_enum
flatten
gnu::flatten
gnu::format
FormatIdx
FirstArg
Objective-C methods, blocks, and non-K&R-style functions
format_arg
gnu::format_arg
Objective-C methods and non-K&R-style functions
gnu_inline
gnu::gnu_inline
guarded_var
clang::guarded_var
managed
__managed__
gnu::hot
ibaction
clang::ibaction
Objective-C instance methods
iboutlet
clang::iboutlet
clang::iboutletcollection
Interface
ifunc
gnu::ifunc
Resolver
init_priority
gnu::init_priority
intel_ocl_bicc
clang::intel_ocl_bicc
internal_linkage
clang::internal_linkage
lto_visibility_public
clang::lto_visibility_public
layout_version
leaf
gnu::leaf
lifetimebound
clang::lifetimebound
parameters and implicit object parameters
likely
clang::likely
loader_uninitialized
clang::loader_uninitialized
lockable
clang::loop
Option
State
Value
mig_server_routine
clang::mig_server_routine
functions, Objective-C methods, and blocks
ms_abi
gnu::ms_abi
allocator
__single_inheritance
__multiple_inheritance
__virtual_inheritance
__unspecified_inheritance
novtable
gnu::ms_struct
matrix_type
clang::matrix_type
NumRows
NumColumns
may_alias
gnu::may_alias
gnu::micromips
minsize
clang::minsize
min_vector_width
clang::min_vector_width
VectorWidth
gnu::mips16
long_call
gnu::long_call
gnu::far
short_call
gnu::short_call
near
gnu::near
gnu::mode
Mode
variables, enums, typedefs, and non-static data members
musttail
clang::musttail
return statements
ns_consumed
clang::ns_consumed
ns_consumes_self
clang::ns_consumes_self
Objective-C methods
ErrorDomain
ns_returns_autoreleased
clang::ns_returns_autoreleased
ns_returns_not_retained
clang::ns_returns_not_retained
ns_returns_retained
clang::ns_returns_retained
naked
gnu::naked
neon_polyvector_type
clang::neon_polyvector_type
neon_vector_type
clang::neon_vector_type
noalias
no_builtin
clang::no_builtin
BuiltinNames...
nocommon
gnu::nocommon
nodebug
gnu::nodebug
typedefs, functions, function pointers, Objective-C methods, and variables
noderef
clang::noderef
no_destroy
clang::no_destroy
noduplicate
clang::noduplicate
noescape
clang::noescape
noinline
gnu::noinline
no_instrument_function
gnu::no_instrument_function
nomerge
clang::nomerge
functions and statements
nomicromips
gnu::nomicromips
nomips16
gnu::nomips16
no_profile_instrument_function
gnu::no_profile_instrument_function
gnu::noreturn
no_sanitize
clang::no_sanitize
Sanitizers...
no_address_safety_analysis
gnu::no_address_safety_analysis
no_sanitize_address
gnu::no_sanitize_address
no_sanitize_thread
gnu::no_sanitize_thread
no_sanitize_memory
clang::no_sanitize_memory
no_speculative_load_hardening
clang::no_speculative_load_hardening
no_split_stack
gnu::no_split_stack
no_stack_protector
clang::no_stack_protector
no_thread_safety_analysis
clang::no_thread_safety_analysis
nothrow
gnu::nothrow
no_unique_address
non-bit-field non-static data members
gnu::nonnull
functions, methods, and parameters
not_tail_called
clang::not_tail_called
os_consumed
clang::os_consumed
os_consumes_this
clang::os_consumes_this
non-static member functions
os_returns_not_retained
clang::os_returns_not_retained
functions, Objective-C methods, Objective-C properties, and parameters
os_returns_retained
clang::os_returns_retained
os_returns_retained_on_non_zero
clang::os_returns_retained_on_non_zero
os_returns_retained_on_zero
clang::os_returns_retained_on_zero
objc_boxable
clang::objc_boxable
clang::objc_bridge
BridgedType
clang::objc_bridge_mutable
clang::objc_bridge_related
RelatedClass
ClassMethod
InstanceMethod
objc_class_stub
clang::objc_class_stub
objc_complete_definition
objc_designated_initializer
clang::objc_designated_initializer
objc_direct
clang::objc_direct
objc_direct_members
clang::objc_direct_members
Objective-C implementation declarations, Objective-C interfaces, and Objective-C containers
objc_exception
clang::objc_exception
objc_protocol_requires_explicit_implementation
clang::objc_protocol_requires_explicit_implementation
Objective-C protocols
objc_externally_retained
clang::objc_externally_retained
variables, functions, blocks, and Objective-C methods
clang::objc_gc
Kind
objc_independent_class
clang::objc_independent_class
__kindof
clang::objc_method_family
Family
NSObject
clang::NSObject
objc_nonlazy_class
clang::objc_nonlazy_class
Objective-C interfaces and Objective-C implementation declarations
objc_non_runtime_protocol
clang::objc_non_runtime_protocol
clang::objc_ownership
objc_precise_lifetime
clang::objc_precise_lifetime
objc_requires_property_definitions
clang::objc_requires_property_definitions
objc_requires_super
clang::objc_requires_super
objc_returns_inner_pointer
clang::objc_returns_inner_pointer
Objective-C methods and Objective-C properties
objc_root_class
clang::objc_root_class
objc_runtime_name
clang::objc_runtime_name
MetadataName
Objective-C interfaces and Objective-C protocols
objc_runtime_visible
clang::objc_runtime_visible
objc_subclassing_restricted
clang::objc_subclassing_restricted
objc_suppress_direct
clang::objc_suppress_direct
Objective-C properties
__read_only
read_only
__write_only
write_only
__read_write
read_write
parameters and typedefs
__constant
opencl_constant
clang::opencl_constant
__generic
opencl_generic
clang::opencl_generic
__global
opencl_global
clang::opencl_global
opencl_global_device
clang::opencl_global_device
opencl_global_host
clang::opencl_global_host
intel_reqd_sub_group_size
SubGroupSize
__kernel
__local
opencl_local
clang::opencl_local
nosvm
__private
opencl_private
clang::opencl_private
opencl_unroll_hint
UnrollHint
'for', 'while', and 'do' statements
optnone
clang::optnone
overloadable
clang::overloadable
gsl::Owner
DerefType
clang::ownership_holds
clang::ownership_returns
clang::ownership_takes
Module
gnu::packed
clang::param_typestate
ParamState
pascal
clang::pascal
__pascal
_pascal
pass_object_size
clang::pass_object_size
pass_dynamic_object_size
clang::pass_dynamic_object_size
patchable_function_entry
gnu::patchable_function_entry
Count
gnu::pcs
gsl::Pointer
__ptrauth
__ptrauth_restricted_intptr
AddressDiscriminated
ExtraDiscriminator
AuthenticationMode
ptrauth_struct
clang::ptrauth_struct
Discriminator
clang::preferred_name
TypedefType
class templates
preserve_all
clang::preserve_all
preserve_most
clang::preserve_most
pt_guarded_var
clang::pt_guarded_var
__ptr32
__ptr64
pure
gnu::pure
gnu::regcall
__regcall
regparm
gnu::regparm
NumParams
reinitializes
clang::reinitializes
non-static non-const member functions
clang::release_capability
clang::release_shared_capability
clang::release_generic_capability
clang::unlock_function
release_handle
clang::release_handle
reqd_work_group_size
XDim
YDim
ZDim
clang::requires_capability
clang::exclusive_locks_required
clang::requires_shared_capability
clang::shared_locks_required
malloc
gnu::malloc
gnu::retain
variables with non-local storage, functions, and Objective-C methods
clang::return_typestate
functions and parameters
returns_nonnull
gnu::returns_nonnull
returns_twice
gnu::returns_twice
__sptr
sycl_kernel
clang::sycl_kernel
function templates
scoped_lockable
clang::scoped_lockable
section
gnu::section
allocate
functions, global variables, Objective-C methods, and Objective-C properties
selectany
gnu::selectany
sentinel
gnu::sentinel
Sentinel
NullPos
clang::set_typestate
NewState
speculative_load_hardening
clang::speculative_load_hardening
standalone_debug
clang::standalone_debug
gnu::stdcall
__stdcall
_stdcall
gsl::suppress
clang::swift_async
CompletionHandlerIndex
swiftasynccall
clang::swiftasynccall
swift_async_context
clang::swift_async_context
clang::swift_async_error
Convention
HandlerParamIdx
swift_async_name
swift_attr
Attribute
swift_bridge
SwiftType
tag types, typedefs, Objective-C interfaces, and Objective-C protocols
swift_bridged_typedef
swiftcall
clang::swiftcall
swift_context
clang::swift_context
swift_error_result
clang::swift_error_result
swift_indirect_result
clang::swift_indirect_result
swift_name
NewtypeKind
swift_objc_members
swift_private
symbol_metadata_footnote
clang::symbol_metadata_footnote
Section
Metadata
functions, Objective-C methods, Objective-C interfaces, and Objective-C properties
sysv_abi
gnu::sysv_abi
tls_model
gnu::tls_model
Model
thread-local variables
gnu::target
featuresStr
clang::test_typestate
TestState
thiscall
gnu::thiscall
__thiscall
_thiscall
transparent_union
gnu::transparent_union
trivial_abi
clang::trivial_abi
clang::try_acquire_capability
clang::try_acquire_shared_capability
_Nullable_result
clang::type_tag_for_datatype
MatchingCType
LayoutCompatible
MustBeNull
clang::type_visibility
Visibility
clang::typed_memory_operation
ImplementationFunction
__uptr
clang::unavailable
clang::uninitialized
unlikely
clang::unlikely
gnu::unused
variables, non-static data members, types, enums, enumerators, labels, non-static data members, Objective-C methods, functions, and function pointers
use_handle
clang::use_handle
used
gnu::used
using_if_exists
clang::using_if_exists
named declarations, types, and value declarations
Guid
structs, unions, classes, and enums
clang::ptrauth_vtable_pointer
AddressDiscrimination
ExtraDiscrimination
CustomDiscriminationValue
vecreturn
clang::vecreturn
TypeHint
clang::vectorcall
__vectorcall
_vectorcall
vector_size
gnu::vector_size
NumBytes
gnu::visibility
warn_unused
gnu::warn_unused
clang::warn_unused_result
warn_unused_result
gnu::warn_unused_result
Objective-C methods, enums, structs, unions, classes, functions, and function pointers
gnu::weak
weak_import
clang::weak_import
weakref
gnu::weakref
variables and functions
export_name
clang::export_name
ExportName
import_module
clang::import_module
ImportModule
import_name
clang::import_name
ImportName
work_group_size_hint
force_align_arg_pointer
gnu::force_align_arg_pointer
xray_always_instrument
clang::xray_always_instrument
xray_never_instrument
clang::xray_never_instrument
xray_log_args
clang::xray_log_args
ArgumentCount
clang::xnu_usage_semantics
Semantics...
auto:
:auto
__va_list_tag
__int128_t
__uint128_t
Class
Protocol
__NSConstantString
type_info
size_t
sampler_t
event_t
clk_event_t
queue_t
reserve_id_t
atomic_int
atomic_uint
atomic_float
atomic_flag
atomic_half
atomic_double
atomic_long
atomic_ulong
intel_sub_group_avc_mce_payload_t
intel_sub_group_avc_ime_payload_t
intel_sub_group_avc_ref_payload_t
intel_sub_group_avc_sic_payload_t
intel_sub_group_avc_mce_result_t
intel_sub_group_avc_ime_result_t
intel_sub_group_avc_ref_result_t
intel_sub_group_avc_sic_result_t
intel_sub_group_avc_ime_result_single_reference_streamout_t
intel_sub_group_avc_ime_result_dual_reference_streamout_t
intel_sub_group_avc_ime_single_reference_streamin_t
intel_sub_group_avc_ime_dual_reference_streamin_t
__SVInt8_t
__SVInt16_t
__SVInt32_t
__SVInt64_t
__SVUint8_t
__SVUint16_t
__SVUint32_t
__SVUint64_t
__SVFloat16_t
__SVFloat32_t
__SVFloat64_t
__SVBFloat16_t
__clang_svint8x2_t
__clang_svint16x2_t
__clang_svint32x2_t
__clang_svint64x2_t
__clang_svuint8x2_t
__clang_svuint16x2_t
__clang_svuint32x2_t
__clang_svuint64x2_t
__clang_svfloat16x2_t
__clang_svfloat32x2_t
__clang_svfloat64x2_t
__clang_svbfloat16x2_t
__clang_svint8x3_t
__clang_svint16x3_t
__clang_svint32x3_t
__clang_svint64x3_t
__clang_svuint8x3_t
__clang_svuint16x3_t
__clang_svuint32x3_t
__clang_svuint64x3_t
__clang_svfloat16x3_t
__clang_svfloat32x3_t
__clang_svfloat64x3_t
__clang_svbfloat16x3_t
__clang_svint8x4_t
__clang_svint16x4_t
__clang_svint32x4_t
__clang_svint64x4_t
__clang_svuint8x4_t
__clang_svuint16x4_t
__clang_svuint32x4_t
__clang_svuint64x4_t
__clang_svfloat16x4_t
__clang_svfloat32x4_t
__clang_svfloat64x4_t
__clang_svbfloat16x4_t
__SVBool_t
__vector_quad
__vector_pair
__rvv_int8mf8_t
__rvv_int8mf4_t
__rvv_int8mf2_t
__rvv_int8m1_t
__rvv_int8m2_t
__rvv_int8m4_t
__rvv_int8m8_t
__rvv_uint8mf8_t
__rvv_uint8mf4_t
__rvv_uint8mf2_t
__rvv_uint8m1_t
__rvv_uint8m2_t
__rvv_uint8m4_t
__rvv_uint8m8_t
__rvv_int16mf4_t
__rvv_int16mf2_t
__rvv_int16m1_t
__rvv_int16m2_t
__rvv_int16m4_t
__rvv_int16m8_t
__rvv_uint16mf4_t
__rvv_uint16mf2_t
__rvv_uint16m1_t
__rvv_uint16m2_t
__rvv_uint16m4_t
__rvv_uint16m8_t
__rvv_int32mf2_t
__rvv_int32m1_t
__rvv_int32m2_t
__rvv_int32m4_t
__rvv_int32m8_t
__rvv_uint32mf2_t
__rvv_uint32m1_t
__rvv_uint32m2_t
__rvv_uint32m4_t
__rvv_uint32m8_t
__rvv_int64m1_t
__rvv_int64m2_t
__rvv_int64m4_t
__rvv_int64m8_t
__rvv_uint64m1_t
__rvv_uint64m2_t
__rvv_uint64m4_t
__rvv_uint64m8_t
__rvv_float16mf4_t
__rvv_float16mf2_t
__rvv_float16m1_t
__rvv_float16m2_t
__rvv_float16m4_t
__rvv_float16m8_t
__rvv_float32mf2_t
__rvv_float32m1_t
__rvv_float32m2_t
__rvv_float32m4_t
__rvv_float32m8_t
__rvv_float64m1_t
__rvv_float64m2_t
__rvv_float64m4_t
__rvv_float64m8_t
__rvv_bool1_t
__rvv_bool2_t
__rvv_bool4_t
__rvv_bool8_t
__rvv_bool16_t
__rvv_bool32_t
__rvv_bool64_t
__builtin_ms_va_list
__builtin_va_list
*** Semantic Analysis Stats:
 SFINAE diagnostics trapped.
nullptr
'weak'
///<
/**<
super
bool
atomic_size_t
atomic_intptr_t
atomic_uintptr_t
atomic_ptrdiff_t
<scratch space>
expression
array
basic_string
deque
forward_list
list
multiset
multimap
priority_queue
queue
stack
unordered_set
unordered_map
unordered_multiset
unordered_multimap
const_iterator
reverse_iterator
const_reverse_iterator
basic_regex
unique_ptr
basic_string_view
reference_wrapper
regex_iterator
stack empty
vtordisp
, and 
<API Notes>
_app_extension
load
API_AVAILABLE
API_AVAILABLE(
z/OS
init
if (
@available
__builtin_available
, *)) {
} else {
// Fallback on earlier versions
vector element
matrix element
property expression
container subscripting expression
    
structure pointer
'int (*)(const char *, ...)'
__builtin_return_address
__builtin_frame_address
extdiv
bpermd
isa-v30-instructions
power9-vector
isa-v207-instructions
isa-v206-instructions
W256SLiW256C*
vW256SLiW256C*
vW256*VV
vv*W256*
vW512*VVVV
vv*W512*
vW512*
vW512*VV
vW512*W256V
vW512*VVi15i15i255
vW512*VVi15i15i15
vW512*VVi15i15i3
vW512*VVi15i15
vW512*W256Vi15i3
64bit
RV64
'this'
_Float16
half
first
second
spsel
daifset
daifclr
paired-vector-memops
"%s", 
@"%@", 
c_str
std::abs
(void*)
sizeof(
) - 
strlen(
) - 1
'super'
release
taggedRelease
column
'kernel_enqueue_flags_t' (i.e. uint)
ndrange_t
'ndrange_t'
 ? YES : NO
localizedStringForKey
table
%02x
%08x
unichar
NSUInteger
c_str()
.c_str()
cstdlib
cmath
(size_t)(
'std::strong_ordering::equal'
'std::strong_ordering::less'
'std::strong_ordering::greater'
, ...
 override
final
operator
override
else if
condition
new[]
delete[]
co_await
method
selector
sender
statements
ifdef
macro
ifndef
elif
elifdef
elifndef
endif
header
args
undef
number
filename
pragma
include_next
defined
ApplicationExtension
operator+
operator-
operator*
operator/
operator%
operator^
operator&
operator|
operator~
operator!
operator=
operator<
operator>
operator+=
operator-=
operator*=
operator/=
operator%=
operator^=
operator&=
operator|=
operator<<
operator>>
operator<<=
operator>>=
operator==
operator!=
operator<=
operator>=
operator<=>
operator&&
operator||
operator++
operator--
operator,
operator->*
operator->
operatorco_await
operator new
operator delete
operator new[]
operator delete[]
operator()
operator[]
template<...> class
 volatile
 restrict
(...)
(void)
inout 
out 
bycopy 
byref 
oneway 
nonnull 
nullable 
null_unspecified 
, nil
, NULL
, (void*)0
identifier
declarations
using namespace
string-literal
declaration
using
qualifier
using typename
catch
cases
init-statement
init-expression
inc-expression
range-declaration
range-expression
return true
return false
return nullptr
label
__bridge
__bridge_transfer
Objective-C type
CF type
std::type_info
typeid
expression-or-type
expressions
size
void
std::nullptr_t
alignof
sizeof...
parameter-pack
_Alignof
sizeof
static_assert
constexpr
thread_local
explicit
friend
mutable
inline
__PRETTY_FUNCTION__
__FUNCTION__
__func__
!#!NAME_GOES_HERE!#!
parameter
body
__unaligned
long
signed
unsigned
float
double
_Complex
_Imaginary
wchar_t
__auto_type
typeof
@end
synthesize
@required
required
@optional
protocol
@implementation
implementation
compatibility_alias
@import
@private
@protected
@public
@package
@try
@catch
@finally
@throw
synchronized
char[]
const char[]
encode
type-name
Protocol *
protocol-name
NSString *
NSArray *
objects, ...
NSDictionary *
object, ...
autorelease
mutableCopy
alloc
struct <anonymous>
__interface <anonymous>
class <anonymous>
union <anonymous>
enum <anonymous>
BOOL
NSMutableArray
NSArray
NSMutableSet
NSSet
countOf
objectIn
AtIndex
index
AtIndexes
NSIndexSet *
indexes
object-type
buffer
range:
NSRange
inRange
insertObject
insertObject:
object
insert
atIndexes
atIndexes:
removeObjectFrom
replaceObjectIn
withObject
withObject:
replace
with
enumeratorOf
NSEnumerator *
memberOf
Object
NSSet *
objects
intersect
keyPathsForValuesAffecting
NSSet<NSString *> *
automaticallyNotifiesObserversOf
.inc
__promise
initial_suspend
final_suspend
co_await
await_transform
co_yield
yield_value
co_return
return_value
return_void
get_return_object_on_allocation_failure
unhandled_exception
get_return_object
__coro_gro
coroutine_traits
std::experimental::coroutine_traits
promise_type
await_ready
await_suspend
await_resume
from_address
coroutine_handle
std::experimental::coroutine_handle
__hipPushCallConfiguration
hipConfigureCall
__cudaPushCallConfiguration
cudaConfigureCall
typename 
'ns_returns_retained'
static 
global or constant
printf
constexpr 
  int 
ntohl
htonl
is_path_xcrun_shim
qsort
os_variant_has_internal_diagnostic
os_variant_has_internal_diagnostics
_NSGetExecutablePath
fdatasync
H5T_patch_vlen_file
CGSSetDebugOptions
CGSGetDebugOptions
CGSCreateShadowCacheDebugInfo
thread_stack_pcs
inaddr6_any
inaddr6_loopback
AXAuditIsQueue
NSString
scanf
bad_alloc
align_val_t
stdio.h
setjmp.h
ucontext.h
[[clang::require_constant_initialization]]
__attribute__((require_constant_initialization))
intptr_t
uintptr_t
ptrdiff_t
fpmath=
arch=
tune=
self->
branch-protection
'minsize'
aapcs-vfp
'ns_returns_retained'
'dllimport'
pointer
self
'interrupt'
'signal'
'export_name'
<no message provided>
a CFString
an NSString
a string type
printf0
strfmon
cmn_err
vcmn_err
zcmn_err
kprintf
freebsd_kprintf
os_trace
os_log
gcc_diag
gcc_cdiag
gcc_cxxdiag
gcc_tdiag
__CFString
NSAttributedString
NSMutableString
string type
functions, classes, or enumerations
__declspec(thread)
mutex
zero_argument
nonzero_argument
tmo_malloc
tmo_calloc
tmo_realloc
tmo_aligned_alloc
tmo_posix_memalign
sealed
 sealed
 final
const &
 const &
_Noreturn
__restrict
experimental
initializer_list
using 
auto &
constexpr auto 
'const char *'
tuple_size
tuple_element
__builtin_objc_memmove_collectable
__builtin_memcpy
 : NSObject 
(id)
category
__covariant
__contravariant
forwardInvocation
NSProxy
length
macOS 10.11
iOS 9
__debug
throw()
throw(
noexcept(
__attribute__((nothrow))
static 
NULL
(void*) 0
object_getClass
object_getClass(
__builtin_trap
this->
(void *)0
static_cast<void>(
(void)(
object_setClass
object_setClass(
BOOL
(vector of 
' values)
 isEqual:
isEqual
performSelector
1 << 
1LL << 
0x2 ^ 
0xA ^ 
__real
__imag
operator""
'size_t'
default new
default delete
__builtin_operator_delete
__builtin_operator_new
expr-type
, this
even
NSConstantString
stringWithUTF8String
valueWithBytes
objCType
bytes
integral
keys
NSCopying
respondsToSelector
CFBridgingRelease
CFBridgingRelease 
__bridge_transfer 
CFBridgingRetain
__bridge 
CFBridgingRetain 
__bridge_retained 
 = {}
'\0'
L'\0'
u'\0'
U'\0'
Filter Mode
Addressing Mode
rbegin
cbegin
crbegin
rend
cend
crend
c_str
find
equal_range
lower_bound
upper_bound
back
static_cast<
'this'
__invoke
lookup results for 
        
[...]
__make_integer_seq
__type_pack_element
atomic_flag_test_and_set_explicit
tomic_compare_exchange_weak_explicit
ub_group_clustered_reduce_logical_or
sub_group_clustered_reduce_logical_
tomic_compare_exchange_strong_explicit
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_add __opencl_c_ext_fp16_global_atomic_add
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_load_store __opencl_c_ext_fp16_local_atomic_load_store
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_min_max __opencl_c_ext_fp16_global_atomic_min_max
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_add
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_load_store
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_min_max
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_add
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_load_store
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_min_max
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_add __opencl_c_ext_fp32_global_atomic_add
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_min_max __opencl_c_ext_fp32_global_atomic_min_max
cl_ext_float_atomics __opencl_c_ext_fp32_global_atomic_add
cl_ext_float_atomics __opencl_c_ext_fp32_global_atomic_min_max
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_add
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_min_max
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_add __opencl_c_ext_fp64_global_atomic_add
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_min_max __opencl_c_ext_fp64_global_atomic_min_max
cl_ext_float_atomics __opencl_c_ext_fp64_global_atomic_add
cl_ext_float_atomics __opencl_c_ext_fp64_global_atomic_min_max
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_add
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_min_max
cl_khr_extended_bit_ops
cl_khr_mipmap_image_writes cl_khr_3d_image_writes
cl_khr_subgroup_ballot
cl_khr_subgroup_clustered_reduce
cl_khr_subgroup_extended_types
cl_khr_subgroup_non_uniform_arithmetic
cl_khr_subgroup_non_uniform_vote
cl_khr_subgroup_shuffle
cl_khr_subgroup_shuffle_relative
__opencl_c_work_group_collective_functions
__opencl_c_integer_dot_product_input_4x8bit
__opencl_c_integer_dot_product_input_4x8bit_packed
clk_profiling_info
cl_mem_fence_flags
memory_order
memory_scope
objc_super
export 
module;
retain (or strong)
@synthesize 
nonatomic, 
(nonatomic) 
__attribute__((objc_method_family(none)))
requires
.global_tid.
.bound_tid.
.part_id.
.privates.
.copy_fn.
.task_t.
.lb.
.ub.
.st.
.liter.
.reductions.
.previous.lb.
.previous.ub.
omp_interop_t
scan
ordered
'map' or 'use_device_ptr'
'map', 'use_device_ptr', or 'use_device_addr'
'map'
.floor_
.iv.
.tile_
#pragma omp unroll full
.unrolled.iv.
.unroll_inner.iv.
.unroll_inner.tripcount.
schedule
'init', 'use', 'destroy', or 'nowait'
.firstprivate.temp
.lastprivate.src
.lastprivate.dst
.linear.start
.linear.step
.copyin.src
.copyin.dst
threadprivate or private in the enclosing context
.copyprivate.src
.copyprivate.dst
'source' or 'sink'
depend modifier(iterator) or 
omp_in
omp_out
omp_priv
omp_orig
omp_event_handle_t
dist_schedule
'scalar', 'aggregate', 'pointer'
'alloc', 'from', 'to', 'tofrom', 'firstprivate', 'none', 'default'
'alloc', 'from', 'to', 'tofrom', 'firstprivate', 'none', 'default', 'present'
.devptr.temp
omp_allocator_handle_t
Distance
.start
.stop
.step
LoopVar
Logical
 or 
$ompvariant
.omp.lb
.omp.ub
.omp.is_last
.omp.stride
.omp.comb.lb
.omp.comb.ub
.omp.iv
.capture_expr.
.reduction.lhs
.task_red.
omp_depend_t
omp_alloctrait_t
'enable_if'
objectForKeyedSubscript
objectAtIndexedSubscript
setObject
forKeyedSubscript
atIndexedSubscript
UNREFERENCED_PARAMETER
break
continue
countByEnumeratingWithState
count
__range
__begin
__end
literal
@try
'__try'
@throw
'try'
'@try'
__context
default captured statement
Objective-C @finally statement
OpenMP region
unwind
__MSASMLABEL_.${:uid}__
template 
valarray
[with 
template<> 
(anonymous)
instantiating class definition
instantiating enum definition
instantiating default member init
cannot instantiate %0 yet
instantiating function definition
instantiating variable initializer
instantiating variable definition
matrix
matrix row
matrix column
_Nonnull
_Nullable
_Nullable_result
_Null_unspecified
NSError
_ExtInt
__bf16
cl_khr_fp64 and __opencl_c_fp64
__float128
__ibm128
cl_khr_3d_image_writes and __opencl_c_3d_image_writes
__kindof 
autoreleasing
'neon' or 'mve'
'sve'
isa-pointer
authenticates-null-values
'__ptr32'
'__ptr64'
'__sptr'
'__uptr'
'static'
type qualifier
 varname
'address_space'
Loading API notes from 
_private
APINotes
_private.
APINotes.
IDENTIFIER_BLOCK
OBJC_CONTEXT_BLOCK
OBJC_CONTEXT_ID_DATA
OBJC_PROPERTY_BLOCK
OBJC_PROPERTY_DATA
OBJC_METHOD_BLOCK
OBJC_METHOD_DATA
OBJC_SELECTOR_BLOCK
OBJC_SELECTOR_DATA
GLOBAL_VARIABLE_BLOCK
GLOBAL_VARIABLE_DATA
GLOBAL_FUNCTION_BLOCK
GLOBAL_FUNCTION_DATA
Availability
AvailabilityMsg
SwiftInferImportAsMember
SwiftVersions
TVOS
nonswift
available
Classes
Protocols
Functions
Globals
Enumerators
Tags
Typedefs
AuditedForNullability
SwiftPrivate
SwiftName
SwiftBridge
NSErrorDomain
SwiftImportAsNonGeneric
SwiftObjCMembers
Methods
Properties
Selector
MethodKind
Parameters
Nullability
NullabilityOfRet
RetainCountConvention
FactoryAsInit
DesignatedInit
Required
SuppressDirect
ResultType
Instance
Position
NoEscape
Nonnull
Optional
Unspecified
NullableResult
Scalar
CFReturnsRetained
CFReturnsNotRetained
NSReturnsRetained
NSReturnsNotRetained
PropertyKind
SwiftImportAsAccessors
EnumExtensibility
FlagEnum
EnumKind
open
closed
CFEnum
NSEnum
CFOptions
NSOptions
CFClosedEnum
NSClosedEnum
SwiftWrapper
multiple definitions of class '
multiple definitions of protocol '
multiple definitions of global variable '
multiple definitions of global function '
multiple definitions of enumerator '
multiple definitions Of tag '
cannot mix EnumKind and EnumExtensibility (for 
cannot mix EnumKind and FlagEnum (for 
multiple definitions of typedef '
duplicate definition of method '
duplicate definition of instance property '
duplicate definition of class property '
selector 
is missing a ':' at the end
'FactoryAsInit' is no longer valid; use 'SwiftName' instead
availability message for available API '
' will not be used
nullability info for 
 does not fit
  <#code#>
<#code#>
break;
call_once
dispatch_sync
dispatch_once
libcxx03 std::call_once implementation, skipping.
unknown std::call_once implementation, skipping.
__state_
_M_once
completionHandler
completion
withCompletionHandler
withCompletion
completionBlock
withCompletionBlock
replyTo
reply
withReplyTo
WithCompletionHandler
WithCompletion
WithCompletionBlock
WithReplyTo
WithReply
cancel
shouldCall
done
success
dispatch_async
dispatch_async_and_wait
dispatch_after
dispatch_barrier_async
dispatch_barrier_async_and_wait
dispatch_barrier_sync
 ... 
catch (
__except (
for (
goto *
unconsumed
consumed
raise
NSException
format
arguments
#null
#undefined
#ptr
#vref
#lit
new 
 := 
cast[
extendNum
truncNum
toFloat
toInt
objToPtr
CFG {
 BB_
let 
let _x
phi(
goto 
BB_null
branch (
return 
) then 
 else 
typeid(
void()
<out of lifetime>
<uninitialized>
(char*)
{*new 
 + 1
;{}#@
*** AST Context Stats:
 types total.
Adjusted
 types, 
 each 
 bytes)
Decayed
ConstantArray
DependentSizedArray
IncompleteArray
VariableArray
Atomic
Attributed
BlockPointer
Builtin
Complex
Decltype
Auto
DeducedTemplateSpecialization
DependentAddressSpace
DependentExtInt
DependentName
DependentSizedExtVector
DependentTemplateSpecialization
DependentVector
DynamicCountPointer
DynamicRangePointer
Elaborated
ExtInt
FunctionNoProto
FunctionProto
InjectedClassName
MacroQualified
ConstantMatrix
DependentSizedMatrix
MemberPointer
ObjCObjectPointer
ObjCObject
ObjCInterface
ObjCTypeParam
PackExpansion
Paren
Pipe
LValueReference
RValueReference
SubstTemplateTypeParmPack
SubstTemplateTypeParm
Enum
Record
TemplateSpecialization
TemplateTypeParm
TypeOfExpr
TypeOf
Typedef
UnaryTransform
UnresolvedUsing
ValueTerminated
Vector
ExtVector
Total bytes = 
 implicit default constructors created
 implicit copy constructors created
 implicit move constructors created
 implicit copy assignment operators created
 implicit move assignment operators created
 implicit destructors created
__int128_t
__uint128_t
_GUID
__NSConstantString_tag
_cfisa
_swift_rc
_ptr
objc_super
reserved
instancetype
objc_class
objc_object
{objc_object=}
{objc_class=}
"_vptr$
Class
Protocol
sse2
a prior #pragma section
__make_integer_seq
__type_pack_element
<objc_object>
DF16_
<anonymous_record>
cannot yet @encode type %0
__va_list
__stack
__gr_top
__vr_top
__gr_offs
__vr_offs
overflow_arg_area
reg_save_area
gp_offset
fp_offset
__ap
__gpr
__fpr
__overflow_arg_area
__reg_save_area
__current_saved_reg_area_pointer
__saved_reg_area_end_pointer
__overflow_area_pointer
__builtin_ms_va_list
 address space
address space
unqualified
the global namespace
the global scope
block literal
lambda expression
method 
function 
' (aka '
values
' (vector of 
(no argument)
(default) 
 != 
[(default) 
(default) template 
[(default) template 
[template 
 aka 
(no qualifiers) 
(no qualifiers)
 * ...]
inherited from
previous
 hidden
inner
array_filler
<None>
TemplateArgument
TemplateArgumentLoc
TemplateName
NestedNameSpecifierLoc
QualType
QualifiedTypeLoc
AdjustedTypeLoc
DecayedTypeLoc
ArrayTypeLoc
ConstantArrayTypeLoc
DependentSizedArrayTypeLoc
IncompleteArrayTypeLoc
VariableArrayTypeLoc
AtomicTypeLoc
AttributedTypeLoc
BlockPointerTypeLoc
BuiltinTypeLoc
ComplexTypeLoc
DecltypeTypeLoc
DeducedTypeLoc
AutoTypeLoc
DeducedTemplateSpecializationTypeLoc
DependentAddressSpaceTypeLoc
DependentExtIntTypeLoc
DependentNameTypeLoc
DependentSizedExtVectorTypeLoc
DependentTemplateSpecializationTypeLoc
DependentVectorTypeLoc
DynamicBoundPointerTypeLoc
DynamicCountPointerTypeLoc
DynamicRangePointerTypeLoc
ElaboratedTypeLoc
ExtIntTypeLoc
FunctionTypeLoc
FunctionNoProtoTypeLoc
FunctionProtoTypeLoc
InjectedClassNameTypeLoc
MacroQualifiedTypeLoc
MatrixTypeLoc
ConstantMatrixTypeLoc
DependentSizedMatrixTypeLoc
MemberPointerTypeLoc
ObjCObjectPointerTypeLoc
ObjCObjectTypeLoc
ObjCInterfaceTypeLoc
ObjCTypeParamTypeLoc
PackExpansionTypeLoc
ParenTypeLoc
PipeTypeLoc
PointerTypeLoc
ReferenceTypeLoc
LValueReferenceTypeLoc
RValueReferenceTypeLoc
SubstTemplateTypeParmPackTypeLoc
SubstTemplateTypeParmTypeLoc
TagTypeLoc
EnumTypeLoc
RecordTypeLoc
TemplateSpecializationTypeLoc
TemplateTypeParmTypeLoc
TypeOfExprTypeLoc
TypeOfTypeLoc
TypedefTypeLoc
UnaryTransformTypeLoc
UnresolvedUsingTypeLoc
ValueTerminatedTypeLoc
VectorTypeLoc
ExtVectorTypeLoc
TypeLoc
CXXBaseSpecifier
CXXCtorInitializer
NestedNameSpecifier
Decl
AccessSpecDecl
BlockDecl
CapturedDecl
ClassScopeFunctionSpecializationDecl
EmptyDecl
ExportDecl
ExternCContextDecl
FileScopeAsmDecl
FriendDecl
FriendTemplateDecl
ImportDecl
LifetimeExtendedTemporaryDecl
LinkageSpecDecl
NamedDecl
BaseUsingDecl
UsingDecl
UsingEnumDecl
LabelDecl
NamespaceDecl
NamespaceAliasDecl
ObjCCompatibleAliasDecl
ObjCContainerDecl
ObjCCategoryDecl
ObjCImplDecl
ObjCCategoryImplDecl
ObjCImplementationDecl
ObjCInterfaceDecl
ObjCProtocolDecl
ObjCMethodDecl
ObjCPropertyDecl
TemplateDecl
BuiltinTemplateDecl
ConceptDecl
RedeclarableTemplateDecl
ClassTemplateDecl
FunctionTemplateDecl
TypeAliasTemplateDecl
VarTemplateDecl
TemplateTemplateParmDecl
TypeDecl
TagDecl
EnumDecl
RecordDecl
CXXRecordDecl
ClassTemplateSpecializationDecl
ClassTemplatePartialSpecializationDecl
TemplateTypeParmDecl
TypedefNameDecl
ObjCTypeParamDecl
TypeAliasDecl
TypedefDecl
UnresolvedUsingTypenameDecl
UnresolvedUsingIfExistsDecl
UsingDirectiveDecl
UsingPackDecl
UsingShadowDecl
ConstructorUsingShadowDecl
ValueDecl
BindingDecl
DeclaratorDecl
FieldDecl
ObjCAtDefsFieldDecl
ObjCIvarDecl
FunctionDecl
CXXDeductionGuideDecl
CXXMethodDecl
CXXConstructorDecl
CXXConversionDecl
CXXDestructorDecl
MSPropertyDecl
NonTypeTemplateParmDecl
VarDecl
DecompositionDecl
ImplicitParamDecl
OMPCapturedExprDecl
ParmVarDecl
VarTemplateSpecializationDecl
VarTemplatePartialSpecializationDecl
EnumConstantDecl
IndirectFieldDecl
MSGuidDecl
OMPDeclareMapperDecl
OMPDeclareReductionDecl
TemplateParamObjectDecl
UnresolvedUsingValueDecl
OMPAllocateDecl
OMPRequiresDecl
OMPThreadPrivateDecl
ObjCPropertyImplDecl
PragmaCommentDecl
PragmaDetectMismatchDecl
RequiresExprBodyDecl
StaticAssertDecl
TranslationUnitDecl
Stmt
AsmStmt
GCCAsmStmt
MSAsmStmt
BreakStmt
CXXCatchStmt
CXXForRangeStmt
CXXTryStmt
CapturedStmt
CompoundStmt
ContinueStmt
CoreturnStmt
CoroutineBodyStmt
DeclStmt
DoStmt
ForStmt
GotoStmt
IfStmt
IndirectGotoStmt
MSDependentExistsStmt
NullStmt
OMPCanonicalLoop
OMPExecutableDirective
OMPAtomicDirective
OMPBarrierDirective
OMPCancelDirective
OMPCancellationPointDirective
OMPCriticalDirective
OMPDepobjDirective
OMPDispatchDirective
OMPFlushDirective
OMPInteropDirective
OMPLoopBasedDirective
OMPLoopDirective
OMPDistributeDirective
OMPDistributeParallelForDirective
OMPDistributeParallelForSimdDirective
OMPDistributeSimdDirective
OMPForDirective
OMPForSimdDirective
OMPMasterTaskLoopDirective
OMPMasterTaskLoopSimdDirective
OMPParallelForDirective
OMPParallelForSimdDirective
OMPParallelMasterTaskLoopDirective
OMPParallelMasterTaskLoopSimdDirective
OMPSimdDirective
OMPTargetParallelForSimdDirective
OMPTargetSimdDirective
OMPTargetTeamsDistributeDirective
OMPTargetTeamsDistributeParallelForDirective
OMPTargetTeamsDistributeParallelForSimdDirective
OMPTargetTeamsDistributeSimdDirective
OMPTaskLoopDirective
OMPTaskLoopSimdDirective
OMPTeamsDistributeDirective
OMPTeamsDistributeParallelForDirective
OMPTeamsDistributeParallelForSimdDirective
OMPTeamsDistributeSimdDirective
OMPLoopTransformationDirective
OMPTileDirective
OMPUnrollDirective
OMPMaskedDirective
OMPMasterDirective
OMPMetaDirective
OMPOrderedDirective
OMPParallelDirective
OMPParallelMasterDirective
OMPParallelSectionsDirective
OMPScanDirective
OMPSectionDirective
OMPSectionsDirective
OMPSingleDirective
OMPTargetDataDirective
OMPTargetDirective
OMPTargetEnterDataDirective
OMPTargetExitDataDirective
OMPTargetParallelDirective
OMPTargetParallelForDirective
OMPTargetTeamsDirective
OMPTargetUpdateDirective
OMPTaskDirective
OMPTaskgroupDirective
OMPTaskwaitDirective
OMPTaskyieldDirective
OMPTeamsDirective
ObjCAtCatchStmt
ObjCAtFinallyStmt
ObjCAtSynchronizedStmt
ObjCAtThrowStmt
ObjCAtTryStmt
ObjCAutoreleasePoolStmt
ObjCForCollectionStmt
ReturnStmt
SEHExceptStmt
SEHFinallyStmt
SEHLeaveStmt
SEHTryStmt
SwitchCase
CaseStmt
DefaultStmt
SwitchStmt
ValueStmt
AttributedStmt
Expr
AbstractConditionalOperator
BinaryConditionalOperator
ConditionalOperator
AddrLabelExpr
ArrayInitIndexExpr
ArrayInitLoopExpr
ArraySubscriptExpr
ArrayTypeTraitExpr
AsTypeExpr
AssumptionExpr
AtomicExpr
BinaryOperator
CompoundAssignOperator
BlockExpr
BoundsCheckExpr
CXXBindTemporaryExpr
CXXBoolLiteralExpr
CXXConstructExpr
CXXTemporaryObjectExpr
CXXDefaultArgExpr
CXXDefaultInitExpr
CXXDeleteExpr
CXXDependentScopeMemberExpr
CXXFoldExpr
CXXInheritedCtorInitExpr
CXXNewExpr
CXXNoexceptExpr
CXXNullPtrLiteralExpr
CXXPseudoDestructorExpr
CXXRewrittenBinaryOperator
CXXScalarValueInitExpr
CXXStdInitializerListExpr
CXXThisExpr
CXXThrowExpr
CXXTypeidExpr
CXXUnresolvedConstructExpr
CXXUuidofExpr
CallExpr
CUDAKernelCallExpr
CXXMemberCallExpr
CXXOperatorCallExpr
UserDefinedLiteral
CastExpr
ExplicitCastExpr
BuiltinBitCastExpr
CStyleCastExpr
CXXFunctionalCastExpr
CXXNamedCastExpr
CXXAddrspaceCastExpr
CXXConstCastExpr
CXXDynamicCastExpr
CXXReinterpretCastExpr
CXXStaticCastExpr
ObjCBridgedCastExpr
ImplicitCastExpr
CharacterLiteral
ChooseExpr
CompoundLiteralExpr
ConceptSpecializationExpr
ConvertVectorExpr
CoroutineSuspendExpr
CoawaitExpr
CoyieldExpr
DeclRefExpr
DependentCoawaitExpr
DependentScopeDeclRefExpr
DesignatedInitExpr
DesignatedInitUpdateExpr
ExpressionTraitExpr
ExtVectorElementExpr
FirebloomPointerPromotionExpr
FixedPointLiteral
FloatingLiteral
ForgePtrExpr
FullExpr
ConstantExpr
ExprWithCleanups
FunctionParmPackExpr
GNUNullExpr
GenericSelectionExpr
GetBoundExpr
ImaginaryLiteral
ImplicitValueInitExpr
InitListExpr
IntegerLiteral
LambdaExpr
MSPropertyRefExpr
MSPropertySubscriptExpr
MaterializeSequenceExpr
MaterializeTemporaryExpr
MatrixSubscriptExpr
MemberExpr
NoInitExpr
OMPArraySectionExpr
OMPArrayShapingExpr
OMPIteratorExpr
ObjCAvailabilityCheckExpr
ObjCBoolLiteralExpr
ObjCEncodeExpr
ObjCIndirectCopyRestoreExpr
ObjCIsaExpr
ObjCIvarRefExpr
ObjCMessageExpr
ObjCObjectLiteral
ObjCArrayLiteral
ObjCBoxedExpr
ObjCDictionaryLiteral
ObjCStringLiteral
ObjCPropertyRefExpr
ObjCProtocolExpr
ObjCSelectorExpr
ObjCSubscriptRefExpr
OffsetOfExpr
OpaqueValueExpr
OverloadExpr
UnresolvedLookupExpr
UnresolvedMemberExpr
PackExpansionExpr
ParenExpr
ParenListExpr
PredefinedExpr
PseudoObjectExpr
RecoveryExpr
RequiresExpr
SYCLUniqueStableNameExpr
ShuffleVectorExpr
SizeOfPackExpr
SourceLocExpr
StmtExpr
StringLiteral
SubstNonTypeTemplateParmExpr
SubstNonTypeTemplateParmPackExpr
TerminatedByFromIndexableExpr
TerminatedByToIndexableExpr
TypeTraitExpr
TypoExpr
UnaryExprOrTypeTraitExpr
UnaryOperator
VAArgExpr
LabelStmt
WhileStmt
Type
AdjustedType
DecayedType
ArrayType
ConstantArrayType
DependentSizedArrayType
IncompleteArrayType
VariableArrayType
AtomicType
AttributedType
BlockPointerType
BuiltinType
ComplexType
DecltypeType
DeducedType
AutoType
DeducedTemplateSpecializationType
DependentAddressSpaceType
DependentExtIntType
DependentNameType
DependentSizedExtVectorType
DependentTemplateSpecializationType
DependentVectorType
DynamicBoundPointerType
DynamicCountPointerType
DynamicRangePointerType
ElaboratedType
ExtIntType
FunctionType
FunctionNoProtoType
FunctionProtoType
InjectedClassNameType
MacroQualifiedType
MatrixType
ConstantMatrixType
DependentSizedMatrixType
MemberPointerType
ObjCObjectPointerType
ObjCObjectType
ObjCInterfaceType
ObjCTypeParamType
PackExpansionType
ParenType
PipeType
PointerType
ReferenceType
LValueReferenceType
RValueReferenceType
SubstTemplateTypeParmPackType
SubstTemplateTypeParmType
TagType
EnumType
RecordType
TemplateSpecializationType
TemplateTypeParmType
TypeOfExprType
TypeOfType
TypedefType
UnaryTransformType
UnresolvedUsingType
ValueTerminatedType
VectorType
ExtVectorType
OMPClause
OMPAcqRelClause
OMPAcquireClause
OMPAffinityClause
OMPAlignedClause
OMPAllocateClause
OMPAllocatorClause
OMPAtomicDefaultMemOrderClause
OMPCaptureClause
OMPCollapseClause
OMPCopyprivateClause
OMPCopyinClause
OMPDefaultClause
OMPDefaultmapClause
OMPDependClause
OMPDepobjClause
OMPDestroyClause
OMPDetachClause
OMPDeviceClause
OMPDistScheduleClause
OMPDynamicAllocatorsClause
OMPExclusiveClause
OMPFilterClause
OMPFinalClause
OMPFirstprivateClause
OMPFlushClause
OMPFromClause
OMPFullClause
OMPGrainsizeClause
OMPHintClause
OMPIfClause
OMPInReductionClause
OMPInclusiveClause
OMPInitClause
OMPIsDevicePtrClause
OMPLastprivateClause
OMPLinearClause
OMPMapClause
OMPMergeableClause
OMPNogroupClause
OMPNowaitClause
OMPNocontextClause
OMPNontemporalClause
OMPNovariantsClause
OMPNumTasksClause
OMPNumTeamsClause
OMPNumThreadsClause
OMPOrderClause
OMPOrderedClause
OMPPartialClause
OMPPriorityClause
OMPPrivateClause
OMPProcBindClause
OMPReadClause
OMPReductionClause
OMPRelaxedClause
OMPReleaseClause
OMPReverseOffloadClause
OMPSafelenClause
OMPScheduleClause
OMPSeqCstClause
OMPSharedClause
OMPSIMDClause
OMPSimdlenClause
OMPSizesClause
OMPTaskReductionClause
OMPThreadLimitClause
OMPThreadsClause
OMPToClause
OMPUnifiedAddressClause
OMPUnifiedSharedMemoryClause
OMPUntiedClause
OMPUpdateClause
OMPUseClause
OMPUseDeviceAddrClause
OMPUseDevicePtrClause
OMPUsesAllocatorsClause
OMPWriteClause
Attr
AddressSpaceAttr
ArmMveStrictPolymorphismAttr
CmseNSCallAttr
NoDerefAttr
ObjCGCAttr
ObjCInertUnsafeUnretainedAttr
ObjCKindOfAttr
OpenCLConstantAddressSpaceAttr
OpenCLGenericAddressSpaceAttr
OpenCLGlobalAddressSpaceAttr
OpenCLGlobalDeviceAddressSpaceAttr
OpenCLGlobalHostAddressSpaceAttr
OpenCLLocalAddressSpaceAttr
OpenCLPrivateAddressSpaceAttr
PointerAuthAttr
Ptr32Attr
Ptr64Attr
PtrAutoAttrAttr
PtrAutoNullTerminatedAttrAttr
SPtrAttr
TypeNonNullAttr
TypeNullUnspecifiedAttr
TypeNullableAttr
TypeNullableResultAttr
UPtrAttr
XnuUsageSemanticsAttr
FallThroughAttr
LikelyAttr
MustTailAttr
OpenCLUnrollHintAttr
SuppressAttr
UnlikelyAttr
AnalyzerSuppressAttr
NoMergeAttr
AArch64VectorPcsAttr
AcquireHandleAttr
AnyX86NoCfCheckAttr
CDeclAttr
FastCallAttr
IntelOclBiccAttr
LifetimeBoundAttr
MSABIAttr
NSReturnsRetainedAttr
ObjCOwnershipAttr
PascalAttr
PcsAttr
PreserveAllAttr
PreserveMostAttr
RegCallAttr
StdCallAttr
SwiftAsyncCallAttr
SwiftCallAttr
SysVABIAttr
ThisCallAttr
VectorCallAttr
SwiftAsyncContextAttr
SwiftContextAttr
SwiftErrorResultAttr
SwiftIndirectResultAttr
AnnotateAttr
CFConsumedAttr
CarriesDependencyAttr
NSConsumedAttr
NonNullAttr
OSConsumedAttr
PassObjectSizeAttr
ReleaseHandleAttr
UseHandleAttr
AMDGPUFlatWorkGroupSizeAttr
AMDGPUNumSGPRAttr
AMDGPUNumVGPRAttr
AMDGPUWavesPerEUAttr
ARMInterruptAttr
AVRInterruptAttr
AVRSignalAttr
AcquireCapabilityAttr
AcquiredAfterAttr
AcquiredBeforeAttr
AlignMac68kAttr
AlignNaturalAttr
AlignedAttr
AllocAlignAttr
AllocSizeAttr
AlwaysDestroyAttr
AlwaysInlineAttr
AnalyzerNoReturnAttr
AnyX86InterruptAttr
AnyX86NoCallerSavedRegistersAttr
ArcWeakrefUnavailableAttr
ArgumentWithTypeTagAttr
ArmBuiltinAliasAttr
ArtificialAttr
AsmLabelAttr
AssertCapabilityAttr
AssertExclusiveLockAttr
AssertSharedLockAttr
AssumeAlignedAttr
AssumptionAttr
AvailabilityAttr
BPFPreserveAccessIndexAttr
BTFDeclTagAttr
BlocksAttr
BuiltinAttr
C11NoReturnAttr
CFAuditedTransferAttr
CFGuardAttr
CFICanonicalJumpTableAttr
CFReturnsNotRetainedAttr
CFReturnsRetainedAttr
CFUnknownTransferAttr
CPUDispatchAttr
CPUSpecificAttr
CUDAConstantAttr
CUDADeviceAttr
CUDADeviceBuiltinSurfaceTypeAttr
CUDADeviceBuiltinTextureTypeAttr
CUDAGlobalAttr
CUDAHostAttr
CUDAInvalidTargetAttr
CUDALaunchBoundsAttr
CUDASharedAttr
CXX11NoReturnAttr
CallableWhenAttr
CallbackAttr
CapabilityAttr
CapturedRecordAttr
CleanupAttr
CmseNSEntryAttr
CodeSegAttr
ColdAttr
CommonAttr
ConstAttr
ConstInitAttr
ConstructorAttr
ConsumableAttr
ConsumableAutoCastAttr
ConsumableSetOnReadAttr
ConvergentAttr
DLLExportAttr
DLLExportStaticLocalAttr
DLLImportAttr
DLLImportStaticLocalAttr
DependerDeclsAttr
DeprecatedAttr
DestructorAttr
DiagnoseIfAttr
DisableSanitizerInstrumentationAttr
DisableTailCallsAttr
EmptyBasesAttr
EnableIfAttr
EnforceTCBAttr
EnforceTCBLeafAttr
EnumExtensibilityAttr
ErrorAttr
ExcludeFromExplicitInstantiationAttr
ExclusiveTrylockFunctionAttr
ExternalSourceSymbolAttr
FinalAttr
FlagEnumAttr
FlattenAttr
FormatAttr
FormatArgAttr
GNUInlineAttr
GuardedByAttr
GuardedVarAttr
HIPManagedAttr
HotAttr
IBActionAttr
IBOutletAttr
IBOutletCollectionAttr
InitPriorityAttr
InternalLinkageAttr
LTOVisibilityPublicAttr
LayoutVersionAttr
LeafAttr
LockReturnedAttr
LocksExcludedAttr
M68kInterruptAttr
MIGServerRoutineAttr
MSAllocatorAttr
MSInheritanceAttr
MSNoVTableAttr
MSP430InterruptAttr
MSStructAttr
MSVtorDispAttr
MaxFieldAlignmentAttr
MayAliasAttr
MicroMipsAttr
MinSizeAttr
MinVectorWidthAttr
Mips16Attr
MipsInterruptAttr
MipsLongCallAttr
MipsShortCallAttr
NSConsumesSelfAttr
NSErrorDomainAttr
NSReturnsAutoreleasedAttr
NSReturnsNotRetainedAttr
NakedAttr
NoAliasAttr
NoCommonAttr
NoDebugAttr
NoDestroyAttr
NoDuplicateAttr
NoInlineAttr
NoInstrumentFunctionAttr
NoMicroMipsAttr
NoMips16Attr
NoProfileFunctionAttr
NoReturnAttr
NoSanitizeAttr
NoSpeculativeLoadHardeningAttr
NoSplitStackAttr
NoStackProtectorAttr
NoThreadSafetyAnalysisAttr
NoThrowAttr
NoUniqueAddressAttr
NotTailCalledAttr
OMPAllocateDeclAttr
OMPCaptureNoInitAttr
OMPDeclareTargetDeclAttr
OMPDeclareVariantAttr
OMPThreadPrivateDeclAttr
OSConsumesThisAttr
OSReturnsNotRetainedAttr
OSReturnsRetainedAttr
OSReturnsRetainedOnNonZeroAttr
OSReturnsRetainedOnZeroAttr
ObjCBridgeAttr
ObjCBridgeMutableAttr
ObjCBridgeRelatedAttr
ObjCCompleteDefinitionAttr
ObjCExceptionAttr
ObjCExplicitProtocolImplAttr
ObjCExternallyRetainedAttr
ObjCIndependentClassAttr
ObjCMethodFamilyAttr
ObjCNSObjectAttr
ObjCPreciseLifetimeAttr
ObjCRequiresPropertyDefsAttr
ObjCRequiresSuperAttr
ObjCReturnsInnerPointerAttr
ObjCRootClassAttr
ObjCSubclassingRestrictedAttr
ObjCSuppressDirectPropertyAttr
OpenCLIntelReqdSubGroupSizeAttr
OpenCLKernelAttr
OptimizeNoneAttr
OverrideAttr
OwnerAttr
OwnershipAttr
PackedAttr
ParamTypestateAttr
PatchableFunctionEntryAttr
PointerAttr
PointerAuthStructAttr
PragmaClangBSSSectionAttr
PragmaClangDataSectionAttr
PragmaClangRelroSectionAttr
PragmaClangRodataSectionAttr
PragmaClangTextSectionAttr
PreferredNameAttr
PtGuardedByAttr
PtGuardedVarAttr
PureAttr
RISCVInterruptAttr
ReinitializesAttr
ReleaseCapabilityAttr
ReqdWorkGroupSizeAttr
RequiresCapabilityAttr
RestrictAttr
RetainAttr
ReturnTypestateAttr
ReturnsNonNullAttr
ReturnsTwiceAttr
SYCLKernelAttr
ScopedLockableAttr
SectionAttr
SelectAnyAttr
SentinelAttr
SetTypestateAttr
SharedTrylockFunctionAttr
SpeculativeLoadHardeningAttr
StandaloneDebugAttr
StrictFPAttr
SwiftAsyncAttr
SwiftAsyncErrorAttr
SwiftAsyncNameAttr
SwiftAttrAttr
SwiftBridgeAttr
SwiftBridgedTypedefAttr
SwiftErrorAttr
SwiftImportAsNonGenericAttr
SwiftImportPropertyAsAccessorsAttr
SwiftNameAttr
SwiftNewTypeAttr
SwiftPrivateAttr
SymbolMetadataFootnoteAttr
TLSModelAttr
TargetAttr
TestTypestateAttr
TransparentUnionAttr
TrivialABIAttr
TryAcquireCapabilityAttr
TypeTagForDatatypeAttr
TypeVisibilityAttr
TypedMemoryAttr
UnavailableAttr
UninitializedAttr
UnusedAttr
UsedAttr
UsingIfExistsAttr
UuidAttr
VTablePointerAuthenticationAttr
VecReturnAttr
VecTypeHintAttr
VisibilityAttr
WarnUnusedAttr
WarnUnusedResultAttr
WeakAttr
WeakImportAttr
WeakRefAttr
WebAssemblyExportNameAttr
WebAssemblyImportModuleAttr
WebAssemblyImportNameAttr
WorkGroupSizeHintAttr
X86ForceAlignArgPointerAttr
XRayInstrumentAttr
XRayLogArgsAttr
AArch64FarAddressSpaceAttr
AbiTagAttr
AliasAttr
AlignValueAttr
BuiltinAliasAttr
CalledOnceAttr
IFuncAttr
InitSegAttr
LoaderUninitializedAttr
LoopHintAttr
ModeAttr
NoBuiltinAttr
NoEscapeAttr
OMPCaptureKindAttr
OMPDeclareSimdDeclAttr
OMPReferencedVarAttr
ObjCBoxableAttr
ObjCClassStubAttr
ObjCDesignatedInitializerAttr
ObjCDirectAttr
ObjCDirectMembersAttr
ObjCNonLazyClassAttr
ObjCNonRuntimeProtocolAttr
ObjCRuntimeNameAttr
ObjCRuntimeVisibleAttr
ObjCSuppressDirectAttr
OpenCLAccessAttr
OverloadableAttr
RenderScriptKernelAttr
SwiftObjCMembersAttr
SwiftVersionedAttr
SwiftVersionedRemovalAttr
ThreadAttr
, scalable
#pragma nounroll
#pragma unroll
#pragma nounroll_and_jam
#pragma unroll_and_jam
 simdlen(
 uniform
 aligned(
 linear(
 device_type(
 match(
 adjust_args(nothing:
 adjust_args(need_device_ptr:
 append_args(
 __attribute__((aarch64_far_address_space
 [[clang::aarch64_far_address_space
 __attribute__((aarch64_vector_pcs
 [[clang::aarch64_vector_pcs
 __attribute__((amdgpu_flat_work_group_size
 [[clang::amdgpu_flat_work_group_size
 __attribute__((amdgpu_num_sgpr
 [[clang::amdgpu_num_sgpr
 __attribute__((amdgpu_num_vgpr
 [[clang::amdgpu_num_vgpr
 __attribute__((amdgpu_waves_per_eu
 [[clang::amdgpu_waves_per_eu
ABORT
UNDEF
 __attribute__((interrupt
 [[gnu::interrupt
 __attribute__((signal
 [[gnu::signal
 __attribute__((abi_tag
 [[gnu::abi_tag
 __attribute__((acquire_capability
 [[clang::acquire_capability
 __attribute__((acquire_shared_capability
 [[clang::acquire_shared_capability
 __attribute__((exclusive_lock_function
 __attribute__((shared_lock_function
acquire_capability
acquire_shared_capability
exclusive_lock_function
shared_lock_function
 __attribute__((acquire_handle
 [[clang::acquire_handle
 __attribute__((acquired_after
 __attribute__((acquired_before
 __attribute__((address_space
 [[clang::address_space
 __attribute__((alias
 [[gnu::alias
(No spelling)
 __attribute__((align_value
 __attribute__((aligned
 [[gnu::aligned
 __declspec(align
 alignas
 _Alignas
aligned
align
alignas
_Alignas
 __attribute__((alloc_align
 [[gnu::alloc_align
 __attribute__((alloc_size
 [[gnu::alloc_size
 __attribute__((always_destroy
 [[clang::always_destroy
 __attribute__((always_inline
 [[gnu::always_inline
 __forceinline
always_inline
__forceinline
 __attribute__((analyzer_noreturn
 __attribute__((analyzer_suppress
 [[clang::analyzer_suppress
 __attribute__((annotate
 [[clang::annotate
 __attribute__((no_caller_saved_registers
 [[gnu::no_caller_saved_registers
 __attribute__((nocf_check
 [[gnu::nocf_check
 __attribute__((objc_arc_weak_reference_unavailable
 [[clang::objc_arc_weak_reference_unavailable
 __attribute__((argument_with_type_tag
 [[clang::argument_with_type_tag
 __attribute__((pointer_with_type_tag
 [[clang::pointer_with_type_tag
argument_with_type_tag
pointer_with_type_tag
 __attribute__((__clang_arm_builtin_alias
 [[clang::__clang_arm_builtin_alias
 __attribute__((__clang_arm_mve_strict_polymorphism
 [[clang::__clang_arm_mve_strict_polymorphism
 __attribute__((artificial
 [[gnu::artificial
 asm
 __asm__
__asm__
 __attribute__((assert_capability
 [[clang::assert_capability
 __attribute__((assert_shared_capability
 [[clang::assert_shared_capability
assert_capability
assert_shared_capability
 __attribute__((assert_exclusive_lock
 __attribute__((assert_shared_lock
 __attribute__((assume_aligned
 [[gnu::assume_aligned
 __attribute__((assume
 [[clang::assume
 __attribute__((availability
, strict
, introduced=
, deprecated=
, obsoleted=
, unavailable
 [[clang::availability
introduced=
deprecated=
obsoleted=
 __attribute__((preserve_access_index
 [[clang::preserve_access_index
 __attribute__((btf_decl_tag
 [[clang::btf_decl_tag
byref
 __attribute__((blocks
 [[clang::blocks
 [[clang::builtin_alias
 __attribute__((clang_builtin_alias
builtin_alias
clang_builtin_alias
 _Noreturn
 __attribute__((cdecl
 [[gnu::cdecl
 __cdecl
 _cdecl
 __attribute__((cf_audited_transfer
 [[clang::cf_audited_transfer
 __attribute__((cf_consumed
 [[clang::cf_consumed
nocf
 __declspec(guard
 __attribute__((cfi_canonical_jump_table
 [[clang::cfi_canonical_jump_table
 __attribute__((cf_returns_not_retained
 [[clang::cf_returns_not_retained
 __attribute__((cf_returns_retained
 [[clang::cf_returns_retained
 __attribute__((cf_unknown_transfer
 [[clang::cf_unknown_transfer
 __attribute__((cpu_dispatch
 [[clang::cpu_dispatch
 __declspec(cpu_dispatch
 __attribute__((cpu_specific
 [[clang::cpu_specific
 __declspec(cpu_specific
 __attribute__((constant
 __declspec(__constant__
constant
 __attribute__((device
 __declspec(__device__
 __attribute__((device_builtin_surface_type
 __declspec(__device_builtin_surface_type__
 __attribute__((device_builtin_texture_type
 __declspec(__device_builtin_texture_type__
 __attribute__((global
 __declspec(__global__
global
 __attribute__((host
 __declspec(__host__
host
 __attribute__((launch_bounds
 __declspec(__launch_bounds__
 __attribute__((shared
 __declspec(__shared__
 [[noreturn
unknown
consumed
unconsumed
 __attribute__((callable_when
 [[clang::callable_when
 __attribute__((callback
 [[clang::callback
 __attribute__((called_once
 [[clang::called_once
 __attribute__((capability
 [[clang::capability
 __attribute__((shared_capability
 [[clang::shared_capability
capability
shared_capability
 __attribute__((carries_dependency
 [[carries_dependency
 __attribute__((cleanup
 [[gnu::cleanup
 __attribute__((cmse_nonsecure_call
 __attribute__((cmse_nonsecure_entry
 __declspec(code_seg
 __attribute__((cold
 [[gnu::cold
 __attribute__((common
 [[gnu::common
 __attribute__((const
 [[gnu::const
 __attribute__((__const
 [[gnu::__const
 constinit
 __attribute__((require_constant_initialization
 [[clang::require_constant_initialization
constinit
require_constant_initialization
 __attribute__((constructor
 [[gnu::constructor
 __attribute__((consumable
 [[clang::consumable
 __attribute__((consumable_auto_cast_state
 [[clang::consumable_auto_cast_state
 __attribute__((consumable_set_state_on_read
 [[clang::consumable_set_state_on_read
 __attribute__((convergent
 [[clang::convergent
 __declspec(dllexport
 __attribute__((dllexport
 [[gnu::dllexport
 __declspec(dllimport
 __attribute__((dllimport
 [[gnu::dllimport
 __attribute__((deprecated
 [[gnu::deprecated
 __declspec(deprecated
 [[deprecated
 __attribute__((destructor
 [[gnu::destructor
error
warning
 __attribute__((diagnose_if
 __attribute__((disable_sanitizer_instrumentation
 [[clang::disable_sanitizer_instrumentation
 __attribute__((disable_tail_calls
 [[clang::disable_tail_calls
 __declspec(empty_bases
 __attribute__((enable_if
 __attribute__((enforce_tcb
 [[clang::enforce_tcb
 __attribute__((enforce_tcb_leaf
 [[clang::enforce_tcb_leaf
closed
open
 __attribute__((enum_extensibility
 [[clang::enum_extensibility
 __attribute__((error
 [[gnu::error
 __attribute__((warning
 [[gnu::warning
 __attribute__((exclude_from_explicit_instantiation
 [[clang::exclude_from_explicit_instantiation
 __attribute__((exclusive_trylock_function
 __attribute__((external_source_symbol
 [[clang::external_source_symbol
 [[fallthrough
 [[clang::fallthrough
 __attribute__((fallthrough
 [[gnu::fallthrough
 __attribute__((fastcall
 [[gnu::fastcall
 __fastcall
 _fastcall
final
sealed
 __attribute__((flag_enum
 [[clang::flag_enum
 __attribute__((flatten
 [[gnu::flatten
 __attribute__((format
 [[gnu::format
 __attribute__((format_arg
 [[gnu::format_arg
 __attribute__((gnu_inline
 [[gnu::gnu_inline
 __attribute__((guarded_by
 __attribute__((guarded_var
 [[clang::guarded_var
 __attribute__((managed
 __declspec(__managed__
 __attribute__((hot
 [[gnu::hot
 __attribute__((ibaction
 [[clang::ibaction
 __attribute__((iboutlet
 [[clang::iboutlet
 __attribute__((iboutletcollection
 [[clang::iboutletcollection
 __attribute__((ifunc
 [[gnu::ifunc
 __attribute__((init_priority
 [[gnu::init_priority
#pragma init_seg
init_seg
 __attribute__((intel_ocl_bicc
 [[clang::intel_ocl_bicc
 __attribute__((internal_linkage
 [[clang::internal_linkage
 __attribute__((lto_visibility_public
 [[clang::lto_visibility_public
 __declspec(layout_version
 __attribute__((leaf
 [[gnu::leaf
 __attribute__((lifetimebound
 [[clang::lifetimebound
 [[likely
 [[clang::likely
 __attribute__((loader_uninitialized
 [[clang::loader_uninitialized
 __attribute__((lock_returned
 __attribute__((locks_excluded
vectorize
vectorize_width
interleave
interleave_count
unroll
unroll_count
unroll_and_jam
unroll_and_jam_count
pipeline
pipeline_initiation_interval
distribute
vectorize_predicate
#pragma clang loop
loop
nounroll
nounroll_and_jam
 __attribute__((mig_server_routine
 [[clang::mig_server_routine
 __attribute__((ms_abi
 [[gnu::ms_abi
 __declspec(allocator
 __single_inheritance
 __multiple_inheritance
 __virtual_inheritance
 __unspecified_inheritance
__single_inheritance
__multiple_inheritance
__virtual_inheritance
__unspecified_inheritance
 __declspec(novtable
 __attribute__((ms_struct
 [[gnu::ms_struct
 __attribute__((may_alias
 [[gnu::may_alias
 __attribute__((micromips
 [[gnu::micromips
 __attribute__((minsize
 [[clang::minsize
 __attribute__((min_vector_width
 [[clang::min_vector_width
 __attribute__((mips16
 [[gnu::mips16
vector=sw0
vector=sw1
vector=hw0
vector=hw1
vector=hw2
vector=hw3
vector=hw4
vector=hw5
 __attribute__((long_call
 [[gnu::long_call
 __attribute__((far
 [[gnu::far
long_call
 __attribute__((short_call
 [[gnu::short_call
 __attribute__((near
 [[gnu::near
short_call
near
 __attribute__((mode
 [[gnu::mode
 __attribute__((musttail
 [[clang::musttail
 __attribute__((ns_consumed
 [[clang::ns_consumed
 __attribute__((ns_consumes_self
 [[clang::ns_consumes_self
 __attribute__((ns_error_domain
 __attribute__((ns_returns_autoreleased
 [[clang::ns_returns_autoreleased
 __attribute__((ns_returns_not_retained
 [[clang::ns_returns_not_retained
 __attribute__((ns_returns_retained
 [[clang::ns_returns_retained
 __attribute__((naked
 [[gnu::naked
 __declspec(naked
 __declspec(noalias
 __attribute__((no_builtin
 [[clang::no_builtin
no_builtin
 __attribute__((nocommon
 [[gnu::nocommon
 __attribute__((nodebug
 [[gnu::nodebug
 __attribute__((noderef
 [[clang::noderef
 __attribute__((no_destroy
 [[clang::no_destroy
 __attribute__((noduplicate
 [[clang::noduplicate
 __attribute__((noescape
 [[clang::noescape
 __attribute__((noinline
 [[gnu::noinline
 __declspec(noinline
 __attribute__((no_instrument_function
 [[gnu::no_instrument_function
 __attribute__((nomerge
 [[clang::nomerge
nomerge
 __attribute__((nomicromips
 [[gnu::nomicromips
 __attribute__((nomips16
 [[gnu::nomips16
 __attribute__((no_profile_instrument_function
 [[gnu::no_profile_instrument_function
 __attribute__((noreturn
 [[gnu::noreturn
 __declspec(noreturn
 __attribute__((no_sanitize
 [[clang::no_sanitize
 __attribute__((no_speculative_load_hardening
 [[clang::no_speculative_load_hardening
 __attribute__((no_split_stack
 [[gnu::no_split_stack
 __attribute__((no_stack_protector
 [[clang::no_stack_protector
 __attribute__((no_thread_safety_analysis
 [[clang::no_thread_safety_analysis
 __attribute__((nothrow
 [[gnu::nothrow
 __declspec(nothrow
 [[no_unique_address
 __attribute__((nonnull
 [[gnu::nonnull
 __attribute__((not_tail_called
 [[clang::not_tail_called
omp_null_allocator
omp_default_mem_alloc
omp_large_cap_mem_alloc
omp_const_mem_alloc
omp_high_bw_mem_alloc
omp_low_lat_mem_alloc
omp_cgroup_mem_alloc
omp_pteam_mem_alloc
omp_thread_mem_alloc
inbranch
notinbranch
#pragma omp declare simd
link
nohost
#pragma omp declare target
target,targetsync
#pragma omp declare variant
declare variant
 __attribute__((os_consumed
 [[clang::os_consumed
 __attribute__((os_consumes_this
 [[clang::os_consumes_this
 __attribute__((os_returns_not_retained
 [[clang::os_returns_not_retained
 __attribute__((os_returns_retained
 [[clang::os_returns_retained
 __attribute__((os_returns_retained_on_non_zero
 [[clang::os_returns_retained_on_non_zero
 __attribute__((os_returns_retained_on_zero
 [[clang::os_returns_retained_on_zero
 __attribute__((objc_boxable
 [[clang::objc_boxable
 __attribute__((objc_bridge
 [[clang::objc_bridge
 __attribute__((objc_bridge_mutable
 [[clang::objc_bridge_mutable
 __attribute__((objc_bridge_related
 [[clang::objc_bridge_related
 __attribute__((objc_class_stub
 [[clang::objc_class_stub
 __attribute__((objc_complete_definition
 __attribute__((objc_designated_initializer
 [[clang::objc_designated_initializer
 __attribute__((objc_direct
 [[clang::objc_direct
 __attribute__((objc_direct_members
 [[clang::objc_direct_members
 __attribute__((objc_exception
 [[clang::objc_exception
 __attribute__((objc_protocol_requires_explicit_implementation
 [[clang::objc_protocol_requires_explicit_implementation
 __attribute__((objc_externally_retained
 [[clang::objc_externally_retained
 __attribute__((objc_gc
 [[clang::objc_gc
 __attribute__((objc_independent_class
 [[clang::objc_independent_class
 __unsafe_unretained
 __kindof
none
alloc
copy
init
mutableCopy
 __attribute__((objc_method_family
 [[clang::objc_method_family
 __attribute__((NSObject
 [[clang::NSObject
 __attribute__((objc_nonlazy_class
 [[clang::objc_nonlazy_class
 __attribute__((objc_non_runtime_protocol
 [[clang::objc_non_runtime_protocol
 __attribute__((objc_ownership
 [[clang::objc_ownership
 __attribute__((objc_precise_lifetime
 [[clang::objc_precise_lifetime
 __attribute__((objc_requires_property_definitions
 [[clang::objc_requires_property_definitions
 __attribute__((objc_requires_super
 [[clang::objc_requires_super
 __attribute__((objc_returns_inner_pointer
 [[clang::objc_returns_inner_pointer
 __attribute__((objc_root_class
 [[clang::objc_root_class
 __attribute__((objc_runtime_name
 [[clang::objc_runtime_name
 __attribute__((objc_runtime_visible
 [[clang::objc_runtime_visible
 __attribute__((objc_subclassing_restricted
 [[clang::objc_subclassing_restricted
 __attribute__((objc_suppress_direct
 [[clang::objc_suppress_direct
 suppress_direct
 __read_only
 read_only
 __write_only
 write_only
 __read_write
 read_write
__read_only
read_only
__write_only
write_only
__read_write
read_write
 __constant
 constant
 __attribute__((opencl_constant
 [[clang::opencl_constant
__constant
opencl_constant
 __generic
 generic
 __attribute__((opencl_generic
 [[clang::opencl_generic
__generic
generic
opencl_generic
 __global
 global
 __attribute__((opencl_global
 [[clang::opencl_global
__global
opencl_global
 __attribute__((opencl_global_device
 [[clang::opencl_global_device
 __attribute__((opencl_global_host
 [[clang::opencl_global_host
 __attribute__((intel_reqd_sub_group_size
 __kernel
 kernel
 __local
 local
 __attribute__((opencl_local
 [[clang::opencl_local
__local
local
opencl_local
 __private
 private
 __attribute__((opencl_private
 [[clang::opencl_private
__private
private
opencl_private
 __attribute__((opencl_unroll_hint
 __attribute__((optnone
 [[clang::optnone
 __attribute__((overloadable
 [[clang::overloadable
 [[gsl::Owner
 __attribute__((ownership_holds
 [[clang::ownership_holds
 __attribute__((ownership_returns
 [[clang::ownership_returns
 __attribute__((ownership_takes
 [[clang::ownership_takes
ownership_holds
ownership_returns
ownership_takes
 __attribute__((packed
 [[gnu::packed
 __attribute__((param_typestate
 [[clang::param_typestate
 __attribute__((pascal
 [[clang::pascal
 __pascal
 _pascal
 __attribute__((pass_object_size
 [[clang::pass_object_size
 __attribute__((pass_dynamic_object_size
 [[clang::pass_dynamic_object_size
pass_object_size
pass_dynamic_object_size
 __attribute__((patchable_function_entry
 [[gnu::patchable_function_entry
aapcs
aapcs-vfp
 __attribute__((pcs
 [[gnu::pcs
 [[gsl::Pointer
 __ptrauth
 __ptrauth_restricted_intptr
__ptrauth
__ptrauth_restricted_intptr
 __attribute__((ptrauth_struct
 [[clang::ptrauth_struct
 __attribute__((preferred_name
 [[clang::preferred_name
 __attribute__((preserve_all
 [[clang::preserve_all
 __attribute__((preserve_most
 [[clang::preserve_most
 __attribute__((pt_guarded_by
 __attribute__((pt_guarded_var
 [[clang::pt_guarded_var
 __ptr32
 __ptr64
 __attribute__((pure
 [[gnu::pure
user
supervisor
machine
 __attribute__((regcall
 [[gnu::regcall
 __regcall
 __attribute__((reinitializes
 [[clang::reinitializes
 __attribute__((release_capability
 [[clang::release_capability
 __attribute__((release_shared_capability
 [[clang::release_shared_capability
 __attribute__((release_generic_capability
 [[clang::release_generic_capability
 __attribute__((unlock_function
 [[clang::unlock_function
release_capability
release_shared_capability
release_generic_capability
unlock_function
 __attribute__((release_handle
 [[clang::release_handle
 __attribute__((kernel
 __attribute__((reqd_work_group_size
 __attribute__((requires_capability
 [[clang::requires_capability
 __attribute__((exclusive_locks_required
 [[clang::exclusive_locks_required
 __attribute__((requires_shared_capability
 [[clang::requires_shared_capability
 __attribute__((shared_locks_required
 [[clang::shared_locks_required
requires_capability
exclusive_locks_required
requires_shared_capability
shared_locks_required
 __declspec(restrict
 __attribute__((malloc
 [[gnu::malloc
restrict
malloc
 __attribute__((retain
 [[gnu::retain
 __attribute__((return_typestate
 [[clang::return_typestate
 __attribute__((returns_nonnull
 [[gnu::returns_nonnull
 __attribute__((returns_twice
 [[gnu::returns_twice
 __sptr
 __attribute__((sycl_kernel
 [[clang::sycl_kernel
 __attribute__((scoped_lockable
 [[clang::scoped_lockable
 __attribute__((section
 [[gnu::section
 __declspec(allocate
section
allocate
 __declspec(selectany
 __attribute__((selectany
 [[gnu::selectany
 __attribute__((sentinel
 [[gnu::sentinel
 __attribute__((set_typestate
 [[clang::set_typestate
 __attribute__((shared_trylock_function
 __attribute__((speculative_load_hardening
 [[clang::speculative_load_hardening
 __attribute__((standalone_debug
 [[clang::standalone_debug
 __attribute__((stdcall
 [[gnu::stdcall
 __stdcall
 _stdcall
 [[gsl::suppress
swift_private
not_swift_private
 __attribute__((swift_async
 [[clang::swift_async
 __attribute__((swiftasynccall
 [[clang::swiftasynccall
 __attribute__((swift_async_context
 [[clang::swift_async_context
nonnull_error
zero_argument
nonzero_argument
 __attribute__((swift_async_error
 [[clang::swift_async_error
 __attribute__((swift_async_name
 __attribute__((swift_attr
 __attribute__((swift_bridge
 __attribute__((swift_bridged_typedef
 __attribute__((swiftcall
 [[clang::swiftcall
 __attribute__((swift_context
 [[clang::swift_context
null_result
zero_result
nonzero_result
 __attribute__((swift_error
 __attribute__((swift_error_result
 [[clang::swift_error_result
 __attribute__((swift_indirect_result
 [[clang::swift_indirect_result
 __attribute__((swift_name
struct
enum
 __attribute__((swift_newtype
 __attribute__((swift_wrapper
swift_newtype
swift_wrapper
 __attribute__((swift_objc_members
 __attribute__((swift_private
 __attribute__((symbol_metadata_footnote
 [[clang::symbol_metadata_footnote
 __attribute__((sysv_abi
 [[gnu::sysv_abi
 __attribute__((tls_model
 [[gnu::tls_model
 __attribute__((target
 [[gnu::target
 __attribute__((test_typestate
 [[clang::test_typestate
 __attribute__((thiscall
 [[gnu::thiscall
 __thiscall
 _thiscall
 __declspec(thread
 __attribute__((transparent_union
 [[gnu::transparent_union
 __attribute__((trivial_abi
 [[clang::trivial_abi
 __attribute__((try_acquire_capability
 [[clang::try_acquire_capability
 __attribute__((try_acquire_shared_capability
 [[clang::try_acquire_shared_capability
try_acquire_capability
try_acquire_shared_capability
 _Nonnull
 _Null_unspecified
 _Nullable
 _Nullable_result
 __attribute__((type_tag_for_datatype
 [[clang::type_tag_for_datatype
default
hidden
protected
 __attribute__((type_visibility
 [[clang::type_visibility
 __attribute__((typed_memory_operation
 [[clang::typed_memory_operation
 __uptr
 __attribute__((unavailable
 [[clang::unavailable
 __attribute__((uninitialized
 [[clang::uninitialized
 [[unlikely
 [[clang::unlikely
 [[maybe_unused
 __attribute__((unused
 [[gnu::unused
maybe_unused
unused
 __attribute__((use_handle
 [[clang::use_handle
 __attribute__((used
 [[gnu::used
 __attribute__((using_if_exists
 [[clang::using_if_exists
 __declspec(uuid
[uuid
default_key
no_authentication
process_dependent
process_independent
default_address_discrimination
no_address_discrimination
address_discrimination
default_extra_discrimination
no_extra_discrimination
type_discrimination
custom_discrimination
 __attribute__((ptrauth_vtable_pointer
 [[clang::ptrauth_vtable_pointer
 __attribute__((vecreturn
 [[clang::vecreturn
 __attribute__((vec_type_hint
 __attribute__((vectorcall
 [[clang::vectorcall
 __vectorcall
 _vectorcall
 __attribute__((visibility
 [[gnu::visibility
 __attribute__((warn_unused
 [[gnu::warn_unused
 [[nodiscard
 [[clang::warn_unused_result
 __attribute__((warn_unused_result
 [[gnu::warn_unused_result
nodiscard
warn_unused_result
 __attribute__((weak
 [[gnu::weak
 __attribute__((weak_import
 [[clang::weak_import
 __attribute__((weakref
 [[gnu::weakref
 __attribute__((export_name
 [[clang::export_name
 __attribute__((import_module
 [[clang::import_module
 __attribute__((import_name
 [[clang::import_name
 __attribute__((work_group_size_hint
 __attribute__((force_align_arg_pointer
 [[gnu::force_align_arg_pointer
 __attribute__((xray_always_instrument
 [[clang::xray_always_instrument
 __attribute__((xray_never_instrument
 [[clang::xray_never_instrument
xray_always_instrument
xray_never_instrument
 __attribute__((xray_log_args
 [[clang::xray_log_args
 __attribute__((xnu_usage_semantics
 [[clang::xnu_usage_semantics
interop(
NoCommentKind
BlockCommandComment
ParamCommandComment
TParamCommandComment
VerbatimBlockComment
VerbatimLineComment
ParagraphComment
FullComment
HTMLEndTagComment
HTMLStartTagComment
InlineCommandComment
TextComment
VerbatimBlockLineComment
[in]
[out]
[in,out]
Returns 
link
textblock
section
abstract
addtogroup
anchor
attention
author
authors
brief
callback
category
class
classdesign
coclass
code
endcode
const
constant
copyright
date
defgroup
dependency
deprecated
details
discussion
enddot
enum
exception
function
functiongroup
headerfile
helper
helperclass
helps
htmlonly
endhtmlonly
ingroup
instancesize
interface
invariant
latexonly
endlatexonly
/link
mainpage
manonly
endmanonly
method
methodgroup
endmsc
name
namespace
note
overload
ownership
paragraph
param
performance
post
property
protocol
related
relatedalso
relates
relatesalso
remark
remarks
result
return
returns
retval
rtfonly
endrtfonly
security
seealso
short
since
struct
subpage
subsection
subsubsection
superclass
template
templatefield
/textblock
throw
throws
todo
tparam
typedef
union
verbatim
endverbatim
version
warning
weakgroup
xmlonly
endxmlonly
tilde
\@&<
[[deprecated]]
__attribute__((deprecated))
partial_ordering
weak_ordering
strong_ordering
equal
equivalent
less
greater
unordered
CFStringCreateWithFormat
CFStringCreateWithFormatAndArguments
CFStringAppendFormat
CFStringAppendFormatAndArguments
(anonymous)
`anonymous namespace'
(anonymous namespace)
(anonymous 
auto
extern
__private_extern__
register
static
main
wmain
WinMain
wWinMain
DllMain
field-padding
<deduction guide for 
operator 
<using-directive>
AccessSpec
Block
Captured
ClassScopeFunctionSpecialization
Empty
Export
ExternCContext
FileScopeAsm
Friend
FriendTemplate
Import
LifetimeExtendedTemporary
LinkageSpec
Using
UsingEnum
Label
Namespace
NamespaceAlias
ObjCCompatibleAlias
ObjCCategory
ObjCCategoryImpl
ObjCImplementation
ObjCInterface
ObjCProtocol
ObjCMethod
ObjCProperty
BuiltinTemplate
Concept
ClassTemplate
FunctionTemplate
TypeAliasTemplate
VarTemplate
TemplateTemplateParm
Enum
Record
CXXRecord
ClassTemplateSpecialization
ClassTemplatePartialSpecialization
TemplateTypeParm
ObjCTypeParam
TypeAlias
Typedef
UnresolvedUsingTypename
UnresolvedUsingIfExists
UsingDirective
UsingPack
UsingShadow
ConstructorUsingShadow
Binding
Field
ObjCAtDefsField
ObjCIvar
Function
CXXDeductionGuide
CXXMethod
CXXConstructor
CXXConversion
CXXDestructor
MSProperty
NonTypeTemplateParm
Decomposition
ImplicitParam
OMPCapturedExpr
ParmVar
VarTemplateSpecialization
VarTemplatePartialSpecialization
EnumConstant
IndirectField
MSGuid
OMPDeclareMapper
OMPDeclareReduction
TemplateParamObject
UnresolvedUsingValue
OMPAllocate
OMPRequires
OMPThreadPrivate
ObjCPropertyImpl
PragmaComment
PragmaDetectMismatch
RequiresExprBody
StaticAssert
TranslationUnit
*** Decl Stats:
 decls total.
 AccessSpec decls, 
 each (
 Block decls, 
 Captured decls, 
 ClassScopeFunctionSpecialization decls, 
 Empty decls, 
 Export decls, 
 ExternCContext decls, 
 FileScopeAsm decls, 
 Friend decls, 
 FriendTemplate decls, 
 Import decls, 
 LifetimeExtendedTemporary decls, 
 LinkageSpec decls, 
 Using decls, 
 UsingEnum decls, 
 Label decls, 
 Namespace decls, 
 NamespaceAlias decls, 
 ObjCCompatibleAlias decls, 
 ObjCCategory decls, 
 ObjCCategoryImpl decls, 
 ObjCImplementation decls, 
 ObjCInterface decls, 
 ObjCProtocol decls, 
 ObjCMethod decls, 
 ObjCProperty decls, 
 BuiltinTemplate decls, 
 Concept decls, 
 ClassTemplate decls, 
 FunctionTemplate decls, 
 TypeAliasTemplate decls, 
 VarTemplate decls, 
 TemplateTemplateParm decls, 
 Enum decls, 
 Record decls, 
 CXXRecord decls, 
 ClassTemplateSpecialization decls, 
 ClassTemplatePartialSpecialization decls, 
 TemplateTypeParm decls, 
 ObjCTypeParam decls, 
 TypeAlias decls, 
 Typedef decls, 
 UnresolvedUsingTypename decls, 
 UnresolvedUsingIfExists decls, 
 UsingDirective decls, 
 UsingPack decls, 
 UsingShadow decls, 
 ConstructorUsingShadow decls, 
 Binding decls, 
 Field decls, 
 ObjCAtDefsField decls, 
 ObjCIvar decls, 
 Function decls, 
 CXXDeductionGuide decls, 
 CXXMethod decls, 
 CXXConstructor decls, 
 CXXConversion decls, 
 CXXDestructor decls, 
 MSProperty decls, 
 NonTypeTemplateParm decls, 
 Var decls, 
 Decomposition decls, 
 ImplicitParam decls, 
 OMPCapturedExpr decls, 
 ParmVar decls, 
 VarTemplateSpecialization decls, 
 VarTemplatePartialSpecialization decls, 
 EnumConstant decls, 
 IndirectField decls, 
 MSGuid decls, 
 OMPDeclareMapper decls, 
 OMPDeclareReduction decls, 
 TemplateParamObject decls, 
 UnresolvedUsingValue decls, 
 OMPAllocate decls, 
 OMPRequires decls, 
 OMPThreadPrivate decls, 
 ObjCPropertyImpl decls, 
 PragmaComment decls, 
 PragmaDetectMismatch decls, 
 RequiresExprBody decls, 
 StaticAssert decls, 
 TranslationUnit decls, 
not available on 
introduced in 
obsoleted in 
first deprecated in 
00000000-0000-0000-C000-000000000046
00020400-0000-0000-C000-000000000046
VideoFullscreenInterfaceAVKit
GUID{%08x-%04hx-%04hx-
%02hhx
__invoke
public
private
protected
self
_cmd
NSObject
#pragma omp end declare target
 ...
concept 
__asm (
friend 
@import 
extern "
using enum 
@compatibility_alias 
@interface 
<<error-type>>
__covariant 
__contravariant 
@implementation 
@class 
@protocol 
@required
@optional
getter = 
setter = 
__module_private__ 
 struct
typedef 
using typename 
using namespace 
mutable 
extern 
__private_extern__ 
consteval 
 throw(
 noexcept
auto 
 requires 
 = 0
 = delete
 = default
__thread 
_Thread_local 
thread_local 
#pragma omp declare mapper (
#pragma omp declare reduction (
 initializer(
omp_priv(
omp_priv = 
#pragma omp allocate
#pragma omp requires 
#pragma omp threadprivate
@dynamic 
static_assert(
<template param 
__func__
__FUNCTION__
__FUNCDNAME__
L__FUNCTION__
__PRETTY_FUNCTION__
__FUNCSIG__
L__FUNCSIG__
_block_invoke
virtual 
__cdecl 
__stdcall 
__fastcall 
__thiscall 
__vectorcall 
__regcall 
 const
top level
'\\'
'\''
'\a'
'\b'
'\f'
'\n'
'\r'
'\t'
'\v'
%04x
0123456789ABCDEF
\U00
__real
__imag
__extension__
co_await
Dependent
BitCast
LValueBitCast
LValueToRValueBitCast
LValueToRValue
NoOp
BaseToDerived
DerivedToBase
UncheckedDerivedToBase
Dynamic
ToUnion
ArrayToPointerDecay
FunctionToPointerDecay
NullToPointer
NullToMemberPointer
BaseToDerivedMemberPointer
DerivedToBaseMemberPointer
MemberPointerToBoolean
ReinterpretMemberPointer
UserDefinedConversion
ConstructorConversion
IntegralToPointer
PointerToIntegral
PointerToBoolean
ToVoid
MatrixCast
VectorSplat
IntegralCast
IntegralToBoolean
IntegralToFloating
FloatingToFixedPoint
FixedPointToFloating
FixedPointCast
FixedPointToIntegral
IntegralToFixedPoint
FixedPointToBoolean
FloatingToIntegral
FloatingToBoolean
BooleanToSignedIntegral
FloatingCast
CPointerToObjCPointerCast
BlockPointerToObjCPointerCast
AnyPointerToBlockPointerCast
ObjCObjectLValueCast
FloatingRealToComplex
FloatingComplexToReal
FloatingComplexToBoolean
FloatingComplexCast
FloatingComplexToIntegralComplex
IntegralRealToComplex
IntegralComplexToReal
IntegralComplexToBoolean
IntegralComplexCast
IntegralComplexToFloatingComplex
ARCProduceObject
ARCConsumeObject
ARCReclaimReturnedObject
ARCExtendBlockObject
AtomicToNonAtomic
NonAtomicToAtomic
CopyAndAutoreleaseBlockObject
BuiltinFnToFnPtr
ZeroToOCLOpaqueType
AddressSpaceConversion
IntToOCLSampler
FirebloomPointerCast
__builtin_FILE
__builtin_FUNCTION
__builtin_LINE
__builtin_COLUMN
even
captures not currently allowed
deallocate
__builtin_is_constant_evaluated
std::is_constant_evaluated
<...>
static_cast
dynamic_cast
reinterpret_cast
const_cast
addrspace_cast
<invalid cast>
__bridge
__bridge_transfer
__bridge_retained
generation counter overflowed
size_t
ssize_t
intmax_t
uintmax_t
unimplemented feature
missing source location
Interpreter cannot return values
missing source expression
char_traits
basic_istream
basic_ostream
basic_iostream
U2ASI
CLglobal
CLdevice
CLhost
CLlocal
CLconstant
CLprivate
CLgeneric
SYglobal
SYdevice
SYhost
SYlocal
SYprivate
CUdevice
CUconstant
CUshared
ptr32_sptr
ptr32_uptr
ptr64
cannot yet mangle expression type %0
u8__uuidof
u8__uuidoft
u8__uuidofz
?: operator with omitted middle operand cannot be mangled
u11__alignof__
cannot yet mangle __builtin_ptrauth_type_discriminator expression
cannot yet mangle __builtin_xnu_type_signature expression
cannot yet mangle __builtin_xnu_type_summary expression
cannot yet mangle __builtin_tmo_type_get_metadata expression
cannot yet mangle vec_step expression
ixix
_SUBSTPACK_
v110_SUBSTPACK
LDnE
v18co_await
v18co_yield
u33__builtin_sycl_unique_stable_name
dtdefpT
12_GLOBAL__N_1
Li0E
decvP
plcvPcad
__device_stub__
__regcall3__
U25pass_dynamic_object_size
U17pass_object_size
cannot mangle fixed point literals yet
U7_Atomic
U13block_pointer
11objc_object
10objc_class
13objc_selector
ocl_image1d_ro
ocl_image1d_array_ro
ocl_image1d_buffer_ro
ocl_image2d_ro
ocl_image2d_array_ro
ocl_image2d_depth_ro
ocl_image2d_array_depth_ro
ocl_image2d_msaa_ro
ocl_image2d_array_msaa_ro
ocl_image2d_msaa_depth_ro
ocl_image2d_array_msaa_depth_ro
ocl_image3d_ro
ocl_image1d_wo
ocl_image1d_array_wo
ocl_image1d_buffer_wo
ocl_image2d_wo
ocl_image2d_array_wo
ocl_image2d_depth_wo
ocl_image2d_array_depth_wo
ocl_image2d_msaa_wo
ocl_image2d_array_msaa_wo
ocl_image2d_msaa_depth_wo
ocl_image2d_array_msaa_depth_wo
ocl_image3d_wo
ocl_image1d_rw
ocl_image1d_array_rw
ocl_image1d_buffer_rw
ocl_image2d_rw
ocl_image2d_array_rw
ocl_image2d_depth_rw
ocl_image2d_array_depth_rw
ocl_image2d_msaa_rw
ocl_image2d_array_msaa_rw
ocl_image2d_msaa_depth_rw
ocl_image2d_array_msaa_depth_rw
ocl_image3d_rw
11ocl_sampler
9ocl_event
12ocl_clkevent
9ocl_queue
13ocl_reserveid
ocl_intel_sub_group_avc_mce_payload_t
ocl_intel_sub_group_avc_ime_payload_t
ocl_intel_sub_group_avc_ref_payload_t
ocl_intel_sub_group_avc_sic_payload_t
ocl_intel_sub_group_avc_mce_result_t
ocl_intel_sub_group_avc_ime_result_t
ocl_intel_sub_group_avc_ref_result_t
ocl_intel_sub_group_avc_sic_result_t
ocl_intel_sub_group_avc_ime_result_single_reference_streamout_t
ocl_intel_sub_group_avc_ime_result_dual_reference_streamout_t
ocl_intel_sub_group_avc_ime_single_reference_streamin_t
ocl_intel_sub_group_avc_ime_dual_reference_streamin_t
svint8x2_t
svint16x2_t
svint32x2_t
svint64x2_t
svuint8x2_t
svuint16x2_t
svuint32x2_t
svuint64x2_t
svfloat16x2_t
svfloat32x2_t
svfloat64x2_t
svbfloat16x2_t
svint8x3_t
svint16x3_t
svint32x3_t
svint64x3_t
svuint8x3_t
svuint16x3_t
svuint32x3_t
svuint64x3_t
svfloat16x3_t
svfloat32x3_t
svfloat64x3_t
svbfloat16x3_t
svint8x4_t
svint16x4_t
svint32x4_t
svint64x4_t
svuint8x4_t
svuint16x4_t
svuint32x4_t
svuint64x4_t
svfloat16x4_t
svfloat32x4_t
svfloat64x4_t
svbfloat16x4_t
U7_ExtInt
cannot mangle this dependent neon vector type yet
cannot mangle this dependent fixed-length SVE vector type yet
U8__kindof
objcproto
8ocl_pipe
u6typeof
3eut
Poly8
Poly16
Poly64
Int8
Int16
Int32
Int64
Uint8
Uint16
Uint32
Uint64
Float16
Float32
Float64
Bfloat16
poly8_t
poly16_t
poly64_t
int8_t
uint8_t
int16_t
uint16_t
int32_t
uint32_t
int64_t
uint64_t
float64_t
float32_t
float16_t
bfloat16_t
__simd64_
__simd128_
__SVBfloat16_t
9__SVE_VLSI
Ua9enable_ifI
Mangling declaration
__vtptrauth
_ZGR
_ZTV
_ZTI
_ZTS
_ZGV
__cxx_global_var_init
__dtor_
__filt_
__fin_
_ZTT
_ZTC
_ZTH
_ZTW
__finalize_
AddressSpaceAttr
ArmMveStrictPolymorphismAttr
CmseNSCallAttr
NoDerefAttr
ObjCGCAttr
ObjCInertUnsafeUnretainedAttr
ObjCKindOfAttr
OpenCLConstantAddressSpaceAttr
OpenCLGenericAddressSpaceAttr
OpenCLGlobalAddressSpaceAttr
OpenCLGlobalDeviceAddressSpaceAttr
OpenCLGlobalHostAddressSpaceAttr
OpenCLLocalAddressSpaceAttr
OpenCLPrivateAddressSpaceAttr
PointerAuthAttr
Ptr32Attr
Ptr64Attr
PtrAutoAttrAttr
PtrAutoNullTerminatedAttrAttr
SPtrAttr
TypeNonNullAttr
TypeNullUnspecifiedAttr
TypeNullableAttr
TypeNullableResultAttr
UPtrAttr
XnuUsageSemanticsAttr
FallThroughAttr
LikelyAttr
MustTailAttr
OpenCLUnrollHintAttr
SuppressAttr
UnlikelyAttr
AnalyzerSuppressAttr
NoMergeAttr
AArch64VectorPcsAttr
AcquireHandleAttr
AnyX86NoCfCheckAttr
CDeclAttr
FastCallAttr
IntelOclBiccAttr
LifetimeBoundAttr
MSABIAttr
NSReturnsRetainedAttr
ObjCOwnershipAttr
PascalAttr
PcsAttr
PreserveAllAttr
PreserveMostAttr
RegCallAttr
StdCallAttr
SwiftAsyncCallAttr
SwiftCallAttr
SysVABIAttr
ThisCallAttr
VectorCallAttr
SwiftAsyncContextAttr
SwiftContextAttr
SwiftErrorResultAttr
SwiftIndirectResultAttr
AnnotateAttr
CFConsumedAttr
CarriesDependencyAttr
NSConsumedAttr
NonNullAttr
OSConsumedAttr
PassObjectSizeAttr
ReleaseHandleAttr
UseHandleAttr
AMDGPUFlatWorkGroupSizeAttr
AMDGPUNumSGPRAttr
AMDGPUNumVGPRAttr
AMDGPUWavesPerEUAttr
ARMInterruptAttr
AVRInterruptAttr
AVRSignalAttr
AcquireCapabilityAttr
AcquiredAfterAttr
AcquiredBeforeAttr
AlignMac68kAttr
AlignNaturalAttr
AlignedAttr
AllocAlignAttr
AllocSizeAttr
AlwaysDestroyAttr
AlwaysInlineAttr
AnalyzerNoReturnAttr
AnyX86InterruptAttr
AnyX86NoCallerSavedRegistersAttr
ArcWeakrefUnavailableAttr
ArgumentWithTypeTagAttr
ArmBuiltinAliasAttr
ArtificialAttr
AsmLabelAttr
AssertCapabilityAttr
AssertExclusiveLockAttr
AssertSharedLockAttr
AssumeAlignedAttr
AssumptionAttr
AvailabilityAttr
BPFPreserveAccessIndexAttr
BTFDeclTagAttr
BlocksAttr
BuiltinAttr
C11NoReturnAttr
CFAuditedTransferAttr
CFGuardAttr
CFICanonicalJumpTableAttr
CFReturnsNotRetainedAttr
CFReturnsRetainedAttr
CFUnknownTransferAttr
CPUDispatchAttr
CPUSpecificAttr
CUDAConstantAttr
CUDADeviceAttr
CUDADeviceBuiltinSurfaceTypeAttr
CUDADeviceBuiltinTextureTypeAttr
CUDAGlobalAttr
CUDAHostAttr
CUDAInvalidTargetAttr
CUDALaunchBoundsAttr
CUDASharedAttr
CXX11NoReturnAttr
CallableWhenAttr
CallbackAttr
CapabilityAttr
CapturedRecordAttr
CleanupAttr
CmseNSEntryAttr
CodeSegAttr
ColdAttr
CommonAttr
ConstAttr
ConstInitAttr
ConstructorAttr
ConsumableAttr
ConsumableAutoCastAttr
ConsumableSetOnReadAttr
ConvergentAttr
DLLExportAttr
DLLExportStaticLocalAttr
DLLImportAttr
DLLImportStaticLocalAttr
DependerDeclsAttr
DeprecatedAttr
DestructorAttr
DiagnoseIfAttr
DisableSanitizerInstrumentationAttr
DisableTailCallsAttr
EmptyBasesAttr
EnableIfAttr
EnforceTCBAttr
EnforceTCBLeafAttr
EnumExtensibilityAttr
ErrorAttr
ExcludeFromExplicitInstantiationAttr
ExclusiveTrylockFunctionAttr
ExternalSourceSymbolAttr
FinalAttr
FlagEnumAttr
FlattenAttr
FormatAttr
FormatArgAttr
GNUInlineAttr
GuardedByAttr
GuardedVarAttr
HIPManagedAttr
HotAttr
IBActionAttr
IBOutletAttr
IBOutletCollectionAttr
InitPriorityAttr
InternalLinkageAttr
LTOVisibilityPublicAttr
LayoutVersionAttr
LeafAttr
LockReturnedAttr
LocksExcludedAttr
M68kInterruptAttr
MIGServerRoutineAttr
MSAllocatorAttr
MSInheritanceAttr
MSNoVTableAttr
MSP430InterruptAttr
MSStructAttr
MSVtorDispAttr
MaxFieldAlignmentAttr
MayAliasAttr
MicroMipsAttr
MinSizeAttr
MinVectorWidthAttr
Mips16Attr
MipsInterruptAttr
MipsLongCallAttr
MipsShortCallAttr
NSConsumesSelfAttr
NSErrorDomainAttr
NSReturnsAutoreleasedAttr
NSReturnsNotRetainedAttr
NakedAttr
NoAliasAttr
NoCommonAttr
NoDebugAttr
NoDestroyAttr
NoDuplicateAttr
NoInlineAttr
NoInstrumentFunctionAttr
NoMicroMipsAttr
NoMips16Attr
NoProfileFunctionAttr
NoReturnAttr
NoSanitizeAttr
NoSpeculativeLoadHardeningAttr
NoSplitStackAttr
NoStackProtectorAttr
NoThreadSafetyAnalysisAttr
NoThrowAttr
NoUniqueAddressAttr
NotTailCalledAttr
OMPAllocateDeclAttr
OMPCaptureNoInitAttr
OMPDeclareTargetDeclAttr
OMPDeclareVariantAttr
OMPThreadPrivateDeclAttr
OSConsumesThisAttr
OSReturnsNotRetainedAttr
OSReturnsRetainedAttr
OSReturnsRetainedOnNonZeroAttr
OSReturnsRetainedOnZeroAttr
ObjCBridgeAttr
ObjCBridgeMutableAttr
ObjCBridgeRelatedAttr
ObjCCompleteDefinitionAttr
ObjCExceptionAttr
ObjCExplicitProtocolImplAttr
ObjCExternallyRetainedAttr
ObjCIndependentClassAttr
ObjCMethodFamilyAttr
ObjCNSObjectAttr
ObjCPreciseLifetimeAttr
ObjCRequiresPropertyDefsAttr
ObjCRequiresSuperAttr
ObjCReturnsInnerPointerAttr
ObjCRootClassAttr
ObjCSubclassingRestrictedAttr
ObjCSuppressDirectPropertyAttr
OpenCLIntelReqdSubGroupSizeAttr
OpenCLKernelAttr
OptimizeNoneAttr
OverrideAttr
OwnerAttr
OwnershipAttr
PackedAttr
ParamTypestateAttr
PatchableFunctionEntryAttr
PointerAttr
PointerAuthStructAttr
PragmaClangBSSSectionAttr
PragmaClangDataSectionAttr
PragmaClangRelroSectionAttr
PragmaClangRodataSectionAttr
PragmaClangTextSectionAttr
PreferredNameAttr
PtGuardedByAttr
PtGuardedVarAttr
PureAttr
RISCVInterruptAttr
ReinitializesAttr
ReleaseCapabilityAttr
ReqdWorkGroupSizeAttr
RequiresCapabilityAttr
RestrictAttr
RetainAttr
ReturnTypestateAttr
ReturnsNonNullAttr
ReturnsTwiceAttr
SYCLKernelAttr
ScopedLockableAttr
SectionAttr
SelectAnyAttr
SentinelAttr
SetTypestateAttr
SharedTrylockFunctionAttr
SpeculativeLoadHardeningAttr
StandaloneDebugAttr
StrictFPAttr
SwiftAsyncAttr
SwiftAsyncErrorAttr
SwiftAsyncNameAttr
SwiftAttrAttr
SwiftBridgeAttr
SwiftBridgedTypedefAttr
SwiftErrorAttr
SwiftImportAsNonGenericAttr
SwiftImportPropertyAsAccessorsAttr
SwiftNameAttr
SwiftNewTypeAttr
SwiftPrivateAttr
SymbolMetadataFootnoteAttr
TLSModelAttr
TargetAttr
TestTypestateAttr
TransparentUnionAttr
TrivialABIAttr
TryAcquireCapabilityAttr
TypeTagForDatatypeAttr
TypeVisibilityAttr
TypedMemoryAttr
UnavailableAttr
UninitializedAttr
UnusedAttr
UsedAttr
UsingIfExistsAttr
UuidAttr
VTablePointerAuthenticationAttr
VecReturnAttr
VecTypeHintAttr
VisibilityAttr
WarnUnusedAttr
WarnUnusedResultAttr
WeakAttr
WeakImportAttr
WeakRefAttr
WebAssemblyExportNameAttr
WebAssemblyImportModuleAttr
WebAssemblyImportNameAttr
WorkGroupSizeHintAttr
X86ForceAlignArgPointerAttr
XRayInstrumentAttr
XRayLogArgsAttr
AArch64FarAddressSpaceAttr
AbiTagAttr
AliasAttr
AlignValueAttr
BuiltinAliasAttr
CalledOnceAttr
IFuncAttr
InitSegAttr
LoaderUninitializedAttr
LoopHintAttr
ModeAttr
NoBuiltinAttr
NoEscapeAttr
OMPCaptureKindAttr
OMPDeclareSimdDeclAttr
OMPReferencedVarAttr
ObjCBoxableAttr
ObjCClassStubAttr
ObjCDesignatedInitializerAttr
ObjCDirectAttr
ObjCDirectMembersAttr
ObjCNonLazyClassAttr
ObjCNonRuntimeProtocolAttr
ObjCRuntimeNameAttr
ObjCRuntimeVisibleAttr
ObjCSuppressDirectAttr
OpenCLAccessAttr
OverloadableAttr
RenderScriptKernelAttr
SwiftObjCMembersAttr
SwiftVersionedAttr
SwiftVersionedRemovalAttr
ThreadAttr
kind
range
inherited
implicit
lvalue
xvalue
prvalue
valueCategory
containsErrors
isDependent
isInstantiationDependent
isVariablyModified
containsUnexpandedPack
isImported
QualType
qualifiers
Decl
isImplicit
isInvalid
isUsed
isReferenced
isHidden
parentDeclContextId
TemplateArgument
fromDecl
CXXCtorInitializer
anyInit
baseInit
delegatingInit
Capture
byref
nested
associationKind
case
default
selected
TypeRequirement
SimpleRequirement
CompoundRequirement
NestedRequirement
noexcept
satisfied
value
includedFrom
offset
presumedFile
presumedLine
tokLen
spellingLoc
expansionLoc
qualType
desugaredQualType
typeAliasDeclId
name
isVirtual
isGenericLambda
isLambda
isEmpty
isAggregate
isStandardLayout
isTriviallyCopyable
isPOD
isTrivial
isPolymorphic
isAbstract
isLiteral
canPassInRegisters
hasUserDeclaredConstructor
hasConstexprNonCopyMoveConstructor
hasMutableFields
hasVariantMembers
canConstDefaultInit
defaultCtor
copyCtor
moveCtor
copyAssign
moveAssign
dtor
writtenAccess
isPackExpansion
decl
producesResult
regParm
trailingReturn
variadic
refQualifier
exceptionSpec
exceptionTypes
throwsAny
conditionEvaluatesTo
spelledAsLValue
sizeModifier
indexTypeQualifiers
attrLoc
numElements
vectorKind
altivec pixel
altivec bool
neon poly
fixed-length sve data vector
fixed-length sve predicate vector
transformKind
underlying_type
depth
isPack
undeduced
typeKeyword
decltype(auto)
isAlias
templateName
numExpansions
ownedTagDecl
macroName
isData
isFunction
mangledName
isInline
originalNamespace
nominatedNamespace
aliasedNamespace
storageClass
nrvo
modulePrivate
isParameterPack
isBitfield
hasInClassInitializer
explicitlyDeleted
explicitlyDefaulted
deleted
fixedUnderlyingType
scopedEnumTag
tagUsed
completeDefinition
definitionData
bases
defaultArg
hasBraces
synthesized
returnType
bounded
variance
covariant
contravariant
categoryDecl
control
implKind
propertyDecl
ivarDecl
capturesThis
encodedType
receiverKind
classType
super (instance)
superType
super (class)
callReturnType
propertyKind
isSuperReceiver
isMessagingGetter
isMessagingSetter
subscriptKind
dictionary
isFreeIvar
isArrow
__objc_yes
__objc_no
referencedDecl
foundReferencedDecl
nonOdrUseReason
unevaluated
discarded
typeSourceInfo
isPostfix
opcode
canOverflow
computeLHSType
computeResultType
referencedMemberDecl
isGlobal
isArray
isPlacement
initStyle
operatorNewDecl
operatorDeleteDecl
isArrayAsWritten
castKind
conversionFunc
isPartOfExplicitCast
argType
usesADL
lookups
labelDeclId
typeArg
adjustedTypeArg
resultDependent
typeAsWritten
ctorType
elidable
zeroing
hadMultipleCandidates
constructionKind
complete
delegating
non-virtual base
virtual base
cleanupsHaveSideEffects
cleanups
temp
extendingDecl
storageDuration
automatic
full expression
boundToLValueRef
member
hasTemplateKeyword
hasExplicitTemplateArgs
explicitTemplateArgs
hasInit
hasVar
hasElse
isConstexpr
isConsteval
constevalIsNegated
isGNURange
declId
sideEntry
targetLabelDeclId
isCatchAll
isNull
isNullptr
isExpr
<invalid>
text
renderKind
normal
bold
emphasized
monospaced
anchor
selfClosing
malformed
attrs
direction
in,out
param
paramIdx
positions
closeName
exists
trivial
nonTrivial
userProvided
needsImplicit
defaultedIsConstexpr
userDeclared
hasConstParam
implicitHasConstParam
needsOverloadResolution
defaultedIsDeleted
irrelevant
firstRedecl
previousDecl
isMacroArgExpansion
__main_argc_argv
_GUID_%08x_%04x_%04x_
_OBJC_CLASS_
OBJC_CLASS_$_
<lambda_
3U__s_GUID@@B
?A0x
?__N
<unnamed-type-
<unnamed-enum-
<unnamed-type-$S
?__K
$$$V
cannot mangle this dependent-length array yet
PEAXI@Z
PAXI@Z
<decltype-auto>
<auto>
__pass_dynamic_object_size
__pass_object_size
__clang
objc_selector
PAUocl_image1d_ro@@
PAUocl_image1d_array_ro@@
PAUocl_image1d_buffer_ro@@
PAUocl_image2d_ro@@
PAUocl_image2d_array_ro@@
PAUocl_image2d_depth_ro@@
PAUocl_image2d_array_depth_ro@@
PAUocl_image2d_msaa_ro@@
PAUocl_image2d_array_msaa_ro@@
PAUocl_image2d_msaa_depth_ro@@
PAUocl_image2d_array_msaa_depth_ro@@
PAUocl_image3d_ro@@
PAUocl_image1d_wo@@
PAUocl_image1d_array_wo@@
PAUocl_image1d_buffer_wo@@
PAUocl_image2d_wo@@
PAUocl_image2d_array_wo@@
PAUocl_image2d_depth_wo@@
PAUocl_image2d_array_depth_wo@@
PAUocl_image2d_msaa_wo@@
PAUocl_image2d_array_msaa_wo@@
PAUocl_image2d_msaa_depth_wo@@
PAUocl_image2d_array_msaa_depth_wo@@
PAUocl_image3d_wo@@
PAUocl_image1d_rw@@
PAUocl_image1d_array_rw@@
PAUocl_image1d_buffer_rw@@
PAUocl_image2d_rw@@
PAUocl_image2d_array_rw@@
PAUocl_image2d_depth_rw@@
PAUocl_image2d_array_depth_rw@@
PAUocl_image2d_msaa_rw@@
PAUocl_image2d_array_msaa_rw@@
PAUocl_image2d_msaa_depth_rw@@
PAUocl_image2d_array_msaa_depth_rw@@
PAUocl_image3d_rw@@
ocl_sampler
ocl_event
ocl_clkevent
ocl_queue
ocl_reserveid
_Half
cannot mangle this built-in %0 type yet
cannot mangle this decltype() yet
cannot mangle this 'auto' type yet
cannot mangle this deduced class template specialization type yet
cannot mangle this dependent address space type yet
cannot mangle this DependentExtInt type yet
cannot mangle this dependent name type yet
cannot mangle this dependent-sized extended vector type yet
cannot mangle this dependent template specialization type yet
cannot mangle this dependent-sized vector type yet
_UExtInt
$$A6
$$A8@@
Cannot mangle this matrix type yet
Cannot mangle this dependent-sized matrix type yet
Autoreleasing
Strong
Weak
__ObjC
KindOf
cannot mangle this pack expansion yet
ocl_pipe
_ASCLglobal
_ASCLdevice
_ASCLhost
_ASCLlocal
_ASCLconstant
_ASCLprivate
_ASCLgeneric
_ASCUdevice
_ASCUconstant
_ASCUshared
cannot mangle this substituted parameter pack yet
cannot mangle this template specialization type yet
cannot mangle this template type parameter type yet
cannot mangle this typeof(expression) yet
cannot mangle this typeof(type) yet
cannot mangle this unary transform type yet
cannot mangle this unresolved dependent type yet
__m64
__vector
cannot mangle this template argument yet
?__L
?__M
cannot mangle this conditional operator yet
__block_literal
$$J0
??_E
?$RT
??_R0
??_C@_
??__J
??_B
?$S1@
@4IA
??__
YAXXZ
?filt$
?fin$
??_S
??_7
??_8
?$TSS
@4HA
??_K
_CTA
??_R1
??_R2
??_R3
??_R4@
??_R4
NSObject
NSString
NSArray
NSMutableArray
NSDictionary
NSMutableDictionary
NSNumber
NSMutableSet
NSMutableOrderedSet
NSValue
stringWithString
initWithString
arrayWithArray
arrayWithObject
arrayWithObjects
initWithArray
initWithObjects
objectAtIndex
replaceObjectAtIndex
addObject
atIndex
dictionaryWithDictionary
dictionaryWithObject
forKey
dictionaryWithObjects
forKeys
dictionaryWithObjectsAndKeys
initWithDictionary
initWithObjectsAndKeys
objectForKey
setValue
numberWithChar
numberWithUnsignedChar
numberWithShort
numberWithUnsignedShort
numberWithInt
numberWithUnsignedInt
numberWithLong
numberWithUnsignedLong
numberWithLongLong
numberWithUnsignedLongLong
numberWithFloat
numberWithDouble
numberWithBool
numberWithInteger
numberWithUnsignedInteger
initWithChar
initWithUnsignedChar
initWithShort
initWithUnsignedShort
initWithInt
initWithUnsignedInt
initWithLong
initWithUnsignedLong
initWithLongLong
initWithUnsignedLongLong
initWithFloat
initWithDouble
initWithBool
initWithInteger
initWithUnsignedInteger
BOOL
NSInteger
NSUInteger
final(
num_threads(
safelen(
simdlen(
sizes(
full
partial
allocator(
collapse(
detach(
default(
proc_bind(
unified_address
unified_shared_memory
reverse_offload
dynamic_allocators
atomic_default_mem_order(
schedule(
ordered
nowait
untied
nogroup
mergeable
read
write
update
capture
seq_cst
acq_rel
acquire
release
relaxed
threads
simd
device(
num_teams(
thread_limit(
priority(
grainsize(
num_tasks(
hint(
init(
prefer_type(
target
targetsync
use(
destroy
novariants
nocontext
allocate
private
firstprivate
lastprivate
shared
reduction(
task_reduction(
in_reduction(
linear
aligned
copyin
copyprivate
depend(
map(
dist_schedule(
defaultmap(
use_device_ptr
use_device_addr
is_device_ptr
nontemporal
order(
inclusive
exclusive
uses_allocators(
affinity
filter(
score(
wint_t
__int32
__int64
intmax_t
ssize_t
unsigned __int32
unsigned __int64
uintmax_t
unsigned ptrdiff_t
const unichar *
wchar_t *
^[[:space:]]*(private|public|sensitive|mask\.[^[:space:],}]*)[[:space:]]*(,|})
sensitive
*** Dumping AST Record Layout
Type: 
Layout: 
<ASTRecordLayout
  Size:
  DataSize:
  Alignment:
  PreferredAlignment:
  FieldOffsets: [
 (empty)
 vtable pointer)
 vftable pointer)
(primary base)
(base)
 vbtable pointer)
(vtordisp for vbase 
(primary virtual base)
(virtual base)
[sizeof=
, dsize=
, align=
, preferredalign=
 nvsize=
, nvalign=
, preferrednvalign=
%10lld | 
           | 
*** Stmt/Expr Stats:
 stmts/exprs total.
    
 each (
 bytes)
Total bytes = 
${:uid}
GCCAsmStmt
MSAsmStmt
BreakStmt
CXXCatchStmt
CXXForRangeStmt
CXXTryStmt
CapturedStmt
CompoundStmt
ContinueStmt
CoreturnStmt
CoroutineBodyStmt
DeclStmt
DoStmt
ForStmt
GotoStmt
IfStmt
IndirectGotoStmt
MSDependentExistsStmt
NullStmt
OMPCanonicalLoop
OMPAtomicDirective
OMPBarrierDirective
OMPCancelDirective
OMPCancellationPointDirective
OMPCriticalDirective
OMPDepobjDirective
OMPDispatchDirective
OMPFlushDirective
OMPInteropDirective
OMPDistributeDirective
OMPDistributeParallelForDirective
OMPDistributeParallelForSimdDirective
OMPDistributeSimdDirective
OMPForDirective
OMPForSimdDirective
OMPMasterTaskLoopDirective
OMPMasterTaskLoopSimdDirective
OMPParallelForDirective
OMPParallelForSimdDirective
OMPParallelMasterTaskLoopDirective
OMPParallelMasterTaskLoopSimdDirective
OMPSimdDirective
OMPTargetParallelForSimdDirective
OMPTargetSimdDirective
OMPTargetTeamsDistributeDirective
OMPTargetTeamsDistributeParallelForDirective
OMPTargetTeamsDistributeParallelForSimdDirective
OMPTargetTeamsDistributeSimdDirective
OMPTaskLoopDirective
OMPTaskLoopSimdDirective
OMPTeamsDistributeDirective
OMPTeamsDistributeParallelForDirective
OMPTeamsDistributeParallelForSimdDirective
OMPTeamsDistributeSimdDirective
OMPTileDirective
OMPUnrollDirective
OMPMaskedDirective
OMPMasterDirective
OMPMetaDirective
OMPOrderedDirective
OMPParallelDirective
OMPParallelMasterDirective
OMPParallelSectionsDirective
OMPScanDirective
OMPSectionDirective
OMPSectionsDirective
OMPSingleDirective
OMPTargetDataDirective
OMPTargetDirective
OMPTargetEnterDataDirective
OMPTargetExitDataDirective
OMPTargetParallelDirective
OMPTargetParallelForDirective
OMPTargetTeamsDirective
OMPTargetUpdateDirective
OMPTaskDirective
OMPTaskgroupDirective
OMPTaskwaitDirective
OMPTaskyieldDirective
OMPTeamsDirective
ObjCAtCatchStmt
ObjCAtFinallyStmt
ObjCAtSynchronizedStmt
ObjCAtThrowStmt
ObjCAtTryStmt
ObjCAutoreleasePoolStmt
ObjCForCollectionStmt
ReturnStmt
SEHExceptStmt
SEHFinallyStmt
SEHLeaveStmt
SEHTryStmt
CaseStmt
DefaultStmt
SwitchStmt
AttributedStmt
BinaryConditionalOperator
ConditionalOperator
AddrLabelExpr
ArrayInitIndexExpr
ArrayInitLoopExpr
ArraySubscriptExpr
ArrayTypeTraitExpr
AsTypeExpr
AssumptionExpr
AtomicExpr
BinaryOperator
CompoundAssignOperator
BlockExpr
BoundsCheckExpr
CXXBindTemporaryExpr
CXXBoolLiteralExpr
CXXConstructExpr
CXXTemporaryObjectExpr
CXXDefaultArgExpr
CXXDefaultInitExpr
CXXDeleteExpr
CXXDependentScopeMemberExpr
CXXFoldExpr
CXXInheritedCtorInitExpr
CXXNewExpr
CXXNoexceptExpr
CXXNullPtrLiteralExpr
CXXPseudoDestructorExpr
CXXRewrittenBinaryOperator
CXXScalarValueInitExpr
CXXStdInitializerListExpr
CXXThisExpr
CXXThrowExpr
CXXTypeidExpr
CXXUnresolvedConstructExpr
CXXUuidofExpr
CallExpr
CUDAKernelCallExpr
CXXMemberCallExpr
CXXOperatorCallExpr
UserDefinedLiteral
BuiltinBitCastExpr
CStyleCastExpr
CXXFunctionalCastExpr
CXXAddrspaceCastExpr
CXXConstCastExpr
CXXDynamicCastExpr
CXXReinterpretCastExpr
CXXStaticCastExpr
ObjCBridgedCastExpr
ImplicitCastExpr
CharacterLiteral
ChooseExpr
CompoundLiteralExpr
ConceptSpecializationExpr
ConvertVectorExpr
CoawaitExpr
CoyieldExpr
DeclRefExpr
DependentCoawaitExpr
DependentScopeDeclRefExpr
DesignatedInitExpr
DesignatedInitUpdateExpr
ExpressionTraitExpr
ExtVectorElementExpr
FirebloomPointerPromotionExpr
FixedPointLiteral
FloatingLiteral
ForgePtrExpr
ConstantExpr
ExprWithCleanups
FunctionParmPackExpr
GNUNullExpr
GenericSelectionExpr
GetBoundExpr
ImaginaryLiteral
ImplicitValueInitExpr
InitListExpr
IntegerLiteral
LambdaExpr
MSPropertyRefExpr
MSPropertySubscriptExpr
MaterializeSequenceExpr
MaterializeTemporaryExpr
MatrixSubscriptExpr
MemberExpr
NoInitExpr
OMPArraySectionExpr
OMPArrayShapingExpr
OMPIteratorExpr
ObjCAvailabilityCheckExpr
ObjCBoolLiteralExpr
ObjCEncodeExpr
ObjCIndirectCopyRestoreExpr
ObjCIsaExpr
ObjCIvarRefExpr
ObjCMessageExpr
ObjCArrayLiteral
ObjCBoxedExpr
ObjCDictionaryLiteral
ObjCStringLiteral
ObjCPropertyRefExpr
ObjCProtocolExpr
ObjCSelectorExpr
ObjCSubscriptRefExpr
OffsetOfExpr
OpaqueValueExpr
UnresolvedLookupExpr
UnresolvedMemberExpr
PackExpansionExpr
ParenExpr
ParenListExpr
PredefinedExpr
PseudoObjectExpr
RecoveryExpr
RequiresExpr
SYCLUniqueStableNameExpr
ShuffleVectorExpr
SizeOfPackExpr
SourceLocExpr
StmtExpr
StringLiteral
SubstNonTypeTemplateParmExpr
SubstNonTypeTemplateParmPackExpr
TerminatedByFromIndexableExpr
TerminatedByToIndexableExpr
TypeTraitExpr
TypoExpr
UnaryExprOrTypeTraitExpr
UnaryOperator
VAArgExpr
LabelStmt
WhileStmt
asm 
volatile 
__asm 
break;
<<<NULL STATEMENT>>>
<null expr>
try 
continue;
while (
__if_exists (
__if_not_exists (
#pragma omp atomic
#pragma omp barrier
#pragma omp cancel 
#pragma omp cancellation point 
#pragma omp critical
#pragma omp depobj
#pragma omp dispatch
#pragma omp flush
#pragma omp interop
#pragma omp distribute
#pragma omp distribute parallel for
#pragma omp distribute parallel for simd
#pragma omp distribute simd
#pragma omp for
#pragma omp for simd
#pragma omp master taskloop
#pragma omp master taskloop simd
#pragma omp parallel for
#pragma omp parallel for simd
#pragma omp parallel master taskloop
#pragma omp parallel master taskloop simd
#pragma omp simd
#pragma omp target parallel for simd
#pragma omp target simd
#pragma omp target teams distribute
#pragma omp target teams distribute parallel for
#pragma omp target teams distribute parallel for simd
#pragma omp target teams distribute simd
#pragma omp taskloop
#pragma omp taskloop simd
#pragma omp teams distribute
#pragma omp teams distribute parallel for
#pragma omp teams distribute parallel for simd
#pragma omp teams distribute simd
#pragma omp tile
#pragma omp unroll
#pragma omp masked
#pragma omp master
#pragma omp metadirective
#pragma omp ordered
#pragma omp parallel
#pragma omp parallel master
#pragma omp parallel sections
#pragma omp scan
#pragma omp section
#pragma omp sections
#pragma omp single
#pragma omp target data
#pragma omp target
#pragma omp target enter data
#pragma omp target exit data
#pragma omp target parallel
#pragma omp target parallel for
#pragma omp target teams
#pragma omp target update
#pragma omp task
#pragma omp taskgroup
#pragma omp taskwait
#pragma omp taskyield
#pragma omp teams
@catch (...) { /* todo */ } 
@synchronized (
@catch(
@autoreleasepool
 in 
<<unknown expr type>>
__finally 
__leave;
__try 
default:
switch (
 ?: 
__builtin_astype(
__c11_atomic_init(
__c11_atomic_load(
__c11_atomic_store(
__c11_atomic_exchange(
__c11_atomic_compare_exchange_strong(
__c11_atomic_compare_exchange_weak(
__c11_atomic_fetch_add(
__c11_atomic_fetch_sub(
__c11_atomic_fetch_and(
__c11_atomic_fetch_or(
__c11_atomic_fetch_xor(
__c11_atomic_fetch_max(
__c11_atomic_fetch_min(
__atomic_load(
__atomic_load_n(
__atomic_store(
__atomic_store_n(
__atomic_exchange(
__atomic_exchange_n(
__atomic_compare_exchange(
__atomic_compare_exchange_n(
__atomic_fetch_add(
__atomic_fetch_sub(
__atomic_fetch_and(
__atomic_fetch_or(
__atomic_fetch_xor(
__atomic_fetch_nand(
__atomic_add_fetch(
__atomic_sub_fetch(
__atomic_and_fetch(
__atomic_or_fetch(
__atomic_xor_fetch(
__atomic_max_fetch(
__atomic_min_fetch(
__atomic_nand_fetch(
__opencl_atomic_init(
__opencl_atomic_load(
__opencl_atomic_store(
__opencl_atomic_exchange(
__opencl_atomic_compare_exchange_strong(
__opencl_atomic_compare_exchange_weak(
__opencl_atomic_fetch_add(
__opencl_atomic_fetch_sub(
__opencl_atomic_fetch_and(
__opencl_atomic_fetch_or(
__opencl_atomic_fetch_xor(
__opencl_atomic_fetch_min(
__opencl_atomic_fetch_max(
__atomic_fetch_min(
__atomic_fetch_max(
delete 
<forwarded>
throw 
__uuidof(
>>>(
-0123456789
__builtin_bit_cast(
__builtin_choose_expr(
__builtin_convertvector(
co_await 
co_yield 
/*base*/
/*updater*/
__builtin_unsafe_forge_bidi_indexable(
__builtin_unsafe_forge_single(
__null
_Generic(
__builtin_get_pointer_
lower
upper
_bound(
/*implicit*/
/*implicit*/(
Ui16
*this
 mutable
/*no init*/
iterator(
@available(...)
@encode(
->isa
.isa
Super
super.
@protocol(
@selector(
__builtin_offsetof(
<recovery-expr>(
requires 
<<error-expression>>
__builtin_sycl_unique_stable_name(
__builtin_shufflevector(
sizeof...(
__builtin_unsafe_terminated_by_from_indexable(
__alignof
__builtin_va_arg(
(no value)
(signed char)
(unsigned char)
(null template argument)
<<<NULL>>>
ArmMveStrictPolymorphism
CmseNSCall
NoDeref
ObjCGC
ObjCInertUnsafeUnretained
ObjCKindOf
OpenCLConstantAddressSpace
OpenCLGenericAddressSpace
OpenCLGlobalAddressSpace
OpenCLGlobalDeviceAddressSpace
OpenCLGlobalHostAddressSpace
OpenCLLocalAddressSpace
OpenCLPrivateAddressSpace
PointerAuth
Ptr32
Ptr64
PtrAutoAttr
PtrAutoNullTerminatedAttr
SPtr
TypeNonNull
TypeNullUnspecified
TypeNullable
TypeNullableResult
UPtr
XnuUsageSemantics
FallThrough
Likely
MustTail
OpenCLUnrollHint
Suppress
Unlikely
AnalyzerSuppress
NoMerge
AArch64VectorPcs
AcquireHandle
AnyX86NoCfCheck
CDecl
FastCall
IntelOclBicc
LifetimeBound
MSABI
ObjCOwnership
Pascal
PreserveAll
PreserveMost
RegCall
StdCall
SwiftAsyncCall
SwiftCall
SysVABI
ThisCall
VectorCall
SwiftAsyncContext
SwiftContext
SwiftErrorResult
SwiftIndirectResult
Annotate
CFConsumed
CarriesDependency
NSConsumed
NonNull
OSConsumed
PassObjectSize
ReleaseHandle
UseHandle
AMDGPUFlatWorkGroupSize
AMDGPUNumSGPR
AMDGPUNumVGPR
AMDGPUWavesPerEU
ARMInterrupt
AVRInterrupt
AVRSignal
AcquireCapability
AcquiredAfter
AcquiredBefore
AlignMac68k
AlignNatural
Aligned
AllocAlign
AllocSize
AlwaysDestroy
AlwaysInline
AnalyzerNoReturn
AnyX86Interrupt
AnyX86NoCallerSavedRegisters
ArcWeakrefUnavailable
ArgumentWithTypeTag
ArmBuiltinAlias
Artificial
AsmLabel
AssertCapability
AssertExclusiveLock
AssertSharedLock
AssumeAligned
BPFPreserveAccessIndex
Blocks
C11NoReturn
CFAuditedTransfer
CFGuard
CFICanonicalJumpTable
CFUnknownTransfer
CPUDispatch
CPUSpecific
CUDAConstant
CUDADevice
CUDADeviceBuiltinSurfaceType
CUDADeviceBuiltinTextureType
CUDAGlobal
CUDAHost
CUDAInvalidTarget
CUDALaunchBounds
CUDAShared
CXX11NoReturn
CallableWhen
Callback
Capability
CapturedRecord
Cleanup
CmseNSEntry
CodeSeg
Cold
Common
Const
ConstInit
Constructor
Consumable
ConsumableAutoCast
ConsumableSetOnRead
Convergent
DLLExport
DLLExportStaticLocal
DLLImport
DLLImportStaticLocal
DependerDecls
Deprecated
Destructor
DiagnoseIf
DisableSanitizerInstrumentation
DisableTailCalls
EmptyBases
EnableIf
EnforceTCB
EnforceTCBLeaf
Error
ExcludeFromExplicitInstantiation
ExclusiveTrylockFunction
ExternalSourceSymbol
Final
Flatten
Format
FormatArg
GNUInline
GuardedBy
GuardedVar
HIPManaged
IBOutletCollection
InitPriority
InternalLinkage
LTOVisibilityPublic
LayoutVersion
Leaf
LockReturned
LocksExcluded
M68kInterrupt
MIGServerRoutine
MSAllocator
MSInheritance
MSNoVTable
MSP430Interrupt
MSStruct
MSVtorDisp
MaxFieldAlignment
MayAlias
MicroMips
MinSize
MinVectorWidth
Mips16
MipsInterrupt
MipsLongCall
MipsShortCall
NSConsumesSelf
NSReturnsAutoreleased
Naked
NoAlias
NoCommon
NoDebug
NoDestroy
NoDuplicate
NoInline
NoInstrumentFunction
NoMicroMips
NoMips16
NoProfileFunction
NoReturn
NoSanitize
NoSpeculativeLoadHardening
NoSplitStack
NoStackProtector
NoThreadSafetyAnalysis
NoThrow
NoUniqueAddress
NotTailCalled
OMPAllocateDecl
OMPCaptureNoInit
OMPDeclareTargetDecl
OMPDeclareVariant
OMPThreadPrivateDecl
OSConsumesThis
OSReturnsNotRetained
OSReturnsRetained
OSReturnsRetainedOnNonZero
OSReturnsRetainedOnZero
ObjCBridge
ObjCBridgeMutable
ObjCBridgeRelated
ObjCCompleteDefinition
ObjCException
ObjCExplicitProtocolImpl
ObjCExternallyRetained
ObjCIndependentClass
ObjCMethodFamily
ObjCNSObject
ObjCPreciseLifetime
ObjCRequiresPropertyDefs
ObjCRequiresSuper
ObjCReturnsInnerPointer
ObjCRootClass
ObjCSubclassingRestricted
ObjCSuppressDirectProperty
OpenCLIntelReqdSubGroupSize
OpenCLKernel
OptimizeNone
Override
Ownership
Packed
ParamTypestate
PatchableFunctionEntry
PointerAuthStruct
PragmaClangBSSSection
PragmaClangDataSection
PragmaClangRelroSection
PragmaClangRodataSection
PragmaClangTextSection
PreferredName
PtGuardedBy
PtGuardedVar
Pure
RISCVInterrupt
Reinitializes
ReleaseCapability
ReqdWorkGroupSize
RequiresCapability
Restrict
Retain
ReturnTypestate
ReturnsNonNull
ReturnsTwice
SYCLKernel
ScopedLockable
SelectAny
SetTypestate
SharedTrylockFunction
SpeculativeLoadHardening
StandaloneDebug
StrictFP
SwiftAsync
SwiftAsyncError
SwiftAsyncName
SwiftAttr
SwiftBridgedTypedef
SwiftError
SwiftImportPropertyAsAccessors
SwiftNewType
SymbolMetadataFootnote
TLSModel
Target
TestTypestate
TransparentUnion
TrivialABI
TryAcquireCapability
TypeTagForDatatype
TypeVisibility
TypedMemory
Unavailable
Uninitialized
Unused
Used
UsingIfExists
Uuid
VTablePointerAuthentication
VecReturn
VecTypeHint
WarnUnused
WarnUnusedResult
WeakImport
WeakRef
WebAssemblyExportName
WebAssemblyImportModule
WebAssemblyImportName
WorkGroupSizeHint
X86ForceAlignArgPointer
XRayInstrument
XRayLogArgs
AArch64FarAddressSpace
AbiTag
Alias
AlignValue
BuiltinAlias
CalledOnce
IFunc
InitSeg
LoaderUninitialized
LoopHint
NoBuiltin
OMPCaptureKind
OMPDeclareSimdDecl
OMPReferencedVar
ObjCBoxable
ObjCClassStub
ObjCDesignatedInitializer
ObjCDirect
ObjCDirectMembers
ObjCNonLazyClass
ObjCNonRuntimeProtocol
ObjCRuntimeName
ObjCRuntimeVisible
ObjCSuppressDirect
OpenCLAccess
Overloadable
RenderScriptKernel
SwiftVersioned
SwiftVersionedRemoval
Thread
Attr
 Inherited
 Implicit
TemplateArgument
 contains-errors
 lvalue
 xvalue
 bitfield
 objcproperty
 objcsubscript
 vectorcomponent
 matrixcomponent
LocInfo Type
 sugar
 dependent
 instantiation_dependent
 variably_modified
 contains_unexpanded_pack
 imported
QualType
 parent 
 implicit
 used
 referenced
 invalid
 constexpr
 consteval
 <undeserialized declarations>
CXXCtorInitializer
capture
 byref
 nested
<<<NULL>>> OMPClause
Clause
 <implicit>
case 
default
 selected
<<<NULL>>> Requirement
TypeRequirement
SimpleRequirement
CompoundRequirement
NestedRequirement
 noexcept
 satisfied
 unsatisfied
None
Indeterminate
Int 
Float 
FixedPoint 
Vector length=
element
elements
ComplexInt 
ComplexFloat 
LValue <todo>
Array size=
filler
Struct
Union
MemberPointer <todo>
AddrLabelDiff <todo>
<invalid sloc>
<not a builtin command>
 FPContractMode=
 RoundingMode=
 FPExceptionMode=
 AllowFEnvAccess=
 AllowFPReassociate=
 NoHonorNaNs=
 NoHonorInfs=
 NoSignedZero=
 AllowReciprocal=
 AllowApproxFunc=
 Text="
 Name="
 RenderNormal
 RenderBold
 RenderMonospaced
 RenderEmphasized
 RenderAnchor
 Arg[
 Attrs: 
 SelfClosing
 explicitly
 implicitly
 Param="
 ParamIndex=
 Position=<
" CloseName="
 null
 type
 decl
 nullptr
 integral 
 template 
 template expansion 
 expr
 pack
 has_init
 has_var
 has_else
 side_entry
 gnu_range
 adl
 part_of_explicit_cast
 non_odr_use_unevaluated
 non_odr_use_constant
 non_odr_use_discarded
ADL) = '
 empty
 isFreeIvar
 field 
 result_dependent
postfix
prefix
 cannot overflow
' ComputeLHSTy=
 ComputeResultTy=
 this
 functional cast to 
 list
 elidable
 std::initializer_list
 zeroing
 (CXXTemporary
 array
 extended by 
 selector=
 class=
 super (instance)
 super (class)
 catch all
 Kind=MethodRef Getter="
(null)
" Setter="
 Kind=PropertyRef Property="
 super
 Messaging=
Getter&Setter
Getter
Setter
 Kind=ArraySubscript GetterForArray="
 Kind=DictionarySubscript GetterForDictionary="
" SetterForArray="
" SetterForDictionary="
 begin 
 end 
 step 
 lower
 upper
 <Unbind>
 <Bind>
 written as lvalue reference
 static
 altivec
 altivec pixel
 altivec bool
 neon
 neon poly
 fixed-length sve data vector
 fixed-length sve predicate vector
 noreturn
 produces_result
 regparm 
 trailing_return
 variadic
 underlying_type
 depth 
 index 
 decltype(auto)
 undeduced
 alias
 expansions 
 __module_private__
 definition
 inline
 virtual
 pure
 default
_delete
 delete
 trivial
 noexcept-unevaluated 
 noexcept-uninstantiated 
 <<<NULL params x 
 mangling 
 tls
 tls_dynamic
 nrvo
 cinit
 callinit
 listinit
 destroyed
 nothrow
 openmp_standalone_directive
 combiner
 initializer
 omp_priv = 
 omp_priv ()
original
 typename
 C++
 synthesize
 none
 protected
 public
 package
 covariant
 contravariant
 bounded
 required
 optional
 assign
 readwrite
 retain
 copy
 nonatomic
 atomic
 weak
 strong
 unsafe_unretained
 direct
 captures_this
 first 
 prev 
towardzero
tonearest
upward
downward
tonearestaway
 AddressDiscriminated
 Pointer
 Data
 AAPCS
 AAPCS_VFP
 IRQ
 FIQ
 SWI
 ABORT
 UNDEF
 Generic
 IsPointer
 IsLiteralLabel
 Unavailable
 Strict
 ByRef
 nocf
 Unknown
 Consumed
 Unconsumed
 IsDeref
 DT_Error
 DT_Warning
 ArgDependent
 Closed
 Open
 GeneratedDeclaration
 BestCase
 sw0
 sw1
 hw0
 hw1
 hw2
 hw3
 hw4
 hw5
 eic
 OMPNullMemAlloc
 OMPDefaultMemAlloc
 OMPLargeCapMemAlloc
 OMPConstMemAlloc
 OMPHighBWMemAlloc
 OMPLowLatMemAlloc
 OMPCGroupMemAlloc
 OMPPTeamMemAlloc
 OMPThreadMemAlloc
 OMPUserDefinedMemAlloc
 MT_To
 MT_Link
 DT_Host
 DT_NoHost
 DT_Any
 Target
 TargetSync
 Target_TargetSync
 OMF_None
 OMF_alloc
 OMF_copy
 OMF_init
 OMF_mutableCopy
 OMF_new
 user
 supervisor
 machine
 None
 SwiftPrivate
 NotSwiftPrivate
 NonNullError
 ZeroArgument
 NonZeroArgument
 NullResult
 ZeroResult
 NonZeroResult
 NK_Struct
 NK_Enum
 LayoutCompatible
 MustBeNull
 Default
 Hidden
 Protected
 TMO_Malloc
 TMO_Calloc
 TMO_Realloc
 TMO_AlignedAlloc
 TMO_PosixMemalign
 IR_None
 IR_ARCForbiddenType
 IR_ForbiddenWeak
 IR_IgnoredWeak
 IR_ARCForbiddenConversion
 IR_ARCInitReturnsUnrelated
 IR_ARCFieldWithOwnership
 DefaultKey
 NoKey
 ProcessDependent
 ProcessIndependent
 DefaultAddressDiscrimination
 NoAddressDiscrimination
 AddressDiscrimination
 DefaultExtraDiscrimination
 NoExtraDiscrimination
 TypeDiscrimination
 CustomDiscrimination
 Vectorize
 VectorizeWidth
 Interleave
 InterleaveCount
 Unroll
 UnrollCount
 UnrollAndJam
 UnrollAndJamCount
 PipelineDisabled
 PipelineInitiationInterval
 Distribute
 VectorizePredicate
 Enable
 Disable
 Numeric
 FixedWidth
 ScalableWidth
 AssumeSafety
 Full
 BS_Undefined
 BS_Inbranch
 BS_Notinbranch
 IsReplacedByActive
also in 
cleanup 
Overrides: [ 
DefinitionData
 parsing_base_specifiers
 lambda
 is_anonymous
 pass_in_registers
 aggregate
 standard_layout
 trivially_copyable
 pod
 polymorphic
 abstract
 literal
 has_user_declared_ctor
 has_constexpr_non_copy_move_ctor
 has_mutable_fields
 has_variant_members
 can_const_default_init
DefaultConstructor
 exists
 non_trivial
 user_provided
 needs_implicit
 defaulted_is_constexpr
CopyConstructor
 simple
 user_declared
 has_const_param
 needs_overload_resolution
 defaulted_is_deleted
 implicit_has_const_param
MoveConstructor
CopyAssignment
MoveAssignment
 irrelevant
target 
nominated 
constructed 
typename
class
struct
__interface
union
enum
Adjusted
Decayed
ConstantArray
DependentSizedArray
IncompleteArray
VariableArray
Atomic
Attributed
BlockPointer
Builtin
Complex
Decltype
Auto
DeducedTemplateSpecialization
DependentAddressSpace
DependentExtInt
DependentName
DependentSizedExtVector
DependentTemplateSpecialization
DependentVector
DynamicCountPointer
DynamicRangePointer
Elaborated
ExtInt
FunctionNoProto
FunctionProto
InjectedClassName
MacroQualified
ConstantMatrix
DependentSizedMatrix
MemberPointer
ObjCObjectPointer
ObjCObject
ObjCInterface
ObjCTypeParam
PackExpansion
Paren
Pipe
Pointer
LValueReference
RValueReference
SubstTemplateTypeParmPack
SubstTemplateTypeParm
Enum
Record
TemplateSpecialization
TemplateTypeParm
TypeOfExpr
TypeOf
Typedef
UnaryTransform
UnresolvedUsing
ValueTerminated
Vector
ExtVector
long long
unsigned char
unsigned short
unsigned int
unsigned long
unsigned long long
unsigned __int128
__fp16
long double
short _Accum
_Accum
long _Accum
unsigned short _Accum
unsigned _Accum
unsigned long _Accum
short _Fract
_Fract
long _Fract
unsigned short _Fract
unsigned _Fract
unsigned long _Fract
_Sat short _Accum
_Sat _Accum
_Sat long _Accum
_Sat unsigned short _Accum
_Sat unsigned _Accum
_Sat unsigned long _Accum
_Sat short _Fract
_Sat _Fract
_Sat long _Fract
_Sat unsigned short _Fract
_Sat unsigned _Fract
_Sat unsigned long _Fract
__wchar_t
char8_t
<overloaded function type>
<bound member function type>
<pseudo-object type>
<dependent type>
<unknown type>
<ARC unbridged cast type>
<builtin fn type>
__read_only image1d_t
__read_only image1d_array_t
__read_only image1d_buffer_t
__read_only image2d_t
__read_only image2d_array_t
__read_only image2d_depth_t
__read_only image2d_array_depth_t
__read_only image2d_msaa_t
__read_only image2d_array_msaa_t
__read_only image2d_msaa_depth_t
__read_only image2d_array_msaa_depth_t
__read_only image3d_t
__write_only image1d_t
__write_only image1d_array_t
__write_only image1d_buffer_t
__write_only image2d_t
__write_only image2d_array_t
__write_only image2d_depth_t
__write_only image2d_array_depth_t
__write_only image2d_msaa_t
__write_only image2d_array_msaa_t
__write_only image2d_msaa_depth_t
__write_only image2d_array_msaa_depth_t
__write_only image3d_t
__read_write image1d_t
__read_write image1d_array_t
__read_write image1d_buffer_t
__read_write image2d_t
__read_write image2d_array_t
__read_write image2d_depth_t
__read_write image2d_array_depth_t
__read_write image2d_msaa_t
__read_write image2d_array_msaa_t
__read_write image2d_msaa_depth_t
__read_write image2d_array_msaa_depth_t
__read_write image3d_t
<incomplete matrix index type>
<OpenMP array section type>
<OpenMP array shaping type>
<OpenMP iterator type>
cdecl
stdcall
fastcall
thiscall
pascal
vectorcall
ms_abi
sysv_abi
regcall
aapcs
aapcs-vfp
aarch64_vector_pcs
intel_ocl_bicc
spir_function
opencl_kernel
swiftcall
swiftasynccall
preserve_most
preserve_all
NSObject
NSCopying
 __attribute__((nothrow))
swift_context
swift_async_context
swift_error_result
swift_indirect_result
__ptrauth(
__global
__local
__private
__constant
__generic
__global_device
__global_host
__device__
__constant__
__shared__
__sptr __ptr32
__uptr __ptr32
__ptr64
__attribute__((address_space(
NULL TYPE
_Atomic(
_Complex 
decltype(
unsigned 
_ExtInt(
__vector __pixel 
__vector __bool 
__vector 
__attribute__((neon_vector_type(
))) 
__attribute__((neon_polyvector_type(
__attribute__((__vector_size__(
 * sizeof(
)))) 
__attribute__((__arm_sve_vector_bits__(
 * 8
) * 8
 __sized_by(
 __counted_by(
 __ended_by(
 /* __started_by(
) */ 
 __attribute__((matrix_type(
read_only 
write_only 
pipe 
__unsafe_indexable
__single
__indexable
__bidi_indexable
std::function<
lambda
anonymous
unnamed
(anonymous namespace)::
type-parameter-
typeof 
typeof(
__underlying_type(
__terminated_by(
) * 8))) 
__counted_by(
 [[clang::lifetimebound]]
 __attribute__((
pcs(
"aapcs"
"aapcs-vfp"
inteloclbicc
 __attribute__((address_space(
 __attribute__((ext_vector_type(
 __attribute__((stdcall))
 __attribute__((fastcall))
 __attribute__((thiscall))
 __attribute__((vectorcall))
 __attribute__((pascal))
 __attribute__((pcs("aapcs")))
 __attribute__((pcs("aapcs-vfp")))
__attribute__((aarch64_vector_pcs))
 __attribute__((intel_ocl_bicc))
 __attribute__((ms_abi))
 __attribute__((sysv_abi))
 __attribute__((regcall))
 __attribute__((swiftcall))
__attribute__((swiftasynccall))
 __attribute__((preserve_most))
 __attribute__((preserve_all))
 __attribute__((noreturn))
 __attribute__((cmse_nonsecure_call))
 __attribute__((ns_returns_retained))
 __attribute__((regparm (
 __attribute__((no_caller_saved_registers))
 __attribute__((nocf_check))
__attribute__((ns_consumed)) 
__attribute__((noescape)) 
 [scalar deleting]
VFTable indices for 
 entry
 entries
 -- accessible via 
vbtable index 
vfptr at offset 
%4llu | 
Original map
Construction vtable for ('
) in '
Vtable for '
 entries).
%4d | 
vcall_offset (
vbase_offset (
offset_to_top (
 RTTI
 [pure]
 [deleted]
       [return adjustment: 
 non-virtual
 vbase offset offset
       [this adjustment: 
 vcall offset offset
() [complete]
() [deleting]
[unused] 
       -- (
) vtable address --
Virtual base offset offsets for '
Thunks for '
return adjustment: 
       
this adjustment: 
 [complete]
 [deleting]
VTable indices for '
 method: 
VFTable for 
() [scalar deleting]
Unexpected vftable component type %0 for component number %1
' in 
[return adjustment (to type '
'): 
vbptr at offset 
vbase #
 non-virtual]
[this adjustment: 
vtordisp at 
vbptr at 
 to the left,
 vboffset at 
 in the vbtable, 
allocate
assumes
barrier
begin assumes
begin declare target
begin declare variant
cancellation point
critical
declare mapper
declare reduction
depobj
distribute parallel do
distribute parallel do simd
distribute parallel for
distribute parallel for simd
distribute simd
do simd
end assumes
end declare target
end declare variant
end do
end do simd
end sections
end single
end workshare
flush
for simd
master
master taskloop
master taskloop simd
metadirective
ordered
parallel
parallel do
parallel do simd
parallel for
parallel for simd
parallel master
parallel master taskloop
parallel master taskloop simd
parallel sections
parallel workshare
sections
simd
target data
target enter data
target exit data
target parallel
target parallel do
target parallel do simd
target parallel for
target parallel for simd
target simd
target teams
target teams distribute
target teams distribute parallel do
target teams distribute parallel do simd
target teams distribute parallel for
target teams distribute parallel for simd
target teams distribute simd
target update
task
taskgroup
taskloop
taskloop simd
taskwait
taskyield
teams
teams distribute
teams distribute parallel do
teams distribute parallel do simd
teams distribute parallel for
teams distribute parallel for simd
teams distribute simd
threadprivate
tile
unknown
workshare
masked
acq_rel
acquire
adjust_args
affinity
aligned
allocator
append_args
atomic_default_mem_order
capture
collapse
copyprivate
copyin
default
defaultmap
depend
destroy
detach
device
device_type
dist_schedule
dynamic_allocators
exclusive
filter
final
firstprivate
from
full
grainsize
hint
in_reduction
inbranch
inclusive
init
is_device_ptr
lastprivate
linear
link
match
mergeable
nogroup
nowait
nocontext
nontemporal
notinbranch
novariants
num_tasks
num_teams
num_threads
order
partial
priority
private
proc_bind
read
reduction
relaxed
release
reverse_offload
safelen
schedule
seq_cst
shared
simdlen
sizes
task_reduction
thread_limit
threads
unified_address
unified_shared_memory
uniform
untied
update
use_device_addr
use_device_ptr
uses_allocators
when
write
threadprivate or thread local
x86_64
armeb
aarch64
aarch64_be
aarch64_32
ppcle
ppc64
ppc64le
amdgcn
nvptx
nvptx64
invalid
construct
device
implementation
user
target
teams
parallel
simd
kind
arch
vendor
extension
condition
dispatch
unified_address
unified_shared_memory
reverse_offload
dynamic_allocators
atomic_default_mem_order
host
nohost
fpga
cray
fujitsu
intel
llvm
unknown
match_all
match_any
match_none
disable_implicit_base
allow_templates
true
false
<any, entirely target dependent>
llvm.object
No object file for requested architecture
The file was not recognized as a valid object file
Invalid data was encountered while parsing the file
The end of the file was unexpectedly encountered
String table must end with a null terminator
Invalid section index
Bitcode section not found in object file
Invalid symbol index
load commands extend past the end of the file
universal header architecture: 
's cputype does not match object file's mach header
Mach-O headers
load command 
 cmdsize not a multiple of 8
 cmdsize not a multiple of 4
LC_DATA_IN_CODE
data in code info
LC_LINKER_OPTIMIZATION_HINT
linker optimization hints
LC_FUNCTION_STARTS
function starts data
LC_SEGMENT_SPLIT_INFO
split info data
LC_DYLIB_CODE_SIGN_DRS
code signing RDs data
LC_CODE_SIGNATURE
code signature data
LC_DYLD_INFO
LC_DYLD_INFO_ONLY
LC_DYLD_EXPORTS_TRIE
export trie
LC_DYLD_CHAINED_FIXUPS
chained fixups
LC_UUID command 
 has incorrect cmdsize
more than one LC_UUID command
LC_SEGMENT_64
LC_SEGMENT
LC_LOAD_DYLIB
LC_LOAD_WEAK_DYLIB
LC_LAZY_LOAD_DYLIB
LC_REEXPORT_DYLIB
LC_LOAD_UPWARD_DYLIB
LC_ID_DYLINKER
LC_LOAD_DYLINKER
LC_DYLD_ENVIRONMENT
LC_VERSION_MIN_MACOSX
LC_VERSION_MIN_IPHONEOS
LC_VERSION_MIN_TVOS
LC_VERSION_MIN_WATCHOS
LC_SOURCE_VERSION command 
more than one LC_SOURCE_VERSION command
LC_MAIN command 
more than one LC_MAIN command
LC_ENCRYPTION_INFO command 
LC_ENCRYPTION_INFO
LC_ENCRYPTION_INFO_64 command 
LC_ENCRYPTION_INFO_64
 LC_SUB_FRAMEWORK cmdsize too small
LC_SUB_FRAMEWORK
sub_framework_command
 LC_SUB_UMBRELLA cmdsize too small
LC_SUB_UMBRELLA
sub_umbrella_command
sub_umbrella
 LC_SUB_LIBRARY cmdsize too small
LC_SUB_LIBRARY
sub_library_command
sub_library
 LC_SUB_CLIENT cmdsize too small
LC_SUB_CLIENT
sub_client_command
client
LC_ROUTINES command 
more than one LC_ROUTINES and or LC_ROUTINES_64 command
LC_ROUTINES_64 command 
more than one LC_ROUTINES_64 and or LC_ROUTINES command
LC_UNIXTHREAD
more than one LC_UNIXTHREAD command
LC_THREAD
 for cmd value of: 
 is obsolete and not supported
MH_SIM_SUPPORT files only support LC_BUILD_VERSION and LC_VERSION_MIN_MACOSX load commands
LC_BUILD_VERSION and some LC_VERSION_MIN load command also found
contains LC_DYSYMTAB load command without a LC_SYMTAB load command
ilocalsym in LC_DYSYMTAB load command extends past the end of the symbol table
ilocalsym plus nlocalsym in LC_DYSYMTAB load command extends past the end of the symbol table
iextdefsym in LC_DYSYMTAB load command extends past the end of the symbol table
iextdefsym plus nextdefsym in LC_DYSYMTAB load command extends past the end of the symbol table
iundefsym in LC_DYSYMTAB load command extends past the end of the symbol table
iundefsym plus nundefsym in LC_DYSYMTAB load  command extends past the end of the symbol table
no LC_ID_DYLIB load command in dynamic library filetype
bad section index: 
 for symbol at index 
bad library ordinal: 
bad string index: 
__swift_ast
__LLVM
GENERIC_RELOC_VANILLA
GENERIC_RELOC_PAIR
GENERIC_RELOC_SECTDIFF
GENERIC_RELOC_PB_LA_PTR
GENERIC_RELOC_LOCAL_SECTDIFF
GENERIC_RELOC_TLV
Unknown
X86_64_RELOC_UNSIGNED
X86_64_RELOC_SIGNED
X86_64_RELOC_BRANCH
X86_64_RELOC_GOT_LOAD
X86_64_RELOC_GOT
X86_64_RELOC_SUBTRACTOR
X86_64_RELOC_SIGNED_1
X86_64_RELOC_SIGNED_2
X86_64_RELOC_SIGNED_4
X86_64_RELOC_TLV
ARM_RELOC_VANILLA
ARM_RELOC_PAIR
ARM_RELOC_SECTDIFF
ARM_RELOC_LOCAL_SECTDIFF
ARM_RELOC_PB_LA_PTR
ARM_RELOC_BR24
ARM_THUMB_RELOC_BR22
ARM_THUMB_32BIT_BRANCH
ARM_RELOC_HALF
ARM_RELOC_HALF_SECTDIFF
ARM64_RELOC_UNSIGNED
ARM64_RELOC_SUBTRACTOR
ARM64_RELOC_BRANCH26
ARM64_RELOC_PAGE21
ARM64_RELOC_PAGEOFF12
ARM64_RELOC_GOT_LOAD_PAGE21
ARM64_RELOC_GOT_LOAD_PAGEOFF12
ARM64_RELOC_POINTER_TO_GOT
ARM64_RELOC_TLVP_LOAD_PAGE21
ARM64_RELOC_TLVP_LOAD_PAGEOFF12
ARM64_RELOC_ADDEND
ARM64_RELOC_AUTHENTICATED_POINTER
PPC_RELOC_VANILLA
PPC_RELOC_PAIR
PPC_RELOC_BR14
PPC_RELOC_BR24
PPC_RELOC_HI16
PPC_RELOC_LO16
PPC_RELOC_HA16
PPC_RELOC_LO14
PPC_RELOC_SECTDIFF
PPC_RELOC_PB_LA_PTR
PPC_RELOC_HI16_SECTDIFF
PPC_RELOC_LO16_SECTDIFF
PPC_RELOC_HA16_SECTDIFF
PPC_RELOC_JBSR
PPC_RELOC_LO14_SECTDIFF
PPC_RELOC_LOCAL_SECTDIFF
Requested symbol index is out of range.
getSymbolIndex() called with no symbol table symbol
Mach-O 32-bit i386
Mach-O arm
Mach-O arm64 (ILP32)
Mach-O 32-bit ppc
Mach-O 32-bit unknown
Mach-O 64-bit x86-64
Mach-O arm64
Mach-O 64-bit ppc64
Mach-O 64-bit unknown
export info size 
 in export trie data at node: 0x
export info size: 0x
 too big and extends past end of trie data
flags 
unsupported exported symbol kind: 
 in flags: 0x
dylib ordinal of re-export 
 (max 
) in export trie data at node: 0x
import name of re-export in export trie data at node: 0x
 starts past end of trie data
 extends past end of trie data
address 
resolver of stub and resolver 
inconsistant export info size: 0x
 where actual size was: 0x
byte for count of childern in export trie data at node: 0x
edge sub-string in export trie data at node: 0x
 for child #
child node offset 
loop in childern in export trie data at node: 0x
 back to node: 0x
node is not an export node in export trie data at node: 0x
out of range bind ordinal 
 (num entries: 
for REBASE_OPCODE_SET_TYPE_IMM bad bind type: 
 for opcode at: 0x
for REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB 
for REBASE_OPCODE_ADD_ADDR_ULEB 
for REBASE_OPCODE_ADD_ADDR_IMM_SCALED 
for REBASE_OPCODE_DO_REBASE_IMM_TIMES 
for REBASE_OPCODE_DO_REBASE_ULEB_TIMES 
for REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB 
for REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB 
bad rebase info (bad opcode value 0x
BIND_OPCODE_SET_DYLIB_ORDINAL_IMM not allowed in weak bind table for opcode at: 0x
for BIND_OPCODE_SET_DYLIB_ORDINAL_IMM bad library ordinal: 
) for opcode at: 0x
BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB not allowed in weak bind table for opcode at: 0x
for BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB 
for BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB bad library ordinal: 
BIND_OPCODE_SET_DYLIB_SPECIAL_IMM not allowed in weak bind table for opcode at: 0x
for BIND_OPCODE_SET_DYLIB_SPECIAL_IMM unknown special ordinal: 
for BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM symbol name extends past opcodes for opcode at: 0x
for BIND_OPCODE_SET_TYPE_IMM bad bind type: 
for BIND_OPCODE_SET_ADDEND_SLEB 
for BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB 
for BIND_OPCODE_ADD_ADDR_ULEB 
for BIND_OPCODE_DO_BIND 
for BIND_OPCODE_DO_BIND missing preceding BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM for opcode at: 0x
for BIND_OPCODE_DO_BIND missing preceding BIND_OPCODE_SET_DYLIB_ORDINAL_* for opcode at: 0x
at BIND_OPCODE_DO_BIND (incorrect ordinal table size, number of BIND_OPCODE_DO_BIND opcodes exceed the count in previous BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB) at BIND_OPCODE_DO_BIND at: 0x
BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB not allowed in lazy bind table for opcode at: 0x
for BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB 
for BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB missing preceding BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM for opcode at: 0x
for BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB missing preceding BIND_OPCODE_SET_DYLIB_ORDINAL_* for opcode at: 0x
for BIND_OPCODE_ADD_ADDR_ULEB (after adding ULEB) 
BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED not allowed in lazy bind table for opcode at: 0x
for BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED missing preceding BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM for opcode at: 0x
for BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED missing preceding BIND_OPCODE_SET_DYLIB_ORDINAL_* for opcode at: 0x
for BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED 
BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB not allowed in lazy bind table for opcode at: 0x
for BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB  (count value) 
for BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB (skip value) 
for BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB missing preceding BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM for opcode at: 0x
for BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB missing preceding BIND_OPCODE_SET_DYLIB_ORDINAL_* for opcode at: 0x
for BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB 
for BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB 
at BIND_SUBOPCODE_THREADED_APPLY (incorrect ordinal table size, count of previous BIND_OPCODE_DO_BIND opcodes don't match count in previous BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB at BIND_SUBOPCODE_THREADED_APPLY at: 0x
for BIND_SUBOPCODE_THREADED_APPLY 
for BIND_SUBOPCODE_THREADED_APPLY for opcode at: 0x
 bad segOffset, not 8-byte aligned
bad bind sub-obcode of BIND_OPCODE_THREADED (bad sub-opcode value 0x
bad bind info (bad opcode value 0x
bad bind info (for BIND_SUBOPCODE_THREADED_APPLY for opcode at: 0x
 bad ordinal: 0x
 in pointer: 0x
 at address: 0x
 offset to next pointer in the chain after one at address: 0x
 is past end of segment)
 is past end of the same page)
missing preceding *_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB
bad segIndex (too large)
bad offset, extends beyond section boundary
bad offset, not in section
bad chained fixups: unknown version: 
bad chained fixups: unknown imports format: 
bad chained fixups: import #
 symbol offset extends past end: 
 bad library ordinal: 
bad chained fixups: image starts offset 
 overlaps with chained fixups header
bad chained fixups: image starts end 
 extends past end 
bad chained fixups: seg_info_offset 
 starts past end 
bad chained fixups: segment start 
 offset 
 page size 
 is invalid
 pointer format 
 page_start index 
 extends past seg_info size 
 chain_start index 
bad chained fixups: chain starts section 
 starts past end of file
 extends past end of file
pointer format 
bad chained fixups: chain start 
 extends past section data
Unrecognized MachO magic number
debug_str_offsets
__swift5_fieldmd
__swift5_assocty
__swift5_builtin
__swift5_capture
__swift5_typeref
__swift5_reflstr
__swift5_proto
__swift5_protos
__swift5_acfuncs
__swift5_mpenum
truncated or malformed object (
load command 0 extends past the end all load commands in the file
 with size less than 8 bytes
Structure read out-of-range
 LC_SYMTAB cmdsize too small
more than one LC_SYMTAB command
LC_SYMTAB command 
symoff field of LC_SYMTAB command 
 extends past the end of the file
struct nlist_64
struct nlist
symoff field plus nsyms field times sizeof(
) of LC_SYMTAB command 
symbol table
stroff field of LC_SYMTAB command 
stroff field plus strsize field of LC_SYMTAB command 
string table
 at offset 
 with a size of 
, overlaps 
 LC_DYSYMTAB cmdsize too small
more than one LC_DYSYMTAB command
LC_DYSYMTAB command 
tocoff field of LC_DYSYMTAB command 
tocoff field plus ntoc field times sizeof(struct dylib_table_of_contents) of LC_DYSYMTAB command 
table of contents
modtaboff field of LC_DYSYMTAB command 
struct dylib_module_64
struct dylib_module
modtaboff field plus nmodtab field times sizeof(
) of LC_DYSYMTAB command 
module table
extrefsymoff field of LC_DYSYMTAB command 
extrefsymoff field plus nextrefsyms field times sizeof(struct dylib_reference) of LC_DYSYMTAB command 
reference table
indirectsymoff field of LC_DYSYMTAB command 
indirectsymoff field plus nindirectsyms field times sizeof(uint32_t) of LC_DYSYMTAB command 
indirect table
extreloff field of LC_DYSYMTAB command 
extreloff field plus nextrel field times sizeof(struct relocation_info) of LC_DYSYMTAB command 
external relocation table
locreloff field of LC_DYSYMTAB command 
locreloff field plus nlocrel field times sizeof(struct relocation_info) of LC_DYSYMTAB command 
local relocation table
 cmdsize too small
more than one 
 command
 command 
dataoff field of 
dataoff field plus datasize field of 
more than one LC_DYLD_INFO and or LC_DYLD_INFO_ONLY command
rebase_off field of 
rebase_off field plus rebase_size field of 
dyld rebase info
bind_off field of 
bind_off field plus bind_size field of 
dyld bind info
weak_bind_off field of 
weak_bind_off field plus weak_bind_size field of 
dyld weak bind info
lazy_bind_off field of 
lazy_bind_off field plus lazy_bind_size field of 
dyld lazy bind info
export_off field of 
export_off field plus export_size field of 
dyld export info
LC_ID_DYLIB
more than one LC_ID_DYLIB command
LC_ID_DYLIB load command in non-dynamic library file type
 name.offset field too small, not past the end of the dylib_command struct
 name.offset field extends past the end of the load command
 library name extends past the end of the load command
 name.offset field too small, not past the end of the dylinker_command struct
 dyld name extends past the end of the load command
more than one LC_VERSION_MIN_MACOSX, LC_VERSION_MIN_IPHONEOS, LC_VERSION_MIN_TVOS or LC_VERSION_MIN_WATCHOS command
 LC_NOTE has incorrect cmdsize
offset field of LC_NOTE command 
size field plus offset field of LC_NOTE command 
LC_NOTE data
 LC_BUILD_VERSION_COMMAND has incorrect cmdsize
more than two LC_BUILD_VERSION load commands
the LC_BUILD_VERSION, command 
, platform value is not allowed when the mach header flag MH_SIM_SUPPORT is set
the two LC_BUILD_VERSION load commands are not for the platforms MACOS and MACCATALYST
 LC_RPATH cmdsize too small
 LC_RPATH path.offset field too small, not past the end of the rpath_command struct
 LC_RPATH path.offset field extends past the end of the load command
 LC_RPATH library name extends past the end of the load command
more than one LC_ENCRYPTION_INFO and or LC_ENCRYPTION_INFO_64 command
cryptoff field of 
cryptoff field plus cryptsize field of 
 LC_LINKER_OPTION cmdsize too small
 LC_LINKER_OPTION string #
 is not NULL terminated
 LC_LINKER_OPTION string count 
 does not match number of strings
.offset field too small, not past the end of the 
.offset field extends past the end of the load command
 name extends past the end of the load command
flavor in 
 extends past end of command
 count in 
 count not x86_THREAD_STATE32_COUNT for flavor number 
 which is a x86_THREAD_STATE32 flavor in 
 x86_THREAD_STATE32 extends past end of command in 
 unknown flavor (
) for flavor number 
 count not x86_THREAD_STATE_COUNT for flavor number 
 which is a x86_THREAD_STATE flavor in 
 x86_THREAD_STATE extends past end of command in 
 count not x86_FLOAT_STATE_COUNT for flavor number 
 which is a x86_FLOAT_STATE flavor in 
 x86_FLOAT_STATE extends past end of command in 
 count not x86_EXCEPTION_STATE_COUNT for flavor number 
 which is a x86_EXCEPTION_STATE flavor in 
 x86_EXCEPTION_STATE extends past end of command in 
 count not x86_THREAD_STATE64_COUNT for flavor number 
 which is a x86_THREAD_STATE64 flavor in 
 x86_THREAD_STATE64 extends past end of command in 
 count not x86_EXCEPTION_STATE64_COUNT for flavor number 
 which is a x86_EXCEPTION_STATE64 flavor in 
 x86_EXCEPTION_STATE64 extends past end of command in 
 count not ARM_THREAD_STATE_COUNT for flavor number 
 which is a ARM_THREAD_STATE flavor in 
 ARM_THREAD_STATE extends past end of command in 
 count not ARM_THREAD_STATE64_COUNT for flavor number 
 which is a ARM_THREAD_STATE64 flavor in 
 ARM_THREAD_STATE64 extends past end of command in 
 count not ARM_EXCEPTION_STATE64_COUNT for flavor number 
 which is a ARM_EXCEPTION_STATE64 flavor in 
 ARM_EXCEPTION_STATE64 extends past end of command in 
 count not PPC_THREAD_STATE_COUNT for flavor number 
 which is a PPC_THREAD_STATE flavor in 
 PPC_THREAD_STATE extends past end of command in 
unknown cputype (
) load command 
 for 
 command can't be checked
 LC_TWOLEVEL_HINTS has incorrect cmdsize
more than one LC_TWOLEVEL_HINTS command
offset field of LC_TWOLEVEL_HINTS command 
offset field plus nhints times sizeof(struct twolevel_hint) field of LC_TWOLEVEL_HINTS command 
two level hints
 extends past the end all load commands in the file
Malformed MachO file.
malformed uleb128, extends past end
uleb128 too big for uint64
malformed sleb128, extends past end
sleb128 too big for int64
the mach header extends past the end of the file
 inconsistent cmdsize in 
 for the number of sections
offset field of section 
 not past the headers of the file
offset field plus size field of section 
size field of section 
 greater than the segment
addr field of section 
 less than the segment's vmaddr
addr field plus size of section 
 greater than than the segment's vmaddr plus vmsize
section contents
reloff field of section 
reloff field plus nreloc field times sizeof(struct relocation_info) of section 
section relocation entries
 fileoff field in 
 fileoff field plus filesize field in 
 filesize field in 
 greater than vmsize field
MachOUniversalBinary::ObjectForArch::getAsObjectFile() called when Parent is a nullptr
File too small to be a Mach-O universal file
contains zero architecture types
bad magic number
fat_arch
 structs would extend past the end of the file
offset plus size of cputype (
) cpusubtype (
) extends past the end of the file
align (2^
) too large for cputype (
) (maximum 2^
offset: 
 for cputype (
) not aligned on it's alignment (2^
cputype (
) offset 
 overlaps universal headers
contains two of the same architecture (cputype (
) at offset 
, overlaps cputype (
truncated or malformed fat file (
Invalid signature
Invalid version
Cannot handle one of the minidump streams
Duplicate stream type
Unexpected EOF
__imp_
: relocations with offset 0x
 and size 0x
 go past the end of the file
entry with offset 0x
 in a string table with size 0x
: section data with offset 0x
 goes past the end of the file
aix5coff64-rs6000
aixcoff-rs6000
debug_info
debug_line
debug_pubnames
debug_pubtypes
debug_aranges
debug_abbrev
debug_str
debug_ranges
debug_loc
debug_frame
debug_macinfo
the section index (
) is invalid
: string table with offset 0x
: section headers with offset 0x
: symbol table with offset 0x
csect symbol "
" with index 
 contains no auxiliary entry
a csect auxiliary entry has not been found for symbol "
Unimplemented Debug Name
invalid sign in float literal
invalid hexadecimal floating-point constant: expected at least one significand digit
invalid hexadecimal floating-point constant: expected exponent part 'p'
invalid hexadecimal floating-point constant: expected at least one exponent digit
unterminated comment
invalid 
 number
invalid hexadecimal number
invalid binary number
invalid usage of character literals
unterminated string constant
unterminated single quote
single quote way too long
invalid usage of string literals
invalid character in input
got_hi
got_lo
higher
highest
tlsgd
binary
octal
decimal
hexadecimal
base-
missing expression
Recursive use of '
redefinition of '
invalid assignment to '
invalid reassignment of non-absolute variable '
.set
.equ
.equiv
.ascii
.asciz
.string
.byte
.short
.value
.2byte
.long
.int
.4byte
.quad
.8byte
.octa
.single
.float
.double
.align
.align32
.balign
.balignw
.balignl
.p2align
.p2alignw
.p2alignl
.org
.fill
.zero
.extern
.globl
.global
.lazy_reference
.no_dead_strip
.symbol_resolver
.private_extern
.reference
.weak_definition
.weak_reference
.weak_def_can_be_hidden
.cold
.comm
.common
.lcomm
.abort
.include
.incbin
.code16
.code16gcc
.rept
.rep
.irp
.irpc
.endr
.bundle_align_mode
.bundle_lock
.bundle_unlock
.ifeq
.ifge
.ifgt
.ifle
.iflt
.ifne
.ifb
.ifnb
.ifc
.ifeqs
.ifnc
.ifnes
.ifdef
.ifndef
.ifnotdef
.elseif
.else
.end
.endif
.skip
.space
.file
.line
.loc
.stabs
.cv_file
.cv_func_id
.cv_loc
.cv_linetable
.cv_inline_linetable
.cv_inline_site_id
.cv_def_range
.cv_string
.cv_stringtable
.cv_filechecksums
.cv_filechecksumoffset
.cv_fpo_data
.sleb128
.uleb128
.cfi_sections
.cfi_startproc
.cfi_endproc
.cfi_def_cfa
.cfi_def_cfa_offset
.cfi_adjust_cfa_offset
.cfi_def_cfa_register
.cfi_llvm_def_aspace_cfa
.cfi_offset
.cfi_rel_offset
.cfi_personality
.cfi_lsda
.cfi_remember_state
.cfi_restore_state
.cfi_same_value
.cfi_restore
.cfi_escape
.cfi_return_column
.cfi_signal_frame
.cfi_undefined
.cfi_register
.cfi_window_save
.cfi_b_key_frame
.macros_on
.macros_off
.macro
.exitm
.endm
.endmacro
.purgem
.err
.error
.warning
.altmacro
.noaltmacro
.reloc
.dc.a
.dc.b
.dc.d
.dc.l
.dc.s
.dc.w
.dc.x
.dcb
.dcb.b
.dcb.d
.dcb.l
.dcb.s
.dcb.w
.dcb.x
.ds.b
.ds.d
.ds.l
.ds.p
.ds.s
.ds.w
.ds.x
.print
.addrsig
.addrsig_sym
.pseudoprobe
.lto_discard
frame_ptr_rel
subfield_reg
reg_rel
unexpected token at start of statement
invalid use of pseudo-symbol '.' as a label
 not currently supported for this target
unknown directive
__emit
expected comma
expected string parameter for '.ifeqs' directive
expected string parameter for '.ifnes' directive
expected comma after first string for '.ifeqs' directive
expected comma after first string for '.ifnes' directive
expected identifier after '.ifdef'
Encountered a .elseif that doesn't follow an .if or  an .elseif
Encountered a .else that doesn't follow  an .if or an .elseif
Encountered a .endif that doesn't follow an .if or .else
macros cannot be nested more than 
 levels deep.
 Use -asm-macro-max-nesting-depth to increase this limit.
.endmacro
<instantiation>
invalid argument identifier for formal argument
expected '=' after formal parameter identifier
cannot mix positional and keyword arguments
expected absolute expression
parameter named '
' does not exist for macro '
missing value for required parameter '
' in macro '
too many positional arguments
unexpected token in macro instantiation
unbalanced parentheses in macro argument
Wrong number of arguments
expected identifier
out of range literal value
unknown token in expression
unexpected token in directive
infinity
invalid floating point literal
p2align directive with no operand(s) is ignored
invalid alignment value
alignment must be a power of 2
alignment must be smaller than 2**32
alignment directive can never be satisfied in this many bytes, ignoring maximum bytes expression
maximum bytes expression exceeds alignment and has no effect
'.fill' directive with negative size has no effect
'.fill' directive with size greater than 8 has been truncated to 8
'.fill' directive pattern has been truncated to 32-bits
non-local symbol required
unable to emit symbol attribute
expected identifier in directive
alignment not supported on this target
invalid '.comm' or '.lcomm' directive size, can't be less than zero
invalid '.comm' or '.lcomm' directive alignment, can't be less than zero
invalid symbol redefinition
.abort detected. Assembly stopping.
.abort '
' detected. Assembly stopping.
expected string in '.include' directive
unexpected token in '.include' directive
Could not find include file '
expected string in '.incbin' directive
skip is negative
Could not find incbin file '
negative count has no effect
unexpected token in '
' directive
Count is negative
no matching '.endr' in definition
unexpected token in '.endr' directive
.endr
expected identifier in '.irp' directive
expected identifier in '.irpc' directive
unexpected token in '.irpc' directive
unmatched '.endr' directive
invalid bundle alignment size (expected between 0 and 30)
invalid option for '.bundle_lock' directive
negative file number
explicit path specified, but no file number
unexpected token in '.file' directive
MD5 checksum specified, but no file number
source
source specified, but no file number
inconsistent use of MD5 checksums
unexpected token in '.line' directive
unexpected token in '.loc' directive
file number less than one in '.loc' directive
unassigned file number in '.loc' directive
line number less than zero in '.loc' directive
column position less than zero in '.loc' directive
is_stmt value not 0 or 1
is_stmt value not the constant value of 0 or 1
isa number less than zero
isa number not a constant value
unknown sub-directive in '.loc' directive
unsupported directive '.stabs'
expected file number in '.cv_file' directive
file number less than one
unexpected token in '.cv_file' directive
expected checksum kind in '.cv_file' directive
file number already allocated
unexpected token in '.cv_func_id' directive
function id already allocated
expected function id in '
expected function id within range [0, UINT_MAX)
expected 'within' identifier in '.cv_inline_site_id' directive
expected 'inlined_at' identifier in '.cv_inline_site_id' directive
expected line number after 'inlined_at'
unexpected token in '.cv_inline_site_id' directive
expected integer in '
file number less than one in '
unassigned file number in '
line number less than zero in '.cv_loc' directive
column position less than zero in '.cv_loc' directive
unexpected token in '.cv_loc' directive
unknown sub-directive in '.cv_loc' directive
expected SourceField in '.cv_inline_linetable' directive
File id less than zero in '.cv_inline_linetable' directive
expected SourceLineNum in '.cv_inline_linetable' directive
Line number less than zero in '.cv_inline_linetable' directive
Expected End of Statement
expected comma before def_range type in .cv_def_range directive
expected def_range type in directive
expected comma before register number in .cv_def_range directive
expected register number
expected comma before offset in .cv_def_range directive
expected offset value
expected register value
expected comma before flag value in .cv_def_range directive
expected flag value
expected comma before base pointer offset in .cv_def_range directive
expected base pointer offset value
unexpected def_range type in .cv_def_range directive
expected symbol name
expected .eh_frame or .debug_frame
.eh_frame
.debug_frame
unexpected token
unsupported encoding.
expected identifier in '.macro' directive
vararg parameter '
' should be the last parameter
macro '
' has multiple parameters named '
missing parameter qualifier for '
 is not a valid parameter qualifier for '
pointless default value for required parameter '
no matching '.endmacro' in definition
' is already defined
macro defined with named parameters which are not used in macro body, possible positional parameter found in body which will have no effect
unexpected '
' in file, no current macro definition
expected identifier in '.purgem' directive
' is not defined
.err encountered
.error directive invoked in source file
.error argument must be a string
.warning directive invoked in source file
.warning argument must be a string
expected relocation name
expression must be relocatable
' directive with negative repeat count has no effect
literal value out of range for directive
expected double quoted string after .print
unexpected token in '.pseudoprobe' directive
unexpected expression in _emit
unexpected expression in align
literal value not a power of two greater then zero
parsed instruction: [
unmatched .ifs or .elses
unassigned file number: 
 for .file directives
assembler local symbol '
' not defined
directional label undefined
 * $$
offset 
 + $$
byte ptr 
word ptr 
dword ptr 
qword ptr 
xword ptr 
xmmword ptr 
ymmword ptr 
.even
while in macro instantiation
expected string
unexpected backslash at end of string
invalid hexadecimal escape sequence
invalid octal escape sequence (out of range)
invalid escape sequence (unrecognized character)
unexpected symbol modifier following '@'
invalid variant '
invalid modifier '
' (no symbols present)
invalid variant on expression '
' (already modified)
invalid token in expression
expected symbol variant after '@'
unexpected token in variant, expected ')'
expected a symbol reference
unexpected modifier on variable reference
cannot use . as current PC
brackets expression not supported on this target
expected '(' after operator
expected ')'
expected ')' in parentheses expression
expected ']' in brackets expression
expected section directive before assembly directive
The HLASM Label has to be an Identifier
Cannot have just a label for an HLASM inline asm statement
.text
.data
.bss
.section
.def
.scl
.type
.endef
.secrel32
.symidx
.safeseh
.secidx
.linkonce
.rva
.weak
.cg_profile
.seh_proc
.seh_endproc
.seh_endfunclet
.seh_startchained
.seh_endchained
.seh_handler
.seh_handlerdata
.seh_stackalloc
.seh_endprologue
unexpected token in section switching directive
expected string in directive
expected comdat type such as 'discard' or 'largest' after protection bits
expected comma in directive
conflicting section flags 'b' and 'd'.
unknown flag
one_only
same_size
same_contents
associative
largest
newest
unrecognized COMDAT type '
invalid '.secrel32' directive offset, can't be less than zero or greater than std::numeric_limits<uint32_t>::max()
cannot make section associative with .linkonce
section '
' is already linkonce
 in directive
invalid '.rva' directive offset, can't be less than -2147483648 or greater than 2147483647
you must specify one or both of @unwind or @except
a handler attribute must begin with '@'
expected @unwind or @except
.alt_entry
.desc
.indirect_symbol
.lsym
.subsections_via_symbols
.dump
.load
.pushsection
.popsection
.previous
.secure_log_unique
.secure_log_reset
.tbss
.zerofill
.data_region
.end_data_region
.const
.const_data
.constructor
.cstring
.destructor
.dyld
.fvmlib_init0
.fvmlib_init1
.lazy_symbol_pointer
.linker_option
.literal16
.literal4
.literal8
.mod_init_func
.mod_term_func
.non_lazy_symbol_pointer
.thread_local_variable_pointer
.objc_cat_cls_meth
.objc_cat_inst_meth
.objc_category
.objc_class
.objc_class_names
.objc_class_vars
.objc_cls_meth
.objc_cls_refs
.objc_inst_meth
.objc_instance_vars
.objc_message_refs
.objc_meta_class
.objc_meth_var_names
.objc_meth_var_types
.objc_module_info
.objc_protocol
.objc_selector_strs
.objc_string_object
.objc_symbols
.picsymbol_stub
.static_const
.static_data
.symbol_stub
.tdata
.thread_init_func
.tlv
.ident
.bridgeos_version_min
.watchos_version_min
.tvos_version_min
.ios_version_min
.macosx_version_min
.build_version
.ptrauth_abi_version
.ptrauth_kernel_abi_version
.alt_entry must preceed symbol definition
unexpected token in '.desc' directive
indirect symbol not in a symbol pointer or stub section
expected identifier in .indirect_symbol directive
non-local symbol required in directive
unable to emit indirect symbol attribute for: 
unexpected token in '.indirect_symbol' directive
unexpected token in '.lsym' directive
directive '.lsym' is unsupported
unexpected token in '.subsections_via_symbols' directive
expected string in '.dump' or '.load' directive
unexpected token in '.dump' or '.load' directive
ignoring directive .dump for now
ignoring directive .load for now
expected identifier after '.section' directive
unexpected token in '.section' directive
__textcoal_nt
__text
__const_coal
__datacoal_nt
__data
section "
" is deprecated
change section name to "
.popsection without corresponding .pushsection
.previous without corresponding .section
unexpected token in '.secure_log_unique' directive
.secure_log_unique specified multiple times
.secure_log_unique used but AS_SECURE_LOG_FILE environment variable unset.
can't open secure log file: 
unexpected token in '.secure_log_reset' directive
unexpected token in '.tbss' directive
invalid '.tbss' directive size, can't be less thanzero
invalid '.tbss' alignment, can't be lessthan zero
__thread_bss
expected segment name after '.zerofill' directive
expected section name after comma in '.zerofill' directive
unexpected token in '.zerofill' directive
invalid '.zerofill' directive size, can't be less than zero
invalid '.zerofill' directive alignment, can't be less than zero
expected region type after '.data_region' directive
unknown region type in '.data_region' directive
unexpected token in '.end_data_region' directive
__bss
__constructor
__cstring
__destructor
__dyld
__fvmlib_init0
__fvmlib_init1
__la_symbol_ptr
expected string in '
__literal16
__literal4
__literal8
__mod_init_func
__mod_term_func
__nl_symbol_ptr
__thread_ptr
__cat_cls_meth
__cat_inst_meth
__category
__class
__class_vars
__cls_meth
__cls_refs
__inst_meth
__instance_vars
__message_refs
__meta_class
__protocol
__selector_strs
__string_object
__symbols
__picsymbol_stub
__static_const
__static_data
__symbol_stub
__thread_data
__thread_init
__thread_vars
invalid OS update specifier, comma expected
OS update
 major version number, integer expected
 major version number
 minor version number required, comma expected
 minor version number, integer expected
 minor version number
 version number, integer expected
 version number
SDK subminor
 used while targeting 
overriding previous version directive
previous definition is here
 in '
platform name expected
unknown platform name
version number required, comma expected
 in '.build_version' directive
expected integer version in '.ptrauth_abi_version' directive
invalid ptrauth ABI version number
 in '.ptrauth_abi_version' directive
expected integer version in '.ptrauth_kernel_abi_version' directive
invalid ptrauth kernel ABI version number
 in '.ptrauth_kernel_abi_version' directive
.rodata
.data.rel
.data.rel.ro
.size
.symver
.version
.weakref
.local
.protected
.internal
.hidden
.subsection
.rodata.
.text.
.data.
.bss.
.init_array.
.fini_array.
.preinit_array.
.tdata.
.tbss.
Section cannot specifiy a group name while also acting as a member of the last group
Mergeable section must specify the type
Group section must specify the type
.note
init_array
fini_array
preinit_array
nobits
progbits
llvm_odrtab
llvm_linker_options
llvm_call_graph_profile
llvm_dependent_libraries
llvm_sympart
llvm_bb_addr_map
unknown section type
changed section type for 
, expected: 0x
changed section flags for 
changed section entsize for 
, expected: 
DWARF2 only supports one section per compilation unit
expected '@<type>', '%<type>' or "<type>"
expected '%<type>' or "<type>"
expected the entry size
entry size must be positive
expected group name
invalid group name
invalid linkage
Linkage must be 'comdat'
expected linked-to symbol
invalid linked-to symbol
linked-to symbol is not in a section: 
expected 'unique'
expected commma
unique id must be positive
unique id is too large
.debug_
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '%<type>' or "<type>"
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '@<type>', '%<type>' or "<type>"
expected symbol type in directive
unsupported attribute in '.type' directive
unexpected token in '.type' directive
unexpected token in '.ident' directive
expected a comma
expected a '@' in the name
expected 'remove'
unexpected token in '.version' directive
asm-macro-max-nesting-depth
The maximum nesting depth allowed for assembly macros.
expected newline
unexpected token
expected integer count in '.cg_profile' directive
expected string in directive, instead got: 
Only data sections can be passive
, instead got: 
Expected label after .type directive, got: 
Expected label,@type declaration, got: 
Unknown WASM symbol type: 
.csect
XCOFFAsmParser directive not yet supported!
expected assembly-time absolute expression
invalid number of bytes
invalid .org offset '
' (at offset '
Fragment can't be larger than a bundle size
Padding cannot exceed 255 bytes
<stdin>
checksum_offset
as-secure-log-file-name
As secure log file name (initialized from AS_SECURE_LOG_FILE env variable)
AS_SECURE_LOG_FILE
Cannot initialize MC for non-Windows COFF object files.
Cannot initialize MC for unknown object file format.
._Renamed..
_Renamed..
invalid symbol name from source
section's multiply symbols policy does not match
Cannot find option named '
.section
inconsistent use of embedded source
0x%02llx
0x%04llx
0x%08llx
0x%016llx
<<invalid>>
<<none>>
DTPOFF
DTPREL
GOTOFF
GOTREL
PCREL
GOTPCREL
GOTTPOFF
INDNTPOFF
NTPOFF
GOTNTPOFF
TLSGD
TLSLD
TLSLDM
TPOFF
TPREL
tlscall
tlsdesc
TLVP
TLVPPAGE
TLVPPAGEOFF
PAGE
PAGEOFF
GOTPAGE
GOTPAGEOFF
SECREL32
SIZE
WEAKREF
ABS8
PLTOFF
GOT_PREL
target1
target2
prel31
sbrel
tlsldo
tlsdescseq
hlo8
diff8
diff16
diff32
high
higha
highera
highesta
got@l
got@h
got@ha
tocbase
toc@l
toc@h
toc@ha
dtpmod
tprel@l
tprel@h
tprel@ha
tprel@high
tprel@higha
tprel@higher
tprel@highera
tprel@highest
tprel@highesta
dtprel@l
dtprel@h
dtprel@ha
dtprel@high
dtprel@higha
dtprel@higher
dtprel@highera
dtprel@highest
dtprel@highesta
got@tprel
got@tprel@l
got@tprel@h
got@tprel@ha
got@dtprel
got@dtprel@l
got@dtprel@h
got@dtprel@ha
got@tlsgd
got@tlsgd@l
got@tlsgd@h
got@tlsgd@ha
got@tlsld
got@tlsld@l
got@tlsld@h
got@tlsld@ha
got@pcrel
got@tlsgd@pcrel
got@tlsld@pcrel
got@tprel@pcrel
tls@pcrel
tlsld
notoc
IMGREL
LO16
HI16
GPREL
GDGOT
LDGOT
GDPLT
LDPLT
IEGOT
TYPEINDEX
MBREL
TLSREL
TBREL
GOT@TLS
gotpcrel32@lo
gotpcrel32@hi
rel32@lo
rel32@hi
rel64
abs32@lo
abs32@hi
pc_hi
pc_lo
gotoff_hi
gotoff_lo
plt_hi
plt_lo
tls_gd_hi
tls_gd_lo
tpoff_hi
tpoff_lo
typeindex
unable to evaluate offset for variable '
unable to evaluate offset to undefined symbol '
__eh_frame
__ustring
__common
__gcc_except_tab
__LD
__compact_unwind
__DWARF
__debug_names
debug_names_begin
__apple_names
names_begin
__apple_objc
objc_begin
__apple_namespac
namespac_begin
__apple_types
types_begin
__debug_abbrev
section_abbrev
__debug_info
section_info
__debug_line
section_line
__debug_line_str
section_line_str
__debug_frame
__debug_pubnames
__debug_pubtypes
__debug_gnu_pubn
__debug_gnu_pubt
__debug_str
info_string
__debug_str_offs
section_str_off
__debug_addr
__debug_loc
section_debug_loc
__debug_loclists
__debug_aranges
__debug_ranges
debug_range
__debug_rnglists
__debug_macinfo
__debug_macro
debug_macro
__debug_inlined
__debug_cu_index
__debug_tu_index
__LLVM_STACKMAPS
__llvm_stackmaps
__LLVM_FAULTMAPS
__llvm_faultmaps
__remarks
.bss
.text
.rodata.cst4
.rodata.cst8
.rodata.cst16
.rodata.cst32
.gcc_except_table
.debug_abbrev
.debug_info
.debug_line
.debug_line_str
.debug_pubnames
.debug_pubtypes
.debug_gnu_pubnames
.debug_gnu_pubtypes
.debug_str
.debug_loc
.debug_aranges
.debug_ranges
.debug_macinfo
.debug_macro
.debug_names
.apple_names
.apple_objc
.apple_namespaces
.apple_types
.debug_str_offsets
.debug_addr
.debug_rnglists
.debug_loclists
.debug_info.dwo
.debug_types.dwo
.debug_abbrev.dwo
.debug_str.dwo
.debug_line.dwo
.debug_loc.dwo
.debug_str_offsets.dwo
.debug_rnglists.dwo
.debug_macinfo.dwo
.debug_macro.dwo
.debug_loclists.dwo
.debug_cu_index
.debug_tu_index
.llvm_stackmaps
.llvm_faultmaps
.stack_sizes
.pseudo_probe
.pseudo_probe_desc
.rdata
.debug$S
.debug$T
.debug$H
section_debug_loclists
debug_rnglists
debug_macinfo.dwo
debug_macro.dwo
section_info_dwo
section_types_dwo
section_abbrev_dwo
skel_string
skel_loc
section_str_off_dwo
addr_sec
.drectve
.pdata
.xdata
.sxdata
.gehcont$y
.gfids$y
.giats$y
.gljmp$y
.tls$
.rodata.gcc_except_table
.rodata.8
.rodata.16
.eh_info_table
.dwabrev
.dwinfo
.dwline
.dwframe
.dwpbnms
.dwpbtyp
.dwstr
.dwloc
.dwarnge
.dwrnges
.dwmac
.section
.linkonce
IMAGE_SCN_CNT_UNINITIALIZED_DATA
,#alloc
,#execinstr
,#write
,#exclude
,#tls
0x7000001e
unsupported type 0x
 for section 
,comdat
,unique,
.subsection
SHT_NOBITS
0123456789_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
,none,
mach-o section specifier requires a segment and section separated by a comma
mach-o section specifier requires a section whose length is between 1 and 16 characters
mach-o section specifier uses an unknown section type
mach-o section specifier of type 'symbol_stubs' requires a size specifier
mach-o section specifier has invalid attribute
mach-o section specifier cannot have a stub size specified because it does not have type 'symbol_stubs'
mach-o section specifier has a malformed stub size
regular
S_REGULAR
S_ZEROFILL
cstring_literals
S_CSTRING_LITERALS
4byte_literals
S_4BYTE_LITERALS
8byte_literals
S_8BYTE_LITERALS
literal_pointers
S_LITERAL_POINTERS
non_lazy_symbol_pointers
S_NON_LAZY_SYMBOL_POINTERS
lazy_symbol_pointers
S_LAZY_SYMBOL_POINTERS
symbol_stubs
S_SYMBOL_STUBS
mod_init_funcs
S_MOD_INIT_FUNC_POINTERS
mod_term_funcs
S_MOD_TERM_FUNC_POINTERS
coalesced
S_COALESCED
S_GB_ZEROFILL
interposing
S_INTERPOSING
16byte_literals
S_16BYTE_LITERALS
S_DTRACE_DOF
S_LAZY_DYLIB_SYMBOL_POINTERS
thread_local_regular
S_THREAD_LOCAL_REGULAR
thread_local_zerofill
S_THREAD_LOCAL_ZEROFILL
thread_local_variables
S_THREAD_LOCAL_VARIABLES
thread_local_variable_pointers
S_THREAD_LOCAL_VARIABLE_POINTERS
thread_local_init_function_pointers
S_THREAD_LOCAL_INIT_FUNCTION_POINTERS
pure_instructions
S_ATTR_PURE_INSTRUCTIONS
no_toc
S_ATTR_NO_TOC
strip_static_syms
S_ATTR_STRIP_STATIC_SYMS
no_dead_strip
S_ATTR_NO_DEAD_STRIP
live_support
S_ATTR_LIVE_SUPPORT
self_modifying_code
S_ATTR_SELF_MODIFYING_CODE
S_ATTR_DEBUG
S_ATTR_SOME_INSTRUCTIONS
S_ATTR_EXT_RELOC
S_ATTR_LOC_RELOC
.csect 
Unhandled storage-mapping class for .text csect
Unhandled storage-mapping class for .rodata csect.
Unhandled storage-mapping class for .tdata csect.
.toc
Unhandled storage-mapping class for .data csect.
.dwsect 
0x%x
Printing for this SectionKind is unimplemented.
unsupported directive in streamer
line_table_start
this directive must appear between .cfi_startproc and .cfi_endproc directives
parent function id not introduced by .cv_func_id or .cv_inline_site_id
symbol '
starting new .cfi frame before finishing the previous one
.seh_* directives are not supported on this target
.seh_ directive must appear within an active frame
Starting a function before ending the previous one!
Not all chained regions terminated!
End of a chained region outside a chained region!
Chained unwind areas can't have handlers!
Don't know what kind of handler this is!
frame register and offset can be set at most once
offset is not a multiple of 16
frame offset must be less than or equal to 240
stack allocation size must be non-zero
stack allocation size is not a multiple of 8
register save offset is not 8 byte aligned
If present, PushMachFrame must be the first UOP
EmitRawText called on an MCStreamer that doesn't support it (target backend is likely missing an AsmStreamer implementation)
Unfinished frame!
DWARF64 Mark
_end
Symbol name with unsupported characters
Unable to find target for this triple (no targets are registered)
  Registered Targets:
    (none)
i386
x86_64
x86_64h
armv4t
armv6
armv5
armv7
armv7s
armv7k
armv6m
armv7m
armv7em
arm64
arm64e
arm64_32
arm64v8
unknown
unknown
macOS
tvOS
watchOS
bridgeOS
macCatalyst
iOS Simulator
tvOS Simulator
watchOS Simulator
DriverKit
sepOS
macos
tvos
watchos
bridgeos
driverkit
sepos
darwin
-macabi
-simulator
static-func-full-module-prefix
Use full module build paths in the profile counter names for static functions.
static-func-strip-dirname-prefix
Strip specified level of directory name from source path in the profile counter name for static functions.
enable-name-compression
Enable name/filename string compression
,regular,live_support
__DATA,
__LLVM_COV,
.lprfd$M
.lprfc$M
.lprfn$M
.lprfv$M
.lprfnd$M
.lcovmap$M
.lcovfun$M
".lorderfile$M"
__llvm_prf_data
__llvm_prf_cnts
__llvm_prf_names
__llvm_prf_vals
__llvm_prf_vnds
__llvm_covmap
__llvm_covfun
__llvm_orderfile
end of File
unrecognized instrumentation profile encoding format
invalid instrumentation profile data (bad magic)
invalid instrumentation profile data (file header is corrupt)
unsupported instrumentation profile format version
unsupported instrumentation profile hash type
too much profile data
truncated profile data
malformed instrumentation profile data
invalid profile created. Please file a bug at: http://developer.apple.com/bugreporter/ and include the profraw files that caused this error.
no profile data available for function
function control flow change detected (hash mismatch)
function basic block count change detected (counter mismatch)
counter overflow
function value site count change detected (counter mismatch)
failed to compress data (zlib)
failed to uncompress data (zlib)
empty raw profile file
profile uses zlib compression but the profile reader was built without zlib support
llvm.instrprof
profile-summary-contextless
Merge context profiles before calculating thresholds.
profile-summary-cutoff-hot
A count is hot if it exceeds the minimum count to reach this percentile of total counts.
profile-summary-cutoff-cold
A count is cold if it is below the minimum count to reach this percentile of total counts.
profile-summary-huge-working-set-size-threshold
The code working set size is considered huge if the number of blocks required to reach the -profile-summary-cutoff-hot percentile exceeds this count.
profile-summary-large-working-set-size-threshold
The code working set size is considered large if the number of blocks required to reach the -profile-summary-cutoff-hot percentile exceeds this count.
profile-summary-hot-count
A fixed hot count that overrides the count derived from profile-summary-cutoff-hot
profile-summary-cold-count
A fixed cold count that overrides the count derived from profile-summary-cutoff-cold
profile-symbol-list-cutoff
Cutoff value about how many symbols in profile symbol list will be used. This is very useful for performance debugging
profile-isfs
Profile uses flow sensitive discriminators
export
*** HeaderSearch Stats:
 files tracked.
 #import/#pragma once files.
 included exactly once.
 max times a file is included.
 #include/#include_next/#import.
    
 #includes skipped due to the multi-include optimization.
 framework lookups.
 subframework lookups.
Private
.framework
.system_framework
Frameworks/
PrivateHeaders/
Modules
file-search
NumIncluded
Number of attempted #includes.
NumMultiIncludeFileOptzn
Number of #includes skipped due to the multi-include optimization.
NumFrameworkLookups
Number of framework lookups.
NumSubFrameworkLookups
Number of subframework lookups.
ident
<<<<
>>>>>>>
Allocation failed
MacroInfo 
 builtin
 disabled
 allow_redefinitions_without_warning
 warn_if_unused
 header_guard
    #define <macro>
DefMacroDirective
UndefMacroDirective
VisibilityMacroDirective
 from_pch
<global>
<private>
exclude
export_as
textual
contents
framework 
module 
framework module
register
_Generic
_Thread_local
concept
co_yield
_Sat
_Decimal32
_Decimal64
_Decimal128
__attribute
__builtin_choose_expr
__builtin_offsetof
__builtin_FILE
__builtin_FUNCTION
__builtin_LINE
__builtin_COLUMN
__builtin_types_compatible_p
__builtin_va_arg
__extension__
__label__
__thread
__FUNCDNAME__
__FUNCSIG__
L__FUNCTION__
L__FUNCSIG__
__is_trivially_destructible
__has_nothrow_move_assign
__has_trivial_move_assign
__has_trivial_move_constructor
__has_nothrow_assign
__has_nothrow_copy
__has_nothrow_constructor
__has_trivial_assign
__has_trivial_copy
__has_trivial_constructor
__has_trivial_destructor
__has_virtual_destructor
__is_literal_type
__has_unique_object_representations
__underlying_type
__reference_binds_to_temporary
__array_rank
__array_extent
__is_same_as
__module_private__
__builtin_ptrauth_type_discriminator
__builtin_xnu_type_signature
__builtin_xnu_type_summary
__builtin_xnu_types_compatible
__builtin_tmo_type_get_metadata
__builtin_astype
vec_step
image1d_t
image1d_array_t
image1d_buffer_t
image2d_t
image2d_array_t
image2d_depth_t
image2d_array_depth_t
image2d_msaa_t
image2d_array_msaa_t
image2d_msaa_depth_t
image2d_array_msaa_depth_t
image3d_t
pipe
__builtin_omp_required_simd_align
__bool
__bridge_retain
__alignof__
__asm
__attribute__
__complex
__complex__
__const__
__decltype
__imag__
__inline
__inline__
__nullptr
__real__
__restrict__
__signed
__signed__
__typeof
__typeof__
__volatile
__volatile__
__w64
__uuidof
__try
__finally
__int8
_int8
__int16
_int16
_int32
_int64
_asm
_alignof
__builtin_alignof
_uuidof
_inline
_declspec
__builtin_convertvector
__char16_t
__char32_t
__unknown_anytype
.api
.spi
excluded
IOKit
hdrstop
__public_macro
__private_macro
_ATFILE_SOURCE
_BSD_SOURCE
_CRT_NONSTDC_NO_WARNINGS
_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES
_CRT_SECURE_NO_WARNINGS
_FILE_OFFSET_BITS
_FORTIFY_SOURCE
_GLIBCXX_ASSERTIONS
_GLIBCXX_CONCEPT_CHECKS
_GLIBCXX_DEBUG
_GLIBCXX_DEBUG_PEDANTIC
_GLIBCXX_PARALLEL
_GLIBCXX_PARALLEL_ASSERTIONS
_GLIBCXX_SANITIZE_VECTOR
_GLIBCXX_USE_CXX11_ABI
_GLIBCXX_USE_DEPRECATED
_GNU_SOURCE
_ISOC11_SOURCE
_ISOC95_SOURCE
_ISOC99_SOURCE
_LARGEFILE64_SOURCE
_POSIX_C_SOURCE
_REENTRANT
_SVID_SOURCE
_THREAD_SAFE
_XOPEN_SOURCE
_XOPEN_SOURCE_EXTENDED
__STDCPP_WANT_MATH_SPEC_FUNCS__
__STDC_FORMAT_MACROS
boost
complex.h
ctype.h
errno.h
fenv.h
float.h
inttypes.h
iso646.h
limits.h
locale.h
math.h
signal.h
stdalign.h
stdarg.h
stdatomic.h
stdbool.h
stddef.h
stdint.h
stdnoreturn.h
string.h
threads.h
time.h
uchar.h
wchar.h
wctype.h
cassert
ccomplex
cctype
cerrno
cfenv
cfloat
cinttypes
ciso646
climits
clocale
csetjmp
csignal
cstdalign
cstdarg
cstdbool
cstddef
cstdint
cstdio
cstring
ctgmath
ctime
cuchar
cwchar
cwctype
algorithm
fstream
functional
locale
scoped_allocator
tuple
type_traits
bitset
shared_mutex
chrono
iomanip
sstream
typeinfo
codecvt
complex
iosfwd
numeric
stdexcept
condition_variable
iostream
ostream
streambuf
utility
istream
exception
strstream
limits
ratio
system_error
aio.h
arpa/inet.h
cpio.h
dirent.h
dlfcn.h
fcntl.h
fmtmsg.h
fnmatch.h
ftw.h
glob.h
grp.h
iconv.h
langinfo.h
libgen.h
monetary.h
mqueue.h
ndbm.h
net/if.h
netdb.h
netinet/in.h
netinet/tcp.h
nl_types.h
poll.h
pthread.h
pwd.h
regex.h
sched.h
search.h
semaphore.h
spawn.h
strings.h
stropts.h
sys/ipc.h
sys/mman.h
sys/msg.h
sys/resource.h
sys/select.h
sys/sem.h
sys/shm.h
sys/socket.h
sys/stat.h
sys/statvfs.h
sys/time.h
sys/times.h
sys/types.h
sys/uio.h
sys/un.h
sys/utsname.h
sys/wait.h
syslog.h
tar.h
termios.h
trace.h
ulimit.h
unistd.h
utime.h
utmpx.h
wordexp.h
'defined'
 to 
MacroState 
 ambiguous
 overrides
 ModuleMacro 
 undef
 active
 overridden
__LINE__
__FILE__
__DATE__
__TIME__
__COUNTER__
_Pragma
__has_cpp_attribute
__BASE_FILE__
__INCLUDE_LEVEL__
__TIMESTAMP__
__identifier
__pragma
__FILE_NAME__
__has_feature
__has_extension
__has_builtin
__has_attribute
__has_c_attribute
__has_declspec_attribute
__has_include
__has_include_next
__has_warning
__is_identifier
__is_target_arch
__is_target_vendor
__is_target_os
__is_target_environment
__has_target_variant
__is_target_variant_os
__is_target_variant_environment
__building_module
__MODULE__
??? ??? ?? ??:??:?? ????
"%s %2d %4d"
"%02d:%02d:%02d"
assume_nonnull
attribute_availability_with_message
attribute_availability_app_extension
attribute_availability_with_version_underscores
attribute_availability_with_strict
attribute_availability_with_replacement
attribute_availability_in_templates
attribute_cf_returns_not_retained
attribute_cf_returns_on_parameters
attribute_deprecated_with_message
attribute_deprecated_with_replacement
attribute_ns_returns_not_retained
attribute_unavailable_with_message
attribute_symbol_metadata_footnote
ptrauth_qualifier_authentication_mode
ptrauth_restricted_intptr_qualifier
ptrauth_vtable_pointer_address_discrimination
ptrauth_vtable_pointer_type_discrimination
ptrauth_member_function_pointer_type_discrimination
ptrauth_function_pointer_type_discrimination
objc_default_synthesize_properties
arc_cf_code_audited
cxx_decltype_incomplete_return_types
cxx_default_function_template_args
cxx_reference_qualified_functions
pragma_clang_attribute_namespaces
pragma_clang_attribute_external_declaration
statement_attributes_with_gnu_syntax
cxx_attributes_on_using_declarations
'__has_warning'
unknown-unknown-
clang
build
pragma hdrstop
endregion
pragma once
mark
push_macro
pop_macro
pragma message
pragma warning
pragma error
poison
system_header
dependency
diagnostic
pragma diagnostic
include_instead
crash
pragma crash
#pragma clang __debug llvm_fatal_error
 imported 
via pragma 
pragma clang __debug captured
 visible 
#pragma clang deprecated
restrict_expansion
#pragma clang restrict_expansion
execution_character_set
pragma execution_character_set
UTF-8
include_alias
__VA_OPT__
*** Preprocessor Stats:
 directives found:
 #define.
 #undef.
  #include/#include_next/#import:
 source files entered.
 max include stack depth
 #if/#ifndef/#ifdef.
 #else/#elif/#elifdef/#elifndef.
 #endif.
 #pragma.
 #if/#ifndef#ifdef regions skipped
 obj/fn/builtin macros expanded, 
 on the fast path.
 token paste (##) operations performed, 
Preprocessor Memory: 
B total
  BumpPtr: 
  Macro Expanded Tokens: 
  Predefines Buffer: 
  Macros: 
  #pragma push_macro Info: 
  Poison Reasons: 
  Comment Handlers: 
__gnu__
_Clang
clang
block
enum
enum_constant
field
function
function(is_member)
namespace
objc_category
objc_implementation
objc_interface
objc_method
objc_method(is_instance)
objc_property
objc_protocol
record
record(unless(is_union))
hasType
hasType(functionType)
type_alias
variable
variable(is_thread_local)
variable(is_global)
variable(is_local)
variable(is_parameter)
variable(unless(is_parameter))
_clang_arm_mve_strict_polymorphism
xclude_from_explicit_instantiation
bjc_arc_weak_reference_unavailable
lang::consumable_set_state_on_read
nu::no_profile_instrument_function
math.h
not a builtin function
__builtin_atan2
__builtin_atan2f
__builtin_atan2l
LdLdLd
__builtin_atan2f128
LLdLLdLLd
__builtin_abs
__builtin_copysign
__builtin_copysignf
__builtin_copysignf16
__builtin_copysignl
__builtin_copysignf128
__builtin_fabs
__builtin_fabsf
__builtin_fabsl
LdLd
__builtin_fabsf16
__builtin_fabsf128
LLdLLd
__builtin_fmod
__builtin_fmodf
__builtin_fmodf16
__builtin_fmodl
__builtin_fmodf128
__builtin_frexp
ddi*
__builtin_frexpf
ffi*
__builtin_frexpl
LdLdi*
__builtin_frexpf128
LLdLLdi*
__builtin_huge_val
__builtin_huge_valf
__builtin_huge_vall
__builtin_huge_valf128
__builtin_inf
__builtin_inff
__builtin_infl
__builtin_inff128
__builtin_labs
LiLi
__builtin_llabs
LLiLLi
__builtin_ldexp
__builtin_ldexpf
__builtin_ldexpl
LdLdi
__builtin_ldexpf128
LLdLLdi
__builtin_modf
ddd*
__builtin_modff
fff*
__builtin_modfl
LdLdLd*
__builtin_modff128
LLdLLdLLd*
__builtin_nan
dcC*
__builtin_nanf
fcC*
__builtin_nanl
LdcC*
__builtin_nanf128
LLdcC*
__builtin_nans
__builtin_nansf
__builtin_nansl
__builtin_nansf128
__builtin_powi
__builtin_powif
__builtin_powil
__builtin_pow
__builtin_powf
__builtin_powf16
__builtin_powl
__builtin_powf128
__builtin_acos
__builtin_acosf
__builtin_acosl
__builtin_acosf128
__builtin_acosh
__builtin_acoshf
__builtin_acoshl
__builtin_acoshf128
__builtin_asin
__builtin_asinf
__builtin_asinl
__builtin_asinf128
__builtin_asinh
__builtin_asinhf
__builtin_asinhl
__builtin_asinhf128
__builtin_atan
__builtin_atanf
__builtin_atanl
__builtin_atanf128
__builtin_atanh
__builtin_atanhf
__builtin_atanhl
__builtin_atanhf128
__builtin_cbrt
__builtin_cbrtf
__builtin_cbrtl
__builtin_cbrtf128
__builtin_ceil
__builtin_ceilf
__builtin_ceilf16
__builtin_ceill
__builtin_ceilf128
__builtin_cos
__builtin_cosf
__builtin_cosf16
__builtin_cosh
__builtin_coshf
__builtin_coshl
__builtin_coshf128
__builtin_cosl
__builtin_cosf128
__builtin_erf
__builtin_erff
__builtin_erfl
__builtin_erff128
__builtin_erfc
__builtin_erfcf
__builtin_erfcl
__builtin_erfcf128
__builtin_exp
__builtin_expf
__builtin_expf16
__builtin_expl
__builtin_expf128
__builtin_exp2
__builtin_exp2f
__builtin_exp2f16
__builtin_exp2l
__builtin_exp2f128
__builtin_expm1
__builtin_expm1f
__builtin_expm1l
__builtin_expm1f128
__builtin_fdim
__builtin_fdimf
__builtin_fdiml
__builtin_fdimf128
__builtin_floor
__builtin_floorf
__builtin_floorf16
__builtin_floorl
__builtin_floorf128
__builtin_fma
dddd
__builtin_fmaf
ffff
__builtin_fmaf16
hhhh
__builtin_fmal
LdLdLdLd
__builtin_fmaf128
LLdLLdLLdLLd
__builtin_fmax
__builtin_fmaxf
__builtin_fmaxf16
__builtin_fmaxl
__builtin_fmaxf128
__builtin_fmin
__builtin_fminf
__builtin_fminf16
__builtin_fminl
__builtin_fminf128
__builtin_hypot
__builtin_hypotf
__builtin_hypotl
__builtin_hypotf128
__builtin_ilogb
__builtin_ilogbf
__builtin_ilogbl
__builtin_ilogbf128
iLLd
__builtin_lgamma
__builtin_lgammaf
__builtin_lgammal
__builtin_lgammaf128
__builtin_llrint
LLid
__builtin_llrintf
LLif
__builtin_llrintl
LLiLd
__builtin_llrintf128
LLiLLd
__builtin_llround
__builtin_llroundf
__builtin_llroundl
__builtin_llroundf128
__builtin_log
__builtin_log10
__builtin_log10f
__builtin_log10f16
__builtin_log10l
__builtin_log10f128
__builtin_log1p
__builtin_log1pf
__builtin_log1pl
__builtin_log1pf128
__builtin_log2
__builtin_log2f
__builtin_log2f16
__builtin_log2l
__builtin_log2f128
__builtin_logb
__builtin_logbf
__builtin_logbl
__builtin_logbf128
__builtin_logf
__builtin_logf16
__builtin_logl
__builtin_logf128
__builtin_lrint
__builtin_lrintf
__builtin_lrintl
LiLd
__builtin_lrintf128
LiLLd
__builtin_lround
__builtin_lroundf
__builtin_lroundl
__builtin_lroundf128
__builtin_nearbyint
__builtin_nearbyintf
__builtin_nearbyintl
__builtin_nearbyintf128
__builtin_nextafter
__builtin_nextafterf
__builtin_nextafterl
__builtin_nextafterf128
__builtin_nexttoward
ddLd
__builtin_nexttowardf
ffLd
__builtin_nexttowardl
__builtin_nexttowardf128
__builtin_remainder
__builtin_remainderf
__builtin_remainderl
__builtin_remainderf128
__builtin_remquo
dddi*
__builtin_remquof
fffi*
__builtin_remquol
LdLdLdi*
__builtin_remquof128
LLdLLdLLdi*
__builtin_rint
__builtin_rintf
__builtin_rintf16
__builtin_rintl
__builtin_rintf128
__builtin_round
__builtin_roundf
__builtin_roundf16
__builtin_roundl
__builtin_roundf128
__builtin_scalbln
ddLi
__builtin_scalblnf
ffLi
__builtin_scalblnl
LdLdLi
__builtin_scalblnf128
LLdLLdLi
__builtin_scalbn
__builtin_scalbnf
__builtin_scalbnl
__builtin_scalbnf128
__builtin_sin
__builtin_sinf
__builtin_sinf16
__builtin_sinh
__builtin_sinhf
__builtin_sinhl
__builtin_sinhf128
__builtin_sinl
__builtin_sinf128
__builtin_sqrt
__builtin_sqrtf
__builtin_sqrtf16
__builtin_sqrtl
__builtin_sqrtf128
__builtin_tan
__builtin_tanf
__builtin_tanh
__builtin_tanhf
__builtin_tanhl
__builtin_tanhf128
__builtin_tanl
__builtin_tanf128
__builtin_tgamma
__builtin_tgammaf
__builtin_tgammal
__builtin_tgammaf128
__builtin_trunc
__builtin_truncf
__builtin_truncl
__builtin_truncf128
__builtin_truncf16
__builtin_flt_rounds
__builtin_cabs
__builtin_cabsf
__builtin_cabsl
LdXLd
__builtin_cacos
XdXd
__builtin_cacosf
XfXf
__builtin_cacosh
__builtin_cacoshf
__builtin_cacoshl
XLdXLd
__builtin_cacosl
__builtin_carg
__builtin_cargf
__builtin_cargl
__builtin_casin
__builtin_casinf
__builtin_casinh
__builtin_casinhf
__builtin_casinhl
__builtin_casinl
__builtin_catan
__builtin_catanf
__builtin_catanh
__builtin_catanhf
__builtin_catanhl
__builtin_catanl
__builtin_ccos
__builtin_ccosf
__builtin_ccosl
__builtin_ccosh
__builtin_ccoshf
__builtin_ccoshl
__builtin_cexp
__builtin_cexpf
__builtin_cexpl
__builtin_cimag
__builtin_cimagf
__builtin_cimagl
__builtin_conj
__builtin_conjf
__builtin_conjl
__builtin_clog
__builtin_clogf
__builtin_clogl
__builtin_cproj
__builtin_cprojf
__builtin_cprojl
__builtin_cpow
XdXdXd
__builtin_cpowf
XfXfXf
__builtin_cpowl
XLdXLdXLd
__builtin_creal
__builtin_crealf
__builtin_creall
__builtin_csin
__builtin_csinf
__builtin_csinl
__builtin_csinh
__builtin_csinhf
__builtin_csinhl
__builtin_csqrt
__builtin_csqrtf
__builtin_csqrtl
__builtin_ctan
__builtin_ctanf
__builtin_ctanl
__builtin_ctanh
__builtin_ctanhf
__builtin_ctanhl
__builtin_complex
__builtin_isgreater
Fnct
__builtin_isgreaterequal
__builtin_isless
__builtin_islessequal
__builtin_islessgreater
__builtin_isunordered
__builtin_fpclassify
iiiiii.
__builtin_isfinite
__builtin_isinf
__builtin_isinf_sign
__builtin_isnan
__builtin_isnormal
__builtin_signbit
__builtin_signbitf
__builtin_signbitl
__builtin_canonicalize
__builtin_canonicalizef
__builtin_canonicalizef16
__builtin_canonicalizel
__builtin_clzs
__builtin_clz
__builtin_clzl
iULi
__builtin_clzll
iULLi
__builtin_ctzs
__builtin_ctz
__builtin_ctzl
__builtin_ctzll
__builtin_ffs
__builtin_ffsl
__builtin_ffsll
iLLi
__builtin_parity
__builtin_parityl
__builtin_parityll
__builtin_popcount
__builtin_popcountl
__builtin_popcountll
__builtin_clrsb
__builtin_clrsbl
__builtin_clrsbll
__builtin_bswap16
UsUs
__builtin_bswap32
UZiUZi
__builtin_bswap64
UWiUWi
__builtin_bitreverse8
UcUc
__builtin_bitreverse16
__builtin_bitreverse32
__builtin_bitreverse64
__builtin_rotateleft8
UcUcUc
__builtin_rotateleft16
UsUsUs
__builtin_rotateleft32
UZiUZiUZi
__builtin_rotateleft64
UWiUWiUWi
__builtin_rotateright8
__builtin_rotateright16
__builtin_rotateright32
__builtin_rotateright64
__builtin_calloc
v*zz
__builtin_constant_p
nctu
__builtin_classify_type
__builtin___CFStringMakeConstantString
FC*cC*
__builtin___NSStringMakeConstantString
__builtin_va_start
__builtin_va_end
__builtin_va_copy
__builtin_stdarg_start
__builtin_assume_aligned
v*vC*z.
__builtin_bcmp
ivC*vC*z
__builtin_bcopy
vv*v*z
__builtin_bzero
vv*z
__builtin_fprintf
iP*cC*.
Fp:1:
__builtin_free
__builtin_malloc
__builtin_memchr
v*vC*iz
__builtin_memcmp
__builtin_memcpy
v*v*vC*z
__builtin_memcpy_inline
vv*vC*Iz
__builtin_memmove
__builtin_mempcpy
__builtin_memset
v*v*iz
__builtin_printf
icC*.
Fp:0:
__builtin_stpcpy
c*c*cC*
__builtin_stpncpy
c*c*cC*z
__builtin_strcasecmp
icC*cC*
__builtin_strcat
__builtin_strchr
c*cC*i
__builtin_strcmp
__builtin_strcpy
__builtin_strcspn
zcC*cC*
__builtin_strdup
c*cC*
__builtin_strlen
zcC*
__builtin_strncasecmp
icC*cC*z
__builtin_strncat
__builtin_strncmp
__builtin_strncpy
__builtin_strndup
c*cC*z
__builtin_strpbrk
c*cC*cC*
__builtin_strrchr
__builtin_strspn
__builtin_strstr
__builtin_wcschr
w*wC*w
__builtin_wcscmp
iwC*wC*
__builtin_wcslen
zwC*
__builtin_wcsncmp
iwC*wC*z
__builtin_wmemchr
w*wC*wz
__builtin_wmemcmp
__builtin_wmemcpy
w*w*wC*z
__builtin_wmemmove
__builtin_realloc
v*v*z
__builtin_return_address
v*IUi
__builtin_extract_return_addr
v*v*
__builtin_frame_address
__builtin___clear_cache
vc*c*
__builtin_setjmp
iv**
__builtin_longjmp
vv**i
__builtin_unwind_init
__builtin_eh_return_data_regno
__builtin_snprintf
ic*zcC*.
nFp:2:
__builtin_sprintf
ic*cC*.
nFP:1:
__builtin_vsnprintf
ic*zcC*a
nFP:2:
__builtin_vsprintf
ic*cC*a
__builtin_thread_pointer
__builtin_launder
__builtin_is_constant_evaluated
__builtin_get_vtable_pointer
__builtin_eh_return
vzv*
__builtin_frob_return_addr
__builtin_dwarf_cfa
__builtin_init_dwarf_reg_size_table
__builtin_dwarf_sp_column
__builtin_extend_pointer
ULLiv*
__builtin_object_size
zvC*i
__builtin_dynamic_object_size
__builtin___memcpy_chk
v*v*vC*zz
__builtin___memccpy_chk
v*v*vC*izz
__builtin___memmove_chk
__builtin___mempcpy_chk
__builtin___memset_chk
v*v*izz
__builtin___stpcpy_chk
__builtin___strcat_chk
__builtin___strcpy_chk
__builtin___strlcat_chk
zc*cC*zz
__builtin___strlcpy_chk
__builtin___strncat_chk
c*c*cC*zz
__builtin___strncpy_chk
__builtin___stpncpy_chk
__builtin___snprintf_chk
ic*zizcC*.
Fp:4:
__builtin___sprintf_chk
ic*izcC*.
Fp:3:
__builtin___vsnprintf_chk
ic*zizcC*a
FP:4:
__builtin___vsprintf_chk
ic*izcC*a
FP:3:
__builtin___fprintf_chk
iP*icC*.
Fp:2:
__builtin___printf_chk
iicC*.
__builtin___vfprintf_chk
iP*icC*a
FP:2:
__builtin___vprintf_chk
iicC*a
FP:1:
__builtin_unpredictable
__builtin_expect
LiLiLi
__builtin_expect_with_probability
LiLiLid
__builtin_prefetch
vvC*.
__builtin_readcyclecounter
ULLi
__builtin_trap
__builtin_debugtrap
__builtin_unreachable
__builtin_shufflevector
__builtin_convertvector
__builtin_alloca
__builtin_alloca_with_align
v*zIz
__builtin_call_with_static_chain
__builtin_elementwise_abs
__builtin_elementwise_max
__builtin_elementwise_min
__builtin_elementwise_add_sat
__builtin_elementwise_sub_sat
__builtin_reduce_max
__builtin_reduce_min
__builtin_matrix_transpose
__builtin_matrix_column_major_load
__builtin_matrix_column_major_store
__sync_fetch_and_add
__sync_fetch_and_add_1
ccD*c.
__sync_fetch_and_add_2
ssD*s.
__sync_fetch_and_add_4
iiD*i.
__sync_fetch_and_add_8
LLiLLiD*LLi.
__sync_fetch_and_add_16
LLLiLLLiD*LLLi.
__sync_fetch_and_sub
__sync_fetch_and_sub_1
__sync_fetch_and_sub_2
__sync_fetch_and_sub_4
__sync_fetch_and_sub_8
__sync_fetch_and_sub_16
__sync_fetch_and_or
__sync_fetch_and_or_1
__sync_fetch_and_or_2
__sync_fetch_and_or_4
__sync_fetch_and_or_8
__sync_fetch_and_or_16
__sync_fetch_and_and
__sync_fetch_and_and_1
__sync_fetch_and_and_2
__sync_fetch_and_and_4
__sync_fetch_and_and_8
__sync_fetch_and_and_16
__sync_fetch_and_xor
__sync_fetch_and_xor_1
__sync_fetch_and_xor_2
__sync_fetch_and_xor_4
__sync_fetch_and_xor_8
__sync_fetch_and_xor_16
__sync_fetch_and_nand
__sync_fetch_and_nand_1
__sync_fetch_and_nand_2
__sync_fetch_and_nand_4
__sync_fetch_and_nand_8
__sync_fetch_and_nand_16
__sync_add_and_fetch
__sync_add_and_fetch_1
__sync_add_and_fetch_2
__sync_add_and_fetch_4
__sync_add_and_fetch_8
__sync_add_and_fetch_16
__sync_sub_and_fetch
__sync_sub_and_fetch_1
__sync_sub_and_fetch_2
__sync_sub_and_fetch_4
__sync_sub_and_fetch_8
__sync_sub_and_fetch_16
__sync_or_and_fetch
__sync_or_and_fetch_1
__sync_or_and_fetch_2
__sync_or_and_fetch_4
__sync_or_and_fetch_8
__sync_or_and_fetch_16
__sync_and_and_fetch
__sync_and_and_fetch_1
__sync_and_and_fetch_2
__sync_and_and_fetch_4
__sync_and_and_fetch_8
__sync_and_and_fetch_16
__sync_xor_and_fetch
__sync_xor_and_fetch_1
__sync_xor_and_fetch_2
__sync_xor_and_fetch_4
__sync_xor_and_fetch_8
__sync_xor_and_fetch_16
__sync_nand_and_fetch
__sync_nand_and_fetch_1
__sync_nand_and_fetch_2
__sync_nand_and_fetch_4
__sync_nand_and_fetch_8
__sync_nand_and_fetch_16
__sync_bool_compare_and_swap
__sync_bool_compare_and_swap_1
bcD*cc.
__sync_bool_compare_and_swap_2
bsD*ss.
__sync_bool_compare_and_swap_4
biD*ii.
__sync_bool_compare_and_swap_8
bLLiD*LLiLLi.
__sync_bool_compare_and_swap_16
bLLLiD*LLLiLLLi.
__sync_val_compare_and_swap
__sync_val_compare_and_swap_1
ccD*cc.
__sync_val_compare_and_swap_2
ssD*ss.
__sync_val_compare_and_swap_4
iiD*ii.
__sync_val_compare_and_swap_8
LLiLLiD*LLiLLi.
__sync_val_compare_and_swap_16
LLLiLLLiD*LLLiLLLi.
__sync_lock_test_and_set
__sync_lock_test_and_set_1
__sync_lock_test_and_set_2
__sync_lock_test_and_set_4
__sync_lock_test_and_set_8
__sync_lock_test_and_set_16
__sync_lock_release
__sync_lock_release_1
vcD*.
__sync_lock_release_2
vsD*.
__sync_lock_release_4
viD*.
__sync_lock_release_8
vLLiD*.
__sync_lock_release_16
vLLLiD*.
__sync_swap
__sync_swap_1
__sync_swap_2
__sync_swap_4
__sync_swap_8
__sync_swap_16
__c11_atomic_init
__c11_atomic_load
__c11_atomic_store
__c11_atomic_exchange
__c11_atomic_compare_exchange_strong
__c11_atomic_compare_exchange_weak
__c11_atomic_fetch_add
__c11_atomic_fetch_sub
__c11_atomic_fetch_and
__c11_atomic_fetch_or
__c11_atomic_fetch_xor
__c11_atomic_fetch_max
__c11_atomic_fetch_min
__c11_atomic_thread_fence
__c11_atomic_signal_fence
__c11_atomic_is_lock_free
__atomic_load
__atomic_load_n
__atomic_store
__atomic_store_n
__atomic_exchange
__atomic_exchange_n
__atomic_compare_exchange
__atomic_compare_exchange_n
__atomic_fetch_add
__atomic_fetch_sub
__atomic_fetch_and
__atomic_fetch_or
__atomic_fetch_xor
__atomic_fetch_nand
__atomic_add_fetch
__atomic_sub_fetch
__atomic_and_fetch
__atomic_or_fetch
__atomic_xor_fetch
__atomic_max_fetch
__atomic_min_fetch
__atomic_nand_fetch
__atomic_test_and_set
bvD*i
__atomic_clear
vvD*i
__atomic_thread_fence
__atomic_signal_fence
__atomic_always_lock_free
bzvCD*
__atomic_is_lock_free
__opencl_atomic_init
__opencl_atomic_load
__opencl_atomic_store
__opencl_atomic_exchange
__opencl_atomic_compare_exchange_strong
__opencl_atomic_compare_exchange_weak
__opencl_atomic_fetch_add
__opencl_atomic_fetch_sub
__opencl_atomic_fetch_and
__opencl_atomic_fetch_or
__opencl_atomic_fetch_xor
__opencl_atomic_fetch_min
__opencl_atomic_fetch_max
__atomic_fetch_min
__atomic_fetch_max
__sync_synchronize
__sync_fetch_and_min
iiD*i
__sync_fetch_and_max
__sync_fetch_and_umin
UiUiD*Ui
__sync_fetch_and_umax
__builtin_abort
__builtin_index
__builtin_rindex
__warn_memset_zero_len
_alloca
__annotation
wC*.
__assume
_bittest
UcNiC*Ni
_bittestandcomplement
UcNi*Ni
_bittestandreset
_bittestandset
_bittest64
UcWiC*Wi
_bittestandcomplement64
UcWi*Wi
_bittestandreset64
_bittestandset64
_byteswap_ushort
stdlib.h
_byteswap_ulong
UNiUNi
_byteswap_uint64
ULLiULLi
__debugbreak
__exception_code
_exception_code
__exception_info
_exception_info
__abnormal_termination
_abnormal_termination
__GetExceptionInfo
_InterlockedAnd8
ccD*c
_InterlockedAnd16
ssD*s
_InterlockedAnd
NiNiD*Ni
_InterlockedCompareExchange8
ccD*cc
_InterlockedCompareExchange16
ssD*ss
_InterlockedCompareExchange
NiNiD*NiNi
_InterlockedCompareExchange64
LLiLLiD*LLiLLi
_InterlockedCompareExchangePointer
v*v*D*v*v*
_InterlockedCompareExchangePointer_nf
_InterlockedDecrement16
ssD*
_InterlockedDecrement
NiNiD*
_InterlockedExchange
_InterlockedExchange8
_InterlockedExchange16
_InterlockedExchangeAdd8
_InterlockedExchangeAdd16
_InterlockedExchangeAdd
_InterlockedExchangePointer
v*v*D*v*
_InterlockedExchangeSub8
_InterlockedExchangeSub16
_InterlockedExchangeSub
_InterlockedIncrement16
_InterlockedIncrement
_InterlockedOr8
_InterlockedOr16
_InterlockedOr
_InterlockedXor8
_InterlockedXor16
_InterlockedXor
_interlockedbittestandreset
UcNiD*Ni
_interlockedbittestandreset64
UcWiD*Wi
_interlockedbittestandreset_acq
_interlockedbittestandreset_nf
_interlockedbittestandreset_rel
_interlockedbittestandset
_interlockedbittestandset64
_interlockedbittestandset_acq
_interlockedbittestandset_nf
_interlockedbittestandset_rel
__iso_volatile_load8
ccCD*
__iso_volatile_load16
ssCD*
__iso_volatile_load32
iiCD*
__iso_volatile_load64
LLiLLiCD*
__iso_volatile_store8
vcD*c
__iso_volatile_store16
vsD*s
__iso_volatile_store32
viD*i
__iso_volatile_store64
vLLiD*LLi
__noop
__lzcnt16
__lzcnt
UiUi
__lzcnt64
__popcnt16
__popcnt
__popcnt64
_ReturnAddress
_rotl8
_rotl16
UsUsUc
_rotl
UiUii
_lrotl
UNiUNii
_rotl64
UWiUWii
_rotr8
_rotr16
_rotr
_lrotr
_rotr64
__va_start
vc**.
__fastfail
_setjmpex
setjmpex.h
va_start
stdarg.h
va_end
va_copy
abort
calloc
exit
_Exit
malloc
realloc
free
strtod
dcC*c**
strtof
fcC*c**
strtold
LdcC*c**
strtol
LicC*c**i
strtoll
LLicC*c**i
strtoul
ULicC*c**i
strtoull
ULLicC*c**i
aligned_alloc
memcpy
string.h
memcmp
memmove
strcpy
strncpy
strcmp
strncmp
strcat
strncat
strxfrm
zc*cC*z
memchr
strchr
strcspn
strpbrk
strrchr
strspn
strstr
strtok
memset
strerror
strlen
printf
fp:0:
stdio.h
fprintf
fp:1:
snprintf
fp:2:
sprintf
vprintf
icC*a
fP:0:
vfprintf
iP*cC*a
fP:1:
vsnprintf
fP:2:
vsprintf
scanf
icC*R.
fs:0:
fscanf
iP*RcC*R.
fs:1:
sscanf
icC*RcC*R.
vscanf
icC*Ra
fS:0:
vfscanf
iP*RcC*Ra
fS:1:
vsscanf
icC*RcC*Ra
fopen
P*cC*cC*
fread
zv*zzP*
fwrite
zvC*zzP*
isalnum
ctype.h
isalpha
isblank
iscntrl
isdigit
isgraph
islower
isprint
ispunct
isspace
isupper
isxdigit
tolower
toupper
wcschr
wchar.h
wcscmp
wcslen
wcsncmp
wmemchr
wmemcmp
wmemcpy
wmemmove
setjmp
setjmp.h
longjmp
alloca
memalign
malloc.h
memccpy
v*v*vC*iz
mempcpy
stpcpy
stpncpy
strdup
strndup
index
strings.h
rindex
bzero
bcmp
strcasecmp
strncasecmp
_exit
unistd.h
vfork
pthread_create
fC<2,3>
pthread.h
_setjmp
__sigsetjmp
iSJi
sigsetjmp
savectx
getcontext
_longjmp
siglongjmp
vSJi
strlcpy
strlcat
objc_msgSend
GGH.
objc/message.h
objc_msgSend_fpret
LdGH.
objc_msgSend_fp2ret
XLdGH.
objc_msgSend_stret
vGH.
objc_msgSendSuper
GM*H.
objc_msgSendSuper_stret
vM*H.
objc_getClass
GcC*
objc/runtime.h
objc_getMetaClass
objc_enumerationMutation
objc_read_weak
objc/objc-auto.h
objc_assign_weak
GGG*
objc_assign_ivar
GGGY
objc_assign_global
objc_assign_strongCast
objc_exception_extract
objc/objc-exception.h
objc_exception_try_enter
objc_exception_try_exit
objc_exception_match
objc_exception_throw
objc_sync_enter
objc/objc-sync.h
objc_sync_exit
__builtin_objc_memmove_collectable
NSLog
Foundation/NSObjCRuntime.h
NSLogv
atan2
atan2f
atan2l
labs
llabs
copysign
copysignf
copysignl
fabs
fabsf
fabsl
finite
finitef
finitel
__finite
__finitef
__finitel
fmod
fmodf
fmodl
frexp
frexpf
frexpl
ldexp
ldexpf
ldexpl
modf
modff
modfl
nanf
nanl
powf
powl
acos
acosf
acosl
acosh
acoshf
acoshl
asin
asinf
asinl
asinh
asinhf
asinhl
atan
atanf
atanl
atanh
atanhf
atanhl
cbrt
cbrtf
cbrtl
ceil
ceilf
ceill
cosf
cosl
cosh
coshf
coshl
erff
erfl
erfc
erfcf
erfcl
expf
expl
exp2
exp2f
exp2l
expm1
expm1f
expm1l
fdim
fdimf
fdiml
floor
floorf
floorl
fmaf
fmal
fmax
fmaxf
fmaxl
fmin
fminf
fminl
hypot
hypotf
hypotl
ilogb
ilogbf
ilogbl
lgamma
lgammaf
lgammal
llrint
llrintf
llrintl
llround
llroundf
llroundl
logf
logl
log10
log10f
log10l
log1p
log1pf
log1pl
log2
log2f
log2l
logb
logbf
logbl
lrint
lrintf
lrintl
lround
lroundf
lroundl
nearbyint
nearbyintf
nearbyintl
nextafter
nextafterf
nextafterl
nexttoward
nexttowardf
nexttowardl
remainder
remainderf
remainderl
remquo
remquof
remquol
rint
rintf
rintl
round
roundf
roundl
scalbln
scalblnf
scalblnl
scalbn
scalbnf
scalbnl
sinf
sinl
sinh
sinhf
sinhl
sqrt
sqrtf
sqrtl
tanf
tanl
tanh
tanhf
tanhl
tgamma
tgammaf
tgammal
trunc
truncf
truncl
cabs
complex.h
cabsf
cabsl
cacos
cacosf
cacosl
cacosh
cacoshf
cacoshl
carg
cargf
cargl
casin
casinf
casinl
casinh
casinhf
casinhl
catan
catanf
catanl
catanh
catanhf
catanhl
ccos
ccosf
ccosl
ccosh
ccoshf
ccoshl
cexp
cexpf
cexpl
cimag
cimagf
cimagl
conj
conjf
conjl
clog
clogf
clogl
cproj
cprojf
cprojl
cpow
cpowf
cpowl
creal
crealf
creall
csin
csinf
csinl
csinh
csinhf
csinhl
csqrt
csqrtf
csqrtl
ctan
ctanf
ctanl
ctanh
ctanhf
ctanhl
__sinpi
__sinpif
__cospi
__cospif
__tanpi
__tanpif
__exp10
__exp10f
_Block_object_assign
vv*vC*iC
Blocks.h
_Block_object_dispose
vvC*iC
__builtin_annotation
__builtin_assume
__builtin_addcb
UcUcCUcCUcCUc*
__builtin_addcs
UsUsCUsCUsCUs*
__builtin_addc
UiUiCUiCUiCUi*
__builtin_addcl
ULiULiCULiCULiCULi*
__builtin_addcll
ULLiULLiCULLiCULLiCULLi*
__builtin_subcb
__builtin_subcs
__builtin_subc
__builtin_subcl
__builtin_subcll
__builtin_add_overflow
__builtin_sub_overflow
__builtin_mul_overflow
__builtin_uadd_overflow
bUiCUiCUi*
__builtin_uaddl_overflow
bULiCULiCULi*
__builtin_uaddll_overflow
bULLiCULLiCULLi*
__builtin_usub_overflow
__builtin_usubl_overflow
__builtin_usubll_overflow
__builtin_umul_overflow
__builtin_umull_overflow
__builtin_umulll_overflow
__builtin_sadd_overflow
bSiCSiCSi*
__builtin_saddl_overflow
bSLiCSLiCSLi*
__builtin_saddll_overflow
bSLLiCSLLiCSLLi*
__builtin_ssub_overflow
__builtin_ssubl_overflow
__builtin_ssubll_overflow
__builtin_smul_overflow
__builtin_smull_overflow
__builtin_smulll_overflow
__builtin_addressof
v*v&
__builtin_operator_new
__builtin_operator_delete
__builtin_char_memchr
c*cC*iz
__builtin_dump_struct
ivC*v*
__builtin_preserve_access_index
__builtin_is_aligned
bvC*z
__builtin_align_up
v*vC*z
__builtin_align_down
__builtin___get_unsafe_stack_start
__builtin___get_unsafe_stack_bottom
__builtin___get_unsafe_stack_top
__builtin___get_unsafe_stack_ptr
__builtin_nontemporal_store
__builtin_nontemporal_load
__builtin_coro_resume
__builtin_coro_destroy
__builtin_coro_done
__builtin_coro_promise
v*v*IiIb
__builtin_coro_size
__builtin_coro_frame
__builtin_coro_noop
__builtin_coro_free
__builtin_coro_id
v*Iiv*v*v*
__builtin_coro_alloc
__builtin_coro_begin
__builtin_coro_end
bv*Ib
__builtin_coro_suspend
__builtin_coro_param
bv*v*
__builtin_ptrauth_strip
v*v*i
__builtin_ptrauth_blend_discriminator
zv*i
__builtin_ptrauth_sign_constant
v*v*iv*
__builtin_ptrauth_sign_unauthenticated
__builtin_ptrauth_sign_generic_data
zv*v*
__builtin_ptrauth_auth_and_resign
v*v*iv*iv*
__builtin_ptrauth_auth
__builtin_ptrauth_string_discriminator
__builtin_virtual_member_address
v*v*v*
__builtin_load_member_function_pointer
read_pipe
write_pipe
reserve_read_pipe
reserve_write_pipe
commit_write_pipe
commit_read_pipe
sub_group_reserve_read_pipe
sub_group_reserve_write_pipe
sub_group_commit_read_pipe
sub_group_commit_write_pipe
work_group_reserve_read_pipe
work_group_reserve_write_pipe
work_group_commit_read_pipe
work_group_commit_write_pipe
get_pipe_num_packets
get_pipe_max_packets
enqueue_kernel
get_kernel_work_group_size
get_kernel_preferred_work_group_size_multiple
get_kernel_max_sub_group_size_for_ndrange
get_kernel_sub_group_count_for_ndrange
to_global
to_local
to_private
__builtin_store_half
vdh*
__builtin_store_halff
vfh*
__builtin_load_half
dhC*
__builtin_load_halff
fhC*
__builtin_os_log_format_buffer_size
zcC*.
p:0:nut
__builtin_os_log_format
v*v*cC*.
p:0:nt
__builtin_get_device_side_mangled_name
cC*.
__xray_customevent
vcC*z
__xray_typedevent
vzcC*z
__builtin_ms_va_start
vc*&.
__builtin_ms_va_end
vc*&
__builtin_ms_va_copy
vc*&c*&
__arithmetic_fence
__builtin_tmo_type_get_size
__builtin_tmo_type_get_alignment
unknown
10.0
10.1
10.2
11.0
11.1
11.2
11.3
11.4
sm_20
compute_20
sm_21
sm_30
compute_30
sm_32
compute_32
sm_35
compute_35
sm_37
compute_37
sm_50
compute_50
sm_52
compute_52
sm_53
compute_53
sm_60
compute_60
sm_61
compute_61
sm_62
compute_62
sm_70
compute_70
sm_72
compute_72
sm_75
compute_75
sm_80
compute_80
sm_86
compute_86
gfx600
compute_amdgcn
gfx601
gfx602
gfx700
gfx701
gfx702
gfx703
gfx704
gfx705
gfx801
gfx802
gfx803
gfx805
gfx810
gfx900
gfx902
gfx904
gfx906
gfx908
gfx909
gfx90a
gfx90c
gfx1010
gfx1011
gfx1012
gfx1013
gfx1030
gfx1031
gfx1032
gfx1033
gfx1034
gfx1035
MaximumDeploymentTarget
VersionMap
macOS_iOSMac
iOSMac_macOS
SDKSettings.json
invalid SDKSettings.json
'nonnull'
'_Nonnull'
'nullable'
'_Nullable'
'null_unspecified'
'_Null_unspecified'
_Nullable_result
diagnostic state at 
<unknown 
 pragma
 no-error
 no-fatal
 overruled
<can't format argument>
File 
 <FileID 
 has_local_transitions
: state 
Lexical or Preprocessor Issue
Semantic Issue
Lambda Issue
Parse Issue
ARC Semantic Issue
ARC and @properties
ARC Casting Rules
ARC Parse Issue
ARC Weak References
ARC Restrictions
OpenMP Issue
Inline Assembly Issue
AST Deserialization Issue
Firebloom Pointer Attributes Issue
Modules Issue
Coroutines Issue
Concepts Issue
Dependency Directive Source Minimization Issue
Backend Issue
SourceMgr Reported Issue
Refactoring Continuation Issue
API Notes Issue
Related Result Type Issue
Rename Issue
AST Serialization Issue
Nullability Issue
Generics Issue
User-Defined Issue
Refactoring Invocation Issue
VTable ABI Issue
Value Conversion Issue
Documentation Issue
ARC Retain Cycle
Deprecations
Format String Issue
Cocoa API Issue
#pragma message Directive
Instrumentation Issue
Unused Entity Issue
__is_lvalue_expr
__is_rvalue_expr
*** File Manager Stats:
 real files found, 
 real dirs found.
 virtual files found, 
 virtual dirs found.
 dir lookups, 
 dir cache misses.
 file lookups, 
 file cache misses.
NumDirLookups
Number of directory lookups.
NumDirCacheMisses
Number of directory cache misses.
NumFileLookups
Number of file lookups.
NumFileCacheMisses
Number of file cache misses.
delete
and_eq
bitand
bitor
compl
not_eq
or_eq
xor_eq
co_await
_Nonnull
_Nullable
_Nullable_result
_Null_unspecified
not_keyword
defs
__ieee128
*** Identifier Table Stats:
# Identifiers:   %d
# Empty Buckets: %d
Hash density (#identifiers per bucket): %f
Ave identifier length: %f
Max identifier length: %d
<null selector>
dealloc
finalize
retainCount
initialize
performSelectorInBackground
performSelectorOnMainThread
stringByAppendingFormat
stringWithFormat
new[]
delete[]
nonnull
nullable
null_unspecified
C++ for OpenCL
OpenCL C
 version 
getLangStandardForKind() on unspecified kind
iso9899:199409
gnu89
gnu99
gnu11
gnu17
gnu2x
c++98
gnu++98
c++11
gnu++11
c++14
gnu++14
c++17
gnu++17
c++20
gnu++20
c++2b
gnu++2b
cl1.0
cl1.1
cl1.2
cl2.0
cl3.0
clc++1.0
clc++2021
cuda
ISO C 1990
ISO C 1990 with amendment 1
ISO C 1990 with GNU extensions
ISO C 1999
ISO C 1999 with GNU extensions
ISO C 2011
ISO C 2011 with GNU extensions
ISO C 2017
ISO C 2017 with GNU extensions
Working Draft for ISO C2x
Working Draft for ISO C2x with GNU extensions
ISO C++ 1998 with amendments
ISO C++ 1998 with amendments and GNU extensions
ISO C++ 2011 with amendments
ISO C++ 2011 with amendments and GNU extensions
ISO C++ 2014 with amendments
ISO C++ 2014 with amendments and GNU extensions
ISO C++ 2017 with amendments
ISO C++ 2017 with amendments and GNU extensions
ISO C++ 2020 DIS
ISO C++ 2020 DIS with GNU extensions
Working draft for ISO C++ 2023 DIS
Working draft for ISO C++ 2023 DIS with GNU extensions
OpenCL 1.0
OpenCL 1.1
OpenCL 1.2
OpenCL 2.0
OpenCL 3.0
C++ for OpenCL 1.0
C++ for OpenCL 2021
NVIDIA CUDA(tm)
_Builtin_stddef_max_align_t
ptrauth
explicit 
 [system]
 [extern_c]
 [swift_infer_import_as_member]
umbrella header "
umbrella "
config_macros 
[exhaustive]
textual 
private 
private textual 
exclude 
header "
" { size 
 mtime 
 size 
import 
use 
link 
conflict 
module * {
export *
macosx
macosx-fragile
watchos
bridgeos
gnustep
objfw
firstprivate
close
spread
primary
guided
monotonic
nonmonotonic
mutexinoutset
depobj
sink
uval
from
tofrom
present
ompx_hold
scalar
aggregate
seq_cst
acq_rel
relaxed
nohost
conditional
concurrent
ancestor
device_num
inscan
nothing
need_device_ptr
type
shift
undefined
undefined-trap
implicit-integer-truncation
implicit-integer-arithmetic-value-change
implicit-conversion
bounds
none
global
invalid
always
runtime
never
<invalid loc>
<invalid>
 <Spelling=
UTF-32 (BE)
UTF-32 (LE)
UTF-16 (BE)
UTF-16 (LE)
UTF-7
UTF-1
UTF-EBCDIC
SCSU
BOCU-1
GB-18030
<<<INVALID BUFFER>>
<<<<<INVALID SOURCE LOCATION>>>>>
<<<<INVALID BUFFER>>>>
<invalid loc>
<invalid buffer>
*** Source Manager Stats:
 files mapped, 
 mem buffers mapped.
 local SLocEntry's allocated (
 bytes of capacity), 
B of Sloc address space used.
 loaded SLocEntries allocated, 
 bytes of files mapped, 
 files with line #'s computed, 
 files with macro args computed.
FileID scans: 
 linear, 
 binary.
sramecc
xnack
mcount
cf-protection=branch
cf-protection=return
signed char
unsigned char
short
unsigned short
unsigned int
long int
long unsigned int
long long int
long long unsigned int
__tune_
__declspec(a)
__attribute__((a))
__attribute__((__
__))
e-m:e-p:32:32-i1:8:32-i8:8:32-i16:16:32-i32:32:32-f32:32:32-i64:32-f64:32-a:0:32-n32
e-m:e-p:32:32-i1:8:32-i8:8:32-i16:16:32-i64:32-f64:32-a:0:32-n32
e-m:e-p:32:32:32-a:0-n16:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f32:32:32-f64:64:64-v32:32:32-v64:64:64-v512:512:512-v1024:1024:1024-v2048:2048:2048
E-m:e-p:32:32-i64:64-a:0:32-n32-S64
e-P1-p:16:8-i8:8-i16:8-i32:8-i64:8-f32:8-f64:8-n8-a:8
E-m:e-p:64:64-i64:64-i128:128-n32:64-S128
e-m:e-p:64:64-i64:64-i128:128-n32:64-S128
e-m:e-p:16:16-i32:16-i64:16-f32:16-f64:16-a:8-n8:16-S16
e-m:e-v128:32-v16:16-v32:32-v96:32-n8:16:32:64-S128
E-m:o-p:32:32-f64:32:64-n32
mcount
E-m:a-p:32:32-i64:64-n32
e-m:e-p:32:32-i64:64-n32
E-m:e-p:32:32-i64:64-n32
u9__ieee128
power7
power8
pwr8
power9
pwr9
power10
pwr10
__TEXT,__StaticInit,regular,pure_instructions
_IBMR2
_POWER
__THW_BIG_ENDIAN__
_AIX
__TOS_AIX__
__HOS_AIX__
__STDC_NO_ATOMICS__
__STDC_NO_THREADS__
__EXTABI__
_AIX32
_AIX41
_AIX43
_AIX50
_AIX51
_AIX52
_AIX53
_AIX61
_AIX71
_AIX72
_AIX73
_LONG_LONG
__64BIT__
_WCHAR_T
E-m:o-i64:64-n32:64
E-m:a-i64:64-n32:64
e-m:e-i64:64-n32:64
E-m:e-i64:64-n32:64
-S128-v256:256:256-v512:512:512
e-m:e-p:32:32-i64:64-n32-S128
_mcount
e-m:e-p:64:64-i64:64-i128:128-n64-S128
E-m:e-p:32:32-i64:64-f128:64-n32-S64
e-m:e-p:32:32-i64:64-f128:64-n32-S64
E-m:e-i64:64-n32:64-S128
E-m:l-i1:8:16-i8:8:16-i64:64-f128:64-v128:64-a:8:16-n32:64
E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-a:8:16-n32:64
E-p:32:32:32-i1:8:8-i8:8:32-i16:16:32-i32:32:32-i64:32:32-f32:32:32-f64:32:32-v64:32:32-v128:32:32-v256:32:32-v512:32:32-v1024:32:32-a0:0:32-n32
e-p:32:32:32-i1:8:8-i8:8:32-i16:16:32-i32:32:32-i64:32:32-f32:32:32-f64:32:32-v64:32:32-v128:32:32-v256:32:32-v512:32:32-v1024:32:32-a0:0:32-n32
e-m:o-p:32:32-p270:32:32-p271:32:32-p272:64:64-f64:32:64-f80:128-n8:16:32-S128
e-m:o-p:32:32-p270:32:32-p271:32:32-p272:64:64-f64:32:64-f80:32-n8:16:32-S128
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-f64:32:64-f80:32-n8:16:32-S128
xmm0
~{dirflag},~{fpsr},~{flags}
avx512
no-mmx
avx512f
.text.startup
linux
__ELF__
__ANDROID__
__ANDROID_MIN_SDK_VERSION__
__ANDROID_API__
__gnu_linux__
__FLOAT128__
__mcount
__NetBSD__
__unix__
__OpenBSD__
e-m:x-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:32-n8:16:32-a:0:32-S32
_X86_
__CYGWIN__
__CYGWIN32__
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:32-n8:16:32-a:0:32-S32
_M_IX86
__HAIKU__
__INTEL__
__rtems__
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:32-f64:32-f128:32-n8:16:32-a:0:32-S32
__iamcu
__iamcu__
e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128
e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128
e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128
cx16
__x86_64__
__CYGWIN64__
_M_X64
_M_AMD64
e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024
e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024
u6__bf16
__CloudABI__
__STDC_ISO_10646__
201206L
.mcount
__FreeBSD__
__FreeBSD_cc_version
__KPRINTF_ATTRIBUTE__
__STDC_MB_MIGHT_NEQ_WC__
__Fuchsia__
__Fuchsia_API_level__
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-n8:16:32-S128
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-n8:16:32:64-S128
e-p:32:32-i64:64
__native_client__
~{$1}
cnmips
cnmipsp
+single-float
+micromips
+dsp
+dspr2
+msa
+nomadd4
m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64
m:e-p:32:32-i8:8:32-i16:16:32-i64:64-n32:64-S128
m:e-i8:8:32-i16:16:32-i64:64-n32:64-S128
$f10
$f11
$f12
$f13
$f14
$f15
$f16
$f17
$f18
$f19
$f20
$f21
$f22
$f23
$f24
$f25
$f26
$f27
$f28
$f29
$f30
$f31
$fcc0
$fcc1
$fcc2
$fcc3
$fcc4
$fcc5
$fcc6
$fcc7
$ac1hi
$ac1lo
$ac2hi
$ac2lo
$ac3hi
$ac3lo
$w10
$w11
$w12
$w13
$w14
$w15
$w16
$w17
$w18
$w19
$w20
$w21
$w22
$w23
$w24
$w25
$w26
$w27
$w28
$w29
$w30
$w31
$msair
$msacsr
$msaaccess
$msasave
$msamodify
$msarequest
$msamap
$msaunmap
E-m:e-p:32:32-i64:64-n32:64
__PPC__
__PPU__
__CELLOS_LV2__
__LP32__
_ARCH_PPC64
__powerpc64__
__svr4__
__SVR4
__C99FEATURES__
_LARGEFILE_SOURCE
__EXTENSIONS__
transactional-execution
vector-enhancements-1
vector-enhancements-2
nnp-assist
E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-v128:64-a:8:16-n32:64
_OPEN_DEFAULT
_UNIX03_WITHDRAWN
__370__
__BFP__
__BOOL__
__LONGNAME__
__MVS__
__THW_370__
__TOS_390__
__TOS_MVS__
__XPLINK__
__DLL__
_MI_BUILTIN
_EXT
__Ananas__
__DragonFly__
__DragonFly_cc_version
100001
__tune_i386__
__FreeBSD_kernel__
__GLIBC__
__minix
_EM_WSIZE
_EM_PSIZE
_EM_SSIZE
_EM_LSIZE
_EM_FSIZE
_EM_DSIZE
__GNU__
__gnu_hurd__
__MACH__
900001
__SCE__
__ORBIS__
e-m:e-p:32:32-p10:8:8-p20:8:8-i64:64-f128:64-n32:64-S128-ni:1:10:20
e-m:e-p:32:32-p10:8:8-p20:8:8-i64:64-n32:64-S128-ni:1:10:20
__wasi__
__EMSCRIPTEN__
__EMSCRIPTEN_PTHREADS__
e-m:e-p:64:64-p10:8:8-p20:8:8-i64:64-f128:64-n32:64-S128-ni:1:10:20
e-m:e-p:64:64-p10:8:8-p20:8:8-i64:64-n32:64-S128-ni:1:10:20
e-m:e-i64:64-n32:64-S128-v64:64:64-v128:64:64-v256:64:64-v512:64:64-v1024:64:64-v2048:64:64-v4096:64:64-v8192:64:64-v16384:64:64
sx10
sx11
sx12
sx13
sx14
sx15
sx16
sx17
sx18
sx19
sx20
sx21
sx22
sx23
sx24
sx25
sx26
sx27
sx28
sx29
sx30
sx31
sx32
sx33
sx34
sx35
sx36
sx37
sx38
sx39
sx40
sx41
sx42
sx43
sx44
sx45
sx46
sx47
sx48
sx49
sx50
sx51
sx52
sx53
sx54
sx55
sx56
sx57
sx58
sx59
sx60
sx61
sx62
sx63
outer
info
__builtin_neon___a32_vcvt_bf16_v
V8ScV16Sci
__builtin_neon___a64_vcvtq_low_bf16_v
V16ScV16Sci
__builtin_neon_splat_lane_v
V8ScV8ScIii
__builtin_neon_splat_laneq_v
V8ScV16ScIii
__builtin_neon_splatq_lane_v
V16ScV8ScIii
__builtin_neon_splatq_laneq_v
V16ScV16ScIii
__builtin_neon_vabd_v
V8ScV8ScV8Sci
__builtin_neon_vabdd_f64
__builtin_neon_vabdq_v
V16ScV16ScV16Sci
__builtin_neon_vabds_f32
__builtin_neon_vabs_v
V8ScV8Sci
__builtin_neon_vabsd_s64
WiWi
__builtin_neon_vabsq_v
__builtin_neon_vadd_v
__builtin_neon_vaddd_s64
WiWiWi
__builtin_neon_vaddd_u64
UWiUWiUWi
__builtin_neon_vaddhn_v
V8ScV16ScV16Sci
__builtin_neon_vaddlv_s16
iV4s
__builtin_neon_vaddlv_s32
WiV2i
__builtin_neon_vaddlv_s8
sV8Sc
__builtin_neon_vaddlv_u16
UiV4Us
__builtin_neon_vaddlv_u32
UWiV2Ui
__builtin_neon_vaddlv_u8
UsV8Uc
__builtin_neon_vaddlvq_s16
iV8s
__builtin_neon_vaddlvq_s32
WiV4i
__builtin_neon_vaddlvq_s8
sV16Sc
__builtin_neon_vaddlvq_u16
UiV8Us
__builtin_neon_vaddlvq_u32
UWiV4Ui
__builtin_neon_vaddlvq_u8
UsV16Uc
__builtin_neon_vaddq_p128
ULLLiULLLiULLLi
__builtin_neon_vaddq_v
__builtin_neon_vaddv_f32
fV2f
__builtin_neon_vaddv_s16
sV4s
__builtin_neon_vaddv_s32
iV2i
__builtin_neon_vaddv_s8
ScV8Sc
__builtin_neon_vaddv_u16
UsV4Us
__builtin_neon_vaddv_u32
UiV2Ui
__builtin_neon_vaddv_u8
UcV8Uc
__builtin_neon_vaddvq_f32
fV4f
__builtin_neon_vaddvq_f64
dV2d
__builtin_neon_vaddvq_s16
sV8s
__builtin_neon_vaddvq_s32
iV4i
__builtin_neon_vaddvq_s64
WiV2Wi
__builtin_neon_vaddvq_s8
ScV16Sc
__builtin_neon_vaddvq_u16
UsV8Us
__builtin_neon_vaddvq_u32
UiV4Ui
__builtin_neon_vaddvq_u64
UWiV2UWi
__builtin_neon_vaddvq_u8
UcV16Uc
__builtin_neon_vaesdq_v
__builtin_neon_vaeseq_v
__builtin_neon_vaesimcq_v
__builtin_neon_vaesmcq_v
__builtin_neon_vbcaxq_v
V16ScV16ScV16ScV16Sci
__builtin_neon_vbfdot_v
V8ScV8ScV8ScV8Sci
__builtin_neon_vbfdotq_v
__builtin_neon_vbfmlalbq_v
__builtin_neon_vbfmlaltq_v
__builtin_neon_vbfmmlaq_v
__builtin_neon_vbsl_v
__builtin_neon_vbslq_v
__builtin_neon_vcadd_rot270_v
__builtin_neon_vcadd_rot90_v
__builtin_neon_vcaddq_rot270_v
__builtin_neon_vcaddq_rot90_v
__builtin_neon_vcage_v
__builtin_neon_vcaged_f64
UWidd
__builtin_neon_vcageq_v
__builtin_neon_vcages_f32
Uiff
__builtin_neon_vcagt_v
__builtin_neon_vcagtd_f64
__builtin_neon_vcagtq_v
__builtin_neon_vcagts_f32
__builtin_neon_vcale_v
__builtin_neon_vcaled_f64
__builtin_neon_vcaleq_v
__builtin_neon_vcales_f32
__builtin_neon_vcalt_v
__builtin_neon_vcaltd_f64
__builtin_neon_vcaltq_v
__builtin_neon_vcalts_f32
__builtin_neon_vceqd_f64
__builtin_neon_vceqd_s64
UWiWiWi
__builtin_neon_vceqd_u64
__builtin_neon_vceqs_f32
__builtin_neon_vceqz_v
__builtin_neon_vceqzd_f64
UWid
__builtin_neon_vceqzd_s64
UWiWi
__builtin_neon_vceqzd_u64
UWiUWi
__builtin_neon_vceqzq_v
__builtin_neon_vceqzs_f32
__builtin_neon_vcged_f64
__builtin_neon_vcged_s64
__builtin_neon_vcged_u64
__builtin_neon_vcges_f32
__builtin_neon_vcgez_v
__builtin_neon_vcgezd_f64
__builtin_neon_vcgezd_s64
__builtin_neon_vcgezq_v
__builtin_neon_vcgezs_f32
__builtin_neon_vcgtd_f64
__builtin_neon_vcgtd_s64
__builtin_neon_vcgtd_u64
__builtin_neon_vcgts_f32
__builtin_neon_vcgtz_v
__builtin_neon_vcgtzd_f64
__builtin_neon_vcgtzd_s64
__builtin_neon_vcgtzq_v
__builtin_neon_vcgtzs_f32
__builtin_neon_vcled_f64
__builtin_neon_vcled_s64
__builtin_neon_vcled_u64
__builtin_neon_vcles_f32
__builtin_neon_vclez_v
__builtin_neon_vclezd_f64
__builtin_neon_vclezd_s64
__builtin_neon_vclezq_v
__builtin_neon_vclezs_f32
__builtin_neon_vcls_v
__builtin_neon_vclsq_v
__builtin_neon_vcltd_f64
__builtin_neon_vcltd_s64
__builtin_neon_vcltd_u64
__builtin_neon_vclts_f32
__builtin_neon_vcltz_v
__builtin_neon_vcltzd_f64
__builtin_neon_vcltzd_s64
__builtin_neon_vcltzq_v
__builtin_neon_vcltzs_f32
__builtin_neon_vclz_v
__builtin_neon_vclzq_v
__builtin_neon_vcmla_rot180_v
__builtin_neon_vcmla_rot270_v
__builtin_neon_vcmla_rot90_v
__builtin_neon_vcmla_v
__builtin_neon_vcmlaq_rot180_v
__builtin_neon_vcmlaq_rot270_v
__builtin_neon_vcmlaq_rot90_v
__builtin_neon_vcmlaq_v
__builtin_neon_vcnt_v
__builtin_neon_vcntq_v
__builtin_neon_vcvt_f16_f32
__builtin_neon_vcvt_f16_v
__builtin_neon_vcvt_f32_f16
V16ScV8Sci
__builtin_neon_vcvt_f32_f64
__builtin_neon_vcvt_f32_v
__builtin_neon_vcvt_f64_f32
__builtin_neon_vcvt_f64_v
__builtin_neon_vcvt_n_f16_v
__builtin_neon_vcvt_n_f32_v
__builtin_neon_vcvt_n_f64_v
__builtin_neon_vcvt_n_s16_v
__builtin_neon_vcvt_n_s32_v
__builtin_neon_vcvt_n_s64_v
__builtin_neon_vcvt_n_u16_v
__builtin_neon_vcvt_n_u32_v
__builtin_neon_vcvt_n_u64_v
__builtin_neon_vcvt_s16_v
__builtin_neon_vcvt_s32_v
__builtin_neon_vcvt_s64_v
__builtin_neon_vcvt_u16_v
__builtin_neon_vcvt_u32_v
__builtin_neon_vcvt_u64_v
__builtin_neon_vcvta_s16_v
__builtin_neon_vcvta_s32_v
__builtin_neon_vcvta_s64_v
__builtin_neon_vcvta_u16_v
__builtin_neon_vcvta_u32_v
__builtin_neon_vcvta_u64_v
__builtin_neon_vcvtad_s64_f64
__builtin_neon_vcvtad_u64_f64
__builtin_neon_vcvtaq_s16_v
__builtin_neon_vcvtaq_s32_v
__builtin_neon_vcvtaq_s64_v
__builtin_neon_vcvtaq_u16_v
__builtin_neon_vcvtaq_u32_v
__builtin_neon_vcvtaq_u64_v
__builtin_neon_vcvtas_s32_f32
__builtin_neon_vcvtas_u32_f32
__builtin_neon_vcvtd_f64_s64
__builtin_neon_vcvtd_f64_u64
dUWi
__builtin_neon_vcvtd_n_f64_s64
dWiIi
__builtin_neon_vcvtd_n_f64_u64
dUWiIi
__builtin_neon_vcvtd_n_s64_f64
WidIi
__builtin_neon_vcvtd_n_u64_f64
UWidIi
__builtin_neon_vcvtd_s64_f64
__builtin_neon_vcvtd_u64_f64
__builtin_neon_vcvth_bf16_f32
__builtin_neon_vcvtm_s16_v
__builtin_neon_vcvtm_s32_v
__builtin_neon_vcvtm_s64_v
__builtin_neon_vcvtm_u16_v
__builtin_neon_vcvtm_u32_v
__builtin_neon_vcvtm_u64_v
__builtin_neon_vcvtmd_s64_f64
__builtin_neon_vcvtmd_u64_f64
__builtin_neon_vcvtmq_s16_v
__builtin_neon_vcvtmq_s32_v
__builtin_neon_vcvtmq_s64_v
__builtin_neon_vcvtmq_u16_v
__builtin_neon_vcvtmq_u32_v
__builtin_neon_vcvtmq_u64_v
__builtin_neon_vcvtms_s32_f32
__builtin_neon_vcvtms_u32_f32
__builtin_neon_vcvtn_s16_v
__builtin_neon_vcvtn_s32_v
__builtin_neon_vcvtn_s64_v
__builtin_neon_vcvtn_u16_v
__builtin_neon_vcvtn_u32_v
__builtin_neon_vcvtn_u64_v
__builtin_neon_vcvtnd_s64_f64
__builtin_neon_vcvtnd_u64_f64
__builtin_neon_vcvtnq_s16_v
__builtin_neon_vcvtnq_s32_v
__builtin_neon_vcvtnq_s64_v
__builtin_neon_vcvtnq_u16_v
__builtin_neon_vcvtnq_u32_v
__builtin_neon_vcvtnq_u64_v
__builtin_neon_vcvtns_s32_f32
__builtin_neon_vcvtns_u32_f32
__builtin_neon_vcvtp_s16_v
__builtin_neon_vcvtp_s32_v
__builtin_neon_vcvtp_s64_v
__builtin_neon_vcvtp_u16_v
__builtin_neon_vcvtp_u32_v
__builtin_neon_vcvtp_u64_v
__builtin_neon_vcvtpd_s64_f64
__builtin_neon_vcvtpd_u64_f64
__builtin_neon_vcvtpq_s16_v
__builtin_neon_vcvtpq_s32_v
__builtin_neon_vcvtpq_s64_v
__builtin_neon_vcvtpq_u16_v
__builtin_neon_vcvtpq_u32_v
__builtin_neon_vcvtpq_u64_v
__builtin_neon_vcvtps_s32_f32
__builtin_neon_vcvtps_u32_f32
__builtin_neon_vcvtq_f16_v
__builtin_neon_vcvtq_f32_v
__builtin_neon_vcvtq_f64_v
__builtin_neon_vcvtq_high_bf16_v
__builtin_neon_vcvtq_n_f16_v
__builtin_neon_vcvtq_n_f32_v
__builtin_neon_vcvtq_n_f64_v
__builtin_neon_vcvtq_n_s16_v
__builtin_neon_vcvtq_n_s32_v
__builtin_neon_vcvtq_n_s64_v
__builtin_neon_vcvtq_n_u16_v
__builtin_neon_vcvtq_n_u32_v
__builtin_neon_vcvtq_n_u64_v
__builtin_neon_vcvtq_s16_v
__builtin_neon_vcvtq_s32_v
__builtin_neon_vcvtq_s64_v
__builtin_neon_vcvtq_u16_v
__builtin_neon_vcvtq_u32_v
__builtin_neon_vcvtq_u64_v
__builtin_neon_vcvts_f32_s32
__builtin_neon_vcvts_f32_u32
__builtin_neon_vcvts_n_f32_s32
fiIi
__builtin_neon_vcvts_n_f32_u32
fUiIi
__builtin_neon_vcvts_n_s32_f32
ifIi
__builtin_neon_vcvts_n_u32_f32
UifIi
__builtin_neon_vcvts_s32_f32
__builtin_neon_vcvts_u32_f32
__builtin_neon_vcvtx_f32_v
__builtin_neon_vcvtxd_f32_f64
__builtin_neon_vdot_v
__builtin_neon_vdotq_v
__builtin_neon_vdupb_lane_i8
UcV8ScIi
__builtin_neon_vdupb_laneq_i8
UcV16ScIi
__builtin_neon_vdupd_lane_f64
dV1dIi
__builtin_neon_vdupd_lane_i64
UWiV1WiIi
__builtin_neon_vdupd_laneq_f64
dV2dIi
__builtin_neon_vdupd_laneq_i64
UWiV2WiIi
__builtin_neon_vduph_lane_bf16
yV4yIi
__builtin_neon_vduph_lane_f16
hV4hIi
__builtin_neon_vduph_lane_i16
UsV4sIi
__builtin_neon_vduph_laneq_bf16
yV8yIi
__builtin_neon_vduph_laneq_f16
hV8hIi
__builtin_neon_vduph_laneq_i16
UsV8sIi
__builtin_neon_vdups_lane_f32
fV2fIi
__builtin_neon_vdups_lane_i32
UiV2iIi
__builtin_neon_vdups_laneq_f32
fV4fIi
__builtin_neon_vdups_laneq_i32
UiV4iIi
__builtin_neon_veor3q_v
__builtin_neon_vext_v
V8ScV8ScV8ScIii
__builtin_neon_vextq_v
V16ScV16ScV16ScIii
__builtin_neon_vfma_lane_v
V8ScV8ScV8ScV8ScIii
__builtin_neon_vfma_laneq_v
V8ScV8ScV8ScV16ScIii
__builtin_neon_vfma_v
__builtin_neon_vfmad_lane_f64
dddV1dIi
__builtin_neon_vfmad_laneq_f64
dddV2dIi
__builtin_neon_vfmah_lane_f16
hhhV4hIi
__builtin_neon_vfmah_laneq_f16
hhhV8hIi
__builtin_neon_vfmaq_lane_v
V16ScV16ScV16ScV8ScIii
__builtin_neon_vfmaq_laneq_v
V16ScV16ScV16ScV16ScIii
__builtin_neon_vfmaq_v
__builtin_neon_vfmas_lane_f32
fffV2fIi
__builtin_neon_vfmas_laneq_f32
fffV4fIi
__builtin_neon_vfmlal_high_v
__builtin_neon_vfmlal_low_v
__builtin_neon_vfmlalq_high_v
__builtin_neon_vfmlalq_low_v
__builtin_neon_vfmlsl_high_v
__builtin_neon_vfmlsl_low_v
__builtin_neon_vfmlslq_high_v
__builtin_neon_vfmlslq_low_v
__builtin_neon_vget_lane_bf16
__builtin_neon_vget_lane_f32
__builtin_neon_vget_lane_f64
__builtin_neon_vget_lane_i16
__builtin_neon_vget_lane_i32
__builtin_neon_vget_lane_i64
__builtin_neon_vget_lane_i8
__builtin_neon_vgetq_lane_bf16
__builtin_neon_vgetq_lane_f32
__builtin_neon_vgetq_lane_f64
__builtin_neon_vgetq_lane_i16
__builtin_neon_vgetq_lane_i32
__builtin_neon_vgetq_lane_i64
__builtin_neon_vgetq_lane_i8
__builtin_neon_vhadd_v
__builtin_neon_vhaddq_v
__builtin_neon_vhsub_v
__builtin_neon_vhsubq_v
__builtin_neon_vld1_dup_v
V8ScvC*i
__builtin_neon_vld1_lane_v
V8ScvC*V8ScIii
__builtin_neon_vld1_v
__builtin_neon_vld1_x2_v
vv*vC*i
__builtin_neon_vld1_x3_v
__builtin_neon_vld1_x4_v
__builtin_neon_vld1q_dup_v
V16ScvC*i
__builtin_neon_vld1q_lane_v
V16ScvC*V16ScIii
__builtin_neon_vld1q_v
__builtin_neon_vld1q_x2_v
__builtin_neon_vld1q_x3_v
__builtin_neon_vld1q_x4_v
__builtin_neon_vld2_dup_v
__builtin_neon_vld2_lane_v
vv*vC*V8ScV8ScIii
__builtin_neon_vld2_v
__builtin_neon_vld2q_dup_v
__builtin_neon_vld2q_lane_v
vv*vC*V16ScV16ScIii
__builtin_neon_vld2q_v
__builtin_neon_vld3_dup_v
__builtin_neon_vld3_lane_v
vv*vC*V8ScV8ScV8ScIii
__builtin_neon_vld3_v
__builtin_neon_vld3q_dup_v
__builtin_neon_vld3q_lane_v
vv*vC*V16ScV16ScV16ScIii
__builtin_neon_vld3q_v
__builtin_neon_vld4_dup_v
__builtin_neon_vld4_lane_v
vv*vC*V8ScV8ScV8ScV8ScIii
__builtin_neon_vld4_v
__builtin_neon_vld4q_dup_v
__builtin_neon_vld4q_lane_v
vv*vC*V16ScV16ScV16ScV16ScIii
__builtin_neon_vld4q_v
__builtin_neon_vldrq_p128
ULLLivC*
__builtin_neon_vmax_v
__builtin_neon_vmaxnm_v
__builtin_neon_vmaxnmq_v
__builtin_neon_vmaxnmv_f16
hV8Sc
__builtin_neon_vmaxnmv_f32
__builtin_neon_vmaxnmvq_f16
hV16Sc
__builtin_neon_vmaxnmvq_f32
__builtin_neon_vmaxnmvq_f64
__builtin_neon_vmaxq_v
__builtin_neon_vmaxv_f16
__builtin_neon_vmaxv_f32
__builtin_neon_vmaxv_s16
__builtin_neon_vmaxv_s32
__builtin_neon_vmaxv_s8
__builtin_neon_vmaxv_u16
__builtin_neon_vmaxv_u32
__builtin_neon_vmaxv_u8
__builtin_neon_vmaxvq_f16
__builtin_neon_vmaxvq_f32
__builtin_neon_vmaxvq_f64
__builtin_neon_vmaxvq_s16
__builtin_neon_vmaxvq_s32
__builtin_neon_vmaxvq_s8
__builtin_neon_vmaxvq_u16
__builtin_neon_vmaxvq_u32
__builtin_neon_vmaxvq_u8
__builtin_neon_vmin_v
__builtin_neon_vminnm_v
__builtin_neon_vminnmq_v
__builtin_neon_vminnmv_f16
__builtin_neon_vminnmv_f32
__builtin_neon_vminnmvq_f16
__builtin_neon_vminnmvq_f32
__builtin_neon_vminnmvq_f64
__builtin_neon_vminq_v
__builtin_neon_vminv_f16
__builtin_neon_vminv_f32
__builtin_neon_vminv_s16
__builtin_neon_vminv_s32
__builtin_neon_vminv_s8
__builtin_neon_vminv_u16
__builtin_neon_vminv_u32
__builtin_neon_vminv_u8
__builtin_neon_vminvq_f16
__builtin_neon_vminvq_f32
__builtin_neon_vminvq_f64
__builtin_neon_vminvq_s16
__builtin_neon_vminvq_s32
__builtin_neon_vminvq_s8
__builtin_neon_vminvq_u16
__builtin_neon_vminvq_u32
__builtin_neon_vminvq_u8
__builtin_neon_vmmlaq_v
__builtin_neon_vmovl_v
__builtin_neon_vmovn_v
__builtin_neon_vmul_lane_v
__builtin_neon_vmul_laneq_v
V8ScV8ScV16ScIii
__builtin_neon_vmul_n_f64
V1dV1dd
__builtin_neon_vmul_v
__builtin_neon_vmull_p64
ULLLiUWiUWi
__builtin_neon_vmull_v
V16ScV8ScV8Sci
__builtin_neon_vmulq_v
__builtin_neon_vmulx_v
__builtin_neon_vmulxd_f64
__builtin_neon_vmulxh_lane_f16
hhV4hIi
__builtin_neon_vmulxh_laneq_f16
hhV8hIi
__builtin_neon_vmulxq_v
__builtin_neon_vmulxs_f32
__builtin_neon_vnegd_s64
__builtin_neon_vpadal_v
__builtin_neon_vpadalq_v
__builtin_neon_vpadd_v
__builtin_neon_vpaddd_f64
__builtin_neon_vpaddd_s64
__builtin_neon_vpaddd_u64
__builtin_neon_vpaddl_v
__builtin_neon_vpaddlq_v
__builtin_neon_vpaddq_v
__builtin_neon_vpadds_f32
__builtin_neon_vpmax_v
__builtin_neon_vpmaxnm_v
__builtin_neon_vpmaxnmq_v
__builtin_neon_vpmaxnmqd_f64
__builtin_neon_vpmaxnms_f32
__builtin_neon_vpmaxq_v
__builtin_neon_vpmaxqd_f64
__builtin_neon_vpmaxs_f32
__builtin_neon_vpmin_v
__builtin_neon_vpminnm_v
__builtin_neon_vpminnmq_v
__builtin_neon_vpminnmqd_f64
__builtin_neon_vpminnms_f32
__builtin_neon_vpminq_v
__builtin_neon_vpminqd_f64
__builtin_neon_vpmins_f32
__builtin_neon_vqabs_v
__builtin_neon_vqabsb_s8
ScSc
__builtin_neon_vqabsd_s64
__builtin_neon_vqabsh_s16
__builtin_neon_vqabsq_v
__builtin_neon_vqabss_s32
__builtin_neon_vqadd_v
__builtin_neon_vqaddb_s8
ScScSc
__builtin_neon_vqaddb_u8
UcUcUc
__builtin_neon_vqaddd_s64
__builtin_neon_vqaddd_u64
__builtin_neon_vqaddh_s16
__builtin_neon_vqaddh_u16
UsUsUs
__builtin_neon_vqaddq_v
__builtin_neon_vqadds_s32
__builtin_neon_vqadds_u32
UiUiUi
__builtin_neon_vqdmlal_v
V16ScV16ScV8ScV8Sci
__builtin_neon_vqdmlalh_lane_s16
iisV4sIi
__builtin_neon_vqdmlalh_laneq_s16
iisV8sIi
__builtin_neon_vqdmlalh_s16
iiss
__builtin_neon_vqdmlals_lane_s32
WiWiiV2iIi
__builtin_neon_vqdmlals_laneq_s32
WiWiiV4iIi
__builtin_neon_vqdmlals_s32
WiWiii
__builtin_neon_vqdmlsl_v
__builtin_neon_vqdmlslh_lane_s16
__builtin_neon_vqdmlslh_laneq_s16
__builtin_neon_vqdmlslh_s16
__builtin_neon_vqdmlsls_lane_s32
__builtin_neon_vqdmlsls_laneq_s32
__builtin_neon_vqdmlsls_s32
__builtin_neon_vqdmulh_lane_v
__builtin_neon_vqdmulh_laneq_v
__builtin_neon_vqdmulh_v
__builtin_neon_vqdmulhh_s16
__builtin_neon_vqdmulhq_lane_v
V16ScV16ScV8ScIii
__builtin_neon_vqdmulhq_laneq_v
__builtin_neon_vqdmulhq_v
__builtin_neon_vqdmulhs_s32
__builtin_neon_vqdmull_v
__builtin_neon_vqdmullh_s16
__builtin_neon_vqdmulls_s32
Wiii
__builtin_neon_vqmovn_v
__builtin_neon_vqmovnd_s64
__builtin_neon_vqmovnd_u64
UiUWi
__builtin_neon_vqmovnh_s16
__builtin_neon_vqmovnh_u16
UcUs
__builtin_neon_vqmovns_s32
__builtin_neon_vqmovns_u32
UsUi
__builtin_neon_vqmovun_v
__builtin_neon_vqmovund_s64
UiWi
__builtin_neon_vqmovunh_s16
__builtin_neon_vqmovuns_s32
__builtin_neon_vqneg_v
__builtin_neon_vqnegb_s8
__builtin_neon_vqnegd_s64
__builtin_neon_vqnegh_s16
__builtin_neon_vqnegq_v
__builtin_neon_vqnegs_s32
__builtin_neon_vqrdmulh_lane_v
__builtin_neon_vqrdmulh_laneq_v
__builtin_neon_vqrdmulh_v
__builtin_neon_vqrdmulhh_s16
__builtin_neon_vqrdmulhq_lane_v
__builtin_neon_vqrdmulhq_laneq_v
__builtin_neon_vqrdmulhq_v
__builtin_neon_vqrdmulhs_s32
__builtin_neon_vqrshl_v
__builtin_neon_vqrshlb_s8
__builtin_neon_vqrshlb_u8
UcUcSc
__builtin_neon_vqrshld_s64
__builtin_neon_vqrshld_u64
UWiUWiWi
__builtin_neon_vqrshlh_s16
__builtin_neon_vqrshlh_u16
UsUss
__builtin_neon_vqrshlq_v
__builtin_neon_vqrshls_s32
__builtin_neon_vqrshls_u32
UiUii
__builtin_neon_vqrshrn_n_v
__builtin_neon_vqrshrnd_n_s64
iWiIi
__builtin_neon_vqrshrnd_n_u64
UiUWiIi
__builtin_neon_vqrshrnh_n_s16
ScsIi
__builtin_neon_vqrshrnh_n_u16
UcUsIi
__builtin_neon_vqrshrns_n_s32
siIi
__builtin_neon_vqrshrns_n_u32
UsUiIi
__builtin_neon_vqrshrun_n_v
__builtin_neon_vqrshrund_n_s64
__builtin_neon_vqrshrunh_n_s16
__builtin_neon_vqrshruns_n_s32
__builtin_neon_vqshl_n_v
__builtin_neon_vqshl_v
__builtin_neon_vqshlb_n_s8
ScScIi
__builtin_neon_vqshlb_n_u8
UcUcIi
__builtin_neon_vqshlb_s8
__builtin_neon_vqshlb_u8
__builtin_neon_vqshld_n_s64
WiWiIi
__builtin_neon_vqshld_n_u64
UWiUWiIi
__builtin_neon_vqshld_s64
__builtin_neon_vqshld_u64
__builtin_neon_vqshlh_n_s16
ssIi
__builtin_neon_vqshlh_n_u16
UsUsIi
__builtin_neon_vqshlh_s16
__builtin_neon_vqshlh_u16
__builtin_neon_vqshlq_n_v
__builtin_neon_vqshlq_v
__builtin_neon_vqshls_n_s32
iiIi
__builtin_neon_vqshls_n_u32
UiUiIi
__builtin_neon_vqshls_s32
__builtin_neon_vqshls_u32
__builtin_neon_vqshlu_n_v
__builtin_neon_vqshlub_n_s8
__builtin_neon_vqshlud_n_s64
__builtin_neon_vqshluh_n_s16
__builtin_neon_vqshluq_n_v
__builtin_neon_vqshlus_n_s32
__builtin_neon_vqshrn_n_v
__builtin_neon_vqshrnd_n_s64
__builtin_neon_vqshrnd_n_u64
__builtin_neon_vqshrnh_n_s16
__builtin_neon_vqshrnh_n_u16
__builtin_neon_vqshrns_n_s32
__builtin_neon_vqshrns_n_u32
__builtin_neon_vqshrun_n_v
__builtin_neon_vqshrund_n_s64
__builtin_neon_vqshrunh_n_s16
__builtin_neon_vqshruns_n_s32
__builtin_neon_vqsub_v
__builtin_neon_vqsubb_s8
__builtin_neon_vqsubb_u8
__builtin_neon_vqsubd_s64
__builtin_neon_vqsubd_u64
__builtin_neon_vqsubh_s16
__builtin_neon_vqsubh_u16
__builtin_neon_vqsubq_v
__builtin_neon_vqsubs_s32
__builtin_neon_vqsubs_u32
__builtin_neon_vqtbl1_v
V8ScV16ScV8Sci
__builtin_neon_vqtbl1q_v
__builtin_neon_vqtbl2_v
V8ScV16ScV16ScV8Sci
__builtin_neon_vqtbl2q_v
__builtin_neon_vqtbl3_v
V8ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbl3q_v
V16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vqtbl4_v
V8ScV16ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbl4q_v
V16ScV16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vqtbx1_v
V8ScV8ScV16ScV8Sci
__builtin_neon_vqtbx1q_v
__builtin_neon_vqtbx2_v
V8ScV8ScV16ScV16ScV8Sci
__builtin_neon_vqtbx2q_v
__builtin_neon_vqtbx3_v
V8ScV8ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbx3q_v
__builtin_neon_vqtbx4_v
V8ScV8ScV16ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbx4q_v
V16ScV16ScV16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vraddhn_v
__builtin_neon_vrax1q_v
__builtin_neon_vrbit_v
__builtin_neon_vrbitq_v
__builtin_neon_vrecpe_v
__builtin_neon_vrecped_f64
__builtin_neon_vrecpeq_v
__builtin_neon_vrecpes_f32
__builtin_neon_vrecps_v
__builtin_neon_vrecpsd_f64
__builtin_neon_vrecpsq_v
__builtin_neon_vrecpss_f32
__builtin_neon_vrecpxd_f64
__builtin_neon_vrecpxs_f32
__builtin_neon_vrhadd_v
__builtin_neon_vrhaddq_v
__builtin_neon_vrnd32x_v
__builtin_neon_vrnd32xq_v
__builtin_neon_vrnd32z_v
__builtin_neon_vrnd32zq_v
__builtin_neon_vrnd64x_v
__builtin_neon_vrnd64xq_v
__builtin_neon_vrnd64z_v
__builtin_neon_vrnd64zq_v
__builtin_neon_vrnd_v
__builtin_neon_vrnda_v
__builtin_neon_vrndaq_v
__builtin_neon_vrndi_v
__builtin_neon_vrndiq_v
__builtin_neon_vrndm_v
__builtin_neon_vrndmq_v
__builtin_neon_vrndn_v
__builtin_neon_vrndnq_v
__builtin_neon_vrndns_f32
__builtin_neon_vrndp_v
__builtin_neon_vrndpq_v
__builtin_neon_vrndq_v
__builtin_neon_vrndx_v
__builtin_neon_vrndxq_v
__builtin_neon_vrshl_v
__builtin_neon_vrshld_s64
__builtin_neon_vrshld_u64
__builtin_neon_vrshlq_v
__builtin_neon_vrshr_n_v
__builtin_neon_vrshrd_n_s64
__builtin_neon_vrshrd_n_u64
__builtin_neon_vrshrn_n_v
__builtin_neon_vrshrq_n_v
__builtin_neon_vrsqrte_v
__builtin_neon_vrsqrted_f64
__builtin_neon_vrsqrteq_v
__builtin_neon_vrsqrtes_f32
__builtin_neon_vrsqrts_v
__builtin_neon_vrsqrtsd_f64
__builtin_neon_vrsqrtsq_v
__builtin_neon_vrsqrtss_f32
__builtin_neon_vrsra_n_v
__builtin_neon_vrsrad_n_s64
WiWiWiIi
__builtin_neon_vrsrad_n_u64
UWiUWiUWiIi
__builtin_neon_vrsraq_n_v
__builtin_neon_vrsubhn_v
__builtin_neon_vset_lane_bf16
V4yyV4yIi
__builtin_neon_vset_lane_f32
V2ffV2fIi
__builtin_neon_vset_lane_f64
V1ddV1dIi
__builtin_neon_vset_lane_i16
V4ssV4sIi
__builtin_neon_vset_lane_i32
V2iiV2iIi
__builtin_neon_vset_lane_i64
V1WiWiV1WiIi
__builtin_neon_vset_lane_i8
V8ScScV8ScIi
__builtin_neon_vsetq_lane_bf16
V8yyV8yIi
__builtin_neon_vsetq_lane_f32
V4ffV4fIi
__builtin_neon_vsetq_lane_f64
V2ddV2dIi
__builtin_neon_vsetq_lane_i16
V8ssV8sIi
__builtin_neon_vsetq_lane_i32
V4iiV4iIi
__builtin_neon_vsetq_lane_i64
V2WiWiV2WiIi
__builtin_neon_vsetq_lane_i8
V16ScScV16ScIi
__builtin_neon_vsha1cq_u32
V4iV4UiUiV4Ui
__builtin_neon_vsha1h_u32
UiUi
__builtin_neon_vsha1mq_u32
__builtin_neon_vsha1pq_u32
__builtin_neon_vsha1su0q_v
__builtin_neon_vsha1su1q_v
__builtin_neon_vsha256h2q_v
__builtin_neon_vsha256hq_v
__builtin_neon_vsha256su0q_v
__builtin_neon_vsha256su1q_v
__builtin_neon_vsha512h2q_v
__builtin_neon_vsha512hq_v
__builtin_neon_vsha512su0q_v
__builtin_neon_vsha512su1q_v
__builtin_neon_vshl_n_v
__builtin_neon_vshl_v
__builtin_neon_vshld_n_s64
__builtin_neon_vshld_n_u64
__builtin_neon_vshld_s64
__builtin_neon_vshld_u64
__builtin_neon_vshll_n_v
__builtin_neon_vshlq_n_v
__builtin_neon_vshlq_v
__builtin_neon_vshr_n_v
__builtin_neon_vshrd_n_s64
__builtin_neon_vshrd_n_u64
__builtin_neon_vshrn_n_v
__builtin_neon_vshrq_n_v
__builtin_neon_vsli_n_v
__builtin_neon_vslid_n_s64
__builtin_neon_vslid_n_u64
__builtin_neon_vsliq_n_v
__builtin_neon_vsm3partw1q_v
__builtin_neon_vsm3partw2q_v
__builtin_neon_vsm3ss1q_v
__builtin_neon_vsm3tt1aq_v
__builtin_neon_vsm3tt1bq_v
__builtin_neon_vsm3tt2aq_v
__builtin_neon_vsm3tt2bq_v
__builtin_neon_vsm4ekeyq_v
__builtin_neon_vsm4eq_v
__builtin_neon_vsqadd_v
__builtin_neon_vsqaddb_u8
__builtin_neon_vsqaddd_u64
__builtin_neon_vsqaddh_u16
__builtin_neon_vsqaddq_v
__builtin_neon_vsqadds_u32
__builtin_neon_vsqrt_v
__builtin_neon_vsqrtq_v
__builtin_neon_vsra_n_v
__builtin_neon_vsrad_n_s64
__builtin_neon_vsrad_n_u64
__builtin_neon_vsraq_n_v
__builtin_neon_vsri_n_v
__builtin_neon_vsrid_n_s64
__builtin_neon_vsrid_n_u64
__builtin_neon_vsriq_n_v
__builtin_neon_vst1_lane_v
vv*V8ScIii
__builtin_neon_vst1_v
vv*V8Sci
__builtin_neon_vst1_x2_v
vv*V8ScV8Sci
__builtin_neon_vst1_x3_v
vv*V8ScV8ScV8Sci
__builtin_neon_vst1_x4_v
vv*V8ScV8ScV8ScV8Sci
__builtin_neon_vst1q_lane_v
vv*V16ScIii
__builtin_neon_vst1q_v
vv*V16Sci
__builtin_neon_vst1q_x2_v
vv*V16ScV16Sci
__builtin_neon_vst1q_x3_v
vv*V16ScV16ScV16Sci
__builtin_neon_vst1q_x4_v
vv*V16ScV16ScV16ScV16Sci
__builtin_neon_vst2_lane_v
vv*V8ScV8ScIii
__builtin_neon_vst2_v
__builtin_neon_vst2q_lane_v
vv*V16ScV16ScIii
__builtin_neon_vst2q_v
__builtin_neon_vst3_lane_v
vv*V8ScV8ScV8ScIii
__builtin_neon_vst3_v
__builtin_neon_vst3q_lane_v
vv*V16ScV16ScV16ScIii
__builtin_neon_vst3q_v
__builtin_neon_vst4_lane_v
vv*V8ScV8ScV8ScV8ScIii
__builtin_neon_vst4_v
__builtin_neon_vst4q_lane_v
vv*V16ScV16ScV16ScV16ScIii
__builtin_neon_vst4q_v
__builtin_neon_vstrq_p128
vv*ULLLi
__builtin_neon_vsubd_s64
__builtin_neon_vsubd_u64
__builtin_neon_vsubhn_v
__builtin_neon_vtbl1_v
__builtin_neon_vtbl2_v
__builtin_neon_vtbl3_v
V8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtbl4_v
V8ScV8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtbx1_v
__builtin_neon_vtbx2_v
__builtin_neon_vtbx3_v
__builtin_neon_vtbx4_v
V8ScV8ScV8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtrn_v
__builtin_neon_vtrnq_v
__builtin_neon_vtst_v
__builtin_neon_vtstd_s64
__builtin_neon_vtstd_u64
__builtin_neon_vtstq_v
__builtin_neon_vuqadd_v
__builtin_neon_vuqaddb_s8
ScScUc
__builtin_neon_vuqaddd_s64
WiWiUWi
__builtin_neon_vuqaddh_s16
ssUs
__builtin_neon_vuqaddq_v
__builtin_neon_vuqadds_s32
iiUi
__builtin_neon_vusdot_v
__builtin_neon_vusdotq_v
__builtin_neon_vusmmlaq_v
__builtin_neon_vuzp_v
__builtin_neon_vuzpq_v
__builtin_neon_vxarq_v
__builtin_neon_vzip_v
__builtin_neon_vzipq_v
__builtin_neon_vabdh_f16
__builtin_neon_vabsh_f16
__builtin_neon_vaddh_f16
__builtin_neon_vcageh_f16
Ushh
__builtin_neon_vcagth_f16
__builtin_neon_vcaleh_f16
__builtin_neon_vcalth_f16
__builtin_neon_vceqh_f16
__builtin_neon_vceqzh_f16
__builtin_neon_vcgeh_f16
__builtin_neon_vcgezh_f16
__builtin_neon_vcgth_f16
__builtin_neon_vcgtzh_f16
__builtin_neon_vcleh_f16
__builtin_neon_vclezh_f16
__builtin_neon_vclth_f16
__builtin_neon_vcltzh_f16
__builtin_neon_vcvtah_s16_f16
__builtin_neon_vcvtah_s32_f16
__builtin_neon_vcvtah_s64_f16
__builtin_neon_vcvtah_u16_f16
__builtin_neon_vcvtah_u32_f16
__builtin_neon_vcvtah_u64_f16
UWih
__builtin_neon_vcvth_f16_s16
__builtin_neon_vcvth_f16_s32
__builtin_neon_vcvth_f16_s64
__builtin_neon_vcvth_f16_u16
__builtin_neon_vcvth_f16_u32
__builtin_neon_vcvth_f16_u64
hUWi
__builtin_neon_vcvth_n_f16_s16
hsIi
__builtin_neon_vcvth_n_f16_s32
hiIi
__builtin_neon_vcvth_n_f16_s64
hWiIi
__builtin_neon_vcvth_n_f16_u16
hUsIi
__builtin_neon_vcvth_n_f16_u32
hUiIi
__builtin_neon_vcvth_n_f16_u64
hUWiIi
__builtin_neon_vcvth_n_s16_f16
shIi
__builtin_neon_vcvth_n_s32_f16
ihIi
__builtin_neon_vcvth_n_s64_f16
WihIi
__builtin_neon_vcvth_n_u16_f16
UshIi
__builtin_neon_vcvth_n_u32_f16
UihIi
__builtin_neon_vcvth_n_u64_f16
UWihIi
__builtin_neon_vcvth_s16_f16
__builtin_neon_vcvth_s32_f16
__builtin_neon_vcvth_s64_f16
__builtin_neon_vcvth_u16_f16
__builtin_neon_vcvth_u32_f16
__builtin_neon_vcvth_u64_f16
__builtin_neon_vcvtmh_s16_f16
__builtin_neon_vcvtmh_s32_f16
__builtin_neon_vcvtmh_s64_f16
__builtin_neon_vcvtmh_u16_f16
__builtin_neon_vcvtmh_u32_f16
__builtin_neon_vcvtmh_u64_f16
__builtin_neon_vcvtnh_s16_f16
__builtin_neon_vcvtnh_s32_f16
__builtin_neon_vcvtnh_s64_f16
__builtin_neon_vcvtnh_u16_f16
__builtin_neon_vcvtnh_u32_f16
__builtin_neon_vcvtnh_u64_f16
__builtin_neon_vcvtph_s16_f16
__builtin_neon_vcvtph_s32_f16
__builtin_neon_vcvtph_s64_f16
__builtin_neon_vcvtph_u16_f16
__builtin_neon_vcvtph_u32_f16
__builtin_neon_vcvtph_u64_f16
__builtin_neon_vdivh_f16
__builtin_neon_vfmah_f16
hhhh
__builtin_neon_vfmsh_f16
__builtin_neon_vmaxh_f16
__builtin_neon_vmaxnmh_f16
__builtin_neon_vminh_f16
__builtin_neon_vminnmh_f16
__builtin_neon_vmulh_f16
__builtin_neon_vmulxh_f16
__builtin_neon_vnegh_f16
__builtin_neon_vrecpeh_f16
__builtin_neon_vrecpsh_f16
__builtin_neon_vrecpxh_f16
__builtin_neon_vrndah_f16
__builtin_neon_vrndh_f16
__builtin_neon_vrndih_f16
__builtin_neon_vrndmh_f16
__builtin_neon_vrndnh_f16
__builtin_neon_vrndph_f16
__builtin_neon_vrndxh_f16
__builtin_neon_vrsqrteh_f16
__builtin_neon_vrsqrtsh_f16
__builtin_neon_vsqrth_f16
__builtin_neon_vsubh_f16
__builtin_sve_svaba_n_s16
q8sq8sq8ss
__builtin_sve_svaba_n_s32
q4iq4iq4ii
__builtin_sve_svaba_n_s64
q2Wiq2Wiq2WiWi
__builtin_sve_svaba_n_s8
q16Scq16Scq16ScSc
__builtin_sve_svaba_n_u16
q8Usq8Usq8UsUs
__builtin_sve_svaba_n_u32
q4Uiq4Uiq4UiUi
__builtin_sve_svaba_n_u64
q2UWiq2UWiq2UWiUWi
__builtin_sve_svaba_n_u8
q16Ucq16Ucq16UcUc
__builtin_sve_svaba_s16
q8sq8sq8sq8s
__builtin_sve_svaba_s32
q4iq4iq4iq4i
__builtin_sve_svaba_s64
q2Wiq2Wiq2Wiq2Wi
__builtin_sve_svaba_s8
q16Scq16Scq16Scq16Sc
__builtin_sve_svaba_u16
q8Usq8Usq8Usq8Us
__builtin_sve_svaba_u32
q4Uiq4Uiq4Uiq4Ui
__builtin_sve_svaba_u64
q2UWiq2UWiq2UWiq2UWi
__builtin_sve_svaba_u8
q16Ucq16Ucq16Ucq16Uc
__builtin_sve_svabalb_n_s16
q8sq8sq16ScSc
__builtin_sve_svabalb_n_s32
q4iq4iq8ss
__builtin_sve_svabalb_n_s64
q2Wiq2Wiq4ii
__builtin_sve_svabalb_n_u16
q8Usq8Usq16UcUc
__builtin_sve_svabalb_n_u32
q4Uiq4Uiq8UsUs
__builtin_sve_svabalb_n_u64
q2UWiq2UWiq4UiUi
__builtin_sve_svabalb_s16
q8sq8sq16Scq16Sc
__builtin_sve_svabalb_s32
q4iq4iq8sq8s
__builtin_sve_svabalb_s64
q2Wiq2Wiq4iq4i
__builtin_sve_svabalb_u16
q8Usq8Usq16Ucq16Uc
__builtin_sve_svabalb_u32
q4Uiq4Uiq8Usq8Us
__builtin_sve_svabalb_u64
q2UWiq2UWiq4Uiq4Ui
__builtin_sve_svabalt_n_s16
__builtin_sve_svabalt_n_s32
__builtin_sve_svabalt_n_s64
__builtin_sve_svabalt_n_u16
__builtin_sve_svabalt_n_u32
__builtin_sve_svabalt_n_u64
__builtin_sve_svabalt_s16
__builtin_sve_svabalt_s32
__builtin_sve_svabalt_s64
__builtin_sve_svabalt_u16
__builtin_sve_svabalt_u32
__builtin_sve_svabalt_u64
__builtin_sve_svabd_f16_m
q8hq16bq8hq8h
__builtin_sve_svabd_f16_x
__builtin_sve_svabd_f16_z
__builtin_sve_svabd_f32_m
q4fq16bq4fq4f
__builtin_sve_svabd_f32_x
__builtin_sve_svabd_f32_z
__builtin_sve_svabd_f64_m
q2dq16bq2dq2d
__builtin_sve_svabd_f64_x
__builtin_sve_svabd_f64_z
__builtin_sve_svabd_n_f16_m
q8hq16bq8hh
__builtin_sve_svabd_n_f16_x
__builtin_sve_svabd_n_f16_z
__builtin_sve_svabd_n_f32_m
q4fq16bq4ff
__builtin_sve_svabd_n_f32_x
__builtin_sve_svabd_n_f32_z
__builtin_sve_svabd_n_f64_m
q2dq16bq2dd
__builtin_sve_svabd_n_f64_x
__builtin_sve_svabd_n_f64_z
__builtin_sve_svabd_n_s16_m
q8sq16bq8ss
__builtin_sve_svabd_n_s16_x
__builtin_sve_svabd_n_s16_z
__builtin_sve_svabd_n_s32_m
q4iq16bq4ii
__builtin_sve_svabd_n_s32_x
__builtin_sve_svabd_n_s32_z
__builtin_sve_svabd_n_s64_m
q2Wiq16bq2WiWi
__builtin_sve_svabd_n_s64_x
__builtin_sve_svabd_n_s64_z
__builtin_sve_svabd_n_s8_m
q16Scq16bq16ScSc
__builtin_sve_svabd_n_s8_x
__builtin_sve_svabd_n_s8_z
__builtin_sve_svabd_n_u16_m
q8Usq16bq8UsUs
__builtin_sve_svabd_n_u16_x
__builtin_sve_svabd_n_u16_z
__builtin_sve_svabd_n_u32_m
q4Uiq16bq4UiUi
__builtin_sve_svabd_n_u32_x
__builtin_sve_svabd_n_u32_z
__builtin_sve_svabd_n_u64_m
q2UWiq16bq2UWiUWi
__builtin_sve_svabd_n_u64_x
__builtin_sve_svabd_n_u64_z
__builtin_sve_svabd_n_u8_m
q16Ucq16bq16UcUc
__builtin_sve_svabd_n_u8_x
__builtin_sve_svabd_n_u8_z
__builtin_sve_svabd_s16_m
q8sq16bq8sq8s
__builtin_sve_svabd_s16_x
__builtin_sve_svabd_s16_z
__builtin_sve_svabd_s32_m
q4iq16bq4iq4i
__builtin_sve_svabd_s32_x
__builtin_sve_svabd_s32_z
__builtin_sve_svabd_s64_m
q2Wiq16bq2Wiq2Wi
__builtin_sve_svabd_s64_x
__builtin_sve_svabd_s64_z
__builtin_sve_svabd_s8_m
q16Scq16bq16Scq16Sc
__builtin_sve_svabd_s8_x
__builtin_sve_svabd_s8_z
__builtin_sve_svabd_u16_m
q8Usq16bq8Usq8Us
__builtin_sve_svabd_u16_x
__builtin_sve_svabd_u16_z
__builtin_sve_svabd_u32_m
q4Uiq16bq4Uiq4Ui
__builtin_sve_svabd_u32_x
__builtin_sve_svabd_u32_z
__builtin_sve_svabd_u64_m
q2UWiq16bq2UWiq2UWi
__builtin_sve_svabd_u64_x
__builtin_sve_svabd_u64_z
__builtin_sve_svabd_u8_m
q16Ucq16bq16Ucq16Uc
__builtin_sve_svabd_u8_x
__builtin_sve_svabd_u8_z
__builtin_sve_svabdlb_n_s16
q8sq16ScSc
__builtin_sve_svabdlb_n_s32
q4iq8ss
__builtin_sve_svabdlb_n_s64
q2Wiq4ii
__builtin_sve_svabdlb_n_u16
q8Usq16UcUc
__builtin_sve_svabdlb_n_u32
q4Uiq8UsUs
__builtin_sve_svabdlb_n_u64
q2UWiq4UiUi
__builtin_sve_svabdlb_s16
q8sq16Scq16Sc
__builtin_sve_svabdlb_s32
q4iq8sq8s
__builtin_sve_svabdlb_s64
q2Wiq4iq4i
__builtin_sve_svabdlb_u16
q8Usq16Ucq16Uc
__builtin_sve_svabdlb_u32
q4Uiq8Usq8Us
__builtin_sve_svabdlb_u64
q2UWiq4Uiq4Ui
__builtin_sve_svabdlt_n_s16
__builtin_sve_svabdlt_n_s32
__builtin_sve_svabdlt_n_s64
__builtin_sve_svabdlt_n_u16
__builtin_sve_svabdlt_n_u32
__builtin_sve_svabdlt_n_u64
__builtin_sve_svabdlt_s16
__builtin_sve_svabdlt_s32
__builtin_sve_svabdlt_s64
__builtin_sve_svabdlt_u16
__builtin_sve_svabdlt_u32
__builtin_sve_svabdlt_u64
__builtin_sve_svabs_f16_m
q8hq8hq16bq8h
__builtin_sve_svabs_f16_x
q8hq16bq8h
__builtin_sve_svabs_f16_z
__builtin_sve_svabs_f32_m
q4fq4fq16bq4f
__builtin_sve_svabs_f32_x
q4fq16bq4f
__builtin_sve_svabs_f32_z
__builtin_sve_svabs_f64_m
q2dq2dq16bq2d
__builtin_sve_svabs_f64_x
q2dq16bq2d
__builtin_sve_svabs_f64_z
__builtin_sve_svabs_s16_m
q8sq8sq16bq8s
__builtin_sve_svabs_s16_x
q8sq16bq8s
__builtin_sve_svabs_s16_z
__builtin_sve_svabs_s32_m
q4iq4iq16bq4i
__builtin_sve_svabs_s32_x
q4iq16bq4i
__builtin_sve_svabs_s32_z
__builtin_sve_svabs_s64_m
q2Wiq2Wiq16bq2Wi
__builtin_sve_svabs_s64_x
q2Wiq16bq2Wi
__builtin_sve_svabs_s64_z
__builtin_sve_svabs_s8_m
q16Scq16Scq16bq16Sc
__builtin_sve_svabs_s8_x
q16Scq16bq16Sc
__builtin_sve_svabs_s8_z
__builtin_sve_svacge_f16
q16bq16bq8hq8h
__builtin_sve_svacge_f32
q16bq16bq4fq4f
__builtin_sve_svacge_f64
q16bq16bq2dq2d
__builtin_sve_svacge_n_f16
q16bq16bq8hh
__builtin_sve_svacge_n_f32
q16bq16bq4ff
__builtin_sve_svacge_n_f64
q16bq16bq2dd
__builtin_sve_svacgt_f16
__builtin_sve_svacgt_f32
__builtin_sve_svacgt_f64
__builtin_sve_svacgt_n_f16
__builtin_sve_svacgt_n_f32
__builtin_sve_svacgt_n_f64
__builtin_sve_svacle_f16
__builtin_sve_svacle_f32
__builtin_sve_svacle_f64
__builtin_sve_svacle_n_f16
__builtin_sve_svacle_n_f32
__builtin_sve_svacle_n_f64
__builtin_sve_svaclt_f16
__builtin_sve_svaclt_f32
__builtin_sve_svaclt_f64
__builtin_sve_svaclt_n_f16
__builtin_sve_svaclt_n_f32
__builtin_sve_svaclt_n_f64
__builtin_sve_svadalp_s16_m
q8sq16bq8sq16Sc
__builtin_sve_svadalp_s16_x
__builtin_sve_svadalp_s16_z
__builtin_sve_svadalp_s32_m
q4iq16bq4iq8s
__builtin_sve_svadalp_s32_x
__builtin_sve_svadalp_s32_z
__builtin_sve_svadalp_s64_m
q2Wiq16bq2Wiq4i
__builtin_sve_svadalp_s64_x
__builtin_sve_svadalp_s64_z
__builtin_sve_svadalp_u16_m
q8Usq16bq8Usq16Uc
__builtin_sve_svadalp_u16_x
__builtin_sve_svadalp_u16_z
__builtin_sve_svadalp_u32_m
q4Uiq16bq4Uiq8Us
__builtin_sve_svadalp_u32_x
__builtin_sve_svadalp_u32_z
__builtin_sve_svadalp_u64_m
q2UWiq16bq2UWiq4Ui
__builtin_sve_svadalp_u64_x
__builtin_sve_svadalp_u64_z
__builtin_sve_svadclb_n_u32
__builtin_sve_svadclb_n_u64
__builtin_sve_svadclb_u32
__builtin_sve_svadclb_u64
__builtin_sve_svadclt_n_u32
__builtin_sve_svadclt_n_u64
__builtin_sve_svadclt_u32
__builtin_sve_svadclt_u64
__builtin_sve_svadd_f16_m
__builtin_sve_svadd_f16_x
__builtin_sve_svadd_f16_z
__builtin_sve_svadd_f32_m
__builtin_sve_svadd_f32_x
__builtin_sve_svadd_f32_z
__builtin_sve_svadd_f64_m
__builtin_sve_svadd_f64_x
__builtin_sve_svadd_f64_z
__builtin_sve_svadd_n_f16_m
__builtin_sve_svadd_n_f16_x
__builtin_sve_svadd_n_f16_z
__builtin_sve_svadd_n_f32_m
__builtin_sve_svadd_n_f32_x
__builtin_sve_svadd_n_f32_z
__builtin_sve_svadd_n_f64_m
__builtin_sve_svadd_n_f64_x
__builtin_sve_svadd_n_f64_z
__builtin_sve_svadd_n_s16_m
__builtin_sve_svadd_n_s16_x
__builtin_sve_svadd_n_s16_z
__builtin_sve_svadd_n_s32_m
__builtin_sve_svadd_n_s32_x
__builtin_sve_svadd_n_s32_z
__builtin_sve_svadd_n_s64_m
__builtin_sve_svadd_n_s64_x
__builtin_sve_svadd_n_s64_z
__builtin_sve_svadd_n_s8_m
__builtin_sve_svadd_n_s8_x
__builtin_sve_svadd_n_s8_z
__builtin_sve_svadd_n_u16_m
__builtin_sve_svadd_n_u16_x
__builtin_sve_svadd_n_u16_z
__builtin_sve_svadd_n_u32_m
__builtin_sve_svadd_n_u32_x
__builtin_sve_svadd_n_u32_z
__builtin_sve_svadd_n_u64_m
__builtin_sve_svadd_n_u64_x
__builtin_sve_svadd_n_u64_z
__builtin_sve_svadd_n_u8_m
__builtin_sve_svadd_n_u8_x
__builtin_sve_svadd_n_u8_z
__builtin_sve_svadd_s16_m
__builtin_sve_svadd_s16_x
__builtin_sve_svadd_s16_z
__builtin_sve_svadd_s32_m
__builtin_sve_svadd_s32_x
__builtin_sve_svadd_s32_z
__builtin_sve_svadd_s64_m
__builtin_sve_svadd_s64_x
__builtin_sve_svadd_s64_z
__builtin_sve_svadd_s8_m
__builtin_sve_svadd_s8_x
__builtin_sve_svadd_s8_z
__builtin_sve_svadd_u16_m
__builtin_sve_svadd_u16_x
__builtin_sve_svadd_u16_z
__builtin_sve_svadd_u32_m
__builtin_sve_svadd_u32_x
__builtin_sve_svadd_u32_z
__builtin_sve_svadd_u64_m
__builtin_sve_svadd_u64_x
__builtin_sve_svadd_u64_z
__builtin_sve_svadd_u8_m
__builtin_sve_svadd_u8_x
__builtin_sve_svadd_u8_z
__builtin_sve_svadda_f16
hq16bhq8h
__builtin_sve_svadda_f32
fq16bfq4f
__builtin_sve_svadda_f64
dq16bdq2d
__builtin_sve_svaddhnb_n_s16
q16Scq8ss
__builtin_sve_svaddhnb_n_s32
q8sq4ii
__builtin_sve_svaddhnb_n_s64
q4iq2WiWi
__builtin_sve_svaddhnb_n_u16
q16Ucq8UsUs
__builtin_sve_svaddhnb_n_u32
q8Usq4UiUi
__builtin_sve_svaddhnb_n_u64
q4Uiq2UWiUWi
__builtin_sve_svaddhnb_s16
q16Scq8sq8s
__builtin_sve_svaddhnb_s32
q8sq4iq4i
__builtin_sve_svaddhnb_s64
q4iq2Wiq2Wi
__builtin_sve_svaddhnb_u16
q16Ucq8Usq8Us
__builtin_sve_svaddhnb_u32
q8Usq4Uiq4Ui
__builtin_sve_svaddhnb_u64
q4Uiq2UWiq2UWi
__builtin_sve_svaddhnt_n_s16
q16Scq16Scq8ss
__builtin_sve_svaddhnt_n_s32
q8sq8sq4ii
__builtin_sve_svaddhnt_n_s64
q4iq4iq2WiWi
__builtin_sve_svaddhnt_n_u16
q16Ucq16Ucq8UsUs
__builtin_sve_svaddhnt_n_u32
q8Usq8Usq4UiUi
__builtin_sve_svaddhnt_n_u64
q4Uiq4Uiq2UWiUWi
__builtin_sve_svaddhnt_s16
q16Scq16Scq8sq8s
__builtin_sve_svaddhnt_s32
q8sq8sq4iq4i
__builtin_sve_svaddhnt_s64
q4iq4iq2Wiq2Wi
__builtin_sve_svaddhnt_u16
q16Ucq16Ucq8Usq8Us
__builtin_sve_svaddhnt_u32
q8Usq8Usq4Uiq4Ui
__builtin_sve_svaddhnt_u64
q4Uiq4Uiq2UWiq2UWi
__builtin_sve_svaddlb_n_s16
__builtin_sve_svaddlb_n_s32
__builtin_sve_svaddlb_n_s64
__builtin_sve_svaddlb_n_u16
__builtin_sve_svaddlb_n_u32
__builtin_sve_svaddlb_n_u64
__builtin_sve_svaddlb_s16
__builtin_sve_svaddlb_s32
__builtin_sve_svaddlb_s64
__builtin_sve_svaddlb_u16
__builtin_sve_svaddlb_u32
__builtin_sve_svaddlb_u64
__builtin_sve_svaddlbt_n_s16
__builtin_sve_svaddlbt_n_s32
__builtin_sve_svaddlbt_n_s64
__builtin_sve_svaddlbt_s16
__builtin_sve_svaddlbt_s32
__builtin_sve_svaddlbt_s64
__builtin_sve_svaddlt_n_s16
__builtin_sve_svaddlt_n_s32
__builtin_sve_svaddlt_n_s64
__builtin_sve_svaddlt_n_u16
__builtin_sve_svaddlt_n_u32
__builtin_sve_svaddlt_n_u64
__builtin_sve_svaddlt_s16
__builtin_sve_svaddlt_s32
__builtin_sve_svaddlt_s64
__builtin_sve_svaddlt_u16
__builtin_sve_svaddlt_u32
__builtin_sve_svaddlt_u64
__builtin_sve_svaddp_f16_m
__builtin_sve_svaddp_f16_x
__builtin_sve_svaddp_f32_m
__builtin_sve_svaddp_f32_x
__builtin_sve_svaddp_f64_m
__builtin_sve_svaddp_f64_x
__builtin_sve_svaddp_s16_m
__builtin_sve_svaddp_s16_x
__builtin_sve_svaddp_s32_m
__builtin_sve_svaddp_s32_x
__builtin_sve_svaddp_s64_m
__builtin_sve_svaddp_s64_x
__builtin_sve_svaddp_s8_m
__builtin_sve_svaddp_s8_x
__builtin_sve_svaddp_u16_m
__builtin_sve_svaddp_u16_x
__builtin_sve_svaddp_u32_m
__builtin_sve_svaddp_u32_x
__builtin_sve_svaddp_u64_m
__builtin_sve_svaddp_u64_x
__builtin_sve_svaddp_u8_m
__builtin_sve_svaddp_u8_x
__builtin_sve_svaddv_f16
hq16bq8h
__builtin_sve_svaddv_f32
fq16bq4f
__builtin_sve_svaddv_f64
dq16bq2d
__builtin_sve_svaddv_s16
Wiq16bq8s
__builtin_sve_svaddv_s32
Wiq16bq4i
__builtin_sve_svaddv_s64
Wiq16bq2Wi
__builtin_sve_svaddv_s8
Wiq16bq16Sc
__builtin_sve_svaddv_u16
UWiq16bq8Us
__builtin_sve_svaddv_u32
UWiq16bq4Ui
__builtin_sve_svaddv_u64
UWiq16bq2UWi
__builtin_sve_svaddv_u8
UWiq16bq16Uc
__builtin_sve_svaddwb_n_s16
q8sq8sSc
__builtin_sve_svaddwb_n_s32
q4iq4is
__builtin_sve_svaddwb_n_s64
q2Wiq2Wii
__builtin_sve_svaddwb_n_u16
q8Usq8UsUc
__builtin_sve_svaddwb_n_u32
q4Uiq4UiUs
__builtin_sve_svaddwb_n_u64
q2UWiq2UWiUi
__builtin_sve_svaddwb_s16
q8sq8sq16Sc
__builtin_sve_svaddwb_s32
q4iq4iq8s
__builtin_sve_svaddwb_s64
q2Wiq2Wiq4i
__builtin_sve_svaddwb_u16
q8Usq8Usq16Uc
__builtin_sve_svaddwb_u32
q4Uiq4Uiq8Us
__builtin_sve_svaddwb_u64
q2UWiq2UWiq4Ui
__builtin_sve_svaddwt_n_s16
__builtin_sve_svaddwt_n_s32
__builtin_sve_svaddwt_n_s64
__builtin_sve_svaddwt_n_u16
__builtin_sve_svaddwt_n_u32
__builtin_sve_svaddwt_n_u64
__builtin_sve_svaddwt_s16
__builtin_sve_svaddwt_s32
__builtin_sve_svaddwt_s64
__builtin_sve_svaddwt_u16
__builtin_sve_svaddwt_u32
__builtin_sve_svaddwt_u64
__builtin_sve_svadrb_u32base_s32offset
q4Uiq4Uiq4i
__builtin_sve_svadrb_u32base_u32offset
q4Uiq4Uiq4Ui
__builtin_sve_svadrb_u64base_s64offset
q2UWiq2UWiq2Wi
__builtin_sve_svadrb_u64base_u64offset
q2UWiq2UWiq2UWi
__builtin_sve_svadrd_u32base_s32index
__builtin_sve_svadrd_u32base_u32index
__builtin_sve_svadrd_u64base_s64index
__builtin_sve_svadrd_u64base_u64index
__builtin_sve_svadrh_u32base_s32index
__builtin_sve_svadrh_u32base_u32index
__builtin_sve_svadrh_u64base_s64index
__builtin_sve_svadrh_u64base_u64index
__builtin_sve_svadrw_u32base_s32index
__builtin_sve_svadrw_u32base_u32index
__builtin_sve_svadrw_u64base_s64index
__builtin_sve_svadrw_u64base_u64index
__builtin_sve_svaesd_u8
q16Ucq16Ucq16Uc
__builtin_sve_svaese_u8
__builtin_sve_svaesimc_u8
q16Ucq16Uc
__builtin_sve_svaesmc_u8
__builtin_sve_svand_b_z
q16bq16bq16bq16b
__builtin_sve_svand_n_s16_m
__builtin_sve_svand_n_s16_x
__builtin_sve_svand_n_s16_z
__builtin_sve_svand_n_s32_m
__builtin_sve_svand_n_s32_x
__builtin_sve_svand_n_s32_z
__builtin_sve_svand_n_s64_m
__builtin_sve_svand_n_s64_x
__builtin_sve_svand_n_s64_z
__builtin_sve_svand_n_s8_m
__builtin_sve_svand_n_s8_x
__builtin_sve_svand_n_s8_z
__builtin_sve_svand_n_u16_m
__builtin_sve_svand_n_u16_x
__builtin_sve_svand_n_u16_z
__builtin_sve_svand_n_u32_m
__builtin_sve_svand_n_u32_x
__builtin_sve_svand_n_u32_z
__builtin_sve_svand_n_u64_m
__builtin_sve_svand_n_u64_x
__builtin_sve_svand_n_u64_z
__builtin_sve_svand_n_u8_m
__builtin_sve_svand_n_u8_x
__builtin_sve_svand_n_u8_z
__builtin_sve_svand_s16_m
__builtin_sve_svand_s16_x
__builtin_sve_svand_s16_z
__builtin_sve_svand_s32_m
__builtin_sve_svand_s32_x
__builtin_sve_svand_s32_z
__builtin_sve_svand_s64_m
__builtin_sve_svand_s64_x
__builtin_sve_svand_s64_z
__builtin_sve_svand_s8_m
__builtin_sve_svand_s8_x
__builtin_sve_svand_s8_z
__builtin_sve_svand_u16_m
__builtin_sve_svand_u16_x
__builtin_sve_svand_u16_z
__builtin_sve_svand_u32_m
__builtin_sve_svand_u32_x
__builtin_sve_svand_u32_z
__builtin_sve_svand_u64_m
__builtin_sve_svand_u64_x
__builtin_sve_svand_u64_z
__builtin_sve_svand_u8_m
__builtin_sve_svand_u8_x
__builtin_sve_svand_u8_z
__builtin_sve_svandv_s16
sq16bq8s
__builtin_sve_svandv_s32
iq16bq4i
__builtin_sve_svandv_s64
__builtin_sve_svandv_s8
Scq16bq16Sc
__builtin_sve_svandv_u16
Usq16bq8Us
__builtin_sve_svandv_u32
Uiq16bq4Ui
__builtin_sve_svandv_u64
__builtin_sve_svandv_u8
Ucq16bq16Uc
__builtin_sve_svasr_n_s16_m
q8sq16bq8sUs
__builtin_sve_svasr_n_s16_x
__builtin_sve_svasr_n_s16_z
__builtin_sve_svasr_n_s32_m
q4iq16bq4iUi
__builtin_sve_svasr_n_s32_x
__builtin_sve_svasr_n_s32_z
__builtin_sve_svasr_n_s64_m
q2Wiq16bq2WiUWi
__builtin_sve_svasr_n_s64_x
__builtin_sve_svasr_n_s64_z
__builtin_sve_svasr_n_s8_m
q16Scq16bq16ScUc
__builtin_sve_svasr_n_s8_x
__builtin_sve_svasr_n_s8_z
__builtin_sve_svasr_s16_m
q8sq16bq8sq8Us
__builtin_sve_svasr_s16_x
__builtin_sve_svasr_s16_z
__builtin_sve_svasr_s32_m
q4iq16bq4iq4Ui
__builtin_sve_svasr_s32_x
__builtin_sve_svasr_s32_z
__builtin_sve_svasr_s64_m
q2Wiq16bq2Wiq2UWi
__builtin_sve_svasr_s64_x
__builtin_sve_svasr_s64_z
__builtin_sve_svasr_s8_m
q16Scq16bq16Scq16Uc
__builtin_sve_svasr_s8_x
__builtin_sve_svasr_s8_z
__builtin_sve_svasr_wide_n_s16_m
q8sq16bq8sUWi
__builtin_sve_svasr_wide_n_s16_x
__builtin_sve_svasr_wide_n_s16_z
__builtin_sve_svasr_wide_n_s32_m
q4iq16bq4iUWi
__builtin_sve_svasr_wide_n_s32_x
__builtin_sve_svasr_wide_n_s32_z
__builtin_sve_svasr_wide_n_s8_m
q16Scq16bq16ScUWi
__builtin_sve_svasr_wide_n_s8_x
__builtin_sve_svasr_wide_n_s8_z
__builtin_sve_svasr_wide_s16_m
q8sq16bq8sq2UWi
__builtin_sve_svasr_wide_s16_x
__builtin_sve_svasr_wide_s16_z
__builtin_sve_svasr_wide_s32_m
q4iq16bq4iq2UWi
__builtin_sve_svasr_wide_s32_x
__builtin_sve_svasr_wide_s32_z
__builtin_sve_svasr_wide_s8_m
q16Scq16bq16Scq2UWi
__builtin_sve_svasr_wide_s8_x
__builtin_sve_svasr_wide_s8_z
__builtin_sve_svasrd_n_s16_m
q8sq16bq8sIUWi
__builtin_sve_svasrd_n_s16_x
__builtin_sve_svasrd_n_s16_z
__builtin_sve_svasrd_n_s32_m
q4iq16bq4iIUWi
__builtin_sve_svasrd_n_s32_x
__builtin_sve_svasrd_n_s32_z
__builtin_sve_svasrd_n_s64_m
q2Wiq16bq2WiIUWi
__builtin_sve_svasrd_n_s64_x
__builtin_sve_svasrd_n_s64_z
__builtin_sve_svasrd_n_s8_m
q16Scq16bq16ScIUWi
__builtin_sve_svasrd_n_s8_x
__builtin_sve_svasrd_n_s8_z
__builtin_sve_svbcax_n_s16
__builtin_sve_svbcax_n_s32
__builtin_sve_svbcax_n_s64
__builtin_sve_svbcax_n_s8
__builtin_sve_svbcax_n_u16
__builtin_sve_svbcax_n_u32
__builtin_sve_svbcax_n_u64
__builtin_sve_svbcax_n_u8
__builtin_sve_svbcax_s16
__builtin_sve_svbcax_s32
__builtin_sve_svbcax_s64
__builtin_sve_svbcax_s8
__builtin_sve_svbcax_u16
__builtin_sve_svbcax_u32
__builtin_sve_svbcax_u64
__builtin_sve_svbcax_u8
__builtin_sve_svbdep_n_u16
q8Usq8UsUs
__builtin_sve_svbdep_n_u32
q4Uiq4UiUi
__builtin_sve_svbdep_n_u64
q2UWiq2UWiUWi
__builtin_sve_svbdep_n_u8
q16Ucq16UcUc
__builtin_sve_svbdep_u16
q8Usq8Usq8Us
__builtin_sve_svbdep_u32
__builtin_sve_svbdep_u64
__builtin_sve_svbdep_u8
__builtin_sve_svbext_n_u16
__builtin_sve_svbext_n_u32
__builtin_sve_svbext_n_u64
__builtin_sve_svbext_n_u8
__builtin_sve_svbext_u16
__builtin_sve_svbext_u32
__builtin_sve_svbext_u64
__builtin_sve_svbext_u8
__builtin_sve_svbfdot_f32
q4fq4fq8yq8y
__builtin_sve_svbfdot_lane_f32
q4fq4fq8yq8yUWi
__builtin_sve_svbfdot_n_f32
q4fq4fq8yy
__builtin_sve_svbfmlalb_f32
__builtin_sve_svbfmlalb_lane_f32
__builtin_sve_svbfmlalb_n_f32
__builtin_sve_svbfmlalt_f32
__builtin_sve_svbfmlalt_lane_f32
__builtin_sve_svbfmlalt_n_f32
__builtin_sve_svbfmmla_f32
__builtin_sve_svbgrp_n_u16
__builtin_sve_svbgrp_n_u32
__builtin_sve_svbgrp_n_u64
__builtin_sve_svbgrp_n_u8
__builtin_sve_svbgrp_u16
__builtin_sve_svbgrp_u32
__builtin_sve_svbgrp_u64
__builtin_sve_svbgrp_u8
__builtin_sve_svbic_b_z
__builtin_sve_svbic_n_s16_m
__builtin_sve_svbic_n_s16_x
__builtin_sve_svbic_n_s16_z
__builtin_sve_svbic_n_s32_m
__builtin_sve_svbic_n_s32_x
__builtin_sve_svbic_n_s32_z
__builtin_sve_svbic_n_s64_m
__builtin_sve_svbic_n_s64_x
__builtin_sve_svbic_n_s64_z
__builtin_sve_svbic_n_s8_m
__builtin_sve_svbic_n_s8_x
__builtin_sve_svbic_n_s8_z
__builtin_sve_svbic_n_u16_m
__builtin_sve_svbic_n_u16_x
__builtin_sve_svbic_n_u16_z
__builtin_sve_svbic_n_u32_m
__builtin_sve_svbic_n_u32_x
__builtin_sve_svbic_n_u32_z
__builtin_sve_svbic_n_u64_m
__builtin_sve_svbic_n_u64_x
__builtin_sve_svbic_n_u64_z
__builtin_sve_svbic_n_u8_m
__builtin_sve_svbic_n_u8_x
__builtin_sve_svbic_n_u8_z
__builtin_sve_svbic_s16_m
__builtin_sve_svbic_s16_x
__builtin_sve_svbic_s16_z
__builtin_sve_svbic_s32_m
__builtin_sve_svbic_s32_x
__builtin_sve_svbic_s32_z
__builtin_sve_svbic_s64_m
__builtin_sve_svbic_s64_x
__builtin_sve_svbic_s64_z
__builtin_sve_svbic_s8_m
__builtin_sve_svbic_s8_x
__builtin_sve_svbic_s8_z
__builtin_sve_svbic_u16_m
__builtin_sve_svbic_u16_x
__builtin_sve_svbic_u16_z
__builtin_sve_svbic_u32_m
__builtin_sve_svbic_u32_x
__builtin_sve_svbic_u32_z
__builtin_sve_svbic_u64_m
__builtin_sve_svbic_u64_x
__builtin_sve_svbic_u64_z
__builtin_sve_svbic_u8_m
__builtin_sve_svbic_u8_x
__builtin_sve_svbic_u8_z
__builtin_sve_svbrka_b_m
__builtin_sve_svbrka_b_z
q16bq16bq16b
__builtin_sve_svbrkb_b_m
__builtin_sve_svbrkb_b_z
__builtin_sve_svbrkn_b_z
__builtin_sve_svbrkpa_b_z
__builtin_sve_svbrkpb_b_z
__builtin_sve_svbsl1n_n_s16
__builtin_sve_svbsl1n_n_s32
__builtin_sve_svbsl1n_n_s64
__builtin_sve_svbsl1n_n_s8
__builtin_sve_svbsl1n_n_u16
__builtin_sve_svbsl1n_n_u32
__builtin_sve_svbsl1n_n_u64
__builtin_sve_svbsl1n_n_u8
__builtin_sve_svbsl1n_s16
__builtin_sve_svbsl1n_s32
__builtin_sve_svbsl1n_s64
__builtin_sve_svbsl1n_s8
__builtin_sve_svbsl1n_u16
__builtin_sve_svbsl1n_u32
__builtin_sve_svbsl1n_u64
__builtin_sve_svbsl1n_u8
__builtin_sve_svbsl2n_n_s16
__builtin_sve_svbsl2n_n_s32
__builtin_sve_svbsl2n_n_s64
__builtin_sve_svbsl2n_n_s8
__builtin_sve_svbsl2n_n_u16
__builtin_sve_svbsl2n_n_u32
__builtin_sve_svbsl2n_n_u64
__builtin_sve_svbsl2n_n_u8
__builtin_sve_svbsl2n_s16
__builtin_sve_svbsl2n_s32
__builtin_sve_svbsl2n_s64
__builtin_sve_svbsl2n_s8
__builtin_sve_svbsl2n_u16
__builtin_sve_svbsl2n_u32
__builtin_sve_svbsl2n_u64
__builtin_sve_svbsl2n_u8
__builtin_sve_svbsl_n_s16
__builtin_sve_svbsl_n_s32
__builtin_sve_svbsl_n_s64
__builtin_sve_svbsl_n_s8
__builtin_sve_svbsl_n_u16
__builtin_sve_svbsl_n_u32
__builtin_sve_svbsl_n_u64
__builtin_sve_svbsl_n_u8
__builtin_sve_svbsl_s16
__builtin_sve_svbsl_s32
__builtin_sve_svbsl_s64
__builtin_sve_svbsl_s8
__builtin_sve_svbsl_u16
__builtin_sve_svbsl_u32
__builtin_sve_svbsl_u64
__builtin_sve_svbsl_u8
__builtin_sve_svcadd_f16_m
q8hq16bq8hq8hIUWi
__builtin_sve_svcadd_f16_x
__builtin_sve_svcadd_f16_z
__builtin_sve_svcadd_f32_m
q4fq16bq4fq4fIUWi
__builtin_sve_svcadd_f32_x
__builtin_sve_svcadd_f32_z
__builtin_sve_svcadd_f64_m
q2dq16bq2dq2dIUWi
__builtin_sve_svcadd_f64_x
__builtin_sve_svcadd_f64_z
__builtin_sve_svcadd_s16
q8sq8sq8sIUWi
__builtin_sve_svcadd_s32
q4iq4iq4iIUWi
__builtin_sve_svcadd_s64
q2Wiq2Wiq2WiIUWi
__builtin_sve_svcadd_s8
q16Scq16Scq16ScIUWi
__builtin_sve_svcadd_u16
q8Usq8Usq8UsIUWi
__builtin_sve_svcadd_u32
q4Uiq4Uiq4UiIUWi
__builtin_sve_svcadd_u64
q2UWiq2UWiq2UWiIUWi
__builtin_sve_svcadd_u8
q16Ucq16Ucq16UcIUWi
__builtin_sve_svcdot_lane_s32
q4iq4iq16Scq16ScIUWiIUWi
__builtin_sve_svcdot_lane_s64
q2Wiq2Wiq8sq8sIUWiIUWi
__builtin_sve_svcdot_s32
q4iq4iq16Scq16ScIUWi
__builtin_sve_svcdot_s64
q2Wiq2Wiq8sq8sIUWi
__builtin_sve_svclasta_bf16
q8yq16bq8yq8y
__builtin_sve_svclasta_f16
__builtin_sve_svclasta_f32
__builtin_sve_svclasta_f64
__builtin_sve_svclasta_n_bf16
yq16byq8y
__builtin_sve_svclasta_n_f16
__builtin_sve_svclasta_n_f32
__builtin_sve_svclasta_n_f64
__builtin_sve_svclasta_n_s16
sq16bsq8s
__builtin_sve_svclasta_n_s32
iq16biq4i
__builtin_sve_svclasta_n_s64
Wiq16bWiq2Wi
__builtin_sve_svclasta_n_s8
Scq16bScq16Sc
__builtin_sve_svclasta_n_u16
Usq16bUsq8Us
__builtin_sve_svclasta_n_u32
Uiq16bUiq4Ui
__builtin_sve_svclasta_n_u64
UWiq16bUWiq2UWi
__builtin_sve_svclasta_n_u8
Ucq16bUcq16Uc
__builtin_sve_svclasta_s16
__builtin_sve_svclasta_s32
__builtin_sve_svclasta_s64
__builtin_sve_svclasta_s8
__builtin_sve_svclasta_u16
__builtin_sve_svclasta_u32
__builtin_sve_svclasta_u64
__builtin_sve_svclasta_u8
__builtin_sve_svclastb_bf16
__builtin_sve_svclastb_f16
__builtin_sve_svclastb_f32
__builtin_sve_svclastb_f64
__builtin_sve_svclastb_n_bf16
__builtin_sve_svclastb_n_f16
__builtin_sve_svclastb_n_f32
__builtin_sve_svclastb_n_f64
__builtin_sve_svclastb_n_s16
__builtin_sve_svclastb_n_s32
__builtin_sve_svclastb_n_s64
__builtin_sve_svclastb_n_s8
__builtin_sve_svclastb_n_u16
__builtin_sve_svclastb_n_u32
__builtin_sve_svclastb_n_u64
__builtin_sve_svclastb_n_u8
__builtin_sve_svclastb_s16
__builtin_sve_svclastb_s32
__builtin_sve_svclastb_s64
__builtin_sve_svclastb_s8
__builtin_sve_svclastb_u16
__builtin_sve_svclastb_u32
__builtin_sve_svclastb_u64
__builtin_sve_svclastb_u8
__builtin_sve_svcls_s16_m
q8Usq8Usq16bq8s
__builtin_sve_svcls_s16_x
q8Usq16bq8s
__builtin_sve_svcls_s16_z
__builtin_sve_svcls_s32_m
q4Uiq4Uiq16bq4i
__builtin_sve_svcls_s32_x
q4Uiq16bq4i
__builtin_sve_svcls_s32_z
__builtin_sve_svcls_s64_m
q2UWiq2UWiq16bq2Wi
__builtin_sve_svcls_s64_x
q2UWiq16bq2Wi
__builtin_sve_svcls_s64_z
__builtin_sve_svcls_s8_m
q16Ucq16Ucq16bq16Sc
__builtin_sve_svcls_s8_x
q16Ucq16bq16Sc
__builtin_sve_svcls_s8_z
__builtin_sve_svclz_s16_m
__builtin_sve_svclz_s16_x
__builtin_sve_svclz_s16_z
__builtin_sve_svclz_s32_m
__builtin_sve_svclz_s32_x
__builtin_sve_svclz_s32_z
__builtin_sve_svclz_s64_m
__builtin_sve_svclz_s64_x
__builtin_sve_svclz_s64_z
__builtin_sve_svclz_s8_m
__builtin_sve_svclz_s8_x
__builtin_sve_svclz_s8_z
__builtin_sve_svclz_u16_m
q8Usq8Usq16bq8Us
__builtin_sve_svclz_u16_x
q8Usq16bq8Us
__builtin_sve_svclz_u16_z
__builtin_sve_svclz_u32_m
q4Uiq4Uiq16bq4Ui
__builtin_sve_svclz_u32_x
q4Uiq16bq4Ui
__builtin_sve_svclz_u32_z
__builtin_sve_svclz_u64_m
q2UWiq2UWiq16bq2UWi
__builtin_sve_svclz_u64_x
q2UWiq16bq2UWi
__builtin_sve_svclz_u64_z
__builtin_sve_svclz_u8_m
q16Ucq16Ucq16bq16Uc
__builtin_sve_svclz_u8_x
q16Ucq16bq16Uc
__builtin_sve_svclz_u8_z
__builtin_sve_svcmla_f16_m
q8hq16bq8hq8hq8hIUWi
__builtin_sve_svcmla_f16_x
__builtin_sve_svcmla_f16_z
__builtin_sve_svcmla_f32_m
q4fq16bq4fq4fq4fIUWi
__builtin_sve_svcmla_f32_x
__builtin_sve_svcmla_f32_z
__builtin_sve_svcmla_f64_m
q2dq16bq2dq2dq2dIUWi
__builtin_sve_svcmla_f64_x
__builtin_sve_svcmla_f64_z
__builtin_sve_svcmla_lane_f16
q8hq8hq8hq8hIUWiIUWi
__builtin_sve_svcmla_lane_f32
q4fq4fq4fq4fIUWiIUWi
__builtin_sve_svcmla_lane_s16
q8sq8sq8sq8sIUWiIUWi
__builtin_sve_svcmla_lane_s32
q4iq4iq4iq4iIUWiIUWi
__builtin_sve_svcmla_lane_u16
q8Usq8Usq8Usq8UsIUWiIUWi
__builtin_sve_svcmla_lane_u32
q4Uiq4Uiq4Uiq4UiIUWiIUWi
__builtin_sve_svcmla_s16
q8sq8sq8sq8sIUWi
__builtin_sve_svcmla_s32
q4iq4iq4iq4iIUWi
__builtin_sve_svcmla_s64
q2Wiq2Wiq2Wiq2WiIUWi
__builtin_sve_svcmla_s8
q16Scq16Scq16Scq16ScIUWi
__builtin_sve_svcmla_u16
q8Usq8Usq8Usq8UsIUWi
__builtin_sve_svcmla_u32
q4Uiq4Uiq4Uiq4UiIUWi
__builtin_sve_svcmla_u64
q2UWiq2UWiq2UWiq2UWiIUWi
__builtin_sve_svcmla_u8
q16Ucq16Ucq16Ucq16UcIUWi
__builtin_sve_svcmpeq_f16
__builtin_sve_svcmpeq_f32
__builtin_sve_svcmpeq_f64
__builtin_sve_svcmpeq_n_f16
__builtin_sve_svcmpeq_n_f32
__builtin_sve_svcmpeq_n_f64
__builtin_sve_svcmpeq_n_s16
q16bq16bq8ss
__builtin_sve_svcmpeq_n_s32
q16bq16bq4ii
__builtin_sve_svcmpeq_n_s64
q16bq16bq2WiWi
__builtin_sve_svcmpeq_n_s8
q16bq16bq16ScSc
__builtin_sve_svcmpeq_n_u16
q16bq16bq8UsUs
__builtin_sve_svcmpeq_n_u32
q16bq16bq4UiUi
__builtin_sve_svcmpeq_n_u64
q16bq16bq2UWiUWi
__builtin_sve_svcmpeq_n_u8
q16bq16bq16UcUc
__builtin_sve_svcmpeq_s16
q16bq16bq8sq8s
__builtin_sve_svcmpeq_s32
q16bq16bq4iq4i
__builtin_sve_svcmpeq_s64
q16bq16bq2Wiq2Wi
__builtin_sve_svcmpeq_s8
q16bq16bq16Scq16Sc
__builtin_sve_svcmpeq_u16
q16bq16bq8Usq8Us
__builtin_sve_svcmpeq_u32
q16bq16bq4Uiq4Ui
__builtin_sve_svcmpeq_u64
q16bq16bq2UWiq2UWi
__builtin_sve_svcmpeq_u8
q16bq16bq16Ucq16Uc
__builtin_sve_svcmpeq_wide_n_s16
q16bq16bq8sWi
__builtin_sve_svcmpeq_wide_n_s32
q16bq16bq4iWi
__builtin_sve_svcmpeq_wide_n_s8
q16bq16bq16ScWi
__builtin_sve_svcmpeq_wide_s16
q16bq16bq8sq2Wi
__builtin_sve_svcmpeq_wide_s32
q16bq16bq4iq2Wi
__builtin_sve_svcmpeq_wide_s8
q16bq16bq16Scq2Wi
__builtin_sve_svcmpge_f16
__builtin_sve_svcmpge_f32
__builtin_sve_svcmpge_f64
__builtin_sve_svcmpge_n_f16
__builtin_sve_svcmpge_n_f32
__builtin_sve_svcmpge_n_f64
__builtin_sve_svcmpge_n_s16
__builtin_sve_svcmpge_n_s32
__builtin_sve_svcmpge_n_s64
__builtin_sve_svcmpge_n_s8
__builtin_sve_svcmpge_n_u16
__builtin_sve_svcmpge_n_u32
__builtin_sve_svcmpge_n_u64
__builtin_sve_svcmpge_n_u8
__builtin_sve_svcmpge_s16
__builtin_sve_svcmpge_s32
__builtin_sve_svcmpge_s64
__builtin_sve_svcmpge_s8
__builtin_sve_svcmpge_u16
__builtin_sve_svcmpge_u32
__builtin_sve_svcmpge_u64
__builtin_sve_svcmpge_u8
__builtin_sve_svcmpge_wide_n_s16
__builtin_sve_svcmpge_wide_n_s32
__builtin_sve_svcmpge_wide_n_s8
__builtin_sve_svcmpge_wide_n_u16
q16bq16bq8UsUWi
__builtin_sve_svcmpge_wide_n_u32
q16bq16bq4UiUWi
__builtin_sve_svcmpge_wide_n_u8
q16bq16bq16UcUWi
__builtin_sve_svcmpge_wide_s16
__builtin_sve_svcmpge_wide_s32
__builtin_sve_svcmpge_wide_s8
__builtin_sve_svcmpge_wide_u16
q16bq16bq8Usq2UWi
__builtin_sve_svcmpge_wide_u32
q16bq16bq4Uiq2UWi
__builtin_sve_svcmpge_wide_u8
q16bq16bq16Ucq2UWi
__builtin_sve_svcmpgt_f16
__builtin_sve_svcmpgt_f32
__builtin_sve_svcmpgt_f64
__builtin_sve_svcmpgt_n_f16
__builtin_sve_svcmpgt_n_f32
__builtin_sve_svcmpgt_n_f64
__builtin_sve_svcmpgt_n_s16
__builtin_sve_svcmpgt_n_s32
__builtin_sve_svcmpgt_n_s64
__builtin_sve_svcmpgt_n_s8
__builtin_sve_svcmpgt_n_u16
__builtin_sve_svcmpgt_n_u32
__builtin_sve_svcmpgt_n_u64
__builtin_sve_svcmpgt_n_u8
__builtin_sve_svcmpgt_s16
__builtin_sve_svcmpgt_s32
__builtin_sve_svcmpgt_s64
__builtin_sve_svcmpgt_s8
__builtin_sve_svcmpgt_u16
__builtin_sve_svcmpgt_u32
__builtin_sve_svcmpgt_u64
__builtin_sve_svcmpgt_u8
__builtin_sve_svcmpgt_wide_n_s16
__builtin_sve_svcmpgt_wide_n_s32
__builtin_sve_svcmpgt_wide_n_s8
__builtin_sve_svcmpgt_wide_n_u16
__builtin_sve_svcmpgt_wide_n_u32
__builtin_sve_svcmpgt_wide_n_u8
__builtin_sve_svcmpgt_wide_s16
__builtin_sve_svcmpgt_wide_s32
__builtin_sve_svcmpgt_wide_s8
__builtin_sve_svcmpgt_wide_u16
__builtin_sve_svcmpgt_wide_u32
__builtin_sve_svcmpgt_wide_u8
__builtin_sve_svcmple_f16
__builtin_sve_svcmple_f32
__builtin_sve_svcmple_f64
__builtin_sve_svcmple_n_f16
__builtin_sve_svcmple_n_f32
__builtin_sve_svcmple_n_f64
__builtin_sve_svcmple_n_s16
__builtin_sve_svcmple_n_s32
__builtin_sve_svcmple_n_s64
__builtin_sve_svcmple_n_s8
__builtin_sve_svcmple_n_u16
__builtin_sve_svcmple_n_u32
__builtin_sve_svcmple_n_u64
__builtin_sve_svcmple_n_u8
__builtin_sve_svcmple_s16
__builtin_sve_svcmple_s32
__builtin_sve_svcmple_s64
__builtin_sve_svcmple_s8
__builtin_sve_svcmple_u16
__builtin_sve_svcmple_u32
__builtin_sve_svcmple_u64
__builtin_sve_svcmple_u8
__builtin_sve_svcmple_wide_n_s16
__builtin_sve_svcmple_wide_n_s32
__builtin_sve_svcmple_wide_n_s8
__builtin_sve_svcmple_wide_n_u16
__builtin_sve_svcmple_wide_n_u32
__builtin_sve_svcmple_wide_n_u8
__builtin_sve_svcmple_wide_s16
__builtin_sve_svcmple_wide_s32
__builtin_sve_svcmple_wide_s8
__builtin_sve_svcmple_wide_u16
__builtin_sve_svcmple_wide_u32
__builtin_sve_svcmple_wide_u8
__builtin_sve_svcmplt_f16
__builtin_sve_svcmplt_f32
__builtin_sve_svcmplt_f64
__builtin_sve_svcmplt_n_f16
__builtin_sve_svcmplt_n_f32
__builtin_sve_svcmplt_n_f64
__builtin_sve_svcmplt_n_s16
__builtin_sve_svcmplt_n_s32
__builtin_sve_svcmplt_n_s64
__builtin_sve_svcmplt_n_s8
__builtin_sve_svcmplt_n_u16
__builtin_sve_svcmplt_n_u32
__builtin_sve_svcmplt_n_u64
__builtin_sve_svcmplt_n_u8
__builtin_sve_svcmplt_s16
__builtin_sve_svcmplt_s32
__builtin_sve_svcmplt_s64
__builtin_sve_svcmplt_s8
__builtin_sve_svcmplt_u16
__builtin_sve_svcmplt_u32
__builtin_sve_svcmplt_u64
__builtin_sve_svcmplt_u8
__builtin_sve_svcmplt_wide_n_s16
__builtin_sve_svcmplt_wide_n_s32
__builtin_sve_svcmplt_wide_n_s8
__builtin_sve_svcmplt_wide_n_u16
__builtin_sve_svcmplt_wide_n_u32
__builtin_sve_svcmplt_wide_n_u8
__builtin_sve_svcmplt_wide_s16
__builtin_sve_svcmplt_wide_s32
__builtin_sve_svcmplt_wide_s8
__builtin_sve_svcmplt_wide_u16
__builtin_sve_svcmplt_wide_u32
__builtin_sve_svcmplt_wide_u8
__builtin_sve_svcmpne_f16
__builtin_sve_svcmpne_f32
__builtin_sve_svcmpne_f64
__builtin_sve_svcmpne_n_f16
__builtin_sve_svcmpne_n_f32
__builtin_sve_svcmpne_n_f64
__builtin_sve_svcmpne_n_s16
__builtin_sve_svcmpne_n_s32
__builtin_sve_svcmpne_n_s64
__builtin_sve_svcmpne_n_s8
__builtin_sve_svcmpne_n_u16
__builtin_sve_svcmpne_n_u32
__builtin_sve_svcmpne_n_u64
__builtin_sve_svcmpne_n_u8
__builtin_sve_svcmpne_s16
__builtin_sve_svcmpne_s32
__builtin_sve_svcmpne_s64
__builtin_sve_svcmpne_s8
__builtin_sve_svcmpne_u16
__builtin_sve_svcmpne_u32
__builtin_sve_svcmpne_u64
__builtin_sve_svcmpne_u8
__builtin_sve_svcmpne_wide_n_s16
__builtin_sve_svcmpne_wide_n_s32
__builtin_sve_svcmpne_wide_n_s8
__builtin_sve_svcmpne_wide_s16
__builtin_sve_svcmpne_wide_s32
__builtin_sve_svcmpne_wide_s8
__builtin_sve_svcmpuo_f16
__builtin_sve_svcmpuo_f32
__builtin_sve_svcmpuo_f64
__builtin_sve_svcmpuo_n_f16
__builtin_sve_svcmpuo_n_f32
__builtin_sve_svcmpuo_n_f64
__builtin_sve_svcnot_s16_m
__builtin_sve_svcnot_s16_x
__builtin_sve_svcnot_s16_z
__builtin_sve_svcnot_s32_m
__builtin_sve_svcnot_s32_x
__builtin_sve_svcnot_s32_z
__builtin_sve_svcnot_s64_m
__builtin_sve_svcnot_s64_x
__builtin_sve_svcnot_s64_z
__builtin_sve_svcnot_s8_m
__builtin_sve_svcnot_s8_x
__builtin_sve_svcnot_s8_z
__builtin_sve_svcnot_u16_m
__builtin_sve_svcnot_u16_x
__builtin_sve_svcnot_u16_z
__builtin_sve_svcnot_u32_m
__builtin_sve_svcnot_u32_x
__builtin_sve_svcnot_u32_z
__builtin_sve_svcnot_u64_m
__builtin_sve_svcnot_u64_x
__builtin_sve_svcnot_u64_z
__builtin_sve_svcnot_u8_m
__builtin_sve_svcnot_u8_x
__builtin_sve_svcnot_u8_z
__builtin_sve_svcnt_bf16_m
q8Usq8Usq16bq8y
__builtin_sve_svcnt_bf16_x
q8Usq16bq8y
__builtin_sve_svcnt_bf16_z
__builtin_sve_svcnt_f16_m
q8Usq8Usq16bq8h
__builtin_sve_svcnt_f16_x
q8Usq16bq8h
__builtin_sve_svcnt_f16_z
__builtin_sve_svcnt_f32_m
q4Uiq4Uiq16bq4f
__builtin_sve_svcnt_f32_x
q4Uiq16bq4f
__builtin_sve_svcnt_f32_z
__builtin_sve_svcnt_f64_m
q2UWiq2UWiq16bq2d
__builtin_sve_svcnt_f64_x
q2UWiq16bq2d
__builtin_sve_svcnt_f64_z
__builtin_sve_svcnt_s16_m
__builtin_sve_svcnt_s16_x
__builtin_sve_svcnt_s16_z
__builtin_sve_svcnt_s32_m
__builtin_sve_svcnt_s32_x
__builtin_sve_svcnt_s32_z
__builtin_sve_svcnt_s64_m
__builtin_sve_svcnt_s64_x
__builtin_sve_svcnt_s64_z
__builtin_sve_svcnt_s8_m
__builtin_sve_svcnt_s8_x
__builtin_sve_svcnt_s8_z
__builtin_sve_svcnt_u16_m
__builtin_sve_svcnt_u16_x
__builtin_sve_svcnt_u16_z
__builtin_sve_svcnt_u32_m
__builtin_sve_svcnt_u32_x
__builtin_sve_svcnt_u32_z
__builtin_sve_svcnt_u64_m
__builtin_sve_svcnt_u64_x
__builtin_sve_svcnt_u64_z
__builtin_sve_svcnt_u8_m
__builtin_sve_svcnt_u8_x
__builtin_sve_svcnt_u8_z
__builtin_sve_svcntb
__builtin_sve_svcntb_pat
UWiIi
__builtin_sve_svcntd
__builtin_sve_svcntd_pat
__builtin_sve_svcnth
__builtin_sve_svcnth_pat
__builtin_sve_svcntp_b16
UWiq16bq16b
__builtin_sve_svcntp_b32
__builtin_sve_svcntp_b64
__builtin_sve_svcntp_b8
__builtin_sve_svcntw
__builtin_sve_svcntw_pat
__builtin_sve_svcompact_f32
__builtin_sve_svcompact_f64
__builtin_sve_svcompact_s32
__builtin_sve_svcompact_s64
__builtin_sve_svcompact_u32
__builtin_sve_svcompact_u64
__builtin_sve_svcreate2_bf16
q16yq8yq8y
__builtin_sve_svcreate2_f16
q16hq8hq8h
__builtin_sve_svcreate2_f32
q8fq4fq4f
__builtin_sve_svcreate2_f64
q4dq2dq2d
__builtin_sve_svcreate2_s16
q16sq8sq8s
__builtin_sve_svcreate2_s32
q8iq4iq4i
__builtin_sve_svcreate2_s64
q4Wiq2Wiq2Wi
__builtin_sve_svcreate2_s8
q32Scq16Scq16Sc
__builtin_sve_svcreate2_u16
q16Usq8Usq8Us
__builtin_sve_svcreate2_u32
q8Uiq4Uiq4Ui
__builtin_sve_svcreate2_u64
q4UWiq2UWiq2UWi
__builtin_sve_svcreate2_u8
q32Ucq16Ucq16Uc
__builtin_sve_svcreate3_bf16
q24yq8yq8yq8y
__builtin_sve_svcreate3_f16
q24hq8hq8hq8h
__builtin_sve_svcreate3_f32
q12fq4fq4fq4f
__builtin_sve_svcreate3_f64
q6dq2dq2dq2d
__builtin_sve_svcreate3_s16
q24sq8sq8sq8s
__builtin_sve_svcreate3_s32
q12iq4iq4iq4i
__builtin_sve_svcreate3_s64
q6Wiq2Wiq2Wiq2Wi
__builtin_sve_svcreate3_s8
q48Scq16Scq16Scq16Sc
__builtin_sve_svcreate3_u16
q24Usq8Usq8Usq8Us
__builtin_sve_svcreate3_u32
q12Uiq4Uiq4Uiq4Ui
__builtin_sve_svcreate3_u64
q6UWiq2UWiq2UWiq2UWi
__builtin_sve_svcreate3_u8
q48Ucq16Ucq16Ucq16Uc
__builtin_sve_svcreate4_bf16
q32yq8yq8yq8yq8y
__builtin_sve_svcreate4_f16
q32hq8hq8hq8hq8h
__builtin_sve_svcreate4_f32
q16fq4fq4fq4fq4f
__builtin_sve_svcreate4_f64
q8dq2dq2dq2dq2d
__builtin_sve_svcreate4_s16
q32sq8sq8sq8sq8s
__builtin_sve_svcreate4_s32
q16iq4iq4iq4iq4i
__builtin_sve_svcreate4_s64
q8Wiq2Wiq2Wiq2Wiq2Wi
__builtin_sve_svcreate4_s8
q64Scq16Scq16Scq16Scq16Sc
__builtin_sve_svcreate4_u16
q32Usq8Usq8Usq8Usq8Us
__builtin_sve_svcreate4_u32
q16Uiq4Uiq4Uiq4Uiq4Ui
__builtin_sve_svcreate4_u64
q8UWiq2UWiq2UWiq2UWiq2UWi
__builtin_sve_svcreate4_u8
q64Ucq16Ucq16Ucq16Ucq16Uc
__builtin_sve_svcvt_bf16_f32_m
q8yq8yq16bq4f
__builtin_sve_svcvt_bf16_f32_x
q8yq16bq4f
__builtin_sve_svcvt_bf16_f32_z
__builtin_sve_svcvt_f16_f32_m
q8hq8hq16bq4f
__builtin_sve_svcvt_f16_f32_x
q8hq16bq4f
__builtin_sve_svcvt_f16_f32_z
__builtin_sve_svcvt_f16_f64_m
q8hq8hq16bq2d
__builtin_sve_svcvt_f16_f64_x
q8hq16bq2d
__builtin_sve_svcvt_f16_f64_z
__builtin_sve_svcvt_f16_s16_m
q8hq8hq16bq8s
__builtin_sve_svcvt_f16_s16_x
q8hq16bq8s
__builtin_sve_svcvt_f16_s16_z
__builtin_sve_svcvt_f16_s32_m
q8hq8hq16bq4i
__builtin_sve_svcvt_f16_s32_x
q8hq16bq4i
__builtin_sve_svcvt_f16_s32_z
__builtin_sve_svcvt_f16_s64_m
q8hq8hq16bq2Wi
__builtin_sve_svcvt_f16_s64_x
q8hq16bq2Wi
__builtin_sve_svcvt_f16_s64_z
__builtin_sve_svcvt_f16_u16_m
q8hq8hq16bq8Us
__builtin_sve_svcvt_f16_u16_x
q8hq16bq8Us
__builtin_sve_svcvt_f16_u16_z
__builtin_sve_svcvt_f16_u32_m
q8hq8hq16bq4Ui
__builtin_sve_svcvt_f16_u32_x
q8hq16bq4Ui
__builtin_sve_svcvt_f16_u32_z
__builtin_sve_svcvt_f16_u64_m
q8hq8hq16bq2UWi
__builtin_sve_svcvt_f16_u64_x
q8hq16bq2UWi
__builtin_sve_svcvt_f16_u64_z
__builtin_sve_svcvt_f32_f16_m
q4fq4fq16bq8h
__builtin_sve_svcvt_f32_f16_x
q4fq16bq8h
__builtin_sve_svcvt_f32_f16_z
__builtin_sve_svcvt_f32_f64_m
q4fq4fq16bq2d
__builtin_sve_svcvt_f32_f64_x
q4fq16bq2d
__builtin_sve_svcvt_f32_f64_z
__builtin_sve_svcvt_f32_s32_m
q4fq4fq16bq4i
__builtin_sve_svcvt_f32_s32_x
q4fq16bq4i
__builtin_sve_svcvt_f32_s32_z
__builtin_sve_svcvt_f32_s64_m
q4fq4fq16bq2Wi
__builtin_sve_svcvt_f32_s64_x
q4fq16bq2Wi
__builtin_sve_svcvt_f32_s64_z
__builtin_sve_svcvt_f32_u32_m
q4fq4fq16bq4Ui
__builtin_sve_svcvt_f32_u32_x
q4fq16bq4Ui
__builtin_sve_svcvt_f32_u32_z
__builtin_sve_svcvt_f32_u64_m
q4fq4fq16bq2UWi
__builtin_sve_svcvt_f32_u64_x
q4fq16bq2UWi
__builtin_sve_svcvt_f32_u64_z
__builtin_sve_svcvt_f64_f16_m
q2dq2dq16bq8h
__builtin_sve_svcvt_f64_f16_x
q2dq16bq8h
__builtin_sve_svcvt_f64_f16_z
__builtin_sve_svcvt_f64_f32_m
q2dq2dq16bq4f
__builtin_sve_svcvt_f64_f32_x
q2dq16bq4f
__builtin_sve_svcvt_f64_f32_z
__builtin_sve_svcvt_f64_s32_m
q2dq2dq16bq4i
__builtin_sve_svcvt_f64_s32_x
q2dq16bq4i
__builtin_sve_svcvt_f64_s32_z
__builtin_sve_svcvt_f64_s64_m
q2dq2dq16bq2Wi
__builtin_sve_svcvt_f64_s64_x
q2dq16bq2Wi
__builtin_sve_svcvt_f64_s64_z
__builtin_sve_svcvt_f64_u32_m
q2dq2dq16bq4Ui
__builtin_sve_svcvt_f64_u32_x
q2dq16bq4Ui
__builtin_sve_svcvt_f64_u32_z
__builtin_sve_svcvt_f64_u64_m
q2dq2dq16bq2UWi
__builtin_sve_svcvt_f64_u64_x
q2dq16bq2UWi
__builtin_sve_svcvt_f64_u64_z
__builtin_sve_svcvt_s16_f16_m
q8sq8sq16bq8h
__builtin_sve_svcvt_s16_f16_x
q8sq16bq8h
__builtin_sve_svcvt_s16_f16_z
__builtin_sve_svcvt_s32_f16_m
q4iq4iq16bq8h
__builtin_sve_svcvt_s32_f16_x
q4iq16bq8h
__builtin_sve_svcvt_s32_f16_z
__builtin_sve_svcvt_s32_f32_m
q4iq4iq16bq4f
__builtin_sve_svcvt_s32_f32_x
q4iq16bq4f
__builtin_sve_svcvt_s32_f32_z
__builtin_sve_svcvt_s32_f64_m
q4iq4iq16bq2d
__builtin_sve_svcvt_s32_f64_x
q4iq16bq2d
__builtin_sve_svcvt_s32_f64_z
__builtin_sve_svcvt_s64_f16_m
q2Wiq2Wiq16bq8h
__builtin_sve_svcvt_s64_f16_x
q2Wiq16bq8h
__builtin_sve_svcvt_s64_f16_z
__builtin_sve_svcvt_s64_f32_m
q2Wiq2Wiq16bq4f
__builtin_sve_svcvt_s64_f32_x
q2Wiq16bq4f
__builtin_sve_svcvt_s64_f32_z
__builtin_sve_svcvt_s64_f64_m
q2Wiq2Wiq16bq2d
__builtin_sve_svcvt_s64_f64_x
q2Wiq16bq2d
__builtin_sve_svcvt_s64_f64_z
__builtin_sve_svcvt_u16_f16_m
__builtin_sve_svcvt_u16_f16_x
__builtin_sve_svcvt_u16_f16_z
__builtin_sve_svcvt_u32_f16_m
q4Uiq4Uiq16bq8h
__builtin_sve_svcvt_u32_f16_x
q4Uiq16bq8h
__builtin_sve_svcvt_u32_f16_z
__builtin_sve_svcvt_u32_f32_m
__builtin_sve_svcvt_u32_f32_x
__builtin_sve_svcvt_u32_f32_z
__builtin_sve_svcvt_u32_f64_m
q4Uiq4Uiq16bq2d
__builtin_sve_svcvt_u32_f64_x
q4Uiq16bq2d
__builtin_sve_svcvt_u32_f64_z
__builtin_sve_svcvt_u64_f16_m
q2UWiq2UWiq16bq8h
__builtin_sve_svcvt_u64_f16_x
q2UWiq16bq8h
__builtin_sve_svcvt_u64_f16_z
__builtin_sve_svcvt_u64_f32_m
q2UWiq2UWiq16bq4f
__builtin_sve_svcvt_u64_f32_x
q2UWiq16bq4f
__builtin_sve_svcvt_u64_f32_z
__builtin_sve_svcvt_u64_f64_m
__builtin_sve_svcvt_u64_f64_x
__builtin_sve_svcvt_u64_f64_z
__builtin_sve_svcvtlt_f32_f16_m
__builtin_sve_svcvtlt_f32_f16_x
__builtin_sve_svcvtlt_f64_f32_m
__builtin_sve_svcvtlt_f64_f32_x
__builtin_sve_svcvtnt_bf16_f32_m
__builtin_sve_svcvtnt_f16_f32_m
__builtin_sve_svcvtnt_f32_f64_m
__builtin_sve_svcvtx_f32_f64_m
__builtin_sve_svcvtx_f32_f64_x
__builtin_sve_svcvtx_f32_f64_z
__builtin_sve_svcvtxnt_f32_f64_m
__builtin_sve_svdiv_f16_m
__builtin_sve_svdiv_f16_x
__builtin_sve_svdiv_f16_z
__builtin_sve_svdiv_f32_m
__builtin_sve_svdiv_f32_x
__builtin_sve_svdiv_f32_z
__builtin_sve_svdiv_f64_m
__builtin_sve_svdiv_f64_x
__builtin_sve_svdiv_f64_z
__builtin_sve_svdiv_n_f16_m
__builtin_sve_svdiv_n_f16_x
__builtin_sve_svdiv_n_f16_z
__builtin_sve_svdiv_n_f32_m
__builtin_sve_svdiv_n_f32_x
__builtin_sve_svdiv_n_f32_z
__builtin_sve_svdiv_n_f64_m
__builtin_sve_svdiv_n_f64_x
__builtin_sve_svdiv_n_f64_z
__builtin_sve_svdiv_n_s32_m
__builtin_sve_svdiv_n_s32_x
__builtin_sve_svdiv_n_s32_z
__builtin_sve_svdiv_n_s64_m
__builtin_sve_svdiv_n_s64_x
__builtin_sve_svdiv_n_s64_z
__builtin_sve_svdiv_n_u32_m
__builtin_sve_svdiv_n_u32_x
__builtin_sve_svdiv_n_u32_z
__builtin_sve_svdiv_n_u64_m
__builtin_sve_svdiv_n_u64_x
__builtin_sve_svdiv_n_u64_z
__builtin_sve_svdiv_s32_m
__builtin_sve_svdiv_s32_x
__builtin_sve_svdiv_s32_z
__builtin_sve_svdiv_s64_m
__builtin_sve_svdiv_s64_x
__builtin_sve_svdiv_s64_z
__builtin_sve_svdiv_u32_m
__builtin_sve_svdiv_u32_x
__builtin_sve_svdiv_u32_z
__builtin_sve_svdiv_u64_m
__builtin_sve_svdiv_u64_x
__builtin_sve_svdiv_u64_z
__builtin_sve_svdivr_f16_m
__builtin_sve_svdivr_f16_x
__builtin_sve_svdivr_f16_z
__builtin_sve_svdivr_f32_m
__builtin_sve_svdivr_f32_x
__builtin_sve_svdivr_f32_z
__builtin_sve_svdivr_f64_m
__builtin_sve_svdivr_f64_x
__builtin_sve_svdivr_f64_z
__builtin_sve_svdivr_n_f16_m
__builtin_sve_svdivr_n_f16_x
__builtin_sve_svdivr_n_f16_z
__builtin_sve_svdivr_n_f32_m
__builtin_sve_svdivr_n_f32_x
__builtin_sve_svdivr_n_f32_z
__builtin_sve_svdivr_n_f64_m
__builtin_sve_svdivr_n_f64_x
__builtin_sve_svdivr_n_f64_z
__builtin_sve_svdivr_n_s32_m
__builtin_sve_svdivr_n_s32_x
__builtin_sve_svdivr_n_s32_z
__builtin_sve_svdivr_n_s64_m
__builtin_sve_svdivr_n_s64_x
__builtin_sve_svdivr_n_s64_z
__builtin_sve_svdivr_n_u32_m
__builtin_sve_svdivr_n_u32_x
__builtin_sve_svdivr_n_u32_z
__builtin_sve_svdivr_n_u64_m
__builtin_sve_svdivr_n_u64_x
__builtin_sve_svdivr_n_u64_z
__builtin_sve_svdivr_s32_m
__builtin_sve_svdivr_s32_x
__builtin_sve_svdivr_s32_z
__builtin_sve_svdivr_s64_m
__builtin_sve_svdivr_s64_x
__builtin_sve_svdivr_s64_z
__builtin_sve_svdivr_u32_m
__builtin_sve_svdivr_u32_x
__builtin_sve_svdivr_u32_z
__builtin_sve_svdivr_u64_m
__builtin_sve_svdivr_u64_x
__builtin_sve_svdivr_u64_z
__builtin_sve_svdot_lane_s32
__builtin_sve_svdot_lane_s64
__builtin_sve_svdot_lane_u32
q4Uiq4Uiq16Ucq16UcIUWi
__builtin_sve_svdot_lane_u64
q2UWiq2UWiq8Usq8UsIUWi
__builtin_sve_svdot_n_s32
q4iq4iq16ScSc
__builtin_sve_svdot_n_s64
q2Wiq2Wiq8ss
__builtin_sve_svdot_n_u32
q4Uiq4Uiq16UcUc
__builtin_sve_svdot_n_u64
q2UWiq2UWiq8UsUs
__builtin_sve_svdot_s32
q4iq4iq16Scq16Sc
__builtin_sve_svdot_s64
q2Wiq2Wiq8sq8s
__builtin_sve_svdot_u32
q4Uiq4Uiq16Ucq16Uc
__builtin_sve_svdot_u64
q2UWiq2UWiq8Usq8Us
__builtin_sve_svdup_lane_bf16
q8yq8yUs
__builtin_sve_svdup_lane_f16
q8hq8hUs
__builtin_sve_svdup_lane_f32
q4fq4fUi
__builtin_sve_svdup_lane_f64
q2dq2dUWi
__builtin_sve_svdup_lane_s16
q8sq8sUs
__builtin_sve_svdup_lane_s32
q4iq4iUi
__builtin_sve_svdup_lane_s64
q2Wiq2WiUWi
__builtin_sve_svdup_lane_s8
q16Scq16ScUc
__builtin_sve_svdup_lane_u16
__builtin_sve_svdup_lane_u32
__builtin_sve_svdup_lane_u64
__builtin_sve_svdup_lane_u8
__builtin_sve_svdup_n_b16
q16bb
__builtin_sve_svdup_n_b32
__builtin_sve_svdup_n_b64
__builtin_sve_svdup_n_b8
__builtin_sve_svdup_n_bf16
q8yy
__builtin_sve_svdup_n_bf16_m
q8yq8yq16by
__builtin_sve_svdup_n_bf16_x
q8yq16by
__builtin_sve_svdup_n_bf16_z
__builtin_sve_svdup_n_f16
q8hh
__builtin_sve_svdup_n_f16_m
q8hq8hq16bh
__builtin_sve_svdup_n_f16_x
q8hq16bh
__builtin_sve_svdup_n_f16_z
__builtin_sve_svdup_n_f32
q4ff
__builtin_sve_svdup_n_f32_m
q4fq4fq16bf
__builtin_sve_svdup_n_f32_x
q4fq16bf
__builtin_sve_svdup_n_f32_z
__builtin_sve_svdup_n_f64
q2dd
__builtin_sve_svdup_n_f64_m
q2dq2dq16bd
__builtin_sve_svdup_n_f64_x
q2dq16bd
__builtin_sve_svdup_n_f64_z
__builtin_sve_svdup_n_s16
q8ss
__builtin_sve_svdup_n_s16_m
q8sq8sq16bs
__builtin_sve_svdup_n_s16_x
q8sq16bs
__builtin_sve_svdup_n_s16_z
__builtin_sve_svdup_n_s32
q4ii
__builtin_sve_svdup_n_s32_m
q4iq4iq16bi
__builtin_sve_svdup_n_s32_x
q4iq16bi
__builtin_sve_svdup_n_s32_z
__builtin_sve_svdup_n_s64
q2WiWi
__builtin_sve_svdup_n_s64_m
q2Wiq2Wiq16bWi
__builtin_sve_svdup_n_s64_x
q2Wiq16bWi
__builtin_sve_svdup_n_s64_z
__builtin_sve_svdup_n_s8
q16ScSc
__builtin_sve_svdup_n_s8_m
q16Scq16Scq16bSc
__builtin_sve_svdup_n_s8_x
q16Scq16bSc
__builtin_sve_svdup_n_s8_z
__builtin_sve_svdup_n_u16
q8UsUs
__builtin_sve_svdup_n_u16_m
q8Usq8Usq16bUs
__builtin_sve_svdup_n_u16_x
q8Usq16bUs
__builtin_sve_svdup_n_u16_z
__builtin_sve_svdup_n_u32
q4UiUi
__builtin_sve_svdup_n_u32_m
q4Uiq4Uiq16bUi
__builtin_sve_svdup_n_u32_x
q4Uiq16bUi
__builtin_sve_svdup_n_u32_z
__builtin_sve_svdup_n_u64
q2UWiUWi
__builtin_sve_svdup_n_u64_m
q2UWiq2UWiq16bUWi
__builtin_sve_svdup_n_u64_x
q2UWiq16bUWi
__builtin_sve_svdup_n_u64_z
__builtin_sve_svdup_n_u8
q16UcUc
__builtin_sve_svdup_n_u8_m
q16Ucq16Ucq16bUc
__builtin_sve_svdup_n_u8_x
q16Ucq16bUc
__builtin_sve_svdup_n_u8_z
__builtin_sve_svdupq_lane_bf16
q8yq8yUWi
__builtin_sve_svdupq_lane_f16
q8hq8hUWi
__builtin_sve_svdupq_lane_f32
q4fq4fUWi
__builtin_sve_svdupq_lane_f64
__builtin_sve_svdupq_lane_s16
q8sq8sUWi
__builtin_sve_svdupq_lane_s32
q4iq4iUWi
__builtin_sve_svdupq_lane_s64
__builtin_sve_svdupq_lane_s8
q16Scq16ScUWi
__builtin_sve_svdupq_lane_u16
q8Usq8UsUWi
__builtin_sve_svdupq_lane_u32
q4Uiq4UiUWi
__builtin_sve_svdupq_lane_u64
__builtin_sve_svdupq_lane_u8
q16Ucq16UcUWi
__builtin_sve_svdupq_n_b16
q16bbbbbbbbb
__builtin_sve_svdupq_n_b32
q16bbbbb
__builtin_sve_svdupq_n_b64
q16bbb
__builtin_sve_svdupq_n_b8
q16bbbbbbbbbbbbbbbbb
__builtin_sve_svdupq_n_bf16
q8yyyyyyyyy
__builtin_sve_svdupq_n_f16
q8hhhhhhhhh
__builtin_sve_svdupq_n_f32
q4fffff
__builtin_sve_svdupq_n_f64
q2ddd
__builtin_sve_svdupq_n_s16
q8sssssssss
__builtin_sve_svdupq_n_s32
q4iiiii
__builtin_sve_svdupq_n_s64
q2WiWiWi
__builtin_sve_svdupq_n_s8
q16ScScScScScScScScScScScScScScScScSc
__builtin_sve_svdupq_n_u16
q8UsUsUsUsUsUsUsUsUs
__builtin_sve_svdupq_n_u32
q4UiUiUiUiUi
__builtin_sve_svdupq_n_u64
q2UWiUWiUWi
__builtin_sve_svdupq_n_u8
q16UcUcUcUcUcUcUcUcUcUcUcUcUcUcUcUcUc
__builtin_sve_sveor3_n_s16
__builtin_sve_sveor3_n_s32
__builtin_sve_sveor3_n_s64
__builtin_sve_sveor3_n_s8
__builtin_sve_sveor3_n_u16
__builtin_sve_sveor3_n_u32
__builtin_sve_sveor3_n_u64
__builtin_sve_sveor3_n_u8
__builtin_sve_sveor3_s16
__builtin_sve_sveor3_s32
__builtin_sve_sveor3_s64
__builtin_sve_sveor3_s8
__builtin_sve_sveor3_u16
__builtin_sve_sveor3_u32
__builtin_sve_sveor3_u64
__builtin_sve_sveor3_u8
__builtin_sve_sveor_b_z
__builtin_sve_sveor_n_s16_m
__builtin_sve_sveor_n_s16_x
__builtin_sve_sveor_n_s16_z
__builtin_sve_sveor_n_s32_m
__builtin_sve_sveor_n_s32_x
__builtin_sve_sveor_n_s32_z
__builtin_sve_sveor_n_s64_m
__builtin_sve_sveor_n_s64_x
__builtin_sve_sveor_n_s64_z
__builtin_sve_sveor_n_s8_m
__builtin_sve_sveor_n_s8_x
__builtin_sve_sveor_n_s8_z
__builtin_sve_sveor_n_u16_m
__builtin_sve_sveor_n_u16_x
__builtin_sve_sveor_n_u16_z
__builtin_sve_sveor_n_u32_m
__builtin_sve_sveor_n_u32_x
__builtin_sve_sveor_n_u32_z
__builtin_sve_sveor_n_u64_m
__builtin_sve_sveor_n_u64_x
__builtin_sve_sveor_n_u64_z
__builtin_sve_sveor_n_u8_m
__builtin_sve_sveor_n_u8_x
__builtin_sve_sveor_n_u8_z
__builtin_sve_sveor_s16_m
__builtin_sve_sveor_s16_x
__builtin_sve_sveor_s16_z
__builtin_sve_sveor_s32_m
__builtin_sve_sveor_s32_x
__builtin_sve_sveor_s32_z
__builtin_sve_sveor_s64_m
__builtin_sve_sveor_s64_x
__builtin_sve_sveor_s64_z
__builtin_sve_sveor_s8_m
__builtin_sve_sveor_s8_x
__builtin_sve_sveor_s8_z
__builtin_sve_sveor_u16_m
__builtin_sve_sveor_u16_x
__builtin_sve_sveor_u16_z
__builtin_sve_sveor_u32_m
__builtin_sve_sveor_u32_x
__builtin_sve_sveor_u32_z
__builtin_sve_sveor_u64_m
__builtin_sve_sveor_u64_x
__builtin_sve_sveor_u64_z
__builtin_sve_sveor_u8_m
__builtin_sve_sveor_u8_x
__builtin_sve_sveor_u8_z
__builtin_sve_sveorbt_n_s16
__builtin_sve_sveorbt_n_s32
__builtin_sve_sveorbt_n_s64
__builtin_sve_sveorbt_n_s8
__builtin_sve_sveorbt_n_u16
__builtin_sve_sveorbt_n_u32
__builtin_sve_sveorbt_n_u64
__builtin_sve_sveorbt_n_u8
__builtin_sve_sveorbt_s16
__builtin_sve_sveorbt_s32
__builtin_sve_sveorbt_s64
__builtin_sve_sveorbt_s8
__builtin_sve_sveorbt_u16
__builtin_sve_sveorbt_u32
__builtin_sve_sveorbt_u64
__builtin_sve_sveorbt_u8
__builtin_sve_sveortb_n_s16
__builtin_sve_sveortb_n_s32
__builtin_sve_sveortb_n_s64
__builtin_sve_sveortb_n_s8
__builtin_sve_sveortb_n_u16
__builtin_sve_sveortb_n_u32
__builtin_sve_sveortb_n_u64
__builtin_sve_sveortb_n_u8
__builtin_sve_sveortb_s16
__builtin_sve_sveortb_s32
__builtin_sve_sveortb_s64
__builtin_sve_sveortb_s8
__builtin_sve_sveortb_u16
__builtin_sve_sveortb_u32
__builtin_sve_sveortb_u64
__builtin_sve_sveortb_u8
__builtin_sve_sveorv_s16
__builtin_sve_sveorv_s32
__builtin_sve_sveorv_s64
__builtin_sve_sveorv_s8
__builtin_sve_sveorv_u16
__builtin_sve_sveorv_u32
__builtin_sve_sveorv_u64
__builtin_sve_sveorv_u8
__builtin_sve_svexpa_f16
q8hq8Us
__builtin_sve_svexpa_f32
q4fq4Ui
__builtin_sve_svexpa_f64
q2dq2UWi
__builtin_sve_svext_bf16
q8yq8yq8yIUWi
__builtin_sve_svext_f16
q8hq8hq8hIUWi
__builtin_sve_svext_f32
q4fq4fq4fIUWi
__builtin_sve_svext_f64
q2dq2dq2dIUWi
__builtin_sve_svext_s16
__builtin_sve_svext_s32
__builtin_sve_svext_s64
__builtin_sve_svext_s8
__builtin_sve_svext_u16
__builtin_sve_svext_u32
__builtin_sve_svext_u64
__builtin_sve_svext_u8
__builtin_sve_svextb_s16_m
__builtin_sve_svextb_s16_x
__builtin_sve_svextb_s16_z
__builtin_sve_svextb_s32_m
__builtin_sve_svextb_s32_x
__builtin_sve_svextb_s32_z
__builtin_sve_svextb_s64_m
__builtin_sve_svextb_s64_x
__builtin_sve_svextb_s64_z
__builtin_sve_svextb_u16_m
__builtin_sve_svextb_u16_x
__builtin_sve_svextb_u16_z
__builtin_sve_svextb_u32_m
__builtin_sve_svextb_u32_x
__builtin_sve_svextb_u32_z
__builtin_sve_svextb_u64_m
__builtin_sve_svextb_u64_x
__builtin_sve_svextb_u64_z
__builtin_sve_svexth_s32_m
__builtin_sve_svexth_s32_x
__builtin_sve_svexth_s32_z
__builtin_sve_svexth_s64_m
__builtin_sve_svexth_s64_x
__builtin_sve_svexth_s64_z
__builtin_sve_svexth_u32_m
__builtin_sve_svexth_u32_x
__builtin_sve_svexth_u32_z
__builtin_sve_svexth_u64_m
__builtin_sve_svexth_u64_x
__builtin_sve_svexth_u64_z
__builtin_sve_svextw_s64_m
__builtin_sve_svextw_s64_x
__builtin_sve_svextw_s64_z
__builtin_sve_svextw_u64_m
__builtin_sve_svextw_u64_x
__builtin_sve_svextw_u64_z
__builtin_sve_svget2_bf16
q8yq16yIUWi
__builtin_sve_svget2_f16
q8hq16hIUWi
__builtin_sve_svget2_f32
q4fq8fIUWi
__builtin_sve_svget2_f64
q2dq4dIUWi
__builtin_sve_svget2_s16
q8sq16sIUWi
__builtin_sve_svget2_s32
q4iq8iIUWi
__builtin_sve_svget2_s64
q2Wiq4WiIUWi
__builtin_sve_svget2_s8
q16Scq32ScIUWi
__builtin_sve_svget2_u16
q8Usq16UsIUWi
__builtin_sve_svget2_u32
q4Uiq8UiIUWi
__builtin_sve_svget2_u64
q2UWiq4UWiIUWi
__builtin_sve_svget2_u8
q16Ucq32UcIUWi
__builtin_sve_svget3_bf16
q8yq24yIUWi
__builtin_sve_svget3_f16
q8hq24hIUWi
__builtin_sve_svget3_f32
q4fq12fIUWi
__builtin_sve_svget3_f64
q2dq6dIUWi
__builtin_sve_svget3_s16
q8sq24sIUWi
__builtin_sve_svget3_s32
q4iq12iIUWi
__builtin_sve_svget3_s64
q2Wiq6WiIUWi
__builtin_sve_svget3_s8
q16Scq48ScIUWi
__builtin_sve_svget3_u16
q8Usq24UsIUWi
__builtin_sve_svget3_u32
q4Uiq12UiIUWi
__builtin_sve_svget3_u64
q2UWiq6UWiIUWi
__builtin_sve_svget3_u8
q16Ucq48UcIUWi
__builtin_sve_svget4_bf16
q8yq32yIUWi
__builtin_sve_svget4_f16
q8hq32hIUWi
__builtin_sve_svget4_f32
q4fq16fIUWi
__builtin_sve_svget4_f64
q2dq8dIUWi
__builtin_sve_svget4_s16
q8sq32sIUWi
__builtin_sve_svget4_s32
q4iq16iIUWi
__builtin_sve_svget4_s64
q2Wiq8WiIUWi
__builtin_sve_svget4_s8
q16Scq64ScIUWi
__builtin_sve_svget4_u16
q8Usq32UsIUWi
__builtin_sve_svget4_u32
q4Uiq16UiIUWi
__builtin_sve_svget4_u64
q2UWiq8UWiIUWi
__builtin_sve_svget4_u8
q16Ucq64UcIUWi
__builtin_sve_svhadd_n_s16_m
__builtin_sve_svhadd_n_s16_x
__builtin_sve_svhadd_n_s16_z
__builtin_sve_svhadd_n_s32_m
__builtin_sve_svhadd_n_s32_x
__builtin_sve_svhadd_n_s32_z
__builtin_sve_svhadd_n_s64_m
__builtin_sve_svhadd_n_s64_x
__builtin_sve_svhadd_n_s64_z
__builtin_sve_svhadd_n_s8_m
__builtin_sve_svhadd_n_s8_x
__builtin_sve_svhadd_n_s8_z
__builtin_sve_svhadd_n_u16_m
__builtin_sve_svhadd_n_u16_x
__builtin_sve_svhadd_n_u16_z
__builtin_sve_svhadd_n_u32_m
__builtin_sve_svhadd_n_u32_x
__builtin_sve_svhadd_n_u32_z
__builtin_sve_svhadd_n_u64_m
__builtin_sve_svhadd_n_u64_x
__builtin_sve_svhadd_n_u64_z
__builtin_sve_svhadd_n_u8_m
__builtin_sve_svhadd_n_u8_x
__builtin_sve_svhadd_n_u8_z
__builtin_sve_svhadd_s16_m
__builtin_sve_svhadd_s16_x
__builtin_sve_svhadd_s16_z
__builtin_sve_svhadd_s32_m
__builtin_sve_svhadd_s32_x
__builtin_sve_svhadd_s32_z
__builtin_sve_svhadd_s64_m
__builtin_sve_svhadd_s64_x
__builtin_sve_svhadd_s64_z
__builtin_sve_svhadd_s8_m
__builtin_sve_svhadd_s8_x
__builtin_sve_svhadd_s8_z
__builtin_sve_svhadd_u16_m
__builtin_sve_svhadd_u16_x
__builtin_sve_svhadd_u16_z
__builtin_sve_svhadd_u32_m
__builtin_sve_svhadd_u32_x
__builtin_sve_svhadd_u32_z
__builtin_sve_svhadd_u64_m
__builtin_sve_svhadd_u64_x
__builtin_sve_svhadd_u64_z
__builtin_sve_svhadd_u8_m
__builtin_sve_svhadd_u8_x
__builtin_sve_svhadd_u8_z
__builtin_sve_svhistcnt_s32_z
q4Uiq16bq4iq4i
__builtin_sve_svhistcnt_s64_z
q2UWiq16bq2Wiq2Wi
__builtin_sve_svhistcnt_u32_z
__builtin_sve_svhistcnt_u64_z
__builtin_sve_svhistseg_s8
q16Ucq16Scq16Sc
__builtin_sve_svhistseg_u8
__builtin_sve_svhsub_n_s16_m
__builtin_sve_svhsub_n_s16_x
__builtin_sve_svhsub_n_s16_z
__builtin_sve_svhsub_n_s32_m
__builtin_sve_svhsub_n_s32_x
__builtin_sve_svhsub_n_s32_z
__builtin_sve_svhsub_n_s64_m
__builtin_sve_svhsub_n_s64_x
__builtin_sve_svhsub_n_s64_z
__builtin_sve_svhsub_n_s8_m
__builtin_sve_svhsub_n_s8_x
__builtin_sve_svhsub_n_s8_z
__builtin_sve_svhsub_n_u16_m
__builtin_sve_svhsub_n_u16_x
__builtin_sve_svhsub_n_u16_z
__builtin_sve_svhsub_n_u32_m
__builtin_sve_svhsub_n_u32_x
__builtin_sve_svhsub_n_u32_z
__builtin_sve_svhsub_n_u64_m
__builtin_sve_svhsub_n_u64_x
__builtin_sve_svhsub_n_u64_z
__builtin_sve_svhsub_n_u8_m
__builtin_sve_svhsub_n_u8_x
__builtin_sve_svhsub_n_u8_z
__builtin_sve_svhsub_s16_m
__builtin_sve_svhsub_s16_x
__builtin_sve_svhsub_s16_z
__builtin_sve_svhsub_s32_m
__builtin_sve_svhsub_s32_x
__builtin_sve_svhsub_s32_z
__builtin_sve_svhsub_s64_m
__builtin_sve_svhsub_s64_x
__builtin_sve_svhsub_s64_z
__builtin_sve_svhsub_s8_m
__builtin_sve_svhsub_s8_x
__builtin_sve_svhsub_s8_z
__builtin_sve_svhsub_u16_m
__builtin_sve_svhsub_u16_x
__builtin_sve_svhsub_u16_z
__builtin_sve_svhsub_u32_m
__builtin_sve_svhsub_u32_x
__builtin_sve_svhsub_u32_z
__builtin_sve_svhsub_u64_m
__builtin_sve_svhsub_u64_x
__builtin_sve_svhsub_u64_z
__builtin_sve_svhsub_u8_m
__builtin_sve_svhsub_u8_x
__builtin_sve_svhsub_u8_z
__builtin_sve_svhsubr_n_s16_m
__builtin_sve_svhsubr_n_s16_x
__builtin_sve_svhsubr_n_s16_z
__builtin_sve_svhsubr_n_s32_m
__builtin_sve_svhsubr_n_s32_x
__builtin_sve_svhsubr_n_s32_z
__builtin_sve_svhsubr_n_s64_m
__builtin_sve_svhsubr_n_s64_x
__builtin_sve_svhsubr_n_s64_z
__builtin_sve_svhsubr_n_s8_m
__builtin_sve_svhsubr_n_s8_x
__builtin_sve_svhsubr_n_s8_z
__builtin_sve_svhsubr_n_u16_m
__builtin_sve_svhsubr_n_u16_x
__builtin_sve_svhsubr_n_u16_z
__builtin_sve_svhsubr_n_u32_m
__builtin_sve_svhsubr_n_u32_x
__builtin_sve_svhsubr_n_u32_z
__builtin_sve_svhsubr_n_u64_m
__builtin_sve_svhsubr_n_u64_x
__builtin_sve_svhsubr_n_u64_z
__builtin_sve_svhsubr_n_u8_m
__builtin_sve_svhsubr_n_u8_x
__builtin_sve_svhsubr_n_u8_z
__builtin_sve_svhsubr_s16_m
__builtin_sve_svhsubr_s16_x
__builtin_sve_svhsubr_s16_z
__builtin_sve_svhsubr_s32_m
__builtin_sve_svhsubr_s32_x
__builtin_sve_svhsubr_s32_z
__builtin_sve_svhsubr_s64_m
__builtin_sve_svhsubr_s64_x
__builtin_sve_svhsubr_s64_z
__builtin_sve_svhsubr_s8_m
__builtin_sve_svhsubr_s8_x
__builtin_sve_svhsubr_s8_z
__builtin_sve_svhsubr_u16_m
__builtin_sve_svhsubr_u16_x
__builtin_sve_svhsubr_u16_z
__builtin_sve_svhsubr_u32_m
__builtin_sve_svhsubr_u32_x
__builtin_sve_svhsubr_u32_z
__builtin_sve_svhsubr_u64_m
__builtin_sve_svhsubr_u64_x
__builtin_sve_svhsubr_u64_z
__builtin_sve_svhsubr_u8_m
__builtin_sve_svhsubr_u8_x
__builtin_sve_svhsubr_u8_z
__builtin_sve_svindex_s16
q8sss
__builtin_sve_svindex_s32
q4iii
__builtin_sve_svindex_s64
__builtin_sve_svindex_s8
q16ScScSc
__builtin_sve_svindex_u16
q8UsUsUs
__builtin_sve_svindex_u32
q4UiUiUi
__builtin_sve_svindex_u64
__builtin_sve_svindex_u8
q16UcUcUc
__builtin_sve_svinsr_n_bf16
q8yq8yy
__builtin_sve_svinsr_n_f16
q8hq8hh
__builtin_sve_svinsr_n_f32
q4fq4ff
__builtin_sve_svinsr_n_f64
q2dq2dd
__builtin_sve_svinsr_n_s16
q8sq8ss
__builtin_sve_svinsr_n_s32
q4iq4ii
__builtin_sve_svinsr_n_s64
q2Wiq2WiWi
__builtin_sve_svinsr_n_s8
q16Scq16ScSc
__builtin_sve_svinsr_n_u16
__builtin_sve_svinsr_n_u32
__builtin_sve_svinsr_n_u64
__builtin_sve_svinsr_n_u8
__builtin_sve_svlasta_bf16
yq16bq8y
__builtin_sve_svlasta_f16
__builtin_sve_svlasta_f32
__builtin_sve_svlasta_f64
__builtin_sve_svlasta_s16
__builtin_sve_svlasta_s32
__builtin_sve_svlasta_s64
__builtin_sve_svlasta_s8
__builtin_sve_svlasta_u16
__builtin_sve_svlasta_u32
__builtin_sve_svlasta_u64
__builtin_sve_svlasta_u8
__builtin_sve_svlastb_bf16
__builtin_sve_svlastb_f16
__builtin_sve_svlastb_f32
__builtin_sve_svlastb_f64
__builtin_sve_svlastb_s16
__builtin_sve_svlastb_s32
__builtin_sve_svlastb_s64
__builtin_sve_svlastb_s8
__builtin_sve_svlastb_u16
__builtin_sve_svlastb_u32
__builtin_sve_svlastb_u64
__builtin_sve_svlastb_u8
__builtin_sve_svld1_bf16
q8yq16byC*
__builtin_sve_svld1_f16
q8hq16bhC*
__builtin_sve_svld1_f32
q4fq16bfC*
__builtin_sve_svld1_f64
q2dq16bdC*
__builtin_sve_svld1_gather_s32index_f32
q4fq16bfC*q4i
__builtin_sve_svld1_gather_s32index_s32
q4iq16bSiC*q4i
__builtin_sve_svld1_gather_s32index_u32
q4Uiq16bUiC*q4i
__builtin_sve_svld1_gather_s32offset_f32
__builtin_sve_svld1_gather_s32offset_s32
__builtin_sve_svld1_gather_s32offset_u32
__builtin_sve_svld1_gather_s64index_f64
q2dq16bdC*q2Wi
__builtin_sve_svld1_gather_s64index_s64
q2Wiq16bSWiC*q2Wi
__builtin_sve_svld1_gather_s64index_u64
q2UWiq16bUWiC*q2Wi
__builtin_sve_svld1_gather_s64offset_f64
__builtin_sve_svld1_gather_s64offset_s64
__builtin_sve_svld1_gather_s64offset_u64
__builtin_sve_svld1_gather_u32base_f32
__builtin_sve_svld1_gather_u32base_index_f32
q4fq16bq4UiWi
__builtin_sve_svld1_gather_u32base_index_s32
q4iq16bq4UiWi
__builtin_sve_svld1_gather_u32base_index_u32
q4Uiq16bq4UiWi
__builtin_sve_svld1_gather_u32base_offset_f32
__builtin_sve_svld1_gather_u32base_offset_s32
__builtin_sve_svld1_gather_u32base_offset_u32
__builtin_sve_svld1_gather_u32base_s32
q4iq16bq4Ui
__builtin_sve_svld1_gather_u32base_u32
__builtin_sve_svld1_gather_u32index_f32
q4fq16bfC*q4Ui
__builtin_sve_svld1_gather_u32index_s32
q4iq16bSiC*q4Ui
__builtin_sve_svld1_gather_u32index_u32
q4Uiq16bUiC*q4Ui
__builtin_sve_svld1_gather_u32offset_f32
__builtin_sve_svld1_gather_u32offset_s32
__builtin_sve_svld1_gather_u32offset_u32
__builtin_sve_svld1_gather_u64base_f64
__builtin_sve_svld1_gather_u64base_index_f64
q2dq16bq2UWiWi
__builtin_sve_svld1_gather_u64base_index_s64
q2Wiq16bq2UWiWi
__builtin_sve_svld1_gather_u64base_index_u64
q2UWiq16bq2UWiWi
__builtin_sve_svld1_gather_u64base_offset_f64
__builtin_sve_svld1_gather_u64base_offset_s64
__builtin_sve_svld1_gather_u64base_offset_u64
__builtin_sve_svld1_gather_u64base_s64
q2Wiq16bq2UWi
__builtin_sve_svld1_gather_u64base_u64
__builtin_sve_svld1_gather_u64index_f64
q2dq16bdC*q2UWi
__builtin_sve_svld1_gather_u64index_s64
q2Wiq16bSWiC*q2UWi
__builtin_sve_svld1_gather_u64index_u64
q2UWiq16bUWiC*q2UWi
__builtin_sve_svld1_gather_u64offset_f64
__builtin_sve_svld1_gather_u64offset_s64
__builtin_sve_svld1_gather_u64offset_u64
__builtin_sve_svld1_s16
q8sq16bSsC*
__builtin_sve_svld1_s32
q4iq16bSiC*
__builtin_sve_svld1_s64
q2Wiq16bSWiC*
__builtin_sve_svld1_s8
q16Scq16bScC*
__builtin_sve_svld1_u16
q8Usq16bUsC*
__builtin_sve_svld1_u32
q4Uiq16bUiC*
__builtin_sve_svld1_u64
q2UWiq16bUWiC*
__builtin_sve_svld1_u8
q16Ucq16bUcC*
__builtin_sve_svld1_vnum_bf16
q8yq16byC*Wi
__builtin_sve_svld1_vnum_f16
q8hq16bhC*Wi
__builtin_sve_svld1_vnum_f32
q4fq16bfC*Wi
__builtin_sve_svld1_vnum_f64
q2dq16bdC*Wi
__builtin_sve_svld1_vnum_s16
q8sq16bSsC*Wi
__builtin_sve_svld1_vnum_s32
q4iq16bSiC*Wi
__builtin_sve_svld1_vnum_s64
q2Wiq16bSWiC*Wi
__builtin_sve_svld1_vnum_s8
q16Scq16bScC*Wi
__builtin_sve_svld1_vnum_u16
q8Usq16bUsC*Wi
__builtin_sve_svld1_vnum_u32
q4Uiq16bUiC*Wi
__builtin_sve_svld1_vnum_u64
q2UWiq16bUWiC*Wi
__builtin_sve_svld1_vnum_u8
q16Ucq16bUcC*Wi
__builtin_sve_svld1ro_bf16
__builtin_sve_svld1ro_f16
__builtin_sve_svld1ro_f32
__builtin_sve_svld1ro_f64
__builtin_sve_svld1ro_s16
__builtin_sve_svld1ro_s32
__builtin_sve_svld1ro_s64
__builtin_sve_svld1ro_s8
__builtin_sve_svld1ro_u16
__builtin_sve_svld1ro_u32
__builtin_sve_svld1ro_u64
__builtin_sve_svld1ro_u8
__builtin_sve_svld1rq_bf16
__builtin_sve_svld1rq_f16
__builtin_sve_svld1rq_f32
__builtin_sve_svld1rq_f64
__builtin_sve_svld1rq_s16
__builtin_sve_svld1rq_s32
__builtin_sve_svld1rq_s64
__builtin_sve_svld1rq_s8
__builtin_sve_svld1rq_u16
__builtin_sve_svld1rq_u32
__builtin_sve_svld1rq_u64
__builtin_sve_svld1rq_u8
__builtin_sve_svld1sb_gather_s32offset_s32
q4iq16bScC*q4i
__builtin_sve_svld1sb_gather_s32offset_u32
q4Uiq16bScC*q4i
__builtin_sve_svld1sb_gather_s64offset_s64
q2Wiq16bScC*q2Wi
__builtin_sve_svld1sb_gather_s64offset_u64
q2UWiq16bScC*q2Wi
__builtin_sve_svld1sb_gather_u32base_offset_s32
__builtin_sve_svld1sb_gather_u32base_offset_u32
__builtin_sve_svld1sb_gather_u32base_s32
__builtin_sve_svld1sb_gather_u32base_u32
__builtin_sve_svld1sb_gather_u32offset_s32
q4iq16bScC*q4Ui
__builtin_sve_svld1sb_gather_u32offset_u32
q4Uiq16bScC*q4Ui
__builtin_sve_svld1sb_gather_u64base_offset_s64
__builtin_sve_svld1sb_gather_u64base_offset_u64
__builtin_sve_svld1sb_gather_u64base_s64
__builtin_sve_svld1sb_gather_u64base_u64
__builtin_sve_svld1sb_gather_u64offset_s64
q2Wiq16bScC*q2UWi
__builtin_sve_svld1sb_gather_u64offset_u64
q2UWiq16bScC*q2UWi
__builtin_sve_svld1sb_s16
q8sq16bScC*
__builtin_sve_svld1sb_s32
q4iq16bScC*
__builtin_sve_svld1sb_s64
q2Wiq16bScC*
__builtin_sve_svld1sb_u16
q8Usq16bScC*
__builtin_sve_svld1sb_u32
q4Uiq16bScC*
__builtin_sve_svld1sb_u64
q2UWiq16bScC*
__builtin_sve_svld1sb_vnum_s16
q8sq16bScC*Wi
__builtin_sve_svld1sb_vnum_s32
q4iq16bScC*Wi
__builtin_sve_svld1sb_vnum_s64
q2Wiq16bScC*Wi
__builtin_sve_svld1sb_vnum_u16
q8Usq16bScC*Wi
__builtin_sve_svld1sb_vnum_u32
q4Uiq16bScC*Wi
__builtin_sve_svld1sb_vnum_u64
q2UWiq16bScC*Wi
__builtin_sve_svld1sh_gather_s32index_s32
q4iq16bSsC*q4i
__builtin_sve_svld1sh_gather_s32index_u32
q4Uiq16bSsC*q4i
__builtin_sve_svld1sh_gather_s32offset_s32
__builtin_sve_svld1sh_gather_s32offset_u32
__builtin_sve_svld1sh_gather_s64index_s64
q2Wiq16bSsC*q2Wi
__builtin_sve_svld1sh_gather_s64index_u64
q2UWiq16bSsC*q2Wi
__builtin_sve_svld1sh_gather_s64offset_s64
__builtin_sve_svld1sh_gather_s64offset_u64
__builtin_sve_svld1sh_gather_u32base_index_s32
__builtin_sve_svld1sh_gather_u32base_index_u32
__builtin_sve_svld1sh_gather_u32base_offset_s32
__builtin_sve_svld1sh_gather_u32base_offset_u32
__builtin_sve_svld1sh_gather_u32base_s32
__builtin_sve_svld1sh_gather_u32base_u32
__builtin_sve_svld1sh_gather_u32index_s32
q4iq16bSsC*q4Ui
__builtin_sve_svld1sh_gather_u32index_u32
q4Uiq16bSsC*q4Ui
__builtin_sve_svld1sh_gather_u32offset_s32
__builtin_sve_svld1sh_gather_u32offset_u32
__builtin_sve_svld1sh_gather_u64base_index_s64
__builtin_sve_svld1sh_gather_u64base_index_u64
__builtin_sve_svld1sh_gather_u64base_offset_s64
__builtin_sve_svld1sh_gather_u64base_offset_u64
__builtin_sve_svld1sh_gather_u64base_s64
__builtin_sve_svld1sh_gather_u64base_u64
__builtin_sve_svld1sh_gather_u64index_s64
q2Wiq16bSsC*q2UWi
__builtin_sve_svld1sh_gather_u64index_u64
q2UWiq16bSsC*q2UWi
__builtin_sve_svld1sh_gather_u64offset_s64
__builtin_sve_svld1sh_gather_u64offset_u64
__builtin_sve_svld1sh_s32
q4iq16bSsC*
__builtin_sve_svld1sh_s64
q2Wiq16bSsC*
__builtin_sve_svld1sh_u32
q4Uiq16bSsC*
__builtin_sve_svld1sh_u64
q2UWiq16bSsC*
__builtin_sve_svld1sh_vnum_s32
q4iq16bSsC*Wi
__builtin_sve_svld1sh_vnum_s64
q2Wiq16bSsC*Wi
__builtin_sve_svld1sh_vnum_u32
q4Uiq16bSsC*Wi
__builtin_sve_svld1sh_vnum_u64
q2UWiq16bSsC*Wi
__builtin_sve_svld1sw_gather_s64index_s64
q2Wiq16bSiC*q2Wi
__builtin_sve_svld1sw_gather_s64index_u64
q2UWiq16bSiC*q2Wi
__builtin_sve_svld1sw_gather_s64offset_s64
__builtin_sve_svld1sw_gather_s64offset_u64
__builtin_sve_svld1sw_gather_u64base_index_s64
__builtin_sve_svld1sw_gather_u64base_index_u64
__builtin_sve_svld1sw_gather_u64base_offset_s64
__builtin_sve_svld1sw_gather_u64base_offset_u64
__builtin_sve_svld1sw_gather_u64base_s64
__builtin_sve_svld1sw_gather_u64base_u64
__builtin_sve_svld1sw_gather_u64index_s64
q2Wiq16bSiC*q2UWi
__builtin_sve_svld1sw_gather_u64index_u64
q2UWiq16bSiC*q2UWi
__builtin_sve_svld1sw_gather_u64offset_s64
__builtin_sve_svld1sw_gather_u64offset_u64
__builtin_sve_svld1sw_s64
q2Wiq16bSiC*
__builtin_sve_svld1sw_u64
q2UWiq16bSiC*
__builtin_sve_svld1sw_vnum_s64
q2Wiq16bSiC*Wi
__builtin_sve_svld1sw_vnum_u64
q2UWiq16bSiC*Wi
__builtin_sve_svld1ub_gather_s32offset_s32
q4iq16bUcC*q4i
__builtin_sve_svld1ub_gather_s32offset_u32
q4Uiq16bUcC*q4i
__builtin_sve_svld1ub_gather_s64offset_s64
q2Wiq16bUcC*q2Wi
__builtin_sve_svld1ub_gather_s64offset_u64
q2UWiq16bUcC*q2Wi
__builtin_sve_svld1ub_gather_u32base_offset_s32
__builtin_sve_svld1ub_gather_u32base_offset_u32
__builtin_sve_svld1ub_gather_u32base_s32
__builtin_sve_svld1ub_gather_u32base_u32
__builtin_sve_svld1ub_gather_u32offset_s32
q4iq16bUcC*q4Ui
__builtin_sve_svld1ub_gather_u32offset_u32
q4Uiq16bUcC*q4Ui
__builtin_sve_svld1ub_gather_u64base_offset_s64
__builtin_sve_svld1ub_gather_u64base_offset_u64
__builtin_sve_svld1ub_gather_u64base_s64
__builtin_sve_svld1ub_gather_u64base_u64
__builtin_sve_svld1ub_gather_u64offset_s64
q2Wiq16bUcC*q2UWi
__builtin_sve_svld1ub_gather_u64offset_u64
q2UWiq16bUcC*q2UWi
__builtin_sve_svld1ub_s16
q8sq16bUcC*
__builtin_sve_svld1ub_s32
q4iq16bUcC*
__builtin_sve_svld1ub_s64
q2Wiq16bUcC*
__builtin_sve_svld1ub_u16
q8Usq16bUcC*
__builtin_sve_svld1ub_u32
q4Uiq16bUcC*
__builtin_sve_svld1ub_u64
q2UWiq16bUcC*
__builtin_sve_svld1ub_vnum_s16
q8sq16bUcC*Wi
__builtin_sve_svld1ub_vnum_s32
q4iq16bUcC*Wi
__builtin_sve_svld1ub_vnum_s64
q2Wiq16bUcC*Wi
__builtin_sve_svld1ub_vnum_u16
q8Usq16bUcC*Wi
__builtin_sve_svld1ub_vnum_u32
q4Uiq16bUcC*Wi
__builtin_sve_svld1ub_vnum_u64
q2UWiq16bUcC*Wi
__builtin_sve_svld1uh_gather_s32index_s32
q4iq16bUsC*q4i
__builtin_sve_svld1uh_gather_s32index_u32
q4Uiq16bUsC*q4i
__builtin_sve_svld1uh_gather_s32offset_s32
__builtin_sve_svld1uh_gather_s32offset_u32
__builtin_sve_svld1uh_gather_s64index_s64
q2Wiq16bUsC*q2Wi
__builtin_sve_svld1uh_gather_s64index_u64
q2UWiq16bUsC*q2Wi
__builtin_sve_svld1uh_gather_s64offset_s64
__builtin_sve_svld1uh_gather_s64offset_u64
__builtin_sve_svld1uh_gather_u32base_index_s32
__builtin_sve_svld1uh_gather_u32base_index_u32
__builtin_sve_svld1uh_gather_u32base_offset_s32
__builtin_sve_svld1uh_gather_u32base_offset_u32
__builtin_sve_svld1uh_gather_u32base_s32
__builtin_sve_svld1uh_gather_u32base_u32
__builtin_sve_svld1uh_gather_u32index_s32
q4iq16bUsC*q4Ui
__builtin_sve_svld1uh_gather_u32index_u32
q4Uiq16bUsC*q4Ui
__builtin_sve_svld1uh_gather_u32offset_s32
__builtin_sve_svld1uh_gather_u32offset_u32
__builtin_sve_svld1uh_gather_u64base_index_s64
__builtin_sve_svld1uh_gather_u64base_index_u64
__builtin_sve_svld1uh_gather_u64base_offset_s64
__builtin_sve_svld1uh_gather_u64base_offset_u64
__builtin_sve_svld1uh_gather_u64base_s64
__builtin_sve_svld1uh_gather_u64base_u64
__builtin_sve_svld1uh_gather_u64index_s64
q2Wiq16bUsC*q2UWi
__builtin_sve_svld1uh_gather_u64index_u64
q2UWiq16bUsC*q2UWi
__builtin_sve_svld1uh_gather_u64offset_s64
__builtin_sve_svld1uh_gather_u64offset_u64
__builtin_sve_svld1uh_s32
q4iq16bUsC*
__builtin_sve_svld1uh_s64
q2Wiq16bUsC*
__builtin_sve_svld1uh_u32
q4Uiq16bUsC*
__builtin_sve_svld1uh_u64
q2UWiq16bUsC*
__builtin_sve_svld1uh_vnum_s32
q4iq16bUsC*Wi
__builtin_sve_svld1uh_vnum_s64
q2Wiq16bUsC*Wi
__builtin_sve_svld1uh_vnum_u32
q4Uiq16bUsC*Wi
__builtin_sve_svld1uh_vnum_u64
q2UWiq16bUsC*Wi
__builtin_sve_svld1uw_gather_s64index_s64
q2Wiq16bUiC*q2Wi
__builtin_sve_svld1uw_gather_s64index_u64
q2UWiq16bUiC*q2Wi
__builtin_sve_svld1uw_gather_s64offset_s64
__builtin_sve_svld1uw_gather_s64offset_u64
__builtin_sve_svld1uw_gather_u64base_index_s64
__builtin_sve_svld1uw_gather_u64base_index_u64
__builtin_sve_svld1uw_gather_u64base_offset_s64
__builtin_sve_svld1uw_gather_u64base_offset_u64
__builtin_sve_svld1uw_gather_u64base_s64
__builtin_sve_svld1uw_gather_u64base_u64
__builtin_sve_svld1uw_gather_u64index_s64
q2Wiq16bUiC*q2UWi
__builtin_sve_svld1uw_gather_u64index_u64
q2UWiq16bUiC*q2UWi
__builtin_sve_svld1uw_gather_u64offset_s64
__builtin_sve_svld1uw_gather_u64offset_u64
__builtin_sve_svld1uw_s64
q2Wiq16bUiC*
__builtin_sve_svld1uw_u64
q2UWiq16bUiC*
__builtin_sve_svld1uw_vnum_s64
q2Wiq16bUiC*Wi
__builtin_sve_svld1uw_vnum_u64
q2UWiq16bUiC*Wi
__builtin_sve_svld2_bf16
q16yq16byC*
__builtin_sve_svld2_f16
q16hq16bhC*
__builtin_sve_svld2_f32
q8fq16bfC*
__builtin_sve_svld2_f64
q4dq16bdC*
__builtin_sve_svld2_s16
q16sq16bSsC*
__builtin_sve_svld2_s32
q8iq16bSiC*
__builtin_sve_svld2_s64
q4Wiq16bSWiC*
__builtin_sve_svld2_s8
q32Scq16bScC*
__builtin_sve_svld2_u16
q16Usq16bUsC*
__builtin_sve_svld2_u32
q8Uiq16bUiC*
__builtin_sve_svld2_u64
q4UWiq16bUWiC*
__builtin_sve_svld2_u8
q32Ucq16bUcC*
__builtin_sve_svld2_vnum_bf16
q16yq16byC*Wi
__builtin_sve_svld2_vnum_f16
q16hq16bhC*Wi
__builtin_sve_svld2_vnum_f32
q8fq16bfC*Wi
__builtin_sve_svld2_vnum_f64
q4dq16bdC*Wi
__builtin_sve_svld2_vnum_s16
q16sq16bSsC*Wi
__builtin_sve_svld2_vnum_s32
q8iq16bSiC*Wi
__builtin_sve_svld2_vnum_s64
q4Wiq16bSWiC*Wi
__builtin_sve_svld2_vnum_s8
q32Scq16bScC*Wi
__builtin_sve_svld2_vnum_u16
q16Usq16bUsC*Wi
__builtin_sve_svld2_vnum_u32
q8Uiq16bUiC*Wi
__builtin_sve_svld2_vnum_u64
q4UWiq16bUWiC*Wi
__builtin_sve_svld2_vnum_u8
q32Ucq16bUcC*Wi
__builtin_sve_svld3_bf16
q24yq16byC*
__builtin_sve_svld3_f16
q24hq16bhC*
__builtin_sve_svld3_f32
q12fq16bfC*
__builtin_sve_svld3_f64
q6dq16bdC*
__builtin_sve_svld3_s16
q24sq16bSsC*
__builtin_sve_svld3_s32
q12iq16bSiC*
__builtin_sve_svld3_s64
q6Wiq16bSWiC*
__builtin_sve_svld3_s8
q48Scq16bScC*
__builtin_sve_svld3_u16
q24Usq16bUsC*
__builtin_sve_svld3_u32
q12Uiq16bUiC*
__builtin_sve_svld3_u64
q6UWiq16bUWiC*
__builtin_sve_svld3_u8
q48Ucq16bUcC*
__builtin_sve_svld3_vnum_bf16
q24yq16byC*Wi
__builtin_sve_svld3_vnum_f16
q24hq16bhC*Wi
__builtin_sve_svld3_vnum_f32
q12fq16bfC*Wi
__builtin_sve_svld3_vnum_f64
q6dq16bdC*Wi
__builtin_sve_svld3_vnum_s16
q24sq16bSsC*Wi
__builtin_sve_svld3_vnum_s32
q12iq16bSiC*Wi
__builtin_sve_svld3_vnum_s64
q6Wiq16bSWiC*Wi
__builtin_sve_svld3_vnum_s8
q48Scq16bScC*Wi
__builtin_sve_svld3_vnum_u16
q24Usq16bUsC*Wi
__builtin_sve_svld3_vnum_u32
q12Uiq16bUiC*Wi
__builtin_sve_svld3_vnum_u64
q6UWiq16bUWiC*Wi
__builtin_sve_svld3_vnum_u8
q48Ucq16bUcC*Wi
__builtin_sve_svld4_bf16
q32yq16byC*
__builtin_sve_svld4_f16
q32hq16bhC*
__builtin_sve_svld4_f32
q16fq16bfC*
__builtin_sve_svld4_f64
q8dq16bdC*
__builtin_sve_svld4_s16
q32sq16bSsC*
__builtin_sve_svld4_s32
q16iq16bSiC*
__builtin_sve_svld4_s64
q8Wiq16bSWiC*
__builtin_sve_svld4_s8
q64Scq16bScC*
__builtin_sve_svld4_u16
q32Usq16bUsC*
__builtin_sve_svld4_u32
q16Uiq16bUiC*
__builtin_sve_svld4_u64
q8UWiq16bUWiC*
__builtin_sve_svld4_u8
q64Ucq16bUcC*
__builtin_sve_svld4_vnum_bf16
q32yq16byC*Wi
__builtin_sve_svld4_vnum_f16
q32hq16bhC*Wi
__builtin_sve_svld4_vnum_f32
q16fq16bfC*Wi
__builtin_sve_svld4_vnum_f64
q8dq16bdC*Wi
__builtin_sve_svld4_vnum_s16
q32sq16bSsC*Wi
__builtin_sve_svld4_vnum_s32
q16iq16bSiC*Wi
__builtin_sve_svld4_vnum_s64
q8Wiq16bSWiC*Wi
__builtin_sve_svld4_vnum_s8
q64Scq16bScC*Wi
__builtin_sve_svld4_vnum_u16
q32Usq16bUsC*Wi
__builtin_sve_svld4_vnum_u32
q16Uiq16bUiC*Wi
__builtin_sve_svld4_vnum_u64
q8UWiq16bUWiC*Wi
__builtin_sve_svld4_vnum_u8
q64Ucq16bUcC*Wi
__builtin_sve_svldff1_bf16
__builtin_sve_svldff1_f16
__builtin_sve_svldff1_f32
__builtin_sve_svldff1_f64
__builtin_sve_svldff1_gather_s32index_f32
__builtin_sve_svldff1_gather_s32index_s32
__builtin_sve_svldff1_gather_s32index_u32
__builtin_sve_svldff1_gather_s32offset_f32
__builtin_sve_svldff1_gather_s32offset_s32
__builtin_sve_svldff1_gather_s32offset_u32
__builtin_sve_svldff1_gather_s64index_f64
__builtin_sve_svldff1_gather_s64index_s64
__builtin_sve_svldff1_gather_s64index_u64
__builtin_sve_svldff1_gather_s64offset_f64
__builtin_sve_svldff1_gather_s64offset_s64
__builtin_sve_svldff1_gather_s64offset_u64
__builtin_sve_svldff1_gather_u32base_f32
__builtin_sve_svldff1_gather_u32base_index_f32
__builtin_sve_svldff1_gather_u32base_index_s32
__builtin_sve_svldff1_gather_u32base_index_u32
__builtin_sve_svldff1_gather_u32base_offset_f32
__builtin_sve_svldff1_gather_u32base_offset_s32
__builtin_sve_svldff1_gather_u32base_offset_u32
__builtin_sve_svldff1_gather_u32base_s32
__builtin_sve_svldff1_gather_u32base_u32
__builtin_sve_svldff1_gather_u32index_f32
__builtin_sve_svldff1_gather_u32index_s32
__builtin_sve_svldff1_gather_u32index_u32
__builtin_sve_svldff1_gather_u32offset_f32
__builtin_sve_svldff1_gather_u32offset_s32
__builtin_sve_svldff1_gather_u32offset_u32
__builtin_sve_svldff1_gather_u64base_f64
__builtin_sve_svldff1_gather_u64base_index_f64
__builtin_sve_svldff1_gather_u64base_index_s64
__builtin_sve_svldff1_gather_u64base_index_u64
__builtin_sve_svldff1_gather_u64base_offset_f64
__builtin_sve_svldff1_gather_u64base_offset_s64
__builtin_sve_svldff1_gather_u64base_offset_u64
__builtin_sve_svldff1_gather_u64base_s64
__builtin_sve_svldff1_gather_u64base_u64
__builtin_sve_svldff1_gather_u64index_f64
__builtin_sve_svldff1_gather_u64index_s64
__builtin_sve_svldff1_gather_u64index_u64
__builtin_sve_svldff1_gather_u64offset_f64
__builtin_sve_svldff1_gather_u64offset_s64
__builtin_sve_svldff1_gather_u64offset_u64
__builtin_sve_svldff1_s16
__builtin_sve_svldff1_s32
__builtin_sve_svldff1_s64
__builtin_sve_svldff1_s8
__builtin_sve_svldff1_u16
__builtin_sve_svldff1_u32
__builtin_sve_svldff1_u64
__builtin_sve_svldff1_u8
__builtin_sve_svldff1_vnum_bf16
__builtin_sve_svldff1_vnum_f16
__builtin_sve_svldff1_vnum_f32
__builtin_sve_svldff1_vnum_f64
__builtin_sve_svldff1_vnum_s16
__builtin_sve_svldff1_vnum_s32
__builtin_sve_svldff1_vnum_s64
__builtin_sve_svldff1_vnum_s8
__builtin_sve_svldff1_vnum_u16
__builtin_sve_svldff1_vnum_u32
__builtin_sve_svldff1_vnum_u64
__builtin_sve_svldff1_vnum_u8
__builtin_sve_svldff1sb_gather_s32offset_s32
__builtin_sve_svldff1sb_gather_s32offset_u32
__builtin_sve_svldff1sb_gather_s64offset_s64
__builtin_sve_svldff1sb_gather_s64offset_u64
__builtin_sve_svldff1sb_gather_u32base_offset_s32
__builtin_sve_svldff1sb_gather_u32base_offset_u32
__builtin_sve_svldff1sb_gather_u32base_s32
__builtin_sve_svldff1sb_gather_u32base_u32
__builtin_sve_svldff1sb_gather_u32offset_s32
__builtin_sve_svldff1sb_gather_u32offset_u32
__builtin_sve_svldff1sb_gather_u64base_offset_s64
__builtin_sve_svldff1sb_gather_u64base_offset_u64
__builtin_sve_svldff1sb_gather_u64base_s64
__builtin_sve_svldff1sb_gather_u64base_u64
__builtin_sve_svldff1sb_gather_u64offset_s64
__builtin_sve_svldff1sb_gather_u64offset_u64
__builtin_sve_svldff1sb_s16
__builtin_sve_svldff1sb_s32
__builtin_sve_svldff1sb_s64
__builtin_sve_svldff1sb_u16
__builtin_sve_svldff1sb_u32
__builtin_sve_svldff1sb_u64
__builtin_sve_svldff1sb_vnum_s16
__builtin_sve_svldff1sb_vnum_s32
__builtin_sve_svldff1sb_vnum_s64
__builtin_sve_svldff1sb_vnum_u16
__builtin_sve_svldff1sb_vnum_u32
__builtin_sve_svldff1sb_vnum_u64
__builtin_sve_svldff1sh_gather_s32index_s32
__builtin_sve_svldff1sh_gather_s32index_u32
__builtin_sve_svldff1sh_gather_s32offset_s32
__builtin_sve_svldff1sh_gather_s32offset_u32
__builtin_sve_svldff1sh_gather_s64index_s64
__builtin_sve_svldff1sh_gather_s64index_u64
__builtin_sve_svldff1sh_gather_s64offset_s64
__builtin_sve_svldff1sh_gather_s64offset_u64
__builtin_sve_svldff1sh_gather_u32base_index_s32
__builtin_sve_svldff1sh_gather_u32base_index_u32
__builtin_sve_svldff1sh_gather_u32base_offset_s32
__builtin_sve_svldff1sh_gather_u32base_offset_u32
__builtin_sve_svldff1sh_gather_u32base_s32
__builtin_sve_svldff1sh_gather_u32base_u32
__builtin_sve_svldff1sh_gather_u32index_s32
__builtin_sve_svldff1sh_gather_u32index_u32
__builtin_sve_svldff1sh_gather_u32offset_s32
__builtin_sve_svldff1sh_gather_u32offset_u32
__builtin_sve_svldff1sh_gather_u64base_index_s64
__builtin_sve_svldff1sh_gather_u64base_index_u64
__builtin_sve_svldff1sh_gather_u64base_offset_s64
__builtin_sve_svldff1sh_gather_u64base_offset_u64
__builtin_sve_svldff1sh_gather_u64base_s64
__builtin_sve_svldff1sh_gather_u64base_u64
__builtin_sve_svldff1sh_gather_u64index_s64
__builtin_sve_svldff1sh_gather_u64index_u64
__builtin_sve_svldff1sh_gather_u64offset_s64
__builtin_sve_svldff1sh_gather_u64offset_u64
__builtin_sve_svldff1sh_s32
__builtin_sve_svldff1sh_s64
__builtin_sve_svldff1sh_u32
__builtin_sve_svldff1sh_u64
__builtin_sve_svldff1sh_vnum_s32
__builtin_sve_svldff1sh_vnum_s64
__builtin_sve_svldff1sh_vnum_u32
__builtin_sve_svldff1sh_vnum_u64
__builtin_sve_svldff1sw_gather_s64index_s64
__builtin_sve_svldff1sw_gather_s64index_u64
__builtin_sve_svldff1sw_gather_s64offset_s64
__builtin_sve_svldff1sw_gather_s64offset_u64
__builtin_sve_svldff1sw_gather_u64base_index_s64
__builtin_sve_svldff1sw_gather_u64base_index_u64
__builtin_sve_svldff1sw_gather_u64base_offset_s64
__builtin_sve_svldff1sw_gather_u64base_offset_u64
__builtin_sve_svldff1sw_gather_u64base_s64
__builtin_sve_svldff1sw_gather_u64base_u64
__builtin_sve_svldff1sw_gather_u64index_s64
__builtin_sve_svldff1sw_gather_u64index_u64
__builtin_sve_svldff1sw_gather_u64offset_s64
__builtin_sve_svldff1sw_gather_u64offset_u64
__builtin_sve_svldff1sw_s64
__builtin_sve_svldff1sw_u64
__builtin_sve_svldff1sw_vnum_s64
__builtin_sve_svldff1sw_vnum_u64
__builtin_sve_svldff1ub_gather_s32offset_s32
__builtin_sve_svldff1ub_gather_s32offset_u32
__builtin_sve_svldff1ub_gather_s64offset_s64
__builtin_sve_svldff1ub_gather_s64offset_u64
__builtin_sve_svldff1ub_gather_u32base_offset_s32
__builtin_sve_svldff1ub_gather_u32base_offset_u32
__builtin_sve_svldff1ub_gather_u32base_s32
__builtin_sve_svldff1ub_gather_u32base_u32
__builtin_sve_svldff1ub_gather_u32offset_s32
__builtin_sve_svldff1ub_gather_u32offset_u32
__builtin_sve_svldff1ub_gather_u64base_offset_s64
__builtin_sve_svldff1ub_gather_u64base_offset_u64
__builtin_sve_svldff1ub_gather_u64base_s64
__builtin_sve_svldff1ub_gather_u64base_u64
__builtin_sve_svldff1ub_gather_u64offset_s64
__builtin_sve_svldff1ub_gather_u64offset_u64
__builtin_sve_svldff1ub_s16
__builtin_sve_svldff1ub_s32
__builtin_sve_svldff1ub_s64
__builtin_sve_svldff1ub_u16
__builtin_sve_svldff1ub_u32
__builtin_sve_svldff1ub_u64
__builtin_sve_svldff1ub_vnum_s16
__builtin_sve_svldff1ub_vnum_s32
__builtin_sve_svldff1ub_vnum_s64
__builtin_sve_svldff1ub_vnum_u16
__builtin_sve_svldff1ub_vnum_u32
__builtin_sve_svldff1ub_vnum_u64
__builtin_sve_svldff1uh_gather_s32index_s32
__builtin_sve_svldff1uh_gather_s32index_u32
__builtin_sve_svldff1uh_gather_s32offset_s32
__builtin_sve_svldff1uh_gather_s32offset_u32
__builtin_sve_svldff1uh_gather_s64index_s64
__builtin_sve_svldff1uh_gather_s64index_u64
__builtin_sve_svldff1uh_gather_s64offset_s64
__builtin_sve_svldff1uh_gather_s64offset_u64
__builtin_sve_svldff1uh_gather_u32base_index_s32
__builtin_sve_svldff1uh_gather_u32base_index_u32
__builtin_sve_svldff1uh_gather_u32base_offset_s32
__builtin_sve_svldff1uh_gather_u32base_offset_u32
__builtin_sve_svldff1uh_gather_u32base_s32
__builtin_sve_svldff1uh_gather_u32base_u32
__builtin_sve_svldff1uh_gather_u32index_s32
__builtin_sve_svldff1uh_gather_u32index_u32
__builtin_sve_svldff1uh_gather_u32offset_s32
__builtin_sve_svldff1uh_gather_u32offset_u32
__builtin_sve_svldff1uh_gather_u64base_index_s64
__builtin_sve_svldff1uh_gather_u64base_index_u64
__builtin_sve_svldff1uh_gather_u64base_offset_s64
__builtin_sve_svldff1uh_gather_u64base_offset_u64
__builtin_sve_svldff1uh_gather_u64base_s64
__builtin_sve_svldff1uh_gather_u64base_u64
__builtin_sve_svldff1uh_gather_u64index_s64
__builtin_sve_svldff1uh_gather_u64index_u64
__builtin_sve_svldff1uh_gather_u64offset_s64
__builtin_sve_svldff1uh_gather_u64offset_u64
__builtin_sve_svldff1uh_s32
__builtin_sve_svldff1uh_s64
__builtin_sve_svldff1uh_u32
__builtin_sve_svldff1uh_u64
__builtin_sve_svldff1uh_vnum_s32
__builtin_sve_svldff1uh_vnum_s64
__builtin_sve_svldff1uh_vnum_u32
__builtin_sve_svldff1uh_vnum_u64
__builtin_sve_svldff1uw_gather_s64index_s64
__builtin_sve_svldff1uw_gather_s64index_u64
__builtin_sve_svldff1uw_gather_s64offset_s64
__builtin_sve_svldff1uw_gather_s64offset_u64
__builtin_sve_svldff1uw_gather_u64base_index_s64
__builtin_sve_svldff1uw_gather_u64base_index_u64
__builtin_sve_svldff1uw_gather_u64base_offset_s64
__builtin_sve_svldff1uw_gather_u64base_offset_u64
__builtin_sve_svldff1uw_gather_u64base_s64
__builtin_sve_svldff1uw_gather_u64base_u64
__builtin_sve_svldff1uw_gather_u64index_s64
__builtin_sve_svldff1uw_gather_u64index_u64
__builtin_sve_svldff1uw_gather_u64offset_s64
__builtin_sve_svldff1uw_gather_u64offset_u64
__builtin_sve_svldff1uw_s64
__builtin_sve_svldff1uw_u64
__builtin_sve_svldff1uw_vnum_s64
__builtin_sve_svldff1uw_vnum_u64
__builtin_sve_svldnf1_bf16
__builtin_sve_svldnf1_f16
__builtin_sve_svldnf1_f32
__builtin_sve_svldnf1_f64
__builtin_sve_svldnf1_s16
__builtin_sve_svldnf1_s32
__builtin_sve_svldnf1_s64
__builtin_sve_svldnf1_s8
__builtin_sve_svldnf1_u16
__builtin_sve_svldnf1_u32
__builtin_sve_svldnf1_u64
__builtin_sve_svldnf1_u8
__builtin_sve_svldnf1_vnum_bf16
__builtin_sve_svldnf1_vnum_f16
__builtin_sve_svldnf1_vnum_f32
__builtin_sve_svldnf1_vnum_f64
__builtin_sve_svldnf1_vnum_s16
__builtin_sve_svldnf1_vnum_s32
__builtin_sve_svldnf1_vnum_s64
__builtin_sve_svldnf1_vnum_s8
__builtin_sve_svldnf1_vnum_u16
__builtin_sve_svldnf1_vnum_u32
__builtin_sve_svldnf1_vnum_u64
__builtin_sve_svldnf1_vnum_u8
__builtin_sve_svldnf1sb_s16
__builtin_sve_svldnf1sb_s32
__builtin_sve_svldnf1sb_s64
__builtin_sve_svldnf1sb_u16
__builtin_sve_svldnf1sb_u32
__builtin_sve_svldnf1sb_u64
__builtin_sve_svldnf1sb_vnum_s16
__builtin_sve_svldnf1sb_vnum_s32
__builtin_sve_svldnf1sb_vnum_s64
__builtin_sve_svldnf1sb_vnum_u16
__builtin_sve_svldnf1sb_vnum_u32
__builtin_sve_svldnf1sb_vnum_u64
__builtin_sve_svldnf1sh_s32
__builtin_sve_svldnf1sh_s64
__builtin_sve_svldnf1sh_u32
__builtin_sve_svldnf1sh_u64
__builtin_sve_svldnf1sh_vnum_s32
__builtin_sve_svldnf1sh_vnum_s64
__builtin_sve_svldnf1sh_vnum_u32
__builtin_sve_svldnf1sh_vnum_u64
__builtin_sve_svldnf1sw_s64
__builtin_sve_svldnf1sw_u64
__builtin_sve_svldnf1sw_vnum_s64
__builtin_sve_svldnf1sw_vnum_u64
__builtin_sve_svldnf1ub_s16
__builtin_sve_svldnf1ub_s32
__builtin_sve_svldnf1ub_s64
__builtin_sve_svldnf1ub_u16
__builtin_sve_svldnf1ub_u32
__builtin_sve_svldnf1ub_u64
__builtin_sve_svldnf1ub_vnum_s16
__builtin_sve_svldnf1ub_vnum_s32
__builtin_sve_svldnf1ub_vnum_s64
__builtin_sve_svldnf1ub_vnum_u16
__builtin_sve_svldnf1ub_vnum_u32
__builtin_sve_svldnf1ub_vnum_u64
__builtin_sve_svldnf1uh_s32
__builtin_sve_svldnf1uh_s64
__builtin_sve_svldnf1uh_u32
__builtin_sve_svldnf1uh_u64
__builtin_sve_svldnf1uh_vnum_s32
__builtin_sve_svldnf1uh_vnum_s64
__builtin_sve_svldnf1uh_vnum_u32
__builtin_sve_svldnf1uh_vnum_u64
__builtin_sve_svldnf1uw_s64
__builtin_sve_svldnf1uw_u64
__builtin_sve_svldnf1uw_vnum_s64
__builtin_sve_svldnf1uw_vnum_u64
__builtin_sve_svldnt1_bf16
__builtin_sve_svldnt1_f16
__builtin_sve_svldnt1_f32
__builtin_sve_svldnt1_f64
__builtin_sve_svldnt1_gather_s64index_f64
__builtin_sve_svldnt1_gather_s64index_s64
__builtin_sve_svldnt1_gather_s64index_u64
__builtin_sve_svldnt1_gather_s64offset_f64
__builtin_sve_svldnt1_gather_s64offset_s64
__builtin_sve_svldnt1_gather_s64offset_u64
__builtin_sve_svldnt1_gather_u32base_f32
__builtin_sve_svldnt1_gather_u32base_index_f32
__builtin_sve_svldnt1_gather_u32base_index_s32
__builtin_sve_svldnt1_gather_u32base_index_u32
__builtin_sve_svldnt1_gather_u32base_offset_f32
__builtin_sve_svldnt1_gather_u32base_offset_s32
__builtin_sve_svldnt1_gather_u32base_offset_u32
__builtin_sve_svldnt1_gather_u32base_s32
__builtin_sve_svldnt1_gather_u32base_u32
__builtin_sve_svldnt1_gather_u32offset_f32
__builtin_sve_svldnt1_gather_u32offset_s32
__builtin_sve_svldnt1_gather_u32offset_u32
__builtin_sve_svldnt1_gather_u64base_f64
__builtin_sve_svldnt1_gather_u64base_index_f64
__builtin_sve_svldnt1_gather_u64base_index_s64
__builtin_sve_svldnt1_gather_u64base_index_u64
__builtin_sve_svldnt1_gather_u64base_offset_f64
__builtin_sve_svldnt1_gather_u64base_offset_s64
__builtin_sve_svldnt1_gather_u64base_offset_u64
__builtin_sve_svldnt1_gather_u64base_s64
__builtin_sve_svldnt1_gather_u64base_u64
__builtin_sve_svldnt1_gather_u64index_f64
__builtin_sve_svldnt1_gather_u64index_s64
__builtin_sve_svldnt1_gather_u64index_u64
__builtin_sve_svldnt1_gather_u64offset_f64
__builtin_sve_svldnt1_gather_u64offset_s64
__builtin_sve_svldnt1_gather_u64offset_u64
__builtin_sve_svldnt1_s16
__builtin_sve_svldnt1_s32
__builtin_sve_svldnt1_s64
__builtin_sve_svldnt1_s8
__builtin_sve_svldnt1_u16
__builtin_sve_svldnt1_u32
__builtin_sve_svldnt1_u64
__builtin_sve_svldnt1_u8
__builtin_sve_svldnt1_vnum_bf16
__builtin_sve_svldnt1_vnum_f16
__builtin_sve_svldnt1_vnum_f32
__builtin_sve_svldnt1_vnum_f64
__builtin_sve_svldnt1_vnum_s16
__builtin_sve_svldnt1_vnum_s32
__builtin_sve_svldnt1_vnum_s64
__builtin_sve_svldnt1_vnum_s8
__builtin_sve_svldnt1_vnum_u16
__builtin_sve_svldnt1_vnum_u32
__builtin_sve_svldnt1_vnum_u64
__builtin_sve_svldnt1_vnum_u8
__builtin_sve_svldnt1sb_gather_s64offset_s64
__builtin_sve_svldnt1sb_gather_s64offset_u64
__builtin_sve_svldnt1sb_gather_u32base_offset_s32
__builtin_sve_svldnt1sb_gather_u32base_offset_u32
__builtin_sve_svldnt1sb_gather_u32base_s32
__builtin_sve_svldnt1sb_gather_u32base_u32
__builtin_sve_svldnt1sb_gather_u32offset_s32
__builtin_sve_svldnt1sb_gather_u32offset_u32
__builtin_sve_svldnt1sb_gather_u64base_offset_s64
__builtin_sve_svldnt1sb_gather_u64base_offset_u64
__builtin_sve_svldnt1sb_gather_u64base_s64
__builtin_sve_svldnt1sb_gather_u64base_u64
__builtin_sve_svldnt1sb_gather_u64offset_s64
__builtin_sve_svldnt1sb_gather_u64offset_u64
__builtin_sve_svldnt1sh_gather_s64index_s64
__builtin_sve_svldnt1sh_gather_s64index_u64
__builtin_sve_svldnt1sh_gather_s64offset_s64
__builtin_sve_svldnt1sh_gather_s64offset_u64
__builtin_sve_svldnt1sh_gather_u32base_index_s32
__builtin_sve_svldnt1sh_gather_u32base_index_u32
__builtin_sve_svldnt1sh_gather_u32base_offset_s32
__builtin_sve_svldnt1sh_gather_u32base_offset_u32
__builtin_sve_svldnt1sh_gather_u32base_s32
__builtin_sve_svldnt1sh_gather_u32base_u32
__builtin_sve_svldnt1sh_gather_u32offset_s32
__builtin_sve_svldnt1sh_gather_u32offset_u32
__builtin_sve_svldnt1sh_gather_u64base_index_s64
__builtin_sve_svldnt1sh_gather_u64base_index_u64
__builtin_sve_svldnt1sh_gather_u64base_offset_s64
__builtin_sve_svldnt1sh_gather_u64base_offset_u64
__builtin_sve_svldnt1sh_gather_u64base_s64
__builtin_sve_svldnt1sh_gather_u64base_u64
__builtin_sve_svldnt1sh_gather_u64index_s64
__builtin_sve_svldnt1sh_gather_u64index_u64
__builtin_sve_svldnt1sh_gather_u64offset_s64
__builtin_sve_svldnt1sh_gather_u64offset_u64
__builtin_sve_svldnt1sw_gather_s64index_s64
__builtin_sve_svldnt1sw_gather_s64index_u64
__builtin_sve_svldnt1sw_gather_s64offset_s64
__builtin_sve_svldnt1sw_gather_s64offset_u64
__builtin_sve_svldnt1sw_gather_u64base_index_s64
__builtin_sve_svldnt1sw_gather_u64base_index_u64
__builtin_sve_svldnt1sw_gather_u64base_offset_s64
__builtin_sve_svldnt1sw_gather_u64base_offset_u64
__builtin_sve_svldnt1sw_gather_u64base_s64
__builtin_sve_svldnt1sw_gather_u64base_u64
__builtin_sve_svldnt1sw_gather_u64index_s64
__builtin_sve_svldnt1sw_gather_u64index_u64
__builtin_sve_svldnt1sw_gather_u64offset_s64
__builtin_sve_svldnt1sw_gather_u64offset_u64
__builtin_sve_svldnt1ub_gather_s64offset_s64
__builtin_sve_svldnt1ub_gather_s64offset_u64
__builtin_sve_svldnt1ub_gather_u32base_offset_s32
__builtin_sve_svldnt1ub_gather_u32base_offset_u32
__builtin_sve_svldnt1ub_gather_u32base_s32
__builtin_sve_svldnt1ub_gather_u32base_u32
__builtin_sve_svldnt1ub_gather_u32offset_s32
__builtin_sve_svldnt1ub_gather_u32offset_u32
__builtin_sve_svldnt1ub_gather_u64base_offset_s64
__builtin_sve_svldnt1ub_gather_u64base_offset_u64
__builtin_sve_svldnt1ub_gather_u64base_s64
__builtin_sve_svldnt1ub_gather_u64base_u64
__builtin_sve_svldnt1ub_gather_u64offset_s64
__builtin_sve_svldnt1ub_gather_u64offset_u64
__builtin_sve_svldnt1uh_gather_s64index_s64
__builtin_sve_svldnt1uh_gather_s64index_u64
__builtin_sve_svldnt1uh_gather_s64offset_s64
__builtin_sve_svldnt1uh_gather_s64offset_u64
__builtin_sve_svldnt1uh_gather_u32base_index_s32
__builtin_sve_svldnt1uh_gather_u32base_index_u32
__builtin_sve_svldnt1uh_gather_u32base_offset_s32
__builtin_sve_svldnt1uh_gather_u32base_offset_u32
__builtin_sve_svldnt1uh_gather_u32base_s32
__builtin_sve_svldnt1uh_gather_u32base_u32
__builtin_sve_svldnt1uh_gather_u32offset_s32
__builtin_sve_svldnt1uh_gather_u32offset_u32
__builtin_sve_svldnt1uh_gather_u64base_index_s64
__builtin_sve_svldnt1uh_gather_u64base_index_u64
__builtin_sve_svldnt1uh_gather_u64base_offset_s64
__builtin_sve_svldnt1uh_gather_u64base_offset_u64
__builtin_sve_svldnt1uh_gather_u64base_s64
__builtin_sve_svldnt1uh_gather_u64base_u64
__builtin_sve_svldnt1uh_gather_u64index_s64
__builtin_sve_svldnt1uh_gather_u64index_u64
__builtin_sve_svldnt1uh_gather_u64offset_s64
__builtin_sve_svldnt1uh_gather_u64offset_u64
__builtin_sve_svldnt1uw_gather_s64index_s64
__builtin_sve_svldnt1uw_gather_s64index_u64
__builtin_sve_svldnt1uw_gather_s64offset_s64
__builtin_sve_svldnt1uw_gather_s64offset_u64
__builtin_sve_svldnt1uw_gather_u64base_index_s64
__builtin_sve_svldnt1uw_gather_u64base_index_u64
__builtin_sve_svldnt1uw_gather_u64base_offset_s64
__builtin_sve_svldnt1uw_gather_u64base_offset_u64
__builtin_sve_svldnt1uw_gather_u64base_s64
__builtin_sve_svldnt1uw_gather_u64base_u64
__builtin_sve_svldnt1uw_gather_u64index_s64
__builtin_sve_svldnt1uw_gather_u64index_u64
__builtin_sve_svldnt1uw_gather_u64offset_s64
__builtin_sve_svldnt1uw_gather_u64offset_u64
__builtin_sve_svlen_bf16
UWiq8y
__builtin_sve_svlen_f16
UWiq8h
__builtin_sve_svlen_f32
UWiq4f
__builtin_sve_svlen_f64
UWiq2d
__builtin_sve_svlen_s16
UWiq8s
__builtin_sve_svlen_s32
UWiq4i
__builtin_sve_svlen_s64
UWiq2Wi
__builtin_sve_svlen_s8
UWiq16Sc
__builtin_sve_svlen_u16
UWiq8Us
__builtin_sve_svlen_u32
UWiq4Ui
__builtin_sve_svlen_u64
UWiq2UWi
__builtin_sve_svlen_u8
UWiq16Uc
__builtin_sve_svlogb_f16_m
__builtin_sve_svlogb_f16_x
__builtin_sve_svlogb_f16_z
__builtin_sve_svlogb_f32_m
__builtin_sve_svlogb_f32_x
__builtin_sve_svlogb_f32_z
__builtin_sve_svlogb_f64_m
__builtin_sve_svlogb_f64_x
__builtin_sve_svlogb_f64_z
__builtin_sve_svlsl_n_s16_m
__builtin_sve_svlsl_n_s16_x
__builtin_sve_svlsl_n_s16_z
__builtin_sve_svlsl_n_s32_m
__builtin_sve_svlsl_n_s32_x
__builtin_sve_svlsl_n_s32_z
__builtin_sve_svlsl_n_s64_m
__builtin_sve_svlsl_n_s64_x
__builtin_sve_svlsl_n_s64_z
__builtin_sve_svlsl_n_s8_m
__builtin_sve_svlsl_n_s8_x
__builtin_sve_svlsl_n_s8_z
__builtin_sve_svlsl_n_u16_m
__builtin_sve_svlsl_n_u16_x
__builtin_sve_svlsl_n_u16_z
__builtin_sve_svlsl_n_u32_m
__builtin_sve_svlsl_n_u32_x
__builtin_sve_svlsl_n_u32_z
__builtin_sve_svlsl_n_u64_m
__builtin_sve_svlsl_n_u64_x
__builtin_sve_svlsl_n_u64_z
__builtin_sve_svlsl_n_u8_m
__builtin_sve_svlsl_n_u8_x
__builtin_sve_svlsl_n_u8_z
__builtin_sve_svlsl_s16_m
__builtin_sve_svlsl_s16_x
__builtin_sve_svlsl_s16_z
__builtin_sve_svlsl_s32_m
__builtin_sve_svlsl_s32_x
__builtin_sve_svlsl_s32_z
__builtin_sve_svlsl_s64_m
__builtin_sve_svlsl_s64_x
__builtin_sve_svlsl_s64_z
__builtin_sve_svlsl_s8_m
__builtin_sve_svlsl_s8_x
__builtin_sve_svlsl_s8_z
__builtin_sve_svlsl_u16_m
__builtin_sve_svlsl_u16_x
__builtin_sve_svlsl_u16_z
__builtin_sve_svlsl_u32_m
__builtin_sve_svlsl_u32_x
__builtin_sve_svlsl_u32_z
__builtin_sve_svlsl_u64_m
__builtin_sve_svlsl_u64_x
__builtin_sve_svlsl_u64_z
__builtin_sve_svlsl_u8_m
__builtin_sve_svlsl_u8_x
__builtin_sve_svlsl_u8_z
__builtin_sve_svlsl_wide_n_s16_m
__builtin_sve_svlsl_wide_n_s16_x
__builtin_sve_svlsl_wide_n_s16_z
__builtin_sve_svlsl_wide_n_s32_m
__builtin_sve_svlsl_wide_n_s32_x
__builtin_sve_svlsl_wide_n_s32_z
__builtin_sve_svlsl_wide_n_s8_m
__builtin_sve_svlsl_wide_n_s8_x
__builtin_sve_svlsl_wide_n_s8_z
__builtin_sve_svlsl_wide_n_u16_m
q8Usq16bq8UsUWi
__builtin_sve_svlsl_wide_n_u16_x
__builtin_sve_svlsl_wide_n_u16_z
__builtin_sve_svlsl_wide_n_u32_m
q4Uiq16bq4UiUWi
__builtin_sve_svlsl_wide_n_u32_x
__builtin_sve_svlsl_wide_n_u32_z
__builtin_sve_svlsl_wide_n_u8_m
q16Ucq16bq16UcUWi
__builtin_sve_svlsl_wide_n_u8_x
__builtin_sve_svlsl_wide_n_u8_z
__builtin_sve_svlsl_wide_s16_m
__builtin_sve_svlsl_wide_s16_x
__builtin_sve_svlsl_wide_s16_z
__builtin_sve_svlsl_wide_s32_m
__builtin_sve_svlsl_wide_s32_x
__builtin_sve_svlsl_wide_s32_z
__builtin_sve_svlsl_wide_s8_m
__builtin_sve_svlsl_wide_s8_x
__builtin_sve_svlsl_wide_s8_z
__builtin_sve_svlsl_wide_u16_m
q8Usq16bq8Usq2UWi
__builtin_sve_svlsl_wide_u16_x
__builtin_sve_svlsl_wide_u16_z
__builtin_sve_svlsl_wide_u32_m
q4Uiq16bq4Uiq2UWi
__builtin_sve_svlsl_wide_u32_x
__builtin_sve_svlsl_wide_u32_z
__builtin_sve_svlsl_wide_u8_m
q16Ucq16bq16Ucq2UWi
__builtin_sve_svlsl_wide_u8_x
__builtin_sve_svlsl_wide_u8_z
__builtin_sve_svlsr_n_u16_m
__builtin_sve_svlsr_n_u16_x
__builtin_sve_svlsr_n_u16_z
__builtin_sve_svlsr_n_u32_m
__builtin_sve_svlsr_n_u32_x
__builtin_sve_svlsr_n_u32_z
__builtin_sve_svlsr_n_u64_m
__builtin_sve_svlsr_n_u64_x
__builtin_sve_svlsr_n_u64_z
__builtin_sve_svlsr_n_u8_m
__builtin_sve_svlsr_n_u8_x
__builtin_sve_svlsr_n_u8_z
__builtin_sve_svlsr_u16_m
__builtin_sve_svlsr_u16_x
__builtin_sve_svlsr_u16_z
__builtin_sve_svlsr_u32_m
__builtin_sve_svlsr_u32_x
__builtin_sve_svlsr_u32_z
__builtin_sve_svlsr_u64_m
__builtin_sve_svlsr_u64_x
__builtin_sve_svlsr_u64_z
__builtin_sve_svlsr_u8_m
__builtin_sve_svlsr_u8_x
__builtin_sve_svlsr_u8_z
__builtin_sve_svlsr_wide_n_u16_m
__builtin_sve_svlsr_wide_n_u16_x
__builtin_sve_svlsr_wide_n_u16_z
__builtin_sve_svlsr_wide_n_u32_m
__builtin_sve_svlsr_wide_n_u32_x
__builtin_sve_svlsr_wide_n_u32_z
__builtin_sve_svlsr_wide_n_u8_m
__builtin_sve_svlsr_wide_n_u8_x
__builtin_sve_svlsr_wide_n_u8_z
__builtin_sve_svlsr_wide_u16_m
__builtin_sve_svlsr_wide_u16_x
__builtin_sve_svlsr_wide_u16_z
__builtin_sve_svlsr_wide_u32_m
__builtin_sve_svlsr_wide_u32_x
__builtin_sve_svlsr_wide_u32_z
__builtin_sve_svlsr_wide_u8_m
__builtin_sve_svlsr_wide_u8_x
__builtin_sve_svlsr_wide_u8_z
__builtin_sve_svmad_f16_m
q8hq16bq8hq8hq8h
__builtin_sve_svmad_f16_x
__builtin_sve_svmad_f16_z
__builtin_sve_svmad_f32_m
q4fq16bq4fq4fq4f
__builtin_sve_svmad_f32_x
__builtin_sve_svmad_f32_z
__builtin_sve_svmad_f64_m
q2dq16bq2dq2dq2d
__builtin_sve_svmad_f64_x
__builtin_sve_svmad_f64_z
__builtin_sve_svmad_n_f16_m
q8hq16bq8hq8hh
__builtin_sve_svmad_n_f16_x
__builtin_sve_svmad_n_f16_z
__builtin_sve_svmad_n_f32_m
q4fq16bq4fq4ff
__builtin_sve_svmad_n_f32_x
__builtin_sve_svmad_n_f32_z
__builtin_sve_svmad_n_f64_m
q2dq16bq2dq2dd
__builtin_sve_svmad_n_f64_x
__builtin_sve_svmad_n_f64_z
__builtin_sve_svmad_n_s16_m
q8sq16bq8sq8ss
__builtin_sve_svmad_n_s16_x
__builtin_sve_svmad_n_s16_z
__builtin_sve_svmad_n_s32_m
q4iq16bq4iq4ii
__builtin_sve_svmad_n_s32_x
__builtin_sve_svmad_n_s32_z
__builtin_sve_svmad_n_s64_m
q2Wiq16bq2Wiq2WiWi
__builtin_sve_svmad_n_s64_x
__builtin_sve_svmad_n_s64_z
__builtin_sve_svmad_n_s8_m
q16Scq16bq16Scq16ScSc
__builtin_sve_svmad_n_s8_x
__builtin_sve_svmad_n_s8_z
__builtin_sve_svmad_n_u16_m
q8Usq16bq8Usq8UsUs
__builtin_sve_svmad_n_u16_x
__builtin_sve_svmad_n_u16_z
__builtin_sve_svmad_n_u32_m
q4Uiq16bq4Uiq4UiUi
__builtin_sve_svmad_n_u32_x
__builtin_sve_svmad_n_u32_z
__builtin_sve_svmad_n_u64_m
q2UWiq16bq2UWiq2UWiUWi
__builtin_sve_svmad_n_u64_x
__builtin_sve_svmad_n_u64_z
__builtin_sve_svmad_n_u8_m
q16Ucq16bq16Ucq16UcUc
__builtin_sve_svmad_n_u8_x
__builtin_sve_svmad_n_u8_z
__builtin_sve_svmad_s16_m
q8sq16bq8sq8sq8s
__builtin_sve_svmad_s16_x
__builtin_sve_svmad_s16_z
__builtin_sve_svmad_s32_m
q4iq16bq4iq4iq4i
__builtin_sve_svmad_s32_x
__builtin_sve_svmad_s32_z
__builtin_sve_svmad_s64_m
q2Wiq16bq2Wiq2Wiq2Wi
__builtin_sve_svmad_s64_x
__builtin_sve_svmad_s64_z
__builtin_sve_svmad_s8_m
q16Scq16bq16Scq16Scq16Sc
__builtin_sve_svmad_s8_x
__builtin_sve_svmad_s8_z
__builtin_sve_svmad_u16_m
q8Usq16bq8Usq8Usq8Us
__builtin_sve_svmad_u16_x
__builtin_sve_svmad_u16_z
__builtin_sve_svmad_u32_m
q4Uiq16bq4Uiq4Uiq4Ui
__builtin_sve_svmad_u32_x
__builtin_sve_svmad_u32_z
__builtin_sve_svmad_u64_m
q2UWiq16bq2UWiq2UWiq2UWi
__builtin_sve_svmad_u64_x
__builtin_sve_svmad_u64_z
__builtin_sve_svmad_u8_m
q16Ucq16bq16Ucq16Ucq16Uc
__builtin_sve_svmad_u8_x
__builtin_sve_svmad_u8_z
__builtin_sve_svmatch_s16
__builtin_sve_svmatch_s8
__builtin_sve_svmatch_u16
__builtin_sve_svmatch_u8
__builtin_sve_svmax_f16_m
__builtin_sve_svmax_f16_x
__builtin_sve_svmax_f16_z
__builtin_sve_svmax_f32_m
__builtin_sve_svmax_f32_x
__builtin_sve_svmax_f32_z
__builtin_sve_svmax_f64_m
__builtin_sve_svmax_f64_x
__builtin_sve_svmax_f64_z
__builtin_sve_svmax_n_f16_m
__builtin_sve_svmax_n_f16_x
__builtin_sve_svmax_n_f16_z
__builtin_sve_svmax_n_f32_m
__builtin_sve_svmax_n_f32_x
__builtin_sve_svmax_n_f32_z
__builtin_sve_svmax_n_f64_m
__builtin_sve_svmax_n_f64_x
__builtin_sve_svmax_n_f64_z
__builtin_sve_svmax_n_s16_m
__builtin_sve_svmax_n_s16_x
__builtin_sve_svmax_n_s16_z
__builtin_sve_svmax_n_s32_m
__builtin_sve_svmax_n_s32_x
__builtin_sve_svmax_n_s32_z
__builtin_sve_svmax_n_s64_m
__builtin_sve_svmax_n_s64_x
__builtin_sve_svmax_n_s64_z
__builtin_sve_svmax_n_s8_m
__builtin_sve_svmax_n_s8_x
__builtin_sve_svmax_n_s8_z
__builtin_sve_svmax_n_u16_m
__builtin_sve_svmax_n_u16_x
__builtin_sve_svmax_n_u16_z
__builtin_sve_svmax_n_u32_m
__builtin_sve_svmax_n_u32_x
__builtin_sve_svmax_n_u32_z
__builtin_sve_svmax_n_u64_m
__builtin_sve_svmax_n_u64_x
__builtin_sve_svmax_n_u64_z
__builtin_sve_svmax_n_u8_m
__builtin_sve_svmax_n_u8_x
__builtin_sve_svmax_n_u8_z
__builtin_sve_svmax_s16_m
__builtin_sve_svmax_s16_x
__builtin_sve_svmax_s16_z
__builtin_sve_svmax_s32_m
__builtin_sve_svmax_s32_x
__builtin_sve_svmax_s32_z
__builtin_sve_svmax_s64_m
__builtin_sve_svmax_s64_x
__builtin_sve_svmax_s64_z
__builtin_sve_svmax_s8_m
__builtin_sve_svmax_s8_x
__builtin_sve_svmax_s8_z
__builtin_sve_svmax_u16_m
__builtin_sve_svmax_u16_x
__builtin_sve_svmax_u16_z
__builtin_sve_svmax_u32_m
__builtin_sve_svmax_u32_x
__builtin_sve_svmax_u32_z
__builtin_sve_svmax_u64_m
__builtin_sve_svmax_u64_x
__builtin_sve_svmax_u64_z
__builtin_sve_svmax_u8_m
__builtin_sve_svmax_u8_x
__builtin_sve_svmax_u8_z
__builtin_sve_svmaxnm_f16_m
__builtin_sve_svmaxnm_f16_x
__builtin_sve_svmaxnm_f16_z
__builtin_sve_svmaxnm_f32_m
__builtin_sve_svmaxnm_f32_x
__builtin_sve_svmaxnm_f32_z
__builtin_sve_svmaxnm_f64_m
__builtin_sve_svmaxnm_f64_x
__builtin_sve_svmaxnm_f64_z
__builtin_sve_svmaxnm_n_f16_m
__builtin_sve_svmaxnm_n_f16_x
__builtin_sve_svmaxnm_n_f16_z
__builtin_sve_svmaxnm_n_f32_m
__builtin_sve_svmaxnm_n_f32_x
__builtin_sve_svmaxnm_n_f32_z
__builtin_sve_svmaxnm_n_f64_m
__builtin_sve_svmaxnm_n_f64_x
__builtin_sve_svmaxnm_n_f64_z
__builtin_sve_svmaxnmp_f16_m
__builtin_sve_svmaxnmp_f16_x
__builtin_sve_svmaxnmp_f32_m
__builtin_sve_svmaxnmp_f32_x
__builtin_sve_svmaxnmp_f64_m
__builtin_sve_svmaxnmp_f64_x
__builtin_sve_svmaxnmv_f16
__builtin_sve_svmaxnmv_f32
__builtin_sve_svmaxnmv_f64
__builtin_sve_svmaxp_f16_m
__builtin_sve_svmaxp_f16_x
__builtin_sve_svmaxp_f32_m
__builtin_sve_svmaxp_f32_x
__builtin_sve_svmaxp_f64_m
__builtin_sve_svmaxp_f64_x
__builtin_sve_svmaxp_s16_m
__builtin_sve_svmaxp_s16_x
__builtin_sve_svmaxp_s32_m
__builtin_sve_svmaxp_s32_x
__builtin_sve_svmaxp_s64_m
__builtin_sve_svmaxp_s64_x
__builtin_sve_svmaxp_s8_m
__builtin_sve_svmaxp_s8_x
__builtin_sve_svmaxp_u16_m
__builtin_sve_svmaxp_u16_x
__builtin_sve_svmaxp_u32_m
__builtin_sve_svmaxp_u32_x
__builtin_sve_svmaxp_u64_m
__builtin_sve_svmaxp_u64_x
__builtin_sve_svmaxp_u8_m
__builtin_sve_svmaxp_u8_x
__builtin_sve_svmaxv_f16
__builtin_sve_svmaxv_f32
__builtin_sve_svmaxv_f64
__builtin_sve_svmaxv_s16
__builtin_sve_svmaxv_s32
__builtin_sve_svmaxv_s64
__builtin_sve_svmaxv_s8
__builtin_sve_svmaxv_u16
__builtin_sve_svmaxv_u32
__builtin_sve_svmaxv_u64
__builtin_sve_svmaxv_u8
__builtin_sve_svmin_f16_m
__builtin_sve_svmin_f16_x
__builtin_sve_svmin_f16_z
__builtin_sve_svmin_f32_m
__builtin_sve_svmin_f32_x
__builtin_sve_svmin_f32_z
__builtin_sve_svmin_f64_m
__builtin_sve_svmin_f64_x
__builtin_sve_svmin_f64_z
__builtin_sve_svmin_n_f16_m
__builtin_sve_svmin_n_f16_x
__builtin_sve_svmin_n_f16_z
__builtin_sve_svmin_n_f32_m
__builtin_sve_svmin_n_f32_x
__builtin_sve_svmin_n_f32_z
__builtin_sve_svmin_n_f64_m
__builtin_sve_svmin_n_f64_x
__builtin_sve_svmin_n_f64_z
__builtin_sve_svmin_n_s16_m
__builtin_sve_svmin_n_s16_x
__builtin_sve_svmin_n_s16_z
__builtin_sve_svmin_n_s32_m
__builtin_sve_svmin_n_s32_x
__builtin_sve_svmin_n_s32_z
__builtin_sve_svmin_n_s64_m
__builtin_sve_svmin_n_s64_x
__builtin_sve_svmin_n_s64_z
__builtin_sve_svmin_n_s8_m
__builtin_sve_svmin_n_s8_x
__builtin_sve_svmin_n_s8_z
__builtin_sve_svmin_n_u16_m
__builtin_sve_svmin_n_u16_x
__builtin_sve_svmin_n_u16_z
__builtin_sve_svmin_n_u32_m
__builtin_sve_svmin_n_u32_x
__builtin_sve_svmin_n_u32_z
__builtin_sve_svmin_n_u64_m
__builtin_sve_svmin_n_u64_x
__builtin_sve_svmin_n_u64_z
__builtin_sve_svmin_n_u8_m
__builtin_sve_svmin_n_u8_x
__builtin_sve_svmin_n_u8_z
__builtin_sve_svmin_s16_m
__builtin_sve_svmin_s16_x
__builtin_sve_svmin_s16_z
__builtin_sve_svmin_s32_m
__builtin_sve_svmin_s32_x
__builtin_sve_svmin_s32_z
__builtin_sve_svmin_s64_m
__builtin_sve_svmin_s64_x
__builtin_sve_svmin_s64_z
__builtin_sve_svmin_s8_m
__builtin_sve_svmin_s8_x
__builtin_sve_svmin_s8_z
__builtin_sve_svmin_u16_m
__builtin_sve_svmin_u16_x
__builtin_sve_svmin_u16_z
__builtin_sve_svmin_u32_m
__builtin_sve_svmin_u32_x
__builtin_sve_svmin_u32_z
__builtin_sve_svmin_u64_m
__builtin_sve_svmin_u64_x
__builtin_sve_svmin_u64_z
__builtin_sve_svmin_u8_m
__builtin_sve_svmin_u8_x
__builtin_sve_svmin_u8_z
__builtin_sve_svminnm_f16_m
__builtin_sve_svminnm_f16_x
__builtin_sve_svminnm_f16_z
__builtin_sve_svminnm_f32_m
__builtin_sve_svminnm_f32_x
__builtin_sve_svminnm_f32_z
__builtin_sve_svminnm_f64_m
__builtin_sve_svminnm_f64_x
__builtin_sve_svminnm_f64_z
__builtin_sve_svminnm_n_f16_m
__builtin_sve_svminnm_n_f16_x
__builtin_sve_svminnm_n_f16_z
__builtin_sve_svminnm_n_f32_m
__builtin_sve_svminnm_n_f32_x
__builtin_sve_svminnm_n_f32_z
__builtin_sve_svminnm_n_f64_m
__builtin_sve_svminnm_n_f64_x
__builtin_sve_svminnm_n_f64_z
__builtin_sve_svminnmp_f16_m
__builtin_sve_svminnmp_f16_x
__builtin_sve_svminnmp_f32_m
__builtin_sve_svminnmp_f32_x
__builtin_sve_svminnmp_f64_m
__builtin_sve_svminnmp_f64_x
__builtin_sve_svminnmv_f16
__builtin_sve_svminnmv_f32
__builtin_sve_svminnmv_f64
__builtin_sve_svminp_f16_m
__builtin_sve_svminp_f16_x
__builtin_sve_svminp_f32_m
__builtin_sve_svminp_f32_x
__builtin_sve_svminp_f64_m
__builtin_sve_svminp_f64_x
__builtin_sve_svminp_s16_m
__builtin_sve_svminp_s16_x
__builtin_sve_svminp_s32_m
__builtin_sve_svminp_s32_x
__builtin_sve_svminp_s64_m
__builtin_sve_svminp_s64_x
__builtin_sve_svminp_s8_m
__builtin_sve_svminp_s8_x
__builtin_sve_svminp_u16_m
__builtin_sve_svminp_u16_x
__builtin_sve_svminp_u32_m
__builtin_sve_svminp_u32_x
__builtin_sve_svminp_u64_m
__builtin_sve_svminp_u64_x
__builtin_sve_svminp_u8_m
__builtin_sve_svminp_u8_x
__builtin_sve_svminv_f16
__builtin_sve_svminv_f32
__builtin_sve_svminv_f64
__builtin_sve_svminv_s16
__builtin_sve_svminv_s32
__builtin_sve_svminv_s64
__builtin_sve_svminv_s8
__builtin_sve_svminv_u16
__builtin_sve_svminv_u32
__builtin_sve_svminv_u64
__builtin_sve_svminv_u8
__builtin_sve_svmla_f16_m
__builtin_sve_svmla_f16_x
__builtin_sve_svmla_f16_z
__builtin_sve_svmla_f32_m
__builtin_sve_svmla_f32_x
__builtin_sve_svmla_f32_z
__builtin_sve_svmla_f64_m
__builtin_sve_svmla_f64_x
__builtin_sve_svmla_f64_z
__builtin_sve_svmla_lane_f16
q8hq8hq8hq8hIUWi
__builtin_sve_svmla_lane_f32
q4fq4fq4fq4fIUWi
__builtin_sve_svmla_lane_f64
q2dq2dq2dq2dIUWi
__builtin_sve_svmla_lane_s16
__builtin_sve_svmla_lane_s32
__builtin_sve_svmla_lane_s64
__builtin_sve_svmla_lane_u16
__builtin_sve_svmla_lane_u32
__builtin_sve_svmla_lane_u64
__builtin_sve_svmla_n_f16_m
__builtin_sve_svmla_n_f16_x
__builtin_sve_svmla_n_f16_z
__builtin_sve_svmla_n_f32_m
__builtin_sve_svmla_n_f32_x
__builtin_sve_svmla_n_f32_z
__builtin_sve_svmla_n_f64_m
__builtin_sve_svmla_n_f64_x
__builtin_sve_svmla_n_f64_z
__builtin_sve_svmla_n_s16_m
__builtin_sve_svmla_n_s16_x
__builtin_sve_svmla_n_s16_z
__builtin_sve_svmla_n_s32_m
__builtin_sve_svmla_n_s32_x
__builtin_sve_svmla_n_s32_z
__builtin_sve_svmla_n_s64_m
__builtin_sve_svmla_n_s64_x
__builtin_sve_svmla_n_s64_z
__builtin_sve_svmla_n_s8_m
__builtin_sve_svmla_n_s8_x
__builtin_sve_svmla_n_s8_z
__builtin_sve_svmla_n_u16_m
__builtin_sve_svmla_n_u16_x
__builtin_sve_svmla_n_u16_z
__builtin_sve_svmla_n_u32_m
__builtin_sve_svmla_n_u32_x
__builtin_sve_svmla_n_u32_z
__builtin_sve_svmla_n_u64_m
__builtin_sve_svmla_n_u64_x
__builtin_sve_svmla_n_u64_z
__builtin_sve_svmla_n_u8_m
__builtin_sve_svmla_n_u8_x
__builtin_sve_svmla_n_u8_z
__builtin_sve_svmla_s16_m
__builtin_sve_svmla_s16_x
__builtin_sve_svmla_s16_z
__builtin_sve_svmla_s32_m
__builtin_sve_svmla_s32_x
__builtin_sve_svmla_s32_z
__builtin_sve_svmla_s64_m
__builtin_sve_svmla_s64_x
__builtin_sve_svmla_s64_z
__builtin_sve_svmla_s8_m
__builtin_sve_svmla_s8_x
__builtin_sve_svmla_s8_z
__builtin_sve_svmla_u16_m
__builtin_sve_svmla_u16_x
__builtin_sve_svmla_u16_z
__builtin_sve_svmla_u32_m
__builtin_sve_svmla_u32_x
__builtin_sve_svmla_u32_z
__builtin_sve_svmla_u64_m
__builtin_sve_svmla_u64_x
__builtin_sve_svmla_u64_z
__builtin_sve_svmla_u8_m
__builtin_sve_svmla_u8_x
__builtin_sve_svmla_u8_z
__builtin_sve_svmlalb_f32
q4fq4fq8hq8h
__builtin_sve_svmlalb_lane_f32
q4fq4fq8hq8hIUWi
__builtin_sve_svmlalb_lane_s32
q4iq4iq8sq8sIUWi
__builtin_sve_svmlalb_lane_s64
q2Wiq2Wiq4iq4iIUWi
__builtin_sve_svmlalb_lane_u32
q4Uiq4Uiq8Usq8UsIUWi
__builtin_sve_svmlalb_lane_u64
q2UWiq2UWiq4Uiq4UiIUWi
__builtin_sve_svmlalb_n_f32
q4fq4fq8hh
__builtin_sve_svmlalb_n_s16
__builtin_sve_svmlalb_n_s32
__builtin_sve_svmlalb_n_s64
__builtin_sve_svmlalb_n_u16
__builtin_sve_svmlalb_n_u32
__builtin_sve_svmlalb_n_u64
__builtin_sve_svmlalb_s16
__builtin_sve_svmlalb_s32
__builtin_sve_svmlalb_s64
__builtin_sve_svmlalb_u16
__builtin_sve_svmlalb_u32
__builtin_sve_svmlalb_u64
__builtin_sve_svmlalt_f32
__builtin_sve_svmlalt_lane_f32
__builtin_sve_svmlalt_lane_s32
__builtin_sve_svmlalt_lane_s64
__builtin_sve_svmlalt_lane_u32
__builtin_sve_svmlalt_lane_u64
__builtin_sve_svmlalt_n_f32
__builtin_sve_svmlalt_n_s16
__builtin_sve_svmlalt_n_s32
__builtin_sve_svmlalt_n_s64
__builtin_sve_svmlalt_n_u16
__builtin_sve_svmlalt_n_u32
__builtin_sve_svmlalt_n_u64
__builtin_sve_svmlalt_s16
__builtin_sve_svmlalt_s32
__builtin_sve_svmlalt_s64
__builtin_sve_svmlalt_u16
__builtin_sve_svmlalt_u32
__builtin_sve_svmlalt_u64
__builtin_sve_svmls_f16_m
__builtin_sve_svmls_f16_x
__builtin_sve_svmls_f16_z
__builtin_sve_svmls_f32_m
__builtin_sve_svmls_f32_x
__builtin_sve_svmls_f32_z
__builtin_sve_svmls_f64_m
__builtin_sve_svmls_f64_x
__builtin_sve_svmls_f64_z
__builtin_sve_svmls_lane_f16
__builtin_sve_svmls_lane_f32
__builtin_sve_svmls_lane_f64
__builtin_sve_svmls_lane_s16
__builtin_sve_svmls_lane_s32
__builtin_sve_svmls_lane_s64
__builtin_sve_svmls_lane_u16
__builtin_sve_svmls_lane_u32
__builtin_sve_svmls_lane_u64
__builtin_sve_svmls_n_f16_m
__builtin_sve_svmls_n_f16_x
__builtin_sve_svmls_n_f16_z
__builtin_sve_svmls_n_f32_m
__builtin_sve_svmls_n_f32_x
__builtin_sve_svmls_n_f32_z
__builtin_sve_svmls_n_f64_m
__builtin_sve_svmls_n_f64_x
__builtin_sve_svmls_n_f64_z
__builtin_sve_svmls_n_s16_m
__builtin_sve_svmls_n_s16_x
__builtin_sve_svmls_n_s16_z
__builtin_sve_svmls_n_s32_m
__builtin_sve_svmls_n_s32_x
__builtin_sve_svmls_n_s32_z
__builtin_sve_svmls_n_s64_m
__builtin_sve_svmls_n_s64_x
__builtin_sve_svmls_n_s64_z
__builtin_sve_svmls_n_s8_m
__builtin_sve_svmls_n_s8_x
__builtin_sve_svmls_n_s8_z
__builtin_sve_svmls_n_u16_m
__builtin_sve_svmls_n_u16_x
__builtin_sve_svmls_n_u16_z
__builtin_sve_svmls_n_u32_m
__builtin_sve_svmls_n_u32_x
__builtin_sve_svmls_n_u32_z
__builtin_sve_svmls_n_u64_m
__builtin_sve_svmls_n_u64_x
__builtin_sve_svmls_n_u64_z
__builtin_sve_svmls_n_u8_m
__builtin_sve_svmls_n_u8_x
__builtin_sve_svmls_n_u8_z
__builtin_sve_svmls_s16_m
__builtin_sve_svmls_s16_x
__builtin_sve_svmls_s16_z
__builtin_sve_svmls_s32_m
__builtin_sve_svmls_s32_x
__builtin_sve_svmls_s32_z
__builtin_sve_svmls_s64_m
__builtin_sve_svmls_s64_x
__builtin_sve_svmls_s64_z
__builtin_sve_svmls_s8_m
__builtin_sve_svmls_s8_x
__builtin_sve_svmls_s8_z
__builtin_sve_svmls_u16_m
__builtin_sve_svmls_u16_x
__builtin_sve_svmls_u16_z
__builtin_sve_svmls_u32_m
__builtin_sve_svmls_u32_x
__builtin_sve_svmls_u32_z
__builtin_sve_svmls_u64_m
__builtin_sve_svmls_u64_x
__builtin_sve_svmls_u64_z
__builtin_sve_svmls_u8_m
__builtin_sve_svmls_u8_x
__builtin_sve_svmls_u8_z
__builtin_sve_svmlslb_f32
__builtin_sve_svmlslb_lane_f32
__builtin_sve_svmlslb_lane_s32
__builtin_sve_svmlslb_lane_s64
__builtin_sve_svmlslb_lane_u32
__builtin_sve_svmlslb_lane_u64
__builtin_sve_svmlslb_n_f32
__builtin_sve_svmlslb_n_s16
__builtin_sve_svmlslb_n_s32
__builtin_sve_svmlslb_n_s64
__builtin_sve_svmlslb_n_u16
__builtin_sve_svmlslb_n_u32
__builtin_sve_svmlslb_n_u64
__builtin_sve_svmlslb_s16
__builtin_sve_svmlslb_s32
__builtin_sve_svmlslb_s64
__builtin_sve_svmlslb_u16
__builtin_sve_svmlslb_u32
__builtin_sve_svmlslb_u64
__builtin_sve_svmlslt_f32
__builtin_sve_svmlslt_lane_f32
__builtin_sve_svmlslt_lane_s32
__builtin_sve_svmlslt_lane_s64
__builtin_sve_svmlslt_lane_u32
__builtin_sve_svmlslt_lane_u64
__builtin_sve_svmlslt_n_f32
__builtin_sve_svmlslt_n_s16
__builtin_sve_svmlslt_n_s32
__builtin_sve_svmlslt_n_s64
__builtin_sve_svmlslt_n_u16
__builtin_sve_svmlslt_n_u32
__builtin_sve_svmlslt_n_u64
__builtin_sve_svmlslt_s16
__builtin_sve_svmlslt_s32
__builtin_sve_svmlslt_s64
__builtin_sve_svmlslt_u16
__builtin_sve_svmlslt_u32
__builtin_sve_svmlslt_u64
__builtin_sve_svmmla_f32
q4fq4fq4fq4f
__builtin_sve_svmmla_f64
q2dq2dq2dq2d
__builtin_sve_svmmla_s32
__builtin_sve_svmmla_u32
__builtin_sve_svmov_b_z
__builtin_sve_svmovlb_s16
q8sq16Sc
__builtin_sve_svmovlb_s32
q4iq8s
__builtin_sve_svmovlb_s64
q2Wiq4i
__builtin_sve_svmovlb_u16
q8Usq16Uc
__builtin_sve_svmovlb_u32
q4Uiq8Us
__builtin_sve_svmovlb_u64
q2UWiq4Ui
__builtin_sve_svmovlt_s16
__builtin_sve_svmovlt_s32
__builtin_sve_svmovlt_s64
__builtin_sve_svmovlt_u16
__builtin_sve_svmovlt_u32
__builtin_sve_svmovlt_u64
__builtin_sve_svmsb_f16_m
__builtin_sve_svmsb_f16_x
__builtin_sve_svmsb_f16_z
__builtin_sve_svmsb_f32_m
__builtin_sve_svmsb_f32_x
__builtin_sve_svmsb_f32_z
__builtin_sve_svmsb_f64_m
__builtin_sve_svmsb_f64_x
__builtin_sve_svmsb_f64_z
__builtin_sve_svmsb_n_f16_m
__builtin_sve_svmsb_n_f16_x
__builtin_sve_svmsb_n_f16_z
__builtin_sve_svmsb_n_f32_m
__builtin_sve_svmsb_n_f32_x
__builtin_sve_svmsb_n_f32_z
__builtin_sve_svmsb_n_f64_m
__builtin_sve_svmsb_n_f64_x
__builtin_sve_svmsb_n_f64_z
__builtin_sve_svmsb_n_s16_m
__builtin_sve_svmsb_n_s16_x
__builtin_sve_svmsb_n_s16_z
__builtin_sve_svmsb_n_s32_m
__builtin_sve_svmsb_n_s32_x
__builtin_sve_svmsb_n_s32_z
__builtin_sve_svmsb_n_s64_m
__builtin_sve_svmsb_n_s64_x
__builtin_sve_svmsb_n_s64_z
__builtin_sve_svmsb_n_s8_m
__builtin_sve_svmsb_n_s8_x
__builtin_sve_svmsb_n_s8_z
__builtin_sve_svmsb_n_u16_m
__builtin_sve_svmsb_n_u16_x
__builtin_sve_svmsb_n_u16_z
__builtin_sve_svmsb_n_u32_m
__builtin_sve_svmsb_n_u32_x
__builtin_sve_svmsb_n_u32_z
__builtin_sve_svmsb_n_u64_m
__builtin_sve_svmsb_n_u64_x
__builtin_sve_svmsb_n_u64_z
__builtin_sve_svmsb_n_u8_m
__builtin_sve_svmsb_n_u8_x
__builtin_sve_svmsb_n_u8_z
__builtin_sve_svmsb_s16_m
__builtin_sve_svmsb_s16_x
__builtin_sve_svmsb_s16_z
__builtin_sve_svmsb_s32_m
__builtin_sve_svmsb_s32_x
__builtin_sve_svmsb_s32_z
__builtin_sve_svmsb_s64_m
__builtin_sve_svmsb_s64_x
__builtin_sve_svmsb_s64_z
__builtin_sve_svmsb_s8_m
__builtin_sve_svmsb_s8_x
__builtin_sve_svmsb_s8_z
__builtin_sve_svmsb_u16_m
__builtin_sve_svmsb_u16_x
__builtin_sve_svmsb_u16_z
__builtin_sve_svmsb_u32_m
__builtin_sve_svmsb_u32_x
__builtin_sve_svmsb_u32_z
__builtin_sve_svmsb_u64_m
__builtin_sve_svmsb_u64_x
__builtin_sve_svmsb_u64_z
__builtin_sve_svmsb_u8_m
__builtin_sve_svmsb_u8_x
__builtin_sve_svmsb_u8_z
__builtin_sve_svmul_f16_m
__builtin_sve_svmul_f16_x
__builtin_sve_svmul_f16_z
__builtin_sve_svmul_f32_m
__builtin_sve_svmul_f32_x
__builtin_sve_svmul_f32_z
__builtin_sve_svmul_f64_m
__builtin_sve_svmul_f64_x
__builtin_sve_svmul_f64_z
__builtin_sve_svmul_lane_f16
__builtin_sve_svmul_lane_f32
__builtin_sve_svmul_lane_f64
__builtin_sve_svmul_lane_s16
__builtin_sve_svmul_lane_s32
__builtin_sve_svmul_lane_s64
__builtin_sve_svmul_lane_u16
__builtin_sve_svmul_lane_u32
__builtin_sve_svmul_lane_u64
__builtin_sve_svmul_n_f16_m
__builtin_sve_svmul_n_f16_x
__builtin_sve_svmul_n_f16_z
__builtin_sve_svmul_n_f32_m
__builtin_sve_svmul_n_f32_x
__builtin_sve_svmul_n_f32_z
__builtin_sve_svmul_n_f64_m
__builtin_sve_svmul_n_f64_x
__builtin_sve_svmul_n_f64_z
__builtin_sve_svmul_n_s16_m
__builtin_sve_svmul_n_s16_x
__builtin_sve_svmul_n_s16_z
__builtin_sve_svmul_n_s32_m
__builtin_sve_svmul_n_s32_x
__builtin_sve_svmul_n_s32_z
__builtin_sve_svmul_n_s64_m
__builtin_sve_svmul_n_s64_x
__builtin_sve_svmul_n_s64_z
__builtin_sve_svmul_n_s8_m
__builtin_sve_svmul_n_s8_x
__builtin_sve_svmul_n_s8_z
__builtin_sve_svmul_n_u16_m
__builtin_sve_svmul_n_u16_x
__builtin_sve_svmul_n_u16_z
__builtin_sve_svmul_n_u32_m
__builtin_sve_svmul_n_u32_x
__builtin_sve_svmul_n_u32_z
__builtin_sve_svmul_n_u64_m
__builtin_sve_svmul_n_u64_x
__builtin_sve_svmul_n_u64_z
__builtin_sve_svmul_n_u8_m
__builtin_sve_svmul_n_u8_x
__builtin_sve_svmul_n_u8_z
__builtin_sve_svmul_s16_m
__builtin_sve_svmul_s16_x
__builtin_sve_svmul_s16_z
__builtin_sve_svmul_s32_m
__builtin_sve_svmul_s32_x
__builtin_sve_svmul_s32_z
__builtin_sve_svmul_s64_m
__builtin_sve_svmul_s64_x
__builtin_sve_svmul_s64_z
__builtin_sve_svmul_s8_m
__builtin_sve_svmul_s8_x
__builtin_sve_svmul_s8_z
__builtin_sve_svmul_u16_m
__builtin_sve_svmul_u16_x
__builtin_sve_svmul_u16_z
__builtin_sve_svmul_u32_m
__builtin_sve_svmul_u32_x
__builtin_sve_svmul_u32_z
__builtin_sve_svmul_u64_m
__builtin_sve_svmul_u64_x
__builtin_sve_svmul_u64_z
__builtin_sve_svmul_u8_m
__builtin_sve_svmul_u8_x
__builtin_sve_svmul_u8_z
__builtin_sve_svmulh_n_s16_m
__builtin_sve_svmulh_n_s16_x
__builtin_sve_svmulh_n_s16_z
__builtin_sve_svmulh_n_s32_m
__builtin_sve_svmulh_n_s32_x
__builtin_sve_svmulh_n_s32_z
__builtin_sve_svmulh_n_s64_m
__builtin_sve_svmulh_n_s64_x
__builtin_sve_svmulh_n_s64_z
__builtin_sve_svmulh_n_s8_m
__builtin_sve_svmulh_n_s8_x
__builtin_sve_svmulh_n_s8_z
__builtin_sve_svmulh_n_u16_m
__builtin_sve_svmulh_n_u16_x
__builtin_sve_svmulh_n_u16_z
__builtin_sve_svmulh_n_u32_m
__builtin_sve_svmulh_n_u32_x
__builtin_sve_svmulh_n_u32_z
__builtin_sve_svmulh_n_u64_m
__builtin_sve_svmulh_n_u64_x
__builtin_sve_svmulh_n_u64_z
__builtin_sve_svmulh_n_u8_m
__builtin_sve_svmulh_n_u8_x
__builtin_sve_svmulh_n_u8_z
__builtin_sve_svmulh_s16_m
__builtin_sve_svmulh_s16_x
__builtin_sve_svmulh_s16_z
__builtin_sve_svmulh_s32_m
__builtin_sve_svmulh_s32_x
__builtin_sve_svmulh_s32_z
__builtin_sve_svmulh_s64_m
__builtin_sve_svmulh_s64_x
__builtin_sve_svmulh_s64_z
__builtin_sve_svmulh_s8_m
__builtin_sve_svmulh_s8_x
__builtin_sve_svmulh_s8_z
__builtin_sve_svmulh_u16_m
__builtin_sve_svmulh_u16_x
__builtin_sve_svmulh_u16_z
__builtin_sve_svmulh_u32_m
__builtin_sve_svmulh_u32_x
__builtin_sve_svmulh_u32_z
__builtin_sve_svmulh_u64_m
__builtin_sve_svmulh_u64_x
__builtin_sve_svmulh_u64_z
__builtin_sve_svmulh_u8_m
__builtin_sve_svmulh_u8_x
__builtin_sve_svmulh_u8_z
__builtin_sve_svmullb_lane_s32
q4iq8sq8sIUWi
__builtin_sve_svmullb_lane_s64
q2Wiq4iq4iIUWi
__builtin_sve_svmullb_lane_u32
q4Uiq8Usq8UsIUWi
__builtin_sve_svmullb_lane_u64
q2UWiq4Uiq4UiIUWi
__builtin_sve_svmullb_n_s16
__builtin_sve_svmullb_n_s32
__builtin_sve_svmullb_n_s64
__builtin_sve_svmullb_n_u16
__builtin_sve_svmullb_n_u32
__builtin_sve_svmullb_n_u64
__builtin_sve_svmullb_s16
__builtin_sve_svmullb_s32
__builtin_sve_svmullb_s64
__builtin_sve_svmullb_u16
__builtin_sve_svmullb_u32
__builtin_sve_svmullb_u64
__builtin_sve_svmullt_lane_s32
__builtin_sve_svmullt_lane_s64
__builtin_sve_svmullt_lane_u32
__builtin_sve_svmullt_lane_u64
__builtin_sve_svmullt_n_s16
__builtin_sve_svmullt_n_s32
__builtin_sve_svmullt_n_s64
__builtin_sve_svmullt_n_u16
__builtin_sve_svmullt_n_u32
__builtin_sve_svmullt_n_u64
__builtin_sve_svmullt_s16
__builtin_sve_svmullt_s32
__builtin_sve_svmullt_s64
__builtin_sve_svmullt_u16
__builtin_sve_svmullt_u32
__builtin_sve_svmullt_u64
__builtin_sve_svmulx_f16_m
__builtin_sve_svmulx_f16_x
__builtin_sve_svmulx_f16_z
__builtin_sve_svmulx_f32_m
__builtin_sve_svmulx_f32_x
__builtin_sve_svmulx_f32_z
__builtin_sve_svmulx_f64_m
__builtin_sve_svmulx_f64_x
__builtin_sve_svmulx_f64_z
__builtin_sve_svmulx_n_f16_m
__builtin_sve_svmulx_n_f16_x
__builtin_sve_svmulx_n_f16_z
__builtin_sve_svmulx_n_f32_m
__builtin_sve_svmulx_n_f32_x
__builtin_sve_svmulx_n_f32_z
__builtin_sve_svmulx_n_f64_m
__builtin_sve_svmulx_n_f64_x
__builtin_sve_svmulx_n_f64_z
__builtin_sve_svnand_b_z
__builtin_sve_svnbsl_n_s16
__builtin_sve_svnbsl_n_s32
__builtin_sve_svnbsl_n_s64
__builtin_sve_svnbsl_n_s8
__builtin_sve_svnbsl_n_u16
__builtin_sve_svnbsl_n_u32
__builtin_sve_svnbsl_n_u64
__builtin_sve_svnbsl_n_u8
__builtin_sve_svnbsl_s16
__builtin_sve_svnbsl_s32
__builtin_sve_svnbsl_s64
__builtin_sve_svnbsl_s8
__builtin_sve_svnbsl_u16
__builtin_sve_svnbsl_u32
__builtin_sve_svnbsl_u64
__builtin_sve_svnbsl_u8
__builtin_sve_svneg_f16_m
__builtin_sve_svneg_f16_x
__builtin_sve_svneg_f16_z
__builtin_sve_svneg_f32_m
__builtin_sve_svneg_f32_x
__builtin_sve_svneg_f32_z
__builtin_sve_svneg_f64_m
__builtin_sve_svneg_f64_x
__builtin_sve_svneg_f64_z
__builtin_sve_svneg_s16_m
__builtin_sve_svneg_s16_x
__builtin_sve_svneg_s16_z
__builtin_sve_svneg_s32_m
__builtin_sve_svneg_s32_x
__builtin_sve_svneg_s32_z
__builtin_sve_svneg_s64_m
__builtin_sve_svneg_s64_x
__builtin_sve_svneg_s64_z
__builtin_sve_svneg_s8_m
__builtin_sve_svneg_s8_x
__builtin_sve_svneg_s8_z
__builtin_sve_svnmad_f16_m
__builtin_sve_svnmad_f16_x
__builtin_sve_svnmad_f16_z
__builtin_sve_svnmad_f32_m
__builtin_sve_svnmad_f32_x
__builtin_sve_svnmad_f32_z
__builtin_sve_svnmad_f64_m
__builtin_sve_svnmad_f64_x
__builtin_sve_svnmad_f64_z
__builtin_sve_svnmad_n_f16_m
__builtin_sve_svnmad_n_f16_x
__builtin_sve_svnmad_n_f16_z
__builtin_sve_svnmad_n_f32_m
__builtin_sve_svnmad_n_f32_x
__builtin_sve_svnmad_n_f32_z
__builtin_sve_svnmad_n_f64_m
__builtin_sve_svnmad_n_f64_x
__builtin_sve_svnmad_n_f64_z
__builtin_sve_svnmatch_s16
__builtin_sve_svnmatch_s8
__builtin_sve_svnmatch_u16
__builtin_sve_svnmatch_u8
__builtin_sve_svnmla_f16_m
__builtin_sve_svnmla_f16_x
__builtin_sve_svnmla_f16_z
__builtin_sve_svnmla_f32_m
__builtin_sve_svnmla_f32_x
__builtin_sve_svnmla_f32_z
__builtin_sve_svnmla_f64_m
__builtin_sve_svnmla_f64_x
__builtin_sve_svnmla_f64_z
__builtin_sve_svnmla_n_f16_m
__builtin_sve_svnmla_n_f16_x
__builtin_sve_svnmla_n_f16_z
__builtin_sve_svnmla_n_f32_m
__builtin_sve_svnmla_n_f32_x
__builtin_sve_svnmla_n_f32_z
__builtin_sve_svnmla_n_f64_m
__builtin_sve_svnmla_n_f64_x
__builtin_sve_svnmla_n_f64_z
__builtin_sve_svnmls_f16_m
__builtin_sve_svnmls_f16_x
__builtin_sve_svnmls_f16_z
__builtin_sve_svnmls_f32_m
__builtin_sve_svnmls_f32_x
__builtin_sve_svnmls_f32_z
__builtin_sve_svnmls_f64_m
__builtin_sve_svnmls_f64_x
__builtin_sve_svnmls_f64_z
__builtin_sve_svnmls_n_f16_m
__builtin_sve_svnmls_n_f16_x
__builtin_sve_svnmls_n_f16_z
__builtin_sve_svnmls_n_f32_m
__builtin_sve_svnmls_n_f32_x
__builtin_sve_svnmls_n_f32_z
__builtin_sve_svnmls_n_f64_m
__builtin_sve_svnmls_n_f64_x
__builtin_sve_svnmls_n_f64_z
__builtin_sve_svnmsb_f16_m
__builtin_sve_svnmsb_f16_x
__builtin_sve_svnmsb_f16_z
__builtin_sve_svnmsb_f32_m
__builtin_sve_svnmsb_f32_x
__builtin_sve_svnmsb_f32_z
__builtin_sve_svnmsb_f64_m
__builtin_sve_svnmsb_f64_x
__builtin_sve_svnmsb_f64_z
__builtin_sve_svnmsb_n_f16_m
__builtin_sve_svnmsb_n_f16_x
__builtin_sve_svnmsb_n_f16_z
__builtin_sve_svnmsb_n_f32_m
__builtin_sve_svnmsb_n_f32_x
__builtin_sve_svnmsb_n_f32_z
__builtin_sve_svnmsb_n_f64_m
__builtin_sve_svnmsb_n_f64_x
__builtin_sve_svnmsb_n_f64_z
__builtin_sve_svnor_b_z
__builtin_sve_svnot_b_z
__builtin_sve_svnot_s16_m
__builtin_sve_svnot_s16_x
__builtin_sve_svnot_s16_z
__builtin_sve_svnot_s32_m
__builtin_sve_svnot_s32_x
__builtin_sve_svnot_s32_z
__builtin_sve_svnot_s64_m
__builtin_sve_svnot_s64_x
__builtin_sve_svnot_s64_z
__builtin_sve_svnot_s8_m
__builtin_sve_svnot_s8_x
__builtin_sve_svnot_s8_z
__builtin_sve_svnot_u16_m
__builtin_sve_svnot_u16_x
__builtin_sve_svnot_u16_z
__builtin_sve_svnot_u32_m
__builtin_sve_svnot_u32_x
__builtin_sve_svnot_u32_z
__builtin_sve_svnot_u64_m
__builtin_sve_svnot_u64_x
__builtin_sve_svnot_u64_z
__builtin_sve_svnot_u8_m
__builtin_sve_svnot_u8_x
__builtin_sve_svnot_u8_z
__builtin_sve_svorn_b_z
__builtin_sve_svorr_b_z
__builtin_sve_svorr_n_s16_m
__builtin_sve_svorr_n_s16_x
__builtin_sve_svorr_n_s16_z
__builtin_sve_svorr_n_s32_m
__builtin_sve_svorr_n_s32_x
__builtin_sve_svorr_n_s32_z
__builtin_sve_svorr_n_s64_m
__builtin_sve_svorr_n_s64_x
__builtin_sve_svorr_n_s64_z
__builtin_sve_svorr_n_s8_m
__builtin_sve_svorr_n_s8_x
__builtin_sve_svorr_n_s8_z
__builtin_sve_svorr_n_u16_m
__builtin_sve_svorr_n_u16_x
__builtin_sve_svorr_n_u16_z
__builtin_sve_svorr_n_u32_m
__builtin_sve_svorr_n_u32_x
__builtin_sve_svorr_n_u32_z
__builtin_sve_svorr_n_u64_m
__builtin_sve_svorr_n_u64_x
__builtin_sve_svorr_n_u64_z
__builtin_sve_svorr_n_u8_m
__builtin_sve_svorr_n_u8_x
__builtin_sve_svorr_n_u8_z
__builtin_sve_svorr_s16_m
__builtin_sve_svorr_s16_x
__builtin_sve_svorr_s16_z
__builtin_sve_svorr_s32_m
__builtin_sve_svorr_s32_x
__builtin_sve_svorr_s32_z
__builtin_sve_svorr_s64_m
__builtin_sve_svorr_s64_x
__builtin_sve_svorr_s64_z
__builtin_sve_svorr_s8_m
__builtin_sve_svorr_s8_x
__builtin_sve_svorr_s8_z
__builtin_sve_svorr_u16_m
__builtin_sve_svorr_u16_x
__builtin_sve_svorr_u16_z
__builtin_sve_svorr_u32_m
__builtin_sve_svorr_u32_x
__builtin_sve_svorr_u32_z
__builtin_sve_svorr_u64_m
__builtin_sve_svorr_u64_x
__builtin_sve_svorr_u64_z
__builtin_sve_svorr_u8_m
__builtin_sve_svorr_u8_x
__builtin_sve_svorr_u8_z
__builtin_sve_svorv_s16
__builtin_sve_svorv_s32
__builtin_sve_svorv_s64
__builtin_sve_svorv_s8
__builtin_sve_svorv_u16
__builtin_sve_svorv_u32
__builtin_sve_svorv_u64
__builtin_sve_svorv_u8
__builtin_sve_svpfalse_b
q16b
__builtin_sve_svpfirst_b
__builtin_sve_svpmul_n_u8
__builtin_sve_svpmul_u8
__builtin_sve_svpmullb_n_u16
__builtin_sve_svpmullb_n_u64
__builtin_sve_svpmullb_pair_n_u32
__builtin_sve_svpmullb_pair_n_u64
__builtin_sve_svpmullb_pair_n_u8
__builtin_sve_svpmullb_pair_u32
__builtin_sve_svpmullb_pair_u64
__builtin_sve_svpmullb_pair_u8
__builtin_sve_svpmullb_u16
__builtin_sve_svpmullb_u64
__builtin_sve_svpmullt_n_u16
__builtin_sve_svpmullt_n_u64
__builtin_sve_svpmullt_pair_n_u32
__builtin_sve_svpmullt_pair_n_u64
__builtin_sve_svpmullt_pair_n_u8
__builtin_sve_svpmullt_pair_u32
__builtin_sve_svpmullt_pair_u64
__builtin_sve_svpmullt_pair_u8
__builtin_sve_svpmullt_u16
__builtin_sve_svpmullt_u64
__builtin_sve_svpnext_b16
__builtin_sve_svpnext_b32
__builtin_sve_svpnext_b64
__builtin_sve_svpnext_b8
__builtin_sve_svprfb
vq16bvC*Ii
__builtin_sve_svprfb_gather_s32offset
vq16bvC*q4iIi
__builtin_sve_svprfb_gather_s64offset
vq16bvC*q2WiIi
__builtin_sve_svprfb_gather_u32base
vq16bq4UiIi
__builtin_sve_svprfb_gather_u32base_offset
vq16bq4UiWiIi
__builtin_sve_svprfb_gather_u32offset
vq16bvC*q4UiIi
__builtin_sve_svprfb_gather_u64base
vq16bq2UWiIi
__builtin_sve_svprfb_gather_u64base_offset
vq16bq2UWiWiIi
__builtin_sve_svprfb_gather_u64offset
vq16bvC*q2UWiIi
__builtin_sve_svprfb_vnum
vq16bvC*WiIi
__builtin_sve_svprfd
__builtin_sve_svprfd_gather_s32index
__builtin_sve_svprfd_gather_s64index
__builtin_sve_svprfd_gather_u32base
__builtin_sve_svprfd_gather_u32base_index
__builtin_sve_svprfd_gather_u32index
__builtin_sve_svprfd_gather_u64base
__builtin_sve_svprfd_gather_u64base_index
__builtin_sve_svprfd_gather_u64index
__builtin_sve_svprfd_vnum
__builtin_sve_svprfh
__builtin_sve_svprfh_gather_s32index
__builtin_sve_svprfh_gather_s64index
__builtin_sve_svprfh_gather_u32base
__builtin_sve_svprfh_gather_u32base_index
__builtin_sve_svprfh_gather_u32index
__builtin_sve_svprfh_gather_u64base
__builtin_sve_svprfh_gather_u64base_index
__builtin_sve_svprfh_gather_u64index
__builtin_sve_svprfh_vnum
__builtin_sve_svprfw
__builtin_sve_svprfw_gather_s32index
__builtin_sve_svprfw_gather_s64index
__builtin_sve_svprfw_gather_u32base
__builtin_sve_svprfw_gather_u32base_index
__builtin_sve_svprfw_gather_u32index
__builtin_sve_svprfw_gather_u64base
__builtin_sve_svprfw_gather_u64base_index
__builtin_sve_svprfw_gather_u64index
__builtin_sve_svprfw_vnum
__builtin_sve_svptest_any
bq16bq16b
__builtin_sve_svptest_first
__builtin_sve_svptest_last
__builtin_sve_svptrue_b16
__builtin_sve_svptrue_b32
__builtin_sve_svptrue_b64
__builtin_sve_svptrue_b8
__builtin_sve_svptrue_pat_b16
q16bIi
__builtin_sve_svptrue_pat_b32
__builtin_sve_svptrue_pat_b64
__builtin_sve_svptrue_pat_b8
__builtin_sve_svqabs_s16_m
__builtin_sve_svqabs_s16_x
__builtin_sve_svqabs_s16_z
__builtin_sve_svqabs_s32_m
__builtin_sve_svqabs_s32_x
__builtin_sve_svqabs_s32_z
__builtin_sve_svqabs_s64_m
__builtin_sve_svqabs_s64_x
__builtin_sve_svqabs_s64_z
__builtin_sve_svqabs_s8_m
__builtin_sve_svqabs_s8_x
__builtin_sve_svqabs_s8_z
__builtin_sve_svqadd_n_s16
__builtin_sve_svqadd_n_s16_m
__builtin_sve_svqadd_n_s16_x
__builtin_sve_svqadd_n_s16_z
__builtin_sve_svqadd_n_s32
__builtin_sve_svqadd_n_s32_m
__builtin_sve_svqadd_n_s32_x
__builtin_sve_svqadd_n_s32_z
__builtin_sve_svqadd_n_s64
__builtin_sve_svqadd_n_s64_m
__builtin_sve_svqadd_n_s64_x
__builtin_sve_svqadd_n_s64_z
__builtin_sve_svqadd_n_s8
__builtin_sve_svqadd_n_s8_m
__builtin_sve_svqadd_n_s8_x
__builtin_sve_svqadd_n_s8_z
__builtin_sve_svqadd_n_u16
__builtin_sve_svqadd_n_u16_m
__builtin_sve_svqadd_n_u16_x
__builtin_sve_svqadd_n_u16_z
__builtin_sve_svqadd_n_u32
__builtin_sve_svqadd_n_u32_m
__builtin_sve_svqadd_n_u32_x
__builtin_sve_svqadd_n_u32_z
__builtin_sve_svqadd_n_u64
__builtin_sve_svqadd_n_u64_m
__builtin_sve_svqadd_n_u64_x
__builtin_sve_svqadd_n_u64_z
__builtin_sve_svqadd_n_u8
__builtin_sve_svqadd_n_u8_m
__builtin_sve_svqadd_n_u8_x
__builtin_sve_svqadd_n_u8_z
__builtin_sve_svqadd_s16
q8sq8sq8s
__builtin_sve_svqadd_s16_m
__builtin_sve_svqadd_s16_x
__builtin_sve_svqadd_s16_z
__builtin_sve_svqadd_s32
q4iq4iq4i
__builtin_sve_svqadd_s32_m
__builtin_sve_svqadd_s32_x
__builtin_sve_svqadd_s32_z
__builtin_sve_svqadd_s64
q2Wiq2Wiq2Wi
__builtin_sve_svqadd_s64_m
__builtin_sve_svqadd_s64_x
__builtin_sve_svqadd_s64_z
__builtin_sve_svqadd_s8
q16Scq16Scq16Sc
__builtin_sve_svqadd_s8_m
__builtin_sve_svqadd_s8_x
__builtin_sve_svqadd_s8_z
__builtin_sve_svqadd_u16
__builtin_sve_svqadd_u16_m
__builtin_sve_svqadd_u16_x
__builtin_sve_svqadd_u16_z
__builtin_sve_svqadd_u32
__builtin_sve_svqadd_u32_m
__builtin_sve_svqadd_u32_x
__builtin_sve_svqadd_u32_z
__builtin_sve_svqadd_u64
__builtin_sve_svqadd_u64_m
__builtin_sve_svqadd_u64_x
__builtin_sve_svqadd_u64_z
__builtin_sve_svqadd_u8
__builtin_sve_svqadd_u8_m
__builtin_sve_svqadd_u8_x
__builtin_sve_svqadd_u8_z
__builtin_sve_svqcadd_s16
__builtin_sve_svqcadd_s32
__builtin_sve_svqcadd_s64
__builtin_sve_svqcadd_s8
__builtin_sve_svqdecb_n_s32
iiIUWi
__builtin_sve_svqdecb_n_s64
WiWiIUWi
__builtin_sve_svqdecb_n_u32
UiUiIUWi
__builtin_sve_svqdecb_n_u64
UWiUWiIUWi
__builtin_sve_svqdecb_pat_n_s32
iiIiIUWi
__builtin_sve_svqdecb_pat_n_s64
WiWiIiIUWi
__builtin_sve_svqdecb_pat_n_u32
UiUiIiIUWi
__builtin_sve_svqdecb_pat_n_u64
UWiUWiIiIUWi
__builtin_sve_svqdecd_n_s32
__builtin_sve_svqdecd_n_s64
__builtin_sve_svqdecd_n_u32
__builtin_sve_svqdecd_n_u64
__builtin_sve_svqdecd_pat_n_s32
__builtin_sve_svqdecd_pat_n_s64
__builtin_sve_svqdecd_pat_n_u32
__builtin_sve_svqdecd_pat_n_u64
__builtin_sve_svqdecd_pat_s64
q2Wiq2WiIiIUWi
__builtin_sve_svqdecd_pat_u64
q2UWiq2UWiIiIUWi
__builtin_sve_svqdecd_s64
q2Wiq2WiIUWi
__builtin_sve_svqdecd_u64
q2UWiq2UWiIUWi
__builtin_sve_svqdech_n_s32
__builtin_sve_svqdech_n_s64
__builtin_sve_svqdech_n_u32
__builtin_sve_svqdech_n_u64
__builtin_sve_svqdech_pat_n_s32
__builtin_sve_svqdech_pat_n_s64
__builtin_sve_svqdech_pat_n_u32
__builtin_sve_svqdech_pat_n_u64
__builtin_sve_svqdech_pat_s16
q8sq8sIiIUWi
__builtin_sve_svqdech_pat_u16
q8Usq8UsIiIUWi
__builtin_sve_svqdech_s16
q8sq8sIUWi
__builtin_sve_svqdech_u16
q8Usq8UsIUWi
__builtin_sve_svqdecp_n_s32_b16
iiq16b
__builtin_sve_svqdecp_n_s32_b32
__builtin_sve_svqdecp_n_s32_b64
__builtin_sve_svqdecp_n_s32_b8
__builtin_sve_svqdecp_n_s64_b16
WiWiq16b
__builtin_sve_svqdecp_n_s64_b32
__builtin_sve_svqdecp_n_s64_b64
__builtin_sve_svqdecp_n_s64_b8
__builtin_sve_svqdecp_n_u32_b16
UiUiq16b
__builtin_sve_svqdecp_n_u32_b32
__builtin_sve_svqdecp_n_u32_b64
__builtin_sve_svqdecp_n_u32_b8
__builtin_sve_svqdecp_n_u64_b16
UWiUWiq16b
__builtin_sve_svqdecp_n_u64_b32
__builtin_sve_svqdecp_n_u64_b64
__builtin_sve_svqdecp_n_u64_b8
__builtin_sve_svqdecp_s16
q8sq8sq16b
__builtin_sve_svqdecp_s32
q4iq4iq16b
__builtin_sve_svqdecp_s64
q2Wiq2Wiq16b
__builtin_sve_svqdecp_u16
q8Usq8Usq16b
__builtin_sve_svqdecp_u32
q4Uiq4Uiq16b
__builtin_sve_svqdecp_u64
q2UWiq2UWiq16b
__builtin_sve_svqdecw_n_s32
__builtin_sve_svqdecw_n_s64
__builtin_sve_svqdecw_n_u32
__builtin_sve_svqdecw_n_u64
__builtin_sve_svqdecw_pat_n_s32
__builtin_sve_svqdecw_pat_n_s64
__builtin_sve_svqdecw_pat_n_u32
__builtin_sve_svqdecw_pat_n_u64
__builtin_sve_svqdecw_pat_s32
q4iq4iIiIUWi
__builtin_sve_svqdecw_pat_u32
q4Uiq4UiIiIUWi
__builtin_sve_svqdecw_s32
q4iq4iIUWi
__builtin_sve_svqdecw_u32
q4Uiq4UiIUWi
__builtin_sve_svqdmlalb_lane_s32
__builtin_sve_svqdmlalb_lane_s64
__builtin_sve_svqdmlalb_n_s16
__builtin_sve_svqdmlalb_n_s32
__builtin_sve_svqdmlalb_n_s64
__builtin_sve_svqdmlalb_s16
__builtin_sve_svqdmlalb_s32
__builtin_sve_svqdmlalb_s64
__builtin_sve_svqdmlalbt_n_s16
__builtin_sve_svqdmlalbt_n_s32
__builtin_sve_svqdmlalbt_n_s64
__builtin_sve_svqdmlalbt_s16
__builtin_sve_svqdmlalbt_s32
__builtin_sve_svqdmlalbt_s64
__builtin_sve_svqdmlalt_lane_s32
__builtin_sve_svqdmlalt_lane_s64
__builtin_sve_svqdmlalt_n_s16
__builtin_sve_svqdmlalt_n_s32
__builtin_sve_svqdmlalt_n_s64
__builtin_sve_svqdmlalt_s16
__builtin_sve_svqdmlalt_s32
__builtin_sve_svqdmlalt_s64
__builtin_sve_svqdmlslb_lane_s32
__builtin_sve_svqdmlslb_lane_s64
__builtin_sve_svqdmlslb_n_s16
__builtin_sve_svqdmlslb_n_s32
__builtin_sve_svqdmlslb_n_s64
__builtin_sve_svqdmlslb_s16
__builtin_sve_svqdmlslb_s32
__builtin_sve_svqdmlslb_s64
__builtin_sve_svqdmlslbt_n_s16
__builtin_sve_svqdmlslbt_n_s32
__builtin_sve_svqdmlslbt_n_s64
__builtin_sve_svqdmlslbt_s16
__builtin_sve_svqdmlslbt_s32
__builtin_sve_svqdmlslbt_s64
__builtin_sve_svqdmlslt_lane_s32
__builtin_sve_svqdmlslt_lane_s64
__builtin_sve_svqdmlslt_n_s16
__builtin_sve_svqdmlslt_n_s32
__builtin_sve_svqdmlslt_n_s64
__builtin_sve_svqdmlslt_s16
__builtin_sve_svqdmlslt_s32
__builtin_sve_svqdmlslt_s64
__builtin_sve_svqdmulh_lane_s16
__builtin_sve_svqdmulh_lane_s32
__builtin_sve_svqdmulh_lane_s64
__builtin_sve_svqdmulh_n_s16
__builtin_sve_svqdmulh_n_s32
__builtin_sve_svqdmulh_n_s64
__builtin_sve_svqdmulh_n_s8
__builtin_sve_svqdmulh_s16
__builtin_sve_svqdmulh_s32
__builtin_sve_svqdmulh_s64
__builtin_sve_svqdmulh_s8
__builtin_sve_svqdmullb_lane_s32
__builtin_sve_svqdmullb_lane_s64
__builtin_sve_svqdmullb_n_s16
__builtin_sve_svqdmullb_n_s32
__builtin_sve_svqdmullb_n_s64
__builtin_sve_svqdmullb_s16
__builtin_sve_svqdmullb_s32
__builtin_sve_svqdmullb_s64
__builtin_sve_svqdmullt_lane_s32
__builtin_sve_svqdmullt_lane_s64
__builtin_sve_svqdmullt_n_s16
__builtin_sve_svqdmullt_n_s32
__builtin_sve_svqdmullt_n_s64
__builtin_sve_svqdmullt_s16
__builtin_sve_svqdmullt_s32
__builtin_sve_svqdmullt_s64
__builtin_sve_svqincb_n_s32
__builtin_sve_svqincb_n_s64
__builtin_sve_svqincb_n_u32
__builtin_sve_svqincb_n_u64
__builtin_sve_svqincb_pat_n_s32
__builtin_sve_svqincb_pat_n_s64
__builtin_sve_svqincb_pat_n_u32
__builtin_sve_svqincb_pat_n_u64
__builtin_sve_svqincd_n_s32
__builtin_sve_svqincd_n_s64
__builtin_sve_svqincd_n_u32
__builtin_sve_svqincd_n_u64
__builtin_sve_svqincd_pat_n_s32
__builtin_sve_svqincd_pat_n_s64
__builtin_sve_svqincd_pat_n_u32
__builtin_sve_svqincd_pat_n_u64
__builtin_sve_svqincd_pat_s64
__builtin_sve_svqincd_pat_u64
__builtin_sve_svqincd_s64
__builtin_sve_svqincd_u64
__builtin_sve_svqinch_n_s32
__builtin_sve_svqinch_n_s64
__builtin_sve_svqinch_n_u32
__builtin_sve_svqinch_n_u64
__builtin_sve_svqinch_pat_n_s32
__builtin_sve_svqinch_pat_n_s64
__builtin_sve_svqinch_pat_n_u32
__builtin_sve_svqinch_pat_n_u64
__builtin_sve_svqinch_pat_s16
__builtin_sve_svqinch_pat_u16
__builtin_sve_svqinch_s16
__builtin_sve_svqinch_u16
__builtin_sve_svqincp_n_s32_b16
__builtin_sve_svqincp_n_s32_b32
__builtin_sve_svqincp_n_s32_b64
__builtin_sve_svqincp_n_s32_b8
__builtin_sve_svqincp_n_s64_b16
__builtin_sve_svqincp_n_s64_b32
__builtin_sve_svqincp_n_s64_b64
__builtin_sve_svqincp_n_s64_b8
__builtin_sve_svqincp_n_u32_b16
__builtin_sve_svqincp_n_u32_b32
__builtin_sve_svqincp_n_u32_b64
__builtin_sve_svqincp_n_u32_b8
__builtin_sve_svqincp_n_u64_b16
__builtin_sve_svqincp_n_u64_b32
__builtin_sve_svqincp_n_u64_b64
__builtin_sve_svqincp_n_u64_b8
__builtin_sve_svqincp_s16
__builtin_sve_svqincp_s32
__builtin_sve_svqincp_s64
__builtin_sve_svqincp_u16
__builtin_sve_svqincp_u32
__builtin_sve_svqincp_u64
__builtin_sve_svqincw_n_s32
__builtin_sve_svqincw_n_s64
__builtin_sve_svqincw_n_u32
__builtin_sve_svqincw_n_u64
__builtin_sve_svqincw_pat_n_s32
__builtin_sve_svqincw_pat_n_s64
__builtin_sve_svqincw_pat_n_u32
__builtin_sve_svqincw_pat_n_u64
__builtin_sve_svqincw_pat_s32
__builtin_sve_svqincw_pat_u32
__builtin_sve_svqincw_s32
__builtin_sve_svqincw_u32
__builtin_sve_svqneg_s16_m
__builtin_sve_svqneg_s16_x
__builtin_sve_svqneg_s16_z
__builtin_sve_svqneg_s32_m
__builtin_sve_svqneg_s32_x
__builtin_sve_svqneg_s32_z
__builtin_sve_svqneg_s64_m
__builtin_sve_svqneg_s64_x
__builtin_sve_svqneg_s64_z
__builtin_sve_svqneg_s8_m
__builtin_sve_svqneg_s8_x
__builtin_sve_svqneg_s8_z
__builtin_sve_svqrdcmlah_lane_s16
__builtin_sve_svqrdcmlah_lane_s32
__builtin_sve_svqrdcmlah_s16
__builtin_sve_svqrdcmlah_s32
__builtin_sve_svqrdcmlah_s64
__builtin_sve_svqrdcmlah_s8
__builtin_sve_svqrdmlah_lane_s16
__builtin_sve_svqrdmlah_lane_s32
__builtin_sve_svqrdmlah_lane_s64
__builtin_sve_svqrdmlah_n_s16
__builtin_sve_svqrdmlah_n_s32
__builtin_sve_svqrdmlah_n_s64
__builtin_sve_svqrdmlah_n_s8
__builtin_sve_svqrdmlah_s16
__builtin_sve_svqrdmlah_s32
__builtin_sve_svqrdmlah_s64
__builtin_sve_svqrdmlah_s8
__builtin_sve_svqrdmlsh_lane_s16
__builtin_sve_svqrdmlsh_lane_s32
__builtin_sve_svqrdmlsh_lane_s64
__builtin_sve_svqrdmlsh_n_s16
__builtin_sve_svqrdmlsh_n_s32
__builtin_sve_svqrdmlsh_n_s64
__builtin_sve_svqrdmlsh_n_s8
__builtin_sve_svqrdmlsh_s16
__builtin_sve_svqrdmlsh_s32
__builtin_sve_svqrdmlsh_s64
__builtin_sve_svqrdmlsh_s8
__builtin_sve_svqrdmulh_lane_s16
__builtin_sve_svqrdmulh_lane_s32
__builtin_sve_svqrdmulh_lane_s64
__builtin_sve_svqrdmulh_n_s16
__builtin_sve_svqrdmulh_n_s32
__builtin_sve_svqrdmulh_n_s64
__builtin_sve_svqrdmulh_n_s8
__builtin_sve_svqrdmulh_s16
__builtin_sve_svqrdmulh_s32
__builtin_sve_svqrdmulh_s64
__builtin_sve_svqrdmulh_s8
__builtin_sve_svqrshl_n_s16_m
__builtin_sve_svqrshl_n_s16_x
__builtin_sve_svqrshl_n_s16_z
__builtin_sve_svqrshl_n_s32_m
__builtin_sve_svqrshl_n_s32_x
__builtin_sve_svqrshl_n_s32_z
__builtin_sve_svqrshl_n_s64_m
__builtin_sve_svqrshl_n_s64_x
__builtin_sve_svqrshl_n_s64_z
__builtin_sve_svqrshl_n_s8_m
__builtin_sve_svqrshl_n_s8_x
__builtin_sve_svqrshl_n_s8_z
__builtin_sve_svqrshl_n_u16_m
q8Usq16bq8Uss
__builtin_sve_svqrshl_n_u16_x
__builtin_sve_svqrshl_n_u16_z
__builtin_sve_svqrshl_n_u32_m
q4Uiq16bq4Uii
__builtin_sve_svqrshl_n_u32_x
__builtin_sve_svqrshl_n_u32_z
__builtin_sve_svqrshl_n_u64_m
__builtin_sve_svqrshl_n_u64_x
__builtin_sve_svqrshl_n_u64_z
__builtin_sve_svqrshl_n_u8_m
q16Ucq16bq16UcSc
__builtin_sve_svqrshl_n_u8_x
__builtin_sve_svqrshl_n_u8_z
__builtin_sve_svqrshl_s16_m
__builtin_sve_svqrshl_s16_x
__builtin_sve_svqrshl_s16_z
__builtin_sve_svqrshl_s32_m
__builtin_sve_svqrshl_s32_x
__builtin_sve_svqrshl_s32_z
__builtin_sve_svqrshl_s64_m
__builtin_sve_svqrshl_s64_x
__builtin_sve_svqrshl_s64_z
__builtin_sve_svqrshl_s8_m
__builtin_sve_svqrshl_s8_x
__builtin_sve_svqrshl_s8_z
__builtin_sve_svqrshl_u16_m
q8Usq16bq8Usq8s
__builtin_sve_svqrshl_u16_x
__builtin_sve_svqrshl_u16_z
__builtin_sve_svqrshl_u32_m
q4Uiq16bq4Uiq4i
__builtin_sve_svqrshl_u32_x
__builtin_sve_svqrshl_u32_z
__builtin_sve_svqrshl_u64_m
q2UWiq16bq2UWiq2Wi
__builtin_sve_svqrshl_u64_x
__builtin_sve_svqrshl_u64_z
__builtin_sve_svqrshl_u8_m
q16Ucq16bq16Ucq16Sc
__builtin_sve_svqrshl_u8_x
__builtin_sve_svqrshl_u8_z
__builtin_sve_svqrshrnb_n_s16
q16Scq8sIUWi
__builtin_sve_svqrshrnb_n_s32
q8sq4iIUWi
__builtin_sve_svqrshrnb_n_s64
q4iq2WiIUWi
__builtin_sve_svqrshrnb_n_u16
q16Ucq8UsIUWi
__builtin_sve_svqrshrnb_n_u32
q8Usq4UiIUWi
__builtin_sve_svqrshrnb_n_u64
q4Uiq2UWiIUWi
__builtin_sve_svqrshrnt_n_s16
q16Scq16Scq8sIUWi
__builtin_sve_svqrshrnt_n_s32
q8sq8sq4iIUWi
__builtin_sve_svqrshrnt_n_s64
q4iq4iq2WiIUWi
__builtin_sve_svqrshrnt_n_u16
q16Ucq16Ucq8UsIUWi
__builtin_sve_svqrshrnt_n_u32
q8Usq8Usq4UiIUWi
__builtin_sve_svqrshrnt_n_u64
q4Uiq4Uiq2UWiIUWi
__builtin_sve_svqrshrunb_n_s16
q16Ucq8sIUWi
__builtin_sve_svqrshrunb_n_s32
q8Usq4iIUWi
__builtin_sve_svqrshrunb_n_s64
q4Uiq2WiIUWi
__builtin_sve_svqrshrunt_n_s16
q16Ucq16Ucq8sIUWi
__builtin_sve_svqrshrunt_n_s32
q8Usq8Usq4iIUWi
__builtin_sve_svqrshrunt_n_s64
q4Uiq4Uiq2WiIUWi
__builtin_sve_svqshl_n_s16_m
__builtin_sve_svqshl_n_s16_x
__builtin_sve_svqshl_n_s16_z
__builtin_sve_svqshl_n_s32_m
__builtin_sve_svqshl_n_s32_x
__builtin_sve_svqshl_n_s32_z
__builtin_sve_svqshl_n_s64_m
__builtin_sve_svqshl_n_s64_x
__builtin_sve_svqshl_n_s64_z
__builtin_sve_svqshl_n_s8_m
__builtin_sve_svqshl_n_s8_x
__builtin_sve_svqshl_n_s8_z
__builtin_sve_svqshl_n_u16_m
__builtin_sve_svqshl_n_u16_x
__builtin_sve_svqshl_n_u16_z
__builtin_sve_svqshl_n_u32_m
__builtin_sve_svqshl_n_u32_x
__builtin_sve_svqshl_n_u32_z
__builtin_sve_svqshl_n_u64_m
__builtin_sve_svqshl_n_u64_x
__builtin_sve_svqshl_n_u64_z
__builtin_sve_svqshl_n_u8_m
__builtin_sve_svqshl_n_u8_x
__builtin_sve_svqshl_n_u8_z
__builtin_sve_svqshl_s16_m
__builtin_sve_svqshl_s16_x
__builtin_sve_svqshl_s16_z
__builtin_sve_svqshl_s32_m
__builtin_sve_svqshl_s32_x
__builtin_sve_svqshl_s32_z
__builtin_sve_svqshl_s64_m
__builtin_sve_svqshl_s64_x
__builtin_sve_svqshl_s64_z
__builtin_sve_svqshl_s8_m
__builtin_sve_svqshl_s8_x
__builtin_sve_svqshl_s8_z
__builtin_sve_svqshl_u16_m
__builtin_sve_svqshl_u16_x
__builtin_sve_svqshl_u16_z
__builtin_sve_svqshl_u32_m
__builtin_sve_svqshl_u32_x
__builtin_sve_svqshl_u32_z
__builtin_sve_svqshl_u64_m
__builtin_sve_svqshl_u64_x
__builtin_sve_svqshl_u64_z
__builtin_sve_svqshl_u8_m
__builtin_sve_svqshl_u8_x
__builtin_sve_svqshl_u8_z
__builtin_sve_svqshlu_n_s16_m
q8Usq16bq8sIUWi
__builtin_sve_svqshlu_n_s16_x
__builtin_sve_svqshlu_n_s16_z
__builtin_sve_svqshlu_n_s32_m
q4Uiq16bq4iIUWi
__builtin_sve_svqshlu_n_s32_x
__builtin_sve_svqshlu_n_s32_z
__builtin_sve_svqshlu_n_s64_m
q2UWiq16bq2WiIUWi
__builtin_sve_svqshlu_n_s64_x
__builtin_sve_svqshlu_n_s64_z
__builtin_sve_svqshlu_n_s8_m
q16Ucq16bq16ScIUWi
__builtin_sve_svqshlu_n_s8_x
__builtin_sve_svqshlu_n_s8_z
__builtin_sve_svqshrnb_n_s16
__builtin_sve_svqshrnb_n_s32
__builtin_sve_svqshrnb_n_s64
__builtin_sve_svqshrnb_n_u16
__builtin_sve_svqshrnb_n_u32
__builtin_sve_svqshrnb_n_u64
__builtin_sve_svqshrnt_n_s16
__builtin_sve_svqshrnt_n_s32
__builtin_sve_svqshrnt_n_s64
__builtin_sve_svqshrnt_n_u16
__builtin_sve_svqshrnt_n_u32
__builtin_sve_svqshrnt_n_u64
__builtin_sve_svqshrunb_n_s16
__builtin_sve_svqshrunb_n_s32
__builtin_sve_svqshrunb_n_s64
__builtin_sve_svqshrunt_n_s16
__builtin_sve_svqshrunt_n_s32
__builtin_sve_svqshrunt_n_s64
__builtin_sve_svqsub_n_s16
__builtin_sve_svqsub_n_s16_m
__builtin_sve_svqsub_n_s16_x
__builtin_sve_svqsub_n_s16_z
__builtin_sve_svqsub_n_s32
__builtin_sve_svqsub_n_s32_m
__builtin_sve_svqsub_n_s32_x
__builtin_sve_svqsub_n_s32_z
__builtin_sve_svqsub_n_s64
__builtin_sve_svqsub_n_s64_m
__builtin_sve_svqsub_n_s64_x
__builtin_sve_svqsub_n_s64_z
__builtin_sve_svqsub_n_s8
__builtin_sve_svqsub_n_s8_m
__builtin_sve_svqsub_n_s8_x
__builtin_sve_svqsub_n_s8_z
__builtin_sve_svqsub_n_u16
__builtin_sve_svqsub_n_u16_m
__builtin_sve_svqsub_n_u16_x
__builtin_sve_svqsub_n_u16_z
__builtin_sve_svqsub_n_u32
__builtin_sve_svqsub_n_u32_m
__builtin_sve_svqsub_n_u32_x
__builtin_sve_svqsub_n_u32_z
__builtin_sve_svqsub_n_u64
__builtin_sve_svqsub_n_u64_m
__builtin_sve_svqsub_n_u64_x
__builtin_sve_svqsub_n_u64_z
__builtin_sve_svqsub_n_u8
__builtin_sve_svqsub_n_u8_m
__builtin_sve_svqsub_n_u8_x
__builtin_sve_svqsub_n_u8_z
__builtin_sve_svqsub_s16
__builtin_sve_svqsub_s16_m
__builtin_sve_svqsub_s16_x
__builtin_sve_svqsub_s16_z
__builtin_sve_svqsub_s32
__builtin_sve_svqsub_s32_m
__builtin_sve_svqsub_s32_x
__builtin_sve_svqsub_s32_z
__builtin_sve_svqsub_s64
__builtin_sve_svqsub_s64_m
__builtin_sve_svqsub_s64_x
__builtin_sve_svqsub_s64_z
__builtin_sve_svqsub_s8
__builtin_sve_svqsub_s8_m
__builtin_sve_svqsub_s8_x
__builtin_sve_svqsub_s8_z
__builtin_sve_svqsub_u16
__builtin_sve_svqsub_u16_m
__builtin_sve_svqsub_u16_x
__builtin_sve_svqsub_u16_z
__builtin_sve_svqsub_u32
__builtin_sve_svqsub_u32_m
__builtin_sve_svqsub_u32_x
__builtin_sve_svqsub_u32_z
__builtin_sve_svqsub_u64
__builtin_sve_svqsub_u64_m
__builtin_sve_svqsub_u64_x
__builtin_sve_svqsub_u64_z
__builtin_sve_svqsub_u8
__builtin_sve_svqsub_u8_m
__builtin_sve_svqsub_u8_x
__builtin_sve_svqsub_u8_z
__builtin_sve_svqsubr_n_s16_m
__builtin_sve_svqsubr_n_s16_x
__builtin_sve_svqsubr_n_s16_z
__builtin_sve_svqsubr_n_s32_m
__builtin_sve_svqsubr_n_s32_x
__builtin_sve_svqsubr_n_s32_z
__builtin_sve_svqsubr_n_s64_m
__builtin_sve_svqsubr_n_s64_x
__builtin_sve_svqsubr_n_s64_z
__builtin_sve_svqsubr_n_s8_m
__builtin_sve_svqsubr_n_s8_x
__builtin_sve_svqsubr_n_s8_z
__builtin_sve_svqsubr_n_u16_m
__builtin_sve_svqsubr_n_u16_x
__builtin_sve_svqsubr_n_u16_z
__builtin_sve_svqsubr_n_u32_m
__builtin_sve_svqsubr_n_u32_x
__builtin_sve_svqsubr_n_u32_z
__builtin_sve_svqsubr_n_u64_m
__builtin_sve_svqsubr_n_u64_x
__builtin_sve_svqsubr_n_u64_z
__builtin_sve_svqsubr_n_u8_m
__builtin_sve_svqsubr_n_u8_x
__builtin_sve_svqsubr_n_u8_z
__builtin_sve_svqsubr_s16_m
__builtin_sve_svqsubr_s16_x
__builtin_sve_svqsubr_s16_z
__builtin_sve_svqsubr_s32_m
__builtin_sve_svqsubr_s32_x
__builtin_sve_svqsubr_s32_z
__builtin_sve_svqsubr_s64_m
__builtin_sve_svqsubr_s64_x
__builtin_sve_svqsubr_s64_z
__builtin_sve_svqsubr_s8_m
__builtin_sve_svqsubr_s8_x
__builtin_sve_svqsubr_s8_z
__builtin_sve_svqsubr_u16_m
__builtin_sve_svqsubr_u16_x
__builtin_sve_svqsubr_u16_z
__builtin_sve_svqsubr_u32_m
__builtin_sve_svqsubr_u32_x
__builtin_sve_svqsubr_u32_z
__builtin_sve_svqsubr_u64_m
__builtin_sve_svqsubr_u64_x
__builtin_sve_svqsubr_u64_z
__builtin_sve_svqsubr_u8_m
__builtin_sve_svqsubr_u8_x
__builtin_sve_svqsubr_u8_z
__builtin_sve_svqxtnb_s16
q16Scq8s
__builtin_sve_svqxtnb_s32
q8sq4i
__builtin_sve_svqxtnb_s64
q4iq2Wi
__builtin_sve_svqxtnb_u16
q16Ucq8Us
__builtin_sve_svqxtnb_u32
q8Usq4Ui
__builtin_sve_svqxtnb_u64
q4Uiq2UWi
__builtin_sve_svqxtnt_s16
q16Scq16Scq8s
__builtin_sve_svqxtnt_s32
q8sq8sq4i
__builtin_sve_svqxtnt_s64
q4iq4iq2Wi
__builtin_sve_svqxtnt_u16
q16Ucq16Ucq8Us
__builtin_sve_svqxtnt_u32
q8Usq8Usq4Ui
__builtin_sve_svqxtnt_u64
q4Uiq4Uiq2UWi
__builtin_sve_svqxtunb_s16
q16Ucq8s
__builtin_sve_svqxtunb_s32
q8Usq4i
__builtin_sve_svqxtunb_s64
q4Uiq2Wi
__builtin_sve_svqxtunt_s16
q16Ucq16Ucq8s
__builtin_sve_svqxtunt_s32
q8Usq8Usq4i
__builtin_sve_svqxtunt_s64
q4Uiq4Uiq2Wi
__builtin_sve_svraddhnb_n_s16
__builtin_sve_svraddhnb_n_s32
__builtin_sve_svraddhnb_n_s64
__builtin_sve_svraddhnb_n_u16
__builtin_sve_svraddhnb_n_u32
__builtin_sve_svraddhnb_n_u64
__builtin_sve_svraddhnb_s16
__builtin_sve_svraddhnb_s32
__builtin_sve_svraddhnb_s64
__builtin_sve_svraddhnb_u16
__builtin_sve_svraddhnb_u32
__builtin_sve_svraddhnb_u64
__builtin_sve_svraddhnt_n_s16
__builtin_sve_svraddhnt_n_s32
__builtin_sve_svraddhnt_n_s64
__builtin_sve_svraddhnt_n_u16
__builtin_sve_svraddhnt_n_u32
__builtin_sve_svraddhnt_n_u64
__builtin_sve_svraddhnt_s16
__builtin_sve_svraddhnt_s32
__builtin_sve_svraddhnt_s64
__builtin_sve_svraddhnt_u16
__builtin_sve_svraddhnt_u32
__builtin_sve_svraddhnt_u64
__builtin_sve_svrax1_s64
__builtin_sve_svrax1_u64
__builtin_sve_svrbit_s16_m
__builtin_sve_svrbit_s16_x
__builtin_sve_svrbit_s16_z
__builtin_sve_svrbit_s32_m
__builtin_sve_svrbit_s32_x
__builtin_sve_svrbit_s32_z
__builtin_sve_svrbit_s64_m
__builtin_sve_svrbit_s64_x
__builtin_sve_svrbit_s64_z
__builtin_sve_svrbit_s8_m
__builtin_sve_svrbit_s8_x
__builtin_sve_svrbit_s8_z
__builtin_sve_svrbit_u16_m
__builtin_sve_svrbit_u16_x
__builtin_sve_svrbit_u16_z
__builtin_sve_svrbit_u32_m
__builtin_sve_svrbit_u32_x
__builtin_sve_svrbit_u32_z
__builtin_sve_svrbit_u64_m
__builtin_sve_svrbit_u64_x
__builtin_sve_svrbit_u64_z
__builtin_sve_svrbit_u8_m
__builtin_sve_svrbit_u8_x
__builtin_sve_svrbit_u8_z
__builtin_sve_svrdffr
__builtin_sve_svrdffr_z
q16bq16b
__builtin_sve_svrecpe_f16
q8hq8h
__builtin_sve_svrecpe_f32
q4fq4f
__builtin_sve_svrecpe_f64
q2dq2d
__builtin_sve_svrecpe_u32_m
__builtin_sve_svrecpe_u32_x
__builtin_sve_svrecpe_u32_z
__builtin_sve_svrecps_f16
q8hq8hq8h
__builtin_sve_svrecps_f32
q4fq4fq4f
__builtin_sve_svrecps_f64
q2dq2dq2d
__builtin_sve_svrecpx_f16_m
__builtin_sve_svrecpx_f16_x
__builtin_sve_svrecpx_f16_z
__builtin_sve_svrecpx_f32_m
__builtin_sve_svrecpx_f32_x
__builtin_sve_svrecpx_f32_z
__builtin_sve_svrecpx_f64_m
__builtin_sve_svrecpx_f64_x
__builtin_sve_svrecpx_f64_z
__builtin_sve_svrev_b16
__builtin_sve_svrev_b32
__builtin_sve_svrev_b64
__builtin_sve_svrev_b8
__builtin_sve_svrev_bf16
q8yq8y
__builtin_sve_svrev_f16
__builtin_sve_svrev_f32
__builtin_sve_svrev_f64
__builtin_sve_svrev_s16
q8sq8s
__builtin_sve_svrev_s32
q4iq4i
__builtin_sve_svrev_s64
q2Wiq2Wi
__builtin_sve_svrev_s8
q16Scq16Sc
__builtin_sve_svrev_u16
q8Usq8Us
__builtin_sve_svrev_u32
q4Uiq4Ui
__builtin_sve_svrev_u64
q2UWiq2UWi
__builtin_sve_svrev_u8
__builtin_sve_svrevb_s16_m
__builtin_sve_svrevb_s16_x
__builtin_sve_svrevb_s16_z
__builtin_sve_svrevb_s32_m
__builtin_sve_svrevb_s32_x
__builtin_sve_svrevb_s32_z
__builtin_sve_svrevb_s64_m
__builtin_sve_svrevb_s64_x
__builtin_sve_svrevb_s64_z
__builtin_sve_svrevb_u16_m
__builtin_sve_svrevb_u16_x
__builtin_sve_svrevb_u16_z
__builtin_sve_svrevb_u32_m
__builtin_sve_svrevb_u32_x
__builtin_sve_svrevb_u32_z
__builtin_sve_svrevb_u64_m
__builtin_sve_svrevb_u64_x
__builtin_sve_svrevb_u64_z
__builtin_sve_svrevh_s32_m
__builtin_sve_svrevh_s32_x
__builtin_sve_svrevh_s32_z
__builtin_sve_svrevh_s64_m
__builtin_sve_svrevh_s64_x
__builtin_sve_svrevh_s64_z
__builtin_sve_svrevh_u32_m
__builtin_sve_svrevh_u32_x
__builtin_sve_svrevh_u32_z
__builtin_sve_svrevh_u64_m
__builtin_sve_svrevh_u64_x
__builtin_sve_svrevh_u64_z
__builtin_sve_svrevw_s64_m
__builtin_sve_svrevw_s64_x
__builtin_sve_svrevw_s64_z
__builtin_sve_svrevw_u64_m
__builtin_sve_svrevw_u64_x
__builtin_sve_svrevw_u64_z
__builtin_sve_svrhadd_n_s16_m
__builtin_sve_svrhadd_n_s16_x
__builtin_sve_svrhadd_n_s16_z
__builtin_sve_svrhadd_n_s32_m
__builtin_sve_svrhadd_n_s32_x
__builtin_sve_svrhadd_n_s32_z
__builtin_sve_svrhadd_n_s64_m
__builtin_sve_svrhadd_n_s64_x
__builtin_sve_svrhadd_n_s64_z
__builtin_sve_svrhadd_n_s8_m
__builtin_sve_svrhadd_n_s8_x
__builtin_sve_svrhadd_n_s8_z
__builtin_sve_svrhadd_n_u16_m
__builtin_sve_svrhadd_n_u16_x
__builtin_sve_svrhadd_n_u16_z
__builtin_sve_svrhadd_n_u32_m
__builtin_sve_svrhadd_n_u32_x
__builtin_sve_svrhadd_n_u32_z
__builtin_sve_svrhadd_n_u64_m
__builtin_sve_svrhadd_n_u64_x
__builtin_sve_svrhadd_n_u64_z
__builtin_sve_svrhadd_n_u8_m
__builtin_sve_svrhadd_n_u8_x
__builtin_sve_svrhadd_n_u8_z
__builtin_sve_svrhadd_s16_m
__builtin_sve_svrhadd_s16_x
__builtin_sve_svrhadd_s16_z
__builtin_sve_svrhadd_s32_m
__builtin_sve_svrhadd_s32_x
__builtin_sve_svrhadd_s32_z
__builtin_sve_svrhadd_s64_m
__builtin_sve_svrhadd_s64_x
__builtin_sve_svrhadd_s64_z
__builtin_sve_svrhadd_s8_m
__builtin_sve_svrhadd_s8_x
__builtin_sve_svrhadd_s8_z
__builtin_sve_svrhadd_u16_m
__builtin_sve_svrhadd_u16_x
__builtin_sve_svrhadd_u16_z
__builtin_sve_svrhadd_u32_m
__builtin_sve_svrhadd_u32_x
__builtin_sve_svrhadd_u32_z
__builtin_sve_svrhadd_u64_m
__builtin_sve_svrhadd_u64_x
__builtin_sve_svrhadd_u64_z
__builtin_sve_svrhadd_u8_m
__builtin_sve_svrhadd_u8_x
__builtin_sve_svrhadd_u8_z
__builtin_sve_svrinta_f16_m
__builtin_sve_svrinta_f16_x
__builtin_sve_svrinta_f16_z
__builtin_sve_svrinta_f32_m
__builtin_sve_svrinta_f32_x
__builtin_sve_svrinta_f32_z
__builtin_sve_svrinta_f64_m
__builtin_sve_svrinta_f64_x
__builtin_sve_svrinta_f64_z
__builtin_sve_svrinti_f16_m
__builtin_sve_svrinti_f16_x
__builtin_sve_svrinti_f16_z
__builtin_sve_svrinti_f32_m
__builtin_sve_svrinti_f32_x
__builtin_sve_svrinti_f32_z
__builtin_sve_svrinti_f64_m
__builtin_sve_svrinti_f64_x
__builtin_sve_svrinti_f64_z
__builtin_sve_svrintm_f16_m
__builtin_sve_svrintm_f16_x
__builtin_sve_svrintm_f16_z
__builtin_sve_svrintm_f32_m
__builtin_sve_svrintm_f32_x
__builtin_sve_svrintm_f32_z
__builtin_sve_svrintm_f64_m
__builtin_sve_svrintm_f64_x
__builtin_sve_svrintm_f64_z
__builtin_sve_svrintn_f16_m
__builtin_sve_svrintn_f16_x
__builtin_sve_svrintn_f16_z
__builtin_sve_svrintn_f32_m
__builtin_sve_svrintn_f32_x
__builtin_sve_svrintn_f32_z
__builtin_sve_svrintn_f64_m
__builtin_sve_svrintn_f64_x
__builtin_sve_svrintn_f64_z
__builtin_sve_svrintp_f16_m
__builtin_sve_svrintp_f16_x
__builtin_sve_svrintp_f16_z
__builtin_sve_svrintp_f32_m
__builtin_sve_svrintp_f32_x
__builtin_sve_svrintp_f32_z
__builtin_sve_svrintp_f64_m
__builtin_sve_svrintp_f64_x
__builtin_sve_svrintp_f64_z
__builtin_sve_svrintx_f16_m
__builtin_sve_svrintx_f16_x
__builtin_sve_svrintx_f16_z
__builtin_sve_svrintx_f32_m
__builtin_sve_svrintx_f32_x
__builtin_sve_svrintx_f32_z
__builtin_sve_svrintx_f64_m
__builtin_sve_svrintx_f64_x
__builtin_sve_svrintx_f64_z
__builtin_sve_svrintz_f16_m
__builtin_sve_svrintz_f16_x
__builtin_sve_svrintz_f16_z
__builtin_sve_svrintz_f32_m
__builtin_sve_svrintz_f32_x
__builtin_sve_svrintz_f32_z
__builtin_sve_svrintz_f64_m
__builtin_sve_svrintz_f64_x
__builtin_sve_svrintz_f64_z
__builtin_sve_svrshl_n_s16_m
__builtin_sve_svrshl_n_s16_x
__builtin_sve_svrshl_n_s16_z
__builtin_sve_svrshl_n_s32_m
__builtin_sve_svrshl_n_s32_x
__builtin_sve_svrshl_n_s32_z
__builtin_sve_svrshl_n_s64_m
__builtin_sve_svrshl_n_s64_x
__builtin_sve_svrshl_n_s64_z
__builtin_sve_svrshl_n_s8_m
__builtin_sve_svrshl_n_s8_x
__builtin_sve_svrshl_n_s8_z
__builtin_sve_svrshl_n_u16_m
__builtin_sve_svrshl_n_u16_x
__builtin_sve_svrshl_n_u16_z
__builtin_sve_svrshl_n_u32_m
__builtin_sve_svrshl_n_u32_x
__builtin_sve_svrshl_n_u32_z
__builtin_sve_svrshl_n_u64_m
__builtin_sve_svrshl_n_u64_x
__builtin_sve_svrshl_n_u64_z
__builtin_sve_svrshl_n_u8_m
__builtin_sve_svrshl_n_u8_x
__builtin_sve_svrshl_n_u8_z
__builtin_sve_svrshl_s16_m
__builtin_sve_svrshl_s16_x
__builtin_sve_svrshl_s16_z
__builtin_sve_svrshl_s32_m
__builtin_sve_svrshl_s32_x
__builtin_sve_svrshl_s32_z
__builtin_sve_svrshl_s64_m
__builtin_sve_svrshl_s64_x
__builtin_sve_svrshl_s64_z
__builtin_sve_svrshl_s8_m
__builtin_sve_svrshl_s8_x
__builtin_sve_svrshl_s8_z
__builtin_sve_svrshl_u16_m
__builtin_sve_svrshl_u16_x
__builtin_sve_svrshl_u16_z
__builtin_sve_svrshl_u32_m
__builtin_sve_svrshl_u32_x
__builtin_sve_svrshl_u32_z
__builtin_sve_svrshl_u64_m
__builtin_sve_svrshl_u64_x
__builtin_sve_svrshl_u64_z
__builtin_sve_svrshl_u8_m
__builtin_sve_svrshl_u8_x
__builtin_sve_svrshl_u8_z
__builtin_sve_svrshr_n_s16_m
__builtin_sve_svrshr_n_s16_x
__builtin_sve_svrshr_n_s16_z
__builtin_sve_svrshr_n_s32_m
__builtin_sve_svrshr_n_s32_x
__builtin_sve_svrshr_n_s32_z
__builtin_sve_svrshr_n_s64_m
__builtin_sve_svrshr_n_s64_x
__builtin_sve_svrshr_n_s64_z
__builtin_sve_svrshr_n_s8_m
__builtin_sve_svrshr_n_s8_x
__builtin_sve_svrshr_n_s8_z
__builtin_sve_svrshr_n_u16_m
q8Usq16bq8UsIUWi
__builtin_sve_svrshr_n_u16_x
__builtin_sve_svrshr_n_u16_z
__builtin_sve_svrshr_n_u32_m
q4Uiq16bq4UiIUWi
__builtin_sve_svrshr_n_u32_x
__builtin_sve_svrshr_n_u32_z
__builtin_sve_svrshr_n_u64_m
q2UWiq16bq2UWiIUWi
__builtin_sve_svrshr_n_u64_x
__builtin_sve_svrshr_n_u64_z
__builtin_sve_svrshr_n_u8_m
q16Ucq16bq16UcIUWi
__builtin_sve_svrshr_n_u8_x
__builtin_sve_svrshr_n_u8_z
__builtin_sve_svrshrnb_n_s16
__builtin_sve_svrshrnb_n_s32
__builtin_sve_svrshrnb_n_s64
__builtin_sve_svrshrnb_n_u16
__builtin_sve_svrshrnb_n_u32
__builtin_sve_svrshrnb_n_u64
__builtin_sve_svrshrnt_n_s16
__builtin_sve_svrshrnt_n_s32
__builtin_sve_svrshrnt_n_s64
__builtin_sve_svrshrnt_n_u16
__builtin_sve_svrshrnt_n_u32
__builtin_sve_svrshrnt_n_u64
__builtin_sve_svrsqrte_f16
__builtin_sve_svrsqrte_f32
__builtin_sve_svrsqrte_f64
__builtin_sve_svrsqrte_u32_m
__builtin_sve_svrsqrte_u32_x
__builtin_sve_svrsqrte_u32_z
__builtin_sve_svrsqrts_f16
__builtin_sve_svrsqrts_f32
__builtin_sve_svrsqrts_f64
__builtin_sve_svrsra_n_s16
__builtin_sve_svrsra_n_s32
__builtin_sve_svrsra_n_s64
__builtin_sve_svrsra_n_s8
__builtin_sve_svrsra_n_u16
__builtin_sve_svrsra_n_u32
__builtin_sve_svrsra_n_u64
__builtin_sve_svrsra_n_u8
__builtin_sve_svrsubhnb_n_s16
__builtin_sve_svrsubhnb_n_s32
__builtin_sve_svrsubhnb_n_s64
__builtin_sve_svrsubhnb_n_u16
__builtin_sve_svrsubhnb_n_u32
__builtin_sve_svrsubhnb_n_u64
__builtin_sve_svrsubhnb_s16
__builtin_sve_svrsubhnb_s32
__builtin_sve_svrsubhnb_s64
__builtin_sve_svrsubhnb_u16
__builtin_sve_svrsubhnb_u32
__builtin_sve_svrsubhnb_u64
__builtin_sve_svrsubhnt_n_s16
__builtin_sve_svrsubhnt_n_s32
__builtin_sve_svrsubhnt_n_s64
__builtin_sve_svrsubhnt_n_u16
__builtin_sve_svrsubhnt_n_u32
__builtin_sve_svrsubhnt_n_u64
__builtin_sve_svrsubhnt_s16
__builtin_sve_svrsubhnt_s32
__builtin_sve_svrsubhnt_s64
__builtin_sve_svrsubhnt_u16
__builtin_sve_svrsubhnt_u32
__builtin_sve_svrsubhnt_u64
__builtin_sve_svsbclb_n_u32
__builtin_sve_svsbclb_n_u64
__builtin_sve_svsbclb_u32
__builtin_sve_svsbclb_u64
__builtin_sve_svsbclt_n_u32
__builtin_sve_svsbclt_n_u64
__builtin_sve_svsbclt_u32
__builtin_sve_svsbclt_u64
__builtin_sve_svscale_f16_m
q8hq16bq8hq8s
__builtin_sve_svscale_f16_x
__builtin_sve_svscale_f16_z
__builtin_sve_svscale_f32_m
q4fq16bq4fq4i
__builtin_sve_svscale_f32_x
__builtin_sve_svscale_f32_z
__builtin_sve_svscale_f64_m
q2dq16bq2dq2Wi
__builtin_sve_svscale_f64_x
__builtin_sve_svscale_f64_z
__builtin_sve_svscale_n_f16_m
q8hq16bq8hs
__builtin_sve_svscale_n_f16_x
__builtin_sve_svscale_n_f16_z
__builtin_sve_svscale_n_f32_m
q4fq16bq4fi
__builtin_sve_svscale_n_f32_x
__builtin_sve_svscale_n_f32_z
__builtin_sve_svscale_n_f64_m
q2dq16bq2dWi
__builtin_sve_svscale_n_f64_x
__builtin_sve_svscale_n_f64_z
__builtin_sve_svsel_b
__builtin_sve_svsel_bf16
__builtin_sve_svsel_f16
__builtin_sve_svsel_f32
__builtin_sve_svsel_f64
__builtin_sve_svsel_s16
__builtin_sve_svsel_s32
__builtin_sve_svsel_s64
__builtin_sve_svsel_s8
__builtin_sve_svsel_u16
__builtin_sve_svsel_u32
__builtin_sve_svsel_u64
__builtin_sve_svsel_u8
__builtin_sve_svset2_bf16
q16yq16yIUWiq8y
__builtin_sve_svset2_f16
q16hq16hIUWiq8h
__builtin_sve_svset2_f32
q8fq8fIUWiq4f
__builtin_sve_svset2_f64
q4dq4dIUWiq2d
__builtin_sve_svset2_s16
q16sq16sIUWiq8s
__builtin_sve_svset2_s32
q8iq8iIUWiq4i
__builtin_sve_svset2_s64
q4Wiq4WiIUWiq2Wi
__builtin_sve_svset2_s8
q32Scq32ScIUWiq16Sc
__builtin_sve_svset2_u16
q16Usq16UsIUWiq8Us
__builtin_sve_svset2_u32
q8Uiq8UiIUWiq4Ui
__builtin_sve_svset2_u64
q4UWiq4UWiIUWiq2UWi
__builtin_sve_svset2_u8
q32Ucq32UcIUWiq16Uc
__builtin_sve_svset3_bf16
q24yq24yIUWiq8y
__builtin_sve_svset3_f16
q24hq24hIUWiq8h
__builtin_sve_svset3_f32
q12fq12fIUWiq4f
__builtin_sve_svset3_f64
q6dq6dIUWiq2d
__builtin_sve_svset3_s16
q24sq24sIUWiq8s
__builtin_sve_svset3_s32
q12iq12iIUWiq4i
__builtin_sve_svset3_s64
q6Wiq6WiIUWiq2Wi
__builtin_sve_svset3_s8
q48Scq48ScIUWiq16Sc
__builtin_sve_svset3_u16
q24Usq24UsIUWiq8Us
__builtin_sve_svset3_u32
q12Uiq12UiIUWiq4Ui
__builtin_sve_svset3_u64
q6UWiq6UWiIUWiq2UWi
__builtin_sve_svset3_u8
q48Ucq48UcIUWiq16Uc
__builtin_sve_svset4_bf16
q32yq32yIUWiq8y
__builtin_sve_svset4_f16
q32hq32hIUWiq8h
__builtin_sve_svset4_f32
q16fq16fIUWiq4f
__builtin_sve_svset4_f64
q8dq8dIUWiq2d
__builtin_sve_svset4_s16
q32sq32sIUWiq8s
__builtin_sve_svset4_s32
q16iq16iIUWiq4i
__builtin_sve_svset4_s64
q8Wiq8WiIUWiq2Wi
__builtin_sve_svset4_s8
q64Scq64ScIUWiq16Sc
__builtin_sve_svset4_u16
q32Usq32UsIUWiq8Us
__builtin_sve_svset4_u32
q16Uiq16UiIUWiq4Ui
__builtin_sve_svset4_u64
q8UWiq8UWiIUWiq2UWi
__builtin_sve_svset4_u8
q64Ucq64UcIUWiq16Uc
__builtin_sve_svsetffr
__builtin_sve_svshllb_n_s16
q8sq16ScIUWi
__builtin_sve_svshllb_n_s32
q4iq8sIUWi
__builtin_sve_svshllb_n_s64
q2Wiq4iIUWi
__builtin_sve_svshllb_n_u16
q8Usq16UcIUWi
__builtin_sve_svshllb_n_u32
q4Uiq8UsIUWi
__builtin_sve_svshllb_n_u64
q2UWiq4UiIUWi
__builtin_sve_svshllt_n_s16
__builtin_sve_svshllt_n_s32
__builtin_sve_svshllt_n_s64
__builtin_sve_svshllt_n_u16
__builtin_sve_svshllt_n_u32
__builtin_sve_svshllt_n_u64
__builtin_sve_svshrnb_n_s16
__builtin_sve_svshrnb_n_s32
__builtin_sve_svshrnb_n_s64
__builtin_sve_svshrnb_n_u16
__builtin_sve_svshrnb_n_u32
__builtin_sve_svshrnb_n_u64
__builtin_sve_svshrnt_n_s16
__builtin_sve_svshrnt_n_s32
__builtin_sve_svshrnt_n_s64
__builtin_sve_svshrnt_n_u16
__builtin_sve_svshrnt_n_u32
__builtin_sve_svshrnt_n_u64
__builtin_sve_svsli_n_s16
__builtin_sve_svsli_n_s32
__builtin_sve_svsli_n_s64
__builtin_sve_svsli_n_s8
__builtin_sve_svsli_n_u16
__builtin_sve_svsli_n_u32
__builtin_sve_svsli_n_u64
__builtin_sve_svsli_n_u8
__builtin_sve_svsm4e_u32
__builtin_sve_svsm4ekey_u32
__builtin_sve_svsplice_bf16
__builtin_sve_svsplice_f16
__builtin_sve_svsplice_f32
__builtin_sve_svsplice_f64
__builtin_sve_svsplice_s16
__builtin_sve_svsplice_s32
__builtin_sve_svsplice_s64
__builtin_sve_svsplice_s8
__builtin_sve_svsplice_u16
__builtin_sve_svsplice_u32
__builtin_sve_svsplice_u64
__builtin_sve_svsplice_u8
__builtin_sve_svsqadd_n_u16_m
__builtin_sve_svsqadd_n_u16_x
__builtin_sve_svsqadd_n_u16_z
__builtin_sve_svsqadd_n_u32_m
__builtin_sve_svsqadd_n_u32_x
__builtin_sve_svsqadd_n_u32_z
__builtin_sve_svsqadd_n_u64_m
__builtin_sve_svsqadd_n_u64_x
__builtin_sve_svsqadd_n_u64_z
__builtin_sve_svsqadd_n_u8_m
__builtin_sve_svsqadd_n_u8_x
__builtin_sve_svsqadd_n_u8_z
__builtin_sve_svsqadd_u16_m
__builtin_sve_svsqadd_u16_x
__builtin_sve_svsqadd_u16_z
__builtin_sve_svsqadd_u32_m
__builtin_sve_svsqadd_u32_x
__builtin_sve_svsqadd_u32_z
__builtin_sve_svsqadd_u64_m
__builtin_sve_svsqadd_u64_x
__builtin_sve_svsqadd_u64_z
__builtin_sve_svsqadd_u8_m
__builtin_sve_svsqadd_u8_x
__builtin_sve_svsqadd_u8_z
__builtin_sve_svsqrt_f16_m
__builtin_sve_svsqrt_f16_x
__builtin_sve_svsqrt_f16_z
__builtin_sve_svsqrt_f32_m
__builtin_sve_svsqrt_f32_x
__builtin_sve_svsqrt_f32_z
__builtin_sve_svsqrt_f64_m
__builtin_sve_svsqrt_f64_x
__builtin_sve_svsqrt_f64_z
__builtin_sve_svsra_n_s16
__builtin_sve_svsra_n_s32
__builtin_sve_svsra_n_s64
__builtin_sve_svsra_n_s8
__builtin_sve_svsra_n_u16
__builtin_sve_svsra_n_u32
__builtin_sve_svsra_n_u64
__builtin_sve_svsra_n_u8
__builtin_sve_svsri_n_s16
__builtin_sve_svsri_n_s32
__builtin_sve_svsri_n_s64
__builtin_sve_svsri_n_s8
__builtin_sve_svsri_n_u16
__builtin_sve_svsri_n_u32
__builtin_sve_svsri_n_u64
__builtin_sve_svsri_n_u8
__builtin_sve_svst1_bf16
vq16by*q8y
__builtin_sve_svst1_f16
vq16bh*q8h
__builtin_sve_svst1_f32
vq16bf*q4f
__builtin_sve_svst1_f64
vq16bd*q2d
__builtin_sve_svst1_s16
vq16bSs*q8s
__builtin_sve_svst1_s32
vq16bSi*q4i
__builtin_sve_svst1_s64
vq16bSWi*q2Wi
__builtin_sve_svst1_s8
vq16bSc*q16Sc
__builtin_sve_svst1_scatter_s32index_f32
vq16bf*q4iq4f
__builtin_sve_svst1_scatter_s32index_s32
vq16bSi*q4iq4i
__builtin_sve_svst1_scatter_s32index_u32
vq16bUi*q4iq4Ui
__builtin_sve_svst1_scatter_s32offset_f32
__builtin_sve_svst1_scatter_s32offset_s32
__builtin_sve_svst1_scatter_s32offset_u32
__builtin_sve_svst1_scatter_s64index_f64
vq16bd*q2Wiq2d
__builtin_sve_svst1_scatter_s64index_s64
vq16bSWi*q2Wiq2Wi
__builtin_sve_svst1_scatter_s64index_u64
vq16bUWi*q2Wiq2UWi
__builtin_sve_svst1_scatter_s64offset_f64
__builtin_sve_svst1_scatter_s64offset_s64
__builtin_sve_svst1_scatter_s64offset_u64
__builtin_sve_svst1_scatter_u32base_f32
vq16bq4Uiq4f
__builtin_sve_svst1_scatter_u32base_index_f32
vq16bq4UiWiq4f
__builtin_sve_svst1_scatter_u32base_index_s32
vq16bq4UiWiq4i
__builtin_sve_svst1_scatter_u32base_index_u32
vq16bq4UiWiq4Ui
__builtin_sve_svst1_scatter_u32base_offset_f32
__builtin_sve_svst1_scatter_u32base_offset_s32
__builtin_sve_svst1_scatter_u32base_offset_u32
__builtin_sve_svst1_scatter_u32base_s32
vq16bq4Uiq4i
__builtin_sve_svst1_scatter_u32base_u32
vq16bq4Uiq4Ui
__builtin_sve_svst1_scatter_u32index_f32
vq16bf*q4Uiq4f
__builtin_sve_svst1_scatter_u32index_s32
vq16bSi*q4Uiq4i
__builtin_sve_svst1_scatter_u32index_u32
vq16bUi*q4Uiq4Ui
__builtin_sve_svst1_scatter_u32offset_f32
__builtin_sve_svst1_scatter_u32offset_s32
__builtin_sve_svst1_scatter_u32offset_u32
__builtin_sve_svst1_scatter_u64base_f64
vq16bq2UWiq2d
__builtin_sve_svst1_scatter_u64base_index_f64
vq16bq2UWiWiq2d
__builtin_sve_svst1_scatter_u64base_index_s64
vq16bq2UWiWiq2Wi
__builtin_sve_svst1_scatter_u64base_index_u64
vq16bq2UWiWiq2UWi
__builtin_sve_svst1_scatter_u64base_offset_f64
__builtin_sve_svst1_scatter_u64base_offset_s64
__builtin_sve_svst1_scatter_u64base_offset_u64
__builtin_sve_svst1_scatter_u64base_s64
vq16bq2UWiq2Wi
__builtin_sve_svst1_scatter_u64base_u64
vq16bq2UWiq2UWi
__builtin_sve_svst1_scatter_u64index_f64
vq16bd*q2UWiq2d
__builtin_sve_svst1_scatter_u64index_s64
vq16bSWi*q2UWiq2Wi
__builtin_sve_svst1_scatter_u64index_u64
vq16bUWi*q2UWiq2UWi
__builtin_sve_svst1_scatter_u64offset_f64
__builtin_sve_svst1_scatter_u64offset_s64
__builtin_sve_svst1_scatter_u64offset_u64
__builtin_sve_svst1_u16
vq16bUs*q8Us
__builtin_sve_svst1_u32
vq16bUi*q4Ui
__builtin_sve_svst1_u64
vq16bUWi*q2UWi
__builtin_sve_svst1_u8
vq16bUc*q16Uc
__builtin_sve_svst1_vnum_bf16
vq16by*Wiq8y
__builtin_sve_svst1_vnum_f16
vq16bh*Wiq8h
__builtin_sve_svst1_vnum_f32
vq16bf*Wiq4f
__builtin_sve_svst1_vnum_f64
vq16bd*Wiq2d
__builtin_sve_svst1_vnum_s16
vq16bSs*Wiq8s
__builtin_sve_svst1_vnum_s32
vq16bSi*Wiq4i
__builtin_sve_svst1_vnum_s64
vq16bSWi*Wiq2Wi
__builtin_sve_svst1_vnum_s8
vq16bSc*Wiq16Sc
__builtin_sve_svst1_vnum_u16
vq16bUs*Wiq8Us
__builtin_sve_svst1_vnum_u32
vq16bUi*Wiq4Ui
__builtin_sve_svst1_vnum_u64
vq16bUWi*Wiq2UWi
__builtin_sve_svst1_vnum_u8
vq16bUc*Wiq16Uc
__builtin_sve_svst1b_s16
vq16bSc*q8s
__builtin_sve_svst1b_s32
vq16bSc*q4i
__builtin_sve_svst1b_s64
vq16bSc*q2Wi
__builtin_sve_svst1b_scatter_s32offset_s32
vq16bSc*q4iq4i
__builtin_sve_svst1b_scatter_s32offset_u32
vq16bUc*q4iq4Ui
__builtin_sve_svst1b_scatter_s64offset_s64
vq16bSc*q2Wiq2Wi
__builtin_sve_svst1b_scatter_s64offset_u64
vq16bUc*q2Wiq2UWi
__builtin_sve_svst1b_scatter_u32base_offset_s32
__builtin_sve_svst1b_scatter_u32base_offset_u32
__builtin_sve_svst1b_scatter_u32base_s32
__builtin_sve_svst1b_scatter_u32base_u32
__builtin_sve_svst1b_scatter_u32offset_s32
vq16bSc*q4Uiq4i
__builtin_sve_svst1b_scatter_u32offset_u32
vq16bUc*q4Uiq4Ui
__builtin_sve_svst1b_scatter_u64base_offset_s64
__builtin_sve_svst1b_scatter_u64base_offset_u64
__builtin_sve_svst1b_scatter_u64base_s64
__builtin_sve_svst1b_scatter_u64base_u64
__builtin_sve_svst1b_scatter_u64offset_s64
vq16bSc*q2UWiq2Wi
__builtin_sve_svst1b_scatter_u64offset_u64
vq16bUc*q2UWiq2UWi
__builtin_sve_svst1b_u16
vq16bUc*q8Us
__builtin_sve_svst1b_u32
vq16bUc*q4Ui
__builtin_sve_svst1b_u64
vq16bUc*q2UWi
__builtin_sve_svst1b_vnum_s16
vq16bSc*Wiq8s
__builtin_sve_svst1b_vnum_s32
vq16bSc*Wiq4i
__builtin_sve_svst1b_vnum_s64
vq16bSc*Wiq2Wi
__builtin_sve_svst1b_vnum_u16
vq16bUc*Wiq8Us
__builtin_sve_svst1b_vnum_u32
vq16bUc*Wiq4Ui
__builtin_sve_svst1b_vnum_u64
vq16bUc*Wiq2UWi
__builtin_sve_svst1h_s32
vq16bSs*q4i
__builtin_sve_svst1h_s64
vq16bSs*q2Wi
__builtin_sve_svst1h_scatter_s32index_s32
vq16bSs*q4iq4i
__builtin_sve_svst1h_scatter_s32index_u32
vq16bUs*q4iq4Ui
__builtin_sve_svst1h_scatter_s32offset_s32
__builtin_sve_svst1h_scatter_s32offset_u32
__builtin_sve_svst1h_scatter_s64index_s64
vq16bSs*q2Wiq2Wi
__builtin_sve_svst1h_scatter_s64index_u64
vq16bUs*q2Wiq2UWi
__builtin_sve_svst1h_scatter_s64offset_s64
__builtin_sve_svst1h_scatter_s64offset_u64
__builtin_sve_svst1h_scatter_u32base_index_s32
__builtin_sve_svst1h_scatter_u32base_index_u32
__builtin_sve_svst1h_scatter_u32base_offset_s32
__builtin_sve_svst1h_scatter_u32base_offset_u32
__builtin_sve_svst1h_scatter_u32base_s32
__builtin_sve_svst1h_scatter_u32base_u32
__builtin_sve_svst1h_scatter_u32index_s32
vq16bSs*q4Uiq4i
__builtin_sve_svst1h_scatter_u32index_u32
vq16bUs*q4Uiq4Ui
__builtin_sve_svst1h_scatter_u32offset_s32
__builtin_sve_svst1h_scatter_u32offset_u32
__builtin_sve_svst1h_scatter_u64base_index_s64
__builtin_sve_svst1h_scatter_u64base_index_u64
__builtin_sve_svst1h_scatter_u64base_offset_s64
__builtin_sve_svst1h_scatter_u64base_offset_u64
__builtin_sve_svst1h_scatter_u64base_s64
__builtin_sve_svst1h_scatter_u64base_u64
__builtin_sve_svst1h_scatter_u64index_s64
vq16bSs*q2UWiq2Wi
__builtin_sve_svst1h_scatter_u64index_u64
vq16bUs*q2UWiq2UWi
__builtin_sve_svst1h_scatter_u64offset_s64
__builtin_sve_svst1h_scatter_u64offset_u64
__builtin_sve_svst1h_u32
vq16bUs*q4Ui
__builtin_sve_svst1h_u64
vq16bUs*q2UWi
__builtin_sve_svst1h_vnum_s32
vq16bSs*Wiq4i
__builtin_sve_svst1h_vnum_s64
vq16bSs*Wiq2Wi
__builtin_sve_svst1h_vnum_u32
vq16bUs*Wiq4Ui
__builtin_sve_svst1h_vnum_u64
vq16bUs*Wiq2UWi
__builtin_sve_svst1w_s64
vq16bSi*q2Wi
__builtin_sve_svst1w_scatter_s64index_s64
vq16bSi*q2Wiq2Wi
__builtin_sve_svst1w_scatter_s64index_u64
vq16bUi*q2Wiq2UWi
__builtin_sve_svst1w_scatter_s64offset_s64
__builtin_sve_svst1w_scatter_s64offset_u64
__builtin_sve_svst1w_scatter_u64base_index_s64
__builtin_sve_svst1w_scatter_u64base_index_u64
__builtin_sve_svst1w_scatter_u64base_offset_s64
__builtin_sve_svst1w_scatter_u64base_offset_u64
__builtin_sve_svst1w_scatter_u64base_s64
__builtin_sve_svst1w_scatter_u64base_u64
__builtin_sve_svst1w_scatter_u64index_s64
vq16bSi*q2UWiq2Wi
__builtin_sve_svst1w_scatter_u64index_u64
vq16bUi*q2UWiq2UWi
__builtin_sve_svst1w_scatter_u64offset_s64
__builtin_sve_svst1w_scatter_u64offset_u64
__builtin_sve_svst1w_u64
vq16bUi*q2UWi
__builtin_sve_svst1w_vnum_s64
vq16bSi*Wiq2Wi
__builtin_sve_svst1w_vnum_u64
vq16bUi*Wiq2UWi
__builtin_sve_svst2_bf16
vq16by*q16y
__builtin_sve_svst2_f16
vq16bh*q16h
__builtin_sve_svst2_f32
vq16bf*q8f
__builtin_sve_svst2_f64
vq16bd*q4d
__builtin_sve_svst2_s16
vq16bSs*q16s
__builtin_sve_svst2_s32
vq16bSi*q8i
__builtin_sve_svst2_s64
vq16bSWi*q4Wi
__builtin_sve_svst2_s8
vq16bSc*q32Sc
__builtin_sve_svst2_u16
vq16bUs*q16Us
__builtin_sve_svst2_u32
vq16bUi*q8Ui
__builtin_sve_svst2_u64
vq16bUWi*q4UWi
__builtin_sve_svst2_u8
vq16bUc*q32Uc
__builtin_sve_svst2_vnum_bf16
vq16by*Wiq16y
__builtin_sve_svst2_vnum_f16
vq16bh*Wiq16h
__builtin_sve_svst2_vnum_f32
vq16bf*Wiq8f
__builtin_sve_svst2_vnum_f64
vq16bd*Wiq4d
__builtin_sve_svst2_vnum_s16
vq16bSs*Wiq16s
__builtin_sve_svst2_vnum_s32
vq16bSi*Wiq8i
__builtin_sve_svst2_vnum_s64
vq16bSWi*Wiq4Wi
__builtin_sve_svst2_vnum_s8
vq16bSc*Wiq32Sc
__builtin_sve_svst2_vnum_u16
vq16bUs*Wiq16Us
__builtin_sve_svst2_vnum_u32
vq16bUi*Wiq8Ui
__builtin_sve_svst2_vnum_u64
vq16bUWi*Wiq4UWi
__builtin_sve_svst2_vnum_u8
vq16bUc*Wiq32Uc
__builtin_sve_svst3_bf16
vq16by*q24y
__builtin_sve_svst3_f16
vq16bh*q24h
__builtin_sve_svst3_f32
vq16bf*q12f
__builtin_sve_svst3_f64
vq16bd*q6d
__builtin_sve_svst3_s16
vq16bSs*q24s
__builtin_sve_svst3_s32
vq16bSi*q12i
__builtin_sve_svst3_s64
vq16bSWi*q6Wi
__builtin_sve_svst3_s8
vq16bSc*q48Sc
__builtin_sve_svst3_u16
vq16bUs*q24Us
__builtin_sve_svst3_u32
vq16bUi*q12Ui
__builtin_sve_svst3_u64
vq16bUWi*q6UWi
__builtin_sve_svst3_u8
vq16bUc*q48Uc
__builtin_sve_svst3_vnum_bf16
vq16by*Wiq24y
__builtin_sve_svst3_vnum_f16
vq16bh*Wiq24h
__builtin_sve_svst3_vnum_f32
vq16bf*Wiq12f
__builtin_sve_svst3_vnum_f64
vq16bd*Wiq6d
__builtin_sve_svst3_vnum_s16
vq16bSs*Wiq24s
__builtin_sve_svst3_vnum_s32
vq16bSi*Wiq12i
__builtin_sve_svst3_vnum_s64
vq16bSWi*Wiq6Wi
__builtin_sve_svst3_vnum_s8
vq16bSc*Wiq48Sc
__builtin_sve_svst3_vnum_u16
vq16bUs*Wiq24Us
__builtin_sve_svst3_vnum_u32
vq16bUi*Wiq12Ui
__builtin_sve_svst3_vnum_u64
vq16bUWi*Wiq6UWi
__builtin_sve_svst3_vnum_u8
vq16bUc*Wiq48Uc
__builtin_sve_svst4_bf16
vq16by*q32y
__builtin_sve_svst4_f16
vq16bh*q32h
__builtin_sve_svst4_f32
vq16bf*q16f
__builtin_sve_svst4_f64
vq16bd*q8d
__builtin_sve_svst4_s16
vq16bSs*q32s
__builtin_sve_svst4_s32
vq16bSi*q16i
__builtin_sve_svst4_s64
vq16bSWi*q8Wi
__builtin_sve_svst4_s8
vq16bSc*q64Sc
__builtin_sve_svst4_u16
vq16bUs*q32Us
__builtin_sve_svst4_u32
vq16bUi*q16Ui
__builtin_sve_svst4_u64
vq16bUWi*q8UWi
__builtin_sve_svst4_u8
vq16bUc*q64Uc
__builtin_sve_svst4_vnum_bf16
vq16by*Wiq32y
__builtin_sve_svst4_vnum_f16
vq16bh*Wiq32h
__builtin_sve_svst4_vnum_f32
vq16bf*Wiq16f
__builtin_sve_svst4_vnum_f64
vq16bd*Wiq8d
__builtin_sve_svst4_vnum_s16
vq16bSs*Wiq32s
__builtin_sve_svst4_vnum_s32
vq16bSi*Wiq16i
__builtin_sve_svst4_vnum_s64
vq16bSWi*Wiq8Wi
__builtin_sve_svst4_vnum_s8
vq16bSc*Wiq64Sc
__builtin_sve_svst4_vnum_u16
vq16bUs*Wiq32Us
__builtin_sve_svst4_vnum_u32
vq16bUi*Wiq16Ui
__builtin_sve_svst4_vnum_u64
vq16bUWi*Wiq8UWi
__builtin_sve_svst4_vnum_u8
vq16bUc*Wiq64Uc
__builtin_sve_svstnt1_bf16
__builtin_sve_svstnt1_f16
__builtin_sve_svstnt1_f32
__builtin_sve_svstnt1_f64
__builtin_sve_svstnt1_s16
__builtin_sve_svstnt1_s32
__builtin_sve_svstnt1_s64
__builtin_sve_svstnt1_s8
__builtin_sve_svstnt1_scatter_s64index_f64
__builtin_sve_svstnt1_scatter_s64index_s64
__builtin_sve_svstnt1_scatter_s64index_u64
__builtin_sve_svstnt1_scatter_s64offset_f64
__builtin_sve_svstnt1_scatter_s64offset_s64
__builtin_sve_svstnt1_scatter_s64offset_u64
__builtin_sve_svstnt1_scatter_u32base_f32
__builtin_sve_svstnt1_scatter_u32base_index_f32
__builtin_sve_svstnt1_scatter_u32base_index_s32
__builtin_sve_svstnt1_scatter_u32base_index_u32
__builtin_sve_svstnt1_scatter_u32base_offset_f32
__builtin_sve_svstnt1_scatter_u32base_offset_s32
__builtin_sve_svstnt1_scatter_u32base_offset_u32
__builtin_sve_svstnt1_scatter_u32base_s32
__builtin_sve_svstnt1_scatter_u32base_u32
__builtin_sve_svstnt1_scatter_u32offset_f32
__builtin_sve_svstnt1_scatter_u32offset_s32
__builtin_sve_svstnt1_scatter_u32offset_u32
__builtin_sve_svstnt1_scatter_u64base_f64
__builtin_sve_svstnt1_scatter_u64base_index_f64
__builtin_sve_svstnt1_scatter_u64base_index_s64
__builtin_sve_svstnt1_scatter_u64base_index_u64
__builtin_sve_svstnt1_scatter_u64base_offset_f64
__builtin_sve_svstnt1_scatter_u64base_offset_s64
__builtin_sve_svstnt1_scatter_u64base_offset_u64
__builtin_sve_svstnt1_scatter_u64base_s64
__builtin_sve_svstnt1_scatter_u64base_u64
__builtin_sve_svstnt1_scatter_u64index_f64
__builtin_sve_svstnt1_scatter_u64index_s64
__builtin_sve_svstnt1_scatter_u64index_u64
__builtin_sve_svstnt1_scatter_u64offset_f64
__builtin_sve_svstnt1_scatter_u64offset_s64
__builtin_sve_svstnt1_scatter_u64offset_u64
__builtin_sve_svstnt1_u16
__builtin_sve_svstnt1_u32
__builtin_sve_svstnt1_u64
__builtin_sve_svstnt1_u8
__builtin_sve_svstnt1_vnum_bf16
__builtin_sve_svstnt1_vnum_f16
__builtin_sve_svstnt1_vnum_f32
__builtin_sve_svstnt1_vnum_f64
__builtin_sve_svstnt1_vnum_s16
__builtin_sve_svstnt1_vnum_s32
__builtin_sve_svstnt1_vnum_s64
__builtin_sve_svstnt1_vnum_s8
__builtin_sve_svstnt1_vnum_u16
__builtin_sve_svstnt1_vnum_u32
__builtin_sve_svstnt1_vnum_u64
__builtin_sve_svstnt1_vnum_u8
__builtin_sve_svstnt1b_scatter_s64offset_s64
__builtin_sve_svstnt1b_scatter_s64offset_u64
__builtin_sve_svstnt1b_scatter_u32base_offset_s32
__builtin_sve_svstnt1b_scatter_u32base_offset_u32
__builtin_sve_svstnt1b_scatter_u32base_s32
__builtin_sve_svstnt1b_scatter_u32base_u32
__builtin_sve_svstnt1b_scatter_u32offset_s32
__builtin_sve_svstnt1b_scatter_u32offset_u32
__builtin_sve_svstnt1b_scatter_u64base_offset_s64
__builtin_sve_svstnt1b_scatter_u64base_offset_u64
__builtin_sve_svstnt1b_scatter_u64base_s64
__builtin_sve_svstnt1b_scatter_u64base_u64
__builtin_sve_svstnt1b_scatter_u64offset_s64
__builtin_sve_svstnt1b_scatter_u64offset_u64
__builtin_sve_svstnt1h_scatter_s64index_s64
__builtin_sve_svstnt1h_scatter_s64index_u64
__builtin_sve_svstnt1h_scatter_s64offset_s64
__builtin_sve_svstnt1h_scatter_s64offset_u64
__builtin_sve_svstnt1h_scatter_u32base_index_s32
__builtin_sve_svstnt1h_scatter_u32base_index_u32
__builtin_sve_svstnt1h_scatter_u32base_offset_s32
__builtin_sve_svstnt1h_scatter_u32base_offset_u32
__builtin_sve_svstnt1h_scatter_u32base_s32
__builtin_sve_svstnt1h_scatter_u32base_u32
__builtin_sve_svstnt1h_scatter_u32offset_s32
__builtin_sve_svstnt1h_scatter_u32offset_u32
__builtin_sve_svstnt1h_scatter_u64base_index_s64
__builtin_sve_svstnt1h_scatter_u64base_index_u64
__builtin_sve_svstnt1h_scatter_u64base_offset_s64
__builtin_sve_svstnt1h_scatter_u64base_offset_u64
__builtin_sve_svstnt1h_scatter_u64base_s64
__builtin_sve_svstnt1h_scatter_u64base_u64
__builtin_sve_svstnt1h_scatter_u64index_s64
__builtin_sve_svstnt1h_scatter_u64index_u64
__builtin_sve_svstnt1h_scatter_u64offset_s64
__builtin_sve_svstnt1h_scatter_u64offset_u64
__builtin_sve_svstnt1w_scatter_s64index_s64
__builtin_sve_svstnt1w_scatter_s64index_u64
__builtin_sve_svstnt1w_scatter_s64offset_s64
__builtin_sve_svstnt1w_scatter_s64offset_u64
__builtin_sve_svstnt1w_scatter_u64base_index_s64
__builtin_sve_svstnt1w_scatter_u64base_index_u64
__builtin_sve_svstnt1w_scatter_u64base_offset_s64
__builtin_sve_svstnt1w_scatter_u64base_offset_u64
__builtin_sve_svstnt1w_scatter_u64base_s64
__builtin_sve_svstnt1w_scatter_u64base_u64
__builtin_sve_svstnt1w_scatter_u64index_s64
__builtin_sve_svstnt1w_scatter_u64index_u64
__builtin_sve_svstnt1w_scatter_u64offset_s64
__builtin_sve_svstnt1w_scatter_u64offset_u64
__builtin_sve_svsub_f16_m
__builtin_sve_svsub_f16_x
__builtin_sve_svsub_f16_z
__builtin_sve_svsub_f32_m
__builtin_sve_svsub_f32_x
__builtin_sve_svsub_f32_z
__builtin_sve_svsub_f64_m
__builtin_sve_svsub_f64_x
__builtin_sve_svsub_f64_z
__builtin_sve_svsub_n_f16_m
__builtin_sve_svsub_n_f16_x
__builtin_sve_svsub_n_f16_z
__builtin_sve_svsub_n_f32_m
__builtin_sve_svsub_n_f32_x
__builtin_sve_svsub_n_f32_z
__builtin_sve_svsub_n_f64_m
__builtin_sve_svsub_n_f64_x
__builtin_sve_svsub_n_f64_z
__builtin_sve_svsub_n_s16_m
__builtin_sve_svsub_n_s16_x
__builtin_sve_svsub_n_s16_z
__builtin_sve_svsub_n_s32_m
__builtin_sve_svsub_n_s32_x
__builtin_sve_svsub_n_s32_z
__builtin_sve_svsub_n_s64_m
__builtin_sve_svsub_n_s64_x
__builtin_sve_svsub_n_s64_z
__builtin_sve_svsub_n_s8_m
__builtin_sve_svsub_n_s8_x
__builtin_sve_svsub_n_s8_z
__builtin_sve_svsub_n_u16_m
__builtin_sve_svsub_n_u16_x
__builtin_sve_svsub_n_u16_z
__builtin_sve_svsub_n_u32_m
__builtin_sve_svsub_n_u32_x
__builtin_sve_svsub_n_u32_z
__builtin_sve_svsub_n_u64_m
__builtin_sve_svsub_n_u64_x
__builtin_sve_svsub_n_u64_z
__builtin_sve_svsub_n_u8_m
__builtin_sve_svsub_n_u8_x
__builtin_sve_svsub_n_u8_z
__builtin_sve_svsub_s16_m
__builtin_sve_svsub_s16_x
__builtin_sve_svsub_s16_z
__builtin_sve_svsub_s32_m
__builtin_sve_svsub_s32_x
__builtin_sve_svsub_s32_z
__builtin_sve_svsub_s64_m
__builtin_sve_svsub_s64_x
__builtin_sve_svsub_s64_z
__builtin_sve_svsub_s8_m
__builtin_sve_svsub_s8_x
__builtin_sve_svsub_s8_z
__builtin_sve_svsub_u16_m
__builtin_sve_svsub_u16_x
__builtin_sve_svsub_u16_z
__builtin_sve_svsub_u32_m
__builtin_sve_svsub_u32_x
__builtin_sve_svsub_u32_z
__builtin_sve_svsub_u64_m
__builtin_sve_svsub_u64_x
__builtin_sve_svsub_u64_z
__builtin_sve_svsub_u8_m
__builtin_sve_svsub_u8_x
__builtin_sve_svsub_u8_z
__builtin_sve_svsubhnb_n_s16
__builtin_sve_svsubhnb_n_s32
__builtin_sve_svsubhnb_n_s64
__builtin_sve_svsubhnb_n_u16
__builtin_sve_svsubhnb_n_u32
__builtin_sve_svsubhnb_n_u64
__builtin_sve_svsubhnb_s16
__builtin_sve_svsubhnb_s32
__builtin_sve_svsubhnb_s64
__builtin_sve_svsubhnb_u16
__builtin_sve_svsubhnb_u32
__builtin_sve_svsubhnb_u64
__builtin_sve_svsubhnt_n_s16
__builtin_sve_svsubhnt_n_s32
__builtin_sve_svsubhnt_n_s64
__builtin_sve_svsubhnt_n_u16
__builtin_sve_svsubhnt_n_u32
__builtin_sve_svsubhnt_n_u64
__builtin_sve_svsubhnt_s16
__builtin_sve_svsubhnt_s32
__builtin_sve_svsubhnt_s64
__builtin_sve_svsubhnt_u16
__builtin_sve_svsubhnt_u32
__builtin_sve_svsubhnt_u64
__builtin_sve_svsublb_n_s16
__builtin_sve_svsublb_n_s32
__builtin_sve_svsublb_n_s64
__builtin_sve_svsublb_n_u16
__builtin_sve_svsublb_n_u32
__builtin_sve_svsublb_n_u64
__builtin_sve_svsublb_s16
__builtin_sve_svsublb_s32
__builtin_sve_svsublb_s64
__builtin_sve_svsublb_u16
__builtin_sve_svsublb_u32
__builtin_sve_svsublb_u64
__builtin_sve_svsublbt_n_s16
__builtin_sve_svsublbt_n_s32
__builtin_sve_svsublbt_n_s64
__builtin_sve_svsublbt_s16
__builtin_sve_svsublbt_s32
__builtin_sve_svsublbt_s64
__builtin_sve_svsublt_n_s16
__builtin_sve_svsublt_n_s32
__builtin_sve_svsublt_n_s64
__builtin_sve_svsublt_n_u16
__builtin_sve_svsublt_n_u32
__builtin_sve_svsublt_n_u64
__builtin_sve_svsublt_s16
__builtin_sve_svsublt_s32
__builtin_sve_svsublt_s64
__builtin_sve_svsublt_u16
__builtin_sve_svsublt_u32
__builtin_sve_svsublt_u64
__builtin_sve_svsubltb_n_s16
__builtin_sve_svsubltb_n_s32
__builtin_sve_svsubltb_n_s64
__builtin_sve_svsubltb_s16
__builtin_sve_svsubltb_s32
__builtin_sve_svsubltb_s64
__builtin_sve_svsubr_f16_m
__builtin_sve_svsubr_f16_x
__builtin_sve_svsubr_f16_z
__builtin_sve_svsubr_f32_m
__builtin_sve_svsubr_f32_x
__builtin_sve_svsubr_f32_z
__builtin_sve_svsubr_f64_m
__builtin_sve_svsubr_f64_x
__builtin_sve_svsubr_f64_z
__builtin_sve_svsubr_n_f16_m
__builtin_sve_svsubr_n_f16_x
__builtin_sve_svsubr_n_f16_z
__builtin_sve_svsubr_n_f32_m
__builtin_sve_svsubr_n_f32_x
__builtin_sve_svsubr_n_f32_z
__builtin_sve_svsubr_n_f64_m
__builtin_sve_svsubr_n_f64_x
__builtin_sve_svsubr_n_f64_z
__builtin_sve_svsubr_n_s16_m
__builtin_sve_svsubr_n_s16_x
__builtin_sve_svsubr_n_s16_z
__builtin_sve_svsubr_n_s32_m
__builtin_sve_svsubr_n_s32_x
__builtin_sve_svsubr_n_s32_z
__builtin_sve_svsubr_n_s64_m
__builtin_sve_svsubr_n_s64_x
__builtin_sve_svsubr_n_s64_z
__builtin_sve_svsubr_n_s8_m
__builtin_sve_svsubr_n_s8_x
__builtin_sve_svsubr_n_s8_z
__builtin_sve_svsubr_n_u16_m
__builtin_sve_svsubr_n_u16_x
__builtin_sve_svsubr_n_u16_z
__builtin_sve_svsubr_n_u32_m
__builtin_sve_svsubr_n_u32_x
__builtin_sve_svsubr_n_u32_z
__builtin_sve_svsubr_n_u64_m
__builtin_sve_svsubr_n_u64_x
__builtin_sve_svsubr_n_u64_z
__builtin_sve_svsubr_n_u8_m
__builtin_sve_svsubr_n_u8_x
__builtin_sve_svsubr_n_u8_z
__builtin_sve_svsubr_s16_m
__builtin_sve_svsubr_s16_x
__builtin_sve_svsubr_s16_z
__builtin_sve_svsubr_s32_m
__builtin_sve_svsubr_s32_x
__builtin_sve_svsubr_s32_z
__builtin_sve_svsubr_s64_m
__builtin_sve_svsubr_s64_x
__builtin_sve_svsubr_s64_z
__builtin_sve_svsubr_s8_m
__builtin_sve_svsubr_s8_x
__builtin_sve_svsubr_s8_z
__builtin_sve_svsubr_u16_m
__builtin_sve_svsubr_u16_x
__builtin_sve_svsubr_u16_z
__builtin_sve_svsubr_u32_m
__builtin_sve_svsubr_u32_x
__builtin_sve_svsubr_u32_z
__builtin_sve_svsubr_u64_m
__builtin_sve_svsubr_u64_x
__builtin_sve_svsubr_u64_z
__builtin_sve_svsubr_u8_m
__builtin_sve_svsubr_u8_x
__builtin_sve_svsubr_u8_z
__builtin_sve_svsubwb_n_s16
__builtin_sve_svsubwb_n_s32
__builtin_sve_svsubwb_n_s64
__builtin_sve_svsubwb_n_u16
__builtin_sve_svsubwb_n_u32
__builtin_sve_svsubwb_n_u64
__builtin_sve_svsubwb_s16
__builtin_sve_svsubwb_s32
__builtin_sve_svsubwb_s64
__builtin_sve_svsubwb_u16
__builtin_sve_svsubwb_u32
__builtin_sve_svsubwb_u64
__builtin_sve_svsubwt_n_s16
__builtin_sve_svsubwt_n_s32
__builtin_sve_svsubwt_n_s64
__builtin_sve_svsubwt_n_u16
__builtin_sve_svsubwt_n_u32
__builtin_sve_svsubwt_n_u64
__builtin_sve_svsubwt_s16
__builtin_sve_svsubwt_s32
__builtin_sve_svsubwt_s64
__builtin_sve_svsubwt_u16
__builtin_sve_svsubwt_u32
__builtin_sve_svsubwt_u64
__builtin_sve_svsudot_lane_s32
q4iq4iq16Scq16UcIUWi
__builtin_sve_svsudot_n_s32
q4iq4iq16ScUc
__builtin_sve_svsudot_s32
q4iq4iq16Scq16Uc
__builtin_sve_svtbl2_bf16
q8yq16yq8Us
__builtin_sve_svtbl2_f16
q8hq16hq8Us
__builtin_sve_svtbl2_f32
q4fq8fq4Ui
__builtin_sve_svtbl2_f64
q2dq4dq2UWi
__builtin_sve_svtbl2_s16
q8sq16sq8Us
__builtin_sve_svtbl2_s32
q4iq8iq4Ui
__builtin_sve_svtbl2_s64
q2Wiq4Wiq2UWi
__builtin_sve_svtbl2_s8
q16Scq32Scq16Uc
__builtin_sve_svtbl2_u16
q8Usq16Usq8Us
__builtin_sve_svtbl2_u32
q4Uiq8Uiq4Ui
__builtin_sve_svtbl2_u64
q2UWiq4UWiq2UWi
__builtin_sve_svtbl2_u8
q16Ucq32Ucq16Uc
__builtin_sve_svtbl_bf16
q8yq8yq8Us
__builtin_sve_svtbl_f16
q8hq8hq8Us
__builtin_sve_svtbl_f32
q4fq4fq4Ui
__builtin_sve_svtbl_f64
q2dq2dq2UWi
__builtin_sve_svtbl_s16
q8sq8sq8Us
__builtin_sve_svtbl_s32
q4iq4iq4Ui
__builtin_sve_svtbl_s64
q2Wiq2Wiq2UWi
__builtin_sve_svtbl_s8
q16Scq16Scq16Uc
__builtin_sve_svtbl_u16
__builtin_sve_svtbl_u32
__builtin_sve_svtbl_u64
__builtin_sve_svtbl_u8
__builtin_sve_svtbx_bf16
q8yq8yq8yq8Us
__builtin_sve_svtbx_f16
q8hq8hq8hq8Us
__builtin_sve_svtbx_f32
q4fq4fq4fq4Ui
__builtin_sve_svtbx_f64
q2dq2dq2dq2UWi
__builtin_sve_svtbx_s16
q8sq8sq8sq8Us
__builtin_sve_svtbx_s32
q4iq4iq4iq4Ui
__builtin_sve_svtbx_s64
q2Wiq2Wiq2Wiq2UWi
__builtin_sve_svtbx_s8
q16Scq16Scq16Scq16Uc
__builtin_sve_svtbx_u16
__builtin_sve_svtbx_u32
__builtin_sve_svtbx_u64
__builtin_sve_svtbx_u8
__builtin_sve_svtmad_f16
__builtin_sve_svtmad_f32
__builtin_sve_svtmad_f64
__builtin_sve_svtrn1_b16
__builtin_sve_svtrn1_b32
__builtin_sve_svtrn1_b64
__builtin_sve_svtrn1_b8
__builtin_sve_svtrn1_bf16
q8yq8yq8y
__builtin_sve_svtrn1_f16
__builtin_sve_svtrn1_f32
__builtin_sve_svtrn1_f64
__builtin_sve_svtrn1_s16
__builtin_sve_svtrn1_s32
__builtin_sve_svtrn1_s64
__builtin_sve_svtrn1_s8
__builtin_sve_svtrn1_u16
__builtin_sve_svtrn1_u32
__builtin_sve_svtrn1_u64
__builtin_sve_svtrn1_u8
__builtin_sve_svtrn1q_bf16
__builtin_sve_svtrn1q_f16
__builtin_sve_svtrn1q_f32
__builtin_sve_svtrn1q_f64
__builtin_sve_svtrn1q_s16
__builtin_sve_svtrn1q_s32
__builtin_sve_svtrn1q_s64
__builtin_sve_svtrn1q_s8
__builtin_sve_svtrn1q_u16
__builtin_sve_svtrn1q_u32
__builtin_sve_svtrn1q_u64
__builtin_sve_svtrn1q_u8
__builtin_sve_svtrn2_b16
__builtin_sve_svtrn2_b32
__builtin_sve_svtrn2_b64
__builtin_sve_svtrn2_b8
__builtin_sve_svtrn2_bf16
__builtin_sve_svtrn2_f16
__builtin_sve_svtrn2_f32
__builtin_sve_svtrn2_f64
__builtin_sve_svtrn2_s16
__builtin_sve_svtrn2_s32
__builtin_sve_svtrn2_s64
__builtin_sve_svtrn2_s8
__builtin_sve_svtrn2_u16
__builtin_sve_svtrn2_u32
__builtin_sve_svtrn2_u64
__builtin_sve_svtrn2_u8
__builtin_sve_svtrn2q_bf16
__builtin_sve_svtrn2q_f16
__builtin_sve_svtrn2q_f32
__builtin_sve_svtrn2q_f64
__builtin_sve_svtrn2q_s16
__builtin_sve_svtrn2q_s32
__builtin_sve_svtrn2q_s64
__builtin_sve_svtrn2q_s8
__builtin_sve_svtrn2q_u16
__builtin_sve_svtrn2q_u32
__builtin_sve_svtrn2q_u64
__builtin_sve_svtrn2q_u8
__builtin_sve_svtsmul_f16
__builtin_sve_svtsmul_f32
__builtin_sve_svtsmul_f64
__builtin_sve_svtssel_f16
__builtin_sve_svtssel_f32
__builtin_sve_svtssel_f64
__builtin_sve_svundef2_bf16
q16y
__builtin_sve_svundef2_f16
q16h
__builtin_sve_svundef2_f32
__builtin_sve_svundef2_f64
__builtin_sve_svundef2_s16
q16s
__builtin_sve_svundef2_s32
__builtin_sve_svundef2_s64
q4Wi
__builtin_sve_svundef2_s8
q32Sc
__builtin_sve_svundef2_u16
q16Us
__builtin_sve_svundef2_u32
q8Ui
__builtin_sve_svundef2_u64
q4UWi
__builtin_sve_svundef2_u8
q32Uc
__builtin_sve_svundef3_bf16
q24y
__builtin_sve_svundef3_f16
q24h
__builtin_sve_svundef3_f32
q12f
__builtin_sve_svundef3_f64
__builtin_sve_svundef3_s16
q24s
__builtin_sve_svundef3_s32
q12i
__builtin_sve_svundef3_s64
q6Wi
__builtin_sve_svundef3_s8
q48Sc
__builtin_sve_svundef3_u16
q24Us
__builtin_sve_svundef3_u32
q12Ui
__builtin_sve_svundef3_u64
q6UWi
__builtin_sve_svundef3_u8
q48Uc
__builtin_sve_svundef4_bf16
q32y
__builtin_sve_svundef4_f16
q32h
__builtin_sve_svundef4_f32
q16f
__builtin_sve_svundef4_f64
__builtin_sve_svundef4_s16
q32s
__builtin_sve_svundef4_s32
q16i
__builtin_sve_svundef4_s64
q8Wi
__builtin_sve_svundef4_s8
q64Sc
__builtin_sve_svundef4_u16
q32Us
__builtin_sve_svundef4_u32
q16Ui
__builtin_sve_svundef4_u64
q8UWi
__builtin_sve_svundef4_u8
q64Uc
__builtin_sve_svundef_bf16
__builtin_sve_svundef_f16
__builtin_sve_svundef_f32
__builtin_sve_svundef_f64
__builtin_sve_svundef_s16
__builtin_sve_svundef_s32
__builtin_sve_svundef_s64
q2Wi
__builtin_sve_svundef_s8
q16Sc
__builtin_sve_svundef_u16
q8Us
__builtin_sve_svundef_u32
q4Ui
__builtin_sve_svundef_u64
q2UWi
__builtin_sve_svundef_u8
q16Uc
__builtin_sve_svunpkhi_b
__builtin_sve_svunpkhi_s16
__builtin_sve_svunpkhi_s32
__builtin_sve_svunpkhi_s64
__builtin_sve_svunpkhi_u16
__builtin_sve_svunpkhi_u32
__builtin_sve_svunpkhi_u64
__builtin_sve_svunpklo_b
__builtin_sve_svunpklo_s16
__builtin_sve_svunpklo_s32
__builtin_sve_svunpklo_s64
__builtin_sve_svunpklo_u16
__builtin_sve_svunpklo_u32
__builtin_sve_svunpklo_u64
__builtin_sve_svuqadd_n_s16_m
__builtin_sve_svuqadd_n_s16_x
__builtin_sve_svuqadd_n_s16_z
__builtin_sve_svuqadd_n_s32_m
__builtin_sve_svuqadd_n_s32_x
__builtin_sve_svuqadd_n_s32_z
__builtin_sve_svuqadd_n_s64_m
__builtin_sve_svuqadd_n_s64_x
__builtin_sve_svuqadd_n_s64_z
__builtin_sve_svuqadd_n_s8_m
__builtin_sve_svuqadd_n_s8_x
__builtin_sve_svuqadd_n_s8_z
__builtin_sve_svuqadd_s16_m
__builtin_sve_svuqadd_s16_x
__builtin_sve_svuqadd_s16_z
__builtin_sve_svuqadd_s32_m
__builtin_sve_svuqadd_s32_x
__builtin_sve_svuqadd_s32_z
__builtin_sve_svuqadd_s64_m
__builtin_sve_svuqadd_s64_x
__builtin_sve_svuqadd_s64_z
__builtin_sve_svuqadd_s8_m
__builtin_sve_svuqadd_s8_x
__builtin_sve_svuqadd_s8_z
__builtin_sve_svusdot_lane_s32
q4iq4iq16Ucq16ScIUWi
__builtin_sve_svusdot_n_s32
q4iq4iq16UcSc
__builtin_sve_svusdot_s32
q4iq4iq16Ucq16Sc
__builtin_sve_svusmmla_s32
__builtin_sve_svuzp1_b16
__builtin_sve_svuzp1_b32
__builtin_sve_svuzp1_b64
__builtin_sve_svuzp1_b8
__builtin_sve_svuzp1_bf16
__builtin_sve_svuzp1_f16
__builtin_sve_svuzp1_f32
__builtin_sve_svuzp1_f64
__builtin_sve_svuzp1_s16
__builtin_sve_svuzp1_s32
__builtin_sve_svuzp1_s64
__builtin_sve_svuzp1_s8
__builtin_sve_svuzp1_u16
__builtin_sve_svuzp1_u32
__builtin_sve_svuzp1_u64
__builtin_sve_svuzp1_u8
__builtin_sve_svuzp1q_bf16
__builtin_sve_svuzp1q_f16
__builtin_sve_svuzp1q_f32
__builtin_sve_svuzp1q_f64
__builtin_sve_svuzp1q_s16
__builtin_sve_svuzp1q_s32
__builtin_sve_svuzp1q_s64
__builtin_sve_svuzp1q_s8
__builtin_sve_svuzp1q_u16
__builtin_sve_svuzp1q_u32
__builtin_sve_svuzp1q_u64
__builtin_sve_svuzp1q_u8
__builtin_sve_svuzp2_b16
__builtin_sve_svuzp2_b32
__builtin_sve_svuzp2_b64
__builtin_sve_svuzp2_b8
__builtin_sve_svuzp2_bf16
__builtin_sve_svuzp2_f16
__builtin_sve_svuzp2_f32
__builtin_sve_svuzp2_f64
__builtin_sve_svuzp2_s16
__builtin_sve_svuzp2_s32
__builtin_sve_svuzp2_s64
__builtin_sve_svuzp2_s8
__builtin_sve_svuzp2_u16
__builtin_sve_svuzp2_u32
__builtin_sve_svuzp2_u64
__builtin_sve_svuzp2_u8
__builtin_sve_svuzp2q_bf16
__builtin_sve_svuzp2q_f16
__builtin_sve_svuzp2q_f32
__builtin_sve_svuzp2q_f64
__builtin_sve_svuzp2q_s16
__builtin_sve_svuzp2q_s32
__builtin_sve_svuzp2q_s64
__builtin_sve_svuzp2q_s8
__builtin_sve_svuzp2q_u16
__builtin_sve_svuzp2q_u32
__builtin_sve_svuzp2q_u64
__builtin_sve_svuzp2q_u8
__builtin_sve_svwhilege_b16_s32
q16bii
__builtin_sve_svwhilege_b16_s64
q16bWiWi
__builtin_sve_svwhilege_b16_u32
q16bUiUi
__builtin_sve_svwhilege_b16_u64
q16bUWiUWi
__builtin_sve_svwhilege_b32_s32
__builtin_sve_svwhilege_b32_s64
__builtin_sve_svwhilege_b32_u32
__builtin_sve_svwhilege_b32_u64
__builtin_sve_svwhilege_b64_s32
__builtin_sve_svwhilege_b64_s64
__builtin_sve_svwhilege_b64_u32
__builtin_sve_svwhilege_b64_u64
__builtin_sve_svwhilege_b8_s32
__builtin_sve_svwhilege_b8_s64
__builtin_sve_svwhilege_b8_u32
__builtin_sve_svwhilege_b8_u64
__builtin_sve_svwhilegt_b16_s32
__builtin_sve_svwhilegt_b16_s64
__builtin_sve_svwhilegt_b16_u32
__builtin_sve_svwhilegt_b16_u64
__builtin_sve_svwhilegt_b32_s32
__builtin_sve_svwhilegt_b32_s64
__builtin_sve_svwhilegt_b32_u32
__builtin_sve_svwhilegt_b32_u64
__builtin_sve_svwhilegt_b64_s32
__builtin_sve_svwhilegt_b64_s64
__builtin_sve_svwhilegt_b64_u32
__builtin_sve_svwhilegt_b64_u64
__builtin_sve_svwhilegt_b8_s32
__builtin_sve_svwhilegt_b8_s64
__builtin_sve_svwhilegt_b8_u32
__builtin_sve_svwhilegt_b8_u64
__builtin_sve_svwhilele_b16_s32
__builtin_sve_svwhilele_b16_s64
__builtin_sve_svwhilele_b16_u32
__builtin_sve_svwhilele_b16_u64
__builtin_sve_svwhilele_b32_s32
__builtin_sve_svwhilele_b32_s64
__builtin_sve_svwhilele_b32_u32
__builtin_sve_svwhilele_b32_u64
__builtin_sve_svwhilele_b64_s32
__builtin_sve_svwhilele_b64_s64
__builtin_sve_svwhilele_b64_u32
__builtin_sve_svwhilele_b64_u64
__builtin_sve_svwhilele_b8_s32
__builtin_sve_svwhilele_b8_s64
__builtin_sve_svwhilele_b8_u32
__builtin_sve_svwhilele_b8_u64
__builtin_sve_svwhilelt_b16_s32
__builtin_sve_svwhilelt_b16_s64
__builtin_sve_svwhilelt_b16_u32
__builtin_sve_svwhilelt_b16_u64
__builtin_sve_svwhilelt_b32_s32
__builtin_sve_svwhilelt_b32_s64
__builtin_sve_svwhilelt_b32_u32
__builtin_sve_svwhilelt_b32_u64
__builtin_sve_svwhilelt_b64_s32
__builtin_sve_svwhilelt_b64_s64
__builtin_sve_svwhilelt_b64_u32
__builtin_sve_svwhilelt_b64_u64
__builtin_sve_svwhilelt_b8_s32
__builtin_sve_svwhilelt_b8_s64
__builtin_sve_svwhilelt_b8_u32
__builtin_sve_svwhilelt_b8_u64
__builtin_sve_svwhilerw_bf16
q16byC*yC*
__builtin_sve_svwhilerw_f16
q16bhC*hC*
__builtin_sve_svwhilerw_f32
q16bfC*fC*
__builtin_sve_svwhilerw_f64
q16bdC*dC*
__builtin_sve_svwhilerw_s16
q16bSsC*SsC*
__builtin_sve_svwhilerw_s32
q16bSiC*SiC*
__builtin_sve_svwhilerw_s64
q16bSWiC*SWiC*
__builtin_sve_svwhilerw_s8
q16bScC*ScC*
__builtin_sve_svwhilerw_u16
q16bUsC*UsC*
__builtin_sve_svwhilerw_u32
q16bUiC*UiC*
__builtin_sve_svwhilerw_u64
q16bUWiC*UWiC*
__builtin_sve_svwhilerw_u8
q16bUcC*UcC*
__builtin_sve_svwhilewr_bf16
__builtin_sve_svwhilewr_f16
__builtin_sve_svwhilewr_f32
__builtin_sve_svwhilewr_f64
__builtin_sve_svwhilewr_s16
__builtin_sve_svwhilewr_s32
__builtin_sve_svwhilewr_s64
__builtin_sve_svwhilewr_s8
__builtin_sve_svwhilewr_u16
__builtin_sve_svwhilewr_u32
__builtin_sve_svwhilewr_u64
__builtin_sve_svwhilewr_u8
__builtin_sve_svwrffr
vq16b
__builtin_sve_svxar_n_s16
__builtin_sve_svxar_n_s32
__builtin_sve_svxar_n_s64
__builtin_sve_svxar_n_s8
__builtin_sve_svxar_n_u16
__builtin_sve_svxar_n_u32
__builtin_sve_svxar_n_u64
__builtin_sve_svxar_n_u8
__builtin_sve_svzip1_b16
__builtin_sve_svzip1_b32
__builtin_sve_svzip1_b64
__builtin_sve_svzip1_b8
__builtin_sve_svzip1_bf16
__builtin_sve_svzip1_f16
__builtin_sve_svzip1_f32
__builtin_sve_svzip1_f64
__builtin_sve_svzip1_s16
__builtin_sve_svzip1_s32
__builtin_sve_svzip1_s64
__builtin_sve_svzip1_s8
__builtin_sve_svzip1_u16
__builtin_sve_svzip1_u32
__builtin_sve_svzip1_u64
__builtin_sve_svzip1_u8
__builtin_sve_svzip1q_bf16
__builtin_sve_svzip1q_f16
__builtin_sve_svzip1q_f32
__builtin_sve_svzip1q_f64
__builtin_sve_svzip1q_s16
__builtin_sve_svzip1q_s32
__builtin_sve_svzip1q_s64
__builtin_sve_svzip1q_s8
__builtin_sve_svzip1q_u16
__builtin_sve_svzip1q_u32
__builtin_sve_svzip1q_u64
__builtin_sve_svzip1q_u8
__builtin_sve_svzip2_b16
__builtin_sve_svzip2_b32
__builtin_sve_svzip2_b64
__builtin_sve_svzip2_b8
__builtin_sve_svzip2_bf16
__builtin_sve_svzip2_f16
__builtin_sve_svzip2_f32
__builtin_sve_svzip2_f64
__builtin_sve_svzip2_s16
__builtin_sve_svzip2_s32
__builtin_sve_svzip2_s64
__builtin_sve_svzip2_s8
__builtin_sve_svzip2_u16
__builtin_sve_svzip2_u32
__builtin_sve_svzip2_u64
__builtin_sve_svzip2_u8
__builtin_sve_svzip2q_bf16
__builtin_sve_svzip2q_f16
__builtin_sve_svzip2q_f32
__builtin_sve_svzip2q_f64
__builtin_sve_svzip2q_s16
__builtin_sve_svzip2q_s32
__builtin_sve_svzip2q_s64
__builtin_sve_svzip2q_s8
__builtin_sve_svzip2q_u16
__builtin_sve_svzip2q_u32
__builtin_sve_svzip2q_u64
__builtin_sve_svzip2q_u8
__builtin_sve_reinterpret_s8_s8
__builtin_sve_reinterpret_s8_s16
q16Scq8Ss
__builtin_sve_reinterpret_s8_s32
q16Scq4Si
__builtin_sve_reinterpret_s8_s64
q16Scq2SWi
__builtin_sve_reinterpret_s8_u8
q16Scq16Uc
__builtin_sve_reinterpret_s8_u16
q16Scq8Us
__builtin_sve_reinterpret_s8_u32
q16Scq4Ui
__builtin_sve_reinterpret_s8_u64
q16Scq2UWi
__builtin_sve_reinterpret_s8_f16
q16Scq8h
__builtin_sve_reinterpret_s8_bf16
q16Scq8y
__builtin_sve_reinterpret_s8_f32
q16Scq4f
__builtin_sve_reinterpret_s8_f64
q16Scq2d
__builtin_sve_reinterpret_s16_s8
q8Ssq16Sc
__builtin_sve_reinterpret_s16_s16
q8Ssq8Ss
__builtin_sve_reinterpret_s16_s32
q8Ssq4Si
__builtin_sve_reinterpret_s16_s64
q8Ssq2SWi
__builtin_sve_reinterpret_s16_u8
q8Ssq16Uc
__builtin_sve_reinterpret_s16_u16
q8Ssq8Us
__builtin_sve_reinterpret_s16_u32
q8Ssq4Ui
__builtin_sve_reinterpret_s16_u64
q8Ssq2UWi
__builtin_sve_reinterpret_s16_f16
q8Ssq8h
__builtin_sve_reinterpret_s16_bf16
q8Ssq8y
__builtin_sve_reinterpret_s16_f32
q8Ssq4f
__builtin_sve_reinterpret_s16_f64
q8Ssq2d
__builtin_sve_reinterpret_s32_s8
q4Siq16Sc
__builtin_sve_reinterpret_s32_s16
q4Siq8Ss
__builtin_sve_reinterpret_s32_s32
q4Siq4Si
__builtin_sve_reinterpret_s32_s64
q4Siq2SWi
__builtin_sve_reinterpret_s32_u8
q4Siq16Uc
__builtin_sve_reinterpret_s32_u16
q4Siq8Us
__builtin_sve_reinterpret_s32_u32
q4Siq4Ui
__builtin_sve_reinterpret_s32_u64
q4Siq2UWi
__builtin_sve_reinterpret_s32_f16
q4Siq8h
__builtin_sve_reinterpret_s32_bf16
q4Siq8y
__builtin_sve_reinterpret_s32_f32
q4Siq4f
__builtin_sve_reinterpret_s32_f64
q4Siq2d
__builtin_sve_reinterpret_s64_s8
q2SWiq16Sc
__builtin_sve_reinterpret_s64_s16
q2SWiq8Ss
__builtin_sve_reinterpret_s64_s32
q2SWiq4Si
__builtin_sve_reinterpret_s64_s64
q2SWiq2SWi
__builtin_sve_reinterpret_s64_u8
q2SWiq16Uc
__builtin_sve_reinterpret_s64_u16
q2SWiq8Us
__builtin_sve_reinterpret_s64_u32
q2SWiq4Ui
__builtin_sve_reinterpret_s64_u64
q2SWiq2UWi
__builtin_sve_reinterpret_s64_f16
q2SWiq8h
__builtin_sve_reinterpret_s64_bf16
q2SWiq8y
__builtin_sve_reinterpret_s64_f32
q2SWiq4f
__builtin_sve_reinterpret_s64_f64
q2SWiq2d
__builtin_sve_reinterpret_u8_s8
q16Ucq16Sc
__builtin_sve_reinterpret_u8_s16
q16Ucq8Ss
__builtin_sve_reinterpret_u8_s32
q16Ucq4Si
__builtin_sve_reinterpret_u8_s64
q16Ucq2SWi
__builtin_sve_reinterpret_u8_u8
__builtin_sve_reinterpret_u8_u16
__builtin_sve_reinterpret_u8_u32
q16Ucq4Ui
__builtin_sve_reinterpret_u8_u64
q16Ucq2UWi
__builtin_sve_reinterpret_u8_f16
q16Ucq8h
__builtin_sve_reinterpret_u8_bf16
q16Ucq8y
__builtin_sve_reinterpret_u8_f32
q16Ucq4f
__builtin_sve_reinterpret_u8_f64
q16Ucq2d
__builtin_sve_reinterpret_u16_s8
q8Usq16Sc
__builtin_sve_reinterpret_u16_s16
q8Usq8Ss
__builtin_sve_reinterpret_u16_s32
q8Usq4Si
__builtin_sve_reinterpret_u16_s64
q8Usq2SWi
__builtin_sve_reinterpret_u16_u8
__builtin_sve_reinterpret_u16_u16
__builtin_sve_reinterpret_u16_u32
__builtin_sve_reinterpret_u16_u64
q8Usq2UWi
__builtin_sve_reinterpret_u16_f16
q8Usq8h
__builtin_sve_reinterpret_u16_bf16
q8Usq8y
__builtin_sve_reinterpret_u16_f32
q8Usq4f
__builtin_sve_reinterpret_u16_f64
q8Usq2d
__builtin_sve_reinterpret_u32_s8
q4Uiq16Sc
__builtin_sve_reinterpret_u32_s16
q4Uiq8Ss
__builtin_sve_reinterpret_u32_s32
q4Uiq4Si
__builtin_sve_reinterpret_u32_s64
q4Uiq2SWi
__builtin_sve_reinterpret_u32_u8
q4Uiq16Uc
__builtin_sve_reinterpret_u32_u16
__builtin_sve_reinterpret_u32_u32
__builtin_sve_reinterpret_u32_u64
__builtin_sve_reinterpret_u32_f16
q4Uiq8h
__builtin_sve_reinterpret_u32_bf16
q4Uiq8y
__builtin_sve_reinterpret_u32_f32
q4Uiq4f
__builtin_sve_reinterpret_u32_f64
q4Uiq2d
__builtin_sve_reinterpret_u64_s8
q2UWiq16Sc
__builtin_sve_reinterpret_u64_s16
q2UWiq8Ss
__builtin_sve_reinterpret_u64_s32
q2UWiq4Si
__builtin_sve_reinterpret_u64_s64
q2UWiq2SWi
__builtin_sve_reinterpret_u64_u8
q2UWiq16Uc
__builtin_sve_reinterpret_u64_u16
q2UWiq8Us
__builtin_sve_reinterpret_u64_u32
__builtin_sve_reinterpret_u64_u64
__builtin_sve_reinterpret_u64_f16
q2UWiq8h
__builtin_sve_reinterpret_u64_bf16
q2UWiq8y
__builtin_sve_reinterpret_u64_f32
q2UWiq4f
__builtin_sve_reinterpret_u64_f64
q2UWiq2d
__builtin_sve_reinterpret_f16_s8
q8hq16Sc
__builtin_sve_reinterpret_f16_s16
q8hq8Ss
__builtin_sve_reinterpret_f16_s32
q8hq4Si
__builtin_sve_reinterpret_f16_s64
q8hq2SWi
__builtin_sve_reinterpret_f16_u8
q8hq16Uc
__builtin_sve_reinterpret_f16_u16
__builtin_sve_reinterpret_f16_u32
q8hq4Ui
__builtin_sve_reinterpret_f16_u64
q8hq2UWi
__builtin_sve_reinterpret_f16_f16
__builtin_sve_reinterpret_f16_bf16
q8hq8y
__builtin_sve_reinterpret_f16_f32
q8hq4f
__builtin_sve_reinterpret_f16_f64
q8hq2d
__builtin_sve_reinterpret_bf16_s8
q8yq16Sc
__builtin_sve_reinterpret_bf16_s16
q8yq8Ss
__builtin_sve_reinterpret_bf16_s32
q8yq4Si
__builtin_sve_reinterpret_bf16_s64
q8yq2SWi
__builtin_sve_reinterpret_bf16_u8
q8yq16Uc
__builtin_sve_reinterpret_bf16_u16
q8yq8Us
__builtin_sve_reinterpret_bf16_u32
q8yq4Ui
__builtin_sve_reinterpret_bf16_u64
q8yq2UWi
__builtin_sve_reinterpret_bf16_f16
q8yq8h
__builtin_sve_reinterpret_bf16_bf16
__builtin_sve_reinterpret_bf16_f32
q8yq4f
__builtin_sve_reinterpret_bf16_f64
q8yq2d
__builtin_sve_reinterpret_f32_s8
q4fq16Sc
__builtin_sve_reinterpret_f32_s16
q4fq8Ss
__builtin_sve_reinterpret_f32_s32
q4fq4Si
__builtin_sve_reinterpret_f32_s64
q4fq2SWi
__builtin_sve_reinterpret_f32_u8
q4fq16Uc
__builtin_sve_reinterpret_f32_u16
q4fq8Us
__builtin_sve_reinterpret_f32_u32
__builtin_sve_reinterpret_f32_u64
q4fq2UWi
__builtin_sve_reinterpret_f32_f16
q4fq8h
__builtin_sve_reinterpret_f32_bf16
q4fq8y
__builtin_sve_reinterpret_f32_f32
__builtin_sve_reinterpret_f32_f64
q4fq2d
__builtin_sve_reinterpret_f64_s8
q2dq16Sc
__builtin_sve_reinterpret_f64_s16
q2dq8Ss
__builtin_sve_reinterpret_f64_s32
q2dq4Si
__builtin_sve_reinterpret_f64_s64
q2dq2SWi
__builtin_sve_reinterpret_f64_u8
q2dq16Uc
__builtin_sve_reinterpret_f64_u16
q2dq8Us
__builtin_sve_reinterpret_f64_u32
q2dq4Ui
__builtin_sve_reinterpret_f64_u64
__builtin_sve_reinterpret_f64_f16
q2dq8h
__builtin_sve_reinterpret_f64_bf16
q2dq8y
__builtin_sve_reinterpret_f64_f32
q2dq4f
__builtin_sve_reinterpret_f64_f64
__clear_cache
vv*v*
__builtin_arm_ldrex
__builtin_arm_ldaex
__builtin_arm_strex
__builtin_arm_stlex
__builtin_arm_clrex
__builtin_arm_rbit
__builtin_arm_rbit64
WUiWUi
__builtin_arm_cls
UiZUi
__builtin_arm_cls64
UiWUi
__builtin_arm_nop
__builtin_arm_yield
__builtin_arm_wfe
__builtin_arm_wfi
__builtin_arm_sev
__builtin_arm_sevl
__builtin_arm_crc32b
UiUiUc
__builtin_arm_crc32cb
__builtin_arm_crc32h
UiUiUs
__builtin_arm_crc32ch
__builtin_arm_crc32w
__builtin_arm_crc32cw
__builtin_arm_crc32d
UiUiWUi
__builtin_arm_crc32cd
__builtin_arm_irg
v*v*Ui
__builtin_arm_addg
__builtin_arm_gmi
Uiv*Ui
__builtin_arm_ldg
v*v*
__builtin_arm_stg
__builtin_arm_subp
Uiv*v*
__builtin_arm_dmb
__builtin_arm_dsb
__builtin_arm_isb
__builtin_arm_jcvt
__builtin_arm_prefetch
vvC*UiUiUiUi
__builtin_arm_rsr
UicC*
__builtin_arm_rsr64
WUicC*
__builtin_arm_rsrp
v*cC*
__builtin_arm_wsr
vcC*Ui
__builtin_arm_wsr64
vcC*WUi
__builtin_arm_wsrp
vcC*vC*
__dmb
__dsb
__isb
__yield
__wfe
__wfi
__sev
__sevl
__builtin_sponentry
__builtin_arm_tstart
__builtin_arm_tcommit
__builtin_arm_tcancel
vWUIi
__builtin_arm_ttest
__builtin_arm_frint32zf
__builtin_arm_frint32z
__builtin_arm_frint64zf
__builtin_arm_frint64z
__builtin_arm_frint32xf
__builtin_arm_frint32x
__builtin_arm_frint64xf
__builtin_arm_frint64x
__builtin_arm_rndr
iWUi*
__builtin_arm_rndrrs
__builtin_arm_ld64b
vvC*WUi*
__builtin_arm_st64b
vv*WUiC*
__builtin_arm_st64bv
WUiv*WUiC*
__builtin_arm_st64bv0
_BitScanForward
UcUNi*UNi
intrin.h
_BitScanReverse
_BitScanForward64
UcUNi*ULLi
_BitScanReverse64
_InterlockedAdd
NiNiD*Ni
_InterlockedAnd64
LLiLLiD*LLi
_InterlockedDecrement64
LLiLLiD*
_InterlockedExchange64
_InterlockedExchangeAdd64
_InterlockedExchangeSub64
_InterlockedIncrement64
_InterlockedOr64
_InterlockedXor64
_InterlockedExchangeAdd_acq
_InterlockedExchangeAdd_rel
_InterlockedExchangeAdd_nf
_InterlockedExchangeAdd8_acq
ccD*c
_InterlockedExchangeAdd8_rel
_InterlockedExchangeAdd8_nf
_InterlockedExchangeAdd16_acq
ssD*s
_InterlockedExchangeAdd16_rel
_InterlockedExchangeAdd16_nf
_InterlockedExchangeAdd64_acq
_InterlockedExchangeAdd64_rel
_InterlockedExchangeAdd64_nf
_InterlockedExchange8_acq
_InterlockedExchange8_nf
_InterlockedExchange8_rel
_InterlockedExchange16_acq
_InterlockedExchange16_nf
_InterlockedExchange16_rel
_InterlockedExchange_acq
_InterlockedExchange_nf
_InterlockedExchange_rel
_InterlockedExchange64_acq
_InterlockedExchange64_nf
_InterlockedExchange64_rel
_InterlockedCompareExchange8_acq
ccD*cc
_InterlockedCompareExchange8_nf
_InterlockedCompareExchange8_rel
_InterlockedCompareExchange16_acq
ssD*ss
_InterlockedCompareExchange16_nf
_InterlockedCompareExchange16_rel
_InterlockedCompareExchange_acq
NiNiD*NiNi
_InterlockedCompareExchange_nf
_InterlockedCompareExchange_rel
_InterlockedCompareExchange64_acq
LLiLLiD*LLiLLi
_InterlockedCompareExchange64_nf
_InterlockedCompareExchange64_rel
_InterlockedCompareExchange128
UcLLiD*LLiLLiLLi*
_InterlockedCompareExchange128_acq
_InterlockedCompareExchange128_nf
_InterlockedCompareExchange128_rel
_InterlockedOr8_acq
_InterlockedOr8_nf
_InterlockedOr8_rel
_InterlockedOr16_acq
_InterlockedOr16_nf
_InterlockedOr16_rel
_InterlockedOr_acq
_InterlockedOr_nf
_InterlockedOr_rel
_InterlockedOr64_acq
_InterlockedOr64_nf
_InterlockedOr64_rel
_InterlockedXor8_acq
_InterlockedXor8_nf
_InterlockedXor8_rel
_InterlockedXor16_acq
_InterlockedXor16_nf
_InterlockedXor16_rel
_InterlockedXor_acq
_InterlockedXor_nf
_InterlockedXor_rel
_InterlockedXor64_acq
_InterlockedXor64_nf
_InterlockedXor64_rel
_InterlockedAnd8_acq
_InterlockedAnd8_nf
_InterlockedAnd8_rel
_InterlockedAnd16_acq
_InterlockedAnd16_nf
_InterlockedAnd16_rel
_InterlockedAnd_acq
_InterlockedAnd_nf
_InterlockedAnd_rel
_InterlockedAnd64_acq
_InterlockedAnd64_nf
_InterlockedAnd64_rel
_InterlockedIncrement16_acq
ssD*
_InterlockedIncrement16_nf
_InterlockedIncrement16_rel
_InterlockedIncrement_acq
NiNiD*
_InterlockedIncrement_nf
_InterlockedIncrement_rel
_InterlockedIncrement64_acq
_InterlockedIncrement64_nf
_InterlockedIncrement64_rel
_InterlockedDecrement16_acq
_InterlockedDecrement16_nf
_InterlockedDecrement16_rel
_InterlockedDecrement_acq
_InterlockedDecrement_nf
_InterlockedDecrement_rel
_InterlockedDecrement64_acq
_InterlockedDecrement64_nf
_InterlockedDecrement64_rel
_ReadWriteBarrier
__getReg
ULLii
_ReadStatusReg
LLii
_WriteStatusReg
viLLi
_AddressOfReturnAddress
__mulh
SLLiSLLiSLLi
__umulh
ULLiULLiULLi
_mcount
__ARM_FEATURE_QRDMX
__ARM_FEATURE_ATOMICS
__ARM_FEATURE_CRC32
__ARM_ARCH_8_3__
__ARM_FEATURE_COMPLEX
__ARM_FEATURE_JCVT
__ARM_ARCH_8_4__
__ARM_FEATURE_FRINT
__ARM_ARCH_8_5__
__ARM_ARCH_8_6__
__aarch64__
__AARCH64_CMODEL_
__ARM_ACLE
__ARM_ARCH
__ARM_ARCH_PROFILE
__ARM_64BIT_STATE
__ARM_PCS_AAPCS64
__ARM_ARCH_ISA_A64
__ARM_FEATURE_CLZ
__ARM_FEATURE_FMA
__ARM_FEATURE_LDREX
__ARM_FEATURE_IDIV
__ARM_FEATURE_DIV
__ARM_FEATURE_NUMERIC_MAXMIN
__ARM_FEATURE_DIRECTED_ROUNDING
__ARM_ALIGN_MAX_STACK_PWR
__ARM_FP
__ARM_FP16_FORMAT_IEEE
__ARM_FP16_ARGS
__ARM_FP_FAST
__ARM_SIZEOF_WCHAR_T
__ARM_SIZEOF_MINIMAL_ENUM
__ARM_NEON
__ARM_NEON_FP
__ARM_FEATURE_SVE
__ARM_FEATURE_SVE2
__ARM_FEATURE_SVE2_AES
__ARM_FEATURE_SVE2_BITPERM
__ARM_FEATURE_SVE2_SHA3
__ARM_FEATURE_SVE2_SM4
__ARM_FEATURE_CRYPTO
__ARM_FEATURE_AES
__ARM_FEATURE_SHA2
__ARM_FEATURE_SHA3
__ARM_FEATURE_SHA512
__ARM_FEATURE_SM3
__ARM_FEATURE_SM4
__ARM_FEATURE_UNALIGNED
__ARM_FEATURE_FP16_VECTOR_ARITHMETIC
__ARM_FEATURE_FP16_SCALAR_ARITHMETIC
__ARM_FEATURE_DOTPROD
__ARM_FEATURE_MEMORY_TAGGING
__ARM_FEATURE_TME
__ARM_FEATURE_MATMUL_INT8
__ARM_FEATURE_BF16
__ARM_FEATURE_BF16_VECTOR_ARITHMETIC
__ARM_BF16_FORMAT_ALTERNATIVE
__ARM_FEATURE_BF16_SCALAR_ARITHMETIC
__ARM_FEATURE_SVE_BF16
__ARM_FEATURE_SVE_MATMUL_FP64
__ARM_FEATURE_SVE_MATMUL_FP32
__ARM_FEATURE_SVE_MATMUL_INT8
__ARM_FEATURE_FP16_FML
__ARM_FEATURE_PAC_DEFAULT
__ARM_FEATURE_BTI_DEFAULT
__ARM_FEATURE_LS64
__ARM_FEATURE_RNG
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8
__ARM_FEATURE_SVE_BITS
__ARM_FEATURE_SVE_VECTOR_OPERATORS
aarch64
+sve
+sve2-aes
+sve2-sha3
+sve2-sm4
+sve2-bitperm
+f64mm
+v8.1a
+v8r
+dotprod
+tme
+pauth
+lse
+ls64
+rand
+flagm
e-m:o-p:32:32-i64:64-i128:128-n32:64-S128
e-m:o-i64:64-i128:128-n32:64-S128
e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128
__AARCH64EL__
__AARCH64EB__
__AARCH_BIG_ENDIAN
__ARM_BIG_ENDIAN
E-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128
e-m:w-p:64:64-i32:32-i64:64-i128:128-n32:64-S128
_M_ARM64
__AARCH64_SIMD__
__ARM64_ARCH_8_32__
__ARM64_ARCH_8__
__ARM_NEON__
__REGISTER_PREFIX__
__arm64
__arm64__
__arm64e__
__RENDERSCRIPT__
mcount
__builtin_amdgcn_dispatch_ptr
__builtin_amdgcn_kernarg_segment_ptr
__builtin_amdgcn_implicitarg_ptr
__builtin_amdgcn_queue_ptr
__builtin_amdgcn_workgroup_id_x
__builtin_amdgcn_workgroup_id_y
__builtin_amdgcn_workgroup_id_z
__builtin_amdgcn_workitem_id_x
__builtin_amdgcn_workitem_id_y
__builtin_amdgcn_workitem_id_z
__builtin_amdgcn_workgroup_size_x
__builtin_amdgcn_workgroup_size_y
__builtin_amdgcn_workgroup_size_z
__builtin_amdgcn_grid_size_x
__builtin_amdgcn_grid_size_y
__builtin_amdgcn_grid_size_z
__builtin_amdgcn_mbcnt_hi
__builtin_amdgcn_mbcnt_lo
__builtin_amdgcn_s_memtime
s-memtime-inst
__builtin_amdgcn_s_getreg
UiIi
__builtin_amdgcn_s_setreg
vIiUi
__builtin_amdgcn_s_getpc
__builtin_amdgcn_s_waitcnt
__builtin_amdgcn_s_sendmsg
__builtin_amdgcn_s_sendmsghalt
__builtin_amdgcn_s_barrier
__builtin_amdgcn_wave_barrier
__builtin_amdgcn_s_dcache_inv
__builtin_amdgcn_buffer_wbinvl1
__builtin_amdgcn_ds_gws_init
vUiUi
__builtin_amdgcn_ds_gws_barrier
__builtin_amdgcn_ds_gws_sema_v
__builtin_amdgcn_ds_gws_sema_br
__builtin_amdgcn_ds_gws_sema_p
__builtin_amdgcn_fence
vUicC*
__builtin_amdgcn_groupstaticsize
__builtin_amdgcn_atomic_inc32
UZiUZiD*UZiUicC*
__builtin_amdgcn_atomic_inc64
UWiUWiD*UWiUicC*
__builtin_amdgcn_atomic_dec32
__builtin_amdgcn_atomic_dec64
__builtin_amdgcn_div_scale
dddbb*
__builtin_amdgcn_div_scalef
fffbb*
__builtin_amdgcn_div_fmas
ddddb
__builtin_amdgcn_div_fmasf
ffffb
__builtin_amdgcn_div_fixup
dddd
__builtin_amdgcn_div_fixupf
ffff
__builtin_amdgcn_trig_preop
__builtin_amdgcn_trig_preopf
__builtin_amdgcn_rcp
__builtin_amdgcn_rcpf
__builtin_amdgcn_sqrt
__builtin_amdgcn_sqrtf
__builtin_amdgcn_rsq
__builtin_amdgcn_rsqf
__builtin_amdgcn_rsq_clamp
__builtin_amdgcn_rsq_clampf
__builtin_amdgcn_sinf
__builtin_amdgcn_cosf
__builtin_amdgcn_log_clampf
__builtin_amdgcn_ldexp
__builtin_amdgcn_ldexpf
__builtin_amdgcn_frexp_mant
__builtin_amdgcn_frexp_mantf
__builtin_amdgcn_frexp_exp
__builtin_amdgcn_frexp_expf
__builtin_amdgcn_fract
__builtin_amdgcn_fractf
__builtin_amdgcn_lerp
UiUiUiUi
__builtin_amdgcn_class
__builtin_amdgcn_classf
__builtin_amdgcn_cubeid
__builtin_amdgcn_cubesc
__builtin_amdgcn_cubetc
__builtin_amdgcn_cubema
__builtin_amdgcn_s_sleep
__builtin_amdgcn_s_incperflevel
__builtin_amdgcn_s_decperflevel
__builtin_amdgcn_uicmp
WUiUiUiIi
__builtin_amdgcn_uicmpl
WUiWUiWUiIi
__builtin_amdgcn_sicmp
WUiiiIi
__builtin_amdgcn_sicmpl
WUiWiWiIi
__builtin_amdgcn_fcmp
WUiddIi
__builtin_amdgcn_fcmpf
WUiffIi
__builtin_amdgcn_ds_swizzle
__builtin_amdgcn_ds_permute
__builtin_amdgcn_ds_bpermute
__builtin_amdgcn_readfirstlane
__builtin_amdgcn_readlane
__builtin_amdgcn_fmed3f
__builtin_amdgcn_ds_faddf
ff*3fIiIiIb
__builtin_amdgcn_ds_fminf
__builtin_amdgcn_ds_fmaxf
__builtin_amdgcn_ds_append
ii*3
__builtin_amdgcn_ds_consume
__builtin_amdgcn_alignbit
__builtin_amdgcn_alignbyte
__builtin_amdgcn_ubfe
__builtin_amdgcn_sbfe
__builtin_amdgcn_cvt_pkrtz
E2hff
__builtin_amdgcn_cvt_pknorm_i16
E2sff
__builtin_amdgcn_cvt_pknorm_u16
E2Usff
__builtin_amdgcn_cvt_pk_i16
E2sii
__builtin_amdgcn_cvt_pk_u16
E2UsUiUi
__builtin_amdgcn_cvt_pk_u8_f32
UifUiUi
__builtin_amdgcn_sad_u8
__builtin_amdgcn_msad_u8
__builtin_amdgcn_sad_hi_u8
__builtin_amdgcn_sad_u16
__builtin_amdgcn_qsad_pk_u16_u8
WUiWUiUiWUi
__builtin_amdgcn_mqsad_pk_u16_u8
__builtin_amdgcn_mqsad_u32_u8
V4UiWUiUiV4Ui
__builtin_amdgcn_s_dcache_inv_vol
ci-insts
__builtin_amdgcn_buffer_wbinvl1_vol
__builtin_amdgcn_ds_gws_sema_release_all
__builtin_amdgcn_is_shared
bvC*0
flat-address-space
__builtin_amdgcn_is_private
__builtin_amdgcn_interp_p1_f16
ffUiUibUi
__builtin_amdgcn_interp_p2_f16
hffUiUibUi
__builtin_amdgcn_interp_p1
ffUiUiUi
__builtin_amdgcn_interp_p2
fffUiUiUi
__builtin_amdgcn_interp_mov
fUiUiUiUi
__builtin_amdgcn_div_fixuph
16-bit-insts
__builtin_amdgcn_rcph
__builtin_amdgcn_sqrth
__builtin_amdgcn_rsqh
__builtin_amdgcn_sinh
__builtin_amdgcn_cosh
__builtin_amdgcn_ldexph
__builtin_amdgcn_frexp_manth
__builtin_amdgcn_frexp_exph
__builtin_amdgcn_fracth
__builtin_amdgcn_classh
__builtin_amdgcn_s_memrealtime
s-memrealtime
__builtin_amdgcn_mov_dpp
iiIiIiIiIb
__builtin_amdgcn_update_dpp
iiiIiIiIiIb
__builtin_amdgcn_s_dcache_wb
gfx8-insts
__builtin_amdgcn_perm
__builtin_amdgcn_fmed3h
gfx9-insts
__builtin_amdgcn_global_atomic_fadd_f64
dd*1d
gfx90a-insts
__builtin_amdgcn_global_atomic_fadd_f32
ff*1f
__builtin_amdgcn_global_atomic_fadd_v2f16
V2hV2h*1V2h
__builtin_amdgcn_global_atomic_fmin_f64
__builtin_amdgcn_global_atomic_fmax_f64
__builtin_amdgcn_flat_atomic_fadd_f64
dd*0d
__builtin_amdgcn_flat_atomic_fmin_f64
__builtin_amdgcn_flat_atomic_fmax_f64
__builtin_amdgcn_ds_atomic_fadd_f64
dd*3d
__builtin_amdgcn_ds_atomic_fadd_f32
ff*3f
__builtin_amdgcn_fdot2
fV2hV2hfIb
dot7-insts
__builtin_amdgcn_sdot2
SiV2SsV2SsSiIb
dot2-insts
__builtin_amdgcn_udot2
UiV2UsV2UsUiIb
__builtin_amdgcn_sdot4
SiSiSiSiIb
dot1-insts
__builtin_amdgcn_udot4
UiUiUiUiIb
__builtin_amdgcn_sdot8
__builtin_amdgcn_udot8
__builtin_amdgcn_permlane16
UiUiUiUiUiIbIb
gfx10-insts
__builtin_amdgcn_permlanex16
__builtin_amdgcn_mov_dpp8
UiUiIUi
__builtin_amdgcn_image_bvh_intersect_ray
V4UiUifV4fV4fV4fV4Ui
__builtin_amdgcn_image_bvh_intersect_ray_h
V4UiUifV4fV4hV4hV4Ui
__builtin_amdgcn_image_bvh_intersect_ray_l
V4UiWUifV4fV4fV4fV4Ui
__builtin_amdgcn_image_bvh_intersect_ray_lh
V4UiWUifV4fV4hV4hV4Ui
__builtin_amdgcn_read_exec
__builtin_amdgcn_read_exec_lo
__builtin_amdgcn_read_exec_hi
__builtin_amdgcn_endpgm
__builtin_r600_implicitarg_ptr
Uc*7
__builtin_r600_read_tgid_x
__builtin_r600_read_tgid_y
__builtin_r600_read_tgid_z
__builtin_r600_read_tidig_x
__builtin_r600_read_tidig_y
__builtin_r600_read_tidig_z
__builtin_r600_recipsqrt_ieee
__builtin_r600_recipsqrt_ieeef
__builtin_amdgcn_mfma_f32_32x32x1f32
V32fffV32fIiIiIi
mai-insts
__builtin_amdgcn_mfma_f32_16x16x1f32
V16fffV16fIiIiIi
__builtin_amdgcn_mfma_f32_4x4x1f32
V4fffV4fIiIiIi
__builtin_amdgcn_mfma_f32_32x32x2f32
__builtin_amdgcn_mfma_f32_16x16x4f32
__builtin_amdgcn_mfma_f32_32x32x4f16
V32fV4hV4hV32fIiIiIi
__builtin_amdgcn_mfma_f32_16x16x4f16
V16fV4hV4hV16fIiIiIi
__builtin_amdgcn_mfma_f32_4x4x4f16
V4fV4hV4hV4fIiIiIi
__builtin_amdgcn_mfma_f32_32x32x8f16
__builtin_amdgcn_mfma_f32_16x16x16f16
__builtin_amdgcn_mfma_i32_32x32x4i8
V32iiiV32iIiIiIi
__builtin_amdgcn_mfma_i32_16x16x4i8
V16iiiV16iIiIiIi
__builtin_amdgcn_mfma_i32_4x4x4i8
V4iiiV4iIiIiIi
__builtin_amdgcn_mfma_i32_32x32x8i8
__builtin_amdgcn_mfma_i32_16x16x16i8
__builtin_amdgcn_mfma_f32_32x32x2bf16
V32fV2sV2sV32fIiIiIi
__builtin_amdgcn_mfma_f32_16x16x2bf16
V16fV2sV2sV16fIiIiIi
__builtin_amdgcn_mfma_f32_4x4x2bf16
V4fV2sV2sV4fIiIiIi
__builtin_amdgcn_mfma_f32_32x32x4bf16
__builtin_amdgcn_mfma_f32_16x16x8bf16
__builtin_amdgcn_mfma_f32_32x32x4bf16_1k
V32fV4sV4sV32fIiIiIi
__builtin_amdgcn_mfma_f32_16x16x4bf16_1k
V16fV4sV4sV16fIiIiIi
__builtin_amdgcn_mfma_f32_4x4x4bf16_1k
V4fV4sV4sV4fIiIiIi
__builtin_amdgcn_mfma_f32_32x32x8bf16_1k
__builtin_amdgcn_mfma_f32_16x16x16bf16_1k
__builtin_amdgcn_mfma_f64_16x16x4f64
V4dddV4dIiIiIi
__builtin_amdgcn_mfma_f64_4x4x4f64
ddddIiIiIi
v100
v101
v102
v103
v104
v105
v106
v107
v108
v109
v110
v111
v112
v113
v114
v115
v116
v117
v118
v119
v120
v121
v122
v123
v124
v125
v126
v127
v128
v129
v130
v131
v132
v133
v134
v135
v136
v137
v138
v139
v140
v141
v142
v143
v144
v145
v146
v147
v148
v149
v150
v151
v152
v153
v154
v155
v156
v157
v158
v159
v160
v161
v162
v163
v164
v165
v166
v167
v168
v169
v170
v171
v172
v173
v174
v175
v176
v177
v178
v179
v180
v181
v182
v183
v184
v185
v186
v187
v188
v189
v190
v191
v192
v193
v194
v195
v196
v197
v198
v199
v200
v201
v202
v203
v204
v205
v206
v207
v208
v209
v210
v211
v212
v213
v214
v215
v216
v217
v218
v219
v220
v221
v222
v223
v224
v225
v226
v227
v228
v229
v230
v231
v232
v233
v234
v235
v236
v237
v238
v239
v240
v241
v242
v243
v244
v245
v246
v247
v248
v249
v250
v251
v252
v253
v254
v255
s100
s101
s102
s103
s104
s105
s106
s107
s108
s109
s110
s111
s112
s113
s114
s115
s116
s117
s118
s119
s120
s121
s122
s123
s124
s125
s126
s127
exec
flat_scratch
exec_lo
exec_hi
vcc_lo
vcc_hi
flat_scratch_lo
flat_scratch_hi
a100
a101
a102
a103
a104
a105
a106
a107
a108
a109
a110
a111
a112
a113
a114
a115
a116
a117
a118
a119
a120
a121
a122
a123
a124
a125
a126
a127
a128
a129
a130
a131
a132
a133
a134
a135
a136
a137
a138
a139
a140
a141
a142
a143
a144
a145
a146
a147
a148
a149
a150
a151
a152
a153
a154
a155
a156
a157
a158
a159
a160
a161
a162
a163
a164
a165
a166
a167
a168
a169
a170
a171
a172
a173
a174
a175
a176
a177
a178
a179
a180
a181
a182
a183
a184
a185
a186
a187
a188
a189
a190
a191
a192
a193
a194
a195
a196
a197
a198
a199
a200
a201
a202
a203
a204
a205
a206
a207
a208
a209
a210
a211
a212
a213
a214
a215
a216
a217
a218
a219
a220
a221
a222
a223
a224
a225
a226
a227
a228
a229
a230
a231
a232
a233
a234
a235
a236
a237
a238
a239
a240
a241
a242
a243
a244
a245
a246
a247
a248
a249
a250
a251
a252
a253
a254
a255
dot5-insts
dot6-insts
dl-insts
gfx10-3-insts
dot3-insts
dot4-insts
e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7
e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1
__AMD__
__AMDGPU__
__AMDGCN__
__R600__
__amdgcn_processor__
__amdgcn_target_id__
__amdgcn_feature_
__HAS_FMAF__
FP_FAST_FMAF
__HAS_LDEXPF__
__HAS_FP64__
FP_FAST_FMA
__AMDGCN_WAVEFRONT_SIZE
tma_lo
tma_hi
tba_lo
tba_hi
__arc__
ilink1
blink
E-m:o-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
e-m:o-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
e-m:w-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S128
E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
e-m:o-p:32:32-Fi8-i64:64-a:0:32-n32-S128
E-m:o-p:32:32-Fi8-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
e-m:o-p:32:32-Fi8-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
E-m:e-p:32:32-Fi8-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
e-m:e-p:32:32-Fi8-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
8M_BASE
8_1A
8_2A
8_3A
8_4A
8_5A
8_6A
8_7A
9_1A
9_2A
8M_MAIN
8_1M_MAIN
aapcs16
apcs-gnu
aapcs-linux
llvm.arm.gnu.eabi.mcount
mcount
thumb-mode
+arm
-thumb-mode
+thumb
+thumb-mode
+vfp2sp
+vfp2
+vfp3sp
+vfp3d16sp
+vfp3
+vfp3d16
+vfp4sp
+vfp4d16sp
+vfp4
+vfp4d16
+fp-armv8sp
+fp-armv8d16sp
+fp-armv8
+fp-armv8d16
+hwdiv
+hwdiv-arm
+fp16
+mve.fp
+cdecp0
+cdecp7
+neonfp
-neonfp
__arm
__arm__
__ARM_ARCH_7K__
__ARM_ARCH_7A__
__ARM_ARCH_
__ARM_ARCH_ISA_ARM
__ARM_ARCH_ISA_THUMB
__ARM_32BIT_STATE
__THUMB_INTERWORK__
__ARM_EABI__
__ARM_PCS
__ARM_PCS_VFP
__SOFTFP__
__ARM_ROPI
__ARM_RWPI
__XSCALE__
__THUMBEL__
__thumb__
__thumb2__
__ARM_FEATURE_SIMD32
__ARM_ARCH_EXT_IDIV__
__APCS_32__
__VFP_FP__
__ARM_VFPV2__
__ARM_VFPV3__
__ARM_VFPV4__
__ARM_FPV5__
__ARM_FEATURE_MVE
__ARM_FEATURE_CDE
__ARM_FEATURE_CDE_COPROC
__ARM_FEATURE_CMSE
__ARM_FEATURE_DSP
__ARM_FEATURE_SAT
__ARM_FEATURE_QBIT
__builtin_arm_smulbb
__builtin_arm_smulbt
__builtin_arm_smultb
__builtin_arm_smultt
__builtin_arm_smulwb
__builtin_arm_smulwt
__builtin_arm_qadd
__builtin_arm_qsub
__builtin_arm_qdbl
__builtin_arm_ssat
__builtin_arm_usat
UiiUi
__builtin_arm_smlabb
iiii
__builtin_arm_smlabt
__builtin_arm_smlatb
__builtin_arm_smlatt
__builtin_arm_smlawb
__builtin_arm_smlawt
__builtin_arm_ssat16
__builtin_arm_usat16
__builtin_arm_sxtab16
__builtin_arm_sxtb16
__builtin_arm_uxtab16
__builtin_arm_uxtb16
__builtin_arm_sel
__builtin_arm_qadd8
__builtin_arm_qsub8
__builtin_arm_sadd8
__builtin_arm_shadd8
__builtin_arm_shsub8
__builtin_arm_ssub8
__builtin_arm_uadd8
__builtin_arm_uhadd8
__builtin_arm_uhsub8
__builtin_arm_uqadd8
__builtin_arm_uqsub8
__builtin_arm_usub8
__builtin_arm_usad8
__builtin_arm_usada8
__builtin_arm_qadd16
__builtin_arm_qasx
__builtin_arm_qsax
__builtin_arm_qsub16
__builtin_arm_sadd16
__builtin_arm_sasx
__builtin_arm_shadd16
__builtin_arm_shasx
__builtin_arm_shsax
__builtin_arm_shsub16
__builtin_arm_ssax
__builtin_arm_ssub16
__builtin_arm_uadd16
__builtin_arm_uasx
__builtin_arm_uhadd16
__builtin_arm_uhasx
__builtin_arm_uhsax
__builtin_arm_uhsub16
__builtin_arm_uqadd16
__builtin_arm_uqasx
__builtin_arm_uqsax
__builtin_arm_uqsub16
__builtin_arm_usax
__builtin_arm_usub16
__builtin_arm_smlad
__builtin_arm_smladx
__builtin_arm_smlald
LLiiiLLi
__builtin_arm_smlaldx
__builtin_arm_smlsd
__builtin_arm_smlsdx
__builtin_arm_smlsld
__builtin_arm_smlsldx
__builtin_arm_smuad
__builtin_arm_smuadx
__builtin_arm_smusd
__builtin_arm_smusdx
__builtin_arm_ldrexd
LLUiv*
__builtin_arm_strexd
iLLUiv*
__builtin_arm_get_fpscr
__builtin_arm_set_fpscr
__builtin_arm_vcvtr_f
__builtin_arm_vcvtr_d
__builtin_arm_ldc
vUIiUIivC*
__builtin_arm_ldcl
__builtin_arm_ldc2
__builtin_arm_ldc2l
__builtin_arm_stc
vUIiUIiv*
__builtin_arm_stcl
__builtin_arm_stc2
__builtin_arm_stc2l
__builtin_arm_cdp
vUIiUIiUIiUIiUIiUIi
__builtin_arm_cdp2
__builtin_arm_mcr
vUIiUIiUiUIiUIiUIi
__builtin_arm_mcr2
__builtin_arm_mrc
UiUIiUIiUIiUIiUIi
__builtin_arm_mrc2
__builtin_arm_mcrr
vUIiUIiLLUiUIi
__builtin_arm_mcrr2
__builtin_arm_mrrc
LLUiUIiUIiUIi
__builtin_arm_mrrc2
UiUiLLUi
__builtin_arm_cmse_TT
Uiv*
__builtin_arm_cmse_TTT
__builtin_arm_cmse_TTA
__builtin_arm_cmse_TTAT
__builtin_arm_dbg
vvC*UiUi
LLUicC*
vcC*LLUi
__builtin_arm_mve_asrl
__builtin_arm_mve_lsll
__builtin_arm_mve_sqrshr
__builtin_arm_mve_sqrshrl
__builtin_arm_mve_sqrshrl_sat48
__builtin_arm_mve_sqshl
__builtin_arm_mve_sqshll
__builtin_arm_mve_srshr
__builtin_arm_mve_srshrl
__builtin_arm_mve_uqrshl
__builtin_arm_mve_uqrshll
__builtin_arm_mve_uqrshll_sat48
__builtin_arm_mve_uqshl
__builtin_arm_mve_uqshll
__builtin_arm_mve_urshr
__builtin_arm_mve_urshrl
__builtin_arm_mve_vabavq_p_s16
__builtin_arm_mve_vabavq_p_s32
__builtin_arm_mve_vabavq_p_s8
__builtin_arm_mve_vabavq_p_u16
__builtin_arm_mve_vabavq_p_u32
__builtin_arm_mve_vabavq_p_u8
__builtin_arm_mve_vabavq_s16
__builtin_arm_mve_vabavq_s32
__builtin_arm_mve_vabavq_s8
__builtin_arm_mve_vabavq_u16
__builtin_arm_mve_vabavq_u32
__builtin_arm_mve_vabavq_u8
__builtin_arm_mve_vabdq_f16
__builtin_arm_mve_vabdq_f32
__builtin_arm_mve_vabdq_m_f16
__builtin_arm_mve_vabdq_m_f32
__builtin_arm_mve_vabdq_m_s16
__builtin_arm_mve_vabdq_m_s32
__builtin_arm_mve_vabdq_m_s8
__builtin_arm_mve_vabdq_m_u16
__builtin_arm_mve_vabdq_m_u32
__builtin_arm_mve_vabdq_m_u8
__builtin_arm_mve_vabdq_s16
__builtin_arm_mve_vabdq_s32
__builtin_arm_mve_vabdq_s8
__builtin_arm_mve_vabdq_u16
__builtin_arm_mve_vabdq_u32
__builtin_arm_mve_vabdq_u8
__builtin_arm_mve_vabdq_x_f16
__builtin_arm_mve_vabdq_x_f32
__builtin_arm_mve_vabdq_x_s16
__builtin_arm_mve_vabdq_x_s32
__builtin_arm_mve_vabdq_x_s8
__builtin_arm_mve_vabdq_x_u16
__builtin_arm_mve_vabdq_x_u32
__builtin_arm_mve_vabdq_x_u8
__builtin_arm_mve_vabsq_f16
__builtin_arm_mve_vabsq_f32
__builtin_arm_mve_vabsq_m_f16
__builtin_arm_mve_vabsq_m_f32
__builtin_arm_mve_vabsq_m_s16
__builtin_arm_mve_vabsq_m_s32
__builtin_arm_mve_vabsq_m_s8
__builtin_arm_mve_vabsq_s16
__builtin_arm_mve_vabsq_s32
__builtin_arm_mve_vabsq_s8
__builtin_arm_mve_vabsq_x_f16
__builtin_arm_mve_vabsq_x_f32
__builtin_arm_mve_vabsq_x_s16
__builtin_arm_mve_vabsq_x_s32
__builtin_arm_mve_vabsq_x_s8
__builtin_arm_mve_vadciq_m_s32
__builtin_arm_mve_vadciq_m_u32
__builtin_arm_mve_vadciq_s32
__builtin_arm_mve_vadciq_u32
__builtin_arm_mve_vadcq_m_s32
__builtin_arm_mve_vadcq_m_u32
__builtin_arm_mve_vadcq_s32
__builtin_arm_mve_vadcq_u32
__builtin_arm_mve_vaddlvaq_p_s32
__builtin_arm_mve_vaddlvaq_p_u32
__builtin_arm_mve_vaddlvaq_s32
__builtin_arm_mve_vaddlvaq_u32
__builtin_arm_mve_vaddlvq_p_s32
__builtin_arm_mve_vaddlvq_p_u32
__builtin_arm_mve_vaddlvq_s32
__builtin_arm_mve_vaddlvq_u32
__builtin_arm_mve_vaddq_f16
__builtin_arm_mve_vaddq_f32
__builtin_arm_mve_vaddq_m_f16
__builtin_arm_mve_vaddq_m_f32
__builtin_arm_mve_vaddq_m_n_f16
__builtin_arm_mve_vaddq_m_n_f32
__builtin_arm_mve_vaddq_m_n_s16
__builtin_arm_mve_vaddq_m_n_s32
__builtin_arm_mve_vaddq_m_n_s8
__builtin_arm_mve_vaddq_m_n_u16
__builtin_arm_mve_vaddq_m_n_u32
__builtin_arm_mve_vaddq_m_n_u8
__builtin_arm_mve_vaddq_m_s16
__builtin_arm_mve_vaddq_m_s32
__builtin_arm_mve_vaddq_m_s8
__builtin_arm_mve_vaddq_m_u16
__builtin_arm_mve_vaddq_m_u32
__builtin_arm_mve_vaddq_m_u8
__builtin_arm_mve_vaddq_n_f16
__builtin_arm_mve_vaddq_n_f32
__builtin_arm_mve_vaddq_n_s16
__builtin_arm_mve_vaddq_n_s32
__builtin_arm_mve_vaddq_n_s8
__builtin_arm_mve_vaddq_n_u16
__builtin_arm_mve_vaddq_n_u32
__builtin_arm_mve_vaddq_n_u8
__builtin_arm_mve_vaddq_s16
__builtin_arm_mve_vaddq_s32
__builtin_arm_mve_vaddq_s8
__builtin_arm_mve_vaddq_u16
__builtin_arm_mve_vaddq_u32
__builtin_arm_mve_vaddq_u8
__builtin_arm_mve_vaddq_x_f16
__builtin_arm_mve_vaddq_x_f32
__builtin_arm_mve_vaddq_x_n_f16
__builtin_arm_mve_vaddq_x_n_f32
__builtin_arm_mve_vaddq_x_n_s16
__builtin_arm_mve_vaddq_x_n_s32
__builtin_arm_mve_vaddq_x_n_s8
__builtin_arm_mve_vaddq_x_n_u16
__builtin_arm_mve_vaddq_x_n_u32
__builtin_arm_mve_vaddq_x_n_u8
__builtin_arm_mve_vaddq_x_s16
__builtin_arm_mve_vaddq_x_s32
__builtin_arm_mve_vaddq_x_s8
__builtin_arm_mve_vaddq_x_u16
__builtin_arm_mve_vaddq_x_u32
__builtin_arm_mve_vaddq_x_u8
__builtin_arm_mve_vaddvaq_p_s16
__builtin_arm_mve_vaddvaq_p_s32
__builtin_arm_mve_vaddvaq_p_s8
__builtin_arm_mve_vaddvaq_p_u16
__builtin_arm_mve_vaddvaq_p_u32
__builtin_arm_mve_vaddvaq_p_u8
__builtin_arm_mve_vaddvaq_s16
__builtin_arm_mve_vaddvaq_s32
__builtin_arm_mve_vaddvaq_s8
__builtin_arm_mve_vaddvaq_u16
__builtin_arm_mve_vaddvaq_u32
__builtin_arm_mve_vaddvaq_u8
__builtin_arm_mve_vaddvq_p_s16
__builtin_arm_mve_vaddvq_p_s32
__builtin_arm_mve_vaddvq_p_s8
__builtin_arm_mve_vaddvq_p_u16
__builtin_arm_mve_vaddvq_p_u32
__builtin_arm_mve_vaddvq_p_u8
__builtin_arm_mve_vaddvq_s16
__builtin_arm_mve_vaddvq_s32
__builtin_arm_mve_vaddvq_s8
__builtin_arm_mve_vaddvq_u16
__builtin_arm_mve_vaddvq_u32
__builtin_arm_mve_vaddvq_u8
__builtin_arm_mve_vandq_f16
__builtin_arm_mve_vandq_f32
__builtin_arm_mve_vandq_m_f16
__builtin_arm_mve_vandq_m_f32
__builtin_arm_mve_vandq_m_s16
__builtin_arm_mve_vandq_m_s32
__builtin_arm_mve_vandq_m_s8
__builtin_arm_mve_vandq_m_u16
__builtin_arm_mve_vandq_m_u32
__builtin_arm_mve_vandq_m_u8
__builtin_arm_mve_vandq_s16
__builtin_arm_mve_vandq_s32
__builtin_arm_mve_vandq_s8
__builtin_arm_mve_vandq_u16
__builtin_arm_mve_vandq_u32
__builtin_arm_mve_vandq_u8
__builtin_arm_mve_vandq_x_f16
__builtin_arm_mve_vandq_x_f32
__builtin_arm_mve_vandq_x_s16
__builtin_arm_mve_vandq_x_s32
__builtin_arm_mve_vandq_x_s8
__builtin_arm_mve_vandq_x_u16
__builtin_arm_mve_vandq_x_u32
__builtin_arm_mve_vandq_x_u8
__builtin_arm_mve_vbicq_f16
__builtin_arm_mve_vbicq_f32
__builtin_arm_mve_vbicq_m_f16
__builtin_arm_mve_vbicq_m_f32
__builtin_arm_mve_vbicq_m_n_s16
__builtin_arm_mve_vbicq_m_n_s32
__builtin_arm_mve_vbicq_m_n_u16
__builtin_arm_mve_vbicq_m_n_u32
__builtin_arm_mve_vbicq_m_s16
__builtin_arm_mve_vbicq_m_s32
__builtin_arm_mve_vbicq_m_s8
__builtin_arm_mve_vbicq_m_u16
__builtin_arm_mve_vbicq_m_u32
__builtin_arm_mve_vbicq_m_u8
__builtin_arm_mve_vbicq_n_s16
__builtin_arm_mve_vbicq_n_s32
__builtin_arm_mve_vbicq_n_u16
__builtin_arm_mve_vbicq_n_u32
__builtin_arm_mve_vbicq_s16
__builtin_arm_mve_vbicq_s32
__builtin_arm_mve_vbicq_s8
__builtin_arm_mve_vbicq_u16
__builtin_arm_mve_vbicq_u32
__builtin_arm_mve_vbicq_u8
__builtin_arm_mve_vbicq_x_f16
__builtin_arm_mve_vbicq_x_f32
__builtin_arm_mve_vbicq_x_s16
__builtin_arm_mve_vbicq_x_s32
__builtin_arm_mve_vbicq_x_s8
__builtin_arm_mve_vbicq_x_u16
__builtin_arm_mve_vbicq_x_u32
__builtin_arm_mve_vbicq_x_u8
__builtin_arm_mve_vbrsrq_m_n_f16
__builtin_arm_mve_vbrsrq_m_n_f32
__builtin_arm_mve_vbrsrq_m_n_s16
__builtin_arm_mve_vbrsrq_m_n_s32
__builtin_arm_mve_vbrsrq_m_n_s8
__builtin_arm_mve_vbrsrq_m_n_u16
__builtin_arm_mve_vbrsrq_m_n_u32
__builtin_arm_mve_vbrsrq_m_n_u8
__builtin_arm_mve_vbrsrq_n_f16
__builtin_arm_mve_vbrsrq_n_f32
__builtin_arm_mve_vbrsrq_n_s16
__builtin_arm_mve_vbrsrq_n_s32
__builtin_arm_mve_vbrsrq_n_s8
__builtin_arm_mve_vbrsrq_n_u16
__builtin_arm_mve_vbrsrq_n_u32
__builtin_arm_mve_vbrsrq_n_u8
__builtin_arm_mve_vbrsrq_x_n_f16
__builtin_arm_mve_vbrsrq_x_n_f32
__builtin_arm_mve_vbrsrq_x_n_s16
__builtin_arm_mve_vbrsrq_x_n_s32
__builtin_arm_mve_vbrsrq_x_n_s8
__builtin_arm_mve_vbrsrq_x_n_u16
__builtin_arm_mve_vbrsrq_x_n_u32
__builtin_arm_mve_vbrsrq_x_n_u8
__builtin_arm_mve_vcaddq_rot270_f16
__builtin_arm_mve_vcaddq_rot270_f32
__builtin_arm_mve_vcaddq_rot270_m_f16
__builtin_arm_mve_vcaddq_rot270_m_f32
__builtin_arm_mve_vcaddq_rot270_m_s16
__builtin_arm_mve_vcaddq_rot270_m_s32
__builtin_arm_mve_vcaddq_rot270_m_s8
__builtin_arm_mve_vcaddq_rot270_m_u16
__builtin_arm_mve_vcaddq_rot270_m_u32
__builtin_arm_mve_vcaddq_rot270_m_u8
__builtin_arm_mve_vcaddq_rot270_s16
__builtin_arm_mve_vcaddq_rot270_s32
__builtin_arm_mve_vcaddq_rot270_s8
__builtin_arm_mve_vcaddq_rot270_u16
__builtin_arm_mve_vcaddq_rot270_u32
__builtin_arm_mve_vcaddq_rot270_u8
__builtin_arm_mve_vcaddq_rot270_x_f16
__builtin_arm_mve_vcaddq_rot270_x_f32
__builtin_arm_mve_vcaddq_rot270_x_s16
__builtin_arm_mve_vcaddq_rot270_x_s32
__builtin_arm_mve_vcaddq_rot270_x_s8
__builtin_arm_mve_vcaddq_rot270_x_u16
__builtin_arm_mve_vcaddq_rot270_x_u32
__builtin_arm_mve_vcaddq_rot270_x_u8
__builtin_arm_mve_vcaddq_rot90_f16
__builtin_arm_mve_vcaddq_rot90_f32
__builtin_arm_mve_vcaddq_rot90_m_f16
__builtin_arm_mve_vcaddq_rot90_m_f32
__builtin_arm_mve_vcaddq_rot90_m_s16
__builtin_arm_mve_vcaddq_rot90_m_s32
__builtin_arm_mve_vcaddq_rot90_m_s8
__builtin_arm_mve_vcaddq_rot90_m_u16
__builtin_arm_mve_vcaddq_rot90_m_u32
__builtin_arm_mve_vcaddq_rot90_m_u8
__builtin_arm_mve_vcaddq_rot90_s16
__builtin_arm_mve_vcaddq_rot90_s32
__builtin_arm_mve_vcaddq_rot90_s8
__builtin_arm_mve_vcaddq_rot90_u16
__builtin_arm_mve_vcaddq_rot90_u32
__builtin_arm_mve_vcaddq_rot90_u8
__builtin_arm_mve_vcaddq_rot90_x_f16
__builtin_arm_mve_vcaddq_rot90_x_f32
__builtin_arm_mve_vcaddq_rot90_x_s16
__builtin_arm_mve_vcaddq_rot90_x_s32
__builtin_arm_mve_vcaddq_rot90_x_s8
__builtin_arm_mve_vcaddq_rot90_x_u16
__builtin_arm_mve_vcaddq_rot90_x_u32
__builtin_arm_mve_vcaddq_rot90_x_u8
__builtin_arm_mve_vclsq_m_s16
__builtin_arm_mve_vclsq_m_s32
__builtin_arm_mve_vclsq_m_s8
__builtin_arm_mve_vclsq_s16
__builtin_arm_mve_vclsq_s32
__builtin_arm_mve_vclsq_s8
__builtin_arm_mve_vclsq_x_s16
__builtin_arm_mve_vclsq_x_s32
__builtin_arm_mve_vclsq_x_s8
__builtin_arm_mve_vclzq_m_s16
__builtin_arm_mve_vclzq_m_s32
__builtin_arm_mve_vclzq_m_s8
__builtin_arm_mve_vclzq_m_u16
__builtin_arm_mve_vclzq_m_u32
__builtin_arm_mve_vclzq_m_u8
__builtin_arm_mve_vclzq_s16
__builtin_arm_mve_vclzq_s32
__builtin_arm_mve_vclzq_s8
__builtin_arm_mve_vclzq_u16
__builtin_arm_mve_vclzq_u32
__builtin_arm_mve_vclzq_u8
__builtin_arm_mve_vclzq_x_s16
__builtin_arm_mve_vclzq_x_s32
__builtin_arm_mve_vclzq_x_s8
__builtin_arm_mve_vclzq_x_u16
__builtin_arm_mve_vclzq_x_u32
__builtin_arm_mve_vclzq_x_u8
__builtin_arm_mve_vcmlaq_f16
__builtin_arm_mve_vcmlaq_f32
__builtin_arm_mve_vcmlaq_m_f16
__builtin_arm_mve_vcmlaq_m_f32
__builtin_arm_mve_vcmlaq_rot180_f16
__builtin_arm_mve_vcmlaq_rot180_f32
__builtin_arm_mve_vcmlaq_rot180_m_f16
__builtin_arm_mve_vcmlaq_rot180_m_f32
__builtin_arm_mve_vcmlaq_rot270_f16
__builtin_arm_mve_vcmlaq_rot270_f32
__builtin_arm_mve_vcmlaq_rot270_m_f16
__builtin_arm_mve_vcmlaq_rot270_m_f32
__builtin_arm_mve_vcmlaq_rot90_f16
__builtin_arm_mve_vcmlaq_rot90_f32
__builtin_arm_mve_vcmlaq_rot90_m_f16
__builtin_arm_mve_vcmlaq_rot90_m_f32
__builtin_arm_mve_vcmpcsq_m_n_u16
__builtin_arm_mve_vcmpcsq_m_n_u32
__builtin_arm_mve_vcmpcsq_m_n_u8
__builtin_arm_mve_vcmpcsq_m_u16
__builtin_arm_mve_vcmpcsq_m_u32
__builtin_arm_mve_vcmpcsq_m_u8
__builtin_arm_mve_vcmpcsq_n_u16
__builtin_arm_mve_vcmpcsq_n_u32
__builtin_arm_mve_vcmpcsq_n_u8
__builtin_arm_mve_vcmpcsq_u16
__builtin_arm_mve_vcmpcsq_u32
__builtin_arm_mve_vcmpcsq_u8
__builtin_arm_mve_vcmpeqq_f16
__builtin_arm_mve_vcmpeqq_f32
__builtin_arm_mve_vcmpeqq_m_f16
__builtin_arm_mve_vcmpeqq_m_f32
__builtin_arm_mve_vcmpeqq_m_n_f16
__builtin_arm_mve_vcmpeqq_m_n_f32
__builtin_arm_mve_vcmpeqq_m_n_s16
__builtin_arm_mve_vcmpeqq_m_n_s32
__builtin_arm_mve_vcmpeqq_m_n_s8
__builtin_arm_mve_vcmpeqq_m_n_u16
__builtin_arm_mve_vcmpeqq_m_n_u32
__builtin_arm_mve_vcmpeqq_m_n_u8
__builtin_arm_mve_vcmpeqq_m_s16
__builtin_arm_mve_vcmpeqq_m_s32
__builtin_arm_mve_vcmpeqq_m_s8
__builtin_arm_mve_vcmpeqq_m_u16
__builtin_arm_mve_vcmpeqq_m_u32
__builtin_arm_mve_vcmpeqq_m_u8
__builtin_arm_mve_vcmpeqq_n_f16
__builtin_arm_mve_vcmpeqq_n_f32
__builtin_arm_mve_vcmpeqq_n_s16
__builtin_arm_mve_vcmpeqq_n_s32
__builtin_arm_mve_vcmpeqq_n_s8
__builtin_arm_mve_vcmpeqq_n_u16
__builtin_arm_mve_vcmpeqq_n_u32
__builtin_arm_mve_vcmpeqq_n_u8
__builtin_arm_mve_vcmpeqq_s16
__builtin_arm_mve_vcmpeqq_s32
__builtin_arm_mve_vcmpeqq_s8
__builtin_arm_mve_vcmpeqq_u16
__builtin_arm_mve_vcmpeqq_u32
__builtin_arm_mve_vcmpeqq_u8
__builtin_arm_mve_vcmpgeq_f16
__builtin_arm_mve_vcmpgeq_f32
__builtin_arm_mve_vcmpgeq_m_f16
__builtin_arm_mve_vcmpgeq_m_f32
__builtin_arm_mve_vcmpgeq_m_n_f16
__builtin_arm_mve_vcmpgeq_m_n_f32
__builtin_arm_mve_vcmpgeq_m_n_s16
__builtin_arm_mve_vcmpgeq_m_n_s32
__builtin_arm_mve_vcmpgeq_m_n_s8
__builtin_arm_mve_vcmpgeq_m_s16
__builtin_arm_mve_vcmpgeq_m_s32
__builtin_arm_mve_vcmpgeq_m_s8
__builtin_arm_mve_vcmpgeq_n_f16
__builtin_arm_mve_vcmpgeq_n_f32
__builtin_arm_mve_vcmpgeq_n_s16
__builtin_arm_mve_vcmpgeq_n_s32
__builtin_arm_mve_vcmpgeq_n_s8
__builtin_arm_mve_vcmpgeq_s16
__builtin_arm_mve_vcmpgeq_s32
__builtin_arm_mve_vcmpgeq_s8
__builtin_arm_mve_vcmpgtq_f16
__builtin_arm_mve_vcmpgtq_f32
__builtin_arm_mve_vcmpgtq_m_f16
__builtin_arm_mve_vcmpgtq_m_f32
__builtin_arm_mve_vcmpgtq_m_n_f16
__builtin_arm_mve_vcmpgtq_m_n_f32
__builtin_arm_mve_vcmpgtq_m_n_s16
__builtin_arm_mve_vcmpgtq_m_n_s32
__builtin_arm_mve_vcmpgtq_m_n_s8
__builtin_arm_mve_vcmpgtq_m_s16
__builtin_arm_mve_vcmpgtq_m_s32
__builtin_arm_mve_vcmpgtq_m_s8
__builtin_arm_mve_vcmpgtq_n_f16
__builtin_arm_mve_vcmpgtq_n_f32
__builtin_arm_mve_vcmpgtq_n_s16
__builtin_arm_mve_vcmpgtq_n_s32
__builtin_arm_mve_vcmpgtq_n_s8
__builtin_arm_mve_vcmpgtq_s16
__builtin_arm_mve_vcmpgtq_s32
__builtin_arm_mve_vcmpgtq_s8
__builtin_arm_mve_vcmphiq_m_n_u16
__builtin_arm_mve_vcmphiq_m_n_u32
__builtin_arm_mve_vcmphiq_m_n_u8
__builtin_arm_mve_vcmphiq_m_u16
__builtin_arm_mve_vcmphiq_m_u32
__builtin_arm_mve_vcmphiq_m_u8
__builtin_arm_mve_vcmphiq_n_u16
__builtin_arm_mve_vcmphiq_n_u32
__builtin_arm_mve_vcmphiq_n_u8
__builtin_arm_mve_vcmphiq_u16
__builtin_arm_mve_vcmphiq_u32
__builtin_arm_mve_vcmphiq_u8
__builtin_arm_mve_vcmpleq_f16
__builtin_arm_mve_vcmpleq_f32
__builtin_arm_mve_vcmpleq_m_f16
__builtin_arm_mve_vcmpleq_m_f32
__builtin_arm_mve_vcmpleq_m_n_f16
__builtin_arm_mve_vcmpleq_m_n_f32
__builtin_arm_mve_vcmpleq_m_n_s16
__builtin_arm_mve_vcmpleq_m_n_s32
__builtin_arm_mve_vcmpleq_m_n_s8
__builtin_arm_mve_vcmpleq_m_s16
__builtin_arm_mve_vcmpleq_m_s32
__builtin_arm_mve_vcmpleq_m_s8
__builtin_arm_mve_vcmpleq_n_f16
__builtin_arm_mve_vcmpleq_n_f32
__builtin_arm_mve_vcmpleq_n_s16
__builtin_arm_mve_vcmpleq_n_s32
__builtin_arm_mve_vcmpleq_n_s8
__builtin_arm_mve_vcmpleq_s16
__builtin_arm_mve_vcmpleq_s32
__builtin_arm_mve_vcmpleq_s8
__builtin_arm_mve_vcmpltq_f16
__builtin_arm_mve_vcmpltq_f32
__builtin_arm_mve_vcmpltq_m_f16
__builtin_arm_mve_vcmpltq_m_f32
__builtin_arm_mve_vcmpltq_m_n_f16
__builtin_arm_mve_vcmpltq_m_n_f32
__builtin_arm_mve_vcmpltq_m_n_s16
__builtin_arm_mve_vcmpltq_m_n_s32
__builtin_arm_mve_vcmpltq_m_n_s8
__builtin_arm_mve_vcmpltq_m_s16
__builtin_arm_mve_vcmpltq_m_s32
__builtin_arm_mve_vcmpltq_m_s8
__builtin_arm_mve_vcmpltq_n_f16
__builtin_arm_mve_vcmpltq_n_f32
__builtin_arm_mve_vcmpltq_n_s16
__builtin_arm_mve_vcmpltq_n_s32
__builtin_arm_mve_vcmpltq_n_s8
__builtin_arm_mve_vcmpltq_s16
__builtin_arm_mve_vcmpltq_s32
__builtin_arm_mve_vcmpltq_s8
__builtin_arm_mve_vcmpneq_f16
__builtin_arm_mve_vcmpneq_f32
__builtin_arm_mve_vcmpneq_m_f16
__builtin_arm_mve_vcmpneq_m_f32
__builtin_arm_mve_vcmpneq_m_n_f16
__builtin_arm_mve_vcmpneq_m_n_f32
__builtin_arm_mve_vcmpneq_m_n_s16
__builtin_arm_mve_vcmpneq_m_n_s32
__builtin_arm_mve_vcmpneq_m_n_s8
__builtin_arm_mve_vcmpneq_m_n_u16
__builtin_arm_mve_vcmpneq_m_n_u32
__builtin_arm_mve_vcmpneq_m_n_u8
__builtin_arm_mve_vcmpneq_m_s16
__builtin_arm_mve_vcmpneq_m_s32
__builtin_arm_mve_vcmpneq_m_s8
__builtin_arm_mve_vcmpneq_m_u16
__builtin_arm_mve_vcmpneq_m_u32
__builtin_arm_mve_vcmpneq_m_u8
__builtin_arm_mve_vcmpneq_n_f16
__builtin_arm_mve_vcmpneq_n_f32
__builtin_arm_mve_vcmpneq_n_s16
__builtin_arm_mve_vcmpneq_n_s32
__builtin_arm_mve_vcmpneq_n_s8
__builtin_arm_mve_vcmpneq_n_u16
__builtin_arm_mve_vcmpneq_n_u32
__builtin_arm_mve_vcmpneq_n_u8
__builtin_arm_mve_vcmpneq_s16
__builtin_arm_mve_vcmpneq_s32
__builtin_arm_mve_vcmpneq_s8
__builtin_arm_mve_vcmpneq_u16
__builtin_arm_mve_vcmpneq_u32
__builtin_arm_mve_vcmpneq_u8
__builtin_arm_mve_vcmulq_f16
__builtin_arm_mve_vcmulq_f32
__builtin_arm_mve_vcmulq_m_f16
__builtin_arm_mve_vcmulq_m_f32
__builtin_arm_mve_vcmulq_rot180_f16
__builtin_arm_mve_vcmulq_rot180_f32
__builtin_arm_mve_vcmulq_rot180_m_f16
__builtin_arm_mve_vcmulq_rot180_m_f32
__builtin_arm_mve_vcmulq_rot180_x_f16
__builtin_arm_mve_vcmulq_rot180_x_f32
__builtin_arm_mve_vcmulq_rot270_f16
__builtin_arm_mve_vcmulq_rot270_f32
__builtin_arm_mve_vcmulq_rot270_m_f16
__builtin_arm_mve_vcmulq_rot270_m_f32
__builtin_arm_mve_vcmulq_rot270_x_f16
__builtin_arm_mve_vcmulq_rot270_x_f32
__builtin_arm_mve_vcmulq_rot90_f16
__builtin_arm_mve_vcmulq_rot90_f32
__builtin_arm_mve_vcmulq_rot90_m_f16
__builtin_arm_mve_vcmulq_rot90_m_f32
__builtin_arm_mve_vcmulq_rot90_x_f16
__builtin_arm_mve_vcmulq_rot90_x_f32
__builtin_arm_mve_vcmulq_x_f16
__builtin_arm_mve_vcmulq_x_f32
__builtin_arm_mve_vcreateq_f16
__builtin_arm_mve_vcreateq_f32
__builtin_arm_mve_vcreateq_s16
__builtin_arm_mve_vcreateq_s32
__builtin_arm_mve_vcreateq_s64
__builtin_arm_mve_vcreateq_s8
__builtin_arm_mve_vcreateq_u16
__builtin_arm_mve_vcreateq_u32
__builtin_arm_mve_vcreateq_u64
__builtin_arm_mve_vcreateq_u8
__builtin_arm_mve_vctp16q
__builtin_arm_mve_vctp16q_m
__builtin_arm_mve_vctp32q
__builtin_arm_mve_vctp32q_m
__builtin_arm_mve_vctp64q
__builtin_arm_mve_vctp64q_m
__builtin_arm_mve_vctp8q
__builtin_arm_mve_vctp8q_m
__builtin_arm_mve_vcvtaq_m_s16_f16
__builtin_arm_mve_vcvtaq_m_s32_f32
__builtin_arm_mve_vcvtaq_m_u16_f16
__builtin_arm_mve_vcvtaq_m_u32_f32
__builtin_arm_mve_vcvtaq_s16_f16
__builtin_arm_mve_vcvtaq_s32_f32
__builtin_arm_mve_vcvtaq_u16_f16
__builtin_arm_mve_vcvtaq_u32_f32
__builtin_arm_mve_vcvtaq_x_s16_f16
__builtin_arm_mve_vcvtaq_x_s32_f32
__builtin_arm_mve_vcvtaq_x_u16_f16
__builtin_arm_mve_vcvtaq_x_u32_f32
__builtin_arm_mve_vcvtbq_f16_f32
__builtin_arm_mve_vcvtbq_f32_f16
__builtin_arm_mve_vcvtbq_m_f16_f32
__builtin_arm_mve_vcvtbq_m_f32_f16
__builtin_arm_mve_vcvtbq_x_f32_f16
__builtin_arm_mve_vcvtmq_m_s16_f16
__builtin_arm_mve_vcvtmq_m_s32_f32
__builtin_arm_mve_vcvtmq_m_u16_f16
__builtin_arm_mve_vcvtmq_m_u32_f32
__builtin_arm_mve_vcvtmq_s16_f16
__builtin_arm_mve_vcvtmq_s32_f32
__builtin_arm_mve_vcvtmq_u16_f16
__builtin_arm_mve_vcvtmq_u32_f32
__builtin_arm_mve_vcvtmq_x_s16_f16
__builtin_arm_mve_vcvtmq_x_s32_f32
__builtin_arm_mve_vcvtmq_x_u16_f16
__builtin_arm_mve_vcvtmq_x_u32_f32
__builtin_arm_mve_vcvtnq_m_s16_f16
__builtin_arm_mve_vcvtnq_m_s32_f32
__builtin_arm_mve_vcvtnq_m_u16_f16
__builtin_arm_mve_vcvtnq_m_u32_f32
__builtin_arm_mve_vcvtnq_s16_f16
__builtin_arm_mve_vcvtnq_s32_f32
__builtin_arm_mve_vcvtnq_u16_f16
__builtin_arm_mve_vcvtnq_u32_f32
__builtin_arm_mve_vcvtnq_x_s16_f16
__builtin_arm_mve_vcvtnq_x_s32_f32
__builtin_arm_mve_vcvtnq_x_u16_f16
__builtin_arm_mve_vcvtnq_x_u32_f32
__builtin_arm_mve_vcvtpq_m_s16_f16
__builtin_arm_mve_vcvtpq_m_s32_f32
__builtin_arm_mve_vcvtpq_m_u16_f16
__builtin_arm_mve_vcvtpq_m_u32_f32
__builtin_arm_mve_vcvtpq_s16_f16
__builtin_arm_mve_vcvtpq_s32_f32
__builtin_arm_mve_vcvtpq_u16_f16
__builtin_arm_mve_vcvtpq_u32_f32
__builtin_arm_mve_vcvtpq_x_s16_f16
__builtin_arm_mve_vcvtpq_x_s32_f32
__builtin_arm_mve_vcvtpq_x_u16_f16
__builtin_arm_mve_vcvtpq_x_u32_f32
__builtin_arm_mve_vcvtq_f16_s16
__builtin_arm_mve_vcvtq_f16_u16
__builtin_arm_mve_vcvtq_f32_s32
__builtin_arm_mve_vcvtq_f32_u32
__builtin_arm_mve_vcvtq_m_f16_s16
__builtin_arm_mve_vcvtq_m_f16_u16
__builtin_arm_mve_vcvtq_m_f32_s32
__builtin_arm_mve_vcvtq_m_f32_u32
__builtin_arm_mve_vcvtq_m_n_f16_s16
__builtin_arm_mve_vcvtq_m_n_f16_u16
__builtin_arm_mve_vcvtq_m_n_f32_s32
__builtin_arm_mve_vcvtq_m_n_f32_u32
__builtin_arm_mve_vcvtq_m_n_s16_f16
__builtin_arm_mve_vcvtq_m_n_s32_f32
__builtin_arm_mve_vcvtq_m_n_u16_f16
__builtin_arm_mve_vcvtq_m_n_u32_f32
__builtin_arm_mve_vcvtq_m_s16_f16
__builtin_arm_mve_vcvtq_m_s32_f32
__builtin_arm_mve_vcvtq_m_u16_f16
__builtin_arm_mve_vcvtq_m_u32_f32
__builtin_arm_mve_vcvtq_n_f16_s16
__builtin_arm_mve_vcvtq_n_f16_u16
__builtin_arm_mve_vcvtq_n_f32_s32
__builtin_arm_mve_vcvtq_n_f32_u32
__builtin_arm_mve_vcvtq_n_s16_f16
__builtin_arm_mve_vcvtq_n_s32_f32
__builtin_arm_mve_vcvtq_n_u16_f16
__builtin_arm_mve_vcvtq_n_u32_f32
__builtin_arm_mve_vcvtq_s16_f16
__builtin_arm_mve_vcvtq_s32_f32
__builtin_arm_mve_vcvtq_u16_f16
__builtin_arm_mve_vcvtq_u32_f32
__builtin_arm_mve_vcvtq_x_f16_s16
__builtin_arm_mve_vcvtq_x_f16_u16
__builtin_arm_mve_vcvtq_x_f32_s32
__builtin_arm_mve_vcvtq_x_f32_u32
__builtin_arm_mve_vcvtq_x_n_f16_s16
__builtin_arm_mve_vcvtq_x_n_f16_u16
__builtin_arm_mve_vcvtq_x_n_f32_s32
__builtin_arm_mve_vcvtq_x_n_f32_u32
__builtin_arm_mve_vcvtq_x_n_s16_f16
__builtin_arm_mve_vcvtq_x_n_s32_f32
__builtin_arm_mve_vcvtq_x_n_u16_f16
__builtin_arm_mve_vcvtq_x_n_u32_f32
__builtin_arm_mve_vcvtq_x_s16_f16
__builtin_arm_mve_vcvtq_x_s32_f32
__builtin_arm_mve_vcvtq_x_u16_f16
__builtin_arm_mve_vcvtq_x_u32_f32
__builtin_arm_mve_vcvttq_f16_f32
__builtin_arm_mve_vcvttq_f32_f16
__builtin_arm_mve_vcvttq_m_f16_f32
__builtin_arm_mve_vcvttq_m_f32_f16
__builtin_arm_mve_vcvttq_x_f32_f16
__builtin_arm_mve_vddupq_m_n_u16
__builtin_arm_mve_vddupq_m_n_u32
__builtin_arm_mve_vddupq_m_n_u8
__builtin_arm_mve_vddupq_m_wb_u16
__builtin_arm_mve_vddupq_m_wb_u32
__builtin_arm_mve_vddupq_m_wb_u8
__builtin_arm_mve_vddupq_n_u16
__builtin_arm_mve_vddupq_n_u32
__builtin_arm_mve_vddupq_n_u8
__builtin_arm_mve_vddupq_wb_u16
__builtin_arm_mve_vddupq_wb_u32
__builtin_arm_mve_vddupq_wb_u8
__builtin_arm_mve_vddupq_x_n_u16
__builtin_arm_mve_vddupq_x_n_u32
__builtin_arm_mve_vddupq_x_n_u8
__builtin_arm_mve_vddupq_x_wb_u16
__builtin_arm_mve_vddupq_x_wb_u32
__builtin_arm_mve_vddupq_x_wb_u8
__builtin_arm_mve_vdupq_m_n_f16
__builtin_arm_mve_vdupq_m_n_f32
__builtin_arm_mve_vdupq_m_n_s16
__builtin_arm_mve_vdupq_m_n_s32
__builtin_arm_mve_vdupq_m_n_s8
__builtin_arm_mve_vdupq_m_n_u16
__builtin_arm_mve_vdupq_m_n_u32
__builtin_arm_mve_vdupq_m_n_u8
__builtin_arm_mve_vdupq_n_f16
__builtin_arm_mve_vdupq_n_f32
__builtin_arm_mve_vdupq_n_s16
__builtin_arm_mve_vdupq_n_s32
__builtin_arm_mve_vdupq_n_s8
__builtin_arm_mve_vdupq_n_u16
__builtin_arm_mve_vdupq_n_u32
__builtin_arm_mve_vdupq_n_u8
__builtin_arm_mve_vdupq_x_n_f16
__builtin_arm_mve_vdupq_x_n_f32
__builtin_arm_mve_vdupq_x_n_s16
__builtin_arm_mve_vdupq_x_n_s32
__builtin_arm_mve_vdupq_x_n_s8
__builtin_arm_mve_vdupq_x_n_u16
__builtin_arm_mve_vdupq_x_n_u32
__builtin_arm_mve_vdupq_x_n_u8
__builtin_arm_mve_vdwdupq_m_n_u16
__builtin_arm_mve_vdwdupq_m_n_u32
__builtin_arm_mve_vdwdupq_m_n_u8
__builtin_arm_mve_vdwdupq_m_wb_u16
__builtin_arm_mve_vdwdupq_m_wb_u32
__builtin_arm_mve_vdwdupq_m_wb_u8
__builtin_arm_mve_vdwdupq_n_u16
__builtin_arm_mve_vdwdupq_n_u32
__builtin_arm_mve_vdwdupq_n_u8
__builtin_arm_mve_vdwdupq_wb_u16
__builtin_arm_mve_vdwdupq_wb_u32
__builtin_arm_mve_vdwdupq_wb_u8
__builtin_arm_mve_vdwdupq_x_n_u16
__builtin_arm_mve_vdwdupq_x_n_u32
__builtin_arm_mve_vdwdupq_x_n_u8
__builtin_arm_mve_vdwdupq_x_wb_u16
__builtin_arm_mve_vdwdupq_x_wb_u32
__builtin_arm_mve_vdwdupq_x_wb_u8
__builtin_arm_mve_veorq_f16
__builtin_arm_mve_veorq_f32
__builtin_arm_mve_veorq_m_f16
__builtin_arm_mve_veorq_m_f32
__builtin_arm_mve_veorq_m_s16
__builtin_arm_mve_veorq_m_s32
__builtin_arm_mve_veorq_m_s8
__builtin_arm_mve_veorq_m_u16
__builtin_arm_mve_veorq_m_u32
__builtin_arm_mve_veorq_m_u8
__builtin_arm_mve_veorq_s16
__builtin_arm_mve_veorq_s32
__builtin_arm_mve_veorq_s8
__builtin_arm_mve_veorq_u16
__builtin_arm_mve_veorq_u32
__builtin_arm_mve_veorq_u8
__builtin_arm_mve_veorq_x_f16
__builtin_arm_mve_veorq_x_f32
__builtin_arm_mve_veorq_x_s16
__builtin_arm_mve_veorq_x_s32
__builtin_arm_mve_veorq_x_s8
__builtin_arm_mve_veorq_x_u16
__builtin_arm_mve_veorq_x_u32
__builtin_arm_mve_veorq_x_u8
__builtin_arm_mve_vfmaq_f16
__builtin_arm_mve_vfmaq_f32
__builtin_arm_mve_vfmaq_m_f16
__builtin_arm_mve_vfmaq_m_f32
__builtin_arm_mve_vfmaq_m_n_f16
__builtin_arm_mve_vfmaq_m_n_f32
__builtin_arm_mve_vfmaq_n_f16
__builtin_arm_mve_vfmaq_n_f32
__builtin_arm_mve_vfmasq_m_n_f16
__builtin_arm_mve_vfmasq_m_n_f32
__builtin_arm_mve_vfmasq_n_f16
__builtin_arm_mve_vfmasq_n_f32
__builtin_arm_mve_vfmsq_f16
__builtin_arm_mve_vfmsq_f32
__builtin_arm_mve_vfmsq_m_f16
__builtin_arm_mve_vfmsq_m_f32
__builtin_arm_mve_vgetq_lane_f16
__builtin_arm_mve_vgetq_lane_f32
__builtin_arm_mve_vgetq_lane_s16
__builtin_arm_mve_vgetq_lane_s32
__builtin_arm_mve_vgetq_lane_s64
__builtin_arm_mve_vgetq_lane_s8
__builtin_arm_mve_vgetq_lane_u16
__builtin_arm_mve_vgetq_lane_u32
__builtin_arm_mve_vgetq_lane_u64
__builtin_arm_mve_vgetq_lane_u8
__builtin_arm_mve_vhaddq_m_n_s16
__builtin_arm_mve_vhaddq_m_n_s32
__builtin_arm_mve_vhaddq_m_n_s8
__builtin_arm_mve_vhaddq_m_n_u16
__builtin_arm_mve_vhaddq_m_n_u32
__builtin_arm_mve_vhaddq_m_n_u8
__builtin_arm_mve_vhaddq_m_s16
__builtin_arm_mve_vhaddq_m_s32
__builtin_arm_mve_vhaddq_m_s8
__builtin_arm_mve_vhaddq_m_u16
__builtin_arm_mve_vhaddq_m_u32
__builtin_arm_mve_vhaddq_m_u8
__builtin_arm_mve_vhaddq_n_s16
__builtin_arm_mve_vhaddq_n_s32
__builtin_arm_mve_vhaddq_n_s8
__builtin_arm_mve_vhaddq_n_u16
__builtin_arm_mve_vhaddq_n_u32
__builtin_arm_mve_vhaddq_n_u8
__builtin_arm_mve_vhaddq_s16
__builtin_arm_mve_vhaddq_s32
__builtin_arm_mve_vhaddq_s8
__builtin_arm_mve_vhaddq_u16
__builtin_arm_mve_vhaddq_u32
__builtin_arm_mve_vhaddq_u8
__builtin_arm_mve_vhaddq_x_n_s16
__builtin_arm_mve_vhaddq_x_n_s32
__builtin_arm_mve_vhaddq_x_n_s8
__builtin_arm_mve_vhaddq_x_n_u16
__builtin_arm_mve_vhaddq_x_n_u32
__builtin_arm_mve_vhaddq_x_n_u8
__builtin_arm_mve_vhaddq_x_s16
__builtin_arm_mve_vhaddq_x_s32
__builtin_arm_mve_vhaddq_x_s8
__builtin_arm_mve_vhaddq_x_u16
__builtin_arm_mve_vhaddq_x_u32
__builtin_arm_mve_vhaddq_x_u8
__builtin_arm_mve_vhcaddq_rot270_m_s16
__builtin_arm_mve_vhcaddq_rot270_m_s32
__builtin_arm_mve_vhcaddq_rot270_m_s8
__builtin_arm_mve_vhcaddq_rot270_s16
__builtin_arm_mve_vhcaddq_rot270_s32
__builtin_arm_mve_vhcaddq_rot270_s8
__builtin_arm_mve_vhcaddq_rot270_x_s16
__builtin_arm_mve_vhcaddq_rot270_x_s32
__builtin_arm_mve_vhcaddq_rot270_x_s8
__builtin_arm_mve_vhcaddq_rot90_m_s16
__builtin_arm_mve_vhcaddq_rot90_m_s32
__builtin_arm_mve_vhcaddq_rot90_m_s8
__builtin_arm_mve_vhcaddq_rot90_s16
__builtin_arm_mve_vhcaddq_rot90_s32
__builtin_arm_mve_vhcaddq_rot90_s8
__builtin_arm_mve_vhcaddq_rot90_x_s16
__builtin_arm_mve_vhcaddq_rot90_x_s32
__builtin_arm_mve_vhcaddq_rot90_x_s8
__builtin_arm_mve_vhsubq_m_n_s16
__builtin_arm_mve_vhsubq_m_n_s32
__builtin_arm_mve_vhsubq_m_n_s8
__builtin_arm_mve_vhsubq_m_n_u16
__builtin_arm_mve_vhsubq_m_n_u32
__builtin_arm_mve_vhsubq_m_n_u8
__builtin_arm_mve_vhsubq_m_s16
__builtin_arm_mve_vhsubq_m_s32
__builtin_arm_mve_vhsubq_m_s8
__builtin_arm_mve_vhsubq_m_u16
__builtin_arm_mve_vhsubq_m_u32
__builtin_arm_mve_vhsubq_m_u8
__builtin_arm_mve_vhsubq_n_s16
__builtin_arm_mve_vhsubq_n_s32
__builtin_arm_mve_vhsubq_n_s8
__builtin_arm_mve_vhsubq_n_u16
__builtin_arm_mve_vhsubq_n_u32
__builtin_arm_mve_vhsubq_n_u8
__builtin_arm_mve_vhsubq_s16
__builtin_arm_mve_vhsubq_s32
__builtin_arm_mve_vhsubq_s8
__builtin_arm_mve_vhsubq_u16
__builtin_arm_mve_vhsubq_u32
__builtin_arm_mve_vhsubq_u8
__builtin_arm_mve_vhsubq_x_n_s16
__builtin_arm_mve_vhsubq_x_n_s32
__builtin_arm_mve_vhsubq_x_n_s8
__builtin_arm_mve_vhsubq_x_n_u16
__builtin_arm_mve_vhsubq_x_n_u32
__builtin_arm_mve_vhsubq_x_n_u8
__builtin_arm_mve_vhsubq_x_s16
__builtin_arm_mve_vhsubq_x_s32
__builtin_arm_mve_vhsubq_x_s8
__builtin_arm_mve_vhsubq_x_u16
__builtin_arm_mve_vhsubq_x_u32
__builtin_arm_mve_vhsubq_x_u8
__builtin_arm_mve_vidupq_m_n_u16
__builtin_arm_mve_vidupq_m_n_u32
__builtin_arm_mve_vidupq_m_n_u8
__builtin_arm_mve_vidupq_m_wb_u16
__builtin_arm_mve_vidupq_m_wb_u32
__builtin_arm_mve_vidupq_m_wb_u8
__builtin_arm_mve_vidupq_n_u16
__builtin_arm_mve_vidupq_n_u32
__builtin_arm_mve_vidupq_n_u8
__builtin_arm_mve_vidupq_wb_u16
__builtin_arm_mve_vidupq_wb_u32
__builtin_arm_mve_vidupq_wb_u8
__builtin_arm_mve_vidupq_x_n_u16
__builtin_arm_mve_vidupq_x_n_u32
__builtin_arm_mve_vidupq_x_n_u8
__builtin_arm_mve_vidupq_x_wb_u16
__builtin_arm_mve_vidupq_x_wb_u32
__builtin_arm_mve_vidupq_x_wb_u8
__builtin_arm_mve_viwdupq_m_n_u16
__builtin_arm_mve_viwdupq_m_n_u32
__builtin_arm_mve_viwdupq_m_n_u8
__builtin_arm_mve_viwdupq_m_wb_u16
__builtin_arm_mve_viwdupq_m_wb_u32
__builtin_arm_mve_viwdupq_m_wb_u8
__builtin_arm_mve_viwdupq_n_u16
__builtin_arm_mve_viwdupq_n_u32
__builtin_arm_mve_viwdupq_n_u8
__builtin_arm_mve_viwdupq_wb_u16
__builtin_arm_mve_viwdupq_wb_u32
__builtin_arm_mve_viwdupq_wb_u8
__builtin_arm_mve_viwdupq_x_n_u16
__builtin_arm_mve_viwdupq_x_n_u32
__builtin_arm_mve_viwdupq_x_n_u8
__builtin_arm_mve_viwdupq_x_wb_u16
__builtin_arm_mve_viwdupq_x_wb_u32
__builtin_arm_mve_viwdupq_x_wb_u8
__builtin_arm_mve_vld1q_f16
__builtin_arm_mve_vld1q_f32
__builtin_arm_mve_vld1q_s16
__builtin_arm_mve_vld1q_s32
__builtin_arm_mve_vld1q_s8
__builtin_arm_mve_vld1q_u16
__builtin_arm_mve_vld1q_u32
__builtin_arm_mve_vld1q_u8
__builtin_arm_mve_vld1q_z_f16
__builtin_arm_mve_vld1q_z_f32
__builtin_arm_mve_vld1q_z_s16
__builtin_arm_mve_vld1q_z_s32
__builtin_arm_mve_vld1q_z_s8
__builtin_arm_mve_vld1q_z_u16
__builtin_arm_mve_vld1q_z_u32
__builtin_arm_mve_vld1q_z_u8
__builtin_arm_mve_vld2q_f16
__builtin_arm_mve_vld2q_f32
__builtin_arm_mve_vld2q_s16
__builtin_arm_mve_vld2q_s32
__builtin_arm_mve_vld2q_s8
__builtin_arm_mve_vld2q_u16
__builtin_arm_mve_vld2q_u32
__builtin_arm_mve_vld2q_u8
__builtin_arm_mve_vld4q_f16
__builtin_arm_mve_vld4q_f32
__builtin_arm_mve_vld4q_s16
__builtin_arm_mve_vld4q_s32
__builtin_arm_mve_vld4q_s8
__builtin_arm_mve_vld4q_u16
__builtin_arm_mve_vld4q_u32
__builtin_arm_mve_vld4q_u8
__builtin_arm_mve_vldrbq_gather_offset_s16
__builtin_arm_mve_vldrbq_gather_offset_s32
__builtin_arm_mve_vldrbq_gather_offset_s8
__builtin_arm_mve_vldrbq_gather_offset_u16
__builtin_arm_mve_vldrbq_gather_offset_u32
__builtin_arm_mve_vldrbq_gather_offset_u8
__builtin_arm_mve_vldrbq_gather_offset_z_s16
__builtin_arm_mve_vldrbq_gather_offset_z_s32
__builtin_arm_mve_vldrbq_gather_offset_z_s8
__builtin_arm_mve_vldrbq_gather_offset_z_u16
__builtin_arm_mve_vldrbq_gather_offset_z_u32
__builtin_arm_mve_vldrbq_gather_offset_z_u8
__builtin_arm_mve_vldrbq_s16
__builtin_arm_mve_vldrbq_s32
__builtin_arm_mve_vldrbq_s8
__builtin_arm_mve_vldrbq_u16
__builtin_arm_mve_vldrbq_u32
__builtin_arm_mve_vldrbq_u8
__builtin_arm_mve_vldrbq_z_s16
__builtin_arm_mve_vldrbq_z_s32
__builtin_arm_mve_vldrbq_z_s8
__builtin_arm_mve_vldrbq_z_u16
__builtin_arm_mve_vldrbq_z_u32
__builtin_arm_mve_vldrbq_z_u8
__builtin_arm_mve_vldrdq_gather_base_s64
__builtin_arm_mve_vldrdq_gather_base_u64
__builtin_arm_mve_vldrdq_gather_base_wb_s64
__builtin_arm_mve_vldrdq_gather_base_wb_u64
__builtin_arm_mve_vldrdq_gather_base_wb_z_s64
__builtin_arm_mve_vldrdq_gather_base_wb_z_u64
__builtin_arm_mve_vldrdq_gather_base_z_s64
__builtin_arm_mve_vldrdq_gather_base_z_u64
__builtin_arm_mve_vldrdq_gather_offset_s64
__builtin_arm_mve_vldrdq_gather_offset_u64
__builtin_arm_mve_vldrdq_gather_offset_z_s64
__builtin_arm_mve_vldrdq_gather_offset_z_u64
__builtin_arm_mve_vldrdq_gather_shifted_offset_s64
__builtin_arm_mve_vldrdq_gather_shifted_offset_u64
__builtin_arm_mve_vldrdq_gather_shifted_offset_z_s64
__builtin_arm_mve_vldrdq_gather_shifted_offset_z_u64
__builtin_arm_mve_vldrhq_f16
__builtin_arm_mve_vldrhq_gather_offset_f16
__builtin_arm_mve_vldrhq_gather_offset_s16
__builtin_arm_mve_vldrhq_gather_offset_s32
__builtin_arm_mve_vldrhq_gather_offset_u16
__builtin_arm_mve_vldrhq_gather_offset_u32
__builtin_arm_mve_vldrhq_gather_offset_z_f16
__builtin_arm_mve_vldrhq_gather_offset_z_s16
__builtin_arm_mve_vldrhq_gather_offset_z_s32
__builtin_arm_mve_vldrhq_gather_offset_z_u16
__builtin_arm_mve_vldrhq_gather_offset_z_u32
__builtin_arm_mve_vldrhq_gather_shifted_offset_f16
__builtin_arm_mve_vldrhq_gather_shifted_offset_s16
__builtin_arm_mve_vldrhq_gather_shifted_offset_s32
__builtin_arm_mve_vldrhq_gather_shifted_offset_u16
__builtin_arm_mve_vldrhq_gather_shifted_offset_u32
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_f16
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_s16
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_s32
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_u16
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_u32
__builtin_arm_mve_vldrhq_s16
__builtin_arm_mve_vldrhq_s32
__builtin_arm_mve_vldrhq_u16
__builtin_arm_mve_vldrhq_u32
__builtin_arm_mve_vldrhq_z_f16
__builtin_arm_mve_vldrhq_z_s16
__builtin_arm_mve_vldrhq_z_s32
__builtin_arm_mve_vldrhq_z_u16
__builtin_arm_mve_vldrhq_z_u32
__builtin_arm_mve_vldrwq_f32
__builtin_arm_mve_vldrwq_gather_base_f32
__builtin_arm_mve_vldrwq_gather_base_s32
__builtin_arm_mve_vldrwq_gather_base_u32
__builtin_arm_mve_vldrwq_gather_base_wb_f32
__builtin_arm_mve_vldrwq_gather_base_wb_s32
__builtin_arm_mve_vldrwq_gather_base_wb_u32
__builtin_arm_mve_vldrwq_gather_base_wb_z_f32
__builtin_arm_mve_vldrwq_gather_base_wb_z_s32
__builtin_arm_mve_vldrwq_gather_base_wb_z_u32
__builtin_arm_mve_vldrwq_gather_base_z_f32
__builtin_arm_mve_vldrwq_gather_base_z_s32
__builtin_arm_mve_vldrwq_gather_base_z_u32
__builtin_arm_mve_vldrwq_gather_offset_f32
__builtin_arm_mve_vldrwq_gather_offset_s32
__builtin_arm_mve_vldrwq_gather_offset_u32
__builtin_arm_mve_vldrwq_gather_offset_z_f32
__builtin_arm_mve_vldrwq_gather_offset_z_s32
__builtin_arm_mve_vldrwq_gather_offset_z_u32
__builtin_arm_mve_vldrwq_gather_shifted_offset_f32
__builtin_arm_mve_vldrwq_gather_shifted_offset_s32
__builtin_arm_mve_vldrwq_gather_shifted_offset_u32
__builtin_arm_mve_vldrwq_gather_shifted_offset_z_f32
__builtin_arm_mve_vldrwq_gather_shifted_offset_z_s32
__builtin_arm_mve_vldrwq_gather_shifted_offset_z_u32
__builtin_arm_mve_vldrwq_s32
__builtin_arm_mve_vldrwq_u32
__builtin_arm_mve_vldrwq_z_f32
__builtin_arm_mve_vldrwq_z_s32
__builtin_arm_mve_vldrwq_z_u32
__builtin_arm_mve_vmaxaq_m_s16
__builtin_arm_mve_vmaxaq_m_s32
__builtin_arm_mve_vmaxaq_m_s8
__builtin_arm_mve_vmaxaq_s16
__builtin_arm_mve_vmaxaq_s32
__builtin_arm_mve_vmaxaq_s8
__builtin_arm_mve_vmaxavq_p_s16
__builtin_arm_mve_vmaxavq_p_s32
__builtin_arm_mve_vmaxavq_p_s8
__builtin_arm_mve_vmaxavq_s16
__builtin_arm_mve_vmaxavq_s32
__builtin_arm_mve_vmaxavq_s8
__builtin_arm_mve_vmaxnmaq_f16
__builtin_arm_mve_vmaxnmaq_f32
__builtin_arm_mve_vmaxnmaq_m_f16
__builtin_arm_mve_vmaxnmaq_m_f32
__builtin_arm_mve_vmaxnmavq_f16
__builtin_arm_mve_vmaxnmavq_f32
__builtin_arm_mve_vmaxnmavq_p_f16
__builtin_arm_mve_vmaxnmavq_p_f32
__builtin_arm_mve_vmaxnmq_f16
__builtin_arm_mve_vmaxnmq_f32
__builtin_arm_mve_vmaxnmq_m_f16
__builtin_arm_mve_vmaxnmq_m_f32
__builtin_arm_mve_vmaxnmq_x_f16
__builtin_arm_mve_vmaxnmq_x_f32
__builtin_arm_mve_vmaxnmvq_f16
__builtin_arm_mve_vmaxnmvq_f32
__builtin_arm_mve_vmaxnmvq_p_f16
__builtin_arm_mve_vmaxnmvq_p_f32
__builtin_arm_mve_vmaxq_m_s16
__builtin_arm_mve_vmaxq_m_s32
__builtin_arm_mve_vmaxq_m_s8
__builtin_arm_mve_vmaxq_m_u16
__builtin_arm_mve_vmaxq_m_u32
__builtin_arm_mve_vmaxq_m_u8
__builtin_arm_mve_vmaxq_s16
__builtin_arm_mve_vmaxq_s32
__builtin_arm_mve_vmaxq_s8
__builtin_arm_mve_vmaxq_u16
__builtin_arm_mve_vmaxq_u32
__builtin_arm_mve_vmaxq_u8
__builtin_arm_mve_vmaxq_x_s16
__builtin_arm_mve_vmaxq_x_s32
__builtin_arm_mve_vmaxq_x_s8
__builtin_arm_mve_vmaxq_x_u16
__builtin_arm_mve_vmaxq_x_u32
__builtin_arm_mve_vmaxq_x_u8
__builtin_arm_mve_vmaxvq_p_s16
__builtin_arm_mve_vmaxvq_p_s32
__builtin_arm_mve_vmaxvq_p_s8
__builtin_arm_mve_vmaxvq_p_u16
__builtin_arm_mve_vmaxvq_p_u32
__builtin_arm_mve_vmaxvq_p_u8
__builtin_arm_mve_vmaxvq_s16
__builtin_arm_mve_vmaxvq_s32
__builtin_arm_mve_vmaxvq_s8
__builtin_arm_mve_vmaxvq_u16
__builtin_arm_mve_vmaxvq_u32
__builtin_arm_mve_vmaxvq_u8
__builtin_arm_mve_vminaq_m_s16
__builtin_arm_mve_vminaq_m_s32
__builtin_arm_mve_vminaq_m_s8
__builtin_arm_mve_vminaq_s16
__builtin_arm_mve_vminaq_s32
__builtin_arm_mve_vminaq_s8
__builtin_arm_mve_vminavq_p_s16
__builtin_arm_mve_vminavq_p_s32
__builtin_arm_mve_vminavq_p_s8
__builtin_arm_mve_vminavq_s16
__builtin_arm_mve_vminavq_s32
__builtin_arm_mve_vminavq_s8
__builtin_arm_mve_vminnmaq_f16
__builtin_arm_mve_vminnmaq_f32
__builtin_arm_mve_vminnmaq_m_f16
__builtin_arm_mve_vminnmaq_m_f32
__builtin_arm_mve_vminnmavq_f16
__builtin_arm_mve_vminnmavq_f32
__builtin_arm_mve_vminnmavq_p_f16
__builtin_arm_mve_vminnmavq_p_f32
__builtin_arm_mve_vminnmq_f16
__builtin_arm_mve_vminnmq_f32
__builtin_arm_mve_vminnmq_m_f16
__builtin_arm_mve_vminnmq_m_f32
__builtin_arm_mve_vminnmq_x_f16
__builtin_arm_mve_vminnmq_x_f32
__builtin_arm_mve_vminnmvq_f16
__builtin_arm_mve_vminnmvq_f32
__builtin_arm_mve_vminnmvq_p_f16
__builtin_arm_mve_vminnmvq_p_f32
__builtin_arm_mve_vminq_m_s16
__builtin_arm_mve_vminq_m_s32
__builtin_arm_mve_vminq_m_s8
__builtin_arm_mve_vminq_m_u16
__builtin_arm_mve_vminq_m_u32
__builtin_arm_mve_vminq_m_u8
__builtin_arm_mve_vminq_s16
__builtin_arm_mve_vminq_s32
__builtin_arm_mve_vminq_s8
__builtin_arm_mve_vminq_u16
__builtin_arm_mve_vminq_u32
__builtin_arm_mve_vminq_u8
__builtin_arm_mve_vminq_x_s16
__builtin_arm_mve_vminq_x_s32
__builtin_arm_mve_vminq_x_s8
__builtin_arm_mve_vminq_x_u16
__builtin_arm_mve_vminq_x_u32
__builtin_arm_mve_vminq_x_u8
__builtin_arm_mve_vminvq_p_s16
__builtin_arm_mve_vminvq_p_s32
__builtin_arm_mve_vminvq_p_s8
__builtin_arm_mve_vminvq_p_u16
__builtin_arm_mve_vminvq_p_u32
__builtin_arm_mve_vminvq_p_u8
__builtin_arm_mve_vminvq_s16
__builtin_arm_mve_vminvq_s32
__builtin_arm_mve_vminvq_s8
__builtin_arm_mve_vminvq_u16
__builtin_arm_mve_vminvq_u32
__builtin_arm_mve_vminvq_u8
__builtin_arm_mve_vmladavaq_p_s16
__builtin_arm_mve_vmladavaq_p_s32
__builtin_arm_mve_vmladavaq_p_s8
__builtin_arm_mve_vmladavaq_p_u16
__builtin_arm_mve_vmladavaq_p_u32
__builtin_arm_mve_vmladavaq_p_u8
__builtin_arm_mve_vmladavaq_s16
__builtin_arm_mve_vmladavaq_s32
__builtin_arm_mve_vmladavaq_s8
__builtin_arm_mve_vmladavaq_u16
__builtin_arm_mve_vmladavaq_u32
__builtin_arm_mve_vmladavaq_u8
__builtin_arm_mve_vmladavaxq_p_s16
__builtin_arm_mve_vmladavaxq_p_s32
__builtin_arm_mve_vmladavaxq_p_s8
__builtin_arm_mve_vmladavaxq_s16
__builtin_arm_mve_vmladavaxq_s32
__builtin_arm_mve_vmladavaxq_s8
__builtin_arm_mve_vmladavq_p_s16
__builtin_arm_mve_vmladavq_p_s32
__builtin_arm_mve_vmladavq_p_s8
__builtin_arm_mve_vmladavq_p_u16
__builtin_arm_mve_vmladavq_p_u32
__builtin_arm_mve_vmladavq_p_u8
__builtin_arm_mve_vmladavq_s16
__builtin_arm_mve_vmladavq_s32
__builtin_arm_mve_vmladavq_s8
__builtin_arm_mve_vmladavq_u16
__builtin_arm_mve_vmladavq_u32
__builtin_arm_mve_vmladavq_u8
__builtin_arm_mve_vmladavxq_p_s16
__builtin_arm_mve_vmladavxq_p_s32
__builtin_arm_mve_vmladavxq_p_s8
__builtin_arm_mve_vmladavxq_s16
__builtin_arm_mve_vmladavxq_s32
__builtin_arm_mve_vmladavxq_s8
__builtin_arm_mve_vmlaldavaq_p_s16
__builtin_arm_mve_vmlaldavaq_p_s32
__builtin_arm_mve_vmlaldavaq_p_u16
__builtin_arm_mve_vmlaldavaq_p_u32
__builtin_arm_mve_vmlaldavaq_s16
__builtin_arm_mve_vmlaldavaq_s32
__builtin_arm_mve_vmlaldavaq_u16
__builtin_arm_mve_vmlaldavaq_u32
__builtin_arm_mve_vmlaldavaxq_p_s16
__builtin_arm_mve_vmlaldavaxq_p_s32
__builtin_arm_mve_vmlaldavaxq_s16
__builtin_arm_mve_vmlaldavaxq_s32
__builtin_arm_mve_vmlaldavq_p_s16
__builtin_arm_mve_vmlaldavq_p_s32
__builtin_arm_mve_vmlaldavq_p_u16
__builtin_arm_mve_vmlaldavq_p_u32
__builtin_arm_mve_vmlaldavq_s16
__builtin_arm_mve_vmlaldavq_s32
__builtin_arm_mve_vmlaldavq_u16
__builtin_arm_mve_vmlaldavq_u32
__builtin_arm_mve_vmlaldavxq_p_s16
__builtin_arm_mve_vmlaldavxq_p_s32
__builtin_arm_mve_vmlaldavxq_s16
__builtin_arm_mve_vmlaldavxq_s32
__builtin_arm_mve_vmlaq_m_n_s16
__builtin_arm_mve_vmlaq_m_n_s32
__builtin_arm_mve_vmlaq_m_n_s8
__builtin_arm_mve_vmlaq_m_n_u16
__builtin_arm_mve_vmlaq_m_n_u32
__builtin_arm_mve_vmlaq_m_n_u8
__builtin_arm_mve_vmlaq_n_s16
__builtin_arm_mve_vmlaq_n_s32
__builtin_arm_mve_vmlaq_n_s8
__builtin_arm_mve_vmlaq_n_u16
__builtin_arm_mve_vmlaq_n_u32
__builtin_arm_mve_vmlaq_n_u8
__builtin_arm_mve_vmlasq_m_n_s16
__builtin_arm_mve_vmlasq_m_n_s32
__builtin_arm_mve_vmlasq_m_n_s8
__builtin_arm_mve_vmlasq_m_n_u16
__builtin_arm_mve_vmlasq_m_n_u32
__builtin_arm_mve_vmlasq_m_n_u8
__builtin_arm_mve_vmlasq_n_s16
__builtin_arm_mve_vmlasq_n_s32
__builtin_arm_mve_vmlasq_n_s8
__builtin_arm_mve_vmlasq_n_u16
__builtin_arm_mve_vmlasq_n_u32
__builtin_arm_mve_vmlasq_n_u8
__builtin_arm_mve_vmlsdavaq_p_s16
__builtin_arm_mve_vmlsdavaq_p_s32
__builtin_arm_mve_vmlsdavaq_p_s8
__builtin_arm_mve_vmlsdavaq_s16
__builtin_arm_mve_vmlsdavaq_s32
__builtin_arm_mve_vmlsdavaq_s8
__builtin_arm_mve_vmlsdavaxq_p_s16
__builtin_arm_mve_vmlsdavaxq_p_s32
__builtin_arm_mve_vmlsdavaxq_p_s8
__builtin_arm_mve_vmlsdavaxq_s16
__builtin_arm_mve_vmlsdavaxq_s32
__builtin_arm_mve_vmlsdavaxq_s8
__builtin_arm_mve_vmlsdavq_p_s16
__builtin_arm_mve_vmlsdavq_p_s32
__builtin_arm_mve_vmlsdavq_p_s8
__builtin_arm_mve_vmlsdavq_s16
__builtin_arm_mve_vmlsdavq_s32
__builtin_arm_mve_vmlsdavq_s8
__builtin_arm_mve_vmlsdavxq_p_s16
__builtin_arm_mve_vmlsdavxq_p_s32
__builtin_arm_mve_vmlsdavxq_p_s8
__builtin_arm_mve_vmlsdavxq_s16
__builtin_arm_mve_vmlsdavxq_s32
__builtin_arm_mve_vmlsdavxq_s8
__builtin_arm_mve_vmlsldavaq_p_s16
__builtin_arm_mve_vmlsldavaq_p_s32
__builtin_arm_mve_vmlsldavaq_s16
__builtin_arm_mve_vmlsldavaq_s32
__builtin_arm_mve_vmlsldavaxq_p_s16
__builtin_arm_mve_vmlsldavaxq_p_s32
__builtin_arm_mve_vmlsldavaxq_s16
__builtin_arm_mve_vmlsldavaxq_s32
__builtin_arm_mve_vmlsldavq_p_s16
__builtin_arm_mve_vmlsldavq_p_s32
__builtin_arm_mve_vmlsldavq_s16
__builtin_arm_mve_vmlsldavq_s32
__builtin_arm_mve_vmlsldavxq_p_s16
__builtin_arm_mve_vmlsldavxq_p_s32
__builtin_arm_mve_vmlsldavxq_s16
__builtin_arm_mve_vmlsldavxq_s32
__builtin_arm_mve_vmovlbq_m_s16
__builtin_arm_mve_vmovlbq_m_s8
__builtin_arm_mve_vmovlbq_m_u16
__builtin_arm_mve_vmovlbq_m_u8
__builtin_arm_mve_vmovlbq_s16
__builtin_arm_mve_vmovlbq_s8
__builtin_arm_mve_vmovlbq_u16
__builtin_arm_mve_vmovlbq_u8
__builtin_arm_mve_vmovlbq_x_s16
__builtin_arm_mve_vmovlbq_x_s8
__builtin_arm_mve_vmovlbq_x_u16
__builtin_arm_mve_vmovlbq_x_u8
__builtin_arm_mve_vmovltq_m_s16
__builtin_arm_mve_vmovltq_m_s8
__builtin_arm_mve_vmovltq_m_u16
__builtin_arm_mve_vmovltq_m_u8
__builtin_arm_mve_vmovltq_s16
__builtin_arm_mve_vmovltq_s8
__builtin_arm_mve_vmovltq_u16
__builtin_arm_mve_vmovltq_u8
__builtin_arm_mve_vmovltq_x_s16
__builtin_arm_mve_vmovltq_x_s8
__builtin_arm_mve_vmovltq_x_u16
__builtin_arm_mve_vmovltq_x_u8
__builtin_arm_mve_vmovnbq_m_s16
__builtin_arm_mve_vmovnbq_m_s32
__builtin_arm_mve_vmovnbq_m_u16
__builtin_arm_mve_vmovnbq_m_u32
__builtin_arm_mve_vmovnbq_s16
__builtin_arm_mve_vmovnbq_s32
__builtin_arm_mve_vmovnbq_u16
__builtin_arm_mve_vmovnbq_u32
__builtin_arm_mve_vmovntq_m_s16
__builtin_arm_mve_vmovntq_m_s32
__builtin_arm_mve_vmovntq_m_u16
__builtin_arm_mve_vmovntq_m_u32
__builtin_arm_mve_vmovntq_s16
__builtin_arm_mve_vmovntq_s32
__builtin_arm_mve_vmovntq_u16
__builtin_arm_mve_vmovntq_u32
__builtin_arm_mve_vmulhq_m_s16
__builtin_arm_mve_vmulhq_m_s32
__builtin_arm_mve_vmulhq_m_s8
__builtin_arm_mve_vmulhq_m_u16
__builtin_arm_mve_vmulhq_m_u32
__builtin_arm_mve_vmulhq_m_u8
__builtin_arm_mve_vmulhq_s16
__builtin_arm_mve_vmulhq_s32
__builtin_arm_mve_vmulhq_s8
__builtin_arm_mve_vmulhq_u16
__builtin_arm_mve_vmulhq_u32
__builtin_arm_mve_vmulhq_u8
__builtin_arm_mve_vmulhq_x_s16
__builtin_arm_mve_vmulhq_x_s32
__builtin_arm_mve_vmulhq_x_s8
__builtin_arm_mve_vmulhq_x_u16
__builtin_arm_mve_vmulhq_x_u32
__builtin_arm_mve_vmulhq_x_u8
__builtin_arm_mve_vmullbq_int_m_s16
__builtin_arm_mve_vmullbq_int_m_s32
__builtin_arm_mve_vmullbq_int_m_s8
__builtin_arm_mve_vmullbq_int_m_u16
__builtin_arm_mve_vmullbq_int_m_u32
__builtin_arm_mve_vmullbq_int_m_u8
__builtin_arm_mve_vmullbq_int_s16
__builtin_arm_mve_vmullbq_int_s32
__builtin_arm_mve_vmullbq_int_s8
__builtin_arm_mve_vmullbq_int_u16
__builtin_arm_mve_vmullbq_int_u32
__builtin_arm_mve_vmullbq_int_u8
__builtin_arm_mve_vmullbq_int_x_s16
__builtin_arm_mve_vmullbq_int_x_s32
__builtin_arm_mve_vmullbq_int_x_s8
__builtin_arm_mve_vmullbq_int_x_u16
__builtin_arm_mve_vmullbq_int_x_u32
__builtin_arm_mve_vmullbq_int_x_u8
__builtin_arm_mve_vmullbq_poly_m_p16
__builtin_arm_mve_vmullbq_poly_m_p8
__builtin_arm_mve_vmullbq_poly_p16
__builtin_arm_mve_vmullbq_poly_p8
__builtin_arm_mve_vmullbq_poly_x_p16
__builtin_arm_mve_vmullbq_poly_x_p8
__builtin_arm_mve_vmulltq_int_m_s16
__builtin_arm_mve_vmulltq_int_m_s32
__builtin_arm_mve_vmulltq_int_m_s8
__builtin_arm_mve_vmulltq_int_m_u16
__builtin_arm_mve_vmulltq_int_m_u32
__builtin_arm_mve_vmulltq_int_m_u8
__builtin_arm_mve_vmulltq_int_s16
__builtin_arm_mve_vmulltq_int_s32
__builtin_arm_mve_vmulltq_int_s8
__builtin_arm_mve_vmulltq_int_u16
__builtin_arm_mve_vmulltq_int_u32
__builtin_arm_mve_vmulltq_int_u8
__builtin_arm_mve_vmulltq_int_x_s16
__builtin_arm_mve_vmulltq_int_x_s32
__builtin_arm_mve_vmulltq_int_x_s8
__builtin_arm_mve_vmulltq_int_x_u16
__builtin_arm_mve_vmulltq_int_x_u32
__builtin_arm_mve_vmulltq_int_x_u8
__builtin_arm_mve_vmulltq_poly_m_p16
__builtin_arm_mve_vmulltq_poly_m_p8
__builtin_arm_mve_vmulltq_poly_p16
__builtin_arm_mve_vmulltq_poly_p8
__builtin_arm_mve_vmulltq_poly_x_p16
__builtin_arm_mve_vmulltq_poly_x_p8
__builtin_arm_mve_vmulq_f16
__builtin_arm_mve_vmulq_f32
__builtin_arm_mve_vmulq_m_f16
__builtin_arm_mve_vmulq_m_f32
__builtin_arm_mve_vmulq_m_n_f16
__builtin_arm_mve_vmulq_m_n_f32
__builtin_arm_mve_vmulq_m_n_s16
__builtin_arm_mve_vmulq_m_n_s32
__builtin_arm_mve_vmulq_m_n_s8
__builtin_arm_mve_vmulq_m_n_u16
__builtin_arm_mve_vmulq_m_n_u32
__builtin_arm_mve_vmulq_m_n_u8
__builtin_arm_mve_vmulq_m_s16
__builtin_arm_mve_vmulq_m_s32
__builtin_arm_mve_vmulq_m_s8
__builtin_arm_mve_vmulq_m_u16
__builtin_arm_mve_vmulq_m_u32
__builtin_arm_mve_vmulq_m_u8
__builtin_arm_mve_vmulq_n_f16
__builtin_arm_mve_vmulq_n_f32
__builtin_arm_mve_vmulq_n_s16
__builtin_arm_mve_vmulq_n_s32
__builtin_arm_mve_vmulq_n_s8
__builtin_arm_mve_vmulq_n_u16
__builtin_arm_mve_vmulq_n_u32
__builtin_arm_mve_vmulq_n_u8
__builtin_arm_mve_vmulq_s16
__builtin_arm_mve_vmulq_s32
__builtin_arm_mve_vmulq_s8
__builtin_arm_mve_vmulq_u16
__builtin_arm_mve_vmulq_u32
__builtin_arm_mve_vmulq_u8
__builtin_arm_mve_vmulq_x_f16
__builtin_arm_mve_vmulq_x_f32
__builtin_arm_mve_vmulq_x_n_f16
__builtin_arm_mve_vmulq_x_n_f32
__builtin_arm_mve_vmulq_x_n_s16
__builtin_arm_mve_vmulq_x_n_s32
__builtin_arm_mve_vmulq_x_n_s8
__builtin_arm_mve_vmulq_x_n_u16
__builtin_arm_mve_vmulq_x_n_u32
__builtin_arm_mve_vmulq_x_n_u8
__builtin_arm_mve_vmulq_x_s16
__builtin_arm_mve_vmulq_x_s32
__builtin_arm_mve_vmulq_x_s8
__builtin_arm_mve_vmulq_x_u16
__builtin_arm_mve_vmulq_x_u32
__builtin_arm_mve_vmulq_x_u8
__builtin_arm_mve_vmvnq_m_n_s16
__builtin_arm_mve_vmvnq_m_n_s32
__builtin_arm_mve_vmvnq_m_n_u16
__builtin_arm_mve_vmvnq_m_n_u32
__builtin_arm_mve_vmvnq_m_s16
__builtin_arm_mve_vmvnq_m_s32
__builtin_arm_mve_vmvnq_m_s8
__builtin_arm_mve_vmvnq_m_u16
__builtin_arm_mve_vmvnq_m_u32
__builtin_arm_mve_vmvnq_m_u8
__builtin_arm_mve_vmvnq_n_s16
__builtin_arm_mve_vmvnq_n_s32
__builtin_arm_mve_vmvnq_n_u16
__builtin_arm_mve_vmvnq_n_u32
__builtin_arm_mve_vmvnq_s16
__builtin_arm_mve_vmvnq_s32
__builtin_arm_mve_vmvnq_s8
__builtin_arm_mve_vmvnq_u16
__builtin_arm_mve_vmvnq_u32
__builtin_arm_mve_vmvnq_u8
__builtin_arm_mve_vmvnq_x_n_s16
__builtin_arm_mve_vmvnq_x_n_s32
__builtin_arm_mve_vmvnq_x_n_u16
__builtin_arm_mve_vmvnq_x_n_u32
__builtin_arm_mve_vmvnq_x_s16
__builtin_arm_mve_vmvnq_x_s32
__builtin_arm_mve_vmvnq_x_s8
__builtin_arm_mve_vmvnq_x_u16
__builtin_arm_mve_vmvnq_x_u32
__builtin_arm_mve_vmvnq_x_u8
__builtin_arm_mve_vnegq_f16
__builtin_arm_mve_vnegq_f32
__builtin_arm_mve_vnegq_m_f16
__builtin_arm_mve_vnegq_m_f32
__builtin_arm_mve_vnegq_m_s16
__builtin_arm_mve_vnegq_m_s32
__builtin_arm_mve_vnegq_m_s8
__builtin_arm_mve_vnegq_s16
__builtin_arm_mve_vnegq_s32
__builtin_arm_mve_vnegq_s8
__builtin_arm_mve_vnegq_x_f16
__builtin_arm_mve_vnegq_x_f32
__builtin_arm_mve_vnegq_x_s16
__builtin_arm_mve_vnegq_x_s32
__builtin_arm_mve_vnegq_x_s8
__builtin_arm_mve_vornq_f16
__builtin_arm_mve_vornq_f32
__builtin_arm_mve_vornq_m_f16
__builtin_arm_mve_vornq_m_f32
__builtin_arm_mve_vornq_m_s16
__builtin_arm_mve_vornq_m_s32
__builtin_arm_mve_vornq_m_s8
__builtin_arm_mve_vornq_m_u16
__builtin_arm_mve_vornq_m_u32
__builtin_arm_mve_vornq_m_u8
__builtin_arm_mve_vornq_s16
__builtin_arm_mve_vornq_s32
__builtin_arm_mve_vornq_s8
__builtin_arm_mve_vornq_u16
__builtin_arm_mve_vornq_u32
__builtin_arm_mve_vornq_u8
__builtin_arm_mve_vornq_x_f16
__builtin_arm_mve_vornq_x_f32
__builtin_arm_mve_vornq_x_s16
__builtin_arm_mve_vornq_x_s32
__builtin_arm_mve_vornq_x_s8
__builtin_arm_mve_vornq_x_u16
__builtin_arm_mve_vornq_x_u32
__builtin_arm_mve_vornq_x_u8
__builtin_arm_mve_vorrq_f16
__builtin_arm_mve_vorrq_f32
__builtin_arm_mve_vorrq_m_f16
__builtin_arm_mve_vorrq_m_f32
__builtin_arm_mve_vorrq_m_n_s16
__builtin_arm_mve_vorrq_m_n_s32
__builtin_arm_mve_vorrq_m_n_u16
__builtin_arm_mve_vorrq_m_n_u32
__builtin_arm_mve_vorrq_m_s16
__builtin_arm_mve_vorrq_m_s32
__builtin_arm_mve_vorrq_m_s8
__builtin_arm_mve_vorrq_m_u16
__builtin_arm_mve_vorrq_m_u32
__builtin_arm_mve_vorrq_m_u8
__builtin_arm_mve_vorrq_n_s16
__builtin_arm_mve_vorrq_n_s32
__builtin_arm_mve_vorrq_n_u16
__builtin_arm_mve_vorrq_n_u32
__builtin_arm_mve_vorrq_s16
__builtin_arm_mve_vorrq_s32
__builtin_arm_mve_vorrq_s8
__builtin_arm_mve_vorrq_u16
__builtin_arm_mve_vorrq_u32
__builtin_arm_mve_vorrq_u8
__builtin_arm_mve_vorrq_x_f16
__builtin_arm_mve_vorrq_x_f32
__builtin_arm_mve_vorrq_x_s16
__builtin_arm_mve_vorrq_x_s32
__builtin_arm_mve_vorrq_x_s8
__builtin_arm_mve_vorrq_x_u16
__builtin_arm_mve_vorrq_x_u32
__builtin_arm_mve_vorrq_x_u8
__builtin_arm_mve_vpnot
__builtin_arm_mve_vpselq_f16
__builtin_arm_mve_vpselq_f32
__builtin_arm_mve_vpselq_s16
__builtin_arm_mve_vpselq_s32
__builtin_arm_mve_vpselq_s64
__builtin_arm_mve_vpselq_s8
__builtin_arm_mve_vpselq_u16
__builtin_arm_mve_vpselq_u32
__builtin_arm_mve_vpselq_u64
__builtin_arm_mve_vpselq_u8
__builtin_arm_mve_vqabsq_m_s16
__builtin_arm_mve_vqabsq_m_s32
__builtin_arm_mve_vqabsq_m_s8
__builtin_arm_mve_vqabsq_s16
__builtin_arm_mve_vqabsq_s32
__builtin_arm_mve_vqabsq_s8
__builtin_arm_mve_vqaddq_m_n_s16
__builtin_arm_mve_vqaddq_m_n_s32
__builtin_arm_mve_vqaddq_m_n_s8
__builtin_arm_mve_vqaddq_m_n_u16
__builtin_arm_mve_vqaddq_m_n_u32
__builtin_arm_mve_vqaddq_m_n_u8
__builtin_arm_mve_vqaddq_m_s16
__builtin_arm_mve_vqaddq_m_s32
__builtin_arm_mve_vqaddq_m_s8
__builtin_arm_mve_vqaddq_m_u16
__builtin_arm_mve_vqaddq_m_u32
__builtin_arm_mve_vqaddq_m_u8
__builtin_arm_mve_vqaddq_n_s16
__builtin_arm_mve_vqaddq_n_s32
__builtin_arm_mve_vqaddq_n_s8
__builtin_arm_mve_vqaddq_n_u16
__builtin_arm_mve_vqaddq_n_u32
__builtin_arm_mve_vqaddq_n_u8
__builtin_arm_mve_vqaddq_s16
__builtin_arm_mve_vqaddq_s32
__builtin_arm_mve_vqaddq_s8
__builtin_arm_mve_vqaddq_u16
__builtin_arm_mve_vqaddq_u32
__builtin_arm_mve_vqaddq_u8
__builtin_arm_mve_vqdmladhq_m_s16
__builtin_arm_mve_vqdmladhq_m_s32
__builtin_arm_mve_vqdmladhq_m_s8
__builtin_arm_mve_vqdmladhq_s16
__builtin_arm_mve_vqdmladhq_s32
__builtin_arm_mve_vqdmladhq_s8
__builtin_arm_mve_vqdmladhxq_m_s16
__builtin_arm_mve_vqdmladhxq_m_s32
__builtin_arm_mve_vqdmladhxq_m_s8
__builtin_arm_mve_vqdmladhxq_s16
__builtin_arm_mve_vqdmladhxq_s32
__builtin_arm_mve_vqdmladhxq_s8
__builtin_arm_mve_vqdmlahq_m_n_s16
__builtin_arm_mve_vqdmlahq_m_n_s32
__builtin_arm_mve_vqdmlahq_m_n_s8
__builtin_arm_mve_vqdmlahq_n_s16
__builtin_arm_mve_vqdmlahq_n_s32
__builtin_arm_mve_vqdmlahq_n_s8
__builtin_arm_mve_vqdmlashq_m_n_s16
__builtin_arm_mve_vqdmlashq_m_n_s32
__builtin_arm_mve_vqdmlashq_m_n_s8
__builtin_arm_mve_vqdmlashq_n_s16
__builtin_arm_mve_vqdmlashq_n_s32
__builtin_arm_mve_vqdmlashq_n_s8
__builtin_arm_mve_vqdmlsdhq_m_s16
__builtin_arm_mve_vqdmlsdhq_m_s32
__builtin_arm_mve_vqdmlsdhq_m_s8
__builtin_arm_mve_vqdmlsdhq_s16
__builtin_arm_mve_vqdmlsdhq_s32
__builtin_arm_mve_vqdmlsdhq_s8
__builtin_arm_mve_vqdmlsdhxq_m_s16
__builtin_arm_mve_vqdmlsdhxq_m_s32
__builtin_arm_mve_vqdmlsdhxq_m_s8
__builtin_arm_mve_vqdmlsdhxq_s16
__builtin_arm_mve_vqdmlsdhxq_s32
__builtin_arm_mve_vqdmlsdhxq_s8
__builtin_arm_mve_vqdmulhq_m_n_s16
__builtin_arm_mve_vqdmulhq_m_n_s32
__builtin_arm_mve_vqdmulhq_m_n_s8
__builtin_arm_mve_vqdmulhq_m_s16
__builtin_arm_mve_vqdmulhq_m_s32
__builtin_arm_mve_vqdmulhq_m_s8
__builtin_arm_mve_vqdmulhq_n_s16
__builtin_arm_mve_vqdmulhq_n_s32
__builtin_arm_mve_vqdmulhq_n_s8
__builtin_arm_mve_vqdmulhq_s16
__builtin_arm_mve_vqdmulhq_s32
__builtin_arm_mve_vqdmulhq_s8
__builtin_arm_mve_vqdmullbq_m_n_s16
__builtin_arm_mve_vqdmullbq_m_n_s32
__builtin_arm_mve_vqdmullbq_m_s16
__builtin_arm_mve_vqdmullbq_m_s32
__builtin_arm_mve_vqdmullbq_n_s16
__builtin_arm_mve_vqdmullbq_n_s32
__builtin_arm_mve_vqdmullbq_s16
__builtin_arm_mve_vqdmullbq_s32
__builtin_arm_mve_vqdmulltq_m_n_s16
__builtin_arm_mve_vqdmulltq_m_n_s32
__builtin_arm_mve_vqdmulltq_m_s16
__builtin_arm_mve_vqdmulltq_m_s32
__builtin_arm_mve_vqdmulltq_n_s16
__builtin_arm_mve_vqdmulltq_n_s32
__builtin_arm_mve_vqdmulltq_s16
__builtin_arm_mve_vqdmulltq_s32
__builtin_arm_mve_vqmovnbq_m_s16
__builtin_arm_mve_vqmovnbq_m_s32
__builtin_arm_mve_vqmovnbq_m_u16
__builtin_arm_mve_vqmovnbq_m_u32
__builtin_arm_mve_vqmovnbq_s16
__builtin_arm_mve_vqmovnbq_s32
__builtin_arm_mve_vqmovnbq_u16
__builtin_arm_mve_vqmovnbq_u32
__builtin_arm_mve_vqmovntq_m_s16
__builtin_arm_mve_vqmovntq_m_s32
__builtin_arm_mve_vqmovntq_m_u16
__builtin_arm_mve_vqmovntq_m_u32
__builtin_arm_mve_vqmovntq_s16
__builtin_arm_mve_vqmovntq_s32
__builtin_arm_mve_vqmovntq_u16
__builtin_arm_mve_vqmovntq_u32
__builtin_arm_mve_vqmovunbq_m_s16
__builtin_arm_mve_vqmovunbq_m_s32
__builtin_arm_mve_vqmovunbq_s16
__builtin_arm_mve_vqmovunbq_s32
__builtin_arm_mve_vqmovuntq_m_s16
__builtin_arm_mve_vqmovuntq_m_s32
__builtin_arm_mve_vqmovuntq_s16
__builtin_arm_mve_vqmovuntq_s32
__builtin_arm_mve_vqnegq_m_s16
__builtin_arm_mve_vqnegq_m_s32
__builtin_arm_mve_vqnegq_m_s8
__builtin_arm_mve_vqnegq_s16
__builtin_arm_mve_vqnegq_s32
__builtin_arm_mve_vqnegq_s8
__builtin_arm_mve_vqrdmladhq_m_s16
__builtin_arm_mve_vqrdmladhq_m_s32
__builtin_arm_mve_vqrdmladhq_m_s8
__builtin_arm_mve_vqrdmladhq_s16
__builtin_arm_mve_vqrdmladhq_s32
__builtin_arm_mve_vqrdmladhq_s8
__builtin_arm_mve_vqrdmladhxq_m_s16
__builtin_arm_mve_vqrdmladhxq_m_s32
__builtin_arm_mve_vqrdmladhxq_m_s8
__builtin_arm_mve_vqrdmladhxq_s16
__builtin_arm_mve_vqrdmladhxq_s32
__builtin_arm_mve_vqrdmladhxq_s8
__builtin_arm_mve_vqrdmlahq_m_n_s16
__builtin_arm_mve_vqrdmlahq_m_n_s32
__builtin_arm_mve_vqrdmlahq_m_n_s8
__builtin_arm_mve_vqrdmlahq_n_s16
__builtin_arm_mve_vqrdmlahq_n_s32
__builtin_arm_mve_vqrdmlahq_n_s8
__builtin_arm_mve_vqrdmlashq_m_n_s16
__builtin_arm_mve_vqrdmlashq_m_n_s32
__builtin_arm_mve_vqrdmlashq_m_n_s8
__builtin_arm_mve_vqrdmlashq_n_s16
__builtin_arm_mve_vqrdmlashq_n_s32
__builtin_arm_mve_vqrdmlashq_n_s8
__builtin_arm_mve_vqrdmlsdhq_m_s16
__builtin_arm_mve_vqrdmlsdhq_m_s32
__builtin_arm_mve_vqrdmlsdhq_m_s8
__builtin_arm_mve_vqrdmlsdhq_s16
__builtin_arm_mve_vqrdmlsdhq_s32
__builtin_arm_mve_vqrdmlsdhq_s8
__builtin_arm_mve_vqrdmlsdhxq_m_s16
__builtin_arm_mve_vqrdmlsdhxq_m_s32
__builtin_arm_mve_vqrdmlsdhxq_m_s8
__builtin_arm_mve_vqrdmlsdhxq_s16
__builtin_arm_mve_vqrdmlsdhxq_s32
__builtin_arm_mve_vqrdmlsdhxq_s8
__builtin_arm_mve_vqrdmulhq_m_n_s16
__builtin_arm_mve_vqrdmulhq_m_n_s32
__builtin_arm_mve_vqrdmulhq_m_n_s8
__builtin_arm_mve_vqrdmulhq_m_s16
__builtin_arm_mve_vqrdmulhq_m_s32
__builtin_arm_mve_vqrdmulhq_m_s8
__builtin_arm_mve_vqrdmulhq_n_s16
__builtin_arm_mve_vqrdmulhq_n_s32
__builtin_arm_mve_vqrdmulhq_n_s8
__builtin_arm_mve_vqrdmulhq_s16
__builtin_arm_mve_vqrdmulhq_s32
__builtin_arm_mve_vqrdmulhq_s8
__builtin_arm_mve_vqrshlq_m_n_s16
__builtin_arm_mve_vqrshlq_m_n_s32
__builtin_arm_mve_vqrshlq_m_n_s8
__builtin_arm_mve_vqrshlq_m_n_u16
__builtin_arm_mve_vqrshlq_m_n_u32
__builtin_arm_mve_vqrshlq_m_n_u8
__builtin_arm_mve_vqrshlq_m_s16
__builtin_arm_mve_vqrshlq_m_s32
__builtin_arm_mve_vqrshlq_m_s8
__builtin_arm_mve_vqrshlq_m_u16
__builtin_arm_mve_vqrshlq_m_u32
__builtin_arm_mve_vqrshlq_m_u8
__builtin_arm_mve_vqrshlq_n_s16
__builtin_arm_mve_vqrshlq_n_s32
__builtin_arm_mve_vqrshlq_n_s8
__builtin_arm_mve_vqrshlq_n_u16
__builtin_arm_mve_vqrshlq_n_u32
__builtin_arm_mve_vqrshlq_n_u8
__builtin_arm_mve_vqrshlq_s16
__builtin_arm_mve_vqrshlq_s32
__builtin_arm_mve_vqrshlq_s8
__builtin_arm_mve_vqrshlq_u16
__builtin_arm_mve_vqrshlq_u32
__builtin_arm_mve_vqrshlq_u8
__builtin_arm_mve_vqrshrnbq_m_n_s16
__builtin_arm_mve_vqrshrnbq_m_n_s32
__builtin_arm_mve_vqrshrnbq_m_n_u16
__builtin_arm_mve_vqrshrnbq_m_n_u32
__builtin_arm_mve_vqrshrnbq_n_s16
__builtin_arm_mve_vqrshrnbq_n_s32
__builtin_arm_mve_vqrshrnbq_n_u16
__builtin_arm_mve_vqrshrnbq_n_u32
__builtin_arm_mve_vqrshrntq_m_n_s16
__builtin_arm_mve_vqrshrntq_m_n_s32
__builtin_arm_mve_vqrshrntq_m_n_u16
__builtin_arm_mve_vqrshrntq_m_n_u32
__builtin_arm_mve_vqrshrntq_n_s16
__builtin_arm_mve_vqrshrntq_n_s32
__builtin_arm_mve_vqrshrntq_n_u16
__builtin_arm_mve_vqrshrntq_n_u32
__builtin_arm_mve_vqrshrunbq_m_n_s16
__builtin_arm_mve_vqrshrunbq_m_n_s32
__builtin_arm_mve_vqrshrunbq_n_s16
__builtin_arm_mve_vqrshrunbq_n_s32
__builtin_arm_mve_vqrshruntq_m_n_s16
__builtin_arm_mve_vqrshruntq_m_n_s32
__builtin_arm_mve_vqrshruntq_n_s16
__builtin_arm_mve_vqrshruntq_n_s32
__builtin_arm_mve_vqshlq_m_n_s16
__builtin_arm_mve_vqshlq_m_n_s32
__builtin_arm_mve_vqshlq_m_n_s8
__builtin_arm_mve_vqshlq_m_n_u16
__builtin_arm_mve_vqshlq_m_n_u32
__builtin_arm_mve_vqshlq_m_n_u8
__builtin_arm_mve_vqshlq_m_r_s16
__builtin_arm_mve_vqshlq_m_r_s32
__builtin_arm_mve_vqshlq_m_r_s8
__builtin_arm_mve_vqshlq_m_r_u16
__builtin_arm_mve_vqshlq_m_r_u32
__builtin_arm_mve_vqshlq_m_r_u8
__builtin_arm_mve_vqshlq_m_s16
__builtin_arm_mve_vqshlq_m_s32
__builtin_arm_mve_vqshlq_m_s8
__builtin_arm_mve_vqshlq_m_u16
__builtin_arm_mve_vqshlq_m_u32
__builtin_arm_mve_vqshlq_m_u8
__builtin_arm_mve_vqshlq_n_s16
__builtin_arm_mve_vqshlq_n_s32
__builtin_arm_mve_vqshlq_n_s8
__builtin_arm_mve_vqshlq_n_u16
__builtin_arm_mve_vqshlq_n_u32
__builtin_arm_mve_vqshlq_n_u8
__builtin_arm_mve_vqshlq_r_s16
__builtin_arm_mve_vqshlq_r_s32
__builtin_arm_mve_vqshlq_r_s8
__builtin_arm_mve_vqshlq_r_u16
__builtin_arm_mve_vqshlq_r_u32
__builtin_arm_mve_vqshlq_r_u8
__builtin_arm_mve_vqshlq_s16
__builtin_arm_mve_vqshlq_s32
__builtin_arm_mve_vqshlq_s8
__builtin_arm_mve_vqshlq_u16
__builtin_arm_mve_vqshlq_u32
__builtin_arm_mve_vqshlq_u8
__builtin_arm_mve_vqshluq_m_n_s16
__builtin_arm_mve_vqshluq_m_n_s32
__builtin_arm_mve_vqshluq_m_n_s8
__builtin_arm_mve_vqshluq_n_s16
__builtin_arm_mve_vqshluq_n_s32
__builtin_arm_mve_vqshluq_n_s8
__builtin_arm_mve_vqshrnbq_m_n_s16
__builtin_arm_mve_vqshrnbq_m_n_s32
__builtin_arm_mve_vqshrnbq_m_n_u16
__builtin_arm_mve_vqshrnbq_m_n_u32
__builtin_arm_mve_vqshrnbq_n_s16
__builtin_arm_mve_vqshrnbq_n_s32
__builtin_arm_mve_vqshrnbq_n_u16
__builtin_arm_mve_vqshrnbq_n_u32
__builtin_arm_mve_vqshrntq_m_n_s16
__builtin_arm_mve_vqshrntq_m_n_s32
__builtin_arm_mve_vqshrntq_m_n_u16
__builtin_arm_mve_vqshrntq_m_n_u32
__builtin_arm_mve_vqshrntq_n_s16
__builtin_arm_mve_vqshrntq_n_s32
__builtin_arm_mve_vqshrntq_n_u16
__builtin_arm_mve_vqshrntq_n_u32
__builtin_arm_mve_vqshrunbq_m_n_s16
__builtin_arm_mve_vqshrunbq_m_n_s32
__builtin_arm_mve_vqshrunbq_n_s16
__builtin_arm_mve_vqshrunbq_n_s32
__builtin_arm_mve_vqshruntq_m_n_s16
__builtin_arm_mve_vqshruntq_m_n_s32
__builtin_arm_mve_vqshruntq_n_s16
__builtin_arm_mve_vqshruntq_n_s32
__builtin_arm_mve_vqsubq_m_n_s16
__builtin_arm_mve_vqsubq_m_n_s32
__builtin_arm_mve_vqsubq_m_n_s8
__builtin_arm_mve_vqsubq_m_n_u16
__builtin_arm_mve_vqsubq_m_n_u32
__builtin_arm_mve_vqsubq_m_n_u8
__builtin_arm_mve_vqsubq_m_s16
__builtin_arm_mve_vqsubq_m_s32
__builtin_arm_mve_vqsubq_m_s8
__builtin_arm_mve_vqsubq_m_u16
__builtin_arm_mve_vqsubq_m_u32
__builtin_arm_mve_vqsubq_m_u8
__builtin_arm_mve_vqsubq_n_s16
__builtin_arm_mve_vqsubq_n_s32
__builtin_arm_mve_vqsubq_n_s8
__builtin_arm_mve_vqsubq_n_u16
__builtin_arm_mve_vqsubq_n_u32
__builtin_arm_mve_vqsubq_n_u8
__builtin_arm_mve_vqsubq_s16
__builtin_arm_mve_vqsubq_s32
__builtin_arm_mve_vqsubq_s8
__builtin_arm_mve_vqsubq_u16
__builtin_arm_mve_vqsubq_u32
__builtin_arm_mve_vqsubq_u8
__builtin_arm_mve_vreinterpretq_f16_f32
__builtin_arm_mve_vreinterpretq_f16_s16
__builtin_arm_mve_vreinterpretq_f16_s32
__builtin_arm_mve_vreinterpretq_f16_s64
__builtin_arm_mve_vreinterpretq_f16_s8
__builtin_arm_mve_vreinterpretq_f16_u16
__builtin_arm_mve_vreinterpretq_f16_u32
__builtin_arm_mve_vreinterpretq_f16_u64
__builtin_arm_mve_vreinterpretq_f16_u8
__builtin_arm_mve_vreinterpretq_f32_f16
__builtin_arm_mve_vreinterpretq_f32_s16
__builtin_arm_mve_vreinterpretq_f32_s32
__builtin_arm_mve_vreinterpretq_f32_s64
__builtin_arm_mve_vreinterpretq_f32_s8
__builtin_arm_mve_vreinterpretq_f32_u16
__builtin_arm_mve_vreinterpretq_f32_u32
__builtin_arm_mve_vreinterpretq_f32_u64
__builtin_arm_mve_vreinterpretq_f32_u8
__builtin_arm_mve_vreinterpretq_s16_f16
__builtin_arm_mve_vreinterpretq_s16_f32
__builtin_arm_mve_vreinterpretq_s16_s32
__builtin_arm_mve_vreinterpretq_s16_s64
__builtin_arm_mve_vreinterpretq_s16_s8
__builtin_arm_mve_vreinterpretq_s16_u16
__builtin_arm_mve_vreinterpretq_s16_u32
__builtin_arm_mve_vreinterpretq_s16_u64
__builtin_arm_mve_vreinterpretq_s16_u8
__builtin_arm_mve_vreinterpretq_s32_f16
__builtin_arm_mve_vreinterpretq_s32_f32
__builtin_arm_mve_vreinterpretq_s32_s16
__builtin_arm_mve_vreinterpretq_s32_s64
__builtin_arm_mve_vreinterpretq_s32_s8
__builtin_arm_mve_vreinterpretq_s32_u16
__builtin_arm_mve_vreinterpretq_s32_u32
__builtin_arm_mve_vreinterpretq_s32_u64
__builtin_arm_mve_vreinterpretq_s32_u8
__builtin_arm_mve_vreinterpretq_s64_f16
__builtin_arm_mve_vreinterpretq_s64_f32
__builtin_arm_mve_vreinterpretq_s64_s16
__builtin_arm_mve_vreinterpretq_s64_s32
__builtin_arm_mve_vreinterpretq_s64_s8
__builtin_arm_mve_vreinterpretq_s64_u16
__builtin_arm_mve_vreinterpretq_s64_u32
__builtin_arm_mve_vreinterpretq_s64_u64
__builtin_arm_mve_vreinterpretq_s64_u8
__builtin_arm_mve_vreinterpretq_s8_f16
__builtin_arm_mve_vreinterpretq_s8_f32
__builtin_arm_mve_vreinterpretq_s8_s16
__builtin_arm_mve_vreinterpretq_s8_s32
__builtin_arm_mve_vreinterpretq_s8_s64
__builtin_arm_mve_vreinterpretq_s8_u16
__builtin_arm_mve_vreinterpretq_s8_u32
__builtin_arm_mve_vreinterpretq_s8_u64
__builtin_arm_mve_vreinterpretq_s8_u8
__builtin_arm_mve_vreinterpretq_u16_f16
__builtin_arm_mve_vreinterpretq_u16_f32
__builtin_arm_mve_vreinterpretq_u16_s16
__builtin_arm_mve_vreinterpretq_u16_s32
__builtin_arm_mve_vreinterpretq_u16_s64
__builtin_arm_mve_vreinterpretq_u16_s8
__builtin_arm_mve_vreinterpretq_u16_u32
__builtin_arm_mve_vreinterpretq_u16_u64
__builtin_arm_mve_vreinterpretq_u16_u8
__builtin_arm_mve_vreinterpretq_u32_f16
__builtin_arm_mve_vreinterpretq_u32_f32
__builtin_arm_mve_vreinterpretq_u32_s16
__builtin_arm_mve_vreinterpretq_u32_s32
__builtin_arm_mve_vreinterpretq_u32_s64
__builtin_arm_mve_vreinterpretq_u32_s8
__builtin_arm_mve_vreinterpretq_u32_u16
__builtin_arm_mve_vreinterpretq_u32_u64
__builtin_arm_mve_vreinterpretq_u32_u8
__builtin_arm_mve_vreinterpretq_u64_f16
__builtin_arm_mve_vreinterpretq_u64_f32
__builtin_arm_mve_vreinterpretq_u64_s16
__builtin_arm_mve_vreinterpretq_u64_s32
__builtin_arm_mve_vreinterpretq_u64_s64
__builtin_arm_mve_vreinterpretq_u64_s8
__builtin_arm_mve_vreinterpretq_u64_u16
__builtin_arm_mve_vreinterpretq_u64_u32
__builtin_arm_mve_vreinterpretq_u64_u8
__builtin_arm_mve_vreinterpretq_u8_f16
__builtin_arm_mve_vreinterpretq_u8_f32
__builtin_arm_mve_vreinterpretq_u8_s16
__builtin_arm_mve_vreinterpretq_u8_s32
__builtin_arm_mve_vreinterpretq_u8_s64
__builtin_arm_mve_vreinterpretq_u8_s8
__builtin_arm_mve_vreinterpretq_u8_u16
__builtin_arm_mve_vreinterpretq_u8_u32
__builtin_arm_mve_vreinterpretq_u8_u64
__builtin_arm_mve_vrev16q_m_s8
__builtin_arm_mve_vrev16q_m_u8
__builtin_arm_mve_vrev16q_s8
__builtin_arm_mve_vrev16q_u8
__builtin_arm_mve_vrev16q_x_s8
__builtin_arm_mve_vrev16q_x_u8
__builtin_arm_mve_vrev32q_f16
__builtin_arm_mve_vrev32q_m_f16
__builtin_arm_mve_vrev32q_m_s16
__builtin_arm_mve_vrev32q_m_s8
__builtin_arm_mve_vrev32q_m_u16
__builtin_arm_mve_vrev32q_m_u8
__builtin_arm_mve_vrev32q_s16
__builtin_arm_mve_vrev32q_s8
__builtin_arm_mve_vrev32q_u16
__builtin_arm_mve_vrev32q_u8
__builtin_arm_mve_vrev32q_x_f16
__builtin_arm_mve_vrev32q_x_s16
__builtin_arm_mve_vrev32q_x_s8
__builtin_arm_mve_vrev32q_x_u16
__builtin_arm_mve_vrev32q_x_u8
__builtin_arm_mve_vrev64q_f16
__builtin_arm_mve_vrev64q_f32
__builtin_arm_mve_vrev64q_m_f16
__builtin_arm_mve_vrev64q_m_f32
__builtin_arm_mve_vrev64q_m_s16
__builtin_arm_mve_vrev64q_m_s32
__builtin_arm_mve_vrev64q_m_s8
__builtin_arm_mve_vrev64q_m_u16
__builtin_arm_mve_vrev64q_m_u32
__builtin_arm_mve_vrev64q_m_u8
__builtin_arm_mve_vrev64q_s16
__builtin_arm_mve_vrev64q_s32
__builtin_arm_mve_vrev64q_s8
__builtin_arm_mve_vrev64q_u16
__builtin_arm_mve_vrev64q_u32
__builtin_arm_mve_vrev64q_u8
__builtin_arm_mve_vrev64q_x_f16
__builtin_arm_mve_vrev64q_x_f32
__builtin_arm_mve_vrev64q_x_s16
__builtin_arm_mve_vrev64q_x_s32
__builtin_arm_mve_vrev64q_x_s8
__builtin_arm_mve_vrev64q_x_u16
__builtin_arm_mve_vrev64q_x_u32
__builtin_arm_mve_vrev64q_x_u8
__builtin_arm_mve_vrhaddq_m_s16
__builtin_arm_mve_vrhaddq_m_s32
__builtin_arm_mve_vrhaddq_m_s8
__builtin_arm_mve_vrhaddq_m_u16
__builtin_arm_mve_vrhaddq_m_u32
__builtin_arm_mve_vrhaddq_m_u8
__builtin_arm_mve_vrhaddq_s16
__builtin_arm_mve_vrhaddq_s32
__builtin_arm_mve_vrhaddq_s8
__builtin_arm_mve_vrhaddq_u16
__builtin_arm_mve_vrhaddq_u32
__builtin_arm_mve_vrhaddq_u8
__builtin_arm_mve_vrhaddq_x_s16
__builtin_arm_mve_vrhaddq_x_s32
__builtin_arm_mve_vrhaddq_x_s8
__builtin_arm_mve_vrhaddq_x_u16
__builtin_arm_mve_vrhaddq_x_u32
__builtin_arm_mve_vrhaddq_x_u8
__builtin_arm_mve_vrmlaldavhaq_p_s32
__builtin_arm_mve_vrmlaldavhaq_p_u32
__builtin_arm_mve_vrmlaldavhaq_s32
__builtin_arm_mve_vrmlaldavhaq_u32
__builtin_arm_mve_vrmlaldavhaxq_p_s32
__builtin_arm_mve_vrmlaldavhaxq_s32
__builtin_arm_mve_vrmlaldavhq_p_s32
__builtin_arm_mve_vrmlaldavhq_p_u32
__builtin_arm_mve_vrmlaldavhq_s32
__builtin_arm_mve_vrmlaldavhq_u32
__builtin_arm_mve_vrmlaldavhxq_p_s32
__builtin_arm_mve_vrmlaldavhxq_s32
__builtin_arm_mve_vrmlsldavhaq_p_s32
__builtin_arm_mve_vrmlsldavhaq_s32
__builtin_arm_mve_vrmlsldavhaxq_p_s32
__builtin_arm_mve_vrmlsldavhaxq_s32
__builtin_arm_mve_vrmlsldavhq_p_s32
__builtin_arm_mve_vrmlsldavhq_s32
__builtin_arm_mve_vrmlsldavhxq_p_s32
__builtin_arm_mve_vrmlsldavhxq_s32
__builtin_arm_mve_vrmulhq_m_s16
__builtin_arm_mve_vrmulhq_m_s32
__builtin_arm_mve_vrmulhq_m_s8
__builtin_arm_mve_vrmulhq_m_u16
__builtin_arm_mve_vrmulhq_m_u32
__builtin_arm_mve_vrmulhq_m_u8
__builtin_arm_mve_vrmulhq_s16
__builtin_arm_mve_vrmulhq_s32
__builtin_arm_mve_vrmulhq_s8
__builtin_arm_mve_vrmulhq_u16
__builtin_arm_mve_vrmulhq_u32
__builtin_arm_mve_vrmulhq_u8
__builtin_arm_mve_vrmulhq_x_s16
__builtin_arm_mve_vrmulhq_x_s32
__builtin_arm_mve_vrmulhq_x_s8
__builtin_arm_mve_vrmulhq_x_u16
__builtin_arm_mve_vrmulhq_x_u32
__builtin_arm_mve_vrmulhq_x_u8
__builtin_arm_mve_vrndaq_f16
__builtin_arm_mve_vrndaq_f32
__builtin_arm_mve_vrndaq_m_f16
__builtin_arm_mve_vrndaq_m_f32
__builtin_arm_mve_vrndaq_x_f16
__builtin_arm_mve_vrndaq_x_f32
__builtin_arm_mve_vrndmq_f16
__builtin_arm_mve_vrndmq_f32
__builtin_arm_mve_vrndmq_m_f16
__builtin_arm_mve_vrndmq_m_f32
__builtin_arm_mve_vrndmq_x_f16
__builtin_arm_mve_vrndmq_x_f32
__builtin_arm_mve_vrndnq_f16
__builtin_arm_mve_vrndnq_f32
__builtin_arm_mve_vrndnq_m_f16
__builtin_arm_mve_vrndnq_m_f32
__builtin_arm_mve_vrndnq_x_f16
__builtin_arm_mve_vrndnq_x_f32
__builtin_arm_mve_vrndpq_f16
__builtin_arm_mve_vrndpq_f32
__builtin_arm_mve_vrndpq_m_f16
__builtin_arm_mve_vrndpq_m_f32
__builtin_arm_mve_vrndpq_x_f16
__builtin_arm_mve_vrndpq_x_f32
__builtin_arm_mve_vrndq_f16
__builtin_arm_mve_vrndq_f32
__builtin_arm_mve_vrndq_m_f16
__builtin_arm_mve_vrndq_m_f32
__builtin_arm_mve_vrndq_x_f16
__builtin_arm_mve_vrndq_x_f32
__builtin_arm_mve_vrndxq_f16
__builtin_arm_mve_vrndxq_f32
__builtin_arm_mve_vrndxq_m_f16
__builtin_arm_mve_vrndxq_m_f32
__builtin_arm_mve_vrndxq_x_f16
__builtin_arm_mve_vrndxq_x_f32
__builtin_arm_mve_vrshlq_m_n_s16
__builtin_arm_mve_vrshlq_m_n_s32
__builtin_arm_mve_vrshlq_m_n_s8
__builtin_arm_mve_vrshlq_m_n_u16
__builtin_arm_mve_vrshlq_m_n_u32
__builtin_arm_mve_vrshlq_m_n_u8
__builtin_arm_mve_vrshlq_m_s16
__builtin_arm_mve_vrshlq_m_s32
__builtin_arm_mve_vrshlq_m_s8
__builtin_arm_mve_vrshlq_m_u16
__builtin_arm_mve_vrshlq_m_u32
__builtin_arm_mve_vrshlq_m_u8
__builtin_arm_mve_vrshlq_n_s16
__builtin_arm_mve_vrshlq_n_s32
__builtin_arm_mve_vrshlq_n_s8
__builtin_arm_mve_vrshlq_n_u16
__builtin_arm_mve_vrshlq_n_u32
__builtin_arm_mve_vrshlq_n_u8
__builtin_arm_mve_vrshlq_s16
__builtin_arm_mve_vrshlq_s32
__builtin_arm_mve_vrshlq_s8
__builtin_arm_mve_vrshlq_u16
__builtin_arm_mve_vrshlq_u32
__builtin_arm_mve_vrshlq_u8
__builtin_arm_mve_vrshlq_x_s16
__builtin_arm_mve_vrshlq_x_s32
__builtin_arm_mve_vrshlq_x_s8
__builtin_arm_mve_vrshlq_x_u16
__builtin_arm_mve_vrshlq_x_u32
__builtin_arm_mve_vrshlq_x_u8
__builtin_arm_mve_vrshrnbq_m_n_s16
__builtin_arm_mve_vrshrnbq_m_n_s32
__builtin_arm_mve_vrshrnbq_m_n_u16
__builtin_arm_mve_vrshrnbq_m_n_u32
__builtin_arm_mve_vrshrnbq_n_s16
__builtin_arm_mve_vrshrnbq_n_s32
__builtin_arm_mve_vrshrnbq_n_u16
__builtin_arm_mve_vrshrnbq_n_u32
__builtin_arm_mve_vrshrntq_m_n_s16
__builtin_arm_mve_vrshrntq_m_n_s32
__builtin_arm_mve_vrshrntq_m_n_u16
__builtin_arm_mve_vrshrntq_m_n_u32
__builtin_arm_mve_vrshrntq_n_s16
__builtin_arm_mve_vrshrntq_n_s32
__builtin_arm_mve_vrshrntq_n_u16
__builtin_arm_mve_vrshrntq_n_u32
__builtin_arm_mve_vrshrq_m_n_s16
__builtin_arm_mve_vrshrq_m_n_s32
__builtin_arm_mve_vrshrq_m_n_s8
__builtin_arm_mve_vrshrq_m_n_u16
__builtin_arm_mve_vrshrq_m_n_u32
__builtin_arm_mve_vrshrq_m_n_u8
__builtin_arm_mve_vrshrq_n_s16
__builtin_arm_mve_vrshrq_n_s32
__builtin_arm_mve_vrshrq_n_s8
__builtin_arm_mve_vrshrq_n_u16
__builtin_arm_mve_vrshrq_n_u32
__builtin_arm_mve_vrshrq_n_u8
__builtin_arm_mve_vrshrq_x_n_s16
__builtin_arm_mve_vrshrq_x_n_s32
__builtin_arm_mve_vrshrq_x_n_s8
__builtin_arm_mve_vrshrq_x_n_u16
__builtin_arm_mve_vrshrq_x_n_u32
__builtin_arm_mve_vrshrq_x_n_u8
__builtin_arm_mve_vsbciq_m_s32
__builtin_arm_mve_vsbciq_m_u32
__builtin_arm_mve_vsbciq_s32
__builtin_arm_mve_vsbciq_u32
__builtin_arm_mve_vsbcq_m_s32
__builtin_arm_mve_vsbcq_m_u32
__builtin_arm_mve_vsbcq_s32
__builtin_arm_mve_vsbcq_u32
__builtin_arm_mve_vsetq_lane_f16
__builtin_arm_mve_vsetq_lane_f32
__builtin_arm_mve_vsetq_lane_s16
__builtin_arm_mve_vsetq_lane_s32
__builtin_arm_mve_vsetq_lane_s64
__builtin_arm_mve_vsetq_lane_s8
__builtin_arm_mve_vsetq_lane_u16
__builtin_arm_mve_vsetq_lane_u32
__builtin_arm_mve_vsetq_lane_u64
__builtin_arm_mve_vsetq_lane_u8
__builtin_arm_mve_vshlcq_m_s16
__builtin_arm_mve_vshlcq_m_s32
__builtin_arm_mve_vshlcq_m_s8
__builtin_arm_mve_vshlcq_m_u16
__builtin_arm_mve_vshlcq_m_u32
__builtin_arm_mve_vshlcq_m_u8
__builtin_arm_mve_vshlcq_s16
__builtin_arm_mve_vshlcq_s32
__builtin_arm_mve_vshlcq_s8
__builtin_arm_mve_vshlcq_u16
__builtin_arm_mve_vshlcq_u32
__builtin_arm_mve_vshlcq_u8
__builtin_arm_mve_vshllbq_m_n_s16
__builtin_arm_mve_vshllbq_m_n_s8
__builtin_arm_mve_vshllbq_m_n_u16
__builtin_arm_mve_vshllbq_m_n_u8
__builtin_arm_mve_vshllbq_n_s16
__builtin_arm_mve_vshllbq_n_s8
__builtin_arm_mve_vshllbq_n_u16
__builtin_arm_mve_vshllbq_n_u8
__builtin_arm_mve_vshllbq_x_n_s16
__builtin_arm_mve_vshllbq_x_n_s8
__builtin_arm_mve_vshllbq_x_n_u16
__builtin_arm_mve_vshllbq_x_n_u8
__builtin_arm_mve_vshlltq_m_n_s16
__builtin_arm_mve_vshlltq_m_n_s8
__builtin_arm_mve_vshlltq_m_n_u16
__builtin_arm_mve_vshlltq_m_n_u8
__builtin_arm_mve_vshlltq_n_s16
__builtin_arm_mve_vshlltq_n_s8
__builtin_arm_mve_vshlltq_n_u16
__builtin_arm_mve_vshlltq_n_u8
__builtin_arm_mve_vshlltq_x_n_s16
__builtin_arm_mve_vshlltq_x_n_s8
__builtin_arm_mve_vshlltq_x_n_u16
__builtin_arm_mve_vshlltq_x_n_u8
__builtin_arm_mve_vshlq_m_n_s16
__builtin_arm_mve_vshlq_m_n_s32
__builtin_arm_mve_vshlq_m_n_s8
__builtin_arm_mve_vshlq_m_n_u16
__builtin_arm_mve_vshlq_m_n_u32
__builtin_arm_mve_vshlq_m_n_u8
__builtin_arm_mve_vshlq_m_r_s16
__builtin_arm_mve_vshlq_m_r_s32
__builtin_arm_mve_vshlq_m_r_s8
__builtin_arm_mve_vshlq_m_r_u16
__builtin_arm_mve_vshlq_m_r_u32
__builtin_arm_mve_vshlq_m_r_u8
__builtin_arm_mve_vshlq_m_s16
__builtin_arm_mve_vshlq_m_s32
__builtin_arm_mve_vshlq_m_s8
__builtin_arm_mve_vshlq_m_u16
__builtin_arm_mve_vshlq_m_u32
__builtin_arm_mve_vshlq_m_u8
__builtin_arm_mve_vshlq_n_s16
__builtin_arm_mve_vshlq_n_s32
__builtin_arm_mve_vshlq_n_s8
__builtin_arm_mve_vshlq_n_u16
__builtin_arm_mve_vshlq_n_u32
__builtin_arm_mve_vshlq_n_u8
__builtin_arm_mve_vshlq_r_s16
__builtin_arm_mve_vshlq_r_s32
__builtin_arm_mve_vshlq_r_s8
__builtin_arm_mve_vshlq_r_u16
__builtin_arm_mve_vshlq_r_u32
__builtin_arm_mve_vshlq_r_u8
__builtin_arm_mve_vshlq_s16
__builtin_arm_mve_vshlq_s32
__builtin_arm_mve_vshlq_s8
__builtin_arm_mve_vshlq_u16
__builtin_arm_mve_vshlq_u32
__builtin_arm_mve_vshlq_u8
__builtin_arm_mve_vshlq_x_n_s16
__builtin_arm_mve_vshlq_x_n_s32
__builtin_arm_mve_vshlq_x_n_s8
__builtin_arm_mve_vshlq_x_n_u16
__builtin_arm_mve_vshlq_x_n_u32
__builtin_arm_mve_vshlq_x_n_u8
__builtin_arm_mve_vshlq_x_s16
__builtin_arm_mve_vshlq_x_s32
__builtin_arm_mve_vshlq_x_s8
__builtin_arm_mve_vshlq_x_u16
__builtin_arm_mve_vshlq_x_u32
__builtin_arm_mve_vshlq_x_u8
__builtin_arm_mve_vshrnbq_m_n_s16
__builtin_arm_mve_vshrnbq_m_n_s32
__builtin_arm_mve_vshrnbq_m_n_u16
__builtin_arm_mve_vshrnbq_m_n_u32
__builtin_arm_mve_vshrnbq_n_s16
__builtin_arm_mve_vshrnbq_n_s32
__builtin_arm_mve_vshrnbq_n_u16
__builtin_arm_mve_vshrnbq_n_u32
__builtin_arm_mve_vshrntq_m_n_s16
__builtin_arm_mve_vshrntq_m_n_s32
__builtin_arm_mve_vshrntq_m_n_u16
__builtin_arm_mve_vshrntq_m_n_u32
__builtin_arm_mve_vshrntq_n_s16
__builtin_arm_mve_vshrntq_n_s32
__builtin_arm_mve_vshrntq_n_u16
__builtin_arm_mve_vshrntq_n_u32
__builtin_arm_mve_vshrq_m_n_s16
__builtin_arm_mve_vshrq_m_n_s32
__builtin_arm_mve_vshrq_m_n_s8
__builtin_arm_mve_vshrq_m_n_u16
__builtin_arm_mve_vshrq_m_n_u32
__builtin_arm_mve_vshrq_m_n_u8
__builtin_arm_mve_vshrq_n_s16
__builtin_arm_mve_vshrq_n_s32
__builtin_arm_mve_vshrq_n_s8
__builtin_arm_mve_vshrq_n_u16
__builtin_arm_mve_vshrq_n_u32
__builtin_arm_mve_vshrq_n_u8
__builtin_arm_mve_vshrq_x_n_s16
__builtin_arm_mve_vshrq_x_n_s32
__builtin_arm_mve_vshrq_x_n_s8
__builtin_arm_mve_vshrq_x_n_u16
__builtin_arm_mve_vshrq_x_n_u32
__builtin_arm_mve_vshrq_x_n_u8
__builtin_arm_mve_vsliq_m_n_s16
__builtin_arm_mve_vsliq_m_n_s32
__builtin_arm_mve_vsliq_m_n_s8
__builtin_arm_mve_vsliq_m_n_u16
__builtin_arm_mve_vsliq_m_n_u32
__builtin_arm_mve_vsliq_m_n_u8
__builtin_arm_mve_vsliq_n_s16
__builtin_arm_mve_vsliq_n_s32
__builtin_arm_mve_vsliq_n_s8
__builtin_arm_mve_vsliq_n_u16
__builtin_arm_mve_vsliq_n_u32
__builtin_arm_mve_vsliq_n_u8
__builtin_arm_mve_vsriq_m_n_s16
__builtin_arm_mve_vsriq_m_n_s32
__builtin_arm_mve_vsriq_m_n_s8
__builtin_arm_mve_vsriq_m_n_u16
__builtin_arm_mve_vsriq_m_n_u32
__builtin_arm_mve_vsriq_m_n_u8
__builtin_arm_mve_vsriq_n_s16
__builtin_arm_mve_vsriq_n_s32
__builtin_arm_mve_vsriq_n_s8
__builtin_arm_mve_vsriq_n_u16
__builtin_arm_mve_vsriq_n_u32
__builtin_arm_mve_vsriq_n_u8
__builtin_arm_mve_vst1q_f16
__builtin_arm_mve_vst1q_f32
__builtin_arm_mve_vst1q_p_f16
__builtin_arm_mve_vst1q_p_f32
__builtin_arm_mve_vst1q_p_s16
__builtin_arm_mve_vst1q_p_s32
__builtin_arm_mve_vst1q_p_s8
__builtin_arm_mve_vst1q_p_u16
__builtin_arm_mve_vst1q_p_u32
__builtin_arm_mve_vst1q_p_u8
__builtin_arm_mve_vst1q_s16
__builtin_arm_mve_vst1q_s32
__builtin_arm_mve_vst1q_s8
__builtin_arm_mve_vst1q_u16
__builtin_arm_mve_vst1q_u32
__builtin_arm_mve_vst1q_u8
__builtin_arm_mve_vst2q_f16
__builtin_arm_mve_vst2q_f32
__builtin_arm_mve_vst2q_s16
__builtin_arm_mve_vst2q_s32
__builtin_arm_mve_vst2q_s8
__builtin_arm_mve_vst2q_u16
__builtin_arm_mve_vst2q_u32
__builtin_arm_mve_vst2q_u8
__builtin_arm_mve_vst4q_f16
__builtin_arm_mve_vst4q_f32
__builtin_arm_mve_vst4q_s16
__builtin_arm_mve_vst4q_s32
__builtin_arm_mve_vst4q_s8
__builtin_arm_mve_vst4q_u16
__builtin_arm_mve_vst4q_u32
__builtin_arm_mve_vst4q_u8
__builtin_arm_mve_vstrbq_p_s16
__builtin_arm_mve_vstrbq_p_s32
__builtin_arm_mve_vstrbq_p_s8
__builtin_arm_mve_vstrbq_p_u16
__builtin_arm_mve_vstrbq_p_u32
__builtin_arm_mve_vstrbq_p_u8
__builtin_arm_mve_vstrbq_s16
__builtin_arm_mve_vstrbq_s32
__builtin_arm_mve_vstrbq_s8
__builtin_arm_mve_vstrbq_scatter_offset_p_s16
__builtin_arm_mve_vstrbq_scatter_offset_p_s32
__builtin_arm_mve_vstrbq_scatter_offset_p_s8
__builtin_arm_mve_vstrbq_scatter_offset_p_u16
__builtin_arm_mve_vstrbq_scatter_offset_p_u32
__builtin_arm_mve_vstrbq_scatter_offset_p_u8
__builtin_arm_mve_vstrbq_scatter_offset_s16
__builtin_arm_mve_vstrbq_scatter_offset_s32
__builtin_arm_mve_vstrbq_scatter_offset_s8
__builtin_arm_mve_vstrbq_scatter_offset_u16
__builtin_arm_mve_vstrbq_scatter_offset_u32
__builtin_arm_mve_vstrbq_scatter_offset_u8
__builtin_arm_mve_vstrbq_u16
__builtin_arm_mve_vstrbq_u32
__builtin_arm_mve_vstrbq_u8
__builtin_arm_mve_vstrdq_scatter_base_p_s64
__builtin_arm_mve_vstrdq_scatter_base_p_u64
__builtin_arm_mve_vstrdq_scatter_base_s64
__builtin_arm_mve_vstrdq_scatter_base_u64
__builtin_arm_mve_vstrdq_scatter_base_wb_p_s64
__builtin_arm_mve_vstrdq_scatter_base_wb_p_u64
__builtin_arm_mve_vstrdq_scatter_base_wb_s64
__builtin_arm_mve_vstrdq_scatter_base_wb_u64
__builtin_arm_mve_vstrdq_scatter_offset_p_s64
__builtin_arm_mve_vstrdq_scatter_offset_p_u64
__builtin_arm_mve_vstrdq_scatter_offset_s64
__builtin_arm_mve_vstrdq_scatter_offset_u64
__builtin_arm_mve_vstrdq_scatter_shifted_offset_p_s64
__builtin_arm_mve_vstrdq_scatter_shifted_offset_p_u64
__builtin_arm_mve_vstrdq_scatter_shifted_offset_s64
__builtin_arm_mve_vstrdq_scatter_shifted_offset_u64
__builtin_arm_mve_vstrhq_f16
__builtin_arm_mve_vstrhq_p_f16
__builtin_arm_mve_vstrhq_p_s16
__builtin_arm_mve_vstrhq_p_s32
__builtin_arm_mve_vstrhq_p_u16
__builtin_arm_mve_vstrhq_p_u32
__builtin_arm_mve_vstrhq_s16
__builtin_arm_mve_vstrhq_s32
__builtin_arm_mve_vstrhq_scatter_offset_f16
__builtin_arm_mve_vstrhq_scatter_offset_p_f16
__builtin_arm_mve_vstrhq_scatter_offset_p_s16
__builtin_arm_mve_vstrhq_scatter_offset_p_s32
__builtin_arm_mve_vstrhq_scatter_offset_p_u16
__builtin_arm_mve_vstrhq_scatter_offset_p_u32
__builtin_arm_mve_vstrhq_scatter_offset_s16
__builtin_arm_mve_vstrhq_scatter_offset_s32
__builtin_arm_mve_vstrhq_scatter_offset_u16
__builtin_arm_mve_vstrhq_scatter_offset_u32
__builtin_arm_mve_vstrhq_scatter_shifted_offset_f16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_f16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_s16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_s32
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_u16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_u32
__builtin_arm_mve_vstrhq_scatter_shifted_offset_s16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_s32
__builtin_arm_mve_vstrhq_scatter_shifted_offset_u16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_u32
__builtin_arm_mve_vstrhq_u16
__builtin_arm_mve_vstrhq_u32
__builtin_arm_mve_vstrwq_f32
__builtin_arm_mve_vstrwq_p_f32
__builtin_arm_mve_vstrwq_p_s32
__builtin_arm_mve_vstrwq_p_u32
__builtin_arm_mve_vstrwq_s32
__builtin_arm_mve_vstrwq_scatter_base_f32
__builtin_arm_mve_vstrwq_scatter_base_p_f32
__builtin_arm_mve_vstrwq_scatter_base_p_s32
__builtin_arm_mve_vstrwq_scatter_base_p_u32
__builtin_arm_mve_vstrwq_scatter_base_s32
__builtin_arm_mve_vstrwq_scatter_base_u32
__builtin_arm_mve_vstrwq_scatter_base_wb_f32
__builtin_arm_mve_vstrwq_scatter_base_wb_p_f32
__builtin_arm_mve_vstrwq_scatter_base_wb_p_s32
__builtin_arm_mve_vstrwq_scatter_base_wb_p_u32
__builtin_arm_mve_vstrwq_scatter_base_wb_s32
__builtin_arm_mve_vstrwq_scatter_base_wb_u32
__builtin_arm_mve_vstrwq_scatter_offset_f32
__builtin_arm_mve_vstrwq_scatter_offset_p_f32
__builtin_arm_mve_vstrwq_scatter_offset_p_s32
__builtin_arm_mve_vstrwq_scatter_offset_p_u32
__builtin_arm_mve_vstrwq_scatter_offset_s32
__builtin_arm_mve_vstrwq_scatter_offset_u32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_f32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_p_f32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_p_s32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_p_u32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_s32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_u32
__builtin_arm_mve_vstrwq_u32
__builtin_arm_mve_vsubq_f16
__builtin_arm_mve_vsubq_f32
__builtin_arm_mve_vsubq_m_f16
__builtin_arm_mve_vsubq_m_f32
__builtin_arm_mve_vsubq_m_n_f16
__builtin_arm_mve_vsubq_m_n_f32
__builtin_arm_mve_vsubq_m_n_s16
__builtin_arm_mve_vsubq_m_n_s32
__builtin_arm_mve_vsubq_m_n_s8
__builtin_arm_mve_vsubq_m_n_u16
__builtin_arm_mve_vsubq_m_n_u32
__builtin_arm_mve_vsubq_m_n_u8
__builtin_arm_mve_vsubq_m_s16
__builtin_arm_mve_vsubq_m_s32
__builtin_arm_mve_vsubq_m_s8
__builtin_arm_mve_vsubq_m_u16
__builtin_arm_mve_vsubq_m_u32
__builtin_arm_mve_vsubq_m_u8
__builtin_arm_mve_vsubq_n_f16
__builtin_arm_mve_vsubq_n_f32
__builtin_arm_mve_vsubq_n_s16
__builtin_arm_mve_vsubq_n_s32
__builtin_arm_mve_vsubq_n_s8
__builtin_arm_mve_vsubq_n_u16
__builtin_arm_mve_vsubq_n_u32
__builtin_arm_mve_vsubq_n_u8
__builtin_arm_mve_vsubq_s16
__builtin_arm_mve_vsubq_s32
__builtin_arm_mve_vsubq_s8
__builtin_arm_mve_vsubq_u16
__builtin_arm_mve_vsubq_u32
__builtin_arm_mve_vsubq_u8
__builtin_arm_mve_vsubq_x_f16
__builtin_arm_mve_vsubq_x_f32
__builtin_arm_mve_vsubq_x_n_f16
__builtin_arm_mve_vsubq_x_n_f32
__builtin_arm_mve_vsubq_x_n_s16
__builtin_arm_mve_vsubq_x_n_s32
__builtin_arm_mve_vsubq_x_n_s8
__builtin_arm_mve_vsubq_x_n_u16
__builtin_arm_mve_vsubq_x_n_u32
__builtin_arm_mve_vsubq_x_n_u8
__builtin_arm_mve_vsubq_x_s16
__builtin_arm_mve_vsubq_x_s32
__builtin_arm_mve_vsubq_x_s8
__builtin_arm_mve_vsubq_x_u16
__builtin_arm_mve_vsubq_x_u32
__builtin_arm_mve_vsubq_x_u8
__builtin_arm_mve_vuninitializedq_f16
__builtin_arm_mve_vuninitializedq_f32
__builtin_arm_mve_vuninitializedq_polymorphic_f16
__builtin_arm_mve_vuninitializedq_polymorphic_f32
__builtin_arm_mve_vuninitializedq_polymorphic_s16
__builtin_arm_mve_vuninitializedq_polymorphic_s32
__builtin_arm_mve_vuninitializedq_polymorphic_s64
__builtin_arm_mve_vuninitializedq_polymorphic_s8
__builtin_arm_mve_vuninitializedq_polymorphic_u16
__builtin_arm_mve_vuninitializedq_polymorphic_u32
__builtin_arm_mve_vuninitializedq_polymorphic_u64
__builtin_arm_mve_vuninitializedq_polymorphic_u8
__builtin_arm_mve_vuninitializedq_s16
__builtin_arm_mve_vuninitializedq_s32
__builtin_arm_mve_vuninitializedq_s64
__builtin_arm_mve_vuninitializedq_s8
__builtin_arm_mve_vuninitializedq_u16
__builtin_arm_mve_vuninitializedq_u32
__builtin_arm_mve_vuninitializedq_u64
__builtin_arm_mve_vuninitializedq_u8
__builtin_arm_mve_vabavq_p
__builtin_arm_mve_vabavq
__builtin_arm_mve_vabdq
__builtin_arm_mve_vabdq_m
__builtin_arm_mve_vabdq_x
__builtin_arm_mve_vabsq
__builtin_arm_mve_vabsq_m
__builtin_arm_mve_vabsq_x
__builtin_arm_mve_vadciq_m
__builtin_arm_mve_vadciq
__builtin_arm_mve_vadcq_m
__builtin_arm_mve_vadcq
__builtin_arm_mve_vaddlvaq_p
__builtin_arm_mve_vaddlvaq
__builtin_arm_mve_vaddlvq_p
__builtin_arm_mve_vaddlvq
__builtin_arm_mve_vaddq
__builtin_arm_mve_vaddq_m
__builtin_arm_mve_vaddq_x
__builtin_arm_mve_vaddvaq_p
__builtin_arm_mve_vaddvaq
__builtin_arm_mve_vaddvq_p
__builtin_arm_mve_vaddvq
__builtin_arm_mve_vandq
__builtin_arm_mve_vandq_m
__builtin_arm_mve_vandq_x
__builtin_arm_mve_vbicq
__builtin_arm_mve_vbicq_m
__builtin_arm_mve_vbicq_m_n
__builtin_arm_mve_vbicq_x
__builtin_arm_mve_vbrsrq_m
__builtin_arm_mve_vbrsrq
__builtin_arm_mve_vbrsrq_x
__builtin_arm_mve_vcaddq_rot270
__builtin_arm_mve_vcaddq_rot270_m
__builtin_arm_mve_vcaddq_rot270_x
__builtin_arm_mve_vcaddq_rot90
__builtin_arm_mve_vcaddq_rot90_m
__builtin_arm_mve_vcaddq_rot90_x
__builtin_arm_mve_vclsq_m
__builtin_arm_mve_vclsq
__builtin_arm_mve_vclsq_x
__builtin_arm_mve_vclzq_m
__builtin_arm_mve_vclzq
__builtin_arm_mve_vclzq_x
__builtin_arm_mve_vcmlaq
__builtin_arm_mve_vcmlaq_m
__builtin_arm_mve_vcmlaq_rot180
__builtin_arm_mve_vcmlaq_rot180_m
__builtin_arm_mve_vcmlaq_rot270
__builtin_arm_mve_vcmlaq_rot270_m
__builtin_arm_mve_vcmlaq_rot90
__builtin_arm_mve_vcmlaq_rot90_m
__builtin_arm_mve_vcmpcsq_m
__builtin_arm_mve_vcmpcsq
__builtin_arm_mve_vcmpeqq
__builtin_arm_mve_vcmpeqq_m
__builtin_arm_mve_vcmpgeq
__builtin_arm_mve_vcmpgeq_m
__builtin_arm_mve_vcmpgtq
__builtin_arm_mve_vcmpgtq_m
__builtin_arm_mve_vcmphiq_m
__builtin_arm_mve_vcmphiq
__builtin_arm_mve_vcmpleq
__builtin_arm_mve_vcmpleq_m
__builtin_arm_mve_vcmpltq
__builtin_arm_mve_vcmpltq_m
__builtin_arm_mve_vcmpneq
__builtin_arm_mve_vcmpneq_m
__builtin_arm_mve_vcmulq
__builtin_arm_mve_vcmulq_m
__builtin_arm_mve_vcmulq_rot180
__builtin_arm_mve_vcmulq_rot180_m
__builtin_arm_mve_vcmulq_rot180_x
__builtin_arm_mve_vcmulq_rot270
__builtin_arm_mve_vcmulq_rot270_m
__builtin_arm_mve_vcmulq_rot270_x
__builtin_arm_mve_vcmulq_rot90
__builtin_arm_mve_vcmulq_rot90_m
__builtin_arm_mve_vcmulq_rot90_x
__builtin_arm_mve_vcmulq_x
__builtin_arm_mve_vcvtaq_m
__builtin_arm_mve_vcvtmq_m
__builtin_arm_mve_vcvtnq_m
__builtin_arm_mve_vcvtpq_m
__builtin_arm_mve_vcvtq
__builtin_arm_mve_vcvtq_m
__builtin_arm_mve_vcvtq_m_n
__builtin_arm_mve_vcvtq_n
__builtin_arm_mve_vcvtq_x
__builtin_arm_mve_vcvtq_x_n
__builtin_arm_mve_vddupq_m
__builtin_arm_mve_vddupq_u16
__builtin_arm_mve_vddupq_u32
__builtin_arm_mve_vddupq_u8
__builtin_arm_mve_vddupq_x_u16
__builtin_arm_mve_vddupq_x_u32
__builtin_arm_mve_vddupq_x_u8
__builtin_arm_mve_vdupq_m
__builtin_arm_mve_vdwdupq_m
__builtin_arm_mve_vdwdupq_u16
__builtin_arm_mve_vdwdupq_u32
__builtin_arm_mve_vdwdupq_u8
__builtin_arm_mve_vdwdupq_x_u16
__builtin_arm_mve_vdwdupq_x_u32
__builtin_arm_mve_vdwdupq_x_u8
__builtin_arm_mve_veorq
__builtin_arm_mve_veorq_m
__builtin_arm_mve_veorq_x
__builtin_arm_mve_vfmaq
__builtin_arm_mve_vfmaq_m
__builtin_arm_mve_vfmasq_m
__builtin_arm_mve_vfmasq
__builtin_arm_mve_vfmsq
__builtin_arm_mve_vfmsq_m
__builtin_arm_mve_vgetq_lane
__builtin_arm_mve_vhaddq_m
__builtin_arm_mve_vhaddq
__builtin_arm_mve_vhaddq_x
__builtin_arm_mve_vhcaddq_rot270_m
__builtin_arm_mve_vhcaddq_rot270
__builtin_arm_mve_vhcaddq_rot270_x
__builtin_arm_mve_vhcaddq_rot90_m
__builtin_arm_mve_vhcaddq_rot90
__builtin_arm_mve_vhcaddq_rot90_x
__builtin_arm_mve_vhsubq_m
__builtin_arm_mve_vhsubq
__builtin_arm_mve_vhsubq_x
__builtin_arm_mve_vidupq_m
__builtin_arm_mve_vidupq_u16
__builtin_arm_mve_vidupq_u32
__builtin_arm_mve_vidupq_u8
__builtin_arm_mve_vidupq_x_u16
__builtin_arm_mve_vidupq_x_u32
__builtin_arm_mve_vidupq_x_u8
__builtin_arm_mve_viwdupq_m
__builtin_arm_mve_viwdupq_u16
__builtin_arm_mve_viwdupq_u32
__builtin_arm_mve_viwdupq_u8
__builtin_arm_mve_viwdupq_x_u16
__builtin_arm_mve_viwdupq_x_u32
__builtin_arm_mve_viwdupq_x_u8
__builtin_arm_mve_vld1q
__builtin_arm_mve_vld1q_z
__builtin_arm_mve_vld2q
__builtin_arm_mve_vld4q
__builtin_arm_mve_vldrbq_gather_offset
__builtin_arm_mve_vldrbq_gather_offset_z
__builtin_arm_mve_vldrdq_gather_offset
__builtin_arm_mve_vldrdq_gather_offset_z
__builtin_arm_mve_vldrdq_gather_shifted_offset
__builtin_arm_mve_vldrdq_gather_shifted_offset_z
__builtin_arm_mve_vldrhq_gather_offset
__builtin_arm_mve_vldrhq_gather_offset_z
__builtin_arm_mve_vldrhq_gather_shifted_offset
__builtin_arm_mve_vldrhq_gather_shifted_offset_z
__builtin_arm_mve_vldrwq_gather_offset
__builtin_arm_mve_vldrwq_gather_offset_z
__builtin_arm_mve_vldrwq_gather_shifted_offset
__builtin_arm_mve_vldrwq_gather_shifted_offset_z
__builtin_arm_mve_vmaxaq_m
__builtin_arm_mve_vmaxaq
__builtin_arm_mve_vmaxavq_p
__builtin_arm_mve_vmaxavq
__builtin_arm_mve_vmaxnmaq
__builtin_arm_mve_vmaxnmaq_m
__builtin_arm_mve_vmaxnmavq
__builtin_arm_mve_vmaxnmavq_p
__builtin_arm_mve_vmaxnmq
__builtin_arm_mve_vmaxnmq_m
__builtin_arm_mve_vmaxnmq_x
__builtin_arm_mve_vmaxnmvq
__builtin_arm_mve_vmaxnmvq_p
__builtin_arm_mve_vmaxq_m
__builtin_arm_mve_vmaxq
__builtin_arm_mve_vmaxq_x
__builtin_arm_mve_vmaxvq_p
__builtin_arm_mve_vmaxvq
__builtin_arm_mve_vminaq_m
__builtin_arm_mve_vminaq
__builtin_arm_mve_vminavq_p
__builtin_arm_mve_vminavq
__builtin_arm_mve_vminnmaq
__builtin_arm_mve_vminnmaq_m
__builtin_arm_mve_vminnmavq
__builtin_arm_mve_vminnmavq_p
__builtin_arm_mve_vminnmq
__builtin_arm_mve_vminnmq_m
__builtin_arm_mve_vminnmq_x
__builtin_arm_mve_vminnmvq
__builtin_arm_mve_vminnmvq_p
__builtin_arm_mve_vminq_m
__builtin_arm_mve_vminq
__builtin_arm_mve_vminq_x
__builtin_arm_mve_vminvq_p
__builtin_arm_mve_vminvq
__builtin_arm_mve_vmladavaq_p
__builtin_arm_mve_vmladavaq
__builtin_arm_mve_vmladavaxq_p
__builtin_arm_mve_vmladavaxq
__builtin_arm_mve_vmladavq_p
__builtin_arm_mve_vmladavq
__builtin_arm_mve_vmladavxq_p
__builtin_arm_mve_vmladavxq
__builtin_arm_mve_vmlaldavaq_p
__builtin_arm_mve_vmlaldavaq
__builtin_arm_mve_vmlaldavaxq_p
__builtin_arm_mve_vmlaldavaxq
__builtin_arm_mve_vmlaldavq_p
__builtin_arm_mve_vmlaldavq
__builtin_arm_mve_vmlaldavxq_p
__builtin_arm_mve_vmlaldavxq
__builtin_arm_mve_vmlaq_m
__builtin_arm_mve_vmlaq
__builtin_arm_mve_vmlasq_m
__builtin_arm_mve_vmlasq
__builtin_arm_mve_vmlsdavaq_p
__builtin_arm_mve_vmlsdavaq
__builtin_arm_mve_vmlsdavaxq_p
__builtin_arm_mve_vmlsdavaxq
__builtin_arm_mve_vmlsdavq_p
__builtin_arm_mve_vmlsdavq
__builtin_arm_mve_vmlsdavxq_p
__builtin_arm_mve_vmlsdavxq
__builtin_arm_mve_vmlsldavaq_p
__builtin_arm_mve_vmlsldavaq
__builtin_arm_mve_vmlsldavaxq_p
__builtin_arm_mve_vmlsldavaxq
__builtin_arm_mve_vmlsldavq_p
__builtin_arm_mve_vmlsldavq
__builtin_arm_mve_vmlsldavxq_p
__builtin_arm_mve_vmlsldavxq
__builtin_arm_mve_vmovlbq_m
__builtin_arm_mve_vmovlbq
__builtin_arm_mve_vmovlbq_x
__builtin_arm_mve_vmovltq_m
__builtin_arm_mve_vmovltq
__builtin_arm_mve_vmovltq_x
__builtin_arm_mve_vmovnbq_m
__builtin_arm_mve_vmovnbq
__builtin_arm_mve_vmovntq_m
__builtin_arm_mve_vmovntq
__builtin_arm_mve_vmulhq_m
__builtin_arm_mve_vmulhq
__builtin_arm_mve_vmulhq_x
__builtin_arm_mve_vmullbq_int_m
__builtin_arm_mve_vmullbq_int
__builtin_arm_mve_vmullbq_int_x
__builtin_arm_mve_vmullbq_poly_m
__builtin_arm_mve_vmullbq_poly
__builtin_arm_mve_vmullbq_poly_x
__builtin_arm_mve_vmulltq_int_m
__builtin_arm_mve_vmulltq_int
__builtin_arm_mve_vmulltq_int_x
__builtin_arm_mve_vmulltq_poly_m
__builtin_arm_mve_vmulltq_poly
__builtin_arm_mve_vmulltq_poly_x
__builtin_arm_mve_vmulq
__builtin_arm_mve_vmulq_m
__builtin_arm_mve_vmulq_x
__builtin_arm_mve_vmvnq_m
__builtin_arm_mve_vmvnq
__builtin_arm_mve_vmvnq_x
__builtin_arm_mve_vnegq
__builtin_arm_mve_vnegq_m
__builtin_arm_mve_vnegq_x
__builtin_arm_mve_vornq
__builtin_arm_mve_vornq_m
__builtin_arm_mve_vornq_x
__builtin_arm_mve_vorrq
__builtin_arm_mve_vorrq_m
__builtin_arm_mve_vorrq_m_n
__builtin_arm_mve_vorrq_x
__builtin_arm_mve_vpselq
__builtin_arm_mve_vqabsq_m
__builtin_arm_mve_vqabsq
__builtin_arm_mve_vqaddq_m
__builtin_arm_mve_vqaddq
__builtin_arm_mve_vqdmladhq_m
__builtin_arm_mve_vqdmladhq
__builtin_arm_mve_vqdmladhxq_m
__builtin_arm_mve_vqdmladhxq
__builtin_arm_mve_vqdmlahq_m
__builtin_arm_mve_vqdmlahq
__builtin_arm_mve_vqdmlashq_m
__builtin_arm_mve_vqdmlashq
__builtin_arm_mve_vqdmlsdhq_m
__builtin_arm_mve_vqdmlsdhq
__builtin_arm_mve_vqdmlsdhxq_m
__builtin_arm_mve_vqdmlsdhxq
__builtin_arm_mve_vqdmulhq_m
__builtin_arm_mve_vqdmulhq
__builtin_arm_mve_vqdmullbq_m
__builtin_arm_mve_vqdmullbq
__builtin_arm_mve_vqdmulltq_m
__builtin_arm_mve_vqdmulltq
__builtin_arm_mve_vqmovnbq_m
__builtin_arm_mve_vqmovnbq
__builtin_arm_mve_vqmovntq_m
__builtin_arm_mve_vqmovntq
__builtin_arm_mve_vqmovunbq_m
__builtin_arm_mve_vqmovunbq
__builtin_arm_mve_vqmovuntq_m
__builtin_arm_mve_vqmovuntq
__builtin_arm_mve_vqnegq_m
__builtin_arm_mve_vqnegq
__builtin_arm_mve_vqrdmladhq_m
__builtin_arm_mve_vqrdmladhq
__builtin_arm_mve_vqrdmladhxq_m
__builtin_arm_mve_vqrdmladhxq
__builtin_arm_mve_vqrdmlahq_m
__builtin_arm_mve_vqrdmlahq
__builtin_arm_mve_vqrdmlashq_m
__builtin_arm_mve_vqrdmlashq
__builtin_arm_mve_vqrdmlsdhq_m
__builtin_arm_mve_vqrdmlsdhq
__builtin_arm_mve_vqrdmlsdhxq_m
__builtin_arm_mve_vqrdmlsdhxq
__builtin_arm_mve_vqrdmulhq_m
__builtin_arm_mve_vqrdmulhq
__builtin_arm_mve_vqrshlq_m_n
__builtin_arm_mve_vqrshlq_m
__builtin_arm_mve_vqrshlq
__builtin_arm_mve_vqrshrnbq_m
__builtin_arm_mve_vqrshrnbq
__builtin_arm_mve_vqrshrntq_m
__builtin_arm_mve_vqrshrntq
__builtin_arm_mve_vqrshrunbq_m
__builtin_arm_mve_vqrshrunbq
__builtin_arm_mve_vqrshruntq_m
__builtin_arm_mve_vqrshruntq
__builtin_arm_mve_vqshlq_m_n
__builtin_arm_mve_vqshlq_m_r
__builtin_arm_mve_vqshlq_m
__builtin_arm_mve_vqshlq_n
__builtin_arm_mve_vqshlq_r
__builtin_arm_mve_vqshlq
__builtin_arm_mve_vqshluq_m
__builtin_arm_mve_vqshluq
__builtin_arm_mve_vqshrnbq_m
__builtin_arm_mve_vqshrnbq
__builtin_arm_mve_vqshrntq_m
__builtin_arm_mve_vqshrntq
__builtin_arm_mve_vqshrunbq_m
__builtin_arm_mve_vqshrunbq
__builtin_arm_mve_vqshruntq_m
__builtin_arm_mve_vqshruntq
__builtin_arm_mve_vqsubq_m
__builtin_arm_mve_vqsubq
__builtin_arm_mve_vreinterpretq_f16
__builtin_arm_mve_vreinterpretq_f32
__builtin_arm_mve_vreinterpretq_s16
__builtin_arm_mve_vreinterpretq_s32
__builtin_arm_mve_vreinterpretq_s64
__builtin_arm_mve_vreinterpretq_s8
__builtin_arm_mve_vreinterpretq_u16
__builtin_arm_mve_vreinterpretq_u32
__builtin_arm_mve_vreinterpretq_u64
__builtin_arm_mve_vreinterpretq_u8
__builtin_arm_mve_vrev16q_m
__builtin_arm_mve_vrev16q
__builtin_arm_mve_vrev16q_x
__builtin_arm_mve_vrev32q
__builtin_arm_mve_vrev32q_m
__builtin_arm_mve_vrev32q_x
__builtin_arm_mve_vrev64q
__builtin_arm_mve_vrev64q_m
__builtin_arm_mve_vrev64q_x
__builtin_arm_mve_vrhaddq_m
__builtin_arm_mve_vrhaddq
__builtin_arm_mve_vrhaddq_x
__builtin_arm_mve_vrmlaldavhaq_p
__builtin_arm_mve_vrmlaldavhaq
__builtin_arm_mve_vrmlaldavhaxq_p
__builtin_arm_mve_vrmlaldavhaxq
__builtin_arm_mve_vrmlaldavhq_p
__builtin_arm_mve_vrmlaldavhq
__builtin_arm_mve_vrmlaldavhxq_p
__builtin_arm_mve_vrmlaldavhxq
__builtin_arm_mve_vrmlsldavhaq_p
__builtin_arm_mve_vrmlsldavhaq
__builtin_arm_mve_vrmlsldavhaxq_p
__builtin_arm_mve_vrmlsldavhaxq
__builtin_arm_mve_vrmlsldavhq_p
__builtin_arm_mve_vrmlsldavhq
__builtin_arm_mve_vrmlsldavhxq_p
__builtin_arm_mve_vrmlsldavhxq
__builtin_arm_mve_vrmulhq_m
__builtin_arm_mve_vrmulhq
__builtin_arm_mve_vrmulhq_x
__builtin_arm_mve_vrndaq
__builtin_arm_mve_vrndaq_m
__builtin_arm_mve_vrndaq_x
__builtin_arm_mve_vrndmq
__builtin_arm_mve_vrndmq_m
__builtin_arm_mve_vrndmq_x
__builtin_arm_mve_vrndnq
__builtin_arm_mve_vrndnq_m
__builtin_arm_mve_vrndnq_x
__builtin_arm_mve_vrndpq
__builtin_arm_mve_vrndpq_m
__builtin_arm_mve_vrndpq_x
__builtin_arm_mve_vrndq
__builtin_arm_mve_vrndq_m
__builtin_arm_mve_vrndq_x
__builtin_arm_mve_vrndxq
__builtin_arm_mve_vrndxq_m
__builtin_arm_mve_vrndxq_x
__builtin_arm_mve_vrshlq_m_n
__builtin_arm_mve_vrshlq_m
__builtin_arm_mve_vrshlq
__builtin_arm_mve_vrshlq_x
__builtin_arm_mve_vrshrnbq_m
__builtin_arm_mve_vrshrnbq
__builtin_arm_mve_vrshrntq_m
__builtin_arm_mve_vrshrntq
__builtin_arm_mve_vrshrq_m
__builtin_arm_mve_vrshrq
__builtin_arm_mve_vrshrq_x
__builtin_arm_mve_vsbciq_m
__builtin_arm_mve_vsbciq
__builtin_arm_mve_vsbcq_m
__builtin_arm_mve_vsbcq
__builtin_arm_mve_vsetq_lane
__builtin_arm_mve_vshlcq_m
__builtin_arm_mve_vshlcq
__builtin_arm_mve_vshllbq_m
__builtin_arm_mve_vshllbq
__builtin_arm_mve_vshllbq_x
__builtin_arm_mve_vshlltq_m
__builtin_arm_mve_vshlltq
__builtin_arm_mve_vshlltq_x
__builtin_arm_mve_vshlq_m_n
__builtin_arm_mve_vshlq_m_r
__builtin_arm_mve_vshlq_m
__builtin_arm_mve_vshlq_n
__builtin_arm_mve_vshlq_r
__builtin_arm_mve_vshlq
__builtin_arm_mve_vshlq_x_n
__builtin_arm_mve_vshlq_x
__builtin_arm_mve_vshrnbq_m
__builtin_arm_mve_vshrnbq
__builtin_arm_mve_vshrntq_m
__builtin_arm_mve_vshrntq
__builtin_arm_mve_vshrq_m
__builtin_arm_mve_vshrq
__builtin_arm_mve_vshrq_x
__builtin_arm_mve_vsliq_m
__builtin_arm_mve_vsliq
__builtin_arm_mve_vsriq_m
__builtin_arm_mve_vsriq
__builtin_arm_mve_vst1q
__builtin_arm_mve_vst1q_p
__builtin_arm_mve_vst2q
__builtin_arm_mve_vst4q
__builtin_arm_mve_vstrbq_p
__builtin_arm_mve_vstrbq
__builtin_arm_mve_vstrbq_scatter_offset_p
__builtin_arm_mve_vstrbq_scatter_offset
__builtin_arm_mve_vstrdq_scatter_base_p
__builtin_arm_mve_vstrdq_scatter_base
__builtin_arm_mve_vstrdq_scatter_base_wb_p
__builtin_arm_mve_vstrdq_scatter_base_wb
__builtin_arm_mve_vstrdq_scatter_offset_p
__builtin_arm_mve_vstrdq_scatter_offset
__builtin_arm_mve_vstrdq_scatter_shifted_offset_p
__builtin_arm_mve_vstrdq_scatter_shifted_offset
__builtin_arm_mve_vstrhq
__builtin_arm_mve_vstrhq_p
__builtin_arm_mve_vstrhq_scatter_offset
__builtin_arm_mve_vstrhq_scatter_offset_p
__builtin_arm_mve_vstrhq_scatter_shifted_offset
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p
__builtin_arm_mve_vstrwq
__builtin_arm_mve_vstrwq_p
__builtin_arm_mve_vstrwq_scatter_base
__builtin_arm_mve_vstrwq_scatter_base_p
__builtin_arm_mve_vstrwq_scatter_base_wb
__builtin_arm_mve_vstrwq_scatter_base_wb_p
__builtin_arm_mve_vstrwq_scatter_offset
__builtin_arm_mve_vstrwq_scatter_offset_p
__builtin_arm_mve_vstrwq_scatter_shifted_offset
__builtin_arm_mve_vstrwq_scatter_shifted_offset_p
__builtin_arm_mve_vsubq
__builtin_arm_mve_vsubq_m
__builtin_arm_mve_vsubq_x
__builtin_arm_mve_vuninitializedq
__builtin_arm_cde_cx1
__builtin_arm_cde_cx1a
__builtin_arm_cde_cx1d
__builtin_arm_cde_cx1da
__builtin_arm_cde_cx2
__builtin_arm_cde_cx2a
__builtin_arm_cde_cx2d
__builtin_arm_cde_cx2da
__builtin_arm_cde_cx3
__builtin_arm_cde_cx3a
__builtin_arm_cde_cx3d
__builtin_arm_cde_cx3da
__builtin_arm_cde_vcx1_u32
__builtin_arm_cde_vcx1a_u32
__builtin_arm_cde_vcx1d_u64
__builtin_arm_cde_vcx1da_u64
__builtin_arm_cde_vcx1q_m_f16
__builtin_arm_cde_vcx1q_m_f32
__builtin_arm_cde_vcx1q_m_s16
__builtin_arm_cde_vcx1q_m_s32
__builtin_arm_cde_vcx1q_m_s64
__builtin_arm_cde_vcx1q_m_s8
__builtin_arm_cde_vcx1q_m_u16
__builtin_arm_cde_vcx1q_m_u32
__builtin_arm_cde_vcx1q_m_u64
__builtin_arm_cde_vcx1q_m_u8
__builtin_arm_cde_vcx1q_u8
__builtin_arm_cde_vcx1qa_f16
__builtin_arm_cde_vcx1qa_f32
__builtin_arm_cde_vcx1qa_m_f16
__builtin_arm_cde_vcx1qa_m_f32
__builtin_arm_cde_vcx1qa_m_s16
__builtin_arm_cde_vcx1qa_m_s32
__builtin_arm_cde_vcx1qa_m_s64
__builtin_arm_cde_vcx1qa_m_s8
__builtin_arm_cde_vcx1qa_m_u16
__builtin_arm_cde_vcx1qa_m_u32
__builtin_arm_cde_vcx1qa_m_u64
__builtin_arm_cde_vcx1qa_m_u8
__builtin_arm_cde_vcx1qa_s16
__builtin_arm_cde_vcx1qa_s32
__builtin_arm_cde_vcx1qa_s64
__builtin_arm_cde_vcx1qa_s8
__builtin_arm_cde_vcx1qa_u16
__builtin_arm_cde_vcx1qa_u32
__builtin_arm_cde_vcx1qa_u64
__builtin_arm_cde_vcx1qa_u8
__builtin_arm_cde_vcx2_u32
__builtin_arm_cde_vcx2a_u32
__builtin_arm_cde_vcx2d_u64
__builtin_arm_cde_vcx2da_u64
__builtin_arm_cde_vcx2q_f16
__builtin_arm_cde_vcx2q_f32
__builtin_arm_cde_vcx2q_m_impl_f16
__builtin_arm_cde_vcx2q_m_impl_f32
__builtin_arm_cde_vcx2q_m_impl_s16
__builtin_arm_cde_vcx2q_m_impl_s32
__builtin_arm_cde_vcx2q_m_impl_s64
__builtin_arm_cde_vcx2q_m_impl_s8
__builtin_arm_cde_vcx2q_m_impl_u16
__builtin_arm_cde_vcx2q_m_impl_u32
__builtin_arm_cde_vcx2q_m_impl_u64
__builtin_arm_cde_vcx2q_m_impl_u8
__builtin_arm_cde_vcx2q_s16
__builtin_arm_cde_vcx2q_s32
__builtin_arm_cde_vcx2q_s64
__builtin_arm_cde_vcx2q_s8
__builtin_arm_cde_vcx2q_u16
__builtin_arm_cde_vcx2q_u32
__builtin_arm_cde_vcx2q_u64
__builtin_arm_cde_vcx2q_u8
__builtin_arm_cde_vcx2q_u8_f16
__builtin_arm_cde_vcx2q_u8_f32
__builtin_arm_cde_vcx2q_u8_s16
__builtin_arm_cde_vcx2q_u8_s32
__builtin_arm_cde_vcx2q_u8_s64
__builtin_arm_cde_vcx2q_u8_s8
__builtin_arm_cde_vcx2q_u8_u16
__builtin_arm_cde_vcx2q_u8_u32
__builtin_arm_cde_vcx2q_u8_u64
__builtin_arm_cde_vcx2q_u8_u8
__builtin_arm_cde_vcx2qa_impl_f16
__builtin_arm_cde_vcx2qa_impl_f32
__builtin_arm_cde_vcx2qa_impl_s16
__builtin_arm_cde_vcx2qa_impl_s32
__builtin_arm_cde_vcx2qa_impl_s64
__builtin_arm_cde_vcx2qa_impl_s8
__builtin_arm_cde_vcx2qa_impl_u16
__builtin_arm_cde_vcx2qa_impl_u32
__builtin_arm_cde_vcx2qa_impl_u64
__builtin_arm_cde_vcx2qa_impl_u8
__builtin_arm_cde_vcx2qa_m_impl_f16
__builtin_arm_cde_vcx2qa_m_impl_f32
__builtin_arm_cde_vcx2qa_m_impl_s16
__builtin_arm_cde_vcx2qa_m_impl_s32
__builtin_arm_cde_vcx2qa_m_impl_s64
__builtin_arm_cde_vcx2qa_m_impl_s8
__builtin_arm_cde_vcx2qa_m_impl_u16
__builtin_arm_cde_vcx2qa_m_impl_u32
__builtin_arm_cde_vcx2qa_m_impl_u64
__builtin_arm_cde_vcx2qa_m_impl_u8
__builtin_arm_cde_vcx3_u32
__builtin_arm_cde_vcx3a_u32
__builtin_arm_cde_vcx3d_u64
__builtin_arm_cde_vcx3da_u64
__builtin_arm_cde_vcx3q_impl_f16
__builtin_arm_cde_vcx3q_impl_f32
__builtin_arm_cde_vcx3q_impl_s16
__builtin_arm_cde_vcx3q_impl_s32
__builtin_arm_cde_vcx3q_impl_s64
__builtin_arm_cde_vcx3q_impl_s8
__builtin_arm_cde_vcx3q_impl_u16
__builtin_arm_cde_vcx3q_impl_u32
__builtin_arm_cde_vcx3q_impl_u64
__builtin_arm_cde_vcx3q_impl_u8
__builtin_arm_cde_vcx3q_m_impl_f16
__builtin_arm_cde_vcx3q_m_impl_f32
__builtin_arm_cde_vcx3q_m_impl_s16
__builtin_arm_cde_vcx3q_m_impl_s32
__builtin_arm_cde_vcx3q_m_impl_s64
__builtin_arm_cde_vcx3q_m_impl_s8
__builtin_arm_cde_vcx3q_m_impl_u16
__builtin_arm_cde_vcx3q_m_impl_u32
__builtin_arm_cde_vcx3q_m_impl_u64
__builtin_arm_cde_vcx3q_m_impl_u8
__builtin_arm_cde_vcx3q_u8_impl_f16
__builtin_arm_cde_vcx3q_u8_impl_f32
__builtin_arm_cde_vcx3q_u8_impl_s16
__builtin_arm_cde_vcx3q_u8_impl_s32
__builtin_arm_cde_vcx3q_u8_impl_s64
__builtin_arm_cde_vcx3q_u8_impl_s8
__builtin_arm_cde_vcx3q_u8_impl_u16
__builtin_arm_cde_vcx3q_u8_impl_u32
__builtin_arm_cde_vcx3q_u8_impl_u64
__builtin_arm_cde_vcx3q_u8_impl_u8
__builtin_arm_cde_vcx3qa_impl_f16
__builtin_arm_cde_vcx3qa_impl_f32
__builtin_arm_cde_vcx3qa_impl_s16
__builtin_arm_cde_vcx3qa_impl_s32
__builtin_arm_cde_vcx3qa_impl_s64
__builtin_arm_cde_vcx3qa_impl_s8
__builtin_arm_cde_vcx3qa_impl_u16
__builtin_arm_cde_vcx3qa_impl_u32
__builtin_arm_cde_vcx3qa_impl_u64
__builtin_arm_cde_vcx3qa_impl_u8
__builtin_arm_cde_vcx3qa_m_impl_f16
__builtin_arm_cde_vcx3qa_m_impl_f32
__builtin_arm_cde_vcx3qa_m_impl_s16
__builtin_arm_cde_vcx3qa_m_impl_s32
__builtin_arm_cde_vcx3qa_m_impl_s64
__builtin_arm_cde_vcx3qa_m_impl_s8
__builtin_arm_cde_vcx3qa_m_impl_u16
__builtin_arm_cde_vcx3qa_m_impl_u32
__builtin_arm_cde_vcx3qa_m_impl_u64
__builtin_arm_cde_vcx3qa_m_impl_u8
__builtin_arm_cde_vreinterpretq_u8_u8
vIUiC
__ldrexd
WiWiCD*
_MoveFromCoprocessor
UiIUiIUiIUiIUiIUi
_MoveFromCoprocessor2
_MoveToCoprocessor
vUiIUiIUiIUiIUiIUi
_MoveToCoprocessor2
__ARMEL__
__ARMEB__
__ARM_BIG_ENDIAN
_M_ARM_NT
_M_ARMT
_M_ARM
_M_THUMB
_M_ARM_FP
_ARM_
armv7
__RENDERSCRIPT__
__AVR
__AVR__
__flash
__attribute__((address_space(1)))
avrxmega1
avrxmega3
__AVR_AT90S1200__
__AVR_ATtiny11__
__AVR_ATtiny12__
__AVR_ATtiny15__
__AVR_ATtiny28__
__AVR_AT90S2313__
__AVR_AT90S2323__
__AVR_AT90S2333__
__AVR_AT90S2343__
__AVR_ATtiny22__
__AVR_ATtiny26__
__AVR_AT86RF401__
__AVR_AT90S4414__
__AVR_AT90S4433__
__AVR_AT90S4434__
__AVR_AT90S8515__
__AVR_AT90c8534__
__AVR_AT90S8535__
__AVR_ATA5272__
__AVR_ATtiny13__
__AVR_ATtiny13A__
__AVR_ATtiny2313__
__AVR_ATtiny2313A__
__AVR_ATtiny24__
__AVR_ATtiny24A__
__AVR_ATtiny4313__
__AVR_ATtiny44__
__AVR_ATtiny44A__
__AVR_ATtiny84__
__AVR_ATtiny84A__
__AVR_ATtiny25__
__AVR_ATtiny45__
__AVR_ATtiny85__
__AVR_ATtiny261__
__AVR_ATtiny261A__
__AVR_ATtiny441__
__AVR_ATtiny461__
__AVR_ATtiny461A__
__AVR_ATtiny841__
__AVR_ATtiny861__
__AVR_ATtiny861A__
__AVR_ATtiny87__
__AVR_ATtiny43U__
__AVR_ATtiny48__
__AVR_ATtiny88__
__AVR_ATtiny828__
__AVR_AT43USB355__
__AVR_AT76C711__
__AVR_ATmega103__
__AVR_AT43USB320__
__AVR_ATtiny167__
__AVR_AT90USB82__
__AVR_AT90USB162__
__AVR_ATA5505__
__AVR_ATmega8U2__
__AVR_ATmega16U2__
__AVR_ATmega32U2__
__AVR_ATtiny1634__
__AVR_ATmega8__
__AVR_ATA6289__
__AVR_ATmega8A__
__AVR_ATA6285__
__AVR_ATA6286__
__AVR_ATmega48__
__AVR_ATmega48A__
__AVR_ATmega48PA__
__AVR_ATmega48PB__
__AVR_ATmega48P__
__AVR_ATmega88__
__AVR_ATmega88A__
__AVR_ATmega88P__
__AVR_ATmega88PA__
__AVR_ATmega88PB__
__AVR_ATmega8515__
__AVR_ATmega8535__
__AVR_ATmega8HVA__
__AVR_AT90PWM1__
__AVR_AT90PWM2__
__AVR_AT90PWM2B__
__AVR_AT90PWM3__
__AVR_AT90PWM3B__
__AVR_AT90PWM81__
__AVR_ATA5790__
__AVR_ATA5795__
__AVR_ATmega16__
__AVR_ATmega16A__
__AVR_ATmega161__
__AVR_ATmega162__
__AVR_ATmega163__
__AVR_ATmega164A__
__AVR_ATmega164P__
__AVR_ATmega164PA__
__AVR_ATmega165__
__AVR_ATmega165A__
__AVR_ATmega165P__
__AVR_ATmega165PA__
__AVR_ATmega168__
__AVR_ATmega168A__
__AVR_ATmega168P__
__AVR_ATmega168PA__
__AVR_ATmega168PB__
__AVR_ATmega169__
__AVR_ATmega169A__
__AVR_ATmega169P__
__AVR_ATmega169PA__
__AVR_ATmega32__
__AVR_ATmega32A__
__AVR_ATmega323__
__AVR_ATmega324A__
__AVR_ATmega324P__
__AVR_ATmega324PA__
atmega324pb
__AVR_ATmega324PB__
__AVR_ATmega325__
__AVR_ATmega325A__
__AVR_ATmega325P__
__AVR_ATmega325PA__
__AVR_ATmega3250__
__AVR_ATmega3250A__
__AVR_ATmega3250P__
__AVR_ATmega3250PA__
__AVR_ATmega328__
__AVR_ATmega328P__
atmega328pb
__AVR_ATmega328PB__
__AVR_ATmega329__
__AVR_ATmega329A__
__AVR_ATmega329P__
__AVR_ATmega329PA__
__AVR_ATmega3290__
__AVR_ATmega3290A__
__AVR_ATmega3290P__
__AVR_ATmega3290PA__
__AVR_ATmega406__
__AVR_ATmega64__
__AVR_ATmega64A__
__AVR_ATmega640__
__AVR_ATmega644__
__AVR_ATmega644A__
__AVR_ATmega644P__
__AVR_ATmega644PA__
__AVR_ATmega645__
__AVR_ATmega645A__
__AVR_ATmega645P__
__AVR_ATmega649__
__AVR_ATmega649A__
__AVR_ATmega649P__
__AVR_ATmega6450__
__AVR_ATmega6450A__
__AVR_ATmega6450P__
__AVR_ATmega6490__
__AVR_ATmega6490A__
__AVR_ATmega6490P__
__AVR_ATmega64RFR2__
__AVR_ATmega644RFR2__
__AVR_ATmega16HVA__
__AVR_ATmega16HVA2__
__AVR_ATmega16HVB__
__AVR_ATmega16HVBREVB__
__AVR_ATmega32HVB__
__AVR_ATmega32HVBREVB__
__AVR_ATmega64HVE__
__AVR_AT90CAN32__
__AVR_AT90CAN64__
__AVR_AT90PWM161__
__AVR_AT90PWM216__
__AVR_AT90PWM316__
__AVR_ATmega32C1__
__AVR_ATmega64C1__
__AVR_ATmega16M1__
__AVR_ATmega32M1__
__AVR_ATmega64M1__
__AVR_ATmega16U4__
__AVR_ATmega32U4__
__AVR_ATmega32U6__
__AVR_AT90USB646__
__AVR_AT90USB647__
__AVR_AT90SCR100__
__AVR_AT94K__
__AVR_AT000__
__AVR_ATmega128__
__AVR_ATmega128A__
__AVR_ATmega1280__
__AVR_ATmega1281__
__AVR_ATmega1284__
__AVR_ATmega1284P__
__AVR_ATmega128RFA1__
__AVR_ATmega128RFR2__
__AVR_ATmega1284RFR2__
__AVR_AT90CAN128__
__AVR_AT90USB1286__
__AVR_AT90USB1287__
__AVR_ATmega2560__
__AVR_ATmega2561__
__AVR_ATmega256RFR2__
__AVR_ATmega2564RFR2__
__AVR_ATxmega16A4__
__AVR_ATxmega16A4U__
__AVR_ATxmega16C4__
__AVR_ATxmega16D4__
__AVR_ATxmega32A4__
__AVR_ATxmega32A4U__
__AVR_ATxmega32C4__
__AVR_ATxmega32D4__
__AVR_ATxmega32E5__
__AVR_ATxmega16E5__
__AVR_ATxmega8E5__
atxmega32x1
__AVR_ATxmega32X1__
atxmega64a3
__AVR_ATxmega64A3__
__AVR_ATxmega64A3U__
__AVR_ATxmega64A4U__
__AVR_ATxmega64B1__
__AVR_ATxmega64B3__
__AVR_ATxmega64C3__
__AVR_ATxmega64D3__
__AVR_ATxmega64D4__
__AVR_ATxmega64A1__
__AVR_ATxmega64A1U__
__AVR_ATxmega128A3__
__AVR_ATxmega128A3U__
__AVR_ATxmega128B1__
__AVR_ATxmega128B3__
__AVR_ATxmega128C3__
__AVR_ATxmega128D3__
__AVR_ATxmega128D4__
__AVR_ATxmega192A3__
__AVR_ATxmega192A3U__
__AVR_ATxmega192C3__
__AVR_ATxmega192D3__
__AVR_ATxmega256A3__
__AVR_ATxmega256A3U__
__AVR_ATxmega256A3B__
__AVR_ATxmega256A3BU__
__AVR_ATxmega256C3__
__AVR_ATxmega256D3__
__AVR_ATxmega384C3__
__AVR_ATxmega384D3__
__AVR_ATxmega128A1__
__AVR_ATxmega128A1U__
__AVR_ATxmega128A4U__
__AVR_ATtiny4__
__AVR_ATtiny5__
__AVR_ATtiny9__
__AVR_ATtiny10__
__AVR_ATtiny20__
__AVR_ATtiny40__
attiny102
__AVR_ATtiny102__
attiny104
__AVR_ATtiny104__
attiny202
__AVR_ATtiny202__
attiny402
__AVR_ATtiny402__
attiny204
__AVR_ATtiny204__
attiny404
__AVR_ATtiny404__
attiny804
__AVR_ATtiny804__
attiny1604
__AVR_ATtiny1604__
attiny406
__AVR_ATtiny406__
attiny806
__AVR_ATtiny806__
attiny1606
__AVR_ATtiny1606__
attiny807
__AVR_ATtiny807__
attiny1607
__AVR_ATtiny1607__
attiny212
__AVR_ATtiny212__
attiny412
__AVR_ATtiny412__
attiny214
__AVR_ATtiny214__
attiny414
__AVR_ATtiny414__
attiny814
__AVR_ATtiny814__
attiny1614
__AVR_ATtiny1614__
attiny416
__AVR_ATtiny416__
attiny816
__AVR_ATtiny816__
attiny1616
__AVR_ATtiny1616__
attiny3216
__AVR_ATtiny3216__
attiny417
__AVR_ATtiny417__
attiny817
__AVR_ATtiny817__
attiny1617
__AVR_ATtiny1617__
attiny3217
__AVR_ATtiny3217__
__builtin_preserve_field_info
__builtin_btf_type_id
LUi.
__builtin_preserve_type_info
__builtin_preserve_enum_value
__bpf__
__BPF__
+alu32
probe
__qdsp6__
__hexagon__
hexagonv5
__HEXAGON_V5__
__HEXAGON_ARCH__
__QDSP6_V5__
__QDSP6_ARCH__
hexagonv55
__HEXAGON_V55__
__QDSP6_V55__
hexagonv60
__HEXAGON_V60__
__QDSP6_V60__
hexagonv62
__HEXAGON_V62__
hexagonv65
__HEXAGON_V65__
hexagonv66
__HEXAGON_V66__
hexagonv67
__HEXAGON_V67__
hexagonv67t
__HEXAGON_V67T__
hexagonv68
__HEXAGON_V68__
hvx-length64b
__HVX__
__HVX_ARCH__
__HVX_LENGTH__
hvx-length128b
__HVXDBL__
audio
__HEXAGON_AUDIO__
__HEXAGON_PHYSICAL_SLOTS__
long-calls
+hvx-length64b
+hvx-length128b
+hvxv
-hvx
+audio
r1:0
r3:2
r5:4
r7:6
r9:8
r11:10
r13:12
r15:14
r17:16
r19:18
r21:20
r23:22
r25:24
r27:26
r29:28
r31:30
c1:0
c3:2
c5:4
c7:6
c9:8
c11:10
c13:12
c15:14
c17:16
c19:18
c21:20
c23:22
c25:24
c27:26
c29:28
c31:30
p3:0
upcyclelo
upcyclehi
framelimit
framekey
pktcountlo
pktcounthi
utimerlo
utimerhi
upcycle
pktcount
utimer
v1:0
v3:2
v5:4
v7:6
v9:8
v11:10
v13:12
v15:14
v17:16
v19:18
v21:20
v23:22
v25:24
v27:26
v29:28
v31:30
v3:0
v7:4
v11:8
v15:12
v19:16
v23:20
v27:24
v31:28
__builtin_SI_to_SXTHI_asrh
v5|v55|v60|v62|v65|v66|v67|v68
__builtin_brev_ldd
v*LLi*CLLi*iC
__builtin_brev_ldw
v*i*Ci*iC
__builtin_brev_ldh
v*s*Cs*iC
__builtin_brev_lduh
v*Us*CUs*iC
__builtin_brev_ldb
v*Sc*CSc*iC
__builtin_brev_ldub
v*Uc*CUc*iC
__builtin_circ_ldd
LLi*LLi*LLi*iIi
__builtin_circ_ldw
i*i*i*iIi
__builtin_circ_ldh
s*s*s*iIi
__builtin_circ_lduh
Us*Us*Us*iIi
__builtin_circ_ldb
c*c*c*iIi
__builtin_circ_ldub
Uc*Uc*Uc*iIi
__builtin_brev_std
LLi*CLLi*LLiiC
__builtin_brev_stw
i*Ci*iiC
__builtin_brev_sth
s*Cs*iiC
__builtin_brev_sthhi
__builtin_brev_stb
c*Cc*iiC
__builtin_circ_std
LLi*LLi*LLiiIi
__builtin_circ_stw
i*i*iiIi
__builtin_circ_sth
s*s*iiIi
__builtin_circ_sthhi
__builtin_circ_stb
c*c*iiIi
__builtin_HEXAGON_L2_loadrub_pci
iv*IiivC*
__builtin_HEXAGON_L2_loadrb_pci
__builtin_HEXAGON_L2_loadruh_pci
__builtin_HEXAGON_L2_loadrh_pci
__builtin_HEXAGON_L2_loadri_pci
__builtin_HEXAGON_L2_loadrd_pci
LLiv*IiivC*
__builtin_HEXAGON_L2_loadrub_pcr
iv*ivC*
__builtin_HEXAGON_L2_loadrb_pcr
__builtin_HEXAGON_L2_loadruh_pcr
__builtin_HEXAGON_L2_loadrh_pcr
__builtin_HEXAGON_L2_loadri_pcr
__builtin_HEXAGON_L2_loadrd_pcr
LLiv*ivC*
__builtin_HEXAGON_S2_storerb_pci
vv*IiiivC*
__builtin_HEXAGON_S2_storerh_pci
__builtin_HEXAGON_S2_storerf_pci
__builtin_HEXAGON_S2_storeri_pci
__builtin_HEXAGON_S2_storerd_pci
vv*IiiLLivC*
__builtin_HEXAGON_S2_storerb_pcr
vv*iivC*
__builtin_HEXAGON_S2_storerh_pcr
__builtin_HEXAGON_S2_storerf_pcr
__builtin_HEXAGON_S2_storeri_pcr
__builtin_HEXAGON_S2_storerd_pcr
vv*iLLivC*
__builtin_HEXAGON_prefetch
__builtin_HEXAGON_A6_vminub_RdP
LLiLLiLLi
v62|v65|v66|v67|v68
__builtin_HEXAGON_V6_vmaskedstoreq
vV64bv*V16i
hvxv60|hvxv62|hvxv65|hvxv66|hvxv67|hvxv68
__builtin_HEXAGON_V6_vmaskedstorenq
__builtin_HEXAGON_V6_vmaskedstorentq
__builtin_HEXAGON_V6_vmaskedstorentnq
__builtin_HEXAGON_V6_vmaskedstoreq_128B
vV128bv*V32i
__builtin_HEXAGON_V6_vmaskedstorenq_128B
__builtin_HEXAGON_V6_vmaskedstorentq_128B
__builtin_HEXAGON_V6_vmaskedstorentnq_128B
__builtin_HEXAGON_V6_vrmpybub_rtt
V32iV16iLLi
hvxv65
__builtin_HEXAGON_V6_vrmpybub_rtt_128B
V64iV32iLLi
__builtin_HEXAGON_V6_vrmpybub_rtt_acc
V32iV32iV16iLLi
__builtin_HEXAGON_V6_vrmpybub_rtt_acc_128B
V64iV64iV32iLLi
__builtin_HEXAGON_V6_vrmpyub_rtt
__builtin_HEXAGON_V6_vrmpyub_rtt_128B
__builtin_HEXAGON_V6_vrmpyub_rtt_acc
__builtin_HEXAGON_V6_vrmpyub_rtt_acc_128B
__builtin_HEXAGON_A2_abs
__builtin_HEXAGON_A2_absp
LLiLLi
__builtin_HEXAGON_A2_abssat
__builtin_HEXAGON_A2_add
__builtin_HEXAGON_A2_addh_h16_hh
__builtin_HEXAGON_A2_addh_h16_hl
__builtin_HEXAGON_A2_addh_h16_lh
__builtin_HEXAGON_A2_addh_h16_ll
__builtin_HEXAGON_A2_addh_h16_sat_hh
__builtin_HEXAGON_A2_addh_h16_sat_hl
__builtin_HEXAGON_A2_addh_h16_sat_lh
__builtin_HEXAGON_A2_addh_h16_sat_ll
__builtin_HEXAGON_A2_addh_l16_hl
__builtin_HEXAGON_A2_addh_l16_ll
__builtin_HEXAGON_A2_addh_l16_sat_hl
__builtin_HEXAGON_A2_addh_l16_sat_ll
__builtin_HEXAGON_A2_addi
__builtin_HEXAGON_A2_addp
__builtin_HEXAGON_A2_addpsat
__builtin_HEXAGON_A2_addsat
__builtin_HEXAGON_A2_addsp
LLiiLLi
__builtin_HEXAGON_A2_and
__builtin_HEXAGON_A2_andir
__builtin_HEXAGON_A2_andp
__builtin_HEXAGON_A2_aslh
__builtin_HEXAGON_A2_asrh
__builtin_HEXAGON_A2_combine_hh
__builtin_HEXAGON_A2_combine_hl
__builtin_HEXAGON_A2_combine_lh
__builtin_HEXAGON_A2_combine_ll
__builtin_HEXAGON_A2_combineii
LLiIiIi
__builtin_HEXAGON_A2_combinew
LLiii
__builtin_HEXAGON_A2_max
__builtin_HEXAGON_A2_maxp
__builtin_HEXAGON_A2_maxu
Uiii
__builtin_HEXAGON_A2_maxup
ULLiLLiLLi
__builtin_HEXAGON_A2_min
__builtin_HEXAGON_A2_minp
__builtin_HEXAGON_A2_minu
__builtin_HEXAGON_A2_minup
__builtin_HEXAGON_A2_neg
__builtin_HEXAGON_A2_negp
__builtin_HEXAGON_A2_negsat
__builtin_HEXAGON_A2_not
__builtin_HEXAGON_A2_notp
__builtin_HEXAGON_A2_or
__builtin_HEXAGON_A2_orir
__builtin_HEXAGON_A2_orp
__builtin_HEXAGON_A2_roundsat
iLLi
__builtin_HEXAGON_A2_sat
__builtin_HEXAGON_A2_satb
__builtin_HEXAGON_A2_sath
__builtin_HEXAGON_A2_satub
__builtin_HEXAGON_A2_satuh
__builtin_HEXAGON_A2_sub
__builtin_HEXAGON_A2_subh_h16_hh
__builtin_HEXAGON_A2_subh_h16_hl
__builtin_HEXAGON_A2_subh_h16_lh
__builtin_HEXAGON_A2_subh_h16_ll
__builtin_HEXAGON_A2_subh_h16_sat_hh
__builtin_HEXAGON_A2_subh_h16_sat_hl
__builtin_HEXAGON_A2_subh_h16_sat_lh
__builtin_HEXAGON_A2_subh_h16_sat_ll
__builtin_HEXAGON_A2_subh_l16_hl
__builtin_HEXAGON_A2_subh_l16_ll
__builtin_HEXAGON_A2_subh_l16_sat_hl
__builtin_HEXAGON_A2_subh_l16_sat_ll
__builtin_HEXAGON_A2_subp
__builtin_HEXAGON_A2_subri
iIii
__builtin_HEXAGON_A2_subsat
__builtin_HEXAGON_A2_svaddh
__builtin_HEXAGON_A2_svaddhs
__builtin_HEXAGON_A2_svadduhs
__builtin_HEXAGON_A2_svavgh
__builtin_HEXAGON_A2_svavghs
__builtin_HEXAGON_A2_svnavgh
__builtin_HEXAGON_A2_svsubh
__builtin_HEXAGON_A2_svsubhs
__builtin_HEXAGON_A2_svsubuhs
__builtin_HEXAGON_A2_swiz
__builtin_HEXAGON_A2_sxtb
__builtin_HEXAGON_A2_sxth
__builtin_HEXAGON_A2_sxtw
__builtin_HEXAGON_A2_tfr
__builtin_HEXAGON_A2_tfrih
iiUIi
__builtin_HEXAGON_A2_tfril
__builtin_HEXAGON_A2_tfrp
__builtin_HEXAGON_A2_tfrpi
LLiIi
__builtin_HEXAGON_A2_tfrsi
__builtin_HEXAGON_A2_vabsh
__builtin_HEXAGON_A2_vabshsat
__builtin_HEXAGON_A2_vabsw
__builtin_HEXAGON_A2_vabswsat
__builtin_HEXAGON_A2_vaddb_map
__builtin_HEXAGON_A2_vaddh
__builtin_HEXAGON_A2_vaddhs
__builtin_HEXAGON_A2_vaddub
__builtin_HEXAGON_A2_vaddubs
__builtin_HEXAGON_A2_vadduhs
__builtin_HEXAGON_A2_vaddw
__builtin_HEXAGON_A2_vaddws
__builtin_HEXAGON_A2_vavgh
__builtin_HEXAGON_A2_vavghcr
__builtin_HEXAGON_A2_vavghr
__builtin_HEXAGON_A2_vavgub
__builtin_HEXAGON_A2_vavgubr
__builtin_HEXAGON_A2_vavguh
__builtin_HEXAGON_A2_vavguhr
__builtin_HEXAGON_A2_vavguw
__builtin_HEXAGON_A2_vavguwr
__builtin_HEXAGON_A2_vavgw
__builtin_HEXAGON_A2_vavgwcr
__builtin_HEXAGON_A2_vavgwr
__builtin_HEXAGON_A2_vcmpbeq
iLLiLLi
__builtin_HEXAGON_A2_vcmpbgtu
__builtin_HEXAGON_A2_vcmpheq
__builtin_HEXAGON_A2_vcmphgt
__builtin_HEXAGON_A2_vcmphgtu
__builtin_HEXAGON_A2_vcmpweq
__builtin_HEXAGON_A2_vcmpwgt
__builtin_HEXAGON_A2_vcmpwgtu
__builtin_HEXAGON_A2_vconj
__builtin_HEXAGON_A2_vmaxb
__builtin_HEXAGON_A2_vmaxh
__builtin_HEXAGON_A2_vmaxub
__builtin_HEXAGON_A2_vmaxuh
__builtin_HEXAGON_A2_vmaxuw
__builtin_HEXAGON_A2_vmaxw
__builtin_HEXAGON_A2_vminb
__builtin_HEXAGON_A2_vminh
__builtin_HEXAGON_A2_vminub
__builtin_HEXAGON_A2_vminuh
__builtin_HEXAGON_A2_vminuw
__builtin_HEXAGON_A2_vminw
__builtin_HEXAGON_A2_vnavgh
__builtin_HEXAGON_A2_vnavghcr
__builtin_HEXAGON_A2_vnavghr
__builtin_HEXAGON_A2_vnavgw
__builtin_HEXAGON_A2_vnavgwcr
__builtin_HEXAGON_A2_vnavgwr
__builtin_HEXAGON_A2_vraddub
__builtin_HEXAGON_A2_vraddub_acc
LLiLLiLLiLLi
__builtin_HEXAGON_A2_vrsadub
__builtin_HEXAGON_A2_vrsadub_acc
__builtin_HEXAGON_A2_vsubb_map
__builtin_HEXAGON_A2_vsubh
__builtin_HEXAGON_A2_vsubhs
__builtin_HEXAGON_A2_vsubub
__builtin_HEXAGON_A2_vsububs
__builtin_HEXAGON_A2_vsubuhs
__builtin_HEXAGON_A2_vsubw
__builtin_HEXAGON_A2_vsubws
__builtin_HEXAGON_A2_xor
__builtin_HEXAGON_A2_xorp
__builtin_HEXAGON_A2_zxtb
__builtin_HEXAGON_A2_zxth
__builtin_HEXAGON_A4_andn
__builtin_HEXAGON_A4_andnp
__builtin_HEXAGON_A4_bitsplit
__builtin_HEXAGON_A4_bitspliti
LLiiUIi
__builtin_HEXAGON_A4_boundscheck
iiLLi
__builtin_HEXAGON_A4_cmpbeq
__builtin_HEXAGON_A4_cmpbeqi
__builtin_HEXAGON_A4_cmpbgt
__builtin_HEXAGON_A4_cmpbgti
__builtin_HEXAGON_A4_cmpbgtu
__builtin_HEXAGON_A4_cmpbgtui
__builtin_HEXAGON_A4_cmpheq
__builtin_HEXAGON_A4_cmpheqi
__builtin_HEXAGON_A4_cmphgt
__builtin_HEXAGON_A4_cmphgti
__builtin_HEXAGON_A4_cmphgtu
__builtin_HEXAGON_A4_cmphgtui
__builtin_HEXAGON_A4_combineir
LLiIii
__builtin_HEXAGON_A4_combineri
LLiiIi
__builtin_HEXAGON_A4_cround_ri
__builtin_HEXAGON_A4_cround_rr
__builtin_HEXAGON_A4_modwrapu
__builtin_HEXAGON_A4_orn
__builtin_HEXAGON_A4_ornp
__builtin_HEXAGON_A4_rcmpeq
__builtin_HEXAGON_A4_rcmpeqi
__builtin_HEXAGON_A4_rcmpneq
__builtin_HEXAGON_A4_rcmpneqi
__builtin_HEXAGON_A4_round_ri
__builtin_HEXAGON_A4_round_ri_sat
__builtin_HEXAGON_A4_round_rr
__builtin_HEXAGON_A4_round_rr_sat
__builtin_HEXAGON_A4_tlbmatch
iLLii
__builtin_HEXAGON_A4_vcmpbeq_any
__builtin_HEXAGON_A4_vcmpbeqi
iLLiUIi
__builtin_HEXAGON_A4_vcmpbgt
__builtin_HEXAGON_A4_vcmpbgti
iLLiIi
__builtin_HEXAGON_A4_vcmpbgtui
__builtin_HEXAGON_A4_vcmpheqi
__builtin_HEXAGON_A4_vcmphgti
__builtin_HEXAGON_A4_vcmphgtui
__builtin_HEXAGON_A4_vcmpweqi
__builtin_HEXAGON_A4_vcmpwgti
__builtin_HEXAGON_A4_vcmpwgtui
__builtin_HEXAGON_A4_vrmaxh
LLiLLiLLii
__builtin_HEXAGON_A4_vrmaxuh
__builtin_HEXAGON_A4_vrmaxuw
__builtin_HEXAGON_A4_vrmaxw
__builtin_HEXAGON_A4_vrminh
__builtin_HEXAGON_A4_vrminuh
__builtin_HEXAGON_A4_vrminuw
__builtin_HEXAGON_A4_vrminw
__builtin_HEXAGON_A5_vaddhubs
__builtin_HEXAGON_C2_all8
__builtin_HEXAGON_C2_and
__builtin_HEXAGON_C2_andn
__builtin_HEXAGON_C2_any8
__builtin_HEXAGON_C2_bitsclr
__builtin_HEXAGON_C2_bitsclri
__builtin_HEXAGON_C2_bitsset
__builtin_HEXAGON_C2_cmpeq
__builtin_HEXAGON_C2_cmpeqi
__builtin_HEXAGON_C2_cmpeqp
__builtin_HEXAGON_C2_cmpgei
__builtin_HEXAGON_C2_cmpgeui
__builtin_HEXAGON_C2_cmpgt
__builtin_HEXAGON_C2_cmpgti
__builtin_HEXAGON_C2_cmpgtp
__builtin_HEXAGON_C2_cmpgtu
__builtin_HEXAGON_C2_cmpgtui
__builtin_HEXAGON_C2_cmpgtup
__builtin_HEXAGON_C2_cmplt
__builtin_HEXAGON_C2_cmpltu
__builtin_HEXAGON_C2_mask
__builtin_HEXAGON_C2_mux
__builtin_HEXAGON_C2_muxii
iiIiIi
__builtin_HEXAGON_C2_muxir
iiiIi
__builtin_HEXAGON_C2_muxri
iiIii
__builtin_HEXAGON_C2_not
__builtin_HEXAGON_C2_or
__builtin_HEXAGON_C2_orn
__builtin_HEXAGON_C2_pxfer_map
__builtin_HEXAGON_C2_tfrpr
__builtin_HEXAGON_C2_tfrrp
__builtin_HEXAGON_C2_vitpack
__builtin_HEXAGON_C2_vmux
LLiiLLiLLi
__builtin_HEXAGON_C2_xor
__builtin_HEXAGON_C4_and_and
__builtin_HEXAGON_C4_and_andn
__builtin_HEXAGON_C4_and_or
__builtin_HEXAGON_C4_and_orn
__builtin_HEXAGON_C4_cmplte
__builtin_HEXAGON_C4_cmpltei
__builtin_HEXAGON_C4_cmplteu
__builtin_HEXAGON_C4_cmplteui
__builtin_HEXAGON_C4_cmpneq
__builtin_HEXAGON_C4_cmpneqi
__builtin_HEXAGON_C4_fastcorner9
__builtin_HEXAGON_C4_fastcorner9_not
__builtin_HEXAGON_C4_nbitsclr
__builtin_HEXAGON_C4_nbitsclri
__builtin_HEXAGON_C4_nbitsset
__builtin_HEXAGON_C4_or_and
__builtin_HEXAGON_C4_or_andn
__builtin_HEXAGON_C4_or_or
__builtin_HEXAGON_C4_or_orn
__builtin_HEXAGON_F2_conv_d2df
dLLi
__builtin_HEXAGON_F2_conv_d2sf
fLLi
__builtin_HEXAGON_F2_conv_df2d
LLid
__builtin_HEXAGON_F2_conv_df2d_chop
__builtin_HEXAGON_F2_conv_df2sf
__builtin_HEXAGON_F2_conv_df2ud
__builtin_HEXAGON_F2_conv_df2ud_chop
__builtin_HEXAGON_F2_conv_df2uw
__builtin_HEXAGON_F2_conv_df2uw_chop
__builtin_HEXAGON_F2_conv_df2w
__builtin_HEXAGON_F2_conv_df2w_chop
__builtin_HEXAGON_F2_conv_sf2d
LLif
__builtin_HEXAGON_F2_conv_sf2d_chop
__builtin_HEXAGON_F2_conv_sf2df
__builtin_HEXAGON_F2_conv_sf2ud
__builtin_HEXAGON_F2_conv_sf2ud_chop
__builtin_HEXAGON_F2_conv_sf2uw
__builtin_HEXAGON_F2_conv_sf2uw_chop
__builtin_HEXAGON_F2_conv_sf2w
__builtin_HEXAGON_F2_conv_sf2w_chop
__builtin_HEXAGON_F2_conv_ud2df
__builtin_HEXAGON_F2_conv_ud2sf
__builtin_HEXAGON_F2_conv_uw2df
__builtin_HEXAGON_F2_conv_uw2sf
__builtin_HEXAGON_F2_conv_w2df
__builtin_HEXAGON_F2_conv_w2sf
__builtin_HEXAGON_F2_dfclass
idUIi
__builtin_HEXAGON_F2_dfcmpeq
__builtin_HEXAGON_F2_dfcmpge
__builtin_HEXAGON_F2_dfcmpgt
__builtin_HEXAGON_F2_dfcmpuo
__builtin_HEXAGON_F2_dfimm_n
dUIi
__builtin_HEXAGON_F2_dfimm_p
__builtin_HEXAGON_F2_sfadd
__builtin_HEXAGON_F2_sfclass
ifUIi
__builtin_HEXAGON_F2_sfcmpeq
__builtin_HEXAGON_F2_sfcmpge
__builtin_HEXAGON_F2_sfcmpgt
__builtin_HEXAGON_F2_sfcmpuo
__builtin_HEXAGON_F2_sffixupd
__builtin_HEXAGON_F2_sffixupn
__builtin_HEXAGON_F2_sffixupr
__builtin_HEXAGON_F2_sffma
__builtin_HEXAGON_F2_sffma_lib
__builtin_HEXAGON_F2_sffma_sc
ffffi
__builtin_HEXAGON_F2_sffms
__builtin_HEXAGON_F2_sffms_lib
__builtin_HEXAGON_F2_sfimm_n
fUIi
__builtin_HEXAGON_F2_sfimm_p
__builtin_HEXAGON_F2_sfmax
__builtin_HEXAGON_F2_sfmin
__builtin_HEXAGON_F2_sfmpy
__builtin_HEXAGON_F2_sfsub
__builtin_HEXAGON_M2_acci
__builtin_HEXAGON_M2_accii
__builtin_HEXAGON_M2_cmaci_s0
LLiLLiii
__builtin_HEXAGON_M2_cmacr_s0
__builtin_HEXAGON_M2_cmacs_s0
__builtin_HEXAGON_M2_cmacs_s1
__builtin_HEXAGON_M2_cmacsc_s0
__builtin_HEXAGON_M2_cmacsc_s1
__builtin_HEXAGON_M2_cmpyi_s0
__builtin_HEXAGON_M2_cmpyr_s0
__builtin_HEXAGON_M2_cmpyrs_s0
__builtin_HEXAGON_M2_cmpyrs_s1
__builtin_HEXAGON_M2_cmpyrsc_s0
__builtin_HEXAGON_M2_cmpyrsc_s1
__builtin_HEXAGON_M2_cmpys_s0
__builtin_HEXAGON_M2_cmpys_s1
__builtin_HEXAGON_M2_cmpysc_s0
__builtin_HEXAGON_M2_cmpysc_s1
__builtin_HEXAGON_M2_cnacs_s0
__builtin_HEXAGON_M2_cnacs_s1
__builtin_HEXAGON_M2_cnacsc_s0
__builtin_HEXAGON_M2_cnacsc_s1
__builtin_HEXAGON_M2_dpmpyss_acc_s0
__builtin_HEXAGON_M2_dpmpyss_nac_s0
__builtin_HEXAGON_M2_dpmpyss_rnd_s0
__builtin_HEXAGON_M2_dpmpyss_s0
__builtin_HEXAGON_M2_dpmpyuu_acc_s0
__builtin_HEXAGON_M2_dpmpyuu_nac_s0
__builtin_HEXAGON_M2_dpmpyuu_s0
ULLiii
__builtin_HEXAGON_M2_hmmpyh_rs1
__builtin_HEXAGON_M2_hmmpyh_s1
__builtin_HEXAGON_M2_hmmpyl_rs1
__builtin_HEXAGON_M2_hmmpyl_s1
__builtin_HEXAGON_M2_maci
__builtin_HEXAGON_M2_macsin
iiiUIi
__builtin_HEXAGON_M2_macsip
__builtin_HEXAGON_M2_mmachs_rs0
__builtin_HEXAGON_M2_mmachs_rs1
__builtin_HEXAGON_M2_mmachs_s0
__builtin_HEXAGON_M2_mmachs_s1
__builtin_HEXAGON_M2_mmacls_rs0
__builtin_HEXAGON_M2_mmacls_rs1
__builtin_HEXAGON_M2_mmacls_s0
__builtin_HEXAGON_M2_mmacls_s1
__builtin_HEXAGON_M2_mmacuhs_rs0
__builtin_HEXAGON_M2_mmacuhs_rs1
__builtin_HEXAGON_M2_mmacuhs_s0
__builtin_HEXAGON_M2_mmacuhs_s1
__builtin_HEXAGON_M2_mmaculs_rs0
__builtin_HEXAGON_M2_mmaculs_rs1
__builtin_HEXAGON_M2_mmaculs_s0
__builtin_HEXAGON_M2_mmaculs_s1
__builtin_HEXAGON_M2_mmpyh_rs0
__builtin_HEXAGON_M2_mmpyh_rs1
__builtin_HEXAGON_M2_mmpyh_s0
__builtin_HEXAGON_M2_mmpyh_s1
__builtin_HEXAGON_M2_mmpyl_rs0
__builtin_HEXAGON_M2_mmpyl_rs1
__builtin_HEXAGON_M2_mmpyl_s0
__builtin_HEXAGON_M2_mmpyl_s1
__builtin_HEXAGON_M2_mmpyuh_rs0
__builtin_HEXAGON_M2_mmpyuh_rs1
__builtin_HEXAGON_M2_mmpyuh_s0
__builtin_HEXAGON_M2_mmpyuh_s1
__builtin_HEXAGON_M2_mmpyul_rs0
__builtin_HEXAGON_M2_mmpyul_rs1
__builtin_HEXAGON_M2_mmpyul_s0
__builtin_HEXAGON_M2_mmpyul_s1
__builtin_HEXAGON_M2_mpy_acc_hh_s0
__builtin_HEXAGON_M2_mpy_acc_hh_s1
__builtin_HEXAGON_M2_mpy_acc_hl_s0
__builtin_HEXAGON_M2_mpy_acc_hl_s1
__builtin_HEXAGON_M2_mpy_acc_lh_s0
__builtin_HEXAGON_M2_mpy_acc_lh_s1
__builtin_HEXAGON_M2_mpy_acc_ll_s0
__builtin_HEXAGON_M2_mpy_acc_ll_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s0
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s0
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s1
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s0
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s0
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s1
__builtin_HEXAGON_M2_mpy_hh_s0
__builtin_HEXAGON_M2_mpy_hh_s1
__builtin_HEXAGON_M2_mpy_hl_s0
__builtin_HEXAGON_M2_mpy_hl_s1
__builtin_HEXAGON_M2_mpy_lh_s0
__builtin_HEXAGON_M2_mpy_lh_s1
__builtin_HEXAGON_M2_mpy_ll_s0
__builtin_HEXAGON_M2_mpy_ll_s1
__builtin_HEXAGON_M2_mpy_nac_hh_s0
__builtin_HEXAGON_M2_mpy_nac_hh_s1
__builtin_HEXAGON_M2_mpy_nac_hl_s0
__builtin_HEXAGON_M2_mpy_nac_hl_s1
__builtin_HEXAGON_M2_mpy_nac_lh_s0
__builtin_HEXAGON_M2_mpy_nac_lh_s1
__builtin_HEXAGON_M2_mpy_nac_ll_s0
__builtin_HEXAGON_M2_mpy_nac_ll_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s0
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s1
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s0
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s1
__builtin_HEXAGON_M2_mpy_rnd_hh_s0
__builtin_HEXAGON_M2_mpy_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_rnd_hl_s0
__builtin_HEXAGON_M2_mpy_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_rnd_lh_s0
__builtin_HEXAGON_M2_mpy_rnd_lh_s1
__builtin_HEXAGON_M2_mpy_rnd_ll_s0
__builtin_HEXAGON_M2_mpy_rnd_ll_s1
__builtin_HEXAGON_M2_mpy_sat_hh_s0
__builtin_HEXAGON_M2_mpy_sat_hh_s1
__builtin_HEXAGON_M2_mpy_sat_hl_s0
__builtin_HEXAGON_M2_mpy_sat_hl_s1
__builtin_HEXAGON_M2_mpy_sat_lh_s0
__builtin_HEXAGON_M2_mpy_sat_lh_s1
__builtin_HEXAGON_M2_mpy_sat_ll_s0
__builtin_HEXAGON_M2_mpy_sat_ll_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s1
__builtin_HEXAGON_M2_mpy_up
__builtin_HEXAGON_M2_mpy_up_s1
__builtin_HEXAGON_M2_mpy_up_s1_sat
__builtin_HEXAGON_M2_mpyd_acc_hh_s0
__builtin_HEXAGON_M2_mpyd_acc_hh_s1
__builtin_HEXAGON_M2_mpyd_acc_hl_s0
__builtin_HEXAGON_M2_mpyd_acc_hl_s1
__builtin_HEXAGON_M2_mpyd_acc_lh_s0
__builtin_HEXAGON_M2_mpyd_acc_lh_s1
__builtin_HEXAGON_M2_mpyd_acc_ll_s0
__builtin_HEXAGON_M2_mpyd_acc_ll_s1
__builtin_HEXAGON_M2_mpyd_hh_s0
__builtin_HEXAGON_M2_mpyd_hh_s1
__builtin_HEXAGON_M2_mpyd_hl_s0
__builtin_HEXAGON_M2_mpyd_hl_s1
__builtin_HEXAGON_M2_mpyd_lh_s0
__builtin_HEXAGON_M2_mpyd_lh_s1
__builtin_HEXAGON_M2_mpyd_ll_s0
__builtin_HEXAGON_M2_mpyd_ll_s1
__builtin_HEXAGON_M2_mpyd_nac_hh_s0
__builtin_HEXAGON_M2_mpyd_nac_hh_s1
__builtin_HEXAGON_M2_mpyd_nac_hl_s0
__builtin_HEXAGON_M2_mpyd_nac_hl_s1
__builtin_HEXAGON_M2_mpyd_nac_lh_s0
__builtin_HEXAGON_M2_mpyd_nac_lh_s1
__builtin_HEXAGON_M2_mpyd_nac_ll_s0
__builtin_HEXAGON_M2_mpyd_nac_ll_s1
__builtin_HEXAGON_M2_mpyd_rnd_hh_s0
__builtin_HEXAGON_M2_mpyd_rnd_hh_s1
__builtin_HEXAGON_M2_mpyd_rnd_hl_s0
__builtin_HEXAGON_M2_mpyd_rnd_hl_s1
__builtin_HEXAGON_M2_mpyd_rnd_lh_s0
__builtin_HEXAGON_M2_mpyd_rnd_lh_s1
__builtin_HEXAGON_M2_mpyd_rnd_ll_s0
__builtin_HEXAGON_M2_mpyd_rnd_ll_s1
__builtin_HEXAGON_M2_mpyi
__builtin_HEXAGON_M2_mpysmi
__builtin_HEXAGON_M2_mpysu_up
__builtin_HEXAGON_M2_mpyu_acc_hh_s0
__builtin_HEXAGON_M2_mpyu_acc_hh_s1
__builtin_HEXAGON_M2_mpyu_acc_hl_s0
__builtin_HEXAGON_M2_mpyu_acc_hl_s1
__builtin_HEXAGON_M2_mpyu_acc_lh_s0
__builtin_HEXAGON_M2_mpyu_acc_lh_s1
__builtin_HEXAGON_M2_mpyu_acc_ll_s0
__builtin_HEXAGON_M2_mpyu_acc_ll_s1
__builtin_HEXAGON_M2_mpyu_hh_s0
__builtin_HEXAGON_M2_mpyu_hh_s1
__builtin_HEXAGON_M2_mpyu_hl_s0
__builtin_HEXAGON_M2_mpyu_hl_s1
__builtin_HEXAGON_M2_mpyu_lh_s0
__builtin_HEXAGON_M2_mpyu_lh_s1
__builtin_HEXAGON_M2_mpyu_ll_s0
__builtin_HEXAGON_M2_mpyu_ll_s1
__builtin_HEXAGON_M2_mpyu_nac_hh_s0
__builtin_HEXAGON_M2_mpyu_nac_hh_s1
__builtin_HEXAGON_M2_mpyu_nac_hl_s0
__builtin_HEXAGON_M2_mpyu_nac_hl_s1
__builtin_HEXAGON_M2_mpyu_nac_lh_s0
__builtin_HEXAGON_M2_mpyu_nac_lh_s1
__builtin_HEXAGON_M2_mpyu_nac_ll_s0
__builtin_HEXAGON_M2_mpyu_nac_ll_s1
__builtin_HEXAGON_M2_mpyu_up
__builtin_HEXAGON_M2_mpyud_acc_hh_s0
__builtin_HEXAGON_M2_mpyud_acc_hh_s1
__builtin_HEXAGON_M2_mpyud_acc_hl_s0
__builtin_HEXAGON_M2_mpyud_acc_hl_s1
__builtin_HEXAGON_M2_mpyud_acc_lh_s0
__builtin_HEXAGON_M2_mpyud_acc_lh_s1
__builtin_HEXAGON_M2_mpyud_acc_ll_s0
__builtin_HEXAGON_M2_mpyud_acc_ll_s1
__builtin_HEXAGON_M2_mpyud_hh_s0
__builtin_HEXAGON_M2_mpyud_hh_s1
__builtin_HEXAGON_M2_mpyud_hl_s0
__builtin_HEXAGON_M2_mpyud_hl_s1
__builtin_HEXAGON_M2_mpyud_lh_s0
__builtin_HEXAGON_M2_mpyud_lh_s1
__builtin_HEXAGON_M2_mpyud_ll_s0
__builtin_HEXAGON_M2_mpyud_ll_s1
__builtin_HEXAGON_M2_mpyud_nac_hh_s0
__builtin_HEXAGON_M2_mpyud_nac_hh_s1
__builtin_HEXAGON_M2_mpyud_nac_hl_s0
__builtin_HEXAGON_M2_mpyud_nac_hl_s1
__builtin_HEXAGON_M2_mpyud_nac_lh_s0
__builtin_HEXAGON_M2_mpyud_nac_lh_s1
__builtin_HEXAGON_M2_mpyud_nac_ll_s0
__builtin_HEXAGON_M2_mpyud_nac_ll_s1
__builtin_HEXAGON_M2_mpyui
__builtin_HEXAGON_M2_nacci
__builtin_HEXAGON_M2_naccii
__builtin_HEXAGON_M2_subacc
__builtin_HEXAGON_M2_vabsdiffh
__builtin_HEXAGON_M2_vabsdiffw
__builtin_HEXAGON_M2_vcmac_s0_sat_i
__builtin_HEXAGON_M2_vcmac_s0_sat_r
__builtin_HEXAGON_M2_vcmpy_s0_sat_i
__builtin_HEXAGON_M2_vcmpy_s0_sat_r
__builtin_HEXAGON_M2_vcmpy_s1_sat_i
__builtin_HEXAGON_M2_vcmpy_s1_sat_r
__builtin_HEXAGON_M2_vdmacs_s0
__builtin_HEXAGON_M2_vdmacs_s1
__builtin_HEXAGON_M2_vdmpyrs_s0
__builtin_HEXAGON_M2_vdmpyrs_s1
__builtin_HEXAGON_M2_vdmpys_s0
__builtin_HEXAGON_M2_vdmpys_s1
__builtin_HEXAGON_M2_vmac2
__builtin_HEXAGON_M2_vmac2es
__builtin_HEXAGON_M2_vmac2es_s0
__builtin_HEXAGON_M2_vmac2es_s1
__builtin_HEXAGON_M2_vmac2s_s0
__builtin_HEXAGON_M2_vmac2s_s1
__builtin_HEXAGON_M2_vmac2su_s0
__builtin_HEXAGON_M2_vmac2su_s1
__builtin_HEXAGON_M2_vmpy2es_s0
__builtin_HEXAGON_M2_vmpy2es_s1
__builtin_HEXAGON_M2_vmpy2s_s0
__builtin_HEXAGON_M2_vmpy2s_s0pack
__builtin_HEXAGON_M2_vmpy2s_s1
__builtin_HEXAGON_M2_vmpy2s_s1pack
__builtin_HEXAGON_M2_vmpy2su_s0
__builtin_HEXAGON_M2_vmpy2su_s1
__builtin_HEXAGON_M2_vraddh
__builtin_HEXAGON_M2_vradduh
__builtin_HEXAGON_M2_vrcmaci_s0
__builtin_HEXAGON_M2_vrcmaci_s0c
__builtin_HEXAGON_M2_vrcmacr_s0
__builtin_HEXAGON_M2_vrcmacr_s0c
__builtin_HEXAGON_M2_vrcmpyi_s0
__builtin_HEXAGON_M2_vrcmpyi_s0c
__builtin_HEXAGON_M2_vrcmpyr_s0
__builtin_HEXAGON_M2_vrcmpyr_s0c
__builtin_HEXAGON_M2_vrcmpys_acc_s1
__builtin_HEXAGON_M2_vrcmpys_s1
LLiLLii
__builtin_HEXAGON_M2_vrcmpys_s1rp
__builtin_HEXAGON_M2_vrmac_s0
__builtin_HEXAGON_M2_vrmpy_s0
__builtin_HEXAGON_M2_xor_xacc
__builtin_HEXAGON_M4_and_and
__builtin_HEXAGON_M4_and_andn
__builtin_HEXAGON_M4_and_or
__builtin_HEXAGON_M4_and_xor
__builtin_HEXAGON_M4_cmpyi_wh
__builtin_HEXAGON_M4_cmpyi_whc
__builtin_HEXAGON_M4_cmpyr_wh
__builtin_HEXAGON_M4_cmpyr_whc
__builtin_HEXAGON_M4_mac_up_s1_sat
__builtin_HEXAGON_M4_mpyri_addi
iUIiiUIi
__builtin_HEXAGON_M4_mpyri_addr
__builtin_HEXAGON_M4_mpyri_addr_u2
iiUIii
__builtin_HEXAGON_M4_mpyrr_addi
iUIiii
__builtin_HEXAGON_M4_mpyrr_addr
__builtin_HEXAGON_M4_nac_up_s1_sat
__builtin_HEXAGON_M4_or_and
__builtin_HEXAGON_M4_or_andn
__builtin_HEXAGON_M4_or_or
__builtin_HEXAGON_M4_or_xor
__builtin_HEXAGON_M4_pmpyw
__builtin_HEXAGON_M4_pmpyw_acc
__builtin_HEXAGON_M4_vpmpyh
__builtin_HEXAGON_M4_vpmpyh_acc
__builtin_HEXAGON_M4_vrmpyeh_acc_s0
__builtin_HEXAGON_M4_vrmpyeh_acc_s1
__builtin_HEXAGON_M4_vrmpyeh_s0
__builtin_HEXAGON_M4_vrmpyeh_s1
__builtin_HEXAGON_M4_vrmpyoh_acc_s0
__builtin_HEXAGON_M4_vrmpyoh_acc_s1
__builtin_HEXAGON_M4_vrmpyoh_s0
__builtin_HEXAGON_M4_vrmpyoh_s1
__builtin_HEXAGON_M4_xor_and
__builtin_HEXAGON_M4_xor_andn
__builtin_HEXAGON_M4_xor_or
__builtin_HEXAGON_M4_xor_xacc
__builtin_HEXAGON_M5_vdmacbsu
__builtin_HEXAGON_M5_vdmpybsu
__builtin_HEXAGON_M5_vmacbsu
__builtin_HEXAGON_M5_vmacbuu
__builtin_HEXAGON_M5_vmpybsu
__builtin_HEXAGON_M5_vmpybuu
__builtin_HEXAGON_M5_vrmacbsu
__builtin_HEXAGON_M5_vrmacbuu
__builtin_HEXAGON_M5_vrmpybsu
__builtin_HEXAGON_M5_vrmpybuu
__builtin_HEXAGON_S2_addasl_rrri
__builtin_HEXAGON_S2_asl_i_p
LLiLLiUIi
__builtin_HEXAGON_S2_asl_i_p_acc
LLiLLiLLiUIi
__builtin_HEXAGON_S2_asl_i_p_and
__builtin_HEXAGON_S2_asl_i_p_nac
__builtin_HEXAGON_S2_asl_i_p_or
__builtin_HEXAGON_S2_asl_i_p_xacc
__builtin_HEXAGON_S2_asl_i_r
__builtin_HEXAGON_S2_asl_i_r_acc
__builtin_HEXAGON_S2_asl_i_r_and
__builtin_HEXAGON_S2_asl_i_r_nac
__builtin_HEXAGON_S2_asl_i_r_or
__builtin_HEXAGON_S2_asl_i_r_sat
__builtin_HEXAGON_S2_asl_i_r_xacc
__builtin_HEXAGON_S2_asl_i_vh
__builtin_HEXAGON_S2_asl_i_vw
__builtin_HEXAGON_S2_asl_r_p
__builtin_HEXAGON_S2_asl_r_p_acc
__builtin_HEXAGON_S2_asl_r_p_and
__builtin_HEXAGON_S2_asl_r_p_nac
__builtin_HEXAGON_S2_asl_r_p_or
__builtin_HEXAGON_S2_asl_r_p_xor
__builtin_HEXAGON_S2_asl_r_r
__builtin_HEXAGON_S2_asl_r_r_acc
__builtin_HEXAGON_S2_asl_r_r_and
__builtin_HEXAGON_S2_asl_r_r_nac
__builtin_HEXAGON_S2_asl_r_r_or
__builtin_HEXAGON_S2_asl_r_r_sat
__builtin_HEXAGON_S2_asl_r_vh
__builtin_HEXAGON_S2_asl_r_vw
__builtin_HEXAGON_S2_asr_i_p
__builtin_HEXAGON_S2_asr_i_p_acc
__builtin_HEXAGON_S2_asr_i_p_and
__builtin_HEXAGON_S2_asr_i_p_nac
__builtin_HEXAGON_S2_asr_i_p_or
__builtin_HEXAGON_S2_asr_i_p_rnd
__builtin_HEXAGON_S2_asr_i_p_rnd_goodsyntax
__builtin_HEXAGON_S2_asr_i_r
__builtin_HEXAGON_S2_asr_i_r_acc
__builtin_HEXAGON_S2_asr_i_r_and
__builtin_HEXAGON_S2_asr_i_r_nac
__builtin_HEXAGON_S2_asr_i_r_or
__builtin_HEXAGON_S2_asr_i_r_rnd
__builtin_HEXAGON_S2_asr_i_r_rnd_goodsyntax
__builtin_HEXAGON_S2_asr_i_svw_trun
__builtin_HEXAGON_S2_asr_i_vh
__builtin_HEXAGON_S2_asr_i_vw
__builtin_HEXAGON_S2_asr_r_p
__builtin_HEXAGON_S2_asr_r_p_acc
__builtin_HEXAGON_S2_asr_r_p_and
__builtin_HEXAGON_S2_asr_r_p_nac
__builtin_HEXAGON_S2_asr_r_p_or
__builtin_HEXAGON_S2_asr_r_p_xor
__builtin_HEXAGON_S2_asr_r_r
__builtin_HEXAGON_S2_asr_r_r_acc
__builtin_HEXAGON_S2_asr_r_r_and
__builtin_HEXAGON_S2_asr_r_r_nac
__builtin_HEXAGON_S2_asr_r_r_or
__builtin_HEXAGON_S2_asr_r_r_sat
__builtin_HEXAGON_S2_asr_r_svw_trun
__builtin_HEXAGON_S2_asr_r_vh
__builtin_HEXAGON_S2_asr_r_vw
__builtin_HEXAGON_S2_brev
__builtin_HEXAGON_S2_brevp
__builtin_HEXAGON_S2_cl0
__builtin_HEXAGON_S2_cl0p
__builtin_HEXAGON_S2_cl1
__builtin_HEXAGON_S2_cl1p
__builtin_HEXAGON_S2_clb
__builtin_HEXAGON_S2_clbnorm
__builtin_HEXAGON_S2_clbp
__builtin_HEXAGON_S2_clrbit_i
__builtin_HEXAGON_S2_clrbit_r
__builtin_HEXAGON_S2_ct0
__builtin_HEXAGON_S2_ct0p
__builtin_HEXAGON_S2_ct1
__builtin_HEXAGON_S2_ct1p
__builtin_HEXAGON_S2_deinterleave
__builtin_HEXAGON_S2_extractu
iiUIiUIi
__builtin_HEXAGON_S2_extractu_rp
__builtin_HEXAGON_S2_extractup
LLiLLiUIiUIi
__builtin_HEXAGON_S2_extractup_rp
__builtin_HEXAGON_S2_insert
iiiUIiUIi
__builtin_HEXAGON_S2_insert_rp
iiiLLi
__builtin_HEXAGON_S2_insertp
LLiLLiLLiUIiUIi
__builtin_HEXAGON_S2_insertp_rp
__builtin_HEXAGON_S2_interleave
__builtin_HEXAGON_S2_lfsp
__builtin_HEXAGON_S2_lsl_r_p
__builtin_HEXAGON_S2_lsl_r_p_acc
__builtin_HEXAGON_S2_lsl_r_p_and
__builtin_HEXAGON_S2_lsl_r_p_nac
__builtin_HEXAGON_S2_lsl_r_p_or
__builtin_HEXAGON_S2_lsl_r_p_xor
__builtin_HEXAGON_S2_lsl_r_r
__builtin_HEXAGON_S2_lsl_r_r_acc
__builtin_HEXAGON_S2_lsl_r_r_and
__builtin_HEXAGON_S2_lsl_r_r_nac
__builtin_HEXAGON_S2_lsl_r_r_or
__builtin_HEXAGON_S2_lsl_r_vh
__builtin_HEXAGON_S2_lsl_r_vw
__builtin_HEXAGON_S2_lsr_i_p
__builtin_HEXAGON_S2_lsr_i_p_acc
__builtin_HEXAGON_S2_lsr_i_p_and
__builtin_HEXAGON_S2_lsr_i_p_nac
__builtin_HEXAGON_S2_lsr_i_p_or
__builtin_HEXAGON_S2_lsr_i_p_xacc
__builtin_HEXAGON_S2_lsr_i_r
__builtin_HEXAGON_S2_lsr_i_r_acc
__builtin_HEXAGON_S2_lsr_i_r_and
__builtin_HEXAGON_S2_lsr_i_r_nac
__builtin_HEXAGON_S2_lsr_i_r_or
__builtin_HEXAGON_S2_lsr_i_r_xacc
__builtin_HEXAGON_S2_lsr_i_vh
__builtin_HEXAGON_S2_lsr_i_vw
__builtin_HEXAGON_S2_lsr_r_p
__builtin_HEXAGON_S2_lsr_r_p_acc
__builtin_HEXAGON_S2_lsr_r_p_and
__builtin_HEXAGON_S2_lsr_r_p_nac
__builtin_HEXAGON_S2_lsr_r_p_or
__builtin_HEXAGON_S2_lsr_r_p_xor
__builtin_HEXAGON_S2_lsr_r_r
__builtin_HEXAGON_S2_lsr_r_r_acc
__builtin_HEXAGON_S2_lsr_r_r_and
__builtin_HEXAGON_S2_lsr_r_r_nac
__builtin_HEXAGON_S2_lsr_r_r_or
__builtin_HEXAGON_S2_lsr_r_vh
__builtin_HEXAGON_S2_lsr_r_vw
__builtin_HEXAGON_S2_packhl
__builtin_HEXAGON_S2_parityp
__builtin_HEXAGON_S2_setbit_i
__builtin_HEXAGON_S2_setbit_r
__builtin_HEXAGON_S2_shuffeb
__builtin_HEXAGON_S2_shuffeh
__builtin_HEXAGON_S2_shuffob
__builtin_HEXAGON_S2_shuffoh
__builtin_HEXAGON_S2_svsathb
__builtin_HEXAGON_S2_svsathub
__builtin_HEXAGON_S2_tableidxb_goodsyntax
__builtin_HEXAGON_S2_tableidxd_goodsyntax
__builtin_HEXAGON_S2_tableidxh_goodsyntax
__builtin_HEXAGON_S2_tableidxw_goodsyntax
__builtin_HEXAGON_S2_togglebit_i
__builtin_HEXAGON_S2_togglebit_r
__builtin_HEXAGON_S2_tstbit_i
__builtin_HEXAGON_S2_tstbit_r
__builtin_HEXAGON_S2_valignib
__builtin_HEXAGON_S2_valignrb
__builtin_HEXAGON_S2_vcnegh
__builtin_HEXAGON_S2_vcrotate
__builtin_HEXAGON_S2_vrcnegh
__builtin_HEXAGON_S2_vrndpackwh
__builtin_HEXAGON_S2_vrndpackwhs
__builtin_HEXAGON_S2_vsathb
__builtin_HEXAGON_S2_vsathb_nopack
__builtin_HEXAGON_S2_vsathub
__builtin_HEXAGON_S2_vsathub_nopack
__builtin_HEXAGON_S2_vsatwh
__builtin_HEXAGON_S2_vsatwh_nopack
__builtin_HEXAGON_S2_vsatwuh
__builtin_HEXAGON_S2_vsatwuh_nopack
__builtin_HEXAGON_S2_vsplatrb
__builtin_HEXAGON_S2_vsplatrh
__builtin_HEXAGON_S2_vspliceib
__builtin_HEXAGON_S2_vsplicerb
__builtin_HEXAGON_S2_vsxtbh
__builtin_HEXAGON_S2_vsxthw
__builtin_HEXAGON_S2_vtrunehb
__builtin_HEXAGON_S2_vtrunewh
__builtin_HEXAGON_S2_vtrunohb
__builtin_HEXAGON_S2_vtrunowh
__builtin_HEXAGON_S2_vzxtbh
__builtin_HEXAGON_S2_vzxthw
__builtin_HEXAGON_S4_addaddi
__builtin_HEXAGON_S4_addi_asl_ri
__builtin_HEXAGON_S4_addi_lsr_ri
__builtin_HEXAGON_S4_andi_asl_ri
__builtin_HEXAGON_S4_andi_lsr_ri
__builtin_HEXAGON_S4_clbaddi
__builtin_HEXAGON_S4_clbpaddi
__builtin_HEXAGON_S4_clbpnorm
__builtin_HEXAGON_S4_extract
__builtin_HEXAGON_S4_extract_rp
__builtin_HEXAGON_S4_extractp
__builtin_HEXAGON_S4_extractp_rp
__builtin_HEXAGON_S4_lsli
__builtin_HEXAGON_S4_ntstbit_i
__builtin_HEXAGON_S4_ntstbit_r
__builtin_HEXAGON_S4_or_andi
__builtin_HEXAGON_S4_or_andix
__builtin_HEXAGON_S4_or_ori
__builtin_HEXAGON_S4_ori_asl_ri
__builtin_HEXAGON_S4_ori_lsr_ri
__builtin_HEXAGON_S4_parity
__builtin_HEXAGON_S4_subaddi
__builtin_HEXAGON_S4_subi_asl_ri
__builtin_HEXAGON_S4_subi_lsr_ri
__builtin_HEXAGON_S4_vrcrotate
LLiLLiiUIi
__builtin_HEXAGON_S4_vrcrotate_acc
LLiLLiLLiiUIi
__builtin_HEXAGON_S4_vxaddsubh
__builtin_HEXAGON_S4_vxaddsubhr
__builtin_HEXAGON_S4_vxaddsubw
__builtin_HEXAGON_S4_vxsubaddh
__builtin_HEXAGON_S4_vxsubaddhr
__builtin_HEXAGON_S4_vxsubaddw
__builtin_HEXAGON_S5_asrhub_rnd_sat_goodsyntax
__builtin_HEXAGON_S5_asrhub_sat
__builtin_HEXAGON_S5_popcountp
__builtin_HEXAGON_S5_vasrhrnd_goodsyntax
__builtin_HEXAGON_Y2_dccleana
__builtin_HEXAGON_Y2_dccleaninva
__builtin_HEXAGON_Y2_dcfetch
__builtin_HEXAGON_Y2_dcinva
__builtin_HEXAGON_Y2_dczeroa
__builtin_HEXAGON_Y4_l2fetch
vv*i
__builtin_HEXAGON_Y5_l2fetch
vv*LLi
__builtin_HEXAGON_S6_rol_i_p
v60|v62|v65|v66|v67|v68
__builtin_HEXAGON_S6_rol_i_p_acc
__builtin_HEXAGON_S6_rol_i_p_and
__builtin_HEXAGON_S6_rol_i_p_nac
__builtin_HEXAGON_S6_rol_i_p_or
__builtin_HEXAGON_S6_rol_i_p_xacc
__builtin_HEXAGON_S6_rol_i_r
__builtin_HEXAGON_S6_rol_i_r_acc
__builtin_HEXAGON_S6_rol_i_r_and
__builtin_HEXAGON_S6_rol_i_r_nac
__builtin_HEXAGON_S6_rol_i_r_or
__builtin_HEXAGON_S6_rol_i_r_xacc
__builtin_HEXAGON_M6_vabsdiffb
__builtin_HEXAGON_M6_vabsdiffub
__builtin_HEXAGON_S6_vsplatrbp
__builtin_HEXAGON_S6_vtrunehb_ppp
__builtin_HEXAGON_S6_vtrunohb_ppp
__builtin_HEXAGON_A6_vcmpbeq_notany
v65|v66|v67|v68
__builtin_HEXAGON_F2_dfadd
v66|v67|v68
__builtin_HEXAGON_F2_dfsub
__builtin_HEXAGON_M2_mnaci
__builtin_HEXAGON_S2_mask
iUIiUIi
__builtin_HEXAGON_A7_clip
__builtin_HEXAGON_A7_croundd_ri
__builtin_HEXAGON_A7_croundd_rr
__builtin_HEXAGON_A7_vclip
__builtin_HEXAGON_F2_dfmax
v67|v68
__builtin_HEXAGON_F2_dfmin
__builtin_HEXAGON_F2_dfmpyfix
__builtin_HEXAGON_F2_dfmpyhh
__builtin_HEXAGON_F2_dfmpylh
__builtin_HEXAGON_F2_dfmpyll
__builtin_HEXAGON_M7_dcmpyiw
__builtin_HEXAGON_M7_dcmpyiw_acc
__builtin_HEXAGON_M7_dcmpyiwc
__builtin_HEXAGON_M7_dcmpyiwc_acc
__builtin_HEXAGON_M7_dcmpyrw
__builtin_HEXAGON_M7_dcmpyrw_acc
__builtin_HEXAGON_M7_dcmpyrwc
__builtin_HEXAGON_M7_dcmpyrwc_acc
__builtin_HEXAGON_M7_vdmpy
__builtin_HEXAGON_M7_vdmpy_acc
__builtin_HEXAGON_M7_wcmpyiw
__builtin_HEXAGON_M7_wcmpyiw_rnd
__builtin_HEXAGON_M7_wcmpyiwc
__builtin_HEXAGON_M7_wcmpyiwc_rnd
__builtin_HEXAGON_M7_wcmpyrw
__builtin_HEXAGON_M7_wcmpyrw_rnd
__builtin_HEXAGON_M7_wcmpyrwc
__builtin_HEXAGON_M7_wcmpyrwc_rnd
__builtin_HEXAGON_Y6_dmlink
__builtin_HEXAGON_Y6_dmpause
__builtin_HEXAGON_Y6_dmpoll
__builtin_HEXAGON_Y6_dmresume
__builtin_HEXAGON_Y6_dmstart
__builtin_HEXAGON_Y6_dmwait
__builtin_HEXAGON_V6_extractw
iV16ii
__builtin_HEXAGON_V6_extractw_128B
iV32ii
__builtin_HEXAGON_V6_hi
V16iV32i
__builtin_HEXAGON_V6_hi_128B
V32iV64i
__builtin_HEXAGON_V6_lo
__builtin_HEXAGON_V6_lo_128B
__builtin_HEXAGON_V6_lvsplatw
V16ii
__builtin_HEXAGON_V6_lvsplatw_128B
V32ii
__builtin_HEXAGON_V6_pred_and
V64bV64bV64b
__builtin_HEXAGON_V6_pred_and_128B
V128bV128bV128b
__builtin_HEXAGON_V6_pred_and_n
__builtin_HEXAGON_V6_pred_and_n_128B
__builtin_HEXAGON_V6_pred_not
V64bV64b
__builtin_HEXAGON_V6_pred_not_128B
V128bV128b
__builtin_HEXAGON_V6_pred_or
__builtin_HEXAGON_V6_pred_or_128B
__builtin_HEXAGON_V6_pred_or_n
__builtin_HEXAGON_V6_pred_or_n_128B
__builtin_HEXAGON_V6_pred_scalar2
V64bi
__builtin_HEXAGON_V6_pred_scalar2_128B
V128bi
__builtin_HEXAGON_V6_pred_xor
__builtin_HEXAGON_V6_pred_xor_128B
__builtin_HEXAGON_V6_vS32b_nqpred_ai
__builtin_HEXAGON_V6_vS32b_nqpred_ai_128B
__builtin_HEXAGON_V6_vS32b_nt_nqpred_ai
__builtin_HEXAGON_V6_vS32b_nt_nqpred_ai_128B
__builtin_HEXAGON_V6_vS32b_nt_qpred_ai
__builtin_HEXAGON_V6_vS32b_nt_qpred_ai_128B
__builtin_HEXAGON_V6_vS32b_qpred_ai
__builtin_HEXAGON_V6_vS32b_qpred_ai_128B
__builtin_HEXAGON_V6_vabsdiffh
V16iV16iV16i
__builtin_HEXAGON_V6_vabsdiffh_128B
V32iV32iV32i
__builtin_HEXAGON_V6_vabsdiffub
__builtin_HEXAGON_V6_vabsdiffub_128B
__builtin_HEXAGON_V6_vabsdiffuh
__builtin_HEXAGON_V6_vabsdiffuh_128B
__builtin_HEXAGON_V6_vabsdiffw
__builtin_HEXAGON_V6_vabsdiffw_128B
__builtin_HEXAGON_V6_vabsh
V16iV16i
__builtin_HEXAGON_V6_vabsh_128B
V32iV32i
__builtin_HEXAGON_V6_vabsh_sat
__builtin_HEXAGON_V6_vabsh_sat_128B
__builtin_HEXAGON_V6_vabsw
__builtin_HEXAGON_V6_vabsw_128B
__builtin_HEXAGON_V6_vabsw_sat
__builtin_HEXAGON_V6_vabsw_sat_128B
__builtin_HEXAGON_V6_vaddb
__builtin_HEXAGON_V6_vaddb_128B
__builtin_HEXAGON_V6_vaddb_dv
__builtin_HEXAGON_V6_vaddb_dv_128B
V64iV64iV64i
__builtin_HEXAGON_V6_vaddbnq
V16iV64bV16iV16i
__builtin_HEXAGON_V6_vaddbnq_128B
V32iV128bV32iV32i
__builtin_HEXAGON_V6_vaddbq
__builtin_HEXAGON_V6_vaddbq_128B
__builtin_HEXAGON_V6_vaddh
__builtin_HEXAGON_V6_vaddh_128B
__builtin_HEXAGON_V6_vaddh_dv
__builtin_HEXAGON_V6_vaddh_dv_128B
__builtin_HEXAGON_V6_vaddhnq
__builtin_HEXAGON_V6_vaddhnq_128B
__builtin_HEXAGON_V6_vaddhq
__builtin_HEXAGON_V6_vaddhq_128B
__builtin_HEXAGON_V6_vaddhsat
__builtin_HEXAGON_V6_vaddhsat_128B
__builtin_HEXAGON_V6_vaddhsat_dv
__builtin_HEXAGON_V6_vaddhsat_dv_128B
__builtin_HEXAGON_V6_vaddhw
V32iV16iV16i
__builtin_HEXAGON_V6_vaddhw_128B
V64iV32iV32i
__builtin_HEXAGON_V6_vaddubh
__builtin_HEXAGON_V6_vaddubh_128B
__builtin_HEXAGON_V6_vaddubsat
__builtin_HEXAGON_V6_vaddubsat_128B
__builtin_HEXAGON_V6_vaddubsat_dv
__builtin_HEXAGON_V6_vaddubsat_dv_128B
__builtin_HEXAGON_V6_vadduhsat
__builtin_HEXAGON_V6_vadduhsat_128B
__builtin_HEXAGON_V6_vadduhsat_dv
__builtin_HEXAGON_V6_vadduhsat_dv_128B
__builtin_HEXAGON_V6_vadduhw
__builtin_HEXAGON_V6_vadduhw_128B
__builtin_HEXAGON_V6_vaddw
__builtin_HEXAGON_V6_vaddw_128B
__builtin_HEXAGON_V6_vaddw_dv
__builtin_HEXAGON_V6_vaddw_dv_128B
__builtin_HEXAGON_V6_vaddwnq
__builtin_HEXAGON_V6_vaddwnq_128B
__builtin_HEXAGON_V6_vaddwq
__builtin_HEXAGON_V6_vaddwq_128B
__builtin_HEXAGON_V6_vaddwsat
__builtin_HEXAGON_V6_vaddwsat_128B
__builtin_HEXAGON_V6_vaddwsat_dv
__builtin_HEXAGON_V6_vaddwsat_dv_128B
__builtin_HEXAGON_V6_valignb
V16iV16iV16ii
__builtin_HEXAGON_V6_valignb_128B
V32iV32iV32ii
__builtin_HEXAGON_V6_valignbi
V16iV16iV16iUIi
__builtin_HEXAGON_V6_valignbi_128B
V32iV32iV32iUIi
__builtin_HEXAGON_V6_vand
__builtin_HEXAGON_V6_vand_128B
__builtin_HEXAGON_V6_vandqrt
V16iV64bi
__builtin_HEXAGON_V6_vandqrt_128B
V32iV128bi
__builtin_HEXAGON_V6_vandqrt_acc
V16iV16iV64bi
__builtin_HEXAGON_V6_vandqrt_acc_128B
V32iV32iV128bi
__builtin_HEXAGON_V6_vandvrt
V64bV16ii
__builtin_HEXAGON_V6_vandvrt_128B
V128bV32ii
__builtin_HEXAGON_V6_vandvrt_acc
V64bV64bV16ii
__builtin_HEXAGON_V6_vandvrt_acc_128B
V128bV128bV32ii
__builtin_HEXAGON_V6_vaslh
V16iV16ii
__builtin_HEXAGON_V6_vaslh_128B
V32iV32ii
__builtin_HEXAGON_V6_vaslhv
__builtin_HEXAGON_V6_vaslhv_128B
__builtin_HEXAGON_V6_vaslw
__builtin_HEXAGON_V6_vaslw_128B
__builtin_HEXAGON_V6_vaslw_acc
__builtin_HEXAGON_V6_vaslw_acc_128B
__builtin_HEXAGON_V6_vaslwv
__builtin_HEXAGON_V6_vaslwv_128B
__builtin_HEXAGON_V6_vasrh
__builtin_HEXAGON_V6_vasrh_128B
__builtin_HEXAGON_V6_vasrhbrndsat
__builtin_HEXAGON_V6_vasrhbrndsat_128B
__builtin_HEXAGON_V6_vasrhubrndsat
__builtin_HEXAGON_V6_vasrhubrndsat_128B
__builtin_HEXAGON_V6_vasrhubsat
__builtin_HEXAGON_V6_vasrhubsat_128B
__builtin_HEXAGON_V6_vasrhv
__builtin_HEXAGON_V6_vasrhv_128B
__builtin_HEXAGON_V6_vasrw
__builtin_HEXAGON_V6_vasrw_128B
__builtin_HEXAGON_V6_vasrw_acc
__builtin_HEXAGON_V6_vasrw_acc_128B
__builtin_HEXAGON_V6_vasrwh
__builtin_HEXAGON_V6_vasrwh_128B
__builtin_HEXAGON_V6_vasrwhrndsat
__builtin_HEXAGON_V6_vasrwhrndsat_128B
__builtin_HEXAGON_V6_vasrwhsat
__builtin_HEXAGON_V6_vasrwhsat_128B
__builtin_HEXAGON_V6_vasrwuhsat
__builtin_HEXAGON_V6_vasrwuhsat_128B
__builtin_HEXAGON_V6_vasrwv
__builtin_HEXAGON_V6_vasrwv_128B
__builtin_HEXAGON_V6_vassign
__builtin_HEXAGON_V6_vassign_128B
__builtin_HEXAGON_V6_vassignp
__builtin_HEXAGON_V6_vassignp_128B
V64iV64i
__builtin_HEXAGON_V6_vavgh
__builtin_HEXAGON_V6_vavgh_128B
__builtin_HEXAGON_V6_vavghrnd
__builtin_HEXAGON_V6_vavghrnd_128B
__builtin_HEXAGON_V6_vavgub
__builtin_HEXAGON_V6_vavgub_128B
__builtin_HEXAGON_V6_vavgubrnd
__builtin_HEXAGON_V6_vavgubrnd_128B
__builtin_HEXAGON_V6_vavguh
__builtin_HEXAGON_V6_vavguh_128B
__builtin_HEXAGON_V6_vavguhrnd
__builtin_HEXAGON_V6_vavguhrnd_128B
__builtin_HEXAGON_V6_vavgw
__builtin_HEXAGON_V6_vavgw_128B
__builtin_HEXAGON_V6_vavgwrnd
__builtin_HEXAGON_V6_vavgwrnd_128B
__builtin_HEXAGON_V6_vcl0h
__builtin_HEXAGON_V6_vcl0h_128B
__builtin_HEXAGON_V6_vcl0w
__builtin_HEXAGON_V6_vcl0w_128B
__builtin_HEXAGON_V6_vcombine
__builtin_HEXAGON_V6_vcombine_128B
__builtin_HEXAGON_V6_vd0
V16i
__builtin_HEXAGON_V6_vd0_128B
V32i
__builtin_HEXAGON_V6_vdealb
__builtin_HEXAGON_V6_vdealb_128B
__builtin_HEXAGON_V6_vdealb4w
__builtin_HEXAGON_V6_vdealb4w_128B
__builtin_HEXAGON_V6_vdealh
__builtin_HEXAGON_V6_vdealh_128B
__builtin_HEXAGON_V6_vdealvdd
V32iV16iV16ii
__builtin_HEXAGON_V6_vdealvdd_128B
V64iV32iV32ii
__builtin_HEXAGON_V6_vdelta
__builtin_HEXAGON_V6_vdelta_128B
__builtin_HEXAGON_V6_vdmpybus
__builtin_HEXAGON_V6_vdmpybus_128B
__builtin_HEXAGON_V6_vdmpybus_acc
__builtin_HEXAGON_V6_vdmpybus_acc_128B
__builtin_HEXAGON_V6_vdmpybus_dv
__builtin_HEXAGON_V6_vdmpybus_dv_128B
V64iV64ii
__builtin_HEXAGON_V6_vdmpybus_dv_acc
__builtin_HEXAGON_V6_vdmpybus_dv_acc_128B
V64iV64iV64ii
__builtin_HEXAGON_V6_vdmpyhb
__builtin_HEXAGON_V6_vdmpyhb_128B
__builtin_HEXAGON_V6_vdmpyhb_acc
__builtin_HEXAGON_V6_vdmpyhb_acc_128B
__builtin_HEXAGON_V6_vdmpyhb_dv
__builtin_HEXAGON_V6_vdmpyhb_dv_128B
__builtin_HEXAGON_V6_vdmpyhb_dv_acc
__builtin_HEXAGON_V6_vdmpyhb_dv_acc_128B
__builtin_HEXAGON_V6_vdmpyhisat
V16iV32ii
__builtin_HEXAGON_V6_vdmpyhisat_128B
V32iV64ii
__builtin_HEXAGON_V6_vdmpyhisat_acc
V16iV16iV32ii
__builtin_HEXAGON_V6_vdmpyhisat_acc_128B
V32iV32iV64ii
__builtin_HEXAGON_V6_vdmpyhsat
__builtin_HEXAGON_V6_vdmpyhsat_128B
__builtin_HEXAGON_V6_vdmpyhsat_acc
__builtin_HEXAGON_V6_vdmpyhsat_acc_128B
__builtin_HEXAGON_V6_vdmpyhsuisat
__builtin_HEXAGON_V6_vdmpyhsuisat_128B
__builtin_HEXAGON_V6_vdmpyhsuisat_acc
__builtin_HEXAGON_V6_vdmpyhsuisat_acc_128B
__builtin_HEXAGON_V6_vdmpyhsusat
__builtin_HEXAGON_V6_vdmpyhsusat_128B
__builtin_HEXAGON_V6_vdmpyhsusat_acc
__builtin_HEXAGON_V6_vdmpyhsusat_acc_128B
__builtin_HEXAGON_V6_vdmpyhvsat
__builtin_HEXAGON_V6_vdmpyhvsat_128B
__builtin_HEXAGON_V6_vdmpyhvsat_acc
V16iV16iV16iV16i
__builtin_HEXAGON_V6_vdmpyhvsat_acc_128B
V32iV32iV32iV32i
__builtin_HEXAGON_V6_vdsaduh
__builtin_HEXAGON_V6_vdsaduh_128B
__builtin_HEXAGON_V6_vdsaduh_acc
__builtin_HEXAGON_V6_vdsaduh_acc_128B
__builtin_HEXAGON_V6_veqb
V64bV16iV16i
__builtin_HEXAGON_V6_veqb_128B
V128bV32iV32i
__builtin_HEXAGON_V6_veqb_and
V64bV64bV16iV16i
__builtin_HEXAGON_V6_veqb_and_128B
V128bV128bV32iV32i
__builtin_HEXAGON_V6_veqb_or
__builtin_HEXAGON_V6_veqb_or_128B
__builtin_HEXAGON_V6_veqb_xor
__builtin_HEXAGON_V6_veqb_xor_128B
__builtin_HEXAGON_V6_veqh
__builtin_HEXAGON_V6_veqh_128B
__builtin_HEXAGON_V6_veqh_and
__builtin_HEXAGON_V6_veqh_and_128B
__builtin_HEXAGON_V6_veqh_or
__builtin_HEXAGON_V6_veqh_or_128B
__builtin_HEXAGON_V6_veqh_xor
__builtin_HEXAGON_V6_veqh_xor_128B
__builtin_HEXAGON_V6_veqw
__builtin_HEXAGON_V6_veqw_128B
__builtin_HEXAGON_V6_veqw_and
__builtin_HEXAGON_V6_veqw_and_128B
__builtin_HEXAGON_V6_veqw_or
__builtin_HEXAGON_V6_veqw_or_128B
__builtin_HEXAGON_V6_veqw_xor
__builtin_HEXAGON_V6_veqw_xor_128B
__builtin_HEXAGON_V6_vgtb
__builtin_HEXAGON_V6_vgtb_128B
__builtin_HEXAGON_V6_vgtb_and
__builtin_HEXAGON_V6_vgtb_and_128B
__builtin_HEXAGON_V6_vgtb_or
__builtin_HEXAGON_V6_vgtb_or_128B
__builtin_HEXAGON_V6_vgtb_xor
__builtin_HEXAGON_V6_vgtb_xor_128B
__builtin_HEXAGON_V6_vgth
__builtin_HEXAGON_V6_vgth_128B
__builtin_HEXAGON_V6_vgth_and
__builtin_HEXAGON_V6_vgth_and_128B
__builtin_HEXAGON_V6_vgth_or
__builtin_HEXAGON_V6_vgth_or_128B
__builtin_HEXAGON_V6_vgth_xor
__builtin_HEXAGON_V6_vgth_xor_128B
__builtin_HEXAGON_V6_vgtub
__builtin_HEXAGON_V6_vgtub_128B
__builtin_HEXAGON_V6_vgtub_and
__builtin_HEXAGON_V6_vgtub_and_128B
__builtin_HEXAGON_V6_vgtub_or
__builtin_HEXAGON_V6_vgtub_or_128B
__builtin_HEXAGON_V6_vgtub_xor
__builtin_HEXAGON_V6_vgtub_xor_128B
__builtin_HEXAGON_V6_vgtuh
__builtin_HEXAGON_V6_vgtuh_128B
__builtin_HEXAGON_V6_vgtuh_and
__builtin_HEXAGON_V6_vgtuh_and_128B
__builtin_HEXAGON_V6_vgtuh_or
__builtin_HEXAGON_V6_vgtuh_or_128B
__builtin_HEXAGON_V6_vgtuh_xor
__builtin_HEXAGON_V6_vgtuh_xor_128B
__builtin_HEXAGON_V6_vgtuw
__builtin_HEXAGON_V6_vgtuw_128B
__builtin_HEXAGON_V6_vgtuw_and
__builtin_HEXAGON_V6_vgtuw_and_128B
__builtin_HEXAGON_V6_vgtuw_or
__builtin_HEXAGON_V6_vgtuw_or_128B
__builtin_HEXAGON_V6_vgtuw_xor
__builtin_HEXAGON_V6_vgtuw_xor_128B
__builtin_HEXAGON_V6_vgtw
__builtin_HEXAGON_V6_vgtw_128B
__builtin_HEXAGON_V6_vgtw_and
__builtin_HEXAGON_V6_vgtw_and_128B
__builtin_HEXAGON_V6_vgtw_or
__builtin_HEXAGON_V6_vgtw_or_128B
__builtin_HEXAGON_V6_vgtw_xor
__builtin_HEXAGON_V6_vgtw_xor_128B
__builtin_HEXAGON_V6_vinsertwr
__builtin_HEXAGON_V6_vinsertwr_128B
__builtin_HEXAGON_V6_vlalignb
__builtin_HEXAGON_V6_vlalignb_128B
__builtin_HEXAGON_V6_vlalignbi
__builtin_HEXAGON_V6_vlalignbi_128B
__builtin_HEXAGON_V6_vlsrh
__builtin_HEXAGON_V6_vlsrh_128B
__builtin_HEXAGON_V6_vlsrhv
__builtin_HEXAGON_V6_vlsrhv_128B
__builtin_HEXAGON_V6_vlsrw
__builtin_HEXAGON_V6_vlsrw_128B
__builtin_HEXAGON_V6_vlsrwv
__builtin_HEXAGON_V6_vlsrwv_128B
__builtin_HEXAGON_V6_vlutvvb
__builtin_HEXAGON_V6_vlutvvb_128B
__builtin_HEXAGON_V6_vlutvvb_oracc
V16iV16iV16iV16ii
__builtin_HEXAGON_V6_vlutvvb_oracc_128B
V32iV32iV32iV32ii
__builtin_HEXAGON_V6_vlutvwh
__builtin_HEXAGON_V6_vlutvwh_128B
__builtin_HEXAGON_V6_vlutvwh_oracc
V32iV32iV16iV16ii
__builtin_HEXAGON_V6_vlutvwh_oracc_128B
V64iV64iV32iV32ii
__builtin_HEXAGON_V6_vmaxh
__builtin_HEXAGON_V6_vmaxh_128B
__builtin_HEXAGON_V6_vmaxub
__builtin_HEXAGON_V6_vmaxub_128B
__builtin_HEXAGON_V6_vmaxuh
__builtin_HEXAGON_V6_vmaxuh_128B
__builtin_HEXAGON_V6_vmaxw
__builtin_HEXAGON_V6_vmaxw_128B
__builtin_HEXAGON_V6_vminh
__builtin_HEXAGON_V6_vminh_128B
__builtin_HEXAGON_V6_vminub
__builtin_HEXAGON_V6_vminub_128B
__builtin_HEXAGON_V6_vminuh
__builtin_HEXAGON_V6_vminuh_128B
__builtin_HEXAGON_V6_vminw
__builtin_HEXAGON_V6_vminw_128B
__builtin_HEXAGON_V6_vmpabus
__builtin_HEXAGON_V6_vmpabus_128B
__builtin_HEXAGON_V6_vmpabus_acc
__builtin_HEXAGON_V6_vmpabus_acc_128B
__builtin_HEXAGON_V6_vmpabusv
__builtin_HEXAGON_V6_vmpabusv_128B
__builtin_HEXAGON_V6_vmpabuuv
__builtin_HEXAGON_V6_vmpabuuv_128B
__builtin_HEXAGON_V6_vmpahb
__builtin_HEXAGON_V6_vmpahb_128B
__builtin_HEXAGON_V6_vmpahb_acc
__builtin_HEXAGON_V6_vmpahb_acc_128B
__builtin_HEXAGON_V6_vmpybus
V32iV16ii
__builtin_HEXAGON_V6_vmpybus_128B
V64iV32ii
__builtin_HEXAGON_V6_vmpybus_acc
V32iV32iV16ii
__builtin_HEXAGON_V6_vmpybus_acc_128B
V64iV64iV32ii
__builtin_HEXAGON_V6_vmpybusv
__builtin_HEXAGON_V6_vmpybusv_128B
__builtin_HEXAGON_V6_vmpybusv_acc
V32iV32iV16iV16i
__builtin_HEXAGON_V6_vmpybusv_acc_128B
V64iV64iV32iV32i
__builtin_HEXAGON_V6_vmpybv
__builtin_HEXAGON_V6_vmpybv_128B
__builtin_HEXAGON_V6_vmpybv_acc
__builtin_HEXAGON_V6_vmpybv_acc_128B
__builtin_HEXAGON_V6_vmpyewuh
__builtin_HEXAGON_V6_vmpyewuh_128B
__builtin_HEXAGON_V6_vmpyh
__builtin_HEXAGON_V6_vmpyh_128B
__builtin_HEXAGON_V6_vmpyhsat_acc
__builtin_HEXAGON_V6_vmpyhsat_acc_128B
__builtin_HEXAGON_V6_vmpyhsrs
__builtin_HEXAGON_V6_vmpyhsrs_128B
__builtin_HEXAGON_V6_vmpyhss
__builtin_HEXAGON_V6_vmpyhss_128B
__builtin_HEXAGON_V6_vmpyhus
__builtin_HEXAGON_V6_vmpyhus_128B
__builtin_HEXAGON_V6_vmpyhus_acc
__builtin_HEXAGON_V6_vmpyhus_acc_128B
__builtin_HEXAGON_V6_vmpyhv
__builtin_HEXAGON_V6_vmpyhv_128B
__builtin_HEXAGON_V6_vmpyhv_acc
__builtin_HEXAGON_V6_vmpyhv_acc_128B
__builtin_HEXAGON_V6_vmpyhvsrs
__builtin_HEXAGON_V6_vmpyhvsrs_128B
__builtin_HEXAGON_V6_vmpyieoh
__builtin_HEXAGON_V6_vmpyieoh_128B
__builtin_HEXAGON_V6_vmpyiewh_acc
__builtin_HEXAGON_V6_vmpyiewh_acc_128B
__builtin_HEXAGON_V6_vmpyiewuh
__builtin_HEXAGON_V6_vmpyiewuh_128B
__builtin_HEXAGON_V6_vmpyiewuh_acc
__builtin_HEXAGON_V6_vmpyiewuh_acc_128B
__builtin_HEXAGON_V6_vmpyih
__builtin_HEXAGON_V6_vmpyih_128B
__builtin_HEXAGON_V6_vmpyih_acc
__builtin_HEXAGON_V6_vmpyih_acc_128B
__builtin_HEXAGON_V6_vmpyihb
__builtin_HEXAGON_V6_vmpyihb_128B
__builtin_HEXAGON_V6_vmpyihb_acc
__builtin_HEXAGON_V6_vmpyihb_acc_128B
__builtin_HEXAGON_V6_vmpyiowh
__builtin_HEXAGON_V6_vmpyiowh_128B
__builtin_HEXAGON_V6_vmpyiwb
__builtin_HEXAGON_V6_vmpyiwb_128B
__builtin_HEXAGON_V6_vmpyiwb_acc
__builtin_HEXAGON_V6_vmpyiwb_acc_128B
__builtin_HEXAGON_V6_vmpyiwh
__builtin_HEXAGON_V6_vmpyiwh_128B
__builtin_HEXAGON_V6_vmpyiwh_acc
__builtin_HEXAGON_V6_vmpyiwh_acc_128B
__builtin_HEXAGON_V6_vmpyowh
__builtin_HEXAGON_V6_vmpyowh_128B
__builtin_HEXAGON_V6_vmpyowh_rnd
__builtin_HEXAGON_V6_vmpyowh_rnd_128B
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc_128B
__builtin_HEXAGON_V6_vmpyowh_sacc
__builtin_HEXAGON_V6_vmpyowh_sacc_128B
__builtin_HEXAGON_V6_vmpyub
__builtin_HEXAGON_V6_vmpyub_128B
__builtin_HEXAGON_V6_vmpyub_acc
__builtin_HEXAGON_V6_vmpyub_acc_128B
__builtin_HEXAGON_V6_vmpyubv
__builtin_HEXAGON_V6_vmpyubv_128B
__builtin_HEXAGON_V6_vmpyubv_acc
__builtin_HEXAGON_V6_vmpyubv_acc_128B
__builtin_HEXAGON_V6_vmpyuh
__builtin_HEXAGON_V6_vmpyuh_128B
__builtin_HEXAGON_V6_vmpyuh_acc
__builtin_HEXAGON_V6_vmpyuh_acc_128B
__builtin_HEXAGON_V6_vmpyuhv
__builtin_HEXAGON_V6_vmpyuhv_128B
__builtin_HEXAGON_V6_vmpyuhv_acc
__builtin_HEXAGON_V6_vmpyuhv_acc_128B
__builtin_HEXAGON_V6_vmux
__builtin_HEXAGON_V6_vmux_128B
__builtin_HEXAGON_V6_vnavgh
__builtin_HEXAGON_V6_vnavgh_128B
__builtin_HEXAGON_V6_vnavgub
__builtin_HEXAGON_V6_vnavgub_128B
__builtin_HEXAGON_V6_vnavgw
__builtin_HEXAGON_V6_vnavgw_128B
__builtin_HEXAGON_V6_vnormamth
__builtin_HEXAGON_V6_vnormamth_128B
__builtin_HEXAGON_V6_vnormamtw
__builtin_HEXAGON_V6_vnormamtw_128B
__builtin_HEXAGON_V6_vnot
__builtin_HEXAGON_V6_vnot_128B
__builtin_HEXAGON_V6_vor
__builtin_HEXAGON_V6_vor_128B
__builtin_HEXAGON_V6_vpackeb
__builtin_HEXAGON_V6_vpackeb_128B
__builtin_HEXAGON_V6_vpackeh
__builtin_HEXAGON_V6_vpackeh_128B
__builtin_HEXAGON_V6_vpackhb_sat
__builtin_HEXAGON_V6_vpackhb_sat_128B
__builtin_HEXAGON_V6_vpackhub_sat
__builtin_HEXAGON_V6_vpackhub_sat_128B
__builtin_HEXAGON_V6_vpackob
__builtin_HEXAGON_V6_vpackob_128B
__builtin_HEXAGON_V6_vpackoh
__builtin_HEXAGON_V6_vpackoh_128B
__builtin_HEXAGON_V6_vpackwh_sat
__builtin_HEXAGON_V6_vpackwh_sat_128B
__builtin_HEXAGON_V6_vpackwuh_sat
__builtin_HEXAGON_V6_vpackwuh_sat_128B
__builtin_HEXAGON_V6_vpopcounth
__builtin_HEXAGON_V6_vpopcounth_128B
__builtin_HEXAGON_V6_vrdelta
__builtin_HEXAGON_V6_vrdelta_128B
__builtin_HEXAGON_V6_vrmpybus
__builtin_HEXAGON_V6_vrmpybus_128B
__builtin_HEXAGON_V6_vrmpybus_acc
__builtin_HEXAGON_V6_vrmpybus_acc_128B
__builtin_HEXAGON_V6_vrmpybusi
V32iV32iiUIi
__builtin_HEXAGON_V6_vrmpybusi_128B
V64iV64iiUIi
__builtin_HEXAGON_V6_vrmpybusi_acc
V32iV32iV32iiUIi
__builtin_HEXAGON_V6_vrmpybusi_acc_128B
V64iV64iV64iiUIi
__builtin_HEXAGON_V6_vrmpybusv
__builtin_HEXAGON_V6_vrmpybusv_128B
__builtin_HEXAGON_V6_vrmpybusv_acc
__builtin_HEXAGON_V6_vrmpybusv_acc_128B
__builtin_HEXAGON_V6_vrmpybv
__builtin_HEXAGON_V6_vrmpybv_128B
__builtin_HEXAGON_V6_vrmpybv_acc
__builtin_HEXAGON_V6_vrmpybv_acc_128B
__builtin_HEXAGON_V6_vrmpyub
__builtin_HEXAGON_V6_vrmpyub_128B
__builtin_HEXAGON_V6_vrmpyub_acc
__builtin_HEXAGON_V6_vrmpyub_acc_128B
__builtin_HEXAGON_V6_vrmpyubi
__builtin_HEXAGON_V6_vrmpyubi_128B
__builtin_HEXAGON_V6_vrmpyubi_acc
__builtin_HEXAGON_V6_vrmpyubi_acc_128B
__builtin_HEXAGON_V6_vrmpyubv
__builtin_HEXAGON_V6_vrmpyubv_128B
__builtin_HEXAGON_V6_vrmpyubv_acc
__builtin_HEXAGON_V6_vrmpyubv_acc_128B
__builtin_HEXAGON_V6_vror
__builtin_HEXAGON_V6_vror_128B
__builtin_HEXAGON_V6_vroundhb
__builtin_HEXAGON_V6_vroundhb_128B
__builtin_HEXAGON_V6_vroundhub
__builtin_HEXAGON_V6_vroundhub_128B
__builtin_HEXAGON_V6_vroundwh
__builtin_HEXAGON_V6_vroundwh_128B
__builtin_HEXAGON_V6_vroundwuh
__builtin_HEXAGON_V6_vroundwuh_128B
__builtin_HEXAGON_V6_vrsadubi
__builtin_HEXAGON_V6_vrsadubi_128B
__builtin_HEXAGON_V6_vrsadubi_acc
__builtin_HEXAGON_V6_vrsadubi_acc_128B
__builtin_HEXAGON_V6_vsathub
__builtin_HEXAGON_V6_vsathub_128B
__builtin_HEXAGON_V6_vsatwh
__builtin_HEXAGON_V6_vsatwh_128B
__builtin_HEXAGON_V6_vsb
V32iV16i
__builtin_HEXAGON_V6_vsb_128B
V64iV32i
__builtin_HEXAGON_V6_vsh
__builtin_HEXAGON_V6_vsh_128B
__builtin_HEXAGON_V6_vshufeh
__builtin_HEXAGON_V6_vshufeh_128B
__builtin_HEXAGON_V6_vshuffb
__builtin_HEXAGON_V6_vshuffb_128B
__builtin_HEXAGON_V6_vshuffeb
__builtin_HEXAGON_V6_vshuffeb_128B
__builtin_HEXAGON_V6_vshuffh
__builtin_HEXAGON_V6_vshuffh_128B
__builtin_HEXAGON_V6_vshuffob
__builtin_HEXAGON_V6_vshuffob_128B
__builtin_HEXAGON_V6_vshuffvdd
__builtin_HEXAGON_V6_vshuffvdd_128B
__builtin_HEXAGON_V6_vshufoeb
__builtin_HEXAGON_V6_vshufoeb_128B
__builtin_HEXAGON_V6_vshufoeh
__builtin_HEXAGON_V6_vshufoeh_128B
__builtin_HEXAGON_V6_vshufoh
__builtin_HEXAGON_V6_vshufoh_128B
__builtin_HEXAGON_V6_vsubb
__builtin_HEXAGON_V6_vsubb_128B
__builtin_HEXAGON_V6_vsubb_dv
__builtin_HEXAGON_V6_vsubb_dv_128B
__builtin_HEXAGON_V6_vsubbnq
__builtin_HEXAGON_V6_vsubbnq_128B
__builtin_HEXAGON_V6_vsubbq
__builtin_HEXAGON_V6_vsubbq_128B
__builtin_HEXAGON_V6_vsubh
__builtin_HEXAGON_V6_vsubh_128B
__builtin_HEXAGON_V6_vsubh_dv
__builtin_HEXAGON_V6_vsubh_dv_128B
__builtin_HEXAGON_V6_vsubhnq
__builtin_HEXAGON_V6_vsubhnq_128B
__builtin_HEXAGON_V6_vsubhq
__builtin_HEXAGON_V6_vsubhq_128B
__builtin_HEXAGON_V6_vsubhsat
__builtin_HEXAGON_V6_vsubhsat_128B
__builtin_HEXAGON_V6_vsubhsat_dv
__builtin_HEXAGON_V6_vsubhsat_dv_128B
__builtin_HEXAGON_V6_vsubhw
__builtin_HEXAGON_V6_vsubhw_128B
__builtin_HEXAGON_V6_vsububh
__builtin_HEXAGON_V6_vsububh_128B
__builtin_HEXAGON_V6_vsububsat
__builtin_HEXAGON_V6_vsububsat_128B
__builtin_HEXAGON_V6_vsububsat_dv
__builtin_HEXAGON_V6_vsububsat_dv_128B
__builtin_HEXAGON_V6_vsubuhsat
__builtin_HEXAGON_V6_vsubuhsat_128B
__builtin_HEXAGON_V6_vsubuhsat_dv
__builtin_HEXAGON_V6_vsubuhsat_dv_128B
__builtin_HEXAGON_V6_vsubuhw
__builtin_HEXAGON_V6_vsubuhw_128B
__builtin_HEXAGON_V6_vsubw
__builtin_HEXAGON_V6_vsubw_128B
__builtin_HEXAGON_V6_vsubw_dv
__builtin_HEXAGON_V6_vsubw_dv_128B
__builtin_HEXAGON_V6_vsubwnq
__builtin_HEXAGON_V6_vsubwnq_128B
__builtin_HEXAGON_V6_vsubwq
__builtin_HEXAGON_V6_vsubwq_128B
__builtin_HEXAGON_V6_vsubwsat
__builtin_HEXAGON_V6_vsubwsat_128B
__builtin_HEXAGON_V6_vsubwsat_dv
__builtin_HEXAGON_V6_vsubwsat_dv_128B
__builtin_HEXAGON_V6_vswap
V32iV64bV16iV16i
__builtin_HEXAGON_V6_vswap_128B
V64iV128bV32iV32i
__builtin_HEXAGON_V6_vtmpyb
__builtin_HEXAGON_V6_vtmpyb_128B
__builtin_HEXAGON_V6_vtmpyb_acc
__builtin_HEXAGON_V6_vtmpyb_acc_128B
__builtin_HEXAGON_V6_vtmpybus
__builtin_HEXAGON_V6_vtmpybus_128B
__builtin_HEXAGON_V6_vtmpybus_acc
__builtin_HEXAGON_V6_vtmpybus_acc_128B
__builtin_HEXAGON_V6_vtmpyhb
__builtin_HEXAGON_V6_vtmpyhb_128B
__builtin_HEXAGON_V6_vtmpyhb_acc
__builtin_HEXAGON_V6_vtmpyhb_acc_128B
__builtin_HEXAGON_V6_vunpackb
__builtin_HEXAGON_V6_vunpackb_128B
__builtin_HEXAGON_V6_vunpackh
__builtin_HEXAGON_V6_vunpackh_128B
__builtin_HEXAGON_V6_vunpackob
V32iV32iV16i
__builtin_HEXAGON_V6_vunpackob_128B
V64iV64iV32i
__builtin_HEXAGON_V6_vunpackoh
__builtin_HEXAGON_V6_vunpackoh_128B
__builtin_HEXAGON_V6_vunpackub
__builtin_HEXAGON_V6_vunpackub_128B
__builtin_HEXAGON_V6_vunpackuh
__builtin_HEXAGON_V6_vunpackuh_128B
__builtin_HEXAGON_V6_vxor
__builtin_HEXAGON_V6_vxor_128B
__builtin_HEXAGON_V6_vzb
__builtin_HEXAGON_V6_vzb_128B
__builtin_HEXAGON_V6_vzh
__builtin_HEXAGON_V6_vzh_128B
__builtin_HEXAGON_V6_lvsplatb
hvxv62|hvxv65|hvxv66|hvxv67|hvxv68
__builtin_HEXAGON_V6_lvsplatb_128B
__builtin_HEXAGON_V6_lvsplath
__builtin_HEXAGON_V6_lvsplath_128B
__builtin_HEXAGON_V6_pred_scalar2v2
__builtin_HEXAGON_V6_pred_scalar2v2_128B
__builtin_HEXAGON_V6_shuffeqh
__builtin_HEXAGON_V6_shuffeqh_128B
__builtin_HEXAGON_V6_shuffeqw
__builtin_HEXAGON_V6_shuffeqw_128B
__builtin_HEXAGON_V6_vaddbsat
__builtin_HEXAGON_V6_vaddbsat_128B
__builtin_HEXAGON_V6_vaddbsat_dv
__builtin_HEXAGON_V6_vaddbsat_dv_128B
__builtin_HEXAGON_V6_vaddcarry
V16iV16iV16iv*
__builtin_HEXAGON_V6_vaddcarry_128B
V32iV32iV32iv*
__builtin_HEXAGON_V6_vaddclbh
__builtin_HEXAGON_V6_vaddclbh_128B
__builtin_HEXAGON_V6_vaddclbw
__builtin_HEXAGON_V6_vaddclbw_128B
__builtin_HEXAGON_V6_vaddhw_acc
__builtin_HEXAGON_V6_vaddhw_acc_128B
__builtin_HEXAGON_V6_vaddubh_acc
__builtin_HEXAGON_V6_vaddubh_acc_128B
__builtin_HEXAGON_V6_vaddububb_sat
__builtin_HEXAGON_V6_vaddububb_sat_128B
__builtin_HEXAGON_V6_vadduhw_acc
__builtin_HEXAGON_V6_vadduhw_acc_128B
__builtin_HEXAGON_V6_vadduwsat
__builtin_HEXAGON_V6_vadduwsat_128B
__builtin_HEXAGON_V6_vadduwsat_dv
__builtin_HEXAGON_V6_vadduwsat_dv_128B
__builtin_HEXAGON_V6_vandnqrt
__builtin_HEXAGON_V6_vandnqrt_128B
__builtin_HEXAGON_V6_vandnqrt_acc
__builtin_HEXAGON_V6_vandnqrt_acc_128B
__builtin_HEXAGON_V6_vandvnqv
V16iV64bV16i
__builtin_HEXAGON_V6_vandvnqv_128B
V32iV128bV32i
__builtin_HEXAGON_V6_vandvqv
__builtin_HEXAGON_V6_vandvqv_128B
__builtin_HEXAGON_V6_vasrhbsat
__builtin_HEXAGON_V6_vasrhbsat_128B
__builtin_HEXAGON_V6_vasruwuhrndsat
__builtin_HEXAGON_V6_vasruwuhrndsat_128B
__builtin_HEXAGON_V6_vasrwuhrndsat
__builtin_HEXAGON_V6_vasrwuhrndsat_128B
__builtin_HEXAGON_V6_vlsrb
__builtin_HEXAGON_V6_vlsrb_128B
__builtin_HEXAGON_V6_vlutvvb_nm
__builtin_HEXAGON_V6_vlutvvb_nm_128B
__builtin_HEXAGON_V6_vlutvvb_oracci
V16iV16iV16iV16iUIi
__builtin_HEXAGON_V6_vlutvvb_oracci_128B
V32iV32iV32iV32iUIi
__builtin_HEXAGON_V6_vlutvvbi
__builtin_HEXAGON_V6_vlutvvbi_128B
__builtin_HEXAGON_V6_vlutvwh_nm
__builtin_HEXAGON_V6_vlutvwh_nm_128B
__builtin_HEXAGON_V6_vlutvwh_oracci
V32iV32iV16iV16iUIi
__builtin_HEXAGON_V6_vlutvwh_oracci_128B
V64iV64iV32iV32iUIi
__builtin_HEXAGON_V6_vlutvwhi
V32iV16iV16iUIi
__builtin_HEXAGON_V6_vlutvwhi_128B
V64iV32iV32iUIi
__builtin_HEXAGON_V6_vmaxb
__builtin_HEXAGON_V6_vmaxb_128B
__builtin_HEXAGON_V6_vminb
__builtin_HEXAGON_V6_vminb_128B
__builtin_HEXAGON_V6_vmpauhb
__builtin_HEXAGON_V6_vmpauhb_128B
__builtin_HEXAGON_V6_vmpauhb_acc
__builtin_HEXAGON_V6_vmpauhb_acc_128B
__builtin_HEXAGON_V6_vmpyewuh_64
__builtin_HEXAGON_V6_vmpyewuh_64_128B
__builtin_HEXAGON_V6_vmpyiwub
__builtin_HEXAGON_V6_vmpyiwub_128B
__builtin_HEXAGON_V6_vmpyiwub_acc
__builtin_HEXAGON_V6_vmpyiwub_acc_128B
__builtin_HEXAGON_V6_vmpyowh_64_acc
__builtin_HEXAGON_V6_vmpyowh_64_acc_128B
__builtin_HEXAGON_V6_vrounduhub
__builtin_HEXAGON_V6_vrounduhub_128B
__builtin_HEXAGON_V6_vrounduwuh
__builtin_HEXAGON_V6_vrounduwuh_128B
__builtin_HEXAGON_V6_vsatuwuh
__builtin_HEXAGON_V6_vsatuwuh_128B
__builtin_HEXAGON_V6_vsubbsat
__builtin_HEXAGON_V6_vsubbsat_128B
__builtin_HEXAGON_V6_vsubbsat_dv
__builtin_HEXAGON_V6_vsubbsat_dv_128B
__builtin_HEXAGON_V6_vsubcarry
__builtin_HEXAGON_V6_vsubcarry_128B
__builtin_HEXAGON_V6_vsubububb_sat
__builtin_HEXAGON_V6_vsubububb_sat_128B
__builtin_HEXAGON_V6_vsubuwsat
__builtin_HEXAGON_V6_vsubuwsat_128B
__builtin_HEXAGON_V6_vsubuwsat_dv
__builtin_HEXAGON_V6_vsubuwsat_dv_128B
__builtin_HEXAGON_V6_vabsb
hvxv65|hvxv66|hvxv67|hvxv68
__builtin_HEXAGON_V6_vabsb_128B
__builtin_HEXAGON_V6_vabsb_sat
__builtin_HEXAGON_V6_vabsb_sat_128B
__builtin_HEXAGON_V6_vaslh_acc
__builtin_HEXAGON_V6_vaslh_acc_128B
__builtin_HEXAGON_V6_vasrh_acc
__builtin_HEXAGON_V6_vasrh_acc_128B
__builtin_HEXAGON_V6_vasruhubrndsat
__builtin_HEXAGON_V6_vasruhubrndsat_128B
__builtin_HEXAGON_V6_vasruhubsat
__builtin_HEXAGON_V6_vasruhubsat_128B
__builtin_HEXAGON_V6_vasruwuhsat
__builtin_HEXAGON_V6_vasruwuhsat_128B
__builtin_HEXAGON_V6_vavgb
__builtin_HEXAGON_V6_vavgb_128B
__builtin_HEXAGON_V6_vavgbrnd
__builtin_HEXAGON_V6_vavgbrnd_128B
__builtin_HEXAGON_V6_vavguw
__builtin_HEXAGON_V6_vavguw_128B
__builtin_HEXAGON_V6_vavguwrnd
__builtin_HEXAGON_V6_vavguwrnd_128B
__builtin_HEXAGON_V6_vdd0
__builtin_HEXAGON_V6_vdd0_128B
V64i
__builtin_HEXAGON_V6_vgathermh
vv*iiV16i
__builtin_HEXAGON_V6_vgathermh_128B
vv*iiV32i
__builtin_HEXAGON_V6_vgathermhq
vv*V64biiV16i
__builtin_HEXAGON_V6_vgathermhq_128B
vv*V128biiV32i
__builtin_HEXAGON_V6_vgathermhw
__builtin_HEXAGON_V6_vgathermhw_128B
vv*iiV64i
__builtin_HEXAGON_V6_vgathermhwq
vv*V64biiV32i
__builtin_HEXAGON_V6_vgathermhwq_128B
vv*V128biiV64i
__builtin_HEXAGON_V6_vgathermw
__builtin_HEXAGON_V6_vgathermw_128B
__builtin_HEXAGON_V6_vgathermwq
__builtin_HEXAGON_V6_vgathermwq_128B
__builtin_HEXAGON_V6_vlut4
V16iV16iLLi
__builtin_HEXAGON_V6_vlut4_128B
V32iV32iLLi
__builtin_HEXAGON_V6_vmpabuu
__builtin_HEXAGON_V6_vmpabuu_128B
__builtin_HEXAGON_V6_vmpabuu_acc
__builtin_HEXAGON_V6_vmpabuu_acc_128B
__builtin_HEXAGON_V6_vmpahhsat
V16iV16iV16iLLi
__builtin_HEXAGON_V6_vmpahhsat_128B
V32iV32iV32iLLi
__builtin_HEXAGON_V6_vmpauhuhsat
__builtin_HEXAGON_V6_vmpauhuhsat_128B
__builtin_HEXAGON_V6_vmpsuhuhsat
__builtin_HEXAGON_V6_vmpsuhuhsat_128B
__builtin_HEXAGON_V6_vmpyh_acc
__builtin_HEXAGON_V6_vmpyh_acc_128B
__builtin_HEXAGON_V6_vmpyuhe
__builtin_HEXAGON_V6_vmpyuhe_128B
__builtin_HEXAGON_V6_vmpyuhe_acc
__builtin_HEXAGON_V6_vmpyuhe_acc_128B
__builtin_HEXAGON_V6_vnavgb
__builtin_HEXAGON_V6_vnavgb_128B
__builtin_HEXAGON_V6_vprefixqb
V16iV64b
__builtin_HEXAGON_V6_vprefixqb_128B
V32iV128b
__builtin_HEXAGON_V6_vprefixqh
__builtin_HEXAGON_V6_vprefixqh_128B
__builtin_HEXAGON_V6_vprefixqw
__builtin_HEXAGON_V6_vprefixqw_128B
__builtin_HEXAGON_V6_vscattermh
viiV16iV16i
__builtin_HEXAGON_V6_vscattermh_128B
viiV32iV32i
__builtin_HEXAGON_V6_vscattermh_add
__builtin_HEXAGON_V6_vscattermh_add_128B
__builtin_HEXAGON_V6_vscattermhq
vV64biiV16iV16i
__builtin_HEXAGON_V6_vscattermhq_128B
vV128biiV32iV32i
__builtin_HEXAGON_V6_vscattermhw
viiV32iV16i
__builtin_HEXAGON_V6_vscattermhw_128B
viiV64iV32i
__builtin_HEXAGON_V6_vscattermhw_add
__builtin_HEXAGON_V6_vscattermhw_add_128B
__builtin_HEXAGON_V6_vscattermhwq
vV64biiV32iV16i
__builtin_HEXAGON_V6_vscattermhwq_128B
vV128biiV64iV32i
__builtin_HEXAGON_V6_vscattermw
__builtin_HEXAGON_V6_vscattermw_128B
__builtin_HEXAGON_V6_vscattermw_add
__builtin_HEXAGON_V6_vscattermw_add_128B
__builtin_HEXAGON_V6_vscattermwq
__builtin_HEXAGON_V6_vscattermwq_128B
__builtin_HEXAGON_V6_vaddcarrysat
V16iV16iV16iV64b
hvxv66|hvxv67|hvxv68
__builtin_HEXAGON_V6_vaddcarrysat_128B
V32iV32iV32iV128b
__builtin_HEXAGON_V6_vasr_into
__builtin_HEXAGON_V6_vasr_into_128B
__builtin_HEXAGON_V6_vrotr
__builtin_HEXAGON_V6_vrotr_128B
__builtin_HEXAGON_V6_vsatdw
__builtin_HEXAGON_V6_vsatdw_128B
__builtin_HEXAGON_V6_v6mpyhubs10
hvxv68
__builtin_HEXAGON_V6_v6mpyhubs10_128B
V64iV64iV64iUIi
__builtin_HEXAGON_V6_v6mpyhubs10_vxx
__builtin_HEXAGON_V6_v6mpyhubs10_vxx_128B
V64iV64iV64iV64iUIi
__builtin_HEXAGON_V6_v6mpyvubs10
__builtin_HEXAGON_V6_v6mpyvubs10_128B
__builtin_HEXAGON_V6_v6mpyvubs10_vxx
__builtin_HEXAGON_V6_v6mpyvubs10_vxx_128B
hvxv
__lanai__
__LANAI_V11__
le64
-m:e
-p:32:16:32
-i8:8:8-i16:16:16-i32:16:32
-n8:16:32
-a:0:16-S16
__m68k__
mc68000
__mc68000
__mc68000__
mc68010
__mc68010
__mc68010__
mc68020
__mc68020
__mc68020__
mc68030
__mc68030
__mc68030__
mc68040
__mc68040
__mc68040__
mc68060
__mc68060
__mc68060__
MSP430
__MSP430__
__builtin_mips_addu_qb
V4ScV4ScV4Sc
__builtin_mips_addu_s_qb
__builtin_mips_subu_qb
__builtin_mips_subu_s_qb
__builtin_mips_addq_ph
V2sV2sV2s
__builtin_mips_addq_s_ph
__builtin_mips_subq_ph
__builtin_mips_subq_s_ph
__builtin_mips_madd
__builtin_mips_maddu
LLiLLiUiUi
__builtin_mips_msub
__builtin_mips_msubu
__builtin_mips_addq_s_w
__builtin_mips_subq_s_w
__builtin_mips_addsc
__builtin_mips_addwc
__builtin_mips_modsub
__builtin_mips_raddu_w_qb
iV4Sc
__builtin_mips_absq_s_ph
V2sV2s
__builtin_mips_absq_s_w
__builtin_mips_precrq_qb_ph
V4ScV2sV2s
__builtin_mips_precrqu_s_qb_ph
__builtin_mips_precrq_ph_w
V2sii
__builtin_mips_precrq_rs_ph_w
__builtin_mips_preceq_w_phl
iV2s
__builtin_mips_preceq_w_phr
__builtin_mips_precequ_ph_qbl
V2sV4Sc
__builtin_mips_precequ_ph_qbr
__builtin_mips_precequ_ph_qbla
__builtin_mips_precequ_ph_qbra
__builtin_mips_preceu_ph_qbl
__builtin_mips_preceu_ph_qbr
__builtin_mips_preceu_ph_qbla
__builtin_mips_preceu_ph_qbra
__builtin_mips_shll_qb
V4ScV4Sci
__builtin_mips_shrl_qb
__builtin_mips_shll_ph
V2sV2si
__builtin_mips_shll_s_ph
__builtin_mips_shra_ph
__builtin_mips_shra_r_ph
__builtin_mips_shll_s_w
__builtin_mips_shra_r_w
__builtin_mips_shilo
__builtin_mips_muleu_s_ph_qbl
V2sV4ScV2s
__builtin_mips_muleu_s_ph_qbr
__builtin_mips_mulq_rs_ph
__builtin_mips_muleq_s_w_phl
iV2sV2s
__builtin_mips_muleq_s_w_phr
__builtin_mips_mulsaq_s_w_ph
LLiLLiV2sV2s
__builtin_mips_maq_s_w_phl
__builtin_mips_maq_s_w_phr
__builtin_mips_maq_sa_w_phl
__builtin_mips_maq_sa_w_phr
__builtin_mips_mult
__builtin_mips_multu
LLiUiUi
__builtin_mips_dpau_h_qbl
LLiLLiV4ScV4Sc
__builtin_mips_dpau_h_qbr
__builtin_mips_dpsu_h_qbl
__builtin_mips_dpsu_h_qbr
__builtin_mips_dpaq_s_w_ph
__builtin_mips_dpsq_s_w_ph
__builtin_mips_dpaq_sa_l_w
__builtin_mips_dpsq_sa_l_w
__builtin_mips_cmpu_eq_qb
vV4ScV4Sc
__builtin_mips_cmpu_lt_qb
__builtin_mips_cmpu_le_qb
__builtin_mips_cmpgu_eq_qb
iV4ScV4Sc
__builtin_mips_cmpgu_lt_qb
__builtin_mips_cmpgu_le_qb
__builtin_mips_cmp_eq_ph
vV2sV2s
__builtin_mips_cmp_lt_ph
__builtin_mips_cmp_le_ph
__builtin_mips_extr_s_h
__builtin_mips_extr_w
__builtin_mips_extr_rs_w
__builtin_mips_extr_r_w
__builtin_mips_extp
__builtin_mips_extpdp
__builtin_mips_wrdsp
viIi
__builtin_mips_rddsp
__builtin_mips_insv
__builtin_mips_bitrev
__builtin_mips_packrl_ph
__builtin_mips_repl_qb
V4Sci
__builtin_mips_repl_ph
V2si
__builtin_mips_pick_qb
__builtin_mips_pick_ph
__builtin_mips_mthlip
__builtin_mips_bposge32
__builtin_mips_lbux
iv*i
__builtin_mips_lhx
__builtin_mips_lwx
__builtin_mips_absq_s_qb
V4ScV4Sc
__builtin_mips_addqh_ph
__builtin_mips_addqh_r_ph
__builtin_mips_addqh_w
__builtin_mips_addqh_r_w
__builtin_mips_addu_ph
__builtin_mips_addu_s_ph
__builtin_mips_adduh_qb
__builtin_mips_adduh_r_qb
__builtin_mips_append
__builtin_mips_balign
__builtin_mips_cmpgdu_eq_qb
__builtin_mips_cmpgdu_lt_qb
__builtin_mips_cmpgdu_le_qb
__builtin_mips_dpa_w_ph
__builtin_mips_dps_w_ph
__builtin_mips_dpaqx_s_w_ph
__builtin_mips_dpaqx_sa_w_ph
__builtin_mips_dpax_w_ph
__builtin_mips_dpsx_w_ph
__builtin_mips_dpsqx_s_w_ph
__builtin_mips_dpsqx_sa_w_ph
__builtin_mips_mul_ph
__builtin_mips_mul_s_ph
__builtin_mips_mulq_rs_w
__builtin_mips_mulq_s_ph
__builtin_mips_mulq_s_w
__builtin_mips_mulsa_w_ph
__builtin_mips_precr_qb_ph
__builtin_mips_precr_sra_ph_w
V2siiIi
__builtin_mips_precr_sra_r_ph_w
__builtin_mips_prepend
__builtin_mips_shra_qb
__builtin_mips_shra_r_qb
__builtin_mips_shrl_ph
__builtin_mips_subqh_ph
__builtin_mips_subqh_r_ph
__builtin_mips_subqh_w
__builtin_mips_subqh_r_w
__builtin_mips_subu_ph
__builtin_mips_subu_s_ph
__builtin_mips_subuh_qb
__builtin_mips_subuh_r_qb
__builtin_msa_add_a_b
V16ScV16ScV16Sc
__builtin_msa_add_a_h
V8SsV8SsV8Ss
__builtin_msa_add_a_w
V4SiV4SiV4Si
__builtin_msa_add_a_d
V2SLLiV2SLLiV2SLLi
__builtin_msa_adds_a_b
__builtin_msa_adds_a_h
__builtin_msa_adds_a_w
__builtin_msa_adds_a_d
__builtin_msa_adds_s_b
__builtin_msa_adds_s_h
__builtin_msa_adds_s_w
__builtin_msa_adds_s_d
__builtin_msa_adds_u_b
V16UcV16UcV16Uc
__builtin_msa_adds_u_h
V8UsV8UsV8Us
__builtin_msa_adds_u_w
V4UiV4UiV4Ui
__builtin_msa_adds_u_d
V2ULLiV2ULLiV2ULLi
__builtin_msa_addv_b
V16cV16cV16c
__builtin_msa_addv_h
V8sV8sV8s
__builtin_msa_addv_w
V4iV4iV4i
__builtin_msa_addv_d
V2LLiV2LLiV2LLi
__builtin_msa_addvi_b
V16cV16cIUi
__builtin_msa_addvi_h
V8sV8sIUi
__builtin_msa_addvi_w
V4iV4iIUi
__builtin_msa_addvi_d
V2LLiV2LLiIUi
__builtin_msa_and_v
__builtin_msa_andi_b
V16UcV16UcIUi
__builtin_msa_asub_s_b
__builtin_msa_asub_s_h
__builtin_msa_asub_s_w
__builtin_msa_asub_s_d
__builtin_msa_asub_u_b
__builtin_msa_asub_u_h
__builtin_msa_asub_u_w
__builtin_msa_asub_u_d
__builtin_msa_ave_s_b
__builtin_msa_ave_s_h
__builtin_msa_ave_s_w
__builtin_msa_ave_s_d
__builtin_msa_ave_u_b
__builtin_msa_ave_u_h
__builtin_msa_ave_u_w
__builtin_msa_ave_u_d
__builtin_msa_aver_s_b
__builtin_msa_aver_s_h
__builtin_msa_aver_s_w
__builtin_msa_aver_s_d
__builtin_msa_aver_u_b
__builtin_msa_aver_u_h
__builtin_msa_aver_u_w
__builtin_msa_aver_u_d
__builtin_msa_bclr_b
__builtin_msa_bclr_h
__builtin_msa_bclr_w
__builtin_msa_bclr_d
__builtin_msa_bclri_b
__builtin_msa_bclri_h
V8UsV8UsIUi
__builtin_msa_bclri_w
V4UiV4UiIUi
__builtin_msa_bclri_d
V2ULLiV2ULLiIUi
__builtin_msa_binsl_b
V16UcV16UcV16UcV16Uc
__builtin_msa_binsl_h
V8UsV8UsV8UsV8Us
__builtin_msa_binsl_w
V4UiV4UiV4UiV4Ui
__builtin_msa_binsl_d
V2ULLiV2ULLiV2ULLiV2ULLi
__builtin_msa_binsli_b
V16UcV16UcV16UcIUi
__builtin_msa_binsli_h
V8UsV8UsV8UsIUi
__builtin_msa_binsli_w
V4UiV4UiV4UiIUi
__builtin_msa_binsli_d
V2ULLiV2ULLiV2ULLiIUi
__builtin_msa_binsr_b
__builtin_msa_binsr_h
__builtin_msa_binsr_w
__builtin_msa_binsr_d
__builtin_msa_binsri_b
__builtin_msa_binsri_h
__builtin_msa_binsri_w
__builtin_msa_binsri_d
__builtin_msa_bmnz_v
__builtin_msa_bmnzi_b
__builtin_msa_bmz_v
__builtin_msa_bmzi_b
__builtin_msa_bneg_b
__builtin_msa_bneg_h
__builtin_msa_bneg_w
__builtin_msa_bneg_d
__builtin_msa_bnegi_b
__builtin_msa_bnegi_h
__builtin_msa_bnegi_w
__builtin_msa_bnegi_d
__builtin_msa_bnz_b
iV16Uc
__builtin_msa_bnz_h
iV8Us
__builtin_msa_bnz_w
iV4Ui
__builtin_msa_bnz_d
iV2ULLi
__builtin_msa_bnz_v
__builtin_msa_bsel_v
__builtin_msa_bseli_b
__builtin_msa_bset_b
__builtin_msa_bset_h
__builtin_msa_bset_w
__builtin_msa_bset_d
__builtin_msa_bseti_b
__builtin_msa_bseti_h
__builtin_msa_bseti_w
__builtin_msa_bseti_d
__builtin_msa_bz_b
__builtin_msa_bz_h
__builtin_msa_bz_w
__builtin_msa_bz_d
__builtin_msa_bz_v
__builtin_msa_ceq_b
__builtin_msa_ceq_h
__builtin_msa_ceq_w
__builtin_msa_ceq_d
__builtin_msa_ceqi_b
V16ScV16ScISi
__builtin_msa_ceqi_h
V8SsV8SsISi
__builtin_msa_ceqi_w
V4SiV4SiISi
__builtin_msa_ceqi_d
V2SLLiV2SLLiISi
__builtin_msa_cfcmsa
__builtin_msa_cle_s_b
__builtin_msa_cle_s_h
__builtin_msa_cle_s_w
__builtin_msa_cle_s_d
__builtin_msa_cle_u_b
V16ScV16UcV16Uc
__builtin_msa_cle_u_h
V8SsV8UsV8Us
__builtin_msa_cle_u_w
V4SiV4UiV4Ui
__builtin_msa_cle_u_d
V2SLLiV2ULLiV2ULLi
__builtin_msa_clei_s_b
__builtin_msa_clei_s_h
__builtin_msa_clei_s_w
__builtin_msa_clei_s_d
__builtin_msa_clei_u_b
V16ScV16UcIUi
__builtin_msa_clei_u_h
V8SsV8UsIUi
__builtin_msa_clei_u_w
V4SiV4UiIUi
__builtin_msa_clei_u_d
V2SLLiV2ULLiIUi
__builtin_msa_clt_s_b
__builtin_msa_clt_s_h
__builtin_msa_clt_s_w
__builtin_msa_clt_s_d
__builtin_msa_clt_u_b
__builtin_msa_clt_u_h
__builtin_msa_clt_u_w
__builtin_msa_clt_u_d
__builtin_msa_clti_s_b
__builtin_msa_clti_s_h
__builtin_msa_clti_s_w
__builtin_msa_clti_s_d
__builtin_msa_clti_u_b
__builtin_msa_clti_u_h
__builtin_msa_clti_u_w
__builtin_msa_clti_u_d
__builtin_msa_copy_s_b
iV16ScIUi
__builtin_msa_copy_s_h
iV8SsIUi
__builtin_msa_copy_s_w
iV4SiIUi
__builtin_msa_copy_s_d
LLiV2SLLiIUi
__builtin_msa_copy_u_b
iV16UcIUi
__builtin_msa_copy_u_h
iV8UsIUi
__builtin_msa_copy_u_w
iV4UiIUi
__builtin_msa_copy_u_d
LLiV2ULLiIUi
__builtin_msa_ctcmsa
vIii
__builtin_msa_div_s_b
__builtin_msa_div_s_h
__builtin_msa_div_s_w
__builtin_msa_div_s_d
__builtin_msa_div_u_b
__builtin_msa_div_u_h
__builtin_msa_div_u_w
__builtin_msa_div_u_d
__builtin_msa_dotp_s_h
V8SsV16ScV16Sc
__builtin_msa_dotp_s_w
V4SiV8SsV8Ss
__builtin_msa_dotp_s_d
V2SLLiV4SiV4Si
__builtin_msa_dotp_u_h
V8UsV16UcV16Uc
__builtin_msa_dotp_u_w
V4UiV8UsV8Us
__builtin_msa_dotp_u_d
V2ULLiV4UiV4Ui
__builtin_msa_dpadd_s_h
V8SsV8SsV16ScV16Sc
__builtin_msa_dpadd_s_w
V4SiV4SiV8SsV8Ss
__builtin_msa_dpadd_s_d
V2SLLiV2SLLiV4SiV4Si
__builtin_msa_dpadd_u_h
V8UsV8UsV16UcV16Uc
__builtin_msa_dpadd_u_w
V4UiV4UiV8UsV8Us
__builtin_msa_dpadd_u_d
V2ULLiV2ULLiV4UiV4Ui
__builtin_msa_dpsub_s_h
__builtin_msa_dpsub_s_w
__builtin_msa_dpsub_s_d
__builtin_msa_dpsub_u_h
__builtin_msa_dpsub_u_w
__builtin_msa_dpsub_u_d
__builtin_msa_fadd_w
V4fV4fV4f
__builtin_msa_fadd_d
V2dV2dV2d
__builtin_msa_fcaf_w
V4iV4fV4f
__builtin_msa_fcaf_d
V2LLiV2dV2d
__builtin_msa_fceq_w
__builtin_msa_fceq_d
__builtin_msa_fclass_w
V4iV4f
__builtin_msa_fclass_d
V2LLiV2d
__builtin_msa_fcle_w
__builtin_msa_fcle_d
__builtin_msa_fclt_w
__builtin_msa_fclt_d
__builtin_msa_fcne_w
__builtin_msa_fcne_d
__builtin_msa_fcor_w
__builtin_msa_fcor_d
__builtin_msa_fcueq_w
__builtin_msa_fcueq_d
__builtin_msa_fcule_w
__builtin_msa_fcule_d
__builtin_msa_fcult_w
__builtin_msa_fcult_d
__builtin_msa_fcun_w
__builtin_msa_fcun_d
__builtin_msa_fcune_w
__builtin_msa_fcune_d
__builtin_msa_fdiv_w
__builtin_msa_fdiv_d
__builtin_msa_fexdo_h
V8hV4fV4f
__builtin_msa_fexdo_w
V4fV2dV2d
__builtin_msa_fexp2_w
V4fV4fV4i
__builtin_msa_fexp2_d
V2dV2dV2LLi
__builtin_msa_fexupl_w
V4fV8h
__builtin_msa_fexupl_d
V2dV4f
__builtin_msa_fexupr_w
__builtin_msa_fexupr_d
__builtin_msa_ffint_s_w
V4fV4Si
__builtin_msa_ffint_s_d
V2dV2SLLi
__builtin_msa_ffint_u_w
V4fV4Ui
__builtin_msa_ffint_u_d
V2dV2ULLi
__builtin_msa_ffql_w
V4fV8Ss
__builtin_msa_ffql_d
V2dV4Si
__builtin_msa_ffqr_w
__builtin_msa_ffqr_d
__builtin_msa_fill_b
V16Sci
__builtin_msa_fill_h
V8Ssi
__builtin_msa_fill_w
V4Sii
__builtin_msa_fill_d
V2SLLiLLi
__builtin_msa_flog2_w
V4fV4f
__builtin_msa_flog2_d
V2dV2d
__builtin_msa_fmadd_w
V4fV4fV4fV4f
__builtin_msa_fmadd_d
V2dV2dV2dV2d
__builtin_msa_fmax_w
__builtin_msa_fmax_d
__builtin_msa_fmax_a_w
__builtin_msa_fmax_a_d
__builtin_msa_fmin_w
__builtin_msa_fmin_d
__builtin_msa_fmin_a_w
__builtin_msa_fmin_a_d
__builtin_msa_fmsub_w
__builtin_msa_fmsub_d
__builtin_msa_fmul_w
__builtin_msa_fmul_d
__builtin_msa_frint_w
__builtin_msa_frint_d
__builtin_msa_frcp_w
__builtin_msa_frcp_d
__builtin_msa_frsqrt_w
__builtin_msa_frsqrt_d
__builtin_msa_fsaf_w
__builtin_msa_fsaf_d
__builtin_msa_fseq_w
__builtin_msa_fseq_d
__builtin_msa_fsle_w
__builtin_msa_fsle_d
__builtin_msa_fslt_w
__builtin_msa_fslt_d
__builtin_msa_fsne_w
__builtin_msa_fsne_d
__builtin_msa_fsor_w
__builtin_msa_fsor_d
__builtin_msa_fsqrt_w
__builtin_msa_fsqrt_d
__builtin_msa_fsub_w
__builtin_msa_fsub_d
__builtin_msa_fsueq_w
__builtin_msa_fsueq_d
__builtin_msa_fsule_w
__builtin_msa_fsule_d
__builtin_msa_fsult_w
__builtin_msa_fsult_d
__builtin_msa_fsun_w
__builtin_msa_fsun_d
__builtin_msa_fsune_w
__builtin_msa_fsune_d
__builtin_msa_ftint_s_w
V4SiV4f
__builtin_msa_ftint_s_d
V2SLLiV2d
__builtin_msa_ftint_u_w
V4UiV4f
__builtin_msa_ftint_u_d
V2ULLiV2d
__builtin_msa_ftq_h
V4UiV4fV4f
__builtin_msa_ftq_w
V2ULLiV2dV2d
__builtin_msa_ftrunc_s_w
__builtin_msa_ftrunc_s_d
__builtin_msa_ftrunc_u_w
__builtin_msa_ftrunc_u_d
__builtin_msa_hadd_s_h
__builtin_msa_hadd_s_w
__builtin_msa_hadd_s_d
__builtin_msa_hadd_u_h
__builtin_msa_hadd_u_w
__builtin_msa_hadd_u_d
__builtin_msa_hsub_s_h
__builtin_msa_hsub_s_w
__builtin_msa_hsub_s_d
__builtin_msa_hsub_u_h
__builtin_msa_hsub_u_w
__builtin_msa_hsub_u_d
__builtin_msa_ilvev_b
__builtin_msa_ilvev_h
__builtin_msa_ilvev_w
__builtin_msa_ilvev_d
__builtin_msa_ilvl_b
__builtin_msa_ilvl_h
__builtin_msa_ilvl_w
__builtin_msa_ilvl_d
__builtin_msa_ilvod_b
__builtin_msa_ilvod_h
__builtin_msa_ilvod_w
__builtin_msa_ilvod_d
__builtin_msa_ilvr_b
__builtin_msa_ilvr_h
__builtin_msa_ilvr_w
__builtin_msa_ilvr_d
__builtin_msa_insert_b
V16ScV16ScIUii
__builtin_msa_insert_h
V8SsV8SsIUii
__builtin_msa_insert_w
V4SiV4SiIUii
__builtin_msa_insert_d
V2SLLiV2SLLiIUiLLi
__builtin_msa_insve_b
V16ScV16ScIUiV16Sc
__builtin_msa_insve_h
V8SsV8SsIUiV8Ss
__builtin_msa_insve_w
V4SiV4SiIUiV4Si
__builtin_msa_insve_d
V2SLLiV2SLLiIUiV2SLLi
__builtin_msa_ld_b
V16Scv*Ii
__builtin_msa_ld_h
V8Ssv*Ii
__builtin_msa_ld_w
V4Siv*Ii
__builtin_msa_ld_d
V2SLLiv*Ii
__builtin_msa_ldr_d
__builtin_msa_ldr_w
__builtin_msa_ldi_b
V16cIi
__builtin_msa_ldi_h
V8sIi
__builtin_msa_ldi_w
V4iIi
__builtin_msa_ldi_d
V2LLiIi
__builtin_msa_madd_q_h
V8SsV8SsV8SsV8Ss
__builtin_msa_madd_q_w
V4SiV4SiV4SiV4Si
__builtin_msa_maddr_q_h
__builtin_msa_maddr_q_w
__builtin_msa_maddv_b
V16ScV16ScV16ScV16Sc
__builtin_msa_maddv_h
__builtin_msa_maddv_w
__builtin_msa_maddv_d
V2SLLiV2SLLiV2SLLiV2SLLi
__builtin_msa_max_a_b
__builtin_msa_max_a_h
__builtin_msa_max_a_w
__builtin_msa_max_a_d
__builtin_msa_max_s_b
__builtin_msa_max_s_h
__builtin_msa_max_s_w
__builtin_msa_max_s_d
__builtin_msa_max_u_b
__builtin_msa_max_u_h
__builtin_msa_max_u_w
__builtin_msa_max_u_d
__builtin_msa_maxi_s_b
V16ScV16ScIi
__builtin_msa_maxi_s_h
V8SsV8SsIi
__builtin_msa_maxi_s_w
V4SiV4SiIi
__builtin_msa_maxi_s_d
V2SLLiV2SLLiIi
__builtin_msa_maxi_u_b
V16UcV16UcIi
__builtin_msa_maxi_u_h
V8UsV8UsIi
__builtin_msa_maxi_u_w
V4UiV4UiIi
__builtin_msa_maxi_u_d
V2ULLiV2ULLiIi
__builtin_msa_min_a_b
__builtin_msa_min_a_h
__builtin_msa_min_a_w
__builtin_msa_min_a_d
__builtin_msa_min_s_b
__builtin_msa_min_s_h
__builtin_msa_min_s_w
__builtin_msa_min_s_d
__builtin_msa_min_u_b
__builtin_msa_min_u_h
__builtin_msa_min_u_w
__builtin_msa_min_u_d
__builtin_msa_mini_s_b
__builtin_msa_mini_s_h
__builtin_msa_mini_s_w
__builtin_msa_mini_s_d
__builtin_msa_mini_u_b
__builtin_msa_mini_u_h
__builtin_msa_mini_u_w
__builtin_msa_mini_u_d
__builtin_msa_mod_s_b
__builtin_msa_mod_s_h
__builtin_msa_mod_s_w
__builtin_msa_mod_s_d
__builtin_msa_mod_u_b
__builtin_msa_mod_u_h
__builtin_msa_mod_u_w
__builtin_msa_mod_u_d
__builtin_msa_move_v
V16ScV16Sc
__builtin_msa_msub_q_h
__builtin_msa_msub_q_w
__builtin_msa_msubr_q_h
__builtin_msa_msubr_q_w
__builtin_msa_msubv_b
__builtin_msa_msubv_h
__builtin_msa_msubv_w
__builtin_msa_msubv_d
__builtin_msa_mul_q_h
__builtin_msa_mul_q_w
__builtin_msa_mulr_q_h
__builtin_msa_mulr_q_w
__builtin_msa_mulv_b
__builtin_msa_mulv_h
__builtin_msa_mulv_w
__builtin_msa_mulv_d
__builtin_msa_nloc_b
__builtin_msa_nloc_h
V8SsV8Ss
__builtin_msa_nloc_w
V4SiV4Si
__builtin_msa_nloc_d
V2SLLiV2SLLi
__builtin_msa_nlzc_b
__builtin_msa_nlzc_h
__builtin_msa_nlzc_w
__builtin_msa_nlzc_d
__builtin_msa_nor_v
__builtin_msa_nori_b
V16UcV16cIUi
__builtin_msa_or_v
__builtin_msa_ori_b
__builtin_msa_pckev_b
__builtin_msa_pckev_h
__builtin_msa_pckev_w
__builtin_msa_pckev_d
__builtin_msa_pckod_b
__builtin_msa_pckod_h
__builtin_msa_pckod_w
__builtin_msa_pckod_d
__builtin_msa_pcnt_b
__builtin_msa_pcnt_h
__builtin_msa_pcnt_w
__builtin_msa_pcnt_d
__builtin_msa_sat_s_b
V16ScV16ScIUi
__builtin_msa_sat_s_h
V8SsV8SsIUi
__builtin_msa_sat_s_w
V4SiV4SiIUi
__builtin_msa_sat_s_d
V2SLLiV2SLLiIUi
__builtin_msa_sat_u_b
__builtin_msa_sat_u_h
__builtin_msa_sat_u_w
__builtin_msa_sat_u_d
__builtin_msa_shf_b
__builtin_msa_shf_h
__builtin_msa_shf_w
__builtin_msa_sld_b
V16cV16cV16cUi
__builtin_msa_sld_h
V8sV8sV8sUi
__builtin_msa_sld_w
V4iV4iV4iUi
__builtin_msa_sld_d
V2LLiV2LLiV2LLiUi
__builtin_msa_sldi_b
V16cV16cV16cIUi
__builtin_msa_sldi_h
V8sV8sV8sIUi
__builtin_msa_sldi_w
V4iV4iV4iIUi
__builtin_msa_sldi_d
V2LLiV2LLiV2LLiIUi
__builtin_msa_sll_b
__builtin_msa_sll_h
__builtin_msa_sll_w
__builtin_msa_sll_d
__builtin_msa_slli_b
__builtin_msa_slli_h
__builtin_msa_slli_w
__builtin_msa_slli_d
__builtin_msa_splat_b
V16cV16cUi
__builtin_msa_splat_h
V8sV8sUi
__builtin_msa_splat_w
V4iV4iUi
__builtin_msa_splat_d
V2LLiV2LLiUi
__builtin_msa_splati_b
__builtin_msa_splati_h
__builtin_msa_splati_w
__builtin_msa_splati_d
__builtin_msa_sra_b
__builtin_msa_sra_h
__builtin_msa_sra_w
__builtin_msa_sra_d
__builtin_msa_srai_b
__builtin_msa_srai_h
__builtin_msa_srai_w
__builtin_msa_srai_d
__builtin_msa_srar_b
__builtin_msa_srar_h
__builtin_msa_srar_w
__builtin_msa_srar_d
__builtin_msa_srari_b
__builtin_msa_srari_h
__builtin_msa_srari_w
__builtin_msa_srari_d
__builtin_msa_srl_b
__builtin_msa_srl_h
__builtin_msa_srl_w
__builtin_msa_srl_d
__builtin_msa_srli_b
__builtin_msa_srli_h
__builtin_msa_srli_w
__builtin_msa_srli_d
__builtin_msa_srlr_b
__builtin_msa_srlr_h
__builtin_msa_srlr_w
__builtin_msa_srlr_d
__builtin_msa_srlri_b
__builtin_msa_srlri_h
__builtin_msa_srlri_w
__builtin_msa_srlri_d
__builtin_msa_st_b
vV16Scv*Ii
__builtin_msa_st_h
vV8Ssv*Ii
__builtin_msa_st_w
vV4Siv*Ii
__builtin_msa_st_d
vV2SLLiv*Ii
__builtin_msa_str_d
__builtin_msa_str_w
__builtin_msa_subs_s_b
__builtin_msa_subs_s_h
__builtin_msa_subs_s_w
__builtin_msa_subs_s_d
__builtin_msa_subs_u_b
__builtin_msa_subs_u_h
__builtin_msa_subs_u_w
__builtin_msa_subs_u_d
__builtin_msa_subsus_u_b
V16UcV16UcV16Sc
__builtin_msa_subsus_u_h
V8UsV8UsV8Ss
__builtin_msa_subsus_u_w
V4UiV4UiV4Si
__builtin_msa_subsus_u_d
V2ULLiV2ULLiV2SLLi
__builtin_msa_subsuu_s_b
__builtin_msa_subsuu_s_h
__builtin_msa_subsuu_s_w
__builtin_msa_subsuu_s_d
__builtin_msa_subv_b
__builtin_msa_subv_h
__builtin_msa_subv_w
__builtin_msa_subv_d
__builtin_msa_subvi_b
__builtin_msa_subvi_h
__builtin_msa_subvi_w
__builtin_msa_subvi_d
__builtin_msa_vshf_b
V16cV16cV16cV16c
__builtin_msa_vshf_h
V8sV8sV8sV8s
__builtin_msa_vshf_w
V4iV4iV4iV4i
__builtin_msa_vshf_d
V2LLiV2LLiV2LLiV2LLi
__builtin_msa_xor_v
__builtin_msa_xori_b
MIPSEB
_MIPSEB
MIPSEL
_MIPSEL
__mips__
_mips
__mips
_MIPS_ISA
_MIPS_ISA_MIPS32
__mips64
__mips64__
_MIPS_ISA_MIPS64
__mips_isa_rev
__mips_o32
_ABIO32
_MIPS_SIM
__mips_n32
_ABIN32
__mips_n64
_ABI64
__mips_abicalls
__ABICALLS__
__mips_hard_float
__mips_soft_float
__mips_single_float
__mips_fpr
_MIPS_FPSET
__mips16
__mips_micromips
__mips_nan2008
__mips_abs2008
__mips_dsp_rev
__mips_dsp
__mips_dspr2
__mips_msa
__mips_no_madd4
_MIPS_SZPTR
_MIPS_SZINT
_MIPS_SZLONG
_MIPS_ARCH
_MIPS_ARCH_OCTEONP
_MIPS_ARCH_
__OCTEON__
-mfp32
-mfp64
__nvvm_read_ptx_sreg_tid_x
__nvvm_read_ptx_sreg_tid_y
__nvvm_read_ptx_sreg_tid_z
__nvvm_read_ptx_sreg_tid_w
__nvvm_read_ptx_sreg_ntid_x
__nvvm_read_ptx_sreg_ntid_y
__nvvm_read_ptx_sreg_ntid_z
__nvvm_read_ptx_sreg_ntid_w
__nvvm_read_ptx_sreg_ctaid_x
__nvvm_read_ptx_sreg_ctaid_y
__nvvm_read_ptx_sreg_ctaid_z
__nvvm_read_ptx_sreg_ctaid_w
__nvvm_read_ptx_sreg_nctaid_x
__nvvm_read_ptx_sreg_nctaid_y
__nvvm_read_ptx_sreg_nctaid_z
__nvvm_read_ptx_sreg_nctaid_w
__nvvm_read_ptx_sreg_laneid
__nvvm_read_ptx_sreg_warpid
__nvvm_read_ptx_sreg_nwarpid
__nvvm_read_ptx_sreg_smid
__nvvm_read_ptx_sreg_nsmid
__nvvm_read_ptx_sreg_gridid
__nvvm_read_ptx_sreg_lanemask_eq
__nvvm_read_ptx_sreg_lanemask_le
__nvvm_read_ptx_sreg_lanemask_lt
__nvvm_read_ptx_sreg_lanemask_ge
__nvvm_read_ptx_sreg_lanemask_gt
__nvvm_read_ptx_sreg_clock
__nvvm_read_ptx_sreg_clock64
__nvvm_read_ptx_sreg_pm0
__nvvm_read_ptx_sreg_pm1
__nvvm_read_ptx_sreg_pm2
__nvvm_read_ptx_sreg_pm3
__nvvm_prmt
__nvvm_fmax_ftz_f
__nvvm_fmax_f
__nvvm_fmin_ftz_f
__nvvm_fmin_f
__nvvm_fmax_d
__nvvm_fmin_d
__nvvm_mulhi_i
__nvvm_mulhi_ui
__nvvm_mulhi_ll
__nvvm_mulhi_ull
__nvvm_mul_rn_ftz_f
__nvvm_mul_rn_f
__nvvm_mul_rz_ftz_f
__nvvm_mul_rz_f
__nvvm_mul_rm_ftz_f
__nvvm_mul_rm_f
__nvvm_mul_rp_ftz_f
__nvvm_mul_rp_f
__nvvm_mul_rn_d
__nvvm_mul_rz_d
__nvvm_mul_rm_d
__nvvm_mul_rp_d
__nvvm_mul24_i
__nvvm_mul24_ui
__nvvm_div_approx_ftz_f
__nvvm_div_approx_f
__nvvm_div_rn_ftz_f
__nvvm_div_rn_f
__nvvm_div_rz_ftz_f
__nvvm_div_rz_f
__nvvm_div_rm_ftz_f
__nvvm_div_rm_f
__nvvm_div_rp_ftz_f
__nvvm_div_rp_f
__nvvm_div_rn_d
__nvvm_div_rz_d
__nvvm_div_rm_d
__nvvm_div_rp_d
__nvvm_sad_i
__nvvm_sad_ui
__nvvm_floor_ftz_f
__nvvm_floor_f
__nvvm_floor_d
__nvvm_ceil_ftz_f
__nvvm_ceil_f
__nvvm_ceil_d
__nvvm_fabs_ftz_f
__nvvm_fabs_f
__nvvm_fabs_d
__nvvm_round_ftz_f
__nvvm_round_f
__nvvm_round_d
__nvvm_trunc_ftz_f
__nvvm_trunc_f
__nvvm_trunc_d
__nvvm_saturate_ftz_f
__nvvm_saturate_f
__nvvm_saturate_d
__nvvm_ex2_approx_ftz_f
__nvvm_ex2_approx_f
__nvvm_ex2_approx_d
__nvvm_lg2_approx_ftz_f
__nvvm_lg2_approx_f
__nvvm_lg2_approx_d
__nvvm_sin_approx_ftz_f
__nvvm_sin_approx_f
__nvvm_cos_approx_ftz_f
__nvvm_cos_approx_f
__nvvm_fma_rn_ftz_f
__nvvm_fma_rn_f
__nvvm_fma_rz_ftz_f
__nvvm_fma_rz_f
__nvvm_fma_rm_ftz_f
__nvvm_fma_rm_f
__nvvm_fma_rp_ftz_f
__nvvm_fma_rp_f
__nvvm_fma_rn_d
__nvvm_fma_rz_d
__nvvm_fma_rm_d
__nvvm_fma_rp_d
__nvvm_rcp_rn_ftz_f
__nvvm_rcp_rn_f
__nvvm_rcp_rz_ftz_f
__nvvm_rcp_rz_f
__nvvm_rcp_rm_ftz_f
__nvvm_rcp_rm_f
__nvvm_rcp_rp_ftz_f
__nvvm_rcp_rp_f
__nvvm_rcp_rn_d
__nvvm_rcp_rz_d
__nvvm_rcp_rm_d
__nvvm_rcp_rp_d
__nvvm_rcp_approx_ftz_d
__nvvm_sqrt_rn_ftz_f
__nvvm_sqrt_rn_f
__nvvm_sqrt_rz_ftz_f
__nvvm_sqrt_rz_f
__nvvm_sqrt_rm_ftz_f
__nvvm_sqrt_rm_f
__nvvm_sqrt_rp_ftz_f
__nvvm_sqrt_rp_f
__nvvm_sqrt_approx_ftz_f
__nvvm_sqrt_approx_f
__nvvm_sqrt_rn_d
__nvvm_sqrt_rz_d
__nvvm_sqrt_rm_d
__nvvm_sqrt_rp_d
__nvvm_rsqrt_approx_ftz_f
__nvvm_rsqrt_approx_f
__nvvm_rsqrt_approx_d
__nvvm_add_rn_ftz_f
__nvvm_add_rn_f
__nvvm_add_rz_ftz_f
__nvvm_add_rz_f
__nvvm_add_rm_ftz_f
__nvvm_add_rm_f
__nvvm_add_rp_ftz_f
__nvvm_add_rp_f
__nvvm_add_rn_d
__nvvm_add_rz_d
__nvvm_add_rm_d
__nvvm_add_rp_d
__nvvm_d2f_rn_ftz
__nvvm_d2f_rn
__nvvm_d2f_rz_ftz
__nvvm_d2f_rz
__nvvm_d2f_rm_ftz
__nvvm_d2f_rm
__nvvm_d2f_rp_ftz
__nvvm_d2f_rp
__nvvm_d2i_rn
__nvvm_d2i_rz
__nvvm_d2i_rm
__nvvm_d2i_rp
__nvvm_d2ui_rn
__nvvm_d2ui_rz
__nvvm_d2ui_rm
__nvvm_d2ui_rp
__nvvm_i2d_rn
__nvvm_i2d_rz
__nvvm_i2d_rm
__nvvm_i2d_rp
__nvvm_ui2d_rn
__nvvm_ui2d_rz
__nvvm_ui2d_rm
__nvvm_ui2d_rp
__nvvm_f2i_rn_ftz
__nvvm_f2i_rn
__nvvm_f2i_rz_ftz
__nvvm_f2i_rz
__nvvm_f2i_rm_ftz
__nvvm_f2i_rm
__nvvm_f2i_rp_ftz
__nvvm_f2i_rp
__nvvm_f2ui_rn_ftz
__nvvm_f2ui_rn
__nvvm_f2ui_rz_ftz
__nvvm_f2ui_rz
__nvvm_f2ui_rm_ftz
__nvvm_f2ui_rm
__nvvm_f2ui_rp_ftz
__nvvm_f2ui_rp
__nvvm_i2f_rn
__nvvm_i2f_rz
__nvvm_i2f_rm
__nvvm_i2f_rp
__nvvm_ui2f_rn
__nvvm_ui2f_rz
__nvvm_ui2f_rm
__nvvm_ui2f_rp
__nvvm_lohi_i2d
__nvvm_d2i_lo
__nvvm_d2i_hi
__nvvm_f2ll_rn_ftz
__nvvm_f2ll_rn
__nvvm_f2ll_rz_ftz
__nvvm_f2ll_rz
__nvvm_f2ll_rm_ftz
__nvvm_f2ll_rm
__nvvm_f2ll_rp_ftz
__nvvm_f2ll_rp
__nvvm_f2ull_rn_ftz
ULLif
__nvvm_f2ull_rn
__nvvm_f2ull_rz_ftz
__nvvm_f2ull_rz
__nvvm_f2ull_rm_ftz
__nvvm_f2ull_rm
__nvvm_f2ull_rp_ftz
__nvvm_f2ull_rp
__nvvm_d2ll_rn
__nvvm_d2ll_rz
__nvvm_d2ll_rm
__nvvm_d2ll_rp
__nvvm_d2ull_rn
ULLid
__nvvm_d2ull_rz
__nvvm_d2ull_rm
__nvvm_d2ull_rp
__nvvm_ll2f_rn
__nvvm_ll2f_rz
__nvvm_ll2f_rm
__nvvm_ll2f_rp
__nvvm_ull2f_rn
fULLi
__nvvm_ull2f_rz
__nvvm_ull2f_rm
__nvvm_ull2f_rp
__nvvm_ll2d_rn
__nvvm_ll2d_rz
__nvvm_ll2d_rm
__nvvm_ll2d_rp
__nvvm_ull2d_rn
dULLi
__nvvm_ull2d_rz
__nvvm_ull2d_rm
__nvvm_ull2d_rp
__nvvm_f2h_rn_ftz
__nvvm_f2h_rn
__nvvm_bitcast_f2i
__nvvm_bitcast_i2f
__nvvm_bitcast_ll2d
__nvvm_bitcast_d2ll
__nvvm_fns
UiUiUii
ptx60|ptx61|ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74
__syncthreads
__nvvm_bar0_popc
__nvvm_bar0_and
__nvvm_bar0_or
__nvvm_bar_sync
__nvvm_bar_warp_sync
__nvvm_barrier_sync
__nvvm_barrier_sync_cnt
__nvvm_shfl_down_i32
__nvvm_shfl_down_f32
ffii
__nvvm_shfl_up_i32
__nvvm_shfl_up_f32
__nvvm_shfl_bfly_i32
__nvvm_shfl_bfly_f32
__nvvm_shfl_idx_i32
__nvvm_shfl_idx_f32
__nvvm_shfl_sync_down_i32
iUiiii
__nvvm_shfl_sync_down_f32
fUifii
__nvvm_shfl_sync_up_i32
__nvvm_shfl_sync_up_f32
__nvvm_shfl_sync_bfly_i32
__nvvm_shfl_sync_bfly_f32
__nvvm_shfl_sync_idx_i32
__nvvm_shfl_sync_idx_f32
__nvvm_vote_all
__nvvm_vote_any
__nvvm_vote_uni
__nvvm_vote_ballot
__nvvm_vote_all_sync
bUib
__nvvm_vote_any_sync
__nvvm_vote_uni_sync
__nvvm_vote_ballot_sync
UiUib
__nvvm_match_any_sync_i32
__nvvm_match_any_sync_i64
WiUiWi
__nvvm_match_all_sync_i32p
UiUiUii*
__nvvm_match_all_sync_i64p
WiUiWii*
__nvvm_redux_sync_add
(sm_80|sm_86),(ptx70|ptx71|ptx72|ptx73|ptx74)
__nvvm_redux_sync_min
__nvvm_redux_sync_max
__nvvm_redux_sync_umin
__nvvm_redux_sync_umax
__nvvm_redux_sync_and
__nvvm_redux_sync_xor
__nvvm_redux_sync_or
__nvvm_membar_cta
__nvvm_membar_gl
__nvvm_membar_sys
__nvvm_mbarrier_init
vWi*i
__nvvm_mbarrier_init_shared
vWi*3i
__nvvm_mbarrier_inval
vWi*
__nvvm_mbarrier_inval_shared
vWi*3
__nvvm_mbarrier_arrive
WiWi*
__nvvm_mbarrier_arrive_shared
WiWi*3
__nvvm_mbarrier_arrive_noComplete
WiWi*i
__nvvm_mbarrier_arrive_noComplete_shared
WiWi*3i
__nvvm_mbarrier_arrive_drop
__nvvm_mbarrier_arrive_drop_shared
__nvvm_mbarrier_arrive_drop_noComplete
__nvvm_mbarrier_arrive_drop_noComplete_shared
__nvvm_mbarrier_test_wait
bWi*Wi
__nvvm_mbarrier_test_wait_shared
bWi*3Wi
__nvvm_mbarrier_pending_count
__nvvm_memcpy
vUc*Uc*zi
__nvvm_memset
vUc*Uczi
__builtin_ptx_read_image2Dfi_
V4fiiii
__builtin_ptx_read_image2Dff_
V4fiiff
__builtin_ptx_read_image2Dii_
V4iiiii
__builtin_ptx_read_image2Dif_
V4iiiff
__builtin_ptx_read_image3Dfi_
V4fiiiiii
__builtin_ptx_read_image3Dff_
V4fiiffff
__builtin_ptx_read_image3Dii_
V4iiiiiii
__builtin_ptx_read_image3Dif_
V4iiiffff
__builtin_ptx_write_image2Df_
viiiffff
__builtin_ptx_write_image2Di_
viiiiiii
__builtin_ptx_write_image2Dui_
viiiUiUiUiUi
__builtin_ptx_get_image_depthi_
__builtin_ptx_get_image_heighti_
__builtin_ptx_get_image_widthi_
__builtin_ptx_get_image_channel_data_typei_
__builtin_ptx_get_image_channel_orderi_
__nvvm_atom_add_gen_i
iiD*i
__nvvm_atom_cta_add_gen_i
sm_60|sm_61|sm_62|sm_70|sm_72|sm_75|sm_80|sm_86
__nvvm_atom_sys_add_gen_i
__nvvm_atom_add_gen_l
LiLiD*Li
__nvvm_atom_cta_add_gen_l
__nvvm_atom_sys_add_gen_l
__nvvm_atom_add_gen_ll
__nvvm_atom_cta_add_gen_ll
__nvvm_atom_sys_add_gen_ll
__nvvm_atom_add_gen_f
ffD*f
__nvvm_atom_cta_add_gen_f
__nvvm_atom_sys_add_gen_f
__nvvm_atom_add_gen_d
ddD*d
__nvvm_atom_cta_add_gen_d
__nvvm_atom_sys_add_gen_d
__nvvm_atom_sub_gen_i
__nvvm_atom_sub_gen_l
__nvvm_atom_sub_gen_ll
__nvvm_atom_xchg_gen_i
__nvvm_atom_cta_xchg_gen_i
__nvvm_atom_sys_xchg_gen_i
__nvvm_atom_xchg_gen_l
__nvvm_atom_cta_xchg_gen_l
__nvvm_atom_sys_xchg_gen_l
__nvvm_atom_xchg_gen_ll
__nvvm_atom_cta_xchg_gen_ll
__nvvm_atom_sys_xchg_gen_ll
__nvvm_atom_max_gen_i
__nvvm_atom_cta_max_gen_i
__nvvm_atom_sys_max_gen_i
__nvvm_atom_max_gen_ui
UiUiD*Ui
__nvvm_atom_cta_max_gen_ui
__nvvm_atom_sys_max_gen_ui
__nvvm_atom_max_gen_l
__nvvm_atom_cta_max_gen_l
__nvvm_atom_sys_max_gen_l
__nvvm_atom_max_gen_ul
ULiULiD*ULi
__nvvm_atom_cta_max_gen_ul
__nvvm_atom_sys_max_gen_ul
__nvvm_atom_max_gen_ll
__nvvm_atom_cta_max_gen_ll
__nvvm_atom_sys_max_gen_ll
__nvvm_atom_max_gen_ull
ULLiULLiD*ULLi
__nvvm_atom_cta_max_gen_ull
__nvvm_atom_sys_max_gen_ull
__nvvm_atom_min_gen_i
__nvvm_atom_cta_min_gen_i
__nvvm_atom_sys_min_gen_i
__nvvm_atom_min_gen_ui
__nvvm_atom_cta_min_gen_ui
__nvvm_atom_sys_min_gen_ui
__nvvm_atom_min_gen_l
__nvvm_atom_cta_min_gen_l
__nvvm_atom_sys_min_gen_l
__nvvm_atom_min_gen_ul
__nvvm_atom_cta_min_gen_ul
__nvvm_atom_sys_min_gen_ul
__nvvm_atom_min_gen_ll
__nvvm_atom_cta_min_gen_ll
__nvvm_atom_sys_min_gen_ll
__nvvm_atom_min_gen_ull
__nvvm_atom_cta_min_gen_ull
__nvvm_atom_sys_min_gen_ull
__nvvm_atom_inc_gen_ui
__nvvm_atom_cta_inc_gen_ui
__nvvm_atom_sys_inc_gen_ui
__nvvm_atom_dec_gen_ui
__nvvm_atom_cta_dec_gen_ui
__nvvm_atom_sys_dec_gen_ui
__nvvm_atom_and_gen_i
__nvvm_atom_cta_and_gen_i
__nvvm_atom_sys_and_gen_i
__nvvm_atom_and_gen_l
__nvvm_atom_cta_and_gen_l
__nvvm_atom_sys_and_gen_l
__nvvm_atom_and_gen_ll
__nvvm_atom_cta_and_gen_ll
__nvvm_atom_sys_and_gen_ll
__nvvm_atom_or_gen_i
__nvvm_atom_cta_or_gen_i
__nvvm_atom_sys_or_gen_i
__nvvm_atom_or_gen_l
__nvvm_atom_cta_or_gen_l
__nvvm_atom_sys_or_gen_l
__nvvm_atom_or_gen_ll
__nvvm_atom_cta_or_gen_ll
__nvvm_atom_sys_or_gen_ll
__nvvm_atom_xor_gen_i
__nvvm_atom_cta_xor_gen_i
__nvvm_atom_sys_xor_gen_i
__nvvm_atom_xor_gen_l
__nvvm_atom_cta_xor_gen_l
__nvvm_atom_sys_xor_gen_l
__nvvm_atom_xor_gen_ll
__nvvm_atom_cta_xor_gen_ll
__nvvm_atom_sys_xor_gen_ll
__nvvm_atom_cas_gen_i
iiD*ii
__nvvm_atom_cta_cas_gen_i
__nvvm_atom_sys_cas_gen_i
__nvvm_atom_cas_gen_l
LiLiD*LiLi
__nvvm_atom_cta_cas_gen_l
__nvvm_atom_sys_cas_gen_l
__nvvm_atom_cas_gen_ll
__nvvm_atom_cta_cas_gen_ll
__nvvm_atom_sys_cas_gen_ll
__nvvm_compiler_error
vcC*4
__nvvm_compiler_warn
__nvvm_ldg_c
ccC*
__nvvm_ldg_s
ssC*
__nvvm_ldg_i
iiC*
__nvvm_ldg_l
LiLiC*
__nvvm_ldg_ll
LLiLLiC*
__nvvm_ldg_uc
UcUcC*
__nvvm_ldg_us
UsUsC*
__nvvm_ldg_ui
UiUiC*
__nvvm_ldg_ul
ULiULiC*
__nvvm_ldg_ull
ULLiULLiC*
__nvvm_ldg_f
ffC*
__nvvm_ldg_d
ddC*
__nvvm_ldg_c2
E2cE2cC*
__nvvm_ldg_c4
E4cE4cC*
__nvvm_ldg_s2
E2sE2sC*
__nvvm_ldg_s4
E4sE4sC*
__nvvm_ldg_i2
E2iE2iC*
__nvvm_ldg_i4
E4iE4iC*
__nvvm_ldg_ll2
E2LLiE2LLiC*
__nvvm_ldg_uc2
E2UcE2UcC*
__nvvm_ldg_uc4
E4UcE4UcC*
__nvvm_ldg_us2
E2UsE2UsC*
__nvvm_ldg_us4
E4UsE4UsC*
__nvvm_ldg_ui2
E2UiE2UiC*
__nvvm_ldg_ui4
E4UiE4UiC*
__nvvm_ldg_ull2
E2ULLiE2ULLiC*
__nvvm_ldg_f2
E2fE2fC*
__nvvm_ldg_f4
E4fE4fC*
__nvvm_ldg_d2
E2dE2dC*
__nvvm_isspacep_const
bvC*
__nvvm_isspacep_global
__nvvm_isspacep_local
__nvvm_isspacep_shared
__hmma_m16n16k16_ld_a
vi*iC*UiIi
(sm_70|sm_72|sm_75|sm_80|sm_86),(ptx60|ptx61|ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74)
__hmma_m16n16k16_ld_b
__hmma_m16n16k16_ld_c_f16
__hmma_m16n16k16_ld_c_f32
vf*fC*UiIi
__hmma_m16n16k16_st_c_f16
vi*i*UiIi
__hmma_m16n16k16_st_c_f32
vf*f*UiIi
__hmma_m32n8k16_ld_a
(sm_70|sm_72|sm_75|sm_80|sm_86),(ptx61|ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74)
__hmma_m32n8k16_ld_b
__hmma_m32n8k16_ld_c_f16
__hmma_m32n8k16_ld_c_f32
__hmma_m32n8k16_st_c_f16
__hmma_m32n8k16_st_c_f32
__hmma_m8n32k16_ld_a
__hmma_m8n32k16_ld_b
__hmma_m8n32k16_ld_c_f16
__hmma_m8n32k16_ld_c_f32
__hmma_m8n32k16_st_c_f16
__hmma_m8n32k16_st_c_f32
__hmma_m16n16k16_mma_f16f16
vi*iC*iC*iC*IiIi
__hmma_m16n16k16_mma_f32f16
vf*iC*iC*iC*IiIi
__hmma_m16n16k16_mma_f32f32
vf*iC*iC*fC*IiIi
__hmma_m16n16k16_mma_f16f32
vi*iC*iC*fC*IiIi
__hmma_m32n8k16_mma_f16f16
__hmma_m32n8k16_mma_f32f16
__hmma_m32n8k16_mma_f32f32
__hmma_m32n8k16_mma_f16f32
__hmma_m8n32k16_mma_f16f16
__hmma_m8n32k16_mma_f32f16
__hmma_m8n32k16_mma_f32f32
__hmma_m8n32k16_mma_f16f32
__bmma_m8n8k128_ld_a_b1
(sm_75|sm_80|sm_86),(ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74)
__bmma_m8n8k128_ld_b_b1
__bmma_m8n8k128_ld_c
__bmma_m8n8k128_mma_and_popc_b1
vi*iC*iC*iC*Ii
(sm_75|sm_80|sm_86),(ptx71|ptx72|ptx73|ptx74)
__bmma_m8n8k128_mma_xor_popc_b1
__bmma_m8n8k128_st_c_i32
__imma_m16n16k16_ld_a_s8
(sm_72|sm_75|sm_80|sm_86),(ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74)
__imma_m16n16k16_ld_a_u8
__imma_m16n16k16_ld_b_s8
__imma_m16n16k16_ld_b_u8
__imma_m16n16k16_ld_c
__imma_m16n16k16_mma_s8
__imma_m16n16k16_mma_u8
__imma_m16n16k16_st_c_i32
__imma_m32n8k16_ld_a_s8
__imma_m32n8k16_ld_a_u8
__imma_m32n8k16_ld_b_s8
__imma_m32n8k16_ld_b_u8
__imma_m32n8k16_ld_c
__imma_m32n8k16_mma_s8
__imma_m32n8k16_mma_u8
__imma_m32n8k16_st_c_i32
__imma_m8n32k16_ld_a_s8
__imma_m8n32k16_ld_a_u8
__imma_m8n32k16_ld_b_s8
__imma_m8n32k16_ld_b_u8
__imma_m8n32k16_ld_c
__imma_m8n32k16_mma_s8
__imma_m8n32k16_mma_u8
__imma_m8n32k16_st_c_i32
__imma_m8n8k32_ld_a_s4
__imma_m8n8k32_ld_a_u4
__imma_m8n8k32_ld_b_s4
__imma_m8n8k32_ld_b_u4
__imma_m8n8k32_ld_c
__imma_m8n8k32_mma_s4
__imma_m8n8k32_mma_u4
__imma_m8n8k32_st_c_i32
__dmma_m8n8k4_ld_a
vd*dC*UiIi
__dmma_m8n8k4_ld_b
__dmma_m8n8k4_ld_c
__dmma_m8n8k4_st_c_f64
__dmma_m8n8k4_mma_f64
vd*dC*dC*dC*IiIi
__mma_bf16_m16n16k16_ld_a
__mma_bf16_m16n16k16_ld_b
__mma_bf16_m16n16k16_mma_f32
__mma_bf16_m8n32k16_ld_a
__mma_bf16_m8n32k16_ld_b
__mma_bf16_m8n32k16_mma_f32
__mma_bf16_m32n8k16_ld_a
__mma_bf16_m32n8k16_ld_b
__mma_bf16_m32n8k16_mma_f32
__mma_tf32_m16n16k8_ld_a
__mma_tf32_m16n16k8_ld_b
__mma_tf32_m16n16k8_ld_c
__mma_m16n16k8_st_c_f32
__mma_tf32_m16n16k8_mma_f32
__nvvm_cp_async_mbarrier_arrive
__nvvm_cp_async_mbarrier_arrive_shared
__nvvm_cp_async_mbarrier_arrive_noinc
__nvvm_cp_async_mbarrier_arrive_noinc_shared
__nvvm_cp_async_ca_shared_global_4
vv*3vC*1
__nvvm_cp_async_ca_shared_global_8
__nvvm_cp_async_ca_shared_global_16
__nvvm_cp_async_cg_shared_global_16
__nvvm_cp_async_commit_group
__nvvm_cp_async_wait_group
__nvvm_cp_async_wait_all
e-p:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64
e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64
e-i64:64-i128:128-v16:16-v32:32-n16:32:64
__PTX__
__NVPTX__
__APPLE_CC__
6000
__APPLE__
__PTRAUTH_INTRINSICS__
__ptrauth_abi_version__
__STATIC__
__DYNAMIC__
__ENVIRONMENT_TV_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_WATCH_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_BRIDGE_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_DRIVERKIT_VERSION_MIN_REQUIRED__
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
__ENVIRONMENT_OS_VERSION_MIN_REQUIRED__
__APPLE_SEPOS__
_WIN32
_WIN64
WIN32
WINNT
WIN64
__MINGW64__
__MSVCRT__
__MINGW32__
_CPPRTTI
_CPPUNWIND
__BOOL_DEFINED
_CHAR_UNSIGNED
_MSC_VER
_MSC_FULL_VER
_MSC_BUILD
_HAS_CHAR16_T_LANGUAGE_SUPPORT
_MSVC_LANG
201705L
_MSC_EXTENSIONS
_RVALUE_REFERENCES_V2_SUPPORTED
_RVALUE_REFERENCES_SUPPORTED
_NATIVE_NULLPTR_SUPPORTED
_INTEGRAL_MAX_BITS
__le32__
__pnacl__
__builtin_ppc_popcntb
ULiULi
__builtin_ppc_poppar4
__builtin_ppc_poppar8
iULLi
__builtin_ppc_eieio
__builtin_ppc_iospace_eieio
__builtin_ppc_isync
__builtin_ppc_lwsync
__builtin_ppc_iospace_lwsync
__builtin_ppc_sync
__builtin_ppc_iospace_sync
__builtin_ppc_dcbfl
vvC*
__builtin_ppc_dcbflp
__builtin_ppc_dcbst
__builtin_ppc_dcbt
__builtin_ppc_dcbtst
__builtin_ppc_dcbz
__builtin_ppc_icbt
__builtin_ppc_fric
__builtin_ppc_frim
__builtin_ppc_frims
__builtin_ppc_frin
__builtin_ppc_frins
__builtin_ppc_frip
__builtin_ppc_frips
__builtin_ppc_friz
__builtin_ppc_frizs
__builtin_ppc_fsel
__builtin_ppc_fsels
__builtin_ppc_frsqrte
__builtin_ppc_frsqrtes
__builtin_ppc_fsqrt
__builtin_ppc_fsqrts
__builtin_ppc_compare_and_swap
iiD*i*i
__builtin_ppc_compare_and_swaplp
iLiD*Li*Li
__builtin_ppc_fetch_and_add
__builtin_ppc_fetch_and_addlp
__builtin_ppc_fetch_and_and
__builtin_ppc_fetch_and_andlp
__builtin_ppc_fetch_and_or
__builtin_ppc_fetch_and_orlp
__builtin_ppc_fetch_and_swap
__builtin_ppc_fetch_and_swaplp
__builtin_ppc_ldarx
LiLiD*
__builtin_ppc_lwarx
iiD*
__builtin_ppc_lharx
__builtin_ppc_lbarx
ccD*
__builtin_ppc_stdcx
iLiD*Li
__builtin_ppc_stwcx
__builtin_ppc_sthcx
isD*s
__builtin_ppc_stbcx
icD*i
__builtin_ppc_tdw
vLLiLLiIUi
__builtin_ppc_tw
viiIUi
__builtin_ppc_trap
__builtin_ppc_trapd
__builtin_ppc_fcfid
__builtin_ppc_fcfud
__builtin_ppc_fctid
__builtin_ppc_fctidz
__builtin_ppc_fctiw
__builtin_ppc_fctiwz
__builtin_ppc_fctudz
__builtin_ppc_fctuwz
__builtin_ppc_swdiv_nochk
__builtin_ppc_swdivs_nochk
__builtin_ppc_alignx
vIivC*
__builtin_ppc_rdlam
UWiUWiUWiUWIi
__builtin_ppc_compare_exp_uo
__builtin_ppc_compare_exp_lt
__builtin_ppc_compare_exp_gt
__builtin_ppc_compare_exp_eq
__builtin_ppc_test_data_class
idIi
__builtin_ppc_swdiv
__builtin_ppc_swdivs
__builtin_ppc_cmpeqb
__builtin_ppc_cmprb
iCIiii
__builtin_ppc_setb
__builtin_ppc_cmpb
__builtin_ppc_mulhd
LLiLiLi
__builtin_ppc_mulhdu
ULLiULiULi
__builtin_ppc_mulhw
__builtin_ppc_mulhwu
__builtin_ppc_maddhd
__builtin_ppc_maddhdu
ULLiULLiULLiULLi
__builtin_ppc_maddld
__builtin_ppc_rlwnm
UiUiUiIUi
__builtin_ppc_rlwimi
UiUiUiIUiIUi
__builtin_ppc_rldimi
ULLiULLiULLiIUiIULLi
__builtin_ppc_load2r
UsUs*
__builtin_ppc_load4r
UiUi*
__builtin_ppc_load8r
ULLiULLi*
__builtin_ppc_store2r
vUiUs*
__builtin_ppc_store4r
vUiUi*
__builtin_ppc_store8r
vULLiULLi*
__builtin_ppc_extract_exp
__builtin_ppc_extract_sig
__builtin_ppc_mtfsb0
vUIi
__builtin_ppc_mtfsb1
__builtin_ppc_mtfsf
vUIiUi
__builtin_ppc_mtfsfi
vUIiUIi
__builtin_ppc_insert_exp
ddULLi
__builtin_ppc_fmsub
__builtin_ppc_fmsubs
__builtin_ppc_fnmadd
__builtin_ppc_fnmadds
__builtin_ppc_fnmsub
__builtin_ppc_fnmsubs
__builtin_ppc_fre
__builtin_ppc_fres
__builtin_ppc_dcbtstt
__builtin_ppc_dcbtt
__builtin_ppc_mftbu
__builtin_ppc_mfmsr
__builtin_ppc_mfspr
ULiIi
__builtin_ppc_mtmsr
__builtin_ppc_mtspr
vIiULi
__builtin_ppc_stfiw
viC*d
__builtin_ppc_addex
LLiLLiLLiCIi
__builtin_ppc_get_timebase
ULLi
__builtin_altivec_vaddcuw
__builtin_altivec_vaddsbs
__builtin_altivec_vaddubs
__builtin_altivec_vaddshs
__builtin_altivec_vadduhs
__builtin_altivec_vaddsws
__builtin_altivec_vadduws
__builtin_altivec_vaddeuqm
V1ULLLiV1ULLLiV1ULLLiV1ULLLi
__builtin_altivec_vaddcuq
V1ULLLiV1ULLLiV1ULLLi
__builtin_altivec_vaddecuq
__builtin_altivec_vadduqm
V1ULLLiV16UcV16Uc
__builtin_altivec_vsubsbs
__builtin_altivec_vsububs
__builtin_altivec_vsubshs
__builtin_altivec_vsubuhs
__builtin_altivec_vsubsws
__builtin_altivec_vsubuws
__builtin_altivec_vsubeuqm
__builtin_altivec_vsubcuq
__builtin_altivec_vsubecuq
__builtin_altivec_vsubuqm
__builtin_altivec_vavgsb
__builtin_altivec_vavgub
__builtin_altivec_vavgsh
__builtin_altivec_vavguh
__builtin_altivec_vavgsw
__builtin_altivec_vavguw
__builtin_altivec_vrfip
__builtin_altivec_vcfsx
V4fV4SiIi
__builtin_altivec_vcfux
V4fV4UiIi
__builtin_altivec_vctsxs
V4SiV4fIi
__builtin_altivec_vctuxs
V4UiV4fIi
__builtin_altivec_dss
__builtin_altivec_dssall
__builtin_altivec_dst
vvC*iUIi
__builtin_altivec_dstt
__builtin_altivec_dstst
__builtin_altivec_dststt
__builtin_altivec_vexptefp
__builtin_altivec_vrfim
__builtin_altivec_lvx
V4iLivC*
__builtin_altivec_lvxl
__builtin_altivec_lvebx
V16cLivC*
__builtin_altivec_lvehx
V8sLivC*
__builtin_altivec_lvewx
__builtin_altivec_vlogefp
__builtin_altivec_lvsl
V16cUcvC*
__builtin_altivec_lvsr
__builtin_altivec_vmaddfp
__builtin_altivec_vmhaddshs
__builtin_altivec_vmhraddshs
__builtin_altivec_vmsumubm
V4UiV16UcV16UcV4Ui
__builtin_altivec_vmsummbm
V4SiV16ScV16UcV4Si
__builtin_altivec_vmsumuhm
V4UiV8UsV8UsV4Ui
__builtin_altivec_vmsumshm
V4SiV8SsV8SsV4Si
__builtin_altivec_vmsumuhs
__builtin_altivec_vmsumshs
__builtin_altivec_vmuleub
__builtin_altivec_vmulesb
__builtin_altivec_vmuleuh
__builtin_altivec_vmulesh
__builtin_altivec_vmuleuw
__builtin_altivec_vmulesw
__builtin_altivec_vmuloub
__builtin_altivec_vmulosb
__builtin_altivec_vmulouh
__builtin_altivec_vmulosh
__builtin_altivec_vmulouw
__builtin_altivec_vmulosw
__builtin_altivec_vmuleud
V1ULLLiV2ULLiV2ULLi
__builtin_altivec_vmulesd
V1SLLLiV2SLLiV2SLLi
__builtin_altivec_vmuloud
__builtin_altivec_vmulosd
__builtin_altivec_vmsumcud
V1ULLLiV2ULLiV2ULLiV1ULLLi
__builtin_altivec_vnmsubfp
__builtin_altivec_vpkpx
V8sV4UiV4Ui
__builtin_altivec_vpkuhus
V16UcV8UsV8Us
__builtin_altivec_vpkshss
V16ScV8SsV8Ss
__builtin_altivec_vpkuwus
V8UsV4UiV4Ui
__builtin_altivec_vpkswss
V8SsV4SiV4Si
__builtin_altivec_vpkshus
V16UcV8SsV8Ss
__builtin_altivec_vpkswus
V8UsV4SiV4Si
__builtin_altivec_vpksdss
V4SiV2SLLiV2SLLi
__builtin_altivec_vpksdus
V4UiV2SLLiV2SLLi
__builtin_altivec_vpkudus
V4UiV2ULLiV2ULLi
__builtin_altivec_vpkudum
__builtin_altivec_vperm_4si
V4iV4iV4iV16Uc
__builtin_altivec_stvx
vV4iLiv*
__builtin_altivec_stvxl
__builtin_altivec_stvebx
vV16cLiv*
__builtin_altivec_stvehx
vV8sLiv*
__builtin_altivec_stvewx
__builtin_altivec_vcmpbfp
__builtin_altivec_vcmpgefp
__builtin_altivec_vcmpequb
__builtin_altivec_vcmpequh
__builtin_altivec_vcmpequw
__builtin_altivec_vcmpequd
__builtin_altivec_vcmpeqfp
__builtin_altivec_vcmpneb
__builtin_altivec_vcmpneh
__builtin_altivec_vcmpnew
__builtin_altivec_vcmpnezb
__builtin_altivec_vcmpnezh
__builtin_altivec_vcmpnezw
__builtin_altivec_vcmpgtsb
V16cV16ScV16Sc
__builtin_altivec_vcmpgtub
V16cV16UcV16Uc
__builtin_altivec_vcmpgtsh
V8sV8SsV8Ss
__builtin_altivec_vcmpgtuh
V8sV8UsV8Us
__builtin_altivec_vcmpgtsw
V4iV4SiV4Si
__builtin_altivec_vcmpgtuw
V4iV4UiV4Ui
__builtin_altivec_vcmpgtsd
__builtin_altivec_vcmpgtud
V2LLiV2ULLiV2ULLi
__builtin_altivec_vcmpgtfp
__builtin_altivec_vcmpequq
V1LLLiV1ULLLiV1ULLLi
__builtin_altivec_vcmpgtsq
V1LLLiV1SLLLiV1SLLLi
__builtin_altivec_vcmpgtuq
__builtin_altivec_vcmpequq_p
iiV1ULLLiV1LLLi
__builtin_altivec_vcmpgtsq_p
iiV1SLLLiV1SLLLi
__builtin_altivec_vcmpgtuq_p
iiV1ULLLiV1ULLLi
__builtin_altivec_vmaxsb
__builtin_altivec_vmaxub
__builtin_altivec_vmaxsh
__builtin_altivec_vmaxuh
__builtin_altivec_vmaxsw
__builtin_altivec_vmaxuw
__builtin_altivec_vmaxsd
__builtin_altivec_vmaxud
__builtin_altivec_vmaxfp
__builtin_altivec_mfvscr
V8Us
__builtin_altivec_vminsb
__builtin_altivec_vminub
__builtin_altivec_vminsh
__builtin_altivec_vminuh
__builtin_altivec_vminsw
__builtin_altivec_vminuw
__builtin_altivec_vminsd
__builtin_altivec_vminud
__builtin_altivec_vminfp
__builtin_altivec_mtvscr
vV4i
__builtin_altivec_vrefp
__builtin_altivec_vrlb
V16cV16cV16Uc
__builtin_altivec_vrlh
V8sV8sV8Us
__builtin_altivec_vrlw
V4iV4iV4Ui
__builtin_altivec_vrld
V2LLiV2LLiV2ULLi
__builtin_altivec_vsel_4si
V4iV4iV4iV4Ui
__builtin_altivec_vsl
__builtin_altivec_vslo
__builtin_altivec_vsrab
__builtin_altivec_vsrah
__builtin_altivec_vsraw
__builtin_altivec_vsr
__builtin_altivec_vsro
__builtin_altivec_vrfin
__builtin_altivec_vrsqrtefp
__builtin_altivec_vsubcuw
__builtin_altivec_vsum4sbs
V4SiV16ScV4Si
__builtin_altivec_vsum4ubs
V4UiV16UcV4Ui
__builtin_altivec_vsum4shs
V4SiV8SsV4Si
__builtin_altivec_vsum2sws
__builtin_altivec_vsumsws
__builtin_altivec_vrfiz
__builtin_altivec_vupkhsb
V8sV16c
__builtin_altivec_vupkhpx
V4UiV8s
__builtin_altivec_vupkhsh
V4iV8s
__builtin_altivec_vupkhsw
V2LLiV4i
__builtin_altivec_vupklsb
__builtin_altivec_vupklpx
__builtin_altivec_vupklsh
__builtin_altivec_vupklsw
__builtin_altivec_vcmpbfp_p
iiV4fV4f
__builtin_altivec_vcmpgefp_p
__builtin_altivec_vcmpequb_p
iiV16cV16c
__builtin_altivec_vcmpequh_p
iiV8sV8s
__builtin_altivec_vcmpequw_p
iiV4iV4i
__builtin_altivec_vcmpequd_p
iiV2LLiV2LLi
__builtin_altivec_vcmpeqfp_p
__builtin_altivec_vcmpneb_p
__builtin_altivec_vcmpneh_p
__builtin_altivec_vcmpnew_p
__builtin_altivec_vcmpned_p
__builtin_altivec_vcmpgtsb_p
iiV16ScV16Sc
__builtin_altivec_vcmpgtub_p
iiV16UcV16Uc
__builtin_altivec_vcmpgtsh_p
iiV8SsV8Ss
__builtin_altivec_vcmpgtuh_p
iiV8UsV8Us
__builtin_altivec_vcmpgtsw_p
iiV4SiV4Si
__builtin_altivec_vcmpgtuw_p
iiV4UiV4Ui
__builtin_altivec_vcmpgtsd_p
__builtin_altivec_vcmpgtud_p
iiV2ULLiV2ULLi
__builtin_altivec_vcmpgtfp_p
__builtin_altivec_vgbbd
V16UcV16Uc
__builtin_altivec_vbpermq
V2ULLiV16UcV16Uc
__builtin_altivec_vbpermd
V2ULLiV2ULLiV16Uc
__builtin_altivec_crypto_vsbox
V2ULLiV2ULLi
__builtin_altivec_crypto_vpermxor
__builtin_altivec_crypto_vshasigmaw
V4UiV4UiIiIi
__builtin_altivec_crypto_vshasigmad
V2ULLiV2ULLiIiIi
__builtin_altivec_crypto_vcipher
__builtin_altivec_crypto_vcipherlast
__builtin_altivec_crypto_vncipher
__builtin_altivec_crypto_vncipherlast
__builtin_altivec_crypto_vpmsumb
__builtin_altivec_crypto_vpmsumh
__builtin_altivec_crypto_vpmsumw
__builtin_altivec_crypto_vpmsumd
__builtin_altivec_vclzb
__builtin_altivec_vclzh
V8UsV8Us
__builtin_altivec_vclzw
V4UiV4Ui
__builtin_altivec_vclzd
__builtin_altivec_vctzb
__builtin_altivec_vctzh
__builtin_altivec_vctzw
__builtin_altivec_vctzd
__builtin_altivec_vclzlsbb
SiV16Uc
__builtin_altivec_vctzlsbb
__builtin_altivec_vprtybw
__builtin_altivec_vprtybd
__builtin_altivec_vprtybq
V1ULLLiV1ULLLi
__builtin_altivec_vpopcntb
__builtin_altivec_vpopcnth
__builtin_altivec_vpopcntw
__builtin_altivec_vpopcntd
__builtin_altivec_vabsdub
__builtin_altivec_vabsduh
__builtin_altivec_vabsduw
__builtin_altivec_vslv
__builtin_altivec_vsrv
__builtin_altivec_vrlwmi
__builtin_altivec_vrldmi
__builtin_altivec_vrlwnm
__builtin_altivec_vrldnm
__builtin_altivec_vextsb2w
V4SiV16Sc
__builtin_altivec_vextsb2d
V2SLLiV16Sc
__builtin_altivec_vextsh2w
V4SiV8Ss
__builtin_altivec_vextsh2d
V2SLLiV8Ss
__builtin_altivec_vextsw2d
V2SLLiV4Si
__builtin_altivec_vextsd2q
V1SLLLiV2SLLi
__builtin_altivec_vextractbm
UiV16Uc
__builtin_altivec_vextracthm
__builtin_altivec_vextractwm
__builtin_altivec_vextractdm
UiV2ULLi
__builtin_altivec_vextractqm
UiV1ULLLi
__builtin_altivec_vdivesw
__builtin_altivec_vdiveuw
__builtin_altivec_vdivesd
__builtin_altivec_vdiveud
__builtin_altivec_vdivesq
V1SLLLiV1SLLLiV1SLLLi
__builtin_altivec_vdiveuq
__builtin_altivec_vmulhsw
__builtin_altivec_vmulhuw
__builtin_altivec_vmulhsd
__builtin_altivec_vmulhud
__builtin_altivec_vexpandbm
__builtin_altivec_vexpandhm
__builtin_altivec_vexpandwm
__builtin_altivec_vexpanddm
__builtin_altivec_vexpandqm
__builtin_altivec_vcntmbb
ULLiV16UcUi
__builtin_altivec_vcntmbh
ULLiV8UsUi
__builtin_altivec_vcntmbw
ULLiV4UiUi
__builtin_altivec_vcntmbd
ULLiV2ULLiUi
__builtin_altivec_mtvsrbm
V16UcULLi
__builtin_altivec_mtvsrhm
V8UsULLi
__builtin_altivec_mtvsrwm
V4UiULLi
__builtin_altivec_mtvsrdm
V2ULLiULLi
__builtin_altivec_mtvsrqm
V1ULLLiULLi
__builtin_altivec_vpdepd
__builtin_altivec_vpextd
__builtin_altivec_vstribr
V16cV16c
__builtin_altivec_vstribl
__builtin_altivec_vstrihr
V8sV8s
__builtin_altivec_vstrihl
__builtin_altivec_vstribr_p
iiV16c
__builtin_altivec_vstribl_p
__builtin_altivec_vstrihr_p
iiV8s
__builtin_altivec_vstrihl_p
__builtin_altivec_vcfuged
__builtin_altivec_vgnb
ULLiV1ULLLiIi
__builtin_altivec_vclrlb
__builtin_altivec_vclrrb
__builtin_altivec_vclzdm
__builtin_altivec_vctzdm
__builtin_altivec_vsldbi
V16UcV16UcV16UcIi
__builtin_altivec_vsrdbi
__builtin_altivec_vinsblx
V16UcV16UcUiUi
__builtin_altivec_vinsbrx
__builtin_altivec_vinshlx
V8UsV8UsUiUi
__builtin_altivec_vinshrx
__builtin_altivec_vinswlx
V4UiV4UiUiUi
__builtin_altivec_vinswrx
__builtin_altivec_vinsdlx
V2ULLiV2ULLiULLiULLi
__builtin_altivec_vinsdrx
__builtin_altivec_vinsbvlx
V16UcV16UcUiV16Uc
__builtin_altivec_vinsbvrx
__builtin_altivec_vinshvlx
V8UsV8UsUiV8Us
__builtin_altivec_vinshvrx
__builtin_altivec_vinswvlx
V4UiV4UiUiV4Ui
__builtin_altivec_vinswvrx
__builtin_altivec_vec_replace_elt
V4UiV4UiUiIi
__builtin_altivec_vec_replace_unaligned
__builtin_altivec_vextdubvlx
V2ULLiV16UcV16UcUi
__builtin_altivec_vextdubvrx
__builtin_altivec_vextduhvlx
V2ULLiV8UsV8UsUi
__builtin_altivec_vextduhvrx
__builtin_altivec_vextduwvlx
V2ULLiV4UiV4UiUi
__builtin_altivec_vextduwvrx
__builtin_altivec_vextddvlx
V2ULLiV2ULLiV2ULLiUi
__builtin_altivec_vextddvrx
__builtin_altivec_vrlqmi
__builtin_altivec_vrlqnm
__builtin_vsx_lxvd2x
V2dLivC*
__builtin_vsx_lxvw4x
__builtin_vsx_lxvd2x_be
V2dSLLivC*
__builtin_vsx_lxvw4x_be
V4iSLLivC*
__builtin_vsx_stxvd2x
vV2dLiv*
__builtin_vsx_stxvw4x
__builtin_vsx_stxvd2x_be
vV2dSLLivC*
__builtin_vsx_stxvw4x_be
vV4iSLLivC*
__builtin_vsx_lxvl
V4ivC*ULLi
__builtin_vsx_lxvll
__builtin_vsx_stxvl
vV4iv*ULLi
__builtin_vsx_stxvll
__builtin_vsx_ldrmb
V16UcCc*Ii
__builtin_vsx_strmb
vCc*IiV16Uc
__builtin_vsx_xvmaxdp
__builtin_vsx_xvmaxsp
__builtin_vsx_xsmaxdp
__builtin_vsx_xvmindp
__builtin_vsx_xvminsp
__builtin_vsx_xsmindp
__builtin_vsx_xvdivdp
__builtin_vsx_xvdivsp
__builtin_vsx_xvrdpip
__builtin_vsx_xvrspip
__builtin_vsx_xvcmpeqdp
__builtin_vsx_xvcmpeqsp
__builtin_vsx_xvcmpeqdp_p
iiV2dV2d
__builtin_vsx_xvcmpeqsp_p
__builtin_vsx_xvcmpgedp
__builtin_vsx_xvcmpgesp
__builtin_vsx_xvcmpgedp_p
__builtin_vsx_xvcmpgesp_p
__builtin_vsx_xvcmpgtdp
__builtin_vsx_xvcmpgtsp
__builtin_vsx_xvcmpgtdp_p
__builtin_vsx_xvcmpgtsp_p
__builtin_vsx_xvrdpim
__builtin_vsx_xvrspim
__builtin_vsx_xvrdpi
__builtin_vsx_xvrspi
__builtin_vsx_xvrdpic
__builtin_vsx_xvrspic
__builtin_vsx_xvrdpiz
__builtin_vsx_xvrspiz
__builtin_vsx_xvmaddadp
__builtin_vsx_xvmaddasp
__builtin_vsx_xvmsubadp
__builtin_vsx_xvmsubasp
__builtin_vsx_xvmuldp
__builtin_vsx_xvmulsp
__builtin_vsx_xvnmaddadp
__builtin_vsx_xvnmaddasp
__builtin_vsx_xvnmsubadp
__builtin_vsx_xvnmsubasp
__builtin_vsx_xvredp
__builtin_vsx_xvresp
__builtin_vsx_xvrsqrtedp
__builtin_vsx_xvrsqrtesp
__builtin_vsx_xvsqrtdp
__builtin_vsx_xvsqrtsp
__builtin_vsx_xxleqv
__builtin_vsx_xvcpsgndp
__builtin_vsx_xvcpsgnsp
__builtin_vsx_xvabssp
__builtin_vsx_xvabsdp
__builtin_vsx_xxgenpcvbm
V16UcV16Uci
__builtin_vsx_xxgenpcvhm
V8UsV8Usi
__builtin_vsx_xxgenpcvwm
V4UiV4Uii
__builtin_vsx_xxgenpcvdm
V2ULLiV2ULLii
__builtin_vsx_xviexpdp
V2dV2ULLiV2ULLi
__builtin_vsx_xviexpsp
V4fV4UiV4Ui
__builtin_vsx_xvxexpdp
__builtin_vsx_xvxexpsp
__builtin_vsx_xvxsigdp
__builtin_vsx_xvxsigsp
__builtin_vsx_xvcvdpsxws
V4SiV2d
__builtin_vsx_xvcvdpuxws
V4UiV2d
__builtin_vsx_xvcvspsxds
V2SLLiV4f
__builtin_vsx_xvcvspuxds
V2ULLiV4f
__builtin_vsx_xvcvsxwdp
__builtin_vsx_xvcvuxwdp
V2dV4Ui
__builtin_vsx_xvcvspdp
__builtin_vsx_xvcvsxdsp
V4fV2SLLi
__builtin_vsx_xvcvuxdsp
V4fV2ULLi
__builtin_vsx_xvcvdpsp
V4fV2d
__builtin_vsx_xvcvsphp
__builtin_vsx_xvcvhpsp
V4fV8Us
__builtin_vsx_xvcvspbf16
__builtin_vsx_xvcvbf16spn
__builtin_vsx_xvtstdcdp
V2ULLiV2dIi
__builtin_vsx_xvtstdcsp
__builtin_vsx_insertword
V16UcV4UiV16UcIi
__builtin_vsx_extractuword
V2ULLiV16UcIi
__builtin_vsx_xxpermdi
__builtin_vsx_xxsldwi
__builtin_vsx_xxeval
V2ULLiV2ULLiV2ULLiV2ULLiIi
__builtin_vsx_xvtlsbb
iV16UcUi
__builtin_vsx_xvtdivdp
iV2dV2d
__builtin_vsx_xvtdivsp
iV4fV4f
__builtin_vsx_xvtsqrtdp
iV2d
__builtin_vsx_xvtsqrtsp
iV4f
__builtin_vsx_xxpermx
V16UcV16UcV16UcV16UcIi
__builtin_vsx_xxblendvb
__builtin_vsx_xxblendvh
__builtin_vsx_xxblendvw
__builtin_vsx_xxblendvd
__builtin_sqrtf128_round_to_odd
LLdLLd
__builtin_addf128_round_to_odd
LLdLLdLLd
__builtin_subf128_round_to_odd
__builtin_mulf128_round_to_odd
__builtin_divf128_round_to_odd
__builtin_fmaf128_round_to_odd
LLdLLdLLdLLd
__builtin_truncf128_round_to_odd
dLLd
__builtin_vsx_scalar_extract_expq
ULLiLLd
__builtin_vsx_scalar_insert_exp_qp
LLdLLdULLi
__builtin_ppc_rsqrtf
__builtin_ppc_rsqrtd
__builtin_ppc_recipdivf
__builtin_ppc_recipdivd
__builtin_tbegin
UiUIi
__builtin_tend
__builtin_tabort
__builtin_tabortdc
__builtin_tabortdci
__builtin_tabortwc
__builtin_tabortwci
__builtin_tcheck
__builtin_treclaim
__builtin_trechkpt
__builtin_tsr
__builtin_tendall
__builtin_tresume
__builtin_tsuspend
__builtin_get_texasr
__builtin_get_texasru
__builtin_get_tfhar
__builtin_get_tfiar
__builtin_set_texasr
vLUi
__builtin_set_texasru
__builtin_set_tfhar
__builtin_set_tfiar
__builtin_ttest
__builtin_divwe
SiSiSi
__builtin_divweu
__builtin_divde
__builtin_divdeu
__builtin_bpermd
__builtin_pdepd
__builtin_pextd
__builtin_cfuged
__builtin_cntlzdm
__builtin_cnttzdm
__builtin_darn
__builtin_darn_raw
__builtin_darn_32
__builtin_unpack_vector_int128
ULLiV1LLLii
__builtin_pack_vector_int128
V1LLLiULLiULLi
__builtin_setrnd
__builtin_readflm
__builtin_setflm
__builtin_dcbf
__builtin_mma_lxvp
__builtin_mma_stxvp
__builtin_mma_assemble_pair
__builtin_mma_disassemble_pair
__builtin_vsx_build_pair
__builtin_mma_build_acc
__builtin_vsx_lxvp
__builtin_vsx_stxvp
__builtin_vsx_assemble_pair
__builtin_vsx_disassemble_pair
__builtin_mma_assemble_acc
__builtin_mma_disassemble_acc
__builtin_mma_xxmtacc
__builtin_mma_xxmfacc
__builtin_mma_xxsetaccz
__builtin_mma_xvi4ger8
__builtin_mma_xvi8ger4
__builtin_mma_xvi16ger2
__builtin_mma_xvi16ger2s
__builtin_mma_xvf16ger2
__builtin_mma_xvf32ger
__builtin_mma_xvf64ger
__builtin_mma_pmxvi4ger8
__builtin_mma_pmxvi8ger4
__builtin_mma_pmxvi16ger2
__builtin_mma_pmxvi16ger2s
__builtin_mma_pmxvf16ger2
__builtin_mma_pmxvf32ger
__builtin_mma_pmxvf64ger
__builtin_mma_xvi4ger8pp
__builtin_mma_xvi8ger4pp
__builtin_mma_xvi8ger4spp
__builtin_mma_xvi16ger2pp
__builtin_mma_xvi16ger2spp
__builtin_mma_pmxvi4ger8pp
__builtin_mma_pmxvi8ger4pp
__builtin_mma_pmxvi8ger4spp
__builtin_mma_pmxvi16ger2pp
__builtin_mma_pmxvi16ger2spp
__builtin_mma_xvf16ger2pp
__builtin_mma_xvf16ger2pn
__builtin_mma_xvf16ger2np
__builtin_mma_xvf16ger2nn
__builtin_mma_pmxvf16ger2pp
__builtin_mma_pmxvf16ger2pn
__builtin_mma_pmxvf16ger2np
__builtin_mma_pmxvf16ger2nn
__builtin_mma_xvf32gerpp
__builtin_mma_xvf32gerpn
__builtin_mma_xvf32gernp
__builtin_mma_xvf32gernn
__builtin_mma_pmxvf32gerpp
__builtin_mma_pmxvf32gerpn
__builtin_mma_pmxvf32gernp
__builtin_mma_pmxvf32gernn
__builtin_mma_xvf64gerpp
__builtin_mma_xvf64gerpn
__builtin_mma_xvf64gernp
__builtin_mma_xvf64gernn
__builtin_mma_pmxvf64gerpp
__builtin_mma_pmxvf64gerpn
__builtin_mma_pmxvf64gernp
__builtin_mma_pmxvf64gernn
__builtin_mma_xvbf16ger2
__builtin_mma_pmxvbf16ger2
__builtin_mma_xvbf16ger2pp
__builtin_mma_xvbf16ger2pn
__builtin_mma_xvbf16ger2np
__builtin_mma_xvbf16ger2nn
__builtin_mma_pmxvbf16ger2pp
__builtin_mma_pmxvbf16ger2pn
__builtin_mma_pmxvbf16ger2np
__builtin_mma_pmxvbf16ger2nn
+altivec
+vsx
+bpermd
+extdiv
+power8-vector
+direct-move
+htm
+float128
+power9-vector
+power10-vector
+pcrelative-memops
+prefix-instrs
+spe
+efpu2
+paired-vector-memops
+mma
+rop-protect
+privileged
+isa-v206-instructions
+isa-v207-instructions
+isa-v30-instructions
+isa-v31-instructions
__ppc__
_ARCH_PPC
__powerpc__
__POWERPC__
__ppc64__
__PPC64__
__THW_PPC__
__PPC
__powerpc
_LITTLE_ENDIAN
_BIG_ENDIAN
_CALL_ELF
_CALL_LINUX
__NATURAL_ALIGNMENT__
__LONG_DOUBLE_128__
__LONGDOUBLE128
__LONG_DOUBLE_IEEE128__
__LONG_DOUBLE_IBM128__
__LONGDOUBLE64
__STRUCT_PARM_ALIGN__
_ARCH_
_ARCH_PPCGR
_ARCH_PPCSQ
_ARCH_440
_ARCH_603
_ARCH_604
_ARCH_PWR4
_ARCH_PWR5
_ARCH_PWR5X
_ARCH_PWR6
_ARCH_PWR6X
_ARCH_PWR7
_ARCH_PWR8
_ARCH_PWR9
_ARCH_PWR10
_ARCH_A2
__NO_LWSYNC__
_ARCH_PWR_FUTURE
__VEC__
10206
__ALTIVEC__
__SPE__
__NO_FPRS__
__VSX__
__POWER8_VECTOR__
__CRYPTO__
__HTM__
__POWER9_VECTOR__
__MMA__
__ROP_PROTECT__
__POWER10_VECTOR__
__PCREL__
__HAVE_BSWAP__
direct-move
rop-protect
privileged
-mfloat128
-mmma
+pcrel
-mpcrel
-mcpu=pwr10 -mprefixed
+prefixed
-mprefixed
-mcpu=pwr10
-mpaired-vector-memops
-mrop-protect
-mprivileged
pcrelative-memops
prefix-instrs
isa-v31-instructions
float128
efpu2
vrsave
vscr
spe_acc
spefscr
fr10
fr11
fr12
fr13
fr14
fr15
fr16
fr17
fr18
fr19
fr20
fr21
fr22
fr23
fr24
fr25
fr26
fr27
fr28
fr29
fr30
fr31
__popcntb
__poppar4
__poppar8
__eieio
__iospace_eieio
__isync
__lwsync
__iospace_lwsync
__sync
__iospace_sync
__dcbfl
__dcbflp
__dcbst
__dcbt
__dcbtst
__dcbz
__icbt
__compare_and_swap
__compare_and_swaplp
__fetch_and_add
__fetch_and_addlp
__fetch_and_and
__fetch_and_andlp
__fetch_and_or
__fetch_and_orlp
__fetch_and_swap
__fetch_and_swaplp
__ldarx
__lwarx
__lharx
__lbarx
__stfiw
__stdcx
__stwcx
__sthcx
__stbcx
__tdw
__tw
__trap
__trapd
__fcfid
__fcfud
__fctid
__fctidz
__fctiw
__fctiwz
__fctudz
__fctuwz
__cmpeqb
__cmprb
__setb
__cmpb
__mulhd
__mulhdu
__mulhw
__mulhwu
__maddhd
__maddhdu
__maddld
__rlwnm
__rlwimi
__rldimi
__load2r
__load4r
__load8r
__store2r
__store4r
__store8r
__extract_exp
__extract_sig
__mtfsb0
__mtfsb1
__mtfsf
__mtfsfi
__insert_exp
__fmsub
__fmsubs
__fnmadd
__fnmadds
__fnmsub
__fnmsubs
__fre
__fres
__swdiv_nochk
__swdivs_nochk
__alloca
__builtin_alloca
__vcipher
__vcipherlast
__vncipher
__vncipherlast
__vpermxor
__vpmsumb
__vpmsumd
__vpmsumh
__vpmsumw
__divde
__divwe
__divdeu
__divweu
__alignx
__bcopy
bcopy
__bpermd
__cntlz4
__builtin_clz
__cntlz8
__builtin_clzll
__cmplx
__builtin_complex
__cmplxf
__cnttz4
__builtin_ctz
__cnttz8
__builtin_ctzll
__darn
__darn_32
__darn_raw
__dcbf
__fmadd
__builtin_fma
__fmadds
__builtin_fmaf
__labs
__builtin_labs
__llabs
__builtin_llabs
__popcnt4
__builtin_popcount
__popcnt8
__builtin_popcountll
__readflm
__rotatel4
__builtin_rotateleft32
__rotatel8
__builtin_rotateleft64
__rdlam
__setflm
__setrnd
__dcbtstt
__dcbtt
__mftbu
__mfmsr
__mtmsr
__mfspr
__mtspr
__fric
__frim
__frims
__frin
__frins
__frip
__frips
__friz
__frizs
__fsel
__fsels
__frsqrte
__frsqrtes
__fsqrt
__fsqrts
__addex
__cmplxl
__compare_exp_uo
__compare_exp_lt
__compare_exp_gt
__compare_exp_eq
__test_data_class
__swdiv
__swdivs
-vsx
-mpower8-vector
-mdirect-move
-mpower9-vector
-mpower10-vector
-mno-vsx
vs10
vs11
vs12
vs13
vs14
vs15
vs16
vs17
vs18
vs19
vs20
vs21
vs22
vs23
vs24
vs25
vs26
vs27
vs28
vs29
vs30
vs31
vs32
vs33
vs34
vs35
vs36
vs37
vs38
vs39
vs40
vs41
vs42
vs43
vs44
vs45
vs46
vs47
vs48
vs49
vs50
vs51
vs52
vs53
vs54
vs55
vs56
vs57
vs58
vs59
vs60
vs61
vs62
vs63
ppc32
fs10
fs11
ft10
ft11
__riscv
__riscv_xlen
__riscv_cmodel_medlow
__riscv_cmodel_medany
__riscv_float_abi_single
__riscv_float_abi_double
__riscv_float_abi_soft
__riscv_abi_rve
__riscv_arch_test
__riscv_
__riscv_mul
__riscv_div
__riscv_muldiv
__riscv_atomic
__riscv_flen
__riscv_fdiv
__riscv_fsqrt
__riscv_compressed
__riscv_vector
__builtin_rvv_vadd_vv
experimental-v
__builtin_rvv_vadd_vv_m
__builtin_rvv_vwaddu_vv
__builtin_rvv_vwaddu_vv_m
__builtin_rvv_vluxei8_v
__builtin_rvv_vluxei8_v_m
__builtin_rvv_vsse16_v
__builtin_rvv_vsse16_v_m
__builtin_rvv_vloxseg3ei8_v
__builtin_rvv_vloxseg3ei8_v_m
__builtin_rvv_vloxseg4ei8_v
__builtin_rvv_vloxseg4ei8_v_m
__builtin_rvv_vloxseg5ei8_v
__builtin_rvv_vloxseg5ei8_v_m
__builtin_rvv_vloxseg6ei8_v
__builtin_rvv_vloxseg6ei8_v_m
__builtin_rvv_vloxseg7ei8_v
__builtin_rvv_vloxseg7ei8_v_m
__builtin_rvv_vloxseg8ei8_v
__builtin_rvv_vloxseg8ei8_v_m
__builtin_rvv_vloxseg2ei16_v
__builtin_rvv_vloxseg2ei16_v_m
__builtin_rvv_vloxseg3ei16_v
__builtin_rvv_vloxseg3ei16_v_m
__builtin_rvv_vloxseg4ei16_v
__builtin_rvv_vloxseg4ei16_v_m
__builtin_rvv_vloxseg5ei16_v
__builtin_rvv_vloxseg5ei16_v_m
__builtin_rvv_vloxseg6ei16_v
__builtin_rvv_vloxseg6ei16_v_m
__builtin_rvv_vloxseg7ei16_v
__builtin_rvv_vloxseg7ei16_v_m
__builtin_rvv_vloxseg8ei16_v
__builtin_rvv_vloxseg8ei16_v_m
__builtin_rvv_vloxseg2ei32_v
__builtin_rvv_vloxseg2ei32_v_m
__builtin_rvv_vloxseg3ei32_v
__builtin_rvv_vloxseg3ei32_v_m
__builtin_rvv_vsse32_v
__builtin_rvv_vsse32_v_m
__builtin_rvv_vloxseg4ei32_v
__builtin_rvv_vloxseg4ei32_v_m
__builtin_rvv_vloxseg5ei32_v
__builtin_rvv_vloxseg5ei32_v_m
__builtin_rvv_vloxseg6ei32_v
__builtin_rvv_vloxseg6ei32_v_m
__builtin_rvv_vloxseg7ei32_v
__builtin_rvv_vloxseg7ei32_v_m
__builtin_rvv_vloxseg8ei32_v
__builtin_rvv_vloxseg8ei32_v_m
__builtin_rvv_vloxseg2ei64_v
__builtin_rvv_vloxseg2ei64_v_m
__builtin_rvv_vloxseg3ei64_v
__builtin_rvv_vloxseg3ei64_v_m
__builtin_rvv_vloxseg4ei64_v
__builtin_rvv_vloxseg4ei64_v_m
__builtin_rvv_vloxseg5ei64_v
__builtin_rvv_vloxseg5ei64_v_m
__builtin_rvv_vloxseg6ei64_v
__builtin_rvv_vloxseg6ei64_v_m
__builtin_rvv_vloxseg7ei64_v
__builtin_rvv_vloxseg7ei64_v_m
__builtin_rvv_vloxseg8ei64_v
__builtin_rvv_vloxseg8ei64_v_m
__builtin_rvv_vloxseg2ei8_v
__builtin_rvv_vloxseg2ei8_v_m
__builtin_rvv_vsse64_v
__builtin_rvv_vsse64_v_m
__builtin_rvv_vluxei16_v
__builtin_rvv_vluxei16_v_m
__builtin_rvv_vluxei32_v
__builtin_rvv_vluxei32_v_m
__builtin_rvv_vsseg3e8_v
__builtin_rvv_vsseg3e8_v_m
__builtin_rvv_vluxei64_v
__builtin_rvv_vluxei64_v_m
__builtin_rvv_vsseg4e8_v
__builtin_rvv_vsseg4e8_v_m
__builtin_rvv_vsseg5e8_v
__builtin_rvv_vsseg5e8_v_m
__builtin_rvv_vsseg6e8_v
__builtin_rvv_vsseg6e8_v_m
__builtin_rvv_vsseg7e8_v
__builtin_rvv_vsseg7e8_v_m
__builtin_rvv_vsseg8e8_v
__builtin_rvv_vsseg8e8_v_m
__builtin_rvv_vsseg2e16_v
__builtin_rvv_vsseg2e16_v_m
__builtin_rvv_vsseg3e16_v
__builtin_rvv_vsseg3e16_v_m
__builtin_rvv_vsseg4e16_v
__builtin_rvv_vsseg4e16_v_m
__builtin_rvv_vsseg5e16_v
__builtin_rvv_vsseg5e16_v_m
__builtin_rvv_vsseg6e16_v
__builtin_rvv_vsseg6e16_v_m
__builtin_rvv_vsseg7e16_v
__builtin_rvv_vsseg7e16_v_m
__builtin_rvv_vsseg8e16_v
__builtin_rvv_vsseg8e16_v_m
__builtin_rvv_vsseg2e32_v
__builtin_rvv_vsseg2e32_v_m
__builtin_rvv_vsseg3e32_v
__builtin_rvv_vsseg3e32_v_m
__builtin_rvv_vsseg4e32_v
__builtin_rvv_vsseg4e32_v_m
__builtin_rvv_vsseg5e32_v
__builtin_rvv_vsseg5e32_v_m
__builtin_rvv_vsseg6e32_v
__builtin_rvv_vsseg6e32_v_m
__builtin_rvv_vsseg7e32_v
__builtin_rvv_vsseg7e32_v_m
__builtin_rvv_vsseg8e32_v
__builtin_rvv_vsseg8e32_v_m
__builtin_rvv_vsseg2e64_v
__builtin_rvv_vsseg2e64_v_m
__builtin_rvv_vsseg3e64_v
__builtin_rvv_vsseg3e64_v_m
__builtin_rvv_vsseg4e64_v
__builtin_rvv_vsseg4e64_v_m
__builtin_rvv_vsseg5e64_v
__builtin_rvv_vsseg5e64_v_m
__builtin_rvv_vsseg6e64_v
__builtin_rvv_vsseg6e64_v_m
__builtin_rvv_vsseg7e64_v
__builtin_rvv_vsseg7e64_v_m
__builtin_rvv_vsseg8e64_v
__builtin_rvv_vsseg8e64_v_m
__builtin_rvv_vssseg3e8_v
__builtin_rvv_vssseg3e8_v_m
__builtin_rvv_vssseg4e8_v
__builtin_rvv_vssseg4e8_v_m
__builtin_rvv_vssseg5e8_v
__builtin_rvv_vssseg5e8_v_m
__builtin_rvv_vssseg6e8_v
__builtin_rvv_vssseg6e8_v_m
__builtin_rvv_vssseg7e8_v
__builtin_rvv_vssseg7e8_v_m
__builtin_rvv_vssseg8e8_v
__builtin_rvv_vssseg8e8_v_m
__builtin_rvv_vssseg2e16_v
__builtin_rvv_vssseg2e16_v_m
__builtin_rvv_vssseg3e16_v
__builtin_rvv_vssseg3e16_v_m
__builtin_rvv_vssseg4e16_v
__builtin_rvv_vssseg4e16_v_m
__builtin_rvv_vssseg5e16_v
__builtin_rvv_vssseg5e16_v_m
__builtin_rvv_vssseg6e16_v
__builtin_rvv_vssseg6e16_v_m
__builtin_rvv_vssseg7e16_v
__builtin_rvv_vssseg7e16_v_m
__builtin_rvv_vssseg8e16_v
__builtin_rvv_vssseg8e16_v_m
__builtin_rvv_vssseg2e32_v
__builtin_rvv_vssseg2e32_v_m
__builtin_rvv_vssseg3e32_v
__builtin_rvv_vssseg3e32_v_m
__builtin_rvv_vssseg4e32_v
__builtin_rvv_vssseg4e32_v_m
__builtin_rvv_vssseg5e32_v
__builtin_rvv_vssseg5e32_v_m
__builtin_rvv_vssseg6e32_v
__builtin_rvv_vssseg6e32_v_m
__builtin_rvv_vssseg7e32_v
__builtin_rvv_vssseg7e32_v_m
__builtin_rvv_vssseg8e32_v
__builtin_rvv_vssseg8e32_v_m
__builtin_rvv_vssseg2e64_v
__builtin_rvv_vssseg2e64_v_m
__builtin_rvv_vssseg3e64_v
__builtin_rvv_vssseg3e64_v_m
__builtin_rvv_vssseg4e64_v
__builtin_rvv_vssseg4e64_v_m
__builtin_rvv_vssseg5e64_v
__builtin_rvv_vssseg5e64_v_m
__builtin_rvv_vssseg6e64_v
__builtin_rvv_vssseg6e64_v_m
__builtin_rvv_vssseg7e64_v
__builtin_rvv_vssseg7e64_v_m
__builtin_rvv_vssseg8e64_v
__builtin_rvv_vssseg8e64_v_m
__builtin_rvv_vsuxseg3ei8_v
__builtin_rvv_vsuxseg3ei8_v_m
__builtin_rvv_vsuxseg4ei8_v
__builtin_rvv_vsuxseg4ei8_v_m
__builtin_rvv_vsuxseg5ei8_v
__builtin_rvv_vsuxseg5ei8_v_m
__builtin_rvv_vsuxseg6ei8_v
__builtin_rvv_vsuxseg6ei8_v_m
__builtin_rvv_vsuxseg7ei8_v
__builtin_rvv_vsuxseg7ei8_v_m
__builtin_rvv_vsuxseg8ei8_v
__builtin_rvv_vsuxseg8ei8_v_m
__builtin_rvv_vsuxseg2ei16_v
__builtin_rvv_vsuxseg2ei16_v_m
__builtin_rvv_vsuxseg3ei16_v
__builtin_rvv_vsuxseg3ei16_v_m
__builtin_rvv_vsuxseg4ei16_v
__builtin_rvv_vsuxseg4ei16_v_m
__builtin_rvv_vsuxseg5ei16_v
__builtin_rvv_vsuxseg5ei16_v_m
__builtin_rvv_vsuxseg6ei16_v
__builtin_rvv_vsuxseg6ei16_v_m
__builtin_rvv_vsuxseg7ei16_v
__builtin_rvv_vsuxseg7ei16_v_m
__builtin_rvv_vsuxseg8ei16_v
__builtin_rvv_vsuxseg8ei16_v_m
__builtin_rvv_vsuxseg2ei32_v
__builtin_rvv_vsuxseg2ei32_v_m
__builtin_rvv_vsuxseg3ei32_v
__builtin_rvv_vsuxseg3ei32_v_m
__builtin_rvv_vsuxseg4ei32_v
__builtin_rvv_vsuxseg4ei32_v_m
__builtin_rvv_vsuxseg5ei32_v
__builtin_rvv_vsuxseg5ei32_v_m
__builtin_rvv_vsuxseg6ei32_v
__builtin_rvv_vsuxseg6ei32_v_m
__builtin_rvv_vsuxseg7ei32_v
__builtin_rvv_vsuxseg7ei32_v_m
__builtin_rvv_vsuxseg8ei32_v
__builtin_rvv_vsuxseg8ei32_v_m
__builtin_rvv_vsuxseg2ei64_v
__builtin_rvv_vsuxseg2ei64_v_m
__builtin_rvv_vsuxseg3ei64_v
__builtin_rvv_vsuxseg3ei64_v_m
__builtin_rvv_vsuxseg4ei64_v
__builtin_rvv_vsuxseg4ei64_v_m
__builtin_rvv_vsuxseg5ei64_v
__builtin_rvv_vsuxseg5ei64_v_m
__builtin_rvv_vsuxseg6ei64_v
__builtin_rvv_vsuxseg6ei64_v_m
__builtin_rvv_vsuxseg7ei64_v
__builtin_rvv_vsuxseg7ei64_v_m
__builtin_rvv_vsuxseg8ei64_v
__builtin_rvv_vsuxseg8ei64_v_m
__builtin_rvv_vsuxseg2ei8_v
__builtin_rvv_vsuxseg2ei8_v_m
__builtin_rvv_vloxei8_v
__builtin_rvv_vloxei8_v_m
__builtin_rvv_vloxei16_v
__builtin_rvv_vloxei16_v_m
__builtin_rvv_vloxei32_v
__builtin_rvv_vloxei32_v_m
__builtin_rvv_vloxei64_v
__builtin_rvv_vloxei64_v_m
__builtin_rvv_vsoxseg2ei8_v
__builtin_rvv_vsoxseg2ei8_v_m
__builtin_rvv_vsoxseg3ei8_v
__builtin_rvv_vsoxseg3ei8_v_m
__builtin_rvv_vsoxseg4ei8_v
__builtin_rvv_vsoxseg4ei8_v_m
__builtin_rvv_vsoxseg5ei8_v
__builtin_rvv_vsoxseg5ei8_v_m
__builtin_rvv_vsoxseg6ei8_v
__builtin_rvv_vsoxseg6ei8_v_m
__builtin_rvv_vsoxseg7ei8_v
__builtin_rvv_vsoxseg7ei8_v_m
__builtin_rvv_vsoxseg8ei8_v
__builtin_rvv_vsoxseg8ei8_v_m
__builtin_rvv_vsoxseg2ei16_v
__builtin_rvv_vsoxseg2ei16_v_m
__builtin_rvv_vsoxseg3ei16_v
__builtin_rvv_vsoxseg3ei16_v_m
__builtin_rvv_vsoxseg4ei16_v
__builtin_rvv_vsoxseg4ei16_v_m
__builtin_rvv_vsoxseg5ei16_v
__builtin_rvv_vsoxseg5ei16_v_m
__builtin_rvv_vsoxseg6ei16_v
__builtin_rvv_vsoxseg6ei16_v_m
__builtin_rvv_vsoxseg7ei16_v
__builtin_rvv_vsoxseg7ei16_v_m
__builtin_rvv_vsoxseg8ei16_v
__builtin_rvv_vsoxseg8ei16_v_m
__builtin_rvv_vsoxseg2ei32_v
__builtin_rvv_vsoxseg2ei32_v_m
__builtin_rvv_vsoxseg3ei32_v
__builtin_rvv_vsoxseg3ei32_v_m
__builtin_rvv_vsoxseg4ei32_v
__builtin_rvv_vsoxseg4ei32_v_m
__builtin_rvv_vsoxseg5ei32_v
__builtin_rvv_vsoxseg5ei32_v_m
__builtin_rvv_vsoxseg6ei32_v
__builtin_rvv_vsoxseg6ei32_v_m
__builtin_rvv_vsoxseg7ei32_v
__builtin_rvv_vsoxseg7ei32_v_m
__builtin_rvv_vsoxseg8ei32_v
__builtin_rvv_vsoxseg8ei32_v_m
__builtin_rvv_vsoxseg2ei64_v
__builtin_rvv_vsoxseg2ei64_v_m
__builtin_rvv_vsoxseg3ei64_v
__builtin_rvv_vsoxseg3ei64_v_m
__builtin_rvv_vsoxseg4ei64_v
__builtin_rvv_vsoxseg4ei64_v_m
__builtin_rvv_vsoxseg5ei64_v
__builtin_rvv_vsoxseg5ei64_v_m
__builtin_rvv_vsoxseg6ei64_v
__builtin_rvv_vsoxseg6ei64_v_m
__builtin_rvv_vsoxseg7ei64_v
__builtin_rvv_vsoxseg7ei64_v_m
__builtin_rvv_vsoxseg8ei64_v
__builtin_rvv_vsoxseg8ei64_v_m
__builtin_rvv_vse8_v
__builtin_rvv_vse8_v_m
__builtin_rvv_vadd_vx
__builtin_rvv_vadd_vx_m
__builtin_rvv_vsub_vv
__builtin_rvv_vsub_vv_m
__builtin_rvv_vsub_vx
__builtin_rvv_vsub_vx_m
__builtin_rvv_vrsub_vx
__builtin_rvv_vrsub_vx_m
__builtin_rvv_vwaddu_vx
__builtin_rvv_vwaddu_vx_m
__builtin_rvv_vwsubu_vv
__builtin_rvv_vwsubu_vv_m
__builtin_rvv_vwsubu_vx
__builtin_rvv_vwsubu_vx_m
__builtin_rvv_vwadd_vv
__builtin_rvv_vwadd_vv_m
__builtin_rvv_vwadd_vx
__builtin_rvv_vwadd_vx_m
__builtin_rvv_vwsub_vv
__builtin_rvv_vwsub_vv_m
__builtin_rvv_vwsub_vx
__builtin_rvv_vwsub_vx_m
__builtin_rvv_vwaddu_wx
__builtin_rvv_vwaddu_wx_m
__builtin_rvv_vwsubu_wv
__builtin_rvv_vwsubu_wv_m
__builtin_rvv_vwsubu_wx
__builtin_rvv_vwsubu_wx_m
__builtin_rvv_vwadd_wv
__builtin_rvv_vwadd_wv_m
__builtin_rvv_vwadd_wx
__builtin_rvv_vwadd_wx_m
__builtin_rvv_vwsub_wv
__builtin_rvv_vwsub_wv_m
__builtin_rvv_vwsub_wx
__builtin_rvv_vwsub_wx_m
__builtin_rvv_vwcvt_x_x_v
__builtin_rvv_vwcvt_x_x_v_m
__builtin_rvv_vadc_vvm
__builtin_rvv_vadc_vxm
__builtin_rvv_vmadc_vvm
__builtin_rvv_vmadc_vxm
__builtin_rvv_vmadc_vv
__builtin_rvv_vmadc_vx
__builtin_rvv_vsbc_vvm
__builtin_rvv_vsbc_vxm
__builtin_rvv_vmsbc_vvm
__builtin_rvv_vmsbc_vxm
__builtin_rvv_vmsbc_vv
__builtin_rvv_vmsbc_vx
__builtin_rvv_vand_vv
__builtin_rvv_vand_vv_m
__builtin_rvv_vand_vx
__builtin_rvv_vand_vx_m
__builtin_rvv_vxor_vv
__builtin_rvv_vxor_vv_m
__builtin_rvv_vxor_vx
__builtin_rvv_vxor_vx_m
__builtin_rvv_vor_vv
__builtin_rvv_vor_vv_m
__builtin_rvv_vor_vx
__builtin_rvv_vor_vx_m
__builtin_rvv_vsll_vv
__builtin_rvv_vsll_vv_m
__builtin_rvv_vsll_vx
__builtin_rvv_vsll_vx_m
__builtin_rvv_vsrl_vv
__builtin_rvv_vsrl_vv_m
__builtin_rvv_vsrl_vx
__builtin_rvv_vsrl_vx_m
__builtin_rvv_vsra_vv
__builtin_rvv_vsra_vv_m
__builtin_rvv_vsra_vx
__builtin_rvv_vsra_vx_m
__builtin_rvv_vnsrl_wv
__builtin_rvv_vnsrl_wv_m
__builtin_rvv_vnsrl_wx
__builtin_rvv_vnsrl_wx_m
__builtin_rvv_vnsra_wv
__builtin_rvv_vnsra_wv_m
__builtin_rvv_vnsra_wx
__builtin_rvv_vnsra_wx_m
__builtin_rvv_vncvt_x_x_w
__builtin_rvv_vncvt_x_x_w_m
__builtin_rvv_vmseq_vv
__builtin_rvv_vmseq_vv_m
__builtin_rvv_vsuxei16_v
__builtin_rvv_vsuxei16_v_m
__builtin_rvv_vmseq_vx
__builtin_rvv_vmseq_vx_m
__builtin_rvv_vmsne_vv
__builtin_rvv_vmsne_vv_m
__builtin_rvv_vmsne_vx
__builtin_rvv_vmsne_vx_m
__builtin_rvv_vmsltu_vv
__builtin_rvv_vmsltu_vv_m
__builtin_rvv_vmsltu_vx
__builtin_rvv_vmsltu_vx_m
__builtin_rvv_vmslt_vv
__builtin_rvv_vmslt_vv_m
__builtin_rvv_vmslt_vx
__builtin_rvv_vmslt_vx_m
__builtin_rvv_vmsleu_vv
__builtin_rvv_vmsleu_vv_m
__builtin_rvv_vmsleu_vx
__builtin_rvv_vmsleu_vx_m
__builtin_rvv_vmsle_vv
__builtin_rvv_vmsle_vv_m
__builtin_rvv_vmsle_vx
__builtin_rvv_vmsle_vx_m
__builtin_rvv_vmsgtu_vv
__builtin_rvv_vmsgtu_vv_m
__builtin_rvv_vmsgtu_vx
__builtin_rvv_vmsgtu_vx_m
__builtin_rvv_vmsgt_vv
__builtin_rvv_vmsgt_vv_m
__builtin_rvv_vmsgt_vx
__builtin_rvv_vmsgt_vx_m
__builtin_rvv_vmsgeu_vv
__builtin_rvv_vmsgeu_vv_m
__builtin_rvv_vwaddu_wv
__builtin_rvv_vwaddu_wv_m
__builtin_rvv_vsse8_v
__builtin_rvv_vsse8_v_m
__builtin_rvv_vsuxei32_v
__builtin_rvv_vsuxei32_v_m
__builtin_rvv_vmsgeu_vx
__builtin_rvv_vmsgeu_vx_m
__builtin_rvv_vmsge_vv
__builtin_rvv_vmsge_vv_m
__builtin_rvv_vmsge_vx
__builtin_rvv_vmsge_vx_m
__builtin_rvv_vminu_vv
__builtin_rvv_vminu_vv_m
__builtin_rvv_vminu_vx
__builtin_rvv_vminu_vx_m
__builtin_rvv_vmin_vv
__builtin_rvv_vmin_vv_m
__builtin_rvv_vmin_vx
__builtin_rvv_vmin_vx_m
__builtin_rvv_vmaxu_vv
__builtin_rvv_vmaxu_vv_m
__builtin_rvv_vmaxu_vx
__builtin_rvv_vmaxu_vx_m
__builtin_rvv_vmax_vv
__builtin_rvv_vmax_vv_m
__builtin_rvv_vmax_vx
__builtin_rvv_vmax_vx_m
__builtin_rvv_vmul_vv
__builtin_rvv_vmul_vv_m
__builtin_rvv_vmul_vx
__builtin_rvv_vmul_vx_m
__builtin_rvv_vmulh_vv
__builtin_rvv_vmulh_vv_m
__builtin_rvv_vmulh_vx
__builtin_rvv_vmulh_vx_m
__builtin_rvv_vmulhu_vv
__builtin_rvv_vmulhu_vv_m
__builtin_rvv_vmulhu_vx
__builtin_rvv_vmulhu_vx_m
__builtin_rvv_vmulhsu_vv
__builtin_rvv_vmulhsu_vv_m
__builtin_rvv_vsuxei64_v
__builtin_rvv_vsuxei64_v_m
__builtin_rvv_vmulhsu_vx
__builtin_rvv_vmulhsu_vx_m
__builtin_rvv_vdivu_vv
__builtin_rvv_vdivu_vv_m
__builtin_rvv_vdivu_vx
__builtin_rvv_vdivu_vx_m
__builtin_rvv_vdiv_vv
__builtin_rvv_vdiv_vv_m
__builtin_rvv_vdiv_vx
__builtin_rvv_vdiv_vx_m
__builtin_rvv_vremu_vv
__builtin_rvv_vremu_vv_m
__builtin_rvv_vremu_vx
__builtin_rvv_vremu_vx_m
__builtin_rvv_vrem_vv
__builtin_rvv_vrem_vv_m
__builtin_rvv_vrem_vx
__builtin_rvv_vrem_vx_m
__builtin_rvv_vwmul_vv
__builtin_rvv_vwmul_vv_m
__builtin_rvv_vwmul_vx
__builtin_rvv_vwmul_vx_m
__builtin_rvv_vwmulu_vv
__builtin_rvv_vwmulu_vv_m
__builtin_rvv_vwmulu_vx
__builtin_rvv_vwmulu_vx_m
__builtin_rvv_vwmulsu_vv
__builtin_rvv_vwmulsu_vv_m
__builtin_rvv_vwmulsu_vx
__builtin_rvv_vwmulsu_vx_m
__builtin_rvv_vmacc_vv
__builtin_rvv_vmacc_vv_m
__builtin_rvv_vmacc_vx
__builtin_rvv_vmacc_vx_m
__builtin_rvv_vnmsac_vv
__builtin_rvv_vnmsac_vv_m
__builtin_rvv_vsuxei8_v
__builtin_rvv_vsuxei8_v_m
__builtin_rvv_vnmsac_vx
__builtin_rvv_vnmsac_vx_m
__builtin_rvv_vmadd_vv
__builtin_rvv_vmadd_vv_m
__builtin_rvv_vmadd_vx
__builtin_rvv_vmadd_vx_m
__builtin_rvv_vnmsub_vv
__builtin_rvv_vnmsub_vv_m
__builtin_rvv_vnmsub_vx
__builtin_rvv_vnmsub_vx_m
__builtin_rvv_vwmaccu_vv
__builtin_rvv_vwmaccu_vv_m
__builtin_rvv_vwmaccu_vx
__builtin_rvv_vwmaccu_vx_m
__builtin_rvv_vwmacc_vv
__builtin_rvv_vwmacc_vv_m
__builtin_rvv_vwmacc_vx
__builtin_rvv_vwmacc_vx_m
__builtin_rvv_vwmaccsu_vv
__builtin_rvv_vwmaccsu_vv_m
__builtin_rvv_vwmaccsu_vx
__builtin_rvv_vwmaccsu_vx_m
__builtin_rvv_vwmaccus_vx
__builtin_rvv_vwmaccus_vx_m
__builtin_rvv_vmerge_vvm
__builtin_rvv_vmerge_vxm
__builtin_rvv_vmv_v_v
__builtin_rvv_vmv_v_x
__builtin_rvv_vsaddu_vv
__builtin_rvv_vsaddu_vv_m
__builtin_rvv_vsaddu_vx
__builtin_rvv_vsaddu_vx_m
__builtin_rvv_vsadd_vv
__builtin_rvv_vsadd_vv_m
__builtin_rvv_vsadd_vx
__builtin_rvv_vsadd_vx_m
__builtin_rvv_vssubu_vv
__builtin_rvv_vssubu_vv_m
__builtin_rvv_vssubu_vx
__builtin_rvv_vssubu_vx_m
__builtin_rvv_vssub_vv
__builtin_rvv_vssub_vv_m
__builtin_rvv_vssub_vx
__builtin_rvv_vssub_vx_m
__builtin_rvv_vaaddu_vv
__builtin_rvv_vaaddu_vv_m
__builtin_rvv_vaaddu_vx
__builtin_rvv_vaaddu_vx_m
__builtin_rvv_vaadd_vv
__builtin_rvv_vaadd_vv_m
__builtin_rvv_vaadd_vx
__builtin_rvv_vaadd_vx_m
__builtin_rvv_vasubu_vv
__builtin_rvv_vasubu_vv_m
__builtin_rvv_vasubu_vx
__builtin_rvv_vasubu_vx_m
__builtin_rvv_vasub_vv
__builtin_rvv_vasub_vv_m
__builtin_rvv_vasub_vx
__builtin_rvv_vasub_vx_m
__builtin_rvv_vsmul_vv
__builtin_rvv_vsmul_vv_m
__builtin_rvv_vsmul_vx
__builtin_rvv_vsmul_vx_m
__builtin_rvv_vssrl_vv
__builtin_rvv_vssrl_vv_m
__builtin_rvv_vssrl_vx
__builtin_rvv_vssrl_vx_m
__builtin_rvv_vssra_vv
__builtin_rvv_vssra_vv_m
__builtin_rvv_vssra_vx
__builtin_rvv_vssra_vx_m
__builtin_rvv_vnclipu_wv
__builtin_rvv_vnclipu_wv_m
__builtin_rvv_vnclipu_wx
__builtin_rvv_vnclipu_wx_m
__builtin_rvv_vnclip_wv
__builtin_rvv_vnclip_wv_m
__builtin_rvv_vnclip_wx
__builtin_rvv_vnclip_wx_m
__builtin_rvv_vfadd_vv
__builtin_rvv_vfadd_vv_m
__builtin_rvv_vfadd_vf
__builtin_rvv_vfadd_vf_m
__builtin_rvv_vfsub_vv
__builtin_rvv_vfsub_vv_m
__builtin_rvv_vfsub_vf
__builtin_rvv_vfsub_vf_m
__builtin_rvv_vfrsub_vf
__builtin_rvv_vfrsub_vf_m
__builtin_rvv_vfwadd_vv
__builtin_rvv_vfwadd_vv_m
__builtin_rvv_vfwadd_vf
__builtin_rvv_vfwadd_vf_m
__builtin_rvv_vfwsub_vv
__builtin_rvv_vfwsub_vv_m
__builtin_rvv_vfwsub_vf
__builtin_rvv_vfwsub_vf_m
__builtin_rvv_vfwadd_wv
__builtin_rvv_vfwadd_wv_m
__builtin_rvv_vfwadd_wf
__builtin_rvv_vfwadd_wf_m
__builtin_rvv_vfwsub_wv
__builtin_rvv_vfwsub_wv_m
__builtin_rvv_vfwsub_wf
__builtin_rvv_vfwsub_wf_m
__builtin_rvv_vfmul_vv
__builtin_rvv_vfmul_vv_m
__builtin_rvv_vfmul_vf
__builtin_rvv_vfmul_vf_m
__builtin_rvv_vfdiv_vv
__builtin_rvv_vfdiv_vv_m
__builtin_rvv_vfdiv_vf
__builtin_rvv_vfdiv_vf_m
__builtin_rvv_vfrdiv_vf
__builtin_rvv_vfrdiv_vf_m
__builtin_rvv_vfwmul_vv
__builtin_rvv_vfwmul_vv_m
__builtin_rvv_vfwmul_vf
__builtin_rvv_vfwmul_vf_m
__builtin_rvv_vfmacc_vv
__builtin_rvv_vfmacc_vv_m
__builtin_rvv_vfmacc_vf
__builtin_rvv_vfmacc_vf_m
__builtin_rvv_vfnmacc_vv
__builtin_rvv_vfnmacc_vv_m
__builtin_rvv_vfnmacc_vf
__builtin_rvv_vfnmacc_vf_m
__builtin_rvv_vfmsac_vv
__builtin_rvv_vfmsac_vv_m
__builtin_rvv_vfmsac_vf
__builtin_rvv_vfmsac_vf_m
__builtin_rvv_vfnmsac_vv
__builtin_rvv_vfnmsac_vv_m
__builtin_rvv_vfnmsac_vf
__builtin_rvv_vfnmsac_vf_m
__builtin_rvv_vfmadd_vv
__builtin_rvv_vfmadd_vv_m
__builtin_rvv_vfmadd_vf
__builtin_rvv_vfmadd_vf_m
__builtin_rvv_vfnmadd_vv
__builtin_rvv_vfnmadd_vv_m
__builtin_rvv_vfnmadd_vf
__builtin_rvv_vfnmadd_vf_m
__builtin_rvv_vfmsub_vv
__builtin_rvv_vfmsub_vv_m
__builtin_rvv_vfmsub_vf
__builtin_rvv_vfmsub_vf_m
__builtin_rvv_vfnmsub_vv
__builtin_rvv_vfnmsub_vv_m
__builtin_rvv_vfnmsub_vf
__builtin_rvv_vfnmsub_vf_m
__builtin_rvv_vfwmacc_vv
__builtin_rvv_vfwmacc_vv_m
__builtin_rvv_vfwmacc_vf
__builtin_rvv_vfwmacc_vf_m
__builtin_rvv_vfwnmacc_vv
__builtin_rvv_vfwnmacc_vv_m
__builtin_rvv_vfwnmacc_vf
__builtin_rvv_vfwnmacc_vf_m
__builtin_rvv_vfwmsac_vv
__builtin_rvv_vfwmsac_vv_m
__builtin_rvv_vfwmsac_vf
__builtin_rvv_vfwmsac_vf_m
__builtin_rvv_vfwnmsac_vv
__builtin_rvv_vfwnmsac_vv_m
__builtin_rvv_vfwnmsac_vf
__builtin_rvv_vfwnmsac_vf_m
__builtin_rvv_vfmin_vv
__builtin_rvv_vfmin_vv_m
__builtin_rvv_vfmin_vf
__builtin_rvv_vfmin_vf_m
__builtin_rvv_vfmax_vv
__builtin_rvv_vfmax_vv_m
__builtin_rvv_vfmax_vf
__builtin_rvv_vfmax_vf_m
__builtin_rvv_vfsgnj_vv
__builtin_rvv_vfsgnj_vv_m
__builtin_rvv_vfsgnj_vf
__builtin_rvv_vfsgnj_vf_m
__builtin_rvv_vfsgnjn_vv
__builtin_rvv_vfsgnjn_vv_m
__builtin_rvv_vfsgnjn_vf
__builtin_rvv_vfsgnjn_vf_m
__builtin_rvv_vfsgnjx_vv
__builtin_rvv_vfsgnjx_vv_m
__builtin_rvv_vfsgnjx_vf
__builtin_rvv_vfsgnjx_vf_m
__builtin_rvv_vfabs_v
__builtin_rvv_vfabs_v_m
__builtin_rvv_vmfeq_vv
__builtin_rvv_vmfeq_vv_m
__builtin_rvv_vmfeq_vf
__builtin_rvv_vmfeq_vf_m
__builtin_rvv_vmfne_vv
__builtin_rvv_vmfne_vv_m
__builtin_rvv_vmfne_vf
__builtin_rvv_vmfne_vf_m
__builtin_rvv_vmflt_vv
__builtin_rvv_vmflt_vv_m
__builtin_rvv_vmflt_vf
__builtin_rvv_vmflt_vf_m
__builtin_rvv_vmfle_vv
__builtin_rvv_vmfle_vv_m
__builtin_rvv_vmfle_vf
__builtin_rvv_vmfle_vf_m
__builtin_rvv_vmfgt_vv
__builtin_rvv_vmfgt_vv_m
__builtin_rvv_vmfgt_vf
__builtin_rvv_vmfgt_vf_m
__builtin_rvv_vmfge_vv
__builtin_rvv_vmfge_vv_m
__builtin_rvv_vmfge_vf
__builtin_rvv_vmfge_vf_m
__builtin_rvv_vfmerge_vfm
__builtin_rvv_vfmv_v_f
__builtin_rvv_vredsum_vs
__builtin_rvv_vredsum_vs_m
__builtin_rvv_vredmaxu_vs
__builtin_rvv_vredmaxu_vs_m
__builtin_rvv_vredmax_vs
__builtin_rvv_vredmax_vs_m
__builtin_rvv_vredminu_vs
__builtin_rvv_vredminu_vs_m
__builtin_rvv_vredmin_vs
__builtin_rvv_vredmin_vs_m
__builtin_rvv_vredand_vs
__builtin_rvv_vredand_vs_m
__builtin_rvv_vredor_vs
__builtin_rvv_vredor_vs_m
__builtin_rvv_vredxor_vs
__builtin_rvv_vredxor_vs_m
__builtin_rvv_vwredsum_vs
__builtin_rvv_vwredsum_vs_m
__builtin_rvv_vwredsumu_vs
__builtin_rvv_vwredsumu_vs_m
__builtin_rvv_vfredmax_vs
__builtin_rvv_vfredmax_vs_m
__builtin_rvv_vfredmin_vs
__builtin_rvv_vfredmin_vs_m
__builtin_rvv_vfredusum_vs
__builtin_rvv_vfredusum_vs_m
__builtin_rvv_vfredosum_vs
__builtin_rvv_vfredosum_vs_m
__builtin_rvv_vfwredusum_vs
__builtin_rvv_vfwredusum_vs_m
__builtin_rvv_vfwredosum_vs
__builtin_rvv_vfwredosum_vs_m
__builtin_rvv_vmnot_m
__builtin_rvv_viota_m
__builtin_rvv_viota_m_m
__builtin_rvv_vid_v
__builtin_rvv_vid_v_m
__builtin_rvv_vmv_x_s
__builtin_rvv_vmv_s_x
__builtin_rvv_vfmv_f_s
__builtin_rvv_vfmv_s_f
__builtin_rvv_vfmv_s_x
__builtin_rvv_vslideup_vx
__builtin_rvv_vslideup_vx_m
__builtin_rvv_vslidedown_vx
__builtin_rvv_vslidedown_vx_m
__builtin_rvv_vslide1up_vx
__builtin_rvv_vslide1up_vx_m
__builtin_rvv_vfslide1up_vf
__builtin_rvv_vfslide1up_vf_m
__builtin_rvv_vslide1down_vx
__builtin_rvv_vslide1down_vx_m
__builtin_rvv_vfslide1down_vf
__builtin_rvv_vfslide1down_vf_m
__builtin_rvv_vrgather_vv
__builtin_rvv_vrgather_vv_m
__builtin_rvv_vrgather_vx
__builtin_rvv_vrgather_vx_m
__builtin_rvv_vrgatherei16_vv
__builtin_rvv_vrgatherei16_vv_m
__builtin_rvv_vcompress_vm
__builtin_rvv_vget_v
__builtin_rvv_vset_v
__builtin_rvv_vlseg2e8_v
__builtin_rvv_vlseg2e8_v_m
__builtin_rvv_vsoxei8_v
__builtin_rvv_vsoxei8_v_m
__builtin_rvv_vsoxei16_v
__builtin_rvv_vsoxei16_v_m
__builtin_rvv_vsoxei32_v
__builtin_rvv_vsoxei32_v_m
__builtin_rvv_vsoxei64_v
__builtin_rvv_vsoxei64_v_m
__builtin_rvv_vle16ff_v
__builtin_rvv_vle16ff_v_m
__builtin_rvv_vle32ff_v
__builtin_rvv_vle32ff_v_m
__builtin_rvv_vle64ff_v
__builtin_rvv_vle64ff_v_m
__builtin_rvv_vlseg3e8_v
__builtin_rvv_vlseg3e8_v_m
__builtin_rvv_vlseg4e8_v
__builtin_rvv_vlseg4e8_v_m
__builtin_rvv_vlseg5e8_v
__builtin_rvv_vlseg5e8_v_m
__builtin_rvv_vle8_v
__builtin_rvv_vle8_v_m
__builtin_rvv_vlseg6e8_v
__builtin_rvv_vlseg6e8_v_m
__builtin_rvv_vlseg7e8_v
__builtin_rvv_vlseg7e8_v_m
__builtin_rvv_vlseg8e8_v
__builtin_rvv_vlseg8e8_v_m
__builtin_rvv_vlseg2e16_v
__builtin_rvv_vlseg2e16_v_m
__builtin_rvv_vlseg3e16_v
__builtin_rvv_vlseg3e16_v_m
__builtin_rvv_vlseg4e16_v
__builtin_rvv_vlseg4e16_v_m
__builtin_rvv_vlseg5e16_v
__builtin_rvv_vlseg5e16_v_m
__builtin_rvv_vlseg6e16_v
__builtin_rvv_vlseg6e16_v_m
__builtin_rvv_vlseg7e16_v
__builtin_rvv_vlseg7e16_v_m
__builtin_rvv_vlseg8e16_v
__builtin_rvv_vlseg8e16_v_m
__builtin_rvv_vlseg2e32_v
__builtin_rvv_vlseg2e32_v_m
__builtin_rvv_vlseg3e32_v
__builtin_rvv_vlseg3e32_v_m
__builtin_rvv_vlseg4e32_v
__builtin_rvv_vlseg4e32_v_m
__builtin_rvv_vlseg5e32_v
__builtin_rvv_vlseg5e32_v_m
__builtin_rvv_vlseg6e32_v
__builtin_rvv_vlseg6e32_v_m
__builtin_rvv_vlseg7e32_v
__builtin_rvv_vlseg7e32_v_m
__builtin_rvv_vlseg8e32_v
__builtin_rvv_vlseg8e32_v_m
__builtin_rvv_vlseg2e64_v
__builtin_rvv_vlseg2e64_v_m
__builtin_rvv_vlseg3e64_v
__builtin_rvv_vlseg3e64_v_m
__builtin_rvv_vlseg4e64_v
__builtin_rvv_vlseg4e64_v_m
__builtin_rvv_vlseg5e64_v
__builtin_rvv_vlseg5e64_v_m
__builtin_rvv_vlseg6e64_v
__builtin_rvv_vlseg6e64_v_m
__builtin_rvv_vlseg7e64_v
__builtin_rvv_vlseg7e64_v_m
__builtin_rvv_vlseg8e64_v
__builtin_rvv_vlseg8e64_v_m
__builtin_rvv_vlseg3e8ff_v
__builtin_rvv_vlseg3e8ff_v_m
__builtin_rvv_vlseg4e8ff_v
__builtin_rvv_vlseg4e8ff_v_m
__builtin_rvv_vlseg5e8ff_v
__builtin_rvv_vlseg5e8ff_v_m
__builtin_rvv_vlseg6e8ff_v
__builtin_rvv_vlseg6e8ff_v_m
__builtin_rvv_vlseg7e8ff_v
__builtin_rvv_vlseg7e8ff_v_m
__builtin_rvv_vlseg8e8ff_v
__builtin_rvv_vlseg8e8ff_v_m
__builtin_rvv_vlseg2e16ff_v
__builtin_rvv_vlseg2e16ff_v_m
__builtin_rvv_vlseg3e16ff_v
__builtin_rvv_vlseg3e16ff_v_m
__builtin_rvv_vlseg4e16ff_v
__builtin_rvv_vlseg4e16ff_v_m
__builtin_rvv_vlseg5e16ff_v
__builtin_rvv_vlseg5e16ff_v_m
__builtin_rvv_vlseg6e16ff_v
__builtin_rvv_vlseg6e16ff_v_m
__builtin_rvv_vlseg7e16ff_v
__builtin_rvv_vlseg7e16ff_v_m
__builtin_rvv_vlseg8e16ff_v
__builtin_rvv_vlseg8e16ff_v_m
__builtin_rvv_vlseg2e32ff_v
__builtin_rvv_vlseg2e32ff_v_m
__builtin_rvv_vlseg3e32ff_v
__builtin_rvv_vlseg3e32ff_v_m
__builtin_rvv_vlseg2e8ff_v
__builtin_rvv_vlseg2e8ff_v_m
__builtin_rvv_vlseg4e32ff_v
__builtin_rvv_vlseg4e32ff_v_m
__builtin_rvv_vlseg5e32ff_v
__builtin_rvv_vlseg5e32ff_v_m
__builtin_rvv_vlseg6e32ff_v
__builtin_rvv_vlseg6e32ff_v_m
__builtin_rvv_vlseg7e32ff_v
__builtin_rvv_vlseg7e32ff_v_m
__builtin_rvv_vlseg8e32ff_v
__builtin_rvv_vlseg8e32ff_v_m
__builtin_rvv_vlseg2e64ff_v
__builtin_rvv_vlseg2e64ff_v_m
__builtin_rvv_vlseg3e64ff_v
__builtin_rvv_vlseg3e64ff_v_m
__builtin_rvv_vlseg4e64ff_v
__builtin_rvv_vlseg4e64ff_v_m
__builtin_rvv_vlseg5e64ff_v
__builtin_rvv_vlseg5e64ff_v_m
__builtin_rvv_vlseg6e64ff_v
__builtin_rvv_vlseg6e64ff_v_m
__builtin_rvv_vlsseg2e8_v
__builtin_rvv_vlsseg2e8_v_m
__builtin_rvv_vlseg7e64ff_v
__builtin_rvv_vlseg7e64ff_v_m
__builtin_rvv_vlseg8e64ff_v
__builtin_rvv_vlseg8e64ff_v_m
__builtin_rvv_vluxseg2ei8_v
__builtin_rvv_vluxseg2ei8_v_m
__builtin_rvv_vlsseg3e8_v
__builtin_rvv_vlsseg3e8_v_m
__builtin_rvv_vlsseg4e8_v
__builtin_rvv_vlsseg4e8_v_m
__builtin_rvv_vlsseg5e8_v
__builtin_rvv_vlsseg5e8_v_m
__builtin_rvv_vlsseg6e8_v
__builtin_rvv_vlsseg6e8_v_m
__builtin_rvv_vlsseg7e8_v
__builtin_rvv_vlsseg7e8_v_m
__builtin_rvv_vlsseg8e8_v
__builtin_rvv_vlsseg8e8_v_m
__builtin_rvv_vlsseg2e16_v
__builtin_rvv_vlsseg2e16_v_m
__builtin_rvv_vsseg2e8_v
__builtin_rvv_vsseg2e8_v_m
__builtin_rvv_vlsseg3e16_v
__builtin_rvv_vlsseg3e16_v_m
__builtin_rvv_vlsseg4e16_v
__builtin_rvv_vlsseg4e16_v_m
__builtin_rvv_vlsseg5e16_v
__builtin_rvv_vlsseg5e16_v_m
__builtin_rvv_vlsseg6e16_v
__builtin_rvv_vlsseg6e16_v_m
__builtin_rvv_vlsseg7e16_v
__builtin_rvv_vlsseg7e16_v_m
__builtin_rvv_vlsseg8e16_v
__builtin_rvv_vlsseg8e16_v_m
__builtin_rvv_vlsseg2e32_v
__builtin_rvv_vlsseg2e32_v_m
__builtin_rvv_vlsseg3e32_v
__builtin_rvv_vlsseg3e32_v_m
__builtin_rvv_vlsseg4e32_v
__builtin_rvv_vlsseg4e32_v_m
__builtin_rvv_vlsseg5e32_v
__builtin_rvv_vlsseg5e32_v_m
__builtin_rvv_vlsseg6e32_v
__builtin_rvv_vlsseg6e32_v_m
__builtin_rvv_vlsseg7e32_v
__builtin_rvv_vlsseg7e32_v_m
__builtin_rvv_vlsseg8e32_v
__builtin_rvv_vlsseg8e32_v_m
__builtin_rvv_vlsseg2e64_v
__builtin_rvv_vlsseg2e64_v_m
__builtin_rvv_vlsseg3e64_v
__builtin_rvv_vlsseg3e64_v_m
__builtin_rvv_vlsseg4e64_v
__builtin_rvv_vlsseg4e64_v_m
__builtin_rvv_vlsseg5e64_v
__builtin_rvv_vlsseg5e64_v_m
__builtin_rvv_vlsseg6e64_v
__builtin_rvv_vlsseg6e64_v_m
__builtin_rvv_vlsseg7e64_v
__builtin_rvv_vlsseg7e64_v_m
__builtin_rvv_vlsseg8e64_v
__builtin_rvv_vlsseg8e64_v_m
__builtin_rvv_vle8ff_v
__builtin_rvv_vle8ff_v_m
__builtin_rvv_vluxseg3ei8_v
__builtin_rvv_vluxseg3ei8_v_m
__builtin_rvv_vluxseg4ei8_v
__builtin_rvv_vluxseg4ei8_v_m
__builtin_rvv_vluxseg5ei8_v
__builtin_rvv_vluxseg5ei8_v_m
__builtin_rvv_vluxseg6ei8_v
__builtin_rvv_vluxseg6ei8_v_m
__builtin_rvv_vluxseg7ei8_v
__builtin_rvv_vluxseg7ei8_v_m
__builtin_rvv_vluxseg8ei8_v
__builtin_rvv_vluxseg8ei8_v_m
__builtin_rvv_vluxseg2ei16_v
__builtin_rvv_vluxseg2ei16_v_m
__builtin_rvv_vluxseg3ei16_v
__builtin_rvv_vluxseg3ei16_v_m
__builtin_rvv_vluxseg4ei16_v
__builtin_rvv_vluxseg4ei16_v_m
__builtin_rvv_vluxseg5ei16_v
__builtin_rvv_vluxseg5ei16_v_m
__builtin_rvv_vluxseg6ei16_v
__builtin_rvv_vluxseg6ei16_v_m
__builtin_rvv_vluxseg7ei16_v
__builtin_rvv_vluxseg7ei16_v_m
__builtin_rvv_vluxseg8ei16_v
__builtin_rvv_vluxseg8ei16_v_m
__builtin_rvv_vluxseg2ei32_v
__builtin_rvv_vluxseg2ei32_v_m
__builtin_rvv_vluxseg3ei32_v
__builtin_rvv_vluxseg3ei32_v_m
__builtin_rvv_vluxseg4ei32_v
__builtin_rvv_vluxseg4ei32_v_m
__builtin_rvv_vluxseg5ei32_v
__builtin_rvv_vluxseg5ei32_v_m
__builtin_rvv_vluxseg6ei32_v
__builtin_rvv_vluxseg6ei32_v_m
__builtin_rvv_vluxseg7ei32_v
__builtin_rvv_vluxseg7ei32_v_m
__builtin_rvv_vluxseg8ei32_v
__builtin_rvv_vluxseg8ei32_v_m
__builtin_rvv_vluxseg2ei64_v
__builtin_rvv_vluxseg2ei64_v_m
__builtin_rvv_vluxseg3ei64_v
__builtin_rvv_vluxseg3ei64_v_m
__builtin_rvv_vluxseg4ei64_v
__builtin_rvv_vluxseg4ei64_v_m
__builtin_rvv_vluxseg5ei64_v
__builtin_rvv_vluxseg5ei64_v_m
__builtin_rvv_vluxseg6ei64_v
__builtin_rvv_vluxseg6ei64_v_m
__builtin_rvv_vluxseg7ei64_v
__builtin_rvv_vluxseg7ei64_v_m
__builtin_rvv_vluxseg8ei64_v
__builtin_rvv_vluxseg8ei64_v_m
__builtin_rvv_vssseg2e8_v
__builtin_rvv_vssseg2e8_v_m
__builtin_rvv_vneg_v
__builtin_rvv_vneg_v_m
__builtin_rvv_vnot_v
__builtin_rvv_vnot_v_m
__builtin_rvv_vmmv_m
__builtin_rvv_vlse8_v
__builtin_rvv_vlse8_v_m
__builtin_rvv_vfneg_v
__builtin_rvv_vfneg_v_m
__builtin_rvv_vwcvtu_x_x_v
__builtin_rvv_vwcvtu_x_x_v_m
__builtin_rvv_vle16_v
__builtin_rvv_vle16_v_m
__builtin_rvv_vle32_v
__builtin_rvv_vle32_v_m
__builtin_rvv_vle64_v
__builtin_rvv_vle64_v_m
__builtin_rvv_vse16_v
__builtin_rvv_vse16_v_m
__builtin_rvv_vse32_v
__builtin_rvv_vse32_v_m
__builtin_rvv_vse64_v
__builtin_rvv_vse64_v_m
__builtin_rvv_vlse16_v
__builtin_rvv_vlse16_v_m
__builtin_rvv_vlse32_v
__builtin_rvv_vlse32_v_m
__builtin_rvv_vlse64_v
__builtin_rvv_vlse64_v_m
__builtin_rvv_vfclass_v
__builtin_rvv_vfclass_v_m
__builtin_rvv_vfcvt_f_x_v
__builtin_rvv_vfcvt_f_x_v_m
__builtin_rvv_vfcvt_f_xu_v
__builtin_rvv_vfcvt_f_xu_v_m
__builtin_rvv_vfcvt_rtz_x_f_v
__builtin_rvv_vfcvt_rtz_x_f_v_m
__builtin_rvv_vfcvt_rtz_xu_f_v
__builtin_rvv_vfcvt_rtz_xu_f_v_m
__builtin_rvv_vfcvt_x_f_v
__builtin_rvv_vfcvt_x_f_v_m
__builtin_rvv_vfcvt_xu_f_v
__builtin_rvv_vfcvt_xu_f_v_m
__builtin_rvv_vfirst_m
__builtin_rvv_vfirst_m_m
__builtin_rvv_vfncvt_f_f_w
__builtin_rvv_vfncvt_f_f_w_m
__builtin_rvv_vfncvt_f_x_w
__builtin_rvv_vfncvt_f_x_w_m
__builtin_rvv_vfncvt_f_xu_w
__builtin_rvv_vfncvt_f_xu_w_m
__builtin_rvv_vfncvt_rod_f_f_w
__builtin_rvv_vfncvt_rod_f_f_w_m
__builtin_rvv_vfncvt_rtz_x_f_w
__builtin_rvv_vfncvt_rtz_x_f_w_m
__builtin_rvv_vfncvt_rtz_xu_f_w
__builtin_rvv_vfncvt_rtz_xu_f_w_m
__builtin_rvv_vfncvt_x_f_w
__builtin_rvv_vfncvt_x_f_w_m
__builtin_rvv_vfncvt_xu_f_w
__builtin_rvv_vfncvt_xu_f_w_m
__builtin_rvv_vfrec7_v
__builtin_rvv_vfrec7_v_m
__builtin_rvv_vfrsqrt7_v
__builtin_rvv_vfrsqrt7_v_m
__builtin_rvv_vfsqrt_v
__builtin_rvv_vfsqrt_v_m
__builtin_rvv_vfwcvt_f_f_v
__builtin_rvv_vfwcvt_f_f_v_m
__builtin_rvv_vfwcvt_f_x_v
__builtin_rvv_vfwcvt_f_x_v_m
__builtin_rvv_vfwcvt_f_xu_v
__builtin_rvv_vfwcvt_f_xu_v_m
__builtin_rvv_vfwcvt_rtz_x_f_v
__builtin_rvv_vfwcvt_rtz_x_f_v_m
__builtin_rvv_vfwcvt_rtz_xu_f_v
__builtin_rvv_vfwcvt_rtz_xu_f_v_m
__builtin_rvv_vfwcvt_x_f_v
__builtin_rvv_vfwcvt_x_f_v_m
__builtin_rvv_vfwcvt_xu_f_v
__builtin_rvv_vfwcvt_xu_f_v_m
__builtin_rvv_vlm_v
__builtin_rvv_vlmul_ext_v
__builtin_rvv_vlmul_trunc_v
__builtin_rvv_vmand_mm
__builtin_rvv_vmandnot_mm
__builtin_rvv_vmclr_m
__builtin_rvv_vmnand_mm
__builtin_rvv_vmnor_mm
__builtin_rvv_vmor_mm
__builtin_rvv_vmornot_mm
__builtin_rvv_vmsbf_m
__builtin_rvv_vmsbf_m_m
__builtin_rvv_vmset_m
__builtin_rvv_vmsif_m
__builtin_rvv_vmsif_m_m
__builtin_rvv_vmsof_m
__builtin_rvv_vmsof_m_m
__builtin_rvv_vmxnor_mm
__builtin_rvv_vmxor_mm
__builtin_rvv_vpopc_m
__builtin_rvv_vpopc_m_m
__builtin_rvv_vreinterpret_v
__builtin_rvv_vsetvli
zzIzIz
__builtin_rvv_vsetvlimax
zIzIz
__builtin_rvv_vsext_vf2
__builtin_rvv_vsext_vf2_m
__builtin_rvv_vsext_vf4
__builtin_rvv_vsext_vf4_m
__builtin_rvv_vsext_vf8
__builtin_rvv_vsext_vf8_m
__builtin_rvv_vsm_v
__builtin_rvv_vundefined
__builtin_rvv_vzext_vf2
__builtin_rvv_vzext_vf2_m
__builtin_rvv_vzext_vf4
__builtin_rvv_vzext_vf4_m
__builtin_rvv_vzext_vf8
__builtin_rvv_vzext_vf8_m
__builtin_riscv_orc_b_32
ZiZi
experimental-zbb
__builtin_riscv_orc_b_64
experimental-zbb,64bit
__builtin_riscv_clmul
LiLiLi
experimental-zbc
__builtin_riscv_clmulh
__builtin_riscv_clmulr
__builtin_riscv_bcompress_32
ZiZiZi
experimental-zbe
__builtin_riscv_bcompress_64
experimental-zbe,64bit
__builtin_riscv_bdecompress_32
__builtin_riscv_bdecompress_64
__builtin_riscv_grev_32
experimental-zbp
__builtin_riscv_grev_64
experimental-zbp,64bit
__builtin_riscv_gorc_32
__builtin_riscv_gorc_64
__builtin_riscv_shfl_32
__builtin_riscv_shfl_64
__builtin_riscv_unshfl_32
__builtin_riscv_unshfl_64
__builtin_riscv_xperm_n
__builtin_riscv_xperm_b
__builtin_riscv_xperm_h
__builtin_riscv_xperm_w
__builtin_riscv_crc32_b
LiLi
experimental-zbr
__builtin_riscv_crc32_h
__builtin_riscv_crc32_w
__builtin_riscv_crc32c_b
__builtin_riscv_crc32c_h
__builtin_riscv_crc32c_w
__builtin_riscv_crc32_d
__builtin_riscv_crc32c_d
SPIR
SPIR32
SPIR64
sparc
SOFT_FLOAT
__sparcv8
__sparcv8__
__sparcv9
__sparcv9__
__sparc_v9__
__sparc_v8__
__leon__
__ma2100
__ma2150
__ma2155
__ma2450
__ma2455
__ma2080
__ma2085
__ma2480
__ma2485
__ma2x5x
__ma2x5x__
__ma2x8x
__ma2x8x__
__myriad2__
__myriad2
__arch64__
__sparc64__
supersparc
sparclite
f934
hypersparc
sparclite86x
sparclet
tsc701
ultrasparc
ultrasparc3
niagara
niagara2
niagara3
niagara4
ma2100
ma2150
ma2155
ma2450
ma2455
ma2x5x
ma2080
ma2085
ma2480
ma2485
ma2x8x
myriad2
myriad2.1
myriad2.2
myriad2.3
leon2
at697e
at697f
leon3
ut699
gr712rc
leon4
gr740
__builtin_tbegin_nofloat
__builtin_tbeginc
__builtin_tx_nesting_depth
__builtin_tx_assist
__builtin_non_tx_store
vULi*ULi
__builtin_s390_lcbb
UivC*Ii
__builtin_s390_vlbb
V16ScvC*Ii
__builtin_s390_vll
V16ScUivC*
__builtin_s390_vstl
vV16ScUiv*
__builtin_s390_vperm
__builtin_s390_vpdi
V2ULLiV2ULLiV2ULLiIi
__builtin_s390_vpksh
__builtin_s390_vpkshs
V16ScV8SsV8Ssi*
__builtin_s390_vpksf
__builtin_s390_vpksfs
V8SsV4SiV4Sii*
__builtin_s390_vpksg
__builtin_s390_vpksgs
V4SiV2SLLiV2SLLii*
__builtin_s390_vpklsh
__builtin_s390_vpklshs
V16UcV8UsV8Usi*
__builtin_s390_vpklsf
__builtin_s390_vpklsfs
V8UsV4UiV4Uii*
__builtin_s390_vpklsg
__builtin_s390_vpklsgs
V4UiV2ULLiV2ULLii*
__builtin_s390_vuphb
V8SsV16Sc
__builtin_s390_vuphh
__builtin_s390_vuphf
__builtin_s390_vuplb
__builtin_s390_vuplhw
__builtin_s390_vuplf
__builtin_s390_vuplhb
V8UsV16Uc
__builtin_s390_vuplhh
V4UiV8Us
__builtin_s390_vuplhf
V2ULLiV4Ui
__builtin_s390_vupllb
__builtin_s390_vupllh
__builtin_s390_vupllf
__builtin_s390_vaq
__builtin_s390_vacq
__builtin_s390_vaccb
__builtin_s390_vacch
__builtin_s390_vaccf
__builtin_s390_vaccg
__builtin_s390_vaccq
__builtin_s390_vacccq
__builtin_s390_vavgb
__builtin_s390_vavgh
__builtin_s390_vavgf
__builtin_s390_vavgg
__builtin_s390_vavglb
__builtin_s390_vavglh
__builtin_s390_vavglf
__builtin_s390_vavglg
__builtin_s390_vceqbs
V16ScV16ScV16Sci*
__builtin_s390_vceqhs
V8SsV8SsV8Ssi*
__builtin_s390_vceqfs
V4SiV4SiV4Sii*
__builtin_s390_vceqgs
V2SLLiV2SLLiV2SLLii*
__builtin_s390_vchbs
__builtin_s390_vchhs
__builtin_s390_vchfs
__builtin_s390_vchgs
__builtin_s390_vchlbs
V16ScV16UcV16Uci*
__builtin_s390_vchlhs
V8SsV8UsV8Usi*
__builtin_s390_vchlfs
V4SiV4UiV4Uii*
__builtin_s390_vchlgs
V2SLLiV2ULLiV2ULLii*
__builtin_s390_vcksm
__builtin_s390_vclzb
__builtin_s390_vclzh
__builtin_s390_vclzf
__builtin_s390_vclzg
__builtin_s390_vctzb
__builtin_s390_vctzh
__builtin_s390_vctzf
__builtin_s390_vctzg
__builtin_s390_verimb
__builtin_s390_verimh
V8UsV8UsV8UsV8UsIi
__builtin_s390_verimf
V4UiV4UiV4UiV4UiIi
__builtin_s390_verimg
__builtin_s390_verllb
V16UcV16UcUi
__builtin_s390_verllh
V8UsV8UsUi
__builtin_s390_verllf
V4UiV4UiUi
__builtin_s390_verllg
V2ULLiV2ULLiUi
__builtin_s390_verllvb
__builtin_s390_verllvh
__builtin_s390_verllvf
__builtin_s390_verllvg
__builtin_s390_vgfmb
__builtin_s390_vgfmh
__builtin_s390_vgfmf
__builtin_s390_vgfmg
V16UcV2ULLiV2ULLi
__builtin_s390_vgfmab
V8UsV16UcV16UcV8Us
__builtin_s390_vgfmah
__builtin_s390_vgfmaf
V2ULLiV4UiV4UiV2ULLi
__builtin_s390_vgfmag
V16UcV2ULLiV2ULLiV16Uc
__builtin_s390_vmahb
__builtin_s390_vmahh
__builtin_s390_vmahf
__builtin_s390_vmalhb
__builtin_s390_vmalhh
__builtin_s390_vmalhf
__builtin_s390_vmaeb
V8SsV16ScV16ScV8Ss
__builtin_s390_vmaeh
__builtin_s390_vmaef
V2SLLiV4SiV4SiV2SLLi
__builtin_s390_vmaleb
__builtin_s390_vmaleh
__builtin_s390_vmalef
__builtin_s390_vmaob
__builtin_s390_vmaoh
__builtin_s390_vmaof
__builtin_s390_vmalob
__builtin_s390_vmaloh
__builtin_s390_vmalof
__builtin_s390_vmhb
__builtin_s390_vmhh
__builtin_s390_vmhf
__builtin_s390_vmlhb
__builtin_s390_vmlhh
__builtin_s390_vmlhf
__builtin_s390_vmeb
__builtin_s390_vmeh
__builtin_s390_vmef
__builtin_s390_vmleb
__builtin_s390_vmleh
__builtin_s390_vmlef
__builtin_s390_vmob
__builtin_s390_vmoh
__builtin_s390_vmof
__builtin_s390_vmlob
__builtin_s390_vmloh
__builtin_s390_vmlof
__builtin_s390_vpopctb
__builtin_s390_vpopcth
__builtin_s390_vpopctf
__builtin_s390_vpopctg
__builtin_s390_vsq
__builtin_s390_vsbcbiq
__builtin_s390_vsbiq
__builtin_s390_vscbib
__builtin_s390_vscbih
__builtin_s390_vscbif
__builtin_s390_vscbig
__builtin_s390_vscbiq
__builtin_s390_vsl
__builtin_s390_vslb
__builtin_s390_vsldb
__builtin_s390_vsra
__builtin_s390_vsrab
__builtin_s390_vsrl
__builtin_s390_vsrlb
__builtin_s390_vsumb
V4UiV16UcV16Uc
__builtin_s390_vsumh
__builtin_s390_vsumgh
V2ULLiV8UsV8Us
__builtin_s390_vsumgf
__builtin_s390_vsumqf
V16UcV4UiV4Ui
__builtin_s390_vsumqg
__builtin_s390_vtm
iV16UcV16Uc
__builtin_s390_vfaeb
__builtin_s390_vfaebs
V16UcV16UcV16UcIii*
__builtin_s390_vfaeh
V8UsV8UsV8UsIi
__builtin_s390_vfaehs
V8UsV8UsV8UsIii*
__builtin_s390_vfaef
V4UiV4UiV4UiIi
__builtin_s390_vfaefs
V4UiV4UiV4UiIii*
__builtin_s390_vfaezb
__builtin_s390_vfaezbs
__builtin_s390_vfaezh
__builtin_s390_vfaezhs
__builtin_s390_vfaezf
__builtin_s390_vfaezfs
__builtin_s390_vfeeb
__builtin_s390_vfeebs
V16UcV16UcV16Uci*
__builtin_s390_vfeeh
__builtin_s390_vfeehs
V8UsV8UsV8Usi*
__builtin_s390_vfeef
__builtin_s390_vfeefs
V4UiV4UiV4Uii*
__builtin_s390_vfeezb
__builtin_s390_vfeezbs
__builtin_s390_vfeezh
__builtin_s390_vfeezhs
__builtin_s390_vfeezf
__builtin_s390_vfeezfs
__builtin_s390_vfeneb
__builtin_s390_vfenebs
__builtin_s390_vfeneh
__builtin_s390_vfenehs
__builtin_s390_vfenef
__builtin_s390_vfenefs
__builtin_s390_vfenezb
__builtin_s390_vfenezbs
__builtin_s390_vfenezh
__builtin_s390_vfenezhs
__builtin_s390_vfenezf
__builtin_s390_vfenezfs
__builtin_s390_vistrb
__builtin_s390_vistrbs
V16UcV16Uci*
__builtin_s390_vistrh
__builtin_s390_vistrhs
V8UsV8Usi*
__builtin_s390_vistrf
__builtin_s390_vistrfs
V4UiV4Uii*
__builtin_s390_vstrcb
__builtin_s390_vstrcbs
V16UcV16UcV16UcV16UcIii*
__builtin_s390_vstrch
__builtin_s390_vstrchs
V8UsV8UsV8UsV8UsIii*
__builtin_s390_vstrcf
__builtin_s390_vstrcfs
V4UiV4UiV4UiV4UiIii*
__builtin_s390_vstrczb
__builtin_s390_vstrczbs
__builtin_s390_vstrczh
__builtin_s390_vstrczhs
__builtin_s390_vstrczf
__builtin_s390_vstrczfs
__builtin_s390_vfcedbs
V2SLLiV2dV2di*
__builtin_s390_vfchdbs
__builtin_s390_vfchedbs
__builtin_s390_vfidb
V2dV2dIiIi
__builtin_s390_vflndb
__builtin_s390_vflpdb
__builtin_s390_vfmadb
__builtin_s390_vfmsdb
__builtin_s390_vfsqdb
__builtin_s390_vftcidb
V2SLLiV2dIii*
__builtin_s390_vlrl
__builtin_s390_vstrl
__builtin_s390_vbperm
__builtin_s390_vmslg
V16UcV2ULLiV2ULLiV16UcIi
__builtin_s390_vfmaxdb
V2dV2dV2dIi
__builtin_s390_vfmindb
__builtin_s390_vfnmadb
__builtin_s390_vfnmsdb
__builtin_s390_vfcesbs
V4SiV4fV4fi*
__builtin_s390_vfchsbs
__builtin_s390_vfchesbs
__builtin_s390_vfisb
V4fV4fIiIi
__builtin_s390_vfmaxsb
V4fV4fV4fIi
__builtin_s390_vfminsb
__builtin_s390_vflnsb
__builtin_s390_vflpsb
__builtin_s390_vfmasb
__builtin_s390_vfmssb
__builtin_s390_vfnmasb
__builtin_s390_vfnmssb
__builtin_s390_vfsqsb
__builtin_s390_vftcisb
V4SiV4fIii*
__builtin_s390_vsld
__builtin_s390_vsrd
__builtin_s390_vstrsb
V16UcV16UcV16UcV16Uci*
__builtin_s390_vstrsh
V16UcV8UsV8UsV16Uci*
__builtin_s390_vstrsf
V16UcV4UiV4UiV16Uci*
__builtin_s390_vstrszb
__builtin_s390_vstrszh
__builtin_s390_vstrszf
__builtin_s390_vlbrh
__builtin_s390_vlbrf
__builtin_s390_vlbrg
__builtin_s390_vclfnhs
V4fV8UsIi
__builtin_s390_vclfnls
__builtin_s390_vcrnfs
V8UsV4fV4fIi
__builtin_s390_vcfn
__builtin_s390_vcnf
systemz
arch8
arch9
arch10
arch11
arch12
arch13
arch14
__s390__
__s390x__
__zarch__
__ARCH__
__VX__
10304
z196
zEC12
__TCE__
__TCE_V1__
tcele
__TCELE__
__TCELE_V1__
__linux__
__ve
__ve__
__NEC__
__builtin_wasm_memory_size
__builtin_wasm_memory_grow
zIiz
__builtin_wasm_tls_size
bulk-memory
__builtin_wasm_tls_align
__builtin_wasm_tls_base
__builtin_wasm_min_f32
__builtin_wasm_max_f32
__builtin_wasm_min_f64
__builtin_wasm_max_f64
__builtin_wasm_throw
vIUiv*
exception-handling
__builtin_wasm_rethrow
__builtin_wasm_memory_atomic_wait32
ii*iLLi
atomics
__builtin_wasm_memory_atomic_wait64
iLLi*LLiLLi
__builtin_wasm_memory_atomic_notify
Uii*Ui
__builtin_wasm_trunc_s_i32_f32
__builtin_wasm_trunc_u_i32_f32
__builtin_wasm_trunc_s_i32_f64
__builtin_wasm_trunc_u_i32_f64
__builtin_wasm_trunc_s_i64_f32
__builtin_wasm_trunc_u_i64_f32
__builtin_wasm_trunc_s_i64_f64
__builtin_wasm_trunc_u_i64_f64
__builtin_wasm_trunc_saturate_s_i32_f32
nontrapping-fptoint
__builtin_wasm_trunc_saturate_u_i32_f32
__builtin_wasm_trunc_saturate_s_i32_f64
__builtin_wasm_trunc_saturate_u_i32_f64
__builtin_wasm_trunc_saturate_s_i64_f32
__builtin_wasm_trunc_saturate_u_i64_f32
__builtin_wasm_trunc_saturate_s_i64_f64
__builtin_wasm_trunc_saturate_u_i64_f64
__builtin_wasm_swizzle_i8x16
simd128
__builtin_wasm_add_sat_s_i8x16
__builtin_wasm_add_sat_u_i8x16
__builtin_wasm_add_sat_s_i16x8
__builtin_wasm_add_sat_u_i16x8
__builtin_wasm_sub_sat_s_i8x16
__builtin_wasm_sub_sat_u_i8x16
__builtin_wasm_sub_sat_s_i16x8
__builtin_wasm_sub_sat_u_i16x8
__builtin_wasm_abs_i8x16
__builtin_wasm_abs_i16x8
__builtin_wasm_abs_i32x4
V4iV4i
__builtin_wasm_abs_i64x2
V2LLiV2LLi
__builtin_wasm_min_s_i8x16
__builtin_wasm_min_u_i8x16
__builtin_wasm_max_s_i8x16
__builtin_wasm_max_u_i8x16
__builtin_wasm_min_s_i16x8
__builtin_wasm_min_u_i16x8
__builtin_wasm_max_s_i16x8
__builtin_wasm_max_u_i16x8
__builtin_wasm_min_s_i32x4
__builtin_wasm_min_u_i32x4
__builtin_wasm_max_s_i32x4
__builtin_wasm_max_u_i32x4
__builtin_wasm_avgr_u_i8x16
__builtin_wasm_avgr_u_i16x8
__builtin_wasm_popcnt_i8x16
__builtin_wasm_q15mulr_sat_s_i16x8
__builtin_wasm_extadd_pairwise_i8x16_s_i16x8
V8sV16Sc
__builtin_wasm_extadd_pairwise_i8x16_u_i16x8
__builtin_wasm_extadd_pairwise_i16x8_s_i32x4
__builtin_wasm_extadd_pairwise_i16x8_u_i32x4
__builtin_wasm_bitselect
__builtin_wasm_shuffle_i8x16
V16ScV16ScV16ScIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
__builtin_wasm_any_true_v128
iV16Sc
__builtin_wasm_all_true_i8x16
__builtin_wasm_all_true_i16x8
__builtin_wasm_all_true_i32x4
__builtin_wasm_all_true_i64x2
iV2LLi
__builtin_wasm_bitmask_i8x16
UiV16Sc
__builtin_wasm_bitmask_i16x8
UiV8s
__builtin_wasm_bitmask_i32x4
UiV4i
__builtin_wasm_bitmask_i64x2
UiV2LLi
__builtin_wasm_abs_f32x4
__builtin_wasm_abs_f64x2
__builtin_wasm_min_f32x4
__builtin_wasm_max_f32x4
__builtin_wasm_pmin_f32x4
__builtin_wasm_pmax_f32x4
__builtin_wasm_min_f64x2
__builtin_wasm_max_f64x2
__builtin_wasm_pmin_f64x2
__builtin_wasm_pmax_f64x2
__builtin_wasm_ceil_f32x4
__builtin_wasm_floor_f32x4
__builtin_wasm_trunc_f32x4
__builtin_wasm_nearest_f32x4
__builtin_wasm_ceil_f64x2
__builtin_wasm_floor_f64x2
__builtin_wasm_trunc_f64x2
__builtin_wasm_nearest_f64x2
__builtin_wasm_dot_s_i32x4_i16x8
V4iV8sV8s
__builtin_wasm_sqrt_f32x4
__builtin_wasm_sqrt_f64x2
__builtin_wasm_trunc_saturate_s_i32x4_f32x4
__builtin_wasm_trunc_saturate_u_i32x4_f32x4
__builtin_wasm_narrow_s_i8x16_i16x8
V16ScV8sV8s
__builtin_wasm_narrow_u_i8x16_i16x8
V16UcV8sV8s
__builtin_wasm_narrow_s_i16x8_i32x4
V8sV4iV4i
__builtin_wasm_narrow_u_i16x8_i32x4
V8UsV4iV4i
__builtin_wasm_trunc_sat_zero_s_f64x2_i32x4
V4iV2d
__builtin_wasm_trunc_sat_zero_u_f64x2_i32x4
__builtin_wasm_fma_f32x4
relaxed-simd
__builtin_wasm_fms_f32x4
__builtin_wasm_fma_f64x2
__builtin_wasm_fms_f64x2
__builtin_wasm_laneselect_i8x16
__builtin_wasm_laneselect_i16x8
__builtin_wasm_laneselect_i32x4
__builtin_wasm_laneselect_i64x2
__builtin_wasm_relaxed_swizzle_i8x16
__builtin_wasm_relaxed_min_f32x4
__builtin_wasm_relaxed_max_f32x4
__builtin_wasm_relaxed_min_f64x2
__builtin_wasm_relaxed_max_f64x2
experimental-mv
sign-ext
mutable-globals
tail-call
__wasm_simd128__
__wasm_relaxed_simd__
__wasm_nontrapping_fptoint__
__wasm_sign_ext__
__wasm_exception_handling__
__wasm_bulk_memory__
__wasm_atomics__
__wasm_mutable_globals__
__wasm_multivalue__
__wasm_tail_call__
__wasm_reference_types__
bleeding-edge
+simd128
-simd128
+relaxed-simd
-relaxed-simd
+nontrapping-fptoint
-nontrapping-fptoint
-sign-ext
-exception-handling
-bulk-memory
-atomics
-mutable-globals
+multivalue
-multivalue
+tail-call
-tail-call
+reference-types
-reference-types
wasm32
wasm64
generic
sse2
+general-regs-only
sse4.2
-popcnt
popcnt
-xsave
xsave
-crc32
crc32
sse4.1
+vaes
+pclmul
+vpclmulqdq
+lzcnt
+rdrnd
+fsgsbase
+bmi
+bmi2
+rtm
+prfchw
+rdseed
+adx
+tbm
+lwp
+fma
+f16c
+gfni
+avx512cd
+avx512vpopcntdq
+avx512vnni
+avx512bf16
+avx512er
+avx512fp16
+avx512pf
+avx512dq
+avx512bitalg
+avx512bw
+avx512vl
+avx512vbmi
+avx512vbmi2
+avx512ifma
+avx512vp2intersect
+sha
+shstk
+movbe
+sgx
+cx8
+fxsr
+xsave
+xsaveopt
+xsavec
+xsaves
+mwaitx
+pku
+clflushopt
+clwb
+wbnoinvd
+prefetchwt1
+clzero
+cldemote
+rdpid
+widekl
+retpoline-external-thunk
+sahf
+waitpkg
+movdiri
+movdir64b
+pconfig
+ptwrite
+invpcid
+enqcmd
+hreset
+amx-bf16
+amx-int8
+amx-tile
+avxvnni
+serialize
+tsxldtrk
+uintr
+crc32
+mmx
avx512f
__GCC_ASM_FLAG_OUTPUTS__
__code_model_
__amd64__
__amd64
__x86_64
__x86_64h
__x86_64h__
__SEG_GS
__SEG_FS
__seg_gs
__attribute__((address_space(256)))
__seg_fs
__attribute__((address_space(257)))
__pentium_mmx__
__tune_pentium_mmx__
__tune_pentium3__
__tune_pentium2__
nocona
atom
goldmont
goldmont_plus
tremont
corei7
__tune_lakemont__
__k6_2__
__tune_k6_2__
__k6_3__
__tune_k6_3__
athlon
__athlon_sse__
__tune_athlon_sse__
amdfam10
btver1
bdver1
bdver2
bdver3
bdver4
znver1
znver2
znver3
geode
__NO_MATH_INLINES
__AES__
__VAES__
__PCLMUL__
__VPCLMULQDQ__
__LAHF_SAHF__
__LZCNT__
__RDRND__
__FSGSBASE__
__BMI__
__BMI2__
__POPCNT__
__RTM__
__PRFCHW__
__RDSEED__
__ADX__
__TBM__
__LWP__
__MWAITX__
__MOVBE__
__XOP__
__FMA4__
__SSE4A__
__FMA__
__F16C__
__GFNI__
__AVX512CD__
__AVX512VPOPCNTDQ__
__AVX512VNNI__
__AVX512BF16__
__AVX512ER__
__AVX512FP16__
__AVX512PF__
__AVX512DQ__
__AVX512BITALG__
__AVX512BW__
__AVX512VL__
__AVX512VBMI__
__AVX512VBMI2__
__AVX512IFMA__
__AVX512VP2INTERSECT__
__SHA__
__FXSR__
__XSAVE__
__XSAVEOPT__
__XSAVEC__
__XSAVES__
__PKU__
__CLFLUSHOPT__
__CLWB__
__WBNOINVD__
__SHSTK__
__SGX__
__PREFETCHWT1__
__CLZERO__
__KL__
__WIDEKL__
__RDPID__
__CLDEMOTE__
__WAITPKG__
__MOVDIRI__
__MOVDIR64B__
__PCONFIG__
__PTWRITE__
__INVPCID__
__ENQCMD__
__HRESET__
__AMXTILE__
__AMXINT8__
__AMXBF16__
__AVXVNNI__
__SERIALIZE__
__TSXLDTRK__
__UINTR__
__CRC32__
__RETPOLINE__
__AVX512F__
__AVX2__
__AVX__
__SSE4_2__
__SSE4_1__
__SSSE3__
__SSE3__
__SSE2__
__SSE2_MATH__
__SSE__
__SSE_MATH__
_M_IX86_FP
__3dNOW_A__
__3dNOW__
__MMX__
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16
__SIZEOF_FLOAT128__
3dnow
3dnowa
amx-bf16
amx-int8
amx-tile
avx2
avx512cd
avx512vpopcntdq
avx512vnni
avx512bf16
avx512er
avx512fp16
avx512pf
avx512dq
avx512bitalg
avx512bw
avx512vl
avx512vbmi
avx512vbmi2
avx512ifma
avx512vp2intersect
avxvnni
bmi2
cldemote
clflushopt
clwb
clzero
enqcmd
f16c
fma4
fsgsbase
fxsr
gfni
hreset
invpcid
widekl
lzcnt
movbe
movdiri
movdir64b
mwaitx
pclmul
pconfig
prefetchwt1
prfchw
ptwrite
rdpid
rdrnd
rdseed
sahf
serialize
shstk
sse3
ssse3
sse4a
tsxldtrk
uintr
vaes
vpclmulqdq
wbnoinvd
waitpkg
xsavec
xsaves
xsaveopt
cmov
pentium_iii
ivybridge
broadwell
skylake
cannonlake
+cmov
+cmov,+mmx
+cmov,+mmx,+sse
+cmov,+mmx,+sse,+sse2
+cmov,+mmx,+sse,+sse2,+sse3
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+movbe
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt,+avx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt,+f16c,+avx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+adx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512f,+adx,+avx512er,+avx512pf,+avx512cd
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+adx,+mpx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512dq,+avx512f,+adx,+avx512cd,+avx512bw,+avx512vl,+clwb
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512dq,+avx512f,+adx,+avx512ifma,+avx512cd,+avx512bw,+avx512vl,+avx512vbmi
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512f,+adx,+avx512er,+avx512pf,+avx512cd,+avx5124fmaps,+avx5124vnniw,+avx512vpopcntdq
bonnell
silvermont
goldmont-plus
westmere
icelake-client
icelake-server
cascadelake
tigerlake
cooperlake
sapphirerapids
alderlake
rocketlake
{ax}
{bx}
{cx}
{dx}
{si}
{di}
{st}
{st(1)}
st(1)
st(2)
st(3)
st(4)
st(5)
st(6)
st(7)
argp
fpcr
dirflag
frame
xmm1
xmm2
xmm3
xmm4
xmm5
xmm6
xmm7
xmm8
xmm9
xmm10
xmm11
xmm12
xmm13
xmm14
xmm15
ymm0
ymm1
ymm2
ymm3
ymm4
ymm5
ymm6
ymm7
ymm8
ymm9
ymm10
ymm11
ymm12
ymm13
ymm14
ymm15
xmm16
xmm17
xmm18
xmm19
xmm20
xmm21
xmm22
xmm23
xmm24
xmm25
xmm26
xmm27
xmm28
xmm29
xmm30
xmm31
ymm16
ymm17
ymm18
ymm19
ymm20
ymm21
ymm22
ymm23
ymm24
ymm25
ymm26
ymm27
ymm28
ymm29
ymm30
ymm31
zmm0
zmm1
zmm2
zmm3
zmm4
zmm5
zmm6
zmm7
zmm8
zmm9
zmm10
zmm11
zmm12
zmm13
zmm14
zmm15
zmm16
zmm17
zmm18
zmm19
zmm20
zmm21
zmm22
zmm23
zmm24
zmm25
zmm26
zmm27
zmm28
zmm29
zmm30
zmm31
bnd0
bnd1
bnd2
bnd3
tmm0
tmm1
tmm2
tmm3
tmm4
tmm5
tmm6
tmm7
r10d
r10w
r10b
r11d
r11w
r11b
r12d
r12w
r12b
r13d
r13w
r13b
r14d
r14w
r14b
r15d
r15w
r15b
__builtin_cpu_init
__builtin_cpu_supports
bcC*
__builtin_cpu_is
__builtin_ia32_undef128
ncV:128:
__builtin_ia32_undef256
ncV:256:
__builtin_ia32_undef512
ncV:512:
__builtin_ia32_readeflags_u32
__builtin_ia32_writeeflags_u32
__builtin_ia32_femms
__builtin_ia32_pavgusb
V8cV8cV8c
ncV:64:
__builtin_ia32_pf2id
V2iV2f
__builtin_ia32_pfacc
V2fV2fV2f
__builtin_ia32_pfadd
__builtin_ia32_pfcmpeq
V2iV2fV2f
__builtin_ia32_pfcmpge
__builtin_ia32_pfcmpgt
__builtin_ia32_pfmax
__builtin_ia32_pfmin
__builtin_ia32_pfmul
__builtin_ia32_pfrcp
V2fV2f
__builtin_ia32_pfrcpit1
__builtin_ia32_pfrcpit2
__builtin_ia32_pfrsqrt
__builtin_ia32_pfrsqit1
__builtin_ia32_pfsub
__builtin_ia32_pfsubr
__builtin_ia32_pi2fd
V2fV2i
__builtin_ia32_pmulhrw
V4sV4sV4s
__builtin_ia32_pf2iw
__builtin_ia32_pfnacc
__builtin_ia32_pfpnacc
__builtin_ia32_pi2fw
__builtin_ia32_pswapdsf
__builtin_ia32_pswapdsi
V2iV2i
_mm_prefetch
vcC*i
__builtin_ia32_emms
__builtin_ia32_paddb
__builtin_ia32_paddw
__builtin_ia32_paddd
V2iV2iV2i
__builtin_ia32_paddsb
__builtin_ia32_paddsw
__builtin_ia32_paddusb
__builtin_ia32_paddusw
__builtin_ia32_psubb
__builtin_ia32_psubw
__builtin_ia32_psubd
__builtin_ia32_psubsb
__builtin_ia32_psubsw
__builtin_ia32_psubusb
__builtin_ia32_psubusw
__builtin_ia32_pmulhw
__builtin_ia32_pmullw
__builtin_ia32_pmaddwd
V2iV4sV4s
__builtin_ia32_pand
V1OiV1OiV1Oi
__builtin_ia32_pandn
__builtin_ia32_por
__builtin_ia32_pxor
__builtin_ia32_psllw
V4sV4sV1Oi
__builtin_ia32_pslld
V2iV2iV1Oi
__builtin_ia32_psllq
__builtin_ia32_psrlw
__builtin_ia32_psrld
__builtin_ia32_psrlq
__builtin_ia32_psraw
__builtin_ia32_psrad
__builtin_ia32_psllwi
V4sV4si
__builtin_ia32_pslldi
V2iV2ii
__builtin_ia32_psllqi
V1OiV1Oii
__builtin_ia32_psrlwi
__builtin_ia32_psrldi
__builtin_ia32_psrlqi
__builtin_ia32_psrawi
__builtin_ia32_psradi
__builtin_ia32_packsswb
V8cV4sV4s
__builtin_ia32_packssdw
V4sV2iV2i
__builtin_ia32_packuswb
__builtin_ia32_punpckhbw
__builtin_ia32_punpckhwd
__builtin_ia32_punpckhdq
__builtin_ia32_punpcklbw
__builtin_ia32_punpcklwd
__builtin_ia32_punpckldq
__builtin_ia32_pcmpeqb
__builtin_ia32_pcmpeqw
__builtin_ia32_pcmpeqd
__builtin_ia32_pcmpgtb
__builtin_ia32_pcmpgtw
__builtin_ia32_pcmpgtd
__builtin_ia32_maskmovq
vV8cV8cc*
nV:64:
__builtin_ia32_movntq
vV1Oi*V1Oi
__builtin_ia32_vec_init_v2si
V2iii
__builtin_ia32_vec_init_v4hi
V4sssss
__builtin_ia32_vec_init_v8qi
V8ccccccccc
__builtin_ia32_vec_ext_v2si
iV2ii
__builtin_ia32_cvtpi2ps
V4fV4fV2i
mmx,sse
__builtin_ia32_cvtps2pi
V2iV4f
__builtin_ia32_cvttps2pi
__builtin_ia32_pavgb
__builtin_ia32_pavgw
__builtin_ia32_pmaxsw
__builtin_ia32_pmaxub
__builtin_ia32_pminsw
__builtin_ia32_pminub
__builtin_ia32_pmovmskb
iV8c
__builtin_ia32_pmulhuw
__builtin_ia32_psadbw
V4sV8cV8c
__builtin_ia32_pshufw
V4sV4sIc
__builtin_ia32_vec_ext_v4hi
iV4sIi
__builtin_ia32_vec_set_v4hi
V4sV4siIi
__builtin_ia32_cvtpd2pi
V2iV2d
mmx,sse2
__builtin_ia32_cvtpi2pd
V2dV2i
__builtin_ia32_cvttpd2pi
__builtin_ia32_paddq
__builtin_ia32_pmuludq
V1OiV2iV2i
__builtin_ia32_psubq
__builtin_ia32_pabsb
V8cV8c
mmx,ssse3
__builtin_ia32_pabsd
__builtin_ia32_pabsw
V4sV4s
__builtin_ia32_palignr
V8cV8cV8cIc
__builtin_ia32_phaddd
__builtin_ia32_phaddsw
__builtin_ia32_phaddw
__builtin_ia32_phsubd
__builtin_ia32_phsubsw
__builtin_ia32_phsubw
__builtin_ia32_pmaddubsw
__builtin_ia32_pmulhrsw
__builtin_ia32_pshufb
__builtin_ia32_psignw
__builtin_ia32_psignb
__builtin_ia32_psignd
__builtin_ia32_comieq
__builtin_ia32_comilt
__builtin_ia32_comile
__builtin_ia32_comigt
__builtin_ia32_comige
__builtin_ia32_comineq
__builtin_ia32_ucomieq
__builtin_ia32_ucomilt
__builtin_ia32_ucomile
__builtin_ia32_ucomigt
__builtin_ia32_ucomige
__builtin_ia32_ucomineq
__builtin_ia32_comisdeq
__builtin_ia32_comisdlt
__builtin_ia32_comisdle
__builtin_ia32_comisdgt
__builtin_ia32_comisdge
__builtin_ia32_comisdneq
__builtin_ia32_ucomisdeq
__builtin_ia32_ucomisdlt
__builtin_ia32_ucomisdle
__builtin_ia32_ucomisdgt
__builtin_ia32_ucomisdge
__builtin_ia32_ucomisdneq
__builtin_ia32_cmpeqps
__builtin_ia32_cmpltps
__builtin_ia32_cmpleps
__builtin_ia32_cmpunordps
__builtin_ia32_cmpneqps
__builtin_ia32_cmpnltps
__builtin_ia32_cmpnleps
__builtin_ia32_cmpordps
__builtin_ia32_cmpeqss
__builtin_ia32_cmpltss
__builtin_ia32_cmpless
__builtin_ia32_cmpunordss
__builtin_ia32_cmpneqss
__builtin_ia32_cmpnltss
__builtin_ia32_cmpnless
__builtin_ia32_cmpordss
__builtin_ia32_minps
__builtin_ia32_maxps
__builtin_ia32_minss
__builtin_ia32_maxss
__builtin_ia32_cmpeqpd
__builtin_ia32_cmpltpd
__builtin_ia32_cmplepd
__builtin_ia32_cmpunordpd
__builtin_ia32_cmpneqpd
__builtin_ia32_cmpnltpd
__builtin_ia32_cmpnlepd
__builtin_ia32_cmpordpd
__builtin_ia32_cmpeqsd
__builtin_ia32_cmpltsd
__builtin_ia32_cmplesd
__builtin_ia32_cmpunordsd
__builtin_ia32_cmpneqsd
__builtin_ia32_cmpnltsd
__builtin_ia32_cmpnlesd
__builtin_ia32_cmpordsd
__builtin_ia32_minpd
__builtin_ia32_maxpd
__builtin_ia32_minsd
__builtin_ia32_maxsd
__builtin_ia32_paddsb128
__builtin_ia32_paddsw128
__builtin_ia32_psubsb128
__builtin_ia32_psubsw128
__builtin_ia32_paddusb128
__builtin_ia32_paddusw128
__builtin_ia32_psubusb128
__builtin_ia32_psubusw128
__builtin_ia32_pmulhw128
__builtin_ia32_pavgb128
__builtin_ia32_pavgw128
__builtin_ia32_pmaxub128
__builtin_ia32_pmaxsw128
__builtin_ia32_pminub128
__builtin_ia32_pminsw128
__builtin_ia32_packsswb128
V16cV8sV8s
__builtin_ia32_packssdw128
__builtin_ia32_packuswb128
__builtin_ia32_pmulhuw128
__builtin_ia32_vec_ext_v4si
iV4iIi
__builtin_ia32_vec_ext_v4sf
__builtin_ia32_vec_ext_v8hi
sV8sIi
__builtin_ia32_vec_set_v8hi
V8sV8ssIi
__builtin_ia32_addsubps
__builtin_ia32_addsubpd
__builtin_ia32_haddps
__builtin_ia32_haddpd
__builtin_ia32_hsubps
__builtin_ia32_hsubpd
__builtin_ia32_phaddw128
__builtin_ia32_phaddd128
__builtin_ia32_phaddsw128
__builtin_ia32_phsubw128
__builtin_ia32_phsubd128
__builtin_ia32_phsubsw128
__builtin_ia32_pmaddubsw128
V8sV16cV16c
__builtin_ia32_pmulhrsw128
__builtin_ia32_pshufb128
__builtin_ia32_psignb128
__builtin_ia32_psignw128
__builtin_ia32_psignd128
__builtin_ia32_pabsb128
__builtin_ia32_pabsw128
__builtin_ia32_pabsd128
__builtin_ia32_ldmxcsr
_mm_setcsr
xmmintrin.h
__builtin_ia32_stmxcsr
_mm_getcsr
__builtin_ia32_cvtss2si
__builtin_ia32_cvttss2si
__builtin_ia32_movmskps
nV:128:
__builtin_ia32_sfence
_mm_sfence
__builtin_ia32_rcpps
__builtin_ia32_rcpss
__builtin_ia32_rsqrtps
__builtin_ia32_rsqrtss
__builtin_ia32_sqrtps
__builtin_ia32_sqrtss
__builtin_ia32_shufps
__builtin_ia32_maskmovdqu
vV16cV16cc*
__builtin_ia32_movmskpd
__builtin_ia32_pmovmskb128
iV16c
__builtin_ia32_movnti
vi*i
__builtin_ia32_pshufd
V4iV4iIi
__builtin_ia32_pshuflw
V8sV8sIi
__builtin_ia32_pshufhw
__builtin_ia32_psadbw128
V2OiV16cV16c
__builtin_ia32_sqrtpd
__builtin_ia32_sqrtsd
__builtin_ia32_shufpd
__builtin_ia32_cvtpd2dq
V2OiV2d
__builtin_ia32_cvtpd2ps
__builtin_ia32_cvttpd2dq
__builtin_ia32_cvtsd2si
__builtin_ia32_cvttsd2si
__builtin_ia32_cvtsd2ss
V4fV4fV2d
__builtin_ia32_cvtps2dq
__builtin_ia32_cvttps2dq
__builtin_ia32_clflush
_mm_clflush
emmintrin.h
__builtin_ia32_lfence
_mm_lfence
__builtin_ia32_mfence
_mm_mfence
__builtin_ia32_pause
_mm_pause
__builtin_ia32_pmuludq128
V2OiV4iV4i
__builtin_ia32_psraw128
__builtin_ia32_psrad128
__builtin_ia32_psrlw128
__builtin_ia32_psrld128
__builtin_ia32_psrlq128
V2OiV2OiV2Oi
__builtin_ia32_psllw128
__builtin_ia32_pslld128
__builtin_ia32_psllq128
__builtin_ia32_psllwi128
V8sV8si
__builtin_ia32_pslldi128
V4iV4ii
__builtin_ia32_psllqi128
V2OiV2Oii
__builtin_ia32_psrlwi128
__builtin_ia32_psrldi128
__builtin_ia32_psrlqi128
__builtin_ia32_psrawi128
__builtin_ia32_psradi128
__builtin_ia32_pmaddwd128
__builtin_ia32_pslldqi128_byteshift
V2OiV2OiIi
__builtin_ia32_psrldqi128_byteshift
__builtin_ia32_monitor
__builtin_ia32_mwait
__builtin_ia32_lddqu
V16ccC*
__builtin_ia32_palignr128
V16cV16cV16cIi
__builtin_ia32_insertps128
V4fV4fV4fIc
__builtin_ia32_pblendvb128
__builtin_ia32_pblendw128
V8sV8sV8sIi
__builtin_ia32_blendpd
__builtin_ia32_blendps
__builtin_ia32_blendvpd
__builtin_ia32_blendvps
__builtin_ia32_packusdw128
__builtin_ia32_pmaxsb128
__builtin_ia32_pmaxsd128
__builtin_ia32_pmaxud128
__builtin_ia32_pmaxuw128
__builtin_ia32_pminsb128
__builtin_ia32_pminsd128
__builtin_ia32_pminud128
__builtin_ia32_pminuw128
__builtin_ia32_pmuldq128
__builtin_ia32_roundps
V4fV4fIi
__builtin_ia32_roundss
__builtin_ia32_roundsd
__builtin_ia32_roundpd
V2dV2dIi
__builtin_ia32_dpps
__builtin_ia32_dppd
V2dV2dV2dIc
__builtin_ia32_ptestz128
iV2OiV2Oi
__builtin_ia32_ptestc128
__builtin_ia32_ptestnzc128
__builtin_ia32_mpsadbw128
V16cV16cV16cIc
__builtin_ia32_phminposuw128
__builtin_ia32_vec_ext_v16qi
cV16cIi
__builtin_ia32_vec_set_v16qi
V16cV16ccIi
__builtin_ia32_vec_set_v4si
V4iV4iiIi
__builtin_ia32_pcmpistrm128
__builtin_ia32_pcmpistri128
iV16cV16cIc
__builtin_ia32_pcmpestrm128
V16cV16ciV16ciIc
__builtin_ia32_pcmpestri128
iV16ciV16ciIc
__builtin_ia32_pcmpistria128
__builtin_ia32_pcmpistric128
__builtin_ia32_pcmpistrio128
__builtin_ia32_pcmpistris128
__builtin_ia32_pcmpistriz128
__builtin_ia32_pcmpestria128
__builtin_ia32_pcmpestric128
__builtin_ia32_pcmpestrio128
__builtin_ia32_pcmpestris128
__builtin_ia32_pcmpestriz128
__builtin_ia32_crc32qi
__builtin_ia32_crc32hi
__builtin_ia32_crc32si
__builtin_ia32_extrqi
V2OiV2OiIcIc
__builtin_ia32_extrq
V2OiV2OiV16c
__builtin_ia32_insertqi
V2OiV2OiV2OiIcIc
__builtin_ia32_insertq
__builtin_ia32_movntsd
vd*V2d
__builtin_ia32_movntss
vf*V4f
__builtin_ia32_aesenc128
__builtin_ia32_aesenclast128
__builtin_ia32_aesdec128
__builtin_ia32_aesdeclast128
__builtin_ia32_aesimc128
V2OiV2Oi
__builtin_ia32_aeskeygenassist128
V2OiV2OiIc
__builtin_ia32_aesenc256
V4OiV4OiV4Oi
__builtin_ia32_aesenc512
V8OiV8OiV8Oi
avx512f,vaes
__builtin_ia32_aesenclast256
__builtin_ia32_aesenclast512
__builtin_ia32_aesdec256
__builtin_ia32_aesdec512
__builtin_ia32_aesdeclast256
__builtin_ia32_aesdeclast512
__builtin_ia32_vgf2p8affineinvqb_v16qi
__builtin_ia32_vgf2p8affineinvqb_v32qi
V32cV32cV32cIc
avx,gfni
__builtin_ia32_vgf2p8affineinvqb_v64qi
V64cV64cV64cIc
avx512bw,gfni
__builtin_ia32_vgf2p8affineqb_v16qi
__builtin_ia32_vgf2p8affineqb_v32qi
__builtin_ia32_vgf2p8affineqb_v64qi
__builtin_ia32_vgf2p8mulb_v16qi
__builtin_ia32_vgf2p8mulb_v32qi
V32cV32cV32c
__builtin_ia32_vgf2p8mulb_v64qi
V64cV64cV64c
__builtin_ia32_pclmulqdq128
V2OiV2OiV2OiIc
__builtin_ia32_pclmulqdq256
V4OiV4OiV4OiIc
__builtin_ia32_pclmulqdq512
V8OiV8OiV8OiIc
avx512f,vpclmulqdq
__builtin_ia32_addsubpd256
V4dV4dV4d
__builtin_ia32_addsubps256
V8fV8fV8f
__builtin_ia32_haddpd256
__builtin_ia32_hsubps256
__builtin_ia32_hsubpd256
__builtin_ia32_haddps256
__builtin_ia32_maxpd256
__builtin_ia32_maxps256
__builtin_ia32_minpd256
__builtin_ia32_minps256
__builtin_ia32_vpermilvarpd
V2dV2dV2Oi
__builtin_ia32_vpermilvarps
__builtin_ia32_vpermilvarpd256
V4dV4dV4Oi
__builtin_ia32_vpermilvarps256
V8fV8fV8i
__builtin_ia32_blendpd256
V4dV4dV4dIi
__builtin_ia32_blendps256
V8fV8fV8fIi
__builtin_ia32_blendvpd256
V4dV4dV4dV4d
__builtin_ia32_blendvps256
V8fV8fV8fV8f
__builtin_ia32_shufpd256
__builtin_ia32_shufps256
__builtin_ia32_dpps256
V8fV8fV8fIc
__builtin_ia32_cmppd
__builtin_ia32_cmppd256
V4dV4dV4dIc
__builtin_ia32_cmpps
__builtin_ia32_cmpps256
__builtin_ia32_cmpsd
__builtin_ia32_cmpss
__builtin_ia32_vextractf128_pd256
V2dV4dIi
__builtin_ia32_vextractf128_ps256
V4fV8fIi
__builtin_ia32_vextractf128_si256
V4iV8iIi
__builtin_ia32_cvtpd2ps256
V4fV4d
__builtin_ia32_cvtps2dq256
V8iV8f
__builtin_ia32_cvttpd2dq256
V4iV4d
__builtin_ia32_cvtpd2dq256
__builtin_ia32_cvttps2dq256
__builtin_ia32_vperm2f128_pd256
__builtin_ia32_vperm2f128_ps256
__builtin_ia32_vperm2f128_si256
V8iV8iV8iIi
__builtin_ia32_vpermilpd
__builtin_ia32_vpermilps
__builtin_ia32_vpermilpd256
V4dV4dIi
__builtin_ia32_vpermilps256
V8fV8fIi
__builtin_ia32_vinsertf128_pd256
V4dV4dV2dIi
__builtin_ia32_vinsertf128_ps256
V8fV8fV4fIi
__builtin_ia32_vinsertf128_si256
V8iV8iV4iIi
__builtin_ia32_sqrtpd256
V4dV4d
__builtin_ia32_sqrtps256
V8fV8f
__builtin_ia32_rsqrtps256
__builtin_ia32_rcpps256
__builtin_ia32_roundpd256
__builtin_ia32_roundps256
__builtin_ia32_vtestzpd
__builtin_ia32_vtestcpd
__builtin_ia32_vtestnzcpd
__builtin_ia32_vtestzps
__builtin_ia32_vtestcps
__builtin_ia32_vtestnzcps
__builtin_ia32_vtestzpd256
iV4dV4d
__builtin_ia32_vtestcpd256
__builtin_ia32_vtestnzcpd256
__builtin_ia32_vtestzps256
iV8fV8f
__builtin_ia32_vtestcps256
__builtin_ia32_vtestnzcps256
__builtin_ia32_ptestz256
iV4OiV4Oi
__builtin_ia32_ptestc256
__builtin_ia32_ptestnzc256
__builtin_ia32_movmskpd256
iV4d
__builtin_ia32_movmskps256
iV8f
__builtin_ia32_vzeroall
__builtin_ia32_vzeroupper
__builtin_ia32_lddqu256
V32ccC*
nV:256:
__builtin_ia32_maskloadpd
V2dV2dC*V2Oi
__builtin_ia32_maskloadps
V4fV4fC*V4i
__builtin_ia32_maskloadpd256
V4dV4dC*V4Oi
__builtin_ia32_maskloadps256
V8fV8fC*V8i
__builtin_ia32_maskstorepd
vV2d*V2OiV2d
__builtin_ia32_maskstoreps
vV4f*V4iV4f
__builtin_ia32_maskstorepd256
vV4d*V4OiV4d
__builtin_ia32_maskstoreps256
vV8f*V8iV8f
__builtin_ia32_vec_ext_v32qi
cV32cIi
__builtin_ia32_vec_ext_v16hi
sV16sIi
__builtin_ia32_vec_ext_v8si
iV8iIi
__builtin_ia32_vec_set_v32qi
V32cV32ccIi
__builtin_ia32_vec_set_v16hi
V16sV16ssIi
__builtin_ia32_vec_set_v8si
V8iV8iiIi
__builtin_ia32_mpsadbw256
__builtin_ia32_pabsb256
V32cV32c
__builtin_ia32_pabsw256
V16sV16s
__builtin_ia32_pabsd256
V8iV8i
__builtin_ia32_packsswb256
V32cV16sV16s
__builtin_ia32_packssdw256
V16sV8iV8i
__builtin_ia32_packuswb256
__builtin_ia32_packusdw256
__builtin_ia32_paddsb256
__builtin_ia32_paddsw256
V16sV16sV16s
__builtin_ia32_psubsb256
__builtin_ia32_psubsw256
__builtin_ia32_paddusb256
__builtin_ia32_paddusw256
__builtin_ia32_psubusb256
__builtin_ia32_psubusw256
__builtin_ia32_palignr256
V32cV32cV32cIi
__builtin_ia32_pavgb256
__builtin_ia32_pavgw256
__builtin_ia32_pblendvb256
V32cV32cV32cV32c
__builtin_ia32_pblendw256
V16sV16sV16sIi
__builtin_ia32_phaddw256
__builtin_ia32_phaddd256
V8iV8iV8i
__builtin_ia32_phaddsw256
__builtin_ia32_phsubw256
__builtin_ia32_phsubd256
__builtin_ia32_phsubsw256
__builtin_ia32_pmaddubsw256
V16sV32cV32c
__builtin_ia32_pmaddwd256
V8iV16sV16s
__builtin_ia32_pmaxub256
__builtin_ia32_pmaxuw256
__builtin_ia32_pmaxud256
__builtin_ia32_pmaxsb256
__builtin_ia32_pmaxsw256
__builtin_ia32_pmaxsd256
__builtin_ia32_pminub256
__builtin_ia32_pminuw256
__builtin_ia32_pminud256
__builtin_ia32_pminsb256
__builtin_ia32_pminsw256
__builtin_ia32_pminsd256
__builtin_ia32_pmovmskb256
iV32c
__builtin_ia32_pmuldq256
V4OiV8iV8i
__builtin_ia32_pmulhrsw256
__builtin_ia32_pmulhuw256
__builtin_ia32_pmulhw256
__builtin_ia32_pmuludq256
__builtin_ia32_psadbw256
V4OiV32cV32c
__builtin_ia32_pshufb256
__builtin_ia32_pshufd256
V8iV8iIi
__builtin_ia32_pshuflw256
V16sV16sIi
__builtin_ia32_pshufhw256
__builtin_ia32_psignb256
__builtin_ia32_psignw256
__builtin_ia32_psignd256
__builtin_ia32_psllwi256
V16sV16si
__builtin_ia32_psllw256
V16sV16sV8s
__builtin_ia32_pslldqi256_byteshift
V4OiV4OiIi
__builtin_ia32_pslldi256
V8iV8ii
__builtin_ia32_pslld256
V8iV8iV4i
__builtin_ia32_psllqi256
V4OiV4Oii
__builtin_ia32_psllq256
V4OiV4OiV2Oi
__builtin_ia32_psrawi256
__builtin_ia32_psraw256
__builtin_ia32_psradi256
__builtin_ia32_psrad256
__builtin_ia32_psrldqi256_byteshift
__builtin_ia32_psrlwi256
__builtin_ia32_psrlw256
__builtin_ia32_psrldi256
__builtin_ia32_psrld256
__builtin_ia32_psrlqi256
__builtin_ia32_psrlq256
__builtin_ia32_pblendd128
V4iV4iV4iIi
__builtin_ia32_pblendd256
__builtin_ia32_permvarsi256
__builtin_ia32_permdf256
__builtin_ia32_permvarsf256
__builtin_ia32_permti256
V4OiV4OiV4OiIi
__builtin_ia32_permdi256
__builtin_ia32_extract128i256
V2OiV4OiIi
__builtin_ia32_insert128i256
V4OiV4OiV2OiIi
__builtin_ia32_maskloadd256
V8iV8iC*V8i
__builtin_ia32_maskloadq256
V4OiV4OiC*V4Oi
__builtin_ia32_maskloadd
V4iV4iC*V4i
__builtin_ia32_maskloadq
V2OiV2OiC*V2Oi
__builtin_ia32_maskstored256
vV8i*V8iV8i
__builtin_ia32_maskstoreq256
vV4Oi*V4OiV4Oi
__builtin_ia32_maskstored
vV4i*V4iV4i
__builtin_ia32_maskstoreq
vV2Oi*V2OiV2Oi
__builtin_ia32_psllv8si
__builtin_ia32_psllv4si
__builtin_ia32_psllv4di
__builtin_ia32_psllv2di
__builtin_ia32_psrav8si
__builtin_ia32_psrav4si
__builtin_ia32_psrlv8si
__builtin_ia32_psrlv4si
__builtin_ia32_psrlv4di
__builtin_ia32_psrlv2di
__builtin_ia32_gatherd_pd
V2dV2ddC*V4iV2dIc
__builtin_ia32_gatherd_pd256
V4dV4ddC*V4iV4dIc
__builtin_ia32_gatherq_pd
V2dV2ddC*V2OiV2dIc
__builtin_ia32_gatherq_pd256
V4dV4ddC*V4OiV4dIc
__builtin_ia32_gatherd_ps
V4fV4ffC*V4iV4fIc
__builtin_ia32_gatherd_ps256
V8fV8ffC*V8iV8fIc
__builtin_ia32_gatherq_ps
V4fV4ffC*V2OiV4fIc
__builtin_ia32_gatherq_ps256
V4fV4ffC*V4OiV4fIc
__builtin_ia32_gatherd_q
V2OiV2OiOiC*V4iV2OiIc
__builtin_ia32_gatherd_q256
V4OiV4OiOiC*V4iV4OiIc
__builtin_ia32_gatherq_q
V2OiV2OiOiC*V2OiV2OiIc
__builtin_ia32_gatherq_q256
V4OiV4OiOiC*V4OiV4OiIc
__builtin_ia32_gatherd_d
V4iV4iiC*V4iV4iIc
__builtin_ia32_gatherd_d256
V8iV8iiC*V8iV8iIc
__builtin_ia32_gatherq_d
V4iV4iiC*V2OiV4iIc
__builtin_ia32_gatherq_d256
V4iV4iiC*V4OiV4iIc
__builtin_ia32_vcvtps2ph
V8sV4fIi
__builtin_ia32_vcvtps2ph256
V8sV8fIi
__builtin_ia32_vcvtph2ps
V4fV8s
__builtin_ia32_vcvtph2ps256
V8fV8s
__builtin_ia32_rdrand16_step
UiUs*
__builtin_ia32_rdrand32_step
__builtin_ia32_fxrstor
__builtin_ia32_fxsave
__builtin_ia32_xsave
vv*UOi
__builtin_ia32_xrstor
__builtin_ia32_xgetbv
UOiUi
_xgetbv
UWiUi
immintrin.h
__builtin_ia32_xsetbv
vUiUOi
_xsetbv
vUiUWi
__builtin_ia32_xsaveopt
__builtin_ia32_xrstors
__builtin_ia32_xsavec
__builtin_ia32_xsaves
__builtin_ia32_incsspd
__builtin_ia32_rdsspd
__builtin_ia32_saveprevssp
__builtin_ia32_rstorssp
__builtin_ia32_wrssd
vUiv*
__builtin_ia32_wrussd
__builtin_ia32_setssbsy
__builtin_ia32_clrssbsy
__builtin_ia32_clflushopt
__builtin_ia32_clwb
__builtin_ia32_wbinvd
__builtin_ia32_wbnoinvd
__builtin_ia32_addcarryx_u32
UcUcUiUiUi*
__builtin_ia32_subborrow_u32
__builtin_ia32_rdseed16_step
__builtin_ia32_rdseed32_step
__builtin_ia32_lzcnt_u16
UsUs
__builtin_ia32_lzcnt_u32
__builtin_ia32_bextr_u32
__builtin_ia32_tzcnt_u16
__builtin_ia32_tzcnt_u32
__builtin_ia32_bzhi_si
__builtin_ia32_pdep_si
__builtin_ia32_pext_si
__builtin_ia32_bextri_u32
__builtin_ia32_llwpcb
__builtin_ia32_slwpcb
__builtin_ia32_lwpins32
UcUiUiIUi
__builtin_ia32_lwpval32
vUiUiIUi
__builtin_ia32_sha1rnds4
V4iV4iV4iIc
__builtin_ia32_sha1nexte
__builtin_ia32_sha1msg1
__builtin_ia32_sha1msg2
__builtin_ia32_sha256rnds2
__builtin_ia32_sha256msg1
__builtin_ia32_sha256msg2
__builtin_ia32_vfmaddps
fma|fma4
__builtin_ia32_vfmaddpd
__builtin_ia32_vfmaddss3
__builtin_ia32_vfmaddsd3
__builtin_ia32_vfmaddss
__builtin_ia32_vfmaddsd
__builtin_ia32_vfmaddsubps
__builtin_ia32_vfmaddsubpd
__builtin_ia32_vfmaddps256
__builtin_ia32_vfmaddpd256
__builtin_ia32_vfmaddsubps256
__builtin_ia32_vfmaddsubpd256
__builtin_ia32_vfmaddpd512_mask
V8dV8dV8dV8dUcIi
__builtin_ia32_vfmaddpd512_maskz
__builtin_ia32_vfmaddpd512_mask3
__builtin_ia32_vfmsubpd512_mask3
__builtin_ia32_vfmaddps512_mask
V16fV16fV16fV16fUsIi
__builtin_ia32_vfmaddps512_maskz
__builtin_ia32_vfmaddps512_mask3
__builtin_ia32_vfmsubps512_mask3
__builtin_ia32_vfmaddsubpd512_mask
__builtin_ia32_vfmaddsubpd512_maskz
__builtin_ia32_vfmaddsubpd512_mask3
__builtin_ia32_vfmsubaddpd512_mask3
__builtin_ia32_vfmaddsubps512_mask
__builtin_ia32_vfmaddsubps512_maskz
__builtin_ia32_vfmaddsubps512_mask3
__builtin_ia32_vfmsubaddps512_mask3
__builtin_ia32_vpmacssww
__builtin_ia32_vpmacsww
__builtin_ia32_vpmacsswd
V4iV8sV8sV4i
__builtin_ia32_vpmacswd
__builtin_ia32_vpmacssdd
__builtin_ia32_vpmacsdd
__builtin_ia32_vpmacssdql
V2OiV4iV4iV2Oi
__builtin_ia32_vpmacsdql
__builtin_ia32_vpmacssdqh
__builtin_ia32_vpmacsdqh
__builtin_ia32_vpmadcsswd
__builtin_ia32_vpmadcswd
__builtin_ia32_vphaddbw
__builtin_ia32_vphaddbd
V4iV16c
__builtin_ia32_vphaddbq
V2OiV16c
__builtin_ia32_vphaddwd
__builtin_ia32_vphaddwq
V2OiV8s
__builtin_ia32_vphadddq
V2OiV4i
__builtin_ia32_vphaddubw
__builtin_ia32_vphaddubd
__builtin_ia32_vphaddubq
__builtin_ia32_vphadduwd
__builtin_ia32_vphadduwq
__builtin_ia32_vphaddudq
__builtin_ia32_vphsubbw
__builtin_ia32_vphsubwd
__builtin_ia32_vphsubdq
__builtin_ia32_vpperm
__builtin_ia32_vprotb
__builtin_ia32_vprotw
__builtin_ia32_vprotd
__builtin_ia32_vprotq
__builtin_ia32_vprotbi
V16cV16cIc
__builtin_ia32_vprotwi
V8sV8sIc
__builtin_ia32_vprotdi
V4iV4iIc
__builtin_ia32_vprotqi
__builtin_ia32_vpshlb
__builtin_ia32_vpshlw
__builtin_ia32_vpshld
__builtin_ia32_vpshlq
__builtin_ia32_vpshab
__builtin_ia32_vpshaw
__builtin_ia32_vpshad
__builtin_ia32_vpshaq
__builtin_ia32_vpcomub
__builtin_ia32_vpcomuw
V8sV8sV8sIc
__builtin_ia32_vpcomud
__builtin_ia32_vpcomuq
__builtin_ia32_vpcomb
__builtin_ia32_vpcomw
__builtin_ia32_vpcomd
__builtin_ia32_vpcomq
__builtin_ia32_vpermil2pd
V2dV2dV2dV2OiIc
__builtin_ia32_vpermil2pd256
V4dV4dV4dV4OiIc
__builtin_ia32_vpermil2ps
V4fV4fV4fV4iIc
__builtin_ia32_vpermil2ps256
V8fV8fV8fV8iIc
__builtin_ia32_vfrczss
__builtin_ia32_vfrczsd
__builtin_ia32_vfrczps
__builtin_ia32_vfrczpd
__builtin_ia32_vfrczps256
__builtin_ia32_vfrczpd256
__builtin_ia32_xbegin
__builtin_ia32_xend
__builtin_ia32_xabort
__builtin_ia32_xtest
__builtin_ia32_rdpmc
UOii
__builtin_ia32_rdtsc
__rdtsc
__builtin_ia32_rdtscp
UOiUi*
__builtin_ia32_rdpid
__builtin_ia32_rdpkru
__builtin_ia32_wrpkru
__builtin_ia32_sqrtpd512
V8dV8dIi
__builtin_ia32_sqrtps512
V16fV16fIi
__builtin_ia32_rsqrt14sd_mask
V2dV2dV2dV2dUc
__builtin_ia32_rsqrt14ss_mask
V4fV4fV4fV4fUc
__builtin_ia32_rsqrt14pd512_mask
V8dV8dV8dUc
__builtin_ia32_rsqrt14ps512_mask
V16fV16fV16fUs
__builtin_ia32_rsqrt28sd_round_mask
V2dV2dV2dV2dUcIi
__builtin_ia32_rsqrt28ss_round_mask
V4fV4fV4fV4fUcIi
__builtin_ia32_rsqrt28pd_mask
V8dV8dV8dUcIi
__builtin_ia32_rsqrt28ps_mask
V16fV16fV16fUsIi
__builtin_ia32_rcp14sd_mask
__builtin_ia32_rcp14ss_mask
__builtin_ia32_rcp14pd512_mask
__builtin_ia32_rcp14ps512_mask
__builtin_ia32_rcp28sd_round_mask
__builtin_ia32_rcp28ss_round_mask
__builtin_ia32_rcp28pd_mask
__builtin_ia32_rcp28ps_mask
__builtin_ia32_exp2pd_mask
__builtin_ia32_exp2ps_mask
__builtin_ia32_cvttps2dq512_mask
V16iV16fV16iUsIi
__builtin_ia32_cvttps2udq512_mask
__builtin_ia32_cvttpd2dq512_mask
V8iV8dV8iUcIi
__builtin_ia32_cvttpd2udq512_mask
__builtin_ia32_cmpps512_mask
UsV16fV16fIiUsIi
__builtin_ia32_cmpps256_mask
UcV8fV8fIiUc
__builtin_ia32_cmpps128_mask
UcV4fV4fIiUc
__builtin_ia32_cmppd512_mask
UcV8dV8dIiUcIi
__builtin_ia32_cmppd256_mask
UcV4dV4dIiUc
__builtin_ia32_cmppd128_mask
UcV2dV2dIiUc
__builtin_ia32_rndscaleps_mask
V16fV16fIiV16fUsIi
__builtin_ia32_rndscalepd_mask
V8dV8dIiV8dUcIi
__builtin_ia32_cvtps2dq512_mask
__builtin_ia32_cvtpd2dq512_mask
__builtin_ia32_cvtps2udq512_mask
__builtin_ia32_cvtpd2udq512_mask
__builtin_ia32_minps512
V16fV16fV16fIi
__builtin_ia32_minpd512
V8dV8dV8dIi
__builtin_ia32_maxps512
__builtin_ia32_maxpd512
__builtin_ia32_cvtdq2ps512_mask
V16fV16iV16fUsIi
__builtin_ia32_cvtudq2ps512_mask
__builtin_ia32_cvtpd2ps512_mask
V8fV8dV8fUcIi
__builtin_ia32_vcvtps2ph512_mask
V16sV16fIiV16sUs
__builtin_ia32_vcvtph2ps512_mask
V16fV16sV16fUsIi
__builtin_ia32_pabsd512
__builtin_ia32_pabsq512
V8OiV8Oi
__builtin_ia32_pmaxsd512
__builtin_ia32_pmaxsq512
__builtin_ia32_pmaxud512
__builtin_ia32_pmaxuq512
__builtin_ia32_pminsd512
__builtin_ia32_pminsq512
__builtin_ia32_pminud512
__builtin_ia32_pminuq512
__builtin_ia32_pmuldq512
V8OiV16iV16i
__builtin_ia32_pmuludq512
__builtin_ia32_loaddqusi512_mask
V16iiC*V16iUs
nV:512:
__builtin_ia32_loaddqudi512_mask
V8OiOiC*V8OiUc
__builtin_ia32_loadups512_mask
V16ffC*V16fUs
__builtin_ia32_loadaps512_mask
V16fV16fC*V16fUs
__builtin_ia32_loadupd512_mask
V8ddC*V8dUc
__builtin_ia32_loadapd512_mask
V8dV8dC*V8dUc
__builtin_ia32_storedqudi512_mask
vOi*V8OiUc
__builtin_ia32_storedqusi512_mask
vi*V16iUs
__builtin_ia32_storeupd512_mask
vd*V8dUc
__builtin_ia32_storeapd512_mask
vV8d*V8dUc
__builtin_ia32_storeups512_mask
vf*V16fUs
__builtin_ia32_storeaps512_mask
vV16f*V16fUs
__builtin_ia32_alignq512
V8OiV8OiV8OiIi
__builtin_ia32_alignd512
V16iV16iV16iIi
__builtin_ia32_alignd128
__builtin_ia32_alignd256
__builtin_ia32_alignq128
V2OiV2OiV2OiIi
__builtin_ia32_alignq256
__builtin_ia32_extractf64x4_mask
V4dV8dIiV4dUc
__builtin_ia32_extractf32x4_mask
V4fV16fIiV4fUc
__builtin_ia32_vpdpbusd128
avx512vl,avx512vnni|avxvnni
__builtin_ia32_vpdpbusd256
V8iV8iV8iV8i
__builtin_ia32_vpdpbusd512
__builtin_ia32_vpdpbusds128
__builtin_ia32_vpdpbusds256
__builtin_ia32_vpdpbusds512
__builtin_ia32_vpdpwssd128
__builtin_ia32_vpdpwssd256
__builtin_ia32_vpdpwssd512
__builtin_ia32_vpdpwssds128
__builtin_ia32_vpdpwssds256
__builtin_ia32_vpdpwssds512
__builtin_ia32_gather3div2df
V2dV2dvC*V2OiUcIi
__builtin_ia32_gather3div2di
V2OiV2OivC*V2OiUcIi
__builtin_ia32_gather3div4df
V4dV4dvC*V4OiUcIi
__builtin_ia32_gather3div4di
V4OiV4OivC*V4OiUcIi
__builtin_ia32_gather3div4sf
V4fV4fvC*V2OiUcIi
__builtin_ia32_gather3div4si
V4iV4ivC*V2OiUcIi
__builtin_ia32_gather3div8sf
V4fV4fvC*V4OiUcIi
__builtin_ia32_gather3div8si
V4iV4ivC*V4OiUcIi
__builtin_ia32_gather3siv2df
V2dV2dvC*V4iUcIi
__builtin_ia32_gather3siv2di
V2OiV2OivC*V4iUcIi
__builtin_ia32_gather3siv4df
V4dV4dvC*V4iUcIi
__builtin_ia32_gather3siv4di
V4OiV4OivC*V4iUcIi
__builtin_ia32_gather3siv4sf
V4fV4fvC*V4iUcIi
__builtin_ia32_gather3siv4si
V4iV4ivC*V4iUcIi
__builtin_ia32_gather3siv8sf
V8fV8fvC*V8iUcIi
__builtin_ia32_gather3siv8si
V8iV8ivC*V8iUcIi
__builtin_ia32_gathersiv8df
V8dV8dvC*V8iUcIi
__builtin_ia32_gathersiv16sf
V16fV16fvC*V16iUsIi
__builtin_ia32_gatherdiv8df
V8dV8dvC*V8OiUcIi
__builtin_ia32_gatherdiv16sf
V8fV8fvC*V8OiUcIi
__builtin_ia32_gathersiv8di
V8OiV8OivC*V8iUcIi
__builtin_ia32_gathersiv16si
V16iV16ivC*V16iUsIi
__builtin_ia32_gatherdiv8di
V8OiV8OivC*V8OiUcIi
__builtin_ia32_gatherdiv16si
V8iV8ivC*V8OiUcIi
__builtin_ia32_scattersiv8df
vv*UcV8iV8dIi
__builtin_ia32_scattersiv16sf
vv*UsV16iV16fIi
__builtin_ia32_scatterdiv8df
vv*UcV8OiV8dIi
__builtin_ia32_scatterdiv16sf
vv*UcV8OiV8fIi
__builtin_ia32_scattersiv8di
vv*UcV8iV8OiIi
__builtin_ia32_scattersiv16si
vv*UsV16iV16iIi
__builtin_ia32_scatterdiv8di
vv*UcV8OiV8OiIi
__builtin_ia32_scatterdiv16si
vv*UcV8OiV8iIi
__builtin_ia32_gatherpfdpd
vUcV8ivC*IiIi
__builtin_ia32_gatherpfdps
vUsV16ivC*IiIi
__builtin_ia32_gatherpfqpd
vUcV8OivC*IiIi
__builtin_ia32_gatherpfqps
__builtin_ia32_scatterpfdpd
vUcV8iv*IiIi
__builtin_ia32_scatterpfdps
vUsV16iv*IiIi
__builtin_ia32_scatterpfqpd
vUcV8Oiv*IiIi
__builtin_ia32_scatterpfqps
__builtin_ia32_knotqi
UcUc
__builtin_ia32_knothi
__builtin_ia32_knotsi
__builtin_ia32_knotdi
UOiUOi
__builtin_ia32_cmpb128_mask
UsV16cV16cIiUs
avx512vl,avx512bw
__builtin_ia32_cmpd128_mask
UcV4iV4iIiUc
__builtin_ia32_cmpq128_mask
UcV2OiV2OiIiUc
__builtin_ia32_cmpw128_mask
UcV8sV8sIiUc
__builtin_ia32_cmpb256_mask
UiV32cV32cIiUi
__builtin_ia32_cmpd256_mask
UcV8iV8iIiUc
__builtin_ia32_cmpq256_mask
UcV4OiV4OiIiUc
__builtin_ia32_cmpw256_mask
UsV16sV16sIiUs
__builtin_ia32_cmpb512_mask
UOiV64cV64cIiUOi
__builtin_ia32_cmpd512_mask
UsV16iV16iIiUs
__builtin_ia32_cmpq512_mask
UcV8OiV8OiIiUc
__builtin_ia32_cmpw512_mask
UiV32sV32sIiUi
__builtin_ia32_ucmpb128_mask
__builtin_ia32_ucmpd128_mask
__builtin_ia32_ucmpq128_mask
__builtin_ia32_ucmpw128_mask
__builtin_ia32_ucmpb256_mask
__builtin_ia32_ucmpd256_mask
__builtin_ia32_ucmpq256_mask
__builtin_ia32_ucmpw256_mask
__builtin_ia32_ucmpb512_mask
__builtin_ia32_ucmpd512_mask
__builtin_ia32_ucmpq512_mask
__builtin_ia32_ucmpw512_mask
__builtin_ia32_pabsb512
V64cV64c
__builtin_ia32_pabsw512
V32sV32s
__builtin_ia32_packssdw512
V32sV16iV16i
__builtin_ia32_packsswb512
V64cV32sV32s
__builtin_ia32_packusdw512
__builtin_ia32_packuswb512
__builtin_ia32_paddsb512
__builtin_ia32_paddsw512
V32sV32sV32s
__builtin_ia32_paddusb512
__builtin_ia32_paddusw512
__builtin_ia32_pavgb512
__builtin_ia32_pavgw512
__builtin_ia32_pmaxsb512
__builtin_ia32_pmaxsw512
__builtin_ia32_pmaxub512
__builtin_ia32_pmaxuw512
__builtin_ia32_pminsb512
__builtin_ia32_pminsw512
__builtin_ia32_pminub512
__builtin_ia32_pminuw512
__builtin_ia32_pshufb512
__builtin_ia32_psubsb512
__builtin_ia32_psubsw512
__builtin_ia32_psubusb512
__builtin_ia32_psubusw512
__builtin_ia32_vpconflictdi_128
avx512cd,avx512vl
__builtin_ia32_vpconflictdi_256
V4OiV4Oi
__builtin_ia32_vpconflictsi_128
__builtin_ia32_vpconflictsi_256
__builtin_ia32_vpconflictdi_512
__builtin_ia32_vpconflictsi_512
__builtin_ia32_vplzcntd_512
__builtin_ia32_vplzcntq_512
__builtin_ia32_vpopcntd_128
avx512vpopcntdq,avx512vl
__builtin_ia32_vpopcntq_128
__builtin_ia32_vpopcntd_256
__builtin_ia32_vpopcntq_256
__builtin_ia32_vpopcntd_512
__builtin_ia32_vpopcntq_512
__builtin_ia32_vpopcntb_128
avx512vl,avx512bitalg
__builtin_ia32_vpopcntw_128
__builtin_ia32_vpopcntb_256
__builtin_ia32_vpopcntw_256
__builtin_ia32_vpopcntb_512
__builtin_ia32_vpopcntw_512
__builtin_ia32_vpshufbitqmb128_mask
UsV16cV16cUs
__builtin_ia32_vpshufbitqmb256_mask
UiV32cV32cUi
__builtin_ia32_vpshufbitqmb512_mask
UOiV64cV64cUOi
__builtin_ia32_pmulhrsw512
__builtin_ia32_pmulhuw512
__builtin_ia32_pmulhw512
__builtin_ia32_addpd512
__builtin_ia32_addps512
__builtin_ia32_divpd512
__builtin_ia32_divps512
__builtin_ia32_mulpd512
__builtin_ia32_mulps512
__builtin_ia32_subpd512
__builtin_ia32_subps512
__builtin_ia32_pmaddubsw512
V32sV64cV64c
__builtin_ia32_pmaddwd512
V16iV32sV32s
__builtin_ia32_addss_round_mask
__builtin_ia32_divss_round_mask
__builtin_ia32_mulss_round_mask
__builtin_ia32_subss_round_mask
__builtin_ia32_maxss_round_mask
__builtin_ia32_minss_round_mask
__builtin_ia32_addsd_round_mask
__builtin_ia32_divsd_round_mask
__builtin_ia32_mulsd_round_mask
__builtin_ia32_subsd_round_mask
__builtin_ia32_maxsd_round_mask
__builtin_ia32_minsd_round_mask
__builtin_ia32_compressdf128_mask
V2dV2dV2dUc
__builtin_ia32_compressdf256_mask
V4dV4dV4dUc
__builtin_ia32_compressdi128_mask
V2OiV2OiV2OiUc
__builtin_ia32_compressdi256_mask
V4OiV4OiV4OiUc
__builtin_ia32_compresshi128_mask
V8sV8sV8sUc
avx512vl,avx512vbmi2
__builtin_ia32_compresshi256_mask
V16sV16sV16sUs
__builtin_ia32_compressqi128_mask
V16cV16cV16cUs
__builtin_ia32_compressqi256_mask
V32cV32cV32cUi
__builtin_ia32_compresssf128_mask
V4fV4fV4fUc
__builtin_ia32_compresssf256_mask
V8fV8fV8fUc
__builtin_ia32_compresssi128_mask
V4iV4iV4iUc
__builtin_ia32_compresssi256_mask
V8iV8iV8iUc
__builtin_ia32_compressstoredf128_mask
vV2d*V2dUc
__builtin_ia32_compressstoredf256_mask
vV4d*V4dUc
__builtin_ia32_compressstoredi128_mask
vV2Oi*V2OiUc
__builtin_ia32_compressstoredi256_mask
vV4Oi*V4OiUc
__builtin_ia32_compressstorehi128_mask
vV8s*V8sUc
__builtin_ia32_compressstorehi256_mask
vV16s*V16sUs
__builtin_ia32_compressstoreqi128_mask
vV16c*V16cUs
__builtin_ia32_compressstoreqi256_mask
vV32c*V32cUi
__builtin_ia32_compressstoresf128_mask
vV4f*V4fUc
__builtin_ia32_compressstoresf256_mask
vV8f*V8fUc
__builtin_ia32_compressstoresi128_mask
vV4i*V4iUc
__builtin_ia32_compressstoresi256_mask
vV8i*V8iUc
__builtin_ia32_cvtpd2dq128_mask
V4iV2dV4iUc
__builtin_ia32_cvtpd2ps_mask
V4fV2dV4fUc
__builtin_ia32_cvtpd2udq128_mask
__builtin_ia32_cvtpd2udq256_mask
V4iV4dV4iUc
__builtin_ia32_cvtps2udq128_mask
V4iV4fV4iUc
__builtin_ia32_cvtps2udq256_mask
V8iV8fV8iUc
__builtin_ia32_cvttpd2dq128_mask
__builtin_ia32_cvttpd2udq128_mask
__builtin_ia32_cvttpd2udq256_mask
__builtin_ia32_cvttps2udq128_mask
__builtin_ia32_cvttps2udq256_mask
__builtin_ia32_expanddf128_mask
__builtin_ia32_expanddf256_mask
__builtin_ia32_expanddi128_mask
__builtin_ia32_expanddi256_mask
__builtin_ia32_expandhi128_mask
__builtin_ia32_expandhi256_mask
__builtin_ia32_expandqi128_mask
__builtin_ia32_expandqi256_mask
__builtin_ia32_expandloaddf128_mask
V2dV2dC*V2dUc
__builtin_ia32_expandloaddf256_mask
V4dV4dC*V4dUc
__builtin_ia32_expandloaddi128_mask
V4iV2OiC*V2OiUc
__builtin_ia32_expandloaddi256_mask
V4OiV4OiC*V4OiUc
__builtin_ia32_expandloadhi128_mask
V8sV8sC*V8sUc
__builtin_ia32_expandloadhi256_mask
V16sV16sC*V16sUs
__builtin_ia32_expandloadqi128_mask
V16cV16cC*V16cUs
__builtin_ia32_expandloadqi256_mask
V32cV32cC*V32cUi
__builtin_ia32_expandloadsf128_mask
V4fV4fC*V4fUc
__builtin_ia32_expandloadsf256_mask
V8fV8fC*V8fUc
__builtin_ia32_expandloadsi128_mask
V4iV4iC*V4iUc
__builtin_ia32_expandloadsi256_mask
V8iV8iC*V8iUc
__builtin_ia32_expandsf128_mask
__builtin_ia32_expandsf256_mask
__builtin_ia32_expandsi128_mask
__builtin_ia32_expandsi256_mask
__builtin_ia32_getexppd128_mask
__builtin_ia32_getexppd256_mask
__builtin_ia32_getexpps128_mask
__builtin_ia32_getexpps256_mask
__builtin_ia32_pabsq128
__builtin_ia32_pabsq256
__builtin_ia32_pmaxsq128
__builtin_ia32_pmaxsq256
__builtin_ia32_pmaxuq128
__builtin_ia32_pmaxuq256
__builtin_ia32_pminsq128
__builtin_ia32_pminsq256
__builtin_ia32_pminuq128
__builtin_ia32_pminuq256
__builtin_ia32_rndscalepd_128_mask
V2dV2dIiV2dUc
__builtin_ia32_rndscalepd_256_mask
V4dV4dIiV4dUc
__builtin_ia32_rndscaleps_128_mask
V4fV4fIiV4fUc
__builtin_ia32_rndscaleps_256_mask
V8fV8fIiV8fUc
__builtin_ia32_scalefpd128_mask
__builtin_ia32_scalefpd256_mask
V4dV4dV4dV4dUc
__builtin_ia32_scalefps128_mask
__builtin_ia32_scalefps256_mask
V8fV8fV8fV8fUc
__builtin_ia32_scatterdiv2df
vv*UcV2OiV2dIi
__builtin_ia32_scatterdiv2di
vv*UcV2OiV2OiIi
__builtin_ia32_scatterdiv4df
vv*UcV4OiV4dIi
__builtin_ia32_scatterdiv4di
vv*UcV4OiV4OiIi
__builtin_ia32_scatterdiv4sf
vv*UcV2OiV4fIi
__builtin_ia32_scatterdiv4si
vv*UcV2OiV4iIi
__builtin_ia32_scatterdiv8sf
vv*UcV4OiV4fIi
__builtin_ia32_scatterdiv8si
vv*UcV4OiV4iIi
__builtin_ia32_scattersiv2df
vv*UcV4iV2dIi
__builtin_ia32_scattersiv2di
vv*UcV4iV2OiIi
__builtin_ia32_scattersiv4df
vv*UcV4iV4dIi
__builtin_ia32_scattersiv4di
vv*UcV4iV4OiIi
__builtin_ia32_scattersiv4sf
vv*UcV4iV4fIi
__builtin_ia32_scattersiv4si
vv*UcV4iV4iIi
__builtin_ia32_scattersiv8sf
vv*UcV8iV8fIi
__builtin_ia32_scattersiv8si
vv*UcV8iV8iIi
__builtin_ia32_vpermi2vard128
__builtin_ia32_vpermi2vard256
__builtin_ia32_vpermi2vard512
__builtin_ia32_vpermi2varpd128
V2dV2dV2OiV2d
__builtin_ia32_vpermi2varpd256
V4dV4dV4OiV4d
__builtin_ia32_vpermi2varpd512
V8dV8dV8OiV8d
__builtin_ia32_vpermi2varps128
V4fV4fV4iV4f
__builtin_ia32_vpermi2varps256
V8fV8fV8iV8f
__builtin_ia32_vpermi2varps512
V16fV16fV16iV16f
__builtin_ia32_vpermi2varq128
V2OiV2OiV2OiV2Oi
__builtin_ia32_vpermi2varq256
V4OiV4OiV4OiV4Oi
__builtin_ia32_vpermi2varq512
V8OiV8OiV8OiV8Oi
__builtin_ia32_vpermi2varqi128
avx512vbmi,avx512vl
__builtin_ia32_vpermi2varqi256
__builtin_ia32_vpermi2varqi512
V64cV64cV64cV64c
__builtin_ia32_vpermi2varhi128
__builtin_ia32_vpermi2varhi256
V16sV16sV16sV16s
__builtin_ia32_vpermi2varhi512
V32sV32sV32sV32s
__builtin_ia32_vpshldd128
__builtin_ia32_vpshldd256
__builtin_ia32_vpshldd512
__builtin_ia32_vpshldq128
__builtin_ia32_vpshldq256
__builtin_ia32_vpshldq512
__builtin_ia32_vpshldw128
__builtin_ia32_vpshldw256
__builtin_ia32_vpshldw512
V32sV32sV32sIi
__builtin_ia32_vpshldvd128
__builtin_ia32_vpshldvd256
__builtin_ia32_vpshldvd512
__builtin_ia32_vpshldvq128
__builtin_ia32_vpshldvq256
__builtin_ia32_vpshldvq512
__builtin_ia32_vpshldvw128
__builtin_ia32_vpshldvw256
__builtin_ia32_vpshldvw512
__builtin_ia32_vpshrdvd128
__builtin_ia32_vpshrdvd256
__builtin_ia32_vpshrdvd512
__builtin_ia32_vpshrdvq128
__builtin_ia32_vpshrdvq256
__builtin_ia32_vpshrdvq512
__builtin_ia32_vpshrdvw128
__builtin_ia32_vpshrdvw256
__builtin_ia32_vpshrdvw512
__builtin_ia32_vpshrdd128
__builtin_ia32_vpshrdd256
__builtin_ia32_vpshrdd512
__builtin_ia32_vpshrdq128
__builtin_ia32_vpshrdq256
__builtin_ia32_vpshrdq512
__builtin_ia32_vpshrdw128
__builtin_ia32_vpshrdw256
__builtin_ia32_vpshrdw512
__builtin_ia32_pmovswb512_mask
V32cV32sV32cUi
__builtin_ia32_pmovuswb512_mask
__builtin_ia32_pmovwb512_mask
__builtin_ia32_cvtpd2qq128_mask
V2OiV2dV2OiUc
avx512vl,avx512dq
__builtin_ia32_cvtpd2qq256_mask
V4OiV4dV4OiUc
__builtin_ia32_cvtpd2uqq128_mask
__builtin_ia32_cvtpd2uqq256_mask
__builtin_ia32_cvtps2qq128_mask
V2OiV4fV2OiUc
__builtin_ia32_cvtps2qq256_mask
V4OiV4fV4OiUc
__builtin_ia32_cvtps2uqq128_mask
__builtin_ia32_cvtps2uqq256_mask
__builtin_ia32_cvtqq2ps128_mask
V4fV2OiV4fUc
__builtin_ia32_cvttpd2qq128_mask
__builtin_ia32_cvttpd2qq256_mask
__builtin_ia32_cvttpd2uqq128_mask
__builtin_ia32_cvttpd2uqq256_mask
__builtin_ia32_cvttps2qq128_mask
__builtin_ia32_cvttps2qq256_mask
__builtin_ia32_cvttps2uqq128_mask
__builtin_ia32_cvttps2uqq256_mask
__builtin_ia32_cvtuqq2ps128_mask
__builtin_ia32_rangepd128_mask
V2dV2dV2dIiV2dUc
__builtin_ia32_rangepd256_mask
V4dV4dV4dIiV4dUc
__builtin_ia32_rangeps128_mask
V4fV4fV4fIiV4fUc
__builtin_ia32_rangeps256_mask
V8fV8fV8fIiV8fUc
__builtin_ia32_rangesd128_round_mask
V2dV2dV2dV2dUcIiIi
__builtin_ia32_rangess128_round_mask
V4fV4fV4fV4fUcIiIi
__builtin_ia32_reducepd128_mask
__builtin_ia32_reducepd256_mask
__builtin_ia32_reduceps128_mask
__builtin_ia32_reduceps256_mask
__builtin_ia32_reducesd_mask
__builtin_ia32_reducess_mask
__builtin_ia32_pmovswb128_mask
V16cV8sV16cUc
__builtin_ia32_pmovswb256_mask
V16cV16sV16cUs
__builtin_ia32_pmovuswb128_mask
__builtin_ia32_pmovuswb256_mask
__builtin_ia32_pmovwb128_mask
__builtin_ia32_cvtpd2qq512_mask
V8OiV8dV8OiUcIi
__builtin_ia32_cvtpd2uqq512_mask
__builtin_ia32_cvtps2qq512_mask
V8OiV8fV8OiUcIi
__builtin_ia32_cvtps2uqq512_mask
__builtin_ia32_cvtqq2pd512_mask
V8dV8OiV8dUcIi
__builtin_ia32_cvtqq2ps512_mask
V8fV8OiV8fUcIi
__builtin_ia32_cvttpd2qq512_mask
__builtin_ia32_cvttpd2uqq512_mask
__builtin_ia32_cvttps2qq512_mask
__builtin_ia32_cvttps2uqq512_mask
__builtin_ia32_cvtuqq2pd512_mask
__builtin_ia32_cvtuqq2ps512_mask
__builtin_ia32_rangepd512_mask
V8dV8dV8dIiV8dUcIi
__builtin_ia32_rangeps512_mask
V16fV16fV16fIiV16fUsIi
__builtin_ia32_reducepd512_mask
__builtin_ia32_reduceps512_mask
__builtin_ia32_prold512
V16iV16iIi
__builtin_ia32_prolq512
V8OiV8OiIi
__builtin_ia32_prold128
__builtin_ia32_prold256
__builtin_ia32_prolq128
__builtin_ia32_prolq256
__builtin_ia32_prolvd512
__builtin_ia32_prolvq512
__builtin_ia32_prord512
__builtin_ia32_prorq512
__builtin_ia32_prolvd128
__builtin_ia32_prolvd256
__builtin_ia32_prolvq128
__builtin_ia32_prolvq256
__builtin_ia32_prord128
__builtin_ia32_prord256
__builtin_ia32_prorq128
__builtin_ia32_prorq256
__builtin_ia32_prorvd512
__builtin_ia32_prorvq512
__builtin_ia32_prorvd128
__builtin_ia32_prorvd256
__builtin_ia32_prorvq128
__builtin_ia32_prorvq256
__builtin_ia32_pshufhw512
V32sV32sIi
__builtin_ia32_pshuflw512
__builtin_ia32_psllv32hi
__builtin_ia32_psllw512
V32sV32sV8s
__builtin_ia32_psllwi512
V32sV32si
__builtin_ia32_psllv16hi
avx512bw,avx512vl
__builtin_ia32_psllv8hi
__builtin_ia32_pslldi512
__builtin_ia32_psllqi512
V8OiV8Oii
__builtin_ia32_psrlv32hi
__builtin_ia32_psrlv16hi
__builtin_ia32_psrlv8hi
__builtin_ia32_psrldi512
__builtin_ia32_psrlqi512
__builtin_ia32_psrav32hi
__builtin_ia32_psrav16hi
__builtin_ia32_psrav8hi
__builtin_ia32_psravq128
__builtin_ia32_psravq256
__builtin_ia32_psraw512
__builtin_ia32_psrawi512
__builtin_ia32_psrlw512
__builtin_ia32_psrlwi512
__builtin_ia32_pslldqi512_byteshift
__builtin_ia32_psrldqi512_byteshift
__builtin_ia32_movdqa32load128_mask
__builtin_ia32_movdqa32load256_mask
__builtin_ia32_movdqa32load512_mask
V16iV16iC*V16iUs
__builtin_ia32_movdqa32store512_mask
vV16i*V16iUs
__builtin_ia32_movdqa64load512_mask
V8OiV8OiC*V8OiUc
__builtin_ia32_movdqa64store512_mask
vV8Oi*V8OiUc
__builtin_ia32_movdqa32store128_mask
__builtin_ia32_movdqa32store256_mask
__builtin_ia32_movdqa64load128_mask
V2OiV2OiC*V2OiUc
__builtin_ia32_movdqa64load256_mask
__builtin_ia32_movdqa64store128_mask
__builtin_ia32_movdqa64store256_mask
__builtin_ia32_vpmadd52huq512
__builtin_ia32_vpmadd52luq512
__builtin_ia32_vpmadd52huq128
avx512ifma,avx512vl
__builtin_ia32_vpmadd52huq256
__builtin_ia32_vpmadd52luq128
__builtin_ia32_vpmadd52luq256
__builtin_ia32_vcomisd
iV2dV2dIiIi
__builtin_ia32_vcomiss
iV4fV4fIiIi
__builtin_ia32_kunpckdi
UOiUOiUOi
__builtin_ia32_kunpcksi
__builtin_ia32_loaddquhi512_mask
V32sV32sC*V32sUi
__builtin_ia32_loaddquqi512_mask
V64cV64cC*V64cUOi
__builtin_ia32_fixupimmpd512_mask
V8dV8dV8dV8OiIiUcIi
__builtin_ia32_fixupimmpd512_maskz
__builtin_ia32_fixupimmps512_mask
V16fV16fV16fV16iIiUsIi
__builtin_ia32_fixupimmps512_maskz
__builtin_ia32_fixupimmsd_mask
V2dV2dV2dV2OiIiUcIi
__builtin_ia32_fixupimmsd_maskz
__builtin_ia32_fixupimmss_mask
V4fV4fV4fV4iIiUcIi
__builtin_ia32_fixupimmss_maskz
__builtin_ia32_getexpsd128_round_mask
__builtin_ia32_getexpss128_round_mask
__builtin_ia32_getmantsd_round_mask
V2dV2dV2dIiV2dUcIi
__builtin_ia32_getmantss_round_mask
V4fV4fV4fIiV4fUcIi
__builtin_ia32_loaddquhi128_mask
__builtin_ia32_loaddquhi256_mask
__builtin_ia32_loaddquqi128_mask
__builtin_ia32_loaddquqi256_mask
__builtin_ia32_fixupimmpd128_mask
V2dV2dV2dV2OiIiUc
__builtin_ia32_fixupimmpd128_maskz
__builtin_ia32_fixupimmpd256_mask
V4dV4dV4dV4OiIiUc
__builtin_ia32_fixupimmpd256_maskz
__builtin_ia32_fixupimmps128_mask
V4fV4fV4fV4iIiUc
__builtin_ia32_fixupimmps128_maskz
__builtin_ia32_fixupimmps256_mask
V8fV8fV8fV8iIiUc
__builtin_ia32_fixupimmps256_maskz
__builtin_ia32_loadapd128_mask
__builtin_ia32_loadsd128_mask
__builtin_ia32_loadapd256_mask
__builtin_ia32_loadaps128_mask
__builtin_ia32_loadss128_mask
__builtin_ia32_loadaps256_mask
__builtin_ia32_loaddqudi128_mask
__builtin_ia32_loaddqudi256_mask
__builtin_ia32_loaddqusi128_mask
__builtin_ia32_loaddqusi256_mask
__builtin_ia32_loadupd128_mask
__builtin_ia32_loadupd256_mask
__builtin_ia32_loadups128_mask
__builtin_ia32_loadups256_mask
__builtin_ia32_storedquhi512_mask
vV32s*V32sUi
__builtin_ia32_storedquqi512_mask
vV64c*V64cUOi
__builtin_ia32_storedquhi128_mask
__builtin_ia32_storedquhi256_mask
__builtin_ia32_storedquqi128_mask
__builtin_ia32_storedquqi256_mask
__builtin_ia32_storeapd128_mask
__builtin_ia32_storesd128_mask
__builtin_ia32_storeapd256_mask
__builtin_ia32_storeaps128_mask
__builtin_ia32_storess128_mask
__builtin_ia32_storeaps256_mask
__builtin_ia32_storedqudi128_mask
__builtin_ia32_storedqudi256_mask
__builtin_ia32_storedqusi128_mask
__builtin_ia32_storedqusi256_mask
__builtin_ia32_storeupd128_mask
__builtin_ia32_storeupd256_mask
__builtin_ia32_storeups128_mask
__builtin_ia32_storeups256_mask
__builtin_ia32_rcp14pd128_mask
__builtin_ia32_rcp14pd256_mask
__builtin_ia32_rcp14ps128_mask
__builtin_ia32_rcp14ps256_mask
__builtin_ia32_vplzcntd_128
__builtin_ia32_vplzcntd_256
__builtin_ia32_vplzcntq_128
__builtin_ia32_vplzcntq_256
__builtin_ia32_vcvtsd2si32
iV2dIi
__builtin_ia32_vcvtsd2usi32
UiV2dIi
__builtin_ia32_vcvtss2si32
iV4fIi
__builtin_ia32_vcvtss2usi32
UiV4fIi
__builtin_ia32_vcvttsd2si32
__builtin_ia32_vcvttsd2usi32
__builtin_ia32_vcvttss2si32
__builtin_ia32_vcvttss2usi32
__builtin_ia32_vpermilpd512
__builtin_ia32_vpermilps512
__builtin_ia32_vpermilvarpd512
V8dV8dV8Oi
__builtin_ia32_vpermilvarps512
V16fV16fV16i
__builtin_ia32_rndscalesd_round_mask
__builtin_ia32_rndscaless_round_mask
__builtin_ia32_scalefpd512_mask
__builtin_ia32_scalefps512_mask
__builtin_ia32_scalefsd_round_mask
__builtin_ia32_scalefss_round_mask
__builtin_ia32_psradi512
__builtin_ia32_psraqi512
__builtin_ia32_psraq128
__builtin_ia32_psraq256
__builtin_ia32_psraqi128
__builtin_ia32_psraqi256
__builtin_ia32_pslld512
V16iV16iV4i
__builtin_ia32_psllq512
V8OiV8OiV2Oi
__builtin_ia32_psllv16si
__builtin_ia32_psllv8di
__builtin_ia32_psrad512
__builtin_ia32_psraq512
__builtin_ia32_psrav16si
__builtin_ia32_psrav8di
__builtin_ia32_psrld512
__builtin_ia32_psrlq512
__builtin_ia32_psrlv16si
__builtin_ia32_psrlv8di
__builtin_ia32_pternlogd512_mask
V16iV16iV16iV16iIiUs
__builtin_ia32_pternlogd512_maskz
__builtin_ia32_pternlogq512_mask
V8OiV8OiV8OiV8OiIiUc
__builtin_ia32_pternlogq512_maskz
__builtin_ia32_pternlogd128_mask
V4iV4iV4iV4iIiUc
__builtin_ia32_pternlogd128_maskz
__builtin_ia32_pternlogd256_mask
V8iV8iV8iV8iIiUc
__builtin_ia32_pternlogd256_maskz
__builtin_ia32_pternlogq128_mask
V2OiV2OiV2OiV2OiIiUc
__builtin_ia32_pternlogq128_maskz
__builtin_ia32_pternlogq256_mask
V4OiV4OiV4OiV4OiIiUc
__builtin_ia32_pternlogq256_maskz
__builtin_ia32_shuf_f32x4
__builtin_ia32_shuf_f64x2
__builtin_ia32_shuf_i32x4
__builtin_ia32_shuf_i64x2
__builtin_ia32_shufpd512
__builtin_ia32_shufps512
__builtin_ia32_shuf_f32x4_256
__builtin_ia32_shuf_f64x2_256
__builtin_ia32_shuf_i32x4_256
__builtin_ia32_shuf_i64x2_256
__builtin_ia32_sqrtsd_round_mask
__builtin_ia32_sqrtss_round_mask
__builtin_ia32_rsqrt14pd128_mask
__builtin_ia32_rsqrt14pd256_mask
__builtin_ia32_rsqrt14ps128_mask
__builtin_ia32_rsqrt14ps256_mask
__builtin_ia32_cvtb2mask512
UOiV64c
__builtin_ia32_cvtmask2b512
V64cUOi
__builtin_ia32_cvtmask2w512
V32sUi
__builtin_ia32_cvtd2mask512
UsV16i
__builtin_ia32_cvtmask2d512
V16iUs
__builtin_ia32_cvtmask2q512
V8OiUc
__builtin_ia32_cvtq2mask512
UcV8Oi
__builtin_ia32_cvtb2mask128
UsV16c
__builtin_ia32_cvtb2mask256
UiV32c
__builtin_ia32_cvtmask2b128
V16cUs
__builtin_ia32_cvtmask2b256
V32cUi
__builtin_ia32_cvtmask2w128
V8sUc
__builtin_ia32_cvtmask2w256
V16sUs
__builtin_ia32_cvtd2mask128
UcV4i
avx512dq,avx512vl
__builtin_ia32_cvtd2mask256
UcV8i
__builtin_ia32_cvtmask2d128
V4iUc
__builtin_ia32_cvtmask2d256
V8iUc
__builtin_ia32_cvtmask2q128
V2OiUc
__builtin_ia32_cvtmask2q256
V4OiUc
__builtin_ia32_cvtq2mask128
UcV2Oi
__builtin_ia32_cvtq2mask256
UcV4Oi
__builtin_ia32_pmovsdb512_mask
V16cV16iV16cUs
__builtin_ia32_pmovsdb512mem_mask
vV16c*V16iUs
__builtin_ia32_pmovswb512mem_mask
vV32c*V32sUi
__builtin_ia32_pmovsdw512_mask
V16sV16iV16sUs
__builtin_ia32_pmovsdw512mem_mask
vV16s*V16iUs
__builtin_ia32_pmovsqb512_mask
V16cV8OiV16cUc
__builtin_ia32_pmovsqb512mem_mask
vV16c*V8OiUc
__builtin_ia32_pmovsqd512_mask
V8iV8OiV8iUc
__builtin_ia32_pmovsqd512mem_mask
vV8i*V8OiUc
__builtin_ia32_pmovsqw512_mask
V8sV8OiV8sUc
__builtin_ia32_pmovsqw512mem_mask
vV8s*V8OiUc
__builtin_ia32_pmovsdb128_mask
V16cV4iV16cUc
__builtin_ia32_pmovsdb128mem_mask
vV16c*V4iUc
__builtin_ia32_pmovswb128mem_mask
vV16c*V8sUc
__builtin_ia32_pmovsdb256_mask
V16cV8iV16cUc
__builtin_ia32_pmovsdb256mem_mask
vV16c*V8iUc
__builtin_ia32_pmovswb256mem_mask
vV16c*V16sUs
__builtin_ia32_pmovsdw128_mask
V8sV4iV8sUc
__builtin_ia32_pmovsdw128mem_mask
vV8s*V4iUc
__builtin_ia32_pmovsdw256_mask
V8sV8iV8sUc
__builtin_ia32_pmovsdw256mem_mask
vV8s*V8iUc
__builtin_ia32_pmovsqb128_mask
V16cV2OiV16cUc
__builtin_ia32_pmovsqb128mem_mask
vV16c*V2OiUc
__builtin_ia32_pmovsqb256_mask
V16cV4OiV16cUc
__builtin_ia32_pmovsqb256mem_mask
vV16c*V4OiUc
__builtin_ia32_pmovsqd128_mask
V4iV2OiV4iUc
__builtin_ia32_pmovsqd128mem_mask
vV4i*V2OiUc
__builtin_ia32_pmovsqd256_mask
V4iV4OiV4iUc
__builtin_ia32_pmovsqd256mem_mask
vV4i*V4OiUc
__builtin_ia32_pmovsqw128_mask
V8sV2OiV8sUc
__builtin_ia32_pmovsqw128mem_mask
vV8s*V2OiUc
__builtin_ia32_pmovsqw256_mask
V8sV4OiV8sUc
__builtin_ia32_pmovsqw256mem_mask
vV8s*V4OiUc
__builtin_ia32_pmovusdb512_mask
__builtin_ia32_pmovusdb512mem_mask
__builtin_ia32_pmovuswb512mem_mask
__builtin_ia32_pmovusdw512_mask
__builtin_ia32_pmovusdw512mem_mask
__builtin_ia32_pmovusqb512_mask
__builtin_ia32_pmovusqb512mem_mask
__builtin_ia32_pmovusqd512_mask
__builtin_ia32_pmovusqd512mem_mask
__builtin_ia32_pmovusqw512_mask
__builtin_ia32_pmovusqw512mem_mask
__builtin_ia32_pmovusdb128_mask
__builtin_ia32_pmovusdb128mem_mask
__builtin_ia32_pmovuswb128mem_mask
__builtin_ia32_pmovusdb256_mask
__builtin_ia32_pmovusdb256mem_mask
__builtin_ia32_pmovuswb256mem_mask
__builtin_ia32_pmovusdw128_mask
__builtin_ia32_pmovusdw128mem_mask
__builtin_ia32_pmovusdw256_mask
__builtin_ia32_pmovusdw256mem_mask
__builtin_ia32_pmovusqb128_mask
__builtin_ia32_pmovusqb128mem_mask
__builtin_ia32_pmovusqb256_mask
__builtin_ia32_pmovusqb256mem_mask
__builtin_ia32_pmovusqd128_mask
__builtin_ia32_pmovusqd128mem_mask
__builtin_ia32_pmovusqd256_mask
__builtin_ia32_pmovusqd256mem_mask
__builtin_ia32_pmovusqw128_mask
__builtin_ia32_pmovusqw128mem_mask
__builtin_ia32_pmovusqw256_mask
__builtin_ia32_pmovusqw256mem_mask
__builtin_ia32_pmovdb512_mask
__builtin_ia32_pmovdb512mem_mask
__builtin_ia32_pmovwb512mem_mask
__builtin_ia32_pmovdw512_mask
__builtin_ia32_pmovdw512mem_mask
__builtin_ia32_pmovqb512_mask
__builtin_ia32_pmovqb512mem_mask
__builtin_ia32_pmovqd512_mask
__builtin_ia32_pmovqd512mem_mask
__builtin_ia32_pmovqw512_mask
__builtin_ia32_pmovqw512mem_mask
__builtin_ia32_pmovdb128_mask
__builtin_ia32_pmovwb128mem_mask
__builtin_ia32_pmovdb128mem_mask
__builtin_ia32_pmovdb256_mask
__builtin_ia32_pmovdb256mem_mask
__builtin_ia32_pmovwb256mem_mask
__builtin_ia32_pmovdw128_mask
__builtin_ia32_pmovdw128mem_mask
__builtin_ia32_pmovdw256_mask
__builtin_ia32_pmovdw256mem_mask
__builtin_ia32_pmovqb128_mask
__builtin_ia32_pmovqb128mem_mask
__builtin_ia32_pmovqb256_mask
__builtin_ia32_pmovqb256mem_mask
__builtin_ia32_pmovqd128_mask
__builtin_ia32_pmovqd128mem_mask
__builtin_ia32_pmovqd256mem_mask
__builtin_ia32_pmovqw128_mask
__builtin_ia32_pmovqw128mem_mask
__builtin_ia32_pmovqw256_mask
__builtin_ia32_pmovqw256mem_mask
__builtin_ia32_extractf32x8_mask
V8fV16fIiV8fUc
__builtin_ia32_extractf64x2_512_mask
V2dV8dIiV2dUc
__builtin_ia32_extracti32x8_mask
V8iV16iIiV8iUc
__builtin_ia32_extracti64x2_512_mask
V2OiV8OiIiV2OiUc
__builtin_ia32_extracti32x4_mask
V4iV16iIiV4iUc
__builtin_ia32_extracti64x4_mask
V4OiV8OiIiV4OiUc
__builtin_ia32_extractf64x2_256_mask
V2dV4dIiV2dUc
__builtin_ia32_extracti64x2_256_mask
V2OiV4OiIiV2OiUc
__builtin_ia32_extractf32x4_256_mask
V4fV8fIiV4fUc
__builtin_ia32_extracti32x4_256_mask
V4iV8iIiV4iUc
__builtin_ia32_insertf32x8
V16fV16fV8fIi
__builtin_ia32_insertf64x2_512
V8dV8dV2dIi
__builtin_ia32_inserti32x8
V16iV16iV8iIi
__builtin_ia32_inserti64x2_512
V8OiV8OiV2OiIi
__builtin_ia32_insertf64x4
V8dV8dV4dIi
__builtin_ia32_inserti64x4
V8OiV8OiV4OiIi
__builtin_ia32_insertf64x2_256
__builtin_ia32_inserti64x2_256
__builtin_ia32_insertf32x4_256
__builtin_ia32_inserti32x4_256
__builtin_ia32_insertf32x4
V16fV16fV4fIi
__builtin_ia32_inserti32x4
V16iV16iV4iIi
__builtin_ia32_getmantpd128_mask
__builtin_ia32_getmantpd256_mask
__builtin_ia32_getmantps128_mask
__builtin_ia32_getmantps256_mask
__builtin_ia32_getmantpd512_mask
__builtin_ia32_getmantps512_mask
__builtin_ia32_getexppd512_mask
__builtin_ia32_getexpps512_mask
__builtin_ia32_vfmaddss3_mask
__builtin_ia32_vfmaddss3_maskz
__builtin_ia32_vfmaddss3_mask3
__builtin_ia32_vfmaddsd3_mask
__builtin_ia32_vfmaddsd3_maskz
__builtin_ia32_vfmaddsd3_mask3
__builtin_ia32_vfmsubsd3_mask3
__builtin_ia32_vfmsubss3_mask3
__builtin_ia32_permdf512
__builtin_ia32_permdi512
__builtin_ia32_permvarhi512
__builtin_ia32_permvardf512
__builtin_ia32_permvardi512
__builtin_ia32_permvarsf512
__builtin_ia32_permvarsi512
__builtin_ia32_permvarqi512
__builtin_ia32_permvarqi128
__builtin_ia32_permvarqi256
__builtin_ia32_permvarhi128
__builtin_ia32_permvarhi256
__builtin_ia32_permvardf256
__builtin_ia32_permvardi256
__builtin_ia32_fpclasspd128_mask
UcV2dIiUc
__builtin_ia32_fpclasspd256_mask
UcV4dIiUc
__builtin_ia32_fpclassps128_mask
UcV4fIiUc
__builtin_ia32_fpclassps256_mask
UcV8fIiUc
__builtin_ia32_fpclassps512_mask
UsV16fIiUs
__builtin_ia32_fpclasspd512_mask
UcV8dIiUc
__builtin_ia32_fpclasssd_mask
__builtin_ia32_fpclassss_mask
__builtin_ia32_kaddqi
__builtin_ia32_kaddhi
__builtin_ia32_kaddsi
__builtin_ia32_kadddi
__builtin_ia32_kandqi
__builtin_ia32_kandhi
__builtin_ia32_kandsi
__builtin_ia32_kanddi
__builtin_ia32_kandnqi
__builtin_ia32_kandnhi
__builtin_ia32_kandnsi
__builtin_ia32_kandndi
__builtin_ia32_korqi
__builtin_ia32_korhi
__builtin_ia32_korsi
__builtin_ia32_kordi
__builtin_ia32_kortestcqi
iUcUc
__builtin_ia32_kortestzqi
__builtin_ia32_kortestchi
iUsUs
__builtin_ia32_kortestzhi
__builtin_ia32_kortestcsi
iUiUi
__builtin_ia32_kortestzsi
__builtin_ia32_kortestcdi
iUOiUOi
__builtin_ia32_kortestzdi
__builtin_ia32_ktestcqi
__builtin_ia32_ktestzqi
__builtin_ia32_ktestchi
__builtin_ia32_ktestzhi
__builtin_ia32_ktestcsi
__builtin_ia32_ktestzsi
__builtin_ia32_ktestcdi
__builtin_ia32_ktestzdi
__builtin_ia32_kunpckhi
__builtin_ia32_kxnorqi
__builtin_ia32_kxnorhi
__builtin_ia32_kxnorsi
__builtin_ia32_kxnordi
__builtin_ia32_kxorqi
__builtin_ia32_kxorhi
__builtin_ia32_kxorsi
__builtin_ia32_kxordi
__builtin_ia32_kshiftliqi
UcUcIUi
__builtin_ia32_kshiftlihi
UsUsIUi
__builtin_ia32_kshiftlisi
__builtin_ia32_kshiftlidi
UOiUOiIUi
__builtin_ia32_kshiftriqi
__builtin_ia32_kshiftrihi
__builtin_ia32_kshiftrisi
__builtin_ia32_kshiftridi
__builtin_ia32_kmovb
__builtin_ia32_kmovw
__builtin_ia32_kmovd
__builtin_ia32_kmovq
__builtin_ia32_palignr512
V64cV64cV64cIi
__builtin_ia32_dbpsadbw128
V8sV16cV16cIi
__builtin_ia32_dbpsadbw256
V16sV32cV32cIi
__builtin_ia32_dbpsadbw512
V32sV64cV64cIi
__builtin_ia32_psadbw512
V8OiV64cV64c
__builtin_ia32_compressdf512_mask
__builtin_ia32_compressdi512_mask
V8OiV8OiV8OiUc
__builtin_ia32_compresshi512_mask
V32sV32sV32sUi
__builtin_ia32_compressqi512_mask
V64cV64cV64cUOi
__builtin_ia32_compresssf512_mask
__builtin_ia32_compresssi512_mask
V16iV16iV16iUs
__builtin_ia32_cmpsd_mask
UcV2dV2dIiUcIi
__builtin_ia32_cmpss_mask
UcV4fV4fIiUcIi
__builtin_ia32_pshufd512
__builtin_ia32_expanddf512_mask
__builtin_ia32_expanddi512_mask
__builtin_ia32_expandhi512_mask
__builtin_ia32_expandqi512_mask
__builtin_ia32_expandloaddf512_mask
__builtin_ia32_expandloaddi512_mask
__builtin_ia32_expandloadhi512_mask
__builtin_ia32_expandloadqi512_mask
__builtin_ia32_expandloadsf512_mask
__builtin_ia32_expandloadsi512_mask
__builtin_ia32_expandsf512_mask
__builtin_ia32_expandsi512_mask
__builtin_ia32_cvtps2pd512_mask
V8dV8fV8dUcIi
__builtin_ia32_compressstoredf512_mask
__builtin_ia32_compressstoredi512_mask
__builtin_ia32_compressstorehi512_mask
__builtin_ia32_compressstoreqi512_mask
__builtin_ia32_compressstoresf512_mask
__builtin_ia32_compressstoresi512_mask
__builtin_ia32_vcvtph2ps_mask
V4fV8sV4fUc
__builtin_ia32_vcvtph2ps256_mask
V8fV8sV8fUc
__builtin_ia32_vcvtps2ph_mask
V8sV4fIiV8sUc
__builtin_ia32_vcvtps2ph256_mask
V8sV8fIiV8sUc
__builtin_ia32_cvtw2mask512
UiV32s
__builtin_ia32_cvtw2mask128
UcV8s
__builtin_ia32_cvtw2mask256
UsV16s
__builtin_ia32_cvtsd2ss_round_mask
V4fV4fV2dV4fUcIi
__builtin_ia32_cvtsi2ss32
V4fV4fiIi
__builtin_ia32_cvtss2sd_round_mask
V2dV2dV4fV2dUcIi
__builtin_ia32_cvtusi2ss32
V4fV4fUiIi
__builtin_ia32_vpmultishiftqb512
__builtin_ia32_vpmultishiftqb128
__builtin_ia32_vpmultishiftqb256
__builtin_ia32_cvtne2ps2bf16_128
V8sV4fV4f
avx512bf16,avx512vl
__builtin_ia32_cvtne2ps2bf16_256
V16sV8fV8f
__builtin_ia32_cvtne2ps2bf16_512
V32sV16fV16f
__builtin_ia32_cvtneps2bf16_128_mask
V8sV4fV8sUc
__builtin_ia32_cvtneps2bf16_256_mask
V8sV8fV8sUc
__builtin_ia32_cvtneps2bf16_512_mask
V16sV16fV16sUs
__builtin_ia32_dpbf16ps_128
V4fV4fV4iV4i
__builtin_ia32_dpbf16ps_256
V8fV8fV8iV8i
__builtin_ia32_dpbf16ps_512
V16fV16fV16iV16i
__builtin_ia32_cvtsbf162ss_32
__builtin_ia32_vp2intersect_q_512
vV8OiV8OiUc*Uc*
__builtin_ia32_vp2intersect_q_256
vV4OiV4OiUc*Uc*
avx512vp2intersect,avx512vl
__builtin_ia32_vp2intersect_q_128
vV2OiV2OiUc*Uc*
__builtin_ia32_vp2intersect_d_512
vV16iV16iUs*Us*
__builtin_ia32_vp2intersect_d_256
vV8iV8iUc*Uc*
__builtin_ia32_vp2intersect_d_128
vV4iV4iUc*Uc*
__builtin_ia32_vcomish
iV8xV8xIiIi
__builtin_ia32_addph512
V32xV32xV32xIi
__builtin_ia32_subph512
__builtin_ia32_mulph512
__builtin_ia32_divph512
__builtin_ia32_maxph512
__builtin_ia32_minph512
__builtin_ia32_minph256
V16xV16xV16x
avx512fp16,avx512vl
__builtin_ia32_minph128
V8xV8xV8x
__builtin_ia32_maxph256
__builtin_ia32_maxph128
__builtin_ia32_addsh_round_mask
V8xV8xV8xV8xUcIi
__builtin_ia32_divsh_round_mask
__builtin_ia32_mulsh_round_mask
__builtin_ia32_subsh_round_mask
__builtin_ia32_maxsh_round_mask
__builtin_ia32_minsh_round_mask
__builtin_ia32_cmpph512_mask
UiV32xV32xIiUiIi
__builtin_ia32_cmpph256_mask
UsV16xV16xIiUs
__builtin_ia32_cmpph128_mask
UcV8xV8xIiUc
__builtin_ia32_cmpsh_mask
UcV8xV8xIiUcIi
__builtin_ia32_loadsh128_mask
V8xV8x*V8xUc
__builtin_ia32_storesh128_mask
vV8x*V8xUc
__builtin_ia32_rcpph128_mask
V8xV8xV8xUc
__builtin_ia32_rcpph256_mask
V16xV16xV16xUs
__builtin_ia32_rcpph512_mask
V32xV32xV32xUi
__builtin_ia32_rsqrtph128_mask
__builtin_ia32_rsqrtph256_mask
__builtin_ia32_rsqrtph512_mask
__builtin_ia32_getmantph128_mask
V8xV8xIiV8xUc
__builtin_ia32_getmantph256_mask
V16xV16xIiV16xUs
__builtin_ia32_getmantph512_mask
V32xV32xIiV32xUiIi
__builtin_ia32_getexpph128_mask
__builtin_ia32_getexpph256_mask
__builtin_ia32_getexpph512_mask
V32xV32xV32xUiIi
__builtin_ia32_scalefph128_mask
V8xV8xV8xV8xUc
__builtin_ia32_scalefph256_mask
V16xV16xV16xV16xUs
__builtin_ia32_scalefph512_mask
V32xV32xV32xV32xUiIi
__builtin_ia32_rndscaleph_128_mask
__builtin_ia32_rndscaleph_256_mask
__builtin_ia32_rndscaleph_mask
__builtin_ia32_reduceph128_mask
__builtin_ia32_reduceph256_mask
__builtin_ia32_reduceph512_mask
__builtin_ia32_rcpsh_mask
__builtin_ia32_rsqrtsh_mask
__builtin_ia32_getmantsh_round_mask
V8xV8xV8xIiV8xUcIi
__builtin_ia32_getexpsh128_round_mask
__builtin_ia32_scalefsh_round_mask
__builtin_ia32_rndscalesh_round_mask
V8xV8xV8xV8xUcIiIi
__builtin_ia32_reducesh_mask
__builtin_ia32_sqrtph
V8xV8x
__builtin_ia32_sqrtph256
V16xV16x
__builtin_ia32_sqrtph512
V32xV32xIi
__builtin_ia32_sqrtsh_round_mask
__builtin_ia32_fpclassph128_mask
UcV8xIiUc
__builtin_ia32_fpclassph256_mask
UsV16xIiUs
__builtin_ia32_fpclassph512_mask
UiV32xIiUi
__builtin_ia32_fpclasssh_mask
__builtin_ia32_vcvtpd2ph128_mask
V8xV2dV8xUc
__builtin_ia32_vcvtpd2ph256_mask
V8xV4dV8xUc
__builtin_ia32_vcvtpd2ph512_mask
V8xV8dV8xUcIi
__builtin_ia32_vcvtph2pd128_mask
V2dV8xV2dUc
__builtin_ia32_vcvtph2pd256_mask
V4dV8xV4dUc
__builtin_ia32_vcvtph2pd512_mask
V8dV8xV8dUcIi
__builtin_ia32_vcvtsh2ss_round_mask
V4fV4fV8xV4fUcIi
__builtin_ia32_vcvtss2sh_round_mask
V8xV8xV4fV8xUcIi
__builtin_ia32_vcvtsd2sh_round_mask
V8xV8xV2dV8xUcIi
__builtin_ia32_vcvtsh2sd_round_mask
V2dV2dV8xV2dUcIi
__builtin_ia32_vcvtph2w128_mask
V8sV8xV8sUc
__builtin_ia32_vcvtph2w256_mask
V16sV16xV16sUs
__builtin_ia32_vcvtph2w512_mask
V32sV32xV32sUiIi
__builtin_ia32_vcvttph2w128_mask
__builtin_ia32_vcvttph2w256_mask
__builtin_ia32_vcvttph2w512_mask
__builtin_ia32_vcvtw2ph128_mask
V8xV8sV8xUc
__builtin_ia32_vcvtw2ph256_mask
V16xV16sV16xUs
__builtin_ia32_vcvtw2ph512_mask
V32xV32sV32xUiIi
__builtin_ia32_vcvtph2uw128_mask
V8UsV8xV8UsUc
__builtin_ia32_vcvtph2uw256_mask
V16UsV16xV16UsUs
__builtin_ia32_vcvtph2uw512_mask
V32UsV32xV32UsUiIi
__builtin_ia32_vcvttph2uw128_mask
__builtin_ia32_vcvttph2uw256_mask
__builtin_ia32_vcvttph2uw512_mask
__builtin_ia32_vcvtuw2ph128_mask
V8xV8UsV8xUc
__builtin_ia32_vcvtuw2ph256_mask
V16xV16UsV16xUs
__builtin_ia32_vcvtuw2ph512_mask
V32xV32UsV32xUiIi
__builtin_ia32_vcvtph2dq128_mask
V4iV8xV4iUc
__builtin_ia32_vcvtph2dq256_mask
V8iV8xV8iUc
__builtin_ia32_vcvtph2dq512_mask
V16iV16xV16iUsIi
__builtin_ia32_vcvtph2udq128_mask
V4UiV8xV4UiUc
__builtin_ia32_vcvtph2udq256_mask
V8UiV8xV8UiUc
__builtin_ia32_vcvtph2udq512_mask
V16UiV16xV16UiUsIi
__builtin_ia32_vcvtdq2ph128_mask
V8xV4iV8xUc
__builtin_ia32_vcvtdq2ph256_mask
V8xV8iV8xUc
__builtin_ia32_vcvtdq2ph512_mask
V16xV16iV16xUsIi
__builtin_ia32_vcvtudq2ph128_mask
V8xV4UiV8xUc
__builtin_ia32_vcvtudq2ph256_mask
V8xV8UiV8xUc
__builtin_ia32_vcvtudq2ph512_mask
V16xV16UiV16xUsIi
__builtin_ia32_vcvttph2dq128_mask
__builtin_ia32_vcvttph2dq256_mask
__builtin_ia32_vcvttph2dq512_mask
__builtin_ia32_vcvttph2udq128_mask
__builtin_ia32_vcvttph2udq256_mask
__builtin_ia32_vcvttph2udq512_mask
__builtin_ia32_vcvtqq2ph128_mask
V8xV2OiV8xUc
__builtin_ia32_vcvtqq2ph256_mask
V8xV4OiV8xUc
__builtin_ia32_vcvtqq2ph512_mask
V8xV8OiV8xUcIi
__builtin_ia32_vcvtph2qq128_mask
V2OiV8xV2OiUc
__builtin_ia32_vcvtph2qq256_mask
V4OiV8xV4OiUc
__builtin_ia32_vcvtph2qq512_mask
V8OiV8xV8OiUcIi
__builtin_ia32_vcvtuqq2ph128_mask
V8xV2UOiV8xUc
__builtin_ia32_vcvtuqq2ph256_mask
V8xV4UOiV8xUc
__builtin_ia32_vcvtuqq2ph512_mask
V8xV8UOiV8xUcIi
__builtin_ia32_vcvtph2uqq128_mask
V2UOiV8xV2UOiUc
__builtin_ia32_vcvtph2uqq256_mask
V4UOiV8xV4UOiUc
__builtin_ia32_vcvtph2uqq512_mask
V8UOiV8xV8UOiUcIi
__builtin_ia32_vcvttph2qq128_mask
__builtin_ia32_vcvttph2qq256_mask
__builtin_ia32_vcvttph2qq512_mask
__builtin_ia32_vcvttph2uqq128_mask
__builtin_ia32_vcvttph2uqq256_mask
__builtin_ia32_vcvttph2uqq512_mask
__builtin_ia32_vcvtsh2si32
iV8xIi
__builtin_ia32_vcvtsh2usi32
UiV8xIi
__builtin_ia32_vcvtusi2sh
V8xV8xUiIi
__builtin_ia32_vcvtsi2sh
V8xV8xiIi
__builtin_ia32_vcvttsh2si32
__builtin_ia32_vcvttsh2usi32
__builtin_ia32_vcvtph2psx128_mask
V4fV8xV4fUc
__builtin_ia32_vcvtph2psx256_mask
V8fV8xV8fUc
__builtin_ia32_vcvtph2psx512_mask
V16fV16xV16fUsIi
__builtin_ia32_vcvtps2phx128_mask
V8xV4fV8xUc
__builtin_ia32_vcvtps2phx256_mask
V8xV8fV8xUc
__builtin_ia32_vcvtps2phx512_mask
V16xV16fV16xUsIi
__builtin_ia32_vfmaddph
V8xV8xV8xV8x
__builtin_ia32_vfmaddph256
V16xV16xV16xV16x
__builtin_ia32_vfmaddph512_mask
__builtin_ia32_vfmaddph512_mask3
__builtin_ia32_vfmaddph512_maskz
__builtin_ia32_vfmaddsubph
__builtin_ia32_vfmaddsubph256
__builtin_ia32_vfmaddsubph512_mask
__builtin_ia32_vfmaddsubph512_maskz
__builtin_ia32_vfmaddsubph512_mask3
__builtin_ia32_vfmsubaddph512_mask3
__builtin_ia32_vfmsubph512_mask3
__builtin_ia32_vfmaddsh3_mask
__builtin_ia32_vfmaddsh3_maskz
__builtin_ia32_vfmaddsh3_mask3
__builtin_ia32_vfmsubsh3_mask3
__builtin_ia32_vfmaddcph128_mask
__builtin_ia32_vfmaddcph128_maskz
__builtin_ia32_vfmaddcph256_mask
__builtin_ia32_vfmaddcph256_maskz
__builtin_ia32_vfmaddcph512_mask
__builtin_ia32_vfmaddcph512_maskz
__builtin_ia32_vfmaddcph512_mask3
__builtin_ia32_vfcmaddcph128_mask
__builtin_ia32_vfcmaddcph128_maskz
__builtin_ia32_vfcmaddcph256_mask
__builtin_ia32_vfcmaddcph256_maskz
__builtin_ia32_vfcmaddcph512_mask
__builtin_ia32_vfcmaddcph512_maskz
__builtin_ia32_vfcmaddcph512_mask3
__builtin_ia32_vfmaddcsh_mask
__builtin_ia32_vfmaddcsh_maskz
__builtin_ia32_vfcmaddcsh_mask
__builtin_ia32_vfcmaddcsh_maskz
__builtin_ia32_vfmaddcsh_round_mask
__builtin_ia32_vfmaddcsh_round_mask3
__builtin_ia32_vfcmaddcsh_round_mask
__builtin_ia32_vfcmaddcsh_round_mask3
__builtin_ia32_vfmulcsh_mask
__builtin_ia32_vfcmulcsh_mask
__builtin_ia32_vfmulcph128_mask
__builtin_ia32_vfmulcph256_mask
__builtin_ia32_vfmulcph512_mask
__builtin_ia32_vfcmulcph128_mask
__builtin_ia32_vfcmulcph256_mask
__builtin_ia32_vfcmulcph512_mask
__builtin_ia32_selectb_128
V16cUsV16cV16c
__builtin_ia32_selectb_256
V32cUiV32cV32c
__builtin_ia32_selectb_512
V64cUOiV64cV64c
__builtin_ia32_selectw_128
V8sUcV8sV8s
__builtin_ia32_selectw_256
V16sUsV16sV16s
__builtin_ia32_selectw_512
V32sUiV32sV32s
__builtin_ia32_selectd_128
V4iUcV4iV4i
__builtin_ia32_selectd_256
V8iUcV8iV8i
__builtin_ia32_selectd_512
V16iUsV16iV16i
__builtin_ia32_selectph_128
V8xUcV8xV8x
__builtin_ia32_selectph_256
V16xUsV16xV16x
__builtin_ia32_selectph_512
V32xUiV32xV32x
__builtin_ia32_selectq_128
V2OiUcV2OiV2Oi
__builtin_ia32_selectq_256
V4OiUcV4OiV4Oi
__builtin_ia32_selectq_512
V8OiUcV8OiV8Oi
__builtin_ia32_selectps_128
V4fUcV4fV4f
__builtin_ia32_selectps_256
V8fUcV8fV8f
__builtin_ia32_selectps_512
V16fUsV16fV16f
__builtin_ia32_selectpd_128
V2dUcV2dV2d
__builtin_ia32_selectpd_256
V4dUcV4dV4d
__builtin_ia32_selectpd_512
V8dUcV8dV8d
__builtin_ia32_selectsh_128
__builtin_ia32_selectss_128
__builtin_ia32_selectsd_128
__builtin_ia32_reduce_add_d512
iV16i
__builtin_ia32_reduce_add_q512
OiV8Oi
__builtin_ia32_reduce_and_d512
__builtin_ia32_reduce_and_q512
__builtin_ia32_reduce_fadd_pd512
ddV8d
__builtin_ia32_reduce_fadd_ps512
ffV16f
__builtin_ia32_reduce_fadd_ph512
xxV32x
__builtin_ia32_reduce_fadd_ph256
xxV16x
__builtin_ia32_reduce_fadd_ph128
xxV8x
__builtin_ia32_reduce_fmax_pd512
dV8d
__builtin_ia32_reduce_fmax_ps512
fV16f
__builtin_ia32_reduce_fmax_ph512
xV32x
__builtin_ia32_reduce_fmax_ph256
xV16x
__builtin_ia32_reduce_fmax_ph128
xV8x
__builtin_ia32_reduce_fmin_pd512
__builtin_ia32_reduce_fmin_ps512
__builtin_ia32_reduce_fmin_ph512
__builtin_ia32_reduce_fmin_ph256
__builtin_ia32_reduce_fmin_ph128
__builtin_ia32_reduce_fmul_pd512
__builtin_ia32_reduce_fmul_ps512
__builtin_ia32_reduce_fmul_ph512
__builtin_ia32_reduce_fmul_ph256
__builtin_ia32_reduce_fmul_ph128
__builtin_ia32_reduce_mul_d512
__builtin_ia32_reduce_mul_q512
__builtin_ia32_reduce_or_d512
__builtin_ia32_reduce_or_q512
__builtin_ia32_reduce_smax_d512
__builtin_ia32_reduce_smax_q512
__builtin_ia32_reduce_smin_d512
__builtin_ia32_reduce_smin_q512
__builtin_ia32_reduce_umax_d512
__builtin_ia32_reduce_umax_q512
__builtin_ia32_reduce_umin_d512
__builtin_ia32_reduce_umin_q512
__builtin_ia32_monitorx
__builtin_ia32_mwaitx
vUiUiUi
__builtin_ia32_umonitor
__builtin_ia32_umwait
UcUiUiUi
__builtin_ia32_tpause
__builtin_ia32_clzero
__builtin_ia32_cldemote
__builtin_ia32_directstore_u32
vUi*Ui
__builtin_ia32_movdir64b
vv*vC*
__builtin_ia32_ptwrite32
__builtin_ia32_invpcid
__builtin_ia32_enqcmd
Ucv*vC*
__builtin_ia32_enqcmds
__builtin_ia32_loadiwkey
vV2OiV2OiV2OiUi
__builtin_ia32_encodekey128_u32
UiUiV2Oiv*
__builtin_ia32_encodekey256_u32
UiUiV2OiV2Oiv*
__builtin_ia32_aesenc128kl_u8
UcV2Oi*V2OivC*
__builtin_ia32_aesenc256kl_u8
__builtin_ia32_aesdec128kl_u8
__builtin_ia32_aesdec256kl_u8
__builtin_ia32_aesencwide128kl_u8
UcV2Oi*V2OiC*vC*
kl,widekl
__builtin_ia32_aesencwide256kl_u8
__builtin_ia32_aesdecwide128kl_u8
__builtin_ia32_aesdecwide256kl_u8
__builtin_ia32_serialize
__builtin_ia32_xsusldtrk
__builtin_ia32_xresldtrk
_ReadBarrier
_WriteBarrier
__emul
__emulu
ULLiUiUi
__stosb
vUc*Ucz
__int2c
__ud2
__readfsbyte
UcUNi
__readfsword
UsUNi
__readfsdword
UNiUNi
__readfsqword
ULLiUNi
__readgsbyte
__readgsword
__readgsdword
__readgsqword
WiWiD*Wi
WiWiD*
_mul128
LLiLLiLLiLLi*
_umul128
ULLiULLiULLiULLi*
__faststorefence
__shiftleft128
ULLiULLiULLiUc
__shiftright128
__builtin_ia32_readeflags_u64
__builtin_ia32_writeeflags_u64
vUOi
__builtin_ia32_cvtss2si64
OiV4f
__builtin_ia32_cvttss2si64
__builtin_ia32_cvtsd2si64
OiV2d
__builtin_ia32_cvttsd2si64
__builtin_ia32_movnti64
vOi*Oi
__builtin_ia32_vec_ext_v2di
OiV2OiIi
__builtin_ia32_vec_set_v2di
V2OiV2OiOiIi
__builtin_ia32_crc32di
__builtin_ia32_vec_ext_v4di
OiV4OiIi
__builtin_ia32_vec_set_v4di
V4OiV4OiOiIi
__builtin_ia32_rdfsbase32
__builtin_ia32_rdfsbase64
__builtin_ia32_rdgsbase32
__builtin_ia32_rdgsbase64
__builtin_ia32_wrfsbase32
__builtin_ia32_wrfsbase64
__builtin_ia32_wrgsbase32
__builtin_ia32_wrgsbase64
__builtin_ia32_fxrstor64
__builtin_ia32_fxsave64
__builtin_ia32_xsave64
__builtin_ia32_xrstor64
__builtin_ia32_xsaveopt64
__builtin_ia32_xrstors64
__builtin_ia32_xsavec64
__builtin_ia32_xsaves64
__builtin_ia32_incsspq
__builtin_ia32_rdsspq
__builtin_ia32_wrssq
vUOiv*
__builtin_ia32_wrussq
__builtin_ia32_addcarryx_u64
UcUcUOiUOiUOi*
__builtin_ia32_subborrow_u64
__builtin_ia32_rdrand64_step
UiUOi*
__builtin_ia32_rdseed64_step
__builtin_ia32_lzcnt_u64
__builtin_ia32_bextr_u64
__builtin_ia32_tzcnt_u64
__builtin_ia32_bzhi_di
__builtin_ia32_pdep_di
__builtin_ia32_pext_di
__builtin_ia32_bextri_u64
UOiUOiIUOi
__builtin_ia32_lwpins64
UcUOiUiIUi
__builtin_ia32_lwpval64
vUOiUiIUi
__builtin_ia32_vcvtsd2si64
OiV2dIi
__builtin_ia32_vcvtsd2usi64
UOiV2dIi
__builtin_ia32_vcvtss2si64
OiV4fIi
__builtin_ia32_vcvtss2usi64
UOiV4fIi
__builtin_ia32_vcvttsd2si64
__builtin_ia32_vcvttsd2usi64
__builtin_ia32_vcvttss2si64
__builtin_ia32_vcvttss2usi64
__builtin_ia32_cvtsi2sd64
V2dV2dOiIi
__builtin_ia32_cvtsi2ss64
V4fV4fOiIi
__builtin_ia32_cvtusi2sd64
V2dV2dUOiIi
__builtin_ia32_cvtusi2ss64
V4fV4fUOiIi
__builtin_ia32_vcvtsh2si64
OiV8xIi
__builtin_ia32_vcvtsh2usi64
UOiV8xIi
__builtin_ia32_vcvtusi642sh
V8xV8xUOiIi
__builtin_ia32_vcvtsi642sh
V8xV8xOiIi
__builtin_ia32_vcvttsh2si64
__builtin_ia32_vcvttsh2usi64
__builtin_ia32_directstore_u64
__builtin_ia32_clui
__builtin_ia32_stui
__builtin_ia32_testui
__builtin_ia32_senduipi
vUWi
__builtin_ia32_tile_loadconfig_internal
__builtin_ia32_tileloadd64_internal
V256iUsUsvC*z
__builtin_ia32_tileloaddt164_internal
__builtin_ia32_tdpbssd_internal
V256iUsUsUsV256iV256iV256i
__builtin_ia32_tdpbsud_internal
__builtin_ia32_tdpbusd_internal
__builtin_ia32_tdpbuud_internal
__builtin_ia32_tilestored64_internal
vUsUsv*zV256i
__builtin_ia32_tilezero_internal
V256iUsUs
__builtin_ia32_tdpbf16ps_internal
__builtin_ia32_tile_loadconfig
__builtin_ia32_tile_storeconfig
__builtin_ia32_tilerelease
__builtin_ia32_tilezero
__builtin_ia32_tileloadd64
vIUcvC*z
__builtin_ia32_tileloaddt164
__builtin_ia32_tilestored64
vIUcv*z
__builtin_ia32_tdpbssd
vIUcIUcIUc
__builtin_ia32_tdpbsud
__builtin_ia32_tdpbusd
__builtin_ia32_tdpbuud
__builtin_ia32_tdpbf16ps
__builtin_ia32_ptwrite64
__builtin_bitrev
__builtin_getid
__builtin_getps
__builtin_setps
__xcore__
__XS1B__
auto
break
case
char
const
continue
default
double
else
enum
extern
float
goto
inline
_ExtInt
long
register
restrict
return
short
signed
sizeof
static
struct
switch
typedef
union
unsigned
void
volatile
while
_Alignas
_Alignof
_Atomic
_Bool
_Complex
_Generic
_Imaginary
_Noreturn
_Static_assert
_Thread_local
__func__
__objc_yes
__objc_no
__ptrauth
__ptrauth_restricted_intptr
bool
catch
class
const_cast
delete
dynamic_cast
explicit
export
false
friend
mutable
namespace
operator
private
protected
public
reinterpret_cast
static_cast
template
this
throw
true
typename
typeid
using
virtual
wchar_t
alignas
alignof
char16_t
char32_t
constexpr
decltype
noexcept
nullptr
static_assert
thread_local
concept
requires
co_await
co_return
co_yield
module
import
consteval
constinit
char8_t
_Float16
_Accum
_Fract
_Sat
_Decimal32
_Decimal64
_Decimal128
__null
__alignof
__attribute
__builtin_choose_expr
__builtin_offsetof
__builtin_FILE
__builtin_FUNCTION
__builtin_LINE
__builtin_COLUMN
__builtin_types_compatible_p
__builtin_va_arg
__extension__
__float128
__ibm128
__imag
__int128
__label__
__real
__thread
__FUNCTION__
__PRETTY_FUNCTION__
__auto_type
typeof
__FUNCDNAME__
__FUNCSIG__
L__FUNCTION__
L__FUNCSIG__
__is_interface_class
__is_sealed
__is_destructible
__is_trivially_destructible
__is_nothrow_destructible
__is_nothrow_assignable
__is_constructible
__is_nothrow_constructible
__is_assignable
__has_nothrow_move_assign
__has_trivial_move_assign
__has_trivial_move_constructor
__has_nothrow_assign
__has_nothrow_copy
__has_nothrow_constructor
__has_trivial_assign
__has_trivial_copy
__has_trivial_constructor
__has_trivial_destructor
__has_virtual_destructor
__is_abstract
__is_aggregate
__is_base_of
__is_class
__is_convertible_to
__is_empty
__is_enum
__is_final
__is_literal
__is_pod
__is_polymorphic
__is_standard_layout
__is_trivial
__is_trivially_assignable
__is_trivially_constructible
__is_trivially_copyable
__is_union
__has_unique_object_representations
__underlying_type
__reference_binds_to_temporary
__is_lvalue_expr
__is_rvalue_expr
__is_arithmetic
__is_floating_point
__is_integral
__is_complete_type
__is_void
__is_array
__is_function
__is_reference
__is_lvalue_reference
__is_rvalue_reference
__is_fundamental
__is_object
__is_scalar
__is_compound
__is_pointer
__is_member_object_pointer
__is_member_function_pointer
__is_member_pointer
__is_const
__is_volatile
__is_signed
__is_unsigned
__is_same
__is_convertible
__array_rank
__array_extent
__private_extern__
__module_private__
__builtin_ptrauth_type_discriminator
__builtin_xnu_type_signature
__builtin_xnu_type_summary
__builtin_xnu_types_compatible
__builtin_tmo_type_get_metadata
__declspec
__cdecl
__stdcall
__fastcall
__thiscall
__regcall
__vectorcall
__forceinline
__unaligned
__super
__global
__local
__constant
__private
__generic
__kernel
__read_only
__write_only
__read_write
__builtin_astype
vec_step
image1d_t
image1d_array_t
image1d_buffer_t
image2d_t
image2d_array_t
image2d_depth_t
image2d_array_depth_t
image2d_msaa_t
image2d_array_msaa_t
image2d_msaa_depth_t
image2d_array_msaa_depth_t
image3d_t
pipe
addrspace_cast
__builtin_omp_required_simd_align
__pascal
__vector
__pixel
__bool
__bf16
half
__bridge
__bridge_transfer
__bridge_retained
__bridge_retain
__covariant
__contravariant
__kindof
_Nonnull
_Nullable
_Nullable_result
_Null_unspecified
__ptr64
__ptr32
__sptr
__uptr
__w64
__uuidof
__try
__finally
__leave
__int64
__if_exists
__if_not_exists
__single_inheritance
__multiple_inheritance
__virtual_inheritance
__interface
__builtin_convertvector
__builtin_bit_cast
__builtin_available
__builtin_sycl_unique_stable_name
__unknown_anytype
__builtin_unsafe_forge_bidi_indexable
__builtin_unsafe_forge_single
__builtin_get_pointer_lower_bound
__builtin_get_pointer_upper_bound
__builtin_terminated_by_to_indexable
__builtin_unsafe_terminated_by_to_indexable
__builtin_unsafe_terminated_by_from_indexable
unknown
code_completion
comment
identifier
raw_identifier
numeric_constant
char_constant
wide_char_constant
utf8_char_constant
utf16_char_constant
utf32_char_constant
string_literal
wide_string_literal
header_name
utf8_string_literal
utf16_string_literal
utf32_string_literal
l_square
r_square
l_paren
r_paren
l_brace
r_brace
period
ellipsis
ampamp
ampequal
star
starequal
plus
plusplus
plusequal
minus
arrow
minusminus
minusequal
tilde
exclaim
exclaimequal
slash
slashequal
percent
percentequal
less
lessless
lessequal
lesslessequal
spaceship
greater
greatergreater
greaterequal
greatergreaterequal
caret
caretequal
pipepipe
pipeequal
question
colon
semi
equal
equalequal
comma
hash
hashhash
hashat
periodstar
arrowstar
coloncolon
lesslessless
greatergreatergreater
caretcaret
annot_cxxscope
annot_typename
annot_template_id
annot_non_type
annot_non_type_undeclared
annot_non_type_dependent
annot_overload_set
annot_primary_expr
annot_decltype
annot_pragma_unused
annot_pragma_vis
annot_pragma_pack
annot_pragma_parser_crash
annot_pragma_captured
annot_pragma_dump
annot_pragma_msstruct
annot_pragma_align
annot_pragma_weak
annot_pragma_weakalias
annot_pragma_redefine_extname
annot_pragma_fp_contract
annot_pragma_fenv_access
annot_pragma_fenv_access_ms
annot_pragma_fenv_round
annot_pragma_float_control
annot_pragma_ms_pointers_to_members
annot_pragma_ms_vtordisp
annot_pragma_ms_pragma
annot_pragma_opencl_extension
annot_attr_openmp
annot_pragma_openmp
annot_pragma_openmp_end
annot_pragma_loop_hint
annot_pragma_fp
annot_pragma_attribute
annot_module_include
annot_module_begin
annot_module_end
annot_header_unit
__is_interface_class
__is_sealed
__is_destructible
__is_trivially_destructible
__is_nothrow_destructible
__has_nothrow_move_assign
__has_trivial_move_assign
__has_trivial_move_constructor
__has_nothrow_assign
__has_nothrow_copy
__has_nothrow_constructor
__has_trivial_assign
__has_trivial_copy
__has_trivial_constructor
__has_trivial_destructor
__has_virtual_destructor
__is_abstract
__is_aggregate
__is_class
__is_empty
__is_enum
__is_final
__is_literal
__is_pod
__is_polymorphic
__is_standard_layout
__is_trivial
__is_trivially_copyable
__is_union
__has_unique_object_representations
__is_arithmetic
__is_floating_point
__is_integral
__is_complete_type
__is_void
__is_array
__is_function
__is_reference
__is_lvalue_reference
__is_rvalue_reference
__is_fundamental
__is_object
__is_scalar
__is_compound
__is_pointer
__is_member_object_pointer
__is_member_function_pointer
__is_member_pointer
__is_const
__is_volatile
__is_signed
__is_unsigned
__builtin_types_compatible_p
__is_nothrow_assignable
__is_assignable
__is_base_of
__is_convertible_to
__is_trivially_assignable
__reference_binds_to_temporary
__is_same
__is_convertible
__builtin_xnu_types_compatible
__is_constructible
__is_nothrow_constructible
__is_trivially_constructible
__array_rank
__array_extent
sizeof
alignof
__alignof
__builtin_ptrauth_type_discriminator
__builtin_xnu_type_signature
__builtin_xnu_type_summary
__builtin_tmo_type_get_metadata
vec_step
__builtin_omp_required_simd_align
tapi-1400.0.11
clang
Apple 
 version 14.0.0
LLVM 14.0.0
no-format
-Wfatal-errors
-Wfatal-errors=
-Rno-
custom
function
function-entry
function-exit
typed
none
omp_no_openmp
omp_no_openmp_routines
omp_no_parallelism
ompx_spmd_amenable
use-dbg-addr
Use llvm.dbg.addr for all local variables
Address space 0 can never be non-integral
Invalid address space, must be a 24bit integer
Missing size specification for pointer in datalayout string
Invalid pointer size of 0 bytes
Missing alignment specification for pointer in datalayout string
Pointer ABI alignment must be a power of 2
Pointer preferred alignment must be a power of 2
Invalid index size of 0 bytes
Sized aggregate specification in datalayout string
Missing alignment specification in datalayout string
ABI alignment specification must be >0 for non-aggregate types
Invalid ABI alignment, must be a 16bit integer
Invalid ABI alignment, must be a power of 2
Invalid preferred alignment, must be a 16bit integer
Invalid preferred alignment, must be a power of 2
Zero width native integer type in datalayout string
Alignment is neither 0 nor a power of 2
Unknown function pointer alignment type in datalayout string
Unexpected trailing characters after mangling specifier in datalayout string
Expected mangling specifier in datalayout string
Unknown mangling specifier in datalayout string
Unknown mangling in datalayout string
Unknown specifier in datalayout string
Invalid bit width, must be a 24bit integer
Preferred alignment cannot be less than the ABI alignment
Trailing separator in datalayout string
Expected token before separator in datalayout string
Invalid address space, must be a 24-bit integer
not a number, or does not fit in an unsigned int
number of bits must be a byte width multiple
enable-fs-discriminator
Enable adding flow sensitive discriminators
pass-remarks
Enable optimization remarks from passes whose name match the given regular expression
pass-remarks-missed
Enable missed optimization remarks from passes whose name match the given regular expression
pass-remarks-analysis
Enable optimization analysis remarks from passes whose name match the given regular expression
Invalid regular expression '
' in -pass-remarks: 
cl::location(x) specified more than once!
non-global-value-max-name-size
Maximum size for the name of non-global values.
disable-i2p-p2i-opt
Disables inttoptr/ptrtoint roundtrip optimization
opaque-pointers
Use opaque pointers
propagate-attrs
Propagate attributes in index
import-constants-with-refs
Import constant global variables with references
opt-bisect-limit
Maximum optimization to perform
NOT 
BISECT: 
running pass 
use-dereferenceable-at-point-semantics
Deref attributes and metadata infer facts at definition only
SV64
SV3264
Unknown
R_POS
R_RL
R_RLA
R_NEG
R_REL
R_TOC
R_TRL
R_TRLA
R_GL
R_TCL
R_REF
R_BA
R_BR
R_RBA
R_RBR
R_TLS
R_TLS_IE
R_TLS_LD
R_TLS_LE
R_TLSM
R_TLSML
R_TOCU
R_TOCL
remarks-section
Emit a section containing remark diagnostics metadata. By default, this is enabled for the following formats: yaml-strtab, bitstream.
can't read more than %zu at a time, trying to read %u
can't enter sub-block: current code size is 0
can't enter sub block: already at end of stream
Abbreviation starts with an Array or a Blob
Array element type can't be an Array or a Blob
Array op not second to last
Array element type has to be an encoding of a type
Fixed or VBR abbrev record with size > MaxChunkData
Abbrev record with no operands
Invalid abbrev number
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789._
cortex-a34
cortex-a35
cortex-a53
cortex-a55
cortex-a510
cortex-a57
cortex-a65
cortex-a65ae
cortex-a72
cortex-a73
cortex-a75
cortex-a76
cortex-a76ae
cortex-a77
cortex-a78
cortex-a78c
cortex-r82
cortex-x1
neoverse-e1
neoverse-n1
neoverse-n2
neoverse-v1
cyclone
apple-a7
apple-a8
apple-a9
apple-a10
apple-a11
apple-a12
apple-a13
apple-a14
apple-m1
apple-s4
apple-s5
exynos-m3
exynos-m4
exynos-m5
falkor
saphira
kryo
thunderx2t99
thunderx3t110
thunderx
thunderxt88
thunderxt81
thunderxt83
tsv110
a64fx
carmel
invalid
+fp-armv8
+neon
+crc
+crypto
+dotprod
+fp16fml
+fullfp16
+spe
+ras
+lse
+rdm
+sve
+sve2
+sve2-aes
+sve2-sm4
+sve2-sha3
+sve2-bitperm
+tme
+rcpc
+brbe
+pauth
+flagm
+sme
+sme-f64
+sme-i64
+sme2
+i8mm
none
<empty>
armv8-a
armv8.1-a
8.1-A
v8.1a
armv8.2-a
8.2-A
v8.2a
armv8.3-a
8.3-A
v8.3a
armv8.4-a
8.4-A
v8.4a
armv8.5-a
8.5-A
v8.5a
armv8.6-a
8.6-A
v8.6a
armv8.7-a
8.7-A
v8.7a
armv9-a
armv9.1-a
9.1-A
v9.1a
armv9.2-a
9.2-A
v9.2a
armv8-r
-crc
-lse
-rdm
crypto
-crypto
+sm4
-sm4
sha3
+sha3
-sha3
sha2
+sha2
-sha2
+aes
-aes
dotprod
-dotprod
-fp-armv8
simd
-neon
fp16
-fullfp16
fp16fml
-fp16fml
profile
-spe
-ras
-sve
sve2
-sve2
sve2-aes
-sve2-aes
sve2-sm4
-sve2-sm4
sve2-sha3
-sve2-sha3
sve2-bitperm
-sve2-bitperm
rcpc
-rcpc
+rand
-rand
memtag
+mte
-mte
ssbs
+ssbs
-ssbs
predres
+predres
-predres
bf16
+bf16
-bf16
i8mm
-i8mm
f32mm
+f32mm
-f32mm
f64mm
+f64mm
-f64mm
-tme
ls64
+ls64
-ls64
brbe
-brbe
pauth
-pauth
flagm
-flagm
-sme
sme-f64
-sme-f64
sme-i64
-sme-i64
sme2
-sme2
v5te
v6-m
v6kz
v7hl
v7-a
v7-r
v7-m
v7em
v7e-m
aarch64
arm64
v8-a
v8.1a
v8.1-a
v8.2a
v8.2-a
v8.3a
v8.3-a
v8.4a
v8.4-a
v8.5a
v8.5-a
v8.6a
v8.6-a
v8.7a
v8.7-a
v8-r
v9-a
v9.1a
v9.1-a
v9.2a
v9.2-a
v8m.base
v8-m.base
v8m.main
v8-m.main
v8.1m.main
v8.1-m.main
-vfp2
-vfp2sp
-vfp3
-vfp3d16
-vfp3d16sp
-vfp3sp
-fp16
-vfp4
-vfp4d16
-vfp4d16sp
-vfp4sp
-fp-armv8d16
-fp-armv8d16sp
-fp-armv8sp
+fullfp16
-fullfp16
+d32
-d32
+sha2
-sha2
+aes
-aes
thumb
fpe2
fpe3
maverick
invalid
vfp2
vfpv2
vfp3
vfpv3
vfp4
vfpv4
vfp3-d16
vfpv3-d16
vfp4-d16
vfpv4-d16
fp4-sp-d16
vfpv4-sp-d16
fpv4-sp-d16
fp4-dp-d16
fpv4-dp-d16
fp5-sp-d16
fpv5-sp-d16
fp5-dp-d16
fpv5-dp-d16
fpv5-d16
neon-vfpv3
neon
generic
arm8
arm810
strongarm
strongarm110
strongarm1100
strongarm1110
arm7tdmi
arm7tdmi-s
arm710t
arm720t
arm9
arm9tdmi
arm920
arm920t
arm922t
arm940t
ep9312
arm10tdmi
arm1020t
arm9e
arm946e-s
arm966e-s
arm968e-s
arm10e
arm1020e
arm1022e
arm926ej-s
arm1136j-s
arm1136jf-s
mpcore
mpcorenovfp
arm1176jz-s
arm1176jzf-s
arm1156t2-s
arm1156t2f-s
cortex-m0
cortex-m0plus
cortex-m1
sc000
cortex-a5
cortex-a7
cortex-a8
cortex-a9
cortex-a12
cortex-a15
cortex-a17
krait
cortex-r4
cortex-r4f
cortex-r5
cortex-r7
cortex-r8
cortex-r52
sc300
cortex-m3
cortex-m4
cortex-m7
cortex-m23
cortex-m33
cortex-m35p
cortex-m55
cortex-a32
cortex-a35
cortex-a53
cortex-a55
cortex-a57
cortex-a72
cortex-a73
cortex-a75
cortex-a76
cortex-a76ae
cortex-a77
cortex-a78
cortex-a78c
cortex-x1
neoverse-n1
neoverse-n2
neoverse-v1
cyclone
exynos-m3
exynos-m4
exynos-m5
kryo
iwmmxt
xscale
swift
+hwdiv-arm
-hwdiv-arm
+hwdiv
-hwdiv
fp.dp
aapcs
aapcs16
apcs-gnu
aapcs-linux
armv2
armv2a
armv3
armv3m
armv4
armv4t
armv5t
armv5te
armv5tej
5TEJ
armv6
armv6k
armv6t2
v6t2
armv6kz
armv6-m
armv7-a
armv7ve
v7ve
armv7-r
armv7-m
armv7e-m
7E-M
armv8-a
armv8.1-a
8.1-A
armv8.2-a
8.2-A
armv8.3-a
8.3-A
armv8.4-a
8.4-A
armv8.5-a
8.5-A
armv8.6-a
8.6-A
armv8.7-a
8.7-A
armv9-a
armv9.1-a
9.1-A
armv9.2-a
9.2-A
armv8-r
armv8-m.base
8-M.Baseline
armv8-m.main
8-M.Mainline
armv8.1-m.main
8.1-M.Mainline
iwmmxt2
armv7s
armv7k
none
vfpv3-fp16
vfpv3-d16-fp16
vfpv3xd
vfpv3xd-fp16
fp-armv8
fp-armv8-fullfp16-d16
fp-armv8-fullfp16-sp-d16
neon-fp16
neon-vfpv4
neon-fp-armv8
crypto-neon-fp-armv8
softvfp
+crc
-crc
crypto
+crypto
-crypto
sha2
dotprod
+dotprod
-dotprod
+dsp
-dsp
+mve
-mve
mve.fp
+mve.fp
-mve.fp
idiv
simd
virt
fp16
+ras
-ras
fp16fml
+fp16fml
-fp16fml
bf16
+bf16
-bf16
i8mm
+i8mm
-i8mm
+lob
-lob
cdecp0
+cdecp0
-cdecp0
cdecp1
+cdecp1
-cdecp1
cdecp2
+cdecp2
-cdecp2
cdecp3
+cdecp3
-cdecp3
cdecp4
+cdecp4
-cdecp4
cdecp5
+cdecp5
-cdecp5
cdecp6
+cdecp6
-cdecp6
cdecp7
+cdecp7
-cdecp7
arm,thumb
String contains multiple dots
Hex strings require an exponent
Invalid character in significand
Significand has no digits
+Inf
Invalid string length
String has no digits
Invalid string
-Inf
0.0E+0
e+00
Invalid trailing hexadecimal fraction!
Exponent has no digits
Invalid character in exponent
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
Number of memory regions: 
Bytes used: 
Bytes allocated: 
Bytes wasted: 
 (includes alignment, etc)
: for the 
 option: 
may only occur zero or one times!
must occur exactly one time!
>...
' is invalid value for boolean argument! Try 0 or 1
' value invalid for integer argument!
' value invalid for uint argument!
' value invalid for ullong argument!
 (default: 
= *unknown option value*
*no default*
= *cannot print option value*
General options
: CommandLine Error: Option '
' registered more than once!
inconsistency in registered CommandLine options
Cannot specify more than one option with cl::ConsumeAfter!
Could not convert UTF16 to UTF8
=<value>
    =
uint
ulong
zlib error: Z_MEM_ERROR
zlib error: Z_BUF_ERROR
zlib error: Z_STREAM_ERROR
zlib error: Z_DATA_ERROR
Multiple errors:
Multiple errors
Inconvertible error value. An error has occurred that could not be converted to a known std::error_code. Please file a bug.
A file error occurred.
LLVM ERROR: 
LLVM ERROR: out of memory
atomic_write_error: 
failed_to_create_uniq_file
output_stream_error
failed_to_rename_temp_file
Allocation failed
decimal64
decimal128
decimal32
 complex
 imaginary
alignof (
noexcept (
sizeof (
sizeof... (
typeid (
%LaL
yptn
'block-literal'
operator?
_GLOBAL__N
std::basic_string
std::basic_string<char, std::char_traits<char>, std::allocator<char> >
std::basic_istream<char, std::char_traits<char> >
std::basic_ostream<char, std::char_traits<char> >
std::basic_iostream<char, std::char_traits<char> >
string literal
template parameter object for 
vtable for 
VTT for 
typeinfo for 
typeinfo name for 
covariant return thunk to 
thread-local wrapper routine for 
thread-local initialization routine for 
virtual thunk to 
non-virtual thunk to 
guard variable for 
reference temporary for 
construction vtable for 
___Z
____Z
invocation function for block in 
%.*g
Invalid UTF-8 sequence
[{0}:{1}, byte={2}]: {3}
Invalid JSON value (null?)
Invalid JSON value (true?)
Invalid JSON value (false?)
Expected , or ] after array element
Expected object key
Expected : after object key
Expected , or } after object property
Invalid JSON value
Unterminated string
Control character in string
Invalid escape sequence
Invalid \u escape sequence
Invalid JSON value (number?)
Text after end of document
failed to obtain absolute path for 
.lock
failed to create unique file 
failed to get host id
failed to write to 
failed to create link 
failed to remove lockfile 
/dev/urandom
<stdin>
%.2x
Program arguments: 
PLEASE submit a bug report to http://developer.apple.com/bugreporter/ and include the crash backtrace.
Stack dump:
zvlsseg
+experimental-v
+experimental-zvlsseg
zvamo
+experimental-zvamo
+experimental-
standard user-level extension 'e' requires 'rv32'
string must be lowercase
string must begin with rv32{i,e,g} or rv64{i,g}
first letter should be 'e', 'i' or 'g'
standard user-level extension not given in canonical order '%c'
invalid standard user-level extension '%c'
unsupported standard user-level extension '%c'
d requires f extension to also be specified
extension name missing after separator '_'
invalid extension prefix '
%s not given in canonical order '%s'
%s name missing after '%s'
duplicated %s '%s'
unsupported %s '%s'
mafdqlcbjtpvn
minor version number missing after 'p' for extension '
Failed to parse major version number for extension '
Failed to parse minor version number for extension '
multi-character extensions must be separated by underscores
requires '-menable-experimental-extensions' for experimental extension '
experimental extension requires explicit version number `
unsupported version number 
 for experimental extension '
'(this compiler supports 
 for extension '
non-standard supervisor-level extension
standard supervisor-level extension
non-standard user-level extension
standard user-level extension
Allocation failed
Allocation failed
SmallVector unable to grow. Requested capacity (
) is larger than maximum value for size type (
SmallVector capacity unable to grow. Already at maximum size 
Included from 
<unknown>
Supplied regexp was blank
can't open file '
error parsing file '
malformed section header on line 
malformed regex for section 
malformed line 
malformed section 
malformed regex in line 
                          ... Statistics Collected ...
%*u %-*s - %s
Statistics are disabled.  
Build with asserts or with -DLLVM_FORCE_ENABLE_STATS
Allocation failed
Expected 'kind mangled_name mangled_name', found '
Invalid kind, expected 'name', 'type', or 'encoding', found '
Manglings '
' and '
' have both been used in prior remappings. Move this remapping earlier in the file.
Could not demangle '
' as a <
>; invalid mangling?
generic
invalid
generic-rv32
generic-rv64
rocket-rv32
rocket-rv64
sifive-7-rv32
sifive-7-rv64
sifive-e20
sifive-e21
sifive-e24
sifive-e31
sifive-e34
sifive-e76
sifive-s21
sifive-s51
sifive-s54
sifive-s76
sifive-u54
sifive-u74
rocket
sifive-7-series
+64bit
-64bit
gfx600
tahiti
gfx601
pitcairn
verde
gfx602
hainan
oland
gfx700
kaveri
gfx701
hawaii
gfx702
gfx703
kabini
mullins
gfx704
bonaire
gfx705
gfx801
carrizo
gfx802
iceland
tonga
gfx803
fiji
polaris10
polaris11
gfx805
tongapro
gfx810
stoney
gfx900
gfx902
gfx904
gfx906
gfx908
gfx909
gfx90a
gfx90c
gfx1010
gfx1011
gfx1012
gfx1013
gfx1030
gfx1031
gfx1032
gfx1033
gfx1034
gfx1035
r600
rv630
rv635
r630
rs780
rs880
rv610
rv620
rv670
rv710
rv730
rv740
rv770
cedar
palm
cypress
hemlock
juniper
redwood
sumo
sumo2
barts
caicos
aruba
cayman
turks
rv32imc
rv32imac
rv32imafc
rv64imac
rv64gc
Error opening info-output-file '
 for appending!
%9lld  
  Total Execution Time: %5.4f seconds (%5.4f wall clock)
   ---User Time---
   --System Time--
   --User+System--
   ---Wall Time---
  ---Mem---
  ---Instr---
  --- Name ---
Total
"time.
%.*e
.wall
.user
.sys
.mem
.instr
misc
Miscellaneous Ungrouped Timers
        -----     
  %7.4f (%5.1f%%)
track-memory
Enable -time-passes memory tracking (this may be slow)
sort-timers
In the report, sort the timers in each group in wall clock time order
unknown
aarch64
aarch64_32
aarch64_be
amdgcn
amdil64
amdil
armeb
bpfeb
bpfel
csky
hexagon
hsail64
hsail
kalimba
lanai
le32
le64
m68k
mips64
mips64el
mips
mipsel
msp430
nvptx64
nvptx
powerpc64
powerpc64le
powerpc
powerpcle
r600
renderscript32
renderscript64
riscv32
riscv64
shave
sparc
sparcel
sparcv9
spir64
spir
s390x
tcele
thumb
thumbeb
wasm32
wasm64
i386
x86_64
xcore
wasm
apple
amdhsa
amdpal
ananas
cuda
cloudabi
contiki
darwin
dragonfly
elfiamcu
emscripten
freebsd
fuchsia
haiku
hermit
hurd
kfreebsd
linux
macosx
mesa3d
minix
nvcl
nacl
netbsd
openbsd
rtems
solaris
tvos
bridgeos
driverkit
sepos
wasi
watchos
windows
android
code16
coreclr
cygnus
eabi
eabihf
gnuabi64
gnuabin32
gnueabi
gnueabihf
gnux32
gnu_ilp32
itanium
msvc
macabi
musl
musleabi
musleabihf
muslx32
simulator
ppc32le
ppcle
mipsn32
mipsr6
mipsr6el
mipsisa32r6
mipsisa32r6el
mipsisa64r6
mipsisa64r6el
arm64e
arm1176jzf-s
cortex-a8
cortex-a9
cortex-a7
arm926ej-s
strongarm
arm7tdmi
i786
i886
i986
powerpcspe
xscaleeb
mipseb
mipsallegrex
mipsallegrexel
mips64eb
mipsn32r6
mipsn32el
mips64r6el
mipsn32r6el
sparc64
xcoff
coff
goff
macho
expected root node
expected mapping node
case-sensitive
use-external-names
overlay-relative
redirecting-with
roots
expected array
expected integer
version mismatch, expected 0
'fallthrough' and 'redirecting-with' are mutually exclusive
expected valid redirect kind
unknown key
duplicate key '
expected mapping node for file or directory entry
external-contents
use-external-name
unknown value for 'type'
entry already has 'contents' or 'external-contents'
missing key 'contents' or 'external-contents'
'use-external-name' is not supported for 'directory' entries
'contents' is not supported for 'directory-remap' entries
entry with relative path at the root level is not discoverable
expected boolean value
fallback
redirect-only
missing key '
  'version': 0,
  'case-sensitive': '
  'use-external-names': '
  'overlay-relative': '
  'roots': [
'type': 'directory',
'name': "
'contents': [
'type': 'file',
'external-contents': "
Color Options
error: 
warning: 
note: 
remark: 
color
Use colors in output (default=autodetect)
cmov
popcnt
sse2
sse3
ssse3
sse4.1
sse4.2
avx2
sse4a
fma4
avx512f
bmi2
pclmul
avx512vl
avx512bw
avx512dq
avx512cd
avx512er
avx512pf
avx512vbmi
avx512ifma
avx5124vnniw
avx5124fmaps
avx512vpopcntdq
avx512vbmi2
gfni
vpclmulqdq
avx512vnni
avx512bitalg
avx512bf16
avx512vp2intersect
i386
i486
winchip-c6
winchip2
i586
pentium
pentium-mmx
pentiumpro
i686
pentium2
pentium3
pentium3m
pentium-m
c3-2
yonah
pentium4
pentium4m
prescott
nocona
core2
penryn
bonnell
atom
silvermont
goldmont
goldmont-plus
tremont
nehalem
corei7
westmere
sandybridge
corei7-avx
ivybridge
core-avx-i
haswell
core-avx2
broadwell
skylake
skylake-avx512
cascadelake
cooperlake
cannonlake
icelake-client
rocketlake
icelake-server
tigerlake
sapphirerapids
alderlake
lakemont
k6-2
k6-3
athlon
athlon-tbird
athlon-xp
athlon-mp
athlon-4
athlon64
athlon-fx
opteron
k8-sse3
athlon64-sse3
opteron-sse3
amdfam10
barcelona
btver1
btver2
bdver1
bdver2
bdver3
bdver4
znver1
znver2
znver3
x86-64
x86-64-v2
x86-64-v3
x86-64-v4
geode
3dnow
3dnowa
64bit
amx-bf16
amx-int8
amx-tile
cldemote
clflushopt
clwb
clzero
cx16
crc32
enqcmd
f16c
fsgsbase
fxsr
invpcid
widekl
lzcnt
movbe
movdir64b
movdiri
mwaitx
pconfig
prefetchwt1
prfchw
ptwrite
rdpid
rdrnd
rdseed
sahf
serialize
shstk
tsxldtrk
uintr
vaes
vzeroupper
waitpkg
wbnoinvd
xsave
xsavec
xsaveopt
xsaves
hreset
avx512fp16
avxvnni
retpoline-external-thunk
retpoline-indirect-branches
retpoline-indirect-calls
lvi-cfi
lvi-load-hardening
YAML
#;/?:@&=+$,_.!~*'()[]
Cannot consume non-ascii characters
Could not find expected : for simple key
Expected quote at end of scalar
Found unexpected ':' while scanning a plain scalar
,:?[]{}
Found invalid tab character in indentation
Got empty plain scalar
Got empty alias or anchor
Expected a line break after block scalar header
Leading all-spaces line must be smaller than the block indent
A text line is less indented than the block scalar
-?:,[]{}#&*!|>'"%@`
Unrecognized character while tokenizing.
Can only iterate over the stream once
Unknown tag handle 
tag:yaml.org,2002:null
tag:yaml.org,2002:str
tag:yaml.org,2002:seq
Unrecognized escape code
Null key in Key Value.
Unexpected token in Key Value.
Unexpected token. Expected Key or Block End
Unexpected token. Expected Key, Flow Entry, or Flow Mapping End.
Unexpected token. Expected Block Entry or Block End.
Could not find closing ]!
Expected , between entries!
tag:yaml.org,2002:
Already encountered an anchor for this node!
Already encountered a tag for this node!
Unexpected token
not a mapping
missing required key '
unknown key '
not a sequence
expected sequence of bit values
unexpected scalar in sequence of bit values
unknown bit value
unexpected scalar
Map key must be a scalar
Map value must not be empty
unknown node kind
invalid call
                
true
false
invalid boolean
invalid number
out of range number
invalid version format
IO failure on output stream: 
[:<:]]
[:>:]]
alnum
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
blank
cntrl
digit
graph
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
abcdefghijklmnopqrstuvwxyz
print
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~ 
punct
!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
space
ABCDEFGHIJKLMNOPQRSTUVWXYZ
xdigit
0123456789ABCDEFabcdef
alert
backspace
newline
vertical-tab
form-feed
carriage-return
exclamation-mark
quotation-mark
number-sign
dollar-sign
percent-sign
ampersand
apostrophe
left-parenthesis
right-parenthesis
asterisk
plus-sign
comma
hyphen
hyphen-minus
period
full-stop
slash
solidus
three
four
five
seven
eight
nine
colon
semicolon
less-than-sign
equals-sign
greater-than-sign
question-mark
commercial-at
left-square-bracket
backslash
reverse-solidus
right-square-bracket
circumflex
circumflex-accent
underscore
low-line
grave-accent
left-brace
left-curly-bracket
vertical-line
right-brace
right-curly-bracket
REG_0x%x
REG_NOMATCH
llvm_regexec() failed to match
REG_BADPAT
invalid regular expression
REG_ECOLLATE
invalid collating element
REG_ECTYPE
invalid character class
REG_EESCAPE
trailing backslash (\)
REG_ESUBREG
invalid backreference number
REG_EBRACK
brackets ([ ]) not balanced
REG_EPAREN
parentheses not balanced
REG_EBRACE
braces not balanced
REG_BADBR
invalid repetition count(s)
REG_ERANGE
invalid character range
REG_ESPACE
out of memory
REG_BADRPT
repetition-operator operand invalid
REG_EMPTY
empty (sub)expression
REG_ASSERT
"can't happen" -- you found a bug
REG_INVARG
invalid argument to regex routine
*** unknown regexp error code ***
x86_64-apple-darwin20.1.0
hw.physicalcpu
-darwin
.0.0
pentium-mmx
pentium-m
prescott
k6-2
k6-3
athlon-xp
k8-sse3
0123456789abcdef
-%%%%%%
HOME
.cache
TMPDIR
TEMP
TEMPDIR
/var/tmp/
TERM
/dev/null
COLUMNS
 "\$
Child timed out but wouldn't die
Child timed out
Error waiting for child process
Program could not be executed
 (core dumped)
Executable "
" doesn't exist!
Can't redirect stderr to stdout
posix_spawn failed
Couldn't fork
/dev/null
Cannot posix_spawn_file_actions_addopen
Cannot open file '
' for 
input
output
Cannot dup2
llvm-symbolizer
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
%-2d
 %-*s
 %#0*lx
 + %tu
too many signal callbacks already registered
pthread_attr_init failed
pthread_attr_setstacksize failed
pthread_create failed
pthread_join failed
pthread_attr_destroy failed
Missing RuntimeRoot
RuntimeRoot should be an array
PublicSDKContentRoot
Missing PublicSDKContentRoot
SDKContentRoot should be an array
projectName
Missing SDKContentRoot
projectWithError
-?:\,[]{}#&*!|>'"%@`
&3dd
,???3:
q])q6Text-based Stubs Tool
 Ab
2"%G
YY'YY4K
#***'
*YYY8YYYG
).<)J)X|))
'`````2CR{
^adjmgpII
!5>JX&.
C(1:#
V^fn|
$-5>
zlib
-fdump-record-layouts
full
marker
integer
none
undefined
address
local-exec
4096
medium
small
mips1
mips2
mips32r2
mips32r3
mips32r5
mips32r6
mips32
mips3
mips4
mips5
mips64r2
mips64r3
mips64r5
mips64r6
mips64
hexagonv55
hexagonv5
hexagonv60
hexagonv62
hexagonv65
hexagonv66
hexagonv67t
hexagonv67
hexagonv68
no-invalid-source-encoding
invalid-source-encoding
everything
no-error
error
error=c++11-compat-deprecated-writable-strings
66666'+
66666666666666
QQQQQQQ
QQQQQQQFFQQQQQQ
///_X
_    MM55
__88_@@__________5CC
 33+
!/37
N*1NNNN8?NNNNNNNNF
"%(3
@FMP
*** 
zzzzzzzzzESEzzz""v
i5i""iiii<Ciiii)
-fxray-instrument
-fxray-instruction-threshold=
.BXp
BBBBB'3
bTPPPPPPPPPPPPPPPPPPPPPPPP
PPPPOPPOOPPPOPOOOPPPOOOOOOPOOPOOPOOOOOPOPOOOPOOOOPPPOOPOPOPPPOPPOPPPPYPPPPPPPPP7PPOOPPOOO7PPOOPPPPPPPOOOOOOOOOOPPOPPPPPPPPPOOPOPPOPPOO
????
;=?ACEGIKMOQSUWY[]_acegikmoqsuwy{}
3Gw]wwj
#------)
dDOZ
4 4.
%C8?
(+.:=@FFFFC
&,5>
 +69<BEGJMPV
">EVa
!! ^
4Ae|
)Eg
 , H 
!"!A!]!y!
"/"A"]"y"
#=#Y#x#
$#$E$g$
%!%D%l%
&;&W&w&
&'.'P'r'
('(C(a(q(
)%)A)X)r)
*!*8*^*u*
!!!!
!!!!
!!!!
!!!!!!!!!!!!!!!
,,,,,,,,,,
 
&-?F
FKQMM
4@9WW
8=CNN
**********
 >m
((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((""""""""""""$""""""""""""$"""""""
"$88888"""""""""""
""""">""
"$"""""""""
"""""D"""""
"""""""""""""""""""$""""""""""""""""""""""$""((Z
/Pq
0G7:
%2ii
 #&)
"%(+.147:=EHKNQTWZ]
`cfilorux{~
369<?
 Ab
2"%G
"&*.9=AH
X_chlpty
IIIIIIeIIIIIIII
IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIImIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII
IwIII
IIIIIII
YYYYYIIIIIIIIIII
IIIII
II)I
IIIIIIIII-IIIII
IIIII3IIIIIIIIIIIIIIIIIII
IIIIIIIIIIIIIIIIIIIIII
IIII
.NZz
8f
 . R v 
  !D!h!
"@"o"
0G7:
 Ab
0G7:
/D58
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
&3OO@OOOOOOOOOOOOS`m
OOOOOOOOOOOOOOOOOOOOOO
OOOOOOOOOOOOOOOOOOOOOOOOO
OOOOOzOOOOOOO
OOOOOHOOOOO
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
OOOOOOOOOOOOOOOOOOOOOOOOOOOHOOOOHOOOOOOH
OOOO
OOOOOOOOOOO
OOOOOOOOOOOOOOO
OOOOO
OOOOOOOOOOHOOOOOOOOOOOOOOOO
OOOOO
OOOO
OOOOOOOOOOOOOOOOO
EEEEEE
-FPUZ_
2______Y
++++

IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII99
IIIIIIIIIIIIrIIIIIII
IrOOOOOIIIIIIIIIII
IIIIIUII
IrIIIIIIIII!IIIII\IIIII'IIIIIIIIIhIIIIIIIIIr)IIIIIIIIIIIIIIIIIIIIIrIIIIZZ
222122112112222222222
111221111111111
$>>
==>>>>>>
$===>>==========$
))))))
))))))
OOOOOOO
 "$O&YOOO(
O.OOOO0O24O68:<O>@OOOBOODOOOOO
OOOFOOOKM
 Ab
!+;PW
ggg*
=N?NNNNNMNFHNNNL
4FX
 Ab
0G7:
asrl
lsll
sqrshr
sqrshrl
sqrshrl_sat48
sqshl
sqshll
srshr
srshrl
uqrshl
uqrshll
uqrshll_sat48
uqshl
uqshll
urshr
urshrl
vabavq_p
vabavq_p_s16
vabavq_p_s32
vabavq_p_s8
vabavq_p_u16
vabavq_p_u32
vabavq_p_u8
vabavq
vabavq_s16
vabavq_s32
vabavq_s8
vabavq_u16
vabavq_u32
vabavq_u8
vabdq
vabdq_f16
vabdq_f32
vabdq_m
vabdq_m_f16
vabdq_m_f32
vabdq_m_s16
vabdq_m_s32
vabdq_m_s8
vabdq_m_u16
vabdq_m_u32
vabdq_m_u8
vabdq_s16
vabdq_s32
vabdq_s8
vabdq_u16
vabdq_u32
vabdq_u8
vabdq_x
vabdq_x_f16
vabdq_x_f32
vabdq_x_s16
vabdq_x_s32
vabdq_x_s8
vabdq_x_u16
vabdq_x_u32
vabdq_x_u8
vabsq
vabsq_f16
vabsq_f32
vabsq_m
vabsq_m_f16
vabsq_m_f32
vabsq_m_s16
vabsq_m_s32
vabsq_m_s8
vabsq_s16
vabsq_s32
vabsq_s8
vabsq_x
vabsq_x_f16
vabsq_x_f32
vabsq_x_s16
vabsq_x_s32
vabsq_x_s8
vadciq_m
vadciq_m_s32
vadciq_m_u32
vadciq
vadciq_s32
vadciq_u32
vadcq_m
vadcq_m_s32
vadcq_m_u32
vadcq
vadcq_s32
vadcq_u32
vaddlvaq_p
vaddlvaq_p_s32
vaddlvaq_p_u32
vaddlvaq
vaddlvaq_s32
vaddlvaq_u32
vaddlvq_p
vaddlvq_p_s32
vaddlvq_p_u32
vaddlvq
vaddlvq_s32
vaddlvq_u32
vaddq
vaddq_f16
vaddq_f32
vaddq_m
vaddq_m_f16
vaddq_m_f32
vaddq_m_n_f16
vaddq_m_n_f32
vaddq_m_n_s16
vaddq_m_n_s32
vaddq_m_n_s8
vaddq_m_n_u16
vaddq_m_n_u32
vaddq_m_n_u8
vaddq_m_s16
vaddq_m_s32
vaddq_m_s8
vaddq_m_u16
vaddq_m_u32
vaddq_m_u8
vaddq_n_f16
vaddq_n_f32
vaddq_n_s16
vaddq_n_s32
vaddq_n_s8
vaddq_n_u16
vaddq_n_u32
vaddq_n_u8
vaddq_s16
vaddq_s32
vaddq_s8
vaddq_u16
vaddq_u32
vaddq_u8
vaddq_x
vaddq_x_f16
vaddq_x_f32
vaddq_x_n_f16
vaddq_x_n_f32
vaddq_x_n_s16
vaddq_x_n_s32
vaddq_x_n_s8
vaddq_x_n_u16
vaddq_x_n_u32
vaddq_x_n_u8
vaddq_x_s16
vaddq_x_s32
vaddq_x_s8
vaddq_x_u16
vaddq_x_u32
vaddq_x_u8
vaddvaq_p
vaddvaq_p_s16
vaddvaq_p_s32
vaddvaq_p_s8
vaddvaq_p_u16
vaddvaq_p_u32
vaddvaq_p_u8
vaddvaq
vaddvaq_s16
vaddvaq_s32
vaddvaq_s8
vaddvaq_u16
vaddvaq_u32
vaddvaq_u8
vaddvq_p
vaddvq_p_s16
vaddvq_p_s32
vaddvq_p_s8
vaddvq_p_u16
vaddvq_p_u32
vaddvq_p_u8
vaddvq
vaddvq_s16
vaddvq_s32
vaddvq_s8
vaddvq_u16
vaddvq_u32
vaddvq_u8
vandq
vandq_f16
vandq_f32
vandq_m
vandq_m_f16
vandq_m_f32
vandq_m_s16
vandq_m_s32
vandq_m_s8
vandq_m_u16
vandq_m_u32
vandq_m_u8
vandq_s16
vandq_s32
vandq_s8
vandq_u16
vandq_u32
vandq_u8
vandq_x
vandq_x_f16
vandq_x_f32
vandq_x_s16
vandq_x_s32
vandq_x_s8
vandq_x_u16
vandq_x_u32
vandq_x_u8
vbicq
vbicq_f16
vbicq_f32
vbicq_m
vbicq_m_f16
vbicq_m_f32
vbicq_m_n
vbicq_m_n_s16
vbicq_m_n_s32
vbicq_m_n_u16
vbicq_m_n_u32
vbicq_m_s16
vbicq_m_s32
vbicq_m_s8
vbicq_m_u16
vbicq_m_u32
vbicq_m_u8
vbicq_n_s16
vbicq_n_s32
vbicq_n_u16
vbicq_n_u32
vbicq_s16
vbicq_s32
vbicq_s8
vbicq_u16
vbicq_u32
vbicq_u8
vbicq_x
vbicq_x_f16
vbicq_x_f32
vbicq_x_s16
vbicq_x_s32
vbicq_x_s8
vbicq_x_u16
vbicq_x_u32
vbicq_x_u8
vbrsrq_m
vbrsrq_m_n_f16
vbrsrq_m_n_f32
vbrsrq_m_n_s16
vbrsrq_m_n_s32
vbrsrq_m_n_s8
vbrsrq_m_n_u16
vbrsrq_m_n_u32
vbrsrq_m_n_u8
vbrsrq
vbrsrq_n_f16
vbrsrq_n_f32
vbrsrq_n_s16
vbrsrq_n_s32
vbrsrq_n_s8
vbrsrq_n_u16
vbrsrq_n_u32
vbrsrq_n_u8
vbrsrq_x
vbrsrq_x_n_f16
vbrsrq_x_n_f32
vbrsrq_x_n_s16
vbrsrq_x_n_s32
vbrsrq_x_n_s8
vbrsrq_x_n_u16
vbrsrq_x_n_u32
vbrsrq_x_n_u8
vcaddq_rot270
vcaddq_rot270_f16
vcaddq_rot270_f32
vcaddq_rot270_m
vcaddq_rot270_m_f16
vcaddq_rot270_m_f32
vcaddq_rot270_m_s16
vcaddq_rot270_m_s32
vcaddq_rot270_m_s8
vcaddq_rot270_m_u16
vcaddq_rot270_m_u32
vcaddq_rot270_m_u8
vcaddq_rot270_s16
vcaddq_rot270_s32
vcaddq_rot270_s8
vcaddq_rot270_u16
vcaddq_rot270_u32
vcaddq_rot270_u8
vcaddq_rot270_x
vcaddq_rot270_x_f16
vcaddq_rot270_x_f32
vcaddq_rot270_x_s16
vcaddq_rot270_x_s32
vcaddq_rot270_x_s8
vcaddq_rot270_x_u16
vcaddq_rot270_x_u32
vcaddq_rot270_x_u8
vcaddq_rot90
vcaddq_rot90_f16
vcaddq_rot90_f32
vcaddq_rot90_m
vcaddq_rot90_m_f16
vcaddq_rot90_m_f32
vcaddq_rot90_m_s16
vcaddq_rot90_m_s32
vcaddq_rot90_m_s8
vcaddq_rot90_m_u16
vcaddq_rot90_m_u32
vcaddq_rot90_m_u8
vcaddq_rot90_s16
vcaddq_rot90_s32
vcaddq_rot90_s8
vcaddq_rot90_u16
vcaddq_rot90_u32
vcaddq_rot90_u8
vcaddq_rot90_x
vcaddq_rot90_x_f16
vcaddq_rot90_x_f32
vcaddq_rot90_x_s16
vcaddq_rot90_x_s32
vcaddq_rot90_x_s8
vcaddq_rot90_x_u16
vcaddq_rot90_x_u32
vcaddq_rot90_x_u8
vclsq_m
vclsq_m_s16
vclsq_m_s32
vclsq_m_s8
vclsq
vclsq_s16
vclsq_s32
vclsq_s8
vclsq_x
vclsq_x_s16
vclsq_x_s32
vclsq_x_s8
vclzq_m
vclzq_m_s16
vclzq_m_s32
vclzq_m_s8
vclzq_m_u16
vclzq_m_u32
vclzq_m_u8
vclzq
vclzq_s16
vclzq_s32
vclzq_s8
vclzq_u16
vclzq_u32
vclzq_u8
vclzq_x
vclzq_x_s16
vclzq_x_s32
vclzq_x_s8
vclzq_x_u16
vclzq_x_u32
vclzq_x_u8
vcmlaq
vcmlaq_f16
vcmlaq_f32
vcmlaq_m
vcmlaq_m_f16
vcmlaq_m_f32
vcmlaq_rot180
vcmlaq_rot180_f16
vcmlaq_rot180_f32
vcmlaq_rot180_m
vcmlaq_rot180_m_f16
vcmlaq_rot180_m_f32
vcmlaq_rot270
vcmlaq_rot270_f16
vcmlaq_rot270_f32
vcmlaq_rot270_m
vcmlaq_rot270_m_f16
vcmlaq_rot270_m_f32
vcmlaq_rot90
vcmlaq_rot90_f16
vcmlaq_rot90_f32
vcmlaq_rot90_m
vcmlaq_rot90_m_f16
vcmlaq_rot90_m_f32
vcmpcsq_m
vcmpcsq_m_n_u16
vcmpcsq_m_n_u32
vcmpcsq_m_n_u8
vcmpcsq_m_u16
vcmpcsq_m_u32
vcmpcsq_m_u8
vcmpcsq
vcmpcsq_n_u16
vcmpcsq_n_u32
vcmpcsq_n_u8
vcmpcsq_u16
vcmpcsq_u32
vcmpcsq_u8
vcmpeqq
vcmpeqq_f16
vcmpeqq_f32
vcmpeqq_m
vcmpeqq_m_f16
vcmpeqq_m_f32
vcmpeqq_m_n_f16
vcmpeqq_m_n_f32
vcmpeqq_m_n_s16
vcmpeqq_m_n_s32
vcmpeqq_m_n_s8
vcmpeqq_m_n_u16
vcmpeqq_m_n_u32
vcmpeqq_m_n_u8
vcmpeqq_m_s16
vcmpeqq_m_s32
vcmpeqq_m_s8
vcmpeqq_m_u16
vcmpeqq_m_u32
vcmpeqq_m_u8
vcmpeqq_n_f16
vcmpeqq_n_f32
vcmpeqq_n_s16
vcmpeqq_n_s32
vcmpeqq_n_s8
vcmpeqq_n_u16
vcmpeqq_n_u32
vcmpeqq_n_u8
vcmpeqq_s16
vcmpeqq_s32
vcmpeqq_s8
vcmpeqq_u16
vcmpeqq_u32
vcmpeqq_u8
vcmpgeq
vcmpgeq_f16
vcmpgeq_f32
vcmpgeq_m
vcmpgeq_m_f16
vcmpgeq_m_f32
vcmpgeq_m_n_f16
vcmpgeq_m_n_f32
vcmpgeq_m_n_s16
vcmpgeq_m_n_s32
vcmpgeq_m_n_s8
vcmpgeq_m_s16
vcmpgeq_m_s32
vcmpgeq_m_s8
vcmpgeq_n_f16
vcmpgeq_n_f32
vcmpgeq_n_s16
vcmpgeq_n_s32
vcmpgeq_n_s8
vcmpgeq_s16
vcmpgeq_s32
vcmpgeq_s8
vcmpgtq
vcmpgtq_f16
vcmpgtq_f32
vcmpgtq_m
vcmpgtq_m_f16
vcmpgtq_m_f32
vcmpgtq_m_n_f16
vcmpgtq_m_n_f32
vcmpgtq_m_n_s16
vcmpgtq_m_n_s32
vcmpgtq_m_n_s8
vcmpgtq_m_s16
vcmpgtq_m_s32
vcmpgtq_m_s8
vcmpgtq_n_f16
vcmpgtq_n_f32
vcmpgtq_n_s16
vcmpgtq_n_s32
vcmpgtq_n_s8
vcmpgtq_s16
vcmpgtq_s32
vcmpgtq_s8
vcmphiq_m
vcmphiq_m_n_u16
vcmphiq_m_n_u32
vcmphiq_m_n_u8
vcmphiq_m_u16
vcmphiq_m_u32
vcmphiq_m_u8
vcmphiq
vcmphiq_n_u16
vcmphiq_n_u32
vcmphiq_n_u8
vcmphiq_u16
vcmphiq_u32
vcmphiq_u8
vcmpleq
vcmpleq_f16
vcmpleq_f32
vcmpleq_m
vcmpleq_m_f16
vcmpleq_m_f32
vcmpleq_m_n_f16
vcmpleq_m_n_f32
vcmpleq_m_n_s16
vcmpleq_m_n_s32
vcmpleq_m_n_s8
vcmpleq_m_s16
vcmpleq_m_s32
vcmpleq_m_s8
vcmpleq_n_f16
vcmpleq_n_f32
vcmpleq_n_s16
vcmpleq_n_s32
vcmpleq_n_s8
vcmpleq_s16
vcmpleq_s32
vcmpleq_s8
vcmpltq
vcmpltq_f16
vcmpltq_f32
vcmpltq_m
vcmpltq_m_f16
vcmpltq_m_f32
vcmpltq_m_n_f16
vcmpltq_m_n_f32
vcmpltq_m_n_s16
vcmpltq_m_n_s32
vcmpltq_m_n_s8
vcmpltq_m_s16
vcmpltq_m_s32
vcmpltq_m_s8
vcmpltq_n_f16
vcmpltq_n_f32
vcmpltq_n_s16
vcmpltq_n_s32
vcmpltq_n_s8
vcmpltq_s16
vcmpltq_s32
vcmpltq_s8
vcmpneq
vcmpneq_f16
vcmpneq_f32
vcmpneq_m
vcmpneq_m_f16
vcmpneq_m_f32
vcmpneq_m_n_f16
vcmpneq_m_n_f32
vcmpneq_m_n_s16
vcmpneq_m_n_s32
vcmpneq_m_n_s8
vcmpneq_m_n_u16
vcmpneq_m_n_u32
vcmpneq_m_n_u8
vcmpneq_m_s16
vcmpneq_m_s32
vcmpneq_m_s8
vcmpneq_m_u16
vcmpneq_m_u32
vcmpneq_m_u8
vcmpneq_n_f16
vcmpneq_n_f32
vcmpneq_n_s16
vcmpneq_n_s32
vcmpneq_n_s8
vcmpneq_n_u16
vcmpneq_n_u32
vcmpneq_n_u8
vcmpneq_s16
vcmpneq_s32
vcmpneq_s8
vcmpneq_u16
vcmpneq_u32
vcmpneq_u8
vcmulq
vcmulq_f16
vcmulq_f32
vcmulq_m
vcmulq_m_f16
vcmulq_m_f32
vcmulq_rot180
vcmulq_rot180_f16
vcmulq_rot180_f32
vcmulq_rot180_m
vcmulq_rot180_m_f16
vcmulq_rot180_m_f32
vcmulq_rot180_x
vcmulq_rot180_x_f16
vcmulq_rot180_x_f32
vcmulq_rot270
vcmulq_rot270_f16
vcmulq_rot270_f32
vcmulq_rot270_m
vcmulq_rot270_m_f16
vcmulq_rot270_m_f32
vcmulq_rot270_x
vcmulq_rot270_x_f16
vcmulq_rot270_x_f32
vcmulq_rot90
vcmulq_rot90_f16
vcmulq_rot90_f32
vcmulq_rot90_m
vcmulq_rot90_m_f16
vcmulq_rot90_m_f32
vcmulq_rot90_x
vcmulq_rot90_x_f16
vcmulq_rot90_x_f32
vcmulq_x
vcmulq_x_f16
vcmulq_x_f32
vcreateq_f16
vcreateq_f32
vcreateq_s16
vcreateq_s32
vcreateq_s64
vcreateq_s8
vcreateq_u16
vcreateq_u32
vcreateq_u64
vcreateq_u8
vctp16q
vctp16q_m
vctp32q
vctp32q_m
vctp64q
vctp64q_m
vctp8q
vctp8q_m
vcvtaq_m
vcvtaq_m_s16_f16
vcvtaq_m_s32_f32
vcvtaq_m_u16_f16
vcvtaq_m_u32_f32
vcvtaq_s16_f16
vcvtaq_s32_f32
vcvtaq_u16_f16
vcvtaq_u32_f32
vcvtaq_x_s16_f16
vcvtaq_x_s32_f32
vcvtaq_x_u16_f16
vcvtaq_x_u32_f32
vcvtbq_f16_f32
vcvtbq_f32_f16
vcvtbq_m_f16_f32
vcvtbq_m_f32_f16
vcvtbq_x_f32_f16
vcvtmq_m
vcvtmq_m_s16_f16
vcvtmq_m_s32_f32
vcvtmq_m_u16_f16
vcvtmq_m_u32_f32
vcvtmq_s16_f16
vcvtmq_s32_f32
vcvtmq_u16_f16
vcvtmq_u32_f32
vcvtmq_x_s16_f16
vcvtmq_x_s32_f32
vcvtmq_x_u16_f16
vcvtmq_x_u32_f32
vcvtnq_m
vcvtnq_m_s16_f16
vcvtnq_m_s32_f32
vcvtnq_m_u16_f16
vcvtnq_m_u32_f32
vcvtnq_s16_f16
vcvtnq_s32_f32
vcvtnq_u16_f16
vcvtnq_u32_f32
vcvtnq_x_s16_f16
vcvtnq_x_s32_f32
vcvtnq_x_u16_f16
vcvtnq_x_u32_f32
vcvtpq_m
vcvtpq_m_s16_f16
vcvtpq_m_s32_f32
vcvtpq_m_u16_f16
vcvtpq_m_u32_f32
vcvtpq_s16_f16
vcvtpq_s32_f32
vcvtpq_u16_f16
vcvtpq_u32_f32
vcvtpq_x_s16_f16
vcvtpq_x_s32_f32
vcvtpq_x_u16_f16
vcvtpq_x_u32_f32
vcvtq
vcvtq_f16_s16
vcvtq_f16_u16
vcvtq_f32_s32
vcvtq_f32_u32
vcvtq_m
vcvtq_m_f16_s16
vcvtq_m_f16_u16
vcvtq_m_f32_s32
vcvtq_m_f32_u32
vcvtq_m_n
vcvtq_m_n_f16_s16
vcvtq_m_n_f16_u16
vcvtq_m_n_f32_s32
vcvtq_m_n_f32_u32
vcvtq_m_n_s16_f16
vcvtq_m_n_s32_f32
vcvtq_m_n_u16_f16
vcvtq_m_n_u32_f32
vcvtq_m_s16_f16
vcvtq_m_s32_f32
vcvtq_m_u16_f16
vcvtq_m_u32_f32
vcvtq_n
vcvtq_n_f16_s16
vcvtq_n_f16_u16
vcvtq_n_f32_s32
vcvtq_n_f32_u32
vcvtq_n_s16_f16
vcvtq_n_s32_f32
vcvtq_n_u16_f16
vcvtq_n_u32_f32
vcvtq_s16_f16
vcvtq_s32_f32
vcvtq_u16_f16
vcvtq_u32_f32
vcvtq_x
vcvtq_x_f16_s16
vcvtq_x_f16_u16
vcvtq_x_f32_s32
vcvtq_x_f32_u32
vcvtq_x_n
vcvtq_x_n_f16_s16
vcvtq_x_n_f16_u16
vcvtq_x_n_f32_s32
vcvtq_x_n_f32_u32
vcvtq_x_n_s16_f16
vcvtq_x_n_s32_f32
vcvtq_x_n_u16_f16
vcvtq_x_n_u32_f32
vcvtq_x_s16_f16
vcvtq_x_s32_f32
vcvtq_x_u16_f16
vcvtq_x_u32_f32
vcvttq_f16_f32
vcvttq_f32_f16
vcvttq_m_f16_f32
vcvttq_m_f32_f16
vcvttq_x_f32_f16
vddupq_m
vddupq_m_n_u16
vddupq_m_n_u32
vddupq_m_n_u8
vddupq_m_wb_u16
vddupq_m_wb_u32
vddupq_m_wb_u8
vddupq_u16
vddupq_n_u16
vddupq_u32
vddupq_n_u32
vddupq_u8
vddupq_n_u8
vddupq_wb_u16
vddupq_wb_u32
vddupq_wb_u8
vddupq_x_u16
vddupq_x_n_u16
vddupq_x_u32
vddupq_x_n_u32
vddupq_x_u8
vddupq_x_n_u8
vddupq_x_wb_u16
vddupq_x_wb_u32
vddupq_x_wb_u8
vdupq_m
vdupq_m_n_f16
vdupq_m_n_f32
vdupq_m_n_s16
vdupq_m_n_s32
vdupq_m_n_s8
vdupq_m_n_u16
vdupq_m_n_u32
vdupq_m_n_u8
vdupq_n_f16
vdupq_n_f32
vdupq_n_s16
vdupq_n_s32
vdupq_n_s8
vdupq_n_u16
vdupq_n_u32
vdupq_n_u8
vdupq_x_n_f16
vdupq_x_n_f32
vdupq_x_n_s16
vdupq_x_n_s32
vdupq_x_n_s8
vdupq_x_n_u16
vdupq_x_n_u32
vdupq_x_n_u8
vdwdupq_m
vdwdupq_m_n_u16
vdwdupq_m_n_u32
vdwdupq_m_n_u8
vdwdupq_m_wb_u16
vdwdupq_m_wb_u32
vdwdupq_m_wb_u8
vdwdupq_u16
vdwdupq_n_u16
vdwdupq_u32
vdwdupq_n_u32
vdwdupq_u8
vdwdupq_n_u8
vdwdupq_wb_u16
vdwdupq_wb_u32
vdwdupq_wb_u8
vdwdupq_x_u16
vdwdupq_x_n_u16
vdwdupq_x_u32
vdwdupq_x_n_u32
vdwdupq_x_u8
vdwdupq_x_n_u8
vdwdupq_x_wb_u16
vdwdupq_x_wb_u32
vdwdupq_x_wb_u8
veorq
veorq_f16
veorq_f32
veorq_m
veorq_m_f16
veorq_m_f32
veorq_m_s16
veorq_m_s32
veorq_m_s8
veorq_m_u16
veorq_m_u32
veorq_m_u8
veorq_s16
veorq_s32
veorq_s8
veorq_u16
veorq_u32
veorq_u8
veorq_x
veorq_x_f16
veorq_x_f32
veorq_x_s16
veorq_x_s32
veorq_x_s8
veorq_x_u16
veorq_x_u32
veorq_x_u8
vfmaq
vfmaq_f16
vfmaq_f32
vfmaq_m
vfmaq_m_f16
vfmaq_m_f32
vfmaq_m_n_f16
vfmaq_m_n_f32
vfmaq_n_f16
vfmaq_n_f32
vfmasq_m
vfmasq_m_n_f16
vfmasq_m_n_f32
vfmasq
vfmasq_n_f16
vfmasq_n_f32
vfmsq
vfmsq_f16
vfmsq_f32
vfmsq_m
vfmsq_m_f16
vfmsq_m_f32
vgetq_lane
vgetq_lane_f16
vgetq_lane_f32
vgetq_lane_s16
vgetq_lane_s32
vgetq_lane_s64
vgetq_lane_s8
vgetq_lane_u16
vgetq_lane_u32
vgetq_lane_u64
vgetq_lane_u8
vhaddq_m
vhaddq_m_n_s16
vhaddq_m_n_s32
vhaddq_m_n_s8
vhaddq_m_n_u16
vhaddq_m_n_u32
vhaddq_m_n_u8
vhaddq_m_s16
vhaddq_m_s32
vhaddq_m_s8
vhaddq_m_u16
vhaddq_m_u32
vhaddq_m_u8
vhaddq
vhaddq_n_s16
vhaddq_n_s32
vhaddq_n_s8
vhaddq_n_u16
vhaddq_n_u32
vhaddq_n_u8
vhaddq_s16
vhaddq_s32
vhaddq_s8
vhaddq_u16
vhaddq_u32
vhaddq_u8
vhaddq_x
vhaddq_x_n_s16
vhaddq_x_n_s32
vhaddq_x_n_s8
vhaddq_x_n_u16
vhaddq_x_n_u32
vhaddq_x_n_u8
vhaddq_x_s16
vhaddq_x_s32
vhaddq_x_s8
vhaddq_x_u16
vhaddq_x_u32
vhaddq_x_u8
vhcaddq_rot270_m
vhcaddq_rot270_m_s16
vhcaddq_rot270_m_s32
vhcaddq_rot270_m_s8
vhcaddq_rot270
vhcaddq_rot270_s16
vhcaddq_rot270_s32
vhcaddq_rot270_s8
vhcaddq_rot270_x
vhcaddq_rot270_x_s16
vhcaddq_rot270_x_s32
vhcaddq_rot270_x_s8
vhcaddq_rot90_m
vhcaddq_rot90_m_s16
vhcaddq_rot90_m_s32
vhcaddq_rot90_m_s8
vhcaddq_rot90
vhcaddq_rot90_s16
vhcaddq_rot90_s32
vhcaddq_rot90_s8
vhcaddq_rot90_x
vhcaddq_rot90_x_s16
vhcaddq_rot90_x_s32
vhcaddq_rot90_x_s8
vhsubq_m
vhsubq_m_n_s16
vhsubq_m_n_s32
vhsubq_m_n_s8
vhsubq_m_n_u16
vhsubq_m_n_u32
vhsubq_m_n_u8
vhsubq_m_s16
vhsubq_m_s32
vhsubq_m_s8
vhsubq_m_u16
vhsubq_m_u32
vhsubq_m_u8
vhsubq
vhsubq_n_s16
vhsubq_n_s32
vhsubq_n_s8
vhsubq_n_u16
vhsubq_n_u32
vhsubq_n_u8
vhsubq_s16
vhsubq_s32
vhsubq_s8
vhsubq_u16
vhsubq_u32
vhsubq_u8
vhsubq_x
vhsubq_x_n_s16
vhsubq_x_n_s32
vhsubq_x_n_s8
vhsubq_x_n_u16
vhsubq_x_n_u32
vhsubq_x_n_u8
vhsubq_x_s16
vhsubq_x_s32
vhsubq_x_s8
vhsubq_x_u16
vhsubq_x_u32
vhsubq_x_u8
vidupq_m
vidupq_m_n_u16
vidupq_m_n_u32
vidupq_m_n_u8
vidupq_m_wb_u16
vidupq_m_wb_u32
vidupq_m_wb_u8
vidupq_u16
vidupq_n_u16
vidupq_u32
vidupq_n_u32
vidupq_u8
vidupq_n_u8
vidupq_wb_u16
vidupq_wb_u32
vidupq_wb_u8
vidupq_x_u16
vidupq_x_n_u16
vidupq_x_u32
vidupq_x_n_u32
vidupq_x_u8
vidupq_x_n_u8
vidupq_x_wb_u16
vidupq_x_wb_u32
vidupq_x_wb_u8
viwdupq_m
viwdupq_m_n_u16
viwdupq_m_n_u32
viwdupq_m_n_u8
viwdupq_m_wb_u16
viwdupq_m_wb_u32
viwdupq_m_wb_u8
viwdupq_u16
viwdupq_n_u16
viwdupq_u32
viwdupq_n_u32
viwdupq_u8
viwdupq_n_u8
viwdupq_wb_u16
viwdupq_wb_u32
viwdupq_wb_u8
viwdupq_x_u16
viwdupq_x_n_u16
viwdupq_x_u32
viwdupq_x_n_u32
viwdupq_x_u8
viwdupq_x_n_u8
viwdupq_x_wb_u16
viwdupq_x_wb_u32
viwdupq_x_wb_u8
vld1q
vld1q_f16
vld1q_f32
vld1q_s16
vld1q_s32
vld1q_s8
vld1q_u16
vld1q_u32
vld1q_u8
vld1q_z
vld1q_z_f16
vld1q_z_f32
vld1q_z_s16
vld1q_z_s32
vld1q_z_s8
vld1q_z_u16
vld1q_z_u32
vld1q_z_u8
vld2q
vld2q_f16
vld2q_f32
vld2q_s16
vld2q_s32
vld2q_s8
vld2q_u16
vld2q_u32
vld2q_u8
vld4q
vld4q_f16
vld4q_f32
vld4q_s16
vld4q_s32
vld4q_s8
vld4q_u16
vld4q_u32
vld4q_u8
vldrbq_gather_offset
vldrbq_gather_offset_s16
vldrbq_gather_offset_s32
vldrbq_gather_offset_s8
vldrbq_gather_offset_u16
vldrbq_gather_offset_u32
vldrbq_gather_offset_u8
vldrbq_gather_offset_z
vldrbq_gather_offset_z_s16
vldrbq_gather_offset_z_s32
vldrbq_gather_offset_z_s8
vldrbq_gather_offset_z_u16
vldrbq_gather_offset_z_u32
vldrbq_gather_offset_z_u8
vldrbq_s16
vldrbq_s32
vldrbq_s8
vldrbq_u16
vldrbq_u32
vldrbq_u8
vldrbq_z_s16
vldrbq_z_s32
vldrbq_z_s8
vldrbq_z_u16
vldrbq_z_u32
vldrbq_z_u8
vldrdq_gather_base_s64
vldrdq_gather_base_u64
vldrdq_gather_base_wb_s64
vldrdq_gather_base_wb_u64
vldrdq_gather_base_wb_z_s64
vldrdq_gather_base_wb_z_u64
vldrdq_gather_base_z_s64
vldrdq_gather_base_z_u64
vldrdq_gather_offset
vldrdq_gather_offset_s64
vldrdq_gather_offset_u64
vldrdq_gather_offset_z
vldrdq_gather_offset_z_s64
vldrdq_gather_offset_z_u64
vldrdq_gather_shifted_offset
vldrdq_gather_shifted_offset_s64
vldrdq_gather_shifted_offset_u64
vldrdq_gather_shifted_offset_z
vldrdq_gather_shifted_offset_z_s64
vldrdq_gather_shifted_offset_z_u64
vldrhq_f16
vldrhq_gather_offset
vldrhq_gather_offset_f16
vldrhq_gather_offset_s16
vldrhq_gather_offset_s32
vldrhq_gather_offset_u16
vldrhq_gather_offset_u32
vldrhq_gather_offset_z
vldrhq_gather_offset_z_f16
vldrhq_gather_offset_z_s16
vldrhq_gather_offset_z_s32
vldrhq_gather_offset_z_u16
vldrhq_gather_offset_z_u32
vldrhq_gather_shifted_offset
vldrhq_gather_shifted_offset_f16
vldrhq_gather_shifted_offset_s16
vldrhq_gather_shifted_offset_s32
vldrhq_gather_shifted_offset_u16
vldrhq_gather_shifted_offset_u32
vldrhq_gather_shifted_offset_z
vldrhq_gather_shifted_offset_z_f16
vldrhq_gather_shifted_offset_z_s16
vldrhq_gather_shifted_offset_z_s32
vldrhq_gather_shifted_offset_z_u16
vldrhq_gather_shifted_offset_z_u32
vldrhq_s16
vldrhq_s32
vldrhq_u16
vldrhq_u32
vldrhq_z_f16
vldrhq_z_s16
vldrhq_z_s32
vldrhq_z_u16
vldrhq_z_u32
vldrwq_f32
vldrwq_gather_base_f32
vldrwq_gather_base_s32
vldrwq_gather_base_u32
vldrwq_gather_base_wb_f32
vldrwq_gather_base_wb_s32
vldrwq_gather_base_wb_u32
vldrwq_gather_base_wb_z_f32
vldrwq_gather_base_wb_z_s32
vldrwq_gather_base_wb_z_u32
vldrwq_gather_base_z_f32
vldrwq_gather_base_z_s32
vldrwq_gather_base_z_u32
vldrwq_gather_offset
vldrwq_gather_offset_f32
vldrwq_gather_offset_s32
vldrwq_gather_offset_u32
vldrwq_gather_offset_z
vldrwq_gather_offset_z_f32
vldrwq_gather_offset_z_s32
vldrwq_gather_offset_z_u32
vldrwq_gather_shifted_offset
vldrwq_gather_shifted_offset_f32
vldrwq_gather_shifted_offset_s32
vldrwq_gather_shifted_offset_u32
vldrwq_gather_shifted_offset_z
vldrwq_gather_shifted_offset_z_f32
vldrwq_gather_shifted_offset_z_s32
vldrwq_gather_shifted_offset_z_u32
vldrwq_s32
vldrwq_u32
vldrwq_z_f32
vldrwq_z_s32
vldrwq_z_u32
vmaxaq_m
vmaxaq_m_s16
vmaxaq_m_s32
vmaxaq_m_s8
vmaxaq
vmaxaq_s16
vmaxaq_s32
vmaxaq_s8
vmaxavq_p
vmaxavq_p_s16
vmaxavq_p_s32
vmaxavq_p_s8
vmaxavq
vmaxavq_s16
vmaxavq_s32
vmaxavq_s8
vmaxnmaq
vmaxnmaq_f16
vmaxnmaq_f32
vmaxnmaq_m
vmaxnmaq_m_f16
vmaxnmaq_m_f32
vmaxnmavq
vmaxnmavq_f16
vmaxnmavq_f32
vmaxnmavq_p
vmaxnmavq_p_f16
vmaxnmavq_p_f32
vmaxnmq
vmaxnmq_f16
vmaxnmq_f32
vmaxnmq_m
vmaxnmq_m_f16
vmaxnmq_m_f32
vmaxnmq_x
vmaxnmq_x_f16
vmaxnmq_x_f32
vmaxnmvq
vmaxnmvq_f16
vmaxnmvq_f32
vmaxnmvq_p
vmaxnmvq_p_f16
vmaxnmvq_p_f32
vmaxq_m
vmaxq_m_s16
vmaxq_m_s32
vmaxq_m_s8
vmaxq_m_u16
vmaxq_m_u32
vmaxq_m_u8
vmaxq
vmaxq_s16
vmaxq_s32
vmaxq_s8
vmaxq_u16
vmaxq_u32
vmaxq_u8
vmaxq_x
vmaxq_x_s16
vmaxq_x_s32
vmaxq_x_s8
vmaxq_x_u16
vmaxq_x_u32
vmaxq_x_u8
vmaxvq_p
vmaxvq_p_s16
vmaxvq_p_s32
vmaxvq_p_s8
vmaxvq_p_u16
vmaxvq_p_u32
vmaxvq_p_u8
vmaxvq
vmaxvq_s16
vmaxvq_s32
vmaxvq_s8
vmaxvq_u16
vmaxvq_u32
vmaxvq_u8
vminaq_m
vminaq_m_s16
vminaq_m_s32
vminaq_m_s8
vminaq
vminaq_s16
vminaq_s32
vminaq_s8
vminavq_p
vminavq_p_s16
vminavq_p_s32
vminavq_p_s8
vminavq
vminavq_s16
vminavq_s32
vminavq_s8
vminnmaq
vminnmaq_f16
vminnmaq_f32
vminnmaq_m
vminnmaq_m_f16
vminnmaq_m_f32
vminnmavq
vminnmavq_f16
vminnmavq_f32
vminnmavq_p
vminnmavq_p_f16
vminnmavq_p_f32
vminnmq
vminnmq_f16
vminnmq_f32
vminnmq_m
vminnmq_m_f16
vminnmq_m_f32
vminnmq_x
vminnmq_x_f16
vminnmq_x_f32
vminnmvq
vminnmvq_f16
vminnmvq_f32
vminnmvq_p
vminnmvq_p_f16
vminnmvq_p_f32
vminq_m
vminq_m_s16
vminq_m_s32
vminq_m_s8
vminq_m_u16
vminq_m_u32
vminq_m_u8
vminq
vminq_s16
vminq_s32
vminq_s8
vminq_u16
vminq_u32
vminq_u8
vminq_x
vminq_x_s16
vminq_x_s32
vminq_x_s8
vminq_x_u16
vminq_x_u32
vminq_x_u8
vminvq_p
vminvq_p_s16
vminvq_p_s32
vminvq_p_s8
vminvq_p_u16
vminvq_p_u32
vminvq_p_u8
vminvq
vminvq_s16
vminvq_s32
vminvq_s8
vminvq_u16
vminvq_u32
vminvq_u8
vmladavaq_p
vmladavaq_p_s16
vmladavaq_p_s32
vmladavaq_p_s8
vmladavaq_p_u16
vmladavaq_p_u32
vmladavaq_p_u8
vmladavaq
vmladavaq_s16
vmladavaq_s32
vmladavaq_s8
vmladavaq_u16
vmladavaq_u32
vmladavaq_u8
vmladavaxq_p
vmladavaxq_p_s16
vmladavaxq_p_s32
vmladavaxq_p_s8
vmladavaxq
vmladavaxq_s16
vmladavaxq_s32
vmladavaxq_s8
vmladavq_p
vmladavq_p_s16
vmladavq_p_s32
vmladavq_p_s8
vmladavq_p_u16
vmladavq_p_u32
vmladavq_p_u8
vmladavq
vmladavq_s16
vmladavq_s32
vmladavq_s8
vmladavq_u16
vmladavq_u32
vmladavq_u8
vmladavxq_p
vmladavxq_p_s16
vmladavxq_p_s32
vmladavxq_p_s8
vmladavxq
vmladavxq_s16
vmladavxq_s32
vmladavxq_s8
vmlaldavaq_p
vmlaldavaq_p_s16
vmlaldavaq_p_s32
vmlaldavaq_p_u16
vmlaldavaq_p_u32
vmlaldavaq
vmlaldavaq_s16
vmlaldavaq_s32
vmlaldavaq_u16
vmlaldavaq_u32
vmlaldavaxq_p
vmlaldavaxq_p_s16
vmlaldavaxq_p_s32
vmlaldavaxq
vmlaldavaxq_s16
vmlaldavaxq_s32
vmlaldavq_p
vmlaldavq_p_s16
vmlaldavq_p_s32
vmlaldavq_p_u16
vmlaldavq_p_u32
vmlaldavq
vmlaldavq_s16
vmlaldavq_s32
vmlaldavq_u16
vmlaldavq_u32
vmlaldavxq_p
vmlaldavxq_p_s16
vmlaldavxq_p_s32
vmlaldavxq
vmlaldavxq_s16
vmlaldavxq_s32
vmlaq_m
vmlaq_m_n_s16
vmlaq_m_n_s32
vmlaq_m_n_s8
vmlaq_m_n_u16
vmlaq_m_n_u32
vmlaq_m_n_u8
vmlaq
vmlaq_n_s16
vmlaq_n_s32
vmlaq_n_s8
vmlaq_n_u16
vmlaq_n_u32
vmlaq_n_u8
vmlasq_m
vmlasq_m_n_s16
vmlasq_m_n_s32
vmlasq_m_n_s8
vmlasq_m_n_u16
vmlasq_m_n_u32
vmlasq_m_n_u8
vmlasq
vmlasq_n_s16
vmlasq_n_s32
vmlasq_n_s8
vmlasq_n_u16
vmlasq_n_u32
vmlasq_n_u8
vmlsdavaq_p
vmlsdavaq_p_s16
vmlsdavaq_p_s32
vmlsdavaq_p_s8
vmlsdavaq
vmlsdavaq_s16
vmlsdavaq_s32
vmlsdavaq_s8
vmlsdavaxq_p
vmlsdavaxq_p_s16
vmlsdavaxq_p_s32
vmlsdavaxq_p_s8
vmlsdavaxq
vmlsdavaxq_s16
vmlsdavaxq_s32
vmlsdavaxq_s8
vmlsdavq_p
vmlsdavq_p_s16
vmlsdavq_p_s32
vmlsdavq_p_s8
vmlsdavq
vmlsdavq_s16
vmlsdavq_s32
vmlsdavq_s8
vmlsdavxq_p
vmlsdavxq_p_s16
vmlsdavxq_p_s32
vmlsdavxq_p_s8
vmlsdavxq
vmlsdavxq_s16
vmlsdavxq_s32
vmlsdavxq_s8
vmlsldavaq_p
vmlsldavaq_p_s16
vmlsldavaq_p_s32
vmlsldavaq
vmlsldavaq_s16
vmlsldavaq_s32
vmlsldavaxq_p
vmlsldavaxq_p_s16
vmlsldavaxq_p_s32
vmlsldavaxq
vmlsldavaxq_s16
vmlsldavaxq_s32
vmlsldavq_p
vmlsldavq_p_s16
vmlsldavq_p_s32
vmlsldavq
vmlsldavq_s16
vmlsldavq_s32
vmlsldavxq_p
vmlsldavxq_p_s16
vmlsldavxq_p_s32
vmlsldavxq
vmlsldavxq_s16
vmlsldavxq_s32
vmovlbq_m
vmovlbq_m_s16
vmovlbq_m_s8
vmovlbq_m_u16
vmovlbq_m_u8
vmovlbq
vmovlbq_s16
vmovlbq_s8
vmovlbq_u16
vmovlbq_u8
vmovlbq_x
vmovlbq_x_s16
vmovlbq_x_s8
vmovlbq_x_u16
vmovlbq_x_u8
vmovltq_m
vmovltq_m_s16
vmovltq_m_s8
vmovltq_m_u16
vmovltq_m_u8
vmovltq
vmovltq_s16
vmovltq_s8
vmovltq_u16
vmovltq_u8
vmovltq_x
vmovltq_x_s16
vmovltq_x_s8
vmovltq_x_u16
vmovltq_x_u8
vmovnbq_m
vmovnbq_m_s16
vmovnbq_m_s32
vmovnbq_m_u16
vmovnbq_m_u32
vmovnbq
vmovnbq_s16
vmovnbq_s32
vmovnbq_u16
vmovnbq_u32
vmovntq_m
vmovntq_m_s16
vmovntq_m_s32
vmovntq_m_u16
vmovntq_m_u32
vmovntq
vmovntq_s16
vmovntq_s32
vmovntq_u16
vmovntq_u32
vmulhq_m
vmulhq_m_s16
vmulhq_m_s32
vmulhq_m_s8
vmulhq_m_u16
vmulhq_m_u32
vmulhq_m_u8
vmulhq
vmulhq_s16
vmulhq_s32
vmulhq_s8
vmulhq_u16
vmulhq_u32
vmulhq_u8
vmulhq_x
vmulhq_x_s16
vmulhq_x_s32
vmulhq_x_s8
vmulhq_x_u16
vmulhq_x_u32
vmulhq_x_u8
vmullbq_int_m
vmullbq_int_m_s16
vmullbq_int_m_s32
vmullbq_int_m_s8
vmullbq_int_m_u16
vmullbq_int_m_u32
vmullbq_int_m_u8
vmullbq_int
vmullbq_int_s16
vmullbq_int_s32
vmullbq_int_s8
vmullbq_int_u16
vmullbq_int_u32
vmullbq_int_u8
vmullbq_int_x
vmullbq_int_x_s16
vmullbq_int_x_s32
vmullbq_int_x_s8
vmullbq_int_x_u16
vmullbq_int_x_u32
vmullbq_int_x_u8
vmullbq_poly_m
vmullbq_poly_m_p16
vmullbq_poly_m_p8
vmullbq_poly
vmullbq_poly_p16
vmullbq_poly_p8
vmullbq_poly_x
vmullbq_poly_x_p16
vmullbq_poly_x_p8
vmulltq_int_m
vmulltq_int_m_s16
vmulltq_int_m_s32
vmulltq_int_m_s8
vmulltq_int_m_u16
vmulltq_int_m_u32
vmulltq_int_m_u8
vmulltq_int
vmulltq_int_s16
vmulltq_int_s32
vmulltq_int_s8
vmulltq_int_u16
vmulltq_int_u32
vmulltq_int_u8
vmulltq_int_x
vmulltq_int_x_s16
vmulltq_int_x_s32
vmulltq_int_x_s8
vmulltq_int_x_u16
vmulltq_int_x_u32
vmulltq_int_x_u8
vmulltq_poly_m
vmulltq_poly_m_p16
vmulltq_poly_m_p8
vmulltq_poly
vmulltq_poly_p16
vmulltq_poly_p8
vmulltq_poly_x
vmulltq_poly_x_p16
vmulltq_poly_x_p8
vmulq
vmulq_f16
vmulq_f32
vmulq_m
vmulq_m_f16
vmulq_m_f32
vmulq_m_n_f16
vmulq_m_n_f32
vmulq_m_n_s16
vmulq_m_n_s32
vmulq_m_n_s8
vmulq_m_n_u16
vmulq_m_n_u32
vmulq_m_n_u8
vmulq_m_s16
vmulq_m_s32
vmulq_m_s8
vmulq_m_u16
vmulq_m_u32
vmulq_m_u8
vmulq_n_f16
vmulq_n_f32
vmulq_n_s16
vmulq_n_s32
vmulq_n_s8
vmulq_n_u16
vmulq_n_u32
vmulq_n_u8
vmulq_s16
vmulq_s32
vmulq_s8
vmulq_u16
vmulq_u32
vmulq_u8
vmulq_x
vmulq_x_f16
vmulq_x_f32
vmulq_x_n_f16
vmulq_x_n_f32
vmulq_x_n_s16
vmulq_x_n_s32
vmulq_x_n_s8
vmulq_x_n_u16
vmulq_x_n_u32
vmulq_x_n_u8
vmulq_x_s16
vmulq_x_s32
vmulq_x_s8
vmulq_x_u16
vmulq_x_u32
vmulq_x_u8
vmvnq_m
vmvnq_m_n_s16
vmvnq_m_n_s32
vmvnq_m_n_u16
vmvnq_m_n_u32
vmvnq_m_s16
vmvnq_m_s32
vmvnq_m_s8
vmvnq_m_u16
vmvnq_m_u32
vmvnq_m_u8
vmvnq_n_s16
vmvnq_n_s32
vmvnq_n_u16
vmvnq_n_u32
vmvnq
vmvnq_s16
vmvnq_s32
vmvnq_s8
vmvnq_u16
vmvnq_u32
vmvnq_u8
vmvnq_x_n_s16
vmvnq_x_n_s32
vmvnq_x_n_u16
vmvnq_x_n_u32
vmvnq_x
vmvnq_x_s16
vmvnq_x_s32
vmvnq_x_s8
vmvnq_x_u16
vmvnq_x_u32
vmvnq_x_u8
vnegq
vnegq_f16
vnegq_f32
vnegq_m
vnegq_m_f16
vnegq_m_f32
vnegq_m_s16
vnegq_m_s32
vnegq_m_s8
vnegq_s16
vnegq_s32
vnegq_s8
vnegq_x
vnegq_x_f16
vnegq_x_f32
vnegq_x_s16
vnegq_x_s32
vnegq_x_s8
vornq
vornq_f16
vornq_f32
vornq_m
vornq_m_f16
vornq_m_f32
vornq_m_s16
vornq_m_s32
vornq_m_s8
vornq_m_u16
vornq_m_u32
vornq_m_u8
vornq_s16
vornq_s32
vornq_s8
vornq_u16
vornq_u32
vornq_u8
vornq_x
vornq_x_f16
vornq_x_f32
vornq_x_s16
vornq_x_s32
vornq_x_s8
vornq_x_u16
vornq_x_u32
vornq_x_u8
vorrq
vorrq_f16
vorrq_f32
vorrq_m
vorrq_m_f16
vorrq_m_f32
vorrq_m_n
vorrq_m_n_s16
vorrq_m_n_s32
vorrq_m_n_u16
vorrq_m_n_u32
vorrq_m_s16
vorrq_m_s32
vorrq_m_s8
vorrq_m_u16
vorrq_m_u32
vorrq_m_u8
vorrq_n_s16
vorrq_n_s32
vorrq_n_u16
vorrq_n_u32
vorrq_s16
vorrq_s32
vorrq_s8
vorrq_u16
vorrq_u32
vorrq_u8
vorrq_x
vorrq_x_f16
vorrq_x_f32
vorrq_x_s16
vorrq_x_s32
vorrq_x_s8
vorrq_x_u16
vorrq_x_u32
vorrq_x_u8
vpnot
vpselq
vpselq_f16
vpselq_f32
vpselq_s16
vpselq_s32
vpselq_s64
vpselq_s8
vpselq_u16
vpselq_u32
vpselq_u64
vpselq_u8
vqabsq_m
vqabsq_m_s16
vqabsq_m_s32
vqabsq_m_s8
vqabsq
vqabsq_s16
vqabsq_s32
vqabsq_s8
vqaddq_m
vqaddq_m_n_s16
vqaddq_m_n_s32
vqaddq_m_n_s8
vqaddq_m_n_u16
vqaddq_m_n_u32
vqaddq_m_n_u8
vqaddq_m_s16
vqaddq_m_s32
vqaddq_m_s8
vqaddq_m_u16
vqaddq_m_u32
vqaddq_m_u8
vqaddq
vqaddq_n_s16
vqaddq_n_s32
vqaddq_n_s8
vqaddq_n_u16
vqaddq_n_u32
vqaddq_n_u8
vqaddq_s16
vqaddq_s32
vqaddq_s8
vqaddq_u16
vqaddq_u32
vqaddq_u8
vqdmladhq_m
vqdmladhq_m_s16
vqdmladhq_m_s32
vqdmladhq_m_s8
vqdmladhq
vqdmladhq_s16
vqdmladhq_s32
vqdmladhq_s8
vqdmladhxq_m
vqdmladhxq_m_s16
vqdmladhxq_m_s32
vqdmladhxq_m_s8
vqdmladhxq
vqdmladhxq_s16
vqdmladhxq_s32
vqdmladhxq_s8
vqdmlahq_m
vqdmlahq_m_n_s16
vqdmlahq_m_n_s32
vqdmlahq_m_n_s8
vqdmlahq
vqdmlahq_n_s16
vqdmlahq_n_s32
vqdmlahq_n_s8
vqdmlashq_m
vqdmlashq_m_n_s16
vqdmlashq_m_n_s32
vqdmlashq_m_n_s8
vqdmlashq
vqdmlashq_n_s16
vqdmlashq_n_s32
vqdmlashq_n_s8
vqdmlsdhq_m
vqdmlsdhq_m_s16
vqdmlsdhq_m_s32
vqdmlsdhq_m_s8
vqdmlsdhq
vqdmlsdhq_s16
vqdmlsdhq_s32
vqdmlsdhq_s8
vqdmlsdhxq_m
vqdmlsdhxq_m_s16
vqdmlsdhxq_m_s32
vqdmlsdhxq_m_s8
vqdmlsdhxq
vqdmlsdhxq_s16
vqdmlsdhxq_s32
vqdmlsdhxq_s8
vqdmulhq_m
vqdmulhq_m_n_s16
vqdmulhq_m_n_s32
vqdmulhq_m_n_s8
vqdmulhq_m_s16
vqdmulhq_m_s32
vqdmulhq_m_s8
vqdmulhq
vqdmulhq_n_s16
vqdmulhq_n_s32
vqdmulhq_n_s8
vqdmulhq_s16
vqdmulhq_s32
vqdmulhq_s8
vqdmullbq_m
vqdmullbq_m_n_s16
vqdmullbq_m_n_s32
vqdmullbq_m_s16
vqdmullbq_m_s32
vqdmullbq
vqdmullbq_n_s16
vqdmullbq_n_s32
vqdmullbq_s16
vqdmullbq_s32
vqdmulltq_m
vqdmulltq_m_n_s16
vqdmulltq_m_n_s32
vqdmulltq_m_s16
vqdmulltq_m_s32
vqdmulltq
vqdmulltq_n_s16
vqdmulltq_n_s32
vqdmulltq_s16
vqdmulltq_s32
vqmovnbq_m
vqmovnbq_m_s16
vqmovnbq_m_s32
vqmovnbq_m_u16
vqmovnbq_m_u32
vqmovnbq
vqmovnbq_s16
vqmovnbq_s32
vqmovnbq_u16
vqmovnbq_u32
vqmovntq_m
vqmovntq_m_s16
vqmovntq_m_s32
vqmovntq_m_u16
vqmovntq_m_u32
vqmovntq
vqmovntq_s16
vqmovntq_s32
vqmovntq_u16
vqmovntq_u32
vqmovunbq_m
vqmovunbq_m_s16
vqmovunbq_m_s32
vqmovunbq
vqmovunbq_s16
vqmovunbq_s32
vqmovuntq_m
vqmovuntq_m_s16
vqmovuntq_m_s32
vqmovuntq
vqmovuntq_s16
vqmovuntq_s32
vqnegq_m
vqnegq_m_s16
vqnegq_m_s32
vqnegq_m_s8
vqnegq
vqnegq_s16
vqnegq_s32
vqnegq_s8
vqrdmladhq_m
vqrdmladhq_m_s16
vqrdmladhq_m_s32
vqrdmladhq_m_s8
vqrdmladhq
vqrdmladhq_s16
vqrdmladhq_s32
vqrdmladhq_s8
vqrdmladhxq_m
vqrdmladhxq_m_s16
vqrdmladhxq_m_s32
vqrdmladhxq_m_s8
vqrdmladhxq
vqrdmladhxq_s16
vqrdmladhxq_s32
vqrdmladhxq_s8
vqrdmlahq_m
vqrdmlahq_m_n_s16
vqrdmlahq_m_n_s32
vqrdmlahq_m_n_s8
vqrdmlahq
vqrdmlahq_n_s16
vqrdmlahq_n_s32
vqrdmlahq_n_s8
vqrdmlashq_m
vqrdmlashq_m_n_s16
vqrdmlashq_m_n_s32
vqrdmlashq_m_n_s8
vqrdmlashq
vqrdmlashq_n_s16
vqrdmlashq_n_s32
vqrdmlashq_n_s8
vqrdmlsdhq_m
vqrdmlsdhq_m_s16
vqrdmlsdhq_m_s32
vqrdmlsdhq_m_s8
vqrdmlsdhq
vqrdmlsdhq_s16
vqrdmlsdhq_s32
vqrdmlsdhq_s8
vqrdmlsdhxq_m
vqrdmlsdhxq_m_s16
vqrdmlsdhxq_m_s32
vqrdmlsdhxq_m_s8
vqrdmlsdhxq
vqrdmlsdhxq_s16
vqrdmlsdhxq_s32
vqrdmlsdhxq_s8
vqrdmulhq_m
vqrdmulhq_m_n_s16
vqrdmulhq_m_n_s32
vqrdmulhq_m_n_s8
vqrdmulhq_m_s16
vqrdmulhq_m_s32
vqrdmulhq_m_s8
vqrdmulhq
vqrdmulhq_n_s16
vqrdmulhq_n_s32
vqrdmulhq_n_s8
vqrdmulhq_s16
vqrdmulhq_s32
vqrdmulhq_s8
vqrshlq_m_n
vqrshlq_m_n_s16
vqrshlq_m_n_s32
vqrshlq_m_n_s8
vqrshlq_m_n_u16
vqrshlq_m_n_u32
vqrshlq_m_n_u8
vqrshlq_m
vqrshlq_m_s16
vqrshlq_m_s32
vqrshlq_m_s8
vqrshlq_m_u16
vqrshlq_m_u32
vqrshlq_m_u8
vqrshlq
vqrshlq_n_s16
vqrshlq_n_s32
vqrshlq_n_s8
vqrshlq_n_u16
vqrshlq_n_u32
vqrshlq_n_u8
vqrshlq_s16
vqrshlq_s32
vqrshlq_s8
vqrshlq_u16
vqrshlq_u32
vqrshlq_u8
vqrshrnbq_m
vqrshrnbq_m_n_s16
vqrshrnbq_m_n_s32
vqrshrnbq_m_n_u16
vqrshrnbq_m_n_u32
vqrshrnbq
vqrshrnbq_n_s16
vqrshrnbq_n_s32
vqrshrnbq_n_u16
vqrshrnbq_n_u32
vqrshrntq_m
vqrshrntq_m_n_s16
vqrshrntq_m_n_s32
vqrshrntq_m_n_u16
vqrshrntq_m_n_u32
vqrshrntq
vqrshrntq_n_s16
vqrshrntq_n_s32
vqrshrntq_n_u16
vqrshrntq_n_u32
vqrshrunbq_m
vqrshrunbq_m_n_s16
vqrshrunbq_m_n_s32
vqrshrunbq
vqrshrunbq_n_s16
vqrshrunbq_n_s32
vqrshruntq_m
vqrshruntq_m_n_s16
vqrshruntq_m_n_s32
vqrshruntq
vqrshruntq_n_s16
vqrshruntq_n_s32
vqshlq_m_n
vqshlq_m_n_s16
vqshlq_m_n_s32
vqshlq_m_n_s8
vqshlq_m_n_u16
vqshlq_m_n_u32
vqshlq_m_n_u8
vqshlq_m_r
vqshlq_m_r_s16
vqshlq_m_r_s32
vqshlq_m_r_s8
vqshlq_m_r_u16
vqshlq_m_r_u32
vqshlq_m_r_u8
vqshlq_m
vqshlq_m_s16
vqshlq_m_s32
vqshlq_m_s8
vqshlq_m_u16
vqshlq_m_u32
vqshlq_m_u8
vqshlq_n
vqshlq_n_s16
vqshlq_n_s32
vqshlq_n_s8
vqshlq_n_u16
vqshlq_n_u32
vqshlq_n_u8
vqshlq_r
vqshlq_r_s16
vqshlq_r_s32
vqshlq_r_s8
vqshlq_r_u16
vqshlq_r_u32
vqshlq_r_u8
vqshlq
vqshlq_s16
vqshlq_s32
vqshlq_s8
vqshlq_u16
vqshlq_u32
vqshlq_u8
vqshluq_m
vqshluq_m_n_s16
vqshluq_m_n_s32
vqshluq_m_n_s8
vqshluq
vqshluq_n_s16
vqshluq_n_s32
vqshluq_n_s8
vqshrnbq_m
vqshrnbq_m_n_s16
vqshrnbq_m_n_s32
vqshrnbq_m_n_u16
vqshrnbq_m_n_u32
vqshrnbq
vqshrnbq_n_s16
vqshrnbq_n_s32
vqshrnbq_n_u16
vqshrnbq_n_u32
vqshrntq_m
vqshrntq_m_n_s16
vqshrntq_m_n_s32
vqshrntq_m_n_u16
vqshrntq_m_n_u32
vqshrntq
vqshrntq_n_s16
vqshrntq_n_s32
vqshrntq_n_u16
vqshrntq_n_u32
vqshrunbq_m
vqshrunbq_m_n_s16
vqshrunbq_m_n_s32
vqshrunbq
vqshrunbq_n_s16
vqshrunbq_n_s32
vqshruntq_m
vqshruntq_m_n_s16
vqshruntq_m_n_s32
vqshruntq
vqshruntq_n_s16
vqshruntq_n_s32
vqsubq_m
vqsubq_m_n_s16
vqsubq_m_n_s32
vqsubq_m_n_s8
vqsubq_m_n_u16
vqsubq_m_n_u32
vqsubq_m_n_u8
vqsubq_m_s16
vqsubq_m_s32
vqsubq_m_s8
vqsubq_m_u16
vqsubq_m_u32
vqsubq_m_u8
vqsubq
vqsubq_n_s16
vqsubq_n_s32
vqsubq_n_s8
vqsubq_n_u16
vqsubq_n_u32
vqsubq_n_u8
vqsubq_s16
vqsubq_s32
vqsubq_s8
vqsubq_u16
vqsubq_u32
vqsubq_u8
vreinterpretq_f16
vreinterpretq_f16_f32
vreinterpretq_f16_s16
vreinterpretq_f16_s32
vreinterpretq_f16_s64
vreinterpretq_f16_s8
vreinterpretq_f16_u16
vreinterpretq_f16_u32
vreinterpretq_f16_u64
vreinterpretq_f16_u8
vreinterpretq_f32
vreinterpretq_f32_f16
vreinterpretq_f32_s16
vreinterpretq_f32_s32
vreinterpretq_f32_s64
vreinterpretq_f32_s8
vreinterpretq_f32_u16
vreinterpretq_f32_u32
vreinterpretq_f32_u64
vreinterpretq_f32_u8
vreinterpretq_s16
vreinterpretq_s16_f16
vreinterpretq_s16_f32
vreinterpretq_s16_s32
vreinterpretq_s16_s64
vreinterpretq_s16_s8
vreinterpretq_s16_u16
vreinterpretq_s16_u32
vreinterpretq_s16_u64
vreinterpretq_s16_u8
vreinterpretq_s32
vreinterpretq_s32_f16
vreinterpretq_s32_f32
vreinterpretq_s32_s16
vreinterpretq_s32_s64
vreinterpretq_s32_s8
vreinterpretq_s32_u16
vreinterpretq_s32_u32
vreinterpretq_s32_u64
vreinterpretq_s32_u8
vreinterpretq_s64
vreinterpretq_s64_f16
vreinterpretq_s64_f32
vreinterpretq_s64_s16
vreinterpretq_s64_s32
vreinterpretq_s64_s8
vreinterpretq_s64_u16
vreinterpretq_s64_u32
vreinterpretq_s64_u64
vreinterpretq_s64_u8
vreinterpretq_s8
vreinterpretq_s8_f16
vreinterpretq_s8_f32
vreinterpretq_s8_s16
vreinterpretq_s8_s32
vreinterpretq_s8_s64
vreinterpretq_s8_u16
vreinterpretq_s8_u32
vreinterpretq_s8_u64
vreinterpretq_s8_u8
vreinterpretq_u16
vreinterpretq_u16_f16
vreinterpretq_u16_f32
vreinterpretq_u16_s16
vreinterpretq_u16_s32
vreinterpretq_u16_s64
vreinterpretq_u16_s8
vreinterpretq_u16_u32
vreinterpretq_u16_u64
vreinterpretq_u16_u8
vreinterpretq_u32
vreinterpretq_u32_f16
vreinterpretq_u32_f32
vreinterpretq_u32_s16
vreinterpretq_u32_s32
vreinterpretq_u32_s64
vreinterpretq_u32_s8
vreinterpretq_u32_u16
vreinterpretq_u32_u64
vreinterpretq_u32_u8
vreinterpretq_u64
vreinterpretq_u64_f16
vreinterpretq_u64_f32
vreinterpretq_u64_s16
vreinterpretq_u64_s32
vreinterpretq_u64_s64
vreinterpretq_u64_s8
vreinterpretq_u64_u16
vreinterpretq_u64_u32
vreinterpretq_u64_u8
vreinterpretq_u8
vreinterpretq_u8_f16
vreinterpretq_u8_f32
vreinterpretq_u8_s16
vreinterpretq_u8_s32
vreinterpretq_u8_s64
vreinterpretq_u8_s8
vreinterpretq_u8_u16
vreinterpretq_u8_u32
vreinterpretq_u8_u64
vrev16q_m
vrev16q_m_s8
vrev16q_m_u8
vrev16q
vrev16q_s8
vrev16q_u8
vrev16q_x
vrev16q_x_s8
vrev16q_x_u8
vrev32q
vrev32q_f16
vrev32q_m
vrev32q_m_f16
vrev32q_m_s16
vrev32q_m_s8
vrev32q_m_u16
vrev32q_m_u8
vrev32q_s16
vrev32q_s8
vrev32q_u16
vrev32q_u8
vrev32q_x
vrev32q_x_f16
vrev32q_x_s16
vrev32q_x_s8
vrev32q_x_u16
vrev32q_x_u8
vrev64q
vrev64q_f16
vrev64q_f32
vrev64q_m
vrev64q_m_f16
vrev64q_m_f32
vrev64q_m_s16
vrev64q_m_s32
vrev64q_m_s8
vrev64q_m_u16
vrev64q_m_u32
vrev64q_m_u8
vrev64q_s16
vrev64q_s32
vrev64q_s8
vrev64q_u16
vrev64q_u32
vrev64q_u8
vrev64q_x
vrev64q_x_f16
vrev64q_x_f32
vrev64q_x_s16
vrev64q_x_s32
vrev64q_x_s8
vrev64q_x_u16
vrev64q_x_u32
vrev64q_x_u8
vrhaddq_m
vrhaddq_m_s16
vrhaddq_m_s32
vrhaddq_m_s8
vrhaddq_m_u16
vrhaddq_m_u32
vrhaddq_m_u8
vrhaddq
vrhaddq_s16
vrhaddq_s32
vrhaddq_s8
vrhaddq_u16
vrhaddq_u32
vrhaddq_u8
vrhaddq_x
vrhaddq_x_s16
vrhaddq_x_s32
vrhaddq_x_s8
vrhaddq_x_u16
vrhaddq_x_u32
vrhaddq_x_u8
vrmlaldavhaq_p
vrmlaldavhaq_p_s32
vrmlaldavhaq_p_u32
vrmlaldavhaq
vrmlaldavhaq_s32
vrmlaldavhaq_u32
vrmlaldavhaxq_p
vrmlaldavhaxq_p_s32
vrmlaldavhaxq
vrmlaldavhaxq_s32
vrmlaldavhq_p
vrmlaldavhq_p_s32
vrmlaldavhq_p_u32
vrmlaldavhq
vrmlaldavhq_s32
vrmlaldavhq_u32
vrmlaldavhxq_p
vrmlaldavhxq_p_s32
vrmlaldavhxq
vrmlaldavhxq_s32
vrmlsldavhaq_p
vrmlsldavhaq_p_s32
vrmlsldavhaq
vrmlsldavhaq_s32
vrmlsldavhaxq_p
vrmlsldavhaxq_p_s32
vrmlsldavhaxq
vrmlsldavhaxq_s32
vrmlsldavhq_p
vrmlsldavhq_p_s32
vrmlsldavhq
vrmlsldavhq_s32
vrmlsldavhxq_p
vrmlsldavhxq_p_s32
vrmlsldavhxq
vrmlsldavhxq_s32
vrmulhq_m
vrmulhq_m_s16
vrmulhq_m_s32
vrmulhq_m_s8
vrmulhq_m_u16
vrmulhq_m_u32
vrmulhq_m_u8
vrmulhq
vrmulhq_s16
vrmulhq_s32
vrmulhq_s8
vrmulhq_u16
vrmulhq_u32
vrmulhq_u8
vrmulhq_x
vrmulhq_x_s16
vrmulhq_x_s32
vrmulhq_x_s8
vrmulhq_x_u16
vrmulhq_x_u32
vrmulhq_x_u8
vrndaq
vrndaq_f16
vrndaq_f32
vrndaq_m
vrndaq_m_f16
vrndaq_m_f32
vrndaq_x
vrndaq_x_f16
vrndaq_x_f32
vrndmq
vrndmq_f16
vrndmq_f32
vrndmq_m
vrndmq_m_f16
vrndmq_m_f32
vrndmq_x
vrndmq_x_f16
vrndmq_x_f32
vrndnq
vrndnq_f16
vrndnq_f32
vrndnq_m
vrndnq_m_f16
vrndnq_m_f32
vrndnq_x
vrndnq_x_f16
vrndnq_x_f32
vrndpq
vrndpq_f16
vrndpq_f32
vrndpq_m
vrndpq_m_f16
vrndpq_m_f32
vrndpq_x
vrndpq_x_f16
vrndpq_x_f32
vrndq
vrndq_f16
vrndq_f32
vrndq_m
vrndq_m_f16
vrndq_m_f32
vrndq_x
vrndq_x_f16
vrndq_x_f32
vrndxq
vrndxq_f16
vrndxq_f32
vrndxq_m
vrndxq_m_f16
vrndxq_m_f32
vrndxq_x
vrndxq_x_f16
vrndxq_x_f32
vrshlq_m_n
vrshlq_m_n_s16
vrshlq_m_n_s32
vrshlq_m_n_s8
vrshlq_m_n_u16
vrshlq_m_n_u32
vrshlq_m_n_u8
vrshlq_m
vrshlq_m_s16
vrshlq_m_s32
vrshlq_m_s8
vrshlq_m_u16
vrshlq_m_u32
vrshlq_m_u8
vrshlq
vrshlq_n_s16
vrshlq_n_s32
vrshlq_n_s8
vrshlq_n_u16
vrshlq_n_u32
vrshlq_n_u8
vrshlq_s16
vrshlq_s32
vrshlq_s8
vrshlq_u16
vrshlq_u32
vrshlq_u8
vrshlq_x
vrshlq_x_s16
vrshlq_x_s32
vrshlq_x_s8
vrshlq_x_u16
vrshlq_x_u32
vrshlq_x_u8
vrshrnbq_m
vrshrnbq_m_n_s16
vrshrnbq_m_n_s32
vrshrnbq_m_n_u16
vrshrnbq_m_n_u32
vrshrnbq
vrshrnbq_n_s16
vrshrnbq_n_s32
vrshrnbq_n_u16
vrshrnbq_n_u32
vrshrntq_m
vrshrntq_m_n_s16
vrshrntq_m_n_s32
vrshrntq_m_n_u16
vrshrntq_m_n_u32
vrshrntq
vrshrntq_n_s16
vrshrntq_n_s32
vrshrntq_n_u16
vrshrntq_n_u32
vrshrq_m
vrshrq_m_n_s16
vrshrq_m_n_s32
vrshrq_m_n_s8
vrshrq_m_n_u16
vrshrq_m_n_u32
vrshrq_m_n_u8
vrshrq
vrshrq_n_s16
vrshrq_n_s32
vrshrq_n_s8
vrshrq_n_u16
vrshrq_n_u32
vrshrq_n_u8
vrshrq_x
vrshrq_x_n_s16
vrshrq_x_n_s32
vrshrq_x_n_s8
vrshrq_x_n_u16
vrshrq_x_n_u32
vrshrq_x_n_u8
vsbciq_m
vsbciq_m_s32
vsbciq_m_u32
vsbciq
vsbciq_s32
vsbciq_u32
vsbcq_m
vsbcq_m_s32
vsbcq_m_u32
vsbcq
vsbcq_s32
vsbcq_u32
vsetq_lane
vsetq_lane_f16
vsetq_lane_f32
vsetq_lane_s16
vsetq_lane_s32
vsetq_lane_s64
vsetq_lane_s8
vsetq_lane_u16
vsetq_lane_u32
vsetq_lane_u64
vsetq_lane_u8
vshlcq_m
vshlcq_m_s16
vshlcq_m_s32
vshlcq_m_s8
vshlcq_m_u16
vshlcq_m_u32
vshlcq_m_u8
vshlcq
vshlcq_s16
vshlcq_s32
vshlcq_s8
vshlcq_u16
vshlcq_u32
vshlcq_u8
vshllbq_m
vshllbq_m_n_s16
vshllbq_m_n_s8
vshllbq_m_n_u16
vshllbq_m_n_u8
vshllbq
vshllbq_n_s16
vshllbq_n_s8
vshllbq_n_u16
vshllbq_n_u8
vshllbq_x
vshllbq_x_n_s16
vshllbq_x_n_s8
vshllbq_x_n_u16
vshllbq_x_n_u8
vshlltq_m
vshlltq_m_n_s16
vshlltq_m_n_s8
vshlltq_m_n_u16
vshlltq_m_n_u8
vshlltq
vshlltq_n_s16
vshlltq_n_s8
vshlltq_n_u16
vshlltq_n_u8
vshlltq_x
vshlltq_x_n_s16
vshlltq_x_n_s8
vshlltq_x_n_u16
vshlltq_x_n_u8
vshlq_m_n
vshlq_m_n_s16
vshlq_m_n_s32
vshlq_m_n_s8
vshlq_m_n_u16
vshlq_m_n_u32
vshlq_m_n_u8
vshlq_m_r
vshlq_m_r_s16
vshlq_m_r_s32
vshlq_m_r_s8
vshlq_m_r_u16
vshlq_m_r_u32
vshlq_m_r_u8
vshlq_m
vshlq_m_s16
vshlq_m_s32
vshlq_m_s8
vshlq_m_u16
vshlq_m_u32
vshlq_m_u8
vshlq_n
vshlq_n_s16
vshlq_n_s32
vshlq_n_s8
vshlq_n_u16
vshlq_n_u32
vshlq_n_u8
vshlq_r
vshlq_r_s16
vshlq_r_s32
vshlq_r_s8
vshlq_r_u16
vshlq_r_u32
vshlq_r_u8
vshlq
vshlq_s16
vshlq_s32
vshlq_s8
vshlq_u16
vshlq_u32
vshlq_u8
vshlq_x_n
vshlq_x_n_s16
vshlq_x_n_s32
vshlq_x_n_s8
vshlq_x_n_u16
vshlq_x_n_u32
vshlq_x_n_u8
vshlq_x
vshlq_x_s16
vshlq_x_s32
vshlq_x_s8
vshlq_x_u16
vshlq_x_u32
vshlq_x_u8
vshrnbq_m
vshrnbq_m_n_s16
vshrnbq_m_n_s32
vshrnbq_m_n_u16
vshrnbq_m_n_u32
vshrnbq
vshrnbq_n_s16
vshrnbq_n_s32
vshrnbq_n_u16
vshrnbq_n_u32
vshrntq_m
vshrntq_m_n_s16
vshrntq_m_n_s32
vshrntq_m_n_u16
vshrntq_m_n_u32
vshrntq
vshrntq_n_s16
vshrntq_n_s32
vshrntq_n_u16
vshrntq_n_u32
vshrq_m
vshrq_m_n_s16
vshrq_m_n_s32
vshrq_m_n_s8
vshrq_m_n_u16
vshrq_m_n_u32
vshrq_m_n_u8
vshrq
vshrq_n_s16
vshrq_n_s32
vshrq_n_s8
vshrq_n_u16
vshrq_n_u32
vshrq_n_u8
vshrq_x
vshrq_x_n_s16
vshrq_x_n_s32
vshrq_x_n_s8
vshrq_x_n_u16
vshrq_x_n_u32
vshrq_x_n_u8
vsliq_m
vsliq_m_n_s16
vsliq_m_n_s32
vsliq_m_n_s8
vsliq_m_n_u16
vsliq_m_n_u32
vsliq_m_n_u8
vsliq
vsliq_n_s16
vsliq_n_s32
vsliq_n_s8
vsliq_n_u16
vsliq_n_u32
vsliq_n_u8
vsriq_m
vsriq_m_n_s16
vsriq_m_n_s32
vsriq_m_n_s8
vsriq_m_n_u16
vsriq_m_n_u32
vsriq_m_n_u8
vsriq
vsriq_n_s16
vsriq_n_s32
vsriq_n_s8
vsriq_n_u16
vsriq_n_u32
vsriq_n_u8
vst1q
vst1q_f16
vst1q_f32
vst1q_p
vst1q_p_f16
vst1q_p_f32
vst1q_p_s16
vst1q_p_s32
vst1q_p_s8
vst1q_p_u16
vst1q_p_u32
vst1q_p_u8
vst1q_s16
vst1q_s32
vst1q_s8
vst1q_u16
vst1q_u32
vst1q_u8
vst2q
vst2q_f16
vst2q_f32
vst2q_s16
vst2q_s32
vst2q_s8
vst2q_u16
vst2q_u32
vst2q_u8
vst4q
vst4q_f16
vst4q_f32
vst4q_s16
vst4q_s32
vst4q_s8
vst4q_u16
vst4q_u32
vst4q_u8
vstrbq_p
vstrbq_p_s16
vstrbq_p_s32
vstrbq_p_s8
vstrbq_p_u16
vstrbq_p_u32
vstrbq_p_u8
vstrbq
vstrbq_s16
vstrbq_s32
vstrbq_s8
vstrbq_scatter_offset_p
vstrbq_scatter_offset_p_s16
vstrbq_scatter_offset_p_s32
vstrbq_scatter_offset_p_s8
vstrbq_scatter_offset_p_u16
vstrbq_scatter_offset_p_u32
vstrbq_scatter_offset_p_u8
vstrbq_scatter_offset
vstrbq_scatter_offset_s16
vstrbq_scatter_offset_s32
vstrbq_scatter_offset_s8
vstrbq_scatter_offset_u16
vstrbq_scatter_offset_u32
vstrbq_scatter_offset_u8
vstrbq_u16
vstrbq_u32
vstrbq_u8
vstrdq_scatter_base_p
vstrdq_scatter_base_p_s64
vstrdq_scatter_base_p_u64
vstrdq_scatter_base
vstrdq_scatter_base_s64
vstrdq_scatter_base_u64
vstrdq_scatter_base_wb_p
vstrdq_scatter_base_wb_p_s64
vstrdq_scatter_base_wb_p_u64
vstrdq_scatter_base_wb
vstrdq_scatter_base_wb_s64
vstrdq_scatter_base_wb_u64
vstrdq_scatter_offset_p
vstrdq_scatter_offset_p_s64
vstrdq_scatter_offset_p_u64
vstrdq_scatter_offset
vstrdq_scatter_offset_s64
vstrdq_scatter_offset_u64
vstrdq_scatter_shifted_offset_p
vstrdq_scatter_shifted_offset_p_s64
vstrdq_scatter_shifted_offset_p_u64
vstrdq_scatter_shifted_offset
vstrdq_scatter_shifted_offset_s64
vstrdq_scatter_shifted_offset_u64
vstrhq
vstrhq_f16
vstrhq_p
vstrhq_p_f16
vstrhq_p_s16
vstrhq_p_s32
vstrhq_p_u16
vstrhq_p_u32
vstrhq_s16
vstrhq_s32
vstrhq_scatter_offset
vstrhq_scatter_offset_f16
vstrhq_scatter_offset_p
vstrhq_scatter_offset_p_f16
vstrhq_scatter_offset_p_s16
vstrhq_scatter_offset_p_s32
vstrhq_scatter_offset_p_u16
vstrhq_scatter_offset_p_u32
vstrhq_scatter_offset_s16
vstrhq_scatter_offset_s32
vstrhq_scatter_offset_u16
vstrhq_scatter_offset_u32
vstrhq_scatter_shifted_offset
vstrhq_scatter_shifted_offset_f16
vstrhq_scatter_shifted_offset_p
vstrhq_scatter_shifted_offset_p_f16
vstrhq_scatter_shifted_offset_p_s16
vstrhq_scatter_shifted_offset_p_s32
vstrhq_scatter_shifted_offset_p_u16
vstrhq_scatter_shifted_offset_p_u32
vstrhq_scatter_shifted_offset_s16
vstrhq_scatter_shifted_offset_s32
vstrhq_scatter_shifted_offset_u16
vstrhq_scatter_shifted_offset_u32
vstrhq_u16
vstrhq_u32
vstrwq
vstrwq_f32
vstrwq_p
vstrwq_p_f32
vstrwq_p_s32
vstrwq_p_u32
vstrwq_s32
vstrwq_scatter_base
vstrwq_scatter_base_f32
vstrwq_scatter_base_p
vstrwq_scatter_base_p_f32
vstrwq_scatter_base_p_s32
vstrwq_scatter_base_p_u32
vstrwq_scatter_base_s32
vstrwq_scatter_base_u32
vstrwq_scatter_base_wb
vstrwq_scatter_base_wb_f32
vstrwq_scatter_base_wb_p
vstrwq_scatter_base_wb_p_f32
vstrwq_scatter_base_wb_p_s32
vstrwq_scatter_base_wb_p_u32
vstrwq_scatter_base_wb_s32
vstrwq_scatter_base_wb_u32
vstrwq_scatter_offset
vstrwq_scatter_offset_f32
vstrwq_scatter_offset_p
vstrwq_scatter_offset_p_f32
vstrwq_scatter_offset_p_s32
vstrwq_scatter_offset_p_u32
vstrwq_scatter_offset_s32
vstrwq_scatter_offset_u32
vstrwq_scatter_shifted_offset
vstrwq_scatter_shifted_offset_f32
vstrwq_scatter_shifted_offset_p
vstrwq_scatter_shifted_offset_p_f32
vstrwq_scatter_shifted_offset_p_s32
vstrwq_scatter_shifted_offset_p_u32
vstrwq_scatter_shifted_offset_s32
vstrwq_scatter_shifted_offset_u32
vstrwq_u32
vsubq
vsubq_f16
vsubq_f32
vsubq_m
vsubq_m_f16
vsubq_m_f32
vsubq_m_n_f16
vsubq_m_n_f32
vsubq_m_n_s16
vsubq_m_n_s32
vsubq_m_n_s8
vsubq_m_n_u16
vsubq_m_n_u32
vsubq_m_n_u8
vsubq_m_s16
vsubq_m_s32
vsubq_m_s8
vsubq_m_u16
vsubq_m_u32
vsubq_m_u8
vsubq_n_f16
vsubq_n_f32
vsubq_n_s16
vsubq_n_s32
vsubq_n_s8
vsubq_n_u16
vsubq_n_u32
vsubq_n_u8
vsubq_s16
vsubq_s32
vsubq_s8
vsubq_u16
vsubq_u32
vsubq_u8
vsubq_x
vsubq_x_f16
vsubq_x_f32
vsubq_x_n_f16
vsubq_x_n_f32
vsubq_x_n_s16
vsubq_x_n_s32
vsubq_x_n_s8
vsubq_x_n_u16
vsubq_x_n_u32
vsubq_x_n_u8
vsubq_x_s16
vsubq_x_s32
vsubq_x_s8
vsubq_x_u16
vsubq_x_u32
vsubq_x_u8
vuninitializedq_f16
vuninitializedq_f32
vuninitializedq
vuninitializedq_polymorphic_f16
vuninitializedq_polymorphic_f32
vuninitializedq_polymorphic_s16
vuninitializedq_polymorphic_s32
vuninitializedq_polymorphic_s64
vuninitializedq_polymorphic_s8
vuninitializedq_polymorphic_u16
vuninitializedq_polymorphic_u32
vuninitializedq_polymorphic_u64
vuninitializedq_polymorphic_u8
vuninitializedq_s16
vuninitializedq_s32
vuninitializedq_s64
vuninitializedq_s8
vuninitializedq_u16
vuninitializedq_u32
vuninitializedq_u64
vuninitializedq_u8
cx1a
cx1d
cx1da
cx2a
cx2d
cx2da
cx3a
cx3d
cx3da
vcx1_u32
vcx1a_u32
vcx1d_u64
vcx1da_u64
vcx1q_m
vcx1q_m_f16
vcx1q_m_f32
vcx1q_m_s16
vcx1q_m_s32
vcx1q_m_s64
vcx1q_m_s8
vcx1q_m_u16
vcx1q_m_u32
vcx1q_m_u64
vcx1q_m_u8
vcx1q_u8
vcx1qa
vcx1qa_f16
vcx1qa_f32
vcx1qa_m
vcx1qa_m_f16
vcx1qa_m_f32
vcx1qa_m_s16
vcx1qa_m_s32
vcx1qa_m_s64
vcx1qa_m_s8
vcx1qa_m_u16
vcx1qa_m_u32
vcx1qa_m_u64
vcx1qa_m_u8
vcx1qa_s16
vcx1qa_s32
vcx1qa_s64
vcx1qa_s8
vcx1qa_u16
vcx1qa_u32
vcx1qa_u64
vcx1qa_u8
vcx2_u32
vcx2a_u32
vcx2d_u64
vcx2da_u64
vcx2q
vcx2q_f16
vcx2q_f32
vcx2q_m_impl
vcx2q_m_impl_f16
vcx2q_m_impl_f32
vcx2q_m_impl_s16
vcx2q_m_impl_s32
vcx2q_m_impl_s64
vcx2q_m_impl_s8
vcx2q_m_impl_u16
vcx2q_m_impl_u32
vcx2q_m_impl_u64
vcx2q_m_impl_u8
vcx2q_s16
vcx2q_s32
vcx2q_s64
vcx2q_s8
vcx2q_u16
vcx2q_u32
vcx2q_u64
vcx2q_u8
vcx2q_u8_f16
vcx2q_u8_f32
vcx2q_u8_s16
vcx2q_u8_s32
vcx2q_u8_s64
vcx2q_u8_s8
vcx2q_u8_u16
vcx2q_u8_u32
vcx2q_u8_u64
vcx2q_u8_u8
vcx2qa_impl
vcx2qa_impl_f16
vcx2qa_impl_f32
vcx2qa_impl_s16
vcx2qa_impl_s32
vcx2qa_impl_s64
vcx2qa_impl_s8
vcx2qa_impl_u16
vcx2qa_impl_u32
vcx2qa_impl_u64
vcx2qa_impl_u8
vcx2qa_m_impl
vcx2qa_m_impl_f16
vcx2qa_m_impl_f32
vcx2qa_m_impl_s16
vcx2qa_m_impl_s32
vcx2qa_m_impl_s64
vcx2qa_m_impl_s8
vcx2qa_m_impl_u16
vcx2qa_m_impl_u32
vcx2qa_m_impl_u64
vcx2qa_m_impl_u8
vcx3_u32
vcx3a_u32
vcx3d_u64
vcx3da_u64
vcx3q_impl
vcx3q_impl_f16
vcx3q_impl_f32
vcx3q_impl_s16
vcx3q_impl_s32
vcx3q_impl_s64
vcx3q_impl_s8
vcx3q_impl_u16
vcx3q_impl_u32
vcx3q_impl_u64
vcx3q_impl_u8
vcx3q_m_impl
vcx3q_m_impl_f16
vcx3q_m_impl_f32
vcx3q_m_impl_s16
vcx3q_m_impl_s32
vcx3q_m_impl_s64
vcx3q_m_impl_s8
vcx3q_m_impl_u16
vcx3q_m_impl_u32
vcx3q_m_impl_u64
vcx3q_m_impl_u8
vcx3q_u8_impl
vcx3q_u8_impl_f16
vcx3q_u8_impl_f32
vcx3q_u8_impl_s16
vcx3q_u8_impl_s32
vcx3q_u8_impl_s64
vcx3q_u8_impl_s8
vcx3q_u8_impl_u16
vcx3q_u8_impl_u32
vcx3q_u8_impl_u64
vcx3q_u8_impl_u8
vcx3qa_impl
vcx3qa_impl_f16
vcx3qa_impl_f32
vcx3qa_impl_s16
vcx3qa_impl_s32
vcx3qa_impl_s64
vcx3qa_impl_s8
vcx3qa_impl_u16
vcx3qa_impl_u32
vcx3qa_impl_u64
vcx3qa_impl_u8
vcx3qa_m_impl
vcx3qa_m_impl_f16
vcx3qa_m_impl_f32
vcx3qa_m_impl_s16
vcx3qa_m_impl_s32
vcx3qa_m_impl_s64
vcx3qa_m_impl_s8
vcx3qa_m_impl_u16
vcx3qa_m_impl_u32
vcx3qa_m_impl_u64
vcx3qa_m_impl_u8
vreinterpretq_u8
vreinterpretq_u8_u8
#=3=S
0G7:
hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh  
hhh66hhhhhhh
hhhhhhh
WW<RWhhhhhhhhh]h
hhhhh
hhhhhhhhh
hhhhhnhhhhhzhhhhhhhhhhhhhhhhhhh
hhhhhhhhhhhhhhhhhhhhhh
0hhhKK
 Ab
JVJX
 Ab
0G7:
DEEA
XXXXXX
EXDEEEEX
EDX
EEEXL
`/<I4
0G7:
888888T88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
8\888
8888888
HHHHH88888888888
88888
88#8
888888888'88888
88888-8888888888888888888
8888888888888888888888
8888
vvvvvv
vvovvvv
 Ab
0G7:
 Ab
L5###
L#LLLLLLLLLLLLLLLLLLLLLLM
 Ab
0G7:
++++++++++++++++++++++++++++++++
(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((("C""""""""""""""""""""""""""""""""""-----
"""""""V"""""""""""""""""""""""""""""""""""""u4444y"""""""""""
""""""
""""""""""((
KKKKKKKK
;;;;;:;/9K
&PMP
2BR
9DSp
ckp
$2
DQ^
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFq
$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$C$$$$$$$$$$$$$$$$$$$$$$$$$$4$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
J]JimJ
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222""I222222222222I2222222
2I8888822222222222
22222I22
2I222222222
22222>22222
2222222222222222222I2222222222222222222222I2222
;;Q;
;;;V;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;Y;;;;;;;;;;;;;
;;;;;;;;;;;;
;;;;;;;
KKKKK;;;;;;;;;;;
;;;;;
;;);
;;;;;;;;;-;;;;;};;;;;3;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;
HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH
 HHHHHHHH
IHHIHHHHHHHHHIHHHHHHH(HIDDDDD
I.HHHHHOHH8HIHHHIHHHHI<HIHHIgHHHHHHHHHHHHHHHHHHHHHHHHHIHHHH
HHHHHHHHHHHHHHHHHIBHHH
""e"""""""""""e""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""e""""""""""""""""""""g""""""""""""g"""""""
"g88888(((((((((("
"""""R""
"g"""""""""
"""""k"""""
"""""""""""""""""""g""""""">""""""""""""""g""""
 Ab
22""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""4""""""""""""4"""""""
"422222"""""""""""
"""""4""
"4"""""""""
"""""8"""""
"""""""""""""""""""4""""""""""""""""""""""4""""
/RRR
!uuff
 5:?K
 Ab
5555%
'5555
55::555%5555
'2:F
CVZCh}
 5:?K
 Ab
+++
AAAA !AAA
"#A$AAAAAAAAAA
1(A)2*A,-
.A?A
A/@A
#->O`q
 5:?K
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
&3OO@OOOOOOOOOOOOS`m
OOOOOOOOOOOOOOOOOOOOOO
OOOOOOOOOOOOOOOOOOOOOOOOO
OOOOOzOOOOOOO
OOOOOHOOOOO
OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
OOOOOOOOOOOOOOOOOOOOOOOOOOOHOOOOHOOOOOOH
OOOO
OOOOOOOOOOO
OOOOOOOOOOOOOOO
OOOOO
OOOOOOOOOOHOOOOOOOOOOOOOOOO
OOOOO
OOOO
OOOOOOOOOOOOOOOOO
)Ii
NRPT
cj66p
r|88
YYYYYYYYYYY2
apinotes
O[Tss
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
%%%%%
 Ab
0G7:
<<#0
':::
jjjjj
zzz^Z
#c959
ZZZZZ9oE
^cfkp
OTl}
S?I 
~~~~~N
;;;q
aaaa
888885555555555
((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((
88888
$8Vqz
,<R\""
*8IXhrz
&<Br
888888888888888888888888888888888888888888888888888888888888888888

3P>Ib
bbbb
bbbbbb
))))
)R00.06464DB822.P.T:<(((((((((((((((((((((((((>@L((((N
)))
)))))))))))
 )))
#(-39?
#(-39?
=====&
\,\\\\B
,=N_pv
#&*&W
"'-'8'C'N'Y'd'o'o
!(((
R(Y(
[(b(
d(k(
$P0@H
O]]]U]_
!!!!!!
!!!!!!
!!!!!!!!
::::
:::::
::::::
:::::::
""[HwHHHH
HHHHHHHHHH:
HHH@B
-----
"Mx
 2 S t 
!1!^!
2"%G
44 444"'
<<8AL
148AAA<
 '.5
$,4<

0D44
D%%%%%
DDPDY
DDD00D0999D0000DD
DD}D
+.147:=@CF
IL"O%RUX[^adgjm(psvy|
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""L":"88"""""""L"""""""
"L22222"""""""""""
"""""L""
"L"""""""""
"""""A"""""
"""""""""""""""""""L""""""""""""""""""""""L""""
%-PPPPAP$%%%%
````+```
[b[b
b[b[
__^^
[b[b
8[NN
SS1111
11111
3DKWK
)))K
SS8>
aaaa0aaa
GGGGTTTT
BBBKBB^
SS1111
11111
-<CIOU[ckpu
dinu{
MM++++
BBTTTT
TTTTT
%*.3*********8=BGQ
w'w*4www8ww;ww>wwA
E[bj
"*9APXf
,4<DLT
$,=EV^o
,4<DLT
(2<FP
(2<FZP
(2<FZP
(2<FP
(2<FP
#*18?FMT
 '.5<CJQ
"',16;@EJOTY^chmrw|
 *4>HVe
````
``+`
9MMM
 Y/9=,
/B`t
HKRZahk
*40123456789abcdef
**********
++++
'''''
333######
'09[dmv
058;@CHKP
":*B
eeeee2J
,/\:. 
(-39FN[
6<BHU]cp
&&00007:=@0220CFIL
(q.<q
+?
666
8<BFJ
x8:x<
>GQf[`
[lnu
yss{
ACc##NNNNNNNc
-BBBgikTm
ou{TT
TTT+QtBv
8=6:
8=6:
!$'GGGGGGG*GGG7G:GG^GGaGGGGGjGmpsvyG|GGGG
77`777
``7E3`````7`
111111111111111111111111111111111111111111111111111111111111
777775`7771````
``PT
b5===
d55h555555
9;n533t3xz
5959
3`3333
9`C'*33
-5``
**********
n[,[,
P$p%p%p%p%5$-$>$
p%p%F$
=AT{
%1:DL
**********
vz~%
%/9CLYfpz
11111
111111
1111
111111,1
11111,11
/////
//////
////
//////,/
/////,//
BBBBB
BBBBBB
BBBB
BBBBBB-B
BBBBB-BB
88888
888888
8888
888888,8
88888,88
88888
888888
8888
888888,8
88888,88
88888
888888
8888
888888,8
88888,88
88888
888888
8888
888888,8
88888,88
88888
888888
8888
888888,8
88888,88
88888
888888
8888
888888,8
88888,88
88888
888888
8888
888888,8
88888,88
]]]F
    4'
WWWWW;WWAWC
EW..WGWW 
WWWWWWWWWWW
$))))
))))
0002000000000,0::0.00
0000
00000000000000
0002000000000,0::0.00
0000
00000000000000
gg9gggg</
 88$(+/3
(2>P
*<dd
&0yy
+<gg
$/CN^
'*-0369<?BEILO
RUX\_behl
psw{~
%Ml{%
?????
(1:LT]`6
*6
EWg|
```````
````
68^`
`"%:
(+0,/P
PPPPPPP
PPPP
258N;
!*U7UG
''''
000$&
3BJR[clu~
knznnn}
/5Gf
$%1:G$$Td$$t
8???
X$8A
"/MM
 %)4
 %)4
     
WWqWWWW
|1111
$Kqqeh
9@Ww
-Bax
OBOBOBOBOBOBOBOBOBOB
:L*`*
Y;Y;k ~ Y;Y;Y;
 Y;Y;Y;
 Y;Y;Y;
o<;2o<o<o<M2o<o<o<Z2g2z2o<o<o<
1i q 
6=6=6=
26=6=6=
q/{/{=
/{={={={=
%Ir
dBdBdBdBdBdBdBdBdBdBU
6-'D'
-7-7\
-7-7-7
-7-7-7
-7-7
-7-7-7
|7|7|7E,|7|7|7U,e,{,
7'+7+I+
7D/R/
7`/o/
)0)0h%)0)0)0)0)0)0s%)0)0
)?0?0?0
r,|,Q9
,Q9Q9Q9Q9
0B0B
0B0B0B0B0B0B0B0B0B0B0B0B
n>n>
(?(?
(?(?(?
K?K?3
K?K?K?K?V
l?l?l?
l?l?l?
l?l?
l?l?l?=
 G@G@G@
!$!G@G@G@A!X!e!r!
_@_@_@_@_@_@
_@_@_@_@
~@~@L
~@~@U
~@~@~@~@~@q
@5 @ 
yByB
#4K\e|
!$'*
"""""""
"""""""
LS`{
#pragma-messages
#warnings
CFString-literal
IndependentClass-attribute
NSObject-attribute
absolute-value
abstract-final-class
abstract-vbase-init
address
address-of-packed-member
address-of-temporary
aggregate-return
aix-compat
align-mismatch
alloca
alloca-with-align-alignof
ambiguous-delete
ambiguous-ellipsis
ambiguous-macro
ambiguous-member-template
ambiguous-reversed-operator
analyzer-incompatible-plugin
anon-enum-enum-conversion
anonymous-pack-parens
apinotes
arc%arc-bridge-casts-disallowed-in-nonarc
arc-maybe-repeated-use-of-weak
arc-non-pod-memaccess
arc-performSelector-leaks
arc-repeated-use-of-weak
arc-retain-cycles
arc-unsafe-retained-assign
argument-outside-range
argument-undefined-behaviourarray-bounds
array-bounds-pointer-arithmetic
asm-operand-widths
assign-enum
assume
at-protocol
atimport-in-framework-header
atomic-alignment
atomic-implicit-seq-cst
atomic-memory-ordering
atomic-properties*atomic-property-with-user-defined-accessor
attribute-packed-for-bitfield
attribute-warning
attributes
auto-disable-vptr-sanitizer
auto-import
auto-storage-class
auto-var-idavailability
avr-rtlib-linking-quirks
backend-plugin
backslash-newline-escape
bad-function-cast
binary-literal
bind-to-temporary-copy
binding-in-condition
bitfield-constant-conversion
bitfield-enum-conversion
bitfield-width
bitwise-conditional-parentheses
bitwise-instead-of-logical
bitwise-op-parentheses
block-capture-autoreleasing
bool-conversion
bool-conversions
bool-operation*bounds-attributes-cxx-experimental-ignored$bounds-attributes-extern-array-count'bounds-attributes-init-list-side-effect
braced-scalar-init
bridge-cast builtin-assume-aligned-alignment
builtin-macro-redefined
builtin-memcpy-chk-size
builtin-requires-header
c++-compatc++0x-compat
c++0x-extensions
c++0x-narrowingc++11-compat(c++11-compat-deprecated-writable-strings
c++11-compat-pedantic*c++11-compat-reserved-user-defined-literal
c++11-extensions
c++11-extra-semi
c++11-inline-namespace
c++11-long-long
c++11-narrowing
c++14-binary-literalc++14-compat
c++14-compat-pedantic
c++14-extensionsc++17-compat
c++17-compat-mangling
c++17-compat-pedantic
c++17-extensions
c++1y-extensionsc++1z-compat
c++1z-compat-mangling
c++1z-extensionsc++20-compat
c++20-compat-pedantic
c++20-designator
c++20-extensionsc++2a-compat
c++2a-compat-pedantic
c++2a-extensions
c++2b-extensions
c++98-c++11-c++14-c++17-compat'c++98-c++11-c++14-c++17-compat-pedantic
c++98-c++11-c++14-compat!c++98-c++11-c++14-compat-pedantic
c++98-c++11-compat!c++98-c++11-compat-binary-literal
c++98-c++11-compat-pedanticc++98-compat#c++98-compat-bind-to-temporary-copy
c++98-compat-extra-semi%c++98-compat-local-type-template-args
c++98-compat-pedantic'c++98-compat-unnamed-type-template-args
c11-extensions
c2x-extensions
c99-compat
c99-designator
c99-extensions#call-to-pure-virtual-from-ctor-dtor
called-once-parameter
cast-align
cast-calling-convention
cast-function-type
cast-of-sel-type
cast-qual
cast-qual-unrelated
char-align
char-subscriptsclang-cl-pch
class-conversion
class-varargs
cmse-union-leak
comma
comment
comments
compare-distinct-pointer-types
completion-handler
complex-component-init
compound-token-split
compound-token-split-by-macro
compound-token-split-by-space
concepts-ts-compat
conditional-type-mismatch
conditional-uninitialized
config-macros
constant-conversion
constant-evaluated
constant-logical-operand
constexpr-not-const
consumed
conversion
conversion-null
coroutine%coroutine-missing-unhandled-exception
covered-switch-default
cstring-format-directive
ctad-maybe-unsupported
ctor-dtor-privacy
cuda-compat
custom-atomic-properties
cxx-attribute-extension
dangling
dangling-else
dangling-fielddangling-gsl
dangling-initializer-list
darwin-sdk-settings
date-time
dealloc-in-category
debug-compression-unavailable
declaration-after-statement
defaulted-function-deleted
delegating-ctor-cycles delete-abstract-non-virtual-dtor
delete-incomplete$delete-non-abstract-non-virtual-dtor
delete-non-virtual-dtor#delimited-escape-sequence-extension
deprecated
deprecated-altivec-src-compat$deprecated-anon-enum-enum-conversion
deprecated-array-compare
deprecated-attributes
deprecated-comma-subscript
deprecated-copy
deprecated-copy-dtor
deprecated-copy-with-dtor'deprecated-copy-with-user-provided-copy'deprecated-copy-with-user-provided-dtor
deprecated-declarations!deprecated-dynamic-exception-spec
deprecated-enum-compare#deprecated-enum-compare-conditional
deprecated-enum-enum-conversion deprecated-enum-float-conversion
deprecated-implementations
deprecated-increment-bool
deprecated-objc-isa-usage%deprecated-objc-pointer-introspection5deprecated-objc-pointer-introspection-performSelector
deprecated-pragma
deprecated-register
deprecated-this-capture
deprecated-volatile
deprecated-writable-strings
direct-ivar-access
disabled-macro-expansion
disabled-optimizationdiscard-qual
distributed-object-modifiers
div-by-zero
division-by-zero
dll-attribute-on-redeclaration%dllexport-explicit-instantiation-decl
dllimport-static-field-def
documentation
documentation-deprecated-sync
documentation-html
documentation-pedantic
documentation-unknown-command
dollar-in-identifier-extension
double-promotion
dtor-namedtor-typedef
duplicate-decl-specifier
duplicate-enum
duplicate-method-arg
duplicate-method-match
duplicate-protocol
dynamic-class-memaccess
dynamic-exception-spec
effc++
elaborated-enum-base
elaborated-enum-class
embedded-directive
empty-body
empty-decomposition
empty-init-stmt
empty-translation-unit
encode-typeendif-labelsenum-compare
enum-compare-conditional
enum-compare-switch
enum-conversion
enum-enum-conversion
enum-float-conversion
enum-too-large
exceptions
excess-initializers
exit-time-destructors
expansion-to-defined
explicit-initialize-call
explicit-ownership-type
export-unnamed
export-using-directive
extern-c-compat
extern-initializer
extra
extra-qualification
extra-semi
extra-semi-stmtextra-tokens
final-dtor-non-final-class
final-macro
firebloom-incomplete-array firebloom-init-list-partial-null
firebloom-single-to-count
fixed-enum-extension
fixed-point-overflow
flag-enum
flexible-array-extensions
float-conversion
float-equal
float-overflow-conversion
float-zero-conversion
for-loop-analysis
format
format-extra-args
format-insufficient-args
format-invalid-specifier
format-non-iso
format-nonliteral
format-pedantic
format-security
format-type-confusion
format-y2k
format-zero-length
format=2
fortify-source
four-char-constants
frame-address
frame-larger-than
frame-larger-than=%framework-include-private-from-public
free-nonheap-object
function-def-in-objc-container
function-multiversionfuse-ld-path
future-compat
gcc-compat
global-constructors
global-isel
gnu-alignof-expression
gnu-anonymous-struct
gnu-array-member-paren-init
gnu-auto-type
gnu-binary-literal
gnu-case-range
gnu-complex-integer gnu-compound-literal-initializer
gnu-conditional-omitted-operand
gnu-designator
gnu-empty-initializer
gnu-empty-struct
gnu-flexible-array-initializer
gnu-flexible-array-union-member
gnu-folding-constant
gnu-imaginary-constant
gnu-include-next
gnu-inline-cpp-without-extern
gnu-label-as-value
gnu-redeclared-enum
gnu-statement-expression
gnu-static-float-init$gnu-string-literal-operator-template
gnu-union-cast"gnu-variable-sized-type-not-at-end
gnu-zero-line-directive!gnu-zero-variadic-macro-arguments
gpu-maybe-wrong-sideheader-guard
header-hygiene
hip-only
idiomatic-parentheses
ignored-attributes)ignored-availability-without-sdk-settings
ignored-optimization-argument
ignored-pragma-intrinsic
ignored-pragma-optimize
ignored-pragmas
ignored-qualifiers
ignored-reference-qualifiers
implicit
implicit-atomic-properties#implicit-const-int-float-conversion*implicit-conversion-floating-point-to-bool implicit-exception-spec-mismatch
implicit-fallthrough!implicit-fallthrough-per-function
implicit-fixed-point-conversion
implicit-float-conversion
implicit-function-declarationimplicit-int
implicit-int-conversion
implicit-int-float-conversion
implicit-retain-self
implicitly-unsigned-literal
import&import-preprocessor-directive-pedantic
inaccessible-base
include-next-absolute-path
include-next-outside-header
incompatible-exception-spec#incompatible-function-pointer-types"incompatible-library-redeclaration
incompatible-ms-struct
incompatible-pointer-types.incompatible-pointer-types-discards-qualifiers
incompatible-property-type
incompatible-sysroot'incomplete-framework-module-declaration
incomplete-implementation
incomplete-module
incomplete-setjmp-declaration
incomplete-umbrella
inconsistent-dllimport(inconsistent-missing-destructor-override
inconsistent-missing-override
increment-bool
index-store
infinite-recursion
init-self
initializer-overrides
injected-class-name
inline
inline-asm#inline-namespace-reopened-noninline
inline-new-delete"instantiation-after-specialization
int-conversion
int-conversions
int-in-bool-context
int-to-pointer-cast
int-to-void-pointer-cast
integer-overflow
interrupt-service-routine
invalid-command-line-argument
invalid-constexpr
invalid-iboutlet&invalid-initializer-from-system-header
invalid-ios-deployment-target
invalid-no-builtin-names
invalid-noreturn
invalid-offsetof invalid-or-nonexistent-directory
invalid-partial-specialization
invalid-pch
invalid-pp-token
invalid-source-encoding
invalid-token-paste
jump-seh-finally
keyword-compat
keyword-macro
knr-promoted-parameter
language-extension-token
large-by-value-copy
liblto
linker-warnings
literal-conversion
literal-range
local-type-template-args
logical-not-parentheses
logical-op-parentheses
long-long
loop-analysis
macro-redefined
main
main-return-type
malformed-warning-check
many-braces-around-scalar-init
max-tokens
max-unsigned-zero
memset-transposed-args
memsize-comparison
method-signatures
microsoft
microsoft-abstract
microsoft-anon-tag
microsoft-cast
microsoft-charize
microsoft-comment-paste
microsoft-const-init
microsoft-cpp-macro"microsoft-default-arg-redefinition
microsoft-drectve-section
microsoft-end-of-file microsoft-enum-forward-reference
microsoft-enum-value
microsoft-exception-spec
microsoft-exists#microsoft-explicit-constructor-call
microsoft-extra-qualification
microsoft-fixed-enum
microsoft-flexible-array
microsoft-goto
microsoft-inaccessible-base
microsoft-include
microsoft-mutable-reference
microsoft-pure-definition
microsoft-redeclare-static
microsoft-sealed
microsoft-static-assert
microsoft-template
microsoft-template-shadow microsoft-union-member-reference
microsoft-unqualified-friend
microsoft-using-decl
microsoft-void-pseudo-dtor
misleading-indentation
mismatched-new-delete
mismatched-parameter-types
mismatched-return-types
mismatched-tags
missing-braces
missing-constinit
missing-declarations
missing-exception-spec
missing-field-initializers
missing-format-attribute
missing-include-dirs
missing-method-return-type
missing-noescape
missing-noreturn
missing-prototype-for-cc
missing-prototypes
missing-selector-name
missing-sysroot
missing-variable-declarations
misspelled-assumptionmodule-build
module-conflict
module-file-config-mismatch
module-file-extension
module-import
module-import-in-extern-c
module-lock"modules-ambiguous-internal-linkage
modules-import-nested-redundant
most
movemsvc-include
msvc-not-found
multichar
multiple-move-vbase
narrowing
nested-anon-types
nested-externs
new-returns-null
newline-eof
noderef
noexcept-type
non-c-typedef-for-linkage
non-gcc
non-literal-null-conversion'non-modular-include-in-framework-module
non-modular-include-in-module
non-pod-varargs
non-power-of-two-alignment
non-virtual-dtor
nonnull
nonportable-cfstrings
nonportable-include-path!nonportable-private-apinotes-path(nonportable-private-system-apinotes-path
nonportable-system-include-path!nonportable-vector-initialization
nontrivial-memaccess
nsconsumed-mismatch
nsreturns-mismatch
null-arithmetic
null-character
null-conversion
null-dereference
null-pointer-arithmetic
null-pointer-subtraction
nullability
nullability-completeness"nullability-completeness-on-arrays
nullability-declspec
nullability-extension#nullability-inferred-on-nested-type
nullable-to-nonnull-conversion+objc-autosynthesis-property-ivar-name-match
objc-bool-constant-conversion
objc-boxing
objc-circular-container
objc-cocoa-api
objc-designated-initializers
objc-dictionary-duplicate-keys
objc-flexible-array
objc-forward-class-redefinition
objc-interface-ivars
objc-literal-compare
objc-literal-conversion
objc-load-method
objc-macro-redefinition
objc-messaging-id
objc-method-access
objc-missing-property-synthesis
objc-missing-super-calls
objc-multiple-method-names"objc-noncopy-retain-block-property
objc-nonunified-exceptions#objc-property-assign-on-object-type
objc-property-implementation
objc-property-implicit-mismatch*objc-property-matches-cocoa-ownership-rule
objc-property-no-attribute
objc-property-synthesis#objc-protocol-method-implementation objc-protocol-property-synthesis
objc-protocol-qualifiers"objc-readonly-with-setter-property
objc-redundant-api-use
objc-redundant-literal-use
objc-root-class
objc-signed-char-bool/objc-signed-char-bool-implicit-float-conversion-objc-signed-char-bool-implicit-int-conversion
objc-string-compare
objc-string-concatenation
objc-unsafe-perform-selector
objc-weak-compat
old-style-cast
old-style-definition
opencl-unsupported-rgba
openmp
openmp-51-extensions
openmp-clauses
openmp-loop-form
openmp-mapping
openmp-target
option-ignored!ordered-compare-function-pointers
ossharedptr-misuse
out-of-line-declaration
out-of-scope-functionover-aligned
overflow
overlength-strings
overloaded-shift-op-parentheses
overloaded-virtual
override-init
override-module
overriding-method-mismatch
overriding-t-option
packed
padded
parentheses
parentheses-equality
partial-availability
pass
pass-analysis
pass-failed
pass-missed
pch-date-time
pedantic
pedantic-core-features
pedantic-macros
pessimizing-move
pointer-arith
pointer-bool-conversion
pointer-compare
pointer-integer-comparepointer-sign
pointer-to-enum-cast
pointer-to-int-cast
pointer-type-mismatch
poison-system-directories
potentially-direct-selector potentially-evaluated-expression
pragma-clang-attribute
pragma-once-outside-header
pragma-pack
pragma-pack-suspicious-include#pragma-system-header-outside-header
pragmas
pre-c++14-compat
pre-c++14-compat-pedantic
pre-c++17-compat
pre-c++17-compat-pedantic
pre-c++20-compat
pre-c++20-compat-pedantic
pre-c++2b-compat
pre-c++2b-compat-pedantic
pre-c2x-compat
pre-c2x-compat-pedantic
pre-openmp-51-compat&predefined-identifier-outside-function
private-extern
private-header
private-module
profile-instr-missing
profile-instr-out-of-date
profile-instr-unprofiled
property-access-dot-syntax
property-attribute-mismatch
protocol%protocol-property-synthesis-ambiguity
psabi
ptrauth-null-pointers
qualified-void-return-type"quoted-include-in-framework-header
range-loop-analysis
range-loop-bind-reference
range-loop-construct
readonly-iboutlet-property
receiver-expr
receiver-forward-class
redeclared-class-member
redundant-consteval-if
redundant-decls
redundant-move
redundant-parens
register
reinterpret-base-class
remark-backend-plugin
reorderreorder-ctor
reorder-init-list
requires-super-attribute
reserved-id-macro
reserved-identifier
reserved-macro-identifier
reserved-user-defined-literal
restrict-expansion
retained-language-linkage
return-stack-address
return-std-move
return-type
return-type-c-linkage
rewrite-not-bool
round-trip-cc1-args
rtti
sanitize-address
search-path-usage
section
selector
selector-type-mismatch
self-assign
self-assign-field
self-assign-overloaded
self-move
semicolon-before-method-body
sentinel
sequence-point
serialized-diagnostics
shadow
shadow-allshadow-field
shadow-field-in-constructor$shadow-field-in-constructor-modified
shadow-ivar
shadow-uncaptured-local
shift-count-negative
shift-count-overflow
shift-negative-value
shift-op-parentheses
shift-overflow
shift-sign-overflow
shorten-64-to-32sign-compare
sign-conversion
sign-promo
signed-enum-bitfield
signed-unsigned-wchar
sizeof-array-argument
sizeof-array-decay
sizeof-array-div
sizeof-pointer-div
sizeof-pointer-memaccess
slash-u-filenameslh-asm-goto
sometimes-uninitialized
source-mgr
source-uses-openmp
spir-compat
stack-exhausted
stack-protector
static-float-init
static-in-inline$static-inline-explicit-instantiation
static-local-in-inline
static-self-init
stdlibcxx-not-found
strict-aliasing
strict-aliasing=0
strict-aliasing=1
strict-aliasing=2
strict-overflow
strict-overflow=0
strict-overflow=1
strict-overflow=2
strict-overflow=3
strict-overflow=4
strict-overflow=5"strict-potentially-direct-selector
strict-prototypes
strict-selector-match
string-compare
string-concatenation
string-conversion
string-plus-char
string-plus-int
strlcpy-strlcat-sizestrncat-size
suggest-destructor-override
suggest-override
super-class-method-mismatch
suspicious-bzero
suspicious-memaccess
swift-name-attribute
swift-newtype-attribute
switch
switch-bool
switch-default
switch-enum%sync-fetch-and-nand-semantics-changed
synth
tautological-bitwise-compare
tautological-compare
tautological-constant-compare&tautological-constant-in-range-compare*tautological-constant-out-of-range-compare
tautological-objc-bool-compare
tautological-overlap-compare
tautological-pointer-compare
tautological-type-limit-compare
tautological-undefined-compare'tautological-unsigned-char-zero-compare'tautological-unsigned-enum-zero-compare"tautological-unsigned-zero-compare tautological-value-range-compare
tcb-enforcement$tentative-definition-incomplete-type
thread-safety
thread-safety-analysis
thread-safety-attributes
thread-safety-beta
thread-safety-negative
thread-safety-precise
thread-safety-reference
thread-safety-verbose
trigraphs
type-limits
type-safety
typedef-redefinition
typename-missing
unable-to-open-stats-file
unavailable-declarations
undeclared-selector
undefundef-prefix
undefined-bool-conversion
undefined-func-template
undefined-inline
undefined-internal
undefined-internal-type
undefined-reinterpret-cast
undefined-var-template
underaligned-exception-object
unevaluated-expression
unguarded-availability
unguarded-availability-new
unicode
unicode-homoglyph
unicode-whitespace
unicode-zero-width
uninitialized
uninitialized-const-reference
unknown-argument
unknown-assumption
unknown-attributes
unknown-cuda-version
unknown-escape-sequence
unknown-pragmas
unknown-sanitizers
unknown-warning-option
unnamed-type-template-args
unneeded-internal-declaration
unneeded-member-function
unreachable-code
unreachable-code-aggressive
unreachable-code-break
unreachable-code-fallthrough
unreachable-code-loop-increment
unreachable-code-return
unsequenced
unsupported-abs
unsupported-availability-guard
unsupported-cb#unsupported-dll-base-class-template
unsupported-floating-point-opt
unsupported-friend
unsupported-gpopt
unsupported-nan
unsupported-target-opt
unsupported-visibility
unusable-partial-specialization
unused
unused-argument
unused-but-set-parameter
unused-but-set-variable
unused-command-line-argument
unused-comparison
unused-const-variable
unused-exception-parameter
unused-function
unused-getter-return-valueunused-label
unused-lambda-capture
unused-local-typedef
unused-local-typedefs
unused-macros
unused-member-function
unused-parameter
unused-private-field
unused-property-ivar
unused-result
unused-templateunused-value
unused-variable
unused-volatile-lvalue
used-but-marked-unused
user-defined-literals
user-defined-warnings
varargs
variadic-macros
vec-elem-size
vector-conversion
vector-conversionsvexing-parse
visibility
vla-extension
void-pointer-to-enum-cast
void-pointer-to-int-cast
void-ptr-dereference
volatile-register-var
wasm-exception-spec
weak-template-vtablesweak-vtables
writable-strings
write-strings
xor-used-as-pow
zero-as-null-pointer-constant
zero-length-array
API notes file not found at '%0'
NSInvocation's %0 is not safe to be used with an object with ownership other than __unsafe_unretained
invalid type %0 in asm %select{input|output}1
invalid type %0 in asm input for constraint '%1'
%0 attribute cannot be applied to types
uuid attribute contains a malformed GUID
cannot open file '%0': %1
%select{pointer|reference}0 to %select{|subobject of }1%select{type_info object|string literal|temporary object|predefined '%3' variable}2 is not allowed in a template argument
'size_t' suffix for literals is a C++2b feature
only special member functions %select{|and comparison operators }0may be defaulted
only functions can have deleted definitions
duplicate '%0' declaration specifier
enumeration cannot be a template
expected %0
expected %1 after %0
method name referenced in property setter attribute must end with ':'
expected %0 or %1
expected namespace name
expected string literal %select{in %1|for diagnostic message in static_assert|for optional message in 'availability' attribute|for %select{language|source container}1 name in 'external_source_symbol' attribute}0
file '%0' modified since it was first processed
sorry, unsupported: file '%0' is too large for Clang to process
compile with '-ffixed-point' to enable fixed point types
'%0' is invalid in friend declarations
sorry, this include generates a translation unit too large for Clang to process.
integer literal is too large to be represented in any %select{signed |}0integer type
character literal with user-defined suffix cannot be used here
invalid feature combination: %0
%select{data member |non-public member function |static member function |user-declared constructor|user-declared destructor|operator |nested class }0%1 is not permitted within an interface type
numeric literal with user-defined suffix cannot be used here
invalid storage class specifier in function declarator
string literal with user-defined suffix cannot be used here
'%0' can only be used if the target supports the mfhc1 and mthc1 instructions
module '%0' is needed but has not been provided, and implicit use of module files is disabled
build a shadowed submodule '%0'
cyclic dependency in module '%0': %1
no handler registered for module format '%0'
%select{|umbrella }0header '%1' not found
could not build module '%0'
module '%0' not found
error in loading module '%0' from prebuilt module path
cannot rebuild module '%0' as it is already finalized
import of shadowed module '%0'
module '%0' %select{is incompatible with|requires}1 feature '%2'
[rewriter] %0
nullability specifier %0 conflicts with existing specifier %1
directive '#pragma omp %0' cannot contain more than one '%1' clause%select{| with '%3' name modifier| with 'source' dependence}2
directive '#pragma omp %0' requires the '%1' clause
options %0 and %1 are set to different values
feature %0 requires support of %1 feature
%0 does not support the '%1' %select{type qualifier|storage class specifier}2
'%0' is not supported in C++ for OpenCL
option '%0' cannot be specified on this target
option '%0' cannot be specified with '%1'
option '%0' cannot be specified without '%1'
redefinition of parameter %0
%0 only allowed in __except block or filter expression
%0 only allowed in __except filter expression
%0 only allowed in __finally block
expected '__except' or '__finally' block
%select{signed |}0'size_t' literal is out of range of possible %select{signed |}0'size_t' values
unknown target ABI '%0'
unknown target CPU '%0'
unknown FP unit '%0'
unknown target triple '%0', please use -triple or -arch
ABI '%0' is not supported on CPU '%1'
ABI '%0' is not supported for '%1'
micromips is not supported for target CPU '%0'
execute only is not supported for the %0 sub-architecture
the '%0' unit is not supported with this instruction set
-mcmse is not supported for %0
the %0 sub-architecture does not support unaligned accesses
this value is too large for this fixed point type
unable to make temporary file: %0
unable to rename temporary '%0' to output file '%1': '%2'
conversion between fixed point and %0 is not yet supported
no analyzer checkers or packages are associated with '%0'
'%0' can only be used with the '%1' ABI
%0 byte order mark detected in '%1', but encoding is not supported
must use '%1' tag to refer to type %0%select{| in this scope}2
'long long' is an extension when C99 mode is not enabled
'diagnose_if' is a clang extension
'enable_if' is a clang extension
'long long' is a C++11 extension
'size_t' suffix for literals is a C++2b extension
duplicate '%0' declaration specifier
integer literal is too large to be represented in a signed integer type, interpreting as unsigned
integer literal is too large to be represented in type 'long' and is subject to undefined behavior under C++98, interpreting as 'unsigned long'; this literal will %select{have type 'long long'|be ill-formed}0 in C++11 onwards
variadic templates are a C++11 extension
duplicate '%0' declaration specifier
too many errors emitted, stopping now
also found
%select{pointer|reference}0 to %select{|subobject of }1%select{type_info object|string literal|temporary object|predefined '%3' variable}2 is not allowed in a template argument
%1 %0 is hidden by a non-type declaration of %0 here
declared here
previous case defined here
forward declaration of %0
subexpression not valid in a constant expression
to match this %0
[rewriter] %0
one possibility
#pragma entered here
previous declaration is here
previous definition is here
previous implicit declaration is here
previous use is here
use -analyzer-disable-all-checks to disable all static analyzer checkers
definition of %0 is not complete until the closing '}'
using
valid target CPU values are: %0
could not acquire lock file for module '%0': %1
timed out waiting to acquire lock file for module '%0'
private API notes file for module '%0' should be named '%0_private.apinotes', not '%1'
private API notes file for module '%0' should be named '%0_private.apinotes', not '%1'
[rewriter] call returns pointer to GC managed memory; it will become unmanaged in ARC
conflicting nullability specifier on parameter types, %0 conflicts with existing specifier %1
conflicting nullability specifier on return types, %0 conflicts with existing specifier %1
'consteval' specifier is incompatible with C++ standards before C++20
'size_t' suffix for literals is incompatible with C++ standards before C++2b
'long long' is incompatible with C++98
variadic templates are incompatible with C++98
duplicate definition of category %1 on interface %0
duplicate '%0' declaration specifier
'%0' is ignored since it is only supported for HIP
redeclaration of method parameter %0
redefinition of method parameter %0
[rewriter] %0
duplicate nullability specifier %0
integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C89; this literal will %select{have type 'long long'|be ill-formed}0 in C99 onwards
integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C++98; this literal will %select{have type 'long long'|be ill-formed}0 in C++11 onwards
%0 is a core feature in %select{OpenCL C|C++ for OpenCL}1 version %2 but not supported on this target
include location '%0' is unsafe for cross-compilation
Speculative load hardening does not protect functions with asm goto
Unable to protect inline asm that clobbers stack pointer against stack clash
stack nearly exhausted; compilation time may suffer, and crashes due to stack overflow are likely
unknown attribute %0 ignored
The default Altivec ABI on AIX is not yet supported, use '-mabi=vec-extabi' for the extended Altivec ABI
TLS model '%0' is not yet supported on AIX
checker cannot be enabled with analyzer option '%0' == %1
invalid input for checker option '%0', that expects %1
checker '%0' has no option called '%1'
invalid input for analyzer-config option '%0', that expects %1 value
analyzer-config option '%0' should contain only one '='
analyzer-config option '%0' has a key but no value
unknown analyzer-config '%0'
-fobjc-arc is not supported on platforms using the legacy runtime
-fobjc-arc is not supported on versions of OS X prior to 10.6
architecture '%0' does not support '%1' execution mode
original arguments parse failed, then succeeded in round-trip
generated arguments do not match in round-trip
generated arguments parse failed in round-trip
cmse is not compatible with %select{RWPI|ROPI}0
CPU '%0' does not support '%1' execution mode
'%0' not supported, please use -iquote instead
cannot deduce implicit triple value for -Xopenmp-target, specify triple using -Xopenmp-target=<triple>
alignment is not a power of 2 in '%0'
invalid argument '-mno-amdgpu-ieee' only allowed with relaxed NaN handling
option '%0' requires input to be LLVM bitcode
invalid argument '%0' not allowed with '%1'
invalid argument '%0' only allowed with '%1'
invalid offload arch combinations: '%0' and '%1' (for a specific processor, a feature should either exist in all offload archs, or not exist in any offload archs)
invalid target ID '%0'; format is a processor name followed by an optional colon-delimited list of features followed by an enable/disable sign (e.g., 'gfx908:sramecc+:xnack-')
-fembed-bitcode is not supported on versions of iOS prior to 6.0
cannot specify '%1' along with '%0'
cannot read configuration file '%0'
unable to open CC_PRINT_OPTIONS file: %0
the clang compiler does not support '%0'
the clang compiler does not support '%0' for C++ on Darwin/i386
the clang compiler does not support '%0', %1
the clang compiler does not support -pg option on %select{Darwin|versions of OS X 10.9 and later}0
%0 command failed with exit code %1 (use -v to see invocation)
unable to execute command: %0
%0 command failed due to signal (use -v to see invocation)
compilation database '%0' could not be opened: %1
configuration file '%0' does not exist
configuration file '%0' cannot be found
conflicting deployment targets, both '%0' and '%1' are present in environment
unsupported CUDA gpu architecture: %0
unsupported architecture '%0' for host compilation
GPU arch %0 is supported by CUDA versions between %1 and %2 (inclusive), but installation at %3 is %4; use '--cuda-path' to specify a different CUDA install, pass a different GPU arch with '--cuda-gpu-arch', or pass '--no-cuda-version-check'
OpenMP target device debugging enabled with incompatible runtime
defsym must be of the form: sym=value: %0
value is not an integer: %0
no more than one option '--config' is allowed
-emit-llvm cannot be used when linking
'-fopenmp-targets' must be used in conjunction with a '-fopenmp' option compatible with offloading; e.g., '-fopenmp=libomp' or '-fopenmp=libiomp5'
header file '%0' input '%1' does not match the type of prior input in api extraction; use '-x %2' to override
failing because %select{environment variable 'FORCE_CLANG_DIAGNOSTICS_CRASH' is set|'-gen-reproducer' is used}0
GNUstep Objective-C runtime version %0 incompatible with target binary format
OpenMP target architecture '%0' pointer size is incompatible with host '%1'
--rtlib=libgcc requires --unwindlib=libgcc
invalid Xarch argument: '%0', options requiring arguments are unsupported
invalid -Xopenmp-target argument: '%0', options requiring arguments are unsupported
invalid arch name '%0'
invalid argument '%0' to -%1
invalid CoreFoundation Runtime ABI '%0'; must be one of 'objc', 'standalone', 'swift', 'swift-5.0', 'swift-4.2', 'swift-4.1'
invalid Darwin version number: %0
invalid argument in '%0', only integer or 'auto' is supported
invalid output type '%0' for use with gcc tool
-mhvx-length is not supported without a -mhvx/-mhvx= flag
invalid integral value '%1' in '%0'
invalid deployment target for -stdlib=libc++ (requires %0 or later)
invalid linker name in argument '%0'
invalid argument '%0' to -malign-branch=; each element must be one of: %1
invalid float ABI '%0'
invalid thread pointer reading mode '%0'
OBJECT_MODE setting %0 is not recognized and is not a valid setting
OpenMP target is invalid: '%0'
invalid OS value '%0' in '%1'
cannot use '%0' output with multiple -arch options
invalid option '%0' not of the form <from-file>;<to-file>
invalid arch name '%0', %1
invalid arch name '%0', %1 '%2'
invalid runtime library name in argument '%0'
invalid library name in argument '%0'
'-msve-vector-bits' is not supported without SVE enabled
invalid thread model '%0' in '%1' for this target
invalid unwind library name in argument '%0'
invalid value '%1' in '%0'
invalid value '%1' in '%0', expected one of: %2
invalid version number in '%0'
LTO requires -fuse-ld=lld
malformed sanitizer coverage ignorelist: '%0'
malformed sanitizer coverage whitelist: '%0'
malformed sanitizer ignorelist: '%0'
option '-MG' requires '-M' or '-MM'
'-fminimize-whitespace' invalid for input of type %0
missing argument to '%0'
argument to '%0' is missing (expected %1 value%s1)
mixed CUDA and HIP compilation is not supported
header file '%0' input type '%1' does not match type of prior input in module compilation; use '-x %2' to override
option '-fmodules-validate-once-per-build-session' requires '-fbuild-session-timestamp=<seconds since Epoch>' or '-fbuild-session-file=<file>'
invalid value '%1' in '%0', value must be 'none' or a positive integer
option '--config' is not allowed inside configuration file
'%0': unable to use AST files with this tool
cannot find CUDA installation; provide its path via '--cuda-path', or pass '-nocudainc' to build without CUDA includes
cannot find libdevice for %0; provide path to different CUDA installation via '--cuda-path', or pass '-nocudalib' to build without linking with libdevice
cannot find HIP runtime; provide its path via '--rocm-path', or pass '-nogpuinc' to build without HIP runtime
no input files
'%0': unable to pass LLVM bit-code files to linker
'%0': unable to use module files with this tool
[no]neon is not accepted as modifier, please use [no]simd instead
cannot find ROCm device library%select{| for %1}0; provide its path via '--rocm-path' or '--rocm-device-lib-path', or pass '-nogpulib' to build without ROCm device library
no such file or directory: '%0'
no such file or directory: '%0'; did you mean '%1'?
provided host compiler IR file '%0' is required to generate code for OpenMP target regions but cannot be found
target '%0' is not a supported OpenMP host target
bitcode library '%0' does not exist
NVPTX target requires CUDA 9.2 or above; CUDA %0 detected
no library '%0' found in the default clang lib directory or in LIBRARY_PATH; use '--libomptarget-%1-bc-path' to specify %1 bitcode library
unknown remark serializer format: '%0'
in pattern '%1': %0
cannot specify '%0%1' when compiling multiple source files
cannot specify -o when generating multiple output files
incorrect format for -preamble-bytes=N,END
target '%0' does not support native pointer authentication
ROPI is not compatible with c++
embedded and GOT-based position independence are incompatible
invalid value '%1' in '%0', value must be '%2' or greater
unsupported '-target-variant' value '%0'; use 'ios-macabi' instead
'-ftrivial-auto-var-init-stop-after=*' only accepts positive integers
'-ftrivial-auto-var-init-stop-after=*' is used without '-ftrivial-auto-var-init=zero' or '-ftrivial-auto-var-init=pattern'
'-ftrivial-auto-var-init=zero' hasn't been enabled; enable it at your own peril for benchmarking purpose only with '-enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang'
unable to remove file: %0
unable to set working directory: %0
cannot determine AMDGPU architecture: %0; consider passing it via '--march'
unknown argument: '%0'
unknown argument '%0'; did you mean '%1'?
unknown '-mindirect-jump=' option '%0'
language not recognized: '%0'
unknown or ill-formed Objective-C runtime '%0'
-E or -x required when input is from standard input
use /Tc or /Tp to set input type for standard input
%0 is not supported with -fembed-bitcode
the second argument of '-fpatchable-function-entry' must be smaller than the first argument
'-mindirect-jump=%0' is unsupported with the '%1' architecture
unsupported value '%0' for -linker option
position-independent code requires '-mabicalls'
unsupported option '%0'
unsupported option '%0' for language mode '%1'
unsupported option '%0' for target '%1'
unsupported option '%0'; did you mean '%1'?
unsupported argument '%1' to option '%0'
unsupported runtime library '%0' for platform '%1'
unsupported use of internal gcc -Z option '%0'
invalid branch protection option '%0' in '%1'
invalid C++ ABI name '%0'
32-bit targets are not supported when building for Mac Catalyst
invalid sls hardening option '%0' in '%1'
there is no external assembler that can be used on this platform
-fobjc-weak is not supported on the current deployment target
-fobjc-weak is not supported in Objective-C garbage collection
-mharden-sls is only supported on armv7-a or later
'-fsanitize=memtag' requires hardware support (+memtag)
the target architecture '%0' is not supported by the target '%1'
-ftest-module-file-extension argument '%0' is not of the required form 'blockname:major:minor:hashed:user info'
C++ ABI '%0' is not supported on target triple '%1'
generated arguments #%0 in round-trip: %1
original arguments in round-trip: %0
AddressSanitizer doesn't support linking with debug runtime libraries yet
diagnostic msg: %0
was searched for in the directory: %0
the last '/TC' or '/TP' option takes precedence over earlier instances
use '%0'%select{| or '%3'|, '%3', or '%4'|, '%3', '%4', or '%5'}2 for '%1' standard
-verify prefixes must start with a letter and contain only alphanumeric characters, hyphens, and underscores
use '--' to treat subsequent arguments as filenames
generated arguments #%0 in round-trip: %1
-O4 is equivalent to -O3
ignoring -fapple-kext which is valid for C++ and Objective-C++ only
cannot compress debug sections (zlib not installed)
unknown platform, assuming -mfloat-abi=%0
support for linking stdlibs for microcontroller '%0' is not implemented
no avr-gcc installation can be found on the system, cannot link standard libraries
no avr-libc installation can be found on the system, cannot link standard libraries
support for passing the data section address to the linker for microcontroller '%0' is not implemented
no target microcontroller specified on command line, cannot link standard libraries, please pass -mmcu=<mcu name>
standard library not linked and so no interrupt vector table or compiler runtime routines will be linked
the clang compiler does not support '%0'
compiler_rt-static.a is being deprecated, please use -fapple-link-rtlib instead. Clang will substitute -lcompiler_rt-static with libclang_rt.a
SDK settings were ignored as 'SDKSettings.json' could not be parsed
argument '%0' is deprecated, use '%1' instead
libstdc++ is deprecated; move to libc++%select{ with a minimum deployment target of %1|}0
argument '%0' requires profile-guided optimization information
implicitly disabling vptr sanitizer because rtti wasn't enabled
debug information option '%0' is not supported; requires DWARF-%2 but target '%1' only provides DWARF-%3
joined argument expects additional value: '%0'
option '-ffine-grained-bitfield-accesses' cannot be enabled together with a sanitizer; flag ignored
'-fuse-ld=' taking a path is deprecated; use '--ld-path=' instead
-fglobal-isel support for the '%0' architecture is incomplete
-fglobal-isel support is incomplete for this architecture at the current optimization level
%0: '%1' input unused%select{ when '%3' is present|}2
%0: '%1' input unused in cpp mode
ignoring invalid /arch: argument '%0'; for %select{64|32}1-bit expected one of %2
include path for libstdc++ headers not found; pass '-stdlib=libc++' on the command line to use the libc++ standard library instead
'%0' does not support '-moutline-atomics'; flag ignored
'%0' does not support '-moutline'; flag ignored
the given MCU supports %0 hardware multiply, but '-mhwmult' is set to %1
no MCU device specified, but '-mhwmult' is set to 'auto', assuming no hardware multiply; use '-mmcu' to specify an MSP430 device, or '-mhwmult' to set the hardware multiply type explicitly
the given MCU does not support hardware multiply, but '-mhwmult' is set to %0
unable to find a Visual Studio installation; try running Clang from a developer command prompt
CUDA version%0 is newer than the latest%select{| partially}1 supported version %2
the object size sanitizer has no effect at -O0, but is explicitly enabled: %0
OpenMP offloading target '%0' is similar to target '%1' already specified; will be ignored
optimization level '%0' is not supported; using '%1%2' instead
overriding '%0' option with '%1'
CUDA version %0 is only partially supported
precompiled header '%0' was ignored because '%1' is not first '-include'
%0: previously preprocessed input%select{ unused when '%2' is present|}1
option '%0' was ignored by the PS4 toolchain, using '-fPIC'
environment variable SCE_ORBIS_SDK_DIR is set, but points to invalid or nonexistent directory '%0'
treating '%0' input as '%1' when in C++ mode, this behavior is deprecated
unable to find %0 directory, expected to be in '%1'
unknown argument ignored in clang-cl: '%0'
unknown argument ignored in clang-cl '%0'; did you mean '%1'?
debug information option '%0' is not supported for target '%1'
ignoring '-mgpopt' option as it cannot be used with %select{|the implicit usage of }0-mabicalls
ignoring '-mlong-calls' option as it is not currently supported with %select{|the implicit usage of }0-mabicalls
optimization flag '%0' is not supported for target '%1'
ignoring '%0' option as it cannot be used with %select{implicit usage of|}1 -mabicalls and the N64 ABI
ignoring '-msmall-data-limit=' with -mcmodel=large for -fpic or RV64
argument unused during compilation: '%0'
auto-vectorization requires HVX, use -mhvx to enable it
support for '/Yc' with more than one source file not implemented yet; flag ignored
support for '/Yc' and '/Yu' with different filenames not implemented yet; flags ignored
the flag '%0' has been deprecated and will be ignored
optimization flag '%0' is not supported
ignoring -fdiscard-value-names for LLVM Bitcode
ignoring invalid -ftabstop value '%0', using default value %1
ignoring -fverify-debuginfo-preserve-export=%0 because -fverify-debuginfo-preserve wasn't enabled
using sysroot for '%0' but targeting '%1'
invalid iOS deployment version '%0', iOS 10 is the maximum deployment target for 32-bit targets
no such sysroot directory: '%0'
'/U%0' treated as the '/U' option
ignoring '-mabs=2008' option because the '%0' architecture does not support it
ignoring '-mabs=legacy' option because the '%0' architecture does not support it
ignoring '-mcompact-branches=' option because the '%0' architecture does not support it
ignoring extension '%0' because the '%1' architecture does not support it
ignoring '-mnan=2008' option because the '%0' architecture does not support it
ignoring '-mnan=legacy' option because the '%0' architecture does not support it
%select{alias|ifunc}0 must point to a defined %select{variable or |}1function
AVX vector %select{return|argument}0 of type %1 without '%2' enabled changes the ABI
%0 needs target feature %1
%select{alias|ifunc}0 definition is part of a cycle
definition with same mangled name '%0' as another definition
action %0 not compiled in
call to %0 declared with 'error' attribute: %1
-dependency-file requires at least one -MT or -MQ option
error in backend: %0
error opening '%0': %1
error reading '%0'
error reading stdin: %0
expected a clang compiler command
unable to handle compilation, expected exactly one compiler job in '%0'
invalid value '%1' in '%0'; alignment must be a power of 2
cannot locate code-completion file %0
invalid exception model '%select{none|sjlj|seh|dwarf|wasm}0' for target '%1'
unable to find plugin '%0'
cannot link module '%0': %1
no suitable precompiled header file found in directory '%0'
could not remap from missing file '%0'
could not remap file '%0' to the contents of file '%1'
unable to create target: '%0'
unable to interface with target machine
unable to load basic block sections function list: '%0'
unable to load PCH file
unable to load plugin '%0': '%1'
unable to open output file '%0': '%1'
initializing value is out of valid range
always_inline function %1 requires target feature '%2', but would be inlined into function %0 that is compiled without support for '%2'
header module compilation requires '-fmodules', '-std=c++20', or '-fmodules-ts'
ifunc resolver function must return a pointer
inline asm is used in the module with -fno-gnu-inline-asm
invalid virtual filesystem overlay file '%0'
no module named '%0' declared in module map file '%1'
no module name provided; specify one with -fmodule-name=
virtual filesystem overlay file '%0' not found
module compilation requires '-fmodules'
cannot create includes file for module %0: %1
module header file '%0' not found
module interface compilation requires '-std=c++20' or '-fmodules-ts'
module map file '%0' not found
file '%0' specified by '-fmodules-embed-file=' not found
-fapinotes was provided without -fmodules-cache-path=<directory>
no submodule named %0 in module '%1'
no submodule named %0 in module '%1'; did you mean '%2'?
must specify system root with -isysroot when building a relocatable PCH file
test module file extension '%0' has different version (%1.%2) than expected (%3.%4)
reference to marker '%0' is ambiguous
'%0' diagnostics %select{expected|seen}1 but not %select{seen|expected}1: %2
invalid expected %0: %1
%select{expected|'expected-no-diagnostics'}0 directive cannot follow %select{'expected-no-diagnostics' directive|other expected directives}0
invalid range following '-' in expected %0
cannot find end ('}}') of expected %0
file '%0' could not be located in expected %1
missing or invalid line number following '@' in expected %0
cannot find start of regex ('{{') in %0
cannot find start ('{{') of expected %0
no expected directives found: consider use of 'expected-no-diagnostics'
use of undefined marker '%0'
qualifier 'const' is needed for variables in address space '%0'
firebloom is supported only for C language
could not determine the original source location for %0:%1:%2
instantiated into assembly here
linking module '%0': %1
FIX-IT applied suggested code changes
FIX-IT unable to apply suggested code changes
FIX-IT unable to apply suggested code changes in a macro
FIX-IT detected an error it cannot fix
current API version is '%0', but plugin was compiled with version '%1'
macro was %select{defined|#undef'd}0 here
module imported here
module defined here
ambiguous marker '%0' is defined here
%0; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop. If the arrays will always be independent specify '#pragma clang loop vectorize(assume_safety)' before the loop or provide the '__restrict__' qualifier with the independent array arguments. Erroneous results will occur if these options are incorrectly applied!
%0; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'.
producing index data for module file '%0'
building module '%0' as '%1'
finished building module '%0'
locking '%0' to build module '%1'
%select{alias|ifunc}2 will always resolve to %0 even if weak definition of %1 is overridden
%select{alias|ifunc}1 will not be in section '%0' but in the same section as the %select{aliasee|resolver}2
misaligned atomic operation may incur significant performance penalty; the expected alignment (%0 bytes) exceeds the actual alignment (%1 bytes)
large atomic operation may incur significant performance penalty; the access size (%0 bytes) exceeds the max lock-free size (%1  bytes)
AVX vector %select{return|argument}0 of type %1 without '%2' enabled changes the ABI
-fbounds-attributes-cxx-experimental without -fbounds-attributes is ignored
overriding currently unsupported use of floating point exceptions on this target
overriding currently unsupported rounding mode on this target
call to %0 declared with 'warning' attribute: %1
unable to open CC_LOG_DIAGNOSTICS file: %0 (using stderr)
unable to open CC_PRINT_HEADERS file: %0 (using stderr)
-fconcepts-ts is deprecated - use '-std=c++20' for Concepts support
stack frame size (%0) exceeds limit (%1) in '%2'
linking module '%0': %1
macro '%0' contains embedded newline; text after the newline is ignored
overriding the module target triple with %0
unable to open file %0 for serializing diagnostics (%1)
Received warning after diagnostic serialization teardown was underway: %0
unable to merge a subprocess's serialized diagnostics
unable to open statistics output file '%0': '%1'
FIX-IT detected errors it could not fix; no output will be generated
checker plugin '%0' is not compatible with this version of the analyzer
missing submodule '%0'
%select{definition|#undef}0 of configuration macro '%1' has no effect on the import of '%2'; pass '%select{-D%1=...|-U%1}0' on the command line to configure the module
module file %0 cannot be loaded due to a configuration mismatch with the current compilation
no submodule named %0 in module '%1'; using top level '%2'
%0 does not support the option '%1'
profile data may be incomplete: of %0 function%s0, %1 %plural{1:has|:have}1 no data
profile data may be out of date: of %0 function%s0, %1 %plural{1:has|:have}1 mismatched data that will be ignored
no profile data available for file "%0"
unknown %select{warning|remark}0 option '%1'%select{|; did you mean '%3'?}2
unknown %0 warning specifier: '%1'
file '%1' is not a valid precompiled %select{PCH|module|AST}0 file
%select{PCH|module|AST}0 file '%1' not found%select{|: %3}2
%select{PCH|module|AST}0 file '%1' is out of date and needs to be rebuilt%select{|: %3}2
file '%0' has been modified since the %select{precompiled header|module file|AST file}1 '%2' was built: %select{size|mtime|content}3 changed%select{| (was %5, now %6)}4
input is not a PCH file: '%0'
file '%0' from the precompiled header has been overridden
malformed or corrupted AST file: '%0'
malformed block record in PCH file: '%0'
unable to read PCH file %0: '%1'
module '%0' %select{in|imported by}4 AST file '%1' found in a different module map file (%2) than when the importing AST file was built (%3)
module '%0' in AST file '%1' %select{(imported by AST file '%2') |}4is not defined in any loaded module map file; maybe you need to load '%3'?
module '%0' was built in directory '%1' but now resides in directory '%2'
module '%0' %select{uses|does not use}1 additional module map '%2'%select{| not}1 used when the module was built
module '%0' is defined in both '%1' and '%2'
module file '%0' is missing its top-level submodule
AST file '%0' was not built as a module
cannot emit module %0: %select{size|mtime}1 must be explicitly specified for missing header file "%2"
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{%4 base %plural{1:class|:classes}4|%4 virtual base %plural{1:class|:classes}4|%ordinal4 base class with type %5|%ordinal4 %select{non-virtual|virtual}5 base class %6|%ordinal4 base class %5 with %select{public|protected|private|no}6 access specifier}3
%q0 has different definitions in different modules; %select{definition in module '%2' is here|defined here}1
instantiation of %q0 is different in different modules
%q0 has different definitions in different modules; %select{definition in module '%2'|defined here}1 first difference is %select{enum that is %select{not scoped|scoped}4|enum scoped with keyword %select{struct|class}4|enum %select{without|with}4 specified type|enum with specified type %4|enum with %4 element%s4|%ordinal4 element has name %5|%ordinal4 element %5 %select{has|does not have}6 an initilizer|%ordinal4 element %5 has an initializer|}3
%q0 has different definitions in different modules; %select{definition in module '%2'|defined here}1 first difference is %select{return type is %4|%ordinal4 parameter with name %5|%ordinal4 parameter with type %5%select{| decayed from %7}6|%ordinal4 parameter with%select{out|}5 a default argument|%ordinal4 parameter with a default argument|function body}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{end of class|public access specifier|private access specifier|protected access specifier|static assert|field|method|type alias|typedef|data member|friend declaration|function template|method|instance variable|property}3
%0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{static assert with condition|static assert with message|static assert with %select{|no }4message|field %4|field %4 with type %5|%select{non-|}5bitfield %4|bitfield %4 with one width expression|%select{non-|}5mutable field %4|field %4 with %select{no|an}5 initalizer|field %4 with an initializer|%select{method %5|constructor|destructor}4|%select{method %5|constructor|destructor}4 is %select{not deleted|deleted}6|%select{method %5|constructor|destructor}4 is %select{not defaulted|defaulted}6|%select{method %5|constructor|destructor}4 is %select{|pure }6%select{not virtual|virtual}7|%select{method %5|constructor|destructor}4 is %select{not static|static}6|%select{method %5|constructor|destructor}4 is %select{not volatile|volatile}6|%select{method %5|constructor|destructor}4 is %select{not const|const}6|%select{method %5|constructor|destructor}4 is %select{not inline|inline}6|%select{method %5|constructor|destructor}4 that has %6 parameter%s6|%select{method %5|constructor|destructor}4 with %ordinal6 parameter of type %7%select{| decayed from %9}8|%select{method %5|constructor|destructor}4 with %ordinal6 parameter named %7|%select{method %5|constructor|destructor}4 with %ordinal6 parameter with%select{out|}7 a default argument|%select{method %5|constructor|destructor}4 with %ordinal6 parameter with a default argument|%select{method %5|constructor|destructor}4 with %select{no |}6template arguments|%select{method %5|constructor|destructor}4 with %6 template argument%s6|%select{method %5|constructor|destructor}4 with %6 for %ordinal7 template argument|%select{method %5|constructor|destructor}4 with %select{no body|body}6|%select{method %5|constructor|destructor}4 with body|%select{typedef|type alias}4 name %5|%select{typedef|type alias}4 %5 with underlying type %6|data member with name %4|data member %4 with type %5|data member %4 with%select{out|}5 an initializer|data member %4 with an initializer|data member %4 %select{is constexpr|is not constexpr}5|friend %select{class|function}4|friend %4|friend function %4|function template %4 with %5 template parameter%s5|function template %4 with %ordinal5 template parameter being a %select{type|non-type|template}6 template parameter|function template %4 with %ordinal5 template parameter %select{with no name|named %7}6|function template %4 with %ordinal5 template parameter with %select{no |}6default argument|function template %4 with %ordinal5 template parameter with default argument %6|function template %4 with %ordinal5 template parameter with one type|function template %4 with %ordinal5 template parameter %select{not |}6being a template parameter pack|return type is %4|method name %4|%select{class|instance}4 method|method with %select{no designater initializer|designater initializer}4|%select{no direct|direct}4 method|instance variable '%4' access control is %select{|@private|@protected|@public|@package}5|property name %4|property %4 with type %5|%select{default |}5'%select{none|readonly|getter|assign|readwrite|retain|copy|nonatomic|setter|atomic|weak|strong|unsafe_unretained|nullability|null_resettable|class|}4' property attribute|%select{no|'required'|'optional'}4 %select{property|method}5 control|with %ordinal4 protocol named %5|%select{no attribute|%5}4|}3
%q0 %select{with definition in module '%2'|defined here}1 has different definitions in different modules; first difference is this %select{||||static assert|field|method|type alias|typedef|data member|friend declaration|unexpected decl|method|instance variable|property}3
%q0 from module '%1' is not present in definition of %q2%select{ in module '%4'| provided earlier}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{%select{no super class|super class with type %5}4|%4 referenced %plural{1:protocol|:protocols}4|}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{unnamed template parameter|template parameter %4|template parameter with %select{no |}4default argument|template parameter with default argument}3
failed to hash content for '%0' because memory buffer cannot be retrieved
%0 is currently enabled, but was not in the PCH file
PCH file built from a different branch (%0) than the compiler (%1)
%0 was %select{disabled|enabled}1 in PCH file but is currently %select{disabled|enabled}2
%0 differs in PCH file vs. current file
definition of macro '%0' differs between the precompiled header ('%1') and the command line ('%2')
macro '%0' was %select{defined|undef'd}1 in the precompiled header but %select{undef'd|defined}1 on the command line
PCH was compiled with module cache path '%0', but the path is currently '%1'
%select{command line contains|precompiled header was built with}0 '-detailed-preprocessing-record' but %select{precompiled header was not built with it|it is not present on the command line}0
%select{AST file was|current translation unit is}0 compiled with the target feature '%1' but the %select{current translation unit is|AST file was}0 not
PCH file was compiled for the %0 '%1' but the current translation unit is being compiled for target '%2'
%select{command line contains|precompiled header was built with}0 '-undef' but %select{precompiled header was not built with it|it is not present on the command line}0
PCH file uses a newer PCH format that cannot be read
PCH file uses an older PCH format that is no longer supported
PCH file contains compiler errors
in first definition, possible difference is here
consider adding '%0' to the header search path
after modifying system headers, please delete the module cache at '%0'
this is generally caused by modules with the same name found in multiple paths
imported by %select{|module '%2' in }1'%0'
but in '%0' found %select{%2 base %plural{1:class|:classes}2|%2 virtual base %plural{1:class|:classes}2|%ordinal2 base class with different type %3|%ordinal2 %select{non-virtual|virtual}3 base class %4|%ordinal2 base class %3 with %select{public|protected|private|no}4 access specifier}1
definition in module '%0' is here
but in '%0' found %select{enum that is %select{not scoped|scoped}2|enum scoped with keyword %select{struct|class}2|enum %select{without|with}2 specified type|enum with specified type %2|enum with %2 element%s2|%ordinal2 element has name %3|%ordinal2 element %3 %select{has|does not have}4 an initializer|%ordinal2 element %3 has different initializer|}1
but in '%0' found %select{different return type %2|%ordinal2 parameter with name %3|%ordinal2 parameter with type %3%select{| decayed from %5}4|%ordinal2 parameter with%select{out|}3 a default argument|%ordinal2 parameter with a different default argument|a different body}1
but in '%0' found %select{end of class|public access specifier|private access specifier|protected access specifier|static assert|field|method|type alias|typedef|data member|friend declaration|function template|method|instance variable|property}1
but in '%0' found %select{static assert with different condition|static assert with different message|static assert with %select{|no }2message|field %2|field %2 with type %3|%select{non-|}3bitfield %2|bitfield %2 with different width expression|%select{non-|}3mutable field %2|field %2 with %select{no|an}3 initializer|field %2 with a different initializer|%select{method %3|constructor|destructor}2|%select{method %3|constructor|destructor}2 is %select{not deleted|deleted}4|%select{method %3|constructor|destructor}2 is %select{not defaulted|defaulted}4|%select{method %3|constructor|destructor}2 is %select{|pure }4%select{not virtual|virtual}5|%select{method %3|constructor|destructor}2 is %select{not static|static}4|%select{method %3|constructor|destructor}2 is %select{not volatile|volatile}4|%select{method %3|constructor|destructor}2 is %select{not const|const}4|%select{method %3|constructor|destructor}2 is %select{not inline|inline}4|%select{method %3|constructor|destructor}2 that has %4 parameter%s4|%select{method %3|constructor|destructor}2 with %ordinal4 parameter of type %5%select{| decayed from %7}6|%select{method %3|constructor|destructor}2 with %ordinal4 parameter named %5|%select{method %3|constructor|destructor}2 with %ordinal4 parameter with%select{out|}5 a default argument|%select{method %3|constructor|destructor}2 with %ordinal4 parameter with a different default argument|%select{method %3|constructor|destructor}2 with %select{no |}4template arguments|%select{method %3|constructor|destructor}2 with %4 template argument%s4|%select{method %3|constructor|destructor}2 with %4 for %ordinal5 template argument|%select{method %3|constructor|destructor}2 with %select{no body|body}4|%select{method %3|constructor|destructor}2 with different body|%select{typedef|type alias}2 name %3|%select{typedef|type alias}2 %3 with different underlying type %4|data member with name %2|data member %2 with different type %3|data member %2 with%select{out|}3 an initializer|data member %2 with a different initializer|data member %2 %select{is constexpr|is not constexpr}3|friend %select{class|function}2|friend %2|friend function %2|function template %2 with %3 template parameter%s3|function template %2 with %ordinal3 template paramter being a %select{type|non-type|template}4 template parameter|function template %2 with %ordinal3 template parameter %select{with no name|named %5}4|function template %2 with %ordinal3 template parameter with %select{no |}4default argument|function template %2 with %ordinal3 template parameter with default argument %4|function template %2 with %ordinal3 template parameter with different type|function template %2 with %ordinal3 template parameter %select{not |}4being a template parameter pack|different return type %2|method name %2|%select{class|instance}2 method|method with %select{no designater initializer|designater initializer}2|%select{no direct|direct}2 method|instance variable '%2' access control is %select{|@private|@protected|@public|@package}3|property name %2|property %2 with type %3|no written or default attribute for property|%select{no|'required'|'optional'}2 %select{property|method}3 control|with %ordinal2 protocol named %3|%select{no attribute|%3}2|}1
but in '%0' found %select{||||different static assert|different field|different method|different type alias|different typedef|different data member|different friend declaration|another unexpected decl|method|instance variable|property}1
definition has no member %0
but in '%0' found %select{%select{no super class|super class with type %3}2|%2 referenced %plural{1:protocol|:protocols}2|}1
declaration of %0 does not match
but in '%0' found %select{unnamed template parameter %2|template parameter %2|template parameter with %select{no |}2default argument|template parameter with different default argument}1
please rebuild precompiled header '%0'
'%0' required by '%1'
in second definition, possible difference is here
importing module '%0'%select{| into '%3'}2 from '%1'
duplicate module file extension block name '%0'
module file '%0' was validated as a system module and is now being imported as a non-system module; any difference in diagnostic options will be ignored
%select{precompiled header|module}0 uses __DATE__ or __TIME__
backslash and newline separated by space
_Pragma takes a parenthesized string literal
illegal character encoding in character literal
illegal character encoding in string literal
unexpected character <U+%0>
character <U+%0> not allowed %select{in|at the start of}1 an identifier
character too large for enclosing character literal type
version control conflict marker in file
'defined' cannot be used as a macro name
delimited escape sequence cannot be empty
invalid digit '%0' in escape sequence
expected '{' after '\%0' escape sequence
could not find ';' after @import
unexpected extra tokens at end of @import declaration
digit separator cannot appear at %select{start|end}0 of digit sequence
embedding a #%0 directive within macro arguments is not supported
%select{hex|octal}0 escape sequence out of range
expected a module name in '__building_module' expression
exponent has no digits
builtin feature check macro requires a parenthesized identifier
header file %0 (aka '%1') cannot be imported because it is not known to be a header unit
semicolon terminating header import declaration cannot be produced by a macro
hexadecimal floating %select{constant|literal}0 requires %select{an exponent|a significand}1
\%0 used with no following hex digits
invalid character '%0' character in raw string delimiter; use PREFIX( )PREFIX to delimit raw string
invalid argument to convert to character
invalid digit '%0' in %select{decimal|octal|binary}1 constant
invalid suffix '%0' on %select{integer|floating|fixed-point}1 constant
source file is not valid UTF-8
failure when lexing a string
configuration macros are only allowed in top-level modules
conflicting re-export of module '%0' as '%1' or '%2'
header attribute '%0' specified multiple times
expected an attribute name
expected configuration macro name after ','
expected ',' after conflicting module name
expected a message describing the conflict with '%0'
only '*' can be exported from an inferred submodule
expected a feature name
expected a header name after '%0'
expected a header attribute name ('size' or 'mtime')
expected %select{module exclusion with 'exclude'|'export *'}0
expected '{' to start module '%0'
expected '{' to start inferred submodule
expected %select{library|framework}0 name as a string
expected umbrella, header, submodule, or module export
expected a module map file name
expected module declaration
expected module name
expected '}'
expected ']' to close attribute
inferred framework modules cannot be 'explicit'
'explicit' is not permitted on top-level modules
inferred submodule cannot be a framework submodule
inferred submodules require a module with an umbrella
redefinition of inferred submodule
expected integer literal as value for header attribute '%0'
expected excluded module name
no module named '%0' in '%1'
no module named '%0' visible from '%1'
no module named '%0' %select{found|in '%2'}1, parent module must be defined before the submodule
expected a module name or '*'
redefinition of module '%0'
qualified module name can only be used to define modules at the top level
only top-level modules can be re-exported as public
only submodules and framework modules may be inferred with wildcard syntax
umbrella for module '%0' already covers this directory
skipping stray token
use declarations are only allowed in top-level modules
%select{wide|Unicode}0 character literals may not contain multiple characters
Pascal string is too long
'##' cannot appear at end of macro expansion
'##' cannot appear at start of macro expansion
editor placeholder in source file
expected 'set(attr1 [attr2 ...])'
expected 'begin' or 'end'
expected 'begin' or 'end'
pasting formed '%0', an invalid preprocessing token
':' without preceding '?'
%0 must be used within a preprocessing directive
division by zero in preprocessor expression
already inside '#pragma clang arc_cf_code_audited'
already inside '#pragma clang assume_nonnull'
duplicate macro parameter name %0
empty filename
#endif without #if
'#pragma clang arc_cf_code_audited' was not ended within this file
'#pragma clang assume_nonnull' was not ended within this file
error opening file '%0': %1
missing %1 after %0
expected comma in macro parameter list
expected end of line in preprocessor expression
expected identifier in macro parameter list
expected %select{identifier after '.' in |}0module name
expected ')' in preprocessor expression
expected value in expression
expected "FILENAME" or <FILENAME>
token is not a valid binary operator in a preprocessor subexpression
function-like macro %0 is not defined
invalid token at start of a preprocessor expression
'%0' file not found
'%0' file not found with <angled> %select{include|import}1; use "quotes" instead
'%0' file not found, did you mean '%1'?
cannot convert %0 token to an identifier
floating point literal in preprocessor expression
#import of type library is an unsupported Microsoft feature
cannot %select{#include files|import headers}0 inside '#pragma clang arc_cf_code_audited'
cannot %select{#include files|import headers}0 inside '#pragma clang assume_nonnull'
#include nested too deeply
main file cannot be included recursively when building a preamble
invalid preprocessing directive
can only poison identifier tokens
invalid token in macro parameter list
%select{character|integer}0 literal with user-defined suffix cannot be used in preprocessor constant expression
%select{#line|GNU line marker}0 directive requires a simple digit sequence
invalid filename for #line directive
#line directive requires a positive integer argument
invalid filename for line marker directive
invalid flag line marker directive
invalid line marker flag '2': cannot pop empty include stack
line marker directive requires a positive integer argument
macro name must be an identifier
invalid #ident directive
missing '(' following __VA_OPT__
macro name missing
missing ')' in macro parameter list
no module map available for module %0
submodule %0.%1 not declared in module map
no matching '#pragma clang module end' for this '#pragma clang module begin'
must specify '-fmodule-name=%0' to enter %select{|submodule of }1this module%select{ (current module is %3)|}2
no matching '#pragma clang module endbuild' for this '#pragma clang module build'
no matching '#pragma clang module begin' for this '#pragma clang module end'
nested parentheses not permitted in %0
C++ operator %0 (aka %1) used as a macro name
#pragma hdrstop not seen while attempting to use precompiled header
remainder by zero in preprocessor expression
'%select{#|#@}0' is not followed by a macro parameter
'%0' required for precompiled header not found
#include of '%0' not seen while attempting to %select{create|use}1 precompiled header
not currently inside '#pragma clang arc_cf_code_audited'
not currently inside '#pragma clang assume_nonnull'
unterminated conditional directive
attempt to use a poisoned identifier
__VA_OPT__ cannot be nested within its own replacement tokens
no macro named %0
'#pragma clang include_instead' cannot be used outside of system headers
header '%0' is an implementation detail; #include %select{'%2'|either '%2' or '%3'|one of %2}1 instead
pragma %select{message|warning|error}0 requires parenthesized string
pragma %0 requires a parenthesized string
raw string delimiter longer than 16 characters; use PREFIX( )PREFIX to delimit raw string
differing user-defined suffixes ('%0' and '%1') in string literal concatenation
too few arguments provided to function-like macro invocation
too many arguments provided to function-like macro invocation
universal character name refers to a control character
character '%0' cannot be specified by a universal character name
incomplete universal character name
invalid universal character
module %0 does not depend on a module exporting '%1'
unsupported non-standard concatenation of string literals
unterminated function-like macro invocation
missing terminating ')' character
unterminated /* comment
raw string missing terminating delimiter )%0"
'##' cannot appear at end of __VA_OPT__ argument
'##' cannot appear at start of __VA_OPT__ argument
escaped newline between */ characters at block comment end
binary integer literals are a GNU extension
binary integer literals are a C++14 extension
ISO C99 requires whitespace after the macro name
charizing operator #@ is a Microsoft extension
pasting two '/' tokens into a '//' comment is a Microsoft extension
treating Ctrl-Z as end-of-file is a Microsoft extension
delimited escape sequences are a Clang extension
'$' in identifier
embedding a directive within macro arguments has undefined behavior
empty character constant
empty macro arguments are a C99 feature
hexadecimal floating constants are a C99 feature
hexadecimal floating literals are a C++17 feature
// comments are not allowed in this language
must specify at least one argument for '...' parameter of variadic macro
whitespace required after macro name
invalid suffix on literal; C++11 requires a space between literal and identifier
multi-line // comment
named variadic macros are a GNU extension
no newline at end of file
use of non-standard escape character '\%0'
expected 'ON' or 'OFF' or 'DEFAULT' in pragma
token pasting of ',' and __VA_ARGS__ is a GNU extension
pasting formed '%0', an invalid preprocessing token
__VA_ARGS__ can only appear in the expansion of a C99 variadic macro
__VA_OPT__ can only appear in the expansion of a variadic macro
comma operator in operand of #if
extra tokens at end of #%0 directive
#ident is a language extension
#import is a language extension
#include_next is a language extension
#include resolved using non-portable Microsoft search rules as: %0
C requires #line number to be less than %0, allowed as extension
#line directive with zero argument is a GNU extension
%0 macro redefined
variadic macros are a Clang extension in OpenCL
C++ operator %0 (aka %1) used as a macro name
redefining builtin macro
undefining builtin macro
#warning is a language extension
expected end of directive in pragma
invalid suffix on literal; C++11 requires a space between literal and identifier
string literal of length %0 exceeds maximum length %1 that %select{C90|ISO C99|C++}2 compilers are required to support
extension used
treating Unicode character as whitespace
unknown escape sequence '\%0'
missing terminating %select{'|'"'}0 character
variadic macros are a C99 feature
%0 is defined here; did you mean %1?
submodule of top-level module '%0' implicitly imported here
cannot use initializer list at the beginning of a macro argument
expansion of macro %0 requested here
macro %0 defined here
use 'framework module' to declare module '%0'
to match this '{'
to match this ']'
previously defined here
rename '%0' to ensure it can be found by name
expanding this definition of %0
other definition of %0
did not find header '%0' in framework '%1' (loaded from '%2')
macro marked '%select{deprecated|restrict_expansion|final}0' here
entering module '%0' due to this pragma
parentheses are required around macro argument containing braced initializer list
did you mean to use '\u'?
null character(s) preserved in %select{char|string}0 literal
null character ignored
disabled expansion of recursive macro
%select{#elif|#elifdef|#elifndef}0 after #else
%select{#elif|#elifdef|#elifndef}0 without #if
#else after #else
#else without #if
the #__include_macros directive is only for internal use by -imacros
#include_next in file found relative to primary source file or found by absolute path; will search from start of include path
#include_next in primary source file; will search from start of include path
invalid string literal, ignoring final '\'
macro is not used
non-portable path to file '%0'; specified path differs in case from file name on disk
non-portable path to file '%0'; specified path differs in case from file name on disk
current file is older than dependency %0
poisoning existing macro
#pragma once in main file
#pragma system_header ignored in main file
search path used: '%0'
trigraph converted to '%0' character
trigraph ends block comment
trigraph ignored
ignored trigraph would end block comment
treating #%select{include|import|include_next|__include_macros}0 as an import of module '%1'
illegal character encoding in character literal
illegal character encoding in string literal
digit separators are incompatible with C standards before C2x
%select{using this character in an identifier|starting an identifier with this character}0 is incompatible with C99
unicode literals are incompatible with C99
character constant too long for its type
binary integer literals are incompatible with C++ standards before C++14
digit separators are incompatible with C++ standards before C++14
identifier after literal will be treated as a reserved user-defined literal suffix in C++11
identifier after literal will be treated as a user-defined literal suffix in C++11
'%0' is a keyword in C++11
unicode literals are incompatible with C++ standards before C++17
passing no argument for the '...' parameter of a variadic macro is incompatible with C++ standards before C++20
'<=>' operator is incompatible with C++ standards before C++20
hexadecimal floating literals are incompatible with C++ standards before C++17
'<=>' is a single token in C++20; add a space to avoid a change in behavior
'%0' is a keyword in C++20
empty macro arguments are incompatible with C++98
'<::' is treated as digraph '<:' (aka '[') followed by ':' in C++98
universal character name referring to a control character is incompatible with C++98
specifying character '%0' with a universal character name is incompatible with C++98
C++98 requires newline at end of file
#line number greater than 32767 is incompatible with C++98
raw string literals are incompatible with C++98
unicode literals are incompatible with C++98
variadic macros are incompatible with C++98
macro expansion producing 'defined' has undefined behavior
macro expansion producing 'defined' has undefined behavior
empty delimited universal character name; treating as '\' 'u' '{' '}'
incomplete delimited universal character name; treating as '\' 'u' '{' identifier
multi-character character constant
public framework header includes private framework header '%0'
__has_warning expected option name (e.g. "-Wundef")
%0 is used as a header guard here, followed by #define of a different macro
whitespace recommended after macro name
skipping '%0' because module declaration of '%1' lacks the 'framework' qualifier
expected canonical name for private module '%0'
private submodule '%0' in private module map, expected top-level module
module '%0' already re-exported as '%1'
umbrella directory '%0' not found
unknown attribute '%0'
module '%0' conflicts with already-imported module '%1': %2
multi-character character constant
'/*' within block comment
no newline at end of file
include of non-modular header inside framework module '%0': '%1'
include of non-modular header inside module '%0': '%1'
ambiguous expansion of macro %0
%select{left|right}0 side of operator converted from negative value to unsigned: %1
expansion of date or time macro is not reproducible
integer overflow in preprocessor expression
#pragma hdrstop filename not supported, /Fp can be used to specify precompiled header filename
%select{#line|GNU line marker}0 directive interprets number as decimal, not octal
definition of macro %0 does not match definition in precompiled header
keyword is hidden by macro definition
macro name is a reserved identifier
ignoring redefinition of Objective-C qualifier macro
%0 is not defined, evaluates to 0
%0 is not defined, evaluates to 0
missing argument to debug command '%0'
unexpected debug command '%0'
unknown module '%0'
macro %0 has been marked as deprecated%select{|: %2}1
pragma diagnostic pop could not pop, no matching push
pragma diagnostic expected 'error', 'warning', 'ignored', 'fatal', 'push', or 'pop'
pragma diagnostic expected option name (e.g. "-Wundef")
unexpected token in pragma diagnostic
unknown warning group '%0', ignored
#pragma execution_character_set expected '%0'
#pragma execution_character_set invalid value '%0', only 'UTF-8' is supported
#pragma execution_character_set expected 'push' or 'pop'
macro %0 has been marked as final and should not be %select{undefined|redefined}1
unknown pragma ignored
pragma include_alias expected '%0'
pragma include_alias expected include filename
angle-bracketed include <%0> cannot be aliased to double-quoted include "%1"
double-quoted include "%0" cannot be aliased to angle-bracketed include <%1>
pragma pop_macro could not pop '%0', no matching push_macro
macro %0 has been marked as unsafe for use in headers%select{|: %2}1
#pragma warning expected '%0'
#pragma warning expected a warning number
#pragma warning(push, level) requires a level between 0 and 4
#pragma warning expected 'push', 'pop', 'default', 'disable', 'error', 'once', 'suppress', 1, 2, 3, or 4
double-quoted include "%0" in framework header, expected angle-bracketed instead
incomplete universal character name; treating as '\' followed by identifier
\%0 used with no following hex digits; treating as '\' followed by identifier
universal character name refers to a surrogate character
universal character names are only valid in C99 or C++; treating as '\' followed by identifier
universal character names are only valid in C99 or C++
umbrella header for module '%0' does not include header '%1'
use of private header from outside its module: '%0'
treating Unicode character <U+%0> as identifier character rather than as '%1' symbol
identifier contains Unicode character <U+%0> that is invisible in some environments
interface types cannot specify '%select{private|protected}0' access
use of address-of-label extension outside of a function body
name defined in alias declaration must be an identifier
alias declaration cannot be a pack expansion
%select{partial specialization|explicit specialization|explicit instantiation}0 of alias templates is not permitted
anonymous bit-field cannot have a default member initializer
declaration of anonymous %0 must be a definition
ISO C++ only allows ':' in member enumeration declaration to introduce a fixed underlying type, not an anonymous bit-field
unknown cast annotation __bridge_retain; did you mean __bridge_retained?
argument required after attribute
duplicate asm qualifier '%0'
__asm used with no assembly instructions
cannot use %select{unicode|wide|an empty}0 string literal in 'asm'
expected 'volatile', 'inline', 'goto', or '('
@defs is not supported in Objective-C++
unexpected '@' in member specification
use of '@import' when modules are disabled
use of '@import' when C++ modules are disabled, consider using -fmodules and -fcxx-modules
%0 attribute cannot be applied to a module import
%0 attribute cannot be applied to a module
parentheses must be omitted if %0 attribute's argument list is empty
misplaced attributes; expected attributes here
an attribute list cannot appear here
expected a platform name here
unrecognized platform name %0
expected 'introduced', 'deprecated', or 'obsoleted'
expected a platform name, e.g., 'macos'
version for '%0' already specified
'*' query has already been specified
must handle potential future platforms with '*'
redundant %0 availability change; only the last specified change will be used
%0 is not an availability stage; use 'introduced', 'deprecated', or 'obsoleted'
redeclaration of C++ built-in type 'bool'
bracket nesting level exceeded maximum of %0
brackets are not allowed here; to declare an array, place the brackets after the %select{identifier|name}0
'_Noreturn' keyword must precede function declarator
capture default must be first
template template parameter requires 'class'%select{| or 'typename'}0 after the parameter list
name defined in concept definition must be an identifier
missing return type for function %0; did you mean the constructor name %1?
missing ',' between base or member initializers
attribute %0 cannot have an argument list
attribute %0 cannot be used as an attribute pack
declaration does not declare a parameter
'%0' qualifier may not appear after the virtual specifier '%1'
unexpected end of default argument expression
'= %select{default|delete}0' is a function definition and must occur in a standalone declaration
default template argument for a template template parameter must be a class template
destructor name %0 does not refer to a template
expected a class name after '~' to name a destructor
'~' in destructor name should be after nested name specifier
duplicate 'virtual' in base specifier
class already marked '%0'
duplicate default generic association
class member already marked '%0'
cannot have both throw() and noexcept() clause on the same function
use of empty enum
a requires expression must contain at least one requirement
missing ',' between enumerators
unnamed enumeration must be a definition
unexpected end of exception specification
'#pragma omp end assumes' with no matching '#pragma omp begin assumes'
'#pragma omp end declare variant' with no matching '#pragma omp begin declare variant'
expected variable name or 'this' in lambda capture list
expected 'case' keyword before expression
expected catch
expected class name
'typename' is redundant; base classes are implicitly types
expected '::' after '__super'
expected ',' or '>' in template-parameter-list
expected ',' or ']' in lambda capture list
expected '#pragma omp end declare %select{target|variant}0'
expected '= constant-expression' or end of enumerator definition
expected '=' or another designator
expected expression
expected external declaration
expected a field designator, such as '.field = 4'
expected function body after function declarator
expected a foldable binary operator in fold expression
variable declaration in condition must have an initializer
variable declaration in condition cannot have a parenthesized initializer
expected body of lambda expression
expected '{' after base class list
expected '{' in compound literal
expected '<' after '%0'
expected '(' after '%0'
expected '(' for function-style cast or type construction
expected member name or ';' after declaration specifiers
expected member name or ';' after declaration specifiers; %0 is a keyword in Objective-C++
expected class member or base class name
expected method body
method type specifier must start with '-' or '+'
'@end' must appear in an Objective-C context
expected the name of a parameter pack
expected parentheses around type name in %0 expression
expected property name
expected ')' or ',' after '%0'
expected a qualified name after 'typename'
expected ')' after '%0'
expected selector for Objective-C method
expected ';' after attribute list
expected ';' after expression
expected ';' after method prototype
expected ';' after namespace name
expected ';' after static_assert
expected ';' after %0 statement
expected ';' at end of declaration list
expected ';' at end of declaration
expected ';' in 'for' statement specifier
expected ';' at end of requirement
expected an OpenMP 'directive' or 'sequence' attribute argument
expected 'this' following '*' in lambda capture list
expected statement
expected template
expected template parameter
expected %0; %1 is a keyword in Objective-C++
expected a type
expected an identifier or template-id after '::'
expected %select{identifier|unqualified-id}0
expected a version of the form 'major[.minor[.subminor]]'
expected 'while' in do/while loop
enumerations cannot be explicitly instantiated
explicit template instantiation cannot have a definition; if this definition is meant to be an explicit specialization, add '<>' after the 'template' keyword
explicit %select{specialization|instantiation}0 of %select{non-|undeclared }3template %1 %2
export declaration cannot be empty
duplicate %0 clause in an 'external_source_symbol' attribute
expected 'language', 'defined_in', or 'generated_declaration'
extraneous closing brace ('}')
extraneous ')' after condition, expected a statement
extraneous '%0' before ';'
operators in fold expression must be the same
'co_await' modifier can only be applied to range-based for loop
for range declaration must declare a variable
range-based for loop requires type for loop variable
cannot define a type in a friend declaration
friend cannot be declared in an explicit instantiation; if this declaration is meant to be a friend declaration, remove the 'template' keyword
'friend' used outside of class
function definition does not declare parameters
function definition declared 'typedef'
function definition is not allowed here
unexpected %0 in function call; perhaps remove the %0?
function scope depth exceeded maximum of %0
meaningless '%0' on asm outside function
'module;' introducing a global module fragment can appear only at the start of the translation unit
GNU-style inline assembly is disabled
expected template name after 'template' keyword in nested name specifier
%0 declared as a reference to a reference
cannot cast 'super' (it isn't an expression)
array bound cannot be deduced from a default member initializer
initializer list cannot be used on the %select{left|right}0 hand side of operator '%1'
namespace alias cannot be inline
nested namespace definition cannot be 'inline'
cannot use %select{dot|arrow}0 operator on a type
'%0' qualifier may not be applied to a reference
invalid %0 at end of declaration; did you mean '='?
expected ';' after top level declarator
invalid parameter name: '%0' is a keyword
C++11 only allows consecutive left square brackets when introducing an attribute
label at end of compound statement: expected statement
'[]' after delete interpreted as 'delete[]'; add parentheses to treat this as a lambda-expression
ellipsis in pack %select{|init-}0capture must appear %select{after|before}0 the name of the capture
multiple ellipses in pack capture
%select{'mutable'|'constexpr'|'consteval'}0 cannot appear multiple times in a lambda declarator
lambda template parameter list cannot be empty
string literal after 'operator' must be '""'
string literal after 'operator' cannot have an encoding prefix
'...' must %select{immediately precede declared identifier|be innermost component of anonymous pack declaration}0
expected %0 at end of module
@try statement without a @catch and @finally clause
C requires a comma prior to the ellipsis in a variadic function type
use 'template' keyword to treat '%0' as a dependent template name
missing '}' at end of definition of %q0
expected parameter declarator
found '<::' after a %select{template name|addrspace_cast|const_cast|dynamic_cast|reinterpret_cast|static_cast}0 which forms the digraph '<:' (aka '[') and a ':', did you mean '< ::'?
expected a module name after '%select{module|import}0'
expected ';' after module name
%select{global|private}0 module fragment cannot be exported
'__declspec' attributes are not enabled; use '-fdeclspec' or '-fms-extensions' to enable support for __declspec attributes
__declspec attributes must be an identifier or string literal
property declaration specifies '%0' accessor twice
expected name of accessor method
expected ',' or ')' at end of property accessor list
expected '=' after '%0'
putter for property must be specified as 'put', not 'set'
property declaration cannot have a default member initializer
missing 'get=' or 'put='
property does not specify a getter or a putter
expected 'get' or 'put' in property declaration
MS-style inline assembly is not available: %0
unsupported architecture '%0' for MS-style inline assembly
%select{|a template declaration|an explicit template specialization|an explicit template instantiation}0 can only %select{|declare|declare|instantiate}0 a single entity
namespaces can only be defined in global or namespace scope
parameter named %0 is missing
@%0 must be followed by a number to form an NSNumber object
unexpected token after Objective-C string
directive may only be specified in protocols only
expected '=' for Objective-C getter
expected '=' for Objective-C setter
unknown property attribute %0
expected selector for Objective-C %select{setter|getter}0
expected type parameter name
illegal interface qualifier
illegal visibility specification
missing '@end'
@implementation cannot have type parameters
postfix attributes are not allowed on Objective-C directives
postfix attributes are not allowed on Objective-C directives, place them in front of '%select{@interface|@protocol}0'
property name cannot be a bit-field
property requires fields to be named
protocol qualifiers must precede type arguments
'@end' appears where closing brace '}' is expected
prefix attribute must be followed by an interface, protocol, or implementation
expected an Objective-C directive after '@'
expected a related ObjectiveC class name, e.g., 'NSColor'
expected a class method selector with single argument, e.g., 'colorWithCGColor:'
unexpected '(', only 'to', 'link' or 'device_type' clauses expected for 'begin declare target' directive
function declaration is expected after 'declare %select{simd|variant}0' directive
unexpected '%0' clause, '%1' is specified already
expected at least one 'to' or 'link' clause
%0 appears multiple times in clauses on the same declare target directive
unexpected '%0' clause, only %select{'device_type'|'to' or 'link'|'to', 'link' or 'device_type'}1 clauses expected
unexpected clause after an implicit 'to' clause
nested OpenMP context selector contains duplicated trait '%0' in selector '%1' and set '%2' with different score
nested user conditions in OpenMP context selector not supported (yet)
expected %select{'match'|'match', 'adjust_args', or 'append_args'}0 clause on 'omp declare variant' directive
expected at least one clause on '#pragma omp %0' directive
missing ':' in %0
expected valid context selector in %0
expected '=' in iterator specifier
expected identifier specifying the name of the 'omp critical' directive
expected interop type: 'target' and/or 'targetsync'
expected ',' or ')' in '%0' %select{clause|directive}1
expected ',' after interop modifier
expected ',' or ')' after iterator specifier
expected identifier or one of the following operators: '+', '-', '*', '&', '|', '^', '&&', or '||'
'#pragma omp %0' %select{|with '%2' clause }1cannot be an immediate substatement
data-sharing attribute '%0' in '%1' clause requires OpenMP version %2 or above
missing map type
missing map type modifier
expected declarator on 'omp declare mapper' directive
illegal OpenMP user-defined mapper identifier
unexpected operation specified in 'append_args' clause, expected 'interop'
unexpected OpenMP clause '%0' in directive '#pragma omp %1'
unexpected OpenMP directive %select{|'#pragma omp %1'}0
expected an OpenMP directive
incorrect map type, expected one of 'to', 'from', 'tofrom', 'alloc', 'release', or 'delete'
incorrect map type modifier, expected one of: 'always', 'close', 'mapper'%select{|, 'present'}0%select{|, 'ompx_hold'}1
only a single match extension allowed per OpenMP context selector
^^ is a reserved operator in OpenCL
taking address of function is not allowed
virtual functions are not supported in C++ for OpenCL
out-of-line constructor for %0 cannot have template arguments
'%0' keyword not permitted with interface types
missing parentheses around the size of parameter pack %0
expected 'auto' or 'decltype(auto)' after concept name
expression cannot be followed by a postfix %0 operator; add parentheses
duplicate attribute subject matcher '%0'
expected an attribute after '('
expected identifier that represents an attribute name
expected an attribute that is specified using the GNU, C++11 or '__declspec' syntax
expected '.' after pragma attribute namespace %0
expected 'push', 'pop', or '(' after '#pragma clang attribute'
expected an identifier that corresponds to an attribute subject rule
expected an identifier that corresponds to an attribute subject matcher sub-rule; '%0' matcher %select{does not support sub-rules|supports the following sub-rules: %2|}1
extra tokens after attribute in a '#pragma clang attribute push'
unexpected argument '%0' to '#pragma clang attribute'; expected 'push' or 'pop'
expected attribute subject set specifier 'apply_to'
namespace can only apply to 'push' or 'pop' directives
unknown attribute subject rule '%0'
%select{invalid use of|unknown}2 attribute subject matcher sub-rule '%0'; '%1' matcher %select{does not support sub-rules|supports the following sub-rules: %3}2
attribute %0 is not supported by '#pragma clang attribute'
force_cuda_host_device end pragma without matching force_cuda_host_device begin
expected '=' following '#pragma clang section %select{invalid|bss|data|rodata|text|relro}0'
pragma comment requires parenthesized identifier and optional string
unknown kind of pragma comment
pragma detect_mismatch is malformed; it requires two comma-separated string literals
expected one of [bss|data|rodata|text|relro] section kind in '#pragma %0'
expected an integer argument in '#pragma %0'
'#pragma %0' can only appear at file scope or at the start of a compound statement
pragma float_control is malformed; use 'float_control({push|pop})' or 'float_control({precise|except}, {on|off} [,push])'
unexpected argument '%0' to '#pragma clang fp %1'; expected %select{'fast' or 'on' or 'off'|'on' or 'off'|'ignore', 'maytrap' or 'strict'}2
%select{invalid|missing}0 option%select{ %1|}0; expected 'contract', 'reassociate' or 'exceptions'
invalid argument; expected 'enable'%select{|, 'full'}0%select{|, 'assume_safety'}1 or 'disable'
%select{invalid|missing}0 option%select{ %1|}0; expected vectorize, vectorize_width, interleave, interleave_count, unroll, unroll_count, pipeline, pipeline_initiation_interval, vectorize_predicate, or distribute
vectorize_width loop hint malformed; use vectorize_width(X, fixed) or vectorize_width(X, scalable) where X is an integer, or vectorize_width('fixed' or 'scalable')
missing argument; expected %select{an integer value|'enable'%select{|, 'full'}1%select{|, 'assume_safety'}2 or 'disable'}0
this pragma cannot appear in %0 declaration
missing argument to '#pragma %0'%select{|; expected %2}1
unexpected extra argument '%0' to '#pragma clang optimize'
unexpected argument '%0' to '#pragma clang optimize'; expected 'on' or 'off'
invalid argument; expected 'disable'
unexpected %0, expected to see one of %select{|'best_case', 'full_generality', }1'single_inheritance', 'multiple_inheritance', or 'virtual_inheritance'
expected ';' after private module fragment declaration
trailing requires clause should be placed outside parentheses
trailing return type must appear before trailing requires clause
trailing requires clause can only be used when declaring a function
expected concept name with optional arguments
requires expression in requirement body; did you intend to place it in a nested requirement? (add another 'requires' before the expression)
expected '->' before expression type requirement
varargs not allowed in requires expression
'noexcept' can only be used in a compound requirement (with '{' '}' around the expression)
a space is required between a right angle bracket and an equals sign (use '> =')
scoped enumeration requires a name
range-based 'for' statement uses ':', not '='
expected parenthesized parameter pack name in 'sizeof...' expression
statement expression not allowed at file scope
'__super' cannot be used with a using declaration
expected a property name in @synthesize
%select{function|class|variable}0 cannot be defined in an explicit instantiation; if this declaration is meant to be a %select{function|class|variable}0 definition, remove the 'template' keyword
identifier followed by '<' indicates a class template specialization but %0 %select{does not refer to a template|refers to a function template|<unused>|refers to a variable template|<unused>|refers to a concept}1
a static_assert declaration cannot be a template
cannot template a using %select{directive|declaration}0
'this' cannot be captured by reference
a space is required between consecutive right angle brackets (use '> >')
invalid comparison flag %0; use 'layout_compatible' or 'must_be_null'
type trait requires %0%select{| or more}1 argument%select{|s}2; have %3 argument%s3
unparsed tokens following type
typename is allowed for identifiers only
type name does not allow %select{<ERROR>|constexpr|consteval|constinit}0 specifier to be specified
type name does not allow function specifier to be specified
type name does not allow storage class to be specified
typename specifier refers to a non-type template
type name requires a specifier or qualifier
unexpected '@' in program
unexpected ':' in nested name specifier; did you mean '::'?
module declaration can only appear at the top level
attributes cannot be specified on namespace alias
attributes cannot be specified on a nested namespace definition
@implementation declaration cannot be protocol qualified
unexpected namespace scope prior to decltype
unexpected ';' before %0
'template' keyword not permitted after 'using' keyword
'template' keyword not permitted in destructor name
'template' keyword not permitted here
'%0' cannot be a part of nested name specifier; did you mean ':'?
unexpected type name %0: expected identifier
type-id cannot have a name
unknown template name %0
parentheses are required around this expression in a requires clause
'static' may not be used without an array size
'static' may not be used with an unspecified variable length array size
sorry, module partitions are not yet supported
attribute with scope specifier cannot follow default scope specifier
'using namespace' is not allowed in classes
'%0' specifier is not allowed outside a class definition
version number must have non-zero major, minor, or sub-minor version
ISO C++11 requires a parenthesized pack declaration to have a name
alias declarations are a C++11 extension
alias declaration in this context is a C++2b extension
%0 applied to an expression is a GNU extension
'auto' storage class specifier is not permitted in C++11, and will not be supported in future releases
'__auto_type' is a GNU extension
default member initializer for bit-field is a C++20 extension
'%0' is a C11 extension
compound literals are a C99-specific feature
'%0' is a C99 extension
variable declaration in for loop is a C99-specific feature
'_Static_assert' with no message is a C2x extension
enumeration types with a fixed underlying type are a Clang extension
ISO C++20 does not permit the 'bool' keyword after 'concept'
consteval if is a C++2b extension
constexpr if is a C++17 extension
'constexpr' on lambda expressions is a C++17 extension
ISO C++ does not allow an attribute list to appear here
enumeration types with a fixed underlying type are a C++11 extension
'static_assert' with no message is a C++17 extension
an attribute specifier sequence in this position is a C++2b extension
'decltype(auto)' type specifier is a C++14 extension
ISO C++17 does not allow a decomposition group to be empty
%select{defaulted|deleted}0 function definitions are a C++11 extension
ISO C++17 does not allow dynamic exception specifications
reference to enumeration must use 'enum' not 'enum %select{struct|class}0'
exception specification of '...' is a Microsoft extension
ISO C requires a translation unit to contain at least one declaration
non-defining declaration of enumeration with a fixed underlying type is only permitted as a standalone declaration%select{|; missing list of enumerators?}0
commas at the end of enumerator lists are a C99-specific feature
commas at the end of enumerator lists are a C++11 extension
expected ';' at end of declaration list
explicit(bool) is a C++20 extension
extern templates are a C++11 extension
extra ';' %select{outside of a function|inside a %1|inside instance variable list|after member function definition}0
extra ';' outside of a function is a C++11 extension
pack fold expression is a C++17 extension
range-based for loop is a C++11 extension
range-based for loop initialization statements are a C++20 extension
generalized initializer lists are a C++11 extension
use of GNU address-of-label extension
use of GNU array range extension
use of GNU case range extension
use of GNU ?: conditional expression extension, omitting middle operand
use of GNU empty initializer extension
use of GNU indirect-goto extension
use of GNU 'missing =' extension in designator
use of GNU old-style field designator extension
use of GNU statement expression extension
type-less parameter names in function declaration
'%select{if|switch}0' initialization statements are a C++17 extension
inline namespaces are a C++11 feature
inline nested namespace definition is a C++20 extension
keyword '%0' will be made available as an identifier %select{here|for the remainder of the translation unit}1
lambda without a parameter clause is a C++2b extension
explicit template parameter list for lambdas is a C++20 extension
'abstract' keyword is a Microsoft extension
enumeration types with a fixed underlying type are a Microsoft extension
'sealed' keyword is a Microsoft extension
use of 'static_assert' without inclusion of <assert.h> is a Microsoft extension
use of multiple declarators in a single using declaration is a C++17 extension
nested namespace definition is a C++17 extension; define each namespace separately
default member initializer for non-static data member is a C++11 extension
attributes on %select{a namespace|an enumerator}0 declaration are a C++17 extension
type nullability specifier %0 is a Clang extension
specifying OpenMP directives with [[]] is an OpenMP 5.1 extension
'%0' keyword is a C++11 extension
reference qualifiers on functions are a C++11 extension
rvalue references are a C++11 extension
scoped enumerations are a C++11 extension
unknown pragma in STDC namespace
template template parameter using 'typename' is a C++17 extension
'__thread' before '%0'
default scope specifier for attributes is a C++17 extension
pack expansion of using declaration is a C++17 extension
using enum declaration is a C++20 extension
__final is a GNU extension, consider using C++11 final
use -fbracket-depth=N to increase maximum nesting level
%select{|second }0%1 token is here
use '%0' instead
comma separating Objective-C messaging arguments
or insert whitespace before ':' to use %0 as parameter name and have an empty entry in the selector
total token limit set here
did you mean to use 'typename'?
insert ',' before '...' to silence this warning
place '...' %select{immediately before declared identifier|here}0 to declare a function parameter pack
preceding '...' declares a function parameter pack
still within definition of %q0 here
introduce a parameter name to make %0 part of the selector
%select{class|protocol|category|class extension|implementation|category implementation}0 started here
the ignored tokens spans until here
the context property '%0' can be nested in the context selector '%1' which is nested in the context set '%2'; try 'match(%2={%1(%0)})'
the context selector '%0' can be nested in the context set '%1'; try 'match(%1={%0%select{|(property)}2})'
the ignored %select{set|selector|property}0 spans until here
'%0' is a context %select{set|selector|property}1 not a context %select{set|selector|property}2
context %select{set|selector|property}0 options are: %1
try 'match(%0={%1%2})'
the previous context %select{set|selector|property}0 '%1' used here
omit the namespace to add attributes to the most-recently pushed attribute group
use the GNU '__attribute__' syntax
vectorize_width loop hint malformed; use vectorize_width(X, fixed) or vectorize_width(X, scalable) where X is an integer, or vectorize_width('fixed' or 'scalable')
previous default generic association is here
previous statement is here
parentheses are required around this expression in a requires clause
'%0' casts have no effect when not using ARC
use of '@import' in framework header is discouraged, including this header requires -fmodules
attribute %0 ignored, because it is not attached to a declaration
GCC does not allow %0 attribute in this position on a function definition
'unavailable' availability overrides all other availability information
'_Static_assert' with no message is incompatible with C standards before C2x
%select{%1 and |}0%2 tokens %select{introducing statement expression|terminating statement expression|introducing attribute|terminating attribute|forming pointer to member type}3 appear in different macro expansion contexts
%select{%1 and |}0%2 tokens %select{introducing statement expression|terminating statement expression|introducing attribute|terminating attribute|forming pointer to member type}3 are separated by whitespace
use of C-style parameters in Objective-C method declarations is deprecated
nvcc does not allow '__%0__' to appear after '()' in lambdas
'decltype(auto)' type specifier is incompatible with C++ standards before C++14
use of right-shift operator ('>>') in template argument will require parentheses in C++11
constexpr if is incompatible with C++ standards before C++17
constexpr on lambda expressions is incompatible with C++ standards before C++17
pack fold expression is incompatible with C++ standards before C++17
%select{if|switch}0 initialization statements are incompatible with C++ standards before C++17
nested namespace definition is incompatible with C++ standards before C++17
attributes on %select{a namespace|an enumerator}0 declaration are incompatible with C++ standards before C++17
'static_assert' with no message is incompatible with C++ standards before C++17
template template parameter using 'typename' is incompatible with C++ standards before C++17
default scope specifier for attributes is incompatible with C++ standards before C++17
default member initializer for bit-field is incompatible with C++ standards before C++20
explicit(bool) is incompatible with C++ standards before C++20
range-based for loop initialization statements are incompatible with C++ standards before C++20
inline nested namespace definition is incompatible with C++ standards before C++20
explicit template parameter list for lambdas is incompatible with C++ standards before C++20
use of multiple declarators in a single using declaration is incompatible with C++ standards before C++17
pack expansion using declaration is incompatible with C++ standards before C++17
using enum declaration is incompatible with C++ standards before C++20
alias declaration in this context is incompatible with C++ standards before C++2b
consteval if is incompatible with C++ standards before C++2b
an attribute specifier sequence in this position is incompatible with C++ standards before C++2b
this expression will be parsed as explicit(bool) in C++20
alias declarations are incompatible with C++98
'alignas' is incompatible with C++98
alignof expressions are incompatible with C++98
C++11 attribute syntax is incompatible with C++98
'decltype' type specifier is incompatible with C++98
%select{defaulted|deleted}0 function definitions are incompatible with C++98
enumeration types with a fixed underlying type are incompatible with C++98
commas at the end of enumerator lists are incompatible with C++98
extern templates are incompatible with C++98
range-based for loop is incompatible with C++98
generalized initializer lists are incompatible with C++98
inline namespaces are incompatible with C++98
lambda expressions are incompatible with C++98
literal operators are incompatible with C++98
noexcept specifications are incompatible with C++98
noexcept expressions are incompatible with C++98
default member initializer for non-static data members is incompatible with C++98
'nullptr' is incompatible with C++98
'%0' keyword is incompatible with C++98
reference qualifiers on functions are incompatible with C++98
rvalue references are incompatible with C++98
scoped enumerations are incompatible with C++98
static_assert declarations are incompatible with C++98
extra ';' outside of a function is incompatible with C++98
trailing return types are incompatible with C++98
consecutive right angle brackets are incompatible with C++98 (use '> >')
add explicit braces to avoid dangling else
empty initialization statement of '%select{if|switch|range-based for}0' has no effect
dynamic exception specifications are deprecated
use same version number separators '_' or '.'; as in 'major[.minor[.subminor]]'
expected a qualified name after 'typename'
extra ';' after member function definition
GCC does not allow an attribute in this position on a function declaration
GCC does not allow variable declarations in for loop initializers before C99
the number of preprocessor source tokens (%0) exceeds this token limit (%1)
the total number of preprocessor source tokens (%0) exceeds the token limit (%1)
dependent %select{__if_not_exists|__if_exists}0 declarations are ignored
qualifiers after comma in declarator list are ignored
misleading indentation; statement is not part of the previous '%select{if|else|for|while}0'
'...' in this location creates a C-style varargs function%select{, not a function parameter pack|}0
use 'template' keyword to treat '%0' as a dependent template name
%0 used as the name of the previous parameter rather than as part of the selector
empty expression statement has no effect; remove unnecessary ';' to silence this warning
protocol has no object type specified; defaults to qualified 'id'
specifying OpenMP directives with [[]] is incompatible with OpenMP standards before OpenMP 5.1
the context property '%0' is not valid for the context selector '%1' and the context set '%2'; property ignored
the context selector '%0' in the context set '%1' cannot have a score ('%2'); score ignored
the context selector '%0' is not valid for the context set '%1'; selector ignored
the context selector '%0' in context set '%1' requires a context property defined in parentheses; selector ignored
the context %select{set|selector|property}0 '%1' was used already in the same 'omp declare variant' directive; %select{set|selector|property}0 ignored
'%0' is not a valid context property for the context selector '%1' and the context set '%2'; property ignored
'%0' is not a valid context selector for the context set '%1'; selector ignored
'%0' is not a valid context set in a `declare variant`; set ignored
expected '%0' after the %1; '%0' assumed
expected identifier or string literal describing a context %select{set|selector|property}0; %select{set|selector|property}0 skipped
extra tokens at the end of '#pragma omp %0' are ignored
more than one 'device_type' clause is specified
interop type '%0' cannot be specified more than once
valid %0 clauses start with %1; %select{token|tokens}2 will be ignored
%0 clause should not be followed by arguments; tokens will be ignored
expected '=' following '#pragma %select{align|options align}0' - ignored
invalid alignment option in '#pragma %select{align|options align}0' - ignored
'#pragma comment %0' ignored
expected action or ')' in '#pragma %0' - ignored
missing ':' after %0 - ignoring
missing ':' or ')' after %0 - ignoring
expected ',' in '#pragma %0'
expected identifier in '#pragma %0' - ignored
expected 'compiler', 'lib', 'user', or a string literal for the section name in '#pragma %0' - ignored
expected integer between %0 and %1 inclusive in '#pragma %2' - ignored
missing '(' after '#pragma %0' - ignoring
expected non-wide string literal in '#pragma %0'
expected %select{'enable', 'disable', 'begin' or 'end'|'disable'}0 - ignoring
expected ')' or ',' in '#pragma %0'
missing ')' after '#pragma %0' - ignoring
expected a stack label or a string literal for the section name in '#pragma %0' - ignored
expected a string literal for the section name in '#pragma %0' - ignored
expected push, pop or a string literal for the section name in '#pragma %0' - ignored
expected string literal in '#pragma %0' - ignoring
OpenCL extension %0 is core feature or supported optional core feature - ignoring
extra tokens at end of '#pragma %0' - ignored
incorrect use of #pragma clang force_cuda_host_device begin|end
'#pragma %0' is not supported on this target - ignored
'#pragma init_seg' is only supported when targeting a Microsoft environment
%0 is not a recognized builtin%select{|; consider including <intrin.h> to access non-builtin intrinsics}1
unknown action for '#pragma %0' - ignored
unexpected argument '%0' to '#pragma %1'%select{|; expected %3}2
unknown action '%1' for '#pragma %0' - ignored
missing argument to '#pragma %0'%select{|; expected %2}1
incorrect use of '#pragma fenv_access (on|off)' - ignored
incorrect use of '#pragma ms_struct on|off' - ignored
unexpected '#pragma omp ...' in program
'#pragma optimize' is not supported
expected 'align' following '#pragma options' - ignored
expected integer or identifier in '#pragma pack' - ignored
unknown OpenCL extension %0 - ignoring
argument to '#pragma unroll' should not be in parentheses in CUDA C/C++
known but unsupported action '%1' for '#pragma %0' - ignored
unsupported OpenCL extension %0 - ignoring
expected '#pragma unused' argument to be a variable name
semicolon before method body is ignored
ignoring '%select{static|inline}0' keyword on explicit template instantiation
pragma STDC FENV_ROUND is not supported
invalid or unsupported rounding mode in '#pragma STDC FENV_ROUND' - ignored
isa trait '%0' is not known to the current target; verify the spelling or consider restricting the context selector with the 'arch' selector further
'__clang__' is a predefined macro name, not an attribute scope specifier; did you mean '_Clang' instead?
empty symbolic operand name in inline assembly string
invalid %% escape in inline assembly string
invalid operand number in inline asm string
unknown symbolic operand name in inline assembly string
unterminated symbolic operand name in inline assembly string
the experimental clang interpreter failed to evaluate an expression
cannot get %select{lower,upper}0 bound because object size is unknown
template parameter lists have a different number of parameters (%0 vs %1)
template parameter has different kinds in different translation units
field %0 declared with incompatible types in different translation units (%1 vs. %2)
external function %0 declared with incompatible types in different translation units (%1 vs. %2)
instance variable %0 declared with incompatible types in different translation units (%1 vs. %2)
non-type template parameter declared with incompatible types in different translation units (%0 vs. %1)
%select{class|instance}0 method %1 has a different number of parameters in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has a parameter with a different types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has incompatible result types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 is variadic in one translation unit and not variadic in another
property %0 is implemented with %select{@synthesize|@dynamic}1 in one translation but %select{@dynamic|@synthesize}1 in another translation unit
property %0 declared with incompatible types in different translation units (%1 vs. %2)
class %0 has incompatible superclasses
property %0 is synthesized to different ivars in different translation units (%1 vs. %2)
parameter kind mismatch; parameter is %select{not a|a}0 parameter pack
type %0 has incompatible definitions in different translation units
external variable %0 defined in multiple translation units
external variable %0 declared with incompatible types in different translation units (%1 vs. %2)
cannot import unsupported AST node %0
ambiguous vftable component for %0 introduced via covariant thunks; this is an inherent limitation of the ABI
%select{pointer|reference}0 to a consteval declaration is not a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 heap allocated object that has been deleted
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of subobject of|destruction of}0 member %1 of union with %select{active member %3|no active member}2 is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 mutable member %1 is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 dereferenced null pointer is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 dereferenced one-past-the-end pointer is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|reconstruction of|destruction of}0 temporary is not allowed in a constant expression outside the expression that created the temporary
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of subobject of|destruction of}0 %select{object outside its lifetime|uninitialized object}1 is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 object '%1' whose value is not known
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 element of array without known bound is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|<ERROR>|<ERROR>|<ERROR>|<ERROR>}0 volatile %select{temporary|object %2|member %2}1 is not allowed in a constant expression
%select{read of|read of|assignment to|increment of|decrement of|<ERROR>|<ERROR>|<ERROR>|<ERROR>}0 volatile-qualified type %1 is not allowed in a constant expression
cannot constant evaluate the result of adjusting alignment to %0
cannot constant evaluate whether run-time alignment is at least %0
requested alignment must be %0 or less for type %1; %2 is invalid
cannot refer to element %0 of %select{array of %2 element%plural{1:|:s}2|non-array object}1 in a constant expression
%select{alignment of|offset of the aligned pointer from}0 the base pointee object (%1 %plural{1:byte|:bytes}1) is %select{less than|not a multiple of}0 the asserted %2 %plural{1:byte|:bytes}2
value of the aligned pointer (%0) is not a multiple of the asserted %1 %plural{1:byte|:bytes}1
indeterminate value can only initialize an object of type 'unsigned char'%select{, 'char',|}1 or 'std::byte'; %0 is invalid
invalid type %0 is a %select{member|base}1 of %2
bit_cast %select{from|to}0 a %select{|type with a }1%select{union|pointer|member pointer|volatile|reference}2 %select{type|member}1 is not allowed in a constant expression
value %1 cannot be represented in type %0
constexpr bit_cast involving bit-field is not yet supported
constexpr bit_cast involving type %0 is not yet supported
in call to '%0'
constexpr evaluation hit maximum call limit
(skipping %0 call%s0 in backtrace; use -fconstexpr-backtrace-limit=0 to see all)
comparison of pointer to virtual member function %0 has unspecified value
both arms of conditional operator are unable to produce a constant expression
construction of individual component of complex number is not yet supported in constant expressions
'std::allocator<...>::deallocate' used to delete a null pointer
delete of object with dynamic type %1 through pointer to base class type %0 with non-virtual destructor
delete of pointer '%0' that does not point to a heap-allocated object
delete of pointer%select{ to subobject|}1 '%0' %select{|that does not point to complete object}1
constexpr evaluation exceeded maximum depth of %0 calls
destruction of individual component of complex number is not yet supported in constant expressions
destroying object '%0' whose lifetime has already ended
delete of pointer that has already been deleted
destruction of object that is already being destroyed
%select{pointer|reference}0 to %select{|subobject of }1heap-allocated object is not a constant expression
heap allocation performed here
reference dynamic_cast failed: %select{static type %1 of operand is a non-public base class of dynamic type %2|dynamic type %2 of operand does not have a base class of type %3|%3 is an ambiguous base class of dynamic type %2 of operand|%3 is a non-public base class of dynamic type %2 of operand}0
cannot evaluate this expression if rounding mode is dynamic
floating point arithmetic produces %select{an infinity|a NaN}0
compile time floating point arithmetic suppressed in strict evaluation modes
function parameter %0 with unknown value cannot be used in a constant expression
constexpr evaluation hit maximum heap allocation limit
in implicit initialization for inherited constructor of %0
requested alignment %0 is not a positive power of two
%select{reinterpret_cast|dynamic_cast|cast that performs the conversions of a reinterpret_cast|cast from %1}0 is not allowed in a constant expression%select{| in C++ standards before C++20||}0
cannot cast object of dynamic type %0 to type %1
%select{non-constexpr|undefined}0 %select{function|constructor}1 %2 cannot be used in a constant expression
constructor inherited from base class %0 cannot be used in a constant expression; derived class cannot be implicitly initialized
shift count %0 >= width of type %1 (%2 bit%s2)
%select{read of|read of|assignment to|increment of|decrement of|member call on|dynamic_cast of|typeid applied to|construction of|destruction of}0 %select{temporary|variable}1 whose %plural{8:storage duration|:lifetime}0 has ended
signed left shift discards bits
left shift of negative value %0
read of incomplete type %0 is not allowed in a constant expression
read of non-const variable %0 is not allowed in a constant expression
read of non-constexpr variable %0 is not allowed in a constant expression
read of variable %0 of non-integral, non-enumeration type %1 is not allowed in a constant expression
constant evaluation of %0 on array of type %1 is not supported; only arrays of narrow character types can be searched
constant evaluation of %0 between arrays of types %1 and %2 is not supported; only arrays of narrow character types can be compared
cannot constant evaluate '%select{memcpy|memmove}0' between objects of incomplete type %1
cannot constant evaluate '%select{memcpy|memmove}0' between objects of non-trivially-copyable type %1
%select{source|destination}2 of '%select{%select{memcpy|wmemcpy}1|%select{memmove|wmemmove}1}0' is %3
'%select{memcpy|wmemcpy}0' between overlapping memory regions
cannot constant evaluate '%select{memcpy|memmove}0' from object of type %1 to object of type %2
'%select{%select{memcpy|wmemcpy}1|%select{memmove|wmemmove}1}0' not supported: %select{size to copy (%4) is not a multiple of size of element type %3 (%5)|source is not a contiguous array of at least %4 elements of type %3|destination is not a contiguous array of at least %4 elements of type %3}2
allocation performed here was not deallocated%plural{0:|: (along with %0 other memory leak%s0)}0
modification of object of const-qualified type %0 is not allowed in a constant expression
a constant expression cannot modify an object that is visible outside that expression
negative shift count %0
dynamic memory allocation is not permitted in constant expressions until C++20
%plural{2:'delete' used to delete pointer to object allocated with 'std::allocator<...>::allocate'|:%select{non-array delete|array delete|'std::allocator<...>::deallocate'}0 used to delete pointer to %select{array object of type %2|non-array object of type %2|object allocated with 'new'}0}1
cannot allocate array; evaluated array bound %0 is negative
call to %select{placement|class-specific}0 %1
cannot allocate memory of %select{incomplete|function}0 type %1
this placement new expression is not yet supported in constant expressions
cannot allocate array; evaluated array bound %0 is too large
cannot allocate array; evaluated array bound %0 is too small to hold %1 explicitly initialized elements
cannot allocate untyped memory in a constant expression; use 'std::allocator<T>::allocate' to allocate memory of type 'T'
control reached end of constexpr function
%select{pointer|reference}0 to %select{|subobject of }1%select{temporary|%3}2 is not a constant expression
non-literal type %0 cannot be used in a constant expression
address of non-static constexpr variable %0 may differ on each invocation of the enclosing function; add 'static' to give it a constant address
cannot %select{access base class of|access derived class of|access field of|access array element of|perform pointer arithmetic on|access real component of|access imaginary component of}0 null pointer
allocated size %0 is not a multiple of size %1 of element type %2
value %0 is outside the range of representable values of type %1
dereferenced pointer past the end of %select{|subobject of }0%select{temporary|%2}1 is not a constant expression
cannot %select{access base class of|access derived class of|access field of|access array element of|ERROR|access real component of|access imaginary component of}0 pointer past the end of object
placement new would change type of storage from %0 to %1
comparison of addresses of subobjects of different base classes has unspecified value
comparison of address of base class subobject %0 of class %1 to field %2 has unspecified value
comparison of address of fields %0 and %2 of %4 with differing access specifiers (%1 vs %3) has unspecified value
comparison has unspecified value
subtracted pointers are not elements of the same array
subtraction of pointers to type %0 of zero size
%select{|||||virtual function called on|dynamic_cast applied to|typeid applied to|construction of|destruction of}0 object '%1' whose dynamic type is not constant
pseudo-destructor call is not permitted in constant expressions until C++20
pure virtual function %q0 called
constexpr evaluation hit maximum step limit; possible infinite loop?
this use of statement expressions is not supported in a constant expression
subobject declared here
temporary created here
%select{|implicit }0use of 'this' pointer is only allowed within the evaluation of a call to a 'constexpr' member function
typeid applied to expression of polymorphic type %0 is not allowed in a constant expression in C++ standards before C++20
%select{|sub}0object of type %1 is not initialized
assignment would change active union member during the initialization of a different member of the same union
indexing of array without known bound is not allowed in a constant expression
non-trivial destruction of type %0 in a constant expression is not supported
type %0 has unexpected layout
non-trivial destruction of lifetime-extended temporary with type %0 used in the result of a constant expression is not yet supported
array-to-pointer decay of array member without known bound is not supported
use of reference outside its lifetime is not allowed in a constant expression
initializer of %0 is not a constant expression
initializer of %0 is unknown
initializer of weak variable %0 is not considered constant because it may be different at runtime
cannot construct object of type %0 with virtual base class in a constant expression
cannot evaluate call to virtual function in a constant expression in C++ standards before C++20
comparison between unequal pointers to void has unspecified result
volatile %select{temporary created|object declared|member declared}0 here
covariant thunk required by %0
division by zero
null passed to a callee that requires a non-null argument
class has base type %0
bit-field %0 with type %1 and length %2 here
enumerator %0 with value %1 here
field %0 has type %1 here
field has name %0 here
friend declared here
no corresponding base class here
no corresponding enumerator here
no corresponding field here
no corresponding friend here
field %0 is not a bit-field
class has %0 base %plural{1:class|:classes}0
%select{class|instance}0 method %1 also declared here
no corresponding superclass here
property %0 is implemented with %select{@synthesize|@dynamic}1 here
inherits from superclass %0 here
property is synthesized to ivar %0 here
%select{parameter|parameter pack}0 declared here
%0 is a %select{struct|interface|union|class|enum}1 here
template parameter declared here
template parameter list also declared here
declared here with type %0
%select{non-virtual|virtual}0 derivation here
unimplemented constexpr lambda feature: %0 (coming soon!)
-fsanitize-address-field-padding applied to %0
-fsanitize-address-field-padding ignored for %0 because it %select{is not C++|is packed|is a union|is trivially copyable|has trivial destructor|is standard layout|is in a blacklisted file|is blacklisted}1
overflow in expression; result is %0 with type %1
overflow in expression; result is %0 with type %1
'%0' will always evaluate to 'true' in a manifestly constant-evaluated expression
ms_struct may not produce Microsoft-compatible layouts with fundamental data types with sizes that aren't a power of two
template parameter lists have a different number of parameters (%0 vs %1)
template parameter has different kinds in different translation units
field %0 declared with incompatible types in different translation units (%1 vs. %2)
external function %0 declared with incompatible types in different translation units (%1 vs. %2)
instance variable %0 declared with incompatible types in different translation units (%1 vs. %2)
non-type template parameter declared with incompatible types in different translation units (%0 vs. %1)
%select{class|instance}0 method %1 has a different number of parameters in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has a parameter with a different types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has incompatible result types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 is variadic in one translation unit and not variadic in another
property %0 is implemented with %select{@synthesize|@dynamic}1 in one translation but %select{@dynamic|@synthesize}1 in another translation unit
property %0 declared with incompatible types in different translation units (%1 vs. %2)
class %0 has incompatible superclasses
property %0 is synthesized to different ivars in different translation units (%1 vs. %2)
parameter kind mismatch; parameter is %select{not a|a}0 parameter pack
type %0 has incompatible definitions in different translation units
external variable %0 defined in multiple translation units
external variable %0 declared with incompatible types in different translation units (%1 vs. %2)
padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%s2 to align anonymous bit-field
padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%s2 to align %4
padding size of %0 with %1 %select{byte|bit}2%s1 to alignment boundary
packed attribute is unnecessary for %0
add a deprecation attribute to the declaration to silence this warning
previous command '%select{\|@}0%1' here
previous command '%select{\|@}0%1' (an alias of '\%2') here
end tag
HTML tag started here
did you mean '%0'?
previous documentation
did you mean '%0'?
previous documentation
unknown command tag name '%0'; did you mean '%1'?
'%select{\|@}0%select{class|interface|protocol|struct|union}1' command should not be used in a comment attached to a non-%select{class|interface|protocol|struct|union}2 declaration
duplicated command '%select{\|@}0%1'
empty paragraph passed to '%select{\|@}0%1' command
'%select{\|@}0%select{classdesign|coclass|dependency|helper|helperclass|helps|instancesize|ownership|performance|security|superclass}1' command should not be used in a comment attached to a non-container declaration
declaration is marked with '%select{\|@}0deprecated' command but does not have a deprecation attribute
'%select{\|@}0%select{function|functiongroup|method|methodgroup|callback}1' command should be used in a comment attached to %select{a function|a function|an Objective-C method|an Objective-C method|a pointer to function}2 declaration
HTML end tag '%0' is forbidden
HTML end tag does not match any start tag
HTML tag '%0' requires an end tag
HTML start tag '%0' closed by '%1'
HTML start tag prematurely ended, expected attribute name or '>'
expected quoted string after equals sign
'%select{\|@}0%1' command does not have a valid word argument
parameter '%0' is already documented
unrecognized parameter passing direction, valid directions are '[in]', '[out]' and '[in,out]'
'%select{\|@}0param' command used in a comment that is not attached to a function declaration
parameter '%0' not found in the function declaration
whitespace is not allowed in parameter passing direction
'%select{\|@}0%1' command used in a comment that is attached to a %select{function returning void|constructor|destructor|method returning void}2
'%select{\|@}0%1' command used in a comment that is not attached to a function or method declaration
template parameter '%0' is already documented
'%select{\|@}0tparam' command used in a comment that is not attached to a template declaration
template parameter '%0' not found in the template declaration
unknown command tag name
'%select{\|@}0%1' command does not terminate a verbatim text block
error opening '%0': required by the CrossTU functionality
error parsing index file: '%0' line: %1 'UniqueID filename' format expected
multiple definitions are found for the same key in index 
imported AST from '%0' had been generated for a different target, current: %1, imported: %2
this builtin is only available on 32-bit targets
this builtin is only available on 64-bit targets
cannot add 'abi_tag' attribute in a redeclaration
%select{return|parameter|variable|field|instance variable|synthesized instance variable}0 type %1 is an abstract class
%1 is a %select{private|protected}0 member of %3
%select{base class|inherited virtual base class}0 %1 has %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR*|}2constructor
calling a %select{private|protected}0 constructor of class %2
ISO C++11 does not allow access declarations; use using declarations instead
calling a %select{private|protected}1 destructor of class %0
base class %0 has %select{private|protected}1 destructor
exception object of type %0 has %select{private|protected}1 destructor
field of type %1 has %select{private|protected}2 destructor
instance variable of type %0 has %select{private|protected}1 destructor
temporary of type %0 has %select{private|protected}1 destructor
variable of type %1 has %select{private|protected}2 destructor
inherited virtual base class %1 has %select{private|protected}2 destructor
field of type %0 has %select{private|protected}2 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}1constructor
friend function %1 is a %select{private|protected}0 member of %3
capture of variable '%0' as type %1 calls %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}2constructor
address of overloaded function %0 is ambiguous
cannot form member pointer of type %0 without '&' and class name
address of overloaded function %0 does not match required type %1
address of overloaded function %0 cannot be converted to type %1
cannot take address of function %0 because parameter %1 has pass_object_size attribute
conflicting address space qualifiers are provided between types %0 and %1
'delete' cannot delete objects of type %0 in address space '%1'
'new' cannot allocate objects of type %0 in address space '%1'
cannot take address of function %0 because its constraints are not satisfied
cannot take address of function %0 because it has one or more non-tautological enable_if conditions
TLS model '%0' is not yet supported on AIX
alias definition of %0 after tentative definition
definition %0 cannot also be an %select{alias|ifunc}1
aliases are not supported on darwin
CUDA does not support aliases
extraneous template parameter list in alias template declaration
'align_value' attribute requires integer constant
%0 attribute cannot be applied to a %select{function parameter|variable with 'register' storage class|'catch' variable|bit-field}1
redeclaration has different alignment requirement (%1 vs %0)
%0 must be specified on definition if it is specified on any declaration
requested alignment is less than minimum alignment of %1 for type %0
aligned %select{allocation|deallocation}0 function of type '%1' is %select{only|not}4 available on %2%select{ %3 or newer|}4
'aligned' attribute requires integer constant
requested alignment is dependent but declaration is not dependent
requested alignment is not a power of 2
requested alignment must be %0 or smaller
requested alignment must be %0 or greater
invalid application of 'alignof' to a field of a class still being defined
allocating an object of abstract class type %0
expected initializer
ambiguous cast from base %0 to derived %1:%2
ambiguous conversion of delete expression of type %0 to a pointer
ambiguous conversion from derived class %0 to base class %1:%2
constructor of %0 inherited from multiple base class subobjects
member %0 found in multiple base classes of different types
non-static member %0 found in multiple base-class subobjects of type %1:%2
ambiguous conversion from pointer to member of %select{base|derived}0 class %1 to pointer to member of %select{derived|base}0 class %2:%3
reference to %0 is ambiguous
multiple suitable %0 functions in %1
a type named %0 is hidden by a declaration in a different namespace
anonymous bit-field has negative width (%0)
anonymous bit-field cannot have qualifiers
anonymous property is not supported
anonymous %select{struct|union}0 can only contain non-static data members
member of anonymous %select{struct|union}0 redeclares %1
anonymous %select{struct|union}0 cannot contain a %select{private|protected}1 data member
functions cannot be declared in an anonymous %select{struct|union}0
static members cannot be declared in an anonymous %select{struct|union}0
types cannot be declared in an anonymous %select{struct|union}0
anonymous %select{structs|structs and classes}0 must be %select{struct or union|class}0 members
anonymous unions at namespace or global scope must be declared 'static'
anonymous union at class scope must not have a storage specifier
%select{x86|x86-64}0 'interrupt' attribute only applies to functions that have %select{a 'void' return type|only a pointer parameter optionally followed by an integer parameter|a pointer as the first parameter|a %2 type as the second parameter}1
interrupt service routine cannot be called directly
must explicitly describe intended ownership of an object array parameter
existing instance variable %1 for property %0 with %select{unsafe_unretained|assign}2 attribute must be __unsafe_unretained
cannot perform atomic operation on a pointer to type %0: type has non-trivial ownership
cannot capture __autoreleasing variable in a %select{block|lambda by copy}0
%select{__block variables|global variables|fields|instance variables}0 cannot have __autoreleasing ownership
incompatible types casting %0 to %1 with a %select{__bridge|__bridge_transfer|__bridge_retained}2 cast
cast of %select{Objective-C|block|C}0 pointer type %1 to %select{Objective-C|block|C}2 pointer type %3 cannot use %select{__bridge|__bridge_transfer|__bridge_retained}4
%select{cast|implicit conversion}0 of %select{Objective-C|block|C}1 pointer type %2 to %select{Objective-C|block|C}3 pointer type %4 requires a bridged cast
collection expression type %0 is a forward declaration
%select{implicit conversion|cast}0 of weak-unavailable object of type %1 to a __weak object of type %2
method implementation does not match its declaration
ARC forbids explicit message send of %0
ARC forbids %select{implementation|synthesis}0 of %1
ARC forbids use of %0 in a @selector
%select{|unsafe_unretained|strong|weak}1 property %0 may not also be declared %select{|__unsafe_unretained|__strong|__weak|__autoreleasing}2
%select{pointer|reference}1 to non-const type %0 with no explicit ownership
init methods must return a type related to the receiver type
method was declared as %select{an 'alloc'|a 'copy'|an 'init'|a 'new'}0 method, but its implementation doesn't match because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
no visible @interface for %0 declares the selector %1
no known %select{instance|class}1 method for selector %0
%select{implicit conversion|cast}0 of %select{%2|a non-Objective-C pointer type %2|a block pointer|an Objective-C pointer|an indirect pointer to an Objective-C pointer}1 to %3 is disallowed with ARC
multiple methods named %0 found with mismatched result, parameter type or attributes
'new' cannot allocate an array of %0 with no explicit ownership
explicit ownership qualifier on cast result has no effect
passing address of %select{non-local|non-scalar}0 object to __autoreleasing parameter for write-back
ARC forbids synthesizing a property of an Objective-C object with unspecified ownership or storage attribute
performSelector names a selector which retains the object
pseudo-destructor destroys object of type %0 with inconsistently-qualified type %1
receiver %0 for class message is a forward declaration
receiver type %0 for instance message is a forward declaration
existing instance variable %1 for strong property %0 may not be %select{|__unsafe_unretained||__weak}2
thread-local variable has non-trivial ownership: type is %0
incompatible pointer types passing retainable parameter of type %0to a CF function expecting %1 type
class is incompatible with __weak references
the result of a delegate init call must be immediately returned or assigned to 'self'
cannot create __weak reference in file using manual reference counting
dereferencing a __weak pointer is not allowed due to possible null value caused by race condition, assign it to strong variable first
cannot create __weak reference because the current deployment target does not support weak references
assignment of a weak-unavailable object to a __weak object
synthesizing __weak instance variable of type %0, which does not support weak references
parameter may not be qualified with an address space
argument value %0 is outside the valid range [%1, %2]
argument %0 value should represent a contiguous bit field
argument should be a multiple of %0
argument should be a power of 2
argument should be an 8-bit value shifted by a multiple of 8 bits
argument should be an 8-bit value shifted by a multiple of 8 bits, or in the form 0x??FF
arithmetic on pointer to interface %0, which is not a constant size for this architecture and platform
coprocessor %0 must be configured as %select{GCP|CDE}1
invalid special register for builtin
array designator range [%0, %1] is empty
array designator value '%0' is negative
array designator cannot initialize non-array type %0
array designator index (%0) exceeds array bounds (%1)
array has %select{incomplete|sizeless}0 element type %1
cannot initialize array %diff{of type $ with array of type $|with different type of array}0,1
initializing wide char array with incompatible wide string literal
initializing wide char array with non-wide string literal
cannot initialize array %diff{of type $ with non-constant array of type $|with different type of array}0,1
array initializer must be an initializer list%select{| or string literal| or wide string literal}0
initializing 'char8_t' array with plain string literal
%select{|ISO C++20 does not permit }0initialization of char array with UTF-8 string literal%select{ is not permitted by '-fchar8_t'|}0
initializing char array with wide string literal
array size must be specified in new expression with no initializer
array of abstract class type %0
array section does not specify contiguous storage
array section does not specify length for outermost dimension
ambiguous conversion of array size expression of type %0 to an integral or enumeration type
array size expression of type %0 requires explicit conversion to type %1
array size expression has incomplete class type %0
size of array has non-integer type %0
array size expression must have integral or %select{|unscoped }0enumeration type, not %1
variable length array must be bound in function definition
star modifier used outside of function prototype
%0 used in non-outermost array type derivation
%0 used in array declarator outside of function prototype
array is too large (%0 elements)
automatic variable qualified with an%select{| invalid}0 address space
bad type for named register variable
asm operand has incomplete type %0
more than one input constraint matches the same output '%0'
register '%0' unsuitable for global register variables on this target
invalid input constraint '%0' in asm
invalid input size for constraint '%0'
invalid lvalue in asm input for constraint '%0'
invalid lvalue in asm output
invalid output constraint '%0' in asm
invalid output size for constraint '%0'
parameter references not allowed in naked functions
'this' pointer references not allowed in naked functions
reference to a %select{bit-field|vector element|global register variable}0 in asm %select{input|output}1 with a memory constraint '%2'
size of register '%0' does not match variable size
unsupported inline asm: input with type %diff{$ matching output with type $|}0,1
asm constraint has an unexpected number of alternatives: %0 vs %1
unknown register name '%0' in asm
unwind clobber can't be used with asm goto
type %0 in generic association compatible with previously specified type %1
type %0 in generic association incomplete
type %0 in generic association not an object type
type %0 in generic association is a variably modified type
use of @defs is not supported on this architecture and platform
address argument to atomic builtin cannot be const-qualified (%0 invalid)
argument to atomic builtin of type '_ExtInt' is not supported
Atomic memory operand must have a power-of-two size
address argument to atomic builtin must be a pointer (%0 invalid)
address argument to atomic builtin must be a pointer to integer, floating-point or pointer (%0 invalid)
address argument to atomic builtin must be a pointer to integer or pointer (%0 invalid)
address argument to atomic builtin must be a pointer to 1,2,4,8 or 16 byte type (%0 invalid)
address argument to load or store exclusive builtin must be a pointer to 1,2,4 or 8 byte type (%0 invalid)
atomic %select{load|store}0 requires runtime support that is not available for this target
synchronization scope argument to atomic operation is invalid
address argument to atomic operation must be a pointer to _Atomic type (%0 invalid)
address argument to atomic operation must be a pointer to %select{|atomic }0integer (%1 invalid)
address argument to atomic operation must be a pointer to %select{|atomic }0integer or pointer (%1 invalid)
address argument to atomic operation must be a pointer to %select{|atomic }0integer, pointer or supported floating point type (%1 invalid)
address argument to %select{atomic|__sync}0 operation must be a pointer to a non address discriminated type (%1 invalid)
address argument to atomic operation must be a pointer to non-%select{const|constant}0 _Atomic type (%1 invalid)
address argument to atomic operation must be a pointer to non-const type (%0 invalid)
address argument to atomic operation must be a pointer to a trivially-copyable type (%0 invalid)
atomic property of reference type %0 cannot have non-trivial assignment operator
_Atomic cannot be applied to %select{incomplete |array |function |reference |atomic |qualified |sizeless ||integer }0type %1 %select{|||||||which is not trivially copyable|}0
%0 attribute expression never produces a constant expression
the type %0 is already explicitly ownership-qualified
%0 attribute can only be applied to a %select{function|method}1 with an error parameter
%0 attribute with '%1' convention can only be applied to a %select{function|method}2 returning %select{an integral type|a pointer}3
tls_model must be "global-dynamic", "local-dynamic", "initial-exec" or "local-exec"
function type may not be qualified with an address space
multiple address spaces specified for type
address space is negative
address space is larger than the maximum supported (%0)
requested alignment must be %0 bytes or smaller
%0 attribute argument is invalid: %select{max must be 0 since min is 0|min must not be greater than max}1
%0 attribute must be greater than 0
%0 attribute requires parameter %1 to be %select{int or bool|an integer constant|a string|an identifier|a constant expression}2
%0 attribute parameter %1 is out of bounds
%0 attribute parameter %1 is out of bounds: %plural{0:no parameters to index into|1:can only be 1, since there is one parameter|:must be between 1 and %2}2
%0 attribute requires integer constant between %1 and %2 inclusive
%0 attribute requires %select{int or bool|an integer constant|a string|an identifier}1
%0 attribute requires an integer type argument
%0 attribute requires a pointer type argument
'__clang_arm_builtin_alias' attribute can only be applied to an ARM builtin
%0 is only supported when '-msve-vector-bits=<bits>' is specified with a value of 128, 256, 512, 1024 or 2048.
'__clang_arm_mve_strict_polymorphism' attribute can only be applied to an MVE/NEON vector type
Neon vector size must be 64 or 128 bits
invalid SVE vector size '%0', must match value set by '-msve-vector-bits' ('%1')
%0 attribute can only be applied to a ARM or RISC-V builtin
'cleanup' argument %select{|%1 |%1 }0is not a %select{||single }0function
'cleanup' function %0 parameter has %diff{type $ which is incompatible with type $|incompatible type}1,2
'cleanup' function %0 must take 1 parameter
'__declspec(dllexport)' cannot be applied to more than one default constructor in %0
attribute %q0 cannot be applied to a deleted function
lambda cannot be declared %0
attribute %q0 cannot be applied to member of %q1 class
%q0 must have external linkage when declared %q1
redeclaration of %q0 cannot add %q1 attribute
%q0 cannot be thread local when declared %q1
definition of dllimport data
dllimport cannot be applied to non-inline function definition
definition of dllimport static field not allowed
%0 attribute argument may only refer to a function parameter of integer type
%select{a reference type|an array type|a non-vector or non-vectorizable scalar type}0 is an invalid argument to attribute %1
invalid argument expression to firebloom attribute
%0 attribute is invalid for the implicit this argument
invalid matrix element type %0
vector size not an integral multiple of component size
%0 attribute applied to non-SVE type %1
invalid vector element type %0
%0 attribute does not appear on the first declaration
multiple garbage collection attributes specified for type
%0 attribute has no effect on defaulted or deleted functions
%0 attribute is permitted on definitions only
empty %0 cannot be composed with named ones
%0 attribute cannot be used with pointers to members
function type with %0 attribute must have C linkage
%0 attribute is not supported in %select{C|C++|Objective-C}1
%0 attribute is not supported on '%1'
%0 attribute can only be applied once per parameter
attribute only applies to output parameters
redeclaration of %0 must %select{not |}1have the 'overloadable' attribute
at most one overload for a given name may lack the 'overloadable' attribute
'overloadable' function %0 must have a prototype
%0 attribute only applies to%select{| constant}1 pointer arguments
argument %0 to 'preferred_name' attribute is not a typedef for a specialization of %1
'regparm' parameter must be between 0 and %0 inclusive
'regparm' is not valid on this platform
attribute %0 is supported in the OpenCL version %1%select{| onwards}2
%0 attribute requires a %select{positive|non-negative}1 integral compile time constant expression
argument to %select{'code_seg'|'section'}1 attribute is not valid for this target: %0
'selectany' can only be applied to data items with external linkage
'sentinel' parameter 1 less than zero
'sentinel' parameter 2 not 0 or 1
%0 size too large
%0 attribute cannot be applied to sizeless type %1
'symbol_metadata_footnote' attributes must use section names that are between 1 and 9 characters long, excluding the leading underscores.
%0 attribute takes at least %1 argument%s1
%0 attribute takes no more than %1 argument%s1
%0 attribute is not supported on targets missing %1; specify an appropriate -march= or -mcpu=
the vecreturn attribute can only be used on a POD (plain old data) class or structure (i.e. no virtual functions)
the vecreturn attribute can only be used on a class or structure with one member, which must be a vector
weak declaration cannot have internal linkage
weakref declaration of %0 must be in a global context
weakref declaration must have internal linkage
weakref declaration of %0 must also have an alias attribute
%0 attribute only applies to %select{functions|unions|variables and functions|functions and methods|functions, methods and blocks|functions, methods, and parameters|variables|variables and fields|variables, data members and tag types|types and namespaces|variables, functions and classes|kernel functions|non-K&R-style functions}1
%0 attribute only applies to %1
%0 attribute %plural{0:takes no arguments|1:takes one argument|:requires exactly %1 arguments}1
zero %0 size
%0 and %1 attributes are not compatible
cannot pass bit-field as __auto_type initializer in C
%select{'auto'|'decltype(auto)'|'__auto_type'|template arguments}0 deduced as %1 in declaration of %2 and deduced as %3 in declaration of %4
cannot deduce return type %0 from returned value of type %1
'%select{auto|decltype(auto)}0' in return type deduced as %1 here but deduced as %2 in earlier return statement
cannot deduce return type %0 for function with no return statements
cannot deduce return type from initializer list
cannot deduce return type %0 from omitted return expression
function %0 with deduced return type cannot be used before it is defined
function with deduced return type cannot be virtual
deduced conflicting types %diff{($ vs $) |}0,1for initializer list element type
cannot use __auto_type with initializer list in C
'auto' return without trailing return type; deduced return types are a C++14 extension
new expression for type %0 contains multiple constructor arguments
new expression for type %0 has incompatible constructor argument of type %1
new expression for type %0 requires a constructor argument
%select{function with deduced return type|declaration with trailing return type}0 must be the only declaration in its group
%select{'auto'|'decltype(auto)'|'__auto_type'|use of %select{class template|function template|variable template|alias template|template template parameter|concept|template}2 %3 requires template arguments; argument deduction}0 not allowed %select{in function prototype|in non-static struct member|in struct member|in non-static union member|in union member|in non-static class member|in interface member|in exception declaration|in template parameter until C++17|in block literal|in template argument|in typedef|in type alias|in function return type|in conversion function type|here|in lambda parameter|in type allocated by 'new'|in K&R-style function parameter|in template parameter|in friend declaration|in function prototype that is not a function declaration|in requires expression parameter}1
'auto' variable template instantiation is not allowed
variable %0 with type %1 has incompatible initializer of type %2
cannot deduce actual type for variable %0 with type %1 from initializer list
initializer for variable %0 with type %1 contains multiple expressions
initializer for variable %0 with type %1 is empty
cannot deduce type for variable %1 with type %2 from %select{parenthesized|nested}0 initializer list
declaration of variable %0 with deduced type %1 requires an initializer
variable %0 declared with deduced type %1 cannot appear in its own initializer
return type of 'await_suspend' is required to be 'void' or 'bool' (have %0)
%0 is an incomplete type
property implementation must have its declaration in the category %0
%select{const_cast||||C-style cast|functional-style cast|}0 to %2, which is not a reference, pointer-to-object, or pointer-to-data-member
address of overloaded function %0 cannot be cast to type %1
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|addrspace_cast}0 from %1 to %2 converts between mismatching address spaces
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from bit-field lvalue to reference type %2
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|addrspace_cast}0 from %1 to %2 is not allowed
cannot %select{||reinterpret_cast||C-style cast||}0 from member pointer type %1 to member pointer type %2 of different size
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2 casts away qualifiers
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|addrspace_cast}0 from rvalue to reference type %2
%select{||reinterpret_cast||C-style cast||}0 from scalar %1 to vector %2 of different size
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2, which are not related by inheritance, is not allowed
%select{||reinterpret_cast||C-style cast||}0 from vector %1 to scalar %2 of different size
%select{||reinterpret_cast||C-style cast||}0 from vector %1 to vector %2 of different size
%0 is not a class type
%0 is not polymorphic
cannot use dynamic_cast to convert from %0 to %1
invalid target type %0 for dynamic_cast; target type must be a reference or pointer type to a defined class
%0 cannot be used as the type of a kernel parameter
cannot cast from lvalue of type %1 to rvalue reference type %2; types are not compatible
left hand operand to %0 must be a %select{|pointer to }1class compatible with the right hand operand, but is %2
right hand operand to %0 has non-pointer-to-member type %1
function multiversioning doesn't support %select{feature|architecture}0 '%1'
cannot allocate %select{function|reference}1 type %0 with new
%0 cannot be the name of a parameter
parameter name cannot have template arguments
property implementation must be in a class or category implementation
property implementation must have its declaration in interface %0 or one of its extensions
bad receiver type %0
reinterpret_cast cannot resolve overloaded function %0 to type %1
reinterpret_cast of a %0 to %1 needs its address, which is not allowed
cast from pointer to smaller type %2 loses information
cannot cast from rvalue of type %1 to rvalue reference type %2; types are not compatible
cannot cast from type %1 to member pointer type %2
address of overloaded function %0 cannot be static_cast to type %1
cannot cast from type %1 to pointer type %2
%0 cannot be the name of a variable or data member
base class %0 has a flexible array member
unions cannot have base classes
base class initializer %0 names both a direct base class and an inherited virtual base class
constructor initializer %0 does not name a class
base specifier must name a class
%0 attribute cannot be applied to a base specifier
binding %0 cannot appear in the initializer of its own decomposition declaration
arithmetic operation in dependent count expression is only allowed for struct fields
__builtin_bit_cast %select{source|destination}0 type must be trivially copyable
__builtin_bit_cast source size does not equal destination size (%0 vs %1)
bit-field %0 has negative width (%1)
named bit-field %0 has zero width
%select{bit-field %1|anonymous bit-field}0 is too wide (%2 bits)
width of%select{ anonymous|}0 bit-field%select{| %1}0 (%2 bits) exceeds the %select{width|size}3 of its type (%4 bit%s4)
variable is not assignable (missing __block type specifier)
'extern' variable cannot have an initializer
__block attribute not allowed, only allowed on local variables
__block attribute not allowed on declaration with a variably modified type
non-void block should return a value
block cannot return %select{array|function}0 type %1
blocks support disabled - compile with -fblocks or %select{pick a deployment target that supports them|for OpenCL 2.0}0
reference to non-static member function must be called%select{|; did you mean to call it with no arguments?}0
%select{string|character|boolean|numeric}0 literal must be prefixed by '@' in a collection
'break' statement not in loop or switch statement
__builtin_btf_type_id argument %0 not a constant
first argument to __builtin_annotation must be an integer
second argument to __builtin_annotation must be a non-wide string constant
this builtin is not supported on the requested cpu, please specify -mcpu=%0 or newer
definition of builtin function %0
builtin functions must be directly called
function-style cast to a builtin type can only take one argument
%ordinal0 argument must be a %select{vector, integer or floating point type|matrix|pointer to a valid matrix element type|signed integer or floating point type|vector type|floating point type|vector of integers}1 (was %2)
%select{non-pointer|function pointer|void pointer}0 argument to '__builtin_launder' is not allowed
argument to __builtin_longjmp must be a constant 1
__builtin_longjmp is not supported for the current target
matrix types extension is disabled. Pass -fenable-matrix to enable it
%0 dimension is outside the allowed range [1, %1]
the pointee of the 2nd argument must match the element type of the 1st argument (%0 != %1)
%0 argument must be a constant unsigned integer expression
cannot store matrix to read-only pointer
stride must be greater or equal to the number of rows
call to '%select{__builtin_operator_new|__builtin_operator_delete}0' selects non-usual %select{allocation|deallocation}0 function
cannot redeclare builtin function %0
'%0' is only available in %1
__builtin_setjmp is not supported for the current target
builtin is not supported on this target
this builtin is only available on x86-64 and aarch64 targets
%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature, not permitted in C++
calling %0 with incomplete return type %1
argument type %0 is incomplete
calling function with incomplete return type %0
'callback' attribute argument %0 is not a known function parameter
'callback' attribute specifies invalid callback callee
multiple 'callback' attributes specified
'callback' attribute specifies no callback callee
'callback' attribute callee may not be variadic
'callback' attribute callee does not have function type
'callback' argument at position %0 references unavailable implicit 'this'
'called_once' attribute only applies to function-like parameters
cannot find suitable %select{getter|setter}0 for property %1
cannot form a pointer-to-member to member %0 of reference type %1
cannot pass non-trivial C object of type %0 by value to variadic %select{function|block|method|constructor}1
cannot pass object with interface type %0 by value through variadic %select{function|block|method|constructor}1
cannot pass object with interface type %1 by value to variadic %select{function|block|method|constructor}2; expected type from format string was %3
cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2
cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
capture host variable %0 by reference in device or host device lambda function
__block variable %0 cannot be captured in a %select{lambda expression|captured statement}1
non-local lambda expression cannot have a capture-default
%0 in capture list does not name a variable
%0 can appear only once in a capture list
%0 cannot be captured because it does not have automatic storage duration
by-copy capture of value of abstract type %0
by-copy capture of variable %0 with %select{incomplete|sizeless}1 type %2
%select{function|parameter}0 declared '[[carries_dependency]]' after its first declaration
'[[carries_dependency]]' attribute only allowed on parameter in a function declaration or lambda
'case' statement not in switch statement
cannot type-cast from __bf16
operand of type %0 cannot be cast to a pointer type
pointer cannot be cast to type %0
cannot type cast @selector expression
cannot type-cast to __bf16
cannot catch incomplete type %0
cannot catch pointer to incomplete type %0
cannot catch reference to incomplete type %0
@catch parameter is not a pointer to an interface type
cannot catch exceptions by rvalue reference
cannot catch %select{|reference to }0sizeless type %1
cannot catch variably modified type %0
cannot define %select{category|class extension}0 for undefined class %1
property declared in category %0 cannot be implemented in class implementation
function declared '%0' here was previously declared %select{'%2'|without calling convention}1
parameter %0 must have a complete type to use function %1 with the %2 calling convention
function with no prototype cannot use the %0 calling convention
variadic function cannot use %0 calling convention
CFString literal is not a string constant
circular inheritance between %0 and %1
cannot declare class extension for %0 after class implementation
base %0 is marked '%select{final|sealed}1'
property %0 is a class property; did you mean to access it with class '%1'?
%0 redeclared with '%1' access
'objc_class_stub' attribute cannot be specified on a class that does not have the 'objc_subclassing_restricted' attribute
property follows Cocoa naming convention for returning 'owned' objects
the type %0 is not a pointer to a fast-enumerable object
type of machine mode does not support base vector types
compound literal in function scope may not be qualified with an address space
%select{block pointer|pointer|reference}0 to function type %select{%2 |}1cannot have '%3' qualifier
concept declarations may only appear in global or namespace scope
extraneous template parameter list in concept definition
concept cannot have associated constraints
concept template parameter list must have at least one parameter; explicit specialization of concepts is not allowed
operands to conditional of types%diff{ $ and $|}0,1 are incompatible in ARC mode
conditional expression is ambiguous; %diff{$ can be converted to $ and vice versa|types can be convert to each other}0,1
conditional expression is ambiguous; %diff{$ and $|types}0,1 can be converted to several common types
cannot mix vectors and extended vectors in a vector conditional
vector condition type %0 and result type %1 do not have elements of the same size
GNU vector conditional operand cannot be %select{void|a throw expression}0
vector operands to the vector conditional must be the same type %diff{($ and $)|}0,1}
enumeration type %0 is not allowed in a vector conditional
vector condition type %0 and result type %1 do not have the same number of elements
%select{left|right}1 operand to ? is void, but %select{right|left}1 operand is of type %0
CUDA special function '%0' must have scalar return type
conflicting types for alias %0
conflicting code segment specifiers
instance variable %0 has conflicting bit-field width
conflicting instance variable names: %0 vs %1
instance variable %0 has conflicting type%diff{: $ vs $|}1,2
virtual function %0 has different calling convention attributes %diff{($) than the function it overrides (which has calling convention $)|than the function it overrides}1,2
conflicting super class name %0
conflicting types for %0
argument to %0 must be a constant integer
consteval function %0 cannot override a non-consteval function
statement not allowed in %select{constexpr|consteval}1 %select{function|constructor}0
no return statement in %select{constexpr|consteval}0 function
destructor cannot be declared %select{<ERROR>|constexpr|consteval|constinit}0
destructor cannot be declared %select{<ERROR>|constexpr|consteval|constinit}0 because %select{data member %2|base class %3}1 does not have a constexpr destructor
constexpr if condition is not a constant expression
variable of non-literal type %1 cannot be defined in a constexpr %select{function|constructor}0
%select{static|thread_local}1 variable not permitted in a constexpr %select{function|constructor}0
'main' is not allowed to be declared %select{constexpr|consteval}0
%select{constexpr|consteval}2 %select{function|constructor}1's %ordinal0 parameter type %3 is not a literal type
%select{constexpr|consteval}0 function's return type %1 is not a literal type
%select{non-constexpr|constexpr|consteval}1 declaration of %0 follows %select{non-constexpr|constexpr|consteval}2 declaration
non-void %select{constexpr|consteval}1 function %0 should return a value
declaration of constexpr static data member %0 requires an initializer
%select{class|struct|interface|union|enum}0 cannot be marked %select{<ERROR>|constexpr|consteval|constinit}1
constexpr variable cannot have non-literal type %0
constexpr variable %0 must have constant destruction
constexpr variable %0 must be initialized by a constant expression
virtual function cannot be constexpr
constexpr %select{member function|constructor}0 not allowed in %select{struct|interface|class}1 with virtual base %plural{1:class|:classes}2
variably-modified type %0 cannot be used in a constexpr %select{function|constructor}1
%select{<ERROR>|constexpr|consteval|constinit}0 can only be used in %select{|variable and function|function|variable}0 declarations
'constinit' specifier added after initialization of variable
local variable cannot be declared 'constinit'
virtual function cannot have a requires clause
copy constructor must pass its first argument by reference
constructor cannot be declared '%0'
constructor cannot be redeclared
constructor cannot have a return type
class extension has no primary class
cannot jump from this continue statement to the loop increment; jump bypasses initialization of loop condition variable
'continue' statement not in loop statement
conversion function must be a non-static member function
conversion function cannot be redeclared
conversion function cannot have a return type
conversion function cannot convert to an array type
conversion function cannot convert to a function type
conversion function cannot be variadic
cannot specify any part of a return type in the declaration of a conversion function%select{; put the complete type after 'operator'|; use a typedef to declare a conversion to %1|; use an alias template to declare a conversion to %1|}0
conversion function cannot have any parameters
first two arguments to __builtin_convertvector must have the same number of elements
first argument to __builtin_convertvector must be a vector
second argument to __builtin_convertvector must be a vector type
'&' must precede a capture when the capture default is '='
std::experimental::coroutine_handle missing a member named '%0'
'%1' cannot be used in %select{a constructor|a destructor|the 'main' function|a constexpr function|a function with a deduced return type|a varargs function|a consteval function}0
Objective-C methods as coroutines are not yet supported
'%0' cannot be used outside a function
the expression 'co_await __promise.final_suspend()' is required to be non-throwing
%0: 'get_return_object_on_allocation_failure()' must be a static member function
the coroutine promise type %0 declares both 'return_value' and 'return_void'
%0 is required to have a non-throwing noexcept specification when the promise type declares 'get_return_object_on_allocation_failure()'
the coroutine promise type %0 must declare either 'return_value' or 'return_void'
this function cannot be a coroutine: %0 is an incomplete type
%0 is required to declare the member 'unhandled_exception()'
this function cannot be a coroutine: missing definition of specialization %0
'%0' cannot be used in an unevaluated context
'%0' cannot be used in the handler of a try block
return type of virtual function %3 is not covariant with the return type of the function it overrides (ambiguous conversion from derived class %0 to base class %1:%2)
invalid covariant return for virtual function: %1 is a %select{private|protected}2 base class of %0
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is incomplete)
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is not derived from %2)
return type of virtual function %0 is not covariant with the return type of the function it overrides (class type %1 is more qualified than class type %2
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 has different qualifiers than %2)
'cpu_dispatch' function redeclared with different CPUs
multiple 'cpu_specific' functions cannot specify the same CPU: %0
%select{constructor|destructor}1 %0 must not return void expression
illegal device builtin %select{surface|texture}0 reference class template %1 declared here
illegal device builtin %select{surface|texture}0 reference type %1 declared here
cannot use '%0' in %select{__device__|__global__|__host__|__host__ __device__}1 function
__shared__ variable %0 cannot be 'extern'
__shared__ local variables not allowed in %select{__device__|__global__|__host__|__host__ __device__}0 functions
__constant__, __device__, and __managed__ are not allowed on non-static local variables
%select{__device__|__global__|__host__|__host__ __device__}0 function %1 cannot overload %select{__device__|__global__|__host__|__host__ __device__}2 function %3
constexpr function %0 without __host__ or __device__ attributes cannot overload __device__ function with same signature.  Add a __host__ attribute, or build with -fno-cuda-host-device-constexpr.
cannot use variable-length arrays in %select{__device__|__global__|__host__|__host__ __device__}0 functions
module name '%0' specified on command line does not match name of module
%select{reference|backing array for 'std::initializer_list'}2 %select{|subobject of }1member %0 %select{binds to|is}2 a temporary object whose lifetime would be shorter than the lifetime of the constructed object
dealloc return type must be correctly specified as 'void' under ARC, instead of %0
GNU decimal type extension not supported
%0 attribute cannot be applied to a statement
'%0' declared as an array with a negative size
declarator requires an identifier
'__declspec(thread)' applied to variable that already has a thread-local storage specifier
'decltype(auto)' cannot be combined with other type specifiers
cannot form %select{pointer to|reference to|array of}0 'decltype(auto)'
'decltype(auto)' can only be used as a return type in a function declaration
cannot deduce 'decltype(auto)' from initializer list
'decltype(auto)' not allowed here
'decltype' cannot be used to name a declaration
cannot decompose members of ambiguous base class %1 of %0:%2
cannot decompose class type %0 because it has an anonymous %select{struct|union}1 member
decomposition declaration not permitted in this context
cannot decompose members of inaccessible base class %1 of %0
cannot decompose %select{private|protected}0 member %1 of %3
cannot decompose lambda closure type
cannot decompose class type %1: %select{its base classes %2 and|both it and its base class}0 %3 have non-static data members
decomposition declaration must be the only declaration in its group
decomposition declaration cannot be declared with parentheses
decomposition declaration %0 requires an initializer
decomposition declaration cannot be declared %plural{1:'%1'|:with '%1' specifiers}0
cannot decompose this type; 'std::tuple_element<%0>::type' does not name a type
cannot decompose this type; 'std::tuple_size<%0>::value' is not a valid integral constant expression
decomposition declaration template not supported
decomposition declaration cannot be declared with type %0; declared type must be 'auto' or reference to 'auto'
cannot decompose %select{union|non-class, non-array}1 type %2
type %0 decomposes into %3 %plural{1:element|:elements}2, but %select{%plural{0:no|:only %1}1|%1}4 %plural{1:name was|:names were}1 provided
cannot decrement expression of type bool
cannot %select{form pointer to|form reference to|form array of|form function returning|use parentheses when declaring variable with}0 deduced class template specialization type
ambiguous deduction for template arguments of %0
no viable constructor or deduction guide for deduction of template arguments of %0
class template argument deduction for %0 selected a deleted constructor
class template argument deduction for %0 selected an explicit %select{constructor|deduction guide}1 for copy-list-initialization
template %0 has no definition and no %select{|viable }1deduction guides for deduction of template arguments
%select{<error>|function template|variable template|alias template|template template parameter|concept|template}0 %1 requires template arguments; argument deduction only allowed for class templates
deduced non-type template argument does not have the same type as the corresponding template parameter%diff{ ($ vs $)|}0,1
deduced return types are a C++14 extension
typename specifier refers to %select{class template|function template|variable template|alias template|template template parameter|template}0; argument deduction not allowed here
deduced type %1 of deduction guide is not %select{|written as }2a specialization of template %0
deduction guide cannot have a function definition
deduction guide cannot be declared '%0'
cannot specify deduction guide for %select{<error>|function template|variable template|alias template|template template parameter|concept|dependent template name}0 %1
deduction guide declaration without trailing return type
redeclaration of deduction guide
deduction guide cannot be %select{explicitly instantiated|explicitly specialized}0
deduction guide template contains %select{a template parameter|template parameters}0 that cannot be deduced
cannot specify any part of a return type in the declaration of a deduction guide
deduction guide has different access from the corresponding member template
deduction guide must be declared in the same scope as template %q0
exception specifications of %select{return|argument}0 types differ
default template argument in a class template partial specialization
addition of default argument on redeclaration makes this constructor a %select{default|copy|move}0 constructor
default initialization of an object of const type %0%select{| without a user-provided default constructor}1
default member initializer for %0 uses itself
default member initializer for %1 needed within definition of enclosing class %0 outside of member functions
'default' statement not in switch statement
return type of defaulted 'operator<=>' cannot be deduced because three-way comparison for %select{|member|base class}0 %1 has a deduced return type and is not yet defined
deduced return type for defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator must be 'auto', not %1
defaulted member %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator must be const-qualified
%select{<ERROR>|equality|three-way|equality|relational}0 comparison operator can only be defaulted in a class definition
invalid parameter type for defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator; found %1, expected %2%select{| or %4}3
parameters for defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator must have the same type%diff{ (found $ vs $)|}1,2
return type for defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator must be 'bool', not %1
comparison operator template cannot be defaulted
the parameter for an explicitly-defaulted copy assignment operator must be an lvalue reference type
the parameter for this explicitly-defaulted copy %select{constructor|assignment operator}0 is const, but a member or base requires it to be non-const
the parameter for an explicitly-defaulted move %select{constructor|assignment operator}0 may not be const
an explicitly-defaulted %select{|copy |move }0constructor cannot have default arguments
an explicitly-defaulted %select{copy|move}0 assignment operator may not have 'const'%select{, 'constexpr'|}1 or 'volatile' qualifiers
explicitly-defaulted %select{copy|move}0 assignment operator must return %1
an explicitly-defaulted %select{|copy |move }0constructor cannot be variadic
the parameter for an explicitly-defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 may not be volatile
definition of explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}0
definition of implicitly declared %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}1
delegating constructors are permitted only in C++11
an initializer for a delegating constructor must appear alone
converting delete expression from type %0 to type %1 invokes an explicit conversion function
deleting incomplete class type %0; no conversions to pointer type
cannot delete expression of type %0
deleted definition must be first declaration
attempt to use a deleted function
constructor inherited by %0 from base class %1 is implicitly deleted
'main' is not allowed to be deleted
deleted function %0 cannot override a non-deleted function
typename specifier refers to %select{class template|function template|variable template|alias template|template template parameter|template}0 member in %1; argument deduction not allowed here
no candidate function template was found for dependent friend function template specialization
nested name specifier for a declaration cannot depend on a template parameter
type of specialized non-type template argument depends on a template parameter of the partial specialization
%select{declaration|definition}0 of %select{struct|interface|union|class|enum}1 in a dependent scope
non-type template argument specializes a template parameter with dependent type %0
dereference of pointer to incomplete type %0
'objc_designated_initializer' attribute only applies to init methods of interface or class extension declarations
designator in initializer for %select{scalar|indivisible sizeless}0 type %1
designator into flexible array member subobject
%select{no_destroy|always_destroy}0 attribute can only be applied to a variable with static or thread storage duration
destroying operator delete can have only an optional size and optional alignment parameter
destructor cannot be declared '%0'
identifier %0 in object destruction expression does not name the type %1 of the object being destroyed
identifier %0 in object destruction expression does not name a type
destructor type %0 in object destruction expression does not match the type %1 of the object being destroyed
expected the class name after '~' to name the enclosing class
identifier %0 after '~' in destructor name does not name a type
destructor must be a non-static member function
destructor cannot be redeclared
destructor cannot have a return type
destructor cannot be declared as a template
destructor cannot be variadic
destructor cannot have any parameters
invalid diagnostic type for 'diagnose_if'; use "error" or "warning" instead
conflicting asm label
declaration of %0 has a different language linkage
conflicting pass_object_size attributes on parameters
virtual function %0 has a different return type %diff{($) than the function it overrides (which has return type $)|than the function it overrides}1,2
dimension expression does not evaluate to a constant unsigned int
@selector expression formed with direct selector %0
exception specifications are not allowed beyond a single level of indirection
cannot cast %select{private|protected}2 base class %1 to %0
reference to %select{destructor|pseudo-destructor}0 must be called%select{|; did you mean to call it with no arguments?}1
reimplementation of category %1 for class %0
reimplementation of class %0
base class %0 specified more than once as a direct base class
duplicate case value '%0'
duplicate case value: '%0' and '%1' both equal '%2'
duplicate interface definition for class %0
instance variable is already declared
synthesized properties %0 and %1 both claim instance variable %2
duplicate member %0
duplicate declaration of method %0
property has a previous declaration
multiple vtable pointer authentication policies on %0
dynamic property cannot have instance variable specification
dynamic initialization is not supported for __device__, __constant__, __shared__, and __managed__ variables.
catch-all handler must come last
ISO C requires a named parameter before '...'
only function and template parameters can be parameter packs
scalar initializer cannot be empty
initializer for sizeless type %0 cannot be empty
non-integral type %0 is an invalid underlying type
mode %0 is not supported for enumeration types
enumeration previously declared with %select{non|}0fixed underlying type
enumeration previously declared as %select{un|}0scoped
enumeration redeclared with different underlying type %0 (was %1)
enumerator %0 does not exist in instantiation of %1
enumerator value is not representable in the underlying type %0
enumerator value %0 is not representable in the underlying type %1
the event_t type can only be used with __private address space qualifier
exception specification of %0 uses itself
exception specifications are not allowed in %select{typedefs|type aliases}0
exception specification needed for member of incomplete class %0
exception specification is not available until end of class definition
cannot use '%0' with exceptions disabled
excess elements in %select{array|vector|scalar|union|struct}0 initializer
excess elements in initializer for indivisible sizeless type %0
excess elements in char array initializer
expected an 'allocator' clause inside of the target region; provide an 'allocator' clause or use 'requires' directive with the 'dynamic_allocators' clause
expected an allocator expression inside of the target region; provide an allocator expression or use 'requires' directive with the 'dynamic_allocators' clause
%0 is not a class%select{ or namespace|, namespace, or enumeration}1
kernel must have void return type
partial ordering for explicit instantiation of %0 is ambiguous
explicit instantiation cannot be 'constexpr'
explicit instantiation refers to static data member %q0 that is not an instantiation
explicit instantiation declaration (with 'extern') follows explicit instantiation definition (without 'extern')
explicit instantiation has dependent template arguments
duplicate explicit instantiation of %0
explicit instantiation of %0 in class scope
explicit instantiation cannot be 'inline'
explicit instantiation declaration of %0 with internal linkage
explicit instantiation refers to member function %q0 that is not an instantiation
explicit instantiation of %0 must occur at global scope
explicit instantiation of non-templated type %0
explicit instantiation of %0 does not refer to a function template, variable template, member function, member class, or static data member
explicit instantiation of typedef %0
explicit instantiation of %0 not in a namespace enclosing %1
explicit instantiation declaration requires a name
explicit instantiation cannot have a storage class
explicit instantiation of undefined function template %0
explicit instantiation of undefined %select{member class|member function|static data member}0 %1 of class template %2
explicit instantiation of undefined variable template %q0
explicit instantiation of %q0 must occur in namespace %1
explicit instantiation of %q0 must specify a template argument list
'explicit' can only be applied to a constructor or conversion function
'explicit' can only appear on non-static member functions
'explicit' can only be specified inside the class definition
explicit specialization has extraneous, inconsistent storage class '%select{none|extern|static|__private_extern__|auto|register}0'
export declaration cannot be used in a private module fragment
declaration of %0 with internal linkage cannot be exported
%select{empty|static_assert|asm}0 declaration cannot be exported
export declaration can only be used within a module interface unit%select{ after the module declaration|}0
using declaration referring to %0 with internal linkage cannot be exported
export declaration appears within anonymous namespace
export declaration appears within another export declaration
%select{case value|enumerator value|non-type template argument|array size|explicit specifier argument|noexcept specifier argument}0 is not a constant expression
expression is not an %select{integer|integral}0 constant expression
expression is not a string literal
%select{signed|unsigned}0 _ExtInt must have a bit size of at least %select{2|1}0
%select{signed|unsigned}0 _ExtInt of bit sizes greater than %1 not supported
vector component access exceeds type %0
illegal vector component name '%0'
declaration of %1 %select{with C language linkage|in global scope}0 conflicts with declaration %select{in global scope|with C language linkage}0
extern declaration of %0 follows non-extern declaration
non-void block does not return a value
fallthrough annotation does not directly precede switch label
fallthrough annotation is outside switch statement
%0 attribute is only allowed on empty statements
field %0 declared as a function
field designator cannot initialize a %select{non-struct, non-union|non-class}0 type %1
field designator %0 does not refer to a non-static data member
field designator %0 does not refer to any field in type %1
field designator %0 does not refer to any field in type %1; did you mean %2?
field has %select{incomplete|sizeless}0 type %1
data member instantiated with function type %0
field may not be qualified with an address space
filter expression has non-integral type %0
declaration of %0 overrides a '%select{final|sealed}1' function
%0 cannot be set as a default pointer attribute
parameter of array type %0 decays to a __single pointer, and will not allow arithmetic
address argument to atomic arithmetic operation must be a pointer to '__unsafe_indexable' pointer (%0 invalid)
atomic operation on '%select{__indexable|__bidi_indexable|__counted_by|__sized_by|__ended_by}0' pointer is not yet supported
_Atomic on '%select{__indexable|__bidi_indexable|__counted_by|__sized_by|__ended_by|__terminated_by}0' pointer is not yet supported
passing %select{'__counted_by'|'__sized_by'|'__ended_by'|end}0 pointer as __auto_type initializer is not yet supported
parameter '%0' with '%select{__counted_by|__sized_by}1' attribute depending on an indirect count is implicitly read-only and cannot be passed as an indirect argument
arrays with an explicit size decay to counted pointers and cannot also have a count attribute
pointer cannot be '%0' and '__%select{bidi_indexable|indexable}1' at the same time
pointer cannot have count and range at the same time
pointer cannot have more than one %select{bound|type|count|end}0 attribute
argument of '%select{__counted_by|__sized_by}0' attribute cannot refer to declaration of a different lifetime
argument of '%select{__counted_by|__sized_by}0' attribute cannot refer to declaration from a different scope
type %0 cannot have a __counted_by attribute because %1 cannot form an array
cannot reference '%0' after it is changed during consecutive assignments
not allowed to change out parameter used as dependent count expression of other parameter
not allowed to change out parameter with dependent count
assignments to dependent variables should not have side effects between them
external count of a pointer cannot be used with inline assembly
initalizer for %select{count|size|'__counted_by' pointer|'__sized_by' pointer|'__ended_by' pointer|end pointer}0 with side effects is not supported yet
compound assignment on dynamic bound pointer type %0 with side effects is not supported yet;instead, use seperate assignment and binary expressions
%select{negative|positive}0 pointer arithmetic on %select{'__counted_by' |'__sized_by' ||end }1pointer%select{|| that starts the '__ended_by' chain|}1 always traps
conflicting '%select{__counted_by|__sized_by|__ended_by|__terminated_by}0' attribute with the previous %select{function|variable}1 declaration
argument of '%select{__counted_by|__sized_by}0' attribute can only reference function with 'const' attribute
argument of function call '%0' in '__counted_by' attribute is not a constant expression
end-pointer must be '__single'
Firebloom forbids arithmetic on pointers to types with a flexible array member
flexible array member is initialized without a count
flexible array member is initialized with %0 element%select{|s}2, but count value is initialized to %1
'__unsafe_forge_%select{bidi_indexable|single}0' requires a pointer, array or integer address argument
'__unsafe_forge_bidi_indexable' requires an integer size argument
negative %select{address|size}0 argument to '__unsafe_forge_%select{bidi_indexable|single}1'
function pointers cannot be indexable
pointer with '%select{__counted_by|__sized_by}0' and the argument of the attribute must be defined in the same translation unit
incompatible count expression (%0) vs. (%1) in argument to function
incompatible dynamic count pointer argument to function argument type %0
%select{%diff{assigning to $ from incompatible type $|assigning type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1|}2 is an unsafe operation; use '__unsafe_terminated_by_from_indexable()' to perform this conversion
'__terminated_by' pointer converted from a string literal must be NUL-terminated
%select{%diff{assigning to $ from incompatible type $|assigning type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1|}2 that discards '__terminated_by' attribute is not allowed
pointers with incompatible terminators %select{%diff{assigning to $ from incompatible type $|assigning type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1|}2
%select{%diff{assigning to $ from incompatible type $|assigning type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1|}2 requires a linear search for the terminator; use '__terminated_by_to_indexable()' to perform this conversion explicitly
cannot convert single pointer to incomplete type %0 to indexable pointer %1; consider making the destination '__single' to perform this conversion
incrementing '%0' without updating '%1' always traps
incrementing '%0' always traps
decremented indexable pointer '%0' is out of bounds
array subscript with a negative index on indexable pointer '%0' is out of bounds
%select{|implicitly }0initializing negative %select{count|size}1 for %select{'__counted_by'|'__sized_by'}1 pointer field %2
%select{|implicit }0zero-initialization of %select{'__counted_by'|'__sized_by'}1 pointer field %2 with non-zero %select{count|size}1 never succeeds
cannot initialize %select{'__counted_by'|'__sized_by'}0 pointer field %1 with %select{count|size}0 %2 which is larger than the actual %select{count|size}0 of the field initializer '%3'
local dependent count decl should be declared side by side to its dependent pointer
local dependent count decl shall not be shared with other pointer decl
attribute %0 is not allowed for local variables with external storage
accessing %select{'%select{__counted_by|__sized_by|__ended_by}0' pointer member|member referred to by '__ended_by'}1 using %select{an object|a pointer}2 with side effects is not yet supported; store '%3' into a local variable first
incompatible pointer types assigning %0 with an expression with mismatching size attributes %1
assignment to %select{%2 |}3'%0' requires corresponding assignment to %select{|%2 }3'%1'; add self assignment '%1 = %1' if the value has not changed
multiple consecutive assignments to a %select{dynamic count|dynamic count pointer|ranged pointer}0 %1 must be simplified; keep only one of the assignments
negative count expression
nested dependent count pointer is only allowed for out parameters
%0 is not allowed for nested pointers
cannot extract the %select{lower|upper}0 bound of %1 because %select{it is not a pointer|it has no bounds specification|its bounds are not contained within the pointer}2
assignment to '%0' requires an immediately preceding assignment to '%1'; add self assignment '%1 = %1' if the value has not changed
local variable %0 must be declared right next to its dependent decl
non-pointer to safe pointer conversion is not allowed with firebloom; use '__unsafe_forge_single' or '__unsafe_forge_bidi_indexable'
array subscript on %select{single|'__terminated_by'}0 pointer '%1' %select{must use a constant index of 0 to be in bounds|is not allowed}0
pointer with bounds cannot be used with inline assembly
Pointer authentication is currently unsupported on indexable pointers
parameter '%0' with '%select{__counted_by|__sized_by}1' attribute depending on an indirect count is implicitly read-only
attribute %0 is only allowed for struct fields or function parameters
pointer arithmetic on single pointer '%0' is out of bounds%select{|; consider adding '__counted_by' to '%2'}1
%0 cannot apply to arrays: use 'counted_by' instead
taking address of an auto-bound variable %0 is not allowed; specify a firebloom bounds attribute (__single/__bidi_indexable/__indexable/__unsafe_indexable) to the declaration
variable used in dynamic count expression cannot escape to another variable
dynamic count pointer variable cannot escape to another variable
'__terminated_by' attribute cannot be applied to empty arrays
pointee types of the pointer and pointer to terminator arguments must be the same
pointee type of the pointer argument must be an integer or a pointer
pointer to terminator argument must be a pointer (%0 invalid)
pointer argument must be a safe pointer (%0 invalid)
incomplete array '%0' with '__terminated_by' attribute must be initialized with at least one element
%select{array|pointer}0 cannot have more than one '__terminated_by' attribute
pointer arithmetic on '__terminated_by' pointer '%0' can only increase the value by one
cannot decrement '__terminated_by' pointer '%0'
terminator in array '%0' must be a compile-time constant
array '%0' with '__terminated_by' attribute is initialized with an incorrect terminator (expected: %1; got %2)
terminator value is not a constant expression
pointer argument must be a '__terminated_by' pointer (%0 invalid)
pointer argument must be terminated by %0 (got %1)
%select{array|pointer}0 '%1' with '__terminated_by' attribute must be initialized
%select{element|pointee}0 type of %select{array|pointer}0 with '__terminated_by' attribute must be an integer or a pointer
array '%0' with '__terminated_by' attribute must be initialized with a string literal or an initializer list
'__terminated_by' attribute currently can be applied only to '__single' pointers
'__terminated_by' attribute can be applied to pointers, constant-length arrays or incomplete arrays
%0 inside typedef is only allowed for function type
'__ended_by__' is not allowed inside typedef
conversion from pointer type %0 to a counted pointer of %1 elements never succeeds
conversion from pointer type %0 with pointee of size %1 to sized pointer type with greater size %2 never succeeds
%select{%diff{assigning to $ from incompatible type $|assigning type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1|}2 casts away '__unsafe_indexable' qualifier; use '__unsafe_forge_single' or '__unsafe_forge_bidi_indexable' to perform this conversion
taking the address of an incomplete __counted_by array is not yet supported
invalid function call with unsynchronized dynamic count pointers as out parameters
void pointers must use a byte count attribute instead of an item count
first argument to __builtin_call_with_static_chain must not be a block call
first argument to __builtin_call_with_static_chain must not be a builtin call
first argument to __builtin_call_with_static_chain must be a non-member call expression
first argument to __builtin_call_with_static_chain must not be a pseudo-destructor call
first argument to 'va_arg' is of type %0 and not 'va_list'
ARC forbids flexible array members with retainable object type
flexible array member %0 not allowed in otherwise empty %select{struct|interface|union|class|enum}1
flexible array member %0 of type %1 with non-trivial destruction
initialization of flexible array member is not allowed
flexible array requires brace-enclosed initializer
Firebloom forbids passing %0 by copy because it has a flexible array member
flexible array member %0 with type %1 is not at the end of %select{struct|interface|union|class|enum}2
flexible array member %0 in a union is not allowed
flexible array member %0 not allowed in %select{struct|interface|union|class|enum}1 which has a virtual base class
expression not permitted as operand of fold expression
unary fold expression has empty expansion for operator '%0' with no fallback value
instantiating fold expression with %0 arguments exceeded expression nesting limit of %1
binary fold expression has unexpanded parameter packs in both operands
for range declaration must declare a variable
cannot use type %0 as a range
invalid range expression of type %0; did you mean to dereference it with '*'?
cannot use incomplete type %0 as a range
invalid range expression of type %0; no viable '%select{begin|end}1' function available
cannot use type %0 as an iterator
loop variable %0 may not be declared %select{'extern'|'static'|'__private_extern__'|'auto'|'register'|'constexpr'|'thread_local'}1
format attribute cannot specify the implicit this argument as the format string
format argument not %0
format attribute requires variadic function
function does not return %0
strftime format attribute requires 3rd parameter to be 0
ISO C++ forbids forward references to 'enum' types
attempting to use the forward class %0 as superclass of %1
explicit qualification required to use member %0 from dependent base class
member %0 used before its declaration
friend declaration of %0 does not match any declaration in %1
friend declaration specifying a default argument must be a definition
friend declaration specifying a default argument must be the only declaration
friend function cannot be defined in a local class
friends cannot be members of the declaring class
'friend' must appear first in a non-function declaration
incomplete result type %0 in function definition
function cannot return %select{array|function}0 type %1
function cannot return qualified void type %0
function declared with %0 attribute was previously declared without the %0 attribute
functions may not be declared with 'cmse_nonsecure_call' attribute
%0 marked 'override' but does not override any member functions
type %0 of function parameter pack does not contain any unexpanded parameter packs
function template partial specialization is not allowed
function template specialization %0 ambiguously refers to more than one function template; explicitly specify%select{| additional}1 template arguments to identify a particular function template
no function template matches function template specialization %0
weak attribute declared on a __strong type property in GC mode
controlling expression type %0 compatible with %1 generic association types
controlling expression type %0 not compatible with any generic association type
__builtin_get_vtable_pointer requires an argument of%select{| polymorphic}0 class pointer type, but %1 %select{was provided|has no virtual methods}0
__builtin_get_vtable_pointer requires an argument with a complete type, but %0 is incomplete
no getter method for read from property
call to global function %0 not configured
cannot jump from this goto statement to its label
cannot jump from this goto statement to label %0 inside an inline assembly block
half precision constant requires cl_khr_fp16
invalid argument: symbol must be a device-side function or global variable
type argument of iboutletcollection attribute cannot be a builtin type
invalid type %0 as argument of iboutletcollection attribute
ambiguous conversion from type %0 to an integral or unscoped enumeration type
integral constant expression requires explicit conversion from %0 to %1
integral constant expression has incomplete class type %0
%select{integer|integral}1 constant expression must have %select{integer|integral or unscoped enumeration}1 type, not %0
integer constant expression evaluates to value %0 that cannot be represented in a %1-bit %select{signed|unsigned}2 integer type
a parameter list without types is only allowed in a function definition
illegal operation on Objective-C container subscripting
'%0' declared as array of %1
'%0' declared as array of functions of type %1
'%0' declared as array of references of type %1
'%0' does not point into a class
'%0' declared as a member pointer to a reference of type %1
'%0' declared as a member pointer to void
'%0' declared as a pointer to a reference of type %1
illegal initializer (only variables can be initialized)
illegal initializer type %0
Objective-C message has incomplete result type %0
illegal qualifiers on @catch parameter
%select{anonymous struct|union}0 member %1 has a non-trivial %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2
imaginary types are not supported
implicit conversion from %0 to %1 is not permitted in C++
cannot declare implementation of a class declared with the 'objc_class_stub' attribute
std::nothrow was not found; include <new> before defining a coroutine which uses get_return_object_on_allocation_failure()
initializer for aggregate with no elements requires explicit braces
implicit instantiation of undefined member %0
cannot %select{use builtin operator '<=>'|default 'operator<=>'}1 because type '%0' was not found; include <compare>
%0 type was not found; include <experimental/coroutine> before defining a coroutine
this function cannot be a coroutine: %0 is not a class
this function cannot be a coroutine: %q0 has no member named 'promise_type'
cannot deduce type of initializer list because std::initializer_list was not found; include <initializer_list>
static data member of type %0 must be initialized out of line
in-class initializer for static data member of type %0 requires 'constexpr' specifier
non-const static data member must be initialized out of line
in-class initializer for static data member is not a constant expression
static const volatile data member must be initialized out of line
target exception specification is not superset of source
conversion between pointers to functions with incompatible firebloom attributes
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2
API notes replacement type %0 has a different size from original type %1
incompatible vector types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
base class has incomplete type
enumeration %0 is incomplete
%select{|pointer to |reference to }0incomplete type %1 is not allowed in exception specification
member access into incomplete type %0
incomplete type %0 named in nested name specifier
incomplete type in call to object of type %0
incomplete receiver type %0
cannot synthesize property %0 with incomplete type %1
incomplete type %0 where a complete type is required
'@encode' of incomplete type %0
incomplete type %0 used in type trait expression
cannot set vtable pointer authentication on an incomplete type %0
'typeid' of incomplete type %0
inconsistent number of instance variables specified
defaulted definition of %select{%select{<ERROR>|equality|three-way|equality|relational}1 comparison operator|three-way comparison operator}0 cannot be declared %select{constexpr|consteval}2 because %select{it|the corresponding implicit 'operator=='}0 invokes a non-constexpr comparison function
defaulted declaration of %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 cannot be consteval because implicit definition is not constexpr
defaulted definition of %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 is not constexpr
number of elements must be either one or match the size of the vector
cannot %select{decrement|increment}0 expression of enum type %1
cannot jump from this %select{indirect|asm}0 goto statement to one of its possible targets
indirect goto in function with no address-of-label expressions
cannot deduce type for lambda capture %0 from initializer of type %2
cannot deduce type for lambda capture %0 from initializer list
initializer for lambda capture %0 contains multiple expressions
initializer missing for lambda capture %0
cannot deduce type for lambda capture %1 from %select{parenthesized|nested}0 initializer list
cannot initialize %select{a variable|a parameter|template parameter|return object|statement expression result|an exception object|a member subobject|an array element|a new value|a value|a base class|a constructor delegation|a vector element|a block element|a block element|a complex element|a lambda capture|a compound literal initializer|a related result|a parameter of CF audited function}0 %diff{of type $ with an %select{rvalue|lvalue}2 of type $|with an %select{rvalue|lvalue}2 of incompatible type}1,3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%5 vs %6)|: different exception specifications}4
initializer element is not a compile-time constant
cannot create object of function type %0
initialization of incomplete type %0
%select{|non-aggregate }0type %1 cannot be initialized with an initializer list
init methods must return an object pointer type, not %0
initialization of non-aggregate type %0 with an initializer list
cannot initialize Objective-C class type %0
can only use 'init_priority' attribute on file-scope definitions of objects of class type
reference member of type %0 uninitialized
initializer would partially override prior initialization of object of type %1 with non-trivial destruction
initializer-string for char array is too long
inline declaration of %0 follows non-inline definition
inline declaration of %0 not allowed in block scope
'main' is not allowed to be declared inline
non-inline namespace cannot be reopened as inline
'inline' can only appear on functions%select{| and non-local variables}0
invalid block pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
integer sequences must have integral element type
integer sequences must have non-negative sequence length
%plural{[0,2]:must use a qualified name when declaring|3:cannot declare}0 a %select{constructor|destructor|conversion operator|deduction guide}0 as a friend
invalid address discrimination mode %0
invalid use of a cast in a inline asm context requiring an lvalue: remove the cast or build with -fheinous-gnu-extensions
value '%0' out of range for constraint '%1'
invalid reinterpretation: sizes of %0 and %1 must match
%0 attribute cannot be applied to virtual functions
invalid authentication key %0
interface type cannot inherit from %select{struct|non-public interface|class}0 %1
invalid or misplaced branch protection specification '%0'
collection element of type %0 is not an Objective-C object
'_Complex %0' is invalid
call to consteval function %q0 is not a constant expression
%0 cannot be declared consteval
cannot take address of consteval function %0 outside of an immediate invocation
%select{function parameter|typedef}0 cannot be %select{<ERROR>|constexpr|consteval|constinit}1
non-static data member cannot be constexpr%select{; did you intend to make it %select{const|static}0?|}1
constexpr variable declaration must be a definition
invalid conversion between ext-vector type %0 and %1
conversion between matrix type %0 and incompatible type %1 is not allowed
conversion between matrix types%diff{ $ and $|}0,1 of different size is not allowed
invalid conversion between vector type %0 and integer type %1 of different size
invalid conversion between vector type %0 and scalar type %1
invalid conversion between vector type%diff{ $ and $|}0,1 of different size
invalid cpu name for builtin
invalid option '%0' for %select{cpu_specific|cpu_dispatch}1
invalid cpu feature string for builtin
invalid custom discrimination
count expression %select{on struct field|in function declaration}0 may only reference %select{other fields of the same struct|parameters of that function}0
cannot use %0 on union fields
cannot combine with previous '%0' declaration specifier
invalid declaration specifier in template non-type parameter
definition or redeclaration of %0 cannot name the global scope
definition or redeclaration of %0 not allowed inside a block
definition or redeclaration of %0 not allowed inside a function
cannot define or redeclare %0 here because namespace %1 does not enclose namespace %2
invalid extra discrimination selection %0
cannot create a non-constant pointer to member function
invalid use of incomplete type %0
mask type size must be between 1-byte and 8-bytes
invalid use of member %0 in static member function
incompatible constant for this __builtin_neon function
invalid use of non-static data member %0
%0 is not a valid literal type for NSNumber
invalid PCS type
'__pixel' must be preceded by '__vector'.  '%0' declaration specifier not allowed here
%0 is not a valid property name (accessing an object of type %1)
invalid protocol qualifiers on non-ObjC type
'%0' qualifier is not allowed on a constructor
'%0' qualifier is not allowed on a destructor
%select{non-member function|static member function|deduction guide}0 %select{of type %2 |}1cannot have '%3' qualifier
receiver type %0 is not an Objective-C class
'super' is only valid in a method body
'_Sat' specifier is only valid on '_Fract' or '_Accum', not '%0'
'%0' cannot be signed or unsigned
invalid use of '__super', this keyword can only be used inside class or member function scope
invalid use of 'this' outside of a non-static member function
'%0' is only allowed on variable declarations
the %0 type cannot be used to declare a program scope variable
invalid application of __builtin_xnu_type_%select{signature|summary}0 to %select{variable array}1 type %2
an array type is not allowed here
a function type is not allowed here
type %2 of %select{explicit instantiation|explicit specialization|partial specialization|redeclaration}0 of %1 does not match expected type %3
cannot use '%0' with '__vector bool'
use of '__int128' with '__vector bool' requires VSX support enabled (on POWER10 or later)
cannot combine with previous '%0' declaration specifier. '__vector' must be first
use of 'double' with '__vector' requires VSX support to be enabled (available on POWER7 or later)
cannot use 'float' with '__vector'
use of '__int128' with '__vector' requires extended Altivec support (available on POWER8 or later)
cannot use 'long' with '__vector'
cannot use 'long double' with '__vector'
use of 'long long' with '__vector' requires VSX support (available on POWER7 or later) to be enabled
'%select{|short|long|long long}0 %1' is invalid
property %0 not found on object of type %1; did you mean to access instance variable %2?
property %0 attempting to use instance variable %1 declared in super class %2
instance variables cannot be of reference type
instance variable %0 accessed in class method
kernel call to non-global function %0
kernel function %0 must be a free function or static member function
kernel function type %0 must have void return type
pointer arguments to kernel functions must reside in '__global', '__constant' or '__local' address space
unnamed variable cannot be implicitly captured in a lambda expression
lambda expression in default argument cannot capture any entity
variable %0 with flexible array member cannot be captured in a lambda expression
cannot assign to a variable captured by copy in a non-mutable lambda
variable %0 cannot be implicitly captured in a lambda with no capture-default specified
a lambda expression may not appear inside of a constant expression
a lambda expression cannot appear in this context
incomplete result type %0 in lambda expression
cannot deduce lambda return type from initializer list
lambda expression in an unevaluated operand
string literal in language linkage specifier cannot have an encoding-prefix
unknown linkage language
cannot apply asm label to %select{variable|function}0 after its first use
'lifetimebound' attribute cannot be applied to a %select{constructor|destructor}0
'lifetimebound' attribute cannot be applied; %select{static |non-}0member function has no implicit object parameter
cannot initialize %select{non-class|reference}0 type %1 with a parenthesized initializer list
non-template literal operator must have one or two parameters
literal operator cannot have a default argument
literal operator must have C++ linkage
non-namespace scope '%0' cannot have a literal operator member
parameter of literal operator must have type 'unsigned long long', 'long double', 'char', 'wchar_t', 'char16_t', 'char32_t', or 'const char *'
literal operator %0 must be in a namespace or global scope
invalid literal operator parameter type %0, did you mean %1?
template parameter list for literal operator must be either 'char...' or 'typename T, T...'
literal operator template cannot have any parameters
second argument to __builtin_load_member_function_pointer must be the address of a C++ member function: for example '&Foo::func', or null
first argument to __builtin_load_member_function_pointer must have C++ class type
variable with 'loader_uninitialized' attribute cannot have an initializer
variable %0 cannot be declared both 'extern' and with the 'loader_uninitialized' attribute
redeclaration cannot add 'loader_uninitialized' attribute
variable with 'loader_uninitialized' attribute must have a trivial default constructor
'__local' variable cannot have an initializer
%select{non-const|volatile}0 lvalue reference to type %1 cannot bind to an initializer list temporary
%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a temporary of type $|cannot bind to incompatible temporary}1,2
%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a value of unrelated type $|cannot bind to a value of unrelated type}1,2
rvalue reference %diff{to type $ cannot bind to lvalue of type $|cannot bind to incompatible lvalue}0,1
%select{unknown|unsupported}0 machine mode %1
%select{first|second|third|fourth}0 parameter of 'main' (%select{argument count|argument array|environment|platform-specific data}0) must be of type %1
main cannot be declared as global variable
'main' must return 'int'
too many parameters (%0) for 'main': must be 0, 2, or 3
%0 cannot be a template
std::experimental::coroutine_handle must be a class template
'std::experimental::coroutine_traits' must be a class template
std::initializer_list must be a class template with a single type parameter
std::nothrow must be a valid variable declaration
single subscript expressions are not allowed for matrix values
matrix %select{row|column}0 index is not an integer
matrix %select{row|column}0 index is outside the allowed range [0, %1)
matrix row and column subscripts cannot be separated by any expression
comma expressions are not allowed as indices in matrix subscript expressions
non-void block does not return a value in all control paths
member initializer %0 does not name a non-static data member or base class
initializer %0 does not name a non-static data member or base class; did you mean the %select{base class|member}1 %2?
call to non-static member function without an object argument
out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1
out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1; did you mean %3?
return type of out-of-line definition of %q0 differs from that in the declaration
out-of-line definition of %0 from class %1 without definition
extra qualification on member %0
'this' argument to member function %0 has type %1, but function is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}2
'this' argument to member function %0 is an %select{lvalue|rvalue}1, but function has %select{non-const lvalue|rvalue}2 ref-qualifier
cannot initialize object parameter of type %0 with an expression of type %1
initializer on function does not look like a pure-specifier
member %0 has the same name as its class
no member %0 in %1; it has not yet been instantiated
non-friend class member %0 cannot have a qualified name
class member cannot be redeclared
multiple overloads of %0 instantiate to the same signature %1
base of member reference is a function; perhaps you meant to call it%select{| with no arguments}0?
member pointer refers into non-class type %0
conversion from pointer to member of class %0 to pointer to member of class %1 via virtual base %2 is not allowed
member pointer has incomplete base type %0
at least one argument of MTE builtin function must be a pointer (%0, %1 invalid)
%0 argument of MTE builtin function must be an integer type (%1 invalid)
%0 argument of MTE builtin function must be a pointer (%1 invalid)
%0 argument of MTE builtin function must be a null or a pointer (%1 invalid)
messaging a Class with a method that is possibly direct
messaging super with a direct method
messaging unqualified id with a method that is possibly direct
kernel functions cannot be class members
%select{instance|class}1 method %0 not found ; did you mean %2?
this builtin requires 'dsp' ASE, please use -mdsp
this builtin requires 'dsp r2' ASE, please use -mdspr2
this builtin requires 'msa' ASE, please use -mmsa
derived class must specify the same code segment as its base classes
overriding virtual function must specify the same code segment as its overridden function
exception specification in declaration does not match previous declaration
exception specification in explicit instantiation does not match instantiated one
inheritance model does not match %select{definition|previous declaration}0
declaration of %0 in %select{the global module|module %2}1 follows declaration in %select{the global module|module %4}3
uuid does not match previous declaration
visibility does not match previous declaration
instance variables may not be placed in %select{categories|class extension}0
missing actual type specifier for pipe
%select{string|numeric}0 literal must be prefixed by '@'
missing custom discrimination
%select{constructor for %1 must explicitly initialize the|implicit default constructor for %1 must explicitly initialize the|cannot use constructor inherited from base class %4;}0 %select{base class|member}2 %3 %select{which|which|of %1}0 does not have a default constructor
%0 is missing exception specification '%1'
missing context for method declaration
missing '[' at start of message send expression
missing context for property implementation declaration
property implementation in a category with no category declaration
synthesized property %0 must either be named the same as a compatible instance variable or must explicitly name an instance variable
C++ requires a type specifier for all declarations
cannot use %select{C++ 'try'|Objective-C '@try'}0 in the same function as SEH '__try'
mode attribute only supported for integer and floating-point types
type of machine mode does not match type of base type
'module' declaration found while building header unit
'module' declaration found while building module from module map
module declaration must occur at the start of the translation unit
missing 'export module' declaration in module interface unit
missing 'module' declaration at end of global module fragment introduced here
@import of module '%0' in implementation of '%1'; use #import
import of module '%0' appears within %1
missing 'export' specifier in module declaration while building module interface
definition of module '%0' is not available; use -fmodule-file= to specify path to precompiled module interface
%select{local variable|parameter|typedef}0 %1 cannot be declared __module_private__
local %select{struct|interface|union|class|enum}0 cannot be declared __module_private__
%select{template|partial|member}0 specialization cannot be declared __module_private__
translation unit contains multiple module declarations
redefinition of module '%0'
import of module '%0' appears within same top-level module '%1'
%select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from module '%2' before it is required
%select{missing '#include'|missing '#include %3'}2; %select{||default argument of |explicit specialization of |partial specialization of }0%1 must be %select{declared|defined|defined|declared|declared}0 before it is used
%select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from one of the following modules before it is required:%2
'__leave' statement not in __try block
'__builtin_ms_va_start' used in System V ABI function
arguments to __annotation must be wide string constants
multiple initializations given for base %0
multiple coupled declarations in a firebloom attribute are not supported yet
multiple default labels in one switch
virtual function %q0 has more than one final overrider in %1
multiple initializations given for non-static member %0
initializing multiple members of union
function declaration cannot become a multiversioned function after first usage
multiversioned function declaration has a different %select{calling convention|return type|constexpr specification|inline specification|linkage|language linkage}0
attribute '%select{target|cpu_specific|cpu_dispatch}0' multiversioning cannot be combined with attribute %1
attribute '%select{target|cpu_specific|cpu_dispatch}0' multiversioned functions do not yet support %select{function templates|virtual functions|deduced return types|constructors|destructors|deleted functions|defaulted functions|constexpr functions|consteval function}1
multiversioned function redeclarations require identical target attributes
attributes on multiversioned functions must all match, attribute %0 %select{is missing|has different arguments}1
multiversioned function must have a prototype
'main' cannot be a multiversioned function
function multiversioning is not supported on the current target
function declaration is missing %select{'target'|'cpu_specific' or 'cpu_dispatch'}0 attribute in a multiversioned function
multiversioning attributes cannot be combined
cannot perform a tail call to function%select{| %1}0 because it uses an incompatible calling convention
%0 attribute cannot be used from %select{a block|an Objective-C function|this context}1
%select{non-member|static member|non-static member}0 function cannot perform a tail call to %select{non-member|static member|non-static member|pointer-to-member}1 function%select{| %3}2
cannot perform a tail call to function%select{| %1}0 because its signature is incompatible with the calling function
%0 attribute requires that the return value is the result of a function call
%0 attribute requires that both caller and callee functions have a prototype
tail call requires that the return value, all parameters, and any temporaries created by the expression are trivially destructible
%0 attribute may not be used with variadic functions
cannot perform a tail call from this return statement
cannot perform a tail call %select{from|to}0 a %select{constructor|destructor}1
'mutable' and 'const' cannot be mixed
'mutable' cannot be applied to functions
'mutable' can only be applied to member variables
'mutable' cannot be applied to references
you need to include <guiddef.h> before using the '__uuidof' operator
no matching %0 function for non-allocating placement new expression; include <new>
you need to include <typeinfo> before using the 'typeid' operator
%select{%diff{assigning to $ from $|assigning to incompatible nested pointer type}0,1|%diff{passing $ to parameter of incompatible nested pointer type $|passing to parameter of incompatible nested pointer type}0,1|%diff{returning $ from a function with result of incompatible nested pointer type $|returning from function with return of incompatible nested pointer type}0,1|%diff{converting $ to incompatible nested pointer type $|converting between incompatible nested pointer types}0,1|%diff{initializing $ with an expression of incompatible nested pointer type $|initializing with expression of incompatible nested pointer type}0,1|%diff{sending $ to parameter of incompatible nested pointer type $|sending to parameter of incompatible nested pointer type}0,1|%diff{casting $ to incompatible nested pointer type $|casting between incompatible nested pointer types}0,1}2; use explicit cast to perform this conversion
lookup of %0 in member access expression is ambiguous
%0 cannot appear before '::' because it is not a class%select{ or namespace|, namespace, or enumeration}1; did you mean ':'?
type %0 cannot be used prior to '::' because it has no members
%select{call to non-static member function|use of non-static data member}0 %2 of %1 from nested type %3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers in nested pointer types
nested redefinition of %0
'abi_tag' %0 missing in original declaration
array 'new' cannot have initialization arguments
only the first dimension of an allocated array may have dynamic size
cannot allocate array of 'auto'
cannot determine allocated array size from initializer
allocation of %select{incomplete|sizeless}0 type %1
no %select{getter|setter}0 defined for property %1
invalid use of '__super', %0 has no base classes
declaration does not declare anything
cannot specify a default vtable pointer authentication %select{key|address discrimination mode|discriminator}0 with no default set
use of dynamic_cast requires -frtti
no matching function found in local scope
no matching function %0 found in local scope; did you mean %3?
no member named %0 in %1
no member named %0 in %1; did you mean to use '->' instead of '.'?
no member named %0 in %1; did you mean %select{|simply }2%3?
no template named %0 in %1
no template named %0 in %1; did you mean %select{|simply }2%3?
cannot find interface declaration for %0
expression is not assignable
no suitable member %0 in %1
no @interface declaration found in class messaging of %0
no template named %0
no template named %0; did you mean %1?
use of typeid requires -frtti
argument to noexcept specifier must be a constant expression
a getter method is needed to perform a compound assignment on a property
no getter method %1 for %select{increment|decrement}0 of property
non-ASM statement in naked function is not supported
atomic constraint must be of type 'bool' (found %0)
anonymous non-C-compatible type given name for linkage purposes by %select{typedef|alias}0 declaration after its linkage was computed; add a tag name here to establish linkage prior to definition
substitution into constraint expression resulted in a non-constant expression
non-consteval function %0 cannot override a consteval function
non-deleted function %0 cannot override a deleted function
non-extern declaration of %0 follows extern declaration
defaulting %select{this %select{<ERROR>|equality|three-way|equality|relational}1 comparison operator|the corresponding implicit 'operator==' for this defaulted 'operator<=>'}0 would delete it after its first declaration
declaration of non-local variable in 'for' loop
cannot set vtable pointer authentication on monomorphic type %0
non-static declaration of %0 follows static declaration
member %0 of %1 is not a template; did you mean %select{|simply }2%3?
%0 does not name a template but is followed by template arguments
%0 does not name a template but is followed by template arguments; did you mean %1?
non-thread-local declaration of %0 follows thread-local declaration
cannot set vtable pointer authentication on %0 which is a subclass of polymorphic type %1
cannot %select{use type %1 for a function/method parameter|use type %1 for function/method return|default-initialize an object of type %1|declare an automatic variable of type %1|copy-initialize an object of type %1|assign to a variable of type %1|construct an automatic compound literal of type %1|capture a variable of type %1|cannot use volatile type %1 where it causes an lvalue-to-rvalue conversion}3 since it %select{contains|is}2 a union that is non-trivial to %select{default-initialize|destruct|copy}0
template argument / label address difference / what did you expect?
non-type template argument refers to subobject '%0'
sorry, non-type template argument of type %0 is not yet supported
qualified name refers into a specialization of %select{function|variable}0 template %1
non-type template parameter %0 with type %1 has incompatible initializer of type %2
non-variable declaration in 'for' loop
%0 is not virtual and cannot be declared pure
block pointer to non-function type is invalid
non-static data member defined out-of-line
address argument to nontemporal builtin must be a pointer (%0 invalid)
address argument to nontemporal builtin must be a pointer to integer, float, pointer, or a vector of such types (%0 invalid)
block declared 'noreturn' should not return
lambda declared 'noreturn' should not return
'_Noreturn' can only appear on functions
%select{assignment to readonly property|no setter method %1 for assignment to property}0
%select{%select{increment|decrement}1 of readonly property|no setter method %2 for %select{increment|decrement}1 of property}0
cannot specialize a %select{dependent template|template template parameter}0
type %0 is not a direct or virtual base of %1
call to function %0 that is neither visible in the template definition nor found by argument-dependent lookup
anonymous bit-field has non-integral type %0
bit-field %0 has non-integral type %1
no %select{struct|interface|union|class|enum}0 named %1 in %2
%0 attribute only applies to %select{Objective-C object|pointer|pointer-to-CF-pointer}1 parameters
overriding method has mismatched ns_consumed attribute on its parameter
domain argument %select{|%1 }0does not refer to global constant
domain argument %0 does not point to an NSString or CFString constant
'NSObject' attribute is for pointer types only
overriding method has mismatched ns_returns_%select{not_retained|retained}0 attributes
nullability keyword %0 cannot be applied to multi-level pointer type %1
nullability specifier %0 cannot be applied to non-pointer type %1
array of interface %0 is invalid (probably should be an array of pointers)
parameter of %0 attribute must be a single name of an Objective-C %select{class|protocol}1
attribute %0 can only be applied to @protocol definitions, not forward declarations
parameter of %0 attribute must be 'id' when used on a typedef
'objc_bridge(id)' is only allowed on structs and typedefs of void pointers
could not find Objective-C class %0 to convert %1 to %2
%0 must be name of an Objective-C class to be able to convert %1 to %2
%0 must be explicitly converted to %1; use %select{%objcclass2|%objcinstance2}3 method for this conversion
CF object of type %0 is bridged to %1, which is not an Objective-C class
Objective-C declarations may only appear in global scope
%select{|direct }0%select{method|property}1 declaration conflicts with previous %select{|direct }2declaration of %select{method|property}1 %3
direct property cannot be @dynamic
direct method was declared in %select{the primary interface|an extension|a category}0 but is implemented in %select{the primary interface|a category|a different category}1
direct method implementation was previously declared not direct
methods that %select{override superclass methods|implement protocol requirements}0 cannot be direct
'objc_direct' attribute cannot be applied to %select{methods|properties}0 declared in an Objective-C protocol
%select{category %1|class extension}0 cannot conform to protocol %2 because of direct members declared in interface %3
cannot use '%0' with Objective-C exceptions disabled
initialization statement is not supported when iterating over Objective-C collection
illegal type %0 used in a boxed expression
incomplete type %0 used in a boxed expression
Objective-C index expression has incomplete class type %0
method for accessing %select{dictionary|array}1 element must have Objective-C object return type instead of %0
'__kindof' specifier cannot be applied to non-object type %0
'__kindof' type specifier must precede the declarator
literal construction method %0 has incompatible signature
%select{an array|a dictionary|a numeric literal|a boxed expression|}0 literal can only be used at file scope if %select{its contents are all also constant literals|its contents are all also constant literals and its keys are string literals|constant|constant}0
%0 %select{parameter|return}1 type is unsupported; support for vector types for this target is introduced in %2
indexing expression is invalid because subscript type %0 has multiple type conversion functions
cannot use a protocol declared 'objc_non_runtime_protocol' in a @protocol expression
non-trivially copyable type %0 cannot be used in a boxed expression
ObjectiveC object of type %0 is bridged to %1, which is not valid CF object
cannot assign to class object (%0 invalid)
cannot catch an Objective-C object by value
cannot override a method that is declared direct by a superclass
%select{extension|category}0 of non-parameterized class %1 cannot have type parameters
forward declaration of non-parameterized class %0 cannot have type parameters
class %0 previously declared with type parameters
objc_precise_lifetime only applies to retainable types; type here is %0
property attributes '%0' and '%1' are mutually exclusive
property with '%0' attribute must be of object type
objc_root_class attribute may only be specified on a root class declaration
cannot implement a category for class %0 that is only visible via the Objective-C runtime
cannot implement subclass %0 of a superclass %1 that is only visible via the Objective-C runtime
%select{dictionary|array}1 subscript base type %0 is not an Objective-C object
method object parameter type %0 is not object type
method index parameter type %0 is not integral type
method key parameter type %0 is not object type
expected method to %select{read|write}1 %select{dictionary|array}2 element not found on object of type %0
cannot assign to this %select{dictionary|array}1 because assigning method's 2nd parameter of type %0 is not an Objective-C pointer type
indexing expression is invalid because subscript type %0 is not an Objective-C pointer
indexing expression is invalid because subscript type %0 is not an integral or Objective-C pointer type
@synchronized requires an Objective-C object type (%0 invalid)
@throw requires an Objective-C object type (%0 invalid)
type argument %0 does not satisfy the bound (%1) of type parameter %2
type argument %0 cannot explicitly specify nullability
no type or protocol named %0
type argument %0 must be a pointer (requires a '*')
type argument %0 is neither an Objective-C object nor a block type
type argument %0 cannot be qualified with '%1'
angle brackets contain both a %select{type|protocol}0 (%1) and a %select{protocol|type}0 (%2)
type arguments cannot be applied to non-class type %0
type arguments cannot be applied to non-parameterized class %0
type arguments cannot be applied to already-specialized class type %0
too %select{many|few}0 type arguments for class %1 (have %2, expected %3)
%select{forward class declaration|class definition|category|extension}0 has too %select{few|many}1 type parameters (expected %2, have %3)
type bound %0 for type parameter %1 conflicts with %select{implicit|previous}2 bound %3%select{for type parameter %5|}4
type parameter %0 bound %1 cannot explicitly specify nullability
missing type bound %0 for type parameter %1 in %select{@interface|@class}2
missing '*' in type bound %0 for type parameter %1
type bound %0 for type parameter %1 is not an Objective-C pointer type
type bound %1 for type parameter %0 cannot be qualified with '%2'
redeclaration of type parameter %0
%select{in|co|contra}0variant type parameter %1 conflicts with previous %select{in|co|contra}2variant type parameter %3
cannot declare variable inside @interface or @protocol
field %0 with variable sized type %1 is not at the end of class
interface type %1 cannot be %select{returned|passed}0 by value; did you forget * in %1?
offsetof requires array type, %0 invalid
cannot compute offset of bit-field %0
invalid application of 'offsetof' to a field of a virtual base
offsetof of incomplete type %0
offsetof requires struct, union, or class type, %0 invalid
'adjust_arg' argument %0 used in multiple clauses
argument of aligned clause should be array%select{ or pointer|, pointer, reference to array or reference to pointer}1, not %0
allocator must be specified in the 'uses_allocators' clause
allocators used in 'uses_allocators' clause cannot appear in other data-sharing or data-mapping attribute clauses
ambiguous conversion from type %0 to an integral or unscoped enumeration type
'append_args' is not allowed with varargs functions
expected pointer, array, reference to pointer, or reference to array in 'is_device_ptr clause'
OpenMP array section is not allowed here
OpenMP array shaping operation is not allowed here
expected at least one 'to' clause or 'from' clause specified to '#pragma omp target update'
the statement for 'atomic capture' must be a compound statement of form '{v = x; x binop= expr;}', '{x binop= expr; v = x;}', '{v = x; x = x binop expr;}', '{v = x; x = expr binop x;}', '{x = x binop expr; v = x;}', '{x = expr binop x; v = x;}' or '{v = x; x = expr;}', '{v = x; x++;}', '{v = x; ++x;}', '{++x; v = x;}', '{x++; v = x;}', '{v = x; x--;}', '{v = x; --x;}', '{--x; v = x;}', '{x--; v = x;}' where x is an lvalue expression with scalar type
the statement for 'atomic capture' must be an expression statement of form 'v = ++x;', 'v = --x;', 'v = x++;', 'v = x--;', 'v = x binop= expr;', 'v = x = x binop expr' or 'v = x = expr binop x', where x and v are both lvalue expressions with scalar type
directive '#pragma omp atomic%select{ %0|}1' cannot be used with '%2' clause
the statement for 'atomic' must be an expression statement of form '++x;', '--x;', 'x++;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an lvalue expression with scalar type
the statement for 'atomic read' must be an expression statement of form 'v = x;', where v and x are both lvalue expressions with scalar type
directive '#pragma omp atomic' cannot contain more than one 'read', 'write', 'update' or 'capture' clause
the statement for 'atomic update' must be an expression statement of form '++x;', '--x;', 'x++;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an lvalue expression with scalar type
the statement for 'atomic write' must be an expression statement of form 'x = expr;', where x is a lvalue expression with scalar type
bit fields cannot be used to specify storage in a '%0' clause
arguments of OpenMP clause '%0' with bitwise operators cannot be of floating type
arguments of OpenMP clause '%0' for 'min' or 'max' must be of %select{scalar|arithmetic}1 type
'%0' clause requires 'dispatch' context selector
'%0' and '%1' clause are mutually exclusive and may not appear on the same directive
const-qualified list item cannot be %0
const-qualified variable without mutable fields cannot be %0
const-qualified variable cannot be %0
constructs with the same name must have a 'hint' clause with the same value
redefinition of user-defined mapper for type %0 with name %1
only variable %0 is allowed in map clauses of this 'omp declare mapper' directive
redefinition of user-defined reduction for type %0
%0 must not appear in both clauses 'to' and 'link'
function with '#pragma omp declare variant' has a different %select{calling convention|return type|constexpr specification|inline specification|storage class|linkage}0
'#pragma omp declare variant' does not support %select{function templates|virtual functions|deduced return types|constructors|destructors|deleted functions|defaulted functions|constexpr functions|consteval function}0
'#pragma omp declare variant' is not compatible with any target-specific attributes
variant in '#pragma omp declare variant' with type %0 is incompatible with type %1%select{| with appended arguments}2
function with '#pragma omp declare variant' must have a prototype when 'append_args' is used
the user condition in the OpenMP context selector needs to be constant; %0 is not
variable %0 must have explicitly specified data sharing attributes, data mapping attributes, or in an is_device_ptr clause
'depend' clauses cannot be mixed with '%0' clause
expected iterator specification as depend modifier
expected%select{| %1}0 loop iteration variable
expected '+' or '-' operation
'depend(%select{source|sink:vec}0)' clause%select{|s}0 cannot be mixed with 'depend(%select{sink:vec|source}0)' clause%select{s|}0
depend modifier cannot be used with 'sink' or 'source' depend type
unexpected expression: number of expressions is larger than the number of associated loops
zero-length array section is not allowed in 'depend' clause
expected depobj expression
exactly one of 'depend', 'destroy', or 'update' clauses is expected
'device_type(%0)' does not match previously specified 'device_type(%1)' for the same declaration
'%0' region encountered before requires directive with '%1' clause
statement after '#pragma omp dispatch' must be a direct call to a target function or an assignment to one
same map type modifier has been specified more than once
same motion modifier has been specified more than once
expected access to data field
expected addressable lvalue expression, array element%select{ or array section|, array section or array shaping expression}0%select{| of non 'omp_depend_t' type}1
expected constant sized array of 'omp_alloctrait_t' elements, not %0
expected variable name as a base of the array %select{subscript|section}0
expected a reference to an integer-typed parameter
expected expression containing only member accesses and/or array sections based on named variables
expected lvalue expression%select{ of 'omp_depend_t' type, not %1|}0
expected one of the predefined allocators for the variables with the static storage: 'omp_default_mem_alloc', 'omp_large_cap_mem_alloc', 'omp_const_mem_alloc', 'omp_high_bw_mem_alloc', 'omp_low_lat_mem_alloc', 'omp_cgroup_mem_alloc', 'omp_pteam_mem_alloc' or 'omp_thread_mem_alloc'
the referenced item is not found in any private clause on the same directive
expected a reference to a parameter specified in a 'uniform' clause
%0 is not a global variable, static local variable or static data member
%0 is not a global variable, static local variable or static data member; did you mean %1
expected variable name%select{| or data member of current class}0
expected variable name%select{|, data member of current class}0, array element or array section
expression requires explicit conversion from %0 to %1
a firstprivate variable with incomplete type %0
'flush' directive with memory order clause '%0' cannot have the list
'#pragma omp declare %select{simd|variant}0' can only be applied to functions
function name is not allowed in 'link' clause
arguments of '#pragma omp %0' must have %select{global storage|static storage duration}1
the name of the construct must be specified in presence of 'hint' clause
'%0' type not found; include <omp.h>
the list item must appear in 'reduction' clause with the 'inscan' modifier of the parent directive
expression has incomplete class type %0
expected 'reduction' clause with the 'inscan' modifier
instantiation of '%0' not supported yet
'depend' clause requires the 'targetsync' interop type
prefer_list item must be a string literal or constant integral expression
'omp_interop_t' must be defined when 'append_args' clause is used; include <omp.h>
interop variable %0 used in multiple action clauses
expected%select{| non-const}0 variable of type 'omp_interop_t'
interop variable must be of type 'omp_interop_t'
invalid 'this' expression on 'map' clause
%select{map type '%1' is not allowed|map type must be specified}0 for '#pragma omp %2'
map type modifier '%0' is not allowed for '#pragma omp %1'
cannot find a valid user-defined mapper for type %0 with name %1
'#pragma omp %0' directive must appear only in file scope
%0 used in declare target directive is not a variable or a function name
expected loop invariant expression
expected loop invariant expression or '<invariant1> * %0 + <invariant2>' kind of expression
expected integral or pointer type as the iterator-type, not %0
iterator step expression %0 evaluates to 0
iterator step expression %0 is not the integral expression
OpenMP iterator is not allowed here
variable captured in declare target region must appear in a to clause
expected list item of scalar type in 'lastprivate' clause with 'conditional' modifier
a lastprivate variable with incomplete type %0
only loop iteration variables are allowed in 'linear' clause in distribute directives
argument of a linear clause should be of integral or pointer type, not %0
a linear variable with incomplete type %0
'linear' clause cannot be specified along with 'ordered' clause with a parameter
variable with local storage in initial value of threadprivate variable
'%0' statement cannot be used in OpenMP for loop
could not calculate number of iterations calling 'operator-' with upper and lower loop bounds
increment expression must cause %0 to %select{decrease|increase}1 on each iteration of OpenMP for loop
condition of OpenMP for loop must be a relational comparison ('<', '<=', '>', %select{or '>='|'>=', or '!='}0) of loop variable %1
increment clause of OpenMP for loop must perform simple addition or subtraction on loop variable %0
initialization clause of OpenMP for loop is not in canonical form ('var = init' or 'T var = init')
loop iteration variable in the associated loop of 'omp %1' directive may not be %0, predetermined as %2
variable must be of integer or %select{pointer|random access iterator}0 type
variable already marked as mapped in current construct
mapper type must be of struct, union or class type
multiple array elements associated with the same variable are not allowed in map clauses of the same construct
argument to '%0' clause must be a %select{non-negative|strictly positive}1 integer value
expected at least one %0 clause for '#pragma omp %1'
variable %0 must have explicitly specified data sharing attributes
no more 'if' clause is allowed
expected addressable lvalue in '%0' clause
expected expression with a pointer to a complete type as a base of an array shaping operation
non-predefined allocator must have traits specified
%select{statement after '#pragma omp %1' must be a for loop|expected %2 for loops after '#pragma omp %1'%select{|, but found only %4}3}0
expression must have integral or unscoped enumeration type, not %0
unable to resolve declare reduction construct for type %0
variable can appear only once in OpenMP '%0' clause
variable can appear only once in OpenMP 'target update' construct
at most one defaultmap clause for each variable-category can appear on the directive
'ordered' directive %select{without any clauses|with 'threads' clause}0 cannot be closely nested inside ordered region with specified parameter
'ordered' directive with 'depend' clause cannot be closely nested inside ordered region without specified parameter
'ordered' clause with a parameter can not be specified in '#pragma omp %0' directive
original storage of expression in data environment is shared but data environment do not fully contain mapped expression storage
orphaned 'omp %0' directives are prohibited; perhaps you forget to enclose the directive into a %select{|||target |teams|for, simd, for simd, parallel for, or parallel for simd }1region?
%select{orphaned 'omp section' directives are prohibited, it|'omp section' directive}0 must be closely nested to a sections region%select{|, not a %1 region}0
argument of a reduction clause of a %0 construct must not appear in a firstprivate clause on a task construct
the statement for '#pragma omp parallel sections' must be a compound statement
statement in 'omp parallel sections' directive must be enclosed into a section region
expected reference to one of the parameters of function %0%select{| or 'this'}1
parent region for 'omp %select{cancellation point|cancel}0' construct cannot be nowait
parent region for 'omp %select{cancellation point|cancel}0' construct cannot be ordered
pointer cannot be mapped along with a section derived from itself
predefined allocator cannot have traits specified
a private variable with incomplete type %0
region cannot be%select{| closely}0 nested inside '%1' region%select{|; perhaps you forget to enclose 'omp %3' directive into a parallel region?|; perhaps you forget to enclose 'omp %3' directive into a for or a parallel for region with 'ordered' clause?|; perhaps you forget to enclose 'omp %3' directive into a target region?|; perhaps you forget to enclose 'omp %3' directive into a teams region?|; perhaps you forget to enclose 'omp %3' directive into a for, simd, for simd, parallel for, or parallel for simd region?}2
OpenMP constructs may not be nested inside an atomic region
cannot nest 'critical' regions having the same name %0
OpenMP constructs may not be nested inside a simd region%select{| except for ordered simd, simd, scan, or atomic directive}0
list item of type %0 is not valid for specified reduction operation: unable to provide default initialization value
in_reduction variable must have the same reduction operation as in a task_reduction clause
reduction variables may not be accessed in an explicit task
a reduction list item with incomplete type %0
expected addressable reduction item for the task-based directives
the inscan reduction list item must appear as a list item in an 'inclusive' or 'exclusive' clause on an inner 'omp scan' directive
argument of OpenMP clause '%0' must reference the same object in all threads
'reduction' clause with 'task' modifier allowed only on non-simd parallel or worksharing constructs
cannot generate code for reduction on %select{|array section, which requires a }0variable length array
'reduction' clause cannot be used with 'nogroup' clause
reduction type cannot be %select{qualified with 'const', 'volatile' or 'restrict'|a function|a reference|an array}0 type
arguments of '#pragma omp %0' cannot be of reference type %1
directive must be at file or namespace scope
%0 variable must be %1
Only one %0 clause can appear on a requires directive in a single translation unit
same pointer dereferenced in multiple different ways in map clause expressions
exactly one of 'inclusive' or 'exclusive' clauses is expected
'nonmonotonic' modifier can only be specified with 'dynamic' or 'guided' schedule kind
section of pointer to function type %0
section of pointer to incomplete type %0
section length is evaluated to a negative value %0
section length is unspecified and cannot be inferred because subscripted value is %select{not an array|an array of unknown bound}0
array section must be a subset of the original array
section stride is evaluated to a non-positive value %0
the statement for '#pragma omp sections' must be a compound statement
statement in 'omp sections' directive must be enclosed into a section region
exactly one '%0' directive must appear in the loop body of an enclosing directive
directive '#pragma omp %0' cannot contain more than one %select{'seq_cst', 'relaxed', |}1'acq_rel', 'acquire' or 'release' clause
array shaping dimension is evaluated to a non-positive value %0
'%0' statement cannot be used in OpenMP simd region
'%0' clause with '%1' modifier cannot be specified if an 'ordered' clause is specified
the 'copyprivate' clause must not be used with the 'nowait' clause
single declaration is expected after 'declare %select{simd|variant}0' directive
the loop %select{initializer|condition}0 expression depends on the current loop control variable
target construct with nested teams region contains statements outside of the teams construct
threadprivate variables are not allowed in '%0' clause
threadprivate variables cannot be used in target constructs
threadprivate variable with incomplete type %0
array section %select{lower bound|length}0 is not an integer
subscripted value is not an array or pointer
array shaping operation dimension is not an integer
expected %0 in OpenMP clause '%1'
modifier '%0' cannot be used along with modifier '%1'
mapping of union members is not allowed
incorrect reduction identifier, expected one of '+', '-', '*', '&', '|', '^', '&&', '||', 'min' or 'max' or declare reduction for type %0
expected%select{| one of}0 %1 directive name modifier%select{|s}0
loop to be fully unrolled must have a constant trip count
%select{a variable|a parameter|'this'}0 cannot appear in more than one %1 clause
expected pointer or reference to pointer in 'use_device_ptr' clause
expected variable of the '%0' type%select{|, not %2}1
'#pragma omp %0' must appear in the scope of the %q1 variable declaration
variable %0 cannot be threadprivate because it is %select{thread-local|a global named register variable}1
'#pragma omp %0' must precede all references to variable %q1
%0 variable cannot be in a %1 clause in '#pragma omp %2' directive
arguments of OpenMP clause '%0' in '#pragma omp %2' directive cannot be of variably-modified type %1
one of 'for', 'parallel', 'sections' or 'taskgroup' is expected
expected an integer or a pointer type of the outer loop counter '%0' for non-rectangular nests
function with 'device_type(%0)' is not available on %select{device|host}1
%0 variable cannot be %1
directive name modifier '%0' is not allowed for '#pragma omp %1'
'inscan' modifier can be used only in 'omp for', 'omp simd', 'omp for simd', 'omp parallel for', or 'omp parallel for simd' directive
expected %select{'val' modifier|one of 'ref', val' or 'uval' modifiers}0
variable of non-reference type %0 can be used only with 'val' modifier, but used with '%1'
the parameter of the 'ordered' clause must be greater than or equal to the parameter of the 'collapse' clause
the value of 'simdlen' parameter must be less than or equal to the value of the 'safelen' parameter
only %select{'omp_priv' or 'omp_orig'|'omp_in' or 'omp_out'}0 variables are allowed in %select{initializer|combiner}0 expression
access specifier can only have annotation attributes
only constructors take base initializers
only enumeration types have underlying types
variables in the %0 address space can only be declared in the outermost scope of a kernel function
atomic variable can be %select{assigned|initialized}0 to a variable only in global address space
bit-fields are not supported in OpenCL
cannot refer to a block inside block
the __block storage type is not permitted
illegal call to %0, expected %1 argument type
invalid number of arguments to function: %0
first argument to %0 must be a pipe type
invalid pipe access modifier (expecting %0)
invalid argument type to function %0 (expecting %1 having %2)
invalid argument %0 to function: %1, expecting a generic pointer argument
cannot cast non-zero value '%0' to 'event_t'
casting to type %0 is not allowed
variable in constant address space must be initialized
blocks with parameters are not accepted in this prototype of enqueue_kernel call
blocks used in enqueue_kernel call are expected to have parameters of type 'local void*'
illegal call to enqueue_kernel, incorrect argument types
illegal call to enqueue_kernel, parameter needs to be specified as integer type
mismatch in number of block parameters and local size arguments passed
vector component access has invalid length %0.  Supported: 1,2,3,4,8,16.
invalid block variable declaration - using 'extern' storage class is disallowed
%select{pointers|references}0 to functions are not allowed
%select{non-kernel function|function scope}0 variable cannot be declared in %1 address space
%select{program scope|static local|extern}0 variable must reside in %1 address space
declaring variable of type %0 is not allowed
%select{loading directly from|assigning directly to}0 pointer to type %1 requires cl_khr_fp16. Use vector data %select{load|store}0 builtin functions instead
implicit declaration of function %0 is invalid in OpenCL
implicit conversions between vector types (%0 and %1) are not permitted
access qualifier can only be used for pipe and image type
invalid block variable declaration - must be %select{const qualified|initialized}0
declaring function parameter of type %0 is not allowed%select{; did you forget * ?|}1
access qualifier %0 can not be used for %1 %select{|prior to OpenCL C version 2.0 or in version 3.0 and without __opencl_c_read_write_images feature}2
declaring function return value of type %0 is not allowed %select{; did you forget * ?|}1
array of %0 type is invalid in OpenCL
attribute %0 can only be applied to an OpenCL kernel function
multiple access qualifiers
%select{function|kernel}0 cannot be called 'main'
global sampler requires a const or constant address space qualifier
pointer to type %0 is invalid in OpenCL
kernel parameter cannot be declared as a pointer to a pointer
use of %select{type|declaration}0 %1 requires %2 support
return value cannot be qualified with address space
scalar operand type has greater rank than the type of the vector element. (%0 and %1)
invalid application of '%0' to a void type
taking address of a capture is not allowed
block type cannot be used as expression in ternary expression in OpenCL
type %0 can only be used as a function parameter in OpenCL
%0 type %1 not found; include the base header with -finclude-default-header
the %0 type cannot be used to declare a structure or union field
invalid prototype, variadic arguments are not allowed in OpenCL
variable length arrays are not supported in OpenCL
use of placement new requires explicit declaration
invalid application of '__builtin_omp_required_simd_align' to an expression, only type is allowed
circular pointer delegation detected
use of 'operator->' on type %0 would invoke a sequence of more than %1 'operator->' calls
%0 cannot take a dependent type as first parameter; use %1 instead
first parameter of %0 must have type %1
parameter of %0 cannot have a default argument
%0 cannot be declared inside a namespace
%0 cannot be declared static in global scope
%0 cannot have a dependent return type; use %1 instead
%0 must return type %1
%0 template must have at least two parameters
%0 must have at least one parameter
%0 cannot take a dependent type as first parameter; use size_t (%1) instead
%0 takes type size_t (%1) as first parameter
parameter of overloaded %0 cannot have a default argument
overloaded %0 must be a %select{unary|binary|unary or binary}2 operator (has %1 parameter%s1)
overloaded %0 must be a non-static member function
overloaded %0 must have at least one parameter of class or enumeration type
parameter of overloaded post-%select{increment|decrement}1 operator must have type 'int' (not %0)
overloaded %0 cannot be a static member function
overloaded %0 cannot be variadic
os_log() argument %0 is too big (%1 bytes, max %2)
os_log() format argument is not a string constant
defaulting this %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 would delete it after its first declaration
qualified reference to %0 is a constructor name rather than a %select{template name|type}1 in this context
__builtin_mul_overflow does not support signed _ExtInt operands of more than %0 bits
operand argument to overflow builtin must be an integer (%0 invalid)
result argument to overflow builtin must be a pointer to a non-const integer (%0 invalid)
exception specification of overriding function is more lax than base version
call to %0 is ambiguous
ambiguous conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2
call to constructor of %0 is ambiguous
call to member function %0 is ambiguous
call to object of type %0 is ambiguous
use of overloaded operator '%0' is ambiguous (with operand types %1 and %2)
use of overloaded operator '%0' is ambiguous (operand type %1)
call to deleted function %0
object of type %0 cannot be compared because its %1 is implicitly deleted
%select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2 uses deleted function
call to deleted constructor of %0
call to deleted member function %0
call to deleted function call operator in type %0
overload resolution selected deleted operator '%0'
call to implicitly-deleted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}0 of %1
object of type %0 cannot be %select{constructed|copied|moved|assigned|assigned|destroyed}1 because its %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 is implicitly deleted
functions that differ only in their return type cannot be overloaded
cannot convert %1 to %2 without a conversion operator
type %0 does not provide a %select{subscript|call}1 operator
no matching conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2
no matching function for call to %0
no matching constructor for initialization of %0
no matching literal operator for call to %0%select{| with argument of type %2| with arguments of types %2 and %3}1%select{| or 'const char *'}4%select{|, and no matching literal operator template}5
no matching member function for call to %0
no matching function for call to object of type %0
no viable overloaded '%0'
no viable overloaded operator[] for type %0
return type %0 of selected 'operator==' function for rewritten '%1' comparison is not 'bool'
static and non-static member functions with the same parameter types cannot be overloaded
reference to %select{overloaded|multiversioned}1 function could not be resolved; did you mean to call it%select{| with no arguments}0?
'ownership_returns' attribute index does not match; here it is %0
%0 attribute only applies to %select{pointer|integer}1 arguments
pack expansion contains parameter packs %0 and %1 that have different lengths (%2 vs. %3)
pack expansion contains parameter pack %0 that has a different length (%1 vs. %2) from outer parameter packs
pack expansion contains parameter pack %0 that has a different length (at least %1 vs. %2) from outer parameter packs
pack expansion for initialization of member %0
pack expansion does not contain any unexpanded parameter packs
C does not support default arguments
default arguments cannot be added to an out-of-line definition of a member of a %select{class template|class template partial specialization|nested class in a template}0
missing default argument on parameter
missing default argument on parameter %0
default arguments can only be specified for parameters in a function declaration
parameter pack cannot have a default argument
redefinition of default argument
default argument references local variable %0 of enclosing function
default argument references parameter %0
default argument references 'this'
default arguments cannot be added to a function template that has already been declared
argument may not have 'void' type
a lambda parameter cannot shadow an explicitly captured entity
%select{parameters|function return value}0 cannot have __fp16 type; did you forget * ?
cannot parenthesize the name of a method when forming a member pointer
%select{class|variable}0 template partial specialization does not specialize any template argument; to %select{declare|define}1 the primary template, remove the template argument list
partial specialization of %0 does not use any of its template parameters
ambiguous partial specializations of %0
class template partial specialization %0 cannot be redeclared
partial specialization cannot be declared as a friend
deduced type %0 does not satisfy %1
'new' expression with placement arguments refers to non-placement 'operator delete'
call to pointer to member function of type %0 drops '%1' qualifier%s2
pointer-to-member function type %0 can only be called on an %select{rvalue|lvalue}1
invalid use of pointer to member type after %select{.*|->*}0
this builtin is only valid on POWER%0 or later CPUs
this builtin requires VSX to be enabled
expected a 'float' or 'double' for the first argument
invalid use of PPC MMA type
'#pragma clang attribute' attribute with no matching '#pragma clang attribute push'
attribute %0 can't be applied to %1
negated attribute subject matcher sub-rule '%0' contradicts sub-rule '%1'
redundant attribute subject matcher sub-rule '%0'; '%1' already matches those declarations
unterminated '#pragma clang attribute push' at end of file
'#pragma clang attribute %select{%1.|}0pop' with no matching '#pragma clang attribute %select{%1.|}0push'
'#pragma float_control(except, on)' is illegal when precise is disabled
'#pragma float_control(precise, off)' is illegal when except is enabled
'#pragma float_control(precise, off)' is illegal when fenv_access is enabled
'#pragma float_control push/pop' can only appear at file or namespace scope or within a language linkage specification
'#pragma STDC FENV_ACCESS ON' is illegal when precise is disabled
%select{incompatible|duplicate}0 directives '%1' and '%2'
invalid argument of type %0; expected an integer type
%select{invalid value '%0'; must be positive|value '%0' is too large}1
expected a for, while, or do-while loop to follow '%0'
mac68k alignment pragma is not supported on this target
specifying an identifier within `#pragma pack` is not supported on this target
expected #pragma pack parameter to be '1', '2', '4', '8', or '16'
#pragma visibility pop with no matching #pragma visibility push
#pragma visibility push with no matching #pragma visibility pop
argument to #pragma section is not valid for this target: %0
__builtin_preserve_enum_value argument %0 invalid
__builtin_preserve_enum_value argument %0 not a constant
__builtin_preserve_field_info argument %0 not a constant
__builtin_preserve_field_info argument %0 not a field access
__builtin_preserve_type_info argument %0 invalid
__builtin_preserve_type_info argument %0 not a constant
instance variable %0 is private
private module fragment declaration with no preceding module declaration
private module fragment in module implementation unit
private module fragment redefined
probability argument to __builtin_expect_with_probability must be constant floating-point expression
probability argument to __builtin_expect_with_probability is outside the range [0.0, 1.0]
type of property %0 (%1) does not match type of accessor %2 (%3)
property %0 found on object of type %1; did you mean to access it with the "." operator?
use of Objective-C property in function nested in Objective-C container not supported, move function outside its container
property %0 is already implemented
property %0 has a variably modified type
type of property %0 (%1) does not match type of instance variable %2 (%3)
property access is using %0 method which is unavailable
property %0 refers to an incomplete Objective-C class %1 (with no @interface available)
property %0 not found on object of type %1
property %0 cannot be found in forward class object %1
property %0 not found on object of type %1; did you mean %2?
synthesized properties %0 and %1 both claim setter %2 - use of this setter will cause unexpected behavior
property cannot have array or function type %0
instance variable %0 is protected
protocol has circular dependency
property %select{of type %1|with attribute '%1'|without attribute '%1'|with getter %1|with setter %1}0 was selected for synthesis
object expression of non-scalar type %0 cannot be used in a pseudo-destructor expression
call to pseudo-destructor cannot have any arguments
%0 does not refer to a type name in pseudo-destructor expression; expected the name of type %1
the type of object expression %diff{($) does not match the type being destroyed ($)|does not match the type being destroyed}0,1 in pseudo-destructor expression
address discrimination flag for __ptrauth must be 0 or 1; value is %0
argument to %select{__ptrauth|ptrauth_struct}0 must be an integer constant expression
discriminator argument to ptrauth_sign_constant must be a constant integer, the address of the global variable where the result will be stored, or a blend of the two
argument to ptrauth_sign_constant must refer to a global variable or function
pointer authentication is disabled for the current target
this target does not support pointer authentication
key or discriminator of class %0 doesn't match that of base class %1
empty __ptrauth authentication option
extra discriminator for %select{__ptrauth|ptrauth_struct}2 must be between 0 and %1; value is %0
%select{static locals|globals}0 with authenticated null values are currently unsupported
%0 does not identify a valid pointer authentication key for the current target
invalid character in __ptrauth options
missing comma between __ptrauth options
attribute ptrauth_struct cannot be used on class %0 because it is a dynamic class
__ptrauth options must be a string of comma separated flags, found %0
%0 qualifier must take between 1 and 4 arguments
cast types may not be qualified with __ptrauth; type is %0
%select{return types|parameter types|properties}2 may not be qualified with %select{__ptrauth|__ptrauth_restricted_intptr}1; type is %0
__ptrauth qualifier may only be applied to pointer types; type here is %0
type %0 is already %1-qualified
repeated __ptrauth authentication %select{mode|option}0
__ptrauth_restricted_intptr qualifier may only be applied to pointer sized integer types; type here is %0
argument must be a string literal%select{| of char type}0
%0 is signed differently from the previous declaration
cannot pass undiscriminated type %0 to '__builtin_ptrauth_type_discriminator'
unknown __ptrauth authentication option %0
%select{signed value|extra discriminator|blended pointer|blended integer}0 must have %select{pointer|integer|pointer or integer}1 type; type here is %2
friend declaration cannot have a pure-specifier
exception declarator cannot be qualified
friend function definition cannot be qualified with '%0'
friend declaration of %0 does not match any declaration in %1
type operand %0 of 'typeid' cannot have '%1' qualifier
qualified member access refers to a member in %0
%q0 is not a member of class %1
%select{property|instance variable}0 access cannot be qualified with '%1'
@catch parameter declarator cannot be qualified
parameter declarator cannot be qualified
typedef declarator cannot be qualified
cannot build range expression with array function parameter %0 since parameter with array type %1 is treated as pointer type %2
assigning to 'readonly' return result of an Objective-C message not allowed
invalid type %0 to %1 operator
%select{struct|union}0 kernel parameters may not contain pointers
recursive evaluation of default argument
trying to recursively use %0 as superclass of %1
redeclaration of %0 with a different type%diff{: $ vs $|}1,2
redefinition of %0
redefinition of %0 as different kind of symbol
redefinition of %0 as an alias for a different namespace
redefinition of %0 with a different type%diff{: $ vs $|}1,2
%select{typedef|type alias|type alias template}0 redefinition with different types%diff{ ($ vs $)|}1,2
redefinition of a 'extern inline' function %0 is not supported in %select{C99 mode|C++}1
redefinition of enumerator %0
redefinition of label %0
redefinition of %select{typedef|type alias}0 for variably-modified type %1
cannot refer to declaration with an array type inside block
reference to %select{__device__|__global__|__host__|__host__ __device__}0 %select{function|variable}1 %2 in %select{__device__|__global__|__host__|__host__ __device__}3 function
reference to %select{__device__|__global__|__host__|__host__ __device__}0 function %1 in global initializer
cannot refer to declaration of structure variable with flexible array member inside block
reference initialization of type %0 with initializer of type %1 is ambiguous
%0 does not refer to a value
ref-qualifier '%select{&&|&}0' is not allowed on a constructor
ref-qualifier '%select{&&|&}0' is not allowed on a destructor
cannot overload a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}0 with a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}1
cannot refer to declaration with a variably modified type inside block
binding reference %diff{of type $ to value of type $|to value}0,1 %select{drops %3 qualifier%plural{1:|2:|4:|:s}4|changes address space|not permitted due to incompatible qualifiers}2
reference %diff{to %select{type|incomplete type}1 $ could not bind to an %select{rvalue|lvalue}2 of type $|could not bind to %select{rvalue|lvalue}2 of incompatible type}0,3
reference to type %0 cannot bind to an initializer list
reference of type %0 cannot bind to a temporary object because of address space mismatch
%select{non-const|volatile}0 reference cannot bind to bit-field%select{| %1}2
%select{non-const|volatile}0 reference cannot bind to matrix element
%select{non-const|volatile}0 reference cannot bind to vector element
'&' cannot precede a capture when the capture default is '&'
reference cannot be initialized with multiple values
pipes packet types cannot be of reference type
invalid reference to function %0: constraints not satisfied
reference to local %select{variable|binding}1 %0 declared in enclosing %select{%3|block literal|lambda expression|context}2
cannot form a reference to 'void'
declaration of reference variable %0 requires an initializer
reference to type %0 requires an initializer
function declared with regparm(%0) attribute was previously declared %plural{0:without the regparm|:with the regparm(%1)}1 attribute
%0 attribute cannot be repeated
variable does not have a constant initializer
default arguments not allowed for parameters of a requires expression
constraint variable %0 cannot be used in an evaluated context
cannot subclass a class that was declared with the 'objc_subclassing_restricted' attribute
returning block that lives on the local stack
@throw (rethrow) used outside of a @catch block
void block should not return a value
cannot return from %0
return in the catch of a function try block of a constructor is illegal
return statement not allowed in coroutine; did you mean 'co_return'?
%select{void function|void method|constructor|destructor}1 %0 must not return a value
LMUL argument must be in the range [0,3] or [5,7]
builtin requires '%0' extension support to be enabled
%0 cannot use 'super' because it is a root class
argument should be the value 90 or 270
argument should be the value 0, 90, 180 or 270
rvalue reference type %0 is not allowed in exception specification
sampler_t variable required - got %0
sampler_t initialization requires 32-bit integer, not %0
second argument to __builtin_call_with_static_chain must be of pointer type
second argument to 'va_arg' is of abstract type %0
second argument to 'va_arg' is of incomplete type %0
%0 causes a section type conflict with %1
cannot use SEH '__try' in a coroutine when C++ exceptions are enabled
cannot use SEH '__try' in blocks, captured regions, or Obj-C method decls
SEH '__try' is not supported on this target
chosen constructor is explicit in copy-initialization
selector element of type %0 cannot be a constant lvalue expression
selector element is not a valid lvalue
selector element type %0 is not a valid object
type of setter must be void
initialization is not supported for __shared__ variables.
requested shift is a vector of type %0 but the first operand is not a vector (%1)
index for __builtin_shufflevector must be less than the total number of vector elements
index for __builtin_shufflevector must be a constant integer
%select{|reference to }0sizeless type %1 is not allowed in exception specification
non-local variable with sizeless type %0
invalid application of '%0' to a function type
invalid application of '%0' to %select{an incomplete|sizeless}1 type %2
invalid application of '%select{sizeof|alignof|typeof}0' to bit-field
application of '%select{alignof|sizeof}1' to interface %0 is not supported on this architecture and platform
%0 does not refer to the name of a parameter pack
%0 does not refer to the name of a parameter pack; did you mean %1?
argument to 'operator<=>' %select{cannot be narrowed from type %1 to %2|evaluates to %1, which cannot be narrowed to type %2}0
specialization of member %q0 does not specialize an instantiated member
explicit specialization of %0 after instantiation
cannot reference member of primary template because deduced class template specialization %0 is %select{instantiated from a partial|an explicit}1 specialization
cannot specialize %select{|(with 'template<>') }0a member of an unspecialized template
forward declaration of %select{class|struct|interface|union|enum}0 cannot have a nested name specifier
static_assert expression is not an integral constant expression
static_assert failed%select{ %1|}0
static_assert failed due to requirement '%0'%select{ %2|}1
function declared in block scope cannot have 'static' storage class
static data member %0 not allowed in anonymous %select{struct|interface|union|class|enum}1
static data member %0 not allowed in local %select{struct|interface|union|class|enum}2 %1
static data member %0 already has an initializer
cannot cast %0 to %1 via virtual base %2
variables in function scope cannot be declared static
the 'static' modifier for the array size is not legal in new expressions
kernel functions cannot be declared static
'main' is not allowed to be declared static
static declaration of %0 follows non-static declaration
static member %0 cannot be a bit-field
'static' can only be specified inside the class definition
'static' member function %0 overrides a virtual function in a base class
interface type cannot be statically allocated
standard library implementation of %0 is not supported; %select{member '%2' does not have expected form|member '%2' is missing|the type is not trivially copyable|the type does not have the expected form}1
unsupported standard library implementation: 'std::%0' is not a class template
%0 attribute cannot be applied to a declaration
static data member definition cannot specify a storage class
@catch parameter cannot have storage specifier '%0'
storage class specified for a member declaration
existing instance variable %1 for strong property %0 may not be __weak
subscript of pointer to function type %0
subscript of pointer to %select{incomplete|sizeless}0 type %1
subscript requires size of interface %0, which is not constant for this architecture and platform
use of '__super' inside a lambda is unsupported
'%0' parameter must have pointer%select{| to unqualified pointer}1 type; type here is %2
'swift_async' completion handler parameter must have block type returning 'void', type here is %0
%0 attribute with 'nonnull_error' convention can only be applied to a %select{function|method}1 with a completion handler with an error parameter
%0 attribute with '%1' convention must have an integral-typed parameter in completion handler at index %2, type here is %3
%0 attribute must be applied to a %select{function|method}1 annotated with non-'none' attribute 'swift_async'
first argument to 'swift_async' must be either 'none', 'swift_private', or 'not_swift_private'
'swift_error_result' parameter must follow 'swift_context' parameter
'swift_indirect_result' parameters must be first parameters of function
'%0' parameter can only be used with swiftcall%select{ or swiftasynccall|}1 calling convention%select{|s}1
switch condition type %0 requires explicit conversion to %1
switch condition has incomplete class type %0
cannot jump from switch statement to this case label
multiple conversions from switch condition type %0 to an integral or enumeration type
@synthesize not allowed in a category's implementation
@synthesize not allowed on a class property %0
synthesized property with variable size type %0 requires an existing instance variable
cannot synthesize weak property in file using manual reference counting
cannot synthesize weak property because the current deployment target does not support weak references
invalid transaction abort code
definition of type %0 conflicts with %select{typedef|type alias}1 of the same name
%select{type tag|argument}0 index %1 is greater than the number of arguments specified
implicit declaration introduced by elaborated type conflicts with a %select{non-struct type|non-class type|non-union type|non-enum type|typedef|type alias|template|type alias template|template template argument}0 of the same name
%select{non-struct type|non-class type|non-union type|non-enum type|typedef|type alias|template|type alias template|template template argument}1 %0 cannot be referenced with a %select{struct|interface|union|class|enum}2 specifier
friend type templates must use an elaborated type
%0 requires %select{|%2 bit size}1 %3 type support, but target '%4' does not support it
attributes '%0("%2")' and '%1("%2")' are mutually exclusive
ambiguous constructor call when %select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1
%select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1 invokes deleted constructor
copying a temporary object of incomplete type %0
no viable constructor %select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1
address taken in non-type template argument for template parameter of reference type %0
deduced incomplete pack %0 for template parameter %1
non-type template argument refers to non-static data member %0
constraints not satisfied for %select{class template|function template|variable template|alias template|template template parameter|template}0 %1%2
%select{too few|too many}0 template arguments for %select{class template|function template|variable template|alias template|template template parameter|concept|template}1 %2
sorry, non-type template argument of pointer-to-member type %1 that refers to member %q0 of a different class is not supported yet
non-type template argument refers to non-static member function %0
template argument for non-type template parameter must be an expression
template argument for template template parameter must be a class template%select{| or type alias template}0
template argument for template type parameter must be a type
template argument for template type parameter must be a type; did you forget 'typename'?
non-type template parameter of reference type %diff{$ cannot bind to template argument of type $|cannot bind to template of incompatible argument type}0,1
template argument for non-type template parameter is treated as function type %0
non-type template argument of type %0 is not a constant expression
non-type template argument for template parameter of pointer type %0 must have its address taken
non-type template argument of type %0 cannot be converted to a value of type %1
non-type template argument does not refer to any declaration
non-type template argument of type %0 is not an integral constant expression
non-type template argument of type %0 must have an integral or enumeration type
non-type template argument does not refer to an object or function
non-type template argument is not a pointer to member constant
template argument does not refer to a class or alias template, or template template parameter
non-type template argument refers to %select{function|object}0 %1 that does not have linkage
template argument is the type of an unresolved overloaded function
reference binding of non-type template parameter %diff{of type $ to template argument of type $|to template argument}0,1 ignores qualifiers
non-type template argument of reference type %0 is not an object
template template argument has different template parameters than its corresponding template template parameter
non-type template argument refers to thread-local object
null non-type template argument must be cast to template parameter type %0
null non-type template argument of type %0 does not match template parameter of type %1
requires clause differs in template redeclaration
type constraint differs in template redeclaration
pack expansion used as argument for non-pack parameter of %select{alias template|concept}0
template name refers to non-type template %0
templates cannot be declared inside of a local class
%select{implicit|explicit}0 instantiation of undefined template %1
%select{implicit|explicit}0 instantiation of template %1 within its own definition
kernel functions cannot be used in a template declaration, instantiation or specialization
missing 'template' keyword prior to dependent template name '%0%1'
'%0%1' instantiated to a class template, not a function template
%0%select{| following the 'template' keyword}1 cannot refer to a dependent template
%0%select{| following the 'template' keyword}1 does not refer to a template
templates must have C++ linkage
member %0 declared as a template
extraneous 'template<>' in declaration of member %0
use of %select{class template|function template|variable template|alias template|template template parameter|concept|template}0 %1 requires template arguments
a non-type template parameter cannot have type %0 before C++20
a non-type template parameter cannot have type %0
template non-type parameter has a different type %0 in template %select{|template parameter }1redeclaration
non-type template parameter has incomplete type %0
non-type template parameter has non-literal type %0
type %0 of non-type template parameter is not a structural type
non-type template parameter has rvalue reference type %0
templates can only be declared in namespace or class scope
template parameter missing a default argument
template parameter redefines default argument
template parameter has a different kind in template %select{|template parameter }0redeclaration
%select{too few|too many}0 template parameters in template %select{|template parameter }1redeclaration
template parameter list matching the non-templated nested type %0 should be empty ('template<>')
template parameter pack cannot have a default argument
template parameter pack must be the last template parameter
declaration of %0 shadows template parameter
default template argument not permitted on a friend template
cannot add a default template argument to the definition of a member of a class template
%select{template type|non-type template|template template}0 parameter%select{| pack}1 conflicts with previous %select{template type|non-type template|template template}0 parameter%select{ pack|}1
nested name specifier '%0' for declaration does not refer into a class, class template or class template partial specialization
recursive template instantiation exceeded maximum depth of %0
cannot declare an explicit specialization in a friend
explicit specialization of %0 in function scope
default argument not permitted on an explicit %select{instantiation|specialization}0 of function %1
extraneous template parameter list in template specialization or out-of-line template definition
template specialization declaration cannot be a friend
template specialization requires 'template<>'
template specialization or definition requires a template parameter list corresponding to the nested type %0
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 must occur at global scope
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 not in %select{a namespace enclosing %2|class %2 or an enclosing namespace}3
can only provide an explicit specialization for a class template, function template, variable template, or a member function, static data member, %select{or member class|member class, or member enumeration}0 of a class template
extraneous 'template<>' in declaration of %0 %1
template template argument %0 is more constrained than template template parameter %1
template template parameter must have its own template parameters
a typedef cannot be a template
cannot declare a class template with no name
extraneous 'template<>' in declaration of variable %0
tentative definition has type %0 that is never completed
'this' cannot be %select{implicitly |}0captured in this context
'this' cannot be%select{| implicitly}0 used in a static member function declaration
initializer for thread-local variable must be a constant expression
'%0' variables must have global storage
thread-local declaration of %0 follows non-thread-local declaration
type of thread-local variable has non-trivial destruction
thread-local declaration of %0 with %select{static|dynamic}1 initialization follows declaration with %select{dynamic|static}1 initialization
thread-local storage is not supported for the current target
three-way comparison between vectors is not supported
cannot throw an object of abstract type %0
cannot throw object of incomplete type %0
cannot throw pointer to object of incomplete type %0
cannot throw object of sizeless type %0
alignment (%0) of thread-local variable %1 is greater than the maximum supported alignment (%2) for a thread-local variable on this target
only one element declaration is allowed
deduction guide cannot have a requires clause
trailing return type may not be nested within parentheses
function with trailing return type must specify return type 'auto', not %0
%0 requires more than 1 template argument; provide the remaining arguments explicitly to use it here
concept named in type constraint is not a type concept
%0 cannot be defined in a type alias template
%0 cannot be defined in a condition
%0 cannot be defined in an enumeration
types may not be defined in a for range declaration
%0 cannot be defined in a parameter type
%0 cannot be defined in the result type of a function
%0 cannot be defined in a type specifier
type of property %0 in class extension does not match property type in primary class
a parameter pack may not be accessed at an out of bounds index
'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression
'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression that can be represented by a 64 bit integer
%0 is not supported on this target
address of %select{bit-field|vector element|property expression|register variable|matrix element}0 requested
taking the address of a destructor
taking the address of a temporary object of type %0
conversion %diff{from $ to $|between types}0,1 is ambiguous
variable declared with 'objc_externally_retained' cannot be modified in ARC
cannot assign to 'self' outside of a method in the init family
cannot assign to 'self' in a class method
arithmetic on a pointer to %select{an incomplete|sizeless}0 type %1
fast enumeration variables cannot be modified in ARC by default; declare the variable __strong to allow this
array type %0 is not assignable
%select{cannot assign to return value because function %1 returns a const value|cannot assign to variable %1 with const-qualified type %2|cannot assign to %select{non-|}1static data member %2 with const-qualified type %3|cannot assign to non-static data member within const member function %1|cannot assign to %select{variable %2|non-static data member %2|lvalue}1 with %select{|nested }3const-qualified data member %4|read-only variable is not assignable}0
value of type %0 is not contextually convertible to 'bool'
arguments are of different types%diff{ ($ vs $)|}0,1
ordered compare requires two args of floating point type%diff{ ($ and $)|}0,1
floating point classification requires argument of floating point type (passed in %0)
called object type %0 is not a function or function pointer
argument type %0 is not a real floating point type
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, at least argument %1 must be specified
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2; did you mean %3?
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, single argument %1 was not specified
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most single argument %1, have %2 arguments
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2; did you mean %3?
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected single argument %1, have %2 arguments
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
cast to incomplete type %0
cast to union type from type %0 not present in union
'__builtin_choose_expr' requires a constant expression
comparison of distinct block types%diff{ ($ and $)|}0,1
comparison of distinct pointer types%diff{ ($ and $)|}0,1
equality comparison between function pointer and void pointer (%0 and %1)
comparison between pointer and integer (%0 and %1)
used type %0 where integer or floating point type is required
used type %0 where floating point type is not allowed
used type %0 where arithmetic or pointer type is required
incompatible operand types%diff{ ($ and $)|}0,1
non-pointer operand type %0 incompatible with %select{NULL|nullptr}1
__ptrauth qualification mismatch%diff{ ($ and $)|}0,1
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%5 vs %6)|: different exception specifications}4
incompatible block pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
incompatible function pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between pointers to integer types %select{with different sign|where one is of the unique plain 'char' type and the other is not}3
incompatible integer to pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer to integer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between void pointer and function pointer
value of type %0 is not implicitly convertible to %1
conversion from %0 to %1 is not allowed in a converted constant expression
conversion from %0 to %1 in converted constant expression would bind reference to a temporary
variable has incomplete type %0
conversion function %diff{from $ to $|between types}0,1 invokes a deleted function
vector is not assignable (contains duplicate components)
invalid operand of type %0 where floating, complex or a vector of such types is required
used type %0 where integer is required
operand of type %0 where arithmetic or pointer type is required
expression is not assignable
fields must have a constant size: 'variable length array in structure' extension will never be supported
cannot %select{decrement|increment}1 value of type %0
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes address space of pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes address space of nested pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes retain/release properties of pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes pointer-authentication of pointee type
definition of variable with array type needs an explicit size or an initializer
incomplete definition of type %0
incomplete type %0 is not assignable
indirection requires pointer operand (%0 invalid)
cannot take the address of an rvalue of type %0
extra '&' taking address of overloaded function
invalid operands to binary expression (%0 and %1)
pointer to function type %0 may not be 'restrict' qualified
restrict requires a pointer or reference (%0 is invalid)
restrict requires a pointer or reference
instance variables must have a constant size
logical expression with vector %select{type %1 and non-vector type %2|types %1 and %2}0 is only supported in C++
assignment to cast is illegal, lvalue casts are not supported
member reference type %0 is not a pointer
%0 does not have a member named %1
%0 does not have a member named %1; did you mean %2?
member reference base type %0 is not a structure or union
member reference type %0 is %select{a|not a}1 pointer; did you mean to use '%select{->|.}1'?
cannot refer to type member %0 in %1 with '%select{.|->}2'
cannot refer to member %0 in %1 with '%select{.|->}2'
%diff{return type $ must match previous return type $|return type must match previous return type}0,1 when %select{block literal|lambda expression}2 has unspecified explicit return type
array size is negative
non-object type %0 is not assignable
no viable conversion%select{%diff{ from $ to $|}1,2|%diff{ from returned value of type $ to function return type $|}1,2}0
no viable conversion%diff{ from $ to incomplete type $|}0,1
%select{comparison between %diff{ ($ and $)|}0,1|arithmetic operation with operands of type %diff{ ($ and $)|}0,1|conditional operator with the second and third operands of type %diff{ ($ and $)|}0,1}2 which are pointers to non-overlapping address spaces
ordered comparison of function pointers (%0 and %1)
ordered comparison between pointer and zero (%0 and %1)
arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2
arithmetic on%select{ a|}0 pointer%select{|s}0 to void
illegal storage class on file-scoped variable
illegal storage class on function
statement requires expression of integer type (%0 invalid)
statement requires expression of scalar type (%0 invalid)
%diff{$ and $ are not pointers to compatible types|pointers to incompatible types}0,1
array subscript is not an integer
subscripted value is not an array, pointer, or vector
cannot combine fixed-length and sizeless SVE vectors in expression, result is ambiguous (%0 and %1)
cannot combine GNU and SVE vectors in expression, result is ambiguous (%0 and %1)
three-way comparison between pointer and zero
invalid argument type %0 to unary expression
vector operands do not have the same number of elements (%0 and %1)
cannot convert between vector values of different size (%0 and %1)
cannot convert between %select{scalar|vector}0 type %1 and vector type %2 as implicit conversion would cause truncation
cannot convert between vector and non-scalar values (%0 and %1)
zero-length arrays are not permitted in C++
expected %0 argument%select{||s}0 for %select{tmo_malloc|tmo_calloc|tmo_realloc|tmo_aligned_alloc|tmo_posix_memalign}1 operation
invalid typed memory operation %1
invalid %select{return|parameter}0 type for %select{tmo_malloc|tmo_calloc|tmo_realloc|tmo_aligned_alloc|tmo_posix_memalign}1 operation
the typed_allocator attribute can only be applied to functions
unsupported: anonymous type given name for linkage purposes by %select{typedef|alias}0 declaration after its linkage was computed; add a tag name here to establish linkage prior to definition
typedef member %0 cannot be a bit-field
typedef name must be an identifier
missing 'typename' prior to dependent type name '%0%1'
missing 'typename' prior to dependent type template name '%0%1'
no type named %0 in %1
no type named 'type' in %0; 'enable_if' cannot be used to disable this declaration
failed requirement '%0'; 'enable_if' cannot be used to disable this declaration
typename specifier refers to non-type member %0 in %1
typename specifier refers to non-type %0
typename specifier refers to a dependent using declaration for a value %0 in %1
%0 is unavailable
%0 is unavailable in ARC
%0 is unavailable: %1
%0 has unknown return type; cast the call to its declared return type
no known method %select{%objcinstance1|%objcclass1}0; cast the message send to the method's return type
%0 has unknown type; cast it to its declared type to use it
declaration of %0 is missing in %1 class
undeclared identifier %0 in destructor name
use of undeclared label %0
definition of class %0 must be available to use Objective-C %select{array literals|dictionary literals|numeric literals|boxed expressions|string literals}1
cannot find protocol declaration for %0
cannot find protocol declaration for %0; did you mean %1?
use of undeclared %0
use of undeclared %0; did you mean %1?
use of undeclared identifier %0
use of undeclared identifier %0; did you mean %1?
cannot find interface declaration for %0
cannot find interface declaration for %0; did you mean %1?
cannot find interface declaration for %0, superclass of %1
cannot find interface declaration for %0, superclass of %1; did you mean %2?
inline variable %q0 is not defined
%select{function|variable}0 %q1 is used but not defined in this translation unit, and cannot be defined in any other translation unit because its type does not have linkage
cannot determine underlying type of incomplete enumeration type %0
%select{expression|base type|declaration type|data member type|bit-field size|static assertion|fixed underlying type|enumerator value|using declaration|friend declaration|qualifier|initializer|default argument|non-type template parameter type|exception type|partial specialization|__if_exists name|__if_not_exists name|lambda|block|type constraint|requirement|requires clause}0 contains%plural{0: an|:}1 unexpanded parameter pack%plural{0:|1: %2|2:s %2 and %3|:s %2, %3, ...}1
friends can only be classes or functions
unexpected interface name %0: expected expression
unexpected namespace name %0: expected expression
unexpected type name %0: expected expression
cannot define the implicit copy assignment operator for %0, because non-static %select{reference|const}1 member %2 cannot use copy assignment operator
%select{constructor for %1|implicit default constructor for %1|cannot use constructor inherited from %1:}0 must explicitly initialize the %select{reference|const}2 member %3
unions cannot be base classes
union member %0 has reference type %1
the address of a declaration with unknown type can only be cast to a pointer type
address-of operator cannot be applied to a call to a function with unknown return type
function %0 with unknown type must be given a function type
variable %0 with unknown type cannot be given a function type
no type named %0 in %1; did you mean %select{|simply }2%3?
unknown receiver %0; did you mean %1?
unknown %select{type|class}1 name %0; did you mean %2?
unknown type name %0
unknown type name %0; did you mean %1?
must explicitly qualify name of member function when taking its address
constrained placeholder types other than simple 'auto' on non-type template parameters not supported yet
call to unsupported expression with unknown type
%0 has unknown type, which is not supported for this kind of declaration
unsupported expression with unknown type
cannot cast %0 to its %select{private|protected}2 base class %1
illegal redeclaration of property in class extension %0 (attribute must be 'readwrite', while its primary must be 'readonly')
illegal redeclaration of 'readwrite' property in class extension %0 (perhaps you intended this to be a 'readwrite' redeclaration of a 'readonly' public property?)
use of default argument to function %0 that is declared later in class %1
reference to unresolved using declaration
use of %0 with tag type that does not match previous declaration
using declaration cannot refer to class member
using declaration cannot refer to a namespace
target of using declaration conflicts with declaration already in scope
declaration conflicts with target of using declaration already in scope
using declaration cannot refer to a constructor
%0 is not a direct base of %1, cannot inherit constructors
using declaration cannot refer to a destructor
cannot befriend target of using declaration
using declaration refers to its own class
using declaration refers into '%0', which is not a base class of %1
using declaration in class refers into '%0', which is not a class
redeclaration of using declaration
using declaration pack expansion at block scope produces multiple values
using declaration cannot refer to a template specialization
dependent using declaration resolved to type without 'typename'
no namespace named %0 in %1; did you mean %select{|simply }2%3?
no namespace named %0; did you mean %1?
redeclaration of using-enum declaration
using-enum cannot name a dependent type
'using_if_exists' attribute cannot be applied to an inheriting constructor
%select{|member}0 using declaration %1 instantiates to an empty pack
using declaration requires a qualified name
'typename' keyword used on a non-type
cannot call operator __uuidof on a type with multiple GUIDs
cannot call operator __uuidof on a type with no GUID
CUDA device code does not support va_arg
'va_start' cannot be used in a captured statement
'va_start' used in function with fixed args
'va_start' cannot be used outside a function
'va_start' used in %select{System V|Win64}0 ABI function
array types cannot be value-initialized
variable template partial specialization %0 cannot be redefined
no variable template matches%select{| partial}0 specialization
no variable template matches specialization; did you mean to use %0 as function template instead?
%select{variable|static data member}0 instantiated with function type %1
variable-sized object may not be initialized
'new' cannot allocate object of variably modified type %0
non-type template parameter of variably modified type %0
variably modified type %0 cannot be used as a template argument
'typeid' of variably modified type %0
CUDA device code does not support variadic functions
first two arguments to %0 must have the same type
first two arguments to %0 must be vectors
'vec_step' requires built-in scalar or vector type, %0 invalid
%select{too many|too few}0 elements in vector initialization (expected %1 elements, have %2)
unions cannot have virtual functions
second argument to __builtin_virtual_member_address must be the address of a virtual C++ member function: for example '&Foo::func'
'virtual' cannot be specified on member function templates
first argument to __builtin_virtual_member_address must have a type deriving from class where second argument was defined
first argument to __builtin_virtual_member_address must have C++ class type
'virtual' can only appear on non-static member functions
'virtual' can only be specified inside the class definition
variable length array declaration cannot have 'extern' linkage
variable length array declaration cannot have 'static' storage duration
variable length array declaration not allowed at file scope
variable length array cannot be formed during template argument deduction
variable length arrays are not supported for the current target
variably modified type declaration cannot have 'extern' linkage
variably modified type declaration not allowed at file scope
function declaration cannot have variably modified type
'void' must be the first and only parameter if specified
'void' as parameter must not have type qualifiers
argument %0 to %1 must be a 2-bit unsigned literal (i.e. 0, 1, 2 or 3)
existing instance variable %1 for __weak property %0 must be __weak
sampler type cannot be used with the __local and __global address space qualifiers
invalid rounding argument
scale argument must be 1, 2, 4, or 8
tile arguments must refer to different tiles
%0 attribute can only be applied to a typedef or a field declaration
%0 attribute can only be applied to non-record types
invalid type signature semantic kind %1
%0 attribute can only be applied once per declaration
semantics kind '%1' repeated more than once
%0 calling convention is not supported %select{for this target|on variadic function|on constructor/destructor|on builtin function}1
duplicate use of asm operand name "%0"
asm-specifier for input or output variable conflicts with asm clobber list
use of function template name with no prior declaration in function call with explicit template arguments is a C++20 extension
initializer for aggregate is not a compile-time constant
anonymous types declared in an anonymous %select{struct|union}0 are an extension
types declared in an anonymous %select{struct|union}0 are a Microsoft extension
anonymous %select{struct|union}0 cannot be '%1'
anonymous unions are a C11 extension
initialization of an array %diff{of type $ from a compound literal of type $|from a compound literal}0,1 is a GNU extension
parenthesized initialization of a member array is a GNU extension
implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is a C++11 extension
ISO C++ standards before C++17 do not allow new expression for type %0 to use list-initialization
'auto' type specifier is a C++11 extension
ISO C++ does not allow %select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast|}0 from %1 to %2 because it casts away qualifiers, even though the source and destination types are unrelated
anonymous structs are a C11 extension
%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature
flexible array members are a C99 feature
'trivial_abi' cannot be applied to %0
cast between pointer-to-function and pointer-to-object is an extension
%select{case value|enumerator value|non-type template argument|array size|explicit specifier argument|noexcept specifier argument}0 %select{cannot be narrowed from type %2 to %3|evaluates to %2, which cannot be narrowed to type %3}1
complex initialization specifying real and imaginary components is an extension
use of this statement in a constexpr %select{function|constructor}0 is a C++14 extension
use of this statement in a constexpr %select{function|constructor}0 is a C++20 extension
multiple return statements in constexpr function is a C++14 extension
constexpr constructor that does not initialize all members is a C++20 extension
%select{constexpr|consteval}1 %select{function|constructor}0 never produces a constant expression
function try block in constexpr %select{function|constructor}0 is a C++20 extension
variable declaration in a constexpr %select{function|constructor}0 is a C++14 extension
uninitialized variable in a constexpr %select{function|constructor}0 is a C++20 extension
type definition in a constexpr %select{function|constructor}0 is a C++14 extension
constexpr union constructor that does not initialize any member is a C++20 extension
'constinit' specifier missing on initializing declaration of %0
use of the %0 attribute is a C++14 extension
use of the %0 attribute is a C++17 extension
use of the %0 attribute is a C++20 extension
designated initializers are a C++20 extension
decomposition declarations are a C++17 extension
ISO C++17 does not permit structured binding declaration in a condition
decomposition declaration declared %plural{1:'%1'|:with '%1' specifiers}0 is a C++20 extension
default initialization of an object of const type %0%select{| without a user-provided default constructor}1 is a Microsoft extension
defaulted comparison operators are a C++20 extension
cannot delete expression with pointer-to-'void' type %0
ISO C++11 does not allow conversion from string literal to %0
designated initializers are a C99 feature
array designators are a C99 extension
brace elision for designated initializer is a C99 extension
mixture of designated and non-designated initializers in the same initializer list is a C99 extension
nested designators are a C99 extension
ISO C++ requires field designators to be specified in declaration order; field %1 will be initialized after field %0
destructor cannot be declared using a %select{typedef|type alias}1 %0 of the class name
ISO C++ considers this destructor name lookup to be ambiguous
ISO C++ requires the name after '::~' to be found in the same scope as the name before '::~'
empty %select{struct|union}0 is a GNU extension
befriending enumeration type %0 is a C++11 extension
enumeration values exceed range of largest integer
ISO C restricts enumerator values to range of 'int' (%0 is too %select{small|large}1)
incremented enumerator value %0 is not representable in the largest integer type
enumerator value is not representable in the underlying type %0
explicit capture of 'this' with a capture default of '=' is a C++20 extension
ambiguous use of internal linkage declaration %0 defined in multiple modules
excess elements in %select{array|vector|scalar|union|struct}0 initializer
excess elements in initializer for indivisible sizeless type %0
excess elements in char array initializer
explicit conversion functions are a C++11 extension
duplicate explicit instantiation of %0 ignored as a Microsoft extension
qualifier in explicit instantiation of %q0 requires a template-id (a typedef is not permitted)
explicit specialization cannot have a storage class
ISO C++20 does not permit %select{an empty|a static_assert}0 declaration to appear in an export block
ISO C++20 does not permit a declaration that does not introduce any names to be exported
ISO C++20 does not permit using directive to be exported
expression is not an %select{integer|integral}0 constant expression; folding it to a constant is a GNU extension
flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a GNU extension
flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a Microsoft extension
%0 may not be used as an array element due to flexible array member
%0 may not be nested in a struct due to flexible array member
flexible array initialization is a GNU extension
flexible array member %0 in a union is a GNU extension
flexible array member %0 in a union is a Microsoft extension
'begin' and 'end' returning different types (%0 and %1) is a C++17 extension
ISO C forbids forward references to 'enum' types
redeclaration of already-defined enum %0 is a GNU extension
use of member %0 found via unqualified lookup into dependent bases of class templates is a Microsoft extension
use of member %0 before its declaration is a Microsoft extension
complex numbers are an extension in a freestanding C99 implementation
unqualified friend declaration referring to type outside of the nearest enclosing namespace is a Microsoft extension; add a nested name specifier
anonymous structs are a GNU extension
arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2 is a GNU extension
subscript of a pointer to void is a GNU extension
arithmetic on%select{ a|}0 pointer%select{|s}0 to void is a GNU extension
jump from this goto statement to its label is a Microsoft extension
imaginary constants are a GNU extension
function previously declared with an %select{explicit|implicit}0 exception specification redeclared with an %select{implicit|explicit}0 exception specification
implicit declaration of function %0 is invalid in C99
implicitly declaring library function '%0' with type %1
in-class initializer for static data member of type %0 is a GNU extension
in-class initializer for static data member of type %0 requires 'constexpr' specifier
in-class initializer for static data member is not a constant expression; folding it to a constant is a GNU extension
%select{|pointer to |reference to }0incomplete type %1 is not allowed in exception specification
ISO C++17 does not allow incrementing expression of type bool
initialized lambda captures are a C++14 extension
initialized lambda pack captures are a C++20 extension
constant expression evaluates to %0 which cannot be narrowed to type %1
type %0 cannot be narrowed to %1 in initializer list
non-constant-expression cannot be narrowed from type %0 to %1 in initializer list
initializer %select{partially |}0overrides prior initialization of this subobject
initializer-string for char array is too long
inline variables are a C++17 extension
ISO C does not support '~' for complex conjugation of %0
complex integer types are a GNU extension
ISO C does not support '++'/'--' on complex integer type %0
static %select{function|variable}0 %1 is used in an inline function with external linkage
static %select{function|variable}0 %1 is used in an inline function with external linkage
return type of 'main' is not 'int'
ISO C++ does not allow 'main' to be used by a program
too many braces around %select{scalar |}0initializer
class member cannot be redeclared
exception specification in declaration does not match previous declaration
exception specification in explicit instantiation does not match instantiated one
declaration specifier missing, defaulting to 'int'
%0 is missing exception specification '%1'
type specifier missing, defaults to 'int'
ISO C90 forbids mixing declarations and code
import of C++ module '%0' appears within extern "C" language linkage specification
redundant #include of module '%0' appears within %1
accessing inaccessible direct base %0 of %1 is a Microsoft extension
anonymous %select{structs|unions}0 are a Microsoft extension
static_cast between pointer-to-function and pointer-to-object is a Microsoft extension
using the undeclared type %0 as a default template argument is a Microsoft extension
non-type template argument containing a dereference operation is a Microsoft extension
explicit constructor calls are a Microsoft extension
forward references to 'enum' types are a Microsoft extension
implicit conversion between pointer-to-function and pointer-to-object is a Microsoft extension
%0 is missing exception specification '%1'
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 not in %select{a namespace enclosing %2|class %2 or an enclosing namespace}3 is a Microsoft extension
template argument for template type parameter must be a type; omitted 'typename' is a Microsoft extension
using declaration referring to inaccessible member '%0' (which refers to accessible member '%1') is a Microsoft compatibility extension
'mutable' on a reference type is a Microsoft extension
lookup of %0 in member access expression is ambiguous; using member of %1
use of enumeration in a nested name specifier is a C++11 extension
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers in nested pointer types
when type is in parentheses, array cannot have dynamic size
declaration does not declare anything
%select{struct|union}0 without named members is a GNU extension
anonymous non-C-compatible type given name for linkage purposes by %select{typedef|alias}0 declaration; add a tag name here
non-class friend type %0 is a C++11 extension
'main' is not allowed to be declared _Noreturn
offset of on non-POD type %0
offset of on non-standard-layout type %0
initialization clause of OpenMP for loop is not in canonical form ('var = init' or 'T var = init')
Clang permits use of type 'double' regardless pragma if 'cl_khr_fp64' is supported
vector component name '%0' is a feature from OpenCL version 3.0 onwards
replacement function %0 cannot be declared 'inline'
out-of-line declaration of a member must be a definition
ISO C++ specifies that qualified reference to %0 is a constructor name rather than a %select{template name|type}1 in this context, despite preceding %select{'typename'|'template'}2 keyword
exception specification of overriding function is more lax than base version
ISO C++20 considers use of overloaded operator '%0' (with operand types %1 and %2) to be ambiguous despite there being a unique best viable function%select{ with non-reversed arguments|}3
ISO C++20 requires return type of selected 'operator==' function for rewritten '%1' comparison to be 'bool', not %0
redefinition of default argument
parameter %0 was not declared, defaulting to type 'int'
%diff{promoted type $ of K&R function parameter is not compatible with the parameter type $|promoted type of K&R function parameter is not compatible with parameter type}0,1 declared in a previous prototype
omitting the parameter name in a function definition is a C2x extension
%select{class|variable}0 template partial specialization is not more specialized than the primary template
%select{class|variable}0 template partial specialization contains %select{a template parameter|template parameters}1 that cannot be deduced; this partial specialization will never be used
plain '_Complex' requires a type specifier; assuming '_Complex double'
invoking a pointer to a 'const &' member function on an rvalue is a C++20 extension
predefined identifier is only valid inside function
pseudo-destructors on type void are a Microsoft extension
function definition with pure-specifier is a Microsoft extension
qualified destructor name only found in lexical scope; omit the qualifier to find this type name by unqualified lookup
redefinition of typedef %0 is a C11 feature
ISO C++17 does not allow 'register' storage class specifier
friend function %0 retaining previous language linkage is an extension
%select{void function|void method|constructor|destructor}1 %0 should not return a value
void %select{function|method|block}1 %0 should not return void expression
non-void %select{function|method}1 %0 should return a value
C++98 requires an accessible copy constructor for class %2 when binding a reference to a temporary; was %select{private|protected}0
no viable constructor %select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1; C++98 requires a copy constructor when binding a reference to a temporary
invalid application of '%0' to a function type
invalid application of '%0' to a void type
'%0' is not permitted on a declaration of a type
capture of '*this' by copy is a C++17 extension
static data member %0 in union is a C++11 extension
redeclaring non-static %0 as static is a Microsoft extension
'static' can only be specified inside the class definition
string literal operator templates are a GNU extension
ISO C90 does not allow subscripting non-lvalue array
address non-type template argument cannot be surrounded by parentheses
template argument uses local type %0
non-type template argument referring to %select{function|object}0 %1 with internal linkage is a C++11 extension
template argument uses unnamed type
'template' keyword outside of a template
declaration of %0 shadows template parameter
default template arguments for a function template are a C++11 extension
taking the address of a temporary object of type %0
ISO C forbids taking the address of an expression of type 'void'
method parameter type %diff{$ does not match super class method parameter type $|does not match super class method parameter type}0,1
C99 forbids casting nonscalar type %0 to the same type
cast to union type is a GNU extension
pointer comparisons before C11 need to be between two complete or two incomplete types; %0 is %select{|in}2complete and %1 is %select{|in}3complete
comparison of distinct pointer types%diff{ ($ and $)|}0,1
equality comparison between function pointer and void pointer (%0 and %1)
comparison between pointer and integer (%0 and %1)
incompatible operand types (%0 and %1)
pointer type mismatch%diff{ ($ and $)|}0,1
C99 forbids conditional expressions with only one void side
pointer/integer type mismatch in conditional expression%diff{ ($ and $)|}0,1
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers
incompatible function pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between pointers to integer types %select{with different sign|where one is of the unique plain 'char' type and the other is not}3
incompatible integer to pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer to integer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between void pointer and function pointer
tentative definition of variable with internal linkage has incomplete non-array type %0
ISO C++ does not allow indirection on operand of type %0
ordered comparison of function pointers (%0 and %1)
ordered comparison between pointer and zero (%0 and %1) is an extension
ordered comparison between pointer and integer (%0 and %1)
zero size arrays are an extension
typedef requires a name
missing 'typename' prior to dependent type name '%0%1'
'typename' occurs outside of a template
use of undeclared identifier %0; unqualified lookup into dependent bases of class template %1 is a Microsoft extension
ISO C++ requires a definition in this translation unit for %select{function|variable}0 %q1 because its type does not have linkage
unelaborated friend declaration is a C++11 extension; specify '%select{struct|interface|union|class|enum}0' to befriend %1
union member %0 has reference type %1, which is a Microsoft extension
use of out-of-scope declaration of %0%select{| whose type is not compatible with that of an implicit declaration}1
member using declaration naming a non-member enumerator is a C++20 extension
using declaration naming a scoped enumerator is a C++20 extension
using directive refers to implicitly-defined namespace 'std'
field %0 with variable sized type %1 not at the end of a struct or class is a GNU extension
variable templates are a C++14 extension
'main' is not allowed to be declared variadic
variable length arrays are a C99 feature
variable length array folded to constant array as an extension
'%0' cannot be signed or unsigned
constrained by %select{|implicitly }1%select{private|protected}0 inheritance here
%select{|implicitly }1declared %select{private|protected}0 here
protected %select{constructor|destructor}0 can only be used to %select{construct|destroy}0 a base class subobject
must name member using the type of the current context %0
can only access this member on an object of type %0
add stubs for missing protocol requirements
add a '@synthesize' directive
add a pair of parentheses to declare a variable
candidate function made ineligible by enable_if
declared with %0 attribute here
allocated with 'new%select{[]|}0' here
lookup in the object type %0 refers here
lookup from the current scope refers here
similar constraint expressions not considered equivalent; constraint expressions cannot be considered equivalent unless they originate from the same concept
similar constraint expression here
candidate found by name lookup is %q0
inherited from base class %0 here
member found by ambiguous name lookup
member type %0 found by ambiguous name lookup
because of ambiguity in conversion %diff{of $ to $|between types}0,1
anonymous namespace begins here
use __bridge to convert directly (no change in ownership)
use %select{__bridge_retained|CFBridgingRetain call}1 to make an ARC object available as a +1 %0
use %select{__bridge_transfer|CFBridgingRelease call}1 to transfer ownership of a +1 %0 into ARC
use __bridge with C-style cast to convert directly (no change in ownership)
use __bridge_retained with C-style cast to make an ARC object available as a +1 %0
use __bridge_transfer with C-style cast to transfer ownership of a +1 %0 into ARC
field has non-trivial ownership qualification
declaration uses type that is ill-formed in ARC
declaration in interface is not in the '%select{alloc|copy|init|new}0' family because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
init method must return a type related to its receiver type
declaration in interface
block will be retained by %select{the captured object|an object strongly retained by the captured object}0
also accessed here
declaration uses __weak, but ARC is disabled
declaration uses __weak, which the current deployment target does not support
array %0 declared here
add 'u8' prefix to form a 'char8_t' string literal
conversion to %select{integral|enumeration}0 type %1 declared here
constraint '%0' is already present here
use constraint modifier "%0"
type %0 is incomplete
%select{and|because}0 '%1' evaluated to false
%select{and|because}0 '%1' (%2 %3 %4) evaluated to false
setter and getter must both be synthesized, or both be user defined,or the property must be nonatomic
attribute is here
annotating the 'if %select{constexpr|consteval}0' statement here
annotating the infinite loop here
previous %select{unmarked |}0overload of function is here
property should be changed to be readwrite
%0 has been explicitly marked %select{unavailable|deleted|deprecated}1 here
return type of 'await_ready' is required to be contextually convertible to 'bool'
explicitly cast the pointer to silence this warning
base class %0 specified here
bit-field is declared here
did you mean to use __block %0?
called by %0
previous call is here%select{; set to nil to indicate it cannot be called afterwards|}0
%0 declared here
callee declares array parameter as static here
'trivial_abi' is disallowed on %0 because %select{its copy constructors and move constructors are all deleted|it is polymorphic|it has a base of a non-trivial class type|it has a virtual base|it has a __weak field|it has a field of a non-trivial class type|it has an address-discriminated __ptrauth field}1
declaration missing '[[carries_dependency]]' attribute is here
cast one or both operands to int to silence this warning
cast expression to void to silence warning
%select{category|class extension}0 conforms to protocol %1 which defines method %2
consider making the bitfield type %select{unsigned|signed}0
consider defining %0 with the '%1' calling convention
while checking constraint satisfaction for class template partial specialization '%0' required here
while checking constraint satisfaction for function '%0' required here
while checking constraint satisfaction for template '%0' required here
while checking constraint satisfaction for variable template partial specialization '%0' required here
class is declared here
explicitly declare getter %objcinstance0 with '%1' to return an 'unowned' object
parameter of the 'collapse' clause
in defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator for %1 first required here
compatible type %0 specified here
place parentheses around the string literal to silence warning
%select{and|because}0 '%1' evaluated to false
while checking the satisfaction of concept '%0' requested here
place parentheses around the assignment to silence this warning
use '==' to turn this assignment into an equality comparison
use '!=' to turn this compound assignment into an inequality comparison
conflicting attribute is here
conflicting %0 here
previous return statement is here
member not initialized by constructor
%select{data member %1|base class %2}0 declared here
virtual base class declared here
add the %select{'require_constant_initialization' attribute|'constinit' specifier}0 to the initializing declaration here
variable declared constinit here
while calculating associated constraint of template '%0' here
while substituting template arguments into constraint expression here
type conversion function declared here
use 'static' to give inline function %0 internal linkage
must be declared with 'noexcept'
call to %0 implicitly required by coroutine function here
call to 'await_transform' implicitly required by 'co_await' here
call to '%select{initial_suspend|final_suspend}0' implicitly required by the %select{initial suspend point|final suspend point}0
conflicting __device__ function declared here
const variable cannot be emitted on device side due to dynamic initialization
the %select{1st|2nd|3rd}1 template parameter of %0 needs to be %select{a type|an integer or enum value}2
%0 needs to have exactly %1 template parameters
%0 needs to be instantiated from a class template with proper template arguments
host variable declared here
candidate template ignored: target attributes do not match
remove 'u8' prefix to avoid a change of behavior; Clang encodes unprefixed narrow string literals as UTF-8
annotate %select{%1|anonymous %1}0 with an availability attribute to silence this warning
this declaration is not a prototype; add %select{'void'|parameter declarations}0 to make it %select{a prototype for a zero-parameter function|one}0
declare the parameter __strong or capture a __block __strong variable to keep values alive across autorelease pools
function is a coroutine due to use of '%0' here
declared %select{'returns_nonnull'|'nonnull'}0 here
required by %select{'require_constant_initialization' attribute|'constinit' specifier}0 here
during template argument deduction for %select{class|variable}0 template %select{partial specialization |}1%2 %3
deduction guide declared %0 by intervening access specifier
member template declared %0 here
in instantiation of default argument for '%0' required here
default argument declared here
in instantiation of default function argument expression for '%0' required here
default member initializer declared here
defaulted %0 is implicitly deleted because implied %select{|'==' |'<' }1comparison %select{|for member %3 |for base class %3 }2is ambiguous
defaulted %0 is implicitly deleted because it would invoke a deleted comparison function%select{| for member %2| for base class %2}1
return type of defaulted 'operator<=>' cannot be deduced because return type %2 of three-way comparison for %select{|member|base class}0 %1 is not a standard comparison category type
selected 'operator<=>' for %select{|member|base class}0 %1 declared here
%select{|member|base class}0 %1 declared here
defaulted %0 is implicitly deleted because it would invoke a %select{private|protected}3 %4%select{ member of %6| member of %6 to compare member %2| to compare base class %2}1
defaulted %0 is implicitly deleted because there is no viable %select{three-way comparison function|'operator=='}1 for %select{|member |base class }2%3
three-way comparison cannot be synthesized because there is no viable function for %select{'=='|'<'}0 comparison
non-constexpr comparison function would be used to compare %select{|member %1|base class %1}0
non-constexpr comparison function declared here
defaulted %0 is implicitly deleted because this non-rewritten comparison function would be the best match for the comparison
defaulted %0 is implicitly deleted because a builtin comparison function using this conversion would be the best match for the comparison
defaulted %0 is implicitly deleted because class %1 has a reference member
defaulted %0 is implicitly deleted because %2 is a %select{union-like class|union}1 with variant members
%0 defined here
conversion to pointer type %0
qualify call to silence this warning
%select{copy|move}0 assignment operator of %1 is implicitly deleted because field %2 is of %select{reference|const-qualified}4 type %3
copy constructor of %0 is implicitly deleted because field %1 is of rvalue reference type %2
copy %select{constructor|assignment operator}0 is implicitly deleted because %1 has a user-declared move %select{constructor|assignment operator}2
%select{default constructor of|constructor inherited by}0 %1 is implicitly deleted because all %select{data members|data members of an anonymous union member}2 are const-qualified
%select{default constructor of|constructor inherited by}0 %1 is implicitly deleted because field %2 of %select{reference|const-qualified}4 type %3 would not be initialized
virtual destructor requires an unambiguous, accessible 'operator delete'
%select{default constructor of|copy constructor of|move constructor of|copy assignment operator of|move assignment operator of|destructor of|constructor inherited by}0 %1 is implicitly deleted because %select{base class %3|%select{||||variant }4field %3}2 %select{has %select{no|a deleted|multiple|an inaccessible|a non-trivial}4 %select{%select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|%select{default|corresponding|default|default|default}4 constructor}0|destructor}5%select{||s||}4|is an ObjC pointer|has an address-discriminated ptrauth qualifier}6
function is implicitly deleted because its declared type does not match the type of an implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0
candidate ignored: %select{not a function template|not a member of the enclosing namespace; did you mean to explicitly qualify the specialization?}0
must qualify identifier to find this declaration in dependent base class
template parameter is used in default argument declared here
add an explicit capture of 'this' to capture '*this' by reference
first non-designated initializer is here
non-type declaration found by destructor name lookup
type %0 found by destructor name lookup
direct member declared here
direct method %0 declared here
due to %0 being dllexported%select{|; try compiling in C++11 mode}1
asm operand name "%0" first referenced here
element %0 also has value %1
put the semicolon on a separate line to silence this warning
remove parentheses to declare a variable
change this ',' to a ';' to call %0
replace parentheses with an initializer to declare a variable
using declaration annotated with 'using_if_exists' here
jump enters lifetime of block which captures a destructible C++ object
jump enters lifetime of block which captures a C struct that is non-trivial to destroy
jump enters lifetime of block which strongly captures a variable
jump enters lifetime of block which weakly captures a variable
jump enters lifetime of a compound literal that is non-trivial to destruct
%0 declared here
enum %0 was explicitly specialized here
remove extraneous parentheses around the comparison to silence this warning
use '=' to turn this equality comparison into an assignment
declared here%select{ in module '%1'|}0
place parentheses around comparison expression to evaluate it first
in evaluation of exception specification for %q0 needed here
jump exits scope of __block variable
jump exits lifetime of block which captures a destructible C++ object
jump exits lifetime of block which captures a C struct that is non-trivial to destroy
jump exits lifetime of block which strongly captures a variable
jump exits lifetime of block which weakly captures a variable
jump exits scope of variable with __attribute__((cleanup))
jump exits lifetime of a compound literal that is non-trivial to destruct
jump exits catch block
jump exits try block
jump exits scope of variable with non-trivial destructor
jump exits autoreleasepool block
jump exits @catch block
jump exits @finally block
jump exits scope of __strong variable
jump exits @synchronized block
jump exits @try block
jump exits scope of __weak variable
jump exits __except block
jump exits __finally block
jump exits __try block
jump exits scope of lifetime-extended temporary with non-trivial destructor
explicit %select{constructor|deduction guide}0 declared here
explicit instantiation candidate function %q0 template here %1
explicit instantiation definition is here
explicit instantiation refers here
explicit specialization declared here
while substituting explicitly-specified template arguments into function template %0 %1
'template<>' header not required for explicitly-specialized class %0 declared here
export block begins here
%select{and|because}0 type constraint '%1' was not satisfied:
%select{and|because}0 %1 does not satisfy %2:
%select{and|because}0 '%1' would be invalid: %2
%select{and|because}0 '%1' would be invalid
%select{and|because}0 '%1' may throw an exception
%select{and|because}0 '%1' would be invalid: %2
%select{and|because}0 '%1' would be invalid
extern "C" language linkage specification begins here
declared %select{in global scope|with C language linkage}0 here
did you forget ';'?
field designator refers here
add missing switch cases
mark %0 as '%select{final|sealed}1' to silence this warning
final overrider of %q0 in %1
add a count attribute within the declarator brackets or convert the parameter to a pointer with a count or size attribute
'%0' has been assigned here
casting %0 to %1 will not be allowed in the future; consider replacing '__unsafe_indexable' by a safe pointer
previously assigned here
remove '&' to get address as %0 instead of %1
variable '%0' is not part of out parameter to the function call while having dependency with variable '%1' which is passed as an out parameter; this may result in pointers with invalid dynamic count
initialized flexible array member %0 is here
selected '%select{begin|end}0' %select{function|template }1%2 with iterator type %3
in implicit call to 'operator%select{!=|*|++}0' for iterator of type %1
member is not a candidate because range type %0 has no '%select{end|begin}1' member
did you mean to use '%0'?
treat the string as an argument to avoid this
format string is defined here
forward declaration of class here
%0 is not defined, but forward declared here; conversion would be valid if it was derived from %1
forward declaration of template entity is here
found near match '%0'
from 'diagnose_if' attribute on %0:
add enclosing parentheses to perform a function-style cast
did you mean %0?
while substituting deduced template arguments into function template %0 %1
in instantiation of function template specialization %q0 requested here
function template %q0 matches specialization %1
suffix with parentheses to turn this into a function call
prefix with the address-of operator to silence this warning
or because setter is declared here, but no getter method %0 is found
add 'module;' to the start of the file to introduce a global module fragment
inline assembly label %0 declared here
guarded_by declared here
hidden overloaded virtual function %q0 declared here%select{|: different classes%diff{ ($ vs $)|}2,3|: different number of parameters (%2 vs %3)|: type mismatch at %ordinal2 parameter%diff{ ($ vs $)|}3,4|: different return type%diff{ ($ vs $)|}2,3|: different qualifiers (%2 vs %3)|: different exception specifications}1
type declaration hidden
declaration hides type
conversion to %select{integral|enumeration}0 type %1 declared here
field of illegal %select{type|pointer type}0 %1 declared here
class implementation is declared here
when implemented by class %0
while checking implicit 'delete this' for virtual destructor
implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 inferred target collision: call to both %select{__device__|__global__|__host__|__host__ __device__}1 and %select{__device__|__global__|__host__|__host__ __device__}2 members
%0 is an implicit parameter
explicitly defaulted function was implicitly deleted here
in implicit initialization of binding declaration %0
add 'constexpr'
while declaring the corresponding implicit 'operator==' for this defaulted 'operator<=>'
while declaring the implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 for %0
when looking up '%select{begin|end}0' function for range expression of type %1
in implicit initialization of %select{array element %1 with omitted initializer|field %1 with omitted initializer|trailing array elements in runtime-sized array new}0
in initialization of temporary of type %0 created to list-initialize this reference
include the header <%0> or explicitly provide a declaration for '%1'
conformance of forward class %0 to protocol %1 can not be confirmed
possible target of %select{indirect|asm}0 goto statement
consider using __builtin_trap() or qualifying pointer with 'volatile'
use '|=' to turn this inequality comparison into an or-assignment
insert an explicit cast to silence this issue
initializing field %0 with default member initializer
%select{field|base class}0 %1 will be initialized after %select{field|base}2 %3
insert 'break;' to avoid fall-through
insert '%0;' to silence this warning
add an explicit instantiation declaration to suppress this warning if %q0 is explicitly instantiated in another translation unit
(skipping %0 context%s0 in backtrace; use -ftemplate-backtrace-limit=0 to see all)
%select{implicit|explicit}0 instantiation first required here
it delegates to
instance variable is declared here
%select{implicitly |}2captured%select{| by reference}3%select{%select{ due to use|}2 here| via initialization of lambda capture %0}1
lambda expression begins here
default capture by %select{value|reference}0
explicitly capture 'this'
implicit capture of lambda object due to conversion to block pointer here
capture %0 by %select{value|reference}1
%select{%select{reference|'std::initializer_list'}0 member|member with %select{reference|'std::initializer_list'}0 subobject}1 declared here
local declaration nearly matches
type of %ordinal0 parameter of local declaration does not match definition%diff{ ($ vs $)|}1,2
%select{via initialization of|binding reference}0 variable %select{%2 |}1here
the other acquisition of %0 '%1' is here
%0 acquired here
use '%0' for a bitwise operation
remove constant to silence this warning
add parentheses after the '!' to evaluate the %select{comparison|bitwise operator}0 first
add parentheses around left hand side expression to silence this warning
%select{decremented|incremented}0 here
change return type to 'int'
remove '_Noreturn'
member is declared here
member %0 declared here
member declaration does not match because it %select{is|is not}0 const qualified
member declaration nearly matches
type of %ordinal0 parameter of member declaration does not match definition%diff{ ($ vs $)|}1,2
member %0 first declared here
'->' applied to return value of the operator->() declared here
in %select{implicit|defaulted}0 %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 for %2 first required here
explicitly cast the argument to size_t to silence this warning
did you mean to compare the result of %0 instead?
method %0 declared here
compiler has implicitly changed method %0 return type
method %0 is used for the forward class
%0 begins here
function multiversioning caused by this declaration
target function has calling convention %1 (expected %0)
%0 declared here
add 'void' to the parameter list to turn an old-style K&R function declaration into a prototype
target function %select{is a member of different class%diff{ (expected $ but has $)|}1,2|has different number of parameters (expected %1 but has %2)|has type mismatch at %ordinal3 parameter%diff{ (expected $ but has $)|}1,2|has different return type%diff{ ($ expected but has $)|}1,2}0
target %select{constructor|destructor}0 is declared here
namespace %0 defined here
consider using vld1_%0%1() to initialize a vector from memory, or vcreate_%0%1() to initialize from an integer constant
consider using vld1q_%0%1() to initialize a vector from memory, or vcombine_%0%1(vcreate_%0%1(), vcreate_%0%1()) to initialize from integer constants
while checking the satisfaction of nested requirement requested here
%select{and|because}0 '%1' would be invalid: %2
%select{and|because}0 '%1' would be invalid
next field declaration is here
next %select{instance variable declaration|synthesized instance variable}0 is here
type is not C-compatible due to this %select{base class|default member initializer|lambda expression|friend declaration|member declaration}0
non-deducible template parameter %0
not-yet-instantiated member is declared here
%0 is not literal because it has base class %1 of non-literal type
%0 is not literal because it has data member %1 of %select{non-literal|volatile}3 type %2
incomplete type %0 is not a literal type
lambda closure types are non-literal types before C++17
%0 is not literal because it is not an aggregate and has no constexpr constructors other than copy or move constructors
%0 is not literal because its destructor is not constexpr
%0 is not literal because it has a non-trivial destructor
%0 is not literal because it has a user-provided destructor
%select{struct|interface|class}0 with virtual base %plural{1:class|:classes}1 is not a literal type
non-template declaration found by name lookup
%select{%2 has subobjects that are|%3 has type %2 that is}0 non-trivial to %select{default-initialize|destruct|copy}1
non-usual %0 declared here
non-templated declaration is here
because it has a default argument
because field %0 has an initializer
field is non-trivial to %select{copy|default-initialize}0
because type %0 has a virtual %select{member function|base class}1
because no %select{<<ERROR>>|constructor|constructor|assignment operator|assignment operator|<<ERROR>>}2 can be used to %select{<<ERROR>>|copy|move|copy|move|<<ERROR>>}2 %select{base class|field|an object}0 of type %3
because %select{base class of |field of |}0type %1 has no default constructor
because type %0 has a member with %select{no|no|__strong|__weak|__autoreleasing}1 ownership
because its parameter is %diff{of type $, not $|of the wrong type}2,3
because the function selected to %select{construct|copy|move|copy|move|destroy}2 %select{base class|field}0 of type %1 is not trivial
because %select{base class of |field of |}0type %1 has a user-provided %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2
because it is a variadic function
destructor for %0 is not trivial because it is virtual
%0 should be declared prior to the call site%select{| or in %2| or in an associated namespace of one of its arguments}1
add 'export' here if this is intended to be a module interface unit
%0 is not a structural type because it has a mutable non-static data member
%0 is not a structural type because it has a %select{non-static data member|base class}1 that is not public
%0 is not a structural type because it has a non-static data member of rvalue reference type
%0 is not a structural type because it has a %select{non-static data member|base class}1 of non-structural type %2
previous equal key is here
insert '%select{_Nonnull|_Nullable|_Null_unspecified}0' if the %select{pointer|block pointer|member pointer|array parameter}1 %select{should never be null|may be null|should not declare nullability}0
%0 specified here
use nullability type specifier %0 to affect the innermost pointer type of %1
%0 declared here
method marked as designated initializer of the class here
use 'isEqual:' instead
%select{first|second|third}0 parameter has unexpected type %1 (should be %2)
method returns unexpected type %0 (should be an object type)
add a super class to fix this problem
type parameter %0 declared here
method %0 that returns %1 declared here
%select{expected assignment expression|expected compound statement|expected exactly two expression statements|expected in right hand side of the first expression}0
%select{expected an expression statement|expected built-in assignment operator|expected expression of scalar type|expected lvalue expression}0
%select{expected an expression statement|expected built-in binary or unary operator|expected unary decrement/increment operation|expected expression of scalar type|expected assignment expression|expected built-in binary operator|expected one of '+', '*', '-', '/', '&', '^', '%|', '<<', or '>>' built-in operations|expected in right hand side of expression}0
as specified in %select{'collapse'|'ordered'|'collapse' and 'ordered'}0 clause%select{||s}0
conversion to %select{integral|enumeration}0 type %1 declared here
%select{|previous }0'hint' clause with value '%1'
%select{|previous }0directive with no 'hint' clause specified
explicit data sharing attribute requested here
explicit data sharing attribute, data mapping attribute, or is_device_ptr clause requested here
'%0' directive found here
jump exits scope of OpenMP structured block
defined as %0
memory order clause '%0' is specified here
implicitly determined as %0
expected length on mapping of 'this' array section expression to be '1'
expected lower bound on mapping of 'this' array section expression to be '0' or not specified
expected 'this' subscript expression on map clause to be 'this[0]'
loop step is expected to be %select{negative|positive}0 due to this condition
marked as 'declare variant' here
marked as 'device_type(%0)' here
%select{statement|directive}0 outside teams construct here
nested teams construct here
'nowait' clause is here
'ordered' clause%select{| with specified parameter}0
predefined trait '%0' used here
%select{static data member is predetermined as shared|variable with static storage duration is predetermined as shared|loop iteration variable is predetermined as private|loop iteration variable is predetermined as linear|loop iteration variable is predetermined as lastprivate|constant variable is predetermined as shared|global variable is predetermined as shared|non-shared variable in a task construct is predetermined as firstprivate|variable with automatic storage duration is predetermined as private}0%select{|; perhaps you forget to enclose 'omp %2' directive into a parallel or another task region?}1
previous allocator is specified here
'%0' clause is specified here
previous 'critical' region starts here
previous '%0' directive used here
'reduction' clause with 'inscan' modifier is used here
'%0' clause used here
previous clause with directive name modifier specified here
previously marked as task_reduction with different reduction operation
jump bypasses OpenMP structured block
previously referenced here
'%0' previously encountered here
%0 clause previously used here
predetermined as a firstprivate in a task construct here
previously declared '%0' here
use -foperator-arrow-depth=N to increase 'operator->' limit
'operator->' declared here produces an object of type %0
(skipping %0 'operator->'%s0 in backtrace)
parameter of overridden method is annotated with __attribute__((noescape))
overridden method is here
overridden virtual function is here
ambiguous candidate function with reversed arguments
ambiguity is between a regular call to this operator and a call with the argument order reversed
candidate function with non-reversed arguments
built-in candidate %0
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %3}1%select{| has different class%diff{ (expected $ but has $)|}5,6| has different number of parameters (expected %5 but has %6)| has type mismatch at %ordinal5 parameter%diff{ (expected $ but has $)|}6,7| has different return type%diff{ ($ expected but has $)|}5,6| has different qualifiers (expected %5 but found %6)| has different exception specification}4
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: requires%select{ at least| at most|}3 %4 argument%s4, but %5 %plural{1:was|:were}5 provided
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %select{requires at least|allows at most single|requires single}3 argument %4, but %plural{0:no|:%5}5 arguments were provided
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: cannot %select{pass pointer to|bind reference in}5 %3 %select{as a pointer to|to object in}5 %4 in %ordinal6 argument
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: 'this' object is in %3, but method expects object in %4
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: cannot implicitly convert argument %diff{of type $ to $|type to parameter type}3,4 for %select{%ordinal6 argument|object argument}5 under ARC
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: cannot %select{convert from|convert from|bind}3 %select{base class pointer|superclass|base class object of type}3 %4 to %select{derived class pointer|subclass|derived class reference}3 %5 for %ordinal6 argument
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: no known conversion %diff{from $ to $|from argument type to parameter type}3,4 for %select{%ordinal6 argument|object argument}5%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}7
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: cannot convert argument of incomplete type %diff{$ to $|to parameter type}3,4 for %select{%ordinal6 argument|object argument}5%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}7
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %ordinal5 argument (%3) would lose %select{const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}4 qualifier%select{||s||s|s|s}4
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: 'this' argument has type %3, but method is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}4
candidate template ignored: failed template argument deduction
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %select{%ordinal7|'this'}6 argument (%3) has %select{no|__weak|__strong}4 ownership, but parameter has %select{no|__weak|__strong}5 ownership
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %select{cannot convert initializer list|too few initializers in list|too many initializers in list}7 argument to %4
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: no overload of %4 matching %3 for %ordinal5 argument
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %select{%ordinal7|'this'}6 argument (%3) has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}4 ownership, but parameter has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}5 ownership
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %ordinal8 argument (%3) has %select{no ptrauth|%5}4 qualifier, but parameter has %select{no ptrauth|%7}6 qualifier
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: call to %select{__device__|__global__|__host__|__host__ __device__|invalid}3 function from %select{__device__|__global__|__host__|__host__ __device__|invalid}4 function
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: %ordinal5 argument (%3) would lose __unaligned qualifier
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: expects an %select{lvalue|rvalue}5 for %select{%ordinal4 argument|object argument}3
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 not viable: constraints not satisfied
candidate template ignored: deduced type %diff{$ of %select{|element of }4%ordinal0 parameter does not match adjusted type $ of %select{|element of }4argument|of %select{|element of }4%ordinal0 parameter does not match adjusted type of %select{|element of }4argument}1,2%3
candidate %select{function|function|function (with reversed parameter order)|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|function (the implicit 'operator==' for this 'operator<=>)'|inherited constructor}0%select{| template| %2}1 has been %select{explicitly made unavailable|explicitly deleted|implicitly deleted}3
candidate template ignored: disabled by %0%1
candidate disabled: %0
candidate template ignored: requirement '%0' was not satisfied%1
explicit %select{constructor|conversion function|deduction guide}0 is not a candidate%select{| (explicit specifier evaluates to true)}1
candidate template ignored: invalid explicitly-specified argument for template parameter %0
candidate template ignored: invalid explicitly-specified argument for %ordinal0 template parameter
candidate address cannot be taken because parameter %0 has pass_object_size attribute
candidate %select{constructor|template}0 ignored: instantiation %select{takes|would take}0 its own class type by value
candidate constructor ignored: cannot be used to construct an object in address space %0
candidate template ignored: couldn't infer template argument %0
candidate template ignored: deduced too few arguments for expanded pack %0; no argument for %ordinal1 expanded parameter in deduced argument pack %2
candidate template ignored: deduced %select{conflicting types|conflicting values|conflicting templates|packs of different lengths}0 for parameter %1%diff{ ($ vs. $)|}2,3
candidate template ignored: deduced values %diff{of conflicting types for parameter %0 (%1 of type $ vs. %3 of type $)|%1 and %3 of conflicting types for parameter %0}2,4
constructor from base class %0 inherited here
candidate %select{constructor|template}0 ignored: inherited constructor cannot be used to %select{copy|move}1 object
candidate template ignored: substitution exceeded maximum template instantiation depth
candidate template ignored: could not match %diff{$ against $|types}0,1
candidate template ignored: could not match %q0 against %q1
candidate template ignored: substitution failure%0%1
candidate template ignored: cannot deduce a type for %0 that would make %2 equal %1
candidate template ignored: constraints not satisfied%0
conversion candidate of type %0
remaining %0 candidate%s0 omitted; pass -fshow-overloads=all to show them
declared with index %0 here
passing argument to parameter here
while substituting into concept arguments here; substitution failures not allowed in concept arguments
passing argument to parameter %0 here
parameter pack %0 declared here
parameter of type %0 is declared here
%0 has been marked as being introduced in %1 %2 here, but the deployment target is %1 %3
partial specialization matches %0
explicit specialization declared here
inline function performs a conversion which is forbidden in ARC
pointer %0 declared here
pointer '%0' declared here
possible target for call
when applied to this declaration
'#pragma clang attribute push' regions ends here
previous '#pragma pack' directive that modifies alignment is here
did you intend to use '#pragma pack (pop)' instead of '#pragma pack()'?
place parentheses around the %0 expression to evaluate it first
place parentheses around the '?:' expression to evaluate it first
place parentheses around the '%0' expression to silence this warning
previous module declaration is here
previously defined here
module loaded from '%0'
previous declaration of class template partial specialization %0 is here
previously declared '%1' here
previous attribute is here
%0 is a builtin with type %1
%0 declared here
for type %0
previous explicit instantiation is here
previous initialization for field %0 is here
previous initialization %select{|with side effects }0is here%select{| (side effects will not occur at run time)}0
previous inheritance model specified here
previously defined as an alias for %0
previous declaration of %0 is here
previous template specialization is here
previous uuid specified here
did you mean to call the %0 method?
while substituting prior template arguments into %select{non-type|template}0 template parameter%1 %2
use __attribute__((visibility("hidden"))) attribute instead
private module fragment begins here
property %0 is declared %select{deprecated|unavailable|partial}1 here
property declared here
property synthesized here
jump bypasses setup of __block variable
jump bypasses initialization of variable with __attribute__((cleanup))
jump enters controlled statement of consteval if
jump enters controlled statement of constexpr if
jump bypasses initialization of catch block
jump bypasses initialization of try block
jump enters controlled statement of if available
jump bypasses initialization of variable of non-trivial C struct type
jump bypasses auto release push of @autoreleasepool block
jump bypasses initialization of @catch block
jump enters Objective-C fast enumeration loop
jump bypasses initialization of @finally block
jump bypasses initialization of __strong variable
jump bypasses initialization of @synchronized block
jump bypasses initialization of @try block
jump bypasses initialization of __weak variable
jump bypasses initialization of __except block
jump bypasses initialization of __finally block
jump bypasses initialization of __try block
jump bypasses variable initialization
jump bypasses initialization of non-POD variable
jump bypasses variable with a non-trivial destructor
jump bypasses initialization of variable length array
jump bypasses initialization of VLA type alias
jump bypasses initialization of VLA typedef
protocol is declared here
protocol %0 has no definition
protocol method is here
it could also be property %select{of type %1|without attribute '%1'|with attribute '%1'|with getter %1|with setter %1}0 declared here
previous __ptrauth authentication %select{mode|option}0
%0 is incomplete
cannot take an address of a virtual member function if its return or argument types are incomplete
qualified call to %0::%1 is treated as a virtual call to %1 due to -fapple-kext
unimplemented pure virtual method %0 in %1
add a variable name to declare a %0 initialized with %1
receiver is instance of class declared here
receiver expression is here
receiver is treated with 'id' type for purpose of method lookup
default argument used here
'%0' included multiple times, additional include site here
'%0' included multiple times, additional include site in header from module '%1'
%select{reference|pointer}0 member declared here
%select{const|reference}0 member %1 will never be initialized
%0 returns a reference
class template declared here
use 'static_cast' to adjust the pointer correctly while %select{upcasting|downcasting}0
%select{overridden|current}0 method is explicitly declared 'instancetype'%select{| and is expected to return an instance of its class type}0
%select{overridden|current}0 method is part of the '%select{|alloc|copy|init|mutableCopy|new|autorelease|dealloc|finalize|release|retain|retainCount|self}1' method family%select{| and is expected to return an instance of its class type}0
%select{class|instance}0 method %1 is assumed to return an instance of its receiver type (%2)
overridden method returns an instance of its class type
remove the call to '%0' since unsigned values cannot be negative
remove call to max function and unsigned zero argument
remove std::move call here
remove parentheses to silence this warning
use function '%0' instead
while rewriting comparison as call to 'operator<=>' declared here
repeated RISC-V 'interrupt' attribute is here
%select{function|method|block}0 has been explicitly marked sentinel here
declared here
if you supply your own aligned allocation functions, use -faligned-allocation to silence this diagnostic
%select{and|because}0 %1 does not satisfy %2
attempt to specialize declaration here
explicitly specialized declaration is here
declare 'static' if the %select{variable|function}0 is not intended to be used outside of this translation unit
use array indexing to silence this warning
change size argument to be the size of the destination
change the argument to be the free space in the destination buffer minus the terminating null byte
did you mean %select{struct|interface|class}0 here?
because substituted constraint expression is ill-formed%0
add a deduction guide to suppress this warning
class with specified objc_requires_property_definitions attribute is declared here
surrounding namespace with visibility attribute ends here
surrounding namespace with visibility attribute starts here
parenthesize the second argument to silence
%select{parenthesize the third argument|cast the second argument to 'int'}0 to silence
conversion to %select{integral|enumeration}0 type %1
tail call required by %0 attribute here
non-type template argument refers to %select{function|object}0 here
non-type template argument refers here
template argument refers to function template %0, here
class template %0 was explicitly specialized here
in instantiation of template class %q0 requested here
class template %0 was instantiated here
template is declared here
%select{function template|class template|variable template|type alias template|template template parameter}0 %1 declared here
while checking a default template argument used here
in instantiation of enumeration %q0 requested here
in instantiation of exception specification for %0 requested here
declared as a non-template here
in instantiation of member class %q0 requested here
in instantiation of member function %q0 requested here
template non-type parameter has a different type %0 in template argument
previous non-type template parameter with type %0 is here
in instantiation of default member initializer %q0 requested here
template parameter has a different kind in template argument
template parameter is declared here
%select{too few|too many}0 template parameters in template template argument
previous default template argument defined here
previous %select{template type|non-type template|template template}0 parameter%select{| pack}1 declared here
%select{template type|non-type template|template template}0 parameter%select{| pack}1 does not match %select{template type|non-type template|template template}0 parameter%select{ pack|}1 in template argument
previous template %select{declaration|template parameter}0 is here
use -ftemplate-depth=N to increase recursive template instantiation depth
in instantiation of requirement here
in instantiation of static data member %q0 requested here
in instantiation of template type alias %0 requested here
unnamed type used in template argument was declared here
in instantiation of variable template specialization %q0 requested here
thread warning in function %0
%select{destructor|deallocator}0 has a %select{non-throwing|implicit non-throwing}1 exception specification
function declared non-throwing here
required alignment of type %0 (%1 bytes) is larger than the supported alignment of C++ exception objects on this target (%2 bytes)
%select{alignment|size}0 of first field is %1 bits
%0 is incomplete
%select{and|because}0 '%1' would be invalid: %2
%select{and|because}0 '%1' would be invalid
%select{function %1 which returns const-qualified type %2 declared here|variable %1 declared const here|%select{non-|}1static data member %2 declared const here|member function %q1 is declared const here|%select{|nested }1data member %2 declared const here}0
%select{first|second}0 operand was implicitly converted to type %1
did you mean to use '.' instead?
expected %select{a pointer|an integer|a pointer to pointer}0 type
type is given name %0 for linkage purposes by this %select{typedef|alias}1 declaration
referenced member %0 is declared here
referenced %0 is declared here
enclose %0 in %select{an @available|a __builtin_available}1 check to silence this warning
remove the %select{'%1' if its condition|condition if it}0 is always %select{false|true}2
during field initialization in %select{this|the implicit default}0 constructor
uninitialized reference member is here
%select{uninitialized use occurs|variable is captured by block}0 here
%0 released here
%select{declaration|definition|default argument declared|explicit specialization declared|partial specialization declared}0 here is not %select{visible|reachable|reachable|reachable|reachable|reachable}0
silence by adding parentheses to mark code as explicitly dead
unguarded header; consider using #ifdef guards or #pragma once
use non-reference type %0
use reference type %0 to prevent copying
use 'thread_local' to allow this
use non-reference type %0 to make construction explicit or type %1 to prevent copying
used here
used in initialization here
implicit default constructor suppressed by user-declared constructor
%select{|previous }0using declaration
use %select{an alias declaration|a typedef declaration|a reference|a const variable|a constexpr variable}0 instead
conflicting declaration
target of using declaration
%select{|previous }0using-enum declaration
add 'typename' to treat this using declaration as a type
in value-initialization of type %0 here
variable %0 is declared here
variable %0 is%select{| explicitly}1 captured here
initialize the variable %0 to silence this warning
previous declaration of variable template partial specialization is here
%select{%1 is a virtual base class of base class %2 declared here|virtual base class %1 declared here}0
variable length arrays are not supported for the current target
which delegates to
detected while default synthesizing properties in class implementation
widen this field to %0 bits to store all values of %1
within field of type %0 declared here
replace expression with '%0' %select{|or use 'xor' instead of '^' }1to silence this warning
non-virtual member function marked '%0' hides virtual member %select{function|functions}1
only virtual member functions can be marked '%0'
absolute value function %0 given an argument of type %1 but has parameter of type %2 which may cause truncation of value
abstract class is marked '%select{final|sealed}0'
initializer for virtual base class %0 of abstract class %1 will never be used
access declarations are deprecated; use using declarations instead
type of property %0 does not match type of accessor %1
acquiring %0 '%1' requires negative capability '%2'
%0 '%1' must be acquired before '%2'
Cycle in acquired_before/after dependencies, starting with '%0'
operator '%0' has lower precedence than '%1'; '%1' will be evaluated first
reference cannot be bound to dereferenced null pointer in well-defined C++ code; pointer may be assumed to always convert to true
reference cannot be bound to dereferenced null pointer in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0
requested alignment is less than minimum alignment of %1 for type %0
%select{aligning a value|the result of checking whether a value is aligned}0 to 1 byte is %select{a no-op|always true}0
requested alignment is not a power of 2
use of function %0 is discouraged; there is no way to check for failure but failure may still occur, resulting in a possibly exploitable security vulnerability
second argument to __builtin_alloca_with_align is supposed to be in bits
multiple suitable %0 functions for %1; no 'operator delete' function will be invoked if initialization throws an exception
interrupt service routine should only call a function with attribute 'no_caller_saved_registers'
ARC %select{unused|__unsafe_unretained|__strong|__weak|__autoreleasing}0 lifetime qualifier on return type is ignored
assigning %select{array literal|dictionary literal|numeric literal|boxed expression|<should not happen>|block literal}0 to a weak %select{property|variable}1; object will be released after assignment
%select{destination for|source of}0 this %1 call is a pointer to ownership-qualified type %2
performSelector may cause a leak because its selector is unknown
weak %select{variable|property|implicit property|instance variable}0 %1 may be accessed multiple times in this %select{function|method|block|lambda}2 and may be unpredictably set to nil; assign to a strong variable to keep the object alive
weak %select{variable|property|implicit property|instance variable}0 %1 is accessed multiple times in this %select{function|method|block|lambda}2 but may be unpredictably set to nil; assign to a strong variable to keep the object alive
capturing %0 strongly in this block is likely to lead to a retain cycle
assigning retained object to %select{weak|unsafe_unretained}0 %select{property|variable}1; object will be released after assignment
assigning retained object to unsafe property; object will be released after assignment
method parameter of type %0 with no explicit ownership
argument value %0 is outside the valid range [%1, %2]
argument value %0 will result in undefined behaviour
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 %select{floating-point|enumeration}1 type %2 %plural{2:with|4:from|:and}0 %select{enumeration|floating-point}1 type %3
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 %select{floating-point|enumeration}1 type %2 %plural{2:with|4:from|:and}0 %select{enumeration|floating-point}1 type %3 is deprecated
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated
call to function without interrupt attribute could clobber interruptee's VFP registers
array index %0 is past the end of the array (which contains %1 element%s2)
array index %0 refers past the last possible element for an array in %1-bit address space containing %2-bit (%3-byte) elements (max possible %4 element%s5)
array index %0 is before the beginning of the array
ignored asm label '%0' on automatic variable
value size does not match register size specified by the constraint and modifier
requested alignment must be %0 bytes or smaller; maximum alignment assumed
unknown assumption string '%0'; attribute is potentially ignored
unknown assumption string '%0' may be misspelled; attribute is potentially ignored, did you mean '%1'?
the argument to %0 has side effects that will be discarded
%select{@available|__builtin_available}0 does not guard availability here; use if (%select{@available|__builtin_available}0) instead
specifying 'uuid' as an ATL attribute is deprecated; use __declspec instead
implicit use of sequentially-consistent atomic may incur stronger memory barriers than necessary
memory order argument to atomic operation is invalid
writable atomic property %0 cannot pair a synthesized %select{getter|setter}1 with a user defined %select{getter|setter}2
@protocol is using a forward protocol declaration of %0
'abi_tag' attribute on %select{non-inline|anonymous}0 namespace ignored
consumed analysis attribute is attached to member of class %0 which isn't marked as consumable
%0 attribute cannot be applied to this declaration
%0 attribute cannot be applied to a %select{function|method}1 with no parameters
%0 attribute argument must be a string literal specifying a Swift function name
%0 attribute for getter must not have any parameters besides 'self:'
%0 attribute has invalid identifier for the %select{base|context|parameter}1 name
%0 attribute is missing parameter label clause
%0 attribute cannot specify more than one 'self:' parameter
too %select{few|many}0 parameters in the signature specified by the %1 attribute (expected %2; got %3)
%0 attribute for setter must have one parameter for new value
%0 attribute for 'subscript' getter cannot have a 'newValue:' parameter
%0 attribute for 'subscript' must %select{be a getter or setter|have at least one parameter|have a 'self:' parameter}1
%0 attribute for 'subscript' setter cannot have multiple 'newValue:' parameters
%0 attribute for 'subscript' setter must have a 'newValue:' parameter
multiple identical address spaces specified for type
attribute %0 after definition is ignored
%0 attribute parameter %1 is negative and will be ignored
'cmse_nonsecure_entry' cannot be applied to functions with internal linkage
propagating dll attribute to %select{already instantiated|explicitly specialized}0 base class template without dll attribute is not supported
redeclaration of %q0 should not add %q1 attribute
explicit instantiation declaration should not be 'dllexport'
'dllexport' attribute ignored on explicit instantiation definition
definition of dllimport static field
attribute %0 has no effect when annotating an 'if %select{constexpr|consteval}1' statement
attribute %0 has no effect when annotating an infinite loop
%0 attribute can only be applied to instance variables or properties
%0 attribute ignored
%0 attribute ignored for field of type %1
%0 attribute ignored on inline function
%0 attribute ignored on a non-definition declaration
'%0' attribute cannot be specified on a definition
'%0' is not a valid builtin name for %1
'noescape' attribute ignored on parameter of non-pointer type %0
'nonnull' attribute applied to function with no pointer arguments
'nonnull' attribute when used on parameters takes no arguments
%0 attribute ignored when parsing type
'packed' attribute was ignored on bit-fields with single-byte alignment in older versions of GCC and Clang
%0 attribute only applies to a pointer or reference (%1 is invalid)
%0 attribute only applies to%select{| constant}1 pointer arguments
attribute declaration must precede definition
target does not support 'protected' visibility; using 'default'
%0 attribute only applies to return values that are pointers
%0 attribute only applies to return values that are pointers or references
#pragma %0(".drectve") has undefined behavior, use #pragma comment(linker, ...) instead
section attribute is specified on redeclared variable
'sentinel' attribute requires named arguments
'sentinel' attribute only supported for variadic %select{functions|blocks}0
%0 attribute argument not supported: %1
unknown visibility %0
attribute %0 cannot be applied to %select{functions|Objective-C method}1 without return value
__weak attribute cannot be specified on a field declaration
__weak attribute cannot be specified on an automatic variable when ARC is not enabled
%0 attribute only applies to %select{functions|unions|variables and functions|functions and methods|functions, methods and blocks|functions, methods, and parameters|variables|variables and fields|variables, data members and tag types|types and namespaces|variables, functions and classes|kernel functions|non-K&R-style functions}1
%0 attribute only applies to %1
conflicting attributes %0 are ignored
property is assumed atomic when auto-synthesizing the property
readonly IBOutlet property %0 when auto-synthesized may not work correctly with 'nib' loader
'auto' storage class specifier is redundant and incompatible with C++11
auto property synthesis will not synthesize property %0 declared in protocol %1
'auto' deduced as 'id' in declaration of %0
auto property synthesis will not synthesize property %0; it will be implemented by its superclass, use @dynamic to acknowledge intention
autosynthesized property %0 will use %select{|synthesized}1 instance variable %2, not existing instance variable %3
Fuchsia API Level prohibits specifying a minor or sub-minor version
ignoring availability attribute %select{on '+load' method|with constructor attribute|with destructor attribute}0
only 'unavailable' and 'deprecated' are supported for Swift availability
unknown platform %0 in availability macro
feature cannot be %select{introduced|deprecated|obsoleted}0 in %1 version %2 before it was %select{introduced|deprecated|obsoleted}3 in version %4; attribute ignored
%select{reinterpret_cast|C-style cast}0 from %1 to %2 changes address space of nested pointers
cast from function call of type %0 to non-matching type %1
receiver type %0 is not 'id' or interface pointer, consider casting it to 'id'
base class %0 is uninitialized when used here to access %q1
binding reference member %0 to stack allocated %select{variable|parameter}2 %1
binding dereferenced null pointer to reference has undefined behavior
bit-field %0 is not wide enough to store all enumerators of %1
width of bit-field %0 (%1 bits) exceeds the width of its type; value will be truncated to %2 bit%s2
use of bitwise '%0' with boolean operands
bitwise negation of a boolean expression%select{;| always evaluates to 'true';}0 did you mean logical negation?
'%0' within '%1'
block captures an autoreleasing out-parameter, which may result in use-after-free bugs
attribute %0 ignored, because it cannot be applied to omitted return type
'%0' qualifier on omitted return type %1 has no effect
switch condition has boolean value
braces around %select{scalar |}0initializer
'break' is bound to loop, GCC binds it to switch
'%0' will always overflow; destination buffer has size %1, but size argument is %2
use of unknown builtin %0
call to pure virtual member function %0 has undefined behavior; overrides of %0 in subclasses are not available in the %select{constructor|destructor}1 of %2
too %select{few|many}0 arguments in call to %1
%0 parameter marked 'called_once' is called twice
%select{|captured }1%0 parameter marked 'called_once' is never called
%0 parameter marked 'called_once' is never %select{used|called}1 when %select{taking true branch|taking false branch|handling this case|none of the cases applies|entering the loop|skipping the loop|taking one of the branches}2
cannot pass object of %select{non-POD|non-trivial}0 type %1 through variadic %select{function|block|method|constructor}2; call will abort at runtime
cannot resolve lock expression
empty case range specified
overflow converting case value to switch condition type (%0 to %1)
cast from %0 to %1 increases required alignment from %2 to %3
cast between incompatible calling conventions '%0' and '%1'; calls through this pointer may abort at runtime
cast %diff{from $ to $ |}0,1converts to incompatible function type
nonnull %select{function call|parameter}0 '%1' will evaluate to 'true' on first encounter
cast of type %0 to %1 is deprecated; use sel_getName instead
cast from %0 to %1 drops %select{const and volatile qualifiers|const qualifier|volatile qualifier}2
cast from %0 to %1 must have all intermediate pointers const qualified to be safe
category is implementing a method which will also be implemented by its primary class
function with no prototype cannot use the %0 calling convention
%0 calling convention is not supported %select{for this target|on variadic function|on constructor/destructor|on builtin function}1
cannot refer to a non-static member from the handler of a %select{constructor|destructor}0 function try block
input conversion stopped due to an input byte that does not belong to the input codeset UTF-8
%select{class|category}0 %1 does not conform to protocol%plural{1: %3|2:s %3 and %4|3:s %3, %4 and %5|:s %3, %4, %5, ...}2
class method %objcclass0 not found (return type defaults to 'id')
class method %objcclass0 not found (return type defaults to 'id'); did you mean %objcclass2?
GCC does not allow the 'cleanup' attribute argument to be anything other than a simple identifier
passing union across security boundary via %select{parameter %1|return value}0 may leak information
property follows Cocoa naming convention for returning 'owned' objects
collection expression type %0 may not respond to %1
possible misuse of comma operator here
%select{self-|array }0comparison always evaluates to %select{a constant|true|false|'std::strong_ordering::equal'}1
bitwise comparison always evaluates to %select{false|true}0
bitwise or with non-zero value always evaluates to true
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated
comparison of different enumeration types in switch statement%diff{ ($ and $)|}0,1
completion handler is called twice
%select{|captured }1completion handler is never called
completion handler is never %select{used|called}1 when %select{taking true branch|taking false branch|handling this case|none of the cases applies|entering the loop|skipping the loop|taking one of the branches}2
suspicious concatenation of string literals in an array initialization; did you mean to separate the elements with a comma?
concatenated NSString literal for an NSArray expression - possibly missing a comma
using the result of an assignment as a condition without parentheses
using the result of an assignment as a condition without parentheses
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2
%select{arithmetic between|bitwise operation between|comparison of|conditional expression between|compound assignment of}0 different enumeration types%diff{ ($ and $)|}1,2 is deprecated
conflicting distributed object modifiers on parameter type in declaration of %0
conflicting parameter types in declaration of %0%diff{: $ vs $|}1,2
conflicting distributed object modifiers on return type in declaration of %0
conflicting return type in declaration of %0%diff{: $ vs $|}1,2
conflicting variadic declaration of method and its implementation
conflicting distributed object modifiers on parameter type in implementation of %0
conflicting parameter types in implementation of %0%diff{: $ vs $|}1,2
conflicting distributed object modifiers on return type in implementation of %0
conflicting return type in implementation of %0%diff{: $ vs $|}1,2
conflicting variadic declaration of method and its implementation
consteval if is always true in an %select{unevaluated|immediate}0 context
conversion function converting %0 to its base class %1 will never be used
conversion function converting %0 to itself will never be used
conversion function converting %0 to %1 will never be used
return type of 'coroutine_handle<>::address should be 'void*' (have %0) in order to get capability with existing async C API.
%0 is required to declare the member 'unhandled_exception()' when exceptions are enabled
%select{destination for|source of|first operand of|second operand of}0 this %1 call is a pointer to record %2 that is not trivial to %select{primitive-default-initialize|primitive-copy}3
%0 may not intend to support class template argument deduction
constructor parameter %0 shadows the field %1 of %2
use of this statement in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
multiple return statements in constexpr function is incompatible with C++ standards before C++14
constexpr function with no return statements is incompatible with C++ standards before C++14
variable declaration in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
type definition in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
return type deduction is incompatible with C++ standards before C++14
generic lambdas are incompatible with C++11
initialized lambda captures are incompatible with C++ standards before C++14
variable templates are incompatible with C++ standards before C++14
attribute %0 ignored, because it cannot be applied to a type
class template argument deduction is incompatible with C++ standards before C++17%select{|; for compatibility, use explicit type name %1}0
'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior
decomposition declarations are incompatible with C++ standards before C++17
inline variables are incompatible with C++ standards before C++17
by value capture of '*this' is incompatible with C++ standards before C++17
non-type template parameters declared with %0 are incompatible with C++ standards before C++17
use of function template name with no prior function template declaration in function call with explicit template arguments is incompatible with C++ standards before C++20
use of this statement in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++20
constexpr constructor that does not initialize all members is incompatible with C++ standards before C++20
function try block in constexpr %select{function|constructor}0 is incompatible with C++ standards before C++20
uninitialized variable in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++20
constexpr union constructor that does not initialize any member is incompatible with C++ standards before C++20
virtual constexpr functions are incompatible with C++ standards before C++20
decomposition declaration declared %plural{1:'%1'|:with '%1' specifiers}0 is incompatible with C++ standards before C++20
defaulted comparison operators are incompatible with C++ standards before C++20
explicitly defaulting this %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 with a type different from the implicit type is incompatible with C++ standards before C++20
designated initializers are incompatible with C++ standards before C++20
explicit capture of 'this' with a capture default of '=' is incompatible with C++ standards before C++20
mangled name of %0 will change in C++17 due to non-throwing exception specification in function signature
initialized lambda capture packs are incompatible with C++ standards before C++20
%select{default construction|assignment}0 of lambda is incompatible with C++ standards before C++20
invoking a pointer to a 'const &' member function on an rvalue is incompatible with C++ standards before C++20
non-type template parameter of type %0 is incompatible with C++ standards before C++20
'char8_t' type specifier is incompatible with C++ standards before C++20
member using declaration naming a non-member enumerator is incompatible with C++ standards before C++20
member using declaration naming non-class '%0' enumerator is incompatible with C++ standards before C++20
using declaration naming a scoped enumerator is incompatible with C++ standards before C++20
aggregate initialization of type %0 with user-declared constructors is incompatible with C++20
'constinit' specifier is incompatible with C++ standards before C++20
type of UTF-8 string literal will change from array of const char to array of const char8_t in C++20
implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is incompatible with C++98
'auto' type specifier is incompatible with C++98
cast between pointer-to-function and pointer-to-object is incompatible with C++98
'constexpr' specifier is incompatible with C++98
constructor call from initializer list is incompatible with C++98
delegating constructors are incompatible with C++98
scalar initialized from empty initializer list is incompatible with C++98
initializing %0 from an empty initializer list is incompatible with C++98
befriending enumeration type %0 is incompatible with C++98
enumeration type in nested name specifier is incompatible with C++98
explicit conversion functions are incompatible with C++98
friend declaration naming a member of the declaring class is incompatible with C++98
jump from this goto statement to its label is incompatible with C++98
jump from this %select{indirect|asm}0 goto statement to one of its possible targets is incompatible with C++98
initialization of initializer_list object is incompatible with C++98
use of non-static data member %0 in an unevaluated context is incompatible with C++98
non-class friend type %0 is incompatible with C++98
%select{anonymous struct|union}0 member %1 with a non-trivial %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2 is incompatible with C++98
passing object of trivial but non-POD type %0 through variadic %select{function|block|method|constructor}1 is incompatible with C++98
reference initialized from initializer list is incompatible with C++98
substitution failure due to access control is incompatible with C++98
static data member %0 in union is incompatible with C++98
jump from switch statement to this case label is incompatible with C++98
%select{copying variable|copying parameter|initializing template parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}1 of type %2 when binding a reference to a temporary would %select{invoke an inaccessible constructor|find no viable constructor|find ambiguous constructors|invoke a deleted constructor}0 in C++98
redundant parentheses surrounding address non-type template argument are incompatible with C++98
local type %0 as template argument is incompatible with C++98
use of null pointer as non-type template argument is incompatible with C++98
non-type template argument referring to %select{function|object}0 %1 with internal linkage is incompatible with C++98
unnamed type as template argument is incompatible with C++98
use of 'template' keyword outside of a template is incompatible with C++98
default template arguments for a function template are incompatible with C++98
use of 'typename' outside of a template is incompatible with C++98
befriending %1 without '%select{struct|interface|union|class|enum}0' keyword is incompatible with C++98
'%0' type specifier is incompatible with C++98
inheriting constructors are incompatible with C++98
ms_struct may not produce Microsoft-compatible layouts for classes with base classes or virtual functions
object backing the pointer will be destroyed at the end of the full-expression
initializing pointer member %0 to point to a temporary object whose lifetime is shorter than the lifetime of the constructed object
%select{reference|backing array for 'std::initializer_list'}2 %select{|subobject of }1member %0 %select{binds to|is}2 a temporary object whose lifetime is shorter than the lifetime of the constructed object
%select{temporary %select{whose address is used as value of|%select{|implicitly }2bound to}4 %select{%select{|reference }4member of local variable|local %select{variable|reference}4}1|array backing %select{initializer list subobject of local variable|local initializer list}1}0 %select{%3 |}2will be destroyed at the end of the full-expression
-dealloc is being overridden in a category
declaration of %0 will not be visible outside of this function
declaration shadows a %select{local variable|variable in %2|static data member of %2|field of %2|typedef in %2|type alias in %2|structured binding}1
declaration shadows a %select{local variable|variable in %2|static data member of %2|field of %2|typedef in %2|type alias in %2|structured binding}1
ignoring __declspec(allocator) because the function return type %0 is not a pointer or reference type
attribute %0 is ignored, place it after "%select{class|struct|interface|union|enum}1" to apply attribute to type declaration
exception specifications of %select{return|argument}0 types differ
%plural{1:enumeration value %1 not explicitly handled in switch|2:enumeration values %1 and %2 not explicitly handled in switch|3:enumeration values %1, %2, and %3 not explicitly handled in switch|:%0 enumeration values not explicitly handled in switch: %1, %2, %3...}0
atomic by default property %0 has a user defined %select{getter|setter}1 (property should be marked 'atomic' if this is intended)
explicitly defaulted %select{<ERROR>|equality|three-way|equality|relational}0 comparison operator is implicitly deleted
explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 is implicitly deleted
constructor for %0 creates a delegation cycle
%select{delete|destructor}0 called on %1 that is abstract but has non-virtual destructor
'delete' applied to a pointer-to-array type %0 treated as 'delete[]'
deleting pointer to incomplete type %0 may cause undefined behavior
%select{delete|destructor}0 called on non-final %1 that has virtual functions but non-virtual destructor
comparison between two arrays is deprecated; to compare array addresses, use unary '+' to decay operands to pointers
%0 is deprecated
Current handling of vector bool and vector pixel types in this context are deprecated. The default behaviour will soon change to that implied by the '-altivec-compat=xl' option
'deprecated' attribute on anonymous namespace ignored
top-level comma expression in array subscript is deprecated
compound assignment to object of volatile-qualified type %0 is deprecated
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-declared copy %select{assignment operator|constructor}1
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-declared destructor
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-provided copy %select{assignment operator|constructor}1
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-provided destructor
implementing deprecated %select{method|class|category}0
%0 may be deprecated because the receiver type is unknown
%0 currently has no effect on a using declaration
%select{decrement|increment}0 of object of volatile-qualified type %1 is deprecated
%0 is deprecated: %1
out-of-line definition of constexpr static data member is redundant in C++17 and is deprecated
'register' storage class specifier is deprecated and incompatible with C++17
use of result of assignment to object of volatile-qualified type %0 is deprecated
conversion from string literal to %0 is deprecated
implicit capture of 'this' with a capture default of '=' is deprecated
volatile-qualified parameter type %0 is deprecated
volatile-qualified return type %0 is deprecated
volatile qualifier in structured binding declaration is deprecated
dereferencing %0; was declared with a 'noderef' type
dereferencing expression marked as 'noderef'
explicit call to +initialize results in duplicate call to +initialize
instance variable %0 is being directly accessed
explicit call to [super initialize] should only be in implementation of +initialize
body of cpu_dispatch function will be ignored
expression does not compute the number of elements in this array; element type is %0, not %1
'%0' will return the size of the pointer, not the array itself
%q0 redeclared inline; %1 attribute ignored
double precision constant requires %select{cl_khr_fp64|cl_khr_fp64 and __opencl_c_fp64}0, casting to single precision
acquiring %0 '%1' that is already held
attribute %0 is already applied with different arguments
attribute %0 is already applied
duplicate code segment specifiers
element %0 has been implicitly assigned %1 which another element has been assigned
multiple declarations of method %0 found and ignored
duplicate protocol definition of %0 is ignored
%select{destination for|source of|first operand of|second operand of}0 this %1 call is a pointer to %select{|class containing a }2dynamic class %3; vtable pointer will be %select{overwritten|copied|moved|compared}4
for loop has empty body
format string is empty
if statement has empty body
empty parentheses interpreted as a function declaration
range-based for loop has empty body
switch statement has empty body
while loop has empty body
converting the enum constant to a boolean
overflow in enumeration value
equality comparison with extraneous parentheses
exception of type %0 will be caught by earlier handler
declaration requires an exit-time destructor
expecting %0 '%1' to be held at start of each loop
expecting %0 '%1' to be held at the end of function
explicit instantiation of %0 that occurs after an explicit specialization has no effect
explicit instantiation cannot be 'inline'
explicit instantiation of %0 must occur at global scope
explicit instantiation of %0 not in a namespace enclosing %1
explicit instantiation of %q0 must occur in namespace %1
'extern' variable has an initializer
non-void coroutine does not return a value
non-void function does not return a value
non-void lambda does not return a value
function declared 'noreturn' should not return
field %0 is uninitialized when used here
class with destructor marked '%select{final|sealed}0' cannot be inherited from
array with '%select{__counted_by|__sized_by}0' and the argument of the attribute should be defined in the same translation unit
%select{|implicitly }0initializing field %1 of type %2 to NULL while '%3' is initialized with a value rarely succeeds
accessing elements of an unannotated incomplete array always fails at runtime
initializer %0 has a side effect; this may result in an unexpected result because the evaluation order of initialization list expressions is indeterminate
conversion from pointer type %0 to a %select{counted|sized}1 pointer type with an unrelated length rarely succeeds
enumeration value %0 is out of range of flags in enumeration type %1
magnitude of floating-point constant too large for type %0; maximum is %1
magnitude of floating-point constant too small for type %0; minimum is %1
comparing floating point with == or != is unsafe
'begin' and 'end' returning different types (%0 and %1) is incompatible with C++ standards before C++17
loop variable %0 %diff{of type $ binds to a temporary constructed from type $|binds to a temporary constructed from a different type}1,2
loop variable %0 creates a copy from type %1
loop variable %0 binds to a temporary value produced by a range of type %1
using '%%P' format specifier without precision
%select{values of type|enum values with underlying type}2 '%0' should not be used as format arguments; add an explicit cast to %1 instead
%select{values of type|enum values with underlying type}2 '%0' should not be used as format arguments; add an explicit cast to %1 instead
using '%0' format specifier, but argument has boolean value
format specifies type %0 but the argument has %select{type|underlying type}2 %1
format specifies type %0 but the argument has %select{type|underlying type}2 %1
format specifies type %0 but the argument has %select{type|underlying type}2 %1
using '%0' format specifier annotation outside of os_log()/os_trace()
invalid conversion specifier '%0'
invalid position specified for %select{field width|field precision}0
cannot mix positional and non-positional arguments in format string
'%0' %select{length modifier|conversion specifier}1 is not supported by ISO C
using length modifier '%0' with conversion specifier '%1' is not supported by ISO C
positional arguments are not supported by ISO C
format string is not a string literal
format string is not a string literal (potentially insecure)
length modifier '%0' results in undefined behavior or no effect with '%1' conversion specifier
format string should not be a wide string
position arguments in format strings start counting at 1 (not 0)
'%0' will always overflow; destination buffer has size %1, but format string expands to at least %2
'%0' will always overflow; destination buffer has size %1, but size argument is %2
'%0' size argument is too large; destination buffer has size %1, but size argument is %2
'%0' will always overflow; destination buffer has size %1, but the source string has length %2 (including NUL byte)
redefinition of forward class %0 of a typedef name of an object type is ignored
calling '%0' with a nonzero argument is unsafe
attempt to call %0 on non-heap %select{object %2|object: block expression|object: lambda-to-function-pointer conversion}1
cannot call function '%1' while %0 '%2' is held
calling function %1 requires holding %0 %select{'%2'|'%2' exclusively}3
calling function %1 requires holding %0 %select{'%2'|'%2' exclusively}3
calling function %0 requires negative capability '%1'
instantiation of function %q0 required here, but no definition is available
function definition inside an Objective-C container is deprecated
Objective-C GC does not allow weak variables on the stack
GCC does not allow the %0 attribute to be written on a type
declaration requires a global constructor
declaration requires a global destructor
'gnu_inline' attribute requires function to be marked 'inline', attribute ignored
'gnu_inline' attribute without 'extern' in C++ treated as externally available, this changed in Clang 10
arithmetic on a null pointer treated as a cast from integer to pointer is a GNU extension
passing variable %1 by reference requires holding %0 %select{'%2'|'%2' exclusively}3
%select{instance variable|property}2 with %0 attribute must be an object type (invalid %1)
IBOutletCollection properties should be copy/strong and not assign
assigning %select{field|instance variable}0 to itself
inheritance model ignored on %select{primary template|partial specialization}0
'objc_externally_retained' can only be applied to local variables %select{of retainable type|with strong ownership}0
implicit truncation from %2 to bit-field changes value from %0 to %1
initialization of pointer of type %0 to null from a constant boolean expression
implicit conversion discards imaginary component: %0 to %1
implicit conversion from constant value %0 to 'BOOL'; the only well defined values for 'BOOL' are YES and NO
implicit conversion from enumeration type %0 to different enumeration type %1
implicit conversion increases floating-point precision: %0 to %1
implicit conversion from %0 cannot fit within the range of values for %1
implicit conversion turns floating-point number into integer: %0 to %1
implicit conversion loses floating-point precision: %0 to %1
implicit conversion when assigning computation result loses floating-point precision: %0 to %1
implicit conversion from %0 to %1 changes value from %2 to %3
implicit conversion of out of range value from %0 to %1 is undefined
implicit conversion from %0 to %1 changes non-zero value from %2 to %3
implicit conversion from floating-point type %0 to 'BOOL'
implicit conversion turns floating-point number into bool: %0 to %1
higher order bits are zeroes after implicit conversion
implicit conversion from integral type %0 to 'BOOL'
implicit conversion loses integer precision: %0 to %1
implicit conversion from %0 to %1 may lose precision
implicit conversion from %2 to %3 changes value from %0 to %1
implicit conversion loses integer precision: %0 to %1
implicit conversion from %2 to %3 changes value from %0 to %1
implicit conversion changes signedness: %0 to %1
operand of ? changes signedness: %0 to %1
implicit conversion from %0 to %1 changes value from %2 to %3
implicit conversion of out of range value from %0 to %1 is undefined
the resulting value is always non-negative after implicit conversion
implicit conversion of %select{NULL|nullptr}0 constant to %1
implicit boolean conversion of Objective-C object literal always evaluates to true
address of%select{| function| array}0 '%1' will always evaluate to 'true'
implicit conversion turns string literal into bool: %0 to %1
implicit conversion turns vector to scalar: %0 to %1
class property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this class implementation
class property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category
default assign attribute on property %0 which implements NSCopying protocol is not appropriate with -fobjc-gc[-only]
property is assumed atomic by default
declaration of built-in function '%0' requires the declaration of the 'jmp_buf' type, commonly provided in the header <setjmp.h>.
declaration of built-in function '%1' requires inclusion of the header <%0>
implicit declaration of function %0
block implicitly retains 'self'; explicitly mention 'self' to indicate this is intended behavior
import %select{module|name}0 cannot be applied to a function with a definition
direct base %0 is inaccessible due to ambiguity:%1
target exception specification is not superset of source
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2
incompatible vector types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
encoding of %0 type is incomplete because %1 component has unknown encoding
%0 overrides a destructor but is not marked 'override'
%0 overrides a member function but is not marked 'override'
incrementing expression of type bool is deprecated and incompatible with C++17
'objc_independent_class' attribute may be put on a typedef only; attribute is ignored
indirection of non-volatile null pointer will be deleted, not trap
all paths through this function will call itself
constant expression evaluates to %0 which cannot be narrowed to type %1 in C++11
type %0 cannot be narrowed to %1 in initializer list in C++11
non-constant-expression cannot be narrowed from type %0 to %1 in initializer list in C++11
initializing pointer member %0 with the stack address of %select{variable|parameter}2 %1
%select{field|base class}0 %1 will be initialized after %select{field|base}2 %3
initializer %select{partially |}0overrides prior initialization of this subobject
inline namespace reopened as a non-inline namespace
instance method %objcinstance0 not found (return type defaults to 'id')
instance method %objcinstance0 not found (return type defaults to 'id'); did you mean %objcinstance2?
instance method %0 found instead of class method %1
cast to %1 from smaller integer type %0
cast to %1 from smaller integer type %0
converting the result of '?:' with integer constants to a boolean always evaluates to 'true'
'internal_linkage' attribute on a non-static local variable is ignored
%select{MIPS|MSP430|RISC-V}0 'interrupt' attribute only applies to functions that have %select{no parameters|a 'void' return type}1
invalid use of a cast in an inline asm context requiring an lvalue: accepted due to -fheinous-gnu-extensions, but clang may remove support for this in the future
invalid constructor from class in system header, should not be explicit
local declaration of %0 hides instance variable
declaration of instance variables in the interface is deprecated
jump out of __finally block has undefined behavior
ignored 'inline' attribute on kernel function %0
kernel function %0 is a member function; this may not be accepted by nvcc
converting the result of '<<' to a boolean always evaluates to %select{false|true}0
converting the result of '<<' to a boolean; did you mean '(%0) != 0'?
first argument to __builtin_load_member_function_pointer must have a type deriving from class where second argument was defined
second argument to __builtin_load_member_function_pointer must be the address of a C++ member function: for example '&Foo::func', not null
%0 '%1' is acquired exclusively and shared in the same scope
%0 '%1' is not held on every path through here
'&&' within '||'
use of logical '%0' with constant operand
logical not is only applied to the left hand side of this %select{comparison|bitwise operator}0
'%0' is bound to current loop, GCC binds it to the enclosing loop
state of variable '%0' must match at the entry and exit of loop
only one parameter on 'main' declaration
variable named 'main' with external linkage has undefined behavior
bool literal returned from 'main'
taking the max of %select{a value and unsigned zero|unsigned zero and a value}0 is always equal to the other value
capture host side class data member by this pointer in device or host device lambda function may result in invalid memory access if this pointer is not accessible on device side
non-void coroutine does not return a value in all control paths
non-void function does not return a value in all control paths
non-void lambda does not return a value in all control paths
variable %0 may be uninitialized when %select{used here|captured by block}1
%0 may not respond to %1
extra qualification on member %0
size argument in %0 call is a comparison
messaging unqualified id
'mig_server_routine' attribute only applies to routines that return a kern_return_t
availability does not match previous declaration
%select{|overriding }4method %select{introduced after|deprecated before|obsoleted before}0 %select{the protocol method it implements|overridden method}4 on %1 (%2 vs. %3)
%select{|overriding }1method cannot be unavailable on %0 when %select{the protocol method it implements|its overridden method}1 is available
'delete%select{|[]}0' applied to a pointer that was allocated with 'new%select{[]|}0'; did you mean 'delete%select{[]|}0'?
import %select{module|name}0 (%1) does not match the import %select{module|name}0 (%2) of the previous declaration
nullability specifier %0 conflicts with existing specifier %1
%select{codeseg|section}0 does not match previous declaration
use of OSPtr outside of a return type
suggest braces around initialization of subobject
%plural{1:enumeration value %1 not handled in switch|2:enumeration values %1 and %2 not handled in switch|3:enumeration values %1, %2, and %3 not handled in switch|:%0 enumeration values not handled in switch: %1, %2, %3...}0
no case matching constant switch condition '%0'
auto property synthesis is synthesizing property not explicitly synthesized
missing field %0 initializer
format string missing
method has no return type specified; defaults to 'id'
no previous prototype for function %0
%0 availability is ignored without a valid 'SDKSettings.json' in the SDK
missing sentinel in %select{function call|method dispatch|block call}0
no previous extern declaration for non-static variable %0
comparison of integers of different signs: %0 and %1
modifying constructor parameter %0 that shadows a field of %1
multiple methods named %0 found
several methods with selector %0 of mismatched types are found for the @selector expression
CPU list contains duplicate entries; attribute ignored
extra qualification on member %0
vector initializers are not compatible with NEON intrinsics in big endian mode
array backing %select{initializer list subobject of the allocated object|the allocated initializer list}0 will be destroyed at the end of the full-expression
temporary bound to reference member of allocated object will be destroyed at the end of the full-expression
auto property synthesis will not synthesize property %0 because it is 'readwrite' but it will be synthesized 'readonly' via another property
auto property synthesis will not synthesize property %0 because it cannot share an ivar with another synthesized property
%select{struct|interface|union|class|enum}0 %1 does not declare any constructor to initialize its non-modifiable members
dynamic_cast will not work since RTTI data is disabled by %select{-fno-rtti-data|/GR-}0
typeid will not work since RTTI data is disabled by %select{-fno-rtti-data|/GR-}0
enums in the Microsoft ABI are signed integers by default; consider giving the enum %0 an unsigned underlying type to make this code portable
%0 '%1' is still held at the end of function
'nocf_check' attribute ignored; use -fcf-protection to enable the attribute
'noderef' can only be used on an array or pointer type
casting to dereferenceable pointer removes 'noderef' attribute
%0 attribute is ignored because there exists no call expression inside the statement
conflicting parameter types in declaration of %0: %1 vs %2
conflicting parameter types in implementation of %0: %1 vs %2
conflicting return type in declaration of %0: %1 vs %2
conflicting return type in implementation of %0: %1 vs %2
expression which evaluates to zero treated as a null pointer constant of type %0
cannot pass %select{non-POD|non-trivial}0 object of type %1 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
%0 has virtual functions but non-virtual destructor
comparison of nonnull %select{function call|parameter}0 '%1' %select{not |}2equal to a null pointer is '%select{true|false}2' on first encounter
function %0 declared 'noreturn' should not return
not a Doxygen trailing comment
use of unary operator that may be intended as compound assignment (%0=)
not enough variable arguments in %0 declaration to fit a sentinel
case value not in enumerated type %0
integer constant not in range of enumerated type %0
requesting an alignment of 16 bytes or greater for struct members is not binary compatible with AIX XL 16.1 and older
'nothrow' attribute conflicts with exception specification; attribute ignored
%0 attribute only applies to %select{Objective-C object|pointer|pointer-to-CF-pointer|pointer/reference-to-OSObject-pointer}1 parameters
%0 attribute only applies to %select{functions|methods|properties}1 that return %select{an Objective-C object|a pointer|a non-retainable pointer}2
overriding method has mismatched ns_consumed attribute on its parameter
duplicate key in dictionary literal
'NSObject' attribute may be put on a typedef only; attribute is ignored
overriding method has mismatched ns_returns_%select{not_retained|retained}0 attributes
null passed to a callee that requires a non-null argument
use of NULL in arithmetic operation
comparison between NULL and non-pointer %select{(%1 and NULL)|(NULL and %1)}0
comparison of %select{address of|function|array}0 '%1' %select{not |}2equal to a null pointer is always %select{true|false}2
synthesized setter %0 for null_resettable property %1 does not handle nil
null returned from %select{function|method}0 that requires a non-null return value
nullability specifier %0 cannot be applied to non-pointer type %1; did you mean to apply the specifier to the %select{pointer|block pointer|member pointer|function pointer|member function pointer}2?
inferring '_Nonnull' for pointer type within %select{array|reference}0 is deprecated
implicit conversion from nullable pointer %0 to non-nullable pointer type %1
%select{pointer|block pointer|member pointer}0 is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified)
array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified)
string is ill-formed as UTF-8 and will become a null %0 when boxed
using %0 directive in %select{NSString|CFString}1 which is being passed as a formatting argument to the formatting %select{method|CFfunction}2
adding %0 to %1 might cause circular dependency in container
object of type %0 is not compatible with %select{array element type|dictionary key type|dictionary value type}1 %2
designated initializer missing a 'super' call to a designated initializer of the super class
designated initializer invoked a non-designated initializer
designated initializer should only invoke a designated initializer on 'super'
%0 attribute isn't implemented by this Objective-C runtime
direct attribute on property %0 ignored (not implemented by this Objective-C runtime)
method override for the designated initializer of the superclass %objcinstance0 not found
%0 bridges to %1, not %2
%0 cannot bridge to %1
assignment to Objective-C's isa is deprecated in favor of object_setClass()
direct access to Objective-C's isa is deprecated in favor of object_getClass()
direct comparison of %select{an array literal|a dictionary literal|a numeric literal|a boxed expression|}0 has undefined behavior
'+load' is called at app startup and can increase launch time; consider using '+initialize' instead
method possibly missing a [super %0] call
cannot catch an exception thrown with @throw in C++ in the non-unified exception model
bitmasking for introspection of Objective-C object pointers is strongly discouraged
bitmasking for introspection of Objective-C object pointers is strongly discouraged
objc_precise_lifetime is not meaningful for %select{__unsafe_unretained|__autoreleasing}0 objects
'assign' property of object type may become a dangling reference; consider using 'unsafe_unretained'
'copy' attribute must be specified for the block property when -fobjc-gc-only is specified
default property attribute 'assign' not appropriate for object
no 'assign', 'retain', or 'copy' attribute is specified - 'assign' is assumed
retain'ed block property does not copy the block - use copy attribute instead
setter cannot be specified for a readonly property
using %0 with a literal is redundant
parameterized class %0 already conforms to the protocols listed; did you forget a '*'?
%0 attribute cannot be applied to %select{methods in protocols|dealloc}1
class %0 defined without specifying a base class
convenience initializer missing a 'self' call to another initializer
convenience initializer should not invoke an initializer on 'super'
direct comparison of a string literal has undefined behavior
'objc_direct' attribute is ignored as 'objc_suppress_direct' attribute is applied
'objc_suppress_direct' attribute is ignored
%0 is incompatible with selectors that return a %select{struct|union|vector}1 type
the meaning of __weak has changed in manual reference-counting
%0 was declared with __weak, but __weak is ignored in files using manual reference counting
ignoring __weak in file using manual reference counting
use of old-style cast
aligned clause will be ignored because the requested alignment is not a power of 2
allocator with the 'thread' trait access has unspecified behavior on '%0' directive
declaration marked as declare target after first use, it may lead to incorrect results
'#pragma omp declare variant' cannot be applied to the function that was defined already; the original function might be used
'#pragma omp declare variant' cannot be applied for function after first usage; the original function might be used
variant function in '#pragma omp declare variant' is itself marked as '#pragma omp declare variant'
score expressions in the OpenMP context selector need to be constant; %0 is not and will be ignored
zero linear step (%0 %select{|and other variables in clause }1should probably be const)
OpenMP loop iteration variable cannot have more than 64 bits size and will be narrowed
OpenMP only allows an ordered construct with the simd clause nested in a simd construct
Type %0 is not trivially copyable and not guaranteed to be mapped correctly
declaration is not declared in any declare target region
array section %select{lower bound|length}0 is of type 'char'
allocate directive specifies %select{default|'%1'}0 allocator while previously used %select{default|'%3'}2
class implementation may not have super class
%0 attribute is deprecated and ignored in %1
passing non-generic address space pointer to %0 may cause dynamic conversion affecting performance
%0 should not return a null pointer unless it is declared 'throw()'%select{| or 'noexcept'}1
os_log() '%%n' format specifier is not allowed
result of comparison of %select{constant %0|true|false}1 with %select{expression of type %2|boolean expression}3 is always %4
type %0 requires %1 bytes of alignment and the default allocator only guarantees %2 bytes
overloaded operator %select{>>|<<}0 has higher precedence than comparison operator
%q0 hides overloaded virtual %select{function|functions}1
parameter of overriding method should be annotated with __attribute__((noescape))
passing %0-byte aligned argument to %1-byte aligned parameter %2%select{| of %4}3 may result in an unaligned pointer access
parameter '%0' not in expected state when the function returns: expected '%1', observed '%2'
argument not in expected state; expected '%0', observed '%1'
%0 is a large (%1 bytes) pass-by-value argument; pass it by reference instead ?
parentheses were disambiguated as a function declaration
parentheses were disambiguated as redundant parentheses around declaration of variable named %0
passing object of class type %0 through variadic %select{function|block|method|constructor}1%select{|; did you mean to call '%3'?}2
moving a temporary object prevents copy elision
moving a local object in a return statement prevents copy elision
taking the absolute value of %select{pointer|function|array}0 type %1 is suspicious
performing pointer arithmetic on a null pointer has undefined behavior%select{| if the offset is nonzero}0
comparing a pointer to a null character constant; did you mean to compare to %select{NULL|(void *)0}0?
dereference of type %1 that was reinterpret_cast from type %0 has undefined behavior
performing pointer subtraction with a null pointer %select{has|may have}0 undefined behavior
cast to smaller integer type %1 from %0
cast to smaller integer type %1 from %0
@selector expression formed with potentially direct selector %0
#pragma align(packed) may not be compatible with objects generated with AIX XL C/C++
unused attribute %0 in '#pragma clang attribute push' region
#pragma options align=reset failed: %0
expected #pragma pack parameter to be '1', '2', '4', '8', or '16'
the current #pragma pack alignment value is modified in the included file
unterminated '#pragma pack (push, ...)' at end of file
non-default #pragma pack value changes the alignment of struct or union members in the included file
specifying both a name and alignment to 'pop' is undefined
value of #pragma pack(show) == %0
#pragma %0(pop, ...) failed: %1
only variables can be arguments to '#pragma unused'
undeclared variable %0 used as an argument for '#pragma unused'
operator '?:' has lower precedence than '%0'; '%0' will be evaluated first
%0 has lower precedence than %1; %1 will be evaluated first
operator '?:' has lower precedence than '%0'; '%0' will be evaluated first
object format flags cannot be used with '%0' conversion specifier
'%select{*|.*}0' specified field %select{width|precision}0 is missing a matching 'int' argument
field %select{width|precision}0 should have type %1, but argument has type %2
data argument not used by format string
missing object format flag
format string contains '\0' within the string body
format string is not null-terminated
flag '%0' is ignored when flag '%1' is present
incomplete format specifier
more '%%' conversions than data arguments
'%0' is not a valid object format flag
flag '%0' results in undefined behavior with '%1' conversion specifier
%select{field width|precision}0 used with '%1' conversion specifier, resulting in undefined behavior
data argument position '%0' exceeds the number of data arguments (%1)
use of __private_extern__ on a declaration may not produce external symbol private to the linkage unit and is deprecated
property %0 not found on object of type %1; did you mean to access property %2?
property attribute in class extension does not match the primary class
'%1' attribute on property %0 does not match the property inherited from %2
property declared as returning non-retained objects; getter returning retained objects
primary property declaration is implicitly strong while redeclaration in class extension is weak
property access is using %0 method which is deprecated
getter name mismatch between property redeclaration (%1) and its original declaration (%0)
property type %0 is incompatible with type %1 inherited from %2
property %select{of type %1|with attribute '%1'|without attribute '%1'|with getter %1|with setter %1}0 was selected for synthesis
passing the value that %1 points to by reference requires holding %0 %select{'%2'|'%2' exclusively}3
the pointer incremented by %0 refers past the end of the array (that contains %1 element%s2)
the pointer incremented by %0 refers past the last possible element for an array in %1-bit address space containing %2-bit (%3-byte) elements (max possible %4 element%s5)
the pointer decremented by %0 refers before the beginning of the array
'objc_independent_class' attribute may be put on Objective-C object pointer type only; attribute is ignored
authenticating a null pointer will almost certainly trap
signing a null pointer will yield a non-null pointer
'%0' type qualifier%s1 on return type %plural{1:has|:have}1 no effect
attribute 'readonly' of property %0 restricts attribute 'readwrite' of property inherited from %1
receiver %0 is a forward class and corresponding @interface may not exist
receiver type %0 for instance message is a forward declaration
incompatible redeclaration of library function %0
%q0 redeclared without %1 attribute: previous %1 ignored
%q0 redeclared without 'dllimport' attribute: 'dllexport' attribute added
#pragma redefine_extname is applicable to external C declarations only; not applied to %select{function|variable}0 %1
redefinition of %0 will not be visible outside of this function
variable %0 is %select{decremented|incremented}1 both in the loop header and in the loop body
redundant move in return statement
redundant parentheses surrounding declarator
reference %0 is not yet bound to a value when used here
'register' storage specifier on @catch parameter will be ignored
'reinterpret_cast' %select{from|to}3 class %0 %select{to|from}3 its %select{virtual base|base at non-zero offset}2 %1 behaves differently from 'static_cast'
method is expected to return an instance of its class type %diff{$, but is declared to return $|, but is declared to return different type}0,1
protocol method is expected to return an instance of the implementing class, but is declared to return %0
%select{remainder|division}0 by zero is undefined
'require_constant_initialization' attribute added after initialization of variable
identifier %0 is reserved because %select{<ERROR>|it starts with '_' at global scope|it starts with '_' and has C language linkage|it starts with '__'|it starts with '_' followed by a capital letter|it contains '__'}1
returning address of label, which is local
returning %select{address of|reference to}0 local temporary object
%select{address of|reference to}0 stack memory associated with %select{local variable|parameter}2 %1 returned
manual %0 of an OSSharedPtr is error-prone
non-void %select{function|method}1 %0 should return a value
return state set for an unconsumable type '%0'
return value not in expected state; expected '%0', observed '%1'
return value of %0 is a large (%1 bytes) pass-by-value object; pass it by reference instead ?
%0 has C-linkage specified, but returns user-defined type %1 which is incompatible with C
%0 has C-linkage specified, but returns incomplete type %1 which could be incompatible with C
repeated RISC-V 'interrupt' attribute
instance method %0 is being used on 'Class' which is not in the root class
sampler initializer has invalid %0 bits
zero field width in scanf format string is unused
no closing ']' for '%%[' in scanf format string
second argument to 'va_start' is not the last named parameter
second argument to 'va_arg' is of promotable type %0; this va_arg has undefined behavior because arguments will be promoted to %1
second argument to 'va_arg' is of non-POD type %0
second argument to 'va_arg' is of ARC ownership-qualified type %0
explicitly assigning value of variable of type %0 to itself
explicitly assigning value of variable of type %0 to itself
explicitly moving variable of type %0 to itself
property %0 requires method %1 to be defined - use @synthesize, @dynamic or provide a method implementation in this class implementation
property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category
%select{parameter|non-static data member}3 %0 %select{|of %1 }3shadows member inherited from type %2
shift count >= width of type
shifting a negative signed value is undefined
shift count is negative
signed shift result (%0) requires %1 bits to represent, but %2 only has %3 bits
signed shift result (%0) sets the sign bit of the shift expression's type (%1) and becomes negative
expression with side effects will be evaluated despite being used as an operand to 'typeid'
expression with side effects has no effect in an unevaluated context
signed bit-field %0 needs an extra bit to represent the largest positive enumerators of %1
sizeof on pointer operation will return size of %0 instead of %1
sizeof on array function parameter will return size of %0 instead of %1
'%0' call operates on objects of type %1 while the size is based on a different type %2
did you mean to %select{dereference the argument to 'sizeof' (and multiply it by the number of elements)|remove the addressof in the argument to 'sizeof' (and multiply it by the number of elements)|provide an explicit length}0?
argument to 'sizeof' in %0 call is the same pointer type %1 as the %select{destination|source}2; expected %3 or an explicit length
initializer order does not match the declaration order
variable %0 is %select{used|captured}1 uninitialized whenever %select{'%3' condition is %select{true|false}4|'%3' loop %select{is entered|exits because its condition is false}4|'%3' loop %select{condition is true|exits because its condition is false}4|switch %3 is taken|its declaration is reached|%3 is called}2
'%0' ignored on this declaration
array argument is too small; %select{contains %0 elements|is of size %0}2, callee requires at least %1
non-constant static local variable in inline function may be different in different files
'main' should not be declared static
static variable %0 is suspiciously used within its own initialization
multiple methods named %0 found
@selector expression formed with potentially direct selector %0
this %select{function declaration is not|block declaration is not|old-style function definition is not preceded by}0 a prototype
adding %0 to a string pointer does not append to the string
adding %0 to a string does not append to the string
result of comparison against %select{a string literal|@encode}0 is unspecified (use an explicit string comparison function instead)
size argument in %0 call appears to be size of the source; expected the size of the destination
the value of the size argument in 'strncat' is too large, might lead to a buffer overflow
size argument in 'strncat' call appears to be size of the source
the value of the size argument to 'strncat' is wrong
%2 defined as %select{a struct|an interface|a class}0%select{| template}1 here but previously declared as %select{a struct|an interface|a class}3%select{| template}1; this is valid, but may result in linker errors under the Microsoft C++ ABI
%select{struct|interface|class}0%select{| template}1 %2 was previously declared as a %select{struct|interface|class}3%select{| template}1; this is valid, but may result in linker errors under the Microsoft C++ ABI
subtraction of pointers to type %0 of zero size has undefined behavior
array subscript is of type 'char'
%0 overrides a destructor but is not marked 'override'
%0 overrides a member function but is not marked 'override'
block could be declared with attribute 'noreturn'
%select{function|method}0 %1 could be declared with attribute 'noreturn'
field %0 can overwrite instance variable %1 with variable sized type %2 in superclass %3
'size' argument to bzero is '0'
%select{'size' argument to memset is '0'|setting buffer to a 'sizeof' expression}0; did you mean to transpose the last two arguments?
'swift_newtype' attribute may be put on a typedef only; attribute is ignored
template parameter of a function template with the 'sycl_kernel' attribute cannot be a non-type template parameter
function template with 'sycl_kernel' attribute must have a single parameter
'sycl_kernel' attribute only applies to a function template with at least two template parameters
function template with 'sycl_kernel' attribute must have a 'void' return type
the semantics of this intrinsic changed with GCC version 4.4 - the newer semantics are provided here
taking address of packed member %0 of class or structure %q1 may result in an unaligned pointer value
result of comparison of %select{constant %0|true|false}1 with %select{expression of type %2|boolean expression}3 is always %4
result of comparison of constant %0 with expression of type 'BOOL' is always %1, as the only well defined values for 'BOOL' are YES and NO
result of comparison of %select{%4|%1-bit %select{signed|unsigned}2 value}0 %3 %select{%1-bit %select{signed|unsigned}2 value|%4}0 is always %5
result of comparison %select{%3|%1}0 %2 %select{%1|%3}0 is always %4
overlapping comparisons always evaluate to %select{false|true}0
calling %0 is a violation of trusted computing base '%1'
non-type template argument with value '%0' converted to '%1' for unsigned template parameter of type %2
non-type template argument value '%0' truncated to '%1' for template parameter of type %2
exported templates are unsupported
dependent nested name specifier '%0' for friend template declaration is not supported; ignoring this friend declaration
dependent nested name specifier '%0' for friend class declaration is not supported; turning off access control for %1
extraneous template parameter list in template specialization
tentative array definition assumed to have one element
'this' pointer cannot be null in well-defined C++ code; pointer may be assumed to always convert to true
'this' pointer cannot be null in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0
%0 attribute requires arguments whose type is annotated with 'capability' attribute; type here is %1
%0 attribute can only be applied in a context annotated with 'capability' attribute
%0 only applies to pointer types; type here is %1
ignoring %0 attribute because its argument is invalid
%0 attribute without capability arguments refers to 'this', but %1 isn't annotated with 'capability' or 'scoped_lockable' attribute
%0 attribute without capability arguments can only be applied to non-static methods of a class
thread safety beta warning
thread safety verbose warning
%0 has a non-throwing exception specification but can still throw
underaligned exception object thrown
%select{alignment|size}0 of field %1 (%2 bits) does not match the %select{alignment|size}0 of the first field in transparent union; transparent_union attribute ignored
first field of a transparent union cannot have %select{floating point|vector}0 type %1; transparent_union attribute ignored
transparent_union attribute can only be applied to a union definition; attribute ignored
transparent union definition must contain at least one field; transparent_union attribute ignored
'%0' only applies to %select{function|pointer|Objective-C object or block pointer}1 types; type here is %2
specified %0 type tag requires a null pointer
argument type %0 doesn't match specified %1 type tag %select{that requires %3|}2
this type tag was not designed to be used with this function
'%0' qualifier on function type %1 has no effect
'%0' qualifier on function type %1 has unspecified behavior
ordered comparison of function pointers (%0 and %1)
'%0' qualifier on reference type %1 has no effect
vector operands do not have the same elements sizes (%0 and %1)
unannotated fall-through between switch labels
unannotated fall-through between switch labels in partly-annotated function
implementing unavailable method
%0 may be unavailable because the receiver type is unknown
undeclared selector %0
undeclared selector %0; did you mean %1?
cannot find interface declaration for %0
cannot find interface declaration for %0; did you mean %1?
method definition for %0 not found
cannot find protocol definition for %0
inline function %q0 is not defined
%select{function|variable}0 %q1 has internal linkage but is not defined
reinterpret_cast from %0 to %1 has undefined behavior
%0 is only available on %1 %2 or newer
%0 is only available on %1 %2 or newer
__declspec attribute %0 is not supported
method %0 in protocol %1 not implemented
no method with selector %0 is implemented in this translation unit
block pointer variable %0 is %select{uninitialized|null}1 when captured by block
variable %0 is uninitialized when passed as a const reference argument here
variable %0 is uninitialized when used within its own initialization
reference %0 is not yet bound to a value when used within its own initialization
variable %0 is uninitialized when %select{used here|captured by block}1
isa trait '%0' is not known to the current target; verify the spelling or consider restricting the context selector with the 'arch' selector further
unknown sanitizer '%0' ignored
releasing %0 '%1' that was not held
releasing %0 '%1' using %select{shared|exclusive}2 access, expected %select{shared|exclusive}3 access
%select{function|variable}0 %1 is not needed and will not be emitted
member function %0 is not needed and will not be emitted
'static' function %0 declared in header file should be declared 'static inline'
code will never be executed
'break' will never be executed
default label in switch which covers all enumeration values
fallthrough annotation in unreachable code
loop will run at most once (loop increment never executed)
'return' will never be executed
multiple unsequenced modifications to %0
unsequenced modification and access to %0
taking the absolute value of unsigned type %0 has no effect
result of comparison of %select{%3|unsigned expression}0 %2 %select{unsigned expression|%3}0 is always %4
assigning value of signed enum type %1 to unsigned bit-field %0; negative enumerators of enum %1 will be converted to positive values
result of comparison of %select{%3|char expression}0 %2 %select{char expression|%3}0 is always %4, since char is interpreted as unsigned
result of comparison of %select{%3|unsigned enum expression}0 %2 %select{unsigned enum expression|%3}0 is always %4
sorry, lifetime extension of %select{temporary|backing array of initializer list}0 created by aggregate initialization using default member initializer is not supported; lifetime of %select{temporary|backing array}0 will end at the end of the full-expression
%select{unsupported|duplicate|unknown}0%select{| architecture| tune CPU}1 '%2' in the 'target' attribute string; 'target' attribute ignored
parameter %0 set but not used
variable %0 set but not used
ignoring return value of function declared with %0 attribute
left operand of comma operator has no effect
%select{equality|inequality|relational|three-way}0 comparison result unused
unused variable %0
ignoring temporary created by a constructor declared with %0 attribute
ignoring temporary created by a constructor declared with %0 attribute: %1
container access result unused - container access should not be used for side effects
unused exception parameter %0
expression result unused
unused function %0
unused label %0
lambda capture %0 is not %select{used|required to be captured for this use}1
unused %select{typedef|type alias}0 %1
unused member function %0
unused parameter %0
private field %0 is not used
ivar %0 which backs the property is not referenced in this property's accessor
property access result unused - getters should not be used for side effects
ignoring return value of function declared with %0 attribute
ignoring return value of function declared with %0 attribute: %1
unused %select{function|variable}0 template %1
unused variable %0
expression result unused; should this cast be to 'void'?
expression result unused; assign into a variable to force a volatile load
invalid invocation of method '%0' on object '%1' while it is in the '%2' state
invalid invocation of method '%0' on a temporary object while it is in the '%1' state
%0 was marked unused but was used
user-defined literal suffixes not starting with '_' are reserved%select{; no literal will invoke this operator|}0
using namespace directive in global context in header
passing %select{an object that undergoes default argument promotion|an object of reference type|a parameter declared with the 'register' keyword}0 to 'va_start' has undefined behavior
%select{reading|writing}1 the value pointed to by %0 requires holding %select{any mutex|any mutex exclusively}1
%select{reading|writing}3 the value pointed to by %1 requires holding %0 %select{'%2'|'%2' exclusively}3
%select{reading|writing}3 the value pointed to by %1 requires holding %0 %select{'%2'|'%2' exclusively}3
instantiation of variable %q0 required here, but no definition is available
%select{reading|writing}1 variable %0 requires holding %select{any mutex|any mutex exclusively}1
%select{reading|writing}3 variable %1 requires holding %0 %select{'%2'|'%2' exclusively}3
%select{reading|writing}3 variable %1 requires holding %0 %select{'%2'|'%2' exclusively}3
field %0 with variable sized type %1 is not visible to subclasses and can conflict with their instance variables
variable%select{s| %1|s %1 and %2|s %1, %2, and %3|s %1, %2, %3, and %4}0 used in loop condition not modified in loop body
defaulted move assignment operator of %0 will move assign virtual base class %1 multiple times
Use of 'long' with '__vector' is deprecated
specifying vector types with the 'mode' attribute is deprecated; use the 'vector_size' attribute instead
variable length array used
cast to smaller integer type %1 from %0
cast to smaller integer type %1 from %0
dynamic exception specifications with types are currently ignored in wasm
weak identifier %0 never declared
an already-declared variable is made a weak_import declaration %0
explicit template instantiation %0 will emit a vtable in every translation unit
%0 has no out-of-line virtual method definitions; its vtable will be emitted in every translation unit
using %select{integer|floating point|complex}1 absolute value function %0 when argument is of %select{integer|floating point|complex}2 type
result of '%0' is %1; did you mean exponentiation?
result of '%0' is %1; did you mean '%2'?
result of '%0' is %1; did you mean '%2' (%3)?
zero as null pointer constant
%select{|empty }0%select{struct|union}1 has size 0 in C, %select{size 1|non-zero size}2 in C++
%select{|empty }0%select{struct|union}1 has size 0 in C, %select{size 1|non-zero size}2 in C++
%0 is only available on %1 %2 and %3 %4 or newer
the selected methods are already implemented
method %0 cannot be renamed because it overrides a method declared in a system framework
no %select{implementation file|@implementation declaration}0 for the selected %select{declaration|@interface}0 %1; please add one and run the refactoring action again
the selected code is not a part of a function's / method's body
the selected expression can't be extracted
the selected expression is too simple to extract
refactoring action can't be initiated without a selection
the provided selection does not overlap with the AST nodes of interest
there is no symbol at the given location
%0 is a builtin function that cannot be renamed
%0 is declared in a %1 file; rename can be initiated in a %1 file only
%0 cannot be renamed because it is declared in a system header
@!!C$$
''**G
[)1?[GO[[[
!$'*-0369<?BEHKNQTWZ]
(=T`mz
GGGGG=GGGG7$!GGG@C*
555555
555555
55--
55555555555
-55---
-555
55$$
5555**5
&2&&&/2/&&
 #&
A&5P;
_DRnZnUnnnnnnx
 %.8
OO#OO0@
CCCCC
!.;K
=Hnnnw
bMB7,!
$*09?D
;>AD
$*06?
    
()^$|*+?.[]\{}
.@ii
z>}}
^jc()^$|+?[]\{}
HHHA
111111
$$$$/$>
                                                                                
FsBB
!<<DVi
!<<DVi
[0;30m
[0;31m
[0;32m
[0;33m
[0;34m
[0;35m
[0;36m
[0;37m
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;40m
[0;41m
[0;42m
[0;43m
[0;44m
[0;45m
[0;46m
[0;47m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
LLVM_DISABLE_SYMBOLIZATION
LLVM_SYMBOLIZER_PATH
jjjj
.objc_class_name_
_OBJC_CLASS_$_
_OBJC_METACLASS_$_
_OBJC_EHTYPE_$_
_OBJC_IVAR_$_
/Root/
warning
error
[_]?Private\.h
base
variant
skip-external
missing-api
no-cascading-diags
compare-private-headers
diag-depth
allowlist
diag-style
target
sysroot
includes
frameworks
path
null
NULL
true
false
01234567
0123456789abcdefABCDEF
0123456789
Architectures: 
file doesn't have architecture '
invalid input file
malformed file
tapi-configuration-v1
sdk-platform
sdk-version
sdk-root
language
include-paths
framework-paths
public-dylibs
macros
projects
invalid macro
name
install-name
public-header
private-header
use-overlay
umbrella
pre-includes
excludes
language-std
iosmac
iosmac-umbrella-only
root-mask
sdk-mask
use-split-header-dir
usr/include
usr/local/include
System/Library/Frameworks/
System/Library/PrivateFrameworks/
Kernel.framework
IOKit.framework
Headers
PrivateHeaders
Modules
Frameworks
Versions
System/iOSSupport
System/DriverKit
Library/Apple
/System/Cryptexes/OS
/System/Cryptexes/OS/System/iOSSupport
System/Library
PrivateFrameworks
.framework
usr/lib
usr/local/lib
System/Library/Frameworks
System/Library/PrivateFrameworks
usr/lib/swift
/Versions/
<input>
<unknown>
-action=
Set SDKDB generation option: 'scan-interface', 'gen-public', 'gen-private' or 'all'
scan-interface,gen-public,gen-private,all
-alias_list
Specify the path to a file containing a list of symbol aliases
<path>
--allow-arch-merges
Allow merges of the same architecture.
-allowable_client
Restricts what can link against the dynamic library being created
-arch
Specify the architecture to build for
<architecture>
-bridgeos_version_min
-compatibility_version
Specifies the compatibility version number of the library
--config-file=
Read configuration from <file>
<file>
-current_version
Specifies the current version number of the library
--delete-input-file
Delete input file on success
--delete-private-frameworks
Delete private frameworks from the SDK
--demangle
Demangle C++ symbols when printing warnings and errors
--diagnostics-file=
Write diagnostics to <file>
-dylibs-only
Scan only Frameworks and UNIX libs
-dynamiclib
Define macro
--exclude-private-header=
-exclude-private-header
Exclude private header from parsing
<glob>
--exclude-project-header=
-exclude-project-header
Exclude project header from parsing
--exclude-public-header=
-exclude-public-header
Exclude public header from parsing
--extra-private-header=
-extra-private-header
Add additional private header location for parsing
--extra-project-header=
-extra-project-header
Add additional project header location for parsing
--extra-public-header=
-extra-public-header
Add additional public header location for parsing
--extract
Extract the specified <architecture>.
-fapplication-extension
Restrict code to those available for App Extensions
-ferror-limit
Set the maximum number of errors to emit before stopping (0 = no limit).
--filelist=
Specifies the <path> to a file that contains a list of headers to parse.
-filelist
--filetype=
Specify the output file type (tbd-v1, tbd-v2, tbd-v3, or tbd-v4)
-fmodule-map-file=
Load this module map file
-fmodule-name=
Specify the name of the module to build
<name>
-fmodules-cache-path=
Specify the module cache path
<directory>
-fmodules-validate-system-headers
Validate the system headers that a module depends on when loading the module
-fmodules
Enable the 'modules' language feature
-fno-application-extension
-fno-rtti
Disable generation of rtti information
-fobjc-arc
Synthesize retain and release calls for Objective-C pointers
-fobjc-weak
Enable ARC-style weak references in Objective-C
-fprofile-instr-generate
Add extra symbols for InstallAPI that are created by code coverage.
-frtti
-fvisibility=
Set the default symbol visibility for all global declarations
Add directory to framework include search path
-help-hidden
-help
Display this help message
-iframework
Add directory to SYSTEM framework search path
--infer-include-paths
Infer include paths based on the provided/found header files
--info
List the architectures in the input file
--inline-private-frameworks
Inline private frameworks
-install_name
Sets an internal "install path" (LC_ID_DYLIB) in a dynamic library
--installapi-sdkdb-path
installapi SDKDB input directory (default to output directory)
-ios_simulator_version_min
-ios_version_min
-iquote
Add directory to QUOTE include search path
-isysroot
Set the system root directory (usually /)
<dir>
-isystem
Add directory to SYSTEM include search path
-ivfsoverlay
Overlay the virtual filesystem described by file over the real file system
Add directory to include search path
--list-symbols
List the exported symbols.
--load-snapshot=
Specify the snapshot input directory
Add directory to the library search path
-macosx_version_min
-mbridgeos-version-min=
--merge
Merge the input files.
-mios-simulator-version-min=
-mios-version-min=
-miphoneos-version-min=
-mmacos-version-min=
-mmacosx-version-min=
-mtargetos=
Set the deployment target to be the specified platform and OS version
-mtvos-simulator-version-min=
-mtvos-version-min=
-mwatchos-simulator-version-min=
-mwatchos-version-min=
--no-infer-include-paths
Don't infer include paths based on the provided/found header files
-no-private-headers
Disable private header scanning
-no-public-headers
Disable public header scanning
--no-uuids
Don't record the UUIDs from the library in the text-based stub file
--no-verify-api-skip-external-headers
--no-verify-api
-ObjC++
Treat source input files as Objective-C++ inputs
-ObjC
Treat source input files as Objective-C inputs
--output
Write output to <file>
--partial-sdkdb-list
Partial SDKDB filelist path
<filelist>
--print-after=
-private-headers
Enable private header scanning
--private-umbrella-header=
-private-umbrella-header
Specify the private umbrella header location
--product-name=
Specify the product name
-public-headers
Enable public header scanning
--public-sdk-content-root
Path to PublicSDKContentRoot
<PublicSDKContentRoot>
--public-umbrella-header=
-public-umbrella-header
Specify the public umbrella header location
-reexport-l
Re-export the specified library
-reexport_framework
Re-export the specified framework
-reexport_install_name
Re-export the specified internal "install path" (LC_ID_DYLIB)
-reexport_library
--remove
Remove the specified <architecture>.
--runtime-root
Path to RuntimeRoot
<RuntimeRoot>
--sdk-content-root
Path to SDKContentRoot
<SDKContentRoot>
-sdkdb-output-dir
Write SDKDB output to path
--sdk
-serialize-diagnostics
Serialize compiler diagnostics to a file
--set-installapi-flag
Set the installapi flag in the text-based stub file
--snapshot-dir=
Specify the snapshot output directory
--snapshot-use-own-resource-dir
Use our own resource directory
--snapshot
Force creation of a snapshot
-std=
Language standard to compile for
-swift-installapi-interface
Ignore symbols in verification against headers from specified file path for swift generated file.
--target-variant=
Generate code for the given target variant
-target-variant
--target=
Generate code for the given target
-target
-tvos_simulator_version_min
-tvos_version_min
-umbrella
Specifies that the dylib being linked is re-exported through an umbrella framework of the specified name.
<framework_name>
Undefine macro
--verify-against=
-verify-against
Verify the specified dynamic library/framework against the headers
--verify-api-error-as-warning
Emit API Verification errors as warnings
--verify-api-skip-external-headers
Skip external headers for API verification of zippered frameworks
--verify-api
Verify the API of zippered frameworks
--verify-arch
Verify that the specified <architecture> is present in the file.
--verify-mode=
Specify the severity and extend of the validation. Valid modes are ErrorsOnly, ErrorsAndWarnings, and Pedantic.
-version
Display the version
Verbose output, show scan content and driver options
-watchos_simulator_version_min
-watchos_version_min
-Xarch_
-Xparser
Pass <arg> to the clang parser
<arg>
-Xplatform_
Treat subsequent input files as having type <language>
<language>
/org.llvm.clang.tapi/ModuleCache
frontend
public:
triple:
private:
project:
Public
Private
Project
{0:2}
error: 
Parsing 
"type": "framework",
"name": "
"architecture": "
"location": "
"umbrella_header": "
"umbrella_framework": "
"platform": "
"os_version": "
"apis": [
"type": 
"variable"
"function"
Headers/
"header_file": "
"availability": {
"introduced": "
"obsoleted": null,
"obsoleted": "
"unavailable": 
"type": "objectivec_class",
(([^/]*(/|$))*)
([^/]*)
not a glob
()^$|+.[]\{}
.dylib
re-exported library
/include/
.framework/
re-exported framework
could not read alias list
alias_list
reexport_framework
could not generate coverage symbols
code_coverage
.tbd
.partial.sdkdb
invalid alias list
AppleInternal
LinkerAutoZipperList.txt
tapi
unable to create temporary input file
libcodecoverage
dylib
unable to create temporary output file
cannot open input file
static int foo() { return 0; }
-target
-dynamiclib
-fprofile-instr-generate
-fcoverage-mapping
-isysroot
stderr
unable to create temporary stderr file
unable to read file
'clang' invocation failed:
_TAPI_TEST_CLANG
clang
cannot find 'clang' in toolchain directory. Looking for 'clang' in PATH instead.
unable to find 'clang' in PATH
binary file
tapi option
TAPI_SNAPSHOT_CREATE
TAPI_USE_CC_LOG_PATH
CC_LOG_DIAGNOSTICS_FILE
.TAPI_SNAPSHOT
TAPI_SNAPSHOT_DIR
LD_NO_ENCRYPT
LD_APPLICATION_EXTENSION_SAFE
SDKROOT
/usr/lib
/usr/local/lib
/Library/Frameworks
/System/Library/Frameworks
unknown-apple-
objective-c
objective-c++
TAPI_DELETE_INPUT_FILE
TAPI_OUTPUT_FILE_TYPE
env TAPI_OUTPUT_FILE_TYPE
TAPI_API_VERIFY_ERROR_AS_WARNING
EquivalentTypes
XBS_TAPI_SDKDB_OUTPUT_PATH
LD_TRACE_FILE
SDKDB
RC_PROJECT_COMPILATION_PLATFORM
diag.plist
MACOSX_DEPLOYMENT_TARGET
IPHONEOS_DEPLOYMENT_TARGET
TVOS_DEPLOYMENT_TARGET
WATCHOS_DEPLOYMENT_TARGET
BRIDGEOS_DEPLOYMENT_TARGET
DRIVERKIT_DEPLOYMENT_TARGET
14.0.0
local
config
.conf
RC_XBS
RC_BUILDIT
archive
stubify
installapi
reexport
sdkdb
generate-api-tests
api-verify
extractapi
OVERVIEW: 
USAGE: tapi [--version][--help]
       tapi <command> [<args>]
Commands:
  archive     Merge or thin text-based stub files
  stubify     Create a text-based stub file from a library
  installapi  Create a text-based stub file by scanning the header files
  reexport    Create a linker reexport file by scanning the header files
Experimental Commands:
  sdkdb         Generate SDKDB from SDKContent
  api-verify    Compare interfaces between frameworks
  extractapi    Extract API information by scanning the header files
See 'tapi <command> --help' to read more about a specific command.
File does not exist
linker.reexport
TAPI_SDKDB_FORCE_ERROR
RC_MIN_VERSION_OPTION
RC_ProjectName
RuntimeRoot
--runtime-root
SDKContentRoot
--sdk-content-root
SDKDBAction
--action=
public.sdkdb
private.sdkdb
partial.sdkdb
Failed to scan header interface
binary file doesn't exist
RC_ARCHS
apple
13.0
macabi
19.0
simulator
-Xclang
-diagnostic-log-file
arm64
i386
x86_64
machine
include
System
Library
/System/iOSSupport/usr/include
/System/iOSSupport/usr/local/include
/System/iOSSupport/System/Library/Frameworks
/System/iOSSupport/System/Library/PrivateFrameworks
/System/DriverKit/usr/include
/System/DriverKit/usr/local/include
/System/DriverKit/System/Library/Frameworks
tapi_includes
-%%%%%%
vfsoverlay
yaml
cannot create vfs file
_TAPI_TEST_SWIFT_API_EXTRACT
swift-api-extract
cannot find 'swift-api-extract' in toolchain directory. Looking for 'swift-api-extract' in PATH instead.
unable to find 'swift-api-extract' in PATH
swiftapi
json
swift-api-extract: 
'swift-api-extract' invocation failed:
cannot open swift-api-extract output file
API is not a JSON Object
ModuleCache
-sdk
-module-name
-vfsoverlay
-module-cache-path
iOSSupport
version
Unsupported version
output path is empty
output path is not a directory
/include
.map
/System/Library/PrivateFrameworks
/usr/lib/
framework
/tmp/tapi-snapshot
: Too many levels of symbolic links
Files
RunScript
.yaml
PLEASE submit a bug report to http://developer.apple.com/bugreporter/ and include the crash backtrace and snapshot.
********************************************************
PLEASE ATTACH THE FOLLOWING DIRECTORY TO THE BUG REPORT:
********************************************************
Snapshot written to 
no such runscript or snapshot directory
tapi-version
command
working-directory
raw-args
driver-options
archive-options
linker-options
frontend-options
diagnostics-options
tapi-options
directories
file-mapping
symlink-mapping
driver
print-version
print-help
print-help-hidden
inputs
output-path
vfs-overlay-paths
clang-executable-path
action
architecture
unknown
show-info
extract-architecture
remove-architecture
verify-architecture
merge
architectures
current-version
compatibility-version
is-dynamic-library
allowable-clients
reexported-libraries
reexported-libraries2
reexported-library-paths
reexported-frameworks
is-application-extension-safe
alias-list
platform
os-version
targets
target-variants
isysroot
system-framework-paths-with-platform
system-framework-paths
system-include-paths
quoted-include-paths
library-paths
use-rtti
use-no-rtti
visibility
enable-modules
module-cache-path
validate-system-headers
use-objc-arc
use-objc-weak
clang-extra-args
clang-resource-path
serialize-diagnostics-file
error-limit
file-list
public-umbrella-header-path
private-umbrella-header-path
extra-public-headers
extra-private-headers
extra-project-headers
exclude-public-headers
exclude-private-headers
exclude-project-headers
verify-against
verification-mode
generate-code-coverage-symbols
demangle
delete-input-file
inline-private-frameworks
delete-private-frameworks
record-uuids
set-installapi-flag
infer-include-paths
verify-api
verify-api-skip-external-headers
verify-api-error-as-warning
invalid
errors-only
errors-and-warnings
pedantic
ignore-objc-class
bridge-objc-class
Apple 
TAPI version 14.0.0
 (tapi-1400.0.11)
/usr/include/
/([^/]+)\.framework/
Block.h
Darwin
MacTypes.h
libkern
compression.h
Compression
dispatch
Dispatch
mach-o
MachO
launch.h
objc
ObjectiveC
simd
tgmath.h
dns_sd.h
dnssd
EndpointSecurity
notify.h
DarwinNotify
notify_keys.h
xcselect.h
xcselect
ProExtension
AppleArchive
__super
template
static
const
volatile
restrict
#define
extern
enum
@interface
@property
class
direct
nonatomic
atomic
assign
retain
strong
copy
weak
unsafe_unretained
readwrite
readonly
getter
setter
null_resettable
@protocol
typedef
struct
tapi_include_headers
 Headers:
-fsyntax-only
-resource-dir
-std=
-frtti
-fno-rtti
-fvisibility=
-fmodules
-fmodules-cache-path=
-fmodules-validate-system-headers
-fmodule-name=
-fmodule-map-file=
-fobjc-arc
-fobjc-weak
-D__clang_tapi__=1
-iframework
-isystem
-iframework /System/Library/PrivateFrameworks
-stdlib=libc++
.cpp
/* the next header is configured with pre-includes. It might be include-what-you-use violation. Can it be removed? */
#include 
#import 
-xc++
-xobjective-c
-xobjective-c++
clang Invocation:
/tmp/tapi_include_headers-%%%%%%
Cannot create temporary file for clang reproducer
,sh}
Note: a reproducer of the error is written to: "
Note: the reproducer is intended to help users to debug the issue under a more familiar context using clang.
Note: the paths in the reproducer might need to be adjusted.
-iquote
%0: '%1'
allowable clients do not match: '%0' (provided) vs '%1' (found)
allowable client missing from %0: '%1'
ApplicationExtensionSafe flag does not match: '%0' (provided) vs '%1' (found)
architectures do not match: '%0' (provided) vs '%1' (found)
symbol '%0' doesn't have the same availability information: '%1' (header) vs '%2' (found)
cannot convert '%0' to a text-based stub file
cannot create directory '%0': %1
cannot find %0: %1
cannot find any public (usr/include) or private (usr/local/include) header directory: '%0'
cannot find re-exported library '%0'
cannot generate SDKDB: '%0'
cannot generate text-based stub file
cannot open file '%0': %1
cannot read file '%0': %1
cannot write file '%0': %1
compatibility_version does not match: '%0' (provided) vs '%1' (found)
current_version does not match: '%0' (provided) vs '%1' (found)
dynamic library symbol '%0' is thread local, but header symbol '%1' is not
dynamic library symbol '%0' is weak defined, but header symbol '%1' is not
expected only one input file
cannot infer '%0', please specify with option '%1'
headers don't have symbol '%0'
header symbol '%0' is thread local, but dynamic library symbol '%1' is not
header symbol '%0' is weak defined, but dynamic library symbol '%1' is not
inlining is not supported for output file type '%0'
install_name does not match: '%0' (provided) vs '%1' (found)
invalid compatibility version '%0'
invalid current version '%0'
invalid input file: '%0'
invalid platform name '%0'
cannot parse allowlist file %0: %1
invalid virtual filesystem overlay file '%0'
library doesn't have symbol '%0'
unable to merge '%0': '%1'
no such sysroot directory: '%0'
virtual filesystem overlay file '%0' not found
 more than one framework/dynamic library found
no architecture specified: add -arch <architecture>
no deployment target specified
input '%0' is not a directory
no framework/dynamic library found
no install name specified: add -install_name <path>
no matching target found for target variant '%0'
no output file specified
no such %select{public|private|project}1 header file: '%0'
no such symbols file: '%0'
no such %select{public|private|project}1 umbrella header file: '%0'
no target specified: add --target=<triple>
flat namespace libraries are not supported
input '%0' is not a dynamic library
dynamic library '%0' doesn't have all the required architectures
only one architecture can be specified '%0'
only one target can be specified
parent umbrella does not match: '%0' (provided) vs '%1' (found)
parsing of all headers disabled
platform does not match: '%0' (provided) vs '%1' (found)
%0 in '%1' does not match '%2'
re-exported libraries do not match: '%0' (provided) vs '%1' (found)
re-exported library missing from %0: '%1'
regression for %select{enum|enum constant|typedef}0 '%1' for target '%2': %3
regression for API '%0' in '%1' for target '%2': %3
API info missing binary info for target '%0'
missing dylib '%0' for target '%1'
missing %select{enum|enum constant|typedef}0 '%1' for target '%2'
missing %select{symbol|global variable|function}0 '%1' in '%2' for target '%3'
missing objc %select{class|category|protocol}0 '%1' in '%2' for target '%3'
missing target '%0'
regression for ObjC %select{class|category|protocol}0 '%1' in '%2' for target '%3': %4
regression for ObjC selector '%0' in %select{class|category|protocol}1 '%2' in '%3' for target '%4': %5
architecture '%0' is not supported: '%1'
environment '%0' is not supported: '%1'
unsupported file type
os '%0' is not supported: '%1'
vendor '%0' is not supported: '%1'
%0 has base class %1 here
base class %0 has access specifier '%select{public|protected|private|none}1' here
%0 has %1 base class(es) here
base class %0 %select{is not|is}1 virtual here
declaration has name %0 here
enum has type %0 here
enumerator %0 with value %1 here
%0 has field %1 here
field %0 %select{is not|is}1 bit field here
bit field %0 has width %1 here
%0 has no corresponding field here
field has name %0 here
field %0 has type %1 here
interface %0 has inconsistent super class here
interface %0 has type %1 here
interface %0 has super class %1 here
%0 has ivar %1 here
%0 has method %1 here
%0 has no corresponding ivar here
%0 has no corresponding method here
no corresponding parameter here
%0 has no corresponding property here
%0 has no corresponding protocol here
interface %0 has no corresponding super class here
parameter has type %0 here
%0 has property %1 here
property %0 has attribute here
property %0 has type %1 here
%0 conforms to protocol %1
return value has type %0 here
for target %0
%0 is defined to type %1 here
variable %0 has type %1 here
%0 is missing from target %1 but required for target %2
%0 has incompatible definitions
Auto zippering was requested, output will be zippered
ignoring broken symlink '%0'
ignoring the Versions directory within framework because it contains no parsable files: '%0'
could not generate information about '%0' for 32bit injection.
glob '%0' did not match any header file
no such excluded %select{public|private}0 header file: '%1'
no such %select{public|private}0 header file: '%1'
no such %select{public|private}0 pre-include header file: '%1'
no such %select{public|private}0 umbrella header file: '%1'
platform specific option for deployment target '%0' is deprecated, use -mtargetos.
reexport_install_name is deprecated, use reexport_framework reexport_l or reexport_library
conflicting availability info for %0: %1 is not the same as %2
conflicting declaration for exported symbol '%0'
conflict ObjC protocol definition '%0' inside SDKDB
conflicting superclass for objc class '%0': '%1' is not the same as '%2'
duplicated enum '%0' inside SDKDB
duplicated symbol '%0' inside SDKDB
duplicated ObjC category '%0(%1)' inside SDKDB
duplicated ObjC interface '%0' inside SDKDB
duplicated typedef '%0' inside SDKDB
updating '%0': %1 in %2
missing symbol '%0' from binary interface
missing ObjC category '%0(%1)' from binary interface
missing ObjC interface '%0' from binary interface
missing ObjC method '%0' in %select{class|category|protocol}1 '%2' from binary interface
missing ObjC property '%0' in %select{class|category|protocol}1 '%2' from binary interface
missing ObjC protocol '%0' from binary interface
new API %select{enum|enum constant|typedef}0 '%1' for target '%2'
new API %select{symbol|global variable|function}0 '%1' in '%2' for target '%3'
new API objc %select{class|category|protocol}0 '%1' in '%2' for target '%3'
new API ObjC selector '%0' in %select{class|category|protocol}1 '%2' in '%3' for target '%4'
SDKDB map has poison entry for %select{class|category|protocol}0 '%1'
skipping file '%0': %1
skipping framework '%0': %1
header marked symbol '%0' as unavailable
truncating current version '%0' to fit in 32-bit space used by old mach-o format
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
</array>
</plist>
keyword
identifier
string
number
text
typeIdentifier
internalParam
externalParam
unknown
super
superUSR
superSourceModule
hasException
categories
interface
interfaceUSR
interfaceSourceModule
project
globals
interfaces
protocols
enums
typedefs
structs
missing name in json api object
file
line
introduced
deprecated
obsoleted
unavailable
unconditionallyDeprecated
SPIAvailable
malformed introduced version
malformed deprecated version
malformed obsoleted version
access
public
private
Unknown access 
kind
function
variable
Unknown GVKind 
linkage
exported
re-exported
internal
external
Unknown Linkage 
weakDefined
weakReferenced
threadLocalValue
attr
attribute should be string
dynamic
Unknown property attr 
protected
package
Unknown access control 
declName
start
Missing 'start' or 'end' in range
docComment
lines
Missing 'lines' in docComment object
Expect to be JSON Object
text
Missing 'text' in docComment line
range
Missing 'range' in docComment line
spelling
Missing 'spelling' in declaration fragment
Missing 'kind' in declaration fragment
preciseIdentifier
declarationFragments
functionSignature
returns
Expect to be a JSON Array
parameters
Expect to be a JSON Object
Missing 'name' in function signature parameter
Missing 'declarationFragments' in function signature parameter
subHeading
sourceModule
type
typeUSR
typeSourceModule
instanceMethods
classMethods
method should be an object
optional
properties
property should be an object
cannot find getter
cannot find setter
ivars
ivar should be an object
constants
enum constant should be an object
fields
struct field should be an object
expected filetype
stub
bundle
un-expected filetype: 
currentVersion
expected currentVersion
compatibilityVersion
expected compatibilityVersion
installName
missing install name
uuid
parentUmbrella
twoLevelNamespace
appExtensionSafe
allowableClients
allowableClient is not string
reexportedLibraries
reexportedLibrary is not string
potentially defined selector is not string
potentiallyDefinedSelectors
binaryInfo
Input triple is not expected
char16_t
char32_t
accessControl
swiftABI
macros:
globals:
  - name: 
enums:
- name: 
  constants:
structs:
  fields:
    kind: 
instance
    isOptional: 
    isDynamic: 
    attributes:
 readonly
 dynamic
 class
    getter name: 
    setter name: 
    access: 
private
protected
public
package
objective-c interfaces:
  superClassName: 
  superClassUSR: 
  hasExceptionAttribute: 
  categories:
  protocols:
  methods:
  properties:
  instance variables:
objective-c categories:
  interfaceName: 
objective-c protocols:
type defs:
  type USR: 
  access: 
declName: 
  isWeakDefined: 
  isThreadLocalValue: 
  kind: 
USR: 
  loc: 
  availability: 
  linkage: 
 (deprecated)
 (spi)
required field 'type' not specified
unsupported header type
required field 'path' not specified
swiftCompatibilityHeader
expect a JSON object
not a JSON object
required field 'version' not specified
invalid version number
unsupported version
headers
/(.+)\.framework/(.+)?Headers/(.+)
mach-o bundle
mach-o dynamic library
mach-o dynamic library stub
tbd-v
cannot remove last architecture slice '
install names do not match
current versions do not match
compatibility versions do not match
swift ABI versions do not match
two level namespace flags do not match
application extension safe flags do not match
installapi flags do not match
 (for architecture 
file: 
 does not contain architecture: 
macos
tvos
watchos
bridgeos
driverkit
sepos
Requested architectures don't exist
unknown/unsupported architecture
__objc_imageinfo
unsupported file type
no such architecture
!tapi-tbd-v1
tag:yaml.org,2002:map
!tapi-tbd-v2
!tapi-tbd-v3
tapi-tbd-v1
archs
uuids
flags
swift-version
swift-abi-version
objc-constraint
parent-umbrella
exports
undefineds
zippered
macosx
unknown enumerated scalar
maccatalyst
flat_namespace
not_app_extension_safe
none
retain_release
retain_release_for_simulator
retain_release_or_gc
allowed-clients
re-exports
symbols
objc-classes
objc-eh-types
objc-ivars
weak-def-symbols
thread-local-symbols
weak-ref-symbols
!tapi-tbd
tbd-version
reexports
ios-simulator
tvos-simulator
watchos-simulator
failed to create target
value
clients
libraries
weak-symbols
x86_64h
armv4t
armv6
armv5
armv7
armv7s
armv7k
armv6m
armv7m
armv7em
arm64e
arm64_32
arm64v8
invalid packed version string.
invalid Swift ABI version.
invalid uuid string pair
objective-cxx
objcxx
/System/Library/PrivateFrameworks/
.hpp
.hxx
(weak-def) 
(weak-ref) 
(tlv) 
(ObjC Class) 
(ObjC Class EH) 
(ObjC IVar) 
#EncryptedString#
4.1/4.2
5.0 or later
Unknown future swift version
__OBJC
__module_info
__OBJC2
__DATA_CONST
__DATA
__TEXT
__objc_classlist
__class_list
objc class section size is not a multiple of pointer size
__objc_catlist
__category_list
objc category section size is not a multiple of pointer size
__objc_protolist
__protocol_list
objc protocol section size is not a multiple of pointer size
__objc_selrefs
__objc_const
__objc_methname
ObjC Image Info section is too small
requested address not in section
Data extends pass the end of the section
Expect to read a none zero length string
string out of bound
__module_info is not a multiple of objc_module_t size
Symtab extends out of the range
Method list extends out of the range
Unsupported ObjC Runtime
vmaddr is encrypted
requested address out of bound
objc(cs)
objc(cy)
(im)
(cm)
(cpy)
(py)
objc(pl)
@macro@
@CM@
objc(ext)
@UD@
@NA@
@CT@
@UUT@
@FI@
@FT@
@UUV@
LIBCLANG_TIMING
LIBCLANG_OBJTRACKING
+++ %u translation units
--- %u translation units
LIBCLANG_DISABLE_PCH_VALIDATION
.pch
.pch-final
unknown module format
Clang front-end time report
Clang front-end timer
-%%%%%%%%
.tmp
clang -cc1 version 14.0.0
 default target 
 warning
 and 
 error
 generated
 when compiling for host
 when compiling for 
reading_modules
Reading modules
preloading.
Preloading 
loading.
Loading 
 -> 
_Private
modules.timestamp
.pcm
.timestamp
modules.idx
__inferred_module.map
module_private.map
module.map
module.private.modulemap
module.modulemap
LLBUILD_TASK_ID
line-tables-only
line-directives-only
constructor
limited
standalone
unused-types
simple
mangled
per-pass-run
full
thin
memprof.profraw
return
branch
pass
pass-missed
pass-analysis
auto
-fno-legacy-pass-manager
-x ir
-fxray-instrumentation-bundle=
global-dynamic
-fdiagnostics-show-hotness
-fdiagnostics-hotness-threshold=
-fsanitize-recover=
-fsanitize-trap=
expected
note
remark
undef-prefix
no-pass
no-pass-analysis
no-pass-missed
-verify-ignore-unexpected=
opencl-c-base.h
opencl-c.h
fast
fast-honor-pragmas
11.0
12.0
latest
non-leaf
b_key
+nullptrToBoolConversion
-nullptrToBoolConversion
+messageToSelfInClassMethodIdReturnType
-messageToSelfInClassMethodIdReturnType
+disableInferNewAvailabilityFromInit
-disableInferNewAvailabilityFromInit
+allowFormatVoidPointerWithStringSpecifier
-allowFormatVoidPointerWithStringSpecifier
+allowFormatBooleanCheck
-allowFormatBooleanCheck
+allowKRDefinitionsWithoutWstrictPrototypes
-allowKRDefinitionsWithoutWstrictPrototypes
+allowStaticMemberInAnonymousUnion
-allowStaticMemberInAnonymousUnion
+allowStaticMemberInLocalRecord
-allowStaticMemberInLocalRecord
+disableNeonImmediateRangeCheck
-disableNeonImmediateRangeCheck
+disableNonDependentMemberExprInCurrentInstantiation
-disableNonDependentMemberExprInCurrentInstantiation
+fixedEnumsInClassScopeCXX98
-fixedEnumsInClassScopeCXX98
+disableNullSanitizerCheckForPointerSanitizer
-disableNullSanitizerCheckForPointerSanitizer
+disableOVEimplicitConv
-disableOVEimplicitConv
+zeroInitializeGlobalsBeforeEvaluating
-zeroInitializeGlobalsBeforeEvaluating
+useNonPrimaryObjCCategoryDecl
-useNonPrimaryObjCCategoryDecl
+enableObjCNumericLiteralWithoutAt
-enableObjCNumericLiteralWithoutAt
+legacyAvailabilityTempWorkaround
-legacyAvailabilityTempWorkaround
+enableObjCImplicitClassTypeCoercion
-enableObjCImplicitClassTypeCoercion
+enableAggressiveVLAFolding
-enableAggressiveVLAFolding
+disablePtrauthPacError
-disablePtrauthPacError
+revert09abecef7bbf
-revert09abecef7bbf
+revertcff6dda604cb
-revertcff6dda604cb
+thisNoAlignAttr
-thisNoAlignAttr
+thisNoNullAttr
-thisNoNullAttr
-fsanitize=
iso9899:1990
gnu90
iso9899:1999
iso9899:2011
iso9899:2017
iso9899:2018
gnu18
c++03
gnu++03
clc++
libamsupport
libamsupport_static_host
libDER
bridgeOSSDKBinaries
Helsinki
libauthinstall
TatsuTools
OSPersonalization
OSLicenseAgreement
AudioDSPManager
corecrypto
-fdefault-calling-conv
a_key
mode
cfg-implicit-dtors
cfg-temporary-dtors
cfg-lifetime
cfg-loopexit
cfg-rich-constructors
cfg-scopes
cfg-expand-default-aggr-inits
c++-template-inlining
c++-stdlib-inlining
c++-allocator-inlining
c++-shared_ptr-inlining
c++-temp-dtor-inlining
suppress-null-return-paths
avoid-suppressing-null-argument-paths
suppress-inlined-defensive-checks
c++-container-inlining
suppress-c++-stdlib
crosscheck-with-z3
report-in-main-source-file
stable-report-filename
verbose-report-filename
serialize-stats
objc-inlining
prune-paths
add-pop-up-notes
cfg-conditional-static-initializers
faux-bodies
elide-constructors
inline-lambdas
widen-loops
unroll-loops
notes-as-events
aggressive-binary-operation-simplification
eagerly-assume
experimental-enable-naive-ctu-analysis
expand-macros
display-ctu-progress
track-conditions
track-conditions-debug
apply-fixits
display-checker-name
support-symbolic-integer-casts
consider-single-element-arrays-as-flexible-array-members
assume-controlled-environment
ignore-bison-generated-files
ignore-flex-generated-files
ctu-import-threshold
ctu-import-cpp-threshold
ipa-always-inline-size
graph-trim-interval
min-cfg-size-treat-functions-as-large
max-symbol-complexity
max-times-inline-large
max-inlinable-size
max-nodes
region-store-small-struct-limit
ctu-dir
ctu-index-name
ctu-invocation-list
model-path
c++-inlining
exploration_strategy
silence-checkers
-cl-kernel-arg-info
-cl-mad-enable
-cl-fp32-correctly-rounded-divide-sqrt
-cl-uniform-work-group-size
-fno-hip-fp32-correctly-rounded-divide-sqrt
-falign-loops=
-fno-autolink
-fembed-bitcode=
bitcode
marker
always
never
unspecified
swift
swift-5.0
swift-4.2
swift-4.1
dwarf
sjlj
wasm
ignore
maytrap
strict
runtime
global
integer
single
multiple
virtual
Accelerate
libmvec
MASSV
SVML
Darwin_libsystem_m
best
uninitialized
zero
pattern
local-dynamic
initial-exec
local-exec
default
hidden
posix
mixed
lldb
this
arguments
zlib
zlib-gnu
ropi
rwpi
ropi-rwpi
dynamic-no-pic
llvm
csllvm
msvc
check
modify
migrate
libc++
libstdc++
legacy
non-legacy
cdecl
fastcall
stdcall
vectorcall
regcall
char
short
2020
2017
1.2.1
sycl-1.2.1
-mwatch-bitcode-compatibility
-fprofile-sample-use=
-fprofile-sample-accurate
-fdebug-compilation-dir=
-fdebug-info-for-profiling
-fprofile-remapping-file=
-fprofile-arcs
-ftest-coverage
-fprofile-filter-files=
-fprofile-exclude-files=
-fprofile-update=
-fpseudo-probe-for-profiling
-fswift-async-fp=
-faddrsig
-fcommon
-fno-dwarf-directory-asm
-femulated-tls
-fno-jump-tables
-fkeep-static-consts
-fsymbol-partition=
-fsanitize-coverage-allowlist=
-fsanitize-coverage-ignorelist=
-fsanitize-memory-track-origins=
-fsanitize-memory-use-after-dtor
-fsanitize-address-use-after-scope
-fsanitize-address-use-after-return=
-fsanitize-address-poison-custom-array-cookie
-fsanitize-address-globals-dead-stripping
-fsanitize-address-use-odr-indicator
-fsanitize-address-destructor=
-fsanitize-minimal-runtime
-fsanitize-cfi-cross-dso
-fsanitize-cfi-icall-generalize-pointers
-fsanitize-cfi-canonical-jump-tables
-fsanitize-stats
-fsanitize-undefined-strip-path-components=
-fno-strict-float-cast-overflow
-fno-delete-null-pointer-checks
-frewrite-map-file=
-finstrument-functions
-finstrument-functions-after-inlining
-finstrument-function-entry-bare
-fxray-instruction-threshold=
-fxray-ignore-loops
-fno-xray-function-index
-fxray-function-groups=
-fxray-selected-function-group=
-ffine-grained-bitfield-accesses
-fthin-link-bitcode=
-fmerge-all-constants
-fms-volatile
-fno-assume-sane-operator-new
-fveclib=
-fno-use-cxa-atexit
-fno-verbose-asm
-fno-objc-convert-messages-to-runtime-calls
-fobjc-msgsend-selector-stubs
-fobjc-arc-exceptions
-fin-descriptor-block-flags
-fgeneric-block-helpers
-fgeneric-block-helpers-use-extended-layout
-fobjc-avoid-heapify-local-blocks
-fno-escaping-block-tail-calls
-fpatchable-function-entry=
-fno-plt
-fpass-plugin=
-fno-preserve-as-comments
-fsplit-stack
-fstack-clash-protection
-fstrict-enums
-fstrict-vtable-pointers
-ftime-report
-ftime-report=
-ftls-model=
-ftrap-function=
-freroll-loops
-fregister-global-dtors-with-atexit
-fno-use-init-array
-fwhole-program-vtables
-fsplit-lto-unit
-fforce-emit-vtables
-fvirtual-function-elimination
-fno-zero-initialized-in-bss
-ffunction-sections
-fbasic-block-sections=
-fdata-sections
-fstack-size-section
-stack-usage-file
-funique-basic-block-section-names
-funique-internal-linkage-names
-fno-unique-section-names
-fsplit-machine-functions
-fno-strict-return
-fdebug-ranges-base-address
-fsplit-dwarf-inlining
-fforce-dwarf-frame
-gdwarf64
-gcodeview
-gcodeview-ghash
-gno-inline-line-tables
-gstrict-dwarf
-gno-column-info
-gembed-source
-mtls-size=
-mstackrealign
-mstack-alignment=
-mstack-probe-size=
-mno-stack-arg-probe
-mno-tls-direct-seg-refs
-mspeculative-load-hardening
-faapcs-bitfield-load
-fno-aapcs-bitfield-width
-mno-amdgpu-ieee
-mbackchain
-mrelax-all
-mincremental-linker-compatible
-msoft-float
-mrecip=
-mprefer-vector-width=
-mstack-protector-guard=
-mstack-protector-guard-offset=
-mstack-protector-guard-reg=
-mfentry
-mnop-mcount
-mrecord-mcount
-mpacked-stack
-fno-integrated-as
-debug-info-macro
-default-function-attr
-dwarf-version=
-debugger-tuning=
-dwarf-debug-flags
-extend-lifetimes=
-record-command-line
-compress-debug-sections=
-mnoexecstack
-massembler-no-warn
-massembler-fatal-warnings
--mrelax-relocations
-msave-temp-labels
-mrelocation-model
-disable-llvm-verifier
-disable-llvm-passes
-disable-lifetime-markers
-disable-O0-optnone
-disable-red-zone
-dwarf-ext-refs
-dwarf-explicit-import
-debug-forward-template-params
-fforbid-guard-variables
-no-implicit-float
-fmerge-functions
-coverage-data-file
-coverage-notes-file
-dump-coverage-mapping
-fuse-register-sized-bitfield-access
-relaxed-aliasing
-no-struct-path-tbaa
-mdebug-pass
-mframe-pointer=
-mdisable-tail-calls
-mfloat-abi
-mlimit-float-precision
-mregparm
-msmall-data-limit
-funwind-tables=
-mconstructor-aliases
-vectorize-loops
-vectorize-slp
--dependent-lib=
-fapple-kext-vtable-mitigation
--linker-option=
-fsanitize-coverage-type=
-fsanitize-coverage-indirect-calls
-fsanitize-coverage-trace-bb
-fsanitize-coverage-trace-cmp
-fsanitize-coverage-trace-div
-fsanitize-coverage-trace-gep
-fsanitize-coverage-8bit-counters
-fsanitize-coverage-inline-8bit-counters
-fsanitize-coverage-inline-bool-flag
-fsanitize-coverage-pc-table
-fsanitize-coverage-trace-pc
-fsanitize-coverage-trace-pc-guard
-fsanitize-coverage-no-prune
-fsanitize-coverage-stack-depth
-fpatchable-function-entry-offset=
-fprofile-instrument=
-fprofile-instrument-path=
-fprofile-instrument-use-path=
-flto-visibility-public-std
-flto-unit
-fdebug-pass-manager
-fexperimental-debug-variable-locations
-fverify-debuginfo-preserve
-fverify-debuginfo-preserve-export=
-fwarn-stack-size=
-cfguard-no-checks
-cfguard
-ehcontguard
-clear-ast-before-backend
-enable-noundef-analysis
-discard-value-names
-emit-llvm-uselists
-opt-record-file
-main-file-name
-split-dwarf-output
-split-dwarf-file
-fobjc-dispatch-method=
-stack-protector-buffer-size
-fpreserve-vec3-type
-fpass-by-value-is-noalias
-fexperimental-optimized-argument-temporaries
-fcuda-include-gpubinary
ieee
preserve-sign
positive-zero
Not an integer: %s
-Wundef-prefix=
-fno-caret-diagnostics
-fansi-escape-codes
-fno-diagnostics-fixit-info
-fdiagnostics-parseable-fixits
-fdiagnostics-print-source-range-info
-fno-diagnostics-show-option
-fdiagnostics-show-note-include-stack
-fdiagnostics-show-template-tree
-fno-elide-type
-fmessage-length=
-fdiagnostics-absolute-paths
-fshow-overloads=
-fno-show-column
-fno-show-source-location
-pedantic-errors
-pedantic
-fdiagnostics-format
-fdiagnostics-show-category
-fno-diagnostics-use-presumed-location
-ftabstop
-ferror-limit
-fmacro-backtrace-limit
-ftemplate-backtrace-limit
-fconstexpr-backtrace-limit
-fspell-checking-limit
-fcaret-diagnostics-max-lines
-Wno-rewrite-macros
-verify=
-cl-single-precision-constant
-cl-finite-math-only
-cl-unsafe-math-optimizations
-cl-fast-relaxed-math
-cl-no-signed-zeros
-fgpu-rdc
-fhip-new-launch-api
-fgpu-allow-device-init
-fgpu-defer-diag
-fgpu-exclude-wrong-side-overloads
--gpu-max-threads-per-block=
-cuid=
-fmax-tokens=
-fno-access-control
-fallow-editor-placeholders
-fapple-kext
-fapple-pragma-pack
-fxl-pragma-pack
-fdouble-square-bracket-attributes
-fno-double-square-bracket-attributes
-fcoroutines-ts
-fno-gnu-inline-asm
-fprofile-list=
-fapinotes
-fapinotes-modules
-ftarget-variant-availability-checks
-fborland-extensions
-fcomment-block-commands=
-fparse-all-comments
-fcomplete-member-pointers
-fcf-runtime-abi=
-fno-constant-cfstrings
-fconstant-array-class=
-fconstant-dictionary-class=
-fconstant-integer-number-class=
-fconstant-float-number-class=
-fconstant-double-number-class=
-fexperimental-new-constant-interpreter
-fcxx-exceptions
-fasync-exceptions
-fno-cxx-modules
-fdollars-in-identifiers
-fno-dollars-in-identifiers
-fno-elide-constructors
-femit-all-decls
-fexceptions
-exception-model
-fignore-exceptions
-ffp-exception-behavior=
-ffast-math
-menable-unsafe-fp-math
-fmath-errno
-fextend-arguments=
-ffixed-point
-fno-c++-static-destructors
-fsanitize-address-field-padding=
-freciprocal-math
-fapprox-func
-ffinite-math-only
-fno-signed-zeros
-frounding-math
-fprotect-parens
-ffreestanding
-fgnu-keywords
-fno-gnu-keywords
-fgnu89-inline
-fheinous-gnu-extensions
-fexperimental-strict-floating-point
-fxray-instrument
-fxray-always-instrument=
-fxray-never-instrument=
-fxray-attr-list=
-fxray-always-emit-customevents
-fxray-always-emit-typedevents
-flax-vector-conversions=
-fms-compatibility
-fms-extensions
-fasm-blocks
-fdelayed-template-parsing
-fms-memptr-rep=
-fdeclspec
-fno-declspec
-fpch-instantiate-templates
-fmodules-ts
-fmodules-strict-decluse
-fmodules-decluse
-fmodules-search-all
-fno-implicit-modules
-fretain-comments-from-system-headers
-fdigraphs
-fno-digraphs
-fno-operator-names
-fobjc-encode-cxx-class-template-spec
-fobjc-exceptions
-fapplication-extension
-frelaxed-template-template-args
-fsized-deallocation
-faligned-allocation
-fno-aligned-allocation
-fnew-alignment=
-fno-objc-infer-related-result-type
-fobjc-disable-direct-methods-for-testing
-fno-openmp-extensions
-fopenmp-target-new-runtime
-fopenmp-optimistic-collapse
-fpack-struct=
-fmax-type-align=
-fpascal-strings
-fropi
-frwpi
-fno-rtti-data
-fshort-enums
-fchar8_t
-fno-char8_t
-fno-spell-checking
-fno-signed-char
-fstack-check
-ftrivial-auto-var-init=
-ftrivial-auto-var-init-stop-after=
-ftrivial-auto-var-zero-init-max-size=
-ftrivial-auto-var-init-skip-cpp-obj
-ftrivial-auto-var-init-skip-non-pod
-ftrivial-auto-var-init-skip-stl
-ftrivial-auto-var-init-skip-non-ptr-array
-Wlarge-by-value-copy=
-fno-threadsafe-statics
-fvisibility-from-dllstorageclass
-fvisibility-dllexport=
-fvisibility-nodllstorageclass=
-fvisibility-externs-dllimport=
-fvisibility-externs-nodllstorageclass=
-fvisibility-inlines-hidden
-fvisibility-inlines-hidden-static-local-var
-fvisibility-global-new-delete-hidden
-fnew-infallible
-fwritable-strings
-fenable-matrix
-mqdsp6-compat
-mdouble=
-malign-double
-mdarwin-stkchk-strong-link
-ffuchsia-api-level=
-mms-bitfields
-mthread-model
-mcmse
-mvscale-min=
-mvscale-max=
-mabi=vec-extabi
-fzvector
-print-ivar-layout
-pthread
-traditional-cpp
-faltivec-src-compat=
-fexperimental-optimized-noescape
-fsemantic-interposition
-fpadding-on-unsigned-fixed-point
-fno-math-builtin
-fdump-vtable-layouts
-menable-no-infs
-menable-no-nans
-mreassociate
-mabi=ieeelongdouble
-mbranch-target-enforce
-fno-dllexport-inlines
-fno-modules-error-recovery
-fmodule-feature
-fmodules-local-submodule-visibility
-fmodules-codegen
-fmodules-debuginfo
-fmodules-hash-error-diagnostics
-fodr-hash-attributes
-fno-odr-hash-categories
-fno-odr-hash-interfaces
-fno-odr-hash-protocols
-fno-odr-hash-records
-fno-odr-hash-properties
-fno-odr-hash-ivars
-fno-odr-hash-methods
-fno-concept-satisfaction-caching
-fno-recovery-ast
-fno-recovery-ast-type
-fdump-record-layouts-simple
-fdump-record-layouts-canonical
-fdump-record-layouts-complete
-fdump-record-layouts
-building-pch-with-obj
-faligned-alloc-unavailable
-fblocks-runtime-optional
-fexternc-nounwind
-fno-wchar
-fconstant-string-class
-disable-objc-default-synthesize-properties
-fencode-extended-block-signature
-function-alignment
-pic-level
-pic-is-pie
-fhalf-no-semantic-interposition
-static-define
-stack-protector
-fvisibility
-ftype-visibility
-fapply-global-visibility-to-externs
-ftemplate-depth
-foperator-arrow-depth
-fconstexpr-depth
-fconstexpr-steps
-fbracket-depth
-fconst-strings
-fno-bitfield-type-align
-ffake-address-space-map
-faddress-space-map-mangling=
-funknown-anytype
-fdebugger-support
-fdebugger-cast-result-to-id
-fdebugger-objc-literal
-fdeprecated-macro
-vtordisp-mode=
-fnative-half-type
-fnative-half-arguments-and-returns
-fallow-half-arguments-and-returns
-fdefault-calling-conv=
-fwchar-type=
-fno-signed-wchar
-fcompatibility-qualified-id-block-type-checking
-fcuda-is-device
-fcuda-allow-variadic-functions
-fno-cuda-host-device-constexpr
-fsycl-is-device
-fsycl-is-host
-sycl-std=
-fcuda-approx-transcendentals
itanium
applearm64
aarch64
mips
webassembly
fuchsia
microsoft
Objective-C
Objective-C++
OpenCL
C++ for OpenCL
CUDA
RenderScript
LLVM IR
region
html-single-file
plist
plist-multi-file
plist-html
sarif
sarif-html
text-minimal
statement
block
noredundancy
deep
externalDefMap.txt
invocations.yaml
destructors
unexplored_first_queue
inlining
dynamic-bifurcate
'track-conditions' to also be enabled
a filename
a boolean
an unsigned
debug.AnalysisOrder
debug.Stats
alpha.security.ArrayBound
alpha.security.ArrayBoundV2
osx.cocoa.AutoreleaseWrite
alpha.unix.BlockInCriticalSection
alpha.core.BoolAssignment
core.builtin.BuiltinFunctions
alpha.core.C11Lock
osx.coreFoundation.CFError
debug.DumpCFG
debug.ViewCFG
osx.coreFoundation.CFNumber
osx.coreFoundation.CFRetainRelease
alpha.unix.cstring.BufferOverlap
unix.cstring.CStringModeling
alpha.unix.cstring.NotNullTerminated
unix.cstring.NullArg
alpha.unix.cstring.OutOfBounds
unix.cstring.BadSizeArg
cplusplus.SelfAssignment
core.CallAndMessage
core.CallAndMessageModeling
debug.DumpCalls
debug.DumpCallGraph
debug.ViewCallGraph
alpha.core.CastSize
alpha.core.CastToStruct
apiModeling.llvm.CastValue
alpha.unix.Chroot
osx.cocoa.ClassRelease
alpha.clone.CloneChecker
debug.ConfigDumper
alpha.cplusplus.ContainerModeling
debug.DumpControlDependencies
alpha.core.Conversion
valist.CopyToSelf
deadcode.DeadStores
debug.DebugContainerModeling
debug.DebugIteratorModeling
alpha.cplusplus.DeleteWithNonVirtualDtor
security.insecureAPI.DeprecatedOrUnsafeBufferHandling
core.NullDereference
alpha.osx.cocoa.DirectIvarAssignment
core.DivideZero
debug.DumpDominators
unix.DynamicMemoryModeling
alpha.core.DynamicTypeChecker
core.DynamicTypePropagation
optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
alpha.cplusplus.EnumCastOutOfRange
debug.ViewExplodedGraph
debug.ExprInspection
alpha.core.FixedAddr
security.FloatLoopCounter
fuchsia.HandleChecker
alpha.fuchsia.Lock
optin.performance.GCDAntipattern
apiModeling.google.GTest
alpha.security.taint.TaintPropagation
alpha.core.IdenticalExpr
cplusplus.InnerPointer
alpha.osx.cocoa.InstanceVariableInvalidation
alpha.security.cert.env.InvalidPtr
alpha.cplusplus.InvalidatedIterator
alpha.cplusplus.IteratorModeling
alpha.cplusplus.IteratorRange
alpha.osx.cocoa.IvarInvalidationModeling
alpha.llvm.Conventions
debug.DumpLiveExprs
debug.DumpLiveVars
osx.MIG
optin.mpi.MPI-Checker
osx.SecKeychainAPI
osx.API
unix.Malloc
alpha.security.MallocOverflow
unix.MallocSizeof
unix.MismatchedDeallocator
alpha.cplusplus.MismatchedIterator
alpha.osx.cocoa.MissingInvalidationMethod
alpha.security.MmapWriteExec
cplusplus.Move
osx.cocoa.NSAutoreleasePool
osx.cocoa.NSError
osx.NSOrCFErrorDerefChecker
cplusplus.NewDelete
cplusplus.NewDeleteLeaks
osx.cocoa.NilArg
core.builtin.NoReturnFunctions
webkit.NoUncountedMemberChecker
optin.osx.cocoa.localizability.NonLocalizedStringChecker
core.NonNullParamChecker
core.NonnilStringConstants
nullability.NullPassedToNonnull
nullability.NullReturnedFromNonnull
nullability.NullabilityBase
nullability.NullableDereferenced
nullability.NullablePassedToNonnull
nullability.NullableReturnedFromNonnull
osx.NumberObjectConversion
optin.osx.OSObjectCStyleCast
osx.OSObjectRetainCount
osx.cocoa.AtSync
osx.coreFoundation.containers.PointerSizedValues
osx.coreFoundation.containers.OutOfBounds
osx.cocoa.Dealloc
osx.cocoa.ObjCGenerics
osx.cocoa.Loops
osx.cocoa.IncompatibleMethodTypes
osx.cocoa.NonNilReturnValue
osx.ObjCProperty
osx.cocoa.SelfInit
osx.cocoa.MissingSuperCall
osx.cocoa.SuperDealloc
osx.cocoa.UnusedIvars
optin.performance.Padding
cplusplus.PlacementNew
alpha.osx.cocoa.localizability.PluralMisuseChecker
alpha.core.PointerArithm
alpha.nondeterminism.PointerIteration
alpha.nondeterminism.PointerSorting
alpha.core.PointerSub
debug.DumpPostDominators
alpha.core.PthreadLockBase
alpha.unix.PthreadLock
cplusplus.PureVirtualCall
alpha.security.cert.pos.34c
webkit.RefCntblBaseVirtualDtor
debug.ReportStmts
osx.cocoa.RetainCountBase
osx.cocoa.RetainCount
alpha.security.ReturnPtrRange
core.uninitialized.UndefReturn
apiModeling.llvm.ReturnValue
osx.cocoa.RunLoopAutoreleaseLeak
alpha.cplusplus.STLAlgorithmModeling
security.insecureAPI.SecuritySyntaxChecker
alpha.unix.SimpleStream
alpha.core.SizeofPtr
alpha.cplusplus.SmartPtr
cplusplus.SmartPtrModeling
alpha.core.StackAddressAsyncEscape
core.StackAddrEscapeBase
core.StackAddressEscape
alpha.unix.StdCLibraryFunctionArgs
apiModeling.StdCLibraryFunctions
debug.StdCLibraryFunctionsTester
alpha.unix.Stream
debug.StreamTester
cplusplus.StringChecker
debug.TaintTest
alpha.core.TestAfterDivZero
debug.DumpTraversal
apiModeling.TrustNonnull
apiModeling.TrustReturnsNonnull
security.insecureAPI.UncheckedReturn
alpha.webkit.UncountedCallArgsChecker
webkit.UncountedLambdaCapturesChecker
alpha.webkit.UncountedLocalVarsChecker
core.uninitialized.Branch
core.uninitialized.CapturedBlockVariable
core.UndefinedBinaryOperatorResult
core.uninitialized.ArraySubscript
core.uninitialized.Assign
valist.Uninitialized
optin.cplusplus.UninitializedObject
unix.API
optin.portability.UnixAPI
alpha.deadcode.UnreachableCode
valist.Unterminated
core.VLASize
valist.ValistBase
osx.cocoa.VariadicMethodTypes
unix.Vfork
optin.cplusplus.VirtualCall
cplusplus.VirtualCallModeling
security.insecureAPI.bcmp
security.insecureAPI.bcopy
security.insecureAPI.bzero
security.insecureAPI.decodeValueOfObjCType
security.insecureAPI.getpw
security.insecureAPI.gets
security.insecureAPI.mkstemp
security.insecureAPI.mktemp
security.insecureAPI.rand
security.insecureAPI.strcpy
security.insecureAPI.vfork
alpha.unix.cstring
alpha.clone
alpha
debug
nullability
optin.portability
unix.cstring
core.uninitialized
apiModeling.llvm
apiModeling.google
webkit
alpha.security.taint
alpha.cplusplus
alpha.osx.cocoa
alpha.security.cert
cplusplus
osx.coreFoundation.containers
osx.cocoa
optin.osx.cocoa.localizability
optin.osx
alpha.security
security
alpha.unix
alpha.core
optin.mpi
security.insecureAPI
alpha.apiModeling
unix
osx.coreFoundation
apiModeling
core
optin
alpha.security.cert.pos
alpha.fuchsia
alpha.deadcode
alpha.security.cert.env
alpha.nondeterminism
optin.cplusplus
optin.osx.cocoa
deadcode
optin.performance
alpha.osx.cocoa.localizability
core.builtin
alpha.llvm
alpha.osx
valist
alpha.webkit
ifs-v1
Invalid interface stub format: 
 is deprecated.
Must specify a valid interface stub format type, ie: -interface-stub-version=ifs-v1
-fsystem-module
-emit-module
ARC migration
ObjC migration
-cpp-output
-module-map
precompiled-header
-header
clcpp
cuda
renderscript
assembler-with-cpp
<stdin>
-fptrauth-objc-isa-mode=sign-and-auth
strip
sign-and-strip
sign-and-auth
__CET__=1
__CET__=2
__CET__=3
-working-directory
-no-ns-alloc-error
-no-finalize-removal
-unoptimized-cfg
-analyzer-opt-analyze-headers
-analyzer-opt-analyze-nested-blocks
-analyzer-display-progress
-analyze-function
-trim-egraph
-analyzer-viz-egraph-graphviz
-analyzer-dump-egraph
-analyzer-inline-max-stack-depth
-analyzer-disable-retry-exhausted
-analyzer-max-loop
-analyzer-stats
-analyzer-disable-all-checks
-analyzer-checker-help
-analyzer-checker-help-alpha
-analyzer-checker-help-developer
-analyzer-config-help
-analyzer-list-enabled-checkers
-analyzer-checker-option-help
-analyzer-checker-option-help-alpha
-analyzer-checker-option-help-developer
-analyzer-config-compatibility-mode
-analyzer-werror
-arcmt-migrate-report-output
-arcmt-migrate-emit-errors
-objcmt-migrate-literals
-objcmt-migrate-subscripting
-objcmt-migrate-property
-objcmt-migrate-all
-objcmt-migrate-readonly-property
-objcmt-migrate-readwrite-property
-objcmt-migrate-property-dot-syntax
-objcmt-migrate-annotation
-objcmt-migrate-instancetype
-objcmt-migrate-ns-macros
-objcmt-migrate-protocol-conformance
-objcmt-atomic-property
-objcmt-returns-innerpointer-property
-objcmt-ns-nonatomic-iosonly
-objcmt-migrate-designated-init
-objcmt-whitelist-dir-path=
-index-store-path
-index-ignore-system-symbols
-index-record-codegen-name
-index-unit-output-path
-index-ignore-macros
-index-ignore-pcms
--product-name=
-fno-temp-file
-ftime-trace
-ftime-trace-granularity=
-help
-relocatable-pch
-mllvm
-print-supported-cpus
-ast-merge
-aux-triple
-code-completion-macros
-code-completion-patterns
-no-code-completion-globals
-no-code-completion-ns-level-decls
-code-completion-brief-comments
-code-completion-with-fixits
-disable-free
-add-plugin
-ast-dump-filter
-fno-modules-global-index
-fmodules-embed-file=
-fmodules-embed-all-files
-fno-implicit-modules-use-lock
-ast-dump-decl-types
-ast-dump-lookups
-mt-migrate-directory
-arcmt-action=
-print-stats
-stats-file=
-fix-what-you-can
-fix-only-warnings
-fixit-recompile
-fixit-to-temporary
-foverride-record-layout=
-fno-pch-timestamp
-version
-fallow-pcm-with-compiler-errors
-fcuda-short-ptr
-fforce-enable-int128
-mcmodel=
-meabi
-munsafe-fp-atomics
-target-cpu
-tune-cpu
-target-feature
-triple
-target-abi
-target-variant-triple
-target-linker-version
-mfpmath
-cl-ext=
-fmodules-user-build-path
-fprebuilt-implicit-modules
-fmodules-prune-interval=
-fmodules-prune-after=
-fbuild-session-timestamp=
-fmodules-validate-once-per-build-session
-fmodules-disable-diagnostic-validation
-fvalidate-ast-input-files-content
-fimplicit-module-maps
-nobuiltininc
-nostdinc++
-fmodule-map-file-home-is-cwd
-fmodule-format=
-nostdsysteminc
-fdisable-module-hash
-fmodules-hash-content
-fmodules-strict-context-hash
-imacros
-include-pch
-undef
-pch-through-header=
-pch-through-hdrstop-create
-fobjc-arc-cxxlib=
-fno-validate-pch
-fallow-pch-with-compiler-errors
-fallow-pch-with-different-modules-cache-path
-dump-deserialized-decls
-detailed-preprocessing-record
-setup-static-analyzer
-disable-pragma-debug-crash
-frewrite-imports
-frewrite-includes
-fuse-line-directives
-fminimize-whitespace
-fshow-skipped-includes
-dependency-file
-dependency-dot
-module-dependency-dir
-sys-header-deps
-skip-unused-modulemap-deps
-module-file-deps
-header-include-file
<built-in>
 #${}^!
digraph "dependencies" {
 [ shape="box", label="
header_
expanded from here
expanded from macro '
(skipping 
 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
in file included from 
in module '
' imported from 
while building module '
STATISTICS FOR '
extern "C" {
#import "
#include "
.hpp
<module-includes>
PCH DECL: 
%0 was deserialized
cppm
clcpp
Note: including file:
/usr/include
/usr/local/include
ignoring nonexistent directory "
/usr/include/c++/v1
/usr/lib/gcc
i686-pc-cygwin
4.7.3
4.5.3
4.3.4
4.3.2
/usr/include/c++/5.0
/usr/gnu/include/c++/4.4.3
/include/c++
/include/c++/
/include/c++/backward
/backward
../../..
/boot/system/non-packaged/develop/headers
/boot/system/develop/headers/os
/boot/system/develop/headers/os/app
/boot/system/develop/headers/os/arch
/boot/system/develop/headers/os/device
/boot/system/develop/headers/os/drivers
/boot/system/develop/headers/os/game
/boot/system/develop/headers/os/interface
/boot/system/develop/headers/os/kernel
/boot/system/develop/headers/os/locale
/boot/system/develop/headers/os/mail
/boot/system/develop/headers/os/media
/boot/system/develop/headers/os/midi
/boot/system/develop/headers/os/midi2
/boot/system/develop/headers/os/net
/boot/system/develop/headers/os/opengl
/boot/system/develop/headers/os/storage
/boot/system/develop/headers/os/support
/boot/system/develop/headers/os/translation
/boot/system/develop/headers/os/add-ons/graphics
/boot/system/develop/headers/os/add-ons/input_server
/boot/system/develop/headers/os/add-ons/mail_daemon
/boot/system/develop/headers/os/add-ons/registrar
/boot/system/develop/headers/os/add-ons/screen_saver
/boot/system/develop/headers/os/add-ons/tracker
/boot/system/develop/headers/os/be_apps/Deskbar
/boot/system/develop/headers/os/be_apps/NetPositive
/boot/system/develop/headers/os/be_apps/Tracker
/boot/system/develop/headers/3rdparty
/boot/system/develop/headers/bsd
/boot/system/develop/headers/glibc
/boot/system/develop/headers/posix
/boot/system/develop/headers
/usr/include/w32api
SCE_ORBIS_SDK_DIR
/target/include
/target/include_common
#include "..." search starts here:
#include <...> search starts here:
 (framework directory)
 (headermap)
End of search list.
ignoring duplicate directory "
  as it is a non-system directory that duplicates 
a system directory
cl_khr_byte_addressable_store
cl_khr_global_int32_base_atomics
cl_khr_global_int32_extended_atomics
cl_khr_local_int32_base_atomics
cl_khr_local_int32_extended_atomics
cl_khr_fp64
cl_khr_fp16
cl_khr_int64_base_atomics
cl_khr_int64_extended_atomics
cl_khr_3d_image_writes
cles_khr_int64
cl_khr_depth_images
cl_khr_gl_msaa_sharing
cl_khr_mipmap_image
cl_khr_mipmap_image_writes
cl_khr_srgb_image_writes
cl_khr_subgroups
cl_clang_storage_class_specifiers
__cl_clang_function_pointers
__cl_clang_variadic_functions
__cl_clang_non_portable_kernel_param_types
__cl_clang_bitfields
cl_amd_media_ops
cl_amd_media_ops2
cl_arm_integer_dot_product_int8
cl_arm_integer_dot_product_accumulate_int8
cl_arm_integer_dot_product_accumulate_int16
cl_arm_integer_dot_product_accumulate_saturate_int8
cl_intel_subgroups
cl_intel_subgroups_short
cl_intel_device_side_avc_motion_estimation
__opencl_c_pipes
__opencl_c_generic_address_space
__opencl_c_atomic_order_acq_rel
__opencl_c_atomic_order_seq_cst
__opencl_c_subgroups
__opencl_c_3d_image_writes
__opencl_c_device_enqueue
__opencl_c_read_write_images
__opencl_c_program_scope_global_variables
__opencl_c_fp64
__opencl_c_images
__opencl_c_int64
# 1 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
#define 
__llvm__
__clang__
__clang_major__
__clang_minor__
__clang_patchlevel__
__clang_version__
"14.0.0 
__GNUC__
__GNUC_MINOR__
__GNUC_PATCHLEVEL__
__GXX_ABI_VERSION
1002
__GNUG__
__GXX_WEAK__
__ATOMIC_RELAXED
__ATOMIC_CONSUME
__ATOMIC_ACQUIRE
__ATOMIC_RELEASE
__ATOMIC_ACQ_REL
__ATOMIC_SEQ_CST
__OPENCL_MEMORY_SCOPE_WORK_ITEM
__OPENCL_MEMORY_SCOPE_WORK_GROUP
__OPENCL_MEMORY_SCOPE_DEVICE
__OPENCL_MEMORY_SCOPE_ALL_SVM_DEVICES
__OPENCL_MEMORY_SCOPE_SUB_GROUP
__PRAGMA_REDEFINE_EXTNAME
__VERSION__
__STRICT_ANSI__
__GXX_EXPERIMENTAL_CXX0X__
__OBJC2__
OBJC_ZEROCOST_EXCEPTIONS
__OBJC_GC__
__NEXT_RUNTIME__
__OBJC_GNUSTEP_RUNTIME_ABI__
__OBJFW_RUNTIME_ABI__
IBOutlet
__attribute__((iboutlet))
IBOutletCollection(ClassName)
__attribute__((iboutletcollection(ClassName)))
IBAction
void)__attribute__((ibaction)
IBInspectable
IB_DESIGNABLE
__OBJC_BOOL_IS_BOOL
__CONSTANT_CFSTRINGS__
OBJC_NEW_PROPERTIES
__PASCAL_STRINGS__
__block
__attribute__((__blocks__(byref)))
__BLOCKS__
__EXCEPTIONS
__GXX_RTTI
__USING_SJLJ_EXCEPTIONS__
__SEH__
__ARM_DWARF_EH__
__DEPRECATED
__private_extern__
_WCHAR_T_DEFINED
_NATIVE_WCHAR_T_DEFINED
__clang_literal_encoding__
"UTF-8"
__clang_wide_literal_encoding__
"UTF-32"
"UTF-16"
__OPTIMIZE__
__OPTIMIZE_SIZE__
__FAST_MATH__
__ORDER_LITTLE_ENDIAN__
1234
__ORDER_BIG_ENDIAN__
4321
__ORDER_PDP_ENDIAN__
3412
__BYTE_ORDER__
__BIG_ENDIAN__
__LITTLE_ENDIAN__
_LP64
__LP64__
_ILP32
__ILP32__
__CHAR_BIT__
__SCHAR_MAX__
__SHRT_MAX__
__INT_MAX__
__LONG_MAX__
__LONG_LONG_MAX__
__WCHAR_MAX__
__WINT_MAX__
__INTMAX_MAX__
__SIZE_MAX__
__UINTMAX_MAX__
__PTRDIFF_MAX__
__INTPTR_MAX__
__UINTPTR_MAX__
__SIZEOF_DOUBLE__
__SIZEOF_FLOAT__
__SIZEOF_INT__
__SIZEOF_LONG__
__SIZEOF_LONG_DOUBLE__
__SIZEOF_LONG_LONG__
__SIZEOF_POINTER__
__SIZEOF_SHORT__
__SIZEOF_PTRDIFF_T__
__SIZEOF_SIZE_T__
__SIZEOF_WCHAR_T__
__SIZEOF_WINT_T__
__SIZEOF_INT128__
__INTMAX_TYPE__
__INTMAX
__INTMAX_C_SUFFIX__
__UINTMAX_TYPE__
__UINTMAX
__UINTMAX_C_SUFFIX__
__INTMAX_WIDTH__
__PTRDIFF_TYPE__
__PTRDIFF
__PTRDIFF_WIDTH__
__INTPTR_TYPE__
__INTPTR
__INTPTR_WIDTH__
__SIZE_TYPE__
__SIZE
__SIZE_WIDTH__
__WCHAR_TYPE__
__WCHAR_WIDTH__
__WINT_TYPE__
__WINT_WIDTH__
__SIG_ATOMIC_WIDTH__
__SIG_ATOMIC_MAX__
__CHAR16_TYPE__
__CHAR32_TYPE__
__UINTMAX_WIDTH__
__UINTPTR_TYPE__
__UINTPTR
__UINTPTR_WIDTH__
FLT16
LDBL
__POINTER_WIDTH__
__BIGGEST_ALIGNMENT__
__CHAR_UNSIGNED__
__WCHAR_UNSIGNED__
__WINT_UNSIGNED__
__USER_LABEL_PREFIX__
__FINITE_MATH_ONLY__
__GNUC_GNU_INLINE__
__GNUC_STDC_INLINE__
__GCC_ATOMIC_TEST_AND_SET_TRUEVAL
__CLANG_ATOMIC_
__GCC_ATOMIC_
__NO_INLINE__
__PIC__
__pic__
__PIE__
__pie__
__FLT_EVAL_METHOD__
__FLT_RADIX__
__DECIMAL_DIG__
__LDBL_DECIMAL_DIG__
__SSP__
__SSP_STRONG__
__SSP_ALL__
__clang_analyzer__
__FAST_RELAXED_MATH__
__weak
__attribute__((objc_gc(weak)))
__strong
__attribute__((objc_gc(strong)))
__autoreleasing
__unsafe_unretained
__attribute__((objc_ownership(weak)))
__attribute__((objc_ownership(strong)))
__attribute__((objc_ownership(autoreleasing)))
__attribute__((objc_ownership(none)))
__nonnull
_Nonnull
__null_unspecified
_Null_unspecified
__nullable
_Nullable
__APPLE_EMBEDDED_SIMULATOR__
_OPENMP
201107
201307
201511
201811
__CUDA_ARCH__
__CLANG_CUDA_APPROX_TRANSCENDENTALS__
__SYCL_DEVICE_ONLY__
__IMAGE_SUPPORT__
__GLIBCXX_TYPE_INT_N_0
__int128
__GLIBCXX_BITSIZE_INT_N_0
__cpp_rtti
199711L
__cpp_exceptions
__cpp_unicode_characters
200704L
__cpp_raw_strings
200710L
__cpp_unicode_literals
__cpp_user_defined_literals
200809L
__cpp_lambdas
200907L
__cpp_constexpr
201907L
201603L
201304L
200704
__cpp_constexpr_in_decltype
201711L
__cpp_range_based_for
200907
__cpp_static_assert
201411L
200410
__cpp_decltype
200707L
__cpp_attributes
__cpp_rvalue_references
200610L
__cpp_variadic_templates
__cpp_initializer_lists
200806L
__cpp_delegating_constructors
200604L
__cpp_nsdmi
__cpp_inheriting_constructors
201511L
__cpp_ref_qualifiers
__cpp_alias_templates
__cpp_threadsafe_static_init
__cpp_binary_literals
__cpp_digit_separators
201309L
__cpp_init_captures
201803L
__cpp_generic_lambdas
201707L
__cpp_decltype_auto
__cpp_return_type_deduction
__cpp_aggregate_nsdmi
__cpp_variable_templates
__cpp_sized_deallocation
__cpp_hex_float
__cpp_inline_variables
201606L
__cpp_noexcept_function_type
201510L
__cpp_capture_star_this
__cpp_if_constexpr
__cpp_deduction_guides
201703L
__cpp_template_auto
__cpp_namespace_attributes
__cpp_enumerator_attributes
__cpp_nested_namespace_definitions
__cpp_variadic_using
201611L
__cpp_aggregate_bases
__cpp_structured_bindings
__cpp_nontype_template_args
__cpp_fold_expressions
__cpp_guaranteed_copy_elision
__cpp_nontype_template_parameter_auto
__cpp_aligned_new
__cpp_template_template_args
__cpp_concepts
__cpp_conditional_explicit
201806L
__cpp_constexpr_dynamic_alloc
__cpp_constinit
__cpp_designated_initializers
__cpp_impl_three_way_comparison
__cpp_using_enum
__cpp_implicit_move
202011L
__cpp_size_t_suffix
__cpp_if_consteval
202106L
__cpp_char8_t
201811L
__cpp_impl_destroying_delete
__cpp_coroutines
ouxX
_FMT
5.9604644775390625e-8
1.40129846e-45
4.9406564584124654e-324
3.64519953188247460253e-4951
4.94065645841246544176568792868221e-324
6.47517511943802511092443895822764655e-4966
9.765625e-4
1.19209290e-7
2.2204460492503131e-16
1.08420217248550443401e-19
1.92592994438723585305597794258492732e-34
6.103515625e-5
1.17549435e-38
2.2250738585072014e-308
3.36210314311209350626e-4932
2.00416836000897277799610805135016e-292
3.36210314311209350626267781732175260e-4932
6.5504e+4
3.40282347e+38
1.7976931348623157e+308
1.18973149535723176502e+4932
1.79769313486231580793728971405301e+308
1.18973149535723176508575932662800702e+4932
DENORM_MIN__
HAS_DENORM__
DIG__
DECIMAL_DIG__
EPSILON__
HAS_INFINITY__
HAS_QUIET_NAN__
MANT_DIG__
MAX_10_EXP__
MAX_EXP__
MAX__
MIN_10_EXP__
MIN_EXP__
MIN__
__INT
__UINT
_TYPE__
_C_SUFFIX__
_MAX__
__INT_LEAST
__UINT_LEAST
__INT_FAST
__UINT_FAST
BOOL_LOCK_FREE
CHAR_LOCK_FREE
CHAR8_T_LOCK_FREE
CHAR16_T_LOCK_FREE
CHAR32_T_LOCK_FREE
WCHAR_T_LOCK_FREE
SHORT_LOCK_FREE
INT_LOCK_FREE
LONG_LOCK_FREE
LLONG_LOCK_FREE
POINTER_LOCK_FREE
_GLIBCXX_PREDEFINED_OBJC_ARC_IS_SCALAR
namespace std {
struct __true_type;
struct __false_type;
template<typename _Tp> struct __is_scalar;
template<typename _Tp>
struct __is_scalar<__attribute__((objc_ownership(strong))) _Tp> {
  enum { __value = 0 };
  typedef __false_type __type;
struct __is_scalar<__attribute__((objc_ownership(weak))) _Tp> {
struct __is_scalar<__attribute__((objc_ownership(autoreleasing)))
 _Tp> {
__STDC__
__STDC_HOSTED__
__STDC_VERSION__
202000L
201710L
201112L
199901L
199409L
__cplusplus
202101L
202002L
201402L
201103L
__STDCPP_DEFAULT_NEW_ALIGNMENT__
__STDCPP_THREADS__
__STDC_UTF_16__
__STDC_UTF_32__
__OBJC__
__OPENCL_CPP_VERSION__
202100
__CL_CPP_VERSION_1_0__
__CL_CPP_VERSION_2021__
__OPENCL_C_VERSION__
CL_VERSION_1_0
CL_VERSION_1_1
CL_VERSION_1_2
CL_VERSION_2_0
CL_VERSION_3_0
__ENDIAN_LITTLE__
CL_SYCL_LANGUAGE_VERSION
SYCL_LANGUAGE_VERSION
202001
__ASSEMBLER__
__CUDA__
__HIP__
__HIPCC__
__HIP_DEVICE_COMPILE__
#undef 
#__include_macros "
*** Dumping AST Record Layout
struct 
class 
union 
 Size:
Alignment:
sizeof=
align=
FieldOffsets: [
    <dict>
      <key>level</key>
      
      <key>filename</key>
      <key>line</key>
      <key>column</key>
      <key>message</key>
      <key>ID</key>
      <key>WarningOption</key>
    </dict>
<dict>
  <key>main-file</key>
  <key>dwarf-debug-flags</key>
  <key>diagnostics</key>
  <array>
  </array>
</dict>
<string>
&amp;
&lt;
&gt;
&apos;
&quot;
</string>
ignored
fatal error
<integer>
</integer>
vfs.yaml
#define 
__VA_ARGS__
#pragma 
fatal
disable
once
suppress
Meta
Version
Diag
DiagInfo
SrcRange
CatName
DiagFlag
FileName
FixIt
Invalid encoding
Unexpected end of file reading %u of %u bits
Unexpected end of file reading %u of %u bytes
can't skip block: already at end of stream
can't skip to bit %zu from %llu
clang.serialized_diags
Failed to open diagnostics file
Invalid diagnostics signature
Parse error reading diagnostics
Malformed block at top-level of diagnostics
Malformed sub-block in a diagnostic
Malformed BlockInfo block
Malformed Metadata block
Malformed Diagnostic block
Malformed Diagnostic record
No version provided in diagnostics
Unsupported diagnostics version
Bitcode constructs that are not supported in diagnostics appear
Generic error occurred while handling a record
Hello from 
Failed reading rec code: %s
Read extension block message: %s
note: 
remark: 
warning: 
error: 
fatal error: 
In file included from 
In included file:
In module '
While building module '
fix-it:"
  ...
     
<U+>
<XX>
 [-ferror-limit=]
 [-Werror
warn
string
regex
  File *
  File 
 Line *
 Line 
 (directive at 
  (frontend)
 File 
input
bind-arch
offload
preprocessor
precompiler
header-module-precompiler
api-extractor
analyzer
migrator
compiler
backend
assembler
interface-stub-merger
linker
lipo
dsymutil
verify-debug-info
verify-pch
clang-offload-bundler
clang-offload-unbundler
clang-offload-wrapper
static-lib-linker
device-cuda
device-openmp
device-hip
host
-cuda
-hip
-openmp
cuda
openmp
/etc/redhat-release
release 7
release 6
release 5
/etc/debian_version
/etc/SuSE-release
/etc/gentoo-release
/etc/os-release
/usr/lib/os-release
/etc/lsb-release
precise
flang
Command line argument parsing
--no-demangle
-MMD
819.6
-fopenmp
nvptx64-nvidia-cuda
nvptx-nvidia-cuda
.cfg
Compilation construction
FORCE_CLANG_DIAGNOSTICS_CRASH
COMPILER_PATH
-clang-vendor-feature=+messageToSelfInClassMethodIdReturnType
-clang-vendor-feature=+disableInferNewAvailabilityFromInit
-clang-vendor-feature=+disableNeonImmediateRangeCheck
-clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation
-Xlinker
-disable-aligned-alloc-awareness=1
-clang-vendor-feature=+enableAggressiveVLAFolding
-clang-vendor-feature=+revert09abecef7bbf
-clang-vendor-feature=+thisNoAlignAttr
-clang-vendor-feature=+thisNoNullAttr
{0} [options] file...
flang-new
Target: 
Thread model: 
InstalledDir: 
Configuration file: 
-cc1
System configuration file directory: 
User configuration file directory: 
programs: =
libraries: =
builtins
libgcc.a
Building universal build actions
Building compilation actions
Constructing phase actions
Building compilation jobs
thinLTO on AIX
-wrapper
 - "
", inputs: [
], output: 
], outputs: [
a.exe
a.out
Computing output path
-%%%%%%.
.out
LLVM_DIAGNOSTIC_DIR
amdgcn-amd-amdhsa
-unknown-gnu
-pc-gnu
hurd
OBJECT_MODE
-miamcu
i586
intel
rv32
rv64
-apple-
-Wno-reorder-init-list
-Wno-implicit-int-float-conversion
-Wno-c99-designator
-Wno-final-dtor-non-final-class
-Wno-extra-semi-stmt
-Wno-misleading-indentation
-Wno-quoted-include-in-framework-header
-Wno-implicit-fallthrough
-Wno-enum-enum-conversion
-Wno-enum-float-conversion
-Wno-elaborated-enum-base
-Wno-reserved-identifier
-Wno-gnu-folding-constant
-Wno-cast-function-type
-Wno-bitwise-instead-of-logical
-Wno-error=objc-signed-char-bool-implicit-int-conversion
-Wno-error=tautological-constant-compare
-Wno-error=unused-but-set-variable
-Wno-error=shadow
-Wno-error=unused-but-set-parameter
-Wno-
random
(input arg)
(nothing)
output=
, total=
%.3f
, user=
, mem=
ERROR: Cannot lock file 
debug.AnalysisOrder,debug.Stats,alpha.security.ArrayBound,alpha.security.ArrayBoundV2,osx.cocoa.AutoreleaseWrite,alpha.unix.BlockInCriticalSection,alpha.core.BoolAssignment,core.builtin.BuiltinFunctions,alpha.core.C11Lock,osx.coreFoundation.CFError,debug.DumpCFG,debug.ViewCFG,osx.coreFoundation.CFNumber,osx.coreFoundation.CFRetainRelease,alpha.unix.cstring.BufferOverlap,unix.cstring.CStringModeling,alpha.unix.cstring.NotNullTerminated,unix.cstring.NullArg,alpha.unix.cstring.OutOfBounds,unix.cstring.BadSizeArg,cplusplus.SelfAssignment,core.CallAndMessage,core.CallAndMessageModeling,debug.DumpCalls,debug.DumpCallGraph,debug.ViewCallGraph,alpha.core.CastSize,alpha.core.CastToStruct,apiModeling.llvm.CastValue,alpha.unix.Chroot,osx.cocoa.ClassRelease,alpha.clone.CloneChecker,debug.ConfigDumper,alpha.cplusplus.ContainerModeling,debug.DumpControlDependencies,alpha.core.Conversion,valist.CopyToSelf,deadcode.DeadStores,debug.DebugContainerModeling,debug.DebugIteratorModeling,alpha.cplusplus.DeleteWithNonVirtualDtor,security.insecureAPI.DeprecatedOrUnsafeBufferHandling,core.NullDereference,alpha.osx.cocoa.DirectIvarAssignment,core.DivideZero,debug.DumpDominators,unix.DynamicMemoryModeling,alpha.core.DynamicTypeChecker,core.DynamicTypePropagation,optin.osx.cocoa.localizability.EmptyLocalizationContextChecker,alpha.cplusplus.EnumCastOutOfRange,debug.ViewExplodedGraph,debug.ExprInspection,alpha.core.FixedAddr,security.FloatLoopCounter,fuchsia.HandleChecker,alpha.fuchsia.Lock,optin.performance.GCDAntipattern,apiModeling.google.GTest,alpha.security.taint.TaintPropagation,alpha.core.IdenticalExpr,cplusplus.InnerPointer,alpha.osx.cocoa.InstanceVariableInvalidation,alpha.security.cert.env.InvalidPtr,alpha.cplusplus.InvalidatedIterator,alpha.cplusplus.IteratorModeling,alpha.cplusplus.IteratorRange,alpha.osx.cocoa.IvarInvalidationModeling,alpha.llvm.Conventions,debug.DumpLiveExprs,debug.DumpLiveVars,osx.MIG,optin.mpi.MPI-Checker,osx.SecKeychainAPI,osx.API,unix.Malloc,alpha.security.MallocOverflow,unix.MallocSizeof,unix.MismatchedDeallocator,alpha.cplusplus.MismatchedIterator,alpha.osx.cocoa.MissingInvalidationMethod,alpha.security.MmapWriteExec,cplusplus.Move,osx.cocoa.NSAutoreleasePool,osx.cocoa.NSError,osx.NSOrCFErrorDerefChecker,cplusplus.NewDelete,cplusplus.NewDeleteLeaks,osx.cocoa.NilArg,core.builtin.NoReturnFunctions,webkit.NoUncountedMemberChecker,optin.osx.cocoa.localizability.NonLocalizedStringChecker,core.NonNullParamChecker,core.NonnilStringConstants,nullability.NullPassedToNonnull,nullability.NullReturnedFromNonnull,nullability.NullabilityBase,nullability.NullableDereferenced,nullability.NullablePassedToNonnull,nullability.NullableReturnedFromNonnull,osx.NumberObjectConversion,optin.osx.OSObjectCStyleCast,osx.OSObjectRetainCount,osx.cocoa.AtSync,osx.coreFoundation.containers.PointerSizedValues,osx.coreFoundation.containers.OutOfBounds,osx.cocoa.Dealloc,osx.cocoa.ObjCGenerics,osx.cocoa.Loops,osx.cocoa.IncompatibleMethodTypes,osx.cocoa.NonNilReturnValue,osx.ObjCProperty,osx.cocoa.SelfInit,osx.cocoa.MissingSuperCall,osx.cocoa.SuperDealloc,osx.cocoa.UnusedIvars,optin.performance.Padding,cplusplus.PlacementNew,alpha.osx.cocoa.localizability.PluralMisuseChecker,alpha.core.PointerArithm,alpha.nondeterminism.PointerIteration,alpha.nondeterminism.PointerSorting,alpha.core.PointerSub,debug.DumpPostDominators,alpha.core.PthreadLockBase,alpha.unix.PthreadLock,cplusplus.PureVirtualCall,alpha.security.cert.pos.34c,webkit.RefCntblBaseVirtualDtor,debug.ReportStmts,osx.cocoa.RetainCountBase,osx.cocoa.RetainCount,alpha.security.ReturnPtrRange,core.uninitialized.UndefReturn,apiModeling.llvm.ReturnValue,osx.cocoa.RunLoopAutoreleaseLeak,alpha.cplusplus.STLAlgorithmModeling,security.insecureAPI.SecuritySyntaxChecker,alpha.unix.SimpleStream,alpha.core.SizeofPtr,alpha.cplusplus.SmartPtr,cplusplus.SmartPtrModeling,alpha.core.StackAddressAsyncEscape,core.StackAddrEscapeBase,core.StackAddressEscape,alpha.unix.StdCLibraryFunctionArgs,apiModeling.StdCLibraryFunctions,debug.StdCLibraryFunctionsTester,alpha.unix.Stream,debug.StreamTester,cplusplus.StringChecker,debug.TaintTest,alpha.core.TestAfterDivZero,debug.DumpTraversal,apiModeling.TrustNonnull,apiModeling.TrustReturnsNonnull,security.insecureAPI.UncheckedReturn,alpha.webkit.UncountedCallArgsChecker,webkit.UncountedLambdaCapturesChecker,alpha.webkit.UncountedLocalVarsChecker,core.uninitialized.Branch,core.uninitialized.CapturedBlockVariable,core.UndefinedBinaryOperatorResult,core.uninitialized.ArraySubscript,core.uninitialized.Assign,valist.Uninitialized,optin.cplusplus.UninitializedObject,unix.API,optin.portability.UnixAPI,alpha.deadcode.UnreachableCode,valist.Unterminated,core.VLASize,valist.ValistBase,osx.cocoa.VariadicMethodTypes,unix.Vfork,optin.cplusplus.VirtualCall,cplusplus.VirtualCallModeling,security.insecureAPI.bcmp,security.insecureAPI.bcopy,security.insecureAPI.bzero,security.insecureAPI.decodeValueOfObjCType,security.insecureAPI.getpw,security.insecureAPI.gets,security.insecureAPI.mkstemp,security.insecureAPI.mktemp,security.insecureAPI.rand,security.insecureAPI.strcpy,security.insecureAPI.vfork,alpha.unix.cstring,alpha.clone,alpha,debug,nullability,optin.portability,unix.cstring,core.uninitialized,apiModeling.llvm,apiModeling.google,webkit,alpha.security.taint,alpha.cplusplus,alpha.osx.cocoa,alpha.security.cert,cplusplus,osx.coreFoundation.containers,osx.cocoa,optin.osx.cocoa.localizability,optin.osx,alpha.security,security,alpha.unix,alpha.core,optin.mpi,security.insecureAPI,alpha.apiModeling,unix,osx.coreFoundation,apiModeling,core,optin,alpha.security.cert.pos,alpha.fuchsia,alpha.deadcode,alpha.security.cert.env,alpha.nondeterminism,optin.cplusplus,fuchsia,optin.osx.cocoa,deadcode,optin.performance,alpha.osx.cocoa.localizability,core.builtin,alpha.llvm,alpha.osx,valist,osx,llvm,alpha.webkit,
-analyzer-checker
c89,c90,iso9899:1990,iso9899:199409,gnu89,gnu90,c99,iso9899:1999,c9x,iso9899:199x,gnu99,gnu9x,c11,iso9899:2011,c1x,iso9899:201x,gnu11,gnu1x,c17,iso9899:2017,c18,iso9899:2018,gnu17,gnu18,c2x,gnu2x,c++98,c++03,gnu++98,gnu++03,c++11,c++0x,gnu++11,gnu++0x,c++14,c++1y,gnu++14,gnu++1y,c++17,c++1z,gnu++17,gnu++1z,c++20,c++2a,gnu++20,gnu++2a,c++2b,gnu++2b,cl1.0,cl,cl1.1,cl1.2,cl2.0,cl3.0,clc++1.0,clc++,clc++2021,CL,CL1.1,CL1.2,CL2.0,CL3.0,CLC++,CLC++1.0,CLC++2021,cuda,hip,
-std=
--std=
<action group>
<CompileOnly group>
<g group>
<W/R group>
<I group>
<I/i group>
<T/e/s/t/u group>
<LongDouble group>
<M group>
<O group>
<Preprocessor group>
<R group>
<R (with value) group>
<Static analyzer group>
<T group>
<W group>
<W (with value) group>
</M group>
</volatile group>
<clang-cl options>
CL.EXE COMPATIBILITY OPTIONS
<clang-cl compile-only options>
<clang-cl ignored options>
<clang i group>
<clang ignored f group>
<clang_ignored_gcc_optimization_f_Group>
<clang legacy flags>
<clang ignored m group>
<d group>
<f group>
<f (clang-only) group>
<gN group>
<gTune group>
<g flags group>
<gfortran group>
<ggdbN group>
<i group>
<clang internal options>
<clang debug/development internal options>
DEBUG/DEVELOPMENT OPTIONS
<clang driver internal options>
DRIVER OPTIONS
<m group>
<aarch64 features group>
<amdgpu features group>
<arm features group>
<hexagon features group>
<m libc group>
<m68k features group>
<mips features group>
<ppc features group>
<riscv features group>
<wasm driver features group>
<wasm features group>
<x86 features group>
<opencl group>
<pedantic group>
<reserved libs group>
<SYCL group>
<u group>
<input>
<unknown>
-###
Print (but do not run) the commands to run for this compilation
Display available options
-add-plugin
Use the named plugin action in addition to the default action
<name>
--all-warnings
-all_load
-allowable_client
--amdgpu-arch-tool=
Tool used for detecting AMD GPU arch in the system.
-analyze-function=
-analyze-function
Run analysis on specific function (for C++ include parameters in name)
/analyze-
-analyzer-checker-help-alpha
Display the list of in development analyzer checkers. These are NOT considered safe, they are unstable and will emit incorrect reports. Enable ONLY FOR DEVELOPMENT purposes
-analyzer-checker-help-developer
Display the list of developer-only checkers such as modeling and debug checkers
-analyzer-checker-help
Display the list of analyzer checkers that are available
-analyzer-checker-option-help-alpha
Display the list of in development checker and package options. These are NOT considered safe, they are unstable and will emit incorrect reports. Enable ONLY FOR DEVELOPMENT purposes
-analyzer-checker-option-help-developer
Display the list of checker and package options meant for development purposes only
-analyzer-checker-option-help
Display the list of checker and package options
-analyzer-checker=
Choose analyzer checkers to enable
-analyzer-config-compatibility-mode=
-analyzer-config-compatibility-mode
Don't emit errors on invalid analyzer-config inputs
true,false
-analyzer-config-help
Display the list of -analyzer-config options. These are meant for development purposes only!
-analyzer-config
Choose analyzer options to enable
-analyzer-constraints=
-analyzer-constraints
Source Code Analysis - Symbolic Constraint Engines
-analyzer-disable-all-checks
Disable all static analyzer checks
-analyzer-disable-checker=
-analyzer-disable-checker
Choose analyzer checkers to disable
-analyzer-disable-retry-exhausted
Do not re-analyze paths leading to exhausted nodes with a different strategy (may decrease code coverage)
-analyzer-display-progress
Emit verbose output about the analyzer's progress
-analyzer-dump-egraph=
-analyzer-dump-egraph
Dump exploded graph to the specified file
-analyzer-inline-max-stack-depth=
-analyzer-inline-max-stack-depth
Bound on stack depth while inlining (4 by default)
-analyzer-inlining-mode=
-analyzer-inlining-mode
Specify the function selection heuristic used during inlining
-analyzer-list-enabled-checkers
Display the list of enabled analyzer checkers
-analyzer-max-loop
The maximum number of times the analyzer will go through a loop
--analyzer-no-default-checks
-analyzer-opt-analyze-headers
Force the static analyzer to analyze functions defined in header files
-analyzer-opt-analyze-nested-blocks
Analyze the definitions of blocks in addition to functions
-analyzer-output=
--analyzer-output
Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
-analyzer-output
Source Code Analysis - Output Options
-analyzer-purge=
-analyzer-purge
Source Code Analysis - Dead Symbol Removal Frequency
-analyzer-stats
Print internal analyzer statistics.
-analyzer-store=
-analyzer-store
Source Code Analysis - Abstract Memory Store Models
-analyzer-tidy-checker=
-analyzer-tidy-checker
Add clang-tidy check string (enable, -disable, comma-separated)
-analyzer-viz-egraph-graphviz
Display exploded graph using GraphViz
-analyzer-werror
Emit analyzer results as errors rather than warnings
--analyze
Run the static analyzer
-analyze
Run static analysis engine
-ansi
/arch:
Set architecture for code generation
-arch_errors_fatal
-arch_only
-arch
-arcmt-action=
The ARC migration action to take
check,modify,migrate
-arcmt-migrate-emit-errors
Emit ARC errors even if the migrator can fix them
-arcmt-migrate-report-output
Output path for the plist report
--assemble
--assert=
--assert
-ast-dump-all=
Build ASTs and then debug dump them in the specified format, forcing deserialization. Supported formats include: default, json
-ast-dump-all
Build ASTs and then debug dump them, forcing deserialization
-ast-dump-decl-types
Include declaration types in AST dumps
-ast-dump-filter=
-ast-dump-filter
Use with -ast-dump or -ast-print to dump/print only AST declaration nodes having a certain substring in a qualified name. Use -ast-list to list all filterable declaration node names.
<dump_filter>
-ast-dump-lookups
Build ASTs and then debug dump their name lookup tables
-ast-dump=
Build ASTs and then debug dump them in the specified format. Supported formats include: default, json
-ast-dump
Build ASTs and then debug dump them
-ast-list
Build ASTs and print the list of declaration node qualified names
-ast-merge
Merge the given AST file into the translation unit being compiled.
<ast file>
-ast-print
Build ASTs and then pretty-print them
-ast-view
Build ASTs and view them with GraphViz
--autocomplete=
-aux-target-cpu
Target a specific auxiliary cpu type
-aux-target-feature
Target specific auxiliary attributes
-aux-triple
Auxiliary target triple.
/await:
/await
/bigobj
-bind_at_load
--bootclasspath=
--bootclasspath
/Brepro-
Write current time into COFF output (default)
/Brepro
Do not write current time into COFF output (breaks link.exe /incremental)
/Bt+
-building-pch-with-obj
This compilation is part of building a PCH with corresponding object file.
-bundle_loader
-bundle
Search $prefix/$triple-$file and $prefix$file for executables, libraries, includes, and data files used by the compiler. $prefix may or may not be a directory
<prefix>
Pass -b <arg> to the linker on AIX (only).
<arg>
-c-isystem
Add directory to the C SYSTEM include search path
<directory>
-canonical-prefixes
Use absolute paths for invoking subcommands (default)
-cc1as
-cc1
-ccc-arcmt-check
Check for ARC migration issues that need manual handling
-ccc-arcmt-migrate
Apply modifications and produces temporary files that conform to ARC
-ccc-arcmt-modify
Apply modifications to files to conform to ARC
-ccc-gcc-name
Name for native GCC compiler
<gcc-path>
-ccc-install-dir
Simulate installation in the given directory
-ccc-objcmt-migrate
Apply modifications and produces temporary files to migrate to modern ObjC syntax
-ccc-print-bindings
Show bindings of tools to actions
-ccc-print-phases
Dump list of actions to perform
-ccc-
Include comments from within macros in preprocessed output
-cfg-add-implicit-dtors
Add C++ implicit destructors to CFGs for all analyses
-cfguard-no-checks
Emit Windows Control Flow Guard tables only (no checks)
-cfguard
Emit Windows Control Flow Guard tables and checks
/cgthreads
-chain-include
Include and chain a header file after turning it into PCH
<file>
-cl-denorms-are-zero
OpenCL only. Allow denormals to be flushed to zero.
-cl-ext=
OpenCL only. Enable or disable OpenCL extensions. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
-cl-fast-relaxed-math
OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
-cl-finite-math-only
OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
-cl-fp32-correctly-rounded-divide-sqrt
OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
-cl-kernel-arg-info
OpenCL only. Generate kernel argument metadata.
-cl-mad-enable
OpenCL only. Allow use of less precise MAD computations in the generated binary.
-cl-no-signed-zeros
OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
-cl-no-stdinc
OpenCL only. Disables all standard includes containing non-native compiler types and functions.
-cl-opt-disable
OpenCL only. This option disables all optimizations. By default optimizations are enabled.
-cl-single-precision-constant
OpenCL only. Treat double precision floating-point constant as single precision constant.
-cl-std=
OpenCL language standard to compile for.
cl,CL,cl1.0,CL1.0,cl1.1,CL1.1,cl1.2,CL1.2,cl2.0,CL2.0,cl3.0,CL3.0,clc++,CLC++,clc++1.0,CLC++1.0,clc++2021,CLC++2021
-cl-strict-aliasing
OpenCL only. This option is added for compatibility with OpenCL 1.0.
-cl-uniform-work-group-size
OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel
-cl-unsafe-math-optimizations
OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable.
-clang-vendor-feature=
Vendor specific clang features
/clang:
Pass <arg> to the clang driver
--CLASSPATH=
--classpath=
--CLASSPATH
--classpath
-clear-ast-before-backend
Clear the Clang AST before running backend code generation
-client_name
/clr
-code-completion-at=
-code-completion-at
Dump code-completion information at a location
<file>:<line>:<column>
-code-completion-brief-comments
Include brief documentation comments in code-completion results.
-code-completion-macros
Include macros in code-completion results
-code-completion-patterns
Include code patterns in code-completion results
-code-completion-with-fixits
Include code completion results which require small fix-its.
-combine
--comments-in-macros
--comments
-compatibility_version
-compiler-options-dump
Dump the compiler configuration options
--compile
-compress-debug-sections=
DWARF debug sections compression type
none,zlib,zlib-gnu
-compress-debug-sections
--config-system-dir=
System directory for configuration files
--config-user-dir=
User directory for configuration files
--config
Specifies configuration file
--constant-cfstrings
/constexpr:
-coverage-data-file=
-coverage-data-file
Emit coverage data to this filename.
-coverage-notes-file=
-coverage-notes-file
Emit coverage notes to this filename.
-coverage-version=
Four-byte version string for gcov files.
-coverage
-cpp-precomp
-cpp
Enable predefined and command line preprocessor macros
--cuda-compile-host-device
Compile CUDA code for both host and device (default).  Has no effect on non-CUDA compilations.
--cuda-device-only
Compile CUDA code for device only
--cuda-gpu-arch=
--cuda-host-only
Compile CUDA code for host only.  Has no effect on non-CUDA compilations.
--cuda-include-ptx=
Include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
--cuda-noopt-device-debug
Enable device-side debug info generation. Disables ptxas optimizations.
--cuda-path-ignore-env
Ignore environment variables to detect CUDA installation
--cuda-path=
CUDA installation path
-cuid=
An ID for compilation unit, which should be the same for the same compilation unit but different for different compilation units. It is used to externalize device-side static variables for single source offloading languages CUDA and HIP so that they can be accessed by the host code of the same compilation unit.
-current_version
-cxx-isystem
Add directory to the C++ SYSTEM include search path
Include comments in preprocessed output
Do not discard comments when preprocessing
Only run preprocess, compile, and assemble steps
Compile only
/d1PP
Retain macro definitions in /E mode
/d1reportAllClassLayout
Dump record layout information
/d2FastFail
/d2Zi+
Print macro definitions in -E mode in addition to normal output
-dead_strip
-debug-forward-template-params
Emit complete descriptions of template parameters in forward declarations
-debug-info-kind=
-debug-info-macro
Emit macro debug information
--debug=
-debugger-tuning=
gdb,lldb,sce,dbx
--debug
-default-function-attr
Apply given attribute to all functions
--define-macro=
--define-macro
-defsym
Define a value for a symbol
--dependencies
-dependency-dot
Filename to write DOT-formatted header dependencies to
-dependency-file
Filename (or -) to write dependency output to
--dependent-lib=
Add dependent library
-detailed-preprocessing-record
include a detailed record of preprocessing actions
-diagnostic-log-file
Filename (or -) to log diagnostics to
/diagnostics:caret
Enable caret and column diagnostics (default)
/diagnostics:classic
Disable column and caret diagnostics
/diagnostics:column
Disable caret diagnostics but keep column info
/diasdkdir
Path to the DIA SDK
<dir>
-disable-free
Disable freeing of memory on exit
-disable-lifetime-markers
Disable lifetime-markers emission even when optimizations are enabled
-disable-llvm-optzns
-disable-llvm-passes
Use together with -emit-llvm to get pristine LLVM IR from the frontend by not running any LLVM passes at all
-disable-llvm-verifier
Don't run the LLVM IR verifier pass
-disable-O0-optnone
Disable adding the optnone attribute to functions at O0
-disable-objc-default-synthesize-properties
disable the default synthesis of Objective-C properties
-disable-pragma-debug-crash
Disable any #pragma clang __debug that can lead to crashing behavior. This is meant for testing.
-disable-red-zone
Do not emit code that uses the red zone.
-discard-value-names
Discard value names in LLVM IR
Print include directives in -E mode in addition to normal output
Print macro definitions in -E mode instead of normal output
/doc
--driver-mode=
Set the driver mode to either 'gcc', 'g++', 'cpp', or 'cl'
-dsym-dir
Directory to output dSYM's (if any) to
-dump-coverage-mapping
Dump the coverage mapping records, for testing
-dump-deserialized-decls
Dump declarations that are deserialized from PCH, for testing
-dump-raw-tokens
Lex file in raw mode and dump raw tokens
-dump-tokens
Run preprocessor, dump internal rep of tokens
-dumpmachine
-dumpspecs
-dumpversion
-dwarf-debug-flags
The string to embed in the Dwarf debug flags record.
-dwarf-debug-producer
The string to embed in the Dwarf debug AT_producer record.
-dwarf-explicit-import
Generate explicit import from anonymous namespace to containing scope
-dwarf-ext-refs
Generate debug info with external references to clang modules or precompiled headers
-dwarf-version=
--dyld-prefix=
--dyld-prefix
-dylib_file
-dylinker_install_name
-dylinker
-dynamiclib
-dynamic
Define <macro> to <value> (or 1 if <value> omitted)
<macro>=<value>
Define macro
<macro[=value]>
-ehcontguard
Emit Windows EH Continuation Guard tables
Set exception handling model
-emit-ast
Emit Clang AST files for source inputs
-emit-codegen-only
Generate machine code, but discard output
-emit-header-module
Generate pre-compiled module file from a set of header files
-emit-html
Output input source as HTML
-emit-interface-stubs
Generate Interface Stub Files.
-emit-llvm-bc
Build ASTs then convert to LLVM, emit .bc file
-emit-llvm-only
Build ASTs and convert to LLVM, discarding output
-emit-llvm-uselists
Preserve order of LLVM use-lists when serializing
-emit-llvm
Use the LLVM representation for assembler and object files
-emit-merged-ifs
Generate Interface Stub Files, emit merged text not binary.
-emit-module-interface
Generate pre-compiled module file from a C++ module interface
-emit-module
Generate pre-compiled module file from a module map
-emit-obj
Emit native object files
-emit-pch
Generate pre-compiled header file
--emit-static-lib
Enable linker job to emit a static library.
-enable-noundef-analysis
Enable analyzing function argument and return types for mandatory definedness
-enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang
Trivial automatic variable initialization to zero is only here for benchmarks, it'll eventually be removed, and I'm OK with that because I'm only using it to benchmark
--encoding=
--encoding
--entry
-Eonly
Just run preprocessor, no output (for timings)
Disable linemarker output and preprocess to stdout
-error-on-deserialized-decl=
-error-on-deserialized-decl
Emit error if a specific declaration is deserialized from PCH, for testing
/errorReport
-exception-model=
-exception-model
The exception model: dwarf|sjlj|seh|wasm
dwarf,sjlj,seh,wasm
/execution-charset:
Set runtime encoding, supports only UTF-8
/experimental:
-exported_symbols_list
/exportHeader
--extdirs=
--extdirs
-extend-lifetimes=
this,arguments,all
/external:env:
Add dirs in env var <var> to include search path with warnings suppressed
<var>
/external:I
Add directory to include search path with warnings suppressed
/external:
--extra-warnings
-extract-api
Extract API information
Only run the preprocessor
Preprocess to stdout
-faapcs-bitfield-load
Follows the AAPCS standard that all volatile bit-field write generates at least one load. (ARM only).
-faapcs-bitfield-width
Follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
-faccess-control
-faddress-space-map-mangling=
Set the mode for address space map based mangling; OpenCL testing purposes only
<yes|no|target>
target,no,yes
-faddrsig
Emit an address-significance table
-faggressive-function-elimination
-falign-commons
-falign-functions=
-falign-functions
-falign-jumps=
-falign-jumps
-falign-labels=
-falign-labels
-falign-loops=
N must be a power of two. Align loops to the boundary
-falign-loops
-faligned-alloc-unavailable
Aligned allocation/deallocation functions are unavailable
-faligned-allocation
Enable C++17 aligned allocation functions
-faligned-new=
-faligned-new
-fall-intrinsics
-fallow-editor-placeholders
Treat editor placeholders as valid source code
-fallow-half-arguments-and-returns
Allow function arguments and returns of type half
-fallow-pch-with-compiler-errors
Accept a PCH file that was created with compiler errors
-fallow-pch-with-different-modules-cache-path
Accept a PCH file that was created with a different modules cache path
-fallow-pcm-with-compiler-errors
Accept a PCM file that was created with compiler errors
-fallow-unsupported
-falternative-parameter-statement
Enable the old style PARAMETER statement
-faltivec-src-compat=
Source-level compatibility for Altivec vectors (for PowerPC targets). This includes results of vector comparison (scalar for 'xl', vector for 'gcc') as well as behavior when initializing with a scalar (splatting for 'xl', element zero only for 'gcc'). For 'mixed', the compatibility is as 'gcc' for 'vector bool/vector pixel' and as 'xl' for other types. Current default is 'mixed'.
mixed,gcc,xl
-faltivec
-fanalyzed-objects-for-unparse
-fansi-escape-codes
Use ANSI escape codes for diagnostics
-fapinotes-cache-path=
Does nothing; API notes are no longer cached separately from modules
-fapinotes-modules
Enable module-based external API notes support
-fapinotes-swift-version=
Specify the Swift version to use when filtering API notes
<version>
-fapinotes
Enable external API notes support
-fapple-kext-vtable-mitigation
Enable mitigation for kernel v-table exploits through null pointers
-fapple-kext
Use Apple's kernel extensions ABI
-fapple-link-rtlib
Force linking the clang builtins runtime library
-fapple-pragma-pack
Enable Apple gcc-compatible #pragma pack handling
-fapplication-extension
Restrict code to those available for App Extensions
-fapply-global-visibility-to-externs
Apply global symbol visibility to external declarations without an explicit visibility
-fapprox-func
Allow certain math function calls to be replaced with an approximately equivalent calculation
-fasm-blocks
-fasm
-fassociative-math
-fassume-sane-operator-new
-fastcp
-fastf
-fast
-fasync-exceptions
Enable EH Asynchronous exceptions
-fasynchronous-unwind-tables
-fauto-profile-accurate
-fauto-profile=
-fauto-profile
-fautolink
-fautomatic
/favor
Output assembly code file during compilation
Set assembly output file name (with /FA)
<file or dir/>
-fbackslash
Specify that backslash in string introduces an escape character
-fbacktrace
-fbasic-block-sections=
Place each function's basic blocks in unique sections (ELF Only) : all | labels | none | list=<file>
all,labels,none,list=
-fbinutils-version=
Produced object files can use all ELF features supported by this binutils version and newer. If -fno-integrated-as is specified, the generated assembly will consider GNU as support. 'none' means that all ELF features can be used, regardless of binutils support. Defaults to 2.26.
<major.minor>
-fblas-matmul-limit=
-fblocks-runtime-optional
Weakly link in the blocks runtime
-fblocks
Enable the 'blocks' language feature
-fbootclasspath=
-fborland-extensions
Accept non-standard constructs supported by the Borland compiler
-fbounds-check
-fbracket-depth=
-fbracket-depth
Maximum nesting level for parentheses, brackets, and braces
-fbranch-count-reg
-fbranch-target-identification
Emit branch target identification instructions for indirect branch destinations
-fbuild-session-file=
Use the last modification time of <file> as the build session timestamp
-fbuild-session-timestamp=
Time when the current build session started
<time since Epoch in seconds>
-fbuiltin-module-map
Load the clang builtins module map file.
-fbuiltin
-fc++-abi=
C++ ABI to use. This will override the target C++ ABI.
-fc++-static-destructors
-fcall-saved-x10
Make the x10 register call-saved (AArch64 only)
-fcall-saved-x11
Make the x11 register call-saved (AArch64 only)
-fcall-saved-x12
Make the x12 register call-saved (AArch64 only)
-fcall-saved-x13
Make the x13 register call-saved (AArch64 only)
-fcall-saved-x14
Make the x14 register call-saved (AArch64 only)
-fcall-saved-x15
Make the x15 register call-saved (AArch64 only)
-fcall-saved-x18
Make the x18 register call-saved (AArch64 only)
-fcall-saved-x8
Make the x8 register call-saved (AArch64 only)
-fcall-saved-x9
Make the x9 register call-saved (AArch64 only)
-fcaller-saves
-fcaret-diagnostics-max-lines
Set the maximum number of source lines to show in a caret diagnostic
-fcaret-diagnostics
-fcf-protection=
Instrument control-flow architecture protection. Options: return, branch, full, none.
return,branch,full,none
-fcf-protection
Enable cf-protection in 'full' mode
-fcf-runtime-abi=
unspecified,standalone,objc,swift,swift-5.0,swift-4.2,swift-4.1
-fchar8_t
Enable C++ builtin type char8_t
-fcheck-array-temporaries
-fcheck-new
-fcheck=
-fclang-abi-compat=
Attempt to match the ABI of Clang <version>
<major>.<minor>,latest
-fclasspath=
-fcoarray=
-fcolor-diagnostics
Enable colors in diagnostics
-fcomment-block-commands=
Treat each comma separated argument in <arg> as a documentation comment block command
-fcommon
Place uninitialized global variables in a common block
-fcompatibility-qualified-id-block-type-checking
Allow using blocks with parameters of more specific type than the type system guarantees when a parameter is qualified id
-fcompile-resource=
-fcomplete-member-pointers
Require member pointer base types to be complete if they would be significant under the Microsoft ABI
-fconcepts-ts
Enable C++ Extensions for Concepts. (deprecated - use -std=c++2a)
-fconst-strings
Use a const qualified type for string literals in C and ObjC
-fconstant-array-class=
-fconstant-cfstrings
-fconstant-dictionary-class=
-fconstant-double-number-class=
-fconstant-float-number-class=
-fconstant-integer-number-class=
-fconstant-string-class=
-fconstant-string-class
Specify the class to use for constant Objective-C string objects.
<class name>
-fconstexpr-backtrace-limit=
-fconstexpr-backtrace-limit
Set the maximum number of entries to print in a constexpr evaluation backtrace (0 = no limit).
-fconstexpr-depth=
-fconstexpr-depth
Maximum depth of recursive constexpr function calls
-fconstexpr-steps=
-fconstexpr-steps
Maximum number of steps in constexpr function evaluation
-fconvergent-functions
Assume functions may be convergent
-fconvert=
-fcoroutines-ts
Enable support for the C++ Coroutines TS
-fcoverage-mapping
Generate coverage mapping to enable code coverage analysis
-fcoverage-prefix-map=
remap file source paths in coverage mapping
-fcrash-diagnostics-dir=
Put crash-report files in <dir>
-fcray-pointer
-fcreate-profile
-fcs-profile-generate=
Generate instrumented code to collect context sensitive execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
-fcs-profile-generate
Generate instrumented code to collect context sensitive execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
-fcuda-allow-variadic-functions
Allow variadic functions in CUDA device code.
-fcuda-approx-transcendentals
Use approximate transcendental functions
-fcuda-flush-denormals-to-zero
-fcuda-include-gpubinary
Incorporate CUDA device-side binary into host object file.
-fcuda-is-device
Generate code for CUDA device
-fcuda-rdc
-fcuda-short-ptr
Use 32-bit pointers for accessing const/local/shared address spaces
-fcxx-exceptions
Enable C++ exceptions
-fcxx-modules
Enable modules for C++
-fd-lines-as-code
-fd-lines-as-comments
-fdata-sections
Place each data in its own section
-fdebug-compilation-dir=
The compilation directory to embed in the debug info
-fdebug-compilation-dir
-fdebug-default-version=
Default DWARF version to use, if a -g option caused DWARF debug info to be produced
-fdebug-dump-all
Dump symbols and the parse tree after the semantic checks
-fdebug-dump-parse-tree-no-sema
Dump the parse tree (skips the semantic checks)
-fdebug-dump-parse-tree
Dump the parse tree
-fdebug-dump-parsing-log
Run instrumented parse and dump the parsing log
-fdebug-dump-provenance
Dump provenance
-fdebug-dump-symbols
Dump symbols after the semantic analysis
-fdebug-info-for-profiling
Emit extra debug info to make sample profile more accurate
-fdebug-macro
-fdebug-measure-parse-tree
Measure the parse tree
-fdebug-module-writer
Enable debug messages while writing module files
-fdebug-pass-arguments
-fdebug-pass-manager
Prints debug information for the new pass manager
-fdebug-pass-structure
-fdebug-pre-fir-tree
Dump the pre-FIR tree
-fdebug-prefix-map=
remap file source paths in debug info
-fdebug-ranges-base-address
Use DWARF base address selection entries in .debug_ranges
-fdebug-types-section
Place debug types in their own section (ELF Only)
-fdebug-unparse-no-sema
Unparse and stop (skips the semantic checks)
-fdebug-unparse-with-symbols
Unparse and stop.
-fdebug-unparse
-fdebugger-cast-result-to-id
Enable casting unknown expression results to id
-fdebugger-objc-literal
Enable special debugger support for Objective-C subscripting and literals
-fdebugger-support
Enable special debugger support behavior
-fdeclare-opencl-builtins
Add OpenCL builtin function declarations (experimental)
-fdeclspec
Allow __declspec as a keyword
-fdefault-calling-conv=
Set default calling convention
cdecl,fastcall,stdcall,vectorcall,regcall
-fdefault-double-8
Set the default double precision kind to an 8 byte wide type
-fdefault-inline
-fdefault-integer-8
Set the default integer kind to an 8 byte wide type
-fdefault-real-8
Set the default real kind to an 8 byte wide type
-fdefer-pop
-fdelayed-template-parsing
Parse templated function definitions at the end of the translation unit
-fdelete-null-pointer-checks
Treat usage of null pointers as undefined behavior (default)
-fdenormal-fp-math-f32=
-fdenormal-fp-math=
-fdepfile-entry=
-fdeprecated-macro
Defines the __DEPRECATED macro
-fdevirtualize-speculatively
-fdevirtualize
-fdiagnostics-absolute-paths
Print absolute paths in diagnostics
-fdiagnostics-color=
-fdiagnostics-color
-fdiagnostics-fixit-info
-fdiagnostics-format=
-fdiagnostics-format
Change diagnostic formatting to match IDE and command line tools
clang,msvc,vi
-fdiagnostics-hotness-threshold=
Prevent optimization remarks from being output if they do not have at least this profile count. Use 'auto' to apply the threshold from profile summary
<value>
-fdiagnostics-parseable-fixits
Print fix-its in machine parseable form
-fdiagnostics-print-source-range-info
Print source range spans in numeric form
-fdiagnostics-show-category=
-fdiagnostics-show-category
Print diagnostic category
none,id,name
-fdiagnostics-show-hotness
Enable profile hotness information in diagnostic line
-fdiagnostics-show-location=
-fdiagnostics-show-note-include-stack
Display include stacks for diagnostic notes
-fdiagnostics-show-option
Print option name with mappable diagnostics
-fdiagnostics-show-template-tree
Print a template comparison tree for differing templates
-fdigraphs
Enable alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:' (default)
-fdirect-access-external-data
Don't use GOT indirection to reference external data symbols
-fdisable-module-hash
Disable the module hash
-fdiscard-value-names
-fdollar-ok
-fdollars-in-identifiers
Allow '$' in identifiers
-fdouble-square-bracket-attributes
Enable '[[]]' attributes in all C and C++ language modes
-fdump-fortran-optimized
-fdump-fortran-original
-fdump-parse-tree
-fdump-record-layouts-canonical
Dump record layout information with canonical field types
-fdump-record-layouts-complete
Dump record layout information for all complete types
-fdump-record-layouts-simple
Dump record layout information in a simple form used for testing
-fdump-record-layouts
-fdump-vtable-layouts
Dump the layouts of all vtables that will be emitted in a translation unit
-fdwarf-directory-asm
-fdwarf-exceptions
Use DWARF style exceptions
-fdwarf2-cfi-asm
/Fe:
-felide-constructors
-feliminate-unused-debug-symbols
-feliminate-unused-debug-types
Do not emit  debug info for defined but unused types
-fembed-bitcode-marker
Embed placeholder LLVM IR data as a marker
-fembed-bitcode=
Embed LLVM bitcode (option: off, all, bitcode, marker)
<option>
off,all,bitcode,marker
-fembed-bitcode
Embed LLVM IR bitcode as data
-femit-all-decls
Emit all declarations, even if unused
-femulated-tls
Use emutls functions to access thread_local variables
-fenable-matrix
Enable matrix data type and related builtin functions
-fencode-extended-block-signature
enable extended encoding of block type signature
-fencoding=
-ferror-limit=
-ferror-limit
Set the maximum number of errors to emit before stopping (0 = no limit).
-fescaping-block-tail-calls
-fexceptions
Enable support for exception handling
-fexcess-precision=
-fexec-charset=
-fexpensive-optimizations
-fexperimental-debug-variable-locations
Use experimental new value-tracking variable locations
-fexperimental-isel
-fexperimental-new-constant-interpreter
Enable the experimental new constant interpreter
-fexperimental-new-pass-manager
-fexperimental-optimized-argument-temporaries
Reuse stack space around some argument temporaries
-fexperimental-optimized-noescape
-fexperimental-relative-c++-abi-vtables
Use the experimental C++ class ABI for classes with virtual tables
-fexperimental-strict-floating-point
Enables experimental strict floating point in LLVM.
-fextdirs=
-fextend-arguments=
Controls how scalar integer arguments are extended in calls to unprototyped and varargs functions
32,64
-fextended-identifiers
-fexternal-blas
-fexternc-nounwind
Assume all functions with C linkage do not unwind
Set output executable file name
-ff2c
-ffake-address-space-map
Use a fake address space map; OpenCL testing purposes only
-ffast-math
Allow aggressive, lossy floating-point optimizations
-ffat-lto-objects
-ffile-compilation-dir=
The compilation directory to embed in the debug info and coverage mapping.
-ffile-prefix-map=
remap file source paths in debug info, predefined preprocessor macros and __builtin_FILE()
-ffine-grained-bitfield-accesses
Use separate accesses for consecutive bitfield runs with legal widths and alignments.
-ffinite-loops
Assume all loops are finite.
-ffinite-math-only
-ffixed-a0
Reserve the a0 register (M68k only)
-ffixed-a1
Reserve the a1 register (M68k only)
-ffixed-a2
Reserve the a2 register (M68k only)
-ffixed-a3
Reserve the a3 register (M68k only)
-ffixed-a4
Reserve the a4 register (M68k only)
-ffixed-a5
Reserve the a5 register (M68k only)
-ffixed-a6
Reserve the a6 register (M68k only)
-ffixed-d0
Reserve the d0 register (M68k only)
-ffixed-d1
Reserve the d1 register (M68k only)
-ffixed-d2
Reserve the d2 register (M68k only)
-ffixed-d3
Reserve the d3 register (M68k only)
-ffixed-d4
Reserve the d4 register (M68k only)
-ffixed-d5
Reserve the d5 register (M68k only)
-ffixed-d6
Reserve the d6 register (M68k only)
-ffixed-d7
Reserve the d7 register (M68k only)
-ffixed-form
Process source files in fixed form
-ffixed-line-length-
-ffixed-line-length=
Use <value> as character line width in fixed mode
-ffixed-point
Enable fixed point types
-ffixed-r19
Reserve register r19 (Hexagon only)
-ffixed-r9
Reserve the r9 register (ARM only)
-ffixed-x10
Reserve the x10 register (AArch64/RISC-V only)
-ffixed-x11
Reserve the x11 register (AArch64/RISC-V only)
-ffixed-x12
Reserve the x12 register (AArch64/RISC-V only)
-ffixed-x13
Reserve the x13 register (AArch64/RISC-V only)
-ffixed-x14
Reserve the x14 register (AArch64/RISC-V only)
-ffixed-x15
Reserve the x15 register (AArch64/RISC-V only)
-ffixed-x16
Reserve the x16 register (AArch64/RISC-V only)
-ffixed-x17
Reserve the x17 register (AArch64/RISC-V only)
-ffixed-x18
Reserve the x18 register (AArch64/RISC-V only)
-ffixed-x19
Reserve the x19 register (AArch64/RISC-V only)
-ffixed-x1
Reserve the x1 register (AArch64/RISC-V only)
-ffixed-x20
Reserve the x20 register (AArch64/RISC-V only)
-ffixed-x21
Reserve the x21 register (AArch64/RISC-V only)
-ffixed-x22
Reserve the x22 register (AArch64/RISC-V only)
-ffixed-x23
Reserve the x23 register (AArch64/RISC-V only)
-ffixed-x24
Reserve the x24 register (AArch64/RISC-V only)
-ffixed-x25
Reserve the x25 register (AArch64/RISC-V only)
-ffixed-x26
Reserve the x26 register (AArch64/RISC-V only)
-ffixed-x27
Reserve the x27 register (AArch64/RISC-V only)
-ffixed-x28
Reserve the x28 register (AArch64/RISC-V only)
-ffixed-x29
Reserve the x29 register (AArch64/RISC-V only)
-ffixed-x2
Reserve the x2 register (AArch64/RISC-V only)
-ffixed-x30
Reserve the x30 register (AArch64/RISC-V only)
-ffixed-x31
Reserve the x31 register (AArch64/RISC-V only)
-ffixed-x3
Reserve the x3 register (AArch64/RISC-V only)
-ffixed-x4
Reserve the x4 register (AArch64/RISC-V only)
-ffixed-x5
Reserve the x5 register (AArch64/RISC-V only)
-ffixed-x6
Reserve the x6 register (AArch64/RISC-V only)
-ffixed-x7
Reserve the x7 register (AArch64/RISC-V only)
-ffixed-x8
Reserve the x8 register (AArch64/RISC-V only)
-ffixed-x9
Reserve the x9 register (AArch64/RISC-V only)
-ffloat-store
-ffor-scope
-fforbid-guard-variables
Emit an error if a C++ static local initializer would need a guard variable
-fforce-addr
-fforce-dwarf-frame
Always emit a debug frame section
-fforce-emit-vtables
Emits more virtual tables to improve devirtualization
-fforce-enable-int128
Enable support for int128_t type
-ffp-contract=
Form fused FP ops (e.g. FMAs): fast (fuses across statements disregarding pragmas) | on (only fuses in the same statement unless dictated by pragmas) | off (never fuses) | fast-honor-pragmas (fuses across statements unless diectated by pragmas). Default is 'fast' for CUDA, 'fast-honor-pragmas' for HIP, and 'on' otherwise.
fast,on,off,fast-honor-pragmas
-ffp-exception-behavior=
Specifies the exception behavior of floating-point operations.
ignore,maytrap,strict
-ffp-model=
Controls the semantics of floating-point calculations.
-ffpe-trap=
-ffree-form
Process source files in free form
-ffree-line-length-
-ffreestanding
Assert that the compilation takes place in a freestanding environment
-ffriend-injection
-ffrontend-optimize
-ffuchsia-api-level=
Set Fuchsia API level
-ffunction-attribute-list
-ffunction-sections
Place each function in its own section
-fgcse-after-reload
-fgcse-las
-fgcse-sm
-fgcse
-fgeneric-block-helpers-use-extended-layout
Generic block helpers use extended layout
-fgeneric-block-helpers
Use generic block helpers for copying/destroying blocks
-fget-definition
Get the symbol definition from <line> <start-column> <end-column>
-fget-symbols-sources
Dump symbols and their source code locations
-fglobal-isel
Enables the global instruction selector
-fgnu-inline-asm
-fgnu-keywords
Allow GNU-extension keywords regardless of language standard
-fgnu-runtime
Generate output compatible with the standard GNU Objective-C runtime
-fgnu89-inline
Use the gnu89 inline semantics
-fgnuc-version=
Sets various macros to claim compatibility with the given GCC version (default is 4.2.1)
-fgnu
-fgpu-allow-device-init
Allow device side init function in HIP (experimental)
-fgpu-defer-diag
Defer host/device related diagnostic messages for CUDA/HIP
-fgpu-exclude-wrong-side-overloads
Always exclude wrong side overloads in overloading resolution for CUDA/HIP
-fgpu-flush-denormals-to-zero
Flush denormal floating point values to zero in CUDA/HIP device mode.
-fgpu-inline-threshold=
Inline threshold for device compilation for CUDA/HIP
-fgpu-rdc
Generate relocatable device code, also known as separate compilation mode
-fgpu-sanitize
Enable sanitizer for AMDGPU target
-fhalf-no-semantic-interposition
Like -fno-semantic-interposition but don't use local aliases
-fheinous-gnu-extensions
-fhip-dump-offload-linker-script
-fhip-fp32-correctly-rounded-divide-sqrt
Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
-fhip-new-launch-api
Use new kernel launching API for HIP
-fhonor-infinites
-fhonor-infinities
-fhonor-nans
-fhosted
-fident
-fignore-exceptions
Enable support for ignoring exception handling constructs
-fignore-objc-weak
ignore __weak qualifiers in manual reference counting
-filelist
-filetype
Specify the output file type ('asm', 'null', or 'obj')
-fimplement-inlines
-fimplicit-module-maps
Implicitly search the file system for module map files.
-fimplicit-modules-use-lock
Use filesystem locks for implicit modules builds to avoid duplicating work in competing clang invocations.
-fimplicit-modules
-fimplicit-none
No implicit typing allowed unless overridden by IMPLICIT statements
-fimplicit-templates
-fin-descriptor-block-flags
Emit in-descriptor block flags
-finclude-default-header
Include default header file for OpenCL
-findirect-virtual-calls
-finit-character=
-finit-integer=
-finit-local-zero
-finit-logical=
-finit-real=
-finline-functions-called-once
-finline-functions
Inline suitable functions
-finline-hint-functions
Inline functions which are (explicitly or implicitly) marked inline
-finline-limit=
-finline-limit
-finline-small-functions
-finline
-finput-charset=
Specify the default character set for source files
-finstrument-function-entry-bare
Instrument function entry only, after inlining, without arguments to the instrumentation call
-finstrument-functions-after-inlining
Like -finstrument-functions, but insert the calls after inlining
-finstrument-functions
Generate calls to instrument function entry and exit
-finteger-4-integer-8
-fintegrated-as
Enable the integrated assembler
-fintegrated-cc1
Run cc1 in-process
-fintrinsic-modules-path
Specify where to find the compiled intrinsic modules
-fipa-cp
-fivopts
-fix-only-warnings
Apply fix-it advice only for warnings, not errors
-fix-what-you-can
Apply fix-it advice even in the presence of unfixable errors
-fixit-recompile
Apply fix-it changes and recompile
-fixit-to-temporary
Apply fix-it changes to temporary files
-fixit=
Apply fix-it advice creating a file with the given suffix
-fixit
Apply fix-it advice to the input source
Include file before parsing
Set preprocess output file name (with /P)
-fjump-tables
Use jump tables for lowering switches
-fkeep-inline-functions
-fkeep-static-consts
Keep static const variables if unused
-flarge-sizes
Use INTEGER(KIND=8) for the result type in size-related intrinsics
-flat_namespace
-flax-vector-conversions=
Enable implicit vector bit-casts
none,integer,all
-flax-vector-conversions
-flegacy-pass-manager
Use the legacy pass manager in LLVM (deprecated, to be removed in a future release)
-flimit-debug-info
-flimited-precision=
-flogical-abbreviations
Enable logical abbreviations
-flto-jobs=
Controls the backend parallelism of -flto=thin (default of 0 means the number of threads will be derived from the number of CPUs detected)
-flto-unit
Emit IR to support LTO unit features (CFI, whole program vtable opt)
-flto-visibility-public-std
Use public LTO visibility for classes in std and stdext namespaces
-flto=auto
Enable LTO in 'full' mode
-flto=jobserver
-flto=
Set LTO mode to either 'full' or 'thin'
thin,full
-flto
-fmacro-backtrace-limit=
-fmacro-backtrace-limit
Set the maximum number of entries to print in a macro expansion backtrace (0 = no limit).
-fmacro-prefix-map=
remap file source paths in predefined preprocessor macros and __builtin_FILE()
-fmath-errno
Require math functions to indicate errors by setting errno
-fmax-array-constructor=
-fmax-errors=
-fmax-identifier-length
-fmax-stack-var-size=
-fmax-subrecord-length=
-fmax-tokens=
Max total number of preprocessed tokens for -Wmax-tokens.
-fmax-type-align=
Specify the maximum alignment to enforce on pointers lacking an explicit alignment
-fmemory-profile=
Enable heap memory profiling and dump results into <directory>
-fmemory-profile
Enable heap memory profiling
-fmerge-all-constants
Allow merging of constants
-fmerge-constants
-fmerge-functions
Permit merging of identical functions when optimizing.
-fmessage-length=
Format message diagnostics so that they fit within N columns
-fminimize-whitespace
Minimize whitespace when emitting preprocessor output
-fmodule-feature
Enable <feature> in module map requires declarations
<feature>
-fmodule-file-deps
-fmodule-file=
Specify the mapping of module name to precompiled module file, or load a module file if name is omitted.
[<name>=]<file>
-fmodule-format=
Select the container format for clang modules and PCH. Supported options are 'raw' and 'obj'.
-fmodule-implementation-of
-fmodule-map-file-home-is-cwd
Use the current working directory as the home directory of module maps specified by -fmodule-map-file=<FILE>
-fmodule-map-file=
Load this module map file
-fmodule-maps
-fmodule-name=
Specify the name of the module to build
-fmodule-private
-fmodule-related-to-pch
Mark module as related to a PCH
-fmodules-cache-path=
Specify the module cache path
-fmodules-codegen
Generate code for uses of this module that assumes an explicit object file will be built for the module
-fmodules-debuginfo
Generate debug info for types in an object file built from this module and do not generate them elsewhere
-fmodules-decluse
Require declaration of modules used within a module
-fmodules-disable-diagnostic-validation
Disable validation of the diagnostic options when loading the module
-fmodules-embed-all-files
Embed the contents of all files read by this compilation into the produced module file.
-fmodules-embed-file=
Embed the contents of the specified file into the module file being compiled.
-fmodules-hash-content
Enable hashing the content of a module file
-fmodules-hash-error-diagnostics
Use a separate module cache for modules compiled with conflicting -Werror options
-fmodules-ignore-macro=
Ignore the definition of the given macro when building and loading modules
-fmodules-local-submodule-visibility
Enforce name visibility rules across submodules of the same top-level module.
-fmodules-prune-after=
Specify the interval (in seconds) after which a module file will be considered unused
<seconds>
-fmodules-prune-interval=
Specify the interval (in seconds) between attempts to prune the module cache
-fmodules-search-all
Search even non-imported modules to resolve references
-fmodules-strict-context-hash
Enable hashing of all compiler options that could impact the semantics of a module in an implicit build
-fmodules-strict-decluse
Like -fmodules-decluse but requires all headers to be in modules
-fmodules-ts
Enable support for the C++ Modules TS
-fmodules-user-build-path
Specify the module user build path
-fmodules-validate-input-files-content
Validate PCM input files based on content if mtime differs
-fmodules-validate-once-per-build-session
Don't verify input files for the modules if the module has been successfully validated or loaded during this build session
-fmodules-validate-system-headers
Validate the system headers that a module depends on when loading the module
-fmodules
Enable the 'modules' language feature
-fmodulo-sched-allow-regmoves
-fmodulo-sched
-fms-compatibility-version=
Dot-separated value representing the Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
-fms-compatibility
Enable full Microsoft Visual C++ compatibility
-fms-extensions
Accept some non-standard constructs supported by the Microsoft compiler
-fms-memptr-rep=
single,multiple,virtual
-fms-volatile
-fmsc-version=
Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
-fmudflapth
-fmudflap
-fnative-half-arguments-and-returns
Use the native __fp16 type for arguments and returns (and skip ABI-specific lowering)
-fnative-half-type
Use the native half type for __fp16 instead of promoting to float
-fnested-functions
-fnew-alignment=
Specifies the largest alignment guaranteed by '::operator new(size_t)'
<align>
-fnew-alignment
-fnew-infallible
Treats throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
-fnext-runtime
-fno-aapcs-bitfield-width
Do not follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
-fno-access-control
Disable C++ access control
-fno-addrsig
Don't emit an address-significance table
-fno-aggressive-function-elimination
-fno-align-commons
-fno-align-functions
-fno-align-jumps
-fno-align-labels
-fno-align-loops
-fno-aligned-allocation
-fno-aligned-new
-fno-all-intrinsics
-fno-allow-editor-placeholders
-fno-altivec
-fno-analyzed-objects-for-unparse
Do not use the analyzed objects when unparsing
-fno-apinotes-modules
Disable module-based external API notes support
-fno-apinotes
Disable external API notes support
-fno-apple-pragma-pack
-fno-application-extension
-fno-approx-func
-fno-asm-blocks
-fno-asm
-fno-associative-math
-fno-assume-sane-operator-new
Don't assume that C++'s global operator new can't alias any pointer
-fno-async-exceptions
-fno-asynchronous-unwind-tables
-fno-auto-profile-accurate
-fno-auto-profile
-fno-autolink
Disable generation of linker directives for automatic library linking
-fno-automatic
-fno-backslash
-fno-backtrace
-fno-bitfield-type-align
Ignore bit-field types when aligning structures
-fno-blocks
-fno-borland-extensions
-fno-bounds-check
-fno-branch-count-reg
-fno-branch-target-identification
-fno-builtin-
Disable implicit builtin knowledge of a specific function
-fno-builtin
Disable implicit builtin knowledge of functions
-fno-c++-static-destructors
Disable C++ static destructor registration
-fno-caller-saves
-fno-caret-diagnostics
-fno-char8_t
Disable C++ builtin type char8_t
-fno-check-array-temporaries
-fno-check-new
-fno-color-diagnostics
Disable colors in diagnostics
-fno-common
Compile common globals like normal definitions
-fno-complete-member-pointers
Do not require member pointer base types to be complete if they would be significant under the Microsoft ABI
-fno-concept-satisfaction-caching
Disable satisfaction caching for C++2a Concepts.
-fno-const-strings
Don't use a const qualified type for string literals in C and ObjC
-fno-constant-cfstrings
Disable creation of CodeFoundation-type constant strings
-fno-constant-nsarray-literals
Disable creation of CodeFoundation-type constant initializer `NSArray`s from array literals
-fno-constant-nsdictionary-literals
Disable creation of CodeFoundation-type constant initializer `NSDictionary`s from dictionary literals
-fno-constant-nsnumber-literals
Disable creation of CodeFoundation-type constant initializer `NSNumber`s from number literals
-fno-coroutines-ts
-fno-coverage-mapping
Disable code coverage analysis
-fno-crash-diagnostics
Disable auto-generation of preprocessed source files and a script for reproduction during a clang crash
-fno-cray-pointer
-fno-cuda-approx-transcendentals
Don't use approximate transcendental functions
-fno-cuda-flush-denormals-to-zero
-fno-cuda-host-device-constexpr
Don't treat unattributed constexpr functions as __host__ __device__.
-fno-cuda-rdc
-fno-cuda-short-ptr
-fno-cxx-exceptions
-fno-cxx-modules
Disable modules for C++
-fno-d-lines-as-code
-fno-d-lines-as-comments
-fno-data-sections
-fno-debug-info-for-profiling
-fno-debug-macro
Do not emit macro debug information
-fno-debug-pass-manager
Disables debug printing for the new pass manager
-fno-debug-ranges-base-address
-fno-debug-types-section
-fno-declspec
Disallow __declspec as a keyword
-fno-default-inline
-fno-defer-pop
-fno-delayed-template-parsing
Disable delayed template parsing
-fno-delete-null-pointer-checks
Do not treat usage of null pointers as undefined behavior
-fno-deprecated-macro
Undefines the __DEPRECATED macro
-fno-devirtualize-speculatively
-fno-devirtualize
-fno-diagnostics-color
-fno-diagnostics-fixit-info
Do not include fixit information in diagnostics
-fno-diagnostics-show-hotness
-fno-diagnostics-show-note-include-stack
-fno-diagnostics-show-option
-fno-diagnostics-use-presumed-location
Ignore #line directives when displaying diagnostic locations
-fno-digraphs
Disallow alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:'
-fno-direct-access-external-data
Use GOT indirection to reference external data symbols
-fno-discard-value-names
Do not discard value names in LLVM IR
-fno-dllexport-inlines
-fno-dollar-ok
-fno-dollars-in-identifiers
Disallow '$' in identifiers
-fno-double-square-bracket-attributes
Disable '[[]]' attributes in all C and C++ language modes
-fno-dump-fortran-optimized
-fno-dump-fortran-original
-fno-dump-parse-tree
-fno-dwarf-directory-asm
-fno-dwarf2-cfi-asm
-fno-elide-constructors
Disable C++ copy constructor elision
-fno-elide-type
Do not elide types when printing diagnostics
-fno-eliminate-unused-debug-symbols
-fno-eliminate-unused-debug-types
Emit  debug info for defined but unused types
-fno-emulated-tls
-fno-escaping-block-tail-calls
-fno-exceptions
Disable support for exception handling
-fno-expensive-optimizations
-fno-experimental-isel
-fno-experimental-new-pass-manager
-fno-experimental-relative-c++-abi-vtables
Do not use the experimental C++ class ABI for classes with virtual tables
-fno-extended-identifiers
-fno-external-blas
-fno-f2c
-fno-fast-math
-fno-fat-lto-objects
-fno-fine-grained-bitfield-accesses
Use large-integer access for consecutive bitfield runs.
-fno-finite-loops
Do not assume that any loop is finite.
-fno-finite-math-only
-fno-fixed-point
Disable fixed point types
-fno-float-store
-fno-for-scope
-fno-force-dwarf-frame
-fno-force-emit-vtables
-fno-force-enable-int128
Disable support for int128_t type
-fno-friend-injection
-fno-frontend-optimize
-fno-function-attribute-list
-fno-function-sections
-fno-gcse-after-reload
-fno-gcse-las
-fno-gcse-sm
-fno-gcse
-fno-generic-block-helpers-use-extended-layout
Generic block helpers don't use extended layout
-fno-generic-block-helpers
Don't use generic block helpers for copying/destroying blocks
-fno-global-isel
Disables the global instruction selector
-fno-gnu-inline-asm
Disable GNU style inline asm
-fno-gnu-keywords
-fno-gnu89-inline
-fno-gnu
-fno-gpu-allow-device-init
Don't allow device side init function in HIP (experimental)
-fno-gpu-defer-diag
Don't defer host/device related diagnostic messages for CUDA/HIP
-fno-gpu-exclude-wrong-side-overloads
Exclude wrong side overloads only if there are same side overloads in overloading resolution for CUDA/HIP
-fno-gpu-flush-denormals-to-zero
-fno-gpu-rdc
-fno-gpu-sanitize
-fno-hip-fp32-correctly-rounded-divide-sqrt
Don't specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
-fno-hip-new-launch-api
Don't use new kernel launching API for HIP
-fno-honor-infinites
-fno-honor-infinities
-fno-honor-nans
-fno-ident
-fno-implement-inlines
-fno-implicit-module-maps
-fno-implicit-modules-use-lock
-fno-implicit-modules
-fno-implicit-none
-fno-implicit-templates
-fno-in-descriptor-block-flags
Don't emit in-descriptor block flags
-fno-init-local-zero
-fno-inline-functions-called-once
-fno-inline-functions
-fno-inline-limit
-fno-inline-small-functions
-fno-inline
-fno-integer-4-integer-8
-fno-integrated-as
Disable the integrated assembler
-fno-integrated-cc1
Spawn a separate process for each cc1
-fno-ipa-cp
-fno-ivopts
-fno-jump-tables
Do not use jump tables for lowering switches
-fno-keep-inline-functions
-fno-keep-static-consts
Don't keep static const variables if unused
-fno-lax-vector-conversions
-fno-legacy-pass-manager
Use the new pass manager in LLVM
-fno-limit-debug-info
-fno-logical-abbreviations
-fno-lto-unit
-fno-lto
Disable LTO mode (default)
-fno-math-builtin
Disable implicit builtin knowledge of math functions
-fno-math-errno
-fno-max-identifier-length
-fno-max-type-align
-fno-memory-profile
Disable heap memory profiling
-fno-merge-all-constants
Disallow merging of constants
-fno-merge-constants
-fno-minimize-whitespace
-fno-module-file-deps
-fno-module-maps
-fno-module-private
-fno-modules-decluse
-fno-modules-error-recovery
Do not automatically import modules for error recovery
-fno-modules-global-index
Do not automatically generate or update the global module index
-fno-modules-search-all
-fno-modules-validate-system-headers
-fno-modules
-fno-modulo-sched-allow-regmoves
-fno-modulo-sched
-fno-ms-compatibility
-fno-ms-extensions
-fno-non-call-exceptions
-fno-objc-arc-exceptions
-fno-objc-arc
-fno-objc-avoid-heapify-local-blocks
Don't try to avoid heapifying local blocks
-fno-objc-convert-messages-to-runtime-calls
-fno-objc-encode-cxx-class-template-spec
-fno-objc-exceptions
-fno-objc-infer-related-result-type
do not infer Objective-C related result type based on method family
-fno-objc-legacy-dispatch
-fno-objc-msgsend-selector-stubs
-fno-objc-nonfragile-abi
-fno-objc-relative-method-lists
-fno-objc-weak
-fno-odr-hash-categories
Disable ODR hash checking for categories
-fno-odr-hash-interfaces
Disable ODR hash checking for interfaces
-fno-odr-hash-ivars
Disable ODR hash checking for ivars
-fno-odr-hash-methods
Disable ODR hash checking for methods
-fno-odr-hash-properties
Disable ODR hash checking for properties
-fno-odr-hash-protocols
Disable ODR hash checking for protocols
-fno-odr-hash-records
Disable ODR hash checking for records
-fno-offload-lto
Disable LTO mode (default) for offload compilation
-fno-omit-frame-pointer
-fno-openmp-assume-teams-oversubscription
-fno-openmp-assume-threads-oversubscription
-fno-openmp-cuda-force-full-runtime
-fno-openmp-cuda-mode
-fno-openmp-extensions
Disable all Clang extensions for OpenMP directives and clauses
-fno-openmp-optimistic-collapse
-fno-openmp-simd
-fno-openmp-target-debug
-fno-openmp-target-new-runtime
-fno-openmp
-fno-operator-names
Do not treat C++ operator name keywords as synonyms for operators
-fno-optimize-sibling-calls
-fno-pack-derived
-fno-pack-struct
-fno-padding-on-unsigned-fixed-point
-fno-pascal-strings
-fno-pch-codegen
Do not generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
-fno-pch-debuginfo
Do not generate debug info for types in an object file built from this PCH and do not generate them elsewhere
-fno-pch-instantiate-templates
-fno-pch-timestamp
Disable inclusion of timestamp in precompiled headers
-fno-peel-loops
-fno-permissive
-fno-PIC
-fno-pic
-fno-PIE
-fno-pie
-fno-plt
Use GOT indirection instead of PLT to make external function calls (x86 only)
-fno-prebuilt-implicit-modules
-fno-prefetch-loop-arrays
-fno-preserve-as-comments
Do not preserve comments in inline assembly
-fno-printf
-fno-profile-arcs
-fno-profile-correction
-fno-profile-generate-sampling
-fno-profile-generate
Disable generation of profile instrumentation.
-fno-profile-instr-generate
-fno-profile-instr-use
Disable using instrumentation data for profile-guided optimization
-fno-profile-reusedist
-fno-profile-sample-accurate
-fno-profile-sample-use
-fno-profile-use
-fno-profile-values
-fno-profile
-fno-protect-parens
-fno-pseudo-probe-for-profiling
Do not emit pseudo probes for sample profiling
-fno-ptrauth-abi-version
Disable Pointer Authentication ABI versioning
-fno-ptrauth-auth-traps
-fno-ptrauth-block-descriptor-pointers
-fno-ptrauth-calls
-fno-ptrauth-function-pointer-type-discrimination
-fno-ptrauth-indirect-gotos
-fno-ptrauth-intrinsics
-fno-ptrauth-kernel-abi-version
Disable Pointer Authentication kernel ABI versioning
-fno-ptrauth-objc-class-ro
-fno-ptrauth-objc-interface-sel
-fno-ptrauth-objc-isa
-fno-ptrauth-returns
-fno-ptrauth-soft
-fno-ptrauth-vtable-pointer-address-discrimination
-fno-ptrauth-vtable-pointer-type-discrimination
-fno-range-check
-fno-real-4-real-10
-fno-real-4-real-16
-fno-real-4-real-8
-fno-real-8-real-10
-fno-real-8-real-16
-fno-real-8-real-4
-fno-realloc-lhs
-fno-reciprocal-math
-fno-record-command-line
-fno-record-gcc-switches
-fno-recovery-ast-type
-fno-recovery-ast
-fno-recursive
-fno-reformat
Dump the cooked character stream in -E mode
-fno-register-global-dtors-with-atexit
Don't use atexit or __cxa_atexit to register global destructors
-fno-regs-graph
-fno-relaxed-template-template-args
-fno-rename-registers
-fno-reorder-blocks
-fno-repack-arrays
-fno-reroll-loops
-fno-rewrite-imports
-fno-rewrite-includes
-fno-ripa
-fno-ropi
-fno-rounding-math
-fno-rtlib-add-rpath
Do not add -rpath with architecture-specific resource directory to the linker flags
-fno-rtti-data
Disable generation of RTTI data
-fno-rtti
Disable generation of rtti information
-fno-rwpi
-fno-sanitize-address-outline-instrumentation
Use default code inlining logic for the address sanitizer
-fno-sanitize-address-poison-custom-array-cookie
Disable poisoning array cookies when using custom operator new[] in AddressSanitizer
-fno-sanitize-address-use-after-scope
Disable use-after-scope detection in AddressSanitizer
-fno-sanitize-address-use-odr-indicator
Disable ODR indicator globals
/fno-sanitize-address-vcasan-lib
-fno-sanitize-blacklist
-fno-sanitize-cfi-canonical-jump-tables
Do not make the jump table addresses canonical in the symbol table
-fno-sanitize-cfi-cross-dso
Disable control flow integrity (CFI) checks for cross-DSO calls.
-fno-sanitize-coverage=
Disable features of coverage instrumentation for Sanitizers
func,bb,edge,indirect-calls,trace-bb,trace-cmp,trace-div,trace-gep,8bit-counters,trace-pc,trace-pc-guard,no-prune,inline-8bit-counters,inline-bool-flag
-fno-sanitize-hwaddress-experimental-aliasing
Disable aliasing mode in HWAddressSanitizer
-fno-sanitize-ignorelist
Don't use ignorelist file for sanitizers
-fno-sanitize-link-c++-runtime
-fno-sanitize-link-runtime
-fno-sanitize-memory-track-origins
Disable origins tracking in MemorySanitizer
-fno-sanitize-memory-use-after-dtor
Disable use-after-destroy detection in MemorySanitizer
-fno-sanitize-minimal-runtime
-fno-sanitize-recover=
Disable recovery for specified sanitizers
-fno-sanitize-recover
-fno-sanitize-stats
Disable sanitizer statistics gathering.
-fno-sanitize-thread-atomics
Disable atomic operations instrumentation in ThreadSanitizer
-fno-sanitize-thread-func-entry-exit
Disable function entry/exit instrumentation in ThreadSanitizer
-fno-sanitize-thread-memory-access
Disable memory access instrumentation in ThreadSanitizer
-fno-sanitize-trap=
Disable trapping for specified sanitizers
-fno-sanitize-trap
Disable trapping for all sanitizers
-fno-sanitize-undefined-trap-on-error
-fno-sanitize=
-fno-save-optimization-record
-fno-schedule-insns2
-fno-schedule-insns
-fno-second-underscore
-fno-see
-fno-semantic-interposition
-fno-short-enums
-fno-short-wchar
Force wchar_t to be an unsigned int
-fno-show-column
Do not include column number on diagnostics
-fno-show-source-location
Do not include source location information with diagnostics
-fno-sign-zero
-fno-signaling-math
-fno-signaling-nans
-fno-signed-char
char is unsigned
-fno-signed-wchar
Use an unsigned type for wchar_t
-fno-signed-zeros
Allow optimizations that ignore the sign of floating point zeros
-fno-single-precision-constant
-fno-sized-deallocation
-fno-slp-vectorize-aggressive
-fno-slp-vectorize
-fno-small-block-descriptors
-fno-spec-constr-count
-fno-spell-checking
Disable spell-checking
-fno-split-cold-code
Disable splitting of cold code when optimizing.
-fno-split-dwarf-inlining
-fno-split-lto-unit
-fno-split-machine-functions
Disable late function splitting using profile information (x86 ELF)
-fno-split-stack
Wouldn't use segmented stack
-fno-stack-arrays
-fno-stack-check
Disable stack checking
-fno-stack-clash-protection
Disable stack clash protection
-fno-stack-protector
Disable the use of stack protectors
-fno-stack-size-section
-fno-standalone-debug
Limit debug information produced to reduce size of debug binary
-fno-strength-reduce
-fno-strict-aliasing
-fno-strict-enums
-fno-strict-float-cast-overflow
Relax language rules and try to match the behavior of the target's native float-to-int conversion instructions
-fno-strict-modules-decluse
-fno-strict-overflow
-fno-strict-return
Don't treat control flow paths that fall off the end of a non-void function as unreachable
-fno-strict-vtable-pointers
-fno-struct-path-tbaa
-fno-sycl
Disables SYCL kernels compilation for device
-fno-target-variant-availability-checks
-fno-temp-file
Directly create compilation output files. This may lead to incorrect incremental builds if the compiler crashes
-fno-test-coverage
-fno-threadsafe-statics
Do not emit code to make initialization of local statics thread safe
-fno-tls-model
-fno-tracer
-fno-trapping-math
-fno-tree-dce
-fno-tree-salias
-fno-tree-slp-vectorize
-fno-tree-ter
-fno-tree-vectorizer-verbose
-fno-tree-vectorize
-fno-tree-vrp
-fno-trigraphs
Do not process trigraph sequences
-fno-underscoring
-fno-unique-basic-block-section-names
-fno-unique-internal-linkage-names
-fno-unique-section-names
Don't use unique names for text and data sections
-fno-unit-at-a-time
-fno-unroll-all-loops
-fno-unroll-loops
Turn off loop unroller
-fno-unsafe-loop-optimizations
-fno-unsafe-math-optimizations
-fno-unsigned-char
-fno-unswitch-loops
-fno-unwind-tables
-fno-use-ctor-homing
Don't use constructor homing for debug info
-fno-use-cxa-atexit
Don't use __cxa_atexit for calling destructors
-fno-use-init-array
Use .ctors/.dtors instead of .init_array/.fini_array
-fno-use-line-directives
-fno-use-linker-plugin
-fno-validate-pch
Disable validation of precompiled headers
-fno-var-tracking
-fno-variable-expansion-in-unroller
-fno-vect-cost-model
-fno-vectorize
-fno-verbose-asm
-fno-virtual-function-elimination
-fno-visibility-from-dllstorageclass
-fno-visibility-inlines-hidden-static-local-var
Disables -fvisibility-inlines-hidden-static-local-var (this is the default on non-darwin targets)
-fno-visibility-inlines-hidden
-fno-wchar
Disable C++ builtin type wchar_t
-fno-web
-fno-whole-file
-fno-whole-program-vtables
-fno-whole-program
-fno-working-directory
-fno-wrapv
-fno-xl-pragma-pack
-fno-xor-operator
-fno-xray-always-emit-customevents
-fno-xray-always-emit-typedevents
-fno-xray-function-index
Omit function index section at the expense of single-function patching performance
-fno-xray-ignore-loops
-fno-xray-instrument
-fno-zero-initialized-in-bss
Don't place zero initialized data in BSS
-fno-zvector
-fno_modules-validate-input-files-content
-fno_pch-validate-input-files-content
-fnon-call-exceptions
-fnoopenmp-relocatable-target
-fnoopenmp-use-tls
-fnoxray-link-deps
-fobjc-abi-version=
-fobjc-arc-cxxlib=
Objective-C++ Automatic Reference Counting standard library kind
libc++,libstdc++,none
-fobjc-arc-exceptions
Use EH-safe code when synthesizing retains and releases in -fobjc-arc
-fobjc-arc
Synthesize retain and release calls for Objective-C pointers
-fobjc-atdefs
-fobjc-avoid-heapify-local-blocks
Try to avoid heapifying local blocks
-fobjc-call-cxx-cdtors
-fobjc-constant-literals
-fobjc-convert-messages-to-runtime-calls
-fobjc-disable-direct-methods-for-testing
Ignore attribute objc_direct so that direct methods can be tested
-fobjc-dispatch-method=
Objective-C dispatch method to use
legacy,non-legacy,mixed
-fobjc-encode-cxx-class-template-spec
Fully encode c++ class template specialization
-fobjc-exceptions
Enable Objective-C exceptions
-fobjc-gc-only
Use GC exclusively for Objective-C related memory management
-fobjc-gc
Enable Objective-C garbage collection
-fobjc-infer-related-result-type
-fobjc-legacy-dispatch
-fobjc-link-runtime
-fobjc-msgsend-selector-stubs
-fobjc-new-property
-fobjc-nonfragile-abi-version=
-fobjc-nonfragile-abi
-fobjc-relative-method-lists
Enable relative method lists
-fobjc-runtime-has-weak
The target Objective-C runtime supports ARC weak operations
-fobjc-runtime=
Specify the target Objective-C runtime kind and version
-fobjc-sender-dependent-dispatch
-fobjc-subscripting-legacy-runtime
Allow Objective-C array and dictionary subscripting in legacy runtime
-fobjc-weak
Enable ARC-style weak references in Objective-C
-fodr-hash-attributes
Enable ODR hash checking for attributes 
-foffload-lto=
Set LTO mode to either 'full' or 'thin' for offload compilation
-foffload-lto
Enable LTO in 'full' mode for offload compilation
-fomit-frame-pointer
-fopenacc
Enable OpenACC
-fopenmp-assume-teams-oversubscription
-fopenmp-assume-threads-oversubscription
-fopenmp-cuda-blocks-per-sm=
-fopenmp-cuda-force-full-runtime
-fopenmp-cuda-mode
-fopenmp-cuda-number-of-sm=
-fopenmp-cuda-teams-reduction-recs-num=
-fopenmp-enable-irbuilder
Use the experimental OpenMP-IR-Builder codegen path.
-fopenmp-extensions
Enable all Clang extensions for OpenMP directives and clauses
-fopenmp-host-ir-file-path
Path to the IR file produced by the frontend for the host.
-fopenmp-is-device
Generate code only for an OpenMP target device.
-fopenmp-optimistic-collapse
-fopenmp-relocatable-target
-fopenmp-simd
Emit OpenMP code only for SIMD-based constructs.
-fopenmp-target-debug=
-fopenmp-target-debug
Enable debugging in the OpenMP offloading device RTL
-fopenmp-target-new-runtime
Use the new bitcode library for OpenMP offloading
-fopenmp-targets=
Specify comma-separated list of triples OpenMP offloading targets to be supported
-fopenmp-use-tls
-fopenmp-version=
-fopenmp=
-fopenmp
Parse OpenMP pragmas and generate parallel code.
-foperator-arrow-depth=
-foperator-arrow-depth
Maximum number of 'operator->'s to call for a member access
-foperator-names
-foptimization-record-file=
Specify the output name of the file containing the optimization remarks. Implies -fsave-optimization-record. On Darwin platforms, this cannot be used with multiple -arch <arch> options.
-foptimization-record-passes=
Only include passes which match a specified regular expression in the generated optimization record (by default, include all passes)
<regex>
-foptimize-sibling-calls
--for-linker=
--for-linker
--force-link=
--force-link
-force_cpusubtype_ALL
-force_flat_namespace
-force_load
-forder-file-instrumentation
Generate instrumented code to collect order file into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
-foutput-class-dir=
-foverride-record-layout=
Override record layouts with those in the given file
Set output object file (with /c)
/fp:except-
/fp:except
/fp:fast
/fp:precise
/fp:strict
-fpack-derived
-fpack-struct=
Specify the default maximum struct packing alignment
-fpack-struct
-fpadding-on-unsigned-fixed-point
Force each unsigned fixed point type to have an extra bit of padding to align their scales with those of signed fixed point types
-fparse-all-comments
-fpascal-strings
Recognize and construct Pascal-style string literals
-fpass-by-value-is-noalias
Allows assuming by-value parameters do not alias any other value. Has no effect on non-trivially-copyable classes in C++.
-fpass-plugin=
Load pass plugin from a dynamic shared object file (only with new pass manager).
<dsopath>
-fpatchable-function-entry-offset=
Generate M NOPs before function entry
-fpatchable-function-entry=
Generate M NOPs before function entry and N-M NOPs after function entry
<N,M>
-fpcc-struct-return
Override the default ABI to return all structs on the stack
-fpch-codegen
Generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
-fpch-debuginfo
Generate debug info for types in an object file built from this PCH and do not generate them elsewhere
-fpch-instantiate-templates
Instantiate templates already while building a PCH
-fpch-preprocess
-fpch-validate-input-files-content
Validate PCH input files based on content if mtime differs
-fpeel-loops
-fpermissive
-fPIC
-fpic
-fPIE
-fpie
-fplt
-fplugin=
Load the named plugin (dynamic shared object)
-fprebuilt-implicit-modules
Look up implicit modules in the prebuilt module path
-fprebuilt-module-path=
Specify the prebuilt module path
-fprefetch-loop-arrays
-fpreserve-as-comments
-fpreserve-vec3-type
Preserve 3-component vector type
-fprintf
-fproc-stat-report=
Save subprocess statistics to the given file
-fproc-stat-report
Print subprocess statistics
-fprofile-arcs
-fprofile-correction
-fprofile-dir=
-fprofile-exclude-files=
Instrument only functions from files where names don't match all the regexes separated by a semi-colon
-fprofile-filter-files=
Instrument only functions from files where names match any regex separated by a semi-colon
-fprofile-generate-sampling
-fprofile-generate=
Generate instrumented code to collect execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
-fprofile-generate
Generate instrumented code to collect execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
-fprofile-instr-generate=
Generate instrumented code to collect execution counts into <file> (overridden by LLVM_PROFILE_FILE env var)
-fprofile-instr-generate
Generate instrumented code to collect execution counts into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
-fprofile-instr-use=
Use instrumentation data for profile-guided optimization
-fprofile-instr-use
-fprofile-instrument-path=
-fprofile-instrument-use-path=
Specify the profile path in PGO use compilation
-fprofile-instrument=
Enable PGO instrumentation. The accepted value is clang, llvm, or none
none,clang,llvm,csllvm
-fprofile-list=
Filename defining the list of functions/files to instrument
-fprofile-remapping-file=
Use the remappings described in <file> to match the profile data against names in the program
-fprofile-reusedist
-fprofile-sample-accurate
Specifies that the sample profile is accurate
-fprofile-sample-use=
Enable sample-based profile guided optimizations
-fprofile-sample-use
-fprofile-update=
Set update method of profile counters (atomic,prefer-atomic,single)
<method>
atomic,prefer-atomic,single
-fprofile-use=
Use instrumentation data for profile-guided optimization. If pathname is a directory, it reads from <pathname>/default.profdata. Otherwise, it reads from file <pathname>.
<pathname>
-fprofile-use
-fprofile-values
-fprofile
-fprotect-parens
Determines whether the optimizer honors parentheses when floating-point expressions are evaluated
-fpseudo-probe-for-profiling
Emit pseudo probes for sample profiling
-fptrauth-abi-version=
Pointer Authentication ABI version
-fptrauth-auth-traps
Enable traps on authentication failures
-fptrauth-block-descriptor-pointers
enable signing block descriptors
-fptrauth-calls
Enable signing and authentication of all indirect calls
-fptrauth-function-pointer-type-discrimination
Enabling type discrimination on C function pointers
-fptrauth-indirect-gotos
Enable signing and authentication of indirect goto targets
-fptrauth-intrinsics
Enable pointer-authentication intrinsics
-fptrauth-kernel-abi-version
Enable Pointer Authentication kernel ABI version
-fptrauth-objc-class-ro
Enable signing and authentication for ObjC class_ro pointers
-fptrauth-objc-interface-sel
Enable signing and authentication of Objective-C object's 'SEL' fields
-fptrauth-objc-isa-masking
pre- and post-authentication masking mode of objective-c isa pointers
-fptrauth-objc-isa-mode=
Authentication mode for ObjC isa field. Full auth if unspecified
strip,sign-and-strip,sign-and-auth
-fptrauth-objc-isa
Enable signing and authentication of Objective-C object's 'isa' field
-fptrauth-returns
Enable signing and authentication of return addresses
-fptrauth-soft
Enable software lowering of pointer authentication
-fptrauth-vtable-pointer-address-discrimination
Enable address discrimination of vtable pointers
-fptrauth-vtable-pointer-type-discrimination
Enable type discrimination of vtable pointers
Set pch file name (with /Yc and /Yu)
-framework
-frandom-seed=
-frange-check
-freal-4-real-10
-freal-4-real-16
-freal-4-real-8
-freal-8-real-10
-freal-8-real-16
-freal-8-real-4
-frealloc-lhs
-freciprocal-math
Allow division operations to be reassociated
-frecord-command-line
-frecord-gcc-switches
-frecord-marker=
-frecovery-ast-type
Preserve the type for recovery expressions when possible
-frecovery-ast
Preserve expressions in AST rather than dropping them when encountering semantic errors
-frecursive
-freg-struct-return
Override the default ABI to return small structs in registers
-fregister-global-dtors-with-atexit
Use atexit or __cxa_atexit to register global destructors
-fregs-graph
-frelaxed-template-template-args
Enable C++17 relaxed template template argument matching
-frename-registers
-freorder-blocks
-frepack-arrays
-freroll-loops
Turn on loop reroller
-fretain-comments-from-system-headers
-frewrite-imports
-frewrite-includes
-frewrite-map-file=
-fripa
-fropi
Generate read-only position independent code (ARM only)
-frounding-math
-frtlib-add-rpath
Add -rpath with architecture-specific resource directory to the linker flags
-frtti-data
-frtti
-frwpi
Generate read-write position independent code (ARM only)
-fsanitize-address-destructor=
Set destructor type used in ASan instrumentation
none,global
-fsanitize-address-field-padding=
Level of field padding for AddressSanitizer
-fsanitize-address-globals-dead-stripping
Enable linker dead stripping of globals in AddressSanitizer
-fsanitize-address-outline-instrumentation
Always generate function calls for address sanitizer instrumentation
-fsanitize-address-poison-custom-array-cookie
Enable poisoning array cookies when using custom operator new[] in AddressSanitizer
-fsanitize-address-use-after-return=
Select the mode of detecting stack use-after-return in AddressSanitizer: never | runtime (default) | always
<mode>
never,runtime,always
/fsanitize-address-use-after-return
-fsanitize-address-use-after-scope
Enable use-after-scope detection in AddressSanitizer
-fsanitize-address-use-odr-indicator
Enable ODR indicator globals to avoid false ODR violation reports in partially sanitized programs at the cost of an increase in binary size
-fsanitize-blacklist=
Alias for -fsanitize-ignorelist=
-fsanitize-cfi-canonical-jump-tables
Make the jump table addresses canonical in the symbol table
-fsanitize-cfi-cross-dso
Enable control flow integrity (CFI) checks for cross-DSO calls.
-fsanitize-cfi-icall-generalize-pointers
Generalize pointers in CFI indirect call type signature checks
-fsanitize-coverage-8bit-counters
Enable frequency counters in sanitizer coverage
-fsanitize-coverage-allowlist=
Restrict sanitizer coverage instrumentation exclusively to modules and functions that match the provided special case list, except the blocked ones
-fsanitize-coverage-blacklist=
Deprecated, use -fsanitize-coverage-ignorelist= instead
-fsanitize-coverage-ignorelist=
Disable sanitizer coverage instrumentation for modules and functions that match the provided special case list, even the allowed ones
-fsanitize-coverage-indirect-calls
Enable sanitizer coverage for indirect calls
-fsanitize-coverage-inline-8bit-counters
Enable inline 8-bit counters in sanitizer coverage
-fsanitize-coverage-inline-bool-flag
Enable inline bool flag in sanitizer coverage
-fsanitize-coverage-no-prune
Disable coverage pruning (i.e. instrument all blocks/edges)
-fsanitize-coverage-pc-table
Create a table of coverage-instrumented PCs
-fsanitize-coverage-stack-depth
Enable max stack depth tracing
-fsanitize-coverage-trace-bb
Enable basic block tracing in sanitizer coverage
-fsanitize-coverage-trace-cmp
Enable cmp instruction tracing in sanitizer coverage
-fsanitize-coverage-trace-div
Enable div instruction tracing in sanitizer coverage
-fsanitize-coverage-trace-gep
Enable gep instruction tracing in sanitizer coverage
-fsanitize-coverage-trace-pc-guard
Enable PC tracing with guard in sanitizer coverage
-fsanitize-coverage-trace-pc
Enable PC tracing in sanitizer coverage
-fsanitize-coverage-type=
Sanitizer coverage type
-fsanitize-coverage-whitelist=
Deprecated, use -fsanitize-coverage-allowlist= instead
-fsanitize-coverage=
Specify the type of coverage instrumentation for Sanitizers
-fsanitize-hwaddress-abi=
Select the HWAddressSanitizer ABI to target (interceptor or platform, default interceptor). This option is currently unused.
-fsanitize-hwaddress-experimental-aliasing
Enable aliasing mode in HWAddressSanitizer
-fsanitize-ignorelist=
Path to ignorelist file for sanitizers
-fsanitize-link-c++-runtime
-fsanitize-link-runtime
-fsanitize-memory-track-origins=
Enable origins tracking in MemorySanitizer
-fsanitize-memory-track-origins
-fsanitize-memory-use-after-dtor
Enable use-after-destroy detection in MemorySanitizer
-fsanitize-minimal-runtime
-fsanitize-recover=
Enable recovery for specified sanitizers
-fsanitize-recover
-fsanitize-stats
Enable sanitizer statistics gathering.
-fsanitize-system-blacklist=
Alias for -fsanitize-system-ignorelist=
-fsanitize-system-ignorelist=
Path to system ignorelist file for sanitizers
-fsanitize-thread-atomics
Enable atomic operations instrumentation in ThreadSanitizer (default)
-fsanitize-thread-func-entry-exit
Enable function entry/exit instrumentation in ThreadSanitizer (default)
-fsanitize-thread-memory-access
Enable memory access instrumentation in ThreadSanitizer (default)
-fsanitize-trap=
Enable trapping for specified sanitizers
-fsanitize-trap
Enable trapping for all sanitizers
-fsanitize-undefined-strip-path-components=
Strip (or keep only, if negative) a given number of path components when emitting check metadata.
<number>
-fsanitize-undefined-trap-on-error
/fsanitize=address
Enable AddressSanitizer
-fsanitize=
Turn on runtime checks for various forms of undefined or suspicious behavior. See user manual for available checks
<check>
-fsave-optimization-record=
Generate an optimization record file in a specific format
<format>
-fsave-optimization-record
Generate a YAML optimization record file
-fsched-interblock
-fschedule-insns2
-fschedule-insns
-fsecond-underscore
-fsee
-fseh-exceptions
Use SEH style exceptions
-fsemantic-interposition
-fshort-enums
Allocate to an enum type only as many bytes as it needs for the declared range of possible values
-fshort-wchar
Force wchar_t to be a short unsigned int
-fshow-column
-fshow-overloads=
Which overload candidates to show when overload resolution fails: best|all; defaults to all
best,all
-fshow-skipped-includes
Show skipped includes in -H output.
-fshow-source-location
-fsign-zero
-fsignaling-math
-fsignaling-nans
-fsigned-bitfields
-fsigned-char
char is signed
-fsigned-wchar
Use a signed type for wchar_t
-fsigned-zeros
-fsingle-precision-constant
-fsized-deallocation
Enable C++14 sized global deallocation functions
-fsjlj-exceptions
Use SjLj style exceptions
-fslp-vectorize-aggressive
-fslp-vectorize
Enable the superword-level parallelism vectorization passes
-fsmall-block-descriptors
Enable small block descriptors
-fspec-constr-count
-fspell-checking-limit=
-fspell-checking-limit
Set the maximum number of times to perform spell checking on unrecognized identifiers (0 = no limit).
-fspell-checking
-fsplit-cold-code
Permit splitting of cold code when optimizing (off by default).
-fsplit-dwarf-inlining
Provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF
-fsplit-lto-unit
Enables splitting of the LTO unit
-fsplit-machine-functions
Enable late function splitting using profile information (x86 ELF)
-fsplit-stack
Use segmented stack
-fstack-arrays
-fstack-check
Enable stack checking
-fstack-clash-protection
Enable stack clash protection
-fstack-protector-all
Enable stack protectors for all functions
-fstack-protector-strong
Enable stack protectors for some functions vulnerable to stack smashing. Compared to -fstack-protector, this uses a stronger heuristic that includes functions containing arrays of any size (and any type), as well as any calls to alloca or the taking of an address from a local variable
-fstack-protector
Enable stack protectors for some functions vulnerable to stack smashing. This uses a loose heuristic which considers functions vulnerable if they contain a char (or 8bit integer) array or constant sized calls to alloca , which are of greater size than ssp-buffer-size (default: 8 bytes). All variable sized calls to alloca are considered vulnerable. A function with a stack protector has a guard value added to the stack frame that is checked on function exit. The guard value must be positioned in the stack frame such that a buffer overflow from a vulnerable variable will overwrite the guard value before overwriting the function's return address. The reference stack guard value is stored in a global variable.
-fstack-size-section
Emit section containing metadata on function stack sizes
-fstack-usage
Emit .su file containing information on function stack sizes
-fstandalone-debug
Emit full debug info for all types used by the program
-fstrength-reduce
-fstrict-aliasing
-fstrict-enums
Enable optimizations based on the strict definition of an enum's value range
-fstrict-float-cast-overflow
Assume that overflowing float-to-int casts are undefined (default)
-fstrict-overflow
-fstrict-return
-fstrict-vtable-pointers
Enable optimizations based on the strict rules for overwriting polymorphic C++ objects
-fstruct-path-tbaa
-fswift-async-fp=
Control emission of Swift async extended frame info (option: auto, always, never)
auto,always,never
-fsycl-is-device
Generate code for SYCL device.
-fsycl-is-host
SYCL host compilation
-fsycl
Enables SYCL kernels compilation for device
-fsymbol-partition=
-fsyntax-only
-fsystem-module
Build this module as a system module. Only used with -emit-module
-ftabstop=
-ftabstop
Set the tab stop distance.
-ftarget-variant-availability-checks
Enable availability checks for the target variant platform
-ftemplate-backtrace-limit=
-ftemplate-backtrace-limit
Set the maximum number of entries to print in a template instantiation backtrace (0 = no limit).
-ftemplate-depth-
-ftemplate-depth=
-ftemplate-depth
Maximum depth of recursive template instantiation
-fterminated-vtables
-ftest-coverage
-ftest-module-file-extension=
introduce a module file extension for testing purposes. The argument is parsed as blockname:major:minor:hashed:user info
-fthin-link-bitcode=
Write minimized bitcode to <file> for the ThinLTO thin link only
-fthinlto-index=
Perform ThinLTO importing using provided function summary index
-fthreadsafe-statics
-ftime-report=
(For new pass manager) "per-pass": one report for each pass; "per-pass-run": one report for each pass invocation
per-pass,per-pass-run
-ftime-report
-ftime-trace-granularity=
Minimum time granularity (in microseconds) traced by time profiler
-ftime-trace
Turn on time profiler. Generates JSON file based on output filename.
-ftls-model=
global-dynamic,local-dynamic,initial-exec,local-exec
-ftls-model
-ftracer
-ftrap-function=
Issue call to specified function rather than a trap instruction
-ftrapping-math
-ftrapv-handler=
Specify the function to be called on overflow
<function name>
-ftrapv-handler
-ftrapv
Trap on integer overflow
-ftree-dce
-ftree-salias
-ftree-slp-vectorize
-ftree-ter
-ftree-vectorizer-verbose
-ftree-vectorize
-ftree-vrp
-ftrigraphs
Process trigraph sequences
-ftrivial-auto-var-init-skip-cpp-obj
do not auto-initialize objects initialized by a C++ constructor
-ftrivial-auto-var-init-skip-non-pod
do not auto-initialize non-POD objects
-ftrivial-auto-var-init-skip-non-ptr-array
do not auto-initialize arrays other than arrays of pointers
-ftrivial-auto-var-init-skip-stl
do not auto-initialize variables in STL namespace
-ftrivial-auto-var-init-stop-after=
Stop initializing trivial automatic stack variables after the specified number of instances
-ftrivial-auto-var-init=
Initialize trivial automatic stack variables: uninitialized (default) | pattern
uninitialized,zero,pattern
-ftrivial-auto-var-zero-init-max-size=
Zero initialize only first N bytes of each stack variable; 0 value turns off the limit.
-ftype-visibility
Default type visibility
default,hidden,internal,protected
-function-alignment
default alignment for functions
-funderscoring
-funique-basic-block-section-names
Use unique names for basic block sections (ELF Only)
-funique-internal-linkage-names
Uniqueify Internal Linkage Symbol Names by appending the MD5 hash of the module path
-funique-section-names
-funit-at-a-time
-funknown-anytype
Enable parser support for the __unknown_anytype type; for testing purposes only
-funroll-all-loops
-funroll-loops
Turn on loop unroller
-funsafe-loop-optimizations
-funsafe-math-optimizations
-funsigned-bitfields
-funsigned-char
-funswitch-loops
-funwind-tables=
Generate unwinding tables for all functions
-funwind-tables
-fuse-ctor-homing
Use constructor homing if we are using limited debug info already
-fuse-cuid=
Method to generate ID's for compilation units for single source offloading languages CUDA and HIP: 'hash' (ID's generated by hashing file path and command line options) | 'random' (ID's generated as random numbers) | 'none' (disabled). Default is 'hash'. This option will be overridden by option '-cuid=[ID]' if it is specified.
-fuse-cxa-atexit
-fuse-init-array
-fuse-ld=
-fuse-line-directives
Use #line in preprocessed output
-fuse-linker-plugin
-fuse-register-sized-bitfield-access
Use register sized accesses to bit-fields, when possible.
-fvalidate-ast-input-files-content
Compute and store the hash of input files used to build an AST. Files with mismatching mtime's are considered valid if both contents is identical
-fvariable-expansion-in-unroller
-fveclib=
Use the given vector functions library
Accelerate,libmvec,MASSV,SVML,Darwin_libsystem_m,none
-fvect-cost-model
-fvectorize
Enable the loop vectorization passes
-fverbose-asm
Generate verbose assembly output
-fverify-debuginfo-preserve-export=
Export debug info (by testing original Debug Info) failures into specified (JSON) file (should be abs path as we use append mode to insert new JSON objects).
-fverify-debuginfo-preserve
Enable Debug Info Metadata preservation testing in optimizations.
-fvirtual-function-elimination
Enables dead virtual function elimination optimization. Requires -flto=full
-fvisibility-dllexport=
The visibility for dllexport definitions [-fvisibility-from-dllstorageclass]
-fvisibility-externs-dllimport=
The visibility for dllimport external declarations [-fvisibility-from-dllstorageclass]
-fvisibility-externs-nodllstorageclass=
The visibility for external declarations without an explicit DLL dllstorageclass [-fvisibility-from-dllstorageclass]
-fvisibility-from-dllstorageclass
Set the visibility of symbols in the generated code from their DLL storage class
-fvisibility-global-new-delete-hidden
Give global C++ operator new and delete declarations hidden visibility
-fvisibility-inlines-hidden-static-local-var
When -fvisibility-inlines-hidden is enabled, static variables in inline C++ member functions will also be given hidden visibility by default
-fvisibility-inlines-hidden
Give inline C++ member functions hidden visibility by default
-fvisibility-ms-compat
Give global types 'default' visibility and global functions and variables 'hidden' visibility by default
-fvisibility-nodllstorageclass=
The visibility for defintiions without an explicit DLL export class [-fvisibility-from-dllstorageclass]
-fvisibility=
Set the default symbol visibility for all global declarations
hidden,default
-fvisibility
Default type and symbol visibility
-fwarn-stack-size=
-fwasm-exceptions
Use WebAssembly style exceptions
-fwchar-type=
Select underlying type for wchar_t
char,short,int
-fweb
-fwhole-file
-fwhole-program-vtables
Enables whole-program vtable optimization. Requires -flto
-fwhole-program
-fwrapv
Treat signed integer overflow as two's complement
-fwritable-strings
Store string literals as writable data
-fxl-pragma-pack
Enable IBM XL #pragma pack handling
-fxor-operator
Enable .XOR. as a synonym of .NEQV.
-fxray-always-emit-customevents
Always emit __xray_customevent(...) calls even if the containing function is not always instrumented
-fxray-always-emit-typedevents
Always emit __xray_typedevent(...) calls even if the containing function is not always instrumented
-fxray-always-instrument=
DEPRECATED: Filename defining the whitelist for imbuing the 'always instrument' XRay attribute.
-fxray-attr-list=
Filename defining the list of functions/types for imbuing XRay attributes.
-fxray-function-groups=
Only instrument 1 of N groups
-fxray-function-index
-fxray-ignore-loops
Don't instrument functions with loops unless they also meet the minimum function size
-fxray-instruction-threshold=
Sets the minimum function size to instrument with XRay
-fxray-instruction-threshold
-fxray-instrumentation-bundle=
Select which XRay instrumentation points to emit. Options: all, none, function-entry, function-exit, function, custom. Default is 'all'.  'function' includes both 'function-entry' and 'function-exit'.
-fxray-instrument
Generate XRay instrumentation sleds on function entry and exit
-fxray-link-deps
Tells clang to add the link dependencies for XRay.
-fxray-modes=
List of modes to link in by default into XRay instrumented binaries.
-fxray-never-instrument=
DEPRECATED: Filename defining the whitelist for imbuing the 'never instrument' XRay attribute.
-fxray-selected-function-group=
When using -fxray-function-groups, select which group of functions to instrument. Valid range is 0 to fxray-function-groups - 1
-fzero-initialized-in-bss
-fzvector
Enable System z vector language extension
Add directory to framework include search path
Assume thread-local variables are defined in the executable
--gcc-toolchain=
Search for GCC installation in the specified directory on targets which commonly use GCC. The directory usually contains 'lib{,32,64}/gcc{,-cross}/$triple' and 'include'. If specified, sysroot is skipped for GCC detection. Note: executables (e.g. ld) used by the compiler are not overridden by the selected GCC installation
-gcodeview-ghash
Emit type record hashes in a .debug$H section
-gcodeview
Generate CodeView debug information
-gcoff
-gcolumn-info
-gdbx
-gdwarf-2
Generate source-level debug information with dwarf version 2
-gdwarf-3
Generate source-level debug information with dwarf version 3
-gdwarf-4
Generate source-level debug information with dwarf version 4
-gdwarf-5
Generate source-level debug information with dwarf version 5
-gdwarf-aranges
-gdwarf32
Enables DWARF32 format for ELF binaries, if debug information emission is enabled.
-gdwarf64
Enables DWARF64 format for ELF binaries, if debug information emission is enabled.
-gdwarf
Generate source-level debug information with the default dwarf version
Set __cdecl as a default calling convention
-gembed-source
Embed source text in DWARF debug sections
-gen-cdb-fragment-path
Emit a compilation database fragment to the specified directory
-gen-reproducer
Auto-generates preprocessed source files and a reproduction script
/GF-
Disable string pooling
-gfull
Enable string pooling (default)
-ggdb0
-ggdb1
-ggdb2
-ggdb3
-ggdb
-ggnu-pubnames
-ginline-line-tables
/GL-
-gline-directives-only
Emit debug line info directives only
-gline-tables-only
Emit debug line number tables only
-glldb
/Gm-
-gmlt
-gmodules
-gno-codeview-ghash
-gno-column-info
-gno-embed-source
Restore the default behavior of not embedding source text in DWARF debug sections
-gno-gnu-pubnames
-gno-inline-line-tables
Don't emit inline line tables.
-gno-pubnames
-gno-record-command-line
-gno-record-gcc-switches
-gno-simple-template-names
-gno-split-dwarf
-gno-strict-dwarf
--gpu-bundle-output
Bundle output files of HIP device compilation
--gpu-instrument-lib=
Instrument device library for HIP, which is a LLVM bitcode containing __cyg_profile_func_enter and __cyg_profile_func_exit
--gpu-max-threads-per-block=
Default max threads per block for kernel launch bounds for HIP
--gpu-use-aux-triple-only
Prepare '-aux-triple' only without populating '-aux-target-cpu' and '-aux-target-feature'.
-gpubnames
/GR-
Do not emit RTTI data
-grecord-command-line
-grecord-gcc-switches
/Gregcall
Set __regcall as a default calling convention
Emit RTTI data (default)
Set __fastcall as a default calling convention
/GS-
Disable buffer security check
-gsce
-gsimple-template-names=
Use simple template names in DWARF, or include the full template name with a modified prefix for validation
simple,mangled
-gsimple-template-names
-gsplit-dwarf=
Set DWARF fission mode to either 'split' or 'single'
split,single
-gsplit-dwarf
-gstabs
-gstrict-dwarf
Enable buffer security check (default)
Use stack probes (default)
Set stack probe size (default 4096)
-gtoggle
/guard:
Enable Control Flow Guard with /guard:cf, or only the table with /guard:cf,nochecks. Enable EH Continuation Guard with /guard:ehcont
-gused
-gvms
Set __vectorcall as a default calling convention
/Gw-
Do not put each data item in its own section (default)
Put each data item in its own section
/GX-
Deprecated (like not passing /EH)
-gxcoff
Deprecated; use /EHsc
/Gy-
Do not put each function in its own section (default)
Put each function in its own section
-gz=
Set __stdcall as a default calling convention
Put objects of at most <size> bytes into small data section (MIPS / Hexagon)
<size>
Generate source-level debug information
-header-include-file
Filename (or -) to write header include output to
/headerName:
-headerpad_max_install_names
/headerUnit:angle
/headerUnit:quote
/headerUnit
--help-hidden
Display help for hidden options
/HELP
-help
/help
--hip-device-lib-path=
--hip-device-lib=
HIP device library
--hip-link
Link clang-offload-bundler bundles for HIP
--hip-path=
HIP runtime installation path, used for finding HIP version and adding HIP include path.
--hip-version=
HIP version in the format of major.minor.patch
/homeparams
/hotpatch
Show header includes and nesting depth
Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path
-iapinotes-modules
Add directory to the API notes search path referenced by module name
-iapinotes-path
Include API notes file
-ibuiltininc
Enable builtin #include directories even when -nostdinc is used before or after -ibuiltininc. Using -nobuiltininc after the option disables it
-idirafter
Add directory to AFTER include search path
-iframeworkwithsysroot
Add directory to SYSTEM framework search path, absolute paths are relative to -isysroot
-iframework
Add directory to SYSTEM framework search path
--imacros=
-imacros
Include macros from file before parsing
-image_base
/imsvc
Add <dir> to system include search path, as if in %INCLUDE%
-imultilib
--include-barrier
--include-directory-after=
--include-directory-after
--include-directory=
--include-directory
-include-pch
Include precompiled header file
--include-prefix=
--include-prefix
--include-with-prefix-after=
--include-with-prefix-after
--include-with-prefix-before=
--include-with-prefix-before
--include-with-prefix=
--include-with-prefix
--include=
-include
-index-header-map
Make the next included directory (-I or -F) an indexer header map
-index-ignore-macros
Ignore macros during indexing
-index-ignore-pcms
Ignore symbols from imported pcm modules
-index-ignore-system-symbols
Ignore symbols from system headers
-index-record-codegen-name
Record the codegen name for symbols
-index-store-path
Enable indexing with the specified data store path
-index-unit-output-path
Use <path> as the output path for this compilation unit in the index unit file
<path>
-init-only
Only execute frontend initialization
-init
-install_name
-integrated-as
-interface-stub-version=
-internal-externc-isystem
Add directory to the internal system include search path with implicit extern "C" semantics; these are assumed to not be user-provided and are used to model system and standard headers' paths.
-internal-isystem
Add directory to the internal system include search path; these are assumed to not be user-provided and are used to model system and standard headers' paths.
-iprefix
Set the -iwithprefix/-iwithprefixbefore prefix
-iquote
Add directory to QUOTE include search path
-isysroot
Set the system root directory (usually /)
-isystem-after
Add directory to end of the SYSTEM include search path
-isystem
Add directory to SYSTEM include search path
-ivfsoverlay
Overlay the virtual filesystem described by file over the real file system
-iwithprefixbefore
Set directory to include search path with prefix
-iwithprefix
Set directory to SYSTEM include search path with prefix
-iwithsysroot
Add directory to SYSTEM include search path, absolute paths are relative to -isysroot
-iworkdir=
When looking up file, use the working directory provided by the operating system, or by the virtual file system.
os,virtual
Add directory to the end of the list of include search paths
Add directory to include search path
/JMC
Make char type unsigned
-keep_private_externs
/kernel-
/kernel
--language=
--language
-lazy_framework
-lazy_library
--ld-path=
/LDd
Create debug DLL
Create DLL
--libomptarget-amdgcn-bc-path=
Path to libomptarget-amdgcn bitcode library
--libomptarget-nvptx-bc-path=
Path to libomptarget-nvptx bitcode library
--library-directory=
--library-directory
--linker-option=
Add linker option
/link
Forward options to the linker
<options>
-load
Add directory to library search path
-m16
-m32
-m3dnowa
-m3dnow
-m64
-m68000
-m68010
-m68020
-m68030
-m68040
-m68060
-m80387
-mabi=ieeelongdouble
Use IEEE 754 quadruple-precision for long double
-mabi=vec-default
Enable the default Altivec ABI on AIX (AIX only). Uses only volatile vector registers.
-mabi=vec-extabi
Enable the extended Altivec ABI on AIX (AIX only). Uses volatile and nonvolatile vector registers
-mabi=
-mabicalls
Enable SVR4-style position-independent code (Mips only)
-mabs=
-Mach
-madx
-maes
-main-file-name
Main file name to use for debug info and source if missing
-maix-struct-return
Return all structs in memory (PPC32 only)
-malign-branch-boundary=
Specify the boundary's size to align branches
-malign-branch=
Specify types of branches to align
-malign-double
Align doubles to two words in structs (x86 only)
-malign-functions=
-malign-jumps=
-malign-loops=
-maltivec
-mamdgpu-ieee
Sets the IEEE bit in the expected default floating point  mode register. Floating point opcodes that support exception flag gathering quiet and propagate signaling NaN inputs per IEEE 754-2008. This option changes the ABI. (AMDGPU only)
-mamx-bf16
-mamx-int8
-mamx-tile
-mappletvos-version-min=
-mappletvsimulator-version-min=
-march=
-marm
-masm=
-massembler-fatal-warnings
Make assembler warnings fatal
-massembler-no-warn
Make assembler not emit warnings
-matomics
-mavx2
-mavx512bf16
-mavx512bitalg
-mavx512bw
-mavx512cd
-mavx512dq
-mavx512er
-mavx512fp16
-mavx512f
-mavx512ifma
-mavx512pf
-mavx512vbmi2
-mavx512vbmi
-mavx512vl
-mavx512vnni
-mavx512vp2intersect
-mavx512vpopcntdq
-mavxvnni
-mavx
-mbackchain
Link stack frames through backchain on System Z
-mbig-endian
-mbmi2
-mbmi
-mbranch-likely
-mbranch-protection=
Enforce targets of indirect branches and function returns
-mbranch-target-enforce
-mbranches-within-32B-boundaries
Align selected branches (fused, jcc, jmp) within 32-byte boundary
-mbridgeos-version-min=
-mbulk-memory
-mcheck-zero-division
-mcldemote
-mclflushopt
-mclwb
-mclzero
-mcmodel=medany
Equivalent to -mcmodel=medium, compatible with RISC-V gcc.
-mcmodel=medlow
Equivalent to -mcmodel=small, compatible with RISC-V gcc.
-mcmodel=
-mcmpb
-mcmse
Allow use of CMSE (Armv8-M Security Extensions)
-mcode-object-v3
Legacy option to specify code object ABI V3 (AMDGPU only)
-mcode-object-version=
Specify code object ABI version. Defaults to 3. (AMDGPU only)
2,3,4
-mcompact-branches=
-mconsole
-mconstant-cfstrings
-mconstructor-aliases
Emit complete constructors and destructors as aliases when possible
-mcpu=?
-mcpu=
-mcrbits
-mcrc32
-mcrc
Allow use of CRC instructions (ARM/Mips only)
-mcrypto
-mcumode
Specify CU wavefront execution mode (AMDGPU only)
-mcx16
-mdarwin-stkchk-strong-link
/MDd
Use DLL debug run-time
-mdebug-pass
Enable additional debug output
-mdefault-build-attributes
-mdirect-move
-mdisable-tail-calls
Disable tail call optimization, keeping the call stack accurate
-mdll
-mdouble-float
-mdouble=
Force double to be 32 bits or 64 bits
-mdspr2
-mdsp
-mdynamic-no-pic
Write a depfile containing user and system headers
Use DLL run-time
-meabi
Set EABI type, e.g. 4, 5 or gnu (default depends on triple)
default,4,5,gnu
-mefpu2
-membedded-data
Place constants in the .rodata section instead of the .sdata section even if they meet the -G <size> threshold (MIPS)
-menable-experimental-extensions
Enable use of experimental RISC-V extensions.
-menable-no-infs
Allow optimization to assume there are no infinities.
-menable-no-nans
Allow optimization to assume there are no NaNs.
-menable-unsafe-fp-math
Allow unsafe floating-point math optimizations which may decrease precision
-menqcmd
-mexception-handling
-mexec-model=
Execution model (WebAssembly only)
command,reactor
-mexecute-only
Disallow generation of data access to code sections (ARM only)
-mextern-sdata
Assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
-mf16c
-mfancy-math-387
-mfentry
Insert calls to fentry at function entry (x86/SystemZ only)
-mfix-and-continue
-mfix-cmse-cve-2021-35465
Work around VLLDM erratum CVE-2021-35465 (ARM only)
-mfix-cortex-a53-835769
Workaround Cortex-A53 erratum 835769 (AArch64 only)
-mfloat-abi=
soft,softfp,hard
-mfloat-abi
The float ABI to use
-mfloat128
-mfma4
-mfma
-mfp32
Use 32-bit floating point registers (MIPS only)
-mfp64
Use 64-bit floating point registers (MIPS only)
-mfpmath=
-mfpmath
Which unit to use for fp math
-mfprnd
-mfpu=
-mfpxx
Avoid FPU mode dependent operations when used with the O32 ABI
-mframe-pointer=
Specify which frame pointers to retain (all, non-leaf, none).
all,non-leaf,none
-mfsgsbase
-mfxsr
Write depfile output from -MMD, -MD, -MM, or -M to <file>
-mgeneral-regs-only
Generate code which only uses the general purpose registers (AArch64/x86 only)
-mgfni
-mginv
-mglibc
-mglobal-merge
Enable merging of globals
-mgpopt
Use GP relative accesses for symbols known to be in a small data section (MIPS)
Add missing headers to depfile
-mhard-float
-mharden-sls=
Select straight-line speculation hardening scope
-mhreset
-mhtm
-mhvx-length=
Set Hexagon Vector Length
64B,128B
-mhvx=
Enable Hexagon Vector eXtensions
-mhvx
--mhwdiv=
-mhwdiv=
--mhwdiv
-mhwmult=
-miamcu
Use Intel MCU ABI
-mieee-fp
-mieee-rnd-near
-mignore-xcoff-visibility
Not emit the visibility attribute for asm in AIX OS or give all symbols 'unspecified' visibility in XCOFF object file
--migrate
Run the migrator
-migrate
Migrate source code
-mimplicit-float
-mimplicit-it=
-mincremental-linker-compatible
(integrated-as) Emit an object file which can be used with an incremental linker
-mindirect-jump=
Change indirect jump instructions to inhibit speculation
-minline-all-stringops
-minvariant-function-descriptors
-minvpcid
-mios-simulator-version-min=
-mios-version-min=
Set iOS deployment target
-miphoneos-version-min=
-miphonesimulator-version-min=
-mips16
-mips1
Equivalent to -march=mips1
-mips2
Equivalent to -march=mips2
-mips32r2
Equivalent to -march=mips32r2
-mips32r3
Equivalent to -march=mips32r3
-mips32r5
Equivalent to -march=mips32r5
-mips32r6
Equivalent to -march=mips32r6
-mips32
Equivalent to -march=mips32
-mips3
Equivalent to -march=mips3
-mips4
Equivalent to -march=mips4
-mips5
Equivalent to -march=mips5
-mips64r2
Equivalent to -march=mips64r2
-mips64r3
Equivalent to -march=mips64r3
-mips64r5
Equivalent to -march=mips64r5
-mips64r6
Equivalent to -march=mips64r6
-mips64
Equivalent to -march=mips64
-misel
Write a compilation database entry per input
-mkernel
-mkl
-mldc1-sdc1
-mlimit-float-precision
Limit float precision to the given value
-mlink-bitcode-file
Link the given bitcode file before performing optimizations.
-mlink-builtin-bitcode
Link and internalize needed symbols from the given bitcode file before performing optimizations.
-mlink-cuda-bitcode
-mlinker-version=
-mlittle-endian
-mllvm
Additional arguments to forward to LLVM's option processing
-mlocal-sdata
Extend the -G behaviour to object local data (MIPS)
-mlong-calls
Generate branches with extended addressability, usually via indirect jumps.
-mlong-double-128
Force long double to be 128 bits
-mlong-double-64
Force long double to be 64 bits
-mlong-double-80
Force long double to be 80 bits, padded to 128 bits for storage
-mlongcall
-mlvi-cfi
Enable only control-flow mitigations for Load Value Injection (LVI)
-mlvi-hardening
Enable all mitigations for Load Value Injection (LVI)
-mlwp
-mlzcnt
-mmacos-version-min=
-mmacosx-version-min=
Set Mac OS X deployment target
-mmadd4
Enable the generation of 4-operand madd.s, madd.d and related instructions.
-mmark-bti-property
Add .note.gnu.property with BTI to assembly files (AArch64 only)
-mmcu=
-MMD
Write a depfile containing user headers
-mmemops
Enable generation of memop instructions
-mmfcrf
-mmfocrf
-mmicromips
-mmma
-mmmx
-mmovbe
-mmovdir64b
-mmovdiri
-mmpx
-mms-bitfields
Set the default structure layout to be compatible with the Microsoft compiler standard
-mmsa
Enable MSA ASE (MIPS only)
-mmt
Enable MT ASE (MIPS only)
-mmultivalue
-mmutable-globals
-mmwaitx
Like -MMD, but also implies -E and writes to stdout by default
-mnan=
-mno-3dnowa
-mno-3dnow
-mno-80387
-mno-abicalls
Disable SVR4-style position-independent code (Mips only)
-mno-adx
-mno-aes
-mno-altivec
-mno-amdgpu-ieee
-mno-amx-bf16
-mno-amx-int8
-mno-amx-tile
-mno-atomics
-mno-avx2
-mno-avx512bf16
-mno-avx512bitalg
-mno-avx512bw
-mno-avx512cd
-mno-avx512dq
-mno-avx512er
-mno-avx512fp16
-mno-avx512f
-mno-avx512ifma
-mno-avx512pf
-mno-avx512vbmi2
-mno-avx512vbmi
-mno-avx512vl
-mno-avx512vnni
-mno-avx512vp2intersect
-mno-avx512vpopcntdq
-mno-avxvnni
-mno-avx
-mno-backchain
-mno-bmi2
-mno-bmi
-mno-branch-likely
-mno-bulk-memory
-mno-check-zero-division
-mno-cldemote
-mno-clflushopt
-mno-clwb
-mno-clzero
-mno-cmpb
-mno-code-object-v3
Legacy option to specify code object ABI V2 (AMDGPU only)
-mno-constant-cfstrings
-mno-crbits
-mno-crc32
-mno-crc
Disallow use of CRC instructions (Mips only)
-mno-crypto
-mno-cumode
Specify WGP wavefront execution mode (AMDGPU only)
-mno-cx16
-mno-default-build-attributes
-mno-direct-move
-mno-dspr2
-mno-dsp
-mno-embedded-data
Do not place constants in the .rodata section instead of the .sdata if they meet the -G <size> threshold (MIPS)
-mno-enqcmd
-mno-exception-handling
-mno-execute-only
Allow generation of data access to code sections (ARM only)
-mno-extern-sdata
Do not assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
-mno-f16c
-mno-fix-cmse-cve-2021-35465
Don't work around VLLDM erratum CVE-2021-35465 (ARM only)
-mno-fix-cortex-a53-835769
Don't workaround Cortex-A53 erratum 835769 (AArch64 only)
-mno-float128
-mno-fma4
-mno-fma
-mno-fprnd
-mno-fsgsbase
-mno-fxsr
-mno-gfni
-mno-ginv
-mno-global-merge
Disable merging of globals
-mno-gpopt
Do not use GP relative accesses for symbols known to be in a small data section (MIPS)
-mno-hreset
-mno-htm
-mno-hvx
Disable Hexagon Vector eXtensions
-mno-iamcu
-mno-implicit-float
Don't generate implicit floating point instructions
-mno-incremental-linker-compatible
(integrated-as) Emit an object file which cannot be used with an incremental linker
-mno-inline-all-stringops
-mno-invariant-function-descriptors
-mno-invpcid
-mno-isel
-mno-kl
-mno-ldc1-sdc1
-mno-local-sdata
Do not extend the -G behaviour to object local data (MIPS)
-mno-long-calls
Restore the default behaviour of not generating long calls
-mno-longcall
-mno-lvi-cfi
Disable control-flow mitigations for Load Value Injection (LVI)
-mno-lvi-hardening
Disable mitigations for Load Value Injection (LVI)
-mno-lwp
-mno-lzcnt
-mno-madd4
Disable the generation of 4-operand madd.s, madd.d and related instructions.
-mno-memops
Disable generation of memop instructions
-mno-mfcrf
-mno-mfocrf
-mno-micromips
-mno-mips16
-mno-mma
-mno-mmx
-mno-movbe
-mno-movdir64b
-mno-movdiri
-mno-movt
Disallow use of movt/movw pairs (ARM only)
-mno-mpx
-mno-ms-bitfields
Do not set the default structure layout to be compatible with the Microsoft compiler standard
-mno-msa
Disable MSA ASE (MIPS only)
-mno-mt
Disable MT ASE (MIPS only)
-mno-multivalue
-mno-mutable-globals
-mno-mwaitx
-mno-neg-immediates
Disallow converting instructions with negative immediates to their negation or inversion.
-mno-nontrapping-fptoint
-mno-nvj
Disable generation of new-value jumps
-mno-nvs
Disable generation of new-value stores
-mno-odd-spreg
Disable odd single-precision floating point registers
-mno-omit-leaf-frame-pointer
-mno-outline-atomics
Don't generate local calls to out-of-line atomic operations
-mno-outline
Disable function outlining (AArch64 only)
-mno-packed-stack
-mno-packets
Disable generation of instruction packets
-mno-paired-vector-memops
-mno-pascal-strings
-mno-pclmul
-mno-pconfig
-mno-pcrel
-mno-pku
-mno-popcntd
-mno-popcnt
-mno-power10-vector
-mno-power8-vector
-mno-power9-vector
-mno-prefetchwt1
-mno-prefixed
-mno-prfchw
-mno-ptwrite
-mno-pure-code
-mno-rdpid
-mno-rdrnd
-mno-rdseed
-mno-red-zone
-mno-reference-types
-mno-relax-all
-mno-relax-pic-calls
Do not produce relaxation hints for linkers to try optimizing PIC call sequences into direct calls (MIPS only)
-mno-relaxed-simd
-mno-relax
Disable linker relaxation
-mno-restrict-it
Allow generation of deprecated IT blocks for ARMv8. It is off by default for ARMv8 Thumb mode
-mno-retpoline-external-thunk
-mno-retpoline
-mno-rtd
-mno-rtm
-mno-sahf
-mno-save-restore
Disable using library calls for save and restore
-mno-serialize
-mno-seses
Disable speculative execution side effect suppression (SESES)
-mno-sgx
-mno-sha
-mno-shstk
-mno-sign-ext
-mno-simd128
-mno-soft-float
-mno-speculative-load-hardening
-mno-spe
-mno-sse2
-mno-sse3
-mno-sse4.1
-mno-sse4.2
-mno-sse4a
-mno-sse4
-mno-sse
-mno-ssse3
-mno-stack-arg-probe
Disable stack probes which are enabled by default
-mno-stackrealign
-mno-tail-call
-mno-tbm
-mno-tgsplit
Disable threadgroup split execution mode (AMDGPU only)
-mno-thumb
-mno-tls-direct-seg-refs
Disable direct TLS access through segment registers
-mno-tsxldtrk
-mno-uintr
-mno-unaligned-access
Force all memory accesses to be aligned (AArch32/AArch64 only)
-mno-unsafe-fp-atomics
-mno-vaes
-mno-virt
-mno-vpclmulqdq
-mno-vsx
-mno-vx
-mno-vzeroupper
-mno-waitpkg
-mno-warn-nonportable-cfstrings
-mno-wavefrontsize64
Specify wavefront size 32 mode (AMDGPU only)
-mno-wbnoinvd
-mno-widekl
-mno-x87
-mno-xgot
-mno-xop
-mno-xsavec
-mno-xsaveopt
-mno-xsaves
-mno-xsave
-mno-zvector
-mnocrc
Disallow use of CRC instructions (ARM only)
-mnoexecstack
Mark the file as not needing an executable stack
-mnontrapping-fptoint
-mnop-mcount
Generate mcount/__fentry__ calls as nops. To activate they need to be patched in.
-mnvj
Enable generation of new-value jumps
-mnvs
Enable generation of new-value stores
-modd-spreg
Enable odd single-precision floating point registers
-module-dependency-dir
Directory to dump module dependencies to
-module-dir
Put MODULE files in <dir>
-module-file-deps
Include module files in dependency output
-module-file-info
Provide information about a particular module file
-module-suffix
Use <suffix> as the suffix for module files (the default value is `.mod`)
<suffix>
-momit-leaf-frame-pointer
Omit frame pointer setup for leaf functions
-moslib=
-moutline-atomics
Generate local calls to out-of-line atomic operations
-moutline
Enable function outlining (AArch64 only)
-mpacked-stack
Use packed stack layout (SystemZ only).
-mpackets
Enable generation of instruction packets
-mpad-max-prefix-size=
Specify maximum number of prefixes to use for padding
-mpaired-vector-memops
-mpascal-strings
-mpclmul
-mpconfig
-mpcrel
-mpku
-mpopcntd
-mpopcnt
-mpower10-vector
-mpower8-vector
-mpower9-vector
-mprefer-vector-width=
Specifies preferred vector width for auto-vectorization. Defaults to 'none' which allows target specific decisions.
-mprefetchwt1
-mprefixed
-mprfchw
-mprivileged
-mptwrite
-mpure-code
Create phony target for each dependency (other than main file)
-mqdsp6-compat
Enable hexagon-qdsp6 backward compatibility
Specify name of main file output to quote in depfile
-mrdpid
-mrdrnd
-mrdseed
-mreassociate
Allow reassociation transformations for floating-point instructions
-mrecip=
-mrecip
-mrecord-mcount
Generate a __mcount_loc section entry for each __fentry__ call.
-mred-zone
-mreference-types
-mregparm=
-mregparm
Limit the number of registers available for integer arguments
-mrelax-all
(integrated-as) Relax all machine instructions
-mrelax-pic-calls
Produce relaxation hints for linkers to try optimizing PIC call sequences into direct calls (MIPS only)
--mrelax-relocations
Use relaxable elf relocations
-mrelaxed-simd
-mrelax
Enable linker relaxation
-mrelocation-model
The relocation model to use
static,pic,ropi,rwpi,ropi-rwpi,dynamic-no-pic
-mrestrict-it
Disallow generation of deprecated IT blocks for ARMv8. It is on by default for ARMv8 Thumb mode.
-mretpoline-external-thunk
-mretpoline
-mrop-protect
-mrtd
Make StdCall calling convention the default
-mrtm
-msahf
-msave-restore
Enable using library calls for save and restore
-msave-temp-labels
Save temporary labels in the symbol table. Note this may change .s semantics and shouldn't generally be used on compiler-generated code.
-msecure-plt
-mserialize
-mseses
Enable speculative execution side effect suppression (SESES). Includes LVI control flow integrity mitigations
-msgx
-msha
-mshstk
-msign-ext
-msign-return-address-key=
a_key,b_key
-msign-return-address=
Select return address signing scope
none,all,non-leaf
-msimd128
-msim
-msingle-float
-msmall-data-limit=
Put global and static data smaller than the limit into a special section
-msmall-data-limit
-msmall-data-threshold=
-msoft-float
Use software floating point
-mspeculative-load-hardening
-mspe
-msse2
-msse3
-msse4.1
-msse4.2
-msse4a
-msse4
-msse
-mssse3
-mstack-alignment=
Set the stack alignment
-mstack-arg-probe
Enable stack probes
-mstack-probe-size=
Set the stack probe size
-mstack-protector-guard-offset=
Use the given offset for addressing the stack-protector guard
-mstack-protector-guard-reg=
Use the given reg for addressing the stack-protector guard
-mstack-protector-guard=
Use the given guard (global, tls) for addressing the stack-protector guard
-mstackrealign
Force realign the stack at entry to every function
-mstrict-align
Force all memory accesses to be aligned (same as mno-unaligned-access)
-msve-vector-bits=
Specify the size in bits of an SVE vector register. Defaults to the vector length agnostic value of "scalable". (AArch64 only)
-msvr4-struct-return
Return small structs in registers (PPC32 only)
-mt-migrate-directory
Directory for temporary files produced during ARC or ObjC migration
-mtail-call
-mtargetos=
Set the deployment target to be the specified OS and OS version
-mtbm
/MTd
Use static debug run-time
-mtgsplit
Enable threadgroup split execution mode (AMDGPU only)
-mthread-model
The thread model to use, e.g. posix, single (posix by default)
posix,single
-mthreads
-mthumb
-mtls-direct-seg-refs
Enable direct TLS access through segment registers (default)
-mtls-size=
Specify bit size of immediate TLS offsets (AArch64 ELF only): 12 (for 4KB) | 24 (for 16MB, default) | 32 (for 4GB) | 48 (for 256TB, needs -mcmodel=large)
-mtp=
Thread pointer access method (AArch32/AArch64 only)
soft,cp15,el0,el1,el2,el3
-mtp
Mode for reading thread pointer
-mtsxldtrk
-mtune=?
-mtune=
Only supported on X86 and RISC-V. Otherwise accepted for compatibility with GCC.
-mtvos-simulator-version-min=
-mtvos-version-min=
Specify name of main file output in depfile
Use static run-time
-muclibc
-muintr
-multi_module
-multiply_defined_unused
-multiply_defined
-munaligned-access
Allow memory accesses to be unaligned (AArch32/AArch64 only)
-municode
-munsafe-fp-atomics
Enable unsafe floating point atomic instructions (AMDGPU only)
-mv55
-mv5
-mv60
-mv62
-mv65
-mv66
-mv67t
-mv67
-mv68
-mvaes
-mvirt
-mvpclmulqdq
-mvscale-max=
Specify the vscale maximum. Defaults to the vector length agnostic value of "0". (AArch64 only)
-mvscale-min=
Specify the vscale minimum. Defaults to the vector length agnostic value of "0". (AArch64 only)
-mvsx
-mvx
-mvzeroupper
Use NMake/Jom format for the depfile
-mwaitpkg
-mwarn-nonportable-cfstrings
-mwatch-bitcode-compatibility
-mwatchos-simulator-version-min=
-mwatchos-version-min=
-mwatchsimulator-version-min=
-mwavefrontsize64
Specify wavefront size 64 mode (AMDGPU only)
-mwbnoinvd
-mwidekl
-mwindows
-mx32
-mx87
-mxgot
-mxop
-mxsavec
-mxsaveopt
-mxsaves
-mxsave
-mzvector
Like -MD, but also implies -E and writes to stdout by default
-new-struct-path-tbaa
Enable enhanced struct-path aware Type Based Alias Analysis
-no-canonical-prefixes
Use relative paths for invoking subcommands
-no-clear-ast-before-backend
Don't clear the Clang AST before running backend code generation
-no-code-completion-globals
Do not include global declarations in code-completion results.
-no-code-completion-ns-level-decls
Do not include declarations inside namespaces (incl. global namespace) in the code-completion results.
-no-cpp-precomp
--no-cuda-gpu-arch=
--no-cuda-include-ptx=
Do not include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
--no-cuda-noopt-device-debug
--no-cuda-version-check
Don't error out if the detected version of the CUDA install is too low for the requested CUDA gpu architecture.
-no-emit-llvm-uselists
Don't preserve order of LLVM use-lists when serializing
-no-finalize-removal
Do not remove finalize method in gc mode
--no-gpu-bundle-output
Do not bundle output files of HIP device compilation
-no-implicit-float
-no-integrated-as
-no-integrated-cpp
--no-line-commands
-no-ns-alloc-error
Do not error on use of NSAllocateCollectable/NSReallocateCollectable
--no-offload-arch=
Remove CUDA/HIP offloading device architecture (e.g. sm_35, gfx906) from the list of devices to compile for. 'all' resets the list to its default value.
-no-pedantic
-no-pie
-no-pthread
-no-round-trip-args
Disable command line arguments round-trip.
--no-standard-includes
--no-standard-libraries
-no-struct-path-tbaa
Turn off struct-path aware Type Based Alias Analysis
--no-system-header-prefix=
Treat all #include paths starting with <prefix> as not including a system header.
--no-system-header-prefix
--no-undefined
--no-warnings
-no_dead_strip_inits_and_terms
-nobuiltininc
Disable builtin #include directories
-nocpp
Disable predefined and command line preprocessor macros
-nocudainc
-nocudalib
-nodefaultlibs
-nodriverkitlib
-nofixprebinding
-nogpuinc
Do not add include paths for CUDA/HIP and do not include the default CUDA/HIP wrapper headers
-nogpulib
Do not link device library for CUDA/HIP device compilation
-nolibc
/nologo
-nomultidefs
-nopie
-noprebind
-noprofilelib
-noseglinkedit
-nostartfiles
-nostdinc++
Disable standard #include directories for the C++ standard library
-nostdinc
-nostdlib++
-nostdlibinc
-nostdlib
-nostdsysteminc
Disable standard system #include directories
Don't automatically start assembly file with a text section
Optimize for size  (like /Og     /Os /Oy /Ob2 /GF /Gy)
Optimize for speed (like /Og /Oi /Ot /Oy /Ob2 /GF /Gy)
/Ob0
Disable function inlining
/Ob1
Only inline functions explicitly or implicitly marked inline
/Ob2
Inline functions as deemed beneficial by the compiler
-ObjC++
Treat source input files as Objective-C++ inputs
-objc-isystem
Add directory to the ObjC SYSTEM include search path
-objcmt-atomic-property
Make migration to 'atomic' properties
-objcmt-migrate-all
Enable migration to modern ObjC
-objcmt-migrate-annotation
Enable migration to property and method annotations
-objcmt-migrate-designated-init
Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods
-objcmt-migrate-instancetype
Enable migration to infer instancetype for method result type
-objcmt-migrate-literals
Enable migration to modern ObjC literals
-objcmt-migrate-ns-macros
Enable migration to NS_ENUM/NS_OPTIONS macros
-objcmt-migrate-property-dot-syntax
Enable migration of setter/getter messages to property-dot syntax
-objcmt-migrate-property
Enable migration to modern ObjC property
-objcmt-migrate-protocol-conformance
Enable migration to add protocol conformance on classes
-objcmt-migrate-readonly-property
Enable migration to modern ObjC readonly property
-objcmt-migrate-readwrite-property
Enable migration to modern ObjC readwrite property
-objcmt-migrate-subscripting
Enable migration to modern ObjC subscripting
-objcmt-ns-nonatomic-iosonly
Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property's 'atomic' attribute
-objcmt-returns-innerpointer-property
Enable migration to annotate property with NS_RETURNS_INNER_POINTER
-objcmt-white-list-dir-path=
-objcmt-whitelist-dir-path=
Only modify files with a filename contained in the provided directory path
-objcxx-isystem
Add directory to the ObjC++ SYSTEM include search path
-ObjC
Treat source input files as Objective-C inputs
-object
Disable optimization
-Ofast
--offload-arch=
CUDA offloading device architecture (e.g. sm_35), or HIP offloading target ID in the form of a device architecture followed by target ID features delimited by a colon. Each target ID feature is a pre-defined string followed by a plus or minus sign (e.g. gfx908:xnack+:sramecc-).  May be specified more than once.
No effect
/Oi-
Disable use of builtin functions
Enable use of builtin functions
/openmp-
Disable OpenMP support
/openmp:experimental
Enable OpenMP support with experimental SIMD support
/openmp
Enable OpenMP support
-opt-record-file
File name to use for YAML optimization record output
-opt-record-format
The format used for serializing remarks (default: YAML)
-opt-record-passes
Only record remark information for passes whose names match the given regular expression
--optimize=
--optimize
Optimize for size
Optimize for speed
-output-asm-variant
Select the asm variant index to use for output
--output-class-directory=
--output-class-directory
--output=
--output
Deprecated (like /Og /Oi /Ot /Oy /Ob2); use /O2
/Oy-
Disable frame pointer omission (x86 only, default)
Enable frame pointer omission (x86 only)
Set multiple /O flags at once; e.g. '/O2y-' for '/O2 /Oy-'
<flags>
Write output to <file>
Deprecated (set output file name); use /Fe or /Fe
-pagezero_size
--param=
--param
-pass-exit-codes
-pch-through-hdrstop-create
When creating a PCH, stop PCH generation after #pragma hdrstop.
-pch-through-hdrstop-use
When using a PCH, skip tokens until after a #pragma hdrstop.
-pch-through-header=
Stop PCH generation after including this file.  When using a PCH, skip tokens until after this file is included.
-pedantic-errors
-pedantic
Warn on language extensions
/permissive-
Disable non conforming code from compiling (default)
/permissive
Enable some non conforming code to compile
Enable mcount instrumentation
-pic-is-pie
File is for a position independent executable
-pic-level
Value for __PIC__
-pie
-pipe
Use pipes between commands, when possible
-plugin-arg-
Pass <arg> to plugin <name>
<name> <arg>
-plugin
Use the named plugin action instead of the default action (use "help" to list available options)
-preamble-bytes=
Assume that the precompiled header is a precompiled preamble covering the first N bytes of the main file
-prebind_all_twolevel_modules
-prebind
--precompile
Only precompile the input
--prefix=
--prefix
-preload
--preprocess
-print-dependency-directives-minimized-source
Print the output of the dependency directives source minimizer
--print-diagnostic-categories
-print-effective-triple
Print the effective target triple
-print-file-name=
Print the full library path of <file>
--print-file-name
-print-ivar-layout
Enable Objective-C Ivar layout bitmap print trace
-print-libgcc-file-name
Print the library path for the currently used compiler runtime library ("libgcc.a" or "libclang_rt.builtins.*.a")
--print-missing-file-dependencies
-print-multi-directory
-print-multi-lib
-print-multi-os-directory
-print-multiarch
Print the multiarch target triple
-print-preamble
Print the "preamble" of a file, which is a candidate for implicit precompiled headers.
-print-prog-name=
Print the full program path of <name>
--print-prog-name
-print-resource-dir
Print the resource directory pathname
-print-rocm-search-dirs
Print the paths used for finding ROCm installation
-print-runtime-dir
Print the directory pathname containing clangs runtime libraries
-print-search-dirs
Print the paths used for finding libraries and programs
-print-stats
Print performance metrics and statistics
-print-supported-cpus
Print supported cpu models for the given target (if target is not specified, it will print the supported cpus for the default target)
-print-target-triple
Print the normalized target triple
-print-targets
Print the registered targets
-private_bundle
--product-name=
--profile-blocks
--profile
-pthreads
-pthread
Support POSIX threads in generated code
--ptxas-path=
Path to ptxas (used for compiling CUDA code)
Disable linemarker output in -E mode
Preprocess to file
/Qfast_transcendentals
/QIfist
/Qimprecise_fwaits
/QIntel-jcc-erratum
Align branches within 32-byte boundaries to mitigate the performance impact of the Intel JCC erratum.
Do not emit metadata containing compiler name and version
/Qpar-report
/Qpar
/Qsafe_fp_loads
/Qspectre-load-cf
/Qspectre-load
/Qspectre
-Qunused-arguments
Don't emit warning for unused driver arguments
/Qvec-report
/Qvec-
Disable the loop vectorization passes
/Qvec
Emit metadata containing compiler name and version
-rdynamic
-read_only_relocs
-record-command-line
The string to embed in the .LLVM.command.line section.
/reference
-relaxed-aliasing
Turn off Type Based Alias Analysis
-relocatable-pch
Whether to build a relocatable precompiled header
-remap-file
Replace the contents of the <from> file with the contents of the <to> file
<from>;<to>
-remap
-remove-preceeding-explicit-module-build-incompatible-options
Removes any arguments before this one that would be incompatible with explicitly building a module. This includes things like -o and input files. This option can be used to append arguments to convert a build of a translation unit with implicit modules into an explicit build of a specific module.
-resource-dir=
-resource-dir
The directory which holds the compiler resource files
--resource=
--resource
-rewrite-legacy-objc
Rewrite Legacy Objective-C source to C++
-rewrite-macros
Expand macros without full preprocessing
-rewrite-objc
Rewrite Objective-C source to C++
-rewrite-test
Rewriter playground
--rocm-device-lib-path=
ROCm device library path. Alternative to rocm-path.
--rocm-path=
ROCm installation path, used for finding and automatically linking required bitcode libraries.
-round-trip-args
Enable command line arguments round-trip.
-Rpass-analysis=
Report transformation analysis from optimization passes whose name matches the given POSIX regular expression
-Rpass-missed=
Report missed transformations by optimization passes whose name matches the given POSIX regular expression
-Rpass=
Report transformations performed by optimization passes whose name matches the given POSIX regular expression
-rpath
--rsp-quoting=
Set the rsp quoting to either 'posix', or 'windows'
/RTC
-rtlib=
Compiler runtime library to use
--rtlib
Enable the specified remark
<remark>
-save-stats=
Save llvm statistics.
-save-stats
-save-temps=
Save intermediate compilation results.
-save-temps
Save intermediate compilation results
/sdl-
/sdl
-sectalign
-sectcreate
-sectobjectsymbols
-sectorder
-seg1addr
-seg_addr_table_filename
-seg_addr_table
-segaddr
-segcreate
-seglinkedit
-segprot
-segs_read_only_addr
-segs_read_write_addr
-segs_read_
-serialize-diagnostic-file
File for serializing diagnostics in a binary format
<filename>
-serialize-diagnostics
Serialize compiler diagnostics to a file
-setup-static-analyzer
Set up preprocessor for static analyzer (done automatically when static analyzer is run).
-shared-libasan
-shared-libgcc
-shared-libsan
Dynamically link the sanitizer runtime
-shared
-show-encoding
Show instruction encoding information in transliterate mode
--show-includes
Print cl.exe style /showIncludes to stdout
-show-inst
Show internal instruction representation in transliterate mode
/showFilenames-
Do not print the name of each compiled file (default)
/showFilenames
Print the name of each compiled file
/showIncludes:user
Like /showIncludes but omit system headers
/showIncludes
Print info about included files to stderr
--signed-char
-single_module
-skip-unused-modulemap-deps
Include module map files only for imported modules in dependency output
/source-charset:
Set source encoding, supports only UTF-8
/sourceDependencies:directives
/sourceDependencies
-specs=
-specs
-split-dwarf-file
Name of the split dwarf debug info file to encode in the object file
-split-dwarf-output
File name to use for split dwarf debug info output
-stack-protector-buffer-size
Lower bound for a buffer to be considered for stack protection
-stack-protector
Enable stack protectors
0,1,2,3
-stack-usage-file
Filename (or -) to write stack usage output to
-static-define
Should __STATIC__ be defined
-static-libgcc
-static-libgfortran
-static-libsan
Statically link the sanitizer runtime
-static-libstdc++
-static-openmp
Use the static host OpenMP runtime while linking.
-static-pie
-static
-stats-file=
Filename to write statistics to
-std-default=
/std:
Set language version (c++14,c++17,c++20,c++latest,c11,c17)
Language standard to compile for
-stdlib++-isystem
Use directory as the C++ standard library include path
-stdlib=
C++ standard library to use
libc++,libstdc++,platform
--stdlib
--std
-sub_library
-sub_umbrella
-sycl-std=
SYCL language standard to compile for.
2020,2017,121,1.2.1,sycl-1.2.1
-sys-header-deps
Include system headers in dependency output
--sysroot=
--sysroot
--system-header-prefix=
Treat all #include paths starting with <prefix> as including a system header.
--system-header-prefix
Only run preprocess and compilation steps
-target-abi
Target a particular ABI type
-target-cpu
Target a specific cpu type
-target-feature
Target specific attributes
--target-help
-target-linker-version
Target linker version
-target-sdk-version=
The version of target SDK used for compilation
-target-variant-sdk-version=
The version of target variant SDK used for compilation
-target-variant-triple
Specify the target variant triple
-target-variant
Generate code that may run on a particular variant of the deployment target
--target=
Generate code for the given target
-target
-Tbss
Set starting address of BSS to <addr>
<addr>
Treat all source files as C
Treat <file> as C source file
-Tdata
Set starting address of DATA to <addr>
-templight-dump
Dump templight information to stdout
-test-io
Run the InputOuputTest action. Use for development and testing only.
-time
Time individual commands
Treat all source files as C++
Treat <file> as C++ source file
--trace-includes
-traditional-cpp
Enable some traditional CPP emulation
-traditional
/translateInclude
-trigraphs
-trim-egraph
Only show error-related paths in the analysis graph
-triple=
-triple
Specify target triple (e.g. i686-apple-darwin9)
-Ttext
Set starting address of TEXT to <addr>
-tune-cpu
Tune for a specific cpu type
/tune:
Set CPU for optimization without affecting instruction set
-twolevel_namespace_hints
-twolevel_namespace
Specify <script> as linker script
<script>
-umbrella
--undefine-macro=
--undefine-macro
-undefined
-undef
undef all system defines
-unexported_symbols_list
-unoptimized-cfg
Generate unoptimized CFGs for all analyses
--unsigned-char
-unwindlib=
Unwind library to use
libgcc,unwindlib,platform
--user-dependencies
/utf-8
Set source and runtime encoding to UTF-8 (default)
Undefine macro <macro>
<macro>
Undefine macro
/validate-charset-
/validate-charset
/vctoolsdir
Path to the VCToolChain
/vctoolsversion
For use with /winsysroot, defaults to newest found
Control vtordisp placement
-vectorize-loops
Run the Loop vectorization passes
-vectorize-slp
Run the SLP vectorization passes
--verbose
--verify-debug-info
Verify the binary representation of debug output
-verify-ignore-unexpected=
Ignore unexpected diagnostic messages
-verify-ignore-unexpected
-verify-pch
Load and verify that a pre-compiled header file is not stale
-verify=
Verify diagnostic output using comment directives that start with prefixes in the comma-separated sequence <prefixes>
<prefixes>
-verify
Equivalent to -verify=expected
--version
Print version information
-version
Print the compiler version
-via-file-asm
Write assembly to file for input to assemble jobs
/vmb
Use a best-case representation method for member pointers
/vmg
Use a most-general representation for member pointers
/vmm
Set the default most-general representation to multiple inheritance
/vms
Set the default most-general representation to single inheritance
/vmv
Set the default most-general representation to virtual inheritance
/volatile:iso
Volatile loads and stores have standard semantics
/volatile:ms
Volatile loads and stores have acquire and release semantics
-vtordisp-mode=
Control vtordisp placement on win32 targets
Show commands to run and use verbose output
Disable all warnings
Enable -Wall
Enable -Wall and -Wextra
-Wa,
Pass the comma separated arguments in <arg> to the assembler
-Wall
/Wall
Enable -Weverything
--warn-=
--warn-
-WCL4
-Wdeprecated
Enable warnings for deprecated constructs and define __DEPRECATED
-weak-l
-weak_framework
-weak_library
-weak_reference_mismatches
-Wframe-larger-than=
-Wframe-larger-than
-whatsloaded
-why_load
-whyload
/winsdkdir
Path to the Windows SDK
/winsdkversion
Full version of the Windows SDK, defaults to newest found
/winsysroot
Same as "/diasdkdir <dir>/DIA SDK" /vctoolsdir <dir>/VC/Tools/MSVC/<vctoolsversion> "/winsdkdir <dir>/Windows Kits/10"
-Wl,
Pass the comma separated arguments in <arg> to the linker
-Wlarge-by-value-copy=
-Wlarge-by-value-copy
Warn if a function definition returns or accepts an object larger in bytes than a given value
-Wlarger-than-
-Wlarger-than=
-Wno-deprecated
-Wno-nonportable-cfstrings
-Wno-rewrite-macros
Silence ObjC rewriting warnings
-Wno-write-strings
-Wnonportable-cfstrings
-working-directory=
-working-directory
Resolve file paths relative to the specified directory
-Wp,
Pass the comma separated arguments in <arg> to the preprocessor
/Wp64
--write-dependencies
--write-user-dependencies
-Wundef-prefix=
Enable warnings for undefined macros with a prefix in the comma separated list <arg>
-Wwrite-strings
/WX-
Do not treat warnings as errors (default)
Treat warnings as errors
Enable the specified warning
<warning>
Suppress all warnings
-Xanalyzer
Pass <arg> to the static analyzer
-Xarch_device
Pass <arg> to the CUDA/HIP device compilation
-Xarch_host
Pass <arg> to the CUDA/HIP host compilation
-Xarch_
-Xassembler
Pass <arg> to the assembler
-Xclang
Pass <arg> to the clang compiler
-Xcuda-fatbinary
Pass <arg> to fatbinary invocation
-Xcuda-ptxas
Pass <arg> to the ptxas assembler
-Xflang
Pass <arg> to the flang compiler
-Xlinker
Pass <arg> to the linker
-Xopenmp-target=
Pass <arg> to the target offloading toolchain identified by <triple>.
<triple> <arg>
-Xopenmp-target
Pass <arg> to the target offloading toolchain.
-Xpreprocessor
Pass <arg> to the preprocessor
Do not add %INCLUDE% to include search path
Treat subsequent input files as having type <language>
<language>
Disable precompiled headers, overrides /Yc and /Yu
Generate a pch file for all code up to and including <filename>
Load a pch file and use it instead of all code up to and including <filename>
-Z-reserved-lib-cckext
-Z-reserved-lib-stdc++
-Z-Xlinker-no-demangle
Enable CodeView debug information in object files
/Zc:__cplusplus
/Zc:alignedNew-
Disable C++17 aligned allocation functions
/Zc:alignedNew
/Zc:auto
/Zc:char8_t-
Disable char8_t from c++2a
/Zc:char8_t
Enable char8_t from C++2a
/Zc:dllexportInlines-
Do not dllexport/dllimport inline member functions of dllexport/import classes
/Zc:dllexportInlines
dllexport/dllimport inline member functions of dllexport/import classes (default)
/Zc:forScope
/Zc:inline
/Zc:rvalueCast
/Zc:sizedDealloc-
Disable C++14 sized global deallocation functions
/Zc:sizedDealloc
/Zc:strictStrings
Treat string literals as const
/Zc:ternary
/Zc:threadSafeInit-
Disable thread-safe initialization of static variables
/Zc:threadSafeInit
Enable thread-safe initialization of static variables
/Zc:trigraphs-
Disable trigraphs (default)
/Zc:trigraphs
Enable trigraphs
/Zc:twoPhase-
Disable two-phase name lookup in templates (default)
/Zc:twoPhase
Enable two-phase name lookup in templates
/Zc:wchar_t
/Zc:
/ZH:MD5
/ZH:SHA1
/ZH:SHA_256
Like /Z7
-Zlinker-input
Do not let object file auto-link default libraries
/Zo-
Set default maximum struct packing alignment to 1
Set default maximum struct packing alignment
Syntax-check only
Pass -z <arg> to the linker
-ivfsoverlay
repro-modules
index-store
 Arguments passed via response file:
 (end of response file)
 (in-process)
-serialize-diagnostic-file
-fdebug-compilation-dir
-include
-idirafter
-internal-isystem
-iwithprefix
-internal-externc-isystem
-iprefix
-iwithprefixbefore
preprocessor
precompiler
compiler
backend
assembler
linker
ifsmerger
-fsanitize-trap=undefined
-fsanitize=cfi-mfcall
-fsanitize=vptr
-flto
-ffixed-x18
-fno-sanitize-trap=
fsanitize-minimal-runtime
fsanitize-trap=cfi
-fsanitize-coverage=trace-pc-guard
-fsanitize-coverage=func
-fsanitize-coverage=bb
-fsanitize-coverage=edge
-fsanitize-coverage=trace-bb
-fsanitize-coverage=8bit-counters
-fsanitize-coverage=[func|bb|edge]
-fsanitize-coverage=[func|bb|edge],[trace-pc-guard|trace-pc]
-fsanitize=address
interceptor
-fsanitize-coverage-type=1
-fsanitize-coverage-type=2
-fsanitize-coverage-type=3
ubsan_standalone
ubsan_standalone_cxx
stats_client
stats
__sanitizer_stats_register
-fsanitize-ignorelist=
-fsanitize-system-ignorelist=
-tsan-instrument-memory-accesses=0
-tsan-instrument-memintrinsics=0
-tsan-instrument-func-entry-exit=0
-tsan-instrument-atomics=0
-hwasan-experimental-use-page-aliases=1
-asan-detect-invalid-pointer-cmp
-asan-detect-invalid-pointer-sub
-asan-instrumentation-with-call-threshold=0
hwasan-abi=
+tagged-globals
-fno-builtin-bcmp
-fno-builtin-memcmp
-fno-builtin-strncmp
-fno-builtin-strcmp
-fno-builtin-strncasecmp
-fno-builtin-strcasecmp
-fno-builtin-strstr
-fno-builtin-strcasestr
-fno-builtin-memmem
-fsanitize-trap
asan_ignorelist.txt
hwasan_ignorelist.txt
memtag_ignorelist.txt
msan_ignorelist.txt
tsan_ignorelist.txt
dfsan_abilist.txt
cfi_ignorelist.txt
ubsan_ignorelist.txt
share
address
pointer-compare
pointer-subtract
kernel-address
hwaddress
kernel-hwaddress
memtag
memory
kernel-memory
fuzzer
fuzzer-no-link
thread
leak
alignment
array-bounds
bool
builtin
float-cast-overflow
float-divide-by-zero
integer-divide-by-zero
nonnull-attribute
nullability-arg
nullability-assign
nullability-return
object-size
pointer-overflow
returns-nonnull-attribute
shift-base
shift-exponent
signed-integer-overflow
unreachable
vla-bound
vptr
unsigned-integer-overflow
unsigned-shift-base
dataflow
cfi-cast-strict
cfi-derived-cast
cfi-icall
cfi-mfcall
cfi-unrelated-cast
cfi-nvcall
cfi-vcall
safe-stack
shadow-call-stack
implicit-unsigned-integer-truncation
implicit-signed-integer-truncation
implicit-integer-sign-change
objc-cast
local-bounds
scudo
--linker-option=/include:
+mte
arm64e
arm64
arm64_32
ppcle
ppc64
ppc64le
darwin
freebsd
netbsd
openbsd
sunos
.obj
.lib
.dll.a
-android
clang_rt.
ld64.
libtool
llvm-ar
x86_64-apple-darwin20.1.0
profile
-internal-isystem
-internal-externc-isystem
-lc++
-lstdc++
-lcc_kext
crtfastmath.o
invalid Xarch argument: '%0', not all driver options can be forwared via Xarch argument
0123456789.
clang++
--driver-mode=g++
clang-c++
clang-cc
clang-cpp
--driver-mode=cpp
clang-g++
clang-gcc
clang-cl
--driver-mode=cl
--driver-mode=flang
clang::as
clang integrated assembler
IFS::Merger
llvm-ifs
offload bundler
clang-offload-bundler
offload wrapper
clang-offload-wrapper
armhf
i686
native
apple-m1
apple-s4
apple-a12
apple-a7
generic
+neon
-march=
+reserve-x30
-fp-armv8
-crypto
-neon
+tpidr-el3
+tpidr-el2
+tpidr-el1
+harden-sls-retbr
+harden-sls-blr
+harden-sls-nocomdat
+crc
-crc
-fullfp16
+fp16fml
+v8.4a
+fullfp16
-fp16fml
+crypto
+v8.5a
+v9a
+v9.1a
+v9.2a
-sm4
-sha3
-sha2
-aes
+sm4
+sha3
+sha2
+aes
+v8.2a
+v8.3a
+v8.6a
+v8.7a
+i8mm
+bf16
+sve2
+strict-align
+reserve-x1
+reserve-x2
+reserve-x3
+reserve-x4
+reserve-x5
+reserve-x6
+reserve-x7
+reserve-x9
+reserve-x10
+reserve-x11
+reserve-x12
+reserve-x13
+reserve-x14
+reserve-x15
+reserve-x18
+reserve-x20
+reserve-x21
+reserve-x22
+reserve-x23
+reserve-x24
+reserve-x25
+reserve-x26
+reserve-x27
+reserve-x28
+call-saved-x8
+call-saved-x9
+call-saved-x10
+call-saved-x11
+call-saved-x12
+call-saved-x13
+call-saved-x14
+call-saved-x15
+call-saved-x18
+no-neg-immediates
neon
+f32mm
lightning
cyclone
vortex
+zcm
+zcz
-mcpu=
soft
armeb
-mthumb
thumbeb
thumb
hard
+soft-float
+soft-float-abi
-mfpu=
+read-tp-hard
native
-dotprod
-bf16
-mve
-mve.fp
-fpregs
sha2
+8msecext
+fix-cmse-cve-2021-35465
-fix-cmse-cve-2021-35465
+long-calls
+execute-only
v8m.base
+reserve-r9
+no-movt
--be8
+mve
crypto
common
m68000
68000
M68000
m68010
68010
M68010
m68020
68020
M68020
m68030
68030
M68030
m68040
68040
M68040
m68060
68060
M68060
-hard-float
+reserve-a0
+reserve-a1
+reserve-a2
+reserve-a3
+reserve-a4
+reserve-a5
+reserve-a6
+reserve-d0
+reserve-d1
+reserve-d2
+reserve-d3
+reserve-d4
+reserve-d5
+reserve-d6
+reserve-d7
mips32r2
mips64r2
mips32r6
mips64r6
mips32
mips3
mips2
mips1
mips4
mips5
mips32r3
mips32r5
mips64
mips64r3
mips64r5
octeon
p5600
+noabicalls
-noabicalls
-long-calls
+xgot
-xgot
+nan2008
-nan2008
+abs2008
-abs2008
single-float
mips16
micromips
dspr2
-fp64
+fpxx
+nooddspreg
+fp64
nooddspreg
nomadd4
virt
ginv
hazard
+use-indirect-jump-hazard
603e
603ev
604e
pwr3
7400
7450
8548
e500
e500mc
e5500
power3
power4
pwr4
power5
pwr5
power5x
pwr5x
power6
pwr6
power6x
pwr6x
pwr7
pwr8
pwr9
pwr10
future
powerpc
powerpc64
ppc64
powerpc64le
ppc64le
-mpower7
-mpower8
-mpower9
-mpower10
-many
+spe
+secure-plt
+reserve-x8
+reserve-x16
+reserve-x17
+reserve-x19
+reserve-x29
+reserve-x31
+relax
-relax
+save-restore
-save-restore
ilp32d
ilp32e
ilp32
lp64d
lp64
rv32e
rv32imafdc
rv64imafdc
rv32imac
rv64imac
-Av9a
-Av9
-Av9b
-Av9d
-Av8
-Asparclite
-Asparclet
-Av8plus
-Av8plusb
-Av8plusd
-Aleon
+soft-float
generic
+transactional-execution
-transactional-execution
+vector
-vector
sandybridge
AVX2
haswell
AVX512F
AVX512
skylake-avx512
IA32
pentium3
SSE2
pentium4
core-avx2
penryn
nehalem
core2
yonah
btver2
x86-64
i486
-rdrnd
-pclmul
-rtm
-fsgsbase
+sse4.2
+popcnt
+cx16
+ssse3
+retpoline-indirect-calls
+retpoline-indirect-branches
+lvi-load-hardening
+lvi-cfi
+seses
-x87
-mmx
-sse
-a32
-a64
-many
-bnso
-bM:SRE
-bnoentry
-bdbg:namedsects
-b32
-bpT:0x10000000
-bpD:0x20000000
-b64
-bpT:0x100000000
-bpD:0x110000000
crti.o
crti_64.o
-bcdtors:all:0:s
-lpthreads
picking up libstdc++ headers is unimplemented on AIX
opt/IBM/openxlCSDK
-D__LIBC_NO_CPP_MATH_OVERLOADS__
linking libstdc++ unimplemented on AIX
-lc++abi
gcrt0.o
gcrt0_64.o
mcrt0.o
mcrt0_64.o
crt0.o
crt0_64.o
aix::Assembler
assembler
aix::Linker
linker
--sysroot=
-Bstatic
-export-dynamic
-Bshareable
-dynamic-linker
/lib/ld-ananas.so
crtbeginS.o
crtbegin.o
crtendS.o
crtend.o
crtn.o
ananas::Assembler
ananas::Linker
SPACK package 
 not found at 
Cannot use SPACK package 
 at 
 due to multiple installations for the same version
ROCM_PATH
/opt/rocm
/opt
/opt/
HIP_DEVICE_LIB_PATH
amdgcn
/.hipVersion
Found HIP installation: 
, version 
cuda_wrappers
__clang_hip_runtime_wrapper.h
-shared
+wavefrontsize64
CL1.2
ROCm installation search path
 (Spack 
amdgpu::Linker
ld.lld
-mlink-builtin-bitcode
at90s1200
avr1
attiny11
attiny12
attiny15
attiny28
at90s2313
tiny-stack
avr2
at90s2323
at90s2333
at90s2343
at90s4433
attiny22
attiny26
at90s4414
at90s4434
at90s8515
at90c8534
at90s8535
attiny13
avr25/tiny-stack
avr25
attiny13a
attiny2313
attiny2313a
attiny24
attiny24a
attiny25
attiny261
attiny261a
at86rf401
ata5272
attiny4313
attiny44
attiny44a
attiny84
attiny84a
attiny45
attiny85
attiny441
attiny461
attiny461a
attiny841
attiny861
attiny861a
attiny87
attiny43u
attiny48
attiny88
attiny828
at43usb355
avr3
at76c711
atmega103
avr31
at43usb320
attiny167
avr35
at90usb82
at90usb162
ata5505
atmega8u2
atmega16u2
atmega32u2
attiny1634
atmega8
avr4
ata6289
atmega8a
ata6285
ata6286
atmega48
atmega48a
atmega48pa
atmega48pb
atmega48p
atmega88
atmega88a
atmega88p
atmega88pa
atmega88pb
atmega8515
atmega8535
atmega8hva
at90pwm1
at90pwm2
at90pwm2b
at90pwm3
at90pwm3b
at90pwm81
ata5790
avr5
ata5795
atmega16
atmega16a
atmega161
atmega162
atmega163
atmega164a
atmega164p
atmega164pa
atmega165
atmega165a
atmega165p
atmega165pa
atmega168
atmega168a
atmega168p
atmega168pa
atmega168pb
atmega169
atmega169a
atmega169p
atmega169pa
atmega32
atmega32a
atmega323
atmega324a
atmega324p
atmega324pa
atmega325
atmega325a
atmega325p
atmega325pa
atmega3250
atmega3250a
atmega3250p
atmega3250pa
atmega328
atmega328p
atmega329
atmega329a
atmega329p
atmega329pa
atmega3290
atmega3290a
atmega3290p
atmega3290pa
atmega406
atmega64
atmega64a
atmega640
atmega644
atmega644a
atmega644p
atmega644pa
atmega645
atmega645a
atmega645p
atmega649
atmega649a
atmega649p
atmega6450
atmega6450a
atmega6450p
atmega6490
atmega6490a
atmega6490p
atmega64rfr2
atmega644rfr2
atmega16hva
atmega16hva2
atmega16hvb
atmega16hvbrevb
atmega32hvb
atmega32hvbrevb
atmega64hve
at90can32
at90can64
at90pwm161
at90pwm216
at90pwm316
atmega32c1
atmega64c1
atmega16m1
atmega32m1
atmega64m1
atmega16u4
atmega32u4
atmega32u6
at90usb646
at90usb647
at90scr100
at94k
m3000
atmega128
avr51
atmega128a
atmega1280
atmega1281
atmega1284
atmega1284p
atmega128rfa1
atmega128rfr2
atmega1284rfr2
at90can128
at90usb1286
at90usb1287
atmega2560
avr6
atmega2561
atmega256rfr2
atmega2564rfr2
attiny4
avrtiny
attiny5
attiny9
attiny10
attiny20
attiny40
atxmega16a4
avrxmega2
atxmega16a4u
atxmega16c4
atxmega16d4
atxmega32a4
atxmega32a4u
atxmega32c4
atxmega32d4
atxmega32e5
atxmega16e5
atxmega8e5
atxmega64a3u
avrxmega4
atxmega64a4u
atxmega64b1
atxmega64b3
atxmega64c3
atxmega64d3
atxmega64d4
atxmega64a1
avrxmega5
atxmega64a1u
atxmega128a3
avrxmega6
atxmega128a3u
atxmega128b1
atxmega128b3
atxmega128c3
atxmega128d3
atxmega128d4
atxmega192a3
atxmega192a3u
atxmega192c3
atxmega192d3
atxmega256a3
atxmega256a3u
atxmega256a3b
atxmega256a3bu
atxmega256c3
atxmega256d3
atxmega384c3
atxmega384d3
atxmega128a1
avrxmega7
atxmega128a1u
atxmega128a4u
/../bin
/lib/
--gc-sections
-Tdata=0x
--start-group
-l:crt
-lgcc
--end-group
/avr
/../avr
AVR::Linker
avr-ld
/usr/avr
/usr/lib/avr
libclang_rt.builtins-
baremetal
../lib/clang-runtimes
-lsupc++
-lunwind
-lclang_rt.builtins-
+march=rv64imac
+mabi=lp64
/rv64imafdc/lp64d
+march=rv64imafdc
+mabi=lp64d
rv64imafdc
rv64imac
march=rv64imac
march=rv64imafdc
lp64
mabi=lp64
lp64d
mabi=lp64d
+march=rv32imac
+mabi=ilp32
/rv32i/ilp32
+march=rv32i
/rv32im/ilp32
+march=rv32im
/rv32iac/ilp32
+march=rv32iac
/rv32imafc/ilp32f
+march=rv32imafc
+mabi=ilp32f
rv32i
rv32im
rv32imafc
march=rv32i
march=rv32im
rv32iac
march=rv32iac
rv32imac
march=rv32imac
march=rv32imafc
ilp32
mabi=ilp32
ilp32f
mabi=ilp32f
baremetal::Linker
openmp_wrappers
__clang_openmp_device_functions.h
-pch-through-hdrstop-
create
.dummy
CPATH
-c-isystem
C_INCLUDE_PATH
-cxx-isystem
CPLUS_INCLUDE_PATH
-objc-isystem
OBJC_INCLUDE_PATH
-objcxx-isystem
OBJCPLUS_INCLUDE_PATH
-arm-global-merge=false
-arm-global-merge=true
-aarch64-fix-cortex-a53-835769=1
-aarch64-fix-cortex-a53-835769=0
-aarch64-enable-global-merge=false
-aarch64-enable-global-merge=true
-msign-return-address=
-msign-return-address-key=
scalable
-mno-ldc1-sdc1
-mno-check-zero-division
-mips-ssection-threshold=
-mgpopt
-mlocal-sdata=1
-mlocal-sdata=0
-mextern-sdata=1
-mextern-sdata=0
-membedded-data=1
-membedded-data=0
-mips-compact-branches=
-mips-jalr-reloc=0
elfv2
elfv1
altivec
-mpacked-stack -mbackchain -mhard-float
-x86-asm-syntax=
-x86-asm-syntax=intel
-mstack-alignment=4
-Wreturn-type
-hexagon-small-data-threshold=
-enable-hexagon-ieee-rnd-near
-machine-sink-split=0
{ "directory": "
, "file": "
, "output": "
, "arguments": ["
--target=
"]},
.%%%%.json
clang
extract-api
C++ for IAMCU
-target-sdk-version=
-sycl-std=2020
-Wspir-compat
-analyze
-migrate
-Eonly
-emit-obj
-emit-header-module
-emit-module-interface
-emit-pch
-verify-pch
-extract-api
-emit-llvm
-emit-llvm-bc
-emit-interface-stubs
-interface-stub-version=
-module-file-info
-rewrite-objc
-flto=
-fembed-bitcode=marker
-DUNICODE
-analyzer-config-compatibility-mode=true
-mabi=vec-default
-maix-struct-return
-msvr4-struct-return
-fpcc-struct-return
-freg-struct-return
-fdefault-calling-conv=stdcall
-enable-matrix
-mframe-pointer=none
-mframe-pointer=non-leaf
-mframe-pointer=all
-enable-loop-distribute
-loop-distribute-mem
-extra-vectorizer-passes
-fextend-arguments=64
-no-integrated-as
Structure
Arguments
-funwind-tables=2
-funwind-tables=1
-aux-target-cpu
small
kernel
large
-mcmodel=large
-treat-scalable-fixed-error-as-warning
please use -maltivec and include altivec.h explicitly
please use -mno-altivec
-crash-diagnostics-dir=
CLANG_PROJECT_INDEX_PATH
GCC_TREAT_WARNINGS_AS_ERRORS
-Wno-error
-std=c++98
-std=c89
-std=c++14
-std=c++11
-Wlarge-by-value-copy=64
-fno-constant-nsnumber-literals
-fno-constant-nsarray-literals
-fno-constant-nsdictionary-literals
-fconstant-array-class
-fconstant-dictionary-class
-fconstant-integer-number-class
-fconstant-float-number-class
-fconstant-double-number-class
-mignore-xcoff-visibility
-fopenmp
-fnoopenmp-use-tls
-fopenmp-cuda-mode
-fopenmp-target-debug
-fopenmp-cuda-force-full-runtime
-fopenmp-assume-teams-oversubscription
-fopenmp-assume-threads-oversubscription
-ftrapv-handler
-fwrapv
-mstack-probe-size=0
-arm-restrict-it
-arm-no-restrict-it
-fcf-protection=
SampleUse with PGO options
-fblocks
-fgnuc-version=
-fms-compatibility-version=
-std=c11
-std=c17
-std=c++17
c++20
-std=c++20
c++latest
-std=c++2b
-fno-inline
c++2a
-exception-model=sjlj
-exception-model=seh
-exception-model=dwarf
-exception-model=wasm
-fpack-struct=1
-fmax-type-align=16
-fptrauth-intrinsics
-fptrauth-calls
-fptrauth-returns
-fptrauth-indirect-gotos
-fptrauth-auth-traps
-fptrauth-vtable-pointer-address-discrimination
-fptrauth-vtable-pointer-type-discrimination
-fptrauth-objc-interface-sel
-fptrauth-soft
-fptrauth-block-descriptor-pointers
-fptrauth-function-pointer-type-discrimination
-fptrauth-objc-class-ro
utf-8
-load
-finclude-default-header
-disable-llvm-optzns
-inline-threshold=
-fopenmp-is-device
-fopenmp-host-ir-file-path
-fopenmp-targets=
-flto=full
-fno-whole-program-vtables
-fno-split-lto-unit
-fsanitize=cfi
-global-isel=1
-global-isel-abort=2
-global-isel=0
AARCH64_ALWAYS_ENABLE_GLOBAL_ISEL
-global-isel
-global-isel-abort=0
-forder-file-instrumentation
-enable-order-file-instrumentation
+outline-atomics
-outline-atomics
-D__GCC_HAVE_DWARF2_CFI_ASM=1
-fomit-frame-pointer
clang frontend
-fobjc-runtime=
-D_DEBUG
-D_MT
-D_DLL
--dependent-lib=msvcrt
--dependent-lib=msvcrtd
--dependent-lib=libcmt
--dependent-lib=libcmtd
-D_VC_NODEFAULTLIB
--dependent-lib=oldnames
--show-includes
-fms-memptr-rep=single
-fms-memptr-rep=multiple
-fms-memptr-rep=virtual
-fdefault-calling-conv=cdecl
-fdefault-calling-conv=fastcall
-fdefault-calling-conv=vectorcall
-fdefault-calling-conv=regcall
cf,nochecks
ehcont
ehcont-
-fptrauth-abi-version=
-fptrauth-kernel-abi-version
-cc1as
-filetype
-dwarf-debug-producer
-arm-add-build-attributes
-aarch64-mark-bti-property
-type=
-targets=
-outputs=
-inputs=
-unbundle
-allow-missing-bundles
/E, /P or /EP
-fmacro-prefix-map=
-fcoverage-prefix-map=
-aux-target-feature
darwinpcs
aapcs
+use-tcc-in-div
-use-tcc-in-div
-soft-float
+mips1
+mips2
+mips3
+mips4
+mips5
+mips32
+mips32r2
+mips32r3
+mips32r5
+mips32r6
+mips64
+mips64r2
+mips64r3
+mips64r5
+mips64r6
-force_cpusubtype_ALL
--noexecstack
--compress-debug-sections
-march
-arm-implicit-it=
-ffp-model=
-Ofast
-ftrapping-math
-fno-trapping-math
-ffp-model=strict
-fdenormal-fp-math=
-fdenormal-fp-math-f32=
-ffp-contract=
-fno-rounding-math
-ffp-contract=fast
-ffp-model=fast
divd
divf
vec-divd
vec-divf
sqrtd
sqrtf
vec-sqrtd
vec-sqrtf
c++-cpp-output
-analyzer-store=region
-analyzer-checker=core
-analyzer-checker=apiModeling
-analyzer-checker=unix
-analyzer-checker=unix.API
-analyzer-checker=unix.Malloc
-analyzer-checker=unix.MallocSizeof
-analyzer-checker=unix.MismatchedDeallocator
-analyzer-checker=unix.cstring.BadSizeArg
-analyzer-checker=unix.cstring.NullArg
-analyzer-disable-checker=unix.API
-analyzer-disable-checker=unix.Vfork
-analyzer-checker=osx
-analyzer-checker=security.insecureAPI.decodeValueOfObjCType
-analyzer-checker=fuchsia
-analyzer-checker=deadcode
-analyzer-checker=cplusplus
-analyzer-checker=security.insecureAPI.UncheckedReturn
-analyzer-checker=security.insecureAPI.getpw
-analyzer-checker=security.insecureAPI.gets
-analyzer-checker=security.insecureAPI.mktemp
-analyzer-checker=security.insecureAPI.mkstemp
-analyzer-checker=security.insecureAPI.vfork
-analyzer-checker=nullability.NullPassedToNonnull
-analyzer-checker=nullability.NullReturnedFromNonnull
-analyzer-tidy-checker=bugprone-assert-side-effect
-analyzer-tidy-checker=bugprone-infinite-loop
-analyzer-tidy-checker=bugprone-move-forwarding-reference
-analyzer-output
-static
-fmodule-format=obj
-gdwarf-5
-gpubnames
-ggnu-pubnames
-gsimple-template-names=simple
-gsimple-template-names=mangled
-generate-arange-section
-generate-type-units
-fprofile-instrument=clang
profile
-fprofile-instrument=llvm
-fprofile-instrument=csllvm
default_%m.profraw
default.profdata
--coverage
-fprofile-update=atomic
gcno
gcda
-arcmt-action=check
-arcmt-action=modify
-arcmt-action=migrate
-ccc-arcmt-migrate
environment
-fdebug-prefix-map=
tls global
sysreg global
fs gs
-cl-std=
-fdeclare-opencl-builtins
-fno-builtin
-fno-builtin-
-fwchar-type=short
-fwchar-type=int
-fsigned-wchar
.cache
modules
-fprebuilt-module-path=
-fbuild-session-timestamp
-fobjc-dispatch-method=mixed
-fobjc-dispatch-method=non-legacy
-fobjc-subscripting-legacy-runtime
-fobjc-arc-cxxlib=libc++
-fobjc-arc-cxxlib=libstdc++
ignore_mrc_weak
-fignore-objc-weak
-fobjc-relative-method-lists
-fsmall-block-descriptors
-fno-diagnostics-show-note-include-stack
-fdiagnostics-color=
-fcolor-diagnostics
-mprefer-vector-width=none
-foptimization-record-file
opt.
-opt-record-passes
-opt-record-format
--amdhsa-code-object-version=
-debug-info-kind=line-directives-only
-debug-info-kind=line-tables-only
-debug-info-kind=constructor
-debug-info-kind=limited
-debug-info-kind=standalone
-debug-info-kind=unused-types
-debugger-tuning=gdb
-debugger-tuning=lldb
-debugger-tuning=sce
-debugger-tuning=dbx
DWARFv3 or greater
64 bit architecture
ELF platforms
--compress-debug-sections=none
--compress-debug-sections=
--no-dynamic-linker
-pie
-zrelro
--eh-frame-hdr
-lcompiler_rt
include/c++/v1
cloudabi::Linker
LIBRARY_PATH
--compress-debug-sections=
pwr7
ppc64le
hexagon
-plugin
/../lib/LLVMgold
-plugin-opt=mcpu=
-plugin-opt=O
-plugin-opt=dwo_dir=
_dwo
-plugin-opt=thinlto
-plugin-opt=jobs=
-plugin-opt=-debugger-tune=lldb
-plugin-opt=-debugger-tune=sce
-plugin-opt=-debugger-tune=dbx
-plugin-opt=-debugger-tune=gdb
-plugin-opt=-function-sections
-plugin-opt=-data-sections
-plugin-opt=sample-profile=
-plugin-opt=cs-profile-generate
-plugin-opt=cs-profile-path=
-plugin-opt=cs-profile-path=default_%m.profraw
-plugin-opt=legacy-pass-manager
-plugin-opt=new-pass-manager
-plugin-opt=stats-file=
-rpath
-Bstatic
-lomp
-lgomp
-liomp5
-Bdynamic
-lrt
-lomptarget
-lpthread
-ldl
-lexecinfo
fuzzer_interceptors
--export-dynamic
--export-dynamic-symbol=__cfi_check
-whole-archive
xray
-no-whole-archive
--extract-dwo
--strip-dwo
objcopy
-KPIC
builtins
MSVC
-x86-branches-within-32B-boundaries
-x86-align-branch-boundary=
call
fused, jcc, jmp, call, ret, indirect
-x86-align-branch=
-x86-pad-max-prefix-size=
/libdevice
/libbc-
/lib
nvptx
/libdevice/lib
libbc-
-type=a
clang-offload-bundler
cudart
gcc_s
pthread
hip_hcc
-mno-code-object-v3
-mcode-object-version=2
-mcode-object-v3
-mcode-object-version=3
-enable-machine-outliner
-enable-machine-outliner=never
libomptarget-
rv630
rv635
r600
rv610
rv620
rs780
rs880
rv740
rv770
palm
cedar
sumo
sumo2
hemlock
cypress
aruba
cayman
--plugin-opt=-pass-remarks=
--plugin-opt=-pass-remarks-missed=
--plugin-opt=-pass-remarks-analysis=
--plugin-opt=opt-remarks-filename=
.opt.ld.
--plugin-opt=opt-remarks-passes=
--plugin-opt=opt-remarks-format=
--plugin-opt=opt-remarks-with-hotness
--plugin-opt=opt-remarks-hotness-threshold=
-zignore
-zrecord
--as-needed
--no-as-needed
asan
asan-preinit
memprof
memprof-preinit
ubsan_minimal
scudo_minimal
tsan
hwasan_aliases
hwasan
asan_cxx
memprof_cxx
hwasan_aliases_cxx
hwasan_cxx
dfsan
lsan
msan
msan_cxx
tsan_cxx
safestack
__safestack_init
cfi_diag
scudo_cxx_minimal
scudo_cxx
--whole-archive
--no-whole-archive
.syms
--dynamic-list=
.dwo
-lgcc_eh
-lgcc_s
-l:libunwind.a
-l:libunwind.dll.a
-l:libunwind.so
-lgcc
-plugin-opt=
-mllvm
--32
--64
--strip-all
thumb2pe
arm64pe
i386pe
i386pep
_DllMainCRTStartup
_DllMainCRTStartup@12
-Bdynamic
--enable-auto-image-base
--entry
mainCRTStartup
--allow-multiple-definition
--out-implib
-lmsvcrt
asan_dll_thunk
asan_dynamic
asan_dynamic_runtime_thunk
--undefined
___asan_seh_interceptor
__asan_seh_interceptor
CrossWindows::Linker
CrossWindows::Assembler
/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v
ptxas
/usr/local/cuda
/usr/local/cuda-
/usr/lib/cuda
/bin
/nvvm/libdevice
/lib64
/include/cuda.h
/libdevice.10.bc
sm_20
sm_21
sm_32
sm_30
sm_50
sm_52
sm_53
sm_60
sm_61
sm_62
sm_35
sm_37
__clang_cuda_runtime_wrapper.h
Found CUDA installation: 
, version 
-m64
-m32
--dont-merge-basicblocks
--return-at-end
-lineinfo
--gpu-name
--output-file
--options-file
--cuda
--create
--image=profile=
,file=
fatbinary
-arch
--nvlink-path=
nvlink
clang-nvlink-wrapper
cubin
-enable-memcpyopt-without-libcalls
+ptx74
+ptx73
+ptx72
+ptx71
+ptx70
+ptx65
+ptx64
+ptx63
+ptx61
+ptx60
+ptx42
--nvptx-short-ptr
new-nvptx-
nvptx-
define
CUDA_VERSION
NVPTX::Assembler
NVPTX::OpenMPLinker
NVPTX::Linker
ppc601
ppc603
ppc604
ppc604e
ppc750
ppc7400
ppc7450
ppc970
ppc64
i386
i486
i486SX
i586
i686
pentium
pentpro
pentIIm3
pentIIm5
pentium4
x86_64
x86_64h
armv4t
armv5
armv6
armv6m
armv7
armv7em
armv7k
armv7m
armv7s
xscale
arm64
arm64e
arm64_32
r600
amdgcn
nvptx
nvptx64
amdil
spir
--gstabs
-demangle
-export_dynamic
-application_extension
thinlto
-object_path_lto
libLTO.dylib
-lto_library
-no_deduplicate
-dynamic
-dylib
-dylib_compatibility_version
-dylib_current_version
-dylib_install_name
-no_pie
-bitcode_bundle
-bitcode_process_mode
-syslibroot
touch
-enable-machine-outliner
-enable-linkonceodr-outlining
-enable-machine-outliner=never
-lto-stats-file=
-ObjC
-lsystem_pthread
-framework
Foundation
-lobjc
-arch_multiple
-final_output
-allow_stack_execute
-threads=
-filelist
-no_warning_for_no_symbols
-create
-output
lipo
dsymutil
--verify
--debug-info
--eh-frame
--quiet
dwarfdump
array-bounds-pointer-arithmetic
builtin-memcpy-chk-size
conditional-uninitialized
empty-body
format-security
implicit-int-conversion
memset-transposed-args
return-stack-address
shadow
shorten-64-to-32
sign-conversion
sizeof-array-argument
sizeof-array-decay
sizeof-pointer-memaccess
unused-result
-Wno-error=
-Wdeprecated-objc-isa-usage
-Werror=deprecated-objc-isa-usage
-Werror=implicit-function-declaration
-fptrauth-objc-isa-mode=sign-and-strip
Toolchains/XcodeDefault.xctoolchain/usr
-force_load
libarclite_
watchsimulator
appletvsimulator
appletvos
iphonesimulator
iphoneos
libclang_rt.
_dynamic.dylib
macho_embedded
-rpath
@executable_path
MacOSX
iPhone
AppleTV
Watch
Bridge
DriverKit
SepOS
iossim
tvossim
watchossim
___gcov_dump
___gcov_reset
_writeout_fn_list
_reset_fn_list
___llvm_profile_filename
___llvm_profile_raw_version
_lprofDirMode
/usr/appleinternal/lib/sanitizers
/usr/local/lib/sanitizers
ubsan
xray
xray-basic
xray-fdr
-lSystem
-lgcc_s.1
/XcodeDefault.xctoolchain/usr/include
backward
4.2.1
powerpc-apple-darwin10
4.0.0
i686-apple-darwin10
i686-apple-darwin8
arm-apple-darwin10
arm64-apple-darwin10
iOS 7
OS X 10.9
libstdc++.dylib
libstdc++.6.dylib
/usr/lib/libstdc++.dylib
/usr/lib/libstdc++.6.dylib
libclang_rt.cc_kext_watchos.a
libclang_rt.cc_kext_tvos.a
libclang_rt.cc_kext_bridgeos.a
libclang_rt.cc_kext_ios.a
libclang_rt.cc_kext.a
pentium2
pentiumpro
armv5tej
armv6k
armv7a
_pic
_static
-fno-builtin-malloc
-target-variant-sdk-version=
-fdepfile-entry=
iOS 5.0
OS X 10.7
RC_DEBUG_OPTIONS
RC_DEBUG_PREFIX_MAP
-watchos_version_min
-watchos_simulator_version_min
-tvos_version_min
-tvos_simulator_version_min
-bridgeos_version_min
-driverkit_version_min
-ios_simulator_version_min
-iphoneos_version_min
-maccatalyst_version_min
-macosx_version_min
-lcrt0.o
crt3.o
tsan_tvos_dynamic
tsan_ios_dynamic
-lto-pass-remarks-output
.opt.
-lto-pass-remarks-filter=
-lto-pass-remarks-format=
-lto-pass-remarks-with-hotness
-lto-pass-remarks-hotness-threshold=
libsystem_pthread
libsystem_kernel
libkxld
libsystem_platform
darwin::Lipo
darwin::Dsymutil
darwin::VerifyDebug
darwin::Linker
darwin::StaticLibTool
static-lib-linker
darwin::Assembler
.app/Contents/Developer
-exported_symbols_list
-exported_symbol
-sectalign
0x4000
WatchOS
BridgeOS
-platform_version
-simulator
mac catalyst
-ldylib1.o
-ldylib1.10.5.o
-lbundle1.o
-lgcrt0.o
-lgcrt1.o
-no_new_main
-lcrt1.o
-lcrt1.3.1.o
-lcrt1.10.5.o
-lcrt1.10.6.o
/usr/libexec/ld-elf.so.2
--hash-style=gnu
--enable-new-dtags
elf_i386
gcrt1.o
Scrt1.o
crt1.o
-L/usr/lib/gcc80
/usr/lib/gcc80
-lpthread
-lgcc_pic
--no-as-needed
/../lib
dragonfly::Assembler
dragonfly::Linker
-fc1
-emit-ast
flang-new
flang frontend
-mabi
-mfpu=vfp
-mfpu=softvfp
-meabi=5
-matpcs
--debug-prefix-map
/libexec/ld-elf.so.1
--hash-style=both
elf_i386_fbsd
elf32ppc_fbsd
elf32lppc
elf32btsmip_fbsd
elf32ltsmip_fbsd
elf32btsmipn32_fbsd
elf64btsmip_fbsd
elf32ltsmipn32_fbsd
elf64ltsmip_fbsd
elf32lriscv
elf64lriscv
crtbeginT.o
-lm_p
-lgcc_p
-lgcc_eh_p
-lpthread_p
-lc_p
/usr/lib32/crt1.o
/usr/lib32
/usr/include/c++/4.2
-lc++_p
-lstdc++_p
freebsd::Assembler
freebsd::Linker
max-page-size=4096
rodynamic
separate-loadable-segments
--pack-dyn-relocs=relr
--build-id
asan/
hwasan/
tsan/
ld.so.1
--push-state
--pop-state
--wrap=pthread_create
noexcept
+fno-exceptions
+fsanitize=address
asan+noexcept
+fsanitize=hwaddress
hwasan+noexcept
relative-vtables
+fexperimental-relative-c++-abi-vtables
relative-vtables+noexcept
relative-vtables+asan
relative-vtables+asan+noexcept
relative-vtables+hwasan
relative-vtables+hwasan+noexcept
compat
+fc++-abi=itanium
fexceptions
fsanitize=address
fsanitize=hwaddress
fexperimental-relative-c++-abi-vtables
fc++-abi=itanium
fuchsia::Linker
rcsD
noexecstack
cortex-a53
--fix-cortex-a53-843419
--warn-shared-textrel
rcrt1.o
max-page-size=0x4000000
crtbegin
crtbegin_so.o
crtbegin_static.o
crtbegin_dynamic.o
-lgloss
-lsoftfp
crtend
crtend_so.o
crtend_android.o
--x32
-mppc
-mbig-endian
-mlittle-endian
-mppc64
-mfpu=neon
-mfpu=crypto-neon-fp-armv8
-mfloat-abi=soft
-mfloat-abi=softfp
-mfloat-abi=hard
-mno-shared
-call_nonpic
-mnan=2008
-mfpxx
-no-mips16
-mmsa
/crtbegin.o
mips32
march=mips32
mips32r2
mips32r3
mips32r5
march=mips32r2
mips32r6
march=mips32r6
mips64
march=mips64
mips64r2
mips64r3
mips64r5
octeon+
march=mips64r2
mips64r6
march=mips64r6
mmicromips
muclibc
mnan=2008
mabi=n32
mabi=n64
msoft-float
mhard-float
0.0.0
/gcc
/gcc-cross
Found candidate GCC installation: 
Selected GCC installation: 
Candidate multilib: 
Selected multilib: 
/usr/gcc
/lib/gcc
/opt/rh/gcc-toolset-10/root/usr
/opt/rh/devtoolset-10/root/usr
/opt/rh/devtoolset-9/root/usr
/opt/rh/devtoolset-8/root/usr
/opt/rh/devtoolset-7/root/usr
/opt/rh/devtoolset-6/root/usr
/opt/rh/devtoolset-4/root/usr
/opt/rh/devtoolset-3/root/usr
/opt/rh/devtoolset-2/root/usr
/usr
aarch64-none-linux-gnu
aarch64-linux-gnu
aarch64-redhat-linux
aarch64-suse-linux
aarch64_be-none-linux-gnu
aarch64_be-linux-gnu
arm-linux-gnueabi
arm-linux-gnueabihf
armv7hl-redhat-linux-gnueabi
armv6hl-suse-linux-gnueabi
armv7hl-suse-linux-gnueabi
armeb-linux-gnueabi
armeb-linux-gnueabihf
armebv7hl-redhat-linux-gnueabi
x86_64-linux-gnu
x86_64-unknown-linux-gnu
x86_64-pc-linux-gnu
x86_64-redhat-linux6E
x86_64-redhat-linux
x86_64-suse-linux
x86_64-manbo-linux-gnu
x86_64-slackware-linux
x86_64-unknown-linux
x86_64-amazon-linux
x86_64-linux-gnux32
x86_64-pc-linux-gnux32
/libx32
/lib32
i586-linux-gnu
i686-linux-gnu
i686-pc-linux-gnu
i386-redhat-linux6E
i686-redhat-linux
i386-redhat-linux
i586-suse-linux
i686-montavista-linux
i686-gnu
m68k-linux-gnu
m68k-unknown-linux-gnu
m68k-suse-linux
mips-linux-gnu
mips-mti-linux
mips-mti-linux-gnu
mips-img-linux-gnu
mipsisa32r6-linux-gnu
mipsel-linux-gnu
mipsisa32r6el-linux-gnu
mips64-linux-gnu
mips64-linux-gnuabi64
mipsisa64r6-linux-gnu
mipsisa64r6-linux-gnuabi64
mips64el-linux-gnu
mips64el-linux-gnuabi64
mipsisa64r6el-linux-gnu
mipsisa64r6el-linux-gnuabi64
mips64-linux-gnuabin32
mipsisa64r6-linux-gnuabin32
mips64el-linux-gnuabin32
mipsisa64r6el-linux-gnuabin32
msp430-elf
powerpc-linux-gnu
powerpc-unknown-linux-gnu
powerpc-linux-gnuspe
powerpc64-suse-linux
powerpc-montavista-linuxspe
powerpcle-linux-gnu
powerpcle-unknown-linux-gnu
powerpcle-linux-musl
powerpc64-linux-gnu
powerpc64-unknown-linux-gnu
ppc64-redhat-linux
powerpc64le-linux-gnu
powerpc64le-unknown-linux-gnu
powerpc64le-none-linux-gnu
powerpc64le-suse-linux
ppc64le-redhat-linux
riscv32-unknown-linux-gnu
riscv32-linux-gnu
riscv32-unknown-elf
riscv64-unknown-linux-gnu
riscv64-linux-gnu
riscv64-unknown-elf
sparc-linux-gnu
sparcv8-linux-gnu
sparc64-linux-gnu
sparcv9-linux-gnu
s390x-linux-gnu
s390x-unknown-linux-gnu
s390x-ibm-linux-gnu
s390x-suse-linux
s390x-redhat-linux
sparc-sun-solaris2.11
sparc-sun-solaris2.12
sparcv9-sun-solaris2.11
sparcv9-sun-solaris2.12
i386-pc-solaris2.11
i386-pc-solaris2.12
x86_64-pc-solaris2.11
x86_64-pc-solaris2.12
aarch64-linux-android
arm-linux-androideabi
mipsel-linux-android
mips64el-linux-android
i686-linux-android
x86_64-linux-android
gcc/
../..
gcc-cross/
/../
/config-
/usr/lib/gcc/
/../../..
/bin
/lib/../
/../include
/../include/c++/
/include/g++-v
elf_iamcu
aarch64linux
aarch64linuxb
armelfb_linux_eabi
armelf_linux_eabi
m68kelf
elf32ppclinux
elf32ppc
elf32lppclinux
elf64ppc
elf64lppc
elf32_sparc
elf64_sparc
elf32btsmip
elf32ltsmip
elf32btsmipn32
elf64btsmip
elf32ltsmipn32
elf64ltsmip
elf64_s390
elf32_x86_64
elf_x86_64
elf64ve
krait
-mcpu=cortex-a15
kryo
-mcpu=cortex-a57
/mips-r2
+march=mips32r2
/mips-r6
+march=mips32r6
+march=mips32
+march=mips64r6
/32/mips-r1
/mips-r1
/32/mips-r2
/32/mips-r6
/mips-r2-hard-musl
/mipsel-r2-hard-musl
/../sysroot
/mips32
+m32
-mmicromips
/micromips
+mmicromips
/mips64r2
+m64
+march=mips64r2
/mips64
-march=mips64r2
/mips16
+mips16
/uclibc
+muclibc
+mabi=n64
-mabi=n32
/sof
+msoft-float
/nan2008
+mnan=2008
/mips64/mips16
/mips64r2/mips16
/micromips/mips16
/micromips/64
/mips32/64
^/64
/mips16/64
.*sof/nan2008
/mips-r2-hard
-muclibc
/mips-r2-soft
/mipsel-r2-hard
/mipsel-r2-soft
/mips-r2-hard-nan2008
/mipsel-r2-hard-nan2008
/mips-r2-hard-nan2008-uclibc
/mipsel-r2-hard-nan2008-uclibc
/mips-r2-hard-uclibc
/mipsel-r2-hard-uclibc
/micromipsel-r2-hard-nan2008
/micromipsel-r2-soft
-mabi=n64
+mabi=n32
/../../../../sysroot/uclibc/usr/include
/../../../../sysroot/usr/include
/../../../../sysroot
/../usr/include
/../../../../mips-mti-linux-gnu/lib
/mips64r6
/mips-r6-hard
/mips-r6-soft
/mipsel-r6-hard
/mipsel-r6-soft
/micromips-r6-hard
/micromips-r6-soft
/micromipsel-r6-hard
/micromipsel-r6-soft
/../../../../mips-img-linux-gnu/lib
-mips16
/soft-float
/micromips/nan2008
/mips16/nan2008
/mips16.*/64
/micromips.*/64
/n32
/../../../../mips-linux-gnu/libc/uclibc/usr/include
/../../../../mips-linux-gnu/libc/usr/include
/armv7-a
+march=armv7-a
/thumb
-march=armv7-a
+mthumb
/armv7-a/thumb
march=armv7-a
mthumb
lib32/ilp32
lib32/ilp32f
lib32/ilp32d
+mabi=ilp32d
lib64/lp64
lib64/lp64f
+mabi=lp64f
lib64/lp64d
ilp32d
mabi=ilp32d
lp64f
mabi=lp64f
+march=
+mabi=
march=
mabi=
/../../../../riscv64-unknown-elf/lib
/../../../../riscv32-unknown-elf/lib
/430
-exceptions
/430/exceptions
+exceptions
exceptions
/amd64
/sparcv9
-mx32
/x32
+mx32
/libgcc.a
mx32
/etc/env.d/gcc
gcc::Preprocessor
gcc preprocessor
gcc::Compiler
gcc frontend
GNU::Assembler
gcc::Linker
linker (via gcc)
/c++/
/system/develop/headers/c++/v1
/system/develop/headers/c++
-flavor
--no-undefined
-plugin-opt=-amdgpu-internalize-symbols
-plugin-opt=-mattr=
-plugin-opt=-force-import-all
-plugin-opt=
-save-temps
-type=o
-bundle-align=
-targets=host-x86_64-unknown-linux
-inputs=/dev/null
-amdgcn-amd-amdhsa--
.mcin
.hipfb
mcin
hipfb
#       HIP Object Generator
# *** Automatically generated by Clang ***
  .protected __hip_fatbin
  .type __hip_fatbin,@object
  .section .hip_fatbin,"a",@progbits
  .globl __hip_fatbin
  .p2align 
__hip_fatbin:
  .incbin "
--filetype=obj
llvm-mc
-amdgpu-internalize-symbols
AMDGPU address sanitizer runtime library (asanrtl) is not found. Please install ROCm device library which supports address sanitizer
xnack
'-fgpu-sanitize' is not compatible with offload arch '%0'. Use an offload arch without 'xnack-' instead
AMDGCN::Linker
amdgcn-link
-mlink-bitcode-file
--arch=hexagon
-filetype=obj
-mcpu=hexagon
-gpsize=
/../target
/hexagon/lib
/G0/pic
+reserved-r19
-hexagon-autohvx
/hexagon/include
/hexagon/include/c++/v1
/hexagon/include/c++
hexagonv60
+hvx
+hvx-length
128b
-march=hexagon
-call_shared
-dynamic-linker=/lib/ld-musl-hexagon.so.1
/usr/lib/crt1.o
/usr/lib/crti.o
-lclang_rt.builtins-hexagon
hexagon/lib
/crt0_standalone.o
/crt0.o
/pic
/initS.o
/init.o
/finiS.o
/fini.o
hexagon::Assembler
hexagon-as
hexagon::Linker
hexagon-ld
hexagon-link
/lib/i386-gnu
i386-gnu
/../lib/
/../
/usr/lib/../
/lib/ld.so
lib32
lib64
GNU::Linker
i386-linux-gnu
mipsisa64r6
-linux-
gnuabin32
gnuabi64
/lib/mips64-linux-gnu
mipsisa64r6el
mips64el
/lib/mips64el-linux-gnu
/lib/powerpc-linux-gnuspe
relro
opt/rh/
/usr/
/../../../../
/libc
/system/bin/linker64
/system/bin/linker
/lib/ld-musl-
.so.1
ld-linux-aarch64.so.1
ld-linux-aarch64_be.so.1
ld-linux-armhf.so.3
ld-linux.so.3
ld-uClibc-mipsn8.so.0
ld-uClibc.so.0
ld-musl-mipsel.so.1
ld-musl-mips.so.1
ld-linux-mipsn8.so.1
ld64.so.2
ld64.so.1
ld-linux-riscv32-
ld-linux-riscv64-
ld-linux.so.2
libx32
ld-linux-x32.so.2
ld-linux-x86-64.so.2
/opt/nec/ve/lib/ld-linux-ve.so.1
/../include/c++
/../include/g++
libr6
libr2
GNU::StaticLibTool
__llvm_profile_runtime
/c++/v1
-lmingwthrd
-lmingw32
-lmoldname
-lmingwex
ucrt
--subsystem
windows
console
--dll
--shared
DllMainCRTStartup
.exe
dllcrt2.o
crt2u.o
crt2.o
gcrt2.o
windowsapp
-lssp_nonshared
-lssp
-lomp
-liomp5md
-lgomp
-lgmon
--require-defined
-lgdi32
-lcomdlg32
-ladvapi32
-lshell32
-luser32
-lkernel32
-w64-mingw32
mingw32
-w64-mingw32-gcc
mingw32-gcc
/sys-root/mingw/lib
/sys-root/mingw/include
MinGW::Assemble
MinGW::Linker
-lCompilerRT-Generic
-L/usr/pkg/compiler-rt/lib
minix::Assembler
minix::Linker
-hwmult16
-hwmult32
-hwmultf5
16bit
+hwmult16
32bit
+hwmult32
+hwmultf5
-D__MSP430i
-D__
crtbegin_no_eh.o
-lcrt
-lsim
--undefined=__crt0_call_exit
-lnosys
crtend_no_eh.o
--relax
MSP430::Linker
msp430-elf-ld
-lmul_16
-lmul_32
-lmul_f5
-lmul_none
-Tmsp430-sim.ld
-out:
-defaultlib:libcmt
-defaultlib:oldnames
DIA SDK
-libpath:
atlmfc
-nologo
-debug
-Brepro
-dll
-implib:
-wholearchive:
-incremental:no
-include:___asan_seh_interceptor
-include:__asan_seh_interceptor
-guard:cf
-guard:cf-
-guard:ehcont
-guard:ehcont-
-nodefaultlib:vcomp.lib
-nodefaultlib:vcompd.lib
-defaultlib:libomp.lib
-defaultlib:libiomp5md.lib
link
lld-link
link.exe
cl.exe
Hostx64
Hostx86
stdlib.h
INCLUDE
EXTERNAL_INCLUDE
Include
shared
winrt
-D_HAS_STATIC_RTTI=0
amd64
Tools
MSVC
VCToolsInstallDir
VCINSTALLDIR
PATH
x86ret
x86chk
amd64ret
amd64chk
Host
visualstudio::Linker
Windows Kits
-fno-exceptions
-DMYRIAD2
moviCompile
-no6thSlotCompression
-cv:
-noSPrefixing
moviAsm
-lrtemscpu
-lrtemsbsp
sparc-myriad-rtems-ld
myriad
sparc-myriad-rtems
/../sparc-myriad-rtems/lib
/../include/c++/v1
movicompile
shave::Linker
nacl-arm-macros.s
elf_i386_nacl
armelf_nacl
elf_x86_64_nacl
mipselelf_nacl
Native Client
-lnacl
-lpnacl_legacy
x86_64-nacl/lib32
i686-nacl/usr/lib
x86_64-nacl/bin
i686-nacl
x86_64-nacl/lib
x86_64-nacl/usr/lib
x86_64-nacl
arm-nacl/lib
arm-nacl/usr/lib
arm-nacl/bin
arm-nacl
mipsel-nacl/lib
mipsel-nacl/usr/lib
mipsel-nacl
i686-nacl/usr/include
x86_64-nacl/include
arm-nacl/usr/include
x86_64-nacl/usr/include
mipsel-nacl/usr/include
arm-nacl/include/c++/v1
x86_64-nacl/include/c++/v1
mipsel-nacl/include/c++/v1
NaCl::Linker
/libexec/ld.elf_so
armelf_nbsd_eabi
armelf_nbsd_eabihf
armelf_nbsd
armelfb_nbsd_eabi
armelfb_nbsd_eabihf
armelfb_nbsd
elf32ppc_nbsd
=/usr/lib/i386
=/usr/lib/eabi
=/usr/lib/eabihf
=/usr/lib/oabi
=/usr/lib/o32
=/usr/lib/64
=/usr/lib/powerpc
=/usr/lib/sparc
=/usr/lib
/usr/include/c++
/__config
/usr/include/g++
-D_REENTRANT
netbsd::Assembler
netbsd::Linker
__start
/usr/libexec/ld.so
-nopie
rcrt0.o
-lc++abi_p
/usr/lib/libcompiler_rt.a
openbsd::Assembler
openbsd::Linker
--dependent-lib=libclang_rt.profile-x86_64.a
orbis-as
--dependent-lib=libSceDbgUBSanitizer_stub_weak.a
--dependent-lib=libSceDbgAddressSanitizer_stub_weak.a
--oformat=so
-fuse-ld
orbis-ld
/../../
target/include
PS4 system headers
target/lib
PS4 system libraries
-fvisibility-dllexport=protected
-fvisibility-nodllstorageclass=hidden
-fvisibility-externs-dllimport=default
-fvisibility-externs-nodllstorageclass=default
-lSceDbgUBSanitizer_stub_weak
-lSceDbgAddressSanitizer_stub_weak
PS4cpu::Assemble
PS4cpu::Link
lib/crt0.o
RISCV::Linker
_start
values-Xa.o
values-Xc.o
values-xpg6.o
values-xpg4.o
solaris::Assembler
solaris::Linker
/usr/bin/ld
/../libexec
/opt/nec/ve/bin
/opt/nec/ve/lib
NCC_C_INCLUDE_PATH
/opt/nec/ve/include
NCC_CPLUS_INCLUDE_PATH
-ldl
wasm64
wasm32
crt1-command.o
crt1-reactor.o
_initialize
--shared-memory
wasm-opt
-mno-atomics
-mno-bulk-memory
-mno-mutable-globals
-mno-sign-ext
+atomics
+bulk-memory
+mutable-globals
+sign-ext
-fPIC
-fwasm-exceptions
-mno-exception-handling
-enable-emscripten-cxx-exceptions
-mllvm -enable-emscripten-cxx-exceptions
+exception-handling
-wasm-enable-eh
-emscripten-cxx-exceptions-allowed
-mllvm -emscripten-cxx-exceptions-allowed
--force-attribute=
:noinline
-mllvm -wasm-enable-sjlj
-mllvm -enable-emscripten-sjlj
/include/c++/v1
/llvm-lto/1400.0.11git
wasm::Linker
wasm-ld
-fverbose-asm
XCC_C_INCLUDE_PATH
XCC_CPLUS_INCLUDE_PATH
XCore::Assembler
XCore-as
XCore::Linker
XCore-ld
ppc_wrappers
--input-format=IFS
--output-format=ELF
--output-format=IFS
ifso
.ifso
.ifs
clcpp
cppm
cpp-output
cuda-cpp-output
cuda
hip-cpp-output
objective-c-cpp-output
objc-cpp-output
objective-c
c++-cpp-output
objective-c++-cpp-output
objc++-cpp-output
objective-c++
renderscript
c-header-cpp-output
c-header
cl-header
objective-c-header-cpp-output
objective-c-header
c++-header-cpp-output
c++-header
objective-c++-header-cpp-output
objective-c++-header
c++-module
c++-module-cpp-output
assembler
assembler-with-cpp
f95-cpp-input
java
lto-ir
lto-bc
ifs-cpp
plist
rewritten-objc
rewritten-legacy-objc
remap
precompiled-header
object
treelang
image
dSYM
dependencies
cuda-fatbin
fatbin
hip-fatbin
hipfb
api-information
json
none
 on 
function-entry
function-exit
custom
-fxray-modes=
typed
STATISTICS:
<eof> parser at end of file
<unknown> parser at unknown location
: at annotation token
: unknown current parser token
: current parser token '
delete
decltype
attribute
enable_if
property
__declspec
macosx_app_extension
macos_app_extension
message
replacement
defined_in
generated_declaration
_Noreturn 
enum 
union
__interface
__interface 
parsing struct/union body
_Atomic
type name
acquire_capability
acquire_shared_capability
exclusive_lock_function
shared_lock_function
acquired_after
acquired_before
assert_capability
assert_shared_capability
assert_exclusive_lock
assert_shared_lock
diagnose_if
exclusive_trylock_function
guarded_by
lock_returned
locks_excluded
pt_guarded_by
release_capability
release_shared_capability
release_generic_capability
unlock_function
requires_capability
exclusive_locks_required
requires_shared_capability
shared_locks_required
shared_trylock_function
try_acquire_capability
try_acquire_shared_capability
callback
iboutletcollection
Owner
Pointer
preferred_name
vec_type_hint
interrupt
argument_with_type_tag
pointer_with_type_tag
__clang_arm_builtin_alias
availability
blocks
clang_builtin_alias
guard
callable_when
consumable
enum_extensibility
format
loop
unroll
nounroll
unroll_and_jam
nounroll_and_jam
ns_error_domain
declare simd
declare target
objc_bridge
objc_bridge_mutable
objc_bridge_related
objc_gc
objc_method_family
objc_ownership
ownership_holds
ownership_returns
ownership_takes
param_typestate
return_typestate
set_typestate
swift_async
swift_async_error
swift_error
swift_newtype
swift_wrapper
test_typestate
type_tag_for_datatype
type_visibility
typed_memory_operation
ptrauth_vtable_pointer
xnu_usage_semantics
cpu_dispatch
cpu_specific
macOS
tvOS
watchOS
bridgeOS
iOSApplicationExtension
ios_app_extension
macOSApplicationExtension
tvOSApplicationExtension
tvos_app_extension
watchOSApplicationExtension
watchos_app_extension
macCatalyst
macCatalystApplicationExtension
maccatalyst_app_extension
instancetype
inline 
namespace 
parsing namespace
using-enum declaration
attributes list
using declaration
alias declaration
_Static_assert
__underlying_type
final
__final
sealed
abstract
override
access declaration
parsing struct/union/class body
(anonymous)
throw
_Clang
__gnu__
, ""
noexcept(false)
nodiscard
maybe_unused
__is_abstract
__is_aggregate
__is_arithmetic
__is_array
__is_assignable
__is_base_of
__is_class
__is_complete_type
__is_compound
__is_const
__is_constructible
__is_convertible
__is_convertible_to
__is_destructible
__is_empty
__is_enum
__is_floating_point
__is_final
__is_function
__is_fundamental
__is_integral
__is_interface_class
__is_literal
__is_lvalue_expr
__is_lvalue_reference
__is_member_function_pointer
__is_member_object_pointer
__is_member_pointer
__is_nothrow_assignable
__is_nothrow_constructible
__is_nothrow_destructible
__is_object
__is_pod
__is_pointer
__is_polymorphic
__is_reference
__is_rvalue_expr
__is_rvalue_reference
__is_same
__is_scalar
__is_sealed
__is_signed
__is_standard_layout
__is_trivial
__is_trivially_assignable
__is_trivially_constructible
__is_trivially_copyable
__is_union
__is_unsigned
__is_void
__is_volatile
__builtin_sycl_unique_stable_name
__bridge_retained
block literal parsing
__builtin_unsafe_forge_bidi_indexable
__builtin_unsafe_forge_single
__builtin_get_pointer_lower_bound
__builtin_get_pointer_upper_bound
__builtin_unsafe_terminated_by_to_indexable
__builtin_terminated_by_to_indexable
__builtin_unsafe_terminated_by_from_indexable
android
Android
Fuchsia
iOS (App Extension)
macOS (App Extension)
tvOS (App Extension)
watchOS (App Extension)
macCatalyst (App Extension)
Swift
template 
lambda expression parsing
addrspace_cast
const_cast
dynamic_cast
reinterpret_cast
static_cast
typeid
__uuidof
operator 
requires
__builtin_bit_cast
< ::
Allocation failed
@class
@end
@end
nonnull
nullable
null_unspecified
suppress_direct
@compatibility_alias
@synthesize
@dynamic
@throw
@synchronized
@catch clause
parsing Objective-C method
finally
autoreleasepool
@encode
@selector
initializer
'initializer'
<selector-name>
(<property-name>)
<property-name>
user condition
<condition>
<invalid>
context set name "
'=' that follows the context set name "
context selectors for the context set "
interop
ompx_
omp_
'#pragma omp 
when clause
sizes
uses_allocator
uses_allocators
prefer_type
interop types
schedule modifier
defaultmap modifier
mapper
iterator
reduction identifier
dependency type
motion modifier
adjust-op
score expression
targetsync
', '
ext_
absent
contains
holds
no_openmp
no_openmp_routines
no_parallelism
data
exit
begin
STDC
OPENCL
init_seg
data_seg
bss_seg
const_seg
code_seg
section
read
write
execute
nopage
nocache
discard
remove
push
compiler
".CRT$XCC"
".CRT$XCL"
user
".CRT$XCU"
distribute
pipeline
vectorize
interleave
vectorize_predicate
enable
assume_safety
vectorize_width
fixed
unless(
__attribute__((
apply_to
clang loop 
field
namespace
'is_member'
'functionType'
'unless(is_union)'
'is_thread_local', 'is_global', 'is_local', 'is_parameter', 'unless(is_parameter)'
'is_instance'
any(
align
options
packed
mac68k
pack
ms_struct
unused
redefine_extname
FP_CONTRACT
FENV_ACCESS
FENV_ROUND
FE_TOWARDZERO
FE_TONEAREST
FE_UPWARD
FE_DOWNWARD
FE_TONEARESTFROMZERO
FE_DYNAMIC
STDC FENV_ROUND
CX_LIMITED_RANGE
clang section
pragma clang section
EXTENSION
OPENCL EXTENSION
comment
exestr
pragma comment
float_control
except
detect_mismatch
pragma detect_mismatch
pointers_to_members
full_generality
vtordisp
runtime_checks
intrinsic
__INTRIN_H
optimize
'on' or 'off'
fenv_access
force_cuda_host_device
clang optimize
interleave_count
unroll_count
pipeline_initiation_interval
clang loop
contract
reassociate
clang fp
clang attribute
max_tokens_here
clang max_tokens_here
max_tokens_total
clang max_tokens_total
do/while
goto
continue
break
co_return
__leave
fp_contract
STDC FENV_ACCESS
case 
'case'
'default'
in compound statement ('{}')
consteval
else
switch
while
'do'
auto &&
parsing function body
InternalPragmaState
parsing function try block
target MC unavailable
<MS inline asm>
target ASM parser unavailable
asm operand
volatile
inline
goto
unspecified
fpsr
mxcsr
template
typename
__except
inout
oneway
bycopy
byref
vector
_Bool
pixel
_exception_info
__exception_info
GetExceptionInformation
_exception_code
__exception_code
GetExceptionCode
_abnormal_termination
__abnormal_termination
AbnormalTermination
import
module
top-level asm block
'asm'
__if_exists
__if_not_exists
USAGE: 
OPTIONS
 <value>
<value>
Expected lexical block
Expected visible lookup table block
malformed block record in AST file
source location entry ID out-of-range for AST file
incorrectly-formatted source location entry in AST file
unexpected number of macro tokens for a macro in AST file
could not find file '
' referenced by AST file '
error at end of module block in AST file
duplicate TYPE_OFFSET record in AST file
duplicate DECL_OFFSET record in AST file
duplicate IDENTIFIER_OFFSET record in AST file
invalid special-types record
invalid weak identifiers record
ran out of source locations
Multiple SOURCE_LOCATION_PRELOADS records in AST file
Invalid VTABLE_USES record
Invalid existing PendingInstantiations
Invalid PENDING_IMPLICIT_INSTANTIATIONS block
Invalid SEMA_DECL_REFS block
invalid DECL_UPDATE_OFFSETS block in AST file
duplicate OBJC_CATEGORIES_MAP record in AST file
Invalid existing UndefinedButUsed
invalid undefined-but-used record
duplicate MACRO_OFFSET record in AST file
invalid pragma optimize record
invalid pragma ms_struct record
invalid pragma pointers to members record
invalid cuda pragma options record
invalid pragma pack record
invalid pragma float control record
SourceLocation remap refers to unknown module, cannot find 
' referenced by AST file
invalid record at top-level of AST file
malformed EXTENSION_METADATA in AST file
FILE type is NULL
Invalid FILE type in AST file
jmp_buf type is NULL
Invalid jmp_buf type in AST file
sigjmp_buf type is NULL
ucontext_t type is NULL
submodule metadata record should be at beginning of block
malformed module definition
too many submodules
no preprocessing record
Unexpected code for type
malformed AST file: missing C++ ctor initializers
malformed AST file: missing C++ base specifiers
declaration ID out-of-range for AST file
Corrupted AST file
*** AST File Statistics:
  %u/%u source location entries read (%f%%)
  %u/%u types read (%f%%)
  %u/%u declarations read (%f%%)
  %u/%u identifiers read (%f%%)
  %u/%u macros read (%f%%)
  %u/%u selectors read (%f%%)
  %u/%u statements read (%f%%)
  %u/%u lexical declcontexts read (%f%%)
  %u/%u visible declcontexts read (%f%%)
  %u/%u method pool entries read (%f%%)
  %u/%u method pool lookups succeeded (%f%%)
  %u/%u method pool table lookups succeeded (%f%%)
  %u / %u identifier table lookups succeeded (%f%%)
*** PCH/ModuleFile Remappings:
Global bit offset map
Global source location entry map
Global type map
Global declaration map
Global identifier map
Global macro map
Global submodule map
Global selector map
Global preprocessed entity map
*** PCH/Modules Loaded:
no identifier table in AST file
no macro table in AST file
submodule ID out of range in AST file
selector ID out of range in AST file
Microsoft Visual C++ full compatibility mode
Microsoft C++ extensions
Microsoft inline asm blocks
Borland extensions
C++11
C++14
C++17
C++20
C++2b
Objective-C App Extension
trigraphs
'//' comments
bool, true, and false keywords
half keyword
wchar_t keyword
char8_t keyword
__ieee128 keyword
__declspec keyword
GNU extensions
GNU keywords
GNU C compatibility version
digraphs
C++ operator name keywords
Apple kext support
writable string support
const-qualified string support
lax vector conversions
Altivec source compatibility
Assume convergent functions
AltiVec-style vector initializers
System z vector extensions
exception handling
Objective-C exceptions
C++ exceptions
C/C++ EH Asynch exceptions
ignore exceptions
Assume extern C functions don't unwind
traditional CPP emulation
run-time type information
emit run-time type information data
Microsoft-compatible structure layout
freestanding implementation
disable builtin functions
disable math builtin functions
GNU-style inline assembly
C++20 coroutines
dllexported classes dllexport inline methods
C++17 relaxed matching of template template arguments
pointer authentication intrinsics
function pointer authentication
return pointer authentication
indirect gotos pointer authentication
pointer authentication failure traps
incorporate address discrimination in authenticated vtable pointers
incorporate type discrimination in authenticated vtable pointers
authentication mode for objc isa
authentication of SEL fields of ObjC interfaces
authentication key for SEL fields of ObjC interfaces
pre- and post-authentication masking for Objective-C isa pointer
software emulation of pointer authentication
pointer authentication ABI version
controls whether the pointer auth abi version represents a kernel ABI
controls whether the pointer auth abi version should be encoded in the IR
enable signed block descriptors
class_ro_t pointer authentication
'[[]]' attributes extension for all language standard modes
Preserve expressions in AST when encountering errors
Preserve the type in recovery expressions
POSIX thread support
blocks extension to C
errno in math functions
modules semantics
C++ Modules TS syntax
C++ modules syntax
require declaration of module uses
requiring declaration of module uses and all headers to be in modules
local submodule visibility
hash out diagnostic errors as part of the module hash
enable ODR hash checking for attributes
disable ODR hash checking for categories
disable ODR hash checking for interfaces
disable ODR hash checking for protocols
disable ODR hash checking for records
disable ODR hash checking for properties
disable ODR hash checking for ivars
disable ODR hash checking for methods
__OPTIMIZE__ predefined macro
__OPTIMIZE_SIZE__ predefined macro
__STATIC__ predefined macro (as opposed to __DYNAMIC__)
default struct packing maximum alignment
default maximum alignment for types
Controls if doubles should be aligned to 8 bytes (x86 only)
width of double
width of long double
use IEEE 754 quadruple-precision for long double
__EXTABI__  predefined macro
__PIC__ level
is pie
Read-only position independence
Read-write position independence
GNU inline semantics
__NO_INLINE__ predefined macro
__DEPRECATED predefined macro
fast FP math optimizations, and __FAST_MATH__ predefined macro
__FINITE_MATH_ONLY__ predefined macro
Unsafe Floating Point Math
optimizer honors parentheses when floating-point expressions are evaluated
signed char
width of wchar_t
signed or unsigned wchar_t
member-pointer representation method
default calling convention
short enum types
OpenCL C version
C++ for OpenCL version
OpenCL generic keyword
OpenCL pipes language constructs and built-ins
Native half type support
Native half args and returns
half args and returns
OpenMP support and version of OpenMP (31, 40 or 45)
Enable all Clang extensions for OpenMP directives and clauses
Use SIMD only OpenMP support.
Use TLS for threadprivates or runtime calls
Generate code only for OpenMP target device
Generate code for OpenMP pragmas in SIMT/SPMD mode
Use the experimental OpenMP-IR-Builder codegen path.
Force to use full runtime in all constructs when offloading to CUDA devices
Number of SMs for CUDA devices.
Number of blocks per SM for CUDA devices.
Number of the reduction records in the intermediate reduction buffer used for the teams reductions.
Use the new bitcode library for OpenMP offloading
Enable debugging in the OpenMP offloading device RTL
Use at most 32 bits to represent the collapsed loop nest counter.
Assume work-shared loops do not have more iterations than participating threads.
Assume distributed loops do not have more iterations than participating teams.
compiling for CUDA device
allowing variadic functions in CUDA device code
treating unattributed constexpr functions as __host__ __device__
using approximate transcendental functions
generate relocatable device code
allowing device side global init functions for HIP
default max threads per block for kernel launch bounds for HIP
defer host/device related diagnostic messages for CUDA/HIP
always exclude wrong side overloads in overloading resolution for CUDA/HIP
Generate code for SYCL device
SYCL host compilation
Version of the SYCL standard used
Use new kernel launching API for HIP
sized deallocation
aligned allocation
aligned allocation functions are unavailable
maximum alignment guaranteed by '::operator new(size_t)'
enable satisfaction caching for C++20 Concepts
no constant CoreFoundation strings
constant Objective-C literals
no constant number literals
no constant array literals
no constant dictionary literals
hidden visibility for global operator new and delete declaration
check availability for target variant platform
Treats throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
treating double-precision floating point constants as single precision constants
OpenCL fast relaxed math
Enable experimental strict floating point
bit-field type alignment
hexagon-qdsp6 backward compatibility
Objective-C automated reference counting
__weak support in the ARC runtime
Objective-C __weak in ARC and MRC files
Ignore ARC-style __weak instead of erroring
Subscripting support in legacy ObjectiveC runtime
Disable recognition of objc_direct methods
Control-Flow Branch Protection enabled
OpenCL fake address space map
OpenCL address space map mangling mode
Include default header file for OpenCL
Declare OpenCL builtin functions
optional blocks runtime
Require member pointer base types to be complete at the point where the type's inheritance model would be determined under the Microsoft ABI
Objective-C Garbage Collection mode
default visibility for functions and variables [-fvisibility]
default visibility for types [-ftype-visibility]
apply global symbol visibility to external declarations without an explicit visibility
set the visiblity of globals from their DLL storage class [-fvisibility-from-dllstorageclass]
visibility for functions and variables with dllexport annotations [-fvisibility-from-dllstorageclass]
visibility for functions and variables without an explicit DLL storage class [-fvisibility-from-dllstorageclass]
visibility for external declarations with dllimport annotations [-fvisibility-from-dllstorageclass]
visibility for external declarations without an explicit DLL storage class [-fvisibility-from-dllstorageclass]
stack protector mode
stack checking
controls whether to use strong linking for darwin stack checking (x86 only)
trivial automatic variable initialization
stop trivial automatic variable initialization after the specified number of instances. Must be greater than 0.
Zero initialize only first N bytes of each stack variable.
do not auto-initialize objects initialized by a C++ constructor
do not auto-initialize non-POD objects
do not auto-initialize variables in STL namespace
do not auto-initialize arrays other than arrays of pointers
signed integer overflow handling
Thread Model
Microsoft Visual C/C++ Version
How many vtordisps to insert
Apple gcc-compatible #pragma pack handling
IBM XL #pragma pack handling
retain documentation comments from system headers in the AST
use external API notes
compilation involves pch
controls how aggressive is ASan field padding (0: none, 1:least aggressive, 2: more aggressive)
ARM Security extensions support
controls whether to do XRay instrumentation
controls whether to always emit intrinsic calls to __xray_customevent(...) builtin.
controls whether to always emit intrinsic calls to __xray_typedevent(...) builtin.
whether to emit all vtables
version of Clang that we should attempt to be ABI-compatible with
Default alignment for functions
Default alignment for loops
fixed point types
unsigned fixed point types having one extra padding bit
Register C++ static destructors
Enable or disable the builtin matrix type
Max number of tokens per TU or 0
enable noescape optimized blocks
Scope of return address signing
Key used for return address signing
Branch-target enforcement enabled
Speculative load hardening enabled
Use an ABI-incompatible v-table layout that uses relative references
Minimum vscale value
Maximum vscale value
Controls how scalar integer arguments are extended in calls to unprototyped and varargs functions
Fuchsia API level
Allow CWG1423
Revert f50d1aca992864d7edd65a449f5368b53727752a and return id for [self alloc]
Revert 4257857bf8a508b56f73f61bdf941194913bac92 and do not infer +new availability
Revert dafc3106d2069b806a10e072306a2196f1cda585 and do not emit -Wformat
Revert 5741d19f046f24450ebda3a421a8ce49043ad2b8 and do not emit -Wformat
Revert 2f26bc5542705c390bf17af2fdfc31e056147ea9 and do not emit -Wstrict-prototypes
Revert 7ae1b4a0ce9c7f269cf3069e41496a78e3f28d49 and allow static members in anon unions
Revert 7ae1b4a0ce9c7f269cf3069e41496a78e3f28d49 and allow static members in local structs
Revert 878a24ee244a24c39d1c57e9af2e88c621f7cce9 and give some implicit member expressions dependent type
Revert part of c90e198107431f64b73686bdce31c293e3380ac7
Revert 536b0ee40ab97f2878dc124a321cf9108ee3d233 and don't check nullptr arithmetic
Disable 89b1a463a531dbdb18aa3516d7b8fd7482d1d3a0
Disable (part of) 96c899449b61b866b583560a49c4627f561336fc
Disable a4a60ad51dd58da2c15ef505d5fe527ef3fecd89
Disable ccc4d83cda16bea1d9dfd0967dc7d2cfb24b8e75
rdar://67765582
Disable (part of) 552c6c232872
rdar://72363517
rdar://72823399
rdar://81325777
rdar://81712146
module features
target Objective-C runtime
block command names
target ABI
target CPU
tune CPU
-Wsystem-headers
-Werror
-Weverything -Werror
-Werror=
malformed uleb128, extends past end
uleb128 too big for uint64
Cursor should always be able to go back, failed: 
could not decompress embedded file contents: 
AST record has invalid code
could not get buffer for file '
Timestamp file
file too small to contain AST file magic
file doesn't start with AST file magic
clang diagnostic
category '
' on interface '
jumping
reading code
ASTReader::readDeclRecord failed reading decl code: 
attempt to read a C++ base-specifier record as a declaration
attempt to read a C++ ctor initializer record as a declaration
ASTReader::loadDeclUpdateRecords failed jumping: 
ASTReader::loadDeclUpdateRecords failed reading code: 
ASTReader::loadDeclUpdateRecords failed reading rec code: 
ASTReader::loadPendingDeclChain failed jumping: 
ASTReader::loadPendingDeclChain failed reading code: 
ASTReader::loadPendingDeclChain failed reading rec code: 
ASTReader::readDeclRecord failed 
CONTROL_BLOCK
METADATA
MODULE_NAME
MODULE_DIRECTORY
MODULE_MAP_FILE
IMPORTS
ORIGINAL_FILE
ORIGINAL_PCH_DIR
ORIGINAL_FILE_ID
INPUT_FILE_OFFSETS
OPTIONS_BLOCK
LANGUAGE_OPTIONS
TARGET_OPTIONS
HEADER_SEARCH_OPTIONS
PREPROCESSOR_OPTIONS
INPUT_FILES_BLOCK
INPUT_FILE
INPUT_FILE_HASH
AST_BLOCK
TYPE_OFFSET
DECL_OFFSET
IDENTIFIER_OFFSET
IDENTIFIER_TABLE
EAGERLY_DESERIALIZED_DECLS
MODULAR_CODEGEN_DECLS
SPECIAL_TYPES
STATISTICS
TENTATIVE_DEFINITIONS
SELECTOR_OFFSETS
METHOD_POOL
PP_COUNTER_VALUE
SOURCE_LOCATION_OFFSETS
SOURCE_LOCATION_PRELOADS
EXT_VECTOR_DECLS
UNUSED_FILESCOPED_DECLS
PPD_ENTITIES_OFFSETS
VTABLE_USES
REFERENCED_SELECTOR_POOL
TU_UPDATE_LEXICAL
SEMA_DECL_REFS
WEAK_UNDECLARED_IDENTIFIERS
PENDING_IMPLICIT_INSTANTIATIONS
UPDATE_VISIBLE
DECL_UPDATE_OFFSETS
DECL_UPDATES
CUDA_SPECIAL_DECL_REFS
HEADER_SEARCH_TABLE
FP_PRAGMA_OPTIONS
OPENCL_EXTENSIONS
OPENCL_EXTENSION_TYPES
OPENCL_EXTENSION_DECLS
DELEGATING_CTORS
KNOWN_NAMESPACES
MODULE_OFFSET_MAP
SOURCE_MANAGER_LINE_TABLE
OBJC_CATEGORIES_MAP
FILE_SORTED_DECLS
IMPORTED_MODULES
OBJC_CATEGORIES
MACRO_OFFSET
INTERESTING_IDENTIFIERS
UNDEFINED_BUT_USED
LATE_PARSED_TEMPLATE
OPTIMIZE_PRAGMA_OPTIONS
MSSTRUCT_PRAGMA_OPTIONS
POINTERS_TO_MEMBERS_PRAGMA_OPTIONS
UNUSED_LOCAL_TYPEDEF_NAME_CANDIDATES
DELETE_EXPRS_TO_ANALYZE
CUDA_PRAGMA_FORCE_HOST_DEVICE_DEPTH
PP_CONDITIONAL_STACK
DECLS_TO_CHECK_FOR_DEFERRED_DIAGS
SOURCE_MANAGER_BLOCK
SM_SLOC_FILE_ENTRY
SM_SLOC_BUFFER_ENTRY
SM_SLOC_BUFFER_BLOB
SM_SLOC_BUFFER_BLOB_COMPRESSED
SM_SLOC_EXPANSION_ENTRY
PREPROCESSOR_BLOCK
PP_MACRO_DIRECTIVE_HISTORY
PP_MACRO_FUNCTION_LIKE
PP_MACRO_OBJECT_LIKE
PP_MODULE_MACRO
PP_TOKEN
SUBMODULE_BLOCK
SUBMODULE_METADATA
SUBMODULE_DEFINITION
SUBMODULE_UMBRELLA_HEADER
SUBMODULE_HEADER
SUBMODULE_TOPHEADER
SUBMODULE_UMBRELLA_DIR
SUBMODULE_IMPORTS
SUBMODULE_EXPORTS
SUBMODULE_REQUIRES
SUBMODULE_EXCLUDED_HEADER
SUBMODULE_LINK_LIBRARY
SUBMODULE_CONFIG_MACRO
SUBMODULE_CONFLICT
SUBMODULE_PRIVATE_HEADER
SUBMODULE_TEXTUAL_HEADER
SUBMODULE_PRIVATE_TEXTUAL_HEADER
SUBMODULE_INITIALIZERS
SUBMODULE_EXPORT_AS
COMMENTS_BLOCK
COMMENTS_RAW_COMMENT
COMMENTS_DECL_TO_COMMENT
DECLTYPES_BLOCK
TYPE_EXT_QUAL
TYPE_COMPLEX
TYPE_POINTER
TYPE_BLOCK_POINTER
TYPE_LVALUE_REFERENCE
TYPE_RVALUE_REFERENCE
TYPE_MEMBER_POINTER
TYPE_CONSTANT_ARRAY
TYPE_INCOMPLETE_ARRAY
TYPE_VARIABLE_ARRAY
TYPE_VECTOR
TYPE_EXT_VECTOR
TYPE_FUNCTION_NO_PROTO
TYPE_FUNCTION_PROTO
TYPE_TYPEDEF
TYPE_TYPEOF_EXPR
TYPE_TYPEOF
TYPE_RECORD
TYPE_ENUM
TYPE_OBJC_INTERFACE
TYPE_OBJC_OBJECT_POINTER
TYPE_DECLTYPE
TYPE_ELABORATED
TYPE_SUBST_TEMPLATE_TYPE_PARM
TYPE_UNRESOLVED_USING
TYPE_INJECTED_CLASS_NAME
TYPE_OBJC_OBJECT
TYPE_TEMPLATE_TYPE_PARM
TYPE_TEMPLATE_SPECIALIZATION
TYPE_DEPENDENT_NAME
TYPE_DEPENDENT_TEMPLATE_SPECIALIZATION
TYPE_DEPENDENT_SIZED_ARRAY
TYPE_PAREN
TYPE_MACRO_QUALIFIED
TYPE_PACK_EXPANSION
TYPE_ATTRIBUTED
TYPE_SUBST_TEMPLATE_TYPE_PARM_PACK
TYPE_AUTO
TYPE_UNARY_TRANSFORM
TYPE_ATOMIC
TYPE_DECAYED
TYPE_ADJUSTED
TYPE_OBJC_TYPE_PARAM
LOCAL_REDECLARATIONS
DECL_TYPEDEF
DECL_TYPEALIAS
DECL_ENUM
DECL_RECORD
DECL_ENUM_CONSTANT
DECL_FUNCTION
DECL_OBJC_METHOD
DECL_OBJC_INTERFACE
DECL_OBJC_PROTOCOL
DECL_OBJC_IVAR
DECL_OBJC_AT_DEFS_FIELD
DECL_OBJC_CATEGORY
DECL_OBJC_CATEGORY_IMPL
DECL_OBJC_IMPLEMENTATION
DECL_OBJC_COMPATIBLE_ALIAS
DECL_OBJC_PROPERTY
DECL_OBJC_PROPERTY_IMPL
DECL_FIELD
DECL_MS_PROPERTY
DECL_VAR
DECL_IMPLICIT_PARAM
DECL_PARM_VAR
DECL_FILE_SCOPE_ASM
DECL_BLOCK
DECL_CONTEXT_LEXICAL
DECL_CONTEXT_VISIBLE
DECL_NAMESPACE
DECL_NAMESPACE_ALIAS
DECL_USING
DECL_USING_SHADOW
DECL_USING_DIRECTIVE
DECL_UNRESOLVED_USING_VALUE
DECL_UNRESOLVED_USING_TYPENAME
DECL_LINKAGE_SPEC
DECL_CXX_RECORD
DECL_CXX_METHOD
DECL_CXX_CONSTRUCTOR
DECL_CXX_DESTRUCTOR
DECL_CXX_CONVERSION
DECL_ACCESS_SPEC
DECL_FRIEND
DECL_FRIEND_TEMPLATE
DECL_CLASS_TEMPLATE
DECL_CLASS_TEMPLATE_SPECIALIZATION
DECL_CLASS_TEMPLATE_PARTIAL_SPECIALIZATION
DECL_VAR_TEMPLATE
DECL_VAR_TEMPLATE_SPECIALIZATION
DECL_VAR_TEMPLATE_PARTIAL_SPECIALIZATION
DECL_FUNCTION_TEMPLATE
DECL_TEMPLATE_TYPE_PARM
DECL_NON_TYPE_TEMPLATE_PARM
DECL_TEMPLATE_TEMPLATE_PARM
DECL_CONCEPT
DECL_REQUIRES_EXPR_BODY
DECL_TYPE_ALIAS_TEMPLATE
DECL_STATIC_ASSERT
DECL_CXX_BASE_SPECIFIERS
DECL_CXX_CTOR_INITIALIZERS
DECL_INDIRECTFIELD
DECL_EXPANDED_NON_TYPE_TEMPLATE_PARM_PACK
DECL_EXPANDED_TEMPLATE_TEMPLATE_PARM_PACK
DECL_CLASS_SCOPE_FUNCTION_SPECIALIZATION
DECL_IMPORT
DECL_OMP_THREADPRIVATE
DECL_EMPTY
DECL_OBJC_TYPE_PARAM
DECL_OMP_CAPTUREDEXPR
DECL_PRAGMA_COMMENT
DECL_PRAGMA_DETECT_MISMATCH
DECL_OMP_DECLARE_REDUCTION
DECL_OMP_ALLOCATE
PREPROCESSOR_DETAIL_BLOCK
PPD_MACRO_EXPANSION
PPD_MACRO_DEFINITION
PPD_INCLUSION_DIRECTIVE
EXTENSION_BLOCK
EXTENSION_METADATA
UNHASHED_CONTROL_BLOCK
SIGNATURE
AST_BLOCK_HASH
DIAGNOSTIC_OPTIONS
HEADER_SEARCH_PATHS
FILE_SYSTEM_OPTIONS
DIAG_PRAGMA_MAPPINGS
<<<INVALID BUFFER>>>
STMT_STOP
STMT_NULL_PTR
STMT_REF_PTR
STMT_NULL
STMT_COMPOUND
STMT_CASE
STMT_DEFAULT
STMT_LABEL
STMT_ATTRIBUTED
STMT_IF
STMT_SWITCH
STMT_WHILE
STMT_DO
STMT_FOR
STMT_GOTO
STMT_INDIRECT_GOTO
STMT_CONTINUE
STMT_BREAK
STMT_RETURN
STMT_DECL
STMT_GCCASM
STMT_MSASM
EXPR_PREDEFINED
EXPR_DECL_REF
EXPR_INTEGER_LITERAL
EXPR_FIXEDPOINT_LITERAL
EXPR_FLOATING_LITERAL
EXPR_IMAGINARY_LITERAL
EXPR_STRING_LITERAL
EXPR_CHARACTER_LITERAL
EXPR_PAREN
EXPR_PAREN_LIST
EXPR_UNARY_OPERATOR
EXPR_SIZEOF_ALIGN_OF
EXPR_ARRAY_SUBSCRIPT
EXPR_CALL
EXPR_MEMBER
EXPR_BINARY_OPERATOR
EXPR_COMPOUND_ASSIGN_OPERATOR
EXPR_CONDITIONAL_OPERATOR
EXPR_IMPLICIT_CAST
EXPR_CSTYLE_CAST
EXPR_COMPOUND_LITERAL
EXPR_EXT_VECTOR_ELEMENT
EXPR_INIT_LIST
EXPR_DESIGNATED_INIT
EXPR_DESIGNATED_INIT_UPDATE
EXPR_IMPLICIT_VALUE_INIT
EXPR_NO_INIT
EXPR_VA_ARG
EXPR_ADDR_LABEL
EXPR_STMT
EXPR_CHOOSE
EXPR_GNU_NULL
EXPR_SHUFFLE_VECTOR
EXPR_BLOCK
EXPR_GENERIC_SELECTION
EXPR_OBJC_STRING_LITERAL
EXPR_OBJC_BOXED_EXPRESSION
EXPR_OBJC_ARRAY_LITERAL
EXPR_OBJC_DICTIONARY_LITERAL
EXPR_OBJC_ENCODE
EXPR_OBJC_SELECTOR_EXPR
EXPR_OBJC_PROTOCOL_EXPR
EXPR_OBJC_IVAR_REF_EXPR
EXPR_OBJC_PROPERTY_REF_EXPR
EXPR_OBJC_KVC_REF_EXPR
EXPR_OBJC_MESSAGE_EXPR
STMT_OBJC_FOR_COLLECTION
STMT_OBJC_CATCH
STMT_OBJC_FINALLY
STMT_OBJC_AT_TRY
STMT_OBJC_AT_SYNCHRONIZED
STMT_OBJC_AT_THROW
EXPR_OBJC_BOOL_LITERAL
STMT_CXX_CATCH
STMT_CXX_TRY
STMT_CXX_FOR_RANGE
EXPR_CXX_OPERATOR_CALL
EXPR_CXX_MEMBER_CALL
EXPR_CXX_REWRITTEN_BINARY_OPERATOR
EXPR_CXX_CONSTRUCT
EXPR_CXX_TEMPORARY_OBJECT
EXPR_CXX_STATIC_CAST
EXPR_CXX_DYNAMIC_CAST
EXPR_CXX_REINTERPRET_CAST
EXPR_CXX_CONST_CAST
EXPR_CXX_ADDRSPACE_CAST
EXPR_CXX_FUNCTIONAL_CAST
EXPR_USER_DEFINED_LITERAL
EXPR_CXX_STD_INITIALIZER_LIST
EXPR_CXX_BOOL_LITERAL
EXPR_CXX_NULL_PTR_LITERAL
EXPR_CXX_TYPEID_EXPR
EXPR_CXX_TYPEID_TYPE
EXPR_CXX_THIS
EXPR_CXX_THROW
EXPR_CXX_DEFAULT_ARG
EXPR_CXX_DEFAULT_INIT
EXPR_CXX_BIND_TEMPORARY
EXPR_CXX_SCALAR_VALUE_INIT
EXPR_CXX_NEW
EXPR_CXX_DELETE
EXPR_CXX_PSEUDO_DESTRUCTOR
EXPR_EXPR_WITH_CLEANUPS
EXPR_CXX_DEPENDENT_SCOPE_MEMBER
EXPR_CXX_DEPENDENT_SCOPE_DECL_REF
EXPR_CXX_UNRESOLVED_CONSTRUCT
EXPR_CXX_UNRESOLVED_MEMBER
EXPR_CXX_UNRESOLVED_LOOKUP
EXPR_CXX_EXPRESSION_TRAIT
EXPR_CXX_NOEXCEPT
EXPR_OPAQUE_VALUE
EXPR_BINARY_CONDITIONAL_OPERATOR
EXPR_TYPE_TRAIT
EXPR_ARRAY_TYPE_TRAIT
EXPR_PACK_EXPANSION
EXPR_SIZEOF_PACK
EXPR_SUBST_NON_TYPE_TEMPLATE_PARM
EXPR_SUBST_NON_TYPE_TEMPLATE_PARM_PACK
EXPR_FUNCTION_PARM_PACK
EXPR_MATERIALIZE_TEMPORARY
EXPR_CUDA_KERNEL_CALL
EXPR_CXX_UUIDOF_EXPR
EXPR_CXX_UUIDOF_TYPE
EXPR_LAMBDA
serializing
unexpected declaration kind '
expected signature BCGI
*** Global Module Index Statistics:
  %u / %u identifier lookups succeeded (%f%%)
LFS error
someone else is building the index
failed writing index
Module index '
' failed: 
failed getting buffer for module file
expected signature CPCH
imported file "%s" not found
GLOBAL_INDEX_BLOCK
INDEX_METADATA
MODULE
IDENTIFIER_INDEX
Module: 
  Imports: 
  Base source location offset: 
Source location offset local -> global map
  Base identifier ID: 
  Number of identifiers: 
Identifier ID local -> global map
  Base macro ID: 
  Number of macros: 
Macro ID local -> global map
  Base submodule ID: 
  Number of submodules: 
Submodule ID local -> global map
  Base selector ID: 
  Number of selectors: 
Selector ID local -> global map
  Base preprocessed entity ID: 
  Number of preprocessed entities: 
Preprocessed entity ID local -> global map
  Base type index: 
  Number of types: 
Type index local -> global map
  Base decl ID: 
  Number of decls: 
Decl ID local -> global map
    
module file out of date
module file not found
signature mismatch
could not read module signature
*** Analysis Based Warnings Stats:
 functions analyzed (
 w/o CFGs).
 CFG blocks built.
 average CFG blocks per function.
 max CFG blocks per function.
 functions analyzed for uninitialiazed variables
 variables analyzed.
 average variables per function.
 max variables per function.
 block visits.
 average block visits per function.
 max block visits per function.
/* DISABLES CODE */ (
case
__block 
break; 
fallthrough
[[fallthrough]]
[[clang::fallthrough]]
__attribute__((fallthrough))
PREFERRED-TYPE: 
COMPLETION: 
Hidden
InBase
Inaccessible
Pattern : 
 (requires fix-it:
 to "
OPENING_PAREN_LOC: 
OVERLOAD: 
const
volatile
restrict
unaligned
unspecified
typedef
extern
static
auto
register
__private_extern__
mutable
__thread
thread_local
_Thread_local
short
long
long long
imaginary
complex
signed
unsigned
void
char
__wchar_t
wchar_t
char8_t
char16_t
char32_t
__int128
_ExtInt
half
float
double
_Accum
_Fract
_Float16
__float128
__ibm128
bool
_Bool
_Decimal32
_Decimal64
_Decimal128
enum
class
union
struct
__interface
type-name
typeof
__auto_type
(decltype)
decltype(auto)
__underlying_type
__unknown_anytype
_Atomic
__bf16
image1d_t
image1d_array_t
image1d_buffer_t
image2d_t
image2d_array_t
image2d_depth_t
image2d_array_depth_t
image2d_msaa_t
image2d_array_msaa_t
image2d_msaa_depth_t
image2d_array_msaa_depth_t
image3d_t
(error)
constexpr
consteval
constinit
__unaligned
cl_clang_storage_class_specifiers
_Sat
inline
__forceinline
virtual
explicit
_Noreturn
friend
__module_private__
power8-vector
__pixel
power10-vector
arch12
 double
override
final
__final
sealed
abstract
__builtin_shufflevector
aarch64_far_address_space
clang::aarch64_far_address_space
global variables
aarch64_vector_pcs
clang::aarch64_vector_pcs
amdgpu_flat_work_group_size
clang::amdgpu_flat_work_group_size
kernel functions
amdgpu_num_sgpr
clang::amdgpu_num_sgpr
NumSGPR
amdgpu_num_vgpr
clang::amdgpu_num_vgpr
NumVGPR
amdgpu_waves_per_eu
clang::amdgpu_waves_per_eu
gnu::interrupt
Interrupt
signal
gnu::signal
functions
abi_tag
gnu::abi_tag
Tags...
structs, variables, functions, and namespaces
clang::acquire_capability
clang::acquire_shared_capability
Args...
acquire_handle
clang::acquire_handle
HandleType
functions, typedefs, and parameters
non-static data members and global variables
address_space
clang::address_space
AddressSpace
alias
gnu::alias
Aliasee
functions and global variables
align_value
Alignment
variables and typedefs
aligned
gnu::aligned
alignas
_Alignas
alloc_align
gnu::alloc_align
ParamIndex
non-K&R-style functions
alloc_size
gnu::alloc_size
ElemSizeParam
NumElemsParam
always_destroy
clang::always_destroy
variables
always_inline
gnu::always_inline
__forceinline
analyzer_noreturn
analyzer_suppress
clang::analyzer_suppress
DiagnosticIdentifiers...
variables and statements
annotate
clang::annotate
Annotation
no_caller_saved_registers
gnu::no_caller_saved_registers
nocf_check
gnu::nocf_check
functions and function pointers
objc_arc_weak_reference_unavailable
clang::objc_arc_weak_reference_unavailable
Objective-C interfaces
clang::argument_with_type_tag
clang::pointer_with_type_tag
ArgumentKind
ArgumentIdx
TypeTagIdx
clang::__clang_arm_builtin_alias
BuiltinName
__clang_arm_mve_strict_polymorphism
clang::__clang_arm_mve_strict_polymorphism
arm_sve_vector_bits
NumBits
artificial
gnu::artificial
inline functions
clang::assert_capability
clang::assert_shared_capability
assume_aligned
gnu::assume_aligned
Offset
Objective-C methods and functions
assume
clang::assume
Assumption
functions and Objective-C methods
clang::availability
priority
named declarations
preserve_access_index
clang::preserve_access_index
structs, unions, and classes
btf_decl_tag
clang::btf_decl_tag
BTFDeclTag
variables, functions, structs, unions, classes, non-static data members, and typedefs
clang::blocks
Type
clang::builtin_alias
gnu::cdecl
__cdecl
_cdecl
cf_audited_transfer
clang::cf_audited_transfer
cf_consumed
clang::cf_consumed
Guard
cfi_canonical_jump_table
clang::cfi_canonical_jump_table
cf_returns_not_retained
clang::cf_returns_not_retained
cf_returns_retained
clang::cf_returns_retained
cf_unknown_transfer
clang::cf_unknown_transfer
clang::cpu_dispatch
Cpus...
clang::cpu_specific
constant
__constant__
device
__device__
functions and variables
device_builtin_surface_type
__device_builtin_surface_type__
classes
device_builtin_texture_type
__device_builtin_texture_type__
__global__
host
__host__
launch_bounds
__launch_bounds__
MaxThreads
MinBlocks
Objective-C methods, functions, and function pointers
__shared__
noreturn
clang::callable_when
CallableStates...
clang::callback
Encoding...
called_once
clang::called_once
capability
clang::capability
shared_capability
clang::shared_capability
Name
structs, unions, classes, and typedefs
carries_dependency
parameters, Objective-C methods, and functions
cleanup
gnu::cleanup
FunctionDecl
local variables
cmse_nonsecure_call
cmse_nonsecure_entry
code_seg
functions and classes
cold
gnu::cold
gnu::common
gnu::const
__const
gnu::__const
constinit
require_constant_initialization
clang::require_constant_initialization
gnu::constructor
Priority
clang::consumable
DefaultState
consumable_auto_cast_state
clang::consumable_auto_cast_state
consumable_set_state_on_read
clang::consumable_set_state_on_read
convergent
clang::convergent
dllexport
gnu::dllexport
functions, variables, classes, and Objective-C interfaces
dllimport
gnu::dllimport
IsDeref
DependerDecls...
DependerLevels...
non-static data members and variables
gnu::deprecated
Message
Replacement
destructor
gnu::destructor
Cond
DiagnosticType
functions, Objective-C methods, and Objective-C properties
disable_sanitizer_instrumentation
clang::disable_sanitizer_instrumentation
functions, Objective-C methods, and global variables
disable_tail_calls
clang::disable_tail_calls
empty_bases
enforce_tcb
clang::enforce_tcb
TCBName
enforce_tcb_leaf
clang::enforce_tcb_leaf
clang::enum_extensibility
Extensibility
gnu::error
gnu::warning
UserDiagnostic
exclude_from_explicit_instantiation
clang::exclude_from_explicit_instantiation
variables, functions, and classes
SuccessValue
ext_vector_type
NumElements
external_source_symbol
clang::external_source_symbol
definedIn
generatedDeclaration
clang::fallthrough
gnu::fallthrough
empty statements
gnu::fastcall
__fastcall
_fastcall
flag_enum
clang::flag_enum
flatten
gnu::flatten
gnu::format
FormatIdx
FirstArg
Objective-C methods, blocks, and non-K&R-style functions
format_arg
gnu::format_arg
Objective-C methods and non-K&R-style functions
gnu_inline
gnu::gnu_inline
guarded_var
clang::guarded_var
managed
__managed__
gnu::hot
ibaction
clang::ibaction
Objective-C instance methods
iboutlet
clang::iboutlet
clang::iboutletcollection
Interface
ifunc
gnu::ifunc
Resolver
init_priority
gnu::init_priority
intel_ocl_bicc
clang::intel_ocl_bicc
internal_linkage
clang::internal_linkage
lto_visibility_public
clang::lto_visibility_public
layout_version
leaf
gnu::leaf
lifetimebound
clang::lifetimebound
parameters and implicit object parameters
likely
clang::likely
loader_uninitialized
clang::loader_uninitialized
lockable
clang::loop
Option
State
Value
mig_server_routine
clang::mig_server_routine
functions, Objective-C methods, and blocks
ms_abi
gnu::ms_abi
allocator
__single_inheritance
__multiple_inheritance
__virtual_inheritance
__unspecified_inheritance
novtable
gnu::ms_struct
matrix_type
clang::matrix_type
NumRows
NumColumns
may_alias
gnu::may_alias
gnu::micromips
minsize
clang::minsize
min_vector_width
clang::min_vector_width
VectorWidth
gnu::mips16
long_call
gnu::long_call
gnu::far
short_call
gnu::short_call
near
gnu::near
gnu::mode
Mode
variables, enums, typedefs, and non-static data members
musttail
clang::musttail
return statements
ns_consumed
clang::ns_consumed
ns_consumes_self
clang::ns_consumes_self
Objective-C methods
ErrorDomain
ns_returns_autoreleased
clang::ns_returns_autoreleased
ns_returns_not_retained
clang::ns_returns_not_retained
ns_returns_retained
clang::ns_returns_retained
naked
gnu::naked
neon_polyvector_type
clang::neon_polyvector_type
neon_vector_type
clang::neon_vector_type
noalias
no_builtin
clang::no_builtin
BuiltinNames...
nocommon
gnu::nocommon
nodebug
gnu::nodebug
typedefs, functions, function pointers, Objective-C methods, and variables
noderef
clang::noderef
no_destroy
clang::no_destroy
noduplicate
clang::noduplicate
noescape
clang::noescape
noinline
gnu::noinline
no_instrument_function
gnu::no_instrument_function
nomerge
clang::nomerge
functions and statements
nomicromips
gnu::nomicromips
nomips16
gnu::nomips16
no_profile_instrument_function
gnu::no_profile_instrument_function
gnu::noreturn
no_sanitize
clang::no_sanitize
Sanitizers...
no_address_safety_analysis
gnu::no_address_safety_analysis
no_sanitize_address
gnu::no_sanitize_address
no_sanitize_thread
gnu::no_sanitize_thread
no_sanitize_memory
clang::no_sanitize_memory
no_speculative_load_hardening
clang::no_speculative_load_hardening
no_split_stack
gnu::no_split_stack
no_stack_protector
clang::no_stack_protector
no_thread_safety_analysis
clang::no_thread_safety_analysis
nothrow
gnu::nothrow
no_unique_address
non-bit-field non-static data members
gnu::nonnull
functions, methods, and parameters
not_tail_called
clang::not_tail_called
os_consumed
clang::os_consumed
os_consumes_this
clang::os_consumes_this
non-static member functions
os_returns_not_retained
clang::os_returns_not_retained
functions, Objective-C methods, Objective-C properties, and parameters
os_returns_retained
clang::os_returns_retained
os_returns_retained_on_non_zero
clang::os_returns_retained_on_non_zero
os_returns_retained_on_zero
clang::os_returns_retained_on_zero
objc_boxable
clang::objc_boxable
clang::objc_bridge
BridgedType
clang::objc_bridge_mutable
clang::objc_bridge_related
RelatedClass
ClassMethod
InstanceMethod
objc_class_stub
clang::objc_class_stub
objc_complete_definition
objc_designated_initializer
clang::objc_designated_initializer
objc_direct
clang::objc_direct
objc_direct_members
clang::objc_direct_members
Objective-C implementation declarations, Objective-C interfaces, and Objective-C containers
objc_exception
clang::objc_exception
objc_protocol_requires_explicit_implementation
clang::objc_protocol_requires_explicit_implementation
Objective-C protocols
objc_externally_retained
clang::objc_externally_retained
variables, functions, blocks, and Objective-C methods
clang::objc_gc
Kind
objc_independent_class
clang::objc_independent_class
__kindof
clang::objc_method_family
Family
NSObject
clang::NSObject
objc_nonlazy_class
clang::objc_nonlazy_class
Objective-C interfaces and Objective-C implementation declarations
objc_non_runtime_protocol
clang::objc_non_runtime_protocol
clang::objc_ownership
objc_precise_lifetime
clang::objc_precise_lifetime
objc_requires_property_definitions
clang::objc_requires_property_definitions
objc_requires_super
clang::objc_requires_super
objc_returns_inner_pointer
clang::objc_returns_inner_pointer
Objective-C methods and Objective-C properties
objc_root_class
clang::objc_root_class
objc_runtime_name
clang::objc_runtime_name
MetadataName
Objective-C interfaces and Objective-C protocols
objc_runtime_visible
clang::objc_runtime_visible
objc_subclassing_restricted
clang::objc_subclassing_restricted
objc_suppress_direct
clang::objc_suppress_direct
Objective-C properties
__read_only
read_only
__write_only
write_only
__read_write
read_write
parameters and typedefs
__constant
opencl_constant
clang::opencl_constant
__generic
opencl_generic
clang::opencl_generic
__global
opencl_global
clang::opencl_global
opencl_global_device
clang::opencl_global_device
opencl_global_host
clang::opencl_global_host
intel_reqd_sub_group_size
SubGroupSize
__kernel
__local
opencl_local
clang::opencl_local
nosvm
__private
opencl_private
clang::opencl_private
opencl_unroll_hint
UnrollHint
'for', 'while', and 'do' statements
optnone
clang::optnone
overloadable
clang::overloadable
gsl::Owner
DerefType
clang::ownership_holds
clang::ownership_returns
clang::ownership_takes
Module
gnu::packed
clang::param_typestate
ParamState
pascal
clang::pascal
__pascal
_pascal
pass_object_size
clang::pass_object_size
pass_dynamic_object_size
clang::pass_dynamic_object_size
patchable_function_entry
gnu::patchable_function_entry
Count
gnu::pcs
gsl::Pointer
__ptrauth
__ptrauth_restricted_intptr
AddressDiscriminated
ExtraDiscriminator
AuthenticationMode
ptrauth_struct
clang::ptrauth_struct
Discriminator
clang::preferred_name
TypedefType
class templates
preserve_all
clang::preserve_all
preserve_most
clang::preserve_most
pt_guarded_var
clang::pt_guarded_var
__ptr32
__ptr64
pure
gnu::pure
gnu::regcall
__regcall
regparm
gnu::regparm
NumParams
reinitializes
clang::reinitializes
non-static non-const member functions
clang::release_capability
clang::release_shared_capability
clang::release_generic_capability
clang::unlock_function
release_handle
clang::release_handle
reqd_work_group_size
XDim
YDim
ZDim
clang::requires_capability
clang::exclusive_locks_required
clang::requires_shared_capability
clang::shared_locks_required
malloc
gnu::malloc
gnu::retain
variables with non-local storage, functions, and Objective-C methods
clang::return_typestate
functions and parameters
returns_nonnull
gnu::returns_nonnull
returns_twice
gnu::returns_twice
__sptr
sycl_kernel
clang::sycl_kernel
function templates
scoped_lockable
clang::scoped_lockable
section
gnu::section
allocate
functions, global variables, Objective-C methods, and Objective-C properties
selectany
gnu::selectany
sentinel
gnu::sentinel
Sentinel
NullPos
clang::set_typestate
NewState
speculative_load_hardening
clang::speculative_load_hardening
standalone_debug
clang::standalone_debug
gnu::stdcall
__stdcall
_stdcall
gsl::suppress
clang::swift_async
CompletionHandlerIndex
swiftasynccall
clang::swiftasynccall
swift_async_context
clang::swift_async_context
clang::swift_async_error
Convention
HandlerParamIdx
swift_async_name
swift_attr
Attribute
swift_bridge
SwiftType
tag types, typedefs, Objective-C interfaces, and Objective-C protocols
swift_bridged_typedef
swiftcall
clang::swiftcall
swift_context
clang::swift_context
swift_error_result
clang::swift_error_result
swift_indirect_result
clang::swift_indirect_result
swift_name
NewtypeKind
swift_objc_members
swift_private
symbol_metadata_footnote
clang::symbol_metadata_footnote
Section
Metadata
functions, Objective-C methods, Objective-C interfaces, and Objective-C properties
sysv_abi
gnu::sysv_abi
tls_model
gnu::tls_model
Model
thread-local variables
gnu::target
featuresStr
clang::test_typestate
TestState
thiscall
gnu::thiscall
__thiscall
_thiscall
transparent_union
gnu::transparent_union
trivial_abi
clang::trivial_abi
clang::try_acquire_capability
clang::try_acquire_shared_capability
_Nullable_result
clang::type_tag_for_datatype
MatchingCType
LayoutCompatible
MustBeNull
clang::type_visibility
Visibility
clang::typed_memory_operation
ImplementationFunction
__uptr
clang::unavailable
clang::uninitialized
unlikely
clang::unlikely
gnu::unused
variables, non-static data members, types, enums, enumerators, labels, non-static data members, Objective-C methods, functions, and function pointers
use_handle
clang::use_handle
used
gnu::used
using_if_exists
clang::using_if_exists
named declarations, types, and value declarations
Guid
structs, unions, classes, and enums
clang::ptrauth_vtable_pointer
AddressDiscrimination
ExtraDiscrimination
CustomDiscriminationValue
vecreturn
clang::vecreturn
TypeHint
clang::vectorcall
__vectorcall
_vectorcall
vector_size
gnu::vector_size
NumBytes
gnu::visibility
warn_unused
gnu::warn_unused
clang::warn_unused_result
warn_unused_result
gnu::warn_unused_result
Objective-C methods, enums, structs, unions, classes, functions, and function pointers
gnu::weak
weak_import
clang::weak_import
weakref
gnu::weakref
variables and functions
export_name
clang::export_name
ExportName
import_module
clang::import_module
ImportModule
import_name
clang::import_name
ImportName
work_group_size_hint
force_align_arg_pointer
gnu::force_align_arg_pointer
xray_always_instrument
clang::xray_always_instrument
xray_never_instrument
clang::xray_never_instrument
xray_log_args
clang::xray_log_args
ArgumentCount
clang::xnu_usage_semantics
Semantics...
auto:
:auto
__va_list_tag
__int128_t
__uint128_t
Class
Protocol
__NSConstantString
type_info
size_t
sampler_t
event_t
clk_event_t
queue_t
reserve_id_t
atomic_int
atomic_uint
atomic_float
atomic_flag
atomic_half
atomic_double
atomic_long
atomic_ulong
intel_sub_group_avc_mce_payload_t
intel_sub_group_avc_ime_payload_t
intel_sub_group_avc_ref_payload_t
intel_sub_group_avc_sic_payload_t
intel_sub_group_avc_mce_result_t
intel_sub_group_avc_ime_result_t
intel_sub_group_avc_ref_result_t
intel_sub_group_avc_sic_result_t
intel_sub_group_avc_ime_result_single_reference_streamout_t
intel_sub_group_avc_ime_result_dual_reference_streamout_t
intel_sub_group_avc_ime_single_reference_streamin_t
intel_sub_group_avc_ime_dual_reference_streamin_t
__SVInt8_t
__SVInt16_t
__SVInt32_t
__SVInt64_t
__SVUint8_t
__SVUint16_t
__SVUint32_t
__SVUint64_t
__SVFloat16_t
__SVFloat32_t
__SVFloat64_t
__SVBFloat16_t
__clang_svint8x2_t
__clang_svint16x2_t
__clang_svint32x2_t
__clang_svint64x2_t
__clang_svuint8x2_t
__clang_svuint16x2_t
__clang_svuint32x2_t
__clang_svuint64x2_t
__clang_svfloat16x2_t
__clang_svfloat32x2_t
__clang_svfloat64x2_t
__clang_svbfloat16x2_t
__clang_svint8x3_t
__clang_svint16x3_t
__clang_svint32x3_t
__clang_svint64x3_t
__clang_svuint8x3_t
__clang_svuint16x3_t
__clang_svuint32x3_t
__clang_svuint64x3_t
__clang_svfloat16x3_t
__clang_svfloat32x3_t
__clang_svfloat64x3_t
__clang_svbfloat16x3_t
__clang_svint8x4_t
__clang_svint16x4_t
__clang_svint32x4_t
__clang_svint64x4_t
__clang_svuint8x4_t
__clang_svuint16x4_t
__clang_svuint32x4_t
__clang_svuint64x4_t
__clang_svfloat16x4_t
__clang_svfloat32x4_t
__clang_svfloat64x4_t
__clang_svbfloat16x4_t
__SVBool_t
__vector_quad
__vector_pair
__rvv_int8mf8_t
__rvv_int8mf4_t
__rvv_int8mf2_t
__rvv_int8m1_t
__rvv_int8m2_t
__rvv_int8m4_t
__rvv_int8m8_t
__rvv_uint8mf8_t
__rvv_uint8mf4_t
__rvv_uint8mf2_t
__rvv_uint8m1_t
__rvv_uint8m2_t
__rvv_uint8m4_t
__rvv_uint8m8_t
__rvv_int16mf4_t
__rvv_int16mf2_t
__rvv_int16m1_t
__rvv_int16m2_t
__rvv_int16m4_t
__rvv_int16m8_t
__rvv_uint16mf4_t
__rvv_uint16mf2_t
__rvv_uint16m1_t
__rvv_uint16m2_t
__rvv_uint16m4_t
__rvv_uint16m8_t
__rvv_int32mf2_t
__rvv_int32m1_t
__rvv_int32m2_t
__rvv_int32m4_t
__rvv_int32m8_t
__rvv_uint32mf2_t
__rvv_uint32m1_t
__rvv_uint32m2_t
__rvv_uint32m4_t
__rvv_uint32m8_t
__rvv_int64m1_t
__rvv_int64m2_t
__rvv_int64m4_t
__rvv_int64m8_t
__rvv_uint64m1_t
__rvv_uint64m2_t
__rvv_uint64m4_t
__rvv_uint64m8_t
__rvv_float16mf4_t
__rvv_float16mf2_t
__rvv_float16m1_t
__rvv_float16m2_t
__rvv_float16m4_t
__rvv_float16m8_t
__rvv_float32mf2_t
__rvv_float32m1_t
__rvv_float32m2_t
__rvv_float32m4_t
__rvv_float32m8_t
__rvv_float64m1_t
__rvv_float64m2_t
__rvv_float64m4_t
__rvv_float64m8_t
__rvv_bool1_t
__rvv_bool2_t
__rvv_bool4_t
__rvv_bool8_t
__rvv_bool16_t
__rvv_bool32_t
__rvv_bool64_t
__builtin_ms_va_list
__builtin_va_list
*** Semantic Analysis Stats:
 SFINAE diagnostics trapped.
nullptr
'weak'
///<
/**<
super
bool
atomic_size_t
atomic_intptr_t
atomic_uintptr_t
atomic_ptrdiff_t
<scratch space>
expression
array
basic_string
deque
forward_list
list
multiset
multimap
priority_queue
queue
stack
unordered_set
unordered_map
unordered_multiset
unordered_multimap
const_iterator
reverse_iterator
const_reverse_iterator
basic_regex
unique_ptr
basic_string_view
reference_wrapper
regex_iterator
stack empty
vtordisp
.drectve
, and 
<API Notes>
_app_extension
load
API_AVAILABLE
API_AVAILABLE(
z/OS
init
if (
@available
__builtin_available
, *)) {
} else {
// Fallback on earlier versions
vector element
matrix element
property expression
container subscripting expression
    
structure pointer
'int (*)(const char *, ...)'
__builtin_return_address
__builtin_frame_address
extdiv
bpermd
isa-v30-instructions
power9-vector
isa-v207-instructions
isa-v206-instructions
W256SLiW256C*
vW256SLiW256C*
vW256*VV
vv*W256*
vW512*VVVV
vv*W512*
vW512*
vW512*VV
vW512*W256V
vW512*VVi15i15i255
vW512*VVi15i15i15
vW512*VVi15i15i3
vW512*VVi15i15
vW512*W256Vi15i3
64bit
RV64
'this'
_Float16
half
first
second
spsel
daifset
daifclr
paired-vector-memops
scanf
printf
printf0
NSString
CFString
strfmon
kprintf
cmn_err
vcmn_err
zcmn_err
freebsd_kprintf
os_trace
os_log
"%s", 
@"%@", 
c_str
std::abs
(void*)
sizeof(
) - 
strlen(
) - 1
'super'
release
taggedRelease
column
'kernel_enqueue_flags_t' (i.e. uint)
ndrange_t
'ndrange_t'
 ? YES : NO
localizedStringForKey
table
%02x
%04x
%08x
unichar
NSUInteger
c_str()
.c_str()
cstdlib
cmath
(size_t)(
'std::strong_ordering::equal'
'std::strong_ordering::less'
'std::strong_ordering::greater'
, ...
 override
final
operator
override
else if
condition
new[]
delete[]
co_await
method
selector
sender
statements
ifdef
macro
ifndef
elif
elifdef
elifndef
endif
header
args
undef
number
filename
pragma
include_next
defined
ApplicationExtension
operator+
operator-
operator*
operator/
operator%
operator^
operator&
operator|
operator~
operator!
operator=
operator<
operator>
operator+=
operator-=
operator*=
operator/=
operator%=
operator^=
operator&=
operator|=
operator<<
operator>>
operator<<=
operator>>=
operator==
operator!=
operator<=
operator>=
operator<=>
operator&&
operator||
operator++
operator--
operator,
operator->*
operator->
operatorco_await
operator new
operator delete
operator new[]
operator delete[]
operator()
operator[]
template<...> class
 const
 volatile
 restrict
(...)
(void)
inout 
out 
bycopy 
byref 
oneway 
nonnull 
nullable 
null_unspecified 
, nil
, NULL
, (void*)0
identifier
declarations
using namespace
string-literal
declaration
using
qualifier
using typename
catch
cases
init-statement
init-expression
inc-expression
range-declaration
range-expression
return true
return false
return nullptr
label
__bridge
__bridge_transfer
Objective-C type
CF type
std::type_info
typeid
expression-or-type
expressions
size
void
std::nullptr_t
alignof
sizeof...
parameter-pack
_Alignof
sizeof
typedef
static_assert
constexpr
thread_local
explicit
friend
mutable
inline
__PRETTY_FUNCTION__
__FUNCTION__
__func__
!#!NAME_GOES_HERE!#!
parameter
body
__unaligned
long
signed
unsigned
float
double
_Complex
_Imaginary
wchar_t
__auto_type
typeof
@end
synthesize
@required
required
@optional
protocol
@implementation
implementation
compatibility_alias
@import
@private
@protected
@public
@package
@try
@catch
@finally
@throw
synchronized
char[]
const char[]
encode
type-name
Protocol *
protocol-name
NSString *
NSArray *
objects, ...
NSDictionary *
object, ...
autorelease
copyWithZone
mutableCopy
mutableCopyWithZone
awakeFromCoder
replacementObjectFromCoder
classForCoder
superclass
alloc
allocWithZone
struct <anonymous>
__interface <anonymous>
class <anonymous>
union <anonymous>
enum <anonymous>
BOOL
NSMutableArray
NSArray
NSMutableSet
NSSet
countOf
objectIn
AtIndex
index
AtIndexes
NSIndexSet *
indexes
object-type
buffer
range:
NSRange
inRange
insertObject
insertObject:
object
insert
atIndexes
atIndexes:
removeObjectFrom
replaceObjectIn
withObject
withObject:
replace
with
enumeratorOf
NSEnumerator *
memberOf
Object
NSSet *
objects
intersect
keyPathsForValuesAffecting
NSSet<NSString *> *
automaticallyNotifiesObserversOf
.inc
__promise
initial_suspend
final_suspend
co_await
await_transform
co_yield
yield_value
co_return
return_value
return_void
get_return_object_on_allocation_failure
unhandled_exception
get_return_object
__coro_gro
coroutine_traits
std::experimental::coroutine_traits
promise_type
await_ready
await_suspend
await_resume
from_address
coroutine_handle
std::experimental::coroutine_handle
__hipPushCallConfiguration
hipConfigureCall
__cudaPushCallConfiguration
cudaConfigureCall
typename 
'ns_returns_retained'
static 
global or constant
constexpr 
  int 
ntohl
htonl
is_path_xcrun_shim
qsort
os_variant_has_internal_diagnostic
os_variant_has_internal_diagnostics
_NSGetExecutablePath
fdatasync
H5T_patch_vlen_file
CGSSetDebugOptions
CGSGetDebugOptions
CGSCreateShadowCacheDebugInfo
thread_stack_pcs
inaddr6_any
inaddr6_loopback
AXAuditIsQueue
bad_alloc
align_val_t
stdio.h
setjmp.h
ucontext.h
[[clang::require_constant_initialization]]
__attribute__((require_constant_initialization))
intptr_t
uintptr_t
ptrdiff_t
fpmath=
arch=
tune=
self->
branch-protection
'minsize'
aapcs-vfp
'ns_returns_retained'
'dllimport'
pointer
self
'interrupt'
'signal'
'export_name'
<no message provided>
a CFString
an NSString
a string type
gcc_diag
gcc_cdiag
gcc_cxxdiag
gcc_tdiag
__CFString
NSAttributedString
NSMutableString
string type
functions, classes, or enumerations
__declspec(thread)
mutex
zero_argument
nonzero_argument
tmo_malloc
tmo_calloc
tmo_realloc
tmo_aligned_alloc
tmo_posix_memalign
sealed
 sealed
 final
const &
 const &
_Noreturn
__restrict
experimental
initializer_list
using 
auto &
constexpr auto 
'const char *'
tuple_size
tuple_element
__builtin_objc_memmove_collectable
__builtin_memcpy
 : NSObject 
(id)
category
__covariant
__contravariant
forwardInvocation
NSProxy
length
macOS 10.11
iOS 9
__debug
pair
throw()
throw(
noexcept(
__attribute__((nothrow))
static 
NULL
(void*) 0
object_getClass
object_getClass(
__builtin_trap
this->
(void *)0
less_equal
greater
greater_equal
static_cast<void>(
(void)(
object_setClass
object_setClass(
BOOL
(vector of 
' values)
 isEqual:
isEqual
performSelector
1 << 
1LL << 
0x2 ^ 
0xA ^ 
__real
__imag
operator""
'size_t'
default new
default delete
__builtin_operator_delete
__builtin_operator_new
expr-type
, this
even
NSConstantString
stringWithUTF8String
valueWithBytes
objCType
bytes
integral
keys
NSCopying
respondsToSelector
CFBridgingRelease
CFBridgingRelease 
__bridge_transfer 
CFBridgingRetain
__bridge 
CFBridgingRetain 
__bridge_retained 
 = {}
'\0'
L'\0'
u'\0'
U'\0'
Filter Mode
Addressing Mode
rbegin
cbegin
crbegin
rend
cend
crend
c_str
find
equal_range
lower_bound
upper_bound
front
back
any_cast
static_cast<
'this'
__invoke
lookup results for 
        
[...]
__make_integer_seq
__type_pack_element
atomic_flag_test_and_set_explicit
tomic_compare_exchange_weak_explicit
ub_group_clustered_reduce_logical_or
sub_group_clustered_reduce_logical_
tomic_compare_exchange_strong_explicit
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_add __opencl_c_ext_fp16_global_atomic_add
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_load_store __opencl_c_ext_fp16_local_atomic_load_store
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_min_max __opencl_c_ext_fp16_global_atomic_min_max
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_add
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_load_store
cl_ext_float_atomics __opencl_c_ext_fp16_global_atomic_min_max
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_add
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_load_store
cl_ext_float_atomics __opencl_c_ext_fp16_local_atomic_min_max
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_add __opencl_c_ext_fp32_global_atomic_add
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_min_max __opencl_c_ext_fp32_global_atomic_min_max
cl_ext_float_atomics __opencl_c_ext_fp32_global_atomic_add
cl_ext_float_atomics __opencl_c_ext_fp32_global_atomic_min_max
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_add
cl_ext_float_atomics __opencl_c_ext_fp32_local_atomic_min_max
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_add __opencl_c_ext_fp64_global_atomic_add
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_min_max __opencl_c_ext_fp64_global_atomic_min_max
cl_ext_float_atomics __opencl_c_ext_fp64_global_atomic_add
cl_ext_float_atomics __opencl_c_ext_fp64_global_atomic_min_max
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_add
cl_ext_float_atomics __opencl_c_ext_fp64_local_atomic_min_max
cl_khr_extended_bit_ops
cl_khr_mipmap_image_writes cl_khr_3d_image_writes
cl_khr_subgroup_ballot
cl_khr_subgroup_clustered_reduce
cl_khr_subgroup_extended_types
cl_khr_subgroup_non_uniform_arithmetic
cl_khr_subgroup_non_uniform_vote
cl_khr_subgroup_shuffle
cl_khr_subgroup_shuffle_relative
__opencl_c_work_group_collective_functions
__opencl_c_integer_dot_product_input_4x8bit
__opencl_c_integer_dot_product_input_4x8bit_packed
clk_profiling_info
cl_mem_fence_flags
memory_order
memory_scope
objc_super
export 
module;
retain (or strong)
@synthesize 
nonatomic, 
(nonatomic) 
__attribute__((objc_method_family(none)))
requires
.global_tid.
.bound_tid.
.part_id.
.privates.
.copy_fn.
.task_t.
.lb.
.ub.
.st.
.liter.
.reductions.
.previous.lb.
.previous.ub.
omp_interop_t
scan
ordered
'map' or 'use_device_ptr'
'map', 'use_device_ptr', or 'use_device_addr'
'map'
.floor_
.iv.
.tile_
#pragma omp unroll full
.unrolled.iv.
.unroll_inner.iv.
.unroll_inner.tripcount.
schedule
'init', 'use', 'destroy', or 'nowait'
.firstprivate.temp
.lastprivate.src
.lastprivate.dst
.linear.start
.linear.step
.copyin.src
.copyin.dst
threadprivate or private in the enclosing context
.copyprivate.src
.copyprivate.dst
'source' or 'sink'
depend modifier(iterator) or 
omp_in
omp_out
omp_priv
omp_orig
omp_event_handle_t
dist_schedule
'scalar', 'aggregate', 'pointer'
'alloc', 'from', 'to', 'tofrom', 'firstprivate', 'none', 'default'
'alloc', 'from', 'to', 'tofrom', 'firstprivate', 'none', 'default', 'present'
.devptr.temp
omp_allocator_handle_t
Distance
.start
.stop
.step
LoopVar
Logical
 or 
$ompvariant
.omp.lb
.omp.ub
.omp.is_last
.omp.stride
.omp.comb.lb
.omp.comb.ub
.omp.iv
.capture_expr.
.reduction.lhs
.task_red.
omp_depend_t
omp_alloctrait_t
'enable_if'
objectForKeyedSubscript
objectAtIndexedSubscript
setObject
forKeyedSubscript
atIndexedSubscript
UNREFERENCED_PARAMETER
break
continue
countByEnumeratingWithState
count
__range
__begin
__end
literal
@try
'__try'
@throw
'try'
'@try'
__context
default captured statement
Objective-C @finally statement
OpenMP region
unwind
__MSASMLABEL_.${:uid}__
template 
valarray
[with 
template<> 
(anonymous)
instantiating class definition
instantiating enum definition
instantiating default member init
cannot instantiate %0 yet
instantiating function definition
instantiating variable initializer
instantiating variable definition
matrix
matrix row
matrix column
_Nonnull
_Nullable
_Nullable_result
_Null_unspecified
NSError
_ExtInt
__bf16
cl_khr_fp64 and __opencl_c_fp64
__float128
__ibm128
cl_khr_3d_image_writes and __opencl_c_3d_image_writes
__kindof 
autoreleasing
'neon' or 'mve'
'sve'
isa-pointer
authenticates-null-values
'__ptr32'
'__ptr64'
'__sptr'
'__uptr'
'static'
type qualifier
 varname
'address_space'
Loading API notes from 
_private
APINotes
_private.
APINotes.
IDENTIFIER_BLOCK
IDENTIFIER_DATA
OBJC_CONTEXT_BLOCK
OBJC_CONTEXT_ID_DATA
OBJC_PROPERTY_BLOCK
OBJC_PROPERTY_DATA
OBJC_METHOD_BLOCK
OBJC_METHOD_DATA
OBJC_SELECTOR_BLOCK
OBJC_SELECTOR_DATA
GLOBAL_VARIABLE_BLOCK
GLOBAL_VARIABLE_DATA
GLOBAL_FUNCTION_BLOCK
GLOBAL_FUNCTION_DATA
Availability
AvailabilityMsg
SwiftInferImportAsMember
SwiftVersions
TVOS
nonswift
available
Classes
Protocols
Functions
Globals
Enumerators
Tags
Typedefs
AuditedForNullability
SwiftPrivate
SwiftName
SwiftBridge
NSErrorDomain
SwiftImportAsNonGeneric
SwiftObjCMembers
Methods
Properties
Selector
MethodKind
Parameters
Nullability
NullabilityOfRet
RetainCountConvention
FactoryAsInit
DesignatedInit
Required
SuppressDirect
ResultType
Instance
Position
NoEscape
Nonnull
Optional
Unspecified
NullableResult
Scalar
CFReturnsRetained
CFReturnsNotRetained
NSReturnsRetained
NSReturnsNotRetained
PropertyKind
SwiftImportAsAccessors
EnumExtensibility
FlagEnum
EnumKind
open
closed
CFEnum
NSEnum
CFOptions
NSOptions
CFClosedEnum
NSClosedEnum
SwiftWrapper
multiple definitions of class '
multiple definitions of protocol '
multiple definitions of global variable '
multiple definitions of global function '
multiple definitions of enumerator '
multiple definitions Of tag '
cannot mix EnumKind and EnumExtensibility (for 
cannot mix EnumKind and FlagEnum (for 
multiple definitions of typedef '
duplicate definition of method '
duplicate definition of instance property '
duplicate definition of class property '
selector 
is missing a ':' at the end
'FactoryAsInit' is no longer valid; use 'SwiftName' instead
availability message for available API '
' will not be used
nullability info for 
 does not fit
  <#code#>
<#code#>
break;
call_once
dispatch_sync
dispatch_once
libcxx03 std::call_once implementation, skipping.
unknown std::call_once implementation, skipping.
__state_
_M_once
completionHandler
completion
withCompletionHandler
withCompletion
completionBlock
withCompletionBlock
replyTo
reply
withReplyTo
WithCompletionHandler
WithCompletion
WithCompletionBlock
WithReplyTo
WithReply
cancel
shouldCall
done
success
dispatch_async
dispatch_async_and_wait
dispatch_after
dispatch_barrier_async
dispatch_barrier_async_and_wait
dispatch_barrier_sync
 ... 
catch (
__except (
for (
goto *
unconsumed
consumed
raise
NSException
format
arguments
#null
#undefined
#ptr
#vref
#lit
new 
 := 
cast[
extendNum
truncNum
toFloat
toInt
objToPtr
CFG {
 BB_
let 
let _x
phi(
goto 
BB_null
branch (
return 
) then 
 else 
typeid(
void()
<out of lifetime>
<uninitialized>
(char*)
{*new 
 + 1
;{}#@
*** AST Context Stats:
 types total.
Adjusted
 types, 
 each 
 bytes)
Decayed
ConstantArray
DependentSizedArray
IncompleteArray
VariableArray
Atomic
Attributed
BlockPointer
Builtin
Complex
Decltype
Auto
DeducedTemplateSpecialization
DependentAddressSpace
DependentExtInt
DependentName
DependentSizedExtVector
DependentTemplateSpecialization
DependentVector
DynamicCountPointer
DynamicRangePointer
Elaborated
ExtInt
FunctionNoProto
FunctionProto
InjectedClassName
MacroQualified
ConstantMatrix
DependentSizedMatrix
MemberPointer
ObjCObjectPointer
ObjCObject
ObjCInterface
ObjCTypeParam
PackExpansion
Paren
Pipe
LValueReference
RValueReference
SubstTemplateTypeParmPack
SubstTemplateTypeParm
Enum
Record
TemplateSpecialization
TemplateTypeParm
TypeOfExpr
TypeOf
Typedef
UnaryTransform
UnresolvedUsing
ValueTerminated
Vector
ExtVector
Total bytes = 
 implicit default constructors created
 implicit copy constructors created
 implicit move constructors created
 implicit copy assignment operators created
 implicit move assignment operators created
 implicit destructors created
__int128_t
__uint128_t
_GUID
__NSConstantString_tag
_cfisa
_swift_rc
_ptr
objc_super
reserved
instancetype
objc_class
objc_object
{objc_object=}
{objc_class=}
"_vptr$
Class
Protocol
sse2
a prior #pragma section
__make_integer_seq
__type_pack_element
<objc_object>
DF16_
<anonymous_record>
cannot yet @encode type %0
__va_list
__stack
__gr_top
__vr_top
__gr_offs
__vr_offs
overflow_arg_area
reg_save_area
gp_offset
fp_offset
__ap
__gpr
__fpr
__overflow_arg_area
__reg_save_area
__current_saved_reg_area_pointer
__saved_reg_area_end_pointer
__overflow_area_pointer
__builtin_ms_va_list
 address space
address space
unqualified
the global namespace
the global scope
block literal
lambda expression
method 
function 
' (aka '
values
' (vector of 
(no argument)
(default) 
 != 
[(default) 
(default) template 
[(default) template 
[template 
 aka 
(no qualifiers) 
(no qualifiers)
 * ...]
inherited from
previous
 hidden
inner
array_filler
<None>
TemplateArgument
TemplateArgumentLoc
TemplateName
NestedNameSpecifierLoc
QualType
QualifiedTypeLoc
AdjustedTypeLoc
DecayedTypeLoc
ArrayTypeLoc
ConstantArrayTypeLoc
DependentSizedArrayTypeLoc
IncompleteArrayTypeLoc
VariableArrayTypeLoc
AtomicTypeLoc
AttributedTypeLoc
BlockPointerTypeLoc
BuiltinTypeLoc
ComplexTypeLoc
DecltypeTypeLoc
DeducedTypeLoc
AutoTypeLoc
DeducedTemplateSpecializationTypeLoc
DependentAddressSpaceTypeLoc
DependentExtIntTypeLoc
DependentNameTypeLoc
DependentSizedExtVectorTypeLoc
DependentTemplateSpecializationTypeLoc
DependentVectorTypeLoc
DynamicBoundPointerTypeLoc
DynamicCountPointerTypeLoc
DynamicRangePointerTypeLoc
ElaboratedTypeLoc
ExtIntTypeLoc
FunctionTypeLoc
FunctionNoProtoTypeLoc
FunctionProtoTypeLoc
InjectedClassNameTypeLoc
MacroQualifiedTypeLoc
MatrixTypeLoc
ConstantMatrixTypeLoc
DependentSizedMatrixTypeLoc
MemberPointerTypeLoc
ObjCObjectPointerTypeLoc
ObjCObjectTypeLoc
ObjCInterfaceTypeLoc
ObjCTypeParamTypeLoc
PackExpansionTypeLoc
ParenTypeLoc
PipeTypeLoc
PointerTypeLoc
ReferenceTypeLoc
LValueReferenceTypeLoc
RValueReferenceTypeLoc
SubstTemplateTypeParmPackTypeLoc
SubstTemplateTypeParmTypeLoc
TagTypeLoc
EnumTypeLoc
RecordTypeLoc
TemplateSpecializationTypeLoc
TemplateTypeParmTypeLoc
TypeOfExprTypeLoc
TypeOfTypeLoc
TypedefTypeLoc
UnaryTransformTypeLoc
UnresolvedUsingTypeLoc
ValueTerminatedTypeLoc
VectorTypeLoc
ExtVectorTypeLoc
TypeLoc
CXXBaseSpecifier
CXXCtorInitializer
NestedNameSpecifier
Decl
AccessSpecDecl
BlockDecl
CapturedDecl
ClassScopeFunctionSpecializationDecl
EmptyDecl
ExportDecl
ExternCContextDecl
FileScopeAsmDecl
FriendDecl
FriendTemplateDecl
ImportDecl
LifetimeExtendedTemporaryDecl
LinkageSpecDecl
NamedDecl
BaseUsingDecl
UsingDecl
UsingEnumDecl
LabelDecl
NamespaceDecl
NamespaceAliasDecl
ObjCCompatibleAliasDecl
ObjCContainerDecl
ObjCCategoryDecl
ObjCImplDecl
ObjCCategoryImplDecl
ObjCImplementationDecl
ObjCInterfaceDecl
ObjCProtocolDecl
ObjCMethodDecl
ObjCPropertyDecl
TemplateDecl
BuiltinTemplateDecl
ConceptDecl
RedeclarableTemplateDecl
ClassTemplateDecl
FunctionTemplateDecl
TypeAliasTemplateDecl
VarTemplateDecl
TemplateTemplateParmDecl
TypeDecl
TagDecl
EnumDecl
RecordDecl
CXXRecordDecl
ClassTemplateSpecializationDecl
ClassTemplatePartialSpecializationDecl
TemplateTypeParmDecl
TypedefNameDecl
ObjCTypeParamDecl
TypeAliasDecl
TypedefDecl
UnresolvedUsingTypenameDecl
UnresolvedUsingIfExistsDecl
UsingDirectiveDecl
UsingPackDecl
UsingShadowDecl
ConstructorUsingShadowDecl
ValueDecl
BindingDecl
DeclaratorDecl
FieldDecl
ObjCAtDefsFieldDecl
ObjCIvarDecl
FunctionDecl
CXXDeductionGuideDecl
CXXMethodDecl
CXXConstructorDecl
CXXConversionDecl
CXXDestructorDecl
MSPropertyDecl
NonTypeTemplateParmDecl
VarDecl
DecompositionDecl
ImplicitParamDecl
OMPCapturedExprDecl
ParmVarDecl
VarTemplateSpecializationDecl
VarTemplatePartialSpecializationDecl
EnumConstantDecl
IndirectFieldDecl
MSGuidDecl
OMPDeclareMapperDecl
OMPDeclareReductionDecl
TemplateParamObjectDecl
UnresolvedUsingValueDecl
OMPAllocateDecl
OMPRequiresDecl
OMPThreadPrivateDecl
ObjCPropertyImplDecl
PragmaCommentDecl
PragmaDetectMismatchDecl
RequiresExprBodyDecl
StaticAssertDecl
TranslationUnitDecl
Stmt
AsmStmt
GCCAsmStmt
MSAsmStmt
BreakStmt
CXXCatchStmt
CXXForRangeStmt
CXXTryStmt
CapturedStmt
CompoundStmt
ContinueStmt
CoreturnStmt
CoroutineBodyStmt
DeclStmt
DoStmt
ForStmt
GotoStmt
IfStmt
IndirectGotoStmt
MSDependentExistsStmt
NullStmt
OMPCanonicalLoop
OMPExecutableDirective
OMPAtomicDirective
OMPBarrierDirective
OMPCancelDirective
OMPCancellationPointDirective
OMPCriticalDirective
OMPDepobjDirective
OMPDispatchDirective
OMPFlushDirective
OMPInteropDirective
OMPLoopBasedDirective
OMPLoopDirective
OMPDistributeDirective
OMPDistributeParallelForDirective
OMPDistributeParallelForSimdDirective
OMPDistributeSimdDirective
OMPForDirective
OMPForSimdDirective
OMPMasterTaskLoopDirective
OMPMasterTaskLoopSimdDirective
OMPParallelForDirective
OMPParallelForSimdDirective
OMPParallelMasterTaskLoopDirective
OMPParallelMasterTaskLoopSimdDirective
OMPSimdDirective
OMPTargetParallelForSimdDirective
OMPTargetSimdDirective
OMPTargetTeamsDistributeDirective
OMPTargetTeamsDistributeParallelForDirective
OMPTargetTeamsDistributeParallelForSimdDirective
OMPTargetTeamsDistributeSimdDirective
OMPTaskLoopDirective
OMPTaskLoopSimdDirective
OMPTeamsDistributeDirective
OMPTeamsDistributeParallelForDirective
OMPTeamsDistributeParallelForSimdDirective
OMPTeamsDistributeSimdDirective
OMPLoopTransformationDirective
OMPTileDirective
OMPUnrollDirective
OMPMaskedDirective
OMPMasterDirective
OMPMetaDirective
OMPOrderedDirective
OMPParallelDirective
OMPParallelMasterDirective
OMPParallelSectionsDirective
OMPScanDirective
OMPSectionDirective
OMPSectionsDirective
OMPSingleDirective
OMPTargetDataDirective
OMPTargetDirective
OMPTargetEnterDataDirective
OMPTargetExitDataDirective
OMPTargetParallelDirective
OMPTargetParallelForDirective
OMPTargetTeamsDirective
OMPTargetUpdateDirective
OMPTaskDirective
OMPTaskgroupDirective
OMPTaskwaitDirective
OMPTaskyieldDirective
OMPTeamsDirective
ObjCAtCatchStmt
ObjCAtFinallyStmt
ObjCAtSynchronizedStmt
ObjCAtThrowStmt
ObjCAtTryStmt
ObjCAutoreleasePoolStmt
ObjCForCollectionStmt
ReturnStmt
SEHExceptStmt
SEHFinallyStmt
SEHLeaveStmt
SEHTryStmt
SwitchCase
CaseStmt
DefaultStmt
SwitchStmt
ValueStmt
AttributedStmt
Expr
AbstractConditionalOperator
BinaryConditionalOperator
ConditionalOperator
AddrLabelExpr
ArrayInitIndexExpr
ArrayInitLoopExpr
ArraySubscriptExpr
ArrayTypeTraitExpr
AsTypeExpr
AssumptionExpr
AtomicExpr
BinaryOperator
CompoundAssignOperator
BlockExpr
BoundsCheckExpr
CXXBindTemporaryExpr
CXXBoolLiteralExpr
CXXConstructExpr
CXXTemporaryObjectExpr
CXXDefaultArgExpr
CXXDefaultInitExpr
CXXDeleteExpr
CXXDependentScopeMemberExpr
CXXFoldExpr
CXXInheritedCtorInitExpr
CXXNewExpr
CXXNoexceptExpr
CXXNullPtrLiteralExpr
CXXPseudoDestructorExpr
CXXRewrittenBinaryOperator
CXXScalarValueInitExpr
CXXStdInitializerListExpr
CXXThisExpr
CXXThrowExpr
CXXTypeidExpr
CXXUnresolvedConstructExpr
CXXUuidofExpr
CallExpr
CUDAKernelCallExpr
CXXMemberCallExpr
CXXOperatorCallExpr
UserDefinedLiteral
CastExpr
ExplicitCastExpr
BuiltinBitCastExpr
CStyleCastExpr
CXXFunctionalCastExpr
CXXNamedCastExpr
CXXAddrspaceCastExpr
CXXConstCastExpr
CXXDynamicCastExpr
CXXReinterpretCastExpr
CXXStaticCastExpr
ObjCBridgedCastExpr
ImplicitCastExpr
CharacterLiteral
ChooseExpr
CompoundLiteralExpr
ConceptSpecializationExpr
ConvertVectorExpr
CoroutineSuspendExpr
CoawaitExpr
CoyieldExpr
DeclRefExpr
DependentCoawaitExpr
DependentScopeDeclRefExpr
DesignatedInitExpr
DesignatedInitUpdateExpr
ExpressionTraitExpr
ExtVectorElementExpr
FirebloomPointerPromotionExpr
FixedPointLiteral
FloatingLiteral
ForgePtrExpr
FullExpr
ConstantExpr
ExprWithCleanups
FunctionParmPackExpr
GNUNullExpr
GenericSelectionExpr
GetBoundExpr
ImaginaryLiteral
ImplicitValueInitExpr
InitListExpr
IntegerLiteral
LambdaExpr
MSPropertyRefExpr
MSPropertySubscriptExpr
MaterializeSequenceExpr
MaterializeTemporaryExpr
MatrixSubscriptExpr
MemberExpr
NoInitExpr
OMPArraySectionExpr
OMPArrayShapingExpr
OMPIteratorExpr
ObjCAvailabilityCheckExpr
ObjCBoolLiteralExpr
ObjCEncodeExpr
ObjCIndirectCopyRestoreExpr
ObjCIsaExpr
ObjCIvarRefExpr
ObjCMessageExpr
ObjCObjectLiteral
ObjCArrayLiteral
ObjCBoxedExpr
ObjCDictionaryLiteral
ObjCStringLiteral
ObjCPropertyRefExpr
ObjCProtocolExpr
ObjCSelectorExpr
ObjCSubscriptRefExpr
OffsetOfExpr
OpaqueValueExpr
OverloadExpr
UnresolvedLookupExpr
UnresolvedMemberExpr
PackExpansionExpr
ParenExpr
ParenListExpr
PredefinedExpr
PseudoObjectExpr
RecoveryExpr
RequiresExpr
SYCLUniqueStableNameExpr
ShuffleVectorExpr
SizeOfPackExpr
SourceLocExpr
StmtExpr
StringLiteral
SubstNonTypeTemplateParmExpr
SubstNonTypeTemplateParmPackExpr
TerminatedByFromIndexableExpr
TerminatedByToIndexableExpr
TypeTraitExpr
TypoExpr
UnaryExprOrTypeTraitExpr
UnaryOperator
VAArgExpr
LabelStmt
WhileStmt
Type
AdjustedType
DecayedType
ArrayType
ConstantArrayType
DependentSizedArrayType
IncompleteArrayType
VariableArrayType
AtomicType
AttributedType
BlockPointerType
BuiltinType
ComplexType
DecltypeType
DeducedType
AutoType
DeducedTemplateSpecializationType
DependentAddressSpaceType
DependentExtIntType
DependentNameType
DependentSizedExtVectorType
DependentTemplateSpecializationType
DependentVectorType
DynamicBoundPointerType
DynamicCountPointerType
DynamicRangePointerType
ElaboratedType
ExtIntType
FunctionType
FunctionNoProtoType
FunctionProtoType
InjectedClassNameType
MacroQualifiedType
MatrixType
ConstantMatrixType
DependentSizedMatrixType
MemberPointerType
ObjCObjectPointerType
ObjCObjectType
ObjCInterfaceType
ObjCTypeParamType
PackExpansionType
ParenType
PipeType
PointerType
ReferenceType
LValueReferenceType
RValueReferenceType
SubstTemplateTypeParmPackType
SubstTemplateTypeParmType
TagType
EnumType
RecordType
TemplateSpecializationType
TemplateTypeParmType
TypeOfExprType
TypeOfType
TypedefType
UnaryTransformType
UnresolvedUsingType
ValueTerminatedType
VectorType
ExtVectorType
OMPClause
OMPAcqRelClause
OMPAcquireClause
OMPAffinityClause
OMPAlignedClause
OMPAllocateClause
OMPAllocatorClause
OMPAtomicDefaultMemOrderClause
OMPCaptureClause
OMPCollapseClause
OMPCopyprivateClause
OMPCopyinClause
OMPDefaultClause
OMPDefaultmapClause
OMPDependClause
OMPDepobjClause
OMPDestroyClause
OMPDetachClause
OMPDeviceClause
OMPDistScheduleClause
OMPDynamicAllocatorsClause
OMPExclusiveClause
OMPFilterClause
OMPFinalClause
OMPFirstprivateClause
OMPFlushClause
OMPFromClause
OMPFullClause
OMPGrainsizeClause
OMPHintClause
OMPIfClause
OMPInReductionClause
OMPInclusiveClause
OMPInitClause
OMPIsDevicePtrClause
OMPLastprivateClause
OMPLinearClause
OMPMapClause
OMPMergeableClause
OMPNogroupClause
OMPNowaitClause
OMPNocontextClause
OMPNontemporalClause
OMPNovariantsClause
OMPNumTasksClause
OMPNumTeamsClause
OMPNumThreadsClause
OMPOrderClause
OMPOrderedClause
OMPPartialClause
OMPPriorityClause
OMPPrivateClause
OMPProcBindClause
OMPReadClause
OMPReductionClause
OMPRelaxedClause
OMPReleaseClause
OMPReverseOffloadClause
OMPSafelenClause
OMPScheduleClause
OMPSeqCstClause
OMPSharedClause
OMPSIMDClause
OMPSimdlenClause
OMPSizesClause
OMPTaskReductionClause
OMPThreadLimitClause
OMPThreadsClause
OMPToClause
OMPUnifiedAddressClause
OMPUnifiedSharedMemoryClause
OMPUntiedClause
OMPUpdateClause
OMPUseClause
OMPUseDeviceAddrClause
OMPUseDevicePtrClause
OMPUsesAllocatorsClause
OMPWriteClause
Attr
AddressSpaceAttr
ArmMveStrictPolymorphismAttr
CmseNSCallAttr
NoDerefAttr
ObjCGCAttr
ObjCInertUnsafeUnretainedAttr
ObjCKindOfAttr
OpenCLConstantAddressSpaceAttr
OpenCLGenericAddressSpaceAttr
OpenCLGlobalAddressSpaceAttr
OpenCLGlobalDeviceAddressSpaceAttr
OpenCLGlobalHostAddressSpaceAttr
OpenCLLocalAddressSpaceAttr
OpenCLPrivateAddressSpaceAttr
PointerAuthAttr
Ptr32Attr
Ptr64Attr
PtrAutoAttrAttr
PtrAutoNullTerminatedAttrAttr
SPtrAttr
TypeNonNullAttr
TypeNullUnspecifiedAttr
TypeNullableAttr
TypeNullableResultAttr
UPtrAttr
XnuUsageSemanticsAttr
FallThroughAttr
LikelyAttr
MustTailAttr
OpenCLUnrollHintAttr
SuppressAttr
UnlikelyAttr
AnalyzerSuppressAttr
NoMergeAttr
AArch64VectorPcsAttr
AcquireHandleAttr
AnyX86NoCfCheckAttr
CDeclAttr
FastCallAttr
IntelOclBiccAttr
LifetimeBoundAttr
MSABIAttr
NSReturnsRetainedAttr
ObjCOwnershipAttr
PascalAttr
PcsAttr
PreserveAllAttr
PreserveMostAttr
RegCallAttr
StdCallAttr
SwiftAsyncCallAttr
SwiftCallAttr
SysVABIAttr
ThisCallAttr
VectorCallAttr
SwiftAsyncContextAttr
SwiftContextAttr
SwiftErrorResultAttr
SwiftIndirectResultAttr
AnnotateAttr
CFConsumedAttr
CarriesDependencyAttr
NSConsumedAttr
NonNullAttr
OSConsumedAttr
PassObjectSizeAttr
ReleaseHandleAttr
UseHandleAttr
AMDGPUFlatWorkGroupSizeAttr
AMDGPUNumSGPRAttr
AMDGPUNumVGPRAttr
AMDGPUWavesPerEUAttr
ARMInterruptAttr
AVRInterruptAttr
AVRSignalAttr
AcquireCapabilityAttr
AcquiredAfterAttr
AcquiredBeforeAttr
AlignMac68kAttr
AlignNaturalAttr
AlignedAttr
AllocAlignAttr
AllocSizeAttr
AlwaysDestroyAttr
AlwaysInlineAttr
AnalyzerNoReturnAttr
AnyX86InterruptAttr
AnyX86NoCallerSavedRegistersAttr
ArcWeakrefUnavailableAttr
ArgumentWithTypeTagAttr
ArmBuiltinAliasAttr
ArtificialAttr
AsmLabelAttr
AssertCapabilityAttr
AssertExclusiveLockAttr
AssertSharedLockAttr
AssumeAlignedAttr
AssumptionAttr
AvailabilityAttr
BPFPreserveAccessIndexAttr
BTFDeclTagAttr
BlocksAttr
BuiltinAttr
C11NoReturnAttr
CFAuditedTransferAttr
CFGuardAttr
CFICanonicalJumpTableAttr
CFReturnsNotRetainedAttr
CFReturnsRetainedAttr
CFUnknownTransferAttr
CPUDispatchAttr
CPUSpecificAttr
CUDAConstantAttr
CUDADeviceAttr
CUDADeviceBuiltinSurfaceTypeAttr
CUDADeviceBuiltinTextureTypeAttr
CUDAGlobalAttr
CUDAHostAttr
CUDAInvalidTargetAttr
CUDALaunchBoundsAttr
CUDASharedAttr
CXX11NoReturnAttr
CallableWhenAttr
CallbackAttr
CapabilityAttr
CapturedRecordAttr
CleanupAttr
CmseNSEntryAttr
CodeSegAttr
ColdAttr
CommonAttr
ConstAttr
ConstInitAttr
ConstructorAttr
ConsumableAttr
ConsumableAutoCastAttr
ConsumableSetOnReadAttr
ConvergentAttr
DLLExportAttr
DLLExportStaticLocalAttr
DLLImportAttr
DLLImportStaticLocalAttr
DependerDeclsAttr
DeprecatedAttr
DestructorAttr
DiagnoseIfAttr
DisableSanitizerInstrumentationAttr
DisableTailCallsAttr
EmptyBasesAttr
EnableIfAttr
EnforceTCBAttr
EnforceTCBLeafAttr
EnumExtensibilityAttr
ErrorAttr
ExcludeFromExplicitInstantiationAttr
ExclusiveTrylockFunctionAttr
ExternalSourceSymbolAttr
FinalAttr
FlagEnumAttr
FlattenAttr
FormatAttr
FormatArgAttr
GNUInlineAttr
GuardedByAttr
GuardedVarAttr
HIPManagedAttr
HotAttr
IBActionAttr
IBOutletAttr
IBOutletCollectionAttr
InitPriorityAttr
InternalLinkageAttr
LTOVisibilityPublicAttr
LayoutVersionAttr
LeafAttr
LockReturnedAttr
LocksExcludedAttr
M68kInterruptAttr
MIGServerRoutineAttr
MSAllocatorAttr
MSInheritanceAttr
MSNoVTableAttr
MSP430InterruptAttr
MSStructAttr
MSVtorDispAttr
MaxFieldAlignmentAttr
MayAliasAttr
MicroMipsAttr
MinSizeAttr
MinVectorWidthAttr
Mips16Attr
MipsInterruptAttr
MipsLongCallAttr
MipsShortCallAttr
NSConsumesSelfAttr
NSErrorDomainAttr
NSReturnsAutoreleasedAttr
NSReturnsNotRetainedAttr
NakedAttr
NoAliasAttr
NoCommonAttr
NoDebugAttr
NoDestroyAttr
NoDuplicateAttr
NoInlineAttr
NoInstrumentFunctionAttr
NoMicroMipsAttr
NoMips16Attr
NoProfileFunctionAttr
NoReturnAttr
NoSanitizeAttr
NoSpeculativeLoadHardeningAttr
NoSplitStackAttr
NoStackProtectorAttr
NoThreadSafetyAnalysisAttr
NoThrowAttr
NoUniqueAddressAttr
NotTailCalledAttr
OMPAllocateDeclAttr
OMPCaptureNoInitAttr
OMPDeclareTargetDeclAttr
OMPDeclareVariantAttr
OMPThreadPrivateDeclAttr
OSConsumesThisAttr
OSReturnsNotRetainedAttr
OSReturnsRetainedAttr
OSReturnsRetainedOnNonZeroAttr
OSReturnsRetainedOnZeroAttr
ObjCBridgeAttr
ObjCBridgeMutableAttr
ObjCBridgeRelatedAttr
ObjCCompleteDefinitionAttr
ObjCExceptionAttr
ObjCExplicitProtocolImplAttr
ObjCExternallyRetainedAttr
ObjCIndependentClassAttr
ObjCMethodFamilyAttr
ObjCNSObjectAttr
ObjCPreciseLifetimeAttr
ObjCRequiresPropertyDefsAttr
ObjCRequiresSuperAttr
ObjCReturnsInnerPointerAttr
ObjCRootClassAttr
ObjCSubclassingRestrictedAttr
ObjCSuppressDirectPropertyAttr
OpenCLIntelReqdSubGroupSizeAttr
OpenCLKernelAttr
OptimizeNoneAttr
OverrideAttr
OwnerAttr
OwnershipAttr
PackedAttr
ParamTypestateAttr
PatchableFunctionEntryAttr
PointerAttr
PointerAuthStructAttr
PragmaClangBSSSectionAttr
PragmaClangDataSectionAttr
PragmaClangRelroSectionAttr
PragmaClangRodataSectionAttr
PragmaClangTextSectionAttr
PreferredNameAttr
PtGuardedByAttr
PtGuardedVarAttr
PureAttr
RISCVInterruptAttr
ReinitializesAttr
ReleaseCapabilityAttr
ReqdWorkGroupSizeAttr
RequiresCapabilityAttr
RestrictAttr
RetainAttr
ReturnTypestateAttr
ReturnsNonNullAttr
ReturnsTwiceAttr
SYCLKernelAttr
ScopedLockableAttr
SectionAttr
SelectAnyAttr
SentinelAttr
SetTypestateAttr
SharedTrylockFunctionAttr
SpeculativeLoadHardeningAttr
StandaloneDebugAttr
StrictFPAttr
SwiftAsyncAttr
SwiftAsyncErrorAttr
SwiftAsyncNameAttr
SwiftAttrAttr
SwiftBridgeAttr
SwiftBridgedTypedefAttr
SwiftErrorAttr
SwiftImportAsNonGenericAttr
SwiftImportPropertyAsAccessorsAttr
SwiftNameAttr
SwiftNewTypeAttr
SwiftPrivateAttr
SymbolMetadataFootnoteAttr
TLSModelAttr
TargetAttr
TestTypestateAttr
TransparentUnionAttr
TrivialABIAttr
TryAcquireCapabilityAttr
TypeTagForDatatypeAttr
TypeVisibilityAttr
TypedMemoryAttr
UnavailableAttr
UninitializedAttr
UnusedAttr
UsedAttr
UsingIfExistsAttr
UuidAttr
VTablePointerAuthenticationAttr
VecReturnAttr
VecTypeHintAttr
VisibilityAttr
WarnUnusedAttr
WarnUnusedResultAttr
WeakAttr
WeakImportAttr
WeakRefAttr
WebAssemblyExportNameAttr
WebAssemblyImportModuleAttr
WebAssemblyImportNameAttr
WorkGroupSizeHintAttr
X86ForceAlignArgPointerAttr
XRayInstrumentAttr
XRayLogArgsAttr
AArch64FarAddressSpaceAttr
AbiTagAttr
AliasAttr
AlignValueAttr
BuiltinAliasAttr
CalledOnceAttr
IFuncAttr
InitSegAttr
LoaderUninitializedAttr
LoopHintAttr
ModeAttr
NoBuiltinAttr
NoEscapeAttr
OMPCaptureKindAttr
OMPDeclareSimdDeclAttr
OMPReferencedVarAttr
ObjCBoxableAttr
ObjCClassStubAttr
ObjCDesignatedInitializerAttr
ObjCDirectAttr
ObjCDirectMembersAttr
ObjCNonLazyClassAttr
ObjCNonRuntimeProtocolAttr
ObjCRuntimeNameAttr
ObjCRuntimeVisibleAttr
ObjCSuppressDirectAttr
OpenCLAccessAttr
OverloadableAttr
RenderScriptKernelAttr
SwiftObjCMembersAttr
SwiftVersionedAttr
SwiftVersionedRemovalAttr
ThreadAttr
, scalable
#pragma nounroll
#pragma unroll
#pragma nounroll_and_jam
#pragma unroll_and_jam
 simdlen(
 uniform
 aligned(
 linear(
 device_type(
 match(
 adjust_args(nothing:
 adjust_args(need_device_ptr:
 append_args(
 __attribute__((aarch64_far_address_space
 [[clang::aarch64_far_address_space
 __attribute__((aarch64_vector_pcs
 [[clang::aarch64_vector_pcs
 __attribute__((amdgpu_flat_work_group_size
 [[clang::amdgpu_flat_work_group_size
 __attribute__((amdgpu_num_sgpr
 [[clang::amdgpu_num_sgpr
 __attribute__((amdgpu_num_vgpr
 [[clang::amdgpu_num_vgpr
 __attribute__((amdgpu_waves_per_eu
 [[clang::amdgpu_waves_per_eu
ABORT
UNDEF
 __attribute__((interrupt
 [[gnu::interrupt
 __attribute__((signal
 [[gnu::signal
 __attribute__((abi_tag
 [[gnu::abi_tag
 __attribute__((acquire_capability
 [[clang::acquire_capability
 __attribute__((acquire_shared_capability
 [[clang::acquire_shared_capability
 __attribute__((exclusive_lock_function
 __attribute__((shared_lock_function
acquire_capability
acquire_shared_capability
exclusive_lock_function
shared_lock_function
 __attribute__((acquire_handle
 [[clang::acquire_handle
 __attribute__((acquired_after
 __attribute__((acquired_before
 __attribute__((address_space
 [[clang::address_space
 __attribute__((alias
 [[gnu::alias
(No spelling)
 __attribute__((align_value
 __attribute__((aligned
 [[gnu::aligned
 __declspec(align
 alignas
 _Alignas
aligned
align
alignas
_Alignas
 __attribute__((alloc_align
 [[gnu::alloc_align
 __attribute__((alloc_size
 [[gnu::alloc_size
 __attribute__((always_destroy
 [[clang::always_destroy
 __attribute__((always_inline
 [[gnu::always_inline
 __forceinline
always_inline
__forceinline
 __attribute__((analyzer_noreturn
 __attribute__((analyzer_suppress
 [[clang::analyzer_suppress
 __attribute__((annotate
 [[clang::annotate
 __attribute__((no_caller_saved_registers
 [[gnu::no_caller_saved_registers
 __attribute__((nocf_check
 [[gnu::nocf_check
 __attribute__((objc_arc_weak_reference_unavailable
 [[clang::objc_arc_weak_reference_unavailable
 __attribute__((argument_with_type_tag
 [[clang::argument_with_type_tag
 __attribute__((pointer_with_type_tag
 [[clang::pointer_with_type_tag
argument_with_type_tag
pointer_with_type_tag
 __attribute__((__clang_arm_builtin_alias
 [[clang::__clang_arm_builtin_alias
 __attribute__((__clang_arm_mve_strict_polymorphism
 [[clang::__clang_arm_mve_strict_polymorphism
 __attribute__((artificial
 [[gnu::artificial
 asm
 __asm__
__asm__
 __attribute__((assert_capability
 [[clang::assert_capability
 __attribute__((assert_shared_capability
 [[clang::assert_shared_capability
assert_capability
assert_shared_capability
 __attribute__((assert_exclusive_lock
 __attribute__((assert_shared_lock
 __attribute__((assume_aligned
 [[gnu::assume_aligned
 __attribute__((assume
 [[clang::assume
 __attribute__((availability
, strict
, introduced=
, deprecated=
, obsoleted=
, unavailable
 [[clang::availability
introduced=
deprecated=
obsoleted=
 __attribute__((preserve_access_index
 [[clang::preserve_access_index
 __attribute__((btf_decl_tag
 [[clang::btf_decl_tag
byref
 __attribute__((blocks
 [[clang::blocks
 [[clang::builtin_alias
 __attribute__((clang_builtin_alias
builtin_alias
clang_builtin_alias
 _Noreturn
 __attribute__((cdecl
 [[gnu::cdecl
 __cdecl
 _cdecl
 __attribute__((cf_audited_transfer
 [[clang::cf_audited_transfer
 __attribute__((cf_consumed
 [[clang::cf_consumed
nocf
 __declspec(guard
 __attribute__((cfi_canonical_jump_table
 [[clang::cfi_canonical_jump_table
 __attribute__((cf_returns_not_retained
 [[clang::cf_returns_not_retained
 __attribute__((cf_returns_retained
 [[clang::cf_returns_retained
 __attribute__((cf_unknown_transfer
 [[clang::cf_unknown_transfer
 __attribute__((cpu_dispatch
 [[clang::cpu_dispatch
 __declspec(cpu_dispatch
 __attribute__((cpu_specific
 [[clang::cpu_specific
 __declspec(cpu_specific
 __attribute__((constant
 __declspec(__constant__
constant
 __attribute__((device
 __declspec(__device__
 __attribute__((device_builtin_surface_type
 __declspec(__device_builtin_surface_type__
 __attribute__((device_builtin_texture_type
 __declspec(__device_builtin_texture_type__
 __attribute__((global
 __declspec(__global__
global
 __attribute__((host
 __declspec(__host__
host
 __attribute__((launch_bounds
 __declspec(__launch_bounds__
 __attribute__((shared
 __declspec(__shared__
 [[noreturn
unknown
consumed
unconsumed
 __attribute__((callable_when
 [[clang::callable_when
 __attribute__((callback
 [[clang::callback
 __attribute__((called_once
 [[clang::called_once
 __attribute__((capability
 [[clang::capability
 __attribute__((shared_capability
 [[clang::shared_capability
capability
shared_capability
 __attribute__((carries_dependency
 [[carries_dependency
 __attribute__((cleanup
 [[gnu::cleanup
 __attribute__((cmse_nonsecure_call
 __attribute__((cmse_nonsecure_entry
 __declspec(code_seg
 __attribute__((cold
 [[gnu::cold
 __attribute__((common
 [[gnu::common
 __attribute__((const
 [[gnu::const
 __attribute__((__const
 [[gnu::__const
 constinit
 __attribute__((require_constant_initialization
 [[clang::require_constant_initialization
constinit
require_constant_initialization
 __attribute__((constructor
 [[gnu::constructor
 __attribute__((consumable
 [[clang::consumable
 __attribute__((consumable_auto_cast_state
 [[clang::consumable_auto_cast_state
 __attribute__((consumable_set_state_on_read
 [[clang::consumable_set_state_on_read
 __attribute__((convergent
 [[clang::convergent
 __declspec(dllexport
 __attribute__((dllexport
 [[gnu::dllexport
 __declspec(dllimport
 __attribute__((dllimport
 [[gnu::dllimport
 __attribute__((deprecated
 [[gnu::deprecated
 __declspec(deprecated
 [[deprecated
 __attribute__((destructor
 [[gnu::destructor
error
warning
 __attribute__((diagnose_if
 __attribute__((disable_sanitizer_instrumentation
 [[clang::disable_sanitizer_instrumentation
 __attribute__((disable_tail_calls
 [[clang::disable_tail_calls
 __declspec(empty_bases
 __attribute__((enable_if
 __attribute__((enforce_tcb
 [[clang::enforce_tcb
 __attribute__((enforce_tcb_leaf
 [[clang::enforce_tcb_leaf
closed
open
 __attribute__((enum_extensibility
 [[clang::enum_extensibility
 __attribute__((error
 [[gnu::error
 __attribute__((warning
 [[gnu::warning
 __attribute__((exclude_from_explicit_instantiation
 [[clang::exclude_from_explicit_instantiation
 __attribute__((exclusive_trylock_function
 __attribute__((external_source_symbol
 [[clang::external_source_symbol
 [[fallthrough
 [[clang::fallthrough
 __attribute__((fallthrough
 [[gnu::fallthrough
 __attribute__((fastcall
 [[gnu::fastcall
 __fastcall
 _fastcall
final
sealed
 __attribute__((flag_enum
 [[clang::flag_enum
 __attribute__((flatten
 [[gnu::flatten
 __attribute__((format
 [[gnu::format
 __attribute__((format_arg
 [[gnu::format_arg
 __attribute__((gnu_inline
 [[gnu::gnu_inline
 __attribute__((guarded_by
 __attribute__((guarded_var
 [[clang::guarded_var
 __attribute__((managed
 __declspec(__managed__
 __attribute__((hot
 [[gnu::hot
 __attribute__((ibaction
 [[clang::ibaction
 __attribute__((iboutlet
 [[clang::iboutlet
 __attribute__((iboutletcollection
 [[clang::iboutletcollection
 __attribute__((ifunc
 [[gnu::ifunc
 __attribute__((init_priority
 [[gnu::init_priority
#pragma init_seg
init_seg
 __attribute__((intel_ocl_bicc
 [[clang::intel_ocl_bicc
 __attribute__((internal_linkage
 [[clang::internal_linkage
 __attribute__((lto_visibility_public
 [[clang::lto_visibility_public
 __declspec(layout_version
 __attribute__((leaf
 [[gnu::leaf
 __attribute__((lifetimebound
 [[clang::lifetimebound
 [[likely
 [[clang::likely
 __attribute__((loader_uninitialized
 [[clang::loader_uninitialized
 __attribute__((lock_returned
 __attribute__((locks_excluded
vectorize
vectorize_width
interleave
interleave_count
unroll
unroll_count
unroll_and_jam
unroll_and_jam_count
pipeline
pipeline_initiation_interval
distribute
vectorize_predicate
#pragma clang loop
loop
nounroll
nounroll_and_jam
 __attribute__((mig_server_routine
 [[clang::mig_server_routine
 __attribute__((ms_abi
 [[gnu::ms_abi
 __declspec(allocator
 __single_inheritance
 __multiple_inheritance
 __virtual_inheritance
 __unspecified_inheritance
__single_inheritance
__multiple_inheritance
__virtual_inheritance
__unspecified_inheritance
 __declspec(novtable
 __attribute__((ms_struct
 [[gnu::ms_struct
 __attribute__((may_alias
 [[gnu::may_alias
 __attribute__((micromips
 [[gnu::micromips
 __attribute__((minsize
 [[clang::minsize
 __attribute__((min_vector_width
 [[clang::min_vector_width
 __attribute__((mips16
 [[gnu::mips16
vector=sw0
vector=sw1
vector=hw0
vector=hw1
vector=hw2
vector=hw3
vector=hw4
vector=hw5
 __attribute__((long_call
 [[gnu::long_call
 __attribute__((far
 [[gnu::far
long_call
 __attribute__((short_call
 [[gnu::short_call
 __attribute__((near
 [[gnu::near
short_call
near
 __attribute__((mode
 [[gnu::mode
 __attribute__((musttail
 [[clang::musttail
 __attribute__((ns_consumed
 [[clang::ns_consumed
 __attribute__((ns_consumes_self
 [[clang::ns_consumes_self
 __attribute__((ns_error_domain
 __attribute__((ns_returns_autoreleased
 [[clang::ns_returns_autoreleased
 __attribute__((ns_returns_not_retained
 [[clang::ns_returns_not_retained
 __attribute__((ns_returns_retained
 [[clang::ns_returns_retained
 __attribute__((naked
 [[gnu::naked
 __declspec(naked
 __declspec(noalias
 __attribute__((no_builtin
 [[clang::no_builtin
no_builtin
 __attribute__((nocommon
 [[gnu::nocommon
 __attribute__((nodebug
 [[gnu::nodebug
 __attribute__((noderef
 [[clang::noderef
 __attribute__((no_destroy
 [[clang::no_destroy
 __attribute__((noduplicate
 [[clang::noduplicate
 __attribute__((noescape
 [[clang::noescape
 __attribute__((noinline
 [[gnu::noinline
 __declspec(noinline
 __attribute__((no_instrument_function
 [[gnu::no_instrument_function
 __attribute__((nomerge
 [[clang::nomerge
nomerge
 __attribute__((nomicromips
 [[gnu::nomicromips
 __attribute__((nomips16
 [[gnu::nomips16
 __attribute__((no_profile_instrument_function
 [[gnu::no_profile_instrument_function
 __attribute__((noreturn
 [[gnu::noreturn
 __declspec(noreturn
 __attribute__((no_sanitize
 [[clang::no_sanitize
 __attribute__((no_speculative_load_hardening
 [[clang::no_speculative_load_hardening
 __attribute__((no_split_stack
 [[gnu::no_split_stack
 __attribute__((no_stack_protector
 [[clang::no_stack_protector
 __attribute__((no_thread_safety_analysis
 [[clang::no_thread_safety_analysis
 __attribute__((nothrow
 [[gnu::nothrow
 __declspec(nothrow
 [[no_unique_address
 __attribute__((nonnull
 [[gnu::nonnull
 __attribute__((not_tail_called
 [[clang::not_tail_called
omp_null_allocator
omp_default_mem_alloc
omp_large_cap_mem_alloc
omp_const_mem_alloc
omp_high_bw_mem_alloc
omp_low_lat_mem_alloc
omp_cgroup_mem_alloc
omp_pteam_mem_alloc
omp_thread_mem_alloc
inbranch
notinbranch
#pragma omp declare simd
link
nohost
#pragma omp declare target
target,targetsync
#pragma omp declare variant
declare variant
 __attribute__((os_consumed
 [[clang::os_consumed
 __attribute__((os_consumes_this
 [[clang::os_consumes_this
 __attribute__((os_returns_not_retained
 [[clang::os_returns_not_retained
 __attribute__((os_returns_retained
 [[clang::os_returns_retained
 __attribute__((os_returns_retained_on_non_zero
 [[clang::os_returns_retained_on_non_zero
 __attribute__((os_returns_retained_on_zero
 [[clang::os_returns_retained_on_zero
 __attribute__((objc_boxable
 [[clang::objc_boxable
 __attribute__((objc_bridge
 [[clang::objc_bridge
 __attribute__((objc_bridge_mutable
 [[clang::objc_bridge_mutable
 __attribute__((objc_bridge_related
 [[clang::objc_bridge_related
 __attribute__((objc_class_stub
 [[clang::objc_class_stub
 __attribute__((objc_complete_definition
 __attribute__((objc_designated_initializer
 [[clang::objc_designated_initializer
 __attribute__((objc_direct
 [[clang::objc_direct
 __attribute__((objc_direct_members
 [[clang::objc_direct_members
 __attribute__((objc_exception
 [[clang::objc_exception
 __attribute__((objc_protocol_requires_explicit_implementation
 [[clang::objc_protocol_requires_explicit_implementation
 __attribute__((objc_externally_retained
 [[clang::objc_externally_retained
 __attribute__((objc_gc
 [[clang::objc_gc
 __attribute__((objc_independent_class
 [[clang::objc_independent_class
 __unsafe_unretained
 __kindof
none
alloc
copy
init
mutableCopy
 __attribute__((objc_method_family
 [[clang::objc_method_family
 __attribute__((NSObject
 [[clang::NSObject
 __attribute__((objc_nonlazy_class
 [[clang::objc_nonlazy_class
 __attribute__((objc_non_runtime_protocol
 [[clang::objc_non_runtime_protocol
 __attribute__((objc_ownership
 [[clang::objc_ownership
 __attribute__((objc_precise_lifetime
 [[clang::objc_precise_lifetime
 __attribute__((objc_requires_property_definitions
 [[clang::objc_requires_property_definitions
 __attribute__((objc_requires_super
 [[clang::objc_requires_super
 __attribute__((objc_returns_inner_pointer
 [[clang::objc_returns_inner_pointer
 __attribute__((objc_root_class
 [[clang::objc_root_class
 __attribute__((objc_runtime_name
 [[clang::objc_runtime_name
 __attribute__((objc_runtime_visible
 [[clang::objc_runtime_visible
 __attribute__((objc_subclassing_restricted
 [[clang::objc_subclassing_restricted
 __attribute__((objc_suppress_direct
 [[clang::objc_suppress_direct
 suppress_direct
 __read_only
 read_only
 __write_only
 write_only
 __read_write
 read_write
__read_only
read_only
__write_only
write_only
__read_write
read_write
 __constant
 constant
 __attribute__((opencl_constant
 [[clang::opencl_constant
__constant
opencl_constant
 __generic
 generic
 __attribute__((opencl_generic
 [[clang::opencl_generic
__generic
generic
opencl_generic
 __global
 global
 __attribute__((opencl_global
 [[clang::opencl_global
__global
opencl_global
 __attribute__((opencl_global_device
 [[clang::opencl_global_device
 __attribute__((opencl_global_host
 [[clang::opencl_global_host
 __attribute__((intel_reqd_sub_group_size
 __kernel
 kernel
 __local
 local
 __attribute__((opencl_local
 [[clang::opencl_local
__local
local
opencl_local
 __private
 private
 __attribute__((opencl_private
 [[clang::opencl_private
__private
private
opencl_private
 __attribute__((opencl_unroll_hint
 __attribute__((optnone
 [[clang::optnone
 __attribute__((overloadable
 [[clang::overloadable
 [[gsl::Owner
 __attribute__((ownership_holds
 [[clang::ownership_holds
 __attribute__((ownership_returns
 [[clang::ownership_returns
 __attribute__((ownership_takes
 [[clang::ownership_takes
ownership_holds
ownership_returns
ownership_takes
 __attribute__((packed
 [[gnu::packed
 __attribute__((param_typestate
 [[clang::param_typestate
 __attribute__((pascal
 [[clang::pascal
 __pascal
 _pascal
 __attribute__((pass_object_size
 [[clang::pass_object_size
 __attribute__((pass_dynamic_object_size
 [[clang::pass_dynamic_object_size
pass_object_size
pass_dynamic_object_size
 __attribute__((patchable_function_entry
 [[gnu::patchable_function_entry
aapcs
aapcs-vfp
 __attribute__((pcs
 [[gnu::pcs
 [[gsl::Pointer
 __ptrauth
 __ptrauth_restricted_intptr
__ptrauth
__ptrauth_restricted_intptr
 __attribute__((ptrauth_struct
 [[clang::ptrauth_struct
 __attribute__((preferred_name
 [[clang::preferred_name
 __attribute__((preserve_all
 [[clang::preserve_all
 __attribute__((preserve_most
 [[clang::preserve_most
 __attribute__((pt_guarded_by
 __attribute__((pt_guarded_var
 [[clang::pt_guarded_var
 __ptr32
 __ptr64
 __attribute__((pure
 [[gnu::pure
user
supervisor
machine
 __attribute__((regcall
 [[gnu::regcall
 __regcall
 __attribute__((reinitializes
 [[clang::reinitializes
 __attribute__((release_capability
 [[clang::release_capability
 __attribute__((release_shared_capability
 [[clang::release_shared_capability
 __attribute__((release_generic_capability
 [[clang::release_generic_capability
 __attribute__((unlock_function
 [[clang::unlock_function
release_capability
release_shared_capability
release_generic_capability
unlock_function
 __attribute__((release_handle
 [[clang::release_handle
 __attribute__((kernel
 __attribute__((reqd_work_group_size
 __attribute__((requires_capability
 [[clang::requires_capability
 __attribute__((exclusive_locks_required
 [[clang::exclusive_locks_required
 __attribute__((requires_shared_capability
 [[clang::requires_shared_capability
 __attribute__((shared_locks_required
 [[clang::shared_locks_required
requires_capability
exclusive_locks_required
requires_shared_capability
shared_locks_required
 __declspec(restrict
 __attribute__((malloc
 [[gnu::malloc
restrict
malloc
 __attribute__((retain
 [[gnu::retain
 __attribute__((return_typestate
 [[clang::return_typestate
 __attribute__((returns_nonnull
 [[gnu::returns_nonnull
 __attribute__((returns_twice
 [[gnu::returns_twice
 __sptr
 __attribute__((sycl_kernel
 [[clang::sycl_kernel
 __attribute__((scoped_lockable
 [[clang::scoped_lockable
 __attribute__((section
 [[gnu::section
 __declspec(allocate
section
allocate
 __declspec(selectany
 __attribute__((selectany
 [[gnu::selectany
 __attribute__((sentinel
 [[gnu::sentinel
 __attribute__((set_typestate
 [[clang::set_typestate
 __attribute__((shared_trylock_function
 __attribute__((speculative_load_hardening
 [[clang::speculative_load_hardening
 __attribute__((standalone_debug
 [[clang::standalone_debug
 __attribute__((stdcall
 [[gnu::stdcall
 __stdcall
 _stdcall
 [[gsl::suppress
swift_private
not_swift_private
 __attribute__((swift_async
 [[clang::swift_async
 __attribute__((swiftasynccall
 [[clang::swiftasynccall
 __attribute__((swift_async_context
 [[clang::swift_async_context
nonnull_error
zero_argument
nonzero_argument
 __attribute__((swift_async_error
 [[clang::swift_async_error
 __attribute__((swift_async_name
 __attribute__((swift_attr
 __attribute__((swift_bridge
 __attribute__((swift_bridged_typedef
 __attribute__((swiftcall
 [[clang::swiftcall
 __attribute__((swift_context
 [[clang::swift_context
null_result
zero_result
nonzero_result
 __attribute__((swift_error
 __attribute__((swift_error_result
 [[clang::swift_error_result
 __attribute__((swift_indirect_result
 [[clang::swift_indirect_result
 __attribute__((swift_name
struct
enum
 __attribute__((swift_newtype
 __attribute__((swift_wrapper
swift_newtype
swift_wrapper
 __attribute__((swift_objc_members
 __attribute__((swift_private
 __attribute__((symbol_metadata_footnote
 [[clang::symbol_metadata_footnote
 __attribute__((sysv_abi
 [[gnu::sysv_abi
 __attribute__((tls_model
 [[gnu::tls_model
 __attribute__((target
 [[gnu::target
 __attribute__((test_typestate
 [[clang::test_typestate
 __attribute__((thiscall
 [[gnu::thiscall
 __thiscall
 _thiscall
 __declspec(thread
 __attribute__((transparent_union
 [[gnu::transparent_union
 __attribute__((trivial_abi
 [[clang::trivial_abi
 __attribute__((try_acquire_capability
 [[clang::try_acquire_capability
 __attribute__((try_acquire_shared_capability
 [[clang::try_acquire_shared_capability
try_acquire_capability
try_acquire_shared_capability
 _Nonnull
 _Null_unspecified
 _Nullable
 _Nullable_result
 __attribute__((type_tag_for_datatype
 [[clang::type_tag_for_datatype
default
hidden
protected
 __attribute__((type_visibility
 [[clang::type_visibility
 __attribute__((typed_memory_operation
 [[clang::typed_memory_operation
 __uptr
 __attribute__((unavailable
 [[clang::unavailable
 __attribute__((uninitialized
 [[clang::uninitialized
 [[unlikely
 [[clang::unlikely
 [[maybe_unused
 __attribute__((unused
 [[gnu::unused
maybe_unused
unused
 __attribute__((use_handle
 [[clang::use_handle
 __attribute__((used
 [[gnu::used
 __attribute__((using_if_exists
 [[clang::using_if_exists
 __declspec(uuid
[uuid
default_key
no_authentication
process_dependent
process_independent
default_address_discrimination
no_address_discrimination
address_discrimination
default_extra_discrimination
no_extra_discrimination
type_discrimination
custom_discrimination
 __attribute__((ptrauth_vtable_pointer
 [[clang::ptrauth_vtable_pointer
 __attribute__((vecreturn
 [[clang::vecreturn
 __attribute__((vec_type_hint
 __attribute__((vectorcall
 [[clang::vectorcall
 __vectorcall
 _vectorcall
 __attribute__((visibility
 [[gnu::visibility
 __attribute__((warn_unused
 [[gnu::warn_unused
 [[nodiscard
 [[clang::warn_unused_result
 __attribute__((warn_unused_result
 [[gnu::warn_unused_result
nodiscard
warn_unused_result
 __attribute__((weak
 [[gnu::weak
 __attribute__((weak_import
 [[clang::weak_import
 __attribute__((weakref
 [[gnu::weakref
 __attribute__((export_name
 [[clang::export_name
 __attribute__((import_module
 [[clang::import_module
 __attribute__((import_name
 [[clang::import_name
 __attribute__((work_group_size_hint
 __attribute__((force_align_arg_pointer
 [[gnu::force_align_arg_pointer
 __attribute__((xray_always_instrument
 [[clang::xray_always_instrument
 __attribute__((xray_never_instrument
 [[clang::xray_never_instrument
xray_always_instrument
xray_never_instrument
 __attribute__((xray_log_args
 [[clang::xray_log_args
 __attribute__((xnu_usage_semantics
 [[clang::xnu_usage_semantics
interop(
NoCommentKind
BlockCommandComment
ParamCommandComment
TParamCommandComment
VerbatimBlockComment
VerbatimLineComment
ParagraphComment
FullComment
HTMLEndTagComment
HTMLStartTagComment
InlineCommandComment
TextComment
VerbatimBlockLineComment
[in]
[out]
[in,out]
Returns 
link
textblock
section
abstract
addtogroup
anchor
attention
author
authors
brief
callback
category
class
classdesign
coclass
code
endcode
const
constant
copyright
date
defgroup
dependency
deprecated
details
discussion
enddot
enum
exception
function
functiongroup
headerfile
helper
helperclass
helps
htmlonly
endhtmlonly
ingroup
instancesize
interface
invariant
latexonly
endlatexonly
/link
mainpage
manonly
endmanonly
method
methodgroup
endmsc
name
namespace
note
overload
ownership
paragraph
param
performance
post
property
protocol
related
relatedalso
relates
relatesalso
remark
remarks
result
return
returns
retval
rtfonly
endrtfonly
security
seealso
short
since
struct
subpage
subsection
subsubsection
superclass
template
templatefield
/textblock
throw
throws
todo
tparam
typedef
union
verbatim
endverbatim
version
warning
weakgroup
xmlonly
endxmlonly
tilde
\@&<
[[deprecated]]
__attribute__((deprecated))
anchor
partial_ordering
weak_ordering
strong_ordering
equal
equivalent
less
greater
unordered
CFStringCreateWithFormat
CFStringCreateWithFormatAndArguments
CFStringAppendFormat
CFStringAppendFormatAndArguments
(anonymous)
`anonymous namespace'
(anonymous namespace)
(anonymous 
auto
extern
__private_extern__
register
static
main
wmain
WinMain
wWinMain
DllMain
field-padding
<deduction guide for 
operator 
<using-directive>
AccessSpec
Block
Captured
ClassScopeFunctionSpecialization
Empty
Export
ExternCContext
FileScopeAsm
Friend
FriendTemplate
Import
LifetimeExtendedTemporary
LinkageSpec
Using
UsingEnum
Label
Namespace
NamespaceAlias
ObjCCompatibleAlias
ObjCCategory
ObjCCategoryImpl
ObjCImplementation
ObjCInterface
ObjCProtocol
ObjCMethod
ObjCProperty
BuiltinTemplate
Concept
ClassTemplate
FunctionTemplate
TypeAliasTemplate
VarTemplate
TemplateTemplateParm
Enum
Record
CXXRecord
ClassTemplateSpecialization
ClassTemplatePartialSpecialization
TemplateTypeParm
ObjCTypeParam
TypeAlias
Typedef
UnresolvedUsingTypename
UnresolvedUsingIfExists
UsingDirective
UsingPack
UsingShadow
ConstructorUsingShadow
Binding
Field
ObjCAtDefsField
ObjCIvar
Function
CXXDeductionGuide
CXXMethod
CXXConstructor
CXXConversion
CXXDestructor
MSProperty
NonTypeTemplateParm
Decomposition
ImplicitParam
OMPCapturedExpr
ParmVar
VarTemplateSpecialization
VarTemplatePartialSpecialization
EnumConstant
IndirectField
MSGuid
OMPDeclareMapper
OMPDeclareReduction
TemplateParamObject
UnresolvedUsingValue
OMPAllocate
OMPRequires
OMPThreadPrivate
ObjCPropertyImpl
PragmaComment
PragmaDetectMismatch
RequiresExprBody
StaticAssert
TranslationUnit
*** Decl Stats:
 decls total.
 AccessSpec decls, 
 each (
 Block decls, 
 Captured decls, 
 ClassScopeFunctionSpecialization decls, 
 Empty decls, 
 Export decls, 
 ExternCContext decls, 
 FileScopeAsm decls, 
 Friend decls, 
 FriendTemplate decls, 
 Import decls, 
 LifetimeExtendedTemporary decls, 
 LinkageSpec decls, 
 Using decls, 
 UsingEnum decls, 
 Label decls, 
 Namespace decls, 
 NamespaceAlias decls, 
 ObjCCompatibleAlias decls, 
 ObjCCategory decls, 
 ObjCCategoryImpl decls, 
 ObjCImplementation decls, 
 ObjCInterface decls, 
 ObjCProtocol decls, 
 ObjCMethod decls, 
 ObjCProperty decls, 
 BuiltinTemplate decls, 
 Concept decls, 
 ClassTemplate decls, 
 FunctionTemplate decls, 
 TypeAliasTemplate decls, 
 VarTemplate decls, 
 TemplateTemplateParm decls, 
 Enum decls, 
 Record decls, 
 CXXRecord decls, 
 ClassTemplateSpecialization decls, 
 ClassTemplatePartialSpecialization decls, 
 TemplateTypeParm decls, 
 ObjCTypeParam decls, 
 TypeAlias decls, 
 Typedef decls, 
 UnresolvedUsingTypename decls, 
 UnresolvedUsingIfExists decls, 
 UsingDirective decls, 
 UsingPack decls, 
 UsingShadow decls, 
 ConstructorUsingShadow decls, 
 Binding decls, 
 Field decls, 
 ObjCAtDefsField decls, 
 ObjCIvar decls, 
 Function decls, 
 CXXDeductionGuide decls, 
 CXXMethod decls, 
 CXXConstructor decls, 
 CXXConversion decls, 
 CXXDestructor decls, 
 MSProperty decls, 
 NonTypeTemplateParm decls, 
 Var decls, 
 Decomposition decls, 
 ImplicitParam decls, 
 OMPCapturedExpr decls, 
 ParmVar decls, 
 VarTemplateSpecialization decls, 
 VarTemplatePartialSpecialization decls, 
 EnumConstant decls, 
 IndirectField decls, 
 MSGuid decls, 
 OMPDeclareMapper decls, 
 OMPDeclareReduction decls, 
 TemplateParamObject decls, 
 UnresolvedUsingValue decls, 
 OMPAllocate decls, 
 OMPRequires decls, 
 OMPThreadPrivate decls, 
 ObjCPropertyImpl decls, 
 PragmaComment decls, 
 PragmaDetectMismatch decls, 
 RequiresExprBody decls, 
 StaticAssert decls, 
 TranslationUnit decls, 
not available on 
introduced in 
obsoleted in 
first deprecated in 
00000000-0000-0000-C000-000000000046
00020400-0000-0000-C000-000000000046
VideoFullscreenInterfaceAVKit
GUID{%08x-%04hx-%04hx-
%02hhx
__invoke
public
private
protected
self
_cmd
NSObject
#pragma omp end declare target
 ...
concept 
__asm (
friend 
@import 
extern "
using enum 
@compatibility_alias 
@interface 
<<error-type>>
__covariant 
__contravariant 
@implementation 
@class 
@protocol 
@required
@optional
getter = 
setter = 
__module_private__ 
 struct
virtual 
typedef 
using typename 
using namespace 
mutable 
extern 
__private_extern__ 
consteval 
 throw(
 noexcept
auto 
 requires 
 = 0
 = delete
 = default
__thread 
_Thread_local 
thread_local 
#pragma omp declare mapper (
#pragma omp declare reduction (
 initializer(
omp_priv(
omp_priv = 
#pragma omp allocate
#pragma omp requires 
#pragma omp threadprivate
@dynamic 
static_assert(
<template param 
__func__
__FUNCTION__
__FUNCDNAME__
L__FUNCTION__
__PRETTY_FUNCTION__
__FUNCSIG__
L__FUNCSIG__
_block_invoke
__cdecl 
__stdcall 
__fastcall 
__thiscall 
__vectorcall 
__regcall 
top level
'\\'
'\''
'\a'
'\b'
'\f'
'\n'
'\r'
'\t'
'\v'
0123456789ABCDEF
\U00
__real
__imag
__extension__
co_await
Dependent
BitCast
LValueBitCast
LValueToRValueBitCast
LValueToRValue
NoOp
BaseToDerived
DerivedToBase
UncheckedDerivedToBase
Dynamic
ToUnion
ArrayToPointerDecay
FunctionToPointerDecay
NullToPointer
NullToMemberPointer
BaseToDerivedMemberPointer
DerivedToBaseMemberPointer
MemberPointerToBoolean
ReinterpretMemberPointer
UserDefinedConversion
ConstructorConversion
IntegralToPointer
PointerToIntegral
PointerToBoolean
ToVoid
MatrixCast
VectorSplat
IntegralCast
IntegralToBoolean
IntegralToFloating
FloatingToFixedPoint
FixedPointToFloating
FixedPointCast
FixedPointToIntegral
IntegralToFixedPoint
FixedPointToBoolean
FloatingToIntegral
FloatingToBoolean
BooleanToSignedIntegral
FloatingCast
CPointerToObjCPointerCast
BlockPointerToObjCPointerCast
AnyPointerToBlockPointerCast
ObjCObjectLValueCast
FloatingRealToComplex
FloatingComplexToReal
FloatingComplexToBoolean
FloatingComplexCast
FloatingComplexToIntegralComplex
IntegralRealToComplex
IntegralComplexToReal
IntegralComplexToBoolean
IntegralComplexCast
IntegralComplexToFloatingComplex
ARCProduceObject
ARCConsumeObject
ARCReclaimReturnedObject
ARCExtendBlockObject
AtomicToNonAtomic
NonAtomicToAtomic
CopyAndAutoreleaseBlockObject
BuiltinFnToFnPtr
ZeroToOCLOpaqueType
AddressSpaceConversion
IntToOCLSampler
FirebloomPointerCast
__builtin_FILE
__builtin_FUNCTION
__builtin_LINE
__builtin_COLUMN
even
captures not currently allowed
deallocate
__builtin_is_constant_evaluated
std::is_constant_evaluated
<...>
static_cast
dynamic_cast
reinterpret_cast
const_cast
addrspace_cast
<invalid cast>
__bridge
__bridge_transfer
__bridge_retained
generation counter overflowed
size_t
ssize_t
intmax_t
uintmax_t
unimplemented feature
missing source location
Interpreter cannot return values
missing source expression
char_traits
basic_istream
basic_ostream
basic_iostream
U2ASI
CLglobal
CLdevice
CLhost
CLlocal
CLconstant
CLprivate
CLgeneric
SYglobal
SYdevice
SYhost
SYlocal
SYprivate
CUdevice
CUconstant
CUshared
ptr32_sptr
ptr32_uptr
ptr64
cannot yet mangle expression type %0
u8__uuidof
u8__uuidoft
u8__uuidofz
?: operator with omitted middle operand cannot be mangled
u11__alignof__
cannot yet mangle __builtin_ptrauth_type_discriminator expression
cannot yet mangle __builtin_xnu_type_signature expression
cannot yet mangle __builtin_xnu_type_summary expression
cannot yet mangle __builtin_tmo_type_get_metadata expression
cannot yet mangle vec_step expression
ixix
_SUBSTPACK_
v110_SUBSTPACK
LDnE
v18co_await
v18co_yield
u33__builtin_sycl_unique_stable_name
dtdefpT
12_GLOBAL__N_1
Li0E
decvP
plcvPcad
__device_stub__
__regcall3__
U25pass_dynamic_object_size
U17pass_object_size
cannot mangle fixed point literals yet
U7_Atomic
U13block_pointer
11objc_object
10objc_class
13objc_selector
ocl_image1d_ro
ocl_image1d_array_ro
ocl_image1d_buffer_ro
ocl_image2d_ro
ocl_image2d_array_ro
ocl_image2d_depth_ro
ocl_image2d_array_depth_ro
ocl_image2d_msaa_ro
ocl_image2d_array_msaa_ro
ocl_image2d_msaa_depth_ro
ocl_image2d_array_msaa_depth_ro
ocl_image3d_ro
ocl_image1d_wo
ocl_image1d_array_wo
ocl_image1d_buffer_wo
ocl_image2d_wo
ocl_image2d_array_wo
ocl_image2d_depth_wo
ocl_image2d_array_depth_wo
ocl_image2d_msaa_wo
ocl_image2d_array_msaa_wo
ocl_image2d_msaa_depth_wo
ocl_image2d_array_msaa_depth_wo
ocl_image3d_wo
ocl_image1d_rw
ocl_image1d_array_rw
ocl_image1d_buffer_rw
ocl_image2d_rw
ocl_image2d_array_rw
ocl_image2d_depth_rw
ocl_image2d_array_depth_rw
ocl_image2d_msaa_rw
ocl_image2d_array_msaa_rw
ocl_image2d_msaa_depth_rw
ocl_image2d_array_msaa_depth_rw
ocl_image3d_rw
11ocl_sampler
9ocl_event
12ocl_clkevent
9ocl_queue
13ocl_reserveid
ocl_intel_sub_group_avc_mce_payload_t
ocl_intel_sub_group_avc_ime_payload_t
ocl_intel_sub_group_avc_ref_payload_t
ocl_intel_sub_group_avc_sic_payload_t
ocl_intel_sub_group_avc_mce_result_t
ocl_intel_sub_group_avc_ime_result_t
ocl_intel_sub_group_avc_ref_result_t
ocl_intel_sub_group_avc_sic_result_t
ocl_intel_sub_group_avc_ime_result_single_reference_streamout_t
ocl_intel_sub_group_avc_ime_result_dual_reference_streamout_t
ocl_intel_sub_group_avc_ime_single_reference_streamin_t
ocl_intel_sub_group_avc_ime_dual_reference_streamin_t
svint8x2_t
svint16x2_t
svint32x2_t
svint64x2_t
svuint8x2_t
svuint16x2_t
svuint32x2_t
svuint64x2_t
svfloat16x2_t
svfloat32x2_t
svfloat64x2_t
svbfloat16x2_t
svint8x3_t
svint16x3_t
svint32x3_t
svint64x3_t
svuint8x3_t
svuint16x3_t
svuint32x3_t
svuint64x3_t
svfloat16x3_t
svfloat32x3_t
svfloat64x3_t
svbfloat16x3_t
svint8x4_t
svint16x4_t
svint32x4_t
svint64x4_t
svuint8x4_t
svuint16x4_t
svuint32x4_t
svuint64x4_t
svfloat16x4_t
svfloat32x4_t
svfloat64x4_t
svbfloat16x4_t
U7_ExtInt
cannot mangle this dependent neon vector type yet
cannot mangle this dependent fixed-length SVE vector type yet
U8__kindof
objcproto
8ocl_pipe
u6typeof
3eut
Poly8
Poly16
Poly64
Int8
Int16
Int32
Int64
Uint8
Uint16
Uint32
Uint64
Float16
Float32
Float64
Bfloat16
poly8_t
poly16_t
poly64_t
int8_t
uint8_t
int16_t
uint16_t
int32_t
uint32_t
int64_t
uint64_t
float64_t
float32_t
float16_t
bfloat16_t
__simd64_
__simd128_
__SVBfloat16_t
9__SVE_VLSI
Ua9enable_ifI
Mangling declaration
__vtptrauth
_ZGR
_ZTV
_ZTI
_ZTS
_ZGV
__cxx_global_var_init
__dtor_
__filt_
__fin_
_ZTT
_ZTC
_ZTH
_ZTW
__finalize_
AddressSpaceAttr
ArmMveStrictPolymorphismAttr
CmseNSCallAttr
NoDerefAttr
ObjCGCAttr
ObjCInertUnsafeUnretainedAttr
ObjCKindOfAttr
OpenCLConstantAddressSpaceAttr
OpenCLGenericAddressSpaceAttr
OpenCLGlobalAddressSpaceAttr
OpenCLGlobalDeviceAddressSpaceAttr
OpenCLGlobalHostAddressSpaceAttr
OpenCLLocalAddressSpaceAttr
OpenCLPrivateAddressSpaceAttr
PointerAuthAttr
Ptr32Attr
Ptr64Attr
PtrAutoAttrAttr
PtrAutoNullTerminatedAttrAttr
SPtrAttr
TypeNonNullAttr
TypeNullUnspecifiedAttr
TypeNullableAttr
TypeNullableResultAttr
UPtrAttr
XnuUsageSemanticsAttr
FallThroughAttr
LikelyAttr
MustTailAttr
OpenCLUnrollHintAttr
SuppressAttr
UnlikelyAttr
AnalyzerSuppressAttr
NoMergeAttr
AArch64VectorPcsAttr
AcquireHandleAttr
AnyX86NoCfCheckAttr
CDeclAttr
FastCallAttr
IntelOclBiccAttr
LifetimeBoundAttr
MSABIAttr
NSReturnsRetainedAttr
ObjCOwnershipAttr
PascalAttr
PcsAttr
PreserveAllAttr
PreserveMostAttr
RegCallAttr
StdCallAttr
SwiftAsyncCallAttr
SwiftCallAttr
SysVABIAttr
ThisCallAttr
VectorCallAttr
SwiftAsyncContextAttr
SwiftContextAttr
SwiftErrorResultAttr
SwiftIndirectResultAttr
AnnotateAttr
CFConsumedAttr
CarriesDependencyAttr
NSConsumedAttr
NonNullAttr
OSConsumedAttr
PassObjectSizeAttr
ReleaseHandleAttr
UseHandleAttr
AMDGPUFlatWorkGroupSizeAttr
AMDGPUNumSGPRAttr
AMDGPUNumVGPRAttr
AMDGPUWavesPerEUAttr
ARMInterruptAttr
AVRInterruptAttr
AVRSignalAttr
AcquireCapabilityAttr
AcquiredAfterAttr
AcquiredBeforeAttr
AlignMac68kAttr
AlignNaturalAttr
AlignedAttr
AllocAlignAttr
AllocSizeAttr
AlwaysDestroyAttr
AlwaysInlineAttr
AnalyzerNoReturnAttr
AnyX86InterruptAttr
AnyX86NoCallerSavedRegistersAttr
ArcWeakrefUnavailableAttr
ArgumentWithTypeTagAttr
ArmBuiltinAliasAttr
ArtificialAttr
AsmLabelAttr
AssertCapabilityAttr
AssertExclusiveLockAttr
AssertSharedLockAttr
AssumeAlignedAttr
AssumptionAttr
AvailabilityAttr
BPFPreserveAccessIndexAttr
BTFDeclTagAttr
BlocksAttr
BuiltinAttr
C11NoReturnAttr
CFAuditedTransferAttr
CFGuardAttr
CFICanonicalJumpTableAttr
CFReturnsNotRetainedAttr
CFReturnsRetainedAttr
CFUnknownTransferAttr
CPUDispatchAttr
CPUSpecificAttr
CUDAConstantAttr
CUDADeviceAttr
CUDADeviceBuiltinSurfaceTypeAttr
CUDADeviceBuiltinTextureTypeAttr
CUDAGlobalAttr
CUDAHostAttr
CUDAInvalidTargetAttr
CUDALaunchBoundsAttr
CUDASharedAttr
CXX11NoReturnAttr
CallableWhenAttr
CallbackAttr
CapabilityAttr
CapturedRecordAttr
CleanupAttr
CmseNSEntryAttr
CodeSegAttr
ColdAttr
CommonAttr
ConstAttr
ConstInitAttr
ConstructorAttr
ConsumableAttr
ConsumableAutoCastAttr
ConsumableSetOnReadAttr
ConvergentAttr
DLLExportAttr
DLLExportStaticLocalAttr
DLLImportAttr
DLLImportStaticLocalAttr
DependerDeclsAttr
DeprecatedAttr
DestructorAttr
DiagnoseIfAttr
DisableSanitizerInstrumentationAttr
DisableTailCallsAttr
EmptyBasesAttr
EnableIfAttr
EnforceTCBAttr
EnforceTCBLeafAttr
EnumExtensibilityAttr
ErrorAttr
ExcludeFromExplicitInstantiationAttr
ExclusiveTrylockFunctionAttr
ExternalSourceSymbolAttr
FinalAttr
FlagEnumAttr
FlattenAttr
FormatAttr
FormatArgAttr
GNUInlineAttr
GuardedByAttr
GuardedVarAttr
HIPManagedAttr
HotAttr
IBActionAttr
IBOutletAttr
IBOutletCollectionAttr
InitPriorityAttr
InternalLinkageAttr
LTOVisibilityPublicAttr
LayoutVersionAttr
LeafAttr
LockReturnedAttr
LocksExcludedAttr
M68kInterruptAttr
MIGServerRoutineAttr
MSAllocatorAttr
MSInheritanceAttr
MSNoVTableAttr
MSP430InterruptAttr
MSStructAttr
MSVtorDispAttr
MaxFieldAlignmentAttr
MayAliasAttr
MicroMipsAttr
MinSizeAttr
MinVectorWidthAttr
Mips16Attr
MipsInterruptAttr
MipsLongCallAttr
MipsShortCallAttr
NSConsumesSelfAttr
NSErrorDomainAttr
NSReturnsAutoreleasedAttr
NSReturnsNotRetainedAttr
NakedAttr
NoAliasAttr
NoCommonAttr
NoDebugAttr
NoDestroyAttr
NoDuplicateAttr
NoInlineAttr
NoInstrumentFunctionAttr
NoMicroMipsAttr
NoMips16Attr
NoProfileFunctionAttr
NoReturnAttr
NoSanitizeAttr
NoSpeculativeLoadHardeningAttr
NoSplitStackAttr
NoStackProtectorAttr
NoThreadSafetyAnalysisAttr
NoThrowAttr
NoUniqueAddressAttr
NotTailCalledAttr
OMPAllocateDeclAttr
OMPCaptureNoInitAttr
OMPDeclareTargetDeclAttr
OMPDeclareVariantAttr
OMPThreadPrivateDeclAttr
OSConsumesThisAttr
OSReturnsNotRetainedAttr
OSReturnsRetainedAttr
OSReturnsRetainedOnNonZeroAttr
OSReturnsRetainedOnZeroAttr
ObjCBridgeAttr
ObjCBridgeMutableAttr
ObjCBridgeRelatedAttr
ObjCCompleteDefinitionAttr
ObjCExceptionAttr
ObjCExplicitProtocolImplAttr
ObjCExternallyRetainedAttr
ObjCIndependentClassAttr
ObjCMethodFamilyAttr
ObjCNSObjectAttr
ObjCPreciseLifetimeAttr
ObjCRequiresPropertyDefsAttr
ObjCRequiresSuperAttr
ObjCReturnsInnerPointerAttr
ObjCRootClassAttr
ObjCSubclassingRestrictedAttr
ObjCSuppressDirectPropertyAttr
OpenCLIntelReqdSubGroupSizeAttr
OpenCLKernelAttr
OptimizeNoneAttr
OverrideAttr
OwnerAttr
OwnershipAttr
PackedAttr
ParamTypestateAttr
PatchableFunctionEntryAttr
PointerAttr
PointerAuthStructAttr
PragmaClangBSSSectionAttr
PragmaClangDataSectionAttr
PragmaClangRelroSectionAttr
PragmaClangRodataSectionAttr
PragmaClangTextSectionAttr
PreferredNameAttr
PtGuardedByAttr
PtGuardedVarAttr
PureAttr
RISCVInterruptAttr
ReinitializesAttr
ReleaseCapabilityAttr
ReqdWorkGroupSizeAttr
RequiresCapabilityAttr
RestrictAttr
RetainAttr
ReturnTypestateAttr
ReturnsNonNullAttr
ReturnsTwiceAttr
SYCLKernelAttr
ScopedLockableAttr
SectionAttr
SelectAnyAttr
SentinelAttr
SetTypestateAttr
SharedTrylockFunctionAttr
SpeculativeLoadHardeningAttr
StandaloneDebugAttr
StrictFPAttr
SwiftAsyncAttr
SwiftAsyncErrorAttr
SwiftAsyncNameAttr
SwiftAttrAttr
SwiftBridgeAttr
SwiftBridgedTypedefAttr
SwiftErrorAttr
SwiftImportAsNonGenericAttr
SwiftImportPropertyAsAccessorsAttr
SwiftNameAttr
SwiftNewTypeAttr
SwiftPrivateAttr
SymbolMetadataFootnoteAttr
TLSModelAttr
TargetAttr
TestTypestateAttr
TransparentUnionAttr
TrivialABIAttr
TryAcquireCapabilityAttr
TypeTagForDatatypeAttr
TypeVisibilityAttr
TypedMemoryAttr
UnavailableAttr
UninitializedAttr
UnusedAttr
UsedAttr
UsingIfExistsAttr
UuidAttr
VTablePointerAuthenticationAttr
VecReturnAttr
VecTypeHintAttr
VisibilityAttr
WarnUnusedAttr
WarnUnusedResultAttr
WeakAttr
WeakImportAttr
WeakRefAttr
WebAssemblyExportNameAttr
WebAssemblyImportModuleAttr
WebAssemblyImportNameAttr
WorkGroupSizeHintAttr
X86ForceAlignArgPointerAttr
XRayInstrumentAttr
XRayLogArgsAttr
AArch64FarAddressSpaceAttr
AbiTagAttr
AliasAttr
AlignValueAttr
BuiltinAliasAttr
CalledOnceAttr
IFuncAttr
InitSegAttr
LoaderUninitializedAttr
LoopHintAttr
ModeAttr
NoBuiltinAttr
NoEscapeAttr
OMPCaptureKindAttr
OMPDeclareSimdDeclAttr
OMPReferencedVarAttr
ObjCBoxableAttr
ObjCClassStubAttr
ObjCDesignatedInitializerAttr
ObjCDirectAttr
ObjCDirectMembersAttr
ObjCNonLazyClassAttr
ObjCNonRuntimeProtocolAttr
ObjCRuntimeNameAttr
ObjCRuntimeVisibleAttr
ObjCSuppressDirectAttr
OpenCLAccessAttr
OverloadableAttr
RenderScriptKernelAttr
SwiftObjCMembersAttr
SwiftVersionedAttr
SwiftVersionedRemovalAttr
ThreadAttr
kind
range
inherited
implicit
lvalue
xvalue
prvalue
valueCategory
containsErrors
isDependent
isInstantiationDependent
isVariablyModified
containsUnexpandedPack
isImported
QualType
qualifiers
Decl
isImplicit
isInvalid
isUsed
isReferenced
isHidden
parentDeclContextId
TemplateArgument
fromDecl
CXXCtorInitializer
anyInit
baseInit
delegatingInit
Capture
byref
nested
associationKind
case
default
selected
TypeRequirement
SimpleRequirement
CompoundRequirement
NestedRequirement
noexcept
satisfied
value
includedFrom
offset
presumedFile
presumedLine
tokLen
spellingLoc
expansionLoc
qualType
desugaredQualType
typeAliasDeclId
name
isVirtual
isGenericLambda
isLambda
isEmpty
isAggregate
isStandardLayout
isTriviallyCopyable
isPOD
isTrivial
isPolymorphic
isAbstract
isLiteral
canPassInRegisters
hasUserDeclaredConstructor
hasConstexprNonCopyMoveConstructor
hasMutableFields
hasVariantMembers
canConstDefaultInit
defaultCtor
copyCtor
moveCtor
copyAssign
moveAssign
dtor
writtenAccess
isPackExpansion
decl
producesResult
regParm
trailingReturn
variadic
refQualifier
exceptionSpec
exceptionTypes
throwsAny
conditionEvaluatesTo
spelledAsLValue
sizeModifier
indexTypeQualifiers
attrLoc
numElements
vectorKind
altivec pixel
altivec bool
neon poly
fixed-length sve data vector
fixed-length sve predicate vector
transformKind
underlying_type
depth
isPack
undeduced
typeKeyword
decltype(auto)
isAlias
templateName
numExpansions
ownedTagDecl
macroName
isData
isFunction
mangledName
isInline
originalNamespace
nominatedNamespace
aliasedNamespace
storageClass
nrvo
modulePrivate
isParameterPack
isBitfield
hasInClassInitializer
explicitlyDeleted
explicitlyDefaulted
deleted
fixedUnderlyingType
scopedEnumTag
tagUsed
completeDefinition
definitionData
bases
defaultArg
hasBraces
synthesized
returnType
bounded
variance
covariant
contravariant
categoryDecl
control
implKind
propertyDecl
ivarDecl
capturesThis
encodedType
receiverKind
classType
super (instance)
superType
super (class)
callReturnType
propertyKind
isSuperReceiver
isMessagingGetter
isMessagingSetter
subscriptKind
dictionary
isFreeIvar
isArrow
__objc_yes
__objc_no
referencedDecl
foundReferencedDecl
nonOdrUseReason
unevaluated
discarded
typeSourceInfo
isPostfix
opcode
canOverflow
computeLHSType
computeResultType
referencedMemberDecl
isGlobal
isArray
isPlacement
initStyle
operatorNewDecl
operatorDeleteDecl
isArrayAsWritten
castKind
conversionFunc
isPartOfExplicitCast
argType
usesADL
lookups
labelDeclId
typeArg
adjustedTypeArg
resultDependent
typeAsWritten
ctorType
elidable
zeroing
hadMultipleCandidates
constructionKind
complete
delegating
non-virtual base
virtual base
cleanupsHaveSideEffects
cleanups
temp
extendingDecl
storageDuration
automatic
full expression
boundToLValueRef
member
hasTemplateKeyword
hasExplicitTemplateArgs
explicitTemplateArgs
hasInit
hasVar
hasElse
isConstexpr
isConsteval
constevalIsNegated
isGNURange
declId
sideEntry
targetLabelDeclId
isCatchAll
isNull
isNullptr
isExpr
<invalid>
text
renderKind
normal
bold
emphasized
monospaced
anchor
selfClosing
malformed
attrs
direction
in,out
param
paramIdx
positions
closeName
exists
trivial
nonTrivial
userProvided
needsImplicit
defaultedIsConstexpr
userDeclared
hasConstParam
implicitHasConstParam
needsOverloadResolution
defaultedIsDeleted
irrelevant
firstRedecl
previousDecl
isMacroArgExpansion
__main_argc_argv
_GUID_%08x_%04x_%04x_
_OBJC_CLASS_
OBJC_CLASS_$_
<lambda_
3U__s_GUID@@B
?A0x
?__N
<unnamed-type-
<unnamed-enum-
<unnamed-type-$S
?__K
$$$V
cannot mangle this dependent-length array yet
PEAXI@Z
PAXI@Z
<decltype-auto>
<auto>
__pass_dynamic_object_size
__pass_object_size
__clang
objc_selector
PAUocl_image1d_ro@@
PAUocl_image1d_array_ro@@
PAUocl_image1d_buffer_ro@@
PAUocl_image2d_ro@@
PAUocl_image2d_array_ro@@
PAUocl_image2d_depth_ro@@
PAUocl_image2d_array_depth_ro@@
PAUocl_image2d_msaa_ro@@
PAUocl_image2d_array_msaa_ro@@
PAUocl_image2d_msaa_depth_ro@@
PAUocl_image2d_array_msaa_depth_ro@@
PAUocl_image3d_ro@@
PAUocl_image1d_wo@@
PAUocl_image1d_array_wo@@
PAUocl_image1d_buffer_wo@@
PAUocl_image2d_wo@@
PAUocl_image2d_array_wo@@
PAUocl_image2d_depth_wo@@
PAUocl_image2d_array_depth_wo@@
PAUocl_image2d_msaa_wo@@
PAUocl_image2d_array_msaa_wo@@
PAUocl_image2d_msaa_depth_wo@@
PAUocl_image2d_array_msaa_depth_wo@@
PAUocl_image3d_wo@@
PAUocl_image1d_rw@@
PAUocl_image1d_array_rw@@
PAUocl_image1d_buffer_rw@@
PAUocl_image2d_rw@@
PAUocl_image2d_array_rw@@
PAUocl_image2d_depth_rw@@
PAUocl_image2d_array_depth_rw@@
PAUocl_image2d_msaa_rw@@
PAUocl_image2d_array_msaa_rw@@
PAUocl_image2d_msaa_depth_rw@@
PAUocl_image2d_array_msaa_depth_rw@@
PAUocl_image3d_rw@@
ocl_sampler
ocl_event
ocl_clkevent
ocl_queue
ocl_reserveid
_Half
cannot mangle this built-in %0 type yet
cannot mangle this decltype() yet
cannot mangle this 'auto' type yet
cannot mangle this deduced class template specialization type yet
cannot mangle this dependent address space type yet
cannot mangle this DependentExtInt type yet
cannot mangle this dependent name type yet
cannot mangle this dependent-sized extended vector type yet
cannot mangle this dependent template specialization type yet
cannot mangle this dependent-sized vector type yet
_UExtInt
$$A6
$$A8@@
Cannot mangle this matrix type yet
Cannot mangle this dependent-sized matrix type yet
Autoreleasing
Strong
Weak
__ObjC
KindOf
cannot mangle this pack expansion yet
ocl_pipe
_ASCLglobal
_ASCLdevice
_ASCLhost
_ASCLlocal
_ASCLconstant
_ASCLprivate
_ASCLgeneric
_ASCUdevice
_ASCUconstant
_ASCUshared
cannot mangle this substituted parameter pack yet
cannot mangle this template specialization type yet
cannot mangle this template type parameter type yet
cannot mangle this typeof(expression) yet
cannot mangle this typeof(type) yet
cannot mangle this unary transform type yet
cannot mangle this unresolved dependent type yet
__m64
__vector
cannot mangle this template argument yet
?__L
?__M
cannot mangle this conditional operator yet
__block_literal
$$J0
??_E
?$RT
??_R0
??_C@_
??__J
??_B
?$S1@
@4IA
??__
YAXXZ
?filt$
?fin$
??_S
??_7
??_8
?$TSS
@4HA
??_K
_CTA
??_R1
??_R2
??_R3
??_R4@
??_R4
NSObject
NSString
NSArray
NSMutableArray
NSDictionary
NSMutableDictionary
NSNumber
NSMutableSet
NSMutableOrderedSet
NSValue
stringWithString
initWithString
arrayWithArray
arrayWithObject
arrayWithObjects
initWithArray
initWithObjects
objectAtIndex
replaceObjectAtIndex
addObject
atIndex
dictionaryWithDictionary
dictionaryWithObject
forKey
dictionaryWithObjects
forKeys
dictionaryWithObjectsAndKeys
initWithDictionary
initWithObjectsAndKeys
objectForKey
setValue
numberWithChar
numberWithUnsignedChar
numberWithShort
numberWithUnsignedShort
numberWithInt
numberWithUnsignedInt
numberWithLong
numberWithUnsignedLong
numberWithLongLong
numberWithUnsignedLongLong
numberWithFloat
numberWithDouble
numberWithBool
numberWithInteger
numberWithUnsignedInteger
initWithChar
initWithUnsignedChar
initWithShort
initWithUnsignedShort
initWithInt
initWithUnsignedInt
initWithLong
initWithUnsignedLong
initWithLongLong
initWithUnsignedLongLong
initWithFloat
initWithDouble
initWithBool
initWithInteger
initWithUnsignedInteger
BOOL
NSInteger
NSUInteger
final(
num_threads(
safelen(
simdlen(
sizes(
full
partial
allocator(
collapse(
detach(
default(
proc_bind(
unified_address
unified_shared_memory
reverse_offload
dynamic_allocators
atomic_default_mem_order(
schedule(
ordered
nowait
untied
nogroup
mergeable
read
write
update
capture
seq_cst
acq_rel
acquire
release
relaxed
threads
simd
device(
num_teams(
thread_limit(
priority(
grainsize(
num_tasks(
hint(
init(
prefer_type(
target
targetsync
use(
destroy
novariants
nocontext
allocate
private
firstprivate
lastprivate
shared
reduction(
task_reduction(
in_reduction(
linear
aligned
copyin
copyprivate
depend(
map(
dist_schedule(
defaultmap(
use_device_ptr
use_device_addr
is_device_ptr
nontemporal
order(
inclusive
exclusive
uses_allocators(
affinity
filter(
score(
wint_t
__int32
__int64
intmax_t
ssize_t
unsigned __int32
unsigned __int64
uintmax_t
unsigned ptrdiff_t
const unichar *
wchar_t *
^[[:space:]]*(private|public|sensitive|mask\.[^[:space:],}]*)[[:space:]]*(,|})
sensitive
*** Dumping AST Record Layout
Type: 
Layout: 
<ASTRecordLayout
  Size:
  DataSize:
  Alignment:
  PreferredAlignment:
  FieldOffsets: [
 (empty)
 vtable pointer)
 vftable pointer)
(primary base)
(base)
 vbtable pointer)
(vtordisp for vbase 
(primary virtual base)
(virtual base)
[sizeof=
, dsize=
, align=
, preferredalign=
 nvsize=
, nvalign=
, preferrednvalign=
%10lld | 
           | 
*** Stmt/Expr Stats:
 stmts/exprs total.
    
 each (
 bytes)
Total bytes = 
${:uid}
GCCAsmStmt
MSAsmStmt
BreakStmt
CXXCatchStmt
CXXForRangeStmt
CXXTryStmt
CapturedStmt
CompoundStmt
ContinueStmt
CoreturnStmt
CoroutineBodyStmt
DeclStmt
DoStmt
ForStmt
GotoStmt
IfStmt
IndirectGotoStmt
MSDependentExistsStmt
NullStmt
OMPCanonicalLoop
OMPAtomicDirective
OMPBarrierDirective
OMPCancelDirective
OMPCancellationPointDirective
OMPCriticalDirective
OMPDepobjDirective
OMPDispatchDirective
OMPFlushDirective
OMPInteropDirective
OMPDistributeDirective
OMPDistributeParallelForDirective
OMPDistributeParallelForSimdDirective
OMPDistributeSimdDirective
OMPForDirective
OMPForSimdDirective
OMPMasterTaskLoopDirective
OMPMasterTaskLoopSimdDirective
OMPParallelForDirective
OMPParallelForSimdDirective
OMPParallelMasterTaskLoopDirective
OMPParallelMasterTaskLoopSimdDirective
OMPSimdDirective
OMPTargetParallelForSimdDirective
OMPTargetSimdDirective
OMPTargetTeamsDistributeDirective
OMPTargetTeamsDistributeParallelForDirective
OMPTargetTeamsDistributeParallelForSimdDirective
OMPTargetTeamsDistributeSimdDirective
OMPTaskLoopDirective
OMPTaskLoopSimdDirective
OMPTeamsDistributeDirective
OMPTeamsDistributeParallelForDirective
OMPTeamsDistributeParallelForSimdDirective
OMPTeamsDistributeSimdDirective
OMPTileDirective
OMPUnrollDirective
OMPMaskedDirective
OMPMasterDirective
OMPMetaDirective
OMPOrderedDirective
OMPParallelDirective
OMPParallelMasterDirective
OMPParallelSectionsDirective
OMPScanDirective
OMPSectionDirective
OMPSectionsDirective
OMPSingleDirective
OMPTargetDataDirective
OMPTargetDirective
OMPTargetEnterDataDirective
OMPTargetExitDataDirective
OMPTargetParallelDirective
OMPTargetParallelForDirective
OMPTargetTeamsDirective
OMPTargetUpdateDirective
OMPTaskDirective
OMPTaskgroupDirective
OMPTaskwaitDirective
OMPTaskyieldDirective
OMPTeamsDirective
ObjCAtCatchStmt
ObjCAtFinallyStmt
ObjCAtSynchronizedStmt
ObjCAtThrowStmt
ObjCAtTryStmt
ObjCAutoreleasePoolStmt
ObjCForCollectionStmt
ReturnStmt
SEHExceptStmt
SEHFinallyStmt
SEHLeaveStmt
SEHTryStmt
CaseStmt
DefaultStmt
SwitchStmt
AttributedStmt
BinaryConditionalOperator
ConditionalOperator
AddrLabelExpr
ArrayInitIndexExpr
ArrayInitLoopExpr
ArraySubscriptExpr
ArrayTypeTraitExpr
AsTypeExpr
AssumptionExpr
AtomicExpr
BinaryOperator
CompoundAssignOperator
BlockExpr
BoundsCheckExpr
CXXBindTemporaryExpr
CXXBoolLiteralExpr
CXXConstructExpr
CXXTemporaryObjectExpr
CXXDefaultArgExpr
CXXDefaultInitExpr
CXXDeleteExpr
CXXDependentScopeMemberExpr
CXXFoldExpr
CXXInheritedCtorInitExpr
CXXNewExpr
CXXNoexceptExpr
CXXNullPtrLiteralExpr
CXXPseudoDestructorExpr
CXXRewrittenBinaryOperator
CXXScalarValueInitExpr
CXXStdInitializerListExpr
CXXThisExpr
CXXThrowExpr
CXXTypeidExpr
CXXUnresolvedConstructExpr
CXXUuidofExpr
CallExpr
CUDAKernelCallExpr
CXXMemberCallExpr
CXXOperatorCallExpr
UserDefinedLiteral
BuiltinBitCastExpr
CStyleCastExpr
CXXFunctionalCastExpr
CXXAddrspaceCastExpr
CXXConstCastExpr
CXXDynamicCastExpr
CXXReinterpretCastExpr
CXXStaticCastExpr
ObjCBridgedCastExpr
ImplicitCastExpr
CharacterLiteral
ChooseExpr
CompoundLiteralExpr
ConceptSpecializationExpr
ConvertVectorExpr
CoawaitExpr
CoyieldExpr
DeclRefExpr
DependentCoawaitExpr
DependentScopeDeclRefExpr
DesignatedInitExpr
DesignatedInitUpdateExpr
ExpressionTraitExpr
ExtVectorElementExpr
FirebloomPointerPromotionExpr
FixedPointLiteral
FloatingLiteral
ForgePtrExpr
ConstantExpr
ExprWithCleanups
FunctionParmPackExpr
GNUNullExpr
GenericSelectionExpr
GetBoundExpr
ImaginaryLiteral
ImplicitValueInitExpr
InitListExpr
IntegerLiteral
LambdaExpr
MSPropertyRefExpr
MSPropertySubscriptExpr
MaterializeSequenceExpr
MaterializeTemporaryExpr
MatrixSubscriptExpr
MemberExpr
NoInitExpr
OMPArraySectionExpr
OMPArrayShapingExpr
OMPIteratorExpr
ObjCAvailabilityCheckExpr
ObjCBoolLiteralExpr
ObjCEncodeExpr
ObjCIndirectCopyRestoreExpr
ObjCIsaExpr
ObjCIvarRefExpr
ObjCMessageExpr
ObjCArrayLiteral
ObjCBoxedExpr
ObjCDictionaryLiteral
ObjCStringLiteral
ObjCPropertyRefExpr
ObjCProtocolExpr
ObjCSelectorExpr
ObjCSubscriptRefExpr
OffsetOfExpr
OpaqueValueExpr
UnresolvedLookupExpr
UnresolvedMemberExpr
PackExpansionExpr
ParenExpr
ParenListExpr
PredefinedExpr
PseudoObjectExpr
RecoveryExpr
RequiresExpr
SYCLUniqueStableNameExpr
ShuffleVectorExpr
SizeOfPackExpr
SourceLocExpr
StmtExpr
StringLiteral
SubstNonTypeTemplateParmExpr
SubstNonTypeTemplateParmPackExpr
TerminatedByFromIndexableExpr
TerminatedByToIndexableExpr
TypeTraitExpr
TypoExpr
UnaryExprOrTypeTraitExpr
UnaryOperator
VAArgExpr
LabelStmt
WhileStmt
asm 
volatile 
__asm 
break;
<<<NULL STATEMENT>>>
<null expr>
try 
continue;
while (
__if_exists (
__if_not_exists (
#pragma omp atomic
#pragma omp barrier
#pragma omp cancel 
#pragma omp cancellation point 
#pragma omp critical
#pragma omp depobj
#pragma omp dispatch
#pragma omp flush
#pragma omp interop
#pragma omp distribute
#pragma omp distribute parallel for
#pragma omp distribute parallel for simd
#pragma omp distribute simd
#pragma omp for
#pragma omp for simd
#pragma omp master taskloop
#pragma omp master taskloop simd
#pragma omp parallel for
#pragma omp parallel for simd
#pragma omp parallel master taskloop
#pragma omp parallel master taskloop simd
#pragma omp simd
#pragma omp target parallel for simd
#pragma omp target simd
#pragma omp target teams distribute
#pragma omp target teams distribute parallel for
#pragma omp target teams distribute parallel for simd
#pragma omp target teams distribute simd
#pragma omp taskloop
#pragma omp taskloop simd
#pragma omp teams distribute
#pragma omp teams distribute parallel for
#pragma omp teams distribute parallel for simd
#pragma omp teams distribute simd
#pragma omp tile
#pragma omp unroll
#pragma omp masked
#pragma omp master
#pragma omp metadirective
#pragma omp ordered
#pragma omp parallel
#pragma omp parallel master
#pragma omp parallel sections
#pragma omp scan
#pragma omp section
#pragma omp sections
#pragma omp single
#pragma omp target data
#pragma omp target
#pragma omp target enter data
#pragma omp target exit data
#pragma omp target parallel
#pragma omp target parallel for
#pragma omp target teams
#pragma omp target update
#pragma omp task
#pragma omp taskgroup
#pragma omp taskwait
#pragma omp taskyield
#pragma omp teams
@catch (...) { /* todo */ } 
@synchronized (
@catch(
@autoreleasepool
 in 
<<unknown expr type>>
__finally 
__leave;
__try 
default:
switch (
 ?: 
__builtin_astype(
__c11_atomic_init(
__c11_atomic_load(
__c11_atomic_store(
__c11_atomic_exchange(
__c11_atomic_compare_exchange_strong(
__c11_atomic_compare_exchange_weak(
__c11_atomic_fetch_add(
__c11_atomic_fetch_sub(
__c11_atomic_fetch_and(
__c11_atomic_fetch_or(
__c11_atomic_fetch_xor(
__c11_atomic_fetch_max(
__c11_atomic_fetch_min(
__atomic_load(
__atomic_load_n(
__atomic_store(
__atomic_store_n(
__atomic_exchange(
__atomic_exchange_n(
__atomic_compare_exchange(
__atomic_compare_exchange_n(
__atomic_fetch_add(
__atomic_fetch_sub(
__atomic_fetch_and(
__atomic_fetch_or(
__atomic_fetch_xor(
__atomic_fetch_nand(
__atomic_add_fetch(
__atomic_sub_fetch(
__atomic_and_fetch(
__atomic_or_fetch(
__atomic_xor_fetch(
__atomic_max_fetch(
__atomic_min_fetch(
__atomic_nand_fetch(
__opencl_atomic_init(
__opencl_atomic_load(
__opencl_atomic_store(
__opencl_atomic_exchange(
__opencl_atomic_compare_exchange_strong(
__opencl_atomic_compare_exchange_weak(
__opencl_atomic_fetch_add(
__opencl_atomic_fetch_sub(
__opencl_atomic_fetch_and(
__opencl_atomic_fetch_or(
__opencl_atomic_fetch_xor(
__opencl_atomic_fetch_min(
__opencl_atomic_fetch_max(
__atomic_fetch_min(
__atomic_fetch_max(
delete 
<forwarded>
throw 
__uuidof(
>>>(
-0123456789
__builtin_bit_cast(
__builtin_choose_expr(
__builtin_convertvector(
co_await 
co_yield 
/*base*/
/*updater*/
__builtin_unsafe_forge_bidi_indexable(
__builtin_unsafe_forge_single(
__null
_Generic(
__builtin_get_pointer_
lower
upper
_bound(
/*implicit*/
/*implicit*/(
Ui16
*this
 mutable
/*no init*/
iterator(
@available(...)
@encode(
->isa
.isa
Super
super.
@protocol(
@selector(
__builtin_offsetof(
<recovery-expr>(
requires 
<<error-expression>>
__builtin_sycl_unique_stable_name(
__builtin_shufflevector(
sizeof...(
__builtin_unsafe_terminated_by_from_indexable(
__alignof
__builtin_va_arg(
(no value)
(signed char)
(unsigned char)
(null template argument)
<<<NULL>>>
ArmMveStrictPolymorphism
CmseNSCall
NoDeref
ObjCGC
ObjCInertUnsafeUnretained
ObjCKindOf
OpenCLConstantAddressSpace
OpenCLGenericAddressSpace
OpenCLGlobalAddressSpace
OpenCLGlobalDeviceAddressSpace
OpenCLGlobalHostAddressSpace
OpenCLLocalAddressSpace
OpenCLPrivateAddressSpace
PointerAuth
Ptr32
Ptr64
PtrAutoAttr
PtrAutoNullTerminatedAttr
SPtr
TypeNonNull
TypeNullUnspecified
TypeNullable
TypeNullableResult
UPtr
XnuUsageSemantics
FallThrough
Likely
MustTail
OpenCLUnrollHint
Suppress
Unlikely
AnalyzerSuppress
NoMerge
AArch64VectorPcs
AcquireHandle
AnyX86NoCfCheck
CDecl
FastCall
IntelOclBicc
LifetimeBound
MSABI
ObjCOwnership
Pascal
PreserveAll
PreserveMost
RegCall
StdCall
SwiftAsyncCall
SwiftCall
SysVABI
ThisCall
VectorCall
SwiftAsyncContext
SwiftContext
SwiftErrorResult
SwiftIndirectResult
Annotate
CFConsumed
CarriesDependency
NSConsumed
NonNull
OSConsumed
PassObjectSize
ReleaseHandle
UseHandle
AMDGPUFlatWorkGroupSize
AMDGPUNumSGPR
AMDGPUNumVGPR
AMDGPUWavesPerEU
ARMInterrupt
AVRInterrupt
AVRSignal
AcquireCapability
AcquiredAfter
AcquiredBefore
AlignMac68k
AlignNatural
Aligned
AllocAlign
AllocSize
AlwaysDestroy
AlwaysInline
AnalyzerNoReturn
AnyX86Interrupt
AnyX86NoCallerSavedRegisters
ArcWeakrefUnavailable
ArgumentWithTypeTag
ArmBuiltinAlias
Artificial
AsmLabel
AssertCapability
AssertExclusiveLock
AssertSharedLock
AssumeAligned
BPFPreserveAccessIndex
Blocks
C11NoReturn
CFAuditedTransfer
CFGuard
CFICanonicalJumpTable
CFUnknownTransfer
CPUDispatch
CPUSpecific
CUDAConstant
CUDADevice
CUDADeviceBuiltinSurfaceType
CUDADeviceBuiltinTextureType
CUDAGlobal
CUDAHost
CUDAInvalidTarget
CUDALaunchBounds
CUDAShared
CXX11NoReturn
CallableWhen
Callback
Capability
CapturedRecord
Cleanup
CmseNSEntry
CodeSeg
Cold
Common
Const
ConstInit
Constructor
Consumable
ConsumableAutoCast
ConsumableSetOnRead
Convergent
DLLExport
DLLExportStaticLocal
DLLImport
DLLImportStaticLocal
DependerDecls
Deprecated
Destructor
DiagnoseIf
DisableSanitizerInstrumentation
DisableTailCalls
EmptyBases
EnableIf
EnforceTCB
EnforceTCBLeaf
Error
ExcludeFromExplicitInstantiation
ExclusiveTrylockFunction
ExternalSourceSymbol
Final
Flatten
Format
FormatArg
GNUInline
GuardedBy
GuardedVar
HIPManaged
IBOutletCollection
InitPriority
InternalLinkage
LTOVisibilityPublic
LayoutVersion
Leaf
LockReturned
LocksExcluded
M68kInterrupt
MIGServerRoutine
MSAllocator
MSInheritance
MSNoVTable
MSP430Interrupt
MSStruct
MSVtorDisp
MaxFieldAlignment
MayAlias
MicroMips
MinSize
MinVectorWidth
Mips16
MipsInterrupt
MipsLongCall
MipsShortCall
NSConsumesSelf
NSReturnsAutoreleased
Naked
NoAlias
NoCommon
NoDebug
NoDestroy
NoDuplicate
NoInline
NoInstrumentFunction
NoMicroMips
NoMips16
NoProfileFunction
NoReturn
NoSanitize
NoSpeculativeLoadHardening
NoSplitStack
NoStackProtector
NoThreadSafetyAnalysis
NoThrow
NoUniqueAddress
NotTailCalled
OMPAllocateDecl
OMPCaptureNoInit
OMPDeclareTargetDecl
OMPDeclareVariant
OMPThreadPrivateDecl
OSConsumesThis
OSReturnsNotRetained
OSReturnsRetained
OSReturnsRetainedOnNonZero
OSReturnsRetainedOnZero
ObjCBridge
ObjCBridgeMutable
ObjCBridgeRelated
ObjCCompleteDefinition
ObjCException
ObjCExplicitProtocolImpl
ObjCExternallyRetained
ObjCIndependentClass
ObjCMethodFamily
ObjCNSObject
ObjCPreciseLifetime
ObjCRequiresPropertyDefs
ObjCRequiresSuper
ObjCReturnsInnerPointer
ObjCRootClass
ObjCSubclassingRestricted
ObjCSuppressDirectProperty
OpenCLIntelReqdSubGroupSize
OpenCLKernel
OptimizeNone
Override
Ownership
Packed
ParamTypestate
PatchableFunctionEntry
PointerAuthStruct
PragmaClangBSSSection
PragmaClangDataSection
PragmaClangRelroSection
PragmaClangRodataSection
PragmaClangTextSection
PreferredName
PtGuardedBy
PtGuardedVar
Pure
RISCVInterrupt
Reinitializes
ReleaseCapability
ReqdWorkGroupSize
RequiresCapability
Restrict
Retain
ReturnTypestate
ReturnsNonNull
ReturnsTwice
SYCLKernel
ScopedLockable
SelectAny
SetTypestate
SharedTrylockFunction
SpeculativeLoadHardening
StandaloneDebug
StrictFP
SwiftAsync
SwiftAsyncError
SwiftAsyncName
SwiftAttr
SwiftBridgedTypedef
SwiftError
SwiftImportPropertyAsAccessors
SwiftNewType
SymbolMetadataFootnote
TLSModel
Target
TestTypestate
TransparentUnion
TrivialABI
TryAcquireCapability
TypeTagForDatatype
TypeVisibility
TypedMemory
Unavailable
Uninitialized
Unused
Used
UsingIfExists
Uuid
VTablePointerAuthentication
VecReturn
VecTypeHint
WarnUnused
WarnUnusedResult
WeakImport
WeakRef
WebAssemblyExportName
WebAssemblyImportModule
WebAssemblyImportName
WorkGroupSizeHint
X86ForceAlignArgPointer
XRayInstrument
XRayLogArgs
AArch64FarAddressSpace
AbiTag
Alias
AlignValue
BuiltinAlias
CalledOnce
IFunc
InitSeg
LoaderUninitialized
LoopHint
NoBuiltin
OMPCaptureKind
OMPDeclareSimdDecl
OMPReferencedVar
ObjCBoxable
ObjCClassStub
ObjCDesignatedInitializer
ObjCDirect
ObjCDirectMembers
ObjCNonLazyClass
ObjCNonRuntimeProtocol
ObjCRuntimeName
ObjCRuntimeVisible
ObjCSuppressDirect
OpenCLAccess
Overloadable
RenderScriptKernel
SwiftVersioned
SwiftVersionedRemoval
Thread
Attr
 Inherited
 Implicit
TemplateArgument
 contains-errors
 lvalue
 xvalue
 bitfield
 objcproperty
 objcsubscript
 vectorcomponent
 matrixcomponent
LocInfo Type
 sugar
 dependent
 instantiation_dependent
 variably_modified
 contains_unexpanded_pack
 imported
QualType
 parent 
 implicit
 used
 referenced
 invalid
 constexpr
 consteval
 <undeserialized declarations>
CXXCtorInitializer
capture
 byref
 nested
<<<NULL>>> OMPClause
Clause
 <implicit>
case 
default
 selected
<<<NULL>>> Requirement
TypeRequirement
SimpleRequirement
CompoundRequirement
NestedRequirement
 noexcept
 satisfied
 unsatisfied
None
Indeterminate
Int 
Float 
FixedPoint 
Vector length=
element
elements
ComplexInt 
ComplexFloat 
LValue <todo>
Array size=
filler
Struct
Union
MemberPointer <todo>
AddrLabelDiff <todo>
<invalid sloc>
<not a builtin command>
 FPContractMode=
 RoundingMode=
 FPExceptionMode=
 AllowFEnvAccess=
 AllowFPReassociate=
 NoHonorNaNs=
 NoHonorInfs=
 NoSignedZero=
 AllowReciprocal=
 AllowApproxFunc=
 Text="
 Name="
 RenderNormal
 RenderBold
 RenderMonospaced
 RenderEmphasized
 RenderAnchor
 Arg[
 Attrs: 
 SelfClosing
 explicitly
 implicitly
 Param="
 ParamIndex=
 Position=<
" CloseName="
 null
 type
 decl
 nullptr
 integral 
 template 
 template expansion 
 expr
 pack
 has_init
 has_var
 has_else
 side_entry
 gnu_range
 adl
 part_of_explicit_cast
 non_odr_use_unevaluated
 non_odr_use_constant
 non_odr_use_discarded
ADL) = '
 empty
 isFreeIvar
 field 
 result_dependent
postfix
prefix
 cannot overflow
' ComputeLHSTy=
 ComputeResultTy=
 this
 functional cast to 
 list
 elidable
 std::initializer_list
 zeroing
 (CXXTemporary
 array
 extended by 
 selector=
 class=
 super (instance)
 super (class)
 catch all
 Kind=MethodRef Getter="
(null)
" Setter="
 Kind=PropertyRef Property="
 super
 Messaging=
Getter&Setter
Getter
Setter
 Kind=ArraySubscript GetterForArray="
 Kind=DictionarySubscript GetterForDictionary="
" SetterForArray="
" SetterForDictionary="
 begin 
 end 
 step 
 lower
 upper
 <Unbind>
 <Bind>
 written as lvalue reference
 static
 altivec
 altivec pixel
 altivec bool
 neon
 neon poly
 fixed-length sve data vector
 fixed-length sve predicate vector
 noreturn
 produces_result
 regparm 
 trailing_return
 variadic
 underlying_type
 depth 
 index 
 decltype(auto)
 undeduced
 alias
 expansions 
 __module_private__
 definition
 inline
 virtual
 pure
 default
_delete
 delete
 trivial
 noexcept-unevaluated 
 noexcept-uninstantiated 
 <<<NULL params x 
 mangling 
 tls
 tls_dynamic
 nrvo
 cinit
 callinit
 listinit
 destroyed
 nothrow
 openmp_standalone_directive
 combiner
 initializer
 omp_priv = 
 omp_priv ()
original
 typename
 C++
 synthesize
 none
 protected
 public
 package
 covariant
 contravariant
 bounded
 required
 optional
 assign
 readwrite
 retain
 copy
 nonatomic
 atomic
 weak
 strong
 unsafe_unretained
 direct
 captures_this
 first 
 prev 
towardzero
tonearest
upward
downward
tonearestaway
 AddressDiscriminated
 Pointer
 Data
 AAPCS
 AAPCS_VFP
 IRQ
 FIQ
 SWI
 ABORT
 UNDEF
 Generic
 IsPointer
 IsLiteralLabel
 Unavailable
 Strict
 ByRef
 nocf
 Unknown
 Consumed
 Unconsumed
 IsDeref
 DT_Error
 DT_Warning
 ArgDependent
 Closed
 Open
 GeneratedDeclaration
 BestCase
 sw0
 sw1
 hw0
 hw1
 hw2
 hw3
 hw4
 hw5
 eic
 OMPNullMemAlloc
 OMPDefaultMemAlloc
 OMPLargeCapMemAlloc
 OMPConstMemAlloc
 OMPHighBWMemAlloc
 OMPLowLatMemAlloc
 OMPCGroupMemAlloc
 OMPPTeamMemAlloc
 OMPThreadMemAlloc
 OMPUserDefinedMemAlloc
 MT_To
 MT_Link
 DT_Host
 DT_NoHost
 DT_Any
 Target
 TargetSync
 Target_TargetSync
 OMF_None
 OMF_alloc
 OMF_copy
 OMF_init
 OMF_mutableCopy
 OMF_new
 user
 supervisor
 machine
 None
 SwiftPrivate
 NotSwiftPrivate
 NonNullError
 ZeroArgument
 NonZeroArgument
 NullResult
 ZeroResult
 NonZeroResult
 NK_Struct
 NK_Enum
 LayoutCompatible
 MustBeNull
 Default
 Hidden
 Protected
 TMO_Malloc
 TMO_Calloc
 TMO_Realloc
 TMO_AlignedAlloc
 TMO_PosixMemalign
 IR_None
 IR_ARCForbiddenType
 IR_ForbiddenWeak
 IR_IgnoredWeak
 IR_ARCForbiddenConversion
 IR_ARCInitReturnsUnrelated
 IR_ARCFieldWithOwnership
 DefaultKey
 NoKey
 ProcessDependent
 ProcessIndependent
 DefaultAddressDiscrimination
 NoAddressDiscrimination
 AddressDiscrimination
 DefaultExtraDiscrimination
 NoExtraDiscrimination
 TypeDiscrimination
 CustomDiscrimination
 Vectorize
 VectorizeWidth
 Interleave
 InterleaveCount
 Unroll
 UnrollCount
 UnrollAndJam
 UnrollAndJamCount
 PipelineDisabled
 PipelineInitiationInterval
 Distribute
 VectorizePredicate
 Enable
 Disable
 Numeric
 FixedWidth
 ScalableWidth
 AssumeSafety
 Full
 BS_Undefined
 BS_Inbranch
 BS_Notinbranch
 IsReplacedByActive
also in 
cleanup 
Overrides: [ 
DefinitionData
 parsing_base_specifiers
 lambda
 is_anonymous
 pass_in_registers
 aggregate
 standard_layout
 trivially_copyable
 pod
 polymorphic
 abstract
 literal
 has_user_declared_ctor
 has_constexpr_non_copy_move_ctor
 has_mutable_fields
 has_variant_members
 can_const_default_init
DefaultConstructor
 exists
 non_trivial
 user_provided
 needs_implicit
 defaulted_is_constexpr
CopyConstructor
 simple
 user_declared
 has_const_param
 needs_overload_resolution
 defaulted_is_deleted
 implicit_has_const_param
MoveConstructor
CopyAssignment
MoveAssignment
 irrelevant
target 
nominated 
constructed 
typename
class
struct
__interface
union
enum
Adjusted
Decayed
ConstantArray
DependentSizedArray
IncompleteArray
VariableArray
Atomic
Attributed
BlockPointer
Builtin
Complex
Decltype
Auto
DeducedTemplateSpecialization
DependentAddressSpace
DependentExtInt
DependentName
DependentSizedExtVector
DependentTemplateSpecialization
DependentVector
DynamicCountPointer
DynamicRangePointer
Elaborated
ExtInt
FunctionNoProto
FunctionProto
InjectedClassName
MacroQualified
ConstantMatrix
DependentSizedMatrix
MemberPointer
ObjCObjectPointer
ObjCObject
ObjCInterface
ObjCTypeParam
PackExpansion
Paren
Pipe
Pointer
LValueReference
RValueReference
SubstTemplateTypeParmPack
SubstTemplateTypeParm
Enum
Record
TemplateSpecialization
TemplateTypeParm
TypeOfExpr
TypeOf
Typedef
UnaryTransform
UnresolvedUsing
ValueTerminated
Vector
ExtVector
long long
unsigned char
unsigned short
unsigned int
unsigned long
unsigned long long
unsigned __int128
__fp16
long double
short _Accum
_Accum
long _Accum
unsigned short _Accum
unsigned _Accum
unsigned long _Accum
short _Fract
_Fract
long _Fract
unsigned short _Fract
unsigned _Fract
unsigned long _Fract
_Sat short _Accum
_Sat _Accum
_Sat long _Accum
_Sat unsigned short _Accum
_Sat unsigned _Accum
_Sat unsigned long _Accum
_Sat short _Fract
_Sat _Fract
_Sat long _Fract
_Sat unsigned short _Fract
_Sat unsigned _Fract
_Sat unsigned long _Fract
__wchar_t
char8_t
<overloaded function type>
<bound member function type>
<pseudo-object type>
<dependent type>
<unknown type>
<ARC unbridged cast type>
<builtin fn type>
__read_only image1d_t
__read_only image1d_array_t
__read_only image1d_buffer_t
__read_only image2d_t
__read_only image2d_array_t
__read_only image2d_depth_t
__read_only image2d_array_depth_t
__read_only image2d_msaa_t
__read_only image2d_array_msaa_t
__read_only image2d_msaa_depth_t
__read_only image2d_array_msaa_depth_t
__read_only image3d_t
__write_only image1d_t
__write_only image1d_array_t
__write_only image1d_buffer_t
__write_only image2d_t
__write_only image2d_array_t
__write_only image2d_depth_t
__write_only image2d_array_depth_t
__write_only image2d_msaa_t
__write_only image2d_array_msaa_t
__write_only image2d_msaa_depth_t
__write_only image2d_array_msaa_depth_t
__write_only image3d_t
__read_write image1d_t
__read_write image1d_array_t
__read_write image1d_buffer_t
__read_write image2d_t
__read_write image2d_array_t
__read_write image2d_depth_t
__read_write image2d_array_depth_t
__read_write image2d_msaa_t
__read_write image2d_array_msaa_t
__read_write image2d_msaa_depth_t
__read_write image2d_array_msaa_depth_t
__read_write image3d_t
<incomplete matrix index type>
<OpenMP array section type>
<OpenMP array shaping type>
<OpenMP iterator type>
cdecl
stdcall
fastcall
thiscall
pascal
vectorcall
ms_abi
sysv_abi
regcall
aapcs
aapcs-vfp
aarch64_vector_pcs
intel_ocl_bicc
spir_function
opencl_kernel
swiftcall
swiftasynccall
preserve_most
preserve_all
NSObject
NSCopying
 __attribute__((nothrow))
swift_context
swift_async_context
swift_error_result
swift_indirect_result
__ptrauth(
__global
__local
__private
__constant
__generic
__global_device
__global_host
__device__
__constant__
__shared__
__sptr __ptr32
__uptr __ptr32
__ptr64
__attribute__((address_space(
NULL TYPE
_Atomic(
_Complex 
decltype(
unsigned 
_ExtInt(
__vector __pixel 
__vector __bool 
__vector 
__attribute__((neon_vector_type(
))) 
__attribute__((neon_polyvector_type(
__attribute__((__vector_size__(
 * sizeof(
)))) 
__attribute__((__arm_sve_vector_bits__(
 * 8
) * 8
 __sized_by(
 __counted_by(
 __ended_by(
 /* __started_by(
) */ 
 __attribute__((matrix_type(
read_only 
write_only 
pipe 
__unsafe_indexable
__single
__indexable
__bidi_indexable
std::function<
lambda
anonymous
unnamed
(anonymous namespace)::
type-parameter-
typeof 
typeof(
__underlying_type(
__terminated_by(
) * 8))) 
__counted_by(
 [[clang::lifetimebound]]
 __attribute__((
pcs(
"aapcs"
"aapcs-vfp"
inteloclbicc
 __attribute__((address_space(
 __attribute__((ext_vector_type(
 __attribute__((stdcall))
 __attribute__((fastcall))
 __attribute__((thiscall))
 __attribute__((vectorcall))
 __attribute__((pascal))
 __attribute__((pcs("aapcs")))
 __attribute__((pcs("aapcs-vfp")))
__attribute__((aarch64_vector_pcs))
 __attribute__((intel_ocl_bicc))
 __attribute__((ms_abi))
 __attribute__((sysv_abi))
 __attribute__((regcall))
 __attribute__((swiftcall))
__attribute__((swiftasynccall))
 __attribute__((preserve_most))
 __attribute__((preserve_all))
 __attribute__((noreturn))
 __attribute__((cmse_nonsecure_call))
 __attribute__((ns_returns_retained))
 __attribute__((regparm (
 __attribute__((no_caller_saved_registers))
 __attribute__((nocf_check))
__attribute__((ns_consumed)) 
__attribute__((noescape)) 
 [scalar deleting]
VFTable indices for 
 entry
 entries
 -- accessible via 
vbtable index 
vfptr at offset 
%4llu | 
Original map
Construction vtable for ('
) in '
Vtable for '
 entries).
%4d | 
vcall_offset (
vbase_offset (
offset_to_top (
 RTTI
 [pure]
 [deleted]
       [return adjustment: 
 non-virtual
 vbase offset offset
       [this adjustment: 
 vcall offset offset
() [complete]
() [deleting]
[unused] 
       -- (
) vtable address --
Virtual base offset offsets for '
Thunks for '
return adjustment: 
       
this adjustment: 
 [complete]
 [deleting]
VTable indices for '
 method: 
VFTable for 
() [scalar deleting]
Unexpected vftable component type %0 for component number %1
' in 
[return adjustment (to type '
'): 
vbptr at offset 
vbase #
 non-virtual]
[this adjustment: 
vtordisp at 
vbptr at 
 to the left,
 vboffset at 
 in the vbtable, 
allocate
assumes
barrier
begin assumes
begin declare target
begin declare variant
cancellation point
critical
declare mapper
declare reduction
depobj
distribute parallel do
distribute parallel do simd
distribute parallel for
distribute parallel for simd
distribute simd
do simd
end assumes
end declare target
end declare variant
end do
end do simd
end sections
end single
end workshare
flush
for simd
master
master taskloop
master taskloop simd
metadirective
ordered
parallel
parallel do
parallel do simd
parallel for
parallel for simd
parallel master
parallel master taskloop
parallel master taskloop simd
parallel sections
parallel workshare
sections
simd
target data
target enter data
target exit data
target parallel
target parallel do
target parallel do simd
target parallel for
target parallel for simd
target simd
target teams
target teams distribute
target teams distribute parallel do
target teams distribute parallel do simd
target teams distribute parallel for
target teams distribute parallel for simd
target teams distribute simd
target update
task
taskgroup
taskloop
taskloop simd
taskwait
taskyield
teams
teams distribute
teams distribute parallel do
teams distribute parallel do simd
teams distribute parallel for
teams distribute parallel for simd
teams distribute simd
threadprivate
tile
unknown
workshare
masked
acq_rel
acquire
adjust_args
affinity
aligned
allocator
append_args
atomic_default_mem_order
capture
collapse
copyprivate
copyin
default
defaultmap
depend
destroy
detach
device
device_type
dist_schedule
dynamic_allocators
exclusive
filter
final
firstprivate
from
full
grainsize
hint
in_reduction
inbranch
inclusive
init
is_device_ptr
lastprivate
linear
link
match
mergeable
nogroup
nowait
nocontext
nontemporal
notinbranch
novariants
num_tasks
num_teams
num_threads
order
partial
priority
private
proc_bind
read
reduction
relaxed
release
reverse_offload
safelen
schedule
seq_cst
shared
simdlen
sizes
task_reduction
thread_limit
threads
unified_address
unified_shared_memory
uniform
untied
update
use_device_addr
use_device_ptr
uses_allocators
when
write
threadprivate or thread local
x86_64
armeb
aarch64
aarch64_be
aarch64_32
ppcle
ppc64
ppc64le
amdgcn
nvptx
nvptx64
invalid
construct
device
implementation
user
target
teams
parallel
simd
kind
arch
vendor
extension
condition
dispatch
unified_address
unified_shared_memory
reverse_offload
dynamic_allocators
atomic_default_mem_order
host
nohost
fpga
cray
fujitsu
intel
llvm
unknown
match_all
match_any
match_none
disable_implicit_base
allow_templates
true
false
<any, entirely target dependent>
llvm.object
No object file for requested architecture
The file was not recognized as a valid object file
Invalid data was encountered while parsing the file
The end of the file was unexpectedly encountered
String table must end with a null terminator
Invalid section index
Bitcode section not found in object file
Invalid symbol index
load commands extend past the end of the file
universal header architecture: 
's cputype does not match object file's mach header
Mach-O headers
load command 
 cmdsize not a multiple of 8
 cmdsize not a multiple of 4
LC_DATA_IN_CODE
data in code info
LC_LINKER_OPTIMIZATION_HINT
linker optimization hints
LC_FUNCTION_STARTS
function starts data
LC_SEGMENT_SPLIT_INFO
split info data
LC_DYLIB_CODE_SIGN_DRS
code signing RDs data
LC_CODE_SIGNATURE
code signature data
LC_DYLD_INFO
LC_DYLD_INFO_ONLY
LC_DYLD_EXPORTS_TRIE
export trie
LC_DYLD_CHAINED_FIXUPS
chained fixups
LC_UUID command 
 has incorrect cmdsize
more than one LC_UUID command
LC_SEGMENT_64
LC_SEGMENT
LC_LOAD_DYLIB
LC_LOAD_WEAK_DYLIB
LC_LAZY_LOAD_DYLIB
LC_REEXPORT_DYLIB
LC_LOAD_UPWARD_DYLIB
LC_ID_DYLINKER
LC_LOAD_DYLINKER
LC_DYLD_ENVIRONMENT
LC_VERSION_MIN_MACOSX
LC_VERSION_MIN_IPHONEOS
LC_VERSION_MIN_TVOS
LC_VERSION_MIN_WATCHOS
LC_SOURCE_VERSION command 
more than one LC_SOURCE_VERSION command
LC_MAIN command 
more than one LC_MAIN command
LC_ENCRYPTION_INFO command 
LC_ENCRYPTION_INFO
LC_ENCRYPTION_INFO_64 command 
LC_ENCRYPTION_INFO_64
 LC_SUB_FRAMEWORK cmdsize too small
LC_SUB_FRAMEWORK
sub_framework_command
 LC_SUB_UMBRELLA cmdsize too small
LC_SUB_UMBRELLA
sub_umbrella_command
sub_umbrella
 LC_SUB_LIBRARY cmdsize too small
LC_SUB_LIBRARY
sub_library_command
sub_library
 LC_SUB_CLIENT cmdsize too small
LC_SUB_CLIENT
sub_client_command
client
LC_ROUTINES command 
more than one LC_ROUTINES and or LC_ROUTINES_64 command
LC_ROUTINES_64 command 
more than one LC_ROUTINES_64 and or LC_ROUTINES command
LC_UNIXTHREAD
more than one LC_UNIXTHREAD command
LC_THREAD
 for cmd value of: 
 is obsolete and not supported
MH_SIM_SUPPORT files only support LC_BUILD_VERSION and LC_VERSION_MIN_MACOSX load commands
LC_BUILD_VERSION and some LC_VERSION_MIN load command also found
contains LC_DYSYMTAB load command without a LC_SYMTAB load command
ilocalsym in LC_DYSYMTAB load command extends past the end of the symbol table
ilocalsym plus nlocalsym in LC_DYSYMTAB load command extends past the end of the symbol table
iextdefsym in LC_DYSYMTAB load command extends past the end of the symbol table
iextdefsym plus nextdefsym in LC_DYSYMTAB load command extends past the end of the symbol table
iundefsym in LC_DYSYMTAB load command extends past the end of the symbol table
iundefsym plus nundefsym in LC_DYSYMTAB load  command extends past the end of the symbol table
no LC_ID_DYLIB load command in dynamic library filetype
bad section index: 
 for symbol at index 
bad library ordinal: 
bad string index: 
__swift_ast
__LLVM
GENERIC_RELOC_VANILLA
GENERIC_RELOC_PAIR
GENERIC_RELOC_SECTDIFF
GENERIC_RELOC_PB_LA_PTR
GENERIC_RELOC_LOCAL_SECTDIFF
GENERIC_RELOC_TLV
Unknown
X86_64_RELOC_UNSIGNED
X86_64_RELOC_SIGNED
X86_64_RELOC_BRANCH
X86_64_RELOC_GOT_LOAD
X86_64_RELOC_GOT
X86_64_RELOC_SUBTRACTOR
X86_64_RELOC_SIGNED_1
X86_64_RELOC_SIGNED_2
X86_64_RELOC_SIGNED_4
X86_64_RELOC_TLV
ARM_RELOC_VANILLA
ARM_RELOC_PAIR
ARM_RELOC_SECTDIFF
ARM_RELOC_LOCAL_SECTDIFF
ARM_RELOC_PB_LA_PTR
ARM_RELOC_BR24
ARM_THUMB_RELOC_BR22
ARM_THUMB_32BIT_BRANCH
ARM_RELOC_HALF
ARM_RELOC_HALF_SECTDIFF
ARM64_RELOC_UNSIGNED
ARM64_RELOC_SUBTRACTOR
ARM64_RELOC_BRANCH26
ARM64_RELOC_PAGE21
ARM64_RELOC_PAGEOFF12
ARM64_RELOC_GOT_LOAD_PAGE21
ARM64_RELOC_GOT_LOAD_PAGEOFF12
ARM64_RELOC_POINTER_TO_GOT
ARM64_RELOC_TLVP_LOAD_PAGE21
ARM64_RELOC_TLVP_LOAD_PAGEOFF12
ARM64_RELOC_ADDEND
ARM64_RELOC_AUTHENTICATED_POINTER
PPC_RELOC_VANILLA
PPC_RELOC_PAIR
PPC_RELOC_BR14
PPC_RELOC_BR24
PPC_RELOC_HI16
PPC_RELOC_LO16
PPC_RELOC_HA16
PPC_RELOC_LO14
PPC_RELOC_SECTDIFF
PPC_RELOC_PB_LA_PTR
PPC_RELOC_HI16_SECTDIFF
PPC_RELOC_LO16_SECTDIFF
PPC_RELOC_HA16_SECTDIFF
PPC_RELOC_JBSR
PPC_RELOC_LO14_SECTDIFF
PPC_RELOC_LOCAL_SECTDIFF
Requested symbol index is out of range.
getSymbolIndex() called with no symbol table symbol
Mach-O 32-bit i386
Mach-O arm
Mach-O arm64 (ILP32)
Mach-O 32-bit ppc
Mach-O 32-bit unknown
Mach-O 64-bit x86-64
Mach-O arm64
Mach-O 64-bit ppc64
Mach-O 64-bit unknown
xscale
export info size 
 in export trie data at node: 0x
export info size: 0x
 too big and extends past end of trie data
flags 
unsupported exported symbol kind: 
 in flags: 0x
dylib ordinal of re-export 
 (max 
) in export trie data at node: 0x
import name of re-export in export trie data at node: 0x
 starts past end of trie data
 extends past end of trie data
address 
resolver of stub and resolver 
inconsistant export info size: 0x
 where actual size was: 0x
byte for count of childern in export trie data at node: 0x
edge sub-string in export trie data at node: 0x
 for child #
child node offset 
loop in childern in export trie data at node: 0x
 back to node: 0x
node is not an export node in export trie data at node: 0x
out of range bind ordinal 
 (num entries: 
for REBASE_OPCODE_SET_TYPE_IMM bad bind type: 
 for opcode at: 0x
for REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB 
for REBASE_OPCODE_ADD_ADDR_ULEB 
for REBASE_OPCODE_ADD_ADDR_IMM_SCALED 
for REBASE_OPCODE_DO_REBASE_IMM_TIMES 
for REBASE_OPCODE_DO_REBASE_ULEB_TIMES 
for REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB 
for REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB 
bad rebase info (bad opcode value 0x
BIND_OPCODE_SET_DYLIB_ORDINAL_IMM not allowed in weak bind table for opcode at: 0x
for BIND_OPCODE_SET_DYLIB_ORDINAL_IMM bad library ordinal: 
) for opcode at: 0x
BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB not allowed in weak bind table for opcode at: 0x
for BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB 
for BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB bad library ordinal: 
BIND_OPCODE_SET_DYLIB_SPECIAL_IMM not allowed in weak bind table for opcode at: 0x
for BIND_OPCODE_SET_DYLIB_SPECIAL_IMM unknown special ordinal: 
for BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM symbol name extends past opcodes for opcode at: 0x
for BIND_OPCODE_SET_TYPE_IMM bad bind type: 
for BIND_OPCODE_SET_ADDEND_SLEB 
for BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB 
for BIND_OPCODE_ADD_ADDR_ULEB 
for BIND_OPCODE_DO_BIND 
for BIND_OPCODE_DO_BIND missing preceding BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM for opcode at: 0x
for BIND_OPCODE_DO_BIND missing preceding BIND_OPCODE_SET_DYLIB_ORDINAL_* for opcode at: 0x
at BIND_OPCODE_DO_BIND (incorrect ordinal table size, number of BIND_OPCODE_DO_BIND opcodes exceed the count in previous BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB) at BIND_OPCODE_DO_BIND at: 0x
BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB not allowed in lazy bind table for opcode at: 0x
for BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB 
for BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB missing preceding BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM for opcode at: 0x
for BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB missing preceding BIND_OPCODE_SET_DYLIB_ORDINAL_* for opcode at: 0x
for BIND_OPCODE_ADD_ADDR_ULEB (after adding ULEB) 
BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED not allowed in lazy bind table for opcode at: 0x
for BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED missing preceding BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM for opcode at: 0x
for BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED missing preceding BIND_OPCODE_SET_DYLIB_ORDINAL_* for opcode at: 0x
for BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED 
BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB not allowed in lazy bind table for opcode at: 0x
for BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB  (count value) 
for BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB (skip value) 
for BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB missing preceding BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM for opcode at: 0x
for BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB missing preceding BIND_OPCODE_SET_DYLIB_ORDINAL_* for opcode at: 0x
for BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB 
for BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB 
at BIND_SUBOPCODE_THREADED_APPLY (incorrect ordinal table size, count of previous BIND_OPCODE_DO_BIND opcodes don't match count in previous BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB at BIND_SUBOPCODE_THREADED_APPLY at: 0x
for BIND_SUBOPCODE_THREADED_APPLY 
for BIND_SUBOPCODE_THREADED_APPLY for opcode at: 0x
 bad segOffset, not 8-byte aligned
bad bind sub-obcode of BIND_OPCODE_THREADED (bad sub-opcode value 0x
bad bind info (bad opcode value 0x
bad bind info (for BIND_SUBOPCODE_THREADED_APPLY for opcode at: 0x
 bad ordinal: 0x
 in pointer: 0x
 at address: 0x
 offset to next pointer in the chain after one at address: 0x
 is past end of segment)
 is past end of the same page)
missing preceding *_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB
bad segIndex (too large)
bad offset, extends beyond section boundary
bad offset, not in section
bad chained fixups: unknown version: 
bad chained fixups: unknown imports format: 
bad chained fixups: import #
 symbol offset extends past end: 
 bad library ordinal: 
bad chained fixups: image starts offset 
 overlaps with chained fixups header
bad chained fixups: image starts end 
 extends past end 
bad chained fixups: seg_info_offset 
 starts past end 
bad chained fixups: segment start 
 offset 
 page size 
 is invalid
 pointer format 
 page_start index 
 extends past seg_info size 
 chain_start index 
bad chained fixups: chain starts section 
 starts past end of file
 extends past end of file
pointer format 
bad chained fixups: chain start 
 extends past section data
Unrecognized MachO magic number
debug_str_offsets
__swift5_fieldmd
__swift5_assocty
__swift5_builtin
__swift5_capture
__swift5_typeref
__swift5_reflstr
__swift5_proto
__swift5_protos
__swift5_acfuncs
__swift5_mpenum
truncated or malformed object (
load command 0 extends past the end all load commands in the file
 with size less than 8 bytes
Structure read out-of-range
 LC_SYMTAB cmdsize too small
more than one LC_SYMTAB command
LC_SYMTAB command 
symoff field of LC_SYMTAB command 
 extends past the end of the file
struct nlist_64
struct nlist
symoff field plus nsyms field times sizeof(
) of LC_SYMTAB command 
symbol table
stroff field of LC_SYMTAB command 
stroff field plus strsize field of LC_SYMTAB command 
string table
 at offset 
 with a size of 
, overlaps 
 LC_DYSYMTAB cmdsize too small
more than one LC_DYSYMTAB command
LC_DYSYMTAB command 
tocoff field of LC_DYSYMTAB command 
tocoff field plus ntoc field times sizeof(struct dylib_table_of_contents) of LC_DYSYMTAB command 
table of contents
modtaboff field of LC_DYSYMTAB command 
struct dylib_module_64
struct dylib_module
modtaboff field plus nmodtab field times sizeof(
) of LC_DYSYMTAB command 
module table
extrefsymoff field of LC_DYSYMTAB command 
extrefsymoff field plus nextrefsyms field times sizeof(struct dylib_reference) of LC_DYSYMTAB command 
reference table
indirectsymoff field of LC_DYSYMTAB command 
indirectsymoff field plus nindirectsyms field times sizeof(uint32_t) of LC_DYSYMTAB command 
indirect table
extreloff field of LC_DYSYMTAB command 
extreloff field plus nextrel field times sizeof(struct relocation_info) of LC_DYSYMTAB command 
external relocation table
locreloff field of LC_DYSYMTAB command 
locreloff field plus nlocrel field times sizeof(struct relocation_info) of LC_DYSYMTAB command 
local relocation table
 cmdsize too small
more than one 
 command
 command 
dataoff field of 
dataoff field plus datasize field of 
more than one LC_DYLD_INFO and or LC_DYLD_INFO_ONLY command
rebase_off field of 
rebase_off field plus rebase_size field of 
dyld rebase info
bind_off field of 
bind_off field plus bind_size field of 
dyld bind info
weak_bind_off field of 
weak_bind_off field plus weak_bind_size field of 
dyld weak bind info
lazy_bind_off field of 
lazy_bind_off field plus lazy_bind_size field of 
dyld lazy bind info
export_off field of 
export_off field plus export_size field of 
dyld export info
LC_ID_DYLIB
more than one LC_ID_DYLIB command
LC_ID_DYLIB load command in non-dynamic library file type
 name.offset field too small, not past the end of the dylib_command struct
 name.offset field extends past the end of the load command
 library name extends past the end of the load command
 name.offset field too small, not past the end of the dylinker_command struct
 dyld name extends past the end of the load command
more than one LC_VERSION_MIN_MACOSX, LC_VERSION_MIN_IPHONEOS, LC_VERSION_MIN_TVOS or LC_VERSION_MIN_WATCHOS command
 LC_NOTE has incorrect cmdsize
offset field of LC_NOTE command 
size field plus offset field of LC_NOTE command 
LC_NOTE data
 LC_BUILD_VERSION_COMMAND has incorrect cmdsize
more than two LC_BUILD_VERSION load commands
the LC_BUILD_VERSION, command 
, platform value is not allowed when the mach header flag MH_SIM_SUPPORT is set
the two LC_BUILD_VERSION load commands are not for the platforms MACOS and MACCATALYST
 LC_RPATH cmdsize too small
 LC_RPATH path.offset field too small, not past the end of the rpath_command struct
 LC_RPATH path.offset field extends past the end of the load command
 LC_RPATH library name extends past the end of the load command
more than one LC_ENCRYPTION_INFO and or LC_ENCRYPTION_INFO_64 command
cryptoff field of 
cryptoff field plus cryptsize field of 
 LC_LINKER_OPTION cmdsize too small
 LC_LINKER_OPTION string #
 is not NULL terminated
 LC_LINKER_OPTION string count 
 does not match number of strings
.offset field too small, not past the end of the 
.offset field extends past the end of the load command
 name extends past the end of the load command
flavor in 
 extends past end of command
 count in 
 count not x86_THREAD_STATE32_COUNT for flavor number 
 which is a x86_THREAD_STATE32 flavor in 
 x86_THREAD_STATE32 extends past end of command in 
 unknown flavor (
) for flavor number 
 count not x86_THREAD_STATE_COUNT for flavor number 
 which is a x86_THREAD_STATE flavor in 
 x86_THREAD_STATE extends past end of command in 
 count not x86_FLOAT_STATE_COUNT for flavor number 
 which is a x86_FLOAT_STATE flavor in 
 x86_FLOAT_STATE extends past end of command in 
 count not x86_EXCEPTION_STATE_COUNT for flavor number 
 which is a x86_EXCEPTION_STATE flavor in 
 x86_EXCEPTION_STATE extends past end of command in 
 count not x86_THREAD_STATE64_COUNT for flavor number 
 which is a x86_THREAD_STATE64 flavor in 
 x86_THREAD_STATE64 extends past end of command in 
 count not x86_EXCEPTION_STATE64_COUNT for flavor number 
 which is a x86_EXCEPTION_STATE64 flavor in 
 x86_EXCEPTION_STATE64 extends past end of command in 
 count not ARM_THREAD_STATE_COUNT for flavor number 
 which is a ARM_THREAD_STATE flavor in 
 ARM_THREAD_STATE extends past end of command in 
 count not ARM_THREAD_STATE64_COUNT for flavor number 
 which is a ARM_THREAD_STATE64 flavor in 
 ARM_THREAD_STATE64 extends past end of command in 
 count not ARM_EXCEPTION_STATE64_COUNT for flavor number 
 which is a ARM_EXCEPTION_STATE64 flavor in 
 ARM_EXCEPTION_STATE64 extends past end of command in 
 count not PPC_THREAD_STATE_COUNT for flavor number 
 which is a PPC_THREAD_STATE flavor in 
 PPC_THREAD_STATE extends past end of command in 
unknown cputype (
) load command 
 for 
 command can't be checked
 LC_TWOLEVEL_HINTS has incorrect cmdsize
more than one LC_TWOLEVEL_HINTS command
offset field of LC_TWOLEVEL_HINTS command 
offset field plus nhints times sizeof(struct twolevel_hint) field of LC_TWOLEVEL_HINTS command 
two level hints
 extends past the end all load commands in the file
Malformed MachO file.
malformed uleb128, extends past end
uleb128 too big for uint64
malformed sleb128, extends past end
sleb128 too big for int64
the mach header extends past the end of the file
 inconsistent cmdsize in 
 for the number of sections
offset field of section 
 not past the headers of the file
offset field plus size field of section 
size field of section 
 greater than the segment
addr field of section 
 less than the segment's vmaddr
addr field plus size of section 
 greater than than the segment's vmaddr plus vmsize
section contents
reloff field of section 
reloff field plus nreloc field times sizeof(struct relocation_info) of section 
section relocation entries
 fileoff field in 
 fileoff field plus filesize field in 
 filesize field in 
 greater than vmsize field
MachOUniversalBinary::ObjectForArch::getAsObjectFile() called when Parent is a nullptr
File too small to be a Mach-O universal file
contains zero architecture types
bad magic number
fat_arch
 structs would extend past the end of the file
offset plus size of cputype (
) cpusubtype (
) extends past the end of the file
align (2^
) too large for cputype (
) (maximum 2^
offset: 
 for cputype (
) not aligned on it's alignment (2^
cputype (
) offset 
 overlaps universal headers
contains two of the same architecture (cputype (
) at offset 
, overlaps cputype (
truncated or malformed fat file (
Invalid signature
Invalid version
Cannot handle one of the minidump streams
Duplicate stream type
Unexpected EOF
__imp_
: relocations with offset 0x
 and size 0x
 go past the end of the file
entry with offset 0x
 in a string table with size 0x
: section data with offset 0x
 goes past the end of the file
aix5coff64-rs6000
aixcoff-rs6000
debug_info
debug_line
debug_pubnames
debug_pubtypes
debug_aranges
debug_abbrev
debug_str
debug_ranges
debug_loc
debug_frame
debug_macinfo
the section index (
) is invalid
: string table with offset 0x
: section headers with offset 0x
: symbol table with offset 0x
csect symbol "
" with index 
 contains no auxiliary entry
a csect auxiliary entry has not been found for symbol "
Unimplemented Debug Name
invalid sign in float literal
invalid hexadecimal floating-point constant: expected at least one significand digit
invalid hexadecimal floating-point constant: expected exponent part 'p'
invalid hexadecimal floating-point constant: expected at least one exponent digit
unterminated comment
invalid 
 number
invalid hexadecimal number
invalid binary number
invalid usage of character literals
unterminated string constant
unterminated single quote
single quote way too long
invalid usage of string literals
invalid character in input
got_hi
got_lo
higher
highest
tlsgd
binary
octal
decimal
hexadecimal
base-
missing expression
Recursive use of '
redefinition of '
invalid assignment to '
invalid reassignment of non-absolute variable '
.set
.equ
.equiv
.ascii
.asciz
.string
.byte
.short
.value
.2byte
.long
.int
.4byte
.quad
.8byte
.octa
.single
.float
.double
.align
.align32
.balign
.balignw
.balignl
.p2align
.p2alignw
.p2alignl
.org
.fill
.zero
.extern
.globl
.global
.lazy_reference
.no_dead_strip
.symbol_resolver
.private_extern
.reference
.weak_definition
.weak_reference
.weak_def_can_be_hidden
.cold
.comm
.common
.lcomm
.abort
.include
.incbin
.code16
.code16gcc
.rept
.rep
.irp
.irpc
.endr
.bundle_align_mode
.bundle_lock
.bundle_unlock
.ifeq
.ifge
.ifgt
.ifle
.iflt
.ifne
.ifb
.ifnb
.ifc
.ifeqs
.ifnc
.ifnes
.ifdef
.ifndef
.ifnotdef
.elseif
.else
.end
.endif
.skip
.space
.file
.line
.loc
.stabs
.cv_file
.cv_func_id
.cv_loc
.cv_linetable
.cv_inline_linetable
.cv_inline_site_id
.cv_def_range
.cv_string
.cv_stringtable
.cv_filechecksums
.cv_filechecksumoffset
.cv_fpo_data
.sleb128
.uleb128
.cfi_sections
.cfi_startproc
.cfi_endproc
.cfi_def_cfa
.cfi_def_cfa_offset
.cfi_adjust_cfa_offset
.cfi_def_cfa_register
.cfi_llvm_def_aspace_cfa
.cfi_offset
.cfi_rel_offset
.cfi_personality
.cfi_lsda
.cfi_remember_state
.cfi_restore_state
.cfi_same_value
.cfi_restore
.cfi_escape
.cfi_return_column
.cfi_signal_frame
.cfi_undefined
.cfi_register
.cfi_window_save
.cfi_b_key_frame
.macros_on
.macros_off
.macro
.exitm
.endm
.endmacro
.purgem
.err
.error
.warning
.altmacro
.noaltmacro
.reloc
.dc.a
.dc.b
.dc.d
.dc.l
.dc.s
.dc.w
.dc.x
.dcb
.dcb.b
.dcb.d
.dcb.l
.dcb.s
.dcb.w
.dcb.x
.ds.b
.ds.d
.ds.l
.ds.p
.ds.s
.ds.w
.ds.x
.print
.addrsig
.addrsig_sym
.pseudoprobe
.lto_discard
frame_ptr_rel
subfield_reg
reg_rel
unexpected token at start of statement
invalid use of pseudo-symbol '.' as a label
 not currently supported for this target
unknown directive
__emit
expected comma
expected string parameter for '.ifeqs' directive
expected string parameter for '.ifnes' directive
expected comma after first string for '.ifeqs' directive
expected comma after first string for '.ifnes' directive
expected identifier after '.ifdef'
Encountered a .elseif that doesn't follow an .if or  an .elseif
Encountered a .else that doesn't follow  an .if or an .elseif
Encountered a .endif that doesn't follow an .if or .else
macros cannot be nested more than 
 levels deep.
 Use -asm-macro-max-nesting-depth to increase this limit.
.endmacro
<instantiation>
invalid argument identifier for formal argument
expected '=' after formal parameter identifier
cannot mix positional and keyword arguments
expected absolute expression
parameter named '
' does not exist for macro '
missing value for required parameter '
' in macro '
too many positional arguments
unexpected token in macro instantiation
unbalanced parentheses in macro argument
Wrong number of arguments
expected identifier
out of range literal value
unknown token in expression
unexpected token in directive
infinity
invalid floating point literal
p2align directive with no operand(s) is ignored
invalid alignment value
alignment must be a power of 2
alignment must be smaller than 2**32
alignment directive can never be satisfied in this many bytes, ignoring maximum bytes expression
maximum bytes expression exceeds alignment and has no effect
'.fill' directive with negative size has no effect
'.fill' directive with size greater than 8 has been truncated to 8
'.fill' directive pattern has been truncated to 32-bits
non-local symbol required
unable to emit symbol attribute
expected identifier in directive
alignment not supported on this target
invalid '.comm' or '.lcomm' directive size, can't be less than zero
invalid '.comm' or '.lcomm' directive alignment, can't be less than zero
invalid symbol redefinition
.abort detected. Assembly stopping.
.abort '
' detected. Assembly stopping.
expected string in '.include' directive
unexpected token in '.include' directive
Could not find include file '
expected string in '.incbin' directive
skip is negative
Could not find incbin file '
negative count has no effect
unexpected token in '
' directive
Count is negative
no matching '.endr' in definition
unexpected token in '.endr' directive
.endr
expected identifier in '.irp' directive
expected identifier in '.irpc' directive
unexpected token in '.irpc' directive
unmatched '.endr' directive
invalid bundle alignment size (expected between 0 and 30)
invalid option for '.bundle_lock' directive
negative file number
explicit path specified, but no file number
unexpected token in '.file' directive
MD5 checksum specified, but no file number
source
source specified, but no file number
inconsistent use of MD5 checksums
unexpected token in '.line' directive
unexpected token in '.loc' directive
file number less than one in '.loc' directive
unassigned file number in '.loc' directive
line number less than zero in '.loc' directive
column position less than zero in '.loc' directive
is_stmt value not 0 or 1
is_stmt value not the constant value of 0 or 1
isa number less than zero
isa number not a constant value
unknown sub-directive in '.loc' directive
unsupported directive '.stabs'
expected file number in '.cv_file' directive
file number less than one
unexpected token in '.cv_file' directive
expected checksum kind in '.cv_file' directive
file number already allocated
unexpected token in '.cv_func_id' directive
function id already allocated
expected function id in '
expected function id within range [0, UINT_MAX)
expected 'within' identifier in '.cv_inline_site_id' directive
expected 'inlined_at' identifier in '.cv_inline_site_id' directive
expected line number after 'inlined_at'
unexpected token in '.cv_inline_site_id' directive
expected integer in '
file number less than one in '
unassigned file number in '
line number less than zero in '.cv_loc' directive
column position less than zero in '.cv_loc' directive
unexpected token in '.cv_loc' directive
unknown sub-directive in '.cv_loc' directive
expected SourceField in '.cv_inline_linetable' directive
File id less than zero in '.cv_inline_linetable' directive
expected SourceLineNum in '.cv_inline_linetable' directive
Line number less than zero in '.cv_inline_linetable' directive
Expected End of Statement
expected comma before def_range type in .cv_def_range directive
expected def_range type in directive
expected comma before register number in .cv_def_range directive
expected register number
expected comma before offset in .cv_def_range directive
expected offset value
expected register value
expected comma before flag value in .cv_def_range directive
expected flag value
expected comma before base pointer offset in .cv_def_range directive
expected base pointer offset value
unexpected def_range type in .cv_def_range directive
expected symbol name
expected .eh_frame or .debug_frame
.eh_frame
.debug_frame
unexpected token
unsupported encoding.
expected identifier in '.macro' directive
vararg parameter '
' should be the last parameter
macro '
' has multiple parameters named '
missing parameter qualifier for '
 is not a valid parameter qualifier for '
pointless default value for required parameter '
no matching '.endmacro' in definition
' is already defined
macro defined with named parameters which are not used in macro body, possible positional parameter found in body which will have no effect
unexpected '
' in file, no current macro definition
expected identifier in '.purgem' directive
' is not defined
.err encountered
.error directive invoked in source file
.error argument must be a string
.warning directive invoked in source file
.warning argument must be a string
expected relocation name
expression must be relocatable
' directive with negative repeat count has no effect
literal value out of range for directive
expected double quoted string after .print
unexpected token in '.pseudoprobe' directive
unexpected expression in _emit
unexpected expression in align
literal value not a power of two greater then zero
parsed instruction: [
unmatched .ifs or .elses
unassigned file number: 
 for .file directives
assembler local symbol '
' not defined
directional label undefined
 * $$
offset 
 + $$
byte ptr 
word ptr 
dword ptr 
qword ptr 
xword ptr 
xmmword ptr 
ymmword ptr 
.even
while in macro instantiation
expected string
unexpected backslash at end of string
invalid hexadecimal escape sequence
invalid octal escape sequence (out of range)
invalid escape sequence (unrecognized character)
unexpected symbol modifier following '@'
invalid variant '
invalid modifier '
' (no symbols present)
invalid variant on expression '
' (already modified)
invalid token in expression
expected symbol variant after '@'
unexpected token in variant, expected ')'
expected a symbol reference
unexpected modifier on variable reference
cannot use . as current PC
brackets expression not supported on this target
expected '(' after operator
expected ')'
expected ')' in parentheses expression
expected ']' in brackets expression
expected section directive before assembly directive
The HLASM Label has to be an Identifier
Cannot have just a label for an HLASM inline asm statement
.text
.data
.bss
.section
.def
.scl
.type
.endef
.secrel32
.symidx
.safeseh
.secidx
.linkonce
.rva
.weak
.cg_profile
.seh_proc
.seh_endproc
.seh_endfunclet
.seh_startchained
.seh_endchained
.seh_handler
.seh_handlerdata
.seh_stackalloc
.seh_endprologue
unexpected token in section switching directive
expected string in directive
expected comdat type such as 'discard' or 'largest' after protection bits
expected comma in directive
conflicting section flags 'b' and 'd'.
unknown flag
one_only
same_size
same_contents
associative
largest
newest
unrecognized COMDAT type '
invalid '.secrel32' directive offset, can't be less than zero or greater than std::numeric_limits<uint32_t>::max()
cannot make section associative with .linkonce
section '
' is already linkonce
 in directive
invalid '.rva' directive offset, can't be less than -2147483648 or greater than 2147483647
you must specify one or both of @unwind or @except
a handler attribute must begin with '@'
expected @unwind or @except
.alt_entry
.desc
.indirect_symbol
.lsym
.subsections_via_symbols
.dump
.load
.pushsection
.popsection
.previous
.secure_log_unique
.secure_log_reset
.tbss
.zerofill
.data_region
.end_data_region
.const
.const_data
.constructor
.cstring
.destructor
.dyld
.fvmlib_init0
.fvmlib_init1
.lazy_symbol_pointer
.linker_option
.literal16
.literal4
.literal8
.mod_init_func
.mod_term_func
.non_lazy_symbol_pointer
.thread_local_variable_pointer
.objc_cat_cls_meth
.objc_cat_inst_meth
.objc_category
.objc_class
.objc_class_names
.objc_class_vars
.objc_cls_meth
.objc_cls_refs
.objc_inst_meth
.objc_instance_vars
.objc_message_refs
.objc_meta_class
.objc_meth_var_names
.objc_meth_var_types
.objc_module_info
.objc_protocol
.objc_selector_strs
.objc_string_object
.objc_symbols
.picsymbol_stub
.static_const
.static_data
.symbol_stub
.tdata
.thread_init_func
.tlv
.ident
.bridgeos_version_min
.watchos_version_min
.tvos_version_min
.ios_version_min
.macosx_version_min
.build_version
.ptrauth_abi_version
.ptrauth_kernel_abi_version
.alt_entry must preceed symbol definition
unexpected token in '.desc' directive
indirect symbol not in a symbol pointer or stub section
expected identifier in .indirect_symbol directive
non-local symbol required in directive
unable to emit indirect symbol attribute for: 
unexpected token in '.indirect_symbol' directive
unexpected token in '.lsym' directive
directive '.lsym' is unsupported
unexpected token in '.subsections_via_symbols' directive
expected string in '.dump' or '.load' directive
unexpected token in '.dump' or '.load' directive
ignoring directive .dump for now
ignoring directive .load for now
expected identifier after '.section' directive
unexpected token in '.section' directive
__textcoal_nt
__text
__const_coal
__datacoal_nt
__data
section "
" is deprecated
change section name to "
.popsection without corresponding .pushsection
.previous without corresponding .section
unexpected token in '.secure_log_unique' directive
.secure_log_unique specified multiple times
.secure_log_unique used but AS_SECURE_LOG_FILE environment variable unset.
can't open secure log file: 
unexpected token in '.secure_log_reset' directive
unexpected token in '.tbss' directive
invalid '.tbss' directive size, can't be less thanzero
invalid '.tbss' alignment, can't be lessthan zero
__thread_bss
expected segment name after '.zerofill' directive
expected section name after comma in '.zerofill' directive
unexpected token in '.zerofill' directive
invalid '.zerofill' directive size, can't be less than zero
invalid '.zerofill' directive alignment, can't be less than zero
expected region type after '.data_region' directive
unknown region type in '.data_region' directive
unexpected token in '.end_data_region' directive
__bss
__constructor
__cstring
__destructor
__dyld
__fvmlib_init0
__fvmlib_init1
__la_symbol_ptr
expected string in '
__literal16
__literal4
__literal8
__mod_init_func
__mod_term_func
__nl_symbol_ptr
__thread_ptr
__cat_cls_meth
__cat_inst_meth
__category
__class
__class_vars
__cls_meth
__cls_refs
__inst_meth
__instance_vars
__message_refs
__meta_class
__protocol
__selector_strs
__string_object
__symbols
__picsymbol_stub
__static_const
__static_data
__symbol_stub
__thread_data
__thread_init
__thread_vars
invalid OS update specifier, comma expected
OS update
 major version number, integer expected
 major version number
 minor version number required, comma expected
 minor version number, integer expected
 minor version number
 version number, integer expected
 version number
SDK subminor
 used while targeting 
overriding previous version directive
previous definition is here
 in '
platform name expected
unknown platform name
version number required, comma expected
 in '.build_version' directive
expected integer version in '.ptrauth_abi_version' directive
invalid ptrauth ABI version number
 in '.ptrauth_abi_version' directive
expected integer version in '.ptrauth_kernel_abi_version' directive
invalid ptrauth kernel ABI version number
 in '.ptrauth_kernel_abi_version' directive
.rodata
.data.rel
.data.rel.ro
.size
.symver
.version
.weakref
.local
.protected
.internal
.hidden
.subsection
.rodata.
.text.
.data.
.bss.
.init_array.
.fini_array.
.preinit_array.
.tdata.
.tbss.
Section cannot specifiy a group name while also acting as a member of the last group
Mergeable section must specify the type
Group section must specify the type
.note
init_array
fini_array
preinit_array
nobits
progbits
llvm_odrtab
llvm_linker_options
llvm_call_graph_profile
llvm_dependent_libraries
llvm_sympart
llvm_bb_addr_map
unknown section type
changed section type for 
, expected: 0x
changed section flags for 
changed section entsize for 
, expected: 
DWARF2 only supports one section per compilation unit
expected '@<type>', '%<type>' or "<type>"
expected '%<type>' or "<type>"
expected the entry size
entry size must be positive
expected group name
invalid group name
invalid linkage
Linkage must be 'comdat'
expected linked-to symbol
invalid linked-to symbol
linked-to symbol is not in a section: 
expected 'unique'
expected commma
unique id must be positive
unique id is too large
.debug_
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '%<type>' or "<type>"
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '@<type>', '%<type>' or "<type>"
expected symbol type in directive
unsupported attribute in '.type' directive
unexpected token in '.type' directive
unexpected token in '.ident' directive
expected a comma
expected a '@' in the name
expected 'remove'
unexpected token in '.version' directive
asm-macro-max-nesting-depth
The maximum nesting depth allowed for assembly macros.
expected newline
unexpected token
expected integer count in '.cg_profile' directive
expected string in directive, instead got: 
Only data sections can be passive
Expected 
, instead got: 
Expected label after .type directive, got: 
Expected label,@type declaration, got: 
Unknown WASM symbol type: 
.csect
XCOFFAsmParser directive not yet supported!
expected assembly-time absolute expression
invalid number of bytes
invalid .org offset '
' (at offset '
Fragment can't be larger than a bundle size
Padding cannot exceed 255 bytes
<stdin>
checksum_offset
as-secure-log-file-name
As secure log file name (initialized from AS_SECURE_LOG_FILE env variable)
AS_SECURE_LOG_FILE
Cannot initialize MC for non-Windows COFF object files.
Cannot initialize MC for unknown object file format.
._Renamed..
_Renamed..
invalid symbol name from source
section's multiply symbols policy does not match
Cannot find option named '
.section
inconsistent use of embedded source
0x%02llx
0x%04llx
0x%08llx
0x%016llx
<<invalid>>
<<none>>
DTPOFF
DTPREL
GOTOFF
GOTREL
PCREL
GOTPCREL
GOTTPOFF
INDNTPOFF
NTPOFF
GOTNTPOFF
TLSGD
TLSLD
TLSLDM
TPOFF
TPREL
tlscall
tlsdesc
TLVP
TLVPPAGE
TLVPPAGEOFF
PAGE
PAGEOFF
GOTPAGE
GOTPAGEOFF
SECREL32
SIZE
WEAKREF
ABS8
PLTOFF
GOT_PREL
target1
target2
prel31
sbrel
tlsldo
tlsdescseq
hlo8
diff8
diff16
diff32
high
higha
highera
highesta
got@l
got@h
got@ha
tocbase
toc@l
toc@h
toc@ha
dtpmod
tprel@l
tprel@h
tprel@ha
tprel@high
tprel@higha
tprel@higher
tprel@highera
tprel@highest
tprel@highesta
dtprel@l
dtprel@h
dtprel@ha
dtprel@high
dtprel@higha
dtprel@higher
dtprel@highera
dtprel@highest
dtprel@highesta
got@tprel
got@tprel@l
got@tprel@h
got@tprel@ha
got@dtprel
got@dtprel@l
got@dtprel@h
got@dtprel@ha
got@tlsgd
got@tlsgd@l
got@tlsgd@h
got@tlsgd@ha
got@tlsld
got@tlsld@l
got@tlsld@h
got@tlsld@ha
got@pcrel
got@tlsgd@pcrel
got@tlsld@pcrel
got@tprel@pcrel
tls@pcrel
tlsld
notoc
IMGREL
LO16
HI16
GPREL
GDGOT
LDGOT
GDPLT
LDPLT
IEGOT
TYPEINDEX
MBREL
TLSREL
TBREL
GOT@TLS
gotpcrel32@lo
gotpcrel32@hi
rel32@lo
rel32@hi
rel64
abs32@lo
abs32@hi
pc_hi
pc_lo
gotoff_hi
gotoff_lo
plt_hi
plt_lo
tls_gd_hi
tls_gd_lo
tpoff_hi
tpoff_lo
typeindex
unable to evaluate offset for variable '
unable to evaluate offset to undefined symbol '
__eh_frame
__ustring
__common
__gcc_except_tab
__LD
__compact_unwind
__DWARF
__debug_names
debug_names_begin
__apple_names
names_begin
__apple_objc
objc_begin
__apple_namespac
namespac_begin
__apple_types
types_begin
__debug_abbrev
section_abbrev
__debug_info
section_info
__debug_line
section_line
__debug_line_str
section_line_str
__debug_frame
__debug_pubnames
__debug_pubtypes
__debug_gnu_pubn
__debug_gnu_pubt
__debug_str
info_string
__debug_str_offs
section_str_off
__debug_addr
__debug_loc
section_debug_loc
__debug_loclists
__debug_aranges
__debug_ranges
debug_range
__debug_rnglists
__debug_macinfo
__debug_macro
debug_macro
__debug_inlined
__debug_cu_index
__debug_tu_index
__LLVM_STACKMAPS
__llvm_stackmaps
__LLVM_FAULTMAPS
__llvm_faultmaps
__remarks
.bss
.text
.rodata.cst4
.rodata.cst8
.rodata.cst16
.rodata.cst32
.gcc_except_table
.debug_abbrev
.debug_info
.debug_line
.debug_line_str
.debug_pubnames
.debug_pubtypes
.debug_gnu_pubnames
.debug_gnu_pubtypes
.debug_str
.debug_loc
.debug_aranges
.debug_ranges
.debug_macinfo
.debug_macro
.debug_names
.apple_names
.apple_objc
.apple_namespaces
.apple_types
.debug_str_offsets
.debug_addr
.debug_rnglists
.debug_loclists
.debug_info.dwo
.debug_types.dwo
.debug_abbrev.dwo
.debug_str.dwo
.debug_line.dwo
.debug_loc.dwo
.debug_str_offsets.dwo
.debug_rnglists.dwo
.debug_macinfo.dwo
.debug_macro.dwo
.debug_loclists.dwo
.debug_cu_index
.debug_tu_index
.llvm_stackmaps
.llvm_faultmaps
.stack_sizes
.pseudo_probe
.pseudo_probe_desc
.rdata
.debug$S
.debug$T
.debug$H
section_debug_loclists
debug_rnglists
debug_macinfo.dwo
debug_macro.dwo
section_info_dwo
section_types_dwo
section_abbrev_dwo
skel_string
skel_loc
section_str_off_dwo
addr_sec
.pdata
.xdata
.sxdata
.gehcont$y
.gfids$y
.giats$y
.gljmp$y
.tls$
.rodata.gcc_except_table
.rodata.8
.rodata.16
.eh_info_table
.dwabrev
.dwinfo
.dwline
.dwframe
.dwpbnms
.dwpbtyp
.dwstr
.dwloc
.dwarnge
.dwrnges
.dwmac
.section
.linkonce
IMAGE_SCN_CNT_UNINITIALIZED_DATA
,#alloc
,#execinstr
,#write
,#exclude
,#tls
0x7000001e
unsupported type 0x
 for section 
,comdat
,unique,
.subsection
SHT_NOBITS
0123456789_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
,none,
mach-o section specifier requires a segment and section separated by a comma
mach-o section specifier requires a section whose length is between 1 and 16 characters
mach-o section specifier uses an unknown section type
mach-o section specifier of type 'symbol_stubs' requires a size specifier
mach-o section specifier has invalid attribute
mach-o section specifier cannot have a stub size specified because it does not have type 'symbol_stubs'
mach-o section specifier has a malformed stub size
regular
S_REGULAR
S_ZEROFILL
cstring_literals
S_CSTRING_LITERALS
4byte_literals
S_4BYTE_LITERALS
8byte_literals
S_8BYTE_LITERALS
literal_pointers
S_LITERAL_POINTERS
non_lazy_symbol_pointers
S_NON_LAZY_SYMBOL_POINTERS
lazy_symbol_pointers
S_LAZY_SYMBOL_POINTERS
symbol_stubs
S_SYMBOL_STUBS
mod_init_funcs
S_MOD_INIT_FUNC_POINTERS
mod_term_funcs
S_MOD_TERM_FUNC_POINTERS
coalesced
S_COALESCED
S_GB_ZEROFILL
interposing
S_INTERPOSING
16byte_literals
S_16BYTE_LITERALS
S_DTRACE_DOF
S_LAZY_DYLIB_SYMBOL_POINTERS
thread_local_regular
S_THREAD_LOCAL_REGULAR
thread_local_zerofill
S_THREAD_LOCAL_ZEROFILL
thread_local_variables
S_THREAD_LOCAL_VARIABLES
thread_local_variable_pointers
S_THREAD_LOCAL_VARIABLE_POINTERS
thread_local_init_function_pointers
S_THREAD_LOCAL_INIT_FUNCTION_POINTERS
pure_instructions
S_ATTR_PURE_INSTRUCTIONS
no_toc
S_ATTR_NO_TOC
strip_static_syms
S_ATTR_STRIP_STATIC_SYMS
no_dead_strip
S_ATTR_NO_DEAD_STRIP
live_support
S_ATTR_LIVE_SUPPORT
self_modifying_code
S_ATTR_SELF_MODIFYING_CODE
S_ATTR_DEBUG
S_ATTR_SOME_INSTRUCTIONS
S_ATTR_EXT_RELOC
S_ATTR_LOC_RELOC
.csect 
Unhandled storage-mapping class for .text csect
Unhandled storage-mapping class for .rodata csect.
Unhandled storage-mapping class for .tdata csect.
.toc
Unhandled storage-mapping class for .data csect.
.dwsect 
0x%x
Printing for this SectionKind is unimplemented.
unsupported directive in streamer
line_table_start
this directive must appear between .cfi_startproc and .cfi_endproc directives
parent function id not introduced by .cv_func_id or .cv_inline_site_id
symbol '
starting new .cfi frame before finishing the previous one
.seh_* directives are not supported on this target
.seh_ directive must appear within an active frame
Starting a function before ending the previous one!
Not all chained regions terminated!
End of a chained region outside a chained region!
Chained unwind areas can't have handlers!
Don't know what kind of handler this is!
frame register and offset can be set at most once
offset is not a multiple of 16
frame offset must be less than or equal to 240
stack allocation size must be non-zero
stack allocation size is not a multiple of 8
register save offset is not 8 byte aligned
If present, PushMachFrame must be the first UOP
EmitRawText called on an MCStreamer that doesn't support it (target backend is likely missing an AsmStreamer implementation)
Unfinished frame!
DWARF64 Mark
_end
Symbol name with unsupported characters
Unable to find target for this triple (no targets are registered)
  Registered Targets:
    (none)
i386
x86_64
x86_64h
armv4t
armv6
armv5
armv7
armv7s
armv7k
armv6m
armv7m
armv7em
arm64
arm64e
arm64_32
arm64v8
unknown
[(empty)]
unknown
macOS
tvOS
watchOS
bridgeOS
macCatalyst
iOS Simulator
tvOS Simulator
watchOS Simulator
DriverKit
sepOS
macos
tvos
watchos
bridgeos
driverkit
sepos
darwin
-macabi
-simulator
static-func-full-module-prefix
Use full module build paths in the profile counter names for static functions.
static-func-strip-dirname-prefix
Strip specified level of directory name from source path in the profile counter name for static functions.
enable-name-compression
Enable name/filename string compression
,regular,live_support
__DATA,
__LLVM_COV,
.lprfd$M
.lprfc$M
.lprfn$M
.lprfv$M
.lprfnd$M
.lcovmap$M
.lcovfun$M
".lorderfile$M"
__llvm_prf_data
__llvm_prf_cnts
__llvm_prf_names
__llvm_prf_vals
__llvm_prf_vnds
__llvm_covmap
__llvm_covfun
__llvm_orderfile
end of File
unrecognized instrumentation profile encoding format
invalid instrumentation profile data (bad magic)
invalid instrumentation profile data (file header is corrupt)
unsupported instrumentation profile format version
unsupported instrumentation profile hash type
too much profile data
truncated profile data
malformed instrumentation profile data
invalid profile created. Please file a bug at: http://developer.apple.com/bugreporter/ and include the profraw files that caused this error.
no profile data available for function
function control flow change detected (hash mismatch)
function basic block count change detected (counter mismatch)
counter overflow
function value site count change detected (counter mismatch)
failed to compress data (zlib)
failed to uncompress data (zlib)
empty raw profile file
profile uses zlib compression but the profile reader was built without zlib support
llvm.instrprof
profile-summary-contextless
Merge context profiles before calculating thresholds.
profile-summary-cutoff-hot
A count is hot if it exceeds the minimum count to reach this percentile of total counts.
profile-summary-cutoff-cold
A count is cold if it is below the minimum count to reach this percentile of total counts.
profile-summary-huge-working-set-size-threshold
The code working set size is considered huge if the number of blocks required to reach the -profile-summary-cutoff-hot percentile exceeds this count.
profile-summary-large-working-set-size-threshold
The code working set size is considered large if the number of blocks required to reach the -profile-summary-cutoff-hot percentile exceeds this count.
profile-summary-hot-count
A fixed hot count that overrides the count derived from profile-summary-cutoff-hot
profile-summary-cold-count
A fixed cold count that overrides the count derived from profile-summary-cutoff-cold
profile-symbol-list-cutoff
Cutoff value about how many symbols in profile symbol list will be used. This is very useful for performance debugging
profile-isfs
Profile uses flow sensitive discriminators
export
*** HeaderSearch Stats:
 files tracked.
 #import/#pragma once files.
 included exactly once.
 max times a file is included.
 #include/#include_next/#import.
    
 #includes skipped due to the multi-include optimization.
 framework lookups.
 subframework lookups.
Private
.framework
.system_framework
Frameworks/
PrivateHeaders/
Modules
file-search
NumIncluded
Number of attempted #includes.
NumMultiIncludeFileOptzn
Number of #includes skipped due to the multi-include optimization.
NumFrameworkLookups
Number of framework lookups.
NumSubFrameworkLookups
Number of subframework lookups.
ident
<<<<
>>>>>>>
Allocation failed
MacroInfo 
 builtin
 disabled
 allow_redefinitions_without_warning
 warn_if_unused
 header_guard
    #define <macro>
DefMacroDirective
UndefMacroDirective
VisibilityMacroDirective
 from_pch
<global>
<private>
config_macros
conflict
exclude
export_as
textual
contents
framework 
module 
framework module
exhaustive
extern_c
no_undeclared_includes
system
swift_infer_import_as_member
register
_Generic
_Thread_local
concept
co_yield
_Sat
_Decimal32
_Decimal64
_Decimal128
__attribute
__builtin_choose_expr
__builtin_offsetof
__builtin_FILE
__builtin_FUNCTION
__builtin_LINE
__builtin_COLUMN
__builtin_types_compatible_p
__builtin_va_arg
__extension__
__label__
__thread
__FUNCDNAME__
__FUNCSIG__
L__FUNCTION__
L__FUNCSIG__
__is_trivially_destructible
__has_nothrow_move_assign
__has_trivial_move_assign
__has_trivial_move_constructor
__has_nothrow_assign
__has_nothrow_copy
__has_nothrow_constructor
__has_trivial_assign
__has_trivial_copy
__has_trivial_constructor
__has_trivial_destructor
__has_virtual_destructor
__is_literal_type
__has_unique_object_representations
__reference_binds_to_temporary
__array_rank
__array_extent
__is_same_as
__module_private__
__builtin_ptrauth_type_discriminator
__builtin_xnu_type_signature
__builtin_xnu_type_summary
__builtin_xnu_types_compatible
__builtin_tmo_type_get_metadata
__builtin_astype
vec_step
image1d_t
image1d_array_t
image1d_buffer_t
image2d_t
image2d_array_t
image2d_depth_t
image2d_array_depth_t
image2d_msaa_t
image2d_array_msaa_t
image2d_msaa_depth_t
image2d_array_msaa_depth_t
image3d_t
pipe
__builtin_omp_required_simd_align
__bool
__bridge_retain
__alignof__
__asm
__attribute__
__complex
__complex__
__const__
__decltype
__imag__
__inline
__inline__
__nullptr
__real__
__restrict__
__signed
__signed__
__typeof
__typeof__
__volatile
__volatile__
__w64
__uuidof
__try
__finally
__int8
_int8
__int16
_int16
_int32
_int64
_asm
_alignof
__builtin_alignof
_uuidof
_inline
_declspec
__builtin_convertvector
__char16_t
__char32_t
__unknown_anytype
.api
.spi
excluded
IOKit
hdrstop
__public_macro
__private_macro
_ATFILE_SOURCE
_BSD_SOURCE
_CRT_NONSTDC_NO_WARNINGS
_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES
_CRT_SECURE_NO_WARNINGS
_FILE_OFFSET_BITS
_FORTIFY_SOURCE
_GLIBCXX_ASSERTIONS
_GLIBCXX_CONCEPT_CHECKS
_GLIBCXX_DEBUG
_GLIBCXX_DEBUG_PEDANTIC
_GLIBCXX_PARALLEL
_GLIBCXX_PARALLEL_ASSERTIONS
_GLIBCXX_SANITIZE_VECTOR
_GLIBCXX_USE_CXX11_ABI
_GLIBCXX_USE_DEPRECATED
_GNU_SOURCE
_ISOC11_SOURCE
_ISOC95_SOURCE
_ISOC99_SOURCE
_LARGEFILE64_SOURCE
_POSIX_C_SOURCE
_REENTRANT
_SVID_SOURCE
_THREAD_SAFE
_XOPEN_SOURCE
_XOPEN_SOURCE_EXTENDED
__STDCPP_WANT_MATH_SPEC_FUNCS__
__STDC_FORMAT_MACROS
boost
assert.h
complex.h
ctype.h
errno.h
fenv.h
float.h
inttypes.h
iso646.h
limits.h
locale.h
math.h
signal.h
stdalign.h
stdarg.h
stdatomic.h
stdbool.h
stddef.h
stdint.h
stdnoreturn.h
string.h
threads.h
time.h
uchar.h
wchar.h
wctype.h
cassert
ccomplex
cctype
cerrno
cfenv
cfloat
cinttypes
ciso646
climits
clocale
csetjmp
csignal
cstdalign
cstdarg
cstdbool
cstddef
cstdint
cstdio
cstring
ctgmath
ctime
cuchar
cwchar
cwctype
algorithm
fstream
functional
locale
scoped_allocator
tuple
type_traits
bitset
shared_mutex
chrono
iomanip
sstream
typeinfo
codecvt
complex
iosfwd
numeric
stdexcept
condition_variable
iostream
ostream
streambuf
utility
istream
exception
strstream
limits
ratio
system_error
aio.h
arpa/inet.h
cpio.h
dirent.h
dlfcn.h
fcntl.h
fmtmsg.h
fnmatch.h
ftw.h
glob.h
grp.h
iconv.h
langinfo.h
libgen.h
monetary.h
mqueue.h
ndbm.h
net/if.h
netdb.h
netinet/in.h
netinet/tcp.h
nl_types.h
poll.h
pthread.h
pwd.h
regex.h
sched.h
search.h
semaphore.h
spawn.h
strings.h
stropts.h
sys/ipc.h
sys/mman.h
sys/msg.h
sys/resource.h
sys/select.h
sys/sem.h
sys/shm.h
sys/socket.h
sys/stat.h
sys/statvfs.h
sys/time.h
sys/times.h
sys/types.h
sys/uio.h
sys/un.h
sys/utsname.h
sys/wait.h
syslog.h
tar.h
termios.h
trace.h
ulimit.h
unistd.h
utime.h
utmpx.h
wordexp.h
'defined'
 to 
MacroState 
 ambiguous
 overrides
 ModuleMacro 
 undef
 active
 overridden
__LINE__
__FILE__
__DATE__
__TIME__
__COUNTER__
_Pragma
__has_cpp_attribute
__BASE_FILE__
__INCLUDE_LEVEL__
__TIMESTAMP__
__identifier
__pragma
__FILE_NAME__
__has_feature
__has_extension
__has_builtin
__has_attribute
__has_c_attribute
__has_declspec_attribute
__has_include
__has_include_next
__has_warning
__is_identifier
__is_target_arch
__is_target_vendor
__is_target_os
__is_target_environment
__has_target_variant
__is_target_variant_os
__is_target_variant_environment
__building_module
__MODULE__
??? ??? ?? ??:??:?? ????
"%s %2d %4d"
"%02d:%02d:%02d"
assume_nonnull
attribute_availability_with_message
attribute_availability_app_extension
attribute_availability_with_version_underscores
attribute_availability_with_strict
attribute_availability_with_replacement
attribute_availability_in_templates
attribute_cf_returns_not_retained
attribute_cf_returns_on_parameters
attribute_deprecated_with_message
attribute_deprecated_with_replacement
attribute_ns_returns_not_retained
attribute_unavailable_with_message
attribute_symbol_metadata_footnote
ptrauth_qualifier_authentication_mode
ptrauth_restricted_intptr_qualifier
ptrauth_vtable_pointer_address_discrimination
ptrauth_vtable_pointer_type_discrimination
ptrauth_member_function_pointer_type_discrimination
ptrauth_function_pointer_type_discrimination
objc_default_synthesize_properties
arc_cf_code_audited
cxx_decltype_incomplete_return_types
cxx_default_function_template_args
cxx_reference_qualified_functions
pragma_clang_attribute_namespaces
pragma_clang_attribute_external_declaration
statement_attributes_with_gnu_syntax
cxx_attributes_on_using_declarations
'__has_warning'
unknown-unknown-
clang
build
pragma hdrstop
endregion
pragma once
mark
push_macro
pop_macro
pragma message
pragma warning
pragma error
poison
system_header
dependency
diagnostic
pragma diagnostic
include_instead
crash
pragma crash
#pragma clang __debug llvm_fatal_error
 imported 
via pragma 
pragma clang __debug captured
 visible 
#pragma clang deprecated
restrict_expansion
#pragma clang restrict_expansion
execution_character_set
pragma execution_character_set
UTF-8
include_alias
__VA_OPT__
*** Preprocessor Stats:
 directives found:
 #define.
 #undef.
  #include/#include_next/#import:
 source files entered.
 max include stack depth
 #if/#ifndef/#ifdef.
 #else/#elif/#elifdef/#elifndef.
 #endif.
 #pragma.
 #if/#ifndef#ifdef regions skipped
 obj/fn/builtin macros expanded, 
 on the fast path.
 token paste (##) operations performed, 
Preprocessor Memory: 
B total
  BumpPtr: 
  Macro Expanded Tokens: 
  Predefines Buffer: 
  Macros: 
  #pragma push_macro Info: 
  Poison Reasons: 
  Comment Handlers: 
__gnu__
_Clang
clang
nv_weak
block
enum
enum_constant
field
function
function(is_member)
namespace
objc_category
objc_implementation
objc_interface
objc_method
objc_method(is_instance)
objc_property
objc_protocol
record
record(unless(is_union))
hasType
hasType(functionType)
type_alias
variable
variable(is_thread_local)
variable(is_global)
variable(is_local)
variable(is_parameter)
variable(unless(is_parameter))
_clang_arm_mve_strict_polymorphism
xclude_from_explicit_instantiation
bjc_arc_weak_reference_unavailable
lang::consumable_set_state_on_read
nu::no_profile_instrument_function
math.h
not a builtin function
__builtin_atan2
__builtin_atan2f
__builtin_atan2l
LdLdLd
__builtin_atan2f128
LLdLLdLLd
__builtin_abs
__builtin_copysign
__builtin_copysignf
__builtin_copysignf16
__builtin_copysignl
__builtin_copysignf128
__builtin_fabs
__builtin_fabsf
__builtin_fabsl
LdLd
__builtin_fabsf16
__builtin_fabsf128
LLdLLd
__builtin_fmod
__builtin_fmodf
__builtin_fmodf16
__builtin_fmodl
__builtin_fmodf128
__builtin_frexp
ddi*
__builtin_frexpf
ffi*
__builtin_frexpl
LdLdi*
__builtin_frexpf128
LLdLLdi*
__builtin_huge_val
__builtin_huge_valf
__builtin_huge_vall
__builtin_huge_valf128
__builtin_inf
__builtin_inff
__builtin_infl
__builtin_inff128
__builtin_labs
LiLi
__builtin_llabs
LLiLLi
__builtin_ldexp
__builtin_ldexpf
__builtin_ldexpl
LdLdi
__builtin_ldexpf128
LLdLLdi
__builtin_modf
ddd*
__builtin_modff
fff*
__builtin_modfl
LdLdLd*
__builtin_modff128
LLdLLdLLd*
__builtin_nan
dcC*
__builtin_nanf
fcC*
__builtin_nanl
LdcC*
__builtin_nanf128
LLdcC*
__builtin_nans
__builtin_nansf
__builtin_nansl
__builtin_nansf128
__builtin_powi
__builtin_powif
__builtin_powil
__builtin_pow
__builtin_powf
__builtin_powf16
__builtin_powl
__builtin_powf128
__builtin_acos
__builtin_acosf
__builtin_acosl
__builtin_acosf128
__builtin_acosh
__builtin_acoshf
__builtin_acoshl
__builtin_acoshf128
__builtin_asin
__builtin_asinf
__builtin_asinl
__builtin_asinf128
__builtin_asinh
__builtin_asinhf
__builtin_asinhl
__builtin_asinhf128
__builtin_atan
__builtin_atanf
__builtin_atanl
__builtin_atanf128
__builtin_atanh
__builtin_atanhf
__builtin_atanhl
__builtin_atanhf128
__builtin_cbrt
__builtin_cbrtf
__builtin_cbrtl
__builtin_cbrtf128
__builtin_ceil
__builtin_ceilf
__builtin_ceilf16
__builtin_ceill
__builtin_ceilf128
__builtin_cos
__builtin_cosf
__builtin_cosf16
__builtin_cosh
__builtin_coshf
__builtin_coshl
__builtin_coshf128
__builtin_cosl
__builtin_cosf128
__builtin_erf
__builtin_erff
__builtin_erfl
__builtin_erff128
__builtin_erfc
__builtin_erfcf
__builtin_erfcl
__builtin_erfcf128
__builtin_exp
__builtin_expf
__builtin_expf16
__builtin_expl
__builtin_expf128
__builtin_exp2
__builtin_exp2f
__builtin_exp2f16
__builtin_exp2l
__builtin_exp2f128
__builtin_expm1
__builtin_expm1f
__builtin_expm1l
__builtin_expm1f128
__builtin_fdim
__builtin_fdimf
__builtin_fdiml
__builtin_fdimf128
__builtin_floor
__builtin_floorf
__builtin_floorf16
__builtin_floorl
__builtin_floorf128
__builtin_fma
dddd
__builtin_fmaf
ffff
__builtin_fmaf16
hhhh
__builtin_fmal
LdLdLdLd
__builtin_fmaf128
LLdLLdLLdLLd
__builtin_fmax
__builtin_fmaxf
__builtin_fmaxf16
__builtin_fmaxl
__builtin_fmaxf128
__builtin_fmin
__builtin_fminf
__builtin_fminf16
__builtin_fminl
__builtin_fminf128
__builtin_hypot
__builtin_hypotf
__builtin_hypotl
__builtin_hypotf128
__builtin_ilogb
__builtin_ilogbf
__builtin_ilogbl
__builtin_ilogbf128
iLLd
__builtin_lgamma
__builtin_lgammaf
__builtin_lgammal
__builtin_lgammaf128
__builtin_llrint
LLid
__builtin_llrintf
LLif
__builtin_llrintl
LLiLd
__builtin_llrintf128
LLiLLd
__builtin_llround
__builtin_llroundf
__builtin_llroundl
__builtin_llroundf128
__builtin_log
__builtin_log10
__builtin_log10f
__builtin_log10f16
__builtin_log10l
__builtin_log10f128
__builtin_log1p
__builtin_log1pf
__builtin_log1pl
__builtin_log1pf128
__builtin_log2
__builtin_log2f
__builtin_log2f16
__builtin_log2l
__builtin_log2f128
__builtin_logb
__builtin_logbf
__builtin_logbl
__builtin_logbf128
__builtin_logf
__builtin_logf16
__builtin_logl
__builtin_logf128
__builtin_lrint
__builtin_lrintf
__builtin_lrintl
LiLd
__builtin_lrintf128
LiLLd
__builtin_lround
__builtin_lroundf
__builtin_lroundl
__builtin_lroundf128
__builtin_nearbyint
__builtin_nearbyintf
__builtin_nearbyintl
__builtin_nearbyintf128
__builtin_nextafter
__builtin_nextafterf
__builtin_nextafterl
__builtin_nextafterf128
__builtin_nexttoward
ddLd
__builtin_nexttowardf
ffLd
__builtin_nexttowardl
__builtin_nexttowardf128
__builtin_remainder
__builtin_remainderf
__builtin_remainderl
__builtin_remainderf128
__builtin_remquo
dddi*
__builtin_remquof
fffi*
__builtin_remquol
LdLdLdi*
__builtin_remquof128
LLdLLdLLdi*
__builtin_rint
__builtin_rintf
__builtin_rintf16
__builtin_rintl
__builtin_rintf128
__builtin_round
__builtin_roundf
__builtin_roundf16
__builtin_roundl
__builtin_roundf128
__builtin_scalbln
ddLi
__builtin_scalblnf
ffLi
__builtin_scalblnl
LdLdLi
__builtin_scalblnf128
LLdLLdLi
__builtin_scalbn
__builtin_scalbnf
__builtin_scalbnl
__builtin_scalbnf128
__builtin_sin
__builtin_sinf
__builtin_sinf16
__builtin_sinh
__builtin_sinhf
__builtin_sinhl
__builtin_sinhf128
__builtin_sinl
__builtin_sinf128
__builtin_sqrt
__builtin_sqrtf
__builtin_sqrtf16
__builtin_sqrtl
__builtin_sqrtf128
__builtin_tan
__builtin_tanf
__builtin_tanh
__builtin_tanhf
__builtin_tanhl
__builtin_tanhf128
__builtin_tanl
__builtin_tanf128
__builtin_tgamma
__builtin_tgammaf
__builtin_tgammal
__builtin_tgammaf128
__builtin_trunc
__builtin_truncf
__builtin_truncl
__builtin_truncf128
__builtin_truncf16
__builtin_flt_rounds
__builtin_cabs
__builtin_cabsf
__builtin_cabsl
LdXLd
__builtin_cacos
XdXd
__builtin_cacosf
XfXf
__builtin_cacosh
__builtin_cacoshf
__builtin_cacoshl
XLdXLd
__builtin_cacosl
__builtin_carg
__builtin_cargf
__builtin_cargl
__builtin_casin
__builtin_casinf
__builtin_casinh
__builtin_casinhf
__builtin_casinhl
__builtin_casinl
__builtin_catan
__builtin_catanf
__builtin_catanh
__builtin_catanhf
__builtin_catanhl
__builtin_catanl
__builtin_ccos
__builtin_ccosf
__builtin_ccosl
__builtin_ccosh
__builtin_ccoshf
__builtin_ccoshl
__builtin_cexp
__builtin_cexpf
__builtin_cexpl
__builtin_cimag
__builtin_cimagf
__builtin_cimagl
__builtin_conj
__builtin_conjf
__builtin_conjl
__builtin_clog
__builtin_clogf
__builtin_clogl
__builtin_cproj
__builtin_cprojf
__builtin_cprojl
__builtin_cpow
XdXdXd
__builtin_cpowf
XfXfXf
__builtin_cpowl
XLdXLdXLd
__builtin_creal
__builtin_crealf
__builtin_creall
__builtin_csin
__builtin_csinf
__builtin_csinl
__builtin_csinh
__builtin_csinhf
__builtin_csinhl
__builtin_csqrt
__builtin_csqrtf
__builtin_csqrtl
__builtin_ctan
__builtin_ctanf
__builtin_ctanl
__builtin_ctanh
__builtin_ctanhf
__builtin_ctanhl
__builtin_complex
__builtin_isgreater
Fnct
__builtin_isgreaterequal
__builtin_isless
__builtin_islessequal
__builtin_islessgreater
__builtin_isunordered
__builtin_fpclassify
iiiiii.
__builtin_isfinite
__builtin_isinf
__builtin_isinf_sign
__builtin_isnan
__builtin_isnormal
__builtin_signbit
__builtin_signbitf
__builtin_signbitl
__builtin_canonicalize
__builtin_canonicalizef
__builtin_canonicalizef16
__builtin_canonicalizel
__builtin_clzs
__builtin_clz
__builtin_clzl
iULi
__builtin_clzll
iULLi
__builtin_ctzs
__builtin_ctz
__builtin_ctzl
__builtin_ctzll
__builtin_ffs
__builtin_ffsl
__builtin_ffsll
iLLi
__builtin_parity
__builtin_parityl
__builtin_parityll
__builtin_popcount
__builtin_popcountl
__builtin_popcountll
__builtin_clrsb
__builtin_clrsbl
__builtin_clrsbll
__builtin_bswap16
UsUs
__builtin_bswap32
UZiUZi
__builtin_bswap64
UWiUWi
__builtin_bitreverse8
UcUc
__builtin_bitreverse16
__builtin_bitreverse32
__builtin_bitreverse64
__builtin_rotateleft8
UcUcUc
__builtin_rotateleft16
UsUsUs
__builtin_rotateleft32
UZiUZiUZi
__builtin_rotateleft64
UWiUWiUWi
__builtin_rotateright8
__builtin_rotateright16
__builtin_rotateright32
__builtin_rotateright64
__builtin_calloc
v*zz
__builtin_constant_p
nctu
__builtin_classify_type
__builtin___CFStringMakeConstantString
FC*cC*
__builtin___NSStringMakeConstantString
__builtin_va_start
__builtin_va_end
__builtin_va_copy
__builtin_stdarg_start
__builtin_assume_aligned
v*vC*z.
__builtin_bcmp
ivC*vC*z
__builtin_bcopy
vv*v*z
__builtin_bzero
vv*z
__builtin_fprintf
iP*cC*.
Fp:1:
__builtin_free
__builtin_malloc
__builtin_memchr
v*vC*iz
__builtin_memcmp
__builtin_memcpy
v*v*vC*z
__builtin_memcpy_inline
vv*vC*Iz
__builtin_memmove
__builtin_mempcpy
__builtin_memset
v*v*iz
__builtin_printf
icC*.
Fp:0:
__builtin_stpcpy
c*c*cC*
__builtin_stpncpy
c*c*cC*z
__builtin_strcasecmp
icC*cC*
__builtin_strcat
__builtin_strchr
c*cC*i
__builtin_strcmp
__builtin_strcpy
__builtin_strcspn
zcC*cC*
__builtin_strdup
c*cC*
__builtin_strlen
zcC*
__builtin_strncasecmp
icC*cC*z
__builtin_strncat
__builtin_strncmp
__builtin_strncpy
__builtin_strndup
c*cC*z
__builtin_strpbrk
c*cC*cC*
__builtin_strrchr
__builtin_strspn
__builtin_strstr
__builtin_wcschr
w*wC*w
__builtin_wcscmp
iwC*wC*
__builtin_wcslen
zwC*
__builtin_wcsncmp
iwC*wC*z
__builtin_wmemchr
w*wC*wz
__builtin_wmemcmp
__builtin_wmemcpy
w*w*wC*z
__builtin_wmemmove
__builtin_realloc
v*v*z
__builtin_return_address
v*IUi
__builtin_extract_return_addr
v*v*
__builtin_frame_address
__builtin___clear_cache
vc*c*
__builtin_setjmp
iv**
__builtin_longjmp
vv**i
__builtin_unwind_init
__builtin_eh_return_data_regno
__builtin_snprintf
ic*zcC*.
nFp:2:
__builtin_sprintf
ic*cC*.
nFP:1:
__builtin_vsnprintf
ic*zcC*a
nFP:2:
__builtin_vsprintf
ic*cC*a
__builtin_thread_pointer
__builtin_launder
__builtin_is_constant_evaluated
__builtin_get_vtable_pointer
__builtin_eh_return
vzv*
__builtin_frob_return_addr
__builtin_dwarf_cfa
__builtin_init_dwarf_reg_size_table
__builtin_dwarf_sp_column
__builtin_extend_pointer
ULLiv*
__builtin_object_size
zvC*i
__builtin_dynamic_object_size
__builtin___memcpy_chk
v*v*vC*zz
__builtin___memccpy_chk
v*v*vC*izz
__builtin___memmove_chk
__builtin___mempcpy_chk
__builtin___memset_chk
v*v*izz
__builtin___stpcpy_chk
__builtin___strcat_chk
__builtin___strcpy_chk
__builtin___strlcat_chk
zc*cC*zz
__builtin___strlcpy_chk
__builtin___strncat_chk
c*c*cC*zz
__builtin___strncpy_chk
__builtin___stpncpy_chk
__builtin___snprintf_chk
ic*zizcC*.
Fp:4:
__builtin___sprintf_chk
ic*izcC*.
Fp:3:
__builtin___vsnprintf_chk
ic*zizcC*a
FP:4:
__builtin___vsprintf_chk
ic*izcC*a
FP:3:
__builtin___fprintf_chk
iP*icC*.
Fp:2:
__builtin___printf_chk
iicC*.
__builtin___vfprintf_chk
iP*icC*a
FP:2:
__builtin___vprintf_chk
iicC*a
FP:1:
__builtin_unpredictable
__builtin_expect
LiLiLi
__builtin_expect_with_probability
LiLiLid
__builtin_prefetch
vvC*.
__builtin_readcyclecounter
ULLi
__builtin_trap
__builtin_debugtrap
__builtin_unreachable
__builtin_shufflevector
__builtin_convertvector
__builtin_alloca
__builtin_alloca_with_align
v*zIz
__builtin_call_with_static_chain
__builtin_elementwise_abs
__builtin_elementwise_max
__builtin_elementwise_min
__builtin_elementwise_add_sat
__builtin_elementwise_sub_sat
__builtin_reduce_max
__builtin_reduce_min
__builtin_matrix_transpose
__builtin_matrix_column_major_load
__builtin_matrix_column_major_store
__sync_fetch_and_add
__sync_fetch_and_add_1
ccD*c.
__sync_fetch_and_add_2
ssD*s.
__sync_fetch_and_add_4
iiD*i.
__sync_fetch_and_add_8
LLiLLiD*LLi.
__sync_fetch_and_add_16
LLLiLLLiD*LLLi.
__sync_fetch_and_sub
__sync_fetch_and_sub_1
__sync_fetch_and_sub_2
__sync_fetch_and_sub_4
__sync_fetch_and_sub_8
__sync_fetch_and_sub_16
__sync_fetch_and_or
__sync_fetch_and_or_1
__sync_fetch_and_or_2
__sync_fetch_and_or_4
__sync_fetch_and_or_8
__sync_fetch_and_or_16
__sync_fetch_and_and
__sync_fetch_and_and_1
__sync_fetch_and_and_2
__sync_fetch_and_and_4
__sync_fetch_and_and_8
__sync_fetch_and_and_16
__sync_fetch_and_xor
__sync_fetch_and_xor_1
__sync_fetch_and_xor_2
__sync_fetch_and_xor_4
__sync_fetch_and_xor_8
__sync_fetch_and_xor_16
__sync_fetch_and_nand
__sync_fetch_and_nand_1
__sync_fetch_and_nand_2
__sync_fetch_and_nand_4
__sync_fetch_and_nand_8
__sync_fetch_and_nand_16
__sync_add_and_fetch
__sync_add_and_fetch_1
__sync_add_and_fetch_2
__sync_add_and_fetch_4
__sync_add_and_fetch_8
__sync_add_and_fetch_16
__sync_sub_and_fetch
__sync_sub_and_fetch_1
__sync_sub_and_fetch_2
__sync_sub_and_fetch_4
__sync_sub_and_fetch_8
__sync_sub_and_fetch_16
__sync_or_and_fetch
__sync_or_and_fetch_1
__sync_or_and_fetch_2
__sync_or_and_fetch_4
__sync_or_and_fetch_8
__sync_or_and_fetch_16
__sync_and_and_fetch
__sync_and_and_fetch_1
__sync_and_and_fetch_2
__sync_and_and_fetch_4
__sync_and_and_fetch_8
__sync_and_and_fetch_16
__sync_xor_and_fetch
__sync_xor_and_fetch_1
__sync_xor_and_fetch_2
__sync_xor_and_fetch_4
__sync_xor_and_fetch_8
__sync_xor_and_fetch_16
__sync_nand_and_fetch
__sync_nand_and_fetch_1
__sync_nand_and_fetch_2
__sync_nand_and_fetch_4
__sync_nand_and_fetch_8
__sync_nand_and_fetch_16
__sync_bool_compare_and_swap
__sync_bool_compare_and_swap_1
bcD*cc.
__sync_bool_compare_and_swap_2
bsD*ss.
__sync_bool_compare_and_swap_4
biD*ii.
__sync_bool_compare_and_swap_8
bLLiD*LLiLLi.
__sync_bool_compare_and_swap_16
bLLLiD*LLLiLLLi.
__sync_val_compare_and_swap
__sync_val_compare_and_swap_1
ccD*cc.
__sync_val_compare_and_swap_2
ssD*ss.
__sync_val_compare_and_swap_4
iiD*ii.
__sync_val_compare_and_swap_8
LLiLLiD*LLiLLi.
__sync_val_compare_and_swap_16
LLLiLLLiD*LLLiLLLi.
__sync_lock_test_and_set
__sync_lock_test_and_set_1
__sync_lock_test_and_set_2
__sync_lock_test_and_set_4
__sync_lock_test_and_set_8
__sync_lock_test_and_set_16
__sync_lock_release
__sync_lock_release_1
vcD*.
__sync_lock_release_2
vsD*.
__sync_lock_release_4
viD*.
__sync_lock_release_8
vLLiD*.
__sync_lock_release_16
vLLLiD*.
__sync_swap
__sync_swap_1
__sync_swap_2
__sync_swap_4
__sync_swap_8
__sync_swap_16
__c11_atomic_init
__c11_atomic_load
__c11_atomic_store
__c11_atomic_exchange
__c11_atomic_compare_exchange_strong
__c11_atomic_compare_exchange_weak
__c11_atomic_fetch_add
__c11_atomic_fetch_sub
__c11_atomic_fetch_and
__c11_atomic_fetch_or
__c11_atomic_fetch_xor
__c11_atomic_fetch_max
__c11_atomic_fetch_min
__c11_atomic_thread_fence
__c11_atomic_signal_fence
__c11_atomic_is_lock_free
__atomic_load
__atomic_load_n
__atomic_store
__atomic_store_n
__atomic_exchange
__atomic_exchange_n
__atomic_compare_exchange
__atomic_compare_exchange_n
__atomic_fetch_add
__atomic_fetch_sub
__atomic_fetch_and
__atomic_fetch_or
__atomic_fetch_xor
__atomic_fetch_nand
__atomic_add_fetch
__atomic_sub_fetch
__atomic_and_fetch
__atomic_or_fetch
__atomic_xor_fetch
__atomic_max_fetch
__atomic_min_fetch
__atomic_nand_fetch
__atomic_test_and_set
bvD*i
__atomic_clear
vvD*i
__atomic_thread_fence
__atomic_signal_fence
__atomic_always_lock_free
bzvCD*
__atomic_is_lock_free
__opencl_atomic_init
__opencl_atomic_load
__opencl_atomic_store
__opencl_atomic_exchange
__opencl_atomic_compare_exchange_strong
__opencl_atomic_compare_exchange_weak
__opencl_atomic_fetch_add
__opencl_atomic_fetch_sub
__opencl_atomic_fetch_and
__opencl_atomic_fetch_or
__opencl_atomic_fetch_xor
__opencl_atomic_fetch_min
__opencl_atomic_fetch_max
__atomic_fetch_min
__atomic_fetch_max
__sync_synchronize
__sync_fetch_and_min
iiD*i
__sync_fetch_and_max
__sync_fetch_and_umin
UiUiD*Ui
__sync_fetch_and_umax
__builtin_abort
__builtin_index
__builtin_rindex
__warn_memset_zero_len
_alloca
__annotation
wC*.
__assume
_bittest
UcNiC*Ni
_bittestandcomplement
UcNi*Ni
_bittestandreset
_bittestandset
_bittest64
UcWiC*Wi
_bittestandcomplement64
UcWi*Wi
_bittestandreset64
_bittestandset64
_byteswap_ushort
stdlib.h
_byteswap_ulong
UNiUNi
_byteswap_uint64
ULLiULLi
__debugbreak
__exception_code
_exception_code
__exception_info
_exception_info
__abnormal_termination
_abnormal_termination
__GetExceptionInfo
_InterlockedAnd8
ccD*c
_InterlockedAnd16
ssD*s
_InterlockedAnd
NiNiD*Ni
_InterlockedCompareExchange8
ccD*cc
_InterlockedCompareExchange16
ssD*ss
_InterlockedCompareExchange
NiNiD*NiNi
_InterlockedCompareExchange64
LLiLLiD*LLiLLi
_InterlockedCompareExchangePointer
v*v*D*v*v*
_InterlockedCompareExchangePointer_nf
_InterlockedDecrement16
ssD*
_InterlockedDecrement
NiNiD*
_InterlockedExchange
_InterlockedExchange8
_InterlockedExchange16
_InterlockedExchangeAdd8
_InterlockedExchangeAdd16
_InterlockedExchangeAdd
_InterlockedExchangePointer
v*v*D*v*
_InterlockedExchangeSub8
_InterlockedExchangeSub16
_InterlockedExchangeSub
_InterlockedIncrement16
_InterlockedIncrement
_InterlockedOr8
_InterlockedOr16
_InterlockedOr
_InterlockedXor8
_InterlockedXor16
_InterlockedXor
_interlockedbittestandreset
UcNiD*Ni
_interlockedbittestandreset64
UcWiD*Wi
_interlockedbittestandreset_acq
_interlockedbittestandreset_nf
_interlockedbittestandreset_rel
_interlockedbittestandset
_interlockedbittestandset64
_interlockedbittestandset_acq
_interlockedbittestandset_nf
_interlockedbittestandset_rel
__iso_volatile_load8
ccCD*
__iso_volatile_load16
ssCD*
__iso_volatile_load32
iiCD*
__iso_volatile_load64
LLiLLiCD*
__iso_volatile_store8
vcD*c
__iso_volatile_store16
vsD*s
__iso_volatile_store32
viD*i
__iso_volatile_store64
vLLiD*LLi
__noop
__lzcnt16
__lzcnt
UiUi
__lzcnt64
__popcnt16
__popcnt
__popcnt64
_ReturnAddress
_rotl8
_rotl16
UsUsUc
_rotl
UiUii
_lrotl
UNiUNii
_rotl64
UWiUWii
_rotr8
_rotr16
_rotr
_lrotr
_rotr64
__va_start
vc**.
__fastfail
_setjmpex
setjmpex.h
va_start
stdarg.h
va_end
va_copy
abort
calloc
exit
_Exit
malloc
realloc
free
strtod
dcC*c**
strtof
fcC*c**
strtold
LdcC*c**
strtol
LicC*c**i
strtoll
LLicC*c**i
strtoul
ULicC*c**i
strtoull
ULLicC*c**i
aligned_alloc
memcpy
string.h
memcmp
memmove
strcpy
strncpy
strcmp
strncmp
strcat
strncat
strxfrm
zc*cC*z
memchr
strchr
strcspn
strpbrk
strrchr
strspn
strstr
strtok
memset
strerror
strlen
printf
fp:0:
stdio.h
fprintf
fp:1:
snprintf
fp:2:
sprintf
vprintf
icC*a
fP:0:
vfprintf
iP*cC*a
fP:1:
vsnprintf
fP:2:
vsprintf
scanf
icC*R.
fs:0:
fscanf
iP*RcC*R.
fs:1:
sscanf
icC*RcC*R.
vscanf
icC*Ra
fS:0:
vfscanf
iP*RcC*Ra
fS:1:
vsscanf
icC*RcC*Ra
fopen
P*cC*cC*
fread
zv*zzP*
fwrite
zvC*zzP*
isalnum
ctype.h
isalpha
isblank
iscntrl
isdigit
isgraph
islower
isprint
ispunct
isspace
isupper
isxdigit
tolower
toupper
wcschr
wchar.h
wcscmp
wcslen
wcsncmp
wmemchr
wmemcmp
wmemcpy
wmemmove
setjmp
setjmp.h
longjmp
alloca
memalign
malloc.h
memccpy
v*v*vC*iz
mempcpy
stpcpy
stpncpy
strdup
strndup
index
strings.h
rindex
bzero
bcmp
strcasecmp
strncasecmp
_exit
unistd.h
vfork
pthread_create
fC<2,3>
pthread.h
_setjmp
__sigsetjmp
iSJi
sigsetjmp
savectx
getcontext
_longjmp
siglongjmp
vSJi
strlcpy
strlcat
objc_msgSend
GGH.
objc/message.h
objc_msgSend_fpret
LdGH.
objc_msgSend_fp2ret
XLdGH.
objc_msgSend_stret
vGH.
objc_msgSendSuper
GM*H.
objc_msgSendSuper_stret
vM*H.
objc_getClass
GcC*
objc/runtime.h
objc_getMetaClass
objc_enumerationMutation
objc_read_weak
objc/objc-auto.h
objc_assign_weak
GGG*
objc_assign_ivar
GGGY
objc_assign_global
objc_assign_strongCast
objc_exception_extract
objc/objc-exception.h
objc_exception_try_enter
objc_exception_try_exit
objc_exception_match
objc_exception_throw
objc_sync_enter
objc/objc-sync.h
objc_sync_exit
__builtin_objc_memmove_collectable
NSLog
Foundation/NSObjCRuntime.h
NSLogv
atan2
atan2f
atan2l
labs
llabs
copysign
copysignf
copysignl
fabs
fabsf
fabsl
finite
finitef
finitel
__finite
__finitef
__finitel
fmod
fmodf
fmodl
frexp
frexpf
frexpl
ldexp
ldexpf
ldexpl
modf
modff
modfl
nanf
nanl
powf
powl
acos
acosf
acosl
acosh
acoshf
acoshl
asin
asinf
asinl
asinh
asinhf
asinhl
atan
atanf
atanl
atanh
atanhf
atanhl
cbrt
cbrtf
cbrtl
ceil
ceilf
ceill
cosf
cosl
cosh
coshf
coshl
erff
erfl
erfc
erfcf
erfcl
expf
expl
exp2
exp2f
exp2l
expm1
expm1f
expm1l
fdim
fdimf
fdiml
floor
floorf
floorl
fmaf
fmal
fmax
fmaxf
fmaxl
fmin
fminf
fminl
hypot
hypotf
hypotl
ilogb
ilogbf
ilogbl
lgamma
lgammaf
lgammal
llrint
llrintf
llrintl
llround
llroundf
llroundl
logf
logl
log10
log10f
log10l
log1p
log1pf
log1pl
log2
log2f
log2l
logb
logbf
logbl
lrint
lrintf
lrintl
lround
lroundf
lroundl
nearbyint
nearbyintf
nearbyintl
nextafter
nextafterf
nextafterl
nexttoward
nexttowardf
nexttowardl
remainder
remainderf
remainderl
remquo
remquof
remquol
rint
rintf
rintl
round
roundf
roundl
scalbln
scalblnf
scalblnl
scalbn
scalbnf
scalbnl
sinf
sinl
sinh
sinhf
sinhl
sqrt
sqrtf
sqrtl
tanf
tanl
tanh
tanhf
tanhl
tgamma
tgammaf
tgammal
trunc
truncf
truncl
cabs
complex.h
cabsf
cabsl
cacos
cacosf
cacosl
cacosh
cacoshf
cacoshl
carg
cargf
cargl
casin
casinf
casinl
casinh
casinhf
casinhl
catan
catanf
catanl
catanh
catanhf
catanhl
ccos
ccosf
ccosl
ccosh
ccoshf
ccoshl
cexp
cexpf
cexpl
cimag
cimagf
cimagl
conj
conjf
conjl
clog
clogf
clogl
cproj
cprojf
cprojl
cpow
cpowf
cpowl
creal
crealf
creall
csin
csinf
csinl
csinh
csinhf
csinhl
csqrt
csqrtf
csqrtl
ctan
ctanf
ctanl
ctanh
ctanhf
ctanhl
__sinpi
__sinpif
__cospi
__cospif
__tanpi
__tanpif
__exp10
__exp10f
_Block_object_assign
vv*vC*iC
Blocks.h
_Block_object_dispose
vvC*iC
__builtin_annotation
__builtin_assume
__builtin_addcb
UcUcCUcCUcCUc*
__builtin_addcs
UsUsCUsCUsCUs*
__builtin_addc
UiUiCUiCUiCUi*
__builtin_addcl
ULiULiCULiCULiCULi*
__builtin_addcll
ULLiULLiCULLiCULLiCULLi*
__builtin_subcb
__builtin_subcs
__builtin_subc
__builtin_subcl
__builtin_subcll
__builtin_add_overflow
__builtin_sub_overflow
__builtin_mul_overflow
__builtin_uadd_overflow
bUiCUiCUi*
__builtin_uaddl_overflow
bULiCULiCULi*
__builtin_uaddll_overflow
bULLiCULLiCULLi*
__builtin_usub_overflow
__builtin_usubl_overflow
__builtin_usubll_overflow
__builtin_umul_overflow
__builtin_umull_overflow
__builtin_umulll_overflow
__builtin_sadd_overflow
bSiCSiCSi*
__builtin_saddl_overflow
bSLiCSLiCSLi*
__builtin_saddll_overflow
bSLLiCSLLiCSLLi*
__builtin_ssub_overflow
__builtin_ssubl_overflow
__builtin_ssubll_overflow
__builtin_smul_overflow
__builtin_smull_overflow
__builtin_smulll_overflow
__builtin_addressof
v*v&
__builtin_operator_new
__builtin_operator_delete
__builtin_char_memchr
c*cC*iz
__builtin_dump_struct
ivC*v*
__builtin_preserve_access_index
__builtin_is_aligned
bvC*z
__builtin_align_up
v*vC*z
__builtin_align_down
__builtin___get_unsafe_stack_start
__builtin___get_unsafe_stack_bottom
__builtin___get_unsafe_stack_top
__builtin___get_unsafe_stack_ptr
__builtin_nontemporal_store
__builtin_nontemporal_load
__builtin_coro_resume
__builtin_coro_destroy
__builtin_coro_done
__builtin_coro_promise
v*v*IiIb
__builtin_coro_size
__builtin_coro_frame
__builtin_coro_noop
__builtin_coro_free
__builtin_coro_id
v*Iiv*v*v*
__builtin_coro_alloc
__builtin_coro_begin
__builtin_coro_end
bv*Ib
__builtin_coro_suspend
__builtin_coro_param
bv*v*
__builtin_ptrauth_strip
v*v*i
__builtin_ptrauth_blend_discriminator
zv*i
__builtin_ptrauth_sign_constant
v*v*iv*
__builtin_ptrauth_sign_unauthenticated
__builtin_ptrauth_sign_generic_data
zv*v*
__builtin_ptrauth_auth_and_resign
v*v*iv*iv*
__builtin_ptrauth_auth
__builtin_ptrauth_string_discriminator
__builtin_virtual_member_address
v*v*v*
__builtin_load_member_function_pointer
read_pipe
write_pipe
reserve_read_pipe
reserve_write_pipe
commit_write_pipe
commit_read_pipe
sub_group_reserve_read_pipe
sub_group_reserve_write_pipe
sub_group_commit_read_pipe
sub_group_commit_write_pipe
work_group_reserve_read_pipe
work_group_reserve_write_pipe
work_group_commit_read_pipe
work_group_commit_write_pipe
get_pipe_num_packets
get_pipe_max_packets
enqueue_kernel
get_kernel_work_group_size
get_kernel_preferred_work_group_size_multiple
get_kernel_max_sub_group_size_for_ndrange
get_kernel_sub_group_count_for_ndrange
to_global
to_local
to_private
__builtin_store_half
vdh*
__builtin_store_halff
vfh*
__builtin_load_half
dhC*
__builtin_load_halff
fhC*
__builtin_os_log_format_buffer_size
zcC*.
p:0:nut
__builtin_os_log_format
v*v*cC*.
p:0:nt
__builtin_get_device_side_mangled_name
cC*.
__xray_customevent
vcC*z
__xray_typedevent
vzcC*z
__builtin_ms_va_start
vc*&.
__builtin_ms_va_end
vc*&
__builtin_ms_va_copy
vc*&c*&
__arithmetic_fence
__builtin_tmo_type_get_size
__builtin_tmo_type_get_alignment
unknown
10.0
10.1
10.2
11.0
11.1
11.2
11.3
11.4
sm_20
compute_20
sm_21
sm_30
compute_30
sm_32
compute_32
sm_35
compute_35
sm_37
compute_37
sm_50
compute_50
sm_52
compute_52
sm_53
compute_53
sm_60
compute_60
sm_61
compute_61
sm_62
compute_62
sm_70
compute_70
sm_72
compute_72
sm_75
compute_75
sm_80
compute_80
sm_86
compute_86
gfx600
compute_amdgcn
gfx601
gfx602
gfx700
gfx701
gfx702
gfx703
gfx704
gfx705
gfx801
gfx802
gfx803
gfx805
gfx810
gfx900
gfx902
gfx904
gfx906
gfx908
gfx909
gfx90a
gfx90c
gfx1010
gfx1011
gfx1012
gfx1013
gfx1030
gfx1031
gfx1032
gfx1033
gfx1034
gfx1035
MaximumDeploymentTarget
VersionMap
macOS_iOSMac
iOSMac_macOS
SDKSettings.json
invalid SDKSettings.json
'nonnull'
'_Nonnull'
'nullable'
'_Nullable'
'null_unspecified'
'_Null_unspecified'
_Nullable_result
diagnostic state at 
<unknown 
 pragma
 no-error
 no-fatal
 overruled
<can't format argument>
File 
 <FileID 
 has_local_transitions
: state 
Lexical or Preprocessor Issue
Semantic Issue
Lambda Issue
Parse Issue
ARC Semantic Issue
ARC and @properties
ARC Casting Rules
ARC Parse Issue
ARC Weak References
ARC Restrictions
OpenMP Issue
Inline Assembly Issue
AST Deserialization Issue
Firebloom Pointer Attributes Issue
Modules Issue
Coroutines Issue
Concepts Issue
Dependency Directive Source Minimization Issue
Backend Issue
SourceMgr Reported Issue
Refactoring Continuation Issue
API Notes Issue
Related Result Type Issue
Rename Issue
AST Serialization Issue
Nullability Issue
Generics Issue
User-Defined Issue
Refactoring Invocation Issue
VTable ABI Issue
Value Conversion Issue
Documentation Issue
ARC Retain Cycle
Deprecations
Format String Issue
Cocoa API Issue
#pragma message Directive
Instrumentation Issue
Unused Entity Issue
__is_lvalue_expr
__is_rvalue_expr
*** File Manager Stats:
 real files found, 
 real dirs found.
 virtual files found, 
 virtual dirs found.
 dir lookups, 
 dir cache misses.
 file lookups, 
 file cache misses.
NumDirLookups
Number of directory lookups.
NumDirCacheMisses
Number of directory cache misses.
NumFileLookups
Number of file lookups.
NumFileCacheMisses
Number of file cache misses.
delete
and_eq
bitand
bitor
compl
not_eq
or_eq
xor_eq
co_await
_Nonnull
_Nullable
_Nullable_result
_Null_unspecified
not_keyword
defs
__ieee128
*** Identifier Table Stats:
# Identifiers:   %d
# Empty Buckets: %d
Hash density (#identifiers per bucket): %f
Ave identifier length: %f
Max identifier length: %d
<null selector>
dealloc
finalize
retainCount
initialize
performSelectorInBackground
performSelectorOnMainThread
stringByAppendingFormat
stringWithFormat
new[]
delete[]
nonnull
nullable
null_unspecified
C++ for OpenCL
OpenCL C
 version 
getLangStandardForKind() on unspecified kind
iso9899:199409
gnu89
gnu99
gnu11
gnu17
gnu2x
c++98
gnu++98
c++11
gnu++11
c++14
gnu++14
c++17
gnu++17
c++20
gnu++20
c++2b
gnu++2b
cl1.0
cl1.1
cl1.2
cl2.0
cl3.0
clc++1.0
clc++2021
cuda
ISO C 1990
ISO C 1990 with amendment 1
ISO C 1990 with GNU extensions
ISO C 1999
ISO C 1999 with GNU extensions
ISO C 2011
ISO C 2011 with GNU extensions
ISO C 2017
ISO C 2017 with GNU extensions
Working Draft for ISO C2x
Working Draft for ISO C2x with GNU extensions
ISO C++ 1998 with amendments
ISO C++ 1998 with amendments and GNU extensions
ISO C++ 2011 with amendments
ISO C++ 2011 with amendments and GNU extensions
ISO C++ 2014 with amendments
ISO C++ 2014 with amendments and GNU extensions
ISO C++ 2017 with amendments
ISO C++ 2017 with amendments and GNU extensions
ISO C++ 2020 DIS
ISO C++ 2020 DIS with GNU extensions
Working draft for ISO C++ 2023 DIS
Working draft for ISO C++ 2023 DIS with GNU extensions
OpenCL 1.0
OpenCL 1.1
OpenCL 1.2
OpenCL 2.0
OpenCL 3.0
C++ for OpenCL 1.0
C++ for OpenCL 2021
NVIDIA CUDA(tm)
_Builtin_stddef_max_align_t
ptrauth
explicit 
 [system]
 [extern_c]
 [swift_infer_import_as_member]
umbrella header "
umbrella "
config_macros 
[exhaustive]
textual 
private 
private textual 
exclude 
header "
" { size 
 mtime 
 size 
import 
use 
link 
conflict 
module * {
export *
macosx
macosx-fragile
watchos
bridgeos
gnustep
objfw
firstprivate
close
spread
primary
guided
monotonic
nonmonotonic
mutexinoutset
depobj
sink
uval
from
tofrom
present
ompx_hold
scalar
aggregate
seq_cst
acq_rel
relaxed
nohost
conditional
concurrent
ancestor
device_num
inscan
nothing
need_device_ptr
type
shift
undefined
undefined-trap
implicit-integer-truncation
implicit-integer-arithmetic-value-change
implicit-conversion
bounds
none
global
invalid
always
runtime
never
<invalid loc>
<invalid>
 <Spelling=
UTF-32 (BE)
UTF-32 (LE)
UTF-16 (BE)
UTF-16 (LE)
UTF-7
UTF-1
UTF-EBCDIC
SCSU
BOCU-1
GB-18030
<<<INVALID BUFFER>>
<<<<<INVALID SOURCE LOCATION>>>>>
<<<<INVALID BUFFER>>>>
<invalid loc>
<invalid buffer>
*** Source Manager Stats:
 files mapped, 
 mem buffers mapped.
 local SLocEntry's allocated (
 bytes of capacity), 
B of Sloc address space used.
 loaded SLocEntries allocated, 
 bytes of files mapped, 
 files with line #'s computed, 
 files with macro args computed.
FileID scans: 
 linear, 
 binary.
sramecc
xnack
mcount
cf-protection=branch
cf-protection=return
signed char
unsigned char
short
unsigned short
unsigned int
long int
long unsigned int
long long int
long long unsigned int
__tune_
__declspec(a)
__attribute__((a))
__attribute__((__
__))
e-m:e-p:32:32-i1:8:32-i8:8:32-i16:16:32-i32:32:32-f32:32:32-i64:32-f64:32-a:0:32-n32
e-m:e-p:32:32-i1:8:32-i8:8:32-i16:16:32-i64:32-f64:32-a:0:32-n32
e-m:e-p:32:32:32-a:0-n16:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f32:32:32-f64:64:64-v32:32:32-v64:64:64-v512:512:512-v1024:1024:1024-v2048:2048:2048
E-m:e-p:32:32-i64:64-a:0:32-n32-S64
e-P1-p:16:8-i8:8-i16:8-i32:8-i64:8-f32:8-f64:8-n8-a:8
E-m:e-p:64:64-i64:64-i128:128-n32:64-S128
e-m:e-p:64:64-i64:64-i128:128-n32:64-S128
e-m:e-p:16:16-i32:16-i64:16-f32:16-f64:16-a:8-n8:16-S16
e-m:e-v128:32-v16:16-v32:32-v96:32-n8:16:32:64-S128
E-m:o-p:32:32-f64:32:64-n32
mcount
E-m:a-p:32:32-i64:64-n32
e-m:e-p:32:32-i64:64-n32
E-m:e-p:32:32-i64:64-n32
u9__ieee128
power7
power8
pwr8
power9
pwr9
power10
pwr10
__TEXT,__StaticInit,regular,pure_instructions
_IBMR2
_POWER
__THW_BIG_ENDIAN__
_AIX
__TOS_AIX__
__HOS_AIX__
__STDC_NO_ATOMICS__
__STDC_NO_THREADS__
__EXTABI__
_AIX32
_AIX41
_AIX43
_AIX50
_AIX51
_AIX52
_AIX53
_AIX61
_AIX71
_AIX72
_AIX73
_LONG_LONG
__64BIT__
_WCHAR_T
E-m:o-i64:64-n32:64
E-m:a-i64:64-n32:64
e-m:e-i64:64-n32:64
E-m:e-i64:64-n32:64
-S128-v256:256:256-v512:512:512
e-m:e-p:32:32-i64:64-n32-S128
_mcount
e-m:e-p:64:64-i64:64-i128:128-n64-S128
E-m:e-p:32:32-i64:64-f128:64-n32-S64
e-m:e-p:32:32-i64:64-f128:64-n32-S64
E-m:e-i64:64-n32:64-S128
E-m:l-i1:8:16-i8:8:16-i64:64-f128:64-v128:64-a:8:16-n32:64
E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-a:8:16-n32:64
E-p:32:32:32-i1:8:8-i8:8:32-i16:16:32-i32:32:32-i64:32:32-f32:32:32-f64:32:32-v64:32:32-v128:32:32-v256:32:32-v512:32:32-v1024:32:32-a0:0:32-n32
e-p:32:32:32-i1:8:8-i8:8:32-i16:16:32-i32:32:32-i64:32:32-f32:32:32-f64:32:32-v64:32:32-v128:32:32-v256:32:32-v512:32:32-v1024:32:32-a0:0:32-n32
e-m:o-p:32:32-p270:32:32-p271:32:32-p272:64:64-f64:32:64-f80:128-n8:16:32-S128
e-m:o-p:32:32-p270:32:32-p271:32:32-p272:64:64-f64:32:64-f80:32-n8:16:32-S128
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-f64:32:64-f80:32-n8:16:32-S128
xmm0
~{dirflag},~{fpsr},~{flags}
avx512
no-mmx
avx512f
.text.startup
linux
__ELF__
__ANDROID__
__ANDROID_MIN_SDK_VERSION__
__ANDROID_API__
__gnu_linux__
__FLOAT128__
__mcount
__NetBSD__
__unix__
__OpenBSD__
e-m:x-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:32-n8:16:32-a:0:32-S32
_X86_
__CYGWIN__
__CYGWIN32__
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:32-n8:16:32-a:0:32-S32
_M_IX86
__HAIKU__
__INTEL__
__rtems__
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:32-f64:32-f128:32-n8:16:32-a:0:32-S32
__iamcu
__iamcu__
e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128
e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128
e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128
cx16
__x86_64__
__CYGWIN64__
_M_X64
_M_AMD64
e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024
e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024
u6__bf16
__CloudABI__
__STDC_ISO_10646__
201206L
.mcount
__FreeBSD__
__FreeBSD_cc_version
__KPRINTF_ATTRIBUTE__
__STDC_MB_MIGHT_NEQ_WC__
__Fuchsia__
__Fuchsia_API_level__
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-n8:16:32-S128
e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-i64:64-n8:16:32:64-S128
e-p:32:32-i64:64
__native_client__
~{$1}
cnmips
cnmipsp
+single-float
+micromips
+dsp
+dspr2
+msa
+nomadd4
m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64
m:e-p:32:32-i8:8:32-i16:16:32-i64:64-n32:64-S128
m:e-i8:8:32-i16:16:32-i64:64-n32:64-S128
$f10
$f11
$f12
$f13
$f14
$f15
$f16
$f17
$f18
$f19
$f20
$f21
$f22
$f23
$f24
$f25
$f26
$f27
$f28
$f29
$f30
$f31
$fcc0
$fcc1
$fcc2
$fcc3
$fcc4
$fcc5
$fcc6
$fcc7
$ac1hi
$ac1lo
$ac2hi
$ac2lo
$ac3hi
$ac3lo
$w10
$w11
$w12
$w13
$w14
$w15
$w16
$w17
$w18
$w19
$w20
$w21
$w22
$w23
$w24
$w25
$w26
$w27
$w28
$w29
$w30
$w31
$msair
$msacsr
$msaaccess
$msasave
$msamodify
$msarequest
$msamap
$msaunmap
E-m:e-p:32:32-i64:64-n32:64
__PPC__
__PPU__
__CELLOS_LV2__
__LP32__
_ARCH_PPC64
__powerpc64__
__svr4__
__SVR4
__C99FEATURES__
_LARGEFILE_SOURCE
__EXTENSIONS__
transactional-execution
vector-enhancements-1
vector-enhancements-2
nnp-assist
E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-v128:64-a:8:16-n32:64
_OPEN_DEFAULT
_UNIX03_WITHDRAWN
__370__
__BFP__
__BOOL__
__LONGNAME__
__MVS__
__THW_370__
__TOS_390__
__TOS_MVS__
__XPLINK__
__DLL__
_MI_BUILTIN
_EXT
__Ananas__
__DragonFly__
__DragonFly_cc_version
100001
__tune_i386__
__FreeBSD_kernel__
__GLIBC__
__minix
_EM_WSIZE
_EM_PSIZE
_EM_SSIZE
_EM_LSIZE
_EM_FSIZE
_EM_DSIZE
__GNU__
__gnu_hurd__
__MACH__
900001
__SCE__
__ORBIS__
e-m:e-p:32:32-p10:8:8-p20:8:8-i64:64-f128:64-n32:64-S128-ni:1:10:20
e-m:e-p:32:32-p10:8:8-p20:8:8-i64:64-n32:64-S128-ni:1:10:20
__wasi__
__EMSCRIPTEN__
__EMSCRIPTEN_PTHREADS__
e-m:e-p:64:64-p10:8:8-p20:8:8-i64:64-f128:64-n32:64-S128-ni:1:10:20
e-m:e-p:64:64-p10:8:8-p20:8:8-i64:64-n32:64-S128-ni:1:10:20
e-m:e-i64:64-n32:64-S128-v64:64:64-v128:64:64-v256:64:64-v512:64:64-v1024:64:64-v2048:64:64-v4096:64:64-v8192:64:64-v16384:64:64
sx10
sx11
sx12
sx13
sx14
sx15
sx16
sx17
sx18
sx19
sx20
sx21
sx22
sx23
sx24
sx25
sx26
sx27
sx28
sx29
sx30
sx31
sx32
sx33
sx34
sx35
sx36
sx37
sx38
sx39
sx40
sx41
sx42
sx43
sx44
sx45
sx46
sx47
sx48
sx49
sx50
sx51
sx52
sx53
sx54
sx55
sx56
sx57
sx58
sx59
sx60
sx61
sx62
sx63
outer
info
__builtin_neon___a32_vcvt_bf16_v
V8ScV16Sci
__builtin_neon___a64_vcvtq_low_bf16_v
V16ScV16Sci
__builtin_neon_splat_lane_v
V8ScV8ScIii
__builtin_neon_splat_laneq_v
V8ScV16ScIii
__builtin_neon_splatq_lane_v
V16ScV8ScIii
__builtin_neon_splatq_laneq_v
V16ScV16ScIii
__builtin_neon_vabd_v
V8ScV8ScV8Sci
__builtin_neon_vabdd_f64
__builtin_neon_vabdq_v
V16ScV16ScV16Sci
__builtin_neon_vabds_f32
__builtin_neon_vabs_v
V8ScV8Sci
__builtin_neon_vabsd_s64
WiWi
__builtin_neon_vabsq_v
__builtin_neon_vadd_v
__builtin_neon_vaddd_s64
WiWiWi
__builtin_neon_vaddd_u64
UWiUWiUWi
__builtin_neon_vaddhn_v
V8ScV16ScV16Sci
__builtin_neon_vaddlv_s16
iV4s
__builtin_neon_vaddlv_s32
WiV2i
__builtin_neon_vaddlv_s8
sV8Sc
__builtin_neon_vaddlv_u16
UiV4Us
__builtin_neon_vaddlv_u32
UWiV2Ui
__builtin_neon_vaddlv_u8
UsV8Uc
__builtin_neon_vaddlvq_s16
iV8s
__builtin_neon_vaddlvq_s32
WiV4i
__builtin_neon_vaddlvq_s8
sV16Sc
__builtin_neon_vaddlvq_u16
UiV8Us
__builtin_neon_vaddlvq_u32
UWiV4Ui
__builtin_neon_vaddlvq_u8
UsV16Uc
__builtin_neon_vaddq_p128
ULLLiULLLiULLLi
__builtin_neon_vaddq_v
__builtin_neon_vaddv_f32
fV2f
__builtin_neon_vaddv_s16
sV4s
__builtin_neon_vaddv_s32
iV2i
__builtin_neon_vaddv_s8
ScV8Sc
__builtin_neon_vaddv_u16
UsV4Us
__builtin_neon_vaddv_u32
UiV2Ui
__builtin_neon_vaddv_u8
UcV8Uc
__builtin_neon_vaddvq_f32
fV4f
__builtin_neon_vaddvq_f64
dV2d
__builtin_neon_vaddvq_s16
sV8s
__builtin_neon_vaddvq_s32
iV4i
__builtin_neon_vaddvq_s64
WiV2Wi
__builtin_neon_vaddvq_s8
ScV16Sc
__builtin_neon_vaddvq_u16
UsV8Us
__builtin_neon_vaddvq_u32
UiV4Ui
__builtin_neon_vaddvq_u64
UWiV2UWi
__builtin_neon_vaddvq_u8
UcV16Uc
__builtin_neon_vaesdq_v
__builtin_neon_vaeseq_v
__builtin_neon_vaesimcq_v
__builtin_neon_vaesmcq_v
__builtin_neon_vbcaxq_v
V16ScV16ScV16ScV16Sci
__builtin_neon_vbfdot_v
V8ScV8ScV8ScV8Sci
__builtin_neon_vbfdotq_v
__builtin_neon_vbfmlalbq_v
__builtin_neon_vbfmlaltq_v
__builtin_neon_vbfmmlaq_v
__builtin_neon_vbsl_v
__builtin_neon_vbslq_v
__builtin_neon_vcadd_rot270_v
__builtin_neon_vcadd_rot90_v
__builtin_neon_vcaddq_rot270_v
__builtin_neon_vcaddq_rot90_v
__builtin_neon_vcage_v
__builtin_neon_vcaged_f64
UWidd
__builtin_neon_vcageq_v
__builtin_neon_vcages_f32
Uiff
__builtin_neon_vcagt_v
__builtin_neon_vcagtd_f64
__builtin_neon_vcagtq_v
__builtin_neon_vcagts_f32
__builtin_neon_vcale_v
__builtin_neon_vcaled_f64
__builtin_neon_vcaleq_v
__builtin_neon_vcales_f32
__builtin_neon_vcalt_v
__builtin_neon_vcaltd_f64
__builtin_neon_vcaltq_v
__builtin_neon_vcalts_f32
__builtin_neon_vceqd_f64
__builtin_neon_vceqd_s64
UWiWiWi
__builtin_neon_vceqd_u64
__builtin_neon_vceqs_f32
__builtin_neon_vceqz_v
__builtin_neon_vceqzd_f64
UWid
__builtin_neon_vceqzd_s64
UWiWi
__builtin_neon_vceqzd_u64
UWiUWi
__builtin_neon_vceqzq_v
__builtin_neon_vceqzs_f32
__builtin_neon_vcged_f64
__builtin_neon_vcged_s64
__builtin_neon_vcged_u64
__builtin_neon_vcges_f32
__builtin_neon_vcgez_v
__builtin_neon_vcgezd_f64
__builtin_neon_vcgezd_s64
__builtin_neon_vcgezq_v
__builtin_neon_vcgezs_f32
__builtin_neon_vcgtd_f64
__builtin_neon_vcgtd_s64
__builtin_neon_vcgtd_u64
__builtin_neon_vcgts_f32
__builtin_neon_vcgtz_v
__builtin_neon_vcgtzd_f64
__builtin_neon_vcgtzd_s64
__builtin_neon_vcgtzq_v
__builtin_neon_vcgtzs_f32
__builtin_neon_vcled_f64
__builtin_neon_vcled_s64
__builtin_neon_vcled_u64
__builtin_neon_vcles_f32
__builtin_neon_vclez_v
__builtin_neon_vclezd_f64
__builtin_neon_vclezd_s64
__builtin_neon_vclezq_v
__builtin_neon_vclezs_f32
__builtin_neon_vcls_v
__builtin_neon_vclsq_v
__builtin_neon_vcltd_f64
__builtin_neon_vcltd_s64
__builtin_neon_vcltd_u64
__builtin_neon_vclts_f32
__builtin_neon_vcltz_v
__builtin_neon_vcltzd_f64
__builtin_neon_vcltzd_s64
__builtin_neon_vcltzq_v
__builtin_neon_vcltzs_f32
__builtin_neon_vclz_v
__builtin_neon_vclzq_v
__builtin_neon_vcmla_rot180_v
__builtin_neon_vcmla_rot270_v
__builtin_neon_vcmla_rot90_v
__builtin_neon_vcmla_v
__builtin_neon_vcmlaq_rot180_v
__builtin_neon_vcmlaq_rot270_v
__builtin_neon_vcmlaq_rot90_v
__builtin_neon_vcmlaq_v
__builtin_neon_vcnt_v
__builtin_neon_vcntq_v
__builtin_neon_vcvt_f16_f32
__builtin_neon_vcvt_f16_v
__builtin_neon_vcvt_f32_f16
V16ScV8Sci
__builtin_neon_vcvt_f32_f64
__builtin_neon_vcvt_f32_v
__builtin_neon_vcvt_f64_f32
__builtin_neon_vcvt_f64_v
__builtin_neon_vcvt_n_f16_v
__builtin_neon_vcvt_n_f32_v
__builtin_neon_vcvt_n_f64_v
__builtin_neon_vcvt_n_s16_v
__builtin_neon_vcvt_n_s32_v
__builtin_neon_vcvt_n_s64_v
__builtin_neon_vcvt_n_u16_v
__builtin_neon_vcvt_n_u32_v
__builtin_neon_vcvt_n_u64_v
__builtin_neon_vcvt_s16_v
__builtin_neon_vcvt_s32_v
__builtin_neon_vcvt_s64_v
__builtin_neon_vcvt_u16_v
__builtin_neon_vcvt_u32_v
__builtin_neon_vcvt_u64_v
__builtin_neon_vcvta_s16_v
__builtin_neon_vcvta_s32_v
__builtin_neon_vcvta_s64_v
__builtin_neon_vcvta_u16_v
__builtin_neon_vcvta_u32_v
__builtin_neon_vcvta_u64_v
__builtin_neon_vcvtad_s64_f64
__builtin_neon_vcvtad_u64_f64
__builtin_neon_vcvtaq_s16_v
__builtin_neon_vcvtaq_s32_v
__builtin_neon_vcvtaq_s64_v
__builtin_neon_vcvtaq_u16_v
__builtin_neon_vcvtaq_u32_v
__builtin_neon_vcvtaq_u64_v
__builtin_neon_vcvtas_s32_f32
__builtin_neon_vcvtas_u32_f32
__builtin_neon_vcvtd_f64_s64
__builtin_neon_vcvtd_f64_u64
dUWi
__builtin_neon_vcvtd_n_f64_s64
dWiIi
__builtin_neon_vcvtd_n_f64_u64
dUWiIi
__builtin_neon_vcvtd_n_s64_f64
WidIi
__builtin_neon_vcvtd_n_u64_f64
UWidIi
__builtin_neon_vcvtd_s64_f64
__builtin_neon_vcvtd_u64_f64
__builtin_neon_vcvth_bf16_f32
__builtin_neon_vcvtm_s16_v
__builtin_neon_vcvtm_s32_v
__builtin_neon_vcvtm_s64_v
__builtin_neon_vcvtm_u16_v
__builtin_neon_vcvtm_u32_v
__builtin_neon_vcvtm_u64_v
__builtin_neon_vcvtmd_s64_f64
__builtin_neon_vcvtmd_u64_f64
__builtin_neon_vcvtmq_s16_v
__builtin_neon_vcvtmq_s32_v
__builtin_neon_vcvtmq_s64_v
__builtin_neon_vcvtmq_u16_v
__builtin_neon_vcvtmq_u32_v
__builtin_neon_vcvtmq_u64_v
__builtin_neon_vcvtms_s32_f32
__builtin_neon_vcvtms_u32_f32
__builtin_neon_vcvtn_s16_v
__builtin_neon_vcvtn_s32_v
__builtin_neon_vcvtn_s64_v
__builtin_neon_vcvtn_u16_v
__builtin_neon_vcvtn_u32_v
__builtin_neon_vcvtn_u64_v
__builtin_neon_vcvtnd_s64_f64
__builtin_neon_vcvtnd_u64_f64
__builtin_neon_vcvtnq_s16_v
__builtin_neon_vcvtnq_s32_v
__builtin_neon_vcvtnq_s64_v
__builtin_neon_vcvtnq_u16_v
__builtin_neon_vcvtnq_u32_v
__builtin_neon_vcvtnq_u64_v
__builtin_neon_vcvtns_s32_f32
__builtin_neon_vcvtns_u32_f32
__builtin_neon_vcvtp_s16_v
__builtin_neon_vcvtp_s32_v
__builtin_neon_vcvtp_s64_v
__builtin_neon_vcvtp_u16_v
__builtin_neon_vcvtp_u32_v
__builtin_neon_vcvtp_u64_v
__builtin_neon_vcvtpd_s64_f64
__builtin_neon_vcvtpd_u64_f64
__builtin_neon_vcvtpq_s16_v
__builtin_neon_vcvtpq_s32_v
__builtin_neon_vcvtpq_s64_v
__builtin_neon_vcvtpq_u16_v
__builtin_neon_vcvtpq_u32_v
__builtin_neon_vcvtpq_u64_v
__builtin_neon_vcvtps_s32_f32
__builtin_neon_vcvtps_u32_f32
__builtin_neon_vcvtq_f16_v
__builtin_neon_vcvtq_f32_v
__builtin_neon_vcvtq_f64_v
__builtin_neon_vcvtq_high_bf16_v
__builtin_neon_vcvtq_n_f16_v
__builtin_neon_vcvtq_n_f32_v
__builtin_neon_vcvtq_n_f64_v
__builtin_neon_vcvtq_n_s16_v
__builtin_neon_vcvtq_n_s32_v
__builtin_neon_vcvtq_n_s64_v
__builtin_neon_vcvtq_n_u16_v
__builtin_neon_vcvtq_n_u32_v
__builtin_neon_vcvtq_n_u64_v
__builtin_neon_vcvtq_s16_v
__builtin_neon_vcvtq_s32_v
__builtin_neon_vcvtq_s64_v
__builtin_neon_vcvtq_u16_v
__builtin_neon_vcvtq_u32_v
__builtin_neon_vcvtq_u64_v
__builtin_neon_vcvts_f32_s32
__builtin_neon_vcvts_f32_u32
__builtin_neon_vcvts_n_f32_s32
fiIi
__builtin_neon_vcvts_n_f32_u32
fUiIi
__builtin_neon_vcvts_n_s32_f32
ifIi
__builtin_neon_vcvts_n_u32_f32
UifIi
__builtin_neon_vcvts_s32_f32
__builtin_neon_vcvts_u32_f32
__builtin_neon_vcvtx_f32_v
__builtin_neon_vcvtxd_f32_f64
__builtin_neon_vdot_v
__builtin_neon_vdotq_v
__builtin_neon_vdupb_lane_i8
UcV8ScIi
__builtin_neon_vdupb_laneq_i8
UcV16ScIi
__builtin_neon_vdupd_lane_f64
dV1dIi
__builtin_neon_vdupd_lane_i64
UWiV1WiIi
__builtin_neon_vdupd_laneq_f64
dV2dIi
__builtin_neon_vdupd_laneq_i64
UWiV2WiIi
__builtin_neon_vduph_lane_bf16
yV4yIi
__builtin_neon_vduph_lane_f16
hV4hIi
__builtin_neon_vduph_lane_i16
UsV4sIi
__builtin_neon_vduph_laneq_bf16
yV8yIi
__builtin_neon_vduph_laneq_f16
hV8hIi
__builtin_neon_vduph_laneq_i16
UsV8sIi
__builtin_neon_vdups_lane_f32
fV2fIi
__builtin_neon_vdups_lane_i32
UiV2iIi
__builtin_neon_vdups_laneq_f32
fV4fIi
__builtin_neon_vdups_laneq_i32
UiV4iIi
__builtin_neon_veor3q_v
__builtin_neon_vext_v
V8ScV8ScV8ScIii
__builtin_neon_vextq_v
V16ScV16ScV16ScIii
__builtin_neon_vfma_lane_v
V8ScV8ScV8ScV8ScIii
__builtin_neon_vfma_laneq_v
V8ScV8ScV8ScV16ScIii
__builtin_neon_vfma_v
__builtin_neon_vfmad_lane_f64
dddV1dIi
__builtin_neon_vfmad_laneq_f64
dddV2dIi
__builtin_neon_vfmah_lane_f16
hhhV4hIi
__builtin_neon_vfmah_laneq_f16
hhhV8hIi
__builtin_neon_vfmaq_lane_v
V16ScV16ScV16ScV8ScIii
__builtin_neon_vfmaq_laneq_v
V16ScV16ScV16ScV16ScIii
__builtin_neon_vfmaq_v
__builtin_neon_vfmas_lane_f32
fffV2fIi
__builtin_neon_vfmas_laneq_f32
fffV4fIi
__builtin_neon_vfmlal_high_v
__builtin_neon_vfmlal_low_v
__builtin_neon_vfmlalq_high_v
__builtin_neon_vfmlalq_low_v
__builtin_neon_vfmlsl_high_v
__builtin_neon_vfmlsl_low_v
__builtin_neon_vfmlslq_high_v
__builtin_neon_vfmlslq_low_v
__builtin_neon_vget_lane_bf16
__builtin_neon_vget_lane_f32
__builtin_neon_vget_lane_f64
__builtin_neon_vget_lane_i16
__builtin_neon_vget_lane_i32
__builtin_neon_vget_lane_i64
__builtin_neon_vget_lane_i8
__builtin_neon_vgetq_lane_bf16
__builtin_neon_vgetq_lane_f32
__builtin_neon_vgetq_lane_f64
__builtin_neon_vgetq_lane_i16
__builtin_neon_vgetq_lane_i32
__builtin_neon_vgetq_lane_i64
__builtin_neon_vgetq_lane_i8
__builtin_neon_vhadd_v
__builtin_neon_vhaddq_v
__builtin_neon_vhsub_v
__builtin_neon_vhsubq_v
__builtin_neon_vld1_dup_v
V8ScvC*i
__builtin_neon_vld1_lane_v
V8ScvC*V8ScIii
__builtin_neon_vld1_v
__builtin_neon_vld1_x2_v
vv*vC*i
__builtin_neon_vld1_x3_v
__builtin_neon_vld1_x4_v
__builtin_neon_vld1q_dup_v
V16ScvC*i
__builtin_neon_vld1q_lane_v
V16ScvC*V16ScIii
__builtin_neon_vld1q_v
__builtin_neon_vld1q_x2_v
__builtin_neon_vld1q_x3_v
__builtin_neon_vld1q_x4_v
__builtin_neon_vld2_dup_v
__builtin_neon_vld2_lane_v
vv*vC*V8ScV8ScIii
__builtin_neon_vld2_v
__builtin_neon_vld2q_dup_v
__builtin_neon_vld2q_lane_v
vv*vC*V16ScV16ScIii
__builtin_neon_vld2q_v
__builtin_neon_vld3_dup_v
__builtin_neon_vld3_lane_v
vv*vC*V8ScV8ScV8ScIii
__builtin_neon_vld3_v
__builtin_neon_vld3q_dup_v
__builtin_neon_vld3q_lane_v
vv*vC*V16ScV16ScV16ScIii
__builtin_neon_vld3q_v
__builtin_neon_vld4_dup_v
__builtin_neon_vld4_lane_v
vv*vC*V8ScV8ScV8ScV8ScIii
__builtin_neon_vld4_v
__builtin_neon_vld4q_dup_v
__builtin_neon_vld4q_lane_v
vv*vC*V16ScV16ScV16ScV16ScIii
__builtin_neon_vld4q_v
__builtin_neon_vldrq_p128
ULLLivC*
__builtin_neon_vmax_v
__builtin_neon_vmaxnm_v
__builtin_neon_vmaxnmq_v
__builtin_neon_vmaxnmv_f16
hV8Sc
__builtin_neon_vmaxnmv_f32
__builtin_neon_vmaxnmvq_f16
hV16Sc
__builtin_neon_vmaxnmvq_f32
__builtin_neon_vmaxnmvq_f64
__builtin_neon_vmaxq_v
__builtin_neon_vmaxv_f16
__builtin_neon_vmaxv_f32
__builtin_neon_vmaxv_s16
__builtin_neon_vmaxv_s32
__builtin_neon_vmaxv_s8
__builtin_neon_vmaxv_u16
__builtin_neon_vmaxv_u32
__builtin_neon_vmaxv_u8
__builtin_neon_vmaxvq_f16
__builtin_neon_vmaxvq_f32
__builtin_neon_vmaxvq_f64
__builtin_neon_vmaxvq_s16
__builtin_neon_vmaxvq_s32
__builtin_neon_vmaxvq_s8
__builtin_neon_vmaxvq_u16
__builtin_neon_vmaxvq_u32
__builtin_neon_vmaxvq_u8
__builtin_neon_vmin_v
__builtin_neon_vminnm_v
__builtin_neon_vminnmq_v
__builtin_neon_vminnmv_f16
__builtin_neon_vminnmv_f32
__builtin_neon_vminnmvq_f16
__builtin_neon_vminnmvq_f32
__builtin_neon_vminnmvq_f64
__builtin_neon_vminq_v
__builtin_neon_vminv_f16
__builtin_neon_vminv_f32
__builtin_neon_vminv_s16
__builtin_neon_vminv_s32
__builtin_neon_vminv_s8
__builtin_neon_vminv_u16
__builtin_neon_vminv_u32
__builtin_neon_vminv_u8
__builtin_neon_vminvq_f16
__builtin_neon_vminvq_f32
__builtin_neon_vminvq_f64
__builtin_neon_vminvq_s16
__builtin_neon_vminvq_s32
__builtin_neon_vminvq_s8
__builtin_neon_vminvq_u16
__builtin_neon_vminvq_u32
__builtin_neon_vminvq_u8
__builtin_neon_vmmlaq_v
__builtin_neon_vmovl_v
__builtin_neon_vmovn_v
__builtin_neon_vmul_lane_v
__builtin_neon_vmul_laneq_v
V8ScV8ScV16ScIii
__builtin_neon_vmul_n_f64
V1dV1dd
__builtin_neon_vmul_v
__builtin_neon_vmull_p64
ULLLiUWiUWi
__builtin_neon_vmull_v
V16ScV8ScV8Sci
__builtin_neon_vmulq_v
__builtin_neon_vmulx_v
__builtin_neon_vmulxd_f64
__builtin_neon_vmulxh_lane_f16
hhV4hIi
__builtin_neon_vmulxh_laneq_f16
hhV8hIi
__builtin_neon_vmulxq_v
__builtin_neon_vmulxs_f32
__builtin_neon_vnegd_s64
__builtin_neon_vpadal_v
__builtin_neon_vpadalq_v
__builtin_neon_vpadd_v
__builtin_neon_vpaddd_f64
__builtin_neon_vpaddd_s64
__builtin_neon_vpaddd_u64
__builtin_neon_vpaddl_v
__builtin_neon_vpaddlq_v
__builtin_neon_vpaddq_v
__builtin_neon_vpadds_f32
__builtin_neon_vpmax_v
__builtin_neon_vpmaxnm_v
__builtin_neon_vpmaxnmq_v
__builtin_neon_vpmaxnmqd_f64
__builtin_neon_vpmaxnms_f32
__builtin_neon_vpmaxq_v
__builtin_neon_vpmaxqd_f64
__builtin_neon_vpmaxs_f32
__builtin_neon_vpmin_v
__builtin_neon_vpminnm_v
__builtin_neon_vpminnmq_v
__builtin_neon_vpminnmqd_f64
__builtin_neon_vpminnms_f32
__builtin_neon_vpminq_v
__builtin_neon_vpminqd_f64
__builtin_neon_vpmins_f32
__builtin_neon_vqabs_v
__builtin_neon_vqabsb_s8
ScSc
__builtin_neon_vqabsd_s64
__builtin_neon_vqabsh_s16
__builtin_neon_vqabsq_v
__builtin_neon_vqabss_s32
__builtin_neon_vqadd_v
__builtin_neon_vqaddb_s8
ScScSc
__builtin_neon_vqaddb_u8
UcUcUc
__builtin_neon_vqaddd_s64
__builtin_neon_vqaddd_u64
__builtin_neon_vqaddh_s16
__builtin_neon_vqaddh_u16
UsUsUs
__builtin_neon_vqaddq_v
__builtin_neon_vqadds_s32
__builtin_neon_vqadds_u32
UiUiUi
__builtin_neon_vqdmlal_v
V16ScV16ScV8ScV8Sci
__builtin_neon_vqdmlalh_lane_s16
iisV4sIi
__builtin_neon_vqdmlalh_laneq_s16
iisV8sIi
__builtin_neon_vqdmlalh_s16
iiss
__builtin_neon_vqdmlals_lane_s32
WiWiiV2iIi
__builtin_neon_vqdmlals_laneq_s32
WiWiiV4iIi
__builtin_neon_vqdmlals_s32
WiWiii
__builtin_neon_vqdmlsl_v
__builtin_neon_vqdmlslh_lane_s16
__builtin_neon_vqdmlslh_laneq_s16
__builtin_neon_vqdmlslh_s16
__builtin_neon_vqdmlsls_lane_s32
__builtin_neon_vqdmlsls_laneq_s32
__builtin_neon_vqdmlsls_s32
__builtin_neon_vqdmulh_lane_v
__builtin_neon_vqdmulh_laneq_v
__builtin_neon_vqdmulh_v
__builtin_neon_vqdmulhh_s16
__builtin_neon_vqdmulhq_lane_v
V16ScV16ScV8ScIii
__builtin_neon_vqdmulhq_laneq_v
__builtin_neon_vqdmulhq_v
__builtin_neon_vqdmulhs_s32
__builtin_neon_vqdmull_v
__builtin_neon_vqdmullh_s16
__builtin_neon_vqdmulls_s32
Wiii
__builtin_neon_vqmovn_v
__builtin_neon_vqmovnd_s64
__builtin_neon_vqmovnd_u64
UiUWi
__builtin_neon_vqmovnh_s16
__builtin_neon_vqmovnh_u16
UcUs
__builtin_neon_vqmovns_s32
__builtin_neon_vqmovns_u32
UsUi
__builtin_neon_vqmovun_v
__builtin_neon_vqmovund_s64
UiWi
__builtin_neon_vqmovunh_s16
__builtin_neon_vqmovuns_s32
__builtin_neon_vqneg_v
__builtin_neon_vqnegb_s8
__builtin_neon_vqnegd_s64
__builtin_neon_vqnegh_s16
__builtin_neon_vqnegq_v
__builtin_neon_vqnegs_s32
__builtin_neon_vqrdmulh_lane_v
__builtin_neon_vqrdmulh_laneq_v
__builtin_neon_vqrdmulh_v
__builtin_neon_vqrdmulhh_s16
__builtin_neon_vqrdmulhq_lane_v
__builtin_neon_vqrdmulhq_laneq_v
__builtin_neon_vqrdmulhq_v
__builtin_neon_vqrdmulhs_s32
__builtin_neon_vqrshl_v
__builtin_neon_vqrshlb_s8
__builtin_neon_vqrshlb_u8
UcUcSc
__builtin_neon_vqrshld_s64
__builtin_neon_vqrshld_u64
UWiUWiWi
__builtin_neon_vqrshlh_s16
__builtin_neon_vqrshlh_u16
UsUss
__builtin_neon_vqrshlq_v
__builtin_neon_vqrshls_s32
__builtin_neon_vqrshls_u32
UiUii
__builtin_neon_vqrshrn_n_v
__builtin_neon_vqrshrnd_n_s64
iWiIi
__builtin_neon_vqrshrnd_n_u64
UiUWiIi
__builtin_neon_vqrshrnh_n_s16
ScsIi
__builtin_neon_vqrshrnh_n_u16
UcUsIi
__builtin_neon_vqrshrns_n_s32
siIi
__builtin_neon_vqrshrns_n_u32
UsUiIi
__builtin_neon_vqrshrun_n_v
__builtin_neon_vqrshrund_n_s64
__builtin_neon_vqrshrunh_n_s16
__builtin_neon_vqrshruns_n_s32
__builtin_neon_vqshl_n_v
__builtin_neon_vqshl_v
__builtin_neon_vqshlb_n_s8
ScScIi
__builtin_neon_vqshlb_n_u8
UcUcIi
__builtin_neon_vqshlb_s8
__builtin_neon_vqshlb_u8
__builtin_neon_vqshld_n_s64
WiWiIi
__builtin_neon_vqshld_n_u64
UWiUWiIi
__builtin_neon_vqshld_s64
__builtin_neon_vqshld_u64
__builtin_neon_vqshlh_n_s16
ssIi
__builtin_neon_vqshlh_n_u16
UsUsIi
__builtin_neon_vqshlh_s16
__builtin_neon_vqshlh_u16
__builtin_neon_vqshlq_n_v
__builtin_neon_vqshlq_v
__builtin_neon_vqshls_n_s32
iiIi
__builtin_neon_vqshls_n_u32
UiUiIi
__builtin_neon_vqshls_s32
__builtin_neon_vqshls_u32
__builtin_neon_vqshlu_n_v
__builtin_neon_vqshlub_n_s8
__builtin_neon_vqshlud_n_s64
__builtin_neon_vqshluh_n_s16
__builtin_neon_vqshluq_n_v
__builtin_neon_vqshlus_n_s32
__builtin_neon_vqshrn_n_v
__builtin_neon_vqshrnd_n_s64
__builtin_neon_vqshrnd_n_u64
__builtin_neon_vqshrnh_n_s16
__builtin_neon_vqshrnh_n_u16
__builtin_neon_vqshrns_n_s32
__builtin_neon_vqshrns_n_u32
__builtin_neon_vqshrun_n_v
__builtin_neon_vqshrund_n_s64
__builtin_neon_vqshrunh_n_s16
__builtin_neon_vqshruns_n_s32
__builtin_neon_vqsub_v
__builtin_neon_vqsubb_s8
__builtin_neon_vqsubb_u8
__builtin_neon_vqsubd_s64
__builtin_neon_vqsubd_u64
__builtin_neon_vqsubh_s16
__builtin_neon_vqsubh_u16
__builtin_neon_vqsubq_v
__builtin_neon_vqsubs_s32
__builtin_neon_vqsubs_u32
__builtin_neon_vqtbl1_v
V8ScV16ScV8Sci
__builtin_neon_vqtbl1q_v
__builtin_neon_vqtbl2_v
V8ScV16ScV16ScV8Sci
__builtin_neon_vqtbl2q_v
__builtin_neon_vqtbl3_v
V8ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbl3q_v
V16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vqtbl4_v
V8ScV16ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbl4q_v
V16ScV16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vqtbx1_v
V8ScV8ScV16ScV8Sci
__builtin_neon_vqtbx1q_v
__builtin_neon_vqtbx2_v
V8ScV8ScV16ScV16ScV8Sci
__builtin_neon_vqtbx2q_v
__builtin_neon_vqtbx3_v
V8ScV8ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbx3q_v
__builtin_neon_vqtbx4_v
V8ScV8ScV16ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbx4q_v
V16ScV16ScV16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vraddhn_v
__builtin_neon_vrax1q_v
__builtin_neon_vrbit_v
__builtin_neon_vrbitq_v
__builtin_neon_vrecpe_v
__builtin_neon_vrecped_f64
__builtin_neon_vrecpeq_v
__builtin_neon_vrecpes_f32
__builtin_neon_vrecps_v
__builtin_neon_vrecpsd_f64
__builtin_neon_vrecpsq_v
__builtin_neon_vrecpss_f32
__builtin_neon_vrecpxd_f64
__builtin_neon_vrecpxs_f32
__builtin_neon_vrhadd_v
__builtin_neon_vrhaddq_v
__builtin_neon_vrnd32x_v
__builtin_neon_vrnd32xq_v
__builtin_neon_vrnd32z_v
__builtin_neon_vrnd32zq_v
__builtin_neon_vrnd64x_v
__builtin_neon_vrnd64xq_v
__builtin_neon_vrnd64z_v
__builtin_neon_vrnd64zq_v
__builtin_neon_vrnd_v
__builtin_neon_vrnda_v
__builtin_neon_vrndaq_v
__builtin_neon_vrndi_v
__builtin_neon_vrndiq_v
__builtin_neon_vrndm_v
__builtin_neon_vrndmq_v
__builtin_neon_vrndn_v
__builtin_neon_vrndnq_v
__builtin_neon_vrndns_f32
__builtin_neon_vrndp_v
__builtin_neon_vrndpq_v
__builtin_neon_vrndq_v
__builtin_neon_vrndx_v
__builtin_neon_vrndxq_v
__builtin_neon_vrshl_v
__builtin_neon_vrshld_s64
__builtin_neon_vrshld_u64
__builtin_neon_vrshlq_v
__builtin_neon_vrshr_n_v
__builtin_neon_vrshrd_n_s64
__builtin_neon_vrshrd_n_u64
__builtin_neon_vrshrn_n_v
__builtin_neon_vrshrq_n_v
__builtin_neon_vrsqrte_v
__builtin_neon_vrsqrted_f64
__builtin_neon_vrsqrteq_v
__builtin_neon_vrsqrtes_f32
__builtin_neon_vrsqrts_v
__builtin_neon_vrsqrtsd_f64
__builtin_neon_vrsqrtsq_v
__builtin_neon_vrsqrtss_f32
__builtin_neon_vrsra_n_v
__builtin_neon_vrsrad_n_s64
WiWiWiIi
__builtin_neon_vrsrad_n_u64
UWiUWiUWiIi
__builtin_neon_vrsraq_n_v
__builtin_neon_vrsubhn_v
__builtin_neon_vset_lane_bf16
V4yyV4yIi
__builtin_neon_vset_lane_f32
V2ffV2fIi
__builtin_neon_vset_lane_f64
V1ddV1dIi
__builtin_neon_vset_lane_i16
V4ssV4sIi
__builtin_neon_vset_lane_i32
V2iiV2iIi
__builtin_neon_vset_lane_i64
V1WiWiV1WiIi
__builtin_neon_vset_lane_i8
V8ScScV8ScIi
__builtin_neon_vsetq_lane_bf16
V8yyV8yIi
__builtin_neon_vsetq_lane_f32
V4ffV4fIi
__builtin_neon_vsetq_lane_f64
V2ddV2dIi
__builtin_neon_vsetq_lane_i16
V8ssV8sIi
__builtin_neon_vsetq_lane_i32
V4iiV4iIi
__builtin_neon_vsetq_lane_i64
V2WiWiV2WiIi
__builtin_neon_vsetq_lane_i8
V16ScScV16ScIi
__builtin_neon_vsha1cq_u32
V4iV4UiUiV4Ui
__builtin_neon_vsha1h_u32
UiUi
__builtin_neon_vsha1mq_u32
__builtin_neon_vsha1pq_u32
__builtin_neon_vsha1su0q_v
__builtin_neon_vsha1su1q_v
__builtin_neon_vsha256h2q_v
__builtin_neon_vsha256hq_v
__builtin_neon_vsha256su0q_v
__builtin_neon_vsha256su1q_v
__builtin_neon_vsha512h2q_v
__builtin_neon_vsha512hq_v
__builtin_neon_vsha512su0q_v
__builtin_neon_vsha512su1q_v
__builtin_neon_vshl_n_v
__builtin_neon_vshl_v
__builtin_neon_vshld_n_s64
__builtin_neon_vshld_n_u64
__builtin_neon_vshld_s64
__builtin_neon_vshld_u64
__builtin_neon_vshll_n_v
__builtin_neon_vshlq_n_v
__builtin_neon_vshlq_v
__builtin_neon_vshr_n_v
__builtin_neon_vshrd_n_s64
__builtin_neon_vshrd_n_u64
__builtin_neon_vshrn_n_v
__builtin_neon_vshrq_n_v
__builtin_neon_vsli_n_v
__builtin_neon_vslid_n_s64
__builtin_neon_vslid_n_u64
__builtin_neon_vsliq_n_v
__builtin_neon_vsm3partw1q_v
__builtin_neon_vsm3partw2q_v
__builtin_neon_vsm3ss1q_v
__builtin_neon_vsm3tt1aq_v
__builtin_neon_vsm3tt1bq_v
__builtin_neon_vsm3tt2aq_v
__builtin_neon_vsm3tt2bq_v
__builtin_neon_vsm4ekeyq_v
__builtin_neon_vsm4eq_v
__builtin_neon_vsqadd_v
__builtin_neon_vsqaddb_u8
__builtin_neon_vsqaddd_u64
__builtin_neon_vsqaddh_u16
__builtin_neon_vsqaddq_v
__builtin_neon_vsqadds_u32
__builtin_neon_vsqrt_v
__builtin_neon_vsqrtq_v
__builtin_neon_vsra_n_v
__builtin_neon_vsrad_n_s64
__builtin_neon_vsrad_n_u64
__builtin_neon_vsraq_n_v
__builtin_neon_vsri_n_v
__builtin_neon_vsrid_n_s64
__builtin_neon_vsrid_n_u64
__builtin_neon_vsriq_n_v
__builtin_neon_vst1_lane_v
vv*V8ScIii
__builtin_neon_vst1_v
vv*V8Sci
__builtin_neon_vst1_x2_v
vv*V8ScV8Sci
__builtin_neon_vst1_x3_v
vv*V8ScV8ScV8Sci
__builtin_neon_vst1_x4_v
vv*V8ScV8ScV8ScV8Sci
__builtin_neon_vst1q_lane_v
vv*V16ScIii
__builtin_neon_vst1q_v
vv*V16Sci
__builtin_neon_vst1q_x2_v
vv*V16ScV16Sci
__builtin_neon_vst1q_x3_v
vv*V16ScV16ScV16Sci
__builtin_neon_vst1q_x4_v
vv*V16ScV16ScV16ScV16Sci
__builtin_neon_vst2_lane_v
vv*V8ScV8ScIii
__builtin_neon_vst2_v
__builtin_neon_vst2q_lane_v
vv*V16ScV16ScIii
__builtin_neon_vst2q_v
__builtin_neon_vst3_lane_v
vv*V8ScV8ScV8ScIii
__builtin_neon_vst3_v
__builtin_neon_vst3q_lane_v
vv*V16ScV16ScV16ScIii
__builtin_neon_vst3q_v
__builtin_neon_vst4_lane_v
vv*V8ScV8ScV8ScV8ScIii
__builtin_neon_vst4_v
__builtin_neon_vst4q_lane_v
vv*V16ScV16ScV16ScV16ScIii
__builtin_neon_vst4q_v
__builtin_neon_vstrq_p128
vv*ULLLi
__builtin_neon_vsubd_s64
__builtin_neon_vsubd_u64
__builtin_neon_vsubhn_v
__builtin_neon_vtbl1_v
__builtin_neon_vtbl2_v
__builtin_neon_vtbl3_v
V8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtbl4_v
V8ScV8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtbx1_v
__builtin_neon_vtbx2_v
__builtin_neon_vtbx3_v
__builtin_neon_vtbx4_v
V8ScV8ScV8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtrn_v
__builtin_neon_vtrnq_v
__builtin_neon_vtst_v
__builtin_neon_vtstd_s64
__builtin_neon_vtstd_u64
__builtin_neon_vtstq_v
__builtin_neon_vuqadd_v
__builtin_neon_vuqaddb_s8
ScScUc
__builtin_neon_vuqaddd_s64
WiWiUWi
__builtin_neon_vuqaddh_s16
ssUs
__builtin_neon_vuqaddq_v
__builtin_neon_vuqadds_s32
iiUi
__builtin_neon_vusdot_v
__builtin_neon_vusdotq_v
__builtin_neon_vusmmlaq_v
__builtin_neon_vuzp_v
__builtin_neon_vuzpq_v
__builtin_neon_vxarq_v
__builtin_neon_vzip_v
__builtin_neon_vzipq_v
__builtin_neon_vabdh_f16
__builtin_neon_vabsh_f16
__builtin_neon_vaddh_f16
__builtin_neon_vcageh_f16
Ushh
__builtin_neon_vcagth_f16
__builtin_neon_vcaleh_f16
__builtin_neon_vcalth_f16
__builtin_neon_vceqh_f16
__builtin_neon_vceqzh_f16
__builtin_neon_vcgeh_f16
__builtin_neon_vcgezh_f16
__builtin_neon_vcgth_f16
__builtin_neon_vcgtzh_f16
__builtin_neon_vcleh_f16
__builtin_neon_vclezh_f16
__builtin_neon_vclth_f16
__builtin_neon_vcltzh_f16
__builtin_neon_vcvtah_s16_f16
__builtin_neon_vcvtah_s32_f16
__builtin_neon_vcvtah_s64_f16
__builtin_neon_vcvtah_u16_f16
__builtin_neon_vcvtah_u32_f16
__builtin_neon_vcvtah_u64_f16
UWih
__builtin_neon_vcvth_f16_s16
__builtin_neon_vcvth_f16_s32
__builtin_neon_vcvth_f16_s64
__builtin_neon_vcvth_f16_u16
__builtin_neon_vcvth_f16_u32
__builtin_neon_vcvth_f16_u64
hUWi
__builtin_neon_vcvth_n_f16_s16
hsIi
__builtin_neon_vcvth_n_f16_s32
hiIi
__builtin_neon_vcvth_n_f16_s64
hWiIi
__builtin_neon_vcvth_n_f16_u16
hUsIi
__builtin_neon_vcvth_n_f16_u32
hUiIi
__builtin_neon_vcvth_n_f16_u64
hUWiIi
__builtin_neon_vcvth_n_s16_f16
shIi
__builtin_neon_vcvth_n_s32_f16
ihIi
__builtin_neon_vcvth_n_s64_f16
WihIi
__builtin_neon_vcvth_n_u16_f16
UshIi
__builtin_neon_vcvth_n_u32_f16
UihIi
__builtin_neon_vcvth_n_u64_f16
UWihIi
__builtin_neon_vcvth_s16_f16
__builtin_neon_vcvth_s32_f16
__builtin_neon_vcvth_s64_f16
__builtin_neon_vcvth_u16_f16
__builtin_neon_vcvth_u32_f16
__builtin_neon_vcvth_u64_f16
__builtin_neon_vcvtmh_s16_f16
__builtin_neon_vcvtmh_s32_f16
__builtin_neon_vcvtmh_s64_f16
__builtin_neon_vcvtmh_u16_f16
__builtin_neon_vcvtmh_u32_f16
__builtin_neon_vcvtmh_u64_f16
__builtin_neon_vcvtnh_s16_f16
__builtin_neon_vcvtnh_s32_f16
__builtin_neon_vcvtnh_s64_f16
__builtin_neon_vcvtnh_u16_f16
__builtin_neon_vcvtnh_u32_f16
__builtin_neon_vcvtnh_u64_f16
__builtin_neon_vcvtph_s16_f16
__builtin_neon_vcvtph_s32_f16
__builtin_neon_vcvtph_s64_f16
__builtin_neon_vcvtph_u16_f16
__builtin_neon_vcvtph_u32_f16
__builtin_neon_vcvtph_u64_f16
__builtin_neon_vdivh_f16
__builtin_neon_vfmah_f16
hhhh
__builtin_neon_vfmsh_f16
__builtin_neon_vmaxh_f16
__builtin_neon_vmaxnmh_f16
__builtin_neon_vminh_f16
__builtin_neon_vminnmh_f16
__builtin_neon_vmulh_f16
__builtin_neon_vmulxh_f16
__builtin_neon_vnegh_f16
__builtin_neon_vrecpeh_f16
__builtin_neon_vrecpsh_f16
__builtin_neon_vrecpxh_f16
__builtin_neon_vrndah_f16
__builtin_neon_vrndh_f16
__builtin_neon_vrndih_f16
__builtin_neon_vrndmh_f16
__builtin_neon_vrndnh_f16
__builtin_neon_vrndph_f16
__builtin_neon_vrndxh_f16
__builtin_neon_vrsqrteh_f16
__builtin_neon_vrsqrtsh_f16
__builtin_neon_vsqrth_f16
__builtin_neon_vsubh_f16
__builtin_sve_svaba_n_s16
q8sq8sq8ss
__builtin_sve_svaba_n_s32
q4iq4iq4ii
__builtin_sve_svaba_n_s64
q2Wiq2Wiq2WiWi
__builtin_sve_svaba_n_s8
q16Scq16Scq16ScSc
__builtin_sve_svaba_n_u16
q8Usq8Usq8UsUs
__builtin_sve_svaba_n_u32
q4Uiq4Uiq4UiUi
__builtin_sve_svaba_n_u64
q2UWiq2UWiq2UWiUWi
__builtin_sve_svaba_n_u8
q16Ucq16Ucq16UcUc
__builtin_sve_svaba_s16
q8sq8sq8sq8s
__builtin_sve_svaba_s32
q4iq4iq4iq4i
__builtin_sve_svaba_s64
q2Wiq2Wiq2Wiq2Wi
__builtin_sve_svaba_s8
q16Scq16Scq16Scq16Sc
__builtin_sve_svaba_u16
q8Usq8Usq8Usq8Us
__builtin_sve_svaba_u32
q4Uiq4Uiq4Uiq4Ui
__builtin_sve_svaba_u64
q2UWiq2UWiq2UWiq2UWi
__builtin_sve_svaba_u8
q16Ucq16Ucq16Ucq16Uc
__builtin_sve_svabalb_n_s16
q8sq8sq16ScSc
__builtin_sve_svabalb_n_s32
q4iq4iq8ss
__builtin_sve_svabalb_n_s64
q2Wiq2Wiq4ii
__builtin_sve_svabalb_n_u16
q8Usq8Usq16UcUc
__builtin_sve_svabalb_n_u32
q4Uiq4Uiq8UsUs
__builtin_sve_svabalb_n_u64
q2UWiq2UWiq4UiUi
__builtin_sve_svabalb_s16
q8sq8sq16Scq16Sc
__builtin_sve_svabalb_s32
q4iq4iq8sq8s
__builtin_sve_svabalb_s64
q2Wiq2Wiq4iq4i
__builtin_sve_svabalb_u16
q8Usq8Usq16Ucq16Uc
__builtin_sve_svabalb_u32
q4Uiq4Uiq8Usq8Us
__builtin_sve_svabalb_u64
q2UWiq2UWiq4Uiq4Ui
__builtin_sve_svabalt_n_s16
__builtin_sve_svabalt_n_s32
__builtin_sve_svabalt_n_s64
__builtin_sve_svabalt_n_u16
__builtin_sve_svabalt_n_u32
__builtin_sve_svabalt_n_u64
__builtin_sve_svabalt_s16
__builtin_sve_svabalt_s32
__builtin_sve_svabalt_s64
__builtin_sve_svabalt_u16
__builtin_sve_svabalt_u32
__builtin_sve_svabalt_u64
__builtin_sve_svabd_f16_m
q8hq16bq8hq8h
__builtin_sve_svabd_f16_x
__builtin_sve_svabd_f16_z
__builtin_sve_svabd_f32_m
q4fq16bq4fq4f
__builtin_sve_svabd_f32_x
__builtin_sve_svabd_f32_z
__builtin_sve_svabd_f64_m
q2dq16bq2dq2d
__builtin_sve_svabd_f64_x
__builtin_sve_svabd_f64_z
__builtin_sve_svabd_n_f16_m
q8hq16bq8hh
__builtin_sve_svabd_n_f16_x
__builtin_sve_svabd_n_f16_z
__builtin_sve_svabd_n_f32_m
q4fq16bq4ff
__builtin_sve_svabd_n_f32_x
__builtin_sve_svabd_n_f32_z
__builtin_sve_svabd_n_f64_m
q2dq16bq2dd
__builtin_sve_svabd_n_f64_x
__builtin_sve_svabd_n_f64_z
__builtin_sve_svabd_n_s16_m
q8sq16bq8ss
__builtin_sve_svabd_n_s16_x
__builtin_sve_svabd_n_s16_z
__builtin_sve_svabd_n_s32_m
q4iq16bq4ii
__builtin_sve_svabd_n_s32_x
__builtin_sve_svabd_n_s32_z
__builtin_sve_svabd_n_s64_m
q2Wiq16bq2WiWi
__builtin_sve_svabd_n_s64_x
__builtin_sve_svabd_n_s64_z
__builtin_sve_svabd_n_s8_m
q16Scq16bq16ScSc
__builtin_sve_svabd_n_s8_x
__builtin_sve_svabd_n_s8_z
__builtin_sve_svabd_n_u16_m
q8Usq16bq8UsUs
__builtin_sve_svabd_n_u16_x
__builtin_sve_svabd_n_u16_z
__builtin_sve_svabd_n_u32_m
q4Uiq16bq4UiUi
__builtin_sve_svabd_n_u32_x
__builtin_sve_svabd_n_u32_z
__builtin_sve_svabd_n_u64_m
q2UWiq16bq2UWiUWi
__builtin_sve_svabd_n_u64_x
__builtin_sve_svabd_n_u64_z
__builtin_sve_svabd_n_u8_m
q16Ucq16bq16UcUc
__builtin_sve_svabd_n_u8_x
__builtin_sve_svabd_n_u8_z
__builtin_sve_svabd_s16_m
q8sq16bq8sq8s
__builtin_sve_svabd_s16_x
__builtin_sve_svabd_s16_z
__builtin_sve_svabd_s32_m
q4iq16bq4iq4i
__builtin_sve_svabd_s32_x
__builtin_sve_svabd_s32_z
__builtin_sve_svabd_s64_m
q2Wiq16bq2Wiq2Wi
__builtin_sve_svabd_s64_x
__builtin_sve_svabd_s64_z
__builtin_sve_svabd_s8_m
q16Scq16bq16Scq16Sc
__builtin_sve_svabd_s8_x
__builtin_sve_svabd_s8_z
__builtin_sve_svabd_u16_m
q8Usq16bq8Usq8Us
__builtin_sve_svabd_u16_x
__builtin_sve_svabd_u16_z
__builtin_sve_svabd_u32_m
q4Uiq16bq4Uiq4Ui
__builtin_sve_svabd_u32_x
__builtin_sve_svabd_u32_z
__builtin_sve_svabd_u64_m
q2UWiq16bq2UWiq2UWi
__builtin_sve_svabd_u64_x
__builtin_sve_svabd_u64_z
__builtin_sve_svabd_u8_m
q16Ucq16bq16Ucq16Uc
__builtin_sve_svabd_u8_x
__builtin_sve_svabd_u8_z
__builtin_sve_svabdlb_n_s16
q8sq16ScSc
__builtin_sve_svabdlb_n_s32
q4iq8ss
__builtin_sve_svabdlb_n_s64
q2Wiq4ii
__builtin_sve_svabdlb_n_u16
q8Usq16UcUc
__builtin_sve_svabdlb_n_u32
q4Uiq8UsUs
__builtin_sve_svabdlb_n_u64
q2UWiq4UiUi
__builtin_sve_svabdlb_s16
q8sq16Scq16Sc
__builtin_sve_svabdlb_s32
q4iq8sq8s
__builtin_sve_svabdlb_s64
q2Wiq4iq4i
__builtin_sve_svabdlb_u16
q8Usq16Ucq16Uc
__builtin_sve_svabdlb_u32
q4Uiq8Usq8Us
__builtin_sve_svabdlb_u64
q2UWiq4Uiq4Ui
__builtin_sve_svabdlt_n_s16
__builtin_sve_svabdlt_n_s32
__builtin_sve_svabdlt_n_s64
__builtin_sve_svabdlt_n_u16
__builtin_sve_svabdlt_n_u32
__builtin_sve_svabdlt_n_u64
__builtin_sve_svabdlt_s16
__builtin_sve_svabdlt_s32
__builtin_sve_svabdlt_s64
__builtin_sve_svabdlt_u16
__builtin_sve_svabdlt_u32
__builtin_sve_svabdlt_u64
__builtin_sve_svabs_f16_m
q8hq8hq16bq8h
__builtin_sve_svabs_f16_x
q8hq16bq8h
__builtin_sve_svabs_f16_z
__builtin_sve_svabs_f32_m
q4fq4fq16bq4f
__builtin_sve_svabs_f32_x
q4fq16bq4f
__builtin_sve_svabs_f32_z
__builtin_sve_svabs_f64_m
q2dq2dq16bq2d
__builtin_sve_svabs_f64_x
q2dq16bq2d
__builtin_sve_svabs_f64_z
__builtin_sve_svabs_s16_m
q8sq8sq16bq8s
__builtin_sve_svabs_s16_x
q8sq16bq8s
__builtin_sve_svabs_s16_z
__builtin_sve_svabs_s32_m
q4iq4iq16bq4i
__builtin_sve_svabs_s32_x
q4iq16bq4i
__builtin_sve_svabs_s32_z
__builtin_sve_svabs_s64_m
q2Wiq2Wiq16bq2Wi
__builtin_sve_svabs_s64_x
q2Wiq16bq2Wi
__builtin_sve_svabs_s64_z
__builtin_sve_svabs_s8_m
q16Scq16Scq16bq16Sc
__builtin_sve_svabs_s8_x
q16Scq16bq16Sc
__builtin_sve_svabs_s8_z
__builtin_sve_svacge_f16
q16bq16bq8hq8h
__builtin_sve_svacge_f32
q16bq16bq4fq4f
__builtin_sve_svacge_f64
q16bq16bq2dq2d
__builtin_sve_svacge_n_f16
q16bq16bq8hh
__builtin_sve_svacge_n_f32
q16bq16bq4ff
__builtin_sve_svacge_n_f64
q16bq16bq2dd
__builtin_sve_svacgt_f16
__builtin_sve_svacgt_f32
__builtin_sve_svacgt_f64
__builtin_sve_svacgt_n_f16
__builtin_sve_svacgt_n_f32
__builtin_sve_svacgt_n_f64
__builtin_sve_svacle_f16
__builtin_sve_svacle_f32
__builtin_sve_svacle_f64
__builtin_sve_svacle_n_f16
__builtin_sve_svacle_n_f32
__builtin_sve_svacle_n_f64
__builtin_sve_svaclt_f16
__builtin_sve_svaclt_f32
__builtin_sve_svaclt_f64
__builtin_sve_svaclt_n_f16
__builtin_sve_svaclt_n_f32
__builtin_sve_svaclt_n_f64
__builtin_sve_svadalp_s16_m
q8sq16bq8sq16Sc
__builtin_sve_svadalp_s16_x
__builtin_sve_svadalp_s16_z
__builtin_sve_svadalp_s32_m
q4iq16bq4iq8s
__builtin_sve_svadalp_s32_x
__builtin_sve_svadalp_s32_z
__builtin_sve_svadalp_s64_m
q2Wiq16bq2Wiq4i
__builtin_sve_svadalp_s64_x
__builtin_sve_svadalp_s64_z
__builtin_sve_svadalp_u16_m
q8Usq16bq8Usq16Uc
__builtin_sve_svadalp_u16_x
__builtin_sve_svadalp_u16_z
__builtin_sve_svadalp_u32_m
q4Uiq16bq4Uiq8Us
__builtin_sve_svadalp_u32_x
__builtin_sve_svadalp_u32_z
__builtin_sve_svadalp_u64_m
q2UWiq16bq2UWiq4Ui
__builtin_sve_svadalp_u64_x
__builtin_sve_svadalp_u64_z
__builtin_sve_svadclb_n_u32
__builtin_sve_svadclb_n_u64
__builtin_sve_svadclb_u32
__builtin_sve_svadclb_u64
__builtin_sve_svadclt_n_u32
__builtin_sve_svadclt_n_u64
__builtin_sve_svadclt_u32
__builtin_sve_svadclt_u64
__builtin_sve_svadd_f16_m
__builtin_sve_svadd_f16_x
__builtin_sve_svadd_f16_z
__builtin_sve_svadd_f32_m
__builtin_sve_svadd_f32_x
__builtin_sve_svadd_f32_z
__builtin_sve_svadd_f64_m
__builtin_sve_svadd_f64_x
__builtin_sve_svadd_f64_z
__builtin_sve_svadd_n_f16_m
__builtin_sve_svadd_n_f16_x
__builtin_sve_svadd_n_f16_z
__builtin_sve_svadd_n_f32_m
__builtin_sve_svadd_n_f32_x
__builtin_sve_svadd_n_f32_z
__builtin_sve_svadd_n_f64_m
__builtin_sve_svadd_n_f64_x
__builtin_sve_svadd_n_f64_z
__builtin_sve_svadd_n_s16_m
__builtin_sve_svadd_n_s16_x
__builtin_sve_svadd_n_s16_z
__builtin_sve_svadd_n_s32_m
__builtin_sve_svadd_n_s32_x
__builtin_sve_svadd_n_s32_z
__builtin_sve_svadd_n_s64_m
__builtin_sve_svadd_n_s64_x
__builtin_sve_svadd_n_s64_z
__builtin_sve_svadd_n_s8_m
__builtin_sve_svadd_n_s8_x
__builtin_sve_svadd_n_s8_z
__builtin_sve_svadd_n_u16_m
__builtin_sve_svadd_n_u16_x
__builtin_sve_svadd_n_u16_z
__builtin_sve_svadd_n_u32_m
__builtin_sve_svadd_n_u32_x
__builtin_sve_svadd_n_u32_z
__builtin_sve_svadd_n_u64_m
__builtin_sve_svadd_n_u64_x
__builtin_sve_svadd_n_u64_z
__builtin_sve_svadd_n_u8_m
__builtin_sve_svadd_n_u8_x
__builtin_sve_svadd_n_u8_z
__builtin_sve_svadd_s16_m
__builtin_sve_svadd_s16_x
__builtin_sve_svadd_s16_z
__builtin_sve_svadd_s32_m
__builtin_sve_svadd_s32_x
__builtin_sve_svadd_s32_z
__builtin_sve_svadd_s64_m
__builtin_sve_svadd_s64_x
__builtin_sve_svadd_s64_z
__builtin_sve_svadd_s8_m
__builtin_sve_svadd_s8_x
__builtin_sve_svadd_s8_z
__builtin_sve_svadd_u16_m
__builtin_sve_svadd_u16_x
__builtin_sve_svadd_u16_z
__builtin_sve_svadd_u32_m
__builtin_sve_svadd_u32_x
__builtin_sve_svadd_u32_z
__builtin_sve_svadd_u64_m
__builtin_sve_svadd_u64_x
__builtin_sve_svadd_u64_z
__builtin_sve_svadd_u8_m
__builtin_sve_svadd_u8_x
__builtin_sve_svadd_u8_z
__builtin_sve_svadda_f16
hq16bhq8h
__builtin_sve_svadda_f32
fq16bfq4f
__builtin_sve_svadda_f64
dq16bdq2d
__builtin_sve_svaddhnb_n_s16
q16Scq8ss
__builtin_sve_svaddhnb_n_s32
q8sq4ii
__builtin_sve_svaddhnb_n_s64
q4iq2WiWi
__builtin_sve_svaddhnb_n_u16
q16Ucq8UsUs
__builtin_sve_svaddhnb_n_u32
q8Usq4UiUi
__builtin_sve_svaddhnb_n_u64
q4Uiq2UWiUWi
__builtin_sve_svaddhnb_s16
q16Scq8sq8s
__builtin_sve_svaddhnb_s32
q8sq4iq4i
__builtin_sve_svaddhnb_s64
q4iq2Wiq2Wi
__builtin_sve_svaddhnb_u16
q16Ucq8Usq8Us
__builtin_sve_svaddhnb_u32
q8Usq4Uiq4Ui
__builtin_sve_svaddhnb_u64
q4Uiq2UWiq2UWi
__builtin_sve_svaddhnt_n_s16
q16Scq16Scq8ss
__builtin_sve_svaddhnt_n_s32
q8sq8sq4ii
__builtin_sve_svaddhnt_n_s64
q4iq4iq2WiWi
__builtin_sve_svaddhnt_n_u16
q16Ucq16Ucq8UsUs
__builtin_sve_svaddhnt_n_u32
q8Usq8Usq4UiUi
__builtin_sve_svaddhnt_n_u64
q4Uiq4Uiq2UWiUWi
__builtin_sve_svaddhnt_s16
q16Scq16Scq8sq8s
__builtin_sve_svaddhnt_s32
q8sq8sq4iq4i
__builtin_sve_svaddhnt_s64
q4iq4iq2Wiq2Wi
__builtin_sve_svaddhnt_u16
q16Ucq16Ucq8Usq8Us
__builtin_sve_svaddhnt_u32
q8Usq8Usq4Uiq4Ui
__builtin_sve_svaddhnt_u64
q4Uiq4Uiq2UWiq2UWi
__builtin_sve_svaddlb_n_s16
__builtin_sve_svaddlb_n_s32
__builtin_sve_svaddlb_n_s64
__builtin_sve_svaddlb_n_u16
__builtin_sve_svaddlb_n_u32
__builtin_sve_svaddlb_n_u64
__builtin_sve_svaddlb_s16
__builtin_sve_svaddlb_s32
__builtin_sve_svaddlb_s64
__builtin_sve_svaddlb_u16
__builtin_sve_svaddlb_u32
__builtin_sve_svaddlb_u64
__builtin_sve_svaddlbt_n_s16
__builtin_sve_svaddlbt_n_s32
__builtin_sve_svaddlbt_n_s64
__builtin_sve_svaddlbt_s16
__builtin_sve_svaddlbt_s32
__builtin_sve_svaddlbt_s64
__builtin_sve_svaddlt_n_s16
__builtin_sve_svaddlt_n_s32
__builtin_sve_svaddlt_n_s64
__builtin_sve_svaddlt_n_u16
__builtin_sve_svaddlt_n_u32
__builtin_sve_svaddlt_n_u64
__builtin_sve_svaddlt_s16
__builtin_sve_svaddlt_s32
__builtin_sve_svaddlt_s64
__builtin_sve_svaddlt_u16
__builtin_sve_svaddlt_u32
__builtin_sve_svaddlt_u64
__builtin_sve_svaddp_f16_m
__builtin_sve_svaddp_f16_x
__builtin_sve_svaddp_f32_m
__builtin_sve_svaddp_f32_x
__builtin_sve_svaddp_f64_m
__builtin_sve_svaddp_f64_x
__builtin_sve_svaddp_s16_m
__builtin_sve_svaddp_s16_x
__builtin_sve_svaddp_s32_m
__builtin_sve_svaddp_s32_x
__builtin_sve_svaddp_s64_m
__builtin_sve_svaddp_s64_x
__builtin_sve_svaddp_s8_m
__builtin_sve_svaddp_s8_x
__builtin_sve_svaddp_u16_m
__builtin_sve_svaddp_u16_x
__builtin_sve_svaddp_u32_m
__builtin_sve_svaddp_u32_x
__builtin_sve_svaddp_u64_m
__builtin_sve_svaddp_u64_x
__builtin_sve_svaddp_u8_m
__builtin_sve_svaddp_u8_x
__builtin_sve_svaddv_f16
hq16bq8h
__builtin_sve_svaddv_f32
fq16bq4f
__builtin_sve_svaddv_f64
dq16bq2d
__builtin_sve_svaddv_s16
Wiq16bq8s
__builtin_sve_svaddv_s32
Wiq16bq4i
__builtin_sve_svaddv_s64
Wiq16bq2Wi
__builtin_sve_svaddv_s8
Wiq16bq16Sc
__builtin_sve_svaddv_u16
UWiq16bq8Us
__builtin_sve_svaddv_u32
UWiq16bq4Ui
__builtin_sve_svaddv_u64
UWiq16bq2UWi
__builtin_sve_svaddv_u8
UWiq16bq16Uc
__builtin_sve_svaddwb_n_s16
q8sq8sSc
__builtin_sve_svaddwb_n_s32
q4iq4is
__builtin_sve_svaddwb_n_s64
q2Wiq2Wii
__builtin_sve_svaddwb_n_u16
q8Usq8UsUc
__builtin_sve_svaddwb_n_u32
q4Uiq4UiUs
__builtin_sve_svaddwb_n_u64
q2UWiq2UWiUi
__builtin_sve_svaddwb_s16
q8sq8sq16Sc
__builtin_sve_svaddwb_s32
q4iq4iq8s
__builtin_sve_svaddwb_s64
q2Wiq2Wiq4i
__builtin_sve_svaddwb_u16
q8Usq8Usq16Uc
__builtin_sve_svaddwb_u32
q4Uiq4Uiq8Us
__builtin_sve_svaddwb_u64
q2UWiq2UWiq4Ui
__builtin_sve_svaddwt_n_s16
__builtin_sve_svaddwt_n_s32
__builtin_sve_svaddwt_n_s64
__builtin_sve_svaddwt_n_u16
__builtin_sve_svaddwt_n_u32
__builtin_sve_svaddwt_n_u64
__builtin_sve_svaddwt_s16
__builtin_sve_svaddwt_s32
__builtin_sve_svaddwt_s64
__builtin_sve_svaddwt_u16
__builtin_sve_svaddwt_u32
__builtin_sve_svaddwt_u64
__builtin_sve_svadrb_u32base_s32offset
q4Uiq4Uiq4i
__builtin_sve_svadrb_u32base_u32offset
q4Uiq4Uiq4Ui
__builtin_sve_svadrb_u64base_s64offset
q2UWiq2UWiq2Wi
__builtin_sve_svadrb_u64base_u64offset
q2UWiq2UWiq2UWi
__builtin_sve_svadrd_u32base_s32index
__builtin_sve_svadrd_u32base_u32index
__builtin_sve_svadrd_u64base_s64index
__builtin_sve_svadrd_u64base_u64index
__builtin_sve_svadrh_u32base_s32index
__builtin_sve_svadrh_u32base_u32index
__builtin_sve_svadrh_u64base_s64index
__builtin_sve_svadrh_u64base_u64index
__builtin_sve_svadrw_u32base_s32index
__builtin_sve_svadrw_u32base_u32index
__builtin_sve_svadrw_u64base_s64index
__builtin_sve_svadrw_u64base_u64index
__builtin_sve_svaesd_u8
q16Ucq16Ucq16Uc
__builtin_sve_svaese_u8
__builtin_sve_svaesimc_u8
q16Ucq16Uc
__builtin_sve_svaesmc_u8
__builtin_sve_svand_b_z
q16bq16bq16bq16b
__builtin_sve_svand_n_s16_m
__builtin_sve_svand_n_s16_x
__builtin_sve_svand_n_s16_z
__builtin_sve_svand_n_s32_m
__builtin_sve_svand_n_s32_x
__builtin_sve_svand_n_s32_z
__builtin_sve_svand_n_s64_m
__builtin_sve_svand_n_s64_x
__builtin_sve_svand_n_s64_z
__builtin_sve_svand_n_s8_m
__builtin_sve_svand_n_s8_x
__builtin_sve_svand_n_s8_z
__builtin_sve_svand_n_u16_m
__builtin_sve_svand_n_u16_x
__builtin_sve_svand_n_u16_z
__builtin_sve_svand_n_u32_m
__builtin_sve_svand_n_u32_x
__builtin_sve_svand_n_u32_z
__builtin_sve_svand_n_u64_m
__builtin_sve_svand_n_u64_x
__builtin_sve_svand_n_u64_z
__builtin_sve_svand_n_u8_m
__builtin_sve_svand_n_u8_x
__builtin_sve_svand_n_u8_z
__builtin_sve_svand_s16_m
__builtin_sve_svand_s16_x
__builtin_sve_svand_s16_z
__builtin_sve_svand_s32_m
__builtin_sve_svand_s32_x
__builtin_sve_svand_s32_z
__builtin_sve_svand_s64_m
__builtin_sve_svand_s64_x
__builtin_sve_svand_s64_z
__builtin_sve_svand_s8_m
__builtin_sve_svand_s8_x
__builtin_sve_svand_s8_z
__builtin_sve_svand_u16_m
__builtin_sve_svand_u16_x
__builtin_sve_svand_u16_z
__builtin_sve_svand_u32_m
__builtin_sve_svand_u32_x
__builtin_sve_svand_u32_z
__builtin_sve_svand_u64_m
__builtin_sve_svand_u64_x
__builtin_sve_svand_u64_z
__builtin_sve_svand_u8_m
__builtin_sve_svand_u8_x
__builtin_sve_svand_u8_z
__builtin_sve_svandv_s16
sq16bq8s
__builtin_sve_svandv_s32
iq16bq4i
__builtin_sve_svandv_s64
__builtin_sve_svandv_s8
Scq16bq16Sc
__builtin_sve_svandv_u16
Usq16bq8Us
__builtin_sve_svandv_u32
Uiq16bq4Ui
__builtin_sve_svandv_u64
__builtin_sve_svandv_u8
Ucq16bq16Uc
__builtin_sve_svasr_n_s16_m
q8sq16bq8sUs
__builtin_sve_svasr_n_s16_x
__builtin_sve_svasr_n_s16_z
__builtin_sve_svasr_n_s32_m
q4iq16bq4iUi
__builtin_sve_svasr_n_s32_x
__builtin_sve_svasr_n_s32_z
__builtin_sve_svasr_n_s64_m
q2Wiq16bq2WiUWi
__builtin_sve_svasr_n_s64_x
__builtin_sve_svasr_n_s64_z
__builtin_sve_svasr_n_s8_m
q16Scq16bq16ScUc
__builtin_sve_svasr_n_s8_x
__builtin_sve_svasr_n_s8_z
__builtin_sve_svasr_s16_m
q8sq16bq8sq8Us
__builtin_sve_svasr_s16_x
__builtin_sve_svasr_s16_z
__builtin_sve_svasr_s32_m
q4iq16bq4iq4Ui
__builtin_sve_svasr_s32_x
__builtin_sve_svasr_s32_z
__builtin_sve_svasr_s64_m
q2Wiq16bq2Wiq2UWi
__builtin_sve_svasr_s64_x
__builtin_sve_svasr_s64_z
__builtin_sve_svasr_s8_m
q16Scq16bq16Scq16Uc
__builtin_sve_svasr_s8_x
__builtin_sve_svasr_s8_z
__builtin_sve_svasr_wide_n_s16_m
q8sq16bq8sUWi
__builtin_sve_svasr_wide_n_s16_x
__builtin_sve_svasr_wide_n_s16_z
__builtin_sve_svasr_wide_n_s32_m
q4iq16bq4iUWi
__builtin_sve_svasr_wide_n_s32_x
__builtin_sve_svasr_wide_n_s32_z
__builtin_sve_svasr_wide_n_s8_m
q16Scq16bq16ScUWi
__builtin_sve_svasr_wide_n_s8_x
__builtin_sve_svasr_wide_n_s8_z
__builtin_sve_svasr_wide_s16_m
q8sq16bq8sq2UWi
__builtin_sve_svasr_wide_s16_x
__builtin_sve_svasr_wide_s16_z
__builtin_sve_svasr_wide_s32_m
q4iq16bq4iq2UWi
__builtin_sve_svasr_wide_s32_x
__builtin_sve_svasr_wide_s32_z
__builtin_sve_svasr_wide_s8_m
q16Scq16bq16Scq2UWi
__builtin_sve_svasr_wide_s8_x
__builtin_sve_svasr_wide_s8_z
__builtin_sve_svasrd_n_s16_m
q8sq16bq8sIUWi
__builtin_sve_svasrd_n_s16_x
__builtin_sve_svasrd_n_s16_z
__builtin_sve_svasrd_n_s32_m
q4iq16bq4iIUWi
__builtin_sve_svasrd_n_s32_x
__builtin_sve_svasrd_n_s32_z
__builtin_sve_svasrd_n_s64_m
q2Wiq16bq2WiIUWi
__builtin_sve_svasrd_n_s64_x
__builtin_sve_svasrd_n_s64_z
__builtin_sve_svasrd_n_s8_m
q16Scq16bq16ScIUWi
__builtin_sve_svasrd_n_s8_x
__builtin_sve_svasrd_n_s8_z
__builtin_sve_svbcax_n_s16
__builtin_sve_svbcax_n_s32
__builtin_sve_svbcax_n_s64
__builtin_sve_svbcax_n_s8
__builtin_sve_svbcax_n_u16
__builtin_sve_svbcax_n_u32
__builtin_sve_svbcax_n_u64
__builtin_sve_svbcax_n_u8
__builtin_sve_svbcax_s16
__builtin_sve_svbcax_s32
__builtin_sve_svbcax_s64
__builtin_sve_svbcax_s8
__builtin_sve_svbcax_u16
__builtin_sve_svbcax_u32
__builtin_sve_svbcax_u64
__builtin_sve_svbcax_u8
__builtin_sve_svbdep_n_u16
q8Usq8UsUs
__builtin_sve_svbdep_n_u32
q4Uiq4UiUi
__builtin_sve_svbdep_n_u64
q2UWiq2UWiUWi
__builtin_sve_svbdep_n_u8
q16Ucq16UcUc
__builtin_sve_svbdep_u16
q8Usq8Usq8Us
__builtin_sve_svbdep_u32
__builtin_sve_svbdep_u64
__builtin_sve_svbdep_u8
__builtin_sve_svbext_n_u16
__builtin_sve_svbext_n_u32
__builtin_sve_svbext_n_u64
__builtin_sve_svbext_n_u8
__builtin_sve_svbext_u16
__builtin_sve_svbext_u32
__builtin_sve_svbext_u64
__builtin_sve_svbext_u8
__builtin_sve_svbfdot_f32
q4fq4fq8yq8y
__builtin_sve_svbfdot_lane_f32
q4fq4fq8yq8yUWi
__builtin_sve_svbfdot_n_f32
q4fq4fq8yy
__builtin_sve_svbfmlalb_f32
__builtin_sve_svbfmlalb_lane_f32
__builtin_sve_svbfmlalb_n_f32
__builtin_sve_svbfmlalt_f32
__builtin_sve_svbfmlalt_lane_f32
__builtin_sve_svbfmlalt_n_f32
__builtin_sve_svbfmmla_f32
__builtin_sve_svbgrp_n_u16
__builtin_sve_svbgrp_n_u32
__builtin_sve_svbgrp_n_u64
__builtin_sve_svbgrp_n_u8
__builtin_sve_svbgrp_u16
__builtin_sve_svbgrp_u32
__builtin_sve_svbgrp_u64
__builtin_sve_svbgrp_u8
__builtin_sve_svbic_b_z
__builtin_sve_svbic_n_s16_m
__builtin_sve_svbic_n_s16_x
__builtin_sve_svbic_n_s16_z
__builtin_sve_svbic_n_s32_m
__builtin_sve_svbic_n_s32_x
__builtin_sve_svbic_n_s32_z
__builtin_sve_svbic_n_s64_m
__builtin_sve_svbic_n_s64_x
__builtin_sve_svbic_n_s64_z
__builtin_sve_svbic_n_s8_m
__builtin_sve_svbic_n_s8_x
__builtin_sve_svbic_n_s8_z
__builtin_sve_svbic_n_u16_m
__builtin_sve_svbic_n_u16_x
__builtin_sve_svbic_n_u16_z
__builtin_sve_svbic_n_u32_m
__builtin_sve_svbic_n_u32_x
__builtin_sve_svbic_n_u32_z
__builtin_sve_svbic_n_u64_m
__builtin_sve_svbic_n_u64_x
__builtin_sve_svbic_n_u64_z
__builtin_sve_svbic_n_u8_m
__builtin_sve_svbic_n_u8_x
__builtin_sve_svbic_n_u8_z
__builtin_sve_svbic_s16_m
__builtin_sve_svbic_s16_x
__builtin_sve_svbic_s16_z
__builtin_sve_svbic_s32_m
__builtin_sve_svbic_s32_x
__builtin_sve_svbic_s32_z
__builtin_sve_svbic_s64_m
__builtin_sve_svbic_s64_x
__builtin_sve_svbic_s64_z
__builtin_sve_svbic_s8_m
__builtin_sve_svbic_s8_x
__builtin_sve_svbic_s8_z
__builtin_sve_svbic_u16_m
__builtin_sve_svbic_u16_x
__builtin_sve_svbic_u16_z
__builtin_sve_svbic_u32_m
__builtin_sve_svbic_u32_x
__builtin_sve_svbic_u32_z
__builtin_sve_svbic_u64_m
__builtin_sve_svbic_u64_x
__builtin_sve_svbic_u64_z
__builtin_sve_svbic_u8_m
__builtin_sve_svbic_u8_x
__builtin_sve_svbic_u8_z
__builtin_sve_svbrka_b_m
__builtin_sve_svbrka_b_z
q16bq16bq16b
__builtin_sve_svbrkb_b_m
__builtin_sve_svbrkb_b_z
__builtin_sve_svbrkn_b_z
__builtin_sve_svbrkpa_b_z
__builtin_sve_svbrkpb_b_z
__builtin_sve_svbsl1n_n_s16
__builtin_sve_svbsl1n_n_s32
__builtin_sve_svbsl1n_n_s64
__builtin_sve_svbsl1n_n_s8
__builtin_sve_svbsl1n_n_u16
__builtin_sve_svbsl1n_n_u32
__builtin_sve_svbsl1n_n_u64
__builtin_sve_svbsl1n_n_u8
__builtin_sve_svbsl1n_s16
__builtin_sve_svbsl1n_s32
__builtin_sve_svbsl1n_s64
__builtin_sve_svbsl1n_s8
__builtin_sve_svbsl1n_u16
__builtin_sve_svbsl1n_u32
__builtin_sve_svbsl1n_u64
__builtin_sve_svbsl1n_u8
__builtin_sve_svbsl2n_n_s16
__builtin_sve_svbsl2n_n_s32
__builtin_sve_svbsl2n_n_s64
__builtin_sve_svbsl2n_n_s8
__builtin_sve_svbsl2n_n_u16
__builtin_sve_svbsl2n_n_u32
__builtin_sve_svbsl2n_n_u64
__builtin_sve_svbsl2n_n_u8
__builtin_sve_svbsl2n_s16
__builtin_sve_svbsl2n_s32
__builtin_sve_svbsl2n_s64
__builtin_sve_svbsl2n_s8
__builtin_sve_svbsl2n_u16
__builtin_sve_svbsl2n_u32
__builtin_sve_svbsl2n_u64
__builtin_sve_svbsl2n_u8
__builtin_sve_svbsl_n_s16
__builtin_sve_svbsl_n_s32
__builtin_sve_svbsl_n_s64
__builtin_sve_svbsl_n_s8
__builtin_sve_svbsl_n_u16
__builtin_sve_svbsl_n_u32
__builtin_sve_svbsl_n_u64
__builtin_sve_svbsl_n_u8
__builtin_sve_svbsl_s16
__builtin_sve_svbsl_s32
__builtin_sve_svbsl_s64
__builtin_sve_svbsl_s8
__builtin_sve_svbsl_u16
__builtin_sve_svbsl_u32
__builtin_sve_svbsl_u64
__builtin_sve_svbsl_u8
__builtin_sve_svcadd_f16_m
q8hq16bq8hq8hIUWi
__builtin_sve_svcadd_f16_x
__builtin_sve_svcadd_f16_z
__builtin_sve_svcadd_f32_m
q4fq16bq4fq4fIUWi
__builtin_sve_svcadd_f32_x
__builtin_sve_svcadd_f32_z
__builtin_sve_svcadd_f64_m
q2dq16bq2dq2dIUWi
__builtin_sve_svcadd_f64_x
__builtin_sve_svcadd_f64_z
__builtin_sve_svcadd_s16
q8sq8sq8sIUWi
__builtin_sve_svcadd_s32
q4iq4iq4iIUWi
__builtin_sve_svcadd_s64
q2Wiq2Wiq2WiIUWi
__builtin_sve_svcadd_s8
q16Scq16Scq16ScIUWi
__builtin_sve_svcadd_u16
q8Usq8Usq8UsIUWi
__builtin_sve_svcadd_u32
q4Uiq4Uiq4UiIUWi
__builtin_sve_svcadd_u64
q2UWiq2UWiq2UWiIUWi
__builtin_sve_svcadd_u8
q16Ucq16Ucq16UcIUWi
__builtin_sve_svcdot_lane_s32
q4iq4iq16Scq16ScIUWiIUWi
__builtin_sve_svcdot_lane_s64
q2Wiq2Wiq8sq8sIUWiIUWi
__builtin_sve_svcdot_s32
q4iq4iq16Scq16ScIUWi
__builtin_sve_svcdot_s64
q2Wiq2Wiq8sq8sIUWi
__builtin_sve_svclasta_bf16
q8yq16bq8yq8y
__builtin_sve_svclasta_f16
__builtin_sve_svclasta_f32
__builtin_sve_svclasta_f64
__builtin_sve_svclasta_n_bf16
yq16byq8y
__builtin_sve_svclasta_n_f16
__builtin_sve_svclasta_n_f32
__builtin_sve_svclasta_n_f64
__builtin_sve_svclasta_n_s16
sq16bsq8s
__builtin_sve_svclasta_n_s32
iq16biq4i
__builtin_sve_svclasta_n_s64
Wiq16bWiq2Wi
__builtin_sve_svclasta_n_s8
Scq16bScq16Sc
__builtin_sve_svclasta_n_u16
Usq16bUsq8Us
__builtin_sve_svclasta_n_u32
Uiq16bUiq4Ui
__builtin_sve_svclasta_n_u64
UWiq16bUWiq2UWi
__builtin_sve_svclasta_n_u8
Ucq16bUcq16Uc
__builtin_sve_svclasta_s16
__builtin_sve_svclasta_s32
__builtin_sve_svclasta_s64
__builtin_sve_svclasta_s8
__builtin_sve_svclasta_u16
__builtin_sve_svclasta_u32
__builtin_sve_svclasta_u64
__builtin_sve_svclasta_u8
__builtin_sve_svclastb_bf16
__builtin_sve_svclastb_f16
__builtin_sve_svclastb_f32
__builtin_sve_svclastb_f64
__builtin_sve_svclastb_n_bf16
__builtin_sve_svclastb_n_f16
__builtin_sve_svclastb_n_f32
__builtin_sve_svclastb_n_f64
__builtin_sve_svclastb_n_s16
__builtin_sve_svclastb_n_s32
__builtin_sve_svclastb_n_s64
__builtin_sve_svclastb_n_s8
__builtin_sve_svclastb_n_u16
__builtin_sve_svclastb_n_u32
__builtin_sve_svclastb_n_u64
__builtin_sve_svclastb_n_u8
__builtin_sve_svclastb_s16
__builtin_sve_svclastb_s32
__builtin_sve_svclastb_s64
__builtin_sve_svclastb_s8
__builtin_sve_svclastb_u16
__builtin_sve_svclastb_u32
__builtin_sve_svclastb_u64
__builtin_sve_svclastb_u8
__builtin_sve_svcls_s16_m
q8Usq8Usq16bq8s
__builtin_sve_svcls_s16_x
q8Usq16bq8s
__builtin_sve_svcls_s16_z
__builtin_sve_svcls_s32_m
q4Uiq4Uiq16bq4i
__builtin_sve_svcls_s32_x
q4Uiq16bq4i
__builtin_sve_svcls_s32_z
__builtin_sve_svcls_s64_m
q2UWiq2UWiq16bq2Wi
__builtin_sve_svcls_s64_x
q2UWiq16bq2Wi
__builtin_sve_svcls_s64_z
__builtin_sve_svcls_s8_m
q16Ucq16Ucq16bq16Sc
__builtin_sve_svcls_s8_x
q16Ucq16bq16Sc
__builtin_sve_svcls_s8_z
__builtin_sve_svclz_s16_m
__builtin_sve_svclz_s16_x
__builtin_sve_svclz_s16_z
__builtin_sve_svclz_s32_m
__builtin_sve_svclz_s32_x
__builtin_sve_svclz_s32_z
__builtin_sve_svclz_s64_m
__builtin_sve_svclz_s64_x
__builtin_sve_svclz_s64_z
__builtin_sve_svclz_s8_m
__builtin_sve_svclz_s8_x
__builtin_sve_svclz_s8_z
__builtin_sve_svclz_u16_m
q8Usq8Usq16bq8Us
__builtin_sve_svclz_u16_x
q8Usq16bq8Us
__builtin_sve_svclz_u16_z
__builtin_sve_svclz_u32_m
q4Uiq4Uiq16bq4Ui
__builtin_sve_svclz_u32_x
q4Uiq16bq4Ui
__builtin_sve_svclz_u32_z
__builtin_sve_svclz_u64_m
q2UWiq2UWiq16bq2UWi
__builtin_sve_svclz_u64_x
q2UWiq16bq2UWi
__builtin_sve_svclz_u64_z
__builtin_sve_svclz_u8_m
q16Ucq16Ucq16bq16Uc
__builtin_sve_svclz_u8_x
q16Ucq16bq16Uc
__builtin_sve_svclz_u8_z
__builtin_sve_svcmla_f16_m
q8hq16bq8hq8hq8hIUWi
__builtin_sve_svcmla_f16_x
__builtin_sve_svcmla_f16_z
__builtin_sve_svcmla_f32_m
q4fq16bq4fq4fq4fIUWi
__builtin_sve_svcmla_f32_x
__builtin_sve_svcmla_f32_z
__builtin_sve_svcmla_f64_m
q2dq16bq2dq2dq2dIUWi
__builtin_sve_svcmla_f64_x
__builtin_sve_svcmla_f64_z
__builtin_sve_svcmla_lane_f16
q8hq8hq8hq8hIUWiIUWi
__builtin_sve_svcmla_lane_f32
q4fq4fq4fq4fIUWiIUWi
__builtin_sve_svcmla_lane_s16
q8sq8sq8sq8sIUWiIUWi
__builtin_sve_svcmla_lane_s32
q4iq4iq4iq4iIUWiIUWi
__builtin_sve_svcmla_lane_u16
q8Usq8Usq8Usq8UsIUWiIUWi
__builtin_sve_svcmla_lane_u32
q4Uiq4Uiq4Uiq4UiIUWiIUWi
__builtin_sve_svcmla_s16
q8sq8sq8sq8sIUWi
__builtin_sve_svcmla_s32
q4iq4iq4iq4iIUWi
__builtin_sve_svcmla_s64
q2Wiq2Wiq2Wiq2WiIUWi
__builtin_sve_svcmla_s8
q16Scq16Scq16Scq16ScIUWi
__builtin_sve_svcmla_u16
q8Usq8Usq8Usq8UsIUWi
__builtin_sve_svcmla_u32
q4Uiq4Uiq4Uiq4UiIUWi
__builtin_sve_svcmla_u64
q2UWiq2UWiq2UWiq2UWiIUWi
__builtin_sve_svcmla_u8
q16Ucq16Ucq16Ucq16UcIUWi
__builtin_sve_svcmpeq_f16
__builtin_sve_svcmpeq_f32
__builtin_sve_svcmpeq_f64
__builtin_sve_svcmpeq_n_f16
__builtin_sve_svcmpeq_n_f32
__builtin_sve_svcmpeq_n_f64
__builtin_sve_svcmpeq_n_s16
q16bq16bq8ss
__builtin_sve_svcmpeq_n_s32
q16bq16bq4ii
__builtin_sve_svcmpeq_n_s64
q16bq16bq2WiWi
__builtin_sve_svcmpeq_n_s8
q16bq16bq16ScSc
__builtin_sve_svcmpeq_n_u16
q16bq16bq8UsUs
__builtin_sve_svcmpeq_n_u32
q16bq16bq4UiUi
__builtin_sve_svcmpeq_n_u64
q16bq16bq2UWiUWi
__builtin_sve_svcmpeq_n_u8
q16bq16bq16UcUc
__builtin_sve_svcmpeq_s16
q16bq16bq8sq8s
__builtin_sve_svcmpeq_s32
q16bq16bq4iq4i
__builtin_sve_svcmpeq_s64
q16bq16bq2Wiq2Wi
__builtin_sve_svcmpeq_s8
q16bq16bq16Scq16Sc
__builtin_sve_svcmpeq_u16
q16bq16bq8Usq8Us
__builtin_sve_svcmpeq_u32
q16bq16bq4Uiq4Ui
__builtin_sve_svcmpeq_u64
q16bq16bq2UWiq2UWi
__builtin_sve_svcmpeq_u8
q16bq16bq16Ucq16Uc
__builtin_sve_svcmpeq_wide_n_s16
q16bq16bq8sWi
__builtin_sve_svcmpeq_wide_n_s32
q16bq16bq4iWi
__builtin_sve_svcmpeq_wide_n_s8
q16bq16bq16ScWi
__builtin_sve_svcmpeq_wide_s16
q16bq16bq8sq2Wi
__builtin_sve_svcmpeq_wide_s32
q16bq16bq4iq2Wi
__builtin_sve_svcmpeq_wide_s8
q16bq16bq16Scq2Wi
__builtin_sve_svcmpge_f16
__builtin_sve_svcmpge_f32
__builtin_sve_svcmpge_f64
__builtin_sve_svcmpge_n_f16
__builtin_sve_svcmpge_n_f32
__builtin_sve_svcmpge_n_f64
__builtin_sve_svcmpge_n_s16
__builtin_sve_svcmpge_n_s32
__builtin_sve_svcmpge_n_s64
__builtin_sve_svcmpge_n_s8
__builtin_sve_svcmpge_n_u16
__builtin_sve_svcmpge_n_u32
__builtin_sve_svcmpge_n_u64
__builtin_sve_svcmpge_n_u8
__builtin_sve_svcmpge_s16
__builtin_sve_svcmpge_s32
__builtin_sve_svcmpge_s64
__builtin_sve_svcmpge_s8
__builtin_sve_svcmpge_u16
__builtin_sve_svcmpge_u32
__builtin_sve_svcmpge_u64
__builtin_sve_svcmpge_u8
__builtin_sve_svcmpge_wide_n_s16
__builtin_sve_svcmpge_wide_n_s32
__builtin_sve_svcmpge_wide_n_s8
__builtin_sve_svcmpge_wide_n_u16
q16bq16bq8UsUWi
__builtin_sve_svcmpge_wide_n_u32
q16bq16bq4UiUWi
__builtin_sve_svcmpge_wide_n_u8
q16bq16bq16UcUWi
__builtin_sve_svcmpge_wide_s16
__builtin_sve_svcmpge_wide_s32
__builtin_sve_svcmpge_wide_s8
__builtin_sve_svcmpge_wide_u16
q16bq16bq8Usq2UWi
__builtin_sve_svcmpge_wide_u32
q16bq16bq4Uiq2UWi
__builtin_sve_svcmpge_wide_u8
q16bq16bq16Ucq2UWi
__builtin_sve_svcmpgt_f16
__builtin_sve_svcmpgt_f32
__builtin_sve_svcmpgt_f64
__builtin_sve_svcmpgt_n_f16
__builtin_sve_svcmpgt_n_f32
__builtin_sve_svcmpgt_n_f64
__builtin_sve_svcmpgt_n_s16
__builtin_sve_svcmpgt_n_s32
__builtin_sve_svcmpgt_n_s64
__builtin_sve_svcmpgt_n_s8
__builtin_sve_svcmpgt_n_u16
__builtin_sve_svcmpgt_n_u32
__builtin_sve_svcmpgt_n_u64
__builtin_sve_svcmpgt_n_u8
__builtin_sve_svcmpgt_s16
__builtin_sve_svcmpgt_s32
__builtin_sve_svcmpgt_s64
__builtin_sve_svcmpgt_s8
__builtin_sve_svcmpgt_u16
__builtin_sve_svcmpgt_u32
__builtin_sve_svcmpgt_u64
__builtin_sve_svcmpgt_u8
__builtin_sve_svcmpgt_wide_n_s16
__builtin_sve_svcmpgt_wide_n_s32
__builtin_sve_svcmpgt_wide_n_s8
__builtin_sve_svcmpgt_wide_n_u16
__builtin_sve_svcmpgt_wide_n_u32
__builtin_sve_svcmpgt_wide_n_u8
__builtin_sve_svcmpgt_wide_s16
__builtin_sve_svcmpgt_wide_s32
__builtin_sve_svcmpgt_wide_s8
__builtin_sve_svcmpgt_wide_u16
__builtin_sve_svcmpgt_wide_u32
__builtin_sve_svcmpgt_wide_u8
__builtin_sve_svcmple_f16
__builtin_sve_svcmple_f32
__builtin_sve_svcmple_f64
__builtin_sve_svcmple_n_f16
__builtin_sve_svcmple_n_f32
__builtin_sve_svcmple_n_f64
__builtin_sve_svcmple_n_s16
__builtin_sve_svcmple_n_s32
__builtin_sve_svcmple_n_s64
__builtin_sve_svcmple_n_s8
__builtin_sve_svcmple_n_u16
__builtin_sve_svcmple_n_u32
__builtin_sve_svcmple_n_u64
__builtin_sve_svcmple_n_u8
__builtin_sve_svcmple_s16
__builtin_sve_svcmple_s32
__builtin_sve_svcmple_s64
__builtin_sve_svcmple_s8
__builtin_sve_svcmple_u16
__builtin_sve_svcmple_u32
__builtin_sve_svcmple_u64
__builtin_sve_svcmple_u8
__builtin_sve_svcmple_wide_n_s16
__builtin_sve_svcmple_wide_n_s32
__builtin_sve_svcmple_wide_n_s8
__builtin_sve_svcmple_wide_n_u16
__builtin_sve_svcmple_wide_n_u32
__builtin_sve_svcmple_wide_n_u8
__builtin_sve_svcmple_wide_s16
__builtin_sve_svcmple_wide_s32
__builtin_sve_svcmple_wide_s8
__builtin_sve_svcmple_wide_u16
__builtin_sve_svcmple_wide_u32
__builtin_sve_svcmple_wide_u8
__builtin_sve_svcmplt_f16
__builtin_sve_svcmplt_f32
__builtin_sve_svcmplt_f64
__builtin_sve_svcmplt_n_f16
__builtin_sve_svcmplt_n_f32
__builtin_sve_svcmplt_n_f64
__builtin_sve_svcmplt_n_s16
__builtin_sve_svcmplt_n_s32
__builtin_sve_svcmplt_n_s64
__builtin_sve_svcmplt_n_s8
__builtin_sve_svcmplt_n_u16
__builtin_sve_svcmplt_n_u32
__builtin_sve_svcmplt_n_u64
__builtin_sve_svcmplt_n_u8
__builtin_sve_svcmplt_s16
__builtin_sve_svcmplt_s32
__builtin_sve_svcmplt_s64
__builtin_sve_svcmplt_s8
__builtin_sve_svcmplt_u16
__builtin_sve_svcmplt_u32
__builtin_sve_svcmplt_u64
__builtin_sve_svcmplt_u8
__builtin_sve_svcmplt_wide_n_s16
__builtin_sve_svcmplt_wide_n_s32
__builtin_sve_svcmplt_wide_n_s8
__builtin_sve_svcmplt_wide_n_u16
__builtin_sve_svcmplt_wide_n_u32
__builtin_sve_svcmplt_wide_n_u8
__builtin_sve_svcmplt_wide_s16
__builtin_sve_svcmplt_wide_s32
__builtin_sve_svcmplt_wide_s8
__builtin_sve_svcmplt_wide_u16
__builtin_sve_svcmplt_wide_u32
__builtin_sve_svcmplt_wide_u8
__builtin_sve_svcmpne_f16
__builtin_sve_svcmpne_f32
__builtin_sve_svcmpne_f64
__builtin_sve_svcmpne_n_f16
__builtin_sve_svcmpne_n_f32
__builtin_sve_svcmpne_n_f64
__builtin_sve_svcmpne_n_s16
__builtin_sve_svcmpne_n_s32
__builtin_sve_svcmpne_n_s64
__builtin_sve_svcmpne_n_s8
__builtin_sve_svcmpne_n_u16
__builtin_sve_svcmpne_n_u32
__builtin_sve_svcmpne_n_u64
__builtin_sve_svcmpne_n_u8
__builtin_sve_svcmpne_s16
__builtin_sve_svcmpne_s32
__builtin_sve_svcmpne_s64
__builtin_sve_svcmpne_s8
__builtin_sve_svcmpne_u16
__builtin_sve_svcmpne_u32
__builtin_sve_svcmpne_u64
__builtin_sve_svcmpne_u8
__builtin_sve_svcmpne_wide_n_s16
__builtin_sve_svcmpne_wide_n_s32
__builtin_sve_svcmpne_wide_n_s8
__builtin_sve_svcmpne_wide_s16
__builtin_sve_svcmpne_wide_s32
__builtin_sve_svcmpne_wide_s8
__builtin_sve_svcmpuo_f16
__builtin_sve_svcmpuo_f32
__builtin_sve_svcmpuo_f64
__builtin_sve_svcmpuo_n_f16
__builtin_sve_svcmpuo_n_f32
__builtin_sve_svcmpuo_n_f64
__builtin_sve_svcnot_s16_m
__builtin_sve_svcnot_s16_x
__builtin_sve_svcnot_s16_z
__builtin_sve_svcnot_s32_m
__builtin_sve_svcnot_s32_x
__builtin_sve_svcnot_s32_z
__builtin_sve_svcnot_s64_m
__builtin_sve_svcnot_s64_x
__builtin_sve_svcnot_s64_z
__builtin_sve_svcnot_s8_m
__builtin_sve_svcnot_s8_x
__builtin_sve_svcnot_s8_z
__builtin_sve_svcnot_u16_m
__builtin_sve_svcnot_u16_x
__builtin_sve_svcnot_u16_z
__builtin_sve_svcnot_u32_m
__builtin_sve_svcnot_u32_x
__builtin_sve_svcnot_u32_z
__builtin_sve_svcnot_u64_m
__builtin_sve_svcnot_u64_x
__builtin_sve_svcnot_u64_z
__builtin_sve_svcnot_u8_m
__builtin_sve_svcnot_u8_x
__builtin_sve_svcnot_u8_z
__builtin_sve_svcnt_bf16_m
q8Usq8Usq16bq8y
__builtin_sve_svcnt_bf16_x
q8Usq16bq8y
__builtin_sve_svcnt_bf16_z
__builtin_sve_svcnt_f16_m
q8Usq8Usq16bq8h
__builtin_sve_svcnt_f16_x
q8Usq16bq8h
__builtin_sve_svcnt_f16_z
__builtin_sve_svcnt_f32_m
q4Uiq4Uiq16bq4f
__builtin_sve_svcnt_f32_x
q4Uiq16bq4f
__builtin_sve_svcnt_f32_z
__builtin_sve_svcnt_f64_m
q2UWiq2UWiq16bq2d
__builtin_sve_svcnt_f64_x
q2UWiq16bq2d
__builtin_sve_svcnt_f64_z
__builtin_sve_svcnt_s16_m
__builtin_sve_svcnt_s16_x
__builtin_sve_svcnt_s16_z
__builtin_sve_svcnt_s32_m
__builtin_sve_svcnt_s32_x
__builtin_sve_svcnt_s32_z
__builtin_sve_svcnt_s64_m
__builtin_sve_svcnt_s64_x
__builtin_sve_svcnt_s64_z
__builtin_sve_svcnt_s8_m
__builtin_sve_svcnt_s8_x
__builtin_sve_svcnt_s8_z
__builtin_sve_svcnt_u16_m
__builtin_sve_svcnt_u16_x
__builtin_sve_svcnt_u16_z
__builtin_sve_svcnt_u32_m
__builtin_sve_svcnt_u32_x
__builtin_sve_svcnt_u32_z
__builtin_sve_svcnt_u64_m
__builtin_sve_svcnt_u64_x
__builtin_sve_svcnt_u64_z
__builtin_sve_svcnt_u8_m
__builtin_sve_svcnt_u8_x
__builtin_sve_svcnt_u8_z
__builtin_sve_svcntb
__builtin_sve_svcntb_pat
UWiIi
__builtin_sve_svcntd
__builtin_sve_svcntd_pat
__builtin_sve_svcnth
__builtin_sve_svcnth_pat
__builtin_sve_svcntp_b16
UWiq16bq16b
__builtin_sve_svcntp_b32
__builtin_sve_svcntp_b64
__builtin_sve_svcntp_b8
__builtin_sve_svcntw
__builtin_sve_svcntw_pat
__builtin_sve_svcompact_f32
__builtin_sve_svcompact_f64
__builtin_sve_svcompact_s32
__builtin_sve_svcompact_s64
__builtin_sve_svcompact_u32
__builtin_sve_svcompact_u64
__builtin_sve_svcreate2_bf16
q16yq8yq8y
__builtin_sve_svcreate2_f16
q16hq8hq8h
__builtin_sve_svcreate2_f32
q8fq4fq4f
__builtin_sve_svcreate2_f64
q4dq2dq2d
__builtin_sve_svcreate2_s16
q16sq8sq8s
__builtin_sve_svcreate2_s32
q8iq4iq4i
__builtin_sve_svcreate2_s64
q4Wiq2Wiq2Wi
__builtin_sve_svcreate2_s8
q32Scq16Scq16Sc
__builtin_sve_svcreate2_u16
q16Usq8Usq8Us
__builtin_sve_svcreate2_u32
q8Uiq4Uiq4Ui
__builtin_sve_svcreate2_u64
q4UWiq2UWiq2UWi
__builtin_sve_svcreate2_u8
q32Ucq16Ucq16Uc
__builtin_sve_svcreate3_bf16
q24yq8yq8yq8y
__builtin_sve_svcreate3_f16
q24hq8hq8hq8h
__builtin_sve_svcreate3_f32
q12fq4fq4fq4f
__builtin_sve_svcreate3_f64
q6dq2dq2dq2d
__builtin_sve_svcreate3_s16
q24sq8sq8sq8s
__builtin_sve_svcreate3_s32
q12iq4iq4iq4i
__builtin_sve_svcreate3_s64
q6Wiq2Wiq2Wiq2Wi
__builtin_sve_svcreate3_s8
q48Scq16Scq16Scq16Sc
__builtin_sve_svcreate3_u16
q24Usq8Usq8Usq8Us
__builtin_sve_svcreate3_u32
q12Uiq4Uiq4Uiq4Ui
__builtin_sve_svcreate3_u64
q6UWiq2UWiq2UWiq2UWi
__builtin_sve_svcreate3_u8
q48Ucq16Ucq16Ucq16Uc
__builtin_sve_svcreate4_bf16
q32yq8yq8yq8yq8y
__builtin_sve_svcreate4_f16
q32hq8hq8hq8hq8h
__builtin_sve_svcreate4_f32
q16fq4fq4fq4fq4f
__builtin_sve_svcreate4_f64
q8dq2dq2dq2dq2d
__builtin_sve_svcreate4_s16
q32sq8sq8sq8sq8s
__builtin_sve_svcreate4_s32
q16iq4iq4iq4iq4i
__builtin_sve_svcreate4_s64
q8Wiq2Wiq2Wiq2Wiq2Wi
__builtin_sve_svcreate4_s8
q64Scq16Scq16Scq16Scq16Sc
__builtin_sve_svcreate4_u16
q32Usq8Usq8Usq8Usq8Us
__builtin_sve_svcreate4_u32
q16Uiq4Uiq4Uiq4Uiq4Ui
__builtin_sve_svcreate4_u64
q8UWiq2UWiq2UWiq2UWiq2UWi
__builtin_sve_svcreate4_u8
q64Ucq16Ucq16Ucq16Ucq16Uc
__builtin_sve_svcvt_bf16_f32_m
q8yq8yq16bq4f
__builtin_sve_svcvt_bf16_f32_x
q8yq16bq4f
__builtin_sve_svcvt_bf16_f32_z
__builtin_sve_svcvt_f16_f32_m
q8hq8hq16bq4f
__builtin_sve_svcvt_f16_f32_x
q8hq16bq4f
__builtin_sve_svcvt_f16_f32_z
__builtin_sve_svcvt_f16_f64_m
q8hq8hq16bq2d
__builtin_sve_svcvt_f16_f64_x
q8hq16bq2d
__builtin_sve_svcvt_f16_f64_z
__builtin_sve_svcvt_f16_s16_m
q8hq8hq16bq8s
__builtin_sve_svcvt_f16_s16_x
q8hq16bq8s
__builtin_sve_svcvt_f16_s16_z
__builtin_sve_svcvt_f16_s32_m
q8hq8hq16bq4i
__builtin_sve_svcvt_f16_s32_x
q8hq16bq4i
__builtin_sve_svcvt_f16_s32_z
__builtin_sve_svcvt_f16_s64_m
q8hq8hq16bq2Wi
__builtin_sve_svcvt_f16_s64_x
q8hq16bq2Wi
__builtin_sve_svcvt_f16_s64_z
__builtin_sve_svcvt_f16_u16_m
q8hq8hq16bq8Us
__builtin_sve_svcvt_f16_u16_x
q8hq16bq8Us
__builtin_sve_svcvt_f16_u16_z
__builtin_sve_svcvt_f16_u32_m
q8hq8hq16bq4Ui
__builtin_sve_svcvt_f16_u32_x
q8hq16bq4Ui
__builtin_sve_svcvt_f16_u32_z
__builtin_sve_svcvt_f16_u64_m
q8hq8hq16bq2UWi
__builtin_sve_svcvt_f16_u64_x
q8hq16bq2UWi
__builtin_sve_svcvt_f16_u64_z
__builtin_sve_svcvt_f32_f16_m
q4fq4fq16bq8h
__builtin_sve_svcvt_f32_f16_x
q4fq16bq8h
__builtin_sve_svcvt_f32_f16_z
__builtin_sve_svcvt_f32_f64_m
q4fq4fq16bq2d
__builtin_sve_svcvt_f32_f64_x
q4fq16bq2d
__builtin_sve_svcvt_f32_f64_z
__builtin_sve_svcvt_f32_s32_m
q4fq4fq16bq4i
__builtin_sve_svcvt_f32_s32_x
q4fq16bq4i
__builtin_sve_svcvt_f32_s32_z
__builtin_sve_svcvt_f32_s64_m
q4fq4fq16bq2Wi
__builtin_sve_svcvt_f32_s64_x
q4fq16bq2Wi
__builtin_sve_svcvt_f32_s64_z
__builtin_sve_svcvt_f32_u32_m
q4fq4fq16bq4Ui
__builtin_sve_svcvt_f32_u32_x
q4fq16bq4Ui
__builtin_sve_svcvt_f32_u32_z
__builtin_sve_svcvt_f32_u64_m
q4fq4fq16bq2UWi
__builtin_sve_svcvt_f32_u64_x
q4fq16bq2UWi
__builtin_sve_svcvt_f32_u64_z
__builtin_sve_svcvt_f64_f16_m
q2dq2dq16bq8h
__builtin_sve_svcvt_f64_f16_x
q2dq16bq8h
__builtin_sve_svcvt_f64_f16_z
__builtin_sve_svcvt_f64_f32_m
q2dq2dq16bq4f
__builtin_sve_svcvt_f64_f32_x
q2dq16bq4f
__builtin_sve_svcvt_f64_f32_z
__builtin_sve_svcvt_f64_s32_m
q2dq2dq16bq4i
__builtin_sve_svcvt_f64_s32_x
q2dq16bq4i
__builtin_sve_svcvt_f64_s32_z
__builtin_sve_svcvt_f64_s64_m
q2dq2dq16bq2Wi
__builtin_sve_svcvt_f64_s64_x
q2dq16bq2Wi
__builtin_sve_svcvt_f64_s64_z
__builtin_sve_svcvt_f64_u32_m
q2dq2dq16bq4Ui
__builtin_sve_svcvt_f64_u32_x
q2dq16bq4Ui
__builtin_sve_svcvt_f64_u32_z
__builtin_sve_svcvt_f64_u64_m
q2dq2dq16bq2UWi
__builtin_sve_svcvt_f64_u64_x
q2dq16bq2UWi
__builtin_sve_svcvt_f64_u64_z
__builtin_sve_svcvt_s16_f16_m
q8sq8sq16bq8h
__builtin_sve_svcvt_s16_f16_x
q8sq16bq8h
__builtin_sve_svcvt_s16_f16_z
__builtin_sve_svcvt_s32_f16_m
q4iq4iq16bq8h
__builtin_sve_svcvt_s32_f16_x
q4iq16bq8h
__builtin_sve_svcvt_s32_f16_z
__builtin_sve_svcvt_s32_f32_m
q4iq4iq16bq4f
__builtin_sve_svcvt_s32_f32_x
q4iq16bq4f
__builtin_sve_svcvt_s32_f32_z
__builtin_sve_svcvt_s32_f64_m
q4iq4iq16bq2d
__builtin_sve_svcvt_s32_f64_x
q4iq16bq2d
__builtin_sve_svcvt_s32_f64_z
__builtin_sve_svcvt_s64_f16_m
q2Wiq2Wiq16bq8h
__builtin_sve_svcvt_s64_f16_x
q2Wiq16bq8h
__builtin_sve_svcvt_s64_f16_z
__builtin_sve_svcvt_s64_f32_m
q2Wiq2Wiq16bq4f
__builtin_sve_svcvt_s64_f32_x
q2Wiq16bq4f
__builtin_sve_svcvt_s64_f32_z
__builtin_sve_svcvt_s64_f64_m
q2Wiq2Wiq16bq2d
__builtin_sve_svcvt_s64_f64_x
q2Wiq16bq2d
__builtin_sve_svcvt_s64_f64_z
__builtin_sve_svcvt_u16_f16_m
__builtin_sve_svcvt_u16_f16_x
__builtin_sve_svcvt_u16_f16_z
__builtin_sve_svcvt_u32_f16_m
q4Uiq4Uiq16bq8h
__builtin_sve_svcvt_u32_f16_x
q4Uiq16bq8h
__builtin_sve_svcvt_u32_f16_z
__builtin_sve_svcvt_u32_f32_m
__builtin_sve_svcvt_u32_f32_x
__builtin_sve_svcvt_u32_f32_z
__builtin_sve_svcvt_u32_f64_m
q4Uiq4Uiq16bq2d
__builtin_sve_svcvt_u32_f64_x
q4Uiq16bq2d
__builtin_sve_svcvt_u32_f64_z
__builtin_sve_svcvt_u64_f16_m
q2UWiq2UWiq16bq8h
__builtin_sve_svcvt_u64_f16_x
q2UWiq16bq8h
__builtin_sve_svcvt_u64_f16_z
__builtin_sve_svcvt_u64_f32_m
q2UWiq2UWiq16bq4f
__builtin_sve_svcvt_u64_f32_x
q2UWiq16bq4f
__builtin_sve_svcvt_u64_f32_z
__builtin_sve_svcvt_u64_f64_m
__builtin_sve_svcvt_u64_f64_x
__builtin_sve_svcvt_u64_f64_z
__builtin_sve_svcvtlt_f32_f16_m
__builtin_sve_svcvtlt_f32_f16_x
__builtin_sve_svcvtlt_f64_f32_m
__builtin_sve_svcvtlt_f64_f32_x
__builtin_sve_svcvtnt_bf16_f32_m
__builtin_sve_svcvtnt_f16_f32_m
__builtin_sve_svcvtnt_f32_f64_m
__builtin_sve_svcvtx_f32_f64_m
__builtin_sve_svcvtx_f32_f64_x
__builtin_sve_svcvtx_f32_f64_z
__builtin_sve_svcvtxnt_f32_f64_m
__builtin_sve_svdiv_f16_m
__builtin_sve_svdiv_f16_x
__builtin_sve_svdiv_f16_z
__builtin_sve_svdiv_f32_m
__builtin_sve_svdiv_f32_x
__builtin_sve_svdiv_f32_z
__builtin_sve_svdiv_f64_m
__builtin_sve_svdiv_f64_x
__builtin_sve_svdiv_f64_z
__builtin_sve_svdiv_n_f16_m
__builtin_sve_svdiv_n_f16_x
__builtin_sve_svdiv_n_f16_z
__builtin_sve_svdiv_n_f32_m
__builtin_sve_svdiv_n_f32_x
__builtin_sve_svdiv_n_f32_z
__builtin_sve_svdiv_n_f64_m
__builtin_sve_svdiv_n_f64_x
__builtin_sve_svdiv_n_f64_z
__builtin_sve_svdiv_n_s32_m
__builtin_sve_svdiv_n_s32_x
__builtin_sve_svdiv_n_s32_z
__builtin_sve_svdiv_n_s64_m
__builtin_sve_svdiv_n_s64_x
__builtin_sve_svdiv_n_s64_z
__builtin_sve_svdiv_n_u32_m
__builtin_sve_svdiv_n_u32_x
__builtin_sve_svdiv_n_u32_z
__builtin_sve_svdiv_n_u64_m
__builtin_sve_svdiv_n_u64_x
__builtin_sve_svdiv_n_u64_z
__builtin_sve_svdiv_s32_m
__builtin_sve_svdiv_s32_x
__builtin_sve_svdiv_s32_z
__builtin_sve_svdiv_s64_m
__builtin_sve_svdiv_s64_x
__builtin_sve_svdiv_s64_z
__builtin_sve_svdiv_u32_m
__builtin_sve_svdiv_u32_x
__builtin_sve_svdiv_u32_z
__builtin_sve_svdiv_u64_m
__builtin_sve_svdiv_u64_x
__builtin_sve_svdiv_u64_z
__builtin_sve_svdivr_f16_m
__builtin_sve_svdivr_f16_x
__builtin_sve_svdivr_f16_z
__builtin_sve_svdivr_f32_m
__builtin_sve_svdivr_f32_x
__builtin_sve_svdivr_f32_z
__builtin_sve_svdivr_f64_m
__builtin_sve_svdivr_f64_x
__builtin_sve_svdivr_f64_z
__builtin_sve_svdivr_n_f16_m
__builtin_sve_svdivr_n_f16_x
__builtin_sve_svdivr_n_f16_z
__builtin_sve_svdivr_n_f32_m
__builtin_sve_svdivr_n_f32_x
__builtin_sve_svdivr_n_f32_z
__builtin_sve_svdivr_n_f64_m
__builtin_sve_svdivr_n_f64_x
__builtin_sve_svdivr_n_f64_z
__builtin_sve_svdivr_n_s32_m
__builtin_sve_svdivr_n_s32_x
__builtin_sve_svdivr_n_s32_z
__builtin_sve_svdivr_n_s64_m
__builtin_sve_svdivr_n_s64_x
__builtin_sve_svdivr_n_s64_z
__builtin_sve_svdivr_n_u32_m
__builtin_sve_svdivr_n_u32_x
__builtin_sve_svdivr_n_u32_z
__builtin_sve_svdivr_n_u64_m
__builtin_sve_svdivr_n_u64_x
__builtin_sve_svdivr_n_u64_z
__builtin_sve_svdivr_s32_m
__builtin_sve_svdivr_s32_x
__builtin_sve_svdivr_s32_z
__builtin_sve_svdivr_s64_m
__builtin_sve_svdivr_s64_x
__builtin_sve_svdivr_s64_z
__builtin_sve_svdivr_u32_m
__builtin_sve_svdivr_u32_x
__builtin_sve_svdivr_u32_z
__builtin_sve_svdivr_u64_m
__builtin_sve_svdivr_u64_x
__builtin_sve_svdivr_u64_z
__builtin_sve_svdot_lane_s32
__builtin_sve_svdot_lane_s64
__builtin_sve_svdot_lane_u32
q4Uiq4Uiq16Ucq16UcIUWi
__builtin_sve_svdot_lane_u64
q2UWiq2UWiq8Usq8UsIUWi
__builtin_sve_svdot_n_s32
q4iq4iq16ScSc
__builtin_sve_svdot_n_s64
q2Wiq2Wiq8ss
__builtin_sve_svdot_n_u32
q4Uiq4Uiq16UcUc
__builtin_sve_svdot_n_u64
q2UWiq2UWiq8UsUs
__builtin_sve_svdot_s32
q4iq4iq16Scq16Sc
__builtin_sve_svdot_s64
q2Wiq2Wiq8sq8s
__builtin_sve_svdot_u32
q4Uiq4Uiq16Ucq16Uc
__builtin_sve_svdot_u64
q2UWiq2UWiq8Usq8Us
__builtin_sve_svdup_lane_bf16
q8yq8yUs
__builtin_sve_svdup_lane_f16
q8hq8hUs
__builtin_sve_svdup_lane_f32
q4fq4fUi
__builtin_sve_svdup_lane_f64
q2dq2dUWi
__builtin_sve_svdup_lane_s16
q8sq8sUs
__builtin_sve_svdup_lane_s32
q4iq4iUi
__builtin_sve_svdup_lane_s64
q2Wiq2WiUWi
__builtin_sve_svdup_lane_s8
q16Scq16ScUc
__builtin_sve_svdup_lane_u16
__builtin_sve_svdup_lane_u32
__builtin_sve_svdup_lane_u64
__builtin_sve_svdup_lane_u8
__builtin_sve_svdup_n_b16
q16bb
__builtin_sve_svdup_n_b32
__builtin_sve_svdup_n_b64
__builtin_sve_svdup_n_b8
__builtin_sve_svdup_n_bf16
q8yy
__builtin_sve_svdup_n_bf16_m
q8yq8yq16by
__builtin_sve_svdup_n_bf16_x
q8yq16by
__builtin_sve_svdup_n_bf16_z
__builtin_sve_svdup_n_f16
q8hh
__builtin_sve_svdup_n_f16_m
q8hq8hq16bh
__builtin_sve_svdup_n_f16_x
q8hq16bh
__builtin_sve_svdup_n_f16_z
__builtin_sve_svdup_n_f32
q4ff
__builtin_sve_svdup_n_f32_m
q4fq4fq16bf
__builtin_sve_svdup_n_f32_x
q4fq16bf
__builtin_sve_svdup_n_f32_z
__builtin_sve_svdup_n_f64
q2dd
__builtin_sve_svdup_n_f64_m
q2dq2dq16bd
__builtin_sve_svdup_n_f64_x
q2dq16bd
__builtin_sve_svdup_n_f64_z
__builtin_sve_svdup_n_s16
q8ss
__builtin_sve_svdup_n_s16_m
q8sq8sq16bs
__builtin_sve_svdup_n_s16_x
q8sq16bs
__builtin_sve_svdup_n_s16_z
__builtin_sve_svdup_n_s32
q4ii
__builtin_sve_svdup_n_s32_m
q4iq4iq16bi
__builtin_sve_svdup_n_s32_x
q4iq16bi
__builtin_sve_svdup_n_s32_z
__builtin_sve_svdup_n_s64
q2WiWi
__builtin_sve_svdup_n_s64_m
q2Wiq2Wiq16bWi
__builtin_sve_svdup_n_s64_x
q2Wiq16bWi
__builtin_sve_svdup_n_s64_z
__builtin_sve_svdup_n_s8
q16ScSc
__builtin_sve_svdup_n_s8_m
q16Scq16Scq16bSc
__builtin_sve_svdup_n_s8_x
q16Scq16bSc
__builtin_sve_svdup_n_s8_z
__builtin_sve_svdup_n_u16
q8UsUs
__builtin_sve_svdup_n_u16_m
q8Usq8Usq16bUs
__builtin_sve_svdup_n_u16_x
q8Usq16bUs
__builtin_sve_svdup_n_u16_z
__builtin_sve_svdup_n_u32
q4UiUi
__builtin_sve_svdup_n_u32_m
q4Uiq4Uiq16bUi
__builtin_sve_svdup_n_u32_x
q4Uiq16bUi
__builtin_sve_svdup_n_u32_z
__builtin_sve_svdup_n_u64
q2UWiUWi
__builtin_sve_svdup_n_u64_m
q2UWiq2UWiq16bUWi
__builtin_sve_svdup_n_u64_x
q2UWiq16bUWi
__builtin_sve_svdup_n_u64_z
__builtin_sve_svdup_n_u8
q16UcUc
__builtin_sve_svdup_n_u8_m
q16Ucq16Ucq16bUc
__builtin_sve_svdup_n_u8_x
q16Ucq16bUc
__builtin_sve_svdup_n_u8_z
__builtin_sve_svdupq_lane_bf16
q8yq8yUWi
__builtin_sve_svdupq_lane_f16
q8hq8hUWi
__builtin_sve_svdupq_lane_f32
q4fq4fUWi
__builtin_sve_svdupq_lane_f64
__builtin_sve_svdupq_lane_s16
q8sq8sUWi
__builtin_sve_svdupq_lane_s32
q4iq4iUWi
__builtin_sve_svdupq_lane_s64
__builtin_sve_svdupq_lane_s8
q16Scq16ScUWi
__builtin_sve_svdupq_lane_u16
q8Usq8UsUWi
__builtin_sve_svdupq_lane_u32
q4Uiq4UiUWi
__builtin_sve_svdupq_lane_u64
__builtin_sve_svdupq_lane_u8
q16Ucq16UcUWi
__builtin_sve_svdupq_n_b16
q16bbbbbbbbb
__builtin_sve_svdupq_n_b32
q16bbbbb
__builtin_sve_svdupq_n_b64
q16bbb
__builtin_sve_svdupq_n_b8
q16bbbbbbbbbbbbbbbbb
__builtin_sve_svdupq_n_bf16
q8yyyyyyyyy
__builtin_sve_svdupq_n_f16
q8hhhhhhhhh
__builtin_sve_svdupq_n_f32
q4fffff
__builtin_sve_svdupq_n_f64
q2ddd
__builtin_sve_svdupq_n_s16
q8sssssssss
__builtin_sve_svdupq_n_s32
q4iiiii
__builtin_sve_svdupq_n_s64
q2WiWiWi
__builtin_sve_svdupq_n_s8
q16ScScScScScScScScScScScScScScScScSc
__builtin_sve_svdupq_n_u16
q8UsUsUsUsUsUsUsUsUs
__builtin_sve_svdupq_n_u32
q4UiUiUiUiUi
__builtin_sve_svdupq_n_u64
q2UWiUWiUWi
__builtin_sve_svdupq_n_u8
q16UcUcUcUcUcUcUcUcUcUcUcUcUcUcUcUcUc
__builtin_sve_sveor3_n_s16
__builtin_sve_sveor3_n_s32
__builtin_sve_sveor3_n_s64
__builtin_sve_sveor3_n_s8
__builtin_sve_sveor3_n_u16
__builtin_sve_sveor3_n_u32
__builtin_sve_sveor3_n_u64
__builtin_sve_sveor3_n_u8
__builtin_sve_sveor3_s16
__builtin_sve_sveor3_s32
__builtin_sve_sveor3_s64
__builtin_sve_sveor3_s8
__builtin_sve_sveor3_u16
__builtin_sve_sveor3_u32
__builtin_sve_sveor3_u64
__builtin_sve_sveor3_u8
__builtin_sve_sveor_b_z
__builtin_sve_sveor_n_s16_m
__builtin_sve_sveor_n_s16_x
__builtin_sve_sveor_n_s16_z
__builtin_sve_sveor_n_s32_m
__builtin_sve_sveor_n_s32_x
__builtin_sve_sveor_n_s32_z
__builtin_sve_sveor_n_s64_m
__builtin_sve_sveor_n_s64_x
__builtin_sve_sveor_n_s64_z
__builtin_sve_sveor_n_s8_m
__builtin_sve_sveor_n_s8_x
__builtin_sve_sveor_n_s8_z
__builtin_sve_sveor_n_u16_m
__builtin_sve_sveor_n_u16_x
__builtin_sve_sveor_n_u16_z
__builtin_sve_sveor_n_u32_m
__builtin_sve_sveor_n_u32_x
__builtin_sve_sveor_n_u32_z
__builtin_sve_sveor_n_u64_m
__builtin_sve_sveor_n_u64_x
__builtin_sve_sveor_n_u64_z
__builtin_sve_sveor_n_u8_m
__builtin_sve_sveor_n_u8_x
__builtin_sve_sveor_n_u8_z
__builtin_sve_sveor_s16_m
__builtin_sve_sveor_s16_x
__builtin_sve_sveor_s16_z
__builtin_sve_sveor_s32_m
__builtin_sve_sveor_s32_x
__builtin_sve_sveor_s32_z
__builtin_sve_sveor_s64_m
__builtin_sve_sveor_s64_x
__builtin_sve_sveor_s64_z
__builtin_sve_sveor_s8_m
__builtin_sve_sveor_s8_x
__builtin_sve_sveor_s8_z
__builtin_sve_sveor_u16_m
__builtin_sve_sveor_u16_x
__builtin_sve_sveor_u16_z
__builtin_sve_sveor_u32_m
__builtin_sve_sveor_u32_x
__builtin_sve_sveor_u32_z
__builtin_sve_sveor_u64_m
__builtin_sve_sveor_u64_x
__builtin_sve_sveor_u64_z
__builtin_sve_sveor_u8_m
__builtin_sve_sveor_u8_x
__builtin_sve_sveor_u8_z
__builtin_sve_sveorbt_n_s16
__builtin_sve_sveorbt_n_s32
__builtin_sve_sveorbt_n_s64
__builtin_sve_sveorbt_n_s8
__builtin_sve_sveorbt_n_u16
__builtin_sve_sveorbt_n_u32
__builtin_sve_sveorbt_n_u64
__builtin_sve_sveorbt_n_u8
__builtin_sve_sveorbt_s16
__builtin_sve_sveorbt_s32
__builtin_sve_sveorbt_s64
__builtin_sve_sveorbt_s8
__builtin_sve_sveorbt_u16
__builtin_sve_sveorbt_u32
__builtin_sve_sveorbt_u64
__builtin_sve_sveorbt_u8
__builtin_sve_sveortb_n_s16
__builtin_sve_sveortb_n_s32
__builtin_sve_sveortb_n_s64
__builtin_sve_sveortb_n_s8
__builtin_sve_sveortb_n_u16
__builtin_sve_sveortb_n_u32
__builtin_sve_sveortb_n_u64
__builtin_sve_sveortb_n_u8
__builtin_sve_sveortb_s16
__builtin_sve_sveortb_s32
__builtin_sve_sveortb_s64
__builtin_sve_sveortb_s8
__builtin_sve_sveortb_u16
__builtin_sve_sveortb_u32
__builtin_sve_sveortb_u64
__builtin_sve_sveortb_u8
__builtin_sve_sveorv_s16
__builtin_sve_sveorv_s32
__builtin_sve_sveorv_s64
__builtin_sve_sveorv_s8
__builtin_sve_sveorv_u16
__builtin_sve_sveorv_u32
__builtin_sve_sveorv_u64
__builtin_sve_sveorv_u8
__builtin_sve_svexpa_f16
q8hq8Us
__builtin_sve_svexpa_f32
q4fq4Ui
__builtin_sve_svexpa_f64
q2dq2UWi
__builtin_sve_svext_bf16
q8yq8yq8yIUWi
__builtin_sve_svext_f16
q8hq8hq8hIUWi
__builtin_sve_svext_f32
q4fq4fq4fIUWi
__builtin_sve_svext_f64
q2dq2dq2dIUWi
__builtin_sve_svext_s16
__builtin_sve_svext_s32
__builtin_sve_svext_s64
__builtin_sve_svext_s8
__builtin_sve_svext_u16
__builtin_sve_svext_u32
__builtin_sve_svext_u64
__builtin_sve_svext_u8
__builtin_sve_svextb_s16_m
__builtin_sve_svextb_s16_x
__builtin_sve_svextb_s16_z
__builtin_sve_svextb_s32_m
__builtin_sve_svextb_s32_x
__builtin_sve_svextb_s32_z
__builtin_sve_svextb_s64_m
__builtin_sve_svextb_s64_x
__builtin_sve_svextb_s64_z
__builtin_sve_svextb_u16_m
__builtin_sve_svextb_u16_x
__builtin_sve_svextb_u16_z
__builtin_sve_svextb_u32_m
__builtin_sve_svextb_u32_x
__builtin_sve_svextb_u32_z
__builtin_sve_svextb_u64_m
__builtin_sve_svextb_u64_x
__builtin_sve_svextb_u64_z
__builtin_sve_svexth_s32_m
__builtin_sve_svexth_s32_x
__builtin_sve_svexth_s32_z
__builtin_sve_svexth_s64_m
__builtin_sve_svexth_s64_x
__builtin_sve_svexth_s64_z
__builtin_sve_svexth_u32_m
__builtin_sve_svexth_u32_x
__builtin_sve_svexth_u32_z
__builtin_sve_svexth_u64_m
__builtin_sve_svexth_u64_x
__builtin_sve_svexth_u64_z
__builtin_sve_svextw_s64_m
__builtin_sve_svextw_s64_x
__builtin_sve_svextw_s64_z
__builtin_sve_svextw_u64_m
__builtin_sve_svextw_u64_x
__builtin_sve_svextw_u64_z
__builtin_sve_svget2_bf16
q8yq16yIUWi
__builtin_sve_svget2_f16
q8hq16hIUWi
__builtin_sve_svget2_f32
q4fq8fIUWi
__builtin_sve_svget2_f64
q2dq4dIUWi
__builtin_sve_svget2_s16
q8sq16sIUWi
__builtin_sve_svget2_s32
q4iq8iIUWi
__builtin_sve_svget2_s64
q2Wiq4WiIUWi
__builtin_sve_svget2_s8
q16Scq32ScIUWi
__builtin_sve_svget2_u16
q8Usq16UsIUWi
__builtin_sve_svget2_u32
q4Uiq8UiIUWi
__builtin_sve_svget2_u64
q2UWiq4UWiIUWi
__builtin_sve_svget2_u8
q16Ucq32UcIUWi
__builtin_sve_svget3_bf16
q8yq24yIUWi
__builtin_sve_svget3_f16
q8hq24hIUWi
__builtin_sve_svget3_f32
q4fq12fIUWi
__builtin_sve_svget3_f64
q2dq6dIUWi
__builtin_sve_svget3_s16
q8sq24sIUWi
__builtin_sve_svget3_s32
q4iq12iIUWi
__builtin_sve_svget3_s64
q2Wiq6WiIUWi
__builtin_sve_svget3_s8
q16Scq48ScIUWi
__builtin_sve_svget3_u16
q8Usq24UsIUWi
__builtin_sve_svget3_u32
q4Uiq12UiIUWi
__builtin_sve_svget3_u64
q2UWiq6UWiIUWi
__builtin_sve_svget3_u8
q16Ucq48UcIUWi
__builtin_sve_svget4_bf16
q8yq32yIUWi
__builtin_sve_svget4_f16
q8hq32hIUWi
__builtin_sve_svget4_f32
q4fq16fIUWi
__builtin_sve_svget4_f64
q2dq8dIUWi
__builtin_sve_svget4_s16
q8sq32sIUWi
__builtin_sve_svget4_s32
q4iq16iIUWi
__builtin_sve_svget4_s64
q2Wiq8WiIUWi
__builtin_sve_svget4_s8
q16Scq64ScIUWi
__builtin_sve_svget4_u16
q8Usq32UsIUWi
__builtin_sve_svget4_u32
q4Uiq16UiIUWi
__builtin_sve_svget4_u64
q2UWiq8UWiIUWi
__builtin_sve_svget4_u8
q16Ucq64UcIUWi
__builtin_sve_svhadd_n_s16_m
__builtin_sve_svhadd_n_s16_x
__builtin_sve_svhadd_n_s16_z
__builtin_sve_svhadd_n_s32_m
__builtin_sve_svhadd_n_s32_x
__builtin_sve_svhadd_n_s32_z
__builtin_sve_svhadd_n_s64_m
__builtin_sve_svhadd_n_s64_x
__builtin_sve_svhadd_n_s64_z
__builtin_sve_svhadd_n_s8_m
__builtin_sve_svhadd_n_s8_x
__builtin_sve_svhadd_n_s8_z
__builtin_sve_svhadd_n_u16_m
__builtin_sve_svhadd_n_u16_x
__builtin_sve_svhadd_n_u16_z
__builtin_sve_svhadd_n_u32_m
__builtin_sve_svhadd_n_u32_x
__builtin_sve_svhadd_n_u32_z
__builtin_sve_svhadd_n_u64_m
__builtin_sve_svhadd_n_u64_x
__builtin_sve_svhadd_n_u64_z
__builtin_sve_svhadd_n_u8_m
__builtin_sve_svhadd_n_u8_x
__builtin_sve_svhadd_n_u8_z
__builtin_sve_svhadd_s16_m
__builtin_sve_svhadd_s16_x
__builtin_sve_svhadd_s16_z
__builtin_sve_svhadd_s32_m
__builtin_sve_svhadd_s32_x
__builtin_sve_svhadd_s32_z
__builtin_sve_svhadd_s64_m
__builtin_sve_svhadd_s64_x
__builtin_sve_svhadd_s64_z
__builtin_sve_svhadd_s8_m
__builtin_sve_svhadd_s8_x
__builtin_sve_svhadd_s8_z
__builtin_sve_svhadd_u16_m
__builtin_sve_svhadd_u16_x
__builtin_sve_svhadd_u16_z
__builtin_sve_svhadd_u32_m
__builtin_sve_svhadd_u32_x
__builtin_sve_svhadd_u32_z
__builtin_sve_svhadd_u64_m
__builtin_sve_svhadd_u64_x
__builtin_sve_svhadd_u64_z
__builtin_sve_svhadd_u8_m
__builtin_sve_svhadd_u8_x
__builtin_sve_svhadd_u8_z
__builtin_sve_svhistcnt_s32_z
q4Uiq16bq4iq4i
__builtin_sve_svhistcnt_s64_z
q2UWiq16bq2Wiq2Wi
__builtin_sve_svhistcnt_u32_z
__builtin_sve_svhistcnt_u64_z
__builtin_sve_svhistseg_s8
q16Ucq16Scq16Sc
__builtin_sve_svhistseg_u8
__builtin_sve_svhsub_n_s16_m
__builtin_sve_svhsub_n_s16_x
__builtin_sve_svhsub_n_s16_z
__builtin_sve_svhsub_n_s32_m
__builtin_sve_svhsub_n_s32_x
__builtin_sve_svhsub_n_s32_z
__builtin_sve_svhsub_n_s64_m
__builtin_sve_svhsub_n_s64_x
__builtin_sve_svhsub_n_s64_z
__builtin_sve_svhsub_n_s8_m
__builtin_sve_svhsub_n_s8_x
__builtin_sve_svhsub_n_s8_z
__builtin_sve_svhsub_n_u16_m
__builtin_sve_svhsub_n_u16_x
__builtin_sve_svhsub_n_u16_z
__builtin_sve_svhsub_n_u32_m
__builtin_sve_svhsub_n_u32_x
__builtin_sve_svhsub_n_u32_z
__builtin_sve_svhsub_n_u64_m
__builtin_sve_svhsub_n_u64_x
__builtin_sve_svhsub_n_u64_z
__builtin_sve_svhsub_n_u8_m
__builtin_sve_svhsub_n_u8_x
__builtin_sve_svhsub_n_u8_z
__builtin_sve_svhsub_s16_m
__builtin_sve_svhsub_s16_x
__builtin_sve_svhsub_s16_z
__builtin_sve_svhsub_s32_m
__builtin_sve_svhsub_s32_x
__builtin_sve_svhsub_s32_z
__builtin_sve_svhsub_s64_m
__builtin_sve_svhsub_s64_x
__builtin_sve_svhsub_s64_z
__builtin_sve_svhsub_s8_m
__builtin_sve_svhsub_s8_x
__builtin_sve_svhsub_s8_z
__builtin_sve_svhsub_u16_m
__builtin_sve_svhsub_u16_x
__builtin_sve_svhsub_u16_z
__builtin_sve_svhsub_u32_m
__builtin_sve_svhsub_u32_x
__builtin_sve_svhsub_u32_z
__builtin_sve_svhsub_u64_m
__builtin_sve_svhsub_u64_x
__builtin_sve_svhsub_u64_z
__builtin_sve_svhsub_u8_m
__builtin_sve_svhsub_u8_x
__builtin_sve_svhsub_u8_z
__builtin_sve_svhsubr_n_s16_m
__builtin_sve_svhsubr_n_s16_x
__builtin_sve_svhsubr_n_s16_z
__builtin_sve_svhsubr_n_s32_m
__builtin_sve_svhsubr_n_s32_x
__builtin_sve_svhsubr_n_s32_z
__builtin_sve_svhsubr_n_s64_m
__builtin_sve_svhsubr_n_s64_x
__builtin_sve_svhsubr_n_s64_z
__builtin_sve_svhsubr_n_s8_m
__builtin_sve_svhsubr_n_s8_x
__builtin_sve_svhsubr_n_s8_z
__builtin_sve_svhsubr_n_u16_m
__builtin_sve_svhsubr_n_u16_x
__builtin_sve_svhsubr_n_u16_z
__builtin_sve_svhsubr_n_u32_m
__builtin_sve_svhsubr_n_u32_x
__builtin_sve_svhsubr_n_u32_z
__builtin_sve_svhsubr_n_u64_m
__builtin_sve_svhsubr_n_u64_x
__builtin_sve_svhsubr_n_u64_z
__builtin_sve_svhsubr_n_u8_m
__builtin_sve_svhsubr_n_u8_x
__builtin_sve_svhsubr_n_u8_z
__builtin_sve_svhsubr_s16_m
__builtin_sve_svhsubr_s16_x
__builtin_sve_svhsubr_s16_z
__builtin_sve_svhsubr_s32_m
__builtin_sve_svhsubr_s32_x
__builtin_sve_svhsubr_s32_z
__builtin_sve_svhsubr_s64_m
__builtin_sve_svhsubr_s64_x
__builtin_sve_svhsubr_s64_z
__builtin_sve_svhsubr_s8_m
__builtin_sve_svhsubr_s8_x
__builtin_sve_svhsubr_s8_z
__builtin_sve_svhsubr_u16_m
__builtin_sve_svhsubr_u16_x
__builtin_sve_svhsubr_u16_z
__builtin_sve_svhsubr_u32_m
__builtin_sve_svhsubr_u32_x
__builtin_sve_svhsubr_u32_z
__builtin_sve_svhsubr_u64_m
__builtin_sve_svhsubr_u64_x
__builtin_sve_svhsubr_u64_z
__builtin_sve_svhsubr_u8_m
__builtin_sve_svhsubr_u8_x
__builtin_sve_svhsubr_u8_z
__builtin_sve_svindex_s16
q8sss
__builtin_sve_svindex_s32
q4iii
__builtin_sve_svindex_s64
__builtin_sve_svindex_s8
q16ScScSc
__builtin_sve_svindex_u16
q8UsUsUs
__builtin_sve_svindex_u32
q4UiUiUi
__builtin_sve_svindex_u64
__builtin_sve_svindex_u8
q16UcUcUc
__builtin_sve_svinsr_n_bf16
q8yq8yy
__builtin_sve_svinsr_n_f16
q8hq8hh
__builtin_sve_svinsr_n_f32
q4fq4ff
__builtin_sve_svinsr_n_f64
q2dq2dd
__builtin_sve_svinsr_n_s16
q8sq8ss
__builtin_sve_svinsr_n_s32
q4iq4ii
__builtin_sve_svinsr_n_s64
q2Wiq2WiWi
__builtin_sve_svinsr_n_s8
q16Scq16ScSc
__builtin_sve_svinsr_n_u16
__builtin_sve_svinsr_n_u32
__builtin_sve_svinsr_n_u64
__builtin_sve_svinsr_n_u8
__builtin_sve_svlasta_bf16
yq16bq8y
__builtin_sve_svlasta_f16
__builtin_sve_svlasta_f32
__builtin_sve_svlasta_f64
__builtin_sve_svlasta_s16
__builtin_sve_svlasta_s32
__builtin_sve_svlasta_s64
__builtin_sve_svlasta_s8
__builtin_sve_svlasta_u16
__builtin_sve_svlasta_u32
__builtin_sve_svlasta_u64
__builtin_sve_svlasta_u8
__builtin_sve_svlastb_bf16
__builtin_sve_svlastb_f16
__builtin_sve_svlastb_f32
__builtin_sve_svlastb_f64
__builtin_sve_svlastb_s16
__builtin_sve_svlastb_s32
__builtin_sve_svlastb_s64
__builtin_sve_svlastb_s8
__builtin_sve_svlastb_u16
__builtin_sve_svlastb_u32
__builtin_sve_svlastb_u64
__builtin_sve_svlastb_u8
__builtin_sve_svld1_bf16
q8yq16byC*
__builtin_sve_svld1_f16
q8hq16bhC*
__builtin_sve_svld1_f32
q4fq16bfC*
__builtin_sve_svld1_f64
q2dq16bdC*
__builtin_sve_svld1_gather_s32index_f32
q4fq16bfC*q4i
__builtin_sve_svld1_gather_s32index_s32
q4iq16bSiC*q4i
__builtin_sve_svld1_gather_s32index_u32
q4Uiq16bUiC*q4i
__builtin_sve_svld1_gather_s32offset_f32
__builtin_sve_svld1_gather_s32offset_s32
__builtin_sve_svld1_gather_s32offset_u32
__builtin_sve_svld1_gather_s64index_f64
q2dq16bdC*q2Wi
__builtin_sve_svld1_gather_s64index_s64
q2Wiq16bSWiC*q2Wi
__builtin_sve_svld1_gather_s64index_u64
q2UWiq16bUWiC*q2Wi
__builtin_sve_svld1_gather_s64offset_f64
__builtin_sve_svld1_gather_s64offset_s64
__builtin_sve_svld1_gather_s64offset_u64
__builtin_sve_svld1_gather_u32base_f32
__builtin_sve_svld1_gather_u32base_index_f32
q4fq16bq4UiWi
__builtin_sve_svld1_gather_u32base_index_s32
q4iq16bq4UiWi
__builtin_sve_svld1_gather_u32base_index_u32
q4Uiq16bq4UiWi
__builtin_sve_svld1_gather_u32base_offset_f32
__builtin_sve_svld1_gather_u32base_offset_s32
__builtin_sve_svld1_gather_u32base_offset_u32
__builtin_sve_svld1_gather_u32base_s32
q4iq16bq4Ui
__builtin_sve_svld1_gather_u32base_u32
__builtin_sve_svld1_gather_u32index_f32
q4fq16bfC*q4Ui
__builtin_sve_svld1_gather_u32index_s32
q4iq16bSiC*q4Ui
__builtin_sve_svld1_gather_u32index_u32
q4Uiq16bUiC*q4Ui
__builtin_sve_svld1_gather_u32offset_f32
__builtin_sve_svld1_gather_u32offset_s32
__builtin_sve_svld1_gather_u32offset_u32
__builtin_sve_svld1_gather_u64base_f64
__builtin_sve_svld1_gather_u64base_index_f64
q2dq16bq2UWiWi
__builtin_sve_svld1_gather_u64base_index_s64
q2Wiq16bq2UWiWi
__builtin_sve_svld1_gather_u64base_index_u64
q2UWiq16bq2UWiWi
__builtin_sve_svld1_gather_u64base_offset_f64
__builtin_sve_svld1_gather_u64base_offset_s64
__builtin_sve_svld1_gather_u64base_offset_u64
__builtin_sve_svld1_gather_u64base_s64
q2Wiq16bq2UWi
__builtin_sve_svld1_gather_u64base_u64
__builtin_sve_svld1_gather_u64index_f64
q2dq16bdC*q2UWi
__builtin_sve_svld1_gather_u64index_s64
q2Wiq16bSWiC*q2UWi
__builtin_sve_svld1_gather_u64index_u64
q2UWiq16bUWiC*q2UWi
__builtin_sve_svld1_gather_u64offset_f64
__builtin_sve_svld1_gather_u64offset_s64
__builtin_sve_svld1_gather_u64offset_u64
__builtin_sve_svld1_s16
q8sq16bSsC*
__builtin_sve_svld1_s32
q4iq16bSiC*
__builtin_sve_svld1_s64
q2Wiq16bSWiC*
__builtin_sve_svld1_s8
q16Scq16bScC*
__builtin_sve_svld1_u16
q8Usq16bUsC*
__builtin_sve_svld1_u32
q4Uiq16bUiC*
__builtin_sve_svld1_u64
q2UWiq16bUWiC*
__builtin_sve_svld1_u8
q16Ucq16bUcC*
__builtin_sve_svld1_vnum_bf16
q8yq16byC*Wi
__builtin_sve_svld1_vnum_f16
q8hq16bhC*Wi
__builtin_sve_svld1_vnum_f32
q4fq16bfC*Wi
__builtin_sve_svld1_vnum_f64
q2dq16bdC*Wi
__builtin_sve_svld1_vnum_s16
q8sq16bSsC*Wi
__builtin_sve_svld1_vnum_s32
q4iq16bSiC*Wi
__builtin_sve_svld1_vnum_s64
q2Wiq16bSWiC*Wi
__builtin_sve_svld1_vnum_s8
q16Scq16bScC*Wi
__builtin_sve_svld1_vnum_u16
q8Usq16bUsC*Wi
__builtin_sve_svld1_vnum_u32
q4Uiq16bUiC*Wi
__builtin_sve_svld1_vnum_u64
q2UWiq16bUWiC*Wi
__builtin_sve_svld1_vnum_u8
q16Ucq16bUcC*Wi
__builtin_sve_svld1ro_bf16
__builtin_sve_svld1ro_f16
__builtin_sve_svld1ro_f32
__builtin_sve_svld1ro_f64
__builtin_sve_svld1ro_s16
__builtin_sve_svld1ro_s32
__builtin_sve_svld1ro_s64
__builtin_sve_svld1ro_s8
__builtin_sve_svld1ro_u16
__builtin_sve_svld1ro_u32
__builtin_sve_svld1ro_u64
__builtin_sve_svld1ro_u8
__builtin_sve_svld1rq_bf16
__builtin_sve_svld1rq_f16
__builtin_sve_svld1rq_f32
__builtin_sve_svld1rq_f64
__builtin_sve_svld1rq_s16
__builtin_sve_svld1rq_s32
__builtin_sve_svld1rq_s64
__builtin_sve_svld1rq_s8
__builtin_sve_svld1rq_u16
__builtin_sve_svld1rq_u32
__builtin_sve_svld1rq_u64
__builtin_sve_svld1rq_u8
__builtin_sve_svld1sb_gather_s32offset_s32
q4iq16bScC*q4i
__builtin_sve_svld1sb_gather_s32offset_u32
q4Uiq16bScC*q4i
__builtin_sve_svld1sb_gather_s64offset_s64
q2Wiq16bScC*q2Wi
__builtin_sve_svld1sb_gather_s64offset_u64
q2UWiq16bScC*q2Wi
__builtin_sve_svld1sb_gather_u32base_offset_s32
__builtin_sve_svld1sb_gather_u32base_offset_u32
__builtin_sve_svld1sb_gather_u32base_s32
__builtin_sve_svld1sb_gather_u32base_u32
__builtin_sve_svld1sb_gather_u32offset_s32
q4iq16bScC*q4Ui
__builtin_sve_svld1sb_gather_u32offset_u32
q4Uiq16bScC*q4Ui
__builtin_sve_svld1sb_gather_u64base_offset_s64
__builtin_sve_svld1sb_gather_u64base_offset_u64
__builtin_sve_svld1sb_gather_u64base_s64
__builtin_sve_svld1sb_gather_u64base_u64
__builtin_sve_svld1sb_gather_u64offset_s64
q2Wiq16bScC*q2UWi
__builtin_sve_svld1sb_gather_u64offset_u64
q2UWiq16bScC*q2UWi
__builtin_sve_svld1sb_s16
q8sq16bScC*
__builtin_sve_svld1sb_s32
q4iq16bScC*
__builtin_sve_svld1sb_s64
q2Wiq16bScC*
__builtin_sve_svld1sb_u16
q8Usq16bScC*
__builtin_sve_svld1sb_u32
q4Uiq16bScC*
__builtin_sve_svld1sb_u64
q2UWiq16bScC*
__builtin_sve_svld1sb_vnum_s16
q8sq16bScC*Wi
__builtin_sve_svld1sb_vnum_s32
q4iq16bScC*Wi
__builtin_sve_svld1sb_vnum_s64
q2Wiq16bScC*Wi
__builtin_sve_svld1sb_vnum_u16
q8Usq16bScC*Wi
__builtin_sve_svld1sb_vnum_u32
q4Uiq16bScC*Wi
__builtin_sve_svld1sb_vnum_u64
q2UWiq16bScC*Wi
__builtin_sve_svld1sh_gather_s32index_s32
q4iq16bSsC*q4i
__builtin_sve_svld1sh_gather_s32index_u32
q4Uiq16bSsC*q4i
__builtin_sve_svld1sh_gather_s32offset_s32
__builtin_sve_svld1sh_gather_s32offset_u32
__builtin_sve_svld1sh_gather_s64index_s64
q2Wiq16bSsC*q2Wi
__builtin_sve_svld1sh_gather_s64index_u64
q2UWiq16bSsC*q2Wi
__builtin_sve_svld1sh_gather_s64offset_s64
__builtin_sve_svld1sh_gather_s64offset_u64
__builtin_sve_svld1sh_gather_u32base_index_s32
__builtin_sve_svld1sh_gather_u32base_index_u32
__builtin_sve_svld1sh_gather_u32base_offset_s32
__builtin_sve_svld1sh_gather_u32base_offset_u32
__builtin_sve_svld1sh_gather_u32base_s32
__builtin_sve_svld1sh_gather_u32base_u32
__builtin_sve_svld1sh_gather_u32index_s32
q4iq16bSsC*q4Ui
__builtin_sve_svld1sh_gather_u32index_u32
q4Uiq16bSsC*q4Ui
__builtin_sve_svld1sh_gather_u32offset_s32
__builtin_sve_svld1sh_gather_u32offset_u32
__builtin_sve_svld1sh_gather_u64base_index_s64
__builtin_sve_svld1sh_gather_u64base_index_u64
__builtin_sve_svld1sh_gather_u64base_offset_s64
__builtin_sve_svld1sh_gather_u64base_offset_u64
__builtin_sve_svld1sh_gather_u64base_s64
__builtin_sve_svld1sh_gather_u64base_u64
__builtin_sve_svld1sh_gather_u64index_s64
q2Wiq16bSsC*q2UWi
__builtin_sve_svld1sh_gather_u64index_u64
q2UWiq16bSsC*q2UWi
__builtin_sve_svld1sh_gather_u64offset_s64
__builtin_sve_svld1sh_gather_u64offset_u64
__builtin_sve_svld1sh_s32
q4iq16bSsC*
__builtin_sve_svld1sh_s64
q2Wiq16bSsC*
__builtin_sve_svld1sh_u32
q4Uiq16bSsC*
__builtin_sve_svld1sh_u64
q2UWiq16bSsC*
__builtin_sve_svld1sh_vnum_s32
q4iq16bSsC*Wi
__builtin_sve_svld1sh_vnum_s64
q2Wiq16bSsC*Wi
__builtin_sve_svld1sh_vnum_u32
q4Uiq16bSsC*Wi
__builtin_sve_svld1sh_vnum_u64
q2UWiq16bSsC*Wi
__builtin_sve_svld1sw_gather_s64index_s64
q2Wiq16bSiC*q2Wi
__builtin_sve_svld1sw_gather_s64index_u64
q2UWiq16bSiC*q2Wi
__builtin_sve_svld1sw_gather_s64offset_s64
__builtin_sve_svld1sw_gather_s64offset_u64
__builtin_sve_svld1sw_gather_u64base_index_s64
__builtin_sve_svld1sw_gather_u64base_index_u64
__builtin_sve_svld1sw_gather_u64base_offset_s64
__builtin_sve_svld1sw_gather_u64base_offset_u64
__builtin_sve_svld1sw_gather_u64base_s64
__builtin_sve_svld1sw_gather_u64base_u64
__builtin_sve_svld1sw_gather_u64index_s64
q2Wiq16bSiC*q2UWi
__builtin_sve_svld1sw_gather_u64index_u64
q2UWiq16bSiC*q2UWi
__builtin_sve_svld1sw_gather_u64offset_s64
__builtin_sve_svld1sw_gather_u64offset_u64
__builtin_sve_svld1sw_s64
q2Wiq16bSiC*
__builtin_sve_svld1sw_u64
q2UWiq16bSiC*
__builtin_sve_svld1sw_vnum_s64
q2Wiq16bSiC*Wi
__builtin_sve_svld1sw_vnum_u64
q2UWiq16bSiC*Wi
__builtin_sve_svld1ub_gather_s32offset_s32
q4iq16bUcC*q4i
__builtin_sve_svld1ub_gather_s32offset_u32
q4Uiq16bUcC*q4i
__builtin_sve_svld1ub_gather_s64offset_s64
q2Wiq16bUcC*q2Wi
__builtin_sve_svld1ub_gather_s64offset_u64
q2UWiq16bUcC*q2Wi
__builtin_sve_svld1ub_gather_u32base_offset_s32
__builtin_sve_svld1ub_gather_u32base_offset_u32
__builtin_sve_svld1ub_gather_u32base_s32
__builtin_sve_svld1ub_gather_u32base_u32
__builtin_sve_svld1ub_gather_u32offset_s32
q4iq16bUcC*q4Ui
__builtin_sve_svld1ub_gather_u32offset_u32
q4Uiq16bUcC*q4Ui
__builtin_sve_svld1ub_gather_u64base_offset_s64
__builtin_sve_svld1ub_gather_u64base_offset_u64
__builtin_sve_svld1ub_gather_u64base_s64
__builtin_sve_svld1ub_gather_u64base_u64
__builtin_sve_svld1ub_gather_u64offset_s64
q2Wiq16bUcC*q2UWi
__builtin_sve_svld1ub_gather_u64offset_u64
q2UWiq16bUcC*q2UWi
__builtin_sve_svld1ub_s16
q8sq16bUcC*
__builtin_sve_svld1ub_s32
q4iq16bUcC*
__builtin_sve_svld1ub_s64
q2Wiq16bUcC*
__builtin_sve_svld1ub_u16
q8Usq16bUcC*
__builtin_sve_svld1ub_u32
q4Uiq16bUcC*
__builtin_sve_svld1ub_u64
q2UWiq16bUcC*
__builtin_sve_svld1ub_vnum_s16
q8sq16bUcC*Wi
__builtin_sve_svld1ub_vnum_s32
q4iq16bUcC*Wi
__builtin_sve_svld1ub_vnum_s64
q2Wiq16bUcC*Wi
__builtin_sve_svld1ub_vnum_u16
q8Usq16bUcC*Wi
__builtin_sve_svld1ub_vnum_u32
q4Uiq16bUcC*Wi
__builtin_sve_svld1ub_vnum_u64
q2UWiq16bUcC*Wi
__builtin_sve_svld1uh_gather_s32index_s32
q4iq16bUsC*q4i
__builtin_sve_svld1uh_gather_s32index_u32
q4Uiq16bUsC*q4i
__builtin_sve_svld1uh_gather_s32offset_s32
__builtin_sve_svld1uh_gather_s32offset_u32
__builtin_sve_svld1uh_gather_s64index_s64
q2Wiq16bUsC*q2Wi
__builtin_sve_svld1uh_gather_s64index_u64
q2UWiq16bUsC*q2Wi
__builtin_sve_svld1uh_gather_s64offset_s64
__builtin_sve_svld1uh_gather_s64offset_u64
__builtin_sve_svld1uh_gather_u32base_index_s32
__builtin_sve_svld1uh_gather_u32base_index_u32
__builtin_sve_svld1uh_gather_u32base_offset_s32
__builtin_sve_svld1uh_gather_u32base_offset_u32
__builtin_sve_svld1uh_gather_u32base_s32
__builtin_sve_svld1uh_gather_u32base_u32
__builtin_sve_svld1uh_gather_u32index_s32
q4iq16bUsC*q4Ui
__builtin_sve_svld1uh_gather_u32index_u32
q4Uiq16bUsC*q4Ui
__builtin_sve_svld1uh_gather_u32offset_s32
__builtin_sve_svld1uh_gather_u32offset_u32
__builtin_sve_svld1uh_gather_u64base_index_s64
__builtin_sve_svld1uh_gather_u64base_index_u64
__builtin_sve_svld1uh_gather_u64base_offset_s64
__builtin_sve_svld1uh_gather_u64base_offset_u64
__builtin_sve_svld1uh_gather_u64base_s64
__builtin_sve_svld1uh_gather_u64base_u64
__builtin_sve_svld1uh_gather_u64index_s64
q2Wiq16bUsC*q2UWi
__builtin_sve_svld1uh_gather_u64index_u64
q2UWiq16bUsC*q2UWi
__builtin_sve_svld1uh_gather_u64offset_s64
__builtin_sve_svld1uh_gather_u64offset_u64
__builtin_sve_svld1uh_s32
q4iq16bUsC*
__builtin_sve_svld1uh_s64
q2Wiq16bUsC*
__builtin_sve_svld1uh_u32
q4Uiq16bUsC*
__builtin_sve_svld1uh_u64
q2UWiq16bUsC*
__builtin_sve_svld1uh_vnum_s32
q4iq16bUsC*Wi
__builtin_sve_svld1uh_vnum_s64
q2Wiq16bUsC*Wi
__builtin_sve_svld1uh_vnum_u32
q4Uiq16bUsC*Wi
__builtin_sve_svld1uh_vnum_u64
q2UWiq16bUsC*Wi
__builtin_sve_svld1uw_gather_s64index_s64
q2Wiq16bUiC*q2Wi
__builtin_sve_svld1uw_gather_s64index_u64
q2UWiq16bUiC*q2Wi
__builtin_sve_svld1uw_gather_s64offset_s64
__builtin_sve_svld1uw_gather_s64offset_u64
__builtin_sve_svld1uw_gather_u64base_index_s64
__builtin_sve_svld1uw_gather_u64base_index_u64
__builtin_sve_svld1uw_gather_u64base_offset_s64
__builtin_sve_svld1uw_gather_u64base_offset_u64
__builtin_sve_svld1uw_gather_u64base_s64
__builtin_sve_svld1uw_gather_u64base_u64
__builtin_sve_svld1uw_gather_u64index_s64
q2Wiq16bUiC*q2UWi
__builtin_sve_svld1uw_gather_u64index_u64
q2UWiq16bUiC*q2UWi
__builtin_sve_svld1uw_gather_u64offset_s64
__builtin_sve_svld1uw_gather_u64offset_u64
__builtin_sve_svld1uw_s64
q2Wiq16bUiC*
__builtin_sve_svld1uw_u64
q2UWiq16bUiC*
__builtin_sve_svld1uw_vnum_s64
q2Wiq16bUiC*Wi
__builtin_sve_svld1uw_vnum_u64
q2UWiq16bUiC*Wi
__builtin_sve_svld2_bf16
q16yq16byC*
__builtin_sve_svld2_f16
q16hq16bhC*
__builtin_sve_svld2_f32
q8fq16bfC*
__builtin_sve_svld2_f64
q4dq16bdC*
__builtin_sve_svld2_s16
q16sq16bSsC*
__builtin_sve_svld2_s32
q8iq16bSiC*
__builtin_sve_svld2_s64
q4Wiq16bSWiC*
__builtin_sve_svld2_s8
q32Scq16bScC*
__builtin_sve_svld2_u16
q16Usq16bUsC*
__builtin_sve_svld2_u32
q8Uiq16bUiC*
__builtin_sve_svld2_u64
q4UWiq16bUWiC*
__builtin_sve_svld2_u8
q32Ucq16bUcC*
__builtin_sve_svld2_vnum_bf16
q16yq16byC*Wi
__builtin_sve_svld2_vnum_f16
q16hq16bhC*Wi
__builtin_sve_svld2_vnum_f32
q8fq16bfC*Wi
__builtin_sve_svld2_vnum_f64
q4dq16bdC*Wi
__builtin_sve_svld2_vnum_s16
q16sq16bSsC*Wi
__builtin_sve_svld2_vnum_s32
q8iq16bSiC*Wi
__builtin_sve_svld2_vnum_s64
q4Wiq16bSWiC*Wi
__builtin_sve_svld2_vnum_s8
q32Scq16bScC*Wi
__builtin_sve_svld2_vnum_u16
q16Usq16bUsC*Wi
__builtin_sve_svld2_vnum_u32
q8Uiq16bUiC*Wi
__builtin_sve_svld2_vnum_u64
q4UWiq16bUWiC*Wi
__builtin_sve_svld2_vnum_u8
q32Ucq16bUcC*Wi
__builtin_sve_svld3_bf16
q24yq16byC*
__builtin_sve_svld3_f16
q24hq16bhC*
__builtin_sve_svld3_f32
q12fq16bfC*
__builtin_sve_svld3_f64
q6dq16bdC*
__builtin_sve_svld3_s16
q24sq16bSsC*
__builtin_sve_svld3_s32
q12iq16bSiC*
__builtin_sve_svld3_s64
q6Wiq16bSWiC*
__builtin_sve_svld3_s8
q48Scq16bScC*
__builtin_sve_svld3_u16
q24Usq16bUsC*
__builtin_sve_svld3_u32
q12Uiq16bUiC*
__builtin_sve_svld3_u64
q6UWiq16bUWiC*
__builtin_sve_svld3_u8
q48Ucq16bUcC*
__builtin_sve_svld3_vnum_bf16
q24yq16byC*Wi
__builtin_sve_svld3_vnum_f16
q24hq16bhC*Wi
__builtin_sve_svld3_vnum_f32
q12fq16bfC*Wi
__builtin_sve_svld3_vnum_f64
q6dq16bdC*Wi
__builtin_sve_svld3_vnum_s16
q24sq16bSsC*Wi
__builtin_sve_svld3_vnum_s32
q12iq16bSiC*Wi
__builtin_sve_svld3_vnum_s64
q6Wiq16bSWiC*Wi
__builtin_sve_svld3_vnum_s8
q48Scq16bScC*Wi
__builtin_sve_svld3_vnum_u16
q24Usq16bUsC*Wi
__builtin_sve_svld3_vnum_u32
q12Uiq16bUiC*Wi
__builtin_sve_svld3_vnum_u64
q6UWiq16bUWiC*Wi
__builtin_sve_svld3_vnum_u8
q48Ucq16bUcC*Wi
__builtin_sve_svld4_bf16
q32yq16byC*
__builtin_sve_svld4_f16
q32hq16bhC*
__builtin_sve_svld4_f32
q16fq16bfC*
__builtin_sve_svld4_f64
q8dq16bdC*
__builtin_sve_svld4_s16
q32sq16bSsC*
__builtin_sve_svld4_s32
q16iq16bSiC*
__builtin_sve_svld4_s64
q8Wiq16bSWiC*
__builtin_sve_svld4_s8
q64Scq16bScC*
__builtin_sve_svld4_u16
q32Usq16bUsC*
__builtin_sve_svld4_u32
q16Uiq16bUiC*
__builtin_sve_svld4_u64
q8UWiq16bUWiC*
__builtin_sve_svld4_u8
q64Ucq16bUcC*
__builtin_sve_svld4_vnum_bf16
q32yq16byC*Wi
__builtin_sve_svld4_vnum_f16
q32hq16bhC*Wi
__builtin_sve_svld4_vnum_f32
q16fq16bfC*Wi
__builtin_sve_svld4_vnum_f64
q8dq16bdC*Wi
__builtin_sve_svld4_vnum_s16
q32sq16bSsC*Wi
__builtin_sve_svld4_vnum_s32
q16iq16bSiC*Wi
__builtin_sve_svld4_vnum_s64
q8Wiq16bSWiC*Wi
__builtin_sve_svld4_vnum_s8
q64Scq16bScC*Wi
__builtin_sve_svld4_vnum_u16
q32Usq16bUsC*Wi
__builtin_sve_svld4_vnum_u32
q16Uiq16bUiC*Wi
__builtin_sve_svld4_vnum_u64
q8UWiq16bUWiC*Wi
__builtin_sve_svld4_vnum_u8
q64Ucq16bUcC*Wi
__builtin_sve_svldff1_bf16
__builtin_sve_svldff1_f16
__builtin_sve_svldff1_f32
__builtin_sve_svldff1_f64
__builtin_sve_svldff1_gather_s32index_f32
__builtin_sve_svldff1_gather_s32index_s32
__builtin_sve_svldff1_gather_s32index_u32
__builtin_sve_svldff1_gather_s32offset_f32
__builtin_sve_svldff1_gather_s32offset_s32
__builtin_sve_svldff1_gather_s32offset_u32
__builtin_sve_svldff1_gather_s64index_f64
__builtin_sve_svldff1_gather_s64index_s64
__builtin_sve_svldff1_gather_s64index_u64
__builtin_sve_svldff1_gather_s64offset_f64
__builtin_sve_svldff1_gather_s64offset_s64
__builtin_sve_svldff1_gather_s64offset_u64
__builtin_sve_svldff1_gather_u32base_f32
__builtin_sve_svldff1_gather_u32base_index_f32
__builtin_sve_svldff1_gather_u32base_index_s32
__builtin_sve_svldff1_gather_u32base_index_u32
__builtin_sve_svldff1_gather_u32base_offset_f32
__builtin_sve_svldff1_gather_u32base_offset_s32
__builtin_sve_svldff1_gather_u32base_offset_u32
__builtin_sve_svldff1_gather_u32base_s32
__builtin_sve_svldff1_gather_u32base_u32
__builtin_sve_svldff1_gather_u32index_f32
__builtin_sve_svldff1_gather_u32index_s32
__builtin_sve_svldff1_gather_u32index_u32
__builtin_sve_svldff1_gather_u32offset_f32
__builtin_sve_svldff1_gather_u32offset_s32
__builtin_sve_svldff1_gather_u32offset_u32
__builtin_sve_svldff1_gather_u64base_f64
__builtin_sve_svldff1_gather_u64base_index_f64
__builtin_sve_svldff1_gather_u64base_index_s64
__builtin_sve_svldff1_gather_u64base_index_u64
__builtin_sve_svldff1_gather_u64base_offset_f64
__builtin_sve_svldff1_gather_u64base_offset_s64
__builtin_sve_svldff1_gather_u64base_offset_u64
__builtin_sve_svldff1_gather_u64base_s64
__builtin_sve_svldff1_gather_u64base_u64
__builtin_sve_svldff1_gather_u64index_f64
__builtin_sve_svldff1_gather_u64index_s64
__builtin_sve_svldff1_gather_u64index_u64
__builtin_sve_svldff1_gather_u64offset_f64
__builtin_sve_svldff1_gather_u64offset_s64
__builtin_sve_svldff1_gather_u64offset_u64
__builtin_sve_svldff1_s16
__builtin_sve_svldff1_s32
__builtin_sve_svldff1_s64
__builtin_sve_svldff1_s8
__builtin_sve_svldff1_u16
__builtin_sve_svldff1_u32
__builtin_sve_svldff1_u64
__builtin_sve_svldff1_u8
__builtin_sve_svldff1_vnum_bf16
__builtin_sve_svldff1_vnum_f16
__builtin_sve_svldff1_vnum_f32
__builtin_sve_svldff1_vnum_f64
__builtin_sve_svldff1_vnum_s16
__builtin_sve_svldff1_vnum_s32
__builtin_sve_svldff1_vnum_s64
__builtin_sve_svldff1_vnum_s8
__builtin_sve_svldff1_vnum_u16
__builtin_sve_svldff1_vnum_u32
__builtin_sve_svldff1_vnum_u64
__builtin_sve_svldff1_vnum_u8
__builtin_sve_svldff1sb_gather_s32offset_s32
__builtin_sve_svldff1sb_gather_s32offset_u32
__builtin_sve_svldff1sb_gather_s64offset_s64
__builtin_sve_svldff1sb_gather_s64offset_u64
__builtin_sve_svldff1sb_gather_u32base_offset_s32
__builtin_sve_svldff1sb_gather_u32base_offset_u32
__builtin_sve_svldff1sb_gather_u32base_s32
__builtin_sve_svldff1sb_gather_u32base_u32
__builtin_sve_svldff1sb_gather_u32offset_s32
__builtin_sve_svldff1sb_gather_u32offset_u32
__builtin_sve_svldff1sb_gather_u64base_offset_s64
__builtin_sve_svldff1sb_gather_u64base_offset_u64
__builtin_sve_svldff1sb_gather_u64base_s64
__builtin_sve_svldff1sb_gather_u64base_u64
__builtin_sve_svldff1sb_gather_u64offset_s64
__builtin_sve_svldff1sb_gather_u64offset_u64
__builtin_sve_svldff1sb_s16
__builtin_sve_svldff1sb_s32
__builtin_sve_svldff1sb_s64
__builtin_sve_svldff1sb_u16
__builtin_sve_svldff1sb_u32
__builtin_sve_svldff1sb_u64
__builtin_sve_svldff1sb_vnum_s16
__builtin_sve_svldff1sb_vnum_s32
__builtin_sve_svldff1sb_vnum_s64
__builtin_sve_svldff1sb_vnum_u16
__builtin_sve_svldff1sb_vnum_u32
__builtin_sve_svldff1sb_vnum_u64
__builtin_sve_svldff1sh_gather_s32index_s32
__builtin_sve_svldff1sh_gather_s32index_u32
__builtin_sve_svldff1sh_gather_s32offset_s32
__builtin_sve_svldff1sh_gather_s32offset_u32
__builtin_sve_svldff1sh_gather_s64index_s64
__builtin_sve_svldff1sh_gather_s64index_u64
__builtin_sve_svldff1sh_gather_s64offset_s64
__builtin_sve_svldff1sh_gather_s64offset_u64
__builtin_sve_svldff1sh_gather_u32base_index_s32
__builtin_sve_svldff1sh_gather_u32base_index_u32
__builtin_sve_svldff1sh_gather_u32base_offset_s32
__builtin_sve_svldff1sh_gather_u32base_offset_u32
__builtin_sve_svldff1sh_gather_u32base_s32
__builtin_sve_svldff1sh_gather_u32base_u32
__builtin_sve_svldff1sh_gather_u32index_s32
__builtin_sve_svldff1sh_gather_u32index_u32
__builtin_sve_svldff1sh_gather_u32offset_s32
__builtin_sve_svldff1sh_gather_u32offset_u32
__builtin_sve_svldff1sh_gather_u64base_index_s64
__builtin_sve_svldff1sh_gather_u64base_index_u64
__builtin_sve_svldff1sh_gather_u64base_offset_s64
__builtin_sve_svldff1sh_gather_u64base_offset_u64
__builtin_sve_svldff1sh_gather_u64base_s64
__builtin_sve_svldff1sh_gather_u64base_u64
__builtin_sve_svldff1sh_gather_u64index_s64
__builtin_sve_svldff1sh_gather_u64index_u64
__builtin_sve_svldff1sh_gather_u64offset_s64
__builtin_sve_svldff1sh_gather_u64offset_u64
__builtin_sve_svldff1sh_s32
__builtin_sve_svldff1sh_s64
__builtin_sve_svldff1sh_u32
__builtin_sve_svldff1sh_u64
__builtin_sve_svldff1sh_vnum_s32
__builtin_sve_svldff1sh_vnum_s64
__builtin_sve_svldff1sh_vnum_u32
__builtin_sve_svldff1sh_vnum_u64
__builtin_sve_svldff1sw_gather_s64index_s64
__builtin_sve_svldff1sw_gather_s64index_u64
__builtin_sve_svldff1sw_gather_s64offset_s64
__builtin_sve_svldff1sw_gather_s64offset_u64
__builtin_sve_svldff1sw_gather_u64base_index_s64
__builtin_sve_svldff1sw_gather_u64base_index_u64
__builtin_sve_svldff1sw_gather_u64base_offset_s64
__builtin_sve_svldff1sw_gather_u64base_offset_u64
__builtin_sve_svldff1sw_gather_u64base_s64
__builtin_sve_svldff1sw_gather_u64base_u64
__builtin_sve_svldff1sw_gather_u64index_s64
__builtin_sve_svldff1sw_gather_u64index_u64
__builtin_sve_svldff1sw_gather_u64offset_s64
__builtin_sve_svldff1sw_gather_u64offset_u64
__builtin_sve_svldff1sw_s64
__builtin_sve_svldff1sw_u64
__builtin_sve_svldff1sw_vnum_s64
__builtin_sve_svldff1sw_vnum_u64
__builtin_sve_svldff1ub_gather_s32offset_s32
__builtin_sve_svldff1ub_gather_s32offset_u32
__builtin_sve_svldff1ub_gather_s64offset_s64
__builtin_sve_svldff1ub_gather_s64offset_u64
__builtin_sve_svldff1ub_gather_u32base_offset_s32
__builtin_sve_svldff1ub_gather_u32base_offset_u32
__builtin_sve_svldff1ub_gather_u32base_s32
__builtin_sve_svldff1ub_gather_u32base_u32
__builtin_sve_svldff1ub_gather_u32offset_s32
__builtin_sve_svldff1ub_gather_u32offset_u32
__builtin_sve_svldff1ub_gather_u64base_offset_s64
__builtin_sve_svldff1ub_gather_u64base_offset_u64
__builtin_sve_svldff1ub_gather_u64base_s64
__builtin_sve_svldff1ub_gather_u64base_u64
__builtin_sve_svldff1ub_gather_u64offset_s64
__builtin_sve_svldff1ub_gather_u64offset_u64
__builtin_sve_svldff1ub_s16
__builtin_sve_svldff1ub_s32
__builtin_sve_svldff1ub_s64
__builtin_sve_svldff1ub_u16
__builtin_sve_svldff1ub_u32
__builtin_sve_svldff1ub_u64
__builtin_sve_svldff1ub_vnum_s16
__builtin_sve_svldff1ub_vnum_s32
__builtin_sve_svldff1ub_vnum_s64
__builtin_sve_svldff1ub_vnum_u16
__builtin_sve_svldff1ub_vnum_u32
__builtin_sve_svldff1ub_vnum_u64
__builtin_sve_svldff1uh_gather_s32index_s32
__builtin_sve_svldff1uh_gather_s32index_u32
__builtin_sve_svldff1uh_gather_s32offset_s32
__builtin_sve_svldff1uh_gather_s32offset_u32
__builtin_sve_svldff1uh_gather_s64index_s64
__builtin_sve_svldff1uh_gather_s64index_u64
__builtin_sve_svldff1uh_gather_s64offset_s64
__builtin_sve_svldff1uh_gather_s64offset_u64
__builtin_sve_svldff1uh_gather_u32base_index_s32
__builtin_sve_svldff1uh_gather_u32base_index_u32
__builtin_sve_svldff1uh_gather_u32base_offset_s32
__builtin_sve_svldff1uh_gather_u32base_offset_u32
__builtin_sve_svldff1uh_gather_u32base_s32
__builtin_sve_svldff1uh_gather_u32base_u32
__builtin_sve_svldff1uh_gather_u32index_s32
__builtin_sve_svldff1uh_gather_u32index_u32
__builtin_sve_svldff1uh_gather_u32offset_s32
__builtin_sve_svldff1uh_gather_u32offset_u32
__builtin_sve_svldff1uh_gather_u64base_index_s64
__builtin_sve_svldff1uh_gather_u64base_index_u64
__builtin_sve_svldff1uh_gather_u64base_offset_s64
__builtin_sve_svldff1uh_gather_u64base_offset_u64
__builtin_sve_svldff1uh_gather_u64base_s64
__builtin_sve_svldff1uh_gather_u64base_u64
__builtin_sve_svldff1uh_gather_u64index_s64
__builtin_sve_svldff1uh_gather_u64index_u64
__builtin_sve_svldff1uh_gather_u64offset_s64
__builtin_sve_svldff1uh_gather_u64offset_u64
__builtin_sve_svldff1uh_s32
__builtin_sve_svldff1uh_s64
__builtin_sve_svldff1uh_u32
__builtin_sve_svldff1uh_u64
__builtin_sve_svldff1uh_vnum_s32
__builtin_sve_svldff1uh_vnum_s64
__builtin_sve_svldff1uh_vnum_u32
__builtin_sve_svldff1uh_vnum_u64
__builtin_sve_svldff1uw_gather_s64index_s64
__builtin_sve_svldff1uw_gather_s64index_u64
__builtin_sve_svldff1uw_gather_s64offset_s64
__builtin_sve_svldff1uw_gather_s64offset_u64
__builtin_sve_svldff1uw_gather_u64base_index_s64
__builtin_sve_svldff1uw_gather_u64base_index_u64
__builtin_sve_svldff1uw_gather_u64base_offset_s64
__builtin_sve_svldff1uw_gather_u64base_offset_u64
__builtin_sve_svldff1uw_gather_u64base_s64
__builtin_sve_svldff1uw_gather_u64base_u64
__builtin_sve_svldff1uw_gather_u64index_s64
__builtin_sve_svldff1uw_gather_u64index_u64
__builtin_sve_svldff1uw_gather_u64offset_s64
__builtin_sve_svldff1uw_gather_u64offset_u64
__builtin_sve_svldff1uw_s64
__builtin_sve_svldff1uw_u64
__builtin_sve_svldff1uw_vnum_s64
__builtin_sve_svldff1uw_vnum_u64
__builtin_sve_svldnf1_bf16
__builtin_sve_svldnf1_f16
__builtin_sve_svldnf1_f32
__builtin_sve_svldnf1_f64
__builtin_sve_svldnf1_s16
__builtin_sve_svldnf1_s32
__builtin_sve_svldnf1_s64
__builtin_sve_svldnf1_s8
__builtin_sve_svldnf1_u16
__builtin_sve_svldnf1_u32
__builtin_sve_svldnf1_u64
__builtin_sve_svldnf1_u8
__builtin_sve_svldnf1_vnum_bf16
__builtin_sve_svldnf1_vnum_f16
__builtin_sve_svldnf1_vnum_f32
__builtin_sve_svldnf1_vnum_f64
__builtin_sve_svldnf1_vnum_s16
__builtin_sve_svldnf1_vnum_s32
__builtin_sve_svldnf1_vnum_s64
__builtin_sve_svldnf1_vnum_s8
__builtin_sve_svldnf1_vnum_u16
__builtin_sve_svldnf1_vnum_u32
__builtin_sve_svldnf1_vnum_u64
__builtin_sve_svldnf1_vnum_u8
__builtin_sve_svldnf1sb_s16
__builtin_sve_svldnf1sb_s32
__builtin_sve_svldnf1sb_s64
__builtin_sve_svldnf1sb_u16
__builtin_sve_svldnf1sb_u32
__builtin_sve_svldnf1sb_u64
__builtin_sve_svldnf1sb_vnum_s16
__builtin_sve_svldnf1sb_vnum_s32
__builtin_sve_svldnf1sb_vnum_s64
__builtin_sve_svldnf1sb_vnum_u16
__builtin_sve_svldnf1sb_vnum_u32
__builtin_sve_svldnf1sb_vnum_u64
__builtin_sve_svldnf1sh_s32
__builtin_sve_svldnf1sh_s64
__builtin_sve_svldnf1sh_u32
__builtin_sve_svldnf1sh_u64
__builtin_sve_svldnf1sh_vnum_s32
__builtin_sve_svldnf1sh_vnum_s64
__builtin_sve_svldnf1sh_vnum_u32
__builtin_sve_svldnf1sh_vnum_u64
__builtin_sve_svldnf1sw_s64
__builtin_sve_svldnf1sw_u64
__builtin_sve_svldnf1sw_vnum_s64
__builtin_sve_svldnf1sw_vnum_u64
__builtin_sve_svldnf1ub_s16
__builtin_sve_svldnf1ub_s32
__builtin_sve_svldnf1ub_s64
__builtin_sve_svldnf1ub_u16
__builtin_sve_svldnf1ub_u32
__builtin_sve_svldnf1ub_u64
__builtin_sve_svldnf1ub_vnum_s16
__builtin_sve_svldnf1ub_vnum_s32
__builtin_sve_svldnf1ub_vnum_s64
__builtin_sve_svldnf1ub_vnum_u16
__builtin_sve_svldnf1ub_vnum_u32
__builtin_sve_svldnf1ub_vnum_u64
__builtin_sve_svldnf1uh_s32
__builtin_sve_svldnf1uh_s64
__builtin_sve_svldnf1uh_u32
__builtin_sve_svldnf1uh_u64
__builtin_sve_svldnf1uh_vnum_s32
__builtin_sve_svldnf1uh_vnum_s64
__builtin_sve_svldnf1uh_vnum_u32
__builtin_sve_svldnf1uh_vnum_u64
__builtin_sve_svldnf1uw_s64
__builtin_sve_svldnf1uw_u64
__builtin_sve_svldnf1uw_vnum_s64
__builtin_sve_svldnf1uw_vnum_u64
__builtin_sve_svldnt1_bf16
__builtin_sve_svldnt1_f16
__builtin_sve_svldnt1_f32
__builtin_sve_svldnt1_f64
__builtin_sve_svldnt1_gather_s64index_f64
__builtin_sve_svldnt1_gather_s64index_s64
__builtin_sve_svldnt1_gather_s64index_u64
__builtin_sve_svldnt1_gather_s64offset_f64
__builtin_sve_svldnt1_gather_s64offset_s64
__builtin_sve_svldnt1_gather_s64offset_u64
__builtin_sve_svldnt1_gather_u32base_f32
__builtin_sve_svldnt1_gather_u32base_index_f32
__builtin_sve_svldnt1_gather_u32base_index_s32
__builtin_sve_svldnt1_gather_u32base_index_u32
__builtin_sve_svldnt1_gather_u32base_offset_f32
__builtin_sve_svldnt1_gather_u32base_offset_s32
__builtin_sve_svldnt1_gather_u32base_offset_u32
__builtin_sve_svldnt1_gather_u32base_s32
__builtin_sve_svldnt1_gather_u32base_u32
__builtin_sve_svldnt1_gather_u32offset_f32
__builtin_sve_svldnt1_gather_u32offset_s32
__builtin_sve_svldnt1_gather_u32offset_u32
__builtin_sve_svldnt1_gather_u64base_f64
__builtin_sve_svldnt1_gather_u64base_index_f64
__builtin_sve_svldnt1_gather_u64base_index_s64
__builtin_sve_svldnt1_gather_u64base_index_u64
__builtin_sve_svldnt1_gather_u64base_offset_f64
__builtin_sve_svldnt1_gather_u64base_offset_s64
__builtin_sve_svldnt1_gather_u64base_offset_u64
__builtin_sve_svldnt1_gather_u64base_s64
__builtin_sve_svldnt1_gather_u64base_u64
__builtin_sve_svldnt1_gather_u64index_f64
__builtin_sve_svldnt1_gather_u64index_s64
__builtin_sve_svldnt1_gather_u64index_u64
__builtin_sve_svldnt1_gather_u64offset_f64
__builtin_sve_svldnt1_gather_u64offset_s64
__builtin_sve_svldnt1_gather_u64offset_u64
__builtin_sve_svldnt1_s16
__builtin_sve_svldnt1_s32
__builtin_sve_svldnt1_s64
__builtin_sve_svldnt1_s8
__builtin_sve_svldnt1_u16
__builtin_sve_svldnt1_u32
__builtin_sve_svldnt1_u64
__builtin_sve_svldnt1_u8
__builtin_sve_svldnt1_vnum_bf16
__builtin_sve_svldnt1_vnum_f16
__builtin_sve_svldnt1_vnum_f32
__builtin_sve_svldnt1_vnum_f64
__builtin_sve_svldnt1_vnum_s16
__builtin_sve_svldnt1_vnum_s32
__builtin_sve_svldnt1_vnum_s64
__builtin_sve_svldnt1_vnum_s8
__builtin_sve_svldnt1_vnum_u16
__builtin_sve_svldnt1_vnum_u32
__builtin_sve_svldnt1_vnum_u64
__builtin_sve_svldnt1_vnum_u8
__builtin_sve_svldnt1sb_gather_s64offset_s64
__builtin_sve_svldnt1sb_gather_s64offset_u64
__builtin_sve_svldnt1sb_gather_u32base_offset_s32
__builtin_sve_svldnt1sb_gather_u32base_offset_u32
__builtin_sve_svldnt1sb_gather_u32base_s32
__builtin_sve_svldnt1sb_gather_u32base_u32
__builtin_sve_svldnt1sb_gather_u32offset_s32
__builtin_sve_svldnt1sb_gather_u32offset_u32
__builtin_sve_svldnt1sb_gather_u64base_offset_s64
__builtin_sve_svldnt1sb_gather_u64base_offset_u64
__builtin_sve_svldnt1sb_gather_u64base_s64
__builtin_sve_svldnt1sb_gather_u64base_u64
__builtin_sve_svldnt1sb_gather_u64offset_s64
__builtin_sve_svldnt1sb_gather_u64offset_u64
__builtin_sve_svldnt1sh_gather_s64index_s64
__builtin_sve_svldnt1sh_gather_s64index_u64
__builtin_sve_svldnt1sh_gather_s64offset_s64
__builtin_sve_svldnt1sh_gather_s64offset_u64
__builtin_sve_svldnt1sh_gather_u32base_index_s32
__builtin_sve_svldnt1sh_gather_u32base_index_u32
__builtin_sve_svldnt1sh_gather_u32base_offset_s32
__builtin_sve_svldnt1sh_gather_u32base_offset_u32
__builtin_sve_svldnt1sh_gather_u32base_s32
__builtin_sve_svldnt1sh_gather_u32base_u32
__builtin_sve_svldnt1sh_gather_u32offset_s32
__builtin_sve_svldnt1sh_gather_u32offset_u32
__builtin_sve_svldnt1sh_gather_u64base_index_s64
__builtin_sve_svldnt1sh_gather_u64base_index_u64
__builtin_sve_svldnt1sh_gather_u64base_offset_s64
__builtin_sve_svldnt1sh_gather_u64base_offset_u64
__builtin_sve_svldnt1sh_gather_u64base_s64
__builtin_sve_svldnt1sh_gather_u64base_u64
__builtin_sve_svldnt1sh_gather_u64index_s64
__builtin_sve_svldnt1sh_gather_u64index_u64
__builtin_sve_svldnt1sh_gather_u64offset_s64
__builtin_sve_svldnt1sh_gather_u64offset_u64
__builtin_sve_svldnt1sw_gather_s64index_s64
__builtin_sve_svldnt1sw_gather_s64index_u64
__builtin_sve_svldnt1sw_gather_s64offset_s64
__builtin_sve_svldnt1sw_gather_s64offset_u64
__builtin_sve_svldnt1sw_gather_u64base_index_s64
__builtin_sve_svldnt1sw_gather_u64base_index_u64
__builtin_sve_svldnt1sw_gather_u64base_offset_s64
__builtin_sve_svldnt1sw_gather_u64base_offset_u64
__builtin_sve_svldnt1sw_gather_u64base_s64
__builtin_sve_svldnt1sw_gather_u64base_u64
__builtin_sve_svldnt1sw_gather_u64index_s64
__builtin_sve_svldnt1sw_gather_u64index_u64
__builtin_sve_svldnt1sw_gather_u64offset_s64
__builtin_sve_svldnt1sw_gather_u64offset_u64
__builtin_sve_svldnt1ub_gather_s64offset_s64
__builtin_sve_svldnt1ub_gather_s64offset_u64
__builtin_sve_svldnt1ub_gather_u32base_offset_s32
__builtin_sve_svldnt1ub_gather_u32base_offset_u32
__builtin_sve_svldnt1ub_gather_u32base_s32
__builtin_sve_svldnt1ub_gather_u32base_u32
__builtin_sve_svldnt1ub_gather_u32offset_s32
__builtin_sve_svldnt1ub_gather_u32offset_u32
__builtin_sve_svldnt1ub_gather_u64base_offset_s64
__builtin_sve_svldnt1ub_gather_u64base_offset_u64
__builtin_sve_svldnt1ub_gather_u64base_s64
__builtin_sve_svldnt1ub_gather_u64base_u64
__builtin_sve_svldnt1ub_gather_u64offset_s64
__builtin_sve_svldnt1ub_gather_u64offset_u64
__builtin_sve_svldnt1uh_gather_s64index_s64
__builtin_sve_svldnt1uh_gather_s64index_u64
__builtin_sve_svldnt1uh_gather_s64offset_s64
__builtin_sve_svldnt1uh_gather_s64offset_u64
__builtin_sve_svldnt1uh_gather_u32base_index_s32
__builtin_sve_svldnt1uh_gather_u32base_index_u32
__builtin_sve_svldnt1uh_gather_u32base_offset_s32
__builtin_sve_svldnt1uh_gather_u32base_offset_u32
__builtin_sve_svldnt1uh_gather_u32base_s32
__builtin_sve_svldnt1uh_gather_u32base_u32
__builtin_sve_svldnt1uh_gather_u32offset_s32
__builtin_sve_svldnt1uh_gather_u32offset_u32
__builtin_sve_svldnt1uh_gather_u64base_index_s64
__builtin_sve_svldnt1uh_gather_u64base_index_u64
__builtin_sve_svldnt1uh_gather_u64base_offset_s64
__builtin_sve_svldnt1uh_gather_u64base_offset_u64
__builtin_sve_svldnt1uh_gather_u64base_s64
__builtin_sve_svldnt1uh_gather_u64base_u64
__builtin_sve_svldnt1uh_gather_u64index_s64
__builtin_sve_svldnt1uh_gather_u64index_u64
__builtin_sve_svldnt1uh_gather_u64offset_s64
__builtin_sve_svldnt1uh_gather_u64offset_u64
__builtin_sve_svldnt1uw_gather_s64index_s64
__builtin_sve_svldnt1uw_gather_s64index_u64
__builtin_sve_svldnt1uw_gather_s64offset_s64
__builtin_sve_svldnt1uw_gather_s64offset_u64
__builtin_sve_svldnt1uw_gather_u64base_index_s64
__builtin_sve_svldnt1uw_gather_u64base_index_u64
__builtin_sve_svldnt1uw_gather_u64base_offset_s64
__builtin_sve_svldnt1uw_gather_u64base_offset_u64
__builtin_sve_svldnt1uw_gather_u64base_s64
__builtin_sve_svldnt1uw_gather_u64base_u64
__builtin_sve_svldnt1uw_gather_u64index_s64
__builtin_sve_svldnt1uw_gather_u64index_u64
__builtin_sve_svldnt1uw_gather_u64offset_s64
__builtin_sve_svldnt1uw_gather_u64offset_u64
__builtin_sve_svlen_bf16
UWiq8y
__builtin_sve_svlen_f16
UWiq8h
__builtin_sve_svlen_f32
UWiq4f
__builtin_sve_svlen_f64
UWiq2d
__builtin_sve_svlen_s16
UWiq8s
__builtin_sve_svlen_s32
UWiq4i
__builtin_sve_svlen_s64
UWiq2Wi
__builtin_sve_svlen_s8
UWiq16Sc
__builtin_sve_svlen_u16
UWiq8Us
__builtin_sve_svlen_u32
UWiq4Ui
__builtin_sve_svlen_u64
UWiq2UWi
__builtin_sve_svlen_u8
UWiq16Uc
__builtin_sve_svlogb_f16_m
__builtin_sve_svlogb_f16_x
__builtin_sve_svlogb_f16_z
__builtin_sve_svlogb_f32_m
__builtin_sve_svlogb_f32_x
__builtin_sve_svlogb_f32_z
__builtin_sve_svlogb_f64_m
__builtin_sve_svlogb_f64_x
__builtin_sve_svlogb_f64_z
__builtin_sve_svlsl_n_s16_m
__builtin_sve_svlsl_n_s16_x
__builtin_sve_svlsl_n_s16_z
__builtin_sve_svlsl_n_s32_m
__builtin_sve_svlsl_n_s32_x
__builtin_sve_svlsl_n_s32_z
__builtin_sve_svlsl_n_s64_m
__builtin_sve_svlsl_n_s64_x
__builtin_sve_svlsl_n_s64_z
__builtin_sve_svlsl_n_s8_m
__builtin_sve_svlsl_n_s8_x
__builtin_sve_svlsl_n_s8_z
__builtin_sve_svlsl_n_u16_m
__builtin_sve_svlsl_n_u16_x
__builtin_sve_svlsl_n_u16_z
__builtin_sve_svlsl_n_u32_m
__builtin_sve_svlsl_n_u32_x
__builtin_sve_svlsl_n_u32_z
__builtin_sve_svlsl_n_u64_m
__builtin_sve_svlsl_n_u64_x
__builtin_sve_svlsl_n_u64_z
__builtin_sve_svlsl_n_u8_m
__builtin_sve_svlsl_n_u8_x
__builtin_sve_svlsl_n_u8_z
__builtin_sve_svlsl_s16_m
__builtin_sve_svlsl_s16_x
__builtin_sve_svlsl_s16_z
__builtin_sve_svlsl_s32_m
__builtin_sve_svlsl_s32_x
__builtin_sve_svlsl_s32_z
__builtin_sve_svlsl_s64_m
__builtin_sve_svlsl_s64_x
__builtin_sve_svlsl_s64_z
__builtin_sve_svlsl_s8_m
__builtin_sve_svlsl_s8_x
__builtin_sve_svlsl_s8_z
__builtin_sve_svlsl_u16_m
__builtin_sve_svlsl_u16_x
__builtin_sve_svlsl_u16_z
__builtin_sve_svlsl_u32_m
__builtin_sve_svlsl_u32_x
__builtin_sve_svlsl_u32_z
__builtin_sve_svlsl_u64_m
__builtin_sve_svlsl_u64_x
__builtin_sve_svlsl_u64_z
__builtin_sve_svlsl_u8_m
__builtin_sve_svlsl_u8_x
__builtin_sve_svlsl_u8_z
__builtin_sve_svlsl_wide_n_s16_m
__builtin_sve_svlsl_wide_n_s16_x
__builtin_sve_svlsl_wide_n_s16_z
__builtin_sve_svlsl_wide_n_s32_m
__builtin_sve_svlsl_wide_n_s32_x
__builtin_sve_svlsl_wide_n_s32_z
__builtin_sve_svlsl_wide_n_s8_m
__builtin_sve_svlsl_wide_n_s8_x
__builtin_sve_svlsl_wide_n_s8_z
__builtin_sve_svlsl_wide_n_u16_m
q8Usq16bq8UsUWi
__builtin_sve_svlsl_wide_n_u16_x
__builtin_sve_svlsl_wide_n_u16_z
__builtin_sve_svlsl_wide_n_u32_m
q4Uiq16bq4UiUWi
__builtin_sve_svlsl_wide_n_u32_x
__builtin_sve_svlsl_wide_n_u32_z
__builtin_sve_svlsl_wide_n_u8_m
q16Ucq16bq16UcUWi
__builtin_sve_svlsl_wide_n_u8_x
__builtin_sve_svlsl_wide_n_u8_z
__builtin_sve_svlsl_wide_s16_m
__builtin_sve_svlsl_wide_s16_x
__builtin_sve_svlsl_wide_s16_z
__builtin_sve_svlsl_wide_s32_m
__builtin_sve_svlsl_wide_s32_x
__builtin_sve_svlsl_wide_s32_z
__builtin_sve_svlsl_wide_s8_m
__builtin_sve_svlsl_wide_s8_x
__builtin_sve_svlsl_wide_s8_z
__builtin_sve_svlsl_wide_u16_m
q8Usq16bq8Usq2UWi
__builtin_sve_svlsl_wide_u16_x
__builtin_sve_svlsl_wide_u16_z
__builtin_sve_svlsl_wide_u32_m
q4Uiq16bq4Uiq2UWi
__builtin_sve_svlsl_wide_u32_x
__builtin_sve_svlsl_wide_u32_z
__builtin_sve_svlsl_wide_u8_m
q16Ucq16bq16Ucq2UWi
__builtin_sve_svlsl_wide_u8_x
__builtin_sve_svlsl_wide_u8_z
__builtin_sve_svlsr_n_u16_m
__builtin_sve_svlsr_n_u16_x
__builtin_sve_svlsr_n_u16_z
__builtin_sve_svlsr_n_u32_m
__builtin_sve_svlsr_n_u32_x
__builtin_sve_svlsr_n_u32_z
__builtin_sve_svlsr_n_u64_m
__builtin_sve_svlsr_n_u64_x
__builtin_sve_svlsr_n_u64_z
__builtin_sve_svlsr_n_u8_m
__builtin_sve_svlsr_n_u8_x
__builtin_sve_svlsr_n_u8_z
__builtin_sve_svlsr_u16_m
__builtin_sve_svlsr_u16_x
__builtin_sve_svlsr_u16_z
__builtin_sve_svlsr_u32_m
__builtin_sve_svlsr_u32_x
__builtin_sve_svlsr_u32_z
__builtin_sve_svlsr_u64_m
__builtin_sve_svlsr_u64_x
__builtin_sve_svlsr_u64_z
__builtin_sve_svlsr_u8_m
__builtin_sve_svlsr_u8_x
__builtin_sve_svlsr_u8_z
__builtin_sve_svlsr_wide_n_u16_m
__builtin_sve_svlsr_wide_n_u16_x
__builtin_sve_svlsr_wide_n_u16_z
__builtin_sve_svlsr_wide_n_u32_m
__builtin_sve_svlsr_wide_n_u32_x
__builtin_sve_svlsr_wide_n_u32_z
__builtin_sve_svlsr_wide_n_u8_m
__builtin_sve_svlsr_wide_n_u8_x
__builtin_sve_svlsr_wide_n_u8_z
__builtin_sve_svlsr_wide_u16_m
__builtin_sve_svlsr_wide_u16_x
__builtin_sve_svlsr_wide_u16_z
__builtin_sve_svlsr_wide_u32_m
__builtin_sve_svlsr_wide_u32_x
__builtin_sve_svlsr_wide_u32_z
__builtin_sve_svlsr_wide_u8_m
__builtin_sve_svlsr_wide_u8_x
__builtin_sve_svlsr_wide_u8_z
__builtin_sve_svmad_f16_m
q8hq16bq8hq8hq8h
__builtin_sve_svmad_f16_x
__builtin_sve_svmad_f16_z
__builtin_sve_svmad_f32_m
q4fq16bq4fq4fq4f
__builtin_sve_svmad_f32_x
__builtin_sve_svmad_f32_z
__builtin_sve_svmad_f64_m
q2dq16bq2dq2dq2d
__builtin_sve_svmad_f64_x
__builtin_sve_svmad_f64_z
__builtin_sve_svmad_n_f16_m
q8hq16bq8hq8hh
__builtin_sve_svmad_n_f16_x
__builtin_sve_svmad_n_f16_z
__builtin_sve_svmad_n_f32_m
q4fq16bq4fq4ff
__builtin_sve_svmad_n_f32_x
__builtin_sve_svmad_n_f32_z
__builtin_sve_svmad_n_f64_m
q2dq16bq2dq2dd
__builtin_sve_svmad_n_f64_x
__builtin_sve_svmad_n_f64_z
__builtin_sve_svmad_n_s16_m
q8sq16bq8sq8ss
__builtin_sve_svmad_n_s16_x
__builtin_sve_svmad_n_s16_z
__builtin_sve_svmad_n_s32_m
q4iq16bq4iq4ii
__builtin_sve_svmad_n_s32_x
__builtin_sve_svmad_n_s32_z
__builtin_sve_svmad_n_s64_m
q2Wiq16bq2Wiq2WiWi
__builtin_sve_svmad_n_s64_x
__builtin_sve_svmad_n_s64_z
__builtin_sve_svmad_n_s8_m
q16Scq16bq16Scq16ScSc
__builtin_sve_svmad_n_s8_x
__builtin_sve_svmad_n_s8_z
__builtin_sve_svmad_n_u16_m
q8Usq16bq8Usq8UsUs
__builtin_sve_svmad_n_u16_x
__builtin_sve_svmad_n_u16_z
__builtin_sve_svmad_n_u32_m
q4Uiq16bq4Uiq4UiUi
__builtin_sve_svmad_n_u32_x
__builtin_sve_svmad_n_u32_z
__builtin_sve_svmad_n_u64_m
q2UWiq16bq2UWiq2UWiUWi
__builtin_sve_svmad_n_u64_x
__builtin_sve_svmad_n_u64_z
__builtin_sve_svmad_n_u8_m
q16Ucq16bq16Ucq16UcUc
__builtin_sve_svmad_n_u8_x
__builtin_sve_svmad_n_u8_z
__builtin_sve_svmad_s16_m
q8sq16bq8sq8sq8s
__builtin_sve_svmad_s16_x
__builtin_sve_svmad_s16_z
__builtin_sve_svmad_s32_m
q4iq16bq4iq4iq4i
__builtin_sve_svmad_s32_x
__builtin_sve_svmad_s32_z
__builtin_sve_svmad_s64_m
q2Wiq16bq2Wiq2Wiq2Wi
__builtin_sve_svmad_s64_x
__builtin_sve_svmad_s64_z
__builtin_sve_svmad_s8_m
q16Scq16bq16Scq16Scq16Sc
__builtin_sve_svmad_s8_x
__builtin_sve_svmad_s8_z
__builtin_sve_svmad_u16_m
q8Usq16bq8Usq8Usq8Us
__builtin_sve_svmad_u16_x
__builtin_sve_svmad_u16_z
__builtin_sve_svmad_u32_m
q4Uiq16bq4Uiq4Uiq4Ui
__builtin_sve_svmad_u32_x
__builtin_sve_svmad_u32_z
__builtin_sve_svmad_u64_m
q2UWiq16bq2UWiq2UWiq2UWi
__builtin_sve_svmad_u64_x
__builtin_sve_svmad_u64_z
__builtin_sve_svmad_u8_m
q16Ucq16bq16Ucq16Ucq16Uc
__builtin_sve_svmad_u8_x
__builtin_sve_svmad_u8_z
__builtin_sve_svmatch_s16
__builtin_sve_svmatch_s8
__builtin_sve_svmatch_u16
__builtin_sve_svmatch_u8
__builtin_sve_svmax_f16_m
__builtin_sve_svmax_f16_x
__builtin_sve_svmax_f16_z
__builtin_sve_svmax_f32_m
__builtin_sve_svmax_f32_x
__builtin_sve_svmax_f32_z
__builtin_sve_svmax_f64_m
__builtin_sve_svmax_f64_x
__builtin_sve_svmax_f64_z
__builtin_sve_svmax_n_f16_m
__builtin_sve_svmax_n_f16_x
__builtin_sve_svmax_n_f16_z
__builtin_sve_svmax_n_f32_m
__builtin_sve_svmax_n_f32_x
__builtin_sve_svmax_n_f32_z
__builtin_sve_svmax_n_f64_m
__builtin_sve_svmax_n_f64_x
__builtin_sve_svmax_n_f64_z
__builtin_sve_svmax_n_s16_m
__builtin_sve_svmax_n_s16_x
__builtin_sve_svmax_n_s16_z
__builtin_sve_svmax_n_s32_m
__builtin_sve_svmax_n_s32_x
__builtin_sve_svmax_n_s32_z
__builtin_sve_svmax_n_s64_m
__builtin_sve_svmax_n_s64_x
__builtin_sve_svmax_n_s64_z
__builtin_sve_svmax_n_s8_m
__builtin_sve_svmax_n_s8_x
__builtin_sve_svmax_n_s8_z
__builtin_sve_svmax_n_u16_m
__builtin_sve_svmax_n_u16_x
__builtin_sve_svmax_n_u16_z
__builtin_sve_svmax_n_u32_m
__builtin_sve_svmax_n_u32_x
__builtin_sve_svmax_n_u32_z
__builtin_sve_svmax_n_u64_m
__builtin_sve_svmax_n_u64_x
__builtin_sve_svmax_n_u64_z
__builtin_sve_svmax_n_u8_m
__builtin_sve_svmax_n_u8_x
__builtin_sve_svmax_n_u8_z
__builtin_sve_svmax_s16_m
__builtin_sve_svmax_s16_x
__builtin_sve_svmax_s16_z
__builtin_sve_svmax_s32_m
__builtin_sve_svmax_s32_x
__builtin_sve_svmax_s32_z
__builtin_sve_svmax_s64_m
__builtin_sve_svmax_s64_x
__builtin_sve_svmax_s64_z
__builtin_sve_svmax_s8_m
__builtin_sve_svmax_s8_x
__builtin_sve_svmax_s8_z
__builtin_sve_svmax_u16_m
__builtin_sve_svmax_u16_x
__builtin_sve_svmax_u16_z
__builtin_sve_svmax_u32_m
__builtin_sve_svmax_u32_x
__builtin_sve_svmax_u32_z
__builtin_sve_svmax_u64_m
__builtin_sve_svmax_u64_x
__builtin_sve_svmax_u64_z
__builtin_sve_svmax_u8_m
__builtin_sve_svmax_u8_x
__builtin_sve_svmax_u8_z
__builtin_sve_svmaxnm_f16_m
__builtin_sve_svmaxnm_f16_x
__builtin_sve_svmaxnm_f16_z
__builtin_sve_svmaxnm_f32_m
__builtin_sve_svmaxnm_f32_x
__builtin_sve_svmaxnm_f32_z
__builtin_sve_svmaxnm_f64_m
__builtin_sve_svmaxnm_f64_x
__builtin_sve_svmaxnm_f64_z
__builtin_sve_svmaxnm_n_f16_m
__builtin_sve_svmaxnm_n_f16_x
__builtin_sve_svmaxnm_n_f16_z
__builtin_sve_svmaxnm_n_f32_m
__builtin_sve_svmaxnm_n_f32_x
__builtin_sve_svmaxnm_n_f32_z
__builtin_sve_svmaxnm_n_f64_m
__builtin_sve_svmaxnm_n_f64_x
__builtin_sve_svmaxnm_n_f64_z
__builtin_sve_svmaxnmp_f16_m
__builtin_sve_svmaxnmp_f16_x
__builtin_sve_svmaxnmp_f32_m
__builtin_sve_svmaxnmp_f32_x
__builtin_sve_svmaxnmp_f64_m
__builtin_sve_svmaxnmp_f64_x
__builtin_sve_svmaxnmv_f16
__builtin_sve_svmaxnmv_f32
__builtin_sve_svmaxnmv_f64
__builtin_sve_svmaxp_f16_m
__builtin_sve_svmaxp_f16_x
__builtin_sve_svmaxp_f32_m
__builtin_sve_svmaxp_f32_x
__builtin_sve_svmaxp_f64_m
__builtin_sve_svmaxp_f64_x
__builtin_sve_svmaxp_s16_m
__builtin_sve_svmaxp_s16_x
__builtin_sve_svmaxp_s32_m
__builtin_sve_svmaxp_s32_x
__builtin_sve_svmaxp_s64_m
__builtin_sve_svmaxp_s64_x
__builtin_sve_svmaxp_s8_m
__builtin_sve_svmaxp_s8_x
__builtin_sve_svmaxp_u16_m
__builtin_sve_svmaxp_u16_x
__builtin_sve_svmaxp_u32_m
__builtin_sve_svmaxp_u32_x
__builtin_sve_svmaxp_u64_m
__builtin_sve_svmaxp_u64_x
__builtin_sve_svmaxp_u8_m
__builtin_sve_svmaxp_u8_x
__builtin_sve_svmaxv_f16
__builtin_sve_svmaxv_f32
__builtin_sve_svmaxv_f64
__builtin_sve_svmaxv_s16
__builtin_sve_svmaxv_s32
__builtin_sve_svmaxv_s64
__builtin_sve_svmaxv_s8
__builtin_sve_svmaxv_u16
__builtin_sve_svmaxv_u32
__builtin_sve_svmaxv_u64
__builtin_sve_svmaxv_u8
__builtin_sve_svmin_f16_m
__builtin_sve_svmin_f16_x
__builtin_sve_svmin_f16_z
__builtin_sve_svmin_f32_m
__builtin_sve_svmin_f32_x
__builtin_sve_svmin_f32_z
__builtin_sve_svmin_f64_m
__builtin_sve_svmin_f64_x
__builtin_sve_svmin_f64_z
__builtin_sve_svmin_n_f16_m
__builtin_sve_svmin_n_f16_x
__builtin_sve_svmin_n_f16_z
__builtin_sve_svmin_n_f32_m
__builtin_sve_svmin_n_f32_x
__builtin_sve_svmin_n_f32_z
__builtin_sve_svmin_n_f64_m
__builtin_sve_svmin_n_f64_x
__builtin_sve_svmin_n_f64_z
__builtin_sve_svmin_n_s16_m
__builtin_sve_svmin_n_s16_x
__builtin_sve_svmin_n_s16_z
__builtin_sve_svmin_n_s32_m
__builtin_sve_svmin_n_s32_x
__builtin_sve_svmin_n_s32_z
__builtin_sve_svmin_n_s64_m
__builtin_sve_svmin_n_s64_x
__builtin_sve_svmin_n_s64_z
__builtin_sve_svmin_n_s8_m
__builtin_sve_svmin_n_s8_x
__builtin_sve_svmin_n_s8_z
__builtin_sve_svmin_n_u16_m
__builtin_sve_svmin_n_u16_x
__builtin_sve_svmin_n_u16_z
__builtin_sve_svmin_n_u32_m
__builtin_sve_svmin_n_u32_x
__builtin_sve_svmin_n_u32_z
__builtin_sve_svmin_n_u64_m
__builtin_sve_svmin_n_u64_x
__builtin_sve_svmin_n_u64_z
__builtin_sve_svmin_n_u8_m
__builtin_sve_svmin_n_u8_x
__builtin_sve_svmin_n_u8_z
__builtin_sve_svmin_s16_m
__builtin_sve_svmin_s16_x
__builtin_sve_svmin_s16_z
__builtin_sve_svmin_s32_m
__builtin_sve_svmin_s32_x
__builtin_sve_svmin_s32_z
__builtin_sve_svmin_s64_m
__builtin_sve_svmin_s64_x
__builtin_sve_svmin_s64_z
__builtin_sve_svmin_s8_m
__builtin_sve_svmin_s8_x
__builtin_sve_svmin_s8_z
__builtin_sve_svmin_u16_m
__builtin_sve_svmin_u16_x
__builtin_sve_svmin_u16_z
__builtin_sve_svmin_u32_m
__builtin_sve_svmin_u32_x
__builtin_sve_svmin_u32_z
__builtin_sve_svmin_u64_m
__builtin_sve_svmin_u64_x
__builtin_sve_svmin_u64_z
__builtin_sve_svmin_u8_m
__builtin_sve_svmin_u8_x
__builtin_sve_svmin_u8_z
__builtin_sve_svminnm_f16_m
__builtin_sve_svminnm_f16_x
__builtin_sve_svminnm_f16_z
__builtin_sve_svminnm_f32_m
__builtin_sve_svminnm_f32_x
__builtin_sve_svminnm_f32_z
__builtin_sve_svminnm_f64_m
__builtin_sve_svminnm_f64_x
__builtin_sve_svminnm_f64_z
__builtin_sve_svminnm_n_f16_m
__builtin_sve_svminnm_n_f16_x
__builtin_sve_svminnm_n_f16_z
__builtin_sve_svminnm_n_f32_m
__builtin_sve_svminnm_n_f32_x
__builtin_sve_svminnm_n_f32_z
__builtin_sve_svminnm_n_f64_m
__builtin_sve_svminnm_n_f64_x
__builtin_sve_svminnm_n_f64_z
__builtin_sve_svminnmp_f16_m
__builtin_sve_svminnmp_f16_x
__builtin_sve_svminnmp_f32_m
__builtin_sve_svminnmp_f32_x
__builtin_sve_svminnmp_f64_m
__builtin_sve_svminnmp_f64_x
__builtin_sve_svminnmv_f16
__builtin_sve_svminnmv_f32
__builtin_sve_svminnmv_f64
__builtin_sve_svminp_f16_m
__builtin_sve_svminp_f16_x
__builtin_sve_svminp_f32_m
__builtin_sve_svminp_f32_x
__builtin_sve_svminp_f64_m
__builtin_sve_svminp_f64_x
__builtin_sve_svminp_s16_m
__builtin_sve_svminp_s16_x
__builtin_sve_svminp_s32_m
__builtin_sve_svminp_s32_x
__builtin_sve_svminp_s64_m
__builtin_sve_svminp_s64_x
__builtin_sve_svminp_s8_m
__builtin_sve_svminp_s8_x
__builtin_sve_svminp_u16_m
__builtin_sve_svminp_u16_x
__builtin_sve_svminp_u32_m
__builtin_sve_svminp_u32_x
__builtin_sve_svminp_u64_m
__builtin_sve_svminp_u64_x
__builtin_sve_svminp_u8_m
__builtin_sve_svminp_u8_x
__builtin_sve_svminv_f16
__builtin_sve_svminv_f32
__builtin_sve_svminv_f64
__builtin_sve_svminv_s16
__builtin_sve_svminv_s32
__builtin_sve_svminv_s64
__builtin_sve_svminv_s8
__builtin_sve_svminv_u16
__builtin_sve_svminv_u32
__builtin_sve_svminv_u64
__builtin_sve_svminv_u8
__builtin_sve_svmla_f16_m
__builtin_sve_svmla_f16_x
__builtin_sve_svmla_f16_z
__builtin_sve_svmla_f32_m
__builtin_sve_svmla_f32_x
__builtin_sve_svmla_f32_z
__builtin_sve_svmla_f64_m
__builtin_sve_svmla_f64_x
__builtin_sve_svmla_f64_z
__builtin_sve_svmla_lane_f16
q8hq8hq8hq8hIUWi
__builtin_sve_svmla_lane_f32
q4fq4fq4fq4fIUWi
__builtin_sve_svmla_lane_f64
q2dq2dq2dq2dIUWi
__builtin_sve_svmla_lane_s16
__builtin_sve_svmla_lane_s32
__builtin_sve_svmla_lane_s64
__builtin_sve_svmla_lane_u16
__builtin_sve_svmla_lane_u32
__builtin_sve_svmla_lane_u64
__builtin_sve_svmla_n_f16_m
__builtin_sve_svmla_n_f16_x
__builtin_sve_svmla_n_f16_z
__builtin_sve_svmla_n_f32_m
__builtin_sve_svmla_n_f32_x
__builtin_sve_svmla_n_f32_z
__builtin_sve_svmla_n_f64_m
__builtin_sve_svmla_n_f64_x
__builtin_sve_svmla_n_f64_z
__builtin_sve_svmla_n_s16_m
__builtin_sve_svmla_n_s16_x
__builtin_sve_svmla_n_s16_z
__builtin_sve_svmla_n_s32_m
__builtin_sve_svmla_n_s32_x
__builtin_sve_svmla_n_s32_z
__builtin_sve_svmla_n_s64_m
__builtin_sve_svmla_n_s64_x
__builtin_sve_svmla_n_s64_z
__builtin_sve_svmla_n_s8_m
__builtin_sve_svmla_n_s8_x
__builtin_sve_svmla_n_s8_z
__builtin_sve_svmla_n_u16_m
__builtin_sve_svmla_n_u16_x
__builtin_sve_svmla_n_u16_z
__builtin_sve_svmla_n_u32_m
__builtin_sve_svmla_n_u32_x
__builtin_sve_svmla_n_u32_z
__builtin_sve_svmla_n_u64_m
__builtin_sve_svmla_n_u64_x
__builtin_sve_svmla_n_u64_z
__builtin_sve_svmla_n_u8_m
__builtin_sve_svmla_n_u8_x
__builtin_sve_svmla_n_u8_z
__builtin_sve_svmla_s16_m
__builtin_sve_svmla_s16_x
__builtin_sve_svmla_s16_z
__builtin_sve_svmla_s32_m
__builtin_sve_svmla_s32_x
__builtin_sve_svmla_s32_z
__builtin_sve_svmla_s64_m
__builtin_sve_svmla_s64_x
__builtin_sve_svmla_s64_z
__builtin_sve_svmla_s8_m
__builtin_sve_svmla_s8_x
__builtin_sve_svmla_s8_z
__builtin_sve_svmla_u16_m
__builtin_sve_svmla_u16_x
__builtin_sve_svmla_u16_z
__builtin_sve_svmla_u32_m
__builtin_sve_svmla_u32_x
__builtin_sve_svmla_u32_z
__builtin_sve_svmla_u64_m
__builtin_sve_svmla_u64_x
__builtin_sve_svmla_u64_z
__builtin_sve_svmla_u8_m
__builtin_sve_svmla_u8_x
__builtin_sve_svmla_u8_z
__builtin_sve_svmlalb_f32
q4fq4fq8hq8h
__builtin_sve_svmlalb_lane_f32
q4fq4fq8hq8hIUWi
__builtin_sve_svmlalb_lane_s32
q4iq4iq8sq8sIUWi
__builtin_sve_svmlalb_lane_s64
q2Wiq2Wiq4iq4iIUWi
__builtin_sve_svmlalb_lane_u32
q4Uiq4Uiq8Usq8UsIUWi
__builtin_sve_svmlalb_lane_u64
q2UWiq2UWiq4Uiq4UiIUWi
__builtin_sve_svmlalb_n_f32
q4fq4fq8hh
__builtin_sve_svmlalb_n_s16
__builtin_sve_svmlalb_n_s32
__builtin_sve_svmlalb_n_s64
__builtin_sve_svmlalb_n_u16
__builtin_sve_svmlalb_n_u32
__builtin_sve_svmlalb_n_u64
__builtin_sve_svmlalb_s16
__builtin_sve_svmlalb_s32
__builtin_sve_svmlalb_s64
__builtin_sve_svmlalb_u16
__builtin_sve_svmlalb_u32
__builtin_sve_svmlalb_u64
__builtin_sve_svmlalt_f32
__builtin_sve_svmlalt_lane_f32
__builtin_sve_svmlalt_lane_s32
__builtin_sve_svmlalt_lane_s64
__builtin_sve_svmlalt_lane_u32
__builtin_sve_svmlalt_lane_u64
__builtin_sve_svmlalt_n_f32
__builtin_sve_svmlalt_n_s16
__builtin_sve_svmlalt_n_s32
__builtin_sve_svmlalt_n_s64
__builtin_sve_svmlalt_n_u16
__builtin_sve_svmlalt_n_u32
__builtin_sve_svmlalt_n_u64
__builtin_sve_svmlalt_s16
__builtin_sve_svmlalt_s32
__builtin_sve_svmlalt_s64
__builtin_sve_svmlalt_u16
__builtin_sve_svmlalt_u32
__builtin_sve_svmlalt_u64
__builtin_sve_svmls_f16_m
__builtin_sve_svmls_f16_x
__builtin_sve_svmls_f16_z
__builtin_sve_svmls_f32_m
__builtin_sve_svmls_f32_x
__builtin_sve_svmls_f32_z
__builtin_sve_svmls_f64_m
__builtin_sve_svmls_f64_x
__builtin_sve_svmls_f64_z
__builtin_sve_svmls_lane_f16
__builtin_sve_svmls_lane_f32
__builtin_sve_svmls_lane_f64
__builtin_sve_svmls_lane_s16
__builtin_sve_svmls_lane_s32
__builtin_sve_svmls_lane_s64
__builtin_sve_svmls_lane_u16
__builtin_sve_svmls_lane_u32
__builtin_sve_svmls_lane_u64
__builtin_sve_svmls_n_f16_m
__builtin_sve_svmls_n_f16_x
__builtin_sve_svmls_n_f16_z
__builtin_sve_svmls_n_f32_m
__builtin_sve_svmls_n_f32_x
__builtin_sve_svmls_n_f32_z
__builtin_sve_svmls_n_f64_m
__builtin_sve_svmls_n_f64_x
__builtin_sve_svmls_n_f64_z
__builtin_sve_svmls_n_s16_m
__builtin_sve_svmls_n_s16_x
__builtin_sve_svmls_n_s16_z
__builtin_sve_svmls_n_s32_m
__builtin_sve_svmls_n_s32_x
__builtin_sve_svmls_n_s32_z
__builtin_sve_svmls_n_s64_m
__builtin_sve_svmls_n_s64_x
__builtin_sve_svmls_n_s64_z
__builtin_sve_svmls_n_s8_m
__builtin_sve_svmls_n_s8_x
__builtin_sve_svmls_n_s8_z
__builtin_sve_svmls_n_u16_m
__builtin_sve_svmls_n_u16_x
__builtin_sve_svmls_n_u16_z
__builtin_sve_svmls_n_u32_m
__builtin_sve_svmls_n_u32_x
__builtin_sve_svmls_n_u32_z
__builtin_sve_svmls_n_u64_m
__builtin_sve_svmls_n_u64_x
__builtin_sve_svmls_n_u64_z
__builtin_sve_svmls_n_u8_m
__builtin_sve_svmls_n_u8_x
__builtin_sve_svmls_n_u8_z
__builtin_sve_svmls_s16_m
__builtin_sve_svmls_s16_x
__builtin_sve_svmls_s16_z
__builtin_sve_svmls_s32_m
__builtin_sve_svmls_s32_x
__builtin_sve_svmls_s32_z
__builtin_sve_svmls_s64_m
__builtin_sve_svmls_s64_x
__builtin_sve_svmls_s64_z
__builtin_sve_svmls_s8_m
__builtin_sve_svmls_s8_x
__builtin_sve_svmls_s8_z
__builtin_sve_svmls_u16_m
__builtin_sve_svmls_u16_x
__builtin_sve_svmls_u16_z
__builtin_sve_svmls_u32_m
__builtin_sve_svmls_u32_x
__builtin_sve_svmls_u32_z
__builtin_sve_svmls_u64_m
__builtin_sve_svmls_u64_x
__builtin_sve_svmls_u64_z
__builtin_sve_svmls_u8_m
__builtin_sve_svmls_u8_x
__builtin_sve_svmls_u8_z
__builtin_sve_svmlslb_f32
__builtin_sve_svmlslb_lane_f32
__builtin_sve_svmlslb_lane_s32
__builtin_sve_svmlslb_lane_s64
__builtin_sve_svmlslb_lane_u32
__builtin_sve_svmlslb_lane_u64
__builtin_sve_svmlslb_n_f32
__builtin_sve_svmlslb_n_s16
__builtin_sve_svmlslb_n_s32
__builtin_sve_svmlslb_n_s64
__builtin_sve_svmlslb_n_u16
__builtin_sve_svmlslb_n_u32
__builtin_sve_svmlslb_n_u64
__builtin_sve_svmlslb_s16
__builtin_sve_svmlslb_s32
__builtin_sve_svmlslb_s64
__builtin_sve_svmlslb_u16
__builtin_sve_svmlslb_u32
__builtin_sve_svmlslb_u64
__builtin_sve_svmlslt_f32
__builtin_sve_svmlslt_lane_f32
__builtin_sve_svmlslt_lane_s32
__builtin_sve_svmlslt_lane_s64
__builtin_sve_svmlslt_lane_u32
__builtin_sve_svmlslt_lane_u64
__builtin_sve_svmlslt_n_f32
__builtin_sve_svmlslt_n_s16
__builtin_sve_svmlslt_n_s32
__builtin_sve_svmlslt_n_s64
__builtin_sve_svmlslt_n_u16
__builtin_sve_svmlslt_n_u32
__builtin_sve_svmlslt_n_u64
__builtin_sve_svmlslt_s16
__builtin_sve_svmlslt_s32
__builtin_sve_svmlslt_s64
__builtin_sve_svmlslt_u16
__builtin_sve_svmlslt_u32
__builtin_sve_svmlslt_u64
__builtin_sve_svmmla_f32
q4fq4fq4fq4f
__builtin_sve_svmmla_f64
q2dq2dq2dq2d
__builtin_sve_svmmla_s32
__builtin_sve_svmmla_u32
__builtin_sve_svmov_b_z
__builtin_sve_svmovlb_s16
q8sq16Sc
__builtin_sve_svmovlb_s32
q4iq8s
__builtin_sve_svmovlb_s64
q2Wiq4i
__builtin_sve_svmovlb_u16
q8Usq16Uc
__builtin_sve_svmovlb_u32
q4Uiq8Us
__builtin_sve_svmovlb_u64
q2UWiq4Ui
__builtin_sve_svmovlt_s16
__builtin_sve_svmovlt_s32
__builtin_sve_svmovlt_s64
__builtin_sve_svmovlt_u16
__builtin_sve_svmovlt_u32
__builtin_sve_svmovlt_u64
__builtin_sve_svmsb_f16_m
__builtin_sve_svmsb_f16_x
__builtin_sve_svmsb_f16_z
__builtin_sve_svmsb_f32_m
__builtin_sve_svmsb_f32_x
__builtin_sve_svmsb_f32_z
__builtin_sve_svmsb_f64_m
__builtin_sve_svmsb_f64_x
__builtin_sve_svmsb_f64_z
__builtin_sve_svmsb_n_f16_m
__builtin_sve_svmsb_n_f16_x
__builtin_sve_svmsb_n_f16_z
__builtin_sve_svmsb_n_f32_m
__builtin_sve_svmsb_n_f32_x
__builtin_sve_svmsb_n_f32_z
__builtin_sve_svmsb_n_f64_m
__builtin_sve_svmsb_n_f64_x
__builtin_sve_svmsb_n_f64_z
__builtin_sve_svmsb_n_s16_m
__builtin_sve_svmsb_n_s16_x
__builtin_sve_svmsb_n_s16_z
__builtin_sve_svmsb_n_s32_m
__builtin_sve_svmsb_n_s32_x
__builtin_sve_svmsb_n_s32_z
__builtin_sve_svmsb_n_s64_m
__builtin_sve_svmsb_n_s64_x
__builtin_sve_svmsb_n_s64_z
__builtin_sve_svmsb_n_s8_m
__builtin_sve_svmsb_n_s8_x
__builtin_sve_svmsb_n_s8_z
__builtin_sve_svmsb_n_u16_m
__builtin_sve_svmsb_n_u16_x
__builtin_sve_svmsb_n_u16_z
__builtin_sve_svmsb_n_u32_m
__builtin_sve_svmsb_n_u32_x
__builtin_sve_svmsb_n_u32_z
__builtin_sve_svmsb_n_u64_m
__builtin_sve_svmsb_n_u64_x
__builtin_sve_svmsb_n_u64_z
__builtin_sve_svmsb_n_u8_m
__builtin_sve_svmsb_n_u8_x
__builtin_sve_svmsb_n_u8_z
__builtin_sve_svmsb_s16_m
__builtin_sve_svmsb_s16_x
__builtin_sve_svmsb_s16_z
__builtin_sve_svmsb_s32_m
__builtin_sve_svmsb_s32_x
__builtin_sve_svmsb_s32_z
__builtin_sve_svmsb_s64_m
__builtin_sve_svmsb_s64_x
__builtin_sve_svmsb_s64_z
__builtin_sve_svmsb_s8_m
__builtin_sve_svmsb_s8_x
__builtin_sve_svmsb_s8_z
__builtin_sve_svmsb_u16_m
__builtin_sve_svmsb_u16_x
__builtin_sve_svmsb_u16_z
__builtin_sve_svmsb_u32_m
__builtin_sve_svmsb_u32_x
__builtin_sve_svmsb_u32_z
__builtin_sve_svmsb_u64_m
__builtin_sve_svmsb_u64_x
__builtin_sve_svmsb_u64_z
__builtin_sve_svmsb_u8_m
__builtin_sve_svmsb_u8_x
__builtin_sve_svmsb_u8_z
__builtin_sve_svmul_f16_m
__builtin_sve_svmul_f16_x
__builtin_sve_svmul_f16_z
__builtin_sve_svmul_f32_m
__builtin_sve_svmul_f32_x
__builtin_sve_svmul_f32_z
__builtin_sve_svmul_f64_m
__builtin_sve_svmul_f64_x
__builtin_sve_svmul_f64_z
__builtin_sve_svmul_lane_f16
__builtin_sve_svmul_lane_f32
__builtin_sve_svmul_lane_f64
__builtin_sve_svmul_lane_s16
__builtin_sve_svmul_lane_s32
__builtin_sve_svmul_lane_s64
__builtin_sve_svmul_lane_u16
__builtin_sve_svmul_lane_u32
__builtin_sve_svmul_lane_u64
__builtin_sve_svmul_n_f16_m
__builtin_sve_svmul_n_f16_x
__builtin_sve_svmul_n_f16_z
__builtin_sve_svmul_n_f32_m
__builtin_sve_svmul_n_f32_x
__builtin_sve_svmul_n_f32_z
__builtin_sve_svmul_n_f64_m
__builtin_sve_svmul_n_f64_x
__builtin_sve_svmul_n_f64_z
__builtin_sve_svmul_n_s16_m
__builtin_sve_svmul_n_s16_x
__builtin_sve_svmul_n_s16_z
__builtin_sve_svmul_n_s32_m
__builtin_sve_svmul_n_s32_x
__builtin_sve_svmul_n_s32_z
__builtin_sve_svmul_n_s64_m
__builtin_sve_svmul_n_s64_x
__builtin_sve_svmul_n_s64_z
__builtin_sve_svmul_n_s8_m
__builtin_sve_svmul_n_s8_x
__builtin_sve_svmul_n_s8_z
__builtin_sve_svmul_n_u16_m
__builtin_sve_svmul_n_u16_x
__builtin_sve_svmul_n_u16_z
__builtin_sve_svmul_n_u32_m
__builtin_sve_svmul_n_u32_x
__builtin_sve_svmul_n_u32_z
__builtin_sve_svmul_n_u64_m
__builtin_sve_svmul_n_u64_x
__builtin_sve_svmul_n_u64_z
__builtin_sve_svmul_n_u8_m
__builtin_sve_svmul_n_u8_x
__builtin_sve_svmul_n_u8_z
__builtin_sve_svmul_s16_m
__builtin_sve_svmul_s16_x
__builtin_sve_svmul_s16_z
__builtin_sve_svmul_s32_m
__builtin_sve_svmul_s32_x
__builtin_sve_svmul_s32_z
__builtin_sve_svmul_s64_m
__builtin_sve_svmul_s64_x
__builtin_sve_svmul_s64_z
__builtin_sve_svmul_s8_m
__builtin_sve_svmul_s8_x
__builtin_sve_svmul_s8_z
__builtin_sve_svmul_u16_m
__builtin_sve_svmul_u16_x
__builtin_sve_svmul_u16_z
__builtin_sve_svmul_u32_m
__builtin_sve_svmul_u32_x
__builtin_sve_svmul_u32_z
__builtin_sve_svmul_u64_m
__builtin_sve_svmul_u64_x
__builtin_sve_svmul_u64_z
__builtin_sve_svmul_u8_m
__builtin_sve_svmul_u8_x
__builtin_sve_svmul_u8_z
__builtin_sve_svmulh_n_s16_m
__builtin_sve_svmulh_n_s16_x
__builtin_sve_svmulh_n_s16_z
__builtin_sve_svmulh_n_s32_m
__builtin_sve_svmulh_n_s32_x
__builtin_sve_svmulh_n_s32_z
__builtin_sve_svmulh_n_s64_m
__builtin_sve_svmulh_n_s64_x
__builtin_sve_svmulh_n_s64_z
__builtin_sve_svmulh_n_s8_m
__builtin_sve_svmulh_n_s8_x
__builtin_sve_svmulh_n_s8_z
__builtin_sve_svmulh_n_u16_m
__builtin_sve_svmulh_n_u16_x
__builtin_sve_svmulh_n_u16_z
__builtin_sve_svmulh_n_u32_m
__builtin_sve_svmulh_n_u32_x
__builtin_sve_svmulh_n_u32_z
__builtin_sve_svmulh_n_u64_m
__builtin_sve_svmulh_n_u64_x
__builtin_sve_svmulh_n_u64_z
__builtin_sve_svmulh_n_u8_m
__builtin_sve_svmulh_n_u8_x
__builtin_sve_svmulh_n_u8_z
__builtin_sve_svmulh_s16_m
__builtin_sve_svmulh_s16_x
__builtin_sve_svmulh_s16_z
__builtin_sve_svmulh_s32_m
__builtin_sve_svmulh_s32_x
__builtin_sve_svmulh_s32_z
__builtin_sve_svmulh_s64_m
__builtin_sve_svmulh_s64_x
__builtin_sve_svmulh_s64_z
__builtin_sve_svmulh_s8_m
__builtin_sve_svmulh_s8_x
__builtin_sve_svmulh_s8_z
__builtin_sve_svmulh_u16_m
__builtin_sve_svmulh_u16_x
__builtin_sve_svmulh_u16_z
__builtin_sve_svmulh_u32_m
__builtin_sve_svmulh_u32_x
__builtin_sve_svmulh_u32_z
__builtin_sve_svmulh_u64_m
__builtin_sve_svmulh_u64_x
__builtin_sve_svmulh_u64_z
__builtin_sve_svmulh_u8_m
__builtin_sve_svmulh_u8_x
__builtin_sve_svmulh_u8_z
__builtin_sve_svmullb_lane_s32
q4iq8sq8sIUWi
__builtin_sve_svmullb_lane_s64
q2Wiq4iq4iIUWi
__builtin_sve_svmullb_lane_u32
q4Uiq8Usq8UsIUWi
__builtin_sve_svmullb_lane_u64
q2UWiq4Uiq4UiIUWi
__builtin_sve_svmullb_n_s16
__builtin_sve_svmullb_n_s32
__builtin_sve_svmullb_n_s64
__builtin_sve_svmullb_n_u16
__builtin_sve_svmullb_n_u32
__builtin_sve_svmullb_n_u64
__builtin_sve_svmullb_s16
__builtin_sve_svmullb_s32
__builtin_sve_svmullb_s64
__builtin_sve_svmullb_u16
__builtin_sve_svmullb_u32
__builtin_sve_svmullb_u64
__builtin_sve_svmullt_lane_s32
__builtin_sve_svmullt_lane_s64
__builtin_sve_svmullt_lane_u32
__builtin_sve_svmullt_lane_u64
__builtin_sve_svmullt_n_s16
__builtin_sve_svmullt_n_s32
__builtin_sve_svmullt_n_s64
__builtin_sve_svmullt_n_u16
__builtin_sve_svmullt_n_u32
__builtin_sve_svmullt_n_u64
__builtin_sve_svmullt_s16
__builtin_sve_svmullt_s32
__builtin_sve_svmullt_s64
__builtin_sve_svmullt_u16
__builtin_sve_svmullt_u32
__builtin_sve_svmullt_u64
__builtin_sve_svmulx_f16_m
__builtin_sve_svmulx_f16_x
__builtin_sve_svmulx_f16_z
__builtin_sve_svmulx_f32_m
__builtin_sve_svmulx_f32_x
__builtin_sve_svmulx_f32_z
__builtin_sve_svmulx_f64_m
__builtin_sve_svmulx_f64_x
__builtin_sve_svmulx_f64_z
__builtin_sve_svmulx_n_f16_m
__builtin_sve_svmulx_n_f16_x
__builtin_sve_svmulx_n_f16_z
__builtin_sve_svmulx_n_f32_m
__builtin_sve_svmulx_n_f32_x
__builtin_sve_svmulx_n_f32_z
__builtin_sve_svmulx_n_f64_m
__builtin_sve_svmulx_n_f64_x
__builtin_sve_svmulx_n_f64_z
__builtin_sve_svnand_b_z
__builtin_sve_svnbsl_n_s16
__builtin_sve_svnbsl_n_s32
__builtin_sve_svnbsl_n_s64
__builtin_sve_svnbsl_n_s8
__builtin_sve_svnbsl_n_u16
__builtin_sve_svnbsl_n_u32
__builtin_sve_svnbsl_n_u64
__builtin_sve_svnbsl_n_u8
__builtin_sve_svnbsl_s16
__builtin_sve_svnbsl_s32
__builtin_sve_svnbsl_s64
__builtin_sve_svnbsl_s8
__builtin_sve_svnbsl_u16
__builtin_sve_svnbsl_u32
__builtin_sve_svnbsl_u64
__builtin_sve_svnbsl_u8
__builtin_sve_svneg_f16_m
__builtin_sve_svneg_f16_x
__builtin_sve_svneg_f16_z
__builtin_sve_svneg_f32_m
__builtin_sve_svneg_f32_x
__builtin_sve_svneg_f32_z
__builtin_sve_svneg_f64_m
__builtin_sve_svneg_f64_x
__builtin_sve_svneg_f64_z
__builtin_sve_svneg_s16_m
__builtin_sve_svneg_s16_x
__builtin_sve_svneg_s16_z
__builtin_sve_svneg_s32_m
__builtin_sve_svneg_s32_x
__builtin_sve_svneg_s32_z
__builtin_sve_svneg_s64_m
__builtin_sve_svneg_s64_x
__builtin_sve_svneg_s64_z
__builtin_sve_svneg_s8_m
__builtin_sve_svneg_s8_x
__builtin_sve_svneg_s8_z
__builtin_sve_svnmad_f16_m
__builtin_sve_svnmad_f16_x
__builtin_sve_svnmad_f16_z
__builtin_sve_svnmad_f32_m
__builtin_sve_svnmad_f32_x
__builtin_sve_svnmad_f32_z
__builtin_sve_svnmad_f64_m
__builtin_sve_svnmad_f64_x
__builtin_sve_svnmad_f64_z
__builtin_sve_svnmad_n_f16_m
__builtin_sve_svnmad_n_f16_x
__builtin_sve_svnmad_n_f16_z
__builtin_sve_svnmad_n_f32_m
__builtin_sve_svnmad_n_f32_x
__builtin_sve_svnmad_n_f32_z
__builtin_sve_svnmad_n_f64_m
__builtin_sve_svnmad_n_f64_x
__builtin_sve_svnmad_n_f64_z
__builtin_sve_svnmatch_s16
__builtin_sve_svnmatch_s8
__builtin_sve_svnmatch_u16
__builtin_sve_svnmatch_u8
__builtin_sve_svnmla_f16_m
__builtin_sve_svnmla_f16_x
__builtin_sve_svnmla_f16_z
__builtin_sve_svnmla_f32_m
__builtin_sve_svnmla_f32_x
__builtin_sve_svnmla_f32_z
__builtin_sve_svnmla_f64_m
__builtin_sve_svnmla_f64_x
__builtin_sve_svnmla_f64_z
__builtin_sve_svnmla_n_f16_m
__builtin_sve_svnmla_n_f16_x
__builtin_sve_svnmla_n_f16_z
__builtin_sve_svnmla_n_f32_m
__builtin_sve_svnmla_n_f32_x
__builtin_sve_svnmla_n_f32_z
__builtin_sve_svnmla_n_f64_m
__builtin_sve_svnmla_n_f64_x
__builtin_sve_svnmla_n_f64_z
__builtin_sve_svnmls_f16_m
__builtin_sve_svnmls_f16_x
__builtin_sve_svnmls_f16_z
__builtin_sve_svnmls_f32_m
__builtin_sve_svnmls_f32_x
__builtin_sve_svnmls_f32_z
__builtin_sve_svnmls_f64_m
__builtin_sve_svnmls_f64_x
__builtin_sve_svnmls_f64_z
__builtin_sve_svnmls_n_f16_m
__builtin_sve_svnmls_n_f16_x
__builtin_sve_svnmls_n_f16_z
__builtin_sve_svnmls_n_f32_m
__builtin_sve_svnmls_n_f32_x
__builtin_sve_svnmls_n_f32_z
__builtin_sve_svnmls_n_f64_m
__builtin_sve_svnmls_n_f64_x
__builtin_sve_svnmls_n_f64_z
__builtin_sve_svnmsb_f16_m
__builtin_sve_svnmsb_f16_x
__builtin_sve_svnmsb_f16_z
__builtin_sve_svnmsb_f32_m
__builtin_sve_svnmsb_f32_x
__builtin_sve_svnmsb_f32_z
__builtin_sve_svnmsb_f64_m
__builtin_sve_svnmsb_f64_x
__builtin_sve_svnmsb_f64_z
__builtin_sve_svnmsb_n_f16_m
__builtin_sve_svnmsb_n_f16_x
__builtin_sve_svnmsb_n_f16_z
__builtin_sve_svnmsb_n_f32_m
__builtin_sve_svnmsb_n_f32_x
__builtin_sve_svnmsb_n_f32_z
__builtin_sve_svnmsb_n_f64_m
__builtin_sve_svnmsb_n_f64_x
__builtin_sve_svnmsb_n_f64_z
__builtin_sve_svnor_b_z
__builtin_sve_svnot_b_z
__builtin_sve_svnot_s16_m
__builtin_sve_svnot_s16_x
__builtin_sve_svnot_s16_z
__builtin_sve_svnot_s32_m
__builtin_sve_svnot_s32_x
__builtin_sve_svnot_s32_z
__builtin_sve_svnot_s64_m
__builtin_sve_svnot_s64_x
__builtin_sve_svnot_s64_z
__builtin_sve_svnot_s8_m
__builtin_sve_svnot_s8_x
__builtin_sve_svnot_s8_z
__builtin_sve_svnot_u16_m
__builtin_sve_svnot_u16_x
__builtin_sve_svnot_u16_z
__builtin_sve_svnot_u32_m
__builtin_sve_svnot_u32_x
__builtin_sve_svnot_u32_z
__builtin_sve_svnot_u64_m
__builtin_sve_svnot_u64_x
__builtin_sve_svnot_u64_z
__builtin_sve_svnot_u8_m
__builtin_sve_svnot_u8_x
__builtin_sve_svnot_u8_z
__builtin_sve_svorn_b_z
__builtin_sve_svorr_b_z
__builtin_sve_svorr_n_s16_m
__builtin_sve_svorr_n_s16_x
__builtin_sve_svorr_n_s16_z
__builtin_sve_svorr_n_s32_m
__builtin_sve_svorr_n_s32_x
__builtin_sve_svorr_n_s32_z
__builtin_sve_svorr_n_s64_m
__builtin_sve_svorr_n_s64_x
__builtin_sve_svorr_n_s64_z
__builtin_sve_svorr_n_s8_m
__builtin_sve_svorr_n_s8_x
__builtin_sve_svorr_n_s8_z
__builtin_sve_svorr_n_u16_m
__builtin_sve_svorr_n_u16_x
__builtin_sve_svorr_n_u16_z
__builtin_sve_svorr_n_u32_m
__builtin_sve_svorr_n_u32_x
__builtin_sve_svorr_n_u32_z
__builtin_sve_svorr_n_u64_m
__builtin_sve_svorr_n_u64_x
__builtin_sve_svorr_n_u64_z
__builtin_sve_svorr_n_u8_m
__builtin_sve_svorr_n_u8_x
__builtin_sve_svorr_n_u8_z
__builtin_sve_svorr_s16_m
__builtin_sve_svorr_s16_x
__builtin_sve_svorr_s16_z
__builtin_sve_svorr_s32_m
__builtin_sve_svorr_s32_x
__builtin_sve_svorr_s32_z
__builtin_sve_svorr_s64_m
__builtin_sve_svorr_s64_x
__builtin_sve_svorr_s64_z
__builtin_sve_svorr_s8_m
__builtin_sve_svorr_s8_x
__builtin_sve_svorr_s8_z
__builtin_sve_svorr_u16_m
__builtin_sve_svorr_u16_x
__builtin_sve_svorr_u16_z
__builtin_sve_svorr_u32_m
__builtin_sve_svorr_u32_x
__builtin_sve_svorr_u32_z
__builtin_sve_svorr_u64_m
__builtin_sve_svorr_u64_x
__builtin_sve_svorr_u64_z
__builtin_sve_svorr_u8_m
__builtin_sve_svorr_u8_x
__builtin_sve_svorr_u8_z
__builtin_sve_svorv_s16
__builtin_sve_svorv_s32
__builtin_sve_svorv_s64
__builtin_sve_svorv_s8
__builtin_sve_svorv_u16
__builtin_sve_svorv_u32
__builtin_sve_svorv_u64
__builtin_sve_svorv_u8
__builtin_sve_svpfalse_b
q16b
__builtin_sve_svpfirst_b
__builtin_sve_svpmul_n_u8
__builtin_sve_svpmul_u8
__builtin_sve_svpmullb_n_u16
__builtin_sve_svpmullb_n_u64
__builtin_sve_svpmullb_pair_n_u32
__builtin_sve_svpmullb_pair_n_u64
__builtin_sve_svpmullb_pair_n_u8
__builtin_sve_svpmullb_pair_u32
__builtin_sve_svpmullb_pair_u64
__builtin_sve_svpmullb_pair_u8
__builtin_sve_svpmullb_u16
__builtin_sve_svpmullb_u64
__builtin_sve_svpmullt_n_u16
__builtin_sve_svpmullt_n_u64
__builtin_sve_svpmullt_pair_n_u32
__builtin_sve_svpmullt_pair_n_u64
__builtin_sve_svpmullt_pair_n_u8
__builtin_sve_svpmullt_pair_u32
__builtin_sve_svpmullt_pair_u64
__builtin_sve_svpmullt_pair_u8
__builtin_sve_svpmullt_u16
__builtin_sve_svpmullt_u64
__builtin_sve_svpnext_b16
__builtin_sve_svpnext_b32
__builtin_sve_svpnext_b64
__builtin_sve_svpnext_b8
__builtin_sve_svprfb
vq16bvC*Ii
__builtin_sve_svprfb_gather_s32offset
vq16bvC*q4iIi
__builtin_sve_svprfb_gather_s64offset
vq16bvC*q2WiIi
__builtin_sve_svprfb_gather_u32base
vq16bq4UiIi
__builtin_sve_svprfb_gather_u32base_offset
vq16bq4UiWiIi
__builtin_sve_svprfb_gather_u32offset
vq16bvC*q4UiIi
__builtin_sve_svprfb_gather_u64base
vq16bq2UWiIi
__builtin_sve_svprfb_gather_u64base_offset
vq16bq2UWiWiIi
__builtin_sve_svprfb_gather_u64offset
vq16bvC*q2UWiIi
__builtin_sve_svprfb_vnum
vq16bvC*WiIi
__builtin_sve_svprfd
__builtin_sve_svprfd_gather_s32index
__builtin_sve_svprfd_gather_s64index
__builtin_sve_svprfd_gather_u32base
__builtin_sve_svprfd_gather_u32base_index
__builtin_sve_svprfd_gather_u32index
__builtin_sve_svprfd_gather_u64base
__builtin_sve_svprfd_gather_u64base_index
__builtin_sve_svprfd_gather_u64index
__builtin_sve_svprfd_vnum
__builtin_sve_svprfh
__builtin_sve_svprfh_gather_s32index
__builtin_sve_svprfh_gather_s64index
__builtin_sve_svprfh_gather_u32base
__builtin_sve_svprfh_gather_u32base_index
__builtin_sve_svprfh_gather_u32index
__builtin_sve_svprfh_gather_u64base
__builtin_sve_svprfh_gather_u64base_index
__builtin_sve_svprfh_gather_u64index
__builtin_sve_svprfh_vnum
__builtin_sve_svprfw
__builtin_sve_svprfw_gather_s32index
__builtin_sve_svprfw_gather_s64index
__builtin_sve_svprfw_gather_u32base
__builtin_sve_svprfw_gather_u32base_index
__builtin_sve_svprfw_gather_u32index
__builtin_sve_svprfw_gather_u64base
__builtin_sve_svprfw_gather_u64base_index
__builtin_sve_svprfw_gather_u64index
__builtin_sve_svprfw_vnum
__builtin_sve_svptest_any
bq16bq16b
__builtin_sve_svptest_first
__builtin_sve_svptest_last
__builtin_sve_svptrue_b16
__builtin_sve_svptrue_b32
__builtin_sve_svptrue_b64
__builtin_sve_svptrue_b8
__builtin_sve_svptrue_pat_b16
q16bIi
__builtin_sve_svptrue_pat_b32
__builtin_sve_svptrue_pat_b64
__builtin_sve_svptrue_pat_b8
__builtin_sve_svqabs_s16_m
__builtin_sve_svqabs_s16_x
__builtin_sve_svqabs_s16_z
__builtin_sve_svqabs_s32_m
__builtin_sve_svqabs_s32_x
__builtin_sve_svqabs_s32_z
__builtin_sve_svqabs_s64_m
__builtin_sve_svqabs_s64_x
__builtin_sve_svqabs_s64_z
__builtin_sve_svqabs_s8_m
__builtin_sve_svqabs_s8_x
__builtin_sve_svqabs_s8_z
__builtin_sve_svqadd_n_s16
__builtin_sve_svqadd_n_s16_m
__builtin_sve_svqadd_n_s16_x
__builtin_sve_svqadd_n_s16_z
__builtin_sve_svqadd_n_s32
__builtin_sve_svqadd_n_s32_m
__builtin_sve_svqadd_n_s32_x
__builtin_sve_svqadd_n_s32_z
__builtin_sve_svqadd_n_s64
__builtin_sve_svqadd_n_s64_m
__builtin_sve_svqadd_n_s64_x
__builtin_sve_svqadd_n_s64_z
__builtin_sve_svqadd_n_s8
__builtin_sve_svqadd_n_s8_m
__builtin_sve_svqadd_n_s8_x
__builtin_sve_svqadd_n_s8_z
__builtin_sve_svqadd_n_u16
__builtin_sve_svqadd_n_u16_m
__builtin_sve_svqadd_n_u16_x
__builtin_sve_svqadd_n_u16_z
__builtin_sve_svqadd_n_u32
__builtin_sve_svqadd_n_u32_m
__builtin_sve_svqadd_n_u32_x
__builtin_sve_svqadd_n_u32_z
__builtin_sve_svqadd_n_u64
__builtin_sve_svqadd_n_u64_m
__builtin_sve_svqadd_n_u64_x
__builtin_sve_svqadd_n_u64_z
__builtin_sve_svqadd_n_u8
__builtin_sve_svqadd_n_u8_m
__builtin_sve_svqadd_n_u8_x
__builtin_sve_svqadd_n_u8_z
__builtin_sve_svqadd_s16
q8sq8sq8s
__builtin_sve_svqadd_s16_m
__builtin_sve_svqadd_s16_x
__builtin_sve_svqadd_s16_z
__builtin_sve_svqadd_s32
q4iq4iq4i
__builtin_sve_svqadd_s32_m
__builtin_sve_svqadd_s32_x
__builtin_sve_svqadd_s32_z
__builtin_sve_svqadd_s64
q2Wiq2Wiq2Wi
__builtin_sve_svqadd_s64_m
__builtin_sve_svqadd_s64_x
__builtin_sve_svqadd_s64_z
__builtin_sve_svqadd_s8
q16Scq16Scq16Sc
__builtin_sve_svqadd_s8_m
__builtin_sve_svqadd_s8_x
__builtin_sve_svqadd_s8_z
__builtin_sve_svqadd_u16
__builtin_sve_svqadd_u16_m
__builtin_sve_svqadd_u16_x
__builtin_sve_svqadd_u16_z
__builtin_sve_svqadd_u32
__builtin_sve_svqadd_u32_m
__builtin_sve_svqadd_u32_x
__builtin_sve_svqadd_u32_z
__builtin_sve_svqadd_u64
__builtin_sve_svqadd_u64_m
__builtin_sve_svqadd_u64_x
__builtin_sve_svqadd_u64_z
__builtin_sve_svqadd_u8
__builtin_sve_svqadd_u8_m
__builtin_sve_svqadd_u8_x
__builtin_sve_svqadd_u8_z
__builtin_sve_svqcadd_s16
__builtin_sve_svqcadd_s32
__builtin_sve_svqcadd_s64
__builtin_sve_svqcadd_s8
__builtin_sve_svqdecb_n_s32
iiIUWi
__builtin_sve_svqdecb_n_s64
WiWiIUWi
__builtin_sve_svqdecb_n_u32
UiUiIUWi
__builtin_sve_svqdecb_n_u64
UWiUWiIUWi
__builtin_sve_svqdecb_pat_n_s32
iiIiIUWi
__builtin_sve_svqdecb_pat_n_s64
WiWiIiIUWi
__builtin_sve_svqdecb_pat_n_u32
UiUiIiIUWi
__builtin_sve_svqdecb_pat_n_u64
UWiUWiIiIUWi
__builtin_sve_svqdecd_n_s32
__builtin_sve_svqdecd_n_s64
__builtin_sve_svqdecd_n_u32
__builtin_sve_svqdecd_n_u64
__builtin_sve_svqdecd_pat_n_s32
__builtin_sve_svqdecd_pat_n_s64
__builtin_sve_svqdecd_pat_n_u32
__builtin_sve_svqdecd_pat_n_u64
__builtin_sve_svqdecd_pat_s64
q2Wiq2WiIiIUWi
__builtin_sve_svqdecd_pat_u64
q2UWiq2UWiIiIUWi
__builtin_sve_svqdecd_s64
q2Wiq2WiIUWi
__builtin_sve_svqdecd_u64
q2UWiq2UWiIUWi
__builtin_sve_svqdech_n_s32
__builtin_sve_svqdech_n_s64
__builtin_sve_svqdech_n_u32
__builtin_sve_svqdech_n_u64
__builtin_sve_svqdech_pat_n_s32
__builtin_sve_svqdech_pat_n_s64
__builtin_sve_svqdech_pat_n_u32
__builtin_sve_svqdech_pat_n_u64
__builtin_sve_svqdech_pat_s16
q8sq8sIiIUWi
__builtin_sve_svqdech_pat_u16
q8Usq8UsIiIUWi
__builtin_sve_svqdech_s16
q8sq8sIUWi
__builtin_sve_svqdech_u16
q8Usq8UsIUWi
__builtin_sve_svqdecp_n_s32_b16
iiq16b
__builtin_sve_svqdecp_n_s32_b32
__builtin_sve_svqdecp_n_s32_b64
__builtin_sve_svqdecp_n_s32_b8
__builtin_sve_svqdecp_n_s64_b16
WiWiq16b
__builtin_sve_svqdecp_n_s64_b32
__builtin_sve_svqdecp_n_s64_b64
__builtin_sve_svqdecp_n_s64_b8
__builtin_sve_svqdecp_n_u32_b16
UiUiq16b
__builtin_sve_svqdecp_n_u32_b32
__builtin_sve_svqdecp_n_u32_b64
__builtin_sve_svqdecp_n_u32_b8
__builtin_sve_svqdecp_n_u64_b16
UWiUWiq16b
__builtin_sve_svqdecp_n_u64_b32
__builtin_sve_svqdecp_n_u64_b64
__builtin_sve_svqdecp_n_u64_b8
__builtin_sve_svqdecp_s16
q8sq8sq16b
__builtin_sve_svqdecp_s32
q4iq4iq16b
__builtin_sve_svqdecp_s64
q2Wiq2Wiq16b
__builtin_sve_svqdecp_u16
q8Usq8Usq16b
__builtin_sve_svqdecp_u32
q4Uiq4Uiq16b
__builtin_sve_svqdecp_u64
q2UWiq2UWiq16b
__builtin_sve_svqdecw_n_s32
__builtin_sve_svqdecw_n_s64
__builtin_sve_svqdecw_n_u32
__builtin_sve_svqdecw_n_u64
__builtin_sve_svqdecw_pat_n_s32
__builtin_sve_svqdecw_pat_n_s64
__builtin_sve_svqdecw_pat_n_u32
__builtin_sve_svqdecw_pat_n_u64
__builtin_sve_svqdecw_pat_s32
q4iq4iIiIUWi
__builtin_sve_svqdecw_pat_u32
q4Uiq4UiIiIUWi
__builtin_sve_svqdecw_s32
q4iq4iIUWi
__builtin_sve_svqdecw_u32
q4Uiq4UiIUWi
__builtin_sve_svqdmlalb_lane_s32
__builtin_sve_svqdmlalb_lane_s64
__builtin_sve_svqdmlalb_n_s16
__builtin_sve_svqdmlalb_n_s32
__builtin_sve_svqdmlalb_n_s64
__builtin_sve_svqdmlalb_s16
__builtin_sve_svqdmlalb_s32
__builtin_sve_svqdmlalb_s64
__builtin_sve_svqdmlalbt_n_s16
__builtin_sve_svqdmlalbt_n_s32
__builtin_sve_svqdmlalbt_n_s64
__builtin_sve_svqdmlalbt_s16
__builtin_sve_svqdmlalbt_s32
__builtin_sve_svqdmlalbt_s64
__builtin_sve_svqdmlalt_lane_s32
__builtin_sve_svqdmlalt_lane_s64
__builtin_sve_svqdmlalt_n_s16
__builtin_sve_svqdmlalt_n_s32
__builtin_sve_svqdmlalt_n_s64
__builtin_sve_svqdmlalt_s16
__builtin_sve_svqdmlalt_s32
__builtin_sve_svqdmlalt_s64
__builtin_sve_svqdmlslb_lane_s32
__builtin_sve_svqdmlslb_lane_s64
__builtin_sve_svqdmlslb_n_s16
__builtin_sve_svqdmlslb_n_s32
__builtin_sve_svqdmlslb_n_s64
__builtin_sve_svqdmlslb_s16
__builtin_sve_svqdmlslb_s32
__builtin_sve_svqdmlslb_s64
__builtin_sve_svqdmlslbt_n_s16
__builtin_sve_svqdmlslbt_n_s32
__builtin_sve_svqdmlslbt_n_s64
__builtin_sve_svqdmlslbt_s16
__builtin_sve_svqdmlslbt_s32
__builtin_sve_svqdmlslbt_s64
__builtin_sve_svqdmlslt_lane_s32
__builtin_sve_svqdmlslt_lane_s64
__builtin_sve_svqdmlslt_n_s16
__builtin_sve_svqdmlslt_n_s32
__builtin_sve_svqdmlslt_n_s64
__builtin_sve_svqdmlslt_s16
__builtin_sve_svqdmlslt_s32
__builtin_sve_svqdmlslt_s64
__builtin_sve_svqdmulh_lane_s16
__builtin_sve_svqdmulh_lane_s32
__builtin_sve_svqdmulh_lane_s64
__builtin_sve_svqdmulh_n_s16
__builtin_sve_svqdmulh_n_s32
__builtin_sve_svqdmulh_n_s64
__builtin_sve_svqdmulh_n_s8
__builtin_sve_svqdmulh_s16
__builtin_sve_svqdmulh_s32
__builtin_sve_svqdmulh_s64
__builtin_sve_svqdmulh_s8
__builtin_sve_svqdmullb_lane_s32
__builtin_sve_svqdmullb_lane_s64
__builtin_sve_svqdmullb_n_s16
__builtin_sve_svqdmullb_n_s32
__builtin_sve_svqdmullb_n_s64
__builtin_sve_svqdmullb_s16
__builtin_sve_svqdmullb_s32
__builtin_sve_svqdmullb_s64
__builtin_sve_svqdmullt_lane_s32
__builtin_sve_svqdmullt_lane_s64
__builtin_sve_svqdmullt_n_s16
__builtin_sve_svqdmullt_n_s32
__builtin_sve_svqdmullt_n_s64
__builtin_sve_svqdmullt_s16
__builtin_sve_svqdmullt_s32
__builtin_sve_svqdmullt_s64
__builtin_sve_svqincb_n_s32
__builtin_sve_svqincb_n_s64
__builtin_sve_svqincb_n_u32
__builtin_sve_svqincb_n_u64
__builtin_sve_svqincb_pat_n_s32
__builtin_sve_svqincb_pat_n_s64
__builtin_sve_svqincb_pat_n_u32
__builtin_sve_svqincb_pat_n_u64
__builtin_sve_svqincd_n_s32
__builtin_sve_svqincd_n_s64
__builtin_sve_svqincd_n_u32
__builtin_sve_svqincd_n_u64
__builtin_sve_svqincd_pat_n_s32
__builtin_sve_svqincd_pat_n_s64
__builtin_sve_svqincd_pat_n_u32
__builtin_sve_svqincd_pat_n_u64
__builtin_sve_svqincd_pat_s64
__builtin_sve_svqincd_pat_u64
__builtin_sve_svqincd_s64
__builtin_sve_svqincd_u64
__builtin_sve_svqinch_n_s32
__builtin_sve_svqinch_n_s64
__builtin_sve_svqinch_n_u32
__builtin_sve_svqinch_n_u64
__builtin_sve_svqinch_pat_n_s32
__builtin_sve_svqinch_pat_n_s64
__builtin_sve_svqinch_pat_n_u32
__builtin_sve_svqinch_pat_n_u64
__builtin_sve_svqinch_pat_s16
__builtin_sve_svqinch_pat_u16
__builtin_sve_svqinch_s16
__builtin_sve_svqinch_u16
__builtin_sve_svqincp_n_s32_b16
__builtin_sve_svqincp_n_s32_b32
__builtin_sve_svqincp_n_s32_b64
__builtin_sve_svqincp_n_s32_b8
__builtin_sve_svqincp_n_s64_b16
__builtin_sve_svqincp_n_s64_b32
__builtin_sve_svqincp_n_s64_b64
__builtin_sve_svqincp_n_s64_b8
__builtin_sve_svqincp_n_u32_b16
__builtin_sve_svqincp_n_u32_b32
__builtin_sve_svqincp_n_u32_b64
__builtin_sve_svqincp_n_u32_b8
__builtin_sve_svqincp_n_u64_b16
__builtin_sve_svqincp_n_u64_b32
__builtin_sve_svqincp_n_u64_b64
__builtin_sve_svqincp_n_u64_b8
__builtin_sve_svqincp_s16
__builtin_sve_svqincp_s32
__builtin_sve_svqincp_s64
__builtin_sve_svqincp_u16
__builtin_sve_svqincp_u32
__builtin_sve_svqincp_u64
__builtin_sve_svqincw_n_s32
__builtin_sve_svqincw_n_s64
__builtin_sve_svqincw_n_u32
__builtin_sve_svqincw_n_u64
__builtin_sve_svqincw_pat_n_s32
__builtin_sve_svqincw_pat_n_s64
__builtin_sve_svqincw_pat_n_u32
__builtin_sve_svqincw_pat_n_u64
__builtin_sve_svqincw_pat_s32
__builtin_sve_svqincw_pat_u32
__builtin_sve_svqincw_s32
__builtin_sve_svqincw_u32
__builtin_sve_svqneg_s16_m
__builtin_sve_svqneg_s16_x
__builtin_sve_svqneg_s16_z
__builtin_sve_svqneg_s32_m
__builtin_sve_svqneg_s32_x
__builtin_sve_svqneg_s32_z
__builtin_sve_svqneg_s64_m
__builtin_sve_svqneg_s64_x
__builtin_sve_svqneg_s64_z
__builtin_sve_svqneg_s8_m
__builtin_sve_svqneg_s8_x
__builtin_sve_svqneg_s8_z
__builtin_sve_svqrdcmlah_lane_s16
__builtin_sve_svqrdcmlah_lane_s32
__builtin_sve_svqrdcmlah_s16
__builtin_sve_svqrdcmlah_s32
__builtin_sve_svqrdcmlah_s64
__builtin_sve_svqrdcmlah_s8
__builtin_sve_svqrdmlah_lane_s16
__builtin_sve_svqrdmlah_lane_s32
__builtin_sve_svqrdmlah_lane_s64
__builtin_sve_svqrdmlah_n_s16
__builtin_sve_svqrdmlah_n_s32
__builtin_sve_svqrdmlah_n_s64
__builtin_sve_svqrdmlah_n_s8
__builtin_sve_svqrdmlah_s16
__builtin_sve_svqrdmlah_s32
__builtin_sve_svqrdmlah_s64
__builtin_sve_svqrdmlah_s8
__builtin_sve_svqrdmlsh_lane_s16
__builtin_sve_svqrdmlsh_lane_s32
__builtin_sve_svqrdmlsh_lane_s64
__builtin_sve_svqrdmlsh_n_s16
__builtin_sve_svqrdmlsh_n_s32
__builtin_sve_svqrdmlsh_n_s64
__builtin_sve_svqrdmlsh_n_s8
__builtin_sve_svqrdmlsh_s16
__builtin_sve_svqrdmlsh_s32
__builtin_sve_svqrdmlsh_s64
__builtin_sve_svqrdmlsh_s8
__builtin_sve_svqrdmulh_lane_s16
__builtin_sve_svqrdmulh_lane_s32
__builtin_sve_svqrdmulh_lane_s64
__builtin_sve_svqrdmulh_n_s16
__builtin_sve_svqrdmulh_n_s32
__builtin_sve_svqrdmulh_n_s64
__builtin_sve_svqrdmulh_n_s8
__builtin_sve_svqrdmulh_s16
__builtin_sve_svqrdmulh_s32
__builtin_sve_svqrdmulh_s64
__builtin_sve_svqrdmulh_s8
__builtin_sve_svqrshl_n_s16_m
__builtin_sve_svqrshl_n_s16_x
__builtin_sve_svqrshl_n_s16_z
__builtin_sve_svqrshl_n_s32_m
__builtin_sve_svqrshl_n_s32_x
__builtin_sve_svqrshl_n_s32_z
__builtin_sve_svqrshl_n_s64_m
__builtin_sve_svqrshl_n_s64_x
__builtin_sve_svqrshl_n_s64_z
__builtin_sve_svqrshl_n_s8_m
__builtin_sve_svqrshl_n_s8_x
__builtin_sve_svqrshl_n_s8_z
__builtin_sve_svqrshl_n_u16_m
q8Usq16bq8Uss
__builtin_sve_svqrshl_n_u16_x
__builtin_sve_svqrshl_n_u16_z
__builtin_sve_svqrshl_n_u32_m
q4Uiq16bq4Uii
__builtin_sve_svqrshl_n_u32_x
__builtin_sve_svqrshl_n_u32_z
__builtin_sve_svqrshl_n_u64_m
__builtin_sve_svqrshl_n_u64_x
__builtin_sve_svqrshl_n_u64_z
__builtin_sve_svqrshl_n_u8_m
q16Ucq16bq16UcSc
__builtin_sve_svqrshl_n_u8_x
__builtin_sve_svqrshl_n_u8_z
__builtin_sve_svqrshl_s16_m
__builtin_sve_svqrshl_s16_x
__builtin_sve_svqrshl_s16_z
__builtin_sve_svqrshl_s32_m
__builtin_sve_svqrshl_s32_x
__builtin_sve_svqrshl_s32_z
__builtin_sve_svqrshl_s64_m
__builtin_sve_svqrshl_s64_x
__builtin_sve_svqrshl_s64_z
__builtin_sve_svqrshl_s8_m
__builtin_sve_svqrshl_s8_x
__builtin_sve_svqrshl_s8_z
__builtin_sve_svqrshl_u16_m
q8Usq16bq8Usq8s
__builtin_sve_svqrshl_u16_x
__builtin_sve_svqrshl_u16_z
__builtin_sve_svqrshl_u32_m
q4Uiq16bq4Uiq4i
__builtin_sve_svqrshl_u32_x
__builtin_sve_svqrshl_u32_z
__builtin_sve_svqrshl_u64_m
q2UWiq16bq2UWiq2Wi
__builtin_sve_svqrshl_u64_x
__builtin_sve_svqrshl_u64_z
__builtin_sve_svqrshl_u8_m
q16Ucq16bq16Ucq16Sc
__builtin_sve_svqrshl_u8_x
__builtin_sve_svqrshl_u8_z
__builtin_sve_svqrshrnb_n_s16
q16Scq8sIUWi
__builtin_sve_svqrshrnb_n_s32
q8sq4iIUWi
__builtin_sve_svqrshrnb_n_s64
q4iq2WiIUWi
__builtin_sve_svqrshrnb_n_u16
q16Ucq8UsIUWi
__builtin_sve_svqrshrnb_n_u32
q8Usq4UiIUWi
__builtin_sve_svqrshrnb_n_u64
q4Uiq2UWiIUWi
__builtin_sve_svqrshrnt_n_s16
q16Scq16Scq8sIUWi
__builtin_sve_svqrshrnt_n_s32
q8sq8sq4iIUWi
__builtin_sve_svqrshrnt_n_s64
q4iq4iq2WiIUWi
__builtin_sve_svqrshrnt_n_u16
q16Ucq16Ucq8UsIUWi
__builtin_sve_svqrshrnt_n_u32
q8Usq8Usq4UiIUWi
__builtin_sve_svqrshrnt_n_u64
q4Uiq4Uiq2UWiIUWi
__builtin_sve_svqrshrunb_n_s16
q16Ucq8sIUWi
__builtin_sve_svqrshrunb_n_s32
q8Usq4iIUWi
__builtin_sve_svqrshrunb_n_s64
q4Uiq2WiIUWi
__builtin_sve_svqrshrunt_n_s16
q16Ucq16Ucq8sIUWi
__builtin_sve_svqrshrunt_n_s32
q8Usq8Usq4iIUWi
__builtin_sve_svqrshrunt_n_s64
q4Uiq4Uiq2WiIUWi
__builtin_sve_svqshl_n_s16_m
__builtin_sve_svqshl_n_s16_x
__builtin_sve_svqshl_n_s16_z
__builtin_sve_svqshl_n_s32_m
__builtin_sve_svqshl_n_s32_x
__builtin_sve_svqshl_n_s32_z
__builtin_sve_svqshl_n_s64_m
__builtin_sve_svqshl_n_s64_x
__builtin_sve_svqshl_n_s64_z
__builtin_sve_svqshl_n_s8_m
__builtin_sve_svqshl_n_s8_x
__builtin_sve_svqshl_n_s8_z
__builtin_sve_svqshl_n_u16_m
__builtin_sve_svqshl_n_u16_x
__builtin_sve_svqshl_n_u16_z
__builtin_sve_svqshl_n_u32_m
__builtin_sve_svqshl_n_u32_x
__builtin_sve_svqshl_n_u32_z
__builtin_sve_svqshl_n_u64_m
__builtin_sve_svqshl_n_u64_x
__builtin_sve_svqshl_n_u64_z
__builtin_sve_svqshl_n_u8_m
__builtin_sve_svqshl_n_u8_x
__builtin_sve_svqshl_n_u8_z
__builtin_sve_svqshl_s16_m
__builtin_sve_svqshl_s16_x
__builtin_sve_svqshl_s16_z
__builtin_sve_svqshl_s32_m
__builtin_sve_svqshl_s32_x
__builtin_sve_svqshl_s32_z
__builtin_sve_svqshl_s64_m
__builtin_sve_svqshl_s64_x
__builtin_sve_svqshl_s64_z
__builtin_sve_svqshl_s8_m
__builtin_sve_svqshl_s8_x
__builtin_sve_svqshl_s8_z
__builtin_sve_svqshl_u16_m
__builtin_sve_svqshl_u16_x
__builtin_sve_svqshl_u16_z
__builtin_sve_svqshl_u32_m
__builtin_sve_svqshl_u32_x
__builtin_sve_svqshl_u32_z
__builtin_sve_svqshl_u64_m
__builtin_sve_svqshl_u64_x
__builtin_sve_svqshl_u64_z
__builtin_sve_svqshl_u8_m
__builtin_sve_svqshl_u8_x
__builtin_sve_svqshl_u8_z
__builtin_sve_svqshlu_n_s16_m
q8Usq16bq8sIUWi
__builtin_sve_svqshlu_n_s16_x
__builtin_sve_svqshlu_n_s16_z
__builtin_sve_svqshlu_n_s32_m
q4Uiq16bq4iIUWi
__builtin_sve_svqshlu_n_s32_x
__builtin_sve_svqshlu_n_s32_z
__builtin_sve_svqshlu_n_s64_m
q2UWiq16bq2WiIUWi
__builtin_sve_svqshlu_n_s64_x
__builtin_sve_svqshlu_n_s64_z
__builtin_sve_svqshlu_n_s8_m
q16Ucq16bq16ScIUWi
__builtin_sve_svqshlu_n_s8_x
__builtin_sve_svqshlu_n_s8_z
__builtin_sve_svqshrnb_n_s16
__builtin_sve_svqshrnb_n_s32
__builtin_sve_svqshrnb_n_s64
__builtin_sve_svqshrnb_n_u16
__builtin_sve_svqshrnb_n_u32
__builtin_sve_svqshrnb_n_u64
__builtin_sve_svqshrnt_n_s16
__builtin_sve_svqshrnt_n_s32
__builtin_sve_svqshrnt_n_s64
__builtin_sve_svqshrnt_n_u16
__builtin_sve_svqshrnt_n_u32
__builtin_sve_svqshrnt_n_u64
__builtin_sve_svqshrunb_n_s16
__builtin_sve_svqshrunb_n_s32
__builtin_sve_svqshrunb_n_s64
__builtin_sve_svqshrunt_n_s16
__builtin_sve_svqshrunt_n_s32
__builtin_sve_svqshrunt_n_s64
__builtin_sve_svqsub_n_s16
__builtin_sve_svqsub_n_s16_m
__builtin_sve_svqsub_n_s16_x
__builtin_sve_svqsub_n_s16_z
__builtin_sve_svqsub_n_s32
__builtin_sve_svqsub_n_s32_m
__builtin_sve_svqsub_n_s32_x
__builtin_sve_svqsub_n_s32_z
__builtin_sve_svqsub_n_s64
__builtin_sve_svqsub_n_s64_m
__builtin_sve_svqsub_n_s64_x
__builtin_sve_svqsub_n_s64_z
__builtin_sve_svqsub_n_s8
__builtin_sve_svqsub_n_s8_m
__builtin_sve_svqsub_n_s8_x
__builtin_sve_svqsub_n_s8_z
__builtin_sve_svqsub_n_u16
__builtin_sve_svqsub_n_u16_m
__builtin_sve_svqsub_n_u16_x
__builtin_sve_svqsub_n_u16_z
__builtin_sve_svqsub_n_u32
__builtin_sve_svqsub_n_u32_m
__builtin_sve_svqsub_n_u32_x
__builtin_sve_svqsub_n_u32_z
__builtin_sve_svqsub_n_u64
__builtin_sve_svqsub_n_u64_m
__builtin_sve_svqsub_n_u64_x
__builtin_sve_svqsub_n_u64_z
__builtin_sve_svqsub_n_u8
__builtin_sve_svqsub_n_u8_m
__builtin_sve_svqsub_n_u8_x
__builtin_sve_svqsub_n_u8_z
__builtin_sve_svqsub_s16
__builtin_sve_svqsub_s16_m
__builtin_sve_svqsub_s16_x
__builtin_sve_svqsub_s16_z
__builtin_sve_svqsub_s32
__builtin_sve_svqsub_s32_m
__builtin_sve_svqsub_s32_x
__builtin_sve_svqsub_s32_z
__builtin_sve_svqsub_s64
__builtin_sve_svqsub_s64_m
__builtin_sve_svqsub_s64_x
__builtin_sve_svqsub_s64_z
__builtin_sve_svqsub_s8
__builtin_sve_svqsub_s8_m
__builtin_sve_svqsub_s8_x
__builtin_sve_svqsub_s8_z
__builtin_sve_svqsub_u16
__builtin_sve_svqsub_u16_m
__builtin_sve_svqsub_u16_x
__builtin_sve_svqsub_u16_z
__builtin_sve_svqsub_u32
__builtin_sve_svqsub_u32_m
__builtin_sve_svqsub_u32_x
__builtin_sve_svqsub_u32_z
__builtin_sve_svqsub_u64
__builtin_sve_svqsub_u64_m
__builtin_sve_svqsub_u64_x
__builtin_sve_svqsub_u64_z
__builtin_sve_svqsub_u8
__builtin_sve_svqsub_u8_m
__builtin_sve_svqsub_u8_x
__builtin_sve_svqsub_u8_z
__builtin_sve_svqsubr_n_s16_m
__builtin_sve_svqsubr_n_s16_x
__builtin_sve_svqsubr_n_s16_z
__builtin_sve_svqsubr_n_s32_m
__builtin_sve_svqsubr_n_s32_x
__builtin_sve_svqsubr_n_s32_z
__builtin_sve_svqsubr_n_s64_m
__builtin_sve_svqsubr_n_s64_x
__builtin_sve_svqsubr_n_s64_z
__builtin_sve_svqsubr_n_s8_m
__builtin_sve_svqsubr_n_s8_x
__builtin_sve_svqsubr_n_s8_z
__builtin_sve_svqsubr_n_u16_m
__builtin_sve_svqsubr_n_u16_x
__builtin_sve_svqsubr_n_u16_z
__builtin_sve_svqsubr_n_u32_m
__builtin_sve_svqsubr_n_u32_x
__builtin_sve_svqsubr_n_u32_z
__builtin_sve_svqsubr_n_u64_m
__builtin_sve_svqsubr_n_u64_x
__builtin_sve_svqsubr_n_u64_z
__builtin_sve_svqsubr_n_u8_m
__builtin_sve_svqsubr_n_u8_x
__builtin_sve_svqsubr_n_u8_z
__builtin_sve_svqsubr_s16_m
__builtin_sve_svqsubr_s16_x
__builtin_sve_svqsubr_s16_z
__builtin_sve_svqsubr_s32_m
__builtin_sve_svqsubr_s32_x
__builtin_sve_svqsubr_s32_z
__builtin_sve_svqsubr_s64_m
__builtin_sve_svqsubr_s64_x
__builtin_sve_svqsubr_s64_z
__builtin_sve_svqsubr_s8_m
__builtin_sve_svqsubr_s8_x
__builtin_sve_svqsubr_s8_z
__builtin_sve_svqsubr_u16_m
__builtin_sve_svqsubr_u16_x
__builtin_sve_svqsubr_u16_z
__builtin_sve_svqsubr_u32_m
__builtin_sve_svqsubr_u32_x
__builtin_sve_svqsubr_u32_z
__builtin_sve_svqsubr_u64_m
__builtin_sve_svqsubr_u64_x
__builtin_sve_svqsubr_u64_z
__builtin_sve_svqsubr_u8_m
__builtin_sve_svqsubr_u8_x
__builtin_sve_svqsubr_u8_z
__builtin_sve_svqxtnb_s16
q16Scq8s
__builtin_sve_svqxtnb_s32
q8sq4i
__builtin_sve_svqxtnb_s64
q4iq2Wi
__builtin_sve_svqxtnb_u16
q16Ucq8Us
__builtin_sve_svqxtnb_u32
q8Usq4Ui
__builtin_sve_svqxtnb_u64
q4Uiq2UWi
__builtin_sve_svqxtnt_s16
q16Scq16Scq8s
__builtin_sve_svqxtnt_s32
q8sq8sq4i
__builtin_sve_svqxtnt_s64
q4iq4iq2Wi
__builtin_sve_svqxtnt_u16
q16Ucq16Ucq8Us
__builtin_sve_svqxtnt_u32
q8Usq8Usq4Ui
__builtin_sve_svqxtnt_u64
q4Uiq4Uiq2UWi
__builtin_sve_svqxtunb_s16
q16Ucq8s
__builtin_sve_svqxtunb_s32
q8Usq4i
__builtin_sve_svqxtunb_s64
q4Uiq2Wi
__builtin_sve_svqxtunt_s16
q16Ucq16Ucq8s
__builtin_sve_svqxtunt_s32
q8Usq8Usq4i
__builtin_sve_svqxtunt_s64
q4Uiq4Uiq2Wi
__builtin_sve_svraddhnb_n_s16
__builtin_sve_svraddhnb_n_s32
__builtin_sve_svraddhnb_n_s64
__builtin_sve_svraddhnb_n_u16
__builtin_sve_svraddhnb_n_u32
__builtin_sve_svraddhnb_n_u64
__builtin_sve_svraddhnb_s16
__builtin_sve_svraddhnb_s32
__builtin_sve_svraddhnb_s64
__builtin_sve_svraddhnb_u16
__builtin_sve_svraddhnb_u32
__builtin_sve_svraddhnb_u64
__builtin_sve_svraddhnt_n_s16
__builtin_sve_svraddhnt_n_s32
__builtin_sve_svraddhnt_n_s64
__builtin_sve_svraddhnt_n_u16
__builtin_sve_svraddhnt_n_u32
__builtin_sve_svraddhnt_n_u64
__builtin_sve_svraddhnt_s16
__builtin_sve_svraddhnt_s32
__builtin_sve_svraddhnt_s64
__builtin_sve_svraddhnt_u16
__builtin_sve_svraddhnt_u32
__builtin_sve_svraddhnt_u64
__builtin_sve_svrax1_s64
__builtin_sve_svrax1_u64
__builtin_sve_svrbit_s16_m
__builtin_sve_svrbit_s16_x
__builtin_sve_svrbit_s16_z
__builtin_sve_svrbit_s32_m
__builtin_sve_svrbit_s32_x
__builtin_sve_svrbit_s32_z
__builtin_sve_svrbit_s64_m
__builtin_sve_svrbit_s64_x
__builtin_sve_svrbit_s64_z
__builtin_sve_svrbit_s8_m
__builtin_sve_svrbit_s8_x
__builtin_sve_svrbit_s8_z
__builtin_sve_svrbit_u16_m
__builtin_sve_svrbit_u16_x
__builtin_sve_svrbit_u16_z
__builtin_sve_svrbit_u32_m
__builtin_sve_svrbit_u32_x
__builtin_sve_svrbit_u32_z
__builtin_sve_svrbit_u64_m
__builtin_sve_svrbit_u64_x
__builtin_sve_svrbit_u64_z
__builtin_sve_svrbit_u8_m
__builtin_sve_svrbit_u8_x
__builtin_sve_svrbit_u8_z
__builtin_sve_svrdffr
__builtin_sve_svrdffr_z
q16bq16b
__builtin_sve_svrecpe_f16
q8hq8h
__builtin_sve_svrecpe_f32
q4fq4f
__builtin_sve_svrecpe_f64
q2dq2d
__builtin_sve_svrecpe_u32_m
__builtin_sve_svrecpe_u32_x
__builtin_sve_svrecpe_u32_z
__builtin_sve_svrecps_f16
q8hq8hq8h
__builtin_sve_svrecps_f32
q4fq4fq4f
__builtin_sve_svrecps_f64
q2dq2dq2d
__builtin_sve_svrecpx_f16_m
__builtin_sve_svrecpx_f16_x
__builtin_sve_svrecpx_f16_z
__builtin_sve_svrecpx_f32_m
__builtin_sve_svrecpx_f32_x
__builtin_sve_svrecpx_f32_z
__builtin_sve_svrecpx_f64_m
__builtin_sve_svrecpx_f64_x
__builtin_sve_svrecpx_f64_z
__builtin_sve_svrev_b16
__builtin_sve_svrev_b32
__builtin_sve_svrev_b64
__builtin_sve_svrev_b8
__builtin_sve_svrev_bf16
q8yq8y
__builtin_sve_svrev_f16
__builtin_sve_svrev_f32
__builtin_sve_svrev_f64
__builtin_sve_svrev_s16
q8sq8s
__builtin_sve_svrev_s32
q4iq4i
__builtin_sve_svrev_s64
q2Wiq2Wi
__builtin_sve_svrev_s8
q16Scq16Sc
__builtin_sve_svrev_u16
q8Usq8Us
__builtin_sve_svrev_u32
q4Uiq4Ui
__builtin_sve_svrev_u64
q2UWiq2UWi
__builtin_sve_svrev_u8
__builtin_sve_svrevb_s16_m
__builtin_sve_svrevb_s16_x
__builtin_sve_svrevb_s16_z
__builtin_sve_svrevb_s32_m
__builtin_sve_svrevb_s32_x
__builtin_sve_svrevb_s32_z
__builtin_sve_svrevb_s64_m
__builtin_sve_svrevb_s64_x
__builtin_sve_svrevb_s64_z
__builtin_sve_svrevb_u16_m
__builtin_sve_svrevb_u16_x
__builtin_sve_svrevb_u16_z
__builtin_sve_svrevb_u32_m
__builtin_sve_svrevb_u32_x
__builtin_sve_svrevb_u32_z
__builtin_sve_svrevb_u64_m
__builtin_sve_svrevb_u64_x
__builtin_sve_svrevb_u64_z
__builtin_sve_svrevh_s32_m
__builtin_sve_svrevh_s32_x
__builtin_sve_svrevh_s32_z
__builtin_sve_svrevh_s64_m
__builtin_sve_svrevh_s64_x
__builtin_sve_svrevh_s64_z
__builtin_sve_svrevh_u32_m
__builtin_sve_svrevh_u32_x
__builtin_sve_svrevh_u32_z
__builtin_sve_svrevh_u64_m
__builtin_sve_svrevh_u64_x
__builtin_sve_svrevh_u64_z
__builtin_sve_svrevw_s64_m
__builtin_sve_svrevw_s64_x
__builtin_sve_svrevw_s64_z
__builtin_sve_svrevw_u64_m
__builtin_sve_svrevw_u64_x
__builtin_sve_svrevw_u64_z
__builtin_sve_svrhadd_n_s16_m
__builtin_sve_svrhadd_n_s16_x
__builtin_sve_svrhadd_n_s16_z
__builtin_sve_svrhadd_n_s32_m
__builtin_sve_svrhadd_n_s32_x
__builtin_sve_svrhadd_n_s32_z
__builtin_sve_svrhadd_n_s64_m
__builtin_sve_svrhadd_n_s64_x
__builtin_sve_svrhadd_n_s64_z
__builtin_sve_svrhadd_n_s8_m
__builtin_sve_svrhadd_n_s8_x
__builtin_sve_svrhadd_n_s8_z
__builtin_sve_svrhadd_n_u16_m
__builtin_sve_svrhadd_n_u16_x
__builtin_sve_svrhadd_n_u16_z
__builtin_sve_svrhadd_n_u32_m
__builtin_sve_svrhadd_n_u32_x
__builtin_sve_svrhadd_n_u32_z
__builtin_sve_svrhadd_n_u64_m
__builtin_sve_svrhadd_n_u64_x
__builtin_sve_svrhadd_n_u64_z
__builtin_sve_svrhadd_n_u8_m
__builtin_sve_svrhadd_n_u8_x
__builtin_sve_svrhadd_n_u8_z
__builtin_sve_svrhadd_s16_m
__builtin_sve_svrhadd_s16_x
__builtin_sve_svrhadd_s16_z
__builtin_sve_svrhadd_s32_m
__builtin_sve_svrhadd_s32_x
__builtin_sve_svrhadd_s32_z
__builtin_sve_svrhadd_s64_m
__builtin_sve_svrhadd_s64_x
__builtin_sve_svrhadd_s64_z
__builtin_sve_svrhadd_s8_m
__builtin_sve_svrhadd_s8_x
__builtin_sve_svrhadd_s8_z
__builtin_sve_svrhadd_u16_m
__builtin_sve_svrhadd_u16_x
__builtin_sve_svrhadd_u16_z
__builtin_sve_svrhadd_u32_m
__builtin_sve_svrhadd_u32_x
__builtin_sve_svrhadd_u32_z
__builtin_sve_svrhadd_u64_m
__builtin_sve_svrhadd_u64_x
__builtin_sve_svrhadd_u64_z
__builtin_sve_svrhadd_u8_m
__builtin_sve_svrhadd_u8_x
__builtin_sve_svrhadd_u8_z
__builtin_sve_svrinta_f16_m
__builtin_sve_svrinta_f16_x
__builtin_sve_svrinta_f16_z
__builtin_sve_svrinta_f32_m
__builtin_sve_svrinta_f32_x
__builtin_sve_svrinta_f32_z
__builtin_sve_svrinta_f64_m
__builtin_sve_svrinta_f64_x
__builtin_sve_svrinta_f64_z
__builtin_sve_svrinti_f16_m
__builtin_sve_svrinti_f16_x
__builtin_sve_svrinti_f16_z
__builtin_sve_svrinti_f32_m
__builtin_sve_svrinti_f32_x
__builtin_sve_svrinti_f32_z
__builtin_sve_svrinti_f64_m
__builtin_sve_svrinti_f64_x
__builtin_sve_svrinti_f64_z
__builtin_sve_svrintm_f16_m
__builtin_sve_svrintm_f16_x
__builtin_sve_svrintm_f16_z
__builtin_sve_svrintm_f32_m
__builtin_sve_svrintm_f32_x
__builtin_sve_svrintm_f32_z
__builtin_sve_svrintm_f64_m
__builtin_sve_svrintm_f64_x
__builtin_sve_svrintm_f64_z
__builtin_sve_svrintn_f16_m
__builtin_sve_svrintn_f16_x
__builtin_sve_svrintn_f16_z
__builtin_sve_svrintn_f32_m
__builtin_sve_svrintn_f32_x
__builtin_sve_svrintn_f32_z
__builtin_sve_svrintn_f64_m
__builtin_sve_svrintn_f64_x
__builtin_sve_svrintn_f64_z
__builtin_sve_svrintp_f16_m
__builtin_sve_svrintp_f16_x
__builtin_sve_svrintp_f16_z
__builtin_sve_svrintp_f32_m
__builtin_sve_svrintp_f32_x
__builtin_sve_svrintp_f32_z
__builtin_sve_svrintp_f64_m
__builtin_sve_svrintp_f64_x
__builtin_sve_svrintp_f64_z
__builtin_sve_svrintx_f16_m
__builtin_sve_svrintx_f16_x
__builtin_sve_svrintx_f16_z
__builtin_sve_svrintx_f32_m
__builtin_sve_svrintx_f32_x
__builtin_sve_svrintx_f32_z
__builtin_sve_svrintx_f64_m
__builtin_sve_svrintx_f64_x
__builtin_sve_svrintx_f64_z
__builtin_sve_svrintz_f16_m
__builtin_sve_svrintz_f16_x
__builtin_sve_svrintz_f16_z
__builtin_sve_svrintz_f32_m
__builtin_sve_svrintz_f32_x
__builtin_sve_svrintz_f32_z
__builtin_sve_svrintz_f64_m
__builtin_sve_svrintz_f64_x
__builtin_sve_svrintz_f64_z
__builtin_sve_svrshl_n_s16_m
__builtin_sve_svrshl_n_s16_x
__builtin_sve_svrshl_n_s16_z
__builtin_sve_svrshl_n_s32_m
__builtin_sve_svrshl_n_s32_x
__builtin_sve_svrshl_n_s32_z
__builtin_sve_svrshl_n_s64_m
__builtin_sve_svrshl_n_s64_x
__builtin_sve_svrshl_n_s64_z
__builtin_sve_svrshl_n_s8_m
__builtin_sve_svrshl_n_s8_x
__builtin_sve_svrshl_n_s8_z
__builtin_sve_svrshl_n_u16_m
__builtin_sve_svrshl_n_u16_x
__builtin_sve_svrshl_n_u16_z
__builtin_sve_svrshl_n_u32_m
__builtin_sve_svrshl_n_u32_x
__builtin_sve_svrshl_n_u32_z
__builtin_sve_svrshl_n_u64_m
__builtin_sve_svrshl_n_u64_x
__builtin_sve_svrshl_n_u64_z
__builtin_sve_svrshl_n_u8_m
__builtin_sve_svrshl_n_u8_x
__builtin_sve_svrshl_n_u8_z
__builtin_sve_svrshl_s16_m
__builtin_sve_svrshl_s16_x
__builtin_sve_svrshl_s16_z
__builtin_sve_svrshl_s32_m
__builtin_sve_svrshl_s32_x
__builtin_sve_svrshl_s32_z
__builtin_sve_svrshl_s64_m
__builtin_sve_svrshl_s64_x
__builtin_sve_svrshl_s64_z
__builtin_sve_svrshl_s8_m
__builtin_sve_svrshl_s8_x
__builtin_sve_svrshl_s8_z
__builtin_sve_svrshl_u16_m
__builtin_sve_svrshl_u16_x
__builtin_sve_svrshl_u16_z
__builtin_sve_svrshl_u32_m
__builtin_sve_svrshl_u32_x
__builtin_sve_svrshl_u32_z
__builtin_sve_svrshl_u64_m
__builtin_sve_svrshl_u64_x
__builtin_sve_svrshl_u64_z
__builtin_sve_svrshl_u8_m
__builtin_sve_svrshl_u8_x
__builtin_sve_svrshl_u8_z
__builtin_sve_svrshr_n_s16_m
__builtin_sve_svrshr_n_s16_x
__builtin_sve_svrshr_n_s16_z
__builtin_sve_svrshr_n_s32_m
__builtin_sve_svrshr_n_s32_x
__builtin_sve_svrshr_n_s32_z
__builtin_sve_svrshr_n_s64_m
__builtin_sve_svrshr_n_s64_x
__builtin_sve_svrshr_n_s64_z
__builtin_sve_svrshr_n_s8_m
__builtin_sve_svrshr_n_s8_x
__builtin_sve_svrshr_n_s8_z
__builtin_sve_svrshr_n_u16_m
q8Usq16bq8UsIUWi
__builtin_sve_svrshr_n_u16_x
__builtin_sve_svrshr_n_u16_z
__builtin_sve_svrshr_n_u32_m
q4Uiq16bq4UiIUWi
__builtin_sve_svrshr_n_u32_x
__builtin_sve_svrshr_n_u32_z
__builtin_sve_svrshr_n_u64_m
q2UWiq16bq2UWiIUWi
__builtin_sve_svrshr_n_u64_x
__builtin_sve_svrshr_n_u64_z
__builtin_sve_svrshr_n_u8_m
q16Ucq16bq16UcIUWi
__builtin_sve_svrshr_n_u8_x
__builtin_sve_svrshr_n_u8_z
__builtin_sve_svrshrnb_n_s16
__builtin_sve_svrshrnb_n_s32
__builtin_sve_svrshrnb_n_s64
__builtin_sve_svrshrnb_n_u16
__builtin_sve_svrshrnb_n_u32
__builtin_sve_svrshrnb_n_u64
__builtin_sve_svrshrnt_n_s16
__builtin_sve_svrshrnt_n_s32
__builtin_sve_svrshrnt_n_s64
__builtin_sve_svrshrnt_n_u16
__builtin_sve_svrshrnt_n_u32
__builtin_sve_svrshrnt_n_u64
__builtin_sve_svrsqrte_f16
__builtin_sve_svrsqrte_f32
__builtin_sve_svrsqrte_f64
__builtin_sve_svrsqrte_u32_m
__builtin_sve_svrsqrte_u32_x
__builtin_sve_svrsqrte_u32_z
__builtin_sve_svrsqrts_f16
__builtin_sve_svrsqrts_f32
__builtin_sve_svrsqrts_f64
__builtin_sve_svrsra_n_s16
__builtin_sve_svrsra_n_s32
__builtin_sve_svrsra_n_s64
__builtin_sve_svrsra_n_s8
__builtin_sve_svrsra_n_u16
__builtin_sve_svrsra_n_u32
__builtin_sve_svrsra_n_u64
__builtin_sve_svrsra_n_u8
__builtin_sve_svrsubhnb_n_s16
__builtin_sve_svrsubhnb_n_s32
__builtin_sve_svrsubhnb_n_s64
__builtin_sve_svrsubhnb_n_u16
__builtin_sve_svrsubhnb_n_u32
__builtin_sve_svrsubhnb_n_u64
__builtin_sve_svrsubhnb_s16
__builtin_sve_svrsubhnb_s32
__builtin_sve_svrsubhnb_s64
__builtin_sve_svrsubhnb_u16
__builtin_sve_svrsubhnb_u32
__builtin_sve_svrsubhnb_u64
__builtin_sve_svrsubhnt_n_s16
__builtin_sve_svrsubhnt_n_s32
__builtin_sve_svrsubhnt_n_s64
__builtin_sve_svrsubhnt_n_u16
__builtin_sve_svrsubhnt_n_u32
__builtin_sve_svrsubhnt_n_u64
__builtin_sve_svrsubhnt_s16
__builtin_sve_svrsubhnt_s32
__builtin_sve_svrsubhnt_s64
__builtin_sve_svrsubhnt_u16
__builtin_sve_svrsubhnt_u32
__builtin_sve_svrsubhnt_u64
__builtin_sve_svsbclb_n_u32
__builtin_sve_svsbclb_n_u64
__builtin_sve_svsbclb_u32
__builtin_sve_svsbclb_u64
__builtin_sve_svsbclt_n_u32
__builtin_sve_svsbclt_n_u64
__builtin_sve_svsbclt_u32
__builtin_sve_svsbclt_u64
__builtin_sve_svscale_f16_m
q8hq16bq8hq8s
__builtin_sve_svscale_f16_x
__builtin_sve_svscale_f16_z
__builtin_sve_svscale_f32_m
q4fq16bq4fq4i
__builtin_sve_svscale_f32_x
__builtin_sve_svscale_f32_z
__builtin_sve_svscale_f64_m
q2dq16bq2dq2Wi
__builtin_sve_svscale_f64_x
__builtin_sve_svscale_f64_z
__builtin_sve_svscale_n_f16_m
q8hq16bq8hs
__builtin_sve_svscale_n_f16_x
__builtin_sve_svscale_n_f16_z
__builtin_sve_svscale_n_f32_m
q4fq16bq4fi
__builtin_sve_svscale_n_f32_x
__builtin_sve_svscale_n_f32_z
__builtin_sve_svscale_n_f64_m
q2dq16bq2dWi
__builtin_sve_svscale_n_f64_x
__builtin_sve_svscale_n_f64_z
__builtin_sve_svsel_b
__builtin_sve_svsel_bf16
__builtin_sve_svsel_f16
__builtin_sve_svsel_f32
__builtin_sve_svsel_f64
__builtin_sve_svsel_s16
__builtin_sve_svsel_s32
__builtin_sve_svsel_s64
__builtin_sve_svsel_s8
__builtin_sve_svsel_u16
__builtin_sve_svsel_u32
__builtin_sve_svsel_u64
__builtin_sve_svsel_u8
__builtin_sve_svset2_bf16
q16yq16yIUWiq8y
__builtin_sve_svset2_f16
q16hq16hIUWiq8h
__builtin_sve_svset2_f32
q8fq8fIUWiq4f
__builtin_sve_svset2_f64
q4dq4dIUWiq2d
__builtin_sve_svset2_s16
q16sq16sIUWiq8s
__builtin_sve_svset2_s32
q8iq8iIUWiq4i
__builtin_sve_svset2_s64
q4Wiq4WiIUWiq2Wi
__builtin_sve_svset2_s8
q32Scq32ScIUWiq16Sc
__builtin_sve_svset2_u16
q16Usq16UsIUWiq8Us
__builtin_sve_svset2_u32
q8Uiq8UiIUWiq4Ui
__builtin_sve_svset2_u64
q4UWiq4UWiIUWiq2UWi
__builtin_sve_svset2_u8
q32Ucq32UcIUWiq16Uc
__builtin_sve_svset3_bf16
q24yq24yIUWiq8y
__builtin_sve_svset3_f16
q24hq24hIUWiq8h
__builtin_sve_svset3_f32
q12fq12fIUWiq4f
__builtin_sve_svset3_f64
q6dq6dIUWiq2d
__builtin_sve_svset3_s16
q24sq24sIUWiq8s
__builtin_sve_svset3_s32
q12iq12iIUWiq4i
__builtin_sve_svset3_s64
q6Wiq6WiIUWiq2Wi
__builtin_sve_svset3_s8
q48Scq48ScIUWiq16Sc
__builtin_sve_svset3_u16
q24Usq24UsIUWiq8Us
__builtin_sve_svset3_u32
q12Uiq12UiIUWiq4Ui
__builtin_sve_svset3_u64
q6UWiq6UWiIUWiq2UWi
__builtin_sve_svset3_u8
q48Ucq48UcIUWiq16Uc
__builtin_sve_svset4_bf16
q32yq32yIUWiq8y
__builtin_sve_svset4_f16
q32hq32hIUWiq8h
__builtin_sve_svset4_f32
q16fq16fIUWiq4f
__builtin_sve_svset4_f64
q8dq8dIUWiq2d
__builtin_sve_svset4_s16
q32sq32sIUWiq8s
__builtin_sve_svset4_s32
q16iq16iIUWiq4i
__builtin_sve_svset4_s64
q8Wiq8WiIUWiq2Wi
__builtin_sve_svset4_s8
q64Scq64ScIUWiq16Sc
__builtin_sve_svset4_u16
q32Usq32UsIUWiq8Us
__builtin_sve_svset4_u32
q16Uiq16UiIUWiq4Ui
__builtin_sve_svset4_u64
q8UWiq8UWiIUWiq2UWi
__builtin_sve_svset4_u8
q64Ucq64UcIUWiq16Uc
__builtin_sve_svsetffr
__builtin_sve_svshllb_n_s16
q8sq16ScIUWi
__builtin_sve_svshllb_n_s32
q4iq8sIUWi
__builtin_sve_svshllb_n_s64
q2Wiq4iIUWi
__builtin_sve_svshllb_n_u16
q8Usq16UcIUWi
__builtin_sve_svshllb_n_u32
q4Uiq8UsIUWi
__builtin_sve_svshllb_n_u64
q2UWiq4UiIUWi
__builtin_sve_svshllt_n_s16
__builtin_sve_svshllt_n_s32
__builtin_sve_svshllt_n_s64
__builtin_sve_svshllt_n_u16
__builtin_sve_svshllt_n_u32
__builtin_sve_svshllt_n_u64
__builtin_sve_svshrnb_n_s16
__builtin_sve_svshrnb_n_s32
__builtin_sve_svshrnb_n_s64
__builtin_sve_svshrnb_n_u16
__builtin_sve_svshrnb_n_u32
__builtin_sve_svshrnb_n_u64
__builtin_sve_svshrnt_n_s16
__builtin_sve_svshrnt_n_s32
__builtin_sve_svshrnt_n_s64
__builtin_sve_svshrnt_n_u16
__builtin_sve_svshrnt_n_u32
__builtin_sve_svshrnt_n_u64
__builtin_sve_svsli_n_s16
__builtin_sve_svsli_n_s32
__builtin_sve_svsli_n_s64
__builtin_sve_svsli_n_s8
__builtin_sve_svsli_n_u16
__builtin_sve_svsli_n_u32
__builtin_sve_svsli_n_u64
__builtin_sve_svsli_n_u8
__builtin_sve_svsm4e_u32
__builtin_sve_svsm4ekey_u32
__builtin_sve_svsplice_bf16
__builtin_sve_svsplice_f16
__builtin_sve_svsplice_f32
__builtin_sve_svsplice_f64
__builtin_sve_svsplice_s16
__builtin_sve_svsplice_s32
__builtin_sve_svsplice_s64
__builtin_sve_svsplice_s8
__builtin_sve_svsplice_u16
__builtin_sve_svsplice_u32
__builtin_sve_svsplice_u64
__builtin_sve_svsplice_u8
__builtin_sve_svsqadd_n_u16_m
__builtin_sve_svsqadd_n_u16_x
__builtin_sve_svsqadd_n_u16_z
__builtin_sve_svsqadd_n_u32_m
__builtin_sve_svsqadd_n_u32_x
__builtin_sve_svsqadd_n_u32_z
__builtin_sve_svsqadd_n_u64_m
__builtin_sve_svsqadd_n_u64_x
__builtin_sve_svsqadd_n_u64_z
__builtin_sve_svsqadd_n_u8_m
__builtin_sve_svsqadd_n_u8_x
__builtin_sve_svsqadd_n_u8_z
__builtin_sve_svsqadd_u16_m
__builtin_sve_svsqadd_u16_x
__builtin_sve_svsqadd_u16_z
__builtin_sve_svsqadd_u32_m
__builtin_sve_svsqadd_u32_x
__builtin_sve_svsqadd_u32_z
__builtin_sve_svsqadd_u64_m
__builtin_sve_svsqadd_u64_x
__builtin_sve_svsqadd_u64_z
__builtin_sve_svsqadd_u8_m
__builtin_sve_svsqadd_u8_x
__builtin_sve_svsqadd_u8_z
__builtin_sve_svsqrt_f16_m
__builtin_sve_svsqrt_f16_x
__builtin_sve_svsqrt_f16_z
__builtin_sve_svsqrt_f32_m
__builtin_sve_svsqrt_f32_x
__builtin_sve_svsqrt_f32_z
__builtin_sve_svsqrt_f64_m
__builtin_sve_svsqrt_f64_x
__builtin_sve_svsqrt_f64_z
__builtin_sve_svsra_n_s16
__builtin_sve_svsra_n_s32
__builtin_sve_svsra_n_s64
__builtin_sve_svsra_n_s8
__builtin_sve_svsra_n_u16
__builtin_sve_svsra_n_u32
__builtin_sve_svsra_n_u64
__builtin_sve_svsra_n_u8
__builtin_sve_svsri_n_s16
__builtin_sve_svsri_n_s32
__builtin_sve_svsri_n_s64
__builtin_sve_svsri_n_s8
__builtin_sve_svsri_n_u16
__builtin_sve_svsri_n_u32
__builtin_sve_svsri_n_u64
__builtin_sve_svsri_n_u8
__builtin_sve_svst1_bf16
vq16by*q8y
__builtin_sve_svst1_f16
vq16bh*q8h
__builtin_sve_svst1_f32
vq16bf*q4f
__builtin_sve_svst1_f64
vq16bd*q2d
__builtin_sve_svst1_s16
vq16bSs*q8s
__builtin_sve_svst1_s32
vq16bSi*q4i
__builtin_sve_svst1_s64
vq16bSWi*q2Wi
__builtin_sve_svst1_s8
vq16bSc*q16Sc
__builtin_sve_svst1_scatter_s32index_f32
vq16bf*q4iq4f
__builtin_sve_svst1_scatter_s32index_s32
vq16bSi*q4iq4i
__builtin_sve_svst1_scatter_s32index_u32
vq16bUi*q4iq4Ui
__builtin_sve_svst1_scatter_s32offset_f32
__builtin_sve_svst1_scatter_s32offset_s32
__builtin_sve_svst1_scatter_s32offset_u32
__builtin_sve_svst1_scatter_s64index_f64
vq16bd*q2Wiq2d
__builtin_sve_svst1_scatter_s64index_s64
vq16bSWi*q2Wiq2Wi
__builtin_sve_svst1_scatter_s64index_u64
vq16bUWi*q2Wiq2UWi
__builtin_sve_svst1_scatter_s64offset_f64
__builtin_sve_svst1_scatter_s64offset_s64
__builtin_sve_svst1_scatter_s64offset_u64
__builtin_sve_svst1_scatter_u32base_f32
vq16bq4Uiq4f
__builtin_sve_svst1_scatter_u32base_index_f32
vq16bq4UiWiq4f
__builtin_sve_svst1_scatter_u32base_index_s32
vq16bq4UiWiq4i
__builtin_sve_svst1_scatter_u32base_index_u32
vq16bq4UiWiq4Ui
__builtin_sve_svst1_scatter_u32base_offset_f32
__builtin_sve_svst1_scatter_u32base_offset_s32
__builtin_sve_svst1_scatter_u32base_offset_u32
__builtin_sve_svst1_scatter_u32base_s32
vq16bq4Uiq4i
__builtin_sve_svst1_scatter_u32base_u32
vq16bq4Uiq4Ui
__builtin_sve_svst1_scatter_u32index_f32
vq16bf*q4Uiq4f
__builtin_sve_svst1_scatter_u32index_s32
vq16bSi*q4Uiq4i
__builtin_sve_svst1_scatter_u32index_u32
vq16bUi*q4Uiq4Ui
__builtin_sve_svst1_scatter_u32offset_f32
__builtin_sve_svst1_scatter_u32offset_s32
__builtin_sve_svst1_scatter_u32offset_u32
__builtin_sve_svst1_scatter_u64base_f64
vq16bq2UWiq2d
__builtin_sve_svst1_scatter_u64base_index_f64
vq16bq2UWiWiq2d
__builtin_sve_svst1_scatter_u64base_index_s64
vq16bq2UWiWiq2Wi
__builtin_sve_svst1_scatter_u64base_index_u64
vq16bq2UWiWiq2UWi
__builtin_sve_svst1_scatter_u64base_offset_f64
__builtin_sve_svst1_scatter_u64base_offset_s64
__builtin_sve_svst1_scatter_u64base_offset_u64
__builtin_sve_svst1_scatter_u64base_s64
vq16bq2UWiq2Wi
__builtin_sve_svst1_scatter_u64base_u64
vq16bq2UWiq2UWi
__builtin_sve_svst1_scatter_u64index_f64
vq16bd*q2UWiq2d
__builtin_sve_svst1_scatter_u64index_s64
vq16bSWi*q2UWiq2Wi
__builtin_sve_svst1_scatter_u64index_u64
vq16bUWi*q2UWiq2UWi
__builtin_sve_svst1_scatter_u64offset_f64
__builtin_sve_svst1_scatter_u64offset_s64
__builtin_sve_svst1_scatter_u64offset_u64
__builtin_sve_svst1_u16
vq16bUs*q8Us
__builtin_sve_svst1_u32
vq16bUi*q4Ui
__builtin_sve_svst1_u64
vq16bUWi*q2UWi
__builtin_sve_svst1_u8
vq16bUc*q16Uc
__builtin_sve_svst1_vnum_bf16
vq16by*Wiq8y
__builtin_sve_svst1_vnum_f16
vq16bh*Wiq8h
__builtin_sve_svst1_vnum_f32
vq16bf*Wiq4f
__builtin_sve_svst1_vnum_f64
vq16bd*Wiq2d
__builtin_sve_svst1_vnum_s16
vq16bSs*Wiq8s
__builtin_sve_svst1_vnum_s32
vq16bSi*Wiq4i
__builtin_sve_svst1_vnum_s64
vq16bSWi*Wiq2Wi
__builtin_sve_svst1_vnum_s8
vq16bSc*Wiq16Sc
__builtin_sve_svst1_vnum_u16
vq16bUs*Wiq8Us
__builtin_sve_svst1_vnum_u32
vq16bUi*Wiq4Ui
__builtin_sve_svst1_vnum_u64
vq16bUWi*Wiq2UWi
__builtin_sve_svst1_vnum_u8
vq16bUc*Wiq16Uc
__builtin_sve_svst1b_s16
vq16bSc*q8s
__builtin_sve_svst1b_s32
vq16bSc*q4i
__builtin_sve_svst1b_s64
vq16bSc*q2Wi
__builtin_sve_svst1b_scatter_s32offset_s32
vq16bSc*q4iq4i
__builtin_sve_svst1b_scatter_s32offset_u32
vq16bUc*q4iq4Ui
__builtin_sve_svst1b_scatter_s64offset_s64
vq16bSc*q2Wiq2Wi
__builtin_sve_svst1b_scatter_s64offset_u64
vq16bUc*q2Wiq2UWi
__builtin_sve_svst1b_scatter_u32base_offset_s32
__builtin_sve_svst1b_scatter_u32base_offset_u32
__builtin_sve_svst1b_scatter_u32base_s32
__builtin_sve_svst1b_scatter_u32base_u32
__builtin_sve_svst1b_scatter_u32offset_s32
vq16bSc*q4Uiq4i
__builtin_sve_svst1b_scatter_u32offset_u32
vq16bUc*q4Uiq4Ui
__builtin_sve_svst1b_scatter_u64base_offset_s64
__builtin_sve_svst1b_scatter_u64base_offset_u64
__builtin_sve_svst1b_scatter_u64base_s64
__builtin_sve_svst1b_scatter_u64base_u64
__builtin_sve_svst1b_scatter_u64offset_s64
vq16bSc*q2UWiq2Wi
__builtin_sve_svst1b_scatter_u64offset_u64
vq16bUc*q2UWiq2UWi
__builtin_sve_svst1b_u16
vq16bUc*q8Us
__builtin_sve_svst1b_u32
vq16bUc*q4Ui
__builtin_sve_svst1b_u64
vq16bUc*q2UWi
__builtin_sve_svst1b_vnum_s16
vq16bSc*Wiq8s
__builtin_sve_svst1b_vnum_s32
vq16bSc*Wiq4i
__builtin_sve_svst1b_vnum_s64
vq16bSc*Wiq2Wi
__builtin_sve_svst1b_vnum_u16
vq16bUc*Wiq8Us
__builtin_sve_svst1b_vnum_u32
vq16bUc*Wiq4Ui
__builtin_sve_svst1b_vnum_u64
vq16bUc*Wiq2UWi
__builtin_sve_svst1h_s32
vq16bSs*q4i
__builtin_sve_svst1h_s64
vq16bSs*q2Wi
__builtin_sve_svst1h_scatter_s32index_s32
vq16bSs*q4iq4i
__builtin_sve_svst1h_scatter_s32index_u32
vq16bUs*q4iq4Ui
__builtin_sve_svst1h_scatter_s32offset_s32
__builtin_sve_svst1h_scatter_s32offset_u32
__builtin_sve_svst1h_scatter_s64index_s64
vq16bSs*q2Wiq2Wi
__builtin_sve_svst1h_scatter_s64index_u64
vq16bUs*q2Wiq2UWi
__builtin_sve_svst1h_scatter_s64offset_s64
__builtin_sve_svst1h_scatter_s64offset_u64
__builtin_sve_svst1h_scatter_u32base_index_s32
__builtin_sve_svst1h_scatter_u32base_index_u32
__builtin_sve_svst1h_scatter_u32base_offset_s32
__builtin_sve_svst1h_scatter_u32base_offset_u32
__builtin_sve_svst1h_scatter_u32base_s32
__builtin_sve_svst1h_scatter_u32base_u32
__builtin_sve_svst1h_scatter_u32index_s32
vq16bSs*q4Uiq4i
__builtin_sve_svst1h_scatter_u32index_u32
vq16bUs*q4Uiq4Ui
__builtin_sve_svst1h_scatter_u32offset_s32
__builtin_sve_svst1h_scatter_u32offset_u32
__builtin_sve_svst1h_scatter_u64base_index_s64
__builtin_sve_svst1h_scatter_u64base_index_u64
__builtin_sve_svst1h_scatter_u64base_offset_s64
__builtin_sve_svst1h_scatter_u64base_offset_u64
__builtin_sve_svst1h_scatter_u64base_s64
__builtin_sve_svst1h_scatter_u64base_u64
__builtin_sve_svst1h_scatter_u64index_s64
vq16bSs*q2UWiq2Wi
__builtin_sve_svst1h_scatter_u64index_u64
vq16bUs*q2UWiq2UWi
__builtin_sve_svst1h_scatter_u64offset_s64
__builtin_sve_svst1h_scatter_u64offset_u64
__builtin_sve_svst1h_u32
vq16bUs*q4Ui
__builtin_sve_svst1h_u64
vq16bUs*q2UWi
__builtin_sve_svst1h_vnum_s32
vq16bSs*Wiq4i
__builtin_sve_svst1h_vnum_s64
vq16bSs*Wiq2Wi
__builtin_sve_svst1h_vnum_u32
vq16bUs*Wiq4Ui
__builtin_sve_svst1h_vnum_u64
vq16bUs*Wiq2UWi
__builtin_sve_svst1w_s64
vq16bSi*q2Wi
__builtin_sve_svst1w_scatter_s64index_s64
vq16bSi*q2Wiq2Wi
__builtin_sve_svst1w_scatter_s64index_u64
vq16bUi*q2Wiq2UWi
__builtin_sve_svst1w_scatter_s64offset_s64
__builtin_sve_svst1w_scatter_s64offset_u64
__builtin_sve_svst1w_scatter_u64base_index_s64
__builtin_sve_svst1w_scatter_u64base_index_u64
__builtin_sve_svst1w_scatter_u64base_offset_s64
__builtin_sve_svst1w_scatter_u64base_offset_u64
__builtin_sve_svst1w_scatter_u64base_s64
__builtin_sve_svst1w_scatter_u64base_u64
__builtin_sve_svst1w_scatter_u64index_s64
vq16bSi*q2UWiq2Wi
__builtin_sve_svst1w_scatter_u64index_u64
vq16bUi*q2UWiq2UWi
__builtin_sve_svst1w_scatter_u64offset_s64
__builtin_sve_svst1w_scatter_u64offset_u64
__builtin_sve_svst1w_u64
vq16bUi*q2UWi
__builtin_sve_svst1w_vnum_s64
vq16bSi*Wiq2Wi
__builtin_sve_svst1w_vnum_u64
vq16bUi*Wiq2UWi
__builtin_sve_svst2_bf16
vq16by*q16y
__builtin_sve_svst2_f16
vq16bh*q16h
__builtin_sve_svst2_f32
vq16bf*q8f
__builtin_sve_svst2_f64
vq16bd*q4d
__builtin_sve_svst2_s16
vq16bSs*q16s
__builtin_sve_svst2_s32
vq16bSi*q8i
__builtin_sve_svst2_s64
vq16bSWi*q4Wi
__builtin_sve_svst2_s8
vq16bSc*q32Sc
__builtin_sve_svst2_u16
vq16bUs*q16Us
__builtin_sve_svst2_u32
vq16bUi*q8Ui
__builtin_sve_svst2_u64
vq16bUWi*q4UWi
__builtin_sve_svst2_u8
vq16bUc*q32Uc
__builtin_sve_svst2_vnum_bf16
vq16by*Wiq16y
__builtin_sve_svst2_vnum_f16
vq16bh*Wiq16h
__builtin_sve_svst2_vnum_f32
vq16bf*Wiq8f
__builtin_sve_svst2_vnum_f64
vq16bd*Wiq4d
__builtin_sve_svst2_vnum_s16
vq16bSs*Wiq16s
__builtin_sve_svst2_vnum_s32
vq16bSi*Wiq8i
__builtin_sve_svst2_vnum_s64
vq16bSWi*Wiq4Wi
__builtin_sve_svst2_vnum_s8
vq16bSc*Wiq32Sc
__builtin_sve_svst2_vnum_u16
vq16bUs*Wiq16Us
__builtin_sve_svst2_vnum_u32
vq16bUi*Wiq8Ui
__builtin_sve_svst2_vnum_u64
vq16bUWi*Wiq4UWi
__builtin_sve_svst2_vnum_u8
vq16bUc*Wiq32Uc
__builtin_sve_svst3_bf16
vq16by*q24y
__builtin_sve_svst3_f16
vq16bh*q24h
__builtin_sve_svst3_f32
vq16bf*q12f
__builtin_sve_svst3_f64
vq16bd*q6d
__builtin_sve_svst3_s16
vq16bSs*q24s
__builtin_sve_svst3_s32
vq16bSi*q12i
__builtin_sve_svst3_s64
vq16bSWi*q6Wi
__builtin_sve_svst3_s8
vq16bSc*q48Sc
__builtin_sve_svst3_u16
vq16bUs*q24Us
__builtin_sve_svst3_u32
vq16bUi*q12Ui
__builtin_sve_svst3_u64
vq16bUWi*q6UWi
__builtin_sve_svst3_u8
vq16bUc*q48Uc
__builtin_sve_svst3_vnum_bf16
vq16by*Wiq24y
__builtin_sve_svst3_vnum_f16
vq16bh*Wiq24h
__builtin_sve_svst3_vnum_f32
vq16bf*Wiq12f
__builtin_sve_svst3_vnum_f64
vq16bd*Wiq6d
__builtin_sve_svst3_vnum_s16
vq16bSs*Wiq24s
__builtin_sve_svst3_vnum_s32
vq16bSi*Wiq12i
__builtin_sve_svst3_vnum_s64
vq16bSWi*Wiq6Wi
__builtin_sve_svst3_vnum_s8
vq16bSc*Wiq48Sc
__builtin_sve_svst3_vnum_u16
vq16bUs*Wiq24Us
__builtin_sve_svst3_vnum_u32
vq16bUi*Wiq12Ui
__builtin_sve_svst3_vnum_u64
vq16bUWi*Wiq6UWi
__builtin_sve_svst3_vnum_u8
vq16bUc*Wiq48Uc
__builtin_sve_svst4_bf16
vq16by*q32y
__builtin_sve_svst4_f16
vq16bh*q32h
__builtin_sve_svst4_f32
vq16bf*q16f
__builtin_sve_svst4_f64
vq16bd*q8d
__builtin_sve_svst4_s16
vq16bSs*q32s
__builtin_sve_svst4_s32
vq16bSi*q16i
__builtin_sve_svst4_s64
vq16bSWi*q8Wi
__builtin_sve_svst4_s8
vq16bSc*q64Sc
__builtin_sve_svst4_u16
vq16bUs*q32Us
__builtin_sve_svst4_u32
vq16bUi*q16Ui
__builtin_sve_svst4_u64
vq16bUWi*q8UWi
__builtin_sve_svst4_u8
vq16bUc*q64Uc
__builtin_sve_svst4_vnum_bf16
vq16by*Wiq32y
__builtin_sve_svst4_vnum_f16
vq16bh*Wiq32h
__builtin_sve_svst4_vnum_f32
vq16bf*Wiq16f
__builtin_sve_svst4_vnum_f64
vq16bd*Wiq8d
__builtin_sve_svst4_vnum_s16
vq16bSs*Wiq32s
__builtin_sve_svst4_vnum_s32
vq16bSi*Wiq16i
__builtin_sve_svst4_vnum_s64
vq16bSWi*Wiq8Wi
__builtin_sve_svst4_vnum_s8
vq16bSc*Wiq64Sc
__builtin_sve_svst4_vnum_u16
vq16bUs*Wiq32Us
__builtin_sve_svst4_vnum_u32
vq16bUi*Wiq16Ui
__builtin_sve_svst4_vnum_u64
vq16bUWi*Wiq8UWi
__builtin_sve_svst4_vnum_u8
vq16bUc*Wiq64Uc
__builtin_sve_svstnt1_bf16
__builtin_sve_svstnt1_f16
__builtin_sve_svstnt1_f32
__builtin_sve_svstnt1_f64
__builtin_sve_svstnt1_s16
__builtin_sve_svstnt1_s32
__builtin_sve_svstnt1_s64
__builtin_sve_svstnt1_s8
__builtin_sve_svstnt1_scatter_s64index_f64
__builtin_sve_svstnt1_scatter_s64index_s64
__builtin_sve_svstnt1_scatter_s64index_u64
__builtin_sve_svstnt1_scatter_s64offset_f64
__builtin_sve_svstnt1_scatter_s64offset_s64
__builtin_sve_svstnt1_scatter_s64offset_u64
__builtin_sve_svstnt1_scatter_u32base_f32
__builtin_sve_svstnt1_scatter_u32base_index_f32
__builtin_sve_svstnt1_scatter_u32base_index_s32
__builtin_sve_svstnt1_scatter_u32base_index_u32
__builtin_sve_svstnt1_scatter_u32base_offset_f32
__builtin_sve_svstnt1_scatter_u32base_offset_s32
__builtin_sve_svstnt1_scatter_u32base_offset_u32
__builtin_sve_svstnt1_scatter_u32base_s32
__builtin_sve_svstnt1_scatter_u32base_u32
__builtin_sve_svstnt1_scatter_u32offset_f32
__builtin_sve_svstnt1_scatter_u32offset_s32
__builtin_sve_svstnt1_scatter_u32offset_u32
__builtin_sve_svstnt1_scatter_u64base_f64
__builtin_sve_svstnt1_scatter_u64base_index_f64
__builtin_sve_svstnt1_scatter_u64base_index_s64
__builtin_sve_svstnt1_scatter_u64base_index_u64
__builtin_sve_svstnt1_scatter_u64base_offset_f64
__builtin_sve_svstnt1_scatter_u64base_offset_s64
__builtin_sve_svstnt1_scatter_u64base_offset_u64
__builtin_sve_svstnt1_scatter_u64base_s64
__builtin_sve_svstnt1_scatter_u64base_u64
__builtin_sve_svstnt1_scatter_u64index_f64
__builtin_sve_svstnt1_scatter_u64index_s64
__builtin_sve_svstnt1_scatter_u64index_u64
__builtin_sve_svstnt1_scatter_u64offset_f64
__builtin_sve_svstnt1_scatter_u64offset_s64
__builtin_sve_svstnt1_scatter_u64offset_u64
__builtin_sve_svstnt1_u16
__builtin_sve_svstnt1_u32
__builtin_sve_svstnt1_u64
__builtin_sve_svstnt1_u8
__builtin_sve_svstnt1_vnum_bf16
__builtin_sve_svstnt1_vnum_f16
__builtin_sve_svstnt1_vnum_f32
__builtin_sve_svstnt1_vnum_f64
__builtin_sve_svstnt1_vnum_s16
__builtin_sve_svstnt1_vnum_s32
__builtin_sve_svstnt1_vnum_s64
__builtin_sve_svstnt1_vnum_s8
__builtin_sve_svstnt1_vnum_u16
__builtin_sve_svstnt1_vnum_u32
__builtin_sve_svstnt1_vnum_u64
__builtin_sve_svstnt1_vnum_u8
__builtin_sve_svstnt1b_scatter_s64offset_s64
__builtin_sve_svstnt1b_scatter_s64offset_u64
__builtin_sve_svstnt1b_scatter_u32base_offset_s32
__builtin_sve_svstnt1b_scatter_u32base_offset_u32
__builtin_sve_svstnt1b_scatter_u32base_s32
__builtin_sve_svstnt1b_scatter_u32base_u32
__builtin_sve_svstnt1b_scatter_u32offset_s32
__builtin_sve_svstnt1b_scatter_u32offset_u32
__builtin_sve_svstnt1b_scatter_u64base_offset_s64
__builtin_sve_svstnt1b_scatter_u64base_offset_u64
__builtin_sve_svstnt1b_scatter_u64base_s64
__builtin_sve_svstnt1b_scatter_u64base_u64
__builtin_sve_svstnt1b_scatter_u64offset_s64
__builtin_sve_svstnt1b_scatter_u64offset_u64
__builtin_sve_svstnt1h_scatter_s64index_s64
__builtin_sve_svstnt1h_scatter_s64index_u64
__builtin_sve_svstnt1h_scatter_s64offset_s64
__builtin_sve_svstnt1h_scatter_s64offset_u64
__builtin_sve_svstnt1h_scatter_u32base_index_s32
__builtin_sve_svstnt1h_scatter_u32base_index_u32
__builtin_sve_svstnt1h_scatter_u32base_offset_s32
__builtin_sve_svstnt1h_scatter_u32base_offset_u32
__builtin_sve_svstnt1h_scatter_u32base_s32
__builtin_sve_svstnt1h_scatter_u32base_u32
__builtin_sve_svstnt1h_scatter_u32offset_s32
__builtin_sve_svstnt1h_scatter_u32offset_u32
__builtin_sve_svstnt1h_scatter_u64base_index_s64
__builtin_sve_svstnt1h_scatter_u64base_index_u64
__builtin_sve_svstnt1h_scatter_u64base_offset_s64
__builtin_sve_svstnt1h_scatter_u64base_offset_u64
__builtin_sve_svstnt1h_scatter_u64base_s64
__builtin_sve_svstnt1h_scatter_u64base_u64
__builtin_sve_svstnt1h_scatter_u64index_s64
__builtin_sve_svstnt1h_scatter_u64index_u64
__builtin_sve_svstnt1h_scatter_u64offset_s64
__builtin_sve_svstnt1h_scatter_u64offset_u64
__builtin_sve_svstnt1w_scatter_s64index_s64
__builtin_sve_svstnt1w_scatter_s64index_u64
__builtin_sve_svstnt1w_scatter_s64offset_s64
__builtin_sve_svstnt1w_scatter_s64offset_u64
__builtin_sve_svstnt1w_scatter_u64base_index_s64
__builtin_sve_svstnt1w_scatter_u64base_index_u64
__builtin_sve_svstnt1w_scatter_u64base_offset_s64
__builtin_sve_svstnt1w_scatter_u64base_offset_u64
__builtin_sve_svstnt1w_scatter_u64base_s64
__builtin_sve_svstnt1w_scatter_u64base_u64
__builtin_sve_svstnt1w_scatter_u64index_s64
__builtin_sve_svstnt1w_scatter_u64index_u64
__builtin_sve_svstnt1w_scatter_u64offset_s64
__builtin_sve_svstnt1w_scatter_u64offset_u64
__builtin_sve_svsub_f16_m
__builtin_sve_svsub_f16_x
__builtin_sve_svsub_f16_z
__builtin_sve_svsub_f32_m
__builtin_sve_svsub_f32_x
__builtin_sve_svsub_f32_z
__builtin_sve_svsub_f64_m
__builtin_sve_svsub_f64_x
__builtin_sve_svsub_f64_z
__builtin_sve_svsub_n_f16_m
__builtin_sve_svsub_n_f16_x
__builtin_sve_svsub_n_f16_z
__builtin_sve_svsub_n_f32_m
__builtin_sve_svsub_n_f32_x
__builtin_sve_svsub_n_f32_z
__builtin_sve_svsub_n_f64_m
__builtin_sve_svsub_n_f64_x
__builtin_sve_svsub_n_f64_z
__builtin_sve_svsub_n_s16_m
__builtin_sve_svsub_n_s16_x
__builtin_sve_svsub_n_s16_z
__builtin_sve_svsub_n_s32_m
__builtin_sve_svsub_n_s32_x
__builtin_sve_svsub_n_s32_z
__builtin_sve_svsub_n_s64_m
__builtin_sve_svsub_n_s64_x
__builtin_sve_svsub_n_s64_z
__builtin_sve_svsub_n_s8_m
__builtin_sve_svsub_n_s8_x
__builtin_sve_svsub_n_s8_z
__builtin_sve_svsub_n_u16_m
__builtin_sve_svsub_n_u16_x
__builtin_sve_svsub_n_u16_z
__builtin_sve_svsub_n_u32_m
__builtin_sve_svsub_n_u32_x
__builtin_sve_svsub_n_u32_z
__builtin_sve_svsub_n_u64_m
__builtin_sve_svsub_n_u64_x
__builtin_sve_svsub_n_u64_z
__builtin_sve_svsub_n_u8_m
__builtin_sve_svsub_n_u8_x
__builtin_sve_svsub_n_u8_z
__builtin_sve_svsub_s16_m
__builtin_sve_svsub_s16_x
__builtin_sve_svsub_s16_z
__builtin_sve_svsub_s32_m
__builtin_sve_svsub_s32_x
__builtin_sve_svsub_s32_z
__builtin_sve_svsub_s64_m
__builtin_sve_svsub_s64_x
__builtin_sve_svsub_s64_z
__builtin_sve_svsub_s8_m
__builtin_sve_svsub_s8_x
__builtin_sve_svsub_s8_z
__builtin_sve_svsub_u16_m
__builtin_sve_svsub_u16_x
__builtin_sve_svsub_u16_z
__builtin_sve_svsub_u32_m
__builtin_sve_svsub_u32_x
__builtin_sve_svsub_u32_z
__builtin_sve_svsub_u64_m
__builtin_sve_svsub_u64_x
__builtin_sve_svsub_u64_z
__builtin_sve_svsub_u8_m
__builtin_sve_svsub_u8_x
__builtin_sve_svsub_u8_z
__builtin_sve_svsubhnb_n_s16
__builtin_sve_svsubhnb_n_s32
__builtin_sve_svsubhnb_n_s64
__builtin_sve_svsubhnb_n_u16
__builtin_sve_svsubhnb_n_u32
__builtin_sve_svsubhnb_n_u64
__builtin_sve_svsubhnb_s16
__builtin_sve_svsubhnb_s32
__builtin_sve_svsubhnb_s64
__builtin_sve_svsubhnb_u16
__builtin_sve_svsubhnb_u32
__builtin_sve_svsubhnb_u64
__builtin_sve_svsubhnt_n_s16
__builtin_sve_svsubhnt_n_s32
__builtin_sve_svsubhnt_n_s64
__builtin_sve_svsubhnt_n_u16
__builtin_sve_svsubhnt_n_u32
__builtin_sve_svsubhnt_n_u64
__builtin_sve_svsubhnt_s16
__builtin_sve_svsubhnt_s32
__builtin_sve_svsubhnt_s64
__builtin_sve_svsubhnt_u16
__builtin_sve_svsubhnt_u32
__builtin_sve_svsubhnt_u64
__builtin_sve_svsublb_n_s16
__builtin_sve_svsublb_n_s32
__builtin_sve_svsublb_n_s64
__builtin_sve_svsublb_n_u16
__builtin_sve_svsublb_n_u32
__builtin_sve_svsublb_n_u64
__builtin_sve_svsublb_s16
__builtin_sve_svsublb_s32
__builtin_sve_svsublb_s64
__builtin_sve_svsublb_u16
__builtin_sve_svsublb_u32
__builtin_sve_svsublb_u64
__builtin_sve_svsublbt_n_s16
__builtin_sve_svsublbt_n_s32
__builtin_sve_svsublbt_n_s64
__builtin_sve_svsublbt_s16
__builtin_sve_svsublbt_s32
__builtin_sve_svsublbt_s64
__builtin_sve_svsublt_n_s16
__builtin_sve_svsublt_n_s32
__builtin_sve_svsublt_n_s64
__builtin_sve_svsublt_n_u16
__builtin_sve_svsublt_n_u32
__builtin_sve_svsublt_n_u64
__builtin_sve_svsublt_s16
__builtin_sve_svsublt_s32
__builtin_sve_svsublt_s64
__builtin_sve_svsublt_u16
__builtin_sve_svsublt_u32
__builtin_sve_svsublt_u64
__builtin_sve_svsubltb_n_s16
__builtin_sve_svsubltb_n_s32
__builtin_sve_svsubltb_n_s64
__builtin_sve_svsubltb_s16
__builtin_sve_svsubltb_s32
__builtin_sve_svsubltb_s64
__builtin_sve_svsubr_f16_m
__builtin_sve_svsubr_f16_x
__builtin_sve_svsubr_f16_z
__builtin_sve_svsubr_f32_m
__builtin_sve_svsubr_f32_x
__builtin_sve_svsubr_f32_z
__builtin_sve_svsubr_f64_m
__builtin_sve_svsubr_f64_x
__builtin_sve_svsubr_f64_z
__builtin_sve_svsubr_n_f16_m
__builtin_sve_svsubr_n_f16_x
__builtin_sve_svsubr_n_f16_z
__builtin_sve_svsubr_n_f32_m
__builtin_sve_svsubr_n_f32_x
__builtin_sve_svsubr_n_f32_z
__builtin_sve_svsubr_n_f64_m
__builtin_sve_svsubr_n_f64_x
__builtin_sve_svsubr_n_f64_z
__builtin_sve_svsubr_n_s16_m
__builtin_sve_svsubr_n_s16_x
__builtin_sve_svsubr_n_s16_z
__builtin_sve_svsubr_n_s32_m
__builtin_sve_svsubr_n_s32_x
__builtin_sve_svsubr_n_s32_z
__builtin_sve_svsubr_n_s64_m
__builtin_sve_svsubr_n_s64_x
__builtin_sve_svsubr_n_s64_z
__builtin_sve_svsubr_n_s8_m
__builtin_sve_svsubr_n_s8_x
__builtin_sve_svsubr_n_s8_z
__builtin_sve_svsubr_n_u16_m
__builtin_sve_svsubr_n_u16_x
__builtin_sve_svsubr_n_u16_z
__builtin_sve_svsubr_n_u32_m
__builtin_sve_svsubr_n_u32_x
__builtin_sve_svsubr_n_u32_z
__builtin_sve_svsubr_n_u64_m
__builtin_sve_svsubr_n_u64_x
__builtin_sve_svsubr_n_u64_z
__builtin_sve_svsubr_n_u8_m
__builtin_sve_svsubr_n_u8_x
__builtin_sve_svsubr_n_u8_z
__builtin_sve_svsubr_s16_m
__builtin_sve_svsubr_s16_x
__builtin_sve_svsubr_s16_z
__builtin_sve_svsubr_s32_m
__builtin_sve_svsubr_s32_x
__builtin_sve_svsubr_s32_z
__builtin_sve_svsubr_s64_m
__builtin_sve_svsubr_s64_x
__builtin_sve_svsubr_s64_z
__builtin_sve_svsubr_s8_m
__builtin_sve_svsubr_s8_x
__builtin_sve_svsubr_s8_z
__builtin_sve_svsubr_u16_m
__builtin_sve_svsubr_u16_x
__builtin_sve_svsubr_u16_z
__builtin_sve_svsubr_u32_m
__builtin_sve_svsubr_u32_x
__builtin_sve_svsubr_u32_z
__builtin_sve_svsubr_u64_m
__builtin_sve_svsubr_u64_x
__builtin_sve_svsubr_u64_z
__builtin_sve_svsubr_u8_m
__builtin_sve_svsubr_u8_x
__builtin_sve_svsubr_u8_z
__builtin_sve_svsubwb_n_s16
__builtin_sve_svsubwb_n_s32
__builtin_sve_svsubwb_n_s64
__builtin_sve_svsubwb_n_u16
__builtin_sve_svsubwb_n_u32
__builtin_sve_svsubwb_n_u64
__builtin_sve_svsubwb_s16
__builtin_sve_svsubwb_s32
__builtin_sve_svsubwb_s64
__builtin_sve_svsubwb_u16
__builtin_sve_svsubwb_u32
__builtin_sve_svsubwb_u64
__builtin_sve_svsubwt_n_s16
__builtin_sve_svsubwt_n_s32
__builtin_sve_svsubwt_n_s64
__builtin_sve_svsubwt_n_u16
__builtin_sve_svsubwt_n_u32
__builtin_sve_svsubwt_n_u64
__builtin_sve_svsubwt_s16
__builtin_sve_svsubwt_s32
__builtin_sve_svsubwt_s64
__builtin_sve_svsubwt_u16
__builtin_sve_svsubwt_u32
__builtin_sve_svsubwt_u64
__builtin_sve_svsudot_lane_s32
q4iq4iq16Scq16UcIUWi
__builtin_sve_svsudot_n_s32
q4iq4iq16ScUc
__builtin_sve_svsudot_s32
q4iq4iq16Scq16Uc
__builtin_sve_svtbl2_bf16
q8yq16yq8Us
__builtin_sve_svtbl2_f16
q8hq16hq8Us
__builtin_sve_svtbl2_f32
q4fq8fq4Ui
__builtin_sve_svtbl2_f64
q2dq4dq2UWi
__builtin_sve_svtbl2_s16
q8sq16sq8Us
__builtin_sve_svtbl2_s32
q4iq8iq4Ui
__builtin_sve_svtbl2_s64
q2Wiq4Wiq2UWi
__builtin_sve_svtbl2_s8
q16Scq32Scq16Uc
__builtin_sve_svtbl2_u16
q8Usq16Usq8Us
__builtin_sve_svtbl2_u32
q4Uiq8Uiq4Ui
__builtin_sve_svtbl2_u64
q2UWiq4UWiq2UWi
__builtin_sve_svtbl2_u8
q16Ucq32Ucq16Uc
__builtin_sve_svtbl_bf16
q8yq8yq8Us
__builtin_sve_svtbl_f16
q8hq8hq8Us
__builtin_sve_svtbl_f32
q4fq4fq4Ui
__builtin_sve_svtbl_f64
q2dq2dq2UWi
__builtin_sve_svtbl_s16
q8sq8sq8Us
__builtin_sve_svtbl_s32
q4iq4iq4Ui
__builtin_sve_svtbl_s64
q2Wiq2Wiq2UWi
__builtin_sve_svtbl_s8
q16Scq16Scq16Uc
__builtin_sve_svtbl_u16
__builtin_sve_svtbl_u32
__builtin_sve_svtbl_u64
__builtin_sve_svtbl_u8
__builtin_sve_svtbx_bf16
q8yq8yq8yq8Us
__builtin_sve_svtbx_f16
q8hq8hq8hq8Us
__builtin_sve_svtbx_f32
q4fq4fq4fq4Ui
__builtin_sve_svtbx_f64
q2dq2dq2dq2UWi
__builtin_sve_svtbx_s16
q8sq8sq8sq8Us
__builtin_sve_svtbx_s32
q4iq4iq4iq4Ui
__builtin_sve_svtbx_s64
q2Wiq2Wiq2Wiq2UWi
__builtin_sve_svtbx_s8
q16Scq16Scq16Scq16Uc
__builtin_sve_svtbx_u16
__builtin_sve_svtbx_u32
__builtin_sve_svtbx_u64
__builtin_sve_svtbx_u8
__builtin_sve_svtmad_f16
__builtin_sve_svtmad_f32
__builtin_sve_svtmad_f64
__builtin_sve_svtrn1_b16
__builtin_sve_svtrn1_b32
__builtin_sve_svtrn1_b64
__builtin_sve_svtrn1_b8
__builtin_sve_svtrn1_bf16
q8yq8yq8y
__builtin_sve_svtrn1_f16
__builtin_sve_svtrn1_f32
__builtin_sve_svtrn1_f64
__builtin_sve_svtrn1_s16
__builtin_sve_svtrn1_s32
__builtin_sve_svtrn1_s64
__builtin_sve_svtrn1_s8
__builtin_sve_svtrn1_u16
__builtin_sve_svtrn1_u32
__builtin_sve_svtrn1_u64
__builtin_sve_svtrn1_u8
__builtin_sve_svtrn1q_bf16
__builtin_sve_svtrn1q_f16
__builtin_sve_svtrn1q_f32
__builtin_sve_svtrn1q_f64
__builtin_sve_svtrn1q_s16
__builtin_sve_svtrn1q_s32
__builtin_sve_svtrn1q_s64
__builtin_sve_svtrn1q_s8
__builtin_sve_svtrn1q_u16
__builtin_sve_svtrn1q_u32
__builtin_sve_svtrn1q_u64
__builtin_sve_svtrn1q_u8
__builtin_sve_svtrn2_b16
__builtin_sve_svtrn2_b32
__builtin_sve_svtrn2_b64
__builtin_sve_svtrn2_b8
__builtin_sve_svtrn2_bf16
__builtin_sve_svtrn2_f16
__builtin_sve_svtrn2_f32
__builtin_sve_svtrn2_f64
__builtin_sve_svtrn2_s16
__builtin_sve_svtrn2_s32
__builtin_sve_svtrn2_s64
__builtin_sve_svtrn2_s8
__builtin_sve_svtrn2_u16
__builtin_sve_svtrn2_u32
__builtin_sve_svtrn2_u64
__builtin_sve_svtrn2_u8
__builtin_sve_svtrn2q_bf16
__builtin_sve_svtrn2q_f16
__builtin_sve_svtrn2q_f32
__builtin_sve_svtrn2q_f64
__builtin_sve_svtrn2q_s16
__builtin_sve_svtrn2q_s32
__builtin_sve_svtrn2q_s64
__builtin_sve_svtrn2q_s8
__builtin_sve_svtrn2q_u16
__builtin_sve_svtrn2q_u32
__builtin_sve_svtrn2q_u64
__builtin_sve_svtrn2q_u8
__builtin_sve_svtsmul_f16
__builtin_sve_svtsmul_f32
__builtin_sve_svtsmul_f64
__builtin_sve_svtssel_f16
__builtin_sve_svtssel_f32
__builtin_sve_svtssel_f64
__builtin_sve_svundef2_bf16
q16y
__builtin_sve_svundef2_f16
q16h
__builtin_sve_svundef2_f32
__builtin_sve_svundef2_f64
__builtin_sve_svundef2_s16
q16s
__builtin_sve_svundef2_s32
__builtin_sve_svundef2_s64
q4Wi
__builtin_sve_svundef2_s8
q32Sc
__builtin_sve_svundef2_u16
q16Us
__builtin_sve_svundef2_u32
q8Ui
__builtin_sve_svundef2_u64
q4UWi
__builtin_sve_svundef2_u8
q32Uc
__builtin_sve_svundef3_bf16
q24y
__builtin_sve_svundef3_f16
q24h
__builtin_sve_svundef3_f32
q12f
__builtin_sve_svundef3_f64
__builtin_sve_svundef3_s16
q24s
__builtin_sve_svundef3_s32
q12i
__builtin_sve_svundef3_s64
q6Wi
__builtin_sve_svundef3_s8
q48Sc
__builtin_sve_svundef3_u16
q24Us
__builtin_sve_svundef3_u32
q12Ui
__builtin_sve_svundef3_u64
q6UWi
__builtin_sve_svundef3_u8
q48Uc
__builtin_sve_svundef4_bf16
q32y
__builtin_sve_svundef4_f16
q32h
__builtin_sve_svundef4_f32
q16f
__builtin_sve_svundef4_f64
__builtin_sve_svundef4_s16
q32s
__builtin_sve_svundef4_s32
q16i
__builtin_sve_svundef4_s64
q8Wi
__builtin_sve_svundef4_s8
q64Sc
__builtin_sve_svundef4_u16
q32Us
__builtin_sve_svundef4_u32
q16Ui
__builtin_sve_svundef4_u64
q8UWi
__builtin_sve_svundef4_u8
q64Uc
__builtin_sve_svundef_bf16
__builtin_sve_svundef_f16
__builtin_sve_svundef_f32
__builtin_sve_svundef_f64
__builtin_sve_svundef_s16
__builtin_sve_svundef_s32
__builtin_sve_svundef_s64
q2Wi
__builtin_sve_svundef_s8
q16Sc
__builtin_sve_svundef_u16
q8Us
__builtin_sve_svundef_u32
q4Ui
__builtin_sve_svundef_u64
q2UWi
__builtin_sve_svundef_u8
q16Uc
__builtin_sve_svunpkhi_b
__builtin_sve_svunpkhi_s16
__builtin_sve_svunpkhi_s32
__builtin_sve_svunpkhi_s64
__builtin_sve_svunpkhi_u16
__builtin_sve_svunpkhi_u32
__builtin_sve_svunpkhi_u64
__builtin_sve_svunpklo_b
__builtin_sve_svunpklo_s16
__builtin_sve_svunpklo_s32
__builtin_sve_svunpklo_s64
__builtin_sve_svunpklo_u16
__builtin_sve_svunpklo_u32
__builtin_sve_svunpklo_u64
__builtin_sve_svuqadd_n_s16_m
__builtin_sve_svuqadd_n_s16_x
__builtin_sve_svuqadd_n_s16_z
__builtin_sve_svuqadd_n_s32_m
__builtin_sve_svuqadd_n_s32_x
__builtin_sve_svuqadd_n_s32_z
__builtin_sve_svuqadd_n_s64_m
__builtin_sve_svuqadd_n_s64_x
__builtin_sve_svuqadd_n_s64_z
__builtin_sve_svuqadd_n_s8_m
__builtin_sve_svuqadd_n_s8_x
__builtin_sve_svuqadd_n_s8_z
__builtin_sve_svuqadd_s16_m
__builtin_sve_svuqadd_s16_x
__builtin_sve_svuqadd_s16_z
__builtin_sve_svuqadd_s32_m
__builtin_sve_svuqadd_s32_x
__builtin_sve_svuqadd_s32_z
__builtin_sve_svuqadd_s64_m
__builtin_sve_svuqadd_s64_x
__builtin_sve_svuqadd_s64_z
__builtin_sve_svuqadd_s8_m
__builtin_sve_svuqadd_s8_x
__builtin_sve_svuqadd_s8_z
__builtin_sve_svusdot_lane_s32
q4iq4iq16Ucq16ScIUWi
__builtin_sve_svusdot_n_s32
q4iq4iq16UcSc
__builtin_sve_svusdot_s32
q4iq4iq16Ucq16Sc
__builtin_sve_svusmmla_s32
__builtin_sve_svuzp1_b16
__builtin_sve_svuzp1_b32
__builtin_sve_svuzp1_b64
__builtin_sve_svuzp1_b8
__builtin_sve_svuzp1_bf16
__builtin_sve_svuzp1_f16
__builtin_sve_svuzp1_f32
__builtin_sve_svuzp1_f64
__builtin_sve_svuzp1_s16
__builtin_sve_svuzp1_s32
__builtin_sve_svuzp1_s64
__builtin_sve_svuzp1_s8
__builtin_sve_svuzp1_u16
__builtin_sve_svuzp1_u32
__builtin_sve_svuzp1_u64
__builtin_sve_svuzp1_u8
__builtin_sve_svuzp1q_bf16
__builtin_sve_svuzp1q_f16
__builtin_sve_svuzp1q_f32
__builtin_sve_svuzp1q_f64
__builtin_sve_svuzp1q_s16
__builtin_sve_svuzp1q_s32
__builtin_sve_svuzp1q_s64
__builtin_sve_svuzp1q_s8
__builtin_sve_svuzp1q_u16
__builtin_sve_svuzp1q_u32
__builtin_sve_svuzp1q_u64
__builtin_sve_svuzp1q_u8
__builtin_sve_svuzp2_b16
__builtin_sve_svuzp2_b32
__builtin_sve_svuzp2_b64
__builtin_sve_svuzp2_b8
__builtin_sve_svuzp2_bf16
__builtin_sve_svuzp2_f16
__builtin_sve_svuzp2_f32
__builtin_sve_svuzp2_f64
__builtin_sve_svuzp2_s16
__builtin_sve_svuzp2_s32
__builtin_sve_svuzp2_s64
__builtin_sve_svuzp2_s8
__builtin_sve_svuzp2_u16
__builtin_sve_svuzp2_u32
__builtin_sve_svuzp2_u64
__builtin_sve_svuzp2_u8
__builtin_sve_svuzp2q_bf16
__builtin_sve_svuzp2q_f16
__builtin_sve_svuzp2q_f32
__builtin_sve_svuzp2q_f64
__builtin_sve_svuzp2q_s16
__builtin_sve_svuzp2q_s32
__builtin_sve_svuzp2q_s64
__builtin_sve_svuzp2q_s8
__builtin_sve_svuzp2q_u16
__builtin_sve_svuzp2q_u32
__builtin_sve_svuzp2q_u64
__builtin_sve_svuzp2q_u8
__builtin_sve_svwhilege_b16_s32
q16bii
__builtin_sve_svwhilege_b16_s64
q16bWiWi
__builtin_sve_svwhilege_b16_u32
q16bUiUi
__builtin_sve_svwhilege_b16_u64
q16bUWiUWi
__builtin_sve_svwhilege_b32_s32
__builtin_sve_svwhilege_b32_s64
__builtin_sve_svwhilege_b32_u32
__builtin_sve_svwhilege_b32_u64
__builtin_sve_svwhilege_b64_s32
__builtin_sve_svwhilege_b64_s64
__builtin_sve_svwhilege_b64_u32
__builtin_sve_svwhilege_b64_u64
__builtin_sve_svwhilege_b8_s32
__builtin_sve_svwhilege_b8_s64
__builtin_sve_svwhilege_b8_u32
__builtin_sve_svwhilege_b8_u64
__builtin_sve_svwhilegt_b16_s32
__builtin_sve_svwhilegt_b16_s64
__builtin_sve_svwhilegt_b16_u32
__builtin_sve_svwhilegt_b16_u64
__builtin_sve_svwhilegt_b32_s32
__builtin_sve_svwhilegt_b32_s64
__builtin_sve_svwhilegt_b32_u32
__builtin_sve_svwhilegt_b32_u64
__builtin_sve_svwhilegt_b64_s32
__builtin_sve_svwhilegt_b64_s64
__builtin_sve_svwhilegt_b64_u32
__builtin_sve_svwhilegt_b64_u64
__builtin_sve_svwhilegt_b8_s32
__builtin_sve_svwhilegt_b8_s64
__builtin_sve_svwhilegt_b8_u32
__builtin_sve_svwhilegt_b8_u64
__builtin_sve_svwhilele_b16_s32
__builtin_sve_svwhilele_b16_s64
__builtin_sve_svwhilele_b16_u32
__builtin_sve_svwhilele_b16_u64
__builtin_sve_svwhilele_b32_s32
__builtin_sve_svwhilele_b32_s64
__builtin_sve_svwhilele_b32_u32
__builtin_sve_svwhilele_b32_u64
__builtin_sve_svwhilele_b64_s32
__builtin_sve_svwhilele_b64_s64
__builtin_sve_svwhilele_b64_u32
__builtin_sve_svwhilele_b64_u64
__builtin_sve_svwhilele_b8_s32
__builtin_sve_svwhilele_b8_s64
__builtin_sve_svwhilele_b8_u32
__builtin_sve_svwhilele_b8_u64
__builtin_sve_svwhilelt_b16_s32
__builtin_sve_svwhilelt_b16_s64
__builtin_sve_svwhilelt_b16_u32
__builtin_sve_svwhilelt_b16_u64
__builtin_sve_svwhilelt_b32_s32
__builtin_sve_svwhilelt_b32_s64
__builtin_sve_svwhilelt_b32_u32
__builtin_sve_svwhilelt_b32_u64
__builtin_sve_svwhilelt_b64_s32
__builtin_sve_svwhilelt_b64_s64
__builtin_sve_svwhilelt_b64_u32
__builtin_sve_svwhilelt_b64_u64
__builtin_sve_svwhilelt_b8_s32
__builtin_sve_svwhilelt_b8_s64
__builtin_sve_svwhilelt_b8_u32
__builtin_sve_svwhilelt_b8_u64
__builtin_sve_svwhilerw_bf16
q16byC*yC*
__builtin_sve_svwhilerw_f16
q16bhC*hC*
__builtin_sve_svwhilerw_f32
q16bfC*fC*
__builtin_sve_svwhilerw_f64
q16bdC*dC*
__builtin_sve_svwhilerw_s16
q16bSsC*SsC*
__builtin_sve_svwhilerw_s32
q16bSiC*SiC*
__builtin_sve_svwhilerw_s64
q16bSWiC*SWiC*
__builtin_sve_svwhilerw_s8
q16bScC*ScC*
__builtin_sve_svwhilerw_u16
q16bUsC*UsC*
__builtin_sve_svwhilerw_u32
q16bUiC*UiC*
__builtin_sve_svwhilerw_u64
q16bUWiC*UWiC*
__builtin_sve_svwhilerw_u8
q16bUcC*UcC*
__builtin_sve_svwhilewr_bf16
__builtin_sve_svwhilewr_f16
__builtin_sve_svwhilewr_f32
__builtin_sve_svwhilewr_f64
__builtin_sve_svwhilewr_s16
__builtin_sve_svwhilewr_s32
__builtin_sve_svwhilewr_s64
__builtin_sve_svwhilewr_s8
__builtin_sve_svwhilewr_u16
__builtin_sve_svwhilewr_u32
__builtin_sve_svwhilewr_u64
__builtin_sve_svwhilewr_u8
__builtin_sve_svwrffr
vq16b
__builtin_sve_svxar_n_s16
__builtin_sve_svxar_n_s32
__builtin_sve_svxar_n_s64
__builtin_sve_svxar_n_s8
__builtin_sve_svxar_n_u16
__builtin_sve_svxar_n_u32
__builtin_sve_svxar_n_u64
__builtin_sve_svxar_n_u8
__builtin_sve_svzip1_b16
__builtin_sve_svzip1_b32
__builtin_sve_svzip1_b64
__builtin_sve_svzip1_b8
__builtin_sve_svzip1_bf16
__builtin_sve_svzip1_f16
__builtin_sve_svzip1_f32
__builtin_sve_svzip1_f64
__builtin_sve_svzip1_s16
__builtin_sve_svzip1_s32
__builtin_sve_svzip1_s64
__builtin_sve_svzip1_s8
__builtin_sve_svzip1_u16
__builtin_sve_svzip1_u32
__builtin_sve_svzip1_u64
__builtin_sve_svzip1_u8
__builtin_sve_svzip1q_bf16
__builtin_sve_svzip1q_f16
__builtin_sve_svzip1q_f32
__builtin_sve_svzip1q_f64
__builtin_sve_svzip1q_s16
__builtin_sve_svzip1q_s32
__builtin_sve_svzip1q_s64
__builtin_sve_svzip1q_s8
__builtin_sve_svzip1q_u16
__builtin_sve_svzip1q_u32
__builtin_sve_svzip1q_u64
__builtin_sve_svzip1q_u8
__builtin_sve_svzip2_b16
__builtin_sve_svzip2_b32
__builtin_sve_svzip2_b64
__builtin_sve_svzip2_b8
__builtin_sve_svzip2_bf16
__builtin_sve_svzip2_f16
__builtin_sve_svzip2_f32
__builtin_sve_svzip2_f64
__builtin_sve_svzip2_s16
__builtin_sve_svzip2_s32
__builtin_sve_svzip2_s64
__builtin_sve_svzip2_s8
__builtin_sve_svzip2_u16
__builtin_sve_svzip2_u32
__builtin_sve_svzip2_u64
__builtin_sve_svzip2_u8
__builtin_sve_svzip2q_bf16
__builtin_sve_svzip2q_f16
__builtin_sve_svzip2q_f32
__builtin_sve_svzip2q_f64
__builtin_sve_svzip2q_s16
__builtin_sve_svzip2q_s32
__builtin_sve_svzip2q_s64
__builtin_sve_svzip2q_s8
__builtin_sve_svzip2q_u16
__builtin_sve_svzip2q_u32
__builtin_sve_svzip2q_u64
__builtin_sve_svzip2q_u8
__builtin_sve_reinterpret_s8_s8
__builtin_sve_reinterpret_s8_s16
q16Scq8Ss
__builtin_sve_reinterpret_s8_s32
q16Scq4Si
__builtin_sve_reinterpret_s8_s64
q16Scq2SWi
__builtin_sve_reinterpret_s8_u8
q16Scq16Uc
__builtin_sve_reinterpret_s8_u16
q16Scq8Us
__builtin_sve_reinterpret_s8_u32
q16Scq4Ui
__builtin_sve_reinterpret_s8_u64
q16Scq2UWi
__builtin_sve_reinterpret_s8_f16
q16Scq8h
__builtin_sve_reinterpret_s8_bf16
q16Scq8y
__builtin_sve_reinterpret_s8_f32
q16Scq4f
__builtin_sve_reinterpret_s8_f64
q16Scq2d
__builtin_sve_reinterpret_s16_s8
q8Ssq16Sc
__builtin_sve_reinterpret_s16_s16
q8Ssq8Ss
__builtin_sve_reinterpret_s16_s32
q8Ssq4Si
__builtin_sve_reinterpret_s16_s64
q8Ssq2SWi
__builtin_sve_reinterpret_s16_u8
q8Ssq16Uc
__builtin_sve_reinterpret_s16_u16
q8Ssq8Us
__builtin_sve_reinterpret_s16_u32
q8Ssq4Ui
__builtin_sve_reinterpret_s16_u64
q8Ssq2UWi
__builtin_sve_reinterpret_s16_f16
q8Ssq8h
__builtin_sve_reinterpret_s16_bf16
q8Ssq8y
__builtin_sve_reinterpret_s16_f32
q8Ssq4f
__builtin_sve_reinterpret_s16_f64
q8Ssq2d
__builtin_sve_reinterpret_s32_s8
q4Siq16Sc
__builtin_sve_reinterpret_s32_s16
q4Siq8Ss
__builtin_sve_reinterpret_s32_s32
q4Siq4Si
__builtin_sve_reinterpret_s32_s64
q4Siq2SWi
__builtin_sve_reinterpret_s32_u8
q4Siq16Uc
__builtin_sve_reinterpret_s32_u16
q4Siq8Us
__builtin_sve_reinterpret_s32_u32
q4Siq4Ui
__builtin_sve_reinterpret_s32_u64
q4Siq2UWi
__builtin_sve_reinterpret_s32_f16
q4Siq8h
__builtin_sve_reinterpret_s32_bf16
q4Siq8y
__builtin_sve_reinterpret_s32_f32
q4Siq4f
__builtin_sve_reinterpret_s32_f64
q4Siq2d
__builtin_sve_reinterpret_s64_s8
q2SWiq16Sc
__builtin_sve_reinterpret_s64_s16
q2SWiq8Ss
__builtin_sve_reinterpret_s64_s32
q2SWiq4Si
__builtin_sve_reinterpret_s64_s64
q2SWiq2SWi
__builtin_sve_reinterpret_s64_u8
q2SWiq16Uc
__builtin_sve_reinterpret_s64_u16
q2SWiq8Us
__builtin_sve_reinterpret_s64_u32
q2SWiq4Ui
__builtin_sve_reinterpret_s64_u64
q2SWiq2UWi
__builtin_sve_reinterpret_s64_f16
q2SWiq8h
__builtin_sve_reinterpret_s64_bf16
q2SWiq8y
__builtin_sve_reinterpret_s64_f32
q2SWiq4f
__builtin_sve_reinterpret_s64_f64
q2SWiq2d
__builtin_sve_reinterpret_u8_s8
q16Ucq16Sc
__builtin_sve_reinterpret_u8_s16
q16Ucq8Ss
__builtin_sve_reinterpret_u8_s32
q16Ucq4Si
__builtin_sve_reinterpret_u8_s64
q16Ucq2SWi
__builtin_sve_reinterpret_u8_u8
__builtin_sve_reinterpret_u8_u16
__builtin_sve_reinterpret_u8_u32
q16Ucq4Ui
__builtin_sve_reinterpret_u8_u64
q16Ucq2UWi
__builtin_sve_reinterpret_u8_f16
q16Ucq8h
__builtin_sve_reinterpret_u8_bf16
q16Ucq8y
__builtin_sve_reinterpret_u8_f32
q16Ucq4f
__builtin_sve_reinterpret_u8_f64
q16Ucq2d
__builtin_sve_reinterpret_u16_s8
q8Usq16Sc
__builtin_sve_reinterpret_u16_s16
q8Usq8Ss
__builtin_sve_reinterpret_u16_s32
q8Usq4Si
__builtin_sve_reinterpret_u16_s64
q8Usq2SWi
__builtin_sve_reinterpret_u16_u8
__builtin_sve_reinterpret_u16_u16
__builtin_sve_reinterpret_u16_u32
__builtin_sve_reinterpret_u16_u64
q8Usq2UWi
__builtin_sve_reinterpret_u16_f16
q8Usq8h
__builtin_sve_reinterpret_u16_bf16
q8Usq8y
__builtin_sve_reinterpret_u16_f32
q8Usq4f
__builtin_sve_reinterpret_u16_f64
q8Usq2d
__builtin_sve_reinterpret_u32_s8
q4Uiq16Sc
__builtin_sve_reinterpret_u32_s16
q4Uiq8Ss
__builtin_sve_reinterpret_u32_s32
q4Uiq4Si
__builtin_sve_reinterpret_u32_s64
q4Uiq2SWi
__builtin_sve_reinterpret_u32_u8
q4Uiq16Uc
__builtin_sve_reinterpret_u32_u16
__builtin_sve_reinterpret_u32_u32
__builtin_sve_reinterpret_u32_u64
__builtin_sve_reinterpret_u32_f16
q4Uiq8h
__builtin_sve_reinterpret_u32_bf16
q4Uiq8y
__builtin_sve_reinterpret_u32_f32
q4Uiq4f
__builtin_sve_reinterpret_u32_f64
q4Uiq2d
__builtin_sve_reinterpret_u64_s8
q2UWiq16Sc
__builtin_sve_reinterpret_u64_s16
q2UWiq8Ss
__builtin_sve_reinterpret_u64_s32
q2UWiq4Si
__builtin_sve_reinterpret_u64_s64
q2UWiq2SWi
__builtin_sve_reinterpret_u64_u8
q2UWiq16Uc
__builtin_sve_reinterpret_u64_u16
q2UWiq8Us
__builtin_sve_reinterpret_u64_u32
__builtin_sve_reinterpret_u64_u64
__builtin_sve_reinterpret_u64_f16
q2UWiq8h
__builtin_sve_reinterpret_u64_bf16
q2UWiq8y
__builtin_sve_reinterpret_u64_f32
q2UWiq4f
__builtin_sve_reinterpret_u64_f64
q2UWiq2d
__builtin_sve_reinterpret_f16_s8
q8hq16Sc
__builtin_sve_reinterpret_f16_s16
q8hq8Ss
__builtin_sve_reinterpret_f16_s32
q8hq4Si
__builtin_sve_reinterpret_f16_s64
q8hq2SWi
__builtin_sve_reinterpret_f16_u8
q8hq16Uc
__builtin_sve_reinterpret_f16_u16
__builtin_sve_reinterpret_f16_u32
q8hq4Ui
__builtin_sve_reinterpret_f16_u64
q8hq2UWi
__builtin_sve_reinterpret_f16_f16
__builtin_sve_reinterpret_f16_bf16
q8hq8y
__builtin_sve_reinterpret_f16_f32
q8hq4f
__builtin_sve_reinterpret_f16_f64
q8hq2d
__builtin_sve_reinterpret_bf16_s8
q8yq16Sc
__builtin_sve_reinterpret_bf16_s16
q8yq8Ss
__builtin_sve_reinterpret_bf16_s32
q8yq4Si
__builtin_sve_reinterpret_bf16_s64
q8yq2SWi
__builtin_sve_reinterpret_bf16_u8
q8yq16Uc
__builtin_sve_reinterpret_bf16_u16
q8yq8Us
__builtin_sve_reinterpret_bf16_u32
q8yq4Ui
__builtin_sve_reinterpret_bf16_u64
q8yq2UWi
__builtin_sve_reinterpret_bf16_f16
q8yq8h
__builtin_sve_reinterpret_bf16_bf16
__builtin_sve_reinterpret_bf16_f32
q8yq4f
__builtin_sve_reinterpret_bf16_f64
q8yq2d
__builtin_sve_reinterpret_f32_s8
q4fq16Sc
__builtin_sve_reinterpret_f32_s16
q4fq8Ss
__builtin_sve_reinterpret_f32_s32
q4fq4Si
__builtin_sve_reinterpret_f32_s64
q4fq2SWi
__builtin_sve_reinterpret_f32_u8
q4fq16Uc
__builtin_sve_reinterpret_f32_u16
q4fq8Us
__builtin_sve_reinterpret_f32_u32
__builtin_sve_reinterpret_f32_u64
q4fq2UWi
__builtin_sve_reinterpret_f32_f16
q4fq8h
__builtin_sve_reinterpret_f32_bf16
q4fq8y
__builtin_sve_reinterpret_f32_f32
__builtin_sve_reinterpret_f32_f64
q4fq2d
__builtin_sve_reinterpret_f64_s8
q2dq16Sc
__builtin_sve_reinterpret_f64_s16
q2dq8Ss
__builtin_sve_reinterpret_f64_s32
q2dq4Si
__builtin_sve_reinterpret_f64_s64
q2dq2SWi
__builtin_sve_reinterpret_f64_u8
q2dq16Uc
__builtin_sve_reinterpret_f64_u16
q2dq8Us
__builtin_sve_reinterpret_f64_u32
q2dq4Ui
__builtin_sve_reinterpret_f64_u64
__builtin_sve_reinterpret_f64_f16
q2dq8h
__builtin_sve_reinterpret_f64_bf16
q2dq8y
__builtin_sve_reinterpret_f64_f32
q2dq4f
__builtin_sve_reinterpret_f64_f64
__clear_cache
vv*v*
__builtin_arm_ldrex
__builtin_arm_ldaex
__builtin_arm_strex
__builtin_arm_stlex
__builtin_arm_clrex
__builtin_arm_rbit
__builtin_arm_rbit64
WUiWUi
__builtin_arm_cls
UiZUi
__builtin_arm_cls64
UiWUi
__builtin_arm_nop
__builtin_arm_yield
__builtin_arm_wfe
__builtin_arm_wfi
__builtin_arm_sev
__builtin_arm_sevl
__builtin_arm_crc32b
UiUiUc
__builtin_arm_crc32cb
__builtin_arm_crc32h
UiUiUs
__builtin_arm_crc32ch
__builtin_arm_crc32w
__builtin_arm_crc32cw
__builtin_arm_crc32d
UiUiWUi
__builtin_arm_crc32cd
__builtin_arm_irg
v*v*Ui
__builtin_arm_addg
__builtin_arm_gmi
Uiv*Ui
__builtin_arm_ldg
v*v*
__builtin_arm_stg
__builtin_arm_subp
Uiv*v*
__builtin_arm_dmb
__builtin_arm_dsb
__builtin_arm_isb
__builtin_arm_jcvt
__builtin_arm_prefetch
vvC*UiUiUiUi
__builtin_arm_rsr
UicC*
__builtin_arm_rsr64
WUicC*
__builtin_arm_rsrp
v*cC*
__builtin_arm_wsr
vcC*Ui
__builtin_arm_wsr64
vcC*WUi
__builtin_arm_wsrp
vcC*vC*
__dmb
__dsb
__isb
__yield
__wfe
__wfi
__sev
__sevl
__builtin_sponentry
__builtin_arm_tstart
__builtin_arm_tcommit
__builtin_arm_tcancel
vWUIi
__builtin_arm_ttest
__builtin_arm_frint32zf
__builtin_arm_frint32z
__builtin_arm_frint64zf
__builtin_arm_frint64z
__builtin_arm_frint32xf
__builtin_arm_frint32x
__builtin_arm_frint64xf
__builtin_arm_frint64x
__builtin_arm_rndr
iWUi*
__builtin_arm_rndrrs
__builtin_arm_ld64b
vvC*WUi*
__builtin_arm_st64b
vv*WUiC*
__builtin_arm_st64bv
WUiv*WUiC*
__builtin_arm_st64bv0
_BitScanForward
UcUNi*UNi
intrin.h
_BitScanReverse
_BitScanForward64
UcUNi*ULLi
_BitScanReverse64
_InterlockedAdd
NiNiD*Ni
_InterlockedAnd64
LLiLLiD*LLi
_InterlockedDecrement64
LLiLLiD*
_InterlockedExchange64
_InterlockedExchangeAdd64
_InterlockedExchangeSub64
_InterlockedIncrement64
_InterlockedOr64
_InterlockedXor64
_InterlockedExchangeAdd_acq
_InterlockedExchangeAdd_rel
_InterlockedExchangeAdd_nf
_InterlockedExchangeAdd8_acq
ccD*c
_InterlockedExchangeAdd8_rel
_InterlockedExchangeAdd8_nf
_InterlockedExchangeAdd16_acq
ssD*s
_InterlockedExchangeAdd16_rel
_InterlockedExchangeAdd16_nf
_InterlockedExchangeAdd64_acq
_InterlockedExchangeAdd64_rel
_InterlockedExchangeAdd64_nf
_InterlockedExchange8_acq
_InterlockedExchange8_nf
_InterlockedExchange8_rel
_InterlockedExchange16_acq
_InterlockedExchange16_nf
_InterlockedExchange16_rel
_InterlockedExchange_acq
_InterlockedExchange_nf
_InterlockedExchange_rel
_InterlockedExchange64_acq
_InterlockedExchange64_nf
_InterlockedExchange64_rel
_InterlockedCompareExchange8_acq
ccD*cc
_InterlockedCompareExchange8_nf
_InterlockedCompareExchange8_rel
_InterlockedCompareExchange16_acq
ssD*ss
_InterlockedCompareExchange16_nf
_InterlockedCompareExchange16_rel
_InterlockedCompareExchange_acq
NiNiD*NiNi
_InterlockedCompareExchange_nf
_InterlockedCompareExchange_rel
_InterlockedCompareExchange64_acq
LLiLLiD*LLiLLi
_InterlockedCompareExchange64_nf
_InterlockedCompareExchange64_rel
_InterlockedCompareExchange128
UcLLiD*LLiLLiLLi*
_InterlockedCompareExchange128_acq
_InterlockedCompareExchange128_nf
_InterlockedCompareExchange128_rel
_InterlockedOr8_acq
_InterlockedOr8_nf
_InterlockedOr8_rel
_InterlockedOr16_acq
_InterlockedOr16_nf
_InterlockedOr16_rel
_InterlockedOr_acq
_InterlockedOr_nf
_InterlockedOr_rel
_InterlockedOr64_acq
_InterlockedOr64_nf
_InterlockedOr64_rel
_InterlockedXor8_acq
_InterlockedXor8_nf
_InterlockedXor8_rel
_InterlockedXor16_acq
_InterlockedXor16_nf
_InterlockedXor16_rel
_InterlockedXor_acq
_InterlockedXor_nf
_InterlockedXor_rel
_InterlockedXor64_acq
_InterlockedXor64_nf
_InterlockedXor64_rel
_InterlockedAnd8_acq
_InterlockedAnd8_nf
_InterlockedAnd8_rel
_InterlockedAnd16_acq
_InterlockedAnd16_nf
_InterlockedAnd16_rel
_InterlockedAnd_acq
_InterlockedAnd_nf
_InterlockedAnd_rel
_InterlockedAnd64_acq
_InterlockedAnd64_nf
_InterlockedAnd64_rel
_InterlockedIncrement16_acq
ssD*
_InterlockedIncrement16_nf
_InterlockedIncrement16_rel
_InterlockedIncrement_acq
NiNiD*
_InterlockedIncrement_nf
_InterlockedIncrement_rel
_InterlockedIncrement64_acq
_InterlockedIncrement64_nf
_InterlockedIncrement64_rel
_InterlockedDecrement16_acq
_InterlockedDecrement16_nf
_InterlockedDecrement16_rel
_InterlockedDecrement_acq
_InterlockedDecrement_nf
_InterlockedDecrement_rel
_InterlockedDecrement64_acq
_InterlockedDecrement64_nf
_InterlockedDecrement64_rel
_ReadWriteBarrier
__getReg
ULLii
_ReadStatusReg
LLii
_WriteStatusReg
viLLi
_AddressOfReturnAddress
__mulh
SLLiSLLiSLLi
__umulh
ULLiULLiULLi
_mcount
__ARM_FEATURE_QRDMX
__ARM_FEATURE_ATOMICS
__ARM_FEATURE_CRC32
__ARM_ARCH_8_3__
__ARM_FEATURE_COMPLEX
__ARM_FEATURE_JCVT
__ARM_ARCH_8_4__
__ARM_FEATURE_FRINT
__ARM_ARCH_8_5__
__ARM_ARCH_8_6__
__aarch64__
__AARCH64_CMODEL_
__ARM_ACLE
__ARM_ARCH
__ARM_ARCH_PROFILE
__ARM_64BIT_STATE
__ARM_PCS_AAPCS64
__ARM_ARCH_ISA_A64
__ARM_FEATURE_CLZ
__ARM_FEATURE_FMA
__ARM_FEATURE_LDREX
__ARM_FEATURE_IDIV
__ARM_FEATURE_DIV
__ARM_FEATURE_NUMERIC_MAXMIN
__ARM_FEATURE_DIRECTED_ROUNDING
__ARM_ALIGN_MAX_STACK_PWR
__ARM_FP
__ARM_FP16_FORMAT_IEEE
__ARM_FP16_ARGS
__ARM_FP_FAST
__ARM_SIZEOF_WCHAR_T
__ARM_SIZEOF_MINIMAL_ENUM
__ARM_NEON
__ARM_NEON_FP
__ARM_FEATURE_SVE
__ARM_FEATURE_SVE2
__ARM_FEATURE_SVE2_AES
__ARM_FEATURE_SVE2_BITPERM
__ARM_FEATURE_SVE2_SHA3
__ARM_FEATURE_SVE2_SM4
__ARM_FEATURE_CRYPTO
__ARM_FEATURE_AES
__ARM_FEATURE_SHA2
__ARM_FEATURE_SHA3
__ARM_FEATURE_SHA512
__ARM_FEATURE_SM3
__ARM_FEATURE_SM4
__ARM_FEATURE_UNALIGNED
__ARM_FEATURE_FP16_VECTOR_ARITHMETIC
__ARM_FEATURE_FP16_SCALAR_ARITHMETIC
__ARM_FEATURE_DOTPROD
__ARM_FEATURE_MEMORY_TAGGING
__ARM_FEATURE_TME
__ARM_FEATURE_MATMUL_INT8
__ARM_FEATURE_BF16
__ARM_FEATURE_BF16_VECTOR_ARITHMETIC
__ARM_BF16_FORMAT_ALTERNATIVE
__ARM_FEATURE_BF16_SCALAR_ARITHMETIC
__ARM_FEATURE_SVE_BF16
__ARM_FEATURE_SVE_MATMUL_FP64
__ARM_FEATURE_SVE_MATMUL_FP32
__ARM_FEATURE_SVE_MATMUL_INT8
__ARM_FEATURE_FP16_FML
__ARM_FEATURE_PAC_DEFAULT
__ARM_FEATURE_BTI_DEFAULT
__ARM_FEATURE_LS64
__ARM_FEATURE_RNG
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8
__ARM_FEATURE_SVE_BITS
__ARM_FEATURE_SVE_VECTOR_OPERATORS
aarch64
i8mm
bf16
+sve
+sve2-aes
+sve2-sha3
+sve2-sm4
+sve2-bitperm
+f64mm
+v8.1a
+v8r
+dotprod
+tme
+pauth
+lse
+ls64
+rand
+flagm
e-m:o-p:32:32-i64:64-i128:128-n32:64-S128
e-m:o-i64:64-i128:128-n32:64-S128
e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128
__AARCH64EL__
__AARCH64EB__
__AARCH_BIG_ENDIAN
__ARM_BIG_ENDIAN
E-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128
e-m:w-p:64:64-i32:32-i64:64-i128:128-n32:64-S128
_M_ARM64
__AARCH64_SIMD__
__ARM64_ARCH_8_32__
__ARM64_ARCH_8__
__ARM_NEON__
__REGISTER_PREFIX__
__arm64
__arm64__
__arm64e__
__RENDERSCRIPT__
mcount
__builtin_amdgcn_dispatch_ptr
__builtin_amdgcn_kernarg_segment_ptr
__builtin_amdgcn_implicitarg_ptr
__builtin_amdgcn_queue_ptr
__builtin_amdgcn_workgroup_id_x
__builtin_amdgcn_workgroup_id_y
__builtin_amdgcn_workgroup_id_z
__builtin_amdgcn_workitem_id_x
__builtin_amdgcn_workitem_id_y
__builtin_amdgcn_workitem_id_z
__builtin_amdgcn_workgroup_size_x
__builtin_amdgcn_workgroup_size_y
__builtin_amdgcn_workgroup_size_z
__builtin_amdgcn_grid_size_x
__builtin_amdgcn_grid_size_y
__builtin_amdgcn_grid_size_z
__builtin_amdgcn_mbcnt_hi
__builtin_amdgcn_mbcnt_lo
__builtin_amdgcn_s_memtime
s-memtime-inst
__builtin_amdgcn_s_getreg
UiIi
__builtin_amdgcn_s_setreg
vIiUi
__builtin_amdgcn_s_getpc
__builtin_amdgcn_s_waitcnt
__builtin_amdgcn_s_sendmsg
__builtin_amdgcn_s_sendmsghalt
__builtin_amdgcn_s_barrier
__builtin_amdgcn_wave_barrier
__builtin_amdgcn_s_dcache_inv
__builtin_amdgcn_buffer_wbinvl1
__builtin_amdgcn_ds_gws_init
vUiUi
__builtin_amdgcn_ds_gws_barrier
__builtin_amdgcn_ds_gws_sema_v
__builtin_amdgcn_ds_gws_sema_br
__builtin_amdgcn_ds_gws_sema_p
__builtin_amdgcn_fence
vUicC*
__builtin_amdgcn_groupstaticsize
__builtin_amdgcn_atomic_inc32
UZiUZiD*UZiUicC*
__builtin_amdgcn_atomic_inc64
UWiUWiD*UWiUicC*
__builtin_amdgcn_atomic_dec32
__builtin_amdgcn_atomic_dec64
__builtin_amdgcn_div_scale
dddbb*
__builtin_amdgcn_div_scalef
fffbb*
__builtin_amdgcn_div_fmas
ddddb
__builtin_amdgcn_div_fmasf
ffffb
__builtin_amdgcn_div_fixup
dddd
__builtin_amdgcn_div_fixupf
ffff
__builtin_amdgcn_trig_preop
__builtin_amdgcn_trig_preopf
__builtin_amdgcn_rcp
__builtin_amdgcn_rcpf
__builtin_amdgcn_sqrt
__builtin_amdgcn_sqrtf
__builtin_amdgcn_rsq
__builtin_amdgcn_rsqf
__builtin_amdgcn_rsq_clamp
__builtin_amdgcn_rsq_clampf
__builtin_amdgcn_sinf
__builtin_amdgcn_cosf
__builtin_amdgcn_log_clampf
__builtin_amdgcn_ldexp
__builtin_amdgcn_ldexpf
__builtin_amdgcn_frexp_mant
__builtin_amdgcn_frexp_mantf
__builtin_amdgcn_frexp_exp
__builtin_amdgcn_frexp_expf
__builtin_amdgcn_fract
__builtin_amdgcn_fractf
__builtin_amdgcn_lerp
UiUiUiUi
__builtin_amdgcn_class
__builtin_amdgcn_classf
__builtin_amdgcn_cubeid
__builtin_amdgcn_cubesc
__builtin_amdgcn_cubetc
__builtin_amdgcn_cubema
__builtin_amdgcn_s_sleep
__builtin_amdgcn_s_incperflevel
__builtin_amdgcn_s_decperflevel
__builtin_amdgcn_uicmp
WUiUiUiIi
__builtin_amdgcn_uicmpl
WUiWUiWUiIi
__builtin_amdgcn_sicmp
WUiiiIi
__builtin_amdgcn_sicmpl
WUiWiWiIi
__builtin_amdgcn_fcmp
WUiddIi
__builtin_amdgcn_fcmpf
WUiffIi
__builtin_amdgcn_ds_swizzle
__builtin_amdgcn_ds_permute
__builtin_amdgcn_ds_bpermute
__builtin_amdgcn_readfirstlane
__builtin_amdgcn_readlane
__builtin_amdgcn_fmed3f
__builtin_amdgcn_ds_faddf
ff*3fIiIiIb
__builtin_amdgcn_ds_fminf
__builtin_amdgcn_ds_fmaxf
__builtin_amdgcn_ds_append
ii*3
__builtin_amdgcn_ds_consume
__builtin_amdgcn_alignbit
__builtin_amdgcn_alignbyte
__builtin_amdgcn_ubfe
__builtin_amdgcn_sbfe
__builtin_amdgcn_cvt_pkrtz
E2hff
__builtin_amdgcn_cvt_pknorm_i16
E2sff
__builtin_amdgcn_cvt_pknorm_u16
E2Usff
__builtin_amdgcn_cvt_pk_i16
E2sii
__builtin_amdgcn_cvt_pk_u16
E2UsUiUi
__builtin_amdgcn_cvt_pk_u8_f32
UifUiUi
__builtin_amdgcn_sad_u8
__builtin_amdgcn_msad_u8
__builtin_amdgcn_sad_hi_u8
__builtin_amdgcn_sad_u16
__builtin_amdgcn_qsad_pk_u16_u8
WUiWUiUiWUi
__builtin_amdgcn_mqsad_pk_u16_u8
__builtin_amdgcn_mqsad_u32_u8
V4UiWUiUiV4Ui
__builtin_amdgcn_s_dcache_inv_vol
ci-insts
__builtin_amdgcn_buffer_wbinvl1_vol
__builtin_amdgcn_ds_gws_sema_release_all
__builtin_amdgcn_is_shared
bvC*0
flat-address-space
__builtin_amdgcn_is_private
__builtin_amdgcn_interp_p1_f16
ffUiUibUi
__builtin_amdgcn_interp_p2_f16
hffUiUibUi
__builtin_amdgcn_interp_p1
ffUiUiUi
__builtin_amdgcn_interp_p2
fffUiUiUi
__builtin_amdgcn_interp_mov
fUiUiUiUi
__builtin_amdgcn_div_fixuph
16-bit-insts
__builtin_amdgcn_rcph
__builtin_amdgcn_sqrth
__builtin_amdgcn_rsqh
__builtin_amdgcn_sinh
__builtin_amdgcn_cosh
__builtin_amdgcn_ldexph
__builtin_amdgcn_frexp_manth
__builtin_amdgcn_frexp_exph
__builtin_amdgcn_fracth
__builtin_amdgcn_classh
__builtin_amdgcn_s_memrealtime
s-memrealtime
__builtin_amdgcn_mov_dpp
iiIiIiIiIb
__builtin_amdgcn_update_dpp
iiiIiIiIiIb
__builtin_amdgcn_s_dcache_wb
gfx8-insts
__builtin_amdgcn_perm
__builtin_amdgcn_fmed3h
gfx9-insts
__builtin_amdgcn_global_atomic_fadd_f64
dd*1d
gfx90a-insts
__builtin_amdgcn_global_atomic_fadd_f32
ff*1f
__builtin_amdgcn_global_atomic_fadd_v2f16
V2hV2h*1V2h
__builtin_amdgcn_global_atomic_fmin_f64
__builtin_amdgcn_global_atomic_fmax_f64
__builtin_amdgcn_flat_atomic_fadd_f64
dd*0d
__builtin_amdgcn_flat_atomic_fmin_f64
__builtin_amdgcn_flat_atomic_fmax_f64
__builtin_amdgcn_ds_atomic_fadd_f64
dd*3d
__builtin_amdgcn_ds_atomic_fadd_f32
ff*3f
__builtin_amdgcn_fdot2
fV2hV2hfIb
dot7-insts
__builtin_amdgcn_sdot2
SiV2SsV2SsSiIb
dot2-insts
__builtin_amdgcn_udot2
UiV2UsV2UsUiIb
__builtin_amdgcn_sdot4
SiSiSiSiIb
dot1-insts
__builtin_amdgcn_udot4
UiUiUiUiIb
__builtin_amdgcn_sdot8
__builtin_amdgcn_udot8
__builtin_amdgcn_permlane16
UiUiUiUiUiIbIb
gfx10-insts
__builtin_amdgcn_permlanex16
__builtin_amdgcn_mov_dpp8
UiUiIUi
__builtin_amdgcn_image_bvh_intersect_ray
V4UiUifV4fV4fV4fV4Ui
__builtin_amdgcn_image_bvh_intersect_ray_h
V4UiUifV4fV4hV4hV4Ui
__builtin_amdgcn_image_bvh_intersect_ray_l
V4UiWUifV4fV4fV4fV4Ui
__builtin_amdgcn_image_bvh_intersect_ray_lh
V4UiWUifV4fV4hV4hV4Ui
__builtin_amdgcn_read_exec
__builtin_amdgcn_read_exec_lo
__builtin_amdgcn_read_exec_hi
__builtin_amdgcn_endpgm
__builtin_r600_implicitarg_ptr
Uc*7
__builtin_r600_read_tgid_x
__builtin_r600_read_tgid_y
__builtin_r600_read_tgid_z
__builtin_r600_read_tidig_x
__builtin_r600_read_tidig_y
__builtin_r600_read_tidig_z
__builtin_r600_recipsqrt_ieee
__builtin_r600_recipsqrt_ieeef
__builtin_amdgcn_mfma_f32_32x32x1f32
V32fffV32fIiIiIi
mai-insts
__builtin_amdgcn_mfma_f32_16x16x1f32
V16fffV16fIiIiIi
__builtin_amdgcn_mfma_f32_4x4x1f32
V4fffV4fIiIiIi
__builtin_amdgcn_mfma_f32_32x32x2f32
__builtin_amdgcn_mfma_f32_16x16x4f32
__builtin_amdgcn_mfma_f32_32x32x4f16
V32fV4hV4hV32fIiIiIi
__builtin_amdgcn_mfma_f32_16x16x4f16
V16fV4hV4hV16fIiIiIi
__builtin_amdgcn_mfma_f32_4x4x4f16
V4fV4hV4hV4fIiIiIi
__builtin_amdgcn_mfma_f32_32x32x8f16
__builtin_amdgcn_mfma_f32_16x16x16f16
__builtin_amdgcn_mfma_i32_32x32x4i8
V32iiiV32iIiIiIi
__builtin_amdgcn_mfma_i32_16x16x4i8
V16iiiV16iIiIiIi
__builtin_amdgcn_mfma_i32_4x4x4i8
V4iiiV4iIiIiIi
__builtin_amdgcn_mfma_i32_32x32x8i8
__builtin_amdgcn_mfma_i32_16x16x16i8
__builtin_amdgcn_mfma_f32_32x32x2bf16
V32fV2sV2sV32fIiIiIi
__builtin_amdgcn_mfma_f32_16x16x2bf16
V16fV2sV2sV16fIiIiIi
__builtin_amdgcn_mfma_f32_4x4x2bf16
V4fV2sV2sV4fIiIiIi
__builtin_amdgcn_mfma_f32_32x32x4bf16
__builtin_amdgcn_mfma_f32_16x16x8bf16
__builtin_amdgcn_mfma_f32_32x32x4bf16_1k
V32fV4sV4sV32fIiIiIi
__builtin_amdgcn_mfma_f32_16x16x4bf16_1k
V16fV4sV4sV16fIiIiIi
__builtin_amdgcn_mfma_f32_4x4x4bf16_1k
V4fV4sV4sV4fIiIiIi
__builtin_amdgcn_mfma_f32_32x32x8bf16_1k
__builtin_amdgcn_mfma_f32_16x16x16bf16_1k
__builtin_amdgcn_mfma_f64_16x16x4f64
V4dddV4dIiIiIi
__builtin_amdgcn_mfma_f64_4x4x4f64
ddddIiIiIi
v100
v101
v102
v103
v104
v105
v106
v107
v108
v109
v110
v111
v112
v113
v114
v115
v116
v117
v118
v119
v120
v121
v122
v123
v124
v125
v126
v127
v128
v129
v130
v131
v132
v133
v134
v135
v136
v137
v138
v139
v140
v141
v142
v143
v144
v145
v146
v147
v148
v149
v150
v151
v152
v153
v154
v155
v156
v157
v158
v159
v160
v161
v162
v163
v164
v165
v166
v167
v168
v169
v170
v171
v172
v173
v174
v175
v176
v177
v178
v179
v180
v181
v182
v183
v184
v185
v186
v187
v188
v189
v190
v191
v192
v193
v194
v195
v196
v197
v198
v199
v200
v201
v202
v203
v204
v205
v206
v207
v208
v209
v210
v211
v212
v213
v214
v215
v216
v217
v218
v219
v220
v221
v222
v223
v224
v225
v226
v227
v228
v229
v230
v231
v232
v233
v234
v235
v236
v237
v238
v239
v240
v241
v242
v243
v244
v245
v246
v247
v248
v249
v250
v251
v252
v253
v254
v255
s100
s101
s102
s103
s104
s105
s106
s107
s108
s109
s110
s111
s112
s113
s114
s115
s116
s117
s118
s119
s120
s121
s122
s123
s124
s125
s126
s127
exec
flat_scratch
exec_lo
exec_hi
vcc_lo
vcc_hi
flat_scratch_lo
flat_scratch_hi
a100
a101
a102
a103
a104
a105
a106
a107
a108
a109
a110
a111
a112
a113
a114
a115
a116
a117
a118
a119
a120
a121
a122
a123
a124
a125
a126
a127
a128
a129
a130
a131
a132
a133
a134
a135
a136
a137
a138
a139
a140
a141
a142
a143
a144
a145
a146
a147
a148
a149
a150
a151
a152
a153
a154
a155
a156
a157
a158
a159
a160
a161
a162
a163
a164
a165
a166
a167
a168
a169
a170
a171
a172
a173
a174
a175
a176
a177
a178
a179
a180
a181
a182
a183
a184
a185
a186
a187
a188
a189
a190
a191
a192
a193
a194
a195
a196
a197
a198
a199
a200
a201
a202
a203
a204
a205
a206
a207
a208
a209
a210
a211
a212
a213
a214
a215
a216
a217
a218
a219
a220
a221
a222
a223
a224
a225
a226
a227
a228
a229
a230
a231
a232
a233
a234
a235
a236
a237
a238
a239
a240
a241
a242
a243
a244
a245
a246
a247
a248
a249
a250
a251
a252
a253
a254
a255
dot5-insts
dot6-insts
dl-insts
gfx10-3-insts
dot3-insts
dot4-insts
e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7
e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1
__AMD__
__AMDGPU__
__AMDGCN__
__R600__
__amdgcn_processor__
__amdgcn_target_id__
__amdgcn_feature_
__HAS_FMAF__
FP_FAST_FMAF
__HAS_LDEXPF__
__HAS_FP64__
FP_FAST_FMA
__AMDGCN_WAVEFRONT_SIZE
tma_lo
tma_hi
tba_lo
tba_hi
__arc__
ilink1
blink
E-m:o-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
e-m:o-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
e-m:w-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S128
E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64
e-m:o-p:32:32-Fi8-i64:64-a:0:32-n32-S128
E-m:o-p:32:32-Fi8-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
e-m:o-p:32:32-Fi8-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
E-m:e-p:32:32-Fi8-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
e-m:e-p:32:32-Fi8-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
8M_BASE
8_1A
8_2A
8_3A
8_4A
8_5A
8_6A
8_7A
9_1A
9_2A
8M_MAIN
8_1M_MAIN
aapcs16
apcs-gnu
aapcs-linux
llvm.arm.gnu.eabi.mcount
mcount
thumb-mode
+arm
-thumb-mode
+thumb
+thumb-mode
+vfp2sp
+vfp2
+vfp3sp
+vfp3d16sp
+vfp3
+vfp3d16
+vfp4sp
+vfp4d16sp
+vfp4
+vfp4d16
+fp-armv8sp
+fp-armv8d16sp
+fp-armv8
+fp-armv8d16
+hwdiv
+hwdiv-arm
+fp16
+mve.fp
+cdecp0
+cdecp7
+neonfp
-neonfp
hwdiv-arm
__arm
__arm__
__ARM_ARCH_7K__
__ARM_ARCH_7A__
__ARM_ARCH_
__ARM_ARCH_ISA_ARM
__ARM_ARCH_ISA_THUMB
__ARM_32BIT_STATE
__THUMB_INTERWORK__
__ARM_EABI__
__ARM_PCS
__ARM_PCS_VFP
__SOFTFP__
__ARM_ROPI
__ARM_RWPI
__XSCALE__
__THUMBEL__
__thumb__
__thumb2__
__ARM_FEATURE_SIMD32
__ARM_ARCH_EXT_IDIV__
__APCS_32__
__VFP_FP__
__ARM_VFPV2__
__ARM_VFPV3__
__ARM_VFPV4__
__ARM_FPV5__
__ARM_FEATURE_MVE
__ARM_FEATURE_CDE
__ARM_FEATURE_CDE_COPROC
__ARM_FEATURE_CMSE
__ARM_FEATURE_DSP
__ARM_FEATURE_SAT
__ARM_FEATURE_QBIT
__builtin_arm_smulbb
__builtin_arm_smulbt
__builtin_arm_smultb
__builtin_arm_smultt
__builtin_arm_smulwb
__builtin_arm_smulwt
__builtin_arm_qadd
__builtin_arm_qsub
__builtin_arm_qdbl
__builtin_arm_ssat
__builtin_arm_usat
UiiUi
__builtin_arm_smlabb
iiii
__builtin_arm_smlabt
__builtin_arm_smlatb
__builtin_arm_smlatt
__builtin_arm_smlawb
__builtin_arm_smlawt
__builtin_arm_ssat16
__builtin_arm_usat16
__builtin_arm_sxtab16
__builtin_arm_sxtb16
__builtin_arm_uxtab16
__builtin_arm_uxtb16
__builtin_arm_sel
__builtin_arm_qadd8
__builtin_arm_qsub8
__builtin_arm_sadd8
__builtin_arm_shadd8
__builtin_arm_shsub8
__builtin_arm_ssub8
__builtin_arm_uadd8
__builtin_arm_uhadd8
__builtin_arm_uhsub8
__builtin_arm_uqadd8
__builtin_arm_uqsub8
__builtin_arm_usub8
__builtin_arm_usad8
__builtin_arm_usada8
__builtin_arm_qadd16
__builtin_arm_qasx
__builtin_arm_qsax
__builtin_arm_qsub16
__builtin_arm_sadd16
__builtin_arm_sasx
__builtin_arm_shadd16
__builtin_arm_shasx
__builtin_arm_shsax
__builtin_arm_shsub16
__builtin_arm_ssax
__builtin_arm_ssub16
__builtin_arm_uadd16
__builtin_arm_uasx
__builtin_arm_uhadd16
__builtin_arm_uhasx
__builtin_arm_uhsax
__builtin_arm_uhsub16
__builtin_arm_uqadd16
__builtin_arm_uqasx
__builtin_arm_uqsax
__builtin_arm_uqsub16
__builtin_arm_usax
__builtin_arm_usub16
__builtin_arm_smlad
__builtin_arm_smladx
__builtin_arm_smlald
LLiiiLLi
__builtin_arm_smlaldx
__builtin_arm_smlsd
__builtin_arm_smlsdx
__builtin_arm_smlsld
__builtin_arm_smlsldx
__builtin_arm_smuad
__builtin_arm_smuadx
__builtin_arm_smusd
__builtin_arm_smusdx
__builtin_arm_ldrexd
LLUiv*
__builtin_arm_strexd
iLLUiv*
__builtin_arm_get_fpscr
__builtin_arm_set_fpscr
__builtin_arm_vcvtr_f
__builtin_arm_vcvtr_d
__builtin_arm_ldc
vUIiUIivC*
__builtin_arm_ldcl
__builtin_arm_ldc2
__builtin_arm_ldc2l
__builtin_arm_stc
vUIiUIiv*
__builtin_arm_stcl
__builtin_arm_stc2
__builtin_arm_stc2l
__builtin_arm_cdp
vUIiUIiUIiUIiUIiUIi
__builtin_arm_cdp2
__builtin_arm_mcr
vUIiUIiUiUIiUIiUIi
__builtin_arm_mcr2
__builtin_arm_mrc
UiUIiUIiUIiUIiUIi
__builtin_arm_mrc2
__builtin_arm_mcrr
vUIiUIiLLUiUIi
__builtin_arm_mcrr2
__builtin_arm_mrrc
LLUiUIiUIiUIi
__builtin_arm_mrrc2
UiUiLLUi
__builtin_arm_cmse_TT
Uiv*
__builtin_arm_cmse_TTT
__builtin_arm_cmse_TTA
__builtin_arm_cmse_TTAT
__builtin_arm_dbg
vvC*UiUi
LLUicC*
vcC*LLUi
__builtin_arm_mve_asrl
__builtin_arm_mve_lsll
__builtin_arm_mve_sqrshr
__builtin_arm_mve_sqrshrl
__builtin_arm_mve_sqrshrl_sat48
__builtin_arm_mve_sqshl
__builtin_arm_mve_sqshll
__builtin_arm_mve_srshr
__builtin_arm_mve_srshrl
__builtin_arm_mve_uqrshl
__builtin_arm_mve_uqrshll
__builtin_arm_mve_uqrshll_sat48
__builtin_arm_mve_uqshl
__builtin_arm_mve_uqshll
__builtin_arm_mve_urshr
__builtin_arm_mve_urshrl
__builtin_arm_mve_vabavq_p_s16
__builtin_arm_mve_vabavq_p_s32
__builtin_arm_mve_vabavq_p_s8
__builtin_arm_mve_vabavq_p_u16
__builtin_arm_mve_vabavq_p_u32
__builtin_arm_mve_vabavq_p_u8
__builtin_arm_mve_vabavq_s16
__builtin_arm_mve_vabavq_s32
__builtin_arm_mve_vabavq_s8
__builtin_arm_mve_vabavq_u16
__builtin_arm_mve_vabavq_u32
__builtin_arm_mve_vabavq_u8
__builtin_arm_mve_vabdq_f16
__builtin_arm_mve_vabdq_f32
__builtin_arm_mve_vabdq_m_f16
__builtin_arm_mve_vabdq_m_f32
__builtin_arm_mve_vabdq_m_s16
__builtin_arm_mve_vabdq_m_s32
__builtin_arm_mve_vabdq_m_s8
__builtin_arm_mve_vabdq_m_u16
__builtin_arm_mve_vabdq_m_u32
__builtin_arm_mve_vabdq_m_u8
__builtin_arm_mve_vabdq_s16
__builtin_arm_mve_vabdq_s32
__builtin_arm_mve_vabdq_s8
__builtin_arm_mve_vabdq_u16
__builtin_arm_mve_vabdq_u32
__builtin_arm_mve_vabdq_u8
__builtin_arm_mve_vabdq_x_f16
__builtin_arm_mve_vabdq_x_f32
__builtin_arm_mve_vabdq_x_s16
__builtin_arm_mve_vabdq_x_s32
__builtin_arm_mve_vabdq_x_s8
__builtin_arm_mve_vabdq_x_u16
__builtin_arm_mve_vabdq_x_u32
__builtin_arm_mve_vabdq_x_u8
__builtin_arm_mve_vabsq_f16
__builtin_arm_mve_vabsq_f32
__builtin_arm_mve_vabsq_m_f16
__builtin_arm_mve_vabsq_m_f32
__builtin_arm_mve_vabsq_m_s16
__builtin_arm_mve_vabsq_m_s32
__builtin_arm_mve_vabsq_m_s8
__builtin_arm_mve_vabsq_s16
__builtin_arm_mve_vabsq_s32
__builtin_arm_mve_vabsq_s8
__builtin_arm_mve_vabsq_x_f16
__builtin_arm_mve_vabsq_x_f32
__builtin_arm_mve_vabsq_x_s16
__builtin_arm_mve_vabsq_x_s32
__builtin_arm_mve_vabsq_x_s8
__builtin_arm_mve_vadciq_m_s32
__builtin_arm_mve_vadciq_m_u32
__builtin_arm_mve_vadciq_s32
__builtin_arm_mve_vadciq_u32
__builtin_arm_mve_vadcq_m_s32
__builtin_arm_mve_vadcq_m_u32
__builtin_arm_mve_vadcq_s32
__builtin_arm_mve_vadcq_u32
__builtin_arm_mve_vaddlvaq_p_s32
__builtin_arm_mve_vaddlvaq_p_u32
__builtin_arm_mve_vaddlvaq_s32
__builtin_arm_mve_vaddlvaq_u32
__builtin_arm_mve_vaddlvq_p_s32
__builtin_arm_mve_vaddlvq_p_u32
__builtin_arm_mve_vaddlvq_s32
__builtin_arm_mve_vaddlvq_u32
__builtin_arm_mve_vaddq_f16
__builtin_arm_mve_vaddq_f32
__builtin_arm_mve_vaddq_m_f16
__builtin_arm_mve_vaddq_m_f32
__builtin_arm_mve_vaddq_m_n_f16
__builtin_arm_mve_vaddq_m_n_f32
__builtin_arm_mve_vaddq_m_n_s16
__builtin_arm_mve_vaddq_m_n_s32
__builtin_arm_mve_vaddq_m_n_s8
__builtin_arm_mve_vaddq_m_n_u16
__builtin_arm_mve_vaddq_m_n_u32
__builtin_arm_mve_vaddq_m_n_u8
__builtin_arm_mve_vaddq_m_s16
__builtin_arm_mve_vaddq_m_s32
__builtin_arm_mve_vaddq_m_s8
__builtin_arm_mve_vaddq_m_u16
__builtin_arm_mve_vaddq_m_u32
__builtin_arm_mve_vaddq_m_u8
__builtin_arm_mve_vaddq_n_f16
__builtin_arm_mve_vaddq_n_f32
__builtin_arm_mve_vaddq_n_s16
__builtin_arm_mve_vaddq_n_s32
__builtin_arm_mve_vaddq_n_s8
__builtin_arm_mve_vaddq_n_u16
__builtin_arm_mve_vaddq_n_u32
__builtin_arm_mve_vaddq_n_u8
__builtin_arm_mve_vaddq_s16
__builtin_arm_mve_vaddq_s32
__builtin_arm_mve_vaddq_s8
__builtin_arm_mve_vaddq_u16
__builtin_arm_mve_vaddq_u32
__builtin_arm_mve_vaddq_u8
__builtin_arm_mve_vaddq_x_f16
__builtin_arm_mve_vaddq_x_f32
__builtin_arm_mve_vaddq_x_n_f16
__builtin_arm_mve_vaddq_x_n_f32
__builtin_arm_mve_vaddq_x_n_s16
__builtin_arm_mve_vaddq_x_n_s32
__builtin_arm_mve_vaddq_x_n_s8
__builtin_arm_mve_vaddq_x_n_u16
__builtin_arm_mve_vaddq_x_n_u32
__builtin_arm_mve_vaddq_x_n_u8
__builtin_arm_mve_vaddq_x_s16
__builtin_arm_mve_vaddq_x_s32
__builtin_arm_mve_vaddq_x_s8
__builtin_arm_mve_vaddq_x_u16
__builtin_arm_mve_vaddq_x_u32
__builtin_arm_mve_vaddq_x_u8
__builtin_arm_mve_vaddvaq_p_s16
__builtin_arm_mve_vaddvaq_p_s32
__builtin_arm_mve_vaddvaq_p_s8
__builtin_arm_mve_vaddvaq_p_u16
__builtin_arm_mve_vaddvaq_p_u32
__builtin_arm_mve_vaddvaq_p_u8
__builtin_arm_mve_vaddvaq_s16
__builtin_arm_mve_vaddvaq_s32
__builtin_arm_mve_vaddvaq_s8
__builtin_arm_mve_vaddvaq_u16
__builtin_arm_mve_vaddvaq_u32
__builtin_arm_mve_vaddvaq_u8
__builtin_arm_mve_vaddvq_p_s16
__builtin_arm_mve_vaddvq_p_s32
__builtin_arm_mve_vaddvq_p_s8
__builtin_arm_mve_vaddvq_p_u16
__builtin_arm_mve_vaddvq_p_u32
__builtin_arm_mve_vaddvq_p_u8
__builtin_arm_mve_vaddvq_s16
__builtin_arm_mve_vaddvq_s32
__builtin_arm_mve_vaddvq_s8
__builtin_arm_mve_vaddvq_u16
__builtin_arm_mve_vaddvq_u32
__builtin_arm_mve_vaddvq_u8
__builtin_arm_mve_vandq_f16
__builtin_arm_mve_vandq_f32
__builtin_arm_mve_vandq_m_f16
__builtin_arm_mve_vandq_m_f32
__builtin_arm_mve_vandq_m_s16
__builtin_arm_mve_vandq_m_s32
__builtin_arm_mve_vandq_m_s8
__builtin_arm_mve_vandq_m_u16
__builtin_arm_mve_vandq_m_u32
__builtin_arm_mve_vandq_m_u8
__builtin_arm_mve_vandq_s16
__builtin_arm_mve_vandq_s32
__builtin_arm_mve_vandq_s8
__builtin_arm_mve_vandq_u16
__builtin_arm_mve_vandq_u32
__builtin_arm_mve_vandq_u8
__builtin_arm_mve_vandq_x_f16
__builtin_arm_mve_vandq_x_f32
__builtin_arm_mve_vandq_x_s16
__builtin_arm_mve_vandq_x_s32
__builtin_arm_mve_vandq_x_s8
__builtin_arm_mve_vandq_x_u16
__builtin_arm_mve_vandq_x_u32
__builtin_arm_mve_vandq_x_u8
__builtin_arm_mve_vbicq_f16
__builtin_arm_mve_vbicq_f32
__builtin_arm_mve_vbicq_m_f16
__builtin_arm_mve_vbicq_m_f32
__builtin_arm_mve_vbicq_m_n_s16
__builtin_arm_mve_vbicq_m_n_s32
__builtin_arm_mve_vbicq_m_n_u16
__builtin_arm_mve_vbicq_m_n_u32
__builtin_arm_mve_vbicq_m_s16
__builtin_arm_mve_vbicq_m_s32
__builtin_arm_mve_vbicq_m_s8
__builtin_arm_mve_vbicq_m_u16
__builtin_arm_mve_vbicq_m_u32
__builtin_arm_mve_vbicq_m_u8
__builtin_arm_mve_vbicq_n_s16
__builtin_arm_mve_vbicq_n_s32
__builtin_arm_mve_vbicq_n_u16
__builtin_arm_mve_vbicq_n_u32
__builtin_arm_mve_vbicq_s16
__builtin_arm_mve_vbicq_s32
__builtin_arm_mve_vbicq_s8
__builtin_arm_mve_vbicq_u16
__builtin_arm_mve_vbicq_u32
__builtin_arm_mve_vbicq_u8
__builtin_arm_mve_vbicq_x_f16
__builtin_arm_mve_vbicq_x_f32
__builtin_arm_mve_vbicq_x_s16
__builtin_arm_mve_vbicq_x_s32
__builtin_arm_mve_vbicq_x_s8
__builtin_arm_mve_vbicq_x_u16
__builtin_arm_mve_vbicq_x_u32
__builtin_arm_mve_vbicq_x_u8
__builtin_arm_mve_vbrsrq_m_n_f16
__builtin_arm_mve_vbrsrq_m_n_f32
__builtin_arm_mve_vbrsrq_m_n_s16
__builtin_arm_mve_vbrsrq_m_n_s32
__builtin_arm_mve_vbrsrq_m_n_s8
__builtin_arm_mve_vbrsrq_m_n_u16
__builtin_arm_mve_vbrsrq_m_n_u32
__builtin_arm_mve_vbrsrq_m_n_u8
__builtin_arm_mve_vbrsrq_n_f16
__builtin_arm_mve_vbrsrq_n_f32
__builtin_arm_mve_vbrsrq_n_s16
__builtin_arm_mve_vbrsrq_n_s32
__builtin_arm_mve_vbrsrq_n_s8
__builtin_arm_mve_vbrsrq_n_u16
__builtin_arm_mve_vbrsrq_n_u32
__builtin_arm_mve_vbrsrq_n_u8
__builtin_arm_mve_vbrsrq_x_n_f16
__builtin_arm_mve_vbrsrq_x_n_f32
__builtin_arm_mve_vbrsrq_x_n_s16
__builtin_arm_mve_vbrsrq_x_n_s32
__builtin_arm_mve_vbrsrq_x_n_s8
__builtin_arm_mve_vbrsrq_x_n_u16
__builtin_arm_mve_vbrsrq_x_n_u32
__builtin_arm_mve_vbrsrq_x_n_u8
__builtin_arm_mve_vcaddq_rot270_f16
__builtin_arm_mve_vcaddq_rot270_f32
__builtin_arm_mve_vcaddq_rot270_m_f16
__builtin_arm_mve_vcaddq_rot270_m_f32
__builtin_arm_mve_vcaddq_rot270_m_s16
__builtin_arm_mve_vcaddq_rot270_m_s32
__builtin_arm_mve_vcaddq_rot270_m_s8
__builtin_arm_mve_vcaddq_rot270_m_u16
__builtin_arm_mve_vcaddq_rot270_m_u32
__builtin_arm_mve_vcaddq_rot270_m_u8
__builtin_arm_mve_vcaddq_rot270_s16
__builtin_arm_mve_vcaddq_rot270_s32
__builtin_arm_mve_vcaddq_rot270_s8
__builtin_arm_mve_vcaddq_rot270_u16
__builtin_arm_mve_vcaddq_rot270_u32
__builtin_arm_mve_vcaddq_rot270_u8
__builtin_arm_mve_vcaddq_rot270_x_f16
__builtin_arm_mve_vcaddq_rot270_x_f32
__builtin_arm_mve_vcaddq_rot270_x_s16
__builtin_arm_mve_vcaddq_rot270_x_s32
__builtin_arm_mve_vcaddq_rot270_x_s8
__builtin_arm_mve_vcaddq_rot270_x_u16
__builtin_arm_mve_vcaddq_rot270_x_u32
__builtin_arm_mve_vcaddq_rot270_x_u8
__builtin_arm_mve_vcaddq_rot90_f16
__builtin_arm_mve_vcaddq_rot90_f32
__builtin_arm_mve_vcaddq_rot90_m_f16
__builtin_arm_mve_vcaddq_rot90_m_f32
__builtin_arm_mve_vcaddq_rot90_m_s16
__builtin_arm_mve_vcaddq_rot90_m_s32
__builtin_arm_mve_vcaddq_rot90_m_s8
__builtin_arm_mve_vcaddq_rot90_m_u16
__builtin_arm_mve_vcaddq_rot90_m_u32
__builtin_arm_mve_vcaddq_rot90_m_u8
__builtin_arm_mve_vcaddq_rot90_s16
__builtin_arm_mve_vcaddq_rot90_s32
__builtin_arm_mve_vcaddq_rot90_s8
__builtin_arm_mve_vcaddq_rot90_u16
__builtin_arm_mve_vcaddq_rot90_u32
__builtin_arm_mve_vcaddq_rot90_u8
__builtin_arm_mve_vcaddq_rot90_x_f16
__builtin_arm_mve_vcaddq_rot90_x_f32
__builtin_arm_mve_vcaddq_rot90_x_s16
__builtin_arm_mve_vcaddq_rot90_x_s32
__builtin_arm_mve_vcaddq_rot90_x_s8
__builtin_arm_mve_vcaddq_rot90_x_u16
__builtin_arm_mve_vcaddq_rot90_x_u32
__builtin_arm_mve_vcaddq_rot90_x_u8
__builtin_arm_mve_vclsq_m_s16
__builtin_arm_mve_vclsq_m_s32
__builtin_arm_mve_vclsq_m_s8
__builtin_arm_mve_vclsq_s16
__builtin_arm_mve_vclsq_s32
__builtin_arm_mve_vclsq_s8
__builtin_arm_mve_vclsq_x_s16
__builtin_arm_mve_vclsq_x_s32
__builtin_arm_mve_vclsq_x_s8
__builtin_arm_mve_vclzq_m_s16
__builtin_arm_mve_vclzq_m_s32
__builtin_arm_mve_vclzq_m_s8
__builtin_arm_mve_vclzq_m_u16
__builtin_arm_mve_vclzq_m_u32
__builtin_arm_mve_vclzq_m_u8
__builtin_arm_mve_vclzq_s16
__builtin_arm_mve_vclzq_s32
__builtin_arm_mve_vclzq_s8
__builtin_arm_mve_vclzq_u16
__builtin_arm_mve_vclzq_u32
__builtin_arm_mve_vclzq_u8
__builtin_arm_mve_vclzq_x_s16
__builtin_arm_mve_vclzq_x_s32
__builtin_arm_mve_vclzq_x_s8
__builtin_arm_mve_vclzq_x_u16
__builtin_arm_mve_vclzq_x_u32
__builtin_arm_mve_vclzq_x_u8
__builtin_arm_mve_vcmlaq_f16
__builtin_arm_mve_vcmlaq_f32
__builtin_arm_mve_vcmlaq_m_f16
__builtin_arm_mve_vcmlaq_m_f32
__builtin_arm_mve_vcmlaq_rot180_f16
__builtin_arm_mve_vcmlaq_rot180_f32
__builtin_arm_mve_vcmlaq_rot180_m_f16
__builtin_arm_mve_vcmlaq_rot180_m_f32
__builtin_arm_mve_vcmlaq_rot270_f16
__builtin_arm_mve_vcmlaq_rot270_f32
__builtin_arm_mve_vcmlaq_rot270_m_f16
__builtin_arm_mve_vcmlaq_rot270_m_f32
__builtin_arm_mve_vcmlaq_rot90_f16
__builtin_arm_mve_vcmlaq_rot90_f32
__builtin_arm_mve_vcmlaq_rot90_m_f16
__builtin_arm_mve_vcmlaq_rot90_m_f32
__builtin_arm_mve_vcmpcsq_m_n_u16
__builtin_arm_mve_vcmpcsq_m_n_u32
__builtin_arm_mve_vcmpcsq_m_n_u8
__builtin_arm_mve_vcmpcsq_m_u16
__builtin_arm_mve_vcmpcsq_m_u32
__builtin_arm_mve_vcmpcsq_m_u8
__builtin_arm_mve_vcmpcsq_n_u16
__builtin_arm_mve_vcmpcsq_n_u32
__builtin_arm_mve_vcmpcsq_n_u8
__builtin_arm_mve_vcmpcsq_u16
__builtin_arm_mve_vcmpcsq_u32
__builtin_arm_mve_vcmpcsq_u8
__builtin_arm_mve_vcmpeqq_f16
__builtin_arm_mve_vcmpeqq_f32
__builtin_arm_mve_vcmpeqq_m_f16
__builtin_arm_mve_vcmpeqq_m_f32
__builtin_arm_mve_vcmpeqq_m_n_f16
__builtin_arm_mve_vcmpeqq_m_n_f32
__builtin_arm_mve_vcmpeqq_m_n_s16
__builtin_arm_mve_vcmpeqq_m_n_s32
__builtin_arm_mve_vcmpeqq_m_n_s8
__builtin_arm_mve_vcmpeqq_m_n_u16
__builtin_arm_mve_vcmpeqq_m_n_u32
__builtin_arm_mve_vcmpeqq_m_n_u8
__builtin_arm_mve_vcmpeqq_m_s16
__builtin_arm_mve_vcmpeqq_m_s32
__builtin_arm_mve_vcmpeqq_m_s8
__builtin_arm_mve_vcmpeqq_m_u16
__builtin_arm_mve_vcmpeqq_m_u32
__builtin_arm_mve_vcmpeqq_m_u8
__builtin_arm_mve_vcmpeqq_n_f16
__builtin_arm_mve_vcmpeqq_n_f32
__builtin_arm_mve_vcmpeqq_n_s16
__builtin_arm_mve_vcmpeqq_n_s32
__builtin_arm_mve_vcmpeqq_n_s8
__builtin_arm_mve_vcmpeqq_n_u16
__builtin_arm_mve_vcmpeqq_n_u32
__builtin_arm_mve_vcmpeqq_n_u8
__builtin_arm_mve_vcmpeqq_s16
__builtin_arm_mve_vcmpeqq_s32
__builtin_arm_mve_vcmpeqq_s8
__builtin_arm_mve_vcmpeqq_u16
__builtin_arm_mve_vcmpeqq_u32
__builtin_arm_mve_vcmpeqq_u8
__builtin_arm_mve_vcmpgeq_f16
__builtin_arm_mve_vcmpgeq_f32
__builtin_arm_mve_vcmpgeq_m_f16
__builtin_arm_mve_vcmpgeq_m_f32
__builtin_arm_mve_vcmpgeq_m_n_f16
__builtin_arm_mve_vcmpgeq_m_n_f32
__builtin_arm_mve_vcmpgeq_m_n_s16
__builtin_arm_mve_vcmpgeq_m_n_s32
__builtin_arm_mve_vcmpgeq_m_n_s8
__builtin_arm_mve_vcmpgeq_m_s16
__builtin_arm_mve_vcmpgeq_m_s32
__builtin_arm_mve_vcmpgeq_m_s8
__builtin_arm_mve_vcmpgeq_n_f16
__builtin_arm_mve_vcmpgeq_n_f32
__builtin_arm_mve_vcmpgeq_n_s16
__builtin_arm_mve_vcmpgeq_n_s32
__builtin_arm_mve_vcmpgeq_n_s8
__builtin_arm_mve_vcmpgeq_s16
__builtin_arm_mve_vcmpgeq_s32
__builtin_arm_mve_vcmpgeq_s8
__builtin_arm_mve_vcmpgtq_f16
__builtin_arm_mve_vcmpgtq_f32
__builtin_arm_mve_vcmpgtq_m_f16
__builtin_arm_mve_vcmpgtq_m_f32
__builtin_arm_mve_vcmpgtq_m_n_f16
__builtin_arm_mve_vcmpgtq_m_n_f32
__builtin_arm_mve_vcmpgtq_m_n_s16
__builtin_arm_mve_vcmpgtq_m_n_s32
__builtin_arm_mve_vcmpgtq_m_n_s8
__builtin_arm_mve_vcmpgtq_m_s16
__builtin_arm_mve_vcmpgtq_m_s32
__builtin_arm_mve_vcmpgtq_m_s8
__builtin_arm_mve_vcmpgtq_n_f16
__builtin_arm_mve_vcmpgtq_n_f32
__builtin_arm_mve_vcmpgtq_n_s16
__builtin_arm_mve_vcmpgtq_n_s32
__builtin_arm_mve_vcmpgtq_n_s8
__builtin_arm_mve_vcmpgtq_s16
__builtin_arm_mve_vcmpgtq_s32
__builtin_arm_mve_vcmpgtq_s8
__builtin_arm_mve_vcmphiq_m_n_u16
__builtin_arm_mve_vcmphiq_m_n_u32
__builtin_arm_mve_vcmphiq_m_n_u8
__builtin_arm_mve_vcmphiq_m_u16
__builtin_arm_mve_vcmphiq_m_u32
__builtin_arm_mve_vcmphiq_m_u8
__builtin_arm_mve_vcmphiq_n_u16
__builtin_arm_mve_vcmphiq_n_u32
__builtin_arm_mve_vcmphiq_n_u8
__builtin_arm_mve_vcmphiq_u16
__builtin_arm_mve_vcmphiq_u32
__builtin_arm_mve_vcmphiq_u8
__builtin_arm_mve_vcmpleq_f16
__builtin_arm_mve_vcmpleq_f32
__builtin_arm_mve_vcmpleq_m_f16
__builtin_arm_mve_vcmpleq_m_f32
__builtin_arm_mve_vcmpleq_m_n_f16
__builtin_arm_mve_vcmpleq_m_n_f32
__builtin_arm_mve_vcmpleq_m_n_s16
__builtin_arm_mve_vcmpleq_m_n_s32
__builtin_arm_mve_vcmpleq_m_n_s8
__builtin_arm_mve_vcmpleq_m_s16
__builtin_arm_mve_vcmpleq_m_s32
__builtin_arm_mve_vcmpleq_m_s8
__builtin_arm_mve_vcmpleq_n_f16
__builtin_arm_mve_vcmpleq_n_f32
__builtin_arm_mve_vcmpleq_n_s16
__builtin_arm_mve_vcmpleq_n_s32
__builtin_arm_mve_vcmpleq_n_s8
__builtin_arm_mve_vcmpleq_s16
__builtin_arm_mve_vcmpleq_s32
__builtin_arm_mve_vcmpleq_s8
__builtin_arm_mve_vcmpltq_f16
__builtin_arm_mve_vcmpltq_f32
__builtin_arm_mve_vcmpltq_m_f16
__builtin_arm_mve_vcmpltq_m_f32
__builtin_arm_mve_vcmpltq_m_n_f16
__builtin_arm_mve_vcmpltq_m_n_f32
__builtin_arm_mve_vcmpltq_m_n_s16
__builtin_arm_mve_vcmpltq_m_n_s32
__builtin_arm_mve_vcmpltq_m_n_s8
__builtin_arm_mve_vcmpltq_m_s16
__builtin_arm_mve_vcmpltq_m_s32
__builtin_arm_mve_vcmpltq_m_s8
__builtin_arm_mve_vcmpltq_n_f16
__builtin_arm_mve_vcmpltq_n_f32
__builtin_arm_mve_vcmpltq_n_s16
__builtin_arm_mve_vcmpltq_n_s32
__builtin_arm_mve_vcmpltq_n_s8
__builtin_arm_mve_vcmpltq_s16
__builtin_arm_mve_vcmpltq_s32
__builtin_arm_mve_vcmpltq_s8
__builtin_arm_mve_vcmpneq_f16
__builtin_arm_mve_vcmpneq_f32
__builtin_arm_mve_vcmpneq_m_f16
__builtin_arm_mve_vcmpneq_m_f32
__builtin_arm_mve_vcmpneq_m_n_f16
__builtin_arm_mve_vcmpneq_m_n_f32
__builtin_arm_mve_vcmpneq_m_n_s16
__builtin_arm_mve_vcmpneq_m_n_s32
__builtin_arm_mve_vcmpneq_m_n_s8
__builtin_arm_mve_vcmpneq_m_n_u16
__builtin_arm_mve_vcmpneq_m_n_u32
__builtin_arm_mve_vcmpneq_m_n_u8
__builtin_arm_mve_vcmpneq_m_s16
__builtin_arm_mve_vcmpneq_m_s32
__builtin_arm_mve_vcmpneq_m_s8
__builtin_arm_mve_vcmpneq_m_u16
__builtin_arm_mve_vcmpneq_m_u32
__builtin_arm_mve_vcmpneq_m_u8
__builtin_arm_mve_vcmpneq_n_f16
__builtin_arm_mve_vcmpneq_n_f32
__builtin_arm_mve_vcmpneq_n_s16
__builtin_arm_mve_vcmpneq_n_s32
__builtin_arm_mve_vcmpneq_n_s8
__builtin_arm_mve_vcmpneq_n_u16
__builtin_arm_mve_vcmpneq_n_u32
__builtin_arm_mve_vcmpneq_n_u8
__builtin_arm_mve_vcmpneq_s16
__builtin_arm_mve_vcmpneq_s32
__builtin_arm_mve_vcmpneq_s8
__builtin_arm_mve_vcmpneq_u16
__builtin_arm_mve_vcmpneq_u32
__builtin_arm_mve_vcmpneq_u8
__builtin_arm_mve_vcmulq_f16
__builtin_arm_mve_vcmulq_f32
__builtin_arm_mve_vcmulq_m_f16
__builtin_arm_mve_vcmulq_m_f32
__builtin_arm_mve_vcmulq_rot180_f16
__builtin_arm_mve_vcmulq_rot180_f32
__builtin_arm_mve_vcmulq_rot180_m_f16
__builtin_arm_mve_vcmulq_rot180_m_f32
__builtin_arm_mve_vcmulq_rot180_x_f16
__builtin_arm_mve_vcmulq_rot180_x_f32
__builtin_arm_mve_vcmulq_rot270_f16
__builtin_arm_mve_vcmulq_rot270_f32
__builtin_arm_mve_vcmulq_rot270_m_f16
__builtin_arm_mve_vcmulq_rot270_m_f32
__builtin_arm_mve_vcmulq_rot270_x_f16
__builtin_arm_mve_vcmulq_rot270_x_f32
__builtin_arm_mve_vcmulq_rot90_f16
__builtin_arm_mve_vcmulq_rot90_f32
__builtin_arm_mve_vcmulq_rot90_m_f16
__builtin_arm_mve_vcmulq_rot90_m_f32
__builtin_arm_mve_vcmulq_rot90_x_f16
__builtin_arm_mve_vcmulq_rot90_x_f32
__builtin_arm_mve_vcmulq_x_f16
__builtin_arm_mve_vcmulq_x_f32
__builtin_arm_mve_vcreateq_f16
__builtin_arm_mve_vcreateq_f32
__builtin_arm_mve_vcreateq_s16
__builtin_arm_mve_vcreateq_s32
__builtin_arm_mve_vcreateq_s64
__builtin_arm_mve_vcreateq_s8
__builtin_arm_mve_vcreateq_u16
__builtin_arm_mve_vcreateq_u32
__builtin_arm_mve_vcreateq_u64
__builtin_arm_mve_vcreateq_u8
__builtin_arm_mve_vctp16q
__builtin_arm_mve_vctp16q_m
__builtin_arm_mve_vctp32q
__builtin_arm_mve_vctp32q_m
__builtin_arm_mve_vctp64q
__builtin_arm_mve_vctp64q_m
__builtin_arm_mve_vctp8q
__builtin_arm_mve_vctp8q_m
__builtin_arm_mve_vcvtaq_m_s16_f16
__builtin_arm_mve_vcvtaq_m_s32_f32
__builtin_arm_mve_vcvtaq_m_u16_f16
__builtin_arm_mve_vcvtaq_m_u32_f32
__builtin_arm_mve_vcvtaq_s16_f16
__builtin_arm_mve_vcvtaq_s32_f32
__builtin_arm_mve_vcvtaq_u16_f16
__builtin_arm_mve_vcvtaq_u32_f32
__builtin_arm_mve_vcvtaq_x_s16_f16
__builtin_arm_mve_vcvtaq_x_s32_f32
__builtin_arm_mve_vcvtaq_x_u16_f16
__builtin_arm_mve_vcvtaq_x_u32_f32
__builtin_arm_mve_vcvtbq_f16_f32
__builtin_arm_mve_vcvtbq_f32_f16
__builtin_arm_mve_vcvtbq_m_f16_f32
__builtin_arm_mve_vcvtbq_m_f32_f16
__builtin_arm_mve_vcvtbq_x_f32_f16
__builtin_arm_mve_vcvtmq_m_s16_f16
__builtin_arm_mve_vcvtmq_m_s32_f32
__builtin_arm_mve_vcvtmq_m_u16_f16
__builtin_arm_mve_vcvtmq_m_u32_f32
__builtin_arm_mve_vcvtmq_s16_f16
__builtin_arm_mve_vcvtmq_s32_f32
__builtin_arm_mve_vcvtmq_u16_f16
__builtin_arm_mve_vcvtmq_u32_f32
__builtin_arm_mve_vcvtmq_x_s16_f16
__builtin_arm_mve_vcvtmq_x_s32_f32
__builtin_arm_mve_vcvtmq_x_u16_f16
__builtin_arm_mve_vcvtmq_x_u32_f32
__builtin_arm_mve_vcvtnq_m_s16_f16
__builtin_arm_mve_vcvtnq_m_s32_f32
__builtin_arm_mve_vcvtnq_m_u16_f16
__builtin_arm_mve_vcvtnq_m_u32_f32
__builtin_arm_mve_vcvtnq_s16_f16
__builtin_arm_mve_vcvtnq_s32_f32
__builtin_arm_mve_vcvtnq_u16_f16
__builtin_arm_mve_vcvtnq_u32_f32
__builtin_arm_mve_vcvtnq_x_s16_f16
__builtin_arm_mve_vcvtnq_x_s32_f32
__builtin_arm_mve_vcvtnq_x_u16_f16
__builtin_arm_mve_vcvtnq_x_u32_f32
__builtin_arm_mve_vcvtpq_m_s16_f16
__builtin_arm_mve_vcvtpq_m_s32_f32
__builtin_arm_mve_vcvtpq_m_u16_f16
__builtin_arm_mve_vcvtpq_m_u32_f32
__builtin_arm_mve_vcvtpq_s16_f16
__builtin_arm_mve_vcvtpq_s32_f32
__builtin_arm_mve_vcvtpq_u16_f16
__builtin_arm_mve_vcvtpq_u32_f32
__builtin_arm_mve_vcvtpq_x_s16_f16
__builtin_arm_mve_vcvtpq_x_s32_f32
__builtin_arm_mve_vcvtpq_x_u16_f16
__builtin_arm_mve_vcvtpq_x_u32_f32
__builtin_arm_mve_vcvtq_f16_s16
__builtin_arm_mve_vcvtq_f16_u16
__builtin_arm_mve_vcvtq_f32_s32
__builtin_arm_mve_vcvtq_f32_u32
__builtin_arm_mve_vcvtq_m_f16_s16
__builtin_arm_mve_vcvtq_m_f16_u16
__builtin_arm_mve_vcvtq_m_f32_s32
__builtin_arm_mve_vcvtq_m_f32_u32
__builtin_arm_mve_vcvtq_m_n_f16_s16
__builtin_arm_mve_vcvtq_m_n_f16_u16
__builtin_arm_mve_vcvtq_m_n_f32_s32
__builtin_arm_mve_vcvtq_m_n_f32_u32
__builtin_arm_mve_vcvtq_m_n_s16_f16
__builtin_arm_mve_vcvtq_m_n_s32_f32
__builtin_arm_mve_vcvtq_m_n_u16_f16
__builtin_arm_mve_vcvtq_m_n_u32_f32
__builtin_arm_mve_vcvtq_m_s16_f16
__builtin_arm_mve_vcvtq_m_s32_f32
__builtin_arm_mve_vcvtq_m_u16_f16
__builtin_arm_mve_vcvtq_m_u32_f32
__builtin_arm_mve_vcvtq_n_f16_s16
__builtin_arm_mve_vcvtq_n_f16_u16
__builtin_arm_mve_vcvtq_n_f32_s32
__builtin_arm_mve_vcvtq_n_f32_u32
__builtin_arm_mve_vcvtq_n_s16_f16
__builtin_arm_mve_vcvtq_n_s32_f32
__builtin_arm_mve_vcvtq_n_u16_f16
__builtin_arm_mve_vcvtq_n_u32_f32
__builtin_arm_mve_vcvtq_s16_f16
__builtin_arm_mve_vcvtq_s32_f32
__builtin_arm_mve_vcvtq_u16_f16
__builtin_arm_mve_vcvtq_u32_f32
__builtin_arm_mve_vcvtq_x_f16_s16
__builtin_arm_mve_vcvtq_x_f16_u16
__builtin_arm_mve_vcvtq_x_f32_s32
__builtin_arm_mve_vcvtq_x_f32_u32
__builtin_arm_mve_vcvtq_x_n_f16_s16
__builtin_arm_mve_vcvtq_x_n_f16_u16
__builtin_arm_mve_vcvtq_x_n_f32_s32
__builtin_arm_mve_vcvtq_x_n_f32_u32
__builtin_arm_mve_vcvtq_x_n_s16_f16
__builtin_arm_mve_vcvtq_x_n_s32_f32
__builtin_arm_mve_vcvtq_x_n_u16_f16
__builtin_arm_mve_vcvtq_x_n_u32_f32
__builtin_arm_mve_vcvtq_x_s16_f16
__builtin_arm_mve_vcvtq_x_s32_f32
__builtin_arm_mve_vcvtq_x_u16_f16
__builtin_arm_mve_vcvtq_x_u32_f32
__builtin_arm_mve_vcvttq_f16_f32
__builtin_arm_mve_vcvttq_f32_f16
__builtin_arm_mve_vcvttq_m_f16_f32
__builtin_arm_mve_vcvttq_m_f32_f16
__builtin_arm_mve_vcvttq_x_f32_f16
__builtin_arm_mve_vddupq_m_n_u16
__builtin_arm_mve_vddupq_m_n_u32
__builtin_arm_mve_vddupq_m_n_u8
__builtin_arm_mve_vddupq_m_wb_u16
__builtin_arm_mve_vddupq_m_wb_u32
__builtin_arm_mve_vddupq_m_wb_u8
__builtin_arm_mve_vddupq_n_u16
__builtin_arm_mve_vddupq_n_u32
__builtin_arm_mve_vddupq_n_u8
__builtin_arm_mve_vddupq_wb_u16
__builtin_arm_mve_vddupq_wb_u32
__builtin_arm_mve_vddupq_wb_u8
__builtin_arm_mve_vddupq_x_n_u16
__builtin_arm_mve_vddupq_x_n_u32
__builtin_arm_mve_vddupq_x_n_u8
__builtin_arm_mve_vddupq_x_wb_u16
__builtin_arm_mve_vddupq_x_wb_u32
__builtin_arm_mve_vddupq_x_wb_u8
__builtin_arm_mve_vdupq_m_n_f16
__builtin_arm_mve_vdupq_m_n_f32
__builtin_arm_mve_vdupq_m_n_s16
__builtin_arm_mve_vdupq_m_n_s32
__builtin_arm_mve_vdupq_m_n_s8
__builtin_arm_mve_vdupq_m_n_u16
__builtin_arm_mve_vdupq_m_n_u32
__builtin_arm_mve_vdupq_m_n_u8
__builtin_arm_mve_vdupq_n_f16
__builtin_arm_mve_vdupq_n_f32
__builtin_arm_mve_vdupq_n_s16
__builtin_arm_mve_vdupq_n_s32
__builtin_arm_mve_vdupq_n_s8
__builtin_arm_mve_vdupq_n_u16
__builtin_arm_mve_vdupq_n_u32
__builtin_arm_mve_vdupq_n_u8
__builtin_arm_mve_vdupq_x_n_f16
__builtin_arm_mve_vdupq_x_n_f32
__builtin_arm_mve_vdupq_x_n_s16
__builtin_arm_mve_vdupq_x_n_s32
__builtin_arm_mve_vdupq_x_n_s8
__builtin_arm_mve_vdupq_x_n_u16
__builtin_arm_mve_vdupq_x_n_u32
__builtin_arm_mve_vdupq_x_n_u8
__builtin_arm_mve_vdwdupq_m_n_u16
__builtin_arm_mve_vdwdupq_m_n_u32
__builtin_arm_mve_vdwdupq_m_n_u8
__builtin_arm_mve_vdwdupq_m_wb_u16
__builtin_arm_mve_vdwdupq_m_wb_u32
__builtin_arm_mve_vdwdupq_m_wb_u8
__builtin_arm_mve_vdwdupq_n_u16
__builtin_arm_mve_vdwdupq_n_u32
__builtin_arm_mve_vdwdupq_n_u8
__builtin_arm_mve_vdwdupq_wb_u16
__builtin_arm_mve_vdwdupq_wb_u32
__builtin_arm_mve_vdwdupq_wb_u8
__builtin_arm_mve_vdwdupq_x_n_u16
__builtin_arm_mve_vdwdupq_x_n_u32
__builtin_arm_mve_vdwdupq_x_n_u8
__builtin_arm_mve_vdwdupq_x_wb_u16
__builtin_arm_mve_vdwdupq_x_wb_u32
__builtin_arm_mve_vdwdupq_x_wb_u8
__builtin_arm_mve_veorq_f16
__builtin_arm_mve_veorq_f32
__builtin_arm_mve_veorq_m_f16
__builtin_arm_mve_veorq_m_f32
__builtin_arm_mve_veorq_m_s16
__builtin_arm_mve_veorq_m_s32
__builtin_arm_mve_veorq_m_s8
__builtin_arm_mve_veorq_m_u16
__builtin_arm_mve_veorq_m_u32
__builtin_arm_mve_veorq_m_u8
__builtin_arm_mve_veorq_s16
__builtin_arm_mve_veorq_s32
__builtin_arm_mve_veorq_s8
__builtin_arm_mve_veorq_u16
__builtin_arm_mve_veorq_u32
__builtin_arm_mve_veorq_u8
__builtin_arm_mve_veorq_x_f16
__builtin_arm_mve_veorq_x_f32
__builtin_arm_mve_veorq_x_s16
__builtin_arm_mve_veorq_x_s32
__builtin_arm_mve_veorq_x_s8
__builtin_arm_mve_veorq_x_u16
__builtin_arm_mve_veorq_x_u32
__builtin_arm_mve_veorq_x_u8
__builtin_arm_mve_vfmaq_f16
__builtin_arm_mve_vfmaq_f32
__builtin_arm_mve_vfmaq_m_f16
__builtin_arm_mve_vfmaq_m_f32
__builtin_arm_mve_vfmaq_m_n_f16
__builtin_arm_mve_vfmaq_m_n_f32
__builtin_arm_mve_vfmaq_n_f16
__builtin_arm_mve_vfmaq_n_f32
__builtin_arm_mve_vfmasq_m_n_f16
__builtin_arm_mve_vfmasq_m_n_f32
__builtin_arm_mve_vfmasq_n_f16
__builtin_arm_mve_vfmasq_n_f32
__builtin_arm_mve_vfmsq_f16
__builtin_arm_mve_vfmsq_f32
__builtin_arm_mve_vfmsq_m_f16
__builtin_arm_mve_vfmsq_m_f32
__builtin_arm_mve_vgetq_lane_f16
__builtin_arm_mve_vgetq_lane_f32
__builtin_arm_mve_vgetq_lane_s16
__builtin_arm_mve_vgetq_lane_s32
__builtin_arm_mve_vgetq_lane_s64
__builtin_arm_mve_vgetq_lane_s8
__builtin_arm_mve_vgetq_lane_u16
__builtin_arm_mve_vgetq_lane_u32
__builtin_arm_mve_vgetq_lane_u64
__builtin_arm_mve_vgetq_lane_u8
__builtin_arm_mve_vhaddq_m_n_s16
__builtin_arm_mve_vhaddq_m_n_s32
__builtin_arm_mve_vhaddq_m_n_s8
__builtin_arm_mve_vhaddq_m_n_u16
__builtin_arm_mve_vhaddq_m_n_u32
__builtin_arm_mve_vhaddq_m_n_u8
__builtin_arm_mve_vhaddq_m_s16
__builtin_arm_mve_vhaddq_m_s32
__builtin_arm_mve_vhaddq_m_s8
__builtin_arm_mve_vhaddq_m_u16
__builtin_arm_mve_vhaddq_m_u32
__builtin_arm_mve_vhaddq_m_u8
__builtin_arm_mve_vhaddq_n_s16
__builtin_arm_mve_vhaddq_n_s32
__builtin_arm_mve_vhaddq_n_s8
__builtin_arm_mve_vhaddq_n_u16
__builtin_arm_mve_vhaddq_n_u32
__builtin_arm_mve_vhaddq_n_u8
__builtin_arm_mve_vhaddq_s16
__builtin_arm_mve_vhaddq_s32
__builtin_arm_mve_vhaddq_s8
__builtin_arm_mve_vhaddq_u16
__builtin_arm_mve_vhaddq_u32
__builtin_arm_mve_vhaddq_u8
__builtin_arm_mve_vhaddq_x_n_s16
__builtin_arm_mve_vhaddq_x_n_s32
__builtin_arm_mve_vhaddq_x_n_s8
__builtin_arm_mve_vhaddq_x_n_u16
__builtin_arm_mve_vhaddq_x_n_u32
__builtin_arm_mve_vhaddq_x_n_u8
__builtin_arm_mve_vhaddq_x_s16
__builtin_arm_mve_vhaddq_x_s32
__builtin_arm_mve_vhaddq_x_s8
__builtin_arm_mve_vhaddq_x_u16
__builtin_arm_mve_vhaddq_x_u32
__builtin_arm_mve_vhaddq_x_u8
__builtin_arm_mve_vhcaddq_rot270_m_s16
__builtin_arm_mve_vhcaddq_rot270_m_s32
__builtin_arm_mve_vhcaddq_rot270_m_s8
__builtin_arm_mve_vhcaddq_rot270_s16
__builtin_arm_mve_vhcaddq_rot270_s32
__builtin_arm_mve_vhcaddq_rot270_s8
__builtin_arm_mve_vhcaddq_rot270_x_s16
__builtin_arm_mve_vhcaddq_rot270_x_s32
__builtin_arm_mve_vhcaddq_rot270_x_s8
__builtin_arm_mve_vhcaddq_rot90_m_s16
__builtin_arm_mve_vhcaddq_rot90_m_s32
__builtin_arm_mve_vhcaddq_rot90_m_s8
__builtin_arm_mve_vhcaddq_rot90_s16
__builtin_arm_mve_vhcaddq_rot90_s32
__builtin_arm_mve_vhcaddq_rot90_s8
__builtin_arm_mve_vhcaddq_rot90_x_s16
__builtin_arm_mve_vhcaddq_rot90_x_s32
__builtin_arm_mve_vhcaddq_rot90_x_s8
__builtin_arm_mve_vhsubq_m_n_s16
__builtin_arm_mve_vhsubq_m_n_s32
__builtin_arm_mve_vhsubq_m_n_s8
__builtin_arm_mve_vhsubq_m_n_u16
__builtin_arm_mve_vhsubq_m_n_u32
__builtin_arm_mve_vhsubq_m_n_u8
__builtin_arm_mve_vhsubq_m_s16
__builtin_arm_mve_vhsubq_m_s32
__builtin_arm_mve_vhsubq_m_s8
__builtin_arm_mve_vhsubq_m_u16
__builtin_arm_mve_vhsubq_m_u32
__builtin_arm_mve_vhsubq_m_u8
__builtin_arm_mve_vhsubq_n_s16
__builtin_arm_mve_vhsubq_n_s32
__builtin_arm_mve_vhsubq_n_s8
__builtin_arm_mve_vhsubq_n_u16
__builtin_arm_mve_vhsubq_n_u32
__builtin_arm_mve_vhsubq_n_u8
__builtin_arm_mve_vhsubq_s16
__builtin_arm_mve_vhsubq_s32
__builtin_arm_mve_vhsubq_s8
__builtin_arm_mve_vhsubq_u16
__builtin_arm_mve_vhsubq_u32
__builtin_arm_mve_vhsubq_u8
__builtin_arm_mve_vhsubq_x_n_s16
__builtin_arm_mve_vhsubq_x_n_s32
__builtin_arm_mve_vhsubq_x_n_s8
__builtin_arm_mve_vhsubq_x_n_u16
__builtin_arm_mve_vhsubq_x_n_u32
__builtin_arm_mve_vhsubq_x_n_u8
__builtin_arm_mve_vhsubq_x_s16
__builtin_arm_mve_vhsubq_x_s32
__builtin_arm_mve_vhsubq_x_s8
__builtin_arm_mve_vhsubq_x_u16
__builtin_arm_mve_vhsubq_x_u32
__builtin_arm_mve_vhsubq_x_u8
__builtin_arm_mve_vidupq_m_n_u16
__builtin_arm_mve_vidupq_m_n_u32
__builtin_arm_mve_vidupq_m_n_u8
__builtin_arm_mve_vidupq_m_wb_u16
__builtin_arm_mve_vidupq_m_wb_u32
__builtin_arm_mve_vidupq_m_wb_u8
__builtin_arm_mve_vidupq_n_u16
__builtin_arm_mve_vidupq_n_u32
__builtin_arm_mve_vidupq_n_u8
__builtin_arm_mve_vidupq_wb_u16
__builtin_arm_mve_vidupq_wb_u32
__builtin_arm_mve_vidupq_wb_u8
__builtin_arm_mve_vidupq_x_n_u16
__builtin_arm_mve_vidupq_x_n_u32
__builtin_arm_mve_vidupq_x_n_u8
__builtin_arm_mve_vidupq_x_wb_u16
__builtin_arm_mve_vidupq_x_wb_u32
__builtin_arm_mve_vidupq_x_wb_u8
__builtin_arm_mve_viwdupq_m_n_u16
__builtin_arm_mve_viwdupq_m_n_u32
__builtin_arm_mve_viwdupq_m_n_u8
__builtin_arm_mve_viwdupq_m_wb_u16
__builtin_arm_mve_viwdupq_m_wb_u32
__builtin_arm_mve_viwdupq_m_wb_u8
__builtin_arm_mve_viwdupq_n_u16
__builtin_arm_mve_viwdupq_n_u32
__builtin_arm_mve_viwdupq_n_u8
__builtin_arm_mve_viwdupq_wb_u16
__builtin_arm_mve_viwdupq_wb_u32
__builtin_arm_mve_viwdupq_wb_u8
__builtin_arm_mve_viwdupq_x_n_u16
__builtin_arm_mve_viwdupq_x_n_u32
__builtin_arm_mve_viwdupq_x_n_u8
__builtin_arm_mve_viwdupq_x_wb_u16
__builtin_arm_mve_viwdupq_x_wb_u32
__builtin_arm_mve_viwdupq_x_wb_u8
__builtin_arm_mve_vld1q_f16
__builtin_arm_mve_vld1q_f32
__builtin_arm_mve_vld1q_s16
__builtin_arm_mve_vld1q_s32
__builtin_arm_mve_vld1q_s8
__builtin_arm_mve_vld1q_u16
__builtin_arm_mve_vld1q_u32
__builtin_arm_mve_vld1q_u8
__builtin_arm_mve_vld1q_z_f16
__builtin_arm_mve_vld1q_z_f32
__builtin_arm_mve_vld1q_z_s16
__builtin_arm_mve_vld1q_z_s32
__builtin_arm_mve_vld1q_z_s8
__builtin_arm_mve_vld1q_z_u16
__builtin_arm_mve_vld1q_z_u32
__builtin_arm_mve_vld1q_z_u8
__builtin_arm_mve_vld2q_f16
__builtin_arm_mve_vld2q_f32
__builtin_arm_mve_vld2q_s16
__builtin_arm_mve_vld2q_s32
__builtin_arm_mve_vld2q_s8
__builtin_arm_mve_vld2q_u16
__builtin_arm_mve_vld2q_u32
__builtin_arm_mve_vld2q_u8
__builtin_arm_mve_vld4q_f16
__builtin_arm_mve_vld4q_f32
__builtin_arm_mve_vld4q_s16
__builtin_arm_mve_vld4q_s32
__builtin_arm_mve_vld4q_s8
__builtin_arm_mve_vld4q_u16
__builtin_arm_mve_vld4q_u32
__builtin_arm_mve_vld4q_u8
__builtin_arm_mve_vldrbq_gather_offset_s16
__builtin_arm_mve_vldrbq_gather_offset_s32
__builtin_arm_mve_vldrbq_gather_offset_s8
__builtin_arm_mve_vldrbq_gather_offset_u16
__builtin_arm_mve_vldrbq_gather_offset_u32
__builtin_arm_mve_vldrbq_gather_offset_u8
__builtin_arm_mve_vldrbq_gather_offset_z_s16
__builtin_arm_mve_vldrbq_gather_offset_z_s32
__builtin_arm_mve_vldrbq_gather_offset_z_s8
__builtin_arm_mve_vldrbq_gather_offset_z_u16
__builtin_arm_mve_vldrbq_gather_offset_z_u32
__builtin_arm_mve_vldrbq_gather_offset_z_u8
__builtin_arm_mve_vldrbq_s16
__builtin_arm_mve_vldrbq_s32
__builtin_arm_mve_vldrbq_s8
__builtin_arm_mve_vldrbq_u16
__builtin_arm_mve_vldrbq_u32
__builtin_arm_mve_vldrbq_u8
__builtin_arm_mve_vldrbq_z_s16
__builtin_arm_mve_vldrbq_z_s32
__builtin_arm_mve_vldrbq_z_s8
__builtin_arm_mve_vldrbq_z_u16
__builtin_arm_mve_vldrbq_z_u32
__builtin_arm_mve_vldrbq_z_u8
__builtin_arm_mve_vldrdq_gather_base_s64
__builtin_arm_mve_vldrdq_gather_base_u64
__builtin_arm_mve_vldrdq_gather_base_wb_s64
__builtin_arm_mve_vldrdq_gather_base_wb_u64
__builtin_arm_mve_vldrdq_gather_base_wb_z_s64
__builtin_arm_mve_vldrdq_gather_base_wb_z_u64
__builtin_arm_mve_vldrdq_gather_base_z_s64
__builtin_arm_mve_vldrdq_gather_base_z_u64
__builtin_arm_mve_vldrdq_gather_offset_s64
__builtin_arm_mve_vldrdq_gather_offset_u64
__builtin_arm_mve_vldrdq_gather_offset_z_s64
__builtin_arm_mve_vldrdq_gather_offset_z_u64
__builtin_arm_mve_vldrdq_gather_shifted_offset_s64
__builtin_arm_mve_vldrdq_gather_shifted_offset_u64
__builtin_arm_mve_vldrdq_gather_shifted_offset_z_s64
__builtin_arm_mve_vldrdq_gather_shifted_offset_z_u64
__builtin_arm_mve_vldrhq_f16
__builtin_arm_mve_vldrhq_gather_offset_f16
__builtin_arm_mve_vldrhq_gather_offset_s16
__builtin_arm_mve_vldrhq_gather_offset_s32
__builtin_arm_mve_vldrhq_gather_offset_u16
__builtin_arm_mve_vldrhq_gather_offset_u32
__builtin_arm_mve_vldrhq_gather_offset_z_f16
__builtin_arm_mve_vldrhq_gather_offset_z_s16
__builtin_arm_mve_vldrhq_gather_offset_z_s32
__builtin_arm_mve_vldrhq_gather_offset_z_u16
__builtin_arm_mve_vldrhq_gather_offset_z_u32
__builtin_arm_mve_vldrhq_gather_shifted_offset_f16
__builtin_arm_mve_vldrhq_gather_shifted_offset_s16
__builtin_arm_mve_vldrhq_gather_shifted_offset_s32
__builtin_arm_mve_vldrhq_gather_shifted_offset_u16
__builtin_arm_mve_vldrhq_gather_shifted_offset_u32
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_f16
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_s16
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_s32
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_u16
__builtin_arm_mve_vldrhq_gather_shifted_offset_z_u32
__builtin_arm_mve_vldrhq_s16
__builtin_arm_mve_vldrhq_s32
__builtin_arm_mve_vldrhq_u16
__builtin_arm_mve_vldrhq_u32
__builtin_arm_mve_vldrhq_z_f16
__builtin_arm_mve_vldrhq_z_s16
__builtin_arm_mve_vldrhq_z_s32
__builtin_arm_mve_vldrhq_z_u16
__builtin_arm_mve_vldrhq_z_u32
__builtin_arm_mve_vldrwq_f32
__builtin_arm_mve_vldrwq_gather_base_f32
__builtin_arm_mve_vldrwq_gather_base_s32
__builtin_arm_mve_vldrwq_gather_base_u32
__builtin_arm_mve_vldrwq_gather_base_wb_f32
__builtin_arm_mve_vldrwq_gather_base_wb_s32
__builtin_arm_mve_vldrwq_gather_base_wb_u32
__builtin_arm_mve_vldrwq_gather_base_wb_z_f32
__builtin_arm_mve_vldrwq_gather_base_wb_z_s32
__builtin_arm_mve_vldrwq_gather_base_wb_z_u32
__builtin_arm_mve_vldrwq_gather_base_z_f32
__builtin_arm_mve_vldrwq_gather_base_z_s32
__builtin_arm_mve_vldrwq_gather_base_z_u32
__builtin_arm_mve_vldrwq_gather_offset_f32
__builtin_arm_mve_vldrwq_gather_offset_s32
__builtin_arm_mve_vldrwq_gather_offset_u32
__builtin_arm_mve_vldrwq_gather_offset_z_f32
__builtin_arm_mve_vldrwq_gather_offset_z_s32
__builtin_arm_mve_vldrwq_gather_offset_z_u32
__builtin_arm_mve_vldrwq_gather_shifted_offset_f32
__builtin_arm_mve_vldrwq_gather_shifted_offset_s32
__builtin_arm_mve_vldrwq_gather_shifted_offset_u32
__builtin_arm_mve_vldrwq_gather_shifted_offset_z_f32
__builtin_arm_mve_vldrwq_gather_shifted_offset_z_s32
__builtin_arm_mve_vldrwq_gather_shifted_offset_z_u32
__builtin_arm_mve_vldrwq_s32
__builtin_arm_mve_vldrwq_u32
__builtin_arm_mve_vldrwq_z_f32
__builtin_arm_mve_vldrwq_z_s32
__builtin_arm_mve_vldrwq_z_u32
__builtin_arm_mve_vmaxaq_m_s16
__builtin_arm_mve_vmaxaq_m_s32
__builtin_arm_mve_vmaxaq_m_s8
__builtin_arm_mve_vmaxaq_s16
__builtin_arm_mve_vmaxaq_s32
__builtin_arm_mve_vmaxaq_s8
__builtin_arm_mve_vmaxavq_p_s16
__builtin_arm_mve_vmaxavq_p_s32
__builtin_arm_mve_vmaxavq_p_s8
__builtin_arm_mve_vmaxavq_s16
__builtin_arm_mve_vmaxavq_s32
__builtin_arm_mve_vmaxavq_s8
__builtin_arm_mve_vmaxnmaq_f16
__builtin_arm_mve_vmaxnmaq_f32
__builtin_arm_mve_vmaxnmaq_m_f16
__builtin_arm_mve_vmaxnmaq_m_f32
__builtin_arm_mve_vmaxnmavq_f16
__builtin_arm_mve_vmaxnmavq_f32
__builtin_arm_mve_vmaxnmavq_p_f16
__builtin_arm_mve_vmaxnmavq_p_f32
__builtin_arm_mve_vmaxnmq_f16
__builtin_arm_mve_vmaxnmq_f32
__builtin_arm_mve_vmaxnmq_m_f16
__builtin_arm_mve_vmaxnmq_m_f32
__builtin_arm_mve_vmaxnmq_x_f16
__builtin_arm_mve_vmaxnmq_x_f32
__builtin_arm_mve_vmaxnmvq_f16
__builtin_arm_mve_vmaxnmvq_f32
__builtin_arm_mve_vmaxnmvq_p_f16
__builtin_arm_mve_vmaxnmvq_p_f32
__builtin_arm_mve_vmaxq_m_s16
__builtin_arm_mve_vmaxq_m_s32
__builtin_arm_mve_vmaxq_m_s8
__builtin_arm_mve_vmaxq_m_u16
__builtin_arm_mve_vmaxq_m_u32
__builtin_arm_mve_vmaxq_m_u8
__builtin_arm_mve_vmaxq_s16
__builtin_arm_mve_vmaxq_s32
__builtin_arm_mve_vmaxq_s8
__builtin_arm_mve_vmaxq_u16
__builtin_arm_mve_vmaxq_u32
__builtin_arm_mve_vmaxq_u8
__builtin_arm_mve_vmaxq_x_s16
__builtin_arm_mve_vmaxq_x_s32
__builtin_arm_mve_vmaxq_x_s8
__builtin_arm_mve_vmaxq_x_u16
__builtin_arm_mve_vmaxq_x_u32
__builtin_arm_mve_vmaxq_x_u8
__builtin_arm_mve_vmaxvq_p_s16
__builtin_arm_mve_vmaxvq_p_s32
__builtin_arm_mve_vmaxvq_p_s8
__builtin_arm_mve_vmaxvq_p_u16
__builtin_arm_mve_vmaxvq_p_u32
__builtin_arm_mve_vmaxvq_p_u8
__builtin_arm_mve_vmaxvq_s16
__builtin_arm_mve_vmaxvq_s32
__builtin_arm_mve_vmaxvq_s8
__builtin_arm_mve_vmaxvq_u16
__builtin_arm_mve_vmaxvq_u32
__builtin_arm_mve_vmaxvq_u8
__builtin_arm_mve_vminaq_m_s16
__builtin_arm_mve_vminaq_m_s32
__builtin_arm_mve_vminaq_m_s8
__builtin_arm_mve_vminaq_s16
__builtin_arm_mve_vminaq_s32
__builtin_arm_mve_vminaq_s8
__builtin_arm_mve_vminavq_p_s16
__builtin_arm_mve_vminavq_p_s32
__builtin_arm_mve_vminavq_p_s8
__builtin_arm_mve_vminavq_s16
__builtin_arm_mve_vminavq_s32
__builtin_arm_mve_vminavq_s8
__builtin_arm_mve_vminnmaq_f16
__builtin_arm_mve_vminnmaq_f32
__builtin_arm_mve_vminnmaq_m_f16
__builtin_arm_mve_vminnmaq_m_f32
__builtin_arm_mve_vminnmavq_f16
__builtin_arm_mve_vminnmavq_f32
__builtin_arm_mve_vminnmavq_p_f16
__builtin_arm_mve_vminnmavq_p_f32
__builtin_arm_mve_vminnmq_f16
__builtin_arm_mve_vminnmq_f32
__builtin_arm_mve_vminnmq_m_f16
__builtin_arm_mve_vminnmq_m_f32
__builtin_arm_mve_vminnmq_x_f16
__builtin_arm_mve_vminnmq_x_f32
__builtin_arm_mve_vminnmvq_f16
__builtin_arm_mve_vminnmvq_f32
__builtin_arm_mve_vminnmvq_p_f16
__builtin_arm_mve_vminnmvq_p_f32
__builtin_arm_mve_vminq_m_s16
__builtin_arm_mve_vminq_m_s32
__builtin_arm_mve_vminq_m_s8
__builtin_arm_mve_vminq_m_u16
__builtin_arm_mve_vminq_m_u32
__builtin_arm_mve_vminq_m_u8
__builtin_arm_mve_vminq_s16
__builtin_arm_mve_vminq_s32
__builtin_arm_mve_vminq_s8
__builtin_arm_mve_vminq_u16
__builtin_arm_mve_vminq_u32
__builtin_arm_mve_vminq_u8
__builtin_arm_mve_vminq_x_s16
__builtin_arm_mve_vminq_x_s32
__builtin_arm_mve_vminq_x_s8
__builtin_arm_mve_vminq_x_u16
__builtin_arm_mve_vminq_x_u32
__builtin_arm_mve_vminq_x_u8
__builtin_arm_mve_vminvq_p_s16
__builtin_arm_mve_vminvq_p_s32
__builtin_arm_mve_vminvq_p_s8
__builtin_arm_mve_vminvq_p_u16
__builtin_arm_mve_vminvq_p_u32
__builtin_arm_mve_vminvq_p_u8
__builtin_arm_mve_vminvq_s16
__builtin_arm_mve_vminvq_s32
__builtin_arm_mve_vminvq_s8
__builtin_arm_mve_vminvq_u16
__builtin_arm_mve_vminvq_u32
__builtin_arm_mve_vminvq_u8
__builtin_arm_mve_vmladavaq_p_s16
__builtin_arm_mve_vmladavaq_p_s32
__builtin_arm_mve_vmladavaq_p_s8
__builtin_arm_mve_vmladavaq_p_u16
__builtin_arm_mve_vmladavaq_p_u32
__builtin_arm_mve_vmladavaq_p_u8
__builtin_arm_mve_vmladavaq_s16
__builtin_arm_mve_vmladavaq_s32
__builtin_arm_mve_vmladavaq_s8
__builtin_arm_mve_vmladavaq_u16
__builtin_arm_mve_vmladavaq_u32
__builtin_arm_mve_vmladavaq_u8
__builtin_arm_mve_vmladavaxq_p_s16
__builtin_arm_mve_vmladavaxq_p_s32
__builtin_arm_mve_vmladavaxq_p_s8
__builtin_arm_mve_vmladavaxq_s16
__builtin_arm_mve_vmladavaxq_s32
__builtin_arm_mve_vmladavaxq_s8
__builtin_arm_mve_vmladavq_p_s16
__builtin_arm_mve_vmladavq_p_s32
__builtin_arm_mve_vmladavq_p_s8
__builtin_arm_mve_vmladavq_p_u16
__builtin_arm_mve_vmladavq_p_u32
__builtin_arm_mve_vmladavq_p_u8
__builtin_arm_mve_vmladavq_s16
__builtin_arm_mve_vmladavq_s32
__builtin_arm_mve_vmladavq_s8
__builtin_arm_mve_vmladavq_u16
__builtin_arm_mve_vmladavq_u32
__builtin_arm_mve_vmladavq_u8
__builtin_arm_mve_vmladavxq_p_s16
__builtin_arm_mve_vmladavxq_p_s32
__builtin_arm_mve_vmladavxq_p_s8
__builtin_arm_mve_vmladavxq_s16
__builtin_arm_mve_vmladavxq_s32
__builtin_arm_mve_vmladavxq_s8
__builtin_arm_mve_vmlaldavaq_p_s16
__builtin_arm_mve_vmlaldavaq_p_s32
__builtin_arm_mve_vmlaldavaq_p_u16
__builtin_arm_mve_vmlaldavaq_p_u32
__builtin_arm_mve_vmlaldavaq_s16
__builtin_arm_mve_vmlaldavaq_s32
__builtin_arm_mve_vmlaldavaq_u16
__builtin_arm_mve_vmlaldavaq_u32
__builtin_arm_mve_vmlaldavaxq_p_s16
__builtin_arm_mve_vmlaldavaxq_p_s32
__builtin_arm_mve_vmlaldavaxq_s16
__builtin_arm_mve_vmlaldavaxq_s32
__builtin_arm_mve_vmlaldavq_p_s16
__builtin_arm_mve_vmlaldavq_p_s32
__builtin_arm_mve_vmlaldavq_p_u16
__builtin_arm_mve_vmlaldavq_p_u32
__builtin_arm_mve_vmlaldavq_s16
__builtin_arm_mve_vmlaldavq_s32
__builtin_arm_mve_vmlaldavq_u16
__builtin_arm_mve_vmlaldavq_u32
__builtin_arm_mve_vmlaldavxq_p_s16
__builtin_arm_mve_vmlaldavxq_p_s32
__builtin_arm_mve_vmlaldavxq_s16
__builtin_arm_mve_vmlaldavxq_s32
__builtin_arm_mve_vmlaq_m_n_s16
__builtin_arm_mve_vmlaq_m_n_s32
__builtin_arm_mve_vmlaq_m_n_s8
__builtin_arm_mve_vmlaq_m_n_u16
__builtin_arm_mve_vmlaq_m_n_u32
__builtin_arm_mve_vmlaq_m_n_u8
__builtin_arm_mve_vmlaq_n_s16
__builtin_arm_mve_vmlaq_n_s32
__builtin_arm_mve_vmlaq_n_s8
__builtin_arm_mve_vmlaq_n_u16
__builtin_arm_mve_vmlaq_n_u32
__builtin_arm_mve_vmlaq_n_u8
__builtin_arm_mve_vmlasq_m_n_s16
__builtin_arm_mve_vmlasq_m_n_s32
__builtin_arm_mve_vmlasq_m_n_s8
__builtin_arm_mve_vmlasq_m_n_u16
__builtin_arm_mve_vmlasq_m_n_u32
__builtin_arm_mve_vmlasq_m_n_u8
__builtin_arm_mve_vmlasq_n_s16
__builtin_arm_mve_vmlasq_n_s32
__builtin_arm_mve_vmlasq_n_s8
__builtin_arm_mve_vmlasq_n_u16
__builtin_arm_mve_vmlasq_n_u32
__builtin_arm_mve_vmlasq_n_u8
__builtin_arm_mve_vmlsdavaq_p_s16
__builtin_arm_mve_vmlsdavaq_p_s32
__builtin_arm_mve_vmlsdavaq_p_s8
__builtin_arm_mve_vmlsdavaq_s16
__builtin_arm_mve_vmlsdavaq_s32
__builtin_arm_mve_vmlsdavaq_s8
__builtin_arm_mve_vmlsdavaxq_p_s16
__builtin_arm_mve_vmlsdavaxq_p_s32
__builtin_arm_mve_vmlsdavaxq_p_s8
__builtin_arm_mve_vmlsdavaxq_s16
__builtin_arm_mve_vmlsdavaxq_s32
__builtin_arm_mve_vmlsdavaxq_s8
__builtin_arm_mve_vmlsdavq_p_s16
__builtin_arm_mve_vmlsdavq_p_s32
__builtin_arm_mve_vmlsdavq_p_s8
__builtin_arm_mve_vmlsdavq_s16
__builtin_arm_mve_vmlsdavq_s32
__builtin_arm_mve_vmlsdavq_s8
__builtin_arm_mve_vmlsdavxq_p_s16
__builtin_arm_mve_vmlsdavxq_p_s32
__builtin_arm_mve_vmlsdavxq_p_s8
__builtin_arm_mve_vmlsdavxq_s16
__builtin_arm_mve_vmlsdavxq_s32
__builtin_arm_mve_vmlsdavxq_s8
__builtin_arm_mve_vmlsldavaq_p_s16
__builtin_arm_mve_vmlsldavaq_p_s32
__builtin_arm_mve_vmlsldavaq_s16
__builtin_arm_mve_vmlsldavaq_s32
__builtin_arm_mve_vmlsldavaxq_p_s16
__builtin_arm_mve_vmlsldavaxq_p_s32
__builtin_arm_mve_vmlsldavaxq_s16
__builtin_arm_mve_vmlsldavaxq_s32
__builtin_arm_mve_vmlsldavq_p_s16
__builtin_arm_mve_vmlsldavq_p_s32
__builtin_arm_mve_vmlsldavq_s16
__builtin_arm_mve_vmlsldavq_s32
__builtin_arm_mve_vmlsldavxq_p_s16
__builtin_arm_mve_vmlsldavxq_p_s32
__builtin_arm_mve_vmlsldavxq_s16
__builtin_arm_mve_vmlsldavxq_s32
__builtin_arm_mve_vmovlbq_m_s16
__builtin_arm_mve_vmovlbq_m_s8
__builtin_arm_mve_vmovlbq_m_u16
__builtin_arm_mve_vmovlbq_m_u8
__builtin_arm_mve_vmovlbq_s16
__builtin_arm_mve_vmovlbq_s8
__builtin_arm_mve_vmovlbq_u16
__builtin_arm_mve_vmovlbq_u8
__builtin_arm_mve_vmovlbq_x_s16
__builtin_arm_mve_vmovlbq_x_s8
__builtin_arm_mve_vmovlbq_x_u16
__builtin_arm_mve_vmovlbq_x_u8
__builtin_arm_mve_vmovltq_m_s16
__builtin_arm_mve_vmovltq_m_s8
__builtin_arm_mve_vmovltq_m_u16
__builtin_arm_mve_vmovltq_m_u8
__builtin_arm_mve_vmovltq_s16
__builtin_arm_mve_vmovltq_s8
__builtin_arm_mve_vmovltq_u16
__builtin_arm_mve_vmovltq_u8
__builtin_arm_mve_vmovltq_x_s16
__builtin_arm_mve_vmovltq_x_s8
__builtin_arm_mve_vmovltq_x_u16
__builtin_arm_mve_vmovltq_x_u8
__builtin_arm_mve_vmovnbq_m_s16
__builtin_arm_mve_vmovnbq_m_s32
__builtin_arm_mve_vmovnbq_m_u16
__builtin_arm_mve_vmovnbq_m_u32
__builtin_arm_mve_vmovnbq_s16
__builtin_arm_mve_vmovnbq_s32
__builtin_arm_mve_vmovnbq_u16
__builtin_arm_mve_vmovnbq_u32
__builtin_arm_mve_vmovntq_m_s16
__builtin_arm_mve_vmovntq_m_s32
__builtin_arm_mve_vmovntq_m_u16
__builtin_arm_mve_vmovntq_m_u32
__builtin_arm_mve_vmovntq_s16
__builtin_arm_mve_vmovntq_s32
__builtin_arm_mve_vmovntq_u16
__builtin_arm_mve_vmovntq_u32
__builtin_arm_mve_vmulhq_m_s16
__builtin_arm_mve_vmulhq_m_s32
__builtin_arm_mve_vmulhq_m_s8
__builtin_arm_mve_vmulhq_m_u16
__builtin_arm_mve_vmulhq_m_u32
__builtin_arm_mve_vmulhq_m_u8
__builtin_arm_mve_vmulhq_s16
__builtin_arm_mve_vmulhq_s32
__builtin_arm_mve_vmulhq_s8
__builtin_arm_mve_vmulhq_u16
__builtin_arm_mve_vmulhq_u32
__builtin_arm_mve_vmulhq_u8
__builtin_arm_mve_vmulhq_x_s16
__builtin_arm_mve_vmulhq_x_s32
__builtin_arm_mve_vmulhq_x_s8
__builtin_arm_mve_vmulhq_x_u16
__builtin_arm_mve_vmulhq_x_u32
__builtin_arm_mve_vmulhq_x_u8
__builtin_arm_mve_vmullbq_int_m_s16
__builtin_arm_mve_vmullbq_int_m_s32
__builtin_arm_mve_vmullbq_int_m_s8
__builtin_arm_mve_vmullbq_int_m_u16
__builtin_arm_mve_vmullbq_int_m_u32
__builtin_arm_mve_vmullbq_int_m_u8
__builtin_arm_mve_vmullbq_int_s16
__builtin_arm_mve_vmullbq_int_s32
__builtin_arm_mve_vmullbq_int_s8
__builtin_arm_mve_vmullbq_int_u16
__builtin_arm_mve_vmullbq_int_u32
__builtin_arm_mve_vmullbq_int_u8
__builtin_arm_mve_vmullbq_int_x_s16
__builtin_arm_mve_vmullbq_int_x_s32
__builtin_arm_mve_vmullbq_int_x_s8
__builtin_arm_mve_vmullbq_int_x_u16
__builtin_arm_mve_vmullbq_int_x_u32
__builtin_arm_mve_vmullbq_int_x_u8
__builtin_arm_mve_vmullbq_poly_m_p16
__builtin_arm_mve_vmullbq_poly_m_p8
__builtin_arm_mve_vmullbq_poly_p16
__builtin_arm_mve_vmullbq_poly_p8
__builtin_arm_mve_vmullbq_poly_x_p16
__builtin_arm_mve_vmullbq_poly_x_p8
__builtin_arm_mve_vmulltq_int_m_s16
__builtin_arm_mve_vmulltq_int_m_s32
__builtin_arm_mve_vmulltq_int_m_s8
__builtin_arm_mve_vmulltq_int_m_u16
__builtin_arm_mve_vmulltq_int_m_u32
__builtin_arm_mve_vmulltq_int_m_u8
__builtin_arm_mve_vmulltq_int_s16
__builtin_arm_mve_vmulltq_int_s32
__builtin_arm_mve_vmulltq_int_s8
__builtin_arm_mve_vmulltq_int_u16
__builtin_arm_mve_vmulltq_int_u32
__builtin_arm_mve_vmulltq_int_u8
__builtin_arm_mve_vmulltq_int_x_s16
__builtin_arm_mve_vmulltq_int_x_s32
__builtin_arm_mve_vmulltq_int_x_s8
__builtin_arm_mve_vmulltq_int_x_u16
__builtin_arm_mve_vmulltq_int_x_u32
__builtin_arm_mve_vmulltq_int_x_u8
__builtin_arm_mve_vmulltq_poly_m_p16
__builtin_arm_mve_vmulltq_poly_m_p8
__builtin_arm_mve_vmulltq_poly_p16
__builtin_arm_mve_vmulltq_poly_p8
__builtin_arm_mve_vmulltq_poly_x_p16
__builtin_arm_mve_vmulltq_poly_x_p8
__builtin_arm_mve_vmulq_f16
__builtin_arm_mve_vmulq_f32
__builtin_arm_mve_vmulq_m_f16
__builtin_arm_mve_vmulq_m_f32
__builtin_arm_mve_vmulq_m_n_f16
__builtin_arm_mve_vmulq_m_n_f32
__builtin_arm_mve_vmulq_m_n_s16
__builtin_arm_mve_vmulq_m_n_s32
__builtin_arm_mve_vmulq_m_n_s8
__builtin_arm_mve_vmulq_m_n_u16
__builtin_arm_mve_vmulq_m_n_u32
__builtin_arm_mve_vmulq_m_n_u8
__builtin_arm_mve_vmulq_m_s16
__builtin_arm_mve_vmulq_m_s32
__builtin_arm_mve_vmulq_m_s8
__builtin_arm_mve_vmulq_m_u16
__builtin_arm_mve_vmulq_m_u32
__builtin_arm_mve_vmulq_m_u8
__builtin_arm_mve_vmulq_n_f16
__builtin_arm_mve_vmulq_n_f32
__builtin_arm_mve_vmulq_n_s16
__builtin_arm_mve_vmulq_n_s32
__builtin_arm_mve_vmulq_n_s8
__builtin_arm_mve_vmulq_n_u16
__builtin_arm_mve_vmulq_n_u32
__builtin_arm_mve_vmulq_n_u8
__builtin_arm_mve_vmulq_s16
__builtin_arm_mve_vmulq_s32
__builtin_arm_mve_vmulq_s8
__builtin_arm_mve_vmulq_u16
__builtin_arm_mve_vmulq_u32
__builtin_arm_mve_vmulq_u8
__builtin_arm_mve_vmulq_x_f16
__builtin_arm_mve_vmulq_x_f32
__builtin_arm_mve_vmulq_x_n_f16
__builtin_arm_mve_vmulq_x_n_f32
__builtin_arm_mve_vmulq_x_n_s16
__builtin_arm_mve_vmulq_x_n_s32
__builtin_arm_mve_vmulq_x_n_s8
__builtin_arm_mve_vmulq_x_n_u16
__builtin_arm_mve_vmulq_x_n_u32
__builtin_arm_mve_vmulq_x_n_u8
__builtin_arm_mve_vmulq_x_s16
__builtin_arm_mve_vmulq_x_s32
__builtin_arm_mve_vmulq_x_s8
__builtin_arm_mve_vmulq_x_u16
__builtin_arm_mve_vmulq_x_u32
__builtin_arm_mve_vmulq_x_u8
__builtin_arm_mve_vmvnq_m_n_s16
__builtin_arm_mve_vmvnq_m_n_s32
__builtin_arm_mve_vmvnq_m_n_u16
__builtin_arm_mve_vmvnq_m_n_u32
__builtin_arm_mve_vmvnq_m_s16
__builtin_arm_mve_vmvnq_m_s32
__builtin_arm_mve_vmvnq_m_s8
__builtin_arm_mve_vmvnq_m_u16
__builtin_arm_mve_vmvnq_m_u32
__builtin_arm_mve_vmvnq_m_u8
__builtin_arm_mve_vmvnq_n_s16
__builtin_arm_mve_vmvnq_n_s32
__builtin_arm_mve_vmvnq_n_u16
__builtin_arm_mve_vmvnq_n_u32
__builtin_arm_mve_vmvnq_s16
__builtin_arm_mve_vmvnq_s32
__builtin_arm_mve_vmvnq_s8
__builtin_arm_mve_vmvnq_u16
__builtin_arm_mve_vmvnq_u32
__builtin_arm_mve_vmvnq_u8
__builtin_arm_mve_vmvnq_x_n_s16
__builtin_arm_mve_vmvnq_x_n_s32
__builtin_arm_mve_vmvnq_x_n_u16
__builtin_arm_mve_vmvnq_x_n_u32
__builtin_arm_mve_vmvnq_x_s16
__builtin_arm_mve_vmvnq_x_s32
__builtin_arm_mve_vmvnq_x_s8
__builtin_arm_mve_vmvnq_x_u16
__builtin_arm_mve_vmvnq_x_u32
__builtin_arm_mve_vmvnq_x_u8
__builtin_arm_mve_vnegq_f16
__builtin_arm_mve_vnegq_f32
__builtin_arm_mve_vnegq_m_f16
__builtin_arm_mve_vnegq_m_f32
__builtin_arm_mve_vnegq_m_s16
__builtin_arm_mve_vnegq_m_s32
__builtin_arm_mve_vnegq_m_s8
__builtin_arm_mve_vnegq_s16
__builtin_arm_mve_vnegq_s32
__builtin_arm_mve_vnegq_s8
__builtin_arm_mve_vnegq_x_f16
__builtin_arm_mve_vnegq_x_f32
__builtin_arm_mve_vnegq_x_s16
__builtin_arm_mve_vnegq_x_s32
__builtin_arm_mve_vnegq_x_s8
__builtin_arm_mve_vornq_f16
__builtin_arm_mve_vornq_f32
__builtin_arm_mve_vornq_m_f16
__builtin_arm_mve_vornq_m_f32
__builtin_arm_mve_vornq_m_s16
__builtin_arm_mve_vornq_m_s32
__builtin_arm_mve_vornq_m_s8
__builtin_arm_mve_vornq_m_u16
__builtin_arm_mve_vornq_m_u32
__builtin_arm_mve_vornq_m_u8
__builtin_arm_mve_vornq_s16
__builtin_arm_mve_vornq_s32
__builtin_arm_mve_vornq_s8
__builtin_arm_mve_vornq_u16
__builtin_arm_mve_vornq_u32
__builtin_arm_mve_vornq_u8
__builtin_arm_mve_vornq_x_f16
__builtin_arm_mve_vornq_x_f32
__builtin_arm_mve_vornq_x_s16
__builtin_arm_mve_vornq_x_s32
__builtin_arm_mve_vornq_x_s8
__builtin_arm_mve_vornq_x_u16
__builtin_arm_mve_vornq_x_u32
__builtin_arm_mve_vornq_x_u8
__builtin_arm_mve_vorrq_f16
__builtin_arm_mve_vorrq_f32
__builtin_arm_mve_vorrq_m_f16
__builtin_arm_mve_vorrq_m_f32
__builtin_arm_mve_vorrq_m_n_s16
__builtin_arm_mve_vorrq_m_n_s32
__builtin_arm_mve_vorrq_m_n_u16
__builtin_arm_mve_vorrq_m_n_u32
__builtin_arm_mve_vorrq_m_s16
__builtin_arm_mve_vorrq_m_s32
__builtin_arm_mve_vorrq_m_s8
__builtin_arm_mve_vorrq_m_u16
__builtin_arm_mve_vorrq_m_u32
__builtin_arm_mve_vorrq_m_u8
__builtin_arm_mve_vorrq_n_s16
__builtin_arm_mve_vorrq_n_s32
__builtin_arm_mve_vorrq_n_u16
__builtin_arm_mve_vorrq_n_u32
__builtin_arm_mve_vorrq_s16
__builtin_arm_mve_vorrq_s32
__builtin_arm_mve_vorrq_s8
__builtin_arm_mve_vorrq_u16
__builtin_arm_mve_vorrq_u32
__builtin_arm_mve_vorrq_u8
__builtin_arm_mve_vorrq_x_f16
__builtin_arm_mve_vorrq_x_f32
__builtin_arm_mve_vorrq_x_s16
__builtin_arm_mve_vorrq_x_s32
__builtin_arm_mve_vorrq_x_s8
__builtin_arm_mve_vorrq_x_u16
__builtin_arm_mve_vorrq_x_u32
__builtin_arm_mve_vorrq_x_u8
__builtin_arm_mve_vpnot
__builtin_arm_mve_vpselq_f16
__builtin_arm_mve_vpselq_f32
__builtin_arm_mve_vpselq_s16
__builtin_arm_mve_vpselq_s32
__builtin_arm_mve_vpselq_s64
__builtin_arm_mve_vpselq_s8
__builtin_arm_mve_vpselq_u16
__builtin_arm_mve_vpselq_u32
__builtin_arm_mve_vpselq_u64
__builtin_arm_mve_vpselq_u8
__builtin_arm_mve_vqabsq_m_s16
__builtin_arm_mve_vqabsq_m_s32
__builtin_arm_mve_vqabsq_m_s8
__builtin_arm_mve_vqabsq_s16
__builtin_arm_mve_vqabsq_s32
__builtin_arm_mve_vqabsq_s8
__builtin_arm_mve_vqaddq_m_n_s16
__builtin_arm_mve_vqaddq_m_n_s32
__builtin_arm_mve_vqaddq_m_n_s8
__builtin_arm_mve_vqaddq_m_n_u16
__builtin_arm_mve_vqaddq_m_n_u32
__builtin_arm_mve_vqaddq_m_n_u8
__builtin_arm_mve_vqaddq_m_s16
__builtin_arm_mve_vqaddq_m_s32
__builtin_arm_mve_vqaddq_m_s8
__builtin_arm_mve_vqaddq_m_u16
__builtin_arm_mve_vqaddq_m_u32
__builtin_arm_mve_vqaddq_m_u8
__builtin_arm_mve_vqaddq_n_s16
__builtin_arm_mve_vqaddq_n_s32
__builtin_arm_mve_vqaddq_n_s8
__builtin_arm_mve_vqaddq_n_u16
__builtin_arm_mve_vqaddq_n_u32
__builtin_arm_mve_vqaddq_n_u8
__builtin_arm_mve_vqaddq_s16
__builtin_arm_mve_vqaddq_s32
__builtin_arm_mve_vqaddq_s8
__builtin_arm_mve_vqaddq_u16
__builtin_arm_mve_vqaddq_u32
__builtin_arm_mve_vqaddq_u8
__builtin_arm_mve_vqdmladhq_m_s16
__builtin_arm_mve_vqdmladhq_m_s32
__builtin_arm_mve_vqdmladhq_m_s8
__builtin_arm_mve_vqdmladhq_s16
__builtin_arm_mve_vqdmladhq_s32
__builtin_arm_mve_vqdmladhq_s8
__builtin_arm_mve_vqdmladhxq_m_s16
__builtin_arm_mve_vqdmladhxq_m_s32
__builtin_arm_mve_vqdmladhxq_m_s8
__builtin_arm_mve_vqdmladhxq_s16
__builtin_arm_mve_vqdmladhxq_s32
__builtin_arm_mve_vqdmladhxq_s8
__builtin_arm_mve_vqdmlahq_m_n_s16
__builtin_arm_mve_vqdmlahq_m_n_s32
__builtin_arm_mve_vqdmlahq_m_n_s8
__builtin_arm_mve_vqdmlahq_n_s16
__builtin_arm_mve_vqdmlahq_n_s32
__builtin_arm_mve_vqdmlahq_n_s8
__builtin_arm_mve_vqdmlashq_m_n_s16
__builtin_arm_mve_vqdmlashq_m_n_s32
__builtin_arm_mve_vqdmlashq_m_n_s8
__builtin_arm_mve_vqdmlashq_n_s16
__builtin_arm_mve_vqdmlashq_n_s32
__builtin_arm_mve_vqdmlashq_n_s8
__builtin_arm_mve_vqdmlsdhq_m_s16
__builtin_arm_mve_vqdmlsdhq_m_s32
__builtin_arm_mve_vqdmlsdhq_m_s8
__builtin_arm_mve_vqdmlsdhq_s16
__builtin_arm_mve_vqdmlsdhq_s32
__builtin_arm_mve_vqdmlsdhq_s8
__builtin_arm_mve_vqdmlsdhxq_m_s16
__builtin_arm_mve_vqdmlsdhxq_m_s32
__builtin_arm_mve_vqdmlsdhxq_m_s8
__builtin_arm_mve_vqdmlsdhxq_s16
__builtin_arm_mve_vqdmlsdhxq_s32
__builtin_arm_mve_vqdmlsdhxq_s8
__builtin_arm_mve_vqdmulhq_m_n_s16
__builtin_arm_mve_vqdmulhq_m_n_s32
__builtin_arm_mve_vqdmulhq_m_n_s8
__builtin_arm_mve_vqdmulhq_m_s16
__builtin_arm_mve_vqdmulhq_m_s32
__builtin_arm_mve_vqdmulhq_m_s8
__builtin_arm_mve_vqdmulhq_n_s16
__builtin_arm_mve_vqdmulhq_n_s32
__builtin_arm_mve_vqdmulhq_n_s8
__builtin_arm_mve_vqdmulhq_s16
__builtin_arm_mve_vqdmulhq_s32
__builtin_arm_mve_vqdmulhq_s8
__builtin_arm_mve_vqdmullbq_m_n_s16
__builtin_arm_mve_vqdmullbq_m_n_s32
__builtin_arm_mve_vqdmullbq_m_s16
__builtin_arm_mve_vqdmullbq_m_s32
__builtin_arm_mve_vqdmullbq_n_s16
__builtin_arm_mve_vqdmullbq_n_s32
__builtin_arm_mve_vqdmullbq_s16
__builtin_arm_mve_vqdmullbq_s32
__builtin_arm_mve_vqdmulltq_m_n_s16
__builtin_arm_mve_vqdmulltq_m_n_s32
__builtin_arm_mve_vqdmulltq_m_s16
__builtin_arm_mve_vqdmulltq_m_s32
__builtin_arm_mve_vqdmulltq_n_s16
__builtin_arm_mve_vqdmulltq_n_s32
__builtin_arm_mve_vqdmulltq_s16
__builtin_arm_mve_vqdmulltq_s32
__builtin_arm_mve_vqmovnbq_m_s16
__builtin_arm_mve_vqmovnbq_m_s32
__builtin_arm_mve_vqmovnbq_m_u16
__builtin_arm_mve_vqmovnbq_m_u32
__builtin_arm_mve_vqmovnbq_s16
__builtin_arm_mve_vqmovnbq_s32
__builtin_arm_mve_vqmovnbq_u16
__builtin_arm_mve_vqmovnbq_u32
__builtin_arm_mve_vqmovntq_m_s16
__builtin_arm_mve_vqmovntq_m_s32
__builtin_arm_mve_vqmovntq_m_u16
__builtin_arm_mve_vqmovntq_m_u32
__builtin_arm_mve_vqmovntq_s16
__builtin_arm_mve_vqmovntq_s32
__builtin_arm_mve_vqmovntq_u16
__builtin_arm_mve_vqmovntq_u32
__builtin_arm_mve_vqmovunbq_m_s16
__builtin_arm_mve_vqmovunbq_m_s32
__builtin_arm_mve_vqmovunbq_s16
__builtin_arm_mve_vqmovunbq_s32
__builtin_arm_mve_vqmovuntq_m_s16
__builtin_arm_mve_vqmovuntq_m_s32
__builtin_arm_mve_vqmovuntq_s16
__builtin_arm_mve_vqmovuntq_s32
__builtin_arm_mve_vqnegq_m_s16
__builtin_arm_mve_vqnegq_m_s32
__builtin_arm_mve_vqnegq_m_s8
__builtin_arm_mve_vqnegq_s16
__builtin_arm_mve_vqnegq_s32
__builtin_arm_mve_vqnegq_s8
__builtin_arm_mve_vqrdmladhq_m_s16
__builtin_arm_mve_vqrdmladhq_m_s32
__builtin_arm_mve_vqrdmladhq_m_s8
__builtin_arm_mve_vqrdmladhq_s16
__builtin_arm_mve_vqrdmladhq_s32
__builtin_arm_mve_vqrdmladhq_s8
__builtin_arm_mve_vqrdmladhxq_m_s16
__builtin_arm_mve_vqrdmladhxq_m_s32
__builtin_arm_mve_vqrdmladhxq_m_s8
__builtin_arm_mve_vqrdmladhxq_s16
__builtin_arm_mve_vqrdmladhxq_s32
__builtin_arm_mve_vqrdmladhxq_s8
__builtin_arm_mve_vqrdmlahq_m_n_s16
__builtin_arm_mve_vqrdmlahq_m_n_s32
__builtin_arm_mve_vqrdmlahq_m_n_s8
__builtin_arm_mve_vqrdmlahq_n_s16
__builtin_arm_mve_vqrdmlahq_n_s32
__builtin_arm_mve_vqrdmlahq_n_s8
__builtin_arm_mve_vqrdmlashq_m_n_s16
__builtin_arm_mve_vqrdmlashq_m_n_s32
__builtin_arm_mve_vqrdmlashq_m_n_s8
__builtin_arm_mve_vqrdmlashq_n_s16
__builtin_arm_mve_vqrdmlashq_n_s32
__builtin_arm_mve_vqrdmlashq_n_s8
__builtin_arm_mve_vqrdmlsdhq_m_s16
__builtin_arm_mve_vqrdmlsdhq_m_s32
__builtin_arm_mve_vqrdmlsdhq_m_s8
__builtin_arm_mve_vqrdmlsdhq_s16
__builtin_arm_mve_vqrdmlsdhq_s32
__builtin_arm_mve_vqrdmlsdhq_s8
__builtin_arm_mve_vqrdmlsdhxq_m_s16
__builtin_arm_mve_vqrdmlsdhxq_m_s32
__builtin_arm_mve_vqrdmlsdhxq_m_s8
__builtin_arm_mve_vqrdmlsdhxq_s16
__builtin_arm_mve_vqrdmlsdhxq_s32
__builtin_arm_mve_vqrdmlsdhxq_s8
__builtin_arm_mve_vqrdmulhq_m_n_s16
__builtin_arm_mve_vqrdmulhq_m_n_s32
__builtin_arm_mve_vqrdmulhq_m_n_s8
__builtin_arm_mve_vqrdmulhq_m_s16
__builtin_arm_mve_vqrdmulhq_m_s32
__builtin_arm_mve_vqrdmulhq_m_s8
__builtin_arm_mve_vqrdmulhq_n_s16
__builtin_arm_mve_vqrdmulhq_n_s32
__builtin_arm_mve_vqrdmulhq_n_s8
__builtin_arm_mve_vqrdmulhq_s16
__builtin_arm_mve_vqrdmulhq_s32
__builtin_arm_mve_vqrdmulhq_s8
__builtin_arm_mve_vqrshlq_m_n_s16
__builtin_arm_mve_vqrshlq_m_n_s32
__builtin_arm_mve_vqrshlq_m_n_s8
__builtin_arm_mve_vqrshlq_m_n_u16
__builtin_arm_mve_vqrshlq_m_n_u32
__builtin_arm_mve_vqrshlq_m_n_u8
__builtin_arm_mve_vqrshlq_m_s16
__builtin_arm_mve_vqrshlq_m_s32
__builtin_arm_mve_vqrshlq_m_s8
__builtin_arm_mve_vqrshlq_m_u16
__builtin_arm_mve_vqrshlq_m_u32
__builtin_arm_mve_vqrshlq_m_u8
__builtin_arm_mve_vqrshlq_n_s16
__builtin_arm_mve_vqrshlq_n_s32
__builtin_arm_mve_vqrshlq_n_s8
__builtin_arm_mve_vqrshlq_n_u16
__builtin_arm_mve_vqrshlq_n_u32
__builtin_arm_mve_vqrshlq_n_u8
__builtin_arm_mve_vqrshlq_s16
__builtin_arm_mve_vqrshlq_s32
__builtin_arm_mve_vqrshlq_s8
__builtin_arm_mve_vqrshlq_u16
__builtin_arm_mve_vqrshlq_u32
__builtin_arm_mve_vqrshlq_u8
__builtin_arm_mve_vqrshrnbq_m_n_s16
__builtin_arm_mve_vqrshrnbq_m_n_s32
__builtin_arm_mve_vqrshrnbq_m_n_u16
__builtin_arm_mve_vqrshrnbq_m_n_u32
__builtin_arm_mve_vqrshrnbq_n_s16
__builtin_arm_mve_vqrshrnbq_n_s32
__builtin_arm_mve_vqrshrnbq_n_u16
__builtin_arm_mve_vqrshrnbq_n_u32
__builtin_arm_mve_vqrshrntq_m_n_s16
__builtin_arm_mve_vqrshrntq_m_n_s32
__builtin_arm_mve_vqrshrntq_m_n_u16
__builtin_arm_mve_vqrshrntq_m_n_u32
__builtin_arm_mve_vqrshrntq_n_s16
__builtin_arm_mve_vqrshrntq_n_s32
__builtin_arm_mve_vqrshrntq_n_u16
__builtin_arm_mve_vqrshrntq_n_u32
__builtin_arm_mve_vqrshrunbq_m_n_s16
__builtin_arm_mve_vqrshrunbq_m_n_s32
__builtin_arm_mve_vqrshrunbq_n_s16
__builtin_arm_mve_vqrshrunbq_n_s32
__builtin_arm_mve_vqrshruntq_m_n_s16
__builtin_arm_mve_vqrshruntq_m_n_s32
__builtin_arm_mve_vqrshruntq_n_s16
__builtin_arm_mve_vqrshruntq_n_s32
__builtin_arm_mve_vqshlq_m_n_s16
__builtin_arm_mve_vqshlq_m_n_s32
__builtin_arm_mve_vqshlq_m_n_s8
__builtin_arm_mve_vqshlq_m_n_u16
__builtin_arm_mve_vqshlq_m_n_u32
__builtin_arm_mve_vqshlq_m_n_u8
__builtin_arm_mve_vqshlq_m_r_s16
__builtin_arm_mve_vqshlq_m_r_s32
__builtin_arm_mve_vqshlq_m_r_s8
__builtin_arm_mve_vqshlq_m_r_u16
__builtin_arm_mve_vqshlq_m_r_u32
__builtin_arm_mve_vqshlq_m_r_u8
__builtin_arm_mve_vqshlq_m_s16
__builtin_arm_mve_vqshlq_m_s32
__builtin_arm_mve_vqshlq_m_s8
__builtin_arm_mve_vqshlq_m_u16
__builtin_arm_mve_vqshlq_m_u32
__builtin_arm_mve_vqshlq_m_u8
__builtin_arm_mve_vqshlq_n_s16
__builtin_arm_mve_vqshlq_n_s32
__builtin_arm_mve_vqshlq_n_s8
__builtin_arm_mve_vqshlq_n_u16
__builtin_arm_mve_vqshlq_n_u32
__builtin_arm_mve_vqshlq_n_u8
__builtin_arm_mve_vqshlq_r_s16
__builtin_arm_mve_vqshlq_r_s32
__builtin_arm_mve_vqshlq_r_s8
__builtin_arm_mve_vqshlq_r_u16
__builtin_arm_mve_vqshlq_r_u32
__builtin_arm_mve_vqshlq_r_u8
__builtin_arm_mve_vqshlq_s16
__builtin_arm_mve_vqshlq_s32
__builtin_arm_mve_vqshlq_s8
__builtin_arm_mve_vqshlq_u16
__builtin_arm_mve_vqshlq_u32
__builtin_arm_mve_vqshlq_u8
__builtin_arm_mve_vqshluq_m_n_s16
__builtin_arm_mve_vqshluq_m_n_s32
__builtin_arm_mve_vqshluq_m_n_s8
__builtin_arm_mve_vqshluq_n_s16
__builtin_arm_mve_vqshluq_n_s32
__builtin_arm_mve_vqshluq_n_s8
__builtin_arm_mve_vqshrnbq_m_n_s16
__builtin_arm_mve_vqshrnbq_m_n_s32
__builtin_arm_mve_vqshrnbq_m_n_u16
__builtin_arm_mve_vqshrnbq_m_n_u32
__builtin_arm_mve_vqshrnbq_n_s16
__builtin_arm_mve_vqshrnbq_n_s32
__builtin_arm_mve_vqshrnbq_n_u16
__builtin_arm_mve_vqshrnbq_n_u32
__builtin_arm_mve_vqshrntq_m_n_s16
__builtin_arm_mve_vqshrntq_m_n_s32
__builtin_arm_mve_vqshrntq_m_n_u16
__builtin_arm_mve_vqshrntq_m_n_u32
__builtin_arm_mve_vqshrntq_n_s16
__builtin_arm_mve_vqshrntq_n_s32
__builtin_arm_mve_vqshrntq_n_u16
__builtin_arm_mve_vqshrntq_n_u32
__builtin_arm_mve_vqshrunbq_m_n_s16
__builtin_arm_mve_vqshrunbq_m_n_s32
__builtin_arm_mve_vqshrunbq_n_s16
__builtin_arm_mve_vqshrunbq_n_s32
__builtin_arm_mve_vqshruntq_m_n_s16
__builtin_arm_mve_vqshruntq_m_n_s32
__builtin_arm_mve_vqshruntq_n_s16
__builtin_arm_mve_vqshruntq_n_s32
__builtin_arm_mve_vqsubq_m_n_s16
__builtin_arm_mve_vqsubq_m_n_s32
__builtin_arm_mve_vqsubq_m_n_s8
__builtin_arm_mve_vqsubq_m_n_u16
__builtin_arm_mve_vqsubq_m_n_u32
__builtin_arm_mve_vqsubq_m_n_u8
__builtin_arm_mve_vqsubq_m_s16
__builtin_arm_mve_vqsubq_m_s32
__builtin_arm_mve_vqsubq_m_s8
__builtin_arm_mve_vqsubq_m_u16
__builtin_arm_mve_vqsubq_m_u32
__builtin_arm_mve_vqsubq_m_u8
__builtin_arm_mve_vqsubq_n_s16
__builtin_arm_mve_vqsubq_n_s32
__builtin_arm_mve_vqsubq_n_s8
__builtin_arm_mve_vqsubq_n_u16
__builtin_arm_mve_vqsubq_n_u32
__builtin_arm_mve_vqsubq_n_u8
__builtin_arm_mve_vqsubq_s16
__builtin_arm_mve_vqsubq_s32
__builtin_arm_mve_vqsubq_s8
__builtin_arm_mve_vqsubq_u16
__builtin_arm_mve_vqsubq_u32
__builtin_arm_mve_vqsubq_u8
__builtin_arm_mve_vreinterpretq_f16_f32
__builtin_arm_mve_vreinterpretq_f16_s16
__builtin_arm_mve_vreinterpretq_f16_s32
__builtin_arm_mve_vreinterpretq_f16_s64
__builtin_arm_mve_vreinterpretq_f16_s8
__builtin_arm_mve_vreinterpretq_f16_u16
__builtin_arm_mve_vreinterpretq_f16_u32
__builtin_arm_mve_vreinterpretq_f16_u64
__builtin_arm_mve_vreinterpretq_f16_u8
__builtin_arm_mve_vreinterpretq_f32_f16
__builtin_arm_mve_vreinterpretq_f32_s16
__builtin_arm_mve_vreinterpretq_f32_s32
__builtin_arm_mve_vreinterpretq_f32_s64
__builtin_arm_mve_vreinterpretq_f32_s8
__builtin_arm_mve_vreinterpretq_f32_u16
__builtin_arm_mve_vreinterpretq_f32_u32
__builtin_arm_mve_vreinterpretq_f32_u64
__builtin_arm_mve_vreinterpretq_f32_u8
__builtin_arm_mve_vreinterpretq_s16_f16
__builtin_arm_mve_vreinterpretq_s16_f32
__builtin_arm_mve_vreinterpretq_s16_s32
__builtin_arm_mve_vreinterpretq_s16_s64
__builtin_arm_mve_vreinterpretq_s16_s8
__builtin_arm_mve_vreinterpretq_s16_u16
__builtin_arm_mve_vreinterpretq_s16_u32
__builtin_arm_mve_vreinterpretq_s16_u64
__builtin_arm_mve_vreinterpretq_s16_u8
__builtin_arm_mve_vreinterpretq_s32_f16
__builtin_arm_mve_vreinterpretq_s32_f32
__builtin_arm_mve_vreinterpretq_s32_s16
__builtin_arm_mve_vreinterpretq_s32_s64
__builtin_arm_mve_vreinterpretq_s32_s8
__builtin_arm_mve_vreinterpretq_s32_u16
__builtin_arm_mve_vreinterpretq_s32_u32
__builtin_arm_mve_vreinterpretq_s32_u64
__builtin_arm_mve_vreinterpretq_s32_u8
__builtin_arm_mve_vreinterpretq_s64_f16
__builtin_arm_mve_vreinterpretq_s64_f32
__builtin_arm_mve_vreinterpretq_s64_s16
__builtin_arm_mve_vreinterpretq_s64_s32
__builtin_arm_mve_vreinterpretq_s64_s8
__builtin_arm_mve_vreinterpretq_s64_u16
__builtin_arm_mve_vreinterpretq_s64_u32
__builtin_arm_mve_vreinterpretq_s64_u64
__builtin_arm_mve_vreinterpretq_s64_u8
__builtin_arm_mve_vreinterpretq_s8_f16
__builtin_arm_mve_vreinterpretq_s8_f32
__builtin_arm_mve_vreinterpretq_s8_s16
__builtin_arm_mve_vreinterpretq_s8_s32
__builtin_arm_mve_vreinterpretq_s8_s64
__builtin_arm_mve_vreinterpretq_s8_u16
__builtin_arm_mve_vreinterpretq_s8_u32
__builtin_arm_mve_vreinterpretq_s8_u64
__builtin_arm_mve_vreinterpretq_s8_u8
__builtin_arm_mve_vreinterpretq_u16_f16
__builtin_arm_mve_vreinterpretq_u16_f32
__builtin_arm_mve_vreinterpretq_u16_s16
__builtin_arm_mve_vreinterpretq_u16_s32
__builtin_arm_mve_vreinterpretq_u16_s64
__builtin_arm_mve_vreinterpretq_u16_s8
__builtin_arm_mve_vreinterpretq_u16_u32
__builtin_arm_mve_vreinterpretq_u16_u64
__builtin_arm_mve_vreinterpretq_u16_u8
__builtin_arm_mve_vreinterpretq_u32_f16
__builtin_arm_mve_vreinterpretq_u32_f32
__builtin_arm_mve_vreinterpretq_u32_s16
__builtin_arm_mve_vreinterpretq_u32_s32
__builtin_arm_mve_vreinterpretq_u32_s64
__builtin_arm_mve_vreinterpretq_u32_s8
__builtin_arm_mve_vreinterpretq_u32_u16
__builtin_arm_mve_vreinterpretq_u32_u64
__builtin_arm_mve_vreinterpretq_u32_u8
__builtin_arm_mve_vreinterpretq_u64_f16
__builtin_arm_mve_vreinterpretq_u64_f32
__builtin_arm_mve_vreinterpretq_u64_s16
__builtin_arm_mve_vreinterpretq_u64_s32
__builtin_arm_mve_vreinterpretq_u64_s64
__builtin_arm_mve_vreinterpretq_u64_s8
__builtin_arm_mve_vreinterpretq_u64_u16
__builtin_arm_mve_vreinterpretq_u64_u32
__builtin_arm_mve_vreinterpretq_u64_u8
__builtin_arm_mve_vreinterpretq_u8_f16
__builtin_arm_mve_vreinterpretq_u8_f32
__builtin_arm_mve_vreinterpretq_u8_s16
__builtin_arm_mve_vreinterpretq_u8_s32
__builtin_arm_mve_vreinterpretq_u8_s64
__builtin_arm_mve_vreinterpretq_u8_s8
__builtin_arm_mve_vreinterpretq_u8_u16
__builtin_arm_mve_vreinterpretq_u8_u32
__builtin_arm_mve_vreinterpretq_u8_u64
__builtin_arm_mve_vrev16q_m_s8
__builtin_arm_mve_vrev16q_m_u8
__builtin_arm_mve_vrev16q_s8
__builtin_arm_mve_vrev16q_u8
__builtin_arm_mve_vrev16q_x_s8
__builtin_arm_mve_vrev16q_x_u8
__builtin_arm_mve_vrev32q_f16
__builtin_arm_mve_vrev32q_m_f16
__builtin_arm_mve_vrev32q_m_s16
__builtin_arm_mve_vrev32q_m_s8
__builtin_arm_mve_vrev32q_m_u16
__builtin_arm_mve_vrev32q_m_u8
__builtin_arm_mve_vrev32q_s16
__builtin_arm_mve_vrev32q_s8
__builtin_arm_mve_vrev32q_u16
__builtin_arm_mve_vrev32q_u8
__builtin_arm_mve_vrev32q_x_f16
__builtin_arm_mve_vrev32q_x_s16
__builtin_arm_mve_vrev32q_x_s8
__builtin_arm_mve_vrev32q_x_u16
__builtin_arm_mve_vrev32q_x_u8
__builtin_arm_mve_vrev64q_f16
__builtin_arm_mve_vrev64q_f32
__builtin_arm_mve_vrev64q_m_f16
__builtin_arm_mve_vrev64q_m_f32
__builtin_arm_mve_vrev64q_m_s16
__builtin_arm_mve_vrev64q_m_s32
__builtin_arm_mve_vrev64q_m_s8
__builtin_arm_mve_vrev64q_m_u16
__builtin_arm_mve_vrev64q_m_u32
__builtin_arm_mve_vrev64q_m_u8
__builtin_arm_mve_vrev64q_s16
__builtin_arm_mve_vrev64q_s32
__builtin_arm_mve_vrev64q_s8
__builtin_arm_mve_vrev64q_u16
__builtin_arm_mve_vrev64q_u32
__builtin_arm_mve_vrev64q_u8
__builtin_arm_mve_vrev64q_x_f16
__builtin_arm_mve_vrev64q_x_f32
__builtin_arm_mve_vrev64q_x_s16
__builtin_arm_mve_vrev64q_x_s32
__builtin_arm_mve_vrev64q_x_s8
__builtin_arm_mve_vrev64q_x_u16
__builtin_arm_mve_vrev64q_x_u32
__builtin_arm_mve_vrev64q_x_u8
__builtin_arm_mve_vrhaddq_m_s16
__builtin_arm_mve_vrhaddq_m_s32
__builtin_arm_mve_vrhaddq_m_s8
__builtin_arm_mve_vrhaddq_m_u16
__builtin_arm_mve_vrhaddq_m_u32
__builtin_arm_mve_vrhaddq_m_u8
__builtin_arm_mve_vrhaddq_s16
__builtin_arm_mve_vrhaddq_s32
__builtin_arm_mve_vrhaddq_s8
__builtin_arm_mve_vrhaddq_u16
__builtin_arm_mve_vrhaddq_u32
__builtin_arm_mve_vrhaddq_u8
__builtin_arm_mve_vrhaddq_x_s16
__builtin_arm_mve_vrhaddq_x_s32
__builtin_arm_mve_vrhaddq_x_s8
__builtin_arm_mve_vrhaddq_x_u16
__builtin_arm_mve_vrhaddq_x_u32
__builtin_arm_mve_vrhaddq_x_u8
__builtin_arm_mve_vrmlaldavhaq_p_s32
__builtin_arm_mve_vrmlaldavhaq_p_u32
__builtin_arm_mve_vrmlaldavhaq_s32
__builtin_arm_mve_vrmlaldavhaq_u32
__builtin_arm_mve_vrmlaldavhaxq_p_s32
__builtin_arm_mve_vrmlaldavhaxq_s32
__builtin_arm_mve_vrmlaldavhq_p_s32
__builtin_arm_mve_vrmlaldavhq_p_u32
__builtin_arm_mve_vrmlaldavhq_s32
__builtin_arm_mve_vrmlaldavhq_u32
__builtin_arm_mve_vrmlaldavhxq_p_s32
__builtin_arm_mve_vrmlaldavhxq_s32
__builtin_arm_mve_vrmlsldavhaq_p_s32
__builtin_arm_mve_vrmlsldavhaq_s32
__builtin_arm_mve_vrmlsldavhaxq_p_s32
__builtin_arm_mve_vrmlsldavhaxq_s32
__builtin_arm_mve_vrmlsldavhq_p_s32
__builtin_arm_mve_vrmlsldavhq_s32
__builtin_arm_mve_vrmlsldavhxq_p_s32
__builtin_arm_mve_vrmlsldavhxq_s32
__builtin_arm_mve_vrmulhq_m_s16
__builtin_arm_mve_vrmulhq_m_s32
__builtin_arm_mve_vrmulhq_m_s8
__builtin_arm_mve_vrmulhq_m_u16
__builtin_arm_mve_vrmulhq_m_u32
__builtin_arm_mve_vrmulhq_m_u8
__builtin_arm_mve_vrmulhq_s16
__builtin_arm_mve_vrmulhq_s32
__builtin_arm_mve_vrmulhq_s8
__builtin_arm_mve_vrmulhq_u16
__builtin_arm_mve_vrmulhq_u32
__builtin_arm_mve_vrmulhq_u8
__builtin_arm_mve_vrmulhq_x_s16
__builtin_arm_mve_vrmulhq_x_s32
__builtin_arm_mve_vrmulhq_x_s8
__builtin_arm_mve_vrmulhq_x_u16
__builtin_arm_mve_vrmulhq_x_u32
__builtin_arm_mve_vrmulhq_x_u8
__builtin_arm_mve_vrndaq_f16
__builtin_arm_mve_vrndaq_f32
__builtin_arm_mve_vrndaq_m_f16
__builtin_arm_mve_vrndaq_m_f32
__builtin_arm_mve_vrndaq_x_f16
__builtin_arm_mve_vrndaq_x_f32
__builtin_arm_mve_vrndmq_f16
__builtin_arm_mve_vrndmq_f32
__builtin_arm_mve_vrndmq_m_f16
__builtin_arm_mve_vrndmq_m_f32
__builtin_arm_mve_vrndmq_x_f16
__builtin_arm_mve_vrndmq_x_f32
__builtin_arm_mve_vrndnq_f16
__builtin_arm_mve_vrndnq_f32
__builtin_arm_mve_vrndnq_m_f16
__builtin_arm_mve_vrndnq_m_f32
__builtin_arm_mve_vrndnq_x_f16
__builtin_arm_mve_vrndnq_x_f32
__builtin_arm_mve_vrndpq_f16
__builtin_arm_mve_vrndpq_f32
__builtin_arm_mve_vrndpq_m_f16
__builtin_arm_mve_vrndpq_m_f32
__builtin_arm_mve_vrndpq_x_f16
__builtin_arm_mve_vrndpq_x_f32
__builtin_arm_mve_vrndq_f16
__builtin_arm_mve_vrndq_f32
__builtin_arm_mve_vrndq_m_f16
__builtin_arm_mve_vrndq_m_f32
__builtin_arm_mve_vrndq_x_f16
__builtin_arm_mve_vrndq_x_f32
__builtin_arm_mve_vrndxq_f16
__builtin_arm_mve_vrndxq_f32
__builtin_arm_mve_vrndxq_m_f16
__builtin_arm_mve_vrndxq_m_f32
__builtin_arm_mve_vrndxq_x_f16
__builtin_arm_mve_vrndxq_x_f32
__builtin_arm_mve_vrshlq_m_n_s16
__builtin_arm_mve_vrshlq_m_n_s32
__builtin_arm_mve_vrshlq_m_n_s8
__builtin_arm_mve_vrshlq_m_n_u16
__builtin_arm_mve_vrshlq_m_n_u32
__builtin_arm_mve_vrshlq_m_n_u8
__builtin_arm_mve_vrshlq_m_s16
__builtin_arm_mve_vrshlq_m_s32
__builtin_arm_mve_vrshlq_m_s8
__builtin_arm_mve_vrshlq_m_u16
__builtin_arm_mve_vrshlq_m_u32
__builtin_arm_mve_vrshlq_m_u8
__builtin_arm_mve_vrshlq_n_s16
__builtin_arm_mve_vrshlq_n_s32
__builtin_arm_mve_vrshlq_n_s8
__builtin_arm_mve_vrshlq_n_u16
__builtin_arm_mve_vrshlq_n_u32
__builtin_arm_mve_vrshlq_n_u8
__builtin_arm_mve_vrshlq_s16
__builtin_arm_mve_vrshlq_s32
__builtin_arm_mve_vrshlq_s8
__builtin_arm_mve_vrshlq_u16
__builtin_arm_mve_vrshlq_u32
__builtin_arm_mve_vrshlq_u8
__builtin_arm_mve_vrshlq_x_s16
__builtin_arm_mve_vrshlq_x_s32
__builtin_arm_mve_vrshlq_x_s8
__builtin_arm_mve_vrshlq_x_u16
__builtin_arm_mve_vrshlq_x_u32
__builtin_arm_mve_vrshlq_x_u8
__builtin_arm_mve_vrshrnbq_m_n_s16
__builtin_arm_mve_vrshrnbq_m_n_s32
__builtin_arm_mve_vrshrnbq_m_n_u16
__builtin_arm_mve_vrshrnbq_m_n_u32
__builtin_arm_mve_vrshrnbq_n_s16
__builtin_arm_mve_vrshrnbq_n_s32
__builtin_arm_mve_vrshrnbq_n_u16
__builtin_arm_mve_vrshrnbq_n_u32
__builtin_arm_mve_vrshrntq_m_n_s16
__builtin_arm_mve_vrshrntq_m_n_s32
__builtin_arm_mve_vrshrntq_m_n_u16
__builtin_arm_mve_vrshrntq_m_n_u32
__builtin_arm_mve_vrshrntq_n_s16
__builtin_arm_mve_vrshrntq_n_s32
__builtin_arm_mve_vrshrntq_n_u16
__builtin_arm_mve_vrshrntq_n_u32
__builtin_arm_mve_vrshrq_m_n_s16
__builtin_arm_mve_vrshrq_m_n_s32
__builtin_arm_mve_vrshrq_m_n_s8
__builtin_arm_mve_vrshrq_m_n_u16
__builtin_arm_mve_vrshrq_m_n_u32
__builtin_arm_mve_vrshrq_m_n_u8
__builtin_arm_mve_vrshrq_n_s16
__builtin_arm_mve_vrshrq_n_s32
__builtin_arm_mve_vrshrq_n_s8
__builtin_arm_mve_vrshrq_n_u16
__builtin_arm_mve_vrshrq_n_u32
__builtin_arm_mve_vrshrq_n_u8
__builtin_arm_mve_vrshrq_x_n_s16
__builtin_arm_mve_vrshrq_x_n_s32
__builtin_arm_mve_vrshrq_x_n_s8
__builtin_arm_mve_vrshrq_x_n_u16
__builtin_arm_mve_vrshrq_x_n_u32
__builtin_arm_mve_vrshrq_x_n_u8
__builtin_arm_mve_vsbciq_m_s32
__builtin_arm_mve_vsbciq_m_u32
__builtin_arm_mve_vsbciq_s32
__builtin_arm_mve_vsbciq_u32
__builtin_arm_mve_vsbcq_m_s32
__builtin_arm_mve_vsbcq_m_u32
__builtin_arm_mve_vsbcq_s32
__builtin_arm_mve_vsbcq_u32
__builtin_arm_mve_vsetq_lane_f16
__builtin_arm_mve_vsetq_lane_f32
__builtin_arm_mve_vsetq_lane_s16
__builtin_arm_mve_vsetq_lane_s32
__builtin_arm_mve_vsetq_lane_s64
__builtin_arm_mve_vsetq_lane_s8
__builtin_arm_mve_vsetq_lane_u16
__builtin_arm_mve_vsetq_lane_u32
__builtin_arm_mve_vsetq_lane_u64
__builtin_arm_mve_vsetq_lane_u8
__builtin_arm_mve_vshlcq_m_s16
__builtin_arm_mve_vshlcq_m_s32
__builtin_arm_mve_vshlcq_m_s8
__builtin_arm_mve_vshlcq_m_u16
__builtin_arm_mve_vshlcq_m_u32
__builtin_arm_mve_vshlcq_m_u8
__builtin_arm_mve_vshlcq_s16
__builtin_arm_mve_vshlcq_s32
__builtin_arm_mve_vshlcq_s8
__builtin_arm_mve_vshlcq_u16
__builtin_arm_mve_vshlcq_u32
__builtin_arm_mve_vshlcq_u8
__builtin_arm_mve_vshllbq_m_n_s16
__builtin_arm_mve_vshllbq_m_n_s8
__builtin_arm_mve_vshllbq_m_n_u16
__builtin_arm_mve_vshllbq_m_n_u8
__builtin_arm_mve_vshllbq_n_s16
__builtin_arm_mve_vshllbq_n_s8
__builtin_arm_mve_vshllbq_n_u16
__builtin_arm_mve_vshllbq_n_u8
__builtin_arm_mve_vshllbq_x_n_s16
__builtin_arm_mve_vshllbq_x_n_s8
__builtin_arm_mve_vshllbq_x_n_u16
__builtin_arm_mve_vshllbq_x_n_u8
__builtin_arm_mve_vshlltq_m_n_s16
__builtin_arm_mve_vshlltq_m_n_s8
__builtin_arm_mve_vshlltq_m_n_u16
__builtin_arm_mve_vshlltq_m_n_u8
__builtin_arm_mve_vshlltq_n_s16
__builtin_arm_mve_vshlltq_n_s8
__builtin_arm_mve_vshlltq_n_u16
__builtin_arm_mve_vshlltq_n_u8
__builtin_arm_mve_vshlltq_x_n_s16
__builtin_arm_mve_vshlltq_x_n_s8
__builtin_arm_mve_vshlltq_x_n_u16
__builtin_arm_mve_vshlltq_x_n_u8
__builtin_arm_mve_vshlq_m_n_s16
__builtin_arm_mve_vshlq_m_n_s32
__builtin_arm_mve_vshlq_m_n_s8
__builtin_arm_mve_vshlq_m_n_u16
__builtin_arm_mve_vshlq_m_n_u32
__builtin_arm_mve_vshlq_m_n_u8
__builtin_arm_mve_vshlq_m_r_s16
__builtin_arm_mve_vshlq_m_r_s32
__builtin_arm_mve_vshlq_m_r_s8
__builtin_arm_mve_vshlq_m_r_u16
__builtin_arm_mve_vshlq_m_r_u32
__builtin_arm_mve_vshlq_m_r_u8
__builtin_arm_mve_vshlq_m_s16
__builtin_arm_mve_vshlq_m_s32
__builtin_arm_mve_vshlq_m_s8
__builtin_arm_mve_vshlq_m_u16
__builtin_arm_mve_vshlq_m_u32
__builtin_arm_mve_vshlq_m_u8
__builtin_arm_mve_vshlq_n_s16
__builtin_arm_mve_vshlq_n_s32
__builtin_arm_mve_vshlq_n_s8
__builtin_arm_mve_vshlq_n_u16
__builtin_arm_mve_vshlq_n_u32
__builtin_arm_mve_vshlq_n_u8
__builtin_arm_mve_vshlq_r_s16
__builtin_arm_mve_vshlq_r_s32
__builtin_arm_mve_vshlq_r_s8
__builtin_arm_mve_vshlq_r_u16
__builtin_arm_mve_vshlq_r_u32
__builtin_arm_mve_vshlq_r_u8
__builtin_arm_mve_vshlq_s16
__builtin_arm_mve_vshlq_s32
__builtin_arm_mve_vshlq_s8
__builtin_arm_mve_vshlq_u16
__builtin_arm_mve_vshlq_u32
__builtin_arm_mve_vshlq_u8
__builtin_arm_mve_vshlq_x_n_s16
__builtin_arm_mve_vshlq_x_n_s32
__builtin_arm_mve_vshlq_x_n_s8
__builtin_arm_mve_vshlq_x_n_u16
__builtin_arm_mve_vshlq_x_n_u32
__builtin_arm_mve_vshlq_x_n_u8
__builtin_arm_mve_vshlq_x_s16
__builtin_arm_mve_vshlq_x_s32
__builtin_arm_mve_vshlq_x_s8
__builtin_arm_mve_vshlq_x_u16
__builtin_arm_mve_vshlq_x_u32
__builtin_arm_mve_vshlq_x_u8
__builtin_arm_mve_vshrnbq_m_n_s16
__builtin_arm_mve_vshrnbq_m_n_s32
__builtin_arm_mve_vshrnbq_m_n_u16
__builtin_arm_mve_vshrnbq_m_n_u32
__builtin_arm_mve_vshrnbq_n_s16
__builtin_arm_mve_vshrnbq_n_s32
__builtin_arm_mve_vshrnbq_n_u16
__builtin_arm_mve_vshrnbq_n_u32
__builtin_arm_mve_vshrntq_m_n_s16
__builtin_arm_mve_vshrntq_m_n_s32
__builtin_arm_mve_vshrntq_m_n_u16
__builtin_arm_mve_vshrntq_m_n_u32
__builtin_arm_mve_vshrntq_n_s16
__builtin_arm_mve_vshrntq_n_s32
__builtin_arm_mve_vshrntq_n_u16
__builtin_arm_mve_vshrntq_n_u32
__builtin_arm_mve_vshrq_m_n_s16
__builtin_arm_mve_vshrq_m_n_s32
__builtin_arm_mve_vshrq_m_n_s8
__builtin_arm_mve_vshrq_m_n_u16
__builtin_arm_mve_vshrq_m_n_u32
__builtin_arm_mve_vshrq_m_n_u8
__builtin_arm_mve_vshrq_n_s16
__builtin_arm_mve_vshrq_n_s32
__builtin_arm_mve_vshrq_n_s8
__builtin_arm_mve_vshrq_n_u16
__builtin_arm_mve_vshrq_n_u32
__builtin_arm_mve_vshrq_n_u8
__builtin_arm_mve_vshrq_x_n_s16
__builtin_arm_mve_vshrq_x_n_s32
__builtin_arm_mve_vshrq_x_n_s8
__builtin_arm_mve_vshrq_x_n_u16
__builtin_arm_mve_vshrq_x_n_u32
__builtin_arm_mve_vshrq_x_n_u8
__builtin_arm_mve_vsliq_m_n_s16
__builtin_arm_mve_vsliq_m_n_s32
__builtin_arm_mve_vsliq_m_n_s8
__builtin_arm_mve_vsliq_m_n_u16
__builtin_arm_mve_vsliq_m_n_u32
__builtin_arm_mve_vsliq_m_n_u8
__builtin_arm_mve_vsliq_n_s16
__builtin_arm_mve_vsliq_n_s32
__builtin_arm_mve_vsliq_n_s8
__builtin_arm_mve_vsliq_n_u16
__builtin_arm_mve_vsliq_n_u32
__builtin_arm_mve_vsliq_n_u8
__builtin_arm_mve_vsriq_m_n_s16
__builtin_arm_mve_vsriq_m_n_s32
__builtin_arm_mve_vsriq_m_n_s8
__builtin_arm_mve_vsriq_m_n_u16
__builtin_arm_mve_vsriq_m_n_u32
__builtin_arm_mve_vsriq_m_n_u8
__builtin_arm_mve_vsriq_n_s16
__builtin_arm_mve_vsriq_n_s32
__builtin_arm_mve_vsriq_n_s8
__builtin_arm_mve_vsriq_n_u16
__builtin_arm_mve_vsriq_n_u32
__builtin_arm_mve_vsriq_n_u8
__builtin_arm_mve_vst1q_f16
__builtin_arm_mve_vst1q_f32
__builtin_arm_mve_vst1q_p_f16
__builtin_arm_mve_vst1q_p_f32
__builtin_arm_mve_vst1q_p_s16
__builtin_arm_mve_vst1q_p_s32
__builtin_arm_mve_vst1q_p_s8
__builtin_arm_mve_vst1q_p_u16
__builtin_arm_mve_vst1q_p_u32
__builtin_arm_mve_vst1q_p_u8
__builtin_arm_mve_vst1q_s16
__builtin_arm_mve_vst1q_s32
__builtin_arm_mve_vst1q_s8
__builtin_arm_mve_vst1q_u16
__builtin_arm_mve_vst1q_u32
__builtin_arm_mve_vst1q_u8
__builtin_arm_mve_vst2q_f16
__builtin_arm_mve_vst2q_f32
__builtin_arm_mve_vst2q_s16
__builtin_arm_mve_vst2q_s32
__builtin_arm_mve_vst2q_s8
__builtin_arm_mve_vst2q_u16
__builtin_arm_mve_vst2q_u32
__builtin_arm_mve_vst2q_u8
__builtin_arm_mve_vst4q_f16
__builtin_arm_mve_vst4q_f32
__builtin_arm_mve_vst4q_s16
__builtin_arm_mve_vst4q_s32
__builtin_arm_mve_vst4q_s8
__builtin_arm_mve_vst4q_u16
__builtin_arm_mve_vst4q_u32
__builtin_arm_mve_vst4q_u8
__builtin_arm_mve_vstrbq_p_s16
__builtin_arm_mve_vstrbq_p_s32
__builtin_arm_mve_vstrbq_p_s8
__builtin_arm_mve_vstrbq_p_u16
__builtin_arm_mve_vstrbq_p_u32
__builtin_arm_mve_vstrbq_p_u8
__builtin_arm_mve_vstrbq_s16
__builtin_arm_mve_vstrbq_s32
__builtin_arm_mve_vstrbq_s8
__builtin_arm_mve_vstrbq_scatter_offset_p_s16
__builtin_arm_mve_vstrbq_scatter_offset_p_s32
__builtin_arm_mve_vstrbq_scatter_offset_p_s8
__builtin_arm_mve_vstrbq_scatter_offset_p_u16
__builtin_arm_mve_vstrbq_scatter_offset_p_u32
__builtin_arm_mve_vstrbq_scatter_offset_p_u8
__builtin_arm_mve_vstrbq_scatter_offset_s16
__builtin_arm_mve_vstrbq_scatter_offset_s32
__builtin_arm_mve_vstrbq_scatter_offset_s8
__builtin_arm_mve_vstrbq_scatter_offset_u16
__builtin_arm_mve_vstrbq_scatter_offset_u32
__builtin_arm_mve_vstrbq_scatter_offset_u8
__builtin_arm_mve_vstrbq_u16
__builtin_arm_mve_vstrbq_u32
__builtin_arm_mve_vstrbq_u8
__builtin_arm_mve_vstrdq_scatter_base_p_s64
__builtin_arm_mve_vstrdq_scatter_base_p_u64
__builtin_arm_mve_vstrdq_scatter_base_s64
__builtin_arm_mve_vstrdq_scatter_base_u64
__builtin_arm_mve_vstrdq_scatter_base_wb_p_s64
__builtin_arm_mve_vstrdq_scatter_base_wb_p_u64
__builtin_arm_mve_vstrdq_scatter_base_wb_s64
__builtin_arm_mve_vstrdq_scatter_base_wb_u64
__builtin_arm_mve_vstrdq_scatter_offset_p_s64
__builtin_arm_mve_vstrdq_scatter_offset_p_u64
__builtin_arm_mve_vstrdq_scatter_offset_s64
__builtin_arm_mve_vstrdq_scatter_offset_u64
__builtin_arm_mve_vstrdq_scatter_shifted_offset_p_s64
__builtin_arm_mve_vstrdq_scatter_shifted_offset_p_u64
__builtin_arm_mve_vstrdq_scatter_shifted_offset_s64
__builtin_arm_mve_vstrdq_scatter_shifted_offset_u64
__builtin_arm_mve_vstrhq_f16
__builtin_arm_mve_vstrhq_p_f16
__builtin_arm_mve_vstrhq_p_s16
__builtin_arm_mve_vstrhq_p_s32
__builtin_arm_mve_vstrhq_p_u16
__builtin_arm_mve_vstrhq_p_u32
__builtin_arm_mve_vstrhq_s16
__builtin_arm_mve_vstrhq_s32
__builtin_arm_mve_vstrhq_scatter_offset_f16
__builtin_arm_mve_vstrhq_scatter_offset_p_f16
__builtin_arm_mve_vstrhq_scatter_offset_p_s16
__builtin_arm_mve_vstrhq_scatter_offset_p_s32
__builtin_arm_mve_vstrhq_scatter_offset_p_u16
__builtin_arm_mve_vstrhq_scatter_offset_p_u32
__builtin_arm_mve_vstrhq_scatter_offset_s16
__builtin_arm_mve_vstrhq_scatter_offset_s32
__builtin_arm_mve_vstrhq_scatter_offset_u16
__builtin_arm_mve_vstrhq_scatter_offset_u32
__builtin_arm_mve_vstrhq_scatter_shifted_offset_f16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_f16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_s16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_s32
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_u16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p_u32
__builtin_arm_mve_vstrhq_scatter_shifted_offset_s16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_s32
__builtin_arm_mve_vstrhq_scatter_shifted_offset_u16
__builtin_arm_mve_vstrhq_scatter_shifted_offset_u32
__builtin_arm_mve_vstrhq_u16
__builtin_arm_mve_vstrhq_u32
__builtin_arm_mve_vstrwq_f32
__builtin_arm_mve_vstrwq_p_f32
__builtin_arm_mve_vstrwq_p_s32
__builtin_arm_mve_vstrwq_p_u32
__builtin_arm_mve_vstrwq_s32
__builtin_arm_mve_vstrwq_scatter_base_f32
__builtin_arm_mve_vstrwq_scatter_base_p_f32
__builtin_arm_mve_vstrwq_scatter_base_p_s32
__builtin_arm_mve_vstrwq_scatter_base_p_u32
__builtin_arm_mve_vstrwq_scatter_base_s32
__builtin_arm_mve_vstrwq_scatter_base_u32
__builtin_arm_mve_vstrwq_scatter_base_wb_f32
__builtin_arm_mve_vstrwq_scatter_base_wb_p_f32
__builtin_arm_mve_vstrwq_scatter_base_wb_p_s32
__builtin_arm_mve_vstrwq_scatter_base_wb_p_u32
__builtin_arm_mve_vstrwq_scatter_base_wb_s32
__builtin_arm_mve_vstrwq_scatter_base_wb_u32
__builtin_arm_mve_vstrwq_scatter_offset_f32
__builtin_arm_mve_vstrwq_scatter_offset_p_f32
__builtin_arm_mve_vstrwq_scatter_offset_p_s32
__builtin_arm_mve_vstrwq_scatter_offset_p_u32
__builtin_arm_mve_vstrwq_scatter_offset_s32
__builtin_arm_mve_vstrwq_scatter_offset_u32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_f32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_p_f32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_p_s32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_p_u32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_s32
__builtin_arm_mve_vstrwq_scatter_shifted_offset_u32
__builtin_arm_mve_vstrwq_u32
__builtin_arm_mve_vsubq_f16
__builtin_arm_mve_vsubq_f32
__builtin_arm_mve_vsubq_m_f16
__builtin_arm_mve_vsubq_m_f32
__builtin_arm_mve_vsubq_m_n_f16
__builtin_arm_mve_vsubq_m_n_f32
__builtin_arm_mve_vsubq_m_n_s16
__builtin_arm_mve_vsubq_m_n_s32
__builtin_arm_mve_vsubq_m_n_s8
__builtin_arm_mve_vsubq_m_n_u16
__builtin_arm_mve_vsubq_m_n_u32
__builtin_arm_mve_vsubq_m_n_u8
__builtin_arm_mve_vsubq_m_s16
__builtin_arm_mve_vsubq_m_s32
__builtin_arm_mve_vsubq_m_s8
__builtin_arm_mve_vsubq_m_u16
__builtin_arm_mve_vsubq_m_u32
__builtin_arm_mve_vsubq_m_u8
__builtin_arm_mve_vsubq_n_f16
__builtin_arm_mve_vsubq_n_f32
__builtin_arm_mve_vsubq_n_s16
__builtin_arm_mve_vsubq_n_s32
__builtin_arm_mve_vsubq_n_s8
__builtin_arm_mve_vsubq_n_u16
__builtin_arm_mve_vsubq_n_u32
__builtin_arm_mve_vsubq_n_u8
__builtin_arm_mve_vsubq_s16
__builtin_arm_mve_vsubq_s32
__builtin_arm_mve_vsubq_s8
__builtin_arm_mve_vsubq_u16
__builtin_arm_mve_vsubq_u32
__builtin_arm_mve_vsubq_u8
__builtin_arm_mve_vsubq_x_f16
__builtin_arm_mve_vsubq_x_f32
__builtin_arm_mve_vsubq_x_n_f16
__builtin_arm_mve_vsubq_x_n_f32
__builtin_arm_mve_vsubq_x_n_s16
__builtin_arm_mve_vsubq_x_n_s32
__builtin_arm_mve_vsubq_x_n_s8
__builtin_arm_mve_vsubq_x_n_u16
__builtin_arm_mve_vsubq_x_n_u32
__builtin_arm_mve_vsubq_x_n_u8
__builtin_arm_mve_vsubq_x_s16
__builtin_arm_mve_vsubq_x_s32
__builtin_arm_mve_vsubq_x_s8
__builtin_arm_mve_vsubq_x_u16
__builtin_arm_mve_vsubq_x_u32
__builtin_arm_mve_vsubq_x_u8
__builtin_arm_mve_vuninitializedq_f16
__builtin_arm_mve_vuninitializedq_f32
__builtin_arm_mve_vuninitializedq_polymorphic_f16
__builtin_arm_mve_vuninitializedq_polymorphic_f32
__builtin_arm_mve_vuninitializedq_polymorphic_s16
__builtin_arm_mve_vuninitializedq_polymorphic_s32
__builtin_arm_mve_vuninitializedq_polymorphic_s64
__builtin_arm_mve_vuninitializedq_polymorphic_s8
__builtin_arm_mve_vuninitializedq_polymorphic_u16
__builtin_arm_mve_vuninitializedq_polymorphic_u32
__builtin_arm_mve_vuninitializedq_polymorphic_u64
__builtin_arm_mve_vuninitializedq_polymorphic_u8
__builtin_arm_mve_vuninitializedq_s16
__builtin_arm_mve_vuninitializedq_s32
__builtin_arm_mve_vuninitializedq_s64
__builtin_arm_mve_vuninitializedq_s8
__builtin_arm_mve_vuninitializedq_u16
__builtin_arm_mve_vuninitializedq_u32
__builtin_arm_mve_vuninitializedq_u64
__builtin_arm_mve_vuninitializedq_u8
__builtin_arm_mve_vabavq_p
__builtin_arm_mve_vabavq
__builtin_arm_mve_vabdq
__builtin_arm_mve_vabdq_m
__builtin_arm_mve_vabdq_x
__builtin_arm_mve_vabsq
__builtin_arm_mve_vabsq_m
__builtin_arm_mve_vabsq_x
__builtin_arm_mve_vadciq_m
__builtin_arm_mve_vadciq
__builtin_arm_mve_vadcq_m
__builtin_arm_mve_vadcq
__builtin_arm_mve_vaddlvaq_p
__builtin_arm_mve_vaddlvaq
__builtin_arm_mve_vaddlvq_p
__builtin_arm_mve_vaddlvq
__builtin_arm_mve_vaddq
__builtin_arm_mve_vaddq_m
__builtin_arm_mve_vaddq_x
__builtin_arm_mve_vaddvaq_p
__builtin_arm_mve_vaddvaq
__builtin_arm_mve_vaddvq_p
__builtin_arm_mve_vaddvq
__builtin_arm_mve_vandq
__builtin_arm_mve_vandq_m
__builtin_arm_mve_vandq_x
__builtin_arm_mve_vbicq
__builtin_arm_mve_vbicq_m
__builtin_arm_mve_vbicq_m_n
__builtin_arm_mve_vbicq_x
__builtin_arm_mve_vbrsrq_m
__builtin_arm_mve_vbrsrq
__builtin_arm_mve_vbrsrq_x
__builtin_arm_mve_vcaddq_rot270
__builtin_arm_mve_vcaddq_rot270_m
__builtin_arm_mve_vcaddq_rot270_x
__builtin_arm_mve_vcaddq_rot90
__builtin_arm_mve_vcaddq_rot90_m
__builtin_arm_mve_vcaddq_rot90_x
__builtin_arm_mve_vclsq_m
__builtin_arm_mve_vclsq
__builtin_arm_mve_vclsq_x
__builtin_arm_mve_vclzq_m
__builtin_arm_mve_vclzq
__builtin_arm_mve_vclzq_x
__builtin_arm_mve_vcmlaq
__builtin_arm_mve_vcmlaq_m
__builtin_arm_mve_vcmlaq_rot180
__builtin_arm_mve_vcmlaq_rot180_m
__builtin_arm_mve_vcmlaq_rot270
__builtin_arm_mve_vcmlaq_rot270_m
__builtin_arm_mve_vcmlaq_rot90
__builtin_arm_mve_vcmlaq_rot90_m
__builtin_arm_mve_vcmpcsq_m
__builtin_arm_mve_vcmpcsq
__builtin_arm_mve_vcmpeqq
__builtin_arm_mve_vcmpeqq_m
__builtin_arm_mve_vcmpgeq
__builtin_arm_mve_vcmpgeq_m
__builtin_arm_mve_vcmpgtq
__builtin_arm_mve_vcmpgtq_m
__builtin_arm_mve_vcmphiq_m
__builtin_arm_mve_vcmphiq
__builtin_arm_mve_vcmpleq
__builtin_arm_mve_vcmpleq_m
__builtin_arm_mve_vcmpltq
__builtin_arm_mve_vcmpltq_m
__builtin_arm_mve_vcmpneq
__builtin_arm_mve_vcmpneq_m
__builtin_arm_mve_vcmulq
__builtin_arm_mve_vcmulq_m
__builtin_arm_mve_vcmulq_rot180
__builtin_arm_mve_vcmulq_rot180_m
__builtin_arm_mve_vcmulq_rot180_x
__builtin_arm_mve_vcmulq_rot270
__builtin_arm_mve_vcmulq_rot270_m
__builtin_arm_mve_vcmulq_rot270_x
__builtin_arm_mve_vcmulq_rot90
__builtin_arm_mve_vcmulq_rot90_m
__builtin_arm_mve_vcmulq_rot90_x
__builtin_arm_mve_vcmulq_x
__builtin_arm_mve_vcvtaq_m
__builtin_arm_mve_vcvtmq_m
__builtin_arm_mve_vcvtnq_m
__builtin_arm_mve_vcvtpq_m
__builtin_arm_mve_vcvtq
__builtin_arm_mve_vcvtq_m
__builtin_arm_mve_vcvtq_m_n
__builtin_arm_mve_vcvtq_n
__builtin_arm_mve_vcvtq_x
__builtin_arm_mve_vcvtq_x_n
__builtin_arm_mve_vddupq_m
__builtin_arm_mve_vddupq_u16
__builtin_arm_mve_vddupq_u32
__builtin_arm_mve_vddupq_u8
__builtin_arm_mve_vddupq_x_u16
__builtin_arm_mve_vddupq_x_u32
__builtin_arm_mve_vddupq_x_u8
__builtin_arm_mve_vdupq_m
__builtin_arm_mve_vdwdupq_m
__builtin_arm_mve_vdwdupq_u16
__builtin_arm_mve_vdwdupq_u32
__builtin_arm_mve_vdwdupq_u8
__builtin_arm_mve_vdwdupq_x_u16
__builtin_arm_mve_vdwdupq_x_u32
__builtin_arm_mve_vdwdupq_x_u8
__builtin_arm_mve_veorq
__builtin_arm_mve_veorq_m
__builtin_arm_mve_veorq_x
__builtin_arm_mve_vfmaq
__builtin_arm_mve_vfmaq_m
__builtin_arm_mve_vfmasq_m
__builtin_arm_mve_vfmasq
__builtin_arm_mve_vfmsq
__builtin_arm_mve_vfmsq_m
__builtin_arm_mve_vgetq_lane
__builtin_arm_mve_vhaddq_m
__builtin_arm_mve_vhaddq
__builtin_arm_mve_vhaddq_x
__builtin_arm_mve_vhcaddq_rot270_m
__builtin_arm_mve_vhcaddq_rot270
__builtin_arm_mve_vhcaddq_rot270_x
__builtin_arm_mve_vhcaddq_rot90_m
__builtin_arm_mve_vhcaddq_rot90
__builtin_arm_mve_vhcaddq_rot90_x
__builtin_arm_mve_vhsubq_m
__builtin_arm_mve_vhsubq
__builtin_arm_mve_vhsubq_x
__builtin_arm_mve_vidupq_m
__builtin_arm_mve_vidupq_u16
__builtin_arm_mve_vidupq_u32
__builtin_arm_mve_vidupq_u8
__builtin_arm_mve_vidupq_x_u16
__builtin_arm_mve_vidupq_x_u32
__builtin_arm_mve_vidupq_x_u8
__builtin_arm_mve_viwdupq_m
__builtin_arm_mve_viwdupq_u16
__builtin_arm_mve_viwdupq_u32
__builtin_arm_mve_viwdupq_u8
__builtin_arm_mve_viwdupq_x_u16
__builtin_arm_mve_viwdupq_x_u32
__builtin_arm_mve_viwdupq_x_u8
__builtin_arm_mve_vld1q
__builtin_arm_mve_vld1q_z
__builtin_arm_mve_vld2q
__builtin_arm_mve_vld4q
__builtin_arm_mve_vldrbq_gather_offset
__builtin_arm_mve_vldrbq_gather_offset_z
__builtin_arm_mve_vldrdq_gather_offset
__builtin_arm_mve_vldrdq_gather_offset_z
__builtin_arm_mve_vldrdq_gather_shifted_offset
__builtin_arm_mve_vldrdq_gather_shifted_offset_z
__builtin_arm_mve_vldrhq_gather_offset
__builtin_arm_mve_vldrhq_gather_offset_z
__builtin_arm_mve_vldrhq_gather_shifted_offset
__builtin_arm_mve_vldrhq_gather_shifted_offset_z
__builtin_arm_mve_vldrwq_gather_offset
__builtin_arm_mve_vldrwq_gather_offset_z
__builtin_arm_mve_vldrwq_gather_shifted_offset
__builtin_arm_mve_vldrwq_gather_shifted_offset_z
__builtin_arm_mve_vmaxaq_m
__builtin_arm_mve_vmaxaq
__builtin_arm_mve_vmaxavq_p
__builtin_arm_mve_vmaxavq
__builtin_arm_mve_vmaxnmaq
__builtin_arm_mve_vmaxnmaq_m
__builtin_arm_mve_vmaxnmavq
__builtin_arm_mve_vmaxnmavq_p
__builtin_arm_mve_vmaxnmq
__builtin_arm_mve_vmaxnmq_m
__builtin_arm_mve_vmaxnmq_x
__builtin_arm_mve_vmaxnmvq
__builtin_arm_mve_vmaxnmvq_p
__builtin_arm_mve_vmaxq_m
__builtin_arm_mve_vmaxq
__builtin_arm_mve_vmaxq_x
__builtin_arm_mve_vmaxvq_p
__builtin_arm_mve_vmaxvq
__builtin_arm_mve_vminaq_m
__builtin_arm_mve_vminaq
__builtin_arm_mve_vminavq_p
__builtin_arm_mve_vminavq
__builtin_arm_mve_vminnmaq
__builtin_arm_mve_vminnmaq_m
__builtin_arm_mve_vminnmavq
__builtin_arm_mve_vminnmavq_p
__builtin_arm_mve_vminnmq
__builtin_arm_mve_vminnmq_m
__builtin_arm_mve_vminnmq_x
__builtin_arm_mve_vminnmvq
__builtin_arm_mve_vminnmvq_p
__builtin_arm_mve_vminq_m
__builtin_arm_mve_vminq
__builtin_arm_mve_vminq_x
__builtin_arm_mve_vminvq_p
__builtin_arm_mve_vminvq
__builtin_arm_mve_vmladavaq_p
__builtin_arm_mve_vmladavaq
__builtin_arm_mve_vmladavaxq_p
__builtin_arm_mve_vmladavaxq
__builtin_arm_mve_vmladavq_p
__builtin_arm_mve_vmladavq
__builtin_arm_mve_vmladavxq_p
__builtin_arm_mve_vmladavxq
__builtin_arm_mve_vmlaldavaq_p
__builtin_arm_mve_vmlaldavaq
__builtin_arm_mve_vmlaldavaxq_p
__builtin_arm_mve_vmlaldavaxq
__builtin_arm_mve_vmlaldavq_p
__builtin_arm_mve_vmlaldavq
__builtin_arm_mve_vmlaldavxq_p
__builtin_arm_mve_vmlaldavxq
__builtin_arm_mve_vmlaq_m
__builtin_arm_mve_vmlaq
__builtin_arm_mve_vmlasq_m
__builtin_arm_mve_vmlasq
__builtin_arm_mve_vmlsdavaq_p
__builtin_arm_mve_vmlsdavaq
__builtin_arm_mve_vmlsdavaxq_p
__builtin_arm_mve_vmlsdavaxq
__builtin_arm_mve_vmlsdavq_p
__builtin_arm_mve_vmlsdavq
__builtin_arm_mve_vmlsdavxq_p
__builtin_arm_mve_vmlsdavxq
__builtin_arm_mve_vmlsldavaq_p
__builtin_arm_mve_vmlsldavaq
__builtin_arm_mve_vmlsldavaxq_p
__builtin_arm_mve_vmlsldavaxq
__builtin_arm_mve_vmlsldavq_p
__builtin_arm_mve_vmlsldavq
__builtin_arm_mve_vmlsldavxq_p
__builtin_arm_mve_vmlsldavxq
__builtin_arm_mve_vmovlbq_m
__builtin_arm_mve_vmovlbq
__builtin_arm_mve_vmovlbq_x
__builtin_arm_mve_vmovltq_m
__builtin_arm_mve_vmovltq
__builtin_arm_mve_vmovltq_x
__builtin_arm_mve_vmovnbq_m
__builtin_arm_mve_vmovnbq
__builtin_arm_mve_vmovntq_m
__builtin_arm_mve_vmovntq
__builtin_arm_mve_vmulhq_m
__builtin_arm_mve_vmulhq
__builtin_arm_mve_vmulhq_x
__builtin_arm_mve_vmullbq_int_m
__builtin_arm_mve_vmullbq_int
__builtin_arm_mve_vmullbq_int_x
__builtin_arm_mve_vmullbq_poly_m
__builtin_arm_mve_vmullbq_poly
__builtin_arm_mve_vmullbq_poly_x
__builtin_arm_mve_vmulltq_int_m
__builtin_arm_mve_vmulltq_int
__builtin_arm_mve_vmulltq_int_x
__builtin_arm_mve_vmulltq_poly_m
__builtin_arm_mve_vmulltq_poly
__builtin_arm_mve_vmulltq_poly_x
__builtin_arm_mve_vmulq
__builtin_arm_mve_vmulq_m
__builtin_arm_mve_vmulq_x
__builtin_arm_mve_vmvnq_m
__builtin_arm_mve_vmvnq
__builtin_arm_mve_vmvnq_x
__builtin_arm_mve_vnegq
__builtin_arm_mve_vnegq_m
__builtin_arm_mve_vnegq_x
__builtin_arm_mve_vornq
__builtin_arm_mve_vornq_m
__builtin_arm_mve_vornq_x
__builtin_arm_mve_vorrq
__builtin_arm_mve_vorrq_m
__builtin_arm_mve_vorrq_m_n
__builtin_arm_mve_vorrq_x
__builtin_arm_mve_vpselq
__builtin_arm_mve_vqabsq_m
__builtin_arm_mve_vqabsq
__builtin_arm_mve_vqaddq_m
__builtin_arm_mve_vqaddq
__builtin_arm_mve_vqdmladhq_m
__builtin_arm_mve_vqdmladhq
__builtin_arm_mve_vqdmladhxq_m
__builtin_arm_mve_vqdmladhxq
__builtin_arm_mve_vqdmlahq_m
__builtin_arm_mve_vqdmlahq
__builtin_arm_mve_vqdmlashq_m
__builtin_arm_mve_vqdmlashq
__builtin_arm_mve_vqdmlsdhq_m
__builtin_arm_mve_vqdmlsdhq
__builtin_arm_mve_vqdmlsdhxq_m
__builtin_arm_mve_vqdmlsdhxq
__builtin_arm_mve_vqdmulhq_m
__builtin_arm_mve_vqdmulhq
__builtin_arm_mve_vqdmullbq_m
__builtin_arm_mve_vqdmullbq
__builtin_arm_mve_vqdmulltq_m
__builtin_arm_mve_vqdmulltq
__builtin_arm_mve_vqmovnbq_m
__builtin_arm_mve_vqmovnbq
__builtin_arm_mve_vqmovntq_m
__builtin_arm_mve_vqmovntq
__builtin_arm_mve_vqmovunbq_m
__builtin_arm_mve_vqmovunbq
__builtin_arm_mve_vqmovuntq_m
__builtin_arm_mve_vqmovuntq
__builtin_arm_mve_vqnegq_m
__builtin_arm_mve_vqnegq
__builtin_arm_mve_vqrdmladhq_m
__builtin_arm_mve_vqrdmladhq
__builtin_arm_mve_vqrdmladhxq_m
__builtin_arm_mve_vqrdmladhxq
__builtin_arm_mve_vqrdmlahq_m
__builtin_arm_mve_vqrdmlahq
__builtin_arm_mve_vqrdmlashq_m
__builtin_arm_mve_vqrdmlashq
__builtin_arm_mve_vqrdmlsdhq_m
__builtin_arm_mve_vqrdmlsdhq
__builtin_arm_mve_vqrdmlsdhxq_m
__builtin_arm_mve_vqrdmlsdhxq
__builtin_arm_mve_vqrdmulhq_m
__builtin_arm_mve_vqrdmulhq
__builtin_arm_mve_vqrshlq_m_n
__builtin_arm_mve_vqrshlq_m
__builtin_arm_mve_vqrshlq
__builtin_arm_mve_vqrshrnbq_m
__builtin_arm_mve_vqrshrnbq
__builtin_arm_mve_vqrshrntq_m
__builtin_arm_mve_vqrshrntq
__builtin_arm_mve_vqrshrunbq_m
__builtin_arm_mve_vqrshrunbq
__builtin_arm_mve_vqrshruntq_m
__builtin_arm_mve_vqrshruntq
__builtin_arm_mve_vqshlq_m_n
__builtin_arm_mve_vqshlq_m_r
__builtin_arm_mve_vqshlq_m
__builtin_arm_mve_vqshlq_n
__builtin_arm_mve_vqshlq_r
__builtin_arm_mve_vqshlq
__builtin_arm_mve_vqshluq_m
__builtin_arm_mve_vqshluq
__builtin_arm_mve_vqshrnbq_m
__builtin_arm_mve_vqshrnbq
__builtin_arm_mve_vqshrntq_m
__builtin_arm_mve_vqshrntq
__builtin_arm_mve_vqshrunbq_m
__builtin_arm_mve_vqshrunbq
__builtin_arm_mve_vqshruntq_m
__builtin_arm_mve_vqshruntq
__builtin_arm_mve_vqsubq_m
__builtin_arm_mve_vqsubq
__builtin_arm_mve_vreinterpretq_f16
__builtin_arm_mve_vreinterpretq_f32
__builtin_arm_mve_vreinterpretq_s16
__builtin_arm_mve_vreinterpretq_s32
__builtin_arm_mve_vreinterpretq_s64
__builtin_arm_mve_vreinterpretq_s8
__builtin_arm_mve_vreinterpretq_u16
__builtin_arm_mve_vreinterpretq_u32
__builtin_arm_mve_vreinterpretq_u64
__builtin_arm_mve_vreinterpretq_u8
__builtin_arm_mve_vrev16q_m
__builtin_arm_mve_vrev16q
__builtin_arm_mve_vrev16q_x
__builtin_arm_mve_vrev32q
__builtin_arm_mve_vrev32q_m
__builtin_arm_mve_vrev32q_x
__builtin_arm_mve_vrev64q
__builtin_arm_mve_vrev64q_m
__builtin_arm_mve_vrev64q_x
__builtin_arm_mve_vrhaddq_m
__builtin_arm_mve_vrhaddq
__builtin_arm_mve_vrhaddq_x
__builtin_arm_mve_vrmlaldavhaq_p
__builtin_arm_mve_vrmlaldavhaq
__builtin_arm_mve_vrmlaldavhaxq_p
__builtin_arm_mve_vrmlaldavhaxq
__builtin_arm_mve_vrmlaldavhq_p
__builtin_arm_mve_vrmlaldavhq
__builtin_arm_mve_vrmlaldavhxq_p
__builtin_arm_mve_vrmlaldavhxq
__builtin_arm_mve_vrmlsldavhaq_p
__builtin_arm_mve_vrmlsldavhaq
__builtin_arm_mve_vrmlsldavhaxq_p
__builtin_arm_mve_vrmlsldavhaxq
__builtin_arm_mve_vrmlsldavhq_p
__builtin_arm_mve_vrmlsldavhq
__builtin_arm_mve_vrmlsldavhxq_p
__builtin_arm_mve_vrmlsldavhxq
__builtin_arm_mve_vrmulhq_m
__builtin_arm_mve_vrmulhq
__builtin_arm_mve_vrmulhq_x
__builtin_arm_mve_vrndaq
__builtin_arm_mve_vrndaq_m
__builtin_arm_mve_vrndaq_x
__builtin_arm_mve_vrndmq
__builtin_arm_mve_vrndmq_m
__builtin_arm_mve_vrndmq_x
__builtin_arm_mve_vrndnq
__builtin_arm_mve_vrndnq_m
__builtin_arm_mve_vrndnq_x
__builtin_arm_mve_vrndpq
__builtin_arm_mve_vrndpq_m
__builtin_arm_mve_vrndpq_x
__builtin_arm_mve_vrndq
__builtin_arm_mve_vrndq_m
__builtin_arm_mve_vrndq_x
__builtin_arm_mve_vrndxq
__builtin_arm_mve_vrndxq_m
__builtin_arm_mve_vrndxq_x
__builtin_arm_mve_vrshlq_m_n
__builtin_arm_mve_vrshlq_m
__builtin_arm_mve_vrshlq
__builtin_arm_mve_vrshlq_x
__builtin_arm_mve_vrshrnbq_m
__builtin_arm_mve_vrshrnbq
__builtin_arm_mve_vrshrntq_m
__builtin_arm_mve_vrshrntq
__builtin_arm_mve_vrshrq_m
__builtin_arm_mve_vrshrq
__builtin_arm_mve_vrshrq_x
__builtin_arm_mve_vsbciq_m
__builtin_arm_mve_vsbciq
__builtin_arm_mve_vsbcq_m
__builtin_arm_mve_vsbcq
__builtin_arm_mve_vsetq_lane
__builtin_arm_mve_vshlcq_m
__builtin_arm_mve_vshlcq
__builtin_arm_mve_vshllbq_m
__builtin_arm_mve_vshllbq
__builtin_arm_mve_vshllbq_x
__builtin_arm_mve_vshlltq_m
__builtin_arm_mve_vshlltq
__builtin_arm_mve_vshlltq_x
__builtin_arm_mve_vshlq_m_n
__builtin_arm_mve_vshlq_m_r
__builtin_arm_mve_vshlq_m
__builtin_arm_mve_vshlq_n
__builtin_arm_mve_vshlq_r
__builtin_arm_mve_vshlq
__builtin_arm_mve_vshlq_x_n
__builtin_arm_mve_vshlq_x
__builtin_arm_mve_vshrnbq_m
__builtin_arm_mve_vshrnbq
__builtin_arm_mve_vshrntq_m
__builtin_arm_mve_vshrntq
__builtin_arm_mve_vshrq_m
__builtin_arm_mve_vshrq
__builtin_arm_mve_vshrq_x
__builtin_arm_mve_vsliq_m
__builtin_arm_mve_vsliq
__builtin_arm_mve_vsriq_m
__builtin_arm_mve_vsriq
__builtin_arm_mve_vst1q
__builtin_arm_mve_vst1q_p
__builtin_arm_mve_vst2q
__builtin_arm_mve_vst4q
__builtin_arm_mve_vstrbq_p
__builtin_arm_mve_vstrbq
__builtin_arm_mve_vstrbq_scatter_offset_p
__builtin_arm_mve_vstrbq_scatter_offset
__builtin_arm_mve_vstrdq_scatter_base_p
__builtin_arm_mve_vstrdq_scatter_base
__builtin_arm_mve_vstrdq_scatter_base_wb_p
__builtin_arm_mve_vstrdq_scatter_base_wb
__builtin_arm_mve_vstrdq_scatter_offset_p
__builtin_arm_mve_vstrdq_scatter_offset
__builtin_arm_mve_vstrdq_scatter_shifted_offset_p
__builtin_arm_mve_vstrdq_scatter_shifted_offset
__builtin_arm_mve_vstrhq
__builtin_arm_mve_vstrhq_p
__builtin_arm_mve_vstrhq_scatter_offset
__builtin_arm_mve_vstrhq_scatter_offset_p
__builtin_arm_mve_vstrhq_scatter_shifted_offset
__builtin_arm_mve_vstrhq_scatter_shifted_offset_p
__builtin_arm_mve_vstrwq
__builtin_arm_mve_vstrwq_p
__builtin_arm_mve_vstrwq_scatter_base
__builtin_arm_mve_vstrwq_scatter_base_p
__builtin_arm_mve_vstrwq_scatter_base_wb
__builtin_arm_mve_vstrwq_scatter_base_wb_p
__builtin_arm_mve_vstrwq_scatter_offset
__builtin_arm_mve_vstrwq_scatter_offset_p
__builtin_arm_mve_vstrwq_scatter_shifted_offset
__builtin_arm_mve_vstrwq_scatter_shifted_offset_p
__builtin_arm_mve_vsubq
__builtin_arm_mve_vsubq_m
__builtin_arm_mve_vsubq_x
__builtin_arm_mve_vuninitializedq
__builtin_arm_cde_cx1
__builtin_arm_cde_cx1a
__builtin_arm_cde_cx1d
__builtin_arm_cde_cx1da
__builtin_arm_cde_cx2
__builtin_arm_cde_cx2a
__builtin_arm_cde_cx2d
__builtin_arm_cde_cx2da
__builtin_arm_cde_cx3
__builtin_arm_cde_cx3a
__builtin_arm_cde_cx3d
__builtin_arm_cde_cx3da
__builtin_arm_cde_vcx1_u32
__builtin_arm_cde_vcx1a_u32
__builtin_arm_cde_vcx1d_u64
__builtin_arm_cde_vcx1da_u64
__builtin_arm_cde_vcx1q_m_f16
__builtin_arm_cde_vcx1q_m_f32
__builtin_arm_cde_vcx1q_m_s16
__builtin_arm_cde_vcx1q_m_s32
__builtin_arm_cde_vcx1q_m_s64
__builtin_arm_cde_vcx1q_m_s8
__builtin_arm_cde_vcx1q_m_u16
__builtin_arm_cde_vcx1q_m_u32
__builtin_arm_cde_vcx1q_m_u64
__builtin_arm_cde_vcx1q_m_u8
__builtin_arm_cde_vcx1q_u8
__builtin_arm_cde_vcx1qa_f16
__builtin_arm_cde_vcx1qa_f32
__builtin_arm_cde_vcx1qa_m_f16
__builtin_arm_cde_vcx1qa_m_f32
__builtin_arm_cde_vcx1qa_m_s16
__builtin_arm_cde_vcx1qa_m_s32
__builtin_arm_cde_vcx1qa_m_s64
__builtin_arm_cde_vcx1qa_m_s8
__builtin_arm_cde_vcx1qa_m_u16
__builtin_arm_cde_vcx1qa_m_u32
__builtin_arm_cde_vcx1qa_m_u64
__builtin_arm_cde_vcx1qa_m_u8
__builtin_arm_cde_vcx1qa_s16
__builtin_arm_cde_vcx1qa_s32
__builtin_arm_cde_vcx1qa_s64
__builtin_arm_cde_vcx1qa_s8
__builtin_arm_cde_vcx1qa_u16
__builtin_arm_cde_vcx1qa_u32
__builtin_arm_cde_vcx1qa_u64
__builtin_arm_cde_vcx1qa_u8
__builtin_arm_cde_vcx2_u32
__builtin_arm_cde_vcx2a_u32
__builtin_arm_cde_vcx2d_u64
__builtin_arm_cde_vcx2da_u64
__builtin_arm_cde_vcx2q_f16
__builtin_arm_cde_vcx2q_f32
__builtin_arm_cde_vcx2q_m_impl_f16
__builtin_arm_cde_vcx2q_m_impl_f32
__builtin_arm_cde_vcx2q_m_impl_s16
__builtin_arm_cde_vcx2q_m_impl_s32
__builtin_arm_cde_vcx2q_m_impl_s64
__builtin_arm_cde_vcx2q_m_impl_s8
__builtin_arm_cde_vcx2q_m_impl_u16
__builtin_arm_cde_vcx2q_m_impl_u32
__builtin_arm_cde_vcx2q_m_impl_u64
__builtin_arm_cde_vcx2q_m_impl_u8
__builtin_arm_cde_vcx2q_s16
__builtin_arm_cde_vcx2q_s32
__builtin_arm_cde_vcx2q_s64
__builtin_arm_cde_vcx2q_s8
__builtin_arm_cde_vcx2q_u16
__builtin_arm_cde_vcx2q_u32
__builtin_arm_cde_vcx2q_u64
__builtin_arm_cde_vcx2q_u8
__builtin_arm_cde_vcx2q_u8_f16
__builtin_arm_cde_vcx2q_u8_f32
__builtin_arm_cde_vcx2q_u8_s16
__builtin_arm_cde_vcx2q_u8_s32
__builtin_arm_cde_vcx2q_u8_s64
__builtin_arm_cde_vcx2q_u8_s8
__builtin_arm_cde_vcx2q_u8_u16
__builtin_arm_cde_vcx2q_u8_u32
__builtin_arm_cde_vcx2q_u8_u64
__builtin_arm_cde_vcx2q_u8_u8
__builtin_arm_cde_vcx2qa_impl_f16
__builtin_arm_cde_vcx2qa_impl_f32
__builtin_arm_cde_vcx2qa_impl_s16
__builtin_arm_cde_vcx2qa_impl_s32
__builtin_arm_cde_vcx2qa_impl_s64
__builtin_arm_cde_vcx2qa_impl_s8
__builtin_arm_cde_vcx2qa_impl_u16
__builtin_arm_cde_vcx2qa_impl_u32
__builtin_arm_cde_vcx2qa_impl_u64
__builtin_arm_cde_vcx2qa_impl_u8
__builtin_arm_cde_vcx2qa_m_impl_f16
__builtin_arm_cde_vcx2qa_m_impl_f32
__builtin_arm_cde_vcx2qa_m_impl_s16
__builtin_arm_cde_vcx2qa_m_impl_s32
__builtin_arm_cde_vcx2qa_m_impl_s64
__builtin_arm_cde_vcx2qa_m_impl_s8
__builtin_arm_cde_vcx2qa_m_impl_u16
__builtin_arm_cde_vcx2qa_m_impl_u32
__builtin_arm_cde_vcx2qa_m_impl_u64
__builtin_arm_cde_vcx2qa_m_impl_u8
__builtin_arm_cde_vcx3_u32
__builtin_arm_cde_vcx3a_u32
__builtin_arm_cde_vcx3d_u64
__builtin_arm_cde_vcx3da_u64
__builtin_arm_cde_vcx3q_impl_f16
__builtin_arm_cde_vcx3q_impl_f32
__builtin_arm_cde_vcx3q_impl_s16
__builtin_arm_cde_vcx3q_impl_s32
__builtin_arm_cde_vcx3q_impl_s64
__builtin_arm_cde_vcx3q_impl_s8
__builtin_arm_cde_vcx3q_impl_u16
__builtin_arm_cde_vcx3q_impl_u32
__builtin_arm_cde_vcx3q_impl_u64
__builtin_arm_cde_vcx3q_impl_u8
__builtin_arm_cde_vcx3q_m_impl_f16
__builtin_arm_cde_vcx3q_m_impl_f32
__builtin_arm_cde_vcx3q_m_impl_s16
__builtin_arm_cde_vcx3q_m_impl_s32
__builtin_arm_cde_vcx3q_m_impl_s64
__builtin_arm_cde_vcx3q_m_impl_s8
__builtin_arm_cde_vcx3q_m_impl_u16
__builtin_arm_cde_vcx3q_m_impl_u32
__builtin_arm_cde_vcx3q_m_impl_u64
__builtin_arm_cde_vcx3q_m_impl_u8
__builtin_arm_cde_vcx3q_u8_impl_f16
__builtin_arm_cde_vcx3q_u8_impl_f32
__builtin_arm_cde_vcx3q_u8_impl_s16
__builtin_arm_cde_vcx3q_u8_impl_s32
__builtin_arm_cde_vcx3q_u8_impl_s64
__builtin_arm_cde_vcx3q_u8_impl_s8
__builtin_arm_cde_vcx3q_u8_impl_u16
__builtin_arm_cde_vcx3q_u8_impl_u32
__builtin_arm_cde_vcx3q_u8_impl_u64
__builtin_arm_cde_vcx3q_u8_impl_u8
__builtin_arm_cde_vcx3qa_impl_f16
__builtin_arm_cde_vcx3qa_impl_f32
__builtin_arm_cde_vcx3qa_impl_s16
__builtin_arm_cde_vcx3qa_impl_s32
__builtin_arm_cde_vcx3qa_impl_s64
__builtin_arm_cde_vcx3qa_impl_s8
__builtin_arm_cde_vcx3qa_impl_u16
__builtin_arm_cde_vcx3qa_impl_u32
__builtin_arm_cde_vcx3qa_impl_u64
__builtin_arm_cde_vcx3qa_impl_u8
__builtin_arm_cde_vcx3qa_m_impl_f16
__builtin_arm_cde_vcx3qa_m_impl_f32
__builtin_arm_cde_vcx3qa_m_impl_s16
__builtin_arm_cde_vcx3qa_m_impl_s32
__builtin_arm_cde_vcx3qa_m_impl_s64
__builtin_arm_cde_vcx3qa_m_impl_s8
__builtin_arm_cde_vcx3qa_m_impl_u16
__builtin_arm_cde_vcx3qa_m_impl_u32
__builtin_arm_cde_vcx3qa_m_impl_u64
__builtin_arm_cde_vcx3qa_m_impl_u8
__builtin_arm_cde_vreinterpretq_u8_u8
vIUiC
__ldrexd
WiWiCD*
_MoveFromCoprocessor
UiIUiIUiIUiIUiIUi
_MoveFromCoprocessor2
_MoveToCoprocessor
vUiIUiIUiIUiIUiIUi
_MoveToCoprocessor2
__ARMEL__
__ARMEB__
__ARM_BIG_ENDIAN
_M_ARM_NT
_M_ARMT
_M_ARM
_M_THUMB
_M_ARM_FP
_ARM_
armv7
__RENDERSCRIPT__
__AVR
__AVR__
__flash
__attribute__((address_space(1)))
avrxmega1
avrxmega3
__AVR_AT90S1200__
__AVR_ATtiny11__
__AVR_ATtiny12__
__AVR_ATtiny15__
__AVR_ATtiny28__
__AVR_AT90S2313__
__AVR_AT90S2323__
__AVR_AT90S2333__
__AVR_AT90S2343__
__AVR_ATtiny22__
__AVR_ATtiny26__
__AVR_AT86RF401__
__AVR_AT90S4414__
__AVR_AT90S4433__
__AVR_AT90S4434__
__AVR_AT90S8515__
__AVR_AT90c8534__
__AVR_AT90S8535__
__AVR_ATA5272__
__AVR_ATtiny13__
__AVR_ATtiny13A__
__AVR_ATtiny2313__
__AVR_ATtiny2313A__
__AVR_ATtiny24__
__AVR_ATtiny24A__
__AVR_ATtiny4313__
__AVR_ATtiny44__
__AVR_ATtiny44A__
__AVR_ATtiny84__
__AVR_ATtiny84A__
__AVR_ATtiny25__
__AVR_ATtiny45__
__AVR_ATtiny85__
__AVR_ATtiny261__
__AVR_ATtiny261A__
__AVR_ATtiny441__
__AVR_ATtiny461__
__AVR_ATtiny461A__
__AVR_ATtiny841__
__AVR_ATtiny861__
__AVR_ATtiny861A__
__AVR_ATtiny87__
__AVR_ATtiny43U__
__AVR_ATtiny48__
__AVR_ATtiny88__
__AVR_ATtiny828__
__AVR_AT43USB355__
__AVR_AT76C711__
__AVR_ATmega103__
__AVR_AT43USB320__
__AVR_ATtiny167__
__AVR_AT90USB82__
__AVR_AT90USB162__
__AVR_ATA5505__
__AVR_ATmega8U2__
__AVR_ATmega16U2__
__AVR_ATmega32U2__
__AVR_ATtiny1634__
__AVR_ATmega8__
__AVR_ATA6289__
__AVR_ATmega8A__
__AVR_ATA6285__
__AVR_ATA6286__
__AVR_ATmega48__
__AVR_ATmega48A__
__AVR_ATmega48PA__
__AVR_ATmega48PB__
__AVR_ATmega48P__
__AVR_ATmega88__
__AVR_ATmega88A__
__AVR_ATmega88P__
__AVR_ATmega88PA__
__AVR_ATmega88PB__
__AVR_ATmega8515__
__AVR_ATmega8535__
__AVR_ATmega8HVA__
__AVR_AT90PWM1__
__AVR_AT90PWM2__
__AVR_AT90PWM2B__
__AVR_AT90PWM3__
__AVR_AT90PWM3B__
__AVR_AT90PWM81__
__AVR_ATA5790__
__AVR_ATA5795__
__AVR_ATmega16__
__AVR_ATmega16A__
__AVR_ATmega161__
__AVR_ATmega162__
__AVR_ATmega163__
__AVR_ATmega164A__
__AVR_ATmega164P__
__AVR_ATmega164PA__
__AVR_ATmega165__
__AVR_ATmega165A__
__AVR_ATmega165P__
__AVR_ATmega165PA__
__AVR_ATmega168__
__AVR_ATmega168A__
__AVR_ATmega168P__
__AVR_ATmega168PA__
__AVR_ATmega168PB__
__AVR_ATmega169__
__AVR_ATmega169A__
__AVR_ATmega169P__
__AVR_ATmega169PA__
__AVR_ATmega32__
__AVR_ATmega32A__
__AVR_ATmega323__
__AVR_ATmega324A__
__AVR_ATmega324P__
__AVR_ATmega324PA__
atmega324pb
__AVR_ATmega324PB__
__AVR_ATmega325__
__AVR_ATmega325A__
__AVR_ATmega325P__
__AVR_ATmega325PA__
__AVR_ATmega3250__
__AVR_ATmega3250A__
__AVR_ATmega3250P__
__AVR_ATmega3250PA__
__AVR_ATmega328__
__AVR_ATmega328P__
atmega328pb
__AVR_ATmega328PB__
__AVR_ATmega329__
__AVR_ATmega329A__
__AVR_ATmega329P__
__AVR_ATmega329PA__
__AVR_ATmega3290__
__AVR_ATmega3290A__
__AVR_ATmega3290P__
__AVR_ATmega3290PA__
__AVR_ATmega406__
__AVR_ATmega64__
__AVR_ATmega64A__
__AVR_ATmega640__
__AVR_ATmega644__
__AVR_ATmega644A__
__AVR_ATmega644P__
__AVR_ATmega644PA__
__AVR_ATmega645__
__AVR_ATmega645A__
__AVR_ATmega645P__
__AVR_ATmega649__
__AVR_ATmega649A__
__AVR_ATmega649P__
__AVR_ATmega6450__
__AVR_ATmega6450A__
__AVR_ATmega6450P__
__AVR_ATmega6490__
__AVR_ATmega6490A__
__AVR_ATmega6490P__
__AVR_ATmega64RFR2__
__AVR_ATmega644RFR2__
__AVR_ATmega16HVA__
__AVR_ATmega16HVA2__
__AVR_ATmega16HVB__
__AVR_ATmega16HVBREVB__
__AVR_ATmega32HVB__
__AVR_ATmega32HVBREVB__
__AVR_ATmega64HVE__
__AVR_AT90CAN32__
__AVR_AT90CAN64__
__AVR_AT90PWM161__
__AVR_AT90PWM216__
__AVR_AT90PWM316__
__AVR_ATmega32C1__
__AVR_ATmega64C1__
__AVR_ATmega16M1__
__AVR_ATmega32M1__
__AVR_ATmega64M1__
__AVR_ATmega16U4__
__AVR_ATmega32U4__
__AVR_ATmega32U6__
__AVR_AT90USB646__
__AVR_AT90USB647__
__AVR_AT90SCR100__
__AVR_AT94K__
__AVR_AT000__
__AVR_ATmega128__
__AVR_ATmega128A__
__AVR_ATmega1280__
__AVR_ATmega1281__
__AVR_ATmega1284__
__AVR_ATmega1284P__
__AVR_ATmega128RFA1__
__AVR_ATmega128RFR2__
__AVR_ATmega1284RFR2__
__AVR_AT90CAN128__
__AVR_AT90USB1286__
__AVR_AT90USB1287__
__AVR_ATmega2560__
__AVR_ATmega2561__
__AVR_ATmega256RFR2__
__AVR_ATmega2564RFR2__
__AVR_ATxmega16A4__
__AVR_ATxmega16A4U__
__AVR_ATxmega16C4__
__AVR_ATxmega16D4__
__AVR_ATxmega32A4__
__AVR_ATxmega32A4U__
__AVR_ATxmega32C4__
__AVR_ATxmega32D4__
__AVR_ATxmega32E5__
__AVR_ATxmega16E5__
__AVR_ATxmega8E5__
atxmega32x1
__AVR_ATxmega32X1__
atxmega64a3
__AVR_ATxmega64A3__
__AVR_ATxmega64A3U__
__AVR_ATxmega64A4U__
__AVR_ATxmega64B1__
__AVR_ATxmega64B3__
__AVR_ATxmega64C3__
__AVR_ATxmega64D3__
__AVR_ATxmega64D4__
__AVR_ATxmega64A1__
__AVR_ATxmega64A1U__
__AVR_ATxmega128A3__
__AVR_ATxmega128A3U__
__AVR_ATxmega128B1__
__AVR_ATxmega128B3__
__AVR_ATxmega128C3__
__AVR_ATxmega128D3__
__AVR_ATxmega128D4__
__AVR_ATxmega192A3__
__AVR_ATxmega192A3U__
__AVR_ATxmega192C3__
__AVR_ATxmega192D3__
__AVR_ATxmega256A3__
__AVR_ATxmega256A3U__
__AVR_ATxmega256A3B__
__AVR_ATxmega256A3BU__
__AVR_ATxmega256C3__
__AVR_ATxmega256D3__
__AVR_ATxmega384C3__
__AVR_ATxmega384D3__
__AVR_ATxmega128A1__
__AVR_ATxmega128A1U__
__AVR_ATxmega128A4U__
__AVR_ATtiny4__
__AVR_ATtiny5__
__AVR_ATtiny9__
__AVR_ATtiny10__
__AVR_ATtiny20__
__AVR_ATtiny40__
attiny102
__AVR_ATtiny102__
attiny104
__AVR_ATtiny104__
attiny202
__AVR_ATtiny202__
attiny402
__AVR_ATtiny402__
attiny204
__AVR_ATtiny204__
attiny404
__AVR_ATtiny404__
attiny804
__AVR_ATtiny804__
attiny1604
__AVR_ATtiny1604__
attiny406
__AVR_ATtiny406__
attiny806
__AVR_ATtiny806__
attiny1606
__AVR_ATtiny1606__
attiny807
__AVR_ATtiny807__
attiny1607
__AVR_ATtiny1607__
attiny212
__AVR_ATtiny212__
attiny412
__AVR_ATtiny412__
attiny214
__AVR_ATtiny214__
attiny414
__AVR_ATtiny414__
attiny814
__AVR_ATtiny814__
attiny1614
__AVR_ATtiny1614__
attiny416
__AVR_ATtiny416__
attiny816
__AVR_ATtiny816__
attiny1616
__AVR_ATtiny1616__
attiny3216
__AVR_ATtiny3216__
attiny417
__AVR_ATtiny417__
attiny817
__AVR_ATtiny817__
attiny1617
__AVR_ATtiny1617__
attiny3217
__AVR_ATtiny3217__
__builtin_preserve_field_info
__builtin_btf_type_id
LUi.
__builtin_preserve_type_info
__builtin_preserve_enum_value
__bpf__
__BPF__
+alu32
probe
__qdsp6__
__hexagon__
hexagonv5
__HEXAGON_V5__
__HEXAGON_ARCH__
__QDSP6_V5__
__QDSP6_ARCH__
hexagonv55
__HEXAGON_V55__
__QDSP6_V55__
hexagonv60
__HEXAGON_V60__
__QDSP6_V60__
hexagonv62
__HEXAGON_V62__
hexagonv65
__HEXAGON_V65__
hexagonv66
__HEXAGON_V66__
hexagonv67
__HEXAGON_V67__
hexagonv67t
__HEXAGON_V67T__
hexagonv68
__HEXAGON_V68__
hvx-length64b
__HVX__
__HVX_ARCH__
__HVX_LENGTH__
hvx-length128b
__HVXDBL__
audio
__HEXAGON_AUDIO__
__HEXAGON_PHYSICAL_SLOTS__
long-calls
+hvx-length64b
+hvx-length128b
+hvxv
-hvx
+audio
r1:0
r3:2
r5:4
r7:6
r9:8
r11:10
r13:12
r15:14
r17:16
r19:18
r21:20
r23:22
r25:24
r27:26
r29:28
r31:30
c1:0
c3:2
c5:4
c7:6
c9:8
c11:10
c13:12
c15:14
c17:16
c19:18
c21:20
c23:22
c25:24
c27:26
c29:28
c31:30
p3:0
upcyclelo
upcyclehi
framelimit
framekey
pktcountlo
pktcounthi
utimerlo
utimerhi
upcycle
pktcount
utimer
v1:0
v3:2
v5:4
v7:6
v9:8
v11:10
v13:12
v15:14
v17:16
v19:18
v21:20
v23:22
v25:24
v27:26
v29:28
v31:30
v3:0
v7:4
v11:8
v15:12
v19:16
v23:20
v27:24
v31:28
__builtin_SI_to_SXTHI_asrh
v5|v55|v60|v62|v65|v66|v67|v68
__builtin_brev_ldd
v*LLi*CLLi*iC
__builtin_brev_ldw
v*i*Ci*iC
__builtin_brev_ldh
v*s*Cs*iC
__builtin_brev_lduh
v*Us*CUs*iC
__builtin_brev_ldb
v*Sc*CSc*iC
__builtin_brev_ldub
v*Uc*CUc*iC
__builtin_circ_ldd
LLi*LLi*LLi*iIi
__builtin_circ_ldw
i*i*i*iIi
__builtin_circ_ldh
s*s*s*iIi
__builtin_circ_lduh
Us*Us*Us*iIi
__builtin_circ_ldb
c*c*c*iIi
__builtin_circ_ldub
Uc*Uc*Uc*iIi
__builtin_brev_std
LLi*CLLi*LLiiC
__builtin_brev_stw
i*Ci*iiC
__builtin_brev_sth
s*Cs*iiC
__builtin_brev_sthhi
__builtin_brev_stb
c*Cc*iiC
__builtin_circ_std
LLi*LLi*LLiiIi
__builtin_circ_stw
i*i*iiIi
__builtin_circ_sth
s*s*iiIi
__builtin_circ_sthhi
__builtin_circ_stb
c*c*iiIi
__builtin_HEXAGON_L2_loadrub_pci
iv*IiivC*
__builtin_HEXAGON_L2_loadrb_pci
__builtin_HEXAGON_L2_loadruh_pci
__builtin_HEXAGON_L2_loadrh_pci
__builtin_HEXAGON_L2_loadri_pci
__builtin_HEXAGON_L2_loadrd_pci
LLiv*IiivC*
__builtin_HEXAGON_L2_loadrub_pcr
iv*ivC*
__builtin_HEXAGON_L2_loadrb_pcr
__builtin_HEXAGON_L2_loadruh_pcr
__builtin_HEXAGON_L2_loadrh_pcr
__builtin_HEXAGON_L2_loadri_pcr
__builtin_HEXAGON_L2_loadrd_pcr
LLiv*ivC*
__builtin_HEXAGON_S2_storerb_pci
vv*IiiivC*
__builtin_HEXAGON_S2_storerh_pci
__builtin_HEXAGON_S2_storerf_pci
__builtin_HEXAGON_S2_storeri_pci
__builtin_HEXAGON_S2_storerd_pci
vv*IiiLLivC*
__builtin_HEXAGON_S2_storerb_pcr
vv*iivC*
__builtin_HEXAGON_S2_storerh_pcr
__builtin_HEXAGON_S2_storerf_pcr
__builtin_HEXAGON_S2_storeri_pcr
__builtin_HEXAGON_S2_storerd_pcr
vv*iLLivC*
__builtin_HEXAGON_prefetch
__builtin_HEXAGON_A6_vminub_RdP
LLiLLiLLi
v62|v65|v66|v67|v68
__builtin_HEXAGON_V6_vmaskedstoreq
vV64bv*V16i
hvxv60|hvxv62|hvxv65|hvxv66|hvxv67|hvxv68
__builtin_HEXAGON_V6_vmaskedstorenq
__builtin_HEXAGON_V6_vmaskedstorentq
__builtin_HEXAGON_V6_vmaskedstorentnq
__builtin_HEXAGON_V6_vmaskedstoreq_128B
vV128bv*V32i
__builtin_HEXAGON_V6_vmaskedstorenq_128B
__builtin_HEXAGON_V6_vmaskedstorentq_128B
__builtin_HEXAGON_V6_vmaskedstorentnq_128B
__builtin_HEXAGON_V6_vrmpybub_rtt
V32iV16iLLi
hvxv65
__builtin_HEXAGON_V6_vrmpybub_rtt_128B
V64iV32iLLi
__builtin_HEXAGON_V6_vrmpybub_rtt_acc
V32iV32iV16iLLi
__builtin_HEXAGON_V6_vrmpybub_rtt_acc_128B
V64iV64iV32iLLi
__builtin_HEXAGON_V6_vrmpyub_rtt
__builtin_HEXAGON_V6_vrmpyub_rtt_128B
__builtin_HEXAGON_V6_vrmpyub_rtt_acc
__builtin_HEXAGON_V6_vrmpyub_rtt_acc_128B
__builtin_HEXAGON_A2_abs
__builtin_HEXAGON_A2_absp
LLiLLi
__builtin_HEXAGON_A2_abssat
__builtin_HEXAGON_A2_add
__builtin_HEXAGON_A2_addh_h16_hh
__builtin_HEXAGON_A2_addh_h16_hl
__builtin_HEXAGON_A2_addh_h16_lh
__builtin_HEXAGON_A2_addh_h16_ll
__builtin_HEXAGON_A2_addh_h16_sat_hh
__builtin_HEXAGON_A2_addh_h16_sat_hl
__builtin_HEXAGON_A2_addh_h16_sat_lh
__builtin_HEXAGON_A2_addh_h16_sat_ll
__builtin_HEXAGON_A2_addh_l16_hl
__builtin_HEXAGON_A2_addh_l16_ll
__builtin_HEXAGON_A2_addh_l16_sat_hl
__builtin_HEXAGON_A2_addh_l16_sat_ll
__builtin_HEXAGON_A2_addi
__builtin_HEXAGON_A2_addp
__builtin_HEXAGON_A2_addpsat
__builtin_HEXAGON_A2_addsat
__builtin_HEXAGON_A2_addsp
LLiiLLi
__builtin_HEXAGON_A2_and
__builtin_HEXAGON_A2_andir
__builtin_HEXAGON_A2_andp
__builtin_HEXAGON_A2_aslh
__builtin_HEXAGON_A2_asrh
__builtin_HEXAGON_A2_combine_hh
__builtin_HEXAGON_A2_combine_hl
__builtin_HEXAGON_A2_combine_lh
__builtin_HEXAGON_A2_combine_ll
__builtin_HEXAGON_A2_combineii
LLiIiIi
__builtin_HEXAGON_A2_combinew
LLiii
__builtin_HEXAGON_A2_max
__builtin_HEXAGON_A2_maxp
__builtin_HEXAGON_A2_maxu
Uiii
__builtin_HEXAGON_A2_maxup
ULLiLLiLLi
__builtin_HEXAGON_A2_min
__builtin_HEXAGON_A2_minp
__builtin_HEXAGON_A2_minu
__builtin_HEXAGON_A2_minup
__builtin_HEXAGON_A2_neg
__builtin_HEXAGON_A2_negp
__builtin_HEXAGON_A2_negsat
__builtin_HEXAGON_A2_not
__builtin_HEXAGON_A2_notp
__builtin_HEXAGON_A2_or
__builtin_HEXAGON_A2_orir
__builtin_HEXAGON_A2_orp
__builtin_HEXAGON_A2_roundsat
iLLi
__builtin_HEXAGON_A2_sat
__builtin_HEXAGON_A2_satb
__builtin_HEXAGON_A2_sath
__builtin_HEXAGON_A2_satub
__builtin_HEXAGON_A2_satuh
__builtin_HEXAGON_A2_sub
__builtin_HEXAGON_A2_subh_h16_hh
__builtin_HEXAGON_A2_subh_h16_hl
__builtin_HEXAGON_A2_subh_h16_lh
__builtin_HEXAGON_A2_subh_h16_ll
__builtin_HEXAGON_A2_subh_h16_sat_hh
__builtin_HEXAGON_A2_subh_h16_sat_hl
__builtin_HEXAGON_A2_subh_h16_sat_lh
__builtin_HEXAGON_A2_subh_h16_sat_ll
__builtin_HEXAGON_A2_subh_l16_hl
__builtin_HEXAGON_A2_subh_l16_ll
__builtin_HEXAGON_A2_subh_l16_sat_hl
__builtin_HEXAGON_A2_subh_l16_sat_ll
__builtin_HEXAGON_A2_subp
__builtin_HEXAGON_A2_subri
iIii
__builtin_HEXAGON_A2_subsat
__builtin_HEXAGON_A2_svaddh
__builtin_HEXAGON_A2_svaddhs
__builtin_HEXAGON_A2_svadduhs
__builtin_HEXAGON_A2_svavgh
__builtin_HEXAGON_A2_svavghs
__builtin_HEXAGON_A2_svnavgh
__builtin_HEXAGON_A2_svsubh
__builtin_HEXAGON_A2_svsubhs
__builtin_HEXAGON_A2_svsubuhs
__builtin_HEXAGON_A2_swiz
__builtin_HEXAGON_A2_sxtb
__builtin_HEXAGON_A2_sxth
__builtin_HEXAGON_A2_sxtw
__builtin_HEXAGON_A2_tfr
__builtin_HEXAGON_A2_tfrih
iiUIi
__builtin_HEXAGON_A2_tfril
__builtin_HEXAGON_A2_tfrp
__builtin_HEXAGON_A2_tfrpi
LLiIi
__builtin_HEXAGON_A2_tfrsi
__builtin_HEXAGON_A2_vabsh
__builtin_HEXAGON_A2_vabshsat
__builtin_HEXAGON_A2_vabsw
__builtin_HEXAGON_A2_vabswsat
__builtin_HEXAGON_A2_vaddb_map
__builtin_HEXAGON_A2_vaddh
__builtin_HEXAGON_A2_vaddhs
__builtin_HEXAGON_A2_vaddub
__builtin_HEXAGON_A2_vaddubs
__builtin_HEXAGON_A2_vadduhs
__builtin_HEXAGON_A2_vaddw
__builtin_HEXAGON_A2_vaddws
__builtin_HEXAGON_A2_vavgh
__builtin_HEXAGON_A2_vavghcr
__builtin_HEXAGON_A2_vavghr
__builtin_HEXAGON_A2_vavgub
__builtin_HEXAGON_A2_vavgubr
__builtin_HEXAGON_A2_vavguh
__builtin_HEXAGON_A2_vavguhr
__builtin_HEXAGON_A2_vavguw
__builtin_HEXAGON_A2_vavguwr
__builtin_HEXAGON_A2_vavgw
__builtin_HEXAGON_A2_vavgwcr
__builtin_HEXAGON_A2_vavgwr
__builtin_HEXAGON_A2_vcmpbeq
iLLiLLi
__builtin_HEXAGON_A2_vcmpbgtu
__builtin_HEXAGON_A2_vcmpheq
__builtin_HEXAGON_A2_vcmphgt
__builtin_HEXAGON_A2_vcmphgtu
__builtin_HEXAGON_A2_vcmpweq
__builtin_HEXAGON_A2_vcmpwgt
__builtin_HEXAGON_A2_vcmpwgtu
__builtin_HEXAGON_A2_vconj
__builtin_HEXAGON_A2_vmaxb
__builtin_HEXAGON_A2_vmaxh
__builtin_HEXAGON_A2_vmaxub
__builtin_HEXAGON_A2_vmaxuh
__builtin_HEXAGON_A2_vmaxuw
__builtin_HEXAGON_A2_vmaxw
__builtin_HEXAGON_A2_vminb
__builtin_HEXAGON_A2_vminh
__builtin_HEXAGON_A2_vminub
__builtin_HEXAGON_A2_vminuh
__builtin_HEXAGON_A2_vminuw
__builtin_HEXAGON_A2_vminw
__builtin_HEXAGON_A2_vnavgh
__builtin_HEXAGON_A2_vnavghcr
__builtin_HEXAGON_A2_vnavghr
__builtin_HEXAGON_A2_vnavgw
__builtin_HEXAGON_A2_vnavgwcr
__builtin_HEXAGON_A2_vnavgwr
__builtin_HEXAGON_A2_vraddub
__builtin_HEXAGON_A2_vraddub_acc
LLiLLiLLiLLi
__builtin_HEXAGON_A2_vrsadub
__builtin_HEXAGON_A2_vrsadub_acc
__builtin_HEXAGON_A2_vsubb_map
__builtin_HEXAGON_A2_vsubh
__builtin_HEXAGON_A2_vsubhs
__builtin_HEXAGON_A2_vsubub
__builtin_HEXAGON_A2_vsububs
__builtin_HEXAGON_A2_vsubuhs
__builtin_HEXAGON_A2_vsubw
__builtin_HEXAGON_A2_vsubws
__builtin_HEXAGON_A2_xor
__builtin_HEXAGON_A2_xorp
__builtin_HEXAGON_A2_zxtb
__builtin_HEXAGON_A2_zxth
__builtin_HEXAGON_A4_andn
__builtin_HEXAGON_A4_andnp
__builtin_HEXAGON_A4_bitsplit
__builtin_HEXAGON_A4_bitspliti
LLiiUIi
__builtin_HEXAGON_A4_boundscheck
iiLLi
__builtin_HEXAGON_A4_cmpbeq
__builtin_HEXAGON_A4_cmpbeqi
__builtin_HEXAGON_A4_cmpbgt
__builtin_HEXAGON_A4_cmpbgti
__builtin_HEXAGON_A4_cmpbgtu
__builtin_HEXAGON_A4_cmpbgtui
__builtin_HEXAGON_A4_cmpheq
__builtin_HEXAGON_A4_cmpheqi
__builtin_HEXAGON_A4_cmphgt
__builtin_HEXAGON_A4_cmphgti
__builtin_HEXAGON_A4_cmphgtu
__builtin_HEXAGON_A4_cmphgtui
__builtin_HEXAGON_A4_combineir
LLiIii
__builtin_HEXAGON_A4_combineri
LLiiIi
__builtin_HEXAGON_A4_cround_ri
__builtin_HEXAGON_A4_cround_rr
__builtin_HEXAGON_A4_modwrapu
__builtin_HEXAGON_A4_orn
__builtin_HEXAGON_A4_ornp
__builtin_HEXAGON_A4_rcmpeq
__builtin_HEXAGON_A4_rcmpeqi
__builtin_HEXAGON_A4_rcmpneq
__builtin_HEXAGON_A4_rcmpneqi
__builtin_HEXAGON_A4_round_ri
__builtin_HEXAGON_A4_round_ri_sat
__builtin_HEXAGON_A4_round_rr
__builtin_HEXAGON_A4_round_rr_sat
__builtin_HEXAGON_A4_tlbmatch
iLLii
__builtin_HEXAGON_A4_vcmpbeq_any
__builtin_HEXAGON_A4_vcmpbeqi
iLLiUIi
__builtin_HEXAGON_A4_vcmpbgt
__builtin_HEXAGON_A4_vcmpbgti
iLLiIi
__builtin_HEXAGON_A4_vcmpbgtui
__builtin_HEXAGON_A4_vcmpheqi
__builtin_HEXAGON_A4_vcmphgti
__builtin_HEXAGON_A4_vcmphgtui
__builtin_HEXAGON_A4_vcmpweqi
__builtin_HEXAGON_A4_vcmpwgti
__builtin_HEXAGON_A4_vcmpwgtui
__builtin_HEXAGON_A4_vrmaxh
LLiLLiLLii
__builtin_HEXAGON_A4_vrmaxuh
__builtin_HEXAGON_A4_vrmaxuw
__builtin_HEXAGON_A4_vrmaxw
__builtin_HEXAGON_A4_vrminh
__builtin_HEXAGON_A4_vrminuh
__builtin_HEXAGON_A4_vrminuw
__builtin_HEXAGON_A4_vrminw
__builtin_HEXAGON_A5_vaddhubs
__builtin_HEXAGON_C2_all8
__builtin_HEXAGON_C2_and
__builtin_HEXAGON_C2_andn
__builtin_HEXAGON_C2_any8
__builtin_HEXAGON_C2_bitsclr
__builtin_HEXAGON_C2_bitsclri
__builtin_HEXAGON_C2_bitsset
__builtin_HEXAGON_C2_cmpeq
__builtin_HEXAGON_C2_cmpeqi
__builtin_HEXAGON_C2_cmpeqp
__builtin_HEXAGON_C2_cmpgei
__builtin_HEXAGON_C2_cmpgeui
__builtin_HEXAGON_C2_cmpgt
__builtin_HEXAGON_C2_cmpgti
__builtin_HEXAGON_C2_cmpgtp
__builtin_HEXAGON_C2_cmpgtu
__builtin_HEXAGON_C2_cmpgtui
__builtin_HEXAGON_C2_cmpgtup
__builtin_HEXAGON_C2_cmplt
__builtin_HEXAGON_C2_cmpltu
__builtin_HEXAGON_C2_mask
__builtin_HEXAGON_C2_mux
__builtin_HEXAGON_C2_muxii
iiIiIi
__builtin_HEXAGON_C2_muxir
iiiIi
__builtin_HEXAGON_C2_muxri
iiIii
__builtin_HEXAGON_C2_not
__builtin_HEXAGON_C2_or
__builtin_HEXAGON_C2_orn
__builtin_HEXAGON_C2_pxfer_map
__builtin_HEXAGON_C2_tfrpr
__builtin_HEXAGON_C2_tfrrp
__builtin_HEXAGON_C2_vitpack
__builtin_HEXAGON_C2_vmux
LLiiLLiLLi
__builtin_HEXAGON_C2_xor
__builtin_HEXAGON_C4_and_and
__builtin_HEXAGON_C4_and_andn
__builtin_HEXAGON_C4_and_or
__builtin_HEXAGON_C4_and_orn
__builtin_HEXAGON_C4_cmplte
__builtin_HEXAGON_C4_cmpltei
__builtin_HEXAGON_C4_cmplteu
__builtin_HEXAGON_C4_cmplteui
__builtin_HEXAGON_C4_cmpneq
__builtin_HEXAGON_C4_cmpneqi
__builtin_HEXAGON_C4_fastcorner9
__builtin_HEXAGON_C4_fastcorner9_not
__builtin_HEXAGON_C4_nbitsclr
__builtin_HEXAGON_C4_nbitsclri
__builtin_HEXAGON_C4_nbitsset
__builtin_HEXAGON_C4_or_and
__builtin_HEXAGON_C4_or_andn
__builtin_HEXAGON_C4_or_or
__builtin_HEXAGON_C4_or_orn
__builtin_HEXAGON_F2_conv_d2df
dLLi
__builtin_HEXAGON_F2_conv_d2sf
fLLi
__builtin_HEXAGON_F2_conv_df2d
LLid
__builtin_HEXAGON_F2_conv_df2d_chop
__builtin_HEXAGON_F2_conv_df2sf
__builtin_HEXAGON_F2_conv_df2ud
__builtin_HEXAGON_F2_conv_df2ud_chop
__builtin_HEXAGON_F2_conv_df2uw
__builtin_HEXAGON_F2_conv_df2uw_chop
__builtin_HEXAGON_F2_conv_df2w
__builtin_HEXAGON_F2_conv_df2w_chop
__builtin_HEXAGON_F2_conv_sf2d
LLif
__builtin_HEXAGON_F2_conv_sf2d_chop
__builtin_HEXAGON_F2_conv_sf2df
__builtin_HEXAGON_F2_conv_sf2ud
__builtin_HEXAGON_F2_conv_sf2ud_chop
__builtin_HEXAGON_F2_conv_sf2uw
__builtin_HEXAGON_F2_conv_sf2uw_chop
__builtin_HEXAGON_F2_conv_sf2w
__builtin_HEXAGON_F2_conv_sf2w_chop
__builtin_HEXAGON_F2_conv_ud2df
__builtin_HEXAGON_F2_conv_ud2sf
__builtin_HEXAGON_F2_conv_uw2df
__builtin_HEXAGON_F2_conv_uw2sf
__builtin_HEXAGON_F2_conv_w2df
__builtin_HEXAGON_F2_conv_w2sf
__builtin_HEXAGON_F2_dfclass
idUIi
__builtin_HEXAGON_F2_dfcmpeq
__builtin_HEXAGON_F2_dfcmpge
__builtin_HEXAGON_F2_dfcmpgt
__builtin_HEXAGON_F2_dfcmpuo
__builtin_HEXAGON_F2_dfimm_n
dUIi
__builtin_HEXAGON_F2_dfimm_p
__builtin_HEXAGON_F2_sfadd
__builtin_HEXAGON_F2_sfclass
ifUIi
__builtin_HEXAGON_F2_sfcmpeq
__builtin_HEXAGON_F2_sfcmpge
__builtin_HEXAGON_F2_sfcmpgt
__builtin_HEXAGON_F2_sfcmpuo
__builtin_HEXAGON_F2_sffixupd
__builtin_HEXAGON_F2_sffixupn
__builtin_HEXAGON_F2_sffixupr
__builtin_HEXAGON_F2_sffma
__builtin_HEXAGON_F2_sffma_lib
__builtin_HEXAGON_F2_sffma_sc
ffffi
__builtin_HEXAGON_F2_sffms
__builtin_HEXAGON_F2_sffms_lib
__builtin_HEXAGON_F2_sfimm_n
fUIi
__builtin_HEXAGON_F2_sfimm_p
__builtin_HEXAGON_F2_sfmax
__builtin_HEXAGON_F2_sfmin
__builtin_HEXAGON_F2_sfmpy
__builtin_HEXAGON_F2_sfsub
__builtin_HEXAGON_M2_acci
__builtin_HEXAGON_M2_accii
__builtin_HEXAGON_M2_cmaci_s0
LLiLLiii
__builtin_HEXAGON_M2_cmacr_s0
__builtin_HEXAGON_M2_cmacs_s0
__builtin_HEXAGON_M2_cmacs_s1
__builtin_HEXAGON_M2_cmacsc_s0
__builtin_HEXAGON_M2_cmacsc_s1
__builtin_HEXAGON_M2_cmpyi_s0
__builtin_HEXAGON_M2_cmpyr_s0
__builtin_HEXAGON_M2_cmpyrs_s0
__builtin_HEXAGON_M2_cmpyrs_s1
__builtin_HEXAGON_M2_cmpyrsc_s0
__builtin_HEXAGON_M2_cmpyrsc_s1
__builtin_HEXAGON_M2_cmpys_s0
__builtin_HEXAGON_M2_cmpys_s1
__builtin_HEXAGON_M2_cmpysc_s0
__builtin_HEXAGON_M2_cmpysc_s1
__builtin_HEXAGON_M2_cnacs_s0
__builtin_HEXAGON_M2_cnacs_s1
__builtin_HEXAGON_M2_cnacsc_s0
__builtin_HEXAGON_M2_cnacsc_s1
__builtin_HEXAGON_M2_dpmpyss_acc_s0
__builtin_HEXAGON_M2_dpmpyss_nac_s0
__builtin_HEXAGON_M2_dpmpyss_rnd_s0
__builtin_HEXAGON_M2_dpmpyss_s0
__builtin_HEXAGON_M2_dpmpyuu_acc_s0
__builtin_HEXAGON_M2_dpmpyuu_nac_s0
__builtin_HEXAGON_M2_dpmpyuu_s0
ULLiii
__builtin_HEXAGON_M2_hmmpyh_rs1
__builtin_HEXAGON_M2_hmmpyh_s1
__builtin_HEXAGON_M2_hmmpyl_rs1
__builtin_HEXAGON_M2_hmmpyl_s1
__builtin_HEXAGON_M2_maci
__builtin_HEXAGON_M2_macsin
iiiUIi
__builtin_HEXAGON_M2_macsip
__builtin_HEXAGON_M2_mmachs_rs0
__builtin_HEXAGON_M2_mmachs_rs1
__builtin_HEXAGON_M2_mmachs_s0
__builtin_HEXAGON_M2_mmachs_s1
__builtin_HEXAGON_M2_mmacls_rs0
__builtin_HEXAGON_M2_mmacls_rs1
__builtin_HEXAGON_M2_mmacls_s0
__builtin_HEXAGON_M2_mmacls_s1
__builtin_HEXAGON_M2_mmacuhs_rs0
__builtin_HEXAGON_M2_mmacuhs_rs1
__builtin_HEXAGON_M2_mmacuhs_s0
__builtin_HEXAGON_M2_mmacuhs_s1
__builtin_HEXAGON_M2_mmaculs_rs0
__builtin_HEXAGON_M2_mmaculs_rs1
__builtin_HEXAGON_M2_mmaculs_s0
__builtin_HEXAGON_M2_mmaculs_s1
__builtin_HEXAGON_M2_mmpyh_rs0
__builtin_HEXAGON_M2_mmpyh_rs1
__builtin_HEXAGON_M2_mmpyh_s0
__builtin_HEXAGON_M2_mmpyh_s1
__builtin_HEXAGON_M2_mmpyl_rs0
__builtin_HEXAGON_M2_mmpyl_rs1
__builtin_HEXAGON_M2_mmpyl_s0
__builtin_HEXAGON_M2_mmpyl_s1
__builtin_HEXAGON_M2_mmpyuh_rs0
__builtin_HEXAGON_M2_mmpyuh_rs1
__builtin_HEXAGON_M2_mmpyuh_s0
__builtin_HEXAGON_M2_mmpyuh_s1
__builtin_HEXAGON_M2_mmpyul_rs0
__builtin_HEXAGON_M2_mmpyul_rs1
__builtin_HEXAGON_M2_mmpyul_s0
__builtin_HEXAGON_M2_mmpyul_s1
__builtin_HEXAGON_M2_mpy_acc_hh_s0
__builtin_HEXAGON_M2_mpy_acc_hh_s1
__builtin_HEXAGON_M2_mpy_acc_hl_s0
__builtin_HEXAGON_M2_mpy_acc_hl_s1
__builtin_HEXAGON_M2_mpy_acc_lh_s0
__builtin_HEXAGON_M2_mpy_acc_lh_s1
__builtin_HEXAGON_M2_mpy_acc_ll_s0
__builtin_HEXAGON_M2_mpy_acc_ll_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s0
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s0
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s1
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s0
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s0
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s1
__builtin_HEXAGON_M2_mpy_hh_s0
__builtin_HEXAGON_M2_mpy_hh_s1
__builtin_HEXAGON_M2_mpy_hl_s0
__builtin_HEXAGON_M2_mpy_hl_s1
__builtin_HEXAGON_M2_mpy_lh_s0
__builtin_HEXAGON_M2_mpy_lh_s1
__builtin_HEXAGON_M2_mpy_ll_s0
__builtin_HEXAGON_M2_mpy_ll_s1
__builtin_HEXAGON_M2_mpy_nac_hh_s0
__builtin_HEXAGON_M2_mpy_nac_hh_s1
__builtin_HEXAGON_M2_mpy_nac_hl_s0
__builtin_HEXAGON_M2_mpy_nac_hl_s1
__builtin_HEXAGON_M2_mpy_nac_lh_s0
__builtin_HEXAGON_M2_mpy_nac_lh_s1
__builtin_HEXAGON_M2_mpy_nac_ll_s0
__builtin_HEXAGON_M2_mpy_nac_ll_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s0
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s1
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s0
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s1
__builtin_HEXAGON_M2_mpy_rnd_hh_s0
__builtin_HEXAGON_M2_mpy_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_rnd_hl_s0
__builtin_HEXAGON_M2_mpy_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_rnd_lh_s0
__builtin_HEXAGON_M2_mpy_rnd_lh_s1
__builtin_HEXAGON_M2_mpy_rnd_ll_s0
__builtin_HEXAGON_M2_mpy_rnd_ll_s1
__builtin_HEXAGON_M2_mpy_sat_hh_s0
__builtin_HEXAGON_M2_mpy_sat_hh_s1
__builtin_HEXAGON_M2_mpy_sat_hl_s0
__builtin_HEXAGON_M2_mpy_sat_hl_s1
__builtin_HEXAGON_M2_mpy_sat_lh_s0
__builtin_HEXAGON_M2_mpy_sat_lh_s1
__builtin_HEXAGON_M2_mpy_sat_ll_s0
__builtin_HEXAGON_M2_mpy_sat_ll_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s1
__builtin_HEXAGON_M2_mpy_up
__builtin_HEXAGON_M2_mpy_up_s1
__builtin_HEXAGON_M2_mpy_up_s1_sat
__builtin_HEXAGON_M2_mpyd_acc_hh_s0
__builtin_HEXAGON_M2_mpyd_acc_hh_s1
__builtin_HEXAGON_M2_mpyd_acc_hl_s0
__builtin_HEXAGON_M2_mpyd_acc_hl_s1
__builtin_HEXAGON_M2_mpyd_acc_lh_s0
__builtin_HEXAGON_M2_mpyd_acc_lh_s1
__builtin_HEXAGON_M2_mpyd_acc_ll_s0
__builtin_HEXAGON_M2_mpyd_acc_ll_s1
__builtin_HEXAGON_M2_mpyd_hh_s0
__builtin_HEXAGON_M2_mpyd_hh_s1
__builtin_HEXAGON_M2_mpyd_hl_s0
__builtin_HEXAGON_M2_mpyd_hl_s1
__builtin_HEXAGON_M2_mpyd_lh_s0
__builtin_HEXAGON_M2_mpyd_lh_s1
__builtin_HEXAGON_M2_mpyd_ll_s0
__builtin_HEXAGON_M2_mpyd_ll_s1
__builtin_HEXAGON_M2_mpyd_nac_hh_s0
__builtin_HEXAGON_M2_mpyd_nac_hh_s1
__builtin_HEXAGON_M2_mpyd_nac_hl_s0
__builtin_HEXAGON_M2_mpyd_nac_hl_s1
__builtin_HEXAGON_M2_mpyd_nac_lh_s0
__builtin_HEXAGON_M2_mpyd_nac_lh_s1
__builtin_HEXAGON_M2_mpyd_nac_ll_s0
__builtin_HEXAGON_M2_mpyd_nac_ll_s1
__builtin_HEXAGON_M2_mpyd_rnd_hh_s0
__builtin_HEXAGON_M2_mpyd_rnd_hh_s1
__builtin_HEXAGON_M2_mpyd_rnd_hl_s0
__builtin_HEXAGON_M2_mpyd_rnd_hl_s1
__builtin_HEXAGON_M2_mpyd_rnd_lh_s0
__builtin_HEXAGON_M2_mpyd_rnd_lh_s1
__builtin_HEXAGON_M2_mpyd_rnd_ll_s0
__builtin_HEXAGON_M2_mpyd_rnd_ll_s1
__builtin_HEXAGON_M2_mpyi
__builtin_HEXAGON_M2_mpysmi
__builtin_HEXAGON_M2_mpysu_up
__builtin_HEXAGON_M2_mpyu_acc_hh_s0
__builtin_HEXAGON_M2_mpyu_acc_hh_s1
__builtin_HEXAGON_M2_mpyu_acc_hl_s0
__builtin_HEXAGON_M2_mpyu_acc_hl_s1
__builtin_HEXAGON_M2_mpyu_acc_lh_s0
__builtin_HEXAGON_M2_mpyu_acc_lh_s1
__builtin_HEXAGON_M2_mpyu_acc_ll_s0
__builtin_HEXAGON_M2_mpyu_acc_ll_s1
__builtin_HEXAGON_M2_mpyu_hh_s0
__builtin_HEXAGON_M2_mpyu_hh_s1
__builtin_HEXAGON_M2_mpyu_hl_s0
__builtin_HEXAGON_M2_mpyu_hl_s1
__builtin_HEXAGON_M2_mpyu_lh_s0
__builtin_HEXAGON_M2_mpyu_lh_s1
__builtin_HEXAGON_M2_mpyu_ll_s0
__builtin_HEXAGON_M2_mpyu_ll_s1
__builtin_HEXAGON_M2_mpyu_nac_hh_s0
__builtin_HEXAGON_M2_mpyu_nac_hh_s1
__builtin_HEXAGON_M2_mpyu_nac_hl_s0
__builtin_HEXAGON_M2_mpyu_nac_hl_s1
__builtin_HEXAGON_M2_mpyu_nac_lh_s0
__builtin_HEXAGON_M2_mpyu_nac_lh_s1
__builtin_HEXAGON_M2_mpyu_nac_ll_s0
__builtin_HEXAGON_M2_mpyu_nac_ll_s1
__builtin_HEXAGON_M2_mpyu_up
__builtin_HEXAGON_M2_mpyud_acc_hh_s0
__builtin_HEXAGON_M2_mpyud_acc_hh_s1
__builtin_HEXAGON_M2_mpyud_acc_hl_s0
__builtin_HEXAGON_M2_mpyud_acc_hl_s1
__builtin_HEXAGON_M2_mpyud_acc_lh_s0
__builtin_HEXAGON_M2_mpyud_acc_lh_s1
__builtin_HEXAGON_M2_mpyud_acc_ll_s0
__builtin_HEXAGON_M2_mpyud_acc_ll_s1
__builtin_HEXAGON_M2_mpyud_hh_s0
__builtin_HEXAGON_M2_mpyud_hh_s1
__builtin_HEXAGON_M2_mpyud_hl_s0
__builtin_HEXAGON_M2_mpyud_hl_s1
__builtin_HEXAGON_M2_mpyud_lh_s0
__builtin_HEXAGON_M2_mpyud_lh_s1
__builtin_HEXAGON_M2_mpyud_ll_s0
__builtin_HEXAGON_M2_mpyud_ll_s1
__builtin_HEXAGON_M2_mpyud_nac_hh_s0
__builtin_HEXAGON_M2_mpyud_nac_hh_s1
__builtin_HEXAGON_M2_mpyud_nac_hl_s0
__builtin_HEXAGON_M2_mpyud_nac_hl_s1
__builtin_HEXAGON_M2_mpyud_nac_lh_s0
__builtin_HEXAGON_M2_mpyud_nac_lh_s1
__builtin_HEXAGON_M2_mpyud_nac_ll_s0
__builtin_HEXAGON_M2_mpyud_nac_ll_s1
__builtin_HEXAGON_M2_mpyui
__builtin_HEXAGON_M2_nacci
__builtin_HEXAGON_M2_naccii
__builtin_HEXAGON_M2_subacc
__builtin_HEXAGON_M2_vabsdiffh
__builtin_HEXAGON_M2_vabsdiffw
__builtin_HEXAGON_M2_vcmac_s0_sat_i
__builtin_HEXAGON_M2_vcmac_s0_sat_r
__builtin_HEXAGON_M2_vcmpy_s0_sat_i
__builtin_HEXAGON_M2_vcmpy_s0_sat_r
__builtin_HEXAGON_M2_vcmpy_s1_sat_i
__builtin_HEXAGON_M2_vcmpy_s1_sat_r
__builtin_HEXAGON_M2_vdmacs_s0
__builtin_HEXAGON_M2_vdmacs_s1
__builtin_HEXAGON_M2_vdmpyrs_s0
__builtin_HEXAGON_M2_vdmpyrs_s1
__builtin_HEXAGON_M2_vdmpys_s0
__builtin_HEXAGON_M2_vdmpys_s1
__builtin_HEXAGON_M2_vmac2
__builtin_HEXAGON_M2_vmac2es
__builtin_HEXAGON_M2_vmac2es_s0
__builtin_HEXAGON_M2_vmac2es_s1
__builtin_HEXAGON_M2_vmac2s_s0
__builtin_HEXAGON_M2_vmac2s_s1
__builtin_HEXAGON_M2_vmac2su_s0
__builtin_HEXAGON_M2_vmac2su_s1
__builtin_HEXAGON_M2_vmpy2es_s0
__builtin_HEXAGON_M2_vmpy2es_s1
__builtin_HEXAGON_M2_vmpy2s_s0
__builtin_HEXAGON_M2_vmpy2s_s0pack
__builtin_HEXAGON_M2_vmpy2s_s1
__builtin_HEXAGON_M2_vmpy2s_s1pack
__builtin_HEXAGON_M2_vmpy2su_s0
__builtin_HEXAGON_M2_vmpy2su_s1
__builtin_HEXAGON_M2_vraddh
__builtin_HEXAGON_M2_vradduh
__builtin_HEXAGON_M2_vrcmaci_s0
__builtin_HEXAGON_M2_vrcmaci_s0c
__builtin_HEXAGON_M2_vrcmacr_s0
__builtin_HEXAGON_M2_vrcmacr_s0c
__builtin_HEXAGON_M2_vrcmpyi_s0
__builtin_HEXAGON_M2_vrcmpyi_s0c
__builtin_HEXAGON_M2_vrcmpyr_s0
__builtin_HEXAGON_M2_vrcmpyr_s0c
__builtin_HEXAGON_M2_vrcmpys_acc_s1
__builtin_HEXAGON_M2_vrcmpys_s1
LLiLLii
__builtin_HEXAGON_M2_vrcmpys_s1rp
__builtin_HEXAGON_M2_vrmac_s0
__builtin_HEXAGON_M2_vrmpy_s0
__builtin_HEXAGON_M2_xor_xacc
__builtin_HEXAGON_M4_and_and
__builtin_HEXAGON_M4_and_andn
__builtin_HEXAGON_M4_and_or
__builtin_HEXAGON_M4_and_xor
__builtin_HEXAGON_M4_cmpyi_wh
__builtin_HEXAGON_M4_cmpyi_whc
__builtin_HEXAGON_M4_cmpyr_wh
__builtin_HEXAGON_M4_cmpyr_whc
__builtin_HEXAGON_M4_mac_up_s1_sat
__builtin_HEXAGON_M4_mpyri_addi
iUIiiUIi
__builtin_HEXAGON_M4_mpyri_addr
__builtin_HEXAGON_M4_mpyri_addr_u2
iiUIii
__builtin_HEXAGON_M4_mpyrr_addi
iUIiii
__builtin_HEXAGON_M4_mpyrr_addr
__builtin_HEXAGON_M4_nac_up_s1_sat
__builtin_HEXAGON_M4_or_and
__builtin_HEXAGON_M4_or_andn
__builtin_HEXAGON_M4_or_or
__builtin_HEXAGON_M4_or_xor
__builtin_HEXAGON_M4_pmpyw
__builtin_HEXAGON_M4_pmpyw_acc
__builtin_HEXAGON_M4_vpmpyh
__builtin_HEXAGON_M4_vpmpyh_acc
__builtin_HEXAGON_M4_vrmpyeh_acc_s0
__builtin_HEXAGON_M4_vrmpyeh_acc_s1
__builtin_HEXAGON_M4_vrmpyeh_s0
__builtin_HEXAGON_M4_vrmpyeh_s1
__builtin_HEXAGON_M4_vrmpyoh_acc_s0
__builtin_HEXAGON_M4_vrmpyoh_acc_s1
__builtin_HEXAGON_M4_vrmpyoh_s0
__builtin_HEXAGON_M4_vrmpyoh_s1
__builtin_HEXAGON_M4_xor_and
__builtin_HEXAGON_M4_xor_andn
__builtin_HEXAGON_M4_xor_or
__builtin_HEXAGON_M4_xor_xacc
__builtin_HEXAGON_M5_vdmacbsu
__builtin_HEXAGON_M5_vdmpybsu
__builtin_HEXAGON_M5_vmacbsu
__builtin_HEXAGON_M5_vmacbuu
__builtin_HEXAGON_M5_vmpybsu
__builtin_HEXAGON_M5_vmpybuu
__builtin_HEXAGON_M5_vrmacbsu
__builtin_HEXAGON_M5_vrmacbuu
__builtin_HEXAGON_M5_vrmpybsu
__builtin_HEXAGON_M5_vrmpybuu
__builtin_HEXAGON_S2_addasl_rrri
__builtin_HEXAGON_S2_asl_i_p
LLiLLiUIi
__builtin_HEXAGON_S2_asl_i_p_acc
LLiLLiLLiUIi
__builtin_HEXAGON_S2_asl_i_p_and
__builtin_HEXAGON_S2_asl_i_p_nac
__builtin_HEXAGON_S2_asl_i_p_or
__builtin_HEXAGON_S2_asl_i_p_xacc
__builtin_HEXAGON_S2_asl_i_r
__builtin_HEXAGON_S2_asl_i_r_acc
__builtin_HEXAGON_S2_asl_i_r_and
__builtin_HEXAGON_S2_asl_i_r_nac
__builtin_HEXAGON_S2_asl_i_r_or
__builtin_HEXAGON_S2_asl_i_r_sat
__builtin_HEXAGON_S2_asl_i_r_xacc
__builtin_HEXAGON_S2_asl_i_vh
__builtin_HEXAGON_S2_asl_i_vw
__builtin_HEXAGON_S2_asl_r_p
__builtin_HEXAGON_S2_asl_r_p_acc
__builtin_HEXAGON_S2_asl_r_p_and
__builtin_HEXAGON_S2_asl_r_p_nac
__builtin_HEXAGON_S2_asl_r_p_or
__builtin_HEXAGON_S2_asl_r_p_xor
__builtin_HEXAGON_S2_asl_r_r
__builtin_HEXAGON_S2_asl_r_r_acc
__builtin_HEXAGON_S2_asl_r_r_and
__builtin_HEXAGON_S2_asl_r_r_nac
__builtin_HEXAGON_S2_asl_r_r_or
__builtin_HEXAGON_S2_asl_r_r_sat
__builtin_HEXAGON_S2_asl_r_vh
__builtin_HEXAGON_S2_asl_r_vw
__builtin_HEXAGON_S2_asr_i_p
__builtin_HEXAGON_S2_asr_i_p_acc
__builtin_HEXAGON_S2_asr_i_p_and
__builtin_HEXAGON_S2_asr_i_p_nac
__builtin_HEXAGON_S2_asr_i_p_or
__builtin_HEXAGON_S2_asr_i_p_rnd
__builtin_HEXAGON_S2_asr_i_p_rnd_goodsyntax
__builtin_HEXAGON_S2_asr_i_r
__builtin_HEXAGON_S2_asr_i_r_acc
__builtin_HEXAGON_S2_asr_i_r_and
__builtin_HEXAGON_S2_asr_i_r_nac
__builtin_HEXAGON_S2_asr_i_r_or
__builtin_HEXAGON_S2_asr_i_r_rnd
__builtin_HEXAGON_S2_asr_i_r_rnd_goodsyntax
__builtin_HEXAGON_S2_asr_i_svw_trun
__builtin_HEXAGON_S2_asr_i_vh
__builtin_HEXAGON_S2_asr_i_vw
__builtin_HEXAGON_S2_asr_r_p
__builtin_HEXAGON_S2_asr_r_p_acc
__builtin_HEXAGON_S2_asr_r_p_and
__builtin_HEXAGON_S2_asr_r_p_nac
__builtin_HEXAGON_S2_asr_r_p_or
__builtin_HEXAGON_S2_asr_r_p_xor
__builtin_HEXAGON_S2_asr_r_r
__builtin_HEXAGON_S2_asr_r_r_acc
__builtin_HEXAGON_S2_asr_r_r_and
__builtin_HEXAGON_S2_asr_r_r_nac
__builtin_HEXAGON_S2_asr_r_r_or
__builtin_HEXAGON_S2_asr_r_r_sat
__builtin_HEXAGON_S2_asr_r_svw_trun
__builtin_HEXAGON_S2_asr_r_vh
__builtin_HEXAGON_S2_asr_r_vw
__builtin_HEXAGON_S2_brev
__builtin_HEXAGON_S2_brevp
__builtin_HEXAGON_S2_cl0
__builtin_HEXAGON_S2_cl0p
__builtin_HEXAGON_S2_cl1
__builtin_HEXAGON_S2_cl1p
__builtin_HEXAGON_S2_clb
__builtin_HEXAGON_S2_clbnorm
__builtin_HEXAGON_S2_clbp
__builtin_HEXAGON_S2_clrbit_i
__builtin_HEXAGON_S2_clrbit_r
__builtin_HEXAGON_S2_ct0
__builtin_HEXAGON_S2_ct0p
__builtin_HEXAGON_S2_ct1
__builtin_HEXAGON_S2_ct1p
__builtin_HEXAGON_S2_deinterleave
__builtin_HEXAGON_S2_extractu
iiUIiUIi
__builtin_HEXAGON_S2_extractu_rp
__builtin_HEXAGON_S2_extractup
LLiLLiUIiUIi
__builtin_HEXAGON_S2_extractup_rp
__builtin_HEXAGON_S2_insert
iiiUIiUIi
__builtin_HEXAGON_S2_insert_rp
iiiLLi
__builtin_HEXAGON_S2_insertp
LLiLLiLLiUIiUIi
__builtin_HEXAGON_S2_insertp_rp
__builtin_HEXAGON_S2_interleave
__builtin_HEXAGON_S2_lfsp
__builtin_HEXAGON_S2_lsl_r_p
__builtin_HEXAGON_S2_lsl_r_p_acc
__builtin_HEXAGON_S2_lsl_r_p_and
__builtin_HEXAGON_S2_lsl_r_p_nac
__builtin_HEXAGON_S2_lsl_r_p_or
__builtin_HEXAGON_S2_lsl_r_p_xor
__builtin_HEXAGON_S2_lsl_r_r
__builtin_HEXAGON_S2_lsl_r_r_acc
__builtin_HEXAGON_S2_lsl_r_r_and
__builtin_HEXAGON_S2_lsl_r_r_nac
__builtin_HEXAGON_S2_lsl_r_r_or
__builtin_HEXAGON_S2_lsl_r_vh
__builtin_HEXAGON_S2_lsl_r_vw
__builtin_HEXAGON_S2_lsr_i_p
__builtin_HEXAGON_S2_lsr_i_p_acc
__builtin_HEXAGON_S2_lsr_i_p_and
__builtin_HEXAGON_S2_lsr_i_p_nac
__builtin_HEXAGON_S2_lsr_i_p_or
__builtin_HEXAGON_S2_lsr_i_p_xacc
__builtin_HEXAGON_S2_lsr_i_r
__builtin_HEXAGON_S2_lsr_i_r_acc
__builtin_HEXAGON_S2_lsr_i_r_and
__builtin_HEXAGON_S2_lsr_i_r_nac
__builtin_HEXAGON_S2_lsr_i_r_or
__builtin_HEXAGON_S2_lsr_i_r_xacc
__builtin_HEXAGON_S2_lsr_i_vh
__builtin_HEXAGON_S2_lsr_i_vw
__builtin_HEXAGON_S2_lsr_r_p
__builtin_HEXAGON_S2_lsr_r_p_acc
__builtin_HEXAGON_S2_lsr_r_p_and
__builtin_HEXAGON_S2_lsr_r_p_nac
__builtin_HEXAGON_S2_lsr_r_p_or
__builtin_HEXAGON_S2_lsr_r_p_xor
__builtin_HEXAGON_S2_lsr_r_r
__builtin_HEXAGON_S2_lsr_r_r_acc
__builtin_HEXAGON_S2_lsr_r_r_and
__builtin_HEXAGON_S2_lsr_r_r_nac
__builtin_HEXAGON_S2_lsr_r_r_or
__builtin_HEXAGON_S2_lsr_r_vh
__builtin_HEXAGON_S2_lsr_r_vw
__builtin_HEXAGON_S2_packhl
__builtin_HEXAGON_S2_parityp
__builtin_HEXAGON_S2_setbit_i
__builtin_HEXAGON_S2_setbit_r
__builtin_HEXAGON_S2_shuffeb
__builtin_HEXAGON_S2_shuffeh
__builtin_HEXAGON_S2_shuffob
__builtin_HEXAGON_S2_shuffoh
__builtin_HEXAGON_S2_svsathb
__builtin_HEXAGON_S2_svsathub
__builtin_HEXAGON_S2_tableidxb_goodsyntax
__builtin_HEXAGON_S2_tableidxd_goodsyntax
__builtin_HEXAGON_S2_tableidxh_goodsyntax
__builtin_HEXAGON_S2_tableidxw_goodsyntax
__builtin_HEXAGON_S2_togglebit_i
__builtin_HEXAGON_S2_togglebit_r
__builtin_HEXAGON_S2_tstbit_i
__builtin_HEXAGON_S2_tstbit_r
__builtin_HEXAGON_S2_valignib
__builtin_HEXAGON_S2_valignrb
__builtin_HEXAGON_S2_vcnegh
__builtin_HEXAGON_S2_vcrotate
__builtin_HEXAGON_S2_vrcnegh
__builtin_HEXAGON_S2_vrndpackwh
__builtin_HEXAGON_S2_vrndpackwhs
__builtin_HEXAGON_S2_vsathb
__builtin_HEXAGON_S2_vsathb_nopack
__builtin_HEXAGON_S2_vsathub
__builtin_HEXAGON_S2_vsathub_nopack
__builtin_HEXAGON_S2_vsatwh
__builtin_HEXAGON_S2_vsatwh_nopack
__builtin_HEXAGON_S2_vsatwuh
__builtin_HEXAGON_S2_vsatwuh_nopack
__builtin_HEXAGON_S2_vsplatrb
__builtin_HEXAGON_S2_vsplatrh
__builtin_HEXAGON_S2_vspliceib
__builtin_HEXAGON_S2_vsplicerb
__builtin_HEXAGON_S2_vsxtbh
__builtin_HEXAGON_S2_vsxthw
__builtin_HEXAGON_S2_vtrunehb
__builtin_HEXAGON_S2_vtrunewh
__builtin_HEXAGON_S2_vtrunohb
__builtin_HEXAGON_S2_vtrunowh
__builtin_HEXAGON_S2_vzxtbh
__builtin_HEXAGON_S2_vzxthw
__builtin_HEXAGON_S4_addaddi
__builtin_HEXAGON_S4_addi_asl_ri
__builtin_HEXAGON_S4_addi_lsr_ri
__builtin_HEXAGON_S4_andi_asl_ri
__builtin_HEXAGON_S4_andi_lsr_ri
__builtin_HEXAGON_S4_clbaddi
__builtin_HEXAGON_S4_clbpaddi
__builtin_HEXAGON_S4_clbpnorm
__builtin_HEXAGON_S4_extract
__builtin_HEXAGON_S4_extract_rp
__builtin_HEXAGON_S4_extractp
__builtin_HEXAGON_S4_extractp_rp
__builtin_HEXAGON_S4_lsli
__builtin_HEXAGON_S4_ntstbit_i
__builtin_HEXAGON_S4_ntstbit_r
__builtin_HEXAGON_S4_or_andi
__builtin_HEXAGON_S4_or_andix
__builtin_HEXAGON_S4_or_ori
__builtin_HEXAGON_S4_ori_asl_ri
__builtin_HEXAGON_S4_ori_lsr_ri
__builtin_HEXAGON_S4_parity
__builtin_HEXAGON_S4_subaddi
__builtin_HEXAGON_S4_subi_asl_ri
__builtin_HEXAGON_S4_subi_lsr_ri
__builtin_HEXAGON_S4_vrcrotate
LLiLLiiUIi
__builtin_HEXAGON_S4_vrcrotate_acc
LLiLLiLLiiUIi
__builtin_HEXAGON_S4_vxaddsubh
__builtin_HEXAGON_S4_vxaddsubhr
__builtin_HEXAGON_S4_vxaddsubw
__builtin_HEXAGON_S4_vxsubaddh
__builtin_HEXAGON_S4_vxsubaddhr
__builtin_HEXAGON_S4_vxsubaddw
__builtin_HEXAGON_S5_asrhub_rnd_sat_goodsyntax
__builtin_HEXAGON_S5_asrhub_sat
__builtin_HEXAGON_S5_popcountp
__builtin_HEXAGON_S5_vasrhrnd_goodsyntax
__builtin_HEXAGON_Y2_dccleana
__builtin_HEXAGON_Y2_dccleaninva
__builtin_HEXAGON_Y2_dcfetch
__builtin_HEXAGON_Y2_dcinva
__builtin_HEXAGON_Y2_dczeroa
__builtin_HEXAGON_Y4_l2fetch
vv*i
__builtin_HEXAGON_Y5_l2fetch
vv*LLi
__builtin_HEXAGON_S6_rol_i_p
v60|v62|v65|v66|v67|v68
__builtin_HEXAGON_S6_rol_i_p_acc
__builtin_HEXAGON_S6_rol_i_p_and
__builtin_HEXAGON_S6_rol_i_p_nac
__builtin_HEXAGON_S6_rol_i_p_or
__builtin_HEXAGON_S6_rol_i_p_xacc
__builtin_HEXAGON_S6_rol_i_r
__builtin_HEXAGON_S6_rol_i_r_acc
__builtin_HEXAGON_S6_rol_i_r_and
__builtin_HEXAGON_S6_rol_i_r_nac
__builtin_HEXAGON_S6_rol_i_r_or
__builtin_HEXAGON_S6_rol_i_r_xacc
__builtin_HEXAGON_M6_vabsdiffb
__builtin_HEXAGON_M6_vabsdiffub
__builtin_HEXAGON_S6_vsplatrbp
__builtin_HEXAGON_S6_vtrunehb_ppp
__builtin_HEXAGON_S6_vtrunohb_ppp
__builtin_HEXAGON_A6_vcmpbeq_notany
v65|v66|v67|v68
__builtin_HEXAGON_F2_dfadd
v66|v67|v68
__builtin_HEXAGON_F2_dfsub
__builtin_HEXAGON_M2_mnaci
__builtin_HEXAGON_S2_mask
iUIiUIi
__builtin_HEXAGON_A7_clip
__builtin_HEXAGON_A7_croundd_ri
__builtin_HEXAGON_A7_croundd_rr
__builtin_HEXAGON_A7_vclip
__builtin_HEXAGON_F2_dfmax
v67|v68
__builtin_HEXAGON_F2_dfmin
__builtin_HEXAGON_F2_dfmpyfix
__builtin_HEXAGON_F2_dfmpyhh
__builtin_HEXAGON_F2_dfmpylh
__builtin_HEXAGON_F2_dfmpyll
__builtin_HEXAGON_M7_dcmpyiw
__builtin_HEXAGON_M7_dcmpyiw_acc
__builtin_HEXAGON_M7_dcmpyiwc
__builtin_HEXAGON_M7_dcmpyiwc_acc
__builtin_HEXAGON_M7_dcmpyrw
__builtin_HEXAGON_M7_dcmpyrw_acc
__builtin_HEXAGON_M7_dcmpyrwc
__builtin_HEXAGON_M7_dcmpyrwc_acc
__builtin_HEXAGON_M7_vdmpy
__builtin_HEXAGON_M7_vdmpy_acc
__builtin_HEXAGON_M7_wcmpyiw
__builtin_HEXAGON_M7_wcmpyiw_rnd
__builtin_HEXAGON_M7_wcmpyiwc
__builtin_HEXAGON_M7_wcmpyiwc_rnd
__builtin_HEXAGON_M7_wcmpyrw
__builtin_HEXAGON_M7_wcmpyrw_rnd
__builtin_HEXAGON_M7_wcmpyrwc
__builtin_HEXAGON_M7_wcmpyrwc_rnd
__builtin_HEXAGON_Y6_dmlink
__builtin_HEXAGON_Y6_dmpause
__builtin_HEXAGON_Y6_dmpoll
__builtin_HEXAGON_Y6_dmresume
__builtin_HEXAGON_Y6_dmstart
__builtin_HEXAGON_Y6_dmwait
__builtin_HEXAGON_V6_extractw
iV16ii
__builtin_HEXAGON_V6_extractw_128B
iV32ii
__builtin_HEXAGON_V6_hi
V16iV32i
__builtin_HEXAGON_V6_hi_128B
V32iV64i
__builtin_HEXAGON_V6_lo
__builtin_HEXAGON_V6_lo_128B
__builtin_HEXAGON_V6_lvsplatw
V16ii
__builtin_HEXAGON_V6_lvsplatw_128B
V32ii
__builtin_HEXAGON_V6_pred_and
V64bV64bV64b
__builtin_HEXAGON_V6_pred_and_128B
V128bV128bV128b
__builtin_HEXAGON_V6_pred_and_n
__builtin_HEXAGON_V6_pred_and_n_128B
__builtin_HEXAGON_V6_pred_not
V64bV64b
__builtin_HEXAGON_V6_pred_not_128B
V128bV128b
__builtin_HEXAGON_V6_pred_or
__builtin_HEXAGON_V6_pred_or_128B
__builtin_HEXAGON_V6_pred_or_n
__builtin_HEXAGON_V6_pred_or_n_128B
__builtin_HEXAGON_V6_pred_scalar2
V64bi
__builtin_HEXAGON_V6_pred_scalar2_128B
V128bi
__builtin_HEXAGON_V6_pred_xor
__builtin_HEXAGON_V6_pred_xor_128B
__builtin_HEXAGON_V6_vS32b_nqpred_ai
__builtin_HEXAGON_V6_vS32b_nqpred_ai_128B
__builtin_HEXAGON_V6_vS32b_nt_nqpred_ai
__builtin_HEXAGON_V6_vS32b_nt_nqpred_ai_128B
__builtin_HEXAGON_V6_vS32b_nt_qpred_ai
__builtin_HEXAGON_V6_vS32b_nt_qpred_ai_128B
__builtin_HEXAGON_V6_vS32b_qpred_ai
__builtin_HEXAGON_V6_vS32b_qpred_ai_128B
__builtin_HEXAGON_V6_vabsdiffh
V16iV16iV16i
__builtin_HEXAGON_V6_vabsdiffh_128B
V32iV32iV32i
__builtin_HEXAGON_V6_vabsdiffub
__builtin_HEXAGON_V6_vabsdiffub_128B
__builtin_HEXAGON_V6_vabsdiffuh
__builtin_HEXAGON_V6_vabsdiffuh_128B
__builtin_HEXAGON_V6_vabsdiffw
__builtin_HEXAGON_V6_vabsdiffw_128B
__builtin_HEXAGON_V6_vabsh
V16iV16i
__builtin_HEXAGON_V6_vabsh_128B
V32iV32i
__builtin_HEXAGON_V6_vabsh_sat
__builtin_HEXAGON_V6_vabsh_sat_128B
__builtin_HEXAGON_V6_vabsw
__builtin_HEXAGON_V6_vabsw_128B
__builtin_HEXAGON_V6_vabsw_sat
__builtin_HEXAGON_V6_vabsw_sat_128B
__builtin_HEXAGON_V6_vaddb
__builtin_HEXAGON_V6_vaddb_128B
__builtin_HEXAGON_V6_vaddb_dv
__builtin_HEXAGON_V6_vaddb_dv_128B
V64iV64iV64i
__builtin_HEXAGON_V6_vaddbnq
V16iV64bV16iV16i
__builtin_HEXAGON_V6_vaddbnq_128B
V32iV128bV32iV32i
__builtin_HEXAGON_V6_vaddbq
__builtin_HEXAGON_V6_vaddbq_128B
__builtin_HEXAGON_V6_vaddh
__builtin_HEXAGON_V6_vaddh_128B
__builtin_HEXAGON_V6_vaddh_dv
__builtin_HEXAGON_V6_vaddh_dv_128B
__builtin_HEXAGON_V6_vaddhnq
__builtin_HEXAGON_V6_vaddhnq_128B
__builtin_HEXAGON_V6_vaddhq
__builtin_HEXAGON_V6_vaddhq_128B
__builtin_HEXAGON_V6_vaddhsat
__builtin_HEXAGON_V6_vaddhsat_128B
__builtin_HEXAGON_V6_vaddhsat_dv
__builtin_HEXAGON_V6_vaddhsat_dv_128B
__builtin_HEXAGON_V6_vaddhw
V32iV16iV16i
__builtin_HEXAGON_V6_vaddhw_128B
V64iV32iV32i
__builtin_HEXAGON_V6_vaddubh
__builtin_HEXAGON_V6_vaddubh_128B
__builtin_HEXAGON_V6_vaddubsat
__builtin_HEXAGON_V6_vaddubsat_128B
__builtin_HEXAGON_V6_vaddubsat_dv
__builtin_HEXAGON_V6_vaddubsat_dv_128B
__builtin_HEXAGON_V6_vadduhsat
__builtin_HEXAGON_V6_vadduhsat_128B
__builtin_HEXAGON_V6_vadduhsat_dv
__builtin_HEXAGON_V6_vadduhsat_dv_128B
__builtin_HEXAGON_V6_vadduhw
__builtin_HEXAGON_V6_vadduhw_128B
__builtin_HEXAGON_V6_vaddw
__builtin_HEXAGON_V6_vaddw_128B
__builtin_HEXAGON_V6_vaddw_dv
__builtin_HEXAGON_V6_vaddw_dv_128B
__builtin_HEXAGON_V6_vaddwnq
__builtin_HEXAGON_V6_vaddwnq_128B
__builtin_HEXAGON_V6_vaddwq
__builtin_HEXAGON_V6_vaddwq_128B
__builtin_HEXAGON_V6_vaddwsat
__builtin_HEXAGON_V6_vaddwsat_128B
__builtin_HEXAGON_V6_vaddwsat_dv
__builtin_HEXAGON_V6_vaddwsat_dv_128B
__builtin_HEXAGON_V6_valignb
V16iV16iV16ii
__builtin_HEXAGON_V6_valignb_128B
V32iV32iV32ii
__builtin_HEXAGON_V6_valignbi
V16iV16iV16iUIi
__builtin_HEXAGON_V6_valignbi_128B
V32iV32iV32iUIi
__builtin_HEXAGON_V6_vand
__builtin_HEXAGON_V6_vand_128B
__builtin_HEXAGON_V6_vandqrt
V16iV64bi
__builtin_HEXAGON_V6_vandqrt_128B
V32iV128bi
__builtin_HEXAGON_V6_vandqrt_acc
V16iV16iV64bi
__builtin_HEXAGON_V6_vandqrt_acc_128B
V32iV32iV128bi
__builtin_HEXAGON_V6_vandvrt
V64bV16ii
__builtin_HEXAGON_V6_vandvrt_128B
V128bV32ii
__builtin_HEXAGON_V6_vandvrt_acc
V64bV64bV16ii
__builtin_HEXAGON_V6_vandvrt_acc_128B
V128bV128bV32ii
__builtin_HEXAGON_V6_vaslh
V16iV16ii
__builtin_HEXAGON_V6_vaslh_128B
V32iV32ii
__builtin_HEXAGON_V6_vaslhv
__builtin_HEXAGON_V6_vaslhv_128B
__builtin_HEXAGON_V6_vaslw
__builtin_HEXAGON_V6_vaslw_128B
__builtin_HEXAGON_V6_vaslw_acc
__builtin_HEXAGON_V6_vaslw_acc_128B
__builtin_HEXAGON_V6_vaslwv
__builtin_HEXAGON_V6_vaslwv_128B
__builtin_HEXAGON_V6_vasrh
__builtin_HEXAGON_V6_vasrh_128B
__builtin_HEXAGON_V6_vasrhbrndsat
__builtin_HEXAGON_V6_vasrhbrndsat_128B
__builtin_HEXAGON_V6_vasrhubrndsat
__builtin_HEXAGON_V6_vasrhubrndsat_128B
__builtin_HEXAGON_V6_vasrhubsat
__builtin_HEXAGON_V6_vasrhubsat_128B
__builtin_HEXAGON_V6_vasrhv
__builtin_HEXAGON_V6_vasrhv_128B
__builtin_HEXAGON_V6_vasrw
__builtin_HEXAGON_V6_vasrw_128B
__builtin_HEXAGON_V6_vasrw_acc
__builtin_HEXAGON_V6_vasrw_acc_128B
__builtin_HEXAGON_V6_vasrwh
__builtin_HEXAGON_V6_vasrwh_128B
__builtin_HEXAGON_V6_vasrwhrndsat
__builtin_HEXAGON_V6_vasrwhrndsat_128B
__builtin_HEXAGON_V6_vasrwhsat
__builtin_HEXAGON_V6_vasrwhsat_128B
__builtin_HEXAGON_V6_vasrwuhsat
__builtin_HEXAGON_V6_vasrwuhsat_128B
__builtin_HEXAGON_V6_vasrwv
__builtin_HEXAGON_V6_vasrwv_128B
__builtin_HEXAGON_V6_vassign
__builtin_HEXAGON_V6_vassign_128B
__builtin_HEXAGON_V6_vassignp
__builtin_HEXAGON_V6_vassignp_128B
V64iV64i
__builtin_HEXAGON_V6_vavgh
__builtin_HEXAGON_V6_vavgh_128B
__builtin_HEXAGON_V6_vavghrnd
__builtin_HEXAGON_V6_vavghrnd_128B
__builtin_HEXAGON_V6_vavgub
__builtin_HEXAGON_V6_vavgub_128B
__builtin_HEXAGON_V6_vavgubrnd
__builtin_HEXAGON_V6_vavgubrnd_128B
__builtin_HEXAGON_V6_vavguh
__builtin_HEXAGON_V6_vavguh_128B
__builtin_HEXAGON_V6_vavguhrnd
__builtin_HEXAGON_V6_vavguhrnd_128B
__builtin_HEXAGON_V6_vavgw
__builtin_HEXAGON_V6_vavgw_128B
__builtin_HEXAGON_V6_vavgwrnd
__builtin_HEXAGON_V6_vavgwrnd_128B
__builtin_HEXAGON_V6_vcl0h
__builtin_HEXAGON_V6_vcl0h_128B
__builtin_HEXAGON_V6_vcl0w
__builtin_HEXAGON_V6_vcl0w_128B
__builtin_HEXAGON_V6_vcombine
__builtin_HEXAGON_V6_vcombine_128B
__builtin_HEXAGON_V6_vd0
V16i
__builtin_HEXAGON_V6_vd0_128B
V32i
__builtin_HEXAGON_V6_vdealb
__builtin_HEXAGON_V6_vdealb_128B
__builtin_HEXAGON_V6_vdealb4w
__builtin_HEXAGON_V6_vdealb4w_128B
__builtin_HEXAGON_V6_vdealh
__builtin_HEXAGON_V6_vdealh_128B
__builtin_HEXAGON_V6_vdealvdd
V32iV16iV16ii
__builtin_HEXAGON_V6_vdealvdd_128B
V64iV32iV32ii
__builtin_HEXAGON_V6_vdelta
__builtin_HEXAGON_V6_vdelta_128B
__builtin_HEXAGON_V6_vdmpybus
__builtin_HEXAGON_V6_vdmpybus_128B
__builtin_HEXAGON_V6_vdmpybus_acc
__builtin_HEXAGON_V6_vdmpybus_acc_128B
__builtin_HEXAGON_V6_vdmpybus_dv
__builtin_HEXAGON_V6_vdmpybus_dv_128B
V64iV64ii
__builtin_HEXAGON_V6_vdmpybus_dv_acc
__builtin_HEXAGON_V6_vdmpybus_dv_acc_128B
V64iV64iV64ii
__builtin_HEXAGON_V6_vdmpyhb
__builtin_HEXAGON_V6_vdmpyhb_128B
__builtin_HEXAGON_V6_vdmpyhb_acc
__builtin_HEXAGON_V6_vdmpyhb_acc_128B
__builtin_HEXAGON_V6_vdmpyhb_dv
__builtin_HEXAGON_V6_vdmpyhb_dv_128B
__builtin_HEXAGON_V6_vdmpyhb_dv_acc
__builtin_HEXAGON_V6_vdmpyhb_dv_acc_128B
__builtin_HEXAGON_V6_vdmpyhisat
V16iV32ii
__builtin_HEXAGON_V6_vdmpyhisat_128B
V32iV64ii
__builtin_HEXAGON_V6_vdmpyhisat_acc
V16iV16iV32ii
__builtin_HEXAGON_V6_vdmpyhisat_acc_128B
V32iV32iV64ii
__builtin_HEXAGON_V6_vdmpyhsat
__builtin_HEXAGON_V6_vdmpyhsat_128B
__builtin_HEXAGON_V6_vdmpyhsat_acc
__builtin_HEXAGON_V6_vdmpyhsat_acc_128B
__builtin_HEXAGON_V6_vdmpyhsuisat
__builtin_HEXAGON_V6_vdmpyhsuisat_128B
__builtin_HEXAGON_V6_vdmpyhsuisat_acc
__builtin_HEXAGON_V6_vdmpyhsuisat_acc_128B
__builtin_HEXAGON_V6_vdmpyhsusat
__builtin_HEXAGON_V6_vdmpyhsusat_128B
__builtin_HEXAGON_V6_vdmpyhsusat_acc
__builtin_HEXAGON_V6_vdmpyhsusat_acc_128B
__builtin_HEXAGON_V6_vdmpyhvsat
__builtin_HEXAGON_V6_vdmpyhvsat_128B
__builtin_HEXAGON_V6_vdmpyhvsat_acc
V16iV16iV16iV16i
__builtin_HEXAGON_V6_vdmpyhvsat_acc_128B
V32iV32iV32iV32i
__builtin_HEXAGON_V6_vdsaduh
__builtin_HEXAGON_V6_vdsaduh_128B
__builtin_HEXAGON_V6_vdsaduh_acc
__builtin_HEXAGON_V6_vdsaduh_acc_128B
__builtin_HEXAGON_V6_veqb
V64bV16iV16i
__builtin_HEXAGON_V6_veqb_128B
V128bV32iV32i
__builtin_HEXAGON_V6_veqb_and
V64bV64bV16iV16i
__builtin_HEXAGON_V6_veqb_and_128B
V128bV128bV32iV32i
__builtin_HEXAGON_V6_veqb_or
__builtin_HEXAGON_V6_veqb_or_128B
__builtin_HEXAGON_V6_veqb_xor
__builtin_HEXAGON_V6_veqb_xor_128B
__builtin_HEXAGON_V6_veqh
__builtin_HEXAGON_V6_veqh_128B
__builtin_HEXAGON_V6_veqh_and
__builtin_HEXAGON_V6_veqh_and_128B
__builtin_HEXAGON_V6_veqh_or
__builtin_HEXAGON_V6_veqh_or_128B
__builtin_HEXAGON_V6_veqh_xor
__builtin_HEXAGON_V6_veqh_xor_128B
__builtin_HEXAGON_V6_veqw
__builtin_HEXAGON_V6_veqw_128B
__builtin_HEXAGON_V6_veqw_and
__builtin_HEXAGON_V6_veqw_and_128B
__builtin_HEXAGON_V6_veqw_or
__builtin_HEXAGON_V6_veqw_or_128B
__builtin_HEXAGON_V6_veqw_xor
__builtin_HEXAGON_V6_veqw_xor_128B
__builtin_HEXAGON_V6_vgtb
__builtin_HEXAGON_V6_vgtb_128B
__builtin_HEXAGON_V6_vgtb_and
__builtin_HEXAGON_V6_vgtb_and_128B
__builtin_HEXAGON_V6_vgtb_or
__builtin_HEXAGON_V6_vgtb_or_128B
__builtin_HEXAGON_V6_vgtb_xor
__builtin_HEXAGON_V6_vgtb_xor_128B
__builtin_HEXAGON_V6_vgth
__builtin_HEXAGON_V6_vgth_128B
__builtin_HEXAGON_V6_vgth_and
__builtin_HEXAGON_V6_vgth_and_128B
__builtin_HEXAGON_V6_vgth_or
__builtin_HEXAGON_V6_vgth_or_128B
__builtin_HEXAGON_V6_vgth_xor
__builtin_HEXAGON_V6_vgth_xor_128B
__builtin_HEXAGON_V6_vgtub
__builtin_HEXAGON_V6_vgtub_128B
__builtin_HEXAGON_V6_vgtub_and
__builtin_HEXAGON_V6_vgtub_and_128B
__builtin_HEXAGON_V6_vgtub_or
__builtin_HEXAGON_V6_vgtub_or_128B
__builtin_HEXAGON_V6_vgtub_xor
__builtin_HEXAGON_V6_vgtub_xor_128B
__builtin_HEXAGON_V6_vgtuh
__builtin_HEXAGON_V6_vgtuh_128B
__builtin_HEXAGON_V6_vgtuh_and
__builtin_HEXAGON_V6_vgtuh_and_128B
__builtin_HEXAGON_V6_vgtuh_or
__builtin_HEXAGON_V6_vgtuh_or_128B
__builtin_HEXAGON_V6_vgtuh_xor
__builtin_HEXAGON_V6_vgtuh_xor_128B
__builtin_HEXAGON_V6_vgtuw
__builtin_HEXAGON_V6_vgtuw_128B
__builtin_HEXAGON_V6_vgtuw_and
__builtin_HEXAGON_V6_vgtuw_and_128B
__builtin_HEXAGON_V6_vgtuw_or
__builtin_HEXAGON_V6_vgtuw_or_128B
__builtin_HEXAGON_V6_vgtuw_xor
__builtin_HEXAGON_V6_vgtuw_xor_128B
__builtin_HEXAGON_V6_vgtw
__builtin_HEXAGON_V6_vgtw_128B
__builtin_HEXAGON_V6_vgtw_and
__builtin_HEXAGON_V6_vgtw_and_128B
__builtin_HEXAGON_V6_vgtw_or
__builtin_HEXAGON_V6_vgtw_or_128B
__builtin_HEXAGON_V6_vgtw_xor
__builtin_HEXAGON_V6_vgtw_xor_128B
__builtin_HEXAGON_V6_vinsertwr
__builtin_HEXAGON_V6_vinsertwr_128B
__builtin_HEXAGON_V6_vlalignb
__builtin_HEXAGON_V6_vlalignb_128B
__builtin_HEXAGON_V6_vlalignbi
__builtin_HEXAGON_V6_vlalignbi_128B
__builtin_HEXAGON_V6_vlsrh
__builtin_HEXAGON_V6_vlsrh_128B
__builtin_HEXAGON_V6_vlsrhv
__builtin_HEXAGON_V6_vlsrhv_128B
__builtin_HEXAGON_V6_vlsrw
__builtin_HEXAGON_V6_vlsrw_128B
__builtin_HEXAGON_V6_vlsrwv
__builtin_HEXAGON_V6_vlsrwv_128B
__builtin_HEXAGON_V6_vlutvvb
__builtin_HEXAGON_V6_vlutvvb_128B
__builtin_HEXAGON_V6_vlutvvb_oracc
V16iV16iV16iV16ii
__builtin_HEXAGON_V6_vlutvvb_oracc_128B
V32iV32iV32iV32ii
__builtin_HEXAGON_V6_vlutvwh
__builtin_HEXAGON_V6_vlutvwh_128B
__builtin_HEXAGON_V6_vlutvwh_oracc
V32iV32iV16iV16ii
__builtin_HEXAGON_V6_vlutvwh_oracc_128B
V64iV64iV32iV32ii
__builtin_HEXAGON_V6_vmaxh
__builtin_HEXAGON_V6_vmaxh_128B
__builtin_HEXAGON_V6_vmaxub
__builtin_HEXAGON_V6_vmaxub_128B
__builtin_HEXAGON_V6_vmaxuh
__builtin_HEXAGON_V6_vmaxuh_128B
__builtin_HEXAGON_V6_vmaxw
__builtin_HEXAGON_V6_vmaxw_128B
__builtin_HEXAGON_V6_vminh
__builtin_HEXAGON_V6_vminh_128B
__builtin_HEXAGON_V6_vminub
__builtin_HEXAGON_V6_vminub_128B
__builtin_HEXAGON_V6_vminuh
__builtin_HEXAGON_V6_vminuh_128B
__builtin_HEXAGON_V6_vminw
__builtin_HEXAGON_V6_vminw_128B
__builtin_HEXAGON_V6_vmpabus
__builtin_HEXAGON_V6_vmpabus_128B
__builtin_HEXAGON_V6_vmpabus_acc
__builtin_HEXAGON_V6_vmpabus_acc_128B
__builtin_HEXAGON_V6_vmpabusv
__builtin_HEXAGON_V6_vmpabusv_128B
__builtin_HEXAGON_V6_vmpabuuv
__builtin_HEXAGON_V6_vmpabuuv_128B
__builtin_HEXAGON_V6_vmpahb
__builtin_HEXAGON_V6_vmpahb_128B
__builtin_HEXAGON_V6_vmpahb_acc
__builtin_HEXAGON_V6_vmpahb_acc_128B
__builtin_HEXAGON_V6_vmpybus
V32iV16ii
__builtin_HEXAGON_V6_vmpybus_128B
V64iV32ii
__builtin_HEXAGON_V6_vmpybus_acc
V32iV32iV16ii
__builtin_HEXAGON_V6_vmpybus_acc_128B
V64iV64iV32ii
__builtin_HEXAGON_V6_vmpybusv
__builtin_HEXAGON_V6_vmpybusv_128B
__builtin_HEXAGON_V6_vmpybusv_acc
V32iV32iV16iV16i
__builtin_HEXAGON_V6_vmpybusv_acc_128B
V64iV64iV32iV32i
__builtin_HEXAGON_V6_vmpybv
__builtin_HEXAGON_V6_vmpybv_128B
__builtin_HEXAGON_V6_vmpybv_acc
__builtin_HEXAGON_V6_vmpybv_acc_128B
__builtin_HEXAGON_V6_vmpyewuh
__builtin_HEXAGON_V6_vmpyewuh_128B
__builtin_HEXAGON_V6_vmpyh
__builtin_HEXAGON_V6_vmpyh_128B
__builtin_HEXAGON_V6_vmpyhsat_acc
__builtin_HEXAGON_V6_vmpyhsat_acc_128B
__builtin_HEXAGON_V6_vmpyhsrs
__builtin_HEXAGON_V6_vmpyhsrs_128B
__builtin_HEXAGON_V6_vmpyhss
__builtin_HEXAGON_V6_vmpyhss_128B
__builtin_HEXAGON_V6_vmpyhus
__builtin_HEXAGON_V6_vmpyhus_128B
__builtin_HEXAGON_V6_vmpyhus_acc
__builtin_HEXAGON_V6_vmpyhus_acc_128B
__builtin_HEXAGON_V6_vmpyhv
__builtin_HEXAGON_V6_vmpyhv_128B
__builtin_HEXAGON_V6_vmpyhv_acc
__builtin_HEXAGON_V6_vmpyhv_acc_128B
__builtin_HEXAGON_V6_vmpyhvsrs
__builtin_HEXAGON_V6_vmpyhvsrs_128B
__builtin_HEXAGON_V6_vmpyieoh
__builtin_HEXAGON_V6_vmpyieoh_128B
__builtin_HEXAGON_V6_vmpyiewh_acc
__builtin_HEXAGON_V6_vmpyiewh_acc_128B
__builtin_HEXAGON_V6_vmpyiewuh
__builtin_HEXAGON_V6_vmpyiewuh_128B
__builtin_HEXAGON_V6_vmpyiewuh_acc
__builtin_HEXAGON_V6_vmpyiewuh_acc_128B
__builtin_HEXAGON_V6_vmpyih
__builtin_HEXAGON_V6_vmpyih_128B
__builtin_HEXAGON_V6_vmpyih_acc
__builtin_HEXAGON_V6_vmpyih_acc_128B
__builtin_HEXAGON_V6_vmpyihb
__builtin_HEXAGON_V6_vmpyihb_128B
__builtin_HEXAGON_V6_vmpyihb_acc
__builtin_HEXAGON_V6_vmpyihb_acc_128B
__builtin_HEXAGON_V6_vmpyiowh
__builtin_HEXAGON_V6_vmpyiowh_128B
__builtin_HEXAGON_V6_vmpyiwb
__builtin_HEXAGON_V6_vmpyiwb_128B
__builtin_HEXAGON_V6_vmpyiwb_acc
__builtin_HEXAGON_V6_vmpyiwb_acc_128B
__builtin_HEXAGON_V6_vmpyiwh
__builtin_HEXAGON_V6_vmpyiwh_128B
__builtin_HEXAGON_V6_vmpyiwh_acc
__builtin_HEXAGON_V6_vmpyiwh_acc_128B
__builtin_HEXAGON_V6_vmpyowh
__builtin_HEXAGON_V6_vmpyowh_128B
__builtin_HEXAGON_V6_vmpyowh_rnd
__builtin_HEXAGON_V6_vmpyowh_rnd_128B
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc_128B
__builtin_HEXAGON_V6_vmpyowh_sacc
__builtin_HEXAGON_V6_vmpyowh_sacc_128B
__builtin_HEXAGON_V6_vmpyub
__builtin_HEXAGON_V6_vmpyub_128B
__builtin_HEXAGON_V6_vmpyub_acc
__builtin_HEXAGON_V6_vmpyub_acc_128B
__builtin_HEXAGON_V6_vmpyubv
__builtin_HEXAGON_V6_vmpyubv_128B
__builtin_HEXAGON_V6_vmpyubv_acc
__builtin_HEXAGON_V6_vmpyubv_acc_128B
__builtin_HEXAGON_V6_vmpyuh
__builtin_HEXAGON_V6_vmpyuh_128B
__builtin_HEXAGON_V6_vmpyuh_acc
__builtin_HEXAGON_V6_vmpyuh_acc_128B
__builtin_HEXAGON_V6_vmpyuhv
__builtin_HEXAGON_V6_vmpyuhv_128B
__builtin_HEXAGON_V6_vmpyuhv_acc
__builtin_HEXAGON_V6_vmpyuhv_acc_128B
__builtin_HEXAGON_V6_vmux
__builtin_HEXAGON_V6_vmux_128B
__builtin_HEXAGON_V6_vnavgh
__builtin_HEXAGON_V6_vnavgh_128B
__builtin_HEXAGON_V6_vnavgub
__builtin_HEXAGON_V6_vnavgub_128B
__builtin_HEXAGON_V6_vnavgw
__builtin_HEXAGON_V6_vnavgw_128B
__builtin_HEXAGON_V6_vnormamth
__builtin_HEXAGON_V6_vnormamth_128B
__builtin_HEXAGON_V6_vnormamtw
__builtin_HEXAGON_V6_vnormamtw_128B
__builtin_HEXAGON_V6_vnot
__builtin_HEXAGON_V6_vnot_128B
__builtin_HEXAGON_V6_vor
__builtin_HEXAGON_V6_vor_128B
__builtin_HEXAGON_V6_vpackeb
__builtin_HEXAGON_V6_vpackeb_128B
__builtin_HEXAGON_V6_vpackeh
__builtin_HEXAGON_V6_vpackeh_128B
__builtin_HEXAGON_V6_vpackhb_sat
__builtin_HEXAGON_V6_vpackhb_sat_128B
__builtin_HEXAGON_V6_vpackhub_sat
__builtin_HEXAGON_V6_vpackhub_sat_128B
__builtin_HEXAGON_V6_vpackob
__builtin_HEXAGON_V6_vpackob_128B
__builtin_HEXAGON_V6_vpackoh
__builtin_HEXAGON_V6_vpackoh_128B
__builtin_HEXAGON_V6_vpackwh_sat
__builtin_HEXAGON_V6_vpackwh_sat_128B
__builtin_HEXAGON_V6_vpackwuh_sat
__builtin_HEXAGON_V6_vpackwuh_sat_128B
__builtin_HEXAGON_V6_vpopcounth
__builtin_HEXAGON_V6_vpopcounth_128B
__builtin_HEXAGON_V6_vrdelta
__builtin_HEXAGON_V6_vrdelta_128B
__builtin_HEXAGON_V6_vrmpybus
__builtin_HEXAGON_V6_vrmpybus_128B
__builtin_HEXAGON_V6_vrmpybus_acc
__builtin_HEXAGON_V6_vrmpybus_acc_128B
__builtin_HEXAGON_V6_vrmpybusi
V32iV32iiUIi
__builtin_HEXAGON_V6_vrmpybusi_128B
V64iV64iiUIi
__builtin_HEXAGON_V6_vrmpybusi_acc
V32iV32iV32iiUIi
__builtin_HEXAGON_V6_vrmpybusi_acc_128B
V64iV64iV64iiUIi
__builtin_HEXAGON_V6_vrmpybusv
__builtin_HEXAGON_V6_vrmpybusv_128B
__builtin_HEXAGON_V6_vrmpybusv_acc
__builtin_HEXAGON_V6_vrmpybusv_acc_128B
__builtin_HEXAGON_V6_vrmpybv
__builtin_HEXAGON_V6_vrmpybv_128B
__builtin_HEXAGON_V6_vrmpybv_acc
__builtin_HEXAGON_V6_vrmpybv_acc_128B
__builtin_HEXAGON_V6_vrmpyub
__builtin_HEXAGON_V6_vrmpyub_128B
__builtin_HEXAGON_V6_vrmpyub_acc
__builtin_HEXAGON_V6_vrmpyub_acc_128B
__builtin_HEXAGON_V6_vrmpyubi
__builtin_HEXAGON_V6_vrmpyubi_128B
__builtin_HEXAGON_V6_vrmpyubi_acc
__builtin_HEXAGON_V6_vrmpyubi_acc_128B
__builtin_HEXAGON_V6_vrmpyubv
__builtin_HEXAGON_V6_vrmpyubv_128B
__builtin_HEXAGON_V6_vrmpyubv_acc
__builtin_HEXAGON_V6_vrmpyubv_acc_128B
__builtin_HEXAGON_V6_vror
__builtin_HEXAGON_V6_vror_128B
__builtin_HEXAGON_V6_vroundhb
__builtin_HEXAGON_V6_vroundhb_128B
__builtin_HEXAGON_V6_vroundhub
__builtin_HEXAGON_V6_vroundhub_128B
__builtin_HEXAGON_V6_vroundwh
__builtin_HEXAGON_V6_vroundwh_128B
__builtin_HEXAGON_V6_vroundwuh
__builtin_HEXAGON_V6_vroundwuh_128B
__builtin_HEXAGON_V6_vrsadubi
__builtin_HEXAGON_V6_vrsadubi_128B
__builtin_HEXAGON_V6_vrsadubi_acc
__builtin_HEXAGON_V6_vrsadubi_acc_128B
__builtin_HEXAGON_V6_vsathub
__builtin_HEXAGON_V6_vsathub_128B
__builtin_HEXAGON_V6_vsatwh
__builtin_HEXAGON_V6_vsatwh_128B
__builtin_HEXAGON_V6_vsb
V32iV16i
__builtin_HEXAGON_V6_vsb_128B
V64iV32i
__builtin_HEXAGON_V6_vsh
__builtin_HEXAGON_V6_vsh_128B
__builtin_HEXAGON_V6_vshufeh
__builtin_HEXAGON_V6_vshufeh_128B
__builtin_HEXAGON_V6_vshuffb
__builtin_HEXAGON_V6_vshuffb_128B
__builtin_HEXAGON_V6_vshuffeb
__builtin_HEXAGON_V6_vshuffeb_128B
__builtin_HEXAGON_V6_vshuffh
__builtin_HEXAGON_V6_vshuffh_128B
__builtin_HEXAGON_V6_vshuffob
__builtin_HEXAGON_V6_vshuffob_128B
__builtin_HEXAGON_V6_vshuffvdd
__builtin_HEXAGON_V6_vshuffvdd_128B
__builtin_HEXAGON_V6_vshufoeb
__builtin_HEXAGON_V6_vshufoeb_128B
__builtin_HEXAGON_V6_vshufoeh
__builtin_HEXAGON_V6_vshufoeh_128B
__builtin_HEXAGON_V6_vshufoh
__builtin_HEXAGON_V6_vshufoh_128B
__builtin_HEXAGON_V6_vsubb
__builtin_HEXAGON_V6_vsubb_128B
__builtin_HEXAGON_V6_vsubb_dv
__builtin_HEXAGON_V6_vsubb_dv_128B
__builtin_HEXAGON_V6_vsubbnq
__builtin_HEXAGON_V6_vsubbnq_128B
__builtin_HEXAGON_V6_vsubbq
__builtin_HEXAGON_V6_vsubbq_128B
__builtin_HEXAGON_V6_vsubh
__builtin_HEXAGON_V6_vsubh_128B
__builtin_HEXAGON_V6_vsubh_dv
__builtin_HEXAGON_V6_vsubh_dv_128B
__builtin_HEXAGON_V6_vsubhnq
__builtin_HEXAGON_V6_vsubhnq_128B
__builtin_HEXAGON_V6_vsubhq
__builtin_HEXAGON_V6_vsubhq_128B
__builtin_HEXAGON_V6_vsubhsat
__builtin_HEXAGON_V6_vsubhsat_128B
__builtin_HEXAGON_V6_vsubhsat_dv
__builtin_HEXAGON_V6_vsubhsat_dv_128B
__builtin_HEXAGON_V6_vsubhw
__builtin_HEXAGON_V6_vsubhw_128B
__builtin_HEXAGON_V6_vsububh
__builtin_HEXAGON_V6_vsububh_128B
__builtin_HEXAGON_V6_vsububsat
__builtin_HEXAGON_V6_vsububsat_128B
__builtin_HEXAGON_V6_vsububsat_dv
__builtin_HEXAGON_V6_vsububsat_dv_128B
__builtin_HEXAGON_V6_vsubuhsat
__builtin_HEXAGON_V6_vsubuhsat_128B
__builtin_HEXAGON_V6_vsubuhsat_dv
__builtin_HEXAGON_V6_vsubuhsat_dv_128B
__builtin_HEXAGON_V6_vsubuhw
__builtin_HEXAGON_V6_vsubuhw_128B
__builtin_HEXAGON_V6_vsubw
__builtin_HEXAGON_V6_vsubw_128B
__builtin_HEXAGON_V6_vsubw_dv
__builtin_HEXAGON_V6_vsubw_dv_128B
__builtin_HEXAGON_V6_vsubwnq
__builtin_HEXAGON_V6_vsubwnq_128B
__builtin_HEXAGON_V6_vsubwq
__builtin_HEXAGON_V6_vsubwq_128B
__builtin_HEXAGON_V6_vsubwsat
__builtin_HEXAGON_V6_vsubwsat_128B
__builtin_HEXAGON_V6_vsubwsat_dv
__builtin_HEXAGON_V6_vsubwsat_dv_128B
__builtin_HEXAGON_V6_vswap
V32iV64bV16iV16i
__builtin_HEXAGON_V6_vswap_128B
V64iV128bV32iV32i
__builtin_HEXAGON_V6_vtmpyb
__builtin_HEXAGON_V6_vtmpyb_128B
__builtin_HEXAGON_V6_vtmpyb_acc
__builtin_HEXAGON_V6_vtmpyb_acc_128B
__builtin_HEXAGON_V6_vtmpybus
__builtin_HEXAGON_V6_vtmpybus_128B
__builtin_HEXAGON_V6_vtmpybus_acc
__builtin_HEXAGON_V6_vtmpybus_acc_128B
__builtin_HEXAGON_V6_vtmpyhb
__builtin_HEXAGON_V6_vtmpyhb_128B
__builtin_HEXAGON_V6_vtmpyhb_acc
__builtin_HEXAGON_V6_vtmpyhb_acc_128B
__builtin_HEXAGON_V6_vunpackb
__builtin_HEXAGON_V6_vunpackb_128B
__builtin_HEXAGON_V6_vunpackh
__builtin_HEXAGON_V6_vunpackh_128B
__builtin_HEXAGON_V6_vunpackob
V32iV32iV16i
__builtin_HEXAGON_V6_vunpackob_128B
V64iV64iV32i
__builtin_HEXAGON_V6_vunpackoh
__builtin_HEXAGON_V6_vunpackoh_128B
__builtin_HEXAGON_V6_vunpackub
__builtin_HEXAGON_V6_vunpackub_128B
__builtin_HEXAGON_V6_vunpackuh
__builtin_HEXAGON_V6_vunpackuh_128B
__builtin_HEXAGON_V6_vxor
__builtin_HEXAGON_V6_vxor_128B
__builtin_HEXAGON_V6_vzb
__builtin_HEXAGON_V6_vzb_128B
__builtin_HEXAGON_V6_vzh
__builtin_HEXAGON_V6_vzh_128B
__builtin_HEXAGON_V6_lvsplatb
hvxv62|hvxv65|hvxv66|hvxv67|hvxv68
__builtin_HEXAGON_V6_lvsplatb_128B
__builtin_HEXAGON_V6_lvsplath
__builtin_HEXAGON_V6_lvsplath_128B
__builtin_HEXAGON_V6_pred_scalar2v2
__builtin_HEXAGON_V6_pred_scalar2v2_128B
__builtin_HEXAGON_V6_shuffeqh
__builtin_HEXAGON_V6_shuffeqh_128B
__builtin_HEXAGON_V6_shuffeqw
__builtin_HEXAGON_V6_shuffeqw_128B
__builtin_HEXAGON_V6_vaddbsat
__builtin_HEXAGON_V6_vaddbsat_128B
__builtin_HEXAGON_V6_vaddbsat_dv
__builtin_HEXAGON_V6_vaddbsat_dv_128B
__builtin_HEXAGON_V6_vaddcarry
V16iV16iV16iv*
__builtin_HEXAGON_V6_vaddcarry_128B
V32iV32iV32iv*
__builtin_HEXAGON_V6_vaddclbh
__builtin_HEXAGON_V6_vaddclbh_128B
__builtin_HEXAGON_V6_vaddclbw
__builtin_HEXAGON_V6_vaddclbw_128B
__builtin_HEXAGON_V6_vaddhw_acc
__builtin_HEXAGON_V6_vaddhw_acc_128B
__builtin_HEXAGON_V6_vaddubh_acc
__builtin_HEXAGON_V6_vaddubh_acc_128B
__builtin_HEXAGON_V6_vaddububb_sat
__builtin_HEXAGON_V6_vaddububb_sat_128B
__builtin_HEXAGON_V6_vadduhw_acc
__builtin_HEXAGON_V6_vadduhw_acc_128B
__builtin_HEXAGON_V6_vadduwsat
__builtin_HEXAGON_V6_vadduwsat_128B
__builtin_HEXAGON_V6_vadduwsat_dv
__builtin_HEXAGON_V6_vadduwsat_dv_128B
__builtin_HEXAGON_V6_vandnqrt
__builtin_HEXAGON_V6_vandnqrt_128B
__builtin_HEXAGON_V6_vandnqrt_acc
__builtin_HEXAGON_V6_vandnqrt_acc_128B
__builtin_HEXAGON_V6_vandvnqv
V16iV64bV16i
__builtin_HEXAGON_V6_vandvnqv_128B
V32iV128bV32i
__builtin_HEXAGON_V6_vandvqv
__builtin_HEXAGON_V6_vandvqv_128B
__builtin_HEXAGON_V6_vasrhbsat
__builtin_HEXAGON_V6_vasrhbsat_128B
__builtin_HEXAGON_V6_vasruwuhrndsat
__builtin_HEXAGON_V6_vasruwuhrndsat_128B
__builtin_HEXAGON_V6_vasrwuhrndsat
__builtin_HEXAGON_V6_vasrwuhrndsat_128B
__builtin_HEXAGON_V6_vlsrb
__builtin_HEXAGON_V6_vlsrb_128B
__builtin_HEXAGON_V6_vlutvvb_nm
__builtin_HEXAGON_V6_vlutvvb_nm_128B
__builtin_HEXAGON_V6_vlutvvb_oracci
V16iV16iV16iV16iUIi
__builtin_HEXAGON_V6_vlutvvb_oracci_128B
V32iV32iV32iV32iUIi
__builtin_HEXAGON_V6_vlutvvbi
__builtin_HEXAGON_V6_vlutvvbi_128B
__builtin_HEXAGON_V6_vlutvwh_nm
__builtin_HEXAGON_V6_vlutvwh_nm_128B
__builtin_HEXAGON_V6_vlutvwh_oracci
V32iV32iV16iV16iUIi
__builtin_HEXAGON_V6_vlutvwh_oracci_128B
V64iV64iV32iV32iUIi
__builtin_HEXAGON_V6_vlutvwhi
V32iV16iV16iUIi
__builtin_HEXAGON_V6_vlutvwhi_128B
V64iV32iV32iUIi
__builtin_HEXAGON_V6_vmaxb
__builtin_HEXAGON_V6_vmaxb_128B
__builtin_HEXAGON_V6_vminb
__builtin_HEXAGON_V6_vminb_128B
__builtin_HEXAGON_V6_vmpauhb
__builtin_HEXAGON_V6_vmpauhb_128B
__builtin_HEXAGON_V6_vmpauhb_acc
__builtin_HEXAGON_V6_vmpauhb_acc_128B
__builtin_HEXAGON_V6_vmpyewuh_64
__builtin_HEXAGON_V6_vmpyewuh_64_128B
__builtin_HEXAGON_V6_vmpyiwub
__builtin_HEXAGON_V6_vmpyiwub_128B
__builtin_HEXAGON_V6_vmpyiwub_acc
__builtin_HEXAGON_V6_vmpyiwub_acc_128B
__builtin_HEXAGON_V6_vmpyowh_64_acc
__builtin_HEXAGON_V6_vmpyowh_64_acc_128B
__builtin_HEXAGON_V6_vrounduhub
__builtin_HEXAGON_V6_vrounduhub_128B
__builtin_HEXAGON_V6_vrounduwuh
__builtin_HEXAGON_V6_vrounduwuh_128B
__builtin_HEXAGON_V6_vsatuwuh
__builtin_HEXAGON_V6_vsatuwuh_128B
__builtin_HEXAGON_V6_vsubbsat
__builtin_HEXAGON_V6_vsubbsat_128B
__builtin_HEXAGON_V6_vsubbsat_dv
__builtin_HEXAGON_V6_vsubbsat_dv_128B
__builtin_HEXAGON_V6_vsubcarry
__builtin_HEXAGON_V6_vsubcarry_128B
__builtin_HEXAGON_V6_vsubububb_sat
__builtin_HEXAGON_V6_vsubububb_sat_128B
__builtin_HEXAGON_V6_vsubuwsat
__builtin_HEXAGON_V6_vsubuwsat_128B
__builtin_HEXAGON_V6_vsubuwsat_dv
__builtin_HEXAGON_V6_vsubuwsat_dv_128B
__builtin_HEXAGON_V6_vabsb
hvxv65|hvxv66|hvxv67|hvxv68
__builtin_HEXAGON_V6_vabsb_128B
__builtin_HEXAGON_V6_vabsb_sat
__builtin_HEXAGON_V6_vabsb_sat_128B
__builtin_HEXAGON_V6_vaslh_acc
__builtin_HEXAGON_V6_vaslh_acc_128B
__builtin_HEXAGON_V6_vasrh_acc
__builtin_HEXAGON_V6_vasrh_acc_128B
__builtin_HEXAGON_V6_vasruhubrndsat
__builtin_HEXAGON_V6_vasruhubrndsat_128B
__builtin_HEXAGON_V6_vasruhubsat
__builtin_HEXAGON_V6_vasruhubsat_128B
__builtin_HEXAGON_V6_vasruwuhsat
__builtin_HEXAGON_V6_vasruwuhsat_128B
__builtin_HEXAGON_V6_vavgb
__builtin_HEXAGON_V6_vavgb_128B
__builtin_HEXAGON_V6_vavgbrnd
__builtin_HEXAGON_V6_vavgbrnd_128B
__builtin_HEXAGON_V6_vavguw
__builtin_HEXAGON_V6_vavguw_128B
__builtin_HEXAGON_V6_vavguwrnd
__builtin_HEXAGON_V6_vavguwrnd_128B
__builtin_HEXAGON_V6_vdd0
__builtin_HEXAGON_V6_vdd0_128B
V64i
__builtin_HEXAGON_V6_vgathermh
vv*iiV16i
__builtin_HEXAGON_V6_vgathermh_128B
vv*iiV32i
__builtin_HEXAGON_V6_vgathermhq
vv*V64biiV16i
__builtin_HEXAGON_V6_vgathermhq_128B
vv*V128biiV32i
__builtin_HEXAGON_V6_vgathermhw
__builtin_HEXAGON_V6_vgathermhw_128B
vv*iiV64i
__builtin_HEXAGON_V6_vgathermhwq
vv*V64biiV32i
__builtin_HEXAGON_V6_vgathermhwq_128B
vv*V128biiV64i
__builtin_HEXAGON_V6_vgathermw
__builtin_HEXAGON_V6_vgathermw_128B
__builtin_HEXAGON_V6_vgathermwq
__builtin_HEXAGON_V6_vgathermwq_128B
__builtin_HEXAGON_V6_vlut4
V16iV16iLLi
__builtin_HEXAGON_V6_vlut4_128B
V32iV32iLLi
__builtin_HEXAGON_V6_vmpabuu
__builtin_HEXAGON_V6_vmpabuu_128B
__builtin_HEXAGON_V6_vmpabuu_acc
__builtin_HEXAGON_V6_vmpabuu_acc_128B
__builtin_HEXAGON_V6_vmpahhsat
V16iV16iV16iLLi
__builtin_HEXAGON_V6_vmpahhsat_128B
V32iV32iV32iLLi
__builtin_HEXAGON_V6_vmpauhuhsat
__builtin_HEXAGON_V6_vmpauhuhsat_128B
__builtin_HEXAGON_V6_vmpsuhuhsat
__builtin_HEXAGON_V6_vmpsuhuhsat_128B
__builtin_HEXAGON_V6_vmpyh_acc
__builtin_HEXAGON_V6_vmpyh_acc_128B
__builtin_HEXAGON_V6_vmpyuhe
__builtin_HEXAGON_V6_vmpyuhe_128B
__builtin_HEXAGON_V6_vmpyuhe_acc
__builtin_HEXAGON_V6_vmpyuhe_acc_128B
__builtin_HEXAGON_V6_vnavgb
__builtin_HEXAGON_V6_vnavgb_128B
__builtin_HEXAGON_V6_vprefixqb
V16iV64b
__builtin_HEXAGON_V6_vprefixqb_128B
V32iV128b
__builtin_HEXAGON_V6_vprefixqh
__builtin_HEXAGON_V6_vprefixqh_128B
__builtin_HEXAGON_V6_vprefixqw
__builtin_HEXAGON_V6_vprefixqw_128B
__builtin_HEXAGON_V6_vscattermh
viiV16iV16i
__builtin_HEXAGON_V6_vscattermh_128B
viiV32iV32i
__builtin_HEXAGON_V6_vscattermh_add
__builtin_HEXAGON_V6_vscattermh_add_128B
__builtin_HEXAGON_V6_vscattermhq
vV64biiV16iV16i
__builtin_HEXAGON_V6_vscattermhq_128B
vV128biiV32iV32i
__builtin_HEXAGON_V6_vscattermhw
viiV32iV16i
__builtin_HEXAGON_V6_vscattermhw_128B
viiV64iV32i
__builtin_HEXAGON_V6_vscattermhw_add
__builtin_HEXAGON_V6_vscattermhw_add_128B
__builtin_HEXAGON_V6_vscattermhwq
vV64biiV32iV16i
__builtin_HEXAGON_V6_vscattermhwq_128B
vV128biiV64iV32i
__builtin_HEXAGON_V6_vscattermw
__builtin_HEXAGON_V6_vscattermw_128B
__builtin_HEXAGON_V6_vscattermw_add
__builtin_HEXAGON_V6_vscattermw_add_128B
__builtin_HEXAGON_V6_vscattermwq
__builtin_HEXAGON_V6_vscattermwq_128B
__builtin_HEXAGON_V6_vaddcarrysat
V16iV16iV16iV64b
hvxv66|hvxv67|hvxv68
__builtin_HEXAGON_V6_vaddcarrysat_128B
V32iV32iV32iV128b
__builtin_HEXAGON_V6_vasr_into
__builtin_HEXAGON_V6_vasr_into_128B
__builtin_HEXAGON_V6_vrotr
__builtin_HEXAGON_V6_vrotr_128B
__builtin_HEXAGON_V6_vsatdw
__builtin_HEXAGON_V6_vsatdw_128B
__builtin_HEXAGON_V6_v6mpyhubs10
hvxv68
__builtin_HEXAGON_V6_v6mpyhubs10_128B
V64iV64iV64iUIi
__builtin_HEXAGON_V6_v6mpyhubs10_vxx
__builtin_HEXAGON_V6_v6mpyhubs10_vxx_128B
V64iV64iV64iV64iUIi
__builtin_HEXAGON_V6_v6mpyvubs10
__builtin_HEXAGON_V6_v6mpyvubs10_128B
__builtin_HEXAGON_V6_v6mpyvubs10_vxx
__builtin_HEXAGON_V6_v6mpyvubs10_vxx_128B
hvxv
__lanai__
__LANAI_V11__
le64
-m:e
-p:32:16:32
-i8:8:8-i16:16:16-i32:16:32
-n8:16:32
-a:0:16-S16
__m68k__
mc68000
__mc68000
__mc68000__
mc68010
__mc68010
__mc68010__
mc68020
__mc68020
__mc68020__
mc68030
__mc68030
__mc68030__
mc68040
__mc68040
__mc68040__
mc68060
__mc68060
__mc68060__
MSP430
__MSP430__
__builtin_mips_addu_qb
V4ScV4ScV4Sc
__builtin_mips_addu_s_qb
__builtin_mips_subu_qb
__builtin_mips_subu_s_qb
__builtin_mips_addq_ph
V2sV2sV2s
__builtin_mips_addq_s_ph
__builtin_mips_subq_ph
__builtin_mips_subq_s_ph
__builtin_mips_madd
__builtin_mips_maddu
LLiLLiUiUi
__builtin_mips_msub
__builtin_mips_msubu
__builtin_mips_addq_s_w
__builtin_mips_subq_s_w
__builtin_mips_addsc
__builtin_mips_addwc
__builtin_mips_modsub
__builtin_mips_raddu_w_qb
iV4Sc
__builtin_mips_absq_s_ph
V2sV2s
__builtin_mips_absq_s_w
__builtin_mips_precrq_qb_ph
V4ScV2sV2s
__builtin_mips_precrqu_s_qb_ph
__builtin_mips_precrq_ph_w
V2sii
__builtin_mips_precrq_rs_ph_w
__builtin_mips_preceq_w_phl
iV2s
__builtin_mips_preceq_w_phr
__builtin_mips_precequ_ph_qbl
V2sV4Sc
__builtin_mips_precequ_ph_qbr
__builtin_mips_precequ_ph_qbla
__builtin_mips_precequ_ph_qbra
__builtin_mips_preceu_ph_qbl
__builtin_mips_preceu_ph_qbr
__builtin_mips_preceu_ph_qbla
__builtin_mips_preceu_ph_qbra
__builtin_mips_shll_qb
V4ScV4Sci
__builtin_mips_shrl_qb
__builtin_mips_shll_ph
V2sV2si
__builtin_mips_shll_s_ph
__builtin_mips_shra_ph
__builtin_mips_shra_r_ph
__builtin_mips_shll_s_w
__builtin_mips_shra_r_w
__builtin_mips_shilo
__builtin_mips_muleu_s_ph_qbl
V2sV4ScV2s
__builtin_mips_muleu_s_ph_qbr
__builtin_mips_mulq_rs_ph
__builtin_mips_muleq_s_w_phl
iV2sV2s
__builtin_mips_muleq_s_w_phr
__builtin_mips_mulsaq_s_w_ph
LLiLLiV2sV2s
__builtin_mips_maq_s_w_phl
__builtin_mips_maq_s_w_phr
__builtin_mips_maq_sa_w_phl
__builtin_mips_maq_sa_w_phr
__builtin_mips_mult
__builtin_mips_multu
LLiUiUi
__builtin_mips_dpau_h_qbl
LLiLLiV4ScV4Sc
__builtin_mips_dpau_h_qbr
__builtin_mips_dpsu_h_qbl
__builtin_mips_dpsu_h_qbr
__builtin_mips_dpaq_s_w_ph
__builtin_mips_dpsq_s_w_ph
__builtin_mips_dpaq_sa_l_w
__builtin_mips_dpsq_sa_l_w
__builtin_mips_cmpu_eq_qb
vV4ScV4Sc
__builtin_mips_cmpu_lt_qb
__builtin_mips_cmpu_le_qb
__builtin_mips_cmpgu_eq_qb
iV4ScV4Sc
__builtin_mips_cmpgu_lt_qb
__builtin_mips_cmpgu_le_qb
__builtin_mips_cmp_eq_ph
vV2sV2s
__builtin_mips_cmp_lt_ph
__builtin_mips_cmp_le_ph
__builtin_mips_extr_s_h
__builtin_mips_extr_w
__builtin_mips_extr_rs_w
__builtin_mips_extr_r_w
__builtin_mips_extp
__builtin_mips_extpdp
__builtin_mips_wrdsp
viIi
__builtin_mips_rddsp
__builtin_mips_insv
__builtin_mips_bitrev
__builtin_mips_packrl_ph
__builtin_mips_repl_qb
V4Sci
__builtin_mips_repl_ph
V2si
__builtin_mips_pick_qb
__builtin_mips_pick_ph
__builtin_mips_mthlip
__builtin_mips_bposge32
__builtin_mips_lbux
iv*i
__builtin_mips_lhx
__builtin_mips_lwx
__builtin_mips_absq_s_qb
V4ScV4Sc
__builtin_mips_addqh_ph
__builtin_mips_addqh_r_ph
__builtin_mips_addqh_w
__builtin_mips_addqh_r_w
__builtin_mips_addu_ph
__builtin_mips_addu_s_ph
__builtin_mips_adduh_qb
__builtin_mips_adduh_r_qb
__builtin_mips_append
__builtin_mips_balign
__builtin_mips_cmpgdu_eq_qb
__builtin_mips_cmpgdu_lt_qb
__builtin_mips_cmpgdu_le_qb
__builtin_mips_dpa_w_ph
__builtin_mips_dps_w_ph
__builtin_mips_dpaqx_s_w_ph
__builtin_mips_dpaqx_sa_w_ph
__builtin_mips_dpax_w_ph
__builtin_mips_dpsx_w_ph
__builtin_mips_dpsqx_s_w_ph
__builtin_mips_dpsqx_sa_w_ph
__builtin_mips_mul_ph
__builtin_mips_mul_s_ph
__builtin_mips_mulq_rs_w
__builtin_mips_mulq_s_ph
__builtin_mips_mulq_s_w
__builtin_mips_mulsa_w_ph
__builtin_mips_precr_qb_ph
__builtin_mips_precr_sra_ph_w
V2siiIi
__builtin_mips_precr_sra_r_ph_w
__builtin_mips_prepend
__builtin_mips_shra_qb
__builtin_mips_shra_r_qb
__builtin_mips_shrl_ph
__builtin_mips_subqh_ph
__builtin_mips_subqh_r_ph
__builtin_mips_subqh_w
__builtin_mips_subqh_r_w
__builtin_mips_subu_ph
__builtin_mips_subu_s_ph
__builtin_mips_subuh_qb
__builtin_mips_subuh_r_qb
__builtin_msa_add_a_b
V16ScV16ScV16Sc
__builtin_msa_add_a_h
V8SsV8SsV8Ss
__builtin_msa_add_a_w
V4SiV4SiV4Si
__builtin_msa_add_a_d
V2SLLiV2SLLiV2SLLi
__builtin_msa_adds_a_b
__builtin_msa_adds_a_h
__builtin_msa_adds_a_w
__builtin_msa_adds_a_d
__builtin_msa_adds_s_b
__builtin_msa_adds_s_h
__builtin_msa_adds_s_w
__builtin_msa_adds_s_d
__builtin_msa_adds_u_b
V16UcV16UcV16Uc
__builtin_msa_adds_u_h
V8UsV8UsV8Us
__builtin_msa_adds_u_w
V4UiV4UiV4Ui
__builtin_msa_adds_u_d
V2ULLiV2ULLiV2ULLi
__builtin_msa_addv_b
V16cV16cV16c
__builtin_msa_addv_h
V8sV8sV8s
__builtin_msa_addv_w
V4iV4iV4i
__builtin_msa_addv_d
V2LLiV2LLiV2LLi
__builtin_msa_addvi_b
V16cV16cIUi
__builtin_msa_addvi_h
V8sV8sIUi
__builtin_msa_addvi_w
V4iV4iIUi
__builtin_msa_addvi_d
V2LLiV2LLiIUi
__builtin_msa_and_v
__builtin_msa_andi_b
V16UcV16UcIUi
__builtin_msa_asub_s_b
__builtin_msa_asub_s_h
__builtin_msa_asub_s_w
__builtin_msa_asub_s_d
__builtin_msa_asub_u_b
__builtin_msa_asub_u_h
__builtin_msa_asub_u_w
__builtin_msa_asub_u_d
__builtin_msa_ave_s_b
__builtin_msa_ave_s_h
__builtin_msa_ave_s_w
__builtin_msa_ave_s_d
__builtin_msa_ave_u_b
__builtin_msa_ave_u_h
__builtin_msa_ave_u_w
__builtin_msa_ave_u_d
__builtin_msa_aver_s_b
__builtin_msa_aver_s_h
__builtin_msa_aver_s_w
__builtin_msa_aver_s_d
__builtin_msa_aver_u_b
__builtin_msa_aver_u_h
__builtin_msa_aver_u_w
__builtin_msa_aver_u_d
__builtin_msa_bclr_b
__builtin_msa_bclr_h
__builtin_msa_bclr_w
__builtin_msa_bclr_d
__builtin_msa_bclri_b
__builtin_msa_bclri_h
V8UsV8UsIUi
__builtin_msa_bclri_w
V4UiV4UiIUi
__builtin_msa_bclri_d
V2ULLiV2ULLiIUi
__builtin_msa_binsl_b
V16UcV16UcV16UcV16Uc
__builtin_msa_binsl_h
V8UsV8UsV8UsV8Us
__builtin_msa_binsl_w
V4UiV4UiV4UiV4Ui
__builtin_msa_binsl_d
V2ULLiV2ULLiV2ULLiV2ULLi
__builtin_msa_binsli_b
V16UcV16UcV16UcIUi
__builtin_msa_binsli_h
V8UsV8UsV8UsIUi
__builtin_msa_binsli_w
V4UiV4UiV4UiIUi
__builtin_msa_binsli_d
V2ULLiV2ULLiV2ULLiIUi
__builtin_msa_binsr_b
__builtin_msa_binsr_h
__builtin_msa_binsr_w
__builtin_msa_binsr_d
__builtin_msa_binsri_b
__builtin_msa_binsri_h
__builtin_msa_binsri_w
__builtin_msa_binsri_d
__builtin_msa_bmnz_v
__builtin_msa_bmnzi_b
__builtin_msa_bmz_v
__builtin_msa_bmzi_b
__builtin_msa_bneg_b
__builtin_msa_bneg_h
__builtin_msa_bneg_w
__builtin_msa_bneg_d
__builtin_msa_bnegi_b
__builtin_msa_bnegi_h
__builtin_msa_bnegi_w
__builtin_msa_bnegi_d
__builtin_msa_bnz_b
iV16Uc
__builtin_msa_bnz_h
iV8Us
__builtin_msa_bnz_w
iV4Ui
__builtin_msa_bnz_d
iV2ULLi
__builtin_msa_bnz_v
__builtin_msa_bsel_v
__builtin_msa_bseli_b
__builtin_msa_bset_b
__builtin_msa_bset_h
__builtin_msa_bset_w
__builtin_msa_bset_d
__builtin_msa_bseti_b
__builtin_msa_bseti_h
__builtin_msa_bseti_w
__builtin_msa_bseti_d
__builtin_msa_bz_b
__builtin_msa_bz_h
__builtin_msa_bz_w
__builtin_msa_bz_d
__builtin_msa_bz_v
__builtin_msa_ceq_b
__builtin_msa_ceq_h
__builtin_msa_ceq_w
__builtin_msa_ceq_d
__builtin_msa_ceqi_b
V16ScV16ScISi
__builtin_msa_ceqi_h
V8SsV8SsISi
__builtin_msa_ceqi_w
V4SiV4SiISi
__builtin_msa_ceqi_d
V2SLLiV2SLLiISi
__builtin_msa_cfcmsa
__builtin_msa_cle_s_b
__builtin_msa_cle_s_h
__builtin_msa_cle_s_w
__builtin_msa_cle_s_d
__builtin_msa_cle_u_b
V16ScV16UcV16Uc
__builtin_msa_cle_u_h
V8SsV8UsV8Us
__builtin_msa_cle_u_w
V4SiV4UiV4Ui
__builtin_msa_cle_u_d
V2SLLiV2ULLiV2ULLi
__builtin_msa_clei_s_b
__builtin_msa_clei_s_h
__builtin_msa_clei_s_w
__builtin_msa_clei_s_d
__builtin_msa_clei_u_b
V16ScV16UcIUi
__builtin_msa_clei_u_h
V8SsV8UsIUi
__builtin_msa_clei_u_w
V4SiV4UiIUi
__builtin_msa_clei_u_d
V2SLLiV2ULLiIUi
__builtin_msa_clt_s_b
__builtin_msa_clt_s_h
__builtin_msa_clt_s_w
__builtin_msa_clt_s_d
__builtin_msa_clt_u_b
__builtin_msa_clt_u_h
__builtin_msa_clt_u_w
__builtin_msa_clt_u_d
__builtin_msa_clti_s_b
__builtin_msa_clti_s_h
__builtin_msa_clti_s_w
__builtin_msa_clti_s_d
__builtin_msa_clti_u_b
__builtin_msa_clti_u_h
__builtin_msa_clti_u_w
__builtin_msa_clti_u_d
__builtin_msa_copy_s_b
iV16ScIUi
__builtin_msa_copy_s_h
iV8SsIUi
__builtin_msa_copy_s_w
iV4SiIUi
__builtin_msa_copy_s_d
LLiV2SLLiIUi
__builtin_msa_copy_u_b
iV16UcIUi
__builtin_msa_copy_u_h
iV8UsIUi
__builtin_msa_copy_u_w
iV4UiIUi
__builtin_msa_copy_u_d
LLiV2ULLiIUi
__builtin_msa_ctcmsa
vIii
__builtin_msa_div_s_b
__builtin_msa_div_s_h
__builtin_msa_div_s_w
__builtin_msa_div_s_d
__builtin_msa_div_u_b
__builtin_msa_div_u_h
__builtin_msa_div_u_w
__builtin_msa_div_u_d
__builtin_msa_dotp_s_h
V8SsV16ScV16Sc
__builtin_msa_dotp_s_w
V4SiV8SsV8Ss
__builtin_msa_dotp_s_d
V2SLLiV4SiV4Si
__builtin_msa_dotp_u_h
V8UsV16UcV16Uc
__builtin_msa_dotp_u_w
V4UiV8UsV8Us
__builtin_msa_dotp_u_d
V2ULLiV4UiV4Ui
__builtin_msa_dpadd_s_h
V8SsV8SsV16ScV16Sc
__builtin_msa_dpadd_s_w
V4SiV4SiV8SsV8Ss
__builtin_msa_dpadd_s_d
V2SLLiV2SLLiV4SiV4Si
__builtin_msa_dpadd_u_h
V8UsV8UsV16UcV16Uc
__builtin_msa_dpadd_u_w
V4UiV4UiV8UsV8Us
__builtin_msa_dpadd_u_d
V2ULLiV2ULLiV4UiV4Ui
__builtin_msa_dpsub_s_h
__builtin_msa_dpsub_s_w
__builtin_msa_dpsub_s_d
__builtin_msa_dpsub_u_h
__builtin_msa_dpsub_u_w
__builtin_msa_dpsub_u_d
__builtin_msa_fadd_w
V4fV4fV4f
__builtin_msa_fadd_d
V2dV2dV2d
__builtin_msa_fcaf_w
V4iV4fV4f
__builtin_msa_fcaf_d
V2LLiV2dV2d
__builtin_msa_fceq_w
__builtin_msa_fceq_d
__builtin_msa_fclass_w
V4iV4f
__builtin_msa_fclass_d
V2LLiV2d
__builtin_msa_fcle_w
__builtin_msa_fcle_d
__builtin_msa_fclt_w
__builtin_msa_fclt_d
__builtin_msa_fcne_w
__builtin_msa_fcne_d
__builtin_msa_fcor_w
__builtin_msa_fcor_d
__builtin_msa_fcueq_w
__builtin_msa_fcueq_d
__builtin_msa_fcule_w
__builtin_msa_fcule_d
__builtin_msa_fcult_w
__builtin_msa_fcult_d
__builtin_msa_fcun_w
__builtin_msa_fcun_d
__builtin_msa_fcune_w
__builtin_msa_fcune_d
__builtin_msa_fdiv_w
__builtin_msa_fdiv_d
__builtin_msa_fexdo_h
V8hV4fV4f
__builtin_msa_fexdo_w
V4fV2dV2d
__builtin_msa_fexp2_w
V4fV4fV4i
__builtin_msa_fexp2_d
V2dV2dV2LLi
__builtin_msa_fexupl_w
V4fV8h
__builtin_msa_fexupl_d
V2dV4f
__builtin_msa_fexupr_w
__builtin_msa_fexupr_d
__builtin_msa_ffint_s_w
V4fV4Si
__builtin_msa_ffint_s_d
V2dV2SLLi
__builtin_msa_ffint_u_w
V4fV4Ui
__builtin_msa_ffint_u_d
V2dV2ULLi
__builtin_msa_ffql_w
V4fV8Ss
__builtin_msa_ffql_d
V2dV4Si
__builtin_msa_ffqr_w
__builtin_msa_ffqr_d
__builtin_msa_fill_b
V16Sci
__builtin_msa_fill_h
V8Ssi
__builtin_msa_fill_w
V4Sii
__builtin_msa_fill_d
V2SLLiLLi
__builtin_msa_flog2_w
V4fV4f
__builtin_msa_flog2_d
V2dV2d
__builtin_msa_fmadd_w
V4fV4fV4fV4f
__builtin_msa_fmadd_d
V2dV2dV2dV2d
__builtin_msa_fmax_w
__builtin_msa_fmax_d
__builtin_msa_fmax_a_w
__builtin_msa_fmax_a_d
__builtin_msa_fmin_w
__builtin_msa_fmin_d
__builtin_msa_fmin_a_w
__builtin_msa_fmin_a_d
__builtin_msa_fmsub_w
__builtin_msa_fmsub_d
__builtin_msa_fmul_w
__builtin_msa_fmul_d
__builtin_msa_frint_w
__builtin_msa_frint_d
__builtin_msa_frcp_w
__builtin_msa_frcp_d
__builtin_msa_frsqrt_w
__builtin_msa_frsqrt_d
__builtin_msa_fsaf_w
__builtin_msa_fsaf_d
__builtin_msa_fseq_w
__builtin_msa_fseq_d
__builtin_msa_fsle_w
__builtin_msa_fsle_d
__builtin_msa_fslt_w
__builtin_msa_fslt_d
__builtin_msa_fsne_w
__builtin_msa_fsne_d
__builtin_msa_fsor_w
__builtin_msa_fsor_d
__builtin_msa_fsqrt_w
__builtin_msa_fsqrt_d
__builtin_msa_fsub_w
__builtin_msa_fsub_d
__builtin_msa_fsueq_w
__builtin_msa_fsueq_d
__builtin_msa_fsule_w
__builtin_msa_fsule_d
__builtin_msa_fsult_w
__builtin_msa_fsult_d
__builtin_msa_fsun_w
__builtin_msa_fsun_d
__builtin_msa_fsune_w
__builtin_msa_fsune_d
__builtin_msa_ftint_s_w
V4SiV4f
__builtin_msa_ftint_s_d
V2SLLiV2d
__builtin_msa_ftint_u_w
V4UiV4f
__builtin_msa_ftint_u_d
V2ULLiV2d
__builtin_msa_ftq_h
V4UiV4fV4f
__builtin_msa_ftq_w
V2ULLiV2dV2d
__builtin_msa_ftrunc_s_w
__builtin_msa_ftrunc_s_d
__builtin_msa_ftrunc_u_w
__builtin_msa_ftrunc_u_d
__builtin_msa_hadd_s_h
__builtin_msa_hadd_s_w
__builtin_msa_hadd_s_d
__builtin_msa_hadd_u_h
__builtin_msa_hadd_u_w
__builtin_msa_hadd_u_d
__builtin_msa_hsub_s_h
__builtin_msa_hsub_s_w
__builtin_msa_hsub_s_d
__builtin_msa_hsub_u_h
__builtin_msa_hsub_u_w
__builtin_msa_hsub_u_d
__builtin_msa_ilvev_b
__builtin_msa_ilvev_h
__builtin_msa_ilvev_w
__builtin_msa_ilvev_d
__builtin_msa_ilvl_b
__builtin_msa_ilvl_h
__builtin_msa_ilvl_w
__builtin_msa_ilvl_d
__builtin_msa_ilvod_b
__builtin_msa_ilvod_h
__builtin_msa_ilvod_w
__builtin_msa_ilvod_d
__builtin_msa_ilvr_b
__builtin_msa_ilvr_h
__builtin_msa_ilvr_w
__builtin_msa_ilvr_d
__builtin_msa_insert_b
V16ScV16ScIUii
__builtin_msa_insert_h
V8SsV8SsIUii
__builtin_msa_insert_w
V4SiV4SiIUii
__builtin_msa_insert_d
V2SLLiV2SLLiIUiLLi
__builtin_msa_insve_b
V16ScV16ScIUiV16Sc
__builtin_msa_insve_h
V8SsV8SsIUiV8Ss
__builtin_msa_insve_w
V4SiV4SiIUiV4Si
__builtin_msa_insve_d
V2SLLiV2SLLiIUiV2SLLi
__builtin_msa_ld_b
V16Scv*Ii
__builtin_msa_ld_h
V8Ssv*Ii
__builtin_msa_ld_w
V4Siv*Ii
__builtin_msa_ld_d
V2SLLiv*Ii
__builtin_msa_ldr_d
__builtin_msa_ldr_w
__builtin_msa_ldi_b
V16cIi
__builtin_msa_ldi_h
V8sIi
__builtin_msa_ldi_w
V4iIi
__builtin_msa_ldi_d
V2LLiIi
__builtin_msa_madd_q_h
V8SsV8SsV8SsV8Ss
__builtin_msa_madd_q_w
V4SiV4SiV4SiV4Si
__builtin_msa_maddr_q_h
__builtin_msa_maddr_q_w
__builtin_msa_maddv_b
V16ScV16ScV16ScV16Sc
__builtin_msa_maddv_h
__builtin_msa_maddv_w
__builtin_msa_maddv_d
V2SLLiV2SLLiV2SLLiV2SLLi
__builtin_msa_max_a_b
__builtin_msa_max_a_h
__builtin_msa_max_a_w
__builtin_msa_max_a_d
__builtin_msa_max_s_b
__builtin_msa_max_s_h
__builtin_msa_max_s_w
__builtin_msa_max_s_d
__builtin_msa_max_u_b
__builtin_msa_max_u_h
__builtin_msa_max_u_w
__builtin_msa_max_u_d
__builtin_msa_maxi_s_b
V16ScV16ScIi
__builtin_msa_maxi_s_h
V8SsV8SsIi
__builtin_msa_maxi_s_w
V4SiV4SiIi
__builtin_msa_maxi_s_d
V2SLLiV2SLLiIi
__builtin_msa_maxi_u_b
V16UcV16UcIi
__builtin_msa_maxi_u_h
V8UsV8UsIi
__builtin_msa_maxi_u_w
V4UiV4UiIi
__builtin_msa_maxi_u_d
V2ULLiV2ULLiIi
__builtin_msa_min_a_b
__builtin_msa_min_a_h
__builtin_msa_min_a_w
__builtin_msa_min_a_d
__builtin_msa_min_s_b
__builtin_msa_min_s_h
__builtin_msa_min_s_w
__builtin_msa_min_s_d
__builtin_msa_min_u_b
__builtin_msa_min_u_h
__builtin_msa_min_u_w
__builtin_msa_min_u_d
__builtin_msa_mini_s_b
__builtin_msa_mini_s_h
__builtin_msa_mini_s_w
__builtin_msa_mini_s_d
__builtin_msa_mini_u_b
__builtin_msa_mini_u_h
__builtin_msa_mini_u_w
__builtin_msa_mini_u_d
__builtin_msa_mod_s_b
__builtin_msa_mod_s_h
__builtin_msa_mod_s_w
__builtin_msa_mod_s_d
__builtin_msa_mod_u_b
__builtin_msa_mod_u_h
__builtin_msa_mod_u_w
__builtin_msa_mod_u_d
__builtin_msa_move_v
V16ScV16Sc
__builtin_msa_msub_q_h
__builtin_msa_msub_q_w
__builtin_msa_msubr_q_h
__builtin_msa_msubr_q_w
__builtin_msa_msubv_b
__builtin_msa_msubv_h
__builtin_msa_msubv_w
__builtin_msa_msubv_d
__builtin_msa_mul_q_h
__builtin_msa_mul_q_w
__builtin_msa_mulr_q_h
__builtin_msa_mulr_q_w
__builtin_msa_mulv_b
__builtin_msa_mulv_h
__builtin_msa_mulv_w
__builtin_msa_mulv_d
__builtin_msa_nloc_b
__builtin_msa_nloc_h
V8SsV8Ss
__builtin_msa_nloc_w
V4SiV4Si
__builtin_msa_nloc_d
V2SLLiV2SLLi
__builtin_msa_nlzc_b
__builtin_msa_nlzc_h
__builtin_msa_nlzc_w
__builtin_msa_nlzc_d
__builtin_msa_nor_v
__builtin_msa_nori_b
V16UcV16cIUi
__builtin_msa_or_v
__builtin_msa_ori_b
__builtin_msa_pckev_b
__builtin_msa_pckev_h
__builtin_msa_pckev_w
__builtin_msa_pckev_d
__builtin_msa_pckod_b
__builtin_msa_pckod_h
__builtin_msa_pckod_w
__builtin_msa_pckod_d
__builtin_msa_pcnt_b
__builtin_msa_pcnt_h
__builtin_msa_pcnt_w
__builtin_msa_pcnt_d
__builtin_msa_sat_s_b
V16ScV16ScIUi
__builtin_msa_sat_s_h
V8SsV8SsIUi
__builtin_msa_sat_s_w
V4SiV4SiIUi
__builtin_msa_sat_s_d
V2SLLiV2SLLiIUi
__builtin_msa_sat_u_b
__builtin_msa_sat_u_h
__builtin_msa_sat_u_w
__builtin_msa_sat_u_d
__builtin_msa_shf_b
__builtin_msa_shf_h
__builtin_msa_shf_w
__builtin_msa_sld_b
V16cV16cV16cUi
__builtin_msa_sld_h
V8sV8sV8sUi
__builtin_msa_sld_w
V4iV4iV4iUi
__builtin_msa_sld_d
V2LLiV2LLiV2LLiUi
__builtin_msa_sldi_b
V16cV16cV16cIUi
__builtin_msa_sldi_h
V8sV8sV8sIUi
__builtin_msa_sldi_w
V4iV4iV4iIUi
__builtin_msa_sldi_d
V2LLiV2LLiV2LLiIUi
__builtin_msa_sll_b
__builtin_msa_sll_h
__builtin_msa_sll_w
__builtin_msa_sll_d
__builtin_msa_slli_b
__builtin_msa_slli_h
__builtin_msa_slli_w
__builtin_msa_slli_d
__builtin_msa_splat_b
V16cV16cUi
__builtin_msa_splat_h
V8sV8sUi
__builtin_msa_splat_w
V4iV4iUi
__builtin_msa_splat_d
V2LLiV2LLiUi
__builtin_msa_splati_b
__builtin_msa_splati_h
__builtin_msa_splati_w
__builtin_msa_splati_d
__builtin_msa_sra_b
__builtin_msa_sra_h
__builtin_msa_sra_w
__builtin_msa_sra_d
__builtin_msa_srai_b
__builtin_msa_srai_h
__builtin_msa_srai_w
__builtin_msa_srai_d
__builtin_msa_srar_b
__builtin_msa_srar_h
__builtin_msa_srar_w
__builtin_msa_srar_d
__builtin_msa_srari_b
__builtin_msa_srari_h
__builtin_msa_srari_w
__builtin_msa_srari_d
__builtin_msa_srl_b
__builtin_msa_srl_h
__builtin_msa_srl_w
__builtin_msa_srl_d
__builtin_msa_srli_b
__builtin_msa_srli_h
__builtin_msa_srli_w
__builtin_msa_srli_d
__builtin_msa_srlr_b
__builtin_msa_srlr_h
__builtin_msa_srlr_w
__builtin_msa_srlr_d
__builtin_msa_srlri_b
__builtin_msa_srlri_h
__builtin_msa_srlri_w
__builtin_msa_srlri_d
__builtin_msa_st_b
vV16Scv*Ii
__builtin_msa_st_h
vV8Ssv*Ii
__builtin_msa_st_w
vV4Siv*Ii
__builtin_msa_st_d
vV2SLLiv*Ii
__builtin_msa_str_d
__builtin_msa_str_w
__builtin_msa_subs_s_b
__builtin_msa_subs_s_h
__builtin_msa_subs_s_w
__builtin_msa_subs_s_d
__builtin_msa_subs_u_b
__builtin_msa_subs_u_h
__builtin_msa_subs_u_w
__builtin_msa_subs_u_d
__builtin_msa_subsus_u_b
V16UcV16UcV16Sc
__builtin_msa_subsus_u_h
V8UsV8UsV8Ss
__builtin_msa_subsus_u_w
V4UiV4UiV4Si
__builtin_msa_subsus_u_d
V2ULLiV2ULLiV2SLLi
__builtin_msa_subsuu_s_b
__builtin_msa_subsuu_s_h
__builtin_msa_subsuu_s_w
__builtin_msa_subsuu_s_d
__builtin_msa_subv_b
__builtin_msa_subv_h
__builtin_msa_subv_w
__builtin_msa_subv_d
__builtin_msa_subvi_b
__builtin_msa_subvi_h
__builtin_msa_subvi_w
__builtin_msa_subvi_d
__builtin_msa_vshf_b
V16cV16cV16cV16c
__builtin_msa_vshf_h
V8sV8sV8sV8s
__builtin_msa_vshf_w
V4iV4iV4iV4i
__builtin_msa_vshf_d
V2LLiV2LLiV2LLiV2LLi
__builtin_msa_xor_v
__builtin_msa_xori_b
mips3
mips4
mips5
MIPSEB
_MIPSEB
MIPSEL
_MIPSEL
__mips__
_mips
__mips
_MIPS_ISA
_MIPS_ISA_MIPS32
__mips64
__mips64__
_MIPS_ISA_MIPS64
__mips_isa_rev
__mips_o32
_ABIO32
_MIPS_SIM
__mips_n32
_ABIN32
__mips_n64
_ABI64
__mips_abicalls
__ABICALLS__
__mips_hard_float
__mips_soft_float
__mips_single_float
__mips_fpr
_MIPS_FPSET
__mips16
__mips_micromips
__mips_nan2008
__mips_abs2008
__mips_dsp_rev
__mips_dsp
__mips_dspr2
__mips_msa
__mips_no_madd4
_MIPS_SZPTR
_MIPS_SZINT
_MIPS_SZLONG
_MIPS_ARCH
_MIPS_ARCH_OCTEONP
_MIPS_ARCH_
__OCTEON__
-mfp32
mips2
-mfp64
__nvvm_read_ptx_sreg_tid_x
__nvvm_read_ptx_sreg_tid_y
__nvvm_read_ptx_sreg_tid_z
__nvvm_read_ptx_sreg_tid_w
__nvvm_read_ptx_sreg_ntid_x
__nvvm_read_ptx_sreg_ntid_y
__nvvm_read_ptx_sreg_ntid_z
__nvvm_read_ptx_sreg_ntid_w
__nvvm_read_ptx_sreg_ctaid_x
__nvvm_read_ptx_sreg_ctaid_y
__nvvm_read_ptx_sreg_ctaid_z
__nvvm_read_ptx_sreg_ctaid_w
__nvvm_read_ptx_sreg_nctaid_x
__nvvm_read_ptx_sreg_nctaid_y
__nvvm_read_ptx_sreg_nctaid_z
__nvvm_read_ptx_sreg_nctaid_w
__nvvm_read_ptx_sreg_laneid
__nvvm_read_ptx_sreg_warpid
__nvvm_read_ptx_sreg_nwarpid
__nvvm_read_ptx_sreg_smid
__nvvm_read_ptx_sreg_nsmid
__nvvm_read_ptx_sreg_gridid
__nvvm_read_ptx_sreg_lanemask_eq
__nvvm_read_ptx_sreg_lanemask_le
__nvvm_read_ptx_sreg_lanemask_lt
__nvvm_read_ptx_sreg_lanemask_ge
__nvvm_read_ptx_sreg_lanemask_gt
__nvvm_read_ptx_sreg_clock
__nvvm_read_ptx_sreg_clock64
__nvvm_read_ptx_sreg_pm0
__nvvm_read_ptx_sreg_pm1
__nvvm_read_ptx_sreg_pm2
__nvvm_read_ptx_sreg_pm3
__nvvm_prmt
__nvvm_fmax_ftz_f
__nvvm_fmax_f
__nvvm_fmin_ftz_f
__nvvm_fmin_f
__nvvm_fmax_d
__nvvm_fmin_d
__nvvm_mulhi_i
__nvvm_mulhi_ui
__nvvm_mulhi_ll
__nvvm_mulhi_ull
__nvvm_mul_rn_ftz_f
__nvvm_mul_rn_f
__nvvm_mul_rz_ftz_f
__nvvm_mul_rz_f
__nvvm_mul_rm_ftz_f
__nvvm_mul_rm_f
__nvvm_mul_rp_ftz_f
__nvvm_mul_rp_f
__nvvm_mul_rn_d
__nvvm_mul_rz_d
__nvvm_mul_rm_d
__nvvm_mul_rp_d
__nvvm_mul24_i
__nvvm_mul24_ui
__nvvm_div_approx_ftz_f
__nvvm_div_approx_f
__nvvm_div_rn_ftz_f
__nvvm_div_rn_f
__nvvm_div_rz_ftz_f
__nvvm_div_rz_f
__nvvm_div_rm_ftz_f
__nvvm_div_rm_f
__nvvm_div_rp_ftz_f
__nvvm_div_rp_f
__nvvm_div_rn_d
__nvvm_div_rz_d
__nvvm_div_rm_d
__nvvm_div_rp_d
__nvvm_sad_i
__nvvm_sad_ui
__nvvm_floor_ftz_f
__nvvm_floor_f
__nvvm_floor_d
__nvvm_ceil_ftz_f
__nvvm_ceil_f
__nvvm_ceil_d
__nvvm_fabs_ftz_f
__nvvm_fabs_f
__nvvm_fabs_d
__nvvm_round_ftz_f
__nvvm_round_f
__nvvm_round_d
__nvvm_trunc_ftz_f
__nvvm_trunc_f
__nvvm_trunc_d
__nvvm_saturate_ftz_f
__nvvm_saturate_f
__nvvm_saturate_d
__nvvm_ex2_approx_ftz_f
__nvvm_ex2_approx_f
__nvvm_ex2_approx_d
__nvvm_lg2_approx_ftz_f
__nvvm_lg2_approx_f
__nvvm_lg2_approx_d
__nvvm_sin_approx_ftz_f
__nvvm_sin_approx_f
__nvvm_cos_approx_ftz_f
__nvvm_cos_approx_f
__nvvm_fma_rn_ftz_f
__nvvm_fma_rn_f
__nvvm_fma_rz_ftz_f
__nvvm_fma_rz_f
__nvvm_fma_rm_ftz_f
__nvvm_fma_rm_f
__nvvm_fma_rp_ftz_f
__nvvm_fma_rp_f
__nvvm_fma_rn_d
__nvvm_fma_rz_d
__nvvm_fma_rm_d
__nvvm_fma_rp_d
__nvvm_rcp_rn_ftz_f
__nvvm_rcp_rn_f
__nvvm_rcp_rz_ftz_f
__nvvm_rcp_rz_f
__nvvm_rcp_rm_ftz_f
__nvvm_rcp_rm_f
__nvvm_rcp_rp_ftz_f
__nvvm_rcp_rp_f
__nvvm_rcp_rn_d
__nvvm_rcp_rz_d
__nvvm_rcp_rm_d
__nvvm_rcp_rp_d
__nvvm_rcp_approx_ftz_d
__nvvm_sqrt_rn_ftz_f
__nvvm_sqrt_rn_f
__nvvm_sqrt_rz_ftz_f
__nvvm_sqrt_rz_f
__nvvm_sqrt_rm_ftz_f
__nvvm_sqrt_rm_f
__nvvm_sqrt_rp_ftz_f
__nvvm_sqrt_rp_f
__nvvm_sqrt_approx_ftz_f
__nvvm_sqrt_approx_f
__nvvm_sqrt_rn_d
__nvvm_sqrt_rz_d
__nvvm_sqrt_rm_d
__nvvm_sqrt_rp_d
__nvvm_rsqrt_approx_ftz_f
__nvvm_rsqrt_approx_f
__nvvm_rsqrt_approx_d
__nvvm_add_rn_ftz_f
__nvvm_add_rn_f
__nvvm_add_rz_ftz_f
__nvvm_add_rz_f
__nvvm_add_rm_ftz_f
__nvvm_add_rm_f
__nvvm_add_rp_ftz_f
__nvvm_add_rp_f
__nvvm_add_rn_d
__nvvm_add_rz_d
__nvvm_add_rm_d
__nvvm_add_rp_d
__nvvm_d2f_rn_ftz
__nvvm_d2f_rn
__nvvm_d2f_rz_ftz
__nvvm_d2f_rz
__nvvm_d2f_rm_ftz
__nvvm_d2f_rm
__nvvm_d2f_rp_ftz
__nvvm_d2f_rp
__nvvm_d2i_rn
__nvvm_d2i_rz
__nvvm_d2i_rm
__nvvm_d2i_rp
__nvvm_d2ui_rn
__nvvm_d2ui_rz
__nvvm_d2ui_rm
__nvvm_d2ui_rp
__nvvm_i2d_rn
__nvvm_i2d_rz
__nvvm_i2d_rm
__nvvm_i2d_rp
__nvvm_ui2d_rn
__nvvm_ui2d_rz
__nvvm_ui2d_rm
__nvvm_ui2d_rp
__nvvm_f2i_rn_ftz
__nvvm_f2i_rn
__nvvm_f2i_rz_ftz
__nvvm_f2i_rz
__nvvm_f2i_rm_ftz
__nvvm_f2i_rm
__nvvm_f2i_rp_ftz
__nvvm_f2i_rp
__nvvm_f2ui_rn_ftz
__nvvm_f2ui_rn
__nvvm_f2ui_rz_ftz
__nvvm_f2ui_rz
__nvvm_f2ui_rm_ftz
__nvvm_f2ui_rm
__nvvm_f2ui_rp_ftz
__nvvm_f2ui_rp
__nvvm_i2f_rn
__nvvm_i2f_rz
__nvvm_i2f_rm
__nvvm_i2f_rp
__nvvm_ui2f_rn
__nvvm_ui2f_rz
__nvvm_ui2f_rm
__nvvm_ui2f_rp
__nvvm_lohi_i2d
__nvvm_d2i_lo
__nvvm_d2i_hi
__nvvm_f2ll_rn_ftz
__nvvm_f2ll_rn
__nvvm_f2ll_rz_ftz
__nvvm_f2ll_rz
__nvvm_f2ll_rm_ftz
__nvvm_f2ll_rm
__nvvm_f2ll_rp_ftz
__nvvm_f2ll_rp
__nvvm_f2ull_rn_ftz
ULLif
__nvvm_f2ull_rn
__nvvm_f2ull_rz_ftz
__nvvm_f2ull_rz
__nvvm_f2ull_rm_ftz
__nvvm_f2ull_rm
__nvvm_f2ull_rp_ftz
__nvvm_f2ull_rp
__nvvm_d2ll_rn
__nvvm_d2ll_rz
__nvvm_d2ll_rm
__nvvm_d2ll_rp
__nvvm_d2ull_rn
ULLid
__nvvm_d2ull_rz
__nvvm_d2ull_rm
__nvvm_d2ull_rp
__nvvm_ll2f_rn
__nvvm_ll2f_rz
__nvvm_ll2f_rm
__nvvm_ll2f_rp
__nvvm_ull2f_rn
fULLi
__nvvm_ull2f_rz
__nvvm_ull2f_rm
__nvvm_ull2f_rp
__nvvm_ll2d_rn
__nvvm_ll2d_rz
__nvvm_ll2d_rm
__nvvm_ll2d_rp
__nvvm_ull2d_rn
dULLi
__nvvm_ull2d_rz
__nvvm_ull2d_rm
__nvvm_ull2d_rp
__nvvm_f2h_rn_ftz
__nvvm_f2h_rn
__nvvm_bitcast_f2i
__nvvm_bitcast_i2f
__nvvm_bitcast_ll2d
__nvvm_bitcast_d2ll
__nvvm_fns
UiUiUii
ptx60|ptx61|ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74
__syncthreads
__nvvm_bar0_popc
__nvvm_bar0_and
__nvvm_bar0_or
__nvvm_bar_sync
__nvvm_bar_warp_sync
__nvvm_barrier_sync
__nvvm_barrier_sync_cnt
__nvvm_shfl_down_i32
__nvvm_shfl_down_f32
ffii
__nvvm_shfl_up_i32
__nvvm_shfl_up_f32
__nvvm_shfl_bfly_i32
__nvvm_shfl_bfly_f32
__nvvm_shfl_idx_i32
__nvvm_shfl_idx_f32
__nvvm_shfl_sync_down_i32
iUiiii
__nvvm_shfl_sync_down_f32
fUifii
__nvvm_shfl_sync_up_i32
__nvvm_shfl_sync_up_f32
__nvvm_shfl_sync_bfly_i32
__nvvm_shfl_sync_bfly_f32
__nvvm_shfl_sync_idx_i32
__nvvm_shfl_sync_idx_f32
__nvvm_vote_all
__nvvm_vote_any
__nvvm_vote_uni
__nvvm_vote_ballot
__nvvm_vote_all_sync
bUib
__nvvm_vote_any_sync
__nvvm_vote_uni_sync
__nvvm_vote_ballot_sync
UiUib
__nvvm_match_any_sync_i32
__nvvm_match_any_sync_i64
WiUiWi
__nvvm_match_all_sync_i32p
UiUiUii*
__nvvm_match_all_sync_i64p
WiUiWii*
__nvvm_redux_sync_add
(sm_80|sm_86),(ptx70|ptx71|ptx72|ptx73|ptx74)
__nvvm_redux_sync_min
__nvvm_redux_sync_max
__nvvm_redux_sync_umin
__nvvm_redux_sync_umax
__nvvm_redux_sync_and
__nvvm_redux_sync_xor
__nvvm_redux_sync_or
__nvvm_membar_cta
__nvvm_membar_gl
__nvvm_membar_sys
__nvvm_mbarrier_init
vWi*i
__nvvm_mbarrier_init_shared
vWi*3i
__nvvm_mbarrier_inval
vWi*
__nvvm_mbarrier_inval_shared
vWi*3
__nvvm_mbarrier_arrive
WiWi*
__nvvm_mbarrier_arrive_shared
WiWi*3
__nvvm_mbarrier_arrive_noComplete
WiWi*i
__nvvm_mbarrier_arrive_noComplete_shared
WiWi*3i
__nvvm_mbarrier_arrive_drop
__nvvm_mbarrier_arrive_drop_shared
__nvvm_mbarrier_arrive_drop_noComplete
__nvvm_mbarrier_arrive_drop_noComplete_shared
__nvvm_mbarrier_test_wait
bWi*Wi
__nvvm_mbarrier_test_wait_shared
bWi*3Wi
__nvvm_mbarrier_pending_count
__nvvm_memcpy
vUc*Uc*zi
__nvvm_memset
vUc*Uczi
__builtin_ptx_read_image2Dfi_
V4fiiii
__builtin_ptx_read_image2Dff_
V4fiiff
__builtin_ptx_read_image2Dii_
V4iiiii
__builtin_ptx_read_image2Dif_
V4iiiff
__builtin_ptx_read_image3Dfi_
V4fiiiiii
__builtin_ptx_read_image3Dff_
V4fiiffff
__builtin_ptx_read_image3Dii_
V4iiiiiii
__builtin_ptx_read_image3Dif_
V4iiiffff
__builtin_ptx_write_image2Df_
viiiffff
__builtin_ptx_write_image2Di_
viiiiiii
__builtin_ptx_write_image2Dui_
viiiUiUiUiUi
__builtin_ptx_get_image_depthi_
__builtin_ptx_get_image_heighti_
__builtin_ptx_get_image_widthi_
__builtin_ptx_get_image_channel_data_typei_
__builtin_ptx_get_image_channel_orderi_
__nvvm_atom_add_gen_i
iiD*i
__nvvm_atom_cta_add_gen_i
sm_60|sm_61|sm_62|sm_70|sm_72|sm_75|sm_80|sm_86
__nvvm_atom_sys_add_gen_i
__nvvm_atom_add_gen_l
LiLiD*Li
__nvvm_atom_cta_add_gen_l
__nvvm_atom_sys_add_gen_l
__nvvm_atom_add_gen_ll
__nvvm_atom_cta_add_gen_ll
__nvvm_atom_sys_add_gen_ll
__nvvm_atom_add_gen_f
ffD*f
__nvvm_atom_cta_add_gen_f
__nvvm_atom_sys_add_gen_f
__nvvm_atom_add_gen_d
ddD*d
__nvvm_atom_cta_add_gen_d
__nvvm_atom_sys_add_gen_d
__nvvm_atom_sub_gen_i
__nvvm_atom_sub_gen_l
__nvvm_atom_sub_gen_ll
__nvvm_atom_xchg_gen_i
__nvvm_atom_cta_xchg_gen_i
__nvvm_atom_sys_xchg_gen_i
__nvvm_atom_xchg_gen_l
__nvvm_atom_cta_xchg_gen_l
__nvvm_atom_sys_xchg_gen_l
__nvvm_atom_xchg_gen_ll
__nvvm_atom_cta_xchg_gen_ll
__nvvm_atom_sys_xchg_gen_ll
__nvvm_atom_max_gen_i
__nvvm_atom_cta_max_gen_i
__nvvm_atom_sys_max_gen_i
__nvvm_atom_max_gen_ui
UiUiD*Ui
__nvvm_atom_cta_max_gen_ui
__nvvm_atom_sys_max_gen_ui
__nvvm_atom_max_gen_l
__nvvm_atom_cta_max_gen_l
__nvvm_atom_sys_max_gen_l
__nvvm_atom_max_gen_ul
ULiULiD*ULi
__nvvm_atom_cta_max_gen_ul
__nvvm_atom_sys_max_gen_ul
__nvvm_atom_max_gen_ll
__nvvm_atom_cta_max_gen_ll
__nvvm_atom_sys_max_gen_ll
__nvvm_atom_max_gen_ull
ULLiULLiD*ULLi
__nvvm_atom_cta_max_gen_ull
__nvvm_atom_sys_max_gen_ull
__nvvm_atom_min_gen_i
__nvvm_atom_cta_min_gen_i
__nvvm_atom_sys_min_gen_i
__nvvm_atom_min_gen_ui
__nvvm_atom_cta_min_gen_ui
__nvvm_atom_sys_min_gen_ui
__nvvm_atom_min_gen_l
__nvvm_atom_cta_min_gen_l
__nvvm_atom_sys_min_gen_l
__nvvm_atom_min_gen_ul
__nvvm_atom_cta_min_gen_ul
__nvvm_atom_sys_min_gen_ul
__nvvm_atom_min_gen_ll
__nvvm_atom_cta_min_gen_ll
__nvvm_atom_sys_min_gen_ll
__nvvm_atom_min_gen_ull
__nvvm_atom_cta_min_gen_ull
__nvvm_atom_sys_min_gen_ull
__nvvm_atom_inc_gen_ui
__nvvm_atom_cta_inc_gen_ui
__nvvm_atom_sys_inc_gen_ui
__nvvm_atom_dec_gen_ui
__nvvm_atom_cta_dec_gen_ui
__nvvm_atom_sys_dec_gen_ui
__nvvm_atom_and_gen_i
__nvvm_atom_cta_and_gen_i
__nvvm_atom_sys_and_gen_i
__nvvm_atom_and_gen_l
__nvvm_atom_cta_and_gen_l
__nvvm_atom_sys_and_gen_l
__nvvm_atom_and_gen_ll
__nvvm_atom_cta_and_gen_ll
__nvvm_atom_sys_and_gen_ll
__nvvm_atom_or_gen_i
__nvvm_atom_cta_or_gen_i
__nvvm_atom_sys_or_gen_i
__nvvm_atom_or_gen_l
__nvvm_atom_cta_or_gen_l
__nvvm_atom_sys_or_gen_l
__nvvm_atom_or_gen_ll
__nvvm_atom_cta_or_gen_ll
__nvvm_atom_sys_or_gen_ll
__nvvm_atom_xor_gen_i
__nvvm_atom_cta_xor_gen_i
__nvvm_atom_sys_xor_gen_i
__nvvm_atom_xor_gen_l
__nvvm_atom_cta_xor_gen_l
__nvvm_atom_sys_xor_gen_l
__nvvm_atom_xor_gen_ll
__nvvm_atom_cta_xor_gen_ll
__nvvm_atom_sys_xor_gen_ll
__nvvm_atom_cas_gen_i
iiD*ii
__nvvm_atom_cta_cas_gen_i
__nvvm_atom_sys_cas_gen_i
__nvvm_atom_cas_gen_l
LiLiD*LiLi
__nvvm_atom_cta_cas_gen_l
__nvvm_atom_sys_cas_gen_l
__nvvm_atom_cas_gen_ll
__nvvm_atom_cta_cas_gen_ll
__nvvm_atom_sys_cas_gen_ll
__nvvm_compiler_error
vcC*4
__nvvm_compiler_warn
__nvvm_ldg_c
ccC*
__nvvm_ldg_s
ssC*
__nvvm_ldg_i
iiC*
__nvvm_ldg_l
LiLiC*
__nvvm_ldg_ll
LLiLLiC*
__nvvm_ldg_uc
UcUcC*
__nvvm_ldg_us
UsUsC*
__nvvm_ldg_ui
UiUiC*
__nvvm_ldg_ul
ULiULiC*
__nvvm_ldg_ull
ULLiULLiC*
__nvvm_ldg_f
ffC*
__nvvm_ldg_d
ddC*
__nvvm_ldg_c2
E2cE2cC*
__nvvm_ldg_c4
E4cE4cC*
__nvvm_ldg_s2
E2sE2sC*
__nvvm_ldg_s4
E4sE4sC*
__nvvm_ldg_i2
E2iE2iC*
__nvvm_ldg_i4
E4iE4iC*
__nvvm_ldg_ll2
E2LLiE2LLiC*
__nvvm_ldg_uc2
E2UcE2UcC*
__nvvm_ldg_uc4
E4UcE4UcC*
__nvvm_ldg_us2
E2UsE2UsC*
__nvvm_ldg_us4
E4UsE4UsC*
__nvvm_ldg_ui2
E2UiE2UiC*
__nvvm_ldg_ui4
E4UiE4UiC*
__nvvm_ldg_ull2
E2ULLiE2ULLiC*
__nvvm_ldg_f2
E2fE2fC*
__nvvm_ldg_f4
E4fE4fC*
__nvvm_ldg_d2
E2dE2dC*
__nvvm_isspacep_const
bvC*
__nvvm_isspacep_global
__nvvm_isspacep_local
__nvvm_isspacep_shared
__hmma_m16n16k16_ld_a
vi*iC*UiIi
(sm_70|sm_72|sm_75|sm_80|sm_86),(ptx60|ptx61|ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74)
__hmma_m16n16k16_ld_b
__hmma_m16n16k16_ld_c_f16
__hmma_m16n16k16_ld_c_f32
vf*fC*UiIi
__hmma_m16n16k16_st_c_f16
vi*i*UiIi
__hmma_m16n16k16_st_c_f32
vf*f*UiIi
__hmma_m32n8k16_ld_a
(sm_70|sm_72|sm_75|sm_80|sm_86),(ptx61|ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74)
__hmma_m32n8k16_ld_b
__hmma_m32n8k16_ld_c_f16
__hmma_m32n8k16_ld_c_f32
__hmma_m32n8k16_st_c_f16
__hmma_m32n8k16_st_c_f32
__hmma_m8n32k16_ld_a
__hmma_m8n32k16_ld_b
__hmma_m8n32k16_ld_c_f16
__hmma_m8n32k16_ld_c_f32
__hmma_m8n32k16_st_c_f16
__hmma_m8n32k16_st_c_f32
__hmma_m16n16k16_mma_f16f16
vi*iC*iC*iC*IiIi
__hmma_m16n16k16_mma_f32f16
vf*iC*iC*iC*IiIi
__hmma_m16n16k16_mma_f32f32
vf*iC*iC*fC*IiIi
__hmma_m16n16k16_mma_f16f32
vi*iC*iC*fC*IiIi
__hmma_m32n8k16_mma_f16f16
__hmma_m32n8k16_mma_f32f16
__hmma_m32n8k16_mma_f32f32
__hmma_m32n8k16_mma_f16f32
__hmma_m8n32k16_mma_f16f16
__hmma_m8n32k16_mma_f32f16
__hmma_m8n32k16_mma_f32f32
__hmma_m8n32k16_mma_f16f32
__bmma_m8n8k128_ld_a_b1
(sm_75|sm_80|sm_86),(ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74)
__bmma_m8n8k128_ld_b_b1
__bmma_m8n8k128_ld_c
__bmma_m8n8k128_mma_and_popc_b1
vi*iC*iC*iC*Ii
(sm_75|sm_80|sm_86),(ptx71|ptx72|ptx73|ptx74)
__bmma_m8n8k128_mma_xor_popc_b1
__bmma_m8n8k128_st_c_i32
__imma_m16n16k16_ld_a_s8
(sm_72|sm_75|sm_80|sm_86),(ptx63|ptx64|ptx65|ptx70|ptx71|ptx72|ptx73|ptx74)
__imma_m16n16k16_ld_a_u8
__imma_m16n16k16_ld_b_s8
__imma_m16n16k16_ld_b_u8
__imma_m16n16k16_ld_c
__imma_m16n16k16_mma_s8
__imma_m16n16k16_mma_u8
__imma_m16n16k16_st_c_i32
__imma_m32n8k16_ld_a_s8
__imma_m32n8k16_ld_a_u8
__imma_m32n8k16_ld_b_s8
__imma_m32n8k16_ld_b_u8
__imma_m32n8k16_ld_c
__imma_m32n8k16_mma_s8
__imma_m32n8k16_mma_u8
__imma_m32n8k16_st_c_i32
__imma_m8n32k16_ld_a_s8
__imma_m8n32k16_ld_a_u8
__imma_m8n32k16_ld_b_s8
__imma_m8n32k16_ld_b_u8
__imma_m8n32k16_ld_c
__imma_m8n32k16_mma_s8
__imma_m8n32k16_mma_u8
__imma_m8n32k16_st_c_i32
__imma_m8n8k32_ld_a_s4
__imma_m8n8k32_ld_a_u4
__imma_m8n8k32_ld_b_s4
__imma_m8n8k32_ld_b_u4
__imma_m8n8k32_ld_c
__imma_m8n8k32_mma_s4
__imma_m8n8k32_mma_u4
__imma_m8n8k32_st_c_i32
__dmma_m8n8k4_ld_a
vd*dC*UiIi
__dmma_m8n8k4_ld_b
__dmma_m8n8k4_ld_c
__dmma_m8n8k4_st_c_f64
__dmma_m8n8k4_mma_f64
vd*dC*dC*dC*IiIi
__mma_bf16_m16n16k16_ld_a
__mma_bf16_m16n16k16_ld_b
__mma_bf16_m16n16k16_mma_f32
__mma_bf16_m8n32k16_ld_a
__mma_bf16_m8n32k16_ld_b
__mma_bf16_m8n32k16_mma_f32
__mma_bf16_m32n8k16_ld_a
__mma_bf16_m32n8k16_ld_b
__mma_bf16_m32n8k16_mma_f32
__mma_tf32_m16n16k8_ld_a
__mma_tf32_m16n16k8_ld_b
__mma_tf32_m16n16k8_ld_c
__mma_m16n16k8_st_c_f32
__mma_tf32_m16n16k8_mma_f32
__nvvm_cp_async_mbarrier_arrive
__nvvm_cp_async_mbarrier_arrive_shared
__nvvm_cp_async_mbarrier_arrive_noinc
__nvvm_cp_async_mbarrier_arrive_noinc_shared
__nvvm_cp_async_ca_shared_global_4
vv*3vC*1
__nvvm_cp_async_ca_shared_global_8
__nvvm_cp_async_ca_shared_global_16
__nvvm_cp_async_cg_shared_global_16
__nvvm_cp_async_commit_group
__nvvm_cp_async_wait_group
__nvvm_cp_async_wait_all
e-p:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64
e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64
e-i64:64-i128:128-v16:16-v32:32-n16:32:64
__PTX__
__NVPTX__
__APPLE_CC__
6000
__APPLE__
__PTRAUTH_INTRINSICS__
__ptrauth_abi_version__
__STATIC__
__DYNAMIC__
__ENVIRONMENT_TV_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_WATCH_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_BRIDGE_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_DRIVERKIT_VERSION_MIN_REQUIRED__
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
__ENVIRONMENT_OS_VERSION_MIN_REQUIRED__
__APPLE_SEPOS__
_WIN32
_WIN64
WIN32
WINNT
WIN64
__MINGW64__
__MSVCRT__
__MINGW32__
_CPPRTTI
_CPPUNWIND
__BOOL_DEFINED
_CHAR_UNSIGNED
_MSC_VER
_MSC_FULL_VER
_MSC_BUILD
_HAS_CHAR16_T_LANGUAGE_SUPPORT
_MSVC_LANG
201705L
_MSC_EXTENSIONS
_RVALUE_REFERENCES_V2_SUPPORTED
_RVALUE_REFERENCES_SUPPORTED
_NATIVE_NULLPTR_SUPPORTED
_INTEGRAL_MAX_BITS
__le32__
__pnacl__
__builtin_ppc_popcntb
ULiULi
__builtin_ppc_poppar4
__builtin_ppc_poppar8
iULLi
__builtin_ppc_eieio
__builtin_ppc_iospace_eieio
__builtin_ppc_isync
__builtin_ppc_lwsync
__builtin_ppc_iospace_lwsync
__builtin_ppc_sync
__builtin_ppc_iospace_sync
__builtin_ppc_dcbfl
vvC*
__builtin_ppc_dcbflp
__builtin_ppc_dcbst
__builtin_ppc_dcbt
__builtin_ppc_dcbtst
__builtin_ppc_dcbz
__builtin_ppc_icbt
__builtin_ppc_fric
__builtin_ppc_frim
__builtin_ppc_frims
__builtin_ppc_frin
__builtin_ppc_frins
__builtin_ppc_frip
__builtin_ppc_frips
__builtin_ppc_friz
__builtin_ppc_frizs
__builtin_ppc_fsel
__builtin_ppc_fsels
__builtin_ppc_frsqrte
__builtin_ppc_frsqrtes
__builtin_ppc_fsqrt
__builtin_ppc_fsqrts
__builtin_ppc_compare_and_swap
iiD*i*i
__builtin_ppc_compare_and_swaplp
iLiD*Li*Li
__builtin_ppc_fetch_and_add
__builtin_ppc_fetch_and_addlp
__builtin_ppc_fetch_and_and
__builtin_ppc_fetch_and_andlp
__builtin_ppc_fetch_and_or
__builtin_ppc_fetch_and_orlp
__builtin_ppc_fetch_and_swap
__builtin_ppc_fetch_and_swaplp
__builtin_ppc_ldarx
LiLiD*
__builtin_ppc_lwarx
iiD*
__builtin_ppc_lharx
__builtin_ppc_lbarx
ccD*
__builtin_ppc_stdcx
iLiD*Li
__builtin_ppc_stwcx
__builtin_ppc_sthcx
isD*s
__builtin_ppc_stbcx
icD*i
__builtin_ppc_tdw
vLLiLLiIUi
__builtin_ppc_tw
viiIUi
__builtin_ppc_trap
__builtin_ppc_trapd
__builtin_ppc_fcfid
__builtin_ppc_fcfud
__builtin_ppc_fctid
__builtin_ppc_fctidz
__builtin_ppc_fctiw
__builtin_ppc_fctiwz
__builtin_ppc_fctudz
__builtin_ppc_fctuwz
__builtin_ppc_swdiv_nochk
__builtin_ppc_swdivs_nochk
__builtin_ppc_alignx
vIivC*
__builtin_ppc_rdlam
UWiUWiUWiUWIi
__builtin_ppc_compare_exp_uo
__builtin_ppc_compare_exp_lt
__builtin_ppc_compare_exp_gt
__builtin_ppc_compare_exp_eq
__builtin_ppc_test_data_class
idIi
__builtin_ppc_swdiv
__builtin_ppc_swdivs
__builtin_ppc_cmpeqb
__builtin_ppc_cmprb
iCIiii
__builtin_ppc_setb
__builtin_ppc_cmpb
__builtin_ppc_mulhd
LLiLiLi
__builtin_ppc_mulhdu
ULLiULiULi
__builtin_ppc_mulhw
__builtin_ppc_mulhwu
__builtin_ppc_maddhd
__builtin_ppc_maddhdu
ULLiULLiULLiULLi
__builtin_ppc_maddld
__builtin_ppc_rlwnm
UiUiUiIUi
__builtin_ppc_rlwimi
UiUiUiIUiIUi
__builtin_ppc_rldimi
ULLiULLiULLiIUiIULLi
__builtin_ppc_load2r
UsUs*
__builtin_ppc_load4r
UiUi*
__builtin_ppc_load8r
ULLiULLi*
__builtin_ppc_store2r
vUiUs*
__builtin_ppc_store4r
vUiUi*
__builtin_ppc_store8r
vULLiULLi*
__builtin_ppc_extract_exp
__builtin_ppc_extract_sig
__builtin_ppc_mtfsb0
vUIi
__builtin_ppc_mtfsb1
__builtin_ppc_mtfsf
vUIiUi
__builtin_ppc_mtfsfi
vUIiUIi
__builtin_ppc_insert_exp
ddULLi
__builtin_ppc_fmsub
__builtin_ppc_fmsubs
__builtin_ppc_fnmadd
__builtin_ppc_fnmadds
__builtin_ppc_fnmsub
__builtin_ppc_fnmsubs
__builtin_ppc_fre
__builtin_ppc_fres
__builtin_ppc_dcbtstt
__builtin_ppc_dcbtt
__builtin_ppc_mftbu
__builtin_ppc_mfmsr
__builtin_ppc_mfspr
ULiIi
__builtin_ppc_mtmsr
__builtin_ppc_mtspr
vIiULi
__builtin_ppc_stfiw
viC*d
__builtin_ppc_addex
LLiLLiLLiCIi
__builtin_ppc_get_timebase
ULLi
__builtin_altivec_vaddcuw
__builtin_altivec_vaddsbs
__builtin_altivec_vaddubs
__builtin_altivec_vaddshs
__builtin_altivec_vadduhs
__builtin_altivec_vaddsws
__builtin_altivec_vadduws
__builtin_altivec_vaddeuqm
V1ULLLiV1ULLLiV1ULLLiV1ULLLi
__builtin_altivec_vaddcuq
V1ULLLiV1ULLLiV1ULLLi
__builtin_altivec_vaddecuq
__builtin_altivec_vadduqm
V1ULLLiV16UcV16Uc
__builtin_altivec_vsubsbs
__builtin_altivec_vsububs
__builtin_altivec_vsubshs
__builtin_altivec_vsubuhs
__builtin_altivec_vsubsws
__builtin_altivec_vsubuws
__builtin_altivec_vsubeuqm
__builtin_altivec_vsubcuq
__builtin_altivec_vsubecuq
__builtin_altivec_vsubuqm
__builtin_altivec_vavgsb
__builtin_altivec_vavgub
__builtin_altivec_vavgsh
__builtin_altivec_vavguh
__builtin_altivec_vavgsw
__builtin_altivec_vavguw
__builtin_altivec_vrfip
__builtin_altivec_vcfsx
V4fV4SiIi
__builtin_altivec_vcfux
V4fV4UiIi
__builtin_altivec_vctsxs
V4SiV4fIi
__builtin_altivec_vctuxs
V4UiV4fIi
__builtin_altivec_dss
__builtin_altivec_dssall
__builtin_altivec_dst
vvC*iUIi
__builtin_altivec_dstt
__builtin_altivec_dstst
__builtin_altivec_dststt
__builtin_altivec_vexptefp
__builtin_altivec_vrfim
__builtin_altivec_lvx
V4iLivC*
__builtin_altivec_lvxl
__builtin_altivec_lvebx
V16cLivC*
__builtin_altivec_lvehx
V8sLivC*
__builtin_altivec_lvewx
__builtin_altivec_vlogefp
__builtin_altivec_lvsl
V16cUcvC*
__builtin_altivec_lvsr
__builtin_altivec_vmaddfp
__builtin_altivec_vmhaddshs
__builtin_altivec_vmhraddshs
__builtin_altivec_vmsumubm
V4UiV16UcV16UcV4Ui
__builtin_altivec_vmsummbm
V4SiV16ScV16UcV4Si
__builtin_altivec_vmsumuhm
V4UiV8UsV8UsV4Ui
__builtin_altivec_vmsumshm
V4SiV8SsV8SsV4Si
__builtin_altivec_vmsumuhs
__builtin_altivec_vmsumshs
__builtin_altivec_vmuleub
__builtin_altivec_vmulesb
__builtin_altivec_vmuleuh
__builtin_altivec_vmulesh
__builtin_altivec_vmuleuw
__builtin_altivec_vmulesw
__builtin_altivec_vmuloub
__builtin_altivec_vmulosb
__builtin_altivec_vmulouh
__builtin_altivec_vmulosh
__builtin_altivec_vmulouw
__builtin_altivec_vmulosw
__builtin_altivec_vmuleud
V1ULLLiV2ULLiV2ULLi
__builtin_altivec_vmulesd
V1SLLLiV2SLLiV2SLLi
__builtin_altivec_vmuloud
__builtin_altivec_vmulosd
__builtin_altivec_vmsumcud
V1ULLLiV2ULLiV2ULLiV1ULLLi
__builtin_altivec_vnmsubfp
__builtin_altivec_vpkpx
V8sV4UiV4Ui
__builtin_altivec_vpkuhus
V16UcV8UsV8Us
__builtin_altivec_vpkshss
V16ScV8SsV8Ss
__builtin_altivec_vpkuwus
V8UsV4UiV4Ui
__builtin_altivec_vpkswss
V8SsV4SiV4Si
__builtin_altivec_vpkshus
V16UcV8SsV8Ss
__builtin_altivec_vpkswus
V8UsV4SiV4Si
__builtin_altivec_vpksdss
V4SiV2SLLiV2SLLi
__builtin_altivec_vpksdus
V4UiV2SLLiV2SLLi
__builtin_altivec_vpkudus
V4UiV2ULLiV2ULLi
__builtin_altivec_vpkudum
__builtin_altivec_vperm_4si
V4iV4iV4iV16Uc
__builtin_altivec_stvx
vV4iLiv*
__builtin_altivec_stvxl
__builtin_altivec_stvebx
vV16cLiv*
__builtin_altivec_stvehx
vV8sLiv*
__builtin_altivec_stvewx
__builtin_altivec_vcmpbfp
__builtin_altivec_vcmpgefp
__builtin_altivec_vcmpequb
__builtin_altivec_vcmpequh
__builtin_altivec_vcmpequw
__builtin_altivec_vcmpequd
__builtin_altivec_vcmpeqfp
__builtin_altivec_vcmpneb
__builtin_altivec_vcmpneh
__builtin_altivec_vcmpnew
__builtin_altivec_vcmpnezb
__builtin_altivec_vcmpnezh
__builtin_altivec_vcmpnezw
__builtin_altivec_vcmpgtsb
V16cV16ScV16Sc
__builtin_altivec_vcmpgtub
V16cV16UcV16Uc
__builtin_altivec_vcmpgtsh
V8sV8SsV8Ss
__builtin_altivec_vcmpgtuh
V8sV8UsV8Us
__builtin_altivec_vcmpgtsw
V4iV4SiV4Si
__builtin_altivec_vcmpgtuw
V4iV4UiV4Ui
__builtin_altivec_vcmpgtsd
__builtin_altivec_vcmpgtud
V2LLiV2ULLiV2ULLi
__builtin_altivec_vcmpgtfp
__builtin_altivec_vcmpequq
V1LLLiV1ULLLiV1ULLLi
__builtin_altivec_vcmpgtsq
V1LLLiV1SLLLiV1SLLLi
__builtin_altivec_vcmpgtuq
__builtin_altivec_vcmpequq_p
iiV1ULLLiV1LLLi
__builtin_altivec_vcmpgtsq_p
iiV1SLLLiV1SLLLi
__builtin_altivec_vcmpgtuq_p
iiV1ULLLiV1ULLLi
__builtin_altivec_vmaxsb
__builtin_altivec_vmaxub
__builtin_altivec_vmaxsh
__builtin_altivec_vmaxuh
__builtin_altivec_vmaxsw
__builtin_altivec_vmaxuw
__builtin_altivec_vmaxsd
__builtin_altivec_vmaxud
__builtin_altivec_vmaxfp
__builtin_altivec_mfvscr
V8Us
__builtin_altivec_vminsb
__builtin_altivec_vminub
__builtin_altivec_vminsh
__builtin_altivec_vminuh
__builtin_altivec_vminsw
__builtin_altivec_vminuw
__builtin_altivec_vminsd
__builtin_altivec_vminud
__builtin_altivec_vminfp
__builtin_altivec_mtvscr
vV4i
__builtin_altivec_vrefp
__builtin_altivec_vrlb
V16cV16cV16Uc
__builtin_altivec_vrlh
V8sV8sV8Us
__builtin_altivec_vrlw
V4iV4iV4Ui
__builtin_altivec_vrld
V2LLiV2LLiV2ULLi
__builtin_altivec_vsel_4si
V4iV4iV4iV4Ui
__builtin_altivec_vsl
__builtin_altivec_vslo
__builtin_altivec_vsrab
__builtin_altivec_vsrah
__builtin_altivec_vsraw
__builtin_altivec_vsr
__builtin_altivec_vsro
__builtin_altivec_vrfin
__builtin_altivec_vrsqrtefp
__builtin_altivec_vsubcuw
__builtin_altivec_vsum4sbs
V4SiV16ScV4Si
__builtin_altivec_vsum4ubs
V4UiV16UcV4Ui
__builtin_altivec_vsum4shs
V4SiV8SsV4Si
__builtin_altivec_vsum2sws
__builtin_altivec_vsumsws
__builtin_altivec_vrfiz
__builtin_altivec_vupkhsb
V8sV16c
__builtin_altivec_vupkhpx
V4UiV8s
__builtin_altivec_vupkhsh
V4iV8s
__builtin_altivec_vupkhsw
V2LLiV4i
__builtin_altivec_vupklsb
__builtin_altivec_vupklpx
__builtin_altivec_vupklsh
__builtin_altivec_vupklsw
__builtin_altivec_vcmpbfp_p
iiV4fV4f
__builtin_altivec_vcmpgefp_p
__builtin_altivec_vcmpequb_p
iiV16cV16c
__builtin_altivec_vcmpequh_p
iiV8sV8s
__builtin_altivec_vcmpequw_p
iiV4iV4i
__builtin_altivec_vcmpequd_p
iiV2LLiV2LLi
__builtin_altivec_vcmpeqfp_p
__builtin_altivec_vcmpneb_p
__builtin_altivec_vcmpneh_p
__builtin_altivec_vcmpnew_p
__builtin_altivec_vcmpned_p
__builtin_altivec_vcmpgtsb_p
iiV16ScV16Sc
__builtin_altivec_vcmpgtub_p
iiV16UcV16Uc
__builtin_altivec_vcmpgtsh_p
iiV8SsV8Ss
__builtin_altivec_vcmpgtuh_p
iiV8UsV8Us
__builtin_altivec_vcmpgtsw_p
iiV4SiV4Si
__builtin_altivec_vcmpgtuw_p
iiV4UiV4Ui
__builtin_altivec_vcmpgtsd_p
__builtin_altivec_vcmpgtud_p
iiV2ULLiV2ULLi
__builtin_altivec_vcmpgtfp_p
__builtin_altivec_vgbbd
V16UcV16Uc
__builtin_altivec_vbpermq
V2ULLiV16UcV16Uc
__builtin_altivec_vbpermd
V2ULLiV2ULLiV16Uc
__builtin_altivec_crypto_vsbox
V2ULLiV2ULLi
__builtin_altivec_crypto_vpermxor
__builtin_altivec_crypto_vshasigmaw
V4UiV4UiIiIi
__builtin_altivec_crypto_vshasigmad
V2ULLiV2ULLiIiIi
__builtin_altivec_crypto_vcipher
__builtin_altivec_crypto_vcipherlast
__builtin_altivec_crypto_vncipher
__builtin_altivec_crypto_vncipherlast
__builtin_altivec_crypto_vpmsumb
__builtin_altivec_crypto_vpmsumh
__builtin_altivec_crypto_vpmsumw
__builtin_altivec_crypto_vpmsumd
__builtin_altivec_vclzb
__builtin_altivec_vclzh
V8UsV8Us
__builtin_altivec_vclzw
V4UiV4Ui
__builtin_altivec_vclzd
__builtin_altivec_vctzb
__builtin_altivec_vctzh
__builtin_altivec_vctzw
__builtin_altivec_vctzd
__builtin_altivec_vclzlsbb
SiV16Uc
__builtin_altivec_vctzlsbb
__builtin_altivec_vprtybw
__builtin_altivec_vprtybd
__builtin_altivec_vprtybq
V1ULLLiV1ULLLi
__builtin_altivec_vpopcntb
__builtin_altivec_vpopcnth
__builtin_altivec_vpopcntw
__builtin_altivec_vpopcntd
__builtin_altivec_vabsdub
__builtin_altivec_vabsduh
__builtin_altivec_vabsduw
__builtin_altivec_vslv
__builtin_altivec_vsrv
__builtin_altivec_vrlwmi
__builtin_altivec_vrldmi
__builtin_altivec_vrlwnm
__builtin_altivec_vrldnm
__builtin_altivec_vextsb2w
V4SiV16Sc
__builtin_altivec_vextsb2d
V2SLLiV16Sc
__builtin_altivec_vextsh2w
V4SiV8Ss
__builtin_altivec_vextsh2d
V2SLLiV8Ss
__builtin_altivec_vextsw2d
V2SLLiV4Si
__builtin_altivec_vextsd2q
V1SLLLiV2SLLi
__builtin_altivec_vextractbm
UiV16Uc
__builtin_altivec_vextracthm
__builtin_altivec_vextractwm
__builtin_altivec_vextractdm
UiV2ULLi
__builtin_altivec_vextractqm
UiV1ULLLi
__builtin_altivec_vdivesw
__builtin_altivec_vdiveuw
__builtin_altivec_vdivesd
__builtin_altivec_vdiveud
__builtin_altivec_vdivesq
V1SLLLiV1SLLLiV1SLLLi
__builtin_altivec_vdiveuq
__builtin_altivec_vmulhsw
__builtin_altivec_vmulhuw
__builtin_altivec_vmulhsd
__builtin_altivec_vmulhud
__builtin_altivec_vexpandbm
__builtin_altivec_vexpandhm
__builtin_altivec_vexpandwm
__builtin_altivec_vexpanddm
__builtin_altivec_vexpandqm
__builtin_altivec_vcntmbb
ULLiV16UcUi
__builtin_altivec_vcntmbh
ULLiV8UsUi
__builtin_altivec_vcntmbw
ULLiV4UiUi
__builtin_altivec_vcntmbd
ULLiV2ULLiUi
__builtin_altivec_mtvsrbm
V16UcULLi
__builtin_altivec_mtvsrhm
V8UsULLi
__builtin_altivec_mtvsrwm
V4UiULLi
__builtin_altivec_mtvsrdm
V2ULLiULLi
__builtin_altivec_mtvsrqm
V1ULLLiULLi
__builtin_altivec_vpdepd
__builtin_altivec_vpextd
__builtin_altivec_vstribr
V16cV16c
__builtin_altivec_vstribl
__builtin_altivec_vstrihr
V8sV8s
__builtin_altivec_vstrihl
__builtin_altivec_vstribr_p
iiV16c
__builtin_altivec_vstribl_p
__builtin_altivec_vstrihr_p
iiV8s
__builtin_altivec_vstrihl_p
__builtin_altivec_vcfuged
__builtin_altivec_vgnb
ULLiV1ULLLiIi
__builtin_altivec_vclrlb
__builtin_altivec_vclrrb
__builtin_altivec_vclzdm
__builtin_altivec_vctzdm
__builtin_altivec_vsldbi
V16UcV16UcV16UcIi
__builtin_altivec_vsrdbi
__builtin_altivec_vinsblx
V16UcV16UcUiUi
__builtin_altivec_vinsbrx
__builtin_altivec_vinshlx
V8UsV8UsUiUi
__builtin_altivec_vinshrx
__builtin_altivec_vinswlx
V4UiV4UiUiUi
__builtin_altivec_vinswrx
__builtin_altivec_vinsdlx
V2ULLiV2ULLiULLiULLi
__builtin_altivec_vinsdrx
__builtin_altivec_vinsbvlx
V16UcV16UcUiV16Uc
__builtin_altivec_vinsbvrx
__builtin_altivec_vinshvlx
V8UsV8UsUiV8Us
__builtin_altivec_vinshvrx
__builtin_altivec_vinswvlx
V4UiV4UiUiV4Ui
__builtin_altivec_vinswvrx
__builtin_altivec_vec_replace_elt
V4UiV4UiUiIi
__builtin_altivec_vec_replace_unaligned
__builtin_altivec_vextdubvlx
V2ULLiV16UcV16UcUi
__builtin_altivec_vextdubvrx
__builtin_altivec_vextduhvlx
V2ULLiV8UsV8UsUi
__builtin_altivec_vextduhvrx
__builtin_altivec_vextduwvlx
V2ULLiV4UiV4UiUi
__builtin_altivec_vextduwvrx
__builtin_altivec_vextddvlx
V2ULLiV2ULLiV2ULLiUi
__builtin_altivec_vextddvrx
__builtin_altivec_vrlqmi
__builtin_altivec_vrlqnm
__builtin_vsx_lxvd2x
V2dLivC*
__builtin_vsx_lxvw4x
__builtin_vsx_lxvd2x_be
V2dSLLivC*
__builtin_vsx_lxvw4x_be
V4iSLLivC*
__builtin_vsx_stxvd2x
vV2dLiv*
__builtin_vsx_stxvw4x
__builtin_vsx_stxvd2x_be
vV2dSLLivC*
__builtin_vsx_stxvw4x_be
vV4iSLLivC*
__builtin_vsx_lxvl
V4ivC*ULLi
__builtin_vsx_lxvll
__builtin_vsx_stxvl
vV4iv*ULLi
__builtin_vsx_stxvll
__builtin_vsx_ldrmb
V16UcCc*Ii
__builtin_vsx_strmb
vCc*IiV16Uc
__builtin_vsx_xvmaxdp
__builtin_vsx_xvmaxsp
__builtin_vsx_xsmaxdp
__builtin_vsx_xvmindp
__builtin_vsx_xvminsp
__builtin_vsx_xsmindp
__builtin_vsx_xvdivdp
__builtin_vsx_xvdivsp
__builtin_vsx_xvrdpip
__builtin_vsx_xvrspip
__builtin_vsx_xvcmpeqdp
__builtin_vsx_xvcmpeqsp
__builtin_vsx_xvcmpeqdp_p
iiV2dV2d
__builtin_vsx_xvcmpeqsp_p
__builtin_vsx_xvcmpgedp
__builtin_vsx_xvcmpgesp
__builtin_vsx_xvcmpgedp_p
__builtin_vsx_xvcmpgesp_p
__builtin_vsx_xvcmpgtdp
__builtin_vsx_xvcmpgtsp
__builtin_vsx_xvcmpgtdp_p
__builtin_vsx_xvcmpgtsp_p
__builtin_vsx_xvrdpim
__builtin_vsx_xvrspim
__builtin_vsx_xvrdpi
__builtin_vsx_xvrspi
__builtin_vsx_xvrdpic
__builtin_vsx_xvrspic
__builtin_vsx_xvrdpiz
__builtin_vsx_xvrspiz
__builtin_vsx_xvmaddadp
__builtin_vsx_xvmaddasp
__builtin_vsx_xvmsubadp
__builtin_vsx_xvmsubasp
__builtin_vsx_xvmuldp
__builtin_vsx_xvmulsp
__builtin_vsx_xvnmaddadp
__builtin_vsx_xvnmaddasp
__builtin_vsx_xvnmsubadp
__builtin_vsx_xvnmsubasp
__builtin_vsx_xvredp
__builtin_vsx_xvresp
__builtin_vsx_xvrsqrtedp
__builtin_vsx_xvrsqrtesp
__builtin_vsx_xvsqrtdp
__builtin_vsx_xvsqrtsp
__builtin_vsx_xxleqv
__builtin_vsx_xvcpsgndp
__builtin_vsx_xvcpsgnsp
__builtin_vsx_xvabssp
__builtin_vsx_xvabsdp
__builtin_vsx_xxgenpcvbm
V16UcV16Uci
__builtin_vsx_xxgenpcvhm
V8UsV8Usi
__builtin_vsx_xxgenpcvwm
V4UiV4Uii
__builtin_vsx_xxgenpcvdm
V2ULLiV2ULLii
__builtin_vsx_xviexpdp
V2dV2ULLiV2ULLi
__builtin_vsx_xviexpsp
V4fV4UiV4Ui
__builtin_vsx_xvxexpdp
__builtin_vsx_xvxexpsp
__builtin_vsx_xvxsigdp
__builtin_vsx_xvxsigsp
__builtin_vsx_xvcvdpsxws
V4SiV2d
__builtin_vsx_xvcvdpuxws
V4UiV2d
__builtin_vsx_xvcvspsxds
V2SLLiV4f
__builtin_vsx_xvcvspuxds
V2ULLiV4f
__builtin_vsx_xvcvsxwdp
__builtin_vsx_xvcvuxwdp
V2dV4Ui
__builtin_vsx_xvcvspdp
__builtin_vsx_xvcvsxdsp
V4fV2SLLi
__builtin_vsx_xvcvuxdsp
V4fV2ULLi
__builtin_vsx_xvcvdpsp
V4fV2d
__builtin_vsx_xvcvsphp
__builtin_vsx_xvcvhpsp
V4fV8Us
__builtin_vsx_xvcvspbf16
__builtin_vsx_xvcvbf16spn
__builtin_vsx_xvtstdcdp
V2ULLiV2dIi
__builtin_vsx_xvtstdcsp
__builtin_vsx_insertword
V16UcV4UiV16UcIi
__builtin_vsx_extractuword
V2ULLiV16UcIi
__builtin_vsx_xxpermdi
__builtin_vsx_xxsldwi
__builtin_vsx_xxeval
V2ULLiV2ULLiV2ULLiV2ULLiIi
__builtin_vsx_xvtlsbb
iV16UcUi
__builtin_vsx_xvtdivdp
iV2dV2d
__builtin_vsx_xvtdivsp
iV4fV4f
__builtin_vsx_xvtsqrtdp
iV2d
__builtin_vsx_xvtsqrtsp
iV4f
__builtin_vsx_xxpermx
V16UcV16UcV16UcV16UcIi
__builtin_vsx_xxblendvb
__builtin_vsx_xxblendvh
__builtin_vsx_xxblendvw
__builtin_vsx_xxblendvd
__builtin_sqrtf128_round_to_odd
LLdLLd
__builtin_addf128_round_to_odd
LLdLLdLLd
__builtin_subf128_round_to_odd
__builtin_mulf128_round_to_odd
__builtin_divf128_round_to_odd
__builtin_fmaf128_round_to_odd
LLdLLdLLdLLd
__builtin_truncf128_round_to_odd
dLLd
__builtin_vsx_scalar_extract_expq
ULLiLLd
__builtin_vsx_scalar_insert_exp_qp
LLdLLdULLi
__builtin_ppc_rsqrtf
__builtin_ppc_rsqrtd
__builtin_ppc_recipdivf
__builtin_ppc_recipdivd
__builtin_tbegin
UiUIi
__builtin_tend
__builtin_tabort
__builtin_tabortdc
__builtin_tabortdci
__builtin_tabortwc
__builtin_tabortwci
__builtin_tcheck
__builtin_treclaim
__builtin_trechkpt
__builtin_tsr
__builtin_tendall
__builtin_tresume
__builtin_tsuspend
__builtin_get_texasr
__builtin_get_texasru
__builtin_get_tfhar
__builtin_get_tfiar
__builtin_set_texasr
vLUi
__builtin_set_texasru
__builtin_set_tfhar
__builtin_set_tfiar
__builtin_ttest
__builtin_divwe
SiSiSi
__builtin_divweu
__builtin_divde
__builtin_divdeu
__builtin_bpermd
__builtin_pdepd
__builtin_pextd
__builtin_cfuged
__builtin_cntlzdm
__builtin_cnttzdm
__builtin_darn
__builtin_darn_raw
__builtin_darn_32
__builtin_unpack_vector_int128
ULLiV1LLLii
__builtin_pack_vector_int128
V1LLLiULLiULLi
__builtin_setrnd
__builtin_readflm
__builtin_setflm
__builtin_dcbf
__builtin_mma_lxvp
__builtin_mma_stxvp
__builtin_mma_assemble_pair
__builtin_mma_disassemble_pair
__builtin_vsx_build_pair
__builtin_mma_build_acc
__builtin_vsx_lxvp
__builtin_vsx_stxvp
__builtin_vsx_assemble_pair
__builtin_vsx_disassemble_pair
__builtin_mma_assemble_acc
__builtin_mma_disassemble_acc
__builtin_mma_xxmtacc
__builtin_mma_xxmfacc
__builtin_mma_xxsetaccz
__builtin_mma_xvi4ger8
__builtin_mma_xvi8ger4
__builtin_mma_xvi16ger2
__builtin_mma_xvi16ger2s
__builtin_mma_xvf16ger2
__builtin_mma_xvf32ger
__builtin_mma_xvf64ger
__builtin_mma_pmxvi4ger8
__builtin_mma_pmxvi8ger4
__builtin_mma_pmxvi16ger2
__builtin_mma_pmxvi16ger2s
__builtin_mma_pmxvf16ger2
__builtin_mma_pmxvf32ger
__builtin_mma_pmxvf64ger
__builtin_mma_xvi4ger8pp
__builtin_mma_xvi8ger4pp
__builtin_mma_xvi8ger4spp
__builtin_mma_xvi16ger2pp
__builtin_mma_xvi16ger2spp
__builtin_mma_pmxvi4ger8pp
__builtin_mma_pmxvi8ger4pp
__builtin_mma_pmxvi8ger4spp
__builtin_mma_pmxvi16ger2pp
__builtin_mma_pmxvi16ger2spp
__builtin_mma_xvf16ger2pp
__builtin_mma_xvf16ger2pn
__builtin_mma_xvf16ger2np
__builtin_mma_xvf16ger2nn
__builtin_mma_pmxvf16ger2pp
__builtin_mma_pmxvf16ger2pn
__builtin_mma_pmxvf16ger2np
__builtin_mma_pmxvf16ger2nn
__builtin_mma_xvf32gerpp
__builtin_mma_xvf32gerpn
__builtin_mma_xvf32gernp
__builtin_mma_xvf32gernn
__builtin_mma_pmxvf32gerpp
__builtin_mma_pmxvf32gerpn
__builtin_mma_pmxvf32gernp
__builtin_mma_pmxvf32gernn
__builtin_mma_xvf64gerpp
__builtin_mma_xvf64gerpn
__builtin_mma_xvf64gernp
__builtin_mma_xvf64gernn
__builtin_mma_pmxvf64gerpp
__builtin_mma_pmxvf64gerpn
__builtin_mma_pmxvf64gernp
__builtin_mma_pmxvf64gernn
__builtin_mma_xvbf16ger2
__builtin_mma_pmxvbf16ger2
__builtin_mma_xvbf16ger2pp
__builtin_mma_xvbf16ger2pn
__builtin_mma_xvbf16ger2np
__builtin_mma_xvbf16ger2nn
__builtin_mma_pmxvbf16ger2pp
__builtin_mma_pmxvbf16ger2pn
__builtin_mma_pmxvbf16ger2np
__builtin_mma_pmxvbf16ger2nn
+altivec
+vsx
+bpermd
+extdiv
+power8-vector
+direct-move
+htm
+float128
+power9-vector
+power10-vector
+pcrelative-memops
+prefix-instrs
+efpu2
+paired-vector-memops
+mma
+rop-protect
+privileged
+isa-v206-instructions
+isa-v207-instructions
+isa-v30-instructions
+isa-v31-instructions
__ppc__
_ARCH_PPC
__powerpc__
__POWERPC__
__ppc64__
__PPC64__
__THW_PPC__
__PPC
__powerpc
_LITTLE_ENDIAN
_BIG_ENDIAN
_CALL_ELF
_CALL_LINUX
__NATURAL_ALIGNMENT__
__LONG_DOUBLE_128__
__LONGDOUBLE128
__LONG_DOUBLE_IEEE128__
__LONG_DOUBLE_IBM128__
__LONGDOUBLE64
__STRUCT_PARM_ALIGN__
_ARCH_
_ARCH_PPCGR
_ARCH_PPCSQ
_ARCH_440
_ARCH_603
_ARCH_604
_ARCH_PWR4
_ARCH_PWR5
_ARCH_PWR5X
_ARCH_PWR6
_ARCH_PWR6X
_ARCH_PWR7
_ARCH_PWR8
_ARCH_PWR9
_ARCH_PWR10
_ARCH_A2
__NO_LWSYNC__
_ARCH_PWR_FUTURE
__VEC__
10206
__ALTIVEC__
__SPE__
__NO_FPRS__
__VSX__
__POWER8_VECTOR__
__CRYPTO__
__HTM__
__POWER9_VECTOR__
__MMA__
__ROP_PROTECT__
__POWER10_VECTOR__
__PCREL__
__HAVE_BSWAP__
direct-move
rop-protect
privileged
-mfloat128
-mmma
+pcrel
-mpcrel
-mcpu=pwr10 -mprefixed
+prefixed
-mprefixed
-mcpu=pwr10
-mpaired-vector-memops
-mrop-protect
-mprivileged
pcrelative-memops
prefix-instrs
isa-v31-instructions
float128
efpu2
vrsave
vscr
spe_acc
spefscr
fr10
fr11
fr12
fr13
fr14
fr15
fr16
fr17
fr18
fr19
fr20
fr21
fr22
fr23
fr24
fr25
fr26
fr27
fr28
fr29
fr30
fr31
__popcntb
__poppar4
__poppar8
__eieio
__iospace_eieio
__isync
__lwsync
__iospace_lwsync
__sync
__iospace_sync
__dcbfl
__dcbflp
__dcbst
__dcbt
__dcbtst
__dcbz
__icbt
__compare_and_swap
__compare_and_swaplp
__fetch_and_add
__fetch_and_addlp
__fetch_and_and
__fetch_and_andlp
__fetch_and_or
__fetch_and_orlp
__fetch_and_swap
__fetch_and_swaplp
__ldarx
__lwarx
__lharx
__lbarx
__stfiw
__stdcx
__stwcx
__sthcx
__stbcx
__tdw
__tw
__trap
__trapd
__fcfid
__fcfud
__fctid
__fctidz
__fctiw
__fctiwz
__fctudz
__fctuwz
__cmpeqb
__cmprb
__setb
__cmpb
__mulhd
__mulhdu
__mulhw
__mulhwu
__maddhd
__maddhdu
__maddld
__rlwnm
__rlwimi
__rldimi
__load2r
__load4r
__load8r
__store2r
__store4r
__store8r
__extract_exp
__extract_sig
__mtfsb0
__mtfsb1
__mtfsf
__mtfsfi
__insert_exp
__fmsub
__fmsubs
__fnmadd
__fnmadds
__fnmsub
__fnmsubs
__fre
__fres
__swdiv_nochk
__swdivs_nochk
__alloca
__builtin_alloca
__vcipher
__vcipherlast
__vncipher
__vncipherlast
__vpermxor
__vpmsumb
__vpmsumd
__vpmsumh
__vpmsumw
__divde
__divwe
__divdeu
__divweu
__alignx
__bcopy
bcopy
__bpermd
__cntlz4
__builtin_clz
__cntlz8
__builtin_clzll
__cmplx
__builtin_complex
__cmplxf
__cnttz4
__builtin_ctz
__cnttz8
__builtin_ctzll
__darn
__darn_32
__darn_raw
__dcbf
__fmadd
__builtin_fma
__fmadds
__builtin_fmaf
__labs
__builtin_labs
__llabs
__builtin_llabs
__popcnt4
__builtin_popcount
__popcnt8
__builtin_popcountll
__readflm
__rotatel4
__builtin_rotateleft32
__rotatel8
__builtin_rotateleft64
__rdlam
__setflm
__setrnd
__dcbtstt
__dcbtt
__mftbu
__mfmsr
__mtmsr
__mfspr
__mtspr
__fric
__frim
__frims
__frin
__frins
__frip
__frips
__friz
__frizs
__fsel
__fsels
__frsqrte
__frsqrtes
__fsqrt
__fsqrts
__addex
__cmplxl
__compare_exp_uo
__compare_exp_lt
__compare_exp_gt
__compare_exp_eq
__test_data_class
__swdiv
__swdivs
-vsx
-mpower8-vector
-mdirect-move
-mpower9-vector
-mpower10-vector
-mno-vsx
vs10
vs11
vs12
vs13
vs14
vs15
vs16
vs17
vs18
vs19
vs20
vs21
vs22
vs23
vs24
vs25
vs26
vs27
vs28
vs29
vs30
vs31
vs32
vs33
vs34
vs35
vs36
vs37
vs38
vs39
vs40
vs41
vs42
vs43
vs44
vs45
vs46
vs47
vs48
vs49
vs50
vs51
vs52
vs53
vs54
vs55
vs56
vs57
vs58
vs59
vs60
vs61
vs62
vs63
ppc32
fs10
fs11
ft10
ft11
__riscv
__riscv_xlen
__riscv_cmodel_medlow
__riscv_cmodel_medany
__riscv_float_abi_single
__riscv_float_abi_double
__riscv_float_abi_soft
__riscv_abi_rve
__riscv_arch_test
__riscv_
__riscv_mul
__riscv_div
__riscv_muldiv
__riscv_atomic
__riscv_flen
__riscv_fdiv
__riscv_fsqrt
__riscv_compressed
__riscv_vector
__builtin_rvv_vadd_vv
experimental-v
__builtin_rvv_vadd_vv_m
__builtin_rvv_vwaddu_vv
__builtin_rvv_vwaddu_vv_m
__builtin_rvv_vluxei8_v
__builtin_rvv_vluxei8_v_m
__builtin_rvv_vsse16_v
__builtin_rvv_vsse16_v_m
__builtin_rvv_vloxseg3ei8_v
__builtin_rvv_vloxseg3ei8_v_m
__builtin_rvv_vloxseg4ei8_v
__builtin_rvv_vloxseg4ei8_v_m
__builtin_rvv_vloxseg5ei8_v
__builtin_rvv_vloxseg5ei8_v_m
__builtin_rvv_vloxseg6ei8_v
__builtin_rvv_vloxseg6ei8_v_m
__builtin_rvv_vloxseg7ei8_v
__builtin_rvv_vloxseg7ei8_v_m
__builtin_rvv_vloxseg8ei8_v
__builtin_rvv_vloxseg8ei8_v_m
__builtin_rvv_vloxseg2ei16_v
__builtin_rvv_vloxseg2ei16_v_m
__builtin_rvv_vloxseg3ei16_v
__builtin_rvv_vloxseg3ei16_v_m
__builtin_rvv_vloxseg4ei16_v
__builtin_rvv_vloxseg4ei16_v_m
__builtin_rvv_vloxseg5ei16_v
__builtin_rvv_vloxseg5ei16_v_m
__builtin_rvv_vloxseg6ei16_v
__builtin_rvv_vloxseg6ei16_v_m
__builtin_rvv_vloxseg7ei16_v
__builtin_rvv_vloxseg7ei16_v_m
__builtin_rvv_vloxseg8ei16_v
__builtin_rvv_vloxseg8ei16_v_m
__builtin_rvv_vloxseg2ei32_v
__builtin_rvv_vloxseg2ei32_v_m
__builtin_rvv_vloxseg3ei32_v
__builtin_rvv_vloxseg3ei32_v_m
__builtin_rvv_vsse32_v
__builtin_rvv_vsse32_v_m
__builtin_rvv_vloxseg4ei32_v
__builtin_rvv_vloxseg4ei32_v_m
__builtin_rvv_vloxseg5ei32_v
__builtin_rvv_vloxseg5ei32_v_m
__builtin_rvv_vloxseg6ei32_v
__builtin_rvv_vloxseg6ei32_v_m
__builtin_rvv_vloxseg7ei32_v
__builtin_rvv_vloxseg7ei32_v_m
__builtin_rvv_vloxseg8ei32_v
__builtin_rvv_vloxseg8ei32_v_m
__builtin_rvv_vloxseg2ei64_v
__builtin_rvv_vloxseg2ei64_v_m
__builtin_rvv_vloxseg3ei64_v
__builtin_rvv_vloxseg3ei64_v_m
__builtin_rvv_vloxseg4ei64_v
__builtin_rvv_vloxseg4ei64_v_m
__builtin_rvv_vloxseg5ei64_v
__builtin_rvv_vloxseg5ei64_v_m
__builtin_rvv_vloxseg6ei64_v
__builtin_rvv_vloxseg6ei64_v_m
__builtin_rvv_vloxseg7ei64_v
__builtin_rvv_vloxseg7ei64_v_m
__builtin_rvv_vloxseg8ei64_v
__builtin_rvv_vloxseg8ei64_v_m
__builtin_rvv_vloxseg2ei8_v
__builtin_rvv_vloxseg2ei8_v_m
__builtin_rvv_vsse64_v
__builtin_rvv_vsse64_v_m
__builtin_rvv_vluxei16_v
__builtin_rvv_vluxei16_v_m
__builtin_rvv_vluxei32_v
__builtin_rvv_vluxei32_v_m
__builtin_rvv_vsseg3e8_v
__builtin_rvv_vsseg3e8_v_m
__builtin_rvv_vluxei64_v
__builtin_rvv_vluxei64_v_m
__builtin_rvv_vsseg4e8_v
__builtin_rvv_vsseg4e8_v_m
__builtin_rvv_vsseg5e8_v
__builtin_rvv_vsseg5e8_v_m
__builtin_rvv_vsseg6e8_v
__builtin_rvv_vsseg6e8_v_m
__builtin_rvv_vsseg7e8_v
__builtin_rvv_vsseg7e8_v_m
__builtin_rvv_vsseg8e8_v
__builtin_rvv_vsseg8e8_v_m
__builtin_rvv_vsseg2e16_v
__builtin_rvv_vsseg2e16_v_m
__builtin_rvv_vsseg3e16_v
__builtin_rvv_vsseg3e16_v_m
__builtin_rvv_vsseg4e16_v
__builtin_rvv_vsseg4e16_v_m
__builtin_rvv_vsseg5e16_v
__builtin_rvv_vsseg5e16_v_m
__builtin_rvv_vsseg6e16_v
__builtin_rvv_vsseg6e16_v_m
__builtin_rvv_vsseg7e16_v
__builtin_rvv_vsseg7e16_v_m
__builtin_rvv_vsseg8e16_v
__builtin_rvv_vsseg8e16_v_m
__builtin_rvv_vsseg2e32_v
__builtin_rvv_vsseg2e32_v_m
__builtin_rvv_vsseg3e32_v
__builtin_rvv_vsseg3e32_v_m
__builtin_rvv_vsseg4e32_v
__builtin_rvv_vsseg4e32_v_m
__builtin_rvv_vsseg5e32_v
__builtin_rvv_vsseg5e32_v_m
__builtin_rvv_vsseg6e32_v
__builtin_rvv_vsseg6e32_v_m
__builtin_rvv_vsseg7e32_v
__builtin_rvv_vsseg7e32_v_m
__builtin_rvv_vsseg8e32_v
__builtin_rvv_vsseg8e32_v_m
__builtin_rvv_vsseg2e64_v
__builtin_rvv_vsseg2e64_v_m
__builtin_rvv_vsseg3e64_v
__builtin_rvv_vsseg3e64_v_m
__builtin_rvv_vsseg4e64_v
__builtin_rvv_vsseg4e64_v_m
__builtin_rvv_vsseg5e64_v
__builtin_rvv_vsseg5e64_v_m
__builtin_rvv_vsseg6e64_v
__builtin_rvv_vsseg6e64_v_m
__builtin_rvv_vsseg7e64_v
__builtin_rvv_vsseg7e64_v_m
__builtin_rvv_vsseg8e64_v
__builtin_rvv_vsseg8e64_v_m
__builtin_rvv_vssseg3e8_v
__builtin_rvv_vssseg3e8_v_m
__builtin_rvv_vssseg4e8_v
__builtin_rvv_vssseg4e8_v_m
__builtin_rvv_vssseg5e8_v
__builtin_rvv_vssseg5e8_v_m
__builtin_rvv_vssseg6e8_v
__builtin_rvv_vssseg6e8_v_m
__builtin_rvv_vssseg7e8_v
__builtin_rvv_vssseg7e8_v_m
__builtin_rvv_vssseg8e8_v
__builtin_rvv_vssseg8e8_v_m
__builtin_rvv_vssseg2e16_v
__builtin_rvv_vssseg2e16_v_m
__builtin_rvv_vssseg3e16_v
__builtin_rvv_vssseg3e16_v_m
__builtin_rvv_vssseg4e16_v
__builtin_rvv_vssseg4e16_v_m
__builtin_rvv_vssseg5e16_v
__builtin_rvv_vssseg5e16_v_m
__builtin_rvv_vssseg6e16_v
__builtin_rvv_vssseg6e16_v_m
__builtin_rvv_vssseg7e16_v
__builtin_rvv_vssseg7e16_v_m
__builtin_rvv_vssseg8e16_v
__builtin_rvv_vssseg8e16_v_m
__builtin_rvv_vssseg2e32_v
__builtin_rvv_vssseg2e32_v_m
__builtin_rvv_vssseg3e32_v
__builtin_rvv_vssseg3e32_v_m
__builtin_rvv_vssseg4e32_v
__builtin_rvv_vssseg4e32_v_m
__builtin_rvv_vssseg5e32_v
__builtin_rvv_vssseg5e32_v_m
__builtin_rvv_vssseg6e32_v
__builtin_rvv_vssseg6e32_v_m
__builtin_rvv_vssseg7e32_v
__builtin_rvv_vssseg7e32_v_m
__builtin_rvv_vssseg8e32_v
__builtin_rvv_vssseg8e32_v_m
__builtin_rvv_vssseg2e64_v
__builtin_rvv_vssseg2e64_v_m
__builtin_rvv_vssseg3e64_v
__builtin_rvv_vssseg3e64_v_m
__builtin_rvv_vssseg4e64_v
__builtin_rvv_vssseg4e64_v_m
__builtin_rvv_vssseg5e64_v
__builtin_rvv_vssseg5e64_v_m
__builtin_rvv_vssseg6e64_v
__builtin_rvv_vssseg6e64_v_m
__builtin_rvv_vssseg7e64_v
__builtin_rvv_vssseg7e64_v_m
__builtin_rvv_vssseg8e64_v
__builtin_rvv_vssseg8e64_v_m
__builtin_rvv_vsuxseg3ei8_v
__builtin_rvv_vsuxseg3ei8_v_m
__builtin_rvv_vsuxseg4ei8_v
__builtin_rvv_vsuxseg4ei8_v_m
__builtin_rvv_vsuxseg5ei8_v
__builtin_rvv_vsuxseg5ei8_v_m
__builtin_rvv_vsuxseg6ei8_v
__builtin_rvv_vsuxseg6ei8_v_m
__builtin_rvv_vsuxseg7ei8_v
__builtin_rvv_vsuxseg7ei8_v_m
__builtin_rvv_vsuxseg8ei8_v
__builtin_rvv_vsuxseg8ei8_v_m
__builtin_rvv_vsuxseg2ei16_v
__builtin_rvv_vsuxseg2ei16_v_m
__builtin_rvv_vsuxseg3ei16_v
__builtin_rvv_vsuxseg3ei16_v_m
__builtin_rvv_vsuxseg4ei16_v
__builtin_rvv_vsuxseg4ei16_v_m
__builtin_rvv_vsuxseg5ei16_v
__builtin_rvv_vsuxseg5ei16_v_m
__builtin_rvv_vsuxseg6ei16_v
__builtin_rvv_vsuxseg6ei16_v_m
__builtin_rvv_vsuxseg7ei16_v
__builtin_rvv_vsuxseg7ei16_v_m
__builtin_rvv_vsuxseg8ei16_v
__builtin_rvv_vsuxseg8ei16_v_m
__builtin_rvv_vsuxseg2ei32_v
__builtin_rvv_vsuxseg2ei32_v_m
__builtin_rvv_vsuxseg3ei32_v
__builtin_rvv_vsuxseg3ei32_v_m
__builtin_rvv_vsuxseg4ei32_v
__builtin_rvv_vsuxseg4ei32_v_m
__builtin_rvv_vsuxseg5ei32_v
__builtin_rvv_vsuxseg5ei32_v_m
__builtin_rvv_vsuxseg6ei32_v
__builtin_rvv_vsuxseg6ei32_v_m
__builtin_rvv_vsuxseg7ei32_v
__builtin_rvv_vsuxseg7ei32_v_m
__builtin_rvv_vsuxseg8ei32_v
__builtin_rvv_vsuxseg8ei32_v_m
__builtin_rvv_vsuxseg2ei64_v
__builtin_rvv_vsuxseg2ei64_v_m
__builtin_rvv_vsuxseg3ei64_v
__builtin_rvv_vsuxseg3ei64_v_m
__builtin_rvv_vsuxseg4ei64_v
__builtin_rvv_vsuxseg4ei64_v_m
__builtin_rvv_vsuxseg5ei64_v
__builtin_rvv_vsuxseg5ei64_v_m
__builtin_rvv_vsuxseg6ei64_v
__builtin_rvv_vsuxseg6ei64_v_m
__builtin_rvv_vsuxseg7ei64_v
__builtin_rvv_vsuxseg7ei64_v_m
__builtin_rvv_vsuxseg8ei64_v
__builtin_rvv_vsuxseg8ei64_v_m
__builtin_rvv_vsuxseg2ei8_v
__builtin_rvv_vsuxseg2ei8_v_m
__builtin_rvv_vloxei8_v
__builtin_rvv_vloxei8_v_m
__builtin_rvv_vloxei16_v
__builtin_rvv_vloxei16_v_m
__builtin_rvv_vloxei32_v
__builtin_rvv_vloxei32_v_m
__builtin_rvv_vloxei64_v
__builtin_rvv_vloxei64_v_m
__builtin_rvv_vsoxseg2ei8_v
__builtin_rvv_vsoxseg2ei8_v_m
__builtin_rvv_vsoxseg3ei8_v
__builtin_rvv_vsoxseg3ei8_v_m
__builtin_rvv_vsoxseg4ei8_v
__builtin_rvv_vsoxseg4ei8_v_m
__builtin_rvv_vsoxseg5ei8_v
__builtin_rvv_vsoxseg5ei8_v_m
__builtin_rvv_vsoxseg6ei8_v
__builtin_rvv_vsoxseg6ei8_v_m
__builtin_rvv_vsoxseg7ei8_v
__builtin_rvv_vsoxseg7ei8_v_m
__builtin_rvv_vsoxseg8ei8_v
__builtin_rvv_vsoxseg8ei8_v_m
__builtin_rvv_vsoxseg2ei16_v
__builtin_rvv_vsoxseg2ei16_v_m
__builtin_rvv_vsoxseg3ei16_v
__builtin_rvv_vsoxseg3ei16_v_m
__builtin_rvv_vsoxseg4ei16_v
__builtin_rvv_vsoxseg4ei16_v_m
__builtin_rvv_vsoxseg5ei16_v
__builtin_rvv_vsoxseg5ei16_v_m
__builtin_rvv_vsoxseg6ei16_v
__builtin_rvv_vsoxseg6ei16_v_m
__builtin_rvv_vsoxseg7ei16_v
__builtin_rvv_vsoxseg7ei16_v_m
__builtin_rvv_vsoxseg8ei16_v
__builtin_rvv_vsoxseg8ei16_v_m
__builtin_rvv_vsoxseg2ei32_v
__builtin_rvv_vsoxseg2ei32_v_m
__builtin_rvv_vsoxseg3ei32_v
__builtin_rvv_vsoxseg3ei32_v_m
__builtin_rvv_vsoxseg4ei32_v
__builtin_rvv_vsoxseg4ei32_v_m
__builtin_rvv_vsoxseg5ei32_v
__builtin_rvv_vsoxseg5ei32_v_m
__builtin_rvv_vsoxseg6ei32_v
__builtin_rvv_vsoxseg6ei32_v_m
__builtin_rvv_vsoxseg7ei32_v
__builtin_rvv_vsoxseg7ei32_v_m
__builtin_rvv_vsoxseg8ei32_v
__builtin_rvv_vsoxseg8ei32_v_m
__builtin_rvv_vsoxseg2ei64_v
__builtin_rvv_vsoxseg2ei64_v_m
__builtin_rvv_vsoxseg3ei64_v
__builtin_rvv_vsoxseg3ei64_v_m
__builtin_rvv_vsoxseg4ei64_v
__builtin_rvv_vsoxseg4ei64_v_m
__builtin_rvv_vsoxseg5ei64_v
__builtin_rvv_vsoxseg5ei64_v_m
__builtin_rvv_vsoxseg6ei64_v
__builtin_rvv_vsoxseg6ei64_v_m
__builtin_rvv_vsoxseg7ei64_v
__builtin_rvv_vsoxseg7ei64_v_m
__builtin_rvv_vsoxseg8ei64_v
__builtin_rvv_vsoxseg8ei64_v_m
__builtin_rvv_vse8_v
__builtin_rvv_vse8_v_m
__builtin_rvv_vadd_vx
__builtin_rvv_vadd_vx_m
__builtin_rvv_vsub_vv
__builtin_rvv_vsub_vv_m
__builtin_rvv_vsub_vx
__builtin_rvv_vsub_vx_m
__builtin_rvv_vrsub_vx
__builtin_rvv_vrsub_vx_m
__builtin_rvv_vwaddu_vx
__builtin_rvv_vwaddu_vx_m
__builtin_rvv_vwsubu_vv
__builtin_rvv_vwsubu_vv_m
__builtin_rvv_vwsubu_vx
__builtin_rvv_vwsubu_vx_m
__builtin_rvv_vwadd_vv
__builtin_rvv_vwadd_vv_m
__builtin_rvv_vwadd_vx
__builtin_rvv_vwadd_vx_m
__builtin_rvv_vwsub_vv
__builtin_rvv_vwsub_vv_m
__builtin_rvv_vwsub_vx
__builtin_rvv_vwsub_vx_m
__builtin_rvv_vwaddu_wx
__builtin_rvv_vwaddu_wx_m
__builtin_rvv_vwsubu_wv
__builtin_rvv_vwsubu_wv_m
__builtin_rvv_vwsubu_wx
__builtin_rvv_vwsubu_wx_m
__builtin_rvv_vwadd_wv
__builtin_rvv_vwadd_wv_m
__builtin_rvv_vwadd_wx
__builtin_rvv_vwadd_wx_m
__builtin_rvv_vwsub_wv
__builtin_rvv_vwsub_wv_m
__builtin_rvv_vwsub_wx
__builtin_rvv_vwsub_wx_m
__builtin_rvv_vwcvt_x_x_v
__builtin_rvv_vwcvt_x_x_v_m
__builtin_rvv_vadc_vvm
__builtin_rvv_vadc_vxm
__builtin_rvv_vmadc_vvm
__builtin_rvv_vmadc_vxm
__builtin_rvv_vmadc_vv
__builtin_rvv_vmadc_vx
__builtin_rvv_vsbc_vvm
__builtin_rvv_vsbc_vxm
__builtin_rvv_vmsbc_vvm
__builtin_rvv_vmsbc_vxm
__builtin_rvv_vmsbc_vv
__builtin_rvv_vmsbc_vx
__builtin_rvv_vand_vv
__builtin_rvv_vand_vv_m
__builtin_rvv_vand_vx
__builtin_rvv_vand_vx_m
__builtin_rvv_vxor_vv
__builtin_rvv_vxor_vv_m
__builtin_rvv_vxor_vx
__builtin_rvv_vxor_vx_m
__builtin_rvv_vor_vv
__builtin_rvv_vor_vv_m
__builtin_rvv_vor_vx
__builtin_rvv_vor_vx_m
__builtin_rvv_vsll_vv
__builtin_rvv_vsll_vv_m
__builtin_rvv_vsll_vx
__builtin_rvv_vsll_vx_m
__builtin_rvv_vsrl_vv
__builtin_rvv_vsrl_vv_m
__builtin_rvv_vsrl_vx
__builtin_rvv_vsrl_vx_m
__builtin_rvv_vsra_vv
__builtin_rvv_vsra_vv_m
__builtin_rvv_vsra_vx
__builtin_rvv_vsra_vx_m
__builtin_rvv_vnsrl_wv
__builtin_rvv_vnsrl_wv_m
__builtin_rvv_vnsrl_wx
__builtin_rvv_vnsrl_wx_m
__builtin_rvv_vnsra_wv
__builtin_rvv_vnsra_wv_m
__builtin_rvv_vnsra_wx
__builtin_rvv_vnsra_wx_m
__builtin_rvv_vncvt_x_x_w
__builtin_rvv_vncvt_x_x_w_m
__builtin_rvv_vmseq_vv
__builtin_rvv_vmseq_vv_m
__builtin_rvv_vsuxei16_v
__builtin_rvv_vsuxei16_v_m
__builtin_rvv_vmseq_vx
__builtin_rvv_vmseq_vx_m
__builtin_rvv_vmsne_vv
__builtin_rvv_vmsne_vv_m
__builtin_rvv_vmsne_vx
__builtin_rvv_vmsne_vx_m
__builtin_rvv_vmsltu_vv
__builtin_rvv_vmsltu_vv_m
__builtin_rvv_vmsltu_vx
__builtin_rvv_vmsltu_vx_m
__builtin_rvv_vmslt_vv
__builtin_rvv_vmslt_vv_m
__builtin_rvv_vmslt_vx
__builtin_rvv_vmslt_vx_m
__builtin_rvv_vmsleu_vv
__builtin_rvv_vmsleu_vv_m
__builtin_rvv_vmsleu_vx
__builtin_rvv_vmsleu_vx_m
__builtin_rvv_vmsle_vv
__builtin_rvv_vmsle_vv_m
__builtin_rvv_vmsle_vx
__builtin_rvv_vmsle_vx_m
__builtin_rvv_vmsgtu_vv
__builtin_rvv_vmsgtu_vv_m
__builtin_rvv_vmsgtu_vx
__builtin_rvv_vmsgtu_vx_m
__builtin_rvv_vmsgt_vv
__builtin_rvv_vmsgt_vv_m
__builtin_rvv_vmsgt_vx
__builtin_rvv_vmsgt_vx_m
__builtin_rvv_vmsgeu_vv
__builtin_rvv_vmsgeu_vv_m
__builtin_rvv_vwaddu_wv
__builtin_rvv_vwaddu_wv_m
__builtin_rvv_vsse8_v
__builtin_rvv_vsse8_v_m
__builtin_rvv_vsuxei32_v
__builtin_rvv_vsuxei32_v_m
__builtin_rvv_vmsgeu_vx
__builtin_rvv_vmsgeu_vx_m
__builtin_rvv_vmsge_vv
__builtin_rvv_vmsge_vv_m
__builtin_rvv_vmsge_vx
__builtin_rvv_vmsge_vx_m
__builtin_rvv_vminu_vv
__builtin_rvv_vminu_vv_m
__builtin_rvv_vminu_vx
__builtin_rvv_vminu_vx_m
__builtin_rvv_vmin_vv
__builtin_rvv_vmin_vv_m
__builtin_rvv_vmin_vx
__builtin_rvv_vmin_vx_m
__builtin_rvv_vmaxu_vv
__builtin_rvv_vmaxu_vv_m
__builtin_rvv_vmaxu_vx
__builtin_rvv_vmaxu_vx_m
__builtin_rvv_vmax_vv
__builtin_rvv_vmax_vv_m
__builtin_rvv_vmax_vx
__builtin_rvv_vmax_vx_m
__builtin_rvv_vmul_vv
__builtin_rvv_vmul_vv_m
__builtin_rvv_vmul_vx
__builtin_rvv_vmul_vx_m
__builtin_rvv_vmulh_vv
__builtin_rvv_vmulh_vv_m
__builtin_rvv_vmulh_vx
__builtin_rvv_vmulh_vx_m
__builtin_rvv_vmulhu_vv
__builtin_rvv_vmulhu_vv_m
__builtin_rvv_vmulhu_vx
__builtin_rvv_vmulhu_vx_m
__builtin_rvv_vmulhsu_vv
__builtin_rvv_vmulhsu_vv_m
__builtin_rvv_vsuxei64_v
__builtin_rvv_vsuxei64_v_m
__builtin_rvv_vmulhsu_vx
__builtin_rvv_vmulhsu_vx_m
__builtin_rvv_vdivu_vv
__builtin_rvv_vdivu_vv_m
__builtin_rvv_vdivu_vx
__builtin_rvv_vdivu_vx_m
__builtin_rvv_vdiv_vv
__builtin_rvv_vdiv_vv_m
__builtin_rvv_vdiv_vx
__builtin_rvv_vdiv_vx_m
__builtin_rvv_vremu_vv
__builtin_rvv_vremu_vv_m
__builtin_rvv_vremu_vx
__builtin_rvv_vremu_vx_m
__builtin_rvv_vrem_vv
__builtin_rvv_vrem_vv_m
__builtin_rvv_vrem_vx
__builtin_rvv_vrem_vx_m
__builtin_rvv_vwmul_vv
__builtin_rvv_vwmul_vv_m
__builtin_rvv_vwmul_vx
__builtin_rvv_vwmul_vx_m
__builtin_rvv_vwmulu_vv
__builtin_rvv_vwmulu_vv_m
__builtin_rvv_vwmulu_vx
__builtin_rvv_vwmulu_vx_m
__builtin_rvv_vwmulsu_vv
__builtin_rvv_vwmulsu_vv_m
__builtin_rvv_vwmulsu_vx
__builtin_rvv_vwmulsu_vx_m
__builtin_rvv_vmacc_vv
__builtin_rvv_vmacc_vv_m
__builtin_rvv_vmacc_vx
__builtin_rvv_vmacc_vx_m
__builtin_rvv_vnmsac_vv
__builtin_rvv_vnmsac_vv_m
__builtin_rvv_vsuxei8_v
__builtin_rvv_vsuxei8_v_m
__builtin_rvv_vnmsac_vx
__builtin_rvv_vnmsac_vx_m
__builtin_rvv_vmadd_vv
__builtin_rvv_vmadd_vv_m
__builtin_rvv_vmadd_vx
__builtin_rvv_vmadd_vx_m
__builtin_rvv_vnmsub_vv
__builtin_rvv_vnmsub_vv_m
__builtin_rvv_vnmsub_vx
__builtin_rvv_vnmsub_vx_m
__builtin_rvv_vwmaccu_vv
__builtin_rvv_vwmaccu_vv_m
__builtin_rvv_vwmaccu_vx
__builtin_rvv_vwmaccu_vx_m
__builtin_rvv_vwmacc_vv
__builtin_rvv_vwmacc_vv_m
__builtin_rvv_vwmacc_vx
__builtin_rvv_vwmacc_vx_m
__builtin_rvv_vwmaccsu_vv
__builtin_rvv_vwmaccsu_vv_m
__builtin_rvv_vwmaccsu_vx
__builtin_rvv_vwmaccsu_vx_m
__builtin_rvv_vwmaccus_vx
__builtin_rvv_vwmaccus_vx_m
__builtin_rvv_vmerge_vvm
__builtin_rvv_vmerge_vxm
__builtin_rvv_vmv_v_v
__builtin_rvv_vmv_v_x
__builtin_rvv_vsaddu_vv
__builtin_rvv_vsaddu_vv_m
__builtin_rvv_vsaddu_vx
__builtin_rvv_vsaddu_vx_m
__builtin_rvv_vsadd_vv
__builtin_rvv_vsadd_vv_m
__builtin_rvv_vsadd_vx
__builtin_rvv_vsadd_vx_m
__builtin_rvv_vssubu_vv
__builtin_rvv_vssubu_vv_m
__builtin_rvv_vssubu_vx
__builtin_rvv_vssubu_vx_m
__builtin_rvv_vssub_vv
__builtin_rvv_vssub_vv_m
__builtin_rvv_vssub_vx
__builtin_rvv_vssub_vx_m
__builtin_rvv_vaaddu_vv
__builtin_rvv_vaaddu_vv_m
__builtin_rvv_vaaddu_vx
__builtin_rvv_vaaddu_vx_m
__builtin_rvv_vaadd_vv
__builtin_rvv_vaadd_vv_m
__builtin_rvv_vaadd_vx
__builtin_rvv_vaadd_vx_m
__builtin_rvv_vasubu_vv
__builtin_rvv_vasubu_vv_m
__builtin_rvv_vasubu_vx
__builtin_rvv_vasubu_vx_m
__builtin_rvv_vasub_vv
__builtin_rvv_vasub_vv_m
__builtin_rvv_vasub_vx
__builtin_rvv_vasub_vx_m
__builtin_rvv_vsmul_vv
__builtin_rvv_vsmul_vv_m
__builtin_rvv_vsmul_vx
__builtin_rvv_vsmul_vx_m
__builtin_rvv_vssrl_vv
__builtin_rvv_vssrl_vv_m
__builtin_rvv_vssrl_vx
__builtin_rvv_vssrl_vx_m
__builtin_rvv_vssra_vv
__builtin_rvv_vssra_vv_m
__builtin_rvv_vssra_vx
__builtin_rvv_vssra_vx_m
__builtin_rvv_vnclipu_wv
__builtin_rvv_vnclipu_wv_m
__builtin_rvv_vnclipu_wx
__builtin_rvv_vnclipu_wx_m
__builtin_rvv_vnclip_wv
__builtin_rvv_vnclip_wv_m
__builtin_rvv_vnclip_wx
__builtin_rvv_vnclip_wx_m
__builtin_rvv_vfadd_vv
__builtin_rvv_vfadd_vv_m
__builtin_rvv_vfadd_vf
__builtin_rvv_vfadd_vf_m
__builtin_rvv_vfsub_vv
__builtin_rvv_vfsub_vv_m
__builtin_rvv_vfsub_vf
__builtin_rvv_vfsub_vf_m
__builtin_rvv_vfrsub_vf
__builtin_rvv_vfrsub_vf_m
__builtin_rvv_vfwadd_vv
__builtin_rvv_vfwadd_vv_m
__builtin_rvv_vfwadd_vf
__builtin_rvv_vfwadd_vf_m
__builtin_rvv_vfwsub_vv
__builtin_rvv_vfwsub_vv_m
__builtin_rvv_vfwsub_vf
__builtin_rvv_vfwsub_vf_m
__builtin_rvv_vfwadd_wv
__builtin_rvv_vfwadd_wv_m
__builtin_rvv_vfwadd_wf
__builtin_rvv_vfwadd_wf_m
__builtin_rvv_vfwsub_wv
__builtin_rvv_vfwsub_wv_m
__builtin_rvv_vfwsub_wf
__builtin_rvv_vfwsub_wf_m
__builtin_rvv_vfmul_vv
__builtin_rvv_vfmul_vv_m
__builtin_rvv_vfmul_vf
__builtin_rvv_vfmul_vf_m
__builtin_rvv_vfdiv_vv
__builtin_rvv_vfdiv_vv_m
__builtin_rvv_vfdiv_vf
__builtin_rvv_vfdiv_vf_m
__builtin_rvv_vfrdiv_vf
__builtin_rvv_vfrdiv_vf_m
__builtin_rvv_vfwmul_vv
__builtin_rvv_vfwmul_vv_m
__builtin_rvv_vfwmul_vf
__builtin_rvv_vfwmul_vf_m
__builtin_rvv_vfmacc_vv
__builtin_rvv_vfmacc_vv_m
__builtin_rvv_vfmacc_vf
__builtin_rvv_vfmacc_vf_m
__builtin_rvv_vfnmacc_vv
__builtin_rvv_vfnmacc_vv_m
__builtin_rvv_vfnmacc_vf
__builtin_rvv_vfnmacc_vf_m
__builtin_rvv_vfmsac_vv
__builtin_rvv_vfmsac_vv_m
__builtin_rvv_vfmsac_vf
__builtin_rvv_vfmsac_vf_m
__builtin_rvv_vfnmsac_vv
__builtin_rvv_vfnmsac_vv_m
__builtin_rvv_vfnmsac_vf
__builtin_rvv_vfnmsac_vf_m
__builtin_rvv_vfmadd_vv
__builtin_rvv_vfmadd_vv_m
__builtin_rvv_vfmadd_vf
__builtin_rvv_vfmadd_vf_m
__builtin_rvv_vfnmadd_vv
__builtin_rvv_vfnmadd_vv_m
__builtin_rvv_vfnmadd_vf
__builtin_rvv_vfnmadd_vf_m
__builtin_rvv_vfmsub_vv
__builtin_rvv_vfmsub_vv_m
__builtin_rvv_vfmsub_vf
__builtin_rvv_vfmsub_vf_m
__builtin_rvv_vfnmsub_vv
__builtin_rvv_vfnmsub_vv_m
__builtin_rvv_vfnmsub_vf
__builtin_rvv_vfnmsub_vf_m
__builtin_rvv_vfwmacc_vv
__builtin_rvv_vfwmacc_vv_m
__builtin_rvv_vfwmacc_vf
__builtin_rvv_vfwmacc_vf_m
__builtin_rvv_vfwnmacc_vv
__builtin_rvv_vfwnmacc_vv_m
__builtin_rvv_vfwnmacc_vf
__builtin_rvv_vfwnmacc_vf_m
__builtin_rvv_vfwmsac_vv
__builtin_rvv_vfwmsac_vv_m
__builtin_rvv_vfwmsac_vf
__builtin_rvv_vfwmsac_vf_m
__builtin_rvv_vfwnmsac_vv
__builtin_rvv_vfwnmsac_vv_m
__builtin_rvv_vfwnmsac_vf
__builtin_rvv_vfwnmsac_vf_m
__builtin_rvv_vfmin_vv
__builtin_rvv_vfmin_vv_m
__builtin_rvv_vfmin_vf
__builtin_rvv_vfmin_vf_m
__builtin_rvv_vfmax_vv
__builtin_rvv_vfmax_vv_m
__builtin_rvv_vfmax_vf
__builtin_rvv_vfmax_vf_m
__builtin_rvv_vfsgnj_vv
__builtin_rvv_vfsgnj_vv_m
__builtin_rvv_vfsgnj_vf
__builtin_rvv_vfsgnj_vf_m
__builtin_rvv_vfsgnjn_vv
__builtin_rvv_vfsgnjn_vv_m
__builtin_rvv_vfsgnjn_vf
__builtin_rvv_vfsgnjn_vf_m
__builtin_rvv_vfsgnjx_vv
__builtin_rvv_vfsgnjx_vv_m
__builtin_rvv_vfsgnjx_vf
__builtin_rvv_vfsgnjx_vf_m
__builtin_rvv_vfabs_v
__builtin_rvv_vfabs_v_m
__builtin_rvv_vmfeq_vv
__builtin_rvv_vmfeq_vv_m
__builtin_rvv_vmfeq_vf
__builtin_rvv_vmfeq_vf_m
__builtin_rvv_vmfne_vv
__builtin_rvv_vmfne_vv_m
__builtin_rvv_vmfne_vf
__builtin_rvv_vmfne_vf_m
__builtin_rvv_vmflt_vv
__builtin_rvv_vmflt_vv_m
__builtin_rvv_vmflt_vf
__builtin_rvv_vmflt_vf_m
__builtin_rvv_vmfle_vv
__builtin_rvv_vmfle_vv_m
__builtin_rvv_vmfle_vf
__builtin_rvv_vmfle_vf_m
__builtin_rvv_vmfgt_vv
__builtin_rvv_vmfgt_vv_m
__builtin_rvv_vmfgt_vf
__builtin_rvv_vmfgt_vf_m
__builtin_rvv_vmfge_vv
__builtin_rvv_vmfge_vv_m
__builtin_rvv_vmfge_vf
__builtin_rvv_vmfge_vf_m
__builtin_rvv_vfmerge_vfm
__builtin_rvv_vfmv_v_f
__builtin_rvv_vredsum_vs
__builtin_rvv_vredsum_vs_m
__builtin_rvv_vredmaxu_vs
__builtin_rvv_vredmaxu_vs_m
__builtin_rvv_vredmax_vs
__builtin_rvv_vredmax_vs_m
__builtin_rvv_vredminu_vs
__builtin_rvv_vredminu_vs_m
__builtin_rvv_vredmin_vs
__builtin_rvv_vredmin_vs_m
__builtin_rvv_vredand_vs
__builtin_rvv_vredand_vs_m
__builtin_rvv_vredor_vs
__builtin_rvv_vredor_vs_m
__builtin_rvv_vredxor_vs
__builtin_rvv_vredxor_vs_m
__builtin_rvv_vwredsum_vs
__builtin_rvv_vwredsum_vs_m
__builtin_rvv_vwredsumu_vs
__builtin_rvv_vwredsumu_vs_m
__builtin_rvv_vfredmax_vs
__builtin_rvv_vfredmax_vs_m
__builtin_rvv_vfredmin_vs
__builtin_rvv_vfredmin_vs_m
__builtin_rvv_vfredusum_vs
__builtin_rvv_vfredusum_vs_m
__builtin_rvv_vfredosum_vs
__builtin_rvv_vfredosum_vs_m
__builtin_rvv_vfwredusum_vs
__builtin_rvv_vfwredusum_vs_m
__builtin_rvv_vfwredosum_vs
__builtin_rvv_vfwredosum_vs_m
__builtin_rvv_vmnot_m
__builtin_rvv_viota_m
__builtin_rvv_viota_m_m
__builtin_rvv_vid_v
__builtin_rvv_vid_v_m
__builtin_rvv_vmv_x_s
__builtin_rvv_vmv_s_x
__builtin_rvv_vfmv_f_s
__builtin_rvv_vfmv_s_f
__builtin_rvv_vfmv_s_x
__builtin_rvv_vslideup_vx
__builtin_rvv_vslideup_vx_m
__builtin_rvv_vslidedown_vx
__builtin_rvv_vslidedown_vx_m
__builtin_rvv_vslide1up_vx
__builtin_rvv_vslide1up_vx_m
__builtin_rvv_vfslide1up_vf
__builtin_rvv_vfslide1up_vf_m
__builtin_rvv_vslide1down_vx
__builtin_rvv_vslide1down_vx_m
__builtin_rvv_vfslide1down_vf
__builtin_rvv_vfslide1down_vf_m
__builtin_rvv_vrgather_vv
__builtin_rvv_vrgather_vv_m
__builtin_rvv_vrgather_vx
__builtin_rvv_vrgather_vx_m
__builtin_rvv_vrgatherei16_vv
__builtin_rvv_vrgatherei16_vv_m
__builtin_rvv_vcompress_vm
__builtin_rvv_vget_v
__builtin_rvv_vset_v
__builtin_rvv_vlseg2e8_v
__builtin_rvv_vlseg2e8_v_m
__builtin_rvv_vsoxei8_v
__builtin_rvv_vsoxei8_v_m
__builtin_rvv_vsoxei16_v
__builtin_rvv_vsoxei16_v_m
__builtin_rvv_vsoxei32_v
__builtin_rvv_vsoxei32_v_m
__builtin_rvv_vsoxei64_v
__builtin_rvv_vsoxei64_v_m
__builtin_rvv_vle16ff_v
__builtin_rvv_vle16ff_v_m
__builtin_rvv_vle32ff_v
__builtin_rvv_vle32ff_v_m
__builtin_rvv_vle64ff_v
__builtin_rvv_vle64ff_v_m
__builtin_rvv_vlseg3e8_v
__builtin_rvv_vlseg3e8_v_m
__builtin_rvv_vlseg4e8_v
__builtin_rvv_vlseg4e8_v_m
__builtin_rvv_vlseg5e8_v
__builtin_rvv_vlseg5e8_v_m
__builtin_rvv_vle8_v
__builtin_rvv_vle8_v_m
__builtin_rvv_vlseg6e8_v
__builtin_rvv_vlseg6e8_v_m
__builtin_rvv_vlseg7e8_v
__builtin_rvv_vlseg7e8_v_m
__builtin_rvv_vlseg8e8_v
__builtin_rvv_vlseg8e8_v_m
__builtin_rvv_vlseg2e16_v
__builtin_rvv_vlseg2e16_v_m
__builtin_rvv_vlseg3e16_v
__builtin_rvv_vlseg3e16_v_m
__builtin_rvv_vlseg4e16_v
__builtin_rvv_vlseg4e16_v_m
__builtin_rvv_vlseg5e16_v
__builtin_rvv_vlseg5e16_v_m
__builtin_rvv_vlseg6e16_v
__builtin_rvv_vlseg6e16_v_m
__builtin_rvv_vlseg7e16_v
__builtin_rvv_vlseg7e16_v_m
__builtin_rvv_vlseg8e16_v
__builtin_rvv_vlseg8e16_v_m
__builtin_rvv_vlseg2e32_v
__builtin_rvv_vlseg2e32_v_m
__builtin_rvv_vlseg3e32_v
__builtin_rvv_vlseg3e32_v_m
__builtin_rvv_vlseg4e32_v
__builtin_rvv_vlseg4e32_v_m
__builtin_rvv_vlseg5e32_v
__builtin_rvv_vlseg5e32_v_m
__builtin_rvv_vlseg6e32_v
__builtin_rvv_vlseg6e32_v_m
__builtin_rvv_vlseg7e32_v
__builtin_rvv_vlseg7e32_v_m
__builtin_rvv_vlseg8e32_v
__builtin_rvv_vlseg8e32_v_m
__builtin_rvv_vlseg2e64_v
__builtin_rvv_vlseg2e64_v_m
__builtin_rvv_vlseg3e64_v
__builtin_rvv_vlseg3e64_v_m
__builtin_rvv_vlseg4e64_v
__builtin_rvv_vlseg4e64_v_m
__builtin_rvv_vlseg5e64_v
__builtin_rvv_vlseg5e64_v_m
__builtin_rvv_vlseg6e64_v
__builtin_rvv_vlseg6e64_v_m
__builtin_rvv_vlseg7e64_v
__builtin_rvv_vlseg7e64_v_m
__builtin_rvv_vlseg8e64_v
__builtin_rvv_vlseg8e64_v_m
__builtin_rvv_vlseg3e8ff_v
__builtin_rvv_vlseg3e8ff_v_m
__builtin_rvv_vlseg4e8ff_v
__builtin_rvv_vlseg4e8ff_v_m
__builtin_rvv_vlseg5e8ff_v
__builtin_rvv_vlseg5e8ff_v_m
__builtin_rvv_vlseg6e8ff_v
__builtin_rvv_vlseg6e8ff_v_m
__builtin_rvv_vlseg7e8ff_v
__builtin_rvv_vlseg7e8ff_v_m
__builtin_rvv_vlseg8e8ff_v
__builtin_rvv_vlseg8e8ff_v_m
__builtin_rvv_vlseg2e16ff_v
__builtin_rvv_vlseg2e16ff_v_m
__builtin_rvv_vlseg3e16ff_v
__builtin_rvv_vlseg3e16ff_v_m
__builtin_rvv_vlseg4e16ff_v
__builtin_rvv_vlseg4e16ff_v_m
__builtin_rvv_vlseg5e16ff_v
__builtin_rvv_vlseg5e16ff_v_m
__builtin_rvv_vlseg6e16ff_v
__builtin_rvv_vlseg6e16ff_v_m
__builtin_rvv_vlseg7e16ff_v
__builtin_rvv_vlseg7e16ff_v_m
__builtin_rvv_vlseg8e16ff_v
__builtin_rvv_vlseg8e16ff_v_m
__builtin_rvv_vlseg2e32ff_v
__builtin_rvv_vlseg2e32ff_v_m
__builtin_rvv_vlseg3e32ff_v
__builtin_rvv_vlseg3e32ff_v_m
__builtin_rvv_vlseg2e8ff_v
__builtin_rvv_vlseg2e8ff_v_m
__builtin_rvv_vlseg4e32ff_v
__builtin_rvv_vlseg4e32ff_v_m
__builtin_rvv_vlseg5e32ff_v
__builtin_rvv_vlseg5e32ff_v_m
__builtin_rvv_vlseg6e32ff_v
__builtin_rvv_vlseg6e32ff_v_m
__builtin_rvv_vlseg7e32ff_v
__builtin_rvv_vlseg7e32ff_v_m
__builtin_rvv_vlseg8e32ff_v
__builtin_rvv_vlseg8e32ff_v_m
__builtin_rvv_vlseg2e64ff_v
__builtin_rvv_vlseg2e64ff_v_m
__builtin_rvv_vlseg3e64ff_v
__builtin_rvv_vlseg3e64ff_v_m
__builtin_rvv_vlseg4e64ff_v
__builtin_rvv_vlseg4e64ff_v_m
__builtin_rvv_vlseg5e64ff_v
__builtin_rvv_vlseg5e64ff_v_m
__builtin_rvv_vlseg6e64ff_v
__builtin_rvv_vlseg6e64ff_v_m
__builtin_rvv_vlsseg2e8_v
__builtin_rvv_vlsseg2e8_v_m
__builtin_rvv_vlseg7e64ff_v
__builtin_rvv_vlseg7e64ff_v_m
__builtin_rvv_vlseg8e64ff_v
__builtin_rvv_vlseg8e64ff_v_m
__builtin_rvv_vluxseg2ei8_v
__builtin_rvv_vluxseg2ei8_v_m
__builtin_rvv_vlsseg3e8_v
__builtin_rvv_vlsseg3e8_v_m
__builtin_rvv_vlsseg4e8_v
__builtin_rvv_vlsseg4e8_v_m
__builtin_rvv_vlsseg5e8_v
__builtin_rvv_vlsseg5e8_v_m
__builtin_rvv_vlsseg6e8_v
__builtin_rvv_vlsseg6e8_v_m
__builtin_rvv_vlsseg7e8_v
__builtin_rvv_vlsseg7e8_v_m
__builtin_rvv_vlsseg8e8_v
__builtin_rvv_vlsseg8e8_v_m
__builtin_rvv_vlsseg2e16_v
__builtin_rvv_vlsseg2e16_v_m
__builtin_rvv_vsseg2e8_v
__builtin_rvv_vsseg2e8_v_m
__builtin_rvv_vlsseg3e16_v
__builtin_rvv_vlsseg3e16_v_m
__builtin_rvv_vlsseg4e16_v
__builtin_rvv_vlsseg4e16_v_m
__builtin_rvv_vlsseg5e16_v
__builtin_rvv_vlsseg5e16_v_m
__builtin_rvv_vlsseg6e16_v
__builtin_rvv_vlsseg6e16_v_m
__builtin_rvv_vlsseg7e16_v
__builtin_rvv_vlsseg7e16_v_m
__builtin_rvv_vlsseg8e16_v
__builtin_rvv_vlsseg8e16_v_m
__builtin_rvv_vlsseg2e32_v
__builtin_rvv_vlsseg2e32_v_m
__builtin_rvv_vlsseg3e32_v
__builtin_rvv_vlsseg3e32_v_m
__builtin_rvv_vlsseg4e32_v
__builtin_rvv_vlsseg4e32_v_m
__builtin_rvv_vlsseg5e32_v
__builtin_rvv_vlsseg5e32_v_m
__builtin_rvv_vlsseg6e32_v
__builtin_rvv_vlsseg6e32_v_m
__builtin_rvv_vlsseg7e32_v
__builtin_rvv_vlsseg7e32_v_m
__builtin_rvv_vlsseg8e32_v
__builtin_rvv_vlsseg8e32_v_m
__builtin_rvv_vlsseg2e64_v
__builtin_rvv_vlsseg2e64_v_m
__builtin_rvv_vlsseg3e64_v
__builtin_rvv_vlsseg3e64_v_m
__builtin_rvv_vlsseg4e64_v
__builtin_rvv_vlsseg4e64_v_m
__builtin_rvv_vlsseg5e64_v
__builtin_rvv_vlsseg5e64_v_m
__builtin_rvv_vlsseg6e64_v
__builtin_rvv_vlsseg6e64_v_m
__builtin_rvv_vlsseg7e64_v
__builtin_rvv_vlsseg7e64_v_m
__builtin_rvv_vlsseg8e64_v
__builtin_rvv_vlsseg8e64_v_m
__builtin_rvv_vle8ff_v
__builtin_rvv_vle8ff_v_m
__builtin_rvv_vluxseg3ei8_v
__builtin_rvv_vluxseg3ei8_v_m
__builtin_rvv_vluxseg4ei8_v
__builtin_rvv_vluxseg4ei8_v_m
__builtin_rvv_vluxseg5ei8_v
__builtin_rvv_vluxseg5ei8_v_m
__builtin_rvv_vluxseg6ei8_v
__builtin_rvv_vluxseg6ei8_v_m
__builtin_rvv_vluxseg7ei8_v
__builtin_rvv_vluxseg7ei8_v_m
__builtin_rvv_vluxseg8ei8_v
__builtin_rvv_vluxseg8ei8_v_m
__builtin_rvv_vluxseg2ei16_v
__builtin_rvv_vluxseg2ei16_v_m
__builtin_rvv_vluxseg3ei16_v
__builtin_rvv_vluxseg3ei16_v_m
__builtin_rvv_vluxseg4ei16_v
__builtin_rvv_vluxseg4ei16_v_m
__builtin_rvv_vluxseg5ei16_v
__builtin_rvv_vluxseg5ei16_v_m
__builtin_rvv_vluxseg6ei16_v
__builtin_rvv_vluxseg6ei16_v_m
__builtin_rvv_vluxseg7ei16_v
__builtin_rvv_vluxseg7ei16_v_m
__builtin_rvv_vluxseg8ei16_v
__builtin_rvv_vluxseg8ei16_v_m
__builtin_rvv_vluxseg2ei32_v
__builtin_rvv_vluxseg2ei32_v_m
__builtin_rvv_vluxseg3ei32_v
__builtin_rvv_vluxseg3ei32_v_m
__builtin_rvv_vluxseg4ei32_v
__builtin_rvv_vluxseg4ei32_v_m
__builtin_rvv_vluxseg5ei32_v
__builtin_rvv_vluxseg5ei32_v_m
__builtin_rvv_vluxseg6ei32_v
__builtin_rvv_vluxseg6ei32_v_m
__builtin_rvv_vluxseg7ei32_v
__builtin_rvv_vluxseg7ei32_v_m
__builtin_rvv_vluxseg8ei32_v
__builtin_rvv_vluxseg8ei32_v_m
__builtin_rvv_vluxseg2ei64_v
__builtin_rvv_vluxseg2ei64_v_m
__builtin_rvv_vluxseg3ei64_v
__builtin_rvv_vluxseg3ei64_v_m
__builtin_rvv_vluxseg4ei64_v
__builtin_rvv_vluxseg4ei64_v_m
__builtin_rvv_vluxseg5ei64_v
__builtin_rvv_vluxseg5ei64_v_m
__builtin_rvv_vluxseg6ei64_v
__builtin_rvv_vluxseg6ei64_v_m
__builtin_rvv_vluxseg7ei64_v
__builtin_rvv_vluxseg7ei64_v_m
__builtin_rvv_vluxseg8ei64_v
__builtin_rvv_vluxseg8ei64_v_m
__builtin_rvv_vssseg2e8_v
__builtin_rvv_vssseg2e8_v_m
__builtin_rvv_vneg_v
__builtin_rvv_vneg_v_m
__builtin_rvv_vnot_v
__builtin_rvv_vnot_v_m
__builtin_rvv_vmmv_m
__builtin_rvv_vlse8_v
__builtin_rvv_vlse8_v_m
__builtin_rvv_vfneg_v
__builtin_rvv_vfneg_v_m
__builtin_rvv_vwcvtu_x_x_v
__builtin_rvv_vwcvtu_x_x_v_m
__builtin_rvv_vle16_v
__builtin_rvv_vle16_v_m
__builtin_rvv_vle32_v
__builtin_rvv_vle32_v_m
__builtin_rvv_vle64_v
__builtin_rvv_vle64_v_m
__builtin_rvv_vse16_v
__builtin_rvv_vse16_v_m
__builtin_rvv_vse32_v
__builtin_rvv_vse32_v_m
__builtin_rvv_vse64_v
__builtin_rvv_vse64_v_m
__builtin_rvv_vlse16_v
__builtin_rvv_vlse16_v_m
__builtin_rvv_vlse32_v
__builtin_rvv_vlse32_v_m
__builtin_rvv_vlse64_v
__builtin_rvv_vlse64_v_m
__builtin_rvv_vfclass_v
__builtin_rvv_vfclass_v_m
__builtin_rvv_vfcvt_f_x_v
__builtin_rvv_vfcvt_f_x_v_m
__builtin_rvv_vfcvt_f_xu_v
__builtin_rvv_vfcvt_f_xu_v_m
__builtin_rvv_vfcvt_rtz_x_f_v
__builtin_rvv_vfcvt_rtz_x_f_v_m
__builtin_rvv_vfcvt_rtz_xu_f_v
__builtin_rvv_vfcvt_rtz_xu_f_v_m
__builtin_rvv_vfcvt_x_f_v
__builtin_rvv_vfcvt_x_f_v_m
__builtin_rvv_vfcvt_xu_f_v
__builtin_rvv_vfcvt_xu_f_v_m
__builtin_rvv_vfirst_m
__builtin_rvv_vfirst_m_m
__builtin_rvv_vfncvt_f_f_w
__builtin_rvv_vfncvt_f_f_w_m
__builtin_rvv_vfncvt_f_x_w
__builtin_rvv_vfncvt_f_x_w_m
__builtin_rvv_vfncvt_f_xu_w
__builtin_rvv_vfncvt_f_xu_w_m
__builtin_rvv_vfncvt_rod_f_f_w
__builtin_rvv_vfncvt_rod_f_f_w_m
__builtin_rvv_vfncvt_rtz_x_f_w
__builtin_rvv_vfncvt_rtz_x_f_w_m
__builtin_rvv_vfncvt_rtz_xu_f_w
__builtin_rvv_vfncvt_rtz_xu_f_w_m
__builtin_rvv_vfncvt_x_f_w
__builtin_rvv_vfncvt_x_f_w_m
__builtin_rvv_vfncvt_xu_f_w
__builtin_rvv_vfncvt_xu_f_w_m
__builtin_rvv_vfrec7_v
__builtin_rvv_vfrec7_v_m
__builtin_rvv_vfrsqrt7_v
__builtin_rvv_vfrsqrt7_v_m
__builtin_rvv_vfsqrt_v
__builtin_rvv_vfsqrt_v_m
__builtin_rvv_vfwcvt_f_f_v
__builtin_rvv_vfwcvt_f_f_v_m
__builtin_rvv_vfwcvt_f_x_v
__builtin_rvv_vfwcvt_f_x_v_m
__builtin_rvv_vfwcvt_f_xu_v
__builtin_rvv_vfwcvt_f_xu_v_m
__builtin_rvv_vfwcvt_rtz_x_f_v
__builtin_rvv_vfwcvt_rtz_x_f_v_m
__builtin_rvv_vfwcvt_rtz_xu_f_v
__builtin_rvv_vfwcvt_rtz_xu_f_v_m
__builtin_rvv_vfwcvt_x_f_v
__builtin_rvv_vfwcvt_x_f_v_m
__builtin_rvv_vfwcvt_xu_f_v
__builtin_rvv_vfwcvt_xu_f_v_m
__builtin_rvv_vlm_v
__builtin_rvv_vlmul_ext_v
__builtin_rvv_vlmul_trunc_v
__builtin_rvv_vmand_mm
__builtin_rvv_vmandnot_mm
__builtin_rvv_vmclr_m
__builtin_rvv_vmnand_mm
__builtin_rvv_vmnor_mm
__builtin_rvv_vmor_mm
__builtin_rvv_vmornot_mm
__builtin_rvv_vmsbf_m
__builtin_rvv_vmsbf_m_m
__builtin_rvv_vmset_m
__builtin_rvv_vmsif_m
__builtin_rvv_vmsif_m_m
__builtin_rvv_vmsof_m
__builtin_rvv_vmsof_m_m
__builtin_rvv_vmxnor_mm
__builtin_rvv_vmxor_mm
__builtin_rvv_vpopc_m
__builtin_rvv_vpopc_m_m
__builtin_rvv_vreinterpret_v
__builtin_rvv_vsetvli
zzIzIz
__builtin_rvv_vsetvlimax
zIzIz
__builtin_rvv_vsext_vf2
__builtin_rvv_vsext_vf2_m
__builtin_rvv_vsext_vf4
__builtin_rvv_vsext_vf4_m
__builtin_rvv_vsext_vf8
__builtin_rvv_vsext_vf8_m
__builtin_rvv_vsm_v
__builtin_rvv_vundefined
__builtin_rvv_vzext_vf2
__builtin_rvv_vzext_vf2_m
__builtin_rvv_vzext_vf4
__builtin_rvv_vzext_vf4_m
__builtin_rvv_vzext_vf8
__builtin_rvv_vzext_vf8_m
__builtin_riscv_orc_b_32
ZiZi
experimental-zbb
__builtin_riscv_orc_b_64
experimental-zbb,64bit
__builtin_riscv_clmul
LiLiLi
experimental-zbc
__builtin_riscv_clmulh
__builtin_riscv_clmulr
__builtin_riscv_bcompress_32
ZiZiZi
experimental-zbe
__builtin_riscv_bcompress_64
experimental-zbe,64bit
__builtin_riscv_bdecompress_32
__builtin_riscv_bdecompress_64
__builtin_riscv_grev_32
experimental-zbp
__builtin_riscv_grev_64
experimental-zbp,64bit
__builtin_riscv_gorc_32
__builtin_riscv_gorc_64
__builtin_riscv_shfl_32
__builtin_riscv_shfl_64
__builtin_riscv_unshfl_32
__builtin_riscv_unshfl_64
__builtin_riscv_xperm_n
__builtin_riscv_xperm_b
__builtin_riscv_xperm_h
__builtin_riscv_xperm_w
__builtin_riscv_crc32_b
LiLi
experimental-zbr
__builtin_riscv_crc32_h
__builtin_riscv_crc32_w
__builtin_riscv_crc32c_b
__builtin_riscv_crc32c_h
__builtin_riscv_crc32c_w
__builtin_riscv_crc32_d
__builtin_riscv_crc32c_d
SPIR
SPIR32
SPIR64
sparc
SOFT_FLOAT
__sparcv8
__sparcv8__
__sparcv9
__sparcv9__
__sparc_v9__
__sparc_v8__
__leon__
__ma2100
__ma2150
__ma2155
__ma2450
__ma2455
__ma2080
__ma2085
__ma2480
__ma2485
__ma2x5x
__ma2x5x__
__ma2x8x
__ma2x8x__
__myriad2__
__myriad2
__arch64__
__sparc64__
supersparc
sparclite
f934
hypersparc
sparclite86x
sparclet
tsc701
ultrasparc
ultrasparc3
niagara
niagara2
niagara3
niagara4
ma2100
ma2150
ma2155
ma2450
ma2455
ma2x5x
ma2080
ma2085
ma2480
ma2485
ma2x8x
myriad2
myriad2.1
myriad2.2
myriad2.3
leon2
at697e
at697f
leon3
ut699
gr712rc
leon4
gr740
__builtin_tbegin_nofloat
__builtin_tbeginc
__builtin_tx_nesting_depth
__builtin_tx_assist
__builtin_non_tx_store
vULi*ULi
__builtin_s390_lcbb
UivC*Ii
__builtin_s390_vlbb
V16ScvC*Ii
__builtin_s390_vll
V16ScUivC*
__builtin_s390_vstl
vV16ScUiv*
__builtin_s390_vperm
__builtin_s390_vpdi
V2ULLiV2ULLiV2ULLiIi
__builtin_s390_vpksh
__builtin_s390_vpkshs
V16ScV8SsV8Ssi*
__builtin_s390_vpksf
__builtin_s390_vpksfs
V8SsV4SiV4Sii*
__builtin_s390_vpksg
__builtin_s390_vpksgs
V4SiV2SLLiV2SLLii*
__builtin_s390_vpklsh
__builtin_s390_vpklshs
V16UcV8UsV8Usi*
__builtin_s390_vpklsf
__builtin_s390_vpklsfs
V8UsV4UiV4Uii*
__builtin_s390_vpklsg
__builtin_s390_vpklsgs
V4UiV2ULLiV2ULLii*
__builtin_s390_vuphb
V8SsV16Sc
__builtin_s390_vuphh
__builtin_s390_vuphf
__builtin_s390_vuplb
__builtin_s390_vuplhw
__builtin_s390_vuplf
__builtin_s390_vuplhb
V8UsV16Uc
__builtin_s390_vuplhh
V4UiV8Us
__builtin_s390_vuplhf
V2ULLiV4Ui
__builtin_s390_vupllb
__builtin_s390_vupllh
__builtin_s390_vupllf
__builtin_s390_vaq
__builtin_s390_vacq
__builtin_s390_vaccb
__builtin_s390_vacch
__builtin_s390_vaccf
__builtin_s390_vaccg
__builtin_s390_vaccq
__builtin_s390_vacccq
__builtin_s390_vavgb
__builtin_s390_vavgh
__builtin_s390_vavgf
__builtin_s390_vavgg
__builtin_s390_vavglb
__builtin_s390_vavglh
__builtin_s390_vavglf
__builtin_s390_vavglg
__builtin_s390_vceqbs
V16ScV16ScV16Sci*
__builtin_s390_vceqhs
V8SsV8SsV8Ssi*
__builtin_s390_vceqfs
V4SiV4SiV4Sii*
__builtin_s390_vceqgs
V2SLLiV2SLLiV2SLLii*
__builtin_s390_vchbs
__builtin_s390_vchhs
__builtin_s390_vchfs
__builtin_s390_vchgs
__builtin_s390_vchlbs
V16ScV16UcV16Uci*
__builtin_s390_vchlhs
V8SsV8UsV8Usi*
__builtin_s390_vchlfs
V4SiV4UiV4Uii*
__builtin_s390_vchlgs
V2SLLiV2ULLiV2ULLii*
__builtin_s390_vcksm
__builtin_s390_vclzb
__builtin_s390_vclzh
__builtin_s390_vclzf
__builtin_s390_vclzg
__builtin_s390_vctzb
__builtin_s390_vctzh
__builtin_s390_vctzf
__builtin_s390_vctzg
__builtin_s390_verimb
__builtin_s390_verimh
V8UsV8UsV8UsV8UsIi
__builtin_s390_verimf
V4UiV4UiV4UiV4UiIi
__builtin_s390_verimg
__builtin_s390_verllb
V16UcV16UcUi
__builtin_s390_verllh
V8UsV8UsUi
__builtin_s390_verllf
V4UiV4UiUi
__builtin_s390_verllg
V2ULLiV2ULLiUi
__builtin_s390_verllvb
__builtin_s390_verllvh
__builtin_s390_verllvf
__builtin_s390_verllvg
__builtin_s390_vgfmb
__builtin_s390_vgfmh
__builtin_s390_vgfmf
__builtin_s390_vgfmg
V16UcV2ULLiV2ULLi
__builtin_s390_vgfmab
V8UsV16UcV16UcV8Us
__builtin_s390_vgfmah
__builtin_s390_vgfmaf
V2ULLiV4UiV4UiV2ULLi
__builtin_s390_vgfmag
V16UcV2ULLiV2ULLiV16Uc
__builtin_s390_vmahb
__builtin_s390_vmahh
__builtin_s390_vmahf
__builtin_s390_vmalhb
__builtin_s390_vmalhh
__builtin_s390_vmalhf
__builtin_s390_vmaeb
V8SsV16ScV16ScV8Ss
__builtin_s390_vmaeh
__builtin_s390_vmaef
V2SLLiV4SiV4SiV2SLLi
__builtin_s390_vmaleb
__builtin_s390_vmaleh
__builtin_s390_vmalef
__builtin_s390_vmaob
__builtin_s390_vmaoh
__builtin_s390_vmaof
__builtin_s390_vmalob
__builtin_s390_vmaloh
__builtin_s390_vmalof
__builtin_s390_vmhb
__builtin_s390_vmhh
__builtin_s390_vmhf
__builtin_s390_vmlhb
__builtin_s390_vmlhh
__builtin_s390_vmlhf
__builtin_s390_vmeb
__builtin_s390_vmeh
__builtin_s390_vmef
__builtin_s390_vmleb
__builtin_s390_vmleh
__builtin_s390_vmlef
__builtin_s390_vmob
__builtin_s390_vmoh
__builtin_s390_vmof
__builtin_s390_vmlob
__builtin_s390_vmloh
__builtin_s390_vmlof
__builtin_s390_vpopctb
__builtin_s390_vpopcth
__builtin_s390_vpopctf
__builtin_s390_vpopctg
__builtin_s390_vsq
__builtin_s390_vsbcbiq
__builtin_s390_vsbiq
__builtin_s390_vscbib
__builtin_s390_vscbih
__builtin_s390_vscbif
__builtin_s390_vscbig
__builtin_s390_vscbiq
__builtin_s390_vsl
__builtin_s390_vslb
__builtin_s390_vsldb
__builtin_s390_vsra
__builtin_s390_vsrab
__builtin_s390_vsrl
__builtin_s390_vsrlb
__builtin_s390_vsumb
V4UiV16UcV16Uc
__builtin_s390_vsumh
__builtin_s390_vsumgh
V2ULLiV8UsV8Us
__builtin_s390_vsumgf
__builtin_s390_vsumqf
V16UcV4UiV4Ui
__builtin_s390_vsumqg
__builtin_s390_vtm
iV16UcV16Uc
__builtin_s390_vfaeb
__builtin_s390_vfaebs
V16UcV16UcV16UcIii*
__builtin_s390_vfaeh
V8UsV8UsV8UsIi
__builtin_s390_vfaehs
V8UsV8UsV8UsIii*
__builtin_s390_vfaef
V4UiV4UiV4UiIi
__builtin_s390_vfaefs
V4UiV4UiV4UiIii*
__builtin_s390_vfaezb
__builtin_s390_vfaezbs
__builtin_s390_vfaezh
__builtin_s390_vfaezhs
__builtin_s390_vfaezf
__builtin_s390_vfaezfs
__builtin_s390_vfeeb
__builtin_s390_vfeebs
V16UcV16UcV16Uci*
__builtin_s390_vfeeh
__builtin_s390_vfeehs
V8UsV8UsV8Usi*
__builtin_s390_vfeef
__builtin_s390_vfeefs
V4UiV4UiV4Uii*
__builtin_s390_vfeezb
__builtin_s390_vfeezbs
__builtin_s390_vfeezh
__builtin_s390_vfeezhs
__builtin_s390_vfeezf
__builtin_s390_vfeezfs
__builtin_s390_vfeneb
__builtin_s390_vfenebs
__builtin_s390_vfeneh
__builtin_s390_vfenehs
__builtin_s390_vfenef
__builtin_s390_vfenefs
__builtin_s390_vfenezb
__builtin_s390_vfenezbs
__builtin_s390_vfenezh
__builtin_s390_vfenezhs
__builtin_s390_vfenezf
__builtin_s390_vfenezfs
__builtin_s390_vistrb
__builtin_s390_vistrbs
V16UcV16Uci*
__builtin_s390_vistrh
__builtin_s390_vistrhs
V8UsV8Usi*
__builtin_s390_vistrf
__builtin_s390_vistrfs
V4UiV4Uii*
__builtin_s390_vstrcb
__builtin_s390_vstrcbs
V16UcV16UcV16UcV16UcIii*
__builtin_s390_vstrch
__builtin_s390_vstrchs
V8UsV8UsV8UsV8UsIii*
__builtin_s390_vstrcf
__builtin_s390_vstrcfs
V4UiV4UiV4UiV4UiIii*
__builtin_s390_vstrczb
__builtin_s390_vstrczbs
__builtin_s390_vstrczh
__builtin_s390_vstrczhs
__builtin_s390_vstrczf
__builtin_s390_vstrczfs
__builtin_s390_vfcedbs
V2SLLiV2dV2di*
__builtin_s390_vfchdbs
__builtin_s390_vfchedbs
__builtin_s390_vfidb
V2dV2dIiIi
__builtin_s390_vflndb
__builtin_s390_vflpdb
__builtin_s390_vfmadb
__builtin_s390_vfmsdb
__builtin_s390_vfsqdb
__builtin_s390_vftcidb
V2SLLiV2dIii*
__builtin_s390_vlrl
__builtin_s390_vstrl
__builtin_s390_vbperm
__builtin_s390_vmslg
V16UcV2ULLiV2ULLiV16UcIi
__builtin_s390_vfmaxdb
V2dV2dV2dIi
__builtin_s390_vfmindb
__builtin_s390_vfnmadb
__builtin_s390_vfnmsdb
__builtin_s390_vfcesbs
V4SiV4fV4fi*
__builtin_s390_vfchsbs
__builtin_s390_vfchesbs
__builtin_s390_vfisb
V4fV4fIiIi
__builtin_s390_vfmaxsb
V4fV4fV4fIi
__builtin_s390_vfminsb
__builtin_s390_vflnsb
__builtin_s390_vflpsb
__builtin_s390_vfmasb
__builtin_s390_vfmssb
__builtin_s390_vfnmasb
__builtin_s390_vfnmssb
__builtin_s390_vfsqsb
__builtin_s390_vftcisb
V4SiV4fIii*
__builtin_s390_vsld
__builtin_s390_vsrd
__builtin_s390_vstrsb
V16UcV16UcV16UcV16Uci*
__builtin_s390_vstrsh
V16UcV8UsV8UsV16Uci*
__builtin_s390_vstrsf
V16UcV4UiV4UiV16Uci*
__builtin_s390_vstrszb
__builtin_s390_vstrszh
__builtin_s390_vstrszf
__builtin_s390_vlbrh
__builtin_s390_vlbrf
__builtin_s390_vlbrg
__builtin_s390_vclfnhs
V4fV8UsIi
__builtin_s390_vclfnls
__builtin_s390_vcrnfs
V8UsV4fV4fIi
__builtin_s390_vcfn
__builtin_s390_vcnf
systemz
arch8
arch9
arch10
arch11
arch12
arch13
arch14
__s390__
__s390x__
__zarch__
__ARCH__
__VX__
10304
z196
zEC12
__TCE__
__TCE_V1__
tcele
__TCELE__
__TCELE_V1__
__linux__
__ve
__ve__
__NEC__
__builtin_wasm_memory_size
__builtin_wasm_memory_grow
zIiz
__builtin_wasm_tls_size
bulk-memory
__builtin_wasm_tls_align
__builtin_wasm_tls_base
__builtin_wasm_min_f32
__builtin_wasm_max_f32
__builtin_wasm_min_f64
__builtin_wasm_max_f64
__builtin_wasm_throw
vIUiv*
exception-handling
__builtin_wasm_rethrow
__builtin_wasm_memory_atomic_wait32
ii*iLLi
atomics
__builtin_wasm_memory_atomic_wait64
iLLi*LLiLLi
__builtin_wasm_memory_atomic_notify
Uii*Ui
__builtin_wasm_trunc_s_i32_f32
__builtin_wasm_trunc_u_i32_f32
__builtin_wasm_trunc_s_i32_f64
__builtin_wasm_trunc_u_i32_f64
__builtin_wasm_trunc_s_i64_f32
__builtin_wasm_trunc_u_i64_f32
__builtin_wasm_trunc_s_i64_f64
__builtin_wasm_trunc_u_i64_f64
__builtin_wasm_trunc_saturate_s_i32_f32
nontrapping-fptoint
__builtin_wasm_trunc_saturate_u_i32_f32
__builtin_wasm_trunc_saturate_s_i32_f64
__builtin_wasm_trunc_saturate_u_i32_f64
__builtin_wasm_trunc_saturate_s_i64_f32
__builtin_wasm_trunc_saturate_u_i64_f32
__builtin_wasm_trunc_saturate_s_i64_f64
__builtin_wasm_trunc_saturate_u_i64_f64
__builtin_wasm_swizzle_i8x16
simd128
__builtin_wasm_add_sat_s_i8x16
__builtin_wasm_add_sat_u_i8x16
__builtin_wasm_add_sat_s_i16x8
__builtin_wasm_add_sat_u_i16x8
__builtin_wasm_sub_sat_s_i8x16
__builtin_wasm_sub_sat_u_i8x16
__builtin_wasm_sub_sat_s_i16x8
__builtin_wasm_sub_sat_u_i16x8
__builtin_wasm_abs_i8x16
__builtin_wasm_abs_i16x8
__builtin_wasm_abs_i32x4
V4iV4i
__builtin_wasm_abs_i64x2
V2LLiV2LLi
__builtin_wasm_min_s_i8x16
__builtin_wasm_min_u_i8x16
__builtin_wasm_max_s_i8x16
__builtin_wasm_max_u_i8x16
__builtin_wasm_min_s_i16x8
__builtin_wasm_min_u_i16x8
__builtin_wasm_max_s_i16x8
__builtin_wasm_max_u_i16x8
__builtin_wasm_min_s_i32x4
__builtin_wasm_min_u_i32x4
__builtin_wasm_max_s_i32x4
__builtin_wasm_max_u_i32x4
__builtin_wasm_avgr_u_i8x16
__builtin_wasm_avgr_u_i16x8
__builtin_wasm_popcnt_i8x16
__builtin_wasm_q15mulr_sat_s_i16x8
__builtin_wasm_extadd_pairwise_i8x16_s_i16x8
V8sV16Sc
__builtin_wasm_extadd_pairwise_i8x16_u_i16x8
__builtin_wasm_extadd_pairwise_i16x8_s_i32x4
__builtin_wasm_extadd_pairwise_i16x8_u_i32x4
__builtin_wasm_bitselect
__builtin_wasm_shuffle_i8x16
V16ScV16ScV16ScIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
__builtin_wasm_any_true_v128
iV16Sc
__builtin_wasm_all_true_i8x16
__builtin_wasm_all_true_i16x8
__builtin_wasm_all_true_i32x4
__builtin_wasm_all_true_i64x2
iV2LLi
__builtin_wasm_bitmask_i8x16
UiV16Sc
__builtin_wasm_bitmask_i16x8
UiV8s
__builtin_wasm_bitmask_i32x4
UiV4i
__builtin_wasm_bitmask_i64x2
UiV2LLi
__builtin_wasm_abs_f32x4
__builtin_wasm_abs_f64x2
__builtin_wasm_min_f32x4
__builtin_wasm_max_f32x4
__builtin_wasm_pmin_f32x4
__builtin_wasm_pmax_f32x4
__builtin_wasm_min_f64x2
__builtin_wasm_max_f64x2
__builtin_wasm_pmin_f64x2
__builtin_wasm_pmax_f64x2
__builtin_wasm_ceil_f32x4
__builtin_wasm_floor_f32x4
__builtin_wasm_trunc_f32x4
__builtin_wasm_nearest_f32x4
__builtin_wasm_ceil_f64x2
__builtin_wasm_floor_f64x2
__builtin_wasm_trunc_f64x2
__builtin_wasm_nearest_f64x2
__builtin_wasm_dot_s_i32x4_i16x8
V4iV8sV8s
__builtin_wasm_sqrt_f32x4
__builtin_wasm_sqrt_f64x2
__builtin_wasm_trunc_saturate_s_i32x4_f32x4
__builtin_wasm_trunc_saturate_u_i32x4_f32x4
__builtin_wasm_narrow_s_i8x16_i16x8
V16ScV8sV8s
__builtin_wasm_narrow_u_i8x16_i16x8
V16UcV8sV8s
__builtin_wasm_narrow_s_i16x8_i32x4
V8sV4iV4i
__builtin_wasm_narrow_u_i16x8_i32x4
V8UsV4iV4i
__builtin_wasm_trunc_sat_zero_s_f64x2_i32x4
V4iV2d
__builtin_wasm_trunc_sat_zero_u_f64x2_i32x4
__builtin_wasm_fma_f32x4
relaxed-simd
__builtin_wasm_fms_f32x4
__builtin_wasm_fma_f64x2
__builtin_wasm_fms_f64x2
__builtin_wasm_laneselect_i8x16
__builtin_wasm_laneselect_i16x8
__builtin_wasm_laneselect_i32x4
__builtin_wasm_laneselect_i64x2
__builtin_wasm_relaxed_swizzle_i8x16
__builtin_wasm_relaxed_min_f32x4
__builtin_wasm_relaxed_max_f32x4
__builtin_wasm_relaxed_min_f64x2
__builtin_wasm_relaxed_max_f64x2
experimental-mv
sign-ext
mutable-globals
tail-call
__wasm_simd128__
__wasm_relaxed_simd__
__wasm_nontrapping_fptoint__
__wasm_sign_ext__
__wasm_exception_handling__
__wasm_bulk_memory__
__wasm_atomics__
__wasm_mutable_globals__
__wasm_multivalue__
__wasm_tail_call__
__wasm_reference_types__
bleeding-edge
+simd128
-simd128
+relaxed-simd
-relaxed-simd
+nontrapping-fptoint
-nontrapping-fptoint
-sign-ext
-exception-handling
-bulk-memory
-atomics
-mutable-globals
+multivalue
-multivalue
+tail-call
-tail-call
+reference-types
-reference-types
wasm32
wasm64
generic
sse2
+general-regs-only
sse4.2
-popcnt
popcnt
-xsave
xsave
-crc32
crc32
sse4.1
+vaes
+pclmul
+vpclmulqdq
+lzcnt
+rdrnd
+fsgsbase
+bmi
+bmi2
+rtm
+prfchw
+rdseed
+adx
+tbm
+lwp
+fma
+f16c
+gfni
+avx512cd
+avx512vpopcntdq
+avx512vnni
+avx512bf16
+avx512er
+avx512fp16
+avx512pf
+avx512dq
+avx512bitalg
+avx512bw
+avx512vl
+avx512vbmi
+avx512vbmi2
+avx512ifma
+avx512vp2intersect
+sha
+shstk
+movbe
+sgx
+cx8
+fxsr
+xsave
+xsaveopt
+xsavec
+xsaves
+mwaitx
+pku
+clflushopt
+clwb
+wbnoinvd
+prefetchwt1
+clzero
+cldemote
+rdpid
+widekl
+retpoline-external-thunk
+sahf
+waitpkg
+movdiri
+movdir64b
+pconfig
+ptwrite
+invpcid
+enqcmd
+hreset
+amx-bf16
+amx-int8
+amx-tile
+avxvnni
+serialize
+tsxldtrk
+uintr
+crc32
+mmx
avx512f
__GCC_ASM_FLAG_OUTPUTS__
__code_model_
__amd64__
__amd64
__x86_64
__x86_64h
__x86_64h__
__SEG_GS
__SEG_FS
__seg_gs
__attribute__((address_space(256)))
__seg_fs
__attribute__((address_space(257)))
__pentium_mmx__
__tune_pentium_mmx__
pentium
__tune_pentium3__
__tune_pentium2__
nocona
atom
goldmont
goldmont_plus
tremont
corei7
__tune_lakemont__
__k6_2__
__tune_k6_2__
__k6_3__
__tune_k6_3__
athlon
__athlon_sse__
__tune_athlon_sse__
amdfam10
btver1
bdver1
bdver2
bdver3
bdver4
znver1
znver2
znver3
geode
__NO_MATH_INLINES
__AES__
__VAES__
__PCLMUL__
__VPCLMULQDQ__
__LAHF_SAHF__
__LZCNT__
__RDRND__
__FSGSBASE__
__BMI__
__BMI2__
__POPCNT__
__RTM__
__PRFCHW__
__RDSEED__
__ADX__
__TBM__
__LWP__
__MWAITX__
__MOVBE__
__XOP__
__FMA4__
__SSE4A__
__FMA__
__F16C__
__GFNI__
__AVX512CD__
__AVX512VPOPCNTDQ__
__AVX512VNNI__
__AVX512BF16__
__AVX512ER__
__AVX512FP16__
__AVX512PF__
__AVX512DQ__
__AVX512BITALG__
__AVX512BW__
__AVX512VL__
__AVX512VBMI__
__AVX512VBMI2__
__AVX512IFMA__
__AVX512VP2INTERSECT__
__SHA__
__FXSR__
__XSAVE__
__XSAVEOPT__
__XSAVEC__
__XSAVES__
__PKU__
__CLFLUSHOPT__
__CLWB__
__WBNOINVD__
__SHSTK__
__SGX__
__PREFETCHWT1__
__CLZERO__
__KL__
__WIDEKL__
__RDPID__
__CLDEMOTE__
__WAITPKG__
__MOVDIRI__
__MOVDIR64B__
__PCONFIG__
__PTWRITE__
__INVPCID__
__ENQCMD__
__HRESET__
__AMXTILE__
__AMXINT8__
__AMXBF16__
__AVXVNNI__
__SERIALIZE__
__TSXLDTRK__
__UINTR__
__CRC32__
__RETPOLINE__
__AVX512F__
__AVX2__
__AVX__
__SSE4_2__
__SSE4_1__
__SSSE3__
__SSE3__
__SSE2__
__SSE2_MATH__
__SSE__
__SSE_MATH__
_M_IX86_FP
__3dNOW_A__
__3dNOW__
__MMX__
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16
__SIZEOF_FLOAT128__
3dnow
3dnowa
amx-bf16
amx-int8
amx-tile
avx2
avx512cd
avx512vpopcntdq
avx512vnni
avx512bf16
avx512er
avx512fp16
avx512pf
avx512dq
avx512bitalg
avx512bw
avx512vl
avx512vbmi
avx512vbmi2
avx512ifma
avx512vp2intersect
bmi2
cldemote
clflushopt
clwb
clzero
enqcmd
f16c
fma4
fsgsbase
fxsr
gfni
invpcid
lzcnt
movdiri
movdir64b
mwaitx
pclmul
pconfig
ptwrite
rdpid
rdrnd
rdseed
serialize
shstk
sse3
ssse3
sse4a
tsxldtrk
uintr
vaes
vpclmulqdq
wbnoinvd
waitpkg
xsavec
xsaves
xsaveopt
pentium_iii
ivybridge
broadwell
+cmov
+cmov,+mmx
+cmov,+mmx,+sse
+cmov,+mmx,+sse,+sse2
+cmov,+mmx,+sse,+sse2,+sse3
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+movbe
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt,+avx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt,+f16c,+avx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+adx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512f,+adx,+avx512er,+avx512pf,+avx512cd
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+adx,+mpx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512dq,+avx512f,+adx,+avx512cd,+avx512bw,+avx512vl,+clwb
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512dq,+avx512f,+adx,+avx512ifma,+avx512cd,+avx512bw,+avx512vl,+avx512vbmi
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512f,+adx,+avx512er,+avx512pf,+avx512cd,+avx5124fmaps,+avx5124vnniw,+avx512vpopcntdq
{ax}
{bx}
{cx}
{dx}
{si}
{di}
{st}
{st(1)}
st(1)
st(2)
st(3)
st(4)
st(5)
st(6)
st(7)
argp
fpcr
dirflag
frame
xmm1
xmm2
xmm3
xmm4
xmm5
xmm6
xmm7
xmm8
xmm9
xmm10
xmm11
xmm12
xmm13
xmm14
xmm15
ymm0
ymm1
ymm2
ymm3
ymm4
ymm5
ymm6
ymm7
ymm8
ymm9
ymm10
ymm11
ymm12
ymm13
ymm14
ymm15
xmm16
xmm17
xmm18
xmm19
xmm20
xmm21
xmm22
xmm23
xmm24
xmm25
xmm26
xmm27
xmm28
xmm29
xmm30
xmm31
ymm16
ymm17
ymm18
ymm19
ymm20
ymm21
ymm22
ymm23
ymm24
ymm25
ymm26
ymm27
ymm28
ymm29
ymm30
ymm31
zmm0
zmm1
zmm2
zmm3
zmm4
zmm5
zmm6
zmm7
zmm8
zmm9
zmm10
zmm11
zmm12
zmm13
zmm14
zmm15
zmm16
zmm17
zmm18
zmm19
zmm20
zmm21
zmm22
zmm23
zmm24
zmm25
zmm26
zmm27
zmm28
zmm29
zmm30
zmm31
bnd0
bnd1
bnd2
bnd3
tmm0
tmm1
tmm2
tmm3
tmm4
tmm5
tmm6
tmm7
r10d
r10w
r10b
r11d
r11w
r11b
r12d
r12w
r12b
r13d
r13w
r13b
r14d
r14w
r14b
r15d
r15w
r15b
__builtin_cpu_init
__builtin_cpu_supports
bcC*
__builtin_cpu_is
__builtin_ia32_undef128
ncV:128:
__builtin_ia32_undef256
ncV:256:
__builtin_ia32_undef512
ncV:512:
__builtin_ia32_readeflags_u32
__builtin_ia32_writeeflags_u32
__builtin_ia32_femms
__builtin_ia32_pavgusb
V8cV8cV8c
ncV:64:
__builtin_ia32_pf2id
V2iV2f
__builtin_ia32_pfacc
V2fV2fV2f
__builtin_ia32_pfadd
__builtin_ia32_pfcmpeq
V2iV2fV2f
__builtin_ia32_pfcmpge
__builtin_ia32_pfcmpgt
__builtin_ia32_pfmax
__builtin_ia32_pfmin
__builtin_ia32_pfmul
__builtin_ia32_pfrcp
V2fV2f
__builtin_ia32_pfrcpit1
__builtin_ia32_pfrcpit2
__builtin_ia32_pfrsqrt
__builtin_ia32_pfrsqit1
__builtin_ia32_pfsub
__builtin_ia32_pfsubr
__builtin_ia32_pi2fd
V2fV2i
__builtin_ia32_pmulhrw
V4sV4sV4s
__builtin_ia32_pf2iw
__builtin_ia32_pfnacc
__builtin_ia32_pfpnacc
__builtin_ia32_pi2fw
__builtin_ia32_pswapdsf
__builtin_ia32_pswapdsi
V2iV2i
_mm_prefetch
vcC*i
__builtin_ia32_emms
__builtin_ia32_paddb
__builtin_ia32_paddw
__builtin_ia32_paddd
V2iV2iV2i
__builtin_ia32_paddsb
__builtin_ia32_paddsw
__builtin_ia32_paddusb
__builtin_ia32_paddusw
__builtin_ia32_psubb
__builtin_ia32_psubw
__builtin_ia32_psubd
__builtin_ia32_psubsb
__builtin_ia32_psubsw
__builtin_ia32_psubusb
__builtin_ia32_psubusw
__builtin_ia32_pmulhw
__builtin_ia32_pmullw
__builtin_ia32_pmaddwd
V2iV4sV4s
__builtin_ia32_pand
V1OiV1OiV1Oi
__builtin_ia32_pandn
__builtin_ia32_por
__builtin_ia32_pxor
__builtin_ia32_psllw
V4sV4sV1Oi
__builtin_ia32_pslld
V2iV2iV1Oi
__builtin_ia32_psllq
__builtin_ia32_psrlw
__builtin_ia32_psrld
__builtin_ia32_psrlq
__builtin_ia32_psraw
__builtin_ia32_psrad
__builtin_ia32_psllwi
V4sV4si
__builtin_ia32_pslldi
V2iV2ii
__builtin_ia32_psllqi
V1OiV1Oii
__builtin_ia32_psrlwi
__builtin_ia32_psrldi
__builtin_ia32_psrlqi
__builtin_ia32_psrawi
__builtin_ia32_psradi
__builtin_ia32_packsswb
V8cV4sV4s
__builtin_ia32_packssdw
V4sV2iV2i
__builtin_ia32_packuswb
__builtin_ia32_punpckhbw
__builtin_ia32_punpckhwd
__builtin_ia32_punpckhdq
__builtin_ia32_punpcklbw
__builtin_ia32_punpcklwd
__builtin_ia32_punpckldq
__builtin_ia32_pcmpeqb
__builtin_ia32_pcmpeqw
__builtin_ia32_pcmpeqd
__builtin_ia32_pcmpgtb
__builtin_ia32_pcmpgtw
__builtin_ia32_pcmpgtd
__builtin_ia32_maskmovq
vV8cV8cc*
nV:64:
__builtin_ia32_movntq
vV1Oi*V1Oi
__builtin_ia32_vec_init_v2si
V2iii
__builtin_ia32_vec_init_v4hi
V4sssss
__builtin_ia32_vec_init_v8qi
V8ccccccccc
__builtin_ia32_vec_ext_v2si
iV2ii
__builtin_ia32_cvtpi2ps
V4fV4fV2i
mmx,sse
__builtin_ia32_cvtps2pi
V2iV4f
__builtin_ia32_cvttps2pi
__builtin_ia32_pavgb
__builtin_ia32_pavgw
__builtin_ia32_pmaxsw
__builtin_ia32_pmaxub
__builtin_ia32_pminsw
__builtin_ia32_pminub
__builtin_ia32_pmovmskb
iV8c
__builtin_ia32_pmulhuw
__builtin_ia32_psadbw
V4sV8cV8c
__builtin_ia32_pshufw
V4sV4sIc
__builtin_ia32_vec_ext_v4hi
iV4sIi
__builtin_ia32_vec_set_v4hi
V4sV4siIi
__builtin_ia32_cvtpd2pi
V2iV2d
mmx,sse2
__builtin_ia32_cvtpi2pd
V2dV2i
__builtin_ia32_cvttpd2pi
__builtin_ia32_paddq
__builtin_ia32_pmuludq
V1OiV2iV2i
__builtin_ia32_psubq
__builtin_ia32_pabsb
V8cV8c
mmx,ssse3
__builtin_ia32_pabsd
__builtin_ia32_pabsw
V4sV4s
__builtin_ia32_palignr
V8cV8cV8cIc
__builtin_ia32_phaddd
__builtin_ia32_phaddsw
__builtin_ia32_phaddw
__builtin_ia32_phsubd
__builtin_ia32_phsubsw
__builtin_ia32_phsubw
__builtin_ia32_pmaddubsw
__builtin_ia32_pmulhrsw
__builtin_ia32_pshufb
__builtin_ia32_psignw
__builtin_ia32_psignb
__builtin_ia32_psignd
__builtin_ia32_comieq
__builtin_ia32_comilt
__builtin_ia32_comile
__builtin_ia32_comigt
__builtin_ia32_comige
__builtin_ia32_comineq
__builtin_ia32_ucomieq
__builtin_ia32_ucomilt
__builtin_ia32_ucomile
__builtin_ia32_ucomigt
__builtin_ia32_ucomige
__builtin_ia32_ucomineq
__builtin_ia32_comisdeq
__builtin_ia32_comisdlt
__builtin_ia32_comisdle
__builtin_ia32_comisdgt
__builtin_ia32_comisdge
__builtin_ia32_comisdneq
__builtin_ia32_ucomisdeq
__builtin_ia32_ucomisdlt
__builtin_ia32_ucomisdle
__builtin_ia32_ucomisdgt
__builtin_ia32_ucomisdge
__builtin_ia32_ucomisdneq
__builtin_ia32_cmpeqps
__builtin_ia32_cmpltps
__builtin_ia32_cmpleps
__builtin_ia32_cmpunordps
__builtin_ia32_cmpneqps
__builtin_ia32_cmpnltps
__builtin_ia32_cmpnleps
__builtin_ia32_cmpordps
__builtin_ia32_cmpeqss
__builtin_ia32_cmpltss
__builtin_ia32_cmpless
__builtin_ia32_cmpunordss
__builtin_ia32_cmpneqss
__builtin_ia32_cmpnltss
__builtin_ia32_cmpnless
__builtin_ia32_cmpordss
__builtin_ia32_minps
__builtin_ia32_maxps
__builtin_ia32_minss
__builtin_ia32_maxss
__builtin_ia32_cmpeqpd
__builtin_ia32_cmpltpd
__builtin_ia32_cmplepd
__builtin_ia32_cmpunordpd
__builtin_ia32_cmpneqpd
__builtin_ia32_cmpnltpd
__builtin_ia32_cmpnlepd
__builtin_ia32_cmpordpd
__builtin_ia32_cmpeqsd
__builtin_ia32_cmpltsd
__builtin_ia32_cmplesd
__builtin_ia32_cmpunordsd
__builtin_ia32_cmpneqsd
__builtin_ia32_cmpnltsd
__builtin_ia32_cmpnlesd
__builtin_ia32_cmpordsd
__builtin_ia32_minpd
__builtin_ia32_maxpd
__builtin_ia32_minsd
__builtin_ia32_maxsd
__builtin_ia32_paddsb128
__builtin_ia32_paddsw128
__builtin_ia32_psubsb128
__builtin_ia32_psubsw128
__builtin_ia32_paddusb128
__builtin_ia32_paddusw128
__builtin_ia32_psubusb128
__builtin_ia32_psubusw128
__builtin_ia32_pmulhw128
__builtin_ia32_pavgb128
__builtin_ia32_pavgw128
__builtin_ia32_pmaxub128
__builtin_ia32_pmaxsw128
__builtin_ia32_pminub128
__builtin_ia32_pminsw128
__builtin_ia32_packsswb128
V16cV8sV8s
__builtin_ia32_packssdw128
__builtin_ia32_packuswb128
__builtin_ia32_pmulhuw128
__builtin_ia32_vec_ext_v4si
iV4iIi
__builtin_ia32_vec_ext_v4sf
__builtin_ia32_vec_ext_v8hi
sV8sIi
__builtin_ia32_vec_set_v8hi
V8sV8ssIi
__builtin_ia32_addsubps
__builtin_ia32_addsubpd
__builtin_ia32_haddps
__builtin_ia32_haddpd
__builtin_ia32_hsubps
__builtin_ia32_hsubpd
__builtin_ia32_phaddw128
__builtin_ia32_phaddd128
__builtin_ia32_phaddsw128
__builtin_ia32_phsubw128
__builtin_ia32_phsubd128
__builtin_ia32_phsubsw128
__builtin_ia32_pmaddubsw128
V8sV16cV16c
__builtin_ia32_pmulhrsw128
__builtin_ia32_pshufb128
__builtin_ia32_psignb128
__builtin_ia32_psignw128
__builtin_ia32_psignd128
__builtin_ia32_pabsb128
__builtin_ia32_pabsw128
__builtin_ia32_pabsd128
__builtin_ia32_ldmxcsr
_mm_setcsr
xmmintrin.h
__builtin_ia32_stmxcsr
_mm_getcsr
__builtin_ia32_cvtss2si
__builtin_ia32_cvttss2si
__builtin_ia32_movmskps
nV:128:
__builtin_ia32_sfence
_mm_sfence
__builtin_ia32_rcpps
__builtin_ia32_rcpss
__builtin_ia32_rsqrtps
__builtin_ia32_rsqrtss
__builtin_ia32_sqrtps
__builtin_ia32_sqrtss
__builtin_ia32_shufps
__builtin_ia32_maskmovdqu
vV16cV16cc*
__builtin_ia32_movmskpd
__builtin_ia32_pmovmskb128
iV16c
__builtin_ia32_movnti
vi*i
__builtin_ia32_pshufd
V4iV4iIi
__builtin_ia32_pshuflw
V8sV8sIi
__builtin_ia32_pshufhw
__builtin_ia32_psadbw128
V2OiV16cV16c
__builtin_ia32_sqrtpd
__builtin_ia32_sqrtsd
__builtin_ia32_shufpd
__builtin_ia32_cvtpd2dq
V2OiV2d
__builtin_ia32_cvtpd2ps
__builtin_ia32_cvttpd2dq
__builtin_ia32_cvtsd2si
__builtin_ia32_cvttsd2si
__builtin_ia32_cvtsd2ss
V4fV4fV2d
__builtin_ia32_cvtps2dq
__builtin_ia32_cvttps2dq
__builtin_ia32_clflush
_mm_clflush
emmintrin.h
__builtin_ia32_lfence
_mm_lfence
__builtin_ia32_mfence
_mm_mfence
__builtin_ia32_pause
_mm_pause
__builtin_ia32_pmuludq128
V2OiV4iV4i
__builtin_ia32_psraw128
__builtin_ia32_psrad128
__builtin_ia32_psrlw128
__builtin_ia32_psrld128
__builtin_ia32_psrlq128
V2OiV2OiV2Oi
__builtin_ia32_psllw128
__builtin_ia32_pslld128
__builtin_ia32_psllq128
__builtin_ia32_psllwi128
V8sV8si
__builtin_ia32_pslldi128
V4iV4ii
__builtin_ia32_psllqi128
V2OiV2Oii
__builtin_ia32_psrlwi128
__builtin_ia32_psrldi128
__builtin_ia32_psrlqi128
__builtin_ia32_psrawi128
__builtin_ia32_psradi128
__builtin_ia32_pmaddwd128
__builtin_ia32_pslldqi128_byteshift
V2OiV2OiIi
__builtin_ia32_psrldqi128_byteshift
__builtin_ia32_monitor
__builtin_ia32_mwait
__builtin_ia32_lddqu
V16ccC*
__builtin_ia32_palignr128
V16cV16cV16cIi
__builtin_ia32_insertps128
V4fV4fV4fIc
__builtin_ia32_pblendvb128
__builtin_ia32_pblendw128
V8sV8sV8sIi
__builtin_ia32_blendpd
__builtin_ia32_blendps
__builtin_ia32_blendvpd
__builtin_ia32_blendvps
__builtin_ia32_packusdw128
__builtin_ia32_pmaxsb128
__builtin_ia32_pmaxsd128
__builtin_ia32_pmaxud128
__builtin_ia32_pmaxuw128
__builtin_ia32_pminsb128
__builtin_ia32_pminsd128
__builtin_ia32_pminud128
__builtin_ia32_pminuw128
__builtin_ia32_pmuldq128
__builtin_ia32_roundps
V4fV4fIi
__builtin_ia32_roundss
__builtin_ia32_roundsd
__builtin_ia32_roundpd
V2dV2dIi
__builtin_ia32_dpps
__builtin_ia32_dppd
V2dV2dV2dIc
__builtin_ia32_ptestz128
iV2OiV2Oi
__builtin_ia32_ptestc128
__builtin_ia32_ptestnzc128
__builtin_ia32_mpsadbw128
V16cV16cV16cIc
__builtin_ia32_phminposuw128
__builtin_ia32_vec_ext_v16qi
cV16cIi
__builtin_ia32_vec_set_v16qi
V16cV16ccIi
__builtin_ia32_vec_set_v4si
V4iV4iiIi
__builtin_ia32_pcmpistrm128
__builtin_ia32_pcmpistri128
iV16cV16cIc
__builtin_ia32_pcmpestrm128
V16cV16ciV16ciIc
__builtin_ia32_pcmpestri128
iV16ciV16ciIc
__builtin_ia32_pcmpistria128
__builtin_ia32_pcmpistric128
__builtin_ia32_pcmpistrio128
__builtin_ia32_pcmpistris128
__builtin_ia32_pcmpistriz128
__builtin_ia32_pcmpestria128
__builtin_ia32_pcmpestric128
__builtin_ia32_pcmpestrio128
__builtin_ia32_pcmpestris128
__builtin_ia32_pcmpestriz128
__builtin_ia32_crc32qi
__builtin_ia32_crc32hi
__builtin_ia32_crc32si
__builtin_ia32_extrqi
V2OiV2OiIcIc
__builtin_ia32_extrq
V2OiV2OiV16c
__builtin_ia32_insertqi
V2OiV2OiV2OiIcIc
__builtin_ia32_insertq
__builtin_ia32_movntsd
vd*V2d
__builtin_ia32_movntss
vf*V4f
__builtin_ia32_aesenc128
__builtin_ia32_aesenclast128
__builtin_ia32_aesdec128
__builtin_ia32_aesdeclast128
__builtin_ia32_aesimc128
V2OiV2Oi
__builtin_ia32_aeskeygenassist128
V2OiV2OiIc
__builtin_ia32_aesenc256
V4OiV4OiV4Oi
__builtin_ia32_aesenc512
V8OiV8OiV8Oi
avx512f,vaes
__builtin_ia32_aesenclast256
__builtin_ia32_aesenclast512
__builtin_ia32_aesdec256
__builtin_ia32_aesdec512
__builtin_ia32_aesdeclast256
__builtin_ia32_aesdeclast512
__builtin_ia32_vgf2p8affineinvqb_v16qi
__builtin_ia32_vgf2p8affineinvqb_v32qi
V32cV32cV32cIc
avx,gfni
__builtin_ia32_vgf2p8affineinvqb_v64qi
V64cV64cV64cIc
avx512bw,gfni
__builtin_ia32_vgf2p8affineqb_v16qi
__builtin_ia32_vgf2p8affineqb_v32qi
__builtin_ia32_vgf2p8affineqb_v64qi
__builtin_ia32_vgf2p8mulb_v16qi
__builtin_ia32_vgf2p8mulb_v32qi
V32cV32cV32c
__builtin_ia32_vgf2p8mulb_v64qi
V64cV64cV64c
__builtin_ia32_pclmulqdq128
V2OiV2OiV2OiIc
__builtin_ia32_pclmulqdq256
V4OiV4OiV4OiIc
__builtin_ia32_pclmulqdq512
V8OiV8OiV8OiIc
avx512f,vpclmulqdq
__builtin_ia32_addsubpd256
V4dV4dV4d
__builtin_ia32_addsubps256
V8fV8fV8f
__builtin_ia32_haddpd256
__builtin_ia32_hsubps256
__builtin_ia32_hsubpd256
__builtin_ia32_haddps256
__builtin_ia32_maxpd256
__builtin_ia32_maxps256
__builtin_ia32_minpd256
__builtin_ia32_minps256
__builtin_ia32_vpermilvarpd
V2dV2dV2Oi
__builtin_ia32_vpermilvarps
__builtin_ia32_vpermilvarpd256
V4dV4dV4Oi
__builtin_ia32_vpermilvarps256
V8fV8fV8i
__builtin_ia32_blendpd256
V4dV4dV4dIi
__builtin_ia32_blendps256
V8fV8fV8fIi
__builtin_ia32_blendvpd256
V4dV4dV4dV4d
__builtin_ia32_blendvps256
V8fV8fV8fV8f
__builtin_ia32_shufpd256
__builtin_ia32_shufps256
__builtin_ia32_dpps256
V8fV8fV8fIc
__builtin_ia32_cmppd
__builtin_ia32_cmppd256
V4dV4dV4dIc
__builtin_ia32_cmpps
__builtin_ia32_cmpps256
__builtin_ia32_cmpsd
__builtin_ia32_cmpss
__builtin_ia32_vextractf128_pd256
V2dV4dIi
__builtin_ia32_vextractf128_ps256
V4fV8fIi
__builtin_ia32_vextractf128_si256
V4iV8iIi
__builtin_ia32_cvtpd2ps256
V4fV4d
__builtin_ia32_cvtps2dq256
V8iV8f
__builtin_ia32_cvttpd2dq256
V4iV4d
__builtin_ia32_cvtpd2dq256
__builtin_ia32_cvttps2dq256
__builtin_ia32_vperm2f128_pd256
__builtin_ia32_vperm2f128_ps256
__builtin_ia32_vperm2f128_si256
V8iV8iV8iIi
__builtin_ia32_vpermilpd
__builtin_ia32_vpermilps
__builtin_ia32_vpermilpd256
V4dV4dIi
__builtin_ia32_vpermilps256
V8fV8fIi
__builtin_ia32_vinsertf128_pd256
V4dV4dV2dIi
__builtin_ia32_vinsertf128_ps256
V8fV8fV4fIi
__builtin_ia32_vinsertf128_si256
V8iV8iV4iIi
__builtin_ia32_sqrtpd256
V4dV4d
__builtin_ia32_sqrtps256
V8fV8f
__builtin_ia32_rsqrtps256
__builtin_ia32_rcpps256
__builtin_ia32_roundpd256
__builtin_ia32_roundps256
__builtin_ia32_vtestzpd
__builtin_ia32_vtestcpd
__builtin_ia32_vtestnzcpd
__builtin_ia32_vtestzps
__builtin_ia32_vtestcps
__builtin_ia32_vtestnzcps
__builtin_ia32_vtestzpd256
iV4dV4d
__builtin_ia32_vtestcpd256
__builtin_ia32_vtestnzcpd256
__builtin_ia32_vtestzps256
iV8fV8f
__builtin_ia32_vtestcps256
__builtin_ia32_vtestnzcps256
__builtin_ia32_ptestz256
iV4OiV4Oi
__builtin_ia32_ptestc256
__builtin_ia32_ptestnzc256
__builtin_ia32_movmskpd256
iV4d
__builtin_ia32_movmskps256
iV8f
__builtin_ia32_vzeroall
__builtin_ia32_vzeroupper
__builtin_ia32_lddqu256
V32ccC*
nV:256:
__builtin_ia32_maskloadpd
V2dV2dC*V2Oi
__builtin_ia32_maskloadps
V4fV4fC*V4i
__builtin_ia32_maskloadpd256
V4dV4dC*V4Oi
__builtin_ia32_maskloadps256
V8fV8fC*V8i
__builtin_ia32_maskstorepd
vV2d*V2OiV2d
__builtin_ia32_maskstoreps
vV4f*V4iV4f
__builtin_ia32_maskstorepd256
vV4d*V4OiV4d
__builtin_ia32_maskstoreps256
vV8f*V8iV8f
__builtin_ia32_vec_ext_v32qi
cV32cIi
__builtin_ia32_vec_ext_v16hi
sV16sIi
__builtin_ia32_vec_ext_v8si
iV8iIi
__builtin_ia32_vec_set_v32qi
V32cV32ccIi
__builtin_ia32_vec_set_v16hi
V16sV16ssIi
__builtin_ia32_vec_set_v8si
V8iV8iiIi
__builtin_ia32_mpsadbw256
__builtin_ia32_pabsb256
V32cV32c
__builtin_ia32_pabsw256
V16sV16s
__builtin_ia32_pabsd256
V8iV8i
__builtin_ia32_packsswb256
V32cV16sV16s
__builtin_ia32_packssdw256
V16sV8iV8i
__builtin_ia32_packuswb256
__builtin_ia32_packusdw256
__builtin_ia32_paddsb256
__builtin_ia32_paddsw256
V16sV16sV16s
__builtin_ia32_psubsb256
__builtin_ia32_psubsw256
__builtin_ia32_paddusb256
__builtin_ia32_paddusw256
__builtin_ia32_psubusb256
__builtin_ia32_psubusw256
__builtin_ia32_palignr256
V32cV32cV32cIi
__builtin_ia32_pavgb256
__builtin_ia32_pavgw256
__builtin_ia32_pblendvb256
V32cV32cV32cV32c
__builtin_ia32_pblendw256
V16sV16sV16sIi
__builtin_ia32_phaddw256
__builtin_ia32_phaddd256
V8iV8iV8i
__builtin_ia32_phaddsw256
__builtin_ia32_phsubw256
__builtin_ia32_phsubd256
__builtin_ia32_phsubsw256
__builtin_ia32_pmaddubsw256
V16sV32cV32c
__builtin_ia32_pmaddwd256
V8iV16sV16s
__builtin_ia32_pmaxub256
__builtin_ia32_pmaxuw256
__builtin_ia32_pmaxud256
__builtin_ia32_pmaxsb256
__builtin_ia32_pmaxsw256
__builtin_ia32_pmaxsd256
__builtin_ia32_pminub256
__builtin_ia32_pminuw256
__builtin_ia32_pminud256
__builtin_ia32_pminsb256
__builtin_ia32_pminsw256
__builtin_ia32_pminsd256
__builtin_ia32_pmovmskb256
iV32c
__builtin_ia32_pmuldq256
V4OiV8iV8i
__builtin_ia32_pmulhrsw256
__builtin_ia32_pmulhuw256
__builtin_ia32_pmulhw256
__builtin_ia32_pmuludq256
__builtin_ia32_psadbw256
V4OiV32cV32c
__builtin_ia32_pshufb256
__builtin_ia32_pshufd256
V8iV8iIi
__builtin_ia32_pshuflw256
V16sV16sIi
__builtin_ia32_pshufhw256
__builtin_ia32_psignb256
__builtin_ia32_psignw256
__builtin_ia32_psignd256
__builtin_ia32_psllwi256
V16sV16si
__builtin_ia32_psllw256
V16sV16sV8s
__builtin_ia32_pslldqi256_byteshift
V4OiV4OiIi
__builtin_ia32_pslldi256
V8iV8ii
__builtin_ia32_pslld256
V8iV8iV4i
__builtin_ia32_psllqi256
V4OiV4Oii
__builtin_ia32_psllq256
V4OiV4OiV2Oi
__builtin_ia32_psrawi256
__builtin_ia32_psraw256
__builtin_ia32_psradi256
__builtin_ia32_psrad256
__builtin_ia32_psrldqi256_byteshift
__builtin_ia32_psrlwi256
__builtin_ia32_psrlw256
__builtin_ia32_psrldi256
__builtin_ia32_psrld256
__builtin_ia32_psrlqi256
__builtin_ia32_psrlq256
__builtin_ia32_pblendd128
V4iV4iV4iIi
__builtin_ia32_pblendd256
__builtin_ia32_permvarsi256
__builtin_ia32_permdf256
__builtin_ia32_permvarsf256
__builtin_ia32_permti256
V4OiV4OiV4OiIi
__builtin_ia32_permdi256
__builtin_ia32_extract128i256
V2OiV4OiIi
__builtin_ia32_insert128i256
V4OiV4OiV2OiIi
__builtin_ia32_maskloadd256
V8iV8iC*V8i
__builtin_ia32_maskloadq256
V4OiV4OiC*V4Oi
__builtin_ia32_maskloadd
V4iV4iC*V4i
__builtin_ia32_maskloadq
V2OiV2OiC*V2Oi
__builtin_ia32_maskstored256
vV8i*V8iV8i
__builtin_ia32_maskstoreq256
vV4Oi*V4OiV4Oi
__builtin_ia32_maskstored
vV4i*V4iV4i
__builtin_ia32_maskstoreq
vV2Oi*V2OiV2Oi
__builtin_ia32_psllv8si
__builtin_ia32_psllv4si
__builtin_ia32_psllv4di
__builtin_ia32_psllv2di
__builtin_ia32_psrav8si
__builtin_ia32_psrav4si
__builtin_ia32_psrlv8si
__builtin_ia32_psrlv4si
__builtin_ia32_psrlv4di
__builtin_ia32_psrlv2di
__builtin_ia32_gatherd_pd
V2dV2ddC*V4iV2dIc
__builtin_ia32_gatherd_pd256
V4dV4ddC*V4iV4dIc
__builtin_ia32_gatherq_pd
V2dV2ddC*V2OiV2dIc
__builtin_ia32_gatherq_pd256
V4dV4ddC*V4OiV4dIc
__builtin_ia32_gatherd_ps
V4fV4ffC*V4iV4fIc
__builtin_ia32_gatherd_ps256
V8fV8ffC*V8iV8fIc
__builtin_ia32_gatherq_ps
V4fV4ffC*V2OiV4fIc
__builtin_ia32_gatherq_ps256
V4fV4ffC*V4OiV4fIc
__builtin_ia32_gatherd_q
V2OiV2OiOiC*V4iV2OiIc
__builtin_ia32_gatherd_q256
V4OiV4OiOiC*V4iV4OiIc
__builtin_ia32_gatherq_q
V2OiV2OiOiC*V2OiV2OiIc
__builtin_ia32_gatherq_q256
V4OiV4OiOiC*V4OiV4OiIc
__builtin_ia32_gatherd_d
V4iV4iiC*V4iV4iIc
__builtin_ia32_gatherd_d256
V8iV8iiC*V8iV8iIc
__builtin_ia32_gatherq_d
V4iV4iiC*V2OiV4iIc
__builtin_ia32_gatherq_d256
V4iV4iiC*V4OiV4iIc
__builtin_ia32_vcvtps2ph
V8sV4fIi
__builtin_ia32_vcvtps2ph256
V8sV8fIi
__builtin_ia32_vcvtph2ps
V4fV8s
__builtin_ia32_vcvtph2ps256
V8fV8s
__builtin_ia32_rdrand16_step
UiUs*
__builtin_ia32_rdrand32_step
__builtin_ia32_fxrstor
__builtin_ia32_fxsave
__builtin_ia32_xsave
vv*UOi
__builtin_ia32_xrstor
__builtin_ia32_xgetbv
UOiUi
_xgetbv
UWiUi
immintrin.h
__builtin_ia32_xsetbv
vUiUOi
_xsetbv
vUiUWi
__builtin_ia32_xsaveopt
__builtin_ia32_xrstors
__builtin_ia32_xsavec
__builtin_ia32_xsaves
__builtin_ia32_incsspd
__builtin_ia32_rdsspd
__builtin_ia32_saveprevssp
__builtin_ia32_rstorssp
__builtin_ia32_wrssd
vUiv*
__builtin_ia32_wrussd
__builtin_ia32_setssbsy
__builtin_ia32_clrssbsy
__builtin_ia32_clflushopt
__builtin_ia32_clwb
__builtin_ia32_wbinvd
__builtin_ia32_wbnoinvd
__builtin_ia32_addcarryx_u32
UcUcUiUiUi*
__builtin_ia32_subborrow_u32
__builtin_ia32_rdseed16_step
__builtin_ia32_rdseed32_step
__builtin_ia32_lzcnt_u16
UsUs
__builtin_ia32_lzcnt_u32
__builtin_ia32_bextr_u32
__builtin_ia32_tzcnt_u16
__builtin_ia32_tzcnt_u32
__builtin_ia32_bzhi_si
__builtin_ia32_pdep_si
__builtin_ia32_pext_si
__builtin_ia32_bextri_u32
__builtin_ia32_llwpcb
__builtin_ia32_slwpcb
__builtin_ia32_lwpins32
UcUiUiIUi
__builtin_ia32_lwpval32
vUiUiIUi
__builtin_ia32_sha1rnds4
V4iV4iV4iIc
__builtin_ia32_sha1nexte
__builtin_ia32_sha1msg1
__builtin_ia32_sha1msg2
__builtin_ia32_sha256rnds2
__builtin_ia32_sha256msg1
__builtin_ia32_sha256msg2
__builtin_ia32_vfmaddps
fma|fma4
__builtin_ia32_vfmaddpd
__builtin_ia32_vfmaddss3
__builtin_ia32_vfmaddsd3
__builtin_ia32_vfmaddss
__builtin_ia32_vfmaddsd
__builtin_ia32_vfmaddsubps
__builtin_ia32_vfmaddsubpd
__builtin_ia32_vfmaddps256
__builtin_ia32_vfmaddpd256
__builtin_ia32_vfmaddsubps256
__builtin_ia32_vfmaddsubpd256
__builtin_ia32_vfmaddpd512_mask
V8dV8dV8dV8dUcIi
__builtin_ia32_vfmaddpd512_maskz
__builtin_ia32_vfmaddpd512_mask3
__builtin_ia32_vfmsubpd512_mask3
__builtin_ia32_vfmaddps512_mask
V16fV16fV16fV16fUsIi
__builtin_ia32_vfmaddps512_maskz
__builtin_ia32_vfmaddps512_mask3
__builtin_ia32_vfmsubps512_mask3
__builtin_ia32_vfmaddsubpd512_mask
__builtin_ia32_vfmaddsubpd512_maskz
__builtin_ia32_vfmaddsubpd512_mask3
__builtin_ia32_vfmsubaddpd512_mask3
__builtin_ia32_vfmaddsubps512_mask
__builtin_ia32_vfmaddsubps512_maskz
__builtin_ia32_vfmaddsubps512_mask3
__builtin_ia32_vfmsubaddps512_mask3
__builtin_ia32_vpmacssww
__builtin_ia32_vpmacsww
__builtin_ia32_vpmacsswd
V4iV8sV8sV4i
__builtin_ia32_vpmacswd
__builtin_ia32_vpmacssdd
__builtin_ia32_vpmacsdd
__builtin_ia32_vpmacssdql
V2OiV4iV4iV2Oi
__builtin_ia32_vpmacsdql
__builtin_ia32_vpmacssdqh
__builtin_ia32_vpmacsdqh
__builtin_ia32_vpmadcsswd
__builtin_ia32_vpmadcswd
__builtin_ia32_vphaddbw
__builtin_ia32_vphaddbd
V4iV16c
__builtin_ia32_vphaddbq
V2OiV16c
__builtin_ia32_vphaddwd
__builtin_ia32_vphaddwq
V2OiV8s
__builtin_ia32_vphadddq
V2OiV4i
__builtin_ia32_vphaddubw
__builtin_ia32_vphaddubd
__builtin_ia32_vphaddubq
__builtin_ia32_vphadduwd
__builtin_ia32_vphadduwq
__builtin_ia32_vphaddudq
__builtin_ia32_vphsubbw
__builtin_ia32_vphsubwd
__builtin_ia32_vphsubdq
__builtin_ia32_vpperm
__builtin_ia32_vprotb
__builtin_ia32_vprotw
__builtin_ia32_vprotd
__builtin_ia32_vprotq
__builtin_ia32_vprotbi
V16cV16cIc
__builtin_ia32_vprotwi
V8sV8sIc
__builtin_ia32_vprotdi
V4iV4iIc
__builtin_ia32_vprotqi
__builtin_ia32_vpshlb
__builtin_ia32_vpshlw
__builtin_ia32_vpshld
__builtin_ia32_vpshlq
__builtin_ia32_vpshab
__builtin_ia32_vpshaw
__builtin_ia32_vpshad
__builtin_ia32_vpshaq
__builtin_ia32_vpcomub
__builtin_ia32_vpcomuw
V8sV8sV8sIc
__builtin_ia32_vpcomud
__builtin_ia32_vpcomuq
__builtin_ia32_vpcomb
__builtin_ia32_vpcomw
__builtin_ia32_vpcomd
__builtin_ia32_vpcomq
__builtin_ia32_vpermil2pd
V2dV2dV2dV2OiIc
__builtin_ia32_vpermil2pd256
V4dV4dV4dV4OiIc
__builtin_ia32_vpermil2ps
V4fV4fV4fV4iIc
__builtin_ia32_vpermil2ps256
V8fV8fV8fV8iIc
__builtin_ia32_vfrczss
__builtin_ia32_vfrczsd
__builtin_ia32_vfrczps
__builtin_ia32_vfrczpd
__builtin_ia32_vfrczps256
__builtin_ia32_vfrczpd256
__builtin_ia32_xbegin
__builtin_ia32_xend
__builtin_ia32_xabort
__builtin_ia32_xtest
__builtin_ia32_rdpmc
UOii
__builtin_ia32_rdtsc
__rdtsc
__builtin_ia32_rdtscp
UOiUi*
__builtin_ia32_rdpid
__builtin_ia32_rdpkru
__builtin_ia32_wrpkru
__builtin_ia32_sqrtpd512
V8dV8dIi
__builtin_ia32_sqrtps512
V16fV16fIi
__builtin_ia32_rsqrt14sd_mask
V2dV2dV2dV2dUc
__builtin_ia32_rsqrt14ss_mask
V4fV4fV4fV4fUc
__builtin_ia32_rsqrt14pd512_mask
V8dV8dV8dUc
__builtin_ia32_rsqrt14ps512_mask
V16fV16fV16fUs
__builtin_ia32_rsqrt28sd_round_mask
V2dV2dV2dV2dUcIi
__builtin_ia32_rsqrt28ss_round_mask
V4fV4fV4fV4fUcIi
__builtin_ia32_rsqrt28pd_mask
V8dV8dV8dUcIi
__builtin_ia32_rsqrt28ps_mask
V16fV16fV16fUsIi
__builtin_ia32_rcp14sd_mask
__builtin_ia32_rcp14ss_mask
__builtin_ia32_rcp14pd512_mask
__builtin_ia32_rcp14ps512_mask
__builtin_ia32_rcp28sd_round_mask
__builtin_ia32_rcp28ss_round_mask
__builtin_ia32_rcp28pd_mask
__builtin_ia32_rcp28ps_mask
__builtin_ia32_exp2pd_mask
__builtin_ia32_exp2ps_mask
__builtin_ia32_cvttps2dq512_mask
V16iV16fV16iUsIi
__builtin_ia32_cvttps2udq512_mask
__builtin_ia32_cvttpd2dq512_mask
V8iV8dV8iUcIi
__builtin_ia32_cvttpd2udq512_mask
__builtin_ia32_cmpps512_mask
UsV16fV16fIiUsIi
__builtin_ia32_cmpps256_mask
UcV8fV8fIiUc
__builtin_ia32_cmpps128_mask
UcV4fV4fIiUc
__builtin_ia32_cmppd512_mask
UcV8dV8dIiUcIi
__builtin_ia32_cmppd256_mask
UcV4dV4dIiUc
__builtin_ia32_cmppd128_mask
UcV2dV2dIiUc
__builtin_ia32_rndscaleps_mask
V16fV16fIiV16fUsIi
__builtin_ia32_rndscalepd_mask
V8dV8dIiV8dUcIi
__builtin_ia32_cvtps2dq512_mask
__builtin_ia32_cvtpd2dq512_mask
__builtin_ia32_cvtps2udq512_mask
__builtin_ia32_cvtpd2udq512_mask
__builtin_ia32_minps512
V16fV16fV16fIi
__builtin_ia32_minpd512
V8dV8dV8dIi
__builtin_ia32_maxps512
__builtin_ia32_maxpd512
__builtin_ia32_cvtdq2ps512_mask
V16fV16iV16fUsIi
__builtin_ia32_cvtudq2ps512_mask
__builtin_ia32_cvtpd2ps512_mask
V8fV8dV8fUcIi
__builtin_ia32_vcvtps2ph512_mask
V16sV16fIiV16sUs
__builtin_ia32_vcvtph2ps512_mask
V16fV16sV16fUsIi
__builtin_ia32_pabsd512
__builtin_ia32_pabsq512
V8OiV8Oi
__builtin_ia32_pmaxsd512
__builtin_ia32_pmaxsq512
__builtin_ia32_pmaxud512
__builtin_ia32_pmaxuq512
__builtin_ia32_pminsd512
__builtin_ia32_pminsq512
__builtin_ia32_pminud512
__builtin_ia32_pminuq512
__builtin_ia32_pmuldq512
V8OiV16iV16i
__builtin_ia32_pmuludq512
__builtin_ia32_loaddqusi512_mask
V16iiC*V16iUs
nV:512:
__builtin_ia32_loaddqudi512_mask
V8OiOiC*V8OiUc
__builtin_ia32_loadups512_mask
V16ffC*V16fUs
__builtin_ia32_loadaps512_mask
V16fV16fC*V16fUs
__builtin_ia32_loadupd512_mask
V8ddC*V8dUc
__builtin_ia32_loadapd512_mask
V8dV8dC*V8dUc
__builtin_ia32_storedqudi512_mask
vOi*V8OiUc
__builtin_ia32_storedqusi512_mask
vi*V16iUs
__builtin_ia32_storeupd512_mask
vd*V8dUc
__builtin_ia32_storeapd512_mask
vV8d*V8dUc
__builtin_ia32_storeups512_mask
vf*V16fUs
__builtin_ia32_storeaps512_mask
vV16f*V16fUs
__builtin_ia32_alignq512
V8OiV8OiV8OiIi
__builtin_ia32_alignd512
V16iV16iV16iIi
__builtin_ia32_alignd128
__builtin_ia32_alignd256
__builtin_ia32_alignq128
V2OiV2OiV2OiIi
__builtin_ia32_alignq256
__builtin_ia32_extractf64x4_mask
V4dV8dIiV4dUc
__builtin_ia32_extractf32x4_mask
V4fV16fIiV4fUc
__builtin_ia32_vpdpbusd128
avx512vl,avx512vnni|avxvnni
__builtin_ia32_vpdpbusd256
V8iV8iV8iV8i
__builtin_ia32_vpdpbusd512
__builtin_ia32_vpdpbusds128
__builtin_ia32_vpdpbusds256
__builtin_ia32_vpdpbusds512
__builtin_ia32_vpdpwssd128
__builtin_ia32_vpdpwssd256
__builtin_ia32_vpdpwssd512
__builtin_ia32_vpdpwssds128
__builtin_ia32_vpdpwssds256
__builtin_ia32_vpdpwssds512
__builtin_ia32_gather3div2df
V2dV2dvC*V2OiUcIi
__builtin_ia32_gather3div2di
V2OiV2OivC*V2OiUcIi
__builtin_ia32_gather3div4df
V4dV4dvC*V4OiUcIi
__builtin_ia32_gather3div4di
V4OiV4OivC*V4OiUcIi
__builtin_ia32_gather3div4sf
V4fV4fvC*V2OiUcIi
__builtin_ia32_gather3div4si
V4iV4ivC*V2OiUcIi
__builtin_ia32_gather3div8sf
V4fV4fvC*V4OiUcIi
__builtin_ia32_gather3div8si
V4iV4ivC*V4OiUcIi
__builtin_ia32_gather3siv2df
V2dV2dvC*V4iUcIi
__builtin_ia32_gather3siv2di
V2OiV2OivC*V4iUcIi
__builtin_ia32_gather3siv4df
V4dV4dvC*V4iUcIi
__builtin_ia32_gather3siv4di
V4OiV4OivC*V4iUcIi
__builtin_ia32_gather3siv4sf
V4fV4fvC*V4iUcIi
__builtin_ia32_gather3siv4si
V4iV4ivC*V4iUcIi
__builtin_ia32_gather3siv8sf
V8fV8fvC*V8iUcIi
__builtin_ia32_gather3siv8si
V8iV8ivC*V8iUcIi
__builtin_ia32_gathersiv8df
V8dV8dvC*V8iUcIi
__builtin_ia32_gathersiv16sf
V16fV16fvC*V16iUsIi
__builtin_ia32_gatherdiv8df
V8dV8dvC*V8OiUcIi
__builtin_ia32_gatherdiv16sf
V8fV8fvC*V8OiUcIi
__builtin_ia32_gathersiv8di
V8OiV8OivC*V8iUcIi
__builtin_ia32_gathersiv16si
V16iV16ivC*V16iUsIi
__builtin_ia32_gatherdiv8di
V8OiV8OivC*V8OiUcIi
__builtin_ia32_gatherdiv16si
V8iV8ivC*V8OiUcIi
__builtin_ia32_scattersiv8df
vv*UcV8iV8dIi
__builtin_ia32_scattersiv16sf
vv*UsV16iV16fIi
__builtin_ia32_scatterdiv8df
vv*UcV8OiV8dIi
__builtin_ia32_scatterdiv16sf
vv*UcV8OiV8fIi
__builtin_ia32_scattersiv8di
vv*UcV8iV8OiIi
__builtin_ia32_scattersiv16si
vv*UsV16iV16iIi
__builtin_ia32_scatterdiv8di
vv*UcV8OiV8OiIi
__builtin_ia32_scatterdiv16si
vv*UcV8OiV8iIi
__builtin_ia32_gatherpfdpd
vUcV8ivC*IiIi
__builtin_ia32_gatherpfdps
vUsV16ivC*IiIi
__builtin_ia32_gatherpfqpd
vUcV8OivC*IiIi
__builtin_ia32_gatherpfqps
__builtin_ia32_scatterpfdpd
vUcV8iv*IiIi
__builtin_ia32_scatterpfdps
vUsV16iv*IiIi
__builtin_ia32_scatterpfqpd
vUcV8Oiv*IiIi
__builtin_ia32_scatterpfqps
__builtin_ia32_knotqi
UcUc
__builtin_ia32_knothi
__builtin_ia32_knotsi
__builtin_ia32_knotdi
UOiUOi
__builtin_ia32_cmpb128_mask
UsV16cV16cIiUs
avx512vl,avx512bw
__builtin_ia32_cmpd128_mask
UcV4iV4iIiUc
__builtin_ia32_cmpq128_mask
UcV2OiV2OiIiUc
__builtin_ia32_cmpw128_mask
UcV8sV8sIiUc
__builtin_ia32_cmpb256_mask
UiV32cV32cIiUi
__builtin_ia32_cmpd256_mask
UcV8iV8iIiUc
__builtin_ia32_cmpq256_mask
UcV4OiV4OiIiUc
__builtin_ia32_cmpw256_mask
UsV16sV16sIiUs
__builtin_ia32_cmpb512_mask
UOiV64cV64cIiUOi
__builtin_ia32_cmpd512_mask
UsV16iV16iIiUs
__builtin_ia32_cmpq512_mask
UcV8OiV8OiIiUc
__builtin_ia32_cmpw512_mask
UiV32sV32sIiUi
__builtin_ia32_ucmpb128_mask
__builtin_ia32_ucmpd128_mask
__builtin_ia32_ucmpq128_mask
__builtin_ia32_ucmpw128_mask
__builtin_ia32_ucmpb256_mask
__builtin_ia32_ucmpd256_mask
__builtin_ia32_ucmpq256_mask
__builtin_ia32_ucmpw256_mask
__builtin_ia32_ucmpb512_mask
__builtin_ia32_ucmpd512_mask
__builtin_ia32_ucmpq512_mask
__builtin_ia32_ucmpw512_mask
__builtin_ia32_pabsb512
V64cV64c
__builtin_ia32_pabsw512
V32sV32s
__builtin_ia32_packssdw512
V32sV16iV16i
__builtin_ia32_packsswb512
V64cV32sV32s
__builtin_ia32_packusdw512
__builtin_ia32_packuswb512
__builtin_ia32_paddsb512
__builtin_ia32_paddsw512
V32sV32sV32s
__builtin_ia32_paddusb512
__builtin_ia32_paddusw512
__builtin_ia32_pavgb512
__builtin_ia32_pavgw512
__builtin_ia32_pmaxsb512
__builtin_ia32_pmaxsw512
__builtin_ia32_pmaxub512
__builtin_ia32_pmaxuw512
__builtin_ia32_pminsb512
__builtin_ia32_pminsw512
__builtin_ia32_pminub512
__builtin_ia32_pminuw512
__builtin_ia32_pshufb512
__builtin_ia32_psubsb512
__builtin_ia32_psubsw512
__builtin_ia32_psubusb512
__builtin_ia32_psubusw512
__builtin_ia32_vpconflictdi_128
avx512cd,avx512vl
__builtin_ia32_vpconflictdi_256
V4OiV4Oi
__builtin_ia32_vpconflictsi_128
__builtin_ia32_vpconflictsi_256
__builtin_ia32_vpconflictdi_512
__builtin_ia32_vpconflictsi_512
__builtin_ia32_vplzcntd_512
__builtin_ia32_vplzcntq_512
__builtin_ia32_vpopcntd_128
avx512vpopcntdq,avx512vl
__builtin_ia32_vpopcntq_128
__builtin_ia32_vpopcntd_256
__builtin_ia32_vpopcntq_256
__builtin_ia32_vpopcntd_512
__builtin_ia32_vpopcntq_512
__builtin_ia32_vpopcntb_128
avx512vl,avx512bitalg
__builtin_ia32_vpopcntw_128
__builtin_ia32_vpopcntb_256
__builtin_ia32_vpopcntw_256
__builtin_ia32_vpopcntb_512
__builtin_ia32_vpopcntw_512
__builtin_ia32_vpshufbitqmb128_mask
UsV16cV16cUs
__builtin_ia32_vpshufbitqmb256_mask
UiV32cV32cUi
__builtin_ia32_vpshufbitqmb512_mask
UOiV64cV64cUOi
__builtin_ia32_pmulhrsw512
__builtin_ia32_pmulhuw512
__builtin_ia32_pmulhw512
__builtin_ia32_addpd512
__builtin_ia32_addps512
__builtin_ia32_divpd512
__builtin_ia32_divps512
__builtin_ia32_mulpd512
__builtin_ia32_mulps512
__builtin_ia32_subpd512
__builtin_ia32_subps512
__builtin_ia32_pmaddubsw512
V32sV64cV64c
__builtin_ia32_pmaddwd512
V16iV32sV32s
__builtin_ia32_addss_round_mask
__builtin_ia32_divss_round_mask
__builtin_ia32_mulss_round_mask
__builtin_ia32_subss_round_mask
__builtin_ia32_maxss_round_mask
__builtin_ia32_minss_round_mask
__builtin_ia32_addsd_round_mask
__builtin_ia32_divsd_round_mask
__builtin_ia32_mulsd_round_mask
__builtin_ia32_subsd_round_mask
__builtin_ia32_maxsd_round_mask
__builtin_ia32_minsd_round_mask
__builtin_ia32_compressdf128_mask
V2dV2dV2dUc
__builtin_ia32_compressdf256_mask
V4dV4dV4dUc
__builtin_ia32_compressdi128_mask
V2OiV2OiV2OiUc
__builtin_ia32_compressdi256_mask
V4OiV4OiV4OiUc
__builtin_ia32_compresshi128_mask
V8sV8sV8sUc
avx512vl,avx512vbmi2
__builtin_ia32_compresshi256_mask
V16sV16sV16sUs
__builtin_ia32_compressqi128_mask
V16cV16cV16cUs
__builtin_ia32_compressqi256_mask
V32cV32cV32cUi
__builtin_ia32_compresssf128_mask
V4fV4fV4fUc
__builtin_ia32_compresssf256_mask
V8fV8fV8fUc
__builtin_ia32_compresssi128_mask
V4iV4iV4iUc
__builtin_ia32_compresssi256_mask
V8iV8iV8iUc
__builtin_ia32_compressstoredf128_mask
vV2d*V2dUc
__builtin_ia32_compressstoredf256_mask
vV4d*V4dUc
__builtin_ia32_compressstoredi128_mask
vV2Oi*V2OiUc
__builtin_ia32_compressstoredi256_mask
vV4Oi*V4OiUc
__builtin_ia32_compressstorehi128_mask
vV8s*V8sUc
__builtin_ia32_compressstorehi256_mask
vV16s*V16sUs
__builtin_ia32_compressstoreqi128_mask
vV16c*V16cUs
__builtin_ia32_compressstoreqi256_mask
vV32c*V32cUi
__builtin_ia32_compressstoresf128_mask
vV4f*V4fUc
__builtin_ia32_compressstoresf256_mask
vV8f*V8fUc
__builtin_ia32_compressstoresi128_mask
vV4i*V4iUc
__builtin_ia32_compressstoresi256_mask
vV8i*V8iUc
__builtin_ia32_cvtpd2dq128_mask
V4iV2dV4iUc
__builtin_ia32_cvtpd2ps_mask
V4fV2dV4fUc
__builtin_ia32_cvtpd2udq128_mask
__builtin_ia32_cvtpd2udq256_mask
V4iV4dV4iUc
__builtin_ia32_cvtps2udq128_mask
V4iV4fV4iUc
__builtin_ia32_cvtps2udq256_mask
V8iV8fV8iUc
__builtin_ia32_cvttpd2dq128_mask
__builtin_ia32_cvttpd2udq128_mask
__builtin_ia32_cvttpd2udq256_mask
__builtin_ia32_cvttps2udq128_mask
__builtin_ia32_cvttps2udq256_mask
__builtin_ia32_expanddf128_mask
__builtin_ia32_expanddf256_mask
__builtin_ia32_expanddi128_mask
__builtin_ia32_expanddi256_mask
__builtin_ia32_expandhi128_mask
__builtin_ia32_expandhi256_mask
__builtin_ia32_expandqi128_mask
__builtin_ia32_expandqi256_mask
__builtin_ia32_expandloaddf128_mask
V2dV2dC*V2dUc
__builtin_ia32_expandloaddf256_mask
V4dV4dC*V4dUc
__builtin_ia32_expandloaddi128_mask
V4iV2OiC*V2OiUc
__builtin_ia32_expandloaddi256_mask
V4OiV4OiC*V4OiUc
__builtin_ia32_expandloadhi128_mask
V8sV8sC*V8sUc
__builtin_ia32_expandloadhi256_mask
V16sV16sC*V16sUs
__builtin_ia32_expandloadqi128_mask
V16cV16cC*V16cUs
__builtin_ia32_expandloadqi256_mask
V32cV32cC*V32cUi
__builtin_ia32_expandloadsf128_mask
V4fV4fC*V4fUc
__builtin_ia32_expandloadsf256_mask
V8fV8fC*V8fUc
__builtin_ia32_expandloadsi128_mask
V4iV4iC*V4iUc
__builtin_ia32_expandloadsi256_mask
V8iV8iC*V8iUc
__builtin_ia32_expandsf128_mask
__builtin_ia32_expandsf256_mask
__builtin_ia32_expandsi128_mask
__builtin_ia32_expandsi256_mask
__builtin_ia32_getexppd128_mask
__builtin_ia32_getexppd256_mask
__builtin_ia32_getexpps128_mask
__builtin_ia32_getexpps256_mask
__builtin_ia32_pabsq128
__builtin_ia32_pabsq256
__builtin_ia32_pmaxsq128
__builtin_ia32_pmaxsq256
__builtin_ia32_pmaxuq128
__builtin_ia32_pmaxuq256
__builtin_ia32_pminsq128
__builtin_ia32_pminsq256
__builtin_ia32_pminuq128
__builtin_ia32_pminuq256
__builtin_ia32_rndscalepd_128_mask
V2dV2dIiV2dUc
__builtin_ia32_rndscalepd_256_mask
V4dV4dIiV4dUc
__builtin_ia32_rndscaleps_128_mask
V4fV4fIiV4fUc
__builtin_ia32_rndscaleps_256_mask
V8fV8fIiV8fUc
__builtin_ia32_scalefpd128_mask
__builtin_ia32_scalefpd256_mask
V4dV4dV4dV4dUc
__builtin_ia32_scalefps128_mask
__builtin_ia32_scalefps256_mask
V8fV8fV8fV8fUc
__builtin_ia32_scatterdiv2df
vv*UcV2OiV2dIi
__builtin_ia32_scatterdiv2di
vv*UcV2OiV2OiIi
__builtin_ia32_scatterdiv4df
vv*UcV4OiV4dIi
__builtin_ia32_scatterdiv4di
vv*UcV4OiV4OiIi
__builtin_ia32_scatterdiv4sf
vv*UcV2OiV4fIi
__builtin_ia32_scatterdiv4si
vv*UcV2OiV4iIi
__builtin_ia32_scatterdiv8sf
vv*UcV4OiV4fIi
__builtin_ia32_scatterdiv8si
vv*UcV4OiV4iIi
__builtin_ia32_scattersiv2df
vv*UcV4iV2dIi
__builtin_ia32_scattersiv2di
vv*UcV4iV2OiIi
__builtin_ia32_scattersiv4df
vv*UcV4iV4dIi
__builtin_ia32_scattersiv4di
vv*UcV4iV4OiIi
__builtin_ia32_scattersiv4sf
vv*UcV4iV4fIi
__builtin_ia32_scattersiv4si
vv*UcV4iV4iIi
__builtin_ia32_scattersiv8sf
vv*UcV8iV8fIi
__builtin_ia32_scattersiv8si
vv*UcV8iV8iIi
__builtin_ia32_vpermi2vard128
__builtin_ia32_vpermi2vard256
__builtin_ia32_vpermi2vard512
__builtin_ia32_vpermi2varpd128
V2dV2dV2OiV2d
__builtin_ia32_vpermi2varpd256
V4dV4dV4OiV4d
__builtin_ia32_vpermi2varpd512
V8dV8dV8OiV8d
__builtin_ia32_vpermi2varps128
V4fV4fV4iV4f
__builtin_ia32_vpermi2varps256
V8fV8fV8iV8f
__builtin_ia32_vpermi2varps512
V16fV16fV16iV16f
__builtin_ia32_vpermi2varq128
V2OiV2OiV2OiV2Oi
__builtin_ia32_vpermi2varq256
V4OiV4OiV4OiV4Oi
__builtin_ia32_vpermi2varq512
V8OiV8OiV8OiV8Oi
__builtin_ia32_vpermi2varqi128
avx512vbmi,avx512vl
__builtin_ia32_vpermi2varqi256
__builtin_ia32_vpermi2varqi512
V64cV64cV64cV64c
__builtin_ia32_vpermi2varhi128
__builtin_ia32_vpermi2varhi256
V16sV16sV16sV16s
__builtin_ia32_vpermi2varhi512
V32sV32sV32sV32s
__builtin_ia32_vpshldd128
__builtin_ia32_vpshldd256
__builtin_ia32_vpshldd512
__builtin_ia32_vpshldq128
__builtin_ia32_vpshldq256
__builtin_ia32_vpshldq512
__builtin_ia32_vpshldw128
__builtin_ia32_vpshldw256
__builtin_ia32_vpshldw512
V32sV32sV32sIi
__builtin_ia32_vpshldvd128
__builtin_ia32_vpshldvd256
__builtin_ia32_vpshldvd512
__builtin_ia32_vpshldvq128
__builtin_ia32_vpshldvq256
__builtin_ia32_vpshldvq512
__builtin_ia32_vpshldvw128
__builtin_ia32_vpshldvw256
__builtin_ia32_vpshldvw512
__builtin_ia32_vpshrdvd128
__builtin_ia32_vpshrdvd256
__builtin_ia32_vpshrdvd512
__builtin_ia32_vpshrdvq128
__builtin_ia32_vpshrdvq256
__builtin_ia32_vpshrdvq512
__builtin_ia32_vpshrdvw128
__builtin_ia32_vpshrdvw256
__builtin_ia32_vpshrdvw512
__builtin_ia32_vpshrdd128
__builtin_ia32_vpshrdd256
__builtin_ia32_vpshrdd512
__builtin_ia32_vpshrdq128
__builtin_ia32_vpshrdq256
__builtin_ia32_vpshrdq512
__builtin_ia32_vpshrdw128
__builtin_ia32_vpshrdw256
__builtin_ia32_vpshrdw512
__builtin_ia32_pmovswb512_mask
V32cV32sV32cUi
__builtin_ia32_pmovuswb512_mask
__builtin_ia32_pmovwb512_mask
__builtin_ia32_cvtpd2qq128_mask
V2OiV2dV2OiUc
avx512vl,avx512dq
__builtin_ia32_cvtpd2qq256_mask
V4OiV4dV4OiUc
__builtin_ia32_cvtpd2uqq128_mask
__builtin_ia32_cvtpd2uqq256_mask
__builtin_ia32_cvtps2qq128_mask
V2OiV4fV2OiUc
__builtin_ia32_cvtps2qq256_mask
V4OiV4fV4OiUc
__builtin_ia32_cvtps2uqq128_mask
__builtin_ia32_cvtps2uqq256_mask
__builtin_ia32_cvtqq2ps128_mask
V4fV2OiV4fUc
__builtin_ia32_cvttpd2qq128_mask
__builtin_ia32_cvttpd2qq256_mask
__builtin_ia32_cvttpd2uqq128_mask
__builtin_ia32_cvttpd2uqq256_mask
__builtin_ia32_cvttps2qq128_mask
__builtin_ia32_cvttps2qq256_mask
__builtin_ia32_cvttps2uqq128_mask
__builtin_ia32_cvttps2uqq256_mask
__builtin_ia32_cvtuqq2ps128_mask
__builtin_ia32_rangepd128_mask
V2dV2dV2dIiV2dUc
__builtin_ia32_rangepd256_mask
V4dV4dV4dIiV4dUc
__builtin_ia32_rangeps128_mask
V4fV4fV4fIiV4fUc
__builtin_ia32_rangeps256_mask
V8fV8fV8fIiV8fUc
__builtin_ia32_rangesd128_round_mask
V2dV2dV2dV2dUcIiIi
__builtin_ia32_rangess128_round_mask
V4fV4fV4fV4fUcIiIi
__builtin_ia32_reducepd128_mask
__builtin_ia32_reducepd256_mask
__builtin_ia32_reduceps128_mask
__builtin_ia32_reduceps256_mask
__builtin_ia32_reducesd_mask
__builtin_ia32_reducess_mask
__builtin_ia32_pmovswb128_mask
V16cV8sV16cUc
__builtin_ia32_pmovswb256_mask
V16cV16sV16cUs
__builtin_ia32_pmovuswb128_mask
__builtin_ia32_pmovuswb256_mask
__builtin_ia32_pmovwb128_mask
__builtin_ia32_cvtpd2qq512_mask
V8OiV8dV8OiUcIi
__builtin_ia32_cvtpd2uqq512_mask
__builtin_ia32_cvtps2qq512_mask
V8OiV8fV8OiUcIi
__builtin_ia32_cvtps2uqq512_mask
__builtin_ia32_cvtqq2pd512_mask
V8dV8OiV8dUcIi
__builtin_ia32_cvtqq2ps512_mask
V8fV8OiV8fUcIi
__builtin_ia32_cvttpd2qq512_mask
__builtin_ia32_cvttpd2uqq512_mask
__builtin_ia32_cvttps2qq512_mask
__builtin_ia32_cvttps2uqq512_mask
__builtin_ia32_cvtuqq2pd512_mask
__builtin_ia32_cvtuqq2ps512_mask
__builtin_ia32_rangepd512_mask
V8dV8dV8dIiV8dUcIi
__builtin_ia32_rangeps512_mask
V16fV16fV16fIiV16fUsIi
__builtin_ia32_reducepd512_mask
__builtin_ia32_reduceps512_mask
__builtin_ia32_prold512
V16iV16iIi
__builtin_ia32_prolq512
V8OiV8OiIi
__builtin_ia32_prold128
__builtin_ia32_prold256
__builtin_ia32_prolq128
__builtin_ia32_prolq256
__builtin_ia32_prolvd512
__builtin_ia32_prolvq512
__builtin_ia32_prord512
__builtin_ia32_prorq512
__builtin_ia32_prolvd128
__builtin_ia32_prolvd256
__builtin_ia32_prolvq128
__builtin_ia32_prolvq256
__builtin_ia32_prord128
__builtin_ia32_prord256
__builtin_ia32_prorq128
__builtin_ia32_prorq256
__builtin_ia32_prorvd512
__builtin_ia32_prorvq512
__builtin_ia32_prorvd128
__builtin_ia32_prorvd256
__builtin_ia32_prorvq128
__builtin_ia32_prorvq256
__builtin_ia32_pshufhw512
V32sV32sIi
__builtin_ia32_pshuflw512
__builtin_ia32_psllv32hi
__builtin_ia32_psllw512
V32sV32sV8s
__builtin_ia32_psllwi512
V32sV32si
__builtin_ia32_psllv16hi
avx512bw,avx512vl
__builtin_ia32_psllv8hi
__builtin_ia32_pslldi512
__builtin_ia32_psllqi512
V8OiV8Oii
__builtin_ia32_psrlv32hi
__builtin_ia32_psrlv16hi
__builtin_ia32_psrlv8hi
__builtin_ia32_psrldi512
__builtin_ia32_psrlqi512
__builtin_ia32_psrav32hi
__builtin_ia32_psrav16hi
__builtin_ia32_psrav8hi
__builtin_ia32_psravq128
__builtin_ia32_psravq256
__builtin_ia32_psraw512
__builtin_ia32_psrawi512
__builtin_ia32_psrlw512
__builtin_ia32_psrlwi512
__builtin_ia32_pslldqi512_byteshift
__builtin_ia32_psrldqi512_byteshift
__builtin_ia32_movdqa32load128_mask
__builtin_ia32_movdqa32load256_mask
__builtin_ia32_movdqa32load512_mask
V16iV16iC*V16iUs
__builtin_ia32_movdqa32store512_mask
vV16i*V16iUs
__builtin_ia32_movdqa64load512_mask
V8OiV8OiC*V8OiUc
__builtin_ia32_movdqa64store512_mask
vV8Oi*V8OiUc
__builtin_ia32_movdqa32store128_mask
__builtin_ia32_movdqa32store256_mask
__builtin_ia32_movdqa64load128_mask
V2OiV2OiC*V2OiUc
__builtin_ia32_movdqa64load256_mask
__builtin_ia32_movdqa64store128_mask
__builtin_ia32_movdqa64store256_mask
__builtin_ia32_vpmadd52huq512
__builtin_ia32_vpmadd52luq512
__builtin_ia32_vpmadd52huq128
avx512ifma,avx512vl
__builtin_ia32_vpmadd52huq256
__builtin_ia32_vpmadd52luq128
__builtin_ia32_vpmadd52luq256
__builtin_ia32_vcomisd
iV2dV2dIiIi
__builtin_ia32_vcomiss
iV4fV4fIiIi
__builtin_ia32_kunpckdi
UOiUOiUOi
__builtin_ia32_kunpcksi
__builtin_ia32_loaddquhi512_mask
V32sV32sC*V32sUi
__builtin_ia32_loaddquqi512_mask
V64cV64cC*V64cUOi
__builtin_ia32_fixupimmpd512_mask
V8dV8dV8dV8OiIiUcIi
__builtin_ia32_fixupimmpd512_maskz
__builtin_ia32_fixupimmps512_mask
V16fV16fV16fV16iIiUsIi
__builtin_ia32_fixupimmps512_maskz
__builtin_ia32_fixupimmsd_mask
V2dV2dV2dV2OiIiUcIi
__builtin_ia32_fixupimmsd_maskz
__builtin_ia32_fixupimmss_mask
V4fV4fV4fV4iIiUcIi
__builtin_ia32_fixupimmss_maskz
__builtin_ia32_getexpsd128_round_mask
__builtin_ia32_getexpss128_round_mask
__builtin_ia32_getmantsd_round_mask
V2dV2dV2dIiV2dUcIi
__builtin_ia32_getmantss_round_mask
V4fV4fV4fIiV4fUcIi
__builtin_ia32_loaddquhi128_mask
__builtin_ia32_loaddquhi256_mask
__builtin_ia32_loaddquqi128_mask
__builtin_ia32_loaddquqi256_mask
__builtin_ia32_fixupimmpd128_mask
V2dV2dV2dV2OiIiUc
__builtin_ia32_fixupimmpd128_maskz
__builtin_ia32_fixupimmpd256_mask
V4dV4dV4dV4OiIiUc
__builtin_ia32_fixupimmpd256_maskz
__builtin_ia32_fixupimmps128_mask
V4fV4fV4fV4iIiUc
__builtin_ia32_fixupimmps128_maskz
__builtin_ia32_fixupimmps256_mask
V8fV8fV8fV8iIiUc
__builtin_ia32_fixupimmps256_maskz
__builtin_ia32_loadapd128_mask
__builtin_ia32_loadsd128_mask
__builtin_ia32_loadapd256_mask
__builtin_ia32_loadaps128_mask
__builtin_ia32_loadss128_mask
__builtin_ia32_loadaps256_mask
__builtin_ia32_loaddqudi128_mask
__builtin_ia32_loaddqudi256_mask
__builtin_ia32_loaddqusi128_mask
__builtin_ia32_loaddqusi256_mask
__builtin_ia32_loadupd128_mask
__builtin_ia32_loadupd256_mask
__builtin_ia32_loadups128_mask
__builtin_ia32_loadups256_mask
__builtin_ia32_storedquhi512_mask
vV32s*V32sUi
__builtin_ia32_storedquqi512_mask
vV64c*V64cUOi
__builtin_ia32_storedquhi128_mask
__builtin_ia32_storedquhi256_mask
__builtin_ia32_storedquqi128_mask
__builtin_ia32_storedquqi256_mask
__builtin_ia32_storeapd128_mask
__builtin_ia32_storesd128_mask
__builtin_ia32_storeapd256_mask
__builtin_ia32_storeaps128_mask
__builtin_ia32_storess128_mask
__builtin_ia32_storeaps256_mask
__builtin_ia32_storedqudi128_mask
__builtin_ia32_storedqudi256_mask
__builtin_ia32_storedqusi128_mask
__builtin_ia32_storedqusi256_mask
__builtin_ia32_storeupd128_mask
__builtin_ia32_storeupd256_mask
__builtin_ia32_storeups128_mask
__builtin_ia32_storeups256_mask
__builtin_ia32_rcp14pd128_mask
__builtin_ia32_rcp14pd256_mask
__builtin_ia32_rcp14ps128_mask
__builtin_ia32_rcp14ps256_mask
__builtin_ia32_vplzcntd_128
__builtin_ia32_vplzcntd_256
__builtin_ia32_vplzcntq_128
__builtin_ia32_vplzcntq_256
__builtin_ia32_vcvtsd2si32
iV2dIi
__builtin_ia32_vcvtsd2usi32
UiV2dIi
__builtin_ia32_vcvtss2si32
iV4fIi
__builtin_ia32_vcvtss2usi32
UiV4fIi
__builtin_ia32_vcvttsd2si32
__builtin_ia32_vcvttsd2usi32
__builtin_ia32_vcvttss2si32
__builtin_ia32_vcvttss2usi32
__builtin_ia32_vpermilpd512
__builtin_ia32_vpermilps512
__builtin_ia32_vpermilvarpd512
V8dV8dV8Oi
__builtin_ia32_vpermilvarps512
V16fV16fV16i
__builtin_ia32_rndscalesd_round_mask
__builtin_ia32_rndscaless_round_mask
__builtin_ia32_scalefpd512_mask
__builtin_ia32_scalefps512_mask
__builtin_ia32_scalefsd_round_mask
__builtin_ia32_scalefss_round_mask
__builtin_ia32_psradi512
__builtin_ia32_psraqi512
__builtin_ia32_psraq128
__builtin_ia32_psraq256
__builtin_ia32_psraqi128
__builtin_ia32_psraqi256
__builtin_ia32_pslld512
V16iV16iV4i
__builtin_ia32_psllq512
V8OiV8OiV2Oi
__builtin_ia32_psllv16si
__builtin_ia32_psllv8di
__builtin_ia32_psrad512
__builtin_ia32_psraq512
__builtin_ia32_psrav16si
__builtin_ia32_psrav8di
__builtin_ia32_psrld512
__builtin_ia32_psrlq512
__builtin_ia32_psrlv16si
__builtin_ia32_psrlv8di
__builtin_ia32_pternlogd512_mask
V16iV16iV16iV16iIiUs
__builtin_ia32_pternlogd512_maskz
__builtin_ia32_pternlogq512_mask
V8OiV8OiV8OiV8OiIiUc
__builtin_ia32_pternlogq512_maskz
__builtin_ia32_pternlogd128_mask
V4iV4iV4iV4iIiUc
__builtin_ia32_pternlogd128_maskz
__builtin_ia32_pternlogd256_mask
V8iV8iV8iV8iIiUc
__builtin_ia32_pternlogd256_maskz
__builtin_ia32_pternlogq128_mask
V2OiV2OiV2OiV2OiIiUc
__builtin_ia32_pternlogq128_maskz
__builtin_ia32_pternlogq256_mask
V4OiV4OiV4OiV4OiIiUc
__builtin_ia32_pternlogq256_maskz
__builtin_ia32_shuf_f32x4
__builtin_ia32_shuf_f64x2
__builtin_ia32_shuf_i32x4
__builtin_ia32_shuf_i64x2
__builtin_ia32_shufpd512
__builtin_ia32_shufps512
__builtin_ia32_shuf_f32x4_256
__builtin_ia32_shuf_f64x2_256
__builtin_ia32_shuf_i32x4_256
__builtin_ia32_shuf_i64x2_256
__builtin_ia32_sqrtsd_round_mask
__builtin_ia32_sqrtss_round_mask
__builtin_ia32_rsqrt14pd128_mask
__builtin_ia32_rsqrt14pd256_mask
__builtin_ia32_rsqrt14ps128_mask
__builtin_ia32_rsqrt14ps256_mask
__builtin_ia32_cvtb2mask512
UOiV64c
__builtin_ia32_cvtmask2b512
V64cUOi
__builtin_ia32_cvtmask2w512
V32sUi
__builtin_ia32_cvtd2mask512
UsV16i
__builtin_ia32_cvtmask2d512
V16iUs
__builtin_ia32_cvtmask2q512
V8OiUc
__builtin_ia32_cvtq2mask512
UcV8Oi
__builtin_ia32_cvtb2mask128
UsV16c
__builtin_ia32_cvtb2mask256
UiV32c
__builtin_ia32_cvtmask2b128
V16cUs
__builtin_ia32_cvtmask2b256
V32cUi
__builtin_ia32_cvtmask2w128
V8sUc
__builtin_ia32_cvtmask2w256
V16sUs
__builtin_ia32_cvtd2mask128
UcV4i
avx512dq,avx512vl
__builtin_ia32_cvtd2mask256
UcV8i
__builtin_ia32_cvtmask2d128
V4iUc
__builtin_ia32_cvtmask2d256
V8iUc
__builtin_ia32_cvtmask2q128
V2OiUc
__builtin_ia32_cvtmask2q256
V4OiUc
__builtin_ia32_cvtq2mask128
UcV2Oi
__builtin_ia32_cvtq2mask256
UcV4Oi
__builtin_ia32_pmovsdb512_mask
V16cV16iV16cUs
__builtin_ia32_pmovsdb512mem_mask
vV16c*V16iUs
__builtin_ia32_pmovswb512mem_mask
vV32c*V32sUi
__builtin_ia32_pmovsdw512_mask
V16sV16iV16sUs
__builtin_ia32_pmovsdw512mem_mask
vV16s*V16iUs
__builtin_ia32_pmovsqb512_mask
V16cV8OiV16cUc
__builtin_ia32_pmovsqb512mem_mask
vV16c*V8OiUc
__builtin_ia32_pmovsqd512_mask
V8iV8OiV8iUc
__builtin_ia32_pmovsqd512mem_mask
vV8i*V8OiUc
__builtin_ia32_pmovsqw512_mask
V8sV8OiV8sUc
__builtin_ia32_pmovsqw512mem_mask
vV8s*V8OiUc
__builtin_ia32_pmovsdb128_mask
V16cV4iV16cUc
__builtin_ia32_pmovsdb128mem_mask
vV16c*V4iUc
__builtin_ia32_pmovswb128mem_mask
vV16c*V8sUc
__builtin_ia32_pmovsdb256_mask
V16cV8iV16cUc
__builtin_ia32_pmovsdb256mem_mask
vV16c*V8iUc
__builtin_ia32_pmovswb256mem_mask
vV16c*V16sUs
__builtin_ia32_pmovsdw128_mask
V8sV4iV8sUc
__builtin_ia32_pmovsdw128mem_mask
vV8s*V4iUc
__builtin_ia32_pmovsdw256_mask
V8sV8iV8sUc
__builtin_ia32_pmovsdw256mem_mask
vV8s*V8iUc
__builtin_ia32_pmovsqb128_mask
V16cV2OiV16cUc
__builtin_ia32_pmovsqb128mem_mask
vV16c*V2OiUc
__builtin_ia32_pmovsqb256_mask
V16cV4OiV16cUc
__builtin_ia32_pmovsqb256mem_mask
vV16c*V4OiUc
__builtin_ia32_pmovsqd128_mask
V4iV2OiV4iUc
__builtin_ia32_pmovsqd128mem_mask
vV4i*V2OiUc
__builtin_ia32_pmovsqd256_mask
V4iV4OiV4iUc
__builtin_ia32_pmovsqd256mem_mask
vV4i*V4OiUc
__builtin_ia32_pmovsqw128_mask
V8sV2OiV8sUc
__builtin_ia32_pmovsqw128mem_mask
vV8s*V2OiUc
__builtin_ia32_pmovsqw256_mask
V8sV4OiV8sUc
__builtin_ia32_pmovsqw256mem_mask
vV8s*V4OiUc
__builtin_ia32_pmovusdb512_mask
__builtin_ia32_pmovusdb512mem_mask
__builtin_ia32_pmovuswb512mem_mask
__builtin_ia32_pmovusdw512_mask
__builtin_ia32_pmovusdw512mem_mask
__builtin_ia32_pmovusqb512_mask
__builtin_ia32_pmovusqb512mem_mask
__builtin_ia32_pmovusqd512_mask
__builtin_ia32_pmovusqd512mem_mask
__builtin_ia32_pmovusqw512_mask
__builtin_ia32_pmovusqw512mem_mask
__builtin_ia32_pmovusdb128_mask
__builtin_ia32_pmovusdb128mem_mask
__builtin_ia32_pmovuswb128mem_mask
__builtin_ia32_pmovusdb256_mask
__builtin_ia32_pmovusdb256mem_mask
__builtin_ia32_pmovuswb256mem_mask
__builtin_ia32_pmovusdw128_mask
__builtin_ia32_pmovusdw128mem_mask
__builtin_ia32_pmovusdw256_mask
__builtin_ia32_pmovusdw256mem_mask
__builtin_ia32_pmovusqb128_mask
__builtin_ia32_pmovusqb128mem_mask
__builtin_ia32_pmovusqb256_mask
__builtin_ia32_pmovusqb256mem_mask
__builtin_ia32_pmovusqd128_mask
__builtin_ia32_pmovusqd128mem_mask
__builtin_ia32_pmovusqd256_mask
__builtin_ia32_pmovusqd256mem_mask
__builtin_ia32_pmovusqw128_mask
__builtin_ia32_pmovusqw128mem_mask
__builtin_ia32_pmovusqw256_mask
__builtin_ia32_pmovusqw256mem_mask
__builtin_ia32_pmovdb512_mask
__builtin_ia32_pmovdb512mem_mask
__builtin_ia32_pmovwb512mem_mask
__builtin_ia32_pmovdw512_mask
__builtin_ia32_pmovdw512mem_mask
__builtin_ia32_pmovqb512_mask
__builtin_ia32_pmovqb512mem_mask
__builtin_ia32_pmovqd512_mask
__builtin_ia32_pmovqd512mem_mask
__builtin_ia32_pmovqw512_mask
__builtin_ia32_pmovqw512mem_mask
__builtin_ia32_pmovdb128_mask
__builtin_ia32_pmovwb128mem_mask
__builtin_ia32_pmovdb128mem_mask
__builtin_ia32_pmovdb256_mask
__builtin_ia32_pmovdb256mem_mask
__builtin_ia32_pmovwb256mem_mask
__builtin_ia32_pmovdw128_mask
__builtin_ia32_pmovdw128mem_mask
__builtin_ia32_pmovdw256_mask
__builtin_ia32_pmovdw256mem_mask
__builtin_ia32_pmovqb128_mask
__builtin_ia32_pmovqb128mem_mask
__builtin_ia32_pmovqb256_mask
__builtin_ia32_pmovqb256mem_mask
__builtin_ia32_pmovqd128_mask
__builtin_ia32_pmovqd128mem_mask
__builtin_ia32_pmovqd256mem_mask
__builtin_ia32_pmovqw128_mask
__builtin_ia32_pmovqw128mem_mask
__builtin_ia32_pmovqw256_mask
__builtin_ia32_pmovqw256mem_mask
__builtin_ia32_extractf32x8_mask
V8fV16fIiV8fUc
__builtin_ia32_extractf64x2_512_mask
V2dV8dIiV2dUc
__builtin_ia32_extracti32x8_mask
V8iV16iIiV8iUc
__builtin_ia32_extracti64x2_512_mask
V2OiV8OiIiV2OiUc
__builtin_ia32_extracti32x4_mask
V4iV16iIiV4iUc
__builtin_ia32_extracti64x4_mask
V4OiV8OiIiV4OiUc
__builtin_ia32_extractf64x2_256_mask
V2dV4dIiV2dUc
__builtin_ia32_extracti64x2_256_mask
V2OiV4OiIiV2OiUc
__builtin_ia32_extractf32x4_256_mask
V4fV8fIiV4fUc
__builtin_ia32_extracti32x4_256_mask
V4iV8iIiV4iUc
__builtin_ia32_insertf32x8
V16fV16fV8fIi
__builtin_ia32_insertf64x2_512
V8dV8dV2dIi
__builtin_ia32_inserti32x8
V16iV16iV8iIi
__builtin_ia32_inserti64x2_512
V8OiV8OiV2OiIi
__builtin_ia32_insertf64x4
V8dV8dV4dIi
__builtin_ia32_inserti64x4
V8OiV8OiV4OiIi
__builtin_ia32_insertf64x2_256
__builtin_ia32_inserti64x2_256
__builtin_ia32_insertf32x4_256
__builtin_ia32_inserti32x4_256
__builtin_ia32_insertf32x4
V16fV16fV4fIi
__builtin_ia32_inserti32x4
V16iV16iV4iIi
__builtin_ia32_getmantpd128_mask
__builtin_ia32_getmantpd256_mask
__builtin_ia32_getmantps128_mask
__builtin_ia32_getmantps256_mask
__builtin_ia32_getmantpd512_mask
__builtin_ia32_getmantps512_mask
__builtin_ia32_getexppd512_mask
__builtin_ia32_getexpps512_mask
__builtin_ia32_vfmaddss3_mask
__builtin_ia32_vfmaddss3_maskz
__builtin_ia32_vfmaddss3_mask3
__builtin_ia32_vfmaddsd3_mask
__builtin_ia32_vfmaddsd3_maskz
__builtin_ia32_vfmaddsd3_mask3
__builtin_ia32_vfmsubsd3_mask3
__builtin_ia32_vfmsubss3_mask3
__builtin_ia32_permdf512
__builtin_ia32_permdi512
__builtin_ia32_permvarhi512
__builtin_ia32_permvardf512
__builtin_ia32_permvardi512
__builtin_ia32_permvarsf512
__builtin_ia32_permvarsi512
__builtin_ia32_permvarqi512
__builtin_ia32_permvarqi128
__builtin_ia32_permvarqi256
__builtin_ia32_permvarhi128
__builtin_ia32_permvarhi256
__builtin_ia32_permvardf256
__builtin_ia32_permvardi256
__builtin_ia32_fpclasspd128_mask
UcV2dIiUc
__builtin_ia32_fpclasspd256_mask
UcV4dIiUc
__builtin_ia32_fpclassps128_mask
UcV4fIiUc
__builtin_ia32_fpclassps256_mask
UcV8fIiUc
__builtin_ia32_fpclassps512_mask
UsV16fIiUs
__builtin_ia32_fpclasspd512_mask
UcV8dIiUc
__builtin_ia32_fpclasssd_mask
__builtin_ia32_fpclassss_mask
__builtin_ia32_kaddqi
__builtin_ia32_kaddhi
__builtin_ia32_kaddsi
__builtin_ia32_kadddi
__builtin_ia32_kandqi
__builtin_ia32_kandhi
__builtin_ia32_kandsi
__builtin_ia32_kanddi
__builtin_ia32_kandnqi
__builtin_ia32_kandnhi
__builtin_ia32_kandnsi
__builtin_ia32_kandndi
__builtin_ia32_korqi
__builtin_ia32_korhi
__builtin_ia32_korsi
__builtin_ia32_kordi
__builtin_ia32_kortestcqi
iUcUc
__builtin_ia32_kortestzqi
__builtin_ia32_kortestchi
iUsUs
__builtin_ia32_kortestzhi
__builtin_ia32_kortestcsi
iUiUi
__builtin_ia32_kortestzsi
__builtin_ia32_kortestcdi
iUOiUOi
__builtin_ia32_kortestzdi
__builtin_ia32_ktestcqi
__builtin_ia32_ktestzqi
__builtin_ia32_ktestchi
__builtin_ia32_ktestzhi
__builtin_ia32_ktestcsi
__builtin_ia32_ktestzsi
__builtin_ia32_ktestcdi
__builtin_ia32_ktestzdi
__builtin_ia32_kunpckhi
__builtin_ia32_kxnorqi
__builtin_ia32_kxnorhi
__builtin_ia32_kxnorsi
__builtin_ia32_kxnordi
__builtin_ia32_kxorqi
__builtin_ia32_kxorhi
__builtin_ia32_kxorsi
__builtin_ia32_kxordi
__builtin_ia32_kshiftliqi
UcUcIUi
__builtin_ia32_kshiftlihi
UsUsIUi
__builtin_ia32_kshiftlisi
__builtin_ia32_kshiftlidi
UOiUOiIUi
__builtin_ia32_kshiftriqi
__builtin_ia32_kshiftrihi
__builtin_ia32_kshiftrisi
__builtin_ia32_kshiftridi
__builtin_ia32_kmovb
__builtin_ia32_kmovw
__builtin_ia32_kmovd
__builtin_ia32_kmovq
__builtin_ia32_palignr512
V64cV64cV64cIi
__builtin_ia32_dbpsadbw128
V8sV16cV16cIi
__builtin_ia32_dbpsadbw256
V16sV32cV32cIi
__builtin_ia32_dbpsadbw512
V32sV64cV64cIi
__builtin_ia32_psadbw512
V8OiV64cV64c
__builtin_ia32_compressdf512_mask
__builtin_ia32_compressdi512_mask
V8OiV8OiV8OiUc
__builtin_ia32_compresshi512_mask
V32sV32sV32sUi
__builtin_ia32_compressqi512_mask
V64cV64cV64cUOi
__builtin_ia32_compresssf512_mask
__builtin_ia32_compresssi512_mask
V16iV16iV16iUs
__builtin_ia32_cmpsd_mask
UcV2dV2dIiUcIi
__builtin_ia32_cmpss_mask
UcV4fV4fIiUcIi
__builtin_ia32_pshufd512
__builtin_ia32_expanddf512_mask
__builtin_ia32_expanddi512_mask
__builtin_ia32_expandhi512_mask
__builtin_ia32_expandqi512_mask
__builtin_ia32_expandloaddf512_mask
__builtin_ia32_expandloaddi512_mask
__builtin_ia32_expandloadhi512_mask
__builtin_ia32_expandloadqi512_mask
__builtin_ia32_expandloadsf512_mask
__builtin_ia32_expandloadsi512_mask
__builtin_ia32_expandsf512_mask
__builtin_ia32_expandsi512_mask
__builtin_ia32_cvtps2pd512_mask
V8dV8fV8dUcIi
__builtin_ia32_compressstoredf512_mask
__builtin_ia32_compressstoredi512_mask
__builtin_ia32_compressstorehi512_mask
__builtin_ia32_compressstoreqi512_mask
__builtin_ia32_compressstoresf512_mask
__builtin_ia32_compressstoresi512_mask
__builtin_ia32_vcvtph2ps_mask
V4fV8sV4fUc
__builtin_ia32_vcvtph2ps256_mask
V8fV8sV8fUc
__builtin_ia32_vcvtps2ph_mask
V8sV4fIiV8sUc
__builtin_ia32_vcvtps2ph256_mask
V8sV8fIiV8sUc
__builtin_ia32_cvtw2mask512
UiV32s
__builtin_ia32_cvtw2mask128
UcV8s
__builtin_ia32_cvtw2mask256
UsV16s
__builtin_ia32_cvtsd2ss_round_mask
V4fV4fV2dV4fUcIi
__builtin_ia32_cvtsi2ss32
V4fV4fiIi
__builtin_ia32_cvtss2sd_round_mask
V2dV2dV4fV2dUcIi
__builtin_ia32_cvtusi2ss32
V4fV4fUiIi
__builtin_ia32_vpmultishiftqb512
__builtin_ia32_vpmultishiftqb128
__builtin_ia32_vpmultishiftqb256
__builtin_ia32_cvtne2ps2bf16_128
V8sV4fV4f
avx512bf16,avx512vl
__builtin_ia32_cvtne2ps2bf16_256
V16sV8fV8f
__builtin_ia32_cvtne2ps2bf16_512
V32sV16fV16f
__builtin_ia32_cvtneps2bf16_128_mask
V8sV4fV8sUc
__builtin_ia32_cvtneps2bf16_256_mask
V8sV8fV8sUc
__builtin_ia32_cvtneps2bf16_512_mask
V16sV16fV16sUs
__builtin_ia32_dpbf16ps_128
V4fV4fV4iV4i
__builtin_ia32_dpbf16ps_256
V8fV8fV8iV8i
__builtin_ia32_dpbf16ps_512
V16fV16fV16iV16i
__builtin_ia32_cvtsbf162ss_32
__builtin_ia32_vp2intersect_q_512
vV8OiV8OiUc*Uc*
__builtin_ia32_vp2intersect_q_256
vV4OiV4OiUc*Uc*
avx512vp2intersect,avx512vl
__builtin_ia32_vp2intersect_q_128
vV2OiV2OiUc*Uc*
__builtin_ia32_vp2intersect_d_512
vV16iV16iUs*Us*
__builtin_ia32_vp2intersect_d_256
vV8iV8iUc*Uc*
__builtin_ia32_vp2intersect_d_128
vV4iV4iUc*Uc*
__builtin_ia32_vcomish
iV8xV8xIiIi
__builtin_ia32_addph512
V32xV32xV32xIi
__builtin_ia32_subph512
__builtin_ia32_mulph512
__builtin_ia32_divph512
__builtin_ia32_maxph512
__builtin_ia32_minph512
__builtin_ia32_minph256
V16xV16xV16x
avx512fp16,avx512vl
__builtin_ia32_minph128
V8xV8xV8x
__builtin_ia32_maxph256
__builtin_ia32_maxph128
__builtin_ia32_addsh_round_mask
V8xV8xV8xV8xUcIi
__builtin_ia32_divsh_round_mask
__builtin_ia32_mulsh_round_mask
__builtin_ia32_subsh_round_mask
__builtin_ia32_maxsh_round_mask
__builtin_ia32_minsh_round_mask
__builtin_ia32_cmpph512_mask
UiV32xV32xIiUiIi
__builtin_ia32_cmpph256_mask
UsV16xV16xIiUs
__builtin_ia32_cmpph128_mask
UcV8xV8xIiUc
__builtin_ia32_cmpsh_mask
UcV8xV8xIiUcIi
__builtin_ia32_loadsh128_mask
V8xV8x*V8xUc
__builtin_ia32_storesh128_mask
vV8x*V8xUc
__builtin_ia32_rcpph128_mask
V8xV8xV8xUc
__builtin_ia32_rcpph256_mask
V16xV16xV16xUs
__builtin_ia32_rcpph512_mask
V32xV32xV32xUi
__builtin_ia32_rsqrtph128_mask
__builtin_ia32_rsqrtph256_mask
__builtin_ia32_rsqrtph512_mask
__builtin_ia32_getmantph128_mask
V8xV8xIiV8xUc
__builtin_ia32_getmantph256_mask
V16xV16xIiV16xUs
__builtin_ia32_getmantph512_mask
V32xV32xIiV32xUiIi
__builtin_ia32_getexpph128_mask
__builtin_ia32_getexpph256_mask
__builtin_ia32_getexpph512_mask
V32xV32xV32xUiIi
__builtin_ia32_scalefph128_mask
V8xV8xV8xV8xUc
__builtin_ia32_scalefph256_mask
V16xV16xV16xV16xUs
__builtin_ia32_scalefph512_mask
V32xV32xV32xV32xUiIi
__builtin_ia32_rndscaleph_128_mask
__builtin_ia32_rndscaleph_256_mask
__builtin_ia32_rndscaleph_mask
__builtin_ia32_reduceph128_mask
__builtin_ia32_reduceph256_mask
__builtin_ia32_reduceph512_mask
__builtin_ia32_rcpsh_mask
__builtin_ia32_rsqrtsh_mask
__builtin_ia32_getmantsh_round_mask
V8xV8xV8xIiV8xUcIi
__builtin_ia32_getexpsh128_round_mask
__builtin_ia32_scalefsh_round_mask
__builtin_ia32_rndscalesh_round_mask
V8xV8xV8xV8xUcIiIi
__builtin_ia32_reducesh_mask
__builtin_ia32_sqrtph
V8xV8x
__builtin_ia32_sqrtph256
V16xV16x
__builtin_ia32_sqrtph512
V32xV32xIi
__builtin_ia32_sqrtsh_round_mask
__builtin_ia32_fpclassph128_mask
UcV8xIiUc
__builtin_ia32_fpclassph256_mask
UsV16xIiUs
__builtin_ia32_fpclassph512_mask
UiV32xIiUi
__builtin_ia32_fpclasssh_mask
__builtin_ia32_vcvtpd2ph128_mask
V8xV2dV8xUc
__builtin_ia32_vcvtpd2ph256_mask
V8xV4dV8xUc
__builtin_ia32_vcvtpd2ph512_mask
V8xV8dV8xUcIi
__builtin_ia32_vcvtph2pd128_mask
V2dV8xV2dUc
__builtin_ia32_vcvtph2pd256_mask
V4dV8xV4dUc
__builtin_ia32_vcvtph2pd512_mask
V8dV8xV8dUcIi
__builtin_ia32_vcvtsh2ss_round_mask
V4fV4fV8xV4fUcIi
__builtin_ia32_vcvtss2sh_round_mask
V8xV8xV4fV8xUcIi
__builtin_ia32_vcvtsd2sh_round_mask
V8xV8xV2dV8xUcIi
__builtin_ia32_vcvtsh2sd_round_mask
V2dV2dV8xV2dUcIi
__builtin_ia32_vcvtph2w128_mask
V8sV8xV8sUc
__builtin_ia32_vcvtph2w256_mask
V16sV16xV16sUs
__builtin_ia32_vcvtph2w512_mask
V32sV32xV32sUiIi
__builtin_ia32_vcvttph2w128_mask
__builtin_ia32_vcvttph2w256_mask
__builtin_ia32_vcvttph2w512_mask
__builtin_ia32_vcvtw2ph128_mask
V8xV8sV8xUc
__builtin_ia32_vcvtw2ph256_mask
V16xV16sV16xUs
__builtin_ia32_vcvtw2ph512_mask
V32xV32sV32xUiIi
__builtin_ia32_vcvtph2uw128_mask
V8UsV8xV8UsUc
__builtin_ia32_vcvtph2uw256_mask
V16UsV16xV16UsUs
__builtin_ia32_vcvtph2uw512_mask
V32UsV32xV32UsUiIi
__builtin_ia32_vcvttph2uw128_mask
__builtin_ia32_vcvttph2uw256_mask
__builtin_ia32_vcvttph2uw512_mask
__builtin_ia32_vcvtuw2ph128_mask
V8xV8UsV8xUc
__builtin_ia32_vcvtuw2ph256_mask
V16xV16UsV16xUs
__builtin_ia32_vcvtuw2ph512_mask
V32xV32UsV32xUiIi
__builtin_ia32_vcvtph2dq128_mask
V4iV8xV4iUc
__builtin_ia32_vcvtph2dq256_mask
V8iV8xV8iUc
__builtin_ia32_vcvtph2dq512_mask
V16iV16xV16iUsIi
__builtin_ia32_vcvtph2udq128_mask
V4UiV8xV4UiUc
__builtin_ia32_vcvtph2udq256_mask
V8UiV8xV8UiUc
__builtin_ia32_vcvtph2udq512_mask
V16UiV16xV16UiUsIi
__builtin_ia32_vcvtdq2ph128_mask
V8xV4iV8xUc
__builtin_ia32_vcvtdq2ph256_mask
V8xV8iV8xUc
__builtin_ia32_vcvtdq2ph512_mask
V16xV16iV16xUsIi
__builtin_ia32_vcvtudq2ph128_mask
V8xV4UiV8xUc
__builtin_ia32_vcvtudq2ph256_mask
V8xV8UiV8xUc
__builtin_ia32_vcvtudq2ph512_mask
V16xV16UiV16xUsIi
__builtin_ia32_vcvttph2dq128_mask
__builtin_ia32_vcvttph2dq256_mask
__builtin_ia32_vcvttph2dq512_mask
__builtin_ia32_vcvttph2udq128_mask
__builtin_ia32_vcvttph2udq256_mask
__builtin_ia32_vcvttph2udq512_mask
__builtin_ia32_vcvtqq2ph128_mask
V8xV2OiV8xUc
__builtin_ia32_vcvtqq2ph256_mask
V8xV4OiV8xUc
__builtin_ia32_vcvtqq2ph512_mask
V8xV8OiV8xUcIi
__builtin_ia32_vcvtph2qq128_mask
V2OiV8xV2OiUc
__builtin_ia32_vcvtph2qq256_mask
V4OiV8xV4OiUc
__builtin_ia32_vcvtph2qq512_mask
V8OiV8xV8OiUcIi
__builtin_ia32_vcvtuqq2ph128_mask
V8xV2UOiV8xUc
__builtin_ia32_vcvtuqq2ph256_mask
V8xV4UOiV8xUc
__builtin_ia32_vcvtuqq2ph512_mask
V8xV8UOiV8xUcIi
__builtin_ia32_vcvtph2uqq128_mask
V2UOiV8xV2UOiUc
__builtin_ia32_vcvtph2uqq256_mask
V4UOiV8xV4UOiUc
__builtin_ia32_vcvtph2uqq512_mask
V8UOiV8xV8UOiUcIi
__builtin_ia32_vcvttph2qq128_mask
__builtin_ia32_vcvttph2qq256_mask
__builtin_ia32_vcvttph2qq512_mask
__builtin_ia32_vcvttph2uqq128_mask
__builtin_ia32_vcvttph2uqq256_mask
__builtin_ia32_vcvttph2uqq512_mask
__builtin_ia32_vcvtsh2si32
iV8xIi
__builtin_ia32_vcvtsh2usi32
UiV8xIi
__builtin_ia32_vcvtusi2sh
V8xV8xUiIi
__builtin_ia32_vcvtsi2sh
V8xV8xiIi
__builtin_ia32_vcvttsh2si32
__builtin_ia32_vcvttsh2usi32
__builtin_ia32_vcvtph2psx128_mask
V4fV8xV4fUc
__builtin_ia32_vcvtph2psx256_mask
V8fV8xV8fUc
__builtin_ia32_vcvtph2psx512_mask
V16fV16xV16fUsIi
__builtin_ia32_vcvtps2phx128_mask
V8xV4fV8xUc
__builtin_ia32_vcvtps2phx256_mask
V8xV8fV8xUc
__builtin_ia32_vcvtps2phx512_mask
V16xV16fV16xUsIi
__builtin_ia32_vfmaddph
V8xV8xV8xV8x
__builtin_ia32_vfmaddph256
V16xV16xV16xV16x
__builtin_ia32_vfmaddph512_mask
__builtin_ia32_vfmaddph512_mask3
__builtin_ia32_vfmaddph512_maskz
__builtin_ia32_vfmaddsubph
__builtin_ia32_vfmaddsubph256
__builtin_ia32_vfmaddsubph512_mask
__builtin_ia32_vfmaddsubph512_maskz
__builtin_ia32_vfmaddsubph512_mask3
__builtin_ia32_vfmsubaddph512_mask3
__builtin_ia32_vfmsubph512_mask3
__builtin_ia32_vfmaddsh3_mask
__builtin_ia32_vfmaddsh3_maskz
__builtin_ia32_vfmaddsh3_mask3
__builtin_ia32_vfmsubsh3_mask3
__builtin_ia32_vfmaddcph128_mask
__builtin_ia32_vfmaddcph128_maskz
__builtin_ia32_vfmaddcph256_mask
__builtin_ia32_vfmaddcph256_maskz
__builtin_ia32_vfmaddcph512_mask
__builtin_ia32_vfmaddcph512_maskz
__builtin_ia32_vfmaddcph512_mask3
__builtin_ia32_vfcmaddcph128_mask
__builtin_ia32_vfcmaddcph128_maskz
__builtin_ia32_vfcmaddcph256_mask
__builtin_ia32_vfcmaddcph256_maskz
__builtin_ia32_vfcmaddcph512_mask
__builtin_ia32_vfcmaddcph512_maskz
__builtin_ia32_vfcmaddcph512_mask3
__builtin_ia32_vfmaddcsh_mask
__builtin_ia32_vfmaddcsh_maskz
__builtin_ia32_vfcmaddcsh_mask
__builtin_ia32_vfcmaddcsh_maskz
__builtin_ia32_vfmaddcsh_round_mask
__builtin_ia32_vfmaddcsh_round_mask3
__builtin_ia32_vfcmaddcsh_round_mask
__builtin_ia32_vfcmaddcsh_round_mask3
__builtin_ia32_vfmulcsh_mask
__builtin_ia32_vfcmulcsh_mask
__builtin_ia32_vfmulcph128_mask
__builtin_ia32_vfmulcph256_mask
__builtin_ia32_vfmulcph512_mask
__builtin_ia32_vfcmulcph128_mask
__builtin_ia32_vfcmulcph256_mask
__builtin_ia32_vfcmulcph512_mask
__builtin_ia32_selectb_128
V16cUsV16cV16c
__builtin_ia32_selectb_256
V32cUiV32cV32c
__builtin_ia32_selectb_512
V64cUOiV64cV64c
__builtin_ia32_selectw_128
V8sUcV8sV8s
__builtin_ia32_selectw_256
V16sUsV16sV16s
__builtin_ia32_selectw_512
V32sUiV32sV32s
__builtin_ia32_selectd_128
V4iUcV4iV4i
__builtin_ia32_selectd_256
V8iUcV8iV8i
__builtin_ia32_selectd_512
V16iUsV16iV16i
__builtin_ia32_selectph_128
V8xUcV8xV8x
__builtin_ia32_selectph_256
V16xUsV16xV16x
__builtin_ia32_selectph_512
V32xUiV32xV32x
__builtin_ia32_selectq_128
V2OiUcV2OiV2Oi
__builtin_ia32_selectq_256
V4OiUcV4OiV4Oi
__builtin_ia32_selectq_512
V8OiUcV8OiV8Oi
__builtin_ia32_selectps_128
V4fUcV4fV4f
__builtin_ia32_selectps_256
V8fUcV8fV8f
__builtin_ia32_selectps_512
V16fUsV16fV16f
__builtin_ia32_selectpd_128
V2dUcV2dV2d
__builtin_ia32_selectpd_256
V4dUcV4dV4d
__builtin_ia32_selectpd_512
V8dUcV8dV8d
__builtin_ia32_selectsh_128
__builtin_ia32_selectss_128
__builtin_ia32_selectsd_128
__builtin_ia32_reduce_add_d512
iV16i
__builtin_ia32_reduce_add_q512
OiV8Oi
__builtin_ia32_reduce_and_d512
__builtin_ia32_reduce_and_q512
__builtin_ia32_reduce_fadd_pd512
ddV8d
__builtin_ia32_reduce_fadd_ps512
ffV16f
__builtin_ia32_reduce_fadd_ph512
xxV32x
__builtin_ia32_reduce_fadd_ph256
xxV16x
__builtin_ia32_reduce_fadd_ph128
xxV8x
__builtin_ia32_reduce_fmax_pd512
dV8d
__builtin_ia32_reduce_fmax_ps512
fV16f
__builtin_ia32_reduce_fmax_ph512
xV32x
__builtin_ia32_reduce_fmax_ph256
xV16x
__builtin_ia32_reduce_fmax_ph128
xV8x
__builtin_ia32_reduce_fmin_pd512
__builtin_ia32_reduce_fmin_ps512
__builtin_ia32_reduce_fmin_ph512
__builtin_ia32_reduce_fmin_ph256
__builtin_ia32_reduce_fmin_ph128
__builtin_ia32_reduce_fmul_pd512
__builtin_ia32_reduce_fmul_ps512
__builtin_ia32_reduce_fmul_ph512
__builtin_ia32_reduce_fmul_ph256
__builtin_ia32_reduce_fmul_ph128
__builtin_ia32_reduce_mul_d512
__builtin_ia32_reduce_mul_q512
__builtin_ia32_reduce_or_d512
__builtin_ia32_reduce_or_q512
__builtin_ia32_reduce_smax_d512
__builtin_ia32_reduce_smax_q512
__builtin_ia32_reduce_smin_d512
__builtin_ia32_reduce_smin_q512
__builtin_ia32_reduce_umax_d512
__builtin_ia32_reduce_umax_q512
__builtin_ia32_reduce_umin_d512
__builtin_ia32_reduce_umin_q512
__builtin_ia32_monitorx
__builtin_ia32_mwaitx
vUiUiUi
__builtin_ia32_umonitor
__builtin_ia32_umwait
UcUiUiUi
__builtin_ia32_tpause
__builtin_ia32_clzero
__builtin_ia32_cldemote
__builtin_ia32_directstore_u32
vUi*Ui
__builtin_ia32_movdir64b
vv*vC*
__builtin_ia32_ptwrite32
__builtin_ia32_invpcid
__builtin_ia32_enqcmd
Ucv*vC*
__builtin_ia32_enqcmds
__builtin_ia32_loadiwkey
vV2OiV2OiV2OiUi
__builtin_ia32_encodekey128_u32
UiUiV2Oiv*
__builtin_ia32_encodekey256_u32
UiUiV2OiV2Oiv*
__builtin_ia32_aesenc128kl_u8
UcV2Oi*V2OivC*
__builtin_ia32_aesenc256kl_u8
__builtin_ia32_aesdec128kl_u8
__builtin_ia32_aesdec256kl_u8
__builtin_ia32_aesencwide128kl_u8
UcV2Oi*V2OiC*vC*
kl,widekl
__builtin_ia32_aesencwide256kl_u8
__builtin_ia32_aesdecwide128kl_u8
__builtin_ia32_aesdecwide256kl_u8
__builtin_ia32_serialize
__builtin_ia32_xsusldtrk
__builtin_ia32_xresldtrk
_ReadBarrier
_WriteBarrier
__emul
__emulu
ULLiUiUi
__stosb
vUc*Ucz
__int2c
__ud2
__readfsbyte
UcUNi
__readfsword
UsUNi
__readfsdword
UNiUNi
__readfsqword
ULLiUNi
__readgsbyte
__readgsword
__readgsdword
__readgsqword
WiWiD*Wi
WiWiD*
_mul128
LLiLLiLLiLLi*
_umul128
ULLiULLiULLiULLi*
__faststorefence
__shiftleft128
ULLiULLiULLiUc
__shiftright128
__builtin_ia32_readeflags_u64
__builtin_ia32_writeeflags_u64
vUOi
__builtin_ia32_cvtss2si64
OiV4f
__builtin_ia32_cvttss2si64
__builtin_ia32_cvtsd2si64
OiV2d
__builtin_ia32_cvttsd2si64
__builtin_ia32_movnti64
vOi*Oi
__builtin_ia32_vec_ext_v2di
OiV2OiIi
__builtin_ia32_vec_set_v2di
V2OiV2OiOiIi
__builtin_ia32_crc32di
__builtin_ia32_vec_ext_v4di
OiV4OiIi
__builtin_ia32_vec_set_v4di
V4OiV4OiOiIi
__builtin_ia32_rdfsbase32
__builtin_ia32_rdfsbase64
__builtin_ia32_rdgsbase32
__builtin_ia32_rdgsbase64
__builtin_ia32_wrfsbase32
__builtin_ia32_wrfsbase64
__builtin_ia32_wrgsbase32
__builtin_ia32_wrgsbase64
__builtin_ia32_fxrstor64
__builtin_ia32_fxsave64
__builtin_ia32_xsave64
__builtin_ia32_xrstor64
__builtin_ia32_xsaveopt64
__builtin_ia32_xrstors64
__builtin_ia32_xsavec64
__builtin_ia32_xsaves64
__builtin_ia32_incsspq
__builtin_ia32_rdsspq
__builtin_ia32_wrssq
vUOiv*
__builtin_ia32_wrussq
__builtin_ia32_addcarryx_u64
UcUcUOiUOiUOi*
__builtin_ia32_subborrow_u64
__builtin_ia32_rdrand64_step
UiUOi*
__builtin_ia32_rdseed64_step
__builtin_ia32_lzcnt_u64
__builtin_ia32_bextr_u64
__builtin_ia32_tzcnt_u64
__builtin_ia32_bzhi_di
__builtin_ia32_pdep_di
__builtin_ia32_pext_di
__builtin_ia32_bextri_u64
UOiUOiIUOi
__builtin_ia32_lwpins64
UcUOiUiIUi
__builtin_ia32_lwpval64
vUOiUiIUi
__builtin_ia32_vcvtsd2si64
OiV2dIi
__builtin_ia32_vcvtsd2usi64
UOiV2dIi
__builtin_ia32_vcvtss2si64
OiV4fIi
__builtin_ia32_vcvtss2usi64
UOiV4fIi
__builtin_ia32_vcvttsd2si64
__builtin_ia32_vcvttsd2usi64
__builtin_ia32_vcvttss2si64
__builtin_ia32_vcvttss2usi64
__builtin_ia32_cvtsi2sd64
V2dV2dOiIi
__builtin_ia32_cvtsi2ss64
V4fV4fOiIi
__builtin_ia32_cvtusi2sd64
V2dV2dUOiIi
__builtin_ia32_cvtusi2ss64
V4fV4fUOiIi
__builtin_ia32_vcvtsh2si64
OiV8xIi
__builtin_ia32_vcvtsh2usi64
UOiV8xIi
__builtin_ia32_vcvtusi642sh
V8xV8xUOiIi
__builtin_ia32_vcvtsi642sh
V8xV8xOiIi
__builtin_ia32_vcvttsh2si64
__builtin_ia32_vcvttsh2usi64
__builtin_ia32_directstore_u64
__builtin_ia32_clui
__builtin_ia32_stui
__builtin_ia32_testui
__builtin_ia32_senduipi
vUWi
__builtin_ia32_tile_loadconfig_internal
__builtin_ia32_tileloadd64_internal
V256iUsUsvC*z
__builtin_ia32_tileloaddt164_internal
__builtin_ia32_tdpbssd_internal
V256iUsUsUsV256iV256iV256i
__builtin_ia32_tdpbsud_internal
__builtin_ia32_tdpbusd_internal
__builtin_ia32_tdpbuud_internal
__builtin_ia32_tilestored64_internal
vUsUsv*zV256i
__builtin_ia32_tilezero_internal
V256iUsUs
__builtin_ia32_tdpbf16ps_internal
__builtin_ia32_tile_loadconfig
__builtin_ia32_tile_storeconfig
__builtin_ia32_tilerelease
__builtin_ia32_tilezero
__builtin_ia32_tileloadd64
vIUcvC*z
__builtin_ia32_tileloaddt164
__builtin_ia32_tilestored64
vIUcv*z
__builtin_ia32_tdpbssd
vIUcIUcIUc
__builtin_ia32_tdpbsud
__builtin_ia32_tdpbusd
__builtin_ia32_tdpbuud
__builtin_ia32_tdpbf16ps
__builtin_ia32_ptwrite64
__builtin_bitrev
__builtin_getid
__builtin_getps
__builtin_setps
__xcore__
__XS1B__
auto
break
case
char
const
continue
default
double
else
enum
extern
float
goto
inline
_ExtInt
long
register
restrict
return
short
signed
sizeof
static
struct
switch
typedef
union
unsigned
void
volatile
while
_Alignas
_Alignof
_Atomic
_Bool
_Complex
_Generic
_Imaginary
_Noreturn
_Static_assert
_Thread_local
__func__
__objc_yes
__objc_no
__ptrauth
__ptrauth_restricted_intptr
bool
catch
class
const_cast
delete
dynamic_cast
explicit
export
false
friend
mutable
namespace
operator
private
protected
public
reinterpret_cast
static_cast
template
this
throw
true
typename
typeid
using
virtual
wchar_t
alignas
alignof
char16_t
char32_t
constexpr
decltype
noexcept
nullptr
static_assert
thread_local
concept
requires
co_await
co_return
co_yield
module
import
consteval
constinit
char8_t
_Float16
_Accum
_Fract
_Sat
_Decimal32
_Decimal64
_Decimal128
__null
__alignof
__attribute
__builtin_choose_expr
__builtin_offsetof
__builtin_FILE
__builtin_FUNCTION
__builtin_LINE
__builtin_COLUMN
__builtin_types_compatible_p
__builtin_va_arg
__extension__
__float128
__ibm128
__imag
__int128
__label__
__real
__thread
__FUNCTION__
__PRETTY_FUNCTION__
__auto_type
typeof
__FUNCDNAME__
__FUNCSIG__
L__FUNCTION__
L__FUNCSIG__
__is_interface_class
__is_sealed
__is_destructible
__is_trivially_destructible
__is_nothrow_destructible
__is_nothrow_assignable
__is_constructible
__is_nothrow_constructible
__is_assignable
__has_nothrow_move_assign
__has_trivial_move_assign
__has_trivial_move_constructor
__has_nothrow_assign
__has_nothrow_copy
__has_nothrow_constructor
__has_trivial_assign
__has_trivial_copy
__has_trivial_constructor
__has_trivial_destructor
__has_virtual_destructor
__is_abstract
__is_aggregate
__is_base_of
__is_class
__is_convertible_to
__is_empty
__is_enum
__is_final
__is_literal
__is_pod
__is_polymorphic
__is_standard_layout
__is_trivial
__is_trivially_assignable
__is_trivially_constructible
__is_trivially_copyable
__is_union
__has_unique_object_representations
__underlying_type
__reference_binds_to_temporary
__is_lvalue_expr
__is_rvalue_expr
__is_arithmetic
__is_floating_point
__is_integral
__is_complete_type
__is_void
__is_array
__is_function
__is_reference
__is_lvalue_reference
__is_rvalue_reference
__is_fundamental
__is_object
__is_scalar
__is_compound
__is_pointer
__is_member_object_pointer
__is_member_function_pointer
__is_member_pointer
__is_const
__is_volatile
__is_signed
__is_unsigned
__is_same
__is_convertible
__array_rank
__array_extent
__private_extern__
__module_private__
__builtin_ptrauth_type_discriminator
__builtin_xnu_type_signature
__builtin_xnu_type_summary
__builtin_xnu_types_compatible
__builtin_tmo_type_get_metadata
__declspec
__cdecl
__stdcall
__fastcall
__thiscall
__regcall
__vectorcall
__forceinline
__unaligned
__super
__global
__local
__constant
__private
__generic
__kernel
__read_only
__write_only
__read_write
__builtin_astype
vec_step
image1d_t
image1d_array_t
image1d_buffer_t
image2d_t
image2d_array_t
image2d_depth_t
image2d_array_depth_t
image2d_msaa_t
image2d_array_msaa_t
image2d_msaa_depth_t
image2d_array_msaa_depth_t
image3d_t
pipe
addrspace_cast
__builtin_omp_required_simd_align
__pascal
__vector
__pixel
__bool
__bf16
half
__bridge
__bridge_transfer
__bridge_retained
__bridge_retain
__covariant
__contravariant
__kindof
_Nonnull
_Nullable
_Nullable_result
_Null_unspecified
__ptr64
__ptr32
__sptr
__uptr
__w64
__uuidof
__try
__finally
__leave
__int64
__if_exists
__if_not_exists
__single_inheritance
__multiple_inheritance
__virtual_inheritance
__interface
__builtin_convertvector
__builtin_bit_cast
__builtin_available
__builtin_sycl_unique_stable_name
__unknown_anytype
__builtin_unsafe_forge_bidi_indexable
__builtin_unsafe_forge_single
__builtin_get_pointer_lower_bound
__builtin_get_pointer_upper_bound
__builtin_terminated_by_to_indexable
__builtin_unsafe_terminated_by_to_indexable
__builtin_unsafe_terminated_by_from_indexable
unknown
code_completion
comment
identifier
raw_identifier
numeric_constant
char_constant
wide_char_constant
utf8_char_constant
utf16_char_constant
utf32_char_constant
string_literal
wide_string_literal
header_name
utf8_string_literal
utf16_string_literal
utf32_string_literal
l_square
r_square
l_paren
r_paren
l_brace
r_brace
period
ellipsis
ampamp
ampequal
star
starequal
plus
plusplus
plusequal
minus
arrow
minusminus
minusequal
tilde
exclaim
exclaimequal
slash
slashequal
percent
percentequal
less
lessless
lessequal
lesslessequal
spaceship
greater
greatergreater
greaterequal
greatergreaterequal
caret
caretequal
pipepipe
pipeequal
question
colon
semi
equal
equalequal
comma
hash
hashhash
hashat
periodstar
arrowstar
coloncolon
lesslessless
greatergreatergreater
caretcaret
annot_cxxscope
annot_typename
annot_template_id
annot_non_type
annot_non_type_undeclared
annot_non_type_dependent
annot_overload_set
annot_primary_expr
annot_decltype
annot_pragma_unused
annot_pragma_vis
annot_pragma_pack
annot_pragma_parser_crash
annot_pragma_captured
annot_pragma_dump
annot_pragma_msstruct
annot_pragma_align
annot_pragma_weak
annot_pragma_weakalias
annot_pragma_redefine_extname
annot_pragma_fp_contract
annot_pragma_fenv_access
annot_pragma_fenv_access_ms
annot_pragma_fenv_round
annot_pragma_float_control
annot_pragma_ms_pointers_to_members
annot_pragma_ms_vtordisp
annot_pragma_ms_pragma
annot_pragma_opencl_extension
annot_attr_openmp
annot_pragma_openmp
annot_pragma_openmp_end
annot_pragma_loop_hint
annot_pragma_fp
annot_pragma_attribute
annot_module_include
annot_module_begin
annot_module_end
annot_header_unit
__is_interface_class
__is_sealed
__is_destructible
__is_trivially_destructible
__is_nothrow_destructible
__has_nothrow_move_assign
__has_trivial_move_assign
__has_trivial_move_constructor
__has_nothrow_assign
__has_nothrow_copy
__has_nothrow_constructor
__has_trivial_assign
__has_trivial_copy
__has_trivial_constructor
__has_trivial_destructor
__has_virtual_destructor
__is_abstract
__is_aggregate
__is_class
__is_empty
__is_enum
__is_final
__is_literal
__is_pod
__is_polymorphic
__is_standard_layout
__is_trivial
__is_trivially_copyable
__is_union
__has_unique_object_representations
__is_arithmetic
__is_floating_point
__is_integral
__is_complete_type
__is_void
__is_array
__is_function
__is_reference
__is_lvalue_reference
__is_rvalue_reference
__is_fundamental
__is_object
__is_scalar
__is_compound
__is_pointer
__is_member_object_pointer
__is_member_function_pointer
__is_member_pointer
__is_const
__is_volatile
__is_signed
__is_unsigned
__builtin_types_compatible_p
__is_nothrow_assignable
__is_assignable
__is_base_of
__is_convertible_to
__is_trivially_assignable
__reference_binds_to_temporary
__is_same
__is_convertible
__builtin_xnu_types_compatible
__is_constructible
__is_nothrow_constructible
__is_trivially_constructible
__array_rank
__array_extent
sizeof
alignof
__alignof
__builtin_ptrauth_type_discriminator
__builtin_xnu_type_signature
__builtin_xnu_type_summary
__builtin_tmo_type_get_metadata
vec_step
__builtin_omp_required_simd_align
tapi-1400.0.11
clang
Apple 
 version 14.0.0
LLVM 14.0.0
no-format
-Wfatal-errors
-Wfatal-errors=
-Rno-
custom
function
function-entry
function-exit
typed
none
omp_no_openmp
omp_no_openmp_routines
omp_no_parallelism
ompx_spmd_amenable
use-dbg-addr
Use llvm.dbg.addr for all local variables
Address space 0 can never be non-integral
Invalid address space, must be a 24bit integer
Missing size specification for pointer in datalayout string
Invalid pointer size of 0 bytes
Missing alignment specification for pointer in datalayout string
Pointer ABI alignment must be a power of 2
Pointer preferred alignment must be a power of 2
Invalid index size of 0 bytes
Sized aggregate specification in datalayout string
Missing alignment specification in datalayout string
ABI alignment specification must be >0 for non-aggregate types
Invalid ABI alignment, must be a 16bit integer
Invalid ABI alignment, must be a power of 2
Invalid preferred alignment, must be a 16bit integer
Invalid preferred alignment, must be a power of 2
Zero width native integer type in datalayout string
Alignment is neither 0 nor a power of 2
Unknown function pointer alignment type in datalayout string
Unexpected trailing characters after mangling specifier in datalayout string
Expected mangling specifier in datalayout string
Unknown mangling specifier in datalayout string
Unknown mangling in datalayout string
Unknown specifier in datalayout string
Invalid bit width, must be a 24bit integer
Preferred alignment cannot be less than the ABI alignment
Trailing separator in datalayout string
Expected token before separator in datalayout string
Invalid address space, must be a 24-bit integer
not a number, or does not fit in an unsigned int
number of bits must be a byte width multiple
enable-fs-discriminator
Enable adding flow sensitive discriminators
pass-remarks
Enable optimization remarks from passes whose name match the given regular expression
pass-remarks-missed
Enable missed optimization remarks from passes whose name match the given regular expression
pass-remarks-analysis
Enable optimization analysis remarks from passes whose name match the given regular expression
Invalid regular expression '
' in -pass-remarks: 
cl::location(x) specified more than once!
non-global-value-max-name-size
Maximum size for the name of non-global values.
disable-i2p-p2i-opt
Disables inttoptr/ptrtoint roundtrip optimization
opaque-pointers
Use opaque pointers
propagate-attrs
Propagate attributes in index
import-constants-with-refs
Import constant global variables with references
opt-bisect-limit
Maximum optimization to perform
NOT 
BISECT: 
running pass 
use-dereferenceable-at-point-semantics
Deref attributes and metadata infer facts at definition only
SV64
SV3264
Unknown
R_POS
R_RL
R_RLA
R_NEG
R_REL
R_TOC
R_TRL
R_TRLA
R_GL
R_TCL
R_REF
R_BA
R_BR
R_RBA
R_RBR
R_TLS
R_TLS_IE
R_TLS_LD
R_TLS_LE
R_TLSM
R_TLSML
R_TOCU
R_TOCL
remarks-section
Emit a section containing remark diagnostics metadata. By default, this is enabled for the following formats: yaml-strtab, bitstream.
can't read more than %zu at a time, trying to read %u
can't enter sub-block: current code size is 0
can't enter sub block: already at end of stream
Abbreviation starts with an Array or a Blob
Array element type can't be an Array or a Blob
Array op not second to last
Array element type has to be an encoding of a type
Fixed or VBR abbrev record with size > MaxChunkData
Abbrev record with no operands
Invalid abbrev number
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789._
cortex-a34
cortex-a35
cortex-a53
cortex-a55
cortex-a510
cortex-a57
cortex-a65
cortex-a65ae
cortex-a72
cortex-a73
cortex-a75
cortex-a76
cortex-a76ae
cortex-a77
cortex-a78
cortex-a78c
cortex-r82
cortex-x1
neoverse-e1
neoverse-n1
neoverse-n2
neoverse-v1
cyclone
apple-a7
apple-a8
apple-a9
apple-a10
apple-a11
apple-a12
apple-a13
apple-a14
apple-m1
apple-s4
apple-s5
exynos-m3
exynos-m4
exynos-m5
falkor
saphira
kryo
thunderx2t99
thunderx3t110
thunderx
thunderxt88
thunderxt81
thunderxt83
tsv110
a64fx
carmel
invalid
+fp-armv8
+neon
+crc
+crypto
+dotprod
+fp16fml
+fullfp16
+spe
+ras
+lse
+rdm
+sve
+sve2
+sve2-aes
+sve2-sm4
+sve2-sha3
+sve2-bitperm
+tme
+rcpc
+brbe
+pauth
+flagm
+sme
+sme-f64
+sme-i64
+sme2
+i8mm
none
<empty>
armv8-a
armv8.1-a
8.1-A
v8.1a
armv8.2-a
8.2-A
v8.2a
armv8.3-a
8.3-A
v8.3a
armv8.4-a
8.4-A
v8.4a
armv8.5-a
8.5-A
v8.5a
armv8.6-a
8.6-A
v8.6a
armv8.7-a
8.7-A
v8.7a
armv9-a
armv9.1-a
9.1-A
v9.1a
armv9.2-a
9.2-A
v9.2a
armv8-r
-crc
-lse
-rdm
crypto
-crypto
+sm4
-sm4
sha3
+sha3
-sha3
sha2
+sha2
-sha2
+aes
-aes
dotprod
-dotprod
-fp-armv8
simd
-neon
fp16
-fullfp16
fp16fml
-fp16fml
profile
-spe
-ras
-sve
sve2
-sve2
sve2-aes
-sve2-aes
sve2-sm4
-sve2-sm4
sve2-sha3
-sve2-sha3
sve2-bitperm
-sve2-bitperm
rcpc
-rcpc
+rand
-rand
memtag
+mte
-mte
ssbs
+ssbs
-ssbs
predres
+predres
-predres
bf16
+bf16
-bf16
i8mm
-i8mm
f32mm
+f32mm
-f32mm
f64mm
+f64mm
-f64mm
-tme
ls64
+ls64
-ls64
brbe
-brbe
pauth
-pauth
flagm
-flagm
-sme
sme-f64
-sme-f64
sme-i64
-sme-i64
sme2
-sme2
v5te
v6sm
v6s-m
v6-m
v6zk
v6kz
v7hl
v7-a
v7-r
v7-m
v7em
v7e-m
aarch64
arm64
v8-a
v8.1a
v8.1-a
v8.2a
v8.2-a
v8.3a
v8.3-a
v8.4a
v8.4-a
v8.5a
v8.5-a
v8.6a
v8.6-a
v8.7a
v8.7-a
v8-r
v9-a
v9.1a
v9.1-a
v9.2a
v9.2-a
v8m.base
v8-m.base
v8m.main
v8-m.main
v8.1m.main
v8.1-m.main
-vfp2
-vfp2sp
-vfp3
-vfp3d16
-vfp3d16sp
-vfp3sp
-fp16
-vfp4
-vfp4d16
-vfp4d16sp
-vfp4sp
-fp-armv8d16
-fp-armv8d16sp
-fp-armv8sp
+d32
-d32
thumb
fpe2
fpe3
maverick
invalid
vfp2
vfpv2
vfp3
vfpv3
vfp4
vfpv4
vfp3-d16
vfpv3-d16
vfp4-d16
vfpv4-d16
fp4-sp-d16
vfpv4-sp-d16
fpv4-sp-d16
fp4-dp-d16
fpv4-dp-d16
fp5-sp-d16
fpv5-sp-d16
fp5-dp-d16
fpv5-dp-d16
fpv5-d16
neon-vfpv3
neon
generic
arm8
arm810
strongarm
strongarm110
strongarm1100
strongarm1110
arm7tdmi
arm7tdmi-s
arm710t
arm720t
arm9
arm9tdmi
arm920
arm920t
arm922t
arm940t
ep9312
arm10tdmi
arm1020t
arm9e
arm946e-s
arm966e-s
arm968e-s
arm10e
arm1020e
arm1022e
arm926ej-s
arm1136j-s
arm1136jf-s
mpcore
mpcorenovfp
arm1176jz-s
arm1176jzf-s
arm1156t2-s
arm1156t2f-s
cortex-m0
cortex-m0plus
cortex-m1
sc000
cortex-a5
cortex-a7
cortex-a8
cortex-a9
cortex-a12
cortex-a15
cortex-a17
krait
cortex-r4
cortex-r4f
cortex-r5
cortex-r7
cortex-r8
cortex-r52
sc300
cortex-m3
cortex-m4
cortex-m7
cortex-m23
cortex-m33
cortex-m35p
cortex-m55
cortex-a32
cortex-a35
cortex-a53
cortex-a55
cortex-a57
cortex-a72
cortex-a73
cortex-a75
cortex-a76
cortex-a76ae
cortex-a77
cortex-a78
cortex-a78c
cortex-x1
neoverse-n1
neoverse-n2
neoverse-v1
cyclone
exynos-m3
exynos-m4
exynos-m5
kryo
iwmmxt
xscale
swift
-hwdiv-arm
-hwdiv
fp.dp
aapcs
aapcs16
apcs-gnu
aapcs-linux
armv2
armv2a
armv3
armv3m
armv4
armv4t
armv5t
armv5te
armv5tej
5TEJ
armv6
armv6k
armv6t2
v6t2
armv6kz
armv6-m
armv7-a
armv7ve
v7ve
armv7-r
armv7-m
armv7e-m
7E-M
armv8-a
armv8.1-a
8.1-A
armv8.2-a
8.2-A
armv8.3-a
8.3-A
armv8.4-a
8.4-A
armv8.5-a
8.5-A
armv8.6-a
8.6-A
armv8.7-a
8.7-A
armv9-a
armv9.1-a
9.1-A
armv9.2-a
9.2-A
armv8-r
armv8-m.base
8-M.Baseline
armv8-m.main
8-M.Mainline
armv8.1-m.main
8.1-M.Mainline
iwmmxt2
armv7s
armv7k
none
vfpv3-fp16
vfpv3-d16-fp16
vfpv3xd
vfpv3xd-fp16
fp-armv8
fp-armv8-fullfp16-d16
fp-armv8-fullfp16-sp-d16
neon-fp16
neon-vfpv4
neon-fp-armv8
crypto-neon-fp-armv8
softvfp
dotprod
-dsp
mve.fp
idiv
fp16
+ras
-ras
fp16fml
-i8mm
+lob
-lob
cdecp0
-cdecp0
cdecp1
+cdecp1
-cdecp1
cdecp2
+cdecp2
-cdecp2
cdecp3
+cdecp3
-cdecp3
cdecp4
+cdecp4
-cdecp4
cdecp5
+cdecp5
-cdecp5
cdecp6
+cdecp6
-cdecp6
cdecp7
-cdecp7
arm,thumb
String contains multiple dots
Hex strings require an exponent
Invalid character in significand
Significand has no digits
+Inf
Invalid string length
String has no digits
Invalid string
-Inf
0.0E+0
e+00
Invalid trailing hexadecimal fraction!
Exponent has no digits
Invalid character in exponent
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
Number of memory regions: 
Bytes used: 
Bytes allocated: 
Bytes wasted: 
 (includes alignment, etc)
: for the 
 option: 
may only occur zero or one times!
must occur exactly one time!
>...
' is invalid value for boolean argument! Try 0 or 1
' value invalid for integer argument!
' value invalid for uint argument!
' value invalid for ullong argument!
 (default: 
= *unknown option value*
*no default*
= *cannot print option value*
General options
: CommandLine Error: Option '
' registered more than once!
inconsistency in registered CommandLine options
Cannot specify more than one option with cl::ConsumeAfter!
Could not convert UTF16 to UTF8
=<value>
<empty>
    =
uint
ulong
zlib error: Z_MEM_ERROR
zlib error: Z_BUF_ERROR
zlib error: Z_STREAM_ERROR
zlib error: Z_DATA_ERROR
Multiple errors:
Multiple errors
Inconvertible error value. An error has occurred that could not be converted to a known std::error_code. Please file a bug.
A file error occurred.
LLVM ERROR: 
LLVM ERROR: out of memory
atomic_write_error: 
failed_to_create_uniq_file
output_stream_error
failed_to_rename_temp_file
Allocation failed
decimal64
decimal128
decimal32
 complex
 imaginary
alignof (
noexcept (
sizeof (
sizeof... (
typeid (
%LaL
yptn
'block-literal'
template<
> typename 
operator?
operator"" 
::operator 
_GLOBAL__N
pixel vector[
std::allocator
std::basic_string
std::string
std::istream
std::ostream
std::iostream
std::basic_string<char, std::char_traits<char>, std::allocator<char> >
std::basic_istream<char, std::char_traits<char> >
std::basic_ostream<char, std::char_traits<char> >
std::basic_iostream<char, std::char_traits<char> >
string literal
template parameter object for 
vtable for 
VTT for 
typeinfo for 
typeinfo name for 
covariant return thunk to 
thread-local wrapper routine for 
thread-local initialization routine for 
virtual thunk to 
non-virtual thunk to 
guard variable for 
reference temporary for 
construction vtable for 
 [enable_if:
___Z
____Z
invocation function for block in 
%.*g
Invalid UTF-8 sequence
[{0}:{1}, byte={2}]: {3}
Invalid JSON value (null?)
Invalid JSON value (true?)
Invalid JSON value (false?)
Expected , or ] after array element
Expected object key
Expected : after object key
Expected , or } after object property
Invalid JSON value
Unterminated string
Control character in string
Invalid escape sequence
Invalid \u escape sequence
Invalid JSON value (number?)
Text after end of document
failed to obtain absolute path for 
.lock
failed to create unique file 
failed to get host id
failed to write to 
failed to create link 
failed to remove lockfile 
/dev/urandom
<stdin>
%.2x
Program arguments: 
PLEASE submit a bug report to http://developer.apple.com/bugreporter/ and include the crash backtrace.
Stack dump:
zvlsseg
+experimental-v
+experimental-zvlsseg
zvamo
+experimental-zvamo
+experimental-
standard user-level extension 'e' requires 'rv32'
string must be lowercase
string must begin with rv32{i,e,g} or rv64{i,g}
first letter should be 'e', 'i' or 'g'
standard user-level extension not given in canonical order '%c'
invalid standard user-level extension '%c'
unsupported standard user-level extension '%c'
d requires f extension to also be specified
extension name missing after separator '_'
invalid extension prefix '
%s not given in canonical order '%s'
%s name missing after '%s'
duplicated %s '%s'
unsupported %s '%s'
mafdqlcbjtpvn
minor version number missing after 'p' for extension '
Failed to parse major version number for extension '
Failed to parse minor version number for extension '
multi-character extensions must be separated by underscores
requires '-menable-experimental-extensions' for experimental extension '
experimental extension requires explicit version number `
unsupported version number 
 for experimental extension '
'(this compiler supports 
 for extension '
non-standard supervisor-level extension
standard supervisor-level extension
non-standard user-level extension
standard user-level extension
Allocation failed
Allocation failed
SmallVector unable to grow. Requested capacity (
) is larger than maximum value for size type (
SmallVector capacity unable to grow. Already at maximum size 
Included from 
<unknown>
Supplied regexp was blank
can't open file '
error parsing file '
malformed section header on line 
malformed regex for section 
malformed line 
malformed section 
malformed regex in line 
                          ... Statistics Collected ...
%*u %-*s - %s
Statistics are disabled.  
Build with asserts or with -DLLVM_FORCE_ENABLE_STATS
Allocation failed
Expected 'kind mangled_name mangled_name', found '
Invalid kind, expected 'name', 'type', or 'encoding', found '
Manglings '
' and '
' have both been used in prior remappings. Move this remapping earlier in the file.
Could not demangle '
' as a <
>; invalid mangling?
generic
invalid
generic-rv32
generic-rv64
rocket-rv32
rocket-rv64
sifive-7-rv32
sifive-7-rv64
sifive-e20
sifive-e21
sifive-e24
sifive-e31
sifive-e34
sifive-e76
sifive-s21
sifive-s51
sifive-s54
sifive-s76
sifive-u54
sifive-u74
rocket
sifive-7-series
+64bit
-64bit
gfx600
tahiti
gfx601
pitcairn
verde
gfx602
hainan
oland
gfx700
kaveri
gfx701
hawaii
gfx702
gfx703
kabini
mullins
gfx704
bonaire
gfx705
gfx801
carrizo
gfx802
iceland
tonga
gfx803
fiji
polaris10
polaris11
gfx805
tongapro
gfx810
stoney
gfx900
gfx902
gfx904
gfx906
gfx908
gfx909
gfx90a
gfx90c
gfx1010
gfx1011
gfx1012
gfx1013
gfx1030
gfx1031
gfx1032
gfx1033
gfx1034
gfx1035
r600
rv630
rv635
r630
rs780
rs880
rv610
rv620
rv670
rv710
rv730
rv740
rv770
cedar
palm
cypress
hemlock
juniper
redwood
sumo
sumo2
barts
caicos
aruba
cayman
turks
rv32imc
rv32imac
rv32imafc
rv64imac
rv64gc
Error opening info-output-file '
 for appending!
%9lld  
  Total Execution Time: %5.4f seconds (%5.4f wall clock)
   ---User Time---
   --System Time--
   --User+System--
   ---Wall Time---
  ---Mem---
  ---Instr---
  --- Name ---
Total
"time.
%.*e
.wall
.user
.sys
.mem
.instr
misc
Miscellaneous Ungrouped Timers
        -----     
  %7.4f (%5.1f%%)
track-memory
Enable -time-passes memory tracking (this may be slow)
sort-timers
In the report, sort the timers in each group in wall clock time order
unknown
aarch64
aarch64_32
aarch64_be
amdgcn
amdil64
amdil
armeb
bpfeb
bpfel
csky
hexagon
hsail64
hsail
kalimba
lanai
le32
le64
m68k
mips64
mips64el
mips
mipsel
msp430
nvptx64
nvptx
powerpc64
powerpc64le
powerpc
powerpcle
r600
renderscript32
renderscript64
riscv32
riscv64
shave
sparc
sparcel
sparcv9
spir64
spir
s390x
tcele
thumb
thumbeb
wasm32
wasm64
i386
x86_64
xcore
wasm
apple
amdhsa
amdpal
ananas
cuda
cloudabi
contiki
darwin
dragonfly
elfiamcu
emscripten
freebsd
fuchsia
haiku
hermit
hurd
kfreebsd
linux
macosx
mesa3d
minix
nvcl
nacl
netbsd
openbsd
rtems
solaris
tvos
bridgeos
driverkit
sepos
wasi
watchos
windows
android
code16
coreclr
cygnus
eabi
eabihf
gnuabi64
gnuabin32
gnueabi
gnueabihf
gnux32
gnu_ilp32
itanium
msvc
macabi
musl
musleabi
musleabihf
muslx32
simulator
ppc32le
ppcle
mipsn32
mipsr6
mipsr6el
mipsisa32r6
mipsisa32r6el
mipsisa64r6
mipsisa64r6el
arm64e
arm1176jzf-s
cortex-a8
cortex-a9
cortex-a7
arm926ej-s
strongarm
arm7tdmi
i786
i886
i986
powerpcspe
xscaleeb
mipseb
mipsallegrex
mipsallegrexel
mips64eb
mipsn32r6
mipsn32el
mips64r6el
mipsn32r6el
sparc64
xcoff
coff
goff
macho
expected root node
expected mapping node
case-sensitive
use-external-names
overlay-relative
redirecting-with
roots
expected array
expected integer
version mismatch, expected 0
'fallthrough' and 'redirecting-with' are mutually exclusive
expected valid redirect kind
unknown key
duplicate key '
expected mapping node for file or directory entry
external-contents
use-external-name
unknown value for 'type'
entry already has 'contents' or 'external-contents'
missing key 'contents' or 'external-contents'
'use-external-name' is not supported for 'directory' entries
'contents' is not supported for 'directory-remap' entries
entry with relative path at the root level is not discoverable
expected boolean value
fallback
redirect-only
missing key '
  'version': 0,
  'case-sensitive': '
  'use-external-names': '
  'overlay-relative': '
  'roots': [
'type': 'directory',
'name': "
'contents': [
'type': 'file',
'external-contents': "
Color Options
error: 
warning: 
note: 
remark: 
color
Use colors in output (default=autodetect)
cmov
popcnt
sse2
sse3
ssse3
sse4.1
sse4.2
avx2
sse4a
fma4
avx512f
bmi2
pclmul
avx512vl
avx512bw
avx512dq
avx512cd
avx512er
avx512pf
avx512vbmi
avx512ifma
avx5124vnniw
avx5124fmaps
avx512vpopcntdq
avx512vbmi2
gfni
vpclmulqdq
avx512vnni
avx512bitalg
avx512bf16
avx512vp2intersect
i386
i486
winchip-c6
winchip2
i586
pentium
pentium-mmx
pentiumpro
i686
pentium2
pentium3
pentium3m
pentium-m
c3-2
yonah
pentium4
pentium4m
prescott
nocona
core2
penryn
bonnell
atom
silvermont
goldmont
goldmont-plus
tremont
nehalem
corei7
westmere
sandybridge
corei7-avx
ivybridge
core-avx-i
haswell
core-avx2
broadwell
skylake
skylake-avx512
cascadelake
cooperlake
cannonlake
icelake-client
rocketlake
icelake-server
tigerlake
sapphirerapids
alderlake
lakemont
k6-2
k6-3
athlon
athlon-tbird
athlon-xp
athlon-mp
athlon-4
athlon64
athlon-fx
opteron
k8-sse3
athlon64-sse3
opteron-sse3
amdfam10
barcelona
btver1
btver2
bdver1
bdver2
bdver3
bdver4
znver1
znver2
znver3
x86-64
x86-64-v2
x86-64-v3
x86-64-v4
geode
3dnow
3dnowa
64bit
amx-bf16
amx-int8
amx-tile
cldemote
clflushopt
clwb
clzero
cx16
crc32
enqcmd
f16c
fsgsbase
fxsr
invpcid
widekl
lzcnt
movbe
movdir64b
movdiri
mwaitx
pconfig
prefetchwt1
prfchw
ptwrite
rdpid
rdrnd
rdseed
sahf
serialize
shstk
tsxldtrk
uintr
vaes
vzeroupper
waitpkg
wbnoinvd
xsave
xsavec
xsaveopt
xsaves
hreset
avx512fp16
avxvnni
retpoline-external-thunk
retpoline-indirect-branches
retpoline-indirect-calls
lvi-cfi
lvi-load-hardening
YAML
#;/?:@&=+$,_.!~*'()[]
Cannot consume non-ascii characters
Could not find expected : for simple key
Expected quote at end of scalar
Found unexpected ':' while scanning a plain scalar
,:?[]{}
Found invalid tab character in indentation
Got empty plain scalar
Got empty alias or anchor
Expected a line break after block scalar header
Leading all-spaces line must be smaller than the block indent
A text line is less indented than the block scalar
-?:,[]{}#&*!|>'"%@`
Unrecognized character while tokenizing.
Can only iterate over the stream once
Unknown tag handle 
tag:yaml.org,2002:null
tag:yaml.org,2002:str
tag:yaml.org,2002:seq
Unrecognized escape code
Null key in Key Value.
Unexpected token in Key Value.
Unexpected token. Expected Key or Block End
Unexpected token. Expected Key, Flow Entry, or Flow Mapping End.
Unexpected token. Expected Block Entry or Block End.
Could not find closing ]!
Expected , between entries!
tag:yaml.org,2002:
Already encountered an anchor for this node!
Already encountered a tag for this node!
Unexpected token
not a mapping
missing required key '
unknown key '
not a sequence
expected sequence of bit values
unexpected scalar in sequence of bit values
unknown bit value
unexpected scalar
Map key must be a scalar
Map value must not be empty
unknown node kind
invalid call
                
true
false
invalid boolean
invalid number
out of range number
invalid version format
IO failure on output stream: 
[:<:]]
[:>:]]
alnum
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
blank
cntrl
digit
graph
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
abcdefghijklmnopqrstuvwxyz
print
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~ 
punct
!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
space
ABCDEFGHIJKLMNOPQRSTUVWXYZ
xdigit
0123456789ABCDEFabcdef
alert
backspace
newline
vertical-tab
form-feed
carriage-return
exclamation-mark
quotation-mark
number-sign
dollar-sign
percent-sign
ampersand
apostrophe
left-parenthesis
right-parenthesis
asterisk
plus-sign
comma
hyphen
hyphen-minus
period
full-stop
slash
solidus
three
four
five
seven
eight
nine
colon
semicolon
less-than-sign
equals-sign
greater-than-sign
question-mark
commercial-at
left-square-bracket
backslash
reverse-solidus
right-square-bracket
circumflex
circumflex-accent
underscore
low-line
grave-accent
left-brace
left-curly-bracket
vertical-line
right-brace
right-curly-bracket
REG_0x%x
REG_NOMATCH
llvm_regexec() failed to match
REG_BADPAT
invalid regular expression
REG_ECOLLATE
invalid collating element
REG_ECTYPE
invalid character class
REG_EESCAPE
trailing backslash (\)
REG_ESUBREG
invalid backreference number
REG_EBRACK
brackets ([ ]) not balanced
REG_EPAREN
parentheses not balanced
REG_EBRACE
braces not balanced
REG_BADBR
invalid repetition count(s)
REG_ERANGE
invalid character range
REG_ESPACE
out of memory
REG_BADRPT
repetition-operator operand invalid
REG_EMPTY
empty (sub)expression
REG_ASSERT
"can't happen" -- you found a bug
REG_INVARG
invalid argument to regex routine
*** unknown regexp error code ***
x86_64-apple-darwin20.1.0
arm64
generic
cyclone
apple-a12
hw.physicalcpu
-darwin
.0.0
0123456789abcdef
-%%%%%%
HOME
.cache
TMPDIR
TEMP
TEMPDIR
/var/tmp/
TERM
/dev/null
COLUMNS
 "\$
Child timed out but wouldn't die
Child timed out
Error waiting for child process
Program could not be executed
 (core dumped)
Executable "
" doesn't exist!
Can't redirect stderr to stdout
posix_spawn failed
Couldn't fork
/dev/null
Cannot posix_spawn_file_actions_addopen
Cannot open file '
' for 
input
output
Cannot dup2
llvm-symbolizer
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
%-2d
 %-*s
 %#0*lx
 + %tu
too many signal callbacks already registered
pthread_attr_init failed
pthread_attr_setstacksize failed
pthread_create failed
pthread_join failed
pthread_attr_destroy failed
Missing RuntimeRoot
RuntimeRoot should be an array
PublicSDKContentRoot
Missing PublicSDKContentRoot
SDKContentRoot should be an array
projectName
Missing SDKContentRoot
projectWithError
