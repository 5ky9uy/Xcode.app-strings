CNSt3__120__shared_ptr_emplaceIN8Archiver13_IArchiveImplENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Archiver13_OArchiveImplENS_9allocatorIS2_EEEE
NSt3__114basic_ofstreamIcNS_11char_traitsIcEEEE
NSt3__113basic_filebufIcNS_11char_traitsIcEEEE
NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
N6CoreML16MultiArrayBufferE
NSt3__120__shared_ptr_pointerIPhZN6CoreML16MultiArrayBufferC1ERKNS_6vectorImNS_9allocatorImEEEENS2_10ScalarTypeENS2_12StorageOrderEE3$_0NS5_IhEEEE
ZN6CoreML16MultiArrayBufferC1ERKNSt3__16vectorImNS1_9allocatorImEEEENS_10ScalarTypeENS_12StorageOrderEE3$_0
NSt3__120__shared_ptr_pointerIPhZN6CoreML16MultiArrayBufferC1ES1_RKNS_6vectorImNS_9allocatorImEEEES9_NS2_10ScalarTypeEE3$_1NS5_IhEEEE
ZN6CoreML16MultiArrayBufferC1EPhRKNSt3__16vectorImNS2_9allocatorImEEEES8_NS_10ScalarTypeEE3$_1
?NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__121__basic_string_commonILb1EEE
NSt3__110__function6__funcIPFN17EspressoConverter18compileLayerResultERKN6CoreML13Specification18NeuralNetworkLayerERN8Espresso18sequential_builderERNS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_11layer_shapeENS_4lessISI_EENSG_INS_4pairIKSI_SJ_EEEEEEiENSG_IST_EESS_EE
NSt3__110__function6__baseIFN17EspressoConverter18compileLayerResultERKN6CoreML13Specification18NeuralNetworkLayerERN8Espresso18sequential_builderERNS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS9_11layer_shapeENS_4lessISI_EENSG_INS_4pairIKSI_SJ_EEEEEEiEEE
PFN17EspressoConverter18compileLayerResultERKN6CoreML13Specification18NeuralNetworkLayerERN8Espresso18sequential_builderERNSt3__13mapINS9_12basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEENS6_11layer_shapeENS9_4lessISG_EENSE_INS9_4pairIKSG_SH_EEEEEEiE
FN17EspressoConverter18compileLayerResultERKN6CoreML13Specification18NeuralNetworkLayerERN8Espresso18sequential_builderERNSt3__13mapINS9_12basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEENS6_11layer_shapeENS9_4lessISG_EENSE_INS9_4pairIKSG_SH_EEEEEEiE
NSt3__117bad_function_callE
22MLCustomLayerException
NSt3__120__shared_ptr_pointerIPhZ71-[MLNeuralNetworkEngine bindInputsAndOutputs:allocatedImageData:error:]E3$_0NS_9allocatorIhEEEE
Z71-[MLNeuralNetworkEngine bindInputsAndOutputs:allocatedImageData:error:]E3$_0
6Kernel
7QMatrix
6Solver
9Solver_NU
5SVC_Q
11ONE_CLASS_Q
5SVR_Q
N6CoreML17ObjCCodeGeneratorE
NSt3__120__shared_ptr_pointerIPN8Archiver14_ODataBlobImplENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN8Archiver14_ODataBlobImplEEE
NSt3__120__shared_ptr_emplaceIN8Archiver14_ODataBlobImplENS_9allocatorIS2_EEEE
N6CoreML18SwiftCodeGeneratorE
NSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE
N6CoreML13TreeEnsembles8Internal30incompatible_execution_profileE
N6CoreML13CodeGeneratorE
?NSt3__120__shared_ptr_emplaceIN6CoreML13Specification5ModelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6CoreML13Specification8MetadataENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6CoreML13Specification16ModelDescriptionENS_9allocatorIS3_EEEE
NSt3__110__function6__funcIZN6CoreML13TreeEnsembles8Internal16gatherPropertiesERKNS_10shared_ptrINS3_13_TreeEnsembleEEEE3$_0NS_9allocatorISA_EEFvRKNS5_INS3_20_TreeComputationNodeEEEEEE
NSt3__110__function6__baseIFvRKNS_10shared_ptrIN6CoreML13TreeEnsembles20_TreeComputationNodeEEEEEE
ZN6CoreML13TreeEnsembles8Internal16gatherPropertiesERKNSt3__110shared_ptrINS0_13_TreeEnsembleEEEE3$_0
NSt3__120__shared_ptr_pointerIPN8Archiver11MMappedFileENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN8Archiver11MMappedFileEEE
NSt3__120__shared_ptr_pointerIPN8Archiver14_IDataBlobImplENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN8Archiver14_IDataBlobImplEEE
NSt3__120__shared_ptr_emplaceIN8Archiver14_IDataBlobImplENS_9allocatorIS2_EEEE
@(#)PROGRAM:coremlcompiler  PROJECT:CoreML-1
N6google8protobuf14FatalExceptionE
N6google8protobuf7ClosureE
N6google8protobuf8internal16FunctionClosure0E
N6google8protobuf8internal12FieldSkipperE
N6google8protobuf8internal29CodedOutputStreamFieldSkipperE
N6google8protobuf2io16ArrayInputStreamE
N6google8protobuf2io17ArrayOutputStreamE
N6google8protobuf2io18StringOutputStreamE
N6google8protobuf2io22LazyStringOutputStreamE
N6google8protobuf2io18CopyingInputStreamE
N6google8protobuf2io25CopyingInputStreamAdaptorE
N6google8protobuf2io19CopyingOutputStreamE
N6google8protobuf2io26CopyingOutputStreamAdaptorE
N6google8protobuf2io19ZeroCopyInputStreamE
N6google8protobuf2io20ZeroCopyOutputStreamE
N6google8protobuf2io15FileInputStreamE
N6google8protobuf2io15FileInputStream22CopyingFileInputStreamE
N6google8protobuf2io16FileOutputStreamE
N6google8protobuf2io16FileOutputStream23CopyingFileOutputStreamE
N6google8protobuf2io18IstreamInputStreamE
N6google8protobuf2io18IstreamInputStream25CopyingIstreamInputStreamE
N6google8protobuf2io19OstreamOutputStreamE
N6google8protobuf2io19OstreamOutputStream26CopyingOstreamOutputStreamE
N6google8protobuf2io24ConcatenatingInputStreamE
N6google8protobuf2io19LimitingInputStreamE
N6google8protobuf11MessageLiteE
N6CoreML13Specification18CategoricalMappingE
N6CoreML13Specification8PipelineE
N6CoreML13Specification18PipelineClassifierE
N6CoreML13Specification17PipelineRegressorE
N6CoreML13Specification18FeatureDescriptionE
N6CoreML13Specification8MetadataE
N6CoreML13Specification16ModelDescriptionE
N6CoreML13Specification5ModelE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES9_LNS1_14WireFormatLite9FieldTypeE9ELSB_9ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_LNS1_14WireFormatLite9FieldTypeE9ELSC_9ELi0EEENS0_11MessageLiteESA_SA_LSC_9ELSC_9ELi0EEE
N6google8protobuf3MapINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_E8InnerMapE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_LNS1_14WireFormatLite9FieldTypeE9ELSC_9ELi0EEENS0_11MessageLiteESA_SA_LSC_9ELSC_9ELi0EE15MapEntryWrapperE
N6CoreML5ModelE
NSt3__120__shared_ptr_pointerIPN6CoreML13Specification5ModelENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN6CoreML13Specification5ModelEEE
NSt3__120__shared_ptr_pointerIPN6CoreML13Specification8MetadataENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN6CoreML13Specification8MetadataEEE
NSt3__120__shared_ptr_pointerIPN6CoreML13Specification16ModelDescriptionENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN6CoreML13Specification16ModelDescriptionEEE
N6CoreML13Specification8IdentityE
NSt3__110__function6__funcIPFN6CoreML6ResultERKNS2_13Specification18NeuralNetworkLayerEENS_9allocatorIS9_EES8_EE
NSt3__110__function6__baseIFN6CoreML6ResultERKNS2_13Specification18NeuralNetworkLayerEEEE
PFN6CoreML6ResultERKNS_13Specification18NeuralNetworkLayerEE
FN6CoreML6ResultERKNS_13Specification18NeuralNetworkLayerEE
N6CoreML13Specification13OneHotEncoderE
N6CoreML13Specification6ScalerE
N6CoreML13Specification25GLMClassifier_DoubleArrayE
N6CoreML13Specification13GLMClassifierE
N6CoreML13Specification7ImputerE
N6CoreML13Specification12LinearKernelE
N6CoreML13Specification9RBFKernelE
N6CoreML13Specification10PolyKernelE
N6CoreML13Specification13SigmoidKernelE
N6CoreML13Specification6KernelE
N6CoreML13Specification10SparseNodeE
N6CoreML13Specification12SparseVectorE
N6CoreML13Specification20SparseSupportVectorsE
N6CoreML13Specification11DenseVectorE
N6CoreML13Specification19DenseSupportVectorsE
N6CoreML13Specification12CoefficientsE
N6CoreML13Specification22SupportVectorRegressorE
N6CoreML13Specification23SupportVectorClassifierE
N6CoreML13Specification10NormalizerE
N6CoreML13Specification16StringToInt64MapE
N6CoreML13Specification16Int64ToStringMapE
N6CoreML13Specification17StringToDoubleMapE
N6CoreML13Specification16Int64ToDoubleMapE
N6CoreML13Specification12StringVectorE
N6CoreML13Specification11Int64VectorE
N6CoreML13Specification12DoubleVectorE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEExLNS1_14WireFormatLite9FieldTypeE9ELSB_3ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEExLNS1_14WireFormatLite9FieldTypeE9ELSC_3ELi0EEENS0_11MessageLiteESA_xLSC_9ELSC_3ELi0EEE
N6google8protobuf8internal12MapEntryLiteIxNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEELNS1_14WireFormatLite9FieldTypeE3ELSB_9ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteIxNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEELNS1_14WireFormatLite9FieldTypeE3ELSC_9ELi0EEENS0_11MessageLiteExSA_LSC_3ELSC_9ELi0EEE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEdLNS1_14WireFormatLite9FieldTypeE9ELSB_1ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEdLNS1_14WireFormatLite9FieldTypeE9ELSC_1ELi0EEENS0_11MessageLiteESA_dLSC_9ELSC_1ELi0EEE
N6google8protobuf8internal12MapEntryLiteIxdLNS1_14WireFormatLite9FieldTypeE3ELS4_1ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteIxdLNS1_14WireFormatLite9FieldTypeE3ELS5_1ELi0EEENS0_11MessageLiteExdLS5_3ELS5_1ELi0EEE
N6google8protobuf3MapINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEExE8InnerMapE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEExLNS1_14WireFormatLite9FieldTypeE9ELSC_3ELi0EEENS0_11MessageLiteESA_xLSC_9ELSC_3ELi0EE15MapEntryWrapperE
N6google8protobuf3MapIxNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE8InnerMapE
N6google8protobuf4hashIxEE
NSt3__14hashIxEE
NSt3__113__scalar_hashIxLm1EEE
NSt3__114unary_functionIxmEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteIxNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEELNS1_14WireFormatLite9FieldTypeE3ELSC_9ELi0EEENS0_11MessageLiteExSA_LSC_3ELSC_9ELi0EE15MapEntryWrapperE
N6google8protobuf3MapINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEdE8InnerMapE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEdLNS1_14WireFormatLite9FieldTypeE9ELSC_1ELi0EEENS0_11MessageLiteESA_dLSC_9ELSC_1ELi0EE15MapEntryWrapperE
N6google8protobuf3MapIxdE8InnerMapE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteIxdLNS1_14WireFormatLite9FieldTypeE3ELS5_1ELi0EEENS0_11MessageLiteExdLS5_3ELS5_1ELi0EE15MapEntryWrapperE
NSt3__120__shared_ptr_emplaceIN6CoreML13TreeEnsembles20_TreeComputationNodeENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6CoreML13TreeEnsembles13_TreeEnsembleENS_9allocatorIS3_EEEE
N6CoreML13Specification29FeatureVectorizer_InputColumnE
N6CoreML13Specification17FeatureVectorizerE
N6CoreML13Specification46TreeEnsembleParameters_TreeNode_EvaluationInfoE
N6CoreML13Specification31TreeEnsembleParameters_TreeNodeE
N6CoreML13Specification22TreeEnsembleParametersE
N6CoreML13Specification22TreeEnsembleClassifierE
N6CoreML13Specification21TreeEnsembleRegressorE
NSt3__120__shared_ptr_emplaceIN6CoreML13Specification11FeatureTypeENS_9allocatorIS3_EEEE
N6CoreML13Specification14DictVectorizerE
N6CoreML13Specification13NeuralNetworkE
N6CoreML13Specification24NeuralNetworkImageScalerE
N6CoreML13Specification22NeuralNetworkMeanImageE
N6CoreML13Specification26NeuralNetworkPreprocessingE
N6CoreML13Specification14ActivationReLUE
N6CoreML13Specification19ActivationLeakyReLUE
N6CoreML13Specification14ActivationTanhE
N6CoreML13Specification20ActivationScaledTanhE
N6CoreML13Specification17ActivationSigmoidE
N6CoreML13Specification16ActivationLinearE
N6CoreML13Specification21ActivationSigmoidHardE
N6CoreML13Specification15ActivationPReLUE
N6CoreML13Specification13ActivationELUE
N6CoreML13Specification25ActivationThresholdedReLUE
N6CoreML13Specification18ActivationSoftsignE
N6CoreML13Specification18ActivationSoftplusE
N6CoreML13Specification28ActivationParametricSoftplusE
N6CoreML13Specification16ActivationParamsE
N6CoreML13Specification18NeuralNetworkLayerE
N6CoreML13Specification23BorderAmounts_EdgeSizesE
N6CoreML13Specification13BorderAmountsE
N6CoreML13Specification12ValidPaddingE
N6CoreML13Specification11SamePaddingE
N6CoreML13Specification12WeightParamsE
N6CoreML13Specification22ConvolutionLayerParamsE
N6CoreML13Specification23InnerProductLayerParamsE
N6CoreML13Specification20EmbeddingLayerParamsE
N6CoreML13Specification20BatchnormLayerParamsE
N6CoreML13Specification39PoolingLayerParams_ValidCompletePaddingE
N6CoreML13Specification18PoolingLayerParamsE
N6CoreML13Specification34PaddingLayerParams_PaddingConstantE
N6CoreML13Specification36PaddingLayerParams_PaddingReflectionE
N6CoreML13Specification37PaddingLayerParams_PaddingReplicationE
N6CoreML13Specification18PaddingLayerParamsE
N6CoreML13Specification17ConcatLayerParamsE
N6CoreML13Specification14LRNLayerParamsE
N6CoreML13Specification18SoftmaxLayerParamsE
N6CoreML13Specification16SplitLayerParamsE
N6CoreML13Specification14AddLayerParamsE
N6CoreML13Specification19MultiplyLayerParamsE
N6CoreML13Specification24UnaryFunctionLayerParamsE
N6CoreML13Specification19UpsampleLayerParamsE
N6CoreML13Specification15BiasLayerParamsE
N6CoreML13Specification16ScaleLayerParamsE
N6CoreML13Specification23LoadConstantLayerParamsE
N6CoreML13Specification22L2NormalizeLayerParamsE
N6CoreML13Specification18FlattenLayerParamsE
N6CoreML13Specification18ReshapeLayerParamsE
N6CoreML13Specification18PermuteLayerParamsE
N6CoreML13Specification25ReorganizeDataLayerParamsE
N6CoreML13Specification16SliceLayerParamsE
N6CoreML13Specification17ReduceLayerParamsE
N6CoreML13Specification15CropLayerParamsE
N6CoreML13Specification18AverageLayerParamsE
N6CoreML13Specification14MaxLayerParamsE
N6CoreML13Specification14MinLayerParamsE
N6CoreML13Specification21DotProductLayerParamsE
N6CoreML13Specification32MeanVarianceNormalizeLayerParamsE
N6CoreML13Specification25SequenceRepeatLayerParamsE
N6CoreML13Specification26SimpleRecurrentLayerParamsE
N6CoreML13Specification14GRULayerParamsE
N6CoreML13Specification10LSTMParamsE
N6CoreML13Specification16LSTMWeightParamsE
N6CoreML13Specification29UniDirectionalLSTMLayerParamsE
N6CoreML13Specification28BiDirectionalLSTMLayerParamsE
N6CoreML13Specification39CustomLayerParams_CustomLayerParamValueE
N6CoreML13Specification17CustomLayerParamsE
N6CoreML13Specification23NeuralNetworkClassifierE
N6CoreML13Specification22NeuralNetworkRegressorE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6CoreML13Specification39CustomLayerParams_CustomLayerParamValueELNS1_14WireFormatLite9FieldTypeE9ELSE_11ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN6CoreML13Specification39CustomLayerParams_CustomLayerParamValueELNS1_14WireFormatLite9FieldTypeE9ELSF_11ELi0EEENS0_11MessageLiteESA_SD_LSF_9ELSF_11ELi0EEE
N6google8protobuf8internal29InternalMetadataWithArenaBaseINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_29InternalMetadataWithArenaLiteEE9ContainerE
N6google8protobuf3MapINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN6CoreML13Specification39CustomLayerParams_CustomLayerParamValueEE8InnerMapE
N6google8protobuf4hashINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN6CoreML13Specification39CustomLayerParams_CustomLayerParamValueELNS1_14WireFormatLite9FieldTypeE9ELSF_11ELi0EEENS0_11MessageLiteESA_SD_LSF_9ELSF_11ELi0EE15MapEntryWrapperE
N6CoreML13Specification21ArrayFeatureExtractorE
N6CoreML13Specification24GLMRegressor_DoubleArrayE
N6CoreML13Specification12GLMRegressorE
N6CoreML13Specification16Int64FeatureTypeE
N6CoreML13Specification17DoubleFeatureTypeE
N6CoreML13Specification17StringFeatureTypeE
N6CoreML13Specification16ImageFeatureTypeE
N6CoreML13Specification16ArrayFeatureTypeE
N6CoreML13Specification21DictionaryFeatureTypeE
N6CoreML13Specification11FeatureTypeE
N8Espresso23generic_rnn_arch_kernelE
N8Espresso34abstract_kernel_with_named_weightsINS_15rnn_arch_paramsEEE
N8Espresso21kernel_with_uniforms_INS_15rnn_arch_paramsENS_35abstract_kernel_with_named_weights_EEE
N8Espresso28generic_rnn_arch_kernel_implE
N8Espresso12rnn_arch_cpuE
N8Espresso31generic_sequence_reverse_kernelE
N8Espresso20kernel_with_uniformsINS_23sequence_reverse_paramsEEE
N8Espresso21kernel_with_uniforms_INS_23sequence_reverse_paramsENS_11base_kernelEEE
N8Espresso30generic_sequence_concat_kernelE
N8Espresso20kernel_with_uniformsINS_22sequence_concat_paramsEEE
N8Espresso21kernel_with_uniforms_INS_22sequence_concat_paramsENS_11base_kernelEEE
N8Espresso30generic_sequence_repeat_kernelE
N8Espresso20kernel_with_uniformsINS_22sequence_repeat_paramsEEE
N8Espresso21kernel_with_uniforms_INS_22sequence_repeat_paramsENS_11base_kernelEEE
N8Espresso27sequence_reverse_kernel_cpuE
N8Espresso26sequence_concat_kernel_cpuE
N8Espresso26sequence_repeat_kernel_cpuE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobItLi4EEENS_9allocatorIS3_EEEE
N8Espresso4blobItLi4EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobItLi2EEENS_9allocatorIS3_EEEE
N8Espresso4blobItLi2EEE
NSt3__120__shared_ptr_emplaceI19rule_fuse_bias_convNS_9allocatorIS1_EEEE
19rule_fuse_bias_conv
N8Espresso30graph_optimization_rule_simpleINS_30graph_optimization_rule_statusEEE
NSt3__120__shared_ptr_emplaceIN8Espresso30graph_optimization_rule_statusENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_26generic_convolution_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_26generic_elementwise_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_28generic_load_constant_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceI28rule_fuse_bias_inner_productNS_9allocatorIS1_EEEE
28rule_fuse_bias_inner_product
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_28generic_inner_product_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceI20rule_fuse_scale_convNS_9allocatorIS1_EEEE
20rule_fuse_scale_conv
NSt3__120__shared_ptr_emplaceI17rule_fuse_bn_convNS_9allocatorIS1_EEEE
17rule_fuse_bn_conv
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_24generic_batchnorm_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceI31rule_add_auto_context_transfersNS_9allocatorIS1_EEEE
31rule_add_auto_context_transfers
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_11base_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceI20rule_concat_fuse_fixNS_9allocatorIS1_EEEE
20rule_concat_fuse_fix
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_21generic_concat_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_19generic_pool_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceI20rule_input_underflowNS_9allocatorIS1_EEEE
20rule_input_underflow
N8Espresso24inner_product_kernel_cpuE
N8Espresso22convolution_kernel_cpuE
N8Espresso15pool_kernel_cpuE
N8Espresso14lrn_kernel_cpuE
N8Espresso18softmax_kernel_cpuE
N8Espresso17concat_kernel_cpuE
N8Espresso19upsample_kernel_cpuE
N8Espresso22elementwise_kernel_cpuE
N8Espresso16split_kernel_cpuE
N8Espresso26general_padding_kernel_cpuE
N8Espresso15crop_kernel_cpuE
N8Espresso20batchnorm_kernel_cpuE
N8Espresso21activation_kernel_cpuE
N8Espresso16axpby_kernel_cpuE
N8Espresso27context_transfer_kernel_cpuE
N8Espresso18reshape_kernel_cpuE
N8Espresso18flatten_kernel_cpuE
N8Espresso20transpose_kernel_cpuE
N8Espresso23l2_normalize_kernel_cpuE
N8Espresso24deconvolution_kernel_cpuE
N8Espresso31prediction_smoothing_kernel_cpuE
N8Espresso18dropout_kernel_cpuE
N8Espresso25space_to_depth_kernel_cpuE
N8Espresso16slice_kernel_cpuE
NSt3__120__shared_ptr_emplaceIN8Espresso24argmax_tree_approximatorENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIhLi2EEENS_9allocatorIS3_EEEE
N8Espresso4blobIhLi2EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIsLi2EEENS_9allocatorIS3_EEEE
N8Espresso4blobIsLi2EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIiLi1EEENS_9allocatorIS3_EEEE
N8Espresso4blobIiLi1EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIcLi4EEENS_9allocatorIS3_EEEE
N8Espresso4blobIcLi4EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIaLi1EEENS_9allocatorIS3_EEEE
N8Espresso4blobIaLi1EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIsLi1EEENS_9allocatorIS3_EEEE
N8Espresso4blobIsLi1EEE
NSt3__120__shared_ptr_emplaceIN8Espresso18dropout_kernel_cpu14random_state_tENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceINS_26linear_congruential_engineIjLj48271ELj0ELj2147483647EEENS_9allocatorIS2_EEEE
N8Espresso12net_compilerE
N8Espresso29abstract_kernel_with_weights_E
N8Espresso35abstract_kernel_with_named_weights_E
N8Espresso34abstract_kernel_with_weights_grad_E
N8Espresso12no_op_kernelE
N8Espresso20kernel_with_uniformsINS_23no_op_kernel_parametersEEE
N8Espresso21kernel_with_uniforms_INS_23no_op_kernel_parametersENS_11base_kernelEEE
N8Espresso26generic_convolution_kernelE
N8Espresso28abstract_kernel_with_weightsINS_20convolution_uniformsEEE
N8Espresso21kernel_with_uniforms_INS_20convolution_uniformsENS_29abstract_kernel_with_weights_EEE
N8Espresso18generic_lrn_kernelE
N8Espresso20kernel_with_uniformsINS_10lrn_paramsEEE
N8Espresso21kernel_with_uniforms_INS_10lrn_paramsENS_11base_kernelEEE
N8Espresso19generic_pool_kernelE
N8Espresso28abstract_kernel_with_weightsINS_11pool_paramsEEE
N8Espresso21kernel_with_uniforms_INS_11pool_paramsENS_29abstract_kernel_with_weights_EEE
N8Espresso22generic_softmax_kernelE
N8Espresso20kernel_with_uniformsINS_14softmax_paramsEEE
N8Espresso21kernel_with_uniforms_INS_14softmax_paramsENS_11base_kernelEEE
N8Espresso28generic_inner_product_kernelE
N8Espresso28abstract_kernel_with_weightsINS_22inner_product_uniformsEEE
N8Espresso21kernel_with_uniforms_INS_22inner_product_uniformsENS_29abstract_kernel_with_weights_EEE
N8Espresso21generic_concat_kernelE
N8Espresso20kernel_with_uniformsINS_13concat_paramsEEE
N8Espresso21kernel_with_uniforms_INS_13concat_paramsENS_11base_kernelEEE
N8Espresso26generic_elementwise_kernelE
N8Espresso20kernel_with_uniformsINS_18elementwise_paramsEEE
N8Espresso21kernel_with_uniforms_INS_18elementwise_paramsENS_11base_kernelEEE
N8Espresso20generic_split_kernelE
N8Espresso20kernel_with_uniformsINS_12split_paramsEEE
N8Espresso21kernel_with_uniforms_INS_12split_paramsENS_11base_kernelEEE
N8Espresso30generic_general_padding_kernelE
N8Espresso20kernel_with_uniformsINS_22general_padding_paramsEEE
N8Espresso21kernel_with_uniforms_INS_22general_padding_paramsENS_11base_kernelEEE
N8Espresso19generic_crop_kernelE
N8Espresso20kernel_with_uniformsINS_11crop_paramsEEE
N8Espresso21kernel_with_uniforms_INS_11crop_paramsENS_11base_kernelEEE
N8Espresso28generic_deconvolution_kernelE
N8Espresso31generic_convolution_grad_kernelE
N8Espresso33abstract_kernel_with_weights_gradINS_20convolution_uniformsEEE
N8Espresso21kernel_with_uniforms_INS_20convolution_uniformsENS_34abstract_kernel_with_weights_grad_EEE
N8Espresso39generic_convolution_weights_grad_kernelE
N8Espresso24generic_pool_grad_kernelE
N8Espresso20kernel_with_uniformsINS_11pool_paramsEEE
N8Espresso21kernel_with_uniforms_INS_11pool_paramsENS_11base_kernelEEE
N8Espresso26generic_concat_grad_kernelE
N8Espresso32generic_softmax_loss_grad_kernelE
N8Espresso25generic_activation_kernelE
N8Espresso34abstract_kernel_with_named_weightsINS_17activation_paramsEEE
N8Espresso21kernel_with_uniforms_INS_17activation_paramsENS_35abstract_kernel_with_named_weights_EEE
N8Espresso30generic_activation_grad_kernelE
N8Espresso20kernel_with_uniformsINS_17activation_paramsEEE
N8Espresso21kernel_with_uniforms_INS_17activation_paramsENS_11base_kernelEEE
N8Espresso19generic_bias_kernelE
N8Espresso28abstract_kernel_with_weightsINS_11bias_paramsEEE
N8Espresso21kernel_with_uniforms_INS_11bias_paramsENS_29abstract_kernel_with_weights_EEE
N8Espresso24generic_bias_grad_kernelE
N8Espresso33abstract_kernel_with_weights_gradINS_11bias_paramsEEE
N8Espresso21kernel_with_uniforms_INS_11bias_paramsENS_34abstract_kernel_with_weights_grad_EEE
N8Espresso24generic_batchnorm_kernelE
N8Espresso28abstract_kernel_with_weightsINS_16batchnorm_paramsEEE
N8Espresso21kernel_with_uniforms_INS_16batchnorm_paramsENS_29abstract_kernel_with_weights_EEE
N8Espresso29generic_batchnorm_grad_kernelE
N8Espresso33abstract_kernel_with_weights_gradINS_16batchnorm_paramsEEE
N8Espresso21kernel_with_uniforms_INS_16batchnorm_paramsENS_34abstract_kernel_with_weights_grad_EEE
N8Espresso27generic_l2_normalize_kernelE
N8Espresso20kernel_with_uniformsINS_14l2_norm_paramsEEE
N8Espresso21kernel_with_uniforms_INS_14l2_norm_paramsENS_11base_kernelEEE
N8Espresso32generic_l2_normalize_grad_kernelE
N8Espresso33generic_inner_product_grad_kernelE
N8Espresso33abstract_kernel_with_weights_gradINS_22inner_product_uniformsEEE
N8Espresso21kernel_with_uniforms_INS_22inner_product_uniformsENS_34abstract_kernel_with_weights_grad_EEE
N8Espresso41generic_inner_product_weights_grad_kernelE
N8Espresso31generic_elementwise_grad_kernelE
N8Espresso22generic_dropout_kernelE
N8Espresso20kernel_with_uniformsINS_14dropout_paramsEEE
N8Espresso21kernel_with_uniforms_INS_14dropout_paramsENS_11base_kernelEEE
N8Espresso27generic_dropout_grad_kernelE
N8Espresso20generic_axpby_kernelE
N8Espresso20kernel_with_uniformsINS_12axpby_paramsEEE
N8Espresso21kernel_with_uniforms_INS_12axpby_paramsENS_11base_kernelEEE
N8Espresso28generic_load_constant_kernelE
N8Espresso28abstract_kernel_with_weightsINS_20load_constant_paramsEEE
N8Espresso21kernel_with_uniforms_INS_20load_constant_paramsENS_29abstract_kernel_with_weights_EEE
N8Espresso31generic_context_transfer_kernelE
N8Espresso20kernel_with_uniformsINS_23context_transfer_paramsEEE
N8Espresso21kernel_with_uniforms_INS_23context_transfer_paramsENS_11base_kernelEEE
N8Espresso33generic_load_constant_kernel_implE
N8Espresso36generic_context_transfer_kernel_implE
N8Espresso22generic_reshape_kernelE
N8Espresso20kernel_with_uniformsINS_14reshape_paramsEEE
N8Espresso21kernel_with_uniforms_INS_14reshape_paramsENS_11base_kernelEEE
N8Espresso22generic_flatten_kernelE
N8Espresso20kernel_with_uniformsINS_14flatten_paramsEEE
N8Espresso21kernel_with_uniforms_INS_14flatten_paramsENS_11base_kernelEEE
N8Espresso21generic_reduce_kernelE
N8Espresso20kernel_with_uniformsINS_15reduce_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15reduce_params_tENS_11base_kernelEEE
N8Espresso24generic_transpose_kernelE
N8Espresso20kernel_with_uniformsINS_18transpose_params_tEEE
N8Espresso21kernel_with_uniforms_INS_18transpose_params_tENS_11base_kernelEEE
N8Espresso18generic_rnn_kernelE
N8Espresso34abstract_kernel_with_named_weightsINS_10rnn_paramsEEE
N8Espresso21kernel_with_uniforms_INS_10rnn_paramsENS_35abstract_kernel_with_named_weights_EEE
N8Espresso35generic_prediction_smoothing_kernelE
N8Espresso20kernel_with_uniformsINS_27prediction_smoothing_paramsEEE
N8Espresso21kernel_with_uniforms_INS_27prediction_smoothing_paramsENS_11base_kernelEEE
N8Espresso29generic_space_to_depth_kernelE
N8Espresso20kernel_with_uniformsINS_23space_to_depth_params_tEEE
N8Espresso21kernel_with_uniforms_INS_23space_to_depth_params_tENS_11base_kernelEEE
N8Espresso20generic_slice_kernelE
N8Espresso20kernel_with_uniformsINS_14slice_params_tEEE
N8Espresso21kernel_with_uniforms_INS_14slice_params_tENS_11base_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12no_op_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22convolution_kernel_cpuENS_9allocatorIS2_EEEE
N8Espresso27convolution_kernel_cpu_baseINS_26generic_convolution_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi6EEENS_9allocatorIS3_EEEE
N8Espresso4blobIfLi6EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIhLi4EEENS_9allocatorIS3_EEEE
N8Espresso4blobIhLi4EEE
NSt3__120__shared_ptr_emplaceIN8Espresso14lrn_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15pool_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18softmax_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24inner_product_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi2EEENS_9allocatorIS3_EEEE
N8Espresso4blobIfLi2EEE
NSt3__120__shared_ptr_emplaceIN8Espresso17concat_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso19upsample_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22elementwise_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16split_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIhLi6EEENS_9allocatorIS3_EEEE
N8Espresso4blobIhLi6EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi3EEENS_9allocatorIS3_EEEE
N8Espresso4blobIfLi3EEE
NSt3__120__shared_ptr_emplaceIN8Espresso8blob_cpuENS_9allocatorIS2_EEEE
N8Espresso13CPUFP16Engine13blob_cpu_fp16E
NSt3__120__shared_ptr_emplaceIN8Espresso40abstract_blob_container_options_aliasingENS_9allocatorIS2_EEEE
N8Espresso17blob_storage_rootE
N8Espresso14blob_rtti_rootE
N8Espresso10BNNSEngine18convolution_kernelE
N8Espresso10BNNSEngine16base_bnns_kernelINS_26generic_convolution_kernelEEE
N8Espresso10BNNSEngine11pool_kernelE
N8Espresso21blob_storage_abstractE
N8Espresso17blob_storage_mmapE
N8Espresso6SerDes21generic_serdes_objectE
N8Espresso12brick_kernelE
N8Espresso34abstract_kernel_with_named_weightsINS_12brick_paramsEEE
N8Espresso21kernel_with_uniforms_INS_12brick_paramsENS_35abstract_kernel_with_named_weights_EEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_12brick_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_12brick_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso9factory_tINS1_6SerDes13layer_io_baseEEENS_9allocatorIS5_EEEE
N8Espresso9factory_tINS_6SerDes13layer_io_baseEEE
St8__nestedISt9exceptionE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIhLi1EEENS_9allocatorIS3_EEEE
N8Espresso4blobIhLi1EEE
N8Espresso8blob_cpuE
N8Espresso10engine_cpuE
N8Espresso9batch_cpuE
N8Espresso11context_cpuE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIiLi4EEENS_9allocatorIS3_EEEE
N8Espresso4blobIiLi4EEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine13blob_cpu_fp16ENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine22convolution_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine15pool_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine14lrn_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine18softmax_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine17concat_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine19upsample_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine22elementwise_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine16split_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24deconvolution_kernel_cpuENS_9allocatorIS2_EEEE
N8Espresso27convolution_kernel_cpu_baseINS_28generic_deconvolution_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16axpby_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21activation_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20batchnorm_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso33generic_load_constant_kernel_implENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14rnn_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17reduce_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27context_transfer_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12rnn_arch_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26general_padding_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20transpose_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18reshape_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18flatten_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23l2_normalize_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27sequence_reverse_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26sequence_concat_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26sequence_repeat_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15crop_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso31prediction_smoothing_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18dropout_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso25space_to_depth_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16slice_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso11context_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso9batch_cpuENS_9allocatorIS2_EEEE
N8Espresso10BNNSEngine6engineE
N8Espresso10BNNSEngine7contextE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine18convolution_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine11pool_kernelENS_9allocatorIS3_EEEE
N8Espresso10BNNSEngine16base_bnns_kernelINS_19generic_pool_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine7contextENS_9allocatorIS3_EEEE
N8Espresso18wrong_context_typeE
N8Espresso16wrong_batch_typeE
N8Espresso23abstract_blob_containerE
N8Espresso14abstract_batchE
N8Espresso16abstract_contextE
N8Espresso31abstract_blob_container_optionsE
N8Espresso15abstract_engineE
N8Espresso40abstract_blob_container_options_aliasingE
N8Espresso11base_kernelE
#<N8Espresso13CPUFP16Engine22convolution_kernel_cpuE
N8Espresso13CPUFP16Engine15pool_kernel_cpuE
N8Espresso13CPUFP16Engine14lrn_kernel_cpuE
N8Espresso13CPUFP16Engine18softmax_kernel_cpuE
N8Espresso13CPUFP16Engine17concat_kernel_cpuE
N8Espresso13CPUFP16Engine22elementwise_kernel_cpuE
N8Espresso13CPUFP16Engine16split_kernel_cpuE
N8Espresso13CPUFP16Engine19upsample_kernel_cpuE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobItLi3EEENS_9allocatorIS3_EEEE
N8Espresso4blobItLi3EEE
N8Espresso6SerDes23serdes_object_json_objcE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes23serdes_object_json_objcENS_9allocatorIS3_EEEE
?N13EspressoLight14espresso_errorE
N13EspressoLight17espresso_root_objE
N13EspressoLight16espresso_contextE
N13EspressoLight13espresso_planE
NSt3__120__shared_ptr_emplaceIN8Espresso23abstract_engine_factory6priv_tENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10engine_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine6engineENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12brick_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23abstract_engine_factoryENS_9allocatorIS2_EEEE
N8Espresso6SerDes13layer_io_baseE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_12no_op_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_12no_op_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_convolution_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_convolution_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_18generic_lrn_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_18generic_lrn_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_pool_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_pool_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_softmax_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_softmax_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_inner_product_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_inner_product_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_38generic_inner_product_quantized_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_38generic_inner_product_quantized_kernelEEE
N8Espresso38generic_inner_product_quantized_kernelE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_concat_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_concat_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_23generic_upsample_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_23generic_upsample_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_elementwise_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_elementwise_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_20generic_split_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_20generic_split_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_deconvolution_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_deconvolution_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_convolution_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_convolution_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_39generic_convolution_weights_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_39generic_convolution_weights_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_pool_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_pool_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_concat_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_concat_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_32generic_softmax_loss_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_32generic_softmax_loss_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_25generic_activation_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_25generic_activation_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_activation_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_activation_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_bias_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_bias_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_bias_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_bias_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_batchnorm_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_batchnorm_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_29generic_batchnorm_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_29generic_batchnorm_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_27generic_l2_normalize_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_27generic_l2_normalize_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_32generic_l2_normalize_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_32generic_l2_normalize_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_33generic_inner_product_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_33generic_inner_product_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_41generic_inner_product_weights_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_41generic_inner_product_weights_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_elementwise_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_elementwise_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_dropout_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_dropout_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_27generic_dropout_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_27generic_dropout_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_20generic_axpby_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_20generic_axpby_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_load_constant_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_load_constant_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_context_transfer_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_context_transfer_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_reshape_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_reshape_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_reduce_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_reduce_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_18generic_rnn_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_18generic_rnn_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_23generic_rnn_arch_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_23generic_rnn_arch_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_general_padding_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_general_padding_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_transpose_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_transpose_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_flatten_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_flatten_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_sequence_concat_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_sequence_concat_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_sequence_reverse_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_sequence_reverse_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_sequence_repeat_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_sequence_repeat_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_crop_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_crop_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_35generic_prediction_smoothing_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_35generic_prediction_smoothing_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_29generic_space_to_depth_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_29generic_space_to_depth_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_20generic_slice_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_20generic_slice_kernelEEE
N8Espresso14rnn_kernel_cpuE
N8Espresso17reduce_kernel_cpuE
N8Espresso17generic_factory_tE
N8Espresso14factory_objectE
N8Espresso23generic_upsample_kernelE
N8Espresso20kernel_with_uniformsINS_22upsample_kernel_paramsEEE
N8Espresso21kernel_with_uniforms_INS_22upsample_kernel_paramsENS_11base_kernelEEE
N8Espresso23graph_optimization_ruleE
N8Espresso23rule_convolution_groupsE
N8Espresso20rule_inception_blockE
N8Espresso22rule_1x1_inceptionlikeE
N8Espresso20_rule_bake_batchnormE
N8Espresso30graph_optimization_rule_statusE
N8Espresso20rule_inception_block8status_tE
N8Espresso22rule_1x1_inceptionlike8status_tE
N8Espresso23rule_convolution_groups8status_tE
N8Espresso20_rule_bake_batchnorm8status_tE
NSt3__120__shared_ptr_emplaceIN8Espresso23rule_convolution_groups8status_tENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20rule_inception_block8status_tENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22rule_1x1_inceptionlike8status_tENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20_rule_bake_batchnorm8status_tENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18sequential_builderENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26network_optimization_graphENS_9allocatorIS2_EEEE
N8Espresso5layerE
NSt3__120__shared_ptr_emplaceINS_19basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE
NSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi4EEENS_9allocatorIS3_EEEE
N8Espresso4blobIfLi4EEE
NSt3__120__shared_ptr_emplaceIN8Espresso9factory_tINS1_6SerDes21generic_serdes_objectEEENS_9allocatorIS5_EEEE
N8Espresso9factory_tINS_6SerDes21generic_serdes_objectEEE
NSt3__120__shared_ptr_emplaceIN8Espresso3netENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17blob_storage_mmapENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27cpu_context_transfer_algo_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso5layerENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi1EEENS_9allocatorIS3_EEEE
N8Espresso4blobIfLi1EEE
shape
count
objectAtIndexedSubscript:
intValue
genericErrorWithString:
unsignedIntegerValue
dataType
isContiguousInOrder:
alloc
numberWithUnsignedLong:
arrayWithObjects:count:
initWithShape:dataType:storageOrder:error:
vectorizeIntoMultiArray:storageOrder:error:
dataPointer
numberWithLong:
numberWithInt:
pixelBufferGray8FromMultiArrayHW:error:
pixelBufferBGRA8FromMultiArrayCHW:channelOrderIsBGR:error:
init
initWithKeyType:
isUndefined
dictionaryValue
featureTypeErrorWithString:
type
class
countByEnumeratingWithState:objects:count:
isKindOfClass:
descriptionForType:
allocWithZone:
stringWithFormat:
constraintWithStringKeys
constraintWithInt64Keys
isAllowedValue:error:
copyWithZone:
description
keyType
_keyType
initWithUsesCPUOnly:
defaultOptions
initWithUseCPUOnly:
useCPUOnly
setUseCPUOnly:
usesCPUOnly
setUsesCPUOnly:
classifyTopK
setClassifyTopK:
_usesCPUOnly
_classifyTopK
globalSettings
restrictNeuralNetworksToUseCPUOnly
setRestrictNeuralNetworksToUseCPUOnly:
isNeuralNetworkGPUPathForbidden
_restrictNeuralNetworksToUseCPUOnly
_isNeuralNetworkGPUPathForbidden
dictionaryWithCapacity:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
featureTypeForObject:
featureValueOfType:fromObject:error:
allKeys
setWithArray:
featureValueForName:
featureNames
initWithDictionary:error:
.cxx_destruct
dictionary
setDictionary:
_dictionary
initWithFeatureProvider:featureNames:
initWithFeatureProvider:
initWithFeatureValueDictionary:
defaultManager
fileSystemRepresentation
stringWithUTF8String:
fileExistsAtPath:
loadModelFromArchive:error:
deserializeVersionInfoFromArchive:error:
sharedInstance
classForLoadingModelType:
IOErrorWithString:
loadModelFromCompiledArchive:modelVersionInfo:compilerVersionInfo:error:
conformsToProtocol:
loadModelFromSpecification:error:
loadFromModelSpecificationInArchive:withClass:versionInfo:error:
loadModelFromAssetAtURL:error:
dryRun
setDryRun:
platform
setPlatform:
platformVersion
setPlatformVersion:
_dryRun
_platform
_platformVersion
setOutputFiles:
resultWithOutputFiles:
outputFiles
_outputFiles
lastPathComponent
stringByDeletingPathExtension
stringByAppendingPathExtension:
URLByAppendingPathComponent:
compileSpecification:toArchive:options:error:
versionInfoWithMajor:minor:patch:variant:
compiledVersionForSpecification:options:error:
serializeVersionInfo:archive:error:
localizedDescription
classForCompilingModelType:
code
userInfo
initWithDictionary:
setValue:forKey:
errorWithDomain:code:userInfo:
serializeSpecification:toArchive:error:
versionForSerializedSpecification:options:error:
compileSpecificationAtURL:toURL:options:error:
versionInfo
compiledVersionForSpecificationAtURL:options:error:
addObject:
initWithMajor:minor:patch:variant:
scannerWithString:
scanInteger:
decimalDigitCharacterSet
scanUpToCharactersFromSet:intoString:
scanUpToString:intoString:
versionNumberString
majorVersion
minorVersion
patchVersion
versionInfoWithString:
versionString
olderThan:
variantString
_majorVersion
_minorVersion
_patchVersion
_variantString
initWithSpecification:error:
initWithInterface:metadata:
initDescriptionOnlyWithSpecification:error:
initWithURL:error:
processInfo
globallyUniqueString
stringByAppendingPathComponent:
fileURLWithPath:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
modelAssetWithSpecificationURL:error:
URLByDeletingPathExtension
URLWithString:relativeToURL:
URLByAppendingPathExtension:
coreChannel
modelWithError:
load:
classifierWithError:
predictionFromFeatures:error:
predictionFromFeatures:options:error:
batchPredict:error:
modelDescription
interface
metadata
classLabels
classify:options:error:
regressorWithError:
regress:options:error:
modelAssetWithURL:error:
modelAssetWithSpecification:error:
model
classifier
regressor
compiledURL
ranLoad
setRanLoad:
asset
setAsset:
_ranLoad
_compiledURL
_asset
initWithFilePath:inputLayerNames:outputLayerNames:parameters:
boolValue
UTF8String
floatValue
initWithFeatureDescriptions:inputDesc:outputDesc:outputLayerNames:parameters:
specFromFilePath:inputLayerNames:outputLayerNames:parameters:
specFromFeatureDescriptions:inputDesc:outputDesc:outputLayerNames:parameters:
.cxx_construct
modelFilePath
setModelFilePath:
inputLayerNames
outputLayerNames
name
setName:
inputDescription
setInputDescription:
outputDescription
setOutputDescription:
precision
setPrecision:
engine
setEngine:
setQos:
isOrderedBgr
setOrderedBgr:
isGrayScale
setIsGrayScale:
blueBias
setBlueBias:
greenBias
setGreenBias:
redBias
setRedBias:
grayBias
setGrayBias:
scale
setScale:
isBiasPreprocessingShared
setIsBiasPreprocessingShared:
_isBiasPreprocessingShared
_precision
_engine
_qos
_modelFilePath
_inputLayerNames
_outputLayerNames
_name
_inputDescription
_outputDescription
_orderedBgr
_isGrayScale
_blueBias
_greenBias
_redBias
_grayBias
_scale
predictedFeatureName
evaluate:error:
classScoreVectorName
multiArrayValue
sortClassProbabilitiesWithMultiArray:classLabels:
label
probability
copy
resultWithStringClassProbability:additionalFeatures:
resultWithIntClassProbability:additionalFeatures:
resultWithValue:
errorWithCode:string:
customLayerErrorWithUnderlyingError:withString:
serializeMetadataAndInterfaceFromSpecification:archive:error:
deserializeMetadataAndInterfaceFromArchive:error:
numberWithBool:
numberWithFloat:
arrayWithObjects:
setObject:atIndexedSubscript:
initWithSpec:classScoreVectorName:classLabels:error:
_deallocContextAndPlan
_setupContextAndPlanWithForceCPU:error:
_matchEngineToOptions:error:
predictionFromFeatures:classifier:options:error:
initWithSpec:classScoreVectorName:classLabels:forceCPU:error:
initWithCapacity:
numberWithDouble:
numInputs
evaluateNoAutoRelease:error:
inputDescriptionsByName
objectForKey:
isOptional
multiArrayConstraint
integerValue
imageConstraint
dictionaryWithObjects:forKeys:count:
initWithShape:dataType:error:
fillWithNumber:
imageBufferValue
initWithDataPointer:shape:dataType:strides:deallocator:error:
copyIntoMultiArray:error:
verifyInputs:error:
resetSizes:error:
bindInputsAndOutputs:allocatedImageData:error:
unlockCVPixelBuffers:error:
populateOutputs:
outputDescriptionsByName
_pixelBufferFromEbuf:description:error:
featureValueWithPixelBuffer:
arrayByAddingObjectsFromArray:
arrayWithArray:
mutableCopy
pixelsWide
pixelsHigh
pixelType
dealloc
resetSizesNoAutoRelease:error:
numberWithUnsignedInt:
plan
network
neuralNetworkFromSpec:error:
neuralNetworkFromSpec:classScoreVectorName:classLabels:error:
setClassLabels:
setClassScoreVectorName:
inputLayers
outputLayers
numOutputs
inputBuffers
setInputBuffers:
outputBuffers
setOutputBuffers:
usingCPU
setUsingCPU:
context
setContext:
setPlan:
setNetwork:
params
setParams:
isEspresoBiasPreprocessingShared
setIsEspresoBiasPreprocessingShared:
batchSize
setBatchSize:
seqSize
setSeqSize:
names
setNames:
widths
setWidths:
heights
setHeights:
setKs:
batches
setBatches:
sequences
setSequences:
probDict
setProbDict:
_usingCPU
_isEspresoBiasPreprocessingShared
_batchSize
_seqSize
_classLabels
_classScoreVectorName
_inputLayers
_outputLayers
_numInputs
_numOutputs
_context
_plan
_probDict
_network
_inputBuffers
_outputBuffers
_params
_names
_widths
_heights
_batches
_sequences
numberWithLongLong:
allowsValuesWithDescription:
sampleCount
arrayWithCapacity:
undefinedFeatureValueWithType:
featureArrayWithArray:description:error:
featureFrameFromFeatureArrayMap:frameDescription:error:
featureFrameFromFeatureDictionary:frameDescription:error:
inputFeatureNames
array
vectorizeFeatureDictionary:featureNames:error:
vectorizeInput:error:
batchPredict:model:error:
predictionFromFeatures:model:error:
validateRegressorInterfaceWithError:
predictionFromFeatures:regressor:options:error:
initWithInterface:metadata:error:
validateClassifierInterfaceWithError:
retrieveFinalModel:
classifierResultFromOutputFeatures:error:
initWithEngine:interface:metadata:error:
stringForDataType:
indexVectorFromArray:
doubleValue
numberAtOffset:
setNumber:atOffset:
offsetForKeyedSubscript:
string
appendString:
componentsJoinedByString:
appendFormat:
numberWithUnsignedInteger:
arrayFromIndexVector:
strides
_pArray
_managingData
_deallocator
_shape
_strides
cppStorageOrder:
isEqualToMultiArray:
numberOfBytesPerElement
isManagingData
isContiguous
isEqual:
doublePointer
numberWithInteger:
doubleMultiArrayWithCopyOfMultiArray:
doubleVectorWithValues:
doubleMultiArrayWithShape:valueArray:error:
doubleMatrixWithValues:error:
initWrappingMultiArray:
setRangeWithRawData:destIndex:error:
numberArray
objectAtIndex:
multiArray
setMultiArray:
_multiArray
_setSingleArrayLookupField
loadModelFromSpecificationWithCompilationOptions:options:error:
serializeInterfaceAndMetadata:toArchive:error:
initInterfaceAndMetadataWithCompiledArchive:error:
resultWithIntClassProbability:
resultWithStringClassProbability:
setObject:forKey:
_model_data
_buildClassificationClasses:topk:error:
_mmapped_model
_cached_model
num_dimensions
_classes_by_string
_classes_by_int64_t
_class_type
_class_values
_single_array_key
substringToIndex:
uppercaseString
substringFromIndex:
fileURLWithPath:
compileWithModels:toArchive:options:error:
stringWithString:
subsetWithFeaturesNamed:
featureFrameByAddingFrame:error:
_batchPredict:start_idx:end_idx:error:
null
_predictionFromFeatures:options:start_idx:end_idx:error:
lastObject
initModelFromMetadataAndArchive:versionInfo:interface:metadata:error:
predictUntilFinalModelWithSample:options:error:
models
_models
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
dataWithJSONObject:options:error:
bytes
length
stringByReplacingOccurrencesOfString:withString:
featureValueWithString:
featureValueWithInt64:
orderedSetWithArray:
initWithMapping:valueOnUnknown:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
initWithName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
validateSingleFeatureInDescription:withSet:
outputFeatureNames
mapping
valueOnUnknown
_mapping
_valueOnUnknown
featureFrameFromDictionary:error:
featureFrameByAddingFeatureArray:featureDescription:error:
toolPath
toolName
setToolPath:
commandName
setCommandName:
sourceUrl
setSourceUrl:
destinationDirectoryUrl
setDestinationDirectoryUrl:
targetLanguage
setTargetLanguage:
swiftVersion
setSwiftVersion:
globalModule
setGlobalModule:
noDocumentation
setNoDocumentation:
invalid
setInvalid:
invalidError
setInvalidError:
dryrun
setDryrun:
detailedTypeInfo
setDetailedTypeInfo:
outputPlistFilename
setOutputPlistFilename:
_detailedTypeInfo
_outputPlistFilename
isEqualToString:
path
writeToFile:atomically:
moveItemAtURL:toURL:error:
generateSwift:generatedCodePath:globalModule:documentation:dryRun:error:
generateObjC:generatedCodePath:documentation:dryRun:error:
sequence
batch
channels
height
width
espressoShapeToCoremlShape:
setSequence:
setBatch:
setChannels:
setHeight:
setWidth:
coremlShapeToEspressoShape:
getStrides:
rawPointer
texture
espressoTensorToCoremlTensor:
espressoShapesToCoremlShapes:
factory
createCustomLayer:withParameters:error:
initWithParameterDictionary:error:
setWeightData:error:
outputShapesForInputShapes:error:
evaluateOnCPUWithInputs:outputs:error:
encodeToCommandBuffer:inputs:outputs:error:
coremlShapesToEspressoShapes:
espressoTensorsToCoremlTensors:
intFromFourBytes:
dataWithBytesNoCopy:length:freeWhenDone:
espressoTensorsToCoremlTensorsGPU:
respondsToSelector:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
setupForInputShapes:withParameters:
initWithParameters:
hasGPUSupport
setMappedWeights:sizeInBytes:
computeOnCPUWithInputTensors:outputTensors:
encodeToMetalCommandBuffer:inputTensors:outputTensors:
className
customImpl
setCustomImpl:
_className
_customImpl
numberWithUnsignedLongLong:
initWith:dimensionEncoding:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
int64Value
replaceObjectAtIndex:withObject:
vectorizeOneHotEncoderDict:index:error:
columnNameEncoding
dimensionEncoding
_output_array_shape
index_mapping
_columnNameEncoding
_dimensionEncoding
initWithShape:dataType:
isAllowedShape:error:
isAllowedDataType:error:
constraintWithShape:dataType:
_dataType
initWithUTF8String:
initWith:indices:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
featureValueWithMultiArray:
featureValueWithDouble:
extractArrayElement:indices:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
extractArrayElement:indices:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
arrayColumnName
extractIndices
outputType
_arrayColumnName
_extractIndices
_outputType
isInputSizeLowerBoundOnly
inputSize
predict:
featureArrayWithArray:error:
initWithName:type:optional:contraints:
allValues
dictionaryConstraint
featureDescriptionWithName:type:optional:constraints:
isAllowedValue:
valueContraints
setValueContraints:
_optional
_type
_valueContraints
longLongValue
numberOfClasses
hasProbabilityPredictionEnabled
predictProbabilities:probabilities:
featureValueWithObject:
stringValue
initWith:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
initWithArray:
constructDictionary:error:
featureValueWithDictionary:error:
indexOfObject:
categoryName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
categoryName:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
categoryName
_categoryName
initWithValue:additionalFeatures:
resultWithValue:additionalFeatures:
predictedValue
additionalFeatures
_predictedValue
_additionalFeatures
defaultCStringEncoding
cStringUsingEncoding:
initWithLRSpec:error:
intercept
weights
postEvalTransForm
m_spec
deserializeInterfaceFormat:archive:error:
initWithInterfaceFormat:error:
initWithMetadataFormat:error:
serializeInterfaceFormat:archive:error:
initWithUndefinedValueAndType:
initWithValue:type:
value
isEqualToNumber:
isEqualToDictionary:
isEqualToFeatureValue:
objectValue
setValue:
setObjectValue:
_undefined
_value
_objectValue
stringWithCapacity:
isValidRegressorInterface
isValidClassifierInterface
license
author
shortDescription
creatorDefined
predictedProbabilitiesName
initWithInputDescriptions:outputDescriptions:predictedFeatureName:predictedProbabilitiesName:metadata:
modelInterfaceWithInputDescription:orderedInputFeatureNames:outputDescription:orderedOutputFeatureNames:predictedFeatureName:predictedProbabilitiesName:
initWithName:
modelWithContentsOfURL:error:
initWithDescription:
setModelDescription:
_interface
_metadata
_modelDescription
regressorResultFromOutputFeatures:error:
featureCount
initWith:imputeValue:replaceValue:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
imputeValueFrom:replaceValue:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
imputeValueFrom:replaceValue:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
imputeValue
replaceValue
_imputeValue
_replaceValue
constraintForGrayImageWithWidth:height:
constraintForRGBImageWithWidth:height:
constraintForBGRImageWithWidth:height:
populateConstraintsForFeatureDescription:
descriptionFromProto:
orderedNamesFromProto:
inputDescriptionFromInterface:
outputDescriptionFromInterface:
orderedFeatureNamesFromInterface:forInput:
constraintWithWidth:height:osType:
exceptionWithName:reason:userInfo:
featureTypeForValuesInArray:error:
featureDescriptionWithName:consistentWithFeatureArray:error:
initWithWidth:height:pixelType:
osType:isAcceptedForPixelType:
_stringForAllowedOSTypes
_stringForOSType:
pixelFormatType
osType
imageHeight
imageWidth
_pixelType
_imageWidth
_imageHeight
canVectorizeFeatureWithDescription:
isVectorizableFeatureFrameDescription:
initWithFeatureArrayMap:frameDescription:sampleCount:
sampleAtIndex:
dictionaryWithValuesForKeys:
addEntriesFromDictionary:
setDescription:
features
setFeatures:
_sampleCount
_description
_features
initWithSVMModel:freeOnDealloc:isInputSizeLowerBoundOnly:inputSize:classLabels:
allocSVMNodeVector:
fillSVMNodeVector:values:count:
deallocSVMNodeVector:
initWithLibSVMFile:classLabels:
setModel:
freeModelOnDealloc
setFreeModelOnDealloc:
setIsInputSizeLowerBoundOnly:
setInputSize:
_freeModelOnDealloc
_isInputSizeLowerBoundOnly
_model
_inputSize
convertToFeatureValues:ofType:error:
initWithFeatureValues:
valueArray
_values
initWith:dataTransformerName:ouputSparse:handleUnknown:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
encodeFeatureValue:
encodeFeatureValueIntString:
handleUnknown
unknownDenseVector
featureEncoderFrom:inputDescription:orderedInputFeatureNames:
featureEncoderFrom:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
featureEncoderFrom:dataTransformerName:ouputSparse:handleUnknown:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
featureEncoding
ouputSparse
_ouputSparse
_handleUnknown
_featureEncoding
registerBrickClass:
initWithData:encoding:
initWithSVMModel:freeOnDealloc:isInputSizeLowerBoundOnly:inputSize:
initWithLibSVMFile:
initWithName:shortDescription:versionString:author:license:creatorDefined:
_shortDescription
_versionString
_author
_license
_creatorDefined
_inputDescriptionsByName
_outputDescriptionsByName
_predictedFeatureName
_predictedProbabilitiesName
initWithInputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:predictedFeatureName:predictedProbabilitiesName:
firstObject
containsObject:
setWithSet:
minusSet:
_inputFeatureNames
_outputFeatureNames
predictedValueFeatureDescription
predictedClassFeatureDescription
classProbabilityFeatureDescription
scalarRegress:error:
scalarRegress:
vectorRegress:dest:
output_classes
initWithFormat:arguments:
errorWithCode:format:args:
initWith:scaleValue:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
shiftValue
scaleValue
_shiftValue
_scaleValue
initWithStringClassProbability:classFeatureType:additionalFeatures:
predictedClassString
classStringProbability
predictedClassFeatureType
_predictedClassString
_classStringProbability
_predictedClassFeatureType
stringWithCString:encoding:
calculateClassProbability:input:error:
classify:error:
classify:topK:error:
classType
classEncoding
initWith:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
computeSingleNorm:lastValue:
inputDescriptionFrom:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
normFrom:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
normFrom:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
norm
_norm
URLWithString:
requestWithURL:
setHTTPMethod:
setValue:forHTTPHeaderField:
setHTTPBody:
sharedSession
dataTaskWithRequest:completionHandler:
resume
dataUsingEncoding:
JSONObjectWithData:options:error:
_width
_height
_channels
_batch
_sequence
setShape:
setRawPointer:
_rawPointer
setTexture:
_texture
unsignedIntValue
shortValue
unsignedShortValue
unsignedLongLongValue
numberWithShort:
numberWithUnsignedShort:
initWithBytesNoCopy:length:
dictionaryWithDictionary:
componentsSeparatedByString:
stringByAppendingString:
pathExtension
arrayWithObject:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
getResourceValue:forKey:error:
Invalid array shape %@ for converting to gray image
Failed to create temporary buffer for conversion to image
Failed to create gray image %@ x %@
Failed to convert planar to BGRAX888: Code=%@
Failed to create BGRA image %@ x %@
MLDictionaryConstraint cannot check undefined values
MLDictionaryConstraint only allows Dictionary values
Dicitonary keys are not all expected type %@
String
Int64
keyType
Tq,R,N,V_keyType
classifyTopK
TQ,V_classifyTopK
useCPUOnly
usesCPUOnly
Tc,N,V_usesCPUOnly
v8@?0
restrictNeuralNetworksToUseCPUOnly
Tc,V_restrictNeuralNetworksToUseCPUOnly
isNeuralNetworkGPUPathForbidden
Tc,R,N,V_isNeuralNetworkGPUPathForbidden
featureNames
T@"NSSet",R,N
dictionary
T@"NSDictionary",&,N,V_dictionary
URL has nil fileSystemRepresentation
Nothing found at %@
Unable to extract model type from stream in compiled model: %@
No known class for loading model type %@
IO Error loading model from compiled model archive: %@
Loading class must conform to serializable protocols
MLModelType_pipelineClassifier
MLModelType_pipelineRegressor
MLModelType_pipeline
MLModelType_glmRegressor
MLModelType_supportVectorRegressor
MLModelType_treeEnsembleRegressor
MLModelType_neuralNetworkRegressor
MLModelType_glmClassifier
MLModelType_supportVectorClassifier
MLModelType_treeEnsembleClassifier
MLModelType_neuralNetworkClassifier
MLModelType_neuralNetwork
MLModelType_oneHotEncoder
MLModelType_imputer
MLModelType_featureVectorizer
MLModelType_dictVectorizer
MLModelType_scaler
MLModelType_categoricalMapping
MLModelType_normalizer
MLModelType_arrayFeatureExtractor
MLModelType_identity
INVALID
dryRun
Tc,V_dryRun
platform
T@"NSString",&,V_platform
platformVersion
T@"NSString",&,V_platformVersion
outputFiles
T@"NSArray",&,V_outputFiles
compiler error: 
Error reading protobuf spec. %s
mlmodelc
%@ %@
%@ No known class for compiling model type %@
%@ Invalid compiling class %@ for model type %@
%@ Error reading protobuf spec. %s
No known class for compiling model type %@
Invalid compiling class %@ for model type %@
sequence_repeat
Invalid network: Layer name missing.
Invalid network: Expected at least one input for layer: '
Invalid network: Expected at least one output for layer: '
No output found for layer: '
No input found for layer: '
Layer name: '
'. Input and output data blob names cannot be the same.
Input '
' of layer '
' not found in any of the outputs of the preceeding layers.
Validate number of inputs and outputs: Unknown layer type
Invalid number of inputs (
) and outputs (
) to layer: '
map::at:  key not found
Invalid data blob: '
sequence_concat
concat
Input shapes must be equal for layer: '
Input shapes (height and width dimensions) must be equal for layer: '
strides must be 
 elements for shape
Shape must have at least one element
Permute Layer: axis parameter must of length 4
transpose
elementwise
_tmp_
number of output channels = 
not allowed in layer
number of input channels = 
Size of weights = 
 is not equal to size of the product of input and output channels = 
 in layer 
Size of bias = 
 is not equal to the output channels = 
inner_product
Failed to copy empty or invalid weights to kernel
Error converting float16 biases
Inner product layer: '
' : Product of input blob dimensions C,H,W (
) must be equal to the parameter 'inputChannels' (
Models must have one or more inputs
Feature missing a name
Feature description 
 must specify a valid feature type.
Description of multiarray feature '
' has an invalid shape. The shape has zero-length or is missing.
' has an invalid shape. Element 
 has non-positive value 
Filled in missing dataType of multiarray feature '
' to be DOUBLE
Description of dictionary feature '
' must contain a key type of either Int64 or String.
Description of image feature '
' has missing or non-positive width 
' has missing or non-positive height 
' has missing or invalid colorspace. It must be RGB, BGR or GRAYSCALE.
Feature description has an unspecified or invalid type for feature '
_lrn_out
_mul
_post_scale
_post_scale_shift
_scale
_shift
output size = 
input size = 
Recurrent layer: too many output blobs.
Recurrent layer: too few output blobs.
Recurrent layer: too many input blobs.
Recurrent layer: must have a named input
GRU layer: must provide 2 activations
_prereverse
sequence_reverse
GRU layer: weight size incorrect
GRU layer: bias size incorrect
Unsupported recurrent non-linearity type.
GRU layer: '
': height dimension of the input blob must be 1.
': width dimension of the input blob must be 1.
Convolution layer: '
' , input channels must be divisible by the number of groups.
' , output channels cannot be 0
' , kernel channels cannot be 0
' , if set, kernel size must be of length 2
' , kernel size cannot be 0
' , if set, stride must be of length 2
' , stride cannot be 0
' , if set, dilation factor must be of length 2
' , dilation factor cannot be 0
' , if set, output shape must be of length 2
' , for valid padding, padding border amounts must be specified for both height and width, if set
Same Padding Mode not recognized
Convolution padding type not set
deconvolution
convolution
' , size of weight parameter not equal to the product of kernel sizes, number of kernels and kernel channels
' , size of bias parameter not equal to the number of output channels
Convolution layer '
' input's channel dimension (
) is not equal to the number of layer parameters  (
Reduce layer: '
': unknown value for parameter 'mode'.
': unknown value for parameter 'axis'.
': argmax reduction operation is only supported along single dimensions C, H or W.
reduce
%lld.%lld.%lld
%@%@
majorVersion
Tq,R,V_majorVersion
minorVersion
Tq,R,V_minorVersion
patchVersion
Tq,R,V_patchVersion
variantString
T@"NSString",R,V_variantString
versionNumberString
T@"NSString",R,N
versionString
activation
PReLU Layer: '
': unable to determine the channel dimension of the input blob. 
PReLU Layer: 
 , number of alpha parameters (
) is not equal to the channel dimension (
) of the input
params_prelu
Parametric Softplus: alpha and beta parameters must have the same size
softplus_alphas
softplus_betas
Bi dir LSTM layer: must have two weight params
Recurrent layer: too few input blobs.
Bi dir LSTM layer (forward lstm): must provide 3 activations
Bi dir LSTM layer (backward lstm): must provide 3 activations
Bi dir LSTM layer (forward lstm): weight matrix size incorrect
Bi dir LSTM layer (forward lstm): recursion matrix size incorrect
Bi dir LSTM layer (backward lstm): weight matrix size incorrect
Bi dir LSTM layer (backward lstm): recursion matrix size incorrect
W_x_reverse
W_h_reverse
Bi dir LSTM layer (forward lstm): bias size incorrect
Bi dir LSTM layer (backward lstm): bias size incorrect
b_reverse
Bi dir LSTM layer (forward lstm): peephole size incorrect
Bi dir LSTM layer (backward lstm): peephole size incorrect
p_reverse
BLSTM layer: '
softmax
split
Split layer: '
' , number of outputs = 
 do not divide the input dimension = 
Split layer :
 , number of outputs (
) do not match the parameter nOutputs (
Reorganize Data layer: '
' unknown value for parameter 'mode'.
space_to_depth
Reorganize data layer: '
': 'blockSize' must divide height dimension of the input.
': 'blockSize' must divide width dimension of the input.
': 'blockSize' square must divide channel dimension of the input.
Padding layer: 
 , pad amounts must be specified for both height and width, if set
Padding Type not set
general_padding
Execution Profile not recognized.
ERROR: profile=
; idx=
; ref_value=
; pred=
Validation failure loading ML tree model; possibly corrupt image.
model.mlmodel
%@ does not exist
(Loaded)
(Failed Load)
(Not loaded)
modelDescription
T@"MLModelDescription",R,N
interface
T@"MLModelInterface",R
metadata
T@"MLModelMetadata",R
Model is not a classifier.
MLModelAsset: classifierWithError: load failed.
Model is not a regressor.
ranLoad
Tc,V_ranLoad
asset
T@"NSObject<MLModeling>",&,V_asset
compiledURL
T@"NSURL",R,V_compiledURL
model
T@"<MLModeling>",R,N
regressor
T@"<MLRegressor>",R,N
classifier
T@"<MLClassifier>",R,N
Pooling layer: 
 , if set, kernel size must be of length 2
 , kernel size cannot be 0
 , if set, stride must be of length 2
 , stride cannot be 0
 , for valid padding, padding border amounts must be specified for both height and width, if set
 , for include last pixel padding, padding amounts must be of length 2, if set
Pooling padding type not set
Input
%s : (C,H,W) = (%d, %d, %d) 
Neural Network compiler %d: %u , name = %s, 
output shape : (C,H,W) = (%d, %d, %d) 
' shape (C,H,W = 
) for output of layer: '
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
Mean image preprocessor input blob ('
') not found. 
_preprocessed
mean_image_
Mean Image Preprocessing: mean image size must be same as input image size.
load_constant
load_constant_mean_image_
elementwise_add_mean_image_
Unknown layer type
Input name(s) and shape(s): 
isOrderedBgr
isGrayScale
blueBias
greenBias
redBias
grayBias
scale
placeHolderInputName
precision
Ti,N,V_precision
engine
Ti,N,V_engine
Ti,N,V_qos
orderedBgr
T{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,GisOrderedBgr,V_orderedBgr
T{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_isGrayScale
T{map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, float> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, float>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_blueBias
T{map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, float> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, float>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_greenBias
T{map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, float> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, float>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_redBias
T{map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, float> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, float>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_grayBias
T{map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, float> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, float>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_scale
isBiasPreprocessingShared
TB,N,V_isBiasPreprocessingShared
modelFilePath
T@"NSString",&,N,V_modelFilePath
inputLayerNames
T@"NSArray",R,N,V_inputLayerNames
outputLayerNames
T@"NSArray",R,N,V_outputLayerNames
name
T@"NSString",&,N,V_name
inputDescription
T@"NSDictionary",&,N,V_inputDescription
outputDescription
T@"NSDictionary",&,N,V_outputDescription
Classify can only be called on neural network classifiers.
Neural network classifier does not contain class labels.
The size of the output layer '%@' in the neural network does not match the number of classes in the classifier.
Regress can only be called on neural network regressors.
Invalid height and width for the image input.
Input MLMultiArray cannot be %d dimensional (must be between 1 and 5 dimensions).
Neural networks only accept image and array inputs.
Unknown error in computing network shape.
Attempted to compile a non-neural-network model as a neural network.
Encountered an unexpected error while compiling a neural network model.
Encountered an error while compiling a neural network model: %@
generic
.espresso.net
Model .net file not found.
Error in declaring network.
Error declaring input for NN engine.
Error declaring output for NN engine.
Error allocating buffer space for NN.
The model expects input feature %@ to be an array, but the input is of type %ld.
Input feature %@ was presented as a vector of length %@, but the model expects an input of length %@.
Input feature %@ was presented as a batch  (length %@) of sequences (length %@) of vectors of length %@, but the model expects vectors of length %@.
Input feature %@ was given as a batch (size %@) of sequences (length %@), but evaluations of batches of sequences are not currently supported.
Input %@ is an array of rank %@, but this model only supports single vector inputs (rank 1) or a sequence of batches of vectors (rank 3).
Input feature %@ was presented as an array of size (%@, %@, %@), but the model expects an input of size (%@, %@, %@).
Input feature %@ was presented as a batch  (length %@) of sequences (length %@) of arrays of size (%@, %@, %@), but the model expects arrays of size (%@, %@, %@).
Input %@ is an array of rank %@, but this model only supports image-like inputs (rank 3) or a sequence of batches of image-like inputs (rank 5).
Invalid model input shape in model description. VALIDATOR SHOULD HAVE CAUGHT THIS -- FILE A RADAR.
The model expects input feature %@ to be an image, but the input is of type %ld.
Input image feature %@ does not match model description
Required input feature not passed to neural network.
Image inputs are not supported on watchOS.
Failed to lock pixel buffer
Error binding image input buffer %@.
Error binding input buffer %@.
Error passing input %s to NN engine.
Unsupported input type for neural network.
Error binding output buffer.
Image value is nil.
Error computing NN outputs.
Image output %@ is missing width, height, and pixel info in its description
Batch or sequence image output is unsupported for image output %@
output expected to be %@ x %@, %@ channel image, but is %@ x %@, %@
Failed to convert output %@ to image
Passing empty input dictionary for resetSizes.
Incorrect input number of dimensions (must be between 1, 3, or 5 dimensions.
Different batch numbers for input features.
Cannot evaluate a batch of size %@, which is larger than maximum of %@.
Cannot evaluate a sequence of length %@, which is longer than maximum of %@.
Failure setting up to dynamically allocate for sequence size.
Failure dynamically resizing for sequence length.
Error in re-declaring input %@.
Error in declaring output %@.
Error in re-allocating network for longer sequences.
numInputs
TQ,R,N,V_numInputs
numOutputs
TQ,R,N,V_numOutputs
inputBuffers
T{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_inputBuffers
outputBuffers
T{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_outputBuffers
usingCPU
Tc,N,V_usingCPU
context
T^v,N,V_context
plan
T^v,N,V_plan
network
T{?=^vi},N,V_network
params
T{map<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_params
isEspresoBiasPreprocessingShared
TB,N,V_isEspresoBiasPreprocessingShared
batchSize
TI,N,V_batchSize
seqSize
TI,N,V_seqSize
names
T{vector<const char *, std::__1::allocator<const char *> >=^*^*{__compressed_pair<const char **, std::__1::allocator<const char *> >=^*}},N,V_names
widths
T{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}},N,V_widths
heights
T{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}},N,V_heights
T{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}},N,V_ks
batches
T{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}},N,V_batches
sequences
T{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}},N,V_sequences
classLabels
T@"NSArray",&,N,V_classLabels
classScoreVectorName
T@"NSString",&,N,V_classScoreVectorName
probDict
T@"NSMutableDictionary",&,N,V_probDict
inputLayers
T@"NSArray",R,N,V_inputLayers
outputLayers
T@"NSArray",R,N,V_outputLayers
Unknown error in compiling network layers.
Model requires a sequence longer than the maximum.
Unknown error in building network shapes.
.espresso.shape
.espresso.weights
Unknown error in optimizing network for GPU.
Error saving network to file.
Input image has invalid colorspace.
Unable to map image preprocessing feature name to any given image input name.
outputChannels = 
inputDim = 
 is not equal to size of the product of input dims and output channels = 
 is not equal to the output dims = 
Embedding layer: '
': channel dimension of the input blob must be 1.
Input feature '%@' does not match model's input description. Recieved %@ instead of expected %@.
unexpectedly got nil results for feature %@
unexpectedly got nil feature description for feature %@
regress:error must be implemented by derived class!
clasify:topK:error be implemented by derived class!
Final model is not a classifier.
T@"MLPipeline",&,V_engine
MLMultiArrayDataTypeDouble
MLMultiArrayDataTypeFloat32
MLMultiArrayDataTypeInt32
MLMultiArrayDataTypeInvalid (%d)
Float32
Int32
Double
 vector
 matrix
 array
dataPointer
T^v,R,N
dataType
Tq,R,N
shape
T@"NSArray",R,N,V_shape
strides
T@"NSArray",R,N,V_strides
count
numberOfBytesPerElement
TQ,R,N
managingData
Tc,R,N,GisManagingData
contiguous
Tc,R,N,GisContiguous
Unable to copy %@ into %@
Unable to vectorize %@ into %@
value count (%@) does not match array count (%@)
Inconsistent row size
setRangeWithRawData: range out of bounds.
setRangeWithRawData: non-contiguous destination unsupported
setRangeWithRawData: failed to vectorize source
multiArray
T@"MLMultiArray",&,V_multiArray
WARNING: using -h 0 may be faster
WARNING: reaching max number of iterations
optimization finished, #iter = %d
WARNING: training data in only one class. See README for details.
WARNING: class label %d specified in weight is not found
Total nSV = %d
WARNING: # folds > # data. Will use # folds = # data instead (i.e., leave-one-out cross validation)
Model doesn't contain information for SVR probability inference
svm_type %s
kernel_type %s
degree %d
gamma %g
coef0 %g
nr_class %d
total_sv %d
label
probA
probB
nr_sv
%.16g 
0:%d 
%d:%.8g 
%80s
svm_type
unknown svm type.
kernel_type
unknown kernel function.
degree
gamma
coef0
nr_class
total_sv
unknown text in model file: [%s]
ERROR: fscanf failed to read model
unknown svm type
unknown kernel type
gamma < 0
degree of polynomial kernel < 0
cache_size <= 0
eps <= 0
C <= 0
nu <= 0 or nu > 1
p < 0
shrinking != 0 and shrinking != 1
probability != 0 and probability != 1
one-class SVM probability output not supported yet
specified nu is infeasible
Prob. model for test data: target value = predicted value + z,
z: Laplace distribution e^(-|z|/sigma)/(2sigma),sigma= %g
obj = %f, rho = %f
nSV = %d, nBSV = %d
nu = %f
C = %f
epsilon = %f
Line search fails in two-class probability estimates
Reaching maximal iterations in two-class probability estimates
Exceeds max_iter in multiclass_prob
c_svc
nu_svc
one_class
epsilon_svr
nu_svr
linear
polynomial
sigmoid
precomputed
Simple Recurrent layer: weight size incorrect
Simple Recurrent layer: bias size incorrect
Recurrent layer: '
Interface type is not an TreeEnsembleClassifier
Could not construct tree ensemble regressor.
Internal error: model too large to be compiled.
INTERNAL ERROR -- feature not present that should have been.
Incorrect number of classes given (TreeEnsembleClassifier).
Scale Layer: Scale shape cannot be of size 0
Scale Layer: Scale shape must be of size less than or equal to 3
Scale Layer: Scale size does not match provided shape
constant_in_scale
Scale Layer: Must accept exactly 1 input and produce 1 output
Scale Layer: Bias shape cannot be of size 0
Scale Layer: Bias shape must be of size less than or equal to 3
Scale Layer: Bias size does not match provided shape
constant_in_bias
mul_out
LSTM layer: must provide 3 activations
LSTM layer: weight matrix size incorrect
LSTM layer: recursion matrix size incorrect
LSTM layer: bias size incorrect
LSTM layer: peephole size incorrect
LSTM layer: '
Bias Layer: shape cannot be of size 0
Bias Layer: shape must be of size less than or equal to 3
Bias Layer: bias size does not match provided shape
constant_in
Bias Layer: Must accept exactly 1 input and produce 1 output
flatten
nullable 
- (nullable instancetype)initWithContentsOfURL:(NSURL *)url error:(NSError * _Nullable * _Nullable)error
- (nullable instancetype)init
Make a prediction using the convenience interface
@param 
@param error If an error occurs, upon return contains an NSError object that describes the problem. If you are not interested in possible errors, pass in NULL.
@return the prediction as 
Make a prediction using the standard interface
@param input an instance of 
 to predict from
predictionFrom
 error:(NSError * _Nullable * _Nullable)error
)input error:(NSError * _Nullable * _Nullable)error
/// Model Prediction Input Type
@interface 
 : NSObject<MLFeatureProvider>
@end
- (instancetype)init NS_UNAVAILABLE;
- (instancetype)
/// Model Prediction Output Type
/// 
@property (readwrite, nonatomic
, nullable
#import <Foundation/Foundation.h>
#import <CoreML/CoreML.h>
#include <stdint.h>
NS_ASSUME_NONNULL_BEGIN
/// Class for model loading and prediction
 : NSObject
@property (readonly, nonatomic, nullable) MLModel * model;
NS_ASSUME_NONNULL_END
@implementation 
self = [super init];
if (!self) { return nil; }
_model = [MLModel modelWithContentsOfURL:url error:error];
if (_model == nil) { return nil; }
return self;
NSString *assetPath = [[NSBundle bundleForClass:[self class]] pathForResource:@"
" ofType:@"mlmodelc"];
return [self initWithContentsOfURL:[NSURL fileURLWithPath:assetPath] error:nil];
id<MLFeatureProvider> outFeatures = [_model predictionFromFeatures:input error:error];
 * result = [[
 alloc] initWith
return result;
 *input_ = [[
return [self 
:input_ error:error];
if (self)
- (NSSet<NSString *> *)featureNames
return [NSSet setWithArray:@[
- (nullable MLFeatureValue *)featureValueForName:(NSString *)featureName
if ([featureName isEqualToString:@"
return 
 == nil ? nil : 
[MLFeatureValue 
 error:nil
.longLongValue
.doubleValue
return nil;
#import "
MLMultiArray *
NSDictionary<NSNumber *, NSNumber *> *
NSDictionary<NSString *, NSNumber *> *
NSNumber *
double
CVPixelBufferRef
int64_t
NSString *
multiArrayValue
dictionaryValue
doubleValue
imageBufferValue
int64Value
stringValue
predictionFromFeatures
API_AVAILABLE(macos(
ios(
watchos(
tvos(
(NSDictionary<NSNumber *, NSNumber *> *)
(NSDictionary<NSString *, NSNumber *> *)
[outFeatures featureValueForName:@"
featureValueWithPixelBuffer
featureValueWithInt64
featureValueWithDouble
featureValueWithString
featureValueWithDictionary
featureValueWithMultiArray
coreml
com.apple.coreml
.model%lluv%@
Final model requested from empty pipeline.
models
T@"NSArray",R,V_models
Error: Attempted multiple write-open of data blob 
.DAT
non-directory file already exists at archive path
error creating directory: %@
Error creating directory.
coremldata.bin
Interface type is not an Support Vector Classifier
modelType
generatedClassName
method
predict
shortDescription
version
license
author
specificationVersion
metadataOutputVersion
dependencies
outputSchema
inputSchema
error
{"error":"unknown error"}
structure
className
layerDescription
Color
formattedType
categorical mapping
MLCategoricalMapping: Unknown input value.
mapping
T@"NSDictionary",R,N,V_mapping
valueOnUnknown
T@"MLFeatureValue",R,N,V_valueOnUnknown
.swift
import CoreML
Construct a model with explicit path to mlmodel file
- parameters:
   - url: the file url of the model
   - throws: an NSError object that describes the problem
init(contentsOf url: URL) throws
/// Construct a model that automatically loads the model from the app's bundle
convenience override init()
convenience init()
    - 
- throws: an NSError object that describes the problem
- returns: the result of the prediction as 
Make a prediction using the structured interface
   - input: the input to the prediction as 
func 
) throws -> 
(input: 
@objc 
:NSObject
class 
var model: MLModel
self.model = try MLModel(contentsOf: url)
let bundle = Bundle(for: 
.self)
let assetPath = bundle.url(forResource: "
", withExtension:"mlmodelc")
try! self.init(contentsOf: assetPath!)
let outFeatures = try model.prediction(from: input)
let result = 
outFeatures.featureValue(for: "
")!.
 as! [
 : Double]
return result
let input_ = 
return try self.
(input: input_)
var featureNames: Set<String>
return [
func featureValue(for featureName: String) -> MLFeatureValue?
if (featureName == "
try! 
MLFeatureValue(
 as [NSObject : NSNumber]
return nil
init(
 = nil
self.
 : MLFeatureProvider
var 
let 
prediction
@available(macOS 
iOS 
tvOS 
watchOS 
, *)
pixelBuffer
int64
string
MLMultiArray
[String : Double]
[Int64 : Double]
CVPixelBuffer
Batchnorm layer: 
 , size of gamma vector must be equal to the number of channels
 , size of beta vector must be equal to the number of channels
 , size of mean vector must be equal to the number of channels
 , size of variance vector must be equal to the number of channels
batchnorm
Number of samples do not match
compile
generate
variant
repair
dry-run
command
inputdocument
outputpath
globalmodule
no-documentation
detailed-type-info
language
swift-version
output-partial-info-plist
LSBundleContainsCoreMLmlmodelc
toolName
T@"NSString",R
toolPath
T@"NSString",&,VtoolPath
commandName
T@"NSString",&,VcommandName
sourceUrl
T@"NSURL",&,VsourceUrl
destinationDirectoryUrl
T@"NSURL",&,VdestinationDirectoryUrl
dryrun
Tc,Vdryrun
targetLanguage
Ti,VtargetLanguage
swiftVersion
Ti,VswiftVersion
globalModule
Tc,VglobalModule
noDocumentation
Tc,VnoDocumentation
detailedTypeInfo
Tc,V_detailedTypeInfo
outputPlistFilename
T@"NSString",&,V_outputPlistFilename
invalid
Tc,Vinvalid
invalidError
T@"NSString",&,VinvalidError
%s: Error: %s
usage: %@ <%@> <%@> <%@> [options ...]
unable to read document: %@
detail: %@
%@ command missing model file path
%@ command missing destination path
%@ failed to write partial plist
Error reading model. %s
%s is already a valid model.
Found %d issues
%s %d of of them:
Can fix
Fixed
    Fix %2d = %s
Issues still remain that cannot be automatically fixed:
    Issue %2d = %s
    Issue = %s
Please contact the model author or use coremltools to manually fix these issues
backup
Moving model to backup: %s
Failed to move model to backup. %s
Saving model with fixes to %s
Error saving fixed model. %s
help
missing parameter to option "%s"
Objective-C
Swift
unrecognized target language "%s".  Expected one of: Swift, Objective-C.
unrecognized Swift version "%s".  Expected one of: 3.0, 3.1, 3.2 or 4.0
Warning: ignoring unrecognized command line argument --
Warning: ignoring unrecognized command line argument -
unexpected command name %s
unrecognized positional argument %s
unable to deserialize object
unable to serialize object
engineName
Error creating Core ML custom layer implementation from factory for layer "
Core ML custom Layer implementation '
' does not coform to the MLCustomLayer protocol
Error getting Core ML custom layer output shapes for layer "
Evaluation on Core ML custom layer "
" called before the layer is constructed.
Error evaluating Core ML custom layer "
" on CPU.
' does not coform to the MLCustomLayer protocol'
Error initializing Core ML custom layer implementation with parameter dictionary for layer "
Error setting weights in Core ML custom layer "
" on GPU.
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
T@"NSString",R,N,V_className
customImpl
T@"NSObject<MLCustomLayer>",&,N,V_customImpl
feature vectorizer
Expected value for feature '%@'.
MLFeatureVectorizer: Array length incorrect.
MLFeatureVectorizer: Dictionary key type must be NSNumber.
MLFeatureVectorizer: Dictionary index out of range.
MLFeatureVectorizer: Incorrect Type.
MLFeatureVectorizer: Dict key type must be NSNumber.
MLFeatureVectorizer: Dict idx out of range.
columnNameEncoding
T@"NSArray",R,N,V_columnNameEncoding
dimensionEncoding
T@"NSArray",R,N,V_dimensionEncoding
MLModelDescriptionKey
MLModelVersionStringKey
MLModelAuthorKey
MLModelCreatorDefinedKey
MLModelLicenseKey
Input shape is %@-d, but %@-d is expected
Size of dimension %@ should be %@ not %@
MultiArray dataType should be %@ but is %@
MultiArrayConstraint cannot check undefined values
MultiArrayConstraint only allows MultiArrays
%@, %@
Tq,R,N,V_dataType
array feature extractor
arrayFeatureExtractor
got nil array input to MLArrayFeatureExtractor predict:error:
Lossy cast to integer by ArrayFeatureExtractor; use double as output type.
Invalid output type of ArrayFeatureExtractor.
arrayColumnName
T@"NSString",R,N,V_arrayColumnName
extractIndices
T@"NSArray",R,N,V_extractIndices
outputType
Tq,R,N,V_outputType
Input feature length mismatch. Got features of length %d expected length of at least %d
Input feature length mismatch. Got features of length %d expected length of %d
T@"MLSVREngine",&,V_engine
unable to open output file: %@
swift
Load Constant: shape must be of size 3
Load Constant: data size does not match provided shape
This PipelineClassifier was created with unreleased beta CoreML and is no longer supported. Please re-create/convert your model with the the current Core ML
Invalid model type found in compiled pipeline model.
l2_normalize
Slice layer: '
slice
': output blob channel dimension size is 0.
': output blob height dimension size is 0.
': output blob width dimension size is 0.
Expected feature of type %@ but got %@
Feature description does not allow missing %@ values
%@ : Dictionary (%@)%@
%@ : Image (%@)%@
%@ : MultiArray (%@)%@
%@ : %@%@
valueContraints
T@"NSDictionary",&,V_valueContraints
T@"NSString",R,C,N,V_name
type
Tq,R,N,V_type
optional
Tc,R,N,GisOptional,V_optional
T@"MLSVMEngine",&,V_engine
Crop layer: 
 , crop border amounts must be specified for both height and width, if set
Crop Layer: 
 , must be provided exactly 2 offset values when it has 2 inputs
Crop Layer: '
': unable to determine the spatial dimensions of the second input blob. 
dict vectorizer
MLDictVectorizer
Invalid input description.
Invalid output description.
Expected input column '%@ not present.
Type of input not dictionary as expected.
categoryName
T@"NSOrderedSet",R,N,V_categoryName
profile_number
debug_fatpack
engine_version
Unrecognized profile number 
predictedValue
T@"MLMultiArray",R,V_predictedValue
additionalFeatures
T@"<MLFeatureProvider>",R,V_additionalFeatures
Upsample layer: 
 , scaling factor must be of length 2, if set
Upsample layer: '
macOS
watchOS
10.13
11.0
10.13.2
11.2
input_
Class
_Bool
_Imaginary
__COLUMN__
__FUNCTION__
associativity
atomic
break
bycopy
byref
class
const
convenience
default
deinit
didSet
dynamic
dynamicType
extension
extern
fallthrough
false
final
float
import
infix
inline
inout
nonatomic
nonmutating
oneway
postfix
precedence
prefix
private
public
retain
return
right
short
signed
sizeof
static
struct
subscript
super
switch
typealias
typedef
union
unowned
where
while
// This file was automatically generated and should not be edited.
Output
 as 
optional 
Unknown type
double value
integer value
string value
dictionary of 64-bit integers to doubles
dictionary of strings to doubles
grayscale (kCVPixelFormatType_OneComponent8) 
color (kCVPixelFormatType_32BGRA) 
image buffer, 
 pixels wide by 
 pixels high
multidimensional array 
 element vector 
 by 
 matrix 
 3-dimensional array 
 4-dimensional array 
 5-dimensional array 
of 32-bit integers
of doubles
of floats
/dev/null
Input feature length mismatch. Got features of length %d expected length %d
Error reading from archive.
Error writing to archive.
%@ : %@
Dictionary keys must be NSStrings or NSNumbers.
Object not consistent with type supplied
value
T@,&,V_value
objectValue
T@"NSObject",&,N,V_objectValue
undefined
Tc,R,N,GisUndefined,V_undefined
Td,R,N
T@"NSString",R,C,N
T@"MLMultiArray",R,N
T@"NSDictionary",R,N
T^{__CVBuffer=},R,N
A Core ML custom neural network layer requires an implementation named '
' which was not found in the global namespace.
A custom neural network layer implementation class named '
' does not conform to the MLCustomLayer protocol.
Missing predictionFromFeatures:error implementation
MLModel : %@ modelDescription: %@
T@"MLModelDescription",&,N,V_modelDescription
T@"MLModelInterface",R,V_interface
T@"MLModelMetadata",R,V_metadata
Average Layer must have exactly 1 output
sum_out
_sum
_sum_
featureCount
sampleCount
Only integer values with magnitude less than 2^48 are supported in the imputer.
imputer
MLimputer
imputed feature value not set.
Invalid combination of input/output/feature value types.
Invalid combination of replace value type and input/output/feature value types.
imputeValue
T@"MLFeatureValue",R,N,V_imputeValue
replaceValue
T@"MLFeatureValue",R,N,V_replaceValue
spec
Inconsistent value types in array
Cannot form description from nothing
Inconsistent value constraints in array
MultiArray
Dictionary
Image
Invalid
UnknownValue
Illegal value in MLFeatureType enum
Dot product layer: '
Error opening file 
Error reading file statistics of 
File 
: not a regular file.
: error opening mmap: 
: error unmapping memory; msg=
: Error closing file; msg=
32RGBA
32BGRA
32ARGB
OneComponent8
24RGB
24BGRA
Unsupported (%@)
32BGRA or 32ARGB
Image constraint can not accept missing values.
Image size constraints must be positive.
Image is not valid width %@, instead is %@
Image is not valid height %@, instead is %@
Image is not expected type %@, instead is %@
%@, %@ x %@
Grayscale
imageHeight
imageWidth
pixelType
TQ,R,V_pixelType
osType
TI,R
pixelsHigh
Tq,R,N,V_imageHeight
pixelsWide
Tq,R,N,V_imageWidth
pixelFormatType
TI,R,N
Feature %@ not present in input dictionary.
Feature %@ not vectorizable.
Internal programming error.
Could not find required feature
Inconsistent # of samples across features
Not all described features found in sample
Feature value %@ inconsistent with description
T@"NSDictionary",&,N,V_description
features
T@"NSDictionary",&,N,V_features
T^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii},V_model
freeModelOnDealloc
Tc,V_freeModelOnDealloc
isInputSizeLowerBoundOnly
Tc,V_isInputSizeLowerBoundOnly
inputSize
TQ,V_inputSize
numberOfClasses
SVM has invalid number of support vectors or clases
Internal error: support vectors not set.
value types inconsistent with description
valueArray
T@"NSArray",R,V_values
one hot encoder
MLOneHotEncoder
%@: Output description type must be MLTypeDictionary (ouputSparse On) or                       MLFeatureTypeMultiArray (ouputSparse Off) 
MLOneHotEncoder: unknown category %@, expected one of %@
featureEncoding
T@"NSOrderedSet",R,N,V_featureEncoding
ouputSparse
Tc,R,N,V_ouputSparse
handleUnknown
Tc,R,N,V_handleUnknown
MLCustomLayerWrapper
In custom layer 
, parameter key 
 has no value.
brick
MLCustomLayerWeights
Tc,R,V_isInputSizeLowerBoundOnly
TQ,R,V_inputSize
name: %@, version: %@ author: %@ description: %@ creatorDefined: %@
T@"NSString",R,V_name
T@"NSString",R,V_shortDescription
T@"NSString",R,V_versionString
T@"NSString",R,V_author
T@"NSString",R,V_license
creatorDefined
T@"NSDictionary",R,V_creatorDefined
MLModelDescription: %@ inputDescriptionsByName: %@ outputDescriptionsByName: %@ predictedFeatureName: %@ predictedProbabilitiesName: %@ metadata: %@
inputDescriptionsByName
T@"NSDictionary",R,N,V_inputDescriptionsByName
outputDescriptionsByName
T@"NSDictionary",R,N,V_outputDescriptionsByName
predictedFeatureName
T@"NSString",R,C,N,V_predictedFeatureName
predictedProbabilitiesName
T@"NSString",R,C,N,V_predictedProbabilitiesName
T@"NSDictionary",R,N,V_metadata
validateDataTransformDescription: Invalid FeatureType %@
T@"NSDictionary",R,V_inputDescription
T@"NSDictionary",R,V_outputDescription
inputFeatureNames
T@"NSOrderedSet",R,V_inputFeatureNames
outputFeatureNames
T@"NSOrderedSet",R,V_outputFeatureNames
T@"NSString",R,V_predictedFeatureName
T@"NSString",R,V_predictedProbabilitiesName
predictedValueFeatureDescription
T@"MLFeatureDescription",R
predictedClassFeatureDescription
classProbabilityFeatureDescription
Regressor must specify predictedValueOutput.
Classifier must specify predictedClassOutput and/or probabilityOutput
validRegressorInterface
Tc,R,GisValidRegressorInterface
validClassifierInterface
Tc,R,GisValidClassifierInterface
Interface type is not an TreeEnsembleRegressor
Could not construct tree ensemble compiler.
Dimension must equal one when using scalarRegress.
Reshape Layer: target shape must of length 3 or 4
reshape
Reshape layer: '
': product of new shape must equal the product of input blob dimensions.
Error opening file stream: 
 already opened as stream attempted to open as mmapped file.
com.apple.CoreML
scaler
shiftValue
T@"MLFeatureValue",R,N,V_shiftValue
scaleValue
T@"MLFeatureValue",R,N,V_scaleValue
predictedClassString
T@"NSString",R,V_predictedClassString
classStringProbability
T@"NSDictionary",R,V_classStringProbability
predictedClassFeatureType
Tq,R,V_predictedClassFeatureType
normalizer
MLNormalizer
norm
Ti,R,N,V_norm
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/deps/protobuf/src/google/protobuf/arena.cc
CHECK failed: (options_.initial_block_size) >= (sizeof(Block)): 
: Initial block size too small for header.
CHECK failed: (n) <= (std::numeric_limits<size_t>::max() - kHeaderSize): 
CANCELLED
UNKNOWN
INVALID_ARGUMENT
DEADLINE_EXCEEDED
NOT_FOUND
ALREADY_EXISTS
PERMISSION_DENIED
UNAUTHENTICATED
RESOURCE_EXHAUSTED
FAILED_PRECONDITION
ABORTED
OUT_OF_RANGE
UNIMPLEMENTED
UNAVAILABLE
DATA_LOSS
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/deps/protobuf/src/google/protobuf/stubs/int128.cc
Division or mod by zero: dividend.hi=
, lo=
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/deps/protobuf/src/google/protobuf/io/coded_stream.cc
A protocol message was rejected because it was too big (more than 
 bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
CHECK failed: (buffer_size) >= (0): 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/deps/protobuf/src/google/protobuf/stubs/common.cc
This program requires version 
 of the Protocol Buffer runtime library, but the installed version is 
.  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
This program was compiled against version 
 of the Protocol Buffer runtime library, which is not compatible with the installed version (
).  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
INFO
WARNING
ERROR
FATAL
[libprotobuf %s %s:%d] %s
%lld
%llu
pthread_mutex_lock: 
pthread_mutex_unlock: 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/deps/protobuf/src/google/protobuf/wire_format_lite.cc
CHECK failed: (value.size()) <= (kint32max): 
parsing
serializing
 '%s'
String field
 contains invalid 
UTF-8 data when 
 a protocol 
buffer. Use the 'bytes' type if you intend to send raw 
bytes. 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/deps/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc
CHECK failed: (last_returned_size_) > (0): 
BackUp() can only be called after a successful Next().
CHECK failed: (count) <= (last_returned_size_): 
CHECK failed: (count) >= (0): 
CHECK failed: target_ != NULL: 
Cannot allocate buffer larger than kint32max for 
StringOutputStream.
CHECK failed: (count) <= (target_->size()): 
'callback' must not be NULL
CHECK failed: backup_bytes_ == 0 && buffer_.get() != NULL: 
 BackUp() can only be called after Next().
CHECK failed: (count) <= (buffer_used_): 
 Can't back up over more bytes than were returned by the last call to Next().
 Parameter to BackUp() can't be negative.
CHECK failed: (backup_bytes_) == (0): 
CHECK failed: (buffer_used_) == (buffer_size_): 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/deps/protobuf/src/google/protobuf/stubs/logging.h
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/deps/protobuf/src/google/protobuf/stubs/stringprintf.cc
CHECK failed: (v.size()) <= (kStringPrintfVectorMaxArgs): 
StringPrintfVector currently only supports up to 
 arguments. 
Feel free to add support for more if you need it.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/deps/protobuf/src/google/protobuf/io/zero_copy_stream.cc
This ZeroCopyOutputStream doesn't support aliasing. Reaching here usually means a ZeroCopyOutputStream implementation bug.
AuthenticAMD
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/deps/protobuf/src/google/protobuf/io/zero_copy_stream_impl.cc
close() failed: 
CHECK failed: !is_closed_: 
Can't BackUp() after failed Next().
(cannot determine missing fields for lite message)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/deps/protobuf/src/google/protobuf/message_lite.cc
CHECK failed: !coded_out.HadError(): 
Exceeded maximum protobuf size of 2GB: 
parse
Can't 
 message of type "
" because it is missing required fields: 
CHECK failed: (byte_size_before_serialization) == (byte_size_after_serialization): 
 was modified concurrently during serialization.
CHECK failed: (bytes_produced_by_serialization) == (byte_size_before_serialization): 
Byte size calculation and serialization were inconsistent.  This may indicate a bug in protocol buffers or it may be caused by concurrent modification of 
This shouldn't be called if all the sizes are equal.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/mlmodel/build/format/CategoricalMapping.pb.cc
CoreML.Specification.CategoricalMapping.strValue
CoreML.Specification.CategoricalMapping
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/mlmodel/build/format/Model.pb.cc
CoreML.Specification.Pipeline
CoreML.Specification.PipelineClassifier
CoreML.Specification.PipelineRegressor
CoreML.Specification.FeatureDescription.name
CoreML.Specification.FeatureDescription.shortDescription
CoreML.Specification.FeatureDescription
CoreML.Specification.Metadata.shortDescription
CoreML.Specification.Metadata.versionString
CoreML.Specification.Metadata.author
CoreML.Specification.Metadata.license
CoreML.Specification.Metadata.UserDefinedEntry.key
CoreML.Specification.Metadata.UserDefinedEntry.value
CoreML.Specification.Metadata
CoreML.Specification.ModelDescription.predictedFeatureName
CoreML.Specification.ModelDescription.predictedProbabilitiesName
CoreML.Specification.ModelDescription
CoreML.Specification.Model
Model specification version field missing or corrupt.
The .mlmodel supplied is of version 
, intended for a newer version of Xcode. This version of Xcode supports model version 
 or earlier.
Model did not specify a valid model-parameter type.
unable to open file for read
unable to open file for write
Spec version: 
Model type: 
Interface:
Inputs:
Outputs:
Predicted feature name: 
Predicted probability name: 
Dimension size must be greater tha zero.
Int64 class labels must be supplied for SVM classifier.
coefficient array must be size numberOfClasses - 1 (
). Instead it is size 
Must specify sparse or dense support vectors
numberOfSupportVectoresPerClass array must be size numberOfClasses 
 instead it is size 
sum of numberOfSupportVectorsPerClass 
 must sum to total number of support vectors 
Incorrect number of coefficients: There should be 
 not 
probA and probB must be same size
Expected length of probA is number of class pairs: 
The number of coefficients must match the number of support vectors.
Gamma must be greater than or equal to zero
Degree must be greater than or equal to zero
You must specify a supported kernel type
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/mlmodel/build/format/Identity.pb.cc
CoreML.Specification.Identity
Feature description must have a non-empty name.
' has an invalid or unspecified dataType. It must be specified as DOUBLE, FLOAT32 or INT32
Models must have one or more inputs.
Models must have one or more outputs.
Specification is missing regressor predictedFeatureName.
At least one feature for a neural network must NOT be optional.
Features cannot be optional to this type of model.
Outputs cannot be optional.
Expected feature '
' to the model is not present in the model description.
Unsupported type "
" for feature "
". Should be one of: 
MLFeatureTypeType_int64Type
MLFeatureTypeType_doubleType
MLFeatureTypeType_stringType
MLFeatureTypeType_imageType
MLFeatureTypeType_multiArrayType
MLFeatureTypeType_dictionaryType
For this neural network classifier, the probabilities are obtained from the layer '
' which was not found in the network.
Output layer '
' is not produced by any layer of the neural network.
Neural Network outputs must be either an image or MLMultiArray.
Interface specifies output '
' which is not produced by any layer in the neural network.
Neural networks require at least one input.
Neural networks produce at least one output.
Neural networks require at least one non-optional input.
Neural Networks require inputs to be images or MLMultiArray.
__input
Unsupported color space for the image inputs (should be RGB, BGR, or Grayscale).
Input MLMultiArray to neural networks must have dimension 1 (vector) or 3 (image-like arrays).
Layer '
' consumes a layer named '
' which is not present in this network.
' produces a layer named '
' which is also an output produced by the layer '
Padding type for convolution layer '
' is not set.
'  has invalid weights/bias fields. Field value types should match and should either be half or full precision.
' has weight matrix of size 
 to encode a 
 convolution.
' has a bias vector of size 
 but should be 
' of type 
 has 
 inputs but expects exactly 
 inputs but expects at least 
 inputs but expects at most 
 outputs but expects exactly 
 outputs but expects at least 
 outputs but expects at most 
Inner product layer '
' has invalid weights/bias fields. Field value types should match and should either be half or full precision.
' has incorrect bias vector size 
 (expected 
Bias vector being ignored since "hasBias" flag not set.
 has incorrect weight matrix size 
 inner product.
Batchnorm layer '
' parameters have values for both full and half precision. Parameters should either be specified in half or full precision, mixed parameters are not supported.
' has incorrect gamma size 
' has incorrect beta size 
' has incorrect mean size 
' has incorrect variance size 
Nonlinearity type 
 has inconsistent weight parameter types.
 is not supported in this version of CoreML.
MLActivationParamsNonlinearityType_linear
MLActivationParamsNonlinearityType_ReLU
MLActivationParamsNonlinearityType_leakyReLU
MLActivationParamsNonlinearityType_thresholdedReLU
MLActivationParamsNonlinearityType_PReLU
MLActivationParamsNonlinearityType_tanh
MLActivationParamsNonlinearityType_scaledTanh
MLActivationParamsNonlinearityType_sigmoid
MLActivationParamsNonlinearityType_sigmoidHard
MLActivationParamsNonlinearityType_ELU
MLActivationParamsNonlinearityType_softsign
MLActivationParamsNonlinearityType_softplus
MLActivationParamsNonlinearityType_parametricSoftplus
Padding type for the pooling layer '
Padding layer 
 specifies 
 padding amounts but it must either specify 2 (for x and y axes), or 0 for the default values.
 padding type is not set.
Parameter 'K' for the LRN layer '
' must be positive.
Scaling factor in the upsampling layer '
' must be a vector of size 2 (i.e height, width) but is a vector of size 
Bias product layer '
' has both full precision and half precision weights and/or bias fields populated
Bias layer '
' is a vector of length 
 but should be a vector of length 
' cannot be 
 dimensional. Must be 1D, 2D, or 3D.
Reshape layer '
' target shape must be 3D or 4D.
Permute layer '
' must have 4D axis parameters.
Load constant layer '
' has both full precision and half precision weight fields populated
' must be a 3D constant.
' encodes a data buffer of length 
Scale layer '
' has invalid scale/bias fields. Field value types should match and should either be half or full precision.
The bias vector for scale layer '
' is 
 dimensional but should be either 1D or 3D.
' encodes a bias vector of length 
The shape vector for the scale layer '
 dimensional but should be 1D or 3D.
' encodes a scale vector of size 
Simple recurrent layer '
' has invalid weightMatrix/recusionMatrix/Bias fields. Field value types should match and should either be half or full precision.
' expects an input matrix of size 
 but provides 
 parameters.
Simple recurrent layer' 
' expects a recursion matrix of size 
Recurrent non-linearity type 
GRU layer '
' has invalid weight matrix fields. Field value types should match and should be either half or full precision
' has invalid recursion matrix fields. Field value types should match and should be either half or full precision
' has invalid bias vector fields. Field value types should match and should be either half or full precision
' has inconsistent weight/recursion/bias fields. Field value types should match and should be either half or full precision
' expects an update gate weight matrix of size 
' expects a reset gate matrix of size 
' expects an output gate matrix of size 
' expects an update gate recursion matrix of size 
' expects a reset gate recursion matrix of size 
' expects an output gate recursion matrix of size 
' has an update bias vector of size 
 but expects size 
' has a reset bias vector of size 
' has an output bias vector of size 
Unidirectional LSTM layer:
 has invalid output size = 
 has invalid input size = 
 must provide 3 activations
 weight matrix size is incorrect
 recursion matrix size is incorrect
 bias vector size is incorrect
 peephole vector size is incorrect
LSTM weight parameters have inconsistent field value types. Types should match and should be either half or full precision
LSTM weight params has invalid weight matrix fields. Field value types should match and should be either half or full precision
LSTM weight params has invalid recursion matrix fields. Field value types should match and should be either half or full precision
LSTM weight params has invalid bias vector fields. Field value types should match and should be either half or full precision
LSTM weight params has invalid peephole vector fields. Field value types should match and should be either half or full precision
Bidirectional LSTM layer:
 forward lstm must provide 3 activations
 backward lstm must provide 3 activations
 forward lstm weight matrix size is incorrect
 forward lstm recursion matrix size is incorrect
 backward lstm weight matrix size is incorrect
 backward lstm recursion matrix size is incorrect
 forward lstm bias vector size is incorrect
 backward lstm bias vector size is incorrect
 forward lstm peephole vector size is incorrect
 backward lstm peephole vector size is incorrect
cropAmounts parameter for the crop layer '
' is of length 
 but requires exactly two crop constraints (for X,Y axes).
Offset parameter for the crop layer '
 but requires exactly two offsets (for X,Y axes).
Embedding layer '
' requires a weight matrix of size 
 but has 
' has 
 bias vector parameters but should be 
Block size for layer '
' must be > 1.
Stride length for the slice layer '
Slice layer 
 has an end index before the start index.
Custom layer 
 has an empty 'className' field. This field is required in order for Core ML to link to the implementation for this custom class.
 has a weights parameter with multiple types filled in.  The WeightParams message should be treated as a oneof.
Unsupported layer type (
) for layer '
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/mlmodel/build/format/OneHotEncoder.pb.cc
CoreML.Specification.OneHotEncoder
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/mlmodel/build/format/Scaler.pb.cc
CoreML.Specification.Scaler
Weights and offsets must be the same size.
All weight coefficients must be the same size.
Invalid post evaluation transform
Invalid class encoding
The number of DoubleArrays in weights must be greater than zero
The number of DoubleArrays in weights must match number of offsets
With ReferenceClass encoding the number of DoubleArrays in weights must be one less than number of classes
When using OneVsRest encoding for only two classes, the number of DoubleArrays in weights must be one
With OneVsRest encoding the number of DoubleArrays in weights must equal the number of classes
Probit post evaluation transform is only supported for binary classification
Weight DoubleArrays must have nonzero length
Weight DoubleArrays must have the same length
Classifier declared to have Int64 class labels must provide labels.
Classifier declared with Int64 class labels must provide exclusively Int64 class labels.
Classifier declared to have String class labels must provide labels.
Classifier declared with String class labels must provide exclusively String class labels.
Classifier models must provide class labels.
Specification is missing classifier predictedFeatureName
Type of input feature does not match the output type feature.
Only 1 dimensional arrays input features are supported by the imputer.
Shape of output array does not match shape of input array.
Shape of imputed array value does not match shape of input array.
Imputer parameter must be set.
Type of input feature "
" is not compatible with given imputed value type.
Type of given replace value not compatible with input feature type.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/mlmodel/build/format/GLMClassifier.pb.cc
CoreML.Specification.GLMClassifier.DoubleArray
CoreML.Specification.GLMClassifier
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/mlmodel/build/format/Imputer.pb.cc
CoreML.Specification.Imputer.imputedStringValue
CoreML.Specification.Imputer.replaceStringValue
CoreML.Specification.Imputer
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/mlmodel/build/format/SVM.pb.cc
CoreML.Specification.LinearKernel
CoreML.Specification.RBFKernel
CoreML.Specification.PolyKernel
CoreML.Specification.SigmoidKernel
CoreML.Specification.Kernel
CoreML.Specification.SparseNode
CoreML.Specification.SparseVector
CoreML.Specification.SparseSupportVectors
CoreML.Specification.DenseVector
CoreML.Specification.DenseSupportVectors
CoreML.Specification.Coefficients
CoreML.Specification.SupportVectorRegressor
CoreML.Specification.SupportVectorClassifier
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/mlmodel/build/format/Normalizer.pb.cc
CoreML.Specification.Normalizer
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/mlmodel/build/format/DataStructures.pb.cc
CoreML.Specification.StringToInt64Map.MapEntry.key
CoreML.Specification.StringToInt64Map
CoreML.Specification.Int64ToStringMap.MapEntry.value
CoreML.Specification.Int64ToStringMap
CoreML.Specification.StringToDoubleMap.MapEntry.key
CoreML.Specification.StringToDoubleMap
CoreML.Specification.Int64ToDoubleMap
CoreML.Specification.StringVector.vector
CoreML.Specification.StringVector
CoreML.Specification.Int64Vector
CoreML.Specification.DoubleVector
Pipeline must contain one or more models.
Pipeline: Input '
' of model '
' not present in pipeline input or previous model.
' does not match the type previously specified by the pipeline input or the output of a previous model.
Pipeline output '
' not present in pipeline input or a contained model.
Type of pipeline output '
' does not match type produced in pipeline input.
Model is not a tree ensemble.
Given output dimension equals 0.
Tree Node with TreeID=
and NodeID=
 duplicated in specification.
False child and parent have same ID (TreeID=
, NodeID=
In TreeID=
, false child of NodeID=
 is already the child of node NodeID=
True child and parent have same ID (TreeID=
, true child of NodeID=
Tree TreeID=
 has multiple root nodes: 
NodeID=
Internal error: null child node; likely specification error.
Node detected that are not connected to any single root node. Note: 
(TreeID=
Dimension of default value array (
) does not match specified output dimension (
Specified output dimension (
) does not match the given number of classes (
Error(s) in tree structure: 
FATAL: 
  FATAL: maximum number of errors reached; aborting processing.
Errors encountered during processing tree model:
Branch mode hit bad value -- this is confusing; error in validator?
Leaf Node (TreeID=
) has no evaluation value(s) specified.
) specifies evaluation value applied to dimension 
; which is out of range. Dimension must be less than 
) specifies multipule evaluation values applied to dimension 
 and NodeID=
 referenced but not declared in specification.
Model not an array feature extractor.
Exactly one input array column must be specified.
If output type is Double in interface, exactly one extraction index must be specified.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/deps/protobuf/src/google/protobuf/map.h
CHECK failed: it != end(): 
OneHotEncoder parameter incorrect type
Feature descriptions exceeded 
NormalizerValidator normLx invalid
Input type Int64 must output to Int64 or Double.
Only 1 dimensional arrays input features are supported by the scaler.
For input type array, specified shift values must be empty, a scalar, or a vector of the matching length.
For input type array, specified scale values must be empty, a scalar, or a vector of the matching length.
For a scalar imput type, specified shift value must be empty or a scalar.
For input type array, specified scale values must be empty or a scalar.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/mlmodel/build/format/FeatureVectorizer.pb.cc
CoreML.Specification.FeatureVectorizer.InputColumn.inputColumn
CoreML.Specification.FeatureVectorizer.InputColumn
CoreML.Specification.FeatureVectorizer
DictVectorizerValidator parameter not set
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/mlmodel/build/format/TreeEnsemble.pb.cc
CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo
CoreML.Specification.TreeEnsembleParameters.TreeNode
CoreML.Specification.TreeEnsembleParameters
CoreML.Specification.TreeEnsembleClassifier
CoreML.Specification.TreeEnsembleRegressor
not an error
Type mismatch for "
". Expected 
found 
Feature type invariant violation. Expected feature type 
 to be one of: 
validator error: 
Invalid dictionary key type. Expected one of: {int64, string}.
isOptional
colorspace
isColor
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/mlmodel/build/format/DictVectorizer.pb.cc
CoreML.Specification.DictVectorizer
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/mlmodel/build/format/NeuralNetwork.pb.cc
CoreML.Specification.NeuralNetwork
CoreML.Specification.NeuralNetworkImageScaler
CoreML.Specification.NeuralNetworkMeanImage
CoreML.Specification.NeuralNetworkPreprocessing.featureName
CoreML.Specification.NeuralNetworkPreprocessing
CoreML.Specification.ActivationReLU
CoreML.Specification.ActivationLeakyReLU
CoreML.Specification.ActivationTanh
CoreML.Specification.ActivationScaledTanh
CoreML.Specification.ActivationSigmoid
CoreML.Specification.ActivationLinear
CoreML.Specification.ActivationSigmoidHard
CoreML.Specification.ActivationPReLU
CoreML.Specification.ActivationELU
CoreML.Specification.ActivationThresholdedReLU
CoreML.Specification.ActivationSoftsign
CoreML.Specification.ActivationSoftplus
CoreML.Specification.ActivationParametricSoftplus
CoreML.Specification.ActivationParams
CoreML.Specification.NeuralNetworkLayer.name
CoreML.Specification.NeuralNetworkLayer.input
CoreML.Specification.NeuralNetworkLayer.output
CoreML.Specification.NeuralNetworkLayer
CoreML.Specification.BorderAmounts.EdgeSizes
CoreML.Specification.BorderAmounts
CoreML.Specification.ValidPadding
CoreML.Specification.SamePadding
CoreML.Specification.WeightParams
CoreML.Specification.ConvolutionLayerParams
CoreML.Specification.InnerProductLayerParams
CoreML.Specification.EmbeddingLayerParams
CoreML.Specification.BatchnormLayerParams
CoreML.Specification.PoolingLayerParams.ValidCompletePadding
CoreML.Specification.PoolingLayerParams
CoreML.Specification.PaddingLayerParams.PaddingConstant
CoreML.Specification.PaddingLayerParams.PaddingReflection
CoreML.Specification.PaddingLayerParams.PaddingReplication
CoreML.Specification.PaddingLayerParams
CoreML.Specification.ConcatLayerParams
CoreML.Specification.LRNLayerParams
CoreML.Specification.SoftmaxLayerParams
CoreML.Specification.SplitLayerParams
CoreML.Specification.AddLayerParams
CoreML.Specification.MultiplyLayerParams
CoreML.Specification.UnaryFunctionLayerParams
CoreML.Specification.UpsampleLayerParams
CoreML.Specification.BiasLayerParams
CoreML.Specification.ScaleLayerParams
CoreML.Specification.LoadConstantLayerParams
CoreML.Specification.L2NormalizeLayerParams
CoreML.Specification.FlattenLayerParams
CoreML.Specification.ReshapeLayerParams
CoreML.Specification.PermuteLayerParams
CoreML.Specification.ReorganizeDataLayerParams
CoreML.Specification.SliceLayerParams
CoreML.Specification.ReduceLayerParams
CoreML.Specification.CropLayerParams
CoreML.Specification.AverageLayerParams
CoreML.Specification.MaxLayerParams
CoreML.Specification.MinLayerParams
CoreML.Specification.DotProductLayerParams
CoreML.Specification.MeanVarianceNormalizeLayerParams
CoreML.Specification.SequenceRepeatLayerParams
CoreML.Specification.SimpleRecurrentLayerParams
CoreML.Specification.GRULayerParams
CoreML.Specification.LSTMParams
CoreML.Specification.LSTMWeightParams
CoreML.Specification.UniDirectionalLSTMLayerParams
CoreML.Specification.BiDirectionalLSTMLayerParams
CoreML.Specification.CustomLayerParams.CustomLayerParamValue.stringValue
CoreML.Specification.CustomLayerParams.CustomLayerParamValue
CoreML.Specification.CustomLayerParams.className
CoreML.Specification.CustomLayerParams.ParametersEntry.key
CoreML.Specification.CustomLayerParams.description
CoreML.Specification.CustomLayerParams
CoreML.Specification.NeuralNetworkClassifier.labelProbabilityLayerName
CoreML.Specification.NeuralNetworkClassifier
CoreML.Specification.NeuralNetworkRegressor
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/deps/protobuf/src/google/protobuf/map_entry_lite.h
CHECK failed: default_instance_ != NULL: 
/dev/urandom
ValueOnUnknown set to string value while mapping produces int64.
ValueOnUnknown set to Int64 value while mapping produces string.
Mapping not set.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/mlmodel/build/format/ArrayFeatureExtractor.pb.cc
CoreML.Specification.ArrayFeatureExtractor
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/mlmodel/build/format/GLMRegressor.pb.cc
CoreML.Specification.GLMRegressor.DoubleArray
CoreML.Specification.GLMRegressor
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-158.30.20.0.1/coremltools/mlmodel/build/format/FeatureTypes.pb.cc
CoreML.Specification.Int64FeatureType
CoreML.Specification.DoubleFeatureType
CoreML.Specification.StringFeatureType
CoreML.Specification.ImageFeatureType
CoreML.Specification.ArrayFeatureType
CoreML.Specification.DictionaryFeatureType
CoreML.Specification.FeatureType
Invalid enum
invalid value
_reverse
W_x_8bit
W_h_8bit
W_p_8bit
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-66.12.1/EspressoCore/RNNModule.mm
Invalid cell mode 
Invalid value 
Invalid state: number of output blobs
Mismatching size w:
Mismatching size h:
Mismatching size n:
Mismatching size seq:
Unsupported number of inputs
Mismatched sequence lengths in sequence concat.
nonlinearity_type
nonlinearity_alpha
nonlinearity_beta
internal_nonlinearity_type
internal_nonlinearity_alpha
internal_nonlinearity_beta
input_size
lstm_forget_bias
lstm_has_peepholes
encoder_output_sequence
encoder_bidirectional_mode
internal_nonlinearity_second_type
internal_nonlinearity_second_alpha
internal_nonlinearity_second_beta
nonlinearity_bidir_type
nonlinearity_bidir_alpha
nonlinearity_bidir_beta
internal_nonlinearity_bidir_type
internal_nonlinearity_bidir_alpha
internal_nonlinearity_bidir_beta
internal_nonlinearity_second_bidir_type
internal_nonlinearity_second_bidir_alpha
internal_nonlinearity_second_bidir_beta
bias_vector_flag
forget_bias
cell_clip_threshold
coupled_input_forget
max_batch_size
simple_concat
n_repetitions
fuse_biases error
fuse_batchnorm error
fold_batchnorm error
{vector<std::__1::shared_ptr<Espresso::graph_optimization_rule>, std::__1::allocator<std::__1::shared_ptr<Espresso::graph_optimization_rule> > >=^{shared_ptr<Espresso::graph_optimization_rule>}^{shared_ptr<Espresso::graph_optimization_rule>}{__compressed_pair<std::__1::shared_ptr<Espresso::graph_optimization_rule> *, std::__1::allocator<std::__1::shared_ptr<Espresso::graph_optimization_rule> > >=^{shared_ptr<Espresso::graph_optimization_rule>}}}24@?0{shared_ptr<Espresso::network_optimization_graph>=^{network_optimization_graph}^{__shared_weak_count}}8
B16@?0^{generic_elementwise_kernel=^^?{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}iii{map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > > > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > >, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{elementwise_params=iifffiiIIII}}8
_pre_act
_act
_ctx
__tmp__identity__
__fix__underflow___
[Espresso] uninitialized network
Null blob: 
[Espresso] wrong number of images in image batch
[Espresso] wrong image size
[Espresso] emtpy image
[Espresso] wrong number of input channels in image
[Espresso] unexpected null
[Espresso] blob not found:
[Espresso] wrong image size 
8b5d42c6d
Conv weights not set 
W_8bit
W_uint8
W_int8
W_int16
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-66.12.1/EspressoCore/KernelsCPU.mm
Qscale
Qbias
Qrow_sums
tree_W
tree_b
tree_map_to_index
tree_cluster_end
Unsupported activation fn with quantized weights and lookup
Leaky relu not supported with quant weights
BNNS Error
inconsistent state!
missing param: wQscale
missing param: wQbias
missing param: wQrow_sums
inconsistent shapes
missing param: weights_8bit
missing param: weights_int16
FC weights not set
Quantization not supported 
Blob of wrong type (bottom)
Blob of wrong type (top)
Invalid dimensions [
], [
Blob of wrong type
MVA_L2 not supported
BN: Invalid K dimension 
batchnorm_coefs not set
PReLU params not set
Softplus weights not set
Incompatible operands CP x=
Reshape: invalid blob configuration
Flatten: invalid blob configuration
Reshape: invalid mode 
Flatten: invalid mode 
weights not set
not supported
_ctx_tx_in_
_ctx_tx_out_
_ctx_tx_
unknown
float8
float16
float32
float64
double8
double16
double32
double64
byte
%d) hash: %lu, type: %s, min: %g, max: %g, number of values: %zu
BinSerializer error %d:%s in %s @ %s:%d
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_getInfoStr(const char *, char **)
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-66.12.1/Espresso/Source/BinSerializer/Custom_BinSerializer_Core.cpp
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_fgetBlobInfo(FILE *, const char *, uint64_t *, uint16_t *, double *, double *, uint64_t *)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_getBlobInfo(const char *, const char *, uint64_t *, uint16_t *, double *, double *, uint64_t *)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_freadInBytes(FILE *, const char *, bool, void **, size_t *)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_readInBytes(const char *, const char *, bool, void **, size_t *)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_freadInFloat(FILE *, const char *, bool, float **, size_t *)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_readInFloat(const char *, const char *, bool, float **, size_t *)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_writeBytes(const char *, const char *, const void *, size_t)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_writeFloatToFloat32(const char *, const char *, const float *, size_t)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_writeFloatToFloat16(const char *, const char *, const float *, size_t)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_writeFloatToFloat8(const char *, const char *, const float *, size_t)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_fwrite(FILE *, const char *, Espresso::BinSerializer::BinSerializer_dataType, const void *, size_t)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_fwrite_float(FILE *, const char *, Espresso::BinSerializer::BinSerializer_dataType, const float *, size_t)
 [Exception from Layer: 
Invalid bottom shape for layer: 
Invalid top shape for layer: 
WARN: Not tested %s %d
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-66.12.1/EspressoCore/Net.mm
%.3f 
 %.3f 
 %.3f %s
async
W_u8
W8_minmax
Shape mismatch: n 
Should not be called
Unexpected null blobs
axpby
Incompatible operands
Invalid dst shape
Invalid argument
W_embedding_in
b_embedding_in
W_embedding_out
b_embedding_out
W_embedding_in_write
b_embedding_in_write
W_embedding_out_tree
b_embedding_out_tree
label_embedding_out_tree
Unexpected input batch_n 
Unexpected input size w=
input_embedding_size must be > 0 in seq2seq mode
Not impl
argmax
Not implemented
x_p_tmp
Invalid block_size 
Shape error b.k=
Zero shape error
Invalid axis 
Invalid start 
Invalid slice end=
 start=
 dim=
 dim_orig=
generic_load_constant_kernel must have a blob set
generic_load_constant_kernel wrong size
Invalid configuration
Invalid configuration dst=
 src=
not initialized
fused_relu
fused_tanh
has_biases
has_8bit_weights
do_ncc
n_parallel
start_channel_bottom
start_channel_top
total_channel_top
pad_l
pad_r
pad_t
pad_b
pad_value
pad_fill_mode
leaky_relu_alpha
dilation_x
dilation_y
low_precision_accumulation
hint_use_winograd_win_size
pad_pad_mode
no_padding
total_pad_w
total_pad_h
stride
avg_or_max
size_x
size_y
average_count_exclude_padding
top_shape_style
force_num_channels
total_channel_bottom
compute_argmax_mask
is_global
padding
padding_x
padding_y
use_perceptio_version
strict_zero_padding
alpha
local_size
is_plain_sigmoid
has_prelu
is_lookup
add_to_output
use_raw_buffers
quantization_mode
tanh_alpha
tanh_beta
argmax_tree_n_clusters
argmax_tree_n_clusters_keep
force_num_channels_of_first_blob
n_outputs
legacy_cut_mode
scaling_factor_x
scaling_factor_y
scaling_factor
operation
is_relu
is_tanh
leaky_alpha
start_fuse_z_0
start_fuse_z_1
start_fuse_z_2
start_fuse_z_3
normalization_mode
naive_backward
training_eps
training_momentum
training_instancenorm
training_subsampling
reseed_each_launch
dst_platform_id
src_platform_id
src_compute_path
dst_compute_path
dst_w
dst_h
dst_k
dst_n
dst_seq
center_mean
is_network_bgr
bias_r
bias_g
bias_b
bias_a
qspec.ratio_to_float_model
qspec.is_signed
rnn_nonlinearity
hidden_size
seq2seq
input_embedding_size
output_embedding_size
input_read_onehot
input_read_symbol
input_read_symbol_onehot
input_max_len
output_max_len
input_stop_symbol
output_start_symbol
output_stop_symbol
beamsearch_width
output_embedding_tree
axis_mode
pad.l
pad.r
pad.t
pad.b
pad.value
pad.pad_mode
pad.fill_mode
dst_offset_x
dst_offset_y
src_crop_w
src_crop_h
src_offset_x
src_offset_y
axis_w
axis_h
axis_k
axis_n
block_size
reverse
start
Binserializer error 
Align error
Quantizing FC %s (%d x %d = %.2fk)
ip: %s
FC quantize ic=%d (%e %e) 
 PSNR=%.2f (s %e b %e)
mkdir -p 
dump: %s
Min PSNR=%.2f
invalid state
conv: %s
compressing %s (%ld)
channels_per_chunk=%d
maxerr=%e mM=%e %e cmM=%e %e
Channel for chunk %d/%d: %d - %d. C=%d %e - %e
setting ranges %d
[Quant] PSNR %s (%s): %.3f (min=%.3f)
Total size of AUX lut tables/ranges %.4f MB
early exit iter=%d
network not prepared for reshape_networks
[ESPRESSO_MEMORY_VERBOSE] %s %s -> %d
blob not found in gc
Blob with zero size found: 
[ESPRESSO_MEMORY_VERBOSE] max size for color %d %.3fMB (%d %d %d %d)
Logic error in NetReshape
[ESPRESSO_MEMORY_VERBOSE] max color = %d tot_est_size =%.3f
result/add/json/
commitid
branch
project
Espresso
executable
compute_path
benchmark
environment
result_time
result_nerr
result_psnr
result_aerr
result_dcos10
result_mem
result_ioaccel_mem
result_power
result_top1
result_top5
aux0
aux1
aux2
aux3
[report_benchmark_result] t=%.2fms psnr=%.2f %s@%s
POST
application/json; charset=utf-8
Content-Type
[report_benchmark_result] %s status=%@ err=%@
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
http://polluce.apple.com:18888/
ESPRESSO_PERF_SERVER
hw.model
kern.osversion
machdep.cpu.brand_string
DECAF
Memory allocation error: 
com.apple.espresso.memdbgq
[mem] tot=%.3fM max=%.3f
Conv weights not set
Weights not set (b) qr=
 qw=
BNNS error
bnns failure
Unsupported version 
Unexpected null pointer
Error loading file: 
mmap error: 
Can't open for writing: 
com.apple.Espresso.registerBrickLock
Unregistered brick: '
Brick ObjC class: '
' not found
Don't know what to do.
class_name
parameters_json
width
Ti,V_width
height
Ti,V_height
channels
Ti,V_channels
batch
Ti,V_batch
sequence
Ti,V_sequence
T@"EspressoBrickTensorShape",&,V_shape
rawPointer
T^f,V_rawPointer
texture
T@"<MTLTexture>",&,V_texture
Inconsistent state
not implemented
Undefined weights 
Unexpected not-implemented function 
{shared_ptr<Espresso::generic_factory_t>=^{generic_factory_t}^{__shared_weak_count}}8@?0
layer_io_base
com.apple.espresso.generic_factory_lock
Unexpected size s=
/blob=
nonlinearity
prediction_smoothing
dropout
BNNS
!!! you should not read this !!!
the hash is already used in the file
memory allocation error
I/O error
invalid blob ID
invalid data type
invalid parameter
undexpected null pointer
internal error
not implemented error
__copy_from_raw not defined for platform 
[retry]: %s err=%s
Conv fp16 weights not set
shuffled weights not supported
Elwise Op not implemented
{shared_ptr<Espresso::factory_object>=^{factory_object}^{__shared_weak_count}}8@?0
Deserialization tag "
" not found
Error allocating memory for deserialization
Error reading deserialization input
Espresso compiled without METAL engine.
Espresso compiled without CUDNN engine.
Espresso compiled without MPS engine.
Espresso compiled without HX engine.
Espresso compiled without HX CVA engine.
Invalid platform enum 
Low priority mode not supported on this platform
Null path
Compute path 
 not supported.
Cannot load network '
Cannot load network.
Inconsistent phase of espresso_plan: 
Invalid network_index.
Null network found.
Blob '
' not found.
network_version
Empty espresso_plan.
[espresso] Dumping to %s
Cannot write to path 
v16@?0r^{shared_ptr<Espresso::abstract_batch>=^{abstract_batch}^{__shared_weak_count}}8
Invalid network index
No outputs declared
No inputs declared
Input not declared
Output not declared
Output not declared 
Blob not found.
Invalid X-dimension 
Invalid Y-dimension 
Invalid K-dimension 
Invalid N-dimension 
Blob not found. 
Null image buffer
Null image buffer data
Blob null. 
Not implemented.
Only one of cvpixelbuffer and tex must be set
Buffer with null data in blob 
CVPixelBuffer input not supported on pre-TibO
async submit not available in decaf mode
Invalid network
first
n_runs
[espresso_plan::perfbench] avg runtime (ms) = %.2f
Missing input shape: 
espresso_plan::save not implemented.
espresso_plan::load not implemented.
ESPRESSO_STATUS_SUCCESS
ESPRESSO_STATUS_ERROR_GENERIC
ESPRESSO_STATUS_ERROR_IO
ESPRESSO_STATUS_ERROR_PARSE
ESPRESSO_STATUS_ERROR_MEMORY
ESPRESSO_STATUS_ERROR_INVALID_STATE
ESPRESSO_STATUS_ERROR_INVALID_ARGUMENT
ESPRESSO_STATUS_ERROR_INVALID_BLOB_SHAPE
ESPRESSO_STATUS_ERROR_INVALID_BLOB_NAME
ESPRESSO_STATUS_ERROR_NOT_IMPLEMENTED
ESPRESSO_STATUS_ERROR_COMPUTATION_KILLED
Null o_network
mode_flags
format_flags ESPRESSO_BIND_FORMAT_NCHW_INTERNAL_STORAGE
ESPRESSO_BIND_PTR_USE_EXTERNAL with ESPRESSO_BIND_FORMAT_NCHW_F32
Wrong argument passed to espresso_plan_get_last_error.
catvsdog.net
image
It's a cat!
kernel not found '
' on platform 
{shared_ptr<Espresso::base_kernel>=^{base_kernel}^{__shared_weak_count}}32@?0r^{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}8^v16r^i24
no_op
inner_product_quantized
convolution_grad
convolution_weights_grad
pool_grad
concat_grad
softmax_loss_grad
activation_grad
bias_grad
batchnorm_grad
l2_normalize_grad
inner_product_grad
inner_product_weights_grad
elementwise_grad
dropout_grad
GRU Not implemented
[matrix_vector_mult_batched] Mismatch 
GRU not implemented
Missing operand
Axis not supported
Only reduce on single axis is supported
Invalid axis
com.apple.espresso.factorylock
Inconsistent status
_conv_group
inception_
_fused
not implemented!
Not supported
Invalid kernel: use fold_batchnorm first
fold_transform_params: Only available for VALID convolutions
[Espresso::fold_transform_params] %f %f %f %f %f
blob shape not found: 
Fold concat: layer not supported! 
__tx__smooth
_cpu
Unexpected type for 
[sequential_builder::add_kernel] %s %s
[sequential_builder::add_network] %s -> %s
.net
.weights
.shape
.bin
.bin:
properties
format_version
storage
Can't find blob id 
Error reading blob id 
transform_params
numerical_parameters
layers
hint_fallback_from_metal
deconv_out_height
deconv_out_width
Unable to find implementation of class
meta_convolution
blob_shuffled_weights
blob_weights
blob_biases
has_batch_norm
quantization_lut_weights_blob
quantization_lut_blob
quantization_ranges_blob
q_u8_range
blob_weights_f16
W_f16
Unsupported weights format
blob_batchnorm_params
constant_blob
weights
context_transfer
bottom
layer_shapes
Error reading layer shapes
layer_io not found for '
Invalid blob_storage_write_version: 
not available
c24@?0@"NSURL"8@"NSError"16
[all_files] ERROR URL %@ %@
Cannot find key: 
 idx=
generic_serdes_object
kCFAllocatorNull
CFDataCreateWithBytesNoCopy
CFPropertyListCreateWithData
CFPropertyListCreateFromXMLData
CFStringCreateWithCStringNoCopy
CFDictionaryGetValue
CFGetTypeID
CFStringGetTypeID
CFStringGetCString
CFRelease
/System/Library/CoreServices/SystemVersion.plist
ProductVersion
%d.%d.%d
ImageUtils
MLDictionaryConstraint
MLFeatureValueConstraint
NSCopying
MLPredictionOptions
MLInternalSettings
MLDictionaryFeatureProvider
MLFeatureProvider
NSFastEnumeration
FromGenericFeatureProvider
MLCompiledModelLoader
MLModelSpecificationLoader
MLLoader
MLCompilerOptions
MLCompilerResult
MLSpecificationCompiler
MLCompiler
MLVersionInfo
ModelSpecification
MLClassifier
MLModeling
MLRegressor
MLModelAsset
MLNeuralNetworkSpecification
MLNeuralNetworkEngine
MLNeuralNetwork
Utilities
MLPipelineClassifier
MLMultiArrayUtils
MLMultiArray
Attributes
PrivateConstruction
CopyingAndVectorization
ConvenientConstruction
Filling
MLMultiArrayAsNSArrayWrapper
MLTreeEnsembleClassifier
MLModelTypeRegistry
MLIdentity
MLLogging
MLPipeline
MLSVMLoader
MLCategoricalMapping
InMemoryConstruction
CoreMLCompilerArguments
MLCustomLayer
MLCustomLayerWrapper
EspressoBrick
NSObject
MLFeatureVectorizer
MLMultiArrayConstraint
MLArrayFeatureExtractor
MLSVRLoader
MLSupportVectorRegressor
MLCodeGenerator
MLPipelineLoader
MLFeatureDescription
MLSupportVectorClassifier
MLDictVectorizer
MLRegressorResult
MLGLMRegression
ModelAsset
MLFeatureValue
MLDefaultCustomLayerFactory
MLCustomLayerFactory
MLModel
MLPipelineRegressor
MLFeatureFrame
MLImputer
MLModelIOUtils
MLFeatureTypeUtils
MLFeatureArray
MLImageConstraint
MLFeatureFrameUtils
MLInMemoryFeatureFrame
MLSVMEngine
ModelConstructible
MLInMemoryFeatureArray
MLOneHotEncoder
MLSVREngine
MLModelMetadata
Model
MLModelDescription
MLModelInterface
FeatureAccessors
Validation
MLTreeEnsembleRegressor
MLModelErrorUtils
MLScaler
MLClassifierResult
MLGLMClassification
MLNormalizer
EspressoBrickRegistry
EspressoBrickTensorShape
EspressoBrickTensor
EspressoBrickTensorCPU
EspressoBrickTensorMetal
^{__CVBuffer=}32@0:8@16^@24
^{__CVBuffer=}36@0:8@16c24^@28
@16@0:8
c32@0:8@16^@24
c32@0:8@"MLFeatureValue"16^@24
@24@0:8^{_NSZone=}16
@24@0:8q16
q16@0:8
@20@0:8c16
c16@0:8
v20@0:8c16
Q16@0:8
v24@0:8Q16
@24@0:8@16
@"MLFeatureValue"24@0:8@"NSString"16
@"NSSet"16@0:8
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@32@0:8@16^@24
v16@0:8
v24@0:8@16
@"NSDictionary"
@32@0:8@16@24
@48@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@24@32^@40
@48@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@"MLVersionInfo"24@"MLVersionInfo"32^@40
@32@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^@24
@"<MLModeling>"32@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^@24
@32@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16^@24
@"NSString"
@"NSArray"
@48@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24@32^@40
@40@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16@24^@32
@"MLCompilerResult"48@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24@"MLCompilerOptions"32^@40
@"MLVersionInfo"40@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16@"MLCompilerOptions"24^@32
@48@0:8@16@24@32^@40
@40@0:8@16@24^@32
@48@0:8q16q24q32@40
c24@0:8@16
@"<MLFeatureProvider>"32@0:8@"<MLFeatureProvider>"16^@24
@"<MLFeatureProvider>"40@0:8@"<MLFeatureProvider>"16@"MLPredictionOptions"24^@32
@"<MLFeatureFrame>"32@0:8@"<MLFeatureFrame>"16^@24
@"MLModelDescription"16@0:8
@"MLModelInterface"16@0:8
@"MLModelMetadata"16@0:8
@"NSArray"16@0:8
@"MLClassifierResult"40@0:8@"<MLFeatureProvider>"16@"MLPredictionOptions"24^@32
@"MLRegressorResult"40@0:8@"<MLFeatureProvider>"16@"MLPredictionOptions"24^@32
c24@0:8^@16
@24@0:8^@16
@"NSURL"
@"NSObject<MLModeling>"
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
i16@0:8
v20@0:8i16
{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16@0:8
v40@0:8{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16
{map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, float> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, float>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16@0:8
v40@0:8{map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, float> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, float>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16
B16@0:8
v20@0:8B16
{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
{map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, float> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, float>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
@52@0:8@16@24@32c40^@44
c28@0:8c16^@20
c40@0:8@16^{vector<std::__1::shared_ptr<unsigned char>, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}^{shared_ptr<unsigned char>}{__compressed_pair<std::__1::shared_ptr<unsigned char> *, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}}}24^@32
^{__CVBuffer=}40@0:8^{?=^v^v[4Q][4Q]QQQQQQQQQQi}16@24^@32
{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16@0:8
v40@0:8{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16
^v16@0:8
v24@0:8^v16
{?=^vi}16@0:8
v32@0:8{?=^vi}16
{map<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16@0:8
v40@0:8{map<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16
I16@0:8
v20@0:8I16
{vector<const char *, std::__1::allocator<const char *> >=^*^*{__compressed_pair<const char **, std::__1::allocator<const char *> >=^*}}16@0:8
v40@0:8{vector<const char *, std::__1::allocator<const char *> >=^*^*{__compressed_pair<const char **, std::__1::allocator<const char *> >=^*}}16
{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}16@0:8
v40@0:8{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}16
@"NSMutableDictionary"
{?="plan"^v"network_index"i}
{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
{map<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
{vector<const char *, std::__1::allocator<const char *> >="__begin_"^*"__end_"^*"__end_cap_"{__compressed_pair<const char **, std::__1::allocator<const char *> >="__value_"^*}}
{vector<int, std::__1::allocator<int> >="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::__1::allocator<int> >="__value_"^i}}
@"MLPipeline"
@24@0:8r^{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}16
{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}24@0:8@16
@40@0:8@16q24^@32
@64@0:8^v16@24q32@40@?48^@56
@24@0:8Q16
v32@0:8@16Q24
v32@0:8@16q24
Q24@0:8@16
v32@0:8@16@24
^{MultiArrayBuffer=^^?{shared_ptr<unsigned char>=*^{__shared_weak_count}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}iQS}
c24@0:8q16
^d16@0:8
i24@0:8q16
@48@0:8@16q24q32^@40
c40@0:8@16q24^@32
c40@0:8@16Q24^@32
@"MLMultiArray"
r*16@0:8
@40@0:8^d16Q24^@32
{shared_ptr<Archiver::MMappedFile>="__ptr_"^{MMappedFile}"__cntrl_"^{__shared_weak_count}}
{vector<unsigned char, std::__1::allocator<unsigned char> >="__begin_"*"__end_"*"__end_cap_"{__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >="__value_"*}}
{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >="__begin_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}"__end_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}"__end_cap_"{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >="__value_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}
{vector<long long, std::__1::allocator<long long> >="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long long *, std::__1::allocator<long long> >="__value_"^q}}
#20@0:8i16
@32@0:8^{_MLModelSpecification=}16^@24
@"<MLModeling>"32@0:8^{_MLModelSpecification=}16^@24
@48@0:8r^{RepeatedPtrField<CoreML::Specification::Model>=^{Arena}ii^{Rep}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24@32^@40
@56@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@24@32@40^@48
@48@0:8@16Q24Q32^@40
@48@0:8@16@24i32i36^@40
@72@0:8@16@24@32@40@48@56@64
@"MLFeatureValue"
c40@0:8@16@24^@32
c48@0:8@16@24@32^@40
@32@0:8@"NSDictionary"16^@24
c32@0:8@"NSArray"16^@24
@"NSArray"32@0:8@"NSArray"16^@24
c40@0:8@"NSArray"16@"NSArray"24^@32
c48@0:8@"<MTLCommandBuffer>"16@"NSArray"24@"NSArray"32^@40
i24@0:8*16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c24@0:8#16
c24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8^v16Q24
v40@0:8@16@24@32
@"NSArray"32@0:8@"NSArray"16@"NSDictionary"24
@24@0:8@"NSDictionary"16
v32@0:8@"NSArray"16@"NSArray"24
v40@0:8@"<MTLCommandBuffer>"16@"NSArray"24@"NSArray"32
@"NSObject<MLCustomLayer>"
@40@0:8@16Q24^@32
{vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >="__begin_"^{pair<unsigned long, unsigned long>}"__end_"^{pair<unsigned long, unsigned long>}"__end_cap_"{__compressed_pair<std::__1::pair<unsigned long, unsigned long> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >="__value_"^{pair<unsigned long, unsigned long>}}}
@32@0:8@16q24
c32@0:8q16^@24
@64@0:8@16@24@32@40@48@56
@"MLSVREngine"
@48@0:8@16@24B32B36^@40
@52@0:8@16@24B32B36B40^@44
@44@0:8@16q24c32@36
@"MLSVMEngine"
@64@0:8@16@24@32@40@48^@56
@72@0:8@16@24@32@40@48@56^@64
@"NSOrderedSet"
@"<MLFeatureProvider>"
{vector<double, std::__1::allocator<double> >="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::__1::allocator<double> >="__value_"^d}}
{vector<std::__1::vector<double, std::__1::allocator<double> >, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >="__begin_"^{vector<double, std::__1::allocator<double> >}"__end_"^{vector<double, std::__1::allocator<double> >}"__end_cap_"{__compressed_pair<std::__1::vector<double, std::__1::allocator<double> > *, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >="__value_"^{vector<double, std::__1::allocator<double> >}}}
{shared_ptr<CoreML::Specification::Model>="__ptr_"^{Model}"__cntrl_"^{__shared_weak_count}}
B40@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
@24@0:8d16
@24@0:8^{__CVBuffer=}16
@40@0:8q16@24^@32
d16@0:8
^{__CVBuffer=}16@0:8
@"NSObject"
@"NSObject<MLCustomLayer>"40@0:8@"NSString"16@"NSDictionary"24^@32
@"MLModelInterface"
@"MLModelMetadata"
@"MLModelDescription"
@"<MLFeatureProvider>"24@0:8Q16
@"<MLFeatureArray>"24@0:8@"NSString"16
@24@0:8@"NSArray"16
@32@0:8@"<MLFeatureFrame>"16^@24
@"NSDictionary"16@0:8
@80@0:8@16@24@32@40@48@56@64^@72
@48@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16#24@32^@40
@40@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
B40@0:8^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
B40@0:8^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}16^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
@24@0:8r^{FeatureDescription=^^?{InternalMetadataWithArenaLite=^v}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{FeatureType}i}16
@24@0:8r^{RepeatedPtrField<CoreML::Specification::FeatureDescription>=^{Arena}ii^{Rep}}16
B40@0:8@16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
@24@0:8^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}16
@28@0:8^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}16c24
q24@0:8@16
q32@0:8@16^@24
@"MLFeatureValue"24@0:8Q16
c28@0:8I16Q20
@36@0:8q16q24I32
@32@0:8q16q24
@20@0:8I16
@40@0:8q16q24Q32
@40@0:8@16@24Q32
@48@0:8^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}16c24c28Q32@40
^{svm_node=id}24@0:8Q16
v40@0:8^{svm_node=id}16^d24Q32
v24@0:8^{svm_node=id}16
v32@0:8@16^d24
^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}16@0:8
v24@0:8^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}16
^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}
@40@0:8@16@24@32
@72@0:8@16@24c32c36@40@48@56@64
@40@0:8^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}16c24c28Q32
@32@0:8^{_MLModelMetadataSpecification={shared_ptr<CoreML::Specification::Metadata>=^{Metadata}^{__shared_weak_count}}}16^@24
c32@0:8@16@24
d32@0:8@16^@24
d24@0:8^d16
v32@0:8^d16^d24
@32@0:8^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}16^@24
@40@0:8q16@24[1{__va_list_tag=II^v^v}]32
@32@0:8q16@24
@40@0:8@16q24@32
B40@0:8^d16@24^@32
@"NSMutableArray"
@52@0:8i16@20@28@36@44
@60@0:8i16@20@28@36@44@52
v32@0:8d16^d24
v24@0:8#16
@"EspressoBrickTensorShape"
^f16@0:8
v24@0:8^f16
@"<MTLTexture>"
MLModelAsset: load has already been run successfully.
MLModelAsset: load failed with error %@
MLModelAsset: load failed.
MLModelAsset: modelWithError: load failed with error %@
MLModelAsset: classifierWithError: load failed.
MLModelAsset: regressorWithError: load failed.
Invalid height and width for the image input.
Input MLMultiArray cannot be %d dimensional (must be between 1 and 5 dimensions).
Error in computing custom layer shape information when compiling model.
Entering NN constructor
Plan created, now adding network
File: %s not found.
Finding model in: %s
Error in adding network %d
Error in loading user-provided custom layer during neural network evaluation.
Error in adding network %d.
Error in declaring input %d.
inputLayer: %s
Error in declaring output: %d.
outputLayer: %s
Error in building plan %d.
Plan built
Input feature %s was presented as a vector of length %d, but the model expects an input of length %d.
Input feature %s was presented as a batch  (length %d) of sequences (length %d) of vectors of length %d, but the model expects vectors of length %d.
Input %s is an array of rank %d, but this model only supports single vector inputs (rank 1) or a sequence of batches of vectors (rank 3).
Input feature %s was presented as an array of size (%d, %d, %d), but the model expects an input of size (%d, %d, %d).
Input feature %s was presented as a batch  (length %d) of sequences (length %d) of arrays of size (%d, %d, %d), but the model expects arrays of size (%d, %d, %d).
Input %s is an array of rank %d, but this model only supports image-like inputs (rank 3) or a sequence of batches of image-like inputs (rank 5).
Invalid model input shape in model description. VALIDATOR SHOULD HAVE CAUGHT THIS -- FILE A RADAR.
Input feature %s required but not passed to neural network.
Error binding image input buffer %s: %d
Error binding input buffer %s: %d
Error passing input to NN engine.
Error: unsupported input type for neural network.
Error binding output buffer %s: %d
Failure verifying inputs.
Failure in resetSizes.
Failure in bindInputsAndOutputs.
Error computing NN outputs, caught unknown exception.
Error in computing user-provided custom layer during neural network evaluation.
Error computing NN outputs %d
Error unlocking pixel buffers.
Empty input feature dictionary passed to resetSizes.
Incorrect input number of dimensions %lul (must be between 1 and 5 dimensions.
Different batch numbers for input features.
Cannot evaluate a batch of size %d on GPU, which is larger than maximum of %d.
Cannot evaluate a sequence of length %d, which is longer than maximum of %d.
Failure setting up to dynamically allocate for sequence size.
Failure dynamically resizing for sequence length
Error in computing user-provided custom layer output shapes during neural network construction.
Failure dynamically resizing for sequence length.
Error in re-allocating network: %d.
Error collecting model input shapes
Error in compiling custom layer model.
Model requires sequence length greater than %d
Error in neural network compiler computing minimum sequence length.
Error in laying out custom layer model in memory.
Error handling image preprocessing parameters.
Setting optimize parameter to use half precision
Error in optimizing custom layer model.
Error in saving custom layer model to file.
%s thrown on construction
Incorrect number of classes given (TreeEnsembleClassifier).
Couldn't create os_log_t coreChannel
Error creating Core ML custom layer implementation from factory for layer "%s".
Core ML custom Layer implementation '%s' does not coform to the MLCustomLayer protocol.
Error getting Core ML custom layer output shapes for layer "%s".
Evaluation on Core ML custom layer "%s" called before the layer is constructed.
Error evaluating Core ML custom layer "%s" on CPU.
Core ML custom Layer implementation '%s' does not coform to the MLCustomLayer protocol'
Error initializing Core ML custom layer implementation with parameter dictionary for layer "%s".
Error setting weights in Core ML custom layer "%s".
Error evaluating Core ML custom layer "%s" on GPU.
A Core ML custom neural network layer requires an implementation named '%s' which was not found in the global namespace.
A Core ML custom neural network layer implementation class named '%s' does not conform to the MLCustomLayer protocol.
Invalid model description found on load. %s
Letting invalid model load. This model may not properly load in the future.
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
    
