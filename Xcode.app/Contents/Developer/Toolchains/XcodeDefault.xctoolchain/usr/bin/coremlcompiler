@(#)PROGRAM:coremlcompiler  PROJECT:CoreML-1
_22MLCustomLayerException
NSt3__120__shared_ptr_emplaceIN8Archiver13_OArchiveImplENS_9allocatorIS2_EEEE
NSt3__114basic_ofstreamIcNS_11char_traitsIcEEEE
NSt3__113basic_filebufIcNS_11char_traitsIcEEEE
NSt3__120__shared_ptr_emplaceIN8Archiver13_IArchiveImplENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_pointerIPhZ83-[MLNeuralNetworkEngine bindInputsAndOutputs:allocatedImageData:bufferIndex:error:]E3$_1NS_9allocatorIhEEEE
Z83-[MLNeuralNetworkEngine bindInputsAndOutputs:allocatedImageData:bufferIndex:error:]E3$_1
N6CoreML16MultiArrayBufferE
NSt3__120__shared_ptr_pointerIPhZN6CoreML16MultiArrayBufferC1ERKNS_6vectorImNS_9allocatorImEEEENS2_10ScalarTypeENS2_12StorageOrderEE3$_0NS5_IhEEEE
ZN6CoreML16MultiArrayBufferC1ERKNSt3__16vectorImNS1_9allocatorImEEEENS_10ScalarTypeENS_12StorageOrderEE3$_0
NSt3__120__shared_ptr_pointerIPhZN6CoreML16MultiArrayBufferC1ES1_RKNS_6vectorImNS_9allocatorImEEEES9_NS2_10ScalarTypeEE3$_1NS5_IhEEEE
ZN6CoreML16MultiArrayBufferC1EPhRKNSt3__16vectorImNS2_9allocatorImEEEES8_NS_10ScalarTypeEE3$_1
NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__121__basic_string_commonILb1EEE
NSt3__120__shared_ptr_emplaceIN6CoreML13Specification5ModelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6CoreML24BayesianProbitRegression24BayesianProbitRegressionENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6CoreML24BayesianProbitRegression13FeatureValuesENS_9allocatorIS3_EEEE
?6Kernel
7QMatrix
6Solver
9Solver_NU
5SVC_Q
11ONE_CLASS_Q
5SVR_Q
NSt3__120__shared_ptr_pointerIP21_MLModelSpecificationNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI21_MLModelSpecificationEE
N6CoreML17ObjCCodeGeneratorE
]6MNw<@
X_<p
@ko#!(
f}/@
il]@
G!c?m
rKa@
yTW 
2d@&x
NSt3__120__shared_ptr_pointerIPN8Archiver14_ODataBlobImplENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN8Archiver14_ODataBlobImplEEE
NSt3__120__shared_ptr_emplaceIN8Archiver14_ODataBlobImplENS_9allocatorIS2_EEEE
N6CoreML18SwiftCodeGeneratorE
NSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIcLi1EEENS_9allocatorIS3_EEEE
N8Espresso4blobIcLi1EEE
CN6CoreML13TreeEnsembles8Internal30incompatible_execution_profileE
NSt3__120__shared_ptr_emplaceIN6CoreML11Recommender30_ItemSimilarityRecommenderDataENS_9allocatorIS3_EEEE
N6CoreML13CodeGeneratorE
NSt3__110__function6__funcIPFbRKN6CoreML13Specification5ModelEENS_9allocatorIS8_EES7_EE
NSt3__110__function6__baseIFbRKN6CoreML13Specification5ModelEEEE
PFbRKN6CoreML13Specification5ModelEE
FbRKN6CoreML13Specification5ModelEE
NSt3__120__shared_ptr_emplaceIN6CoreML13Specification8MetadataENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6CoreML13Specification16ModelDescriptionENS_9allocatorIS3_EEEE
NSt3__117bad_function_callE
NSt3__110__function6__funcIZN6CoreML13TreeEnsembles8Internal16gatherPropertiesERKNS_10shared_ptrINS3_13_TreeEnsembleEEEE3$_2NS_9allocatorISA_EEFvRKNS5_INS3_20_TreeComputationNodeEEEEEE
NSt3__110__function6__baseIFvRKNS_10shared_ptrIN6CoreML13TreeEnsembles20_TreeComputationNodeEEEEEE
ZN6CoreML13TreeEnsembles8Internal16gatherPropertiesERKNSt3__110shared_ptrINS0_13_TreeEnsembleEEEE3$_2
NSt3__120__shared_ptr_pointerIPN8Archiver11MMappedFileENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN8Archiver11MMappedFileEEE
NSt3__120__shared_ptr_pointerIPN8Archiver14_IDataBlobImplENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN8Archiver14_IDataBlobImplEEE
NSt3__120__shared_ptr_emplaceIN8Archiver14_IDataBlobImplENS_9allocatorIS2_EEEE
N8Espresso30gradient_not_implemented_errorE
N8Espresso23pass_control_flow_graphE
N8Espresso18control_flow_graphE
NSt3__120__shared_ptr_emplaceIN8Espresso18control_flow_graphENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso11basic_blockENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZN8Espresso23pass_control_flow_graph14run_on_networkERNS2_3netEE3$_1NS_9allocatorIS6_EEFvRKNS2_11basic_block11walk_statusEEEE
NSt3__110__function6__baseIFvRKN8Espresso11basic_block11walk_statusEEEE
ZN8Espresso23pass_control_flow_graph14run_on_networkERNS_3netEE3$_1
NSt3__110__function6__funcIZN8Espresso23pass_control_flow_graph14run_on_networkERNS2_3netEE3$_2NS_9allocatorIS6_EEFvRKNS2_11basic_block11walk_statusEEEE
ZN8Espresso23pass_control_flow_graph14run_on_networkERNS_3netEE3$_2
NSt3__120__shared_ptr_emplaceIN8Espresso16pass_bind_labelsENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23pass_control_flow_graphENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13pass_make_ssaENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22pass_tag_dynamic_blobsENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20pass_block_transformENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24pass_re_lower_to_networkENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13pass_livenessENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15pass_allocationENS_9allocatorIS2_EEEE
N8Espresso27pass_multi_head_program_genE
N8Espresso31analysis_multi_head_program_genE
36rule_remove_fused_conv_ip_activation
19rule_bake_batchnorm
24rule_move_softmax_to_cpu
N36rule_remove_fused_conv_ip_activation8status_tE
N19rule_bake_batchnorm8status_tE
N24rule_move_softmax_to_cpu8status_tE
NSt3__120__shared_ptr_emplaceIN8Espresso26network_optimization_graphENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN36rule_remove_fused_conv_ip_activation8status_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN19rule_bake_batchnorm8status_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN24rule_move_softmax_to_cpu8status_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceI36rule_remove_fused_conv_ip_activationNS_9allocatorIS1_EEEE
NSt3__120__shared_ptr_emplaceI19rule_bake_batchnormNS_9allocatorIS1_EEEE
?N8Espresso23generic_rnn_arch_kernelE
N8Espresso34abstract_kernel_with_named_weightsINS_15rnn_arch_paramsEEE
N8Espresso21kernel_with_uniforms_INS_15rnn_arch_paramsENS_35abstract_kernel_with_named_weights_EEE
N8Espresso28generic_rnn_arch_kernel_implE
N8Espresso12rnn_arch_cpuE
N8Espresso31generic_sequence_reverse_kernelE
N8Espresso20kernel_with_uniformsINS_23sequence_reverse_paramsEEE
N8Espresso21kernel_with_uniforms_INS_23sequence_reverse_paramsENS_11base_kernelEEE
N8Espresso30generic_sequence_concat_kernelE
N8Espresso20kernel_with_uniformsINS_22sequence_concat_paramsEEE
N8Espresso21kernel_with_uniforms_INS_22sequence_concat_paramsENS_11base_kernelEEE
N8Espresso30generic_sequence_repeat_kernelE
N8Espresso20kernel_with_uniformsINS_22sequence_repeat_paramsEEE
N8Espresso21kernel_with_uniforms_INS_22sequence_repeat_paramsENS_11base_kernelEEE
N8Espresso27sequence_reverse_kernel_cpuE
N8Espresso26sequence_concat_kernel_cpuE
N8Espresso26sequence_repeat_kernel_cpuE
N8Espresso4blobIfLi2EEE
N8Espresso17cf_for_kernel_cpuE
N8Espresso31cf_kernel_with_br_label_to_bindE
N8Espresso20cf_branch_kernel_cpuE
N8Espresso18cf_jump_kernel_cpuE
N8Espresso18cf_call_kernel_cpuE
N8Espresso20cf_return_kernel_cpuE
N8Espresso20get_shape_kernel_cpuE
N8Espresso16alloc_kernel_cpuE
N8Espresso22load_global_kernel_cpuE
N8Espresso23store_global_kernel_cpuE
N8Espresso16cf_if_kernel_cpuE
N8Espresso18cf_loop_kernel_cpuE
N8Espresso18cf_else_kernel_cpuE
N8Espresso17cf_end_kernel_cpuE
N8Espresso18builtin_kernel_cpuE
NSt3__120__shared_ptr_emplaceIN8Espresso15return_status_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20blob_container_arrayENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23rule_convolution_groupsENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27pass_constant_if_conditionsENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceI19rule_fuse_bias_convNS_9allocatorIS1_EEEE
19rule_fuse_bias_conv
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_26generic_convolution_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_26generic_elementwise_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_28generic_load_constant_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceI28rule_fuse_bias_inner_productNS_9allocatorIS1_EEEE
28rule_fuse_bias_inner_product
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_28generic_inner_product_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceI20rule_fuse_scale_convNS_9allocatorIS1_EEEE
20rule_fuse_scale_conv
NSt3__120__shared_ptr_emplaceI17rule_fuse_bn_convNS_9allocatorIS1_EEEE
17rule_fuse_bn_conv
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_24generic_batchnorm_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceI31rule_add_auto_context_transfersNS_9allocatorIS1_EEEE
31rule_add_auto_context_transfers
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_11base_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceI20rule_concat_fuse_fixNS_9allocatorIS1_EEEE
20rule_concat_fuse_fix
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_21generic_concat_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_19generic_pool_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceI20rule_input_underflowNS_9allocatorIS1_EEEE
20rule_input_underflow
N8Espresso27convolution_grad_kernel_cpuE
N8Espresso35convolution_weights_grad_kernel_cpuE
N8Espresso20pool_grad_kernel_cpuE
N8Espresso21nonlinearity_grad_cpuE
N8Espresso22concat_grad_kernel_cpuE
N8Espresso28softmax_loss_grad_kernel_cpuE
N8Espresso15bias_kernel_cpuE
N8Espresso20bias_grad_kernel_cpuE
N8Espresso25batchnorm_grad_kernel_cpuE
N8Espresso28l2_normalize_grad_kernel_cpuE
N8Espresso29inner_product_grad_kernel_cpuE
N8Espresso37inner_product_weights_grad_kernel_cpuE
N8Espresso27elementwise_grad_kernel_cpuE
N8Espresso23dropout_grad_kernel_cpuE
N8Espresso20abstract_data_sourceE
N8Espresso20multikey_data_sourceE
N8Espresso17async_data_sourceE
N8Espresso24simple_blobs_data_sourceE
N8Espresso25f4_blob_async_data_sourceE
N8Espresso23image_async_data_sourceE
N8Espresso24mxnet_imagebinary_readerE
NSt3__120__shared_ptr_emplaceIN8Espresso17async_data_source6priv_tENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceINS_24uniform_int_distributionIiEENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso25f4_blob_async_data_sourceENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23image_async_data_sourceENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24simple_blobs_data_sourceENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24mxnet_imagebinary_readerENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_pointerIPhZ60-[ETDataTensor initWithCVPixelBuffer:imageParameters:error:]E3$_0NS_9allocatorIhEEEE
Z60-[ETDataTensor initWithCVPixelBuffer:imageParameters:error:]E3$_0
N8Espresso20pass_block_transformE
N8Espresso24analysis_block_transformE
5?_}
N8Espresso24inner_product_kernel_cpuE
N8Espresso20batchnorm_kernel_cpuE
N8Espresso22convolution_kernel_cpuE
N8Espresso27convolution_kernel_cpu_baseINS_26generic_convolution_kernelEEE
N8Espresso15pool_kernel_cpuE
N8Espresso14lrn_kernel_cpuE
N8Espresso18softmax_kernel_cpuE
N8Espresso17concat_kernel_cpuE
N8Espresso19upsample_kernel_cpuE
N8Espresso22elementwise_kernel_cpuE
N8Espresso16split_kernel_cpuE
N8Espresso26general_padding_kernel_cpuE
N8Espresso15crop_kernel_cpuE
N8Espresso21activation_kernel_cpuE
N8Espresso16axpby_kernel_cpuE
N8Espresso27context_transfer_kernel_cpuE
N8Espresso18reshape_kernel_cpuE
N8Espresso15tile_kernel_cpuE
N8Espresso18flatten_kernel_cpuE
N8Espresso20transpose_kernel_cpuE
N8Espresso23l2_normalize_kernel_cpuE
N8Espresso24deconvolution_kernel_cpuE
N8Espresso31prediction_smoothing_kernel_cpuE
N8Espresso18dropout_kernel_cpuE
N8Espresso25space_to_depth_kernel_cpuE
N8Espresso16slice_kernel_cpuE
N8Espresso20broadcast_kernel_cpuE
N8Espresso15cast_kernel_cpuE
N8Espresso24compute_stats_kernel_cpuE
N8Espresso17lambda_kernel_cpuE
N8Espresso26patch_extractor_kernel_cpuE
N8Espresso26crop_and_resize_kernel_cpuE
N8Espresso15topk_kernel_cpuE
N8Espresso17gather_kernel_cpuE
N8Espresso27dynamic_quantize_kernel_cpuE
N8Espresso29dynamic_dequantize_kernel_cpuE
N8Espresso25general_concat_kernel_cpuE
N8Espresso30spatial_transformer_kernel_cpuE
N8Espresso15copy_kernel_cpuE
N8Espresso18scatter_kernel_cpuE
N8Espresso22load_random_kernel_cpuE
N8Espresso16range_kernel_cpuE
N8Espresso27matrix_band_part_kernel_cpuE
N8Espresso15fill_kernel_cpuE
N8Espresso23batch_matmul_kernel_cpuE
N8Espresso26tensor_zero_pad_kernel_cpuE
N8Espresso18squeeze_kernel_cpuE
N8Espresso22expand_dims_kernel_cpuE
N8Espresso23array_gather_kernel_cpuE
N8Espresso22multinomial_kernel_cpuE
N8Espresso26instancenorm_1d_kernel_cpuE
N8Espresso21gumbel_max_kernel_cpuE
N8Espresso21transplant_kernel_cpuE
N8Espresso24general_slice_kernel_cpuE
N8Espresso19stack_nd_kernel_cpuE
N8Espresso19split_nd_kernel_cpuE
N8Espresso21softmax_nd_kernel_cpuE
N8Espresso26sliding_windows_kernel_cpuE
N8Espresso22reverse_seq_kernel_cpuE
N8Espresso24cross_entropy_kernel_cpuE
N8Espresso14sgd_kernel_cpuE
N8Espresso15adam_kernel_cpuE
N8Espresso34non_maximum_suppression_kernel_cpuE
N8Espresso20gather_nd_kernel_cpuE
N8Espresso21scatter_nd_kernel_cpuE
N8Espresso18nonzero_kernel_cpuE
N8Espresso30precompiled_segment_kernel_cpuE
N8Espresso18one_hot_kernel_cpuE
N8Espresso17cumsum_kernel_cpuE
N8Espresso31sparse_inner_product_kernel_cpuE
N8Espresso17dev_op_kernel_cpuE
N8Espresso4blobIfLi1EEE
NSt3__120__shared_ptr_emplaceIN8Espresso24argmax_tree_approximatorENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIhLi2EEENS_9allocatorIS3_EEEE
N8Espresso4blobIhLi2EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIsLi2EEENS_9allocatorIS3_EEEE
N8Espresso4blobIsLi2EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIiLi1EEENS_9allocatorIS3_EEEE
N8Espresso4blobIiLi1EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobItLi1EEENS_9allocatorIS3_EEEE
N8Espresso4blobItLi1EEE
N8Espresso4blobItLi2EEE
NSt3__120__shared_ptr_emplaceIN8Espresso24quantized_weights_helperENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIcLi4EEENS_9allocatorIS3_EEEE
N8Espresso4blobIcLi4EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIaLi1EEENS_9allocatorIS3_EEEE
N8Espresso4blobIaLi1EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIsLi1EEENS_9allocatorIS3_EEEE
N8Espresso4blobIsLi1EEE
NSt3__120__shared_ptr_emplaceIN8Espresso31abstract_blob_container_optionsENS_9allocatorIS2_EEEE
N8Espresso4blobItLi4EEE
NSt3__120__shared_ptr_emplaceIN8Espresso18dropout_kernel_cpu14random_state_tENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20espresso_async_cacheENS_9allocatorIS2_EEEE
@?ff
N8Espresso34dispatch_error_fallback_at_c_levelE
N8Espresso30dispatch_error_use_mps_buffersE
N8Espresso29dispatch_error_use_cpu_scriptE
NSt3__120__shared_ptr_emplaceIN8Espresso27kernels_validation_status_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27cpu_context_transfer_algo_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13net_info_ir_tENS_9allocatorIS2_EEEE
N8Espresso32pass_multi_head_prune_undeclaredE
N8Espresso36analysis_multi_head_prune_undeclaredE
NSt3__120__shared_ptr_emplaceIN8Espresso36analysis_multi_head_prune_undeclaredENS_9allocatorIS2_EEEE
N8Espresso4blobIaLi4EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIaLi2EEENS_9allocatorIS3_EEEE
N8Espresso4blobIaLi2EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIjLi1EEENS_9allocatorIS3_EEEE
N8Espresso4blobIjLi1EEE
?N8Espresso12net_compilerE
N8Espresso26net_compiler_segment_basedE
N8Espresso30pass_blob_name_indexing_resultE
N8Espresso23pass_blob_name_indexingE
N8Espresso32pass_global_name_indexing_resultE
N8Espresso25pass_global_name_indexingE
N8Espresso27pass_constant_if_conditionsE
N8Espresso34pass_constant_if_conditions_resultE
NSt3__120__shared_ptr_emplaceIN8Espresso13interpreter_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso30pass_blob_name_indexing_resultENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso32pass_global_name_indexing_resultENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17net_fast_reshaperENS_9allocatorIS2_EEEE
N8Espresso22device_not_found_errorE
N8Espresso19espresso_error_baseE
N8Espresso20blob_not_found_errorE
N8Espresso21invalid_context_errorE
N8Espresso19invalid_state_errorE
N8Espresso22invalid_argument_errorE
N8Espresso24invalid_blob_shape_errorE
N8Espresso21not_implemented_errorE
N8Espresso31unsupported_configuration_errorE
N8Espresso12memory_errorE
N8Espresso8io_errorE
N8Espresso13generic_errorE
N8Espresso14overflow_errorE
N8Espresso16context_exceededE
N8Espresso13pass_livenessE
N8Espresso17analysis_livenessE
NSt3__120__shared_ptr_emplaceIN8Espresso17analysis_livenessENS_9allocatorIS2_EEEE
)>N8Espresso26generic_convolution_kernelE
N8Espresso28abstract_kernel_with_weightsINS_20convolution_uniformsEEE
N8Espresso21kernel_with_uniforms_INS_20convolution_uniformsENS_29abstract_kernel_with_weights_EEE
N8Espresso29abstract_kernel_with_weights_E
N8Espresso35abstract_kernel_with_named_weights_E
N8Espresso34abstract_kernel_with_weights_grad_E
N8Espresso12no_op_kernelE
N8Espresso20kernel_with_uniformsINS_23no_op_kernel_parametersEEE
N8Espresso21kernel_with_uniforms_INS_23no_op_kernel_parametersENS_11base_kernelEEE
N8Espresso18generic_lrn_kernelE
N8Espresso20kernel_with_uniformsINS_10lrn_paramsEEE
N8Espresso21kernel_with_uniforms_INS_10lrn_paramsENS_11base_kernelEEE
N8Espresso19generic_pool_kernelE
N8Espresso28abstract_kernel_with_weightsINS_11pool_paramsEEE
N8Espresso21kernel_with_uniforms_INS_11pool_paramsENS_29abstract_kernel_with_weights_EEE
N8Espresso22generic_softmax_kernelE
N8Espresso20kernel_with_uniformsINS_14softmax_paramsEEE
N8Espresso21kernel_with_uniforms_INS_14softmax_paramsENS_11base_kernelEEE
N8Espresso28generic_inner_product_kernelE
N8Espresso28abstract_kernel_with_weightsINS_22inner_product_uniformsEEE
N8Espresso21kernel_with_uniforms_INS_22inner_product_uniformsENS_29abstract_kernel_with_weights_EEE
N8Espresso21generic_concat_kernelE
N8Espresso20kernel_with_uniformsINS_13concat_paramsEEE
N8Espresso21kernel_with_uniforms_INS_13concat_paramsENS_11base_kernelEEE
N8Espresso23generic_upsample_kernelE
N8Espresso20kernel_with_uniformsINS_22upsample_kernel_paramsEEE
N8Espresso21kernel_with_uniforms_INS_22upsample_kernel_paramsENS_11base_kernelEEE
N8Espresso26generic_elementwise_kernelE
N8Espresso20kernel_with_uniformsINS_18elementwise_paramsEEE
N8Espresso21kernel_with_uniforms_INS_18elementwise_paramsENS_11base_kernelEEE
N8Espresso20generic_split_kernelE
N8Espresso20kernel_with_uniformsINS_12split_paramsEEE
N8Espresso21kernel_with_uniforms_INS_12split_paramsENS_11base_kernelEEE
N8Espresso30generic_general_padding_kernelE
N8Espresso20kernel_with_uniformsINS_22general_padding_paramsEEE
N8Espresso21kernel_with_uniforms_INS_22general_padding_paramsENS_11base_kernelEEE
N8Espresso19generic_crop_kernelE
N8Espresso20kernel_with_uniformsINS_11crop_paramsEEE
N8Espresso21kernel_with_uniforms_INS_11crop_paramsENS_11base_kernelEEE
N8Espresso28generic_deconvolution_kernelE
N8Espresso31generic_convolution_grad_kernelE
N8Espresso33abstract_kernel_with_weights_gradINS_20convolution_uniformsEEE
N8Espresso21kernel_with_uniforms_INS_20convolution_uniformsENS_34abstract_kernel_with_weights_grad_EEE
N8Espresso39generic_convolution_weights_grad_kernelE
N8Espresso24generic_pool_grad_kernelE
N8Espresso20kernel_with_uniformsINS_11pool_paramsEEE
N8Espresso21kernel_with_uniforms_INS_11pool_paramsENS_11base_kernelEEE
N8Espresso26generic_concat_grad_kernelE
N8Espresso32generic_softmax_loss_grad_kernelE
N8Espresso25generic_activation_kernelE
N8Espresso20kernel_with_uniformsINS_17activation_paramsEEE
N8Espresso21kernel_with_uniforms_INS_17activation_paramsENS_11base_kernelEEE
N8Espresso30generic_activation_grad_kernelE
N8Espresso19generic_bias_kernelE
N8Espresso28abstract_kernel_with_weightsINS_11bias_paramsEEE
N8Espresso21kernel_with_uniforms_INS_11bias_paramsENS_29abstract_kernel_with_weights_EEE
N8Espresso24generic_bias_grad_kernelE
N8Espresso33abstract_kernel_with_weights_gradINS_11bias_paramsEEE
N8Espresso21kernel_with_uniforms_INS_11bias_paramsENS_34abstract_kernel_with_weights_grad_EEE
N8Espresso24generic_batchnorm_kernelE
N8Espresso28abstract_kernel_with_weightsINS_16batchnorm_paramsEEE
N8Espresso21kernel_with_uniforms_INS_16batchnorm_paramsENS_29abstract_kernel_with_weights_EEE
N8Espresso29generic_batchnorm_grad_kernelE
N8Espresso33abstract_kernel_with_weights_gradINS_16batchnorm_paramsEEE
N8Espresso21kernel_with_uniforms_INS_16batchnorm_paramsENS_34abstract_kernel_with_weights_grad_EEE
N8Espresso27generic_l2_normalize_kernelE
N8Espresso20kernel_with_uniformsINS_14l2_norm_paramsEEE
N8Espresso21kernel_with_uniforms_INS_14l2_norm_paramsENS_11base_kernelEEE
N8Espresso32generic_l2_normalize_grad_kernelE
N8Espresso33generic_inner_product_grad_kernelE
N8Espresso33abstract_kernel_with_weights_gradINS_22inner_product_uniformsEEE
N8Espresso21kernel_with_uniforms_INS_22inner_product_uniformsENS_34abstract_kernel_with_weights_grad_EEE
N8Espresso41generic_inner_product_weights_grad_kernelE
N8Espresso31generic_elementwise_grad_kernelE
N8Espresso22generic_dropout_kernelE
N8Espresso20kernel_with_uniformsINS_14dropout_paramsEEE
N8Espresso21kernel_with_uniforms_INS_14dropout_paramsENS_11base_kernelEEE
N8Espresso27generic_dropout_grad_kernelE
N8Espresso20generic_axpby_kernelE
N8Espresso20kernel_with_uniformsINS_12axpby_paramsEEE
N8Espresso21kernel_with_uniforms_INS_12axpby_paramsENS_11base_kernelEEE
N8Espresso28generic_load_constant_kernelE
N8Espresso28abstract_kernel_with_weightsINS_20load_constant_paramsEEE
N8Espresso21kernel_with_uniforms_INS_20load_constant_paramsENS_29abstract_kernel_with_weights_EEE
N8Espresso31generic_context_transfer_kernelE
N8Espresso20kernel_with_uniformsINS_23context_transfer_paramsEEE
N8Espresso21kernel_with_uniforms_INS_23context_transfer_paramsENS_11base_kernelEEE
N8Espresso33generic_load_constant_kernel_implE
N8Espresso36generic_context_transfer_kernel_implE
N8Espresso22generic_reshape_kernelE
N8Espresso20kernel_with_uniformsINS_14reshape_paramsEEE
N8Espresso21kernel_with_uniforms_INS_14reshape_paramsENS_11base_kernelEEE
N8Espresso19generic_tile_kernelE
N8Espresso20kernel_with_uniformsINS_13tile_params_tEEE
N8Espresso21kernel_with_uniforms_INS_13tile_params_tENS_11base_kernelEEE
N8Espresso22generic_flatten_kernelE
N8Espresso20kernel_with_uniformsINS_14flatten_paramsEEE
N8Espresso21kernel_with_uniforms_INS_14flatten_paramsENS_11base_kernelEEE
N8Espresso21generic_reduce_kernelE
N8Espresso20kernel_with_uniformsINS_15reduce_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15reduce_params_tENS_11base_kernelEEE
N8Espresso24generic_transpose_kernelE
N8Espresso20kernel_with_uniformsINS_18transpose_params_tEEE
N8Espresso21kernel_with_uniforms_INS_18transpose_params_tENS_11base_kernelEEE
N8Espresso18generic_rnn_kernelE
N8Espresso34abstract_kernel_with_named_weightsINS_10rnn_paramsEEE
N8Espresso21kernel_with_uniforms_INS_10rnn_paramsENS_35abstract_kernel_with_named_weights_EEE
N8Espresso35generic_prediction_smoothing_kernelE
N8Espresso20kernel_with_uniformsINS_27prediction_smoothing_paramsEEE
N8Espresso21kernel_with_uniforms_INS_27prediction_smoothing_paramsENS_11base_kernelEEE
N8Espresso29generic_space_to_depth_kernelE
N8Espresso20kernel_with_uniformsINS_23space_to_depth_params_tEEE
N8Espresso21kernel_with_uniforms_INS_23space_to_depth_params_tENS_11base_kernelEEE
N8Espresso20generic_slice_kernelE
N8Espresso20kernel_with_uniformsINS_14slice_params_tEEE
N8Espresso21kernel_with_uniforms_INS_14slice_params_tENS_11base_kernelEEE
N8Espresso24generic_broadcast_kernelE
N8Espresso20kernel_with_uniformsINS_18broadcast_params_tEEE
N8Espresso21kernel_with_uniforms_INS_18broadcast_params_tENS_11base_kernelEEE
N8Espresso19generic_cast_kernelE
N8Espresso20kernel_with_uniformsINS_13cast_params_tEEE
N8Espresso21kernel_with_uniforms_INS_13cast_params_tENS_11base_kernelEEE
N8Espresso28generic_compute_stats_kernelE
N8Espresso20kernel_with_uniformsINS_22compute_stats_params_tEEE
N8Espresso21kernel_with_uniforms_INS_22compute_stats_params_tENS_11base_kernelEEE
N8Espresso30generic_patch_extractor_kernelE
N8Espresso20kernel_with_uniformsINS_24patch_extractor_params_tEEE
N8Espresso21kernel_with_uniforms_INS_24patch_extractor_params_tENS_11base_kernelEEE
N8Espresso30generic_crop_and_resize_kernelE
N8Espresso20kernel_with_uniformsINS_24crop_and_resize_params_tEEE
N8Espresso21kernel_with_uniforms_INS_24crop_and_resize_params_tENS_11base_kernelEEE
N8Espresso31generic_dynamic_quantize_kernelE
N8Espresso20kernel_with_uniformsINS_25dynamic_quantize_params_tEEE
N8Espresso21kernel_with_uniforms_INS_25dynamic_quantize_params_tENS_11base_kernelEEE
N8Espresso24generic_cf_branch_kernelE
N8Espresso20kernel_with_uniformsINS_18cf_branch_params_tEEE
N8Espresso21kernel_with_uniforms_INS_18cf_branch_params_tENS_11base_kernelEEE
N8Espresso33generic_dynamic_dequantize_kernelE
N8Espresso20kernel_with_uniformsINS_27dynamic_dequantize_params_tEEE
N8Espresso21kernel_with_uniforms_INS_27dynamic_dequantize_params_tENS_11base_kernelEEE
N8Espresso34generic_spatial_transformer_kernelE
N8Espresso20kernel_with_uniformsINS_28spatial_transformer_params_tEEE
N8Espresso21kernel_with_uniforms_INS_28spatial_transformer_params_tENS_11base_kernelEEE
N8Espresso22generic_cf_call_kernelE
N8Espresso20kernel_with_uniformsINS_16cf_call_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16cf_call_params_tENS_11base_kernelEEE
N8Espresso24generic_cf_return_kernelE
N8Espresso20kernel_with_uniformsINS_18cf_return_params_tEEE
N8Espresso21kernel_with_uniforms_INS_18cf_return_params_tENS_11base_kernelEEE
N8Espresso24generic_get_shape_kernelE
N8Espresso20kernel_with_uniformsINS_18get_shape_params_tEEE
N8Espresso21kernel_with_uniforms_INS_18get_shape_params_tENS_11base_kernelEEE
N8Espresso19generic_topk_kernelE
N8Espresso20kernel_with_uniformsINS_13topk_params_tEEE
N8Espresso21kernel_with_uniforms_INS_13topk_params_tENS_11base_kernelEEE
N8Espresso21generic_gather_kernelE
N8Espresso20kernel_with_uniformsINS_15gather_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15gather_params_tENS_11base_kernelEEE
N8Espresso29generic_general_concat_kernelE
N8Espresso20kernel_with_uniformsINS_23general_concat_params_tEEE
N8Espresso21kernel_with_uniforms_INS_23general_concat_params_tENS_11base_kernelEEE
N8Espresso20generic_alloc_kernelE
N8Espresso20kernel_with_uniformsINS_14alloc_params_tEEE
N8Espresso21kernel_with_uniforms_INS_14alloc_params_tENS_11base_kernelEEE
N8Espresso26generic_load_global_kernelE
N8Espresso20kernel_with_uniformsINS_20load_global_params_tEEE
N8Espresso21kernel_with_uniforms_INS_20load_global_params_tENS_11base_kernelEEE
N8Espresso27generic_store_global_kernelE
N8Espresso20kernel_with_uniformsINS_21store_global_params_tEEE
N8Espresso21kernel_with_uniforms_INS_21store_global_params_tENS_11base_kernelEEE
N8Espresso22generic_cf_jump_kernelE
N8Espresso20kernel_with_uniformsINS_16cf_jump_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16cf_jump_params_tENS_11base_kernelEEE
N8Espresso20generic_cf_if_kernelE
N8Espresso20kernel_with_uniformsINS_14cf_if_params_tEEE
N8Espresso21kernel_with_uniforms_INS_14cf_if_params_tENS_11base_kernelEEE
N8Espresso22generic_cf_loop_kernelE
N8Espresso20kernel_with_uniformsINS_16cf_loop_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16cf_loop_params_tENS_11base_kernelEEE
N8Espresso21generic_cf_for_kernelE
N8Espresso20kernel_with_uniformsINS_15cf_for_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15cf_for_params_tENS_11base_kernelEEE
N8Espresso21generic_cf_end_kernelE
N8Espresso20kernel_with_uniformsINS_15cf_end_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15cf_end_params_tENS_11base_kernelEEE
N8Espresso22generic_cf_else_kernelE
N8Espresso20kernel_with_uniformsINS_16cf_else_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16cf_else_params_tENS_11base_kernelEEE
N8Espresso19generic_copy_kernelE
N8Espresso20kernel_with_uniformsINS_13copy_params_tEEE
N8Espresso21kernel_with_uniforms_INS_13copy_params_tENS_11base_kernelEEE
N8Espresso22generic_scatter_kernelE
N8Espresso20kernel_with_uniformsINS_16scatter_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16scatter_params_tENS_11base_kernelEEE
N8Espresso26generic_load_random_kernelE
N8Espresso20kernel_with_uniformsINS_20load_random_params_tEEE
N8Espresso21kernel_with_uniforms_INS_20load_random_params_tENS_11base_kernelEEE
N8Espresso20generic_range_kernelE
N8Espresso20kernel_with_uniformsINS_14range_params_tEEE
N8Espresso21kernel_with_uniforms_INS_14range_params_tENS_11base_kernelEEE
N8Espresso31generic_matrix_band_part_kernelE
N8Espresso20kernel_with_uniformsINS_25matrix_band_part_params_tEEE
N8Espresso21kernel_with_uniforms_INS_25matrix_band_part_params_tENS_11base_kernelEEE
N8Espresso27generic_batch_matmul_kernelE
N8Espresso20kernel_with_uniformsINS_21batch_matmul_params_tEEE
N8Espresso21kernel_with_uniforms_INS_21batch_matmul_params_tENS_11base_kernelEEE
N8Espresso19generic_fill_kernelE
N8Espresso20kernel_with_uniformsINS_13fill_params_tEEE
N8Espresso21kernel_with_uniforms_INS_13fill_params_tENS_11base_kernelEEE
N8Espresso30generic_tensor_zero_pad_kernelE
N8Espresso20kernel_with_uniformsINS_24tensor_zero_pad_params_tEEE
N8Espresso21kernel_with_uniforms_INS_24tensor_zero_pad_params_tENS_11base_kernelEEE
N8Espresso22generic_squeeze_kernelE
N8Espresso20kernel_with_uniformsINS_16squeeze_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16squeeze_params_tENS_11base_kernelEEE
N8Espresso26generic_expand_dims_kernelE
N8Espresso20kernel_with_uniformsINS_20expand_dims_params_tEEE
N8Espresso21kernel_with_uniforms_INS_20expand_dims_params_tENS_11base_kernelEEE
N8Espresso27generic_array_gather_kernelE
N8Espresso20kernel_with_uniformsINS_21array_gather_params_tEEE
N8Espresso21kernel_with_uniforms_INS_21array_gather_params_tENS_11base_kernelEEE
N8Espresso26generic_multinomial_kernelE
N8Espresso20kernel_with_uniformsINS_20multinomial_params_tEEE
N8Espresso21kernel_with_uniforms_INS_20multinomial_params_tENS_11base_kernelEEE
N8Espresso30generic_instancenorm_1d_kernelE
N8Espresso20kernel_with_uniformsINS_24instancenorm_1d_params_tEEE
N8Espresso21kernel_with_uniforms_INS_24instancenorm_1d_params_tENS_11base_kernelEEE
N8Espresso26generic_phi_virtual_kernelE
N8Espresso20kernel_with_uniformsINS_20phi_virtual_params_tEEE
N8Espresso21kernel_with_uniforms_INS_20phi_virtual_params_tENS_11base_kernelEEE
N8Espresso25generic_gumbel_max_kernelE
N8Espresso20kernel_with_uniformsINS_19gumbel_max_params_tEEE
N8Espresso21kernel_with_uniforms_INS_19gumbel_max_params_tENS_11base_kernelEEE
N8Espresso22generic_builtin_kernelE
N8Espresso20kernel_with_uniformsINS_16builtin_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16builtin_params_tENS_11base_kernelEEE
N8Espresso25generic_transplant_kernelE
N8Espresso28abstract_kernel_with_weightsINS_19transplant_params_tEEE
N8Espresso21kernel_with_uniforms_INS_19transplant_params_tENS_29abstract_kernel_with_weights_EEE
N8Espresso28generic_general_slice_kernelE
N8Espresso20kernel_with_uniformsINS_22general_slice_params_tEEE
N8Espresso21kernel_with_uniforms_INS_22general_slice_params_tENS_11base_kernelEEE
N8Espresso23generic_stack_nd_kernelE
N8Espresso20kernel_with_uniformsINS_17stack_nd_params_tEEE
N8Espresso21kernel_with_uniforms_INS_17stack_nd_params_tENS_11base_kernelEEE
N8Espresso23generic_split_nd_kernelE
N8Espresso20kernel_with_uniformsINS_17split_nd_params_tEEE
N8Espresso21kernel_with_uniforms_INS_17split_nd_params_tENS_11base_kernelEEE
N8Espresso25generic_softmax_nd_kernelE
N8Espresso20kernel_with_uniformsINS_19softmax_nd_params_tEEE
N8Espresso21kernel_with_uniforms_INS_19softmax_nd_params_tENS_11base_kernelEEE
N8Espresso30generic_sliding_windows_kernelE
N8Espresso20kernel_with_uniformsINS_24sliding_windows_params_tEEE
N8Espresso21kernel_with_uniforms_INS_24sliding_windows_params_tENS_11base_kernelEEE
N8Espresso26generic_reverse_seq_kernelE
N8Espresso20kernel_with_uniformsINS_20reverse_seq_params_tEEE
N8Espresso21kernel_with_uniforms_INS_20reverse_seq_params_tENS_11base_kernelEEE
N8Espresso28generic_cross_entropy_kernelE
N8Espresso20kernel_with_uniformsINS_22cross_entropy_params_tEEE
N8Espresso21kernel_with_uniforms_INS_22cross_entropy_params_tENS_11base_kernelEEE
N8Espresso38generic_non_maximum_suppression_kernelE
N8Espresso20kernel_with_uniformsINS_32non_maximum_suppression_params_tEEE
N8Espresso21kernel_with_uniforms_INS_32non_maximum_suppression_params_tENS_11base_kernelEEE
N8Espresso18generic_sgd_kernelE
N8Espresso20kernel_with_uniformsINS_12sgd_params_tEEE
N8Espresso21kernel_with_uniforms_INS_12sgd_params_tENS_11base_kernelEEE
N8Espresso19generic_adam_kernelE
N8Espresso20kernel_with_uniformsINS_13adam_params_tEEE
N8Espresso21kernel_with_uniforms_INS_13adam_params_tENS_11base_kernelEEE
N8Espresso25generic_scatter_nd_kernelE
N8Espresso20kernel_with_uniformsINS_19scatter_nd_params_tEEE
N8Espresso21kernel_with_uniforms_INS_19scatter_nd_params_tENS_11base_kernelEEE
N8Espresso24generic_gather_nd_kernelE
N8Espresso20kernel_with_uniformsINS_18gather_nd_params_tEEE
N8Espresso21kernel_with_uniforms_INS_18gather_nd_params_tENS_11base_kernelEEE
N8Espresso22generic_nonzero_kernelE
N8Espresso20kernel_with_uniformsINS_16nonzero_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16nonzero_params_tENS_11base_kernelEEE
N8Espresso34generic_precompiled_segment_kernelE
N8Espresso20kernel_with_uniformsINS_28precompiled_segment_params_tEEE
N8Espresso21kernel_with_uniforms_INS_28precompiled_segment_params_tENS_11base_kernelEEE
N8Espresso22generic_one_hot_kernelE
N8Espresso20kernel_with_uniformsINS_16one_hot_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16one_hot_params_tENS_11base_kernelEEE
N8Espresso21generic_cumsum_kernelE
N8Espresso20kernel_with_uniformsINS_15cumsum_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15cumsum_params_tENS_11base_kernelEEE
N8Espresso21generic_dev_op_kernelE
N8Espresso20kernel_with_uniformsINS_15dev_op_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15dev_op_params_tENS_11base_kernelEEE
N8Espresso35generic_sparse_inner_product_kernelE
N8Espresso28abstract_kernel_with_weightsINS_29sparse_inner_product_params_tEEE
N8Espresso21kernel_with_uniforms_INS_29sparse_inner_product_params_tENS_29abstract_kernel_with_weights_EEE
N8Espresso21generic_lambda_kernelE
N8Espresso20kernel_with_uniformsINS_15lambda_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15lambda_params_tENS_11base_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12no_op_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22convolution_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobItLi4EEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi6EEENS_9allocatorIS3_EEEE
N8Espresso4blobIfLi6EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi1EEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIhLi4EEENS_9allocatorIS3_EEEE
N8Espresso4blobIhLi4EEE
NSt3__120__shared_ptr_emplaceIN8Espresso14lrn_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15pool_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18softmax_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24inner_product_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobItLi2EEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17concat_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22elementwise_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIhLi6EEENS_9allocatorIS3_EEEE
N8Espresso4blobIhLi6EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi3EEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso30spatial_transformer_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15copy_kernel_cpuENS_9allocatorIS2_EEEE
?N8Espresso29espresso_training_data_sourceE
N8Espresso20blob_container_arrayE
N8Espresso13interpreter_tE
N8Espresso22abstract_interpreter_tE
NSt3__123enable_shared_from_thisIN8Espresso13interpreter_tEEE
NSt3__120__shared_ptr_emplaceIN8Espresso19interpreter_state_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23per_network_phi_state_tENS_9allocatorIS2_EEEE
N8Espresso13CPUFP16Engine13blob_cpu_fp16E
N8Espresso22pass_tag_dynamic_blobsE
N8Espresso26analysis_tag_dynamic_blobsE
NSt3__120__shared_ptr_emplaceIN8Espresso26analysis_tag_dynamic_blobsENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso40abstract_blob_container_options_aliasingENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso44pass_update_absolute_indexes_after_transformENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23pass_blob_name_indexingENS_9allocatorIS2_EEEE
4@N8Espresso17blob_storage_rootE
N8Espresso14blob_rtti_rootE
N8Espresso10BNNSEngine18convolution_kernelE
N8Espresso10BNNSEngine16base_bnns_kernelINS_26generic_convolution_kernelEEE
N8Espresso10BNNSEngine11pool_kernelE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine22convolution_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine15pool_kernel_cpuENS_9allocatorIS3_EEEE
N8Espresso19blob_storage_memoryE
N8Espresso21blob_storage_abstractE
N8Espresso17blob_storage_mmapE
NSt3__120__shared_ptr_emplaceIN8Espresso29espresso_training_data_sourceENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZ46-[ETTaskDefinition saveNetwork:inplace:error:]E3$_0NS_9allocatorIS2_EEFvRNS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEENS_10shared_ptrIN8Espresso23abstract_blob_containerEEEEEEEE
NSt3__110__function6__baseIFvRNS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN8Espresso23abstract_blob_containerEEEEEEEE
Z46-[ETTaskDefinition saveNetwork:inplace:error:]E3$_0
N8Espresso6SerDes21generic_serdes_objectE
N8Espresso4passE
N8Espresso15analysis_resultE
N8Espresso16pass_params_baseE
N8Espresso8net_passE
5N8Espresso12brick_kernelE
N8Espresso34abstract_kernel_with_named_weightsINS_12brick_paramsEEE
N8Espresso21kernel_with_uniforms_INS_12brick_paramsENS_35abstract_kernel_with_named_weights_EEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_12brick_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_12brick_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso9factory_tINS1_6SerDes13layer_io_baseEEENS_9allocatorIS5_EEEE
N8Espresso9factory_tINS_6SerDes13layer_io_baseEEE
St8__nestedISt9exceptionE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIhLi1EEENS_9allocatorIS3_EEEE
N8Espresso4blobIhLi1EEE
N8Espresso16pass_bind_labelsE
N8Espresso20dummy_blob_containerE
N8Espresso8IREngine14blob_containerE
N8Espresso14DummyMPSEngine14blob_containerE
N8Espresso15DummyBNNSEngine14blob_containerE
N8Espresso21DummyMPSBuffersEngine14blob_containerE
N8Espresso14DummyMPSEngine50generic_inner_product_kernel_with_null_set_weightsE
N8Espresso14DummyMPSEngine12slice_kernelE
N8Espresso14DummyMPSEngine13reduce_kernelE
N8Espresso14DummyMPSEngine13concat_kernelE
N8Espresso14DummyMPSEngine14softmax_kernelE
N8Espresso14DummyMPSEngine20inner_product_kernelE
N8Espresso14DummyMPSEngine14flatten_kernelE
N8Espresso14DummyMPSEngine12split_kernelE
N8Espresso14DummyMPSEngine17activation_kernelE
N8Espresso18elementwise_kernelE
N8Espresso14DummyMPSEngine6engineE
N8Espresso15DummyBNNSEngine6engineE
N8Espresso8IREngine6engineE
N8Espresso21DummyMPSBuffersEngine19batch_matmul_kernelE
N8Espresso21DummyMPSBuffersEngine14reshape_kernelE
N8Espresso21DummyMPSBuffersEngine20inner_product_kernelE
N8Espresso21DummyMPSBuffersEngine13reduce_kernelE
N8Espresso21DummyMPSBuffersEngine13concat_kernelE
N8Espresso21DummyMPSBuffersEngine12split_kernelE
N8Espresso21DummyMPSBuffersEngine17activation_kernelE
N8Espresso21DummyMPSBuffersEngine18elementwise_kernelE
N8Espresso21DummyMPSBuffersEngine14softmax_kernelE
N8Espresso21DummyMPSBuffersEngine20general_slice_kernelE
N8Espresso21DummyMPSBuffersEngine6engineE
NSt3__120__shared_ptr_emplaceIN8Espresso8blob_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine14softmax_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine20inner_product_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso19upsample_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine17activation_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21activation_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso33generic_load_constant_kernel_implENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso36generic_context_transfer_kernel_implENS_9allocatorIS2_EEEE
N8Espresso27convolution_kernel_cpu_baseINS_28generic_deconvolution_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15crop_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine12split_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine14flatten_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18elementwise_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine13concat_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso25space_to_depth_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine12slice_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine13reduce_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine14blob_containerENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15DummyBNNSEngine14blob_containerENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8IREngine14blob_containerENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine14softmax_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine20inner_product_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine18elementwise_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine17activation_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine13concat_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16split_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine13reduce_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27matrix_band_part_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23l2_normalize_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20transpose_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26generic_phi_virtual_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23store_global_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine19batch_matmul_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine14reshape_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14sgd_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21softmax_nd_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine20general_slice_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine14blob_containerENS_9allocatorIS3_EEEE
N8Espresso8blob_cpuE
N8Espresso10engine_cpuE
N8Espresso9batch_cpuE
N8Espresso11context_cpuE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIiLi4EEENS_9allocatorIS3_EEEE
N8Espresso4blobIiLi4EEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine13blob_cpu_fp16ENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine18convolution_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine11pool_kernelENS_9allocatorIS3_EEEE
N8Espresso10BNNSEngine16base_bnns_kernelINS_19generic_pool_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine14lrn_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine18softmax_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine17concat_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine19upsample_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine22elementwise_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine16split_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24deconvolution_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16axpby_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20batchnorm_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14rnn_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17reduce_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27context_transfer_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12rnn_arch_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26general_padding_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18reshape_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15tile_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18flatten_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27sequence_reverse_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26sequence_concat_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26sequence_repeat_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso31prediction_smoothing_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18dropout_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16slice_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20broadcast_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15cast_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24compute_stats_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17lambda_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26patch_extractor_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26crop_and_resize_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27dynamic_quantize_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso29dynamic_dequantize_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20cf_branch_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18cf_jump_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18cf_call_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20cf_return_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20get_shape_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15topk_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17gather_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso25general_concat_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16alloc_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22load_global_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16cf_if_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18cf_loop_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17cf_for_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17cf_end_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18cf_else_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18scatter_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22load_random_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16range_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23batch_matmul_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15fill_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26tensor_zero_pad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18squeeze_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22expand_dims_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23array_gather_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22multinomial_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26instancenorm_1d_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21gumbel_max_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18builtin_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21transplant_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24general_slice_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso19stack_nd_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso19split_nd_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26sliding_windows_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22reverse_seq_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24cross_entropy_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15adam_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso34non_maximum_suppression_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20gather_nd_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21scatter_nd_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18nonzero_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso30precompiled_segment_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18one_hot_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17cumsum_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17dev_op_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso31sparse_inner_product_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso11context_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso9batch_cpuENS_9allocatorIS2_EEEE
N8Espresso10BNNSEngine6engineE
N8Espresso10BNNSEngine7contextE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine7contextENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso31dump_network_layers_blobs_stateENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso19blob_storage_memoryENS_9allocatorIS2_EEEE
N8Espresso21sgd_optimizer_builderE
N8Espresso17optimizer_builderE
N8Espresso22adam_optimizer_builderE
N8Espresso14QuantSimEngine7contextE
N8Espresso14QuantSimEngine14blob_containerE
N8Espresso14QuantSimEngine6engineE
NSt3__120__shared_ptr_emplaceIN8Espresso14QuantSimEngine14blob_containerENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14QuantSimEngine7contextENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso15pool_kernel_cpuENS2_11pool_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso15pool_kernel_cpuENS0_11pool_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelI27wrapper_kernel_with_weightsIN8Espresso22convolution_kernel_cpuENS3_20convolution_uniformsEES5_ENS_9allocatorIS7_EEEE
14wrapper_kernelI27wrapper_kernel_with_weightsIN8Espresso22convolution_kernel_cpuENS1_20convolution_uniformsEES3_E
27wrapper_kernel_with_weightsIN8Espresso22convolution_kernel_cpuENS0_20convolution_uniformsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelI27wrapper_kernel_with_weightsIN8Espresso24deconvolution_kernel_cpuENS3_20convolution_uniformsEES5_ENS_9allocatorIS7_EEEE
14wrapper_kernelI27wrapper_kernel_with_weightsIN8Espresso24deconvolution_kernel_cpuENS1_20convolution_uniformsEES3_E
27wrapper_kernel_with_weightsIN8Espresso24deconvolution_kernel_cpuENS0_20convolution_uniformsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelI27wrapper_kernel_with_weightsIN8Espresso24inner_product_kernel_cpuENS3_22inner_product_uniformsEES5_ENS_9allocatorIS7_EEEE
14wrapper_kernelI27wrapper_kernel_with_weightsIN8Espresso24inner_product_kernel_cpuENS1_22inner_product_uniformsEES3_E
27wrapper_kernel_with_weightsIN8Espresso24inner_product_kernel_cpuENS0_22inner_product_uniformsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso22elementwise_kernel_cpuENS2_18elementwise_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso22elementwise_kernel_cpuENS0_18elementwise_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18flatten_kernel_cpuENS2_14flatten_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18flatten_kernel_cpuENS0_14flatten_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18softmax_kernel_cpuENS2_14softmax_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18softmax_kernel_cpuENS0_14softmax_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso17concat_kernel_cpuENS2_13concat_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso17concat_kernel_cpuENS0_13concat_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18reshape_kernel_cpuENS2_14reshape_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18reshape_kernel_cpuENS0_14reshape_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso21activation_kernel_cpuENS2_17activation_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso21activation_kernel_cpuENS0_17activation_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso20batchnorm_kernel_cpuENS2_16batchnorm_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso20batchnorm_kernel_cpuENS0_16batchnorm_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso26general_padding_kernel_cpuENS2_22general_padding_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso26general_padding_kernel_cpuENS0_22general_padding_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso19upsample_kernel_cpuENS2_22upsample_kernel_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso19upsample_kernel_cpuENS0_22upsample_kernel_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso16slice_kernel_cpuENS2_14slice_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso16slice_kernel_cpuENS0_14slice_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso15crop_kernel_cpuENS2_11crop_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso15crop_kernel_cpuENS0_11crop_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso17reduce_kernel_cpuENS2_15reduce_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso17reduce_kernel_cpuENS0_15reduce_params_tEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIaLi4EEENS_9allocatorIS3_EEEE
N8Espresso13pass_make_ssaE
N8Espresso17analysis_make_ssaE
NSt3__120__shared_ptr_emplaceIN8Espresso17analysis_make_ssaENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso11basic_block11instructionENS_9allocatorIS3_EEEE
N8Espresso18wrong_context_typeE
N8Espresso16wrong_batch_typeE
N8Espresso23abstract_blob_containerE
N8Espresso14abstract_batchE
N8Espresso16abstract_contextE
N8Espresso31abstract_blob_container_optionsE
N8Espresso15abstract_engineE
N8Espresso40abstract_blob_container_options_aliasingE
N8Espresso11base_kernelE
N8Espresso19switch_engine_batchE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi4EEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceINS_26linear_congruential_engineIjLj48271ELj0ELj2147483647EEENS_9allocatorIS2_EEEE
N8Espresso13CPUFP16Engine22convolution_kernel_cpuE
N8Espresso13CPUFP16Engine15pool_kernel_cpuE
N8Espresso13CPUFP16Engine14lrn_kernel_cpuE
N8Espresso13CPUFP16Engine18softmax_kernel_cpuE
N8Espresso13CPUFP16Engine17concat_kernel_cpuE
N8Espresso13CPUFP16Engine22elementwise_kernel_cpuE
N8Espresso13CPUFP16Engine16split_kernel_cpuE
N8Espresso13CPUFP16Engine19upsample_kernel_cpuE
N8Espresso4blobIfLi3EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobItLi3EEENS_9allocatorIS3_EEEE
N8Espresso4blobItLi3EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi2EEENS_9allocatorIS3_EEEE
N8Espresso6SerDes23serdes_object_json_objcE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes23serdes_object_json_objcENS_9allocatorIS3_EEEE
>N13EspressoLight17espresso_root_objE
N13EspressoLight13espresso_planE
NSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20espresso_plan_tracerENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso32pass_multi_head_prune_undeclaredENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN13EspressoLight11plan_task_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso9factory_tINS1_6SerDes21generic_serdes_objectEEENS_9allocatorIS5_EEEE
N8Espresso9factory_tINS_6SerDes21generic_serdes_objectEEE
NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10engine_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine6engineENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14QuantSimEngine6engineENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine6engineENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15DummyBNNSEngine6engineENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine6engineENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8IREngine6engineENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12brick_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23abstract_engine_factoryENS_9allocatorIS2_EEEE
fff?w
N8Espresso6SerDes13layer_io_baseE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_12no_op_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_12no_op_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_convolution_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_convolution_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_18generic_lrn_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_18generic_lrn_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_pool_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_pool_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_softmax_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_softmax_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_inner_product_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_inner_product_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_38generic_inner_product_quantized_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_38generic_inner_product_quantized_kernelEEE
N8Espresso38generic_inner_product_quantized_kernelE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_concat_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_concat_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_23generic_upsample_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_23generic_upsample_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_elementwise_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_elementwise_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_20generic_split_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_20generic_split_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_deconvolution_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_deconvolution_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_convolution_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_convolution_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_39generic_convolution_weights_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_39generic_convolution_weights_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_pool_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_pool_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_concat_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_concat_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_32generic_softmax_loss_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_32generic_softmax_loss_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_25generic_activation_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_25generic_activation_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_activation_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_activation_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_bias_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_bias_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_bias_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_bias_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_batchnorm_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_batchnorm_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_29generic_batchnorm_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_29generic_batchnorm_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_27generic_l2_normalize_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_27generic_l2_normalize_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_32generic_l2_normalize_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_32generic_l2_normalize_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_33generic_inner_product_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_33generic_inner_product_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_41generic_inner_product_weights_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_41generic_inner_product_weights_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_elementwise_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_elementwise_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_dropout_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_dropout_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_27generic_dropout_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_27generic_dropout_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_20generic_axpby_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_20generic_axpby_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_load_constant_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_load_constant_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_context_transfer_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_context_transfer_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_reshape_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_reshape_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_tile_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_tile_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_reduce_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_reduce_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_18generic_rnn_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_18generic_rnn_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_23generic_rnn_arch_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_23generic_rnn_arch_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_general_padding_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_general_padding_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_transpose_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_transpose_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_flatten_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_flatten_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_sequence_concat_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_sequence_concat_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_sequence_reverse_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_sequence_reverse_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_sequence_repeat_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_sequence_repeat_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_crop_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_crop_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_35generic_prediction_smoothing_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_35generic_prediction_smoothing_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_29generic_space_to_depth_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_29generic_space_to_depth_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_20generic_slice_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_20generic_slice_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_broadcast_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_broadcast_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_cast_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_cast_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_compute_stats_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_compute_stats_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_lambda_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_lambda_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_patch_extractor_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_patch_extractor_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_crop_and_resize_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_crop_and_resize_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_dynamic_quantize_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_dynamic_quantize_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_33generic_dynamic_dequantize_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_33generic_dynamic_dequantize_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_34generic_spatial_transformer_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_34generic_spatial_transformer_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_cf_branch_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_cf_branch_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_cf_jump_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_cf_jump_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_cf_call_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_cf_call_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_cf_return_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_cf_return_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_get_shape_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_get_shape_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_topk_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_topk_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_gather_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_gather_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_29generic_general_concat_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_29generic_general_concat_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_20generic_alloc_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_20generic_alloc_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_load_global_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_load_global_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_27generic_store_global_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_27generic_store_global_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_20generic_cf_if_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_20generic_cf_if_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_cf_loop_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_cf_loop_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_cf_for_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_cf_for_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_cf_end_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_cf_end_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_cf_else_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_cf_else_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_copy_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_copy_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_scatter_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_scatter_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_load_random_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_load_random_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_20generic_range_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_20generic_range_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_27generic_batch_matmul_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_27generic_batch_matmul_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_matrix_band_part_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_matrix_band_part_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_fill_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_fill_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_tensor_zero_pad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_tensor_zero_pad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_squeeze_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_squeeze_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_expand_dims_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_expand_dims_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_27generic_array_gather_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_27generic_array_gather_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_multinomial_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_multinomial_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_instancenorm_1d_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_instancenorm_1d_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_phi_virtual_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_phi_virtual_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_25generic_gumbel_max_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_25generic_gumbel_max_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_builtin_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_builtin_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_25generic_transplant_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_25generic_transplant_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_general_slice_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_general_slice_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_23generic_stack_nd_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_23generic_stack_nd_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_23generic_split_nd_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_23generic_split_nd_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_25generic_softmax_nd_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_25generic_softmax_nd_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_sliding_windows_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_sliding_windows_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_reverse_seq_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_reverse_seq_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_cross_entropy_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_cross_entropy_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_38generic_non_maximum_suppression_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_38generic_non_maximum_suppression_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_18generic_sgd_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_18generic_sgd_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_adam_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_adam_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_gather_nd_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_gather_nd_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_25generic_scatter_nd_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_25generic_scatter_nd_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_nonzero_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_nonzero_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_34generic_precompiled_segment_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_34generic_precompiled_segment_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_one_hot_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_one_hot_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_cumsum_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_cumsum_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_dev_op_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_dev_op_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_35generic_sparse_inner_product_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_35generic_sparse_inner_product_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27convolution_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso35convolution_weights_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20pool_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21nonlinearity_grad_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22concat_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso28softmax_loss_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15bias_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20bias_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso25batchnorm_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso28l2_normalize_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso29inner_product_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso37inner_product_weights_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27elementwise_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23dropout_grad_kernel_cpuENS_9allocatorIS2_EEEE
N8Espresso14rnn_kernel_cpuE
N8Espresso4blobIfLi4EEE
N8Espresso44pass_update_absolute_indexes_after_transformE
N8Espresso48analysis_update_absolute_indexes_after_transformE
N13EspressoLight14espresso_errorE
N13EspressoLight22abstract_espresso_planE
?N8Espresso17reduce_kernel_cpuE
NSt3__110__function6__funcIZNK8Espresso11basic_block31is_blob_defined_in_predecessorsERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_13unordered_mapIS9_PS3_NS_4hashIS9_EENS_8equal_toIS9_EENS7_INS_4pairISA_SD_EEEEEEE3$_0NS7_ISO_EEFvRKNS3_11walk_statusEEEE
ZNK8Espresso11basic_block31is_blob_defined_in_predecessorsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_13unordered_mapIS7_PS0_NS1_4hashIS7_EENS1_8equal_toIS7_EENS5_INS1_4pairIS8_SB_EEEEEEE3$_0
N8Espresso14factory_objectE
N8Espresso17generic_factory_tE
N8Espresso23graph_optimization_ruleE
N8Espresso30graph_optimization_rule_simpleE
N8Espresso23rule_convolution_groupsE
N8Espresso20rule_inception_blockE
N8Espresso22rule_1x1_inceptionlikeE
N8Espresso20_rule_bake_batchnormE
N8Espresso30graph_optimization_rule_statusE
N8Espresso20rule_inception_block8status_tE
N8Espresso22rule_1x1_inceptionlike8status_tE
N8Espresso23rule_convolution_groups8status_tE
N8Espresso20_rule_bake_batchnorm8status_tE
NSt3__120__shared_ptr_emplaceIN8Espresso23rule_convolution_groups8status_tENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20rule_inception_block8status_tENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22rule_1x1_inceptionlike8status_tENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20_rule_bake_batchnorm8status_tENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18sequential_builderENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso30graph_optimization_rule_statusENS_9allocatorIS2_EEEE
N8Espresso18pass_reset_pre_ssaE
N8Espresso22analysis_reset_pre_ssaE
NSt3__120__shared_ptr_emplaceIN8Espresso13network_shapeENS_9allocatorIS2_EEEE
N8Espresso15pass_allocationE
N8Espresso19analysis_allocationE
N8Espresso24pass_re_lower_to_networkE
N8Espresso28analysis_re_lower_to_networkE
N@N8Espresso5layerE
0ENSt3__120__shared_ptr_emplaceINS_19basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17blob_storage_mmapENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso3netENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso34pass_constant_if_conditions_resultENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso31analysis_multi_head_program_genENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso5layerENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18pass_reset_pre_ssaENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27pass_multi_head_program_genENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZN8Espresso19dump_network_layersENS_10shared_ptrINS2_3netEEEiRNS2_31dump_network_layers_blobs_stateERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE3$_5NSB_ISG_EEFvRNS_4pairISD_NS3_INS2_23abstract_blob_containerEEEEEEEE
ZN8Espresso19dump_network_layersENSt3__110shared_ptrINS_3netEEEiRNS_31dump_network_layers_blobs_stateERKNS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE3$_5
error
not an error
N6google8protobuf14FatalExceptionE
N6google8protobuf7ClosureE
N6google8protobuf8internal16FunctionClosure0E
N6google8protobuf2io17ArrayOutputStreamE
N6google8protobuf2io25CopyingInputStreamAdaptorE
N6google8protobuf2io26CopyingOutputStreamAdaptorE
N6google8protobuf2io18CopyingInputStreamE
N6google8protobuf2io19CopyingOutputStreamE
N6google8protobuf2io19ZeroCopyInputStreamE
N6google8protobuf2io20ZeroCopyOutputStreamE
N6google8protobuf2io18IstreamInputStreamE
N6google8protobuf2io18IstreamInputStream25CopyingIstreamInputStreamE
N6google8protobuf2io19OstreamOutputStreamE
N6google8protobuf2io19OstreamOutputStream26CopyingOstreamOutputStreamE
N6google8protobuf11MessageLiteE
N6google8protobuf8internal29InternalMetadataWithArenaBaseINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_29InternalMetadataWithArenaLiteEE9ContainerE
N6CoreML13Specification18CategoricalMappingE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_LNS1_14WireFormatLite9FieldTypeE9ELSC_9ELi0EEENS0_11MessageLiteESA_SA_LSC_9ELSC_9ELi0EEE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES9_LNS1_14WireFormatLite9FieldTypeE9ELSB_9ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_LNS1_14WireFormatLite9FieldTypeE9ELSC_9ELi0EEENS0_11MessageLiteESA_SA_LSC_9ELSC_9ELi0EE15MapEntryWrapperE
N6CoreML13Specification18FeatureDescriptionE
N6CoreML13Specification16ModelDescriptionE
N6google8protobuf3MapINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_E8InnerMapE
N6google8protobuf4hashINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N6CoreML13Specification8MetadataE
N6CoreML13Specification17PipelineRegressorE
N6CoreML13Specification18PipelineClassifierE
N6CoreML13Specification5ModelE
N6CoreML13Specification8PipelineE
N6CoreML5ModelE
NSt3__114default_deleteIN6CoreML13Specification5ModelEEE
NSt3__120__shared_ptr_pointerIPN6CoreML13Specification5ModelENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN6CoreML13Specification8MetadataEEE
NSt3__120__shared_ptr_pointerIPN6CoreML13Specification8MetadataENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN6CoreML13Specification16ModelDescriptionEEE
NSt3__120__shared_ptr_pointerIPN6CoreML13Specification16ModelDescriptionENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
N6CoreML13Specification8IdentityE
N6CoreML13Specification12CoreMLModels18VisionFeaturePrintE
N6CoreML13Specification12CoreMLModels24VisionFeaturePrint_SceneE
N6CoreML13Specification13OneHotEncoderE
N6CoreML13Specification12CoreMLModels14TextClassifierE
N6CoreML13Specification6ScalerE
N6CoreML13Specification12CoreMLModels26SoundAnalysisPreprocessingE
N6CoreML13Specification12CoreMLModels33SoundAnalysisPreprocessing_VggishE
N6CoreML13Specification13GLMClassifierE
N6CoreML13Specification25GLMClassifier_DoubleArrayE
N6CoreML13Specification7ImputerE
N6google8protobuf3MapINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN6CoreML13Specification33CustomModel_CustomModelParamValueEE8InnerMapE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6CoreML13Specification33CustomModel_CustomModelParamValueELNS1_14WireFormatLite9FieldTypeE9ELSE_11ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN6CoreML13Specification33CustomModel_CustomModelParamValueELNS1_14WireFormatLite9FieldTypeE9ELSF_11ELi0EEENS0_11MessageLiteESA_SD_LSF_9ELSF_11ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN6CoreML13Specification33CustomModel_CustomModelParamValueELNS1_14WireFormatLite9FieldTypeE9ELSF_11ELi0EEENS0_11MessageLiteESA_SD_LSF_9ELSF_11ELi0EE15MapEntryWrapperE
N6CoreML13Specification11CustomModelE
N6CoreML13Specification33CustomModel_CustomModelParamValueE
N6CoreML13Specification12CoefficientsE
N6CoreML13Specification11DenseVectorE
N6CoreML13Specification10SparseNodeE
N6CoreML13Specification12SparseVectorE
N6CoreML13Specification23SupportVectorClassifierE
N6CoreML13Specification22SupportVectorRegressorE
N6CoreML13Specification19DenseSupportVectorsE
N6CoreML13Specification20SparseSupportVectorsE
N6CoreML13Specification6KernelE
N6CoreML13Specification13SigmoidKernelE
N6CoreML13Specification10PolyKernelE
N6CoreML13Specification9RBFKernelE
N6CoreML13Specification12LinearKernelE
N6CoreML13Specification12CoreMLModels9GazetteerE
N6CoreML13Specification10NormalizerE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEExLNS1_14WireFormatLite9FieldTypeE9ELSC_3ELi0EEENS0_11MessageLiteESA_xLSC_9ELSC_3ELi0EEE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEExLNS1_14WireFormatLite9FieldTypeE9ELSB_3ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEExLNS1_14WireFormatLite9FieldTypeE9ELSC_3ELi0EEENS0_11MessageLiteESA_xLSC_9ELSC_3ELi0EE15MapEntryWrapperE
N6CoreML13Specification11DoubleRangeE
N6CoreML13Specification8Int64SetE
N6CoreML13Specification10Int64RangeE
N6CoreML13Specification12DoubleVectorE
N6CoreML13Specification11FloatVectorE
N6CoreML13Specification11Int64VectorE
N6CoreML13Specification12StringVectorE
N6google8protobuf8internal12MapEntryLiteIxdLNS1_14WireFormatLite9FieldTypeE3ELS4_1ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteIxdLNS1_14WireFormatLite9FieldTypeE3ELS5_1ELi0EEENS0_11MessageLiteExdLS5_3ELS5_1ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteIxdLNS1_14WireFormatLite9FieldTypeE3ELS5_1ELi0EEENS0_11MessageLiteExdLS5_3ELS5_1ELi0EE15MapEntryWrapperE
N6CoreML13Specification16Int64ToDoubleMapE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEdLNS1_14WireFormatLite9FieldTypeE9ELSB_1ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEdLNS1_14WireFormatLite9FieldTypeE9ELSC_1ELi0EEENS0_11MessageLiteESA_dLSC_9ELSC_1ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEdLNS1_14WireFormatLite9FieldTypeE9ELSC_1ELi0EEENS0_11MessageLiteESA_dLSC_9ELSC_1ELi0EE15MapEntryWrapperE
N6CoreML13Specification17StringToDoubleMapE
N6google8protobuf8internal12MapEntryLiteIxNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEELNS1_14WireFormatLite9FieldTypeE3ELSB_9ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteIxNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEELNS1_14WireFormatLite9FieldTypeE3ELSC_9ELi0EEENS0_11MessageLiteExSA_LSC_3ELSC_9ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteIxNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEELNS1_14WireFormatLite9FieldTypeE3ELSC_9ELi0EEENS0_11MessageLiteExSA_LSC_3ELSC_9ELi0EE15MapEntryWrapperE
N6CoreML13Specification16Int64ToStringMapE
N6CoreML13Specification16StringToInt64MapE
N6CoreML13Specification42BayesianProbitRegressor_FeatureValueWeightE
N6CoreML13Specification37BayesianProbitRegressor_FeatureWeightE
N6CoreML13Specification23BayesianProbitRegressorE
N6CoreML13Specification32BayesianProbitRegressor_GaussianE
N6CoreML13Specification12CoreMLModels13WordEmbeddingE
N6CoreML13Specification13BoolParameterE
N6CoreML13Specification15StringParameterE
N6CoreML13Specification15DoubleParameterE
N6CoreML13Specification14Int64ParameterE
NSt3__120__shared_ptr_emplaceIN6CoreML13TreeEnsembles13_TreeEnsembleENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6CoreML13TreeEnsembles20_TreeComputationNodeENS_9allocatorIS3_EEEE
N6CoreML13Specification21NonMaximumSuppressionE
N6CoreML13Specification29NonMaximumSuppression_PickTopE
N6CoreML13Specification38ItemSimilarityRecommender_SimilarItemsE
N6CoreML13Specification25ItemSimilarityRecommenderE
N6CoreML13Specification39ItemSimilarityRecommender_ConnectedItemE
N6CoreML13Specification17FeatureVectorizerE
N6CoreML13Specification29FeatureVectorizer_InputColumnE
N6CoreML13Specification12CoreMLModels10WordTaggerE
N6CoreML13Specification31TreeEnsembleParameters_TreeNodeE
N6CoreML13Specification21TreeEnsembleRegressorE
N6CoreML13Specification22TreeEnsembleClassifierE
N6CoreML13Specification22TreeEnsembleParametersE
N6CoreML13Specification46TreeEnsembleParameters_TreeNode_EvaluationInfoE
NSt3__120__shared_ptr_emplaceIN6CoreML13Specification11FeatureTypeENS_9allocatorIS3_EEEE
N6CoreML13Specification14DictVectorizerE
N6CoreML13Specification39CustomLayerParams_CustomLayerParamValueE
N6CoreML13Specification13AdamOptimizerE
N6CoreML13Specification12SGDOptimizerE
N6CoreML13Specification9OptimizerE
N6CoreML13Specification25MeanSquaredErrorLossLayerE
N6CoreML13Specification32CategoricalCrossEntropyLossLayerE
N6CoreML13Specification9LossLayerE
N6CoreML13Specification23NetworkUpdateParametersE
N6CoreML13Specification26NeuralNetworkPreprocessingE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6CoreML13Specification39CustomLayerParams_CustomLayerParamValueELNS1_14WireFormatLite9FieldTypeE9ELSE_11ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN6CoreML13Specification39CustomLayerParams_CustomLayerParamValueELNS1_14WireFormatLite9FieldTypeE9ELSF_11ELi0EEENS0_11MessageLiteESA_SD_LSF_9ELSF_11ELi0EEE
N6CoreML13Specification12WeightParamsE
N6CoreML13Specification16LSTMWeightParamsE
N6CoreML13Specification16ActivationParamsE
N6CoreML13Specification23BorderAmounts_EdgeSizesE
N6CoreML13Specification6TensorE
N6CoreML13Specification18NeuralNetworkLayerE
N6CoreML13Specification22NeuralNetworkRegressorE
N6CoreML13Specification23NeuralNetworkClassifierE
N6CoreML13Specification32NonMaximumSuppressionLayerParamsE
N6CoreML13Specification29LayerNormalizationLayerParamsE
N6CoreML13Specification25SlidingWindowsLayerParamsE
N6CoreML13Specification23RangeDynamicLayerParamsE
N6CoreML13Specification22RangeStaticLayerParamsE
N6CoreML13Specification15GeluLayerParamsE
N6CoreML13Specification14ErfLayerParamsE
N6CoreML13Specification19GetShapeLayerParamsE
N6CoreML13Specification15TileLayerParamsE
N6CoreML13Specification23SliceDynamicLayerParamsE
N6CoreML13Specification22SliceStaticLayerParamsE
N6CoreML13Specification15ClipLayerParamsE
N6CoreML13Specification15SignLayerParamsE
N6CoreML13Specification16FloorLayerParamsE
N6CoreML13Specification16RoundLayerParamsE
N6CoreML13Specification15CeilLayerParamsE
N6CoreML13Specification18SplitNDLayerParamsE
N6CoreML13Specification17ArgMinLayerParamsE
N6CoreML13Specification17ArgMaxLayerParamsE
N6CoreML13Specification15TopKLayerParamsE
N6CoreML13Specification18SqueezeLayerParamsE
N6CoreML13Specification25ReshapeDynamicLayerParamsE
N6CoreML13Specification22ReshapeLikeLayerParamsE
N6CoreML13Specification24ReshapeStaticLayerParamsE
N6CoreML13Specification22FlattenTo2DLayerParamsE
N6CoreML13Specification21ExpandDimsLayerParamsE
N6CoreML13Specification26ReduceLogSumExpLayerParamsE
N6CoreML13Specification26ReduceSumSquareLayerParamsE
N6CoreML13Specification23ReduceLogSumLayerParamsE
N6CoreML13Specification21ReduceMeanLayerParamsE
N6CoreML13Specification21ReduceProdLayerParamsE
N6CoreML13Specification20ReduceSumLayerParamsE
N6CoreML13Specification20ReduceMinLayerParamsE
N6CoreML13Specification20ReduceMaxLayerParamsE
N6CoreML13Specification19ReduceL2LayerParamsE
N6CoreML13Specification19ReduceL1LayerParamsE
N6CoreML13Specification34CategoricalDistributionLayerParamsE
N6CoreML13Specification33RandomBernoulliDynamicLayerParamsE
N6CoreML13Specification32RandomBernoulliStaticLayerParamsE
N6CoreML13Specification30RandomBernoulliLikeLayerParamsE
N6CoreML13Specification31RandomUniformDynamicLayerParamsE
N6CoreML13Specification30RandomUniformStaticLayerParamsE
N6CoreML13Specification28RandomUniformLikeLayerParamsE
N6CoreML13Specification30RandomNormalDynamicLayerParamsE
N6CoreML13Specification29RandomNormalStaticLayerParamsE
N6CoreML13Specification27RandomNormalLikeLayerParamsE
N6CoreML13Specification26ConstantPaddingLayerParamsE
N6CoreML13Specification32RankPreservingReshapeLayerParamsE
N6CoreML13Specification16StackLayerParamsE
N6CoreML13Specification27ScatterAlongAxisLayerParamsE
N6CoreML13Specification26GatherAlongAxisLayerParamsE
N6CoreML13Specification20ScatterNDLayerParamsE
N6CoreML13Specification19GatherNDLayerParamsE
N6CoreML13Specification18ScatterLayerParamsE
N6CoreML13Specification17GatherLayerParamsE
N6CoreML13Specification30DivideBroadcastableLayerParamsE
N6CoreML13Specification32MultiplyBroadcastableLayerParamsE
N6CoreML13Specification32SubtractBroadcastableLayerParamsE
N6CoreML13Specification32FloorDivBroadcastableLayerParamsE
N6CoreML13Specification27ModBroadcastableLayerParamsE
N6CoreML13Specification27MinBroadcastableLayerParamsE
N6CoreML13Specification27MaxBroadcastableLayerParamsE
N6CoreML13Specification27AddBroadcastableLayerParamsE
N6CoreML13Specification29BroadcastToDynamicLayerParamsE
N6CoreML13Specification28BroadcastToStaticLayerParamsE
N6CoreML13Specification26BroadcastToLikeLayerParamsE
N6CoreML13Specification26LowerTriangularLayerParamsE
N6CoreML13Specification26UpperTriangularLayerParamsE
N6CoreML13Specification25MatrixBandPartLayerParamsE
N6CoreML13Specification23WhereNonZeroLayerParamsE
N6CoreML13Specification15Exp2LayerParamsE
N6CoreML13Specification27PowBroadcastableLayerParamsE
N6CoreML13Specification16AtanhLayerParamsE
N6CoreML13Specification16AcoshLayerParamsE
N6CoreML13Specification16AsinhLayerParamsE
N6CoreML13Specification15TanhLayerParamsE
N6CoreML13Specification15CoshLayerParamsE
N6CoreML13Specification15SinhLayerParamsE
N6CoreML13Specification15AtanLayerParamsE
N6CoreML13Specification15AcosLayerParamsE
N6CoreML13Specification15AsinLayerParamsE
N6CoreML13Specification14TanLayerParamsE
N6CoreML13Specification14CosLayerParamsE
N6CoreML13Specification14SinLayerParamsE
N6CoreML13Specification29WhereBroadcastableLayerParamsE
N6CoreML13Specification22FillDynamicLayerParamsE
N6CoreML13Specification21FillStaticLayerParamsE
N6CoreML13Specification19FillLikeLayerParamsE
N6CoreML13Specification25LoadConstantNDLayerParamsE
N6CoreML13Specification21ReverseSeqLayerParamsE
N6CoreML13Specification18ReverseLayerParamsE
N6CoreML13Specification20SoftmaxNDLayerParamsE
N6CoreML13Specification19ConcatNDLayerParamsE
N6CoreML13Specification24BatchedMatMulLayerParamsE
N6CoreML13Specification20TransposeLayerParamsE
N6CoreML13Specification17CustomLayerParamsE
N6CoreML13Specification28BiDirectionalLSTMLayerParamsE
N6CoreML13Specification29UniDirectionalLSTMLayerParamsE
N6CoreML13Specification10LSTMParamsE
N6CoreML13Specification14GRULayerParamsE
N6CoreML13Specification26SimpleRecurrentLayerParamsE
N6CoreML13Specification25SequenceRepeatLayerParamsE
N6CoreML13Specification32MeanVarianceNormalizeLayerParamsE
N6CoreML13Specification21DotProductLayerParamsE
N6CoreML13Specification14MinLayerParamsE
N6CoreML13Specification14MaxLayerParamsE
N6CoreML13Specification18AverageLayerParamsE
N6CoreML13Specification15CropLayerParamsE
N6CoreML13Specification17ReduceLayerParamsE
N6CoreML13Specification16SliceLayerParamsE
N6CoreML13Specification25ReorganizeDataLayerParamsE
N6CoreML13Specification18PermuteLayerParamsE
N6CoreML13Specification18ReshapeLayerParamsE
N6CoreML13Specification18FlattenLayerParamsE
N6CoreML13Specification22L2NormalizeLayerParamsE
N6CoreML13Specification23LoadConstantLayerParamsE
N6CoreML13Specification16ScaleLayerParamsE
N6CoreML13Specification15BiasLayerParamsE
N6CoreML13Specification21CropResizeLayerParamsE
N6CoreML13Specification25ResizeBilinearLayerParamsE
N6CoreML13Specification19UpsampleLayerParamsE
N6CoreML13Specification24UnaryFunctionLayerParamsE
N6CoreML13Specification19MultiplyLayerParamsE
N6CoreML13Specification14AddLayerParamsE
N6CoreML13Specification16SplitLayerParamsE
N6CoreML13Specification18SoftmaxLayerParamsE
N6CoreML13Specification14LRNLayerParamsE
N6CoreML13Specification17ConcatLayerParamsE
N6CoreML13Specification18PaddingLayerParamsE
N6CoreML13Specification37PaddingLayerParams_PaddingReplicationE
N6CoreML13Specification36PaddingLayerParams_PaddingReflectionE
N6CoreML13Specification34PaddingLayerParams_PaddingConstantE
N6CoreML13Specification18PoolingLayerParamsE
N6CoreML13Specification39PoolingLayerParams_ValidCompletePaddingE
N6CoreML13Specification20BatchnormLayerParamsE
N6CoreML13Specification22EmbeddingNDLayerParamsE
N6CoreML13Specification20EmbeddingLayerParamsE
N6CoreML13Specification23InnerProductLayerParamsE
N6CoreML13Specification22ConvolutionLayerParamsE
N6CoreML13Specification29LookUpTableQuantizationParamsE
N6CoreML13Specification24LinearQuantizationParamsE
N6CoreML13Specification18QuantizationParamsE
N6CoreML13Specification18BoxCoordinatesModeE
N6CoreML13Specification12SamplingModeE
N6CoreML13Specification11SamePaddingE
N6CoreML13Specification12ValidPaddingE
N6CoreML13Specification13BorderAmountsE
N6CoreML13Specification21LogicalNotLayerParamsE
N6CoreML13Specification21LogicalXorLayerParamsE
N6CoreML13Specification20LogicalOrLayerParamsE
N6CoreML13Specification21LogicalAndLayerParamsE
N6CoreML13Specification19NotEqualLayerParamsE
N6CoreML13Specification16EqualLayerParamsE
N6CoreML13Specification20LessEqualLayerParamsE
N6CoreML13Specification19LessThanLayerParamsE
N6CoreML13Specification23GreaterEqualLayerParamsE
N6CoreML13Specification22GreaterThanLayerParamsE
N6CoreML13Specification15CopyLayerParamsE
N6CoreML13Specification23LoopContinueLayerParamsE
N6CoreML13Specification20LoopBreakLayerParamsE
N6CoreML13Specification15LoopLayerParamsE
N6CoreML13Specification17BranchLayerParamsE
N6CoreML13Specification28ActivationParametricSoftplusE
N6CoreML13Specification18ActivationSoftplusE
N6CoreML13Specification18ActivationSoftsignE
N6CoreML13Specification25ActivationThresholdedReLUE
N6CoreML13Specification13ActivationELUE
N6CoreML13Specification15ActivationPReLUE
N6CoreML13Specification21ActivationSigmoidHardE
N6CoreML13Specification16ActivationLinearE
N6CoreML13Specification17ActivationSigmoidE
N6CoreML13Specification20ActivationScaledTanhE
N6CoreML13Specification14ActivationTanhE
N6CoreML13Specification19ActivationLeakyReLUE
N6CoreML13Specification14ActivationReLUE
N6CoreML13Specification22NeuralNetworkMeanImageE
N6CoreML13Specification24NeuralNetworkImageScalerE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN6CoreML13Specification39CustomLayerParams_CustomLayerParamValueELNS1_14WireFormatLite9FieldTypeE9ELSF_11ELi0EEENS0_11MessageLiteESA_SD_LSF_9ELSF_11ELi0EE15MapEntryWrapperE
N6CoreML13Specification13NeuralNetworkE
N6CoreML13Specification24SquaredEuclideanDistanceE
N6CoreML13Specification17SingleKdTreeIndexE
N6CoreML13Specification11LinearIndexE
N6CoreML13Specification16UniformWeightingE
N6CoreML13Specification21NearestNeighborsIndexE
N6CoreML13Specification24InverseDistanceWeightingE
N6CoreML13Specification27KNearestNeighborsClassifierE
N6CoreML13Specification15LinkedModelFileE
N6CoreML13Specification11LinkedModelE
N6CoreML13Specification21ArrayFeatureExtractorE
N6CoreML13Specification12GLMRegressorE
N6CoreML13Specification24GLMRegressor_DoubleArrayE
N6CoreML13Specification9SizeRangeE
N6CoreML13Specification22ArrayFeatureType_ShapeE
N6CoreML13Specification26ImageFeatureType_ImageSizeE
N6CoreML13Specification11FeatureTypeE
N6CoreML13Specification19SequenceFeatureTypeE
N6CoreML13Specification21DictionaryFeatureTypeE
N6CoreML13Specification16ArrayFeatureTypeE
N6CoreML13Specification27ArrayFeatureType_ShapeRangeE
N6CoreML13Specification33ArrayFeatureType_EnumeratedShapesE
N6CoreML13Specification16ImageFeatureTypeE
N6CoreML13Specification31ImageFeatureType_ImageSizeRangeE
N6CoreML13Specification37ImageFeatureType_EnumeratedImageSizesE
N6CoreML13Specification17StringFeatureTypeE
N6CoreML13Specification17DoubleFeatureTypeE
N6CoreML13Specification16Int64FeatureTypeE
3b
=n
?}
=q
=q
=q
=n
?}
elementwise
Invalid network: Layer name missing.
Invalid network: Expected at least one input for layer: '
Invalid network: Expected at least one output for layer: '
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
Validate number of inputs and outputs: Unknown layer type
Invalid number of inputs (
) and outputs (
) to layer: '
Layer name: '
'. Input and output data blob names cannot be the same.
Input '
' of layer '
' not found in any of the outputs of the preceeding layers.
Invalid data blob: '
' shape (C,H,W = 
) for output of layer: '
Model requires a sequence longer than the maximum.
Error in neural network compiler computing minimum sequence length for the model.
Invalid height and width for the image input.
Input MLMultiArray cannot be %d dimensional (must be between 1 and 5 dimensions).
Neural networks only accept image and array inputs.
Attempted to compile a non-neural-network model as a neural network.
Encountered an unexpected error while compiling a neural network model.
Encountered an error while compiling a neural network model: %@
generic
Neural Network Multi-Array input shape mapping cannot be 'RANK5_ARRAY_MAPPING' if the network contains a layer added in version 3 (iOS 13) or later.
Neural Network Multi-Array input shape mapping cannot be 'RANK5_ARRAY_MAPPING' if the image input Shape mapping is not 'RANK5_IMAGE_MAPPING'.
Unknown error in compiling network layers.
Unknown error in building network shapes.
model
.espresso.net
.espresso.shape
.espresso.weights
Unknown error in optimizing network for GPU.
Error saving network to file.
neural_network_optionals
Error in serializing blob name to rank dictionary to json.
model.rank.info.json
Input MLMultiArray cannot be %d dimensional (must have at least 1 dimension).
Input image has invalid colorspace.
Unable to map image preprocessing feature name to any given image input name.
_lossValue
Error in initalizing categorical cross entropy loss layer. This loss layer might be invalid.
Error in initalizing mean squared error loss layer. This loss layer might be invalid.
Current loss layer is not supported.
Current optimizer is not supported.
Error in initializing updatable model.
Error in creating updatable model.
kUpdateLossTargetName
kUpdateLossInputName
kUpdateLossOutputName
NetworkUpdateParameters
Failed to archive update parameters.
Error in initalizing optimizer. The parameters might be invalid..
unable to serialize object
updateParameters
gather_nd
placeHolderInputName
Neural network classifier does not contain class labels.
The size of the output layer '%@' in the neural network does not match the number of classes in the classifier.
Classify can only be called on neural network classifiers.
Regress can only be called on neural network regressors.
com.apple.CoreMLBatchProcessingQueue
com.apple.CoreMLNNProcessingQueue
Invalid path %@ to compiled model.
.net
.shape
Invalid path to compiled model.
Unable to load information from compiled model path %@.
layer_shapes
Model .net file not found.
Error in declaring network.
The model expects input feature %@ to be an image, but the input is of type %ld.
Input image feature %@ does not match model description
Required input feature not passed to neural network.
Image inputs are not supported on watchOS.
Failed to lock pixel buffer
Error binding image input buffer %@.
Error binding input buffer %@.
Error passing input %s to NN engine.
Error passing input %@ to NN engine.
Unsupported input type for neural network.
Error checking if an output blob is dynamic or not.
Error binding output buffer.
Image value is nil.
Unable to obtain strong reference for NN Engine for single evaluation.
Error computing NN outputs.
v8@?0
v32@?0@"NSNumber"8Q16^c24
v32@?0@"NSArray"8Q16^c24
Image output %@ is missing width, height, and pixel info in its description
Batch or sequence image output is unsupported for image output %@
Failed to convert output %@ to image
None of the features required to evaulate this model are produced by the feature provider which is first among the batch of input feature providers.
The model requires these input features:
    %@
The first batch input feature provider provides these input features:
Ensure that each of the batch input feature providers provides all the input features with types matching those required to evaluate the model.
Failed to build clean before reshape.
Unable to select network configuration for: %@
Passing empty input dictionary for resetSizes.
Incorrect input number of dimensions (must be between 1, 3, or 5 dimensions.
Incorrect input number of dimensions (must be more than 1).
Cannot evaluate a batch of size %@, which is larger than maximum of %@.
Cannot evaluate a sequence of length %@, which is longer than maximum of %@ for bidirectional models.
Failure setting up to dynamically allocate for sequence size.
Failure dynamically resizing for sequence length.
Error in re-declaring input %@.
Error in declaring output %@.
Error in passing image pre-processing parameters to network.
Error in building plan.
Failure checking availability of plan submit.
This neural network model does not have a parameter for requested key %@. Note: only updatable neural network models can provide parameter values and these values are only accessible in the context of an MLUpdateTask completion or progress handler.
modelDescription
T@"MLModelDescription",&,N
interface
T@"MLModelInterface",R
metadata
T@"MLModelMetadata",R
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
numInputs
TQ,R,N,V_numInputs
numOutputs
TQ,R,N,V_numOutputs
inputBuffers
T{vector<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >=^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}{__compressed_pair<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > *, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >=^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}}},N,V_inputBuffers
outputBuffers
T{vector<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >=^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}{__compressed_pair<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > *, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >=^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}}},N,V_outputBuffers
usingCPU
Tc,N,V_usingCPU
plan
T^v,N,V_plan
network
T{?=^vi},N,V_network
params
T{map<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_params
precision
Ti,N,V_precision
engine
Ti,N,V_engine
Ti,N,V_qos
context
T^v,N,V_context
isEspresoBiasPreprocessingShared
TB,N,V_isEspresoBiasPreprocessingShared
widths
T{map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_widths
heights
T{map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_heights
T{map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_ks
batches
T{map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_batches
sequences
T{map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_sequences
ranks
T{map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_ranks
classLabels
T@"NSArray",&,N,V_classLabels
classScoreVectorName
T@"NSString",&,N,V_classScoreVectorName
probDict
T@"MLProbabilityDictionary",&,N,V_probDict
modelFilePath
T@"NSString",&,N,V_modelFilePath
optionalInputTypes
T{map<std::__1::basic_string<char>, MLOptionalNNInputType, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, MLOptionalNNInputType> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_optionalInputTypes
hasBidirectionalLayer
TB,N,V_hasBidirectionalLayer
hasOptionalInputSequenceConcat
TB,N,V_hasOptionalInputSequenceConcat
bufferSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,V_bufferSemaphore
espressoQueue
T@"NSObject<OS_dispatch_queue>",&,V_espressoQueue
predictionsQueue
T@"NSObject<OS_dispatch_queue>",&,V_predictionsQueue
bufferAvailable
T{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}},V_bufferAvailable
submitSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,V_submitSemaphore
isGPUPathForbidden
Tc,V_isGPUPathForbidden
isANEPathForbidden
Tc,V_isANEPathForbidden
flexibleShapesConfigNamesInNet
T{set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > >={__tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char> > >=Q}}},V_flexibleShapesConfigNamesInNet
currentConfigurationName
T{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}},V_currentConfigurationName
OutputBlobIsDynamic
T{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_OutputBlobIsDynamic
ndArrayInterpretation
Tc,N,V_ndArrayInterpretation
imagePreprocessingParameters
T@"NSDictionary",&,N,V_imagePreprocessingParameters
blobNameToRank
T@"NSDictionary",&,N,V_blobNameToRank
inputLayers
T@"NSArray",R,&,N,V_inputLayers
outputLayers
T@"NSArray",R,&,N,V_outputLayers
hardwareFallbackDetected
Tc,N,V_hardwareFallbackDetected
espressoInputShapes
T@"NSDictionary",&,N,V_espressoInputShapes
espressoInputStrides
T@"NSDictionary",&,N,V_espressoInputStrides
map::at:  key not found
/System/Library/Frameworks/SoundAnalysis.framework/SoundAnalysis
Feature '%@' is not provided
Cannot merge batch of size %@ with batch of size %@
count
Tq,R,N
first
T@"<MLBatchProvider>",&,N,V_first
second
T@"<MLBatchProvider>",&,N,V_second
Invalid window starting at %@ of length %@ for batch size %@
fullBatch
T@"<MLBatchProvider>",&,N,V_fullBatch
startIndex
Tq,N,V_startIndex
windowLength
Tq,N,V_windowLength
indices
T@"NSArray",&,N,V_indices
Expected to vectorize into matrix, but was passed a %@ multiarray
Row count of matrix (%@) does not match batch size (%@)
The must be the same value count for each feature. Feature '%@' has %@ values. Expected %@
Failed to determine type of feature '%@'.
Error initializing sample $@ of feature `%@`
array
T@"NSArray",R,N,V_array
Custom model implmenetantion class named '%@' does not conform to MLCustomModel protocol
Parameter '%s' has no value
Model type is not a CustomModel
customModel
T@"NSObject<MLCustomModel>",&,V_customModel
Invalid array shape %@ for converting to gray image
Failed to create temporary buffer for conversion to image
Failed to create gray image %@ x %@
Failed to convert planar to BGRAX888: Code=%@
Failed to create BGRA image %@ x %@
Rank preserving reshape layer '
': input/output rank greater than 5 not supported currently
reshape
Input %@-d shape is not the allowed, expected %@-d
Size (%@) of dimension (%@) is not in allowed range (%@..%@)
Shape (%@) was not in enumerated set of allowed shapes
sizeRangeForDimension
type
shapeSet
supportsSecureCoding
Tc,R
T@"NSOrderedSet",R,N,V_shapeSet
Tq,R,N,V_type
T@"NSArray",R,N,V_sizeRangeForDimension
enumeratedShapes
T@"NSArray",R,N
Pipeline is not marked as updatable to perform update.
Updatable model index is out of range.
Failed to load updatable sub-model at %lu
Failed to carry forward results for model %llu in pipeline
model%llu
%@/%@
updatableModelIndicies
T{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}},R,V_updatableModelIndicies
progressHandlers
T@"MLUpdateProgressHandlers",&,V_progressHandlers
dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,V_dispatchQueue
MLDictionaryConstraint cannot check undefined values
MLDictionaryConstraint only allows Dictionary values
Dicitonary keys are not all expected type %@
String
Int64
keyType
Tq,R,N,V_keyType
kVPoints
kVPointsL2Squared
kNumDataPoints
kNumDimensions
Unexpected dimensionality of update data
Training data is empty
numDataPoints
TQ,N,V_numDataPoints
numDimensions
TQ,N,V_numDimensions
Lookup table size incorrect.
Unrecognizable quantization parameters
Unrecognizable linear quantization scale parameter length.
Quantization bias should have the same length as scale if it exists
per_ch_qscale
per_ch_qbias
lut_to_float32
usesCPUOnly
classifyTopK
maxComputationBatchSize
TQ,V_classifyTopK
useCPUOnly
TQ,V_maxComputationBatchSize
Tc,N,V_usesCPUOnly
restrictNeuralNetworksToUseCPUOnly
Tc,V_restrictNeuralNetworksToUseCPUOnly
restrictNeuralNetworksFromUsingANE
Tc,V_restrictNeuralNetworksFromUsingANE
isNeuralNetworkGPUPathForbidden
Tc,R,N,V_isNeuralNetworkGPUPathForbidden
featureNames
T@"NSSet",R,N
dictionary
T@"NSDictionary",&,N,V_dictionary
ScatterAlongAxis layer: '
': unknown value for parameter 'mode'.
scatter_nd
Invalid URL for .mlmodel.
Model at %@ is not in the expected format
Failed to open model at %@
Failed to unarchive model at %@
Unable to extract model type from stream in compiled model: %@
No known class for loading model type %@
IO Error loading model from compiled model archive: %@
Unable to load model
Loading class must conform to serializable protocols
Model type %@ is not updatable.
MLModelType_pipelineClassifier
MLModelType_pipelineRegressor
MLModelType_pipeline
MLModelType_glmRegressor
MLModelType_supportVectorRegressor
MLModelType_treeEnsembleRegressor
MLModelType_neuralNetworkRegressor
MLModelType_bayesianProbitRegressor
MLModelType_glmClassifier
MLModelType_supportVectorClassifier
MLModelType_treeEnsembleClassifier
MLModelType_neuralNetworkClassifier
MLModelType_kNearestNeighborsClassifier
MLModelType_neuralNetwork
MLModelType_itemSimilarityRecommender
MLModelType_customModel
MLModelType_linkedModel
MLModelType_oneHotEncoder
MLModelType_imputer
MLModelType_featureVectorizer
MLModelType_dictVectorizer
MLModelType_scaler
MLModelType_categoricalMapping
MLModelType_normalizer
MLModelType_arrayFeatureExtractor
MLModelType_nonMaximumSuppression
MLModelType_identity
MLModelType_textClassifier
MLModelType_wordTagger
MLModelType_visionFeaturePrint
MLModelType_soundAnalysisPreprocessing
MLModelType_gazetteer
MLModelType_wordEmbedding
INVALID
dryRun
Tc,V_dryRun
platform
T@"NSString",&,V_platform
platformVersion
T@"NSString",&,V_platformVersion
outputFiles
T@"NSArray",&,V_outputFiles
compiler error: 
Error reading protobuf spec. %s
mlmodelc
%@ %@
%@ No known class for compiling model type %@
%@ Invalid compiling class %@ for model type %@
%@ Error reading protobuf spec. %s
No known class for compiling model type %@
Invalid compiling class %@ for model type %@
sequence_repeat
sequence_concat
concat
Input shapes must be equal for layer: '
Input shapes (height and width dimensions) must be equal for layer: '
strides must be 
 elements for shape
Shape must have at least one element
Permute Layer: axis parameter must of length 4
transpose
_tmp_
number of output channels = 
 not allowed in layer 
number of input channels = 
inner_product
Size of weights = 
 is not equal to size of the product of input and output channels = 
 in layer 
Failed to copy empty or invalid weights to kernel
Error converting float16 biases
Size of quantized weights (in bytes) = 
 is smaller than the total bytes required for the product of input and output channels = 
for 
-bit quantization in layer 
Size of bias = 
 is not equal to the output channels = 
Size of quantized bias is insufficient for Inner Product layer 
Inner product layer: '
' : Product of input blob dimensions C,H,W (
) must be equal to the parameter 'inputChannels' (
Models must have one or more inputs
Feature missing a name
Feature description 
 must specify a valid feature type.
Description of multiarray feature '
' has an invalid shape. The shape has zero-length or is missing.
' has an invalid shape. Element 
 has non-positive value 
Filled in missing dataType of multiarray feature '
' to be DOUBLE
Description of dictionary feature '
' must contain a key type of either Int64 or String.
Description of image feature '
' has missing or non-positive width 
' has missing or non-positive height 
' has missing or invalid colorspace. It must be RGB, BGR or GRAYSCALE.
Feature description has an unspecified or invalid type for feature '
Upgraded specification version from 
 to 
 because this model makes use of functionality only available on iOS 12+
 because this model makes use of functionality only available on iOS 11.2+
CodedObject
_lrn_out
_mul
general_slice
Initialization of Gazetteer parameters failed
revision
TQ,V_revision
language
T@"NSString",&,V_language
inputFeatureName
T@"NSString",&,V_inputFeatureName
outputFeatureName
T@"NSString",&,V_outputFeatureName
modelParameterData
T@"NSData",&,V_modelParameterData
labelNames
T@"NSArray",&,V_labelNames
T@"NSDictionary",&,V_metadata
Model type is not a Gazetteer
Model description is invalid
NaturalLanguage framework not available on this OS version
Invalid parameters for Gazetteer
parameters.modelParameterData does not exist or is not a NSData
initialization of gazetteer model with model data failed
Input string feature '%@' not found
Gazette does not contain input string '%@'. 
word
label
This is a gazetteer model (version %lu) which classifies %@ text according to set {
This is a gazetteer model (version %lu) which classifies text according to set {
Unable to save model to %@. %s
parameters
T@"MLAppleGazetteerParameters",R,V_parameters
_post_scale
_post_scale_shift
_scale
_shift
output size = 
input size = 
Recurrent layer: too many output blobs.
Recurrent layer: too few output blobs.
Recurrent layer: too many input blobs.
GRU layer: must provide 2 activations
_prereverse
sequence_reverse
rnn_arch
Unsupported recurrent non-linearity type.
GRU layer: '
': height dimension of the input blob must be 1.
': width dimension of the input blob must be 1.
format
Ti,V_format
confidenceFeatureName
T@"NSString",&,V_confidenceFeatureName
coordinatesFeatureName
T@"NSString",&,V_coordinatesFeatureName
Data provided in input: %@ is missing feature value for training input: %@
Data provided for %@ has insufficient shape
MLMultiArray value for %@ does not comply with constraint: %@
Failed to create multi array of shape %@
Failed to copy over input multi array
Shape for multi array value of %@ is not allowed
_MultiArray
Image value for %@ does not comply with constraint: %@
Failed to copy over image input
Value for %@ does not comply with constraint in description: %@ (%@)
Failed to derive valid training input from class label
Predicted class is not in expected format
Invalid class label %@ prrovided as input
Input %@ is not in the expected format, expected: %@
dataTensorDictionary
T@"NSDictionary",&,N,V_dataTensorDictionary
values
T@"NSArray",R,N,V_values
stringValues
int64Values
sequence
T@"MLSequence",R,N,V_sequence
featureValues
_load_constant_
load_constant
Convolution layer: '
' , deconvolution does not support weight as input tensor.
' , dilated convolution does not support weight as input tensor.
' , input channels must be divisible by the number of groups.
' , output channels cannot be 0
' , kernel channels cannot be 0
' , if set, kernel size must be of length 2
' , kernel size cannot be 0
' , if set, stride must be of length 2
' , stride cannot be 0
' , if set, dilation factor must be of length 2
' , dilation factor cannot be 0
' , if set, output shape must be of length 2
' , for valid padding, padding border amounts must be specified for both height and width, if set
Same Padding Mode not recognized
Convolution padding type not set
deconvolution
convolution
' , size of weight parameter not equal to the product of kernel sizes, number of kernels and kernel channels
Convolution layer '
' has insufficient convolution weights
' with dynamic weight does not support static bias.
' , size of bias parameter not equal to the number of output channels
Insufficient quantized bias elements in 
' input's channel dimension (
) is not equal to the number of layer parameters  (
Reduce layer: '
': unknown value for parameter 'axis'.
': argmax reduction operation is only supported along single dimensions C, H or W.
reduce
stack_nd
%lld.%lld.%lld
%@%@
majorVersion
Tq,R,V_majorVersion
minorVersion
Tq,R,V_minorVersion
patchVersion
Tq,R,V_patchVersion
variantString
T@"NSString",R,V_variantString
versionNumberString
T@"NSString",R,N
versionString
activation
PReLU Layer: '
': unable to determine the channel dimension of the input blob. 
PReLU Layer: 
 , number of alpha parameters (
) is not equal to the channel dimension (
) of the input
 has insufficent bytes for quantized alpha parameters
params_prelu
Parametric Softplus: alpha and beta parameters must have the same size
Parametric Softplus layer '
' has invalid alpha/beta size
Parametric Softplus: alpha and beta parameters are not provided
softplus_alphas
softplus_betas
Bi dir LSTM layer: must have two weight params
Bi dir LSTM layer (forward lstm): must provide 3 activations
Bi dir LSTM layer (backward lstm): must provide 3 activations
Uni-directional LSTM
W_x_reverse
W_h_reverse
Bi-directional LSTM
b_reverse
p_reverse
BLSTM layer: '
_MLSNVGGishFeatureEmbedding
_SNVGGishFeatureEmbeddingCustomModel
Framework not available on this version
com.apple
Feature embedding not available on this version
Frontend processing does not conform to custom model protocol
Feature embedding failed to init
T@"MLModelDescription",R,N,V_modelDescription
softmax
split
Split layer: '
' , number of outputs = 
 do not divide the input dimension = 
Split layer :
 , number of outputs (
) do not match the parameter nOutputs (
Reorganize Data layer: '
' unknown value for parameter 'mode'.
space_to_depth
Reorganize data layer: '
': 'blockSize' must divide height dimension of the input.
': 'blockSize' must divide width dimension of the input.
': 'blockSize' square must divide channel dimension of the input.
(%f, %f), 
Padding layer: 
 , pad amounts must be specified for both height and width, if set
Padding Type not set
general_padding
Execution Profile not recognized.
ERROR: profile=
; idx=
; ref_value=
; pred=
Validation failure loading ML tree model; possibly corrupt image.
inputs: %@
outputs: %@
predictedFeatureName: %@
predictedProbabilitiesName: %@
updatable: %@
trainingInputs: %@
parameters: %@
metadata: %@
inputDescriptionsByName
outputDescriptionsByName
predictedFeatureName
predictedProbabilitiesName
trainingInputDescriptionsByName
isUpdatable
parameterDescriptionsByKey
modelURL
inputFeatureNames
T@"NSOrderedSet",&,V_inputFeatureNames
outputFeatureNames
T@"NSOrderedSet",&,V_outputFeatureNames
T@"NSURL",&,N,V_modelURL
Tc,N,V_isUpdatable
T@"NSDictionary",&,N,V_trainingInputDescriptionsByName
T@"NSDictionary",&,N,V_parameterDescriptionsByKey
T@"NSDictionary",R,N,V_inputDescriptionsByName
T@"NSDictionary",R,N,V_outputDescriptionsByName
T@"NSString",R,C,N,V_predictedFeatureName
T@"NSString",R,C,N,V_predictedProbabilitiesName
T@"NSDictionary",R,N,V_metadata
defaultValue
numericConstraint
parameterKey: %@
defaultValue: %@
numericConstraint: %@
T@"MLParameterKey",&,N,V_key
T@,&,N,V_defaultValue
T@"MLNumericConstraint",&,N,V_numericConstraint
model.mlmodel
%@ does not exist
(Loaded)
(Failed Load)
(Not loaded)
Model is not a classifier.
MLModelAsset: classifierWithError: load failed.
Model is not a regressor.
ranLoad
Tc,V_ranLoad
asset
T@"NSObject<MLModeling>",&,V_asset
loadConfiguration
T@"MLModelConfiguration",R,N,V_loadConfiguration
compiledURL
T@"NSURL",R,V_compiledURL
T@"<MLModeling>",R,N
regressor
T@"<MLRegressor>",R,N
classifier
T@"<MLClassifier>",R,N
Pooling layer: 
 , if set, kernel size must be of length 2
 , kernel size cannot be 0
 , if set, stride must be of length 2
 , stride cannot be 0
 , for valid padding, padding border amounts must be specified for both height and width, if set
 , for include last pixel padding, padding amounts must be of length 2, if set
Pooling padding type not set
pool
numerator
denominator
_numerator_reduce_mean_
reduce_mean
_temp
temp
_denominator_reduce_l2_
reduce_l2
square_of_denominator
_denominator_
numerator_div_denominator
gamma
beta
numerator_div_denominator_mul_gamma
Input
Unrecognizable Neural Network type.
Unable to read 
weight elements.
quantized weight elements from byte stream.
Unrecognizable weight parameter type.
Mean image preprocessor input blob ('
') not found. 
_preprocessed
mean_image_
Mean Image Preprocessing: mean image size must be same as input image size.
load_constant_mean_image_
elementwise_add_mean_image_
isOrderedBgr
isGrayScale
blueBias
greenBias
redBias
grayBias
scale
compiler major version for compiled model is %@ and is more recent than this framework major version %@.
transform_params
layers
encoder_bidirectional_mode
model.espresso.net
model_updatable.params
Error in unarchiving updatable params.
bottom
inputLayerNames
T@"NSArray",R,&,N,V_inputLayerNames
outputLayerNames
T@"NSArray",R,&,N,V_outputLayerNames
name
T@"NSString",&,N,V_name
inputDescription
T@"NSDictionary",&,N,V_inputDescription
outputDescription
T@"NSDictionary",&,N,V_outputDescription
imageParameters
T@"NSDictionary",&,N,V_imageParameters
configurationList
T@"NSArray",&,N,V_configurationList
hasDynamicLayer
TB,N,V_hasDynamicLayer
T@"NSArray",&,V_classLabels
T@"NSString",&,V_classScoreVectorName
transformDesc
T@"MLModel",&,V_transformDesc
Tc,V_ndArrayInterpretation
imagePreprocessingParams
T@"NSDictionary",&,N,V_imagePreprocessingParams
updatableModelCompiledParams
T@"MLNeuralNetworksCompileTimeParams",&,N,V_updatableModelCompiledParams
Initialization of Text classifier parameters failed
Model type is not a Word tagger
Invalid parameters for Text Classifier
initialization of text classifier model with model data failed
Prediction failed
Input text
Text label
This model is a text classifier (version %lu) which classifies %@ text according to set {
This model is a text classifier (version %lu) which classifies text according to set {
T@"MLAppleTextClassifierParameters",R,V_parameters
numberOfDimensions
TQ,V_numberOfDimensions
weightingScheme
Tq,V_weightingScheme
indexType
Tq,V_indexType
leafSize
TQ,V_leafSize
defaultLabel
T@"NSObject",&,V_defaultLabel
nearestLabelsFeatureName
T@"NSString",&,V_nearestLabelsFeatureName
nearestDistancesFeatureName
T@"NSString",&,V_nearestDistancesFeatureName
Interface type is not an ItemSimilarityRecommender
Could not construct item similarity recommender: %@
Internal error: model too large to be compiled.
Internal Error: item index out of bounds.
Input sequence of items for item similarity recommender must be strings or integers.
Input sequence of items for item similarity recommender with string item ids must be strings.
Input sequence of items for item similarity recommender with integer item ids must be integers.
String items require string item ids to be be set.
Input sequence of items for item similarity recommender must be integers or strings.
Input items for item similarity recommender must be a dictionary or a sequence.
Input restriction list of items for item similarity recommender must be a sequence.
Input exclusion list of items for item similarity recommender must be a sequence.
lossType
optimizerType
optimizerParameters
lossParameters
trainableLayerNames
Error in archiving updatable params.
MLNeuralNetworksCompileTimeParams
Tq,N,V_lossType
Tq,N,V_optimizerType
T@"NSDictionary",&,N,V_optimizerParameters
T@"NSDictionary",&,N,V_lossParameters
T@"NSArray",&,N,V_trainableLayerNames
T@"NSDictionary",&,N,V_updateParameters
CPU Only
GPU and CPU
Unknown
computeUnits
useSPIforScribble
allowLowPrecisionAccumulationOnGPU
allowBackgroundGPUCompute
 computeUnits: %@, 
 allowLowPrecisionAccumulationOnGPU: %s, 
 preferredMetalDevice: %@
allowBackgroundGPUComputeSetting
Tc,V_allowBackgroundGPUComputeSetting
useWatchSPIForScribble
Tc,N,V_useWatchSPIForScribble
allowFloat16AccumulationOnGPU
Tc,N
Tc,V_allowLowPrecisionAccumulationOnGPU
preferredMTLDevice
T@"<MTLDevice>",&,N
preferredMetalDevice
T@"<MTLDevice>",&,N,V_preferredMetalDevice
enableTestVectorMode
Tc,N,V_enableTestVectorMode
T@"NSDictionary",&,V_parameters
rootModelURL
T@"NSURL",&,V_rootModelURL
Tq,V_computeUnits
outputChannels = 
inputDim = 
 is not equal to size of the product of input dims and output channels = 
Embedding layer '
' has insufficient bytes for 
units in weight
 is not equal to the output dims = 
units in bias
Embedding layer: '
': channel dimension of the input blob must be 1.
squeeze
topk
sparse features not yet supported
an error occurred when trying to create specification for BayesianProbitRegression
Unsupported key type for dictionary feature
Unsupported sequence type
Could not save MLModelDescription to MLModelSpecification
Batch produced nil feature provider for index %@
Failed to obtain prediction for sample %@
regress:error must be implemented by derived class!
classify:topK:error be implemented by derived class!
T@"MLPipeline",&,V_engine
pipeline
T@"MLPipeline",R
matrix_band_part
Initialization of sceneprint parameters failed
scenePrintVersion
Tq,V_scenePrintVersion
Initialization of image feature extractor parameters failed
featureExtractorParameters
T@,R,V_featureExtractorParameters
Invalid parameters for vision feature print
Model type is not a vision feature print
Vision framework not available on this OS version
Must allow %lu-element vector as output
Feature extractor type not set
v16@?0^v8
Input image feature '%@' not found
T@"MLAppleImageFeatureExtractorParameters",R,V_parameters
broadcast
Could not save BOPR model to MLModelSpecification
Interface type is not a Bayesian Online Probit Regressor
no features
require feature type of MLMultiArray with one of Int32 values
incorrect number of features: expected %d but got %d
invalid prediction feature type
invalid prediction features
updateModelFromFeatures failed
Double
Float32
Int32
MLMultiArrayDataTypeInvalid (%d)
 vector
 matrix
 array
dataPointer
T^v,R,N
dataType
shape
T@"NSArray",R,N,V_shape
strides
T@"NSArray",R,N,V_strides
numberOfBytesPerElement
TQ,R,N
managingData
Tc,R,N,GisManagingData
contiguous
Tc,R,N,GisContiguous
Unable to copy %@ into %@
Unable to vectorize %@ into %@
value count (%@) does not match array count (%@)
Inconsistent row size
setRangeWithRawData: range out of bounds.
setRangeWithRawData: non-contiguous %@d destination unsupported
setRangeWithRawData: failed to vectorize source
multiArray
T@"MLMultiArray",&,V_multiArray
Invalid origin %@ for slicing %@
Invalid shape %@ for slicing %@
Slice at %@ with shape %@ is out of bounds
Shape %@ is not squeezable at dimensions %@
parent
T@"MLMultiArray",R,N,V_parent
WARNING: using -h 0 may be faster
WARNING: reaching max number of iterations
optimization finished, #iter = %d
WARNING: training data in only one class. See README for details.
WARNING: class label %d specified in weight is not found
Total nSV = %d
WARNING: # folds > # data. Will use # folds = # data instead (i.e., leave-one-out cross validation)
Model doesn't contain information for SVR probability inference
svm_type %s
kernel_type %s
degree %d
gamma %g
coef0 %g
nr_class %d
total_sv %d
probA
probB
nr_sv
%.16g 
0:%d 
%d:%.8g 
%80s
svm_type
unknown svm type.
kernel_type
unknown kernel function.
degree
coef0
nr_class
total_sv
unknown text in model file: [%s]
ERROR: fscanf failed to read model
unknown svm type
unknown kernel type
gamma < 0
degree of polynomial kernel < 0
cache_size <= 0
eps <= 0
C <= 0
nu <= 0 or nu > 1
p < 0
shrinking != 0 and shrinking != 1
probability != 0 and probability != 1
one-class SVM probability output not supported yet
specified nu is infeasible
Prob. model for test data: target value = predicted value + z,
z: Laplace distribution e^(-|z|/sigma)/(2sigma),sigma= %g
obj = %f, rho = %f
nSV = %d, nBSV = %d
nu = %f
C = %f
epsilon = %f
Line search fails in two-class probability estimates
Reaching maximal iterations in two-class probability estimates
Exceeds max_iter in multiclass_prob
c_svc
nu_svc
one_class
epsilon_svr
nu_svr
linear
polynomial
sigmoid
precomputed
Recurrent layer: too few input blobs.
SimpleRecurrent
Recurrent layer: '
Interface type is not an TreeEnsembleClassifier
Could not construct tree ensemble regressor.
INTERNAL ERROR -- feature not present that should have been.
Incorrect number of classes given (TreeEnsembleClassifier).
nonzero
Scale Layer: Scale shape cannot be of size 0
Scale Layer: Scale shape must be of size less than or equal to 3
Scale Layer: Scale size does not match provided shape
constant_in_scale
Scale Layer: Must accept exactly 1 input and produce 1 output
Scale Layer: Bias shape cannot be of size 0
Scale Layer: Bias shape must be of size less than or equal to 3
Scale Layer: Bias size does not match provided shape
constant_in_bias
mul_out
LSTM layer: must provide 3 activations
LSTM layer: '
Bias Layer: shape cannot be of size 0
Bias Layer: shape must be of size 1 or 3
constant_in
Bias Layer: bias size does not match provided shape
Bias Layer: Must accept exactly 1 input and produce 1 output
flatten
Initialization of word tagger parameters failed
tokensOutputFeatureName
T@"NSString",&,V_tokensOutputFeatureName
tokenTagsOutputFeatureName
T@"NSString",&,V_tokenTagsOutputFeatureName
tokenLocationsOutputFeatureName
T@"NSString",&,V_tokenLocationsOutputFeatureName
tokenLengthsOutputFeatureName
T@"NSString",&,V_tokenLengthsOutputFeatureName
tagNames
T@"NSArray",&,V_tagNames
Model type is not a word tagger
Invalid parameters for Word Tagger
initialization of word tagger model with model data failed
Token tags
Token lengths
Token locations
Tokens
This model is a word tagger (version %lu) which tags %@ words according to set {
This model is a word tagger (version %lu) which tags words according to set {
T@"MLAppleWordTaggerParameters",R,V_parameters
URL has nil fileSystemRepresentation
model does not implement protocol MLModelSpecificationSaver
Serializing model to compiled format is not yet supported.  Try with compilerOptions=nil
Could not find model at %@
Cloning %s to %s FAILED with (%d : %s)
Failed to copy model from %@ to %@
nullable 
- (nullable instancetype)initWithContentsOfURL:(NSURL *)url error:(NSError * _Nullable __autoreleasing * _Nullable)error
- (nullable instancetype)initWithConfiguration:(MLModelConfiguration *)configuration error:(NSError * _Nullable __autoreleasing * _Nullable)error
- (nullable instancetype)initWithContentsOfURL:(NSURL *)url configuration:(MLModelConfiguration *)configuration error:(NSError * _Nullable __autoreleasing * _Nullable)error
- (nullable instancetype)init
Make a prediction using the convenience interface
@param 
@param error If an error occurs, upon return contains an NSError object that describes the problem. If you are not interested in possible errors, pass in NULL.
@return the prediction as 
Make a prediction using the standard interface
@param input an instance of 
 to predict from
@param options prediction options
Batch prediction
@param inputArray array of 
 instances to obtain predictions from
@return the predictions as NSArray<
predictionFrom
 error:(NSError * _Nullable __autoreleasing * _Nullable)error
)input error:(NSError * _Nullable __autoreleasing * _Nullable)error
)input options:(MLPredictionOptions *)options error:(NSError * _Nullable __autoreleasing * _Nullable)error
- (nullable NSArray<
 *> *)predictionsFromInputs
:(NSArray<
*> *
)inputArray options:(MLPredictionOptions *)options error:(NSError * _Nullable __autoreleasing * _Nullable)error
/// Model Prediction Input Type
@interface 
 : NSObject<MLFeatureProvider>
@end
/// Model Update Input Type
- (instancetype)init NS_UNAVAILABLE;
- (instancetype)
initWith
/// Model Prediction Output Type
/// 
@property (readwrite, nonatomic
, strong
, nullable
#import <Foundation/Foundation.h>
#import <CoreML/CoreML.h>
#include <stdint.h>
NS_ASSUME_NONNULL_BEGIN
/// Class for model loading and prediction
 : NSObject
@property (readonly, nonatomic, nullable) MLModel * model;
NS_ASSUME_NONNULL_END
@implementation 
+ (NSURL *)urlOfModelInThisBundle
NSString *assetPath = [[NSBundle bundleForClass:[self class]] pathForResource:@"
" ofType:@"mlmodelc"];
return [NSURL fileURLWithPath:assetPath];
return [self initWithContentsOfURL:self.class.urlOfModelInThisBundle error:nil];
self = [super init];
if (!self) { return nil; }
_model = [MLModel modelWithContentsOfURL:url error:error];
if (_model == nil) { return nil; }
return self;
return [self initWithContentsOfURL:self.class.urlOfModelInThisBundle configuration:configuration error:error];
_model = [MLModel modelWithContentsOfURL:url configuration:configuration error:error];
return [self predictionFromFeatures:input options:[[MLPredictionOptions alloc] init] error:error];
id<MLFeatureProvider> outFeatures = [_model predictionFromFeatures:input options:options error:error];
return 
outFeatures
 *input_ = [[
 alloc] initWith
return [self 
:input_ error:error];
id<MLBatchProvider> inBatch = [[MLArrayBatchProvider alloc] initWithFeatureProviderArray:inputArray];
id<MLBatchProvider> outBatch = [_model predictionsFromBatch:inBatch options:options error:error];
NSMutableArray<
*> *results = [NSMutableArray arrayWithCapacity:(NSUInteger)outBatch.count];
for (NSInteger i = 0; i < outBatch.count; i++)
id<MLFeatureProvider> resultProvider = [outBatch featuresAtIndex:i];
 * result = 
resultProvider
[results addObject:result];
return results;
if (self)
- (NSSet<NSString *> *)featureNames
return [NSSet setWithArray:@[
- (nullable MLFeatureValue *)featureValueForName:(NSString *)featureName
if ([featureName isEqualToString:@"
 == nil ? nil : 
[MLFeatureValue 
:[MLSequence sequenceWithInt64Array
:[MLSequence sequenceWithStringArray
INVALID_SEQUENCE
 error:nil
.longLongValue
.doubleValue
return nil;
#import "
MLMultiArray *
NSArray<NSNumber *> *
NSArray<NSString *> *
NSDictionary<NSNumber *, NSNumber *> *
NSDictionary<NSString *, NSNumber *> *
NSNumber *
double
CVPixelBufferRef
int64_t
NSString *
multiArrayValue
sequenceValue
dictionaryValue
doubleValue
imageBufferValue
int64Value
stringValue
predictionFromFeatures
macos
watchos
tvos
API_AVAILABLE(
%@(%@)
 API_UNAVAILABLE(
 __attribute__((visibility("hidden")))
(NSDictionary<NSNumber *, NSNumber *> *)
(NSDictionary<NSString *, NSNumber *> *)
 featureValueForName:@"
.int64Values
.stringValues
featureValueWithPixelBuffer
featureValueWithInt64
featureValueWithDouble
featureValueWithString
featureValueWithDictionary
featureValueWithMultiArray
featureValueWithSequence
kDescription
kLabelsForDataPoints
kLabelType
kIndexType
kIndex
kDefaultLabel
kWeightingScheme
kNearestLabelsFeatureName
kNearestDistancesFeatureName
kParameterContainer
Index type is invalid for this model.
Missing input name for K Nearest Neighbor model.
K Nearest Neighbor models only accept multi array input types.
_debugNearestLabels
_debugNearestDistances
Missing MLMultiArray for MLFeatureProvider
Shape of input MLMultiArray is %@, expected %@
Error computing pairwise distances in k-nearest neighbors model.
Error predicting class due to missing data points and default label.
Unable to load class labels for k-Nearest-Neighbor model.
Invalid k-nearest neighbor model -- the length of the data vector is not a multiple of the given dimensionality.
numberOfNeighbors
Failed to unarchive model parameters.
Failed to archive model parameters.
notreesyet
Received nil MLFeatureProvider for index %d from training data MLBatchProvider
Missing MLMultiArrayValue for feature named %@
Shape of training data point %i MLMultiArray is %@, expected %@
Failed to convert training data to the right format
Missing MLFeatureValue for feature named %@
Label type must be one of MLFeatureTypeString or MLFeatureTypeInt64
Failed to update model with training data
Failed to create directory at %@
Failed archive updated model
Failed save updated model to %@
Nearest Neighbor Classifier Model does not have a parameter for requested key %@.
T@"MLUpdateProgressHandlers",&,N,V_progressHandlers
progressHandlersDispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_progressHandlersDispatchQueue
continueWithUpdate
Tc,N,V_continueWithUpdate
parameterContainer
T@"MLParameterContainer",&,N,V_parameterContainer
TQ,N,V_numberOfDimensions
Tq,N,V_indexType
index
T@"<MLNearestNeighborsIndex>",&,N,V_index
labelType
Tq,N,V_labelType
labelsForDataPoints
T@"NSArray",&,N,V_labelsForDataPoints
labelsSet
T@"NSOrderedSet",&,N,V_labelsSet
T@"NSObject",&,N,V_defaultLabel
Tq,N,V_weightingScheme
T@"NSString",&,N,V_nearestLabelsFeatureName
T@"NSString",&,N,V_nearestDistancesFeatureName
modelParameters
unable to deserialize object
embedding size = 
vocab size = 
EmbeddingND layer '
coreml
com.apple.coreml
modelNames
.model%lluv%@
Failed to evaluate model %@ in pipeline
Failed to carry forward results for model %@ in pipeline
Failed to copy original model files to the new destionation: %@
Pipeline Model contains multiple models that have parameter for requested key %@. Use parameter scoping to disambiguate.
Pipeline Model does not contain a model that has a parameter for requested key %@.
models
T@"NSArray",&,V_models
T@"NSArray",&,V_modelNames
Error: Attempted multiple write-open of data blob 
.DAT
non-directory file already exists at archive path
error creating directory: %@
Error creating directory.
coremldata.bin
Interface type is not an Support Vector Classifier
modelType
generatedClassName
predict
method
shortDescription
version
license
author
specificationVersion
metadataOutputVersion
dependencies
className
customLayers
customModels
outputSchema
inputSchema
trainingInputSchema
error
{"error":"unknown error"}
MLModelType_imageClassifier
structure
layerDescription
Color
formattedType
epochs
Maximum number of iterations training takes
shuffle
Controls whether data is shuffled on each epoch
seed
Random seed
learningRate
Controls learning step size. Adjustable in progress
miniBatchSize
Number of examples used to compute single gradient step
momentum
Helps accelerate gradients vectors in the right directions
beta1
Controls the exponential decay rate for the first moment estimates
beta2
Controls the exponential decay rate for the second moment estimates
A very small number to prevent any division by zero in the implementation
model%d
%lld
[%lld, %lld]
allowedRange
allowedSet
scope
Bool
true
false
[%f, %f]
linkedModelFileName
File name of linked model
linkedModelSearchPath
Search path used to resolve model file name
Number of neighbors to use for prediction
Error in initalizing container.
Updated neural network model does not have a parameter for requested key %@.
coreMLToEspressoParamsMap
T@"NSDictionary",&,N,V_coreMLToEspressoParamsMap
lossOutputName
T@"NSString",&,N,V_lossOutputName
lossTargetName
T@"NSString",&,N,V_lossTargetName
shuffableTrainingData
T@"MLShufflingBatchProvider",&,N,V_shuffableTrainingData
classLabelToIndexMap
T@"NSDictionary",R,N,V_classLabelToIndexMap
categorical mapping
MLCategoricalMapping: Unknown input value.
mapping
T@"NSDictionary",R,N,V_mapping
valueOnUnknown
T@"MLFeatureValue",R,N,V_valueOnUnknown
.swift
import CoreML
Construct a model with explicit path to mlmodelc file
- parameters:
   - url: the file url of the model
   - throws: an NSError object that describes the problem
init(contentsOf url: URL) throws
/// Construct a model that automatically loads the model from the app's bundle
convenience override init()
convenience init()
Construct a model with configuration
   - configuration: the desired model configuration
convenience init(configuration: MLModelConfiguration) throws
Construct a model with explicit path to mlmodelc file and configuration
init(contentsOf url: URL, configuration: MLModelConfiguration) throws
    - 
- throws: an NSError object that describes the problem
- returns: the result of the prediction as 
Make a prediction using the structured interface
   - input: the input to the prediction as 
   - options: prediction options 
Make a batch prediction using the structured interface
   - inputs: the inputs to the prediction as [
- returns: the result of the prediction as [
func 
) throws -> 
(input: 
, options: MLPredictionOptions) throws -> 
predictions(inputs: [
], options: MLPredictionOptions = MLPredictionOptions()) throws -> 
@objc 
:NSObject
class 
var model: MLModel
/// URL of model assuming it was installed in the same bundle as this class
class var urlOfModelInThisBundle : URL
let bundle = Bundle(for: 
.self)
return bundle.url(forResource: "
", withExtension:"mlmodelc")!
self.model = try MLModel(contentsOf: url)
try! self.init(contentsOf: type(of:self).urlOfModelInThisBundle)
try self.init(contentsOf: type(of:self).urlOfModelInThisBundle, configuration: configuration)
self.model = try MLModel(contentsOf: url, configuration: configuration)
return try self.prediction(input: input, options: MLPredictionOptions())
let outFeatures = try model.prediction(from: input, options:options)
(features: outFeatures)
let input_ = 
return try self.
(input: input_)
let batchIn = MLArrayBatchProvider(array: inputs)
let batchOut = try model.predictions(from: batchIn, options: options)
var results : [
] = []
results.reserveCapacity(inputs.count)
for i in 0..<batchOut.count
let outProvider = batchOut.features(at: i)
let result =  
(features: outProvider)
results.append(result)
return results
var featureNames: Set<String>
return [
return self.provider.featureNames
func featureValue(for featureName: String) -> MLFeatureValue?
if (featureName == "
try! 
MLFeatureValue(
 as [NSObject : NSNumber]
 as [NSNumber]
return nil
return self.provider.featureValue(for: featureName)
init(
 = nil
self.
self.provider = try! MLDictionaryFeatureProvider(dictionary: [
" : 
 as [AnyHashable : NSNumber]
init(features: MLFeatureProvider)
self.provider = features
 : MLFeatureProvider
var 
/// Source provided by CoreML
private let provider : MLFeatureProvider
lazy var 
[unowned self] in 
return self.provider.featureValue(for: "
")!.
dictionaryValue as! 
sequenceValue!
 as! 
prediction
macOS
tvOS
watchOS
@available(
@available(
, unavailable)
pixelBuffer
int64
string
sequence: MLSequence(int64s
sequence: MLSequence(strings
sequence: InvalidSequence(
MLMultiArray
[String : Double]
[Int64 : Double]
[String]
[Int64]
CVPixelBuffer
batchnorm
mean
variance
Batchnorm layer: 
has insufficient bytes in quantized 
 ,size of 
 must be equal to the number of channels.
 is smaller than the total bytes required for 
The weight blob
 of layer 
 cannot be compiled.
range
softmax_nd
compile
generate
variant
repair
dry-run
command
inputdocument
outputpath
globalmodule
no-documentation
detailed-type-info
swift-version
output-partial-info-plist
LSBundleContainsCoreMLmlmodelc
toolName
T@"NSString",R
toolPath
T@"NSString",&,VtoolPath
commandName
T@"NSString",&,VcommandName
sourceUrl
T@"NSURL",&,VsourceUrl
destinationDirectoryUrl
T@"NSURL",&,VdestinationDirectoryUrl
dryrun
Tc,Vdryrun
targetLanguage
Ti,VtargetLanguage
swiftVersion
Ti,VswiftVersion
globalModule
Tc,VglobalModule
noDocumentation
Tc,VnoDocumentation
detailedTypeInfo
Tc,V_detailedTypeInfo
outputPlistFilename
T@"NSString",&,V_outputPlistFilename
invalid
Tc,Vinvalid
invalidError
T@"NSString",&,VinvalidError
%s: Error: %s
usage: %@ <%@> <%@> <%@> [options ...]
unable to read document: %@
detail: %@
%@ command missing model file path
%@ command missing destination path
%@ failed to write partial plist
Error reading model. %s
Found %d issues
%s %d of of them:
Can fix
Fixed
    Fix %2d = %s
Issues still remain that cannot be automatically fixed:
    Issue %2d = %s
    Issue = %s
Please contact the model author or use coremltools to manually fix these issues
backup
Moving model to backup: %s
Failed to move model to backup. %s
Saving model with fixes to %s
Error saving fixed model. %s
help
missing parameter to option "%s"
Objective-C
Swift
unrecognized target language "%s".  Expected one of: Swift, Objective-C.
unrecognized Swift version "%s".  Expected one of: 3.0, 3.1, 3.2, 4.0, 4.1, 4.2, 5.0 or greater
Warning: ignoring unrecognized command line argument --
Warning: ignoring unrecognized command line argument -
unexpected command name %s
unrecognized positional argument %s
engineName
Error creating Core ML custom layer implementation from factory for layer "
Core ML custom Layer implementation '
' does not conform to the MLCustomLayer protocol
Error getting Core ML custom layer output shapes for layer "
Evaluation on Core ML custom layer "
" called before the layer is constructed.
Error evaluating Core ML custom layer "
" on CPU.
_internal_NDMode
' does not conform to the MLCustomLayer protocol'
Error initializing Core ML custom layer implementation with parameter dictionary for layer "
Error setting weights in Core ML custom layer "
" on GPU.
ndMode
Tc,R,N,V_ndMode
T@"NSString",R,N,V_className
customImpl
T@"NSObject<MLCustomLayer>",&,N,V_customImpl
$BUNDLE_MAIN
$BUNDLE_IDENTIFIER
%@ is missing feature '%@'
%@ feature '%@' is inconsistent with '%@'
Model type is not linked model as expected
Model linking could not find model (%@) in search path (%@) relative to (%@)
Linked model
Root/Loaded model
Linked Model does not have a parameter for requested key %@.
linkedModel
T@"MLModel",&,V_linkedModel
modelFileName
T@"NSString",&,V_modelFileName
modelSearchPath
T@"NSString",&,V_modelSearchPath
sliding_windows
kLeafSize
kVData
kVIndices
kRoot
%.6f
%s ],
%s ]
splitIndex
splitDimension
splitValue
startingIndex
rightChild
leftChild
intervals
isLeaf
Splitting node along dimension %lu, by value %.4f
Found split index %lu
TQ,N,V_splitDimension
TQ,N,V_splitIndex
Tf,N,V_splitValue
TQ,N,V_startingIndex
TQ,N,V_count
T@"_KDNode",&,N,V_leftChild
T@"_KDNode",&,N,V_rightChild
boundingBox
T{_KDBoundingBox={vector<_KDInterval, std::__1::allocator<_KDInterval> >=^{_KDInterval}^{_KDInterval}{__compressed_pair<_KDInterval *, std::__1::allocator<_KDInterval> >=^{_KDInterval}}}Q},N,V_boundingBox
TB,N,V_isLeaf
dataPoints.size() % dimensionality != 0
TQ,N,V_leafSize
root
T@"_KDNode",&,N,V_root
_MLSNVGGishFrontendProcessing
_SNVGGishFrontEndProcessingCustomModel
Frontend processing not available on this version
Frontend processing failed to init
feature vectorizer
Expected value for feature '%@'.
MLFeatureVectorizer: Array length incorrect.
MLFeatureVectorizer: Dictionary key type must be NSNumber.
MLFeatureVectorizer: Dictionary index out of range.
MLFeatureVectorizer: Incorrect Type.
MLFeatureVectorizer: Dict key type must be NSNumber.
MLFeatureVectorizer: Dict idx out of range.
columnNameEncoding
T@"NSArray",R,N,V_columnNameEncoding
dimensionEncoding
T@"NSArray",R,N,V_dimensionEncoding
MLModelDescriptionKey
MLModelVersionStringKey
MLModelAuthorKey
MLModelCreatorDefinedKey
MLModelLicenseKey
batch_matmul
 is not equal to size of the product of the first and second dimensions provided as layer parameters = 
 in Batched-MatMul layer 
 is smaller than the total bytes required for the product of the first and second dimensions provided as layer parameters = 
-bit quantization in Batched-MatMul layer 
 is not equal to the second dimension of the matrix = 
Size of quantized bias is insufficient for Batched-MatMul layer 
suppressionMethod
Ti,V_suppressionMethod
iouThreshold
Td,V_iouThreshold
confidenceThreshold
Td,V_confidenceThreshold
minBoxes
TQ,V_minBoxes
maxBoxes
Tq,V_maxBoxes
numClasses
TQ,V_numClasses
perClass
TB,V_perClass
confidenceInputFeatureName
T@"NSString",&,V_confidenceInputFeatureName
coordinatesInputFeatureName
T@"NSString",&,V_coordinatesInputFeatureName
iouThresholdInputFeatureName
T@"NSString",&,V_iouThresholdInputFeatureName
confidenceThresholdInputFeatureName
T@"NSString",&,V_confidenceThresholdInputFeatureName
confidenceOutputFeatureName
T@"NSString",&,V_confidenceOutputFeatureName
coordinatesOutputFeatureName
T@"NSString",&,V_coordinatesOutputFeatureName
Model type is not a NonMaximumSuppression
Dimension 1 of input confidence (%d) is not consistent with the number of classes (%d)
T@"MLNonMaximumSuppressionParameters",R,V_parameters
MultiArray dataType should be %@ but is %@
MultiArrayConstraint cannot check undefined values
MultiArrayConstraint only allows MultiArrays
Neural network model expects vector inputs, but non-unit height or width dimensions were provided.
Neural Network (<=version 3) inputs can only be of size 1, 3, or 5.
Neural network model expects the input '%@' to be of rank %@, instead got a multi-array value of rank %@.
%@, %@
shapeConstraint
Tq,R,N,V_dataType
T@"MLMultiArrayShapeConstraint",R,N,V_shapeConstraint
array feature extractor
arrayFeatureExtractor
got nil array input to MLArrayFeatureExtractor predict:error:
Lossy cast to integer by ArrayFeatureExtractor; use double as output type.
Invalid output type of ArrayFeatureExtractor.
arrayColumnName
T@"NSString",R,N,V_arrayColumnName
extractIndices
T@"NSArray",R,N,V_extractIndices
outputType
Tq,R,N,V_outputType
_MLVNScenePrintCustomModel
MLScenePrintRequestRevision
MLScenePrintConfiguration
ScenePrint not available on this version
Must only have one input image feature
Must only have one output multiarray feature
scenePrintRequestRevision
Ti,R,N,V_scenePrintRequestRevision
configuration
T@"MLModelConfiguration",R,N,V_configuration
Tq,N,V_version
postVisionFeaturePrintModel
T@"MLModel",&,N,V_postVisionFeaturePrintModel
split_nd
 layer: weight size incorrect
 layer : insufficient units in quantized weight byte stream
 layer : all the weight matrices must have same type
 layer: weight matrix size incorrect
 layer : all the weight matrices must have same quantization level
 layer : all quantized weight matrices must have same number of bytes
 layer : all weight matrices must have either linear quantization or LUT
_per_ch_qscale
_per_ch_qbias
_lut_to_float32
 layer: bias size incorrect
 layer: insufficient units in quantized bias byte stream
non_maximum_suppression
Input feature length mismatch. Got features of length %d expected length of at least %d
Input feature length mismatch. Got features of length %d expected length of %d
T@"MLSVREngine",&,V_engine
unable to open output file: %@
swift
cf_jump
_break
_continue
Load Constant: shape must be of size 3
Load Constant: data size does not match provided shape
This PipelineClassifier was created with unreleased beta CoreML and is no longer supported. Please re-create/convert your model with the the current Core ML
Invalid model type found in compiled pipeline model.
l2_normalize
T@"MLParameterKey",R,N
weights
biases
batchProvider
T@"<MLBatchProvider>",R,N,V_batchProvider
nnEngine
T@"MLNeuralNetworkEngine",R,N,V_nnEngine
useForPrediction
Tc,R,N,V_useForPrediction
Slice layer: '
slice
': output blob channel dimension size is 0.
': output blob height dimension size is 0.
': output blob width dimension size is 0.
Expected feature of type %@ but got %@
Feature description does not allow missing %@ values
%@ : Dictionary (%@)%@
%@ : Image (%@)%@
%@ : MultiArray (%@)%@
%@ : Sequence (%@)%@
%@ : %@%@
optional
constraints
valueConstraints
T@"NSDictionary",&,V_valueConstraints
multiArrayConstraintCached
T@"MLMultiArrayConstraint",R,N,V_multiArrayConstraintCached
imageConstraintCached
T@"MLImageConstraint",R,N,V_imageConstraintCached
dictionaryConstraintCached
T@"MLDictionaryConstraint",R,N,V_dictionaryConstraintCached
sequenceConstraintCached
T@"MLSequenceConstraint",R,N,V_sequenceConstraintCached
T@"NSString",R,C,N,V_name
Tc,R,N,GisOptional,V_optional
T@"MLSVMEngine",&,V_engine
Crop layer: 
 , crop border amounts must be specified for both height and width, if set
Crop Layer: 
 , must be provided exactly 2 offset values when it has 2 inputs
Crop Layer: '
': unable to determine the spatial dimensions of the second input blob. 
crop
Data provided has unsupported shape
Failed to extract output tensor
Output is not in the expected format
Bad neural network input.
Attempting to extract shape from non-image or multi-array feature
Unable to extract configurations from a multi-array feature type without enumerated shapes.
Unable to extract configurations from an image feature type without enumerated shapes.
Unable to extract configurations from a feature that is not a multi-array or image.
We don't currently use configurations if there are multiple inputs with enumerated shapes.
Only a single shape for every input. There is no need for configurations
Invalid multi-array constraint found when extracting configurations.
Multi-array of shape less than 1 found when extracting configurations.
mapStrLabelToIndex
T{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_mapStrLabelToIndex
mapIntLabelToIndex
T{map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >={__tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true> >=Q}}},N,V_mapIntLabelToIndex
iter
T{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, long> >={__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, long>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}},N,V_iter
iterEnd
T{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, long> >={__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, long>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}},N,V_iterEnd
T{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, long> >={__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, long>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}},N,V_iter
T{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, long> >={__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, long>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}},N,V_iterEnd
dict vectorizer
MLDictVectorizer
Invalid input description.
Invalid output description.
Expected input column '%@ not present.
Type of input not dictionary as expected.
categoryName
T@"NSOrderedSet",R,N,V_categoryName
profile_number
debug_fatpack
engine_version
Unrecognized profile number 
/System/Library/Frameworks/Vision.framework/Vision
VNScenePrintsFromPixelBuffers
VNScenePrintsFromPixelBuffersUsesCPUOnly
VNElementCountForScenePrintRequestRevision
VNLengthInBytesForScenePrintRequestRevision
VNImageBuffer
VNImageOptionImageOrientation
Failed to form pixel buffer from %@
Failed to form pixel buffer from CGImage
scenePrintsFromPixelBuffersImpl
T^?,R,N,V_scenePrintsFromPixelBuffersImpl
scenePrintsFromPixelBuffersUsesCPUOnlyImpl
T^?,R,N,V_scenePrintsFromPixelBuffersUsesCPUOnlyImpl
scenePrintElementCountImpl
T^?,R,N,V_scenePrintElementCountImpl
scenePrintLengthImpl
T^?,R,N,V_scenePrintLengthImpl
VNImageBufferClass
T#,R,N,V_VNImageBufferClass
valid
Tc,R,N,GisValid,V_valid
predictedValue
T@"MLMultiArray",R,V_predictedValue
additionalFeatures
T@"<MLFeatureProvider>",R,V_additionalFeatures
Upsample layer: 
 , scaling factor must be of length 2, if set
Upsample layer: '
upsample
Initialization of Word Embedding parameters failed
Model type is not a Word Embedding
Invalid parameters for Word Embedding
initialization of word embedding model with model data failed
Embedding does not contain input string '%@'. 
vector
This model is a word embedding (version %lu) which represents an %@ word in a vector space.
This model is a word embedding (version %lu) which represents a word in a vector space.
T@"MLAppleWordEmbeddingParameters",R,V_parameters
unavailable
10.13
11.0
10.13.2
11.2
10.14
12.0
10.15
13.0
input_
BOOL
Class
NULL
Protocol
Self
Type
_Bool
_Complex
_Imaginary
__COLUMN__
__FILE__
__FUNCTION__
__LINE__
associativity
atomic
auto
break
bycopy
byref
case
char
class
const
continue
convenience
default
deinit
didSet
dynamic
dynamicType
else
enum
extension
extern
fallthrough
final
float
func
goto
import
infix
init
inline
inout
internal
lazy
left
long
mutating
nonatomic
none
nonmutating
oneway
operator
override
postfix
precedence
prefix
private
protocol
public
register
required
restrict
retain
return
right
self
short
signed
sizeof
static
struct
subscript
super
switch
typealias
typedef
union
unowned
unsigned
void
volatile
weak
where
while
// This file was automatically generated and should not be edited.
Output
TrainingInput
 as 
optional 
Unknown type
double value
integer value
string value
sequence of 64-bit integers
sequence of strings
dictionary of 64-bit integers to doubles
dictionary of strings to doubles
grayscale (kCVPixelFormatType_OneComponent8) 
color (kCVPixelFormatType_32BGRA) 
image buffer, 
 pixels wide by 
 pixels high
multidimensional array 
 element vector 
 by 
 matrix 
 3-dimensional array 
 4-dimensional array 
 5-dimensional array 
of 32-bit integers
of doubles
of floats
/dev/null
fill
Input feature length mismatch. Got features of length %d expected length %d
Error reading from archive.
Error writing to archive.
%@ : %@
Dictionary keys must be NSStrings or NSNumbers.
Object not consistent with type supplied
Attempting to hash an MLFeatureValue that is not an image or multi array.
value
T@,&,V_value
objectValue
T@"NSObject",&,N,V_objectValue
undefined
Tc,R,N,GisUndefined,V_undefined
Td,R,N
T@"NSString",R,C,N
T@"MLMultiArray",R,N
T@"NSDictionary",R,N
T^{__CVBuffer=},R,N
T@"MLSequence",R,N
A Core ML custom neural network layer requires an implementation named '
' which was not found in the global namespace.
A custom neural network layer implementation class named '
' does not conform to the MLCustomLayer protocol.
_max_loop_iters
_load_iterator
cf_loop
_loop_start
_loop_cond_check
_loop_count_check
_loop_joint_condition
cf_if
_increment_iterator
_jump
cf_end
_end_loop_if
_end_loop
/System/Library/Frameworks/NaturalLanguage.framework/NaturalLanguage
NLPSequenceModelCopyPredictedTokensAndLabelsForText
NLPSequenceModelCreateWithData
NLPSequenceModelGetRevision
NLPSequenceModelIsRevisionSupported
NLPSequenceModelGetCurrentRevision
NLPClassifierModelCopyPredictedLabelForText
NLPClassifierModelCreateWithData
NLPClassifierModelGetRevision
NLPClassifierModelIsRevisionSupported
NLPClassifierModelGetCurrentRevision
NLPGazetteerModelCopyLabelForString
NLPGazetteerModelCreateWithData
NLPGazetteerModelGetRevision
NLPGazetteerModelIsRevisionSupported
NLPGazetteerModelGetCurrentRevision
NLPEmbeddingModelCopyVectorForString
NLPEmbeddingModelCreateWithData
NLPEmbeddingModelGetRevision
NLPEmbeddingModelIsRevisionSupported
NLPEmbeddingModelGetCurrentRevision
Model revision %ld not supported by NaturalLanguage framwork on this OS version (support revision %ld).
NLPSequenceModelCopyPredictedTokensAndLabelsForTextImpl
T^?,R,N,V_NLPSequenceModelCopyPredictedTokensAndLabelsForTextImpl
NLPSequenceModelCreateWithDataImpl
T^?,R,N,V_NLPSequenceModelCreateWithDataImpl
NLPSequenceModelGetRevisionImpl
T^?,R,N,V_NLPSequenceModelGetRevisionImpl
NLPSequenceModelIsRevisionSupportedImpl
T^?,R,N,V_NLPSequenceModelIsRevisionSupportedImpl
NLPSequenceModelGetCurrentRevisionImpl
T^?,R,N,V_NLPSequenceModelGetCurrentRevisionImpl
NLPClassifierModelCopyPredictedLabelForTextImpl
T^?,R,N,V_NLPClassifierModelCopyPredictedLabelForTextImpl
NLPClassifierModelCreateWithDataImpl
T^?,R,N,V_NLPClassifierModelCreateWithDataImpl
NLPClassifierModelGetRevisionImpl
T^?,R,N,V_NLPClassifierModelGetRevisionImpl
NLPClassifierModelIsRevisionSupportedImpl
T^?,R,N,V_NLPClassifierModelIsRevisionSupportedImpl
NLPClassifierModelGetCurrentRevisionImpl
T^?,R,N,V_NLPClassifierModelGetCurrentRevisionImpl
NLPGazetteerModelCopyLabelForStringImpl
T^?,R,N,V_NLPGazetteerModelCopyLabelForStringImpl
NLPGazetteerModelCreateWithDataImpl
T^?,R,N,V_NLPGazetteerModelCreateWithDataImpl
NLPGazetteerModelGetRevisionImpl
T^?,R,N,V_NLPGazetteerModelGetRevisionImpl
NLPGazetteerModelIsRevisionSupportedImpl
T^?,R,N,V_NLPGazetteerModelIsRevisionSupportedImpl
NLPGazetteerModelGetCurrentRevisionImpl
T^?,R,N,V_NLPGazetteerModelGetCurrentRevisionImpl
NLPEmbeddingModelCopyVectorForStringImpl
T^?,R,N,V_NLPEmbeddingModelCopyVectorForStringImpl
NLPEmbeddingModelCreateWithDataImpl
T^?,R,N,V_NLPEmbeddingModelCreateWithDataImpl
NLPEmbeddingModelGetRevisionImpl
T^?,R,N,V_NLPEmbeddingModelGetRevisionImpl
NLPEmbeddingModelIsRevisionSupportedImpl
T^?,R,N,V_NLPEmbeddingModelIsRevisionSupportedImpl
NLPEmbeddingModelGetCurrentRevisionImpl
T^?,R,N,V_NLPEmbeddingModelGetCurrentRevisionImpl
Missing predictionFromFeatures:error implementation
modelDescription: %@, 
configuration: %@
Model does not have a parameter for requested key %@.
T@"MLModelDescription",&,N,V_modelDescription
T@"MLModelConfiguration",&,N,V_configuration
T@"MLModelInterface",R,V_interface
T@"MLModelMetadata",R,V_metadata
Error in computeL2DistanceSqr: provided size and dimension do not match vector length.
reverse_seq
tile
_value
_index_rank_preserved
_squeeze_after_arg
Average Layer must have exactly 1 output
sum_out
_sum
_sum_
Only integer values with magnitude less than 2^48 are supported in the imputer.
imputer
MLimputer
imputed feature value not set.
Invalid combination of input/output/feature value types.
Invalid combination of replace value type and input/output/feature value types.
imputeValue
T@"MLFeatureValue",R,N,V_imputeValue
replaceValue
T@"MLFeatureValue",R,N,V_replaceValue
expand_dims
_MLNLPSentenceClassifierModel
Must only have one string input feature
Must only have one string output feature
modelData
parameters['modelData'] does not exist or is not a string
initialization of classifier model with model data failed
T@"MLModelDescription",&,V_modelDescription
spec
Load Constant: shape must be of non empty
Load Constant: can only handle rank 1 to 5
load_random
log_
gumbel_max
get_shape
Inconsistent value types in array
Cannot form description from nothing
Inconsistent value constraints in array
Image found with unsupported pixel type
.values
MultiArray
Dictionary
Image
Sequence
Invalid
UnknownValue
Illegal value in MLFeatureType enum
Scatter layer: '
Gelu layer: '
Dot product layer: '
Error opening file 
Error reading file statistics of 
File 
: not a regular file.
: error opening mmap: 
: error unmapping memory; msg=
: Error closing file; msg=
32RGBA
32BGRA
32ARGB
OneComponent8
24RGB
24BGRA
Unsupported (%@)
32BGRA or 32ARGB
Image constraint can not accept missing values.
Image is not expected type %@, instead is %@
%@, %@ x %@
Grayscale
pixelsWide
pixelsHigh
pixelType
sizeConstraint
imageHeight
imageWidth
TQ,R,V_pixelType
osType
TI,R
Tq,R,N,V_pixelsHigh
Tq,R,N,V_pixelsWide
pixelFormatType
TI,R,N
T@"MLImageSizeConstraint",R,N,V_sizeConstraint
Feature '%@' not provided.
Feature type %@ cannot be vectorized
Failed to vectorize %@ (%p)
Internal programming error.
Incorrect 'doubleVector' length of %@ (expected %@)
T@"<MLFeatureProvider>",&,N,V_first
T@"<MLFeatureProvider>",&,N,V_second
T^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii},V_model
freeModelOnDealloc
Tc,V_freeModelOnDealloc
isInputSizeLowerBoundOnly
Tc,V_isInputSizeLowerBoundOnly
inputSize
TQ,V_inputSize
numberOfClasses
class labels not set.
SVM has invalid number of support vectors or clases
Internal error: support vectors not set.
one hot encoder
MLOneHotEncoder
%@: Output description type must be MLTypeDictionary (ouputSparse On) or                       MLFeatureTypeMultiArray (ouputSparse Off) 
MLOneHotEncoder: unknown category %@, expected one of %@
featureEncoding
T@"NSOrderedSet",R,N,V_featureEncoding
ouputSparse
Tc,R,N,V_ouputSparse
handleUnknown
Tc,R,N,V_handleUnknown
_MLNLPWordTaggingModel
Must only have three sequence output features
initialization of sequence model with model data failed
Crop resize bilinear layer: 
 , target size must be of length 2, if set
Sampling mode not set in crop resize layer.
Box coordinates mode not set in crop resize layer.
crop_and_resize
ScatterND layer: '
Resize bilinear layer: 
Sampling mode not set in resize bilinear layer.
tensor_zero_pad
MLCustomLayerWrapper
In custom layer 
, parameter key 
 has no value.
brick
MLCustomLayerWeights
Sound analysis preprocessing does not conform to custom model protocol
Sound analysis preprocessing failed to init
Model type is not a sound analysis preprocessing
Sound analysis framework not available on this OS version
Sound analysis preprocessing not available on this version
Preprocessing type not set
Failed to set parameter value because of nil key
Parameter value type %@ does not match expected type %@
%@ is not a valid value given constraint %@ for key %@
currentParameterValues
parameterKeys
parameterDescriptions
currentParameterValues: %@
parameterKeys: %@
parameterDescriptions: %@
T@"NSMutableDictionary",&,N,V_currentParameterValues
T@"NSArray",&,N,V_parameterKeys
T@"NSDictionary",&,N,V_parameterDescriptions
cf_else
_else
_end
Tc,R,V_isInputSizeLowerBoundOnly
TQ,R,V_inputSize
@min.doubleValue
@max.doubleValue
minNumber
maxNumber
enumeratedNumbers
minValue: %@
maxValue: %@
enumeratedNumbers: %@
T@"NSNumber",&,N,V_minNumber
T@"NSNumber",&,N,V_maxNumber
T@"NSSet",&,N,V_enumeratedNumbers
general_concat
name: %@, version: %@ author: %@ description: %@ creatorDefined: %@
T@"NSString",R,V_name
T@"NSString",R,V_shortDescription
T@"NSString",R,V_versionString
T@"NSString",R,V_author
T@"NSString",R,V_license
creatorDefined
T@"NSDictionary",R,V_creatorDefined
validateDataTransformDescription: Invalid FeatureType %@
trainingInputDescription
predictedFeatureNames
predictedProbNames
T@"NSDictionary",R,V_inputDescription
T@"NSDictionary",R,V_outputDescription
T@"NSOrderedSet",R,V_inputFeatureNames
T@"NSOrderedSet",R,V_outputFeatureNames
T@"NSDictionary",R,V_trainingInputDescription
T@"NSString",R,V_predictedFeatureName
T@"NSString",R,V_predictedProbabilitiesName
predictedValueFeatureDescription
T@"MLFeatureDescription",R
predictedClassFeatureDescription
classProbabilityFeatureDescription
Regressor must specify predictedValueOutput.
Classifier must specify predictedClassOutput and/or probabilityOutput
validRegressorInterface
Tc,R,GisValidRegressorInterface
validClassifierInterface
Tc,R,GisValidClassifierInterface
MLKeyName
MLKeyScope
%@.%@
T@"NSString",R,N,V_name
T@"NSString",R,N,V_scope
Interface type is not an TreeEnsembleRegressor
Could not construct tree ensemble compiler.
Dimension must equal one when using scalarRegress.
Reshape Layer: target shape must of length 3 or 4
Reshape layer: '
': product of new shape must equal the product of input blob dimensions.
Error opening file stream: 
 already opened as stream attempted to open as mmapped file.
MLSequenceConstraint cannot check undefined values
MLSequenceConstraint only allows MLSequence values
MLSequenceConstraint count constraint does not allow count of %@
MLSequenceConstraint only allows sequence value of type %@. This sequence is type %@
Value at index %d of sequence is not allowed
valueDescription
countRange_len
countRange_loc
T@"MLFeatureDescription",R,N,V_valueDescription
countRange
T{_NSRange=QQ},R,N,V_countRange
com.apple.CoreML
_squeeze
_squeezed
_squared
_exp
scaler
shiftValue
T@"MLFeatureValue",R,N,V_shiftValue
scaleValue
T@"MLFeatureValue",R,N,V_scaleValue
predictedClass
T@"MLFeatureValue",R,V_predictedClass
classProbability
T@"NSDictionary",R,V_classProbability
predictedClassFeatureType
Tq,R,V_predictedClassFeatureType
copy
normalizer
MLNormalizer
norm
Ti,R,N,V_norm
%@ x %@
Tq,R,V_pixelsWide
Tq,R,V_pixelsHigh
Image width (%@) is not in allowed range (%@..%@)
Image height (%@) is not in allowed range (%@..%@)
Image size %@ not in allowed set of image sizes
imageSizeSet
pixelsWideRange_len
pixelsWideRange_loc
pixelsHighRange_len
pixelsHighRange_loc
T@"NSOrderedSet",R,N,V_imageSizeSet
pixelsWideRange
T{_NSRange=QQ},R,N,V_pixelsWideRange
pixelsHighRange
T{_NSRange=QQ},R,N,V_pixelsHighRange
enumeratedImageSizes
Unknown layer type
load_
store_
init_
gradient not implemented for layer 
 of type 
 at index 
espresso.no_mh
mh_control@
_builtin
bound_output
unfuse fused_relu == %d is not implemented
unfuse has_prelu is not implemented
_pre_activation
_activation
Can't find CPU weights
Can't find GPU weights
_to_cpu
___tx_cpu_
_diff
_nonlin_diff
_nonlin
_dbn
_dbias
_bias
forward pass with %zu inputs: inner product at layer %d has %zu inputs, needs two or more for gradient computation.
/grad
_mask_i32
_mask_f32
dropout_grad
concat_grad
elementwise_grad
_split
gradient_start
input name %s doesn't exist in the network
Gradient for variable %s is not generated
cpu_
batchSize
decayRate
epsilon
Tq,R,V_type
optimizationParameters
T@"NSDictionary",R,N,V_optimizationParameters
Invalid enum
invalid value
_reverse
W_x_8bit
W_h_8bit
W_p_8bit
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-190/EspressoCore/RNNModule.mm
W_t_x
W_t_h
Invalid cell mode 
Invalid value 
ifog_h
Mismatching size w:
Mismatching size h:
Mismatching size n:
Mismatching size seq:
Mismatched sequence lengths in sequence concat.
nonlinearity_type
nonlinearity_alpha
nonlinearity_beta
internal_nonlinearity_type
internal_nonlinearity_alpha
internal_nonlinearity_beta
input_size
lstm_forget_bias
lstm_has_peepholes
encoder_output_sequence
internal_nonlinearity_second_type
internal_nonlinearity_second_alpha
internal_nonlinearity_second_beta
nonlinearity_bidir_type
nonlinearity_bidir_alpha
nonlinearity_bidir_beta
internal_nonlinearity_bidir_type
internal_nonlinearity_bidir_alpha
internal_nonlinearity_bidir_beta
internal_nonlinearity_second_bidir_type
internal_nonlinearity_second_bidir_alpha
internal_nonlinearity_second_bidir_beta
bias_vector_flag
forget_bias
cell_clip_threshold
coupled_input_forget
max_batch_size
override_eng
simple_concat
n_repetitions
Null interpreter state
Null interpreter
missing condition blob
Wrong number of arguments: %zu != %zu
Null blob found
Wrong number of returned blobs
__launch
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-190/EspressoCore/ControlFlow/ControlFlowKernels.mm
nd_shape.rank() == h_dst->dim[0]
p.axis < nd_shape.rank()
alloc_kernel_cpu: invalid rank
load_global called with no output blobs
load_global: undefined global %s
store_global called with no input blobs
the axis to be iterate on must agree for all input blobs
slice_step %d doesn't devide corresponding dim %d
cf_for_kernel_cpu: Invalid number of top blobs: %zu
missing output blob
breakpoint
Invalid builtin: %s
fuse_biases error
fuse_batchnorm error
fold_batchnorm error
v16@?0^{fuse_vertical_state<Espresso::generic_general_padding_kernel, Espresso::generic_convolution_kernel>={shared_ptr<Espresso::generic_general_padding_kernel>=^{generic_general_padding_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_convolution_kernel>=^{generic_convolution_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}ii^{net}}8
v16@?0^{fuse_vertical_state<Espresso::generic_general_padding_kernel, Espresso::generic_pool_kernel>={shared_ptr<Espresso::generic_general_padding_kernel>=^{generic_general_padding_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_pool_kernel>=^{generic_pool_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}ii^{net}}8
WARNING: Asymmetric quantization will use more inference memory on NE. Please use it only if symmetric quantization doesn't yield good results for  your  model.
convert_hx_weights_to_peace
conv_groups
explicit_padding
transpose_chain
dequantize
transpose_inner_product
eltwise_mulc_max_to_leaky_relu
add_compress_sparse_property
compress_sparse
transformer
fuse_log_softmax_multinomial_to_gumbel_max
low_precision_accumulation_fc
squeeze_devop
experimental.ane.dev_op_override
w_f16_t
Warning: padding deconvolution %s in SAME mode will not be pad-invariant for all resolutions
[convert_to_explicit_padding] Shape for blob %s (%d %d %d %d %d) -> (%d %d %d %d %d)
v16@?0^{fuse_vertical_state<Espresso::generic_transpose_kernel, Espresso::generic_transpose_kernel>={shared_ptr<Espresso::generic_transpose_kernel>=^{generic_transpose_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_transpose_kernel>=^{generic_transpose_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}ii^{net}}8
v16@?0^{fuse_vertical_3_state<Espresso::generic_transpose_kernel, Espresso::generic_flatten_kernel, Espresso::inner_product_kernel_cpu>={shared_ptr<Espresso::generic_transpose_kernel>=^{generic_transpose_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_flatten_kernel>=^{generic_flatten_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::inner_product_kernel_cpu>=^{inner_product_kernel_cpu}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}iii^{net}}8
v16@?0^{single_match_state<Espresso::inner_product_kernel_cpu>={shared_ptr<Espresso::inner_product_kernel_cpu>=^{inner_product_kernel_cpu}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}i^{net}}8
@lrelu
Invalid template net
graph_templates/tf_normalization_transformer/model.espresso.net
src=%d target=%d type=%s
%d %d
instancenorm_1d
wGamma
wBeta
v16@?0^{fuse_vertical_3_state<Espresso::generic_reshape_kernel, Espresso::generic_activation_kernel, Espresso::generic_reshape_kernel>={shared_ptr<Espresso::generic_reshape_kernel>=^{generic_reshape_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_activation_kernel>=^{generic_activation_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_reshape_kernel>=^{generic_reshape_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}iii^{net}}8
v16@?0^{fuse_vertical_state<Espresso::generic_reshape_kernel, Espresso::generic_reshape_kernel>={shared_ptr<Espresso::generic_reshape_kernel>=^{generic_reshape_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_reshape_kernel>=^{generic_reshape_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}ii^{net}}8
@gumbel_max
{vector<std::__1::shared_ptr<Espresso::graph_optimization_rule>, std::__1::allocator<std::__1::shared_ptr<Espresso::graph_optimization_rule> > >=^{shared_ptr<Espresso::graph_optimization_rule>}^{shared_ptr<Espresso::graph_optimization_rule>}{__compressed_pair<std::__1::shared_ptr<Espresso::graph_optimization_rule> *, std::__1::allocator<std::__1::shared_ptr<Espresso::graph_optimization_rule> > >=^{shared_ptr<Espresso::graph_optimization_rule>}}}24@?0{shared_ptr<Espresso::network_optimization_graph>=^{network_optimization_graph}^{__shared_weak_count}}8
B16@?0^{generic_elementwise_kernel=^^?{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}iiii{map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > > > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > >, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{shared_ptr<Espresso::SerDes::generic_serdes_object>=^{generic_serdes_object}^{__shared_weak_count}}{unordered_map<std::__1::basic_string<char>, int, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{elementwise_params=iifffiBiiIIII}}8
_pre_act
_act
_ctx
__tmp__identity__
__fix__underflow___
v16@?0^{single_match_state<Espresso::convolution_kernel_cpu>={shared_ptr<Espresso::convolution_kernel_cpu>=^{convolution_kernel_cpu}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}i^{net}}8
v16@?0^{single_match_state<Espresso::deconvolution_kernel_cpu>={shared_ptr<Espresso::deconvolution_kernel_cpu>=^{deconvolution_kernel_cpu}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}i^{net}}8
outputName
T@"NSString",&,V_outputName
inputName
T@"NSString",R,V_inputName
targetInputName
T@"NSString",R,V_targetInputName
T@"NSString",R,V_lossOutputName
mode
TQ,R,V_mode
This BNNS function is only allowed after jazzkon. This should be ruled out by the JAZZKON macro
associated_forward_kernel not configured
Grad of L2 pooling not implemented, %s:%d
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-190/EspressoTrain/EspressoTrain/KernelsCPU_Backward.mm
batchnorm_grad for training && training_instancenorm != MVA_NONE is not supported now
batchnorm_grad for inference mode batchnorm needs batchnorm_coefs as the second input
Ready not called!
Data Inconsistency
Empty blobs
Invalid parameter
Inconsistent dimensions
Can't load 
Can't load JSON 
chunks
chunk size mismatch
shuffle chunks! %d
path=%s
shuffle %d!
[loaded chunk] id=%zu/%zu (perm=%zu chunks=%zu)
Xshuffle! %d
size mismatch
[image_async_data_source] %s (%d %d %d)
category: %s
jpeg
[image_async_data_source] images=%zu 0=%s
[image_async_data_source] shuffling
[multikey_data_source] loading '%s'
shuffle_seed
path
type %@ %@
type not supported 
MXNet Image Binary Reader not found at load time
load_data_source: Loading single image not implemented
load_data_source: unrecognized type: 
labels
Functionality disabled in production mode
com.apple.espresso.async_data_source.queued_samples_lock
com.apple.espresso.async_data_source.loading_queue
EspressoError
Failed to find preprocessing parameters for image, must specify: scale, R,G,B biases, and whether the network's input is expecting BGR color interleaving.
bias_r
bias_g
bias_b
is_network_bgr
Failed to find one or more of the following pre-processing params by key (each is required): scale, bias_r, bias_g, bias_b, network_wants_bgr.
CVPixelBuffer provided must be of an interleaved pixel format (must ot be planar)
v16@?0r^{shared_ptr<Espresso::abstract_batch>=^{abstract_batch}^{__shared_weak_count}}8
    
Tensor w/ data pointer: %p: data: %@. 
Shape: %@, Strides: %@,Contiguous Size: %lu
imageBuffer
T{vImage_Buffer=^vQQQ},V_imageBuffer
allocatedImageData
T{vector<std::__1::shared_ptr<unsigned char>, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}^{shared_ptr<unsigned char>}{__compressed_pair<std::__1::shared_ptr<unsigned char> *, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}}},V_allocatedImageData
float_buffer
T{float_buffer_t=^fQB},V_float_buffer
blob
T{shared_ptr<Espresso::blob<float, 4> >=^{blob<float, 4>}^{__shared_weak_count}},V_blob
T^v,N,V_dataPointer
dataArray
T@"NSArray",&,N,V_dataArray
TQ,N,V_type
T@"NSArray",&,N,V_shape
T@"NSArray",&,N,V_strides
maxNumberOfElements
T@"NSNumber",&,N,V_maxNumberOfElements
[Espresso] uninitialized network
Null blob: 
[Espresso] wrong number of images in image batch
[Espresso] wrong image size
[Espresso] emtpy image
[Espresso] wrong number of input channels while binding XYZA image: it should be at least 2
[Espresso] wrong number of input channels in image
[Espresso] unexpected null
[Espresso] blob not found:
[Espresso] wrong image size 
Conv weights not set 
W_8bit
W_uint8
W_int8
W_int16
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-190/EspressoCore/KernelsCPU.mm
tree_W
tree_b
tree_map_to_index
tree_cluster_end
block_starts
w_f32_t
block_cols
sparse_weights_f32
sparse_weights_f16
Unsupported activation fn with quantized weights and lookup
Leaky relu not supported with quant weights
BNNS Error
inconsistent state!
missing param: wQscale
missing param: wQbias
missing param: wQrow_sums
missing param: weights_8bit
missing param: weights_int16
BNNS Error %d
Invalid rank
Mismatching batch size: %zu / %zu
A dynamic quantized inner product layer's activation function should be moved to the folowing dynamic_dequantize layer
experimental_sgemv_float_xint8
FC weights not set
Quantization not supported 
Blob of wrong type (bottom)
Blob of wrong type (top)
Unknown mode in upsample_kernel_cpu.
Cannot broadcast [%d, %d, %d, %d, %d] and [%d, %d, %d, %d, %d]
ELEMENTWISE_OPERATION_INTERNAL_MUL_XYKN not implemented
elementwise_kernel_cpu: [%d, %d, %d, %d, %d], [%d, %d, %d, %d, %d]
Unsupported number of inputs
operation %d does not support broadcasting
Blob of wrong type
3 inputs (x, gamma, beta) are needed if training && training_instancenorm == MVA_NONE
3 outputs (y, x_mean, sqrt(x_var + eps) are needed if training && training_instancenorm == MVA_NONE
MVA_L2 not supported
BN: Invalid K dimension %d / %d / %d
batchnorm_coefs is neither provided as a second input nor set as kernel property
:sigma
ESPRESSO_DEBUG_FUSED_GRU
__launch_gru_activation
PReLU params not set
Softplus weights not set
Incompatible operands CP
dynamic reshape requires interpreter
Reshape: invalid input blob
reshape mismatching size: %d %d %d %d %d -> %d %d %d %d %d
Reshape: invalid blob configuration
Flatten: invalid blob configuration
Reshape: invalid mode %d
Flatten: invalid mode %d
weights not set
Insufficient bottom blobs
broadcast_kernel_cpu: invalid rank
broadcast_kernel_cpu: Blob with full 5d shape is required as fill argument
Invalid mode
generic_crop_and_resize_kernel: Inconsistent state
generic_crop_and_resize_kernel: crop indices must be of size 4 or 5
generic_crop_and_resize_kernel: output width does not match the kernel target width parameter
generic_crop_and_resize_kernel: output heigth does not match the kernel target height parameter
generic_crop_and_resize_kernel: zero output width
generic_crop_and_resize_kernel: zero output height
generic_crop_and_resize_kernel: zero input width
generic_crop_and_resize_kernel: zero input height
generic_crop_and_resize_kernel: RoI batch id greater than input batch size
generic_crop_and_resize_kernel: Invalid crop index mode
generic_crop_and_resize_kernel: Invalid grid sampling mode
dynamic topk requires interpreter
topk kernel: computed output shape along specified axis is not equal to num_k
Invalid number of bottom blobs
Invalid axis
spatial_transformer_kernel_cpu: requires two inputs
Invalid state: blob_f4::ptr image in spatial_transformer_kernel_cpu is null
Invalid state: blob_f4::ptr ocrop in spatial_transformer_kernel_cpu is null
output dimensions ocrop_w, ocrop_h must both be greater than 1 for spatial_transformer_kernel_cpu.
Invalid state: blob_f4::ptr coordinates in spatial_transformer_kernel_cpu is null
Invalid mode argument in spatial_transformer_kernel_cpu.
Copy: mismatching blob count
scatter_kernel_cpu: Invalid index %d into input (%d, %d, %d, %d, %d)
scatter_kernel_cpu: Invalid number of value blobs %ld != %ld
scatter_kernel_cpu: Invalid shape of input blob
scatter_kernel_cpu: Invalid shape of value blob
scatter_kernel_cpu: Invalid number of value blobs %ld < %ld
load_random_kernel_cpu: dynamic shape mode not supported without interpreter
Invalid random distribution: %D
v16@?0^{blob<float, 4>=^^?[4i]^fB{shared_ptr<Espresso::blob_storage_root>=^{blob_storage_root}^{__shared_weak_count}}}8
dynamic range requires interpreter
range_kernel_cpu: [%d, %d, %d, %d, %d] != [1, 1, 1, 1, 1]
Rank of the input must be atleast 2 for matrix_band_part_kernel_cpu
Only 2d matrices are supported by matrix_band_part_kernel_cpu
fill_kernel_cpu: invalid rank
Blob with full 5d shape is required as fill argument
batch_matmul_kernel_cpu: Channel mode not available for 4D+ tensors
batch_matmul_kernel_cpu: Sequence dimensions do not match
Not compatible for multiplication
Invalid pad tensor dimensions: %zu for input of rank:%zu
Output tensor rank: %zu is not equal to input rank: %zu
tensor_pad kernel must have atleast two inputs
Invalid pad tensor dimensions: %zu
Invalid index %d into axis of size %d
array_gather does not support indexing into 5D blobs
multinomial requires one input blob
instancenorm_1d_kernel_cpu: missing param wGamma
instancenorm_1d_kernel_cpu: missing param wBeta
instnacenorm_1d_kernel_cpu: wGamma (%d) size is less than input blob (%d, %d, %d, %d) size
instnacenorm_1d_kernel_cpu: wBeta (%d) size is less than input blob (%d, %d, %d, %d) size
gumbel-max requires atleast one input blob
transplant kernel needs two src blobs
transplant kernel produces two dst blobs.
transplant kernel requires batchnorm coefs
transplant_kernel_cpu: weights (shift data) not found.
transplant does not support n > 1 or seq > 1
invalid mode selected for transplant
general_slice_kernel_cpu: atleast one bottom blob required
general_slice_kernel_cpu: dynamic parameters require interpreter
cross_entropy: output should be reduced to a scalar
cross_entropy needs 2 inputs: probability and label as class indices
cross_entropy: only REDUCE_MODE_AVG and REDUCE_MODE_SUM are supported
Invalid number of inputs to adam kernel
non_maximum_suppression_kernel: there must be 4 output blobs.
gather_nd_kernel_cpu: two inputs required
gather_nd_kernel: In TF_GATHER_ND mode, Invalid index %d into axis of size %d
gather_nd_kernel: In TF_GATHER mode, Invalid index %d into axis of size %d
gather_nd_kernel: In TORCH_GATHER mode, Invalid index %d into axis of size %d
scatter_nd_kernel_cpu: three inputs required.
scatter_nd_kernel: In TF_SCATTER_ND mode, Invalid index %d into axis of size %d
scatter_nd_kernel: Invalid accumulation mode.
scatter_nd_kernel: In TF_SCATTER mode, Invalid index %d into axis of size %d
scatter_nd_kernel: In TORCH_SCATTER mode, Invalid index %d into axis of size %d
dynamic one_hot requires interpreter
one_hot_kernel_cpu: [%d, %d, %d, %d, %d] != [1, 1, 1, 1, 1]
cumsum_kernel_cpu: [%d, %d, %d, %d, %d] != [1, 1, 1, 1, 1]
cumsum_kernel requires 2 input blobs.
Incorrect format size combination: format=%s, nB=%d, nC=%d, nnz=%d
%d %d
not supported
Not implemented %d
Cannot multiply matrices with sizes [%d, %d] and [%d, %d]
quantize_chunks
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-190/Espresso/Source/QuantUtils.hpp
static_cast<float>(iq) == integer_value
espresso.engine_availability_reordering
run_faux_dispatch_for_precompiled
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-190/EspressoCore/Dispatch.mm
primary_platform == ANE_RUNTIME || primary_platform == ANE_RUNTIME_DIRECT
precompilation_info_stream != nullptr && precompilation_info_stream->good()
network->kernel_validation_status
experimental.ane.use_faux_dispatch
com.espresso.dispatch_version
com.espresso.dispatch_avoid_gpu
com.espresso.dispatch_avoid_cpu
ESPRESSO_DISPATCH_VERSION
com.apple.espresso.dispatch_allow_loop_accelerate
The network falls back to GPU too often. Please consider running the network on GPU or change the architecture.
The network falls back to CPU too often. Please consider running the network on CPU or change the architecture.
The network bounces between the ANE and GPU/CPU too often. Please consider running the network on a different engine or change the architecture.
_ctx_tx_to_fallback_
_ctx_tx_to_default_
_ctx_tx_fallback__
_ctx_tx_default__
Op not available: 
Invalid number of bits %d
Invalid quantization parameters
BNNS de-quantization error
FP16 BNNS Dequantizer only available for uint8/int8
Unable to extend signed int weights to unsigned char
W_U8
Mismatching legacy ranges size %d != %d
Mismatching size %d != %d, n_elements=%d n_bits=%d
Unrecognizable weight name
Mismatching lut_to_float32 linear size %d != %d
lut_to_int8
Mismatching lut_to_int8 size %d != %d
lut_to_uint8
Mismatching lut_to_uint8 %d != %d
Mismatching per_ch_qscale size %d != %d
Mismatching per_ch_qbias size %d != %d
Invalid linear quantization
unknown
float8
float16
float32
float64
double8
double16
double32
double64
byte
%d) hash: %lu, type: %s, min: %g, max: %g, number of values: %zu
BinSerializer error %d:%s in %s @ %s:%d
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_getInfoStr(const char *, char **)
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-190/Espresso/Source/BinSerializer/Custom_BinSerializer_Core.cpp
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_fgetBlobInfo(FILE *, const char *, uint64_t *, uint16_t *, double *, double *, uint64_t *)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_getBlobInfo(const char *, const char *, uint64_t *, uint16_t *, double *, double *, uint64_t *)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_freadInBytes(FILE *, const char *, bool, void **, size_t *)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_readInBytes(const char *, const char *, bool, void **, size_t *)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_freadInFloat(FILE *, const char *, bool, float **, size_t *)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_readInFloat(const char *, const char *, bool, float **, size_t *)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_writeBytes(const char *, const char *, const void *, size_t)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_writeFloatToFloat32(const char *, const char *, const float *, size_t)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_writeFloatToFloat16(const char *, const char *, const float *, size_t)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_writeFloatToFloat8(const char *, const char *, const float *, size_t)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_fwrite(FILE *, const char *, Espresso::BinSerializer::BinSerializer_dataType, const void *, size_t)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_fwrite_float(FILE *, const char *, Espresso::BinSerializer::BinSerializer_dataType, const float *, size_t)
T@"NSArray",&,V_layerNames
Inconsistent state: estimate_stats or load_stats must be called first
Cannot find deconv weights. The model needs to be in float32
Cannot find convolution weights. The model needs to be in float32
Cannot find inner product weights. The model needs to be in float32
post_scale
hx_extra_f
v16@?0^{vector<Espresso::map_with_ordered_keys<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::allocator<Espresso::map_with_ordered_keys<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >=^{map_with_ordered_keys<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >}^{map_with_ordered_keys<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >}{__compressed_pair<Espresso::map_with_ordered_keys<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > *, std::__1::allocator<Espresso::map_with_ordered_keys<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >=^{map_with_ordered_keys<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >}}}8
hx_bias
hx_scaleout
hx_shiftout
hx_kernel
hx_scale_shift
No hx_scale_shift for %s (type %s)
ESPRESSO_QUANTIZER_SYMMETRIC
 [Exception from Layer: 
fast_reshape
Invalid bottom shape for layer: 
Invalid top shape for layer: 
%.3f 
 %.3f 
 %.3f %s
async
is_output
Configuration: %s, the blob %s is not an input
 [Exception from layer 
identify_segments
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-190/EspressoCore/Net.mm
falling_back_or_last_layer
to_fallback
visit_order
any_fallback
unsupported
kernel_validation_status
input_shapes
Unsupported scripting engine 
Deprecated. Use the corresponding function in gradient_builder
A global can be loaded by at most one load constant kernel
Shapes of %s and %s don't match
blob %s is not input of layer %s
Unsupported scripting engine
@bindglobal@
index >= blob_shapes.size() %zu %zu
run_on_network
result.n_blobs == result.blob_name_to_index.size()
pass_global_name_indexing_result not synced
def %s %s (
): -> 
basic_block_head
<basic_block_head>
<segment_head 
<segment_end>
%.4zu: %s
%%%s = 
%s(%s) @%s,%s %s
cf_for
end %s
constant_if_condition
constant_blobs
B16@?0Q8
cf_call
cf_branch
interpreter is needed by load_global layers
layer %s is not a load_global layer
phi_virtual
_global
_@ssa_version_
Analysis missing: 
Analysis mismatch: 
"Device not found"
"Blob not found"
"Invalid context"
"Invalid state"
"Invalid argument"
"Invalid blob shape"
"Not implemented"
"Unsupported configuration"
"Memory error"
"I/O error"
"Generic error"
"Overflow error"
"Context exceeded"
Espresso exception: 
 [Thrown from: 
format_string
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-190/EspressoCore/EspressoExceptions.cpp
result >= 0
result > 0 && result <= length
dataStorage
T{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}},V_dataStorage
blobShapes
T{unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}},V_blobShapes
number_of_data_points
TQ,V_number_of_data_points
TQ,V_batchSize
nonBatchBlobNames
T{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}},V_nonBatchBlobNames
com.apple.espresso.trace
com.apple.espresso.trace.path
/grad@
W_u8
W8_minmax
Invalid number of outputs: %zu
softmax_loss_grad
in order to take gradient of a training mode batchnorm layer, 3 inputs (x, gamma, beta) are needed
batchnorm_grad
in order to take gradient of a inference mode batchnorm layer, 2 inputs (x, batchnorm_corf) are needed
It's invalid to take gradient wrt batchnorm coefficient of inference mode batchnorm
inference mode batchnorm has at most 2 inputs
Shape mismatch: n 
No input given to activation layer.
Activation layer does not produce any outputs.
activation_grad
No input given to pooling layer.
pool_grad
inner product needs 2 inputs for gradients; given %zu
inner_product_grad
inner_product_weights_grad
bias_grad
generic_split_kernel: Number of top blobs in split kernel does not evenly divide n axis
generic_split_kernel: Number of top blobs in split kernel does not evenly divide width axis.
generic_split_kernel: Number of top blobs in split kernel does not evenly divide channels axis.
generic_pool_grad_kernel: need the input blob of corresponding pool kernel as the second input to compute the top shape
No input given to elementwise layer.
elementwise log operation should have exactly 1 input
/pow
Backward not supported for elementwise operation %d
Unexpected null blobs
axpby
Incompatible operands
Mismatch between input rank & target rank %d %d
Invalid dst shape
generic_reshape_kernel: Invalid bottom shape (%d %d %d %d %d) for reshape to (%d %d %d %d %d)
Invalid argument
reshape gradient for dynamic_shape is not supported
No input given to reshape layer.
Invalid rank and axis pair %d %zu
No input given to flatten layer.
_reshaped
_reshape
Unsupported flatten param
W_embedding_in
b_embedding_in
W_embedding_out
b_embedding_out
W_embedding_in_write
b_embedding_in_write
W_embedding_out_tree
b_embedding_out_tree
label_embedding_out_tree
Unexpected input batch_n 
Unexpected input size w=
input_embedding_size must be > 0 in seq2seq mode
Not impl
argmax
Not implemented
x_p_tmp
generic_crop_and_resize_kernel: requires either one or two inputs
generic_crop_and_resize_kernel: RoI input's batch dimension must be 1. Instead it is %d.
generic_crop_and_resize_kernel: RoI input's height dimension must be 1. Instead it is %d.
generic_crop_and_resize_kernel: RoI input's width dimension must be 1. Instead it is %d.
generic_crop_and_resize_kernel: RoI input's channel dimension must be either 4 or 5. Instead it is %d.
generic_patch_extractor_kernel: requires at least one input
generic_patch_extractor_kernel: sparse mode requires two inputs
generic_patch_extractor_kernel: invalid axis=
get_homography_from_4_source_points not implemented
generic_patch_extractor_kernel: invalid dense_stride_x
generic_patch_extractor_kernel: invalid dense_stride_y
generic_spatial_transformer_kernel: requires two inputs
generic_spatial_transformer_kernel: invalid axis=%d
spatial_transformer
Invalid block_size 
Shape error b.k=
Zero shape error
Invalid axis 
Invalid start 
Unsupported slice mode
Invalid slice end=
 start=
 dim=
 dim_orig=
No input given to slice layer.
@const_pre
@const_post
build_grads_for_inputs
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-190/EspressoCore/KernelInterfaces.mm
tot_k == input_shape.k
No input given to l2norm layer.
l2_normalize_grad
Bcast shape error 1 != w: %d
Bcast shape error 1 != h: %d
Bcast shape error 1 != k: %d
Bcast shape error 1 != n: %d
Bcast shape error 1 != seq: %d
matrix_band_part takes exactly one input blob.
Rank of the input must be atleast 2 for matrix_band_part
Only 2d matrices are supported by matrix_band_part
No input given to reduction layer.
/broadcasted
reduce_grad with mode other than REDUCE_MODE_SUM and REDUCE_MODE_AVG is not implemented
generic_squeeze_kernel: one input required
Invalid axis %d for rank %zu
Cannot squeeze a dimension whose value is not 1: shape[%d]=%d
All the values in the 'axes' parameter of squeeze kernel must be unique
All the values in the 'axes' parameter of expand_dims kernel must be unique
generic_load_constant_kernel must have a blob set
generic_load_constant_kernel wrong size
not a load_constant kernel
Invalid configuration
Invalid configuration dst=
 src=
convolution needs 2 inputs for gradients; given %zu
convolution_grad
convolution_weights_grad
Qscale
Qbias
Qrow_sums
Invalid axis argument in topk_kernel_cpu.
generic_general_concat_kernel: axis out of bounds
axis %d not implemented
constant_pad_kernel: values in pads cannot be both positive when 'pad_to_given_size_mode' flag is set.
generic_batch_matmul_kernel: two inputs required
generic_batch_matmul_kernel: not implemented for 4D+ tensors
generic_batch_matmul_kernel: seq dimensions do not match
generic_batch_matmul_kernel: not compatible for multiplication
generic_multinomial_kernel: one input blob required
generic_gumbel_max_kernel: atleast one input blob required
generic_gumbel_max_kernel: random uniform input (%d, %d, %d, %d, %d) should have the shape (%d, %d, %d)
generic_gumbel_max_kernel: random uniform input (%d, %d, %d) doesn't match logits (%d, %d) batch size
generic_gumbel_max_kernel: random uniform input (%d, %d, %d) doesn't have required samples i.e. %d != %d
generic_gumbel_max_kernel: random uniform input (%d, %d, %d) doesn't match logits (%d, %d) class size
shifts
batchnorm_params
Unrecognized weights in generic transplant kernel.
generic_transplant_kernel: expected 2 bottom blobs, got %d
generic_general_slice_kernel: atleast one bottom blob required
generic_sliding_windows_kernel: atleast one bottom blob required
generic_reverse_seq_kernel: atleast two bottom blobs required
gather_nd_kernel: two inputs required
gather_nd_kernel: In TF_GATHER_ND mode, invalid indices. indices.shape[-1] <= params.rank
gather_nd_kernel: In TF_GATHER mode, Invalid value of the argument 'axis'.
gather_nd_kernel: In TORCH_GATHER mode, Invalid value of the argument 'axis'.
gather_nd_kernel: In TORCH_GATHER mode, inputs should have the same rank.
gather_nd_kernel: In TORCH_GATHER mode, Invalid input shapes. Shapes can only differ in axis dimension.
gather_nd_kernel: Invalid MODE
scatter_nd_kernel: three inputs required
scatter_nd_kernel: In TF_SCATTER_ND mode, invalid indices. indices.shape[-1] <= params.rank
scatter_nd_kernel: In TF_SCATTER_ND mode, rank of indices tensor needs to be >= 2.
scatter_nd_kernel: In TF_SCATTER_ND mode, invalid shape of UPDATES tensor.
scatter_nd_kernel: In TF_SCATTER mode, Invalid value of the argument 'axis'.
scatter_nd_kernel: In TF_SCATTER mode, invalid shape of UPDATES tensor.
scatter_nd_kernel: In TORCH_SCATTER mode, Invalid value of the argument 'axis'.
scatter_nd_kernel: In TORCH_SCATTER mode, inputs should have the same rank.
scatter_nd_kernel: In TORCH_SCATTER mode, Invalid input shapes. For REF and INDICES tensor, shapes can only differ in axis dimension.
scatter_nd_kernel: In TORCH_SCATTER mode, Invalid input shapes. INDICES and UPDATES tensor should have the same shape.
scatter_nd_kernel: Invalid MODE
generic_split_nd_kernel: atleast one bottom blob required
generic_split_nd_kernel: Invalid value of the argument 'axis'.
non_maximum_suppression_kernel: must have at least 2 inputs.
non_maximum_suppression_kernel: first two inputs must have rank 3.
non_maximum_suppression_kernel: invalid input shape.
sparse_inner_product
generic_elementwise_kernel: cannot broadcast [%d, %d, %d, %d, %d] and [%d, %d, %d, %d, %d]
generic_elementwise_kernel: cannot broadcast [%d, %d, %d, %d, %d] and [%d, %d, %d, %d, %d] and [%d, %d, %d, %d, %d]
Unexpected type for 
fused_relu
fused_tanh
has_biases
has_8bit_weights
do_ncc
n_parallel
start_channel_bottom
start_channel_top
total_channel_top
pad_l
pad_r
pad_t
pad_b
pad_value
pad_fill_mode
leaky_relu_alpha
dilation_x
dilation_y
low_precision_accumulation
hint_use_winograd_win_size
pad_pad_mode
no_padding
total_pad_w
total_pad_h
stride
avg_or_max
size_x
size_y
average_count_exclude_padding
top_shape_style
force_num_channels
total_channel_bottom
compute_argmax_mask
is_global
size_t
padding
padding_x
padding_y
use_perceptio_version
strict_zero_padding
alpha
local_size
is_plain_sigmoid
is_log_softmax
softmax_cross_entropy_loss
nd_mode
has_prelu
is_lookup
add_to_output
use_raw_buffers
quantization_mode
tanh_alpha
tanh_beta
argmax_tree_n_clusters
argmax_tree_n_clusters_keep
sparse_block_size_x
sparse_block_size_y
compute_every
_rank
force_num_channels_of_first_blob
n_outputs
legacy_cut_mode
scaling_factor_x
scaling_factor_y
align_corners
scaling_factor
operation
no_broadcast
is_relu
is_tanh
leaky_alpha
start_fuse_z_0
start_fuse_z_1
start_fuse_z_2
start_fuse_z_3
normalization_mode
nd_rank
naive_backward
training_eps
training_momentum
training_instancenorm
training_subsampling
generate_mean_ivar
regularization_eps
training_mean
training_std
reseed_each_launch
dst_platform_id
src_platform_id
src_compute_path
dst_compute_path
dst_w
dst_h
dst_k
dst_n
dst_seq
dst_nd_rank
dynamic_shape
rank_preserving_mode
center_mean
bias_a
use_direct_cvpixelbuffer
qspec.ratio_to_float_model
qspec.is_signed
qspec.compute_path
interleave_factor
rnn_nonlinearity
hidden_size
seq2seq
input_embedding_size
output_embedding_size
input_read_onehot
input_read_symbol
input_read_symbol_onehot
input_max_len
output_max_len
input_stop_symbol
output_start_symbol
output_stop_symbol
beamsearch_width
output_embedding_tree
axis_mode
use_version
nd_axis
pad.l
pad.r
pad.t
pad.b
pad.value
pad.pad_mode
pad.fill_mode
dst_offset_x
dst_offset_y
src_crop_w
src_crop_h
src_offset_x
src_offset_y
axis_w
axis_h
axis_k
axis_n
block_size
reverse
start
static_size
ndlayers_impl
network_filename
gradient_network_filename
target_size_w
target_size_h
dense_start_x
dense_start_y
dense_stride_x
dense_stride_y
dense_size_x
dense_size_y
unnormalized_coordinates
grid_sampling_mode
crop_index_mode
spatial_scale
normalized_crop_indices
simple_mode
target_layer_condition_true
target_layer_condition_false
cf_stack_depth
w_quantization_scale
target_snetwork
num_k
single_axis_topk
do_bottomk
global_name
array_mode
delete_after_load
only_size
has_enumerate
slice_step
accumulate
simple_scatter
distribution
out_w
out_h
out_k
out_n
out_seq
num_lower
num_upper
invert
channel_mode
transpose_x
transpose_y
pads_
pad_to_given_size_mode
size_of_axes
axes_
squeeze_all
simple_gather
num_samples
deterministic
temperature
builtin_name
sarg0
sarg1
sarg2
sarg3
iarg0
iarg1
iarg2
iarg3
farg0
farg1
farg2
farg3
begin_w
begin_h
begin_k
begin_n
begin_seq
begin_mask_w
begin_mask_h
begin_mask_k
begin_mask_n
begin_mask_seq
end_w
end_h
end_k
end_n
end_seq
end_mask_w
end_mask_h
end_mask_k
end_mask_n
end_mask_seq
stride_seq
num_splits
begin_
batch_axis
reduce_mode
max_boxes
iou_threshold
score_threshold
per_class_suppression
has_momentum
num_variables
accumulation_mode
depth
off_value
exclusive
bottom_shapes
top_shapes
Size of data source is 0
not getting data for tensor '%s' at index %lu
data provider should provide tensor with batch size 1, instead of %d
5d tensor not supported yet
Null file pointer
blob_container_array_put: Invalid value of rank %d
blob_container_array_scatter: Invalid number of value blobs %ld != %ld
blob_container_array_get: Blob of shape (%d, %d, %d, %d, %d) %d cannot hold gathered blob of shape (%d, %d, %d, %d, %d) %d
blob_container_array_gather: Blob shape not compatible for gathering blob array
espresso.interpreter.verbose
missing src %s
missing dst %s
[interpreter_t] top.inetwork=%zu >= networks.size()=%zu
__launch_function
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-190/EspressoCore/ControlFlow/Interpreter.mm
segment.start == top.ilayer
Cannot find network %s
get_subnetwork
iter != index_of_network.end()
prepare_basic_block %zu %zu
prepare_basic_block
Phi kernel expected to have output
%zu: resolved_dim=%lld current_dim=%lld changed=%d
Missing weights
v16@?0Q8
ESPRESSO_CPU_FORCE_CHUNK_SIZE
Binserializer error 
Align error
Quantizing FC %s (%d x %d = %.2fk)
ip: %s
FC_INT8_INT8
 PSNR=%.2f (s %e b %e)
mkdir -p 
dump: %s
Min PSNR=%.2f
invalid state
conv: %s
compressing %s (%ld)
channels_per_chunk=%d
maxerr=%e mM=%e %e cmM=%e %e
Channel for chunk %d/%d: %d - %d. C=%d %e - %e
setting ranges %d
[Quant] PSNR %s (%s): %.3f (min=%.3f)
Total size of AUX lut tables/ranges %.4f MB
early exit iter=%d
Skipping quantization for depth-wise convs. workaround for rdr38565288
network not prepared for reshape_networks
nitro
[ESPRESSO_MEMORY_VERBOSE] %s %s -> %d
blob not found in gc
[ESPRESSO_MEMORY_VERBOSE] max size for color %d %.3fMB (%d %d %d %d)
Logic error in NetReshape, color 
allocate_and_color_blob
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-190/EspressoCore/NetReshape.mm
selected_color >= 0
shape_network_recursive
bottoms.size() == tops.size()
only root module can have globals
ESPRESSO_SKIP_REPORT_BENCHMARK_RESULT
result/add/json/
commitid
branch
project
Espresso
executable
compute_path
benchmark
environment
result_time
result_nerr
result_psnr
result_aerr
result_dcos10
result_mem
result_ioaccel_mem
result_power
result_top1
result_top5
aux0
aux1
aux2
aux3
[report_benchmark_result] t=%.2fms psnr=%.2f %s@%s
POST
application/json; charset=utf-8
Content-Type
[report_benchmark_result] %s error=%s
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
http://polluce.apple.com:18888/
ESPRESSO_PERF_SERVER
hw.model
kern.osversion
machdep.cpu.brand_string
DECAF
Memory allocation error %d: %zu bytes
com.apple.espresso.memdbgq
[mem] tot=%.3fM max=%.3f
getSizesPerPointer
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-190/EspressoCore/Blob.mm
debug_allocated_mem
Only fp32 and fp16 are supported
BNNS error
Null output blobs
Conv weights not set
L2 pooling is not supported on BNNS engine
fallback kernel not available
bnns failure
slow_batchnorm_fallback
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-190/AltEngines/BNNSEngine/BNNSEngine/BNNSKernels.mm
p.has_batch_norm
Unsupported version 
Unexpected null pointer
Error loading file: 
mmap error: 
Can't open for writing: 
Batch
Epoch
Unimplemented: unable to load updatable model w/ context: ANE
unsupported configuration: GPU not supported on this platform
Queried tensor '%s' not found in network
number tensors from data provider == %lu < number of requested tensors == %lu
tensor of name %s not provided by data provider
inconsistent shape of tensor %s between tensor in network and tensor provided by data loader: %s vs %s
Training Graph:
Src[%d]: %@ (layer[%d]) [w:%d,h:%d,k:%d,n:%d,seq:%d,rank:%d,platform:%d,computePath:%d]... 
data at 0: %f
%@: layer[%d], kernel type: %@, layerPlatform: %d, layerComputePlatform: %d
Dst[%d]: %@ (layer[%d]) [w:%d,h:%d,k:%d,n:%d,seq:%d,rank:%d,platform:%d,computePath:%d]... 
data at 0: %f
Batch size can't be 0/
is_training
end_training
compute_gradient
end_compute_gradient
do_optimization_update
end_optimization_update
No network made from call to load_network
_updatable.espresso.net
Found Espresso network (model_updatable.espresso.net) has no training graph
globals_container_net
_auxiliary_output
_mse-int1
_mse-int2
_mse-int3
_l2/mse-sub
_l2/mse-add
_l2/mse-pow
_l2/mse-reduce
loss type not supported: %d
layer_type
layer_name
layer_idx
Invalid optimizer type, optimizer must be of type SGD or Adam
MultiGPU not supported yet
training control variable '%s' not found
Initializer '%s' not found
Failed to setup inputs %@
Failed to train on the network %@
Failed to save the network %@
Missing inference layer %s
Unable to find layer named: %@
Unable to set tensor named %@, no variable tensor with that name found.
Trying to set tensor %@ failed, tensor must be of type: kETDataTypeFloat32.
Trying to set tensor %@ failed, provided tensor must be of shape: %@, (found: %@).
Trying to set tensor %@ failed, provided tensor must have strides: %@ (found: %@).
inferenceGraphNetPtr
T{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}},V_inferenceGraphNetPtr
trainingGraphNetPtr
T{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}},V_trainingGraphNetPtr
inferenceModel
T@"ETModelDefinition",&,N,V_inferenceModel
optimizer
T@"ETOptimizerDefinition",&,N,V_optimizer
TQ,N,V_platform
taskState
T@"ETTaskState",&,N,V_taskState
Invalid rank: 
beta1_accum
beta2_accum
unordered_map::at: key not found
EspressoPass_%s
Pass not found %s
Invalid pass %s
com.apple.Espresso.registerBrickLock
Brick ObjC class: '
' not found
Don't know what to do.
class_name
parameters_json
width
Ti,V_width
height
Ti,V_height
channels
Ti,V_channels
batch
Ti,V_batch
Ti,V_sequence
rank
Ti,V_rank
T@"EspressoBrickTensorShape",&,V_shape
rawPointer
T^f,V_rawPointer
texture
T@"<MTLTexture>",&,V_texture
Inconsistent state
not implemented
Undefined weights 
Unexpected not-implemented function 
{shared_ptr<Espresso::generic_factory_t>=^{generic_factory_t}^{__shared_weak_count}}8@?0
layer_io_base
Unexpected size s=
/blob=
Stack not empty after end of pass head=%zu size=%zu
Else at end of program
Unbound branch at end of program
Cannot find the label to bind
DummyMPSEngine
DummyBNNS
IREngine
DummyMPSBuffersEngine
nonlinearity
prediction_smoothing
dropout
compute_stats
lambda
patch_extractor
dynamic_quantize
dynamic_dequantize
cf_return
gather
alloc
scatter
array_gather
multinomial
builtin
transplant
cross_entropy
precompiled_segment
one_hot
cumsum
dev_op
BNNS
!!! you should not read this !!!
the hash is already used in the file
memory allocation error
I/O error
invalid blob ID
invalid data type
invalid parameter
undexpected null pointer
internal error
not implemented error
model.espresso.weights
/updated_opcode_
/updated
step_global
step_scheduler is not implemented
/neg
sgd_step/
/momentum
/decayed
/step
sgd_update/
sgd_optimizer
/res
/scale
/variance
/squered
/bias_correction
/rsqrt
/adam_step
adam_update/
/var
adam_optimizer
QUANT_SIM
post scale dim != 1 or channel size
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-190/AltEngines/ANESimEngine/QuantSimEngine.mm
W_S8
ane_bias
ane_acc_bias_shift
phi_
com.espresso.random
create_compiler_for_network
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-190/EspressoCore/path.mm
build_grads_for_inputs not implemented
com.apple.espresso
espresso
__copy_from_raw not defined for platform 
[retry]: %s err=%s
async_cache: Failed to create a dispatch queue
async_cache: no blob provided
async block timed out
Conv fp16 weights not set
shuffled weights not supported
[%d,%d,%d,%d,%d], [%d,%d,%d,%d,%d]
Elwise Op not implemented
{shared_ptr<Espresso::factory_object>=^{factory_object}^{__shared_weak_count}}8@?0
Deserialization tag "
" not found
Invalid stream passed to deserialize
Error allocating memory for deserialization
Error reading deserialization input
Error reading the input file as JSON. Error: %s
deserialize
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-190/EspressoCore/SerDesBackends/SerDesJSONObjC.mm
deserialized_object
The top level object in the JSON input must be a dictionary
wait_next_async_buffer
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-190/EspressoCore/EspressoLight.mm
n_async_buffers > 0
first_available_buffer >= 0 && first_available_buffer<n_async_buffers
done_with_async_batch
async_buffer < n_async_buffers
done_with_network
old_value > 0
espresso.force_engine
Espresso compiled without METAL engine.
Espresso compiled without CUDNN engine.
Espresso compiled without MPS engine.
Espresso compiled without HX engine.
Espresso compiled without HX CVA engine.
Unsupported engine type
Invalid platform enum 
Low priority mode not supported on this platform
espresso.force_dtype
Null path
Compute path 
 not supported.
The context is invalid.
Cannot load network '
Cannot load network.
Inconsistent phase of espresso_plan: 
Invalid network_index.
Null network found.
Blob '
' not found.
Inconsistent phase of espresso_plan: %d
Setting the priority is not supported on this engine.
Setting the execution queue is not supported on this engine.
network_version
Empty espresso_plan.
[espresso] Dumping to %s
Cannot write to path 
multi_head_prune
dump_compiler_ir
network->compiler
create_binding_task
priv->binding_task == nullptr
Invalid network index
No outputs declared
No inputs declared
Input not declared 
bind_input
priv->input_shapes.find(network_index) != priv->input_shapes.end()
net_blob
Binding buffers cannot be done while a plan is being executed.
Output not declared
Output not declared 
bind_output
priv->output_shapes.find(network_index) != priv->output_shapes.end()
Blob not found.
Input not declared
%s not declared: %s
generic_bind_external
Mismatching w: client:%d != internal:%d
Mismatching h: client:%d != internal:%d
Mismatching k: client:%d != internal:%d
Mismatching n: client:%d != internal:%d
Mismatching seq: client:%d != internal:%d
Invalid X-dimension 
Invalid Y-dimension 
Invalid K-dimension 
Invalid N-dimension 
Null image buffer
Null image buffer data
Blob null. 
Not implemented.
Only one of cvpixelbuffer and tex must be set
Image pre-processing were pre-compiled, cannot change them now
Pixel buffer must not be null.
Buffer with null data in blob 
CVPixelBuffer input not supported on pre-TibO
__copy_inputs
network_blob_it != task->_input_blobs.end()
blob_pair_it != network_blob_it->second.end()
__copy_outputs
network_blob_it != task->_output_blobs.end()
dispatch_task_on_compute_batch
priv->status == ESPRESSO_PLAN_PHASE_BUILT
The plan must have at least one network to execute.
async submit not available in decaf mode
Espresso compiled without required engine for this API.
Invalid network
n_runs
[espresso_plan::perfbench] avg runtime (ms) = %.2f
Missing input shape: 
A plan cannot be cleaned while it is being executed.
espresso_plan::save not implemented.
espresso_plan::load not implemented.
ESPRESSO_STATUS_SUCCESS
ESPRESSO_STATUS_ERROR_GENERIC
ESPRESSO_STATUS_ERROR_IO
ESPRESSO_STATUS_ERROR_PARSE
ESPRESSO_STATUS_ERROR_MEMORY
ESPRESSO_STATUS_ERROR_INVALID_STATE
ESPRESSO_STATUS_ERROR_INVALID_ARGUMENT
ESPRESSO_STATUS_ERROR_INVALID_BLOB_SHAPE
ESPRESSO_STATUS_ERROR_INVALID_BLOB_NAME
ESPRESSO_STATUS_ERROR_NOT_IMPLEMENTED
ESPRESSO_STATUS_ERROR_COMPUTATION_KILLED
A plan cannot be destroyed while it is being executed.
mode_flags
format_flags ESPRESSO_BIND_FORMAT_NCHW_INTERNAL_STORAGE
Wrong argument passed to espresso_plan_get_last_error.
Not supported engine: 
Not supported storage_type: 
Unsupported quantized weight memory type: 
Not supported: 
FP32
FP16
Not supported compute_path: 
catvsdog.net
image
It's a cat!
The priority passed is not a valid value.
Unexpected null network
Unexpected null context
ESPRESSO_LITE_TEST_VECTORS
Cannot create directory: 
blobs.bin
test_vector.json
test_vector.plist
Cannot create file: 
binary_file
offset
size
Cannot write file: 
__raw__
no_alpha_premultiply
enable_overflow_error
random_seed
code.nitroir
Inconsistent phase of espresso_plan
Inconsistent phase of src espresso_plan
com.espresso.multi_buffers_ane_q
kernel not found '
' on platform 
{shared_ptr<Espresso::base_kernel>=^{base_kernel}^{__shared_weak_count}}32@?0r^{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}8^v16r^i24
no_op
inner_product_quantized
nonlinearity_grad
GRU Not implemented
[matrix_vector_mult_batched] Mismatch 
GRU not implemented
bind_external_input
bind_external_output
input_raw_ptr
output_raw_ptr
set_input_raw_ptr
set_output_raw_ptr
bind_dyn_output
unbind
submit
bind_input_vimagebuffer_XYZA8
bind_input_vimagebuffer_argb8
bind_input_cvpixelbuffer
parallel_softmax_2channels_chunk
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-190/EspressoCore/SoftmaxKernelCPU.mm
params->channel_size == 2
parallel_softmax_2channels
channel_size == 2
Missing operand
Axis not supported
Only reduce on single axis is supported
generic_general_slice: Mismatch between the input rank and the number of elements in begin_ids
generic_general_slice: Mismatch between the input rank and the number of elements in end_ids
generic_general_slice: Mismatch between the input rank and the number of elements in begin_masks
generic_general_slice: Mismatch between the input rank and the number of elements in end_masks
generic_general_slice: Mismatch between the input rank and the number of elements in strides
generic_general_slice: Invalid values in begin_ids
generic_general_slice: Invalid values in end_ids
generic_general_slice: Invalid values in strides
generic_general_slice: Invalid values in arguments (begin_ids, end_ids, strides)
general_slice_kernel_cpu: Invalid values in begin_ids
general_slice_kernel_cpu: Invalid values in end_ids
general_slice_kernel_cpu: Invalid values in arguments (begin_ids, end_ids, strides)
Mismatch between rank of input/output tensors and the length of axes.
Invalid axes argument
Invalid input shape
Invalid shape of first argument.
Invalid shape of second argument.
Invalid rank of output.
Invalid rank of output
Incompatible shapes for matrix multiplication.
Invalid shapes for broadcasting
Invalid value of the argument 'axis'.
BroadcastTo layer: Invalid target shape.
BroadcastTo layer: Invalid shapes for broadcasting.
Gather layer: Invalid rank of Output.
Gather layer: Invalid value of the argument 'axis'.
Gather layer: Invalid indices.
Stack_nd layer: Invalid shapes of input tensors.
Stack_nd layer: Invalid rank of output tensor.
Stack_nd layer: Invalid value of the argument 'axis'.
Split layer: Invalid number or size of splits.
Mismatch between ranks of input and output tensors.
Tile layer: Mismatch between input rank and the number of elements in reps.
Tile layer: Invalid values in reps.
Sliding Windows Layer: Mismatch between ranks of input and output tensors.
Sliding Windows Layer: Window size can't be less than 1
Sliding Windows Layer: Step can't be less than 1
Sliding Windows Layer: Invalid value of the argument 'axis'.
Sliding Windows Layer: Window Size can't be larger than the dimension length.
Sliding Windows Layer: Invalid values in arguments (axis, window_size, step)
Reverse_seq Layer: Invalid value of the argument 'batch_axis'.
Reverse_seq Layer: Invalid value of the argument 'seq_axis'.
Reverse_seq Layer: batch_axis: %d should be strictly less than seq_axis: %d
Reverse_seq Layer: seq_lengths should be a vector of length equal to batch dimension of input.
Reverse_seq Layer: each seq_lengths element should be <= sequence dimension of input.
<empty>
com.apple.espresso.factorylock
shared_block_invoke
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-190/EspressoCore/factory.mm
factories == nullptr
shared_block_invoke_2
add_result.second
factory_iterator != factories->end()
blobs
T{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}},V_blobs
networkPointer
T{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}},V_networkPointer
Inconsistent status
_conv_group
inception_
_fused
not implemented!
Not supported
Invalid kernel: use fold_batchnorm first
fold_transform_params: Only available for VALID convolutions
blob shape not found: 
Fold concat: layer not supported! 
__tx__smooth
_cpu
[sequential_builder::add_kernel] %s %s
shape of input %s missed
[sequential_builder::add_network] %s -> %s
op_of_type_
constant_like_op/
constant_op/
global already exists: %s
load_global
write/
store_global
/reduce_(
placeholder/
shape of blob %s is missing
iterative_grow can only be used with b.n_samples==1
_bnrenorm_tmp
v16@?0^{single_match_state<Espresso::generic_convolution_kernel>={shared_ptr<Espresso::generic_convolution_kernel>=^{generic_convolution_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}i^{net}}8
Inconsistent state: no inputs to BN
%s %d - %f (%f) %f (%f)
/tmp/bn_
delta_moving_average: min=%.4e max=%.4e avg=%.4e
feed_data_source_to_network: empty network array
feed_data_source_to_network: null data source
feed_data_source_to_network: networks have different batch size
Invalid context: memory aliasing optimizations must be disabled (network_allocate_using_reshape_graph_coloring)
Input blob 
 missing from data_source
entries
entries_per_ch
Cannot serialize to JSON. Error: %s
Cannot write to: %s
Cannot load to: %s
Cannot de-serialize from JSON. Error: %s
min_val
max_val
stddev
mean_sq
n_samples
test_data
test_data.json.bin
test_data.json
regression_conf.json
/code.nitroir
Cannot create file: %s
tolerance
tol_relerr
tol_aerr
tol_psnr
data_frames_file
config
tests
frames
Invalid state: network not added
ground_truths
net is null in tracer.
kind
file
row_bytes
tensor
Cannot write file: %s
function_name
Invalid state: No frames exists in the trace
 -> 
 (kx=
 ky=
 ng=
:blob_type(
layer_io not found for %s
.weights
.bin
.bin:
properties
format_version
numerical_parameters
numerical_properties
configurations
deconv_out_height
deconv_out_width
Load: unable to find implementation of class
 platform=
hint_fallback_from_metal
attributes
meta_convolution
blob_shuffled_weights
Unsupported weights format
blob_weights
blob_biases
has_batch_norm
quantization_lut_weights_blob
quantization_lut_blob
quantization_ranges_blob
q_u8_range
blob_weights_f16
W_f16
blob_batchnorm_params
constant_blob
context_transfer
share_weights_from_layer_named
script
multi_head
skip_script_setup
external_networks
subnetworks
Error reading layer shapes
global_shapes
Invalid blob_storage_write_version: 
layer_io not found for '
Invalid source layer %s
blob_
storage
Can't find blob id 
Error reading blob id 
internal image library not available
Cannot find key: 
 idx=
Missing weights path %s
Null analysis
generic_serdes_object
Mismatch between lengths of shape and strides
Invalid multi_index
layerNames
T@"NSArray",R,V_layerNames
inputs
T@"NSArray",R,V_inputs
outputs
T@"NSArray",R,V_outputs
trainingInputs
T@"NSArray",R,V_trainingInputs
trainingOutputs
T@"NSArray",R,V_trainingOutputs
T@"NSURL",R,V_modelURL
isTrainingGlobalName
T@"NSString",R,V_isTrainingGlobalName
initializer
T@"NSString",R,V_initializer
__isPlatformOrVariantPlatformVersionAtLeast
/BuildRoot/Library/Caches/com.apple.xbs/Sources/clang/clang-1103.0.32.2/compiler-rt/lib/builtins/os_version_check.c
Platform2 == PLATFORM_MACOS && "unexpected platform"
_availability_version_check
kCFAllocatorNull
CFDataCreateWithBytesNoCopy
CFPropertyListCreateWithData
CFPropertyListCreateFromXMLData
CFStringCreateWithCStringNoCopy
CFDictionaryGetValue
CFGetTypeID
CFStringGetTypeID
CFStringGetCString
CFRelease
/System/Library/CoreServices/SystemVersion.plist
ProductVersion
%d.%d.%d
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-680.100.5/coremltools/deps/protobuf/src/google/protobuf/arena.cc
CHECK failed: (n) <= (std::numeric_limits<size_t>::max() - kHeaderSize): 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-680.100.5/coremltools/deps/protobuf/src/google/protobuf/io/coded_stream.cc
CHECK failed: (buffer_size) >= (0): 
A protocol message was rejected because it was too big (more than 
 bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-680.100.5/coremltools/deps/protobuf/src/google/protobuf/stubs/common.cc
[libprotobuf %s %s:%d] %s
INFO
WARNING
ERROR
FATAL
pthread_mutex_unlock: 
pthread_mutex_lock: 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-680.100.5/coremltools/deps/protobuf/src/google/protobuf/wire_format_lite.cc
CHECK failed: (value.size()) <= (kint32max): 
serializing
parsing
 '%s'
String field
 contains invalid 
UTF-8 data when 
 a protocol 
buffer. Use the 'bytes' type if you intend to send raw 
bytes. 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-680.100.5/coremltools/deps/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc
CHECK failed: (count) >= (0): 
CHECK failed: (last_returned_size_) > (0): 
BackUp() can only be called after a successful Next().
CHECK failed: (count) <= (last_returned_size_): 
CHECK failed: backup_bytes_ == 0 && buffer_.get() != NULL: 
 BackUp() can only be called after Next().
CHECK failed: (count) <= (buffer_used_): 
 Can't back up over more bytes than were returned by the last call to Next().
 Parameter to BackUp() can't be negative.
CHECK failed: (backup_bytes_) == (0): 
CHECK failed: (buffer_used_) == (buffer_size_): 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-680.100.5/coremltools/deps/protobuf/src/google/protobuf/io/zero_copy_stream.cc
This ZeroCopyOutputStream doesn't support aliasing. Reaching here usually means a ZeroCopyOutputStream implementation bug.
AuthenticAMD
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-680.100.5/coremltools/deps/protobuf/src/google/protobuf/message_lite.cc
CHECK failed: !coded_out.HadError(): 
(cannot determine missing fields for lite message)
parse
Can't 
 message of type "
" because it is missing required fields: 
Exceeded maximum protobuf size of 2GB: 
CHECK failed: (byte_size_before_serialization) == (byte_size_after_serialization): 
 was modified concurrently during serialization.
CHECK failed: (bytes_produced_by_serialization) == (byte_size_before_serialization): 
Byte size calculation and serialization were inconsistent.  This may indicate a bug in protocol buffers or it may be caused by concurrent modification of 
This shouldn't be called if all the sizes are equal.
Must provide training inputs for updatable neural network (expecting both input and target for loss function).
Training inputs don't describe required inputs for the loss (needs both the input and the target).
The training inputs must include at least one input from the model itself as required for training (should have at least one input in common with those used for prediction).
The type of the training input provided: 
 doesn't match the expected type of the classifier. Found: 
, expected: 
The training inputs don't include the target of the classifier: 
The training inputs don't include the loss layer's target: 
The layer named '
' is marked as updatable, however, it is not supported as the type of this layer is neither convolution nor inner-product.
The model is marked as updatable, but none of the layers are updatable.
The updatable model has a name collision for: '
', i.e., there are more than one layers or loss layers with this name.
This model has more than one loss layers specified, which is not supported at the moment.
Failed to look up node for '
There is a layer (
), which does not support backpropagation, between an updatable marked layer and the loss function.
Epochs should be included in neural network update parameters.
SGD optimizer should include learningRate parameter.
SGD optimizer should include miniBatchSize parameter.
ADAM optimizer should include learningRate parameter.
ADAM optimizer should include miniBatchSize parameter.
ADAM optimizer should include beta1 parameter.
ADAM optimizer should include beta2 parameter.
ADAM optimizer should include eps (epslion) parameter.
Optimizer is not recognized.
For the categorical cross entropy loss layer named '
', input is not generated from a softmax output.
For the cross entropy loss layer named '
', target is generated within the graph.
For the MSE loss layer named '
', input is not generated within the graph.
Loss function is not recognized in the loss layer named '
', only cross entropy loss and MSE are supported.
An updatable layer, named '
', has a weight/bias param which is not marked as updatable.
CoreML.Specification.CategoricalMapping.strValue
CoreML.Specification.CategoricalMapping
CoreML.Specification.Pipeline.names
CoreML.Specification.Model
CoreML.Specification.ModelDescription.predictedFeatureName
CoreML.Specification.ModelDescription.predictedProbabilitiesName
CoreML.Specification.ModelDescription
CoreML.Specification.Metadata.shortDescription
CoreML.Specification.Metadata.versionString
CoreML.Specification.Metadata.author
CoreML.Specification.Metadata.license
CoreML.Specification.Metadata.UserDefinedEntry.key
CoreML.Specification.Metadata.UserDefinedEntry.value
CoreML.Specification.Metadata
CoreML.Specification.FeatureDescription.name
CoreML.Specification.FeatureDescription.shortDescription
CoreML.Specification.FeatureDescription
CoreML.Specification.PipelineRegressor
CoreML.Specification.PipelineClassifier
CoreML.Specification.Pipeline
Convolution
Convolution Layer '
' does not support weight as input tensor when RANK5_ARRAY_MAPPING == true.
Padding type for convolution layer '
' is not set.
Deconvolution Layer '
' does not support weight as input tensor.
'  has invalid weights/bias fields.
Convolution layer 
has unmatched precisions of weights/bias They should either be half or full precision.
Deconvolution layer '
' has weight matrix of size 
 to encode a 
 convolution.
weight
Layer 
has not specified weights.
' has a bias vector of size 
 but should be 
bias
has not specified bias.
' has incorrect 
 size 
 (expected 
' has insufficient bytes for quantized 
 with 
units.
' has invalid quantization parameters for quantized 
' has unspecified 
' has empty 
input
output
' of type '
' has 
 rank 
 but expects rank exactly 
 but expects rank at least 
 but expects rank at most 
' expects equal ranks for its input and output, but they are not equal.
' of type 
 has 
 outputs but expects exactly 
 outputs but expects at least 
 outputs but expects at most 
 inputs but expects exactly 
 inputs but expects at least 
 inputs but expects at most 
InnerProduct
Inner product
BatchedMatMul
 layer '
' has invalid weights/bias fields.
 has incorrect weight matrix size 
' has incorrect bias vector size 
Batchnorm
Batchnorm layer '
' parameters have values for both full and half precision. Parameters should either be specified in half or full precision, mixed parameters are not supported.
BatchNorm
' is missing mean and variance.
ActivationPReLU
ActivationParametricSoftplus
Nonlinearity type 
 has inconsistent weight parameter types.
 is not supported in this version of CoreML.
MLActivationParamsNonlinearityType_parametricSoftplus
MLActivationParamsNonlinearityType_softplus
MLActivationParamsNonlinearityType_softsign
MLActivationParamsNonlinearityType_ELU
MLActivationParamsNonlinearityType_sigmoidHard
MLActivationParamsNonlinearityType_sigmoid
MLActivationParamsNonlinearityType_scaledTanh
MLActivationParamsNonlinearityType_tanh
MLActivationParamsNonlinearityType_PReLU
MLActivationParamsNonlinearityType_thresholdedReLU
MLActivationParamsNonlinearityType_leakyReLU
MLActivationParamsNonlinearityType_ReLU
MLActivationParamsNonlinearityType_linear
Pooling
Padding type for the pooling layer '
Padding
Padding layer 
 specifies 
 padding amounts but it must either specify 2 (for x and y axes), or 0 for the default values.
 padding type is not set.
LRNLayer
Parameter 'K' for the LRN layer '
' must be positive.
Split
' of type 'Split' must have equal ranks for its outputs, but they are not equal.
Unary
Upsample
Scaling factor in the upsampling layer '
' must be a vector of size 2 (i.e height, width) but is a vector of size 
Bias
Bias product layer '
' has both full precision and half precision weights and/or bias fields populated
Bias layer '
' cannot be 
 dimensional. Must be 1D or 3D.
L2Normalize
Reshape
Reshape layer '
' target shape must be 3D or 4D.
Flatten
Permute
Permute layer '
' must have 4D axis parameters.
Reduce
Reduce layer '
': input's rank is smaller than the dimensions provided in the axis parameter
ReorganizeData
Block size for layer '
' must be > 1.
Slice
Slice layer '
': input's rank is smaller than the dimension provided in the axis parameter
Stride length for the slice layer '
Slice layer 
 has an end index before the start index.
LoadConstant
Load constant layer '
' has both full precision and half precision weight fields populated
' must be a 3D constant.
constants
Scale
Scale layer '
' has invalid scale/bias fields.
' has invalid scale/bias fields. Field value types should match and should either be half or full precision.
The shape vector for the scale layer '
' is 
 dimensional but should be 1D or 3D.
The bias vector for scale layer '
 dimensional but should be either 1D or 3D.
Simple recurrent layer '
' has invalid weightMatrix/recusionMatrix/Bias fields.
' has invalid weightMatrix/recusionMatrix/Bias fields. Field value types should match and should either be half or full precision.
SimpleRNN
WeightMatrix
RecursionMatrix
BiasVector
Recurrent non-linearity type 
GRU layer '
' has invalid weight/recursion matrix or bias fields. Field value types should match and should be either half or full precision
update gate weight matrix
reset gate weight matrix
output gate weight matrix
update gate recursion matrix
reset gate recursion matrix
output gate recursion matrix
update gate bias vector
reset gate bias vector
output gate bias vector
UniDirectionalLSTM
Unidirectional LSTM layer:
 must provide 3 activations
Unidirectional LSTM
input gate weight matrix
forget gate weight matrix
block input gate weight matrix
input gate recursion matrix
forget gate recursion matrix
block input gate recursion matrix
input gate bias vector
forget gate bias vector
block input bias vector
input gate peep hole vector
forget gate peep hole vector
output gate peep hole vector
LSTM weight parameters have inconsistent field value types. Types should match and should be either half or full precision
BiDirectionalLSTM
Bidirectional LSTM layer:
 forward lstm must provide 3 activations
 backward lstm must provide 3 activations
Bidirectional LSTM
forward input gate weight matrix
forward forget gate weight matrix
forward block input gate weight matrix
forward output gate weight matrix
forward input gate recursion matrix
forward forget gate recursion matrix
forward block input gate recursion matrix
forward output gate recursion matrix
backward input gate weight matrix
backward forget gate weight matrix
backward block input gate weight matrix
backward output gate weight matrix
backward input gate recursion matrix
backward forget gate recursion matrix
backward block input gate recursion matrix
backward output gate recursion matrix
forward input gate bias vector
forward forget gate bias vector
forward block input bias vector
forward output gate bias vector
backward input gate bias vector
backward forget gate bias vector
backward block input bias vector
backward output gate bias vector
forward input gate peephole vector
forward forget gate peephole vector
forward output gate peephole vector
backward input gate peephole vector
backward forget gate peephole vector
backward output gate peephole vector
Crop
' of type 'Crop' expects equal ranks for its inputs, but they are not equal.
cropAmounts parameter for the crop layer '
' is of length 
 but requires exactly two crop constraints (for X,Y axes).
Offset parameter for the crop layer '
 but requires exactly two offsets (for X,Y axes).
DotProduct
' of type 'DotProduct' expects equal ranks for its inputs, but they are not equal.
MeanVarianceNormalize
Embedding
EmbeddingND
' has invalid weights/bias fields. Field value types should match and should either be half or full precision.
SequenceRepeat
Softmax
Concat
' of type 'Concat' expects equal ranks for its inputs, but they are not equal.
Custom layer 
 has an empty 'className' field. This field is required in order for Core ML to link to the implementation for this custom class.
 has a weights parameter with multiple types filled in.  The WeightParams message should be treated as a oneof.
ResizeBilinear
Target Size in the resize bilinear layer '
CropResize
' of type 'CropResize' expects equal ranks for its inputs, but they are not equal.
Target Size in the crop resize layer '
Branch Layer '
' input's length cannot be more than 1
' requires the condition blob '
' which is not present in the network prior to this layer.
' has an empty If branch
Axes are required parameters for '
' layer.
Copy layer '
' has identical input and output names.
BatchedMatMul layer '
': given ranks of the two inputs, rank of the output is incorrect.
': has one input, in this case, output and input ranks must be equal but they are not.
': has two inputs and 'hasBias' flag is set to True.However, bias is only supported when the layer has 1 input.
Value of axis must be in the range [-rank(tensor), rank(tensor)) for '
Invalid size of reverse_dim for '
Target shape is required parameter for '
Scatter layer must have 3 input tensor fields filled
Input ranks of Scatter layer '
' are invalid.
Scatter layer must have 1 output tensor fields filled
Output rank of Scatter layer '
' does not match container input.
Shapes of all inputs must match for '
Value of axis must be in the range [-rank(tensor), rank(tensor)] for '
Either split_sizes or num_splits should be provided for '
Value of num_splits should match size of output names for '
Value of minval should be smaller than maxval for '
Begin IDs are required parameters for '
End IDs are required parameters for '
Strides are required parameters for '
Begin masks are required parameters for '
End masks are required parameters for '
Loop Layer '
' has an empty body network
': condition variable must be provided if condition network exists and vice versa.
': has no input, no condition network and max loop iterations is 0.
': has conditionVar named '
' which is not produced by the condition network
Loop Break Layer '
' must be inside the bodyNetwork of a loop layer.
Loop Continue Layer '
RankPreservingReshape Layer '
': input and output rank must be equal.
': input rank must be same as the length of the target shape property.
' must have rank specified for its input and output.
ExpandDims Layer '
': length of the 'axes' parameter cannot be 0.
': all the values in the 'axes' parameter must be unique.
': input rank plus the length of the axes parameter must equal output rank.
': axes parameter list cannot have the same value more than once.
': axes refers to a dimension that exceeds the output rank.
Squeeze Layer '
': output rank plus the length of the axes parameter must equal input rank.
': axes refers to a dimension that exceeds the input rank.
Range
LoadConstantND layer '
'can only accept shape of length 1 to 5
LoadConstantND
Value of prob should be in range [0: 1] for '
TopK
' of type 'TopK' expects equal ranks for its input and second output, but they are not equal.
ArgMax
ArgMin
Normalized shape is required parameter for '
Gamma is required parameter for '
Beta is required parameter for '
Gamma and Beta should not be quantized for '
Shape of gamma should match normalized_shape for '
Shape of beta should match normalized_shape for '
ConstantPad
In 'ConstantPad' layer '
', length of 'padAmounts' parameter is 
, an odd value, which is not allowed.
', length of 'padAmounts' cannot be zero when only 1 input is provided.
', 'padToGivenOutputSizeMode' is true, and both padding values corresponding to dimension 
 are non zero, which is invalid. Only one value can be non-zero.
Unsupported layer type (
) for layer '
Model specification version field missing or corrupt.
The .mlmodel supplied is of version 
, intended for a newer version of Xcode. This version of Xcode supports model version 
 or earlier.
Model specification version for an updatable model must be '
' or above.
Model did not specify a valid model-parameter type.
unable to open file for read
unable to open file for write
Dimension size must be greater tha zero.
Feature descriptions exceeded 
". Should be one of: 
Int64 class labels must be supplied for SVM classifier.
coefficient array must be size numberOfClasses - 1 (
). Instead it is size 
Must specify sparse or dense support vectors
numberOfSupportVectoresPerClass array must be size numberOfClasses 
 instead it is size 
sum of numberOfSupportVectorsPerClass 
 must sum to total number of support vectors 
Incorrect number of coefficients: There should be 
 not 
probA and probB must be same size
Expected length of probA is number of class pairs: 
Gamma must be greater than or equal to zero
Degree must be greater than or equal to zero
You must specify a supported kernel type
' to the model is not present in the model description.
The number of coefficients must match the number of support vectors.
CoreML.Specification.Identity
CoreML.Specification.CoreMLModels.VisionFeaturePrint
CoreML.Specification.CoreMLModels.VisionFeaturePrint.Scene
Size range is invalid (
Feature description must have a non-empty name.
' has enumerated zero permitted sizes.
' has enumerated shapes with zero dimensions.
' has a default shape specified 
 which is not within the allowed enumerated shapes specified.
' has an invalid range for dimension 
' has a default 
-d shape but a 
-d shape range
' has a default shape that is out of the specified shape range
' has missing shape constraints.
' has an invalid or unspecified dataType. It must be specified as DOUBLE, FLOAT32 or INT32
' has a default size of 
 which is not within the allowed enumerated sizes specified.
' has an invalid flexible width range. 
' has an invalid flexible height range. 
' default width 
 is not within specified flexible width range
' default height 
 is not within specified flexible height range
Sequence types are only valid in specification verison >= 
. This model has version 
Description of sequence feature '
' has invalid allowed sizes. 
' has invalid or missing type. Only Int64 and String sequences are currently supported
Models must have one or more inputs.
Models must have one or more outputs.
Specification is missing regressor predictedFeatureName.
At least one feature for a neural network must NOT be optional.
Features cannot be optional to this type of model.
Outputs cannot be optional.
This model type is not supported for on-device update.
For this neural network classifier, the probabilities are obtained from the layer '
' which was not found in the network.
Output layer '
' is not produced by any layer of the neural network.
Neural Network Multi-Array input shape mapping cannot be 'RANK5_ARRAY_MAPPING' if the image input Shape mapping is not 'RANK5_IMAGE_MAPPING'
Neural networks require at least one input.
Neural networks produce at least one output.
Neural networks require at least one layer.
Neural networks require at least one non-optional input.
Neural Networks require inputs to be images or MLMultiArray.
__input
Input MLMultiArray to neural networks must have dimension 1 (vector) or 3 (image-like arrays).
Input MLMultiArray to neural networks must have at least 1 dimension.
For MLMultiArray input: Rank of the flexible shape range must match the rank of the default shape.
Error determining network blob shapes: 
Layer '
''s input and inputTensors have different lengths
''s input '
' is also an input to the model. However, for this tensor the rank provided in the layer description
 does not match the one provided in the model description
Inconsistent rank for the blob named '
''s output and "outputTensors" property have different lengths
''s output '
' is also an output of the model. However, for this tensor the rank provided in the layer description
' consumes an input named '
' which is not present in this network.
' produces an output named '
' which is also an output produced by the layer '
Tensor in layer '
': rank must match the length of dimValue
Neural Network outputs must be either an image or MLMultiArray.
Interface specifies output '
' which is not produced by any layer in the neural network.
CoreML.Specification.OneHotEncoder
CoreML.Specification.CoreMLModels.TextClassifier.language
CoreML.Specification.CoreMLModels.TextClassifier
Reduce layer axis not set -- should have been caught in validator.
Slice layer axis incorrect -- should be caught in validator.
Layer type not found.
Shape inference not implemented for this layer type.
Default Value (
) for '
' expected to be a positive value.
Non-positive value (
) in Allowed Values Set for '
' is not allowed.
Specified Default Value (
) not found in Allowed Values Set for '
Non-positive min value (
) in Allowed Value Range for '
Non-positive max value (
) out of Allowed Value Range for '
Specified minimum value (
) greater than maximum value for '
CoreML.Specification.Scaler
Weights and offsets must be the same size.
All weight coefficients must be the same size.
Invalid post evaluation transform
Invalid class encoding
The number of DoubleArrays in weights must be greater than zero
The number of DoubleArrays in weights must match number of offsets
With ReferenceClass encoding the number of DoubleArrays in weights must be one less than number of classes
When using OneVsRest encoding for only two classes, the number of DoubleArrays in weights must be one
With OneVsRest encoding the number of DoubleArrays in weights must equal the number of classes
Probit post evaluation transform is only supported for binary classification
Weight DoubleArrays must have nonzero length
Weight DoubleArrays must have the same length
Classifier declared to have Int64 class labels must provide labels.
Classifier declared to have String class labels must provide labels.
Classifier models must provide class labels.
Attempting to access unbound size_t val from RangeVal.
Dividing range 
 by 0.
Constructing invalid ShapeRange with 
Constructing invalid ShapeRange unbound minimum value.
Invalid setUpper 
 for range: 
Invalid setLower 
Dividing ShapeRange 
 by negative or zero value 
Invalid setValue 
Invalid intersection between 
 and 
Attempting to constrain an input or output feature "
" with an invalid array shape constraint.
Attempting to update feature constraint 
 with a type description which is not a multi array or image.
Invalid channel range in blob 
Invalid height range in blob 
Invalid width range in blob 
Invalid sequence range in blob 
Invalid batch range in blob 
Incorrect input shape, should be 1-dimension, of length: 
Incorrect output shape, should be 3-dimension, of size: 
Type for sound analysis preprocessing not set
Only 1 dimensional arrays input features are supported by the imputer.
Shape of imputed array value does not match shape of input array.
Imputer parameter must be set.
Type of input feature "
" is not compatible with given imputed value type.
Type of given replace value not compatible with input feature type.
CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing
CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing.Vggish
CoreML.Specification.GLMClassifier
CoreML.Specification.GLMClassifier.DoubleArray
CoreML.Specification.Imputer.imputedStringValue
CoreML.Specification.Imputer.replaceStringValue
CoreML.Specification.Imputer
CoreML.Specification.CustomModel.CustomModelParamValue.stringValue
CoreML.Specification.CustomModel.className
CoreML.Specification.CustomModel.description
CoreML.Specification.CustomModel.ParametersEntry.key
CoreML.Specification.CustomModel
CoreML.Specification.CustomModel.CustomModelParamValue
LinkedModel cannot be marked as updatable
LinkedModel.LinkType not set.
LinkedModel.linkedModelFile.linkedModeFileName.defaultValue cannot be empty.
CoreML.Specification.SupportVectorClassifier
CoreML.Specification.SupportVectorRegressor
CoreML.Specification.Coefficients
CoreML.Specification.DenseSupportVectors
CoreML.Specification.DenseVector
CoreML.Specification.SparseSupportVectors
CoreML.Specification.SparseVector
CoreML.Specification.SparseNode
CoreML.Specification.Kernel
CoreML.Specification.SigmoidKernel
CoreML.Specification.PolyKernel
CoreML.Specification.RBFKernel
CoreML.Specification.LinearKernel
CoreML.Specification.CoreMLModels.Gazetteer.language
CoreML.Specification.CoreMLModels.Gazetteer
CoreML.Specification.Normalizer
Input feature '
' was not requested by any of the input feature names (e.g. confidenceInputFeatureName).
' (as defined by confidenceInputFeatureName) to the model is not present in the model description.
' (as defined by coordinatesInputFeatureName) to the model is not present in the model description.
' was not requested by any of the output feature names (e.g. confidenceOutputFeatureName).
' (as defined by confidenceOutputFeatureName) from the model is not present in the model description.
' (as defined by coordinatesOutputFeatureName) from the model is not present in the model description.
iouThreshold must be a value between 0.0 and 1.0.
confidenceThreshold must be a non-negative value. If you do not want to eliminate any predictions based on confidence, set it to 0.0.
Input confidence must have dataType DOUBLE
Output confidence must have dataType DOUBLE
Input coordinates must have dataType DOUBLE
If shape information is provided for confidence output, 2 dimensions must be specified using either shape (deprecated) or allowedShapes.
Confidence and coordinates output shapes must be consistent (must have the same size along dimension 0).
Confidence and coordinates output shapes fexibility must both be ranges
Confidence and coordinates output shapes must be consistent (must have the same range of sizes along dimension 0).
Number of classes is not consistent for class labels (
) and dimension 1 of output confidence shape (
) and dimension 1 of output confidence shape range
CoreML.Specification.StringToInt64Map.MapEntry.key
CoreML.Specification.DoubleRange
CoreML.Specification.Int64Set
CoreML.Specification.Int64Range
CoreML.Specification.DoubleVector
CoreML.Specification.FloatVector
CoreML.Specification.Int64Vector
CoreML.Specification.StringVector.vector
CoreML.Specification.StringVector
CoreML.Specification.Int64ToDoubleMap
CoreML.Specification.StringToDoubleMap.MapEntry.key
CoreML.Specification.StringToDoubleMap
CoreML.Specification.Int64ToStringMap.MapEntry.value
CoreML.Specification.Int64ToStringMap
CoreML.Specification.StringToInt64Map
Pipeline must contain one or more models.
Pipeline: Input '
' of model '
' not present in pipeline input or previous model.
' does not match the type previously specified by the pipeline input or the output of a previous model.
Pipeline output '
' not present in pipeline input or a contained model.
Type of pipeline output '
' does not match type produced in pipeline input.
Only the last model in the pipeline can be updatable. Model at position '
' is marked as updatable.
Last model in an updatable pipeline model should be marked as updatable.
Found an updatable model at '
' inside a non-updatable pipeline.
The number of pipeline model names '
' doesn't match the number of models '
Pipeline model name '
' at index '
 has already been used for previous models
CoreML.Specification.BayesianProbitRegressor.regressionInputFeatureName
CoreML.Specification.BayesianProbitRegressor.optimismInputFeatureName
CoreML.Specification.BayesianProbitRegressor.samplingScaleInputFeatureName
CoreML.Specification.BayesianProbitRegressor.samplingTruncationInputFeatureName
CoreML.Specification.BayesianProbitRegressor.meanOutputFeatureName
CoreML.Specification.BayesianProbitRegressor.varianceOutputFeatureName
CoreML.Specification.BayesianProbitRegressor.pessimisticProbabilityOutputFeatureName
CoreML.Specification.BayesianProbitRegressor.sampledProbabilityOutputFeatureName
CoreML.Specification.BayesianProbitRegressor
CoreML.Specification.BayesianProbitRegressor.FeatureWeight
CoreML.Specification.BayesianProbitRegressor.FeatureValueWeight
CoreML.Specification.BayesianProbitRegressor.Gaussian
Version for scene is invalid
Type for vision feature print not set
CoreML.Specification.CoreMLModels.WordEmbedding.language
CoreML.Specification.CoreMLModels.WordEmbedding
CoreML.Specification.BoolParameter
CoreML.Specification.StringParameter.defaultValue
CoreML.Specification.StringParameter
CoreML.Specification.DoubleParameter
CoreML.Specification.Int64Parameter
Model is not a tree ensemble.
Given output dimension equals 0.
Tree Node with TreeID=
and NodeID=
 duplicated in specification.
Branch mode hit bad value -- this is confusing; error in validator?
Leaf Node (TreeID=
, NodeID=
) has no evaluation value(s) specified.
) specifies evaluation value applied to dimension 
; which is out of range. Dimension must be less than 
) specifies multipule evaluation values applied to dimension 
False child and parent have same ID (TreeID=
In TreeID=
, false child of NodeID=
 is already the child of node NodeID=
True child and parent have same ID (TreeID=
, true child of NodeID=
Tree TreeID=
 has multiple root nodes: 
NodeID=
Internal error: null child node; likely specification error.
Node detected that are not connected to any single root node. Note: 
(TreeID=
Dimension of default value array (
) does not match specified output dimension (
Specified output dimension (
) does not match the given number of classes (
Error(s) in tree structure: 
 and NodeID=
 referenced but not declared in specification.
FATAL: 
  FATAL: maximum number of errors reached; aborting processing.
Errors encountered during processing tree model:
Exactly one input array column must be specified.
If output type is Double in interface, exactly one extraction index must be specified.
CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName
CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName
CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName
CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName
CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName
CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName
CoreML.Specification.NonMaximumSuppression
CoreML.Specification.NonMaximumSuppression.PickTop
OneHotEncoder parameter incorrect type
More model output features than the output features of the word tagger model.
Output feature '
' was not required by the output features of the word tagger model.
Expected feature '
' (defined by tokenTagsOutputFeatureName) to the model is not present in the model description.
". Should be: 
Model output tags not set. Must have at least one tag
Model revision number not set. Must be >= 1
Item IDs in the recommender model must be numbered 0, 1, ..., num_items - 1.
Only integer item ids or string item ids can be specified in the same model.
Number of integer item ids specified (
) does not equal the number of items given (
Number of string item ids specified (
Name of column for item input data not specified.
No output columns specified.
NormalizerValidator normLx invalid
CoreML.Specification.ItemSimilarityRecommender.itemInputFeatureName
CoreML.Specification.ItemSimilarityRecommender.numRecommendationsInputFeatureName
CoreML.Specification.ItemSimilarityRecommender.itemRestrictionInputFeatureName
CoreML.Specification.ItemSimilarityRecommender.itemExclusionInputFeatureName
CoreML.Specification.ItemSimilarityRecommender.recommendedItemListOutputFeatureName
CoreML.Specification.ItemSimilarityRecommender.recommendedItemScoreOutputFeatureName
CoreML.Specification.ItemSimilarityRecommender
CoreML.Specification.ItemSimilarityRecommender.SimilarItems
CoreML.Specification.ItemSimilarityRecommender.ConnectedItem
Input type Int64 must output to Int64 or Double.
Type of input feature does not match the output type feature.
Only 1 dimensional arrays input features are supported by the scaler.
Shape of output array does not match shape of input array.
For input type array, specified shift values must be empty, a scalar, or a vector of the matching length.
For input type array, specified scale values must be empty, a scalar, or a vector of the matching length.
For a scalar imput type, specified shift value must be empty or a scalar.
For input type array, specified scale values must be empty or a scalar.
CoreML.Specification.FeatureVectorizer.InputColumn.inputColumn
CoreML.Specification.FeatureVectorizer
CoreML.Specification.FeatureVectorizer.InputColumn
DictVectorizerValidator parameter not set
CoreML.Specification.CoreMLModels.WordTagger.language
CoreML.Specification.CoreMLModels.WordTagger.tokensOutputFeatureName
CoreML.Specification.CoreMLModels.WordTagger.tokenTagsOutputFeatureName
CoreML.Specification.CoreMLModels.WordTagger.tokenLocationsOutputFeatureName
CoreML.Specification.CoreMLModels.WordTagger.tokenLengthsOutputFeatureName
CoreML.Specification.CoreMLModels.WordTagger
CoreML.Specification.TreeEnsembleRegressor
CoreML.Specification.TreeEnsembleClassifier
CoreML.Specification.TreeEnsembleParameters
CoreML.Specification.TreeEnsembleParameters.TreeNode
CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo
not an error
validator error: 
isOptional
hasShapeFlexibility
shapeFlexibility
shapeRange
colorspace
isColor
hasSizeFlexibility
enumeratedSizes
sizeFlexibility
sizeRange
valueType
CoreML.Specification.DictVectorizer
CoreML.Specification.CustomLayerParams.CustomLayerParamValue.stringValue
CoreML.Specification.AdamOptimizer
CoreML.Specification.SGDOptimizer
CoreML.Specification.Optimizer
CoreML.Specification.MeanSquaredErrorLossLayer.input
CoreML.Specification.MeanSquaredErrorLossLayer.target
CoreML.Specification.MeanSquaredErrorLossLayer
CoreML.Specification.CategoricalCrossEntropyLossLayer.input
CoreML.Specification.CategoricalCrossEntropyLossLayer.target
CoreML.Specification.CategoricalCrossEntropyLossLayer
CoreML.Specification.LossLayer.name
CoreML.Specification.LossLayer
CoreML.Specification.NetworkUpdateParameters
CoreML.Specification.NeuralNetworkPreprocessing.featureName
CoreML.Specification.NeuralNetworkLayer.name
CoreML.Specification.NeuralNetworkLayer.input
CoreML.Specification.NeuralNetworkLayer.output
CoreML.Specification.LoopLayerParams.conditionVar
CoreML.Specification.CustomLayerParams.className
CoreML.Specification.CustomLayerParams.ParametersEntry.key
CoreML.Specification.CustomLayerParams.description
CoreML.Specification.NeuralNetworkRegressor
CoreML.Specification.NeuralNetworkClassifier.labelProbabilityLayerName
CoreML.Specification.NeuralNetworkClassifier
CoreML.Specification.NonMaximumSuppressionLayerParams
CoreML.Specification.LayerNormalizationLayerParams
CoreML.Specification.SlidingWindowsLayerParams
CoreML.Specification.RangeDynamicLayerParams
CoreML.Specification.RangeStaticLayerParams
CoreML.Specification.GeluLayerParams
CoreML.Specification.ErfLayerParams
CoreML.Specification.GetShapeLayerParams
CoreML.Specification.TileLayerParams
CoreML.Specification.SliceDynamicLayerParams
CoreML.Specification.SliceStaticLayerParams
CoreML.Specification.ClipLayerParams
CoreML.Specification.SignLayerParams
CoreML.Specification.FloorLayerParams
CoreML.Specification.RoundLayerParams
CoreML.Specification.CeilLayerParams
CoreML.Specification.SplitNDLayerParams
CoreML.Specification.ArgMinLayerParams
CoreML.Specification.ArgMaxLayerParams
CoreML.Specification.TopKLayerParams
CoreML.Specification.SqueezeLayerParams
CoreML.Specification.ReshapeDynamicLayerParams
CoreML.Specification.ReshapeLikeLayerParams
CoreML.Specification.ReshapeStaticLayerParams
CoreML.Specification.FlattenTo2DLayerParams
CoreML.Specification.ExpandDimsLayerParams
CoreML.Specification.ReduceLogSumExpLayerParams
CoreML.Specification.ReduceSumSquareLayerParams
CoreML.Specification.ReduceLogSumLayerParams
CoreML.Specification.ReduceMeanLayerParams
CoreML.Specification.ReduceProdLayerParams
CoreML.Specification.ReduceSumLayerParams
CoreML.Specification.ReduceMinLayerParams
CoreML.Specification.ReduceMaxLayerParams
CoreML.Specification.ReduceL2LayerParams
CoreML.Specification.ReduceL1LayerParams
CoreML.Specification.CategoricalDistributionLayerParams
CoreML.Specification.RandomBernoulliDynamicLayerParams
CoreML.Specification.RandomBernoulliStaticLayerParams
CoreML.Specification.RandomBernoulliLikeLayerParams
CoreML.Specification.RandomUniformDynamicLayerParams
CoreML.Specification.RandomUniformStaticLayerParams
CoreML.Specification.RandomUniformLikeLayerParams
CoreML.Specification.RandomNormalDynamicLayerParams
CoreML.Specification.RandomNormalStaticLayerParams
CoreML.Specification.RandomNormalLikeLayerParams
CoreML.Specification.ConstantPaddingLayerParams
CoreML.Specification.RankPreservingReshapeLayerParams
CoreML.Specification.StackLayerParams
CoreML.Specification.ScatterAlongAxisLayerParams
CoreML.Specification.GatherAlongAxisLayerParams
CoreML.Specification.ScatterNDLayerParams
CoreML.Specification.GatherNDLayerParams
CoreML.Specification.ScatterLayerParams
CoreML.Specification.GatherLayerParams
CoreML.Specification.DivideBroadcastableLayerParams
CoreML.Specification.MultiplyBroadcastableLayerParams
CoreML.Specification.SubtractBroadcastableLayerParams
CoreML.Specification.FloorDivBroadcastableLayerParams
CoreML.Specification.ModBroadcastableLayerParams
CoreML.Specification.MinBroadcastableLayerParams
CoreML.Specification.MaxBroadcastableLayerParams
CoreML.Specification.AddBroadcastableLayerParams
CoreML.Specification.BroadcastToDynamicLayerParams
CoreML.Specification.BroadcastToStaticLayerParams
CoreML.Specification.BroadcastToLikeLayerParams
CoreML.Specification.LowerTriangularLayerParams
CoreML.Specification.UpperTriangularLayerParams
CoreML.Specification.MatrixBandPartLayerParams
CoreML.Specification.WhereNonZeroLayerParams
CoreML.Specification.Exp2LayerParams
CoreML.Specification.PowBroadcastableLayerParams
CoreML.Specification.AtanhLayerParams
CoreML.Specification.AcoshLayerParams
CoreML.Specification.AsinhLayerParams
CoreML.Specification.TanhLayerParams
CoreML.Specification.CoshLayerParams
CoreML.Specification.SinhLayerParams
CoreML.Specification.AtanLayerParams
CoreML.Specification.AcosLayerParams
CoreML.Specification.AsinLayerParams
CoreML.Specification.TanLayerParams
CoreML.Specification.CosLayerParams
CoreML.Specification.SinLayerParams
CoreML.Specification.WhereBroadcastableLayerParams
CoreML.Specification.FillDynamicLayerParams
CoreML.Specification.FillStaticLayerParams
CoreML.Specification.FillLikeLayerParams
CoreML.Specification.LoadConstantNDLayerParams
CoreML.Specification.ReverseSeqLayerParams
CoreML.Specification.ReverseLayerParams
CoreML.Specification.SoftmaxNDLayerParams
CoreML.Specification.ConcatNDLayerParams
CoreML.Specification.BatchedMatMulLayerParams
CoreML.Specification.TransposeLayerParams
/dev/urandom
CoreML.Specification.CustomLayerParams
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-680.100.5/coremltools/deps/protobuf/src/google/protobuf/map_entry_lite.h
CHECK failed: default_instance_ != NULL: 
CoreML.Specification.BiDirectionalLSTMLayerParams
CoreML.Specification.UniDirectionalLSTMLayerParams
CoreML.Specification.LSTMWeightParams
CoreML.Specification.LSTMParams
CoreML.Specification.GRULayerParams
CoreML.Specification.SimpleRecurrentLayerParams
CoreML.Specification.SequenceRepeatLayerParams
CoreML.Specification.MeanVarianceNormalizeLayerParams
CoreML.Specification.DotProductLayerParams
CoreML.Specification.MinLayerParams
CoreML.Specification.MaxLayerParams
CoreML.Specification.AverageLayerParams
CoreML.Specification.CropLayerParams
CoreML.Specification.ReduceLayerParams
CoreML.Specification.SliceLayerParams
CoreML.Specification.ReorganizeDataLayerParams
CoreML.Specification.PermuteLayerParams
CoreML.Specification.ReshapeLayerParams
CoreML.Specification.FlattenLayerParams
CoreML.Specification.L2NormalizeLayerParams
CoreML.Specification.LoadConstantLayerParams
CoreML.Specification.ScaleLayerParams
CoreML.Specification.BiasLayerParams
CoreML.Specification.CropResizeLayerParams
CoreML.Specification.ResizeBilinearLayerParams
CoreML.Specification.UpsampleLayerParams
CoreML.Specification.UnaryFunctionLayerParams
CoreML.Specification.MultiplyLayerParams
CoreML.Specification.AddLayerParams
CoreML.Specification.SplitLayerParams
CoreML.Specification.SoftmaxLayerParams
CoreML.Specification.LRNLayerParams
CoreML.Specification.ConcatLayerParams
CoreML.Specification.PaddingLayerParams
CoreML.Specification.PaddingLayerParams.PaddingReplication
CoreML.Specification.PaddingLayerParams.PaddingReflection
CoreML.Specification.PaddingLayerParams.PaddingConstant
CoreML.Specification.PoolingLayerParams
CoreML.Specification.PoolingLayerParams.ValidCompletePadding
CoreML.Specification.BatchnormLayerParams
CoreML.Specification.EmbeddingNDLayerParams
CoreML.Specification.EmbeddingLayerParams
CoreML.Specification.InnerProductLayerParams
CoreML.Specification.ConvolutionLayerParams
CoreML.Specification.LookUpTableQuantizationParams
CoreML.Specification.LinearQuantizationParams
CoreML.Specification.QuantizationParams
CoreML.Specification.WeightParams
CoreML.Specification.BoxCoordinatesMode
CoreML.Specification.SamplingMode
CoreML.Specification.SamePadding
CoreML.Specification.ValidPadding
CoreML.Specification.BorderAmounts
CoreML.Specification.BorderAmounts.EdgeSizes
CoreML.Specification.LogicalNotLayerParams
CoreML.Specification.LogicalXorLayerParams
CoreML.Specification.LogicalOrLayerParams
CoreML.Specification.LogicalAndLayerParams
CoreML.Specification.NotEqualLayerParams
CoreML.Specification.EqualLayerParams
CoreML.Specification.LessEqualLayerParams
CoreML.Specification.LessThanLayerParams
CoreML.Specification.GreaterEqualLayerParams
CoreML.Specification.GreaterThanLayerParams
CoreML.Specification.CopyLayerParams
CoreML.Specification.LoopContinueLayerParams
CoreML.Specification.LoopBreakLayerParams
CoreML.Specification.LoopLayerParams
CoreML.Specification.BranchLayerParams
CoreML.Specification.NeuralNetworkLayer
CoreML.Specification.Tensor
CoreML.Specification.ActivationParams
CoreML.Specification.ActivationParametricSoftplus
CoreML.Specification.ActivationSoftplus
CoreML.Specification.ActivationSoftsign
CoreML.Specification.ActivationThresholdedReLU
CoreML.Specification.ActivationELU
CoreML.Specification.ActivationPReLU
CoreML.Specification.ActivationSigmoidHard
CoreML.Specification.ActivationLinear
CoreML.Specification.ActivationSigmoid
CoreML.Specification.ActivationScaledTanh
CoreML.Specification.ActivationTanh
CoreML.Specification.ActivationLeakyReLU
CoreML.Specification.ActivationReLU
CoreML.Specification.NeuralNetworkPreprocessing
CoreML.Specification.NeuralNetworkMeanImage
CoreML.Specification.NeuralNetworkImageScaler
CoreML.Specification.CustomLayerParams.CustomLayerParamValue
CoreML.Specification.NeuralNetwork
CoreML.Specification.KNearestNeighborsClassifier.defaultStringLabel
CoreML.Specification.SquaredEuclideanDistance
CoreML.Specification.SingleKdTreeIndex
CoreML.Specification.LinearIndex
CoreML.Specification.UniformWeighting
CoreML.Specification.NearestNeighborsIndex
CoreML.Specification.InverseDistanceWeighting
CoreML.Specification.KNearestNeighborsClassifier
KNearestNeighborsClassifier requires a weighting scheme to be set.
KNearestNeighborsClassifier's class label and default class label have different types.
KNearestNeighborsClassifier should specify default class labels when class labels are not specified.
KNearestNeighborsClassifier has no data points.
Unexpected number of labels "
" for the given number of examples: "
Unexpected length "
" given the provided number of dimensions "
KNearestNeighborsClassifier has no index type specified.
KNearestNeighborsClassifier requires leaf size to be a positive integer.
KNearestNeighborsClassifier requires a distance function to be set.
Classifier declared with Int64 class labels must provide exclusively Int64 class labels.
Classifier declared with String class labels must provide exclusively String class labels.
Specification is missing classifier predictedFeatureName
CoreML.Specification.LinkedModelFile
CoreML.Specification.LinkedModel
ValueOnUnknown set to string value while mapping produces int64.
ValueOnUnknown set to Int64 value while mapping produces string.
Mapping not set.
Input sequence type does not match input type 
of categorical mapping.
Output of a sequence categorical mapping must be a sequence
Output sequence type does not match input type 
CoreML.Specification.ArrayFeatureExtractor
CoreML.Specification.GLMRegressor
CoreML.Specification.GLMRegressor.DoubleArray
CoreML.Specification.FeatureType
CoreML.Specification.SequenceFeatureType
CoreML.Specification.DictionaryFeatureType
CoreML.Specification.ArrayFeatureType
CoreML.Specification.ArrayFeatureType.ShapeRange
CoreML.Specification.ArrayFeatureType.EnumeratedShapes
CoreML.Specification.ArrayFeatureType.Shape
CoreML.Specification.ImageFeatureType
CoreML.Specification.ImageFeatureType.ImageSizeRange
CoreML.Specification.ImageFeatureType.EnumeratedImageSizes
CoreML.Specification.ImageFeatureType.ImageSize
CoreML.Specification.SizeRange
CoreML.Specification.StringFeatureType
CoreML.Specification.DoubleFeatureType
CoreML.Specification.Int64FeatureType
Model revision number missing or invalid. Must be >= 2
Model output class label not set. Must have at least one class label
Model parameter data not set
Unsupported type "
" for feature "
Should be of: 
MLFeatureTypeType_multiArrayType
 with data type of: 
MLArrayDataTypeINT32
MLArrayDataTypeDOUBLE
MLArrayDataTypeFLOAT32
Unsupported array type "
Unsupported array rank 
 should be in range [
MLFeatureTypeType_int64Type
MLFeatureTypeType_doubleType
MLFeatureTypeType_stringType
MLFeatureTypeType_imageType
MLFeatureTypeType_dictionaryType
MLFeatureTypeType_sequenceType
CustomModel must have non-empty className.
CustomModel.parameters must have non-empty string keys.
CustomModel.parameters['
'] does not have a set value
coreChannel
genericErrorWithString:
errorWithCode:string:
serializeMetadataAndInterfaceFromSpecification:archive:error:
stringWithUTF8String:
versionInfoWithMajor:minor:patch:variant:
compileSpecification:toArchive:options:error:
compiledVersionForSpecification:options:error:
init
numberWithInt:
setObject:forKey:
customLayerErrorWithUnderlyingError:withString:
dataWithJSONObject:options:error:
writeToFile:atomically:
resultWithOutputFiles:
isEqualToString:
crossEntropyLossWithInputName:targetInputName:lossOutputName:
updateErrorWithString:
L2LossWithInputName:targetInputName:lossOutputName:
mutableCopy
numberWithLongLong:
epochs
setObject:forKeyedSubscript:
numberWithBool:
shuffle
seed
learningRate
numberWithDouble:
miniBatchSize
dictionaryWithObjects:forKeys:count:
momentum
beta1
beta2
addObject:
fileURLWithPath:
initWithInferenceNetworkPath:inferenceInputs:inferenceOutputs:error:
errorWithCode:underlyingError:string:
initForLayers:error:
initWithModelDefinition:lossDefinition:variablesDefinition:optimizerDefinition:forPlatform:error:
initWithLossType:optimizerType:optimizerParameters:lossParameters:trainableLayerNames:updateParameters:
IOErrorWithString:
UTF8String
initWithOptimizationAlgorithm:parameters:error:
optionalInputTypes
classLabels
count
classifyTopK
classScoreVectorName
featureValueForName:
type
multiArrayValue
dataType
shape
initWithShape:dataType:error:
vectorizeIntoMultiArray:storageOrder:error:
dataPointer
initWithCapacity:
objectAtIndexedSubscript:
setObject:atIndexedSubscript:
probabilityDictionaryForLabels:
replaceDoubleVectorWith:
copy
classLabelOfMaxProbability:
resultWithClassProbability:additionalFeatures:classLabelOfMaxProbability:
convertPredictionToClassifierResult:withOptions:error:
interface
predictedClassFeatureDescription
classProbabilityFeatureDescription
asFeatureDictionaryWithPredictedClassDescription:classProbabilityDescription:
predictedFeatureName
predictionFromFeatures:options:error:
resultWithValue:
containerFromCompiledArchive:modelVersionInfo:compilerVersionInfo:configuration:error:
initWithContainer:configuration:error:
processInfo
globallyUniqueString
stringByAppendingPathComponent:
fileURLWithPath:isDirectory:
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
defaultOptions
fileSystemRepresentation
loadModelFromCompiledArchive:modelVersionInfo:compilerVersionInfo:configuration:error:
usesCPUOnly
globalSettings
restrictNeuralNetworksToUseCPUOnly
configuration
computeUnits
_deallocContextAndPlan
_setupContextAndPlanWithForceCPU:error:
neuralNetworkFromContainer:configuration:error:
setClassScoreVectorName:
setClassLabels:
initWithContainer:error:
deviceHasANE
inputLayerNames
outputLayerNames
modelFilePath
imagePreprocessingParams
imageParameters
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
boolValue
floatValue
hasOptionalInputSequenceConcat
hasBidirectionalLayer
ndArrayInterpretation
allowBackgroundGPUCompute
transformDesc
modelDescription
metadata
initWithInterface:metadata:configuration:
collectParametersFromContainer:configuration:
_setupContextAndPlanWithConfiguration:error:
fillInInitialShapeFromEspressoNet:
length
replaceOccurrencesOfString:withString:options:range:
dataWithContentsOfFile:
JSONObjectWithData:options:error:
numInputs
inputLayers
intValue
_setupContextAndPlanWithConfiguration:usingCPU:error:
preferredMetalDevice
allowLowPrecisionAccumulationOnGPU
enableTestVectorMode
rebuildPlan:
evaluateNoAutoRelease:error:
inputDescriptionsByName
featureNames
isOptional
multiArrayConstraint
isAllowedValue:isNeuralNetworkInput:usingRank5Mapping:featureName:error:
stringWithFormat:
imageConstraint
isAllowedValue:error:
errorWithDomain:code:userInfo:
setValue:forKey:
objectForKey:
fillWithNumber:
featureValueWithMultiArray:
arrayWithObjects:count:
arrayWithArray:
initWithFeatureValueDictionary:
imageBufferValue
numberWithUnsignedLong:
initWithDataPointer:shape:dataType:strides:deallocator:error:
integerValue
copyIntoMultiArray:error:
verifyInputs:error:
resetSizes:error:
obtainBuffer
bindInputsAndOutputs:allocatedImageData:bufferIndex:error:
releaseBuffer:
submitSemaphore
plan
unlockCVPixelBuffers:error:
populateOutputs:error:
outputDescriptionsByName
_pixelBufferFromEbuf:description:error:
featureValueWithPixelBuffer:
shapeConstraint
populateShapeAndStrideFor:inputShape:outputShape:outputStrides:error:
shapeSet
enumerateObjectsUsingBlock:
name
featureTypeErrorWithString:
sizeConstraint
allowedImageSizeClosestToPixelsWide:pixelsHigh:preferDownScaling:preferInputAspectRatio:
pixelsWide
pixelsHigh
pixelType
pixelBufferGray8FromMultiArrayHW:error:
pixelBufferBGRA8FromMultiArrayCHW:channelOrderIsBGR:error:
dealloc
featuresAtIndex:
allKeys
containsObject:
stringWithString:
appendString:
description
appendFormat:
getFeatureSize:ndArrayMode:
numberWithInteger:
lazyBatchIndexIntoBatch:indices:error:
usingEspressoConfigurations
resetSizesWithEspressoConfigurations:error:
resetSizesNoAutoRelease:error:
numberWithUnsignedInt:
network
engine
setIsANEPathForbidden:
setHardwareFallbackDetected:
_matchEngineToOptions:error:
evaluate:error:
addClassifierInformationToOutput:options:error:
predictionsFromLoopingOverBatch:model:options:error:
null
sortBatchByShape:withMap:error:
evaluateBatch:options:error:
unsignedIntegerValue
initWithFeatureProviderArray:
parameterErrorWithUnderlyingError:string:
loadModelFromSpecification:configuration:error:
neuralNetworkFromContainer:error:
neuralNetworkFromContainer:classScoreVectorName:classLabels:error:
predictionFromFeatures:error:
predictionsFromBatch:error:
predictionsFromBatch:options:error:
setModelDescription:
classify:options:error:
regress:options:error:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
sequenceConcatConsumesOptionalInputNamed:
sequenceNamed:
availableOutputBlobList
dumpTestVectorsToPath:
parameterValueForKey:error:
outputLayers
hardwareFallbackDetected
imagePreprocessingParameters
setImagePreprocessingParameters:
espressoInputShapes
setEspressoInputShapes:
espressoInputStrides
setEspressoInputStrides:
setNdArrayInterpretation:
numOutputs
inputBuffers
setInputBuffers:
outputBuffers
setOutputBuffers:
usingCPU
setUsingCPU:
setPlan:
setNetwork:
params
setParams:
precision
setPrecision:
setEngine:
setQos:
context
setContext:
isEspresoBiasPreprocessingShared
setIsEspresoBiasPreprocessingShared:
widths
setWidths:
heights
setHeights:
setKs:
batches
setBatches:
sequences
setSequences:
ranks
setRanks:
probDict
setProbDict:
setModelFilePath:
setOptionalInputTypes:
setHasBidirectionalLayer:
setHasOptionalInputSequenceConcat:
bufferSemaphore
setBufferSemaphore:
espressoQueue
setEspressoQueue:
predictionsQueue
setPredictionsQueue:
bufferAvailable
setBufferAvailable:
setSubmitSemaphore:
isGPUPathForbidden
setIsGPUPathForbidden:
isANEPathForbidden
flexibleShapesConfigNamesInNet
setFlexibleShapesConfigNamesInNet:
currentConfigurationName
setCurrentConfigurationName:
OutputBlobIsDynamic
setOutputBlobIsDynamic:
blobNameToRank
setBlobNameToRank:
.cxx_destruct
.cxx_construct
_hardwareFallbackDetected
_ndArrayInterpretation
_usingCPU
_isEspresoBiasPreprocessingShared
_hasBidirectionalLayer
_hasOptionalInputSequenceConcat
_isGPUPathForbidden
_isANEPathForbidden
_precision
_engine
_qos
_classLabels
_classScoreVectorName
_inputLayers
_outputLayers
_imagePreprocessingParameters
_espressoInputShapes
_espressoInputStrides
_numInputs
_numOutputs
_plan
_context
_probDict
_modelFilePath
_bufferSemaphore
_espressoQueue
_predictionsQueue
_submitSemaphore
_blobNameToRank
_network
_inputBuffers
_outputBuffers
_params
_widths
_heights
_batches
_sequences
_ranks
_optionalInputTypes
_bufferAvailable
_flexibleShapesConfigNamesInNet
_currentConfigurationName
_OutputBlobIsDynamic
sharedHandle
allObjects
addObjectsFromArray:
array
undefinedFeatureValueWithType:
featureNamesInBatch:
dictionaryFromBatch:featureNames:
setWithObjects:
dictionaryFromBatch:
featureDescriptionWithName:consistentWithFeatureValues:error:
featureProviderArrayFromBatch:
featureValueArrayForName:batch:error:
featureDescriptionsByNameForBatch:error:
lazyProviderWithFeaturesProvidedBy:addedToFeaturesProvidedBy:
initWithFeaturesFrom:addedToFeaturesFrom:error:
first
setFirst:
second
setSecond:
_first
_second
initWithBatch:startIndex:windowLength:error:
fullBatch
setFullBatch:
startIndex
setStartIndex:
windowLength
setWindowLength:
_fullBatch
_startIndex
_windowLength
initWithBatch:indices:error:
indices
setIndices:
_indices
providerWithSubsetOfFeaturesNamed:providedBy:
lazyBatchWindowIntoBatch:startIndex:windowLength:error:
lazyBatchWithFeaturesInBatch:addedToBatch:error:
batchFromConcatinatingBatches:
batchWithSubsetOfFeaturesNamed:fromBatch:
numberWithUnsignedInteger:
strides
vectorizeFeaturesProvidedBy:featureNames:intoDoubleVector:length:stride:error:
vectorizeFeaturesNamed:fromBatch:intoRowsOfDoubleMatrix:error:
sharedKeySetForKeys:
dictionaryWithSharedKeySet:
featureTypeForValuesInArray:error:
featureValueOfType:fromObject:error:
initWithDictionary:error:
_array
initWithModelDescription:parameterDictionary:error:
customModelWithName:modelDescription:parameterDictionary:error:
dataWithBytes:length:
initWithModelDescriptionSpecification:error:
parametersFromCustomModelSpec:error:
initWithModelDescription:customModel:configuration:
initWithDescription:configuration:
customModel
setCustomModel:
_customModel
isContiguousInOrder:
initWithShape:dataType:storageOrder:error:
numberWithLong:
initUnspecified
orderedSetWithArray:
arrayWithCapacity:
valueWithRange:
rangeValue
componentsJoinedByString:
isAllowedShape:error:
canShapeArrayBePromotedFrom:to:
sizeRangeForDimension
encodeObject:forKey:
encodeInteger:forKey:
allowedClasses
unionSet:
decodeObjectOfClasses:forKey:
decodeIntegerForKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithSizeRangeForDimension:
initWithEnumeratedShapes:
enumeratedShapes
findAvailableShape:
_type
_sizeRangeForDimension
_shapeSet
deserializeMetadataAndInterfaceFromArchive:error:
initModelFromMetadataAndArchive:versionInfo:interface:metadata:configuration:error:
models
modelNames
parameters
deScopeParameters:byDeletingPrefixingScope:
setParameters:
loadUpdatableModelFromArchive:configuration:error:
replaceModelAtIndex:with:
updateParameterDescriptionsByKeyBasedOnSubModel
initFromCompiledArchive:modelVersionInfo:compilerVersionInfo:configuration:error:
setProgressHandlers:
setDispatchQueue:
setUpdateProgressHandlers:dispatchQueue:
updateModelWithData:
progressHandlers
dispatchQueue
dispatchTrainingCompletionHandlerWithError:onQueue:
resumeUpdate
resumeUpdateWithParameters:
cancelUpdate
writeToURL:error:
removeItemAtPath:error:
URLByAppendingPathComponent:
updatableModelIndicies
_progressHandlers
_dispatchQueue
_updatableModelIndicies
initWithKeyType:
isUndefined
dictionaryValue
descriptionForType:
allocWithZone:
keyType
constraintWithStringKeys
constraintWithInt64Keys
copyWithZone:
_keyType
numDimensions
numDataPoints
setNumDataPoints:
encodeInt64:forKey:
encodeBytes:length:forKey:
decodeInt64ForKey:
decodeBytesForKey:returnedLength:
containsValueForKey:
findNearestNeighbors:toQueryPoint:
updateWithData:error:
dataPointCount
initWithDataset:numberOfDimensions:
setNumDimensions:
vData
vDataL2Squared
_numDataPoints
_numDimensions
initWithUsesCPUOnly:
encodeBool:forKey:
maxComputationBatchSize
decodeBoolForKey:
decodeObjectOfClass:forKey:
setUsesCPUOnly:
setClassifyTopK:
setMaxComputationBatchSize:
initWithUseCPUOnly:
useCPUOnly
setUseCPUOnly:
_usesCPUOnly
_classifyTopK
_maxComputationBatchSize
setRestrictNeuralNetworksToUseCPUOnly:
restrictNeuralNetworksFromUsingANE
setRestrictNeuralNetworksFromUsingANE:
isNeuralNetworkGPUPathForbidden
_restrictNeuralNetworksToUseCPUOnly
_restrictNeuralNetworksFromUsingANE
_isNeuralNetworkGPUPathForbidden
dictionaryWithCapacity:
featureTypeForObject:
setWithArray:
dictionary
setDictionary:
_dictionary
initWithFeatureProvider:featureNames:
initWithFeatureProvider:
loadModelFromAssetAtURL:configuration:error:
checkResourceIsReachableAndReturnError:
checkAssetPath:error:
loadModelFromArchive:configuration:error:
codedObjectURLFromInputArchiver:
fileExistsAtPath:isDirectory:
initWithContentsOfURL:options:error:
unarchivedObjectOfClasses:fromData:error:
setModelURL:
unarchiveCodedModelFrom:to:error:
deserializeVersionInfoFromArchive:error:
sharedInstance
classForLoadingModelType:
loadFromModelSpecificationInArchive:withClass:versionInfo:configuration:error:
setIsUpdatable:
classForLoadingModelType:isUpdatable:
loadModelFromAssetAtURL:error:
loadUpdatableModelFromAssetAtURL:configuration:error:
loadModelFromArchive:error:
dryRun
setDryRun:
platform
setPlatform:
platformVersion
setPlatformVersion:
_dryRun
_platform
_platformVersion
setOutputFiles:
outputFiles
_outputFiles
lastPathComponent
stringByDeletingPathExtension
stringByAppendingPathExtension:
serializeVersionInfo:archive:error:
localizedDescription
classForCompilingModelType:
code
userInfo
initWithDictionary:
serializeSpecification:toArchive:error:
versionForSerializedSpecification:options:error:
compileSpecificationAtURL:toURL:options:error:
versionInfo
compiledVersionForSpecificationAtURL:options:error:
codedObjectURLFromOutputArchiver:
initWithData:language:inputFeatureName:outputFeatureName:modelData:labelNames:metadata:error:
revision
setRevision:
language
setLanguage:
inputFeatureName
setInputFeatureName:
outputFeatureName
setOutputFeatureName:
modelParameterData
setModelParameterData:
labelNames
setLabelNames:
setMetadata:
_revision
_language
_inputFeatureName
_outputFeatureName
_modelParameterData
_labelNames
_metadata
isValid
initWithParameters:modelDescription:nlpHandle:configuration:error:
initializeGazetteerModelWithData:error:
stringValue
predictLabelForWordString:inputString:error:
stringByAppendingString:
bytes
stringByAppendingFormat:
stringByReplacingCharactersInRange:withString:
saveAppleGazetteerModelToURL:gazetteerParameters:error:
gazetteerModel
_parameters
format
setFormat:
confidenceFeatureName
setConfidenceFeatureName:
coordinatesFeatureName
setCoordinatesFeatureName:
_format
_confidenceFeatureName
_coordinatesFeatureName
lastObject
objectBoundingBoxOutputDescription
trainingInputDescriptionsByName
dictionaryWithDictionary:
lossTargetName
populateEspressoShapeAndStridesFromInputShape:ndRepresentation:espressoShape:espressoStrides:error:
initWithData:type:shape:strides:
initWithCVPixelBuffer:imageParameters:error:
classLabelToIndexMap
int64Value
dataTensorDictionary
dataPointAtIndex:error:
numberOfDataPoints
initWithMLFeatureProvider:forPrediction:neuralNetworkEngine:error:
setDataTensorDictionary:
_dataTensorDictionary
initWithArray:type:
emptySequenceWithType:
sequenceFromArray:error:
sequenceWithStringArray:
sequenceWithInt64Array:
stringValues
int64Values
values
_values
initWrappingSequence:
objectAtIndex:
sequence
_sequence
featureValues
initWithMajor:minor:patch:variant:
scannerWithString:
scanInteger:
decimalDigitCharacterSet
scanUpToCharactersFromSet:intoString:
scanUpToString:intoString:
versionNumberString
majorVersion
minorVersion
patchVersion
versionInfoWithString:
versionString
olderThan:
variantString
_majorVersion
_minorVersion
_patchVersion
_variantString
_featureEmbeddingModel
_modelDescription
initWithInputDescriptions:outputDescriptions:predictedFeatureName:predictedProbabilitiesName:trainingInputDescriptions:metadata:
initWithInterfaceFormat:error:
metadataWithFormat:
inputDescription
outputDescription
predictedProbabilitiesName
inputFeatureNames
outputFeatureNames
trainingInputDescription
parameterDescriptionsByKey
string
isUpdatable
isEqualToDescription:
modelURL
decodeTopLevelObjectOfClasses:forKey:error:
setParameterDescriptionsByKey:
metadataWithSpecification:
initWithInputDescriptions:outputDescriptions:predictedFeatureName:predictedProbabilitiesName:metadata:
verifyInput:error:
setInputFeatureNames:
setOutputFeatureNames:
setTrainingInputDescriptionsByName:
_isUpdatable
_inputDescriptionsByName
_outputDescriptionsByName
_predictedFeatureName
_predictedProbabilitiesName
_inputFeatureNames
_outputFeatureNames
_modelURL
_trainingInputDescriptionsByName
_parameterDescriptionsByKey
setKey:
setDefaultValue:
setNumericConstraint:
defaultValue
numericConstraint
parameterDescriptionForKey:defaultValue:numericConstraint:
_key
_defaultValue
_numericConstraint
initWithSpecification:error:
initDescriptionOnlyWithSpecification:configuration:error:
modelAssetWithURL:configuration:error:
initWithURL:configuration:error:
modelAssetWithSpecificationURL:error:
URLByDeletingPathExtension
URLWithString:relativeToURL:
URLByAppendingPathExtension:
initWithURL:error:
fileExistsAtPath:
setRootModelURL:
modelWithError:
load:
classifierWithError:
regressorWithError:
modelAssetWithURL:error:
modelAssetWithSpecification:error:
model
classifier
regressor
compiledURL
ranLoad
setRanLoad:
asset
setAsset:
loadConfiguration
_ranLoad
_compiledURL
_asset
_loadConfiguration
initWithFilePath:inputLayerNames:outputLayerNames:parameters:
numberWithFloat:
arrayWithObjects:
doubleValue
stringByReplacingOccurrencesOfString:withString:
isReadableFileAtPath:
unarchiveUpdatableParamsAtURL:error:
containsString:
defaultCStringEncoding
initWithCString:encoding:
initWithFeatureDescriptions:transformDesc:outputLayerNames:parameters:configurations:classScoreVectorName:classLabels:hasBidirectionalLayer:hasOptionalInputSequenceConcat:hasDynamicLayer:
setHasDynamicLayer:
setUpdatableModelCompiledParams:
setImagePreprocessingParams:
containerFromFilePath:inputLayerNames:outputLayerNames:parameters:
setName:
setInputDescription:
setOutputDescription:
setImageParameters:
configurationList
setConfigurationList:
hasDynamicLayer
setTransformDesc:
updatableModelCompiledParams
_hasDynamicLayer
_inputLayerNames
_outputLayerNames
_name
_inputDescription
_outputDescription
_imageParameters
_configurationList
_transformDesc
_imagePreprocessingParams
_updatableModelCompiledParams
initWithData:language:inputFeatureName:outputFeatureName:modelData:labelNames:error:
initializeSentenceClassifierModelWithData:error:
predictLabelsForSentenceString:inputString:error:
saveAppleTextClassifierModelToURL:textClassifierParameters:error:
textClassifierModel
numberOfDimensions
setNumberOfDimensions:
weightingScheme
setWeightingScheme:
indexType
setIndexType:
leafSize
setLeafSize:
defaultLabel
setDefaultLabel:
nearestLabelsFeatureName
setNearestLabelsFeatureName:
nearestDistancesFeatureName
setNearestDistancesFeatureName:
_numberOfDimensions
_weightingScheme
_indexType
_leafSize
_defaultLabel
_nearestLabelsFeatureName
_nearestDistancesFeatureName
loadModelFromSpecificationWithCompilationOptions:options:error:
serializeInterfaceAndMetadata:toArchive:error:
longValue
initInterfaceAndMetadataWithCompiledArchive:error:
unsignedLongValue
sequenceValue
_mapItemSequence:dest:error:
_model_data
_itemForIndex:error:
featureValueWithDictionary:error:
insertObject:atIndex:
featureValueWithSequence:
m_mmapped_model
m_cached_model
m_num_items
m_item_data_feature_name
m_num_recommendations_feature_name
m_item_restriction_feature_name
m_item_exclusion_feature_name
m_item_list_output_feature_name
m_item_score_output_feature_name
m_item_mapping
m_item_string_list
m_item_integer_list
_m_scores
_m_items
_m_item_buffer
_m_item_invalid_mask
_m_item_predictions
_m_item_heap
lossType
optimizerType
optimizerParameters
lossParameters
trainableLayerNames
updateParameters
decodeObjectForKey:
archivedDataWithRootObject:requiringSecureCoding:error:
writeToURL:options:error:
setClass:forClassName:
writeUpdatableParamsToURL:error:
setLossType:
setOptimizerType:
setOptimizerParameters:
setLossParameters:
setTrainableLayerNames:
setUpdateParameters:
_lossType
_optimizerType
_optimizerParameters
_lossParameters
_trainableLayerNames
_updateParameters
initWithComputeUnits:
setAllowLowPrecisionAccumulationOnGPU:
setPreferredMetalDevice:
allowBackgroundGPUComputeSetting
useWatchSPIForScribble
setUseWatchSPIForScribble:
setAllowBackgroundGPUCompute:
setEnableTestVectorMode:
rootModelURL
isEqualToModelConfiguration:
computeUnitsToString:
defaultConfiguration
allowFloat16AccumulationOnGPU
setAllowFloat16AccumulationOnGPU:
preferredMTLDevice
setPreferredMTLDevice:
setComputeUnits:
setAllowBackgroundGPUComputeSetting:
_allowBackgroundGPUComputeSetting
_useWatchSPIForScribble
_allowLowPrecisionAccumulationOnGPU
_enableTestVectorMode
_computeUnits
_preferredMetalDevice
_rootModelURL
pixelFormatType
unsignedIntValue
valueDescription
getImageFeatureTypeFromConstraint:
getArrayFeatureTypeFromConstraint:
dictionaryConstraint
getDictionaryFeatureTypeFromConstraint:error:
sequenceConstraint
getSequenceFeatureTypeFromConstraint:error:
createFeatureTypeFromFeatureDescription:error:
createMetaData:
copyFeatureDescriptionFrom:to:error:
createModelDescription:error:
saveModelDescription:toSpecification:error:
vectorizeFeaturesProvidedBy:featureNames:error:
vectorizeInput:error:
predictionsFromSubbatchingBatch:maxSubbatchLength:predictionBlock:options:error:
validateRegressorInterfaceWithError:
predictionFromFeatures:regressor:options:error:
initWithInterface:metadata:error:
validateClassifierInterfaceWithError:
predictionFromFeatures:classifier:options:error:
initWithInterface:metadata:configuration:error:
classifierResultFromOutputFeatures:error:
pipeline
initWithEngine:interface:metadata:configuration:error:
initWithSpec:error:
scenePrintVersion
setScenePrintVersion:
_scenePrintVersion
initWithScenePrintParameters:error:
featureExtractorParameters
_featureExtractorParameters
allValues
elementCountForScenePrintRequestRevision:
initWithParameters:modelDescription:featureExtractorType:configuration:error:
scenePrintsFromPixelBuffers:version:augmentationOptions:useCPUOnly:error:
featureValueFromScenePrint:elementSize:
computeScenePrintFeatures:handle:useCPUOnly:error:
_outputDataType
_extractorType
initWithSpecification:configuration:error:
setFeatureName:to:descriptions:
setInputFeatureName:to:
setOutputFeatureName:to:
validateModelDescription:
initWithDescription:
initWithDescription:numberOfFeatures:priorMean:regressionInputName:optimismInputName:samplingScaleInputName:samplingTruncationInputName:meanOutputName:varianceOutputName:pessimisticProbabilityOutputName:sampledProbabilityOutputName:
getArrayFeatureValue:
featureValueWithDouble:
resultWithValue:additionalFeatures:
getFeatureValue:forName:withType:
getOneHotFeatureValues:error:
getOptimism:
getSamplingScale:
getSamplingTruncation:
createRegressorResult:
updateModelFromFeatures:toTarget:error:
convertOutputFeatureToPredictionValues:event:importance:error:
isEqualToBopr:
reset
modelWithContentsOfURL:error:
updateModelFromFeatures:toTarget:options:error:
saveModelToSpecification:
setFeatureCount:
FeatureCount
initWithDescription:numberOfFeatures:priorMean:
createCheckpoint
resetToLastCheckpointBeforeDate:
_model
_regressionInputFeatureName
_optimismInputFeatureName
_meanOutputFeatureName
_varianceOutputFeatureName
_pessimisticProbabilityOutputFeatureName
_sampledProbabilityOutputFeatureName
_samplingScaleInputFeatureName
_samplingTruncationInputFeatureName
stringForDataType:
indexVectorFromArray:
numberAtOffset:
setNumber:atOffset:
offsetForKeyedSubscript:
arrayFromIndexVector:
_pArray
_managingData
_deallocator
_shape
_strides
cppStorageOrder:
isEqualToMultiArray:
numberOfBytesPerElement
isManagingData
isContiguous
doublePointer
doubleMultiArrayWithCopyOfMultiArray:
doubleVectorWithValues:
doubleMultiArrayWithShape:valueArray:error:
doubleMatrixWithValues:error:
initWrappingMultiArray:
setRangeWithRawData:destIndex:error:
numberArray
multiArray
setMultiArray:
_multiArray
isSqueezableShape:
squeezeShape:strides:resultingShape:resultingStrides:
isSqueezableShape:dimensions:
indexSet
addIndex:
removeObjectsAtIndexes:
initSlicingMultiArray:origin:shape:squeeze:error:
initSqueezingMultiArray:dimensions:error:
parent
_parent
sliceAtOrigin:shape:squeeze:error:
squeeze
squeezeDimensions:error:
multiArrayBuffer
_setSingleArrayLookupField
resultWithIntClassProbability:
resultWithStringClassProbability:
_buildClassificationClasses:topk:error:
_mmapped_model
_cached_model
num_dimensions
_classes_by_string
_classes_by_int64_t
_class_type
_class_values
_single_array_key
initWithConfiguration:
initWithData:language:inputFeatureName:tokensFeatureName:tokenTagsFeatureName:tokenLocationsFeatureName:tokenLengthsFeatureName:modelData:tagNames:metadata:error:
initWithData:language:inputFeatureName:tokensFeatureName:tokenTagsFeatureName:tokenLocationsFeatureName:tokenLengthsFeatureName:modelData:tagNames:error:
tokensOutputFeatureName
setTokensOutputFeatureName:
tokenTagsOutputFeatureName
setTokenTagsOutputFeatureName:
tokenLocationsOutputFeatureName
setTokenLocationsOutputFeatureName:
tokenLengthsOutputFeatureName
setTokenLengthsOutputFeatureName:
tagNames
setTagNames:
_tokensOutputFeatureName
_tokenTagsOutputFeatureName
_tokenLocationsOutputFeatureName
_tokenLengthsOutputFeatureName
_tagNames
initializeWordTaggingModelWithData:error:
predictTokensLabelsLocationsLengthsForString:inputString:error:
saveAppleWordTaggingModelToURL:wordTaggerParameters:error:
wordTaggingModel
saveModelToArchive:model:error:
saveModelToArchive:model:compilerOptions:error:
getResourceValue:forKey:error:
createFileAtPath:contents:attributes:
copyItemAtPath:toPath:error:
saveModelToAssetAtURL:model:error:
copyModelAtURL:toURL:error:
substringToIndex:
uppercaseString
substringFromIndex:
firstObject
initWithDataset:numberOfDimensions:leafSize:error:
numberOfNeighbors
parameterContainerFor:descriptions:
setCurrentValue:forKey:error:
parameterContainer
currentParameterValues
index
labelsForDataPoints
labelsSet
labelType
inputMultiArray:error:
computeKClosestLabels:
computeClassProbabilities:from:
extractNearestNeighborLabels:distances:from:
packageOutputWithPredictedLabel:classProbabilities:nearestLabels:nearestDistances:
parameterDescriptionForKey:int64ParameterSpec:
appendParameterDescriptions:toModelDescription:
initWithDescription:configuration:parameters:dataPoints:labels:error:
setProgressHandlersDispatchQueue:
setContinueWithUpdate:
initWithArray:copyItems:
progressHandlersDispatchQueue
dispatchTrainingBeginProgressHandlerWithMetrics:parameters:onQueue:
continueWithUpdate
setLabelsForDataPoints:
setLabelsSet:
dispatchTrainingCompletionHandlerWithMetrics:parameters:onQueue:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
hasGlobalScope
decodeTopLevelObjectOfClass:forKey:error:
setParameterContainer:
setIndex:
setLabelType:
_continueWithUpdate
_progressHandlersDispatchQueue
_parameterContainer
_index
_labelType
_labelsForDataPoints
_labelsSet
archivePipelineUpdateParameterForModels:to:updatable:
archiveCustomModelNames:to:
compileWithModelsInPipeline:toArchive:options:updatable:error:
scopedTo:
extractModelNamesFromArchive:numModels:
setModels:
path
deletingPrefixingScope:
setModelNames:
_models
_modelNames
orderedSet
weights
hasSameNameAsKey:
scope
paramsForLayer:parameterType:error:
biases
createCoreMLToEspressoParamsMap
initWithCompiledArchive:nnContainer:configuration:error:
createClassLabelToIndexMap
parameterValueForKey:
weightsForLayer:error:
biasForLayer:error:
setLossTargetName:
coreMLToEspressoParamsMap
setCoreMLToEspressoParamsMap:
lossOutputName
setLossOutputName:
shuffableTrainingData
setShuffableTrainingData:
_lossTargetName
_classLabelToIndexMap
_coreMLToEspressoParamsMap
_lossOutputName
_shuffableTrainingData
featureValueWithString:
featureValueWithInt64:
initWithMapping:valueOnUnknown:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:
initWithName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:
validateSingleFeatureInDescription:withSet:
mapFeature:error:
objectValue
mapping
valueOnUnknown
_mapping
_valueOnUnknown
toolPath
toolName
setToolPath:
commandName
setCommandName:
sourceUrl
setSourceUrl:
destinationDirectoryUrl
setDestinationDirectoryUrl:
targetLanguage
setTargetLanguage:
swiftVersion
setSwiftVersion:
globalModule
setGlobalModule:
noDocumentation
setNoDocumentation:
invalid
setInvalid:
invalidError
setInvalidError:
dryrun
setDryrun:
detailedTypeInfo
setDetailedTypeInfo:
outputPlistFilename
setOutputPlistFilename:
_detailedTypeInfo
_outputPlistFilename
moveItemAtURL:toURL:error:
generateSwift:generatedCodePath:globalModule:documentation:dryRun:error:
generateObjC:generatedCodePath:documentation:dryRun:error:
rank
width
height
channels
batch
espressoShapeToCoremlShape:ndMode:
setRank:
setWidth:
setHeight:
setChannels:
setBatch:
setSequence:
coremlShapeToEspressoShape:ndMode:
getStrides:
rawPointer
texture
espressoTensorToCoremlTensor:ndMode:
espressoShapesToCoremlShapes:ndMode:
factory
createCustomLayer:withParameters:error:
initWithParameterDictionary:error:
setWeightData:error:
outputShapesForInputShapes:error:
evaluateOnCPUWithInputs:outputs:error:
encodeToCommandBuffer:inputs:outputs:error:
coremlShapesToEspressoShapes:ndMode:
espressoTensorsToCoremlTensors:ndMode:
removeObjectForKey:
intFromFourBytes:
dataWithBytesNoCopy:length:freeWhenDone:
espressoTensorsToCoremlTensorsGPU:
setupForInputShapes:withParameters:
initWithParameters:
hasGPUSupport
setMappedWeights:sizeInBytes:
computeOnCPUWithInputTensors:outputTensors:
encodeToMetalCommandBuffer:inputTensors:outputTensors:
hasDynamicOutputShape:
computeDynamicOutputShape:
ndMode
className
customImpl
setCustomImpl:
_ndMode
_className
_customImpl
characterSetWithCharactersInString:
componentsSeparatedByCharactersInSet:
mainBundle
pathForResource:ofType:
hasPrefix:
characterAtIndex:
stringByTrimmingCharactersInSet:
bundleWithIdentifier:
isAbsolutePath
stringByStandardizingPath
allowsValuesWithDescription:
linkedModelFileName
parameterDescriptionForKey:stringParameterSpec:
linkedModelSearchPath
stringForKey:inDictionary:
stringByDeletingLastPathComponent
findFile:inSearchPath:basePath:
modelWithContentsOfURL:configuration:error:
areFeaturesIn:modelNamed:aSubsetOf:error:
initWithLinkedModel:modelFileName:modelSearchPath:configuration:
updateParameterDescriptionsByUnarchivingSpecification:
linkedModel
modelFileName
modelSearchPath
setLinkedModel:
setModelFileName:
setModelSearchPath:
_linkedModel
_modelFileName
_modelSearchPath
splitIndex
splitDimension
encodeFloat:forKey:
startingIndex
rightChild
leftChild
boundingBox
isLeaf
decodeFloatForKey:
splitValue
setSplitIndex:
findMin:andMax:alongDimension:data:indices:numDimensions:
setSplitDimension:
setSplitValue:
partitionDataPoints:indices:numDimensions:
assignSplitsForData:indices:numDimensions:
print
setStartingIndex:
setCount:
setLeftChild:
setRightChild:
setBoundingBox:
setIsLeaf:
_isLeaf
_splitValue
_splitDimension
_splitIndex
_startingIndex
_count
_leftChild
_rightChild
_boundingBox
constructTree
root
findK:nearestNeighbors:toQueryPoint:inTree:
constructTreeForPointsBoundedBy:startingIndex:count:
calculateDistancesForNodesBetweenLeft:andRight:toQueryPoint:
setRoot:
vIndices
_root
_frontendProcessingModel
numberWithUnsignedLongLong:
initWith:dimensionEncoding:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:
replaceObjectAtIndex:withObject:
vectorizeOneHotEncoderDict:index:error:
columnNameEncoding
dimensionEncoding
_output_array_shape
index_mapping
_columnNameEncoding
_dimensionEncoding
confidenceOutputFeatureName
coordinatesOutputFeatureName
suppressionMethod
setSuppressionMethod:
iouThreshold
setIouThreshold:
confidenceThreshold
setConfidenceThreshold:
minBoxes
setMinBoxes:
maxBoxes
setMaxBoxes:
numClasses
setNumClasses:
perClass
setPerClass:
confidenceInputFeatureName
setConfidenceInputFeatureName:
coordinatesInputFeatureName
setCoordinatesInputFeatureName:
iouThresholdInputFeatureName
setIouThresholdInputFeatureName:
confidenceThresholdInputFeatureName
setConfidenceThresholdInputFeatureName:
setConfidenceOutputFeatureName:
setCoordinatesOutputFeatureName:
_perClass
_suppressionMethod
_iouThreshold
_confidenceThreshold
_minBoxes
_maxBoxes
_numClasses
_confidenceInputFeatureName
_coordinatesInputFeatureName
_iouThresholdInputFeatureName
_confidenceThresholdInputFeatureName
_confidenceOutputFeatureName
_coordinatesOutputFeatureName
initWithParameters:modelDescription:configuration:error:
initWithShape:dataType:shapeConstraint:
constraintWithShape:dataType:shapeConstraint:
isAllowedDataType:error:
constraintWithShape:dataType:
_dataType
_shapeConstraint
initWithUTF8String:
initWith:indices:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:
extractArrayElement:indices:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
extractArrayElement:indices:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
arrayColumnName
extractIndices
outputType
_arrayColumnName
_extractIndices
_outputType
scenePrintRequestRevision
_scenePrintRequestRevision
_configuration
version
setVersion:
postVisionFeaturePrintModel
setPostVisionFeaturePrintModel:
_version
_postVisionFeaturePrintModel
visionFeaturePrintInfo
initWithEngine:interface:metadata:error:
isInputSizeLowerBoundOnly
inputSize
predict:
initWithKeyName:
batchProvider
useForPrediction
nnEngine
initWithMLBatchProvider:forPrediction:neuralNetworkEngine:error:
_useForPrediction
_batchProvider
_nnEngine
initWithName:type:optional:contraints:
valueConstraints
featureDescriptionWithName:type:optional:constraints:
isAllowedValue:
setValueConstraints:
multiArrayConstraintCached
imageConstraintCached
dictionaryConstraintCached
sequenceConstraintCached
_optional
_valueConstraints
_multiArrayConstraintCached
_imageConstraintCached
_dictionaryConstraintCached
_sequenceConstraintCached
longLongValue
numberOfClasses
hasProbabilityPredictionEnabled
predictProbabilities:probabilities:
featureValueWithObject:
stridesForShape:
arrayByAddingObjectsFromArray:
batchProviderFomEspressoDataProvider:neuralNetworkEngine:options:error:
espressoDataProviderFromFeatureProvider:forPrediction:neuralNetworkEngine:error:
espressoDataProviderFromBatchProvider:forPrediction:neuralNetworkEngine:error:
featureProviderFomEspressoDataProvider:neuralNetworkEngine:options:error:
probabilityDictionaryForStringLabels:
probabilityDictionaryForInt64Labels:
initWithObjects:forKeys:count:
initWithStrLabels:
enumeratorFromMap:
keyEnumerator
mapStrLabelToIndex
setMapStrLabelToIndex:
_mapStrLabelToIndex
initWithIntLabels:
mapIntLabelToIndex
setMapIntLabelToIndex:
_mapIntLabelToIndex
initWithStrMap:
nextObject
iter
setIter:
iterEnd
setIterEnd:
_iter
_iterEnd
initWithIntMap:
initWith:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:error:
initWithArray:
constructDictionary:error:
indexOfObject:
categoryName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
categoryName:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
categoryName
_categoryName
addEntriesFromDictionary:
cropAndScaleBufferWithWidth:height:cropRect:format:imageCropAndScaleOption:options:error:calculatedNormalizedOriginOffset:calculatedScaleX:calculatedScaleY:
initWithURL:options:
createPixelBufferFromVNImageBuffer:constraint:cropRect:cropAndScaleOption:options:error:
initWithCGImage:options:
addOrientation:toOptions:
lengthInBytesForScenePrintRequestRevision:
createPixelBufferFromImageAtURL:constraint:cropRect:cropAndScaleOption:options:error:
createPixelBufferFromCGImage:constraint:cropRect:cropAndScaleOption:options:error:
scenePrintsFromPixelBuffersImpl
scenePrintsFromPixelBuffersUsesCPUOnlyImpl
scenePrintElementCountImpl
scenePrintLengthImpl
VNImageBufferClass
_valid
_scenePrintsFromPixelBuffersImpl
_scenePrintsFromPixelBuffersUsesCPUOnlyImpl
_scenePrintElementCountImpl
_scenePrintLengthImpl
_VNImageBufferClass
initWithValue:additionalFeatures:
predictedValue
additionalFeatures
_predictedValue
_additionalFeatures
initWithData:language:inputFeatureName:outputFeatureName:modelData:metadata:error:
initWithData:language:inputFeatureName:outputFeatureName:modelData:error:
initializeEmbeddingModelWithData:error:
predictVectorForString:inputString:error:
saveAppleWordEmbeddingModelToURL:wordEmbeddingParameters:error:
wordEmbeddingModel
cStringUsingEncoding:
initWithLRSpec:configuration:error:
intercept
postEvalTransForm
m_spec
deserializeInterfaceFormat:archive:error:
serializeInterfaceFormat:archive:error:
initWithUndefinedValueAndType:
initWithValue:type:
value
isEqualToNumber:
isEqualToDictionary:
isEqualToArray:
isEqualToFeatureValue:
featureValueWithStringKeyDictionary:
featureValueWithInt64KeyDictionary:
getFeatureSize:
setValue:
setObjectValue:
_undefined
_value
_objectValue
stringWithCapacity:
NLPSequenceModelCopyPredictedTokensAndLabelsForTextImpl
NLPSequenceModelCreateWithDataImpl
NLPSequenceModelGetRevisionImpl
NLPSequenceModelIsRevisionSupportedImpl
NLPSequenceModelGetCurrentRevisionImpl
NLPClassifierModelCopyPredictedLabelForTextImpl
NLPClassifierModelCreateWithDataImpl
NLPClassifierModelGetRevisionImpl
NLPClassifierModelIsRevisionSupportedImpl
NLPClassifierModelGetCurrentRevisionImpl
NLPGazetteerModelCopyLabelForStringImpl
NLPGazetteerModelCreateWithDataImpl
NLPGazetteerModelGetRevisionImpl
NLPGazetteerModelIsRevisionSupportedImpl
NLPGazetteerModelGetCurrentRevisionImpl
NLPEmbeddingModelCopyVectorForStringImpl
NLPEmbeddingModelCreateWithDataImpl
NLPEmbeddingModelGetRevisionImpl
NLPEmbeddingModelIsRevisionSupportedImpl
NLPEmbeddingModelGetCurrentRevisionImpl
_NLPSequenceModelCopyPredictedTokensAndLabelsForTextImpl
_NLPSequenceModelCreateWithDataImpl
_NLPSequenceModelGetRevisionImpl
_NLPSequenceModelIsRevisionSupportedImpl
_NLPSequenceModelGetCurrentRevisionImpl
_NLPClassifierModelCopyPredictedLabelForTextImpl
_NLPClassifierModelCreateWithDataImpl
_NLPClassifierModelGetRevisionImpl
_NLPClassifierModelIsRevisionSupportedImpl
_NLPClassifierModelGetCurrentRevisionImpl
_NLPGazetteerModelCopyLabelForStringImpl
_NLPGazetteerModelCreateWithDataImpl
_NLPGazetteerModelGetRevisionImpl
_NLPGazetteerModelIsRevisionSupportedImpl
_NLPGazetteerModelGetCurrentRevisionImpl
_NLPEmbeddingModelCopyVectorForStringImpl
_NLPEmbeddingModelCreateWithDataImpl
_NLPEmbeddingModelGetRevisionImpl
_NLPEmbeddingModelIsRevisionSupportedImpl
_NLPEmbeddingModelGetCurrentRevisionImpl
isValidRegressorInterface
isValidClassifierInterface
initWithName:
modelInterfaceWithInputDescription:orderedInputFeatureNames:outputDescription:orderedOutputFeatureNames:predictedFeatureName:predictedProbabilitiesName:trainingInputDescription:
setConfiguration:
_interface
regressorResultFromOutputFeatures:error:
initWith:imputeValue:replaceValue:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:error:
modelInterfaceWithInputDescription:orderedInputFeatureNames:outputDescription:orderedOutputFeatureNames:predictedFeatureName:predictedProbabilitiesName:
imputeValueFrom:replaceValue:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
imputeValueFrom:replaceValue:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
imputeValue
replaceValue
_imputeValue
_replaceValue
_sentenceClassifierModel
rangeFromAllowedSizeRangeProtoMessage:
initWithValueDescription:countRange:
initWithPixelsWide:pixelsHigh:
initWithEnumeratedImageSizes:
isAllowedImageSize:error:
initWithPixelsWideRange:pixelsHighRange:
constraintWithPixelsWide:pixelsHigh:pixelType:sizeConstraint:
populateConstraintsForFeatureDescription:
descriptionFromProto:
orderedNamesFromProto:
inputDescriptionFromInterface:
outputDescriptionFromInterface:
trainingInputDescriptionFromInterface:
orderedFeatureNamesFromInterface:forInput:
imagePixelTypeFromOSType:
exceptionWithName:reason:userInfo:
featureValuesWithConsistentTypeFromArray:error:
objectForKey:class:dictionary:
numberForKey:inDictionary:
initWithPixelsWide:pixelsHigh:pixelType:sizeConstraint:
osType:isAcceptedForPixelType:
_stringForAllowedOSTypes
_stringForOSType:
constraintWithPixelsWide:pixelsHigh:pixelType:
osType
imageHeight
imageWidth
_pixelsHigh
_pixelsWide
_sizeConstraint
_pixelType
_featureValuesForNames:providedBy:error:
_vectorizedSizeOfFeatureValues:error:
_vectorizeWithoutSizeCheckFeatureValues:intoDoubleVector:stride:error:
canVectorizeFeatureWithDescription:
canVectorizeAllFeaturesWithDescriptions:
setByAddingObjectsFromSet:
initWithFeaturesFrom:addedToFeaturesFrom:
unionFeatureProvider
initWithSVMModel:freeOnDealloc:isInputSizeLowerBoundOnly:inputSize:classLabels:
allocSVMNodeVector:
fillSVMNodeVector:values:count:
deallocSVMNodeVector:
initWithLibSVMFile:classLabels:
setModel:
freeModelOnDealloc
setFreeModelOnDealloc:
setIsInputSizeLowerBoundOnly:
setInputSize:
_freeModelOnDealloc
_isInputSizeLowerBoundOnly
_inputSize
initWith:dataTransformerName:ouputSparse:handleUnknown:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:
encodeFeatureValue:
encodeFeatureValueIntString:
handleUnknown
unknownDenseVector
featureEncoderFrom:inputDescription:orderedInputFeatureNames:
featureEncoderFrom:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
featureEncoderFrom:dataTransformerName:ouputSparse:handleUnknown:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
featureEncoding
ouputSparse
_ouputSparse
_handleUnknown
_featureEncoding
_wordTaggingModel
registerBrickClass:
initWithData:encoding:
initWithDescription:configuration:error:
setCurrentParameterValues:
setParameterKeys:
setParameterDescriptions:
parameterKeys
parameterDescriptions
validateParameterValue:givenConstraint:
enumeratedNumbers
minNumber
maxNumber
_currentParameterValues
_parameterKeys
_parameterDescriptions
initWithSVMModel:freeOnDealloc:isInputSizeLowerBoundOnly:inputSize:
initWithLibSVMFile:
setMinNumber:
setMaxNumber:
setEnumeratedNumbers:
valueForKeyPath:
numericConstraintWithEnumeratedNumbers:
numericConstraintWithMinNumber:maxNumber:
_minNumber
_maxNumber
_enumeratedNumbers
initWithName:shortDescription:versionString:author:license:creatorDefined:
shortDescription
author
license
creatorDefined
_shortDescription
_versionString
_author
_license
_creatorDefined
initWithInputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:predictedFeatureName:predictedProbabilitiesName:trainingInputDescription:
setWithSet:
minusSet:
_trainingInputDescription
predictedValueFeatureDescription
initWithKeyName:scope:
hasSuffix:
_scope
scalarRegress:error:
scalarRegress:
vectorRegress:dest:
output_classes
initWithFormat:arguments:
errorWithCode:underlyingError:format:args:
errorWithCode:format:args:
countRange
_valueDescription
_countRange
initWith:scaleValue:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:error:
shiftValue
scaleValue
_shiftValue
_scaleValue
initWithStringClassProbability:classFeatureType:additionalFeatures:
initWithIntClassProbability:classFeatureType:additionalFeatures:
initWithClassProbability:additionalFeatures:classLabelOfMaxProbability:
resultWithStringClassProbability:additionalFeatures:
resultWithIntClassProbability:additionalFeatures:
predictedClass
classProbability
predictedClassFeatureType
_predictedClass
_classProbability
_predictedClassFeatureType
calculateClassProbability:input:error:
classify:error:
classify:topK:error:
classType
classEncoding
initWith:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:
computeSingleNorm:lastValue:
inputDescriptionFrom:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
normFrom:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
normFrom:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
norm
_norm
isEqualToImageSize:
imageSizeSet
pixelsWideRange
pixelsHighRange
enumeratedImageSizes
_imageSizeSet
_pixelsWideRange
_pixelsHighRange
locationClosestTo:inRange:
closestImageSizeInArray:toImageSize:preferDownScaling:
closestImageSizeInPixelsWideRange:pixelsHighRange:toImageSize:preferInputAspectRatio:
optimizationParameters
_optimizationParameters
initWithMode:inputName:targetName:lossOutputName:
inputName
targetInputName
mode
outputName
setOutputName:
_inputName
_targetInputName
_mode
_outputName
lowercaseString
imageBuffer
allocatedImageData
dataArray
float_buffer
blob
initWithBlobContainer:
setMaxNumberOfElements:
setDataPointer:
setDataArray:
setType:
setShape:
setStrides:
maxNumberOfElements
setImageBuffer:
setAllocatedImageData:
setFloat_buffer:
setBlob:
_dataPointer
_dataArray
_maxNumberOfElements
_blob
_allocatedImageData
_float_buffer
_imageBuffer
setLayerNames:
blobShapes
dataStorage
setDataStorage:
setBlobShapes:
number_of_data_points
setNumber_of_data_points:
setBatchSize:
nonBatchBlobNames
setNonBatchBlobNames:
_number_of_data_points
_batchSize
_nonBatchBlobNames
_dataStorage
_blobShapes
componentsSeparatedByString:
URLWithString:
requestWithURL:
setHTTPMethod:
setValue:forHTTPHeaderField:
setHTTPBody:
sharedSession
dataTaskWithRequest:completionHandler:
resume
context_for_runtime_platform:
trainingGraphNetPtr
setTrainingGraphNetPtr:
inferenceGraphNetPtr
setInferenceGraphNetPtr:
shareWeights
setupShapes:forBlobs:withError:
setInferenceModel:
setOptimizer:
setupInputOutputShapes:
reloadOnRuntinePlatform:
initWithBlobShapes:numberOfDataPoints:batchSize:error:
checkShapes:withSample:withError:
dataAtIndex:key:
saveInferenceNetwork:error:
initWithNetwork:
taskState
networkPointer
getTensorNamed:
setTensorNamed:withValue:error:
doInferenceOnData:error:
saveNetwork:inplace:error:
initWithTrainingModelDefinition:forPlatform:error:
namesVectorToFoundationArray:
doTrainingOnData:forNumberOfEpochs:withCallback:error:
dataTypeForParameterOfType:fromLayerNamed:
getParameterOfType:forLayerNamed:error:
platformForLayerNamed:error:
inferenceModel
optimizer
setTaskState:
inference_layer_index
varsDef
runtimePlatform
batchSize
training_control_name
training_control_end_name
gradient_control_name
gradient_control_end_name
optimizer_control_name
optimizer_control_end_name
infInputNames
infOutputNames
trainInputNames
trainOutputNames
infInputBlobShapes
trainInputBlobShapes
infOutputBlobShapes
trainOutputBlobShapes
_inferenceModel
_optimizer
_taskState
_inferenceGraphNetPtr
_trainingGraphNetPtr
runOnNetwork:
dataUsingEncoding:
_width
_height
_channels
_batch
_rank
setRawPointer:
_rawPointer
setTexture:
_texture
shortValue
unsignedShortValue
unsignedLongLongValue
numberWithShort:
numberWithUnsignedShort:
initWithBytesNoCopy:length:
standardUserDefaults
persistentDomainForName:
initWithBlobMap:
blobs
setBlobs:
setNetworkPointer:
_networkPointer
_blobs
contentsOfDirectoryAtPath:error:
pathExtension
initWithInferenceNetworkPath:error:
initWithTrainingNetworkPath:inferenceInputs:inferenceOutputs:trainingInputs:trainingOutputs:trainingControlVariableName:withInitializer:error:
layerNames
inputs
outputs
trainingInputs
trainingOutputs
isTrainingGlobalName
initializer
_layerNames
_inputs
_outputs
_trainingInputs
_trainingOutputs
_isTrainingGlobalName
_initializer
Error computing shape information for Neural Network model. This model may be invalid.
IMPORTANT: new sequence length computation failed, falling back to old path.
Model requires sequence length greater than %d
Error in neural network compiler computing minimum sequence length.
Invalid height and width for the image input.
Input MLMultiArray cannot be %d dimensional (must be between 1 and 5 dimensions).
IOS 11 Legacy code found sequence length %d
Error in compiling custom layer model.
IMPORTANT: new sequence length computation failed, falling back to old path. Your compilation was sucessful, but please file a radar on Core ML | Neural Networks and attach the model that generated this message.
Error in laying out custom layer model in memory.
Error handling image preprocessing parameters.
Setting optimize parameter to use half precision
Error in optimizing custom layer model.
Error in saving custom layer model to file.
Error compiling updatable model.
Unsupported Engine type.
Cannot create context, Caught exception: %s
Input MLMultiArray cannot be %d dimensional (must have at least 1 dimension).
Entering NN constructor
Plan created, now adding network
File: %s not found.
Finding model in: %s
Error in adding network %d
Error in loading user-provided custom layer during neural network evaluation.
Error in adding network %d.
Input feature %s required but not passed to neural network.
Error binding image input buffer %s: %d
Error binding input buffer %s: %d
Error passing input to NN engine.
Error: unsupported input type for neural network.
Error checking if an output blob is dynamic or not, %s: %d
Error binding output buffer %s: %d
Failure verifying inputs.
Failure in resetSizes.
Failure in bindInputsAndOutputs.
Error computing NN outputs, caught unknown exception.
Runtime error in NN execution.
Error in computing user-provided custom layer during neural network evaluation.
Error computing NN outputs %d
Error unlocking pixel buffers.
Failure in binding outputs after calling execute sync.
WARNING: The computed output shape does not match any output shape allowed in the model's description. Please update the model description.
Failed to build clean before reshape.
Empty input feature dictionary passed to resetSizes.
Incorrect input number of dimensions %lul (must be between 1 and 5 dimensions.
Incorrect input number of dimensions %lul (must be more than 1)
Cannot evaluate a batch of size %d on GPU, which is larger than maximum of %d.
Cannot evaluate a sequence of length %d, which is longer than maximum of %d for bidirectional models.
Failure setting up to dynamically allocate for sequence size.
Failure dynamically resizing for sequence length
Error in computing user-provided custom layer output shapes during neural network construction.
Failure dynamically resizing for sequence length.
Error in declaring input %d.
inputLayer: %s
Error in declaring output: %d.
outputLayer: %s
Error in passing image pre-processing parameters for %s to network: %d.
Hardware fall back after plan build failure.
Error plan build: %d.
This model is not suitable for faster batch prediction, so it is falling back on a for-loop-based approach.
Called dumpTestVectors but configuration didn't specify enableTestVectorMode.
MLModelAsset: load has already been run successfully.
MLModelAsset: load failed with error %@
MLModelAsset: load failed.
MLModelAsset: modelWithError: load failed with error %@
MLModelAsset: classifierWithError: load failed.
MLModelAsset: regressorWithError: load failed.
%s thrown on construction
Incorrect number of classes given (TreeEnsembleClassifier).
Couldn't create os_log_t coreChannel
Error creating Core ML custom layer implementation from factory for layer "%s".
Core ML custom Layer implementation '%s' does not conform to the MLCustomLayer protocol.
Error getting Core ML custom layer output shapes for layer "%s".
Evaluation on Core ML custom layer "%s" called before the layer is constructed.
Error evaluating Core ML custom layer "%s" on CPU.
Core ML custom Layer implementation '%s' does not conform to the MLCustomLayer protocol'
Error initializing Core ML custom layer implementation with parameter dictionary for layer "%s".
Error setting weights in Core ML custom layer "%s".
Error evaluating Core ML custom layer "%s" on GPU.
Unknown availability for newer specification version %d
Defaulting to no availablity info
A Core ML custom neural network layer requires an implementation named '%s' which was not found in the global namespace.
A Core ML custom neural network layer implementation class named '%s' does not conform to the MLCustomLayer protocol.
Image descripition included empty set of enumerated sizes
Using the default size
Image descripition width and height and are not valid according to the enumerated sizes
Changing default height and width to be the first enumerated size
Image descripition width and height and are not valid according to the specified flexible ranges
Changing default height and width to minimum size in range
pass_control_flow_graph: predecessors from: '%s'
pass_control_flow_graph: successors from: '%s'
%s depth=%d
pass_multi_head_program_gen ioutput=%zu name=%s
pass_multi_head_program_gen: merge_group.size()=%zu
pass_multi_head_program_gen: cf_end ilayer=%zu type=%s
pass_multi_head_program_gen: cf_end after_ilayer=%d type=%s
pass_multi_head_program_gen: cf_if ilayer=%zu outputs_per_layer[ilayer].size()=%zu
Interpreter not set
Cannot find network's plan, must be using C++ interface: assuming all outputs to be bound
Breakpoint layer: Invalid state, no espresso_plan available in network
No bottom blobs to breakpoint layer
No breakpoint block set
Warning: padding deconvolution %s in SAME mode will not be pad-invariant for all resolutions
[convert_to_explicit_padding] Shape mismatch for blob %s (%d %d %d %d %d) -> (%d %d %d %d %d)
inner_product_kernel_cpu: layer %s cached for %d uses
nonzero_kernel_cpu: All entries are zero, outputing empty blob
Restoring network precompilation info
Missing precompilation info. Fallback to full dispatch.
[run_dispatch_v2] Both avoid_cpu and avoid_gpu were set! resetting them to false.
[run_dispatch_v2] fb_gpu=(%d %.3f) fb_cpu=(%d %.3f)
[run_dispatch_v2] selected gpu
[run_dispatch_v2] The network falls back to GPU too often. Please consider running the network on GPU or change the architecture.
[run_dispatch_v2] selected cpu
[run_dispatch_v2] The network falls back to CPU too often. Please consider running the network on CPU or change the architecture.
[run_dispatch_v2] fb_gpu_cpu=(%d %.3f)
[run_dispatch_v2] The network bounces between the ANE and GPU/CPU too often. Please consider running the network on a different engine or change the architecture.
[run_dispatch_v2] bouncing_often=%d cost=%f n_bounces=%zu bounce_ratio=%f
Error while restoring network precompilation info %s
pass_multi_head_prune_undeclared output=%s declared=%d
[cpu_context_transfer_algo] Needs fallback: Layer %d: %s (%s)
[cpu_context_transfer_algo] disabled all_next
[cpu_context_transfer_algo] cost_single: %.2f > cost_all_next: %.2f
[cpu_context_transfer_algo] # top_blobs_of_default_ctx_layers: %zu %s
[cpu_context_transfer_algo] # bottom_blobs_of_default_ctx_layers: %zu %s
[cpu_context_transfer_algo] Fallback segment %d: %d-%d
[cpu_context_transfer_algo] remap_fallback_bottom: ilayer=%d %s -> %s
[cpu_context_transfer_algo] remap_default_bottom: ilayer=%d %s -> %s
[cpu_context_transfer_algo] Inserting context transfer to fallback after layer %d (%s):  %s -> %s
[cpu_context_transfer_algo] Inserting context transfer to default after layer %d (%s): %s -> %s
[cpu_context_transfer_algo] Inserting %d ctx transfers in total
layer %zu (%s) not available (%d %d)
Cannot find any kernel for layer %zu (%s)
Error in estimated_compute_resources %s
assign_to_fallback_context_v2: disconnected graph_position=%d ilayer=%d
No fallback needed: %d
swap_zero_to_first_position_ac_format: %zu
[quantizer::estimate_stats] no_mixed_precision=1
[quantizer::estimate_stats] %s: min=%.2e max=%.2e avg=%.3e scale=%.3f signed=%d
No top
No bottom
sample=%d blob_name=%s psnr=%.2f maxabs=%.3e maxrel=%.3f q=%.2e ref=%.2e
Stats for PSNR
psnr: blob=%s mean=%.2f stddev=%.2f min=%.2f max=%.2f
Stats for MAXABSDIFF
maxabsdiff: blob=%s mean=%.2e stddev=%.2e min=%.2e max=%.2e
Stats for MAXRELDIFF
maxreldiff_stat: blob=%s mean=%.2e stddev=%.2e min=%.2e max=%.2e
high bias shift %d
low bias shift %d
identify_segments, logic error: is_context_transfer=%d is_default_context_layer=%d is_last_layer=%d ilayer=%zu
identify_segments: isegment %zu (%zu %zu)
input %zu %s
output %zu %s
Precompilation info not found for engine: %s
[net::setup_script] %s
Plan tracer added to dump at: %s
Blob copy not implemented
%zu: %%%s = %s(%s) @%d
%zu: __forward_segment isegment=%d end=%zu
blob[0]=%.3f blob[-1]=%.3f avg=%e platform=%d
restore phi blobs
resizing: ilayer=%zu itop=%zu old_dim=%lld new_dim=%lld
resolve_virtual_phi: idx=%zu ts=%zu v=%.2f X
GColor segment=%d blob=%s color=%d
[reshape] max color = %d tot_est_size = %.3f
Shape computation issue: %s at layer %zu
TODO: Blob shape not found:%s layer:%d j=%d
Fail fast reshape (input) %s new=%lld old=%lld
adding phi: pl=%d kernel_type=%s kernel_name=%s top=%s k->original_blob_name=%s
pass_make_ssa: phi simplify iteration
pass_make_ssa: block=%s original_blob=%s phi=%s versions=%zu
pass_make_ssa: block=%s original_blob=%s version=%s not reachable from phi=%s
pass_make_ssa: removing phi=%s bottom_names.size()=%zu
Kernel validation warning %s (%s) @ %zu: %s
async_cache: Invalidating cache, cached blob size (%zu) < requested blob size (%zu)
Forcing compute path %d
dispatch_error_fallback_at_c_level
Dispatch failed for network %s, and the plan already contained %zu networks
dispatch_error_use_cpu_script
Espresso CPU context forcing FP32 compute path.
dispatch_error_use_mps_buffers
[change_input_shapes] index=%d/%d name=%s w=%d h=%d k=%d n=%d seq=%d
Unsupported blob storage type %d
Creating context %zu eng=%d dev=%d
Espresso compiled without Nitro
Creating plan %zu
espresso_plan_add_network plan=%zu path=%s cp=%d
Destroying plan %zu
Destroying context %zu
blob: %s
error %s
Creating test vectors context %zu
[configuration] %s %d %d %d %d %d, rank=%d
[configuration (default)] %s %d %d %d %d %d, rank=%d
IntermediateSharing espresso_will_share_intermediate_buffer_with_existing_plan (1/3) %s %llu
IntermediateSharing espresso_plan_share_intermediate_buffer (1/3) %llu %llu
The client use of the API is invalid and dangerous.
ESPRESSO_ENGINE_METAL_MPS_BUFFERS forcing FP32 compute path.
[Espresso::handle_ex_] exception=%s
[Espresso::handle_ex_plan] exception=%s status=%d
[Espresso::handle_ex_plan] exception=%s
Training kernels not enabled for engine: %d
fold_transform_params should only be used for VALID convolutions
[Espresso::fold_transform_params] %f %f %f %f %f
[dataset_estimator::estimate] batch: %d / %d
[dataset_estimator::estimate] blob not found in network: %s
Error reading source directory: %s
Error creating directory: %s
Tracer cannot write file: %s
Test data written to: %s
Loaded network: '%s' pf=%d cp=%d
Cannot find engine: %s err=%s
Cannot load configurations
Sharing weights from layer %zu to layer %zu
Cannot find engine for: %d
run_pass_on_network %s
MLNeuralNetworkCompiler
MLSpecificationCompiler
MLNeuralNetworkEngine
MLNeuralNetwork
MLClassifier
MLModeling
MLRegressor
MLModelSpecificationLoader
NSObject
MLCompiledModelLoader
_MLSNFrameworkHandle
MLBatchProviderUtils
MLLazyUnionBatchProvider
MLBatchProvider
MLWindowedBatchProvider
MLIndexedBatchProvider
MLNewBatchConstruction
MLBatchCopyToMultiArray
MLArrayBatchProvider
MLCustomModel
MLDefaultCustomModelFactory
MLCustomModelFactory
MLCustomModelLoader
MLCustomModelWrapper
ImageUtils
MLMultiArrayShapeConstraint
NSSecureCoding
NSCoding
MLPipelineUpdateEngine
MLUpdatable
MLWritable
MLDictionaryConstraint
MLFeatureValueConstraint
NSCopying
MLNearestNeighborsLinearIndex
MLNearestNeighborsIndex
MLPredictionOptions
MLInternalSettings
MLDictionaryFeatureProvider
MLFeatureProvider
NSFastEnumeration
FromGenericFeatureProvider
MLLoader
MLCompilerOptions
MLCompilerResult
MLCompiler
MLArchivingUtils
MLAppleGazetteerParameters
MLAppleGazetteer
MLObjectBoundingBoxOutputDescription
MLObjectBoundingBoxOutput
_MLDataSource
ETDataProvider
MLSequence
MLSequnceAsFeatureValueArray
MLFeatureValueAccess
MLVersionInfo
_MLSNVGGishFeatureEmbedding
MLModelDescription
MLParameterDescription
ModelSpecification
MLModelAsset
MLNeuralNetworkContainer
MLAppleTextClassifierParameters
MLAppleTextClassifier
MLKNearestNeighborsClassifierParameters
MLItemSimilarityRecommender
MLNeuralNetworksCompileTimeParams
MLModelConfiguration
MLModelDescriptionUtils
Utilities
MLPipelineClassifier
MLAppleImageFeatureExtractorScenePrintParameters
MLAppleImageFeatureExtractorParameters
MLAppleImageFeatureExtractor
MLBayesianProbitRegression
MLSupervisedOnlineUpdatable
MLModelSpecificationSaver
MLMultiArrayUtils
MLMultiArray
Attributes
PrivateConstruction
CopyingAndVectorization
ConvenientConstruction
Filling
MLMultiArrayAsNSArrayWrapper
MLMultiArrayView
Views
RawAccess
MLTreeEnsembleClassifier
MLModelTypeRegistry
MLIdentity
MLAppleWordTaggerParameters
MLAppleWordTagger
MLSaver
MLKNearestNeighborsClassifier
MLLogging
MLPipeline
MLSVMLoader
MLNeuralNetworkUpdateEngine
MLCategoricalMapping
CoreMLCompilerArguments
MLCustomLayer
MLCustomLayerWrapper
EspressoBrick
MLLinkedModel
_KDNode
MLNearestNeighborsSingleKdTreeIndex
_MLSNVGGishFrontendProcessing
MLFeatureVectorizer
MLNonMaximumSuppressionParameters
MLNonMaximumSuppression
MLMultiArrayConstraint
MLArrayFeatureExtractor
_MLVNScenePrintCustomModel
MLModelVisionFeaturePrintInfo
MLSVRLoader
MLSupportVectorRegressor
MLCodeGenerator
MLPipelineLoader
MLParameterKey
MLLinkedModelParameters
MLScopedParameters
MLNeuralNetworkParameters
_MLBatchDataSource
MLFeatureDescription
MLSupportVectorClassifier
MLDataConversionUtils
MLProbabilityDictionary
MLStringProbabilityDictionary
MLInt64ProbabilityDictionary
MLStringProbabilityDictionaryEnumerator
MLInt64ProbabilityDictionaryEnumerator
MLDictVectorizer
_MLVNFrameworkHandle
MLRegressorResult
MLAppleWordEmbeddingParameters
MLAppleWordEmbedding
MLGLMRegression
ModelAsset
MLFeatureValue
MLDefaultCustomLayerFactory
MLCustomLayerFactory
_MLNLPFrameworkHandle
MLModel
MLPipelineRegressor
MLImputer
_MLNLPSentenceClassifierModel
MLModelIOUtils
MLFeatureTypeUtils
MLParameterUtils
MLImageConstraint
MLFeatureProviderUtils
MLLazyUnionFeatureProvider
MLNewProviderConstruction
MLSVMEngine
ModelConstructible
MLOneHotEncoder
_MLNLPWordTaggingModel
MLAppleSoundAnalysisPreprocessing
MLParameterContainer
MLSVREngine
MLNumericConstraint
MLModelMetadata
MLModelInterface
FeatureAccessors
Validation
MLKey
MLTreeEnsembleRegressor
Model
MLModelErrorUtils
MLSequenceConstraint
MLScaler
MLClassifierResult
MLGLMClassification
MLNormalizer
MLImageSize
MLImageSizeConstraint
ClosestAllowedSize
EspressoPass_multi_head_program_gen
ETOptimizerDefinition
ETLossDefinition
ETDataTensor
EspressoPass_multi_head_prune_undeclared
ETVariablesDefinition
_ETBufferDataSource
ETTaskDefinition
ETTaskContext
EspressoCustomPass
EspressoBrickRegistry
EspressoBrickTensorShape
EspressoBrickTensor
EspressoBrickTensorCPU
EspressoBrickTensorMetal
ETTaskState
ETModelDefinition
@48@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24@32^@40
@40@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16@24^@32
@"MLCompilerResult"48@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24@"MLCompilerOptions"32^@40
@"MLVersionInfo"40@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16@"MLCompilerOptions"24^@32
@56@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@24@32@40^@48
@32@0:8@16^@24
@40@0:8@16@24^@32
@48@0:8@16@24@32^@40
@"<MLFeatureProvider>"32@0:8@"<MLFeatureProvider>"16^@24
@16@0:8
v24@0:8@16
@"<MLFeatureProvider>"40@0:8@"<MLFeatureProvider>"16@"MLPredictionOptions"24^@32
@"<MLBatchProvider>"32@0:8@"<MLBatchProvider>"16^@24
@"<MLBatchProvider>"40@0:8@"<MLBatchProvider>"16@"MLPredictionOptions"24^@32
@"MLModelDescription"16@0:8
v24@0:8@"MLModelDescription"16
@"MLModelInterface"16@0:8
@"MLModelMetadata"16@0:8
@"NSArray"16@0:8
@"MLClassifierResult"40@0:8@"<MLFeatureProvider>"16@"MLPredictionOptions"24^@32
@"MLRegressorResult"40@0:8@"<MLFeatureProvider>"16@"MLPredictionOptions"24^@32
c24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c16@0:8
c24@0:8#16
c24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
@"<MLModeling>"40@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16@"MLModelConfiguration"24^@32
@56@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@"MLVersionInfo"24@"MLVersionInfo"32@"MLModelConfiguration"40^@48
i24@0:8@16
c32@0:8@16^@24
v32@0:8@16@24
c24@0:8^@16
c28@0:8c16^@20
c36@0:8@16c24^@28
v24@0:8Q16
c48@0:8@16^{vector<std::__1::shared_ptr<unsigned char>, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}^{shared_ptr<unsigned char>}{__compressed_pair<std::__1::shared_ptr<unsigned char> *, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}}}24Q32^@40
@32@0:8Q16^@24
^{__CVBuffer=}40@0:8^{?=^v^v[4Q][4Q]QQQQQQQQQQi}16@24^@32
v16@0:8
@40@0:8@16^@24^@32
v20@0:8c16
{vector<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >=^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}{__compressed_pair<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > *, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >=^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}}}16@0:8
v40@0:8{vector<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >=^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}{__compressed_pair<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > *, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >=^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}}}16
^v16@0:8
v24@0:8^v16
{?=^vi}16@0:8
v32@0:8{?=^vi}16
{map<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16@0:8
v40@0:8{map<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16
i16@0:8
v20@0:8i16
B16@0:8
v20@0:8B16
{map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16@0:8
v40@0:8{map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16
{map<std::__1::basic_string<char>, MLOptionalNNInputType, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, MLOptionalNNInputType> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16@0:8
v40@0:8{map<std::__1::basic_string<char>, MLOptionalNNInputType, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, MLOptionalNNInputType> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16
{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}16@0:8
v40@0:8{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}16
{set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > >={__tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char> > >=Q}}}16@0:8
v40@0:8{set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > >={__tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char> > >=Q}}}16
{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}16@0:8
v40@0:8{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}16
{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16@0:8
v40@0:8{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16
@"NSArray"
@"NSString"
@"NSDictionary"
@"MLProbabilityDictionary"
@"NSObject<OS_dispatch_semaphore>"
@"NSObject<OS_dispatch_queue>"
{?="plan"^v"network_index"i}
{vector<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >="__begin_"^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}"__end_"^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}"__end_cap_"{__compressed_pair<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > *, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >="__value_"^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}}}
{map<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
{map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
{map<std::__1::basic_string<char>, MLOptionalNNInputType, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, MLOptionalNNInputType> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
{vector<bool, std::__1::allocator<bool> >="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >="__value_"Q}}
{set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > >="__tree_"{__tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char> > >="__value_"Q}}}
{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >="__r_"{__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >="__value_"{__rep=""(?="__l"{__long="__cap_"Q"__size_"Q"__data_"*}"__s"{__short=""(?="__size_"C"__lx"c)"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}
{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
@24@0:8@16
@32@0:8@16@24
@24@0:8q16
q16@0:8
@"<MLFeatureProvider>"24@0:8q16
@"<MLBatchProvider>"
@48@0:8@16q24q32^@40
v24@0:8q16
@48@0:8@16Q24Q32^@40
c48@0:8@16@24@32^@40
@40@0:8@"MLModelDescription"16@"NSDictionary"24^@32
@"NSObject<MLCustomModel>"48@0:8@"NSString"16@"MLModelDescription"24@"NSDictionary"32^@40
@32@0:8^{CustomModel=^^?{InternalMetadataWithArenaLite=^v}{MapFieldLite<google::protobuf::internal::MapEntryLite<std::__1::basic_string<char>, CoreML::Specification::CustomModel_CustomModelParamValue, google::protobuf::internal::WireFormatLite::TYPE_STRING, google::protobuf::internal::WireFormatLite::TYPE_MESSAGE, 0>, std::__1::basic_string<char>, CoreML::Specification::CustomModel_CustomModelParamValue, google::protobuf::internal::WireFormatLite::TYPE_STRING, google::protobuf::internal::WireFormatLite::TYPE_MESSAGE, 0>=^{Arena}{Map<std::__1::basic_string<char>, CoreML::Specification::CustomModel_CustomModelParamValue>=^{Arena}i^{InnerMap}}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}i}16^@24
@40@0:8@16@24@32
@"NSObject<MLCustomModel>"
^{__CVBuffer=}32@0:8@16^@24
^{__CVBuffer=}36@0:8@16c24^@28
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSOrderedSet"
c32@0:8@"NSURL"16^@24
v32@0:8@"MLUpdateProgressHandlers"16@"NSObject<OS_dispatch_queue>"24
v24@0:8@"<MLBatchProvider>"16
v24@0:8@"NSDictionary"16
@"MLModel<MLUpdatable>"56@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@"MLVersionInfo"24@"MLVersionInfo"32@"MLModelConfiguration"40^@48
{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}}16@0:8
@"MLUpdateProgressHandlers"
{vector<unsigned long long, std::__1::allocator<unsigned long long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >="__value_"^Q}}
c32@0:8@"MLFeatureValue"16^@24
@24@0:8^{_NSZone=}16
{vector<std::__1::pair<unsigned long, float>, std::__1::allocator<std::__1::pair<unsigned long, float> > >=^{pair<unsigned long, float>}^{pair<unsigned long, float>}{__compressed_pair<std::__1::pair<unsigned long, float> *, std::__1::allocator<std::__1::pair<unsigned long, float> > >=^{pair<unsigned long, float>}}}32@0:8Q16r^{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}24
c32@0:8r^{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}16^@24
@48@0:8{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}16Q40
{vector<float, std::__1::allocator<float> >="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::__1::allocator<float> >="__value_"^f}}
@20@0:8c16
@"MLFeatureValue"24@0:8@"NSString"16
@"NSSet"16@0:8
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@32@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16^@24
c40@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16^@24^@32
@40@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@24^@32
@24@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16
@24@0:8^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16
@80@0:8Q16@24@32@40@48@56@64^@72
@"NSData"
c40@0:8@16@24^@32
@56@0:8@16@24@32@40^@48
@"MLAppleGazetteerParameters"
@"NSDictionary"32@0:8Q16^@24
@44@0:8@16c24@28^@36
@32@0:8@16q24
@24@0:8Q16
@"MLSequence"
@48@0:8q16q24q32@40
@"<MLCustomModel>"
@"MLModelDescription"
@24@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16
@24@0:8^{_MLModelMetadataSpecification={shared_ptr<CoreML::Specification::Metadata>=^{Metadata}^{__shared_weak_count}}}16
@64@0:8@16@24@32@40@48@56
@56@0:8@16@24@32@40@48
@32@0:8^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}16^@24
@"NSURL"
@"MLParameterKey"
@"MLNumericConstraint"
@32@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^@24
@24@0:8^@16
@"NSObject<MLModeling>"
@"MLModelConfiguration"
@48@0:8@16@24@32@40
@84@0:8@16@24@32@40@48@56@64c72c76c80
@"MLModel"
@"MLNeuralNetworksCompileTimeParams"
@72@0:8Q16@24@32@40@48@56^@64
@"MLAppleTextClassifierParameters"
@"NSObject"
r*16@0:8
B40@0:8@16^{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}}24^@32
{shared_ptr<Archiver::MMappedFile>="__ptr_"^{MMappedFile}"__cntrl_"^{__shared_weak_count}}
{vector<unsigned char, std::__1::allocator<unsigned char> >="__begin_"*"__end_"*"__end_cap_"{__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >="__value_"*}}
{vector<double, std::__1::allocator<double> >="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::__1::allocator<double> >="__value_"^d}}
{vector<std::__1::pair<unsigned long long, double>, std::__1::allocator<std::__1::pair<unsigned long long, double> > >="__begin_"^{pair<unsigned long long, double>}"__end_"^{pair<unsigned long long, double>}"__end_cap_"{__compressed_pair<std::__1::pair<unsigned long long, double> *, std::__1::allocator<std::__1::pair<unsigned long long, double> > >="__value_"^{pair<unsigned long long, double>}}}
@64@0:8q16q24@32@40@48@56
@"<MTLDevice>"
^{Metadata=^^?{InternalMetadataWithArenaLite=^v}{MapFieldLite<google::protobuf::internal::MapEntryLite<std::__1::basic_string<char>, std::__1::basic_string<char>, google::protobuf::internal::WireFormatLite::TYPE_STRING, google::protobuf::internal::WireFormatLite::TYPE_STRING, 0>, std::__1::basic_string<char>, std::__1::basic_string<char>, google::protobuf::internal::WireFormatLite::TYPE_STRING, google::protobuf::internal::WireFormatLite::TYPE_STRING, 0>=^{Arena}{Map<std::__1::basic_string<char>, std::__1::basic_string<char> >=^{Arena}i^{InnerMap}}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}i}24@0:8@16
^{ImageFeatureType=^^?{InternalMetadataWithArenaLite=^v}qqi(SizeFlexibilityUnion=^{ImageFeatureType_EnumeratedImageSizes}^{ImageFeatureType_ImageSizeRange})i[1I]}24@0:8@16
^{ArrayFeatureType=^^?{InternalMetadataWithArenaLite=^v}{RepeatedField<long long>=ii^{Rep}}ii(ShapeFlexibilityUnion=^{ArrayFeatureType_EnumeratedShapes}^{ArrayFeatureType_ShapeRange})i[1I]}24@0:8@16
^{DictionaryFeatureType=^^?{InternalMetadataWithArenaLite=^v}(KeyTypeUnion=^{Int64FeatureType}^{StringFeatureType})i[1I]}32@0:8@16^@24
^{SequenceFeatureType=^^?{InternalMetadataWithArenaLite=^v}^{SizeRange}(TypeUnion=^{Int64FeatureType}^{StringFeatureType})i[1I]}32@0:8@16^@24
^{FeatureType=^^?{InternalMetadataWithArenaLite=^v}B(TypeUnion=^{Int64FeatureType}^{DoubleFeatureType}^{StringFeatureType}^{ImageFeatureType}^{ArrayFeatureType}^{DictionaryFeatureType}^{SequenceFeatureType})i[1I]}32@0:8@16^@24
v40@0:8@16^{FeatureDescription=^^?{InternalMetadataWithArenaLite=^v}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{FeatureType}i}24^@32
^{ModelDescription=^^?{InternalMetadataWithArenaLite=^v}{RepeatedPtrField<CoreML::Specification::FeatureDescription>=^{Arena}ii^{Rep}}{RepeatedPtrField<CoreML::Specification::FeatureDescription>=^{Arena}ii^{Rep}}{RepeatedPtrField<CoreML::Specification::FeatureDescription>=^{Arena}ii^{Rep}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{Metadata}i}32@0:8@16^@24
B40@0:8@16^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}24^@32
@56@0:8@16q24@?32@40^@48
@"MLPipeline"
@32@0:8r^{VisionFeaturePrint=^^?{InternalMetadataWithArenaLite=^v}(VisionFeaturePrintTypeUnion=^{VisionFeaturePrint_Scene})i[1I]}16^@24
@52@0:8@16@24i32@36^@44
@32@0:8@16Q24
@44@0:8^{__CVBuffer=}16@24c32^@36
@"MLAppleImageFeatureExtractorParameters"
B40@0:8^@16@24@32
v48@0:8@16@24@32^@40
v48@0:8@"<MLFeatureProvider>"16@"<MLFeatureProvider>"24@"MLSupervisedOnlineUpdateOptions"32^@40
^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}24@0:8^@16
B32@0:8^@16@24
c24@0:8Q16
@104@0:8@16q24@32@40@48@56@64@72@80@88@96
@40@0:8@16q24@32
{shared_ptr<CoreML::BayesianProbitRegression::FeatureValues>=^{FeatureValues}^{__shared_weak_count}}32@0:8@16^@24
@24@0:8^{Prediction=dddddB}16
d40@0:8@16@24q32
d24@0:8@16
B48@0:8@16^B24^d32^@40
v40@0:8@16@24^@32
{shared_ptr<CoreML::BayesianProbitRegression::BayesianProbitRegression>=^{BayesianProbitRegression}^{__shared_weak_count}}16@0:8
{shared_ptr<CoreML::BayesianProbitRegression::BayesianProbitRegression>="__ptr_"^{BayesianProbitRegression}"__cntrl_"^{__shared_weak_count}}
@24@0:8r^{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}16
{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}24@0:8@16
@40@0:8@16q24^@32
@64@0:8^v16@24q32@40@?48^@56
v32@0:8@16Q24
v32@0:8@16q24
Q24@0:8@16
^{MultiArrayBuffer=^^?{shared_ptr<unsigned char>=*^{__shared_weak_count}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}iQS}
c24@0:8q16
^d16@0:8
i24@0:8q16
c40@0:8@16q24^@32
c40@0:8@16Q24^@32
@"MLMultiArray"
c32@0:8@16@24
v48@0:8@16@24^@32^@40
@52@0:8@16@24@32c40^@44
@44@0:8@16@24c32^@36
@40@0:8^d16Q24^@32
{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >="__begin_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}"__end_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}"__end_cap_"{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >="__value_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}
{vector<long long, std::__1::allocator<long long> >="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long long *, std::__1::allocator<long long> >="__value_"^q}}
#20@0:8i16
#24@0:8i16c20
@40@0:8^{_MLModelSpecification=}16@24^@32
@"<MLModeling>"40@0:8^{_MLModelSpecification=}16@"MLModelConfiguration"24^@32
@104@0:8Q16@24@32@40@48@56@64@72@80@88^@96
@96@0:8Q16@24@32@40@48@56@64@72@80^@88
@"MLAppleWordTaggerParameters"
c40@0:8^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@24^@32
c48@0:8^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@24@32^@40
@64@0:8@16@24@32^{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}40@48^@56
{vector<std::__1::pair<unsigned long, float>, std::__1::allocator<std::__1::pair<unsigned long, float> > >=^{pair<unsigned long, float>}^{pair<unsigned long, float>}{__compressed_pair<std::__1::pair<unsigned long, float> *, std::__1::allocator<std::__1::pair<unsigned long, float> > >=^{pair<unsigned long, float>}}}24@0:8@16
v32@0:8^@16^{vector<std::__1::pair<unsigned long, float>, std::__1::allocator<std::__1::pair<unsigned long, float> > >=^{pair<unsigned long, float>}^{pair<unsigned long, float>}{__compressed_pair<std::__1::pair<unsigned long, float> *, std::__1::allocator<std::__1::pair<unsigned long, float> > >=^{pair<unsigned long, float>}}}24
v56@0:8^@16^@24{vector<std::__1::pair<unsigned long, float>, std::__1::allocator<std::__1::pair<unsigned long, float> > >=^{pair<unsigned long, float>}^{pair<unsigned long, float>}{__compressed_pair<std::__1::pair<unsigned long, float> *, std::__1::allocator<std::__1::pair<unsigned long, float> > >=^{pair<unsigned long, float>}}}32
@"MLParameterContainer"
@"<MLNearestNeighborsIndex>"
v36@0:8r^{RepeatedPtrField<CoreML::Specification::Model>=^{Arena}ii^{Rep}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24c32
v32@0:8r^{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24
@52@0:8r^{Pipeline=^^?{InternalMetadataWithArenaLite=^v}{RepeatedPtrField<CoreML::Specification::Model>=^{Arena}ii^{Rep}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}i}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24@32c40^@44
@32@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16Q24
@64@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@24@32@40@48^@56
v32@0:8Q16@24
@48@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@24@32^@40
@40@0:8@16Q24^@32
@"MLShufflingBatchProvider"
@80@0:8@16@24@32@40@48@56@64@72
@"MLFeatureValue"
@32@0:8@"NSDictionary"16^@24
c32@0:8@"NSArray"16^@24
@"NSArray"32@0:8@"NSArray"16^@24
c40@0:8@"NSArray"16@"NSArray"24^@32
c48@0:8@"<MTLCommandBuffer>"16@"NSArray"24@"NSArray"32^@40
@28@0:8@16c24
i24@0:8*16
v32@0:8^v16Q24
v40@0:8@16@24@32
@"NSArray"32@0:8@"NSArray"16@"NSDictionary"24
@24@0:8@"NSDictionary"16
v32@0:8@"NSArray"16@"NSArray"24
v40@0:8@"<MTLCommandBuffer>"16@"NSArray"24@"NSArray"32
@"NSArray"24@0:8@"NSArray"16
@"NSObject<MLCustomLayer>"
v24@0:8r^{LinkedModelFile=^^?{InternalMetadataWithArenaLite=^v}^{StringParameter}^{StringParameter}i}16
v64@0:8^f16^f24Q32r^f40r^Q48Q56
v40@0:8r^f16^Q24Q32
f16@0:8
v20@0:8f16
{_KDBoundingBox={vector<_KDInterval, std::__1::allocator<_KDInterval> >=^{_KDInterval}^{_KDInterval}{__compressed_pair<_KDInterval *, std::__1::allocator<_KDInterval> >=^{_KDInterval}}}Q}16@0:8
v48@0:8{_KDBoundingBox={vector<_KDInterval, std::__1::allocator<_KDInterval> >=^{_KDInterval}^{_KDInterval}{__compressed_pair<_KDInterval *, std::__1::allocator<_KDInterval> >=^{_KDInterval}}}Q}16
@"_KDNode"
{_KDBoundingBox="_intervals"{vector<_KDInterval, std::__1::allocator<_KDInterval> >="__begin_"^{_KDInterval}"__end_"^{_KDInterval}"__end_cap_"{__compressed_pair<_KDInterval *, std::__1::allocator<_KDInterval> >="__value_"^{_KDInterval}}}"_numDimensions"Q}
@48@0:8^{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}16Q24Q32^@40
@40@0:8^{_KDBoundingBox={vector<_KDInterval, std::__1::allocator<_KDInterval> >=^{_KDInterval}^{_KDInterval}{__compressed_pair<_KDInterval *, std::__1::allocator<_KDInterval> >=^{_KDInterval}}}Q}16Q24Q32
{vector<std::__1::pair<unsigned long, float>, std::__1::allocator<std::__1::pair<unsigned long, float> > >=^{pair<unsigned long, float>}^{pair<unsigned long, float>}{__compressed_pair<std::__1::pair<unsigned long, float> *, std::__1::allocator<std::__1::pair<unsigned long, float> > >=^{pair<unsigned long, float>}}}40@0:8Q16Q24r^{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}32
v48@0:8Q16^{_KDPriorityQueue=Q{priority_queue<_KDPriorityQueueElement, std::__1::vector<_KDPriorityQueueElement, std::__1::allocator<_KDPriorityQueueElement> >, _KDPriorityQueueComparator>={vector<_KDPriorityQueueElement, std::__1::allocator<_KDPriorityQueueElement> >=^{_KDPriorityQueueElement}^{_KDPriorityQueueElement}{__compressed_pair<_KDPriorityQueueElement *, std::__1::allocator<_KDPriorityQueueElement> >=^{_KDPriorityQueueElement}}}{_KDPriorityQueueComparator=}}}24r^{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}32@40
{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__value_"^Q}}
{vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >="__begin_"^{pair<unsigned long, unsigned long>}"__end_"^{pair<unsigned long, unsigned long>}"__end_cap_"{__compressed_pair<std::__1::pair<unsigned long, unsigned long> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >="__value_"^{pair<unsigned long, unsigned long>}}}
d16@0:8
v24@0:8d16
@"MLNonMaximumSuppressionParameters"
c32@0:8q16^@24
c48@0:8@16c24c28@32^@40
@"MLMultiArrayShapeConstraint"
@72@0:8@16@24@32@40@48@56@64
@"MLSVREngine"
@48@0:8@16@24B32B36^@40
@52@0:8@16@24B32B36B40^@44
@"MLNeuralNetworkEngine"
@44@0:8@16q24c32@36
@"MLMultiArrayConstraint"
@"MLImageConstraint"
@"MLDictionaryConstraint"
@"MLSequenceConstraint"
@"MLSVMEngine"
c52@0:8@16c24^@28^@36^@44
c56@0:8@16@24^@32^@40^@48
v24@0:8^d16
@40@0:8r^@16r^@24Q32
{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16@0:8
v40@0:8{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16
{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
{map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >={__tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true> >=Q}}}16@0:8
v40@0:8{map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >={__tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true> >=Q}}}16
{map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >="__tree_"{__tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true> >="__value_"Q}}}
@24@0:8^{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16
{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, long> >={__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, long>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}}16@0:8
v24@0:8{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, long> >={__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, long>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}}16
{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, long> >="__i_"{__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, long>="__ptr_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}}
@24@0:8^{map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >={__tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true> >=Q}}}16
{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, long> >={__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, long>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}}16@0:8
v24@0:8{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, long> >={__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, long>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}}16
{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, long> >="__i_"{__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, long>="__ptr_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}}
@64@0:8@16@24@32@40@48^@56
@72@0:8@16@24@32@40@48@56^@64
@80@0:8@16@24@32@40@48@56@64^@72
@28@0:8I16@20
@52@0:8^{__CVBuffer=}16q24@32c40^@44
Q24@0:8q16
^{__CVBuffer=}88@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32Q64@72^@80
^{__CVBuffer=}88@0:8^{CGImage=}16@24{CGRect={CGPoint=dd}{CGSize=dd}}32Q64@72^@80
^?16@0:8
@"<MLFeatureProvider>"
@64@0:8Q16@24@32@40@48^@56
@"MLAppleWordEmbeddingParameters"
{vector<std::__1::vector<double, std::__1::allocator<double> >, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >="__begin_"^{vector<double, std::__1::allocator<double> >}"__end_"^{vector<double, std::__1::allocator<double> >}"__end_cap_"{__compressed_pair<std::__1::vector<double, std::__1::allocator<double> > *, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >="__value_"^{vector<double, std::__1::allocator<double> >}}}
{shared_ptr<CoreML::Specification::Model>="__ptr_"^{Model}"__cntrl_"^{__shared_weak_count}}
B40@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
@24@0:8d16
@24@0:8^{__CVBuffer=}16
@40@0:8q16@24^@32
^{__CVBuffer=}16@0:8
@28@0:8^@16c24
@"NSObject<MLCustomLayer>"40@0:8@"NSString"16@"NSDictionary"24^@32
r^v32@0:8@16^@24
@40@0:8^v16@24^@32
@"MLModelInterface"
@"MLModelMetadata"
@88@0:8@16@24@32@40@48@56@64@72^@80
@56@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16#24@32@40^@48
@40@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
B40@0:8^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
B40@0:8^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}16^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
{_NSRange=QQ}24@0:8r^{SizeRange=^^?{InternalMetadataWithArenaLite=^v}Qqi}16
@24@0:8r^{FeatureDescription=^^?{InternalMetadataWithArenaLite=^v}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{FeatureType}i}16
@24@0:8r^{RepeatedPtrField<CoreML::Specification::FeatureDescription>=^{Arena}ii^{Rep}}16
B40@0:8@16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
@24@0:8^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}16
@28@0:8^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}16c24
q24@0:8@16
q32@0:8@16^@24
@40@0:8@16#24@32
c28@0:8I16Q20
@48@0:8q16q24Q32@40
@40@0:8q16q24Q32
@20@0:8I16
Q20@0:8I16
I16@0:8
@"MLImageSizeConstraint"
c48@0:8@16^d24Q32^@40
c64@0:8@16@24^d32Q40Q48^@56
@48@0:8^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}16c24c28Q32@40
^{svm_node=id}24@0:8Q16
v40@0:8^{svm_node=id}16^d24Q32
v24@0:8^{svm_node=id}16
v32@0:8@16^d24
^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}16@0:8
v24@0:8^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}16
^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}
@72@0:8@16@24c32c36@40@48@56@64
@80@0:8@16@24c32c36@40@48@56@64@72
@"NSMutableDictionary"
@40@0:8^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}16c24c28Q32
@"NSNumber"
@"NSSet"
d32@0:8@16^@24
d24@0:8^d16
v32@0:8^d16^d24
@48@0:8q16@24@32[1{__va_list_tag=II^v^v}]40
@40@0:8q16@24[1{__va_list_tag=II^v^v}]32
@40@0:8q16@24@32
@32@0:8q16@24
@40@0:8@16{_NSRange=QQ}24
{_NSRange=QQ}16@0:8
@"MLFeatureDescription"
{_NSRange="location"Q"length"Q}
B40@0:8^d16@24^@32
@"NSMutableArray"
@52@0:8i16@20@28@36@44
@60@0:8i16@20@28@36@44@52
@68@0:8i16@20@28@36@44@52@60
v32@0:8d16^d24
@32@0:8q16q24
@48@0:8{_NSRange=QQ}16{_NSRange=QQ}32
@40@0:8q16q24c32c36
Q40@0:8Q16{_NSRange=QQ}24
@60@0:8{_NSRange=QQ}16{_NSRange=QQ}32@48c56
@36@0:8@16@24c32
@48@0:8Q16@24@32@40
@48@0:8^v16Q24@32@40
@40@0:8^{__CVBuffer=}16@24^@32
@32@0:8{shared_ptr<Espresso::abstract_blob_container>=^{abstract_blob_container}^{__shared_weak_count}}16
{vImage_Buffer=^vQQQ}16@0:8
v48@0:8{vImage_Buffer=^vQQQ}16
{vector<std::__1::shared_ptr<unsigned char>, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}^{shared_ptr<unsigned char>}{__compressed_pair<std::__1::shared_ptr<unsigned char> *, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}}}16@0:8
v40@0:8{vector<std::__1::shared_ptr<unsigned char>, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}^{shared_ptr<unsigned char>}{__compressed_pair<std::__1::shared_ptr<unsigned char> *, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}}}16
{float_buffer_t=^fQB}16@0:8
v40@0:8{float_buffer_t=^fQB}16
{shared_ptr<Espresso::blob<float, 4> >=^{blob<float, 4>}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<Espresso::blob<float, 4> >=^{blob<float, 4>}^{__shared_weak_count}}16
{shared_ptr<Espresso::blob<float, 4> >="__ptr_"^{blob<float, 4>}"__cntrl_"^{__shared_weak_count}}
{vector<std::__1::shared_ptr<unsigned char>, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >="__begin_"^{shared_ptr<unsigned char>}"__end_"^{shared_ptr<unsigned char>}"__end_cap_"{__compressed_pair<std::__1::shared_ptr<unsigned char> *, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >="__value_"^{shared_ptr<unsigned char>}}}
{float_buffer_t="ptr"^f"size"Q"free_when_done"B}
{vImage_Buffer="data"^v"height"Q"width"Q"rowBytes"Q}
@48@0:8r^{unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16Q24Q32^@40
^f32@0:8Q16r^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}24
{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16@0:8
v56@0:8{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16
{unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16@0:8
v56@0:8{unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16
{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}16@0:8
v40@0:8{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}16
{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >="__table_"{__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >="__value_"f}}}
c40@0:8@"NSString"16@"ETDataTensor"24^@32
@"ETDataTensor"24@0:8@"NSString"16
@"<ETDataProvider>"32@0:8@"<ETDataProvider>"16^@24
c36@0:8@"NSString"16c24^@28
{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}24@0:8^@16
v24@0:8^@16
v40@0:8^{unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16@24^@32
v40@0:8r^{unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16r^{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}24^@32
@64@0:8@16@24@32@40Q48^@56
@40@0:8{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}16
c48@0:8@16Q24@32^@40
Q32@0:8Q16@24
@40@0:8Q16@24^@32
Q32@0:8@16^@24
{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}}16
{unordered_map<std::__1::basic_string<char>, unsigned long, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >="__table_"{__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::hash<std::__1::basic_string<char> >, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::equal_to<std::__1::basic_string<char> >, true> >="__value_"f}}}
@"ETVariablesDefinition"
{unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >="__table_"{__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true> >="__value_"f}}}
@"ETModelDefinition"
@"ETOptimizerDefinition"
@"ETTaskState"
{shared_ptr<Espresso::net>="__ptr_"^{net}"__cntrl_"^{__shared_weak_count}}
c24@0:8^{net={weak_ptr<Espresso::net>=^{net}^{__shared_weak_count}}{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}{vector<std::__1::shared_ptr<Espresso::layer>, std::__1::allocator<std::__1::shared_ptr<Espresso::layer> > >=^{shared_ptr<Espresso::layer>}^{shared_ptr<Espresso::layer>}{__compressed_pair<std::__1::shared_ptr<Espresso::layer> *, std::__1::allocator<std::__1::shared_ptr<Espresso::layer> > >=^{shared_ptr<Espresso::layer>}}}{unordered_map<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > >={__hash_table<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::hash<unsigned long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::equal_to<unsigned long>, true> >=f}}}{unordered_map<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > >={__hash_table<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::hash<unsigned long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::equal_to<unsigned long>, true> >=f}}}{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}iB{network_shape={map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<std::__1::basic_string<char>, Espresso::vimage2espresso_param, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::vimage2espresso_param> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, Espresso::vimage2espresso_param>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::vimage2espresso_param>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Espresso::vimage2espresso_param> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Espresso::vimage2espresso_param>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::vimage2espresso_param>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, Espresso::blob_numerical_properties>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::blob_numerical_properties>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Espresso::blob_numerical_properties> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Espresso::blob_numerical_properties>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::blob_numerical_properties>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<Espresso::platform, std::__1::map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > >, std::__1::less<Espresso::platform>, std::__1::allocator<std::__1::pair<const Espresso::platform, std::__1::map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > > > > >={__tree<std::__1::__value_type<Espresso::platform, std::__1::map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > > >, std::__1::__map_value_compare<Espresso::platform, std::__1::__value_type<Espresso::platform, std::__1::map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > > >, std::__1::less<Espresso::platform>, true>, std::__1::allocator<std::__1::__value_type<Espresso::platform, std::__1::map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<Espresso::platform, std::__1::map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<Espresso::platform, std::__1::__value_type<Espresso::platform, std::__1::map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > > >, std::__1::less<Espresso::platform>, true> >=Q}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}iB{map<int, bool, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, bool> > >={__tree<std::__1::__value_type<int, bool>, std::__1::__map_value_compare<int, std::__1::__value_type<int, bool>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, bool>, std::__1::less<int>, true> >=Q}}}{shared_ptr<Espresso::net_compiler>=^{net_compiler}^{__shared_weak_count}}{shared_ptr<Espresso::cv_pixel_buffer_io>=^{cv_pixel_buffer_io}^{__shared_weak_count}}B{shared_ptr<Espresso::blob_storage_abstract>=^{blob_storage_abstract}^{__shared_weak_count}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{shared_ptr<Espresso::kernels_validation_status_t>=^{kernels_validation_status_t}^{__shared_weak_count}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{map<std::__1::basic_string<char>, Espresso::net_configuration, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::net_configuration> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, Espresso::net_configuration>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::net_configuration>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Espresso::net_configuration> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Espresso::net_configuration>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::net_configuration>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{net_configuration={vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}{unordered_set<std::__1::shared_ptr<Espresso::abstract_blob_container>, std::__1::hash<std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::equal_to<std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::allocator<std::__1::shared_ptr<Espresso::abstract_blob_container> > >={__hash_table<std::__1::shared_ptr<Espresso::abstract_blob_container>, std::__1::hash<std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::equal_to<std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::allocator<std::__1::shared_ptr<Espresso::abstract_blob_container> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<std::__1::shared_ptr<Espresso::abstract_blob_container> > >=Q}{__compressed_pair<float, std::__1::equal_to<std::__1::shared_ptr<Espresso::abstract_blob_container> > >=f}}}{unordered_map<unsigned long, Espresso::net::basic_block_t, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, Espresso::net::basic_block_t> > >={__hash_table<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, std::__1::hash<unsigned long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, std::__1::equal_to<unsigned long>, true> >=f}}}{unordered_map<std::__1::basic_string<char>, unsigned long, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{shared_ptr<Espresso::abstract_interpreter_t>=^{abstract_interpreter_t}^{__shared_weak_count}}{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{unordered_map<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{weak_ptr<Espresso::net>=^{net}^{__shared_weak_count}}{shared_ptr<Espresso::per_network_phi_state_t>=^{per_network_phi_state_t}^{__shared_weak_count}}{unordered_map<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result>, std::__1::hash<std::__1::type_index>, std::__1::equal_to<std::__1::type_index>, std::__1::allocator<std::__1::pair<const std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> > > >={__hash_table<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, std::__1::__unordered_map_hasher<std::__1::type_index, std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, std::__1::hash<std::__1::type_index>, true>, std::__1::__unordered_map_equal<std::__1::type_index, std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, std::__1::equal_to<std::__1::type_index>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::type_index, std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, std::__1::hash<std::__1::type_index>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::type_index, std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, std::__1::equal_to<std::__1::type_index>, true> >=f}}}{shared_ptr<Espresso::net_fast_reshaper>=^{net_fast_reshaper}^{__shared_weak_count}}{unordered_map<std::__1::basic_string<char>, unsigned long, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}^{abstract_espresso_plan}i{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}QB{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}}16
v24@0:8#16
@"EspressoBrickTensorShape"
^f16@0:8
v24@0:8^f16
@"<MTLTexture>"
@24@0:8^{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16
@32@0:8{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}}16
{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16@0:8
v56@0:8{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16
{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >="__table_"{__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >="__value_"f}}}
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
