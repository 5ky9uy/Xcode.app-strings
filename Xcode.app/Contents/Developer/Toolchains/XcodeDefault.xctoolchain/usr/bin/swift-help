swift_help
SwiftHelp
CodingKeys
Subcommand
HelpTopic
__sFILE
OSSignpostType
Nos_signpost_type_t
FileAttributeKey
NNSFileAttributeKey
OSLogType
Nos_log_type_t
FileAttributeType
NNSFileAttributeType
Foundation
__sbuf
TSCBasic
ByteString
TSCBasic
CStringArray
TSCBasic
CacheableSequence
CacheableSequenceIterator
TSCBasic
Closable
TSCBasic
CodableResult
CodingKeys
TSCBasic
Condition
TSCBasic
DeltaAlgorithm
DiagnosticsEngine
TSCBasic
DiagnosticData
DiagnosticLocation
Diagnostic
Behavior
Message
StringDiagnostic
UnknownLocation
TSCBasic
FileInfo
CodingKeys
TSCBasic
FileSystemError
Kind
FileMode
Option
FileSystem
LocalFileSystem
InMemoryFileSystem
Node
DirectoryContents
RerootedFileSystemView
NodeContents
WeakReference
TSCBasic
GraphError
TSCBasic
HashAlgorithm
SHA256
CryptoKitSHA256
TSCBasic
JSON
JSONSerializable
JSONDecodingError
TSCBasic
JSONMappable
MapError
TSCBasic
KeyedPair
TSCBasic
LazyCache
TSCBasic
Lock
FileLock
LockType
ProcessLockError
TSCBasic
OSLog
OSLogType
OSSignpostType
OSSignpostID
TSCBasic
ObjectIdentifierProtocol
TSCBasic
OrderedDictionary
TSCBasic
OrderedSet
TSCBasic
AbsolutePath
RelativePath
Path
PathValidationError
UNIXPath
TSCBasic
RecursibleDirectoryContentsGenerator
TSCBasic
ProcessResult
Error
ExitStatus
Process
OutputRedirection
TSCBasic
ProcessEnv
TSCBasic
ProcessSetError
ProcessSet
TSCBasic
RegEx
TSCBasic
StringError
CodingKeys
TSCBasic
SortedArray
TSCBasic
LocalizedJoinType
TSCBasic
SynchronizedQueue
Node
TSCBasic
TempFileError
TemporaryFile
MakeDirectoryError
TSCBasic
TerminalController
TerminalType
Color
TSCBasic
Thread
ThreadImpl
TSCBasic
ByteStreamable
WritableByteStream
_WritableByteStreamBase
ThreadSafeOutputByteStream
Format
BufferedOutputByteStream
FileOutputByteStream
LocalFileOutputByteStream
TransformedSeparatedListStreamable
SeparatedListStreamable
JSONEscapedTransformedStringListStreamable
JSONEscapedDictionaryStreamable
JSONEscapedStringListStreamable
JSONEscapedStringStreamable
JSONEscapedDoubleStreamable
JSONEscapedIntStreamable
JSONEscapedBoolStreamable
RepeatingStringStreamable
TSCBasic
CodableRange
SystemError
CodingKeys
<self>
TSCUtility
Archiver
ZipArchiver
indexstore_functions_t
CFRunLoop
NCFRunLoopRef
indexstore_unit_dependency_kind_t
indexstore_symbol_subkind_t
indexstore_symbol_kind_t
indexstore_symbol_language_t
indexstore_unit_event_listen_options_t
indexstore_unit_event_kind_t
indexstore_string_ref_t
TSCUtility
ArgumentParserError
ArgumentConversionError
Shell
ShellCompletion
ArgumentKind
StringEnumArgument
PathArgument
ArrayParsingStrategy
ArgumentProtocol
ArgumentKindTy
OptionArgument
PositionalArgument
AnyArgument
ArgumentParserProtocol
ArgumentParser
Result
ArgumentBinder
Parser
Error
Cursor
TSCUtility
Bits
TSCUtility
Bitcode
BitcodeElement
Block
Record
Payload
BlockInfo
Signature
BitstreamVisitor
Bitstream
Abbreviation
Operand
BlockInfoCode
BlockID
AbbreviationID
BitcodeError
Error
TSCUtility
BitstreamReader
TSCUtility
BitstreamWriter
BlockInfo
RecordBuffer
Block
TSCUtility
BuildFlags
CodingKeys
TSCUtility
DiagnosticDataConvertible
DiagnosticLocationProviding
AnyDiagnostic
PackageLocation
Local
Remote
Diagnostics
TSCUtility
DownloaderError
Downloader
FoundationDownloader
Download
TSCUtility
FSWatch
_FileWatcher
FSEventStreamDelegate
FSEventStream
Error
_WatcherDelegate
TSCUtility
TSCUtility
IndexStore
TestCaseClass
IndexStoreAPI
IndexStoreImpl
IndexStoreAPIImpl
TestCaseBuilder
TSCUtility
InterruptHandler
TSCUtility
JSONMessageStreamingParserDelegate
Message
JSONMessageStreamingParser
State
ParsingError
TSCUtility
AuthorizationProviding
Netrc
Error
Machine
TSCUtility
SignpostName
TSCUtility
PersistentCacheProtocol
SQLiteBackedPersistentCache
TSCUtility
PkgConfigError
PCFileFinder
LoadingContext
PkgConfig
PkgConfigParser
TSCUtility
Platform
LinuxFlavor
TSCUtility
PolymorphicCodableProtocol
PolymorphicCodable
PolymorphicCodableArray
CodingKeys
 @t~
TSCUtility
ProgressAnimationProtocol
SingleLinePercentProgressAnimation
MultiLineNinjaProgressAnimation
RedrawingNinjaProgressAnimation
NinjaProgressAnimation
MultiLinePercentProgressAnimation
RedrawingLitProgressAnimation
PercentProgressAnimation
DynamicProgressAnimation
TSCUtility
SQLite
Configuration
Location
SQLiteValue
Column
PreparedStatement
CallbackWrapper
Errors
TSCUtility
SerializedDiagnostics
Error
Diagnostic
Level
SourceLocation
FixIt
TSCUtility
SimplePersistanceProtocol
SimplePersistence
Error
TSCUtility
TracingEventType
TracingEventProtocol
TracingCollectionProtocol
TracingEvent
TracingCollection
CodingKeys
TSCUtility
Triple
Error
Arch
Vendor
CodingKeys
TSCUtility
TSCUtility
Verbosity
TSCUtility
Version
TSCUtility
SwiftVersion
Versioning
TSCUtility
DLHandle
DLOpenFlags
DLError
<path>
<path>
<api|abi>
<path>
<path>
<path>
<line>
<macro>
<style>
<path>
<path>
<path>
<path>
<dir>
Emit a TBD file
<enforcement>
<string>
<path>
<path>
<path>
Immediate mode
<level>
<n:n>
<locale-code>
<path>
<location>
<level>
<name>
<dir>
<file>
<vers>
<triple>
<profdata>
<target>
<type>
<check>
<regex>
<format>
<sdk>
<path>
<50>
<250>
<mode>
<vers>
<triple>
<version>
<directory>
<module-name>
<type>
<path>
<arg>
<arg>
<arg>
SwiftOptions
DriverKind
SwiftOptions
OptionAttributes
Option
Kind
SwiftOptions
OptionParseError
SwiftOptions
OptionTable
Group
SwiftOptions
ParsedOption
Argument
ParsedOptions
SwiftOptions
PrefixTrie
Node
DOTWriter
@help
ArgumentParser
CompletionShell
ArgumentParser
Argument
ArgumentArrayParsingStrategy
ArgumentParser
ArgumentHelp
ArgumentParser
CompletionKind
Kind
ArgumentParser
ValidationError
ExitCode
CleanExit
ArgumentParser
Flag
FlagInversion
FlagExclusivity
ArgumentParser
NameSpecification
Element
ArgumentParser
Option
SingleValueParsingStrategy
ArrayParsingStrategy
ArgumentParser
OptionGroup
ArgumentParser
CommandConfiguration
ArgumentParser
EnumerableFlag
ArgumentParser
ExpressibleByArgument
ArgumentParser
ParsableArguments
ArgumentSetProvider
StandardError
_WrappedParsableCommand
CodingKeys
ArgumentParser
ParsableArgumentsValidator
ParsableArgumentsValidatorError
ArgumentParser
ParsableCommand
ArgumentParser
ArgumentDecoder
ParsedArgumentsContainer
ArrayWrapperProtocol
DecodedArguments
SingleValueDecoder
ArrayWrapper
UnkeyedContainer
SingleValueContainer
Error
ArgumentParser
ArgumentHelpOptionProvider
Help
Update
Kind
ArgumentDefinition
ParsingStrategy
Options
ArgumentParser
ArgumentSet
ArgumentParser
CommandError
AutodetectedGenerateCompletions
GenerateCompletions
HelpRequested
CodingKeys
ArgumentParser
InputOrigin
Element
ArgumentParser
Name
ArgumentParser
ParsedWrapper
Value
DecodableParsedWrapper
Parsed
ArgumentParser
ParsedValues
Element
InputKey
ArgumentParser
ParserError
InternalParseError
InputIndex
ArgumentParser
ParsedArgument
Value
Element
Index
SplitArguments
SubIndex
ArgumentParser
HelpCommand
CodingKeys
Element
ArgumentParser
HelpGenerator
Section
DiscussionSection
Usage
Header
ArgumentParser
MessageInfo
ArgumentParser
Tree
InitializationError
__swift5_proto
build
package
test
swift_help/main.swift
cannot find subcommand executable '
SUBCOMMANDS (swift <subcommand> [arguments]):
SwiftPM - Build and run tests
  Use "swift help <subcommand>" for more information about a subcommand
SwiftPM - Build and run an executable product
SwiftPM - Perform operations on Swift packages
SwiftPM - Build sources into binary products
List hidden (unsupported) options
OS_dispatch_queue
org.swift.swiftpm.process
org.swift.swiftpm.process-set
org.swift.swiftpm.basic.stream
success
failure
lowerBound
upperBound
TSCBasic/Base64URL.swift
can't appear here (left=
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_
_TtC8TSCBasic12CStringArray
cArray
items
index
sequence
Did not find a matching key
key value 
DiagnosticsEngine-callback
_TtC8TSCBasic17DiagnosticsEngine
handlerQueue
_diagnostics
handlers
defaultLocation
_TtC8TSCBasic15UnknownLocation
posixPermissions
TSCBasic/FileSystem.swift
homeDirectory on RerootedFileSystemView is not supported.
cachesDirectory on RerootedFileSystemView is not supported.
_TtC8TSCBasicP33_DA6B485C7A646531CFCACE37CF46BC6B15LocalFileSystem
_TtC8TSCBasic18InMemoryFileSystem
root
lock
lockFiles
lockFilesLock
_TtCC8TSCBasic18InMemoryFileSystemP33_DA6B485C7A646531CFCACE37CF46BC6B4Node
_TtCC8TSCBasic18InMemoryFileSystemP33_DA6B485C7A646531CFCACE37CF46BC6B17DirectoryContents
entries
_TtC8TSCBasic22RerootedFileSystemView
underlyingFileSystem
org.swift.swiftpm.in-memory-file-system.file-queue
TSCBasic/JSON.swift
unexpected object: 
expected array, got 
expected dictionary, got 
expected double, got 
expected bool, got 
expected string, got 
expected int, got 
_TtC8TSCBasic8FileLock
fileDescriptor
lockFile
OS_os_log
_TtC8TSCBasic5OSLog
storage
TSCBasic/OSLog.swift
invalid relative path '
'; relative path should not begin with '/' or '~'
invalid absolute path '
'; absolute path must begin with '/'
_TtC8TSCBasic36RecursibleDirectoryContentsGenerator
current
towalk
shouldRecurse
workingDirectory is not supported in this platform
could not find executable for '
illegal UTF8 sequence output
_TtC8TSCBasic7Process
verbose
arguments
environment
workingDirectory
processID
launched
outputRedirection
_result
stdout
stderr
serialQueue
startNewProcessGroup
org.swift.swiftpm.process.findExecutable
<ProcessResult: exit: 
_TtC8TSCBasic10ProcessSet
processes
cancelled
killTimeout
killingCondition
shouldKill
head
tail
notEmptyCondition
value
next
<TemporaryFile: 
_TtC8TSCBasic18TerminalController
width
clearLineString
resetString
boldString
_TtC8TSCBasic6Thread
finishedCondition
isFinished
_TtC8TSCBasicP33_BD395E1927AAEA716B9FD4CEF0145B0F10ThreadImpl
v16@0:8
@24@0:8@?16
@16@0:8
task
TSCBasic.ThreadImpl
v8@?0
TSCBasic/WritableByteStream.swift
Subclasses must implement this
_TtC8TSCBasic23_WritableByteStreamBase
_buffered
_buffer
_TtC8TSCBasic26ThreadSafeOutputByteStream
_TtC8TSCBasic24BufferedOutputByteStream
contents
_TtC8TSCBasic20FileOutputByteStream
_TtC8TSCBasic25LocalFileOutputByteStream
filePointer
error
closeOnDeinit
offset element 
fileCloseImpl() should be implemented by a subclass
org.swift.swiftpm.basic.thread-safe-output-byte-stream
TSCBasic/misc.swift
unsetenv error: 
posix_spawn error: 
strerror_r error: 
org.swift.swiftpm.
generate completion script for Bourne-again shell
generate completion script for Z shell
bash
GIT_TERMINAL_PROMPT
ssh -oBatchMode=yes
asyncBegin
asyncEnd
x86_64
x86_64h
i686
powerpc64le
s390x
aarch64
armv7
arm64
arm64e
wasm32
unknown
apple
darwin
macosx
linux
windows
wasi
android
expected single value for argument: 
expected arguments: 
unexpected argument 
; use --help to list available arguments
 requires a value; provide a value using '
; use --help to print usage
; use --help to list available options
' is not convertible to 
TSCUtility/ArgumentParser.swift
name
shortName
strategy
usage
completion
isOptional
_TtC10TSCUtility11AnyArgument
kind
isArray
parseClosure
_TtC10TSCUtility14ArgumentParser
subparsers
optionArguments
positionalArguments
commandName
overview
seeAlso
isSubparser
canAcceptPositionalArguments
_TtCC10TSCUtility14ArgumentParser6Result
results
parentResult
parser
subparser
bodies
POSITIONAL ARGUMENTS:
Display available options
Swift/x86_64-apple-macos.swiftinterface
Fatal error
Duplicate values for key: '
# Generates completions for 
# In the final compdef file, set the following file header:
#     #compdef 
#     local context state state_descr line
#     typeset -A opt_args
# Parameters
# - the start position of this parser; set to 1 if unknown
    if [[ $COMP_CWORD == $(($1+
    if [[ $COMP_CWORD == $1 ]]; then
        COMPREPLY=( $(compgen -W "
" -- $cur) )
        return
    fi
    case ${COMP_WORDS[$1]} in
 $(($1+1))
            return
        ;;
    COMPREPLY=( $(compgen -W "
" -- $cur) )
    case $prev in
            return
            _filedir
            return
            COMPREPLY=( $(compgen -W "
" -- $cur) )
            return
            return
() {
    arguments=(
    )
    _arguments $arguments && return
    case $state in
        (command)
            local modes
            modes=(
                '
            )
            _describe "mode" modes
            ;;
        (arg)
            case ${words[1]} in
                (
                    
                    ;;
            esac
            ;;
    esac
        '(-): :->command'
        '(-)*:: :->arg'
\[default: .+?\]
TSCUtility/ArgumentParserShellCompletion.swift
TSCUtility/BitstreamReader.swift
Unbalanced calls to shouldEnterBlock/didExitBlock
TSCUtility/BitstreamWriter.swift
unregistered abbreviation 
cannot emit a field as array or blob
invalid char6 value
lower upper 
endBlock() called with no block registered
_TtC10TSCUtility15BitstreamWriter
currentValue
currentBit
codeBitWidth
currentAbbreviations
blockScope
blockInfoRecords
currentBlockID
_TtCC10TSCUtility15BitstreamWriter9BlockInfo
abbrevs
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789._
cxxCompilerFlags
swiftCompilerFlags
TSCUtility/Context.swift
invalid status code 
TSCUtility.FoundationDownloader
init()
_TtC10TSCUtility20FoundationDownloader
session
downloads
queue
fileSystem
v56@0:8@16@24q32q40q48
v40@0:8@16@24@32
TSCUtility/Downloader.swift
download not found
org.swift.swiftpm.basic.foundation-downloader
NSURLSessionDownloadDelegate
v48@0:8@16@24q32q40
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
NSURLSessionTaskDelegate
v48@0:8@16@24@32@?40
v32@0:8@16@24
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
NSURLSessionDelegate
v24@0:8@16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
NSObject
c24@0:8@16
q16@0:8
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c16@0:8
c24@0:8#16
c24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
hash
Tq,N,R
superclass
T#,N,R
description
T@"NSString",N,R
debugDescription
c24@0:8@"Protocol"16
@"NSString"16@0:8
_TtC10TSCUtility7FSWatch
paths
_watcher
latency
_TtC10TSCUtility13FSEventStream
stream
thread
runLoop
callbacksQueue
org.swift.swiftpm.FSEventStream.callback)
check-ref-format
--allow-onelevel
_TtC10TSCUtility10IndexStore
_impl
_TtC10TSCUtility13IndexStoreAPI
_TtC10TSCUtilityP33_B71F9CA8B3630D7C545EABDE61C6A48F14IndexStoreImpl
store
instance
_TtC10TSCUtilityP33_B71F9CA8B3630D7C545EABDE61C6A48F17IndexStoreAPIImpl
path
dylib
_TtCFC10TSCUtilityP33_B71F9CA8B3630D7C545EABDE61C6A48F14IndexStoreImpl18getTestCaseClassesFzT9forRecordSS_GSaVCS_10IndexStore13TestCaseClass_L_15TestCaseBuilder
classToMethods
Unable to get description for error: 
indexstore_store_create
indexstore_store_get_unit_name_from_output_path
indexstore_unit_reader_create
indexstore_error_get_description
indexstore_unit_reader_dependencies_apply_f
indexstore_unit_reader_get_module_name
indexstore_unit_dependency_get_kind
indexstore_unit_dependency_get_name
indexstore_record_reader_create
indexstore_symbol_get_name
indexstore_symbol_get_properties
indexstore_symbol_get_kind
indexstore_record_reader_occurrences_apply_f
indexstore_occurrence_get_symbol
indexstore_occurrence_relations_apply_f
indexstore_symbol_relation_get_symbol
indexstore_symbol_relation_get_roles
Missing required symbol: 
Unable to open store at 
_TtC10TSCUtility16InterruptHandler
signalHandler
delegate
buffer
state
invalid UTF8 bytes
unexpected JSON message: 
TSCUtility/Netrc.swift
(?:\s*(?<default>default))
(?:\s*account\s+\S++)?
resolution
org.swift.swiftpm
database or disk is full
SELECT value FROM TSCCACHE WHERE key == ? LIMIT 1;
INSERT OR IGNORE INTO TSCCACHE VALUES (?, ?)
DELETE FROM TSCCACHE WHERE key == ?;
_TtC10TSCUtility27SQLiteBackedPersistentCache
    CREATE TABLE IF NOT EXISTS TSCCACHE (
        key BLOB PRIMARY KEY NOT NULL,
        value BLOB NOT NULL
    );
PRAGMA journal_mode=WAL;
prohibited flag(s): 
parsing error(s): 
couldn't find pc file for 
failed to retrieve search paths with pkg-config; maybe pkg-config is not installed
PKG_CONFIG_SYSROOT_DIR
Unexpected line: 
_TtC10TSCUtility14LoadingContext
pkgConfigStack
Requires.private
Expected version number after 
Text ended before matching quote was found in line: 
Expected a value for variable '
circular dependency detected while parsing 
/usr/local/lib/pkgconfig
/usr/local/share/pkgconfig
/usr/lib/pkgconfig
/usr/share/pkgconfig
/private/var/tmp
/etc/debian_version
/system/bin/toolbox
/system/bin/toybox
/etc/redhat-release
/etc/centos-release
/etc/fedora-release
/etc/system-release
Amazon Linux release 2
Unexpected Codable type code for concrete '
TSCUtility.NinjaProgressAnimation
init(stream:ttyTerminalAnimationFactory:dumbTerminalAnimationFactory:defaultAnimationFactory:)
TSCUtility.PercentProgressAnimation
_TtC10TSCUtility34SingleLinePercentProgressAnimation
header
displayedPercentages
hasDisplayedHeader
_TtC10TSCUtility31MultiLineNinjaProgressAnimation
lastDisplayedText
_TtC10TSCUtility31RedrawingNinjaProgressAnimation
terminal
hasDisplayedProgress
_TtC10TSCUtility22NinjaProgressAnimation
_TtC10TSCUtility33MultiLinePercentProgressAnimation
_TtC10TSCUtility29RedrawingLitProgressAnimation
_TtC10TSCUtility24PercentProgressAnimation
_TtC10TSCUtility24DynamicProgressAnimation
animation
_TtCV10TSCUtility6SQLiteP33_109A25FF5B7BF3DBF2E1AE12F2B8F1AD15CallbackWrapper
callback
Unable to open database at 
Unable to configure database: 
Unable to configure database busy timeout
PRAGMA max_page_count=
unable to restore state from 
unsupported schema version 
_TtC10TSCUtility17SimplePersistence
schemaVersion
supportedSchemaVersions
statePath
otherStatePaths
prettyPrint
_TtC10TSCUtility17TracingCollection
events
-print-target-info
unversionedTriple
TSCUtility/Triple.swift
WebAssembly/WASI doesn't support dynamic library yet
x86_64-apple-macosx
TSCUtility/Version.swift
contains(_:) is unavailable, use contains(version:)
Invalid version string 
 is not a valid version
Swift Package Manager - Swift 
_TtC10TSCUtility8DLHandle
rawValue
Ubuntu clang version 
swift
swiftc
Whether the API digester should run in API or ABI mode (defaults to API checking)
-digester-breakage-allowlist-path
The path to a list of permitted breaking changes the API digester should ignore
-serialize-breaking-changes-path
Serialize breaking changes found by the API digester to <path>
-compare-to-baseline-path
Compare the built module to the baseline at <path> and diagnose breaking changes using the API digester
-emit-digester-baseline-path
Emit a baseline file for the module to <path> using the API digester
-emit-digester-baseline
Emit a baseline file for the module using the API digester
-use-frontend-parseable-output
Emit parseable-output from swift-frontend jobs instead of from the driver
-no-emit-module-separately
Force using merge-module as the incremental build mode
-experimental-emit-module-separately
Emit module files as a distinct job
-driver-warn-unused-options
Emit warnings for any provided options which are unused by the driver
-nonlib-dependency-scanner
Use calls to `swift-frontend -scan-dependencies` instead of dedicated dependency scanning library
-experimental-explicit-module-build
Prebuild module dependencies to make them explicit
-driver-print-graphviz
Write the job graph as a graphviz file
' is not supported by '
'; did you mean to use '
missing argument value for '
unknown argument: '
SwiftOptions/PrefixTrie.swift
Impossible because we found a child with id 
OVERVIEW: Swift compiler
USAGE: 
<linker-specific options>
<swift debug/development internal options>
<swift internal options>
<debug info options>
<automatic crashing options>
<code formatting options>
<optimization level options>
DEBUG/DEVELOPMENT OPTIONS
Pass <arg> to LLVM.
Specifies an option which should be passed to the linker
Pass <arg> to the Swift frontend
Pass <arg> to Clang when it is use for linking.
Pass <arg> to the C/C++/Objective-C compiler
-working-directory=
-working-directory
Resolve file paths relative to the specified directory
-warnings-as-errors
Treat warnings as errors
-warn-swift3-objc-inference
-warn-swift3-objc-inference-minimal
Warn about deprecated @objc inference in Swift 3 based on direct uses of the Objective-C entrypoint
-warn-swift3-objc-inference-complete
Warn about deprecated @objc inference in Swift 3 for every declaration that will no longer be inferred as @objc in Swift 4
-warn-on-potentially-unavailable-enum-case
Downgrade potential unavailability of enum case to a warning
-warn-on-editor-placeholder
Downgrade the editor placeholder error to a warning
-warn-long-function-bodies=
-warn-long-function-bodies
Warns when type-checking a function takes longer than <n> ms
-warn-long-expression-type-checking=
-warn-long-expression-type-checking
-warn-implicit-overrides
Warn about implicit overrides of protocol members
-warn-concurrency
Warn about code that is unsafe according to the Swift Concurrency model and will become ill-formed in a future language version
Show commands to run and use verbose output
Add directory to VFS overlay file
Print version information and exit
Verify diagnostics against expected-{error|warning|note} annotations
-verify-type-layout
Verify compile-time and runtime type layout information for type
-verify-syntax-tree
Verify that no unknown nodes exist in the libSyntax tree
-verify-incremental-dependencies
Enable the dependency verifier for each frontend job
-verify-ignore-unknown
Allow diagnostics for '<unknown>' location in verify mode
-verify-generic-signatures
Verify the generic signatures in the given module
-verify-emitted-module-interface
Check that module interfaces emitted during compilation typecheck
-verify-debug-info
Verify the binary representation of debug output.
-verify-apply-fixes
Like -verify, but updates the original source file
-verify-all-substitution-maps
Verify all SubstitutionMaps on construction
-verify-additional-file
Verify diagnostics in this file in addition to source files
-value-recursion-threshold
Set the maximum depth for direct recursion in value types
-validate-tbd-against-ir=
Compare the symbols in the IR against the TBD file that would be generated.
-user-module-version
Module version specified from Swift module authors
Use tabs for indentation.
-use-static-resource-dir
Use resources in the static resource directory
Allocate internal data structures using malloc (for memory debugging)
Specifies the linker to be used
Register Objective-C classes as if the JIT were in use
--use-interface-for-module
Prefer loading these modules via interface
-use-interface-for-module
-use-clang-function-types
Use stored Clang function types for computing canonical types.
Update Swift code
-typo-correction-limit
Limit the number of times the compiler will attempt typo correction to <n>
Parse and type-check input file(s)
-typecheck-module-from-interface
Treat the (single) input as a swiftinterface and typecheck it
-type-info-dump-filter=
One of 'all', 'resilient' or 'fragile'
-track-system-dependencies
Track system dependencies while emitting Make-style dependencies
-trace-stats-events
Trace changes to stats in -stats-output-dir
-tools-directory
Look for external executables (ld, clang, binutils) in <directory>
-toolchain-stdlib-rpath
Add an rpath entry for the toolchain's standard library, rather than the OS's
-testable-import-module
Implicitly import the specified module with @testable
-tbd-is-installapi
If the TBD file should indicate it's being generated during InstallAPI
-tbd-install_name=
-tbd-install_name
The install_name to use in an emitted TBD file
-tbd-current-version=
-tbd-current-version
The current_version to use in an emitted TBD file
-tbd-compatibility-version=
-tbd-compatibility-version
The compatibility_version to use in an emitted TBD file
Generate code for the given target <triple>, such as x86_64-apple-macos10.9
Generate 'zippered' code for macCatalyst that can run on the specified variant target triple in addition to the main -target triple
-target-variant-sdk-version
The version of target variant SDK used for compilation
-target-sdk-version
The version of target SDK used for compilation
Generate code for a particular CPU variant
Width of tab character.
-switch-checking-invocation-threshold=
Interpret input according to a specific Swift language version number
Only include APIs defined from Swift source
-swift-ptrauth-mode
Mode for staging pointer authentication. Supported modes are LegacyAndStrip, NewAndStrip and NewAndAuth.
-swift-module-file
Specify Swift module explicitly built from textual interface
-swift-isa-ptrauth-mode
Mode for staging isa/super signing. Supported modes are LegacyAndStrip, NewAndStrip and NewAndAuth.
-suppress-warnings
Suppress all warnings
-suppress-static-exclusivity-swap
Suppress static violations of exclusive access with swap()
-supplementary-output-file-map
Specify supplementary outputs in a file rather than on the command line
-stats-output-dir
Directory to write unified compilation-statistics files to
Make this module statically linkable and make the output of -emit-library a static library.
Statically link the Swift standard library
-static-executable
Statically link the executable
-stack-promotion-limit
Limit the size of stack promoted objects to the provided number of bytes.
enable stack checking
-solver-shrink-unsolved-threshold
Set The upper bound to number of sub-expressions unsolved before termination of the shrink phrase
-solver-memory-threshold
Set the upper bound for memory consumption, in bytes, by the constraint solver
-solver-expression-time-threshold=
-solver-disable-shrink
Disable the shrink phase of expression type checking
-skip-synthesized-members
Skip members inherited through classes or default implementations
-sil-verify-none
Completely disable SIL verification
Verify SIL after each transform
-sil-unroll-threshold
Controls the aggressiveness of loop unrolling
-sil-stop-optzns-before-lowering-ownership
Stop optimizing at SIL time before we lower ownership from SIL. Intended only for SIL ossa tests
-sil-inline-threshold
Controls the aggressiveness of performance inlining
-sil-inline-caller-benefit-reduction-factor
Controls the aggressiveness of performance inlining in -Osize mode by reducing the base benefits of a caller (lower value permits more inlining!)
-sil-debug-serialization
Do not eliminate functions in Mandatory Inlining/SILCombine dead functions. (for debugging only)
-show-diagnostics-after-fatal
Keep emitting subsequent diagnostics after a fatal error
-serialize-parseable-module-interface-dependency-hashes
-serialize-module-interface-dependency-hashes
-serialize-diagnostics
Serialize diagnostics in a binary format
-serialize-diagnostics-path=
-serialize-diagnostics-path
Emit a serialized diagnostics file to <path>
-serialize-debugging-options
Always serialize options for debugging (default: only for apps)
Compile against <sdk>
-scan-dependencies
Scan dependencies of the given Swift sources
Save intermediate compilation results
-save-optimization-record
Generate a YAML optimization record file
-save-optimization-record=
Generate an optimization record file in a specific format (default: YAML)
-save-optimization-record-path
Specify the file name of any generated optimization record
-save-optimization-record-passes
Only include passes which match a specified regular expression inthe generated optimization record (by default, include all passes)
Turn on runtime checks for erroneous behavior.
-sanitize-recover=
Specify which sanitizer runtime checks (see -sanitize=) will generate instrumentation that allows error recovery. Listed checks should be comma separated. Default behavior is to not allow error recovery.
-sanitize-coverage=
Specify the type of coverage instrumentation for Sanitizers and additional options separated by commas
-sanitize-address-use-odr-indicator
When using AddressSanitizer enable ODR indicator globals to avoid false ODR violation reports in partially sanitized programs at the cost of an increase in binary size
-runtime-compatibility-version
Link compatibility library for Swift runtime version, or 'none'
Report performed transformations by optimization passes whose name matches the given POSIX regular expression
Report missed transformations by optimization passes whose name matches the given POSIX regular expression
-Rmodule-loading
Emit a remark and file path of each loaded module
-Rmodule-interface-rebuild
Emits a remark if an imported module needs to be re-compiled from its module interface
</usr/lib/swift>
The directory that holds the compiler resource files
-resolve-imports
Parse and resolve imports in input file(s)
-require-explicit-availability
Require explicit availability on public declarations
-require-explicit-availability-target
Suggest fix-its adding @available(<target>, *) to public declarations without availability
-report-errors-to-debugger
Deprecated, will be removed in future versions.
REPL mode (the default if there is no input file)
-remove-runtime-asserts
Remove runtime safety checks.
-read-legacy-type-info-path=
Read legacy type layout from the given path instead of default path
Emit a remark if a cross-import of a module is triggered.
--protocol-requirement-allow-list
File containing a new-line separated list of protocol names
-protocol-requirement-allow-list
Supply a profdata file to enable profile-guided optimization
-profile-stats-events
Profile changes to stats in -stats-output-dir
-profile-stats-entities
Profile changes to stats in -stats-output-dir, subdivided by source entity
-profile-generate
Generate instrumented code to collect execution counts
-profile-coverage-mapping
Generate coverage data for use with profiled execution counts
Print target information for the given target <triple>, such as x86_64-apple-macos10.9
Print various statistics
Print module names in diagnostics
-print-llvm-inline-tree
Print the LLVM inline tree.
-print-inst-counts
Before IRGen, count all the various SIL instructions. Must be used in conjunction with -print-stats.
-print-educational-notes
Include educational notes in printed diagnostic output, if available
-print-clang-stats
Print Clang importer statistics
Parse and type-check input file(s) and pretty print AST(s)
Produce output for this file, not the whole module
-primary-filelist
Specify primary inputs in a file rather than on the command line
-previous-module-installname-map-file
Path to a Json file indicating module name to installname map for @_originallyDefinedIn
Pretty-print the output JSON
-prespecialize-generic-metadata
Statically specialize metadata for generic types at types that are known to be used in source.
-prebuilt-module-cache-path=
-prebuilt-module-cache-path
Directory of prebuilt modules for loading module interfaces
Apply the playground semantics and transformation
-playground-high-performance
Omit instrumentation that has a high runtime performance impact
-placeholder-dependency-module-map-file
Specify a JSON file containing information of external Swift module dependencies
Directory to persist automatically created precompiled bridging headers
-pch-disable-validation
Disable validating the persistent PCH
Apply the 'program counter simulation' macro
Parse input file(s)
-parseable-output
Emit textual output in a parseable format
Parse the input file(s) as the Swift standard library
Parse the input file as SIL code, not Swift source
-parse-as-library
Parse the input file(s) as libraries, not scripts
-package-description-version
The version number to be applied on the input for the PackageDescription availability kind
Write output to <file>
Compile with optimizations
-output-filelist
Specify outputs in a file rather than on the command line
-output-file-map=
-output-file-map
A file which specifies the location of outputs
Output directory
Compile with optimizations and remove runtime safety checks
Compile with optimizations and target small code size
Compile with optimizations appropriate for a playground
Compile without any optimization
-only-use-extra-clang-opts
Options passed via -Xcc are sufficient for Clang configuration
Enable multi-threading and specify number of threads
Don't search the standard library import path for modules
-no-whole-module-optimization
Disable optimizing input files together instead of individually
-no-warnings-as-errors
Don't treat warnings as errors
-no-verify-emitted-module-interface
Don't check that module interfaces emitted during compilation typecheck
-no-toolchain-stdlib-rpath
Do not add an rpath entry for the toolchain's standard library (default)
-no-stdlib-rpath
Don't add any rpath entries.
-no-static-stdlib
Don't statically link the Swift standard library
-no-static-executable
Don't statically link the executable
disable stack checking
-no-serialize-debugging-options
Never serialize options for debugging (default: only for apps)
-no-link-objc-runtime
Don't link in additions to the Objective-C runtime
-no-color-diagnostics
Do not print diagnostics in color
-no-clang-module-breadcrumbs
Don't emit DWARF skeleton CUs for imported Clang modules. Use this when building a redistributable static archive.
-new-driver-path
Path of the new driver to be used
Names of modules
Name of the module to build
-module-list-file
File containing a new-line separated list of modules
-module-link-name=
-module-link-name
Library to link against when using this module
-module-interface-preserve-types-as-written
When emitting a module interface, preserve types as they were written in the source
-module-cache-path
Specifies the Clang module cache path
-module-abi-name
ABI name to use for the contents of this module
-minimum-access-level
Include symbols with this access level or more
Dump Json suitable for generating migration script
-migrator-update-swift
Does nothing. Temporary compatibility flag for Xcode.
-migrator-update-sdk
-migrate-keep-objc-visibility
When migrating, add '@objc' to declarations that would've been implicitly visible in Swift 3
Merge the input modules without otherwise processing them
Specifies a library which should be linked against
Specify the LTO type to either 'llvm-thin' or 'llvm-full'
Filter nodes with the given location.
-localization-path
Path to localized diagnostic messages directory
Choose a language for diagnostic messages
LLDB-enhanced REPL mode
-link-objc-runtime
<start line>:<end line>. Formats a range of lines (1-based). Can only be used with one input file.
Library distribution level 'api', 'spi' or 'other' (the default)
libc runtime library to use
Add directory to library link search path
Number of commands to execute in parallel
Print output in JSON format.
JIT compilation mode
-irgen-always-use-indirect-relative-references
Always emit indirectable relative references as indirect
The SDK contents under comparison
-index-unit-output-path
Use <path> as the output path in the produced index data.
-index-unit-output-path-filelist
Specify index unit output paths in a file rather than on the command line
-index-system-modules
Emit index data for imported serialized swift system modules
-index-store-path
Store indexing data to <path>
-index-ignore-system-modules
Avoid indexing system modules
-index-ignore-stdlib
Avoid emitting index data for the standard library.
Produce index data for a source file
-index-file-path
Produce index data for file <path>
Number of characters to indent.
-indent-switch-case
Indent cases in switch statements.
Perform an incremental build if possible
Overwrite input file with formatted file.
-import-underlying-module
Implicitly imports the Objective-C half of a module
When performing a dependency scan, only dentify all imports of the main Swift module sources
-import-objc-header
Implicitly imports an Objective-C header file
Implicitly import the specified module
-import-cf-types
Recognize and import CF types as class types
the file containing USRs of removed decls that the digester should ignore
-ignore-module-source-info
Avoid getting source location from .swiftsourceinfo files
-ignore-always-inline
Ignore @inline(__always) attributes.
add a directory to the clang importer system framework search path
Add directory to the import search path
Display available options, including hidden options
Emit debug info. This is the preferred setting for debugging with LLDB.
Write the SIL into a file and generate debug-info to debug on SIL  level.
-group-info-path
The path to collect the group information of the compiled module
Don't emit debug info
-gline-tables-only
Emit minimal debug info for backtraces only
--generate-name-correction
Generate name correction template
-generate-name-correction
--generate-migration-script
Compare SDK content in JSON file and generate migration script
-generate-migration-script
--generate-empty-baseline
Generate an empty baseline
-generate-empty-baseline
Emit full DWARF type info.
-function-sections
Emit functions to separate sections.
Add directory to system framework search path
-frontend-parseable-output
Specifies a framework which should be linked against
-force-single-frontend-invocation
-whole-module-optimization
Optimize input files together instead of individually
-force-public-linkage
Force public linkage for private symbols. Used by LLDB.
Apply all fixits from diagnostics without any filtering
Find USR for decls by given condition
Specify source inputs in a file rather than on the command line
Add directory to framework search path
-external-pass-pipeline-filename
<pass_pipeline_file>
Use the pass pipeline defined by <pass_pipeline_file>
-explicit-swift-module-map-file
Specify a JSON file containing information of explict Swift modules
-experimental-spi-imports
Enable experimental support for SPI imports
-experimental-skip-non-inlinable-function-bodies
Skip type-checking and SIL generation for non-inlinable function bodies
-experimental-skip-non-inlinable-function-bodies-without-types
Skip work on non-inlinable function bodies that do not declare nested types
-experimental-skip-all-function-bodies
Skip type-checking function bodies and all SIL generation
-experimental-print-full-convention
When emitting a module interface or SIL, emit additional @convention arguments, regardless of whether they were written in the source. Also requires -use-clang-function-types to be enabled.
-experimental-one-way-closure-params
Enable experimental support for one-way closure parameters
Schedule a swift module emission job instead of a merge-modules job (new Driver only)
-experimental-cxx-stdlib
C++ standard library to use; forwarded to Clang's -stdlib flag
-experimental-allow-module-with-compiler-errors
Attempt to output .swiftmodule, regardless of compilation errors
-entry-point-function-name
Name of the entry point function
-enforce-exclusivity=
Enforce law of exclusivity
-enable-volatile-modules
Load Swift modules in memory
-enable-verify-exclusivity
Enable verification of access markers used to enforce exclusivity.
-enable-type-layout
Enable type layout based lowering
-enable-throw-without-try
Allow throwing function calls without 'try'
Allows this module's internal API to be accessed for testing
-enable-testable-attr-requires-testable-module
Enable checking of @testable
-enable-target-os-checking
Enable checking the target OS of serialized modules
-enable-swiftcall
Enable the use of LLVM swiftcall support
-enable-swift3-objc-inference
Enable Swift 3's @objc inference rules for NSObject-derived classes and 'dynamic' members (emulates Swift 3 behavior)
-enable-spec-devirt
Enable speculative devirtualization pass.
-enable-source-import
Enable importing of Swift source files
-enable-sil-opaque-values
Enable SIL Opaque Values
-enable-resilience
Deprecated, use -enable-library-evolution instead
-enable-private-imports
Allows this module's internal and private API to be accessed
-enable-ossa-modules
Always serialize SIL in ossa form. If this flag is not passed in, when optimizing ownership will be lowered before serializing SIL
-enable-operator-designated-types
Enable operator designated types
-enable-only-one-dependency-file
Enables incremental build optimization that only produces one dependencies file
-enable-objc-interop
Enable Objective-C interop code generation and config directives
-enable-objc-attr-requires-foundation-module
Enable requiring uses of @objc to require importing the Foundation module
-enable-nskeyedarchiver-diagnostics
Diagnose classes with unstable mangled names adopting NSCoding
-enable-nonfrozen-enum-exhaustivity-diagnostics
Diagnose switches over non-frozen enums without catch-all cases
-enable-new-operator-lookup
Enable the new operator decl and precedencegroup lookup behavior
-enable-llvm-value-names
Add names to local values in LLVM IR
-enable-library-evolution
Build the module to allow binary-compatible library evolution
-enable-invalid-ephemeralness-as-error
Diagnose invalid ephemeral to non-ephemeral conversions as errors
-enable-infer-public-sendable
Enable inference of Sendable conformances for public structs and enums
-enable-incremental-imports
Enable cross-module incremental build metadata and driver scheduling for Swift modules
-enable-implicit-dynamic
Add 'dynamic' to all declarations
-enable-experimental-structural-opaque-types
Enable experimental support for structural opaque result types
-enable-experimental-static-assert
Enable experimental #assert
-enable-experimental-named-opaque-types
Enable experimental support for named opaque result types
-enable-experimental-forward-mode-differentiation
Enable experimental forward mode differentiation
-enable-experimental-flow-sensitive-concurrent-captures
Enable flow-sensitive concurrent captures
-enable-experimental-enum-codable-derivation
Enable experimental derivation of Codable for enums
-enable-experimental-cxx-interop
Allow importing C++ modules into Swift (experimental feature)
-enable-experimental-concurrency
Enable experimental concurrency model
-enable-experimental-concise-pound-file
Enable experimental concise '#file' identifier
-enable-experimental-async-handler
Enable experimental @asyncHandler feature
-enable-experimental-additive-arithmetic-derivation
Enable experimental 'AdditiveArithmetic' derived conformances
-enable-dynamic-replacement-chaining
Enable chaining of dynamic replacements
-enable-deserialization-recovery
Attempt to recover from missing xrefs (etc) in swiftmodules
-enable-cxx-interop
Enable C++ interop code generation and config directives
-enable-cross-import-overlays
Automatically import declared cross-import overlays.
-enable-copy-propagation
Run SIL copy propagation to shorten object lifetime.
-enable-conformance-availability-errors
Diagnose conformance availability violations as errors
-enable-bridging-pch
Enable automatic generation of bridging PCH files
-enable-batch-mode
Enable combining frontend jobs into batches
-enable-ast-verifier
Run the AST verifier during compilation. NOTE: This lets the user override the default behavior on whether or not the ASTVerifier is run. The default behavior is to run the verifier when asserts are enabled and not run it when asserts are disabled. NOTE: Can not be used if disable-ast-verifier is used as well
-enable-anonymous-context-mangled-names
Enable emission of mangled names in anonymous context descriptors
-enable-access-control
Respect access control restrictions
--empty-baseline
Use empty baseline for diagnostics
-emit-verbose-sil
Emit locations during SIL emission
Emit the TBD file to <path>
Parse input file(s) and emit the Syntax tree(s) as JSON
-emit-symbol-graph
Emit a symbol graph
-emit-symbol-graph-dir
Emit a symbol graph to directory <dir>
-emit-swift-ranges
Emit unparsed source ranges
-emit-swift-ranges-path
Output unparsed ranges to <path>
-emit-supported-features
Emit a JSON file including all supported compiler features
-emit-stack-promotion-checks
Emit runtime checks for correct stack promotion of objects.
-emit-sorted-sil
When printing SIL, print out all sil entities sorted by name to ease diffing
Emit canonical SIL file(s)
Emit raw SIL file(s)
Emit serialized AST + canonical SIL file(s)
Emit serialized AST + raw SIL file(s)
-emit-remap-file-path
Emit the replacement map describing Swift Migrator changes to <path>
-emit-reference-dependencies
Emit a Swift-style dependencies file
-emit-reference-dependencies-path
Output Swift-style dependencies file to <path>
-emit-private-module-interface-path
Output private module interface file to <path>
Emit a precompiled Clang module from a module map
Emit PCH for imported Objective-C header file
-emit-parseable-module-interface
-emit-parseable-module-interface-path
-emit-objc-header
Emit an Objective-C header file
-emit-objc-header-path
Emit an Objective-C header file to <path>
Emit an importable module
-emit-module-summary
Output module summary file
-emit-module-summary-path
Output module summary file to <path>
-emit-module-source-info
Output module source info file
-emit-module-source-info-path
Output module source info file to <path>
-emit-module-path=
-emit-module-path
Emit an importable module to <path>
-emit-module-interface
Output module interface file
-emit-module-interface-path
Output module interface file to <path>
-emit-module-doc
Emit a module documentation file based on documentation comments
-emit-module-doc-path
Output module documentation file <path>
-emit-migrated-file-path
Emit the migrated source file to <path>
-emit-localized-strings
Emits localization keys for strings passed to APIs needing localization
-emit-localized-strings-path=
-emit-localized-strings-path
Emit localization keys to <path>
-emit-loaded-module-trace
Emit a JSON file containing information about what modules were loaded
-emit-loaded-module-trace-path=
-emit-loaded-module-trace-path
Emit the loaded module trace JSON to <path>
Emit a linked library
Emit LLVM IR file(s) after LLVM optimizations
Emit LLVM IR file(s) before LLVM optimizations
-emit-imported-modules
Emit a list of the imported modules
-emit-fixits-path
Output compiler fixits as source edits to <path>
-emit-fine-grained-dependency-sourcefile-dot-files
Emit dot files for every source file.
-emit-executable
Emit a linked executable
-emit-dependencies
Emit basic Make-compatible dependencies files
-emit-dependencies-path
Output basic Make-compatible dependencies file to <path>
Emit LLVM BC file(s)
Emit assembly file(s) (-S)
-emit-abi-descriptor-path
Output the ABI descriptor of current module to <path>
-embed-tbd-for-module
Embed symbols from the module in the emitted tbd file
Embed LLVM IR bitcode as data
-embed-bitcode-marker
Embed placeholder LLVM IR data as a marker
Marks a conditional compilation flag as true
Dump USR for each declaration reference
-dump-type-refinement-contexts
Type-check input file(s) and dump type refinement contexts(s)
Output YAML dump of fixed-size types from all imported modules
Dump SDK content to JSON file
-dump-scope-maps
<expanded-or-list-of-line:column>
Parse and type-check input file(s) and dump the scope map(s)
-dump-requirement-machine
Enables dumping rewrite systems from the generics implementation
Dump debugging information about a precompiled Clang module
Parse input file(s) and dump AST(s)
-dump-migration-states-dir
Dump the input text, output text, and states for migration to <path>
Dump JIT contents
-dump-interface-hash
Parse input file(s) and dump interface token hash(es)
-dump-clang-diagnostics
Dump Clang diagnostics to stderr
Parse and type-check input file(s) and dump AST(s)
The path to output swift interface files for the compiled source files
-driver-verify-fine-grained-dependency-graph-after-every-import
Debug DriverGraph by verifying it after every import
-driver-use-frontend-path
Use the given executable to perform compilations. Arguments can be passed as a ';' separated list
-driver-use-filelists
Pass input files as filelists whenever possible
-driver-time-compilation
Prints the total time it took to execute all compilation tasks
-driver-skip-execution
Skip execution of subtasks when performing compilation
-driver-show-job-lifecycle
Show every step in the lifecycle of driver jobs
-driver-show-incremental
With -v, dump information about why files are being rebuilt
-driver-print-output-file-map
Dump the contents of the output file map
-driver-print-derived-output-file-map
Dump the contents of the derived output file map
-driver-print-bindings
Dump list of job inputs and outputs
-driver-print-actions
Dump list of actions to perform
Set the driver mode to either 'swift' or 'swiftc'
-driver-force-response-files
Force the use of response files for testing
-driver-filelist-threshold=
-driver-filelist-threshold
Pass input or output file names as filelists if there are more than <n>
-driver-emit-fine-grained-dependency-dot-file-after-every-import
Emit dot files every time driver imports an fine-grained swiftdeps file.
-driver-batch-size-limit
Use the given number as the upper limit on dynamic batch-mode partition size
-driver-batch-seed
Use the given seed value to randomize batch-mode partitions
-driver-batch-count
Use the given number of batch-mode partitions, rather than partitioning dynamically
-driver-always-rebuild-dependents
Always rebuild dependents of files that have been modified
-disallow-use-new-driver
Disable using new swift-driver
-disable-verify-exclusivity
Diable verification of access markers used to enforce exclusivity.
-disable-typo-correction
Disable typo correction
-disable-type-layout
Disable type layout based lowering
-disable-testable-attr-requires-testable-module
Disable checking of @testable
-disable-target-os-checking
Disable checking the target OS of serialized modules
-disable-swift3-objc-inference
Disable Swift 3's @objc inference rules for NSObject-derived classes and 'dynamic' members (emulates Swift 4 behavior)
-disable-swift-specific-llvm-optzns
Don't run Swift specific LLVM optimization passes.
-disable-swift-bridge-attr
Disable using the swift bridge attribute
-disable-sil-perf-optzns
Don't run SIL performance optimization passes
-disable-sil-partial-apply
Disable use of partial_apply in SIL generation
-disable-sil-ownership-verifier
Do not verify ownership invariants during SIL Verification 
-disable-reflection-names
Disable emission of names of stored properties and enum cases inreflection metadata
-disable-reflection-metadata
Disable emission of reflection metadata for nominal types
-disable-previous-implementation-calls-in-dynamic-replacements
Disable calling the previous implementation in dynamic replacements
-disable-playground-transform
Disable playground transformation
-disable-ossa-opts
Don't run SIL OSSA optimization passes.
--disable-os-checks
Skip OS related diagnostics
-disable-os-checks
-disable-only-one-dependency-file
Disables incremental build optimization that only produces one dependencies file
-disable-objc-interop
Disable Objective-C interop code generation and config directives
-disable-objc-attr-requires-foundation-module
Disable requiring uses of @objc to require importing the Foundation module
-disable-nskeyedarchiver-diagnostics
Allow classes with unstable mangled names to adopt NSCoding
-disable-nonfrozen-enum-exhaustivity-diagnostics
Allow switches over non-frozen enums without catch-all cases
-disable-new-operator-lookup
Disable the new operator decl and precedencegroup lookup behavior
-disable-named-lazy-member-loading
Disable per-name lazy member loading
-disable-modules-validate-system-headers
Disable validating system headers in the Clang importer
-disable-migrator-fixits
Disable the Migrator phase which automatically applies fix-its
-disable-llvm-verify
Don't run the LLVM IR verifier.
-disable-llvm-value-names
Don't add names to local values in LLVM IR
-disable-llvm-slp-vectorizer
Don't run LLVM SLP vectorizer
-disable-llvm-optzns
Don't run LLVM optimization passes
-disable-legacy-type-info
Completely disable legacy type layout
-disable-invalid-ephemeralness-as-error
Diagnose invalid ephemeral to non-ephemeral conversions as warnings
-disable-interface-lock
Don't lock interface file when building module
-disable-infer-public-sendable
Disable inference of Sendable conformances for public structs and enums
-disable-incremental-llvm-codegen
Disable incremental llvm code generation.
-disable-incremental-imports
Disable cross-module incremental build metadata and driver scheduling for Swift modules
-disable-implicit-swift-modules
Disable building Swift modules implicitly by the compiler
-disable-implicit-double-cgfloat-conversion
Disable implicit conversion between Double and CGFloat types
-disable-implicit-concurrency-module-import
Disable the implicit import of the _Concurrency module.
-disable-generic-metadata-prespecialization
Do not statically specialize metadata for generic types at types that are known to be used in source.
--disable-fail-on-error
Don't exit with a nonzero status if errors are emitted
-disable-fail-on-error
-disable-diagnostic-passes
Don't run diagnostic passes
-disable-deserialization-recovery
Don't attempt to recover from missing xrefs (etc) in swiftmodules
-disable-debugger-shadow-copies
Disable debugger shadow copies of local variables.This option is only useful for testing the compiler.
-disable-cross-import-overlays
Do not automatically import declared cross-import overlays.
-disable-copy-propagation
Don't run SIL copy propagation to preserve object lifetime.
-disable-constraint-solver-performance-hacks
Disable all the hacks in the constraint solver
-disable-conformance-availability-errors
Diagnose conformance availability violations as warnings
-disable-concrete-type-metadata-mangled-name-accessors
Disable concrete type metadata access by mangled name
-disable-clangimporter-source-import
Disable ClangImporter and forward all requests straight the DWARF importer.
-disable-clang-target
Disable a separately specified target triple for Clang instance to use
-disable-building-interface
Disallow building binary module from textual interface
-disable-bridging-pch
Disable automatic generation of bridging PCH files
-disable-batch-mode
Disable combining frontend jobs into batches
-disable-availability-checking
Disable checking for potentially unavailable APIs
-disable-autolinking-runtime-compatibility
Do not use autolinking for runtime compatibility libraries
-disable-autolinking-runtime-compatibility-dynamic-replacements
Do not use autolinking for the dynamic replacement runtime compatibility library
-disable-autolinking-runtime-compatibility-concurrency
Do not use autolinking for the concurrency runtime compatibility library
-disable-autolink-framework
Disable autolinking against the provided framework
-disable-ast-verifier
Do not run the AST verifier during compilation. NOTE: This lets the user override the default behavior on whether or not the ASTVerifier is run. The default behavior is to run the verifier when asserts are enabled and not run it when asserts are disabled. NOTE: Can not be used if enable-ast-verifier is used as well
-disable-arc-opts
Don't run SIL ARC optimization passes.
-disable-access-control
Don't respect access control restrictions
-diagnostics-editor-mode
Diagnostics will be used in editor
-diagnostic-style=
-diagnostic-style
The formatting style used when printing diagnostics ('swift' or 'llvm')
-diagnostic-documentation-path
Path to diagnostic documentation resources
Diagnose SDK content in JSON file
--deserialize-sdk
Deserialize sdk digester in a JSON file
-deserialize-sdk
--deserialize-diff
Deserialize diff items in a JSON file
-deserialize-diff
-deprecated-integrated-repl
-define-availability
Define an availability macro in the format 'macroName : iOS 13.0, macOS 10.15'
-debugger-testing-transform
Instrument the code with calls to an intrinsic that record the expected values of local variables so they can be compared against the results from the debugger.
-debugger-support
Process swift code as if running in the debugger
-debug-time-function-bodies
Dumps the time it takes to type-check each function body
-debug-time-expression-type-checking
Dumps the time it takes to type-check each expression
-debug-prefix-map
<prefix=replacement>
Remap source paths in debug info
Dumping information for debug purposes
-debug-info-store-invocation
Emit the compiler invocation in the debug info.
-debug-info-format=
Specify the debug info format type to either 'dwarf' or 'codeview'
-debug-generic-signatures
Debug generic signatures
-debug-forbid-typecheck-prefix
Triggers llvm fatal_error if typechecker tries to typecheck a decl with the provided prefix name
-debug-emit-invalid-swiftinterface-syntax
Write an invalid declaration into swiftinterface files
-debug-diagnostic-names
Include diagnostic names when printing
Print out debug dumps when cycles are detected in evaluation
-debug-crash-immediately
Force a crash immediately
-debug-crash-after-parse
Force a crash after parsing
-debug-constraints
Debug the constraint-based type checker
-debug-constraints-on-line=
-debug-constraints-on-line
Debug the constraint solver for expressions on <line>
-debug-constraints-attempt
Debug the constraint solver at a given attempt
-debug-assert-immediately
Force an assertion failure immediately
-debug-assert-after-parse
Force an assertion failure after parsing
Emit object file(s) (-c)
-crosscheck-unqualified-lookup
Compare legacy DeclContext- to ASTScope-based unqualified name lookup (for debugging)
-cross-module-optimization
Perform cross-module optimization
-coverage-prefix-map
Remap source paths in coverage info
-continue-building-after-errors
Continue building, even after errors are encountered
--compiler-style-diags
Print compiler style diagnostics to stderr.
-compiler-style-diags
-color-diagnostics
Print diagnostics in color
-code-complete-inits-in-postfix-expr
Include initializers when completing a postfix expression
-code-complete-call-pattern-heuristics
Use heuristics to guess whether we want call pattern completions
Separately set the target we should use for internal Clang instance
-check-onone-completeness
Print errors if the compile OnoneSupport module is missing symbols
-candidate-module-file
Specify Swift module may be ready to use for an interface
-bypass-batch-mode-checks
Bypass checks for batch-mode errors.
-build-module-from-parseable-interface
-compile-module-from-interface
Treat the (single) input as a swiftinterface and produce a module
path to the baseline SDK to import frameworks
-bridging-header-directory-for-print
Directory for bridging header to be printed in compatibility header
-breakage-allowlist-path
An allowlist of breakages to not complain about
add a module for baseline input
add a directory to the baseline framework search path
-batch-scan-input-file
Specify a JSON file containing modules to perform batch dependencies scanning
The path to the Json file that we should use as the baseline
The path to a directory containing baseline files: macos.json, iphoneos.json, appletvos.json, watchos.json, and iosmac.json
-bad-file-descriptor-retry-count
Number of retrying opening a file if previous open returns a bad file descriptor error.
--avoid-tool-args
Avoid serializing the arguments for invoking the tool.
-avoid-tool-args
--avoid-location
Avoid serializing the file paths of SDK nodes.
-avoid-emit-module-source-info
don't emit Swift source info file
-autolink-library
Add dependent library
-autolink-force-load
Force ld to link against this module even if no symbols are used
-assume-single-threaded
Assume that code will be executed in a single-threaded environment
Specify the assert_configuration replacement. Possible values are Debug, Release, Unchecked, DisableReplacement.
-application-extension
Restrict code to those available for App Extensions
-api-diff-data-file
API migration data is from <path>
-api-diff-data-dir
Load platform and version specific API migration data files from <path>. Ignored if -api-diff-data-file is specified.
-analyze-requirement-machine
Print out requirement machine statistics at the end of the compilation job
-access-notes-path=
-access-notes-path
Specify YAML file to override attributes on Swift declarations in this module
--abort-on-module-fail
Abort if a module failed to load
-abort-on-module-fail
Dumping ABI interface
-driver-print-jobs
Dump list of jobs to execute
SwiftOptions/ParsedOptions.swift
not a single argument
not a multiple argument
label
data
children
node
labelCounter
nodeIDs
    opts="$opts 
    if [[ $COMP_CWORD == "
" ]]; then
        COMPREPLY=( $(compgen -W "$opts" -- "$cur") )
        return
    fi
    case ${COMP_WORDS[
    return
    ;;
    COMPREPLY=( $(compgen -W "$opts" -- "$cur") )
cur="${COMP_WORDS[COMP_CWORD]}"
prev="${COMP_WORDS[COMP_CWORD-1]}"
COMPREPLY=()
COMPREPLY=( $(compgen -W "$(
 "$COMP_WORDS")" -- "$cur") )
COMPREPLY=( $(compgen -W "
COMPREPLY=( $(compgen -d -- "$cur") )
COMPREPLY=( $(compgen -f -- "$cur") )
ArgumentParser/CompletionsGenerator.swift
Invalid CompletionShell: 
SHELL
function __fish_
_using_command
    set cmd (commandline -opc)
    if [ (count $cmd) -eq (count $argv) ]
        for i in (seq (count $argv))
            if [ $cmd[$i] != $argv[$i] ]
                return 1
            end
        end
        return 0
    end
    return 1
-f -a '(command 
 -- --custom (commandline -opc)[1..-1])'
-f -a '(__fish_complete_directories)'
-f -a '(for i in 
local context state state_descr line
_commandname=$words[1]
typeset -A opt_args
_custom_completion() {
    local completions=("${(@f)$($*)}")
    _describe '' completions
'(-h --help)'{-h,--help}'[Print help information.]'
'(-): :->command'
case $state in
    (command)
        local subcommands
        subcommands=(
        )
        _describe "subcommand" subcommands
        ;;
    (arg)
        case ${words[1]} in
        esac
        ;;
esac
() {
    integer ret=1
    local -a args
    args+=(
    )
    _arguments -w -s -S $args[@] && ret=0
    return ret
{_custom_completion $_
{local -a list; list=(${(f)"$(
)"}); _describe '''' list}
ArgumentParser/Argument.swift
--------------------------------------------------------------------
Can't read a value from a parsable
argument definition.
This error indicates that a property declared with an `@Argument`,
`@Option`, `@Flag`, or `@OptionGroup` property wrapper was neither
initialized to a value nor decoded from command-line arguments.
To get a valid value, either call one of the static parsing methods
(`parse`, `parseAsRoot`, or `main`) or define an initializer that
initializes _every_ property of your parsable type.
--------------------------------------------------------------------
Argument(*definition*)
ArgumentParser/Flag.swift
Flag(*definition*)
ArgumentParser/NameSpecification.swift
' has not characters to form short option name.
ArgumentParser/Option.swift
Option(*definition*)
ArgumentParser/OptionGroup.swift
OptionGroup(*definition*)
_TtC14ArgumentParser15ArgumentDecoder
values
usedOrigins
nextCommandIndex
previouslyDecoded
codingPath
userInfo
decoder
ArgumentParser/ArgumentDecoder.swift
ArgumentParser/CommandParser.swift
Unexpected error: 
The ParsableCommand "
" can't have itself as its own subcommand.
generateCompletionScript
ArgumentParser/Parsed.swift
Trying to get the argument set from a resolved/parsed property.
Show subcommand help information.
 <subcommand>' for detailed help.
ArgumentParser/HelpGenerator.swift
Show the version.
Show help information.
' for more information.
Unspecified version
Missing required subcommand.
Invalid option: -
Invalid option: 
' does not take any value, but '
' was specified.
Internal error. Invalid state while parsing command-line arguments.
Internal error. Parsing command-line arguments hit unimplemented code path.
Can't generate completion scripts for '
Please use --generate-completion-script=<shell> with one of:
    
Can't autodetect a supported shell.
Please use --generate-completion-script=<shell> with one of:
    
Unknown option '
'. Did you mean '
Missing value for '
 unexpected arguments: '
Unexpected argument '
Value to be set with 
 had already been set with 
Missing one of: '
Missing expected argument '
No value set for non-argument var 
. Replace with a static variable, or let constant.
' is invalid for '
' is invalid for '<
element
parent
swift_getFunctionTypeMetadataGlobalActor
swift_getFunctionTypeMetadataGlobalActorStandalone
__TEXT
swift_getObjCClassMetadata
_TtCs12_SwiftObject
swift_getTypeContextDescriptor
swift_getExistentialTypeMetadata
objc_addLoadImageFunc
__swift5_proto
ySbG
ySSG
yypG
ySiG
$ss12CaseIterableP
$sSY
xSgz_x_lXX
So8NSStringC
SvSg
SvSgXCSg
SvSg_Spy
GSgAAtXCSg
SvSg_AA
tXCSg
SvSg_SPy
GSgAAtXCSg
_A2At
$sSY
$ss21_ObjectiveCBridgeableP
SaySiG
$ss25ExpressibleByArrayLiteralP
$ss26ExpressibleByStringLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
ySaySSGG
ySSG
ySsG
ySnySiGG
ySS_SitG
ySiG
ySaySiGG
ySpy
GSgG
SaySpy
GSgG
7ElementSTQz
$sST
$sSt
Say7ElementSTQzG
8IteratorSTQzSg
$s8TSCBasic8ClosableP
yxq_G
yxq__GG
7ElementSTQzSiSbIegnyd_
7ElementSTQzSiABIegnyr_
Say7ElementSTQzGIgo_
yypG
So11NSConditionC
_pSg
$s8TSCBasic14DiagnosticDataP
$s8TSCBasic18DiagnosticLocationP
So17OS_dispatch_queueC
Sayy
SaySSG
SS_Sit
ypSg
ySS_yptG
4code_t
$s8TSCBasic10FileSystemP
y_So17OS_dispatch_queueCGG
SDySS
xSgXw
_yptG
_ypt
y_So17OS_dispatch_queueCGSg
y_So17OS_dispatch_queueCG
ySSypG
SS_ypt
$s8TSCBasic13HashAlgorithmP
Siz_Xx
GSgIego_
SDySS
$s8TSCBasic16JSONSerializableP
SayypG
SDySSypG
SS3key_yp5valuetSg
yp3key_yp5valuetSg
$s8TSCBasic12JSONMappableP
SS3key_ypXp8expected
4jsont
SSSg3key_SS7messaget
xXMT
q_ycxc
q_Sg
So6NSLockC
5errno_t
$s8TSCBasic24ObjectIdentifierProtocolP
$ss30ExpressibleByDictionaryLiteralP
$sSk
x3key_q_5valuet
yxq_GG
SnySiG
$sSK
$sSl
yxq_GG
SayxG
SDyxq_G
yxGG
yxGG
ShyxG
ySSG
$s8TSCBasic4PathP
4path_
ySaySSGG8iteratort
SgXw
SgXwz_Xx
Gz_Xx
GIegg_13stdoutClosure_ABIegg_06stderrB0tSg
SDyS2SG
ySay
6signal_t
ySay
_pG6result_
Sg6threadt
SS7program_t
Sb14redirectStderr_t
ySay
Gc6stdout_yABc6stderrSb14redirectStderrt
y_So17OS_dispatch_queueCGG
So19NSRegularExpressionC
SNySiG
yxGG
yxGG
Sbx_xtc
yx_GSg
yx_GSgXw
So12NSFileHandleC
So8NSThreadC
IeyB_
SgXw
SgXwz_Xx
Ieg_
y_xG
$s8TSCBasic14ByteStreamableP
$s8TSCBasic18WritableByteStreamP
SSxc
_pxc
Si6offset_SS3key_SS5valuet7elementtSg
SnyxG
_SSt
_SS4pathSaySSG4argst
_SaySSGt
_S2S4destt
SaySsG
ySSG
_pGIegg_
$s10TSCUtility8ArchiverP
GSgSvSgXCSg
ySvSgXCSg
yXCSg
SvSgSPy
GSg_SpyAAGSgtXCSg
SbSvSg_
cSgtXCSg
SbSvSg_
AASbAA_
tXCSgtXCSg
SiSvSgXCSg
SvSgAA_SitXCSg
SbSvSgXCSg
SvSgXCSg
SvSgXCSg
ySvSg_yAAcSgtXCSg
ySvSg_AAyAA_AAtXCSgyAAXCSgtXCSg
SbSvSg_Spy
GSgSiSpyAAGSgtXCSg
ySvSg_SPy
GSgtXCSg
SiSvSg_SPy
GSgSpyABGSgSitXCSg
SbSvSg_SPy
GSgSpy
GSgAGSpyAAGSgtXCSg
SvSgXCSg
SvSgXCSg
SvSgXCSg
SvSgXCSg
SvSgAAXCSg
SbSvSg_SbAAcSgtXCSg
SbSvSg_AASbAA_AAtXCSgtXCSg
ySvSg_Spy
GSgADtXCSg
SvSgAA_SPy
GSgSpyAAGSgtXCSg
SbSvSg_SbAA_SpySbGSgtcSgyAAcSgtXCSg
SbSvSg_S2bAAcSgtXCSg
SbSvSg_
ABSbAAcSgtXCSg
SbSvSg_SpyAAGSgSiACSiSbAAcSgtXCSg
SbSvSg_AASbAA_AASpySbGSgtXCSgAAyAA_AAtXCSgtXCSg
SbSvSg_SbAASbAA_AAtXCSgtXCSg
SbSvSg_
AbASbAA_AAtXCSgtXCSg
SbSvSg_SpyAAGSgSiACSiAASbAA_AAtXCSgtXCSg
ySvSg_Spy
GSgADtXCSg
SvSgXCSg
SvSgXCSg
ySSShySSGG
ySOypG
SO_ypt
ySiG
ySSypG
SS_ypt
yS2SG
SaySSGG
ySay
ySSG
$sSY
SaySSG
ypSg
yqd__G
xqd__
_pIeglnzo_
qd__
G0R2_
ySayqd__GG
xSayqd__G
_pIeglgzo_
G0G0R2__
yqd__G
ySayqd__GG
yqd_0_G
xqd__qd_0_
_pIeglnnzo_
qd_0_
G0R3_
yqd_1_G
xqd__qd_0_qd_1_
_pIeglnnnzo_
qd_1_
G0R4_
xqd__Sgqd_0_Sg
_pIeglnnzo_
yqd_0_G
xqd__Sgqd_0_Sgqd_1_Sg
_pIeglnnnzo_
yqd_1_G
G0R5_
xSayqd__GSayqd_0_G
_pIeglggzo_
ySayqd_0_GG
G0G0R3__
G0G0R4__
xSayqd__GSayqd_0_GSayqd_1_G
_pIeglgggzo_
ySayqd_1_GG
G0G0R5__
_pIeglgzo_
$s10TSCUtility16ArgumentProtocolP
SS_SSSg10suggestiont
SS8argument_
5errort
SS6option_t
_SaySSGt
SS5value_t
SS5value_ypXp12expectedTypet
SaySS5value_SS11descriptiontG
$s10TSCUtility12ArgumentKindP
$s10TSCUtility18StringEnumArgumentP
SSSg
_pXp
_pGAA_pXp_
_pztKc
$s10TSCUtility22ArgumentParserProtocolP
SDySS
SDySSypG
Sayyxz_
tKcG
_pSg
_AAt
_Say
_pIeglnrzo_
_pIeglgzo_
SS3key_
5valuet
ySS_
SaySJG
ySS5value_SS11descriptiontG
ySaySSGG
SnySiG
$sST
$sSl
$sSK
$sSk
$ss12IdentifiableP
$s10TSCUtility16BitstreamVisitorP
8bitWidth_t
13chunkBitWidth_t
_Say
8recordID_t
Si5width_t
7blockID_Si06abbrevB0t
7blockID_t
ySJ_SutG
_pSg
_pSg
_pSg
_pSg
Iegn_
$s10TSCUtility25DiagnosticDataConvertibleP
$s10TSCUtility27DiagnosticLocationProvidingP
_pSg
_pSg
AASgIegyy_
GIegg_
Si10statusCode_t
$s10TSCUtility10DownloaderP
So8NSObjectC
So12NSURLSessionCSg
SDySi
So16NSOperationQueueC
So24NSURLSessionDownloadTaskC
_AASgtc
_pSg
SgXw
$s10TSCUtility12_FileWatcher33_523063429DB4EF647B5B8BA741A231EDLLP
$s10TSCUtility21FSEventStreamDelegateP
So17OS_dispatch_queueC
ySay
ySS_SStG
SDySSShySSGG
ySnySiGG
ySSG
ySsG
_ABtG
ySJG
ySaySSGG
ySiG
ySS3key_
5valuetG
Ieg_
$s10TSCUtility34JSONMessageStreamingParserDelegateP
7Message
xSgXw
yx_G
Si4size_t
ySS_yptG
_pSg
$s10TSCUtility22AuthorizationProvidingP
$s10TSCUtility23PersistentCacheProtocolP
SS4name_t
SDyS2SG
ySSG
_pXp
$s10TSCUtility26PolymorphicCodableProtocolP
yxGG
$s10TSCUtility25ProgressAnimationProtocolP
ShySiG
SiSg
ySay
_AAtG
$s10TSCUtility25SimplePersistanceProtocolP
9stateFile_
_p5errort
_pSg
SaySsG
ySO_yptG
_pSg
$s10TSCUtility20TracingEventProtocolP
$s10TSCUtility25TracingCollectionProtocolP
$ss12CaseIterableP
$ss26ExpressibleByStringLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
yp_ypt
Si5major_Si5minorSi5patcht
$ss9OptionSetP
$ss10SetAlgebraP
$ss25ExpressibleByArrayLiteralP
SvSg
yypG
$sSY
$ss12CaseIterableP
$ss9OptionSetP
$ss10SetAlgebraP
$ss25ExpressibleByArrayLiteralP
ycSg
SSSg
Si5index_SS8argumentt
Si5index_SS8argument
6option
17currentDriverKindt
_Sbt
_SbtG
ySnySiGG
ySSG
SaySsG
ySsG
ySbG
yypG
GGSg
SaySSG
SDySSSay
SaySbG
yx_G
yx_GG
SDySsSiG
SDySOSSG
ySOSSG
ySsSiG
ySSSay
_pXpG
SaySSG
$sSY
$ss12CaseIterableP
ySSG
ySSG
qd__
$s14ArgumentParser13ParsedWrapperP
Sayqd__GSg
SSqd__
_pIeggrzo_
Sayqd__G
ypSg
_pIeggrzo_
qd__XMT
$ss32ExpressibleByStringInterpolationP
$ss26ExpressibleByStringLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
SSSg
SaySSG10extensions_t
SaySSGAAc
_pXpSg
SbSg
Sbz_Xx
$ss25ExpressibleByArrayLiteralP
SS_Sb14withSingleDasht
SJ_Sb14allowingJoinedt
_pXpG
$s14ArgumentParser14EnumerableFlagP
$s14ArgumentParser013ExpressibleByA0P
yypG
$s14ArgumentParser17ParsableArgumentsP
$s14ArgumentParser0A11SetProviderP
SSSg5label_yp5valuet
_pSg
SSypSgIeggr_
S2SSgIeggr_
$s14ArgumentParser26ParsableArgumentsValidator33_D8B6916CE93C2FC7F7BEDE789FAE65F8LLP
$s14ArgumentParser31ParsableArgumentsValidatorErrorP
_pXpG
$s14ArgumentParser15ParsableCommandP
_Sit
_SSt
$s14ArgumentParser20ArrayWrapperProtocolP
_pXp
$ss30KeyedDecodingContainerProtocolP
_SitG
SayypG
yypG
_pXpGG
_pXpGG
ySsG
SaySSG_SSt
ySaySSG_SStG
ySnySiGG
ySiG
SaySiG
ySaySiGG
_SStG
ySi_
_pXp_AA_pXpt
SayxG
$s14ArgumentParser0A18HelpOptionProviderP
ztKc
SgSS
ztKc
ztKc
$ss10SetAlgebraP
$ss9OptionSetP
ySay
$sST
_SStSg
SSxSgIeggr_
xXMT
_pSg
_pXmTSg
ySSG
ySbG
SSXMT
$s14ArgumentParser22DecodableParsedWrapperP
5Value
_pXpGADG
SSSg5shell_t
_SStG
8previous_AA9duplicateSaySSG13originalInputt
6forKey_t
SgSS
6forKey
_pSg13originalErrort
ypSg_
6forKeyt
Si_Sit
_SSt
ySaySSGG
SaySSGSg
ySSSgG
SS4text_t
SS7message_SS5usageSS4helpt
SS7message_
8exitCodet
SaySsG
yxGSgXw
yxGG
_pXpGACG
_pXpGACSgIeggo_
_pXpGACSgIegnr_
_ypt
_pXp
_topic
_showHidden
driver
subcommand
build
package
test
topic
showHidden
AllCases
RawValue
_rawValue
rawValue
_flags
_file
_lbfsize
_cookie
_close
_read
_seek
_write
_extra
_ubuf
_nbuf
_blksize
_offset
RawValue
_ObjectiveCType
_base
_size
ArrayLiteralElement
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
_bytes
cArray
Element
Iterator
items
index
sequence
result
success
failure
RawValue
_condition
message
location
error
warning
note
remark
ignored
behavior
data
queue
handlerQueue
_diagnostics
handlers
defaultLocation
description
device
inode
size
modTime
posixPermissions
fileType
RawValue
kind
path
ioError
invalidAccess
isDirectory
noEntry
notDirectory
unsupported
unknownOSError
alreadyExistsAtDestination
userUnWritable
userWritable
executable
recursive
onlyFiles
root
lock
lockFiles
lockFilesLock
contents
entries
underlyingFileSystem
reference
file
directory
symlink
unexpectedCycle
bool
double
string
array
dictionary
orderedDictionary
null
malformed
missingKey
typeMismatch
custom
item
lock
body
cachedValue
_lock
fileDescriptor
lockFile
exclusive
shared
unableToAquireLock
storage
type
Value
Element
Index
SubSequence
Indices
Iterator
array
dict
Element
Index
Iterator
SubSequence
Indices
ArrayLiteralElement
array
_impl
startsWithTilde
invalidAbsolutePath
invalidRelativePath
string
Element
Iterator
current
towalk
shouldRecurse
fileSystem
arguments
environment
exitStatus
output
stderrOutput
nonZeroExit
illegalUTF8Sequence
terminated
signalled
verbose
workingDirectory
processID
launched
outputRedirection
_result
stdout
stderr
serialQueue
startNewProcessGroup
missingExecutableProgram
workingDirectoryNotSupported
collect
stream
none
cancelled
processes
serialQueue
killTimeout
killingCondition
shouldKill
regex
description
Element
Index
SubSequence
Indices
Iterator
elements
areInIncreasingOrder
RawValue
conjunction
disjunction
head
tail
notEmptyCondition
value
next
other
couldNotFindTmpDir
couldNotCreateUniqueName
prefix
suffix
path
fileHandle
pathExists
pathTooLong
permissionDenied
unresolvablePathComponent
outOfMemory
stream
width
clearLineString
resetString
boldString
dumb
file
noColor
green
yellow
cyan
white
black
grey
thread
finishedCondition
isFinished
task
_buffered
_buffer
queue
stream
contents
filePointer
error
closeOnDeinit
path
string
count
value
items
transform
separator
range
chdir
close
exec
pipe
posix_spawn
read
setenv
stat
symlink
unsetenv
waitpid
lowerBound
upperBound
RawValue
fileSystem
error_get_description
error_dispose
format_version
store_create
store_dispose
store_units_apply
store_units_apply_f
unit_event_notification_get_events_count
unit_event_notification_get_event
unit_event_notification_is_initial
unit_event_get_kind
unit_event_get_unit_name
store_set_unit_event_handler
store_set_unit_event_handler_f
store_start_unit_event_listening
store_stop_unit_event_listening
store_discard_unit
store_discard_record
store_purge_stale_data
store_get_unit_name_from_output_path
store_get_unit_modification_time
symbol_get_language
symbol_get_kind
symbol_get_subkind
symbol_get_properties
symbol_get_roles
symbol_get_related_roles
symbol_get_name
symbol_get_usr
symbol_get_codegen_name
symbol_relation_get_roles
symbol_relation_get_symbol
occurrence_get_symbol
occurrence_relations_apply
occurrence_relations_apply_f
occurrence_get_roles
occurrence_get_line_col
record_reader_create
record_reader_dispose
record_reader_search_symbols
record_reader_symbols_apply
record_reader_occurrences_apply
record_reader_occurrences_in_line_range_apply
record_reader_occurrences_of_symbols_apply
record_reader_search_symbols_f
record_reader_symbols_apply_f
record_reader_occurrences_apply_f
record_reader_occurrences_in_line_range_apply_f
record_reader_occurrences_of_symbols_apply_f
unit_reader_create
unit_reader_dispose
unit_reader_get_provider_identifier
unit_reader_get_provider_version
unit_reader_get_modification_time
unit_reader_is_system_unit
unit_reader_is_module_unit
unit_reader_is_debug_compilation
unit_reader_has_main_file
unit_reader_get_main_file
unit_reader_get_module_name
unit_reader_get_working_dir
unit_reader_get_output_file
unit_reader_get_sysroot_path
unit_reader_get_target
unit_dependency_get_kind
unit_dependency_is_system
unit_dependency_get_filepath
unit_dependency_get_modulename
unit_dependency_get_name
unit_include_get_source_path
unit_include_get_target_path
unit_include_get_source_line
unit_reader_dependencies_apply
unit_reader_includes_apply
unit_reader_dependencies_apply_f
unit_reader_includes_apply_f
data
length
rawValue
wait_initial_sync
RawValue
RawValue
ArgumentKindTy
unknownOption
invalidValue
expectedValue
unexpectedArgument
expectedArguments
duplicateArgument
unknown
typeMismatch
custom
bash
function
values
none
unspecified
filename
path
oneByOne
upToNextOption
remaining
name
shortName
strategy
usage
completion
isOptional
kind
isArray
parseClosure
subparsers
optionArguments
positionalArguments
commandName
overview
seeAlso
isSubparser
canAcceptPositionalArguments
results
parentResult
parser
subparser
bodies
currentArgument
associatedArgumentValue
argumentsIterator
buffer
offset
bufferOverflow
Element
Iterator
Index
SubSequence
Indices
RawValue
signature
elements
blockInfo
block
record
fields
payload
array
char6String
blob
none
name
recordNames
value
operands
literal
fixed
char6
setBID
blockName
setRecordName
rawValue
cursor
blockInfo
globalAbbrevs
invalidBlockInfoRecord
abbrevWidthTooSmall
noSuchAbbrev
missingEndBlock
invalidAbbrev
nestedBlockInBlockInfo
missingSETBID
vbrOverflow
data
currentValue
currentBit
codeBitWidth
currentAbbreviations
blockScope
blockInfoRecords
currentBlockID
abbrevs
values
previousCodeWidth
lengthPlaceholderByteIndex
previousAbbrevs
cCompilerFlags
cxxCompilerFlags
linkerFlags
swiftCompilerFlags
anyError
name
packagePath
reference
fatalError
clientError
serverError
fileSystemError
session
downloads
queue
fileSystem
task
destination
progress
completion
paths
_watcher
latency
stream
delegate
thread
runLoop
callbacksQueue
unknownError
block
_impl
name
module
methods
store
instance
path
dylib
classToMethods
thread
signalHandler
delegate
buffer
state
decoder
parsingMessage
parsingMessageSize
parsingNewlineAfterMessage
failed
reason
underlyingError
machines
fileNotFound
unreadableFile
invalidFilePath
machineNotFound
invalidDefaultMachinePosition
name
login
password
couldNotFindConfigFile
parsingError
prohibitedFlags
diagnostics
pkgConfigStack
name
pcFile
cFlags
libs
fileSystem
variables
dependencies
privateDependencies
linux
android
darwin
windows
debian
fedora
value
stream
header
displayedPercentages
hasDisplayedHeader
lastDisplayedText
terminal
hasDisplayedProgress
animation
location
configuration
busyTimeoutMilliseconds
maxSizeInBytes
defaultPageSizeInBytes
path
memory
temporary
string
blob
null
stmt
name
value
callback
databaseFull
RawValue
versionNumber
diagnostics
badMagic
unexpectedTopLevelRecord
unknownBlock
malformedRecord
noMetadataBlock
unexpectedSubblock
unexpectedRecord
missingInformation
text
level
location
category
flag
ranges
fixIts
ignored
note
warning
error
fatal
remark
filename
line
column
offset
start
fileSystem
schemaVersion
supportedSchemaVersions
statePath
otherStatePaths
prettyPrint
invalidSchemaVersion
restoreFailure
RawValue
asyncBegin
asyncEnd
name
startTs
events
RawValue
AllCases
tripleString
arch
vendor
badFormat
unknownArch
unknownOS
x86_64
x86_64h
i686
powerpc64le
s390x
aarch64
armv7
arm64
arm64e
wasm32
unknown
apple
darwin
macOS
linux
windows
wasi
android
RawValue
concise
verbose
debug
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
major
minor
patch
prereleaseIdentifiers
buildMetadataIdentifiers
version
isDevelopment
buildIdentifier
RawValue
Element
ArrayLiteralElement
rawValue
open
close
RawValue
AllCases
interactive
batch
Element
RawValue
ArrayLiteralElement
rawValue
spelling
kind
aliasFunction
attributes
metaVar
helpText
group
input
flag
joined
separate
joinedOrSeparate
remaining
commaJoined
unknownOption
missingArgument
unsupportedOption
options
$__lazy_storage_$_groupMap
codeFormatting
debugCrash
internal
internalDebug
linkerOption
modes
option
argument
index
single
multiple
none
parsedOptions
optionIndex
groupIndex
consumed
root
label
data
children
node
labelCounter
nodeIDs
RawValue
AllCases
rawValue
Value
_parsedValue
remaining
unconditionalRemaining
StringInterpolation
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
abstract
discussion
valueName
shouldDisplay
kind
list
file
shellCommand
custom
default
directory
RawValue
message
rawValue
helpRequest
Value
_parsedValue
prefixedNo
prefixedEnableDisable
exclusive
chooseFirst
chooseLast
ArrayLiteralElement
elements
customLong
customShort
long
short
Value
_parsedValue
next
unconditional
scanningForValue
singleValue
unconditionalSingleValue
upToNextOption
remaining
Value
_parsedValue
_hiddenFromHelp
_dummy
commandName
_superCommandName
abstract
discussion
version
shouldDisplay
subcommands
defaultSubcommand
helpNames
_options
options
values
usedOrigins
nextCommandIndex
previouslyDecoded
codingPath
userInfo
decoder
underlying
parsedElement
type
value
wrongKeyType
topLevelHasNoUnkeyedContainer
topLevelHasNoSingleValueContainer
singleValueDecoderHasNoContainer
base
currentIndex
array
nullary
unary
options
help
discussion
defaultValue
keys
allValues
isComposite
named
positional
default
kind
completion
parsingStrategy
update
initial
rawValue
nextAsValue
scanningForValue
unconditional
upToNextOption
allRemainingInput
ArrayLiteralElement
Element
RawValue
Element
Iterator
content
namePositions
commandStack
parserError
_generateCompletionScript
generateCompletionScript
_elements
ArrayLiteralElement
argumentIndex
defaultValue
long
short
longWithSingleDash
value
definition
value
inputOrigin
shouldClearArrayIfParsed
elements
originalInput
rawValue
RawValue
completionScriptRequested
completionScriptCustomResponse
unsupportedShell
unknownOption
invalidOption
nonAlphanumericShortOption
missingValueForOption
unexpectedValueForOption
unexpectedExtraValues
duplicateExclusiveValues
noValue
unableToParseValue
userValidationError
noArguments
helpRequested
versionRequested
notImplemented
invalidState
missingSubcommand
wrongType
subcommandLevelMismatch
subcommandLevelMissing
subcommandLevelDuplicated
subcommandNameMismatch
expectedCommandButNoneFound
_elements
firstUnused
originalInput
inputIndex
subIndex
value
index
option
terminator
name
nameWithValue
rawValue
RawValue
complete
_subcommands
commandStack
subcommands
header
elements
discussion
isSubcommands
commandStack
abstract
usage
sections
discussionSections
label
positionalArguments
subcommands
options
components
title
content
help
validation
other
element
parent
children
recursiveSubcommand
init
lock
unlock
wait
signal
waitUntilDate:
broadcast
unsignedLongLongValue
shortValue
defaultManager
fileExistsAtPath:
moveItemAtURL:toURL:error:
copyItemAtURL:toURL:error:
fileExistsAtPath:isDirectory:
skipDescendants
nextObject
attributesOfItemAtPath:error:
setAttributes:ofItemAtPath:error:
removeItemAtPath:error:
domain
code
createSymbolicLinkAtPath:withDestinationPath:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
URLsForDirectory:inDomains:
changeCurrentDirectoryPath:
currentDirectoryPath
contentsOfDirectoryAtPath:error:
isExecutableFileAtPath:
JSONObjectWithData:options:error:
count
integerValue
initWithInteger:
doubleValue
initWithBool:
processInfo
environment
start
initWithPattern:options:error:
initWithString:
length
matchesInString:options:range:
numberOfRanges
rangeAtIndex:
substringWithRange:
initWithFileDescriptor:closeOnDealloc:
main
initWithBlock:
.cxx_destruct
dealloc
stringByReplacingMatchesInString:options:range:withTemplate:
addOperationWithBlock:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:task:didCompleteWithError:
taskIdentifier
response
statusCode
downloadTaskWithRequest:
resume
setName:
setMaxConcurrentOperationCount:
sessionWithConfiguration:delegate:delegateQueue:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
isEqual:
hash
superclass
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
description
debugDescription
isReadableFileAtPath:
rangeWithName:
range
initWithBytesNoCopy:length:freeWhenDone:
base64EncodedStringWithOptions:
}Ut]
$o,
vRQ>
8STs
LwH'
bash
GIT_SSH_COMMAND
pkg-config
uname
bash
fish
