0x%0llX [thumb] %s
0x%0llX         %s
pointer
pb pointer
branch
-arch
ppc64
-arch missing architecture name
unknown architecture %s
-rebase
-bind
-weak_bind
-lazy_bind
-export
-opcodes
-export_dot
-export_trie_nodes
-shared_region
-function_starts
-dylibs
-data_in_code
unknown option: %s
dyldinfo failed: %s
Usage: dyldinfo [-arch <arch>] <options> <mach-o file>
-dylibs           print dependent dylibs
-dr               print dependent dylibs and show any recorded DR info
-rebase           print addresses dyld will adjust if file not loaded at preferred address
-bind             print addresses dyld will set based on symbolic lookups
-weak_bind        print symbols which dyld must coalesce
-lazy_bind        print addresses dyld will lazily set on first use
-export           print addresses of all symbols this file exports
-opcodes          print opcodes used to generate the rebase and binding information
-function_starts  print table of function start addresses
-export_dot       print a GraphViz .dot file of the exported symbols trie
-data_in_code     print any data-in-code information
x86_64
x86_64-
x86_64h
x86_64h-
i386
i386-
armv6
armv6-
armv7
thumbv7-
armv7-
armv7k
thumbv7k-
armv7s
thumbv7s-
armv6m
thumbv6m-
armv7m
thumbv7m-
armv7em
thumbv7em-
arm64
arm64-
aarch64-
arm64e
arm64e-
aarch64e-
arm64_32
arm64_32-
aarch64_32-
cannot open file
fstat(%s) failed, errno=%d
cannot map file
in universal file, ppc slice does not contain ppc mach-o
in universal file, i386 slice does not contain i386 mach-o
in universal file, ppc64 slice does not contain ppc64 mach-o
in universal file, x86_64 slice does not contain x86_64 mach-o
in universal file, arm slice does not contain arm mach-o
in universal file, arm64 slice does not contain arm64 mach-o
in universal file, arm64_32 slice does not contain arm64 mach-o
in universal file, unknown architecture slice 0x%x
not a known file type
%s in %s
not a mach-o file that can be checked
__TEXT
load command #%d extends beyond the end of the load commands
load command #%d extends beyond the end of the file
for arch %s:
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
 (weak import)
%-7s %-16s 0x%08llX  %s  0x%08llX (JOP: diversity %d, address %s, %s)
true
false
%-7s %-16s 0x%08llX  %s  0x%08llX
unknown threaded bind subopcode %d
bad bind opcode %d
bad rebase opcode %d
this-image
main-executable
flat-namespace
weak
unknown special ordinal
libraryOrdinal out of range
malformed uleb128
uleb128 too big
text abs32
text rel32
!!unknown!!
malformed sleb128
segment index out of range
__thread_starts
no classic dynamic symbol table
%-12s %-16s 0x%08llX  %s
address 0x%llX is not in any segment
%-7s %-16s 0x%08llX  %s  0x%08llX with value 0x%016llX (JOP: diversity %d, address %s, %s)
%-7s %-16s 0x%08llX  %s  0x%08llX with value 0x%016llX
%-7s %-16s 0x%08llX %10s  %5lld %-16s %s%s
bind ordinal is out of range
%-7s %-16s 0x%08llX %10s  %5lld %-16s %s%s with value 0x%016llX (JOP: diversity %d, address %s, %s)
%-7s %-16s 0x%08llX %10s  %5lld %-16s %s%s with value 0x%016llX
%-12s %-16s 0x%08llX %10s %4s  %5lld %-16s %s
                                       strong          %s
%-7s %-16s 0x%08llX %10s   %5lld %s
unknown weak bind opcode %d
%-7s %-16s 0x%08llX 0x%04X %-16s %s%s
bad lazy bind opcode %d
%-7s %-16s 0x%08llX 0x%04X %-16s %s
[re-export] 
0x%08llX  
weak_def
per-thread
absolute
resolver=0x%08llX
 (from %s)
 (%s from %s)
malformed trie, node past end
malformed trie, terminalSize extends beyond trie data
malformed trie, childNodeOffset==0
malformed uleb128 extends beyond trie
uleb128 too big for 64-bits
[weak_def] 
0x%08llX %s%s
0x%04X REBASE_OPCODE_DONE()
0x%04X REBASE_OPCODE_SET_TYPE_IMM(%d)
0x%04X REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB(%d, 0x%08llX)
0x%04X REBASE_OPCODE_ADD_ADDR_ULEB(0x%0llX)
0x%04X REBASE_OPCODE_ADD_ADDR_IMM_SCALED(0x%0llX)
0x%04X REBASE_OPCODE_DO_REBASE_IMM_TIMES(%d)
0x%04X REBASE_OPCODE_DO_REBASE_ULEB_TIMES(%d)
0x%04X REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB(%d)
0x%04X REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB(%d, %d)
0x%04X BIND_OPCODE_DONE
0x%04X BIND_OPCODE_SET_DYLIB_ORDINAL_IMM(%d)
0x%04X BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB(%d)
0x%04X BIND_OPCODE_SET_DYLIB_SPECIAL_IMM(%d)
0x%04X BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM(0x%02X, %s)
0x%04X BIND_OPCODE_SET_TYPE_IMM(%d)
0x%04X BIND_OPCODE_SET_ADDEND_SLEB(%lld)
0x%04X BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB(0x%02X, 0x%08llX)
0x%04X BIND_OPCODE_ADD_ADDR_ULEB(0x%08X)
0x%04X BIND_OPCODE_DO_BIND()
0x%04X BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB(0x%08X)
0x%04X BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED(0x%08X)
0x%04X BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB(%d, 0x%08X)
0x%04X BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB(%d)
0x%04X BIND_SUBOPCODE_THREADED_APPLY
unknown bind opcode %d
node%03ld [ label=%s,re-export from dylib=%llu ];
node%03ld [ label=%s,re-export %s from dylib=%llu ];
node%03ld [ label=%s,addr0x%08llX ];
node%03ld;
node%03ld -> node%03d [ label=%s ] ;
0x%04X: 
[flags=REEXPORT ordinal=%llu] 
[flags=REEXPORT ordinal=%llu import=%s] 
[flags=STUB_AND_RESOLVER stub=0x%06llX resolver=0x%06llX] 
[addr=0x%06llX] 
[flags=THREAD_LOCAL addr=0x%06llX] 
[flags=ABSOLUTE addr=0x%06llX] 
[flags=0x%llX addr=0x%06llX] 
%s->0x%04X
from sect=%s/%s, to sect=%s/%s, count=%lld:
  %s:
       from addr=0x%0llX %s to addr=0x%0llX
 (%s)
 (%s + %lld)
<<unknown>>
pointer32
pointer64
delta32
delta64
adrp
off12
br26
movw/movt
br24
br22
off32
theaded-pointer64
32-bit pointer
64-bit pointer
arm64 ADRP
thumb2 movt low high 4 bits=0
thumb2 movt low high 4 bits=1
thumb2 movt low high 4 bits=2
thumb2 movt low high 4 bits=3
thumb2 movt low high 4 bits=4
thumb2 movt low high 4 bits=5
thumb2 movt low high 4 bits=6
thumb2 movt low high 4 bits=7
thumb2 movt low high 4 bits=8
thumb2 movt low high 4 bits=9
thumb2 movt low high 4 bits=10
thumb2 movt low high 4 bits=11
thumb2 movt low high 4 bits=12
thumb2 movt low high 4 bits=13
thumb2 movt low high 4 bits=14
thumb2 movt low high 4 bits=15
arm movt low high 4 bits=0
arm movt low high 4 bits=1
arm movt low high 4 bits=2
arm movt low high 4 bits=3
arm movt low high 4 bits=4
arm movt low high 4 bits=5
arm movt low high 4 bits=6
arm movt low high 4 bits=7
arm movt low high 4 bits=8
arm movt low high 4 bits=9
arm movt low high 4 bits=10
arm movt low high 4 bits=11
arm movt low high 4 bits=12
arm movt low high 4 bits=13
arm movt low high 4 bits=14
arm movt low high 4 bits=15
0x%0llX   %s
weak_import
re-export
upward
lazy_load
 %-12s   %s
 %-20s   
%02X 
no DR info
superblob of DRs has a different number of elements than dylib load commands
superblob of DRs invalid
data
jumptable8
jumptable16
jumptable32
jumptable32absolute
0x%08X  0x%04X  %s
rebase information (from compressed dyld info):
segment section          address     type         value
rebase information (from local relocation records and indirect symbol table):
segment      section          address     type
rebase information (from __TEXT,__thread_starts):
segment  section          address     type
bind information:
segment section          address        type    addend dylib            symbol
binding information (from external relocations and indirect symbol table):
segment      section          address        type   weak  addend dylib            symbol
weak binding information:
segment section          address       type     addend symbol
no weak binding
lazy binding information (from lazy_bind part of dyld info):
lazy binding information (from section records and indirect symbol table):
segment section          address    index  dylib            symbol
export information (from trie):
export information (from symbol table):
rebase opcodes:
no compressed rebase info
binding opcodes:
weak binding opcodes:
no compressed weak binding info
no compressed binding info
lazy binding opcodes:
no compressed lazy binding info
no compressed dyld info
digraph {
no compressed export info
no shared region info
no function starts info
attributes     dependent dylibs
dylibs                 DRs
no Designated Requirements info
offset      length  data-kind
no data-in-code info
15DyldInfoPrinterI3ppcE
15DyldInfoPrinterI3x86E
15DyldInfoPrinterI5ppc64E
15DyldInfoPrinterI6x86_64E
15DyldInfoPrinterI3armE
15DyldInfoPrinterI5arm64E
15DyldInfoPrinterI8arm64_32E
